{
  "article_text": [
    "in a 2009 paper @xcite , cameron introduced a new class of combinatorial designs , which simultaneously generalizes various well - known classes of designs , including @xmath0-designs , mutually orthogonal latin squares , orthogonal arrays and 1-factorizations of complete graphs .",
    "further work on cameron s `` generalized @xmath0-designs '' has been done by soicher @xcite and others @xcite , while the earlier papers of martin @xcite and teirlinck @xcite discuss related objects . in a remark near the end of his paper",
    ", cameron suggests that a similar definition can be made for generalizing covering designs .",
    "the purpose of this paper is to pursue such a generalization , i.e.  to define a broad class of combinatorial designs with a `` covering '' property which includes previously well - studied , and widely - applied , families of designs as special cases .",
    "analogous to @xmath0-designs and orthogonal arrays are covering designs and covering arrays , respectively ; the designs we define in this paper form a simultaneous generalization of both of these `` covering '' objects .",
    "the key difference when studying covering problems rather than `` ordinary '' designs is that the question is typically not whether the designs exist ( this is usually trivial to answer ) , but obtaining bounds on the minimum size , and constructing optimal ( or near - optimal ) designs .",
    "background material on most classes of designs can be found in the _ handbook of combinatorial designs _",
    "@xcite . however , we give some relevant definitions here .",
    "[ defn : covdes ] let @xmath1 be positive integers with @xmath2 .",
    "@xmath3-covering design _ is a family @xmath4 of @xmath5-subsets ( called _ blocks _ ) of a @xmath6-set @xmath7 , where any @xmath0-subset of @xmath7 is contained in at least @xmath8 members of @xmath4 .",
    "the notation `` @xmath0-@xmath9 covering design '' is also used in the literature ( in @xcite , for example ) . in the case where each @xmath0-subset occurs _ exactly _ @xmath8 times , we have a _",
    "@xmath0-@xmath9 design_. we remark that the definition allows for blocks to be repeated .",
    "a survey of results on covering designs can be found in mills and mullin @xcite . usually , we are only concerned with the case @xmath10 , and omit the subscript @xmath8 .",
    "the following is an example of an @xmath11-covering design , where @xmath12 : @xmath13 by hand , it is easy to verify that each pair chosen from @xmath7 is contained in at least one of the 5-sets given .    unlike @xmath0-designs ,",
    "it is clear that if @xmath2 , then a @xmath14-covering design always exists : we simply take all the @xmath5-subsets of @xmath7 and discard any that are unnecessary .",
    "of course , this is not an efficient approach .",
    "we would like our designs to have the smallest number of blocks possible : this number is called the _ covering number _ and is denoted @xmath15 .",
    "if we have parameters @xmath16 for which no covering design can exist , then we say @xmath17 ; clearly , this can only happen if @xmath18 or @xmath19 .",
    "there are many results on finding or bounding covering numbers , which can be found in @xcite .",
    "the most general bound is known as the _ schnheim bound _",
    "@xcite , and is given below .",
    "[ thm : schonheim ] where @xmath2 , we have @xmath20    however , many more specific results are known , and exact values of @xmath15 have been determined in many cases .",
    "( often , these are the result of sophisticated computer searches : see @xcite for an online database of the best - known covering designs for small values of @xmath6 , @xmath5 and @xmath0 . ) in particular , in the case where @xmath21 and the ratio @xmath22 , the exact values of @xmath15 , and constructions of covering designs of those sizes , are all known . for @xmath23 ,",
    "the constructions are due to various authors , and can be found in a paper by mills @xcite . for @xmath24 ,",
    "the constructions are much newer , and are due to greig , li and van rees @xcite .",
    "( see ( * ? ? ?",
    "* theorem vi.11.31 ) , for a summary . )",
    "an important asymptotic result is due to rdl @xcite , who in 1985 proved a conjecture of erds and hanani @xcite which asserts that for fixed values of @xmath5 and @xmath0 , @xmath25 an alternative proof of rdl s theorem was subsequently obtained by spencer @xcite , while constructions for covering designs which ( asymptotically ) meet this bound were obtained by gordon _",
    "et al . _",
    "@xcite .",
    "covering designs , or objects obtained from them , have been used in various applications , many of which are related to computing or communications .",
    "these include quorum systems in distributed databases @xcite , threshold schemes in cryptography @xcite , and decoding algorithms for error - correcting codes @xcite .",
    "[ defn : covarray ] let @xmath26 be positive integers . a _ covering array _",
    "@xmath27 is an @xmath28 array with entries from an alphabet of size @xmath29 , with the property that in every set of @xmath0 columns , each @xmath0-tuple of symbols from the alphabet occurs in at least @xmath8 rows .",
    "note that such an array where every @xmath0-tuple occurs in _ exactly _",
    "@xmath8 rows is known as an _ orthogonal array _ ( see @xcite ) . as with covering designs",
    ", we usually only treat the case where @xmath10 and omit the subscript @xmath8 .",
    "the parameter @xmath0 is called the _ strength _ of the covering array .",
    "usually we fix the parameters @xmath5 , @xmath29 and @xmath0 and want to find the smallest @xmath30 such that there exists a @xmath31 : this value of @xmath30 is called the _ covering array number _ , and is denoted by @xmath32 .",
    "the following is an example of a @xmath33 where the alphabet is @xmath34 : @xmath35 in each pair of columns , each of the @xmath36 possible combinations @xmath37 appears at least once .",
    "note the slight abuse of notation : in the case of covering designs , each row of the table is a set , whereas in the case of covering arrays , each row of the table is a @xmath5-tuple .",
    "this distinction will be important later in the paper .",
    "a more general object is the _ mixed covering array _",
    ", as defined by moura _",
    "et al . _",
    "this is a covering array where each column has its own alphabet , and these may have different sizes .",
    "if the alphabet sizes are @xmath38 , then such an object is denoted by @xmath39 , while the least possible size is denoted by @xmath40 .",
    "covering arrays , and mixed covering arrays , have a number of applications , most notably in software testing , but also in other areas such as computational biology .",
    "the survey by colbourn @xcite describes many of these applications .",
    "throughout the remainder of this paper , we will be using @xmath41-tuples , or vectors , of both integers and finite sets . we begin with explaining our terminology and notation for this .",
    "suppose @xmath42 and @xmath43 are @xmath41-tuples of integers .",
    "we write @xmath44 to mean that @xmath45 for all @xmath46 .",
    "we use the notation @xmath47 to denote the vector with @xmath41 entries , all equal to @xmath48 .",
    "there are various operations we can perform on vectors of integers , as well as the usual operations of addition , subtraction and scalar multiplication .",
    "first , given a vector @xmath49 and subset @xmath50 of the indices @xmath51 , the _ restriction _ of @xmath49 to @xmath50 ( denoted @xmath52 ) is the vector whose entries are those from @xmath49 taken from positions labelled by @xmath50 .",
    "for example , if @xmath53 and @xmath54 , then @xmath55 .",
    "let @xmath56 and @xmath57 be an @xmath41-tuple and an @xmath58-tuple respectively .",
    "define the _ concatenation _ of @xmath59 and @xmath60 to be the @xmath61-tuple @xmath62 the _ sum _ of a vector is simply the sum of its entries , while the _ weight _ of a vector is the number of non - zero entries .",
    "( note that if a vector s entries are either 0 or 1 , its sum and weight are equal . )    now suppose @xmath63 and @xmath64 are @xmath41-tuples of sets .",
    "we write @xmath65 to mean that @xmath66 for all @xmath46 , and say _",
    "@xmath67 is contained in @xmath68_. the operations of restriction and concatenation are defined for vectors of sets in the same way they were for vectors of integers .    for any set @xmath7 , we use the notation @xmath69 to denote the set of all @xmath5-subsets of @xmath7 .",
    "( thus if @xmath7 is finite and has size @xmath58 , then the size of @xmath69 is @xmath70 . )",
    "if we have an @xmath41-tuple of sets @xmath71 and an @xmath41-tuple of integers @xmath72 , define @xmath73 so a member of @xmath74 consists of an @xmath41-tuple of finite sets , of sizes @xmath75 .",
    "other pieces of notation will be defined as and when required .",
    "suppose @xmath1 are integers where @xmath76 and @xmath77 .",
    "let @xmath78 be an @xmath41-tuple of positive integers with sum @xmath6 , and let @xmath72 be an @xmath41-tuple of positive integers with sum @xmath5 , and where @xmath79 .",
    "now let @xmath80 be an @xmath41-tuple of pairwise disjoint sets , where @xmath81 .",
    "let @xmath82 be an @xmath41-tuple of _ non - negative _ integers .",
    "we say @xmath83 is _",
    "@xmath84-admissible _ if @xmath85 and @xmath86 . in a similar vein ,",
    "if @xmath87 is an @xmath41-tuple of disjoint sets , we say that @xmath88 is _",
    "@xmath89-admissible _ if each @xmath90 is a @xmath91-subset of @xmath92 , where @xmath93 is @xmath84-admissible .",
    "( note that since @xmath91 is allowed to be zero , the corresponding set @xmath90 is allowed to be empty . )",
    "[ defn : gc ] suppose @xmath94 are as above . then a _ generalized covering design _ ,",
    "@xmath95 , is a family @xmath96 of elements of @xmath74 , called _ blocks _ , with the property that every @xmath87 which is @xmath89-admissible is contained in at least @xmath8 blocks in @xmath96 .",
    "we call @xmath97 the _ point set _ of the generalized covering design ; one can think of @xmath98 as being a partition of the point set @xmath7 .",
    "however , by an abuse of notation , we usually label the elements of each @xmath92 as @xmath99 .",
    "we remark that our definition of a generalized covering design is identical to cameron s definition of a generalized @xmath0-design , except his definition requires `` exactly @xmath8 '' , where ours requires `` at least @xmath8 '' . as with covering arrays",
    ", we call the parameter @xmath0 the _ strength _ of the design . now , cameron s generalized @xmath0-designs are a common generalization of @xmath0-designs and orthogonal arrays , whereas our designs are a common generalization of covering designs and covering arrays , as we show below .",
    "[ prop : covdes ] suppose @xmath100 and @xmath101 .",
    "then a @xmath95 is a @xmath3-covering design .    [",
    "prop : covarr ] suppose @xmath102 and @xmath103 .",
    "then a @xmath95 ( with @xmath30 blocks ) is equivalent to a covering array @xmath104 .    since @xmath105",
    ", we can suppose @xmath106 are disjoint copies of an @xmath29-set @xmath107 , which we regard as our alphabet . also , since @xmath108 , each block consists of exactly one element from each copy of @xmath107 , so we can regard this as a @xmath5-tuple of elements of @xmath107 .",
    "put these @xmath5-tuples as the rows of an array .",
    "now , each @xmath84-admissible @xmath5-tuple @xmath83 will be a 0/1 vector of weight @xmath0 , so represents a @xmath0-subset of columns of the array .",
    "thus , for a given @xmath83 , the corresponding @xmath89-admissible @xmath5-tuples @xmath109 will represent all possible combinations of entries in those @xmath0 columns .",
    "consequently , each such combination must appear at least once , and so the array is a @xmath110 .",
    "carrying out the reverse of the process described above shows that a covering array @xmath110 gives a @xmath95 ( with @xmath30 blocks ) , as required .",
    "of course , there are many examples which are neither covering designs nor covering arrays .",
    "the following is a very basic example of such an object .",
    "[ example : gcdnew ] let @xmath111 , @xmath112 and @xmath21 .",
    "then the following is a @xmath113 : @xmath114 the possible admissible vectors @xmath83 are @xmath115 , @xmath116 , @xmath117 and @xmath118 . for @xmath119 , we are required to cover all possible pairs from @xmath120 in the first column . for @xmath121 ,",
    "each symbol from @xmath120 must appear in the first part of a block with each possible symbol from @xmath122 in the second part . the case @xmath123 works similarly .",
    "for @xmath124 each of the ordered pairs @xmath125 , @xmath126 , @xmath127 , @xmath128 must occur in the final two parts of some block .",
    "it is a straightforward exercise to verify that all the possibilities are covered .",
    "as is common in the study of covering problems , from now on we will consider only the case @xmath10 , and drop the subscript @xmath8 from our notation .",
    "also we note that , by the same argument as proposition  [ prop : covarr ] , a mixed covering array @xmath39 is equivalent to a @xmath95 where @xmath129 ( and with @xmath30 blocks ) .    as was the case with ordinary covering designs ,",
    "it is trivial to show that generalized covering designs @xmath130 always exist , provided that @xmath131 , simply by taking the collection of all possible blocks and discarding any that are unnecessary .",
    "so the interesting questions , as with all covering problems , are to find bounds on the minimal size of a @xmath130 , and find constructions which meet ( or come close to ) these bounds .",
    "borrowing notation from the study of ( ordinary ) covering designs , we have the following .    the _ covering number _",
    "@xmath132 denotes the smallest possible size of a generalized covering design @xmath130 .    as with ordinary covering designs",
    ", we say @xmath133 if no design exists , or if there are no possible @xmath89-admissible vectors of sets .",
    "we conclude this section by giving some basic results about generalized covering designs , and the corresponding covering numbers .",
    "our first result can be used to obtain a recursive bound on covering numbers .",
    "[ prop : reducet ] for @xmath134 , any @xmath135 is a @xmath136 , and so @xmath137    let @xmath88 be a @xmath89-admissible vector .",
    "then for any @xmath135 there is a block in the design that contains @xmath88 .",
    "clearly , any @xmath41-tuple @xmath138 with @xmath139 is also contained in this block . since any @xmath140-admissible vector of sets is contained in some @xmath89-admissible vector , the result follows .",
    "our next result shows that the case where @xmath141 is very easy . in this case , all we require is enough blocks so that each symbol from each part appears at least once in the corresponding part of a block .",
    "[ prop : tis1 ] where @xmath142 and @xmath72 , we have @xmath143",
    "a _ clique covering _ of a graph @xmath144 is a family of complete subgraphs @xmath145 of @xmath144 , called _ cliques _ , with the property that every edge of @xmath144 appears in at least one of @xmath145 .",
    "we remark that the general clique covering problem allows cliques of different sizes .",
    "if we require that all the cliques are _ @xmath5-cliques _ ( i.e.  they all have exactly @xmath5 vertices ) , then we have a _ @xmath5-uniform _ clique covering .    as with covering designs ,",
    "the question of the existence of a clique covering of a graph is trivial : the set of all edges forms a 2-uniform clique covering . on the other hand , for @xmath146",
    ", @xmath5-uniform clique coverings do not exist in general , and their existence depends on the structure of the graph .",
    "ideally , we would like a clique covering of @xmath144 to contain the smallest number of cliques possible ; this number is called the _ clique covering number _ of @xmath144 , denoted @xmath147 .",
    "the first result on clique coverings is attributed to hall @xcite , who showed that if a graph has @xmath58 vertices , then @xmath148 .",
    "this was later extended by erds _",
    "et al . _",
    "@xcite who showed the same bound holds when every edge of the graph appears in _ exactly _ one clique of the covering .",
    "other results on clique coverings can be found in a survey paper by monson _",
    "et al . _",
    "@xcite .",
    "many techniques and concepts used to construct clique coverings and generate bounds on the clique covering number can be extended to generalized covering designs of strength @xmath149 and bounds on @xmath150 .",
    "these ideas will be pursued in this section of the paper .",
    "for example , one such concept is that of _ equivalent vertices _ in a graph explored by gyrfs @xcite , which we apply to generalized covering designs in section @xmath151 .    in the case where @xmath21 , both covering designs and covering arrays are equivalent to clique coverings of particular graphs , as we will now explain .    [ prop : covdesclique ] a @xmath152-covering design is a covering of the complete graph @xmath153 by @xmath5-cliques @xmath145 , such that every edge of @xmath153 appears in at least one of @xmath145 .",
    "for instance , a steiner triple system on @xmath6 points , which is an example of a @xmath154-covering design , is a partition of @xmath153 into 3-cliques ( so each edge appears exactly once ) .    in order to explain how covering arrays give clique coverings , we need the following definition .    [ defn : multipartite ]",
    "suppose @xmath155 is a sequence of positive integers , and let @xmath156 be disjoint sets of sizes @xmath157 respectively . then the _ complete multipartite graph",
    "_ @xmath158 has vertex set @xmath159 , and two vertices @xmath160 , @xmath161 are adjacent if and only if @xmath162 .    alternatively , the complete multipartite graph @xmath158 is the complement of the disjoint union of complete graphs with vertex sets @xmath156 . in particular : if @xmath163 , we have a empty graph ; if @xmath164 we have a complete bipartite graph ; and if @xmath165 ( with @xmath41 entries ) we have the complete graph @xmath166 .    [",
    "prop : caclique ] a covering array @xmath167 is equivalent to a covering of the complete multipartite graph @xmath168 by @xmath5-cliques @xmath169 , where @xmath170 has @xmath5 entries , all equal to @xmath29 .",
    "each row of a @xmath167 defines a clique , where the symbol in position @xmath171 specifies the vertex chosen from the @xmath172 part of the graph @xmath168 . in any pair of columns of the array",
    ", every pair of symbols must be used at least once ; consequently , every edge of @xmath168 appears in at least one clique . on the other hand , given a clique covering of this type , we can construct a covering array by reversing this process .    for further details , see danziger",
    "_ et al . _",
    "@xcite , maltais @xcite , or ronneseth and colbourn @xcite .",
    "we remark that mixed covering arrays ( with @xmath21 and @xmath10 ) can also be interpreted as clique coverings of complete multipartite graphs in exactly the same way , but where the parts may have different sizes .    in order to describe generalized covering designs @xmath113 in terms of clique coverings",
    ", we need to define a suitable graph . to do this , we need the following graph - theoretical idea .    [",
    "defn : join ] let @xmath173 and @xmath174 be graphs with @xmath175",
    ". then the _ join _ of @xmath176 and @xmath177 , denoted @xmath178 , is the graph with vertex set @xmath179 , and whose edge set is @xmath180 .",
    "for example , the join of two complete graphs is also complete , and the join of two empty graphs is a complete bipartite graph .",
    "we note that this can be extended to a join of any number of graphs , and that this operation is associative .",
    "now suppose that @xmath142 and @xmath72 are vectors of positive integers with @xmath181 .",
    "let @xmath182 where @xmath183 represents the complement of @xmath184 ( that is , the empty graph ) . form the graph @xmath185 consisting of the join of the graphs @xmath186 such that @xmath187 has vertex set @xmath188 , where @xmath81 and each @xmath92 is the set of vertices of the corresponding @xmath186 .",
    "there are two important special cases .",
    "first , if all @xmath189 , then @xmath187 is precisely the complete multipartite graph @xmath168 .",
    "second , if all @xmath190 , then @xmath187 is isomorphic to the complete graph @xmath153 ( where @xmath191 ) , but where the vertex set has a specific partition into parts of sizes @xmath192 .",
    "[ thm : gcgraph2 ] let @xmath187 be the graph described above .",
    "then a generalized covering design @xmath113 is equivalent to an edge covering of @xmath187 using a collection of cliques of size @xmath5 , with the property that for each clique in the covering , @xmath193 vertices of the clique come from the set @xmath92 ( for each @xmath171 ) .",
    "suppose @xmath194 is a @xmath113 .",
    "now , from each block in @xmath194 , we can easily construct a clique in @xmath187 .",
    "think of the vertex set of @xmath187 as being the point set of @xmath194 , namely @xmath195 .",
    "a block of @xmath194 contains @xmath193 points from each part @xmath92 , and the subgraph of @xmath187 induced by the corresponding vertices is necessarily a clique .",
    "now , the admissible vectors @xmath83 have two possible forms : ( i ) a vector with two entries  1 and the rest  0 ; and ( ii ) a vector with a single entry of 2 , and all other entries  0 . type ( i )",
    "vectors ensure that this collection of cliques covers all edges between parts .",
    "type ( ii ) vectors are only possible with the single  2 in position  @xmath171 with @xmath190 ; these vectors ensure that these cliques cover all edges within each part with @xmath190 .",
    "consequently , these cliques cover all the edges of @xmath187 , and so we have a clique covering .",
    "a similar argument works in the reverse direction : given a clique covering of @xmath187 with the specified form , each clique gives us a block , and the way @xmath187 was constructed ensures these blocks form a @xmath113 .",
    "[ example : cliquegc ] recall example  [ example : gcdnew ] , where we saw a @xmath113 with @xmath111 and @xmath112 . by theorem  [ thm : gcgraph2 ] , this can be viewed as a clique covering of the appropriate graph @xmath187 using copies of @xmath196 , as shown in figure  [ figure : cliquegc ] .",
    "we can use this interpretation to obtain various bounds on covering numbers @xmath197 , as well as to obtain methods of constructing generalized covering designs @xmath113 . in some cases",
    ", we can use these results to obtain designs which are optimal .",
    "the simplest bound on @xmath197 can be obtained by counting edges . when covering a graph @xmath144 ( with @xmath198 edges ) by a collection of subgraphs isomorphic to @xmath199 , each of which has @xmath200 edges , then clearly the minimum number of subgraphs required",
    "is @xmath201 .",
    "this observation then provides the following bound : @xmath202 using the interpretation in theorem  [ thm : gcgraph2 ] , the number of edges in @xmath187 is @xmath203 where the summation is over the indices @xmath171 such that @xmath189 , and we use the convention that @xmath204 .",
    "however , an alternative way to write @xmath205 is @xmath206 as the first summation counts the edges in each @xmath186 and the second summation counts the edges joining each @xmath186 to each @xmath207 ( for @xmath162 ) .",
    "now , since the number of edges in a clique of size @xmath5 is @xmath208 , we have shown the following .",
    "[ prop : naive ] using the notation above , @xmath209      recall the notion of _ restriction _ which we introduced earlier . in this subsection",
    ", we will show how this operation can be used to construct generalized covering designs , and to obtain bounds on @xmath197 .",
    "[ prop : restriction ] let @xmath194 be a generalized covering design @xmath113 with @xmath30 blocks , and suppose @xmath210 is non - empty .",
    "then , provided @xmath211 , there exists a @xmath212 with @xmath30 blocks , and in particular @xmath213 .",
    "we exclude the case @xmath214 as no @xmath215-covering design can exist ; however , since we adopted the convention that @xmath216 , the bound still holds , albeit for trivial reasons .",
    "so we suppose @xmath217 and construct the graph @xmath187 as in theorem  [ thm : gcgraph2 ] above . clearly , the graph @xmath218 is an induced subgraph of @xmath187 , obtained simply by removing the parts not indexed by @xmath50 .",
    "now , each block of @xmath194 is a clique in @xmath187 with @xmath193 vertices in part @xmath92 , and if we restrict these cliques to those parts in @xmath218 , every edge of @xmath218 must be covered by at least one clique . consequently , these @xmath30 cliques form a clique covering of @xmath218 with the required property , and thus correspond to a @xmath212 with @xmath30 blocks .",
    "the bound @xmath213 follows immediately .",
    "we denote the @xmath212 obtained from @xmath194 in the proof of proposition  [ prop : restriction ] by @xmath219 , and call this the _ restriction of @xmath194 to @xmath50_. now , by restricting in all possible ways , we obtain the following lower bound .    [ cor : restriction ] let @xmath220 denote the collection of all non - empty subsets of @xmath221 .",
    "then we have @xmath222    of course , the nave edge - counting bound in proposition [ prop : naive ] can then be applied to the right - hand side to obtain a lower bound in terms of the entries of @xmath170 and @xmath223 .",
    "unfortunately , the bound in corollary [ cor : restriction ] involves checking an exponential number of cases , so a more practical bound can be obtained just by looking at subsets of size @xmath224 . in this situation",
    ", the restricted design has only one part , and is thus an ordinary @xmath225-covering design .",
    "consequently , we have the following corollary .",
    "[ cor : restriction2 ] for vectors @xmath226 and @xmath227 , we have @xmath228    we were able to exclude indices where @xmath189 from the above , as @xmath216 .",
    "of course , if @xmath229 for some @xmath171 ( i.e.  our design is not a ( mixed ) covering array ) , we can then use the schnheim bound ( theorem  [ thm : schonheim ] ) to obtain @xmath230    we also have another straightforward application of restriction , which allows us to safely ignore parts where @xmath231 .",
    "[ prop : allvertexparts ] suppose @xmath226 and @xmath227 are vectors of positive integers with @xmath131 .",
    "let @xmath50 be the set of indices where @xmath232 .",
    "then , provided that @xmath233 , we have @xmath234 .",
    "we require that @xmath233 in order to ensure that the graph @xmath218 is not an empty graph ( in which case , we would have @xmath235 and the result would not hold ) .    from proposition  [ prop : restriction ] , we know that @xmath213 ; to show that equality holds , we will show that given a @xmath212 , we can obtain a @xmath113 with the same number of blocks .",
    "suppose without loss of generality that @xmath236 , and let @xmath237 be a @xmath212 , which we treat as a clique covering of @xmath218 .",
    "now , to each clique in @xmath237 , we add @xmath238 new parts of sizes @xmath239 . in doing",
    "so we obtain a @xmath113 : ( i ) every edge we need to cover in parts @xmath240 is already covered in @xmath237 ; ( ii ) any edge between parts @xmath241 appears in every block , as does any edge within a part @xmath242 ( where @xmath243 ) ; ( iii ) every edge joining a part @xmath242 to a vertex @xmath244 is covered , as the vertex @xmath6 must appear in some block of @xmath237 .",
    "we remark that proposition  [ prop : allvertexparts ] works for arbitrary values of @xmath134 , although the argument using clique coverings ca nt be applied .",
    "the notion of _ equivalence _ is a very useful one , when it comes to both bounds and constructions .",
    "it is inspired by the notion of _ equivalent vertices _ for clique coverings , as studied by gyrfs @xcite .    as usual , we have vectors @xmath226 and @xmath227 with @xmath131 .",
    "we define an equivalence relation @xmath245 on the set of indices @xmath221 by @xmath246 if and only if @xmath247 and @xmath248 .",
    "( sometimes , it is convenient to talk about @xmath249 being equivalent to @xmath250 . ) in order to demonstrate the usefulness of this idea , we have the following lemma .",
    "[ lemma : equiv ] where @xmath170 and @xmath223 are as above , let @xmath194 be a @xmath113 of size @xmath30 .",
    "define vectors @xmath251 and @xmath252 where @xmath253 is equivalent to some fixed @xmath249 where @xmath254 . then there exists a @xmath255 of size @xmath30 .",
    "we think of @xmath194 in terms of a clique covering of @xmath187 ( cf .",
    "theorem  [ thm : gcgraph2 ] ) with vertex set @xmath256 . since @xmath254 , we observe that @xmath257 is precisely the graph obtained from @xmath187 by joining a complete graph @xmath258 , i.e.  @xmath259 , and where @xmath257 has vertex set @xmath260 ( where @xmath261 ) . since @xmath262 , we have a one - to - one correspondence between the vertices in @xmath92 and in @xmath263 ; label these as @xmath264 and @xmath265 ( of course , @xmath266 ) .",
    "choose some @xmath267 ( i.e.  a clique in @xmath187 ) : without loss of generality , assume this clique contains vertices @xmath268 from @xmath92 .",
    "now form a new clique @xmath269 by taking all vertices of @xmath270 , together with @xmath271 .",
    "we claim that the set @xmath272 is a clique covering of @xmath257 corresponding to a @xmath255 .",
    "to show this , we need to consider any pair of adjacent vertices of @xmath257 , and show that the edge joining them is covered by at least one member of @xmath273 .",
    "now , any edge which lies in the induced subgraph @xmath187 is automatically covered ( because we had a clique covering of @xmath187 to begin with ) .",
    "also , any edge @xmath274 ( where @xmath275 is a vertex of @xmath187 not in @xmath92 ) is covered , as the corresponding edge @xmath276 is in some clique in @xmath194 . finally , since @xmath190 , we know that each edge @xmath277 is covered by some clique @xmath267",
    ". thus both the vertices @xmath278 and @xmath279 are in @xmath280 , and so it follows that @xmath269 covers the edges @xmath281 , @xmath282 and @xmath283 .",
    "thus all types of edge in @xmath257 are covered by at least one clique in @xmath273 , and we are done .",
    "the proof of lemma  [ lemma : equiv ] demonstrates the reason for the requirement that @xmath190 in the statement of the lemma : if @xmath284 , we would not be able to cover edges of the form @xmath282 using this construction . with that in mind , without loss of generality",
    "we assume that @xmath285 , where all entries of @xmath286 are at least  2 .",
    "now write @xmath287 , where @xmath288 for @xmath289 , and where @xmath290 for @xmath291",
    ". then we have the following theorem .",
    "[ thm : equiv ] suppose we have vectors of positive integers @xmath292 as above , where @xmath293 for all @xmath171 .",
    "let @xmath294 be a set of equivalence class representatives for @xmath295 and @xmath286 under the relation  @xmath245 .",
    "then we have @xmath296    the inequality @xmath297 follows from proposition  [ prop : restriction ] , by restricting to @xmath294 .",
    "the reverse inequality follows by repeatedly applying lemma  [ lemma : equiv ] to a minimal @xmath298 , to obtain a @xmath299 of size @xmath300 .    in the special case where all entries of @xmath223 are at least 2",
    ", we have the following straightforward corollary .",
    "[ cor : equiv ] suppose @xmath190 for all @xmath171 , and that @xmath294 is a set of equivalence class representatives for @xmath170 and @xmath223 under the relation @xmath245 .",
    "then we have @xmath301      the operations of point deletion and block expansion give us another way to construct new generalized covering designs from existing ones .",
    "suppose that @xmath170 and @xmath223 are our usual vectors of integers , where @xmath226 lists the sizes of the sets @xmath302 respectively .",
    "now , by _ point deletion _ we mean the operation of removing some points from each part @xmath92 , to obtain @xmath303 , with sizes @xmath304 respectively ( so that @xmath305 ) .",
    "a similar operation is _ block expansion _",
    ", where we keep @xmath170 fixed but increase the sizes of our blocks from @xmath223 to @xmath306 , where @xmath307 .    in the following discussion , we once again think of our @xmath113 in terms of a clique covering of @xmath187 ( cf .",
    "theorem  [ thm : gcgraph2 ] ) with vertex set @xmath195 .",
    "our first lemma concerns point deletion .",
    "[ lemma : deletion ] let @xmath194 be a @xmath113 of size @xmath30 , and suppose @xmath308 satisfies @xmath309 .",
    "then there exists a @xmath310 of size at most @xmath30 .",
    "suppose we have deleted the vertex @xmath311 .",
    "for each clique in @xmath194 which includes the vertex @xmath48 , we remove @xmath48 and replace it with another vertex @xmath312 , which is not already in that clique ; since @xmath313 , we know that such a vertex must exist .",
    "we repeat this procedure until we are left only with the vertices in @xmath314 .",
    "it is straightforward to see that the cliques obtained will cover all edges in @xmath315 .",
    "note that it is possible that this procedure may introduce some repeated blocks , so we remove any duplicates .",
    "thus we can only be sure our @xmath310 has an upper bound of at most @xmath30 blocks , rather than exactly @xmath30 .",
    "a counterpart to lemma  [ lemma : deletion ] is the following , which is concerned with block expansion .",
    "[ lemma : expansion ] let @xmath194 be a @xmath113 of size @xmath30 , where @xmath190 for all @xmath171 , and suppose @xmath306 satisfies @xmath316 .",
    "then there exists a @xmath317 of size at most @xmath30 .    since @xmath190 for all @xmath171",
    ", it follows that @xmath318 .",
    "thus every edge of @xmath319 is already covered by the cliques in @xmath194 , which each have @xmath193 vertices chosen from @xmath92 ( for every @xmath171 ) .",
    "adding extra vertices to each clique , in parts where @xmath320 ( so that there are now @xmath321 vertices chosen from each @xmath92 ) , does not affect this .",
    "again , we note that it is possible that this procedure may introduce some repeated blocks , so we remove any duplicates and thus only have an upper bound of @xmath30 rather than equality .    of course , in both lemma  [ lemma : deletion ] and lemma  [ lemma : expansion ] ,",
    "if the generalized design @xmath194 that we begin with is optimal , there is no guarantee that the resulting design will be optimal .",
    "however , the two constructions do yield the following important bound .",
    "[ thm : delexp ] suppose we have vectors of positive integers @xmath322 , each of length @xmath41 , where @xmath190 for all @xmath171 , and which satisfy @xmath323 and @xmath324",
    ". then we have @xmath325 and @xmath326    we can combine the operations of point deletion and block expansion , and the notion of equivalence , to obtain our next bound , which is perhaps the most useful so far .",
    "suppose we have our usual vectors @xmath226 and @xmath227 .",
    "define @xmath327 , and let @xmath328 denote the vector of @xmath41 entries , all equal to @xmath329 ; in a similar fashion , define @xmath330 to be the vector with @xmath41 entries , all equal to @xmath331 . clearly , @xmath332 and @xmath333 .",
    "[ thm : minimax ] suppose we have vectors @xmath170 and @xmath223 , where each @xmath190 . then @xmath334    using our results above ,",
    "we obtain : @xmath335 as required .",
    "[ cor : minimaxpair ] suppose we have vectors @xmath170 and @xmath223 , with an index @xmath171 where @xmath336 and @xmath337",
    ". then @xmath338    the inequality @xmath339 is given by theorem  [ thm : minimax ] .",
    "we obtain reverse inequality by restricting to the part @xmath171 where @xmath336 and @xmath340 , and applying proposition  [ prop : restriction ] .",
    "this last corollary is especially useful , as many of the covering numbers @xmath341 are known exactly , and thus we are able to obtain the sizes of optimal generalized covering designs in many instances .",
    "all of our proofs in this section have been constructive . as a direct consequence",
    ", we have an algorithm for actually constructing generalized covering designs from a single covering design . furthermore , if there is a part with @xmath342 and @xmath4 is optimal , then ( provided that @xmath343 ) corollary  [ cor : minimaxpair ] ensures that designs obtained using this construction are optimal .",
    "[ constr : construction ] suppose we are given vectors @xmath170 and @xmath223 , where @xmath190 for all @xmath171 , and we have an optimal @xmath344-covering design @xmath4 .",
    "then we construct a @xmath113 as follows :    * put a copy of @xmath4 on each part ; * in any part where @xmath345 , delete the extra points , replacing them with a `` placeholder '' symbol @xmath346 ; * in any part where @xmath347 , add @xmath348 placeholders to each block ; * in each block , replace the placeholders greedily , ensuring that no symbol is repeated in a block ; * remove any repeated blocks .",
    "we illustrate this construction with an example .",
    "[ example : fano ] suppose @xmath349 and @xmath350 .",
    "so we have @xmath351 and @xmath352 : an optimal @xmath353-covering design with 7 blocks is , of course , the fano plane , whose blocks are @xmath354    so our `` pre - design '' looks like : @xmath355 having filled the placeholder positions , and using the least point available at each stage , we then obtain : @xmath356 as we have @xmath357 occurring in a part , we are guaranteed that this @xmath113 is optimal .    in situations where there is no pair @xmath342 ,",
    "then it is possible to construct pathological examples which are far from optimal , even if beginning with an optimal covering design .",
    "for instance , if @xmath358 and @xmath359 , then this construction requires a @xmath360-covering design , which has size at least @xmath361 .",
    "we will see later that 7 blocks can be used !",
    "we conclude this subsection with a remark concerning the placeholder symbol @xmath346 . in many constructions of covering arrays ( see  @xcite , for instance ) , a `` do nt care '' symbol is often appended to the alphabet .",
    "this can then be replaced arbitrarily without affecting the requirement that all @xmath0-tuples of symbols be covered in every @xmath0-subset of columns , which can be particularly useful in applications .",
    "so , in our construction , it may actually be beneficial to leave the placeholder symbols _ in situ _",
    ", rather than filling those positions greedily .",
    "this is yet another operation to obtain a new generalized covering design from an existing one , this time by combining two parts into one .    as usual , we let @xmath226 and @xmath227 , and suppose @xmath194 is a @xmath362 .",
    "suppose further that we have two indices where the entries of @xmath223 are at least  2 , which without loss of generality we assume are @xmath363 and @xmath364 .",
    "now let @xmath365 and @xmath366 .",
    "the operation of _ amalgamation _ allows us to construct a @xmath367 from @xmath194 . for each block @xmath368 , let @xmath369 .",
    "finally , let @xmath370 .",
    "[ prop : amalg ] the design @xmath371 defined above is a @xmath367 , and so @xmath372 .",
    "once more , we think of the generalized covering design @xmath194 as a clique covering of the graph @xmath187 .",
    "now , observe that the graph @xmath373 must be isomorphic to @xmath187 , except that the parts @xmath374 and @xmath375 of @xmath376 , which have sizes @xmath377 , @xmath378 respectively , can be thought of as one larger part of size @xmath379 .",
    "each block @xmath380 corresponds to a clique in @xmath187 with @xmath363 vertices in @xmath374 and @xmath364 vertices in @xmath375 , while the corresponding block @xmath381 gives exactly the same clique in @xmath373 ( with @xmath382 vertices in @xmath383 ) .",
    "since the two graphs are isomorphic , and @xmath194 and @xmath371 contain the same cliques , it follows that @xmath371 covers all the edges in @xmath373 .",
    "the above result can be used to prove the following .",
    "[ prop : amalg2 ] suppose we have vectors of positive integers @xmath226 and @xmath227 with @xmath131 , and let @xmath384 be a vector of integers satisfying @xmath385 for all @xmath171 .",
    "then @xmath386    by repeatedly applying proposition [ prop : amalg ] above , we have @xmath387 @xmath388 then we apply proposition [ prop : allvertexparts ] to show that this is equal to @xmath389 as required .",
    "we remark that amalgamation can sometimes give much better results than the algorithm described in subsection  [ subsect : construction ] .",
    "starting from the design in example  [ example : fano ] , we can use proposition  [ prop : amalg ] to obtain a @xmath390 with 7 blocks , by amalgamating the first and second parts .",
    "this must be optimal , as it meets the bound in corollary  [ cor : restriction ] .",
    "however , if we applied construction  [ constr : construction ] to obtain a @xmath390 from scratch , we would need to begin with an @xmath391-covering design .",
    "the smallest such covering design has 19 blocks ( see gordon _",
    "et al . _",
    "@xcite ) , meeting the schnheim bound . taking that design , applying construction  [ constr : construction ] to it , and filling in the placeholders lexicographically , gives a @xmath390 with 19 blocks , which is considerably larger that that obtained using amalgamation .",
    "proposition [ prop : amalg2 ] can be combined with the argument of theorem [ thm : minimax ] to obtain the bound @xmath392 ( provided that @xmath343),which is often a considerable improvement .",
    "for example , @xmath393 which compares with the bound of @xmath394 from theorem  [ thm : minimax ] .",
    "( note that @xmath395 , while @xmath361 , so this is definitely an improvement ! )",
    "there is an another interpretation of strength-2 generalized covering designs in terms of graphs , which while similar to that developed in section 3 , gives improved bounds on @xmath197 for certain parameter sets .",
    "suppose we have vectors @xmath226 and @xmath227 , with @xmath131 , as usual . as well as the interpretation in terms of clique coverings , we can also regard a @xmath113 as an edge - covering of a complete multipartite graph , as explained below .",
    "[ thm : gcgraph ] suppose we have @xmath142 and @xmath72 , where @xmath131 . then a generalized covering design @xmath113 is equivalent to an edge - covering of the complete multipartite graph @xmath168 by complete multipartite graphs @xmath396 , where :    * for each copy of @xmath396 , the vertices contained in the part corresponding to @xmath193 are chosen from the vertices of @xmath168 corresponding to @xmath397 ; * the set of the complements of each copy of @xmath396 covers all edges of the complement of @xmath168 in parts where @xmath190 .",
    "each block of a @xmath113 corresponds to a copy of the complete multipartite graph @xmath396 satisfying condition ( i ) .",
    "now , we have two types of admissible vector @xmath83 .",
    "first , we have vectors @xmath83 consisting of two @xmath224s and the rest @xmath398s correspond to pairs of vertices in distinct parts : the fact that we have an edge - covering ensures that these pairs are contained within some block .",
    "second , we have vectors @xmath83 with exactly one @xmath149 in a position @xmath171 with @xmath190 , and @xmath398s elsewhere .",
    "these correspond to pairs of vertices within a part , and condition ( ii ) ensures that these pairs are contained within some block .",
    "we remark that in the case of covering arrays ( i.e.  where @xmath129 ) , the two interpretations are the same : in this case , the complete multipartite graph @xmath396 is actually a complete graph , so covering with copies of @xmath396 actually gives a clique covering .    using this second interpretation",
    ", we can obtain various bounds on @xmath197 , which do not always correspond to those obtained in section  3 .",
    "the simplest of these is the nave bound for covering a graph with isomorphic subgraphs , analogous to that in proposition [ prop : naive ] . simply by counting the number of edges in a complete multipartite graph ,",
    "we arrive at the following result .",
    "[ prop : naivemulti ] where @xmath142 and @xmath72 and @xmath131 , we have @xmath399    depending on the precise nature of the entries of @xmath170 and @xmath223 , it is quite possible that either of propositions [ prop : naive ] or [ prop : naivemulti ] will give a better bound .    the notion of restriction , introduced in section 3.2 , can also be applied to this interpretation .",
    "suppose @xmath50 is a subset of the index set @xmath221 .",
    "now , we can restrict @xmath170 and @xmath223 to @xmath50 , and will still have a covering as described in theorem [ thm : gcgraph ] , provided that @xmath400 .",
    "( if @xmath401 , then both @xmath402 and @xmath403 have no edges , so the construction is vacuous . )",
    "this gives rise to the following bound .",
    "[ prop : restrictmulti ] for @xmath226 and @xmath227 where @xmath131 , we have @xmath404    as with the bound in corollary [ cor : restriction ] , this bound involves checking an exponential number of cases , so a more practical bound would be useful .",
    "we can obtain one by restricting only to pairs of indices , i.e.  where @xmath405 ( for some @xmath406 ) , as shown below .",
    "[ prop : restrictpairs ] for @xmath226 and @xmath227 where @xmath131 , we have @xmath407    however , a refinement of this bound can be obtained as a special case of a bound on @xmath132 for arbitrary values of @xmath0 , as given in the next section .",
    "when considering generalized covering designs of strength  @xmath134 , it is more difficult to obtain bounds on @xmath132 as there are a variety of possible @xmath84-admissible vectors @xmath83 .",
    "however , one can obtain bounds by considering just one possible `` shape '' of such vectors . in this section , we consider only the @xmath84-admissible vectors consisting of @xmath0 entries of  1 and all other entries  0 , to obtain a bound which is an analogue of the schnheim bound ( theorem  [ thm : schonheim ] ) .",
    "[ prop : revised_bound ] suppose that @xmath226 and @xmath227 where @xmath131 , and that @xmath408 .",
    "let @xmath409 , and let @xmath4 be a collection of blocks in @xmath74 which contain each @xmath0-tuple of the form @xmath410 , where @xmath411 .",
    "then @xmath412    the proof is by induction on @xmath0 . if @xmath141 , then the result is obvious .",
    "suppose that the result holds for any set @xmath413 .",
    "now choose @xmath409 , and let @xmath4 be as defined in the statement of the proposition .",
    "note that the total number of occurences ( with repetition ) of elements of @xmath414 in @xmath4 is @xmath415 .",
    "moreover , for each element @xmath416 , @xmath4 must contain the @xmath0-tuple @xmath417 for any choice of elements @xmath411 , where @xmath418 . by the induction hypothesis",
    ", it follows that @xmath4 must contain at least @xmath419 blocks for each element of @xmath414 . in total",
    ", this means that the number of occurences ( with repetition ) of elements of @xmath414 in @xmath4 is at least @xmath420 hence @xmath421 and so we conclude that @xmath412    by considering all possible choices of @xmath422 , we obtain the following bound as a direct consequence .",
    "[ cor : allposs ] if @xmath226 and @xmath227 where @xmath131 , and if @xmath423 , then @xmath424    given @xmath425 , consider the vector @xmath83 which has 1 in positions @xmath426 , and 0 elsewhere ; this vector will always be @xmath84-admissible regardless of @xmath223 . corresponding to the vector @xmath83 , we obtain that the set @xmath96 of blocks of a @xmath427 must contain each @xmath0-tuple of the form @xmath410 , where @xmath411 . by proposition  [ prop : revised_bound ]",
    ", the number of blocks must therefore be at least @xmath428    in the special case where @xmath21 , this reduces to the following .",
    "[ cor : restrictpairs2 ] for @xmath226 and @xmath227 where @xmath131 , we have @xmath429    we remark that this second corollary gives the desired refinement of the bound in proposition  [ prop : restrictpairs ] .",
    "our first construction is based on the block - recursive construction for covering arrays that appears in poljak _ et al .",
    "_  @xcite and also stevens and mendelsohn  @xcite , and which was later extended to mixed covering arrays by colbourn _",
    "_  @xcite .",
    "this construction uses two strength-@xmath0 generalized covering designs to construct another strength-@xmath0 generalized covering design .",
    "we recall the notion of concatenation of vectors from section [ section : defn ] .",
    "[ thm : blockrec ] suppose @xmath142 and @xmath72 are @xmath58-tuples with @xmath131 and @xmath430 and @xmath431 are @xmath58-tuples with @xmath432 .",
    "assume that @xmath433 is a generalized covering design @xmath130 with @xmath434 blocks , and that @xmath435 is a @xmath436 with @xmath437 blocks .",
    "then there exists a @xmath438 with @xmath439 blocks .",
    "assume that @xmath440 are the blocks of @xmath433 and @xmath441 are the blocks of @xmath435 .",
    "since each @xmath442 is an @xmath41-tuple of sets of sizes @xmath75 , and each @xmath443 is an @xmath58-tuple of sets of sizes @xmath444 , we have that @xmath445 is the @xmath61-tuple of sets ( of sizes labelled by @xmath446 ) formed by the concatenation of @xmath442 and @xmath443 .",
    "we claim that the set of blocks @xmath447 form a generalized covering design @xmath448 with @xmath439 blocks .    to see that this claim is true , let @xmath449 be any @xmath61-tuple of sets that is @xmath450-admissible .",
    "we will prove that there exists some block @xmath445 that contains @xmath88 .",
    "consider the @xmath41-tuple @xmath451 formed by taking the first @xmath41 sets in @xmath88 .",
    "clearly , @xmath452 , and since @xmath433 is a generalized covering design , by proposition  [ prop : reducet ] , the @xmath58-tuple @xmath453 is contained in some block @xmath442 of @xmath96 .",
    "similarly , if we define @xmath454 , there is a block @xmath455 of @xmath435 that contains @xmath456 .",
    "thus @xmath457 is contained in the block @xmath445 .",
    "this construction can be used to get an upper bound on the size of generalized covering designs .",
    "[ cor : bcbound ] suppose we have @xmath142 and @xmath72 with @xmath131 , and @xmath458 and @xmath459 with @xmath432 .",
    "then for all appropriate values of @xmath0 , @xmath460    unfortunately , this construction can lead to very poor upper bounds on the number of blocks in a generalized covering design .",
    "for example , consider a @xmath113 with the condition that no entries of @xmath223 are equal to one .",
    "then the block - recursive construction produces the bound @xmath461 whereas it follows from corollary  [ cor : equiv ] the actual value of @xmath462 is equal to @xmath463 ( again , provided that all of the entries of @xmath223 are at least two ) .",
    "however , there is a modification of this construction that in some circumstances produces a better bound than the one given in corollary  [ cor : bcbound ] . again , suppose that @xmath142 and @xmath72 with @xmath131 , that @xmath430 and @xmath431 with @xmath432 , and that we have two generalized covering designs , a @xmath130 and a @xmath436 .",
    "assume that @xmath440 are the blocks of the first design and @xmath441 are the blocks of the second design , and further assume that @xmath464 .",
    "the key to this improvement is to consider the set of @xmath434 blocks @xmath465 ( in the last @xmath466 blocks of  @xmath467 , the @xmath41-tuple @xmath468 could be replaced with any block of @xmath4 . )",
    "we note that @xmath467 contains any @xmath450-admissible vector @xmath449 with the condition that either @xmath469    to extend the set  @xmath467 to a generalized covering design , we need to add blocks that will cover all the remaining @xmath450-admissible vectors .",
    "these vectors will all be of the form @xmath449 where @xmath470 it is possible to construct such blocks by applying the block - recursive construction to a and a @xmath471 . using this modification to the block - recursive construction",
    ", we obtain the following bound .",
    "[ thm : blockrecsimp ] suppose we have @xmath142 and @xmath72 with @xmath131 , and @xmath430 and @xmath431 with @xmath432 .",
    "then for all suitable @xmath472 , @xmath473    two special cases are worth mentioning .",
    "first , in the case @xmath141 , we obtain @xmath474 ( thanks to the convention that @xmath475 ) ; in fact , proposition  [ prop : tis1 ] ensures that this bound holds with equality .",
    "second , in the case where @xmath21 , theorem  [ thm : blockrecsimp ] can be simplified by applying proposition  [ prop : tis1 ] .",
    "[ cor : blockrecsimp2 ] suppose we have @xmath142 and @xmath72 with @xmath131 , and @xmath430 and @xmath431 with @xmath432 .",
    "then the size of a @xmath476 is no more than @xmath477    note that , because the modified block - recursive construction of theorem  [ thm : blockrecsimp ] has two stages , it is possible that the design it produces may have repeated blocks ( even if the inputted designs did not ) .",
    "we now illustrate this construction of theorem  [ thm : blockrecsimp ] with an example ( and one where that possibility arises ) .",
    "let @xmath478 below be the blocks of a @xmath479 .",
    "@xmath480    further , let @xmath481 below be the blocks of a @xmath482 .",
    "@xmath483    these two designs can be used to build a @xmath484 with the @xmath485 blocks @xmath486 given below . @xmath487    the blocks @xmath488 through to @xmath489 are formed as the concatenation of blocks of the original designs .",
    "the final @xmath490 blocks are formed by applying the block - recursive construction on a @xmath491 and a @xmath492 .",
    "note that @xmath493 , so we have a repeated block , and thus @xmath494 may be deleted leaving a @xmath495 with 15 blocks .",
    "we note that theorem  [ thm : minimax ] gives an upper bound of @xmath496 blocks for a generalized covering design with these parameters , while our various lower bounds show that the minimum number of blocks is at least 10 ( this is obtained by using corollary  [ cor : restriction2 ] ) .      in a 1922 paper",
    "@xcite , macneish gave a recursive construction for mutually orthogonal latin squares of order @xmath497 from those of orders @xmath41 and @xmath58 .",
    "this was subsequently generalized to orthogonal arrays in 1952 by bush  @xcite , whose construction can also be applied to covering arrays .",
    "our second recursive construction for generalized covering designs is based on macneish s approach .",
    "this construction takes two strength-@xmath149 generalized covering designs and produces a third strength-@xmath149 generalized covering design . as was the case with the block - recursive construction , we need to define an operation on vectors to define this construction .",
    "let @xmath78 and @xmath498 be two @xmath41-tuples of positive integers .",
    "define the _ hadamard product _ of @xmath170 and @xmath295 to be @xmath499    we also need to define an operation on sets .",
    "let @xmath500 be a subset of @xmath501 and @xmath502 a subset of @xmath503 .",
    "then define @xmath504 noting that @xmath505 is a subset of @xmath506 of size @xmath507 .",
    "now , if @xmath508 and @xmath509 are two @xmath41-tuples of sets and @xmath78 , we define @xmath510    [ thm : macneish ] suppose that @xmath142 and @xmath72 with @xmath131 , and that @xmath458 and @xmath459 with @xmath432 .",
    "now suppose we have generalized covering designs @xmath113 and @xmath511 with @xmath434 and @xmath437 blocks respectively .",
    "then there exists a with @xmath439 blocks .",
    "let @xmath440 be the blocks of the first design and @xmath441 be the blocks of the second design .",
    "then we claim that the collection @xmath512 of @xmath41-tuples of sets forms the blocks of a @xmath513 .",
    "clearly , @xmath514 .",
    "let @xmath515 be any @xmath516-admissible vector .",
    "we will show that this is contained in some block of the form @xmath517 .",
    "first , consider the case where @xmath88 has one entry a set of size  2 , and all other entries are the empty set . in particular , we have that @xmath518 for some @xmath519 and that @xmath520 for all @xmath521 . then the set @xmath522 is a subset of @xmath99 .",
    "( we use the convention that if @xmath523 , then @xmath524 , rather than 0 . )",
    "construct an @xmath41-tuple @xmath453 of sets by taking the @xmath525 entry of @xmath453 to be @xmath526 and all other entries the empty set .",
    "then @xmath453 is a @xmath527-admissible vector .",
    "since @xmath96 is the set of blocks of a generalized covering design , there is a block @xmath442 that contains @xmath453 .    similarly , the set @xmath528 is a subset of @xmath529 ( since both @xmath530 and @xmath531 ) .",
    "then the @xmath41-tuple @xmath456 that has @xmath532 in the entry @xmath171 and the empty set in all other entries is a @xmath533-admissible vector .",
    "since @xmath4 is the set of blocks of a generalized covering design , there is a block @xmath443 that contains @xmath456 .",
    "now we notice that the block @xmath517 contains @xmath88 , since @xmath534    a similar argument also works for the case where the vector @xmath88 has two entries which are singletons and all other entries are the empty set . to see this ,",
    "assume that @xmath535 with @xmath536 and @xmath537 ( where @xmath538 ) , and that @xmath539 for all @xmath540 .    consider the @xmath58-tuples @xmath541 where @xmath542 and @xmath543 where @xmath544 as before , there is a block @xmath545 that contains @xmath453 and a block @xmath443 of @xmath4 that contains @xmath456 .",
    "consequently , the block @xmath546 contains the vector @xmath88 .",
    "once again , we illustrate this construction with an example .",
    "below is an example of a @xmath547 with 3 blocks : @xmath548    from this we can construct the @xmath549 with @xmath550 blocks given below : @xmath551",
    "in this paper , we have defined a very broad class of objects . consequently , there are a considerable variety of directions for future work on this topic .",
    "our work in this paper has primarily been focused on strength-@xmath149 generalized covering designs , principally because of the interpretation in terms of clique coverings .",
    "two natural directions would be ( i ) to obtain further results in this case , and ( ii ) to extend our results to values of @xmath134 .",
    "there is an improvement on the block - recursive construction for covering arrays that uses two copies of the same covering array with _",
    "disjoint blocks _ removed from the second array  @xcite . with this improvement , covering arrays can be constructed that meet the asymptotic bound due to gargano",
    "_ et al . _",
    "it would be interesting to see if this improvement could also be applied to the block - recursive construction for generalized covering designs in subsection  [ subsect : blockrec ] .",
    "wilson gave a recursive construction for transversal designs ( described in  @xcite ) that has been applied to both covering arrays and covering arrays with mixed alphabets .",
    "( macneish s construction is a special case of this . )",
    "it would be worthwhile to investigate how wilson s construction can be adapted to generalized covering designs .    if we were to consider generalized covering designs of higher strength ( i.e.  with @xmath134 ) , the natural extension of our approach would be to define a notion of clique coverings in @xmath0-uniform hypergraphs .",
    "thus if a clique in a @xmath0-uniform hypergraph is defined to be a set @xmath270 of vertices such that any subset of @xmath270 of size at most @xmath0 is contained in a hyperedge , then a strength-@xmath0 generalized covering design would be equivalent to a clique covering of an appropriately - constructed @xmath0-uniform hypergraph .",
    "another direction for further work on generalized covering designs is to conduct an analysis of families of these designs with specific parameters .",
    "for example , one family that could be examined is that of all generalized covering designs with @xmath552 .",
    "such a design would be , in some sense , close to a covering design .",
    "alternatively , one could consider the all generalized covering designs for which @xmath553 with @xmath554 ; such designs would not be far removed from covering arrays .    for small values of @xmath5 one could consider all generalized covering designs with @xmath555 with @xmath556 . in  @xcite",
    ", cameron gives a complete description of generalized @xmath0-designs for @xmath557 and @xmath558 : such a characterization could potentially be obtained for generalized covering designs . with small values of @xmath559 , computer searches could be implemented to compare our various constructions . with sufficiently many parameters fixed ,",
    "it may also be possible to determine the asymptotic growth of the optimal size of such a generalized covering design .    in @xcite",
    ", cameron also suggests the dual notion of generalized packing designs ; the first two authors have also been investigating this problem  @xcite .",
    "while the definition is very similar to that of generalized covering designs , as is often the case with packing problems , the theory turns out to be quite different .",
    "various previously - known classes of designs arise as generalized packing designs ; examples include howell designs , room squares , hanani triple systems , and mutually orthogonal latin rectangles . finally , we recall that much of the motivation for work on covering designs and covering arrays was their widespread use in applications ( particularly in communications and software testing )",
    ". it would be very interesting to discover applications for other classes of generalized covering designs .",
    "the work in this paper was a joint project of the discrete mathematics research group at the university of regina , attended by all the authors .",
    "they would like to thank the other members of the group ( b.  ahmadi , f.  alinaghipour , s.  m.  fallat , j.  c.  fisher , a.  m.  purdy and s.  zilles ) for their participation .",
    "the authors also thank the two anonymous referees for their helpful suggestions .",
    "r.  f.  bailey is a pims postdoctoral fellow .",
    "a.  c.  burgess and m.  s.  cavers are nserc postdoctoral fellows .",
    "k.  meagher acknowledges support from an nserc discovery grant ."
  ],
  "abstract_text": [
    "<S> inspired by the `` generalized @xmath0-designs '' defined by cameron [ p.  j.  cameron , a generalisation of @xmath0-designs , _ discrete math . _ </S>",
    "<S> * 309 * ( 2009 ) , 48354842 ] , we define a new class of combinatorial designs which simultaneously provide a generalization of both covering designs and covering arrays . we then obtain a number of bounds on the minimum sizes of these designs , and describe some methods of constructing them , which in some cases we prove are optimal . many of our results are obtained from an interpretation of these designs in terms of clique coverings of graphs . </S>",
    "<S> + * keywords : * covering design ; covering array ; generalized covering design ; clique covering . + </S>",
    "<S> * msc2010 : * 05b40 ( primary ) ; 05b15 , 05c70 ( secondary ) . </S>"
  ]
}
{
  "article_text": [
    "compressed sensing , which is a hot topic in signal processing , aims at reconstructing signals by assuming that the original signal is sparse ; see , e.g.,@xcite .",
    "the core idea used in this area is to introduce a sparsity index in the optimization used for decoding . to be more specific ,",
    "the sparsity index of a vector @xmath0 is defined by the amount of nonzero elements in @xmath0 and is usually denoted by @xmath1 , called the `` @xmath2 norm . ''",
    "the compressed sensing decoding problem is then formulated by optimization with @xmath2-norm regularization .",
    "the associated optimization problem is however hard to solve , since it is a combinatorial one .",
    "thus , it is common to introduce a convex relaxation by replacing the @xmath2 norm with the @xmath3 norm . under some assumptions ,",
    "the solution of this relaxed optimization is known to be exactly the same as that of the @xmath2-norm optimization @xcite .",
    "that is , by minimizing the @xmath3-norm , one can obtain a sparse solution .",
    "the purpose of the present work is to use sparsity - inducing techniques in the context of controller design for networked control applications . in particular",
    ", we will focus on packetized predictive control ( ppc ) ; see , e.g. , @xcite . as in regular model predictive control ( mpc ) formulations ,",
    "a cost function is used in ppc to design the controller output . each control",
    "_ packet _ contains a sequence of tentative plant inputs for a finite horizon of future time instants .",
    "packets which are received at the plant actuator side , are stored in a buffer to be used whenever later packets are dropped by the network . when there are no dropouts , ppc reduces to model predictive control . for ppc to give desirable closed loop properties , the more unreliable the network is",
    ", the larger the horizon length ( and thus the number of tentative plant input values contained in each packet ) should be .",
    "therefore , to encompass bit - rate limitations of digital networks , it becomes natural to seek that the control packets provided by ppc be sparse .    in order to obtain sparse control packets ,",
    "we propose to design the latter by minimization of an @xmath4 cost function , which allows one to trade control performance for sparsity of the packets .",
    "the associated optimization can be effectively solved by iteration methods , as in compressed sensing applications , see also @xcite , and is , thus , suitable for practical control implementations .",
    "we show how to choose the parameters of the cost function to achieve practical stability of the closed loop in the presence of bounded packet dropouts .",
    "we then illustrate that sparsity may reduce bit - rates .",
    "this makes the proposed control method suitable for situations where the network is not only unreliable , but also bit - rate limited .    before proceeding",
    ", we note that only few works on mpc ( and none on ppc ) have explicitly studied the use of cost functions with @xmath3 norms @xcite .",
    "in fact , most mpc formulations use quadratic cost functions ( see e.g. , @xcite ) . to the best of our knowledge , no specific results on stability of mixed @xmath5 mpc ( or the , more general , ppc ) have been documented .",
    "we also note that our approach for obtaining sparsity differs somewhat from that used in compressed sensing .",
    "in fact , our objective is to derive sparse signals for efficient _ encoding _ , whereas compressed sensing aims at _ decoding _ sparse signals .",
    "the remainder of this work is organized as follows : section  [ sec : plant - model - control ] revises basic elements of packetized predictive control . in section [ sec : design ] , we show how to choose the cost function to obtain sparse control packets . in section",
    "[ sec : stability ] , we study stability of the resultant networked control system . a numerical example",
    "is included in section [ sec : examples ] .",
    "section [ sec : conclusion ] draws conclusions .",
    "we write @xmath6 for @xmath7 , @xmath8 refers to modulus of a number . the identity matrix ( of appropriate dimensions )",
    "is denoted via @xmath9 . for a matrix ( or a vector ) @xmath10 , @xmath11 denotes the transpose . for a vector @xmath12^{\\top}\\in{{\\mathbb{r}}}^n$ ] and a positive definite matrix @xmath13 , we define @xmath14 and also denote @xmath15 . for any matrix @xmath16 , @xmath17 and",
    "@xmath18 denote the maximum and the minimum eigenvalues of @xmath16 , respectively .",
    "we also define @xmath19 .",
    "we consider the following discrete - time linear and time - invariant plant model : @xmath20 where @xmath21 and @xmath22 for @xmath23 .",
    "we assume that the realization @xmath24 is reachable .",
    "we are interested in a networked control architecture where the controller communicates with the plant actuator through an unreliable channel , see fig .",
    "[ fig : ncs ] .",
    "this channel introduces packet - dropouts , which we model via the dropout sequence @xmath25 in : @xmath26    in packetized predictive control ( ppc ) , as described , e.g. , in @xcite , at each time instant @xmath27 , the controller uses the state @xmath28 of the plant to calculate and send a control packet of the form @xmath29 to the plant input node .    to achieve robustness against packet dropouts ,",
    "buffering is used . to be more specific ,",
    "suppose that at time instant @xmath27 , we have @xmath30 , i.e , the data packet @xmath31 defined in is successfully received at the plant input side . then , this packet is stored in a buffer , overwriting its previous contents .",
    "if the next packet @xmath32 is dropped , then the plant input @xmath33 is set to @xmath34 , the second element of @xmath31 .",
    "the elements of @xmath31 are then successively used until some packet is successfully received , i.e. , no dropout occurs .",
    "more formally , the sequence of buffer states , say @xmath35 , satisfies the recursion @xmath36 where @xmath37 and with @xmath38 the buffer states ultimately give rise to the plant inputs in   via @xmath39    0.1 in    ( 32.0000 , 6.2000 ) ( 2.0000,-10.0000 )    ( 7.3000,-6.0000)(0,0)controller(19.0000,-6.0000)(0,0)buffer(28.0000,-6.0000)(0,0)plant(32.0000,-5.5000)(0,0)[lb]@xmath28(11.0000,-5.5000)(0,0)[lb]@xmath31(23.0000,-5.5000)(0,0)[lb]@xmath40",
    "as foreshadowed in the introduction , in the present work we seek that the control packets @xmath41 be sparse . for that purpose",
    ", we propose to use a dynamic @xmath4 optimization .",
    "more precisely , at each time instant @xmath27 , the controller minimizes the following cost function : @xmath42 where @xmath43^{\\top}$ ] . in , @xmath44 , @xmath45 are predicted plant states , which are calculated by @xmath46 with @xmath47 , the observed state of the plant at time instant @xmath27 .",
    "the parameters @xmath13 , @xmath48 , and @xmath49 allow the designer to trade control performance for control effort and sparsity of the control packets . as we will see in section  [ sec : stability ] , the choice of design parameters also influences closed loop stability of the resultant networked control system .",
    "if we introduce the following matrices : @xmath50 then the cost function in can be re - written in vector form via @xmath51 where @xmath52 consequently , the optimal @xmath31 minimizing can be numerically obtained by the following iteration @xcite : @xmath53 where @xmath54 with    @xmath55    see fig .",
    "[ fig : nonlinear ] .",
    "0.1 in    ( 24.8000 , 20.4000 ) ( -0.8000,-20.0000 )    ( 14.5000,-10.5000)(0,0)[lt]@xmath56(18.5000,-10.5000)(0,0)[lt]@xmath57(10.0000,-9.5000)(0,0)[rb]@xmath58(24.0000,-9.5000)(0,0)[lb]@xmath0(14.5000,-1.5000)(0,0)[lb]@xmath59    the constant @xmath60 in is chosen to satisfy @xmath61 , in which case the iteration converges to the optimizer of for any initial value @xmath62 @xcite .",
    "the convergence rate of this iteration is known to be @xmath63 .",
    "faster methods have been proposed , e.g. , in @xcite .",
    "the difference between the cost function in and most mpc formulations is the penalty on the input vector @xmath64 .",
    "standard mpc uses an @xmath65 penalty @xmath66 , @xmath67 for attenuating the control @xmath64 ( see e.g. , @xcite ) . in our formulation",
    ", we consider an @xmath3 penalty @xmath68 , which is introduced in order to obtain a sparse representation of the control packet @xmath31 . @xmath69",
    "we will next analyze closed loop stability of @xmath70 ppc , as presented in section [ sec : design ] , with bounded packet dropouts .",
    "our analysis uses elements of the technique introduced in @xcite and which was later refined in @xcite .",
    "a distinguishing aspect of the situation at hand is that , for open - loop unstable plants , even when there are no packet dropouts , asymptotic stability will not be achieved , despite the fact that the plant - model in is disturbance - free .",
    "this can be easily shown by considering the iteration in , with @xmath71 and a plant state @xmath72 .",
    "it follows directly from that , in this case , @xmath73 .",
    "since this limit value is independent of the initial value @xmath74 , we have @xmath75 .",
    "thus , if @xmath76 , and there are no dropouts , then the control @xmath77 .",
    "that is , the control system behaves as an open - loop system in the set @xmath78 .",
    "hence , asymptotic stability will in general not be achieved , if @xmath10 has eigenvalues outside the unit circle .",
    "this fundamental property is linked to sparsity of the control vector .    by the fact mentioned above",
    ", we will next study _ practical _ stability ( i.e. , stability of a set ) of the networked control system . for that purpose",
    ", we will analyze the value function @xmath79 and prepare the following two technical lemmas .",
    ":    [ lem : are ] let @xmath80 .",
    "suppose @xmath13 is the solution to the riccati equation @xmath81 and let @xmath82",
    ". then @xmath83    * proof . *",
    "first , we assumed @xmath48 and hence @xmath84 is observable .",
    "we also assumed that @xmath24 is reachable .",
    "thus , for any @xmath80 the riccati equation has a unique solution @xmath13 @xcite .",
    "direct calculation gives the result.@xmath69    [ lem : v_bounds ] for any @xmath85 , we have @xmath86 where @xmath87 @xmath88,\\\\    g^+ { \\triangleq}(g^{\\top}g)^{-1}g^{\\top}.\\end{gathered}\\ ] ]    * proof . *",
    "first , since @xmath24 is assumed to be reachable , we have @xmath89 , and hence @xmath90 .",
    "this and the assumption that @xmath13 and @xmath48 imply that @xmath91 has full column rank ( i.e. , @xmath92 ) .",
    "therefore , @xmath93 is invertible",
    ". then consider a vector @xmath94 applying this vector to @xmath95 gives @xmath96+\\lambda_{\\max}(q)\\right)\\|x\\|_2 ^ 2 ,   \\end{split}\\ ] ] where we used the norm inequality @xmath97 for any @xmath98 @xcite .",
    "this and the definition of @xmath99 in provide the upper bound on @xmath100 .    to obtain the lower bound",
    ", we simply note that by the definition of @xmath95 , we have @xmath101 for any @xmath102 , and hence @xmath103 .",
    "@xmath69    the vector @xmath104 used in is the minimizer of the unconstrained cost function @xmath105 and also approximates @xmath106 , the optimizer of the @xmath70 cost for plant state @xmath107 . since the following bound holds @xcite : @xmath108 the upper bound for @xmath99 given in lemma  [ lem : v_bounds ] will be tight , if @xmath109 is small . @xmath69    having established the above preliminary results , we introduce the iterated mapping @xmath110 with implicit ( open - loop optimal ) input @xmath111^{\\top}= \\operatorname*{arg\\,min}_u j(u , x)\\ ] ] by @xmath112 this mapping describes the plant state evolution during periods of consecutive packet dropouts .",
    "note that , since the input @xmath106 is not a linear function of @xmath107 ( see section [ sec : design ] , also fig .",
    "[ fig : nonlinear ] ) , the function @xmath113 is nonlinear .",
    "we have the following lemma :    [ lem : lyap ] assume that @xmath13 satisfies with @xmath114 then for any @xmath85 , we have @xmath115    * proof . * fix @xmath116 and consider the sequence @xmath117 where @xmath118 ( @xmath119 ) is given by @xmath120 with @xmath121 as in lemma  [ lem : are ] and where @xmath122 .",
    "we then have @xmath123 by the relation @xmath124 and @xmath125 for @xmath126 , and by lemma [ lem : are ] , we can bound the terms in the last sum above by @xmath127\\!\\tilde{x}_l\\\\      & \\quad - \\frac{\\mu^2n}{4\\epsilon}\\left(|k\\tilde{x}_l|-\\frac{2\\epsilon}{\\mu n}\\right)^2 + \\frac{\\epsilon}{n } \\leq \\frac{\\epsilon}{n } ,   \\end{split}\\ ] ] thus , the cost function @xmath128 can be upper bounded by @xmath129 where we have used the relation @xmath130 . since @xmath131 is the minimal value of @xmath132 among all @xmath64 s in @xmath133 , we have @xmath134 , and hence @xmath135 for the case @xmath136 , we consider the sequence @xmath137 .",
    "if we define @xmath138 , then follows as in the case @xmath139.@xmath69    the above result can be used to derive the following contraction property of the optimal costs during periods of successive packet dropouts :    [ lem : contracting ] let @xmath140 .",
    "assume that @xmath13 satisfies with @xmath141 as in .",
    "then there exists a real number @xmath142 such that for all @xmath85 , we have @xmath143    * proof . * in this proof , we borrow a technique used in the proof of ( * ? ? ?",
    "* theorem 4.2.5 ) . by lemma [ lem : v_bounds ] , for @xmath144 we have @xmath145 .",
    "now suppose that @xmath146 .",
    "then @xmath147 and hence @xmath148 from lemma [ lem : lyap ] , it follows that @xmath149 with @xmath150 since @xmath151 , @xmath152 , and @xmath153 , it follows that @xmath154 .",
    "next , consider the case where @xmath155 so that @xmath156 and @xmath157 this and lemma [ lem : lyap ] give @xmath158 finally , if @xmath159 , then the above inequality also holds since @xmath160.@xmath69    we will next use lemma  [ lem : contracting ] to establish sufficient conditions for practical stability of ppc in the presence of packet - dropouts .",
    "to state our results , in the sequel we denote the time instants where there are no packet - dropouts , i.e. , where @xmath30 , as @xmath161 whereas the number of consecutive packet - dropouts is denoted via : @xmath162 note that @xmath163 , with equality if and only if no dropouts occur between instants @xmath164 and @xmath165 .",
    "when packets are lost , the control system operates in open - loop .",
    "thus , to ensure desirable properties of the networked control system , one would like the number of consecutive packet - dropouts to be bounded . in particular , to establish practical stability",
    ", we make the following assumption :    [ ass : dropouts ] the number of consecutive packet - dropouts is uniformly bounded by the prediction horizon minus one , i.e. , we have @xmath166 , @xmath167.@xmath69    theorem  [ thm : stability ] stated below shows how to design the parameters of the cost function to ensure practical stability of the networked control system in the presence of bounded packet dropouts .",
    "[ thm : stability ] suppose that assumption [ ass : dropouts ] holds .",
    "let @xmath140 and choose @xmath13 to satisfy with @xmath141 as in .",
    "then for all @xmath23 we have @xmath168 where @xmath169 is such that @xmath170 , @xmath171 @xmath172 is given in , and @xmath173 is as in",
    ".    * proof . * fix @xmath169 and note that at time instant @xmath164 , the control packet is successfully transmitted to the buffer .",
    "then until the next packet is received at time @xmath165 , @xmath174 consecutive packet - dropouts occur . by the ppc strategy ,",
    "the control input becomes @xmath175 , @xmath176 , and the states @xmath177 are determined by these open - loop controls . since , by assumption , we have @xmath178 , lemma [ lem : contracting ] gives @xmath179 for @xmath180 , and also for @xmath181 , we have @xmath182 now by induction from , it is easy to see that @xmath183 this inequality and give the bound @xmath184 for @xmath185 , and this inequality also holds for @xmath186 . finally , by using the lower bound of @xmath99 provided in lemma [ lem : v_bounds ] , we have @xmath187 since @xmath188 , for all @xmath189.@xmath69    theorem [ thm : stability ] establishes practical stability of the networked control system .",
    "it shows that , provided the conditions are met , the plant state will be ultimately bounded in a ball of radius @xmath190 .",
    "it is worth noting that , as in other stability results which use lyapunov techniques , this bound will , in general , not be tight .",
    "to illustrate properties of the @xmath4 ppc strategy proposed in this work , we consider a plant model of the form with has 3 unstable eigenvalues and 1 stable eigenvalue . ]",
    "@xmath191,\\\\   b & = \\left[\\begin{array}{r }       1.3372142\\\\    - 2.9903216\\\\      0.9703207\\\\    - 0.4056704\\\\   \\end{array}\\right ] .",
    "\\end{split}\\ ] ]    we set the horizon length in the cost function to @xmath192 and choose weights @xmath193 , @xmath194 and @xmath16 as the solution to the riccati equation with @xmath195 . in this case , the real number @xmath196 in theorem [ thm : stability ] equals 25 , computed by .    for comparison , in addition to the @xmath70 ppc , we also synthesize ppc with a conventional @xmath65 cost function , namely @xmath197 we first simulate a packetized predictive networked control system setup as in fig .  [",
    "fig : ncs ] . the number @xmath174 of consecutive packet dropouts ,",
    "see , is chosen from the uniform distribution on @xmath198 .",
    "the initial plant state is set to @xmath199^{\\top}$ ] .",
    "table [ tbl : packet ] shows the first 5 successfully transmitted control packets @xmath200 , @xmath201 designed by the proposed method ( @xmath4 ) and the quadratic one given in  .",
    "it can be observed that , for the present situation , the control packets provided by the @xmath4 design are more sparse than those obtained through the @xmath65 formulation .",
    ".control packets @xmath200 [ cols=\"^,>,>,>,>,>\",options=\"header \" , ]     to study bit - rate aspects , we next quantize the packets @xmath202 , by using 8-bit uniform quantization with step size 0.25 in each component . fig .",
    "[ fig : states ] illustrates the 2 norm of the state @xmath28 obtained when using the @xmath4 ppc and also with the @xmath65 ppc .",
    "whilst both controllers give a loop which seems practically stable and exhibits comparable performance , there is a difference in the quantized packets generated by each method .",
    "this can be appreciated in fig .",
    "[ fig : histogram ] , which shows a histogram of the quantized control values @xmath203 , @xmath204 , @xmath205 in all transmitted packets @xmath206^\\top$ ] . as indicated in fig .",
    "[ fig : histogram ] , control packets designed by the proposed method include much more zeros than those obtained by the conventional one , see  .",
    "in fact , the packets obtained by @xmath4 optimization include 307 zero values , whereas the conventional ones contain only 218 zeros .",
    "since the total amount of transmitted packets is 100 , in the @xmath207 formulation about @xmath208 of the transmitted signals are zero .",
    "this observation suggests that the associated bit - rates of the signal will be small .    :",
    "proposed @xmath209 ( solid ) and conventional @xmath65 ( dots ) ]     ( left ) and conventional @xmath65 ( right ) ]    to further investigate this issue , we compute the ( discrete ) entropy of the control values @xmath203 , defined as @xmath210 [ bits ] , where @xmath211 is the probability mass function of @xmath212 ; see , e.g. , @xcite .",
    "the function @xmath211 can be approximately estimated by the histogram as in fig .",
    "[ fig : histogram ] . note that here we do not take account of the entropy of control vector @xmath213 , that is , we assume scalar quantization .",
    "in the situation studied with @xmath199^\\top$ ] , the entropy by the @xmath4 optimization proposed is 8.6177 , while that by the conventional @xmath65 approach is 9.5345 .",
    "we next execute 10000 simulations with initial plant states @xmath214 whose elements are randomly sampled from the gaussian distribution with mean 0 and variance 1 .",
    "the average entropies obtained are 12.2560 for @xmath4 optimization and 15.5701 for the @xmath65 formulation .",
    "since the entropy of the signal transmitted serves as a measure of the code length , in the cases studied , the @xmath4 ppc method will require lower bit - rates than ppc with an @xmath65 cost function .",
    "[ fig : mu ] illustrates the tradeoff between control performance and sparsity , which , as noted above , is related to bit - rates .",
    "the figure illustrates the average sparsity @xmath215 , where @xmath216 and the achieved performance @xmath217 ( the 2 norm of the state sequence @xmath107 ) , for @xmath218 $ ] .",
    "the other parameters are the same as used above .",
    "as can be appreciated , as @xmath109 becomes larger , the sparsity increases , but the performance becomes worse .",
    "( top figure ) and performance @xmath217 ( below ) , as a function of @xmath109 . ]",
    "we have studied a packetized predictive control formulation with an @xmath4 cost function .",
    "the associated optimization can be solved effectively and is , thus , suitable for implementation in a real - time controller .",
    "we have given sufficient conditions for practical stability when the controller is used over a network with bounded packet dropouts .",
    "numerical results indicate that the proposed controller provides sparse control packets , thereby giving bit - rate reductions when compared to the use of , more common , quadratic cost functions .",
    "future work may include the further study of performance aspects and the effect of plant disturbances .",
    "the authors would like to thank jan stergaard for his helpful comments .",
    "20 a. beck and m. teboulle ( 2009 ) , a fast iterative shrinkage - thresholding algorithm for linear inverse problems , _ siam j. imaging sciences _ , vol .  2 , no .  1 ,",
    "pp .  183202 , 2009 .",
    "a. bemporad ( 1998 ) , predictive control of teleoperated constrained systems with unbounded communication delays , _ ieee cdc .",
    "_ , pp .  21332138 .",
    "d. s. bernstein ( 2005 ) , _ matrix mathematics _ , princeton university press , 2005 .",
    "e. j. candes and m. b. wakin ( 2008 ) , an introduction to compressive sampling , _ ieee signal processing magazine _ , vol .  25 , pp",
    ".  2130 .",
    "a. casavola , e. mosca , and m. papini , predictive teleoperation of constrained dynamic systems via internet - like channels , _ ieee trans .",
    "_ , vol .  14 , no .  4 , pp",
    ".  681694",
    ". t. m. cover and j. a. thomas ( 2006 ) , _ elements of information theory _ , 2nd ed .",
    ", wiley - international .",
    "i. daubechies , m. defrise , and c. de - mol ( 2004 ) , an iterative thresholding algorithm for linear inverse problems with a sparsity constraint , _ commun .",
    "pure appl .",
    "_ , vol .",
    "57 , no .  11 , pp .  14131457 .",
    "j. fuchs ( 2004 ) , on sparse representation in arbitrary redundant bases , _ ieee trans .",
    "inform . theory _",
    "50 , no .  6 , pp .  13411344",
    ". g. c. goodwin , m. m. seron , and j. a. de don ( 2005 ) , _ constrained control and estimation _ , springer .",
    "s. s. keerthi and e. g. gilbert ( 1988 ) , optimal infinite - horizon feedback law for a general class of constrained discrete - time systems : stability and moving - horizon approximations , _ journal of optimization theory and applications _ ,",
    "57 , no .  2 , pp",
    ".  265293 . m. lazar ( 2009 ) , _ predictive control algorithms for nonlinear systems _ , doctoral thesis , technical university of iasi , romana .",
    "m. lazar , w. p.",
    "m. h. heemels , s. weiland , and a. bemporad ( 2006 ) , stabilizing model predictive control of hybrid systems , _ ieee trans .",
    "automat .",
    "_ , vol .",
    "51 , no .  11 , pp .  18131818",
    ". j. m. maciejowski ( 2002 ) , _ predictive control with constraints _ , pearson education .",
    "d. e. quevedo and d. nei , input - to - state stability of packetized predictive control over unreliable networks affected by packet - dropouts , _ ieee trans .",
    "automat .",
    "_ , vol .",
    "56 , no .  2 , pp .",
    "370375 , 2011 .",
    "d. e. quevedo and j. stergaard and d. nei , packetized predictive control of stochastic systems over bit - rate limited channels with packet loss , _ ieee trans .",
    "automat .",
    "_ , vol .",
    "56 , no .  11 , 2011 .",
    "d. e. quevedo , e. i. silva , and g. c. goodwin ( 2007 ) , packetized predictive control over erasure channels , _ proc .",
    "_ , pp .  10031008 .",
    "j. b. rawlings and d. q. mayne ( 2009 ) , _ model predictive control theory and design _ , nob hill publishing .",
    "p. l. tang and c. w. de silva ( 2007 ) , stability validation of a constrained model predictive networked control system with future input buffering , _ int .",
    "j.  contr .",
    "_ , vol .",
    "80 , no .  12 , pp .  19541970 .",
    "k. zhou , j. c. doyle , and k. glover ( 1996 ) , _ robust and optimal control _",
    ", prentice - hall .",
    "m. zibulevsky and m. elad ( 2010 ) , l1-l2 optimization in signal and image processing , _ ieee signal processing magazine _ , vol .",
    "27 , pp ."
  ],
  "abstract_text": [
    "<S> we investigate a networked control architecture for lti plant models with a scalar input . communication from controller </S>",
    "<S> to actuator is over an unreliable network which introduces packet dropouts . to achieve robustness against dropouts , we adopt a packetized predictive control paradigm wherein each control packet transmitted contains tentative future plant input values . </S>",
    "<S> the novelty of our approach is that we seek that the control packets transmitted be sparse . for that purpose , </S>",
    "<S> we adapt tools from the area of compressed sensing and propose to design the control packets via on - line minimization of a suitable cost function . </S>",
    "<S> we then show how to choose parameters of the cost function to ensure that the resultant closed loop system be practically stable , provided the maximum number of consecutive packet dropouts is bounded . </S>",
    "<S> a numerical example illustrates that sparsity reduces bit - rates , thereby making our proposal suited to control over unreliable and bit - rate limited networks . </S>"
  ]
}
{
  "article_text": [
    "in this paper we suggest a new theoretical framework for the so called `` survey propagation '' ( sp ) equations that are at the root of both the analysis and the algorithms used in ref .",
    "@xcite to solve the random 3-sat and q - coloring problems . in the more general context of constraint satisfaction problems we propose a slightly different way of deriving the equations which we hope can shed some light on the potentialities of the algorithms and which makes clear the differences with other well known iterative probabilistic algorithms .",
    "this line of approach , also discussed in @xcite for the satisfiability problem , is developed here systematically through the addition of an extra state for the variables which allows to take care of the clustered structure of the space of solutions . within clusters",
    "a variable can be either `` frozen '' to some value  that is , the variable takes always the same value for all solutions ( satisfying assignments ) within the cluster  or it may be `` unfrozen ''  that is it fluctuates from solution to solution within the cluster . as we shall discuss , scope of the sp equations is to properly describe the cluster to cluster fluctuations by associating to unfrozen variables an extra state to be added to those belonging to the original definition of the problem .",
    "the overall algorithmic strategy is iterative and decomposable in two elementary steps : first , the marginal probabilities of frozen variables are evaluated by the sp message - passing procedure ; second  the so called _ decimation _ step  using such information some variables are fixed and the problem is simplified . while the first step is unavoidable if one is interested in marginal probabilities , the second step is just dictated by simplicity and we expect that there could exist other ways of efficiently using the information provided by the marginals .    throughout the paper , a detailed comparison with a similar message - passing procedure , belief propagation , which does not make assumptions about the structure of the solution space will also be given .",
    "the structure of the paper is as follows . in sec .",
    "[ generalities ] , we provide the general formalism , namely the definitions of constraint satisfaction problems , factor graphs and cavities , with concrete reference to the cases of coloring and satisfiability . in sec .",
    "[ bp ] , we introduce the _ warnings _ and the _ local fields _ whose histograms will provide the so called belief propagation equations . finally in sec .",
    "[ sp ] , clusters are introduced and the sp equations are derived .",
    "explicit equations are given for both 3-col and 3-sat and the decimation procedure is discussed .",
    "we consider a _ constraint satisfaction problem _ ( csp ) which is defined on a set of _ discrete variables _",
    "@xmath2 with @xmath3 . each variable @xmath4 can be in @xmath5 possible states ( the generalization to the case where the number of states is @xmath6 dependent is straightforward ) , so @xmath7 .",
    "the vector @xmath8 is called a _",
    "configuration_. these variables are subject to a set of _ constraints _ @xmath9 .",
    "each @xmath10 depends on @xmath11 only through a subset @xmath12 of variables .",
    "it is defined as a mapping @xmath13 , where the value @xmath14 zero corresponds to a satisfied constraint , and @xmath15 to an unsatisfied constraint .",
    "it is useful to introduce , for every @xmath16 , the subset @xmath17 of indices of all constraints involving @xmath4 .",
    "the index sets @xmath18 and @xmath19 are chosen disjoint , so that their elements uniquely determine a single variable or constraint .",
    "we define the _ cost function _",
    "@xmath20=\\sum _ { a\\in a } c_{a}[\\left(x_{i}\\right)_{i\\in i(a)}]\\ ] ] which counts the number of unsatisfied constraints .",
    "our goal is to simultaneously satisfy all constraints , i.e. to find a configuration @xmath21 with @xmath22=0 $ ] .",
    "we thus introduce the subset @xmath23 of _ solutions _ to our csp instance as @xmath24 = 0   \\ } \\ .\\ ] ]    the algorithm aims at finding one solution @xmath25 .",
    "we concentrate _ a priori _ onto instances @xmath26 $ ] which possess a non - empty solution set @xmath27 .",
    "we use the _ factor - graph _",
    "@xcite representation for a csp :    [ def : factorgraph ] for any instance of the csp problem , we define its * factor graph * as a bipartite undirected graph @xmath28 , having two types of nodes :    * variable nodes @xmath16 and * function nodes @xmath29 .",
    "edges connect only different node types ; the edge @xmath30 belongs to the graph if and only if the constraint @xmath31 involves the variable @xmath32 , i.e. if @xmath33 or equivalently @xmath34 .",
    "more formally , we define @xmath35 and @xmath36 .    in figures , we always represent variable nodes by circles , whereas function nodes are drawn as squares .",
    "this notation will help to distinguish between the different origins of the two node types .      given a csp and its factor graph",
    ", we will use the cavity graphs obtained by removing a variable :    [ def : cavitygraph ] given a factor graph @xmath37 and one variable node @xmath16 , we define the * cavity graph * @xmath38 by deleting from @xmath37 all function nodes @xmath39 which are adjacent to @xmath40 , and the edges incident to these function nodes .",
    "the cavity graph @xmath38 defines a new csp , where the cost function is @xmath41 note that in this new problem the variable @xmath4 is isolated , it can take any value without violating a constraint .",
    "the solution set @xmath42 for the cavity problem @xmath38 is larger than the original one , since some constraints have been removed .",
    "although the algorithm can in principle be written for arbitrary csp , we shall present two specific examples , satisfiability and coloring .    in the satisfiability problem a constraint @xmath10 is a clause , which is unsatisfied by only one assignment of the variables @xmath43 . in the random 3-sat problem",
    "each clause involves three variables ( @xmath44 ) , the indices of which are chosen randomly with uniform distribution in @xmath18 . for a given @xmath45 and @xmath46 , there are eight different types of constraints @xmath31 , corresponding to the combinations of possible negations of literals in one clause , see fig .",
    "[ cap : sat - fg ] . in random 3-sat",
    "the type of clauses is chosen with uniform distribution among these eight types .    in the @xmath5-coloring problem one",
    "is given an original undirected graph .",
    "the problem is to color the vertices , using @xmath5 colors , so that two vertices connected by an edge have different colors .",
    "there is one constraint associated with each edge of the original graph , and the factor - graph appears as a decoration of the original graph ( see fig.[cap : graph - fg ] ) , where function nodes have been added on each original edge .",
    "there is only one type of function node . in the random @xmath5-col problem ,",
    "the original graph is a random @xmath47 graph",
    ".    we will be particularly interested in the behavior of the algorithm for large @xmath48 .",
    "note that both @xmath49-sat and @xmath5-col are problems where @xmath50 have a poisson limit distribution with finite mean when @xmath51 , i.e. @xmath50 is typically much smaller than @xmath48 .",
    "moreover , the structure of the factor graph is locally tree - like .",
    "this will guide us in the definition of the algorithm below , and it is presumably an important ingredient for the algorithm to work .    .",
    "variables are represented as circles , clauses ( i.e. function nodes ) as squares .",
    "a triangle - shaped mark indicates that the corresponding literal is negated ]",
    "given a csp and a configuration @xmath52 , we define the following three quantities associated with @xmath11 , cf .",
    "@xcite :    [ def : warning ] for a given edge @xmath53 of the factor graph , with @xmath16 and @xmath33 , we define a * warning * as the @xmath5-component vector @xmath54 with components : @xmath55\\ , \\",
    "p=1, ... ,q,\\ ] ] so @xmath56 is the value of constraint @xmath10 in the configuration obtained from @xmath11 , by substituting @xmath57 in the place of @xmath4 .",
    "[ def : cav_field ] for a given edge @xmath53 of the factor graph , with @xmath16 and @xmath33 , we define a * cavity field * as the @xmath5-component vector @xmath58 with components : @xmath59    [ def : field ] for a given node @xmath16 , we define the * local field * as the @xmath5-dimensional vector @xmath60 with components : @xmath61    the warning @xmath62 is understood as a _ message _ sent from constraint @xmath45 to variable @xmath40 saying : @xmath4 can not be in any of the states @xmath57 where @xmath63 , without violating constraint @xmath45 . note that we do not need the value of @xmath32 for computing @xmath64",
    "in fact , the warning depends explicitly only on @xmath65 .",
    "the local field on variable @xmath40 summarizes all warnings sent to @xmath40 from the constraints , i.e. @xmath66 means that , given the values of all other variables @xmath67 , the variable @xmath4 should not be assigned the value @xmath57 , because at least one neighboring constraint would be violated .",
    "the cavity field @xmath68 summarizes all warnings sent to @xmath40 from the constraints different from @xmath45 .",
    "the elementary messages above are defined for an arbitrary configuration @xmath11 .",
    "we are eventually interested in knowing , for each variable @xmath40 , the _ histogram of local fields _ for the configurations which are solutions of the csp : @xmath69 where the ( @xmath5-dimensional ) kronecker - delta is simply denoted by @xmath70 .",
    "this histogram can also be interpreted as probability distributions @xmath71 of local fields for randomly chosen solutions .",
    "local - field histograms contain useful information about the set @xmath27 of solutions , which can be exploited algorithmically in order to recursively construct one solution .",
    "if , e.g. , one of the field components is non - zero for all solutions @xmath72 , this particular state is forbidden to this variable .",
    "if all but one components are non - zero , the variable is `` frozen '' to one specific value in all solutions , i.e. it belongs to the so - called backbone , and it can be assigned right away .     warnings . ]",
    "computing @xmath73 is a difficult task , but one may compute it approximately using a message passing procedure .",
    "we first try to find a recursion relation for the related histograms of the warnings @xmath74 over all solutions @xmath75 @xcite .",
    "considering fig .",
    "[ cap : iteration ] as an example , we note that the histogram of @xmath76 depends on the _ joint _ histogram of all the warnings @xmath77 sent to all variables @xmath78``above '' function node @xmath45 ( we call them the incoming warnings ) .",
    "the obvious problem is that this joint distribution is not known .",
    "if the @xmath77 were independent variables , we would be able to factorize the joint histogram into the product of all individual histograms of warnings @xmath77 , and then to obtain a recursion .",
    "but in general there is no reason for them to be independent .",
    "moreover , they can not even be approximately independent as there are very short paths joining variables `` above '' variable nodes @xmath79 ( the small unnamed ones in the figure ) between them , variables which in turn define the @xmath80 messages .",
    "this is where the cavity graph is useful .    for each edge @xmath53 of the factor graph",
    ", we define the _ belief _ @xmath81 as the histogram of the warning @xmath64 over the configurations @xmath82 which are solutions of the cavity graph problem : @xmath83 where the second line refers again to the probabilistic interpretation : @xmath81 describes the probability of finding a warning @xmath84 if a solution of the cavity graph is randomly selected .",
    "look again at fig.[cap : iteration ] : if the factor graph @xmath37 is a tree , vertices above @xmath85 and @xmath86 become disconnected if function nodes @xmath87 are removed , and the various messages @xmath88 are uncorrelated . in this case , we can thus determine the belief @xmath89 as a function of all the incoming beliefs ( i.e. the histograms of the incoming warnings @xmath90 with @xmath91 and @xmath92 ) , and so on recursively for the full factor graph .",
    "standard belief propagation uses this same recursion also in more general factor graphs with loops , as a means to compute approximately the local - field histograms and the beliefs ( see e.g. @xcite ) .    in order to write the corresponding belief propagation equations explicitly",
    ", we use notations similar to those of fig.[cap : iteration ] . given the edge @xmath53 connecting the function node @xmath45 to the variable @xmath40 , we denote by @xmath93 the set of indices of the variable nodes `` above '' the function node @xmath45 , i.e. @xmath94 ( in the figure @xmath95 ) .",
    "for each @xmath96 , we denote by @xmath97 the set of function node `` above '' the variable @xmath79 ( in the figure , @xmath98 , and by @xmath99 the union of these sets : @xmath100 ) .",
    "the `` incoming messages '' , which can be warning or beliefs , are all the messages propagated on the edges @xmath101 with @xmath96 and , for each such @xmath79 , @xmath102 .",
    "let us first consider a set of incoming warnings @xmath103 .",
    "this warning set may or may not be `` extensible '' to a configuration @xmath104 satisfying all constraints @xmath105 .",
    "one can easily go through a bureaucratic procedure to evaluate all configurations @xmath106 compatible with the warning set .",
    "first compute the cavity fields [ def : field ] component - wise : @xmath107 . for each @xmath96 ,",
    "the allowed values of @xmath108 are those such that @xmath109 .",
    "we denote by @xmath110 the set of allowed configurations of the @xmath108 variables : @xmath111 for each @xmath112 in @xmath113 , one can determine the output warning @xmath64 using definition [ def : warning ] .",
    "this procedure can be embedded into the probabilistic description of solutions on the cavity graph .",
    "for doing so , we assume that incoming warnings are _ independent_. following the steps above ,",
    "one first calculates from the incoming beliefs the distributions of cavity fields @xmath114 the new distribution of warnings @xmath64 is now given by an average over cavity fields , @xmath115    \\prod_{j\\in j } b_{j\\to a } ( \\vec    h_{j\\to a})\\ ] ] the prefactor @xmath116 is a normalization constant .",
    "note that each cavity - field configuration @xmath117 is contributing @xmath118 terms . as a byproduct , contradictory messages",
    "automatically do not contribute anything to ( [ eq : warningubp ] ) .",
    "the bp equations ( [ eq : cavityhbp],[eq : warningubp ] ) are equivalent to the so called sum - product ( or belief network , or bayesian network ) equations @xcite .",
    "one can try to solve them by iteration , starting form some randomly chosen beliefs , and updating @xmath119 sequentially on randomly chosen @xmath53 edges . in some cases , the iteration converges , independently of the scheme of updating , to a unique solution .",
    "when the belief propagation equations converge , one can use the obtained beliefs in order to estimate the histogram of local fields , using : @xmath120 and this histogram can be used for decimation .      for",
    "the sake of clarity , let us work out bp on a simple example of the 3-col problem ( @xmath121 ) , see fig .",
    "[ cap : coloring - example ] .",
    "since function nodes are connected to two variable nodes only ( constraints are edges in the original graph ) , there is only one variable node @xmath79 above function node @xmath45 . for a given configuration of incoming warnings @xmath122 , we can make a table of allowed states @xmath108 , and for each of them , we can compute the outgoing warning @xmath123 . note that possible warnings are @xmath124 , @xmath125 , @xmath126 , since a function node can only forbid one color ( which is given by the state of the other variable connected to the function node ) .    *",
    "suppose that @xmath127 , @xmath128 , and @xmath129 .",
    "then @xmath130 , we find a contradictory message .",
    "no satisfiable configuration exists for @xmath108 . according to the procedure given above",
    ", this configuration does not contribute .",
    "* suppose that incoming messages are @xmath131 , and @xmath132 .",
    "then @xmath133 , and the only possible coloring state for @xmath79 is @xmath134 . for this configuration , we thus have only one possible outgoing warning , @xmath135 . * if @xmath136 , then @xmath137 , and there are two possible colors for @xmath108 , namely states @xmath138 and @xmath0 .",
    "for the first one we have @xmath139 , and for the second one @xmath140 . both contribute with equal weight to @xmath141 .",
    "* all other configurations are simple color permutations of the three cases mentioned above , and are handled analogously .     to the variable node @xmath40 .",
    "]    from eqs .",
    "( [ eq : cavityhbp],[eq : warningubp ] ) , we can easily deduce the equation giving the probability distribution @xmath142 in terms of all distributions @xmath143 .",
    "parameterizing @xmath89 according to the three possible messages as @xmath144 we find @xmath145 this expression can be easily understood : @xmath146 equals the probability that color @xmath57 is forbidden for node @xmath40 , which means that node @xmath79 has already taken this color , @xmath147 .",
    "now , node @xmath79 can take color @xmath57 if and only if it is not forbidden by any incoming warning : the numerator in eq .",
    "( [ etabp ] ) simply calculates the probability that none of the incoming messages forbids color @xmath57 , the denominator guarantees normalization .",
    "note that configurations in which all variables above @xmath79 take the same color @xmath148 , are counted twice , namely in the expressions for both @xmath149 . according to the general discussion given above ,",
    "this is correct because we have _ two _ new configurations for @xmath108 , and two corresponding messages @xmath150 can be sent .    due to the symmetry between colors ,",
    "a possible solution would be @xmath151 for all edges",
    "@xmath152 and all colors @xmath57 .",
    "note , however , that the main intention is to use these equations in a recursive coloring algorithm .",
    "this means , some variable nodes may already be assigned a color before , which explicitly breaks the symmetry .",
    "still , eq . ( [ etabp ] ) is valid .",
    "pitifully , the belief propagation dynamics is known not to converge for the random version of many combinatorial problems ( including again @xmath0-sat and @xmath5-col ) in the region of the parameters near the sat / unsat threshold .",
    "recently , using tools from statistical physics , it has been possible to reach some understanding of what happens in the solution space of these problems around this threshold  @xcite .",
    "well below the threshold , i.e. where the number @xmath153 of constraints per variable is relatively small , a generic problem has exponentially many solutions , which tend to form one giant cluster : for any two solutions , it is possible to find a connecting path via other solutions that requires short steps only ( each pair of consecutive assignments in the path is close together in hamming distance ) .",
    "close to the critical threshold , however , the solution space breaks up into many smaller clusters .",
    "solutions in separate clusters are generally far apart .",
    "in addition , the cost function @xmath26 $ ] has exponentially many local minima , separated from each other by large cost `` barriers '' .",
    "these local cost minima are exponentially more numerous than the solution clusters , and they act as traps for local search algorithms .    according to the statistical - physics analysis ( which considers the infinite size limit , @xmath154 ) , there exist exponentially many widely separated clusters of solutions .",
    "within one such cluster of solutions , we may identify two types of variables : those which are frozen in one single state , for all configurations belonging to the cluster , and those  unfrozen  which fluctuate from solution to solution inside the cluster .",
    "note that also the variables which are frozen within one solution cluster may change their state when we go to another cluster , there they may even be unfrozen . while in general the above distinction can only provide an approximate description of clusters , it appears from numerical experiments that in many hard random csp , like @xmath49-sat or @xmath5-col , such type of approximation is already rather accurate .",
    "survey propagation turns out @xcite to be able to deal with this clustering phenomenon for large ( finite ) sizes @xmath48 .",
    "although the original derivation uses sophisticated statistical physics ideas , one can also develop it more directly in algorithmic terms .",
    "the main idea is that we do not work any more with individual solutions @xmath25 , but with complete clusters of solutions .",
    "as already said , some variables may be frozen inside a cluster , so they retain one single value @xmath155 in our description .",
    "other variables may take several values n the cluster . for handling these variables",
    ", one can introduce an additional _ joker state _ which we denote by a `` @xmath156 '' .",
    "an even finer description , useful for general csp , uses varieties of joker states , describing the set of values which are allowed for the variable , so that @xmath157 , where @xmath158 is the ensemble built from all subsets of @xmath159 .",
    "to each cluster one should associate exactly one generalized value of each variable .",
    "one can then generalize the constraint to this enlarged space and work out the corresponding belief propagation equations .",
    "the resulting equations are the survey propagation equations .",
    "we shall not develop in more details this derivation , since it does not give any rigorous construction , but we will directly write the equations themselves , in terms of the original variables @xmath160 , and then analyze them .      we first need to define the generalizations of the warnings , the cavity - fields and the local field used in survey propagation . in order to lighten the notation and presentation , we shall drop the generalized , and use the same notation for generalized warning as we used for warnings in the bp section",
    ". the reader should remember that in sp all the messages are generalized messages .    for a given csp",
    ", we define the generalized warnings :    [ def : warningsp ] for a given edge @xmath53 of the factor graph , with @xmath16 and @xmath33 , let @xmath161 be a given set of possible values for the variables @xmath162 which are ` above ' @xmath45 .",
    "we define the * warning * as the @xmath5-component vector @xmath163 with components : @xmath164\\ , \\",
    "p=1, ... ,q,\\ ] ]    ( the generalized warning was called cavity - bias in @xcite ) .",
    "note that the set of possible warnings is enlarged in sp : for the example of 3-col the _ null message _",
    "@xmath165 is added to @xmath126 , @xmath125 and @xmath124 . as we have discussed before ,",
    "the non - null messages are sent if the node `` above '' a function node is assigned a fixed color in the solution cluster .",
    "correspondingly , the new message is sent if this vertex is not fixed to a single color , i.e. if it is in the joker state .",
    "based on these warnings , we define local and cavity fields according to def .",
    "[ def : field ] , with the argument ( a single configuration ) replaced by a set @xmath166 of configurations : @xmath167      histograms of warnings and fields are now defined as sums over clusters .",
    "the histogram of local fields is given by @xmath168 the histogram of the generalized warning on an edge @xmath53 is now called the survey , denoted @xmath169 .",
    "it is defined in terms of the clusters of solutions for the cavity graph where @xmath40 has been taken away .",
    "calling @xmath170 the corresponding clusters , and @xmath171 their numbers , one defines : @xmath172      based on these definitions , one can easily guess the generalized recurrence equations for the ( approximate ) probabilities @xmath173 that implement the solutions in this enlarged configuration space .",
    "these sp equations lead to a small , yet fundamental , modification of the bp equations .",
    "the basic assumption is again , that incoming warnings are independent .",
    "but contradictory messages have to be explicitly forbidden .",
    "having fig .",
    "[ cap : iteration ] in mind , and using the same notations as in sect.[bpeq ] , we use the incoming surveys ( i.e. the set of surveys : @xmath174 with @xmath175 and @xmath176 ) to calculate the cavity - field distributions as in ( [ eq : cavityhbp ] ) : @xmath177 remember that these fields may lead to contradictions , if and only if @xmath178 for at least one @xmath79 .",
    "we therefore introduce the set of all non - contradictory cavity field configurations , @xmath179 then , for an element of @xmath180 we define again @xmath181 the set of allowed configuration for the variable nodes above function node @xmath45 .",
    "now the difference to bp enters : all elements of @xmath182 naturally belong to the same cluster , i.e. they give rise to a _ single _ outgoing warning ! the new warning is thus computed on the set of allowed configurations , it is given by @xmath183 .",
    "its distribution follows immediately , @xmath184 the equations ( [ eq : cavityh],[eq : warningusp ] ) are the sp equations .",
    "note that eq .",
    "( [ eq : warningusp ] ) produces a dramatic change in the iteration of the probabilities with respect to the bp eq .",
    "( [ eq : warningubp ] ) : every allowed cavity - field configuration contributes only one term to the sum .",
    "note also that contradictory messages have to be excluded _",
    "explicitly _ by summing only over @xmath180 . in belief",
    "propagation , for each configuration of input messages one takes the full collection of possible outputs , thereby introducing a bifurcation mechanism ( which may easily become unstable ) . on the contrary , in sp the presence of multiple outputs",
    "is collapsed into the null message ( which may even not be present in the belief propagation formalism as it happens for the coloring problem ) . a variable which receives a message having at least two zero components",
    "will be `` unfrozen '' in the corresponding cluster .",
    "the sp equations ( [ eq : cavityh]-[eq : warningusp ] ) provide a closed set of equation for the surveys .",
    "practically , this recurrence defines a map @xmath185 and we are looking for a fixed point of this map , that will be obtained numerically by starting with some ( random ) initial @xmath186 and applying @xmath187 iteratively : @xmath188{c } m\\textrm { times}\\\\ \\overbrace{\\lambda \\circ \\cdots \\circ \\lambda } \\end{array } \\left\\ { q^{0}_{a\\to i}\\right\\}\\ ] ] such a fixed point will be called a `` self - consistent '' set of surveys .      for the 3-col example , because of the additional null message , the warning distribution now reads @xcite @xmath189 and the sp equations corresponding to fig.[cap : coloring - example ] are given by @xmath190 for @xmath191 . then @xmath192can be computed by normalization ,",
    "i.e : @xmath193 the interpretation of this equation is again straightforward , for simplicity we explain it just for color 1 : now @xmath194 is given by the probability that @xmath108 is forced to take value @xmath195 , i.e. by the probability that the cavity field equals @xmath196 , conditioned to non - contradictory fields .",
    "the numerator calculates the unconditioned probability : the first term excludes @xmath197 which would forbid color 1 to @xmath108 .",
    "the second term takes out fields @xmath198 and @xmath199 where @xmath108 would be allowed to also take at least one other color .",
    "the last term adds again the probability of field @xmath165 which was subtracted twice in the second term .",
    "the denominator realizes the conditioning to non - contradictory fields , i.e. it gives the probability that @xmath200 .",
    "the counting of possible cases follows again the inclusion - exclusion principle : in the first term , we count fields that have a zero component in color @xmath148 , summed over @xmath148 .",
    "we have to subtract the double countings due to fields having two zero - components , and we have to add once the field @xmath165 which was added three times in the first term , and subtracted three times in the second one .",
    "note that the symmetry between colors leads immediately to a solution @xmath201 for all edges @xmath202 of the factor graph , i.e. only null - messages are sent .",
    "this is , however , not the correct solution in the clustered regime , the color symmetry is not valid at the level of solution clusters .",
    "in fact , the appearance of a non - trivial solution for the @xmath203 marks the onset of clustering .      in the sat case , @xmath204 , so possible @xmath205 messages are @xmath206 , @xmath207 , @xmath208 and @xmath209 . as any clause",
    "can be satisfied by any given variable ( by choosing its value according with the negation of its corresponding literal ) , the @xmath210 message will never show up .",
    "moreover , for a given @xmath211 , which of @xmath212 or @xmath213 can appear on @xmath214 will be completely determined by the sign of the corresponding literal .",
    "so we can parameterize distributions @xmath215 with only one real number @xmath216 being the probability of the nontrivial @xmath214 message ( @xmath207 or @xmath208 ) .",
    "the probability of @xmath217 will simply be @xmath218 .",
    "the corresponding equations  which have been written and implemented in @xcite  read in the case of 3-sat :    @xmath219   \\ , \\label{eta1}\\ ] ]    where : @xmath220 \\prod _ { b\\in a^s_a ( j ) } \\left(1-\\eta_{b\\to j}\\right ) \\\\",
    "\\nonumber   \\pi^s_{j\\to a}&= & \\left[1-\\prod _ { b\\in a^s_a(j)}\\left(1-\\eta_{b\\to j}\\right)\\right ]",
    "\\prod _ { b\\in a^u_a ( j ) } \\left(1-\\eta_{b\\to j}\\right)\\\\   \\pi^0_{j\\to a}&= & \\prod _ { b\\in a(j)\\setminus a } \\left(1-\\eta_{b\\to j}\\right ) \\label{eta2}\\end{aligned}\\ ] ] @xmath221,@xmath222 are the two sets in which @xmath223 is decomposed ( @xmath224 ) where the indexes @xmath225 ( resp : @xmath226 ) refer to the neighbors @xmath227 for which the literals @xmath228 and @xmath229 agree ( resp : disagree ) .",
    "this separation corresponds to the the distinction of which neighbors contribute to make variable @xmath79 satisfy or not - satisfy the clause @xmath45 .",
    "for example , the product @xmath230 gives the probability that no nontrivial message arrives on @xmath79 from the function nodes @xmath231 ( empty products are set to @xmath195 by definition ) .",
    "we have already discussed in detail the 3-col problem , a general number @xmath5 of colors can be handled analogously .",
    "messages @xmath64 are elements of @xmath232 forbidding the colors which have @xmath195 in their corresponding coordinate .",
    "we can immediately see that the possible types of @xmath233 message are @xmath234 ( a @xmath195 on the color taken by the variable in the other end of the link ) , plus the additional null message @xmath235 ( if the neighboring variable is in the joker state ) .",
    "so we can parameterize @xmath215 by only @xmath5 real numbers .",
    "-col ]    looking to figure [ cap : iteration - coloring ] , suppose variable @xmath40 has color @xmath57 forbidden ( i.e. the message @xmath64 has a @xmath195 on component @xmath57 ) .",
    "this implies that on this configuration , variable @xmath79 is forced to take color @xmath57 , that is @xmath236 is of the form @xmath237 , with a single @xmath238 in the @xmath57-th position ( `` freezing '' type ) .",
    "for all other @xmath239 the variable @xmath79 is in the joker state and the output message will be @xmath235 .      once the convergence is reached in eq .",
    "( [ eq : lambdaiter ] ) ( we stop when @xmath240 becomes small enough ) , we can use the information computed so far to find a solution to the original problem  @xcite .",
    "we can easily compute ( approximately ) the local - field distributions @xmath241 introduced in eq .",
    "( [ eq : cluster - h ] ) by considering all neighboring function nodes , and forbidding contradictory messages ( remember that in the cavity graph we have deleted the constraints containing variable @xmath40 , whereas in @xmath242 we have to restrict the sum to messages being `` extensible '' to solutions of the complete problem ) : @xmath243 with @xmath244 determined according to eq .",
    "( [ eq : clusterfields ] ) .",
    "the value @xmath245 , with a single zero entry at component @xmath57 , gives now the probability of a variable @xmath40 to be frozen to a certain value @xmath57 .",
    "a simple decimation procedure can be implemented : select the most frozen variable and fix it to its most frozen value , then simplify the problem : certain constraints may already be satisfied independently of the values of other participating variables , and can be deleted from the problem instance .",
    "other constraints may now immediately fix single variables to one state ( unit - clause resolution ) .",
    "reconverge the warning distributions on the smaller subproblem .",
    "the decimation algorithm can have three types of behaviors :    1 .",
    "the algorithm is able to solve the problem fixing all , or almost all variables ( some variables may be still unfixed even if the problem is already solved ) .",
    "the surveys converge at some stage to the trivial solution concentrated on null messages , @xmath246 for all @xmath247 . in this case",
    "sp has nothing more to offer .",
    "luckily , these problems are generally under - constrained and then easy to solve by other means .",
    "note that , for @xmath5-col , the trivial solution exists always . in numerical experiments",
    ", we found that in case of existence of another solution , the latter was the correct one . in this case",
    "it is therefore reasonable to restart the iteration of the sp equations starting from a new random initial condition , even if a trivial solution was found once .",
    "only if no non - trivial solution can be found after several restarts , the subproblem is passed to a different solver .",
    "the sp algorithm does not converge at some stage , even if the initial problem was satisfiable .    on large random instances of @xmath0-sat @xcite or @xmath5-col @xcite , in the hard sat region , but not too close to the satisfiability threshold , numerical experiments show that the algorithm behaves as in case 2 ) .",
    "the generated subproblems turn out to be very simple to solve by other conventional heuristics , e.g. walksat @xcite or unmodified belief propagation .",
    "case 3 ) happens in general very close to the sat / unsat transition .",
    "it is not yet clear if this problem appears due to the existence of finite loops in the original problem ( which make the sp equations to be only approximate ) , due to the simple decimation heuristic which fixes always the most frozen variable , or due to some problems which go beyond the validity of the sp equation itself .",
    "we would like to remark two possible directions of research , among all those that may follow from the presented algorithm .",
    "one is to formalize rigorously the notions suggested in section [ sp ] , allowing for some well defined definitions of the clusters , and a corresponding derivation of the sp equations .",
    "another one , of big computational relevance , is to generalize sp , which was presented in its purest form , to deal with correlations between warnings that arise from local problem structures like small loops in the factor graph , cf .",
    "@xcite for similar generalizations of bp .",
    "a second possible generalization would include diverse structures of the space of solutions , e.g. in a sense of clusters of solution clusters etc . in the language of statistical physics",
    ", this would include `` more than one step of replica - symmetry breaking '' .    after completing this work",
    ", we learned from g. parisi that he has reached a similar conclusion on the interpretation of sp in the colouring problem through the addition of an extra state for the variables @xcite .",
    "* acknowledgment : * it is a pleasure to thank r. mulet , a. pagnani , and f. ricci - tersenghi for numerous discussions .",
    "mm and mw acknowledge the hospitality of the ictp trieste where a part of this work was done .",
    "this work has been supported in part through the ec stipco network , grant no hprn - ct-2002 - 00319 ."
  ],
  "abstract_text": [
    "<S> survey propagation ( sp ) is an algorithm designed for solving typical instances of random constraint satisfiability problems . </S>",
    "<S> it has been successfully tested on random @xmath0-satisfiability ( 3-sat ) and random @xmath1 graph @xmath0-coloring ( 3-col ) , in the _ hard _ region of the parameter space , relatively close the the sat / unsat phase transition . here </S>",
    "<S> we provide a generic formalism which applies to a wide class of discrete constraint satisfaction problems . </S>"
  ]
}
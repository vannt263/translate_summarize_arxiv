{
  "article_text": [
    "difference image analysis ( dia ) has rapidly moved to the forefront of modern techniques for making time - series photometric measurements on digital images .",
    "the method attempts to match one image to another by deriving a convolution kernel describing the changes in the point spread function ( psf ) between images . when applied to a time - series of images using a high signal - to - noise reference image , the differential photometry that can be performed on the difference",
    "images regularly provides superior accuracy to more traditional profile - fitting photometry , achieving errors close to the theoretical poisson limits . moreover , dia is the only reliable way to analyse the most crowded stellar fields",
    ".    one will find dia in use in many projects studying object variability .",
    "for example , microlensing searches ( e.g. @xcite ; @xcite ) have been revolutionised by the ability of dia to deal with exceptionally crowded fields , and surveys for transiting planets ( e.g. @xcite ; @xcite ) looking for small @xmath01% photometric eclipses have benefited substantially from the extra accuracy obtained with this method . also",
    ", dia is not limited to stellar photometry as illustrated by the discovery of light echoes from three ancient supernovae in the large magellanic cloud ( @xcite ) .",
    "the first attempts at image subtraction are summarised in the introduction of @xcite ( from now on al98 ) and are based on trying to determine the convolution kernel by taking the ratio of the fourier transforms of matching bright isolated stars on each image ( @xcite ) .",
    "development of dia reached an important landmark in al98 with their algorithm to determine the convolution kernel directly in image space ( rather than fourier space ) from all pixels in the images by decomposing the kernel onto a set of basis functions .",
    "the algorithm is very successful and efficient , and with the extension to a space - varying kernel solution described in @xcite ( from now on al00 ) , the method has become the current standard in dia .",
    "in fact , all dia packages use the associated software package isis2.2 ( e.g. @xcite ; @xcite ) , or are implementations of the alard algorithm ( e.g. @xcite ) .",
    "we refer to the method described in al98 and al00 as the alard algorithm .",
    "in this letter we suggest a change to the main algorithm to determine the convolution kernel that retains the linearity of the least - squares problem and yet is simpler to implement , has fewer input parameters and is in general more robust ( section  2 ) .",
    "we compare our algorithm directly to the alard algorithm ( section  3 ) , and suggest more techniques that increase the quality of the subtracted images . we conclude in section  4 .",
    "consider a pair of registered images of the same dimensions , one being the reference image with pixels @xmath1 , and the other the current image to be analysed with pixels @xmath2 , where @xmath3 and @xmath4 are pixel indices refering to the column @xmath3 and row @xmath4 of the image .",
    "ideally the reference image will be the better seeing image of the two and have a very high signal - to - noise ratio .",
    "this can be achieved in practice by stacking a set of best - seeing images .    as with the method of al98",
    ", we use the model @xmath5_{ij } + b_{ij } \\label{eqn : model}\\ ] ] to represent the current image @xmath2 , where we wish to find a suitable convolution kernel @xmath6 and differential background @xmath7 . formulating this as a least - squares problem",
    ", we want to minimise the chi - squared @xmath8 where the @xmath9 represent the pixel uncertainties .    at this point in the alard algorithm ,",
    "the problem is converted to standard linear least - squares by decomposing the kernel @xmath6 onto a set of gaussian basis functions , each multiplied by polynomials of the kernel coordinates @xmath10 and @xmath11 , and by assuming that the differential background @xmath7 is represented by a polynomial function of the image coordinates @xmath12 and @xmath13 .",
    "spatial variation of the convolution kernel is modelled by further multiplying the kernel basis functions by polynomials in @xmath12 and @xmath13 .",
    "this method has a major drawback in that it assumes that the chosen kernel decomposition is sufficiently complex so as to model in detail the convolution kernel",
    ". how do we know that we are making the correct choice of basis functions ?",
    "different situations may require different combinations of basis functions of varying complexity .",
    "in fact , a feature of all current dia packages ( which are all based on the al98 prescription for kernel basis functions ) is the requirement that the user defines the number of gaussian basis functions used , their associated sigma values and the degrees of the modifying polynomials .",
    "this sort of parameterisation can end up being confusing for the user , and require a large amount of experimentation to obtain the optimal result for a specific data set .      with this motivation",
    ", we have developed a new dia algorithm in which we make no assumptions about the functional form of the basis functions representing the kernel .",
    "considering a spatially invariant kernel , we represent the kernel as a pixel array @xmath14 with @xmath15 pixels where @xmath16 and @xmath17 are pixel indices corresponding to the column @xmath16 and row @xmath17 of the kernel .",
    "we also define the differential background as some unknown constant @xmath18 .",
    "hence we may rewrite equation  ( [ eqn : model ] ) as : @xmath19 this equation has @xmath20 unkowns for which we require a solution .",
    "note that the kernel may be of any shape that includes the pixel @xmath21 , and so to preserve symmetry in all directions , we adopt a circular kernel ( instead of the standard square shape ) .    in order to solve for @xmath14 and @xmath18 in the least - squares sense , we note that the @xmath22 in equation  ( [ eqn : chisq ] ) is at a minimum when the gradient of @xmath22 with respect to each of the parameters @xmath14 and @xmath18 is equal to zero . performing the @xmath20 differentiations and rewriting the set of linear equations in matrix form",
    ", we obtain the matrix equation @xmath23 with : @xmath24 where @xmath25 and @xmath26 are generalised indices for the vector of unknown quantities @xmath27 , with associated kernel indices @xmath28 and @xmath29 respectively . finding the solutions and @xmath18",
    "since the solution depends on the pixel variances @xmath30 which in turn depend on the image model values @xmath31 . see section  [ uncertainties ] ] for @xmath14 and @xmath18 requires the construction of the matrix @xmath32 and vector @xmath33 , inverting @xmath32 and calculating @xmath34 .",
    "every pixel on both the reference image and current image has the potential to be included in the calculation of @xmath32 and @xmath33 .",
    "however , we ignore bad / saturated pixels on both images , and also any pixels on the current image for which the calculation of the corresponding model pixel value includes a bad / saturated pixel on the reference image .",
    "this implies that a single bad / saturated pixel on the reference image can discount a set of pixels equal to the kernel area on the current image .",
    "hence bad / saturated pixels on the reference image should be kept to a minimum , and excessively large kernels should be avoided .",
    "the kernel sum @xmath35 is a measure of the mean scale factor between the reference image and the current image , and consequently it includes the effects of relative exposure time and atmospheric extinction .",
    "we refer to @xmath36 as the photometric scale factor .",
    "although it is not essential , we suggest that a constant background estimate is subtracted from the reference image before solving for the kernel and differential background since this will minimse any correlation between @xmath36 and @xmath18 .",
    "finally , we mention that a difference image @xmath37 is defined as @xmath38 . assuming that most objects in the reference image are constant sources ,",
    "then a difference image will consist of random noise ( mainly poisson noise from photon counting ) except where a source has varied in brightness or the background pattern has varied .",
    "sources that are brighter or dimmer at the epoch of the current image relative to the epoch of the reference image will show up as positive or negative flux residuals , respectively , on the difference image .",
    "these areas may be measured to yield a difference flux for each object of interest .",
    "we take the following standard ccd noise model for the pixel variances : @xmath39 where @xmath40 is the ccd readout noise ( adu ) , @xmath41 is the ccd gain ( e@xmath42/adu ) and @xmath43 is the master flat field image . note that the @xmath9 depend on the image model @xmath31 and consequently , fitting @xmath31 becomes an iterative process .",
    "note also that we assume that the reference image @xmath1 and master flat field image @xmath43 are noiseless since these are high s / n ratio images .",
    "finally , if the current image was registered with the reference image via a geometric transformation , then the flat field @xmath43 that is actually used in the noise model must be the result of the same transformation applied to the original master flat field .    in order to calculate an initial kernel and differential background solution",
    ", we set the @xmath31 to the image values @xmath2 . in subsequent iterations , we use the current image model to set the @xmath9 as per equation  [ eqn : noise_model ] .",
    "we also employ a 3@xmath44 clip algorithm during the iterative model fitting process in order to prevent outlier image pixel values from entering the solution . after each iteration",
    ", we calculate the absolute normalised residuals @xmath45 for all pixels . any pixels with @xmath46",
    "are ignored in subsequent iterations .",
    "the iterations are stopped when no more image pixels are rejected and at least two iterations have been performed .      in extending our new method to solving for a spatially variant kernel solution , we preserve flexibility by splitting the image area into an @xmath47 by @xmath48 grid of sub - regions and solving for the kernel and differential background in each sub - region .",
    "the coarse grid of kernel and differential background solutions may be interpolated to yield the solution corresponding to any given image pixel . in this way",
    "we make no assumptions about how the kernel and differential background vary across the image area .",
    "this is in contrast to al00 , whose method employs an extension of the kernel basis functions by further multiplication by polynomials in @xmath12 and @xmath13 , and therefore requires two more input parameters from the user , namely the degrees of the polynomials describing the spatial variation of the kernel and the differential background .",
    "to illustrate the potential advantages of our new kernel solution method over that of al98 , we carry out a set of simple tests on a 1024@xmath491024 pixel ccd image of the globular cluster ngc1904 . in each test",
    "we use the original image as the reference image @xmath1 and a transformed version of the original image as the current image @xmath2 , where the transformations employed are simple , spatially invariant and typical of astronomical imaging .",
    "we attempt to solve for the kernel using our new method , which is implemented in a software package called dandia ( bramich in prep . ) , and we compare the solution to that obtained using the isis2.2 software from al00 .",
    "we use the isis2.2 default parameters specifying 3 gaussian basis functions of @xmath50  pix with modifying polynomials of degree 6 , 4 and 3 , respectively . for both software packages ,",
    "we choose to solve for a spatially invariant kernel of size 27@xmath4927 pixels , and a constant differential background .",
    "the better the match between the convolved reference image and the current image , the smaller the value of the quantity @xmath51 .",
    "we guage the relative quality of the kernel solutions by calculating the noise ratio @xmath52 where @xmath53 and @xmath54 are values of @xmath55 calculated for a small 80x80 pixel sub - region using isis2.2 and dandia , respectively .",
    "the results of the tests described below are shown in figure  [ fig : test1 ] :    1 .   in test a",
    ", the current image has been created by shifting the reference image by one pixel in each of the positive @xmath12 and @xmath13 spatial directions , without resampling .",
    "the corresponding kernel should be the identity kernel ( central pixel value of 1 and 0 elsewhere ) shifted by one pixel in each of the negative @xmath10 and @xmath11 kernel coordinates .",
    "dandia recovers this kernel to within numerical rounding errors whereas isis2.2 recovers a peak pixel value of 0.995 with other absolute pixel values of up to 0.004 .",
    "consequently the residuals in the isis2.2 difference image are considerably worse than those for dandia , and the noise ratio is @xmath56 .",
    "2 .   in test b ,",
    "the current image has been created by convolving the reference image with a gaussian of fwhm 4.0  pix . both dandia and isis2.2",
    "recover the kernel successfully , but dandia out - performs isis2.2 with @xmath57 .",
    "3 .   in test c , we shifted the reference image by half a pixel in each of the positive @xmath12 and @xmath13 spatial directions to create the current image , an operation that required the resampling of the reference image .",
    "we used the cubic o - moms resampling method ( see section  [ resample ] ) .",
    "isis2.2 fails to reproduce the highly complicated kernel matching the two images , whereas dandia does a nearly perfect job .",
    "the noise ratio is @xmath58 .",
    "4 .   in test d",
    ", we simulate a telescope jump by setting @xmath59 where @xmath60 is a resampled version of the reference image shifted by 3.5 pixels in each of the positive @xmath12 and @xmath13 spatial directions .",
    "the corresponding kernel is a combination of the identity kernel and a shifted version of the kernel from test  c. dandia accurately reproduces this kernel with a central pixel value of 0.60015 whereas isis2.2 produces a poor approximation of the kernel with a central pixel value of 0.631 .",
    "the noise ratio is @xmath61 .",
    "it is evident that the gaussian basis functions used in isis2.2 limit the flexibility of the kernel solution to modelling kernels that are centred near the kernel centre and that have scale sizes similar to the sigmas of the gaussians employed .",
    "it is only in test b that isis2.2 can closely model the kernel , simply because the kernel itself is a gaussian .",
    "tests a , c & d show how isis2.2 is unable to model sharp , complicated and off - centred kernels .",
    "dandia does not suffer from any of these limitations since it makes no assumption about the kernel shape , and hence it performs superbly in all of the above tests .      in section  2 ,",
    "we make the assumption that the reference image and current image are registered , which implies that one of the images has been transformed to the pixel coordinate system of the other image , usually via image resampling .",
    "ideally one should transform the reference image to the current image since the reference image forms part of the model . in this way",
    ", the pixel variances in the current image are left uncorrelated from pixel to pixel . however",
    ", most implementations of dia transform the current image to the coordinate system of the reference image using image resampling .",
    "we suggest two improvements to this methodology .",
    "firstly , if resampling is to be employed , one should use an optimal resampling method .",
    "we employ the cubic o - moms ( optimal maximal - order - minimal - support ) basis function for resampling , which is constructed from a linear combination of the cubic b - spline function and its derivatives .",
    "the o - moms class of functions have the highest approximation order and smallest approximation error constant for a given support ( @xcite ) .",
    "secondly , our kernel model does not use basis functions that are functions of the kernel pixel coordinates .",
    "consequently , for two images that require only a translation to be registered , the image resampling is incorporated in the kernel solution , avoiding the problem of correlated pixel noise .",
    "dia is used extensively for extracting lightcurves of objects in time - series images , which usually only have a small pixel shift between images . by translating the current image to the reference image by an integer pixel shift , avoiding image resampling , the kernel solution process can do the rest of the job of matching the reference image to the current image .",
    "we now test our new algorithm on a pair of 1024@xmath491024  pixel images of ngc1904 from the same camera with fwhms of @xmath03.2  pix and @xmath04.9  pix . using matching star pairs ,",
    "we derive a linear transformation between the images that consists of a translation with negligible rotation , shear and scaling . from the calibration images , we measure a gain of 1.48  e@xmath42/adu and a readout noise of 4.64  adu , and we construct a master flat field for use in the noise model . on the left of figure  [ fig : test2 ] , we present 100@xmath49100 pixel cutouts of the reference image ( the better seeing image ) and the current image .    when calculating the @xmath22 of the difference images , we use a modified version of equation  [ eqn : noise_model ] to account for the noise contribution from the single - exposure reference ] where @xmath62 is the space variant kernel and @xmath63 is a factor correcting for the noise distortion from resampling the reference image .",
    "the value of @xmath63 depends on the resampling method used and the coordinate transformation applied .",
    "we calculate @xmath63 by generating a 1024@xmath491024 pixel image of values drawn from a normal distribution with zero mean and unit sigma , resampling the image using the same method and transformation as that applied to the reference image , and then fitting a gaussian to the histogram of transformed pixel values , the sigma of which indicates the value of @xmath63 . for cubic o - moms resampling and the transformation between our two test images , we obtain @xmath64  0.884 .",
    "our first pair of tests involves registering the images by resampling the reference image via cubic o - moms and then using dandia ( test e ) and isis2.2 ( test f ) to generate difference images . for dandia , we solve for an array of circular kernels corresponding to a 10@xmath4910 grid of image sub - regions , where each kernel contains 317 pixels . the kernel used to convolve each pixel on the reference image",
    "is calculated via bilinear interpolation of the array of kernels .",
    "the results of test e are displayed in the upper middle panel of figure  [ fig : test2 ] where we show the difference image normalised by the pixel noise from equation  [ eqn : noise_model2 ] with a linear scale from -2 to 2 .",
    "two variable stars are visible ( rr lyraes ) and the cosmic ray from the reference image has created a negative flux on the difference image . in the same panel",
    "we plot the histogram of normalised pixel values overlaid with a gaussian fit , and calculate a @xmath65 , ignoring the small pixel areas including the variable stars and the cosmic ray ( 250  pix ) .",
    "the 100@xmath49100 pixel cutout corresponds to one image sub - region used to determine a kernel solution and hence we may calculate a reduced chi - squared @xmath66 by assuming @xmath67 .    for isis2.2",
    "we solve for a spatially variant kernel of degree 2 with a spatially variant differential background of degree 3 in addition to the other default kernel basis functions ( see section  [ initialtests ] ; 328 free parameters ) .",
    "the results of test f are shown in the upper right panel of figure  [ fig : test2 ] .",
    "we obtain @xmath68 , and assuming @xmath03 free parameters per image sub - region , we obtain @xmath69 .",
    "tests g & h involve registering the images to within 1 pixel by translating the reference image via an integer pixel shift",
    ". then we apply dandia ( test g ) and isis2.2 ( test h ) to obtain kernel solutions , avoiding the use of resampling . for dandia",
    "we obtain @xmath70 , and for isis2.2 we obtain @xmath71 , with corresponding @xmath72 of 0.99 and 1.00 , respectively ( see figure  [ fig : test2 ] ) .    visually , the normalised difference image cutouts in figure  [ fig : test2 ] are very similar , and differences are only noticeable after detailed scrutiny .",
    "however , the @xmath22 analysis reveals that our algorithm performs considerably better than the alard algorithm ( test e performs 0.60@xmath44 better than test f , and test g performs 0.38@xmath44 better than test h ) , and that image resampling degrades the difference images ( test g performs 0.48@xmath44 better than test e , and test h performs 0.70@xmath44 better than test f ) .",
    "the highest quality difference image was produced by using dandia on the two images aligned to within 1 pixel but without resampling ( test g , which performs 1.08@xmath44 better than test f ) .",
    "we have presented a new method for determining the convolution kernel matching a best - seeing reference image to another image of the same field .",
    "the method involves modelling the kernel as a pixel array , avoiding the use of possibly inappropriate basis functions , and eliminating the need for the user to specify which basis functions to use via numerous parameters . for images that require a translation to be registered ,",
    "the kernel pixel array incorporates the resampling process in the kernel solution , avoiding the need to resample images , which degrades their quality and creates correlated pixel noise .",
    "kernels modelled by basis functions may only partly compensate for sub - pixel translations since the basis functions are centred at the origin of the kernel coordinates .",
    "we have shown that our new method can produce higher quality difference images than isis2.2 .",
    "ideally the reference image should be aligned with the current image , preferably without resampling , but using o - moms resampling when necessary .",
    "the flexibility of our kernel model allows the construction of difference images for telescope jumps , or trailed images , which is where isis2.2 fails .",
    "these improvements have important implications for time - series photometric surveys .",
    "better quality difference images implies more accurate lightcurves , and the increased kernel flexibility will lead to less data loss due to telescope tracking and/or focus errors .",
    "d.m .  bramich would like to thank k.  horne and m.  irwin for their useful advice , and a.  arellano ferro for supplying the test images .",
    "this work is dedicated to phoebe and chloe bramich muiz ."
  ],
  "abstract_text": [
    "<S> in the context of difference image analysis ( dia ) , we present a new method for determining the convolution kernel matching a pair of images of the same field . </S>",
    "<S> unlike the standard dia technique which involves modelling the kernel as a linear combination of basis functions , we consider the kernel as a discrete pixel array and solve for the kernel pixel values directly using linear least - squares . </S>",
    "<S> the removal of basis functions from the kernel model is advantageous for a number of compelling reasons . </S>",
    "<S> firstly , it removes the need for the user to specify such functions , which makes for a much simpler user application and avoids the risk of an inappropriate choice . </S>",
    "<S> secondly , basis functions are constructed around the origin of the kernel coordinate system , which requires that the two images are perfectly aligned for an optimal result . </S>",
    "<S> the pixel kernel model is sufficiently flexible to correct for image misalignments , and in the case of a simple translation between images , image resampling becomes unnecessary . </S>",
    "<S> our new algorithm can be extended to spatially varying kernels by solving for individual pixel kernels in a grid of image sub - regions and interpolating the solutions to obtain the kernel at any one pixel .    </S>",
    "<S> [ firstpage ]    techniques : image processing , techniques : photometric , methods : statistical </S>"
  ]
}
{
  "article_text": [
    "sudan and guruswami s list decoding of reed - solomon codes @xcite has developed into algebraic soft - decision decoding by koetter and vardy @xcite . as reed - solomon codes are widely used in coding applications ,",
    "algebraic soft - decision decoding is regarded as one of the most important developments for reed - solomon codes .",
    "hence there have been many subsequent works to make the decoding method efficient and practical @xcite .",
    "engineers have proposed fast electronic circuits implementing the algebraic soft - decision decoder @xcite .",
    "one may say that the algebraic soft - decision decoding of reed - solomon codes is now in a mature state for deployment in applications @xcite .",
    "reed - solomon codes are the simplest algebraic geometry codes @xcite .",
    "therefore it is natural that the list decoding of reed - solomon codes was soon extended to algebraic geometry codes by shokrollahi and wasserman @xcite and guruswami and sudan @xcite .",
    "however , it seems that no algebraic geometry codes other than reed - solomon codes have been considered for algebraic soft - decision decoding .",
    "one reason for this unbalanced situation is presumably that the complexity of an algebraic soft - decision decoder for algebraic geometry codes would be prohibitively huge as the complexity for reed - solomon codes is already very large .",
    "however , algebraic geometry codes have the advantage that they are longer than reed - solomon codes over the alphabet of the same size , promising better performance .",
    "we may also expect that once we have an explicit formulation of algebraic soft - decision decoding for algebraic geometry codes , some clever ways to reduce the complexity to a practical level may be found , as has happened for reed - solomon codes @xcite .    in this work",
    ", we present an algebraic soft - decision decoder for hermitian codes .",
    "hermitian codes are one of the best studied algebraic geometry codes , and they are often regarded as the first candidate among algebraic geometry codes that could compete with reed - solomon codes . to formulate an algebraic soft - decision decoder for hermitian codes",
    ", we basically follow the path set out by koetter and vardy for reed - solomon codes .",
    "thus there are three main steps of the decoding : the multiplicity assignment step , the interpolation step , and the root - finding step . for the multiplicity assignment step and the root - finding step , we may use algorithms in @xcite and @xcite , respectively . here",
    "we focus on the interpolation step , the goal of which is to construct the @xmath0-polynomial whose roots give the candidate codewords . as for mathematical contents , this work is an extension of our previous @xcite and @xcite .",
    "the core contribution of the present work is an algorithm constructing a set of generators of a certain module from which we extract the @xmath0-polynomial using the grbner conversion algorithm given in @xcite .    in section 2 ,",
    "we review the definitions of basic concepts and the properties of hermitian curves and codes .",
    "we refer to @xcite and @xcite for the basic theory of algebraic curves and algebraic geometry codes , and @xcite and @xcite for grbner bases and commutative algebra . in section 3",
    ", we formulate the algebraic soft - decision decoding of hermitian codes .",
    "we present our interpolation algorithm in section 4 and a complexity analysis of the decoding algorithm in section 5 . in section 6 ,",
    "we provide some simulation results of the algebraic soft - decision decoder .",
    "as this work is an extension of @xcite , we omitted some proofs that can be found in that work but allowed some similar materials included here for exposition purposes .",
    "let @xmath1 be a prime power , and let @xmath2 denote a finite field with @xmath3 elements .",
    "the hermitian curve @xmath4 is the affine plane curve defined by the absolutely irreducible polynomial @xmath5 over @xmath2 .",
    "the coordinate ring of @xmath6 is the integral domain @xmath7/{\\langle{y^q+y - x^{q+1}}\\rangle}={\\mathbb{f}}[x , y],\\ ] ] with @xmath8 and @xmath9 denoting the residue classes of @xmath10 and @xmath11 , respectively .",
    "note that every element of @xmath12 can be written uniquely as a polynomial of @xmath8 and @xmath9 with @xmath9-degree less than @xmath1 , as we have @xmath13 .",
    "so @xmath12 is also a free module of rank @xmath1 over @xmath14 $ ] .",
    "the function field @xmath15 is the quotient field of @xmath12 .    for each @xmath16 , there are exactly @xmath1 elements @xmath17 such that @xmath18",
    ". therefore there are @xmath19 rational points @xmath20 of @xmath6 with @xmath21 , which can be grouped into @xmath3 classes of @xmath1 points with the same @xmath8-coordinates .",
    "a rational point @xmath22 of @xmath6 is associated with a maximal ideal @xmath23 , and the local ring @xmath24 of @xmath6 at @xmath22 is the localization of @xmath12 at @xmath25 . for a nonzero @xmath26 ,",
    "the valuation @xmath27 is the largest integer @xmath28 such that @xmath29 .",
    "the projective closure of @xmath6 is a smooth curve with a unique rational point @xmath30 at infinity . the functions @xmath8 and @xmath9 on @xmath6 have poles at @xmath30 of orders",
    "@xmath1 and @xmath31 , respectively , that is , @xmath32 and @xmath33 .",
    "the genus of @xmath6 is given by @xmath34 .",
    "it is well known that the number of rational points of the curve @xmath6 attains the maximum value possible for the genus and the size of the base field .      for @xmath35 ,",
    "the @xmath2-linear space @xmath36 has a basis consisting of @xmath37 for @xmath38 , @xmath39 , and @xmath40 .",
    "therefore @xmath41    recall that the hamming space @xmath42 is an @xmath2-linear space with the hamming distance function @xmath43 . for @xmath44 ,",
    "let @xmath45 .",
    "the evaluation map @xmath46 defined by @xmath47 is a linear map over @xmath2 .",
    "we now fix a positive integer @xmath48 .",
    "the hermitian code @xmath49 is defined to be the image of @xmath50 by the evaluation map .",
    "if @xmath51 , then @xmath52 is injective on @xmath50 , and the dimension of @xmath49 is equal to @xmath53 , which is @xmath54 for @xmath55 by the riemann - roch theorem .",
    "note also that the minimum distance of @xmath49 is at least @xmath56 .",
    "define @xmath57 for @xmath44 . for a vector @xmath58 ,",
    "define @xmath59 we can easily prove that @xmath60 if @xmath61 , and @xmath62 otherwise . therefore @xmath63 for all @xmath64 .",
    "let @xmath65 and @xmath66 .",
    "we consider the hermitian curve @xmath6 defined by @xmath67 over @xmath68 .",
    "there are @xmath69 rational points on @xmath6 , @xmath70 let @xmath71 .",
    "the linear space @xmath72 is spanned by the basis @xmath73 .",
    "hermitian code @xmath74 is a linear code over @xmath68 of length @xmath69 and dimension @xmath75 .",
    "we use the following generator matrix for encoding @xmath76 note that the positions @xmath77 form an information set of @xmath78 .",
    "our message is @xmath79 , which is encoded into the codeword @xmath80 the functions @xmath81 are as follows : @xmath82 we will continue this example throughout .      the smooth surface @xmath83 has the coordinate ring @xmath84=r[z]$ ] .",
    "the function field @xmath85 is the quotient field of @xmath86 .",
    "a rational point @xmath87 of @xmath88 is a pair @xmath89 with @xmath44 and @xmath90 , and is associated with a maximal ideal @xmath91 .",
    "the local ring @xmath92 of @xmath88 at @xmath87 is the localization of @xmath86 at @xmath93 .",
    "a nonzero function @xmath94 defines a curve on the surface @xmath88 .",
    "the multiplicity of @xmath95 at a rational point @xmath87 , denoted @xmath96 , is the largest integer @xmath28 such that @xmath97 .",
    "we note the following properties of multiplicity on the surface @xmath88 .",
    "let @xmath22 be a rational point of @xmath6 .",
    "* if @xmath26 , then @xmath98 for every @xmath90 . * for @xmath26 , @xmath99 if @xmath100 , and @xmath62 otherwise . * for @xmath101 , @xmath102 for every rational point @xmath87 of @xmath88 .",
    "suppose that some codeword of @xmath49 was sent through a noisy channel .",
    "the output of the channel is some probabilistic information , for each location @xmath103 , of the plausibility of each @xmath90 .",
    "the multiplicity assignment step translates the information to a doubly indexed list @xmath104\\ ] ] of nonnegative integers , where we regard @xmath105 as assigned to the point @xmath106 .",
    "the integer value @xmath105 would be chosen roughly proportional to the plausibility of the symbol @xmath107 according to the channel output .",
    "we call @xmath108 the multiplicity matrix .    corresponding to @xmath108 , define @xmath109\\mid\\text{$\\operatorname{mult}_{(p_i,\\gamma)}(f)\\ge m_{i\\gamma}$ for $ 1\\le i\\le n , \\gamma\\in{\\mathbb{f}}$}\\}},\\ ] ] an ideal of @xmath110 $ ] .",
    "we call @xmath111 the interpolation ideal",
    ". note that by definition @xmath112    for a vector @xmath58 , the score of @xmath113 with respect to @xmath108 is defined as @xmath114 hence @xmath115 is also the sum of the multiplicities of the points through which the curve @xmath116 passes .",
    "the task of the algebraic soft - decision decoder is to find the codeword that has the best score with respect to @xmath108 .",
    "this codeword is presumed to be the most likely to have been sent , given the channel output .",
    "[ djcqoe ] suppose that the codeword in the previous example is sent through a noisy channel and received data gives rise to the matrix of the plausibilities of symbols @xmath117 which is then translated to the multiplicity matrix @xmath118 where the rows are indexed by @xmath119 from top to bottom .",
    "note that neither of the vectors @xmath120 and @xmath121 that have the best score with respect to @xmath108 is a codeword of @xmath74 .",
    "[ lemabcd ] let @xmath122 $ ] be the multiplicity matrix",
    ". then @xmath123/i_m=\\sum_{i=1}^n\\sum_{\\gamma\\in{\\mathbb{f}}}\\binom{m_{i\\gamma}+1}{2}.\\ ] ]    since @xmath111 is a zero - dimensional ideal , @xmath124/i_m&=\\sum_{i=1}^n\\sum_{\\gamma\\in{\\mathbb{f}}}\\dim_{{\\mathbb{f}}}{\\mathcal{o}}_{(p_i,\\gamma)}/i_m{\\mathcal{o}}_{(p_i,\\gamma)}\\\\          & = \\sum_{i=1}^n\\sum_{\\gamma\\in{\\mathbb{f}}}\\dim_{{\\mathbb{f}}}\\hat{\\mathcal{o}}_{(p_i,\\gamma)}/i_m\\hat{\\mathcal{o}}_{(p_i,\\gamma ) } , \\end{split}\\ ] ] where @xmath125 denotes the completion of the local ring .",
    "if @xmath126 is a uniformizing parameter of @xmath127 and @xmath128 , then @xmath129 is isomorphic to @xmath130 $ ] .",
    "so @xmath131 is isomorphic to @xmath130/(s , t)^{m_{i\\gamma}}$ ] .",
    "the conclusion follows .",
    "let @xmath132 with @xmath133 .",
    "then @xmath134/(i_m+{\\langle{z-\\mu}\\rangle})=\\operatorname{score}(v).\\ ] ]    as in the previous proof , @xmath123/(i_m+{\\langle{z-\\mu}\\rangle } )      = \\sum_{i=1}^n\\sum_{\\gamma\\in{\\mathbb{f}}}\\dim_{{\\mathbb{f}}}\\hat{\\mathcal{o}}_{(p_i,\\gamma)}/(i_m+{\\langle{z-\\mu}\\rangle})\\hat{\\mathcal{o}}_{(p_i,\\gamma)}.\\ ] ] let @xmath126 be a uniformizing parameter of @xmath127 and @xmath128 again . we find that if @xmath135 , then @xmath136 is isomorphic to @xmath130/({\\langle{s , t}\\rangle}^{m_{i\\gamma}}+{\\langle{s - tu}\\rangle})={\\mathbb{f}}[[t]]/{\\langle{t^{m_{i\\gamma}}}\\rangle}$ ] , but collapses to the zero ring otherwise . here",
    "@xmath48 is some unit in @xmath129 .",
    "the conclusion follows .    for @xmath137 $ ] with @xmath138 ,",
    "the @xmath48-weighted degree of @xmath95 is defined as @xmath139 for @xmath140 $ ] and @xmath141 , denote by @xmath142 the element in @xmath12 that is obtained by substituting @xmath143 with @xmath144 in @xmath95 . observe that if @xmath145 , then @xmath146 .",
    "the algebraic soft - decision decoding of hermitian codes rests upon the following    [ thmakwe ] suppose @xmath147 is nonzero . if a codeword @xmath148 of @xmath49 with @xmath149 satisfies @xmath150 then @xmath151 .",
    "assume that @xmath152 is not zero in @xmath12 .",
    "then @xmath153/{\\langle{f , z-\\mu}\\rangle})\\\\                  & \\ge\\dim_{\\mathbb{f}}(r[z]/(i_m+{\\langle{z-\\mu}\\rangle})=\\operatorname{score}(c ) .",
    "\\end{split}\\ ] ] for the first equality , see lemma 5 in @xcite .",
    "this implies that if @xmath154 , we must have @xmath151 .    in the interpolation step , the decoder picks a polynomial @xmath147 . then by proposition [ thmakwe ] , all codewords",
    "whose score with respect to @xmath108 is big enough can be obtained from the roots of @xmath95 over @xmath12 .",
    "thus the decoder can find among the candidates the codeword that has the best score with respect to @xmath108 .",
    "it should be noted that for the best performance of algebraic soft - decision decoding , it is crucial for the decoder to find a polynomial in @xmath111 with the smallest @xmath48-weighted degree .",
    "having the same weighted degree , the one with smaller degree in @xmath143 is preferred because this reduces the work of the root - finding step .",
    "here the idea of grbner bases is relevant .",
    "we call the elements in the set @xmath155 monomials of @xmath110 $ ] . recall that every element of @xmath110 $ ] can be written as a unique linear combination over @xmath2 of monomials of @xmath110 $ ]",
    ". note that @xmath156 for two monomials @xmath157 , @xmath158 in @xmath159 , we declare @xmath160 if @xmath161 or @xmath162 when tied .",
    "it is easy to verify that @xmath163 is a total order on @xmath159 .",
    "notions such as the leading term and the leading coefficient of @xmath140 $ ] are defined in the usual way . for @xmath140 $ ] ,",
    "the @xmath143-degree of @xmath95 , written @xmath164 , is the degree of @xmath95 as a polynomial in @xmath143 over @xmath12 .",
    "now we define the @xmath0-polynomial of @xmath111 as the unique , up to a constant multiple , element in @xmath111 with the smallest leading term with respect to @xmath163 . by the definition",
    ", the @xmath0-polynomial is an element of @xmath111 with the smallest @xmath48-weighted degree , and moreover it has the smallest @xmath143-degree among such elements .",
    "therefore we may say that the @xmath0-polynomial is an optimal choice for the interpolation step .",
    "the last step of algebraic soft - decision decoding is to compute roots of the @xmath0-polynomial over @xmath12 or the function field @xmath15 . only those roots that belong to @xmath50 yield candidate codewords .",
    "if the list of the candidate codewords is empty , the decoder may declare decoding failure or resort to hard - decision decoding directly from the channel output .",
    "if there are several codewords in the list , then the decoder chooses the codeword that has the best score , and outputs the received message by projecting the codeword on the information set .",
    "[ cjops ] the @xmath0-polynomial of @xmath111 @xmath165 is obtained by the interpolation algorithm in the next section .",
    "it turns out the @xmath0-polynomial has the factorization @xmath166 therefore a root - finding algorithm will output two roots .",
    "the first root @xmath167 gives the codeword @xmath168 whose score is @xmath169 while the second root @xmath170 gives the codeword @xmath171 whose score is @xmath172 .",
    "therefore the decoder chooses @xmath173 , and the received message is @xmath174 which is the correct sent message .",
    "we will need upper bounds on the @xmath48-weighted degree and the @xmath143-degree of the @xmath0-polynomial of @xmath111 .",
    "let @xmath0 denote the @xmath0-polynomial of @xmath111 .",
    "[ propdkwd ] if @xmath175 is a finite set of monomials of @xmath110 $ ] such that @xmath176 then there is a set of coefficients @xmath177 such that @xmath178 .",
    "lemma [ lemabcd ] implies that monomials in @xmath179 are linearly dependent over @xmath2 in @xmath110/i_m$ ] .",
    "on the other hand , they are linearly independent over @xmath2 in @xmath110 $ ] .    in a table",
    ", we arrange monomials of @xmath110 $ ] such that the monomials in the same column have the same @xmath48-weighted degree and the monomials in the same row have the same @xmath143-degree .",
    "let weighted degrees increase from left to right and @xmath143-degrees from bottom to top .",
    "note that @xmath180 .",
    "so we have the following table @xmath181 the symbol @xmath182 indicates that there is no monomial for the position .",
    "the table of monomials of @xmath110 $ ] suggests the following formula .",
    "let @xmath183 if @xmath184 is a weierstrass gap at @xmath30 , and @xmath185 otherwise .",
    "note that @xmath186 for @xmath187 .",
    "the number of monomials with @xmath48-weighted degree @xmath184 is @xmath188 let @xmath189 be the smallest integer such that @xmath190 let @xmath191 .",
    "then the @xmath48-weighted degrees and the @xmath143-degrees of monomials up to the @xmath192th monomial are not greater than @xmath189 and @xmath193 , respectively .",
    "now proposition [ propdkwd ] implies @xmath194 and @xmath195 .",
    "@xmath196 , and @xmath186 for @xmath197 since @xmath198 .",
    "so we have @xmath199 for our @xmath108 , @xmath200",
    ". therefore @xmath201 , @xmath202 .",
    "hence @xmath203 and @xmath204 .",
    "let @xmath193 be a positive integer such that @xmath195 . define @xmath205_l={\\{f\\in r[z]\\mid { \\text{$z$-$\\deg$}}(f)\\le l\\}}.\\ ] ] note that @xmath110_l$ ] is a free module over @xmath12 of rank @xmath206 with a free basis @xmath207 .",
    "define @xmath208_l.\\ ] ] clearly @xmath209 is a submodule of @xmath110_l$ ] over @xmath12 .",
    "recall that the ring @xmath210 $ ] is in turn a free module over @xmath14 $ ] of rank @xmath1 , with a free basis @xmath211 .",
    "so we may view @xmath110_l$ ] as a free module of rank @xmath212 over @xmath14 $ ] with a free basis @xmath213 .",
    "the elements of @xmath214_l$ ] will be called monomials of @xmath110_l$ ] .",
    "it is clear that the total order @xmath163 is precisely a monomial order on the free module @xmath110_l$ ] over @xmath14 $ ] .",
    "we also view @xmath209 as a submodule of the free module @xmath110_l$ ] over @xmath14 $ ] .",
    "it is immediate that the @xmath0-polynomial of @xmath111 is also the element of @xmath209 with the smallest leading term with respect to @xmath163 . as a consequence of the definition of grbner bases",
    ", @xmath0 occurs as the smallest element in any grbner basis of the module @xmath209 over @xmath14 $ ] with respect to @xmath163 .",
    "we begin with    let @xmath122 $ ] be a doubly indexed list of nonnegative integers . for each @xmath215 , let @xmath216 , and let @xmath217 $ ] . for each @xmath184 with @xmath218 , let @xmath219 be such that @xmath220 .",
    "let @xmath221 $ ] where @xmath222 for @xmath223 and @xmath224 .",
    "then as a module over @xmath12 , @xmath225 where @xmath226 and @xmath227 is such that @xmath228 .    by the properties ( i ) ,",
    "( ii ) , ( iii ) of local multiplicity , it is clear that @xmath229 . to show the reverse inclusion ,",
    "let @xmath147 .",
    "we can write @xmath230 for some @xmath231 $ ] and @xmath232 .",
    "let @xmath233 .",
    "if @xmath126 is a uniformizing parameter of @xmath127 , then @xmath126 and @xmath234 form a system of parameters of @xmath92 . recall that the completion @xmath235 is isomorphic to the power series ring @xmath236 $ ] . now",
    "if @xmath237 , then in @xmath235 , @xmath238 for some unit @xmath48 in @xmath235 . since @xmath239 and @xmath240 are algebraically independent over @xmath2 , we see that @xmath241 .",
    "then as this is true for all @xmath44 , it follows that @xmath242 . hence @xmath243 .",
    "again by the properties of local multiplicity , @xmath244 .",
    "thus we showed the reverse inclusion .",
    "recall the multiplicity matrix @xmath122 $ ] .",
    "let @xmath245 .",
    "initially let @xmath246 and @xmath247 .",
    "proceed inductively for @xmath248 .",
    "choose @xmath219 such that @xmath249 if @xmath250 .",
    "let @xmath251 such that @xmath252 .",
    "let @xmath253 now let @xmath254 $ ] and @xmath255 $ ] .",
    "observe @xmath256 for all @xmath257 , and therefore @xmath258 $ ] . by induction ,",
    "we get    for @xmath259 , @xmath260 as a module over @xmath12 . here",
    "@xmath261 and @xmath262 for @xmath263 .",
    "we may view the ideal @xmath226 as a module over @xmath14 $ ] .",
    "indeed @xmath264 is a free module of rank @xmath1 over @xmath14 $ ] .",
    "thus we obtain    the input is an @xmath265 matrix @xmath122 $ ] of nonnegative integers .",
    "the output is the generators @xmath266 of @xmath209 as a module over @xmath14 $ ] .",
    "repeat steps b1 and b2 for @xmath267 .",
    "* let @xmath268 for @xmath44 .",
    "let @xmath269 . for each @xmath270 ,",
    "let @xmath271 be such that @xmath272 .",
    "set @xmath273 for @xmath274 , where @xmath275 is a set of generators of @xmath276 as a module over @xmath14 $ ] .",
    "when @xmath277 is empty , @xmath278 so @xmath279 . *",
    "set @xmath280 and for @xmath281 , set @xmath282    notice that if we compute @xmath283 by the method in the following subsection , @xmath284 has leading term @xmath285 with respect to lex order @xmath286 .",
    "we continue from example [ djcqoe ] .",
    "we show the first few steps to compute a set of generators of @xmath209 with @xmath202 using algorithm b. initially @xmath287 .",
    "then @xmath288 as we compute in example [ jwqdd ] , @xmath289 as a module over @xmath14 $ ] .",
    "so we set @xmath290 in step b2 , we compute ( setting @xmath291 arbitrarily ) @xmath292 now the matrix of @xmath105 is @xmath293    going on to @xmath294 , we have @xmath295 then @xmath296 as a module over @xmath14 $ ] .",
    "hence @xmath297 now @xmath298 and the matrix of @xmath105 is @xmath299 proceeding this way until @xmath300 , we obtain a set of generators of the module @xmath209 .",
    "we arrange the coefficients ( polynomials in @xmath8 ) of the generators in the following matrix @xmath301 where the rows are @xmath302 , @xmath303 , @xmath304 , @xmath305 , ",
    ", @xmath306 , @xmath307 in this order , and the columns are coefficients of @xmath185 , @xmath9 , @xmath143 , @xmath308 , @xmath309 , @xmath310 ,  , @xmath311 , @xmath312 in this order .",
    "we now tackle the task of computing a set of generators of @xmath264 as a module over @xmath14 $ ] .",
    "for this , we switch to a different indexing of the rational points of @xmath6 by grouping the @xmath19 rational points into @xmath3 classes with the same @xmath8-coordinates .",
    "thus the rational points are @xmath313 for @xmath314 and @xmath315 .",
    "let @xmath316 if @xmath317 is the point @xmath127 .",
    "also assume that for each @xmath314 , we have arranged the index @xmath318 such that @xmath319 are put in decreasing order , @xmath320 with the new notations , @xmath321    [ prop6 ] for @xmath322 , suppose that @xmath323 $ ] satisfy @xmath324 for all @xmath314 .",
    "define for @xmath325 , @xmath326 then @xmath327 as a module over @xmath14 $ ] .",
    "let @xmath328 .",
    "then for @xmath314 and @xmath315 , @xmath329 therefore @xmath330 .",
    "recall that we may view @xmath12 as a free module of rank @xmath1 over @xmath14 $ ] .",
    "let @xmath331 be the submodule of @xmath12 generated by @xmath332 over @xmath14 $ ] .",
    "then @xmath333 is isomorphic to @xmath334/{\\langle{\\prod_{1\\le a\\le q^2}(x-{\\alpha}_a)^{\\mu_{a , c}}}\\rangle}.\\ ] ] therefore @xmath335/{\\langle{\\prod_{1\\le a\\le q^2}(x-{\\alpha}_a)^{\\mu_{a , c}}}\\rangle }          = \\sum_{1\\le c\\le q}\\sum_{1\\le a\\le q^2}\\mu_{a , c}.\\ ] ] on the other hand , as @xmath336 by its definition , we have @xmath337 hence @xmath338 .",
    "together with @xmath339 , this implies that @xmath340 .",
    "[ jwqdd ] we compute generators @xmath341 , @xmath342 of @xmath343 .",
    "we arrange the points as @xmath344 so that @xmath319 are in decreasing order , @xmath345 we will see in the next subsection that @xmath346 satisfies @xmath347 therefore @xmath348 generates @xmath343 as a module over @xmath14 $ ] .      as @xmath350",
    ", we see that @xmath351 in the completion of the local ring at @xmath352 . on the other hand ,",
    "if @xmath353 is a rational point of @xmath6 , then @xmath354 , @xmath355 defines an automorphism of @xmath6 taking @xmath353 to @xmath352 .",
    "hence at @xmath353 , we have @xmath356    now we consider the following problem .",
    "suppose that @xmath357 are rational points on @xmath6 with distinct @xmath358 .",
    "given some positive integers @xmath359 for @xmath360 .",
    "we want to construct @xmath361 with @xmath362 $ ] such that @xmath363 for @xmath360 .",
    "there are at least two ways to do this .",
    "[ [ first - method ] ] first method + + + + + + + + + + + +    for @xmath360 , let @xmath364 be the truncation of the series expansion of @xmath9 at @xmath365 modulo @xmath366 , and let @xmath367 $ ] be defined by @xmath368 then @xmath369 satisfies the required conditions by the chinese remainder theorem .",
    "[ [ second - method ] ] second method + + + + + + + + + + + + +    a somewhat more explicit way is as follows . if @xmath370 $ ] , then the condition @xmath371 is equivalent to the following linear conditions on the coefficients @xmath372 , @xmath373 for @xmath374 , where @xmath375 except @xmath376 , @xmath377 , @xmath378 for @xmath379 .",
    "now let @xmath380 .",
    "then the required @xmath95 can be determined by solving the linear system @xmath381 for the vector @xmath382 where @xmath383 is a certain vector of length @xmath192 and @xmath179 is a square matrix of size @xmath192 obtained by the horizontal join of @xmath384 matrices @xmath385_{0\\le i\\le{n-1},0\\le j\\le \\mu_k-1}\\ ] ] for @xmath386 .",
    "the matrix @xmath179 is called a confluent vandermonde matrix in the literature , and is known to be invertible ( actually the determinant is @xmath387 @xcite ) .",
    "therefore the linear system has a unique solution .",
    "let us compute @xmath388 in the previous example by the second method . here",
    "@xmath389 . if @xmath390 , then @xmath391 where @xmath392 and @xmath393 .",
    "the solution of this linear system was given in the previous subsection .",
    "for this task , we use the grbner conversion algorithm in @xcite that converts a set of generators of a submodule of @xmath14^n$ ] to a module grbner basis with respect to a special weighted monomial order .",
    "we review the algorithm below .",
    "let @xmath394 .",
    "tuples in @xmath395 are ordered lexicographically such that @xmath352 is the first tuple in @xmath395 and the successor of @xmath396 is @xmath397 if @xmath398 or @xmath399 if @xmath400 .",
    "thus @xmath401 is a basis for @xmath110_l$ ] as an @xmath14$]-module and the weight of the basis element @xmath402 is @xmath403 .",
    "the index of @xmath140_l$ ] is defined to be the largest tuple @xmath396 such that the coefficient of @xmath402 is nonzero . in particular , if the leading term of @xmath140_l$ ] is @xmath404 with respect to @xmath163 , then @xmath405 .",
    "note that @xmath406 for the generators @xmath407 of @xmath209 computed by algorithm b.    the algorithm finds the element of @xmath209 with the smallest leading term .",
    "initially set @xmath407 to be the initial set of generators of the module @xmath209 computed by algorithm b. let @xmath408 during the execution of the algorithm . for @xmath409 and @xmath410 in @xmath395 , we abbreviate @xmath411 .    *",
    "set @xmath412 . *",
    "set @xmath28 to the successor of @xmath28 .",
    "if @xmath413 , then proceed ; otherwise go to step i6 . *",
    "set @xmath414 .",
    "if @xmath415 , then go to step i2 . *",
    "set @xmath416 and @xmath417 . *",
    "if @xmath418 , then set @xmath419 if @xmath420 , then set , storing @xmath421 in a temporary variable , @xmath422 go back to step i3 .",
    "* output @xmath407 with the smallest leading term , and the algorithm terminates .",
    "algorithm i converts the initial basis given in to a grbner basis with respect to the order @xmath163 .",
    "the computed grbner basis is @xmath423 the twelve rows represent the polynomials in the grbner basis of the module @xmath209 over @xmath14 $ ] . comparing the weights of the leading coefficients of the polynomials , which lie on the diagonal , we find that the polynomial represented by the eleventh row is the required @xmath0-polynomial of the ideal @xmath111 , given explicitly in example [ cjops ] equation .",
    "elements of @xmath12 can be written uniquely as polynomials in @xmath9 of degree less than @xmath1 with coefficients in @xmath14 $ ] .",
    "we assume that for computations in @xmath12 , we use this representation of elements of @xmath12 .",
    "also we think of @xmath424 and @xmath425 for @xmath26 in this representation .",
    "note that a straightforward way of multiplying two elements @xmath426 of @xmath12 takes @xmath427 multiplications on @xmath2 and that @xmath428 if @xmath429 and @xmath430 .",
    "first we consider computing @xmath362 $ ] satisfying @xmath431 for @xmath360 as in section [ subsecc ] .",
    "this computation takes @xmath432 multiplications on @xmath2 where @xmath380 , if we use gaussian elimination to solve the linear system . note also @xmath433 .",
    "next we consider computing @xmath434 according to proposition [ prop6 ] in section [ subsecb ] .",
    "the first product @xmath435 on the right side of has at most @xmath436 linear factors .",
    "hence @xmath435 can be computed with @xmath437 multiplications on @xmath2 .",
    "note @xmath438 . on the other hand , as @xmath439 , the second product @xmath440 can be computed with @xmath441 multiplications on @xmath2 .",
    "note @xmath442 and @xmath443 .",
    "then @xmath435 and @xmath440 can be multiplied with @xmath441 multiplications on @xmath2 .",
    "hence , in total , computing @xmath434 takes @xmath441 multiplications on @xmath2 .",
    "note @xmath444 and @xmath445 .",
    "now we consider computations in steps b2 and b3 of algorithm b in section [ subseca ] .",
    "fix @xmath446 .",
    "computing @xmath283 ( @xmath447 ) , as shown above , takes @xmath448 multiplications on @xmath2 for each @xmath449 .",
    "computing @xmath450 can be done with @xmath451 multiplications on @xmath2 .",
    "note @xmath452 .",
    "let @xmath453 denote the product of the right side in .",
    "it is easy to verify @xmath454 and @xmath455 if @xmath456 .",
    "so computing @xmath457 takes @xmath458 multiplications on @xmath2 .",
    "note @xmath459 .",
    "computing @xmath460 takes @xmath461 multiplications on @xmath2 .",
    "summing up , an execution of algorithm b takes @xmath462 multiplications on @xmath2 .",
    "lastly noting @xmath463 and using a result in @xcite , we see that an execution of algorithm i takes @xmath464 multiplications on @xmath2 .",
    "therefore the algebraic soft - decision decoder of hermitian codes can be implemented in a way that takes @xmath465 multiplications on @xmath2 .",
    "we implemented the algebraic soft - decision decoder ( sdd ) for hermitian codes in software . in this section ,",
    "we present some simulation results that show the performance of the algebraic soft - decision decode for half - rate hermitian codes .",
    "first we describe the general setup of our simulations .",
    "we assume the awgn channel . for qpsk and qam modulations ,",
    "the signal points correspond one - to - one with the symbols in the finite field over which the code is defined , and the posterior probabilities of the symbols are simply set to those of the corresponding signal points . for bpsk , each of the symbols correspond with a bit sequence , and the posterior probabilities of the symbols are set to the products of the posterior probabilities of the bits .",
    "koetter and vardy s multiplicity assignment algorithm @xcite is used to translate the posterior probabilities to the values of the multiplicity matrix .",
    "the multiplicity assignment algorithm accepts a parameter @xmath277 that limits the @xmath143-degree of the @xmath0-polynomial , thereby the list size of the candidate codewords to at most @xmath277 . from the multiplicity matrix ,",
    "our interpolation algorithm finds the @xmath0-polynomial .",
    "then wu and siegel s root - finding algorithm @xcite is used to compute the roots of the @xmath0-polynomial .",
    "the list of candidate codewords is then formed from the roots . if the list is empty , then the decoder simply output the message part of the received vector determined by hard - decision directly from the posterior probabilities of the symbols",
    ". if the list is not empty , the decoder outputs the message from the codeword that has the best score with respect to the multiplicity matrix .",
    "the smallest field over which hermitian codes are defined is @xmath68 and the length of these codes is @xmath69 .",
    "the length is extremely small , and it is perhaps unrealistic to expect the codes to be used in practice .",
    "however the codes are amenable for simulations with somewhat larger @xmath277 .",
    "figure [ fig1 ] show the performance of the half - rate @xmath466 $ ] hermitian code with qpsk .",
    "the example used in previous sections was sampled from this simulation with snr @xmath467 and @xmath468 .",
    "( 10,0 ) ; ( 2,6 ) ",
    "( 10,6 ) ; ( 2,0 ) ",
    "( 2,6 ) ; ( 10,0 ) ",
    "( 10,6 ) ; in -1 , ... , -6 in 0.301 , 0.477 , 0.602 , 0.698 , 0.778 , 0.845 , 0.903 , 0.954,1 ( 2 , ) ",
    "( 10 , ) ; in 2 , ... , 10 ( , 0 )  ( , 6 ) ; /in 2 , ... , 10 ( 0pt,2pt )  ( 0pt,0pt ) node[below ] @xmath469 ; /in 0 , ... , -6 ( 2pt,0pt )  ( 0pt,0pt ) node[left ] @xmath470 ; plot[yshift=6 cm ] fileawgn-qpsk-hd-uncoded-ber.table ; plot[mark = oplus , yshift=6 cm ] fileawgn - qpsk - sd - hermitian[8,4]-asd - l5-fer.table ; plot[mark = o , yshift=6 cm ] fileawgn - qpsk - sd - hermitian[8,4]-asd - l5-ber.table ;    ( 9.8,5.8 ) node[legend , text width=15em ] plot coordinates ( -.5,0)(0,0 ) ; ber of uncoded qpsk + plot[mark = oplus , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; fer of hermitian [ 8,4 ] algebraic sdd for @xmath468 + plot[mark = o , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; ber of hermitian [ 8,4 ] algebraic sdd for @xmath468 + ; ( 6,0 ) [ yshift=-15pt ] node[below ] @xmath471 in db ; ( 2,3 ) [ xshift=-40pt ] node[rotate=90 ] error rate ;      figures [ fig3 ] and [ fig4 ] show the performance of @xmath472 $ ] hermitian code with bpsk modulation .",
    "for comparison , the figures also show the performance of the half - rate @xmath473 $ ] reed - solomon code .",
    "observe that the performance curve of hermitian code more steeply decrease than that of reed - solomon code , and from around 5 db , the hermitian code outperforms the reed - solomon code .    ( 0,0 ) ",
    "( 10,0 ) ; ( 0,-7 ) ",
    "( 10,-7 ) ; ( 0,0 ) ",
    "( 0,-7 ) ; ( 10,0 ) ",
    "( 10,-7 ) ; in -1 , ... , -7 in 0.301 , 0.477 , 0.602 , 0.698 , 0.778 , 0.845 , 0.903 , 0.954,1 ( 0 , )  ( 10 , ) ; in 0 , ... , 10 ( , 0 )  ( , -7 ) ; /in 0 , 1 , ... , 10 ( 0pt,2pt )  ( 0pt,0pt ) node[below ] @xmath469 ; /in 0 , ... , -7 ( 2pt,0pt ) ",
    "( 0pt,0pt ) node[left ] @xmath470 ; plot fileawgn-bpsk-hd-uncoded.table ; plot[mark = triangle ] fileawgn - bpsk - sd - rs[16,8]-asd - l1-ber.table ; plot[mark = triangle ] fileawgn - bpsk - sd - rs[16,8]-asd - l2-ber.table ; plot[mark = triangle ] fileawgn - bpsk - sd - rs[16,8]-asd - l3-ber.table ; plot[mark = o ] fileawgn - bpsk - sd - hermitian[64,32]-asd - l1-ber.table ; plot[mark = o ] fileawgn - bpsk - sd - hermitian[64,32]-asd - l2-ber.table ; plot[mark = o ] fileawgn - bpsk - sd - hermitian[64,32]-asd - l3-ber.table ;    ( .2,.2 ) node[legendsw , text width=14em ] plot coordinates ( -.5,0)(0,0 ) ; uncoded bpsk + plot[mark = triangle , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; rs [ 16,8 ] algebraic sdd for @xmath474 + plot[mark = o , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; hermitian [ 64,32 ] algebraic sdd for @xmath474 + ; ( 5,0 ) [ yshift=-15pt ] node[below ] @xmath471 in db ; ( 0,3.5 ) [ xshift=-40pt ] node[rotate=90 ] bit error rate ;    ( 0,0 )  ( 10,0 ) ; ( 0,-7 ) ",
    "( 10,-7 ) ; ( 0,0 )  ( 0,-7 ) ; ( 10,0 ) ",
    "( 10,-7 ) ; in -1 , ... , -7 in 0.301 , 0.477 , 0.602 , 0.698 , 0.778 , 0.845 , 0.903 , 0.954,1 ( 0 , ) ",
    "( 10 , ) ; in 0 , ... , 10 ( , 0 )  ( , -7 ) ; /in 0 , 1 , ... , 10 ( 0pt,2pt ) ",
    "( 0pt,0pt ) node[below ] @xmath469 ; /in 0 , ... , -7 ( 2pt,0pt )  ( 0pt,0pt ) node[left ] @xmath470 ; plot[mark = triangle ] fileawgn - bpsk - sd - rs[16,8]-asd - l1-fer.table ; plot[mark = triangle ] fileawgn - bpsk - sd - rs[16,8]-asd - l2-fer.table ; plot[mark = triangle ] fileawgn - bpsk - sd - rs[16,8]-asd - l3-fer.table ; plot[mark = o ] fileawgn - bpsk - sd - hermitian[64,32]-asd - l1-fer.table ; plot[mark = o ] fileawgn - bpsk - sd - hermitian[64,32]-asd - l2-fer.table ; plot[mark = o ] fileawgn - bpsk - sd - hermitian[64,32]-asd - l3-fer.table ;    ( .2,.2 ) node[legendsw , text width=14em ] plot[mark = triangle , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; rs [ 16,8 ] algebraic sdd for @xmath474 + plot[mark = o , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; hermitian [ 64,32 ] algebraic sdd for @xmath474 + ; ( 5,0 ) [ yshift=-15pt ] node[below ] @xmath471 in db ; ( 0,3.5 ) [ xshift=-40pt ] node[rotate=90 ] frame error rate ;      figures [ fig5 ] and [ fig6 ] also show that the hermitian code outperforms the reed - solomon code with @xmath475-qam modulation , from around 8 db onward .",
    "( 14,0 ) ; ( 2,-7 ) ",
    "( 14,-7 ) ; ( 2,0 ) ",
    "( 2,-7 ) ; ( 14,0 ) ",
    "( 14,-7 ) ; in -1 , ... , -7 in 0.301 , 0.477 , 0.602 , 0.698 , 0.778 , 0.845 , 0.903 , 0.954,1 ( 2 , ) ",
    "( 14 , ) ; in 2 , ... , 14 ( , 0 ) ",
    "( , -7 ) ; /in 2 , ... , 14 ( 0pt,2pt )  ( 0pt,0pt ) node[below ] @xmath469 ; /in 0 , ... , -7 ( 2pt,0pt ) ",
    "( 0pt,0pt ) node[left ] @xmath470 ; plot fileawgn-16qam-hd-uncoded-ber.table ; plot[mark = triangle ] fileawgn-16qam - sd - rs[16,8]-asd - l1-ber.table ; plot[mark = triangle ] fileawgn-16qam - sd - rs[16,8]-asd - l2-ber.table ; plot[mark = triangle ] fileawgn-16qam - sd - rs[16,8]-asd - l3-ber.table ; plot[mark = o ] fileawgn-16qam - sd - hermitian[64,32]-asd - l1-ber.table ; plot[mark = o ] fileawgn-16qam - sd - hermitian[64,32]-asd - l2-ber.table ; plot[mark = o ] fileawgn-16qam - sd - hermitian[64,32]-asd - l3-ber.table ;    ( 2.2,.2 ) node[legendsw , text width=14em ] plot coordinates ( -.5,0)(0,0 ) ; uncoded @xmath475-qam + plot[mark = triangle , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; rs [ 16,8 ] algebraic sdd for @xmath474 + plot[mark = o , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; hermitian [ 64,32 ] algebraic sdd for @xmath474 + ; ( 8,0 ) [ yshift=-15pt ] node[below ] @xmath471 in db ; ( 2,3.5 ) [ xshift=-40pt ] node[rotate=90 ] bit error rate ;    ( 2,0 )  ( 14,0 ) ; ( 2,-7 )  ( 14,-7 ) ; ( 2,0 )  ( 2,-7 ) ; ( 14,0 ) ",
    "( 14,-7 ) ; in -1 , ... , -7 in 0.301 , 0.477 , 0.602 , 0.698 , 0.778 , 0.845 , 0.903 , 0.954,1 ( 2 , ) ",
    "( 14 , ) ; in 2 , ... , 14 ( , 0 )  ( , -7 ) ; /in 2 , ... , 14 ( 0pt,2pt )  ( 0pt,0pt ) node[below ] @xmath469 ; /in 0 , ... , -7 ( 2pt,0pt )  ( 0pt,0pt ) node[left ] @xmath470 ; plot[mark = triangle ] fileawgn-16qam - sd - rs[16,8]-asd - l1-fer.table ; plot[mark = triangle ] fileawgn-16qam - sd - rs[16,8]-asd - l2-fer.table ; plot[mark = triangle ] fileawgn-16qam - sd - rs[16,8]-asd - l3-fer.table ; plot[mark = o ] fileawgn-16qam - sd - hermitian[64,32]-asd - l1-fer.table ; plot[mark = o ] fileawgn-16qam - sd - hermitian[64,32]-asd - l2-fer.table ; plot[mark = o ] fileawgn-16qam - sd - hermitian[64,32]-asd - l3-fer.table ;    ( 2.2,.2 ) node[legendsw , text width=14em ] plot[mark = triangle , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; rs [ 16,8 ] algebraic sdd for @xmath474 + plot[mark = o , mark indices=2 ] coordinates ( -.5,0)(-.25,0)(0,0 ) ; hermitian [ 64,32 ] algebraic sdd for @xmath474 + ; ( 8,0 ) [ yshift=-15pt ] node[below ] @xmath471 in db ; ( 2,3.5 ) [ xshift=-40pt ] node[rotate=90 ] frame error rate ;",
    "we presented an algebraic soft - decision decoder for hermitian codes .",
    "software simulations show that hermitian codes perform better than reed - solomon codes for algebraic soft - decision decoding , as expected .",
    "however , for the decoder to be really practical , reduction of the computational complexity remains an important problem .",
    "one promising avenue is to generalize the idea of complexity reduction for reed - solomon codes in @xcite .",
    "designing efficient electric circuits implementing the decoder is of course an issue to explore .",
    "the extent of our computer simulations of the decoding algorithm was limited by our computing resources",
    ". it would be good to have analytic results about the performance of the decoding algorithm .",
    "there have been several analytic performance analyses for the algebraic soft - decision decoding of reed - solomon codes @xcite .",
    "similar analyses may be done for hermitian codes .",
    "our description of the decoding algorithm is interwoven with the particular structure of hermitian codes .",
    "however , the underlying principle of the decoding algorithm seems to apply to a wider class of algebraic geometry codes . in particular , plane algebraic curves with one point at infinity are immediate candidates .",
    "we leave an adequate treatment of this subject as a remaining work .",
    "v.  olshevsky and m.  a. shokrollahi , `` a displacement approach to decoding algebraic codes , '' in _ fast algorithms for structured matrices : theory and applications _ ,",
    "math.1em plus 0.5em minus 0.4em amer . math .",
    "soc . , 2003 , vol .",
    "265292 .",
    "j.  ma , a.  vardy , and z.  wang , `` efficient fast interpolation architecture for soft - decision decoding of reed - solomon codes , '' in _ proc .",
    "ieee symp .",
    "circuits and systems _ , kos , greece , may 2006 , pp . 48234826 .",
    "j.  ma , a.  vardy , z.  wang , and q.  chen , `` direct root computation architecture for algebraic soft - decision decoding of reed - solomon codes , '' in _ proc .",
    "ieee symp .",
    "circuits and systems _",
    ", new orleans , la , may 2007 , pp",
    ". 14091412 ."
  ],
  "abstract_text": [
    "<S> an algebraic soft - decision decoder for hermitian codes is presented . </S>",
    "<S> we apply koetter and vardy s soft - decision decoding framework , now well established for reed - solomon codes , to hermitian codes . </S>",
    "<S> first we provide an algebraic foundation for soft - decision decoding </S>",
    "<S> . then we present an interpolation algorithm finding the @xmath0-polynomial that plays a key role in the decoding . with some simulation results , </S>",
    "<S> we compare performances of the algebraic soft - decision decoders for hermitian codes and reed - solomon codes , favorable to the former .    </S>",
    "<S> hermitian codes , algebraic soft - decision decoding , interpolation algorithm , grbner bases . </S>"
  ]
}
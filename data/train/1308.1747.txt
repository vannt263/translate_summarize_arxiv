{
  "article_text": [
    "a lot of recent attention has focused on networked and embedded control ( see , e.g. , the special issue  @xcite and the references therein ) .",
    "one issue which plays an important role , especially in embedded systems , is that of time - varying and limited processing power . as more and more objects are equipped with micro - processors that are responsible for multiple functions such as control , communication , data fusion , system maintenance and so on , the implicit assumption traditionally made in control design about the processor being able to execute the desired control algorithm at any time will break down",
    "similarly , if a remote controller is in charge of many devices , multiple control tasks will compete for shared processor resources , leading to constrained availability of processing resources for the individual control loops .",
    "it is , thus , of interest to study control algorithms that can function despite limited and time - varying availability of processing power .",
    "there is a growing number of works that deal with this issue .",
    "the impact of finite computational power has been looked at most closely for techniques such as model predictive control .",
    "mcgovern and feron  @xcite presented bounds on computational time for achieving stability for specific optimization algorithms , if the processor has constant , but limited , computational resources .",
    "henriksson et al  @xcite studied the effect of not updating the control input in continuous time systems for the duration of the computational delay for optimization algorithms based on active set methods .",
    "also related are works on event - triggered and self - triggered control systems , and online sampling , e.g. ,  @xcite , where a control input is calculated aperiodically , but on demand , depending on the plant state .",
    "in addition , we would like to mention work on scheduling of control tasks  @xcite that looks at the problem of processor queue scheduling , when control calculation is merely one of the tasks in the queue .    an alternative approach to achieve system robustness in the presence of time - varying processing resources is to develop _ anytime _ algorithms .",
    "the main purpose of anytime algorithms is to provide _ a _",
    "solution even with limited processing resources , and to refine the solution as more resources become available .",
    "anytime algorithms seek to make efficient use of resources and are , thus , popular in the context of real - time systems . in control , however , there are few methods available for developing anytime controllers .",
    "a notable work is that of bhattacharya et al  @xcite who focused on linear systems , and presented a control algorithm that updated a different number of states depending on the available computational time .",
    "however , the available computational time was required to be known to the controller a priori .",
    "another important work is that of greco et al  @xcite , who proposed switching among a pre - designed set of controllers that may require different execution times .",
    "although the idea can be generalized to nonlinear processes , the analysis in the paper relied on markovian jump linear system theory . in gupta and luo",
    "@xcite , an anytime algorithm for systems with multiple inputs was presented .",
    "the main idea was based on calculating the components of the control vector sequentially , and refining the process model as more processing time becomes available . since the algorithm is based on identifying the modes of the process that require more urgent control , it is , thus , again largely limited to linear processes .    in the present work",
    ", we present two anytime control algorithms for nonlinear plants described in state - space form that are based on using extra processor availability to calculate sequences which have the potential to be implemented at the plant input at future times .",
    "this safeguards performance at those time steps where the processor is entirely unavailable for control .",
    "availability of processor time for control calculations determines the length of the sequences calculated and , thereby , affects the quality of the result .",
    "a distinguishing feature of the algorithms presented is that processor availability is allowed to be random , with unknown distribution .",
    "moreover , our algorithms are one of the first that are suitable for nonlinear plants . for cases where processor availability is governed by a suitable markov chain , we use lyapunov functions to establish sufficient conditions for stochastic stability of the closed loop .",
    "numerical simulations illustrate that performance gains achieved with the algorithms proposed can be significant .",
    "it is worth emphasizing that in the algorithms presented , the potential control values are calculated sequentially , reutilizing the already computed values for the next computation .",
    "this is computationally attractive , especially since the length of the sequence to be calculated is time - varying and not known a - priori .",
    "thus , our approach differs significantly from the methods used in packetized predictive control , e.g. , in  @xcite . in the latter works calculation of control sequences requires solving optimization problems over a finite horizon of length determined by the controller itself .",
    "the remainder of this manuscript is organized as follows : in section  [ sec : prob_form ] we formulate the anytime control design problem studied .",
    "section  [ sec : our_description ] presents the proposed algorithms .",
    "stochastic stability analysis is carried out in sections  [ sec : analysis ] to  [ sec : mark - chain - proc ] .",
    "numerical simulations are documented in section  [ sec : numerical_examples ] .",
    "section  [ sec : conclusions ] draws the final conclusions .",
    "[ [ sec : notation ] ] notation + + + + + + + +    we write @xmath0 for @xmath1 and @xmath2 for @xmath3 .",
    "@xmath4 represents the real numbers and @xmath5 .",
    "the @xmath6 identity matrix is denoted via @xmath7 , @xmath8 is the @xmath9 all - zeroes matrix , @xmath10 , and @xmath11 .",
    "the notation @xmath12 stands for @xmath13 , where @xmath14 .",
    "we adopt the conventions @xmath15 and @xmath16 , if @xmath17 and irrespective of @xmath18 .",
    "the superscript @xmath19 refers to transpose .",
    "the euclidean norm of a vector @xmath20 is denoted via @xmath21 .",
    "a function @xmath22 is of _ _ class-__@xmath23 ( @xmath24 ) , if it is continuous , zero at zero , strictly increasing , and unbounded .",
    "the probability of an event @xmath25 is denoted by @xmath26 and the conditional probability of @xmath25 given @xmath27 by @xmath28 .",
    "the expected value of a random variable @xmath29 given @xmath27 is denoted by @xmath30 while @xmath31 refers to the unconditional expectation .",
    "we consider nonlinear ( and possibly unstable ) plants sampled periodically with sampling interval @xmath32 and described in discrete - time via : @xmath33 in  , @xmath34 is the plant state , @xmath35 is the plant input , and @xmath36 is an unmeasured disturbance .",
    "the model   satisfies @xmath37 and the initial state , @xmath38 , is arbitrarily distributed ( with possibly unbounded support ) .    throughout this work",
    ", we will assume that the unperturbed plant model @xmath39 is globally stabilizable via state feedback .",
    "more precisely , we make the following assumption :    [ ass : clf ] there exist functions @xmath40 , @xmath41 , @xmath42 , and a constant @xmath43 , such that for all @xmath44 , @xmath45 @xmath46    when implementing discrete - time control systems it is generally assumed that the processing resources available to the controller are such that the control law can always be evaluated within a fixed ( and small ) time - delay , say @xmath47 . ) by aggregating the previous plant input to the plant state , see also@xcite . for ease of exposition , throughout this work , we will use the standard discrete - time notation as in  ( [ eq : process ] ) .",
    "] however , in practical networked and embedded systems , the processing resources ( e.g. , processor execution times ) available for control calculations may vary and , at times , be insufficient to generate a control input within the prescribed time - delay @xmath48 .",
    "one possible remedy for this issue would to redesign the control system for a worst case by choosing larger values of @xmath48 and , possibly , @xmath49 .",
    "clearly , such an approach will , in general , lead to unnecessary conservativeness and associated poor performance . in the present work we adopt an anytime control paradigm to seek favorable trade - offs between processor availability and control performance .    before proceeding",
    "we note that a direct implementation of the control policy used in assumption  [ ass : clf ] , when processing resources are time varying , results in a _ baseline _ algorithm , which gives rise to the plant input : @xmath50 where the symbol @xmath51 with @xmath52 denotes the plant input which is applied during the interval .",
    "the situation mirrors that encountered when the control input is affected by dropouts ; see , e.g. , @xcite . ]",
    "whilst the baseline algorithm  ( [ eq:4 ] ) is intuitive and simple , it is by no means clear that it can not be outperformed by more elaborated control formulations . in the following section",
    ", we will present two related anytime control algorithms for the plant model  .",
    "the aim is to make more efficient use of the processing resources available for control , when compared to the baseline algorithm  ( [ eq:4 ] ) .",
    "throughout this work , we will assume that the controller needs processor time to carry out mathematical computations , such as evaluating functions .",
    "however , simple operations at a bit level , such as writing data into buffers , shifting buffer contents and setting values to zero , do not require processor time .",
    "similarly , input - output operations , i.e. , a / d and d / a conversion are triggered by external asynchronous loops with a real - time clock and do not require that the processor be available for control . as in regular discrete - time control , these external loops ensure that state measurements are available at the instants @xmath54 and that the controller outputs are passed on to the plant actuators at times @xmath55 , where @xmath48 is fixed ; see , e.g. , @xcite    a standing assumption is that if the processor were fully available for control , then calculating the desired plant input @xmath51 for a given plant state @xmath56 would be possible within the pre - allocated time - frame @xmath57 .",
    "issues arise when , at times , processor availability does not permit the desired plant input to be calculated . to take care of the associated performance loss , in the present work we propose to use one of the two anytime control algorithms presented below .",
    "both algorithms are based on the following basic idea : at time intervals when the controller is provided with more processing resources than are needed to evaluate the current control input , the algorithm calculates a sequence of tentative future plant inputs , say @xmath58 . the sequence is stored in a local buffer and may be used when , at some future time steps , the processor availability precludes any control calculations , see fig .",
    "[ fig : algorithm ] .    for further reference",
    ", we denote the buffer states via @xmath59 , where @xmath60 for a given value @xmath61 and where each @xmath62 , @xmath63 .",
    "we also introduce the shift matrix @xmath64 and the unit vector @xmath65 via : @xmath66    ' '' ''    1 .   at time @xmath67 , + set @xmath68 , @xmath69 2 .",
    "[ step : timek ] if @xmath70 , then + input @xmath56 ; + set @xmath71 , @xmath72 , @xmath73 ; + end 3 .",
    "[ step : repeat ] while `` sufficient processor time is available '' and @xmath74 and time @xmath75 , + set @xmath76 , where @xmath77 is the lyapunov function in  ( [ eq:3 ] ) ; + use @xmath78 and @xmath79 to find @xmath80 , such that @xmath81 + if @xmath82 , then + output @xmath83 ; + set @xmath84 ; + end + set @xmath85 ; + if `` sufficient processor time is not available '' or @xmath86 , then + goto step 5 + end + set @xmath87 , @xmath88 ; + end 4 .   if @xmath82 , then + output @xmath89 ; + end 5 .   set @xmath90 and goto step 2 ;    ' '' ''    algorithm a@xmath91 is presented in fig .",
    "[ alg:1 ] .",
    "it can be seen that the algorithm proposed amounts to a dynamic state feedback policy with internal state variable @xmath92 .",
    "the latter provides @xmath93 and suggested plant inputs at future time steps . at the time",
    "steps when more processor time is available , a longer suggested trajectory of control inputs is calculated and stored in the buffer .",
    ", in step 3 , one could simply set @xmath94 . ]",
    "if the buffer runs out of tentative plant inputs ( as calculated in step 3 ) , then the actuator values are set to zero . with algorithm @xmath95 ,",
    "as soon as the processor calculates a control input @xmath96 , it throws away the remaining elements in the buffer , see line `` @xmath97 '' in step 3 .    ' '' ''    1 .",
    "[ step : repeat2 ] while `` sufficient processor time is available '' and @xmath74 and time @xmath75 , + set @xmath76 , where @xmath77 is the lyapunov function in  ( [ eq:3 ] ) ; + use @xmath78 and @xmath79 to find @xmath80 , such that @xmath98 ; + if @xmath82 , then + output @xmath83 ; + end + set @xmath85 ; + if `` sufficient processor time is not available '' or @xmath86 , then + goto step 5 ; + end + set @xmath99 , @xmath88 ; + end    ' '' ''    algorithm @xmath100 is almost identical to the first algorithm , @xmath95 .",
    "the only difference is that , in step 3 , the buffer contents are never re - set to zero , i.e. , the line `` @xmath101 '' is eliminated , see fig .",
    "[ alg:2 ] .",
    "thus , if algorithm @xmath100 is used , then buffer elements may stem from calculations carried out at different time instants . by not deleting the entire buffer , but only replacing the _ appropriate _ entries , when using @xmath102 the buffer will run out of data less often than when using @xmath103 .",
    "it is worth noting that neither algorithm requires prior knowledge of future processor availability for control .",
    "this opens the possibility to employ the algorithms in shared systems , where the controller task can be preempted by other computational tasks carried out by the processor , see also @xcite . as in other anytime algorithms",
    ", there exists a compromise between resultant closed loop performance and the processor availability .",
    "understanding this trade - off forms the bulk of this work .      with the algorithms presented in section  [ sec : algor - descr ] , extra processing time is used to calculate additional elements of the tentative plant input sequences , thus , providing higher quality results , i.e. , sequences @xmath58 which better safeguard against performance loss at _ future _ time instances where processor availability may be insufficient . to further elucidate the situation",
    ", we note that in both algorithms , during each iteration of the while - loop in step  3 , the state value @xmath56 is used to calculate a tentative control , namely @xmath80 . in the sequel",
    ", we will denote by @xmath104 the total number of iterations of the while - loop which are carried out during the interval @xmath105 and note that @xmath106 .",
    "thus , if @xmath107 , then the entire sequence of tentative controls is @xmath108 if @xmath109 , then the processor was not available for control , and ( with either of the algorithms ) the actuator values are taken as the first @xmath110 elements of the shifted state @xmath111 , see  .    in terms of the notation introduced above and in  ( [ eq:21 ] ) ,",
    "if algorithm a@xmath91 is used , then the buffer @xmath92 obeys the recursion : @xmath112 on the other hand , if algorithm a@xmath113 is used , then we have : @xmath114 where @xmath115 with @xmath116    in addition to studying the length of the tentative control sequences provided by the algorithms , namely @xmath117 , it is convenient to investigate how many values which stem from the tentative control sequences @xmath118 , @xmath119 are contained in the buffer state @xmath92 .",
    "we will refer to this value as the _ effective buffer length _ ( at time @xmath120 ) , and denote it as @xmath121 with @xmath122 .",
    "it is easy to see that , if algorithm @xmath103 is used , then @xmath123 is governed by @xmath124 whereas , with algorithm @xmath102 , we have @xmath125 the following example illustrates the quantities introduced above :    [ ex : one ] suppose that @xmath126 and that the processor availability for control is such that @xmath127 , @xmath128 , @xmath129 , @xmath130 . if algorithm a@xmath91 is used , then the buffer state at times @xmath131 becomes : @xmath132 which gives @xmath133 , @xmath134 , @xmath135 , @xmath136 , and plant inputs @xmath137 , @xmath138 , @xmath139 , @xmath140 . on the other hand ,",
    "if algorithm a@xmath113 is used , then we have @xmath141 and @xmath133 , @xmath134 , @xmath142 , @xmath143 , @xmath137 , @xmath138 , @xmath139 , @xmath144 .",
    "note that with algorithm a@xmath91 , @xmath136 and therefore the plant input at time @xmath145 is set to zero ; with algorithm a@xmath113 , the value calculated at time @xmath146 is used .",
    "since the processor availability for control calculations is random , the plant input is random , and thus the system  ( [ eq : process ] ) evolves stochastically .",
    "various stability notions for stochastic systems have been studied in the literature ( e.g. ,  @xcite ) . in the present work ,",
    "we are interested in the following notion :    a dynamical system with state trajectory @xmath147 is said to be stochastically stable , if @xmath148 for some @xmath149.@xmath46    [ rem : stabnotions ] it follows directly from  ( [ eq:33 ] ) , that stochastic stability implies that there exists @xmath149 , such that : @xmath150 in the particular case where @xmath151 ,  ( [ eq:33 ] ) reduces to @xmath152 , and  ( [ eq:34 ] ) to @xmath153 ; see also  @xcite .",
    "@xmath46      our subsequent stability analysis considers the unperturbed system  , i.e. , where @xmath154 , for all @xmath52 . for pedagogical ease ,",
    "we also begin by presenting the analysis with the additional assumption that the processor availability for control is independent and identically distributed ( i.i.d . ) .",
    "thus , for the analysis in sections  [ sec : algorithm - a_1 ] and  [ sec : algorithm - a_2 ] , we make the following assumption :    [ ass : iid ] the process @xmath117 introduced in section  [ sec : basic - properties ] is i.i.d . , with probability distribution @xmath155 where @xmath156 and with @xmath157.@xmath46    in section  [ sec : mark - chain - proc ] , we will show how to extend this analysis for the case when the processor availability can be described by a markov chain , and thus has memory .",
    "assumption  [ ass : bound_prob ] stated below , bounds the rate of increase of the lyapunov function @xmath77 in  ( [ eq:3 ] ) , when the nominal system   is run in open - loop .",
    "it also imposes a ( mild ) restriction on the distribution of the initial plant state .",
    "[ ass : bound_prob ] there exists @xmath158 such that @xmath159 the initial plant state satisfies @xmath160 where @xmath161 is as in  ( [ eq:3]).@xmath46    it is worth emphasizig that the fact that assumptions  [ ass : clf ] and  [ ass : bound_prob ] are global and stated in terms of a common lyapunov function limits the class of plants and control policies considered in our subsequent analysis .",
    "one case where  ( [ eq:20 ] ) is satisfied is when @xmath77 and @xmath162 are globally lipschitz continuous , more precisely , when there exist @xmath163 such that : @xmath164 in this case , and since @xmath165 , we have @xmath166 for @xmath167 and  ( [ eq:20 ] ) will hold provided @xmath168 .",
    "consider an open - loop unstable constrained plant model of the form  ( [ eq : process ] ) with @xmath169 with @xmath170$,}\\\\      1,&\\text{if $ \\mu>1 $ } ,    \\end{cases}\\ ] ] see ( * ? ? ?",
    "* example 2.3 ) and @xcite .",
    "the second component of the plant input is constrained via @xmath171 , @xmath172 .",
    "if we choose @xmath173 and policy @xmath174^t$ ] , then direct calculations provide that @xmath175 thus , assumption  [ ass : clf ] holds with @xmath176 , and @xmath177 .",
    "furthermore , by proceeding as in@xcite , it can be shown that  ( [ eq:20 ] ) holds with @xmath178 .",
    "thus , provided that  ( [ eq:66 ] ) holds and @xmath179 , assumption  [ ass : bound_prob ] is also satisfied .",
    "@xmath46    the following example illustrates that , at times , it may be convenient to first find a lyapunov function @xmath77 which satisfies  ( [ eq:20 ] ) and then seek a control policy which ensures that assumption  [ ass : clf ] holds .",
    "[ ex:2 ] consider a scalar unconstrained and unperturbed open - loop unstable non - linear plant where @xmath180 , with @xmath181 .",
    "a stabilizing control policy which satisfies assumption  [ ass : clf ] for @xmath182 is given by @xmath183 , with @xmath184 .",
    "however , @xmath182 is not suitable for use in assumption  [ ass : bound_prob ] , since @xmath185 as @xmath186 .",
    "in contrast , if we choose @xmath187 as @xmath188 , for all @xmath189 , then @xmath190 and  ( [ eq:20 ] ) holds with open - loop rate of growth bound constant @xmath191 .",
    "the associated control policy @xmath192 , where @xmath43 , gives @xmath193 we conclude that if @xmath194 and the initial plant state is suitably distributed , then assumptions  [ ass : clf ] and  [ ass : bound_prob ] will hold.@xmath46      we will next present sufficient conditions under which the baseline algorithm  ( [ eq:4 ] ) achieves stochastic stability of the closed loop system . as in  ( [ eq:7 ] ) , we denote via @xmath195 the probability that the controller is unable to calculate any control input .",
    "thus , if the baseline algorithm  ( [ eq:4 ] ) is used and assumption  [ ass : iid ] holds , then ( in the disturbance - free case ) the closed loop is characterised by : @xmath196    it can be seen that the plant state trajectory is similar to that of a networked control system in which the controller is unable to communicate with the actuator with probability @xmath197 at any time step .",
    "stability conditions for such systems have been derived both for linear systems  @xcite and nonlinear systems  @xcite . in particular , for a scalar linear plant model with a scalar input , @xmath198 and quadratic lyapunov function , @xmath199 , the condition @xmath200 has been shown to be necessary and sufficient for stabilizability in  @xcite .",
    "thus , the constant @xmath201 needs to satisfy @xmath202 for stability with the baseline algorithm .",
    "more generally , we have the following sufficient condition for stochastic stability when the baseline algorithm is used :    [ thm : baseline ] suppose that assumptions  [ ass : clf ] to  [ ass : bound_prob ] hold . if @xmath203 then  ( [ eq:10 ] ) is stochastically stable .",
    "first we note that , by  ( [ eq:10 ] ) , the process @xmath147 is markovian .",
    "thus , stability can be examined by using a stochastic lyapunov function approach ; see , e.g.,@xcite .",
    "the law of total expectation , when applied to @xmath204 , with @xmath77 as in  ( [ eq:3 ] ) , gives @xmath205 where we have used  ( [ eq:3 ] ) ,  ( [ eq:20 ] ) and  ( [ eq : baseline_stability ] ) .",
    "theorem 2 of ( * ? ? ?",
    "* chapter 8.4.2 ) implies that there exists @xmath206 such that @xmath207 .",
    "thus , by using  ( [ eq:3 ] ) and taking expectation with respect to the distribution of @xmath38 , we obtain @xmath208 where the last inequality follows from  ( [ eq:66 ] ) .",
    "since @xmath209 , stochastic stability follows .    for the proposed anytime algorithms ,",
    "stability analysis is more subtle than for the baseline algorithm .",
    "the main reason is that , due to buffering , the plant state @xmath147 will in general not be markovian and simple conditioning as in  ( [ eq:38 ] ) is not possible .",
    "to derive sufficient conditions for stochastic stability when algorithm @xmath95 is used , we will employ a technique which is roughly based on the approaches used in  @xcite .",
    "as will become apparent , randomness of the sequence length process @xmath117 , see  ( [ eq:4b ] ) , makes the analysis of the anytime algorithms studied significantly more involved than the analysis of the predictive networked control formulations of  @xcite .",
    "for ease of exposition , in the sequel we assume that @xmath211 and denote the time steps at which at least one control input is calculated via @xmath212 , where @xmath213 and @xmath214    it is convenient to introduce the iterated mappings with input @xmath215 , @xmath216 : and @xmath217 .",
    "note that , by step 3 in the algorithm description , the values @xmath218 , @xmath219 are determined by @xmath215 . ] @xmath220 and the related mappings which describe the nominal plant model when the input is set to zero : @xmath221 we also denote the time between two consecutive elements of @xmath222 via @xmath223 and note that , by assumption  [ ass : iid ] , the process @xmath224 is i.i.d . with geometric distribution",
    "@xmath225 see @xcite . in terms of the quantities introduced above , the state of the nominal plant   when algorithm a@xmath91 is used satisfies : @xmath226 for all @xmath216 .",
    "it is worth emphasizing that   describes the plant state trajectory @xmath227 for all @xmath52 .    by setting @xmath228 in  ( [ eq:25a ] )",
    ", we obtain that the state in   when algorithm a@xmath91 is employed can be described _ at the instants _ @xmath216 via : @xmath229 where @xmath230 .",
    "it is worth noting that in  ( [ eq:25 ] ) , the number of possible values for @xmath231 given @xmath215 is countably infinite , whereas if the baseline algorithm is used , there are only two possibilities , see  ( [ eq:10 ] ) .",
    "the terms @xmath232 can be easily evaluated as per the following lemma :    [ lem : n_a1 ] suppose that assumption  [ ass : iid ] holds , then @xmath233    by  ( [ eq:26 ] ) , the random variables @xmath234 and @xmath235 are independent .",
    "furthermore , the two processes @xmath236 and @xmath117 are i.i.d .",
    "thus , we can condition upon @xmath237 to obtain : @xmath238      as a consequence of  ( [ eq:25 ] ) and  ( [ eq:23 ] ) , and since @xmath239 is determined by @xmath215 , if algorithm a@xmath91 is used , then the plant state @xmath240 , with @xmath241 , is markovian .",
    "stability of the closed loop can be analyzed by using a stochastic lyapunov function approach which , to some extent , parallels that used to prove theorem  [ thm : baseline ] .",
    "to state our result , we first give the following lemma :    [ lemma : anytime_inter ] consider  ( [ eq:25 ] ) and suppose that assumptions  [ ass : iid ] and  [ ass : bound_prob ] hold",
    ". then @xmath242 and @xmath243 we have @xmath244 where @xmath245    we use the total probability formula twice .",
    "first , we condition on the length of the tentative control sequence calculated during @xmath246 : @xmath247    we note that in algorithm @xmath95 previously calculated control values are erased at the instant @xmath248 and , thus ,  ( [ eq:25 ] ) holds .",
    "consequently , the conditional expectation @xmath249 can be evaluated by conditioning further on @xmath250 : @xmath251 where we have used  ( [ eq:22 ] ) .",
    "now , using assumption  [ ass : bound_prob ] and equation  ( [ eq:14 ] ) , we obtain the bound : @xmath252 thus ,  ( [ eq:23q ] ) gives : @xmath253 since , by assumption  [ ass : bound_prob ] , we have @xmath254 . substitution into  ( [ eq : cond_on_n ] )",
    "establishes  .",
    "despite the fact that lemma  [ lemma : anytime_inter ] considers only the time instants @xmath52 where @xmath255 , see  , the bound in   can be used to conclude about stochastic stability ( for all @xmath52 ) .",
    "[ theorem : a1_stability ] suppose that assumptions  [ ass : clf][ass : bound_prob ] hold and define @xmath256 if @xmath257",
    "then the system  ( [ eq:25a ] ) ( with state trajectory @xmath147 ) is stochastically stable .    by lemma  [ lemma : anytime_inter ] and",
    "since @xmath258 is markovian , we have that if @xmath259 where @xmath260 are defined in  ( [ eq:8 ] ) , then @xmath261 since , by assumption  [ ass : clf ] , @xmath262 , we conclude that @xmath77 is a stochastic lyapunov function for  ( [ eq:25 ] ) ; c.f .",
    ", @xcite .",
    "direct calculations yield that @xmath263 using equations   and  , we obtain @xmath264 hence ,   is equivalent to  . as a consequence , if   holds , then  ( * ? ? ?",
    "* chapter 8.4.2 , theorem 2 ) implies exponential stability at the instants @xmath265 , i.e. , we have : @xmath266 now for the time instants @xmath267 , i.e. , at those time steps when no control input is calculated , we proceed as in the proof of lemma  [ lemma : anytime_inter ] , to obtain that @xmath268 since @xmath269 , we can bound @xmath270 so that @xmath271 in turn yielding @xmath272 where @xmath273 .",
    "the expectation on the left hand side of  ( [ eq:63 ] ) is taken with respect to the distributions of @xmath235 and @xmath234 .",
    "since @xmath12 is markovian and @xmath235 and @xmath234 are independent , we can take conditional expectation @xmath274 on both sides of  ( [ eq:63 ] ) to obtain : @xmath275 where we have used the bound in  ( [ eq : analysis_markov ] ) . since we assume that @xmath276 , this gives @xmath277 thus , by letting @xmath278",
    ", it follows that there exists @xmath206 such that @xmath279 the remainder of the proof now follows as in the proof of theorem  [ thm : baseline ] .",
    "theorem  [ theorem : a1_stability ] establishes sufficient conditions for stochastic stability of the closed loop when processor availability is i.i.d.and algorithm a@xmath91 is used .",
    "the quantity introduced in  ( [ eq:86 ] ) involves the distribution of @xmath117 , the contraction factor of the baseline controller @xmath280 , see  ( [ eq:3 ] ) , and the bound on the rate of increase of the plant state when left in open loop , see  ( [ eq:20 ] ) .    as a particular case ,",
    "suppose that the distribution of @xmath117 satisfies @xmath281 , i.e. , the processor time availability is such that the algorithm a@xmath91 provides at most one control input . in this case ,",
    "expression   gives that @xmath282 and , not surprisingly , we recover the sufficient condition for stochastic stability established for the baseline algorithm   in  .    more generally , if the probability that algorithm a@xmath91 provides more than one control value is non - zero , then theorem  [ theorem : a1_stability ] establishes stochastic stability for a larger class of plant models than theorem  [ thm : baseline ] .",
    "this observation follows upon noting that @xmath283 can be rewritten as : @xmath284 thus , if @xmath285 for some @xmath286 , then @xmath287 and @xmath288 .",
    "this suggests that algorithm a@xmath91 has better stabilizing properties than the baseline algorithm .",
    "we first note that for @xmath289 , algorithm a@xmath113 is equivalent to algorithm a@xmath91 . henceforth , we focus on cases where @xmath290 .",
    "it follows directly from  ( [ eq:18 ] ) and  ( [ eq:9 ] ) that with algorithm a@xmath113 if @xmath291 and @xmath292 , then @xmath293 and the plant input at times @xmath294 will stem from buffer contents at time @xmath295 , see also example  [ ex : one ] .",
    "thus , with algorithm @xmath100 , @xmath258 and @xmath147 are not markovian and the analysis carried out for algorithm @xmath95 does not carry over directly .    to recover a markovian structure , consider the overall system state @xmath296 defined via : @xmath297 in terms of @xmath298 ,   gives that at all times where @xmath109 , the plant input is given by @xmath299 furthermore , @xmath296 and thereby also @xmath300 are markovian processes .",
    "the mapping we have @xmath301 , see also  . ]",
    "@xmath302 \\theta \\end{bmatrix } , & \\text{if $ j \\geq 1 $ }    \\end{cases }    \\end{split}\\ ] ] where @xmath303\\\\      m_{2}&=\\big[\\begin{matrix }      0_{p\\times ( n+p ) } & i_p & 0_{p \\times ( \\lambda-2)p }    \\end{matrix } \\big ] ,    \\end{aligned}\\ ] ] allows one to characterize the nominal system behaviour at times where computational resources are insufficient to calculate control inputs , so that buffered plant inputs are used .",
    "more precisely , the nominal plant state when algorithm a@xmath113 is used can be stated in terms of a random mapping with inputs @xmath300 as follows : @xmath304 where @xmath305 and @xmath306 are defined in   and  , respectively , @xmath307 , and with @xmath308 at the instants @xmath216 , the nominal plant state in   when algorithm a@xmath113 is used can thus be described via : @xmath309 where @xmath310 note that , as shown in lemma  [ lem : n_a1 ] , the probabilities @xmath232 used in   are i.i.d . nevertheless , it is easy to see that @xmath311 expression which depends upon @xmath312 and therefore on @xmath313 .",
    "the following stochastic stability result is akin to the one developed in section  [ sec : main - results ] for algorithm a@xmath91 .",
    "it shows that the sufficient condition developed for algorithm a@xmath91 is also sufficient to guarantee stochastic stability when algorithm a@xmath113 is used .",
    "[ theorem : a2_stability ] suppose that assumptions  [ ass : clf ] to [ ass : bound_prob ] hold and that algorithm @xmath100 is used . if   is satisfied , then the closed loop system ( with state trajectory @xmath147 ) is stochastically stable . @xmath46",
    "it follows from  ,   and by proceeding as in the proof of lemma  [ lemma : anytime_inter ] that @xmath314 on the other hand , since @xmath315 is a function of @xmath235 and @xmath313 , we have @xmath316 where we have used the bounds in  ,   and where @xmath317 with @xmath318 denoting the index of the last nonzero entry in @xmath319 , see  . substitution into   yields that @xmath320 where @xmath321 is defined in   and where we have used the fact that @xmath269 and @xmath322 .",
    "since @xmath300 is markovian , it follows from ( * ? ? ?",
    "* chapter 8.4.2 , theorem 2 ) that @xmath323 the remainder of the proof now follows , _ mutatis mutandis _ ,",
    "that of theorem  [ theorem : a1_stability ] .",
    "so far we have assumed that the process @xmath117 is i.i.d . in situations where the control loop is shared with other applications having time - varying and correlated processing",
    "demands it is likely that assumption  [ ass : iid ] will not be satisfied .",
    "we will next outline how the analysis presented can be extended to encompass cases where the processor availability for control , henceforth modeled via the processor state process @xmath324 , is correlated .",
    "[ ass : ge ] the processor state process @xmath324 is an irreducible aperiodic finite markov chain ( see , e.g.,@xcite ) with values in the finite set @xmath325 , @xmath326 .",
    "its transition matrix @xmath327 is given by @xmath328 where @xmath329 , @xmath330 given any processor state @xmath331 , @xmath332 the conditional distribution of the process @xmath117 satisfies @xmath333 with given probabilities @xmath334.@xmath46    for the baseline algorithm in   stochastic stability can be ensured as follows :    suppose that assumptions  [ ass : clf ] ,  [ ass : bound_prob ] and  [ ass : ge ] hold .",
    "define @xmath335 a sufficient condition for   to be stochastically stable is that @xmath336    first , we note that the joint process @xmath337 is markovian .",
    "thus , by using the law of total expectation and the fact that @xmath338 , we obtain @xmath339 for all @xmath340 .",
    "the remainder of the proof now follows as in the proof of theorem  [ thm : baseline ] and is omitted for space constraints .",
    "the stability results of sections  [ sec : algorithm - a_1 ] and  [ sec : algorithm - a_2 ] can be extended to encompass the markovian processor model of assumption  [ ass : ge ] .",
    "here we only present the stability results for algorithm a@xmath91 .",
    "the main difference from the analysis in section  [ sec : algorithm - a_1 ] is the fact that the plant state @xmath258 is no longer markovian .",
    "interestingly , the analysis can be extended by recognizing that the aggregated process @xmath341 is markovian .    whilst the process @xmath342 is no longer i.i.d .",
    ", the conditional distributions @xmath343 can be evaluated as per the following result :    [ lem : delta_g ] suppose that assumption  [ ass : ge ] holds and define @xmath344 then , we have @xmath345 , @xmath346 , @xmath347 and @xmath348 , so that   reduces to  . ]",
    "@xmath349 where @xmath350    denote @xmath351 and @xmath352 .",
    "conditioning upon the processor state sequence @xmath353 gives that @xmath354 which can be rewritten in compact form as in  .",
    "the state evolution at times @xmath265 can now be evaluated as @xmath355 where @xmath230 and @xmath356 .",
    "lemma  [ lemma : anytime_inter ] can be generalized as follows :    [ lem : a1markov ] consider   and suppose that assumption  [ ass : bound_prob ] with @xmath195 replaced by @xmath357 , and assumption  [ ass : ge ] hold .",
    "then @xmath358 for all @xmath359 , where @xmath360 with @xmath361 , @xmath362 , and @xmath363 as in  ( [ eq:54 ] ) .    following as in the proof of lemma  [ lemma : anytime_inter ] , we first condition upon @xmath235 to calculate , for @xmath364 , @xmath365 and then condition further on @xmath234 to obtain that @xmath366 where we have used  . equation   and assumption  [ ass : bound_prob ]",
    "then provide the bound : @xmath367 since @xmath327 is the transition probability of an irreducible aperiodic markov chain and @xmath368 , the above summation is convergent . if we now substitute  ( [ eq:61 ] ) into  , then we obtain the bound @xmath369 where we have used ( * ? ? ?",
    "the result now follows upon noting that @xmath370 and some algebraic manipulations .    following as in the proof of theorem  [ theorem : a1_stability ] , one can derive the following stochastic stability result :    [ thm : a1stabmarkov ] suppose that assumption  [ ass : clf ] and the hypotheses of lemma  [ lem : a1markov ] hold . if @xmath371 then the system   ( with state trajectory @xmath147 ) is stochastically stable .",
    "the above generalizes the analysis in section  [ sec : algorithm - a_1 ] to situations where the processor availability for control is correlated .",
    "the results of section  [ sec : algorithm - a_2 ] can be similarly extended .",
    "it is easy to see that the i.i.d .",
    "model of assumption  [ ass : iid ] corresponds to the special case of the markovian model in assumption  [ ass : ge ] , obtained by setting @xmath372 , @xmath346 , @xmath373 and @xmath374 , for all @xmath375 . with the above parameters ,   and   give that @xmath376 , @xmath377 , @xmath378 and @xmath379 .",
    "thus , the term @xmath380 in   becomes @xmath381 where @xmath283 is given in  .",
    "therefore , for the i.i.d .",
    "case , @xmath382 if and only if   holds , and theorem  [ thm : a1stabmarkov ] reduces to theorem  [ theorem : a1_stability ] . @xmath46",
    "having established sufficient conditions for stochastic stability of the anytime control loops , we next study performance issues . for that purpose , we assume that the execution time available is i.i.d . , uniformly distributed in the interval @xmath383 $ ] .",
    "the execution time can also be viewed as the fraction of the maximum possible processor time that is available at any time step .",
    "denote the time taken to calculate one control input by @xmath384 .",
    "the probability distribution of @xmath117 , see  , is then given by @xmath385 where @xmath386 is the maximum number of control inputs that can be calculated at any time step . throughout this section ,",
    "tentative controls in   are obtained by evaluating @xmath280 for the corresponding predicted plant state .    to evaluate control performance , we consider the empirical cost @xmath387 where expectation is taken with respect to the availability of execution time as described above .",
    "we first consider a nonlinear plant model ( adapted from  @xcite ) : @xmath388 where @xmath389 is white noise uniformly distributed in the interval @xmath390 $ ] .",
    "the baseline control policy is taken as @xmath391 .",
    "it can be verified that if one chooses @xmath392 , then assumption  [ ass : clf ] is satisfied for @xmath393 and @xmath394 .",
    "[ fig:1 ] shows the percentage improvement in cost achieved as a function of the time taken to calculate one control input for both algorithms a@xmath91 and a@xmath113 , as compared to the baseline algorithm  .",
    "it can be appreciated in that figure , both algorithms proposed give a significant performance improvement , with algorithm a@xmath113 further outperforming algorithm a@xmath91 .    ) with the proposed anytime algorithms and the baseline algorithm  , as a function of @xmath395 , the execution time required to calculate one control input , see  . ]    as the plant model becomes more open - loop unstable , the proposed algorithms can be expected to give higher performance gains .",
    "figure  [ fig:2 ] illustrates this intuitive effect for the linear model @xmath396 with system parameter @xmath397 $ ] , and where @xmath389 is i.i.d , gaussian with zero mean and variance 0.1 .",
    "the policy @xmath280 is taken as the associated lqr control law ; @xmath117 is distributed as in   with @xmath398 .",
    "the percentage improvement is plotted for algorithms @xmath95 and @xmath100 , as compared to the baseline algorithm  .",
    "and a@xmath113 when compared to the baseline algorithm  , for the model  . ]",
    "we finally examine the effect of artificially limiting the maximum buffer size . in particular ,",
    "if the buffer size is taken as @xmath399 , then one recovers the baseline algorithm  ; as noted in section  [ sec : algorithm - a_2 ] , with size 2 , algorithms a@xmath91 and a@xmath113 are equivalent .",
    "[ fig:3 ] illustrates empirical results for a linear plant   with @xmath400 .",
    "the processor availability is as per   with @xmath401 , thus , @xmath402 and @xmath403 .",
    "allowing the buffer size to be of size 4 gives the best results , although a buffer of size 3 gives almost optimal performance .    .",
    "we proposed two related anytime control algorithms for general nonlinear processes .",
    "the algorithms use available processing resources to compute sequences of tentative control inputs .",
    "thus , even if the processor does not provide sufficient resources at some time steps , the effect can be partially compensated for . for general non - linear systems , we established sufficient conditions for stochastic stability .",
    "simple numerical examples indicate that the performance gains with the proposed algorithms can be significant , when compared to a simple baseline algorithm .",
    "future work could include examining situations where system assumptions hold only locally , using the stability and performance characterizations obtained for processor scheduling , and the development of anytime algorithms for distributed systems .",
    "the authors would like to thank the anonymous reviewers for their valuable comments and suggestions to improve the paper .",
    "research supported for the first author under australian research council s discovery projects funding scheme ( project number dp0988601 ) and in part for the second author by nsf awards 0846631 and 0834771 .",
    "m. caccamo , t. baker , a. burns , and g. buttazzo , `` real - time scheduling for embedded systems , '' in _ handbook of networked and embedded systems _ ( d. hristu - varsakelis and w. s. levine , eds . ) , birkhuser , 2005 .",
    "v. gupta , `` on a control algorithm for time - varying processor availability , '' ieee transactions on automatic control , provisionally accepted april 2011 .",
    "see also v. gupta , `` on an anytime algorithm for control , '' ieee int .",
    "conf . on decision and control ,",
    "december 2009 . v. gupta and n. c. martins , `` on stability in the presence of analog erasure channels between controller and actuator , '' ieee transactions on automatic control , 55(1):175 - 179 , jan 2010 .",
    "v. gupta and d. e. quevedo , `` on a control lyapunov function based anytime algorithm for control of nonlinear processes , '' 2nd ifac workshop on distributed estimation and control in networked systems , 2010 .",
    "d. henriksson and j. akesson , `` flexible implementation of model predictive control using sub - optimal solutions , '' internal report no .",
    "tfrt-7610-se , department of automatic control , lund university , april 2004 .",
    "d. henriksson , a. cervin , j. akesson and k. e. arzen , `` on dynamic real - time scheduling of model predictive controllers , '' in proceedings of the 41st ieee conference on decision and control , las vegas , nv , december 2002 .",
    "r. m. murray , j. hauser , a. jadbabaie , m. b. milam , n. petit , w. b. dunbar and r. franz , `` online control customization via optimization - based control , '' chapter in `` software - enabled control , information technology for dynamical systems '' ( eds ) t. samad , g. balas , 149 - 174 , wiley - interscience , 2003 .",
    "g. pin and t. parisini , `` stabilization of networked control systems by nonlinear model predictive control : a set invariance approach , '' in int .",
    "workshop on assessment and future directions of nmpc , 2008 .",
    "d. e. quevedo and d. nei , `` input - to - state stability of packetized predictive control over unreliable networks affected by packet - dropouts , '' ieee trans .",
    "2 , pp . 370375 feb .  2011 .",
    "d. e. quevedo , j. stergaard , and d. nei , `` packetized predictive control of stochastic systems over bit - rate limited channels with packet loss , '' ieee trans .",
    "56 , pp . 28542868 , dec .",
    "d. e. quevedo , e. i. silva , and g. c. goodwin , `` control over unreliable networks affected by packet erasures and variable transmission delays , '' ieee j. select .",
    "areas commun .",
    "672685 , may 2008 .",
    "p. l. tang and c. w. de silva , `` compensation for transmission delays in an ethernet - based control network using variable - horizon predictive control , '' ieee trans .",
    "technol . ,",
    "vol . 14 , pp .",
    "707 718 , july 2006 .            *",
    "daniel quevedo * ( s97m05 ) received ingeniero civil electrnico and magister en ingeniera electrnica degrees from the universidad tcnica federico santa mara , valparaso , chile in 2000 . in 2005",
    ", he received the ph.d .",
    "degree from the university of newcastle , australia , where he is currently an associate professor .",
    "he has been a visiting researcher at various institutions , including uppsala university , sweden , kth stockholm , sweden , aalborg university , denmark , kyoto university , japan , and inria grenoble , france .",
    "quevedo was supported by a full scholarship from the alumni association during his time at the universidad tcnica federico santa mara and received several university - wide prizes upon graduating .",
    "he received the ieee conference on decision and control best student paper award in 2003 and was also a finalist in 2002 . in 2009",
    ", he was awarded an australian research fellowship .",
    "his research interests include several areas of automatic control , signal processing , and power electronics .",
    "vijay gupta vijay gupta is an assistant professor in the department of electrical engineering at the university of notre dame .",
    "he received his b. tech degree from the indian institute of technology , delhi and the m.s . and ph.d .",
    "degrees from the california institute of technology , all in electrical engineering .",
    "he has served as a research associate in the institute for systems research at the university of maryland , college park , and as a consultant to the systems group at the united technology research center , hartford , ct .",
    "his research interests include various topics at the interaction of communication , computation and control .",
    "he received the nsf career award in 2009 ."
  ],
  "abstract_text": [
    "<S> we present two related anytime algorithms for control of nonlinear systems when the processing resources available are time - varying . </S>",
    "<S> the basic idea is to calculate tentative control input sequences for as many time steps into the future as allowed by the available processing resources at every time step . </S>",
    "<S> this serves to compensate for the time steps when the processor is not available to perform any control calculations . using a stochastic lyapunov function based approach </S>",
    "<S> , we analyze the stability of the resulting closed loop system for the cases when the processor availability can be modeled as an independent and identically distributed sequence and via an underlying markov chain . </S>",
    "<S> numerical simulations indicate that the increase in performance due to the proposed algorithms can be significant .    </S>",
    "<S> quevedo and gupta : sequence - based anytime control </S>"
  ]
}
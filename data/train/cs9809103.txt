{
  "article_text": [
    "with the information superhighway fast becoming a reality , the problem of designing networks capable of accommodating multimedia ( both audio and video ) traffic in a multicast ( simultaneous transmission of data to multiple destinations ) environment has come to assume paramount importance @xcite . as discussed in kompella ,",
    "pasquale and polyzos @xcite , one of the popular solutions to multicast routing involves tree construction .",
    "two optimization criteria  ( 1 ) the minimum worst - case transmission delay and ( 2 ) the minimum total cost  are typically sought to be minimized in the construction of these trees .",
    "network design problems where even one cost measure must be minimized , are often @xmath0-hard .",
    "( see section a2 on network design in @xcite . ) but , in real - life applications , it is often the case that the network to be built is required to minimize multiple cost measures simultaneously , with different cost functions for each measure .",
    "for example , as pointed out in @xcite , in the problem of finding good multicast trees , each edge has associated with it two edge costs : the construction cost and the delay cost .",
    "the construction cost is typically a measure of the amount of buffer space or channel bandwidth used and the delay cost is a combination of the propagation , transmission and queuing delays .",
    "such multi - criteria network design problems , with separate cost functions for each optimization criterion , also occur naturally in information retrieval @xcite and vlsi designs ( see @xcite and the references therein ) . with the advent of deep micron vlsi designs , the feature size has shrunk to sizes of 0.5 microns and less . as a result , the interconnect resistance , being proportional to the square of the scaling factor , has increased significantly .",
    "an increase in interconnect resistance has led to an increase in interconnect delays thus making them a dominant factor in the timing analysis of vlsi circuits .",
    "therefore vlsi circuit designers aim at finding minimum cost ( spanning or steiner ) trees given delay bound constraints on source - sink connections .",
    "the above applications set the stage for the formal definition of multicriteria network design problems .",
    "we explain this concept by giving a formal definition of a bicriteria network design problem .",
    "a generic bicriteria network design problem , ( @xmath1 , @xmath2 , @xmath3 ) , is defined by identifying two minimization objectives , - @xmath1 and @xmath2 , - from  a set of possible objectives , and specifying a membership requirement in a class of subgraphs , - @xmath3 .",
    "the problem specifies a budget value on the first objective , @xmath1 , under one cost function , and seeks to find a network having minimum possible value for the second objective , @xmath2 , under another cost function , such that this network is within the budget on the first objective .",
    "the solution network must belong to the subgraph - class @xmath3 .",
    "for example , the problem of finding low - cost and low - transmission - delay multimedia networks @xcite can be modeled as the ( diameter , total cost , spanning tree)-bicriteria problem : given an undirected graph @xmath4 with two weight functions @xmath5 and @xmath6 for each edge @xmath7 modeling construction and delay costs respectively , and a bound @xmath8 ( on the total delay ) , find a minimum @xmath9-cost spanning tree such that the diameter of the tree under the @xmath10-costs is at most @xmath8 .",
    "it is easy to see that the notion of bicriteria optimization problems can be easily extended to the more general multicriteria optimization problems . in this paper , we will be mainly concerned with bicriteria network design problems .    in the past",
    ", the problem of minimizing two cost measures was often dealt with by attempting to minimize some combination of the two , thus converting it into a unicriterion problem .",
    "this approach fails when the two criteria are very disparate .",
    "we have chosen , instead , to model bicriteria problems as that of minimizing one criterion subject to a budget on the other .",
    "we argue that this approach is both general as well as robust .",
    "it is more general because it subsumes the case where one wishes to minimize some functional combination of the two criteria .",
    "it is more robust because the quality of approximation is independent of which of the two criteria we impose the budget on .",
    "we elaborate on this more in sections [ sec : equivalence ] and [ sec : general ] .",
    "the organization of the rest of the paper is as follows : section [ sec : contributions ] summarizes the results obtained in this paper ; section [ sec : previous ] discusses related research work ; section [ sec : hardness ] contains the hardness results ; section [ sec : equivalence ] shows that the two alternative ways of formulating a given bicriteria problem are indeed equivalent ; section [ sec : general ] demonstrates the generality of the bicriteria approach ; section [ sec : parametric ] details the parametric search technique ; section [ sec : diameter ] presents the approximation algorithm for diameter constrained steiner trees ; section [ sec : treewidth ] contains the results on treewidth - bounded graphs ; section [ sec : concluding ] contains some concluding remarks and open problems .",
    "the area of unicriterion optimization problems for network design is vast and well - explored ( see @xcite and the references therein . ) .",
    "ravi et al .",
    "@xcite studied the degree - bounded minimum cost spanning tree problem and provided an approximation algorithm with performance guarantee ( @xmath11 ) .",
    "the ( degree , diameter , spanning tree ) problem was studied by ravi @xcite in the context of finding good broadcast networks . there",
    "he provides an approximation algorithm for the ( degree , diameter , spanning tree ) problem with performance guarantee ( @xmath12 ) , on the degree he finds a tree whose total cost is at most @xmath13 times the optimal and whose degree is at most @xmath14 . ] .",
    "the ( diameter , total cost , spanning tree ) entry in table 1 corresponds to the diameter - constrained minimum spanning tree problem introduced earlier .",
    "it is known that this problem is @xmath0-hard even in the special case where the two cost functions are identical @xcite .",
    "awerbuch , baratz and peleg @xcite gave an approximation algorithm with @xmath15 performance guarantee for this problem - i.e. the problem of finding a spanning tree that has simultaneously small diameter ( i.e. , shallow ) and small total cost ( i.e. , light ) , both under the same cost function .",
    "khuller , raghavachari and young @xcite studied an extension called _ light , approximate shortest - path trees ( last ) _ and gave an approximation algorithm with @xmath15 performance guarantee .",
    "kadaba and jaffe @xcite , kompella et al .",
    "@xcite , and zhu et al .",
    "@xcite considered the ( diameter , total cost , steiner tree ) problem with two edge costs and presented heuristics without any guarantees .",
    "it is easy to construct examples to show that the solutions produced by these heuristics in @xcite , can be arbitrarily bad with respect to an optimal solution .",
    "a closely related problem is that of finding a diameter - constrained shortest path between two pre - specified vertices @xmath16 and @xmath17 , or ( diameter , total cost , @xmath16-@xmath17 path ) .",
    "this problem , termed the multi - objective shortest path problem ( mosp ) in the literature , is @xmath0-complete and warburton @xcite presented the first fully polynomial approximation scheme ( @xmath18 ) for it .",
    "hassin @xcite provided a strongly polynomial @xmath18 for the problem which improved the running time of warburton @xcite .",
    "this result was further improved by phillips @xcite .",
    "the ( total cost , total cost , spanning tree)-bicriteria problem has been recently studied by ganley et al .",
    "they consider a more general problem with more than two weight functions .",
    "they also gave approximation algorithms for the restricted case when each weight function obeys triangle inequality .",
    "however , their algorithm does not have a bounded performance guarantee with respect to each objective .",
    "many @xmath0-hard problems have exact solutions when attention is restricted to the class of treewidth - bounded graphs and much work has been done in this area ( see @xcite and the references therein ) . independently , bern , lawler and wong @xcite introduced the notion of decomposable graphs .",
    "later , it was shown @xcite that the class of decomposable graphs and the class of treewidth - bounded graphs are equivalent .",
    "bicriteria network design problems restricted to treewidth - bounded graphs have been previously studied in @xcite .",
    "in this paper , we study the complexity and approximability of a number of bicriteria network design problems .",
    "the three objectives we consider are : ( i ) total cost , ( ii ) diameter and ( iii ) degree of the network .",
    "these reflect the price of synthesizing the network , the maximum delay between two points in the network and the reliability of the network , respectively .",
    "the _ total cost _ objective is the sum of the costs of all the edges in the subgraph .",
    "the _ diameter _",
    "objective is the maximum distance between any pair of nodes in the subgraph .",
    "the _ degree _ objective denotes the maximum over all nodes in the subgraph , of the degree of the node .",
    "the class of subgraphs we consider in this paper are mainly _ steiner trees _ ( and hence _ spanning trees _ as a special case ) ; although several of our results extend to more general connected subgraphs such as generalized steiner trees .",
    "as mentioned in @xcite , most of the problems considered in this paper , are @xmath0-hard for arbitrary instances even when we wish to find optimum solutions with respect to a single criterion . given the hardness of finding optimal solutions , we concentrate on devising approximation algorithms with worst case performance guarantees . recall that an approximation algorithm for a minimization problem @xmath19 provides a * performance guarantee * of @xmath20 if for every instance @xmath21 of @xmath19 , the solution value returned by the approximation algorithm is within a factor @xmath20 of the optimal value for @xmath21 .",
    "here , we extend this notion to apply to bicriteria optimization problems .",
    "an @xmath22-approximation algorithm for an ( @xmath1 , @xmath2 , @xmath3)-bicriteria problem is defined as a polynomial - time algorithm that produces a solution in which the first objective ( @xmath1 ) value , is at most @xmath23 times the budget , and the second objective ( @xmath2 ) value , is at most @xmath24 times the minimum for any solution that is within the budget on @xmath1 .",
    "the solution produced must belong to the subgraph - class @xmath3 .",
    "analogous definitions can be given when @xmath1 and/or @xmath2 are maximization objectives .",
    "table 1 contains the performance guarantees of our approximation algorithms for finding spanning trees , @xmath3 , under different pairs of minimization objectives , @xmath1 and @xmath2 . for each problem",
    "cataloged in the table , two different costs are specified on the edges of the undirected graph : the first objective is computed using the first cost function and the second objective , using the second cost function .",
    "the rows are indexed by the budgeted objective .",
    "for example the entry in row @xmath1 , column @xmath2 , denotes the performance guarantee for the problem of minimizing objective @xmath2 with a budget on the objective @xmath1 .",
    "all the results in table 1 extend to finding steiner trees with at most a constant factor worsening in the performance ratios .",
    "for the diagonal entries in the table the extension to steiner trees follows from  theorem [ better - scale - thm ] .",
    "algorithm dcst of section [ sec : diameter ] in conjunction with algorithm bicriteria - equivalence of section [ sec : equivalence ] yields the ( diameter , total cost , steiner tree ) and ( total cost , diameter , steiner tree ) entries .",
    "the other nondiagonal entries can also be extended to steiner trees and these extensions will appear in the journal versions of @xcite .",
    "our results for arbitrary graphs can be divided into three general categories .    * table 1 .",
    "performance guarantees for finding spanning trees in an arbitrary graph on @xmath25 nodes .",
    "asterisks indicate results obtained in this paper .",
    "@xmath26 is a fixed accuracy parameter . *",
    "+    first , as mentioned before , there are two natural alternative ways of formulating general bicriteria problems : ( i ) where we impose the budget on the first objective and seek to minimize the second and ( ii ) where we impose the budget on the second objective and seek to minimize the first .",
    "we show that an @xmath22-approximation algorithm for one of these formulations naturally leads to a @xmath27-approximation algorithm for the other",
    ". thus our definition of a bicriteria approximation is independent of the choice of the criterion that is budgeted in the formulation .",
    "this makes it a robust definition and allows us to fill in the entries for the problems ( @xmath2 , @xmath1 , @xmath3 ) by transforming the results for the corresponding problems ( @xmath1 , @xmath2 , @xmath3 ) .",
    "second , the diagonal entries in the table follow as a corollary of a general result ( theorem [ better - scale - thm ] ) which is proved using a parametric search algorithm .",
    "the entry for ( degree , degree , spanning tree ) follows by combining theorem [ better - scale - thm ] with the @xmath13-approximation algorithm for the degree problem in @xcite . in @xcite",
    "they actually provide an @xmath28-approximation algorithm for the weighted degree problem .",
    "the weighted degree of a subgraph is defined as the maximum over all nodes of the sum of the costs of the edges incident on the node in the subgraph .",
    "hence we actually get an @xmath29-approximation algorithm for the ( weighted degree , weighted degree , spanning tree)-bicriteria problem .",
    "similarly , the entry for ( diameter , diameter , spanning tree ) follows by combining theorem [ better - scale - thm ] with the known exact algorithms for minimum diameter spanning trees @xcite ; while the result for ( total cost , total cost , spanning tree ) follows by combining theorem [ better - scale - thm ] with an exact algorithm to compute a minimum spanning tree @xcite .",
    "finally , we present a cluster based approximation algorithm and a solution based decomposition technique for devising approximation algorithms for problems when the two objectives are different .",
    "our techniques yield @xmath30-approximation algorithms for the ( diameter , total cost , steiner tree ) and the ( degree , total cost , steiner tree ) problems .    *",
    "* * consider , for example , the conjunction of this theorem with the results of goemans et al .",
    "this leads to a host of bicriteria approximation results when two costs are specified on edges for finding minimum - cost generalized steiner trees , minimum @xmath31-edge connected subgraphs , or any other network design problems specified by weakly supermodular functions .",
    "thus for example , we get @xmath15-approximation algorithms for the ( total cost , total cost , generalized steiner tree ) and ( total cost , total cost , @xmath31-edge connected subgraph)-bicriteria problems .",
    "( see @xcite for the results on the corresponding unicriterion problems . ) similarly , given an undirected graph with two costs specified on each node we can get logarithmic approximations for the minimum node - cost steiner tree using the result of klein and ravi @xcite . as another example , with two edge - cost functions , and an input number @xmath31 , we can use the result of blum et al .",
    "@xcite to obtain an @xmath15-approximation for the minimum cost ( under both functions ) tree spanning at least @xmath31 nodes . * * * * * * * * * * *      we also study the bicriteria problems mentioned above for the class of treewidth - bounded graphs",
    ". examples of treewidth - bounded graphs include trees , series - parallel graphs , @xmath31-outerplanar graphs , chordal graphs with cliques of size at most @xmath31 , bounded - bandwidth graphs etc .",
    "we use a dynamic programming technique to show that for the class of treewidth - bounded graphs , there are either polynomial - time or pseudopolynomial - time algorithms ( when the problem is * np*-complete ) for several of the bicriteria network design problems studied here . a * polynomial time approximation scheme * ( ptas ) for problem",
    "@xmath19 is a family of algorithms @xmath32 such that , given an instance @xmath21 of @xmath19 , for all @xmath33 , there is a polynomial time algorithm @xmath34 that returns a solution which is within a factor @xmath35 of the optimal value for @xmath21 . a polynomial time approximation scheme in which the running time grows as a polynomial function of @xmath36",
    "is called a * fully polynomial time approximation scheme*. here we show how to convert these pseudopolynomial - time algorithms for problems restricted to treewidth - bounded graphs into fully polynomial - time approximation schemes using a general scaling technique",
    ". stated in our notation , we obtain polynomial time approximation algorithms with performance of @xmath37 , for all @xmath33 .",
    "the results for treewidth - bounded graphs are summarized in table 2 .",
    "as before , the rows are indexed by the budgeted objective .",
    "all algorithmic results in table 2 also extend to steiner trees in a straightforward way .",
    "our results for treewidth - bounded graphs have an interesting application in the context of finding optimum broadcast schemes .",
    "kortsarz and peleg @xcite gave @xmath28-approximation algorithms for the minimum broadcast time problem for series - parallel graphs . combining our results for the ( degree , diameter , spanning tree ) for treewidth - bounded graphs with the techniques in @xcite",
    ", we obtain an @xmath38-approximation algorithm for the minimum broadcast time problem for treewidth - bounded graphs ( series - parallel graphs have a treewidth of @xmath39 ) , improving and generalizing the result in @xcite .",
    "note that the best known result for this problem for general graphs is by ravi @xcite who provides an approximation algorithm performance guarantee ( @xmath40 ) .    [",
    "cols=\"^,^,^,^\",options=\"header \" , ]     * table 2 .",
    "bicriteria spanning tree results for treewidth - bounded graphs . *",
    "the problem of finding a minimum degree spanning tree is strongly @xmath0-hard @xcite .",
    "this implies that all spanning tree bicriteria problems , where one of the criteria is degree , are also strongly @xmath0-hard . in contrast , it is well known that the minimum diameter spanning tree problem and the minimum cost spanning tree problems have polynomial time algorithms ( see @xcite and the references therein ) .",
    "the ( diameter , total cost , spanning tree)-bicriteria problem is strongly @xmath0-hard even in the case where both cost functions are identical @xcite .",
    "here we give the details of the reduction to show that ( diameter , total cost , spanning tree ) is weakly @xmath0-hard even for series - parallel graphs ( i.e. graphs with treewidth at most @xmath39 ) .",
    "similar reductions can be given to show that ( diameter , diameter , spanning tree ) and ( total cost , total cost , spanning tree ) are also weakly @xmath0-hard for series - parallel graphs .",
    "we first recall the definition of the * partition * problem @xcite . as an instance of the * partition *",
    "problem we are given a set @xmath41 of positive integers and the question is whether there exists a subset @xmath42 such that @xmath43 .",
    "[ np - thm ] ( diameter , total cost , spanning tree ) is @xmath0-hard for series - parallel graphs .",
    "reduction from  the * partition * problem . given an instance @xmath44 of the * partition * problem",
    ", we construct a series parallel graph @xmath45 with @xmath46 vertices , @xmath47 and @xmath48 edges .",
    "we attach a pair of parallel edges , @xmath49 and @xmath50 , between @xmath51 and @xmath52 , @xmath53 .",
    "we now specify the two cost functions @xmath54 and @xmath55 on the edges of this graph ; @xmath56 .",
    "let @xmath57 .",
    "now it is easy to show that @xmath45 has a spanning tree of @xmath10-diameter at most @xmath58 and total @xmath9-cost at most @xmath58 if and only if there is a solution to the original instance @xmath59 of the * partition * problem .    * * *    * * * * * * *    we now show that the ( diameter , total - cost , steiner tree ) problem is hard to approximate within a logarithmic factor . an approximation algorithm provided in section [ sec : diameter ] .",
    "there is however a gap between the results of theorems [ fix - dia ] and [ spanning - thm ] .",
    "our non - approximability result is obtained by an approximation preserving reduction from the * min set cover*. an instance @xmath60 of the * min set cover * problem consists of a universe @xmath61 and a collection of subsets @xmath62 , each set @xmath63 having an associated cost @xmath64 .",
    "the problem is to find a minimum cost collection of the subsets whose union is @xmath59 .",
    "[ th : feige ] recently @xcite have independently shown the following non - approximability result : + it is @xmath65-hard to find an approximate solution to the * min set cover * problem , with a universe of size @xmath31 , with performance guarantee better than @xmath66 .    * * * * recently feige @xcite has shown that , unless @xmath67 , the * min set cover * problem , with a universe of size @xmath31 , can not be approximated to better than a @xmath68 factor . * * * * * * * * * * *    [ fix - dia ] there is an approximation preserving reduction from * min set cover * problem to the ( diameter , total cost , steiner tree ) problem . thus :    unless @xmath69 , given an instance of the ( diameter , total cost , steiner tree ) problem with @xmath31 sites , there is no polynomial - time approximation algorithm that outputs a steiner tree of diameter at most the bound @xmath70 , and cost at most @xmath71 times that of the minimum cost diameter-@xmath70 steiner tree , for @xmath72 .",
    "we give an approximation preserving reduction from  the * min set cover * problem to the ( diameter , total cost , steiner tree ) problem .",
    "given an instance @xmath60 of the * min set cover * problem where @xmath73 and @xmath74 , where the cost of the set @xmath63 is @xmath64 , we construct an instance @xmath45 of the ( diameter , total cost , steiner tree ) problem as follows . the graph @xmath45 has a node @xmath75 for each element @xmath75 of @xmath59 , a node @xmath76 for each set @xmath63 , and an extra `` enforcer - node '' @xmath25 . for each set @xmath63",
    ", we attach an edge between nodes @xmath25 and @xmath76 of @xmath9-cost @xmath64 , and @xmath10-cost @xmath77 .",
    "for each element @xmath75 and set @xmath78 such that @xmath79 we attach an edge @xmath80 of @xmath9-cost , 0 , and @xmath10-cost , @xmath77 .",
    "in addition to these edges , we add a path @xmath81 made of two edges of @xmath9-cost , 0 , and @xmath10-cost , @xmath77 , to the enforcer node @xmath25 ( see figure [ fig : hardapprox ] ) .",
    "the path @xmath81 is added to ensure that all the nodes @xmath75 are connected to @xmath25 using a path of @xmath10-cost at most 2 . all other edges in the graph are assigned infinite @xmath9 and @xmath10-costs .",
    "the nodes @xmath75 along with @xmath25 and the two nodes of @xmath81 are specified to be the terminals for the steiner tree problem instance .",
    "we claim that @xmath45 has a @xmath9-cost steiner tree of diameter at most @xmath82 and cost @xmath83 if and only if the original instance @xmath60 has a solution of cost @xmath83 .",
    "note that any steiner tree of diameter at most @xmath82 must contain a path from  @xmath75 to @xmath25 , for all @xmath84 , that uses an edge @xmath85 for some @xmath78 such that @xmath79 .",
    "hence any steiner tree of diameter at most @xmath82 provides a feasible solution of equivalent @xmath9-cost to the original set cover instance .",
    "the proof now follows from  theorem [ th : feige ] .",
    "in section   [ sec : motivation ] , we claimed that our formulation for bicriteria problems is robust and general . in this section , we justify these claims .      in this section , we show that our formulation for bicriteria problems is robust and general .",
    "let @xmath45 be a graph with two ( integral ) cost functions , @xmath9 and @xmath10 ( typically edge costs or node costs ) .",
    "let @xmath1 ( @xmath2 ) be a minimization objective computed using cost function @xmath9 ( @xmath10 ) .",
    "let the budget bound on the @xmath9-cost '' or `` @xmath9-cost '' in this section to mean the value of the objective function computed using @xmath9 , and not to mean the total of all the @xmath9 costs in the network . ]",
    "( @xmath10-cost ) of a solution subgraph be denoted by @xmath83 ( @xmath8 ) .",
    "there are two natural ways to formulate a bicriteria problem : ( i ) ( @xmath1 , @xmath2 , @xmath3 ) - find a subgraph in @xmath3 whose @xmath1-objective value ( under the @xmath9-cost ) is at most @xmath83 and which has minimum @xmath2-objective value ( under the @xmath10-cost ) , ( ii ) ( @xmath2 , @xmath1 , @xmath3 ) - find a subgraph in @xmath3 whose @xmath2-objective value ( under the @xmath10-cost ) is at most @xmath8 and which has minimum @xmath1-objective value ( under the @xmath9-cost ) .",
    "note that bicriteria problems are generally hard , when the two criteria are _ hostile _ with respect to each other - the minimization of one criterion conflicts with the minimization of the other .",
    "a good example of hostile objectives are the degree and the total edge cost of a spanning tree in an unweighted graph @xcite .",
    "two minimization criteria are formally defined to be hostile whenever the minimum value of one objective is monotonically nondecreasing as the budget ( bound ) on the value of the other objective is decreased .",
    "let @xmath86@xmath87 be any @xmath22-approximation algorithm for ( @xmath1 , @xmath2 , @xmath3 ) on graph @xmath45 with budget @xmath83 under the @xmath9-cost .",
    "we now show that there is a transformation which produces a @xmath27-approximation algorithm for ( @xmath2 , @xmath1 , @xmath3 ) .",
    "the transformation uses binary search on the range of values of the @xmath9-cost with an application of the given approximation algorithm , @xmath86 , at each step of this search .",
    "let the minimum @xmath9-cost of a @xmath88-bounded subgraph in @xmath3 be @xmath89 .",
    "let @xmath90 be an upper bound on the @xmath9-cost of any @xmath8-bounded subgraph in @xmath3 .",
    "note that @xmath90 is at most some polynomial in @xmath25 times the maximum @xmath9-cost ( of an edge or a node ) .",
    "hence @xmath91 is at most a polynomial in terms of the input specification .",
    "let @xmath92 ( @xmath93 ) denote the @xmath9-cost ( @xmath10-cost ) of the subgraph output by algorithm bicriteria - equivalence given below .",
    "if @xmath45 contains a @xmath8-bounded subgraph in @xmath3 then algorithm bicriteria - equivalence outputs a subgraph from   @xmath3 whose @xmath9-cost is at most @xmath23 times that of the minimum @xmath9-cost @xmath8-bounded subgraph and whose @xmath10-cost is at most @xmath94 .    since @xmath1 and @xmath2 are hostile criteria it follows that the binary search in step [ binsearch - step ] is well defined .",
    "assume that @xmath3 contains a @xmath8-bounded subgraph .",
    "then , since @xmath86@xmath95 returns a subgraph with @xmath10-cost at most @xmath94 , it is clear that algorithm bicriteria - equivalence outputs a subgraph in this case . as a consequence of step [ step1 ] and the performance guarantee of the approximation algorithm @xmath86",
    ", we get that @xmath96 . by step [ step2 ]",
    "we have that @xmath97 and @xmath98 .",
    "thus algorithm bicriteria - equivalence outputs a subgraph from   @xmath3 whose @xmath9-cost is at most @xmath23 times that of the minimum @xmath9-cost @xmath8-bounded subgraph and whose @xmath10-cost is at most @xmath94 .",
    "note however that in general the resulting @xmath27-approximation algorithm is , not _",
    "strongly _ polynomial since it depends on the range of the @xmath9-costs .",
    "but it is a _ polynomial - time _",
    "algorithm since its running time is linearly dependent on @xmath99 the largest @xmath9-cost .",
    "the above discussion leads to the following theorem .",
    "[ equiv - thm ] any @xmath22-approximation algorithm for ( @xmath1 , @xmath2 , @xmath3 ) can be transformed in polynomial time into a @xmath27-approximation algorithm for ( @xmath2 , @xmath1 , @xmath3 ) .",
    "our formulation is more general because it subsumes the case where one wishes to minimize some functional combination of the two criteria .",
    "we briefly comment on this next . for the purposes of illustration",
    "let @xmath1 and @xmath2 be two objective functions and let us say that we wish to minimize the sum of the two objectives @xmath1 and @xmath2 . call this an ( @xmath1 @xmath100 @xmath2 , @xmath3 ) problem .",
    "let @xmath86@xmath87 be any @xmath22-approximation algorithm for ( @xmath1 , @xmath2 , @xmath3 ) on graph @xmath45 with budget @xmath83 under the @xmath9-cost .",
    "we show that @xmath101 , there is a polynomial time @xmath102-approximation algorithm for the ( @xmath1 @xmath100 @xmath2 , @xmath3 ) problem .",
    "the transformation uses simple linear search in steps of @xmath103 over the range of values of the @xmath9-cost with an application of the given approximation algorithm , @xmath86 , at each step of this search .",
    "let the optimum value for the ( @xmath1 @xmath100 @xmath2 , @xmath3 ) problem on a graph @xmath45 be @xmath104 , where @xmath105 and @xmath106 denote respectively the contribution of the two costs @xmath9 and @xmath10 for @xmath1 and @xmath2 .",
    "let @xmath107 ( @xmath108 ) denote the @xmath9-cost ( @xmath10-cost ) of the subgraph output by @xmath86@xmath87 .",
    "finally , let @xmath109 denote the value computed by algorithm convert .",
    "let @xmath86@xmath87 be any @xmath22-approximation algorithm for ( @xmath1 , @xmath2 , @xmath3 ) on graph @xmath45 with budget @xmath83 under the @xmath9-cost .",
    "then , for all @xmath33 , there is a polynomial time @xmath110-approximation algorithm for the ( @xmath1 @xmath100 @xmath2 , @xmath3 ) problem .",
    "* proof sketch : * consider the iteration of the binary search in which the bound on the @xmath9-cost is @xmath111 such that @xmath112 .",
    "notice that such a bound is considered as a result of discretization of the interval @xmath113 $ ] .",
    "then as a consequence of the performance guarantee of the approximation algorithm @xmath86 , we get that @xmath114 by step [ stepa ] , the performance guarantee of the algorithm @xmath86 , and the hostility of @xmath1 and @xmath2 , we have that @xmath115 .",
    "thus @xmath116 .",
    "since algorithm convert outputs a subgraph from  @xmath3 the sum of whose @xmath9-cost and @xmath10-cost is minimized , we have that @xmath117 } \\left ( heu_c({\\cal c } ' ) + heu_d({\\cal c } ' ) \\right )   \\leq ( 1 + \\epsilon ) \\max \\ { \\alpha,\\beta \\ } ( opt_{c + d}).\\ ] ]    a similar argument shows that an @xmath22-approximation algorithm @xmath86@xmath87 , for a ( @xmath1 , @xmath2 , @xmath3 ) problem can be used to find devise a polynomial time @xmath118 approximation algorithm for the ( @xmath1 @xmath119 @xmath2 , @xmath3 ) problem .",
    "a similar argument can also be given for other basic functional combinations .",
    "we make two additional remarks .",
    "1 .   algorithms for solving ( @xmath54(@xmath1 , @xmath2 ) , @xmath3 ) problems can not in general guarantee any bounded performance ratios for solving the ( @xmath1 , @xmath2 , @xmath3 ) problem .",
    "for example , a solution for the ( total cost + total cost , spanning tree ) problem or the ( total cost / total cost , spanning tree ) problem can not be directly used to find a good @xmath22-approximation algorithm for the ( total cost , total cost , spanning tree)-bicriteria problem .",
    "2 .   the use of approximation algorithms for ( @xmath1 , @xmath2 , @xmath3)-bicriteria problems , to solve ( @xmath54(@xmath1 , @xmath2 ) , @xmath3 ) problems ( @xmath54 denotes a function combination of the objectives ) does not always yield the best possible solutions . for example problems such as ( total cost + total cost , spanning tree ) and ( total cost / total cost , spanning tree )",
    "@xcite can be solved exactly in polynomial time by direct methods but can only be solved approximately using any algorithm for the ( total cost , total cost , spanning tree)-bicriteria problem .    * * * * the above discussion points out that while a good solution to the ( @xmath1 , @xmath2 , @xmath3)-bicriteria problem yields a `` good '' solution to any unicriterion version , the converse is not true .",
    "it is in this sense that we say our formulation of bicriteria network design problems is general and subsumes other functional combinations . *",
    "* * * * * * * * *",
    "in this section , we present approximation algorithms for a broad class of bicriteria problems where both the objectives in the problem are of the same type ( e.g. , both are total edge costs of some network computed using two different costs on edges , or both are diameters of some network calculated using two different costs etc . ) .    as",
    "before , let @xmath45 be a graph with two ( integral ) cost functions , @xmath9 and @xmath10 .",
    "let @xmath83 denote the budget on criteria @xmath1 .",
    "we assume that the @xmath9 and @xmath10 cost functions are of the same kind ; i.e. , they are both costs on edges or , costs on nodes .",
    "let @xmath120@xmath121 be any @xmath20-approximation algorithm that on input @xmath45 produces a solution subgraph in @xmath3 minimizing criterion @xmath1 , under the single cost function @xmath54 . in a mild abuse of notation",
    ", we also let @xmath120@xmath121 denote the ( @xmath54-)cost of the subgraph output by @xmath120@xmath121 when running on input @xmath45 under cost function @xmath54 .",
    "we use the following additional notation in the description of the algorithm and the proof of its performance guarantee . given constants @xmath122 and @xmath123 and two cost functions @xmath54 and @xmath55 , defined on edges ( nodes ) of a graph",
    ", @xmath124 denotes the composite function that assigns a cost @xmath125 to each edge ( node ) in the graph .",
    "let @xmath126 denote the cost of the subgraph , returned by @xmath120@xmath127 ( under the @xmath128-cost function ) .",
    "let the minimum @xmath10-cost of a @xmath83-bounded subgraph in @xmath3 be @xmath129 .",
    "let @xmath92 ( @xmath93 ) denote the @xmath9-cost ( @xmath10-cost ) of the subgraph output by algorithm parametric - search given below .",
    "let @xmath26 be a fixed accuracy parameter .",
    "in what follows , we devise a @xmath130-approximation algorithm for ( @xmath1 , @xmath1 , @xmath3 ) , under the two cost functions @xmath9 and @xmath10 .",
    "the algorithm consists of performing a binary search with an application of the given approximation algorithm , @xmath120 , at each step of this search .",
    "[ binsearch - justify ] the binary search , in step [ psbinsearch - step ] of algorithm parametric - search is well - defined .",
    "since @xmath131@xmath120@xmath132 is the same as @xmath120@xmath133 , we get that @xmath134 @xmath135 @xmath120@xmath136 @xmath120@xmath137 .",
    "hence @xmath138 is a monotone nonincreasing function of @xmath139 .",
    "thus the binary search in step [ psbinsearch - step ] of algorithm parametric - search is well - defined .",
    "if @xmath45 contains a @xmath83-bounded subgraph in @xmath3 then algorithm parametric - search outputs a subgraph from  @xmath3 whose @xmath10-cost is at most @xmath140 times that of the minimum @xmath10-cost @xmath83-bounded subgraph and whose @xmath9-cost is at most @xmath141 .    by claim [ binsearch - justify ]",
    "we have that the binary search in step [ psbinsearch - step ] of algorithm parametric - search is well - defined .",
    "assume that @xmath3 contains a @xmath83-bounded subgraph .",
    "then , since @xmath120@xmath142 returns a subgraph with cost at most @xmath143 , under the @xmath144-cost function , it is clear that algorithm parametric - search outputs a subgraph in this case .    as a consequence of step [ psstep1 ] and the performance guarantee of the approximation algorithm @xmath120",
    ", we get that @xmath145 by step [ psstep2 ] we have that the subgraph output by algorithm parametric - search has the following bounds on the @xmath9-costs and the @xmath10-costs",
    ".    @xmath146 @xmath147    thus algorithm parametric - search outputs a subgraph from  @xmath3 whose @xmath10-cost is at most @xmath140 times that of the minimum @xmath10-cost @xmath83-bounded subgraph and whose @xmath9-cost is at most @xmath148 .",
    "note however that the resulting @xmath149-approximation algorithm for ( @xmath1 , @xmath1 , @xmath3 ) may not be _ strongly _ polynomial since it depends on the range of the @xmath10-costs .",
    "but it is a _ polynomial - time _",
    "algorithm since its running time is linearly dependent on @xmath150 .",
    "note that @xmath151 is at most some polynomial in @xmath25 times the maximum @xmath10-cost ( of an edge or a node ) .",
    "hence @xmath152 is at most a polynomial in terms of the input specification .",
    "the above discussion leads to the following theorem .",
    "[ better - scale - thm ] any @xmath20-approximation algorithm that produces a solution subgraph in @xmath3 minimizing criterion @xmath1 can be transformed into a @xmath149-approximation algorithm for ( @xmath1,@xmath1,@xmath3 ) .",
    "the above theorem can be generalized from  the bicriteria case to the multicriteria case ( with appropriate worsening of the performance guarantees ) where all the objectives are of the same type but with different cost functions .",
    "in this section , we describe algorithm dcst , our @xmath153-approximation algorithm for ( diameter , total cost , steiner tree ) or the diameter - bounded minimum steiner tree problem .",
    "note that ( diameter , total cost , steiner tree ) includes ( diameter , total cost , spanning tree ) as a special case .",
    "we first state the problem formally : given an undirected graph @xmath4 , with two cost functions @xmath9 and @xmath10 defined on the set of edges , diameter bound @xmath70 and terminal set @xmath154 , the ( diameter , total cost , steiner tree ) problem is to find a tree of minimum @xmath9-cost connecting the set of terminals in @xmath155 with diameter at most @xmath70 under the @xmath10-cost .",
    "the technique underlying algorithm dcst is very general and has wide applicability .",
    "hence , we first give a brief synopsis of it .",
    "the basic algorithm works in @xmath156 phases ( iterations ) .",
    "initially the solution consists of the empty set . during each phase of the algorithm",
    "we execute a subroutine @xmath157 to choose a subgraph to add to the solution .",
    "the subgraph chosen in each iteration is required to possess two desirable properties .",
    "first , it must not increase the budget value of the solution by more than @xmath70 ; second , the solution cost with respect to @xmath2 must be no more than @xmath89 , where @xmath89 denotes the minimum @xmath9-cost of a @xmath8 bounded subgraph in * s*. since the number of iterations of the algorithm is @xmath13 we get a @xmath158-approximation algorithm .",
    "the basic technique is fairly straightforward .",
    "the non - trivial part is to devise the right subroutine @xmath157 to be executed in each phase .",
    "@xmath157 must be chosen so as to be able to prove the required performance guarantee of the solution .",
    "we use the solution based decomposition technique @xcite in the analysis of our algorithm .",
    "the basic idea ( behind the solution based decomposition technique ) is to use the existence of an optimal solution to prove that the subroutine @xmath157 finds the desired subgraph in each phase .",
    "we now present the specifics of algorithm dcst .",
    "the algorithm maintains a set of connected subgraphs or _",
    "clusters _ each with its own distinguished vertex or _ center_.",
    "initially each terminal is in a cluster by itself . in each phase , clusters are merged in pairs by adding paths between their centers . since the number of clusters comes down by a factor of @xmath39 each phase , the algorithm terminates in @xmath159 phases with one cluster .",
    "it outputs a spanning tree of the final cluster as the solution .",
    "we make a few points about algorithm dcst :    1 .",
    "the clusters formed in step [ dcst - match ] need not be disjoint .",
    "2 .   all steps , except step [ dcst - paths ] , in algorithm dcst can be easily seen to have running times independent of the weights . we employ hassin s strongly polynomial @xmath18 for step [ dcst - paths ] @xcite .",
    "hassin s approximation algorithm for the @xmath70-bounded minimum @xmath9-cost path runs in time @xmath160 .",
    "thus algorithm dcst is a strongly polynomial time algorithm .",
    "3 .   instead of finding an exact minimum cost matching in step [ dcst - minwtmatching ]",
    ", we could find an approximate minimum cost matching @xcite .",
    "this would reduce the running time of the algorithm at the cost of introducing a factor of @xmath39 to the performance guarantee .",
    "we now state some observations that lead to a proof of the performance guarantee of algorithm dcst .",
    "assume , in what follows , that @xmath45 contains a diameter @xmath70-bounded steiner tree .",
    "we also refer to each iteration of step [ dcst - repeat ] as a phase .",
    "[ log - lemma ] algorithm dcst terminates in @xmath159 phases",
    ".    let @xmath161 denote the number of clusters in phase @xmath84 .",
    "note that @xmath162 since we pair up the clusters ( using a matching in step [ dcst - match ] ) .",
    "hence we are left with one cluster after phase @xmath159 and algorithm dcst terminates .",
    "the next claim points out as clusters get merged , the nodes within each cluster are not too far away ( with respect to @xmath10-distance ) from the center of the cluster .",
    "this intuitively holds for the following important reasons .",
    "first , during each phase , the graph @xmath163 has as its vertices , the centers of the clusters in that iteration . as a result",
    ", we merge the clusters by joining their centers in step [ dcst - match ] .",
    "second , in step [ dcst - match ] , for each pair of clusters @xmath164 and @xmath165 that are merged , we select one of their centers , @xmath166 or @xmath167 as the center @xmath168 for the merged cluster @xmath169 .",
    "this allows us to inductively maintain two properties : ( i ) the required distance of the nodes in a cluster to their centers in an iteration @xmath84 is @xmath170 and ( ii ) the center of a cluster at any given iteration is a terminal node .",
    "[ claim : radius ] let @xmath171 be any cluster in phase @xmath84 of algorithm dcst .",
    "let @xmath172 be the center of @xmath173 .",
    "then any node @xmath174 in @xmath173 is reachable from  @xmath172 by a diameter-@xmath170 path in @xmath173 under the @xmath10-cost .",
    "note that the existence of a diameter @xmath70-bounded steiner tree implies that all paths added in step [ dcst - match ] have diameter at most @xmath70 under @xmath10-cost .",
    "the proof now follows in a straightforward fashion by induction on @xmath84 .",
    "[ dcostlemma ] algorithm dcst outputs a steiner tree with diameter at most @xmath175 under the @xmath10-cost .",
    "the proof follows from  claims [ log - lemma ] and [ claim : radius ] .",
    "this completes the proof of performance guarantee with respect to the @xmath10-cost .",
    "we now proceed to prove the performance guarantee with respect to the @xmath9-costs .",
    "we first recall the following pairing lemma .",
    "@xcite [ pairing - claim ] let @xmath59 be an edge - weighted tree with an even number of marked nodes .",
    "then there is a pairing @xmath176 , @xmath177 , @xmath178 of the marked nodes such that the @xmath179 paths in @xmath59 are edge - disjoint .",
    "* * * * *    a pairing of the marked nodes that minimizes the sum of the lengths of the tree - paths between the nodes paired up can be seen to obey the property in the claim above .",
    "* * * * * * * * * * * * *    [ cost - lemma ] let @xmath180 be any minimum @xmath9-cost diameter-@xmath70 bounded steiner tree and let @xmath89 denote its @xmath9-cost .",
    "the weight of the largest cardinality minimum - weight matching found in step [ dcst - match ] in each phase @xmath84 of algorithm dcst is at most @xmath181 .",
    "consider phase @xmath84 of algorithm dcst .",
    "note that since the centers at stage @xmath84 are a subset of the nodes in the first iteration , the centers @xmath51 are terminal nodes .",
    "thus they belong to @xmath180 .",
    "mark those vertices in @xmath180 that correspond to the matched vertices , @xmath182 , of @xmath163 in step [ dcst - minwtmatching ] .",
    "then by claim [ pairing - claim ] there exists a pairing of the marked vertices , say @xmath183 , and a set of edge - disjoint paths in opt between these pairs .",
    "since these paths are edge - disjoint their total @xmath9-cost is at most @xmath89 .",
    "further these paths have diameter at most @xmath70 under the @xmath10-cost .",
    "hence the sum of the weights of the edges @xmath184 in @xmath163 , which forms a perfect matching on the set of matched vertices , is at most @xmath185 .",
    "but in step [ dcst - minwtmatching ] of algorithm dcst , a minimum weight perfect matching in the graph @xmath163 was found .",
    "hence the weight of the matching found in step [ dcst - match ] in phase @xmath84 of algorithm dcst is at most @xmath186 .",
    "[ ccostlemma ] let @xmath180 be any minimum @xmath9-cost diameter-@xmath70 bounded steiner tree and let @xmath89 denote its @xmath9-cost .",
    "algorithm dcst outputs a steiner tree with total @xmath9-cost at most @xmath187 .",
    "from  claim [ cost - lemma ] we have that the @xmath9-cost of the set of paths added in step [ dcst - match ] of any phase is at most @xmath188 . by claim [ log - lemma ] there are a total of @xmath159 phases and hence the steiner tree output by algorithm dcst has total @xmath9-cost at most @xmath189 .    from  lemmas [ dcostlemma ] and [ ccostlemma ] we have the following theorem .    [ spanning - thm ] there is a strongly polynomial - time algorithm that , given an undirected graph @xmath4 , with two cost functions @xmath9 and @xmath10 defined on the set of edges , diameter bound @xmath70 , terminal set @xmath190 and a fixed @xmath33 , constructs a steiner tree of @xmath45 of diameter at most @xmath191 under the @xmath10-costs and of total @xmath9-cost at most @xmath192 times that of the minimum-@xmath9-cost of any steiner tree with diameter at most @xmath70 under @xmath10 .",
    "in this section we consider the class of treewidth - bounded graphs and give algorithms with improved time bounds and performance guarantees for several bicriteria problems mentioned earlier .",
    "we do this in two steps .",
    "first we develop pseudopolynomial - time algorithms based on dynamic programming .",
    "we then present a general method for deriving fully polynomial - time approximation schemes ( @xmath18 ) from  the pseudopolynomial - time algorithms .",
    "we also demonstrate an application of the above results to the minimum broadcast time problem .    a class of treewidth - bounded graphs can be specified using a finite number of primitive graphs and a finite collection of binary composition rules .",
    "we use this characterization for proving our results . a class of treewidth - bounded graphs @xmath193 is inductively defined as follows @xcite .    1",
    "the number of primitive graphs in @xmath193 is finite .",
    "each graph in @xmath193 has an ordered set of special nodes called * terminals*. the number of terminals in each graph is bounded by a constant , say @xmath31 .",
    "3 .   there is a finite collection of binary composition rules that operate only at terminals , either by identifying two terminals or adding an edge between terminals .",
    "a composition rule also determines the terminals of the resulting graph , which must be a subset of the terminals of the two graphs being composed .",
    "[ decomp - thm ] every problem in table 2 can be solved exactly in @xmath194-time for any class of treewidth bounded graphs with no more than @xmath31 terminals , for fixed @xmath31 and a budget @xmath83 on the first objective .",
    "the above theorem states that there exist pseudopolynomial - time algorithms for all the bicriteria problems from  table 2 when restricted to the class of treewidth - bounded graphs .",
    "the basic idea is to employ a dynamic programming strategy .",
    "in fact , this dynamic programming strategy ( in conjunction with theorem [ equiv - thm ] ) yields polynomial - time ( not just pseudopolynomial - time ) algorithms whenever one of the criteria is the degree .",
    "we illustrate this strategy by presenting in some detail the algorithm for the diameter - bounded minimum cost spanning tree problem .",
    "[ thm : dmsttwdth ] for any class of treewidth - bounded graphs with no more than @xmath31 terminals , there is an @xmath195-time algorithm for solving the diameter @xmath8-bounded minimum @xmath9-cost spanning tree problem .",
    "let @xmath10 be the cost function on the edges for the first objective ( diameter ) and @xmath9 , the cost function for the second objective ( total cost ) .",
    "let @xmath193 be any class of decomposable graphs .",
    "let the maximum number of terminals associated with any graph @xmath45 in @xmath193 be @xmath31 .",
    "following @xcite , it is assumed that a given graph @xmath45 is accompanied by a parse tree specifying how @xmath45 is constructed using the rules and that the size of the parse tree is linear in the number of nodes .",
    "let @xmath196 be a partition of the terminals of @xmath45 .",
    "for every terminal @xmath84 let @xmath197 be a number in @xmath198 . for every pair of terminals",
    "@xmath84 and @xmath199 in the same block of the partition @xmath196 let @xmath200 be a number in @xmath201 .",
    "corresponding to every partition @xmath196 , set @xmath202 and set @xmath203 we associate a cost for @xmath45 defined as follows : +    @xmath204 = minimum total cost under the @xmath9 function of any forest containing + a tree for each block of @xmath196 , such that the terminal nodes + occurring in each tree are exactly the members of the corresponding + block of @xmath196 , no pair of trees is connected , every vertex in @xmath45 + appears in exactly one tree , @xmath197 is an upper bound on the maximum + distance ( under the @xmath10-function ) from  @xmath84 to any vertex in the same + tree and @xmath200 is an upper bound the distance ( under the @xmath10-function ) + between terminals @xmath84 and @xmath199 in their tree .    for the above defined cost",
    ", if there is no forest satisfying the required conditions the value of @xmath205 is defined to be @xmath206 .",
    "note that the number of cost values associated with any graph in @xmath193 is @xmath207 .",
    "we now show how the cost values can be computed in a bottom - up manner given the parse tree for @xmath45 . to begin with ,",
    "since @xmath193 is fixed , the number of primitive graphs is finite . for a primitive graph ,",
    "each cost value can be computed in constant time , since the number of forests to be examined is fixed .",
    "now consider computing the cost values for a graph @xmath45 constructed from  subgraphs @xmath208 and @xmath209 , where the cost values for @xmath208 and @xmath209 have already been computed .",
    "notice that any forest realizing a particular cost value for @xmath45 decomposes into two forests , one for @xmath208 and one for @xmath209 with some cost values .",
    "since we have maintained the best cost values for all possibilities for @xmath208 and @xmath209 , we can reconstruct for each partition of the terminals of @xmath45 the forest that has minimum cost value among all the forests for this partition obeying the diameter constraints .",
    "we can do this in time independent of the sizes of @xmath208 and @xmath209 because they interact only at the terminals to form @xmath45 , and we have maintained all relevant information .    hence we can generate all possible cost values for @xmath45 by considering combinations of all relevant pairs of cost values for @xmath208 and @xmath209 .",
    "this takes time @xmath210 per combination for a total time of @xmath211 . as in @xcite",
    ", we assume that the size of the given parse tree for @xmath45 is @xmath212 .",
    "thus the dynamic programming algorithm takes time @xmath213 .",
    "this completes the proof .",
    "the pseudopolynomial - time algorithms described in the previous section can be used to design fully polynomial - time approximation schemes ( @xmath18 ) for these same problems for the class of treewidth - bounded graphs .",
    "we illustrate our ideas once again by devising an @xmath18 for the ( diameter , total cost , spanning tree)-bicriteria problem for the class of treewidth - bounded graphs .",
    "the basic technique underlying our algorithm , algorithm fpas - dcst , is approximate binary search using rounding and scaling - a method similar to that used by hassin @xcite and warburton @xcite .    as in the previous subsection ,",
    "let @xmath45 be a treewidth - bounded graph with two ( integral ) edge - cost functions @xmath9 and @xmath10 .",
    "let @xmath70 be a bound on the diameter under the @xmath10-cost .",
    "let @xmath36 be an accuracy parameter .",
    "without loss of generality we assume that @xmath214 is an integer .",
    "we also assume that there exists a @xmath70-bounded spanning tree in @xmath45 .",
    "let @xmath180 be any minimum @xmath9-cost diameter @xmath70-bounded spanning tree and let @xmath89 denote its @xmath9-cost .",
    "let @xmath215@xmath216 be a pseudopolynomial time algorithm for the ( total cost , diameter , spanning tree ) problem on treewidth - bounded graphs ; i.e. , @xmath215 outputs a minimum diameter spanning tree of @xmath45 with total cost at most @xmath173 ( under the @xmath9-costs ) .",
    "let the running time of @xmath215 be @xmath217 for some polynomial @xmath218 . for carrying out our approximate binary search we need a testing procedure procedure test(v ) which we detail below",
    ":    we now prove that procedure test(@xmath219 ) has the properties we need to do a binary search .",
    "[ claim : testerhilo ] if @xmath220 then procedure test(@xmath219 ) outputs low . and , if @xmath221 then procedure test(@xmath219 ) outputs high .",
    "if @xmath222 then since @xmath223 therefore procedure test(@xmath224 outputs low .",
    "let @xmath225 be the @xmath9-cost of any diameter @xmath70 bounded spanning tree .",
    "then we have @xmath226 . if @xmath221 then since @xmath227 therefore procedure test(@xmath219 ) outputs high .",
    "[ claim : testerpoly ] the running time of procedure test(@xmath219 ) is @xmath228 .",
    "procedure test(@xmath219 ) invokes @xmath215 only @xmath229 times . and",
    "each time the budget @xmath173 is bounded by @xmath229 , hence the running time of procedure test(@xmath219 ) is @xmath228 .",
    "we are ready to describe algorithm fpas - dcst - which uses procedure test(@xmath219 ) to do an approximate binary search .",
    "[ correct ] if @xmath45 contains a @xmath70-bounded spanning tree then algorithm fpas - dcst outputs a spanning tree with diameter at most @xmath70 under the @xmath10-cost and with @xmath9-cost at most @xmath230 .",
    "it follows easily from  claim [ claim : testerhilo ] that the loop in step [ fpas - stepbound ] of algorithm fpas - dcst executes @xmath231 times before exiting with @xmath232 .    since @xmath233",
    "we get that step [ fpas - stepout ] of algorithm fpas - dcst definitely outputs a spanning tree . let @xmath234 be the tree output .",
    "then we have that @xmath235 but since step [ fpas - stepout ] of algorithm fpas - dcst outputs the spanning tree with minimum @xmath9-cost we have that @xmath236 therefore @xmath237 this proves the claim .",
    "[ runtime ] the running time of algorithm fpas - dcst is @xmath238 .",
    "from  claim [ claim : testerpoly ] we see that step   [ fpas - stepbound ] of algorithm fpas - dcst takes time @xmath238 while step [ fpas - stepout ] takes time @xmath239 .",
    "hence the running time of algorithm fpas - dcst is @xmath238 .",
    "lemmas [ runtime ] and [ correct ] yield :    for the class of treewidth - bounded graphs , there is an @xmath18 for the ( diameter , total cost , spanning tree)-bicriteria problem with performance guarantee @xmath240 .",
    "as mentioned before , similar theorems hold for the other problems in table 2 and all these results extend directly to steiner trees .      the polynomial - time algorithm for the ( degree , diameter , spanning tree)-bicriteria problem for treewidth - bounded graphs",
    "can be used in conjunction with the ideas presented in @xcite to obtain near - optimal broadcast schemes for the class of treewidth - bounded graphs .",
    "as mentioned earlier , these results generalize and improve the results of kortsarz and peleg @xcite .    given an unweighted graph @xmath45 and a root @xmath241 , a _ broadcast scheme _ is a method for communicating a message from  @xmath241 to all the nodes of @xmath45 .",
    "we consider a telephone model in which the messages are transmitted synchronously and at each time step , any node can either transmit or receive a message from  at most one of its neighbors .",
    "minimum broadcast time problem _ is to compute a scheme that completes in the minimum number of time steps .",
    "let @xmath242 denote the minimum broadcast time from  root @xmath241 and let @xmath243 denote the minimum broadcast time for the graph from  any root .",
    "the problem of computing @xmath242 - the _ minimum rooted broadcast time problem _ - and that of computing @xmath244 - the _ minimum broadcast time problem _ are both @xmath0-complete for general graphs @xcite .",
    "it is easy to see that any approximation algorithm for the minimum rooted broadcast time problem automatically yields an approximation algorithm for the minimum broadcast time problem with the same performance guarantee .",
    "we refer the readers to @xcite for more details on this problem . combining our approximation algorithm for ( diameter ,",
    "total cost , spanning tree)-bicriteria problem with performance guarantee @xmath240 for the class of treewidth bounded graphs with the observations in @xcite yields the following theorem .",
    "* * * * * * * * * let @xmath245 denote the set of all spanning trees of graph @xmath45",
    ". for spanning tree @xmath246 let @xmath247 denote the maximum , over all nodes , of the degree of the node in @xmath59 .",
    "let the @xmath241-eccentricity of @xmath59 , @xmath248 , denote the maximum , over all nodes , of the distance of the node from  @xmath241 in @xmath59 .",
    "we generalize the definition of the _ poise _ of a graph from  @xcite to that of the _ rooted poise _ of a graph : @xmath249    [ th : poise_log ] @xcite @xmath250    the proof of this theorem is constructive and implies that a good solution to the rooted poise of a graph can be used to construct a good solution for the minimum rooted broadcast time problem with an @xmath251-factor overhead .    [",
    "th : poise_approx ] given a treewidth bounded graph @xmath45 and root @xmath241 , in polynomial time a spanning tree @xmath59 can be found such that @xmath252 .    since @xmath45 is an unweighted treewidth - bounded graph we can obtain a ( strongly ) polynomial - time algorithm to solve the ( degree , @xmath241-eccentricity , spanning tree)-bicriteria problem on @xmath45 , using the ideas outlined in subsection [ exact - algos ] .",
    "run this algorithm with all possible degree bounds and choose the tree @xmath59 with the least value of @xmath253 .    from  theorem",
    "[ th : poise_log ] and lemma [ th : poise_approx ] we get the following theorem    * * * * * * * * * * * * *    [ th : broadcast ] for any class of treewidth - bounded graphs there is a polynomial - time @xmath254-approximation algorithm for the minimum rooted broadcast time problem and the minimum broadcast time problem .",
    "we have obtained the first polynomial - time approximation algorithms for a large class of bicriteria network design problems . the objective function we considered were ( i ) degree , ( ii ) diameter and ( iii ) total cost .",
    "the connectivity requirements considered were spanning trees , steiner trees and ( in several cases ) generalized steiner trees .",
    "our results were based on the following three ideas :    1 .   a binary search method to convert an @xmath255-approximation algorithm for ( @xmath1 , @xmath2 , @xmath3)-bicriteria problems to a @xmath256-approximation algorithm for ( @xmath2 , @xmath1 , @xmath3)-bicriteria problems .",
    "2 .   a parametric search technique to devise approximation algorithms for ( @xmath1,@xmath1,@xmath3)-bicriteria problems .",
    "we note that theorem [ better - scale - thm ] is very general .",
    "given _ any _ @xmath20-approximation algorithm for minimizing the objective @xmath1 in the subgraph - class @xmath3 , theorem [ better - scale - thm ] allows us to produce a @xmath257-approximation algorithm for the ( @xmath1 , @xmath1 , @xmath3)-bicriteria problem .",
    "3 .   a cluster based approach for devising approximation algorithms for certain categories of ( @xmath1,@xmath2,@xmath3)-bicriteria problems .        during the time when this paper was under review",
    ", important progress has been made in improving some of the results in this paper .",
    "recently , ravi and goemans @xcite have devised a @xmath37 approximation scheme for the ( total cost , total cost , spanning tree ) problem .",
    "their approach does not seem to extend to devising approximation algorithms for more general subgraphs considered here . in @xcite , kortsarz and peleg consider the ( diameter , total cost , steiner tree ) problem .",
    "they provide polynomial time approximation algorithms for this problem with performance guarantees @xmath258 for constant diameter bound @xmath70 and @xmath259 for any fixed @xmath260 for general diameter bounds . in @xcite , naor and schieber provide an elegant @xmath258 approximation algorithm for the ( diameter , total cost , spanning tree ) problem .",
    "it is not clear how to extend their algorithms to the steiner tree case . improving the performance guarantees for one or more of the problems considered here",
    "remains an interesting direction for future research .      1 .",
    "devise algorithms that improve upon the performance guarantees presented in this paper . as a step in this direction ,",
    "recently ravi and goemans @xcite have devised a @xmath37 approximation scheme for the ( total cost , total cost , spanning tree ) problem .",
    "2 .   devise approximation algorithms for the ( diameter , total cost , generalized steiner tree ) problem . for more information on the generalized steiner tree problem",
    "look at @xcite and the references therein .",
    "find good broadcast schemes which minimize the total cost of the spanning tree . in our language",
    "this problem translates to finding an approximation algorithm for the ( degree , diameter , total cost , spanning tree ) problem .",
    "* acknowledgements : * we would like to thank an anonymous referee for several useful comments and suggestions .",
    "we thank sven krumke ( university of wrzberg ) for reading the paper carefully and providing several useful comments . in particular , both pointed an error in the original proof of theorem 5.3 .",
    "we thank professors s. arnborg and h.  l. bodlaender for pointing out to us the equivalence between treewidth bounded graphs and decomposable graphs .",
    "we thank a. ramesh for bringing @xcite to our attention .",
    "we also thank dr . v. kompella for making his other papers available to us .",
    "finally , we thank the referees of _",
    "icalp 95 _ for their constructive comments and suggestions .                          *",
    "* * a. blum , r. ravi and s. vempala , `` a constant - factor approximation algorithm for the @xmath31-mst problem , '' to appear in the _ proceedings of the 28th annual acm symposium on the theory of computation _ ( 1996 ) . * * * *                  * * * * * * * * * * * * * m. frer and b. raghavachari , `` an @xmath262 approximation algorithm for the minimum degree spanning tree problem , '' _ proceedings of the 28th annual allerton conference on communication , control and computing _ , pp .",
    "274 - 281 ( 1990 ) .",
    "* * * * * * * * * *    j. l. ganley , m. j. golin and j. s. salowe , `` the multi - weighted spanning tree problem , '' _ proceedings of the first conference on combinatorics and computing ( cocoon ) _ , springer verlag , lncs pp .",
    "141 - 150 ( 1995 ) .",
    "* * * m. x. goemans , a. v. goldberg , s. plotkin , d. b. shmoys , e. tardos and d. p. williamson , `` improved approximation algorithms for network design problems , '' _ proceedings of the fifth annual acm - siam symposium on discrete algorithms _",
    "223 - 232 ( 1994 ) .",
    "* * * * * * * * * * *                          * * * v.p .",
    "kompella , j.c .",
    "pasquale and g.c .",
    "polyzos , `` two distributed algorithms for the constrained steiner tree problem , '' technical report cal-1005 - 92 , computer systems laboratory , university of california , san diego ( oct . 1992 ) . * * * * * * *                        r. ravi , m. v. marathe , s. s. ravi , d. j. rosenkrantz , and h.b . hunt iii , `` many birds with one stone : multi - objective approximation algorithms , '' _ proceedings of the 25th annual acm symposium on the theory of computing _ , pp .",
    "438 - 447 ( 1993 ) .",
    "( expanded version appears as brown university technical report tr - cs-92 - 58 . )",
    "r. raz and s. safra , `` a sub - constant error - probability low - degree test , and a sub - constant error - probability pcp characterization of np , '' _ proc .",
    "29th annual acm symposium on theory of computing _",
    ", 475 - 484 ( 1997 ) .    *",
    "* * r. ravi , r. sundaram , m. v. marathe , d. j. rosenkrantz , and s. s. ravi , `` spanning trees short or small , '' in _ proceedings of the 5th annual acm - siam symposium on discrete algorithms _ ,",
    "546 - 555 ( 1994 ) .",
    "journal version to appear in _ siam journal on discrete mathematics_."
  ],
  "abstract_text": [
    "<S> we study a general class of bicriteria network design problems . </S>",
    "<S> a generic problem in this class is as follows : given an undirected graph and two minimization objectives ( under different cost functions ) , with a budget specified on the first , find a < subgraph from  a given subgraph - class that minimizes the second objective subject to the budget on the first . </S>",
    "<S> we consider three different criteria - the total edge cost , the diameter and the maximum degree of the network . here , we present the first polynomial - time approximation algorithms for a large class of bicriteria network design problems for the above mentioned criteria . </S>",
    "<S> the following general types of results are presented .    </S>",
    "<S> first , we develop a framework for bicriteria problems and their approximations . </S>",
    "<S> second , when the two criteria are the same we present a `` black box '' parametric search technique . </S>",
    "<S> this black box takes in as input an ( approximation ) algorithm for the unicriterion situation and generates an approximation algorithm for the bicriteria case with only a constant factor loss in the performance guarantee . </S>",
    "<S> third , when the two criteria are the diameter and the total edge costs we use a cluster - based approach to devise a approximation algorithms  the solutions output violate both the criteria by a logarithmic factor . </S>",
    "<S> finally , for the class of treewidth - bounded graphs , we provide pseudopolynomial - time algorithms for a number of bicriteria problems using dynamic programming . </S>",
    "<S> we show how these pseudopolynomial - time algorithms can be converted to fully polynomial - time approximation schemes using a scaling technique .    * </S>",
    "<S> ams 1980 subject classification . </S>",
    "<S> * 68r10 , 68q15 , 68q25 + * keywords . * </S>",
    "<S> approximation algorithms , bicriteria problems , spanning trees , + network design , combinatorial algorithms . </S>",
    "<S> +    = 1.2 </S>"
  ]
}
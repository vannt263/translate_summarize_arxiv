{
  "article_text": [
    "in industry , drilling operations on pieces of material often increase the temperature of the component . in order to avoid overheating the material at any one point , the processing operation is split into multiple parts .",
    "this implies that nodes may need to be visited more than once .",
    "additionally , there may be a waiting time at some nodes to be able to continue processing .",
    "similar to @xcite , we translate the problem to a traveling salesman problem ( tsp ) variant , with multiple visits per node .",
    "the resulting problem is called the intermittent traveling salesman problem ( itsp ) , due to the required time between different visits of a node to avoid overheating .",
    "the tsp has been studied in depth in the field of combinatorial optimization @xcite , but several variants exist . to clearly distinguish the itsp from existing extensions",
    ", we briefly discuss the most similar problems .    * the tsp with multiple visits ( tspm ) @xcite : similar to the itsp each node has to be visited several times , but",
    "unlike in the itsp no time constraints exist between multiple visits . * the tsp with time windows ( tsptw ) @xcite : time windows within which the node has to be visited are associated to each node , but multiple visits are not required . * the inventory routing problem ( irp ) @xcite : in the irp , the goal is to find the best shipping policy to supply several retailers ( nodes ) with a common product subject to vehicle capacities , minimum required demand and limited storage capacity at the retailers .",
    "the major difference with the itsp lies in the effect of traveling time on inventory levels .",
    "whereas in the itsp the temperature at a node decreases during travel time , in the irp traveling routes compose one discrete period .    in the remainder of this paper , we first discuss the problem definition with different temperature profiles in section [ prob ] , before going into detail about the proposed metaheuristic approach in section [ meth ] .",
    "preliminary results for the temperature profiles and metaheuristic variations are the focus of section [ res ] , whereas we finish with a conclusion and future work in section [ concl ] .",
    "a network of nodes can be represented by an undirected graph @xmath0 , with @xmath1 the nodes or points and @xmath2 the arcs or routes between different points .",
    "each node @xmath3 ( @xmath4 ) has a processing time @xmath5 , and the distance between each pair of nodes @xmath6 is @xmath7 .",
    "it is explicitly assumed that @xmath8 and that the triangle inequality holds . due to the temperature constraint ( maximum temperature of @xmath9 at each node )",
    ", nodes may have to be visited more than once .",
    "the goal is to minimize the total completion time , i.e. the time at which all nodes have been fully processed and the `` salesman '' has returned to its starting node .",
    "the objective function value consists of the total processing time of each node , the distances of the selected routes between the nodes , and any waiting time required in case the temperature at a node is too high but we want to process anyway ( section [ meth ] ) . as a result , the corresponding tsp without temperature constraints serves as a lower bound for the itsp .    to model the temperature of a node @xmath3 at a time @xmath10",
    ", we use equations ( [ cons ] ) and ( [ temp ] ) .",
    "the first equation determines the number of consecutive time units that have been processed for node @xmath3 at time @xmath10 ( @xmath11 ) , based on @xmath12 which is a binary variable equal to one if node @xmath3 is processed at time @xmath10 and zero otherwise .",
    "if job @xmath3 is processed at time @xmath10 equation ( [ cons ] ) increases by one , whereas otherwise it decreases by one with a minimum value of zero for @xmath11 .",
    "@xmath13 is equal to zero for all nodes @xmath3",
    ".    @xmath14    equation ( [ temp ] ) sets the temperature @xmath15 of a node @xmath3 at time @xmath10 based on the corresponding value of @xmath11 . an increase function @xmath16 and a decrease function @xmath17 , which determine the rate at which the temperature changes , are also defined .",
    "we employ three variants for the temperature profile changes , namely a linear ( @xmath18 ) , a quadratic ( @xmath19 ) and an exponential ( @xmath20 ) function . in the linear variant",
    "the temperature increase or decrease is the same as the change in @xmath11 , namely it increases or decreases by 1 . for the quadratic case",
    "the temperature is the cube of the number of consecutively processed time units , and in case of the exponential function the base number @xmath21 is used with the time as exponent .",
    "@xmath22    allow us to illustrate the application of both functions with a simple example .",
    "assume that we have a node with a total processing time of 6 , a quadratic increase and decrease temperature function , and that the maximum temperature @xmath9 equals 16 .",
    "we start processing the job at time 3 and process for 3 time units until time 6 ( node temperature equal to 9 or @xmath23 ) , after which no processing occurs for 2 time units .",
    "we then process the remaining 3 time units until time 11 ( node temperature of 16 or @xmath24 ) .",
    "the resulting consecutive time units and temperature profiles are shown in figure [ fig1 ] .",
    "we can observe that the temperature is indeed a function of the number of consecutively processed time units , and that the temperature decreases when no processing occurs .",
    "based on the three possible temperature increase and decrease profiles , nine combinations exist . in the remainder of this manuscript",
    ", we assume that the same function is used for both the increase and decrease of the temperature , but in our presentation we will discuss combinations as well .",
    "in this section , we discuss our solution approach for the itsp .",
    "we propose to use three different applications of a genetic algorithm ( ga ) based on three different solution representations .",
    "we first go into detail about the representations , before giving an overview of the employed metaheuristic .",
    "the choice of solution representation is important since we not only have to determine the order in which the different nodes are visited , but also the amount of time processed for each visit .",
    "since , to the best of our knowledge , no previous research exists on the impact of solution representations for the itsp , we employ three different approaches in order to determine their impact on the solution quality .    1 .   a single list ( 1l ) representation consisting of a node list ( nl ) .",
    "the nl contains the node numbers in the order in which they are processed , but due to the nature of the itsp each node @xmath3 occurs @xmath25 times .",
    "this function determines the maximum required number of splits for each node , depending on @xmath5 , @xmath9 and the temperature increase function @xmath26 .",
    "the maximum required number of splits corresponds with a greedy approach since in this case we choose to always process as much as possible during a visit given the current node temperature . only for",
    "the final visit is waiting included if required .",
    "2 .   a two list ( 2l )",
    "representation with a nl and a processing time list ( ptl ) .",
    "the nl again contains the order in which the nodes are processed , but each node @xmath3 occurs @xmath5 times instead of just a single time .",
    "the ptl then holds the actual processing times at each occurrence of a node @xmath3 , with a total value over all occurrences equal to @xmath5 .",
    "ptl values may be equal to zero to signify that less than @xmath5 splits are used for node @xmath3 . as a result ,",
    "these visits without processing time may increase the total duration because of distances traveled .",
    "3 .   a three list ( 3l )",
    "representation with a nl , a ptl and a split list ( sl ) .",
    "the third list is the number of visits or splits for each node , and its value lies within the interval @xmath27 for each node @xmath3 .",
    "a value of 1 means that this node is only visited once for a duration of @xmath5 , whereas a value of @xmath5 implies as many visits each with a duration of 1 .",
    "the nl and ptl are similar as for the second representation , with the major difference that both lists are only as long as the sum of the job splits in the sl . as a result",
    ", the ptl does not contain any zero values . recall that in the second representation the ptl could have zero values and that both the nl and ptl sizes equal the sum of the job durations .",
    "it can be stated that the 3l representation constitutes a middle ground between the other two .",
    "it is less naive than the second one , since no unused visits with a processing time of zero are included .",
    "it does , however , allow for more and different splits than the greedy approach , by incorporating more information .      to illustrate the three representations , consider the example network in figure [ fig2 ] , with three jobs and a maximum temperature @xmath9 of 3 .",
    "we furthermore assume a linear temperature increase and decrease function for each job , which implies that for each job 3 time units can be processed consecutively without exceeding the maximum temperature .    1 .   with the single list we first calculate the number of splits based on the processing times and the maximum temperature .",
    "this results in 2 splits for job 1 , 2 for job 2 and 1 for job 3 .",
    "assume that we have nl equal to ( 2 , 1 , 3 , 1 , 2 ) .",
    "we process job 2 for a duration of 3 ( the maximum amount possible ) , then process job 1 for 3 time units as well , move on to job 3 for a duration of 2 , return to 1 for another 2 time units and finish with 3 time units for job 2 .",
    "the total duration is equal to the sum of the job durations , the distances traveled and any waiting time .",
    "the first equals 13 , the second 14 and the third 0 since no waiting times are needed . as a result ,",
    "the total duration is equal to 27 . 2 .",
    "for the two list representation , assume a nl of ( 1 , 1 , 2 , 2 , 2 , 1 , 3 , 3 , 2 , 2 , 1 , 1 , 2 ) and a ptl of ( 2 , 0 , 1 , 0 , 1 , 2 , 2 , 0 , 1 , 3 , 0 , 1 , 0 ) .",
    "consider that the length of both lists is equal to 13 , or to the sum of the individual job durations , that several zeros are included in the ptl , and that the sum of the corresponding visit durations equals @xmath5 for each job .",
    "the total duration is equal to 13 ( the total job duration , the same as before ) + 25 ( the total distance traveled , including returning to node 1 where the tour started ) + 0 ( the total waiting time ) = 38 . due to the increase in total distance the objective function for this nl and ptl combination is worse than for the greedy nl .",
    "3 .   in case of the three lists , we use the nl ( 1 , 2 , 1 , 2 , 3 , 2 ) , ptl ( 3 , 1 , 2 , 2 , 2 , 3 ) and sl ( 2 , 3 , 1 ) . each job is included as many times in the nl and ptl as the number of splits in the sl .",
    "the sum of the ptl values is again equal to @xmath5 for each of the three jobs .",
    "the total completion time equals 13 + 16 + 0 = 29 .",
    "in the example we have explicitly assumed linear temperature profiles , which in this case resulted in no waiting time for the given lists .",
    "however , if the profiles would increase and decrease in a quadratic manner , then only 1 time unit can be processed before a node has to cool down . in the 3l example",
    "this results in repeatedly processing 1 time unit and waiting for 1 time unit .",
    "for instance , the first visit to node 1 involves 3 time units of processing time , which results in a total time of 5 (= 3 x 1 processing , 2 x 1 waiting ) .",
    "the same logic applies for the other visits in the tour .",
    "hence , in the example the total duration increases from 29 to 36 due to 7 time units of waiting .          an overview of our ga can be found in figure [ figga ] .",
    "the population @xmath28 is initialized by generating @xmath29 random 1l , 2l or 3l respectively .",
    "this includes any relevant repair method and the evaluation of the solution value ( cf .",
    "the selection operator is the elite selection of @xcite , which selects one parent based on a four - tournament selection and the other one at random from the subset @xmath30 of best solutions in @xmath28 . in the population",
    "update the best @xmath31 elements of the previous generation are retained , and the rest is replaced by the best children .",
    "afterwards , the set @xmath30 is updated based on the new @xmath28 .",
    "it has been shown that due to the elite selection and population update , the ga contains elements of both scatter search and evolutionary path relinking @xcite . however , for the sake of simplicity we refer to the algorithm as a ga , although the more general term evolutionary algorithm ( ea ) would also be correct",
    ".    _ initialize _ population @xmath28 * repeat * _ select _ @xmath32 and @xmath33 from @xmath28 _ crossover * _ @xmath32 and @xmath33 @xmath34 @xmath35 and @xmath36 _ repair * _ @xmath35 and @xmath36 * for * each offspring @xmath37 * do * _ mutate * _ @xmath37 _ repair * _ @xmath37 _ evaluate * _ @xmath37 * end for * _ update _ @xmath28 : remove @xmath38 worst , add @xmath31 best offspring , update @xmath30 * until * stopping criterion met    the asterisks ( * ) indicate that the corresponding steps differ based on the solution representation used ( 1l , 2l or 3l ) , since these parts require different applications of some operators .",
    "we also distinguish between the three types of lists used ( nl , ptl and sl ) when discussing the operators with an * in more detail , since it are these lists which result in differences between the operators used .",
    "recall that 1l consists only of a nl , 2l of a nl and ptl , and 3l of a nl , ptl and sl . in table",
    "[ tabop ] an overview of the differences in terms of operators between the nl , ptl and sl is displayed , whereas table [ tabop2 ] shows the repair and solution evaluation employed for the three solution representations .",
    "* nl : we apply a one - point crossover and a two - activity swap as crossover and mutation operator with a mutation rate of @xmath39 respectively .",
    "no repair method is required , and the evaluation consists of processing as much as possible of a node during each visit . only the final visit to a node may include waiting time to ensure that the temperature constraint is not violated . *",
    "ptl : we again use a one - point crossover . consider that the nl and ptl always have the same length , so the same crossover point can be used for both lists .",
    "however , the ptl requires a repair method to ensure that for each job the sum of the corresponding ptl values equals @xmath5 . in case",
    "the sum is too large ( small ) , this repair method randomly decreases ( increases ) ptl values of the job @xmath3 until the condition is met . in terms of mutation",
    ", we have chosen a random change operator which randomly selects a different ptl value .",
    "the mutation rate @xmath40 is used for each job in the list , rather than for the ptl as a whole . also after the mutation",
    ", we have to apply the same repair method to ensure that the ptl is feasible .",
    "finally , in terms of solution evaluation we process the corresponding values in the ptl during each visit to a node .",
    "hence , waiting time is included if this is required based on the ptl value .",
    "* sl : the crossover operator is an adjusted version of the one - point crossover due to the different length of the sl on the one hand and the nl and ptl on the other hand , and uses a different crossover point .",
    "additionally , the crossover of nl and ptl takes the different lengths of the parents lists into account .",
    "the mutation of the sl is similar to that of the ptl ; a random change is applied to each job with a rate of @xmath41 .",
    "the use of a sl requires a second repair method to ensure that the number of splits of a job in the sl corresponds with the number of job occurrences in the other two lists .",
    "this method adjusts the nl and ptl by removing ( adding ) job occurrences in the nl and increasing ( decreasing ) values in the ptl at random . this way the total length of both lists corresponds with the sum of the sl values .",
    "the repair method is applied after both the crossover and the mutation .",
    "finally , the usage of a sl ( 3l representation ) has no effect on the evaluation of the solution , so the same ptl - based technique can be used as without a sl ( 2l representation ) .",
    "a second interesting research avenue concerns the shape of the temperature functions . in this manuscript",
    "we explicitly assumed that these functions were straightforward ( i.e. @xmath18 , @xmath19 and @xmath20 ) , which resulted in a clear distinction between them , since e.g. the linear function was never larger than the quadratic one for the same value of @xmath10 .",
    "however , employing functions such as @xmath42 ( increase ) and @xmath43 ( decrease ) would make it harder to determine how much should be best processed during a visit given the current node temperature .",
    "finally , we currently assume a uniform surface and density of the material ( section [ intro ] ) , where all the points or nodes are similar .",
    "it might prove interesting to investigate the impact of the shape and density of the material surface , and what the link might be with the temperature profiles .",
    "leyman and m.  vanhoucke , a new scheduling technique for the resource - constrained project scheduling problem with discounted cash flows , _ international journal of production research _",
    "53(9 ) : 2771 - 2786 , 2015 ."
  ],
  "abstract_text": [
    "<S> in this research , we discuss the intermittent traveling salesman problem ( itsp ) , which extends the traditional traveling salesman problem ( tsp ) by imposing temperature restrictions on each node . </S>",
    "<S> these additional constraints limit the maximum allowable visit time per node , and result in multiple visits for each node which can not be serviced in a single visit . </S>",
    "<S> we discuss three different temperature increase and decrease functions , namely a linear , a quadratic and an exponential function . to solve the problem </S>",
    "<S> , we consider three different solution representations as part of a metaheuristic approach . </S>",
    "<S> we argue that in case of similar temperature increase and decrease profiles , it is always beneficial to apply a greedy approach , i.e. to process as much as possible given the current node temperature . </S>"
  ]
}
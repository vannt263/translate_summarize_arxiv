{
  "article_text": [
    "the rapid expansion of the internet in the last two decades has produced a large - scale system of thousands of diverse , independently managed networks that collectively provide global connectivity across a wide spectrum of geopolitical environments . from 1997 to 2005",
    "the number of globally routable as identifiers has increased from less than 2,000 to more than 20,000 , exerting significant pressure on interdomain routing as well as other functional and structural parts of the internet .",
    "this impressive growth has resulted in a heterogenous and highly complex system that challenges accurate and realistic modeling of the internet infrastructure . in particular",
    ", the as - level topology is an intermix of networks owned and operated by many different organizations , e.g. , backbone providers , regional providers , access providers , universities and private companies .",
    "statistical information that faithfully characterizes different as types is on the critical path toward understanding the structure of the internet , as well as for modeling its topology and growth .    in topology modeling ,",
    "knowledge of as types is mandatory for augmenting synthetically constructed or measured as topologies with realistic intra - as and inter - as router - level topologies .",
    "for example , we expect the network of a dual - homed university to be drastically different from that of a dual - homed small company",
    ". the university will likely contain dozens of internal routers , thousands of hosts , and many other network elements ( switches , servers , firewalls ) . on the other hand",
    ", the small company will most probably have a single router and a simple network topology .",
    "since there is such a diversity among different network types , we can not accurately augment the as - level topology with appropriate router - level topologies if we can not characterize the composing ases .",
    "moreover , annotating the ases in the as topology with their types is a prerequisite for modeling the evolution of the internet , since different types of ases exhibit different growth patterns .",
    "for example , internet service providers ( isp ) grow by attracting new customers and by engaging in business agreements with other isps . on the other hand , small companies that connect to the internet through one or few isps",
    "do not grow significantly over time .",
    "thus , categorizing different types of ases in the internet is necessary to identify network evolution patterns and develop accurate evolution models .",
    "an as taxonomy is also necessary for mapping ip addresses to different types of users .",
    "for example , in traffic analysis studies its often required to distinguish between packets that come from home and business users .",
    "given an as taxonomy , its possible to realize this goal by checking the type of as that originates the prefix in which an ip address lies .",
    "in this work , we introduce a radically new approach based on machine learning to construct a representative as taxonomy .",
    "we develop an algorithm to classify ases based on empirically observed differences between as characteristics .",
    "we use a large set of data from the internet routing registries  ( irr )  @xcite and from routeviews  @xcite to identify intrinsic differences between ases of different types .",
    "then , we employ a novel machine learning technique to build a classification algorithm that exploits these differences to classify ases into six representative classes that reflect ases with different network properties and infrastructures .",
    "we derive macroscopic statistics on the different types of ases in the internet and validate our results using a sample of  1200 manually identified as types .",
    "our validation demonstrates that our classification algorithm achieves high accuracy :  78.1% of the examined classifications were correct .",
    "finally , we make our results and our classifier publicly available to promote further research and understanding of the internet s structure and evolution .    in section  [ sec : rel ] we start with a brief discussion of related work .",
    "section  [ sec : data ] describes the data we used , and in section  [ sec : classes ] we specify the set of as classes we use in our experiments .",
    "section  [ sec : clas ] introduces our classification approach and results .",
    "we validate them in section  [ sec : val ] and conclude in section  [ sec : con ] .",
    "several works have developed techniques decomposing the as topology into different levels or tiers based on connectivity properties of bgp - derived as graphs .",
    "govindan and reddy  @xcite propose a classification of ases into four levels based on their as degree .",
    "et al_.  @xcite classify ases into seven tiers based on inferred customer - to - provider relationships .",
    "their classification exploits the idea that provider ases should be in higher tiers than their customers .",
    "et al_.  @xcite classify ases into five tiers based on inferred customer - to - provider as well as peer - to - peer relationships .",
    "our work differs from previous approaches in the following ways :    1 .",
    "we do not employ heuristics and ad - hoc thresholds to define the as levels .",
    "instead , we use a novel machine learning algorithm to identify intrinsic features distinguishing different as types .",
    "2 .   we do not rely exclusively on as graphs , which often miss a substantial fraction of the true as links in the internet , resulting in incomplete as topologies .",
    "instead , we use an extensive set of diverse data including irr records , inferred as relationships , ip prefixes , and as graphs",
    "we do not classify ases into hierarchies of levels or tiers extracted from as graphs using degree - based or more sophisticated mechanisms ; these methods tend to mix ases with substantially different network properties into a single as group . instead",
    ", we specify a representative set of as classes characterized by unique signatures of network properties .",
    "to construct the set of as attributes that we use in our as classification , we collect data from the following databases and measurement projects :    1 )  * irrs *  @xcite .",
    "the irrs constitute a distributed database containing records on ases routing policies , assigned ip prefixes , contact information , etc . a natural approach to identifying the type of an as , given its as number ,",
    "is to lookup the as number in the irrs and examine its organization description record . in the rpsl",
    "@xcite terminology , this record is the descr attribute of the rpsl class aut - num .",
    "it contains the name or a short description of the organization that owns the as number .",
    "for example , the following are entries for the descr attribute found in the irrs : `` intervivo networks , a broadband internet access provider '' and `` auckland peering exchange ''",
    ". the descr attribute does not have a standard representation .",
    "it usually consists of a short description as in the examples above , but in some cases it only contains an acronym , e.g. , `` kpmg llp '' , `` lti '' . for the purposes of this work ,",
    "the descr record is our first as attribute , from which we extract useful information by means of text classification techniques .",
    "we downloaded the mapping of as numbers to organization description records on 04/08/2005 from the cidr report  @xcite , which provides on a daily basis mappings of as numbers to organization description records extracted from arin , ripe ncc , lapnic , apnic , krnic , twnic , and jpnic databases .",
    "we preprocess the organization records by removing stop words , i.e. , words with little semantic meaning , such as `` of '' or `` the '' , using the stop word list  @xcite . then ,",
    "using the porter stemming algorithm  @xcite , we replace words with their stem .",
    "we note that irrs contain significant portions of incomplete or obsolete records , which is not a serious problem for this study since we are only concerned with the descr attribute , which changes relatively rarely .",
    "2 )  * routeviews *  @xcite .",
    "routeviews is a measurement project that collects and archives a union of bgp tables from a large number of isps .",
    "we download all 12 bgp table snapshots archived from the collector route-views2.oregon-ix.net on 07/18/2005 . for each table snapshot",
    "we extract as paths and remove as sets and private as numbers .",
    "then , we merge the extracted as paths into an as topology and use the as relationship inference heuristics of  @xcite to annotate the as links with customer - to - provider and peer - to - peer relationships . having the as relationships inferred , we calculate the following three attributes for every as : the number of providers , the number of customers , and the number of peers a given as is connected to .",
    "large isps typically have a large number of customers , zero providers , and a small number of peers , while small isps typically have few providers , a small number of customers and a large number of peers .",
    "stub university or company networks typically have zero customers , zero or few peers and a small number of providers .    from the routeviews data , we also extract information on ip prefixes .",
    "we use the chronologically first table snapshot from the same snapshot set to construct a mapping of as numbers to the ip prefixes they advertise .",
    "then , for each as we count the number of advertised prefixes and use this number as another as attribute .",
    "small ases , with tiny portions of ip address space allocated to them , as well as older ases with large ip blocks , tend to advertise few prefixes . on the contrary , large ases with relatively high ip address utilization and diversified routing policies tend to advertise many prefixes of various lengths .",
    "one problem with this attribute is that ip prefixes are of drastically different sizes .",
    "advertised ipv4 prefixes range in size from a  /8 , covering  @xmath0 ip addresses , down to a  /32 , covering just one address .",
    "the prefix length of 24 bits is generally the smallest ipv4 prefix size that is globally routed , which suggests our last as attribute to be the number of unique  /24 prefixes found within the union of address space advertised by the as .",
    "this attribute is likely to have small values for smaller ases that use and advertise smaller portions of ip address space , while it is likely to be at its maximum for large or old ases ( those that appeared in the internet early , e.g. , some military and academic networks ) since they often have huge chunks of assigned ip address space that they utilize scarcely .    in summary , we collect data from the irrs and routeviews .",
    "we find  19,537 ases .",
    "using the collected data , we annotate every as with the following six attributes : 1 )  the organization description record ( the _ description _ attribute ) , 2 )  the number of inferred customers ( the _ customer _ attribute ) , 3 )  the number of inferred providers ( the _ provider _ attribute ) , 4 )  the number of inferred peers ( the _ peer _ attribute ) , 5 )  the number of advertised ip prefixes ( the _ prefix _ attribute ) , and 6 )  the equivalent number of  /24 prefixes covering all the advertised ip space ( the _ space _ attribute ) .",
    "in this work , we focus on network properties of an as as the main criterion determining the set of as classes . in other words , to construct the as class set , we use the rule that ases in the same class should have similar network properties , while ases in different classes should have different network properties .",
    "ases in the same class may still have significant network differences , however these differences should be small compared with differences between networks of different classes . for example , a small university and a large university may have quite different networks , however these differences are less significant compared to the differences between a typical university network and a typical isp network .",
    "besides employing our _ de facto _ empirical knowledge , we perform the following experiment to specify the set of as classes .",
    "we _ randomly _ select  1200 ases and then , for each as , we examine its attributes , visit its website ( if possible ) , search for references to its organization name and determine its business profile .",
    "after examining the spectrum of these  1200 ases , we construct our as class set :    1 .",
    "_ large isps _ : large backbone providers , tier-1 isps , with intercontinental networks . 2 .",
    "_ small isps _ : regional and access providers with small metropolitan or larger regional networks .",
    "_ customer ases _ : companies or organizations that run their own networks but as opposed to members of the previous two classes do not provide internet connectivity services .",
    "we find a wide range of ases in this class , like web hosting companies , technology companies , consulting companies , hospitals , banks , military networks , government networks , etc .",
    "universities _ : university or college networks .",
    "we distinguish these networks from members of the customer as class , since they typically have substantially larger networks that serve thousands of end hosts .",
    "5 .   _ internet exchange points ( ixps ) _ : small networks serving as interconnection points for the members of the first two classes . 6 .   _ network information centers ( nics ) _ : networks that host important network infrastructure , such as root or tld servers .",
    "we build our classification algorithm using _ adaboost _",
    "@xcite , a very powerful machine learning technique .",
    "the main idea behind adaboost is to combine multiple simple classification rules into a efficient composite classifier .",
    "these simple classification rules are called _ weak hypotheses _ and by definition are only required to perform slightly better than random guessing .",
    "intuitively , weak hypotheses reflect simple `` rules of thumb '' that are usually much easier to construct than a complex classifier .",
    "adaboost works iteratively over a set of training examples ; at each iteration it finds a weak hypothesis that performs well on the examples which the weak hypotheses of previous iterations erroneously classified .",
    "one constructs a weak hypothesis by means of a _ weak learning algorithm _ or simply _",
    "weak learner_. the power of adaboost lies in a well - developed theoretical framework that intelligently combines the weak hypotheses into a composite classifier .",
    "let  @xmath1 denote the set of ases that we want to classify and  @xmath2 be the set of possible classes , such that each as  @xmath3 belongs to a unique class in  @xmath2 . if  @xmath4 is the correct class for as  @xmath5 , than let @xmath6 , otherwise  @xmath7 .",
    "the goal is to find a classifier that for each as produces a",
    "_ ranking _ of all the possible classes .",
    "more formally , we will compute a ranking function  @xmath8 : for each as  @xmath3 , the classes in  @xmath2 will be ordered according to  @xmath9the higher the value of  @xmath10 , the more likely  @xmath5 belongs to  @xmath11 .    in figure",
    "[ fig : ada ] , we illustrate the adaboost.mh algorithm  @xcite , a special member of the adaboost algorithm family that is suited for solving multiclass problems . let @xmath12 be the set of training examples .",
    "in our case , we construct  @xmath13 by manually determining the correct class of  1220 ases : 1200 are randomly selected ; and 20 are well - known large isps and ixps , which we use to increase the number of these two types of ases in the initial random sample .",
    "let  @xmath14 be the total number of iterations .",
    "for each iteration @xmath15 , we maintain a distribution  @xmath16 of weights over the set of examples and classes @xmath17 . at the first iteration , we initialize @xmath16 to the uniform distribution , i.e.",
    ", @xmath18 is constant for all @xmath19 , @xmath20 . at each subsequent iteration , we pass the distribution  @xmath16 and the training examples  @xmath13 to a weak learner that computes a weak hypothesis  @xmath21 .",
    "a positive ( negative ) sign of the weak hypothesis  @xmath22 corresponds to the prediction that as  @xmath5 is ( is not ) a member of class  @xmath11 .",
    "the value @xmath23 of the weak hypothesis reflects the confidence level of the prediction .",
    "then , we update the distribution  @xmath16 so that the  @xmath5 ,  @xmath11 pairs that were erroneously predicted , i.e. , the signs of  @xmath24 and  @xmath25 differ , receive a exponentially higher weight . by assigning higher weight to incorrect predictions , we force the algorithm to focus on these difficult examples in the next round .",
    "the final classifier  @xmath26 is the sum of votes of the weak hypotheses in all rounds  @xmath27 , @xmath15 .",
    "a weak hypothesis is equivalent to a one - level decision tree that checks a single as attribute . for the description as attribute , a weak hypothesis searches for the presence of a term or a sequence of terms in a given record , and",
    "if a match occurs , it outputs a confidence value for each of the classes .",
    "for example , upon finding the term `` university '' in the record `` seoul national university of education '' the weak hypothesis will likely output a high positive confidence value for the university as class and a negative confidence value for the other as classes . for scalar attributes , a weak hypothesis asks if a given attribute value is above or below a certain threshold .",
    "depending on the outcome , the hypothesis outputs different confidence values .",
    "the weak learner builds a weak hypothesis by exhaustively evaluating the attributes in the given weighted training examples . for a text attribute , it builds a candidate weak hypothesis by evaluating all possible terms and sequences of terms . for each term or sequence of terms",
    ", it calculates the appropriate confidence values by minimizing the hamming loss , which is the fraction of examples  @xmath5 and classes  @xmath11 , for which the sign of the final classifier  @xmath10 differs from  @xmath25 .",
    "similarly , for each scalar attribute , the weak learner builds a candidate weak hypothesis by exhaustively searching the threshold and confidence values minimizing the hamming loss . on its output",
    ", the learner returns the weak hypothesis attaining the minimum hamming loss .",
    "ccc|cccccc round & attribute & term / threshold & l.isp & s.isp & cusmr & uni & ixp & nic +    & & @xmath28 &    ( 1,7.2 ) ( 1,-0.0163121304999998)(1,3.5163121305 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.4735347919)(1,1.0264652081 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.7797397768 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.8325260019)(1,1.6674739981 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.4639146476)(1,2.0360853524 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.2714864672)(1,2.2285135328 ) ( 0,3.5)(1,0)3     + & & @xmath29    &    ( 1,7.2 ) ( 1,1.2708921135)(1,2.2291078865 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.0336004254 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.1608508751)(1,0.3391491249 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.2256887679)(1,1.2743112321 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.5301809138)(1,1.9698190862 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.990387677)(1,1.509612323 ) ( 0,3.5)(1,0)3     +    2 & description & `` network inform ''    &    ( 1,7.2 ) ( 1,2.2216833816)(1,1.2783166184 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.1210242844)(1,2.3789757156 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.1349191402)(1,2.3650808598 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.7399693498)(1,1.7600306502 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.0556227578)(1,1.4443772422 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,3.2284513535 ) ( 0,3.5)(1,0)3     +    & & @xmath30 &    ( 1,7.2 ) ( 1,0.6010428496)(1,2.8989571504 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.4404276559)(1,0.0595723441 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.1111626141 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.0390868724 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.4052849295)(1,0.0947150705 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.7965965279)(1,0.7034034721 ) ( 0,3.5)(1,0)3     + & & @xmath31    &    ( 1,7.2 ) ( 1,3.5)(1,0.8634883271 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.7049122965 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.3929064144)(1,1.1070935856 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.1135206426)(1,0.3864793574 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.4135959469 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.7023153932)(1,0.7976846068 ) ( 0,3.5)(1,0)3     +    4 & description & `` exchang ''    &    ( 1,7.2 ) ( 1,2.6649888658)(1,0.8350111342 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.2936841338)(1,2.2063158662 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.6048529329)(1,0.8951470671 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.9378176669)(1,1.5621823331 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,2.4512993094 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.4186244687)(1,1.0813755313 ) ( 0,3.5)(1,0)3     +    5 & description & `` univers ''    &    ( 1,7.2 ) ( 1,2.7987866841)(1,0.7012133159 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.8342091922)(1,1.6657908078 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.0500111654)(1,1.4499888346 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,2.4096956442 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.1049456495)(1,1.3950543505 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.263214415)(1,1.236785585 ) ( 0,3.5)(1,0)3     +    & & @xmath32 &    ( 1,7.2 ) ( 1,0.9666483892)(1,2.5333516108 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.0514789400 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.0423646810 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.3302953706)(1,0.1697046294 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.9781279276)(1,0.5218720724 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,3.5)(1,0.0133931961 ) ( 0,3.5)(1,0)3     + & & @xmath33    &    ( 1,7.2 ) ( 1,3.5)(1,2.4854406092 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,1.3250967327)(1,2.1749032673 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.3689860715)(1,1.1310139285 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.4639524202)(1,1.0360475798 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.4179592278)(1,1.0820407722 ) ( 0,3.5)(1,0)3    &    ( 1,7.2 ) ( 1,2.7330272347)(1,0.7669727653 ) ( 0,3.5)(1,0)3     +    to realize our classification algorithm , we use boostexter  @xcite , a publicly available implementation of adaboost . in table  [ table ] we depict the weak hypotheses that our algorithm discovered during its first six iterations . for each weak hypothesis , we illustrate the selected as attribute , the term or threshold that is looked for , and the computed confidence values .",
    "the first weak hypothesis deals with the space attribute . if the ip address space advertised by an as is less than  8.5 ( equivalent ) /24",
    "prefixes then , the hypothesis assigns a positive confidence value to the customer as class and negative confidence values to the other classes .",
    "if the value of the space attribute is above  8.5 , the hypothesis assigns negative or very close to zero confidence values to all the classes , which means that in this case it can not make a confident positive prediction .",
    "the second weak hypothesis checks the description as attribute for the presence of term `` network inform . ''",
    "if it finds one , it assigns a high positive confidence to the nic as class and negative confidence values to the other classes .",
    "note , that in some cases the weak hypothesis assigns zero confidence values , meaning that it abstains from making any prediction .",
    "we experimentally fix the number of rounds  @xmath14 to  28 , since subsequent iterations lead to overfitting .",
    "overfitting is a common problem in machine learning .",
    "it is a consequence of too extensive training of an algorithm on one dataset .",
    "the undesired effect is that the algorithm is memorizing the training examples instead of extracting concepts from them .",
    "fortunately , we can easily detect if the algorithm tends to overfit by examining the produced classification rules .    having the number of iterations fixed",
    ", we finally apply our classifier to the set of  19,537 ases and calculate the ranking of the as classes for them . for each as we consider the highest ranked class as its predicted class . if the class with the highest rank value for an as has the confidence value less than or equal to zero , then the classifier abstains from making a prediction since the given information is not sufficient to produce a reliable assignment .",
    "overall , the classifier abstains from making a prediction for  923 ases , which accounts for  4.7% of the total number of ases in our dataset . in table  [ stats ] we show the per category classification statistics . among the classified ases , 63.0% are customers , 30.1% are small isps , 4.7% are universities , 1.8% are nics , 0.2% are isps , and 0.2% are large ixps .",
    ".numbers of ases in each as class . [ cols=\"^,^,^,^,^,^,^,^,^\",options=\"header \" , ]",
    "to validate our results , we employ the standard machine learning methodology called _ cross - validation_. cross - validation is the process of splitting the training examples into two subsets .",
    "one then uses the first subset to train a new classifier and the second subset to validate the results of this new classifier .    from our main set of  1200 training examples ,",
    "we randomly extract  1100 ases and use varying size subsets of these  1100 ases to train new classifiers .",
    "we validate the predictions of the new classifiers against the remaining  100 examples .",
    "we repeat the random selection process  400 times and for each iteration we compute the following evaluation metrics : 1 )  _ accuracy _ , which we define as the percentage of ases for which the as class with the highest rank value is their correct class .",
    "the disadvantage of this metric is that it checks only the top of the ranking , ignoring the remaining positions .",
    "to address this problem , we use 2 )  _ coverage _ , which we define as the average position number of the correct class of an as . for each as ,",
    "we number as class positions incrementally starting from zero for the class with the highest positive confidence value .",
    "thus , if all the predictions are correct the coverage is zero .    in figures  [",
    "plot : accuracy ] and  [ plot : coverage ] we plot the average accuracy and coverage versus the size of the training set . as the size of the training set increases , the accuracy increases and the coverage decreases . for  @xmath34 the accuracy reaches  0.781 , e.g. , 78.1% , and the coverage  0.251 .",
    "the increasing accuracy trend suggests that for the training size of  1200 that we use in our final classification , the expected accuracy must be even higher .",
    "the low value of the coverage indicates that when the correct class is not of the top rank value , it is close to the top .",
    "more specifically , we find that for  97.7% of the predictions the correct class is in the top two positions of the ranking .",
    "we next analyze the per class percentage of correct predictions .",
    "we find that for  @xmath34 the percentage of correct predictions is on average : 100% for large isps , 100% for nics , 100% for ixps , 92.8% for universities , 79.2% for customer ases and 72.1% for small isps .",
    "the actual distribution of ases among the classes in our training set is : 684 customer ases , 401 small isps , 66 universities , 36 nics , 11 ixps , and 2 large isps .",
    "the lower accuracy for customer ases and small isps illustrates that these are the hardest classes to identify .",
    "we explain this effect by similarities between the characteristics of these two as classes : 1 )  more than a half of the small isps appear to have the as degree of  1 or  2 , which is also typical for customer ases ; 2 )  some customer ases , especially web hosting companies , advertise large numbers of different ip prefixes or large chunks of address space , which is also typical for isps .    in summary , we find that in the examined examples our classifier almost perfectly identifies large isps , nics , ixps and universities , while it also produces accurate predictions for customer ases and small isps , which are the hardest to classify .",
    "in this work , we establish a classification of ases required for expanding our understanding of the internet infrastructure and for creating realistic models of its topology and evolution .",
    "we develop a novel classification methodology that we apply to an exhaustive set of as data to obtain the first statistics on the different as classes in the internet .",
    "we validate our results and demonstrate that our classifier achieves accuracy of  78.1% in the examined data . to promote further analysis and to inspire development of better topology models , we release to the community our classification dataset along with the as class predictions  @xcite . to the best of our knowledge ,",
    "our dataset is the most comprehensive collection of as macroscopic characteristics .",
    "in addition to as topology and taxonomy information , it includes organization description records , as business relationship information , and information on advertised ip prefixes and space ."
  ],
  "abstract_text": [
    "<S> although the internet as - level topology has been extensively studied over the past few years , little is known about the details of the as taxonomy . </S>",
    "<S> an as `` node '' can represent a wide variety of organizations , e.g. , large isp , or small private business , university , with vastly different network characteristics , external connectivity patterns , network growth tendencies , and other properties that we can hardly neglect while working on veracious internet representations in simulation environments . in this paper </S>",
    "<S> , we introduce a radically new approach based on machine learning techniques to map all the ases in the internet into a natural as taxonomy . </S>",
    "<S> we successfully classify  95.3% of ases with expected accuracy of  78.1% . </S>",
    "<S> we release to the community the as - level topology dataset augmented with : 1 )  the as taxonomy information and 2 )  the set of as attributes we used to classify ases . </S>",
    "<S> we believe that this dataset will serve as an invaluable addition to further understanding of the structure and evolution of the internet . </S>"
  ]
}
{
  "article_text": [
    "_ graph labeling",
    "_ is a well - studied subject in computer science and mathematics , and a problem that has widespread applications , including in many other disciplines . here",
    "we explore a variant of graph labeling called the graph relabeling problem that was first explored by  kantabutra  @xcite and later by the authors of this paper in  @xcite . a shorter preliminary version of this paper appeared in  @xcite .",
    "here we present some new results and extend the results given in  @xcite .",
    "in particular , we _",
    "nc_@xmath4 reduce the vertex relabeling problem to the edge relabeling problem and vice versa , and provide upper and lower bounds on the complexity of the vertex and edge relabeling problems , give tights bounds on relabeling a path , and provide precise characterizations of when instances of relabeling with privileged labels are solvable .",
    "the paper also includes a number of related open problems .",
    "the problem of graph labeling has a rich and long history , and we recommend gallian s extensive survey for an introduction to this topic and for a cataloging of the many different variants of labeling that have been studied  @xcite .",
    "puzzles have always intrigued computer scientists and mathematicians alike , and a number of puzzles can be viewed as relabeled graphs ( for example , see  @xcite ) .",
    "one of the most famous of these puzzles is the so - called 15-puzzle  @xcite .",
    "the 15-puzzle consists of 15 tiles numbered from 1 to 15 that are placed on a @xmath5 board leaving one position empty .",
    "the goal is to reposition the tiles of an arbitrary arrangement into increasing order from left - to - right and from top - to - bottom by shifting tiles around while making use of the open hole . in",
    "@xcite a generalized version of this puzzle called the ( @xmath6)-puzzle was used to show a variant of the vertex relabeling problem with privileged labels is _ np_-complete .",
    "graph labeling has been studied in the context of cartography  @xcite . and",
    ", of course , there are many special types of labelings which are of great interest ",
    "codings  @xcite , colorings  @xcite , and rankings  @xcite to name but three . in these cases",
    "we are typically interested in placing labels on the vertices or edges of a graph in some constrained manner so that certain properties are met .",
    "such problems are usually not stated in terms of the evolutionary process that our labeling problems fall under . in august of",
    "2008 google searches of graph coloring , graph labeling , graph coding and graph ranking turned up 339,000 hits , 10,700,000 hits , 4,060,000 hits and 5,640,000 hits respectively .",
    "all of these fields have ongoing research .",
    "the graph relabeling problem is not only interesting in its own right but also has applications in several areas such as bioinformatics , networks , and vlsi .",
    "new applications for such work are constantly emerging , and sometimes in unexpected contexts .",
    "for instance , the graph relabeling problem can be used to model a _",
    "wormhole routing _ in processor networks in which one - byte messages called _ flits _",
    "@xcite are sent among processors . in this example",
    "each processor has a limited buffer , one byte , and the only way to send a message is by exchanging it with another processor .",
    "other well - known problems , for example , the pancake flipping problem , can be modeled as a special case of our problem  @xcite .",
    "this paper is organized as follows : @xmath7[sec : definitions ] contains preliminaries and definitions ; @xmath7[sec : relate ] shows the vertex relabeling problem and the edge relabeling problem are _",
    "nc_@xmath4 reducible to each other ; @xmath7[sec : bounds ] proves upper and lower bounds for general graphs for both the vertex relabeling problem and the edge relabeling problem ; @xmath7[sec : exact ] contains exact bounds for relabeling a path and a star ; @xmath7[sec : intractable ] resolves several open problems and includes results about the vertex relabeling problem with privileged labels and the edge relabeling problem with privileged labels ; @xmath7[sec : conclusions ] presents concluding remarks and open problems . for background material on algorithms",
    "we refer the reader to  @xcite , for graph theory to  @xcite , and for basic notations of complexity theory including reducibility to  @xcite .",
    "let @xmath8 denote the set of the natural numbers . throughout the paper",
    "let @xmath0 be a simple , undirected , and connected graph .",
    "let @xmath9 and @xmath10 . the _ line graph of _",
    "@xmath0 is the graph @xmath11 , where @xmath12 that is , in the line graph edges from the original graph become vertices and two of these new vertices are connected if they share an endpoint in the original graph .",
    "sometimes we use @xmath13 and @xmath14 to denote the vertices and edges of the graph @xmath3 respectively .",
    "let @xmath15 .",
    "labeling @xmath16 of @xmath17 _ is a mapping @xmath18 .",
    "labeling @xmath19 of @xmath20 _ is a mapping @xmath21 . in this paper",
    "we are usually interested in @xmath22 and @xmath23 .",
    "we associate a graph @xmath3 with labelings using angle bracket notation , for example , @xmath24 denotes the graph @xmath3 with vertex labeling @xmath16 and edge labeling @xmath19 .",
    "a _ flip _ or _",
    "mutation function @xmath25 _ maps triples @xmath26 to triples @xmath27 , or ordered pairs if we are only interested in one labeling .",
    "we study both vertex and edge mutation functions . in general",
    ", the mutation function @xmath25 will be defined based on various properties of @xmath3 . here",
    "we study just restricted classes of mutation functions .",
    "first , we define the _ consecutive vertex mutation function _ ,",
    "where @xmath25 maps a pair @xmath28 to a pair @xmath29 , so @xmath30 for each @xmath31 , with the following conditions :    1 .",
    "@xmath32 , except on two vertices @xmath33 and @xmath34 2 .",
    "@xmath35 3 .",
    "@xmath36 and @xmath37 4 .",
    "@xmath22 5 .",
    "@xmath25 is a bijection    that is , the labels on the adjacent nodes @xmath33 and @xmath34 are swapped , while all other labels remain the same .",
    "in addition , the set of labels are chosen from @xmath38 , and since the definition requires @xmath25 to be a bijection , labels are used exactly once .",
    "it would be interesting to study other types of mutation functions where , for example , labels along an entire path are mutated , or where labels can be reused .",
    "one application of the function @xmath25 is called a _ flip _ or _",
    "mutation_. we next define a decision problem that captures the complexity of the evolution of one labeling into another via the consecutive vertex mutation function .    *",
    "( * vertex relabeling problem * ) * + [ def : vertexrelabeing ] a graph @xmath3 , labelings @xmath16 and @xmath39 , and @xmath40 .",
    "+ question : can labeling @xmath16 evolve into @xmath39 in @xmath41 or fewer vertex mutations ?",
    "we can similarly define the _ consecutive edge mutation function _",
    ", where @xmath42 except for two edges whose labels have been swapped , and @xmath23 .",
    "note , when employing the consecutive edge mutation function , the edges whose labels are swapped must share an endpoint .",
    "we have the following analogous decision problem for edge relabelings .    *",
    "( * edge relabeling problem * ) * + [ def : edgerelabeing ] a graph @xmath3 , labelings @xmath19 and @xmath43 , and @xmath40 .",
    "+ question : can labeling @xmath19 evolve into @xmath43 in @xmath41 or fewer edge mutations ?    in the remainder of the paper we focus on the consecutive versions of the mutation functions .",
    "the word ` consecutive ' refers to the fact that only neighbors can be mutated , that is , labels to be swapped appear consecutively in the graph .",
    "the following theorem shows that the computational complexities of the vertex relabeling problem and the edge relabeling problem are closely related . in the theorem we use _",
    "nc_@xmath4 many - one reducibility  a weak form of reducibility ; and therefore , one that shows a very close relationship between problems  to relate the vertex and edge relabeling problems .    *",
    "( * vertex / edge relabeling related * ) * + [ thm : same ] the vertex relabeling problem is nc@xmath4 many - one reducible to the edge relabeling problem , and the edge relabeling problem is nc@xmath4 many - one reducible to the vertex relabeling problem .",
    "we first show that the vertex relabeling problem is _",
    "nc_@xmath4 many - one reducible to the edge relabeling problem .",
    "consider an instance @xmath0 , @xmath16 and @xmath39 , and @xmath44 of the vertex relabeling problem .",
    "let @xmath45 , @xmath46 , be @xmath47 new vertices .",
    "we construct a corresponding instance of the edge relabeling problem @xmath48 , @xmath19 is such that @xmath49 gets @xmath50 for @xmath51 and @xmath52 for @xmath53 , @xmath43 is such that @xmath54 gets @xmath55 for @xmath51 and @xmath56 for @xmath53 , and the mutation bound is @xmath57 .",
    "we now argue the correctness of this reduction .",
    "if we have a yes instance of the vertex relabeling problem , then it is clear that the answer to the resulting instance of the edge relabeling problem is also yes since each mutation in @xmath3 can be mimicked by three mutations in @xmath58 .",
    "that is , suppose labels @xmath59 and @xmath60 are mutated .",
    "the following three mutations mimic this swap :    1 .",
    "@xmath61 with @xmath62 2",
    ".   new label of @xmath63 , which is @xmath64 , with @xmath65 3",
    ".   new label of @xmath66 , which is @xmath65 , with new label of @xmath67 , which is @xmath68    in the other direction , suppose we have a yes instance of the edge relabeling problem . by construction of @xmath43",
    "the labels on the original edges of @xmath3 remain the same in @xmath19 and @xmath43 .",
    "thus , any movement of labels in @xmath58 between the edges @xmath69 and @xmath70 , where the edge @xmath71 , requires a minimum of three mutations to swap the labels on these two edges and to restore the label on @xmath72 .",
    "thus , the corresponding instance of the vertex relabeling problem also has a yes answer .",
    "it is not hard to see that if each edge knows its number as part of the input , then the reduction can be accomplished in _",
    "nc_@xmath4 because addition is in the class _ ac_@xmath73 which is contained in",
    "_ nc_@xmath4 .",
    "now we show that the edge relabeling problem is _",
    "nc_@xmath4 many - one reducible to the vertex relabeling problem .",
    "consider an instance @xmath74 of the edge relabeling problem , where @xmath75 , @xmath19 and @xmath43 are labelings , and @xmath44 .",
    "we construct an instance @xmath76 of the vertex relabeling problem using the line graph @xmath77 , @xmath78 for @xmath79 , @xmath80 for @xmath81 , and the bound @xmath41 .",
    "we argue the correctness of the reduction .",
    "since for each mutation in the instance @xmath74 of the edges , there is a corresponding mutation of the vertices in the instance @xmath76 , we see that @xmath74 is a yes instance of the edge relabeling problem if and only if @xmath76 is a yes instance of the vertex relabeling problem .    the reduction can be accomplished in _",
    "this completes the proof of the theorem .",
    "notice in the first reduction , we relied on the input being coded so that each edge `` knows '' its own number . without having the input encoded in some suitable fashion that provides this information , it is not clear that the reduction is in _ nc_@xmath4 , however , the reduction could still be performed in _",
    "theorem  [ thm : same ] demonstrates a close relationship between the vertex relabeling problem and the edge relabeling problem , when the mutation functions are the consecutive versions .",
    "the theorem comes in handy when proving results about the edge relabeling problem based on facts about the vertex relabeling problem .",
    "this section contains several theorems about the time complexity of the vertex / edge relabeling problems .",
    "theorem  [ thm : upper ] shows that for an arbitrary graph and two arbitrary labelings at most @xmath83 mutations are required to evolve one vertex labeling into another .",
    "corollary  [ cor : upper ] shows that a similar statement can be made about the edge relabeling problem .",
    "observation  [ obs : lower ] yields a lower bound on the number of mutations required in evolving either vertex - labeled graphs or edge - labeled graphs .",
    "we begin with the upper bound on the number of flips required to evolve any given vertex labeling into any other labeling .    *",
    "( * vertex relabeling upper bound * ) * + [ thm : upper ] let @xmath0 be a graph , @xmath16 and @xmath39 vertex labelings , and @xmath84 , then the answer to the vertex relabeling problem is yes . that is , any labeled graph can evolve into any other labeled graph in at most @xmath83 mutations .",
    "let @xmath0 be any graph .",
    "we need to consider the number of mutations required to change an arbitrary labeling @xmath16 into an arbitrary labeling @xmath39 .",
    "we first construct a spanning tree @xmath85 of @xmath3 .",
    "let @xmath86 be the fixed numbering of the vertices ( not labels ) that denotes the _ prfer code _",
    "order when the leaves of @xmath85 are deleted during the process of constructing a prfer code ; note , @xmath87 for @xmath88 .",
    "the prfer code iteratively requires the lowest numbered vertex of degree one to be removed .",
    "here we are not interested in the actual prfer code itself but rather just the leaf elimination order given by the prfer code ( see  @xcite for more on the background and complexity of computing prfer codes ) .    the idea is to transform labels from @xmath16 into their positions in @xmath39 in the order specified by the @xmath89 s and along the path in the spanning tree from their starting position in @xmath16 to their final position in @xmath39 .",
    "let @xmath90 be a permutation of @xmath91 ( presented as @xmath92 ) such that @xmath93 for each @xmath94 .    to move @xmath95 from the initial labeling to its final position can take at most @xmath96 mutations .",
    "note , @xmath97 is an initial leaf in @xmath85 , and @xmath85 contains exactly @xmath96 edges .    to move @xmath98 from the initial labeling to its final position , we need at most @xmath99 mutations , since @xmath100 is already in its rightful place .    in general , after @xmath31 iterations , where all of the labels @xmath100 through and including @xmath55 are in their correct places , then , to move @xmath101 to its correct place , we need at most @xmath102 flips , since the remaining spanning tree induced by the vertex set , @xmath103 , has exactly @xmath102 edges .",
    "note , we do not perform any flips in locations of the tree that have already been completed .",
    "all in all , we use at most @xmath104 flips to obtain @xmath39 from @xmath16 .",
    "note that the proof of theorem  [ thm : upper ] is constructive and provides the sequence of flips to evolve one labeling into another .",
    "we chose to use the well - known prer code ordering to place the labels into leaves first , but any other such leaf ordering would work as well .",
    "the complexity of the algorithm in theorem  [ thm : upper ] is the complexity of computing a spanning tree , @xmath105 , plus the complexity of computing the prfer code elimination order , @xmath106 , plus the complexity of the flips , @xmath107 , which overall is therefore @xmath108 .",
    "it is interesting to consider that in the parallel setting we might be able to compute the sequence of flips required for the evolution much more quickly than we could actually execute them sequentially .",
    "we leave this as an open problem .",
    "corollary  [ cor : upper ] contains the analogous result to theorem  [ thm : upper ] but for the edge relabeling problem .    *",
    "( * edge relabeling upper bound * ) * + [ cor : upper ]",
    "let @xmath0 be a graph , @xmath19 and @xmath43 edge labelings , and @xmath109 , then the answer to the edge relabeling problem is yes . that is , any labeled graph can evolve into any other labeled graph in at most @xmath110 flips .",
    "the result follows directly from theorems  [ thm : upper ] and  [ thm : same ] .",
    "we now discuss the matching lower bounds for the bounds of @xmath41 given in theorem  [ thm : upper ] and corollary  [ cor : upper ] , together with some well - known folklorish but relevant results .",
    "consider the path @xmath111 on @xmath47 vertices .",
    "for convenience we represent a vertex labeling of @xmath111 by a permutation @xmath90 of @xmath112 which we can view as a string @xmath113 . for each such string @xmath114",
    "let @xmath115 be the number of _ inversions _ ( also known as _ inversion pairs _ ) of @xmath114 , that is , @xmath116 .",
    "note that each mutation reduces or increases the value of @xmath117 by exactly one .",
    "in other words , if @xmath118 is the string obtained from @xmath114 by some mutation , then @xmath119 .",
    "this well - known observation is stated as a lemma in the original treatise  @xcite on determinants . from this",
    "we see that @xmath115 is the number of flips or mutations necessary to obtain @xmath120 from @xmath121  @xcite .",
    "this shows that the bound of theorem  [ thm : upper ] is tight .    *",
    "( * lower bounds for relabeling graphs * ) * + [ obs : lower ] there is a graph @xmath0 , labelings @xmath16 and @xmath39 , and @xmath122 such that the vertex relabeling problem has an answer of no .",
    "that is , there exist two labelings that require @xmath83 mutations to evolve one into the other .",
    "there is a graph @xmath123 , labelings @xmath124 and @xmath125 , and @xmath126 such that the edge relabeling problem has an answer of no .    for the permutations",
    "@xmath127 and @xmath128 ( viewed as strings ) , we clearly have @xmath129 and @xmath130 . hence ,",
    "at least @xmath83 consecutive flips are needed to obtain @xmath131 from @xmath127 .",
    "the case for edges is similar .",
    "remark : when we view a labeling of the path @xmath111 on @xmath47 vertices as a string @xmath132 , we note that the transformation of @xmath114 to @xmath127 strongly resembles standard _",
    "bubble sort_the simplest of the sorting algorithms on @xmath47 elements ( see  @xcite for discussion and analysis ) . in the case when evolving the string @xmath128 to @xmath127 , the sequence of flips or mutations is precisely the procedure of bubble sort , except for the very last iteration .",
    "in this section we determine exactly how many flips are needed to transform one vertex labeling @xmath16 of @xmath0 to another vertex labeling @xmath39 when @xmath133 is the _ star _ on @xmath47 vertices . considering the cases where @xmath3 is firstly a path and",
    "secondly a star seems like a good starting point since these constitute the simplest trees : the path having the largest diameter ( of @xmath96 , and smallest maximum degree of two ) and the star having the smallest diameter ( of two , and the largest maximum degree of @xmath96 ) .",
    "the case when @xmath134 , the simple path on @xmath47 vertices , is a well - known classic result .",
    "although the statements of these well - known results for the path are contained in the original work by thomas muir  @xcite and the expanded and edited version  @xcite , the proofs are folklorish or scattered throughout the literature at best .",
    "hence , in what follows we provide self - contained proofs of them in our notation . later on these methods for the path",
    "will also be referred to in the case when @xmath3 is the @xmath47-star . the case for the star has also been investigated before in this context , in particular , in  @xcite and from an algorithmic point of view in  @xcite and  @xcite , all nice and interesting papers on how this applies to connectivity in computer networks . in this section",
    "we will generalize these results and show how some of their results follow from ours as special cases .",
    "consider the transformation of one labeling of the path @xmath111 into another .",
    "it is clear that the minimum number of mutations needed to evolve @xmath132 into @xmath135 is the same as the minimum number of evolving @xmath118 into @xmath114 .",
    "hence , for the sake of simplicity , we will assume that we are to evolve @xmath114 into @xmath118 .",
    "a _ flip _ or _ mutation sequence _",
    "@xmath136 is a sequence of strings with @xmath137 , @xmath138 , and where @xmath139 is obtained from @xmath140 by a single mutation , @xmath141 . in this case",
    "we see that for an arbitrary labeling @xmath142 , we have @xmath143 reestablishing what we know that at least @xmath115 mutations are needed to evolve @xmath114 into @xmath118 .    by induction on @xmath47 , it is easy to see that @xmath115 mutations _ suffice _ to evolve @xmath114 to @xmath118 : this claim is clearly true for @xmath144 .",
    "assume that this assertion is true for length @xmath145-strings , and let @xmath132 be such that @xmath146 , for a fixed @xmath31 , @xmath147 .",
    "in this case we have @xmath148 , where @xmath149 .",
    "clearly , in @xmath114 we can move @xmath150 to the rightmost position by precisely @xmath151 mutations . by induction , we can obtain @xmath152 from @xmath153 by @xmath154 mutations .",
    "hence , we are able to evolve @xmath114 into @xmath118 using @xmath115 mutations .",
    "finally , we note that if we have two vertex labelings @xmath16 and @xmath39 of the vertices of the path @xmath111 , we can define the corresponding _ relative parameter _ @xmath155 as @xmath115 , where @xmath114 is the unique permutation obtained from @xmath16 by renaming the labels in @xmath39 from left - to - right as @xmath156 and reflecting these new names in @xmath16 . by our previous comment , we have the symmetry @xmath157 . this well - known result can now be stated in our notation as follows .    *",
    "( * tight bound on path relabeling complexity * ) * + [ obs : tightpath ] let @xmath111 be the path on @xmath47 vertices , @xmath16 and @xmath39 vertex labelings , and @xmath158 . then the answer to the vertex relabeling problem for @xmath111 is yes if and only if @xmath159 .",
    "finally , note that by observation  [ obs : tightpath ] we can always evolve @xmath16 into @xmath39 using the minimum of @xmath155 mutations , and repeating the last mutation ( or any fixed mutation for that matter ! ) @xmath160 times is not going to alter @xmath39 , since repeating a fixed mutation an even number of times corresponds to the identity ( or neutral ) relabeling .",
    "hence , for any nonnegative integer @xmath161 one can always evolve @xmath16 into @xmath39 using @xmath162 mutations .    we will now verify that if @xmath16 can evolve into @xmath39 in @xmath41 mutations , then @xmath163 must be even . by renaming the labels",
    ", we may assume @xmath16 is given by the string @xmath164 and @xmath39 by the string @xmath165 .",
    "now let @xmath136 and @xmath166 be two mutation sequences with @xmath167 and @xmath168 . since @xmath169 and @xmath170 , we have @xmath171 and @xmath172 where @xmath173 in particular , we have @xmath174 .",
    "since @xmath175 and @xmath176 , we obtain @xmath177 and thus @xmath178 and @xmath179 must have the same parity .",
    "this result shows that if @xmath16 is evolved into @xmath39 in exactly @xmath41 mutations , then @xmath180 must be even .",
    "this proves the following well - known fact about permutations , which in our setting reads as follows .",
    "[ thm : path - complete ] let @xmath111 be the path on @xmath47 vertices , @xmath16 and @xmath39 vertex labelings , and @xmath158",
    ". then we can evolve the labeling @xmath16 into @xmath39 using @xmath41 mutations if and only if @xmath181 for some nonnegative integer @xmath161 .",
    "remark : in many places in the literature ( especially in books on abstract algebra ) , a permutation of @xmath182 that swaps two elements @xmath183 is called a _",
    "transposition _ or a _ 2-cycle _ and is denoted by @xmath184 .",
    "if @xmath185 , then a flip or mutation in our context is a transposition where @xmath186 .",
    "in general , by first moving @xmath187 to the place of @xmath31 and then moving @xmath31 up to the place of @xmath187 , we see that @xmath184 can be obtained by exactly @xmath188 mutations . since every permutation @xmath90 of @xmath182 is a composition of transpositions ,",
    "say @xmath41 of them , then @xmath90 can be obtained from @xmath189 by @xmath190 mutations , where @xmath190 is a sum of @xmath41 odd numbers . by theorem  [ thm : path - complete ]",
    ", we therefore have that @xmath191 .",
    "this result gives an alternative and more quantitative proof of the classic group - theoretic fact that the parity of the number of transpositions in a composition that yields a given permutation is unique and only depends on the permutation itself ( see  @xcite for the classic proof ) .",
    "we now discuss the case @xmath133 , the star on @xmath47 vertices . for our general setup ,",
    "let @xmath192 and @xmath193 , so we assume that @xmath194 is the center vertex of our star @xmath3 . if @xmath16 and @xmath39 are two vertex labelings of @xmath3 , we may ( by renaming the vertices ) assume @xmath195 for each @xmath196 . in this case",
    "the initial labeling is given by @xmath197 , where @xmath90 is a permutation of @xmath198 , and so @xmath199 , the _ symmetric group _ on @xmath47 symbols @xmath198 in our case here .",
    "call the set of the elements moved by @xmath90 the _ support _ of @xmath90 , denote this set by @xmath200 , and let @xmath201 be its cardinality .",
    "if @xmath90 has the set @xmath202 as it support , then we say that @xmath90 is a permutation _ on _ @xmath202 ( as supposed to a permutation of @xmath202 ) . recall that a _ cycle _",
    "@xmath203 is a permutation such that @xmath204 for all @xmath205 , and @xmath206 , where @xmath207 is the support of the cycle , so @xmath208 here .",
    "such a cycle @xmath209 is denoted by @xmath210 .",
    "each permutation @xmath211 is a product of disjoint cycles @xmath212 ( see  @xcite ) , and this product / composition is unique .",
    "( note that every two disjoint cycles commute as compositions of maps @xmath213 ) .",
    "for each permutation @xmath90 , denote its number of disjoint cycles by @xmath214 .",
    "note that for the star @xmath3 every mutation or flip has the form @xmath215 , where @xmath215 swaps the labels on @xmath194 and @xmath89 for @xmath216 .",
    "hence , we have @xmath217 , the 2-cycle transposing @xmath218 and @xmath31 .",
    "[ lmm : cycle - upper ] let @xmath133 be the star on @xmath47 vertices .",
    "let @xmath16 and @xmath39 be vertex labelings such that @xmath219 and @xmath220 , where @xmath209 is a cycle with @xmath221 . in this case",
    "the labeling @xmath16 can be transformed into @xmath39 in @xmath222 or fewer flips .",
    "if @xmath223 , where @xmath224 , then apply the composition @xmath225 to the labeling @xmath16 and obtain @xmath39 since @xmath226 is the identity permutation .",
    "since @xmath227 consists of @xmath228 flips altogether , we have the lemma .    for a cycle @xmath209 with @xmath229 , let @xmath227 denote the composition of the @xmath230 label flip functions as in the previous proof .",
    "by lemma  [ lmm : cycle - upper ] we have the following corollary .",
    "[ cor : perm - upper ] let @xmath133 be the star on @xmath47 vertices .",
    "let @xmath16 and @xmath39 be vertex labelings such that @xmath197 and @xmath195 for @xmath231 where @xmath232 . in this case",
    "the labeling @xmath16 can be transformed into @xmath39 in @xmath233 or fewer flips .",
    "if @xmath234 , a product of @xmath161 disjoint cycles each having its support in @xmath235 , then apply the composition @xmath236 to the labeling @xmath16 and obtain @xmath39 .",
    "this composition consists of @xmath237 flips altogether .",
    "corollary  [ cor : perm - upper ] establishes an upper bound on how many flips are needed to transform one labeling into another .",
    "this upper bound is the easier part and coincides with  ( * ? ? ?",
    "* lemma 1 , p.  561 ) .",
    "we now consider the harder case . in order to obtain the tight lower",
    "bound , we will define a parameter @xmath238 , a function from the set of all possible labelings of @xmath3 into the set of nonnegative integers , such that each flip either reduces or increases the parameter by exactly one , just like the number @xmath117 of inversions of a permutation on the path . before we present the formal definition of the parameter @xmath239",
    ", we need some notation . for each permutation @xmath90 on @xmath198 , we define a corresponding permutation @xmath240 on the same set in the following way :    1 .   if @xmath232 , then @xmath241 .",
    "2 .   if @xmath242 , then let @xmath243 be the unique element with @xmath244 . in this case we let @xmath245 .    note that for any permutation @xmath90 on @xmath198 we always have @xmath246 .",
    "if @xmath16 is a vertex labeling of the star @xmath3 such that @xmath197 for each @xmath231 , then let @xmath247 be the vertex labeling corresponding to the permutation @xmath240 , so @xmath248 for each @xmath231 . with this preliminary notation",
    "we can now define our parameter .",
    "[ def : q ] let @xmath249 be a vertex labeling of the star @xmath133 given by @xmath197 , where @xmath90 is some permutation of @xmath198 .    1 .",
    "if @xmath232 , then let @xmath250 .",
    "2 .   otherwise , if @xmath242 and hence @xmath244 for some @xmath187 , then let @xmath251    note that @xmath252 for each @xmath231 if and only if @xmath253 .",
    "we now want to show that if @xmath16 is a vertex labeling of the star @xmath3 , and @xmath39 is obtained from @xmath16 by a single flip , then @xmath254 .",
    "first we note that if one of the labels swapped by the single flip is zero , then we either have @xmath255 or vice versa @xmath256 .",
    "hence , in this case we have directly by definition  [ def : q ] that @xmath257 .",
    "assume now that neither labels @xmath31 nor @xmath187 swapped by the flip is zero .",
    "in this case we have @xmath258 and @xmath259 , and hence @xmath260 for some @xmath261 .",
    "let the labelings @xmath16 and @xmath39 on @xmath198 be given by the permutations @xmath90 and @xmath262 , respectively . since @xmath263 and @xmath264 for some @xmath265 and @xmath266 , we have @xmath267 . using the notation introduced earlier , we have @xmath268 and @xmath269 . since @xmath270 and @xmath271 , we have @xmath272 note that ( [ eqn : pio-pio ] ) also implies that @xmath273 , and so this observation yields a symmetry @xmath274 that we will use later .",
    "also , since @xmath275 , @xmath276 , @xmath277 , and @xmath278 , we see that the labeling @xmath279 is obtained from @xmath247 by swapping the labels @xmath31 on @xmath280 and @xmath187 on @xmath281 .",
    "by definition  [ def : q ] we have @xmath282 , and further by ( [ eqn : pio-pio ] ) we get the following : @xmath283 note that what happens with the parameter @xmath239 depends on whether @xmath284 or not . before we consider these cases , we dispatch with some basic but relevant observations on permutations .",
    "[ clm : cc2 ] let @xmath285 and @xmath286 be two disjoint cycles . if @xmath287 and @xmath288 , then @xmath289 is a cycle on @xmath290 .",
    "let @xmath291 and @xmath292 , where @xmath293 .",
    "we may assume that @xmath294 and @xmath295 .",
    "in this case we have @xmath296    [ clm : c2 ] let @xmath209 be a cycle and @xmath297 be distinct .",
    "then one of the following holds for @xmath298 :    1 .",
    "@xmath299 and @xmath300a product of disjoint cycles with @xmath301 .",
    "@xmath302 , where @xmath303 and @xmath298 is a cycle on @xmath304 .",
    "3 .   @xmath305 and @xmath306 .",
    "let @xmath307 , where @xmath308 .",
    "we may assume @xmath309 for some @xmath310 .",
    "we now consider the following cases for @xmath311 and @xmath31 :    if @xmath312 , then @xmath313 and @xmath314 , and we have part  3 .    if @xmath315 and @xmath313 , then @xmath316 , and we have part  2 .    if @xmath315 and @xmath317 , then @xmath318 , and again we have part  2 .    finally ,",
    "if @xmath315 and @xmath319 , then @xmath320 ( and hence @xmath321 ) , and @xmath322 , and we have part  1 .",
    "we are now ready to consider the cases of whether @xmath284 or not .",
    "first case : @xmath323 .",
    "directly by definition we have here that @xmath324 and @xmath325 , and hence @xmath326 .",
    "[ prp:1st - case ] if @xmath323 , then @xmath327 .",
    "assuming @xmath323 , we have @xmath328 and @xmath329 , and hence @xmath330 is in the support of both @xmath240 and @xmath331 .    if @xmath332 , then @xmath333 is contained in both @xmath334 and @xmath335 , and hence by definition we have that @xmath336 .",
    "since @xmath240 is a product of disjoint cycles , then , either ( i ) there are two cycles @xmath285 and @xmath286 of @xmath240 such that @xmath337 and @xmath338 , or ( ii ) there is one cycle @xmath209 of @xmath240 such that @xmath339 . since the cycles of @xmath90 commute , we have by claim  [ clm : cc2 ] in case ( i ) that @xmath340 , and by claim  [ clm : c2 ] in case ( ii ) part 1 that @xmath341 . by ( [ eqn : l ] )",
    "this completes the argument when @xmath332 .    if @xmath342 , we may by symmetry ( @xmath343 )",
    "assume that @xmath344 . in this case",
    "we have @xmath345 so @xmath346 , and @xmath347 so @xmath348 .",
    "hence , we have @xmath349 . since @xmath350",
    ", we see that both @xmath161 and @xmath330 are contained in the same cycle @xmath209 of @xmath240 in its disjoint cycle decomposition , and they are consecutive . moreover , since @xmath351 , we see that @xmath352 . again , since disjoint cycles commute , we have by claim  [ clm : c2 ] part  2 that @xmath353 . by ( [ eqn : l ] )",
    "this fact completes the argument when @xmath354 , and hence the proof of the proposition .",
    "second case : @xmath284 . by symmetry",
    "we may assume @xmath355 .",
    "in this case we have directly by definition that @xmath356 and @xmath325 . before continuing we need one more basic observation about permutations .",
    "[ clm : c1 ] let @xmath209 be a cycle . if @xmath357 and @xmath358 , then @xmath298 is a cycle on @xmath359 .",
    "let @xmath307 .",
    "we may assume @xmath360 , where @xmath361 , and so we get @xmath362 .",
    "[ prp:2nd - case ] if @xmath363 , then @xmath364 .",
    "assuming @xmath363 , we have @xmath328 and @xmath365 , and hence @xmath366 .    if @xmath342 , then since @xmath367 , we have @xmath368 .",
    "also , since @xmath369 and @xmath347 , we have @xmath370 .",
    "since @xmath240 and @xmath331 only differ on @xmath161 and @xmath330 , we have @xmath371 , this union being disjoint . from this fact it is immediate that @xmath372 and @xmath373 , and hence by ( [ eqn : l ] )",
    ", we have the following : @xmath374 and hence @xmath375 , which completes the argument when @xmath342 .    if @xmath332 , then since @xmath369 and @xmath347 , we have that @xmath161 is contained in both @xmath334 and @xmath335 , and therefore @xmath376 .",
    "since @xmath240 is a product of disjoint cycles , there is a unique cycle @xmath209 of @xmath240 whose support contains @xmath161 . by claim  [ clm : c1 ] , @xmath377 is a cycle on @xmath378 , and hence @xmath379 . by ( [ eqn : l ] )",
    "we therefore have @xmath380 and hence @xmath381 , which completes the argument when @xmath332 .",
    "this result completes the proof .",
    "[ cor : star - lower ] let @xmath133 be the star on @xmath47 vertices . if @xmath16 is a vertex labeling of @xmath3 and @xmath39 is a vertex labeling obtained from @xmath16 by a single flip , then @xmath257 .",
    "corollary  [ cor : star - lower ] shows that the upper bound given in corollary  [ cor : perm - upper ] is also a lower bound .",
    "we summarize these results in the following .",
    "[ prp : star-0 ] let @xmath133 be the star on @xmath47 vertices .",
    "let @xmath16 and @xmath39 be vertex labelings such that @xmath195 and @xmath197 for @xmath231 , where @xmath232 . in this case",
    "the labeling @xmath16 can be transformed into @xmath39 in @xmath41 flips if and only if @xmath382 .    in proposition",
    "[ prp : star-0 ] we restricted to labelings @xmath16 and @xmath39 with @xmath383 , which by definition  [ def : q ] is the fundamental case for defining the parameter @xmath384 .",
    "just as we summarized for the case of the path @xmath385 in the beginning of this section , we can likewise define the _ relative star parameter _",
    "@xmath386 for any two vertex labelings @xmath16 and @xmath39 of the @xmath47-star @xmath133 to be @xmath387 , where @xmath388 is the unique vertex labeling obtained from @xmath16 by renaming the labels of @xmath39 so that @xmath195 for all @xmath31 .",
    "( strictly speaking , if @xmath16 and @xmath39 are given by permutations @xmath90 and @xmath262 of @xmath198 , then @xmath388 is given by the permutation @xmath389 . ) clearly , this relative parameter @xmath239 is symmetric , @xmath390 , as was the case for the path .",
    "as with the path @xmath111 , where the parameter @xmath117 increased or decreased by exactly one with each mutation or flip , by corollary  [ cor : star - lower ] , so does @xmath238 for the star @xmath391 . hence , exactly the same arguments used for ( [ eqn : path - upper ] ) and ( [ eqn : path - parity ] ) can be used to obtain the following theorem , our main result of this section .",
    "[ thm : star - complete ] let @xmath133 be the star on @xmath47 vertices , @xmath16 and @xmath39 vertex labelings , and @xmath158",
    ". then we can transform the labeling @xmath16 into @xmath39 using @xmath41 flips if and only if @xmath392 for some nonnegative integer @xmath161 , where @xmath239 is the relative parameter corresponding to the one in definition  [ def : q ] .",
    "theorem  [ thm : star - complete ] generalizes the results both from  @xcite and  @xcite .",
    "consider the graph @xmath393 where its vertex set @xmath394 consists of all the @xmath395 vertex labelings of the star @xmath133 , so each vertex @xmath396 of @xmath393 corresponds to a permutation @xmath211 , and where two vertices @xmath396 and @xmath397 are connected in @xmath393 if and only if @xmath398 for some @xmath216 . here",
    "@xmath399 is an example of a _ cayley graph _ , and this particular one is sometimes ambiguously also referred to as the _ star graph _ in the literature  @xcite ,  @xcite , and  @xcite . in terms of cayley graphs",
    ", we can interpret theorem  [ thm : star - complete ] as follows :    [ cor : cayley ] let @xmath393 be the cayley graph of the @xmath47-star @xmath133 . for any @xmath400 , let @xmath401 be the corresponding vertices of @xmath393 , and @xmath16 and @xmath39 the corresponding vertex labelings of @xmath3 .",
    "then the following holds :    1 .",
    "the distance between @xmath396 and @xmath397 in @xmath393 is precisely @xmath386 .",
    "2 .   there is a walk between @xmath396 and @xmath397 in @xmath393 of length @xmath402 if and only if @xmath403 for some nonnegative integer @xmath161 .",
    "other related results regarding the cayley graph of the star can be found in  @xcite where the distance distribution among the vertices of the star graph is computed , and in  @xcite where the cycle structure of the cayley graph of the star is investigated .",
    "let @xmath404 be given",
    ". among all permutations @xmath90 on @xmath198 with @xmath405 , clearly a maximum value of @xmath406 is @xmath96 , obtained when @xmath407 .",
    "also , the maximum value of @xmath214 is @xmath408 , obtained when every cycle of @xmath90 has support of two when @xmath96 is even , or when every cycle except one ( with support of three ) has support of two when @xmath96 is odd .",
    "hence , among all permutations @xmath90 on @xmath198 , the maximum value of @xmath409 is always @xmath410 .",
    "consider the star @xmath133 and a vertex labeling @xmath16 of @xmath3 with @xmath384 at maximum .",
    "let @xmath90 be the permutation on @xmath198 corresponding to @xmath16 , so @xmath411 . if @xmath232 , then @xmath412 and by definition  [ def : q ] , the value @xmath384 is at most @xmath413 .",
    "assume now that @xmath242 , and hence @xmath244 for some @xmath187 .",
    "if @xmath414 , then by definition  [ def : q ] and previous remarks @xmath415 . finally if @xmath416 , then @xmath417 .",
    "since @xmath418 , we obtain in this case that @xmath419(i ) = [ \\pi(0,i)](i ) = i,\\ ] ] and hence @xmath420 .",
    "therefore , @xmath421 and @xmath422 , and so @xmath423 from this inequality we see , in particular , that for a given @xmath404 , the maximum value of @xmath384 among all vertex labelings of the star on @xmath47 vertices is @xmath413 . hence , we obtain the next observation as a special case .",
    "this special case was also observed both in  @xcite and in  @xcite . in our setting",
    "we can state the following .",
    "[ obs : star - tight ] let @xmath133 be the star on @xmath47 vertices , @xmath16 and @xmath39 vertex labelings , and @xmath424 , then the answer to the vertex relabeling problem is yes .",
    "that is , any labeled star on @xmath47 vertices can evolve into any other labeled star in @xmath424 mutations .",
    "moreover , this value of @xmath41 is the smallest possible with this property .",
    "a group - theoretical interpretation of this result is as follows .",
    "[ cor:3/2 ] let @xmath425 be a set of @xmath96 transpositions , all of which move a given element .",
    "then every permutation @xmath211 is a composition of at most @xmath424 transpositions from @xmath85 , and this value is the least @xmath41 with this property .",
    "we conclude this section by some observations that generalize even further what we have done for the path and the star , but first we need some additional notation and basic results .    for @xmath404 let @xmath426 be the complete graph on @xmath47 vertices , and let @xmath427 be a fixed numbering of the vertices .",
    "clearly , for each edge @xmath428 of @xmath426 there is a corresponding transposition @xmath429 in the symmetric group @xmath430 on @xmath182 , and vice versa , for each transposition @xmath431 yields an edge @xmath432 of @xmath426 .",
    "this correspondence is 1 - 1 in the sense that @xmath433 and @xmath434 for every @xmath435 and every @xmath436 .",
    "for edges @xmath437 of @xmath426 let @xmath438 $ ] be the simple graph induced ( or formed ) by these edges . in light of theorem",
    "[ thm : upper ] the following observation is clear .",
    "[ obs : spanning - tree ] the transpositions @xmath439 generate the symmetric group @xmath430 if and only if the graph @xmath440 $ ] contains a spanning tree of @xmath426 . in particular , @xmath441 must hold .",
    "consider now a connected simple graph @xmath442 on @xmath47 vertices , where @xmath443 is a fixed numbering .",
    "as before , a vertex labeling @xmath444 corresponds to a permutation @xmath90 of @xmath182 in @xmath430 .",
    "since @xmath3 is connected , it contains a spanning tree ; and hence , each vertex labeling @xmath16 of @xmath3 can be transformed to any other labeling @xmath39 of @xmath3 by a sequence of edge flips or mutations . as for the path and star , we have in general the following .",
    "[ thm : general - g ] let @xmath3 be a connected simple graph with @xmath443 . for vertex labelings",
    "@xmath445 there exists a symmetric nonnegative parameter @xmath446 and a function @xmath447 such that we have the following :    1 .",
    "the labeling @xmath16 can be transformed into @xmath39 in exactly @xmath41 edge flips if and only if @xmath448 for some nonnegative integer @xmath161 .",
    "every labeling @xmath16 can be transformed into another labeling @xmath39 in at most @xmath41 edge flips if and only if @xmath449 .    for a given graph @xmath3 and given vertex labelings @xmath16 and @xmath39 of @xmath3",
    ", we define the parameter @xmath446 as the minimum number of edge flips needed to transform @xmath16 into @xmath39 .",
    "this existence is guaranteed since every nonempty subset of @xmath450 contains a least element .",
    "if @xmath16 can be transformed into @xmath39 in @xmath41 edge flips , then by reversing the process @xmath39 can be transformed into @xmath16 in @xmath41 edge flips as well , so @xmath446 is clearly symmetric . by repeating the last edge",
    "flip an even number of times , it is clear that @xmath16 can be transformed into @xmath39 in @xmath451 edge flips .",
    "assume that @xmath16 can be transformed into @xmath39 in @xmath452 edge flips . by viewing the edge flips of @xmath41 and @xmath452 as permutations of @xmath430",
    ", they must have the same parity , so @xmath453 must be even .",
    "this completes the proof of the first part .    by theorem  [ thm : upper ]",
    "we have that @xmath454 for all vertex labelings @xmath16 and @xmath39 of @xmath3 .",
    "hence , the maximum of @xmath446 among all pairs of vertex labelings @xmath16 and @xmath39 is also at most @xmath83 .",
    "letting @xmath447 be this very maximum , the second part clearly follows .",
    "remark : using the notation of theorem  [ thm : general - g ] , what we have in particular is ( i ) @xmath455 for every connected graph @xmath3 on @xmath47 vertices , ( ii ) @xmath456 , the classical result on the number of inversions by muir  @xcite , and ( iii ) @xmath457 for the star .",
    "in this section we describe the last variants of the relabeling problem that we consider in this paper .",
    "we impose an additional restriction on the flip or mutate operation .",
    "some labels are designated as _",
    "privileged_. our restricted mutations can only take place if _ at least _",
    "one label of the pair to be mutated is a privileged label .",
    "the problem can be defined for vertices and for edges as follows .    *",
    "( * vertex relabeling with privileged labels problem * ) * + [ def : privileged ] a graph @xmath3 , labelings @xmath16 and @xmath39 , a nonempty set @xmath458 of privileged labels , and @xmath44 .",
    "+ question : can labeling @xmath16 evolve into @xmath39 in @xmath41 or fewer restricted vertex mutations ?    * ( * edge relabeling with privileged labels problem * ) * + [ def : privilegededge ] a graph @xmath3 , labelings @xmath19 and @xmath43 , a nonempty set @xmath459 of privileged labels , and @xmath44 .",
    "+ question : can labeling @xmath19 evolve into @xmath43 in @xmath41 or fewer restricted edge mutations ?    the problems in definitions  [ def : privileged ] and  [ def : privilegededge ] are increasingly restricted as the number of privileged labels decreases .",
    "of course , one question is whether the problems are solvable at all .",
    "if @xmath460 , the vertex relabeling with privileged labels problem can be reduced to the ( @xmath6)-puzzle problem , in which half of the starting configurations are not solvable  @xcite . this result proved in  @xcite shows that the vertex relabeling with privileged labels problem is _ np_-complete .    *",
    "( * ( @xmath6)-puzzle problem * ) * + [ def : nnpuzzle ] two @xmath6 board configurations @xmath461 and @xmath462 , and @xmath463 .",
    "+ question : is there a sequence of at most @xmath161 moves that transforms @xmath461 into @xmath462 ?    by reducing the ( @xmath6)-puzzle problem to the vertex graph relabeling with privileged labels problem , by taking @xmath3 as an @xmath6 mesh , @xmath16 corresponding to @xmath461 , @xmath39 corresponding to @xmath462 , @xmath464 corresponding to the blank space , and @xmath465 , it is not hard to see that the instance of the ( @xmath6)-puzzle problem is `` yes '' if and only if the answer to the constructed instance of the vertex graph relabeling with privileged labels problem is also `` yes '' .",
    "we summarize in the following .    *",
    "( * intractability , privileged labels * ) * [ obs : npcomplete ] the vertex graph relabeling with privileged labels problem is np - complete .    in theorem",
    "[ thm : same ] we proved that the vertex relabeling problem is _",
    "nc_@xmath4 many - one reducible to the edge relabeling problem , however , that reduction does not suffice when talking about the versions of the problems involving privileged labels .",
    "we do not yet know if the edge relabeling with privileged labels problem with @xmath466 is _ np_-complete .",
    "it is interesting to note that many other similar games and puzzles such as the generalized hex problem  @xcite , ( @xmath6)-checkers problem  @xcite , ( @xmath6)-go problem  @xcite , and the generalized geography problem  @xcite are also _ np_-complete .",
    "prior to observation  [ obs : npcomplete ] it was still open whether some other unsolvable instances of the vertex / edge relabeling with privileged labels problems existed .",
    "however , we provide some simple examples of unsolvable instances in this section and provide some interesting characterizations of both solvable and unsolvable instances of these problems .",
    "we begin with an example .",
    "example  a : let @xmath467 and consider two vertex labelings @xmath16 and @xmath39 of the path @xmath111 , where we have precisely @xmath161 privileged labels @xmath468 , where @xmath469 . for a fixed horizontal embedding of @xmath111 in the plane ,",
    "assume the labelings are given in the following left - to - right order : @xmath470 note that by any restricted mutation , where one of the labels are among @xmath471 , the relative left / right order of the non - privileged labels will remain unchanged .",
    "since the order of the two non - privileged labels @xmath472 and @xmath473 in @xmath39 is different from the one of @xmath16 , we see that it is impossible to evolve @xmath16 to @xmath39 by restricted mutations only .",
    "note that we can push these labels onto the edges by adding one more edge to the path .",
    "this example yields the following theorem .    *",
    "( * general insolubility , privileged labels * ) * + [ thm : gen - non ] among all connected vertex labeled graphs on @xmath47 vertices with @xmath161 privileged labels where @xmath474 , the vertex relabeling with privileged labels problem is , in general , unsolvable . among all connected edge labeled graphs on @xmath178 edges with @xmath161 privileged labels where @xmath475 , the edge relabeling with privileged labels problem is , in general , unsolvable .",
    "note that it is clear that for any connected graph @xmath3 with all labels but one being privileged , any mutation is a legitimate transformation , since for any edge @xmath476 either the label on @xmath33 or @xmath477 is privileged .",
    "hence , among all connected graphs on @xmath47 vertices with @xmath96 privileged labels , the vertex relabeling with privileged labels problem is solvable and in @xmath478 .",
    "a similar observation holds for the edge relabeling with privileged labels problem .    restricting now to the class of 2-connected simple graphs , we consider a slight variation of example  a.    example  b :",
    "let @xmath479 and consider two vertex labelings @xmath16 and @xmath39 of the cycle @xmath480 , where we have precisely @xmath161 privileged labels @xmath468 , where @xmath481 . for a fixed planar embedding of @xmath480 ,",
    "assume the labelings are given cyclically in clockwise order as follows : @xmath482 note that by any restricted mutation , where one of the labels are among @xmath471 , the relative orientation ( clockwise or anti - clockwise ) of the non - privileged labels @xmath472 , @xmath473 , and @xmath483 will remain unchanged .",
    "since the orientation of @xmath472 , @xmath473 , and @xmath483 in @xmath39 is anti - clockwise , and the opposite of the clockwise order of @xmath472 , @xmath473 , and @xmath483 in @xmath16 , we see again that it is impossible to evolve @xmath16 to @xmath39 by restricted mutations .",
    "notice that we can push the labels onto the edges .",
    "we summarize the implication of example  b in the following theorem .    *",
    "( * 2-connected insolubility , privileged labels * ) * + [ thm:2-conn - non ] among all 2-connected vertex labeled graphs on @xmath47 vertices with @xmath161 privileged labels where @xmath484 , the vertex relabeling with privileged labels problem is , in general , unsolvable . among all 2-connected edge labeled graphs on @xmath178 edges with @xmath161 privileged labels where @xmath485 , the edge relabeling with privileged labels problem is , in general , unsolvable .    we will now fully analyze the case where @xmath3 is connected and all but two of the labels are privileged .",
    "[ clm : non - path ] if a simple graph is neither a path nor a cycle , then it has a spanning tree that is not a path ( and hence contains a vertex of degree at least three ) .",
    "let @xmath3 be a graph that is neither a path nor a cycle .",
    "then @xmath3 contains a vertex @xmath33 of degree greater than or equal to three . assigning the weight of one to each edge",
    ", we start by choosing three edges with @xmath33 as an end - vertex and complete the construction of our spanning tree using kruskal s algorithm .",
    "[ clm : swap ] among vertex labeled trees , which are not paths , with exactly two non - privileged labels , any two labels can be swapped using restricted mutations .",
    "let @xmath0 be a tree that is not a path , and @xmath16 a labeling of the vertices .",
    "for any two distinct vertices @xmath486 and @xmath487 denote the unique path between them by @xmath488 .",
    "assume that we want to swap the labels @xmath489 and @xmath490 on vertices @xmath33 and @xmath477 .",
    "we first consider the case where all labels , except possibly one , on @xmath491 , are privileged . restricting to @xmath491 , there are @xmath492 legitimate mutations that swap the labels on @xmath33 and @xmath477 .",
    "( here @xmath493 denotes the distance between @xmath33 and @xmath477 in the tree , or the length of @xmath491 .",
    "this fact was noted in the remark right after the proof of theorem  [ thm : path - complete ] . )",
    "let us denote such a privileged swap by @xmath494 .",
    "consider next the case where the labels of @xmath33 and @xmath477 are both non - privileged .",
    "let @xmath495 and @xmath496 be vertices such that the @xmath497-path @xmath498 is of maximum length in the tree and such that it contains @xmath491 as a sub - path .",
    "hence , the three paths @xmath499 , @xmath491 , and @xmath500 make up this maximum length path @xmath498 . by the maximality of @xmath498 and our assumption on the tree",
    ", there is an internal vertex @xmath34 on @xmath498 ( note @xmath501 ) of degree three or more , and hence that has a neighbor @xmath502 not on @xmath498 .",
    "we now perform the following procedure of legitimate swaps :    1 .",
    "@xmath503 and @xmath504 , 2 .",
    "@xmath505 , 3 .",
    "@xmath506 , 4 .",
    "@xmath507 , 5 .",
    "@xmath503 and @xmath504 .",
    "this procedure has legitimately swapped the labels on @xmath33 and @xmath477 .",
    "if at least one of the labels of @xmath33 and @xmath477 is privileged , but both of the non - privileged labels do lie on @xmath491 , say @xmath486 and @xmath487 , then we can perform at least one of the swaps @xmath508 or @xmath509 , say @xmath508 , after which we perform the swaps @xmath510 and @xmath508 to complete the legitimate swap .",
    "the case where @xmath509 was performed first is handled similarly .",
    "this completes the proof .",
    "we can now state the following lemma .",
    "[ lmm : non - path - p ] among vertex labeled trees , which are not paths , with exactly two non - privileged labels , the vertex relabeling with privileged labels problem is solvable and in @xmath478 .",
    "since any transformation from one labeling @xmath16 to another @xmath39 is a composition of transpositions , this follows from claim  [ clm : swap ] .",
    "we now have the following summarizing theorem .    *",
    "( * vertex solubility , two privileged labels * ) * + [ thm : conn - iff ] among all connected vertex labeled graphs @xmath3 on @xmath511 vertices with all but two vertex labels privileged , the vertex relabeling with privileged labels problem is solvable if and only if @xmath3 is not a path .",
    "we see from example  a that for @xmath467 there are labelings of the vertices of the path @xmath111 that can not evolve into one another using restricted mutations .",
    "if @xmath3 is a cycle on @xmath511 vertices , we can first move the labels of the non - privileged labels to their desired places by using appropriate clockwise and/or anti - clockwise sequences of mutations , and then move all the privileged labels to their places using mutations as on a path .    if @xmath3 is neither a path nor a cycle , then by claim  [ clm : non - path ] @xmath3 has a spanning tree @xmath85 that is not a path . restricting to @xmath85 we can by lemma  [ lmm :",
    "non - path - p ] move all the labels to their desired places within @xmath85 and hence within @xmath3 .",
    "this completes our proof .",
    "we obtain the following corollary as a consequence of theorems  [ thm : conn - iff ] and  [ thm : same ] .    *",
    "( * edge solubility , two privileged labels * ) * + [ thm : conn - iff - edge ] among all connected edge labeled graphs @xmath3 on @xmath511 edges with all but two edge labels privileged , the edge relabeling with privileged labels problem is solvable if and only if @xmath3 is not a path .",
    "we have defined several versions of a graph relabeling problem , including variants involving vertices , edges , and privileged labels , and proved numerous results about the complexity of these problems , answering several open problems along the way .",
    "a number of interesting open problems remain as follows :    * study other types of mutation functions where , for example , labels along an entire path are mutated , or where labels can be reused . * in the parallel setting , compute the sequence of mutations required for the transformation of one labeling into another .",
    "the parallel time for computing the sequence could be much smaller than the sequential time to execute the mutation sequence .",
    "+ one result of interest in this direction is the problem of given a labeled graph , a _ prescribed flipping sequence _ , and two designated labels @xmath512 and @xmath513 are @xmath512 and @xmath513 flipped ?",
    "a prescribed flipping sequence is an ordering of edges in which each succeeding edge s labels may be flipped if and only if neither of its labels has already been flipped .",
    "this problem is _",
    "nc_-equivalent to the lexicographically first maximal matching problem , and so _ cc_-complete ; see  @xcite for a list of _ cc_-complete problems . * for various classes of graphs",
    "determine the probability of one labelings evolving naturally into another .",
    "such an evolution of a labeling could be used to model mutation periods .",
    "* study the properties of the graphs of all labelings . in this graph",
    "all labelings of a given graph are vertices and two vertices are connected if they are one mutation apart .",
    "other conditions for edge placement may also be worthwhile to examine . *",
    "determine if there is a version of the edge relabeling with privileged labels problem that is _ np_-complete .",
    "* define the _ cost of a mutation sequence _ to be the sum of the weights on all edges that are mutated . determine mutation sequences that minimize the cost of evolving one labeling into another .",
    "explore other cost functions .",
    "agnarsson , g. , greenlaw , r. , and kantabutra , s. the graph relabeling problem and its variants .",
    "proceedings of the fifth international conference in electrical engineering / electronics , computer , telecommunications , and information technology , krabi , thailand , pages  4952 , may  2008 .",
    "agnarsson , g. , greenlaw , r. , and kantabutra , s. the complexity of the evolution of graph labelings .",
    "proceedings of the ninth acis international conference on software engineering , artificial intelligence , networking and prallel / distributed computing ( snpd 2008 ) , phuket , thailand , pages  7984 , august  2008 .",
    "fraenkel , a.  s. , garey , m.  r. , johnson , d.  s. , schaefer , t. , and yesha , y. the complexity of checkers on an @xmath514 board  preliminary report , proceedings of the @xmath515 annual symposium on the foundations of computer science , ieee computer society , long beach , ca , pages  5564 , 1978 .",
    "greenlaw , r. , halldrsson , m. , and petreschi , r. on computing prfer codes and their corresponding trees optimally in parallel ( extended abstract ) .",
    "proceedings of journes de linformatique messine ( jim 2000 ) , universit de metz , france , laboratoire dinformatique thorique et applique , editor d.  kratsch , pages 125130 , 2000 .",
    "misic , j. multicomputer interconnection network based on a star graph .",
    "proceedings of the twenty - fourth annual hawaii international conference on system sciences .",
    "ieee computer society , * 2:*373381 , 1991 .",
    "slocum , j.  and sonneveld , d. the 15 puzzle : how it drove the world crazy .",
    "the puzzle that started the craze of 1880 .",
    "how america s greatest puzzle designer , sam loyd , fooled everyone for 115 years .",
    "beverly hills , ca , slocum puzzle foundation , 2006 ."
  ],
  "abstract_text": [
    "<S> we study the graph relabeling problem  given an undirected , connected , simple graph @xmath0 , two labelings @xmath1 and @xmath2 of @xmath3 , and label _ flip _ or _ mutation _ functions determine the complexity of transforming or evolving the labeling @xmath1 into @xmath2 . </S>",
    "<S> the transformation of @xmath1 into @xmath2 can be viewed as an evolutionary process governed by the types of flips or mutations allowed . </S>",
    "<S> the number of applications of the function is the duration of the evolutionary period . </S>",
    "<S> the labels may reside on the vertices or the edges . </S>",
    "<S> we prove that vertex and edge relabelings have closely related computational complexities . </S>",
    "<S> upper and lower bounds on the number of mutations required to evolve one labeling into another in a general graph are given . </S>",
    "<S> exact bounds for the number of mutations required to evolve paths and stars are given . </S>",
    "<S> this corresponds to computing the exact distance between two vertices in the corresponding _ </S>",
    "<S> cayley graph_. we finally explore both vertex and edge relabeling with _ privileged labels _ , and resolve some open problems by providing precise characterizations of when these problems are solvable . </S>",
    "<S> many of our results include algorithms for solving the problems , and in all cases the algorithms are polynomial - time . </S>",
    "<S> the problems studied have applications in areas such as bioinformatics , networks , and vlsi .    3.5ex </S>"
  ]
}
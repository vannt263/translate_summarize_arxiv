{
  "article_text": [
    "modern standards for representations of mathematical knowledge and easily accessible software tools greatly benefit education , and scientific and technical publishing .",
    "for instance , a good number of software systems supporting the mathml standard have been helping to develop valuable distance learning models , web - based education , and electronic textbooks , which would not be available if one could only use static images , prepared in advance , instead of more natural ways for students and teachers to present and exchange formulas and diagrams .",
    "such communication including mathematical data fosters an understanding between teachers and students when studying disciplines with strong mathematical backgrounds , since it is necessary not only to illustrate ideas , but also to have confirmation that the student has gained insight into the material .",
    "a rendering of mathematical notation is not the only thing needed in such scenarios , because it is the underlying mathematical structure of an expression that must be considered ( and maybe examined using additional software ) , and not any particular rendering of an expression .",
    "this means that , in the face of poor software support for mathematical content standards , this communication process takes a turn for the worse .",
    "there are good ways to represent and reuse mathematical content data with existing standards ( the content markup part of mathml @xcite , openmath @xcite ) , and so it is becoming increasingly important to find ways of expanding our ability to support these standards in software .",
    "this paper presents a short description of one such software system , namely the formulator mathml editor project @xcite ( ` http://www.mmlsoft.com ` ) .",
    "we demonstrate how support for a mathematical content standard is achieved in the context of formulator project and discuss features of this mathml editor that provides a user with a wysiwyg editing style while authoring mathml documents with content or mixed markup .",
    "a lot of software systems for authoring mathematical documents are available , and many of them have support for mathml , either directly or through some conversion . many references to well - known software tools and research or prototype projects can be found on the mathml software list maintained by w3c @xcite .",
    "however , if we have in mind support of mathematical content standards , it does not matter how many good products help one to type in a mathematical expression if they can not help produce some mathematical content output",
    ".    filtered by requiring support for content mathml , the list still includes many interesting projects , e.g. , the semantically oriented formula editor wiris om tools @xcite , integre mathml equation editor @xcite , mathdox @xcite , and new attempts to bring an interactive editing process to the web , like the connexions mathml editor @xcite .    however , an exacting user , seeking to meet the requirements of a better and quicker interaction in the field of expressing mathematical ideas , would even now not be completely satisfied for different reasons in each case @xcite@xcite , and this is natural in view of intricacy of the task .",
    "one of the important causes of failure to satisfy a user s wishes is that there is more to making mathematical information a useful resource in interactive applications than merely bringing together a common set of components and attributes adopted from the standard .",
    "visual representation and user friendliness of an interface are ultimately also expected by users .",
    "the main usability issue of existing software systems is that a user has to understand the structure of content mathml in order to edit an expression , and this is a considerable disadvantage , since users are often not that technically minded .",
    "an extensive review of common pitfalls and a comparison of behaviors for several editors for mathematical content is given in @xcite .",
    "among the issues mentioned there , an important place is occupied by the problem of exposing the internal document model to a user .",
    "presentation - oriented editors can solve the problems of edit point support and understandable navigation rules easily , but such issues can be a serious obstacle for content editors trying to be user - friendly if they consider the underlying standard of mathematical content encoding to be a central source of the editing procedure .",
    "true user friendliness can not be achieved using the mechanical approach of just wrapping content mathml constructs in buttons and menu items . in such systems ,",
    "a developer allows a user to forget content mathml entity names , but still forces the user to bear in mind the tree - like structures of a text while creating a mathematical expression , not to mention a need for post - editing .",
    "obviously there is a big distance between a usual mathematical editing concentrated on the visual representation of an expression , and the confusing effort to mentally synchronize rendering and semantic aspects of an expression .",
    "the last differs quite dramatically both from our experience of using legacy systems with linear mathematical input , and from the exploitation of two - dimensional input forms usual for mathematical equation editors .",
    "these obstacles are natural consequences of attempts to represent the semantics in a different way from purely mental exercises .",
    "any kind of user friendliness in such matters entails compromises between a shape and contents .",
    "so , in addition to general problems of human - computer interaction , concerned software developers must address a number of supplementary issues .",
    "demanding a well - formed and finished content mathml document is not a great help to a developer who needs to build an interactive system . during the editing process",
    ", there are ambiguities which either can only be solved at the cost of a deeper analysis of the context , or are doomed to be left unresolved pending user hints .",
    "the first approach of context analysis leads to performance problems , the second is not user friendly . but to neglect resolving ambiguities is also not a good way if one is trying to provide lasting correctness of the mathematical content output .",
    "thus we have a classical triangle of alternatives , where software performance , permanent output correctness , and user friendliness occupy three corners , and existing systems far too often implement only a single edge in this triangle .",
    "while having every respect for the efforts and achievements of our colleagues in the field and by no means pretending to cover in full the triangle of alternatives for content mathml editing , we hopefully have some advances in the formulator mathml editor project which helps to bring a process of authoring mathml documents with content or mixed markup nearer to a user s needs .",
    "the formulator mathml editor project was started in 2003 as part of an on - site computer algebra system @xcite . since than the project has grown from a product - oriented mathematical expression editor to a set of desktop and online software tools for editing and rendering mathml documents . over the years",
    ", a number of successful use cases have shown the suitability of the formulator software for a wide audience of software developers , educators , authors , and students . among featured",
    "projects are the standards unit mathematics project at the uk dfes @xcite , commercial applications , regional education service centers and educational institutions in the usa and eu .",
    "the main components of the formulator software are :    * _ formulator mathml weaver _ : a desktop application for wysiwyg editing of presentation and content mathml documents .",
    "there is a proprietary version for ms windows and an open source cross - platform version , available from sourceforge and google code sites .",
    "+ * _ mathematical templates builder _ : an utility for customizing and amending a dictionary of mathematical symbols and templates .",
    "this tool ensures formulator openness in the sense that a user can change the look and style of a set of existing mathematical constructs without accessing the software source code .",
    "this is possible because templates are explicitly defined and can be edited in text form , and a simple built - in language is available to specify the dynamic behavior of graphics and to edit input slots in some complicated situations . during a run - time",
    "the built - in language provides a way to calculate coordinates and sizes of graphics objects and edit boxes , margins of a template and its child objects .",
    "the simple structure of the language guarantees its fast run - time interpretation and leads to effective rendering of equations .",
    "+ * _ formulator activex control and api _ : component editions of the desktop editor which are intended for a software developer who needs to build an application aware of the mathematical typesetting and semantic rules .",
    "+ * _ formulator ie performer _ : a plug - in for internet explorer to render mathml fragments inside web pages ( similar to mathplayer @xcite ) . + * _ online mathml editor _ : a mathml editor in the form of a distributed web application that should be run inside an internet browser .",
    "considered in the role of a presentation formula editor formulator is similar to a majority of mathematical expression editors embedded in office products such as openoffice.org and ms office , and to well - known wysiwyg formula editors , for example , mathtype @xcite . among its notable supplements",
    "are several dedicated model views for clearer understanding and fine tuning of the mathml document structure , and additional tools for developers and advanced users to enable enhancing the editor s functionality and to build new software applications which use the formula editor .    as a content editing system",
    "the formulator software is far from being completely satisfactory yet , and we definitely lack feedback from existing users worldwide and large - scale user studies . on the other hand , a frame of reference can be achieved using comparison with content editors mentioned earlier , from the methodological and survey papers such as @xcite@xcite , from feedback about formulator s suitability for learners ( the autograph maths software @xcite ) and instructors ( the connexions project @xcite ) .    as a mathematical content editor",
    "the formulator project is designed from the start as an intuitive and visually oriented tool .",
    "it offers what the paper @xcite calls `` natural editing of algebraic expressions '' with the operations , natural for a presentation formula editor , of insertion , deletion , selection , cut , copy , paste , drag and drop .",
    "the modes of editing and navigation are consistent with the `` what - you - see - is - what - you - get '' principle , supporting edit - point feedback and accessibility , geometric moves , reversing of moves , deterministic moves , slot navigation and selection flexibility @xcite .",
    "in addition to simple `` natural editing '' procedures , the formulator editor has support for advanced modes , which are described in @xcite for the aplusix software and wiris om tools : syntactically basic enhancements ( recognition of mathematical operators and parentheses , arity representation ) , enhanced backspace and delete operations , algebraic selections , and automatic bracketing in accordance with changing operator precedence .    the model chosen for the formulator editor to enhance backspace , delete and insert operations differs from that proposed in @xcite .",
    "the latter approach has an advantage in the case of unary operators and derives a deeper benefit from insights into user intentions , for instance , in manipulations with selections and operand movements .",
    "the formulator mathml editor employs semantic information about a document in a different way , for example , by evaluating simple content mathml formulas and formula chains with user variables .",
    "we expect to enhance the editing process in the formulator editor further by additional utilization of semantic information .",
    "the nature of content mathml differs radically from presentation mathml , as they are used to define different aspects of mathematics .",
    "presentation elements describe the visually important two - dimensional hierarchical forms and thus give more or less precise instructions on how to render and how to edit mathematical constructs .",
    "content markup follows closely the semantic structure of mathematical objects .",
    "consolidation of these two quite different formats into one document structure seems overly complicated from a software implementation point of view , and it appears a good idea to have one dominant format .    since initially the formulator mathml editor was as a tool for presentation mathml authoring , our aim was to bring semantics into existing visual editing and to retain user friendliness . in this way",
    ", the document structure in formulator has support for presentation mathml , both encouraging development of the editing process of content mathml formulas in a common visual style without exposing implementation details of the content mathml format , and keeping good software performance while rendering and editing the document .",
    "the internal document model is a tree of four basic node types , holding additional attributes as reference information : ( 1 ) an input slot , ( 2 ) a line of horizontally neighboring text and formula nodes , ( 3 ) a formula , composed of input slots and graphics , and ( 4 ) plain text .",
    "this document structure allows carrying out the initial task of creating content mathml expressions by relating each semantic construct with corresponding visual elements and by adding supplementary nodes , which are invisible either from rendering or from the semantic point of view .",
    "further free - style operations also require more labeling throughout a document to account for intermediate editing states , which inevitably break the proper content mathml format .",
    "thus a compromise must be found between maintaining semantic correctness of the document model and user operations which are incompatible with expression semantics ( e.g. , brackets which are not balanced ) .",
    "for instance , in the context of presentation mathml the formula `` @xmath0 '' is presented by the trivial hierarchy of fig .",
    "[ fig:1a ] , but an essentially more verbose document structure is needed to implement the free style of editing in the context of content mathml , fig .",
    "[ fig:1b ] .",
    "in addition to more complicated document structure , there are attributes and hidden reference nodes , which guarantee correctness of the formula during editing actions and are used to produce proper content mathml output from this structure .",
    "e.g. , `` do not edit '' and `` do not move '' attributes are used to preserve the mathematical template and to provide a user with comfortable navigation through nodes ( no `` fake moves '' @xcite , each user action corresponds to an understandable movement of the caret marking the insertion point ) .",
    "some formula nodes are marked with `` auto - detect self entity by contents '' attributes and do not recognize their type until a user finishes editing and wants to save or to export a formula to mathml .",
    "the combination of these attributes allows one to remove parts of a formula and to insert quite different kinds of elements , for instance , a division operator instead of a token element , and still to have a proper output .",
    "the `` auto - detect '' attribute is one of the reasons for the verbosity in a document structure , but at the same time it is a way to avoid the rigidity of a template - based editing procedure .",
    "earlier versions of the formulator mathml editor implemented a template - based approach to content mathml creation , where each new construct was chosen from a palette of atomic formulas and had to be placed into some input slot of previously used constructs .",
    "users in experiments we conducted with creating and post - editing of content formulas gave us feedback on usability issues , concentrating on the uncomfortable rigidity of templates with a read - only structure and several edit spots , and on the confusing view of the editing process as building a tree .",
    "on the other hand , just considering this approach to be faulty seems to be going too far . amongst",
    "the good ideas of a template - based approach are supporting a user with run - time information about proper formula structures , quick construction of new formulas from basic building blocks , and an editing style that facilitates general correctness of a document from a semantic point of view .    in moving towards improved usability of content mathml support",
    ", we prefer evolutionary changes rather than revolutionary ones , and so combine the existing positive features of the template - based approach with a newly implemented free style of editing .",
    "the change is to replace rigid templates with a more fluid structure that can be changed by a user , instead of the former frustrating experience of having to delete a template as a whole .",
    "an important aspect of this proposed free - style editing is that changing the structure of a content mathml formula is closer to the behavior of a state machine than , for instance , to plain text editing .",
    "this means that we preserve run - time hints and explicit correctness of the template - based approach by transforming one proper structure of an expression to another one as a response to user insertions and deletions .",
    "such a process seems more reliable and predictable in comparison with encouraging a user to go ahead and to break down an expression , with the hope that later the user will manage to reassemble the expression in a semantically proper way .",
    "the latter would be more like a computer programming , and maybe that is too much to expect from not so technically minded users .      in order to realize our conception of free - style editing , we paid attention to such important aspects of the input system as random post - editing , insertion , deletion of mathematical operators and whole expressions , automatic completion of an expression , and a model for bracket editing .",
    "for instance , once an operator has been entered it was impossible in the earlier versions to change or delete it without deleting the entire sub - tree containing it . if a user entered `` @xmath1 '' and then wanted to change it to `` @xmath2 '' , it was impossible to position the cursor at the ` @xmath3 ' operator to change it to a ` @xmath4 ' .",
    "instead the whole template of `` @xmath1 '' had to be deleted and re - entered .",
    "now a user can edit initially read - only mathematical operators by deleting them ( a black box appears instead , standing for `` no operation '' , see fig .",
    "[ fig:2b ] ) , and later typing in a new mathematical operator .",
    "this black box preserves the correct expression structure , hints that the editing process should be continued to recover expression correctness , and allows a user to change it into a needed mathematical operator from a palette , while still being protected from unconditional deletion from the expression .",
    "this example shows also that a sequence of characters can be converted ( where it is possible ) to a mathematical operator that has no direct equivalent on a keyboard . for instance , by typing the ` @xmath5 ' operator and then immediately typing the ` @xmath6 ' operator , we will get a new ` @xmath7 ' operator .",
    "the feature of automatic replacement does not exclude any subset of proper expressions , since it can be undone if not wanted , thus leading to more complicated structures with nested mathematical operations .",
    "another example of free - style editing is changing the structure of a formula by explicit insertion or deletion of brackets ( in contrast to the implicit brackets used where required by a combination of the existing structure of an expression and mathematical precedence information ) .",
    "what we are looking for is an editing procedure that is as similar to linear text entry as possible , both for the initial input of an expression and the subsequent editing of it .",
    "again , since we do not want the user to have to understand the structure of content mathml , the main challenges are :    * to save valid mathml even when a user opens brackets and does not close them , and * to find a proper transition from an old formula structure to a new one after a selection is made that should be inserted into brackets .    the second problem ( i.e. , genuine changing of a formula structure ) seems to have no universal solution because of possible ambiguities .",
    "thus , a user can break an existing bracketed expression by enclosing only a part of this expression in a new pair of brackets along with the rest of the formula that initially lies outside the previously existing brackets ( fig .",
    "[ fig:3b ] ) .",
    "nevertheless , formulator mathml editor implements a smart method for solving such ambiguities and where it is possible ( in most cases , as our practice shows ) a formula structure is changed predictably and clearly for a user .    the transitions of a formula s structure discussed above can be reverted by using further editing operations . although a bracketed expression is treated in accordance with the underlying template as having read - only brackets and several input slots inside them , this structure is not rigid and can be altered if a user presses the delete button and a caret is standing before the left bracket , or if a user presses the backspace button and a caret is standing after the right bracket ( fig .",
    "[ fig:4 ] ) .",
    "there is one more enhancement of the content mathml editing process in the formulator mathml editor project that can be valuable for users accustomed to legacy systems with a plain text mathematical input .",
    "this means a procedure similar to linear input that tries to express mathematical equations using just keyboard characters , for instance , the circumflex ` ^ ' sign for an exponentiation and the ` / ' sign for a fraction or division , as in `` @xmath8 '' .",
    "support for this input mode allows an easy transition to the formulator entry system for users who are used to the legacy style , and also allows faster and easier input in some special cases using only a keyboard without a mouse .",
    "improved usability of this sort means that users are able to enter expressions intuitively with a sequence of key presses .",
    "for instance , the equation @xmath9 should be entered by pressing ` y ' , ` = ' , ` s ' , ` i ' , ` n ' , ` x ' , and an equation @xmath10 should be entered by pressing : ` y ' , ` = ' , ` 2 ' , ` a ' , ` a ' , ` b ' .",
    "no mathematical operator buttons or screen forms are used in either example , but as a trade - off for using such shortcuts we assume that a user has only variables of one - letter length .",
    "in addition to the legacy input style , there are also a few special cases , where a certain sequence of key presses can generate slightly different but more intuitive input strings ( for instance , several sequential presses of the letter ` a ' generate exponentiation instead of multiplication ) .",
    "more is expected , and thus user friendly behavior is also provided by using information about operator precedence to automatically help a user to navigate through the text ; namely , the editor automatically shifts a caret forward in situations where a user of a legacy software would expect this .",
    "for instance , when a user types ` y ' , ` = ' , ` 1 ' , ` / ' , ` x ' ,  + , ` 1 ' , in basic editing mode the formula would be considered as `` @xmath11 '' , since a caret is near the ` @xmath12 ' position and the ` @xmath3 ' operator is normally associated with a caret focus . in order to meet user expectations this rule",
    "is adjusted during legacy style input ( by considering precedences of division and addition operators ) , so that we get exactly the formula `` @xmath13 '' , as a user would expect who is used to textual mathematical input .",
    "guided by a vision of public accessibility of technologies for learning activities creating and authoring documents containing mathematical data , the formulator mathml editor project is evolving to enhance its availability to different kinds of end - users , from students to software developers .      1 .",
    "porting the formulator mathml editor project to mac os x and linux operating systems ( in addition to ms windows that was supported initially ) and issuing this new version of the formulator mathml editor project with an open source license . 2 .",
    "developing an online version of the editor that runs inside a web browser in a form of rich internet application ( fig .",
    "[ fig:5 ] ) .",
    "the second step is the more challenging , because basically the editor uses native code to get more performance and a better appearance .",
    "it turns out that a good way to solve the problem lies in using a browser plug - in ( in contrast to a scripting language approach ) as a client of the editor s algorithmic core that runs remotely as a native application .",
    "the general picture of this solution includes a server part and a thin silverlight client working inside a browser ; in an ideal case this should not depend on the operating system at all .",
    "actually , this scheme is too good to be true , and in a real world scenario the user is limited to a combination of internet browser and operating system that already has support for the silverlight plug - in .",
    "furthermore , there are some delicate issues where the choice of a browser does matter ( for example , when working with the clipboard of an operating system ) .",
    "it is important that generally the online formulator editor not be restricted to the silverlight plug - in .",
    "it should work with any other similar technology as well .",
    "the choice of the browser plug - in approach ( in contrast to a scripting language method ) is a more fundamental point than the choice of a silverlight , flash or some other plug - in .",
    "further improvements in the efficiency and functionality of this online version of the formulator mathml editor are matters for future work , although tests which have been conducted show acceptable performance for the core editing functions already implemented .",
    "moreover , it seems that by installing a server part within a local area network of an organization where formulator is used even more efficient behavior can be achieved .",
    "currently , the online version of the formulator mathml editor is available on our test server , and the set of features implemented is already sufficient to perform most popular operations , such as : to create / open / save formulas in presentation , content and mixed mathml markup ; to export formulas to mathml text or to an image ; to cut / copy / paste formulas .",
    "future plans include making a thicker client , and evolving the server part to a more usable environment , for instance , closer to online word processor functionality .",
    "one more interesting opportunity that is opened after creating the silverlight version of the formulator mathml software is to build more complicated scenarios for education above a layer of online mathematical editing , for instance , to support interactive online learning activity .",
    "andriy kovalchuk , vyacheslav levitsky , igor samolyuk , valentyn yanchuk .",
    "establishing comprehensive interface for authoring mathematical expressions with the formulator , mathml equation editor .",
    "_ wspolczesne problemy informatyki : problemy analizy i projektowania sieci komputerowych _ , pages 47 - 58 .",
    "legnica , 2005 .",
    "d. marqus , r. eixarch , g. casanellas , b. martinez .",
    "wiris om tools : a semantic formula editor . in _ proceedings of the 2006 mathematical user - interfaces workshop _ , st anne s manor , wokingham , united kingdom .",
    "luca padovani , riccardo solmi .",
    "an investigation on the dynamics of direct - manipulation editors for mathematics .",
    "in _ proceedings of the 3rd international conference on mathematical knowledge management 2004 _ , volume 3119 of lncs , pages 302 - 316 .",
    "springer - verlag , 2004 .",
    "jean - franois nicaud .",
    "natural editing of algebraic expressions . in",
    "_ proceedings of the mathematical user - interfaces workshop ( mathui 2007 ) at the 6th mathematical knowledge management conference _ , schloss hagenberg , linz , austria , 2007 . `",
    "http://www.activemath.org/workshops/mathui/07/proceedings ` .",
    "a.m. cohen , h. cuypers , d. jibetean , m. spanbroek . interactive learning and mathematical calculus . in _ proceedings of the 4th international conference on mathematical knowledge management 2005 _ ,",
    "volume 3863 of lncs , pages 330 - 345 .",
    "springer - verlag , 2005 .",
    "mykola kolodnytsky , andriy kovalchuk , sergiy kuryata , vyacheslav levitsky .",
    "the mathematical software implementation for computational algebra and number theory . in _ proceedings of the 4th asian symposium on computer mathematics 2000",
    "_ , page 291 - 294 , chiang mai , thailand , 2000 .",
    "anton n. dragunov , jonathan l. herlocker .",
    "designing intelligent and dynamic interfaces for communicating mathematics . in _ proceedings of the 2003 international conference on intelligent user interfaces _",
    ", page 236 - 238 .",
    "miami , usa , 2003 ."
  ],
  "abstract_text": [
    "<S> implementation of an editing process for content mathml formulas in common visual style is a real challenge for a software developer who does not really want the user to have to understand the structure of content mathml in order to edit an expression , since it is expected that users are often not that technically minded . in this paper , we demonstrate how this aim is achieved in the context of the formulator project and discuss features of this mathml editor , which provides a user with a wysiwyg editing style while authoring mathml documents with content or mixed markup . </S>",
    "<S> we also present the approach taken to enhance availability of the mathml editor to end - users , demonstrating an online version of the editor that runs inside a web browser .    </S>",
    "<S> content mathml , mathematical formula , natural editing of algebraic expressions , model - based editor , online mathml equation editor </S>"
  ]
}
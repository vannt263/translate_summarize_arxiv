{
  "article_text": [
    "monte carlo simulation is a standard method to study statistical physics of many body problems @xcite .",
    "the advance in computer hardware together with the development of software has enhanced the importance of monte carlo simulation all the time . the general purpose computing using the graphics processing unit ( gpu ) is a hot topic in computer science ; using the common unified device architecture ( cuda ) released by nvidia , it is now easy to implement algorithms on gpu using standard c or c++ language with cuda specific extension .",
    "@xcite proposed the efficient use of gpu for the metropolis - type @xcite single spin flip monte carlo simulation of classical spin systems .",
    "@xcite reported the acceleration of the computation 60 times for the two - dimensional ( 2d ) ising model , and 35 times for the three - dimensional ( 3d ) ising model compared to the cpu computation using a current cpu core .",
    "the parallel computing using a gpu is realized by interpenetrating sublattice decomposition , which is the same as vector computers in 1980s . block _",
    "@xcite further discussed the use of multiple gpus for the monte carlo simulation as well as the multispin coding technique .",
    "the single spin flip metropolis simulation often suffers from the problem of slow dynamics ; that is , it takes long time for equilibration , for example , at temperatures near the critical temperature of the phase transition . to conquer the problem of slow dynamics ,",
    "the cluster spin flip algorithms of monte carlo simulation have been proposed .",
    "the multi - cluster spin flip algorithm due to swendsen and wang @xcite and the single - cluster spin flip algorithm due to wolff @xcite are typical examples .",
    "the parallelization of cluster spin flip algorithm is not straightforward because the cluster labeling part of the cluster spin flip algorithm basically requires a sequential calculation , which is in contrast to the local calculation for the single spin flip algorithm .",
    "the present authors @xcite proposed the gpu computing for the swendsen - wang ( sw ) multi - cluster spin flip algorithm , where the idea of hawick _ et al . _",
    "@xcite was used in the cluster labeling part .",
    "an improved version of the cluster labeling algorithm was proposed by kalentev _",
    "_ @xcite . the present authors @xcite reported the acceleration of the gpu computing with 12.4 times for the sw algorithm of the 2d ising model , in comparison with the cpu computing using a current cpu core .",
    "the present authors @xcite extended the gpu computation for the sw multi - cluster spin flip algorithm to the multiple gpu computation , where two steps of parallelization are used , that is , the parallelization within each gpu and the inter - gpu parallelization .",
    "the multiple gpu computation of the multi - cluster spin flip algorithm was applied to the large - scale monte carlo simulation of the 2d classical xy model up to the system size @xmath1 @xcite ; the kosterlitz - thouless @xcite transition temperature and the exponent to specify the multiplicative logarithmic correction were precisely determined .",
    "we note that the present authors also proposed the gpu computing for the wolff single - cluster spin flip algorithm @xcite , although the efficiency of the acceleration was not so good as compared to the case of the multi - cluster spin flip algorithm .    here ,",
    "we publicize sample cuda programs for the gpu computing of the multi - cluster spin flip algorithm , and explain the details of the sample programs",
    ". we deal with the following classical spin models ;    * 2d ising model , * 2d potts model , * 2d classical xy model , * 3d ising model , * 3d potts model , * 3d classical xy model .    as for the lattice , both",
    "the 2d ( square ) lattice and the 3d ( simple cubic ) lattice are treated .",
    "the hamiltonian of the ising model is given by @xmath2 here , @xmath3 is the coupling and @xmath4 is the ising spin on the lattice site @xmath5 .",
    "the summation is taken over the nearest neighbor pairs @xmath6 .",
    "periodic boundary conditions are employed .",
    "the @xmath0-state potts model is an extension of the ising model to the potts spin with @xmath0 states , whose hamiltonian is @xmath7 where @xmath8 is the kronecker s delta .",
    "the 2-state potts model is essentially the same as the ising model except for the energy unit , but we separately give the program of the ising model because it is easy for readers to start with the ising model as a basic model . finally , the hamiltonian of the classical xy model , a continuous spin model , is given by @xmath9 where @xmath10 is a planar unit vector with two real components , @xmath11 .",
    "for actual implementation , the value of @xmath12 is discretized as @xmath13 with @xmath14 .",
    "this discretized model is referred to as the @xmath0-state clock model .",
    "when @xmath0 tends to infinity , the clock model becomes the classical xy model . to make a cluster flip of vector spins",
    ", we use the idea of embedded cluster introduced by wolff @xcite .",
    "the rest of the paper is organized as follows . in section 2 ,",
    "we briefly describe the sw multi - cluster spin flip algorithm and its gpu implementation for the ising model as an example . in section 3 ,",
    "we report the performance of the present gpu implementation for the 3d ising and xy models .",
    "we show the calculated results of the moment ratio for these models , and discuss the phase transitions .",
    "we note that we already reported the performance of the 2d models in ref .",
    "we give the summary and discussion in section 4 .",
    "in the sw multi - cluster spin flip algorithm @xcite , we flip clusters of spins at once . the sw algorithm for the ising model , eq .",
    "( [ ising ] ) , consists of three main steps :    * _ step of active bond generation _ : construct a bond lattice of active or non - active bonds with probability @xmath15 , where @xmath16 is the temperature . *",
    "_ step of cluster labeling _ : the active bonds partition the spins into clusters which are identified and labeled using a cluster - labeling algorithm . * _ step of spin flip _ : all spins in each cluster are set randomly to + 1 or -1 .",
    "we should consider how to make parallel computation when we use gpus .",
    "since the calculations of the step of active bond generation and the step of spin flip are done independently on each site , these steps are well suited for parallel computation on gpu . in the cpu computation of the step of cluster labeling , the hoshen - kopelman algorithm @xcite , which was first introduced in context of cluster percolation , is often used as an efficient algorithm .",
    "the hoshen - kopelman algorithm is a special version of the class of union - and - find algorithms @xcite .",
    "since the assignment of label of cluster is done on each site piece by piece sequentially in the hoshen - kopelman algorithm , it is not straightforward to extend to parallel computing .",
    "recently , hawick _ et al . _",
    "@xcite investigated the cluster - labeling algorithm efficient for gpu calculation .",
    "they proposed the labeling method of `` label equivalence '' .",
    "the procedure of their algorithm was schematically explained in fig . 1 of ref",
    ". @xcite . in the cuda program ,",
    "the gpu `` kernel '' is invoked .",
    "the algorithm of hawick _ et al .",
    "_ consists of three kernel functions , that is , scanning function , analysis function and labeling function , and two variables for labeling ; one is a variable for saving the label , ` label ` , and the other is a temporal variable for updated label , ` r ` .",
    "the scanning function compares the label of each site with that of the nearest - neighbor sites when the bond between each site and the nearest - neighbor site is active .",
    "if the label of the nearest - neighbor site is smaller than the label of that site , the temporal variable with the label number , ` r[label[index ] ] ` , is updated to the smallest one . for the update of the temporal variable on the scanning function , the atomic operation ` atomicmin ( ) ` is used .",
    "atomic operations provided by cuda are performed without interference from any other threads .",
    "the analysis function resolves the equivalence chain of ` r ` ; the temporal variable ` r[index ] ` is updated from the starting site to the new site .",
    "each thread checks the temporal variable and the label on each site . when the label number , ` label ` , is equal to the thread number , ` index `",
    ", each thread tracks back the temporal variable until the temporal variable , ` r ` , remains unchanged .",
    "since each thread executes this operation concurrently , the final value is reached quickly .",
    "the labeling function updates the label for saving by ` label[index ] `",
    "@xmath17 ` r[label[index ] ] ` . in the cluster - labeling algorithm of hawick _ et al .",
    "_ , the loop including three functions is iterated up to the point when the information of the labeling needs no more process of scanning function .    more recently , kalentev _ et al .",
    "@xcite reported the refinement of the algorithm .",
    "the procedure of their algorithm is explained in fig . 2 of ref .",
    "they used only one variable for labeling instead of two because there is no need for a temporal reference ; the implementation was improved in terms of memory consumption .",
    "it means that the number of kernel functions are reduced from three to two because the process of the labeling function is no more needed .",
    "they changed the execution condition on the analysis function , and eliminated the atomic operation . with the refinements due to kalentev _",
    "_ , the improvement of computational speed and the reduction of the memory usage were realized .",
    "now we explain our program ` aaaa ` in detail .",
    "the system size is represented by ` nx*nx ` for 2d models and ` nx*nx*nx ` for 3d models , where ` nx ` should be a multiple of 32 . as for 2d models , the maximum size of ` nx ` is 4096 or so , depending on memory size of gpu .",
    "if we use gtx580 , the maximum linear size is 4096 , whereas that is 8192 if we use gtx680 , for example . as for 3d models ,",
    "the maximum linear size is 256 for gtx580 , whereas that is 512 for gtx680 . for the cluster - labeling algorithm",
    ", we can choose either the algorithm of hawick _ et al . _",
    "( ` algorithm = 0 ` ) , or the algorithm by kalentev _ et al . _",
    "( ` algorithm = 1 ` ) .",
    "the number of monte carlo steps ( mcss ) per spin for discard is denoted by ` mcs1 ` , whereas the number of mcss per spin for measurement is denoted by ` mcs2 ` .",
    "the kernel function @xmath18 is a function for setting initial spin configuration .",
    "the kernel function for the step of active bond generation is @xmath19 and @xmath20 for the algorithm of hawick _ et al . _ and for the algorithm of kalentev _ et al .",
    "_ , respectively .",
    "three kernel functions , @xmath21 are used in the step of cluster labeling for the algorithm of hawick _ et al .",
    "_ , whereas two kernel functions @xmath22 are used in the step of cluster labeling for the algorithm of kalentev _ et al . _ the kernel functions @xmath23 are used in the step of spin flip .",
    "the kernel function @xmath24 is a function for measuring physical quantities .    for this sample program",
    ", we measure the magnetization @xmath25 and the total energy , eq .",
    "( [ ising ] ) . in the calculation of total sum , reduction of data is important to avoid data confliction . for the outputs",
    ", we print the 2nd moment of magnetization , the 4th moment of magnetization , the total energy per spin , and the specific heat per spin .",
    "we also print the computational time for spin - flip and the computational time for spin - flip together with measurement of magnetization and energy . the computation time is represented in units of milliseconds per a single mcs",
    "it is easy to extend our sample program to calculate other quantities , such as the correlation function , the helicity modulus , etc .",
    "we make comments on the technical part .",
    "the proper use of shared memories is important to save computational time . to improve the computational speed and save memory",
    ", we store the information on spin , bond and label in one word . here",
    ", we use a linear congruential random - number generator which was proposed by preis _",
    "@xcite , but any other random - number generators can be used .",
    "a brief remark is made on the @xmath0-state potts model .",
    "the program of the potts model is essentially the same as that of the ising model except that the number of states is @xmath0 instead of 2 .",
    "the square of the magnetization of the @xmath0-state potts model is calculated as @xmath26 ^ 2-n^2}{q-1},\\ ] ] where @xmath27 $ ] is the number of spins with the state @xmath28 , and @xmath29 is the total number of spins .",
    "next , we discuss the gpu - based calculation of sw multi - cluster algorithm for the xy model , actually the @xmath0-state clock model . to make a cluster flip",
    ", we use the idea of embedded cluster introduced by wolff @xcite .",
    "we project vector spins to form ising spin clusters .",
    "the essential part of the gpu implementation is the same as the case of the ising model .",
    "the variable ` ispr ` , which is randomly chosen , specifies the direction for mirror projection , and it is constant for all the sites , that is , all the threads .",
    "we note that the proper use of shared memories is effective especially for the calculation of the inner product of vectors .",
    "the number of states @xmath0 should be less than or equal to 512 because we use shared memory for the table of rule for energy , ` rule [ ] ` , and the table for the magnetization , ` fmy [ ] ` .",
    "we have tested the performance of our code on nvidia geforce gtx580 . since the performance for 2d models was discussed in ref .",
    "@xcite , we here show the data for 3d models .    [",
    "cols=\"<,<,<,<,<,<\",options=\"header \" , ]     the average computational times per a spin update near the critical temperature , @xmath30 , for the classical xy model are tabulated in table [ tb : gpu_time_clock ] .",
    "the previous estimates of the critical temperature were given in @xcite . actually , we dealt with the 512-state clock model .",
    "the discritization level is small enough except for very low temperatures .",
    "again , the time for only a spin update and that including the measurement of energy and magnetization are given .",
    "we show the measured time per a spin flip in units of nano sec .",
    "the linear system sizes @xmath31 are @xmath31=32 , 64 , 128 and 256 .",
    "we can see from table [ tb : gpu_time_clock ] that the computational time of our gpu implementation of the sw algorithm is almost constant for @xmath32 .",
    "the computational time for the xy model is longer than the case of the ising model because it needs more calculation for the projection to ising spins .",
    "but such an extra computational time is only a little , which shows that our gpu implementation of the sw multi - cluster algorithm is also effective for the vector spin model , the clock model .",
    "moment ratio of 3d xy model ; @xmath31=32 , 64 , 128 , 256 , and 512.,width=302 ]    we plot the moment ratio of the 3d xy model in figure [ fig : fig3 ] .",
    "the linear system sizes are @xmath31 = 32 , 64 , 128 , 256 , and 512 .",
    "the number of the mcss for discard and measurement are the same as the case of the ising model .",
    "we made four independent runs for each size ; the average was taken over four runs .",
    "the crossing of the data with different sizes again reproduces the known results of the critical temperatures .",
    "fss plot of moment ratio of 3d xy model , where @xmath33 with @xmath34=2.201836 and @xmath35=0.672.,width=302 ]    we show the fss plot of @xmath36 as a function of @xmath37 in fig .",
    "[ fig : fig4 ] . here ,",
    "the best choices of @xmath34 and @xmath35 are 2.201836(6 ) and 0.672(4 ) , respectively .",
    "the authors of recent publication @xcite gave two estimates of @xmath34 as 2.201852(1 ) and 2.2018312(6 ) .",
    "our estimate is between the two .",
    "the detailed analysis of the 3d classical xy model will also be left to a future work , where much larger sizes will be treated with multiple gpus .",
    "we have explained our program for the gpu - based sw multi - cluster spin flip algorithm for the classical spin models .",
    "treated models are the ising model , the @xmath0-state potts model , and the classical xy model for 2d and 3d lattices . for the assignment of clusters , we used the algorithm by hawick _",
    "_ @xcite and that by kalentev _",
    "we have shown the performance of the 3d ising model and the 3d classical xy model .",
    "the performance of gpu calculation is good , which is the same as the 2d case @xcite . calculating the moment ratios of the 3d ising and classical xy models , the critical temperature @xmath34 and the correlation - length exponent @xmath35",
    "are discussed by using the fss analysis .",
    "the system sizes we treated are up to @xmath38 for 3d systems , but much larger sizes can be treated if we use multiple gpus @xcite . in near future ,",
    "we make mutiple - gpu calculations for getting precise estimates for 3d models .    in this paper , we have shown sample programs for the gpu - based sw multi - cluster spin flip algorithm of classical xy models . for the physical quantities we only calculated the magnetization and the energy .",
    "the extension to the calculation of correlation function , helicity modulus , etc .",
    "is straightforward .",
    "we can extend the gpu calculation to other cluster algorithms including the quantum monte carlo simulations .",
    "we hope more researchers show interest in the gpu calculations of the cluster algorithms .",
    "this work was supported by a grant - in - aid for scientific research from the japan society for the promotion of science .",
    "p. butera , m. comi , a.j .",
    "guttmann , critical exponents of the three - dimensional classical plane - rotator model on the sc lattice from a high - temperature - series analysis , phys .",
    "b 48 ( 1993 ) 13987 - 13990 ."
  ],
  "abstract_text": [
    "<S> we present sample cuda programs for the gpu computing of the swendsen - wang multi - cluster spin flip algorithm . </S>",
    "<S> we deal with the classical spin models ; the ising model , the @xmath0-state potts model , and the classical xy model . as for the lattice , both </S>",
    "<S> the 2d ( square ) lattice and the 3d ( simple cubic ) lattice are treated . </S>",
    "<S> we already reported the idea of the gpu implementation for 2d models [ comput . </S>",
    "<S> phys . commun . 183 </S>",
    "<S> ( 2012 ) 1155 - 1161 ] . </S>",
    "<S> we here explain the details of sample programs , and discuss the performance of the present gpu implementation for the 3d ising and xy models . </S>",
    "<S> we also show the calculated results of the moment ratio for these models , and discuss phase transitions .    </S>",
    "<S> monte carlo simulation , cluster algorithm , ising model , xy model , parallel computing , gpu    * program summary *    _ program title : _ cuda programs for gpu computing of swendsen - wang multi - cluster spin flip algorithm    _ catalogue identifier : _ aaaa    _ program summary url : _ </S>",
    "<S> http://cpc.cs.qub.ac.uk/summaries/aaaa.html    _ </S>",
    "<S> program obtainable from : _ cpc program library , queen s university , belfast , n. ireland    _ licensing provisions : _ standard cpc licence , http://cpc.cs.qub.ac.uk/licence/licence.html    _ no . of lines in distributed program , including test data , etc . : _ * * * *    _ no . of bytes in distributed program , including test data , etc . : _ * * * *    _ distribution format : _ tgz    _ programming language : _ </S>",
    "<S> c , cuda    _ computer : _ system with an nvidia cuda enabled gpu    _ external routines : _ nvidia cuda toolkit 3.0 or newer    _ nature of problem : _ monte carlo simulation of classical spin systems . ising , @xmath0-state potts model , and the classical xy model are treated for both two - dimensional and three - dimensional lattices .    </S>",
    "<S> _ solution method : _ gpu - based swendsen - wang multi - cluster spin flip monte carlo method . </S>",
    "<S> the cuda implementation for the cluster - labeling is based on the work by hawick _ </S>",
    "<S> et al . _ </S>",
    "<S> [ k.a . </S>",
    "<S> hawick , a. leist , and d. p. playne , parallel computing 36 ( 2010 ) 655 - 678 ] , and that by kalentev _ </S>",
    "<S> et al . _ [ o. kalentev , a. rai , s. kemnitzb , and r. schneider , j. parallel distrib . comput . 71 ( 2011 ) 615 - 620 ] .    _ </S>",
    "<S> restrictions : _ the system size is limited depending on the memory of a gpu .    _ </S>",
    "<S> running time : _ for the parameters used in the sample programs , it takes about a minute for each program . </S>",
    "<S> of course , it depends on the system size , the number of monte carlo steps , etc . </S>"
  ]
}
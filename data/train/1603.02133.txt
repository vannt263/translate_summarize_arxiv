{
  "article_text": [
    "in 1925 , heisenberg realised , pondering upon the problem of the spectral lines of the hydrogen atom , that a physical quantity such as the @xmath0-position of an electron orbiting a proton is best described not by a real number but by an infinite array of complex numbers  @xcite . soon afterwards ,",
    "born and jordan noted that these arrays should be multiplied as matrices are  @xcite .",
    "of course , multiplying such infinite matrices may lead to mathematically dubious situations , which spurred von neumann to replace the infinite matrices by operators on a hilbert space  @xcite .",
    "he organised these into _ rings of operators _",
    "@xcite , now called _",
    "von neumann algebras _ , and thereby set off an explosion of research ( also into related structures such as jordan algebras  @xcite , orthomodular lattices  @xcite , @xmath1-algebras  @xcite , @xmath2-algebras  @xcite , order unit spaces  @xcite , hilbert @xmath1-modules  @xcite , operator spaces  @xcite , effect algebras  @xcite ,  ) , which continues even to this day .    one current line of research ( with old roots  @xcite ) is the study of von neumann algebras from a categorical perspective ( see e.g.  @xcite ) .",
    "one example relevant to this paper is kornell s proof that the opposite of the category  @xmath3 of von neumann algebras with the obvious structure preserving maps ( i.e.  the unital normal @xmath4-homomorphisms ) is monoidal closed when endowed with the spatial tensor product  @xcite .",
    "he argues that  @xmath5 should be thought of as the quantum version of  @xmath6 .",
    "we would like to focus instead on the category of von neumann algebras and completely positive normal subunital maps , @xmath7 , as it seems more appropriate for modelling quantum computation : the full subcategory of  @xmath8 consisting of finite dimensional von neumann algebras is equivalent to selinger s category  @xmath9  @xcite , which is used to model first order quantum programming languages .",
    "r.3 @xmath10 \\ar@{}[r]|\\bot & \\mathscr{c }   \\ar@/^1em/[r ] \\ar@{}[r]|\\bot \\ar@/^1em/[l ] & \\mathscr{d } \\ar@/^1em/[l ] } $ ]    on the syntactic side , in 2005 , selinger and valiron  @xcite proposed a typed lambda calculus for quantum computation , and they studied it in a series of papers  @xcite .",
    "a striking feature of this quantum lambda calculus is that functions naturally appear as data in the description of the deutch ",
    "jozsa algorithm , teleportation algorithm and bell s experiment .",
    "although selinger and valiron gave a precise formulation of what might constitute a model of the quantum lambda calculus  basically a pair of adjunctions , see figure  [ fig : model ] , with some additional properties  @xcite  the existence of such a model ( other than the term model ) was an open problem for several years until malherbe constructed a model in his thesis using presheaves  @xcite .",
    "the construction of malherbe s model is quite abstract , and it is ( perhaps because of this ) not yet known whether his model is adequate with respect to the operational semantics defined by selinger and valiron in @xcite ( see also @xcite ) . while several adequate models for variations on the quantum lambda calculus have been proposed in the meantime ( using the geometry of interaction in  @xcite , and quantitative semantics in  @xcite ) , malherbe s model remains the only model of the original quantum lambda calculus  @xcite known in the literature , and so the existence of an adequate model for the quantum lambda calculus is still open .",
    "r.45 @xmath11^{\\ell^\\infty } \\ar@{}[r]|(.45){\\bot } & { { \\mathbf{vna}}_{\\mathrm{miu}}}^\\mathrm{op } \\ar@{^(->}@/^1em/[r ] \\ar@{}[r]|\\bot \\ar@/^1em/[l]^{{\\mathrm{nsp } } } & { { \\mathbf{vna}}_{\\mathrm{cpsu}}}^\\mathrm{op } \\ar@/^1em/[l ] } $ ]    in this paper , we present the model of selinger and valiron s quantum lambda calculus , based on von neumann algebras , see figure  [ fig : neumann - model ] , and we show that the model is adequate with respect to the operational semantics .",
    "we should note that it is possible to extend the quantum lambda calculus with recursion and inductive types , but that we have not yet been able to include these features in our model .",
    "the paper is divided in six sections .",
    "we begin with a short review of quantum computation ( in section  [ sec : quantum - computation ] ) , and the quantum lambda calculus and its operational semantics ( in section  [ sec : quantum - lambda - calculus - op - sem ] ) .",
    "we give the denotational semantics for the quantum lambda calculus using von neumann algebras and prove its adequacy in section  [ sec : denotational - semantics ] .",
    "for this we use several technical results about the categories  @xmath3 and  @xmath7 of von neumann algebras , which we will discuss in section  [ technical - result - vna ] .",
    "we end with a conclusion in section  [ sec : final - remarks ] .",
    "in a nutshell , one gets the quantum lambda calculus by taking the simply typed lambda calculus with products and coproducts and adding a qubit type .",
    "this single ingredient dramatically changes the flavour of the whole system e.g.  forcing one to make the type system linear , so we will spend some words on the behaviour of qubits in this section . for more details on quantum computation , see  @xcite .",
    "a state of an isolated qubit is a vector  @xmath12 of length  @xmath13 in the hilbert space  @xmath14 , and can be written as a complex linear combination ( `` superposition '' ) @xmath15 , since the vectors @xmath16 and @xmath17 form an orthonormal basis for  @xmath14 .",
    "when qubits are combined to form a larger system , one can sometimes no longer speak about the state of the individual qubits , but only of the state of the whole system ( in which case the qubits are `` entangled '' ) .",
    "the state of a register of  @xmath18 qubits is a vector  @xmath12 of length  @xmath13 in the @xmath18-fold tensor product @xmath19 , which has as an orthonormal basis the vectors of the form @xmath20 where @xmath21 .    for the purposes of this paper",
    "there are three basic operations on registers of qubits .    1 .",
    "one can add a new qubit in state  @xmath22 to a register of  @xmath18 qubits in state  @xmath12 , turning it to a register of  @xmath23 qubits in state @xmath24 .",
    "a qubit in state  @xmath25 can be added similarly .",
    "2 .   one can apply a unitary @xmath26 matrix  @xmath27 to a register of  @xmath18 qubits in state  @xmath12 turning the state to  @xmath28 .",
    "3 .   one can test the first qubit in the register .",
    "if the state of the register is written as @xmath29 where the length of  @xmath30 and  @xmath31 is  @xmath13 , then the test comes out negative and changes the state of the register to  @xmath32 with probability  @xmath33 , and comes out positive with probability  @xmath34 changing the state to  @xmath35 .",
    "+ measurement of the @xmath36-th qubit in the register is also possible and behaves similarly .",
    "a predicate on a register of  @xmath18 qubits is a @xmath26 matrix  @xmath37 such that both @xmath37 and  @xmath38 are positive ( which is the case when  @xmath37 is a projection ) .",
    "the probability that  @xmath37 holds in state  @xmath12 is @xmath39 .",
    "for example , given a state  @xmath12 of a qubit , the projection @xmath40 ( which maps @xmath41 to  @xmath42 ) represents the predicate `` the qubit is in state  @xmath12 '' .",
    "thus the predicates on a qubit are part of the algebra  @xmath43 of @xmath44 complex matrices .",
    "there is also an algebra for the bit , namely  @xmath14 .",
    "a predicate on a bit is an element  @xmath45 with @xmath46 , which is interpreted as `` the bit is true with probability  @xmath47 , false with probability  @xmath0 , and undefined with probability @xmath48 '' .",
    "an operation on a register of qubits may not only be described by the effect it has on states ( schrdinger s view ) , but also by its action on predicates ( heisenberg s view ) .    1 .   the operation which takes a bit  @xmath49 and returns a qubit in state @xmath50 is represented by the map @xmath51 given by  @xmath52 .",
    "2 .   the operation which applies a unitary  @xmath27 to a register of  @xmath18 qubits is represented by the map  @xmath53 given by  @xmath54 .",
    "the operation which tests a qubit and returns the outcome is represented by the map  @xmath55 given by  @xmath56 .    a general operation between _ finite dimensional _ quantum data types is usually taken to be a completely positive subunital linear map ( see below ) between direct sums of matrix algebras , @xmath57 .",
    "the category formed by these operations is equivalent to  @xmath58  ( * ? ? ?",
    "von neumann algebras are a generalisation of direct sums of matrix algebras to infinite dimensions .",
    "formally , a von neumann algebra  @xmath59 is a linear subspace of the bounded operators on a hilbert space  @xmath60 , which contains the identity operator , @xmath13 , is closed under multiplication , involution , @xmath61 , and is closed in the weak operator topology , i.e.  the topology generated by the seminorms @xmath62 where  @xmath63 ( cf .",
    "@xcite ) .",
    "we believe that the opposite @xmath8 of the category of von neumann algebras and normal completely positive subunital maps ( definitions are given below ) might turn out to be the most suitable extension of  @xmath9 to describe operations between ( possibly infinite dimensional ) quantum data types . indeed , to support this thesis",
    ", we will show that  @xmath8 gives a model of the quantum lambda calculus .",
    "let us end this section with the definitions that are necessary to understand  @xmath7 .",
    "an element  @xmath64 of a von neumann algebra  @xmath59 is _ self - adjoint _ if @xmath65 , and _ positive _ if  @xmath66 for some  @xmath67 .",
    "the self - adjoint elements of a von neumann algebra  @xmath59 are partially ordered by : @xmath68 iff @xmath69 is positive .",
    "any upwards directed bounded subset  @xmath70 of self - adjoint elements of a von neumann algebra  @xmath59 has a supremum  @xmath71 in the set of self - adjoint elements of  @xmath59  ( * ? ? ?",
    "( so a von neumann algebra resembles a domain . )",
    "the linear maps between von neumann algebras which preserve the multiplication , involution ,  @xmath61 , and unit ,  @xmath13 , are called unital @xmath4-homomorphisms in the literature and _ miu - maps _ by us .",
    "a linear map  @xmath72 between von neumann algebras is _ positive _ if it maps positive elements to positive elements , _ unital _ if it preserves the unit , _ subunital _ if  @xmath73 , and _",
    "if  @xmath72 is positive and preserves suprema of bounded directed sets of self - adjoint elements .",
    "( if subunital maps are akin to partial maps between sets , then the unital maps are the total maps .",
    "normality is the incarnation of scott continuity in this setting , and coincides with continuity with respect to the @xmath74-weak = ultraweak = weak * topology  ( * ? ?",
    "1.13.2 ) . )",
    "given a von neumann algebra  @xmath59 on a hilbert space  @xmath60 , and a von neumann algebra  @xmath75 on a hilbert space  @xmath76 , the _ spatial tensor product _ @xmath77 of  @xmath59 and  @xmath75 is the least von neumann algebra on  @xmath78 which contains all operators of the form  @xmath79 where @xmath80 for all  @xmath81 , @xmath82 , @xmath63 and  @xmath83  @xcite . ( the tensor product  @xmath84 may be physically interpreted as the composition of the systems  @xmath59 and  @xmath75  recall that a register of two qubits is represented by the von neumann algebra @xmath85 . )    given normal positive @xmath86 and @xmath87 there might be a normal positive linear map @xmath88 given by @xmath89 .",
    "an interesting , and annoying , phenomenon is that such @xmath90 need not exist for all  @xmath72 and  @xmath91 .",
    "this warrants the following definition : if @xmath86 is a positive linear map such that for every natural number  @xmath18 the map @xmath92 is positive , then  @xmath72 is called _ completely positive _  @xcite . here  @xmath93 is the von neumann algebra of  @xmath94 matrices with entries drawn from  @xmath59 , and  @xmath95 for all  @xmath96 and  @xmath97 .",
    "if  @xmath72 and  @xmath91 are normal and completely positive , then  @xmath90 exists , and is completely positive  ( * ? ?",
    "iv/5.13 ) .",
    "we review the quantum lambda calculus for which we will give a denotational semantics .",
    "the language and its operational semantics are basically the same as selinger and valiron s ones  @xcite , but with sum type @xmath98  @xcite and ` indexed ' terms  @xcite , see remark  [ rem : indexedterms ] and notation  [ notation : sumtype ] below . for space reasons we omit many details , and refer to @xcite .",
    "@xmath99[a , b]{m } \\mid \\tinr[n][a , b]{n } \\mid { \\mathtt{match}\\;{l}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{m } \\;|\\;{y^b}\\;{\\mapsto}\\;{n } ) } \\end{aligned } \\\\",
    "\\text{\\emph{value}}\\;\\ ; v , w \\coloneqq { } x^a\\mid { \\mathop{\\mathtt{new}}\\nolimits}^a\\mid { \\mathop{\\mathtt{meas}}\\nolimits}^a\\mid u^a\\mid { \\mathord{*}}^n \\mid { \\lambda^{n}x^a.m}\\mid { \\langlev , w\\rangle}^n \\mid \\tinl[n][a , b]{v } \\mid \\tinr[n][a , b]{w}\\end{gathered}\\ ] ]    the language consists of _ types _ , _ terms _ and _ values _ defined in table  [ tab : types - terms ]",
    ". we use obvious shorthand @xmath100 and @xmath101 .",
    "the _ subtyping relation _ @xmath102 on types is defined by the rules shown in table  [ tab : typing - rules](a ) . in the definition of terms and values",
    ", @xmath103 is a natural number ; @xmath0 ranges over variables ; and @xmath27 ranges over @xmath104 unitary matrices for @xmath105 .",
    "the ( nullary ) constructors @xmath106 are called _ constants _ and sometimes referred to by @xmath107 .",
    "clearly , values form a subclass of terms . as usual , we identify terms up to @xmath108-equivalence .",
    "[ rem : indexedterms ] the terms are _ indexed terms _ of  @xcite , which have explicit type annotations ( cf .",
    "church - style vs. curry - style in the simply - typed lambda calculus ) .",
    "a typing derivation for an indexed term is unique in a suitable sense , so that we can more easily obtain lemma  [ lem : interpretation - well - defd ] .",
    "in fact , for the language of  @xcite we can safely remove the type annotations  ( * ? ? ?",
    "* corollary  1 ) .",
    "we conjecture that the same is true for our language , which is left as a future work .",
    "[ notation : sumtype ] following  @xcite ( and @xcite ) , the language has sum type @xmath98 instead of the @xmath109 type ( which exists in  @xcite ) . the @xmath109 type and its constructors are emulated by @xmath110 ; @xmath111[{\\top},{\\top}]{{\\mathord{*}}^n}$ ] ; @xmath112[{\\top},{\\top}]{{\\mathord{*}}^n}$ ] ; and @xmath113 , with fresh variables @xmath114 .",
    "the set @xmath115 of _ free variables _ is defined in the usual way .",
    "a _ context _ is a list @xmath116 of variables @xmath117 and types @xmath118 where the variables @xmath117 are distinct .",
    "we write @xmath119 and @xmath120 .",
    "we also write @xmath121 for the context restricted to the free variables of @xmath122 .",
    "a _ typing judgement _ , written as @xmath123 , consists of a context @xmath124 , a term @xmath122 and a type @xmath125 .",
    "a typing judgement is _ valid _ if it can be derived by the _ typing rules _ shown in table  [ tab : typing - rules](b ) . in the rule ( [ rule@ax2 ] ) , @xmath107 ranges over @xmath126 , @xmath127 and @xmath104 unitary matrices @xmath27 ; and the types @xmath128 are defined as follows : @xmath129 , @xmath130 , @xmath131 .    *",
    "( a ) * rules for subtyping , with a condition @xmath132 for each rule    2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex    * ( b ) * typing rules    the type system is affine ( weak linear ) .",
    "each variable may occur at most once , unless it has a duplicable type @xmath133 .",
    "substitution of the following form is admissible .",
    "[ lem : subst ] if @xmath134 and @xmath135 , where @xmath136 is a value and @xmath137 , then @xmath138}:b$ ] .",
    "note , however , that we need to define the substitution @xmath139}$ ] with care .",
    "for example , if @xmath140 , @xmath141 and @xmath142 , then we substitute @xmath143 ( not @xmath144 ) for @xmath145 in @xmath122 .",
    "see  @xcite or  @xcite for details .",
    "the operational semantics is taken from  @xcite , but is adapted for indexed terms .",
    "a _ quantum closure _ is a triple @xmath146}$ ] with @xmath147 where :    * @xmath148 is a normalised vector of the hilbert space @xmath149 .",
    "* @xmath150 is a list of @xmath151 distinct variables , written as @xmath152 .",
    "we write @xmath153 , and @xmath154 for the position of a variable in the list .",
    "* @xmath122 is a term with @xmath155 .",
    "we say a quantum closure @xmath156}$ ] is _ well - typed of type @xmath125 _ , written as @xmath157 , if the typing judgement @xmath158 is valid .",
    "we call @xmath159}$ ] a _ value closure _ if @xmath136 is a value",
    ".    * proof : * * endproof *    @xmath160 } { \\to_{1 } } { [ \\,\\ket{\\psi},\\psi,{m[v / x]}\\ , ] } \\\\ \\tag{$\\otimes$}{\\label{rule@redu : beta.tens } } { [ \\,\\ket{\\psi},\\psi,{\\mathtt{let}\\;{{\\langlex^a , y^b\\rangle}^n}={{\\langlev , w\\rangle}^n}\\;\\mathtt{in}\\;{m}}\\ , ] } { \\to_{1 } } { [ \\,\\ket{\\psi},\\psi,{m[v / x , w / y]}\\ , ] } \\\\ \\tag{$\\oplus_1$}{\\label{rule@redu : beta.sum1 } } { [ \\,\\ket{\\psi},\\psi,{\\mathtt{match}\\;{\\tinl[n][a , b]{v}}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{m } \\;|\\;{y^b}\\;{\\mapsto}\\;{n})}\\ , ] } { \\to_{1 } } { [ \\,\\ket{\\psi},\\psi,{m[v / x]}\\ , ] } \\\\ \\tag{$\\oplus_2$}{\\label{rule@redu : beta.sum2 } } { [ \\,\\ket{\\psi},\\psi,{\\mathtt{match}\\;{\\tinr[n][a , b]{w}}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{m } \\;|\\;{y^b}\\;{\\mapsto}\\;{n})}\\ , ] } { \\to_{1 } } { [ \\,\\ket{\\psi},\\psi,{n[w / y]}\\,]}\\end{gathered}\\ ] ]    * ( a ) * classical control    @xmath161 } { \\to_{1 } } { [ \\,\\ket{\\psi'},\\psi,{\\langlex_1^{{\\mathtt{qbit}}},\\dotsc , x_k^{{\\mathtt{qbit}}}\\rangle}^0\\ , ] } \\\\ \\tag{${\\mathop{\\mathtt{meas}}\\nolimits}_0$}{\\label{rule@redu : meas0 } } { [ \\,\\ket{\\psi},\\ket{x_1\\dotso x_m},{\\mathop{\\mathtt{meas}}\\nolimits}^{{\\mathtt{qbit}}{\\mathbin{\\multimap}}{\\mathord{!}}^n{\\mathtt{bit } } } x_i^{{\\mathtt{qbit}}}\\ , ] } { \\to_{p_0 } } { [ \\,\\ket{\\psi_0},\\ket{x_1\\dotso x_m},{\\mathtt{f\\!f}}^n\\ , ] } \\\\ \\tag{${\\mathop{\\mathtt{meas}}\\nolimits}_1$}{\\label{rule@redu : meas1 } } { [ \\,\\ket{\\psi},\\ket{x_1\\dotso x_m},{\\mathop{\\mathtt{meas}}\\nolimits}^{{\\mathtt{qbit}}{\\mathbin{\\multimap}}{\\mathord{!}}^n{\\mathtt{bit } } } x_i^{{\\mathtt{qbit}}}\\ , ] } { \\to_{p_1 } } { [ \\,\\ket{\\psi_1},\\ket{x_1\\dotso x_m},{\\mathtt{t\\!t}}^n\\ , ] } \\\\ \\tag{${\\mathop{\\mathtt{new}}\\nolimits}_0$}{\\label{rule@redu : new0 } } { [ \\,\\ket{\\psi},\\ket{x_1\\dotso x_m},{\\mathop{\\mathtt{new}}\\nolimits}^{a{\\mathbin{\\multimap}}{\\mathtt{qbit}}}\\tilde{{\\mathtt{f\\!f}}}\\ , ] } { \\to_{1 } } { [ \\,\\ket{\\psi}\\ket{0},\\ket{x_1\\dotso x_m y},y^{{\\mathtt{qbit}}}\\ , ] } \\\\ \\tag{${\\mathop{\\mathtt{new}}\\nolimits}_1$}{\\label{rule@redu : new1 } } { [ \\,\\ket{\\psi},\\ket{x_1\\dotso x_m},{\\mathop{\\mathtt{new}}\\nolimits}^{a{\\mathbin{\\multimap}}{\\mathtt{qbit}}}\\tilde{{\\mathtt{t\\!t}}}\\ , ] } { \\to_{1 } } { [ \\,\\ket{\\psi}\\ket{1},\\ket{x_1\\dotso x_m y},y^{{\\mathtt{qbit}}}\\,]}\\end{gathered}\\ ] ]    * ( b ) * quantum data    if @xmath146}{\\to_{p}}{[\\,\\ket{\\psi'},\\psi',m'\\,]}$ ] , the following are valid reductions ( if well - formed ) .",
    "@xmath162 }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',m'n\\ , ] } \\qquad { [ \\,\\ket{\\psi},\\psi , vm\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',vm'\\ , ] } \\\\ { [ \\,\\ket{\\psi},\\psi,{\\langlem , n\\rangle}^n\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',{\\langlem',n\\rangle}^n\\ , ] } \\qquad { [ \\,\\ket{\\psi},\\psi,{\\langlev , m\\rangle}^n\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',{\\langlev , m'\\rangle}^n\\ , ] } \\\\ { [ \\,\\ket{\\psi},\\psi,{\\mathtt{let}\\;{{\\langlex^a , y^b\\rangle}^n}={m}\\;\\mathtt{in}\\;{n}}\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',{\\mathtt{let}\\;{{\\langlex^a , y^b\\rangle}^n}={m'}\\;\\mathtt{in}\\;{n}}\\ , ] } \\\\ { [ \\,\\ket{\\psi},\\psi,\\tinl[n][a , b]{m}\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',\\tinl[n][a , b]{m'}\\ , ] } \\\\ { [ \\,\\ket{\\psi},\\psi,\\tinr[n][a , b]{m}\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',\\tinr[n][a , b]{m'}\\ , ] } \\\\ { [ \\,\\ket{\\psi},\\psi,{\\mathtt{match}\\;{m}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{n } \\;|\\;{y^b}\\;{\\mapsto}\\;{l})}\\ , ] }      { \\to_{p } }      { [ \\,\\ket{\\psi'},\\psi',{\\mathtt{match}\\;{m'}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{n } \\;|\\;{y^b}\\;{\\mapsto}\\;{l})}\\,]}\\end{gathered}\\ ] ]    * ( c ) * congruence rules    a ( small - step ) _ reduction _ @xmath163 consists of quantum closures @xmath164 and @xmath165 $ ] , meaning that @xmath37 reduces to @xmath166 with probability @xmath167 . the valid reductions @xmath163 are given inductively by the _ reduction rules _ shown in table  [ tab : reduction - rules ] . in the rules , @xmath136 and @xmath168 refer to values .",
    "* proof : * * endproof*the ` quantum data ' rules ( b ) correspond to the three basic operations explained in  [ sec : quantum - computation ] . in the rule ( [ rule@redu : u ] ) , @xmath169 is the state obtained by applying the @xmath104 unitary matrix @xmath27 to the @xmath170 qubits of the position @xmath171 in @xmath148 .",
    "* proof : * * endproof*in the rule ( [ rule@redu : meas0 ] ) , @xmath172 is the probability that we obtain @xmath173 ( ` negative ' in terms of  [ sec : quantum - computation ] ) by measuring the @xmath36-th qubit of @xmath148 ; and @xmath30 is the state after that .",
    "the rule ( [ rule@redu : meas1 ] ) is similar . *",
    "proof : * * endproof*in the rule ( [ rule@redu : new0 ] ) , we denote by @xmath174 any term of the form @xmath175[{\\mathord{!}}^k{\\top},{\\mathord{!}}^h{\\top}]{{\\mathord{*}}^{n+k}}$ ] ( cf .  notation  [ notation : sumtype ] ) .",
    "the term @xmath176 in ( [ rule@redu : new1 ] ) is similar .",
    "reduction satisfies the following properties .    if @xmath157 and @xmath163 , then @xmath177 .    *",
    "proof : * * endproof *    [ lem : progress ] let @xmath157 be a well - typed quantum closure . then either @xmath37 is a value closure , or there exists a quantum closure @xmath166 such that @xmath163 . in the latter case ,",
    "there are at most two ( up to @xmath108-equivalence ) single - step reductions from @xmath37 , and the total probability of all the single - step reductions from @xmath37 is @xmath13 .",
    "the next definitions follow  @xcite .",
    "we define the _ small - step reduction probability _",
    "@xmath178 $ ] for well - typed quantum closures @xmath164 by : @xmath179 if @xmath180 ; @xmath181 if @xmath136 is a value closure ; @xmath182 otherwise .",
    "lemma  [ lem : progress ] guarantees that @xmath183 is a probabilistic system in a suitable sense . for a well - typed quantum closure @xmath37 and a well - typed value closure @xmath184 , the _ big - step reduction probability _",
    "@xmath185 $ ] is defined by @xmath186 , where @xmath187 and @xmath188 .    for each @xmath189 ,",
    "we define @xmath190 , where @xmath191 is the set of well - typed quantum closures of the form @xmath192}$ ] .    we will use a strong normalisation result .",
    "the proof is similar to  ( * ? ? ?",
    "* lemma  33 ) .",
    "[ lem : str - norm ] let @xmath157 be a well - typed quantum closure . then there is no infinite sequence of reductions @xmath193 .    clearly it suffices to prove the strong normalisation for the underlying ( non - deterministic ) reductions @xmath194 on terms .",
    "we add a constant @xmath195 to replace free variables @xmath196 .",
    "we then define a translation @xmath197 from the quantum lambda calculus ( with @xmath195 ) to a simply - typed lambda calculus with product , unit , sum types and constants @xmath198 .",
    "the translation @xmath197 forgets the @xmath199 modality , and translates the let constructor via @xmath200 .",
    "we can prove the strong normalisation for the simply - typed lambda calculus via standard techniques .",
    "we need the following notation and facts concerning von neumann algebras .",
    "those facts for which we could not find proof in the literature will be discussed in the next section .",
    "let @xmath201 be the symmetric monoidal category ( smc ) of von neumann algebras and normal miu - maps  ( * ? ? ?",
    "7.2 ) , and @xmath202 the smc of von neumann algebras and normal cpsu - maps ( where  @xmath203 is the spatial tensor product )  @xcite .",
    "note that the unit @xmath204 is initial in @xmath3 ( but not in @xmath7 ) .",
    "both categories have products given by direct sums @xmath98 ( with the supremum norm  ( * ? ? ?",
    "* def .  3.4 ) ) . to interpret the quantum lambda calculus",
    ", we will use the following pair of ( lax ) symmetric monoidal adjunctions , @xmath205_-{{\\ell^{\\infty } } } \\ar@{}[r]|-{\\bot } & \\ar@/_2ex/[l]_-{{\\mathrm{nsp } } } ( { { \\mathbf{vna}}_{\\mathrm{miu}}},\\otimes,{\\mathbb{c } } ) \\ar@/_2ex/@{^ { ( } ->}[r]_{{\\mathcal{j } } } \\ar@{}[r]|{\\bot } & ( { { \\mathbf{vna}}_{\\mathrm{cpsu}}},\\otimes,{\\mathbb{c } } ) \\ar@/_2ex/[l]_{{\\mathcal{f } } } } \\ ] ] where @xmath206 is the opposite of the category @xmath6 of sets and functions , considered as a smc via cartesian products ( i.e.  coproducts in @xmath206 ) .",
    "the functor @xmath207 is the inclusion functor ; the other functors are explained in the next section .",
    "note that @xmath207 is strict symmetric monoidal and strictly preserves products .",
    "the following facts are important :    * @xmath3 is a co - closed smc  @xcite .",
    "this means the endofunctor @xmath208 on @xmath3 has a left adjoint @xmath209 .",
    "the von neumann algebra @xmath210 is called the _ free exponential _ in  @xcite . *",
    "the counit of the adjunction @xmath211 is an isomorphism ( see corollary  [ cor : first - adjunction - unit - iso ] ) . * the functors @xmath212 and the adjunction @xmath211 are _ strong _ monoidal ( see corollary  [ cor : first - adjunction - monoidal ] ) .",
    "* moreover , the functors @xmath213 and @xmath214 preserves products ( see cor .",
    "[ cor : sp - preserves - coproducts - and - tensors ] and lem .",
    "[ lem : ell - tensor ] ) .",
    "the tensor product @xmath203 distributes over products @xmath98 in @xmath3 , as @xmath215 , since @xmath216 is a right adjoint and thus preserves products .",
    "we denote the canonical isomorphism by @xmath217 .    r.45    we define a ` kleisli co - exponential ' @xmath218 by @xmath219 .",
    "we have the bijective correspondence as shown on the right .",
    "we write @xmath220 for the miu - map @xmath221 corresponding to @xmath72",
    ". we also write @xmath222 for the co - evaluation map , i.e.  the cpsu - map corresponding to @xmath223 .",
    "then @xmath224 by the naturality of the bijective correspondence .",
    "we write @xmath225 for the strong symmetric monoidal monad on @xmath3 induced by the left - hand adjunction of .",
    "the unit and multiplication are denoted by @xmath226 and @xmath227 respectively . from the fact that the counit of @xmath211 is an isomorphism",
    ", it easily follows that @xmath228 is an idempotent monad , i.e.  the multiplication @xmath229 is an isomorphism .",
    "note also that @xmath228 preserves products .",
    "we denote the structure isomorphisms by : @xmath230 ; @xmath231 ; and @xmath232 .    because the adjunction @xmath211 satisfies a dual condition to a linear - non - linear model  @xcite",
    "( see also  @xcite ) , the monad @xmath228 has a property which is dual to a _ linear exponential comonad_. thus each object of the form @xmath233 is equipped with a map @xmath234 which , with a unique map @xmath235{180}{$!}$}}}_{{\\mathcal{l}}{\\mathscr{a}}}\\colon{\\mathbb{c}}\\to{\\mathcal{l}}{\\mathscr{a}}$ ] , makes @xmath233 into a @xmath203-monoid in @xmath3 .",
    "[ rem : concrete - model - of - qlc ] one can summarise these facts by saying that the opposite @xmath236 is a _",
    "( weak ) linear category for duplication _  @xcite ; and moreover @xmath236 is a _ concrete model of the quantum lambda calculus _ defined by selinger and valiron  @xcite .",
    "although they gave the definition of concrete models of the quantum lambda calculus , results on them ( e.g.  how to interpret the quantum lambda calculus ; adequacy of models ) have never been given .",
    "in the remainder of the section , therefore , we will give the interpretation of the language in von neumann algebras concretely , and then prove its adequacy .",
    "we interpret types as von neumann algebras , i.e.  objects in @xmath3 / @xmath7 , as follows .",
    "@xmath237    one familiar with fock space might be surprised to realise that @xmath238 , because there is no normal miu - map @xmath239 .",
    "the intuition here may be that no part of a qubit can be duplicated , and so the assumption of a duplicable qubit amounts to nothing .",
    "this is also the interpretation of @xmath240 intended by selinger and valiron , see  @xcite .",
    "the interpretation of a function type  @xmath241 is obtained by abstract means , and at this point we know very little about it .",
    "( might it be as intangible as an ultrafilter ? ) however , applying  @xmath199 makes the function type almost trivial : after  4 , it will be clear that @xmath242    the interpretation of the subtyping relation @xmath243 is a ` canonical ' map @xmath244 in @xmath3 , which exists uniquely by a coherence property for an idempotent ( co)monad ; see  @xcite for details .",
    "for instance , we have @xmath245 .",
    "contexts @xmath116 are interpreted as @xmath246 .",
    "we shall treat the monoidal structure @xmath247 as if it were strict monoidal , which is justified by the coherence theorem for monoidal categories .",
    "the interpretations @xmath248 , @xmath249 and @xmath250 of constants are defined using the maps @xmath251 , @xmath252 and @xmath253 given in  [ sec : quantum - computation ] , as follows .",
    "@xmath254    we now give the interpretation @xmath255 of a typing judgement as a map @xmath256 in @xmath7 .",
    "the definition is similar to  @xcite .",
    "first we define a normal cpsu - map @xmath257 ( recall that @xmath121 ) by induction on the derivation of the typing judgement as shown in table  [ tab : denotation - typing - judgements ] .",
    "we then define @xmath258 . here and in table  [",
    "tab : denotation - typing - judgements ] , we use the following notations ( often suppressing subscripts ) . let @xmath259 denote the symmetry isomorphism .",
    "for contexts @xmath260 , we write @xmath261 for the ` injection ' map defined via unique miu - maps @xmath235{180}{$!}$}}}_{{\\mathscr{a}}}\\colon{\\mathbb{c}}\\to{\\mathscr{a}}$ ] . *",
    "proof : * * endproof*for a context @xmath262 , we define the map @xmath263 via monoid structures @xmath264 and symmetry maps @xmath265 .",
    "the map @xmath266 can be defined using @xmath267 .",
    "we write @xmath268 for @xmath269 ; @xmath270 for @xmath271 ; and @xmath272 similarly .",
    "projection maps and tupling for direct sums , products in @xmath7 , are denoted by @xmath273 and @xmath274 .",
    "* proof : * * endproof *    2.0ex plus.8ex minus.4ex @xmath275 @xmath276 2.0ex plus.8ex minus.4ex @xmath277 2.0ex plus.8ex minus.4ex where : 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex 2.0ex plus.8ex minus.4ex    note that the interpretation @xmath255 is defined by induction on typing derivations . because we use indexed terms , it is not hard to prove the following fact by induction on a typing derivation @xmath278 .",
    "[ lem : interpretation - well - defd ] suppose that @xmath123 is valid with a derivation @xmath278 , and so is @xmath279 with @xmath280 .",
    "then @xmath281 , where @xmath282 is a ( unique by coherence ) isomorphism that permutes @xmath283 to @xmath284 .",
    "in particular , @xmath255 is well - defined , not depending on derivations .",
    "let @xmath285}:a$ ] be a well - typed quantum closure .",
    "the mapping @xmath286 defines a normal cpu - map @xmath287 .",
    "the interpretation of the quantum closure is defined by : @xmath288}:a } \\;\\coloneqq\\ ; \\sem{a } \\xrightarrow{\\sem{x_1:{\\mathtt{qbit}},\\dotsc , x_n:{\\mathtt{qbit}}{\\mathrel{\\vartriangleright}}m : a } } { \\mathcal{m}}_2^{\\otimes n } \\xrightarrow{\\braket{\\psi}{-}{\\psi } } { \\mathbb{c}}\\ ] ]      the next soundness / invariance for the small - step reduction is a key result to obtain adequacy .",
    "note that for normal cpsu - maps @xmath289 and @xmath290 $ ] with @xmath291 , the ( convex ) sum @xmath292 of maps is defined in the obvious pointwise manner and is a normal cpsu - map .",
    "[ prop : soundness - small - step ] let @xmath157 be a well - typed quantum closure . then @xmath293 .",
    "see appendix  [ sec : soundness - small - step ] .",
    "[ soundness - n - small - step ] let @xmath157 be a well - typed quantum closure . then for all @xmath294 , @xmath295    by induction on @xmath18 .",
    "the base case is proposition  [ prop : soundness - small - step ] . for the induction step , @xmath296    [ prop : soundness - big - step ] let @xmath157 be a well - typed quantum closure .",
    "then @xmath297 , where @xmath184 runs over well - typed value closures .    by lemmas  [ lem : progress ] and  [ lem : str - norm ] , @xmath298 for some @xmath151",
    "it is then easy to obtain @xmath299 by induction on @xmath151 , using proposition  [ prop : soundness - small - step ] .",
    "let @xmath300 be a quantum closure of type @xmath109 . for the interpretation @xmath301 , we have @xmath302 and @xmath303 .    by proposition  [ prop : soundness - big - step ]",
    "we have @xmath304 .",
    "note that for each well - typed value closure @xmath159}:{\\mathtt{bit}}$ ] , either @xmath305 or @xmath306 .",
    "then the assertion follows since @xmath307}:{\\mathtt{bit}}}(\\lambda,\\rho)=\\lambda$ ] and @xmath308}:{\\mathtt{bit}}}(\\lambda,\\rho)=\\rho$ ] .",
    "let us sketch how we obtained the two monoidal adjunctions in  .",
    "let  @xmath309 denote the von neumann algebra of bounded maps @xmath310 on a set  @xmath311 .",
    "addition , multiplication , involution , suprema , and so on , are computed coordinatewise in  @xmath309 .",
    "in fact , @xmath309 is simply the @xmath311-fold product in  @xmath3 of  @xmath312 with @xmath313 as  @xmath0-th projection .",
    "we extend @xmath314 to a functor @xmath315 by defining @xmath316 for every map @xmath317 ( in @xmath6 ) and @xmath318 .",
    "let @xmath319 be the ` normal spectrum ' of a von neumann algebra  @xmath59 , i.e.  the set of normal miu - maps @xmath320 .",
    "we extend @xmath321 to a functor @xmath322 by defining @xmath323 for every normal miu - map @xmath324 and  @xmath325 ( it is simply a hom - functor @xmath326 ) .",
    "note that any normal miu - map @xmath327 gives a map @xmath328 by `` swapping arguments ''  @xmath329  and with a little bit more work , we get :    there is an adjunction  @xmath211 .",
    "the following two lemmas describe the normal spectrum of direct products and tensors of von neumann algebras , and can be proven using standard techniques .",
    "let  @xmath330 be a set , and for each  @xmath331 , let  @xmath332 be a von neumann algebra .",
    "for each  @xmath333 , there is  @xmath331 and  @xmath334 with @xmath335 .",
    "let  @xmath336 and  @xmath337 be von neumann algebras .",
    "then for every  @xmath338 there are unique  @xmath339 and  @xmath340 with @xmath341 for all  @xmath342 .",
    "[ cor : sp - preserves - coproducts - and - tensors ] the functor  @xmath322 preserves products , and tensors .    using",
    "that @xmath309 is the @xmath311-fold product of  @xmath312 in  @xmath3 we get :    [ cor : first - adjunction - unit - iso ] the counit of the adjunction  @xmath343 is an isomorphism .",
    "[ lem : ell - tensor ] let  @xmath311 and  @xmath344 be sets . there is a normal miu - isomorphism @xmath345    use the proof of proposition  9.2 from  @xcite .",
    "[ cor : first - adjunction - monoidal ] the adjunction  @xmath211 is strong monoidal .    let us turn to the second adjunction in  . in  @xcite it",
    "is shown how the following result follows from freyd s adjoint functor theorem ( see theorem v.6.2 of  @xcite ) .    [",
    "thm : second - adjoint ] the inclusion  @xmath346 has a left adjoint .    [ cor : second - adjoint ]",
    "the category  @xmath7 is isomorphic to the co - kleisli category of the comonad  @xmath347 on  @xmath3 induced by  @xmath348 .",
    "see theorem  9 of  @xcite , or do exercise vi.5.2 of  @xcite ( and use the fact that an equivalence of categories which is bijective on objects is an isomorphism ) .",
    "[ cor : second - adjoint - monoidal ] the adjunction @xmath349 is symmetric monoidal .",
    "clearly , @xmath346 is strict symmetric monoidal . from this fact alone",
    ", it follows that the adjunction @xmath349 is symmetric monoidal , see prop .",
    "14 of  @xcite .    in our model of the quantum lambda calculus the von neumann algebras of the form",
    "@xmath350 serve as the interpretation of the _ duplicable types _ ( of the form  @xmath351 ) , because @xmath350 carries a @xmath203-monoid structure . among all von neumann algebras",
    "@xmath309 is arguably quite special and one might wonder if there is a broader class of von neumann algebras that might serve as the interpretation of duplicable types ( such as the class of all commutative von neumann algebras , which includes  @xmath352 $ ] ) .",
    "the following result settles this matter : no . due to space constraints",
    ", the proof will appear somewhere else .",
    "[ thm : duplicable ] for a von neumann algebra  @xmath59 the following are equivalent .    1 .",
    "there is a _",
    "duplicator _ on  @xmath59 , that is , a normal positive unital map @xmath353 such that @xmath354 and @xmath355 for all  @xmath356 .",
    "[ thm : duplicable-1 ] 2 .",
    "[ thm : duplicable-2 ] @xmath59 is isomorphic to  @xmath350 for some set  @xmath311",
    ".    moreover , there is at most one duplicator on  @xmath59 .",
    "@xmath357 is the free @xmath203-monoid on  @xmath59 from  @xmath3 .",
    "we have given a rather concrete proof of adequacy for the sake of clarity .",
    "however , it seems that we only used the fact that  @xmath3 is a ` concrete model of the quantum lambda calculus ' ( see remark  [ rem : concrete - model - of - qlc ] ) , and that  @xmath7 is ` suitably ' enriched over convex sets . thus an abstract result might be distilled from our work stating that any concrete model of the quantum lambda calculus is adequate when suitably enriched over convex sets , but we have not pursued this .",
    "we believe selling points of our model are that it is a model for selinger and valiron s original quantum lambda calculus  @xcite ( in selinger and valiron s linear fragment  @xcite the @xmath199 modality is absent ; in hasuo and hoshino s language  @xcite the tensor type @xmath358 does not represent two qubits ; and only function types may be duplicable , @xmath359 , in the language of pagani et al .",
    "@xcite ) ; that it is adequate ( malherbe s model  @xcite is not known to be ) ; that the interpretation of  @xmath360 is rather simple ; and that it is formed using von neumann algebras , a mathematical classic .",
    "we believe our model could be improved by a more concrete description of  @xmath361 ( as all the other models have ) , and by features such as recursion and inductive types ( present in e.g.  hasuo and hoshino s and pagani s models ) , which leaves us with ample material for future research .",
    "[ [ acknowledgements ] ] acknowledgements    we thank chris heunen for spotting a typo .",
    "* proof : * * endproof * we need some results on the denotational semantics .    [",
    "lem : denot - subst ] suppose that @xmath362 and @xmath135 , so that @xmath138}:b$ ] by lemma  [ lem : subst ] .",
    "then the following diagram commute .",
    "@xmath363 ^ -{\\sem{{\\mathord{!}}\\delta,\\gamma_1,\\gamma_2{\\mathrel{\\vartriangleright}}{m[v / x]}:b } } \\ar[d]_{\\sem{{\\mathord{!}}\\delta,\\gamma_2,x : a{\\mathrel{\\vartriangleright}}m : b } } & \\sem{{\\mathord{!}}\\delta,\\gamma_1,\\gamma_2 } \\\\ \\sem{{\\mathord{!}}\\delta,\\gamma_1}\\otimes\\sem{a } \\ar[r]^-{{\\mathrm{id}}\\otimes\\sem{{\\mathord{!}}\\delta,\\gamma_2{\\mathrel{\\vartriangleright}}v : a } } & \\sem{{\\mathord{!}}\\delta,\\gamma_1}\\otimes \\sem{{\\mathord{!}}\\delta,\\gamma_2 } \\ar[u]_{{{\\mathrm{merge } } } } } \\ ] ]      [ lem : denot - beta - redu ] we have the following equations , when terms @xmath364 and values @xmath365 are appropriately well - typed .",
    "@xmath366 } } \\\\",
    "\\sem{{\\mathtt{let}\\;{{\\langlex^a , y^b\\rangle}^n}={{\\langlev , w\\rangle}^n}\\;\\mathtt{in}\\;{m } } } & = \\sem{{m[v / x , w / y ] } } \\\\",
    "\\sem{{\\mathtt{match}\\;{\\tinl[n][a , b]{v}}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{m } \\;|\\;{y^b}\\;{\\mapsto}\\;{n } ) } } & = \\sem{{m[v / x ] } } \\\\",
    "\\sem{{\\mathtt{match}\\;{\\tinr[n][a , b]{w}}\\;\\mathtt{with } \\if\\relax\\detokenize{n}\\relax\\;\\else^{n}\\fi ( { x^a}\\;{\\mapsto}\\;{m } \\;|\\;{y^b}\\;{\\mapsto}\\;{n } ) } } & = \\sem{{n[w / y]}}\\end{aligned}\\ ] ] here we abbreviate @xmath255 to @xmath367 .",
    "let @xmath369}:a$ ] be a well - typed quantum closure such that @xmath370 for all @xmath371 . then we define : @xmath372}:a}^{(l ) } = { \\mathcal{m}}_2^{\\otimes l } \\otimes \\sem{a } \\xrightarrow{{\\mathrm{id}}\\otimes \\sem{x_{l+1}:{\\mathtt{qbit}},\\dotsc ,",
    "x_m:{\\mathtt{qbit}}{\\mathrel{\\vartriangleright}}m : a } } { \\mathcal{m}}_2^{\\otimes m } \\xrightarrow{\\braket{\\psi}{-}{\\psi } } { \\mathbb{c}}\\ ] ]        consider the induction step for @xmath375 , and the case where @xmath122 is not a value .",
    "then the only possible reductions from @xmath376}$ ] are @xmath377}{\\to_{p}}{[\\,\\psi',\\psi',m'n\\,]}$ ] when @xmath378}{\\to_{p}}{[\\,\\psi',\\psi',m'\\,]}$ ] . without loss of generality , which keeps the first @xmath379 variables , with the permutation of the corresponding qubits in @xmath148 , does not change @xmath380 .",
    "the same is true for the operational semantics  @xcite . ]",
    "we may assume that @xmath381 such that @xmath382 and @xmath383 .",
    "we will simply write @xmath367 for @xmath384 and @xmath385 similarly . then @xmath386}:b}^{(l ) } \\\\ & = { \\mathcal{m}}_2^{\\otimes l}\\otimes \\sem{b } \\xrightarrow{{\\mathrm{id}}\\otimes\\varepsilon } { \\mathcal{m}}_2^{\\otimes l}\\otimes \\sem{a{\\mathbin{\\multimap}}b}\\otimes \\sem{a } \\xrightarrow{{\\mathrm{id}}\\otimes\\sem{m}\\otimes\\sem{n } } { \\mathcal{m}}_2^{\\otimes l}\\otimes { \\mathcal{m}}_2^{\\otimes h } \\otimes { \\mathcal{m}}_2^{\\otimes k } \\\\ & \\qquad\\xrightarrow{{\\mathrm{id}}\\otimes\\gamma } { \\mathcal{m}}_2^{\\otimes l}\\otimes { \\mathcal{m}}_2^{\\otimes k } \\otimes { \\mathcal{m}}_2^{\\otimes h } \\xrightarrow{\\braket{\\psi}{-}{\\psi } } { \\mathbb{c}}\\\\ & = { \\mathcal{m}}_2^{\\otimes l}\\otimes \\sem{b } \\xrightarrow{{\\mathrm{id}}\\otimes\\varepsilon } { \\mathcal{m}}_2^{\\otimes l}\\otimes \\sem{a{\\mathbin{\\multimap}}b}\\otimes \\sem{a } \\xrightarrow{{\\mathrm{id}}\\otimes\\gamma } { \\mathcal{m}}_2^{\\otimes l}\\otimes\\sem{a}\\otimes\\sem{a{\\mathbin{\\multimap}}b } \\\\ & \\qquad\\xrightarrow{{\\mathrm{id}}\\otimes\\sem{n}\\otimes{\\mathrm{id } } } { \\mathcal{m}}_2^{\\otimes ( l+k)}\\otimes\\sem{a{\\mathbin{\\multimap}}b } \\xrightarrow{{\\mathrm{id}}\\otimes\\sem{m } } { \\mathcal{m}}_2^{\\otimes ( l+k ) } \\otimes { \\mathcal{m}}_2^{\\otimes h } \\xrightarrow{\\braket{\\psi}{-}{\\psi } } { \\mathbb{c}}\\end{aligned}\\ ] ] let @xmath378}{\\to_{p_i } } { [ \\,\\psi_i,\\psi_i , m_i\\,]}$ ] ( @xmath331 ) be all the reductions from @xmath378}$ ] . by ih",
    ", we have @xmath387}:a{\\mathbin{\\multimap}}b}^{(l+k ) } \\\\ & = \\sum_{i\\in i } p_i\\sem{{[\\,\\psi_i,\\psi_i , m_i\\,]}:a{\\mathbin{\\multimap}}b}^{(l+k ) } \\\\ & = \\sum_{i\\in i } p_i\\bigl ( { \\mathcal{m}}_2^{\\otimes(l+k)}\\otimes\\sem{a{\\mathbin{\\multimap}}b } \\xrightarrow{{\\mathrm{id}}\\otimes\\sem{m_i } } { \\mathcal{m}}_2^{\\otimes(l+k ) } \\otimes { \\mathcal{m}}_2^{\\otimes h_i } \\xrightarrow{\\braket{\\psi_i}{-}{\\psi_i } } { \\mathbb{c}}\\bigr)\\end{aligned}\\ ] ] it is then straightforward to see that @xmath388}:b}^{(l)}=\\sum_i p_i\\sem{{[\\,\\psi_i,\\psi_i , m_in\\,]}:b}^{(l)}$ ] .",
    "next consider the case where @xmath389 and @xmath390 . without loss of generality we may assume @xmath391}$ ] with @xmath392 .",
    "the only reduction from @xmath37 is @xmath393}{\\to_{1 } } { [ \\,\\ket{\\psi'},\\psi,{\\langlex_1,\\dotsc , x_k\\rangle}\\ , ] } \\eqqcolon q$ ] , where @xmath394 ( @xmath395 denotes the @xmath26 identity matrix ) .",
    "we need to show that @xmath396 .",
    "note that @xmath397 thus we have @xmath398 on the other hand , we have @xmath399 and hence @xmath400 for each elementary tensor @xmath401 , @xmath402 we conclude that @xmath396 .",
    "consider the case where @xmath375 is of the form @xmath403 .",
    "only the reduction is @xmath404 } { \\to_{1}}{[\\,\\ket{\\psi},\\psi,{m[v / x]}\\,]}$ ] .",
    "the assertion holds immediately by lemma  [ lem : denot - beta - redu ] ."
  ],
  "abstract_text": [
    "<S> we present a model of selinger and valiron s quantum lambda calculus based on von neumann algebras , and show that the model is adequate with respect to the operational semantics . </S>"
  ]
}
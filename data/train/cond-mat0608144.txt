{
  "article_text": [
    "large deviations of fluctuations in a system have been studied extensively @xcite and recently have attracted much attention especially in the non - equilibrium stationary states of driven systems @xcite . in a recent paper , we have argued that in the critical slope type stochastic toppling models in @xmath6 dimensions , the probability of large negative height fluctuations @xmath7 about the mean for a system of size @xmath8 decays superexponentially , as @xmath9 , for @xmath3 , with @xmath10 held fixed @xcite . here",
    "@xmath5 and @xmath11 is an exponent defined by @xmath12 .",
    "since the arguements are plausible but not rigorous , it seems worthwhile to check them by numerical simulations .",
    "however , straight - forward sampling techniques fail in this case , as the probabilities become very small even for fairly small @xmath8 . for example",
    ", for @xmath13 , in @xmath14 , already the probability of the minimum slope configuration is of order @xmath15 .    in this paper",
    ", we numerically estimate the probabilities of large negative height fluctuations of the pile in the steady state in the one dimensional oslo ricepile model using a variation of  go with the winners \" strategy @xcite .",
    "we estimate the full probability distribution function @xmath16 where @xmath17 is height fluctuations of the pile about its mean value .",
    "this distribution has a scaling form @xmath18 .",
    "the @xmath19 oslo model is expected to be the edwards - wilkinson universality class , for which @xmath20 @xcite .",
    "our non - rigorous arguments in @xcite imply that the scaling function should vary as @xmath21 for @xmath22 where @xmath5 .",
    "our numerical data fully supports the theoretical expectation .",
    "the oslo ricepile model @xcite is a stochastic sandpile - like model defined on a one dimensional lattice with a critical threshold value for the slope above which a toppling occurs , and the threshold is randomly reset after each toppling . here we use an equivalent version of the rules as given in @xcite : we consider a chain of lengh @xmath8 .",
    "a configuration of the pile is specified by an integer height variable @xmath23 at each site @xmath24 . the slope @xmath25 at site @xmath24 is defined to be @xmath26 , with @xmath27 .",
    "any site @xmath24 with slope @xmath28 is stable .",
    "any site @xmath24 with slope @xmath29 is said to be unstable , and relaxes by toppling .",
    "slope @xmath30 can be either stable or unstable .",
    "whenever slope at a site reaches the value @xmath30 from a different value , because of incoming or outgoing grains , it is created as an unstable @xmath30 ( denoted by @xmath31 ) .",
    "a @xmath31 becomes stable @xmath30 ( denoted by @xmath30 without overbar ) with probability @xmath32 without any toppling , or it topples with probability @xmath33 .",
    "whenever there is a toppling at site @xmath24 , one grain is moved from the site @xmath24 to @xmath34 .",
    "if there is a toppling at the right end @xmath35 , one grain goes out of the system .",
    "grains are added only at site @xmath36 and only after avalanche caused by the previous grain has stopped .",
    "the @xmath19 oslo ricepile model has a remarkable abelian property that the final height configuration does not depend on the order we topple the unstable sites @xcite . also , after addition of total @xmath37 grains to any configuration , probabilities of different stable configurations are exactly the same as in the steady state , independent of the initial configuration @xcite .",
    "the number of recurrent stable configurations in the critical states can be calculated exactly , and is approximately @xmath38 for large @xmath8 @xcite . in the steady state height profile",
    "always fluctuate between slope @xmath36 and @xmath30 .",
    "the height @xmath39 at the site @xmath36 has a stationary probability distribution , @xmath40 , which is sharply peaked near its average value @xmath41 . for large system size @xmath8 ,",
    "the average height @xmath41 varies linearly with @xmath8 , and and the fluctuations in @xmath39 scale as a sublinear power of @xmath8 , with variance of @xmath39 varying as @xmath42 , with @xmath43 .",
    "the probability distribution of @xmath39 in the steady state can be exactly calculated numerically for small @xmath8 using the operator algebra satisfied by addition operators @xcite .",
    "we recapitulate this briefly here .",
    "we denote any configuration by specifying slope values at all sites from @xmath44 to @xmath35 by a string of @xmath8 integers ( with or without overbar ) , _",
    "e.g. _ , @xmath45 .",
    "for unstable site @xmath46 , the rules are as given below .",
    "@xmath47 @xmath48 @xmath49 . at the left end , rules are as given above except that there is no left neighbour of site @xmath36 . at the right end @xmath35 ,",
    "the rules are @xmath50 @xmath51    using these toppling rules repeatedly and the abelian property , we can relax any unstable configuration .",
    "let us now consider the state @xmath52 where all the slopes are unstable @xmath30 s .",
    "if we add one more grain at site @xmath44 in this state , we get the same state back ( toppling the site with @xmath53 repeatedly ) which implies that it is the steady state .",
    "so if we relax this configuration fully , we get probabilities of all the configuration in the steady state . for example , if we relax @xmath54 for @xmath55 , we get the following sequence , @xmath56 @xmath57 @xmath58 @xmath59    ) of the probability of occurrence of the minimum slope configuration , calculated exactly numerically , is plotted against system size @xmath60 in the oslo ricepile model.,width=340 ]    one can similarly calculate the steady state probabilities for higher @xmath8 . in table",
    "[ table ] , we list the resulting expression for the probability of the minimum slope configuration @xmath61 for @xmath62 . for larger @xmath8 ,",
    "the calculation becomes very tedious .",
    "there are two branches for relaxing any unstable site with @xmath63 and the total cpu time increases as @xmath64 as @xmath65 relaxations of unstable sites are required to reach the steady state @xcite .",
    "we have calculated the probability of minimum slope exactly numerically for @xmath66 using a simple code written in @xmath67 .",
    "we used specific numerical values @xmath68 , to simplify the calculation , so that the probabilities are simple numbers and not polynomials in @xmath32 . even then , for @xmath69 , the computer time required becomes prohibitive .",
    ".table for the probability of the minimum slope for @xmath70 . [ cols=\"^,^\",options=\"header \" , ]     for large negative deviations , the probability becomes very small . even for system size as small as @xmath71 and @xmath72 ,",
    "the probabilities of the minimum slope are @xmath73 and @xmath74 respectively . for @xmath75 ,",
    "this probability is @xmath76 .",
    "we argued in @xcite that this probability is @xmath77 with @xmath78 , for @xmath79 , and is expected to decrease as @xmath80 for all @xmath81 . in fig.1 we have plotted negative of logarithm of the probability of the minimum slope configuration versus @xmath60 for @xmath82 .",
    "the linear increase is in agreement with the theoretical expectation .",
    "in the simplest monte carlo algorithm to estimate probabilities of low - slope configurations in the steady state , one can start with the unstable configuration @xmath83 , and relax it by using the probabilistic toppling rules until a final stable configuration is reached .",
    "if this is repeated many times , the fractional number of configurations with a given value of @xmath39 gives an estimate of the corresponding probability .",
    "however , this method is clearly unsuitable for estimating probabilities which are much smaller than @xmath84 . for estimating quantities like the probability of the minimal slope configuration in the steady state ,",
    "this method is useless for @xmath85 or so .    clearly , we need to implement some sort of importance sampling . in the simplest implementation",
    ", one thinks of different possible configurations in the course of evolution of an avalanche at each step @xmath86 as a branching tree .",
    "if we reach a configuration @xmath87 at a node at the @xmath86-th step , the probability of the process stopping is , say @xmath88 .",
    "if we want to sample the low slope configurations , we do not want the process to die too soon .",
    "then we do not select any of the nodes that correspond to stable configurations , and select one of the remaining branches with probability equal to their original probability , divided by the factor @xmath89 $ ] , and the final survival probability is estimated by product of such factors .",
    "however , this procedure also is not satisfactory for our problem as there are some unstable nodes all of whose possible resulting stable configurations have heights greater than the minimum height . for example",
    "let us consider a case for @xmath90 where @xmath91 has two descendants @xmath92 and @xmath93 , both stable .",
    "in the branching tree , these are like dead - end streets . the relaxation process will eventually die if we encounter with such unstable configurations .",
    "but it is difficult to identify these directly and avoid them , without a computationally expensive depth - search .",
    "so the resulting process still has a nonzero probability of reaching such a node at the next step , and the overall probability of survival still decreases exponentially with the depth of the tree .",
    "we now describe an algorithm that does manage to avoid this problem , but at the cost of having to define and update one additional real variable at each site of the lattice .",
    "we start with a configuration with all sites unstable , and all @xmath94 .",
    "we imagine that there is a random number , uniformly distributed between @xmath95 and @xmath36 , at each site @xmath24 . after each toppling",
    ", the random number at the site is replaced by a new random number .",
    "let the value of this random number at site @xmath24 at the end of the update - step @xmath86 be @xmath96 . at @xmath97 ,",
    "all @xmath98 are independent random variables lying between @xmath95 and @xmath36 .    as it does not matter in which order we topple the unstable sites , we choose the following rule : at any time step , we first topple any unstable sites with @xmath99 , and reset the random number at that site .",
    "when all the unstable sites are with slope @xmath30 , _ we topple the site having the largest random number _ , if the random number is greater than @xmath32 .",
    "if the number is less than @xmath32 , the avalanche stops . this constitutes the end of one update step .",
    "note that one update step may involve more than one topplings at sites with @xmath100 , but there is exactly one toppling at a site with @xmath101 in each update step .",
    "the problem is to determine the conditional probability of further evolutions for different avalanche histories , if we impose the condition that an avalanche does not stop .",
    "note that our rule of selecting the unstable @xmath102 for toppling introduces correlations between different @xmath96 : if we know the random number at the site selected for toppling , random number at all other not - selected sites must be smaller .",
    "our algorithm uses this correlation .",
    "we do not start by assigning specific values to the random number @xmath96 at all sites .",
    "the only information about @xmath96 which is known , and regularly updated , is the largest allowed value of @xmath96 determined by the known history of the avalanche .",
    "let us call this @xmath103 .",
    "the toppling history can be specified by giving the site with @xmath63 selected for toppling at each update step , and the random number at that site at the time of toppling .",
    "let @xmath104 be the site selected for toppling at the @xmath86-th update step , and @xmath105 be the value of the random number at @xmath104 at the time , i.e. @xmath106 .",
    "we shall denote this sequence upto time @xmath86 by @xmath107 : r = 1 { \\rm ~to~ } t\\}$ ] . given the sites that have been toppled",
    ", one can determine the set of unstable sites @xmath108 with @xmath109 , out of which the site with the maximum random number has to be selected at update - step @xmath110 . since we know that @xmath111 for any site @xmath112 has not been selected for toppling earlier since it was reset , it must be smaller than all the corresponding @xmath113 s selected since then .",
    "if it was reset at update step @xmath114 , we must have @xmath115    at any update step @xmath110 , we first topple any sites with @xmath116 , and reset @xmath117 at the site to @xmath36 , and continue this till no slopes are @xmath118 .",
    "let @xmath108 be the set of unstable sites with @xmath63 .",
    "it is straight forward to determine the conditional joint probability distribution of @xmath119 $ ] , given the condition that the avalanche does not stop , using the information in @xmath120 ( see below ) .",
    "we then select one of these unstable sites in @xmath108 as the one having the largest random number , and assign the value of the random number at this site using the correct conditional probability distribution .    the conditional probability distribution",
    "that @xmath111 is @xmath121 , given the value of @xmath122 , is @xmath123 where @xmath124 as @xmath125 , for @xmath126 , and @xmath127 for @xmath128 . as there is no correlation between the values @xmath111 for different @xmath129 s for the same time @xmath86 , beyond that implied by the conditions that @xmath130 , we must have @xmath131    if we put an additional condition that @xmath132 , the corresponding conditional distribution of @xmath133 is given by @xmath134 in the appendix we describe the algorithm for generating a random number with a given distribution of the form eq.([eq6 ] ) .",
    "let @xmath135 be the probability that @xmath136 .",
    "clearly , we have @xmath135 equals to @xmath137 $ ] .",
    "i.e. , @xmath138 the relative weight of a particular history @xmath139 being realized without the avalanche getting stopped is @xmath140 .",
    "we calculate the attrition factor @xmath135 using eq.([eq7 ] ) .",
    "we then topple at the selected site @xmath141 , and update the values of @xmath142 , and set @xmath143 for @xmath144 . and repeat .",
    "after we start relaxing the unstable configuration @xmath145 , the height at site @xmath36 gradually decreases . at some step of relaxation ,",
    "the height at first site becomes @xmath146 for the first time in the course of relaxation .",
    "we multiply all the previous factors , @xmath147 s , upto this step and this product gives @xmath148 averaging @xmath149 over many initial realizations , we get the probability of height at the first site being less than or equal to @xmath150 , i.e. , @xmath151    the estimate of probability of the minimum configuration is obtained by calculating the weight function @xmath152 where the product is over all update steps @xmath86 required to reach the minimum configuration . for different realizations , we get different values of @xmath153 and , similarly as above , averaging over different values by taking many realizations",
    "gives us the probability of the minimum slope .",
    "we illustrate this procedure by a simple example .",
    "consider a rice pile with @xmath71 . at @xmath97",
    ", we have @xmath154 , as all sites are unstable .",
    "also , at this stage @xmath155 for all sites . in this case",
    ", the probability distribution of @xmath156 is given by @xmath157 this can be generated as follows : select a random number @xmath158 uniformly distributed between @xmath95 and @xmath36 .",
    "if @xmath159 , put @xmath160 . if not , discard this value , and choose again . in this case , we get @xmath161 .",
    "then , we choose @xmath162 as one of the sites from @xmath163 at random , with equal probability .",
    "say , we get @xmath164 .",
    "then , we topple at this site and assign @xmath165 to other sites with unstable @xmath30 s .",
    "toppling makes sites @xmath36 and @xmath118 unstable , and we topple there as well .",
    "whenever we topple at site with slope @xmath118 , we reset the @xmath117 at that site to @xmath36 . finally , toppling at all unstable sites with @xmath100",
    ", we get the configuration with @xmath166 , and",
    "@xmath117 at all these sites is reset to @xmath36 .",
    "so , now @xmath167 and @xmath168",
    ". now we choose @xmath169 at random from @xmath170 , say @xmath171 .",
    "toppling at this site induces toppling at other sites , and finally we get the configuration of unstable sites @xmath172 , and we have @xmath173 at all these sites .",
    "we now generate the variable @xmath174 , which turns out to have the same distribution as @xmath175 .",
    "then we have @xmath176 .",
    "now we choose a site from @xmath177 .",
    "and so on .",
    "we repeat the above procedure for many realizations and take the average of logarithm of the weight @xmath149 . in fig.[error_bar",
    "] we have plotted the numerically obtained distribution of @xmath178 using @xmath179 initial realizations for @xmath180 .",
    "it has a peak at @xmath181 and decays rapidly about the peak value .",
    "we fit the data point at the left of the peak value to a gaussian distribution with mean @xmath182 and variance @xmath183 .",
    "it should be noted here that our simulation can not accurately estimate the probabilities of near slope configurations for large @xmath8 and the fractional error may be large , but the logarithm of the probabilities can be estimated with reasonably small fractional error @xcite .",
    "taking bin size @xmath184 and starting with @xmath179 initial realizations for @xmath180 .",
    "we fit the left tail of the data points with a gaussian distribution with mean @xmath185 and variance @xmath183.,width=340 ]    as a check of our simulation algorithm , we calculated the probability of the minimum slope configurations for small @xmath8 and the numerical values match well with the values obtained from exact numerical calculation using the method in section.3 .",
    "for example , the probability of the minimum slope , for @xmath90 , is calculated to be @xmath186 after averaging the data over @xmath179 realizations and the value is correct upto three significant digits .",
    "we have compared our results obtained from two procedures , _",
    "i.e. _ , the monte carlo simulation and exact numerical calculation and plotted negative of logarithm of the probabilities against @xmath8 in fig.[exact_mc2 ] for @xmath66 .",
    ": logarithm ( base @xmath187 ) of the probability of the minimum slope configuration is plotted against the system size @xmath8 in the @xmath188 oslo ricepile model . the data is averaged over @xmath179 realizations.,width=340 ]    for @xmath150 near @xmath8 , @xmath149 is a product of approximately @xmath189 different factors @xmath147 s , the logarithm of @xmath149 is a sum of @xmath189 random variables .",
    "while these variables @xmath147 s are neither strictly independent nor they are identically distributed , our simulation suggest that correlations between these factors at different times are weak , so that we can expect central- limit - theorem like result to hold",
    ". then @xmath190 $ ] may be expected to be normally distributed with a mean and variance both proportional to @xmath189 and @xmath149 would be log - normally distributed .",
    "in fact , the experimentally obtained probability distribution function of @xmath191 shows significant deviations from gaussian [ fig.[error_bar ] ] .    assuming that the distribution of the random variable @xmath192 $ ] has the form @xmath193 $ ]",
    ", we get the probability of the minimum slope equal to @xmath194 thus , if the gaussian approximation holds for the distribution , @xmath195 this estimate need not be precise as the terms contribute significantly to @xmath196 are in the tail of the distributions and central limit theorem need not hold there .",
    "however our numerical estimate indicates that this approximation is indeed very good .",
    "this is because the deviations from the gaussian behavior are stronger for smaller values of @xmath197 , but these do not contribute much to @xmath198 .",
    "for example , from the simulation for @xmath199 , we get @xmath200 , @xmath201 , @xmath202 .",
    "the gaussian approximation to distribution of @xmath203 would give @xmath204 .",
    "in fig.[mc2_1112 ] , we have compared the actual values of @xmath205 from the simulation with the estimate from the gaussian approximation for different values of the system size @xmath8 .    in fig.[mc2",
    "] we have plotted negative of @xmath206 as a function of @xmath8 and fitted it with a curve @xmath207 .",
    "we get a god fit for @xmath208 , @xmath209 and @xmath210 .    , as computed directly from the simulations ( blue @xmath211 ) , and as estimated by using the gaussian approximation in eq.[exp1 ] ( light blue bullet ) for different system sizes @xmath8 . also shown",
    "is @xmath212 ( red @xmath213).,width=340 ]     plotted against system size @xmath8 in the @xmath188 oslo ricepile model .",
    "the data points are fitted with @xmath207 where @xmath214 , @xmath215 and @xmath216.,width=340 ]     for systems of size @xmath217 .",
    "@xmath218 has been plotted against @xmath219 .",
    "each point is averaged over @xmath179 realizations.,width=340 ]    $ ] , for @xmath220 , has been plotted against the scaling variable @xmath221 where @xmath222 .",
    "the data points are fitted with a straight line @xmath223 and it shows that the scaling function @xmath224 varies as @xmath225 for @xmath226.,width=340 ]    now we calculate the full probability distribution @xmath40 of height @xmath39 at site @xmath36 .",
    "we take the average of this product over many realizations and estimate @xmath227 $ ] using the gaussian approximation .",
    "we thus determined @xmath228 for different @xmath150 , for @xmath229 .",
    "the data is averaged over @xmath179 initial realizations . in fig.[h1_scaling_mc ] , we get a good scaling collapse by plotting @xmath230 against the scaling variable @xmath231 where @xmath232",
    ". therefore @xmath233 a has scaling form @xmath234 $ ] at the central region as well as at the tail .",
    "we see from the scaling plot the scaling function is highly asymmetric about the origin .",
    "since the probability of minimum slope configurations varies as @xmath235 for large @xmath8 and the height fluctuation @xmath236 scales with system sizes as @xmath237 , the scaling function @xmath238 must vary as @xmath225 . in fig.[h1_scaling1_mc ] , we plot logarithm of @xmath239 versus @xmath221 for @xmath220 ( i.e. , fluctuations below average height ) . the data gives a reasonably good fit to a straight line with slope @xmath240 .",
    "we have done a monte carlo simulation using importance sampling to study large deviations in the one dimensional oslo ricepile model .",
    "we estimated probabilities of large height fluctuations of the pile and these probabilities are order @xmath0 or even much less than this .",
    "we have shown that logarithm of the probability of large negative height fluctuation @xmath241 varies as @xmath242 for large @xmath8 .",
    "we also calculated numerically the full probability distribution of height of the pile , and find that it has scaling form @xmath243 , with @xmath244 $ ] varying as @xmath245 for large negative @xmath246 ."
  ],
  "abstract_text": [
    "<S> we have studied large deviations of the height of the pile from its mean value in the oslo ricepile model . </S>",
    "<S> we sampled these very rare events with probabilities of order @xmath0 by monte carlo simulations using importance sampling . </S>",
    "<S> these simulations check our qualitative arguement [ phys . </S>",
    "<S> rev . </S>",
    "<S> e , * 73 * , 021303 , 2006 ] that in steady state of the oslo ricepile model , the probability of large negative height fluctuations @xmath1 about the mean varies as @xmath2 as @xmath3 with @xmath4 held fixed , and @xmath5 . </S>"
  ]
}
{
  "article_text": [
    "let @xmath1 be the braid group of @xmath2-strings and @xmath3 be the standard generators . for a group @xmath0 ,",
    "we denote by @xmath4 the @xmath2-fold direct product of @xmath0 , and we call an element of @xmath4 a _ @xmath0-system _ of length @xmath2 . for a fixed positive presentation @xmath5 of @xmath0 we call an element @xmath6 , a @xmath0-system consisting of positive generators @xmath7 , a _ generator @xmath0-system_.    the _ hurwitz action _ is a right action of @xmath1 on @xmath4 defined by @xmath8 where we denote @xmath9 by @xmath10 .",
    "the hurwitz action is diagrammatically represented as in figure [ fig : hurwitzaction ] .",
    "two @xmath0-systems are called _ hurwitz equivalent _ if they belong to the same orbit of the hurwitz action .",
    "the group @xmath0 itself acts on @xmath4 from the right by conjugations , as @xmath11 two @xmath0-systems are said to be _ conjugate _ if they belong to the same @xmath0-orbit .",
    "the actions of @xmath0 and @xmath1 commute , so we regard the group @xmath12 acting on @xmath4 .",
    "we call this action the _ hurwitz - conjugation action _ ( _ hc - action _ , in short ) .",
    "two @xmath0-systems @xmath13 and @xmath14 are called _ hurwitz - conjugation equivalent _ ( _ hc - equivalent _ ) if they belong to the same orbit of the hc - action .",
    "we denote by @xmath15 ( resp .",
    "@xmath16 ) if @xmath13 and @xmath14 are hurwitz ( resp .",
    "hc- ) equivalent .    in this paper",
    "we study the following two problems .",
    "hurwitz equivalence problem : :    given two @xmath0-systems , determine whether they are hurwitz    equivalent or not .",
    "hurwitz search problem : :    given two hurwitz equivalent @xmath0-systems    @xmath13 and @xmath14 , find a    braid @xmath17 such that    @xmath18 .",
    "these problems are very hard compared to the word and conjugacy problems .",
    "liberman - teicher showed that these problems are undecidable even for the braid groups @xcite , which have various good properties and have nice solutions for the word and conjugacy problems .    although the hurwitz equivalence / search problems are purely algebraic problems , they are closely related to geometry and topology . by considering certain monodromy representations @xcite ,",
    "many geometric objects in 4-dimensional topology and geometry such as braided surfaces @xcite , lefschetz fibrations @xcite , and complex surfaces or complex curves @xcite,@xcite are represented by a @xmath0-system for an appropriate group @xmath0 .",
    "such a @xmath0-system representative is not unique .",
    "two @xmath0-system represent the same geometric object if and only if they are hurwitz ( or , hc- ) equivalent .",
    "thus , the hurwitz equivalence / search problems are directly related to the classification problems these topological or geometric objects .",
    "the aim of this paper is to propose an algebraic approach to the hurwitz equivalence / search problem using theory of _ word - reversing_. we provide a criterion for two generator @xmath0-systems to be hurwitz equivalent in theorem [ thm : main ] . using this criterion",
    ", we give algorithmic approaches ( algorithm [ alg : htestsimple ] , algorithm [ alg : htest ] ) to solve the hurwitz equivalence / search problems .",
    "unfortunately , our algorithms can be applied in very special cases and even worse , they are not deterministic and do not necessarily terminate in finite time .",
    "nevertheless , our algorithm has several benefits .",
    "first , in successful cases , our algorithm solves not only hurwitz equivalence problems but also hurwitz search problems .",
    "moreover , one can also try to get stronger result , the classification of the hurwitz equivalence classes of generator @xmath0-systems .",
    "second , in practice , one can apply our algorithms to try to show _ arbitrary _ @xmath0-systems are indeed hurwitz equivalent , as we will discuss in section 4.3 .",
    "moreover , our algorithms can be implemented on a computer easily . finally , as for an application of geometry and topology , in many cases to show given @xmath0-systems are",
    "_ not _ hurwitz equivalent is done by means of invariants of corresponding geometric objects .",
    "thus , our algorithmic approach will provide a complementary method to studying such geometric objects .",
    "the plan of the paper is as follows . in section 2 ,",
    "we review the theory of _ word reversing _ and _ complete group presentations_. we explain how the word reversing method solves the hurwitz search problem in section 3 .",
    "we also present several applications , including results of hc - equivalences .",
    "based on the criterion in section 3 , we present algorithms to solve the hurwitz equivalence / search problems in section 4 . in appendix",
    "we give an algorithm to try to show the embeddability of associated monoid , which allows us to try to classify generator @xmath0-systems . +",
    "* acknowledgments . *",
    "the author is grateful to his advisor toshitake kohno for his encouragement and his comments .",
    "this research was supported by jsps research fellowships for young scientists .",
    "in this section we summarize the theory of word reversing and complete presentation . for details , see @xcite,@xcite . except appendix , in this paper",
    "we only use right word reversing and right complete presentations , so we always drop the word  right \" .",
    "let @xmath19 be a finite set and @xmath20 be the free monoid generated by @xmath7 .",
    "for a word @xmath21 we denote the length of @xmath22 with respect to the generating set @xmath7 by @xmath23 . a _ positive relation _",
    "is a pair of elements in @xmath20 , denoted by @xmath24 .",
    "a positive relation @xmath24 is _ homogeneous _ if @xmath25 . a positive relation of the form @xmath26 or @xmath27 is called a _ reducible relation_. as a group presentation",
    ", a reducible relation can be replaced by the simpler relation @xmath28 .",
    "a _ positive group presentation _ is a group presentation of the form @xmath5 , where @xmath29 is a set of positive relations .",
    "each positive relation @xmath28 is understood as a group relation @xmath30 .",
    "if both @xmath7 and @xmath29 are finite set , we say @xmath31 is a _ finite positive presentation_. we say @xmath31 is _ homogeneous _ if all relations are homogeneous . the _ associated monoid _ @xmath32 is a monoid @xmath33 , where @xmath34 is the smallest congruence on @xmath20 that includes @xmath29 .",
    "now we introduce a word reversing , which is a fundamental tool to study positive presentation .",
    "let @xmath35 and @xmath36 be a word on @xmath37 .",
    "we say the word @xmath36 is obtained from @xmath35 by performing one _ word reversing _ if one of the following holds .    1 .",
    "@xmath36 is obtained from @xmath35 by replacing a subword of the form @xmath38 with a subword @xmath39 , where @xmath40 are nonempty words on @xmath7 and @xmath41 are word on @xmath7 possibly an empty word , such that the positive relation @xmath42 is contained in @xmath29 .",
    "@xmath36 is obtained from @xmath35 by deleting a subword of the form @xmath43 where @xmath44 is a nonempty word on @xmath7 .",
    "diagrammatically , the word reversing is expressed as in figure [ fig : reversing ] .",
    "we say a word @xmath35 on @xmath37 is _ reversible _ to a word @xmath36 on @xmath37 if @xmath36 is obtained from @xmath35 by iterated applications of word reversing operations .",
    "we denote by @xmath45 if @xmath35 is reversible to @xmath36 .    for @xmath46",
    ", @xmath47 implies @xmath48 ( * ? ? ?",
    "* proposition 1.9 ) .",
    "thus word reversing is used to show given two words are congruent .",
    "in fact if @xmath47 then the word reversing not only shows @xmath44 and @xmath49 are congruent but also provides a van - kampen diagram of @xmath50 , which contains more information about the congruence relation .",
    "let @xmath51 be words representing the same element of @xmath52 .",
    "a _ van - kampen diagram _ of @xmath53 is an oriented sub - graph @xmath54 of the cayley graph of @xmath52 which has the following properties .    1 .",
    "@xmath54 has the unique source vertex which corresponds to an element @xmath55 , and the unique sink vertex which corresponds to an element @xmath56 .",
    "2 .   @xmath54 is a planer graph , and bounded by two edge paths defined by the word @xmath35 and @xmath36 .",
    "( in particular , @xmath54 defines a cellular decomposition @xmath57 of a 2-disc ) .",
    "the labeling of the boundary of each 2-cell in @xmath57 is a relation in @xmath29 .",
    "that is , the labeling is of the form @xmath38 and the relation @xmath48 lies in @xmath29 .",
    "see figure [ fig : van - kampen ] for example .",
    "once a van - kampen diagram of @xmath53 is constructed , one can find a way to change the word @xmath35 into @xmath36 by using the relations in @xmath29 .",
    "that is , one can find a sequence of words on @xmath7 @xmath58 where each @xmath59 is obtained from @xmath60 by performing a relation in @xmath29 .    recall the diagrammatic expression of word - reversing described in figure [ fig : reversing ] .",
    "then the word reversing is considered as an operation to glue a 2-cell along paths @xmath38 , or to identify two 1-cells having the same label .",
    "thus , by expressing word reversing in a diagrammatic way , if @xmath47 then we can draw a van - kampen diagram for @xmath50 .",
    "[ exam : van - kampen ] let us consider a positive presentation of the braid group @xmath61 @xmath62 here the relation @xmath63 is understood as the three relations @xmath64 , @xmath65 and @xmath66 .",
    "let us reverse the word @xmath67 . @xmath68    according to this word reversing sequence , we attach a 2-cells or identify 1-cells , and obtain a van - kampen diagram of @xmath69 as shown in figure [ fig : van - kampen ] . from this van - kampen diagram , we obtain a sequence of words @xmath70 which converts the word @xmath71 to @xmath72 by using the relations in @xmath29 .    , width=340 ]    in general word reversing is not sufficient to show two words are congruent",
    "that is , @xmath48 does not imply @xmath47 .",
    "complete presentation _ is a positive presentation such that the converse is true .    a positive group presentation @xmath73 is _ complete _ if @xmath47 is equivalent to @xmath48 for all @xmath46 .",
    "thus , a complete presentation is a positive presentation such that word - reversing can detect congruence relations .",
    "there is a nice characterization of a complete presentation for a finite positive homogeneous presentation .",
    "this allows us to check whether a given homogeneous finite presentation is complete or not .",
    "a finite positive homogeneous presentation @xmath74 is complete if and only if the condition @xmath75 ( called the strong cube condition on @xmath7 ) holds .    * for @xmath76 and @xmath46 ,",
    "if @xmath77 then @xmath78    based on the strong cube condition , one can try to make a non - complete finite homogeneous positive presentation complete as follows .",
    "assume that the strong cube condition fails for some @xmath79 .",
    "that is , @xmath80 but @xmath81 .",
    "then we add a new relation @xmath82 so that the strong cube condition is satisfied for such @xmath79 .",
    "in general adding a new relation produces a new word reversing sequences , so the new presentation is not necessarily complete and we may iterate this operation . the precise algorithm is given as algorithm [ alg : complete ] .",
    "as we explained , this algorithm does not necessarily terminate .",
    "input : a finite homogeneous positive presentation @xmath83 of a group @xmath0 .",
    "+ output : a complete presentation of @xmath0 .",
    "compute all pairs of words @xmath46 such that @xmath80 for some @xmath76 .",
    "2 .   check @xmath84 holds for all @xmath40 obtained by step ( 1 ) .",
    "if @xmath85 , then replace the presentation @xmath31 with the new presentation @xmath86 and go back to step ( 1 ) .",
    "3 .   stop .",
    "[ exam : completion ]    let us consider the presentation of the braid group @xmath61 given by @xmath87    we have @xmath88 , but @xmath89 .",
    "thus we add a new relation @xmath90 to @xmath91 and obtain the new presentation @xmath92 in @xmath93 , a new word reversing sequence @xmath94 appears . since there are no relations of the form @xmath95 , @xmath96 .",
    "thus , the presentation @xmath93 is not complete .",
    "we need to add further relation @xmath97 , and so on . in this case , the completion procedure never terminate .    on the other hand , let us consider another presentation of @xmath61 @xmath98 used in example [ exam : van - kampen ] .",
    "@xmath99 satisfies the strong cube conditions , so it is complete .",
    "in this section we provide a criterion for hurwitz equivalence and hc - equivalences . to state our results , we introduce the notion of hurwitz - compatible relations .",
    "let @xmath100 be a finite homogeneous positive presentation of a group @xmath0 and @xmath101 be a positive relation in @xmath29 . for words",
    "@xmath102 , @xmath103 on @xmath7 , let @xmath104 , @xmath105 be generator @xmath0-systems defined by @xmath106 we say a homogeneous positive relation @xmath107 is _ hurwitz - compatible _ if there exists an @xmath108-braid @xmath109 such that @xmath110 .    by definition , hurwitz compatible relations are homogeneous .",
    "a typical example of a hurwitz - compatible relation is a _ word - conjugacy relation _ , which is a positive relation of the form @xmath111 , where @xmath112 and @xmath21 .",
    "in fact , @xmath113 , thus we may choose @xmath114 .",
    "first of all , observe that there is an obvious and fundamental invariant of hurwitz equivalence classes .",
    "the _ coxeter element _ ( or , _ the global monodromy _ ) of a @xmath0-system @xmath115 is an element @xmath116 .",
    "it is easy to see if @xmath15 then @xmath117 , and if @xmath16 then @xmath118 and @xmath119 are conjugate .",
    "the coxeter element serves as a fundamental invariant to study hurwitz equivalence class . for example , in @xcite the author classified @xmath61-systems having finite hurwitz orbits by studying the centralizer of the coxeter element .    for a generator @xmath0-system @xmath13",
    ", we can consider the refinement of the coxeter element .",
    "we call the word @xmath120 the _ coxeter word _ of @xmath13 and denote by @xmath121 .",
    "the coxeter words contain more information than the coxeter element itself .",
    "[ lem : key ] let @xmath122 be a positively presented group and @xmath123 , @xmath124 be generator @xmath0-systems of the same length .",
    "let @xmath125 and @xmath126 be the coxeter words of @xmath127 and @xmath128 .    1 .",
    "if @xmath36 is obtained from @xmath35 by applying a hurwitz - compatible relation @xmath129 in @xmath29 , then @xmath127 and @xmath128 are hurwitz equivalent .",
    "if @xmath36 is obtained from @xmath35 by applying a cycling operation @xmath130 , then @xmath127 and @xmath128 are hc equivalent .",
    "let us write @xmath131 , @xmath132 and @xmath133 be the @xmath134-fold shift map defined by @xmath135 where @xmath136 and @xmath137 .",
    "let @xmath138 be the natural embedding of @xmath139 .",
    "assume the relation @xmath129 is hurwitz - compatible , and let @xmath109 be an @xmath108- braid such that @xmath140 .",
    "then , @xmath141 , thus @xmath127 and @xmath128 are hurwitz equivalent .",
    "similarly , assume that @xmath36 is obtained from the cycling operation .",
    "since @xmath142 , @xmath127 and @xmath128 are hc - equivalent .",
    "theorem [ thm : main ] below shows the relationships between word reversing and hurwitz equivalences , and reveals that under some conditions the coxeter element completely determines the hurwitz equivalence class .",
    "[ thm : main ] let @xmath143 be a finite homogeneous positive presentation of a group @xmath0 such that @xmath29 consists of hurwitz - compatible relations .",
    "let @xmath144 be generator @xmath0-systems of the same length .    1 .   if @xmath145 , then @xmath146 .",
    "2 .   if @xmath147 , then @xmath148 . moreover , in this case we can solve the hurwitz search problem for @xmath127 and @xmath128 .",
    "3 .   if @xmath52 injects in @xmath0 , then @xmath149 if and only if @xmath150 holds .",
    "if @xmath52 injects in @xmath0 and the presentation @xmath31 is complete , then @xmath149 if and only if @xmath147 . in such case",
    ", we can solve not only hurwitz equivalence problem but also hurwitz search problem .",
    "\\(1 ) directly follows from lemma [ lem : key ] . to prove ( 2 ) , recall if @xmath151 , then we can obtain a van - kampen diagram for @xmath50 and find a sequence of words on @xmath7 @xmath58 where each @xmath59 is obtained from @xmath60 by performing the relations in @xmath29 .",
    "let @xmath152 be the generator @xmath0-system of length @xmath153 whose coxeter word is @xmath60 . then by lemma",
    "[ lem : key ] , we can find a braid @xmath154 such that @xmath155 .",
    "@xmath156 so we solved the hurwitz search problem . to prove ( 3 ) ,",
    "observe that if the associated monoid @xmath52 embeds in @xmath0 , then @xmath150 is equivalent to @xmath145",
    ". finally , ( 4 ) follows from ( 2 ) , ( 3 ) and the definition of the complete presentation .    as we have given as algorithm [ alg : complete ] , for a finite homogeneous positive presentation one can try to check make the presentation complete .",
    "moreover , using algorithm [ alg : embed ] in appendix , one can also try to show @xmath52 injects in @xmath0 using the theory of word reversing .",
    "thus , one can algorithmically try to show whether two generator @xmath0-systems are hurwitz equivalent or not by using theorem [ thm : main ] .",
    "this point of view will be pursued in next section .",
    "theorem [ thm : main ] is applied for some well - known families of groups .",
    "the first example is an artin group .",
    "let @xmath157 be a coxeter matrix , which is a symmetric matrix such that @xmath158 and @xmath159 for distinct @xmath160 and @xmath161 .",
    "the _ artin group _ @xmath0 corresponding to @xmath162 is a group defined by the positive presentation @xmath163 where @xmath164 is a positive irreducible word conjugacy relation @xmath165 we call this presentation the _",
    "standard presentation_. an artin group is called _ right - angled _ if all @xmath166 @xmath167 are either @xmath168 or @xmath169 .",
    "a right - angled artin group is represented by its _ associated graph _ ,",
    "whose vertices are generators and two vertices @xmath170 and @xmath171 are connected by a single edge if and only if their corresponding generators @xmath172 and @xmath173 do not commute , in other words , if and only if @xmath174 .    [ cor : artin ] let @xmath0 be an artin group with the standard presentation @xmath31 and @xmath127 , @xmath128 be generator @xmath0-systems having the same length . then ,    1 .   @xmath149 if and only if @xmath150 .",
    "2 .   if @xmath0 is a right - angled artin group , then @xmath175 if and only if @xmath176 and @xmath177 are conjugate .",
    "\\(1 ) follows from theorem [ thm : main ] ( 3 ) and the results of paris @xcite that the associated monoid @xmath52 of the standard presentation @xmath31 of an artin group @xmath0 injects in @xmath0 .",
    "similarly , the second statement follows from lemma [ lem : key ] and the fact that two conjugate elements of the same length in a right - angled artin group are related by the cycling operations and the commutative relations , which are word conjugacy relations hence hurwitz compatible @xcite .",
    "a generator @xmath0-system @xmath123 is _ full _ if @xmath178 and @xmath179 for @xmath180 .",
    "the next corollary shows under some conditions , the hc - equivalence class of full generator @xmath0-systems are invariant under the permutation of its entries .",
    "[ cor : rartin ] let @xmath0 be a right - angled artin group and @xmath181 be its associated graph .",
    "then , all full generator @xmath0-systems are hc - equivalent if and only if @xmath181 is a forest .    by corollary [ cor : artin ] , it is sufficient to show the associated graph @xmath181 is a forest if and only if all coxeter elements of full generator systems are conjugate . with no loss of generality",
    ", we can assume that @xmath181 is connected .",
    "first of all , assume @xmath181 is not a tree , thus there exists a simple edge - path which forms a loop .",
    "let @xmath182 be generators of @xmath0 which correspond to the vertices of the loop . then two full @xmath0-systems @xmath183 and @xmath184 have non - conjugate coxeter elements ,",
    "hence these two @xmath0-systems are not hc - equivalent .    conversely , assume @xmath181 is a tree .",
    "since the cycling operation preserves the conjugacy classes , it is sufficient to show @xmath185 is conjugate to @xmath186 . if there is no edge connecting @xmath187 and @xmath188 , then @xmath189 .",
    "thus , we assume that there is an edge @xmath190 which connects @xmath187 and @xmath188 .",
    "let @xmath191 @xmath192 be the connected component of the graph @xmath193 which contains the vertex @xmath170 .    before proving @xmath194 and @xmath195 are conjugate , we begin with a special case .",
    "let us consider the right - angled artin group @xmath196 whose associated graph is the @xmath197-dynkin diagram .",
    "it is easy to see all coxeter elements of full generator systems of @xmath197 are conjugate .",
    "now we proceed to general cases .",
    "let us denote the word @xmath194 as @xmath198 where @xmath60 ( resp .",
    "@xmath199 ) is the subword of @xmath194 which consists of the vertices of @xmath200 ( resp .",
    "@xmath201 ) . put @xmath202 and @xmath203 . since @xmath200 and @xmath201 are disconnected , @xmath60 commutes with @xmath204 .",
    "thus , we rewrite the word @xmath194 as @xmath205 by using the commutative relations .",
    "let us consider the subgroup @xmath206 generated by @xmath207 and the map @xmath208 defined by @xmath209 , @xmath210 , @xmath211 , and @xmath212 .",
    "this defines a group homomorphism , hence by using the result on @xmath197-case , we conclude that @xmath213 is conjugate to @xmath214 .",
    "finally , we give another example , _",
    "garside groups_. a _ garside group _ is a tuple @xmath215 satisfying some axioms where @xmath0 is a group , @xmath162 is a submonoid of @xmath0 , and @xmath216 .",
    "we do not give a precise definition of garside groups .",
    "for details see @xcite or @xcite for example .",
    "we use the following known properties of garside groups .    1 .",
    "the monoid @xmath162 embeds into @xmath0 .",
    "2 .   let @xmath217 be the set of atoms . here",
    "an element @xmath218 is called an _ atom _ if @xmath219 for all @xmath220 .",
    "then @xmath221 is a common left and right multiple of @xmath222 .",
    "3 .   let @xmath223 and @xmath224 and element of @xmath225 which are conjugate to @xmath226 .",
    "if @xmath227 , then there is a sequence of elements in @xmath162 @xmath228 where @xmath229 and @xmath230 is obtained from @xmath231 by taking a conjugation by an atom .",
    "the first and second properties are parts of axioms .",
    "the last property comes from the solution of the conjugacy problem in garside groups @xcite . by ( 2 ) , a conjugation by an atom in a sequence of ( 3 ) can be regarded as a cycling operation of words on atoms .",
    "thus , these properties and lemma [ lem : key ] lead to the following results on hurwitz and hc - equivalences .",
    "[ cor : garside ] let @xmath215 be a garside group and assume that the @xmath162 is an associated monoid of some finite positive presentation @xmath232 of @xmath0 such that    1 .",
    "all relations in @xmath29 are hurwitz compatible",
    "the generating set @xmath7 is equal to the set of atoms .    then for generator @xmath0-systems @xmath127 and @xmath128 ,    1 .",
    "@xmath149 if and only if @xmath150 .",
    "2 .   if @xmath233 , then",
    "@xmath234 if and only if @xmath176 and @xmath177 are conjugate .    a typical example of a garside group is an artin group of finite type @xmath222 , together with the associated monoid @xmath52 of standard presentation @xmath143 and @xmath235 .",
    "for such @xmath236 , the set of atom is identical with the set of standard generators @xmath7 , and @xmath236 satisfies the hypothesis of corollary [ cor : garside ] . thus , for a generator system @xmath127 of an artin group of finite type , we can solve not only the hurwitz equivalence / search problem , but also the harder problems , hc - equivalence / search problems if @xmath233 .",
    "in this section we present an algorithmic approach to solve the hurwitz equivalence and hurwitz search problems .      first of all , we provide a simple version of an algorithm to solve hurwitz equivalence / search problems . this naive version of algorithm still has an advantage compared to the modified algorithm which will be given in section 4.2 .",
    "the naive algorithm requires less computations but still works in special cases .",
    "more importantly , the naive algorithm stops in finite time .",
    "let @xmath237 be a finite positive presentation of a group @xmath0 such that all relations in @xmath29 are hurwitz compatible .",
    "we typically consider the finite presentation such that all relations are word - conjugacy relations .",
    "we further assume that both the word and the conjugacy ( search ) problems of @xmath0 are solvable .",
    "let @xmath238 be a generator @xmath0-system and @xmath239 be an arbitrary @xmath0-system .",
    "we try to check whether @xmath15 or not as follows .",
    "we begin with rather simple tests .",
    "first we compare the coxeter elements of @xmath13 and @xmath14 . if @xmath240 , then @xmath241 .",
    "next for each @xmath160 , we check whether there is a permutation @xmath242 of indices such that @xmath243 is conjugate to @xmath244 .",
    "if such a permutation does not exist , then again we conclude @xmath245 .",
    "assume that @xmath13 and @xmath14 pass these two tests .",
    "the next step is to construct a new positive presentation @xmath246 of @xmath0 so that both @xmath13 and @xmath14 are generator @xmath0-systems with respect to the presentation @xmath247 , and all relations in @xmath248 are hurwitz compatible .",
    "such a presentation is constructed as follows .",
    "let us denote by @xmath249 where @xmath199 are some fixed words on @xmath37 which are computed by solving the conjugacy problem .",
    "let @xmath250 , and write @xmath199 as @xmath251 where we put @xmath252 and @xmath253 , @xmath254 .",
    "we introduce new generators @xmath255 and new word conjugacy relations @xmath256 as follows . for @xmath257",
    ", we define the relation @xmath258 as @xmath259 for @xmath260 , we define the relation @xmath261 as @xmath262 finally , for @xmath263 , we define the relation @xmath264 as @xmath265    let us consider the new positive presentation of @xmath0 @xmath266 we call this positive presentation @xmath247 the _ expanded presentation_. all of the newly - added relations @xmath261 are word - conjugacy relations , hence hurwitz - compatible .",
    "now we reverse the word @xmath267 in the presentation @xmath247 .",
    "the reversing procedure stops in finite time because the expanded presentation is finite , homogeneous . by theorem [ thm : main ] ,",
    "if @xmath268 then we not only conclude @xmath15 but also compute a braid @xmath17 such that @xmath18 via van - kampen diagrams .",
    "the precise algorithm is given as algorithm [ alg : htestsimple ] .",
    "algorithm [ alg : htestsimple ] returns undecidable if it fails to determine whether @xmath15 or not .",
    "input : a finite homogeneous positive presentation @xmath83 of @xmath0 such that all relations in @xmath29 are hurwitz - compatible , a generator @xmath0-system @xmath269 , and a @xmath0-system @xmath239 .",
    "+ output : the truth value of @xmath15 or undecidable . in case of @xmath15 , also return a braid @xmath17 such that @xmath18 .    1 .   if @xmath240 , then return .",
    "2 .   check whether there is a permutation @xmath242 of indices such that @xmath243 is conjugate to @xmath244 .",
    "if such a permutation does not exist , then return .",
    "3 .   compute the expanded presentation @xmath247 of @xmath0 .",
    "4 .   check whether @xmath270 or not . if not , then return .",
    "5 .   if @xmath270 , then construct a van - kampen diagram for @xmath271 and compute a braid @xmath17 such that @xmath18 from the van - kampen diagram . 6 .",
    "return and the braid @xmath17 .      in algorithm",
    "[ alg : htestsimple ] , word reversing of @xmath272 is not sufficient to show @xmath15 , because word reversing might fail to detect the congruence of @xmath121 and @xmath273 . to improve algorithm [ alg : htestsimple ] we try to make the expanded presentation complete . for a complete presentation , the word reversing always detects the congruence so it is more likely to succeed in showing @xmath15 .",
    "moreover , as we will see in appendix , with additional works one can also try to show the associated monoid embeds into @xmath0 for left and right complete presentations .",
    "thus , one can also try to obtain the stronger results , the classification of the hurwitz equivalence classes of generator @xmath0-systems by using theorem [ thm : main ] ( 3),(4 ) .",
    "the modified algorithm goes as follows .",
    "the inputs @xmath274 , @xmath13 , @xmath14 and the first three steps are the same as in algorithm [ alg : htestsimple ] .",
    "the next step is the core of the modified algorithm .",
    "we try to make the expanded presentation @xmath247 complete .",
    "we slightly modify algorithm [ alg : complete ] so that it is more effective for our purposes . recall that in the completion procedure , we add a new relation @xmath82 if @xmath80 but @xmath275",
    ".    we must check whether the new relation is hurwitz - equivalent or not because we would like to use theorem [ thm : main ] . fortunately , adding the relation @xmath82 does not cause any problem .",
    "assume that @xmath143 is a positive group presentation such that all relations in @xmath29 are hurwitz - compatible , and take @xmath79 as above .",
    "then the relation @xmath82 is hurwitz - compatible .    from the reversing sequence @xmath80",
    ", one can construct a diagram which is similar to the van - kampen diagram .",
    "indeed , one can find a word @xmath276 such that this diagram is obtained from two van - kampen diagrams of @xmath277 and @xmath278 by gluing along the path @xmath276 as shown in figure [ fig : van - kampen2 ] .",
    "thus , one can find a sequence of words @xmath279 where each @xmath280 is obtained from @xmath281 by performing the relation in @xmath29 .",
    "thus , we can find a braid @xmath17 such that @xmath282 , where @xmath283 , @xmath284 are generator @xmath0-systems whose coxeter words are @xmath285 , @xmath286 , so the relation @xmath82 is hurwitz - compatible .",
    ", width=151 ]    now we consider the case @xmath287 , so the relation @xmath82 is reducible . to detect the hurwitz",
    "equivalences it is better to use finer congruence relations , so it is better to add @xmath48 instead of @xmath82 .",
    "adding the relation @xmath48 also makes the strong cube condition for @xmath79 is satisfied , because @xmath288 .",
    "however , one problem occurs .",
    "we can not expect the relation @xmath48 is hurwitz - compatible .",
    "we can add the relation @xmath48 instead of @xmath82 only if we know the relation @xmath48 is hurwitz - compatible .",
    "in general we can not know the relation is hurwitz - compatible , except it is a word - conjugacy relations .",
    "thus we add the relation @xmath48 instead of @xmath82 if @xmath289 is a word - conjugacy relation .",
    "summarizing , we modify the completion procedure as follows .",
    "assume that @xmath80 but @xmath290 .",
    "if @xmath291 , then we add a new relation @xmath82 , which is also hurwitz - compatible . if @xmath287 , then we need to consider more .",
    "if the relation @xmath48 is a word - conjugacy relation , then we add a new relation @xmath48 .",
    "otherwise , we add a new relation @xmath82 .",
    "the precise description of the modified completion algorithm is given as algorithm [ alg : modifiedcomplete ] .",
    "input : a finite positive homogeneous presentation @xmath83 of a group @xmath0 such that all relations are hurwitz - compatible .",
    "+ output : a complete presentation of @xmath0 such that all relations are hurwitz - compatible .",
    "compute all pair of words @xmath46 such that @xmath80 for some @xmath76 .",
    "check @xmath84 holds for all @xmath40 obtained by step ( 1 ) .",
    "assume that @xmath85 for some @xmath40 .",
    "if @xmath291 , then replace the presentation @xmath31 with the new presentation @xmath86 and go back to step ( 1 ) .",
    "2 .   if @xmath292 , then replace the presentation @xmath31 with the new presentation @xmath293 and go back to step ( 1 ) .",
    "3 .   stop .",
    "suppose an algorithm [ alg : modifiedcomplete ] terminates and we obtained a complete finite presentation @xmath294 .",
    "it should be noted that the monoids @xmath295 and @xmath296 might be different unlike the usual completion procedure described in algorithm [ alg : complete ] .",
    "the rest of steps are the same as the previous algorithm .",
    "we reverse the word @xmath267 by using the complete presentation @xmath294 . if @xmath268 , then we conclude @xmath15 and compute a braid @xmath17 such that @xmath18 via van - kampen diagram .    the explicit description of the above algorithm is given as algorithm [ alg : htest ] .",
    "algorithm [ alg : htest ] solves the hurwitz equivalence problem if possible and returns the value undecidable if it fails to solve . as in algorithm [ alg : htestsimple ] , undecidable simply means we can not solve the problem using this algorithm , so it does not imply the problem is undecidable .",
    "input : a finite positive group presentation @xmath83 of @xmath0 such that all relations in @xmath29 are hurwitz - compatible , a generator @xmath0-system @xmath269 , and a @xmath0-system @xmath239 .",
    "+ output : the truth value of @xmath15 , undecidable . in case of @xmath15 ,",
    "then also return a braid @xmath17 such that @xmath18    1 .   if @xmath240 , then return .",
    "2 .   check whether there is a permutation @xmath242 of indices such that @xmath243 is conjugate to @xmath244 .",
    "if such a permutation does not exist , then return .",
    "3 .   compute the expanded presentation @xmath247 of @xmath0 .",
    "4 .   make the expanded presentation @xmath247 complete by using modified completion procedure ( algorithm [ alg : modifiedcomplete ] ) .",
    "check whether @xmath268 or not .",
    "if @xmath297 , then return .",
    "compute a van - kampen diagram for @xmath298 using word - reversing .",
    "calculate a braid @xmath17 such that @xmath18 by using the van - kampen diagram .",
    "return and the braid @xmath17 .",
    "the choice of the expanded presentation @xmath247 in algorithm [ alg : htestsimple ] and [ alg : htest ] is not unique .",
    "we can use any finite homogeneous positive presentation @xmath299 of @xmath0 whose generating set contains @xmath300 and all of whose relations are hurwitz compatible .",
    "thus , there are many candidates of expanded presentations .",
    "therefore , algorithm [ alg : htestsimple ] and algorithm [ alg : htest ] have many variations , and some of their variations might be able to solve hurwitz equivalence problems even if the original algorithm [ alg : htestsimple ] and [ alg : htest ] fail .",
    "let @xmath301 be the @xmath302-string braid group with the standard presentation .",
    "let us try to solve hurwitz equivalence / search problems for two @xmath0-systems @xmath303 and @xmath304 using algorithm [ alg : htest ] .",
    "first we introduce a new generator @xmath305 and a new word conjugacy relation @xmath306 , and obtain the expanded presentation @xmath307 observe that @xmath308 in the presentation @xmath247 , because there are no relations of the form @xmath309 . hence the naive algorithm , algorithm [ alg : htestsimple ] returns undecidable .",
    "moreover , as we observed in example [ exam : completion ] , the usual completion algorithm , algorithm [ alg : complete ] does not terminate .",
    "now let us apply a modified completion procedure , algorithm [ alg : modifiedcomplete ] .",
    "as we have seen in example [ exam : completion ] , @xmath88 , but @xmath89 .",
    "the relation @xmath90 is reducible and the reduced relation @xmath310 is a word - conjugacy relation .",
    "thus , we add the new relation @xmath310 to @xmath247 , and get the presentation @xmath311    as we have seen in example [ exam : completion ] , the presentation @xmath99 is complete , hence we arrived at the complete presentation @xmath312 .",
    "finally , we reverse the word @xmath313 .",
    "as we have seen in example [ exam : van - kampen ] , @xmath314 and we get the van - kampen diagram of @xmath69 ( see figure [ fig : van - kampen ] again ) . from the van - kampen diagram , we obtain the sequence of words @xmath70 thus by considering the corresponding braid actions , we conclude that @xmath315    we also remark that by example [ exam : embeds ] given in appendix , @xmath316 embeds in @xmath0 . thus , in this case we actually obtained stronger results , that is , the classification of hurwitz equivalence classes whose entries are @xmath317 .",
    "we close the paper by giving various remarks to apply our algorithms in general cases .",
    "first of all , results in section 3 are useful to study hurwitz equivalence not only for an artin group , but also for a general group @xmath0 . for an arbitrary @xmath0-systems @xmath318",
    "one can always find a surjective homomorphism from an artin group @xmath222 to @xmath0 and generator @xmath222-systems @xmath144 such that @xmath144 are mapped to @xmath318 .",
    "thus , if @xmath149 , which is easily checked by corollary [ cor : artin ] , then @xmath15 .",
    "moreover , if @xmath222 is a right - angled or finite type artin group , then sometimes we can show @xmath16 .",
    "this kind of a  lifting \" argument is useful to apply our algorithms for general groups . to try to show @xmath0-systems @xmath13 and @xmath14 are hurwitz equivalent , we consider another group @xmath319 with a finite positive homogeneous presentation @xmath143 , a homomorphism @xmath320 , and generator @xmath319-systems @xmath321 and @xmath322 such that :    1 .",
    "the presentation @xmath323 satisfies the hypothesis to run algorithm [ alg : htestsimple ] or algorithm [ alg : htest ] .",
    "2 .   @xmath324 sends @xmath325 to @xmath326 .",
    "such a group @xmath319 can be found , for example , by searching word - conjugacy relations in the entries of @xmath13 , @xmath14 .",
    "then we use algorithm [ alg : htestsimple ] or algorithm [ alg : htest ] to try to show @xmath327 . if algorithm [ alg : htestsimple ] or algorithm [ alg : htest ] show that @xmath328 , then we conclude @xmath15 .",
    "we also remark that the step ( 2 ) in algorithm [ alg : modifiedcomplete ] can be simplified . since the presentation we are considering is homogeneous , so detecting the congruence of coxeter words @xmath121 and @xmath273 we do not need all relations .",
    "it is sufficient to know the relations of length @xmath329 where @xmath108 be the length of @xmath13 .",
    "thus , in the step ( 2 ) of algorithm [ alg : modifiedcomplete ] , if the length of newly - added relations @xmath82 or @xmath48 become bigger than the length of @xmath13 , then we can stop the completion procedure .    combining these tricks with a  lifting \"",
    "argument provides an algorithmic approach to try to show @xmath15 for arbitrary @xmath0-systems @xmath13 and @xmath14 .",
    "in appendix , we give an algorithm to try to show the associated monoid embeds into @xmath0 which is described in @xcite .",
    "the word reversing which we used in this paper is actually called a _",
    "right _ word reversing . in a similar way ,",
    "a _ left _ word reversing and the notion of a _ left _ complete presentation are defined .",
    "all results described in section 2 holds for left word reversing and left completions as well .",
    "in particular , by modifying algorithm [ alg : complete ] or algorithm [ alg : modifiedcomplete ] appropriately , one can obtain an algorithm to try to make a finite homogeneous positive presentation left complete , or both right and left complete .",
    "the condition ( @xmath194 ) implies the associated monoid @xmath52 is cancellative ( * ? ? ?",
    "* corollary 6.2 ) , and the condition ( @xmath337 ) implies @xmath52 admits a common right multiple ( * ? ? ?",
    "* proposition 6.7 ) . using this",
    ", one can try to show the embeddability of the associated monoid algorithmically by using algorithm [ alg : embed ] below .",
    "as in algorithm [ alg : complete ] , algorithm [ alg : embed ] never stops if @xmath52 does not embed in @xmath0 .",
    "input : a finite homogeneous presentation @xmath83 of a group @xmath0 which is both right and left complete and satisfies the condition @xmath331 .",
    "+ output : return true if @xmath52 embeds into @xmath0 .",
    "put @xmath341 .",
    "2 .   compute all pairs of words @xmath342 such that @xmath343 for some @xmath334 and let @xmath344 .",
    "3 .   if @xmath345 , then return true .",
    "otherwise , put @xmath346 and go back to step ( 2 ) .",
    "[ exam : embeds ] let us consider a presentation @xmath99 of @xmath61 in example [ exam : van - kampen ] .",
    "this presentation is both right and left complete , and contains no reducible relations . by running algorithm [ alg : embed ]",
    ", we finally arrive at the set @xmath347 which is closed under word reversing .",
    "that is , for any @xmath348 , if @xmath349 then @xmath350 .",
    "thus , the associated monoid @xmath351 embeds into @xmath61 ."
  ],
  "abstract_text": [
    "<S> for a positively presented group @xmath0 , we provide a criterion for two tuples of positive group generators of @xmath0 to be hurwitz equivalent or hurwitz - conjugation equivalent . </S>",
    "<S> we also present an algorithmic approach to solve the hurwitz equivalence and the hurwitz search problems by using the word reversing method . </S>"
  ]
}
{
  "article_text": [
    "the theory of mechanism design has been developed and applied to many branches of economics for decades .",
    "nash implementation is a cornerstone of the mechanism design theory .",
    "the maskin s theorem @xcite provides an almost complete characterization of social choice rules ( scrs ) that are nash implementable : when the number of agents is at least three , the sufficient conditions for nash implementation are monotonicity and no - veto , and the necessary condition is monotonicity .",
    "note that an scr is specified by a designer , a desired outcome from the designer s perspective may not be desirable for the agents ( see table 1 in section 3.1 ) .",
    "the maskin mechanism ( page 394 , @xcite ) constructed in the proof of maskin s sufficiency theorem is an abstract mechanism .",
    "people seldom consider how the designer actually receives messages from agents . roughly speaking , there are two distinct manners : direct and indirect manner . in the former manner ,",
    "agents report their messages to the designer directly ( _ e.g. _ , speak face to face , hand over , _ etc _ ) , thereby the designer can know exactly that a message is reported by an agent himself , not by any other device . in the latter manner ,",
    "agents report messages to the designer through channels ( _ e.g. _ , internet , cable _ etc _ ) . thereby ,",
    "when the designer receives a message from a channel , he can not know what has happened on the other side of the channel : whether the message is reported by an agent himself , or generated by some device authorized by an agent .",
    "traditionally , nobody notice the difference between the two manners in the maskin mechanism .",
    "however , in this paper , we will point out that traditional sufficient conditions on nash implementation may fail if agents report messages to the designer in an indirect manner .",
    "the rest of the paper is organized as follows : section 2 recalls preliminaries of the mechanism design theory given by serrano @xcite ; section 3 is the main part of this paper , where we will propose a self - enforcing agreement to help agents break through the restriction of maskin s sufficiency theorem .",
    "section 4 draws the conclusion .",
    "let @xmath0 be a finite set of _ agents _ with @xmath1 , @xmath2 be a finite set of social _ outcomes_. the information held by the agents is summarized in the concept of a _",
    "state_. the true state is not verifiable by the designer .",
    "we denote by @xmath3 a typical state and by @xmath4 the domain of possible states . at state @xmath5 , each agent @xmath6 is assumed to have a complete and transitive _ preference relation _ @xmath7 over the set @xmath8 .",
    "we denote by @xmath9 the profile of preferences in state @xmath3 , and denote by @xmath10 the strict preference part of @xmath7 .",
    "fix a state @xmath3 , we refer to the collection @xmath11 as an _ environment_. let @xmath12 be the class of possible environments .",
    "a _ social choice rule _ ( scr )",
    "@xmath13 is a mapping @xmath14 .",
    "a _ mechanism _",
    "@xmath15 describes a message or strategy set @xmath16 for agent @xmath17 , and an outcome function @xmath18 .",
    "@xmath16 is unlimited except that if a mechanism is direct , _",
    "i.e. _ , @xmath19 .",
    "an scr @xmath13 satisfies _ no - veto _ if , whenever @xmath20 for all @xmath21 and for every agent @xmath17 but perhaps one @xmath22 , then @xmath23 .",
    "an scr @xmath13 is _ monotonic _ if for every pair of environments @xmath24 and @xmath25 , and for every @xmath23 , whenever @xmath20 implies that @xmath26 , there holds @xmath27 .",
    "we assume that there is _ complete information _ among the agents , _",
    "i.e. _ , the true state @xmath3 is common knowledge among them . given a mechanism @xmath28 played in state @xmath3 , a _",
    "nash equilibrium _ of @xmath29 in state @xmath3 is a strategy profile @xmath30 such that : @xmath31 .",
    "let @xmath32 denote the set of nash equilibria of the game induced by @xmath29 in state @xmath3 , and @xmath33 denote the corresponding set of nash equilibrium outcomes .",
    "an scr @xmath13 is _ nash implementable _ if there exists a mechanism @xmath15 such that for every @xmath34 , @xmath35 .",
    "maskin @xcite provided an almost complete characterization of scrs that were nash implementable .",
    "the main results of ref .",
    "@xcite are two theorems : 1 ) ( _ necessity _ ) if an scr is nash implementable , then it is monotonic . 2 ) ( _ sufficiency _ ) let @xmath36 , if an scr is monotonic and satisfies no - veto , then it is nash implementable . in order to facilitate the following investigation",
    ", we briefly recall the maskin mechanism given by serrano @xcite as follows :    consider a mechanism @xmath15 , where agent @xmath17 s message set is @xmath37 , @xmath38 is the set of non - negative integers . a typical message sent by agent @xmath17",
    "is described as @xmath39 .",
    "the outcome function @xmath40 is defined in the following three rules : ( 1 ) if for every agent @xmath6 , @xmath41 and @xmath42 , then @xmath43 .",
    "( 2 ) if @xmath44 agents @xmath45 send @xmath41 and @xmath42 , but agent @xmath22 sends @xmath46 , then @xmath43 if @xmath47 , and @xmath48 otherwise .",
    "( 3 ) in all other cases , @xmath49 , where @xmath50 is the outcome chosen by the agent with the lowest index among those who announce the highest integer .",
    "this section is the main part of this paper . in the beginning",
    ", we will show an example of scr which satisfies monotonicity and no - veto .",
    "it is nash implementable although all agents dislike it .",
    "then , we will propose a self - enforcing agreement using complex numbers , by which the agents may break through the maskin s sufficiency theorem and make the scr not nash implementable .",
    "let @xmath51 , @xmath52 , @xmath53 . in each state @xmath5 ,",
    "the preference relations @xmath54 over the outcome set @xmath8 and the corresponding scr @xmath13 are given in table 1 .",
    "the scr @xmath13 is _ pareto - inefficient _ from the agents perspectives because in state @xmath55 , all agents unanimously prefer a pareto - optimal outcome @xmath56 : for each agent @xmath6 , @xmath57",
    ".    _ table 1 : an scr satisfying monotonicity and no - veto is pareto - inefficient from the agents perspectives . _ +    [ cols=\"^,^,^,^,^,^ \" , ]     suppose the true state is @xmath55 . at first sight , @xmath58 might be a unanimous @xmath59 for each agent @xmath17 , because by doing so @xmath56 would be generated by rule 1 of the maskin mechanism .",
    "however , @xmath60 has an incentive to unilaterally deviate from @xmath58 to @xmath61 in order to trigger rule 2 ( where @xmath62 stands for any legal value ) , since @xmath63 , @xmath64 ; @xmath65 also has an incentive to unilaterally deviate from @xmath58 to @xmath66 , since @xmath67 , @xmath68 .",
    "note that either @xmath60 or @xmath65 can certainly obtain her expected outcome only if just one of them deviates from @xmath58 ( if this case happened , rule 2 would be triggered ) .",
    "but this condition is unreasonable , because all agents are rational , nobody is willing to give up and let the others benefit .",
    "therefore , both @xmath60 and @xmath65 will deviate from @xmath58 . as a result ,",
    "rule 3 will be triggered .",
    "since @xmath60 and @xmath65 both have a chance to win the integer game , the winner is uncertain and the final outcome is also uncertain between @xmath69 and @xmath70 .    to sum up ,",
    "although every agent prefers @xmath56 to @xmath71 in state @xmath55 , @xmath56 can not be yielded in nash equilibrium .",
    "indeed , the maskin mechanism makes the pareto - inefficient outcome @xmath71 be nash implementable in state @xmath55",
    ".    can the agents find a way to break through the maskin s sufficiency theorem and let the pareto - efficient outcome @xmath56 be nash implementable in state @xmath55 ?",
    "interestingly , we will show that the answer may be `` yes '' if agents report messages to the designer through channels ( _ e.g. _ , internet ) .",
    "in what follows , first we will define some matrices with complex numbers , then we will propose a self - enforcing agreement to help agents break through the maskin s sufficiency theorem .      *",
    "definition 1 * : let @xmath72 be two @xmath73 matrices , and @xmath74 be two basis vectors : @xmath75 hence , @xmath76 , @xmath77 ; @xmath78 , @xmath79 .",
    "* definition 2 * : for @xmath80 agents , suppose each agent @xmath6 possesses a basis vector .",
    "@xmath81 is defined as the tensor product of @xmath82 basis vectors @xmath83 : @xmath84 @xmath85 contains @xmath82 basis vectors @xmath83 and @xmath86 elements .",
    "@xmath85 is also denoted as @xmath87 .",
    "similarly , @xmath88 obviously , there are @xmath86 possible vectors : @xmath89 @xmath90 .",
    "* definition 3 * : @xmath91 , _ i.e. _ , @xmath92 where the symbol @xmath93 denotes an imaginary number , and @xmath94 is the conjugate transpose of @xmath95 .    *",
    "definition 4 * : @xmath96 * definition 5 * : for @xmath97 $ ] , @xmath98 $ ] , @xmath99 @xmath100,\\phi\\in[0,\\pi/2]\\}$ ] .",
    "hence , @xmath101 .",
    "* definition 6 * : for @xmath102 , @xmath103 $ ] , @xmath104 $ ] , let @xmath105 , @xmath106\\overrightarrow{\\psi}_{1}.\\ ] ] the dimension of @xmath107 is @xmath108 . since only two elements in @xmath109 are non - zero , it is not necessary to calculate the whole @xmath110 matrix to yield @xmath111 .",
    "indeed , we only need to calculate the leftmost and rightmost column of @xmath107 to derive @xmath111",
    ".    * definition 7 * : @xmath112 .",
    "suppose @xmath113^{t}$ ] , let latexmath:[$\\delta=[|\\eta_{1}|^{2 } , \\cdots ,    @xmath95 , @xmath115 ( @xmath116 ) and @xmath94 are all unitary matrices .",
    "hence , @xmath117 .",
    "thus , @xmath118 can be viewed as a probability distribution , each element of which represents the probability that we randomly choose a vector from the set of all @xmath86 possible vectors @xmath119 @xmath120 .    * definition 8 * : condition @xmath121 contains five parts .",
    "the first three parts are defined as follows : + @xmath122 : given an scr @xmath13 , there exist two states @xmath123 , @xmath124 , @xmath125 such that @xmath126 ( for each @xmath6 , @xmath127 , @xmath128 ) with strict relation for some agent ; and the number of agents that encounter a preference change around @xmath129 in going from state @xmath123 to @xmath130 is at least two .",
    "denote by @xmath131 the set of these agents and @xmath132 the number of these agents .",
    "+ @xmath133 : consider the state @xmath130 specified in condition @xmath122 , if there exists another @xmath134 , @xmath135 that satisfies @xmath122 , then @xmath136 ( for each @xmath6 , @xmath127 , @xmath137 ) with strict relation for some agent .",
    "+ @xmath138 : consider the outcome @xmath129 specified in condition @xmath122 , for any state @xmath139 , @xmath129 is top ranked for each agent @xmath140 .      as specified before , in this paper",
    "we will discuss how the traditional results on nash implementation will be changed when agents report messages to the designer through channels .",
    "we assume that :    \\1 ) each agent has a unique channel connected with the designer .",
    "the agents report messages to the designer through these channels .",
    "\\2 ) after the designer claims the outcome function @xmath40 , if all agents anticipate the scr @xmath13 appeared in rule 1 of @xmath40 satisfies condition @xmath121 ( given in definition 8 and 11 ) , agents can negotiate and construct an agreement _ complexmessage _ as shown in fig .",
    "the algorithm _ messagecomputing _ is given in definition 9 .",
    "in the initial configuration , the computer controls all channels .",
    "\\3 ) each agent can freely decide whether to leave his channel to the computer and let the computer send a message to the designer , or to take back his channel and send his message to the designer by himself . if any agent deviates from the initial configuration and chooses the latter option , then this deviation is _ observable _ to the rest agents and all of them will choose the latter option too , _",
    "i.e. _ , all agents will take back their channels and send their messages to the designer by themselves .",
    "if all agents leave their channels to the computer , the algorithm _ messagecomputing _ works , _",
    "i.e. _ , calculates @xmath141 and sends them to the designer through channels .        *",
    "definition 9 * : the algorithm _ messagecomputing _ is defined as follows : + * input * : @xmath142\\times [ 0,\\pi]\\times a\\times \\mathcal { t } \\times \\mathbb{z}_{+}$ ] , @xmath143 . + * output * : @xmath144 , @xmath143 .",
    "+ step 1 : reading @xmath145 from each agent @xmath6 .",
    "+ step 2 : computing the leftmost and rightmost columns of @xmath107 .",
    "+ step 3 : computing @xmath146\\overrightarrow{\\psi}_{1}$ ] , @xmath147 , and the probability distribution @xmath118 .",
    "+ step 4 : randomly choosing a vector from the set of all @xmath86 possible vectors @xmath119 @xmath120 according to the probability distribution @xmath118 .",
    "+ step 5 : for each agent @xmath6 , let @xmath148 ( or @xmath39 ) if the @xmath17-th basis vector of the chosen vector is @xmath83 ( or @xmath149 ) , where @xmath150 are specified in condition @xmath122 .",
    "+ step 6 : sending @xmath151 to the designer through channels @xmath152 .",
    "* definition 10 * : suppose @xmath122 and @xmath133 are satisfied and @xmath151 is computed by _",
    "messagecomputing_. suppose the true state is @xmath130 specified in condition @xmath122 .",
    "@xmath153 , @xmath154 , @xmath155 and @xmath156 are defined as the payoffs to the @xmath82-th agent in state @xmath130 when the chosen vector in step 4 of _ messagecomputing _ is @xmath87 , @xmath157 , @xmath158 or @xmath159 respectively .",
    "* definition 11 * : suppose conditions @xmath122 , @xmath133 and @xmath138 are satisfied and the true state is @xmath130 , consider each message @xmath160 , where @xmath161",
    "is top - ranked for each agent @xmath17 .",
    "the rest two parts of condition @xmath121 are defined as : + @xmath162 : for each agent @xmath6 , let him be the @xmath82-th agent , @xmath163 .",
    "+ @xmath164 : for each agent @xmath165 , let him be the @xmath82-th agent , @xmath166 .",
    "+ it can be seen from fig .",
    "1 that after the agreement _ complexmessage _ is constructed , each agent @xmath6 independently faces two options : + @xmath167 @xmath168 : leaving his channel to the computer , and submitting @xmath169 to the algorithm _",
    "messagecomputing_. + @xmath167 @xmath170 : taking back his channel , and submitting @xmath171 to the designer by himself .    to sum up ,",
    "if agents report messages to the designer through channels and all agents anticipate the scr @xmath13 appeared in rule 1 of @xmath40 satisfies condition @xmath121 , they can construct the agreement _ complexmessage _ after the designer claims the outcome function @xmath40 .",
    "the timing steps of the maskin mechanism are updated as follows : + time 1 : the designer claims the outcome function @xmath40 to all agents ; + time 2 : the agents construct the agreement _ complexmessage _ ; + time 3 : each agent @xmath6 chooses an option between @xmath168 and @xmath170 , and @xmath172 are sent through channels .",
    "+ time 4 : the designer receives @xmath151 from @xmath82 channels ; + time 5 : the designer announces the outcome @xmath173 .      * proposition 1 * : for @xmath80 , suppose agents send messages to the designer through channels ( _ e.g. _ , internet ) .",
    "consider an scr @xmath13 that satisfies monotonicity and no - veto .",
    "if condition @xmath121 is satisfied , then in state @xmath130 the agents can construct a self - enforcing agreement _ complexmessage _ to make the pareto - inefficient outcome @xmath174 not be implemented in nash equilibrium .    * proof",
    "* : since @xmath122 and @xmath133 are satisfied , then there exist two states @xmath123 , @xmath124 , @xmath125 such that @xmath126 ( for each @xmath6 , @xmath127 , @xmath128 ) with strict relation for some agent , and @xmath131 contains the agents that encounter a preference change around @xmath129 in going from state @xmath123 to @xmath130 ( @xmath175 ) .",
    "suppose the true state is @xmath130 , now let us check what will happen after the agents construct the agreement _ complexmessage _ in time 2 .    from the viewpoints of agents ,",
    "after constructing _ complexmessage _ , there are two possible cases in time 3 : + 1 ) suppose every agent @xmath6 chooses @xmath168 , then the algorithm _ messagecomputing _ works .",
    "consider the following strategy profile : each agent @xmath140 submits @xmath176 , @xmath177 ; each agent @xmath178 submits @xmath179 . according to lemma 1",
    "( see appendix ) , this strategy profile is a nash equilibrium of @xmath29 in state @xmath130 . in step 4 of _ messagecomputing",
    "_ , the chosen vector is @xmath180 . in step 5 of _ messagecomputing _ , @xmath148 for each @xmath6 .",
    "therefore , in time 5 , @xmath181 .",
    "each agent @xmath17 s payoff is @xmath153 .",
    "+ 2 ) suppose some agent @xmath6 chooses @xmath170 , _",
    "i.e. _ , takes back his channel and reports @xmath59 to the designer by himself . then according to assumption 3 ( see section 3.3 ) ,",
    "all of the rest agents will observe this deviation , thereby take back their channels and submit messages to the designer by themselves . according the maskin mechanism , in time 5",
    ", the final outcome will be either @xmath174 by rule 1 , or uncertain by rule 3 ( _ i.e. _ , each agent @xmath17 s payoff is @xmath156 ) .    according to conditions @xmath122 and @xmath162 , it is not profitable for any agent @xmath17 to choose @xmath170 , _",
    "i.e. _ , unilaterally take back his channel and send a message to the designer by himself . as telser pointed out in page 28",
    ", line 2 @xcite : `` _ _ a party to a self - enforcing agreement calculates whether his gain from violating the agreement is greater or less than the loss of future net benefits that he would incur as a result of detection of his violation and the consequent termination of the agreement by the other party ... hence both parties continue to adhere to an agreement if and only if each gains more from adherence to , than from violations of , its terms .",
    "_ _ '' therefore , it can be seen that _ complexmessage _ is a self - enforcing agreement among the agents . put differently , although the agents collaborate to construct _ complexmessage _ in time 2 , they do not require a third - party to enforce it after then and the game is still non - cooperative .    to sum up , in state @xmath130",
    ", the agents can construct a self - enforcing agreement _ complexmessage _ to make the pareto - inefficient outcome @xmath174 not be implemented in nash equilibrium.@xmath182    let us reconsider table 1 .",
    "let @xmath183 , @xmath184 , @xmath185 , @xmath186 .",
    "suppose the true state is @xmath55 .",
    "since both @xmath60 and @xmath65 encounter a preference change around @xmath56 in going from state @xmath187 to @xmath55 , condition @xmath122 is satisfied . obviously , @xmath133 and @xmath138 are also satisfied .",
    "consider the strategy profile as follows : @xmath188 let @xmath189 be the first agent , and for any agent @xmath190 , let her be the last agent . consider the payoff to the third agent , suppose @xmath191 ( the corresponding outcome is @xmath56 ) , @xmath192 ( the corresponding outcome is @xmath70 if @xmath193 , and @xmath69 if @xmath194 ) , @xmath195 ( the corresponding outcome is @xmath69 if @xmath193 , and @xmath70 if @xmath194 ) , @xmath196 ( the corresponding outcome is uncertain between @xmath69 and @xmath70 ) .",
    "let @xmath189 be the last agent and consider her payoff , suppose @xmath191 and @xmath196 .",
    "hence , @xmath162 and @xmath164 are satisfied . according to proposition 1 , in state @xmath55 ,",
    "the outcome implemented in nash equilibrium is @xmath56 , and @xmath197 is not nash implementable although the scr @xmath13 satisfies monotonicity and no - veto .",
    "* remark 1 : * some reader may argue that the agreement _ complexmessage _ is a wrapper to the maskin mechanism that changes the game substantially and henceforth it has no implication on the original maskin mechanism . however , this viewpoint is not true . actually , _",
    "complexmessage _ is _ unobservable _ to the designer because it is hidden behind channels and the designer can not prevent the agents from constructing such agreement . from the designer s perspective ,",
    "no matter whether the agents construct the agreement _ complexmessage _ on the other side of channels or not , the maskin mechanism remain unchanged and the designer acts in the same way : _",
    "i.e. _ , claims the outcome function @xmath40 , receives messages @xmath198 from channels and announces the final outcome @xmath173 .    * remark 2 : * although the time and space complexity of _ messagecomputing _ are exponential with the number of agents , _",
    "i.e. _ , @xmath199 , it works well when the number of agents is not very large .",
    "for example , the runtime of _ messagecomputing _ is about 0.5s for 15 agents , and about 12s for 20 agents",
    "( matlab 7.1 , cpu : intel ( r ) 2ghz , ram : 3 gb ) .",
    "* remark 3 : * the problem of nash implementation requires complete information among all agents . in the last paragraph of page 392 @xcite ,",
    "serrano wrote : `` _ _ we assume that there is complete information among the agents ... this assumption is especially justified when the implementation problem concerns a small number of agents that hold good information about one another _ _ '' .",
    "hence , the fact that _ messagecomputing _ is suitable for small - scale cases ( _ e.g. _ , less than 20 agents ) is acceptable for nash implementation .",
    "in this paper , we propose a self - enforcing agreement to help agents avoid a pareto - inefficient social choice rule if agents report messages to the designer through channels and condition @xmath121 is satisfied . put differently , traditional sufficient conditions for",
    "nash implementation may fail on internet . with the rapid development of network economics",
    ", it will be more and more common that agents communicate with the designer through internet . in the future",
    ", there are many works to do to study the self - enforcing agreement further .",
    "the author is very grateful to ms .",
    "fang chen , hanyue wu ( _ apple _ ) , hanxing wu ( _ lily _ ) and hanchen wu ( _ cindy _ ) for their great support",
    ".    99 e. maskin , nash equilibrium and welfare optimality , _ rev .",
    "* 66 * ( 1999 ) 23 - 38 .",
    "r. serrano , the theory of implementation of social choice rules , _ siam review _ * 46 * ( 2004 ) 377 - 414 .",
    "telser , a theory of self - enforcing agreements .",
    "_ journal of business _ * 53 * ( 1980 ) 27 - 44 .",
    "flitney and l.c.l .",
    "hollenberg , nash equilibria in quantum games with generalized two - parameter strategies , _ phys .",
    "a _ * 363 * ( 2007 ) 381 - 388 .",
    "* lemma 1 * : suppose condition @xmath121 is satisfied and the algorithm _ messagecomputing _ works .",
    "consider the following strategy profile : + 1 ) each agent @xmath140 submits @xmath176 , @xmath177 ; + 2 ) each agent @xmath178 submits @xmath200 ; + then this strategy profile is a nash equilibrium of @xmath29 in state @xmath130 , where @xmath130 is specified in condition @xmath122 .      _",
    "part 1_. let the last @xmath201 agents be @xmath131 .",
    "consider the following strategy profile : each agent @xmath202 submits @xmath203 , @xmath204 ; each agent @xmath205 submits @xmath179 , then we will prove the optimal value of @xmath206 for the @xmath82-th agent is @xmath207 .",
    "since condition @xmath122 is satisfied , then @xmath208 .",
    "let @xmath209 @xmath210 here we only explicitly show the up - left and bottom - right entries because only these two entries are useful in the following discussions .",
    "the other entries in diagonal are simply represented as symbol @xmath62 .",
    "note that @xmath211 thus , @xmath212 suppose the @xmath82-th agent chooses arbitrary parameters @xmath213 in his strategy @xmath214 , let @xmath215 then , @xmath216}\\cos(\\theta/2 ) & *    &    &    &    &     & \\\\",
    "ie^{i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2 ) & *    &    &    &    &     & \\\\     &   & *   & *   &    &     & \\\\     &   & *   & *   &    &     & \\\\     &   &     &     & \\cdots &     & \\\\     &   &     &     & & * & ie^{-i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2 ) \\\\     &   &     &     & & * & e^{-i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2 ) \\end{bmatrix}_{2^{n}\\times 2^{n}}.\\end{aligned}\\ ] ] recall that @xmath217 thus , @xmath218\\overrightarrow{\\psi}_{1}=\\frac{1}{\\sqrt{2}}\\begin{bmatrix }    e^{i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2)\\\\    ie^{i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)\\\\    0\\\\    \\cdots\\\\    0\\\\    -e^{-i\\frac{(l-1)\\pi}{l}}\\sin(\\theta/2)\\\\    ie^{-i[\\frac{(l-1)\\pi}{l}+\\phi]}\\cos(\\theta/2 ) \\end{bmatrix}_{2^{n}\\times 1},\\end{aligned}\\ ] ] @xmath219 the probability distribution @xmath118 is computed from @xmath220 : @xmath221 obviously , @xmath222 consider the payoff to the @xmath82-th agent , @xmath223 since @xmath162 is satisfied , _ i.e. _ , @xmath224 , then the @xmath82-th agent chooses @xmath225 to minimize @xmath226 . as a result , @xmath227 .",
    "since @xmath164 is satisfied , _ i.e. _ , @xmath166 , then the @xmath82-th agent prefers @xmath228 , which leads to @xmath229 and let @xmath230 be its maximum @xmath153 .",
    "therefore , the optimal value of @xmath206 for the @xmath82-th agent is @xmath207 .    _",
    "part 2_. let the first @xmath201 agents be @xmath131 .",
    "consider the following strategy profile : each agent @xmath231 submits @xmath179 ; each agent @xmath232 submits @xmath203 , @xmath233 , then we will prove the optimal values of @xmath206 and @xmath234 for the @xmath82-th agent are @xmath235 and @xmath236 .    as shown before , @xmath237 @xmath238 note that @xmath239 thus , @xmath240 suppose the @xmath82-th agent chooses arbitrary parameters @xmath213 in his strategy @xmath214 , let @xmath215 then , @xmath241 @xmath242\\overrightarrow{\\psi}_{1}=\\frac{1}{\\sqrt{2}}\\begin{bmatrix }    -e^{i\\phi}\\cos(\\theta/2)\\\\",
    "-i\\sin(\\theta/2)\\\\    0\\\\    \\cdots\\\\    0\\\\    \\sin(\\theta/2)\\\\    -ie^{-i\\phi}\\cos(\\theta/2 ) \\end{bmatrix}_{2^{n}\\times 1},\\end{aligned}\\ ] ] @xmath243 the probability distribution @xmath118 is computed from @xmath220 : @xmath244,&&p_{c\\cdots cd}=\\sin^{2}(\\theta/2)\\\\ & p_{d\\cdots dc}=0 , & & p_{d\\cdots dd}=\\cos^{2}(\\theta/2)\\sin^{2}\\phi\\end{aligned}\\ ] ] obviously , @xmath222 consider the payoff to the @xmath82-th agent , @xmath245+\\$_{c\\cdots cd}\\sin^{2}(\\theta/2 )    + \\$_{d\\cdots dd}\\cos^{2}(\\theta/2)\\sin^{2}\\phi\\end{aligned}\\ ] ] since @xmath162 is satisfied , _ i.e. _ , @xmath224 , then the @xmath82-th agent chooses @xmath246 . as a result , @xmath247",
    "since the @xmath82-th agent belongs to @xmath248 , by condition @xmath138 , @xmath234 can be chosen as @xmath249 . according to step 5 of _ messagecomputing _ , @xmath250 .",
    "thus , @xmath251 . in this case , @xmath252 can be chosen as @xmath253 .    by symmetry , in state @xmath130 , consider the following strategy : each agent @xmath140 submits @xmath176 , @xmath177 ; each agent @xmath178 submits @xmath179 .",
    "then this strategy profile is a nash equilibrium of @xmath29 in state @xmath130 , and the final outcome implemented in nash equilibrium is @xmath254 ."
  ],
  "abstract_text": [
    "<S> the maskin s theorem is a fundamental work in the theory of mechanism design . in this paper </S>",
    "<S> , we propose that if agents report messages to the designer through channels ( _ e.g. _ , internet ) , agents can construct a self - enforcing agreement such that any pareto - inefficient social choice rule satisfying monotonicity and no - veto will not be nash implementable when an additional condition is satisfied . </S>",
    "<S> the key points are : 1 ) the agreement is unobservable to the designer , and the designer can not prevent the agents from constructing such agreement ; 2 ) the agents act non - cooperatively , and the maskin mechanism remain unchanged from the designer s perspective .    mechanism design ; nash implementation ; social choice . </S>"
  ]
}
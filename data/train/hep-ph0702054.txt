{
  "article_text": [
    "selex collaboration has reported their observation of the doubly charmed baryon @xmath16 @xcite and their measured decay width and production rate are much larger than those predicted theoretically , e.g. refs",
    "nevertheless , it started a new stage of the double - heavy baryon study .",
    "the observations of the double - heavy baryons @xmath18 , @xmath5 denotes the baryons of @xmath28 , @xmath29 a light quark , and the isospin - breaking is ignored .",
    "for instance , @xmath0 denotes either @xmath16 or @xmath17 etc .",
    "] should be done in all possible experimental equipments , e.g. the detectors at the hadronic colliders ( tevatron and lhc ) and fixed target ones as well etc .",
    "especially , for the lightest one @xmath0 so great discrepancy between the experimental data and the theoretical predications should be explained .",
    "theoretically in order to explain the discrepacy , more configurations of the double - heavy diquark inside the baryons and more mechanisms , in addition to the gluon - gluon fusion mechanism , have been taken into account@xcite . considering the usages of experimental feasibility studies and",
    "the fact that the efficiency to generate the double - heavy baryon @xmath18 with pythia @xcite directly is too low due to the reason as that in generating @xmath30 meson , here in a pythia - compatible format we write an effective generator genxicc for the hadronic production of double - heavy baryons involving all of the formulae appearing in refs.@xcite and extended to the production for the double - heavy baryons @xmath1 and @xmath2 ( heavier than @xmath0 ) .",
    "especially , the double - heavy baryon @xmath1 has quite large branching ratio for decaying into @xmath31 inclusively , it may contribute serious background in observing @xmath30 experimentally .",
    "since the format , genxicc can be easily implemented into pythia to simulate the full events for various experimental environments such as in the case of bcvegpy for the @xmath30 meson hadroproduction @xcite . though the double - heavy baryons @xmath1 and",
    "@xmath2 ( heavier than @xmath0 ) in the generator are involved , the cross - sections of @xmath1 and @xmath2 are much smaller than that of @xmath0 and they are more difficult to be observed experimentally than @xmath0 . to meet the most needs in cases and to make the generator genxicc as compact as possible , here we only involve the most important ( great ) gluon - gluon fusion mechanism for the @xmath1 and @xmath2 production .",
    "the formulation for the production in refs.@xcite is under nrqcd framework@xcite .",
    "for instance , the @xmath0-baryon production is realized via production of a binding diquark of heavy flavors ( a diquark core ) either @xmath25_{\\bar{3}}$ ] ( in configuration of @xmath9-wave and in color anti - triplet @xmath7 ) or @xmath26_6 $ ] ( in configuration of @xmath9-wave and in color sextuplet @xmath8 ) , and then the relevant double - heavy baryon is formed by means of the diquark as a core to absorb a proper light quark from ` vacuum ' non - perturbatively .",
    "since there is no precisely theoretical estimate on the relevant non - perturbative matrix element which describes the fact of combining two heavy quarks into the diquark and absorbing a proper quark from ` vacuum ' to form the baryon non - perturbatively , thus as in refs.@xcite , the matrix element here is approximately taken as a ` decay constant ' of the heavy diquark core and the probability of the diquark to form the baryon is assumed to be one .",
    "namely to study the hadronic production of @xmath18 is equivalent to study the hadronic production of @xmath32-diquark .",
    "it may be understood as that the fragmentation function @xmath33 of a heavy diquark into a baryon has a very sharp peak near @xmath34 @xcite , and the momentum of the final baryon may be considered roughly equal to the momentum of the produced diquark .    in the generator , for @xmath0 production",
    "we include the gluon - gluon fusion mechanism that via the subprocess @xmath35 and the extrinsic charm mechanisms those via the subprocess @xmath36 ( gluon - charm collision ) or the subprocess @xmath37 ( charm - charm fusion ) , furthermore , two configurations of the binding diquark , @xmath25_{\\bar{3}}$ ] and @xmath26_{6}$ ] , are considered as in refs.@xcite . in the mentioned mechanisms , the heavy quark components in the initial hadrons are those created from ` gluon splitting ' perturbatively , so we call them as ` extrinsic ' ones for convenience . because it contains certain non - perturbative nature @xcite , the extrinsic charm fusion via the subprocess @xmath38",
    "is not included .",
    "there are also non - perturbative intrinsic charm components in the initial hadrons @xcite , which may give sizable contributions when the c.m .",
    "energy of the collision is not too great @xcite . since the contributions from the ` intrinsic charm ' mechanism are model - dependent , i.e. , they depend on the non - perturbative intrinsic charm distribution function , so in the generator we do not include the ` intrinsic ' mechanism .",
    "the technology , which we will adopt here , for simulating the production by taking the gluon - gluon fusion mechanism and the extrinsic charm mechanism into account is that in ref.@xcite .",
    "namely these mechanisms are consistently dealt with under the general - mass flavor - number ( gm - vfn ) scheme @xcite . since here",
    "we will take the way to deal with the most complicated mechanism of gluon - gluon fusion as that of the generator bcvegpy , which has been described quite well in refs.@xcite , so to shorten the paper , we will not repeat it here ( the interesting reader may consult ref.@xcite ) , but we will highlight only the differences at due places .    due to the fact that @xmath10-quark is much heavier than the @xmath11-quark , to produce",
    "a @xmath39 pair is more difficult than to produce a @xmath40 pair .",
    "therefore , the production of @xmath2 and @xmath1 , in contrary to @xmath0 , via extrinsic charm and/or bottom mechanisms is much less important in comparison to that via the gluon - gluon fusion mechanism .",
    "so considering the accuracy needed in the most usages for simulating the double - heavy baryons @xmath2 and",
    "@xmath1 , we think that it is enough to consider the gluon - gluon fusion mechanism but not the extrinsic charm and/or bottom mechanisms , therefore , in the generator genxicc , only the gluon - gluon fusion mechanism is involved .",
    "the genxicc package is written in the format of pythia@xcite , so the generator could be easily implemented into pythia .",
    "when the generator genxicc is implemented in pythia , one can generate complete events of the production conveniently as long as the created quark(s ) and gluon in the hard subprocess are connected to the relevant subprogram for their fragmentation in pythia . for user s convenience",
    ", we also set up a switch in genxicc to decide whether to use the vegas package @xcite or not , that depends on whether user would like to increase the monte carlo ( mc ) simulation efficiency for high dimensional phase - space integration with vegas functions or not .",
    "if using the vegas package , one may obtain the sampling importance function that is necessary for the importance sampling mc method .",
    "the paper is organized as follows . in sec.ii",
    ", we outline the generator genxicc , which includes an explanation of the generator structure , the use of generator and some checks of the generator .",
    "the final section is reserved for a summary .",
    "program genxicc is a specific generator for hadronic production of a baryon @xmath0 , @xmath1 and @xmath2 in a fortran package form .",
    "since the hadronic production of @xmath2 and @xmath1 are similar to the case of @xmath0 , in the paper we take the hadronic production of @xmath0 as the main clue to explain the generator genxicc , and then share some lights on the production of @xmath1 and @xmath2 in suitable places .    to produce @xmath0 by hadronic collisions ,",
    "the comparatively important mechanisms have : the gluon - gluon fusion one via the subprocess @xmath35 and the extrinsic charm one via the subprocess of the gluon - charm collision @xmath36 or the charm - charm collision with a hard gluon emission @xmath37 .",
    "the schematic feynman diagrams for the gluon - gluon fusion mechanism are shown in fig.([feyn1 ] ) .",
    "fig.([feyn1 ] ) shows the two ways to form the @xmath41-diquark pair from the outgoing valence quarks , and each way simply contains 36 feynman diagrams that are similar to the case of hadronic production of @xmath30 ( all the diagrams can be found in ref.@xcite , but one need to change all the @xmath10 quark line there to the @xmath11 quark line ) . for each of the sub - processes @xmath42 and @xmath43 of the extrinsic charm mechanism , there are ten feynman diagrams , and the typical feynman diagrams of them are shown in fig.([feyn2 ] ) .",
    "moreover , for every mechanism the intermediate diquark may be in the configurations either @xmath25_{\\bf\\bar{3}}$ ] or @xmath26_{\\bf 6}$ ] . in the generator , the program is written as that the events are generated by specific mechanism and configuration of the double - heavy diquark separately , whereas if it is needed to simulate the true situation , the events generated by these distinguishable mechanisms and diquark configurations can be mixed by taking proper options provided by pythia .",
    "more explanation about generating mixing events with pythia can be found in pythia mannual @xcite .     from the gluon - gluon mechanism , where the dashed box stands for the hard interaction kernel .",
    "@xmath44 and @xmath45 are two momenta for the initial gluons , @xmath46 and @xmath47 are the momenta for the two outgoing @xmath48 , @xmath49 is the momentum of @xmath0 .",
    "the @xmath41-diquark pair is either in @xmath50 $ ] or in @xmath51 $ ] respectively.,scaledwidth=70.0% ]    ( 80,60)(30,30 ) ( -37,-110 )    ( -37,-140 )    since genxicc is written in the format as that of pythia ( including common block variables ) , so all of the mentioned mechanisms and double - heavy diquark configurations can be easily implemented into pythia as an external process according to user s specific wish .",
    "thus all the functions in pythia can be applied to genxicc conveniently .",
    "we should note here that one has to set the pythia parameter @xmath52 when an extrinsic massive charm mechanism is considered , that means the showers for the initial state particles especially for that of the massive @xmath11-quark are switched off .",
    "it is because that the present version of pythia can deal with the initial state showers only for massless particles .",
    "genxicc may be more conveniently used to simulate the events according to various experimental situations with a gnu c compiler under the linux environment at a pc than anyone under the windows operating system .",
    "thus we suggest that one had better to work with genxicc under a linux environment with fortran 90 ( or fortran 77 ) and gnu c compiler being installed .",
    "the command * make * in gnu is used to arrange the whole execution of the generator . when running the gnu command * make * , firstly all the c / c++ codes in the configuration file * makefile * , which is in the main directory , are compiled sequentially , and all of the fortran source files of the program are followed to be also compiled , then all of the compiled files are linked according to these c / c++ codes automatically , finally an executable file with the default name * run * will be built . by running the built executable file * run * , one can generate the double - heavy baryon @xmath0 ( @xmath53 ) events accordingly . under this way , the time for compiling the fortran source files is saved a lot .",
    "this point will be explained more in the following subsection .",
    "we note here that all the sources files in our package are written in fortran only i.e. its c / c++ version is not available so far , while as described above , alternatively one may use the gnu c compiler * make * to run the generator with fortran source files to meet all kinds of needs instead .",
    "furthermore , a simple script , named as * do * , which does all the necessary jobs for generating the events , e.g. calling the command * make * to generate the executable file * run * and running the builded executable file * run * and etc . is put in the main directory of the program .",
    "we also note that the polarization of the production for the double - heavy baryons has not been programmed .",
    "in fact , to estimate the polarization of the produced double - heavy baryons is much more complicated problem than that of unpolarized one . at this moment , in the program we , also as the authors in literature , treat the production in such a way just according to nrqcd factorization : if taking @xmath0 as an example , firstly a proper double - heavy diquark @xmath41 in @xmath54 or @xmath55 configuration is produced , that can be computed by pqcd , then the diquark to form the baryons in terms of non - perturbative qcd , that is not calculable and is dictated by the so - called ` matrix element ' .",
    "furthermore as that in literature to deduce the input parameters as possible , the polarization of the baryon is summed up in the program for the production via the diquark and spin - symmetry for the matrix element is assumed , that the @xmath55 diquark configuration to produce a double - heavy baryon in spin - half or spin three halves by capture a light quark from vacuum is ` averaged ' respect to spin of the binding diquark .",
    "therefore , there is a weight factor , @xmath56 , for producing the double - heavy @xmath57 in spin three halves and a weight factor , @xmath58 , for producing the double - heavy @xmath0 in spin a half with the assumption .",
    "since the excited state @xmath57 ( spin in three halves ) will decay into the ground state ( spin in one half ) with an almost 100% possibility via strong and/or electromagnetic interaction , so considering ` comparatively poor ' abilities of experiments in the foreseen future and for simplifying the problem , we consider the production of @xmath57 and @xmath0 together , so that without distinguishing the two states the weight factors of them should be added ( to become @xmath59 ) . in this sense later on , if there is no special emphasis , the production of @xmath0 means the production of @xmath0 and @xmath57 as well always so the matrix elements @xmath60 and @xmath61 mean the hadronization of the diquarks to the baryons @xmath0 and @xmath57 as well .",
    "for the production of @xmath2 and @xmath1 here the treatments are the same .",
    "even so , for the production concerned , we still need to know the values of the matrix elements @xmath62 and @xmath63 due to the various intermediate double - heavy diquarks .",
    "if someone is interested in polarization of the @xmath55 configuration specially , only for the gluon - gluon fusion mechanism he can realize his interest by making proper changes in genxicc , i.e. , to make suitable changes in the subroutine * bundhelicity * ( in the file s@xmath64bound.f of the subdirectory _ ggsub _ ) accordingly , he can generate the diquark with a definite polarization as he likes .",
    "more explicitly , for genxicc in default status , summation over the three components of the @xmath55 diquark s polarization is programmed in the subroutine * bundhelicity * , therefore , the one can achieve the polarized result by simply keeping the terms corresponding to the component of the diquark s polarization of his interest , and commenting out the remaining terms related to his not interest components of the diquark s polarization in * bundhelicity*.          the schematic structure of the program is shown in fig.[struct ] .",
    "it shows that there are totally nine subdirectories in the main directory _ genxicc_. the subdirectory _ data _ is used to store all the obtained data files , while the other eight subdirectories contain necessary files to complete specific tasks accordingly for generating events . namely the generator genxicc has been divided into eight modules with less cross communication among the modules , and each module is applied to complete assigned task(s ) . in the main directory _ genxicc _ , there are three fortran source files : parameter.f , run.f and xicc.f . the file xicc.f is the main program of the generator , which arranges the running of all the fortran codes in the main directory and in subdirectories in proper order .",
    "the file run.f is to define a few of global variables ( all of which are named as the variables in capital , e.g. energyoflhc ( the collision energy for lhc ) and numofevents ( the number of events to be generated ) etc .",
    "the file parameter.f is to set the initial values for all the other parameters , such as the mass of @xmath11-quark etc .. the eight modules of genxicc include :    * the module * generate * : it is the key module of the program and it contains the files for generating @xmath0 , @xmath1 and @xmath2 events respectively with the help of the modules * phase * , * ggsub * , * gcsub * , * ccsub * and * pythia*. the functions of the module * generate * are to set the initialize condition for event simulation ; to establish the connection with pythia @xcite and a connection to a specific version of the parton distribution functions ( pdfs ) that have not been included in pythia yet but included in the package for convenience ( i.e. the three types of pdfs : cteq6hq @xcite , grv98l @xcite and mrst2001l @xcite ) ; to calculate the integrand ( the squared amplitude with necessary jacobian for the phase space integration ) with the help of either the module * ggsub * for gluon - gluon fusion mechanism or the module * gcsub * for gluon extrinsic - charm mechanism or the module * ccsub * for gluon extrinsic - bottom mechanism ; to do the phase space integration with the help of the module * phase*.",
    "the module * generate * contains five fortran source files : evntinit.f , outerpdf.f , totfun.f , sepfun.f and mixfun.f .",
    "particularly , for simulating @xmath18 production with a given mechanism , sepfun.f is to calculate the integrand ( the squared absolute amplitude with jacobi determinant of the phase integration ) for a certain @xmath32-diquark production channel as specified by the parameter * ixiccstate * ( the meaning of which will be explained in the next subsection ) ; mixfun.f is to calculate the integrand for the summed results , e.g. to calculate the summed results of the @xmath32-diquark in possible spin - color configurations for a certain mechanism as specified by the parameter * imixtype * ( the meaning of which will be explained in the next subsection ) . *",
    "the module * phase * : it contains the files for generating the allowed phase - space point and for generating an importance sampling function with the help of the vegas program @xcite .",
    "there are four source files : phase@xmath64gen.f , phase@xmath64point.f , charmsub.f and vegas.f .",
    "the file phase@xmath64point.f is to generate the phase - space points allowed kinematically with the help of the file phase@xmath64gen.f ; the file phase@xmath64gen.f contains the rambo subroutine @xcite , which can be used to generate the allowed phase space and to generate the momenta of the particles in final state ; the file charmsub.f is only used in the case of @xmath0 production for calculating the subtraction terms of the charm pdf , that is necessary to avoid the ` double counting ' when summing up the results of the two mechanisms : the gluon - gluon fusion and the gluon - charm collision @xcite ; the file vegas.f contains the vegas program , which is used to generate the importance sampling function for mc simulation . *",
    "the module * ggsub * : it contains the files for calculating the squared amplitudes of @xmath0 , @xmath2 and @xmath1 production through the gluon - gluon fusion subprocess . as for @xmath0 or @xmath2 simulation , when computing the squared amplitudes , the intermediate diquark is in either one of the two spin - color configurations @xmath20_{\\bar{3}}$ ] and @xmath21_6\\ , ( q = b , c)$ ] respectively .",
    "while for @xmath1 , the intermediate diquark can be in either one of the four spin - color configurations @xmath65_{\\bar{3}}$ ] , @xmath65_{6}$ ] , @xmath66_{\\bar{3}}$ ] and @xmath66_{6}$ ] .",
    "there are five fortran source files : s@xmath64bound.f , s@xmath64common.f , s@xmath64foursets.f , s@xmath64free.f and s@xmath64samp.f .",
    "the files are taken from bcvegpy @xcite , but necessary changes are made so as to make them suitable for the present purpose ( i.e. , to compute the @xmath0 , @xmath1 and @xmath2 production ) . here due to the replacement of an antiquark by a quark , the changes are included in color factors , the connection between the free quark part amplitudes and the bound state part amplitudes and etc .. more differences between the production of @xmath0 ( @xmath1 and @xmath2 ) and the production of @xmath30 through the gluon - gluon fusion subprocess can be found in ref.@xcite . * the module * gcsub * : it contains files for calculating the amplitudes squared for @xmath0 production through the gluon - charm collision ( the gluon extrinsic charm mechanism ) . when computing the amplitudes squared , and the intermediate @xmath41-diquark configuration either @xmath67_{\\bf \\bar{3}}$ ] or @xmath68_{\\bf 6}$ ] is considered respectively .",
    "there are two source files : gcamp1.f and gcamp2.f .",
    "the file gcamp1.f is to calculate the amplitude squared for the configuration @xmath67_{\\bf \\bar{3}}$ ] and the file gcamp2.f is to calculate the amplitude squared for the configuration @xmath68_{\\bf 6}$ ] . *",
    "the module * ccsub * : it contains the files for calculating the amplitudes squared for producing @xmath0 through the charm - charm collision ( via the subprocess @xmath37 ) .",
    "when computing the amplitudes squared , the intermediate @xmath41-diquark configuration either @xmath67_{\\bf \\bar{3}}$ ] or @xmath68_{\\bf 6}$ ] is considered respectively .",
    "there are two source files : ccamp1.f and ccamp2.f .",
    "the file ccamp1.f is to calculate the squared amplitude for the configuration @xmath67_{\\bf \\bar{3}}$ ] and the file ccamp2.f is to calculate the amplitude squared for the configuration @xmath68_{\\bf 6}$ ] .",
    "* the module * pythia * : it contains the files for pythia running .",
    "there are four source files : py6409.f ( a nickname for pythia 6.409 ) , upinit.f , upevnt.f and colorflow.f . here",
    "upinit.f and upevnt.f are two files to initialize * an external process defined by user * for pythia . while colorflow.f sets the color flow information for the concerned processes . for convenience , the manual ( pythia@xmath64manual.tar.gz ) and some notes ( pythia6409.update ) for the current pythia version 6.409 are included . *",
    "the module * pybook * : it contains the files for initializing the subroutine pybook of pythia to record the events .",
    "the subroutine pybook can be easily adapted to achieve the differential distributions of a certain particle in final state .",
    "note here that one can record all the necessary information of the events at one run by properly using of pybook .",
    "some typical ways to record the events with pybook have been programmed in the generator genxicc .",
    "furthermore , the user may conveniently switch off this module in xicc.f in main directory so as to use his / her own way to record the data .",
    "there are five source files : pybookinit.f , uphistrange.f , uppydump.f , uppyfact.f and uppyfill.f . here , the four files : pybookinit.f , uppydump.f , uppyfact.f and uppyfill.f are to call the pythia subroutines pybook , pydump , pyfact , pyfill respectively ; uphistrange.f is to set the ranges for the histograms . *",
    "the module * system * : it contains the files to open or to close the relevant record files and to print out certain running messages at the intermediate steps according to one s wish .",
    "they tell the user at which step the program is running .",
    "there are seven source files : upopenfile.f , uplogo.f , vegaslogo.f , updatafile.f , upclosegradefile.f , uperror.f and upclosepyfile.f . here",
    "upopenfile.f and upclosegradefile.f are used to open or to close the files for recording the sampling importance function ;",
    "updatafile.f and upclosepyfile.f are used to open or to close the data files used for pybook ; uperror.f is to print some possible warning messages during program running ; uplogo.f is to print the logo of the generator to the screen or to the data file with suffix ` .cs ' ; vegaslogo.f is to print the running information during vegas running to the screen or to the data file with suffix ` .cs ' .",
    "all the files for recording the running information are put in the subdirectory * data*. to distinguish them , all the grade files ( sampling importance function ) for recording the obtained data are ended with the suffix ` .grid ' , all the intermediate files , which record the used parameter values and the vegas running information , are ended with the suffix ` .cs ' and all the files which record the differential distributions , e.g. the transverse momentum and rapidity of a specific particle in final state , such as @xmath0 , are ended with the suffix ` .dat ' .",
    "each module is equipped with its own * makefile * that will be used to make a library of the same name , e.g. the * makefile * in the subdirectory * generate * will be used by the gnu command * make * to generate a library named as _ generate.a _ , which is located in the main directory .",
    "these sub - makefiles are orchestrated by a master * makefile * in the main directory . under this way",
    ", the time for compiling fortran source files can be saved a lot , because once a source file is compiled , one does not need to re - compile it again , unless some changes are made .",
    "libraries required for the main program are listed in the libs variable of the master * makefile * and built automatically by invoking the sub - makefiles : @xmath69    under the way based on * makefile * , with the command * make * an executable file is built whose default name is * run * , then the program acquires good modularity and re - usability .",
    "thus , the user can easily reform the generator to suit his / her experimental environment .",
    "a simple script , which is named as * do * and does all the necessary jobs for generating events , is put in the main directory . for convenience ,",
    "another script , taken directly from the formcalc package @xcite , is also supplied , which is named as * pnuglot * and may produce a high - quality encapsulated postscript ( eps ) file to plot the generated data in relevant file(s ) that is(are ) in the subdirectory * data*.              the overall schematic flow chart of the generator genxicc is shown in fig.([chart1 ] ) .",
    "it shows that genxicc can be schematically divided into two blocks , i.e. the _ vegas _ block ( mainly with * phase * ) and the _ event _ block ( mainly with * generate * ) .",
    "the function of the _ vegas _ block is to generate the sampling importance function that is necessary for importance sampling , and the function of the _ event _ block is to generate events with pythia , e.g. all the mentioned production processes for the hadornic production of @xmath18 can be implemented straightforward in pythia as external process by properly programming the two pythia subroutines upinit and upevnt .",
    "the schematic flow charts for the _ vegas _ block and the _ event _ block of the generator genxicc are shown in fig.([chart2 ] ) .",
    "when simulating the production , one may chose whether to take importance sampling method with vegas or not . if the importance sampling method is used the simulation efficiency may increase a lot .",
    "the vegas package is programmed to achieve a sampling importance function .",
    "one can learn from fig.([chart1 ] ) that there are three ways to do the event simulation in the program : one is the trivial mc and the left two ways are to use the importance sampling method , i.e. one is to use the existent grades ( importance sampling function ) that have been generated in previous run(s ) and have been recorded in .grid file(s ) in the subdirectory * data * and the other one is to use a new grade generated by the current vegas running .",
    "when setting ivegasopen=0 and igrade=1 for instance when the function has been recorded in .grid file(s ) by previous run(s ) already , i.e. adopting the first importance sampling method , one may generate @xmath0 events , just by reading the existent importance sampling function .",
    "thus , when using the package under these proper options , one just needs to run vegas once enough .    the precision of the generated importance sampling function can be improved by properly adjusting the maximum iteration number , the number of calls to the integrand in each time of the iteration , and the number of bins ( the @xmath70 $ ] region is divided into how many sub - regions ) as well . for convenience ,",
    "we define three parameters in the head file invegas.h : nvegitmx ( maximum number of allowed iterations ) , nvegcall ( maximum total number of the times to call the integrand in each iteration ) and nvegbin ( the number of bins ) .",
    "a subtle point is that , in vegas , the default number of nvegbin is 50 ( i.e. the region of ( 0,1 ) is divided into 50 pieces ) ; by taking a bigger proper value for nvegbin , one can improve the production efficiency but need more iterations to obtain a stable result . in practice",
    ", the values for nvegitmx , nvegcall and nvegbin should be carefully chosen to obtain the best important sampling function within the least of cpu time . in our program , we take the default value of the column bins to be 100 ( according to our experience , it is enough ) ; and the user who wants to do some very precise studies , a proper variation of nvegbin is needed . and",
    "in practice , we have found that for the most complex gluon - gluon fusion mechanism for the hadronic production of @xmath0 , @xmath2 and @xmath1 , if choosing nvegitmx=20 and nvegcall=300000 , then we can achieve the precision goal of @xmath71 for the total cross - section .",
    "the flow chart for the _ event _ block is shown in the right diagram of fig.([chart2 ] ) .",
    "it is to generate events with the help of pythia package . at the present",
    ", we adopt the pybook subroutines that are provided by pythia , such as pyfill , pydump , pyfact and etc . , to record all the obtained information of the events .",
    "however , users may comment out all the calls for pybook subroutines in the source file xicc.f and then add his / her own ways to record the events conveniently .",
    "genxicc can generate a huge event sample of producing @xmath0 or @xmath1 or @xmath2 efficiently in the case of hadronic collisions .",
    "as for the hadronic production of @xmath72 ( @xmath73 ) , in framework of nrqcd @xcite , the partonic cross - section of the concerned mechanisms can be expressed as @xcite : @xmath74_{\\bf\\bar 3 } ) \\cdot h^{qq}_3 + h ( ab\\to ( qq)[^1s_0]_{\\bf 6 } ) \\cdot h^{qq}_1 + \\cdots , \\label{nrqcd10}\\ ] ] where the ellipsis stands for the terms in higher orders of @xmath75 .",
    "@xmath76_{\\bf\\bar 3 } ) $ ] or @xmath77_{\\bf 6 } ) $ ] is the perturbative coefficient for producing a @xmath78 pair in configuration of @xmath79 and color @xmath80 , or in configuration of @xmath81 and color @xmath82 respectively .",
    "the parameters @xmath83 and @xmath84 are the values of the nonperturbative ` matrix elements ' in nrqcd to characterize the transitions of the charm pair of quarks in @xmath85_{\\bf\\bar 3}$ ] and in @xmath86_{\\bf 6}$ ] into the baryon @xmath72 respectively . according to the argument presented in the introduction , the hadronic production of @xmath72 is ` equivalent ' to the hadronic production of @xmath87-diquark . under such condition",
    ", the value of nrqcd matrix element @xmath83 can be related to the wavefunction for the color anti - triplet @xmath85 $ ] @xmath87-diquark state , i.e. @xmath88 , where @xmath89 is the wave function at origin for the diquark binding system @xmath87 and @xmath90 is the weight factor from ` polarization average assumption ' in producing the baryon that is mentioned above ) .",
    "while as for @xmath1 , the factorization formula is different from that for @xmath72 due to different flavors being involved and , in fact , there are two physical states @xmath14 and @xmath15 , thus it reads : @xmath91_{\\bf\\bar 3 } ) \\cdot h^{bc}_3+h ( ab\\to ( bc)[^1s_0]_{\\bf 6 } ) \\cdot h^{bc}_1 + \\cdots \\nonumber\\\\ & \\hat{\\sigma}_{ab\\rightarrow \\xi_{2bc } } = h ( ab\\to ( bc)[^1s_0]_{\\bf\\bar 3 } ) \\cdot { h'}^{bc}_3 + h ( ab\\to ( bc)[^3s_1]_{\\bf 6 } ) \\cdot { h'}^{bc}_1 + \\cdots . \\label{nrqcd101}\\end{aligned}\\ ] ] more explicitly , four matrix elements : @xmath92 , @xmath93 , @xmath94 and @xmath95 , which characterize the transitions of the bottom - charm diquarks in @xmath86_{\\bf 6}$ ] , @xmath85_{\\bf 6}$ ] , @xmath85_{\\bf\\bar 3}$ ] and @xmath86_{\\bf\\bar 3}$ ] into @xmath1 respectively are needed .",
    "similarly @xmath94 can be related to the wavefunction of the color anti - triplet diquark @xmath23 $ ] as @xmath96 .",
    "users may communicate with or give instructions to the program through the source files run.f and parameter.f .",
    "these two input files allow users to setup the generation parameters and requests .",
    "all the necessary parameters are :    * pmc= : mass of @xmath11 quark ( in units gev ) .",
    "it should be taken as an effective one that can be derived from the value of the pole mass and the @xmath97 running mass @xcite .",
    "its default value is taken to be @xmath98  gev . *",
    "pmb= : mass of @xmath10 quark ( in units gev ) .",
    "similarly , it should be taken as an effective one and its default value is taken to be @xmath99  gev .",
    "+ 0.6 cm + .all the considered channels for the hadronic production of the double - heavy baryon , which are defined by the two parameters * mgenxi * and * ixiccstate*. here the symbol gg - channgel stands for the gluon - gluon fusion channel and etc .. [ cols=\"^,^,^,^\",options=\"header \" , ]    + [ xi ] * mgenxi= : symbol to choose which double - heavy baron , i.e. @xmath0 , @xmath2 and @xmath1 , to be generated .",
    "mgenxi=1 is to generate @xmath0 events , mgenxi=2 is to generate @xmath1 events and mgenxi=3 is to generate @xmath2 events . as for the production of @xmath2 and @xmath1 , only their dominant gluon - gluon fusion mechanism is programmed . for clarity , we show all the considered channels in tab.[xi ] . in default , we set mgenxi=1 .",
    "* pmxicc= : the mass of @xmath0 , @xmath1 and @xmath2 ( in units gev ) respectively according to the value of mgenxi : pmxicc=@xmath100 for mgenxi=1 ; pmxicc=@xmath101 for mgenxi=2 ; pmxicc=@xmath102 for mgenxi=3 . to ensure the gauge invariance of the hard scattering amplitude , we must set pmxicc = pmc+pmc for @xmath0 , pmxicc = pmb+pmc for @xmath1 and pmxicc = pmb+pmb for @xmath2 .",
    "* fxicc= : the value of @xmath103 or @xmath104 or @xmath105 ( in units @xmath106 ) corresponding to the value of mgenxi : fxicc=@xmath103 for mgenxi=1 ; fxicc=@xmath104 for mgenxi=2 ; fxicc=@xmath105 for mgenxi=3 .",
    "the default values for mgenxi=1,2,3 are taken as @xmath107gev@xmath108 , @xmath109gev@xmath108 and @xmath110gev@xmath108 @xcite respectively .",
    "* cmfactor : the relation among the non - perturbative matrix elements as defined above .",
    "it has been pointed out in @xcite that the relevant matrix elements have the values at the same order of @xmath75 .",
    "so for convenience , we introduce an addition parameter @xmath111 which may vary in a possible region and further assume that @xmath112 , @xmath113 and @xmath114 .",
    "one may study certain dependence of the production on the matrix elements by setting the value of the parameter . note that here we take @xmath115 as its default value .",
    "* ptcut= : @xmath116 ( in units gev ) cut for @xmath0 , @xmath1 and @xmath2 respectively . in default , we set ptcut=0.2gev .",
    "* etacut= : rapidity cut for @xmath0 , @xmath1 and @xmath2 respectively . in default",
    ", there is no rapidity cut for the production .",
    "* psetacut= : pseudo - rapidity cut for @xmath0 , @xmath1 and @xmath2 respectively . in default",
    ", there is no pseudo - rapidity cut for the production .",
    "* npdfu= : choice of the collision type of hadrons .",
    "npdfu=@xmath59 for @xmath117 collision with @xmath118  tev ( tevatron ) , npdfu=@xmath119 for @xmath120 collision with @xmath121  tev ( lhc ) and npdfu=@xmath122 for a fixed target experiment , but in the program we take it such as @xmath117 collision with @xmath123  gev ( selex ) . in default , we set npdfu=1 . *",
    "ecm= : total energy for the hadron collision ( in units gev ) .",
    "it is set to be energyofteva , energyoflhc or energyofselex in accordance to the value of the parameter npdfu . *",
    "imix= : whether to generate the mixed events .",
    "imix=0 for generating separate events ( e.g. events from a particular mechanism and a fixed configuration of the intermediate diquark state ) according to the value of ixiccstate ; imix=1 for generating mixed events according to the value of imixtype . as for mgenxi=1 ,",
    "it is to generate mixed events of @xmath25_{\\bf\\bar 3}$ ] and @xmath26_{\\bf 6}$ ] of the same mechanism . as for mgenxi=2 ,",
    "it is to generate mixed events of @xmath23_{\\bf\\bar 3}$ ] , @xmath23_{\\bf 6}$ ] , @xmath24_{\\bf\\bar 3}$ ] and @xmath24_{\\bf 6}$ ] of the gluon - gluon fusion mechanism . as for mgenxi=3 ,",
    "it is to generate mixed events of @xmath124_{\\bf\\bar 3}$ ] and @xmath125_{\\bf 6}$ ] of the gluon - gluon fusion mechanism . in default",
    ", we set imix=0 . * ixiccstate= : symbol for producing the events from different mechanisms and different intermediate diquark states in the case of imix=0 .",
    "when it is used for the production of @xmath0 , the option of ixiccstate is @xmath126 $ ] : ixiccstate=@xmath59 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath25_{\\bf\\bar 3}$ ] state ; ixiccstate=@xmath119 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath26_{\\bf 6}$ ] state ; ixiccstate=@xmath122 stands for the case of gluon - charm collision with the intermediate diquark in @xmath25_{\\bf\\bar 3}$ ] state ; ixiccstate=@xmath127 stands for the case of gluon - charm collision with the intermediate diquark in @xmath26_{\\bf 6}$ ] state ; ixiccstate=@xmath128 stands for the case of charm - charm collision with the intermediate diquark in @xmath25_{\\bf\\bar 3}$ ] state ; ixiccstate=@xmath8 stands for the case of charm - charm collision with the intermediate diquark in @xmath26_{\\bf 6}$ ] state .",
    "when it is used for the production of @xmath2 , the option of ixiccstate is @xmath129 $ ] : ixiccstate=@xmath59 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath124_{\\bf\\bar 3}$ ] state ; ixiccstate=@xmath119 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath125_{\\bf 6}$ ] state .",
    "when it is used for the production of @xmath1 , the option of ixiccstate is @xmath130 $ ] : ixiccstate=@xmath59 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath23_{\\bf\\bar 3}$ ] state ( for @xmath14 ) ; ixiccstate=@xmath119 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath24_{\\bf 6}$ ] state ( for @xmath14 ) ; ixiccstate=@xmath122 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath23_{\\bf 6}$ ] state ( for @xmath15 ) ; ixiccstate=@xmath127 stands for the case of gluon - gluon fusion with the intermediate diquark in @xmath24_{\\bf\\bar{3}}$ ] state ( for @xmath15 ) . and its value should be set according to one s needs . *",
    "imixtype= : the type of mixed double - heavy baryon ( @xmath0 , @xmath1 , @xmath2 ) events for the same mechanism .",
    "it is used when imix=1 . in the case of @xmath0 , imixtype",
    "@xmath131 $ ] : imixtype=1 is to generate the events for the gluon - gluon fusion mechanism with the summed up results of the intermediate diquark in @xmath25_{\\bf\\bar 3}$ ] and @xmath26_{\\bf 6}$ ] states ; imixtype=2 is to generate events for the gluon - charm collision mechanism with the results of the intermediate diquark in @xmath25_{\\bf\\bar 3}$ ] and @xmath26_{\\bf 6}$ ] states summed up ; imixtype=3 is to generate events for the charm - charm collision mechanism with the results of the intermediate diquark in @xmath25_{\\bf\\bar 3}$ ] and @xmath26_{\\bf 6}$ ] states summed up . in the case of @xmath1 or @xmath2 , only one mixed type of event",
    "is programmed , i.e. imixtype@xmath1321 is to generate the events for the gluon - gluon fusion mechanism with the results of the intermediate diquark in @xmath23_{\\bf\\bar 3}$ ] , @xmath24_{\\bf 6}$ ] , @xmath23_{\\bf 6}$ ] and @xmath24_{\\bf \\bar 3}$ ] states for the production of @xmath1 summed up or those with the intermediate diquark @xmath124_{\\bf\\bar 3}$ ] and @xmath125_{\\bf 6}$ ] states for the production of @xmath2 summed up . and its value should be set according to one s needs . *",
    "ivegasopen= : ( status of vegas subroutine ) ivegasopen=@xmath59 means the vegas subroutine is ` on ' ; ivegasopen=@xmath133 means the vegas subroutine is ` off ' . in default , we set ivegasopen=1 . * igrade= : whether to use the grade generated by previous vegas running , which is used only in the case of ivegasopen=@xmath133 .",
    "igrade=@xmath59 means to use ; igrade=@xmath133 means not to use .",
    "thus one runs vegas once enough , since one can use the existed grade to generate events by setting ivegasopen=@xmath133 ( without running vegas ) and igrade=@xmath59 . in default , we set igrade=0 . * iveggrade= : whether to improve the existed grade generated by the previous ( earlier ) vegas running in the case ivegasopen=@xmath59 .",
    "igrade=@xmath59 means to use ; igrade=@xmath133 means not to use . by setting igrade=@xmath59",
    ", one can generate a more precise grade based on the existed grade .",
    "such option is used in the cases when one does not satisfy with the mc precision of the old existed grade . in default , we set iveggrade=0 .",
    "* number= : total number of times for calling the integrand .",
    "the parameter is needed only when ivegasopen=@xmath59 .",
    "its value , together with the value of the following parameter nitmx , should be adjusted according to one s precision goal .",
    "* nitmx= : upper limit for the number of iterations .",
    "the parameter is needed only when ivegasopen=@xmath59 . *",
    "nev= : number of the events to be generated for the hadronic production of @xmath134 , @xmath135 or @xmath136 ( @xmath137 means a hadron ) respectively according to the value of mgenxi .",
    "its value should be set according to one s needs . *",
    "ioutpdf= : indicates whether the three latest versions of pdfs : cteq6hq @xcite , grv98l @xcite and mrst2001l @xcite are used when generating the events .",
    "the three pdfs are offered in the program for the hadronic production .",
    "ioutpdf=@xmath59 means they are used with further option ipdfnum , while ioutpdf=@xmath133 means they are not used so the inner pdfs of pythia are used by the option mstp(51 ) . in default , we set ioutpdf=1 .",
    "* mstp(51)= : choice of the proton parton - distribution set ( pythia parameter , see pythia manual ) , e.g. mstp(51)=@xmath119 for cteq3 m , mstp(51)=@xmath138 for cteq5l , mstp(51)=@xmath139 for cteq5 m , and etc .. it is used when ioutpdf=0 and in default , we set mstp(51)=7 .",
    "* ipdfnum= : indicates which one of the three latest version of the pdfs cteq6hq @xcite , grv98l @xcite and mrst2001l @xcite is used for the hadronic production .",
    "it comes into operation only under the option ioutpdf=@xmath59 .",
    "ipdfnum=@xmath140 means to use grv98l ; ipdfnum=@xmath141 means to use mrst2001l ; ipdfnum=@xmath142 means to use cteq6hq .",
    "it should be noted that only cteq6hq is consistent with the calculation technology of gm - vfn scheme , which is our default choice for pdf .",
    "the other two pdfs grv98l and mrst2001l programmed here are only for comparison with the results in literature easily . in default , we set ipdfnum=100 .",
    "* idwtup= : master switch dictating how the event weights and the cross - sections should be interpreted ( pythia parameter , see pythia manual ) .",
    "when idwtup=@xmath59 means , parton - level events have a weight at the input to pythia .",
    "the events generated stochastically are either accepted or rejected according to the weight , so that fully generated events at the output have a common weight ; parton - level events have a unit weight at the input when idwtup=@xmath122 , @xmath143 , they are always accepted . and idwtup=@xmath122 are enough . ] in default , we set idwtup=3 . *",
    "mstu(111)= : order of @xmath144 in the evaluation in pyalps ( a pythia routine for calculating @xmath144 , see pythia manual ) ; @xmath145 , mstu(111)=@xmath59 for leading order ( lo ) ; mstu(111)=@xmath119 for next leading order ( nlo ) . in default , we set mstu(111)=1 . * paru(111)= : constant value of @xmath144 ( see pythia manual ) , which is used only when mstu(111)=@xmath133 . in default , we set paru(111)=0.2 .",
    "* isubonly= : whether to generate the information only of the gluon - gluon fusion subprocess ; isubonly=@xmath133 for the full hadronic production , i.e. the structure functions are connected ; isubonly=@xmath59 for the subprocess only . in default , we set isubonly=0 . * subenergy= : the energy ( in units gev ) of the gluon - gluon fusion subprocess . it is needed only when isubonly=@xmath59 . and its value should be set according to one s needs .",
    "$ ] , @xmath146 $ ] , @xmath147 $ ] and @xmath148 $ ] respectively .",
    "note here that the curves for @xmath0 and @xmath2 both are divided by a factor ` 2 ' for convenience in comparison with literature results.,scaledwidth=45.0% ]    first of all , all the programs are checked by examining the gauge invariance of the amplitude , i.e. the amplitude vanishes when the polarization vector of an initial / final gluon is substituted by the momentum vector of this gluon .",
    "numerically , we find that the gauge invariance is guaranteed at the computer ability ( double precision ) for all these processes . especially , to make sure the correctness of our program for the most complicated gluon - gluon fusion mechanism , we have checked whether the numerical results evaluated by the generator agree well with those by fdc package @xcite . for such purpose",
    ", we have added the parameter * isubonly * to decide whether to generate the information only of the gluon - gluon fusion subprocess , since it is much more easier to be compared .",
    "furthermore , we have compared the numerical results for the gluon - gluon fusion mechanism with those by using the same input parameters as stated in the corresponding references in the literature , and the examples of these comparison can be explicitly found in the section iii of ref.@xcite . in checking the program ,",
    "we have recalculated all the values listed in ref.@xcite , and we find a good agreement of our present results with those of ref.@xcite .",
    "more explicitly , we obtain the same results for the partonic cross sections as that of ref.@xcite and we show the partonic cross sections for the production of baryons with heavy diquarks via the gluon - gluon fusion subprocess in fig.([subcs ] ) .     at the tevatron and is to generate the mixed events through gluon - gluon fusion mechanism ( imix=1 and imixtype=1).,scaledwidth=50.0% ]    -@xmath149 and @xmath0-@xmath150 distributions for the test run of the generator genxicc , which is for the hadronic production of @xmath0 at the tevatron and is to generate the mixed events through gluon - gluon fusion mechanism ( imix=1 and imixtype=1).,title=\"fig:\",scaledwidth=48.0% ] -@xmath149 and @xmath0-@xmath150 distributions for the test run of the generator genxicc , which is for the hadronic production of @xmath0 at the tevatron and is to generate the mixed events through gluon - gluon fusion mechanism ( imix=1 and imixtype=1).,title=\"fig:\",scaledwidth=49.0% ]    finally , we show a test run for the hadronic production of @xmath0 at the tevatron . when running the program , the initial parameters are shown in fig.([test ] ) .",
    "all the obtained data are turned into a zipped file , named as testdata.tar.gz in the main directory of the program .",
    "some typical resultant curves , e.g. @xmath149- and @xmath150-distributions are shown in fig.([distribution ] ) . in drawing the distributions , several typical rapidity cut , e.g. @xmath151 , @xmath152 and @xmath153",
    "are taken for @xmath0-@xmath149 distributions and similarly , several typical @xmath154 are taken for @xmath0-@xmath150 distributions .",
    "a generator genxicc has been developed and well - tested by us , which is for hadronic production of @xmath0 based on three mechanisms via gluon - gluon fusion , gluon - charm collision and charm - charm collision .",
    "while for the hadronic production of @xmath1 and @xmath2 only the most important mechanism via gluon - gluon fusion is available , because we think that considering the characteristics and most potential usages it is enough , and the program may be simplified in certain degree .",
    "the generator has proper interface to pythia , so the full events of the production can be generated by filling the standard pythia event common block .",
    "note that in the program we do not distinguish the state @xmath18 ( in spin one half ) and the state @xmath155 ( in spin three halves ) and consider their production of them together . if one would like to know their difference of the production of two states , roughly speaking",
    ", one can estimate it by the way to account the production as that if it is via @xmath54 heavy diquark then all ( 100% ) of the diquarks will be fragmented into the state @xmath18 , while if it is via @xmath55 heavy diquark then @xmath58 fraction of the diquarks will be fragmented into the state @xmath18 and @xmath56 fraction will be fragmented into the state @xmath155 . in view of the prospects for double - heavy baryon ( @xmath0 , @xmath1 and @xmath2 ) physics at selex , tevatron and lhc , the generator offers a useful tool for further experimental feasibility studies of the double - heavy baryons .",
    "brodsky , p. hoyer , c. peterson and n. sakai , phys .",
    "b * 93 * , 451 ( 1980 ) ; s. j. brodsky , c. peterson and n. sakai , phys .",
    "d*23 * , 2745 ( 1981 ) ; r. vogt and s.j .",
    "brodsky , nucl .",
    "b*478 * , 311(1996 ) ."
  ],
  "abstract_text": [
    "<S> we write down a generator program for the hadronic production of the double - heavy baryons @xmath0 , @xmath1 and @xmath2 according to relevant publications . we name it as genxicc and we test it by comparing its numerical results with those in references . </S>",
    "<S> it is written in a pythia - compatible format and it can be easily implemented into pythia . </S>",
    "<S> genxicc is also written in modularization manner , with * make * , a gnu c compiler , one may apply the generator to various situations or experimental environments very conveniently . + * pacs numbers : * 14.20.lq , 12.38.bx , 12.39.jh    * program summary * + _ title of program _ : genxicc + _ version _ : 1.0 ( january , 2007 ) + _ program obtained from _ : http://www.itp.ac.cn/@xmath3zhangzx ; cpc program library + _ computer _ : any linux based on pc with fortran 77 or fortran90 and gnu c compiler being installed + _ operating systems _ : linux + _ programming language used _ : </S>",
    "<S> fortran 77/90 + _ memory required to execute with typical data _ : about 2.0 mb . </S>",
    "<S> + _ distribution format _ </S>",
    "<S> : tar gzip file + _ nature of physical problem _ : hadronic production of a double - heavy baryons : @xmath0 , @xmath1 and @xmath2 . </S>",
    "<S> + _ method of solution _ : the production of the double - heavy baryons is realized by producing a binding double - heavy diquark either @xmath4_{\\bar{3},6}$ ] ( @xmath5 ) or @xmath6_{\\bar{3},6}$ ] , which is in color anti - triplet @xmath7 or color sextuplet @xmath8 and in @xmath9-wave triplet or singlet configuration respectively , and then by absorbing a proper light quark non - perturbatively . for the production of the various double - heavy baryons @xmath0 , @xmath1 , </S>",
    "<S> i.e. , one is that the inside @xmath10 and @xmath11 are symmetric in ` flavor space ' and the other is that @xmath10 and @xmath11 are anti - symmetric in ` flavor space ' similar to the case for the baryons @xmath12 and @xmath13 . </S>",
    "<S> let us call them as @xmath14 for symmetric one and @xmath15 for antisymmetric one when we need to distinguish them . </S>",
    "<S> due to the electromagnetic interaction between the quarks for instance , the two kinds of states may have different masses ( degeneracy broken ) . ] and @xmath2 , the ` gluon - gluon fusion ' mechanism , being the most important , is written precisely in the generator , but two additional mechanisms , i.e. the ` gluon - charm collision ' and the ` charm - charm collision ' ones , only for @xmath0 ( @xmath16 or @xmath17 ) are written . furthermore , all the mechanisms are treated consistently within the general - mass flavor - number ( gm - vfn ) scheme . </S>",
    "<S> specially , to deal with the amplitude and in order to save cpu time as much as possible , the ` improved helicity - approach ' is applied for the most complicated gluon - gluon fusion mechanism . </S>",
    "<S> the code with a proper option can generate weighted and un - weighted events accordingly as user s wish . </S>",
    "<S> moreover , an interface to pythia is provided to meet ones needs to generate the ` complete events ' of @xmath18 , i.e. to do the ` showers ' of the partons appearing in the initial and final states of the subprocess , and the hadronization for final obtained ` showers ' etc . </S>",
    "<S> + _ restrictions on the complexity of the problem _ : in genxicc , the approach to the hadronic production in terms of a ` complete @xmath19 calculation ' via the production of a binding diquark state either @xmath20_{\\bar{3}}$ ] or @xmath21_6 $ ] ( @xmath22 ) for @xmath0 and @xmath2 production , and via that of a binding diquark state of @xmath23_{\\bar{3}}$ ] or @xmath24_{\\bar{3}}$ ] or @xmath23_6 $ ] or @xmath24_6 $ ] for @xmath1 is available , but the contributions from the other higher fock states of the diquark states are not involved . considering the needs of comparisons and applications in most cases , three mechanisms and their consistent summation for the hadronic production of @xmath0 are available . </S>",
    "<S> but for most purposes and applications to the baryons @xmath2 and @xmath1 , which contain @xmath10-quark(s ) ( much heavier than @xmath11-quark ) , only the ` gluon - gluon fusion ' mechanism for the production is accurate enough , therefore , here only the ` gluon - gluon fusion ' mechanism is available . </S>",
    "<S> moreover , since the polarization of the double - heavy baryons is also strongly effected by hadronization of the double - heavy diquark produced via the mechanisms considered here , so in the present generator only the un - polarized production for the baryons are available . </S>",
    "<S> + _ typical running time _ : it depends on which option one chooses to match pythia when generating the events and also on which mechanism is chosen for generating the events . typically , for the most complicated case via gluon - gluon mechanism to generate the mixed events via the intermediate diquark in @xmath25_{\\bar{3}}$ ] and @xmath26_6 $ ] states , then on a 1.8 ghz intel p4-processor pc - machine , </S>",
    "<S> if taking idwtup=1 for pythia option ( the meaning will be explained later on ) , it takes about 20 hours to generate 1000 events , whereas , if idwtup=3 ( the meaning will be explained later on ) , it takes only about 40 minutes to generate @xmath27 events . </S>",
    "<S> + _ keywords _ : event generator ; hadronic production ; double - heavy baryon ( @xmath0 , @xmath1 , @xmath2 ) . + </S>"
  ]
}
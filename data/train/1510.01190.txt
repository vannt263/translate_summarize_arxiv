{
  "article_text": [
    "in relativistic astrophysics , simulations involving hydrodynamics or magnetohydrodynamics or similar physics are most often carried out using finite - volume methods .",
    "two major challenges of such simulations are _ accuracy _ and _ computational efficiency_. many important problems can not be solved to the required accuracy using currently available hardware resources .",
    "accuracy can be improved only by increasing numerical resolution . if parts of the solution are smooth so that one might want to take advantage of high - order methods to improve the accuracy , current methods eventually run into problems .",
    "high - order finite - volume methods couple together more cells and require more communication between cells . ultimately , when the number of cells and processors gets large enough , the communication time begins to limit the computation and the code no longer scales with the number of processors .",
    "moreover , astrophysical applications often involve multiphysics ( fluids , magnetic fields , neutrinos , electromagnetic radiation , relativistic gravity ) . with current formulations ,",
    "each new type of physics often requires its own computational treatment , making coupling of the physics difficult .",
    "as one looks ahead to the arrival of exascale computing , it seems that we should look to the development of algorithms that can take advantage of these very large machines properly for astrophysics .    in the last decade ,",
    "discontinuous galerkin ( dg ) methods have emerged as the leading contender to achieve all the goals of a general purpose simulation code , particularly for equations in conservation form : high order accuracy in smooth regions , robustness for shocks and other discontinuities , scalability to very large machines , accurate handling of irregular boundaries , adaptivity , and so on .",
    "many applications of dg in terrestrial fluid dynamics have appeared .",
    "however , applications in relativity and astrophysics have so far been mainly exploratory@xcite and confined to simple problems .",
    "the goal of this paper is to formulate the dg method for arbitrary 3-dimensional problems involving general relativistic gravitation . at first sight",
    ", this sounds tricky : the basic dg algorithm involves integrating the pdes over space and using gauss s theorem to turn integrals of divergences into surface integrals . in general relativity , spacetime is curved and coordinates are arbitrary and not necessarily simply related to physical measurements by an observer .",
    "so should integrations be performed over coordinate volume or proper volume ?",
    "what are the corresponding normal vectors that enter into the interface flux prescriptions ?",
    "how should einstein s equations , which are not typically in conservation form , be handled ?",
    "is the weak form or the strong form of the equations better ? how do the so - called metric identities affect the formulation ?",
    "we give answers to these questions .",
    "in particular , we find that the final formulation is very close to that already developed for euclidean space in curvilinear coordinates .",
    "moreover , the covariant approach adopted in this paper gives new insights into the standard curvilinear coordinate treatment .",
    "not only are derivations much simpler , but alternative formulations that may be more efficient computationally are found .    here",
    "we summarize the key results in this paper .",
    "* despite the curvature of spacetime , the dg algorithm can easily be formulated in general relativity .",
    "in fact , the formulation is analogous to that for curvilinear coordinates in flat spacetime .",
    "* in the general case , there are two distinct strong formulations for conservation laws . for the tensor - product basis functions used in this paper , the corresponding weak formulations are both equivalent to one of the strong formulations .",
    "* only one of the formulations has been widely used for flat space in curvilinear coordinates . in numerical experiments",
    ", the other appears to be somewhat more efficient and should be further investigated . *",
    "similarly , there are two inequivalent formulations for hyperbolic equations in non - conservation form .",
    "these formulations are important for solving einstein s equations .",
    "* time - dependent mappings ( arbitrary lagrangian - eulerian ( ale ) methods and the dual - frame approach@xcite that has proved useful for black hole simulations ) are easily implemented in the relativistic treatment .",
    "* we give streamlined derivations of the so - called metric identities , the geometric conservation law , and the ale method for moving grids .",
    "the derivation of the ale method is novel and uses general covariance to get the result in a few lines .",
    "in addition , the reason that the ale method preserves the conservation form of the equations is explained . * satisfying the metric identities discretely",
    "is often claimed to be a necessary condition for `` free - stream preservation , '' or the requirement that a uniform flow remain uniform for all time .",
    "we show that in fact this statement is true for only one of the computational formulations of the dg algorithm and not the other . *",
    "we clarify how normal vectors should be normalized .",
    "the normal vector that the boundary flux vector is projected along does not need to be the unit normal  the normalization factor cancels out of the algorithm .    a covariant treatment of dg in general relativity has previously been given by radice and rezzolla@xcite .",
    "this paper covers many aspects that were not covered by them .",
    "in a general time - dependent curved spacetime , a conservation law can be written in terms of a 4-divergence : @xmath0 where @xmath1 denotes the covariant derivative . here and throughout , repeated indices are summed over .",
    "greek indices @xmath2 range from 0 to 3 , while latin indices @xmath3 will be purely spatial , ranging from 1 to 3 .",
    "we choose units with the speed of light @xmath4 , so that @xmath5 .",
    "we will often denote @xmath6 by @xmath7 , a quantity like density that is conserved .",
    "the spatial flux vector @xmath8 is generally a function of @xmath7 . in practice , rather than a single conservation law like ( [ eq : cons ] ) , one deals with a system of conservation laws . in this case",
    ", @xmath7 is a vector of conserved quantities and @xmath8 is a vector of flux vectors .",
    "for example , @xmath7 and @xmath8 are vectors of length 5 for hydrodynamics . in this paper",
    ", we will typically not need to deal with the various separate equations in a system of conservation laws .",
    "accordingly , we will write @xmath7 and @xmath8 whether we are dealing with one equation or a system . all the derivations go through independently on each equation in a system",
    ".    it will be convenient to generalize ( [ eq : cons ] ) to allow a source term @xmath9 on the right - hand side .",
    "such a source term arises , for example , when one considers conservation of energy and momentum in a general curved ( or curvilinear ) metric .",
    "the divergence of the energy - momentum tensor gives an extra term that can not be included as the pure divergence of a flux vector .",
    "however , the extra term depends only on @xmath7 and not on its derivatives .",
    "this is the key requirement that we place on the source term in the subsequent treatment .",
    "the metric in a general spacetime can be written in the standard @xmath10 form @xmath11 where @xmath12 is called the lapse function , @xmath13 the shift vector , and @xmath14 is the spatial metric on @xmath15 slices .",
    "( for more on the @xmath10 decomposition , see , e.g. , @xcite or @xcite . ) in flat spacetime ( no relativistic gravitational field ) , we can set @xmath16 , @xmath17",
    ". in cartesian coordinates , @xmath18 , the euclidean 3-metric .    now using a standard identity for the covariant divergence ( see , e.g. , problem 7.7(g ) in @xcite )",
    ", the conservation equation ( [ eq : cons ] ) with source term can be written @xmath19 where @xmath20 is the determinant of the 4-metric @xmath21 .",
    "it is easy to show from ( [ eq:3 + 1 ] ) that @xmath22 , where @xmath23 is the determinant of @xmath14 .",
    "so eq .  ( [ eq : cons2 ] ) becomes @xmath24 here we have absorbed the factor of @xmath12 in the definitions of @xmath7 , @xmath8 , and @xmath9 , which is standard practice in computational relativity .",
    "multiplying eq .",
    "( [ eq : cons3 ] ) through by @xmath25 gives @xmath26 which suggests that @xmath27 , @xmath28 , and @xmath29 might be convenient variables to use in a code .",
    "note that eq .",
    "( [ eq : cons3 ] ) or ( [ eq : cons4 ] ) is formally the same as a conservation law in flat space written in curvilinear coordinates . in that case",
    "the metric is simply the euclidean metric transformed to the curvilinear coordinates , whereas here we consider the more general case where the metric might be the solution of einstein s equations of general relativity in an arbitrary coordinate system .",
    "as we will see , the dg algorithm is remarkably similar in flat and curved spacetimes .",
    "however , at key points there are important details that need to be correctly implemented .",
    "the algorithm starts by dividing the spatial domain into subdomains , often called cells or elements .",
    "each element is a mapping of a reference element ( triangle or square in 2-d , tetrahedron or cube in 3-d ) .",
    "the mapped elements can have straight or curved sides .",
    "( here `` straight '' means having two constant spatial coordinates . ) in each element , the quantities @xmath7 , @xmath8 , @xmath9 , etc .",
    "( or equivalently @xmath27 , @xmath28 , @xmath29 ) are each expanded in term of a set of basis functions , typically polynomials : @xmath30 analogous to spectral collocation methods , we will work with a so - called nodal expansion , where eq .",
    "( [ eq:2 ] ) is an interpolation : @xmath31 for some choice of nodes ( grid points ) @xmath32 .",
    "this implies that @xmath33 .",
    "such basis functions are called cardinal functions .",
    "for polynomial basis functions , they will be simply lagrange interpolating polynomials .",
    "get the dg equations by integrating eq .",
    "( [ eq : cons3 ] ) in each element with test functions that are the same as the basis functions : @xmath34 \\phi_i(\\xbf)\\,d^3x=0 . \\label{eq:3}\\ ] ] here we have integrated with respect to _ proper _ volume @xmath35 , where @xmath36 is the coordinate volume element @xmath37 . had we started with the form ( [ eq : cons4 ] ) , then we would have integrated with respect to _ coordinate _ volume instead .",
    "the choice is designed to allow gauss s theorem to be invoked in a simple way , as we now show .",
    "transform the spatial derivative term by integrating by parts : @xmath38 here @xmath39 is the proper surface element of the cell and @xmath40 is the unit outward normal ( see [ app : gauss ] for more on gauss s theorem and normal vectors . )    with a formulation like ( [ eq:3a ] ) in each element , there is no connection between the elements .",
    "the heart of the dg method is to replace @xmath8 in the surface term by the numerical flux @xmath41 , a function of the fluxes on _ both _ sides of the interface : @xmath42 this gives the weak form of the equations ( no derivatives of @xmath8 ) . to get the strong form , undo the integration by parts on the right - hand side of eq .",
    "( [ eq:4 ] ) : @xmath43 so one question we will have to answer is : should we use the weak form ( [ eq:4 ] ) or the strong form ( [ eq:5 ] ) ?",
    "we will return to this question in  [ subsec : weak ] .",
    "evaluation of eq .",
    "( [ eq:3 ] ) now follows standard lines as in flat spacetime .",
    "the first term gives the mass matrix : @xmath44 where the mass matrix @xmath45 has components @xmath46 and the dot in eq .",
    "( [ eq:6 ] ) denotes matrix - vector multiplication .",
    "note that a product like @xmath47 is expanded using the product of the function values at the grid points for each factor : @xmath48 this is not exact in general unless @xmath23 is constant , and will introduce aliasing that may have to be dealt with by filtering .",
    "we will handle all products in this way .",
    "the notation @xmath49 is used to denote the vector whose elements are @xmath50 .",
    "similarly , the last term in eq .",
    "( [ eq:3 ] ) gives @xmath51      for the strong form , the derivative term in eq .",
    "( [ eq:3 ] ) gives the boundary and volume terms as in eq .",
    "( [ eq:5 ] ) .",
    "note that all spatial derivatives can be rewritten using the derivative matrices defined by @xmath52 explicitly , for any quantity @xmath53 we have @xmath54 applying this to the derivative in eq .",
    "( [ eq:5 ] ) gives @xmath55_j\\phi_j(\\xbf ) = \\sum_{jk } d^{(a)}_{jk}\\left(\\sqrt{\\gamma}f^a\\right)_k\\phi_j(\\xbf ) .",
    "\\label{eq:8a}\\ ] ] thus the volume term becomes @xmath56      for the boundary surface term , define @xmath57 for smooth problems the numerical flux is generally evaluated by upwinding . for non - smooth solutions ,",
    "the flux prescription typically enforces the rankine - hugoniot relations in some way .",
    "so let s assume we have some prescription for @xmath58 on the boundary and that this has been computed as an expansion in terms of the basis functions .",
    "then @xmath59 write this as @xmath60 where the surface mass matrix on each piece of the boundary surface is defined as @xmath61      now put all the pieces together : substitute eqs .",
    "( [ eq:6 ] ) , ( [ eq:8 ] ) , ( [ eq:9 ] ) and ( [ eq:10a ] ) in eq .",
    "( [ eq:3 ] ) and multiply through by @xmath62 to get @xmath63 this is the form that is integrated with a suitable time stepper .",
    "we see that the algorithm resembles the method of lines in finite - volume methods .",
    "evaluate the various integrals by mapping them to the reference element and then doing a gaussian quadrature .",
    "let the mapping be some time - independent function @xmath64 with jacobian matrix @xmath65 and jacobian @xmath66 here the barred coordinates are some standard coordinates covering the reference element , which we will sometimes also denote as @xmath67 note the standard relativist s convention of placing the bar on the index : @xmath68 in ( [ eq:13 ] ) rather than @xmath69 , which facilitates working with tensor indices .",
    "we will take the reference element to be a cube with extents @xmath70 $ ] in each direction .",
    "the boundaries in most typical astrophysics problems are sufficiently simple that we do nt need the flexibility of grids composed of triangles or tetrahedra . even for binary black hole simulations , where the centers of each black hole are excised from the computational domain",
    ", we only need a domain bounded by a large sphere at infinity with two interior holes removed . such a domain",
    "can easily be covered with elements that are mapped cubes .",
    "using cubes allows a big simplification in the algorithm : we can take the basis functions to be a tensor product of 1-d basis functions @xmath71 on the reference element : @xmath72 since the gaussian quadrature along each dimension is being carried out with a weight function of unity , it should be a gauss - legendre quadrature , with nodes @xmath73 corresponding to roots of an appropriate legendre polynomial .",
    "a further simplification follows if we assume that these quadrature points are chosen to be the same as the interpolation points . the combination of tensor product basis functions and quadrature points the same as interpolation points gives a very simple form of the equations that resembles multipenalty collocation .",
    "it also implies that the basis functions are the lagrange interpolating polynomials corresponding to legendre polynomials : @xmath74    note that we can have different numbers of points along each dimension in ( [ eq:400 ] ) , which will lead to different values for the quadrature points @xmath73 and weights @xmath75 along each dimension .",
    "we will not clutter the notation to make this distinction .",
    "also , we now have to give up the nice matrix notation we used above , since each matrix index becomes a triple like @xmath76 .",
    "equation ( [ eq:7 ] ) for the mass matrix becomes @xmath77 here we have used the equality of quadrature and interpolation points to set quantities like @xmath78 equal to @xmath79 .",
    "the resulting mass matrix is diagonal in each dimension .",
    "the `` matrix '' multiplication of the expression ( [ eq:401 ] ) by a term like @xmath80 gives @xmath81 and a similar term for eq .",
    "( [ eq:8 ] ) .      corresponding to the manipulations in eq .",
    "( [ eq:8c ] ) we have @xmath82 mapping to the reference element gives @xmath83 where @xmath84 is the derivative matrix for @xmath85 , and similarly for the 2- and 3-coordinates .",
    "substituting eq .",
    "( [ eq:404 ] ) in eq .",
    "( [ eq:403 ] ) gives @xmath86 so analogously to eq .",
    "( [ eq:8a ] ) we get @xmath87_{lmn } \\phi_{lmn}(\\xbf ) , \\label{eq:407}\\ ] ] where @xmath88_{lmn}$ ] is given by the analog of eq .",
    "( [ eq:406 ] ) .",
    "thus the volume term ( [ eq:9 ] ) gives @xmath89_{lmn }    \\int\\phi_{lmn}(\\xbf)\\phi_{ijk}(\\xbf)\\,d^3x\\nonumber\\\\ & = \\sum_{lmn}\\left[\\partial_a\\left(\\sqrt{\\gamma}f^a\\right)\\right]_{lmn }    m_{(ijk)(lmn)}\\nonumber\\\\ & = \\left[\\partial_a\\left(\\sqrt{\\gamma}f^a\\right)\\right]_{ijk}w_i w_j w_k j_{ijk } , \\label{eq:408}\\end{aligned}\\ ] ] where we have used eq .",
    "( [ eq:401 ] ) in the last line .",
    "let s consider the flux through the surface corresponding to @xmath90 on the reference element .",
    "evaluating eq .",
    "( [ eq:10 ] ) by transforming to the reference element gives @xmath91 here @xmath92 is the determinant of the 2-dimensional metric induced on the surface by @xmath93 .",
    "assume the quadrature uses gauss - lobatto points .",
    "then @xmath94 , where @xmath95 is the last grid point .",
    "equation ( [ eq:409 ] ) becomes @xmath96    integrating over the surface @xmath97 gives a similar term with a minus sign and @xmath95 replaced by the index 0 , corresponding to the first grid point in the interval .",
    "the contributions from the other 4 sides of the cube are similar .",
    "putting together eqs .",
    "( [ eq:402 ] ) , ( [ eq:408 ] ) , ( [ eq:406 ] ) and ( [ eq:410 ] ) , and dividing through by @xmath98 , we get @xmath99-(\\sqrt{\\gamma}s)_{ijk}\\nonumber\\\\ & = - \\frac{1}{w_n}f_{ijn}\\frac{\\sqrt{{}^{(2)}\\gamma_{ij}}}{j_{ijn } }   \\delta_{kn } + \\frac{1}{w_0}f_{ij0}\\frac{\\sqrt{{}^{(2)}\\gamma_{ij}}}{j_{ij0 } }   \\delta_{k0 } - \\frac{1}{w_n}f_{njk}\\frac{\\sqrt{{}^{(2)}\\gamma_{jk}}}{j_{njk } }   \\delta_{in}\\nonumber\\\\ & \\quad+ \\frac{1}{w_0}f_{0jk}\\frac{\\sqrt{{}^{(2)}\\gamma_{jk}}}{j_{0jk } }   \\delta_{i0 } - \\frac{1}{w_n}f_{ink}\\frac{\\sqrt{{}^{(2)}\\gamma_{ik}}}{j_{ink } }   \\delta_{jn } + \\frac{1}{w_0}f_{i0k}\\frac{\\sqrt{{}^{(2)}\\gamma_{ik}}}{j_{i0k } }   \\delta_{j0}. \\label{eq:411}\\end{aligned}\\ ] ] the relatively simple form for the boundary flux terms in eq .",
    "( [ eq:411 ] ) occurs because of the 1-d gauss - lobatto quadratures using the interpolation points .",
    "note that the flux terms can be rewritten using eq .",
    "( [ eq:211 ] ) .",
    "for example , for the surface @xmath100 constant we get @xmath101 and similarly for the other surfaces . in other words ,",
    "the `` normal vector '' can be taken to be simply @xmath102 since the factor @xmath25 is usually incorporated in the definition of @xmath8 .",
    "the simplified version of the right - hand side of eq .",
    "( [ eq:411 ] ) is @xmath103_{ijn }   \\frac{\\partial x^{\\bar 3}}{\\partial x^a}\\big|_{ijn }   \\delta_{kn } + \\frac{1}{w_0}\\big[\\sqrt{\\gamma}\\big(f^{a*}-f^a\\big)\\big]_{ij0 }   \\frac{\\partial x^{\\bar 3}}{\\partial x^a}\\big|_{ij0 }   \\delta_{k0 }   \\nonumber\\\\ { } - & \\frac{1}{w_n}\\big[\\sqrt{\\gamma}\\big(f^{a*}-f^a\\big)\\big]_{njk }   \\frac{\\partial x^{\\bar 1}}{\\partial x^a}\\big|_{njk }   \\delta_{in } + \\frac{1}{w_0}\\big[\\sqrt{\\gamma}\\big(f^{a*}-f^a\\big)\\big]_{0jk }   \\frac{\\partial x^{\\bar 1}}{\\partial x^a}\\big|_{0jk }   \\delta_{i0 }   \\nonumber\\\\ { } - & \\frac{1}{w_n}\\big[\\sqrt{\\gamma}\\big(f^{a*}-f^a\\big)\\big]_{ink }   \\frac{\\partial x^{\\bar 2}}{\\partial x^a}\\big|_{ink }   \\delta_{jn } + \\frac{1}{w_0}\\big[\\sqrt{\\gamma}\\big(f^{a*}-f^a\\big)\\big]_{i0k }   \\frac{\\partial x^{\\bar 2}}{\\partial x^a}\\big|_{i0k }   \\delta_{j0}. \\label{eq : bdy}\\end{aligned}\\ ] ] note the symmetry between the jacobian matrix elements that appear on the left - hand side of eq .",
    "( [ eq:411 ] ) and in the boundary flux terms eq .",
    "( [ eq : bdy ] ) , reflecting the essence of gauss s theorem .      the weak form of the equations follows from using eq .",
    "( [ eq:4 ] ) instead of eq .",
    "( [ eq:5 ] ) .",
    "the boundary flux now contains only @xmath41 instead of @xmath104 , while the volume term is now @xmath105 the derivative of the basis function in eq .",
    "( [ eq : weak1 ] ) is @xmath106 and so @xmath107    now evaluate the volume term explicitly using gaussian quadrature . equation ( [ eq : weak1 ] ) gives @xmath108 the term corresponding to @xmath109 is @xmath110 we get similar terms for @xmath111 and @xmath112 . dividing through by @xmath98",
    "gives a volume term that replaces the term in square brackets in eq .",
    "( [ eq:411 ] ) : @xmath113 , \\label{eq : weak4}\\end{aligned}\\ ] ] where @xmath114 is the differentiation matrix for the weak form : @xmath115",
    "in the above formulation of dg , we integrated the flux - conservative equations against the test functions @xmath116 and then evaluated the integrals by transforming to the reference grid @xmath117 . instead of",
    "this `` integrate then transform '' approach , we can transform first , then integrate . analytically , this is completely equivalent , but this is not necessarily so in the discrete case .    transforming eq .",
    "( [ eq : cons4 ] ) gives @xmath118 this form follows immediately by noting that eq .",
    "( [ eq : cons4 ] ) comes directly from the coordinate - independent expression ( [ eq : cons ] ) .",
    "now since the transformation eq .",
    "( [ eq:12 ] ) is independent of @xmath119 , we can consider just the spatial 3-vector properties of the transformation and leave the time components of 4-vectors unchanged : @xmath120 , @xmath121 .",
    "is the @xmath122-component of the momentum density , we leave the @xmath122 index untransformed , and @xmath7 remains the momentum component in the original frame . ]",
    "the determinant of the metric transforms according to eq .",
    "( [ eq:209 ] ) , and so eq .  ( [ eq:500 ] ) becomes @xmath123 where @xmath124 integrating eq .",
    "( [ eq:501 ] ) against the basis functions in the reference frame gives @xmath125 \\phi_i(\\xbar)\\,d^3\\xbar=0 .",
    "\\label{eq:503}\\ ] ] this equation is equivalent to eq .",
    "( [ eq:3 ] ) provided @xmath126 as we see from eq .",
    "( [ eq:502 ] ) . equation ( [ eq:504 ] )",
    "is in fact a set of identities that follows from symmetry properties of the jacobian matrix and is called the _",
    "metric identities_. for completeness , we give a derivation of eq .",
    "( [ eq:504 ] ) in [ app : identities ] . from that derivation , it is clear that the metric @xmath14 really has nothing to do with the identities .",
    "rather , in the special case that the original metric is flat space in euclidean form , so that @xmath127 , then eq .  ( [ eq:208 ] ) shows that the transformed metric @xmath128 is given by elements of the jacobian matrix , which is the origin of the name .    now consider evaluating eq .",
    "( [ eq:503 ] ) by gaussian quadrature .",
    "the first term gives eq .",
    "( [ eq:402 ] ) again , with a similar term for the third term . for the second term",
    ", we carry out the standard manipulations that led to eqs .",
    "( [ eq:4 ] ) and ( [ eq:5 ] ) to get @xmath129 -\\int j\\sqrt{\\gamma}f^{\\bar a } \\partial_{\\bar a}\\phi_i(\\xbar )    \\,d^3\\xbar , & \\text{weak form}. \\end{cases } \\label{eq:505}\\ ] ] the boundary term is @xmath130 which is the same as eq .",
    "( [ eq:409 ] ) since @xmath131 is a scalar .",
    "( note that @xmath39 is also an invariant . )",
    "evaluating the strong form of the volume term ( [ eq:505 ] ) gives @xmath132 the term corresponding to @xmath109 is @xmath133 with similar terms for @xmath111 and @xmath112 .",
    "dividing through by @xmath98 gives the volume term that replaces the term in square brackets in eq .",
    "( [ eq:411 ] ) : @xmath134 . \\label{eq:509}\\ ] ] in comparing eq .",
    "( [ eq:509 ] ) with eq .",
    "( [ eq:411 ] ) , note that the term @xmath135 is present in the definition of @xmath136 .",
    "the key result is that this expression is different from the integrate - then - transform result in that the @xmath137 term is now being operated on by @xmath138 rather than being outside this operator .",
    "similarly , evaluating the weak form of the volume term ( [ eq:505 ] ) gives @xmath139 the term corresponding to @xmath109 is @xmath140 this is identical to eq .",
    "( [ eq : weak5 ] ) , so in the weak form integrate - then - transform gives the same result as transform - then - integrate .",
    "so far , we have shown that the weak form of the equations is the same whether we integrate first or transform first",
    ". however , the strong forms are different from each other and appear different from the weak forms .",
    "we now show that the strong form is algebraically identical to the weak form for transform - then - integrate .",
    "this means that in a numerical code it would differ only by roundoff and perhaps in efficiency .",
    "the easiest way to see the equivalence is to use the following identity for gauss - legendre - lobatto differentiation matrices : @xmath141 this identity is derived in [ app : derivmat ] .",
    "the identity allows us to convert weak differentiation matrices into strong and vice versa , and it shows that the weak form ( [ eq : weak4 ] ) is identical to the strong form ( [ eq:509 ] ) plus the boundary terms necessary to change @xmath41 into @xmath104 .    for the case of flat space , the equivalence between the strong and weak forms of the equations for transform - then - integrate has previously been shown by a different method in @xcite .",
    "to summarize :    * the strong form of the equations gives rise to two computationally distinct forms , corresponding to the integrate - then - transform and transform - then - integrate approaches .",
    "the first form is given by eqs .",
    "( [ eq:411 ] ) and ( [ eq : bdy ] ) .",
    "the second form is given by eq .",
    "( [ eq:509 ] ) . *",
    "the weak form of the equations appears also to come in two forms .",
    "however , both approaches lead to eq .",
    "( [ eq : weak4 ] ) . *",
    "the weak form is algebraically equivalent to the second strong form ( [ eq:509 ] ) .",
    "so in practice only the two strong forms need be considered .",
    "the transform - then - integrate strong form ( [ eq:509 ] ) , or the equivalent weak form ( [ eq : weak4 ] ) , is the formulation that has generally been used previously for hexadedral meshes , with @xmath142 because of flat space and with the factor @xmath143 not divided out but kept with the variable @xmath7 in the time derivative ( see , e.g. , the textbook @xcite . )",
    "as we will see in the numerical experiments below , the alternative form ( [ eq:411 ] ) may offer advantages in some cases .    note",
    "that even if the metric identities are satisfied discretely , the two strong forms of the algorithm are not equivalent .",
    "the reason is that the derivative matrix does not in general satisfy the product rule for derivatives .",
    "while the matrix gives the exact derivative for a polynomial of degree @xmath95 , a product is a polynomial of degree @xmath144 .",
    "note also that if we set @xmath145constant in eq .",
    "( [ eq:509 ] ) , then the time derivative will vanish if the metric identities are satisfied discretely .",
    "( here we assume that the boundary conditions do not spoil this statement . )",
    "this fact is the basis for the claim that satisfying the metric identities discretely is a necessary condition for `` free - stream preservation , '' or the requirement that a uniform flow remain uniform for all time .",
    "however , for the alternative form ( [ eq:411 ] ) , the time derivative vanishes when @xmath145constant without any requirement on the metric identities .    finally , note that when the mapping from the physical frame to the reference frame is linear , as in the common case of a cartesian grid with elements simply translated in @xmath146 , @xmath147 , and @xmath148 , the elements of the jacobian matrix are constant and the two computational forms discussed here are the same .",
    "another special case where there is only one distinct formulation is in one dimension .",
    "the reason is that the jacobian determinant and the jacobian matrix are identical in this case .",
    "the two most widely used formulations of einstein s equations for numerical work are the generalized harmonic equations in first - order form @xcite and the bssn formulation @xcite .",
    "neither of these is in conservation form .",
    "however , since these formulations of einstein s equations do not lead to shocks in the gravitational field variables , it is not clear that there is any advantage in trying to find flux - conservative forms .",
    "accordingly , we need to develop a dg algorithm for hyperbolic equations of the form @xmath149 where @xmath150 and @xmath7 are sufficiently smooth",
    ". can be discontinuous the algorithm becomes much more complicated and is beyond the scope of this paper .",
    "] again , everything in this section goes through if ( [ eqq:1 ] ) is a system of equations , with @xmath151 a set of matrices multiplying the vector @xmath7 .",
    "get the dg equations by integrating eq .",
    "( [ eqq:1 ] ) with the basis functions over proper volume ) . when using tensor product basis functions , the final expression ( [ eqq:411 ] ) turns out to be unchanged . ] : @xmath152 transform the spatial derivative term in the usual way :",
    "@xmath153 n_a\\phi_i\\,d^2\\sigma + \\int a^a \\partial_a u\\,\\phi_i\\sqrt{\\gamma}\\,d^3x .",
    "\\label{eqq:5}\\end{aligned}\\ ] ] as expected , the quantity @xmath154 plays the role of the flux . using the strong form ( [ eqq:5 ] ) and carrying out the expansion in basis functions as before , we find the equation analogous to eq .",
    "( [ eq:10c ] ) : @xmath155 here @xmath156n_a$ ] is the boundary flux for the strong form of the equations .      carrying out the integrals in ( [ eqq:10c ] ) by gauss - legendre - lobatto quadrature as before , we get the equations of motion @xmath157-s_{ijk}\\nonumber\\\\ = - & \\frac{1}{w_n}\\big[\\big(a^{a}u\\big)^*-a^a u\\big]_{ijn }   \\frac{\\partial x^{\\bar 3}}{\\partial x^a}\\big|_{ijn }   \\delta_{kn } + \\frac{1}{w_0}\\big[\\big(a^{a}u\\big)^*-a^a u\\big]_{ij0 }   \\frac{\\partial x^{\\bar 3}}{\\partial x^a}\\big|_{ij0 }   \\delta_{k0 }   \\nonumber\\\\ { } - & \\frac{1}{w_n}\\big[\\big(a^{a}u\\big)^*-a^a u\\big]_{njk }   \\frac{\\partial x^{\\bar 1}}{\\partial x^a}\\big|_{njk }   \\delta_{in } + \\frac{1}{w_0}\\big[\\big(a^{a}u\\big)^*-a^a u\\big]_{0jk }   \\frac{\\partial x^{\\bar 1}}{\\partial x^a}\\big|_{0jk }   \\delta_{i0 }   \\nonumber\\\\ { } - & \\frac{1}{w_n}\\big[\\big(a^{a}u\\big)^*-a^a u\\big]_{ink }   \\frac{\\partial x^{\\bar 2}}{\\partial x^a}\\big|_{ink }   \\delta_{jn } + \\frac{1}{w_0}\\big[\\big(a^{a}u\\big)^*-a^a u\\big]_{i0k }   \\frac{\\partial x^{\\bar 2}}{\\partial x^a}\\big|_{i0k }   \\delta_{j0}. \\label{eqq:411}\\end{aligned}\\ ] ]      to get the weak form for the non - conservative equations , we have to evaluate the volume term on the right - hand side of [ eqq:4 ] ) : @xmath158\\,d^3 x\\nonumber\\\\ & = -\\sum_{pqr } u_{pqr }    a^a_{ijk}\\sqrt{\\gamma_{ijk } }    \\int \\phi_{pqr}(\\xbf)\\partial_a\\phi_{ijk}(\\xbf)\\,d^3 x,\\end{aligned}\\ ] ] where we have used @xmath159 .",
    "proceeding now as for getting eqs .",
    "( [ eq : weak3 ] ) and ( [ eq : weak5 ] ) , we find that the second term on the left - hand side of eq .",
    "( [ eqq:411 ] ) is replaced by @xmath160 , \\label{eq : nonconsweak}\\ ] ] where @xmath161 was defined in ( [ eq : weak_deriv ] ) . in the boundary flux ,",
    "the term @xmath162 becomes just @xmath163 .",
    "using the identity ( [ eq : derivmat ] ) , we can convert eq .",
    "( [ eq : nonconsweak ] ) to the equivalent strong form simply by replacing @xmath164 by @xmath165 and changing the sign : @xmath166 .",
    "\\label{eq : nonconsalt}\\ ] ] when using this form , the boundary flux is the same as in eq .",
    "( [ eqq:411 ] ) .",
    "we see that the alternative strong form ( [ eq : nonconsalt ] ) is different from the form given in ( [ eqq:411 ] ) .",
    "so as in the conservative case , there are two inequivalent discrete formulations for the non - conservative case .    note that in the non - conservative case , we learn nothing new by transforming first and then integrating .",
    "the reason is that @xmath167 , without any jacobian matrices acted on by the differentiation operator .",
    "there are some issues that need to be clarified in computing numerical fluxes when one is working in curved spacetime ( or even just in curvilinear coordinates ) .",
    "we will illustrate the issues with a smooth problem , but our conclusions also apply for fluxes that can handle discontinuities .    at a boundary ,",
    "let @xmath168 denote the values of the solution in the element itself , and let @xmath169 denote the boundary values in the neighboring element .",
    "the aim is to construct the numerical flux using @xmath168 and @xmath169 .",
    "a key ingredient in such a recipe is the characteristic decomposition of the variables . for eq .",
    "( [ eq : cons4 ] ) , in regions away from discontinuities , we can rewrite the equation in the non - conservative form ( [ eqq:1 ] ) by defining @xmath170 to do this , we absorb the derivatives of @xmath25 into a redefined source term @xmath9 . for a system of equations",
    ", @xmath151 will be a square matrix . to find the characteristic decomposition with respect to some normal vector @xmath40 , we diagonalize @xmath171 here",
    "@xmath172 is a diagonal matrix of the eigenvalues of @xmath173 , the characteristic speeds , and @xmath174 is a matrix whose columns are the corresponding eigenvectors .",
    "then the characteristic variables are given by the transformation @xmath175 .",
    "( the existence of this decomposition is essentially the definition of hyperbolicity . )",
    "recall that for smooth problems the numerical flux is generally evaluated by upwinding .",
    "this means that we write @xmath176 , where @xmath177 contains the positive elements of @xmath172 and @xmath178 the negative elements .",
    "the positive speeds correspond to variables propagating in the direction of @xmath40 , that is , leaving the element .",
    "so they are associated with characteristic variables at the boundary but inside the element , that is , @xmath179 .",
    "conversely , the negative entries @xmath178 correspond to variables propagating in the direction @xmath180 , that is , entering the element .",
    "so they are associated with variables outside the element , @xmath181 .",
    "thus we write @xmath182 equation ( [ eq:11c ] ) is the upwinding numerical flux .",
    "now the question arises : which normal vector should we use in eq .",
    "( [ eq:11b ] ) ? obviously , from the derivation of the dg algorithm where we used gauss s theorem to get the boundary flux term , the direction of the normal should be that of the normal to the reference element .",
    "but what about the normalization ?",
    "the standard recipe is to use the unit normal , which in a general metric means @xmath183 .",
    "we will see that this leads to unnecessary complications .",
    "note that changing the normalization of @xmath40 in eq .",
    "( [ eq:11b ] ) will scale the characteristic speeds in @xmath172 by the same factor .",
    "the normalization of the eigenvectors , by contrast , is arbitrary , since @xmath174 always appears together with @xmath184 in a flux prescription . using the unit normal follows from gauss s theorem and leads to the flux prescription in eq .",
    "( [ eq:411 ] ) , with geometric factors like @xmath185 , @xmath25 , and @xmath186 appearing .",
    "however , as shown in eq .",
    "( [ eq:412 ] ) , using the unnormalized normal vector @xmath187 removes _ all _ the extra geometric factors .",
    "basically , the same factor that normalizes the normal vector gets undone in the flux prescription .",
    "the reason for this is explained in [ app : gauss ] .",
    "the reader may be concerned that many characteristic decompositions involve _ products _ of normal vectors .",
    "these will not scale linearly with a rescaling of the normal vector .",
    "how can everything work out correctly ?",
    "the answer is surprising .",
    "we illustrate with the example of a scalar wave propagating in a given background metric .",
    "the scalar wave equation is @xmath188 to write this in first - order form , define variables @xmath189 and @xmath190 to replace the spatial and time derivatives of @xmath191 as follows : @xmath192 then eq .  ( [ eq : s1 ] ) can be written in the form ( [ eq : cons4 ] ) with @xmath193 we have not bothered to write down the source terms @xmath9 since they are not important for determining the numerical flux .",
    "the next step is the characteristic decomposition . using @xmath8 and @xmath7 from [ eq : s3 ] ) , we determine the matrix @xmath151 from eq .",
    "( [ eq : f1 ] ) .",
    "then for some normal vector @xmath40 ( not necessarily a unit normal ) , we form the quantity @xmath173 .",
    "the result is @xmath194 where @xmath195 .",
    "next we compute the eigenvalues and eigenvectors of this matrix to form the matrices @xmath172 and @xmath174 of eq .",
    "( [ eq:11b ] ) .",
    "we find @xmath196 where @xmath197 is the magnitude of the normal vector : @xmath198 .",
    "( in a euclidean metric , @xmath199 . ) with a unit normal in flat spacetime , so that @xmath16 , @xmath200 , we see that the last two eigenvalues correspond to characteristic speeds equal to @xmath201 ( the speed of light ) .",
    "there are also three zero - speed modes that acquire nonzero speeds when @xmath202 .",
    "the degeneracy of these three modes means that the corresponding eigenvectors are not unique , but this makes no difference since @xmath174 and @xmath184 always appear together in the flux formula .",
    "carrying out the computation in eq .",
    "( [ eq:11c ] ) gives @xmath203\\\\[3pt ] -\\beta^n\\phi_b^-+\\dfrac{n_b}{2n^2 } \\big\\{(n\\alpha+\\beta^n)\\big[n^a(\\phi_a^--\\phi_a^+ ) + n\\pi^+\\big]+(n\\alpha-\\beta^n)n\\pi^-\\big\\ } \\end{bmatrix}. \\label{eq : num_flux}\\ ] ] here for definiteness we have assumed @xmath204 ; otherwise , we interchange plus and minus variables for any term proportional to @xmath205 . now consider the scaling of the flux terms with the normalization of @xmath40 .",
    "for example , the last term in the middle line is proportional to @xmath206 .",
    "the factor @xmath207 is the unit normal vector , so the overall scaling is with only a single power of the scale of the normal vector .",
    "this is true for every term in the flux . _ even though we used an unnormalized normal vector , it gets automatically normalized `` inside '' the flux .",
    "_ thus the answer to the question of what normal vector to use in the characteristic decomposition is that it does nt matter as long as its direction is correct .",
    "it is fine to use a unit normal if you want to .",
    "however , the dg algorithm simplifies if one uses the `` external '' normal vector that gives the overall scaling of the flux to be the quantity @xmath187 for the surface @xmath208constant .",
    "although we have demonstrated the automatic normalization of `` internal '' normal vectors for the scalar wave equation , it seems to be a general property of hyperbolic systems , and least in all the cases we have examined .",
    "many applications , both in non - relativistic terrestrial fluids and in relativistic astrophysics , can take advantage of a moving computational mesh .",
    "examples include those with moving boundaries or interfaces , but even with fixed boundaries one can expect better accuracy if the grid absorbs some of the fluid motion . in the case of non - relativistic conservation equations ,",
    "the corresponding methods are called ale methods ( arbitrary lagrangian - eulerian ) , which are extremely popular ( see , e.g. , @xcite for a review ) . for evolutions of einstein s equations with spectral methods ,",
    "a moving frame was found to be necessary @xcite . in this case , the reason is that the interiors of black holes contain singularities .",
    "however , since black hole interiors are causally disconnected from the exterior , they can be excised from the computational domain .",
    "since spectral methods use all the grid points in a subdomain , such excision causes a problem if the black holes are moving and causing the excision boundary to move through the domain .",
    "accordingly , one uses a time - dependent map between the `` inertial frame '' in which the black holes move and the computational grid in which the holes remain fixed .",
    "this `` dual - frame '' method has proved very successful ( see , e.g. , @xcite ) .    for dg methods ,",
    "we expect to require dual frames for the same reasons that we require them for spectral methods . in this section ,",
    "we show that dual frames can be implemented in relativity exactly as ale is implemented in the non - relativistic case .",
    "in fact , we show that the usual ale algorithm can be derived in a few lines using 4-d vector transformations .",
    "this is in contrast to the standard derivations , e.g. , ref .  @xcite of 1985 , where the result is equation number 121 of the derivation .",
    "even a streamlined modern derivation @xcite still takes 2 full journal pages . besides simplicity",
    ", another reason not to follow the standard ale derivation here is that it starts with the euclidean metric of flat space , not a general curved metric .",
    "the derivation starts with the conservation equation ( [ eq : cons ] ) written in the form ( [ eq : cons2 ] ) ( everything in this section goes through if we include a source term @xmath9 on the right - hand side ) : @xmath209 here we are in the `` inertial '' or `` physical '' frame @xmath210 .",
    "now make a time - dependent spatial coordinate transformation to the grid frame : @xmath211 we use the carets for quantities in the grid frame to distinguish the transformation from the time - independent transformation to the reference frame used previously .",
    "( the caret does not imply that the grid frame is orthonormal . )",
    "it is convenient to distinguish between @xmath119 and @xmath212 even though their values are identical .",
    "when taking partial derivatives , those with respect to @xmath119 keep @xmath213 constant , whereas those with respect to @xmath212 keep @xmath214 constant .",
    "the jacobian matrix of the transformation is @xmath215 \\dfrac{\\partial x^ { a}}{\\partial { \\hat t } } &    \\dfrac{\\partial x^ { a}}{\\partial x^{\\hat a } } \\end{bmatrix } = \\begin{bmatrix } \\vphantom{\\dfrac{\\partial   t}{\\partial { \\hat t } } } 1 & 0 \\\\[9pt ] \\vphantom{\\dfrac{\\partial x^ { a}}{\\partial { \\hat t } } } v_g^ { a } &    \\dfrac{\\partial x^ { a}}{\\partial x^{\\hat a } } \\end{bmatrix } , \\label{eq : partition}\\ ] ] where we have defined the grid velocity components as @xmath216 the inverse transformation is @xmath217 \\dfrac{\\partial x^{\\hat a}}{\\partial   t } &    \\dfrac{\\partial x^{\\hat a}}{\\partial x^ { a } } \\end{bmatrix } = \\begin{bmatrix } \\vphantom{\\dfrac{\\partial \\hat t}{\\partial { t } } } 1 & \\vphantom{\\dfrac{\\partial \\hat t}{\\partial x^{a } } } 0\\\\[9pt ]   -v_g^{\\hat a } & \\big(\\dfrac{\\partial x^ { a}}{\\partial x^{\\hat a}}\\big)^{-1 } \\end{bmatrix}. \\label{eq : inversej}\\ ] ] to get the second equality in ( [ eq : inversej ] ) from the first , we used the formula for the inverse of a partitioned matrix like ( [ eq : partition ] ) ( see , e.g. ,  2.7.4 of ref .",
    "here we have defined the components of the grid velocity in the grid frame just by the spatial part of the transformation : @xmath218 the first equality in ( [ eq : gridvel ] ) is from the formula for the partitioned matrix inverse .    now consider the conservation equation ( [ eq : bar ] ) in the grid frame .",
    "since the equation is covariant , that is @xmath219 , we get immediately @xmath220 here the quantity @xmath221 can be calculated from the 4-d equivalent of ( [ eq:209 ] ) : @xmath222 where from eq .",
    "( [ eq : partition ] ) @xmath223 .    to proceed , replace the grid components @xmath224 by their inertial components : @xmath225 so eqn .  ( [ eq : grid ] ) gives the final form @xmath226   = 0 .",
    "\\label{eq : final}\\ ] ] this equation is again in flux - conservative form .",
    "we can use it with the vector components in the inertial frame as written , or in the grid frame . in that case ,",
    "@xmath227 , but we can regard @xmath228 as being a purely spatial vector given by @xmath229 rather than as a piece of a 4-vector with transformation given by eqn .",
    "( [ eq : trans ] ) .",
    "we can use eq .",
    "( [ eq : final ] ) in the dg algorithm in several ways .",
    "one way is to introduce another time - independent map from the grid frame ( hatted ) to the reference frame ( barred ) and follow the previous treatment .",
    "alternatively , we can choose the mapping to the grid frame to go all the way to the reference frame and work with the equation directly in that frame ( `` transform - then - integrate , '' cf .",
    " [ sec : transform ] ) .",
    "while keeping conservation form with a moving mesh is important for equations that are fundamentally conservation laws , for non - conservative systems like ( [ eqq:1 ] ) one simply leaves the extra terms outside the derivative operators since there is no simple way to remove their effects completely .      in non - relativistic fluid dynamics , mappings like ( [ eq : mapping ] ) define ale methods . as mentioned earlier ,",
    "the derivations of the ale equations in the literature are quite complicated @xcite , with many papers just referring back to the original derivations .",
    "these derivations start with eqn .",
    "( [ eq : bar ] ) with @xmath230 because the coordinates are cartesian . using the chain rule ,",
    "the equation becomes @xmath231 to get an equation in conservation form , one rewrites the second and third terms with everything inside the @xmath232 minus some extra terms .",
    "then one shows that the extra terms can all be absorbed by putting @xmath233 inside the @xmath234 .",
    "the manipulations involve complicated maneuvers with derivatives of the jacobian matrix .",
    "the final result is exactly eqn .",
    "( [ eq : final ] ) . in this approach ,",
    "the fact that the final result is again in conservative form is a surprise .",
    "the miraculous cancellations that occur involve the metric identities [ eq:504 ] ) and the _ geometric conservation law _",
    "( see [ app : geom ] ) .",
    "the covariant derivation , by contrast , just uses straightforward properties of the divergence operator and the fact that @xmath235 .",
    "it does not assume that the 4-d metric is that of relativity .",
    "all we need to assume is that the fundamental equation is a 4-divergence with respect to some metric .",
    "then , since @xmath236 , the final equation involves tensor transformations that are purely spatial , using only the spatial part of the jacobian matrix . in newtonian physics ,",
    "physical quantities are required to be tensors only under such spatial transformations , so the final result is valid , with no mystery as to why the transformed equation should be a conservation law .",
    "the algorithms developed above are intended to be used for fully relativistic 3-dimensional problems . here ,",
    "we investigate them for a simple test problem to highlight some of their properties .",
    "we have implemented the algorithms for the scalar wave equation of  [ subsec : scalar ] in flat spacetime , that is , with @xmath16 , @xmath17 , and @xmath18 .",
    "the domain is a 2-dimensional disk divided into five elements as shown in figure  [ fig : disk ] .",
    "such a domain was used in chapter 8 of ref .",
    "@xcite for a sightly different test problem .",
    "we study two different ways of mapping the elements with curved boundaries to the reference square .",
    "first , following chapter 6 of ref .",
    "@xcite , we use an isoparametric map with transfinite blending . in this case , the map is constructed with polynomials of degree @xmath95 and since we are in two dimensions , the discrete version of the metric identities holds identically without any special precautions @xcite .",
    "the second map is analytic and depends on four parameters .",
    "the quantities @xmath237 and @xmath238 give the maximum values of the @xmath146 locations of the inner and outer boundaries .",
    "for the rightmost element in figure  [ fig : disk ] , these are 0.7 and 2 .",
    "the quantities @xmath239 and @xmath240 describe the curvature of the inner and outer boundaries of the wedge , respectively . if @xmath241 , the inner edge is flat , whereas if @xmath242 , it is circular .",
    "similarly , if @xmath243 , the outer edge is flat , whereas @xmath244 corresponds to a circular outer edge .",
    "using these parameters , we define @xmath245 then the map is given by @xmath246 note that in these expressions @xmath247 $ ] .",
    "a simple linear map puts @xmath248 in the standard range @xmath70 $ ] .",
    "permutations of @xmath146 and @xmath147 and sign changes allow all four curvilinear elements to be generated with the above map .    for one set of experiments with this second map ,",
    "we compute the jacobian of the transformation analytically . in this case , the discrete metric identities are not satisfied . to see how important these identities are",
    ", in a second set of experiments we evaluate the jacobian by applying the differentiation matrix ( [ eq:405 ] ) directly to the @xmath146 and @xmath147 values at the collocation points .",
    "since this corresponds to differentiating the interpolating polynomial of degree @xmath95 , the result is also a polynomial and in two dimensions the discrete metric identities are satisfied @xcite .",
    "the test case is a wave propagating at @xmath249 to the coordinate axes , with analytic solution @xmath250 here @xmath251 and @xmath252 .",
    "the numerical flux is computed using eq .",
    "( [ eq : num_flux ] ) . where the boundary conditions require solution values outside the computational domain , these are provided by the analytic solution .",
    "we integrate from @xmath253 to @xmath254 with a fixed timestep @xmath255 using a low - storage third - order runge - kutta method ( case 7 in @xcite ) .",
    "all elements have the same spatial resolution , which we vary from @xmath256 to @xmath257 . for these choices ,",
    "the timestepping error is negligible compared with the error from the spatial discretization .",
    "so altogether there are 6 experiments :    1 .",
    "integrate first ( eqs .",
    "[ eq:411 ] and [ eq : bdy ] ) with isoparametric map .",
    "2 .   transform first ( eq .  [ eq:509 ] ) with isoparametric map .",
    "3 .   integrate first with analytic map and analytic jacobian .",
    "4 .   transform first with analytic map and analytic jacobian .",
    "5 .   integrate first with analytic map and numerical jacobian satisfying metric identities .",
    "transform first with analytic map and numerical jacobian satisfying metric identities .",
    "the results are shown in figure  [ fig : results ] .",
    "we find that for the analytic map used here , the results when the metric identities are satisfied are indistinguishable on the plot from the results with the analytic jacobian .",
    "accordingly , experiments ( 5 ) and ( 6 ) are not shown in the figure . for the analytic map",
    ", it appears that the grid distortion is small enough that the metric identity error is less than the truncation error .",
    "we explicitly computed the discrete metric identities for these cases to verify that , although they do not vanish , their magnitude is smaller than the truncation error .",
    "the first thing we note from figure  [ fig : results ] is the expected exponential convergence of the error with resolution for all the implementations .",
    "cases ( 1 ) and ( 2 ) , which use the isoparametric map , have smaller errors for the same resolution than the corresponding cases ( 3 ) and ( 4 ) that use the analytic map .",
    "as explained in the previous paragraph , this is _ not _ because the isoparametric map satisfies the metric identities .",
    "rather , the isoparametric map introduces less grid distortion for this example . we can quantify this very roughly by examining the magnitude of the jacobian , which is closer to unity by about a factor of 2 for the isoparametric map than the analytic map .",
    "the most interesting result from these experiments is that , independent of the mapping , the integrate - then - transform formulation performs somewhat better than the transform - then - integrate version .",
    "the error for a given @xmath95 is consistently smaller for cases ( 1 ) and ( 3 ) compared with ( 2 ) and ( 4 ) .",
    "it should be noted , however , that for this simple example , the computation time is dominated by the matrix - vector multiplies in computing the derivatives . for cases ( 1 ) and ( 3 ) , each derivative matrix has to operate on each component of the flux vector , whereas for cases ( 2 ) and ( 4 ) each derivative matrix operates on only a single component of the flux vector .",
    "accordingly , the computation time is twice as long ( in two dimensions ) for cases ( 1 ) and ( 3 ) than for cases ( 2 ) and ( 4 ) .",
    "realistic astrophysics applications are likely to be dominated by complicated equation of state calculations or source terms , so it is not clear that this property will be important in practice . since the transform",
    "- then - integrate algorithm is widely used , whether integrate - then - transform is better just for this setup or whether it is better in general needs to be examined in future work",
    ".    note that for this example , integrating the scalar wave equation in non - conservative form gives identical results to the conservative form studied in the experiments .",
    "this is because for linear equations with constant coefficients the matrix @xmath258 is constant and so the two formulations are essentially identical .",
    "we have not investigated the effect of enforcing the geometric conservation law in the case where one uses a time - dependent map .",
    "there are various strategies for doing so .",
    "these strategies , and the accuracy of the resulting algorithms , are discussed for example in ref .",
    "we have shown that because of the underlying covariance of the equations , the dg algorithm can easily be formulated in general relativity . the formulation turns out to be very similar to that for curvilinear coordinates in flat spacetime , which leads to several insights that are applicable in that arena as well .",
    "we find that in general there are two distinct strong formulations for conservation laws .",
    "these correspond to integrate - then - transform , eqs .",
    "( [ eq:411 ] ) and ( [ eq : bdy ] ) , and transform - then - integrate , eq .",
    "( [ eq:509 ] ) .",
    "both weak forms are equivalent to this second strong form for the tensor - product basis functions we use .",
    "in one spatial dimension , or for the common case of a cartesian grid with elements simply translated in @xmath146 , @xmath147 , and @xmath148 , the two strong formulations are equivalent .",
    "most applications in curvilinear coordinates in flat space have used the formulation ( [ eq:509 ] ) . however , in the numerical experiments described in  [ sec : expt ] , the other formulation was more efficient .",
    "whether this is true or not in general remains to be seen .    for hyperbolic equations in non - conservation form ,",
    "there are also two inequivalent formulations , eqs .",
    "( [ eqq:411 ] ) and ( [ eq : nonconsalt ] ) .",
    "these formulations are important for solving einstein s equations , which generally are not written in conservation form .",
    "we have given a careful discussion of how numerical fluxes should be handled .",
    "in particular , we have shown that the normal vector that the boundary flux vector is projected along does not need to be the unit normal  the normalization factor cancels out of the algorithm .",
    "we call this normal vector the `` outside '' normal vector .",
    "if a characteristic decomposition is used to construct the numerical flux vector , it is the _ unit _ normal that appears `` inside '' the flux .",
    "however , it is not necessary to explicitly normalize this vector either : any normal vector that is used in finding the characteristic decomposition gets automatically normalized `` inside '' the flux .",
    "we have shown that moving grids implemented with time - dependent mappings ( ale and dual - frame methods ) are easily handled in the relativistic treatment .",
    "we give a novel derivation of the ale method that uses general covariance to get the result in a few lines .",
    "in addition , the reason that the ale method preserves the conservation form of the equations is explained .",
    "we clarify several aspects of the metric identities .",
    "for example , we show that satisfying the metric identities discretely is a necessary condition for free - stream preservation only for one of the computational formulations of the dg algorithm and not the other .",
    "the numerical experiments in  [ sec : expt ] suggest that satisfying the metric identities is not necessarily a prerequisite for accurate simulations , but likely depends on the problem",
    ".    the formulation of the dg method in this paper will allow the algorithm to be applied to general problems in computational astrophysics that involve relativistic gravity .",
    "these methods hold great promise for achieving high accuracy and efficiency on current and upcoming supercomputer hardware",
    ". it will be interesting to see how well they perform in practice .",
    "i thank franois hbert for helpful discussions .",
    "i am grateful for the hospitality of tapir and the walter burke institute for theoretical physics at caltech where part of this work was carried out .",
    "this work was supported in part by nsf grants phy-1306125 and ast-1333129 at cornell university , and by a grant from the sherman fairchild foundation .",
    "the usual form of gauss s theorem for an arbitrary curved ( or curvilinear ) metric is @xmath259 this is a physically appealing result : the left - hand side is the divergence of a flux integrated over proper volume .",
    "the right - hand side is the total flux through the surface . in this form ,",
    "the result is manifestly independent of the coordinates .",
    "let s now spoil this elegant result .",
    "the covariant divergence in the integrand of eq .",
    "( [ eq:214 ] ) can be written as @xmath260 so , letting @xmath261 , an equivalent form of ( [ eq:214 ] ) is @xmath262 we see explicitly that gauss s theorem appears to depend on the metric in several places , for example , to define the unit normal @xmath40 and the invariant surface element @xmath39 .",
    "however , it turns out that this dependence is illusory , introduced originally by stokes who first developed the geometric form of the theorem . for our application , it is actually more convenient to revert to the primitive form of the theorem that uses only basic calculus and does not rely on the metric .",
    "start with one of the terms on the left - hand side of eq .",
    "( [ eq:201 ] ) : @xmath263 consider first the surface @xmath264 .",
    "choose intrinsic coordinates @xmath265 to parametrize this surface , so that on the surface @xmath266 extend the coordinates @xmath265 to cover the neighborhood of the surface by introducing a third coordinate @xmath267 such that the boundary is a level surface @xmath268 .",
    "the contribution to the integral ( [ eq:200a ] ) is @xmath269    an alternative form can be derived using some jacobian gymnastics : @xmath270 ( you can also derive eq .",
    "( [ eq:200d ] ) by noting that @xmath271 is an element of the inverse of the jacobian matrix .",
    "( [ eq:200d ] ) says that this element is given by the cofactor of @xmath272 divided by the determinant of the matrix . )",
    "substituting eq .",
    "( [ eq:200d ] ) in eq .",
    "( [ eq:200c ] ) gives @xmath273 summing up contributions like this from each segment of the boundary surface gives the simple form of gauss s theorem that is in effect being used in the main text , with the identification @xmath274 .",
    "the form ( [ eq:200c ] ) or ( [ eq:200d ] ) does not make use of a metric . we can start to see where the usual form of gauss s theorem comes from by noting that the normal to the surface @xmath268 is proportional to @xmath275 in the @xmath276 coordinates , and so @xmath277 is proportional to the component @xmath278 in the @xmath279 coordinates . but to write the result in terms of a true unit normal we need to introduce a metric . to do this , note that @xmath280 here @xmath281 is the completely antisymmetric permutation symbol and @xmath282 is the permutation tensor ( levi - civita tensor ) .",
    "the 1-form @xmath283 is defined from the parametrization of the surface , @xmath284 : @xmath285    define the surface element in the usual way : @xmath286 this requires only a notion of volume ( @xmath25 ) . with a full metric , however , it is equivalent to @xmath287 as we will verify below .",
    "the vector with components @xmath288 is the normal to the surface , here assumed to be @xmath268 , and @xmath92 is the determinant of the 2-dimensional metric induced on the surface by @xmath93 .",
    "first get an expression for the normal vector .",
    "let @xmath68 denote the coordinates @xmath276 .",
    "the unit normal to the surface @xmath268 has components @xmath290 where @xmath291 taking determinants of both sides of the transformation rule @xmath292 gives the transformation rule @xmath293 thus eq .  ( [ eq:206 ] ) becomes @xmath294 and so @xmath295    now we can verify eq .",
    "( [ eq:204 ] ) : @xmath296 which is the correct expression for the surface element .",
    "now return to eq .",
    "( [ eq:200c ] ) .",
    "equation ( [ eq:202 ] ) becomes @xmath297 so eq .  ( [ eq:200c ] )",
    "can be rewritten as @xmath298 a similar expression holds on the lower surface @xmath299 provided we interpret the normal vector as pointing in the outward direction .",
    "this is because the outward normal has components proportional to @xmath300 , but @xmath301 appears in the integrand of ( [ eq:200a ] ) with a compensating minus sign .",
    "similar arguments hold for the terms @xmath302 and @xmath303 analogous to ( [ eq:200a ] ) .",
    "the conclusion is that gauss s theorem in the form eq .",
    "( [ eq:201 ] ) holds in general .    to complete the proof of gauss s theorem",
    ", we would need to deal with concave surfaces ( above we implicitly assumed each boundary surface was convex ) and also surfaces with corners , where @xmath304 and @xmath305 can be on boundary segments parametrized by different pairs of @xmath306 , @xmath307 , and @xmath267 .",
    "both these complications can be handled by subdividing the volume into subvolumes , and the details are not important for our purposes .",
    "the metric identities ( [ eq:504 ] ) follow from properties of the jacobian matrix itself .",
    "first , an element of the inverse jacobian matrix @xmath308 is given by the cofactor of @xmath309 divided by the determinant @xmath186 .",
    "we can recover this result using some jacobian manipulations : if @xmath310 , @xmath122 , and @xmath311 are in cyclic order , then @xmath312 equivalently , @xmath313 we can rewrite this equation to build in the cyclic order requirement : @xmath314 the metric identity follows immediately from the expression ( [ eq : metric2 ] ) .",
    "for when we take its divergence with @xmath315 , the second derivative terms are symmetric in @xmath316 and @xmath317 or @xmath316 and @xmath318 , whereas @xmath319 is antisymmetric .",
    "note that in the general derivation given here , the elements of the jacobian matrix can not be interpreted as components of basis vectors in curvilinear coordinates .",
    "this is because we are not starting from a euclidean metric .",
    "equation ( [ eq : derivmat ] ) is an identity for gauss - legendre - lobatto derivative matrices that is useful in converting between the strong and weak forms of the dg equations , and is also at the root of discrete `` summation by parts . ''",
    "the relation is implicit in the second equation following eq .",
    "( 25 ) in ref .",
    "@xcite . here",
    "we demonstrate the identity explicitly .",
    "consider the integral on the reference element that defines the `` stiffness matrix , '' @xmath320 integrating by parts gives @xmath321 to get the last line , note that for the lobatto case , all the cardinal functions must vanish at @xmath322 except for @xmath323 and @xmath324 . now for @xmath325 grid points , the integrand in ( [ eq : stiff1 ] ) is a polynomial of degree @xmath326 , and so doing the integral by gauss - lobatto quadrature gives the exact result : @xmath327 substituting ( [ eq : stiff2 ] ) in ( [ eq : stiff ] ) gives the relation [ eq : derivmat ] ) .",
    "the geometric conservation law is an identity for the jacobian of a time - dependent spatial coordinate transformation like ( [ eq : mapping ] ) . from eq .",
    "( [ eq : partition ] ) , the jacobian is the determinant of the spatial jacobian matrix : @xmath328    to derive the identity , use the formula for the derivative of a determinant , @xmath329 using eq .",
    "( [ eq : gridveldefn ] ) and replacing the index @xmath122 by @xmath330 gives the geometric conservation law : @xmath331"
  ],
  "abstract_text": [
    "<S> the dg algorithm is a powerful method for solving pdes , especially for evolution equations in conservation form . since the algorithm involves integration over volume elements , it is not immediately obvious that it will generalize easily to arbitrary time - dependent curved spacetimes . </S>",
    "<S> we show how to formulate the algorithm in such spacetimes for applications in relativistic astrophysics . </S>",
    "<S> we also show how to formulate the algorithm for equations in non - conservative form , such as einstein s field equations themselves . </S>",
    "<S> we find two computationally distinct formulations in both cases , one of which has seldom been used before for flat space in curvilinear coordinates but which may be more efficient . </S>",
    "<S> we also give a new derivation of the ale algorithm ( arbitrary lagrangian - eulerian ) using 4-vector methods that is much simpler than the usual derivation and explains why the method preserves the conservation form of the equations . </S>",
    "<S> the various formulations are explored with some simple numerical experiments that also explore the effect of the metric identities on the results .    </S>",
    "<S> discontinuous galerkin , hydrodynamics , magnetohydrodynamics , einstein s equations , moving mesh , arbitrary lagrangian - eulerian ( ale),metric identities , geometric conservation law </S>"
  ]
}
{
  "article_text": [
    "evolutionary algorithms are capable of solving complicated optimization tasks in which an objective function @xmath0 shall be maximized .",
    "@xmath1 is an individual from the set @xmath2 of feasible solutions .",
    "infeasible solutions due to constraints may also be considered by reducing @xmath3 for each violated constraint .",
    "a population @xmath4 is a multi - set of individuals from @xmath2 which is maintained and updated as follows : one or more individuals are selected according to some selection strategy .",
    "in generation based eas , the selected individuals are recombined ( e.g.  crossover ) and mutated , and constitute the new population .",
    "we prefer the more incremental , steady - state population update , which selects ( and possibly deletes ) only one or two individuals from the current population and adds the newly recombined and mutated individuals to it .",
    "we are interested in finding a single individual of maximal objective value @xmath3 for difficult multi - modal and deceptive problems .",
    "the standard selection schemes ( abbreviated by std in the following ) , proportionate , truncation , ranking and tournament selection all favor individuals of higher fitness @xcite .",
    "this is also true for less common schemes , like boltzmann selection @xcite .",
    "the fitness function is identified with the objective function ( possibly after a monotone transformation ) . in",
    "linear proportionate selection the probability of selecting an individual depends linearly on its fitness @xcite . in truncation",
    "selection the @xmath5 fittest individuals are selected , usually with multiplicity @xmath6 to keep the population size fixed @xcite.(linear ) ranking selection orders the individuals according to their fitness . the selection probability is , then , a ( linear ) function of the rank @xcite . tournament selection @xcite , which selects the best @xmath7 out of @xmath8 individuals has primarily developed for steady - state eas , but can be adapted to generation based eas .",
    "all these selection schemes have the property ( and goal ! ) to increase the average fitness of a population , i.e.  to evolve the population toward higher fitness .",
    "the standard selection schemes std , together with mutation and recombination , evolve the population toward higher fitness .",
    "if the selection pressure is too high , the ea gets stuck in a local optimum , since the genetic diversity rapidly decreases . the suboptimal genetic material which might help in finding the global optimum",
    "is deleted too rapidly ( premature convergence ) . on the other hand",
    ", the selection pressure can not be chosen arbitrarily low if we want the ea to be effective . in difficult optimization problems , suitable population sizes , mutation and recombination rates , and selection parameters , which influence the selection intensity ,",
    "are usually not known beforehand .",
    "often , constant values are not sufficient at all @xcite .",
    "there are various suggestions to dynamically determine and adapt the parameters @xcite .",
    "other approaches to preserve genetic diversity are fitness sharing @xcite and crowding @xcite .",
    "they depend on the proper design of a neighborhood function based on the specific problem structure and/or coding .",
    "one approach which does not require a neighborhood function based on the genome is local mating @xcite , however it has been shown that rapid takeover can still occur for basic spatial topologies @xcite .",
    "another approach which has not been widely studied is preselection @xcite .",
    "we are interested in evolutionary algorithms which do not require special problem insight ( problem specific neighborhood function and/or coding ) and is able to effectively prevent population takeover . in this paper",
    "we introduce and analyze two potential approaches to this problem : the fitness uniform selection scheme ( fuss ) and the fitness uniform deletion scheme ( fuds ) .",
    "fuss is based on the insight that we are not primarily interested in a population converging to maximal fitness , but only in a single individual of maximal fitness .",
    "the scheme automatically creates a suitable selection pressure and preserves genetic diversity better than std . the proposed fitness uniform selection scheme fuss ( see also figure [ figsel ] ) is defined as follows : _ if the lowest / highest fitness values in the current population @xmath4 are @xmath9 we select a fitness value @xmath3 uniformly in the interval @xmath10 $ ] .",
    "then , the individual @xmath11 with fitness nearest to @xmath3 is selected and a copy is added to @xmath4 , possibly after mutation and recombination . _ we will see that fuss maintains genetic diversity better than std , since a distribution over the fitness values is used , unlike std , which all use a distribution over individuals .",
    "premature convergence is avoided in fuss by abandoning convergence at all .",
    "nevertheless there is a selection pressure in fuss toward higher fitness .",
    "the probability of selecting a specific individual is proportional to the distance to its nearest fitness neighbor . in a population with a high density of unfit and low density of fit individuals ,",
    "the fitter ones are effectively favored .",
    "we may also preserve diversity through deletion rather than through selection . by always deleting from those individuals which have very commonly occurring fitness values",
    "we achieve a population which is uniformly distributed across fitness values , like with fuss . because these deleted individuals are `` commonly occurring '' in some sense this should help preserve population diversity . under fuds",
    "the role of the selection scheme is to govern how actively different parts of the solution space are searched rather than to move the population as a whole toward higher fitness .",
    "thus , like with fuss , premature convergence is avoided by abandoning convergence as our goal .",
    "however as fuds is only a deletion scheme , the ea still requires a selection scheme which may require a selection intensity parameter to be set .",
    "thus we do not necessarily have a parameterless ea , as we do with fuss .",
    "nevertheless due to the impossibility of population collapse the performance is more robust than usual with respect to variation in selection intensity .",
    "thus fuds is at least a partial solution to the problem of having to correctly set a selection intensity parameter .",
    "this paper extends and supersedes the earlier results reported in the conference papers @xcite , @xcite and @xcite . among other things ,",
    "this paper : extends the previous theoretical analysis of fuss and gives the first theoretical analysis of fuds and of their performance when combined ; presents a new method of analysis called fitness tree analysis ; is the first set of experimental results which directly compares the two proposed schemes on the same problems with the same parameters , including when they are used together ; gives the first full analysis of population diversity measurements for fuss and in particular extends and corrects some of the earlier speculation about performance problems in some situations .",
    "the paper is structured as follows :    in _ section [ secsim ] _ we discuss the problems of local optima and population takeover @xcite in std , which could be lowered by restricting the number of _ similar _ individuals in a population .",
    "as we often do not have an appropriate functional similarity relation , we define a universal distance ( semi - metric ) @xmath12 based on the available fitness only , which will serve our needs .    motivated by the universal similarity relation @xmath13 and by the need to preserve genetic diversity , we define in _ section [ secfuss ] _ the fitness uniform selection scheme .",
    "we discuss under which circumstances fuss leads to an ( approximate ) fitness uniform population .",
    "further properties of fuss are discussed in _ section [ secprop ] _ , especially , how fuss creates selection pressure toward higher fitness and how it preserves diversity better than std .",
    "further topics are the equilibrium distribution , the transformation properties of fuss under linear and non - linear transformations of @xmath3 .",
    "another way to utilize the ability of the universal similarity relation @xmath13 to preserve diversity , is to use it to help target deletion .",
    "this gives us the fitness uniform _",
    "deletion _ scheme which we define in _ section [ secfuds]_. as this produces a population which is approximately uniformly distributed across fitness levels , like with fuss , many of the properties of fuss carry over to an ea using fuds .",
    "some of these properties are highlighted in _",
    "secpropfuds]_.    in _ section [ secex ] _ we theoretically demonstrate , by way of a simple optimization example , that an ea with fuss or fuds can optimize much faster than with std . we show that crossover can be effective in fuss , even when ineffective in std .",
    "furthermore , fuss , fuds and std are compared to random search with and without crossover .    in _ section [ sectree ] _ we develop a fitness tree model , which we believe to cover the essential features of fitness landscapes for difficult problems with many local optima .",
    "within this model we derive heuristic expressions for the optimization time of random walk , fuss , fuds and std .",
    "they are compared , and a worst case slowdown of fuss relative to std is obtained .    there is a possible additional slowdown when including recombination , as discussed in _ section [ seccross ] _ , which can be avoided by using a scale independent pair selection .",
    "it is a `` best '' compromise between unrestricted recombination and recombination of @xmath13-similar individuals only .",
    "it also has other interesting properties when used without crossover .    to simplify the discussion we have concentrated on the case of discrete , equi - spaced fitness values . in many practical problems",
    ", the fitness function is continuously valued .",
    "fuss and some of the discussion of the previous sections is generalized to the continuous case in _ section  [ seccont]_.    _ section  [ secjfuss ] _ begins our experimental analysis of fuss and fuds . in this section",
    "we give a detailed account of the ea software we have used for our experiments , including links to where the source code can be downloaded .",
    "_ section [ secex2 ] _ examines the empirical performance of fuss and fuds on the artificially constructed deceptive optimization problem described in section  [ secex ] .",
    "these results confirm the correctness of our theoretical analysis .    in _ section [ sectsp ] _ we test randomly generated traveling salesman problems .    in _ section [ secsetcover ] _ we examine the set covering problem , an np hard optimization problem which has many real world applications .    for our final test in _ section [ secsat ]",
    "_ we look at random cnf3 sat problems .",
    "these are also np hard optimization problems .",
    "_ section [ secconc ] _ contains a summary of our results and possible avenues for future research .",
    "proportionate , truncation , ranking and tournament are the standard ( std ) selection algorithms used in evolutionary optimization .",
    "they have the following property : if a local optimum @xmath14 has been found , the number of individuals with fitness @xmath15 tends to increase rapidly .",
    "assume a low mutation and recombination rate , or , for instance , truncation selection _",
    "after _ mutation and recombination .",
    "further , assume that it is very difficult to find an individual fitter than @xmath14",
    ". the population will then degenerate and will consist mostly of @xmath14 after a few rounds .",
    "this decreased diversity makes it even less likely that @xmath16 gets improved .",
    "the suboptimal genetic material which might help in finding the global optimum has been deleted too rapidly . on the other hand ,",
    "too high mutation and recombination rates convert the ea into an inefficient random search .",
    "sometimes it is possible to appropriately choose the mutation and recombination rate and population size by some insight into the nature of the problem .",
    "more often this is a trial and error process , or no single fixed rate works at all .    a naive fix of the problem is to artificially limit the number of identical individuals to a significant but small fraction @xmath17 .",
    "if the space of individuals @xmath2 is large , there could be many very similar ( but not identical ) individuals of , for instance , fitness @xmath16 .",
    "the ea can still converge to a population containing only this class of similar individuals , with all others becoming extinct . in order for the limitation approach to work , one has to restrict the number of _ similar _ individuals .",
    "significant contributions in this direction are fitness sharing @xcite and crowding @xcite .",
    "if the individuals are coded binary one might use the hamming distance as a similarity relation .",
    "this distance is consistent with a mutation operator which flips a few bits .",
    "it produces hamming - similar individuals , but recombination ( like crossover ) can produce very dissimilar individuals w.r.t .  this measure . in any case ,",
    "genotypic similarity relations , like the hamming distance , depend on the representation of the individuals as binary strings .",
    "individuals with very dissimilar genomes might actually be functionally ( phenotypically ) very similar .",
    "for instance , when most bits are unused ( like introns in genetic programming ) , they can be randomly disturbed without affecting the properties of the individual . for specific problems at hand , it might be possible to find suitable representation - independent functional similarity relations .",
    "on the other hand , in genetic programming , for instance , it is in general undecidable whether two individuals are functionally similar .",
    "here we want to take a different approach .",
    "we define the difference or distance between two individuals as d(i , j ) : = |f(i)-f(j)| .",
    "the distance is based solely on the fitness function , which is provided as part of the problem specification .",
    "it is independent of the coding / representation and other problem details , and of the optimization algorithm ( e.g.  the genetic mutation and recombination operators ) , and can trivially be computed from the fitness values .",
    "if we make the natural assumption that functionally similar individuals have similar fitness , they are also similar w.r.t .  the distance @xmath13 . on the other hand , individuals with very different coding , and even functionally dissimilar individuals may be @xmath13-similar , but we will see that this is acceptable .",
    "for instance , individuals from different local optima of equal height are @xmath13-similar .",
    "unlike fitness uniform optimization , diversity control methods like niching or crowding require a metric @xmath18 to be defined over the genome space . by looking at the relationship between @xmath18 and @xmath3",
    "we can relate these two types of diversity control : we say that a fitness function @xmath3 is _ smooth _ with respect to @xmath18 , if @xmath19 being small implies that @xmath20 is also small , that is , @xmath21 is small .",
    "this implies that if @xmath22 is not small , @xmath23 also can not be small .",
    "thus , if we limit the number of @xmath13 similar individuals , as we do in fitness uniform optimization , this will also limit the number of @xmath18 similar individuals , as is done in crowding and niching methods .",
    "the advantage of fitness uniform optimization is that we do not need to know what @xmath18 is , or to compute its value .",
    "indeed , the above argument is true for _ any _ metric @xmath18 on the genome space that @xmath3 is smooth with respect to .    on the other hand ,",
    "if the fitness function @xmath3 is not generally smooth with respect to @xmath18 , then such a comparison between the methods can not be made .",
    "however , in this case an ea is less likely to be effective as small mutations in genome space with respect to @xmath18 will produce unpredictable changes in fitness .",
    "the distance @xmath24 induced by the fitness function @xmath3 is a semi - metric on the individual space @xmath2 ( semi only because @xmath25 for @xmath26 is possible ) .",
    "the semi - metric induces a topology on @xmath2 .",
    "equal fitness suffices to declare two individuals as @xmath13-equivalent , i.e. @xmath13 is a rather small semi - metric in the sense that the induced topology is rather coarse .",
    "we will see that a non - zero distance between individuals of different fitness is sufficient to avoiding the population takeover .",
    "@xmath13 induces the coarsest topology ( is the `` smallest '' distance ) avoiding population takeover .      besides elitist selection ,",
    "the other major cause of diversity loss in a population is genetic drift .",
    "this occurs due to the stochastic nature of the selection operator breeding some individuals more often than others . in a finite population",
    "this will cause some individuals to be replaced which have no close relatives , thus reducing diversity",
    ". indeed , without a sufficient rate of mutation , eventually a population will converge on a single genome ; even if no selection pressure is applied .",
    "although fitness uniform optimization does not attempt to address this problem , some implications can be drawn .",
    "clearly , with fitness uniform optimization a complete collapse in diversity is impossible as individuals with a wide range of fitness values are always preserved in the population .",
    "however , within a given fitness level genetic drift can occur , although the sustained presence of many individuals in other fitness levels to breed with will reduce this effect .",
    "theoretical analysis of genetic drift is often performed by calculating the markov chain transition matrices to compute the time for the system to reach an absorption state where all of the population members have the same genome .",
    "as these results can be difficult to generalize , an alternative approach has been to measure genetic drift by measuring the loss in fitness diversity in a population over time @xcite .",
    "this is interesting as fitness uniform optimization attempts to maximize the entropy of the fitness values in the population , producing a very high variance in population fitness .",
    "thus , at least according to the second method of analysis , very little genetic drift would be evident in the population .",
    "in this section we propose a new selection scheme , which limits the fraction of @xmath13-similar individuals . for simplicity",
    "we start with a fitness function @xmath27 with discrete equi - spaced values @xmath28 .",
    "we call two individuals @xmath29 and @xmath30 @xmath31-similar if @xmath32 . the continuous valued case",
    "@xmath33 $ ] is considered later . in the following we assume @xmath34 . in this case , two individuals are @xmath31-similar if and only if they have the same fitness .",
    "we have argued that in order to escape local optima , genetic variety should be preserved somehow .",
    "one way is to limit the number of @xmath31-similar individuals in the population . in an exact fitness uniform distribution",
    "there would be @xmath35 individuals for each of the @xmath36 fitness values , i.e.  each fitness level would be occupied by a fraction of @xmath37 individuals .",
    "the following selection scheme asymptotically transforms any finite population into a fitness uniform one .",
    "fuss is defined as follows : randomly select a fitness value @xmath3 uniformly from the fitness values @xmath38 . then , uniformly at random select an individual @xmath11 with fitness @xmath3 .",
    "add another copy of @xmath29 to @xmath4 .",
    "note the two stage uniform selection process which is very different from a one step uniform selection of an individual of @xmath4 ( see figure [ figsel ] ) .",
    "effects of proportionate , truncation , ranking & tournament , uniform , and fitness uniform ( fuss ) selection on the fitness distribution in a generation based ea .",
    "the left / right diagrams depict fitness distributions before / after applying the selection schemes depicted in the middle diagrams .",
    "note that for populations with a non - gaussian distribution of fitness values ( left column ) , the graph of selection probability vs. fitness for fuss ( center bottom ) can be totally different to that illustrated above , however the population distribution that results ( right bottom ) will be the same . ]    in std , inertia increases with population size .",
    "a large mass of unfit individuals reduces the probability of selecting fit individuals .",
    "this is not the case for fuss .",
    "hence , without loss of performance , we can define a _ pure model _",
    ", in which no individual is ever deleted ; the population size increases with time .",
    "no genetic material is ever discarded and no fine - tuning in population size is necessary .",
    "what may prevent the pure model from being applied to practical problems are not computation time issues , but memory problems . if space becomes a problem we delete random individuals , as is usually done with a steady state ea .",
    "the expected number of individuals per fitness level @xmath3 after @xmath39 selections is @xmath40 , where @xmath41 is the initial distribution .",
    "hence , asymptotically each fitness level gets occupied uniformly by a fraction = t , where @xmath42 is the population at time @xmath39 .",
    "the same limit holds if each selection is accompanied by uniformly deleting one individual from the ( now constant sized ) population .",
    "we made two unrealistic assumptions .",
    "first , we assumed that each fitness level is initially occupied .",
    "if the smallest / largest fitness values in @xmath42 are @xmath43 we extend the definition of fuss by selecting a fitness value @xmath3 uniformly in the interval @xmath44 $ ] and an individual @xmath45 with fitness nearest to @xmath3 ( see figure [ figfuss ] ) .",
    "this also covers the case when there are missing intermediate fitness values , and also works for continuous valued fitness functions ( @xmath46 ) .",
    "if the lowest / highest fitness values in the current population @xmath4 are @xmath9 , fuss selects a fitness value @xmath3 uniformly in the interval @xmath10 $ ] , then , the individual @xmath11 with fitness nearest to @xmath3 is selected and a copy is added to @xmath4 , possibly after mutation and recombination . ]",
    "the second assumption was that there is no mutation and recombination .",
    "in the presence of a small mutation and/or recombination rate eventually each fitness level will become occupied and the occupation fraction is still asymptotically approximately uniform . for larger rate",
    "the distribution will be no longer uniform , but the important point is that the occupation fraction of _ no _ fitness level decreases to zero for @xmath47 , unlike for std .",
    "furthermore , fuss selects by construction uniformly in the fitness levels , even if the levels are not uniformly occupied .",
    "evolution of the population under fuss versus standard selection schemes ( std ) : std may get stuck in a local optimum if all unfit individuals were eliminated too quickly . in fuss ,",
    "all fitness levels remain occupied with `` free '' drift within and in - between fitness levels , from which new mutants are steadily created , occasionally leading to further evolution in a more promising direction . ]",
    "evolution of the population under fuss versus standard selection schemes ( std ) : std may get stuck in a local optimum if all unfit individuals were eliminated too quickly . in fuss ,",
    "all fitness levels remain occupied with `` free '' drift within and in - between fitness levels , from which new mutants are steadily created , occasionally leading to further evolution in a more promising direction . ]",
    "evolution of the population under fuss versus standard selection schemes ( std ) : std may get stuck in a local optimum if all unfit individuals were eliminated too quickly . in fuss ,",
    "all fitness levels remain occupied with `` free '' drift within and in - between fitness levels , from which new mutants are steadily created , occasionally leading to further evolution in a more promising direction . ]",
    "fuss preserves diversity better than std , but the latter have a ( higher ) selection pressure toward higher fitness , which is necessary for optimization . at first glance",
    "it seems that there is no such pressure at all in fuss , but this is deceiving . as fuss selects uniformly in the fitness levels , individuals of low populated fitness levels are effectively favored .",
    "the probability of selecting a specific individual with fitness @xmath3 is inversely proportional to @xmath48 ( see figure [ figsel ] ) . in an initial typical ( fuss )",
    "population there are many unfit and only a few fit individuals . hence , fit individuals are effectively favored until the population becomes fitness uniform .",
    "occasionally , a new higher fitness level is discovered and occupied by a single new individual , which then , again , is favored .      with fuss , takeover of",
    "the highest fitness level never happens .",
    "the concept of takeover time @xcite is meaningless for fuss .",
    "the fraction of fittest individuals in a population is always small .",
    "this implies that the average population fitness is always much lower than the best fitness .",
    "actually , a large number of fit individuals is usually not the true optimization goal .",
    "a single fittest individual usually suffices to solve the optimization task .",
    "note , if it is also difficult to find individuals of low fitness , i.e.  if there are only a few individuals of low fitness , fuss will also favor these individuals .",
    "half of the time is `` wasted '' in searching on the wrong end of the fitness scale .",
    "this possible slowdown by a factor of 2 is usually acceptable . in section [ secex ]",
    "we will see that in certain circumstances this behavior can actually speedup the search .",
    "in general , fitness levels which are difficult to reach , are favored .      within a fitness level",
    "there is no selection pressure which could further exponentially decrease the population in certain regions of the individual space .",
    "this ( exponential ) reduction is the major enemy of diversity , which is suppressed by fuss . within a fitness level ,",
    "the individuals freely drift around ( by mutation ) .",
    "furthermore , there is a steady stream of individuals into and out of a level by ( d)evolution from ( higher)lower levels .",
    "consequently , fuss develops an equilibrium distribution which is nowhere zero .",
    "this does not mean that the distribution within a level is uniform .",
    "for instance , if there are two ( local ) maxima of same height , a very broad one and a very narrow one , the broad one may be populated much more than the narrow one , since it is much easier to `` find '' .",
    "in std , a wrong step ( mutation ) at some point in evolution might cause further evolution in the wrong direction .",
    "once a local optimum has been found and all unfit individuals were eliminated it is very difficult to undo the wrong step . in fuss , all fitness levels remain occupied from which new mutants are steadily created , occasionally leading to further evolution in a more promising direction ( see figure [ figevolve ] ) .      fuss ( with continuous fitness ) is independent of a scaling and a shift of the fitness function , i.e.  fuss(@xmath49 ) with @xmath50 is identical to fuss(@xmath3 ) .",
    "this is true even for @xmath51 , since fuss searches for maxima _ and _ minima , as we have seen .",
    "it is not independent of a non - linear ( monotone ) transformation unlike tournament , ranking and truncation selection .",
    "the non - linear transformation properties are more like the ones of proportionate selection .",
    "for a steady state evolutionary algorithm each cycle of the system consists of both selecting which individual or individuals to crossover and mutate , and then selecting which individual is to be deleted in order to make space for the new child .",
    "the usual deletion scheme used is _ random deletion _ as this is neutral in the sense that it does not bias the distribution of the population in any way and does not require additional work to be done , such as evaluating the similarity of individuals based on their genes .",
    "another common strategy is to use an elitist deletion scheme .",
    "here we propose to use the similarity semi - metric @xmath13 defined in section [ secsim ] to achieve a uniform distribution across fitness levels , like with fuss , except that we achieve this by selectively deleting those members of the population which have very commonly occurring fitness values .",
    "of course this leaves the selection scheme unspecified , indeed we may use any standard selection scheme such as tournament selection in combination with fuds .",
    "it also means that we lose one of the nice features of fuss as we now need to manually tune the selection intensity for our application  fuss of course is parameterless .",
    "nevertheless it allows us to give many fuss like properties to an existing ea using a standard selection scheme with only a minor modification to the deletion scheme .",
    "the intuition behind why fuds preserves population diversity is very simple : if an individual has a fitness value which is very rare in the population then this individual almost certainly contains unique information which , if it were to be deleted , would decrease the total population diversity .",
    "conversely , if we delete an individual with very commonly occurring fitness then we are unlikely to be losing significant diversity .",
    "presumably most of these individuals are common in some sense and likely exist in parts of the solution space which are easy to reach .",
    "thus the fitness uniform deletion strategy is now clear : only delete individuals with very commonly occurring fitness values as these individuals are less likely to contain important genetic diversity .",
    "practically fuds is implemented as follows .",
    "let @xmath52 and @xmath53 be the minimum and maximum fitness values possible for a problem , or at least reasonable upper and lower bounds .",
    "we divide the interval @xmath54 $ ] into a collection of subintervals of equal length @xmath55 \\}$ ] which we call _ fitness levels_. as individuals are added to the population their fitness is computed and they are placed in the set of individuals corresponding to the fitness level they belong to",
    ". thus the number of individuals in each fitness level describes how common fitness values within this interval are in the current population .",
    "when a deletion is required the algorithm locates the fitness level with the greatest number of individuals and then deletes a random individual from this level . in the case where multiple fitness levels have maximal size the lowest of these levels is used .",
    "if the number of fitness levels is chosen too low , say 5 levels , then the resulting model of the distribution of individuals across the fitness range will be too coarse .",
    "alternatively if a large number of fitness levels is used with a very small population the individuals may become too thinly spread across the fitness levels .",
    "while in these extreme cases this could affect the performance of fuds , in practice we have found that the system is not very sensitive to the setting of this parameter . if @xmath56 is the population size then setting the number of fitness levels to be @xmath57 is a good rule of thumb .    for discrete valued fitness functions",
    "there is a natural lower bound on the interval length @xmath58 because below a certain value there will be more intervals than unique fitness values .",
    "of course this can not happen when the fitness function is continuous .",
    "other than this small technical detail , the two cases are treated identically .    as fuds spreads the individuals out across a wide range of fitness values , for small populations",
    "the ea may become inefficient as only a few individuals will have relatively high fitness . for problems which are not deceptive",
    "this is especially true as there will be little value in having individuals in the population with low to medium fitness .",
    "of course these are not the kinds of problems for which fuds was designed . in practice",
    "we have always used populations of between 250 and 5,000 individuals and have not observed a decline in performance relative to random deletion at the lower end of this range .",
    "an alternative implementation that avoids discretization is to choose the two individuals that have the most similar fitness and delete one of them .",
    "an efficient implementation keeps a list of the individuals ordered by their fitness along with an ordered list of the distances between the individuals . then in each cycle one of the two individuals with closest fitness to each other is selected for deletion .",
    "although the performance of this algorithm was better than random deletion , it was not as good as the implementation of fuds using bins .",
    "we conjecture that the reason for this is as follows : when there are just a few very fit individuals in the population it is quite likely that they will be highly related to each other and have very similar fitness .",
    "this means that if we delete the individuals with most similar fitness it is likely that many of the very fit individuals will be deleted .",
    "however with the bins approach this will not happen as there are typically few individuals in the high fitness bins .",
    "thus , although deleting one of the closest individuals in terms of fitness might preserve diversity well , it also changes the pressure on the population distribution over fitness levels .",
    "this small change in distribution dynamics appears to reduce performance in practice .",
    "as fuds uniformly distributes the population across fitness levels , like fuss does , many of the key properties of fuss also carry over to an ea that is using a standard selection scheme ( std ) combined with fuds deletion .      under fuds",
    "the takeover of the highest fitness level , or indeed any fitness level , is impossible .",
    "this is easy to see because as soon as any fitness level starts to dominate , all of the deletions become focused on this level until it is no longer the most populated fitness level . as a by - product , this also means that individuals on relatively unpopulated fitness levels are preserved .",
    "another similarity with fuss is the steady creation of individuals on many different fitness levels .",
    "this occurs because under fuds some individuals on each fitness level are always kept .",
    "this makes it relatively easy for the ea to find its way out of local optima as it keeps on exploring evolutionary paths which do not at first appear to be promising .      because fuds is only a deletion scheme",
    ", we still need to choose a selection scheme for the ea .",
    "of course this selection scheme may then require us to set a selection intensity parameter . while this is not as desirable as fuss , which has no such parameter , at least with fuds we expect the performance of the system to be less sensitive to the correct setting of this parameter .",
    "for example , if the selection intensity is set too high the normal problem is that the population rushes into a local optimum too soon and becomes stuck before it has had a chance to properly explore the genotype space for other promising regions .",
    "however , as we noted above , with fuds a total collapse in population diversity is impossible",
    ". thus much higher levels of selection intensity may be used without the risk of premature convergence .    in some situations",
    "if very low section intensity is used along with random deletion , the population tends not to explore the higher areas of the fitness landscape at all .",
    "this can be illustrated by a simple example .",
    "consider a population which contains 1,000 individuals . under random deletion all of these individuals ,",
    "including the highly fit ones , will have a 1 in 1,000 chance of being deleted in each cycle and so the expected life time of an individual is 1,000 deletion cycles .",
    "thus if a highly fit individual is to contribute a child of the same fitness or higher , it must do so reasonably quickly . however for some optimization problems the probability of a fit individual having such a child when it is selected is very low , so low in fact that it is more likely to be deleted before this happens . as a result",
    "the population becomes stuck , unable to find individuals of greater fitness before the fittest individuals are killed off .",
    "the usual solution to this problem is to increase the selection intensity because then the fit individuals are selected more often and thus are more likely to contribute a child of similar or greater fitness before they are deleted .",
    "another is to change the deletion scheme so that these individuals live longer .",
    "this is what happens with fuds as rare fit individuals are not deleted .",
    "effectively it means that with fuds we can often use much lower selection intensity without the population becoming stuck .",
    "while with fuds we have the added complication of having to choose the number of subintervals with which to break up the fitness values , this number is only a function of the population size and distributional characteristics of the problem .",
    "thus any linear transformation of the fitness function has no effect on fuds .",
    "however , non - linear transformations will affect performance .      because fuds only requires the fitness of individuals ,",
    "the method is completely independent of the problem and genotype representation , i.e.  how the individuals are coded .",
    "as the algorithm is simple and the fitness function is given as part of the problem specification , fuds is very easy to implement and requires few computational resources .",
    "in the following , we use a simple example problem to compare the performance of fitness uniform selection ( fuss ) , random search ( rand ) and standard selection ( std ) , each used both with and without recombination .",
    "we also examine the performance of standard selection when used with the fitness uniform deletion scheme ( fuds ) .",
    "we regard this problem as a prototype for deceptive multi - modal functions .",
    "the example demonstrates how fuss and fuds can be superior to rand and std in some situations .",
    "more generic situations will be considered in section [ sectree ] .",
    "an experimental analysis of this problem appears in section  [ secex2 ] .",
    "consider individuals @xmath59\\times[0,1]$ ] , which are tuples of real numbers , each coordinate in the interval @xmath60 $ ] .",
    "the example models individuals possessing up to 2 `` features '' .",
    "individual @xmath29 possesses feature @xmath61 if @xmath62\\times[0,1]$ ] , and feature @xmath63 if @xmath64\\times[b , b+\\delta]$ ] .",
    "the fitness function @xmath65 is defined as f(x , y ) = \\ {    l 1 ( x , y)i_1\\i_2 , + 2 ( x , y)i_2\\i_1 , + 3 ( x , y)i_1i_2 , + 4 ( x , y)i_1i_2 . +    .",
    "we assume @xmath66 .",
    "individuals with neither of the two features ( @xmath67 ) have fitness @xmath68 .",
    "these `` local @xmath68 optima '' occupy most of the individual space @xmath2 , namely a fraction @xmath69 .",
    "it is disadvantageous for an individual to possess only one of the two features ( @xmath70 ) , since @xmath71 or 2 in this case . in combination ( @xmath72 )",
    ", the two features lead to the highest fitness , but the global maximum @xmath73 occupies the smallest fraction @xmath74 of the individual space @xmath2 . with a fraction @xmath75 ,",
    "the @xmath76 minima are in between .",
    "the example has sort of an xor structure , which is hard for many optimizers .",
    "individuals are created uniformly in the unit square .",
    "the `` local optimum '' @xmath68 is easy to `` find '' , since it occupies nearly the whole space .",
    "the global optimum @xmath73 is difficult to find , since it occupies only @xmath77 of the space .",
    "the expected time , i.e.the expected number of individuals created and tested until one with @xmath73 is found , is @xmath78 . here and in the following , the `` time '' @xmath79 is defined as the expected number of created individuals until the _ first _ optimal individual ( with @xmath73 ) is found .",
    "@xmath79 is neither a takeover time nor the number of generations ( we consider steady - state eas ) .",
    "let us occasionally perform a recombination of individuals in the current population .",
    "we combine the @xmath80-coordinate of one uniformly selected individual @xmath81 with the @xmath82 coordinate of another individual @xmath83 .",
    "this crossover operation maintains a uniform distribution of individuals in @xmath60 ^ 2 $ ] .",
    "it leads to the global optimum if @xmath84 and @xmath85 .",
    "the probability of selecting an individual in @xmath86 is @xmath87 ( we assumed that the global optimum has not yet been found ) .",
    "hence , the probability that @xmath61 crosses with @xmath63 is @xmath74 .",
    "the time to find the global optimum by random search including crossover is still @xmath88 ( @xmath89 denotes asymptotic proportionality ) .",
    "the result remains valid ( to leading order in @xmath90 ) if , instead of a random search , we uniformly select an individual and mutate it according to some probabilistic , sufficiently mixing rule , which preserves uniformity in @xmath60 $ ] .",
    "one popular such mutation operator is to use a sufficiently long binary representation of each coordinate , like in genetic algorithms , and flip a single bit . for simplicity",
    "we assume in the following a mutation operator which replaces with probability @xmath91 the first / second coordinate by a new uniform random number .",
    "other mutation operators which mutate with probability @xmath91 the first / second coordinate , preserve uniformity , are sufficiently mixing , and leave the other coordinate unchanged ( like the single - bit - flip operator ) lead to the same scaling of @xmath79 with @xmath92 ( but with different proportionality constants ) .",
    "the @xmath71 and @xmath93 individuals contain useful building blocks , which could speedup the search by a suitable selection and crossover scheme .",
    "unfortunately , the standard selection schemes favor individuals of higher fitness and will diminish the @xmath76 population fraction .",
    "the probability of selecting @xmath76 individuals is even smaller than in random search .",
    "hence @xmath94 . standard selection does not improve performance , even not in combination with crossover , although crossover is well suited to produce the needed recombination .",
    "at the beginning , only the @xmath68 level is occupied and individuals are uniformly selected and mutated .",
    "the expected time until an @xmath71 or @xmath93 individual in @xmath95 is created is @xmath96 ( not @xmath97 , since only one coordinate is mutated ) . from this time on fuss will select one half ( ! ) of the time the @xmath76 individual(s ) and only the remaining half the abundant @xmath68 individuals . when level @xmath71 _ and _ level @xmath93 are occupied , the selection probability is @xmath98 for these levels . with probability @xmath99",
    "the mutation operator will mutate the @xmath82 coordinate of an individual in @xmath61 or the @xmath80 coordinate of an individual in @xmath63 and produces a new @xmath100 individual .",
    "the relative probability of creating an @xmath73 individual is @xmath92 . the expected time to find this global optimum from the @xmath76 individuals ,",
    "hence , is @xmath101^{-1}$ ] .",
    "the total expected time is @xmath102 .",
    "fuss is much faster by exploiting unfit @xmath76 individuals .",
    "this is an example where ( local ) minima can help the search .",
    "examples where a low local maxima can help in finding the global maximum , but where standard selection sweeps over too quickly to higher but useless local maxima , can also be constructed .",
    "the expected time until an @xmath71 individual in @xmath61 and an @xmath93 individual in @xmath63 is found is @xmath103 , even with crossover .",
    "the probability of selecting an @xmath76 individual is @xmath104 .",
    "thus , the probability that a crossing operation crosses @xmath61 with @xmath63 is @xmath105 .",
    "the expected time to find the global optimum from the @xmath76 individuals , hence , is @xmath106 , where the @xmath107 factor depends on the frequency of crossover operations .",
    "this is far faster than by std , even if the @xmath76 levels were local maxima , since to get a high standard selection probability , the level has first to be taken over , which itself needs some time depending on the population size . in fuss a single @xmath71 and a single @xmath93 individual suffice to guarantee a high selection probability and an effective crossover .",
    "crossover does not significantly decrease the _ total _ time @xmath108 , but for a suitable 3d generalization we get a large speedup by a factor of @xmath90 .      assume that initially all of the individuals have @xmath68 and that we are using random selection . for any mutation",
    "the probability of the child being in @xmath109 is @xmath92 . until @xmath109 becomes quite full fuds",
    "will never delete individuals from these areas .",
    "furthermore if an individual in @xmath109 is mutated then the mutant will also be in @xmath109 with probability @xmath110",
    ". therefore while most of the population has @xmath68 we can lower bound the probability of a new child being in @xmath109 by @xmath92 .",
    "it then follows that if @xmath4 is the size of the population we can upper bound the expected time for @xmath109 to contain half the total population by @xmath111 .",
    "once this occurs ( and most likely well before this point ) crossover will produce an individual with @xmath73 almost immediately by crossing a member of @xmath61 with a member of @xmath63 .",
    "thus @xmath112 .",
    "this gives fuds when used with random selection scaling characteristics which are similar to fuss .",
    "if we use a selection scheme with higher intensity our bound on the expected time for half the population to have @xmath68 remains unchanged as the bound holds in the worst case situation where only individuals with @xmath68 are selected .",
    "however higher selection intensity makes the final crossover required to find an individual with @xmath73 less likely . for moderate levels of selection",
    "intensity this is clearly not a significant factor and more importantly it is o(1 ) and independent of @xmath92 .",
    "thus the order of scaling for @xmath113 is just @xmath114 for this difficult problem , which is the same as @xmath115 .",
    "we generalize the 2d example to d - dimensional individuals @xmath116^d$ ] and a fitness function f(x ) : = ( d+1)_d=1^d_d(x ) - _",
    "1dd d_d(x ) + d+1 , where @xmath117 is the characteristic function of feature @xmath118 _ d(x ) : = \\ {    l 1 a_ix_ia_i+ , + 0 +    . for @xmath119 , @xmath3 coincides with the 2d example . for @xmath120 , the fractions of @xmath60 ^ 3",
    "$ ] where @xmath121 are approximately @xmath122 . with the same line of reasoning",
    "we get the following expected search times for the global optimum : t_rand~t_std~1 ^ 3 , t_fuss~1 ^ 2 , t_fussx~t_fuds ~1 .",
    "this demonstrates the existence of problems where fuss is much faster than rand and std , and where crossover can give a further boost to fuss , even when it is ineffective in combination with std .",
    "generic 2d fitness landscape with evolution tree .",
    "each connected slice represents a species . a species is also symbolized by a node in the slice . the number in a slice and near",
    "a node is the fitness value of the species .",
    "if individuals from one species can evolve to individuals of another species , the nodes are connected by a solid line .",
    "altogether , they form the fitness tree .",
    "the branching factor @xmath123 is @xmath124 and the number of species per fitness level @xmath125 is @xmath126 for intermediate fitness values ( 3,4,5 ) . ]",
    "subsectionthe fitness tree model a general , problem independent comparison of the various optimization algorithms is difficult .",
    "we are interested in the performance for difficult fitness landscapes with many local optima .",
    "we only consider mutation ; recombination is discussed in the next section . the evolutionary neighborhood ( not to be confused with @xmath13-similarity ) of an individual @xmath29",
    "is defined as the set of individuals that can be created from @xmath29 by a single mutation .",
    "two individuals @xmath29 and @xmath30 with the same fitness are defined to belong to the same _ species _ if there is a finite sequence of mutations which transforms @xmath29 into @xmath30 _ and _ all individuals of the sequence also have fitness @xmath127 .",
    "each fitness level is partitioned in this way into disjoint species .",
    "we say a species of fitness @xmath128 can _ evolve _ from a species of fitness @xmath3 , if there is a mutation which transforms an individual from the latter species to one of the former .",
    "those species are connected by an edge in figures [ figtree ] and [ figtree1d ] .",
    "a species is said to be _ promising _ if it _",
    "can _ evolve to the global optimum @xmath53 .",
    "* evolution which skips fitness levels is ignored , and also devolution to species of lower fitness other than the primordial species . *",
    "random individuals have lowest fitness @xmath52 with high probability , and there is only one species of fitness @xmath52 .",
    "* there is a fixed branching factor @xmath123 , i.e.  each species can evolve into @xmath123 improved species , or represents a local optimum from which no further evolution is possible .",
    "* there is a single global optimum @xmath53 ( or @xmath123 optima to be consistent with the previous item ) .",
    "* there are @xmath125 different species per fitness level ( except near @xmath52 and @xmath53 where there must be fewer to be consistent with the previous items ) . *",
    "the probability @xmath129 that an individual evolves to a higher fitness is very small . in most cases",
    "a mutation keeps an individual within its species or devolves it .",
    "* the probability to evolve to one of the offspring species is uniform , i.e.  @xmath130 for all offspring species .",
    "we have the feeling that this picture covers the essential features of fitness landscapes for difficult problems .",
    "the qualitative conclusions we will draw should still hold when some or all of the additional simplifying assumptions are violated",
    ".     generic fitness function with evolution tree .",
    "individuals which are evolutionary neighbors are connected by a dashed line .",
    "they belong to the species indicated by a node on the dashed line .",
    "a species which can evolve from another is connected to it by a solid line .",
    "the smooth curve visualizes ( somewhat misleading , since the fitness is discrete ) the fitness function with many local maxima . ]",
    "consider the case of individuals , which are real - valued @xmath131 dimensional vectors , i.e.  @xmath132 .",
    "let the fitness function @xmath49 be continuous and positive with many local maxima , which tends to zero for large arguments .",
    "this covers a large range of physical optimization problems .",
    "mutation shall be local in @xmath133 , i.e. @xmath134 . as fuss and the fitness tree model is only defined for discrete fitness functions , we discretize @xmath49 to @xmath135 , which is acceptable for sufficiently small @xmath136 .",
    "a typical fitness landscape for @xmath119 and @xmath137 together with their fitness tree are depicted in figures [ figtree ] and [ figtree1d ] .",
    "since mutation is a local operation , each species is a ( possibly multiply punched ) connected slice ( @xmath131-dimensional sub - volume ) and evolution can only occur from @xmath3 to @xmath138 ( @xmath139 ) .",
    "assumption ( i ) is generally satisfied .",
    "the special fitness landscapes depicted in figures [ figtree ] and [ figtree1d ] also satisfy ( ii , iii , iv , v ) with @xmath140 and @xmath141 .",
    "consider a mutation induced random walk of a single individual .",
    "due to the low evolution probability @xmath142 , most of the time will be spent on individuals of the lowest fitness @xmath52 .",
    "as evolution is a tree , there is only one evolution sequence which leads to the global optimum . at each evolution step ,",
    "the correct offspring species ( out of @xmath123 ) has to be evolved .",
    "the probability of an evolution step in the right direction , hence , is @xmath143 .",
    "@xmath36 evolution steps are necessary to reach @xmath53 .",
    "therefore , the expected time to find the global maximum by random walk is @xmath144 .",
    "random walk is very slow ; it is exponential in the number of fitness levels @xmath36 to a very large basis @xmath145 .",
    "assume that @xmath146 fitness levels from @xmath52 to @xmath3 are occupied .",
    "the probability that fuss selects an individual of fitness @xmath3 is @xmath147 . under this additional assumption that the occupation of species within one fitness level is approximately uniform most of the time , the probability of selecting an individual of the promising species , which can evolve to the global optimum , is @xmath148 .",
    "the probability of an evolution step in the right direction is @xmath143 as in the random walk case .",
    "hence , the total expected time for an evolution in the right direction is @xmath149 .",
    "the total time @xmath150 for an evolution from @xmath151 to the global optimum @xmath152 is obtained by summation over @xmath153 .",
    "a similar analysis can be applied to fuds .",
    "assume again that the @xmath146 fitness levels from @xmath52 to @xmath3 are occupied and that the occupation of species within each fitness level is approximately uniform most of the time . because fuds tends to spread the population out , like fuss , this assumption is not unreasonable . as fuds is only a deletion scheme we must also specify a selection scheme .",
    "for our analysis we will take a very simple elitist selection scheme that half of the time selects an individual from the highest fitness level , and the other half of the time selects an individual from a lower level .",
    "it follows then that the probability of selecting a promising species is @xmath154 and the probability that this then results in an evolutionary step in the right direction is @xmath143 .",
    "thus the total expected time for an evolutionary step in the right direction is @xmath155 .",
    "therefore by summation the total expected time to evolve to the global optimum is @xmath156 .",
    "of course this analysis rests on our choice of selection scheme and the assumptions about the uniformity of the population that we have made . when fuds is used with selection schemes which are very greedy these uniformity assumptions",
    "will likely be violated and less favorable bounds could result .",
    "we assumed a fixed number of @xmath125 species per fitness level and @xmath157 or @xmath123 offspring species .",
    "this implies that only a fraction of @xmath130 species can evolve to higher fitness .",
    "we assume that fitness level @xmath3 has been taken over , i.e.  most individuals have fitness @xmath3 .",
    "the probability of evolution is @xmath129 .",
    "a significant fraction ( for simplicity we assume most ) of the @xmath158 individuals must evolve to the next fitness level before evolution with a relevant rate can occur to the next to next level .",
    "hence , the time to take over the next fitness level is roughly @xmath159 . as there are @xmath36 fitness levels , the total time is @xmath160 .",
    "we wrote @xmath161 as we have made two significant favorable assumptions . in order to ensure convergence ,",
    "the promising species in the current fitness level has to be occupied .",
    "if we assume a uniform occupation of species within one fitness level , as for fuss , this means that all species of the current fitness level have to be populated .",
    "as there are @xmath125 species , @xmath158 has to be at least @xmath125 , which can be quite large . on the other hand",
    ", std linearly slows down with @xmath158 , unlike fuss .",
    "hence , there is a trade - off in the choice of @xmath158 .",
    "more serious is the following problem .",
    "assume that the first individual evolved with fitness @xmath128 is one in a non - promising species @xmath58 .",
    "due to selection pressure it might happen that species @xmath58 takes over the whole population before all ( or at least the promising ) species with fitness @xmath128 can evolve from the ones of fitness @xmath3 .",
    "the probability to find the global optimum in the worst case scenario , where at each level only one species is occupied , is @xmath162 .",
    "this is the original problem of the loss of genetic diversity discussed at the outset , which lead to the invention of fuss .",
    "every other fix the authors are aware of only seems to diminish the problem , but does not solve it .",
    "one fix is to repeatedly restart the ea , but the huge number of @xmath163 restarts might be necessary .",
    "the time is exponential in @xmath36 like for random walk but with a smaller basis @xmath123 .",
    "the true time is expected to be somewhere in between @xmath164 and this worst case analysis , although an unfavorable setting may never reach the global optimum ( @xmath165 in this case ) .",
    "the times @xmath166 , @xmath113 and @xmath167 should be regarded , at best , as rules of thumb , since the derivation was rather heuristic due to the list of assumptions .",
    "the quotient is more reliable : |f| |f| , and 1",
    ".    we will give a more direct argument in section [ seccross ] that the slowdown of fuss relative to std is at most @xmath36 .",
    "finally , a truism has been recovered , namely that an ea can , under certain circumstances , be much faster than random walk , that is , @xmath168 .",
    "we now want to estimate the maximal possible slowdown of fuss compared to std .",
    "let us assume that all individuals in std have fitness @xmath3 , and once one individual with fitness @xmath128 has been found , takeover of level @xmath128 is quick .",
    "let us assume that this quick takeover is actually good ( e.g.  if there are no local maxima ) .",
    "the selection probability of individuals of same fitness is equal . for fuss",
    "we assume individuals in the range of @xmath52 and @xmath3 .",
    "uniformity is _ not _ necessary . in the worst case",
    ", a selection of an individual of fitness @xmath169 never leads to an individual of fitness @xmath170 , i.e.  is always useless .",
    "the probability of selecting an individual with fitness @xmath3 is @xmath171 .",
    "at least every @xmath172 fuss selection corresponds to a std selection .",
    "hence , we expect a maximal slowdown by a factor of @xmath36 , since fuss `` simulates '' std statistically every @xmath172 selection .",
    "it is possible to construct problems where this slowdown occurs ( unimodal function , local mutation @xmath173 , no crossover )",
    ". gradient ascent would be the algorithm of choice in this case .",
    "on the other hand , we have not observed this slowdown in our simple 2d example and the tsp experiments , where fuss outperformed std in solution quality / time ( see the experimental results in section  [ secex2 ] ) .",
    "since real world problems often lie in between these extreme cases it is desirable to modify fuss to cope with simple problems as well , without destroying its advantages for complex objective functions .",
    "we have seen that @xmath174 . in the presence of recombination ,",
    "a _ pair _ of individuals has to be selected .",
    "the probability that fuss selects _ two _ individuals with fitness @xmath3 is @xmath175 .",
    "hence , in the worst case , there could be a slowdown by a factor of @xmath176  for _ independent _ selection we expect @xmath177 .",
    "this potential quadratic slowdown can be avoided by selecting one fitness value at random , and then two individuals of this single fitness value . for this _ dependent _ selection , we expect @xmath174 . on the other hand , crossing two individuals of different fitness can also be advantageous , like the crossing of @xmath71 with @xmath93 individuals in the 2d example of section [ secex ] .",
    "a near optimal compromise is possible : a high selection probability @xmath178 if @xmath179 and @xmath180 otherwise .",
    "a `` scale independent '' probability distribution @xmath181 is appropriate for this .",
    "we define [ ptscale ] p(f ) : = .",
    "the @xmath182 in the denominator has been added to regularize the expression for @xmath183 .",
    "the factor @xmath184 ensures correct normalization ( @xmath185 ) . by using @xmath186",
    ", one can show that @xmath187 i.e.  @xmath188 for @xmath189 . in the following we assume @xmath190 , i.e.  @xmath191 .",
    "apart from a minor additional logarithmic suppression of order @xmath192 we have the desired behavior @xmath178 for @xmath179 and @xmath193 otherwise : p(f_max - m ) , p(f ) f during optimization , the minimal / maximal fitness of an individual in population @xmath42 is @xmath43 . in the definition of @xmath129 one",
    "has to use @xmath194 instead of @xmath38 , i.e.  @xmath36 replaced with @xmath195 .",
    "so ( [ ptscale ] ) can not be achieved by a static re - parametrization of fitness @xmath3 replaced with @xmath196 .",
    "furthermore the important idea of sampling from a fitness level instead of individuals directly is still maintained .",
    "the only difference now is that the population will no longer converge to a fitness uniform one but to one with distribution @xmath197 which is biased toward higher fitness but still never converges to a fittest individual . in the worst case",
    ", we expect a small slowdown of the order of @xmath192 as compared to fuss , as well as compared to std .",
    "it is possible to ( nearly ) have the best of independent and dependent selection : a high selection probability @xmath198 if @xmath199 and @xmath200 otherwise , with uniform marginal @xmath201 .",
    "the idea is to use a strongly correlated joint distribution for selecting a fitness pair .",
    "independent '' probability distribution @xmath202 is appropriate .",
    "we define the joint probability @xmath203 of selecting two individuals of fitness @xmath3 and @xmath204 and the marginal @xmath205 as @xmath206 @xmath207    we assume @xmath190 in the following .",
    "the @xmath182 in the denominator has been added to regularize the expression for @xmath208 .",
    "the factor @xmath209 ensures correct normalization for @xmath189 .",
    "more precisely , using @xmath210 , one can show that 1- _ f , ffp(f , f ) 1 , |f|p(f ) 1 , i.e.  @xmath211 is not strictly normalized to @xmath212 and the marginal @xmath205 is only approximately ( within a factor of 2 ) uniform .",
    "the first defect can be corrected by appropriately increasing the diagonal probabilities @xmath213 .",
    "this also solves the second problem .",
    "[ pjoint ] p(f ,",
    "f ) : = \\ {    ll p(f , f ) & ff + p(f , f)+[1|f|-p(f ) ] & f = f    .",
    "@xmath129 is normalized to @xmath212 with uniform marginal @xmath215 @xmath216 @xmath217 apart from a minor additional logarithmic suppression of order @xmath192 we have the desired behavior @xmath218 for @xmath199 and @xmath200 otherwise : @xmath219 @xmath220 during optimization , the minimal / maximal fitness of an individual in population @xmath42 is @xmath43 . in the definition of @xmath129 one has to use @xmath194 instead of @xmath38 , i.e.  @xmath36 replaced with @xmath221 .      just as the selection scheme fuss has its dual in the deletion scheme fuds",
    ", we can likewise create the dual of scale - independent selection in the form of scale - independent deletion .",
    "thus rather than targeting deletion from the population so that the distribution becomes flat , as we do with fuds , we now define a convex curve @xmath18 which is peaked at the fittest individual in the population and delete the population down so that it follows the shape of this curve .",
    "this retains some of the advantages of fuds , for example the population can not collapse to just a few fitness levels , and yet it recognizes that for many problems it is useful to bias the population distribution toward fit individuals .",
    "of course such problems are less deceptive than the kind that fuss and fuds are intended for .",
    "fitness uniform selection for a continuous valued function has already been mentioned in section [ secfuss ] .",
    "we just take a uniform random fitness @xmath3 in the interval @xmath227 $ ] .",
    "independent and dependent fitness pair selection as described in the last section works analogously .",
    "an @xmath228 version of correlated selection does not exist ; a non - zero @xmath223 is important .",
    "a discrete pair @xmath229 is drawn with probability @xmath214 as defined in ( [ ptjoint ] ) and ( [ pjoint ] ) with @xmath17 and @xmath38 replaced by @xmath223 and @xmath230 .",
    "the additional suppression @xmath231 is small for all practically realizable population sizes . in all cases an individual with fitness nearest to @xmath3 ( @xmath204 )",
    "is selected from the population @xmath4 ( randomly if there is more than one nearest individual ) .",
    "if we assume a fitness uniform distribution then our worst case bound of @xmath232 is plausible , since the probability of selecting the best individual is approximately @xmath233 . for constant population size",
    "we get a bound @xmath234 . for the preferred non - deletion case with population size @xmath235 the bound",
    "gets much worse @xmath236 . this possible ( but not necessary ! )",
    "slowdown has similarities to the slowdown problems of proportionate selection in later optimization stages .",
    "the species definition in section [ sectree ] has to be relaxed by allowing mutation sequences of individuals with @xmath223-similar fitness .",
    "larger choices of @xmath223 may be favorable if the standard choice causes problems .      fitness uniform deletion already requires the range of the fitness function to be broken up into a finite number of intervals . while for discrete valued fitness functions the intervals may correspond to the unique values of the fitness function , this is not a requirement .",
    "indeed if the population is small and the fitness function has a large number of possible values then a more coarse discretization is necessary .",
    "continuous valued fitness functions can therefore be treated in exactly the same way and do not cause any special problems .",
    "in fact they are slightly simpler in that we are now free to choose the discretization as fine as we like without being limited by the number of possible fitness values",
    ". of course , like in the discrete case , we still must choose a discretization which is appropriate given the size of the population .",
    "to test fuss and fuds we have implemented an ea test system in java .",
    "the complete source code along with the test problems presented in this paper and basic usage instructions can be downloaded from @xcite .",
    "the ea model we have chosen for our tests is the so called `` steady state '' model as opposed to the more usual `` generational '' model . in a generational ea in each generation we select an entirely new population based on the old population .",
    "the old population is then simply discarded . under the steady state model that we use",
    ", each step of the optimization adds and removes just one individual at a time .",
    "specifically the process occurs as follows : firstly an individual is selected by the _ selection scheme _ and then with a certain probability another individual is also selected and the _ crossover operator _ is applied to produce a new individual . then with another probability",
    "a _ mutation operator _ is applied to produce the child individual which is then added to the population .",
    "we refer to the probability of crossing as the _ crossover probability _ and the probability of mutating following a crossover as the _ mutation probability_. in the case where no crossover takes place the individual is always mutated to ensure that we are not simply adding a clone of an existing individual into the population .",
    "finally , an individual must be deleted in order to keep the population size constant .",
    "this individual is selected by the _ deletion scheme_. the deletion scheme is important as it has the power to bias the population in a similar way to the selection scheme .",
    "our task in this paper is to experimentally analyze how fuss performs relative to other selection schemes and how fuds performs relative to other deletion schemes . because any particular run of a steady state ea requires both a selection and a deletion scheme to be used ,",
    "there are many possible combinations that we could test .",
    "we have narrowed this range of possibilities down to just a few that are commonly used .    among the selection schemes ,",
    "tournament selection is one of the simplest and most commonly used and we consider it to be roughly representative of other standard selection schemes which favor the fitter individuals in the population ; indeed in the case of tournament size 2 it can be shown that tournament selection is equivalent to the linear ranking selection scheme ( * ? ? ?",
    "* sec.2.2.4 ) . with tournament selection",
    "we randomly pick a group of individuals and then select the fittest individual from this group .",
    "the size of the group is called the _ tournament size _ and it is clear that the larger this group is the more likely we are to select a highly fit individual from the population . at some point in the future",
    "we may implement other standard selection schemes to broaden our comparison , however we expect the performance of these schemes to be at best comparable to tournament selection when used with a correctly tuned selection intensity .    among the deletion schemes one of the most commonly used in steady state eas is random deletion .",
    "the rational for this is that it is neutral in the sense that it does not skew the distribution of the population in any way .",
    "thus whether the population tends toward high or low fitness etc .",
    "is solely a function of the selection scheme and its settings .",
    "of course random deletion , unlike fuds , makes no effort to preserve diversity in the population as all individuals have an equal chance of being removed . in this paper",
    "we will compare fuds against random deletion as this is the standard deletion schemes in situations where it is difficult or impossible to directly measure the similarity of individuals based on their genomes .",
    "when reporting test results we will adopt the following notation : tour2 means tournament selection with a tournament size of 2 .",
    "similarly for tour3 , tour4 and so on . under random selection , denoted rand , all members of the population have an equal probability of being selected .",
    "this is sometimes called uniform selection . when a graph shows the performance of tournament selection over a range of tournament sizes we will simply write tourx .",
    "naturally fuss indicates the fitness uniform selection scheme . to indicate the deletion scheme used we will add either the suffix or to indicate random deletion or fuds respectively .",
    "thus , tour10-r is tournament selection with a tournament size of 10 used with random deletion , while fuss - f is fuss selection used with fuds deletion .",
    "the important free parameters to set for each test are the population size , and the crossover and mutation probabilities .",
    "good values for the crossover and mutation probabilities depend on the problem and must be manually tuned based on experience as there are few theoretical guidelines on how to do this . for",
    "some problems performance can be quite sensitive to these values while for others they are less important .",
    "our default values are 0.5 for both as this has often provided us with reasonable performance in the past .",
    "for each test we ran the system multiple times with the same mutation and crossover probabilities and the same population size .",
    "the only difference was which selection and deletion schemes were used by the code .",
    "thus even if our various parameters , mutation operators etc.were not optimal for a given problem , the comparison is still fair .",
    "indeed we often deliberately set the optimization parameters to non - optimal values in order to compare the robustness of the systems .    as a steady state optimizer operates on just one individual at a time",
    ", the number of cycles within a given run can be high , perhaps 100,000 or more . in order to make our results more comparable to a generational optimizer we divide this number by the size of the population to give the approximate number of generations .",
    "unfortunately the theoretical understanding of the relationship between steady state and generational optimizers is not strong .",
    "it has been shown that under the assumption of no crossover the effective selection intensity using tournament selection with size 2 is approximately twice as strong under a steady state ea as it is with a generational ea @xcite . as far as we are aware a similar comparison for systems with crossover has not been performed .",
    "depending on the purpose of a test run , different stopping criteria were applied .",
    "for example , in situations where we wanted to graph how rapidly different strategies converged with respect to generations , it made sense to fix the number of generations .",
    "in other situations we wanted to stop a run once the optimizer appeared to have become stuck , that is , when the maximum fitness had not improved after some specified number of generations . in any case we explain for each test the stopping criterion that has been used .    in order to generate reliable statistics we ran each test multiple times ; typically 30 times but sometimes up to 100 times if the results were noisy . from these runs",
    "we then calculated the mean performance as well as the sample standard deviation and from this the standard error in our estimate of the mean .",
    "this value was then used to generate the 95% confidence intervals which appear as error bars on the graphs .",
    "the first problem we examine is the simple but highly deceptive 2d optimization problem which was theoretically analyzed in section  [ secex ] . as in the theoretical analysis , we set up the mutation operator to randomly replace either the @xmath80 or @xmath82 position of an individual and the crossover to take the @xmath80 position from one individual and the @xmath82 position from another to produce an offspring .",
    "the size of the domain for which the function is maximized is just @xmath237 which is very small for small values of @xmath31 , while the local maxima at fitness level 3 covers most of the space .",
    "clearly the only way to reach the global maximum is by leaving this local maximum and exploring the space of individuals with lower fitness values of 1 or 2 .",
    "thus , with respect to the mutation and crossover operators we have defined , this is a deceptive optimization problem as these partitions mislead the ea @xcite .",
    "for this test we set the maximum population size to 1,000 and made 20 runs for each @xmath31 value . with a steady state ea",
    "it is usual to start with a full population of random individuals .",
    "however for this particular problem we reduced the initial population size down to just 10 in order to avoid the effect of doing a large random search when we created the initial population and thereby distorting the scaling .",
    "usually this might create difficulties due to the poor genetic diversity in the initial population .",
    "however due to the fact that any individual can mutate to any other in just two steps this is not a problem in this situation .",
    "initial tests indicated that reducing the crossover probability from 0.5 to 0.25 improved the performance slightly and so we have used the latter value .",
    "the first set of results for the selection schemes used with random deletion appear in the left graph of figure  [ simpleprob ] .",
    "as expected , higher selection intensity is a significant disadvantage for this problem . indeed even with just a tournament size of 3 the number of generations required to find the maximum became infeasible to compute for smaller values of @xmath31 .",
    "our results confirm the theoretical scaling orders of @xmath238 for tour2-r , and @xmath239 for fuss - r , as predicted in section  [ secex ] .",
    "be aware that this is a log - log scaled graph and so the different slopes indicate significantly different orders of scaling .    in the second set of tests we switch from random deletion to fuds .",
    "these results appear in the right graph of figure  [ simpleprob ] .",
    "we see that with fuds as the deletion scheme the scaling improves dramatically for rand , tour2 and tour3 .",
    "indeed they are now of the same order @xmath240 as fuss , as predicted in section  [ secex ] .",
    "this shows that for very deceptive problems much higher levels of selection intensity can be applied when using fuds rather than random deletion .",
    "the performance of fuss - r is very similar to that of fuss - f .",
    "this is not surprising as the population distribution under fuss already tends to be approximately uniform across fitness levels and thus we expect the effect of fuds to be quite weak .",
    "although this problem was artificially constructed , the results clearly demonstrate how fuss and fuds can dramatically improve performance in some situations .",
    "a well known optimization problem is the so called traveling salesman problem ( tsp ) .",
    "the task is to find the shortest hamiltonian cycle ( path ) in a graph of @xmath241 vertexes ( cities ) connected by edges of certain lengths .",
    "there exist highly specialized population based optimizers which use advanced mutation and crossover operators and are capable of finding paths less than one percent longer than the optimal path for up to @xmath242 cities @xcite . as our goal is only to study the relative performance of selection and deletion schemes , having a highly refined implementation is not important .",
    "thus the mutation and crossover operators we used were quite simple : mutation was achieved by just switching the position of two of the cities in the solution , while for crossover we used the partial mapped crossover technique @xcite .",
    "fitness was computed by taking the reciprocal of the tour length .    for our first set of tests we used",
    "randomly generated tsp problems , that is , the distance between any two cities was chosen uniformly from the unit interval @xmath60 $ ] .",
    "we chose this as it is known to be a particularly deceptive form of the tsp problem as the usual triangle inequality relation does not hold in general .",
    "for example , the distance between cities @xmath243 and @xmath244 might be @xmath245 , between cities @xmath244 and @xmath246 @xmath247 , and yet the distance between @xmath243 and @xmath246 might be @xmath248 .",
    "the problem still has some structure though as efficient partial solutions tend to be useful building blocks for efficient complete tours .    for this test we used random distance tsp problems with 20 cities and a population size of 1000 .",
    "we found that changing the crossover and mutation probabilities did not improve performance and so these have been left at their default values of 0.5 .",
    "our stopping criterion was simply to let the ea run for 300 generations as this appeared to be adequate for all of the methods to converge and allowed us to easily graph performance versus generations .    the first graph in figure  [ dtsp-1",
    "] shows each of the selection schemes used with random deletion .",
    "we see that tour3-r has insufficient selection intensity for adequate convergence while tour12-r quickly converges to a local optimum and then becomes stuck .",
    "tour6-r has about the correct level of selection intensity for this problem and population size .",
    "fuss - r however initially converges as rapidly as tour12-r but avoids becoming stuck in local optima .",
    "this suggests improved population diversity .",
    "the performance curve for fuss - r is impressive , especially considering that it is parameterless .    at first",
    "it might seem surprising that the maximum fitness with fuss climbs very quickly for the first 20 generations , especially considering that fuss makes no attempt to increase the average fitness in the population .",
    "however we can explain this very rapid rise in solution fitness by considering a simple example .",
    "consider a situation where there is a large number of individuals in a small band of fitness levels , say 1,000 with fitness values ranging from 50 to 70 .",
    "add to this population one individual with a fitness value of 73 .",
    "thus the total fitness range contains 24 values . whenever fuss picks a random point from 72 to 73 inclusive this single individual with maximal fitness",
    "will be selected .",
    "that is , the probability that the single fittest individual will be selected is 2/24 = 0.083 . in comparison under tour12 the probability",
    "that the fittest individual is selected is the same as the probability that it is picked for the sample of 12 elements used for the tournament , which is approximately , 12/1000 = 0.012 .",
    "thus the probability of the fittest individual in the population being selected is higher under fuss than under tour12 and so the maximum fitness would rise quickly to start with .",
    "previously in @xcite we speculated that this may have been responsible for performance problems that we had observed with fuss in some situations .",
    "however further experimentation has shown that very rapid rises in maximal fitness are quite rare and are also very shortly lived when they do occur  too short to cause any significant diversity problems in the population .",
    "we now believe that the population distribution is to blame in these situations ; something that we will explore in detail in section  [ secsat ] .",
    "the second graph in figure  [ dtsp-1 ] shows the same set of selection schemes but now using fuds as the deletion scheme . with fuds",
    "the performance of all of the selection schemes either stayed the same or improved .",
    "in the case of tour3 the improvement was dramatic and for tour12 the improvement was also quite significant . this is interesting because it shows that with fitness uniform deletion , performance can improve when the selection intensity is either too high or too low .",
    "that is , when using fuds the performance of the ea now appears to be more robust with respect to variation in selection intensity .    in the case of tour12-f",
    "this is evidence of improved population diversity as the ea is no longer becoming stuck .",
    "however for tour3-r the selection intensity is quite low and thus we would expect the population diversity to be relatively good . thus the fact that tour3-f was so much better than tour3-r suggests that fuds can have significant performance benefits that are not related to improved population diversity .",
    "investigating further it seems that this effect is due to the way that fuds focuses the deletion on the large mass of individuals which have an average level of fitness while completely leaving the less common fit individuals alone .",
    "this helps a system with very weak selection intensity move the mass of the population up through the fitness space . with higher selection intensity",
    "this problem tends not to occur as individuals in this central mass are less likely to be selected thus reducing the rate at which new individuals of average fitness are added to the population .    in order to better understand how stable fuds performance is when used with different selection intensities we ran another set of tests on random tsp problems with 20 cities and",
    "graphed how performance varied by tournament size .",
    "for these tests we set the ea to stop each run when no improvement had occurred in 40 generations .",
    "we also tested on a range of population sizes : 250 , 500 , 1000 and 5000 .",
    "the results appear in figure  [ tsp ] .",
    "in these graphs we can now clearly see how the performance of tourx - r varies significantly with tournament size .",
    "below the optimal tournament size performance worsened quickly while above this value it also worsened , though more slowly .",
    "interestingly , with a population size of 5000 the optimal tournament size was about 6 , while with small populations the optimal value fell to just 4 .",
    "presumably this was partly because smaller populations have lower diversity and thus can not withstand as much selection intensity .",
    "in contrast fuss - r and fuss - f appear as horizontal lines as they do not have a tournament size parameter .",
    "we see that they have performed as well as the optimal performance of tourx - r without requiring any tuning .",
    "indeed for larger populations fuss - r appears to be even better than the optimally tuned performance of tourx - r .",
    "this is a very positive result for the parameterless fuss .    comparing fuds with random deletion we also see impressive results .",
    "for every combination of selection scheme , tournament size and population size the result with fuds was better than the corresponding result with random deletion , and in some cases much better .",
    "furthermore these graphs clearly display the improved robustness of tournament selection with fuds as tourx - f produced near optimal results for all tournament sizes .",
    "even with an optimally tuned tournament size fuds increased performance , particularly with the smaller populations . indeed for each population size tested the worst performance of tourx - f was equal to the best performance of .    with fuss",
    "there was also a performance advantage when using fuds , again more so with the smaller populations .",
    "the combination of both fuss and fuds was especially effective as can be seen by the consistently superior performance of fuss - f across all of the graphs .",
    "more tests were run exploring performance with up to 100 cities .",
    "although the performance of fuds remained stronger than random deletion for very low selection intensity , for high selection intensity the two were equal .",
    "we believe that the reason for this is the following : when the space of potential solutions is very large finding anything close to a global optimum is practically impossible , indeed it is difficult to even find the top of a reasonable local optimum as the space has so many dimensions . in these situations",
    "it is more important to put effort into simply climbing in the space rather than spreading out and trying to thoroughly explore .",
    "thus higher selection intensity can be an advantage for large problem spaces . at any rate , for large problems and with high selection",
    "intensity fuds did not appear to hinder the performance , while with low selection intensity it continued to significantly improve it .",
    "experiments were also performed using the more efficient `` 2-opt '' mutation operator . as expected ,",
    "this increased performance and allowed much higher selection pressure to be used .",
    "of course the problem then no longer had the kind of deceptive structure that heavily punishes high selection pressure that we are looking for . nevertheless , fuds continued to significantly boost the performance of tournament selection , in particular when the tournament size was too small .",
    "the set covering problem ( scp ) is a reasonably well known np - complete optimization problem with many real world applications .",
    "let @xmath249 be a binary valued matrix and let @xmath250 for @xmath251 be the cost of column @xmath30 .",
    "the goal is to find a subset of the columns such that the cost is minimized .",
    "define @xmath252 if column @xmath30 is in our solution and 0 otherwise .",
    "we can then express the cost of this solution as @xmath253 subject to the condition that @xmath254 for @xmath255 .",
    "our system of representation , mutation operators and crossover follow that used by beasley @xcite and we compute the fitness by taking the reciprocal of the cost . the results presented here are based on the `` scp42 '' problem from a standard collection of scp problems @xcite .",
    "the results obtained on other problems in this test set were similar .",
    "we found that increasing the crossover probability and reducing the mutation probability improved performance , especially when the selection intensity was low .",
    "thus we have tested the system with a crossover probability of 0.8 and a mutation probability of 0.2 .",
    "we performed each test at least 50 times in order to minimize the error bars .",
    "our stopping criterion was to terminate each run after no improvement in minimal cost had occurred for 40 generations .",
    "the results for this test appear in figure  [ scp - unbal ] .",
    "similar to the tsp graphs we again see the importance of correctly tuning the tournament size with tourx - r .",
    "we also see the optimal range of performance for tourx - r moving to the right as the population sizes increases .",
    "this is what we would expect due to the greater diversity in larger populations .",
    "this kind of variability is one of the reasons why the selection intensity parameter usually has to be determined by experimentation .",
    "unlike with tsp however , the performance of fuss was less convincing in these results . with the smaller populations of 250 and 500",
    "fuss - r was only better than tourx - r when the tournament size was very low or very high . with the larger populations of 1,000 and 5,000 the results were much better with fuss - r performing as well as the optimal performance of tourx - r .",
    "fuss - f performed better than fuss - r , in particular with the smaller populations though this improvement was still insufficient for it to match the optimal performance of tourx - r in these cases .",
    "the fact that the performance of fuss varied by population size suggests that fuss might be experiencing some kind of population diversity problem .",
    "we will look more carefully at diversity issues in the next section .    with fuds",
    "the results were again very impressive .",
    "as with the tsp tests ; for all combinations of selection scheme , tournament size and population size that we tested , the performance with fuds was superior to the corresponding performance with random deletion .",
    "this was true even when the tournament size was optimal .",
    "while the performance of tourx - f did vary significantly with different tournament sizes , the results were more robust than tourx - r , especially with the larger populations .",
    "indeed for the larger two populations we again have a situation where the worst performance of tourx - f is equal to the optimal performance of tourx - r .",
    "maximum cnf3 sat is a well known np hard optimization problem @xcite that has been extensively studied .",
    "a three literal conjunctive normal form ( cnf ) logical equation is a boolean equation that consists of a conjunction of clauses where each clause contains a disjunction of three literals .",
    "so for example , @xmath256 is a cnf3 expression .",
    "the goal in the maximum cnf3 sat problem is to find an instantiation of the variables such that the maximum number of clauses evaluate to true .",
    "thus for the above equation if @xmath257 , @xmath258 , @xmath259 , @xmath260 , and @xmath261 then just one clause evaluates to true and thus this instantiation gets a score of one .",
    "achieving significant results in this area would be difficult and this is not our aim ; we are simply using this problem as a test to compare selection and deletion schemes .",
    "our test problems have been taken from the satlib collection of sat benchmark tests @xcite .",
    "the first test was performed on the full set of 100 instances of randomly generated cnf3 formula with 150 variables and 645 clauses , all of which are known to be satisfiable . based on test results the crossover and mutation probabilities were left at the default values .",
    "our mutation operator simply flips one boolean variable and the crossover operator forms a new individual by randomly selecting for each variable which parent s state to take .",
    "fitness was simply taken to be the number of classes satisfied .",
    "again we tested across a range of tournament sizes and population sizes .",
    "the results of these tests appear in figure  [ cnf - all ] .",
    "we have shown only the population sizes of 500 and 5,000 as the other population sizes tested followed the same pattern .",
    "interestingly for this problem there was no evidence of better performance with fuds at higher selection intensities .",
    "nor for that matter was there the decline in performance with tourx - r that we have seen elsewhere .",
    "indeed with random deletion the selection intensity appeared to have no impact on performance at all .",
    "while sat3 cnf is an np hard optimization problem , this lack of dependence of our selection intensity parameter suggests that it may not have the deceptive structure that fuss and fuds are designed for .    with low selection intensity fuds caused performance to fall below that of random deletion ; something that we have not seen before .",
    "because the advantages of fuds have been more apparent with low populations in other test problems , we also tested the system with a population size of only 150 .",
    "unfortunately no interesting changes in behavior were observed .                    while fuds had minor difficulties , fuss had serious problems for all the population sizes that we tested .",
    "we suspected that the uniform nature of the population distribution that should occur with both fuss and fuds might be to blame as we only expect this to be a benefit for very deceptive problems which are sensitive to the tuning of the selection intensity parameter .",
    "thus we ran the ea with a population of 1000 and graphed the population distribution across the number of clauses satisfied at the end of the run .",
    "we stopped each run when the ea made no progress in 40 generations .",
    "the results of this appear in figure  [ cnf - pop ] .",
    "the first thing to note is that with tour4-r the population collapses to a narrow band of fitness levels , as expected .",
    "with tour4-f the distribution is now uniform , though practically none of the population satisfies fewer than 550 clauses .",
    "the reason for this is quite simple : while fuds levels the population distribution out , tour4 tends to select the most fit individuals and thus pushes the population to the right from its starting point .",
    "in contrast , fuss pushes the population toward currently unoccupied fitness levels .",
    "this results in the population spreading out in both directions and so the number of individuals with extremely poor fitness is much higher .    given that our goal is to find an instantiation that satisfies all 645 clauses , it is questionable whether having a large percentage of the population unable to satisfy even 600 clauses is of much benefit .",
    "while the total population diversity under fuss - f might be very high , perhaps the kind of diversity that matters the most is the diversity among the relatively fit individuals in the population .",
    "this should be true for all but the most excessively deceptive problems . by thinly spreading the population across a very wide range of fitness levels",
    "we actually end up with very few individuals with the kind of diversity that matters .",
    "of course this depends on the nature of the problem we are trying to solve and the fitness function that we use .",
    "fortunately with cnf3 sat we can directly measure population diversity by taking the average hamming distance between individuals genomes .",
    "while this means that the value of the fitness based similarity metric is questionable for this problem , as more direct methods like crowding can be applied , it is a useful situation for our analysis as it allows us to directly measure how effective fuss and fuds are at preserving population diversity .",
    "the hope of course is that any positive benefits that we have seen here will also carry over to problems where directly measuring the diversity is problematic .    for the diversity tests we used a population size of 1000 again . for comparison we used fuss , tour3 and tour12 both with random deletion and with fuds .",
    "in each run we calculated two different statistics : the average hamming distance between individuals in the whole population , and the average hamming distance between individuals whose fitness was no more than 20 below the fittest individual in the population at the time .",
    "these two measurements give us the `` total population diversity '' and `` high fitness diversity '' graphs in figure  [ cnf - diver ] .",
    "we graphed these measurements against the solution cost of the fittest individual rather than the number of generations .",
    "this is only fair because if good solutions are found very quickly then an equally rapid decline in diversity is acceptable and to be expected .",
    "indeed it is trivial to come up with a system which always maintains high population diversity how ever long it runs , but is unlikely to find any good solutions .",
    "the results were averaged over all 100 problems in the test set . because the best solution found in each run varied we have only graphed each curve until such a point where fewer than 50% of the runs were able to achieve this level of fitness .",
    "thus the terminal point at the right of each curve is representative of fairly typical runs rather than just a few exceptional ones that perhaps found unusually good solutions by chance .",
    "the top two graphs in figure  [ cnf - diver ] show the total population diversity .",
    "as expected the diversity with tour3-r and tour12-r decline steadily as finding better solutions becomes increasingly difficult and the population tends to collapse into a narrow band of fitness .",
    "as we would expect , the total population diversity with tour3-r is higher than with tour12-r . while fuss - r declines initially it then stabilizes at around 50 before becoming stuck .",
    "as the tour3-r and tour12-r curves both extend further to the right , even though the total population diversity becomes quite low , this show that diversity problems in the population as a whole are not a significant factor behind the performance problems with fuss - r .",
    "the top right graph shows the same selection schemes , but this time with fuds . as expected fuds",
    "has significantly improved the total population diversity with both tour3 and tour12 , while having little impact on fuss which already has a relatively flat population distribution .",
    "as the maximal solution found by tour3-f and tour12-f were not better than tour3-r and tour12-r , this indicates that improved total population diversity is not a significant factor in the performance of the ea for this type of optimization problem .",
    "that fuds has lifted the total diversity for tour3 and tour12 so that they are now above fuss - f , is particularly interesting .",
    "this suggests that while fuss has high total population diversity , there appears to be some more subtle effects that are causing the diversity to be lower than it could be .",
    "it may be related to the fact the fuss sometimes heavily selects from small groups within the population during the early stages of the optimization process , as we noted in section  [ sectsp ] .",
    "however we are not certain whether this is occurring in this case .    on the lower set of graphs we see the diversity among the fitter individuals in the population ; specifically those whose fitness is no more than 20 below the fittest individual in the population at the time . on the first graph on the left we see that tour3 has significantly greater diversity than tour12 with both deletion schemes .",
    "this is expected as tour3 tends to search more evolutionary paths while tour12 just rushes down a few .",
    "disappointingly fuds does not appear to have made much difference to the diversity among these highly fit individuals , though the curves do flatten out a little as the diversity drops below 30 , so perhaps fuds is having a slight impact .",
    "for both fuss - r and fuss - f the diversity among the fit individuals was poor , indeed it was even worse than tour12 for both deletion schemes .",
    "thus , while the total population diversity with fuss tends to be high , the diversity among the fittest individuals in the population can be quite poor .",
    "furthermore , the curves for high fitness diversity all end once the diversity drops into the 12 to 17 range .",
    "as this pattern was absent from the graphs of total population diversity , this indicates that it is indeed the diversity among the relatively fit individuals in the population that most determines when the ea is going to become stuck .    in summary , these results show that while fuss has been successful in maximizing total population diversity , for problems such as cnf3 sat this is not sufficient .",
    "it appears to be more important that the ea maximizes the diversity among those individuals which have higher fitness and in this regard fuss is poor , which leads to poor performance .",
    "this is most likely a characteristic of optimization problems which , while still difficult , are not as deceptive as scp or random tsp .",
    "we have addressed the problem of balancing the selection intensity in eas , which determines speed versus quality of a solution .",
    "we invented a new fitness uniform selection scheme fuss .",
    "it generates a selection pressure toward sparsely populated fitness levels .",
    "this property is unique to fuss as compared to other selection schemes ( std ) .",
    "it results in the desired high selection pressure toward higher fitness if there are only a few fit individuals .",
    "the selection pressure is automatically reduced when the number of fit individuals increases .",
    "we motivated fuss as a scheme which bounds the number of _ similar _ individuals in a population .",
    "we defined a universal similarity relation solely depending on the fitness , independent of the problem structure , representation and ea details .",
    "we showed analytically by way of a simple example that fuss can be much more effective than std .",
    "a joint pair selection scheme for recombination has been defined .",
    "a heuristic worst case analysis of fuss compared to std has been given .",
    "for this , the fitness tree model has been defined , which is an interesting analytic tool in itself .",
    "fuss solves the problem of population takeover and the resulting loss of genetic diversity of std , while still generating enough selection pressure .",
    "it does not help in getting a more uniform distribution within a fitness level .",
    "we have also invented a related system called fuds which achieves a similar effect to fuss except that it works through deletion rather than through selection .",
    "this means that fuds shares many of the important characteristics of fuss including strong total population diversity and the impossibility of population collapse .",
    "we showed analytically that for a simple deceptive optimization problem the performance of std when used with fuds scales similarly to fuss .",
    "a test system has been constructed and used to evaluate the empirical performance of both fuss and fuds on a range of optimization problems with different population sizes , mutation probabilities and crossover probabilities .",
    "their performance has been compared to the more standard methods of tournament selection and random deletion . for the artificial deceptive 2d optimization problem and random distance matrix tsp problems both fuss and fuds performed extremely well . for the deceptive 2d problem",
    "they dramatically improved the scaling exponent in the number of generations needed to find the global optimum .",
    "for the tsp problems fuss - r performed as well as optimally tuned tourx - r for all population sizes , and fuds caused tourx to perform near optimally for all tournament sizes and population sizes .    with scp problems with small populations",
    "the performance of fuss - r was only better than tourx - r when the tournament size was poorly set .",
    "for populations larger than 1,000 however , fuss - r continued to perform as well as the optimal results for tourx - r .",
    "fuds was again consistently superior returning better results than random deletion for every combination of selection scheme , tournament size and population size tested .",
    "for cnf3 sat problems we ran into difficulties however . while fuds significantly improved the performance of fuss , it was inferior to random deletion for low selection intensities .",
    "in other cases the performance was comparable .",
    "fuss however had serious performance problems .",
    "further investigations revealed that this appears to be due to the small number of individuals in the population that have relatively high fitness when using fuss .",
    "we measured the diversity in the population and found that while the total population diversity with fuss was high , the diversity among the fit individuals was relatively poor .",
    "this produced a serious diversity problem in the population when combined with the fact that there are relatively few individuals of high fitness when using fuss .",
    "as the performance of tourx - r was not impacted by high selection intensity on the cnf3 sat problem this indicates that this problem does not have the kind of deceptive nature that harshly punishes greedy exploration that we were looking for . perhaps for such problems a less extreme approach is called for . for example , rather than trying to spread the population across all fitness levels uniformly we should instead control the distribution so that it is biased toward high fitness but never collapses totally as it does with tourx - r .",
    "we have experimented with a deletion scheme which deletes the population distribution down to a convex curve peaked at the fittest individual in the population .",
    "this is the deletion equivalent of the scale independent selection scheme described in section  [ seccross ] .",
    "our results thus far indicate that the performance is equal or slightly superior to random deletion in all situations .",
    "however the dramatic improvements that fuds has over random deletion in some cases are now less significant .",
    "another possibility is to manipulate the fitness function to effectively achieve the same thing .",
    "for example , we have found that by taking the fitness to be the reciprocal of the number of unsatisfied clauses in the cnf3 sat problem the performance of fuss improves significantly , indeed it is then comparable to tourx .",
    "perhaps however it would be better to avoid these performance tricks and instead focus on extremely deceptive problems where high selection intensity is heavily punished , that is , the kinds of problems that fuss and fuds were specifically designed for .",
    "d.  applegate , w.  cook , and a.  rohe . chained lin - kernighan for large traveling salesman problems .",
    "technical report , department of computational and applied mathematics , rice university , houston , tx , 2000 .    j.  e. baker .",
    "adaptive selection methods for genetic algorithms . in _ proc .",
    "1st international conference on genetic algorithms and their applications _ , pages 101111 ,",
    "pittsburgh , pa , 1985 .",
    "lawrence erlbaum associates .",
    "t.  blickle and l.  thiele . a mathematical analysis of tournament selection . in _ proc .",
    "sixth international conference on genetic algorithms ( icga95 ) _ , pages 916 , san francisco , california , 1995 .",
    "morgan kaufmann publishers .",
    "r.  j. collins and d.  r. jefferson .",
    "selection in massively parallel genetic algorithms . in _ proc .",
    "fourth international conference on genetic algorithms _",
    ", san mateo , ca , 1991 .",
    "morgan kaufmann publishers .",
    "l.  j. eshelman .",
    "the chc adaptive search algorithm : how to safe search when engaging in nontraditional genetic recombination . in g.",
    "j.  e. rawlings , editor , _ foundations of genetic algorithms _ , pages 265283 .",
    "morgan kaufmann , san mateo , 1991 .",
    "d.  goldberg and r.  lingle .",
    "loci and the traveling salesman problem . in _ proc .",
    "international conference on genetic algorithms and their applications _ , pages 154159 .",
    "lawrence erlbaum associates , 1985 .",
    "d.  e. goldberg and k.  deb . a comparative analysis of selection schemes used in genetic algorithms . in g.  j.  e. rawlings , editor , _ foundations of genetic algorithms _ , pages 6993 .",
    "morgan kaufmann , san mateo , 1991 .",
    "d.  e. goldberg and j.  richardson .",
    "genetic algorithms with sharing for multi - modal function optimization . in _ proc .",
    "2nd international conference on genetic algorithms and their applications _ , pages 4149 , cambridge , ma , july 1987 .",
    "lawrence erlbaum associates .",
    "m.  hutter .",
    "mplementierung eines klassifizierungs - systems .",
    "master s thesis , theoretische informatik , tu mnchen , 1991 .",
    "72 pages with c listing , in german , http://www.idsia.ch/@xmath89marcus/ai/pcfs.htm .",
    "d.  s. johnson and a.  mcgeoch .",
    "the traveling salesman problem : a case study . in e.  h.  l. aarts and j.  k. lenstra , editors , _ local search in combinatorial optimization _ , discrete mathematics and optimization , chapter  8 , pages 215310 .",
    "wiley - interscience , chichester , england , 1997 .",
    "maza and b.  tidor .",
    "an analysis of selection procedures with particular attention paid to proportional and boltzmann selection . in _ proc .",
    "5th international conference on genetic algorithms _ , pages 124131 , san mateo , ca , usa , 1993 .",
    "morgan kaufmann .",
    "a.  rogers and a.  prgel - bennett . modelling the dynamics of a steady - state genetic algorithm . in wolfgang banzhaf and colin reeves , editors , _ foundations of genetic algorithms 5 _ , pages 5768 .",
    "morgan kaufmann , san francisco , ca , 1999 .",
    "gnter rudolph . on takeover times in",
    "spatially structured populations : array and ring . in k.",
    "k. lai , o.  katai , m.  gen , and b.  lin , editors , _ proceedings of the second asia - pacific conference on genetic algorithms and applications ( apga00 ) _ , pages 144151 , hong kong , pr china , 2000 .",
    "global - link publishing company .",
    "d.  schlierkamp - voosen and h.  mhlenbein .",
    "strategy adaptation by competing subpopulations . in _",
    "parallel problem solving from nature ",
    "ppsn iii _ ,",
    "pages 199208 , berlin , 1994 .",
    "ecture notes in computer science 866 .",
    "d.  whitley .",
    "the genitor algorithm and selection pressure : why rank - based allocation of reproductive trials is best . in _ proc .",
    "third international conference on genetic algorithms ( icga89 ) _ , pages 116123 , san mateo , california , 1989 .",
    "morgan kaufmann publishers , inc .",
    "thereafter , he developed algorithms in a medical software company for five years .",
    "since 2000 , he has published over 35 research papers while a researcher with the dalle molle institute for artificial intelligence ( idsia ) , lugano , switzerland .",
    "he is the author of _ universal artificial intelligence _",
    "( eatcs : springer , 2004 ) .",
    "his current interests are centered around reinforcement learning , algorithmic information theory and statistics , universal induction schemes , adaptive control theory , and related areas .      *",
    "shane legg * received the b.c.m.s .",
    "degree in mathematical and computer sciences from the university of waikato , hamilton , new zealand , in 1996 and the m.sc .",
    "degree in mathematics from auckland university , auckland , new zealand , in 1997 .",
    "he is currently working towards the ph.d.degree at the dalle molle institute for artificial intelligence ( idsia ) , lugano , switzerland .",
    "after receiving the m.sc .",
    "degree in 1997 , he then worked in a number of companies in new zealand and the united states mainly focusing on commercial applications of artificial intelligence .",
    "his research is focused on genetic algorithms , complexity theory , and theoretical models of artificial intelligence ."
  ],
  "abstract_text": [
    "<S> in evolutionary algorithms , the fitness of a population increases with time by mutating and recombining individuals and by a biased selection of more fit individuals . </S>",
    "<S> the right selection pressure is critical in ensuring sufficient optimization progress on the one hand and in preserving genetic diversity to be able to escape from local optima on the other hand . </S>",
    "<S> motivated by a universal similarity relation on the individuals , we propose a new selection scheme , which is uniform in the fitness values . </S>",
    "<S> it generates selection pressure toward sparsely populated fitness regions , not necessarily toward higher fitness , as is the case for all other selection schemes . </S>",
    "<S> we show analytically on a simple example that the new selection scheme can be much more effective than standard selection schemes . </S>",
    "<S> we also propose a new deletion scheme which achieves a similar result via deletion and show how such a scheme preserves genetic diversity more effectively than standard approaches . </S>",
    "<S> we compare the performance of the new schemes to tournament selection and random deletion on an artificial deceptive problem and a range of np - hard problems : traveling salesman , set covering and satisfiability .    </S>",
    "<S> evolutionary algorithms , fitness uniform selection scheme , fitness uniform deletion scheme , preserve diversity , local optima , evolution , universal similarity relation , correlated recombination , fitness tree model , traveling salesman , set covering , satisfiability </S>"
  ]
}
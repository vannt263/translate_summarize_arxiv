{
  "article_text": [
    "in his prize - winning essay[1,2 ] and subsequent monumental work on celestial mechanics[3 ] , poincar established and exploited the fact that solutions to differential equations are frequently analytic functions of the initial conditions and various parameters ( should any occur ) . this result is often referred to as _",
    "poincar analyticity _ or _",
    "poincar s theorem _ on analyticity .",
    "specifically , consider any set of @xmath0 first - order differential equations of the form @xmath1 here @xmath2 is the independent variable , the @xmath3 are dependent variables , and the @xmath4 are possible parameters . let the quantities @xmath5 be initial conditions specified at some initial time @xmath6 , @xmath7 then , under mild conditions imposed on the functions @xmath8 that appear on the right side of ( 1.1 ) and thereby define the set of differential equations , there exists a _ unique _",
    "solution @xmath9 of ( 1.1 ) with the property @xmath10    now assume that the functions @xmath8 are analytic ( within some domain ) in the quantities @xmath3 , the time @xmath2 , and the parameters @xmath4 . then , according to poincar s theorem , the solution given by ( 1.3 ) will be analytic ( again within some domain ) in the initial conditions @xmath5 , the times @xmath11 and @xmath2 , and the parameters @xmath4 .    poincar established this result on a case - by - case basis as needed using _",
    "cauchy s _ method of _ majorants_. it is now more commonly established in general using _",
    "picard iteration _ , and appears as background material in many standard texts on ordinary differential equations [ 4 ] .    if the solution @xmath12 is analytic in the initial conditions @xmath5 and the parameters @xmath4 , then it is possible to expand it in the form of a taylor series , with time - dependent coefficients , in the variables @xmath5 and @xmath4 .",
    "the aim of this paper is to describe how these taylor coefficients can be found as solutions to what we will call the _ complete variational _ equations .    to aid further discussion , it is useful to also rephrase our goal in the context of maps .",
    "suppose we rewrite the set of first - order differential equations ( 1.1 ) in the more compact vector form @xmath13    then , again using vector notation , their solution can be written in the form @xmath14 that is , the quantities @xmath15 at any time @xmath2 are uniquely specified by the initial quantities @xmath16 given at the initial time @xmath11 .",
    "we capitalize on this fact by introducing a slightly different notation .",
    "first , use @xmath17 instead of @xmath11 to denote the _ initial _ time .",
    "similarly use @xmath18 to denote initial conditions by writing @xmath19 next , let @xmath20 be some _ final _ time , and define final conditions @xmath21 by writing @xmath22 then , with this notation , ( 1.6 ) can be rewritten in the form @xmath23    we now view ( 1.9 ) as a _ map _ that sends the initial conditions @xmath18 to the final conditions @xmath21 .",
    "this map will be called the _ transfer map _ between the times @xmath17 and @xmath20 , and will be denoted by the symbol @xmath24 .",
    "what we have emphasized is that a set of first - order differential equations of the form ( 1.5 ) can be integrated to produce a transfer map @xmath24 .",
    "we express the fact that @xmath24 sends @xmath18 to @xmath21 in symbols by writing @xmath25 and illustrate this relation by the picture shown in figure 1 .",
    "we also note that @xmath24 is always invertible : given @xmath21 , @xmath20 , and @xmath17 , we can always integrate ( 1.5 ) backward in time from the moment @xmath26 to the moment @xmath27 and thereby find the initial conditions @xmath18 . in the context of maps , our goal is to find a taylor representation for @xmath28 .",
    "if parameters are present , we may wish to have an expansion in some or all of them as well .     sends the initial conditions @xmath18 to the final conditions @xmath21.,height=201 ]    the organization of this paper is as follows : section 2 derives the complete variational equations without and with dependence on some or all parameters .",
    "sections 3 and 4 describe their solution using forward and backward integration . as an example",
    ", section 5 treats the duffing equation and describes the properties of an associated stroboscopic map @xmath24 . section 6 sets up the complete variational equations for the duffing equation , including some parameter dependence , and studies some of the properties of the map obtained by solving these variational equations numerically .",
    "there we will witness the remarkable fact that a truncated taylor map approximation to @xmath28 can reproduce the infinite period - doubling feigenbaum cascade and associated strange attractor exhibited by the exact @xmath28 .",
    "section 7 describes how the variational equations can be solved numerically .",
    "a final section provides a concluding summary .",
    "this section derives the complete variational equations , first without parameter dependence , and then with parameter dependence .",
    "suppose the equations ( 1.1 ) do not depend on any parameters @xmath4 or we do not wish to make expansions in them .",
    "we may then suppress their appearance to rewrite ( 1.1 ) in the form @xmath29 suppose that @xmath30 is some given _ design _ solution to these equations , and we wish to study solutions in the vicinity of this solution .",
    "that is , we wish to make expansions about this solution .",
    "introduce deviation variables @xmath31 by writing @xmath32 then the equations of motion ( 2.1 ) take the form @xmath33 in accord with our hypothesis of analyticity , assume that the right side of ( 2.3 ) is analytic about @xmath34",
    ". then we may write the relation @xmath35 where each @xmath36 has a taylor expansion of the form @xmath37 here the @xmath38 are the various monomials in the @xmath0 variables @xmath39 labeled by an _ index _ @xmath40 using some convenient labeling scheme , and the @xmath41 are ( generally ) time - dependent coefficients which we call _ forcing terms_. are not to be confused with those appearing in ( 1.3 ) . ] by construction , all the monomials occurring in the right side of ( 2.5 ) have degree one or greater .",
    "we note that the @xmath42 are known once @xmath30 is given .    by assumption",
    ", @xmath34 is a solution of ( 2.3 ) and therefore satisfies the relations @xmath43 it follows that the deviation variables satisfy the equations of motion @xmath44 these equations are evidently generalizations of the usual first - degree ( linear ) variational equations , and will be called the _ complete variational _ equations .",
    "consider the solution to the complete variational equations with _ initial _",
    "conditions @xmath45 specified at some initial time @xmath17 .",
    "following poincar , we expect that this solution will be an analytic function of the initial conditions @xmath45 .",
    "also , since the right side of ( 2.7 ) vanishes when all @xmath46 [ all the monomials @xmath47 in ( 2.7 ) have degree one or greater ] , @xmath48 is a solution to ( 2.7 ) .",
    "it follows that the solution to the complete variational equations has a taylor expansion of the form @xmath49 where the @xmath50 are functions to be determined , and again all the monomials @xmath47 that occur have degree one or greater . when the quantities @xmath50 are evaluated at some _ final",
    "_ time @xmath20 , ( 2.8 ) provides a representation of the transfer map @xmath51 about the design orbit in the taylor form @xmath52      what can be done if we desire to have an expansion in parameters as well ?",
    "suppose that there are @xmath53 such parameters , or that we wish to have expansions in @xmath53 of them .",
    "the work of the previous section can be extended to handle this case by means of a simple trick : view the @xmath53 parameters as additional _ variables _ , and ",
    "augment \" the set of differential equations by additional differential equations that ensure these additional variables remain constant .    in detail",
    ", suppose we label the parameters so that those in which we wish to have an expansion are @xmath54 .",
    "introduce @xmath53 additional variables @xmath55 where @xmath56 by making the replacements @xmath57 next augment the equations ( 1.1 ) by @xmath53 more of the form @xmath58 by this device we can rewrite the equations ( 1.1 ) in the form @xmath59 with the understanding that @xmath60 where @xmath61 denotes the other _ remaining _ parameters , if any , and @xmath62 for the first @xmath0 equations we impose , as before , the initial conditions @xmath63 for the remaining equations we impose the initial conditions @xmath64 note that the relations ( 2.14 ) then ensure the @xmath3 for @xmath65 retain these values for all @xmath2 .    to continue , let @xmath30 be some design solution .",
    "then , by construction , we have the result @xmath66 again introduce deviation variables by writing @xmath67 then the quantities @xmath31 for @xmath65 will describe deviations in the parameter values . moreover , because we have assumed analyticity in the parameters as well , relations of the forms ( 2.4 ) and ( 2.5 ) will continue to hold except that the @xmath68 are now the various monomials in the @xmath69 variables @xmath39 . relations of the forms ( 2.6 ) and ( 2.7 ) will also hold with the provisos ( 2.13 ) and ( 2.14 ) and @xmath70 therefore , we will only need to integrate the equations of the forms ( 2.6 ) and ( 2.7 ) for @xmath71 .",
    "finally , relations of the form ( 2.9 ) will continue to hold for @xmath71 supplemented by the relations @xmath72 since the @xmath73 now involve @xmath69 variables , the relations of the form ( 2.9 ) will provide an expansion of the final quantities @xmath74 ( for @xmath71 ) in terms of the initial quantities @xmath75 ( for @xmath71 ) and also the parameter deviations @xmath76 with @xmath77 .",
    "this section and the next describe two methods for the solution of the complete variational equations .",
    "this section describes the method that employs integration forward in time , and is the conceptually simpler of the two methods .      to determine the functions @xmath78 ,",
    "let us insert the expansion ( 2.8 ) into both sides of ( 2.7 ) . with @xmath79 as a dummy index ,",
    "the left side becomes the relation @xmath80 for the right side we find the intermediate result @xmath81 however , since the @xmath47 are monomials , there are relations of the form @xmath82 and therefore the right side of ( 2.7 ) can be rewritten in the form @xmath83 the notation @xmath84 is employed to indicate that these quantities might ( at this stage of the argument ) depend on all the @xmath85 with @xmath53 ranging from @xmath86 to @xmath0 , and @xmath87 ranging over all possible values .",
    "now , in accord with ( 2.7 ) , equate the right sides of ( 3.1 ) and ( 3.4 ) to obtain the relation @xmath88 since the monomials @xmath89 are linearly independent , we must have the result @xmath90 we have found a set of differential equations that must be satisfied by the @xmath78 .",
    "moreover , from ( 2.8 ) there is the relation @xmath91 thus , all the functions @xmath50 have a known value at the initial time @xmath17 , and indeed are mostly initially zero . when the equations ( 3.6 ) are integrated _ forward _ from @xmath27 to @xmath26 to obtain the quantities @xmath92 , the result is the transfer map @xmath51 about the design orbit in the taylor form ( 2.9 ) .",
    "let us now examine the structure of this set of differential equations .",
    "a key observation is that the functions @xmath93 are _",
    "universal_. that is , as ( 3.3 ) indicates , they describe certain _ combinatorial _ properties of monomials .",
    "they depend only on the dimension @xmath0 of the system under study , and are the _ same _ for all such systems . as ( 2.7 ) shows , what are peculiar to any given system are the forcing terms @xmath42 .",
    "to see what is going on in more detail , it is instructive to work out the first nontrivial case , that with @xmath94 . for two variables , all monomials in @xmath95",
    "are of the form @xmath96 . here , to simplify notation , we have dropped the superscript @xmath97 .",
    "table 1 below shows a convenient way of labeling such monomials , and for this labeling we write @xmath98 with @xmath99    .a labeling scheme for monomials in two variables . [ cols=\"^,^,^,^\",options=\"header \" , ]     following the replacement rule , we should make the substitutions @xmath100 @xmath101 @xmath102 + 5{\\;}prod[z1,z2]+6{\\;}prod[z2,z2]}. \\nonumber\\\\\\end{aligned}\\ ] ] the _ mathematica _ fragment below , executed for the case @xmath94 and @xmath103 , in which case @xmath104 , illustrates how the analogous result is obtained using pyramids , @xmath105 : =    c1 + 2{\\;}z1 + 3{\\;}z2 + 4{\\;}prod[z1 , z1 ] + 5{\\;}prod[z1 , z2]}\\nonumber\\\\    & & { \\tt + 6{\\;}prod[z2 , z2];}\\nonumber\\\\ & & { \\tt g[x1\\ _ ] : = z01{\\;}c1 + x1;}\\nonumber\\\\ & & { \\tt h[x2\\ _ ] : = z02{\\;}c1 + x2;}\\nonumber\\\\ & & { \\tt zd1 = 7;}\\nonumber\\\\ & & { \\tt zd2 = 8;}\\nonumber\\\\ & & { \\tt f[g[x1 ] , h[x2]]}\\nonumber\\\\ & & \\{899 , 98 , 134 , 4 , 5 , 6\\}\\end{aligned}\\ ] ] note that , when use is made of table 8 , the last line of ( 7.93 ) agrees with ( 7.88 ) and the last line of ( 7.89 ) .",
    "consider the set of differential equations ( 1.5 ) .",
    "a standard procedure for their numerical integration from an initial time @xmath106 to some final time @xmath20 is to divide the time axis into a large number of steps @xmath107 , each of small duration @xmath108 , thereby introducing successive times @xmath109 defined by the relation @xmath110 by construction , there will also be the relation @xmath111 the goal is to compute the vectors @xmath112 , where @xmath113 starting from the vector @xmath114 .",
    "the vector @xmath114 is assumed given as a set of definite numbers , i.e. the initial conditions at @xmath11 .",
    "if we assume poincar analyticity in @xmath2 , we may convert the set of differential equations ( 1.5 ) into a set of recursion relations for the @xmath112 in such a way that the @xmath112 obtained by solving the recursion relations differ from the true @xmath112 by only small truncation errors of order @xmath115 .",
    "( here @xmath0 is _ not _ the number of variables , but rather some fixed integer describing the accuracy of the integration method . ) one such procedure , fourth - order _ runge kutta _ ( rk4 ) , is the set of marching / recursion rules @xmath116 where , at each step , @xmath117 @xmath118 @xmath119 @xmath120 thanks to the genius of runge and kutta , the relations ( 7.97 ) and ( 7.98 ) have been constructed in such a way that the method is locally ( at each step ) correct through order @xmath121 , and makes local truncation errors of order @xmath122 .    in the case of a single variable , and therefore a single differential equation , the relations ( 7.97 ) and ( 7.98 ) may be encoded in the _ mathematica _ form shown below . here",
    "@xmath123 is the dependent variable , @xmath124 is the time , @xmath125 is a temporary variable , @xmath126 is a temporary time , and @xmath127 is the number of integration steps . the program employs a do loop over @xmath128 so that the operations ( 7.97 ) and ( 7.98 ) are carried out @xmath129 times .",
    "@xmath130 ; } \\nonumber   \\\\ & & { \\tt zt = zvar+(1/2)aa ;     } \\nonumber   \\\\ & & { \\tt tt = t+h/2 ;         } \\nonumber   \\\\ & & { \\tt bb = h{\\;}f[zt , tt ] ;     } \\nonumber   \\\\ & & { \\tt zt = zvar+(1/2)bb ;   } \\nonumber   \\\\ & & { \\tt cc = h{\\;}f[zt , tt ] ;     } \\nonumber   \\\\ & & { \\tt zt = zvar+cc ;     } \\nonumber   \\\\ & & { \\tt tt = t+h;}\\nonumber   \\\\ & & { \\tt dd = h{\\;}f[zt , tt ] ;    } \\nonumber   \\\\ & & { \\tt zvar = zvar+(1/6)(aa+2{\\;}bb + 2{\\;}cc+dd ) ;   } \\nonumber   \\\\ & & { \\tt t = t0+i{\\;}h;},\\nonumber   \\\\ & & { \\tt \\{i,1,ns,1\\ }   } \\nonumber   \\\\ & & { \\tt ] } \\nonumber   \\\\ & & \\hspace{-.3cm}{\\tt ) } \\nonumber\\\\   \\end{aligned}\\ ] ]      we now make what , for our purposes , is a fundamental observation : the operations that occur in the runge kutta recursion rules ( 7.97 ) and ( 7.98 ) and realized in the code above can be extended to pyramids by application of the replacement rule .",
    "in particular , the dependent variable @xmath131 can be replaced by a pyramid , and the various operations involved in the recursion rules can be replaced by pyramid operations . indeed",
    "if we look at the code above , apart from the evaluation of @xmath132 , we see that the quantities @xmath123 , @xmath125 , @xmath133 , @xmath134 , @xmath135 , and @xmath136 can be viewed , if we wish , as pyramids since the only operations involved are scalar multiplication and addition .",
    "the only requirement for a pyramidal interpretation of the rk4 _ mathematica _ code is that the right side of the differential equation , @xmath137}$ ] , be defined for pyramids .",
    "finally , we remark that the features that make it possible to interpret the rk4 _ mathematica _ code either in terms of ordinary variables or pyramidal variables will hold for _ mathematica _ realizations of many other familiar numerical integration methods including other forms of runge kutta , predictor - corrector methods , and extrapolation methods .    to make these ideas concrete , and to understand their implications ,",
    "let us begin with a simple example .",
    "suppose , in the single variable case , that the right side of the differential equation has the simple form @xmath138 the differential equation with this right side can be integrated analytically to yield the solution @xmath139.\\ ] ] in particular , for the case @xmath140 , @xmath141 , and @xmath142 , there is the result @xmath143=1/2.\\ ] ]    let us also integrate the differential equation with the right side ( 7.100 ) numerically . shown below is the result of running the associated _ mathematica _ runge kutta code for this case .",
    "@xmath144;}\\nonumber   \\\\ & & { \\tt f[z\\_,t\\_]:=-2{\\ ; } t{\\ ; } z^2;}\\nonumber\\\\ & & { \\tt h=.1;}\\nonumber\\\\ & & { \\tt ns=10;}\\nonumber\\\\ & & { \\tt t=0;}\\nonumber\\\\ & & { \\tt zvar=1.;}\\nonumber\\\\ & & { \\tt rk4;}\\nonumber\\\\ & & { \\tt t}\\nonumber\\\\ & & { \\tt zvar}\\nonumber\\\\ & & 1.\\nonumber\\\\ & & 0.500001\\nonumber\\\\\\end{aligned}\\ ] ]    note that the last line of ( 7.103 ) agrees with ( 7.102 ) save for a  1 \" in the last entry . as expected , and as experimentation shows , this small difference , due to accumulated truncation error , becomes even smaller if @xmath145 is decreased ( and correspondingly , @xmath129 is increased ) .",
    "suppose we expand the solution ( 7.102 ) about the design initial condition @xmath146 by replacing @xmath147 by @xmath148 and expanding the result in a taylor series in @xmath149 about the point @xmath149=0 . below is a _",
    "mathematica _ run that performs this task .",
    "@xmath150}\\nonumber\\\\ & & \\frac{1}{2}+\\frac{x}{4}-\\frac{x^2}{8}+\\frac{x^3}{16}-\\frac{x^4}{32}+\\frac{x^5}{64}+o[x]^6\\nonumber\\\\\\end{aligned}\\ ] ]",
    "let us now compare the outputs of ( 7.103 ) and ( 7.105 ) . comparing the penultimate lines in each we see that the final time @xmath142 is the same in each case . comparing the last lines",
    "shows that the output @xmath123 for ( 7.105 ) is a pyramid whose first entry agrees with the last line of ( 7.103 ) .",
    "finally , all the entries in the pyramid output agree with the taylor coefficients in the expansion ( 7.104 ) .",
    "we see , in the case of numerical integration ( of a single differential equation ) , that replacing the dependent variable by a pyramid , with the initial value of the pyramid given by ( 7.108 ) , produces a taylor expansion of the final condition in terms of the initial condition .    what accounts for this near miraculous result ?",
    "it s the taylor rule described at the end of section 7.1.6 .",
    "we have already learned that to expand some function @xmath159 about some point @xmath34 we must evaluate @xmath160 .",
    "see ( 7.74 ) .",
    "we know that the final @xmath161 , call it @xmath162 , is an analytic function of the initial @xmath161 , call it @xmath163 , so that we may write @xmath164 where @xmath165 is the function that results from following the trajectory from @xmath166 to @xmath167 .",
    "therefore , by the taylor rule , to expand @xmath162 about @xmath168 , we must evaluate @xmath169 .",
    "that , with the aid of pyramids , is what the code ( 7.105 ) accomplishes .",
    "because of _ mathematica s _ built - in provisions for handling arrays , the work of the previous section can easily be extended to the case of several differential equations .",
    "consider , as an example , the two - variable case for which @xmath170 has the form @xmath171 the differential equations associated with this @xmath170 can be solved in closed form to yield , with the understanding that @xmath140 , the solution @xmath172 for the final time @xmath142 we find the result @xmath173    let us expand the solution ( 7.112 ) about the design initial conditions @xmath174 by writing @xmath175 doing so gives the results @xmath176 @xmath177    we will now explore how this same result can be obtained using the replacement rule applied to the operation of numerical integration . as before , we will label individual monomials by an integer @xmath40 .",
    "recall that table 8 shows our standard modified glex sequencing applied to the case of two variables .",
    "the _ mathematica _ code below shows , for our two - variable example differential equation , the application of numerical integration to pyramids . before describing the code in some detail ,",
    "we take note of the bottom two lines . when interpreted with the aid of table 8 , we see that the penultimate line of ( 7.117 ) agrees with ( 7.115 ) , and the last line of ( 7.117 ) nearly agrees with ( 7.116 ) .",
    "the only discrepancy is that for the monomial with label @xmath178 in the last line of ( 7.117 ) . in the _",
    "mathematica _ output it has the value @xmath179 while , according to ( 7.116 ) , the true value should be zero . this small discrepancy arises from the truncation error inherent in the rk4 algorithm , and becomes smaller as the step size h is decreased ( and ns is correspondingly increased ) , or if some more accurate integration algorithm is used .",
    "we conclude that , with the use of pyramids , it is also possible in the two - variable case to obtain taylor expansions of the final conditions in terms of the initial conditions .",
    "indeed , what is involved is again the taylor rule applied , in this instance , to the case of two variables .",
    "@xmath144;}\\nonumber\\\\ & & { \\tt needs[\\texttt{\"}combinatorica`\\texttt{\"}];}\\nonumber\\\\ & & { \\tt m = 2 ; p = 3;}\\nonumber\\\\ & & { \\tt gamma = compositions[0 , m];}\\nonumber\\\\ & & { \\tt do[gamma = join[gamma , reverse[compositions[d , m ] ] ] , \\{d , 1 , p , 1\\}];}\\nonumber\\\\ & & { \\tt l = length[gamma];}\\nonumber\\\\ & & { \\tt jsk[list\\_,k\\_]\\;:=}\\nonumber\\\\ & & { \\tt position[apply[and , thread[\\texttt{\\#1\\;<=\\;\\#2\\;\\&\\;}[\\texttt{\\#},k]]]\\;\\texttt{\\&\\;/@}\\;list , true]\\texttt{//}flatten;}\\nonumber\\\\ & & { \\tt b = table[jsk[gamma , gamma[[r ] ] ] , \\{r , 1 , l , 1\\}];}\\nonumber\\\\ & & { \\tt brev = reverse \\texttt{/@}\\ ; b;}\\nonumber\\\\ & & { \\tt prod[u\\ _ , v\\ _ ] : = table[u[[b[[k]]]].v[[brev[[k ] ] ] ] , \\{k , 1 , l , 1\\}];}\\nonumber\\\\ & & { \\tt f[z\\ _ , t\\ _ ] : = \\{-prod[z[[1 ] ] , z[[1 ] ] ] , 2.{\\;}prod[z[[1 ] ] , z[[2]]]\\};}\\nonumber\\\\ & & { \\tt h = .01;}\\nonumber\\\\ & & { \\tt ns = 100;}\\nonumber\\\\ & & { \\tt t = 0;}\\nonumber\\\\ & & { \\tt",
    "zd0 = \\{1.,2.\\};}\\nonumber\\\\ & & { \\tt c1 = table[kroneckerdelta[k,1],\\{k,1,l,1\\}];}\\nonumber\\\\ & & { \\tt x[1 ] = table[kroneckerdelta[k,2],\\{k,1,l,1\\}];}\\nonumber\\\\ & & { \\tt x[2 ] = table[kroneckerdelta[k,3],\\{k,1,l,1\\}];}\\nonumber\\\\ & & { \\tt zvar = \\{zd0[[1]]{\\;}c1 + x[1],zd0[[2]]{\\;}c1 + x[2]\\};}\\nonumber\\\\ & & { \\tt rk4;}\\nonumber\\\\ & & { \\tt t}\\nonumber\\\\ & & { \\tt zvar}\\nonumber\\\\ & & 1.\\nonumber\\\\ & & \\{\\{0.5 , 0.25,0 . , -0.125 , 0 . ,",
    ", 0.0625 , 0.,0.,0,\\},\\nonumber\\\\ & & { \\;}{\\;}\\{8.,8.,4.,2.,4.,0.,-1.16563\\times10^{-7},1.,0.,0.\\}\\}\\end{aligned}\\ ] ]    let us compare the structures of the routines for the single variable case and multi ( two ) variable case as illustrated in ( 7.105 ) and ( 7.117 ) .",
    "the first difference occurs at line 3 where the number of variables @xmath0 and the maximum degree @xmath180 are specified . in ( 7.117 ) @xmath0 is set to 2 because we wish to treat the case of two variables , and @xmath180 is set to 3 simply to limit the lengths of the output arrays .",
    "the next difference occurs in line 12 where the right side @xmath132 of the differential equation is specified .",
    "the major feature of the definition of @xmath132 in ( 7.117 ) is that it is specified as two pyramids because the right side of the definition has the structure @xmath181 where each item @xmath182 is an instruction for computing a pyramid . in particular ,",
    "the two pyramids are those for the two components of @xmath183 as given by ( 7.110 ) and use of the replacement rule , @xmath184 , z[[1]]]},\\ ] ] @xmath185 , z[[2]]]}.\\ ] ] the next differences occur in lines 16 through 20 of ( 7.117 ) . in line 16 , since specification of the initial conditions now requires two numbers , see ( 7.113 ) , @xmath157 is specified as a two - component array . in lines 17 and 18 of ( 7.105 ) the pyramids @xmath186 and @xmath187 are set up explicitly for the case @xmath152 . by contrast , in lines 17 through 19 of ( 7.117 ) , the pyramids @xmath186 , @xmath188}$ ] , and @xmath189}$ ] are set up for general @xmath180 with the aid of the table command and the kronecker delta function . recall ( 7.62 ) and observe from tables 4 , 7 , and 8 that , no matter what the values of @xmath0 and @xmath180 , the constant monomial has the label @xmath190 and the monomial @xmath191 has the label @xmath192 . moreover , as long as @xmath193 and no matter what the value of @xmath180 , the @xmath194 monomial has the label @xmath195 .",
    "finally , compare line 19 in ( 7.105 ) with line 20 in ( 7.117 ) , both of which define the initial @xmath123 . we see that the difference is that in ( 7.105 ) @xmath123 is defined as a single pyramid while in ( 7.117 ) it is defined as a pair of pyramids of the form @xmath196 .",
    "most remarkably , all other corresponding lines in ( 7.105 ) and ( 7.117 ) are the same . in particular , the _ same _ rk4 code , namely that given by ( 7.99 ) ,",
    "is used in the scalar case ( 7.103 ) , the single pyramid case ( 7.105 ) , and the two - pyramid case ( 7.117 ) .",
    "this multi - use is possible because of the convenient way in which _ mathematica _ handles arrays .",
    "we conclude that the pattern for the multivariable case is now clear .",
    "only the following items need to be specified in an @xmath0 dependent way :    * the value of @xmath0 . * the entries in @xmath132 with entries entered as an array @xmath197 of @xmath0 pyramids .",
    "* the design initial condition array @xmath157 . * the pyramids for @xmath186 and @xmath188}$ ] through @xmath198}$ ] . * the entries for the initial @xmath123 specified as an array + @xmath199 } \\;{\\tt c1 + x[1]}{\\tt , zd0[[2 ] ] } \\;{\\tt c1 + x[2]}{\\tt , \\cdots , zd0[[m ] ] } \\;{\\tt c1 + x[m]\\}}$ ] of @xmath0 pyramids .",
    "let us now apply the methods just developed to the case of the duffing equation with parameter dependence as described by the relations ( 6.12 ) through ( 6.17 ) .",
    "_ mathematica _ code for this purpose is shown below . by looking at the final lines that result from executing this code",
    ", we see that the final output is an array of the form @xmath200 .",
    "that is , the final output is an array of three pyramids .",
    "this is what we expect , because now we are dealing with three variables .",
    "see line 3 of the code , which sets m=3 . also , for convenience of viewing , results are calculated and displayed only through third order as a consequence of setting @xmath201 .",
    "@xmath202,\\{k,1,l,1\\}];}\\nonumber\\\\ & & { \\tt x[1 ] = table[kroneckerdelta[k,2],\\{k,1,l,1\\}];}\\nonumber\\\\ & & { \\tt x[2 ] = table[kroneckerdelta[k,3],\\{k,1,l,1\\}];}\\nonumber\\\\ & & { \\tt x[3 ] = table[kroneckerdelta[k , 4 ] , \\{k , 1 , l , 1\\}];}\\nonumber\\\\ & & { \\tt zvar = \\{zd0[[1]]{\\;}c1 + x[1 ] , zd0[[2]]{\\;}c1 + x[2 ] , zd0[[3]]{\\;}c1 + x[3]\\};}\\nonumber\\\\ & & { \\tt rk4;}\\nonumber\\\\ & & { \\tt t}\\nonumber\\\\ & & { \\tt zvar}\\nonumber\\\\ & & 2\\pi\\nonumber\\\\ & & \\{\\{-0.0493158 , 0.973942 , -0.110494 , 5.51271 , 3.54684 , 3.46678 , \\nonumber\\\\ & & { \\;}{\\;}{\\;}11.2762 , 2.36463 , 1.0985 , 23.3332 , -1.03541 , -3.23761 , -12.8064 , \\nonumber\\\\ & & { \\;}{\\;}{\\;}4.03421 , -23.4342 , -17.8967 , 1.96148 , 5.07403 , -36.9009 , 25.1379\\},\\nonumber\\\\ & & { \\;}{\\;}\\{0.439713 , 1.05904 , 0.427613 , 3.3177 , 0.0872459 , 0.635397 , -3.02822 , \\nonumber\\\\ & & { \\;}{\\;}{\\;}1.77416 , -4.10115 , 3.16981 , -2.43002 , -5.33643 , -7.77038 , -6.08476,\\nonumber\\\\ & & { \\;}{\\;}{\\;}-0.541465 , -21.1672 , -1.4091 , -9.54326 , 14.6334 , -39.2312\\},\\nonumber\\\\ & & { \\;}{\\;}\\{0.5 , 0 , 0 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0\\}\\}\\nonumber\\\\\\end{aligned}\\ ] ]      the remaining lines of the code require little comment .",
    "line 20 sets the initial time to @xmath210 , and line 21 defines @xmath108 in such a way that the final value of @xmath2 will be @xmath213 .",
    "line 22 establishes the parameter values @xmath214 and @xmath215 , which are those for figure 4 .",
    "line 23 specifies that the design initial condition is @xmath216 and consequently @xmath217 see ( 6.3 ) .",
    "also , it follows from ( 6.2 ) and ( 6.5 ) that @xmath218 @xmath219 next , lines 24 through 28 specify that the expansion is to be carried out about the initial conditions ( 7.124 ) .",
    "finally , line 29 invokes the rk4 code given by ( 7.99 ) .",
    "that is , as before , _ no _ modifications are required in the integration code .",
    "a few more comments about the output are appropriate .",
    "line 32 shows that the final time @xmath2 is indeed @xmath213 , as desired .",
    "the remaining output lines display the three pyramids that specify the final value of zvar . from the first entry in each pyramid",
    "we see that @xmath220 @xmath221 @xmath222 when there are no deviations in the initial conditions .",
    "the remaining entries in the pyramids are the coefficients in the taylor series that describe the changes in the final conditions that occur when changes are made in the initial conditions ( including the parameter @xmath223 ) .",
    "we are , of course , particularly interested in the first two pyramids .",
    "the third pyramid has entries only in the first place and the fourth place , and these entries are the same as those in the third pyramid pyramid for @xmath123 at the start of the integration , namely those in @xmath224{\\;}c1+x[3]}$ ] . the fact that the third pyramid in @xmath123 remains constant is the expected consequence of ( 6.17 ) .    we should also describe how the @xmath225 employed in section 6.2 was actually computed .",
    "it could have been computed by setting @xmath226 in ( 7.120 ) and specifying a large number of steps @xmath227 to insure good accuracy . of course , when @xmath226 , the pyramids are large .",
    "therefore , one does not usually print them out , but rather writes them to files or sends them directly to other programs for further use .    however , rather than using rk4 in ( 7.120 ) , we replaced it with an adaptive 4-@xmath228 order runge - kutta - fehlberg routine that dynamically adjusts the time step @xmath108 during the course of integration to achieve a specified local accuracy , and we required that the error at each step be no larger than @xmath229 .",
    "like the rk4 routine , the runge - kutta - fehlberg routine , when implemented in _",
    "mathematica _ , has the property that it can integrate any number of equations both in scalar variable and pyramid form without any changes in the code .      at this point",
    "it may not be obvious to the reader that the use of pyramids in integration routines to obtain taylor expansions is the same as integrating the complete variational equations .",
    "we now show that the integration of pyramid equations is equivalent to the forward integration of the complete variational equations . for simplicity , we will examine the single variable case with no parameter dependence .",
    "the reader who has mastered this case should be able to generalize the results obtained to the general case .    in the single variable case with no parameter dependence ( 2.1 )",
    "becomes @xmath230 let @xmath30 be some design solution and introduce a deviation variable @xmath231 by writing @xmath232 then the equation of motion ( 7.131 ) takes the form @xmath233 also , the relations ( 2.4 ) and ( 2.5 ) take the form @xmath234 where @xmath165 has an expansion of the form @xmath235 finally , ( 2.6 ) and ( 2.7 ) become @xmath236 @xmath237 and ( 2.8 ) becomes @xmath238 insertion of ( 7.138 ) into both sides of ( 7.137 ) and equating like powers of @xmath239 now yields the set of differential equations @xmath240 where the ( universal ) functions @xmath241 are given by the relations @xmath242 the equations ( 7.136 ) and ( 7.139 ) are to be integrated from @xmath243 to @xmath167 with the initial conditions @xmath244",
    "@xmath245 @xmath246    let us now consider the numerical integration of pyramids . upon some reflection",
    ", we see that the numerical integration of pyramids is equivalent to finding the numerical solution to a differential equation with pyramid arguments . for example , in the single - variable case , let @xmath247 be the pyramid appearing in the integration process .",
    "then , its integration is equivalent to solving numerically the pyramid differential equation @xmath248    we now work out the consequences of this observation . by the inverse of the replacement rule , we may associate a taylor series with the pyramid @xmath247 by writing @xmath249 by ( 1.45 ) it is intended that the entries in the pyramid @xmath247 be used to construct a corresponding taylor series with variable @xmath149 . in view of ( 7.108 ) , there are the initial conditions @xmath250 @xmath251",
    "@xmath252    we next seek the differential equations that determine the time evolution of the @xmath253 . under the inverse replacement rule",
    ", there is also the correspondence @xmath254 we have found a representation for the left side of ( 7.144 ) .",
    "we need to do the same for the right side .",
    "that is , we need the taylor series associated with the pyramid @xmath255 . by the inverse replacement rule",
    ", it will be given by the relation @xmath256 here it is understood that the right side of ( 7.150 ) is to be expanded in a taylor series about @xmath257 . from ( 7.134 ) , ( 7.135 ) , and ( 7.140 ) we have the relations @xmath258 therefore , there is the inverse replacement rule @xmath259    upon comparing like powers of @xmath149 in ( 7.149 ) and ( 7.152 ) , we see that the pyramid differential equation ( 7.144 ) is equivalent to the set of differential equations @xmath260",
    "@xmath261    finally , compare the initial conditions ( 7.141 ) through ( 7.143 ) with the initial conditions ( 7.146 ) through ( 7.148 ) , and compare the differential equations ( 7.136 ) and ( 7.139 ) with the differential equations ( 7.153 ) and ( 7.154 ) .",
    "we conclude that that there must be the relations @xmath262 @xmath263 we have verified , in the single variable case , that the use of pyramids in integration routines is equivalent to the solution of the complete variational equations using forward integration . as stated earlier , verification of the analogous @xmath0-variable result is left to the reader .",
    "we also observe the wonderful convenience that , when pyramid operations are implemented and employed , it is not necessary to explicitly work out the forcing terms @xmath264 and the functions @xmath265 , nor is it necessary to set up the equations ( 3.6 ) .",
    "all these complications are handled implicitly and automatically by the pyramid routines .",
    "poincar analyticity implies that transfer maps arising from ordinary differential equations can be expanded as taylor series in the initial conditions and also in whatever parameters may be present .",
    "section 2 showed that the determination of these expansions is equivalent to solving the complete variational equations , and sections 3 and 4 showed that the complete variational equations can be solved either by forward or backward integration .",
    "sections 5 and 6 applied this procedure for the duffing stroboscopic map and found , remarkably , that an @xmath266 order polynomial approximation to this map produced an infinite period doubling cascade and apparent strange attractor that closely resembled those of the exact map .",
    "a final section described computer methods for automatically setting up and numerically integrating the complete variational equations .",
    "99 j. barrow - green , _ poincar and the three body problem _",
    ", american mathematical society ( 1997 ) .",
    "f. browder , edit . , _ the mathematical heritage of henri poincar , proceedings of symposia in pure mathematics of the american mathematical society _ * 39 * , parts 1 and 2 , american mathematical society ( 1983 )",
    ". h. poincar , _ new methods of celestial mechanics , _ parts 1 , 2 , and 3 .",
    "( originally published as les mthodes nouvelles de la mchanique cleste . )",
    "american institute of physics _",
    "history of modern physics and astronomy _ ,",
    "volume 13 , d. l. goroff , edit .",
    ", american institute of physics ( 1993 ) .",
    "francis j. murray and kenneth s. miller , _ existence theorems for ordinary differential equations _ , new york university press and interscience publishing co. ( 1954 ) .",
    "the method of backward integration was discovered by f. neri circa 1986 .",
    "a. dragt , _ lie methods for nonlinear dynamics with applications to accelerator physics _ , ( 2011 ) , available at http://www.physics.umd.edu/dsat/ r.  neidinger , `` computing multivariable taylor series to arbitrary order '' , _ proc . of intern . conf . on applied programming languages _ , san antonio , pp",
    "134 - 144 ( 1995 ) .",
    "d. kalman and r. lindell ,  a recursive approach to multivariate automatic differentiation \" , _ optimization methods and software _ , volume 6 , issue 3 , pp .  161 - 192 ( 1995 ) .",
    "m. berz , `` differential algebraic description of beam dynamics to very high orders '' , _ particle accelerators _ 24 , p. 109"
  ],
  "abstract_text": [
    "<S> according to a theorem of poincar , the solutions to differential equations are analytic functions of ( and therefore have taylor expansions in ) the initial conditions and various parameters providing the right sides of the differential equations are analytic in the variables , the time , and the parameters . </S>",
    "<S> we describe how these taylor expansions may be obtained , to any desired order , by integration of what we call the _ complete _ variational equations . as illustrated in a duffing equation stroboscopic map example </S>",
    "<S> , these taylor expansions , truncated at an appropriate order thereby providing polynomial approximations , can well reproduce the behavior ( including infinite period doubling cascades and strange attractors ) of the solutions of the underlying differential equations . </S>"
  ]
}
{
  "article_text": [
    "mfa can contribute significantly to the comprehension , both qualitative and quantitative , of a metabolic network  @xcite , but before the creation of the elementary metabolites unit ( emu ) framework @xcite the high computation cost of nonstationary mfa prevented the development of efficient software .",
    "however , topological network reduction methods ( such as the one that allows the emu framework ) are not the only way of curbing the computation cost of nonstationary mfa .",
    "given that both stationary and nonstationary mfa belong to the class of general inverse problems where measurements depend on parameters through a state equation , there is a technique , namely the adjoint approach @xcite , that may be used to greatly improve the computation of different kinds of derivatives .",
    "the main contribution of this paper is demonstrating that independently of the topological network reduction , the adjoint approach considerably speeds up the computation of the gradient residual sum of squares ( rss ) , meaning that the entire process of estimating unknown parameters is accelerated significantly .",
    "we show that in the ( usual ) direct approach the sum of the times required for the state and gradient calculations is dominated by the computation time of the gradient itself , whereas in the adjoint approach the two computation times are of the same order .",
    "while the direct approach has a cost that is unavoidably proportional to the number  @xmath0 of unknown parameters ( fluxes and pool sizes ) , in the case of the adjoint approach the cost of the gradient computation is independent of  @xmath0 .",
    "the algorithms described below are implemented in the accompanying open source software ` sysmetab ` , which can handle stationary and nonstationary mfa .    as theoretical results are asymptotical and can be degraded by practical implementation bottlenecks , we perform a time analysis for both gradient computations on the central metabolism of _",
    "e. coli _ , in which we compare overall computation times for the direct and adjoint approaches with respect to labeling state sizes : reduced vs. full cumomer set and stationary vs. nonstationary data .",
    "we contrast estimated flux values for the stationary data with the values obtained from the reference softwares ` 13cflux2 ` @xcite and ` influx_s ` @xcite , which do not implement the adjoint approach .",
    "we detail the distribution of running time on the network mentioned above and on a larger , poorly defined version of this network .",
    "we show that in this particular context , when multiple flux estimations from different perturbed data are made repeatedly ( i.e. the monte carlo method is applied ) , ` sysmetab ` is competitive with other software . for parameter estimations using time - dependent labeling data generated by stationary flux estimations and realistic pool size values , the ratio of running times from one approach to the other exceeds 20 .    the paper is organized as follows : in section  [ sec : math ]",
    ", we introduce the mathematical structure of @xmath1c mfa .",
    "mathematical aspects of the algorithms implemented in ` sysmetab ` are given in sections [ sec : mfa ] and [ sec : nmfa ] respectively for stationary and nonstationary mfa , and their complexity is compared .",
    "implementation details are described in section [ sec : impl ] .",
    "section [ sec : num ] presents numerical results obtained by ` sysmetab ` .",
    "the aim of @xmath2 metabolic flux analysis is to determine fluxes @xmath3 , pool sizes @xmath4 ( in the nonstationary case ) , expressed as a vector of @xmath0 parameters @xmath5 , such that experimental labeling data @xmath6 and other measurements @xmath7 , e.g. input / output fluxes and pool sizes , are best fitted to their simulated values .",
    "this means minimizing the objective function @xmath8 where @xmath9 and @xmath10 are given functions and @xmath11 denotes the ( possibly time - dependent ) @xmath12 labeling states of the metabolic network , implicitly defined by the state equation @xmath13 this equation takes the form of a system of algebraic or ordinary differential equations , respectively for stationary or nonstationary metabolic flux analysis .",
    "the notations @xmath14 and @xmath15 are used for the norms in the space of labeling and non - labeling measurements , denoted by @xmath16 and @xmath17 respectively .",
    "these norms ( may ) model variations due to experimental noise by introducing weighting covariance matrices . in both the stationary and nonstationary cases the spaces @xmath16 and @xmath17 are finite - dimensional normed vector spaces , hence @xmath6 and @xmath7 can be considered as vectors containing real measured data .",
    "below , @xmath18 denotes the space of admissible parameters , i.e. the space describing realistic physical parameters comprising constraints on fluxes , such as the stoichiometric equations for fluxes . in order to find @xmath19 different optimization methods can be considered . finding @xmath20 can be performed by determining the solution of successive linearized problems , as the in gauss - newton method ( gn ) with a first - order taylor expansion of @xmath21 with respect to @xmath22 by the computation of the sensitivity matrix @xmath23 . in the nonstationary case",
    "this @xmath24 matrix is time - dependent and satisfies a system of differential equations , which means that it is very expensive to compute .",
    "in contrast , if the minimization is considered as a general nonlinear optimization problem , only the gradient of @xmath25 needs to be computed , as in the broyden - fletcher - goldfarb - shanno ( bfgs ) and sequential quadratic problem ( sqp ) methods . in the 1970s",
    "the adjoint state method was developed to compute the gradient in the situation frequently encountered in control theory where the function to minimize depends indirectly on parameters through state variables , with a minimal cost  @xcite .",
    "this cost is asymptotically independent of the number of parameters @xmath0 , and is equivalent to the cost of a single - state equation , while using the sensitivity matrix generates a cost proportional to @xmath0 .",
    "the cumomer fraction variables  @xmath26 model introduced in  @xcite means that the structure of balance equations in stationary mfa is given by a cascade of linear algebraic equations . if @xmath27 denotes the vector of cumomer fractions of weight @xmath28 , @xmath29 the vector of input cumomers of weight @xmath28 , and @xmath30 , @xmath31 the sequences @xmath32 and @xmath33 , respectively , then the state equation   can be written as@xmath34 where the function @xmath35 is affine with respect to @xmath27 as @xmath36 the matrix @xmath37 and vector @xmath38 being determined by the structure of the metabolic network under consideration . from the forward cascade structure of , we successively obtain @xmath39 , @xmath40,  ,@xmath41 by solving at each step a system of linear equations . for the sake of conciseness",
    "we do not consider the terms which explicitly depend on @xmath22 in , but only labeling measurements . in this case , measurements linearly depend on the state variable , so that the functional to minimize is of the form @xmath42 for a given matrix @xmath43 depending on the measurement model .",
    "for a given flux vector @xmath3 , we first need to solve the state equation , which provides the cumomer vector @xmath44 . the sequence of derivatives @xmath45 is then computed by solving each step of the forward cascade ( the sum in the second row vanishes for @xmath46 ) @xmath47 which is obtained by implicit differentiation of with respect to  @xmath3 . finally , the gradient of @xmath25 is computed as @xmath48 where the symbol @xmath49 denotes vector and matrix transposition .",
    "the adjoint approach is based on the lagrangian functional @xmath50 where @xmath51 is the sequence of adjoint variables .",
    "expanding the adjoint equation @xmath52 @xcite leads to the backward cascade ( the sum vanishes for @xmath53 ) @xmath54\\end{split } \\right.\\ ] ] for a given @xmath3 , equations are solved backwards , once the cumomer vector @xmath44 has been computed from .",
    "this procedure provides successively @xmath55 .",
    "the gradient @xmath56 can then be obtained by the solutions of the @xmath57 previous linear systems as follows @xmath58 the adjoint approach can also be used to compute the derivative of any function of @xmath59 with respect to @xmath3 without requiring @xmath60 to be computed .",
    "one example of this would be the output sensitivity matrix @xmath61 , which is used in first order sensitivity analysis @xcite .",
    "this matrix is also used at each iteration of the optimization method to compute the descent direction when a gauss - newton type algorithm is used @xcite ) . in both usages",
    ", the adjoint approach allows @xmath62 to be computed as a fraction @xmath63 of the usual cost , where @xmath64 is the number of measurements and @xmath12 the size of cumomer vector @xmath59 .",
    "both approaches involve the computation of the state @xmath44 in the computation of @xmath65 . to achieve this , the matrices",
    "@xmath66 need to be factorized and the derivatives @xmath67 and @xmath68 computed for @xmath69 . the crucial difference between the two approaches is to be found in the two remaining equations : for a given  @xmath28 , equation   involves solving a linear system whose right - hand side is a matrix with @xmath0 columns , whereas in equation   the right - hand side is a ( single ) column vector . a subsequent analysis of equations and shows that even though the elementary operations are identical , the computation cost of equation   differs from   in that  @xmath70 is sparse , unlike  @xmath71 which is full . while the difference remains negligible for small metabolic networks , our numerical results show that the larger the network , the more significant the reduction in computation cost .",
    "we show in the following section that for nonstationary mfa the improvements obtained from the adjoint approach are of the same magnitude .",
    "but , since the problem is time - dependent , the overall computation cost increases considerably . in order for the problem to become tractable , the adjoint approach is essential .",
    "in nonstationary mfa , the balance equations are modeled by a cascade of ordinary differential equations given for @xmath72  by @xmath730,t ] .",
    "\\end{split } \\label{eq : timecasc } \\right.\\ ] ] to simplify the presentation we will consider that the pool sizes are known .",
    "we consider that labeling measurements @xmath74 are made at times @xmath75 , where @xmath76 and @xmath77 , so that the functional to minimize is given by @xmath78 where @xmath79 is the solution of at time @xmath80 .    since the cumomer fractions @xmath27 are time - dependent , the space @xmath81 of the labeling states is no longer a finite - dimensional vector space as in stationary mfa , but an infinite - dimensional functional space @xmath82)$ ] given by square - integrable functions .",
    "the inner product @xmath83 in @xmath81 is the usual inner product in @xmath82)$ ] , i.e. @xmath84 .      as in the stationary case ,",
    "the direct approach is based on the calculation of the partial derivative @xmath85 with respect to the flux @xmath3 .",
    "when the sequence @xmath86 is time - dependent , this approach involves a cascade of ordinary differential equations ( ode ) @xmath87 for @xmath88 , obtained by the differentiation of with respect to the flux parameter @xmath3 . in , the sum in the second row vanishes for @xmath46 , and @xmath89 denotes the time derivative of @xmath85 . the initial condition related to",
    "is given , for all @xmath28 such that @xmath88 , by @xmath90 .",
    "the gradient of @xmath25 is expressed as @xmath91      in the adjoint approach , the @xmath57 odes are incorporated into a lagrangian functional as follows @xmath92 the adjoint equation is obtained by expanding @xmath93 , which leads to the following backwards - in - time ode cascade @xmath94 for @xmath88 , where the second row vanishes for @xmath53 and the equalities read for @xmath95 . the final condition is given for each @xmath28 by @xmath96 and the following jump conditions @xmath97=c_k^\\top ( cx(\\tau_j)-y_j ) , \\label{eq : iniadj}\\ ] ] occur for @xmath98 . from -",
    "we obtain the functions @xmath99 which enter into the gradient of @xmath25 ( with respect to @xmath3 ) as follows @xmath100      both the direct and the adjoint approaches in nonstationary mfa require state @xmath101 to be computed , and this can be done efficiently using discrete schemes . from a time grid @xmath102 , with @xmath103 ( @xmath104 denoting the total number of points sampling the interval @xmath105 $ ] ) , discrete schemes are based on approximating the integral of the right - hand side of over @xmath106 $ ] . for the sake of simplicity we consider the implicit euler scheme , but a similar approach can be used with schemes having a greater order , while also taking into account the possible stiffness of the state equation , such as the implicit trapezoidal rule @xcite or implicit runge - kutta schemes @xcite .    denoting the approximations @xmath107 and @xmath108 ,",
    "the implicit euler scheme gives the following discrete version of   @xmath109 where the second row has to be considered for @xmath110 , and the objective function is given by @xmath111 where @xmath112 , i.e. each measurement time is assumed to correspond to a sampling point of the time grid .",
    "in the direct approach , implicit derivation of scheme with respect to @xmath3 and applying the euler scheme to the continuous time equation provides the approximated derivatives @xmath71 at sampling points @xmath113 by solving @xmath114 \\end{split } \\right .",
    "\\label{eq : discrdirect}\\ ] ] combined with the initial condition @xmath115 for @xmath116 . from the time - dependent state sequence and the time - dependent state derivative sequence , the gradient is obtained by @xmath117 in the adjoint approach , the chosen discrete scheme generates @xmath118 equalities incorporated into the lagrangian functional by @xmath118 discrete lagrange multiplier @xmath119 . considering all cumomer fractions of weight @xmath28",
    ", we obtain the following discrete version of the lagrangian functional corresponding to @xmath120 it should be emphasized that the discrete version of must be established by deriving the discrete lagrangian , and not simply by choosing discrete schemes corresponding to and .",
    "the discrete adjoint equation is completely determined once a discrete scheme is chosen for the state equation . for the euler scheme and the lagrangian , the discrete adjoint scheme is thus given for @xmath121 by @xmath122 with final condition @xmath123 and @xmath124 which determines  @xmath119 for each weight @xmath28 .",
    "finally , the gradient of @xmath25 at @xmath3 is given by @xmath125      as in the stationary case , the computation of @xmath65 in both the direct and the adjoint approaches involves computing the time - dependent state @xmath59 , and the associated cost will depend on the discrete scheme that is chosen . once again , the difference between the two approaches lies in the cascades and : in the direct approach we have @xmath57 differential equations with @xmath0-column matrices , whereas in the direct approach the left - hand side of contains 1-column vectors .",
    "hence , at the very least , we should expect a gain equivalent to the gain obtained in the stationary case .",
    "another interesting aspect of the adjoint approach appears when the pool sizes are also unknown : in the direct approach equation has to be implicitly derived with respect to @xmath126 , which leads to a more complex system to express and to solve than .",
    "in contrast , the structure of the system is independent of the actual unknown parameters in the adjoint approach and only the final step changes .",
    "the methods and algorithms described in this paper have been included in the ` sysmetab ` software package , distributed under an open source license via http://forge.scilab.org/index.php/p/sysmetab/ and available for linux and macosx platforms .    in order to be processed by ` sysmetab ` , metabolic network description , carbon atom transition map and measurements ( stationary or nonstationary mass spectrometry ( ms ) or nuclear magnetic resonance spectroscopy ( nmr ) data ) need to be coded in a plain text xml that respects the fml ( flux markup language ) format developed for the ` 13cflux2 ` software package @xcite ( whereas ` 13cflux2 ` only handles stationary problems , the fml input format also allows nonstationary data to be described ) . for stationary data , ftbl files ( input format of the texttt13cflux previous version )",
    "are also supported , and these are automatically converted to fml format .",
    "the ` sysmetab ` software parses the input file and generates a flux identification program in the scilab language @xcite that is specific to the network under consideration .",
    "after execution , results are output to a plain text xml file conforming to the forward simulation markup language developed for the ` 13cflux2 ` software .",
    "this file can easily be converted into other file formats , and the fact that ` sysmetab ` is a command - line tool makes scripting and batch processing straightforward .",
    "using the adjoint approach is not the only innovative feature of the software .",
    "another novel aspect is the technique chosen for generating the code : starting from the original fml file , the scilab program is entirely generated using xsl transformations ( http://www.w3.org/tr/xslt ) .",
    "these transformations are specified in xsl stylesheets , written in another xml dialect .",
    "xsl is very different from other programming languages in use today in that it is a declarative ( as opposed to imperative ) language .",
    "xsl stylesheets have the advantage of being explicit , readable by humans and easy to debug and maintain .",
    "the program is generated in several steps , the final step being the transformation of the xml program description into the actual scilab program .",
    "this final step may easily be adapted for other script languages such as matlab ( http:/www.mathworks.com ) or julia ( http://julialang.org ) .",
    "the generated program makes full use of scilab s potential for improving the speed of calculations : vectorization and sparse matrices are used , and umfpack multi - frontal lu factorization @xcite is used for calculating the state and adjoint state .",
    "the optimization phase is performed using the feasible sequential quadratic programming ( fsqp ) algorithm @xcite , which is available as a scilab module .",
    "linearized statistics or monte - carlo simulations can be used to determine confidence intervals on estimated fluxes .",
    "where monte - carlo simulations are used , scilab allows for parallel execution of the optimization algorithm in a multi - core architecture .",
    "as an example , we considered the central metabolism of _ e. coli _ , described in @xcite and provided in the network examples in the ` influx_s ` distribution ( the file ` e_coli.ftbl ` ) .",
    "the experimental stationary data consist of mass spectrometry measurements of the intermediate metabolites suc , icit , pep , pga , frubp , glc6p , fru6p , rib5p , gnt6p , and of the extracellular flux of acetate . for the adjoint vs. direct comparison in the stationary case ,",
    "the original data were used . for the nonstationary case ,",
    "synthetic noisy data were generated by a forward nonstationary simulation using the estimated values of flux from the stationary data and some realistic pool sizes ( the file ` e_coli_ns.fml ` in the ` sysmetab ` distribution ) .",
    "the results presented in this section were obtained on a dedicated linux server hosting two ten - core xeon e5 - 2660 v2 ( 2.20 ghz ) processors with scilab 5.5.2 . unless explicitly stated otherwise , computations used only one core of the processor , and every reported running time is the median over ten runs .",
    "although the running times themselves may be very different if different hardware is used , we assume that the ratios between the different running times will remain similar .",
    "llll & direct & adjoint & ratio +   + reduced network + state computation & 1.5 & 1.5 & 1 + cascade vs. & 6 & 0.35 & 17.5 + gradient assembly vs. & 0.9 & 0.05 & 17.2 + total & 8.4 & 1.9 & 4.47 +   + full network + state computation & 3.5 & 3.5 & 1 + cascade vs. & 47.2 & 1.5 & 31 + gradient assembly vs. & 4.2 & 0.2 & 19 + total & 55 & 5.2 & 10.6 +   +    table [ tab : ratios ] compares the average computation times from steps - in the direct approach with steps - in the adjoint approach .",
    "we report the computation times required for solving the state equation so that the overall times of the two approaches may be compared . in table",
    "[ tab : ratios ] , time results from the reduced network ( using the backwards tracing method @xcite ) of 1069 cumomers are contrasted with those obtained from the full original network of 5455 cumomers .    since there are almost five times as many cumomers in the full network as in the reduced network , the time needed to compute the state derivative rises .",
    "in the direct approach , the contribution of this step to the overall time increases the ratio between the two approaches to approximately 10 . in the adjoint approach ,",
    "the size of the state derivative computation is in relation relation to overall time is smaller .",
    "the distribution of overall time reported in table [ tab : ratios ] clearly shows the efficiency of the adjoint computation in comparison with the direct computation .",
    "lrll & direct & adjoint & ratio +   + reduced network + state computation & 21 & 21 & 1 + cascade vs. & 948 & 15 & 60 + gradient assembly vs. & 11 & 16 & 0.70 + total & 980 & 53 & 18.4 +   + full network + state computation & 87 & 87 & 1 + cascade vs. & 11214 & 178 & 63 + gradient assembly vs. & 118 & 90 & 1.3 + total & 11420 & 355 & 32 +   +    using the same network , we obtained estimated flux values from stationary data ( given in the next section ) and combined them with arbitrary pool size values comprising pool size measurements available in @xcite .",
    "the resulting values were used to simulate the time course of labeling states .",
    "we obtained the data by running the implicit ode scheme up to a fixed terminal time @xmath127 , and selecting the simulated measurements at time values  @xmath128 .",
    "gaussian noise was then added by considering the standard deviation values of each of the original stationary labeling state data values .",
    "the different time values comprise ten equally distributed values up to @xmath129 seconds , namely @xmath130 for @xmath131 .",
    "we make use of the unconditionally stable property of the implicit euler scheme in order to set the time step @xmath10 to @xmath132 .",
    "other experiments show that the outcome @xmath59 does not vary significantly for smaller values of @xmath10 .    for the gradient computation , and more generally for the parameter estimations , we chose a value of @xmath10 larger than that used to generate the simulated data , typically @xmath133 , so that the time discretization of the grid is not the same as for the forward problem .",
    "applying the same computation time analysis to these time - dependent data that we applied in the case of stationary mfa , we report the time distribution of the different steps of the gradient computation : state computation , cascade computation and gradient assembly , namely , , for the time - dependent direct approach , and , , for the time - dependent adjoint approach .    for the reduced _",
    "e. coli _ network , associated computation times are presented in table  [ tab : nonstat ] . as expected ,",
    "the time required to compute the state derivative using the direct method ( row 2 ) is greater than the stationary cascade cost ( see the second row of table  [ tab : ratios ] ) multiplied by the overall number of time steps ( i.e. 100 ) .",
    "the cost of the state derivative ( direct ) cascade in the nonstationary case is in fact more than 150 times the cost of one stationary ( direct ) cascade .",
    "the ratio between the direct approach and the adjoint approach is 60 , which demonstrates the efficiency of the adjoint approach .",
    "the ratio of over 18 for overall gain is seen to be significantly better than the ratios obtained in the stationary case : the adjoint approach benefits from the nonstationary case , while the direct gradient computation , as expected , is seen to be severely time consuming .",
    "llll * software * & ` influx_s ` & ` sysmetab ` & ` 13cflux2 ` +   + free fluxes + glucupt_1.n & 0.80651342 & 0.80651338 & 0.80634528 + gnd.n & 0.14223488 & 0.14223479 & 0.13804339 + out_ac.n & 0.21300000 & 0.21300001 & 0.21299847 + pyk.n & 1.54425504 & 1.54425507 & 1.52116680 + zwf.n & 0.14233488 & 0.14233479 & 0.14145512 + ald.x & 0.72497526 & 0.72497650 & 0.89824047 + eno.x & 999 & 999 & 98486.1688 + fum_a.x & 0.43135328 & 0.43136935 & 0.40973977 + ppc.x & 0.17317878 & 0.17317925 & 0.17122549 + ta.x & 0.56653486 & 0.56653403 & 0.56756226 + tk1.x & 0.17878854 & 0.17878863 & 0.17125450 + tk2.x & 0 & 0 & 0.00213 +   + final rss + & 61.5141593 & 61.5141593 & 62.0877059 +    after comparing the adjoint and the direct approach in ` sysmetab ` we consider its validation by performing the complete estimation from stationary data .",
    "the provided ` e_coli.ftbl ` file was processed in ` influx_s ` with the ` --emu ` command line option .",
    "in addition , after conversion to the fml format , it was processed first with the last version of ` 13cflux2 ` with default options and then in ` sysmetab ` with the command line options ` --reg=0 ` ( the default regularization term is not added to the rss ) . table  [ tab : compstat ] presents the flux values obtained after optimization , ( exchange fluxes given by ` influx_s ` have been converted from normalized @xmath134 values to @xmath135 interval ) ) and the final value of the rss function @xmath136 .    as the exchange flux",
    "eno.x is nearly non - identifiable , the default upper bound is reached by ` sysmetab ` and ` influx_s ` .",
    "we tried to add the constraint explicitly in the fml file before running ` 13cflux2 ` , but the optimization stopped with a very large value of the rss .",
    "we therefore do not include ` 13cflux2 ` in the discussion below , since we were not able to solve this problem .",
    "as ` influx_s ` and ` sysmetab ` give very similar results , we compare their respective behavior in terms of overall computation time , which includes code generation , optimization to obtain the optimal flux values , and linear statistics to obtain their confidence intervals . on the well - defined and quickly converging example of ` e_coli.ftbl ` , the fastest is ` influx_s ` ( 6.7 vs. 11.9 seconds for ` sysmetab ` ) .",
    "but if we only consider optimization time , ` sysmetab ` is seen to be more efficient ( 0.35 vs. 0.74 seconds for ` influx_s ` ) .",
    "comparing sub - second results for a particular network may not be so informative , and we therefore considered a monte - carlo estimation of flux statistics with 1000 data samples , using all available cores of the processors . in this typical situation where the code has to be generated only once , ` influx_s ` took 105 seconds and ` sysmetab ` 24 seconds .",
    "we did the same monte carlo study involving 1000 samples on a poorly defined network describing the central metabolism of _",
    "e. coli _ and reactions for amino acid biosynthesis ( the file ` ecoli.1.ftbl ` , available as part of the @xcite additional material ) . here , ` influx_s ` shows its superiority in terms of numerical stability .",
    "but even though ` sysmetab ` requires more ( but less costly ) iterations than ` influx_s ` for each optimization , it is faster than ` influx_s ` , terminating in 110 seconds instead of 480 .",
    "cc  suc +   &   +  icit &  pep +   &   +  pga &  frubp +   &   +  glc6p &  fru6p +   &   +  rib5p &  gnt6p +   &   +  time ( s ) &  time ( s ) +    we are first interested in checking wether the time - dependent labeling measurements are best fitted .",
    "figure  [ fig : meas ] shows the reconstruction of mass isotopomer fractions of measured metabolites using the free fluxes and pool size values obtained after optimization . comparing these simulated data with the different time measurements marked with circles",
    "demonstrates that synthetic data are well recovered .",
    "the estimated pool sizes and the estimated flux values obtained from the nonstationary data are reported in table  [ tab : flux ] and contrasted with the fluxes obtained from the stationary data .",
    "the 95% confidence intervals were computed from the empirical repartition of optimal parameters , estimated by the monte carlo method ( 1000 resamplings of stationary and nonstationary data were used ) .",
    "lllll * data * & & +   + free fluxes & median & 95% c.i . & median & 95% c.i .",
    "+ glucupt_1.n & 0.807 & [ 0.803 , 0.811 ] & 0.806 & [ 0.798 , 0.813 ] + pyk.n & 1.522 & [ 1.293 , 1.547 ] & 1.535 & [ 1.355 , 1.552 ] + zwf.n & 0.150 & [ 0.131 , 0.182 ] & 0.143 & [ 0.114 , 0.177 ] + gnd.n & 0.143 & [ 0.128 , 0.160 ] & 0.136 & [ 0.101 , 0.169 ] + out_ac.n & 0.213 & [ 0.213 , 0.213 ] & 0.213 & [ 0.213 , 0.213 ] + ald.x & 0.647 & [ 0.579 , 0.717 ] & 0.731 & [ 0.558 , 0.929 ] + eno.x & 999 & [ 2.371 , 999 ] & 88.61 & [ 0.638 , 194.2 ] + ta.x & 0.570 & [ 0.531 , 0.611 ] & 0.556 & [ 0.486 , 0.635 ] + tk1.x & 0.183 & [ 0.151 , 0.214 ] & 0.157 & [ 0.086 , 0.222 ] + tk2.x & 0.000 & [ 0.000 , 0.021 ] & 0.005 & [ 0.000 , 0.066 ] + fum_a.x & 0.100 & [ 0.000 , 0.480 ] & 0.310 & [ 0.000 , 66.50 ] + ppc.x & 0.241 & [ 0.080 , 0.427 ] & 0.189 & [ 0.083 , 0.363 ] +   + free pool sizes & median & 95% c.i . +",
    "* frubp & 1.860 & [ 1.857 , 1.862 ] + * glc6p & 1.435 & [ 1.428 , 1.441 ] + * fru6p & 0.425 & [ 0.420 , 0.431 ] + * rib5p & 0.020 & [ 0.013 , 0.026 ] + * ga3p & 0.470 & [ 0.470 , 0.470 ] + * pep & 0.110 & [ 0.110 , 0.110 ] + * sed7p & 0.057 & [ 0.052 , 0.063 ] + suc & 0.854 & [ 0.078 , 2.427 ] + icit & 1.281 & [ 0.376 , 1.707 ] + pga & 0.478 & [ 0.086 , 0.868 ] + gnt6p & 0.836 & [ 0.736 , 1.022 ] + akg & 0.638 & [ 0.000 , 1.786 ] + ery4p & 0.278 & [ 0.004 , 0.619 ] + oaa & 0.000 & [ 0.000 , 1.501 ] + pyr & 0.530 & [ 0.000 , 2.756 ] + * * * * * * *",
    "we first note that the estimated values obtained from time - dependent labeling state data are similar to those obtained from the stationary state .",
    "then , focusing on the confidence intervals of fluxes , we note that for almost all of them , considering ten measurements during the transient phase gives better accuracy than using a single measurement when the stationary state is reached .",
    "as far as the pool sizes are concerned , for those which have an associated measurement ( in bold font ) , the measurement is well recovered , but apart from gnt6p all the pools have a significantly larger confidence interval .",
    "the choice of measurement times could be further optimized in order to improve the parameter statistics .",
    "if we now compare the computation time on our hardware for the two approaches , we remark that estimating the fluxes and pool size parameters takes almost 8 minutes using the direct method . using the adjoint method",
    "this estimation takes only 36 seconds ( 21 seconds just for the optimization ) and the computation of confidence intervals ( monte carlo method with 1000 samples ) takes 13 minutes , which demonstrates the efficiency of the approach .",
    "in this paper we address the mfa problem by making use of the adjoint state , in the spirit of a general optimization problem governed by a state equation , as in control theory . the proposed methods and algorithms are included in the ` sysmetab ` software , distributed under an open source license . in the stationary case , results demonstrate the efficiency of the approach in terms of precision and computation time when a typical metabolic network is considered .",
    "estimated values were validated against those obtained by other reference software . with the adjoint framework , only vectors ( instead of matrices )",
    "are updated , which considerably speeds up the computation of the gradient . in the nonstationary case , we considered the same network with synthetic noisy data .",
    "on our hardware and using 100 time steps of the ode integration scheme , a forward simulation followed by the adjoint gradient computation takes 53 milliseconds , instead of almost 1 second when the gradient is computed with the direct method , and a full estimation of fluxes and pool sizes takes 36 seconds .",
    "these timings make the nonstationary mfa problem computationally tractable for larger networks and make ` sysmetab ` competitive with other software .",
    "although ` sysmetab ` does not yet implement it , the emu framework can be used simultaneously with the adjoint approach , and this simultaneous implementation could represent the best computational solution when only ms measurements are used .",
    "although this approach favors gradient - based methods , it can also be used in gauss - newton type methods : in this case it allows the computation of the output sensitivity matrix at the cost of @xmath64 adjoint gradients , where @xmath64 is the size of the measurement vector at a given time @xcite .",
    "our current development efforts include improving the speed of the code generation step , and implementing high - order ode solvers and alternative methods for computing nonlinear confidence intervals @xcite .",
    "this work was performed , in partnership with the sas pivert , within the frame of the french institute for the energy transition ( institut pour la transition energtique ( ite ) p.i.v.e.r.t .",
    "( www.institut-pivert.com ) selected as an investment for the future ( `` investissements davenir '' ) .",
    "this work was supported , as part of the investments for the future , by the french government under the reference anr-001",
    "j.  d. young , j.  l. walther , m.  r. antoniewicz , h.  yoo , and g.  stephanopoulos , `` an elementary metabolite unit ( emu ) based method of isotopically nonstationary flux analysis , '' _ biotechnology and bioengineering _ , vol .",
    "99 , no .  3 , pp .",
    "686699 , 2008 .",
    "g.  chavent , `` identification of function parameters in partial differential equations , '' in _ identification of parameter distributed systems _ ,",
    "r.  goodson and n .- y .",
    "polis , eds.1em plus 0.5em minus 0.4emasme , 1974 .",
    "m.  weitzel , k.  nh , t.  dalman , s.  niedenfhr , b.  stute , and w.  wiechert , `` 13cflux2 - high - performance software suite for 13c - metabolic flux analysis . '' _ bioinformatics _ , vol .",
    "29 , no .  1 ,",
    "pp . 143145 , 2013 .",
    "s.  sokol , p.  millard , and j.  portais , `` influx_s : increasing numerical stability and precision for metabolic flux analysis in isotope labelling experiments , '' _ bioinformatics _ , vol .",
    "28 , no .  5 , pp . 687693 , 2012 .",
    "a.  cintrn - arias , h.  banks , a.  capaldi , and a.  l. lloyd , `` a sensitivity matrix based methodology for inverse problem formulation , '' _ journal of inverse and ill - posed problems _",
    "17 , no .  6 , pp .",
    "545564 , 2009 .",
    "a.  sandu and p.  miehe , `` forward , tangent linear , and adjoint rungekutta methods for stiff chemical kinetic simulations , '' _ international journal of computer mathematics _ ,",
    "87 , no .  11 , pp . 24582479 , 2010 .",
    "p.  millard , s.  massou , c.  wittmann , j .- c .",
    "portais , and f.  ltisse , `` sampling of intracellular metabolites for stationary and non - stationary 13 c metabolic flux analysis in escherichia coli , '' _ analytical biochemistry _ , vol .",
    "465 , pp . 3849 , 2014 .",
    "m.  r. antoniewicz , j.  k. kelleher , and g.  stephanopoulos , `` elementary metabolite units ( emu ) : a novel framework for modeling isotopic distributions , '' _ metabolic engineering _ ,",
    "vol .  9 , no .  1 , pp . 6886 , 2007 .",
    "stphane mottelet received a master s degree in computer science and engineering , as well as a master s degree and a ph.d . in control engineering ( 1994 ) , from university of technology of compigne ( utc , compigne , france ) . since 1995",
    "he has been an assistant professor in the applied mathematics laboratory of utc and joined in 2015 the process engineering laboratory in the same university .",
    "his current research interests include inverse problems , optimization , control theory , partial differential equations and their applications to systems biology and bioprocess engineering .",
    "gil gaullier received a master s degree in computer science , as well as a msc in numerical analysis from pierre & marie curie university ( paris , france ) and a ph.d .",
    "in image processing ( 2013 ) from strasbourg university ( france ) .",
    "he is currently a post - doctoral associate in the applied mathematics laboratory of utc .",
    "his fields of interest include inverse problem and optimization for interdisciplinary applications such as computational biology ."
  ],
  "abstract_text": [
    "<S> comprehension of metabolic pathways is considerably enhanced by metabolic flux analysis ( mfa - ile ) in isotope labeling experiments . </S>",
    "<S> the balance equations are given by hundreds of algebraic ( stationary mfa ) or ordinary differential equations ( nonstationary mfa ) , and reducing the number of operations is therefore a crucial part of reducing the computation cost . </S>",
    "<S> the main bottleneck for deterministic algorithms is the computation of derivatives , particularly for nonstationary mfa . in this article </S>",
    "<S> we explain how the overall identification process may be speeded up by using the adjoint approach to compute the gradient of the residual sum of squares . </S>",
    "<S> the proposed approach shows significant improvements in terms of complexity and computation time when it is compared with the usual ( direct ) approach . </S>",
    "<S> numerical results are obtained for the central metabolic pathways of _ escherichia coli _ and are validated against reference software in the stationary case . </S>",
    "<S> the methods and algorithms described in this paper are included in the ` sysmetab ` software package distributed under an open source license at http://forge.scilab.org / index.php / p / sysmetab/.    xxxxx , xxxxxx . </S>"
  ]
}
{
  "article_text": [
    "with the increasing accuracy of experimental data , one - loop calculations have long since become indispensible .",
    "doing such calculations by hand is arduous and error - prone and in some cases simply impossible .",
    "so for some time already , software packages have been developed to automate these calculations ( @xcite ) .",
    "yet one remaining obstacle is that these packages generally tackle only part of the problem , and there is still considerable work left in making them work together .    in this paper",
    "three packages , _ feynarts _ , _ formcalc _ , and _ looptools _ , are presented which work hand in hand .",
    "the user has to supply only small driver programs whose main purpose is to specify the necessary input parameters .",
    "this makes the whole system very `` open '' in the sense that the results are returned as _",
    "_  expressions which can easily be manipulated , to select or modify terms .",
    "_ formcalc _  can work either in dimensional regularization or in constrained differential renormalization @xcite , the latter of which is equivalent at the one - loop level to regularization by dimensional reduction @xcite .",
    "this makes _ formcalc _",
    "suitable for calculations in supersymmetric models .    since one - loop calculations can range anywhere from a handful to several hundreds of diagrams ( particularly so in models with many particles like the mssm )",
    ", speed is an issue , too .",
    "_ formcalc _ , the program which does the algebraic simplification , therefore uses _ form _",
    "@xcite for the time - consuming parts of the calculation . owing to _ form _",
    "s speed , _ formcalc _  can process , for example , the 1000-odd one - loop diagrams of w  w scattering in the standard model @xcite in about 5 minutes on an ordinary pentium pc .",
    "the following table summarizes the steps in a one - loop calculation and the distribution of tasks among the programs _ feynarts _ , _ formcalc _ , and _ looptools _ :",
    "diagram & & @xmath0 insert fields + generation & & @xmath0 apply the feynman rules + & & @xmath0 paint the diagrams & +   + & & @xmath0 contract indices + algebraic & & @xmath0 calculate traces + simplification & & @xmath0 reduce tensor integrals + & & @xmath0 introduce abbreviations & +   + & & @xmath0 convert _ mathematica _  output + numerical & & to fortran code + evaluation & & @xmath0 supply a driver program + & & @xmath0 implementation of the integrals & @xmath1 _ looptools _ +    the following sections describe the main functions of each program .",
    "furthermore , the _ formcalc _  package contains two sample calculations in the electroweak standard model , @xmath2 @xcite and @xmath3 @xcite , which demonstrate how the programs are used together .",
    "_ feynarts _  is a _ mathematica",
    "_  package for the generation and visualization of feynman diagrams and amplitudes @xcite .",
    "it works in the three basic steps sketched in fig .",
    "[ fig : feynarts ] .",
    "( 230,265)(14,16 ) ( 150,411)(150,380 ) ( 150,335)(150,308 ) ( 150,251)(150,222 ) ( 150,175)(150,148 ) ( 150,101)(150,72 )    ( 200,50)(280,50 ) ( 279,50)(280,50 ) ( 180,32.8)[lb]further ( 180,28.8)[lt]processing    ( 210,260)(100,90,27 ) ( 210,300)(100,-90,-27 )    ( 20,410)(280,470).95 ( 90,270.4)[b]find all distinct ways of connect- ( 90,260)[b]ing incoming and outgoing lines ( 90,257.6)[t](createtopologies ) ( 150,360)(25,65)(0)1 ( 90,215.2)[]topologies ( 60,250)(240,310).95 ( 90,174.4)[b]determine all allowed ( 90,164)[b]combinations of fields ( 90,161.6)[t](insertfields ) ( 270,250)(410,310).95 ( 204,169.6)[b]draw the results ( 204,165.6)[t](paint ) ( 150,200)(25,65)(0)1 ( 90,119.2)[]diagrams ( 50,100)(250,150).95 ( 90,76.8)[b]apply the feynman rules ( 90,72.8)[t](createfeynamp ) ( 150,50)(25,65)(0)1 ( 90,29.6)[]amplitudes    the first step is to create all different topologies for a given number of loops and external legs . for example , to create all one - loop topologies for a @xmath4 process , the following call to createtopologies is used :    ....    top = createtopologies[1 , 1 - > 2 ] ....    in the second step , the actual particles in the model have to be distributed over the topologies in all allowed ways .",
    "e.g.  the diagrams for @xmath5 are produced with    ....    ins = insertfields[top , v[2 ] - > { f[4,{3 } ] , -f[4,{3 } ] } ] ....    where f[4,3 ] is the @xmath6-quark , -f[4,3 ] its antiparticle , and ` v[2 ] ` the z boson .",
    "the fields and their couplings are defined in a special file , the model file , which the user can supply or modify .",
    "model files are currently provided for qed , the electroweak standard model , and qcd ; a mssm model file is in preparation .",
    "the diagrams can be drawn with ` paint[ins ] ` , depending on the options either on screen , or in a postscript or latex  file .",
    "finally , the analytic expressions for the diagrams are obtained by    ....",
    "amp = createfeynamp[ins ] ....",
    "the evaluation of the _ feynarts _  output proceeds in two steps :    1 .",
    "the symbolic expressions for the diagrams are simplified algebraically with _ formcalc _  which returns the results in a form well suited for numerical evaluation .",
    "the _ mathematica _  expressions then need to be translated into a fortran program .",
    "( the numerical evaluation could , in principle , be done in _ mathematica _  directly , but this becomes very slow for large amplitudes . ) the translation is done by the program _",
    "numprep _ which is part of the _ formcalc _  package . for compiling the generated code",
    "one needs a driver program ( also in _ formcalc _ ) , and the numerical implementations of the one - loop integrals in _",
    "the structure of _ formcalc _  is simple : it prepares the symbolic expressions of the diagrams in an input file for _ form _ , runs _ form _ , and retrieves the results .",
    "this interaction is transparent to the user .",
    "_ formcalc _  combines the speed of _ form _  with the powerful instruction set of _ mathematica _  and the latter greatly facilitates further processing of the results .",
    "the following diagram shows schematically how _ formcalc _  interacts with _ form _ :    ( 351,78.3)(-36,8 ) ( -40,25)(110,95).95 ( 114,25)(350,95).95 ( -35,30)(105,91 ) ( 205,30)(345,91 ) ( 125,65)(185,81 ) ( 185,73)(205,73 ) ( 105,73)(125,73 ) ( 139.5,64.8)[]input file ( 125,40)(185,56 ) ( 205,48)(185,48 ) ( 125,48)(105,48 ) ( 139.5,43.2)[]_mathlink _ ( 31.5,72)[]_mathematica _ ( 31.5,58.5 ) [ ] user friendly ( 31.5,46.8 ) [ ] slow on large ( 31.5,36)[]expressions ( 247.5,72)[]_form _ ( 247.5,58.5 ) [ ] extremely fast on ( 247.5,47.7)[]polynomial expressions , ( 247.5,36 ) [ ] not so user friendly ( 27,18)[t]_user interface _",
    "( 207,18)[t]_internal _ formcalc _  functions _    the main function in _ formcalc _  is oneloop ( the name is not strictly correct since it works also with tree graphs ) .",
    "it is used like this :    ....    < < formcalc `    amps = < < myamps.m      ( * load some amplitudes * )    result = oneloop[amps ] ....    where it is assumed that the file myamps.m contains amplitudes generated by _",
    "feynarts_. oneloop uses dimensional regularization by default . to calculate in constrained differential renormalization ( @xmath7 dimensional reduction at the one - loop level )",
    ", one has to put $ dimension = 4 before invoking oneloop .",
    "note that oneloop needs no declarations of the kinematics of the underlying process ; it uses the information _ feynarts _  hands down .",
    "even more comprehensive than oneloop , the function processfile can process entire files .",
    "it collects the diagrams into blocks such that index summations ( over fermion generations ) can later be carried out easily , only diagrams which are summed over the same indices are put in one block .",
    "processfile is invoked as    ....    processfile[\"vertex.amp \" , \" results / vertex \" ] ....    which reads the _ feynarts _  amplitudes from vertex.amp and produces files of the form results / vertex_id_.m , where _",
    "i d _ is an identifier for a particular block .",
    "oneloop and processfile return expressions where spinor chains , dot products of vectors , and levi - civita tensors contracted with vectors have been collected and abbreviated .",
    "a term in such an expression may look like    ....    c0i[cc1 , mw2 , s , mw2 , mz2 , mw2 , mw2 ] *      ( abbsum12*(-8*a2*mw2 + 4*a2*mw2*s2 - 2*a2*cw^2*mw2*s2 +          16*a2*cw^2*s*s2 + 4*a2*c2*mw2*sw^2 ) +        abb47*(-32*a2*cw^2*mw2*s2 + 8*a2*cw^2*s2*t +          8*a2*cw^2*s2*u ) -        abbsum13*(-64*a2*cw^2*mw2*s2 + 16*a2*cw^2*s2*t +          16*a2*cw^2*s2*u ) ) ....    here , the tensor coefficient function @xmath8 is multiplied with a linear combination of abbreviations like abb47 or abbsum12 with certain coefficients .",
    "these coefficients contain the mandelstam variables s , t , and u and some short - hands for parameters of the standard model , @xmath9 .",
    "the abbreviations like abb47 or abbsum12 are introduced automatically and can significantly reduce the size of an amplitude .",
    "the definitions of the abbreviations can be retrieved by abbreviations [ ] which returns a list of rules such that result//.abbreviations [ ] gives the full , unabbreviated expression .",
    "_ looptools _  supplies the actual numerical implementations of the one - loop functions needed for programs made from the _ formcalc _  output .",
    "it is based on the reliable package _ ff _ @xcite and provides in addition to the scalar integrals of _ ff _ also the tensor coefficients in the conventions of @xcite . _",
    "_  offers three interfaces : fortran , c++ , and _ mathematica _ , so most programming tastes should be served .    using _ looptools _",
    "functions in fortran and c++ is very similar . in fortran",
    "it is necessary to include the two files tools.f and tools.h , the latter one in every function or subroutine . in c++",
    ", ctools.h must be included once . before using any _ looptools _  function ,",
    "bcaini must be called and at the end of the calculation bcaexi may be called to obtain a summary of errors .",
    "it is of course possible to change parameters like the scale @xmath10 from dimensional regularization ; this is described in detail in the manual @xcite .",
    "a very simple program would for instance be    77=    78=    ( 350,100 ) ( 0,0)(0,100 ) ( 0,100)(130,100 ) ( 130,100)(130,90 ) ( 130,90)(170,90 ) ( 170,90)(170,0 ) ( 170,0)(0,0 ) ( 150,93)(0,0)[cb]fortran ( 5,100)(0,0)[lt]77 ( 180,0 ) ( 0,0)(0,100 ) ( 0,100)(148,100 ) ( 148,100)(148,90 ) ( 148,90)(180,90 ) ( 180,90)(180,0 ) ( 180,0)(0,0 ) ( 344,93)(0,0)[cb]c++ ( 185,100)(0,0)[lt]78    the _ mathematica _  interface is even simpler to use :    .... in[1]:= install[\"bca \" ] ....    ....",
    "in[2]:= b0[1000 , 50 , 80 ] ....    .... out[2]= -4.40593 + 2.70414 i ....",
    "all three packages require _ mathematica _  2.2 or above ; _ formcalc _",
    "needs in addition _ form _ , preferably version 2 or above ; _ looptools _  needs a fortran compiler , gcc / g++ , and gnu make .",
    "the packages should compile and run without change on any unix platform .",
    "they are specifically known to work under dec unix , hp - ux , linux , solaris , and aix .",
    "all three packages are open source and stand under the gnu library general public license .",
    "they are available from    ....",
    "this work has been supported by dfg under contract ku 502/81 ."
  ],
  "abstract_text": [
    "<S> three programs are presented for automatically generating and calculating feynman diagrams : the diagrams are generated with _ </S>",
    "<S> feynarts _ , algebraically simplified with _ formcalc _ , and finally evaluated numerically using the _ looptools_package . </S>",
    "<S> the calculations are performed analytically as far as possible , with results given in a form well suited for numerical evaluation . </S>",
    "<S> the latter is then straightforward using the implementations of the one - loop integrals in _ </S>"
  ]
}
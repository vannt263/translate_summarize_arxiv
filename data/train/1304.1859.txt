{
  "article_text": [
    "meshless methods have received much attention in recent decades as new tools to overcome the difficulties of mesh generation and mesh refinement in classical mesh - based methods such as the finite element method ( fem ) and the finite volume method ( fvm ) .",
    "the classification of numerical methods for solving pdes should always start from the classification of pde problems themselves into _ strong _ , _ weak _ , or _ local weak _ forms .",
    "the first is the standard pointwise formulation of differential equations and boundary conditions , the second is the usual weak form dominating all fem techniques , while the third form splits the integrals of the usual global weak form into local integrals over many small subdomains , performing the integration by parts on each local integral .",
    "local weak forms are the basis of all variations of the _ meshless local petrov  galerkin _ technique ( mlpg ) of s.n .",
    "atluri and collaborators @xcite .",
    "this classification is dependent on the pde problem itself , and independent of numerical methods and the trial spaces used .",
    "note that these three formulations of the `` same '' pde and boundary conditions lead to three essentially different mathematical problems that can not be identified and need a different mathematical analysis with respect to existence , uniqueness , and stability of solutions .",
    "meshless _ trial spaces _ mainly come via _ moving least squares _ or _ kernels _ like _ radial basis functions_. they can consist of _ global _ or _ local _ functions , but they should always parametrize their trial functions `` _ entirely in terms of nodes _ ''",
    "@xcite and require no triangulation or meshing .",
    "a third classification of pde methods addresses where the discretization lives . _",
    "domain type _",
    "techniques work in the full global domain , while _ boundary type _",
    "methods work with exact solutions of the pde and just have to care for boundary conditions .",
    "this is independent of the other two classifications .",
    "consequently , the literature should confine the term `` meshless '' to be a feature of _ trial spaces _ , not of pde problems and their various formulations .",
    "but many authors reserve the term _ truly meshless _ for meshless methods that either do not require any discretization with a background mesh for calculating integrals or do not require integration at all .",
    "these techniques have a great advantage in computational efficiency , because numerical integration is the most time  consuming part in all numerical methods based on local or global weak forms .",
    "this paper focuses on a truly meshless method in this sense .    most of the methods for solving pdes in global weak form , such as the element - free galerkin ( efg ) method @xcite , are not _ truly meshless _ because a triangulation is still required for numerical integration .",
    "the _ meshless local petrov - galerkin _",
    "( mlpg ) method solves pdes in local weak form and uses no global background mesh to evaluate integrals because everything breaks down to some regular , well - shaped and independent sub - domains .",
    "thus the mlpg is known as a truly meshless method .",
    "we now focus on meshless methods using moving least squares as trial functions .",
    "if they solve pdes in global or local weak form , they still suffer from the cost of numerical integration . in these methods ,",
    "numerical integrations are traditionally done over mls shape functions and their derivatives .",
    "such shape functions are complicated and have no closed form . to get accurate results , numerical quadratures with many integration points",
    "are required .",
    "thus the mls subroutines must be called very often , leading to high computational costs .",
    "in contrast to this , the stiffness matrix in finite element methods ( fems ) is constructed by integrating over polynomial basis functions which are much cheaper to evaluate .",
    "this relaxes the cost of numerical integrations . for an account of the importance of numerical integration within meshless methods ,",
    "we refer the reader to @xcite .    to overcome this shortage within the mlpg based on mls , mirzaei and schaback @xcite proposed a new technique , _ direct meshless local petrov - galerkin ( dmlpg ) method _ , which avoids integration over mls shape functions in mlpg and replaces it by the much cheaper integration over polynomials .",
    "it ignores shape functions completely .",
    "altogether , the method is simpler , faster and often more accurate than the original mlpg method .",
    "dmlpg uses a generalized mls ( gmls ) method of @xcite which directly approximates boundary conditions and local weak forms as some _ functionals _ , shifting the numerical integration into the mls itself , rather than into an outside loop over calls to mls routines .",
    "thus the concept of gmls must be outlined first in section [ sect - gmls ] before we can go over to the dmlpg in section [ sec - dmlpg ] and numerical results for heat conduction problems in section [ sec - num ] .",
    "the analysis of heat conduction problems is important in engineering and applied mathematics .",
    "analytical solutions of heat equations are restricted to some special cases , simple geometries and specific boundary conditions .",
    "hence , numerical methods are unavoidable .",
    "finite element methods , finite volume methods , and finite difference methods have been well applied to transient heat analysis over the past few decades @xcite .",
    "mlpg methods were also developed for heat transfer problems in many cases .",
    "for instance , j. sladek et.al .",
    "@xcite proposed mlpg4 for transient heat conduction analysis in functionally graded materials ( fgms ) using laplace transform techniques .",
    "v. sladek et.al .",
    "@xcite developed a local boundary integral method for transient heat conduction in anisotropic and functionally graded media .",
    "both authors and their collaborators employed mlpg5 to analyze the heat conduction in fgms @xcite .",
    "the aim of this paper is the development of dmlpg methods for heat conduction problems .",
    "this is the first time where dmlpg is applied to a time ",
    "dependent problem . moreover , compared to @xcite",
    ", we will discuss all dmlpg methods , go into more details and provide explicit formulae for the numerical implementation .",
    "dmlpg1/2/4/5 will be proposed , and the reason of ignoring dmlpg3/6 will be discussed .",
    "the new methods will be compared with the original mlpg methods in a test problem , and then a problem in fgms will be treated by dmlpg1 .    in all application cases ,",
    "the dmlpg method turned out to be superior to the standard mlpg technique , and it provides excellent accuracy at low cost .",
    "whatever the given pde problem is and how it is discretized , we have to find a function @xmath0 such that @xmath1 linear equations @xmath2 defined by @xmath1 linear _ functionals _",
    "@xmath3 and @xmath1 prescribed real values @xmath4 are to be satisfied . note that weak formulations will involve functionals that integrate @xmath0 or a derivative against some test function .",
    "the functionals can discretize either the differential equation or some boundary condition .",
    "now _ meshless methods _ construct solutions from a _ trial space _ whose functions are parametrized `` _ entirely in terms of nodes _ '' @xcite .",
    "we let these nodes form a set @xmath5 .",
    "theoretically , meshless trial functions can then be written as linear combinations of _ shape functions _ @xmath6 with or without the lagrange conditions @xmath7 as @xmath8 in terms of values at nodes , and this leads to solving the system ( [ eqlkubk ] ) in the form @xmath9 approximately for the nodal values .",
    "setting up the coefficient matrix requires the evaluation of all functionals on all shape functions , and this is a tedious procedure if the shape functions are not cheap to evaluate , and it is even more tedious if the functionals consist of integrations of derivatives against test functions .",
    "but it is by no means mandatory to use shape functions at this stage at all . if each functional @xmath10 can be well approximated by a formula @xmath11 in terms of nodal values for smooth functions @xmath12 , the system to be solved is @xmath13 without any use of shape functions .",
    "there is no trial space , but everything is still written in terms of values at nodes .",
    "once the approximate values @xmath14 at nodes are obtained , any multivariate interpolation or approximation method can be used to generate approximate values at other locations .",
    "this is a postprocessing step , independent of pde solving .",
    "this calls for efficient ways to handle the approximations ( [ eqlambdaapprox ] ) to functionals in terms of nodal values .",
    "we employ a generalized version of moving least squares ( mls ) , adapted from @xcite , and without using shape functions .",
    "the techniques of @xcite and @xcite allow to calculate coefficients @xmath15 for ( [ eqlambdaapprox ] ) very effectively as follows .",
    "we fix @xmath16 and consider just @xmath17 .",
    "furthermore , the set @xmath18 will be formally replaced by a much smaller subset that consists only of the nodes that are locally necessary to calculate a good approximation of @xmath10 , but we shall keep @xmath18 and @xmath19 in the notation .",
    "this reduction of the node set for the approximation of @xmath10 will ensure sparsity of the final coefficient matrix in ( [ eqalphasys ] ) .",
    "now we have to calculate a coefficient vector @xmath20 for ( [ eqlambdaapprox ] ) in case of @xmath21 .",
    "we choose a space @xmath22 of polynomials which is large enough to let zero be the only polynomial @xmath23 in @xmath22 that vanishes on @xmath18 .",
    "consequently , the dimension @xmath24 of @xmath22 satisfies @xmath25 , and the @xmath26 matrix @xmath27 of values @xmath28 of a basis @xmath29 of @xmath22 has rank @xmath24 . then for any vector @xmath30 of positive weights , the generalized mls solution @xmath31 to ( [ eqlambdaapprox ] ) can be written as @xmath32 where @xmath33 is the diagonal matrix with diagonal @xmath34 and @xmath35 is the vector with values @xmath36 .",
    "thus it suffices to evaluate @xmath10 on low  order polynomials , and since the coefficient matrix in ( [ awl ] ) is independent of @xmath16 , one can use the same matrix for different @xmath10 as long as @xmath18 does not change locally .",
    "this will significantly speed up numerical calculations , if the functional @xmath10 is complicated , e.g. a numerical integration against a test function .",
    "note that the mls is just behind the scene , no shape functions occur .",
    "but the weights will be defined locally in the same way as in the usual mls , e.g. we choose a continuous function @xmath37 with    * @xmath38 * @xmath39    and define @xmath40 for @xmath41 as a weight function , if we work locally near a point @xmath42 .",
    "in the cartesian coordinate system , the transient temperature field in a heterogeneous isotropic medium is governed by the diffusion equation @xmath43 where @xmath44 and @xmath45 denote the space and time variables , respectively , and @xmath46 is the final time .",
    "the initial and boundary conditions are @xmath47 in ( [ govern1])-([neumanncond ] ) , @xmath48 is the temperature field , @xmath49 is the thermal conductivity dependent on the spatial variable @xmath42 , @xmath50 is the mass density and @xmath51 is the specific heat , and @xmath52 stands for the internal heat source generated per unit volume .",
    "moreover , @xmath53 is the unit outward normal to the boundary @xmath54 , @xmath55 and @xmath56 are specified values on the dirichlet boundary @xmath57 and neumann boundary @xmath58 where @xmath59 .",
    "meshless methods write everything entirely in terms of scattered nodes forming a set @xmath60 located in the spatial domain @xmath61 and its boundary @xmath54 . in the standard mlpg , around each @xmath62 a small subdomain @xmath63 is chosen such that integrations over @xmath64 are comparatively cheap . for instance , @xmath64 is conveniently taken to be the intersection of @xmath65 with a ball @xmath66 of radius @xmath67 or a cube ( or a square in 2d ) @xmath68 centered at @xmath62 with side - length @xmath67 . on these subdomains , the pde including boundary conditions is stated in a localized weak form @xmath69 for an appropriate _ test function _ @xmath70 . applying integration by parts ,",
    "this weak equation can be partially symmetrized to become the _ first _ local weak form @xmath71 the _ second _ local weak form , after rearrangement of and integration by parts twice , can be obtained as @xmath72 if the boundary of the local domain @xmath64 hits the boundary of @xmath61 , the mlpg inserts boundary data at the appropriate places in order to care for boundary conditions .",
    "since these local weak equations are all affine  linear in @xmath0 even after insertion of boundary data , the equations of mlpg are all of the form ( [ eqlkubk ] ) after some rearrangement , employing certain linear functionals @xmath10 . in all cases , the mlpg evaluates these functionals on shape functions , while our dmlpg method will use the gmls approximation of section [ sect - gmls ] without any shape function .    however , different choices of test functions @xmath70 lead to the six different well  known types of mlpg .",
    "the variants mlpg1/5/6 are based on the weak formulation .",
    "if @xmath70 is chosen such that the first integral in the right hand side of ( [ eq - lwf - v ] ) vanishes , we have mlpg1 . in this case",
    "@xmath70 should vanish on @xmath73 . if the heaviside step function @xmath70 on local domains is used as test function , the second integral disappears and we have a pure local boundary integral form in the right hand side .",
    "this is mlpg5 . in mlpg6 ,",
    "the trial and test functions come from the same space .",
    "mlpg2/3 are based on the local unsymmetric weak formulation .",
    "mlpg2 employs dirac s delta function as the test function in each @xmath64 , which leads to a pure collocation method .",
    "mlpg3 employs the error function as the test function in each @xmath64 . in this method",
    ", the test functions can be the same as for the discrete least squares method .",
    "the test functions and the trial functions come from the same space in mlpg3 .",
    "finally , mlpg4 ( or lbie ) is based on the weak form , and a modified fundamental solution of the corresponding elliptic spatial equation is employed as a test function in each subdomain .",
    "we describe these types in more detail later , along with the way we modify them when going from mlpg to dmlpg .",
    "independent of which variation of mlpg we go for , the dmlpg has its special ways to handle boundary conditions , and we describe these first .",
    "neither lagrange multipliers nor penalty parameters are introduced into the local weak forms , because the dirichlet boundary conditions are imposed directly . for nodes",
    "@xmath74 , the values @xmath75 are known from the dirichlet boundary conditions . to connect them properly to nodal values @xmath76 in neighboring points @xmath77 inside the domain or on the neumann boundary , we turn the gmls philosophy upside down and ask for coefficients @xmath78 that allow to reconstruct nodal values at @xmath62 from nodal values at the @xmath77 .",
    "this amounts to setting @xmath79 in section [ sect - gmls ] , and we get localized equations for dirichlet boundary points @xmath62 as @xmath80.\\ ] ] note that the coefficients are time  independent . in matrix form , ( [ dirichlet - impose ] ) can be written as @xmath81 where @xmath82 is the time ",
    "dependent vector of nodal values at @xmath83 .",
    "these equations are added into the full matrix setup at the appropriate places , and they are in truly meshless form , since they involve only values at nodes and are without numerical integration .",
    "note that ( [ eq - lwf - v ] ) has no integrals over the dirichlet boundary , and thus we can impose dirichlet conditions always in the above strong form . for there are two possibilities .",
    "we can impose the dirichlet boundary conditions either in the local weak form or in the collocation form .",
    "of course the latter is the cheaper one .",
    "we now turn to neumann boundary conditions .",
    "they can be imposed in the same way as dirichlet boundary conditions by assuming @xmath84 in the gmls approximation @xmath85.\\ ] ] note that the coefficients again are time  independent , and we get a linear system like ( [ dirichlet - sys ] ) , but with a vector @xmath86 of nodal values of normal derivatives in the right  hand side .",
    "this is collocation as in subsection [ subsec - dmlpg2 ] .",
    "but it is often more accurate to impose neumann conditions directly into the local weak forms and .",
    "we will describe this in more detail in the following subsections .",
    "we now turn the different variations of the mlpg method into variations of the dlmpg .",
    "these methods are based on the local weak form .",
    "this form recasts to @xmath87 after inserting the neumann boundary data from , when the domain @xmath64 of ( [ eq - lwf - v ] ) hits the neumann boundary @xmath58 .",
    "all integrals in the top part of can be efficiently approximated by gmls approximation of section [ sect - gmls ] as purely spatial formulas @xmath88    while the two others can always be summed up , the first formula , if applied to time ",
    "varying functions , has to be modified into @xmath89 and expresses the main pde term not in terms of values at nodes , but rather in terms of time derivatives of values at nodes .",
    "again , everything is expressed in terms of values at nodes , and the coefficients are time  independent .",
    "furthermore , section [ sect - gmls ] shows that the @xmath0 part of the integration runs over low ",
    "order polynomials , not over any shape functions .",
    "the third functional can be omitted if the test function @xmath70 vanishes on @xmath90 .",
    "this is dmlpg1 .",
    "an example of such a test function is @xmath91 where @xmath92 is the weight function in the mls approximation with the radius @xmath93 of the support of the weight function being replaced by the radius @xmath67 of the local domain @xmath64 .    in dmlpg5 ,",
    "the local test function is the constant @xmath94 .",
    "thus the functionals @xmath95 of ( [ eqlamjk ] ) are not needed , and the integrals for @xmath96 take a simple form , if @xmath97 and @xmath98 are simple .",
    "dmlpg5 is slightly cheaper than dmlpg1 , because the domain integrals of @xmath95 are replaced by the boundary integrals of @xmath99 .",
    "depending on which parts of the functionals are present or not , we finally get a time  dependent system of the form @xmath100 where @xmath101 is the time ",
    "dependent vector @xmath102 of nodal values , @xmath103 collects the time  dependent right  hand sides with components @xmath104 and @xmath105 , @xmath106 .",
    "the @xmath16-th row of @xmath107 is @xmath108 where @xmath109^t , \\\\ % \\label{lambda1-dmlpg1 } \\\\ \\lambda_{2,k}(\\calp)= & -\\left[\\int_{\\omega_s^{k}}\\kappa \\nabla p_1\\cdot \\nabla v    \\ , d\\omega ,",
    "\\int_{\\omega_s^{k}}\\kappa \\nabla p_2\\cdot \\nabla v \\ ,",
    "d\\omega , \\ldots , \\int_{\\omega_s^{k}}\\kappa \\nabla p_q\\cdot \\nabla v \\",
    ", d\\omega\\right]^t,\\\\ % \\label{lambda2-dmlpg1}\\\\ \\lambda_{3,k}(\\calp)= & \\left [ \\int_{\\partial\\omega_s^k\\setminus \\gamma_n } \\kappa \\frac{\\partial p_1}{\\partial    n}v\\ , d \\gamma , \\int_{\\partial\\omega_s^k\\setminus \\gamma_n } \\kappa \\frac{\\partial p_2}{\\partial    n}v\\ , d \\gamma , \\ldots , \\int_{\\partial\\omega_s^k\\setminus \\gamma_n } \\kappa \\frac{\\partial p_q}{\\partial n}v   \\ , d \\gamma\\right]^t.\\end{aligned}\\ ] ] as we can immediately see , _ numerical integrations are done over low - degree polynomials @xmath110 only , and no shape function is needed at all .",
    "this reduces the cost of numerical integration in mlpg methods significantly .",
    "_      in this method , the test function @xmath70 on the local domain @xmath64 in is replaced by the test functional @xmath111 , i.e. we have strong collocation of the pde and all boundary conditions . depending on where @xmath62 lies , one can have the functionals @xmath112 connecting @xmath0 to dirichlet , neumann , or pde data .",
    "the first form is used on the dirichlet boundary , and leads to ( [ dirichlet - impose ] ) and ( [ dirichlet - sys ] ) .",
    "the second applies to points on the neumann boundary and is handled by ( [ neumann - impose ] ) , while the third can occur anywhere in @xmath65 independent of the other possibilities . in all cases ,",
    "the gmls method of section [ sect - gmls ] leads to approximations of the form @xmath113 entirely in terms of nodes , where values on nodes on the dirichlet boundary can be replaced by given data .",
    "this dmlpg2 technique is a pure collocation method and requires no numerical integration at all .",
    "hence it is truly meshless and the cheapest among all versions of dmlpg and mlpg .",
    "but it needs higher order derivatives , and thus the order of convergence is reduced by the order of the derivative taken .",
    "sometimes dmlpg2 is called _ direct mls collocation ( dmlsc ) method _ @xcite .",
    "it is worthy to note that the recovery of a functional such as @xmath114 or @xmath115 in ( [ eqallmu ] ) using gmls approximation gives _",
    "gmls derivative approximation_. these kinds of derivatives have been comprehensively investigated in @xcite and a rigorous error bound was derived for them .",
    "sometimes they are called _ diffuse _ or _ uncertain _ derivatives , because they are not derivatives of shape functions , but @xcite proves there is nothing diffuse or uncertain about them and they are direct and usually very good numerical approximation of corresponding function derivatives .",
    "this method is based on the local weak form and uses the _",
    "fundamental solution _ of the corresponding elliptic spatial equation as test function . here",
    "we describe it for a two  dimensional problem .",
    "to reduce the unknown quantities in local weak forms , the concept of _ companion solutions _ was introduced in @xcite .",
    "the companion solution of a 2d laplace operator is @xmath116 which corresponds to the poisson equation @xmath117 and thus is a _",
    "solution vanishing for @xmath118 .",
    "dirichlet boundary conditions for dmlpg4 are imposed as in .",
    "the resulting local integral equation corresponding to a node @xmath62 located inside the domain or on the neumann part of the boundary is @xmath119 where @xmath120 is a coefficient that depends on where the source point @xmath62 lies .",
    "it is @xmath121 on the smooth boundary , and @xmath122 at a corner where the interior angle at the point @xmath62 is @xmath123 .",
    "the symbol @xmath124 represents the cauchy principal value ( cpv ) . for interior points",
    "@xmath62 we have @xmath125 and cpv integrals are replaced by regular integrals .    in this case",
    "@xmath126^t,\\ ] ] and @xmath127 , where @xmath128^t ,    \\\\ \\lambda^{(2)}_{2,k}(\\calp)&= -\\left[\\dashint_{\\gamma_s^{k } } \\frac{\\partial v}{\\partial n}p_1   \\ , d \\gamma , \\dashint_{\\gamma_s^{k } } \\frac{\\partial v}{\\partial n}p_2   \\ , d \\gamma , \\ldots , \\dashint_{\\gamma_s^{k } } \\frac{\\partial v}{\\partial n}p_q   \\ , d \\gamma    \\right]^t , \\\\ \\lambda^{(3)}_{2,k}(\\calp)&= \\left[\\int_{\\omega_s^{k}}\\frac{1}{\\kappa}\\nabla\\kappa\\cdot \\nabla p_1\\ , v   \\ , d\\omega , \\int_{\\omega_s^{k}}\\frac{1}{\\kappa}\\nabla\\kappa\\cdot \\nabla p_2\\ , v   \\ ,",
    "d\\omega , \\ldots , \\int_{\\omega_s^{k}}\\frac{1}{\\kappa}\\nabla\\kappa\\cdot \\nabla p_q\\ , v   \\ , d\\omega \\right]^t.\\end{aligned}\\ ] ] finally , we have the time - dependent linear system of equations @xmath129 where the @xmath16-th row of @xmath107 is @xmath130 the components of the right - hand side are @xmath131 this technique leads to weakly singular integrals which must be evaluated by special numerical quadratures .      in both mlpg3 and mlpg6 ,",
    "the trial and test functions come from the same space .",
    "therefore they are galerkin type techniques and should better be called mlg3 and mlg6 .",
    "but they annihilate the advantages of dmlpg methods with respect to numerical integration , because the integrands include shape functions .",
    "thus we ignore dmlpg3/6 in favour of keeping all benefits of dmlpg methods .",
    "note that mlpg3/6 are also rarely used in comparison to the other mlpg methods .",
    "to deal with the time variable in meshless methods , some standard methods were proposed in the literature .",
    "the laplace transform method @xcite , conventional finite difference methods such as forward , central and backward difference schemes are such techniques . a method which employs the mls approximation in both time and space domains ,",
    "is another different scheme @xcite .    in our case the linear system ( [ eqalphasys ] ) turns into the time ",
    "dependent version ( [ eqfullsys ] ) coupled with that could , for instance , be solved like any other linear first ",
    "order implicit differential algebraic equations ( dae ) system . invoking an ode solver on",
    "it would be an instance of the method of lines . if a conventional time  difference scheme such as a crank - nicolson method is employed , if the time step @xmath132 remains unchanged , and if @xmath133 , then a single lu decomposition of the final stiffness matrix and corresponding backward and forward substitutions can be calculated once and for all , and then the final solution vector at the nodes is obtained by a simple matrix  vector iteration .",
    "the classical mls approximation can be used as a postprocessing step to obtain the solution at any other point @xmath44 .",
    "implementation is done using the basis polynomials @xmath134 where @xmath135 is an average mesh - size , and @xmath136 is a fixed evaluation point such as a test point or a gaussian point for integration in weak ",
    "form based techniques . here @xmath137 is a multi - index and @xmath138 . if @xmath139 then @xmath140 .",
    "this choice of basis function , instead of @xmath141 , leads to a well - conditioned matrix @xmath142 in the ( g)mls approximation .",
    "the effect of this variation on the conditioning has been analytically investigated in @xcite .",
    "a test problem is first considered to compare the results of mlpg and dmlpg methods .",
    "then a heat conduction problem in functionally graded materials ( fgm ) for a finite strip with an exponential spatial variation of material parameters is investigated . in numerical results ,",
    "we use the quadratic shifted scaled basis polynomial functions ( @xmath143 ) in ( g)mls approximation for both mlpg and dmlpg methods . moreover , the gaussian weight function @xmath144 where @xmath145 and @xmath146 is used .",
    "the parameter @xmath147 should be large enough to ensure the regularity of the moment matrix @xmath148 in ( g)mls approximation .",
    "it depends on the degree of polynomials in use .",
    "here we put @xmath149 .",
    "the constant @xmath150 controls the shape of the weight function and has influence on the stability and accuracy of ( g)mls approximation .",
    "there is no optimal value for this parameter at hand .",
    "experiments show that @xmath151 lead to more accurate results .",
    "all routines were written using matlab@xmath152 and run on a pentium 4 pc with 2.50 gb of memory and a twin  core 2.00 ghz cpu .",
    "let @xmath153 ^ 2\\subset\\r^2 $ ] and consider equations ( [ govern1])-([neumanncond ] ) with @xmath154 , @xmath155 and @xmath156 .",
    "boundary conditions using @xmath157 are @xmath158,\\\\ u & = e^{-t}\\cos(\\pi \\schi_2),\\ , ( \\schi_1=0 , \\schi_2 ) , \\",
    ", \\schi_2\\in[0,1],\\\\ u & = -e^{-t}\\cos(\\pi \\schi_2),\\ , ( \\schi_1=1 , \\schi_2),\\ , \\schi_2\\in[0,1].\\end{aligned}\\ ] ] the initial condition is @xmath159 , and @xmath160 is the exact solution .",
    "let @xmath161 and @xmath162 in the crank - nicolson scheme . a regular node distribution with distance",
    "@xmath135 in both directions is used . in table",
    "[ tb1 ] the cpu times used by mlpg1/2/4/5 and dmlpg1/2/4/5 are compared .",
    "as we can immediately see , dmlpg methods are absolutely faster than mlpg methods .",
    "there is no significant difference between mlpg2 and dmlpg2 , because they are both collocation techniques and no numerical integration is required .",
    "insert table 1    the maximum absolute errors are drawn in figure [ fig1 ] and compared .",
    "mlpg2 and dmlpg2 coincide , but dmlpg1/4/5 are more accurate than mlpg1/4/5 .",
    "dmlpg1 is the most accurate method among all .",
    "justification needs a rigorous error and stability analysis which is not presented here .",
    "but , according to @xcite and all numerical results , we can expect an error behavior like @xmath163 , where @xmath16 is the maximal order of derivatives of @xmath0 involved in the functional , and if numerical integration and time discretization have even smaller errors .",
    "insert figure 1    for more details see the elliptic problems in @xcite where the ratios of errors of both method types are compared for @xmath164 .",
    "consider a finite strip with a unidirectional variation of the thermal conductivity .",
    "the exponential spatial variation is taken @xmath165 with @xmath166 and @xmath167 .",
    "this problem has been considered in @xcite using the meshless lbie method ( mlpg4 ) with laplace transform in time , and in @xcite using mlpg4/5 with mls approximation for both time and space domains , and in @xcite using a rbf based meshless collocation method with time difference approximation .    in numerical calculations ,",
    "a square with a side - length @xmath168 cm and a @xmath169 regular node distribution is used .",
    "boundary conditions are imposed as bellow : the left side is kept to zero temperature and the right side has the heaviside step time variation i.e. , @xmath170 with @xmath171 . on the top and bottom sides",
    "the heat flux vanishes .",
    "we employed the ode solver ` ode15s ` from matlab for the final dae system , and we used the relative and absolute tolerances ` 1e-5 ` and ` 1e-6 ` , respectively . with these , we solved on a time interval of ` [ 0 60 ] ` with initial condition vector @xmath172 at time @xmath173 .",
    "the jacobian matrix can be defined in advance because it is constant in our linear dae .",
    "the integrator will detect stiffness of the system automatically and adjust its local stepsize .",
    "in special case with an exponential parameter @xmath174 which corresponds to a homogeneous material the analytical solution @xmath175 is available .",
    "it can be used to check the accuracy of the present numerical method .",
    "numerical results are computed at three locations along the @xmath176-axis with @xmath177 , @xmath178 and @xmath179 .",
    "results are depicted in fig .",
    "[ fig2 ] . an excellent agreement between numerical and analytical solutions",
    "is obtained .",
    "insert figure 2    it is known that the numerical results are rather inaccurate at very early time instants and at points close to the application of thermal shocks . therefore in fig .",
    "[ fig3 ] we have compared the numerical and analytical solutions at very early time instants ( @xmath180 $ ] ) . besides , in fig . [ fig4 ] the numerical and analytical solutions at points very close to the application of thermal shocks are given and compared for sample time @xmath181 sec .",
    "insert figures 3 and 4    the discussion above concerns heat conduction in homogeneous materials in a case where analytical solutions can be used for verification .",
    "consider now the cases @xmath182 , @xmath183 , @xmath184 , and @xmath185 m@xmath186 , respectively .",
    "the variation of temperature with time for the three first @xmath187-values at position @xmath188 are presented in fig .",
    "the results are in good agreement with figure 11 presented in @xcite , figure 6 presented in @xcite and figure 4 presented in @xcite .",
    "insert figure 5    in addition , in fig .",
    "[ fig6 ] numerical results are depicted for @xmath189 m@xmath186 . for high values of @xmath187 ,",
    "the steady state solution is achieved rapidly .",
    "insert figure 6    it is found from figs .",
    "[ fig5 ] and [ fig6 ] that the temperature increases with an increase in @xmath187-values .    for the final steady state",
    ", an analytical solution can be obtained as @xmath190 analytical and numerical results computed at time @xmath191 sec .",
    "are presented in fig .",
    "numerical results are in good agreement with analytical solutions for the steady state temperatures .",
    "insert figure 7",
    "the first author was financially supported by the center of excellence for mathematics , university of isfahan .",
    "d.  mirzaei , m.  dehghan , mlpg method for transient heat conduction problem with mls as trial approximation in both time and space domains , cmes  computer modeling in engineering & sciences , 72 ( 2011 ) 185 - 210 .",
    "j.  sladek , v.  sladek , ch .",
    "hellmich , j.  eberhardsteiner , heat conduction analysis of 3-d axisymmetric and anisotropic fgm bodies by meshless local petrov - galerkin method , comput .",
    "39 ( 2007 ) 223233 .",
    "j.  sladek , v .",
    "sladek , ch .",
    "zhang , transient heat conduction analysis in functionally graded materials by the meshless local boundary integral equation method , computational materials science , 28 ( 2003 ) 494504 ."
  ],
  "abstract_text": [
    "<S> as an improvement of the _ meshless local petrov  galerkin ( mlpg ) _ , the _ direct meshless local petrov  galerkin ( dmlpg ) _ method is applied here to the numerical solution of transient heat conduction problem . the new technique is based on _ direct _ recoveries of test functionals ( local weak forms ) from values at nodes without any detour via classical moving least squares ( mls ) shape functions . </S>",
    "<S> this leads to an absolutely cheaper scheme where the numerical integrations will be done over low  </S>",
    "<S> degree polynomials rather than complicated mls shape functions . </S>",
    "<S> this eliminates the main disadvantage of mls based methods in comparison with finite element methods ( fem ) , namely the costs of numerical integration .    </S>",
    "<S> example.eps gsave newpath 20 20 moveto 20 220 lineto 220 220 lineto 220 20 lineto closepath 2 setlinewidth gsave .4 setgray fill grestore stroke grestore </S>"
  ]
}
{
  "article_text": [
    "the first problem to demonstrate a superpolynomial separation between random and quantum polynomial time was the recursive fourier sampling problem  @xcite .",
    "exponential separations were subsequently discovered by simon  @xcite , who gave an oracle problem , and by shor  @xcite , who found polynomial time quantum algorithms for factoring and discrete log .",
    "we now understand that the natural generalization of simon s problem and the factoring and discrete log problems is the hidden subgroup problem ( hsp ) , and that when the underlying group is abelian and finitely generated , we can solve the hsp efficiently on a quantum computer .",
    "while recent results have continued to study important generalizations of the hsp ( for example ,  @xcite ) , only the recursive fourier sampling problem remains outside the hsp framework .    in this paper ,",
    "we give quantum algorithms for several hidden shift problems . in a hidden shift problem",
    "we are given two functions @xmath0 , @xmath1 such that there is a shift @xmath2 for which @xmath3 for all @xmath4 .",
    "the problem is then to find @xmath2 .",
    "we show how to solve this problem for several classes of functions , but perhaps the most interesting example is the shifted legendre symbol problem , where @xmath1 is the legendre symbol is defined to be 0 if @xmath5 divides @xmath4 , 1 if @xmath4 is a quadratic residue mod @xmath5 and @xmath6 if @xmath4 is not a quadratic residue mod @xmath5 . ] with respect to a prime size finite field , and the problem is then : `` given the function @xmath7 as an oracle , find @xmath2 '' .",
    "the oracle problem our algorithms solve can be viewed as the problem of predicting a pseudo - random function @xmath0 .",
    "such tasks play an important role in cryptography and have been studied extensively under various assumptions about how one is allowed to query the function ( nonadaptive versus adaptive , deterministic versus randomized , et cetera )  @xcite . in this paper",
    "we consider the case where the function is queried in a quantum mechanical superposition of different values @xmath4 .",
    "we show that if @xmath8 is an @xmath2-shifted multiplicative character @xmath9 , then a polynomial - time quantum algorithm making such queries can determine the hidden shift @xmath2 , breaking the pseudo - randomness of @xmath0 .",
    "we conjecture that classically the shifted legendre symbol is a pseudo - random function , that is , it is impossible to efficiently predict the value of the function after a polynomial number of queries if one is only allowed a classical algorithm with oracle access to @xmath0 .",
    "partial evidence for this conjecture has been given by damgrd  @xcite who proposed the related task : `` given a part of the legendre sequence @xmath10 , where @xmath11 is @xmath12 , predict the next value @xmath13 '' , as a hard problem with applications in cryptography .",
    "using the quantum algorithms presented in this paper , we can break certain algebraically homomorphic cryptosystems by a reduction to the shifted legendre symbol problem .",
    "the best known classical algorithm  @xcite for breaking these cryptosystems is subexponential and is based on a smoothness assumption .",
    "these cryptosystems can also be broken by shor s algorithm for period finding , but the two attacks on the cryptosystems appear to use completely different ideas .    while current quantum algorithms solve problems based on an underlying group and the fourier transform over that group , we initiate the study of problems where there is an underlying ring or field .",
    "the fourier transform over the additive group of the ring is defined using the characters of the additive group , the additive characters of the ring .",
    "similarly , the multiplicative group of units induces multiplicative characters of the ring .",
    "the interplay between additive and multiplicative characters is well understood  @xcite , and we show that this connection can be exploited in quantum algorithms . in particular , we put a multiplicative character into the phase of the registers and compute the fourier transform over the additive group .",
    "the resulting phases are the inner products between the multiplicative character and each of the additive characters , a gauss sum .",
    "we hope the new tools presented here will lead to other quantum algorithms .",
    "we give algorithms for three types of hidden shift problems :    in the first problem , @xmath1 is a multiplicative character of a finite field . given @xmath0 , a shifted version of @xmath1 , the shift is uniquely determined from @xmath0 and @xmath1 .",
    "an example of a multiplicative character of @xmath14 is the legendre symbol .",
    "our algorithm uses the fourier transform over the additive group of a finite field .    in the second problem",
    ", @xmath1 is a multiplicative character of the ring @xmath15 .",
    "this problem has the feature that the shift is not uniquely determined by @xmath0 and @xmath1 and our algorithm identifies all possible shifts .",
    "an example of a multiplicative character of @xmath15 is the jacobi symbol is defined so that it satisfies the relation @xmath16 and reduces to the legendre symbol when the lower parameter is prime . ] .    in the third problem",
    "we have the same setup as in the second problem with the additional twist that @xmath17 is unknown .",
    "we also define the _ hidden coset problem _ , which is a generalization of the hidden shift problem and the hidden subgroup problem .",
    "this definition provides a unified way of viewing the quantum fourier transform s ability to capture subgroup and shift structure .",
    "some of our hidden shift problems can be reduced to the hsp , although efficient algorithms for these hsp instances are not known . assuming conjecture  2.1 from  @xcite",
    ", the shifted legendre symbol problem over @xmath18 can be reduced to an instance of the hsp over the dihedral group @xmath19 in the following way .",
    "let @xmath20 and @xmath21 , where @xmath2 is unknown and @xmath22 .",
    "then the hidden subgroup is @xmath23 .",
    "this conjecture is necessary to ensure that @xmath0 will be distinct on distinct cosets of @xmath24 . for",
    "the general shifted multiplicative character problem , the analogous reduction to the hsp may fail because @xmath0 may not be distinct on distinct cosets .",
    "however , we can efficiently generate random coset states , that is , superpositions of the form @xmath25 , although it is unknown how to use these to efficiently find  @xmath2  @xcite .",
    "the issue of nondistinctness on cosets in the hsp has been studied for some groups  @xcite .",
    "the existence of a time efficient quantum algorithm for the shifted legendre symbol problem was posed as an open question in  @xcite .",
    "the fourier transform over the additive group of a finite field was independently proposed for the solution of a different problem in  @xcite .",
    "the current paper subsumes  @xcite and  @xcite . building on the ideas in this paper , a quantum algorithm for estimating gauss sums",
    "is described in  @xcite .",
    "this paper is organized as follows .",
    "section  [ sect : background ] contains some definitions and facts . in section  [",
    "sect : idea ] , we give some intuition for the ideas behind the algorithms . in section  [",
    "sect : finitefields ] , we present an algorithm for the shifted multiplicative problem over finite fields , of which the shifted legendre symbol problem is a special case , and show how we can use this algorithm to break certain algebraically homomorphic cryptosystems .",
    "in section  [ sect : rings ] , we extend our algorithm to the shifted multiplicative problem over rings @xmath15 .",
    "this has the feature that unlike in the case of the finite field , the possible shifts may not be unique .",
    "we then show that this algorithm can be extended to the situation where @xmath17 is unknown . in section  [",
    "sect : hcp ] , we show that all these problems lie within the general framework of the hidden coset problem . we give an efficient algorithm for the hidden coset problem provided @xmath1 satisfies certain conditions .",
    "we also show how our algorithm can be interpreted as solving a deconvolution problem using fourier transforms .",
    "we use the following notation : @xmath26 is the @xmath17th root of unity @xmath27 , and @xmath28 denotes the fourier transform of the function @xmath0 .",
    "an algorithm computing in @xmath29 , @xmath15 or @xmath30 runs in polynomial time if it runs in time polynomial in @xmath31 , @xmath32 or @xmath33 .    in a ring @xmath15 or a field @xmath29 ,",
    "additive characters @xmath34 ( @xmath35 or @xmath36 ) are characters of the additive group , that is , @xmath37 , and multiplicative characters @xmath38 ( @xmath39 or @xmath40 ) are characters of the multiplicative group of units , that is , @xmath41 for all @xmath4 and @xmath42 .",
    "we extend the definition of a multiplicative character to the entire ring or field by assigning the value zero to elements outside the unit group .",
    "all nonzero @xmath43 values have unit norm and so @xmath44 .",
    "we ignore the normalization term in front of a superposition unless we need to explicitly calculate the probability of measuring a particular value .",
    "we will need to compute the superposition @xmath45 where @xmath8 is in the _",
    "amplitude_.    [ lemma : superposition ]",
    "let @xmath46 be a complex - valued function defined on the set @xmath30 such that @xmath8 has unit magnitude whenever @xmath8 is nonzero .",
    "then there is an efficient algorithm for creating the superposition @xmath47 with success probability equal to the fraction of @xmath4 such that @xmath8 is nonzero and that uses only two queries to the function @xmath0 .",
    "start with the superposition over all @xmath4 , @xmath48 .",
    "compute @xmath8 into the second register and measure to see whether @xmath8 is nonzero .",
    "this succeeds with probability equal to the fraction of @xmath4 such that @xmath8 is nonzero .",
    "then we are left with a superposition over all @xmath4 such that @xmath8 is nonzero .",
    "compute the phase of @xmath8 into the phase of @xmath49 .",
    "this phase computation can be approximated arbitrarily closely by approximating the phase of @xmath8 to the nearest @xmath50th root of unity for sufficiently large  @xmath17 .",
    "use a second query to @xmath0 to reversibly uncompute the @xmath8 from the second register .",
    "it is not known how to efficiently compute the quantum fourier transform over @xmath15 exactly .",
    "however , efficient approximations are known  @xcite .",
    "we can even compute an efficient approximation to the distribution induced when @xmath17 is unknown as long as we have an upper bound on @xmath17  @xcite .",
    "we will need to approximately fourier sample to solve the unknown @xmath17 case of the shifted character problem in section  [ sect : unknown ] .",
    "to fourier sample a state @xmath51 , we form the state @xmath52 that is the result of repeating @xmath51 many times .",
    "we then fourier sample from @xmath52 and use continued fractions to reduce the expanded range of values .",
    "this expansion into @xmath52 allows us to perform the fourier sampling step over a length from which we _ can _ exactly fourier sample .",
    "more formally , let @xmath53 be an arbitrary superposition , and @xmath54 be the distribution induced by fourier sampling @xmath51 over @xmath55 .",
    "let the superposition @xmath56 be @xmath51 repeated until some arbitrary integer @xmath57 , not necessarily a multiple of @xmath17 .",
    "let @xmath58 be the distribution induced by fourier sampling @xmath52 over @xmath59 rather than @xmath60 ( where @xmath61 and @xmath62 if @xmath63 ) .",
    "notice that @xmath54 is a distribution on @xmath55 and @xmath58 is a distribution on @xmath59 .",
    "we can now define the two distributions we will compare . let @xmath64 be the distribution induced on the reduced fractions of @xmath54 , that is , if @xmath4 is a sample from @xmath54 , we return the fraction @xmath65 in lowest terms . in particular ,",
    "define @xmath66 if @xmath67 .",
    "let @xmath68 be the distribution induced on fractions from sampling @xmath58 to obtain @xmath4 , and then using continued fractions to compute the closest approximation to @xmath69 with denominator at most  @xmath17 .",
    "if @xmath70 and @xmath71 , then @xmath72 .      the elements of a finite field @xmath29 ( where @xmath73 for some prime @xmath5 ) can be represented as polynomials in @xmath74 $ ] modulo a degree @xmath75 irreducible polynomial in @xmath74 $ ] .",
    "in this representation , addition , subtraction , multiplication and division can all be performed in @xmath76 time  @xcite .",
    "we will need to compute the fourier transform over the additive group of a finite field , which is isomorphic to @xmath77 .",
    "the additive characters are of the form @xmath78 , where @xmath79 is the trace of the finite field @xmath80 , and @xmath81  @xcite .",
    "we can efficiently compute the fourier transform over the additive group of a finite field .",
    "[ thm : tft ] the fourier transform @xmath82 can be approximated to within error @xmath83 in time polynomial in @xmath31 and @xmath84 .",
    "see  @xcite .",
    "( independently , the efficiency of this transform was also shown in  @xcite . )    for clarity of exposition we assume throughout the rest of the paper that this fourier transform can be performed exactly , as we can make the errors due to the approximation exponentially small with only polynomial overhead .",
    "the multiplicative group @xmath85 of a finite field @xmath86 is cyclic .",
    "let @xmath1 be a generator of @xmath85 .",
    "then the multiplicative characters of @xmath86 are of the form @xmath87 for all @xmath88 where the @xmath89 different multiplicative characters are indexed by @xmath90 .",
    "the trivial character is the character with @xmath91 .",
    "we can extend the definition of @xmath38 to @xmath86 by defining @xmath92 . on a quantum computer we can efficiently compute @xmath43 because the value is determined by the discrete logarithm @xmath93 , which can be computed efficiently using shor s algorithm  @xcite .",
    "the fourier transform of a multiplicative character @xmath38 of the finite field @xmath86 is given by @xmath94  @xcite .",
    "let @xmath95 be the prime factorization of @xmath17 .",
    "then by the chinese remainder theorem , @xmath96 .",
    "every multiplicative character @xmath38 of @xmath15 can be written as the product @xmath97 , where @xmath98 is a multiplicative character of @xmath99 and @xmath100 .",
    "we say @xmath38 is _ completely nontrivial _ if each of the @xmath98 is nontrivial .",
    "we extend the definition of @xmath38 to all of @xmath15 by defining @xmath101 if @xmath102 .",
    "the character @xmath38 is aperiodic on @xmath103 if and only if all its @xmath98 factors are aperiodic over their respective domains @xmath104 .",
    "we call @xmath38 a _ primitive character _",
    "if it is completely nontrivial and aperiodic .",
    "hence , @xmath38 is primitive if and only if all its @xmath98 terms are primitive .",
    "it is well known that the fourier transform of a primitive @xmath38 is @xmath105 .",
    "if @xmath38 is completely nontrivial but periodic with period @xmath11 , then its fourier transform obeys @xmath106 , where @xmath107 is the primitive character obtained by restricting @xmath38 to @xmath108 .",
    "see the book by tolimieri et al .  for details  @xcite .",
    "we give some intuition for the ideas behind our algorithms for the hidden shift problem .",
    "we use the shifted legendre symbol problem as our running example , but the approach works more generally . in the shifted legendre symbol problem we are given a function @xmath109 such that @xmath7 , and are asked to find @xmath2 .",
    "the legendre symbol @xmath110 is the quadratic multiplicative character of @xmath111 defined : @xmath112 is @xmath113 if @xmath4 is a square modulo @xmath5 , @xmath6 if it is not a square , and @xmath114 if @xmath115 .",
    "the algorithm starts by putting the function value in the phase to get @xmath116 .",
    "assume the functions @xmath117 are mutually ( near ) orthogonal for different @xmath118 , so that the inner product @xmath119 approximates the delta function value @xmath120 .",
    "using this assumption , define the ( near ) unitary matrix @xmath121 , where the @xmath118th row is @xmath122 .",
    "our quantum state @xmath123 is one of the rows , hence @xmath124 .",
    "the problem then reduces to : how do we efficiently implement @xmath121 ? by definition , @xmath121 is a circulant matrix ( @xmath125 ) .",
    "since the fourier transform matrix diagonalizes a circulant matrix , we can write @xmath126 , where @xmath127 is diagonal . thus we can implement @xmath121 if we can implement @xmath127 .",
    "the vector on the diagonal of @xmath127 is the vector @xmath128 , the inverse fourier transform of the legendre symbol .",
    "the legendre symbol is an eigenvector of the fourier transform , so the diagonal matrix contains the values of the legendre symbol times a global constant that can be ignored .",
    "because the legendre symbol can be computed efficiently classically , it can be computed into the phase , so @xmath121 can be implemented efficiently .    in summary , to implement @xmath121 for the hidden shift problem for the legendre symbol , compute the fourier transform , compute @xmath112 into the phase at @xmath129 , and then compute the fourier transform again ( it is not important whether we use @xmath130 or @xmath131 ) .",
    "figure  [ fig : shift ] shows a circuit diagram outlining the algorithm for the hidden shift problem in general .",
    "contrast this with the circuit for the hidden subgroup problem shown in figure  [ fig : hsp ] .",
    "[ cl]@xmath132 [ cc]@xmath130 [ cc]@xmath133 [ cc]@xmath134 [ cl]measure    [ cc]@xmath135 [ cl]@xmath132 [ cc]@xmath130 [ cl]measure",
    "in this section we show how to solve the hidden shift problem for any nontrivial multiplicative character of a finite field .",
    "the fourier transform we use is the fourier transform over the additive group of the finite field .",
    "( shifted multiplicative character problem over finite fields ) given a nontrivial multiplicative character @xmath38 of a finite field  @xmath29 ( where @xmath73 for some prime @xmath5 ) , and a function @xmath0 for which there is an @xmath2 such that @xmath136 for all @xmath4 .",
    "find @xmath2 .",
    "( shifted multiplicative character problem over finite fields ) [ alg : finitefield ]     1 .",
    "create @xmath137 .",
    "[ alg : finitefield : superposition ] 2 .",
    "compute the fourier transform to obtain @xmath138 .",
    "[ alg : finitefield:1stft ] 3 .   for all @xmath139 , compute @xmath140 into the phase to obtain @xmath141 .",
    "[ alg : finitefield : conjugate ] 4 .",
    "compute the inverse fourier transform and measure the outcome @xmath142 .",
    "[ alg : finitefield:2ndft ]    [ thm : ff ] for any finite field and any nontrivial multiplicative character , algorithm  [ alg : finitefield ] solves the shifted multiplicative character problem over finite fields with probability @xmath143 .    1 .",
    "since @xmath144 only at @xmath145 , by lemma  [ lemma : superposition ] we can create the superposition with probability @xmath146 .",
    "2 .   by lemma  [ thm : tft ]",
    "we can compute the fourier transform efficiently .",
    "the fourier transform moves the shift  @xmath2 into the phase as described .",
    "3 .   because @xmath147 for every nonzero @xmath42 , the phase change @xmath148 establishes the required transformation .",
    "the amplitude of @xmath149 is @xmath150 @xmath151 @xmath152 , so the probability of measuring @xmath142 is @xmath146 .",
    "the legendre symbol @xmath153 is a quadratic multiplicative character of @xmath111 defined : @xmath112 is @xmath154 if @xmath4 is a square modulo @xmath5 , @xmath6 if it is not a square , and @xmath114 if @xmath145 . the quantum algorithm of the previous section showed us how we can determine the shift @xmath155 given the function @xmath156 .",
    "we now show how this algorithm enables us to break schemes for ` algebraically homomorphic encryption ' .",
    "a cryptosystem is _ algebraically homomorphic _ if given the encryption of two plaintexts @xmath157 , @xmath158 with @xmath159 , an untrusted party can construct the encryption of the plaintexts @xmath160 and @xmath161 in polynomial - time . more formally , we have the secret encryption and decryption functions @xmath162 and @xmath163 , in combination with the public add and multiplication transformations @xmath164 and @xmath165 such that @xmath166 and @xmath167 for all @xmath159 .",
    "we assume that the functions @xmath168 , @xmath127 , @xmath169 and @xmath170 are deterministic .",
    "the decryption function may be many - to - one . as a result the encryption of a given number can vary depending on how the number is constructed .",
    "for example , @xmath171 may not be equal to @xmath172 .",
    "in addition to the public @xmath169 and @xmath170 functions , we also assume the existence of a zero - tester @xmath173 , with @xmath174 if @xmath145 , and @xmath175 otherwise .",
    "an algebraically homomorphic cryptosystem is a cryptographic primitive that enables two players to perform noninteractive secure function evaluation .",
    "it is an open problem whether or not such a cryptosystem can be constructed .",
    "we say we can break such a cryptosystem if , given @xmath176 , we can recover @xmath2 in time polylog(@xmath5 ) with the help of the public functions @xmath177 and @xmath178 .",
    "the best known classical attack , due to boneh and lipton  @xcite , has expected running time @xmath179 for the field @xmath111 and is based on a smoothness assumption .",
    "suppose we are given the ciphertext @xmath176 .",
    "test @xmath176 using the @xmath178 function .",
    "if @xmath2 is not zero , create the encryption @xmath180 via the identity @xmath181 , which holds for all nonzero @xmath4 . in particular",
    ", using @xmath176 and the @xmath170 function , we can use repeated squaring and compute @xmath182 in @xmath183 steps .    clearly , from @xmath180 and the @xmath169 function we can construct @xmath157 for every @xmath184 . then , given such an @xmath157 , we can compute @xmath7 in the following way . add @xmath176 and @xmath157 , yielding @xmath185 , and then compute the encrypted @xmath186th power . ] of @xmath187 , giving @xmath188 .",
    "next , add @xmath189 , @xmath190 or @xmath180 and test if it is an encryption of zero , and return @xmath114 , @xmath113 or @xmath6 accordingly . applying this method on a superposition of @xmath129 states , we can create ( after reversibly uncomputing the garbage of the algorithm ) the state @xmath191 .",
    "we can then recover @xmath2 by using algorithm  [ alg : finitefield ] .",
    "given an efficient test to decide if a value is an encryption of zero , algorithm  [ alg : finitefield ] can be used to break any algebraically homomorphic encryption system .",
    "we can also break algebraically homomorphic cryptosystems using shor s discrete log algorithm as follows .",
    "suppose @xmath1 is a generator for @xmath192 and that we are given the unknown ciphertext @xmath193 .",
    "create the superposition @xmath194 and then append the state @xmath195 to the superposition in @xmath196 by the procedure described above .",
    "next , uncompute the value @xmath197 , which gives @xmath198 . rewriting this as @xmath199 and observing that the @xmath200 are almost orthogonal",
    ", we see that we can apply the methods used in shor s discrete log algorithm to recover @xmath2 and thus @xmath201 .",
    "in this section we show how to solve the shifted multiplicative character problem for @xmath15 for any completely nontrivial multiplicative character of the ring @xmath15 and extend this to the case when @xmath17 is unknown . unlike in the case for finite fields ,",
    "the characters may be periodic .",
    "thus the shift may not be unique .",
    "the fourier transform is now the familiar fourier transform over the additive group @xmath15 .",
    "( shifted multiplicative character problem over @xmath15 ) given @xmath38 , a completely nontrivial multiplicative character of @xmath15 , and a function @xmath0 for which there is an @xmath2 such that @xmath136 for all @xmath4 .",
    "find all @xmath204 satisfying @xmath205 for all @xmath4 .",
    "multiplicative characters of @xmath15 may be periodic , so to solve the shifted multiplicative character problem we first find the period and then we find the shift .",
    "if the period is @xmath11 then the possible shifts will be @xmath206 .",
    "( shifted multiplicative character problem over @xmath15 )   [ alg : ring ]    1 .",
    "find the period @xmath11 of @xmath38 .",
    "let @xmath107 be @xmath38 restricted to @xmath207 . [ alg :",
    "ring : period ] 1 .",
    "create @xmath208 .",
    "2 .   compute the fourier transform over @xmath15 to obtain @xmath209 .",
    "3 .   measure @xmath210 .",
    "compute @xmath211 .",
    "2 .   find @xmath2 using the period @xmath11 and @xmath107 : [ alg : ring : shift ] 1 .",
    "create @xmath212 .",
    "[ alg : ring : shift : superposition ] 2 .",
    "compute the fourier transform over @xmath213 to obtain @xmath214 .",
    "3 .   for all @xmath42 coprime to @xmath11 , @xmath215 into the phase to obtain @xmath216 .",
    "4 .   compute the inverse fourier transform and measure .",
    "[ alg : ring : shift : measure ]    algorithm  [ alg : ring ] solves the shifted multiplicative character problem over @xmath15 for completely nontrivial multiplicative characters of @xmath15 in polynomial time with probability at least @xmath217 .",
    "note : because @xmath38 is completely nontrivial , @xmath107 is a primitive character of @xmath218 .    1 .   1",
    ".   @xmath9 is nonzero exactly when",
    "@xmath219 so by lemma  [ lemma : superposition ] we can create the superposition with probability @xmath220 .",
    "2 .   since @xmath38 has period  @xmath11 , the fourier transform is nonzero only on multiples of @xmath221 .",
    "3 .   since @xmath222 , and @xmath223 is nonzero precisely when @xmath224 , when we measure @xmath225 we have @xmath226 .",
    "2 .   1 .   similar to the argument above",
    ", we can create the superposition with probability @xmath227 .",
    "2 .   the fourier transform moves the shift  @xmath2 into the phase .",
    "3 .   as in the case for the finite field",
    ", this can be done by computing the phase of @xmath223 into the phase of @xmath228 .",
    "4 .   let @xmath229 .",
    "@xmath230 so @xmath231 .",
    "then the amplitude of @xmath149 after the fourier transform is @xmath232 so the probability of measuring @xmath149 is @xmath227 .",
    "thus the algorithm succeeds with probability @xmath233 , which in turn is lower bounded by @xmath234 .",
    "we now consider the case when @xmath17 is unknown .",
    "( shifted multiplicative character problem over @xmath15 with unknown @xmath17 )   + given a completely nontrivial multiplicative character @xmath235 , for some unknown @xmath17 , there is an @xmath2 such that @xmath136 for all @xmath4 .",
    "find all @xmath204 satisfying @xmath205 for all @xmath4 .    given a lower bound on the size of the period of @xmath0",
    ", we can efficiently solve the shifted multiplicative character problem over @xmath15 for unknown @xmath17 on a quantum computer .",
    "let @xmath11 be the period of @xmath0 and @xmath107 be @xmath38 restricted to @xmath213 . using the fourier sampling algorithm described in section  [ sect : background : fouriersampling ]",
    ", we can approximately fourier sample @xmath0 over @xmath213 . because @xmath223 is nonzero precisely when @xmath236 , this fourier sampling algorithm returns @xmath237 with high probability , where @xmath42 is coprime to @xmath11 .",
    "thus we can find @xmath11 with high probability .",
    "next , apply algorithm  [ alg : ring ] to find @xmath238 .",
    "in this section we define the hidden coset problem and give an algorithm for solving the problem for abelian groups under certain conditions .",
    "the algorithm consists of two parts , identifying the hidden subgroup and finding a coset representative . finding a coset representative can be interpreted as solving a deconvolution problem .",
    "the algorithms for hidden shift problems and hidden subgroup problems can be viewed as exploiting different facets of the power of the quantum fourier transform . after computing a fourier transform ,",
    "the subgroup structure is captured in the magnitude whereas the shift structure is captured in the phase . in the hidden subgroup problem we measure after computing the fourier",
    "transform and so discard information about shifts .",
    "our algorithms for hidden shift problems do additional processing to take advantage of the information encoded in the phase .",
    "thus the solution to the hidden coset problem requires fully utilizing the abilities of the fourier transform .",
    "( hidden coset problem ) given functions @xmath0 and @xmath1 defined on a group  @xmath30 such that for some @xmath239 , @xmath3 for all @xmath4 in @xmath30 , find the set of all @xmath204 satisfying @xmath240 for all @xmath4 in @xmath30 .",
    "@xmath0 is given as an oracle , and @xmath1 is known but not necessarily efficiently computable .",
    "the answer to the hidden coset problem is a coset of some subgroup @xmath24 of @xmath30 , and @xmath1 is constant on cosets of @xmath24 .",
    "let @xmath241 be the set of all solutions and let @xmath24 be the largest subgroup of @xmath30 such that @xmath1 is constant on cosets of @xmath24 .",
    "clearly this is well defined ( note @xmath24 may be the trivial subgroup as in the shifted legendre symbol problem ) .",
    "suppose @xmath242 are in @xmath243 .",
    "then we have @xmath244 for all @xmath4 in @xmath30 , so @xmath245 is in @xmath24 .",
    "this shows @xmath243 is a contained in a coset of @xmath24 .",
    "since @xmath2 is in @xmath243 we must have that @xmath243 is contained in @xmath246 .",
    "conversely , suppose @xmath247 is in @xmath246 ( where @xmath248 is in @xmath24 ) .",
    "then @xmath249 for all @xmath4 in @xmath30 , hence @xmath247 is in @xmath243 .",
    "it follows that @xmath250 .",
    "while this proof was written with additive notation , it carries through if the group is nonabelian .",
    "we start by finding the subgroup @xmath24 .",
    "we give two different algorithms for determining @xmath24 , the `` standard '' algorithm for the hidden subgroup problem , and the algorithm we used in section  [ sect : rings ] .    in the standard algorithm for",
    "the hidden subgroup problem we form a superposition over all inputs , compute @xmath251 into a register , measure the function value , compute the fourier transform and then sample .",
    "the standard algorithm may fail when @xmath1 is not distinct on different cosets of @xmath24 .",
    "in such cases , we need other restrictions on @xmath1 to be able to find the hidden subgroup @xmath24 using the standard algorithm .",
    "boneh and lipton  @xcite , mosca and ekert  @xcite , and hales and hallgren  @xcite have all given criteria under which the standard hidden subgroup algorithm outputs @xmath24 even when @xmath1 is not distinct on different cosets of @xmath24 .",
    "in section  [ sect : rings ] we used a different algorithm to determine @xmath24 because the function we were considering did not satisfy the conditions mentioned above . in this algorithm",
    "we compute the value of @xmath1 into the _ amplitude _ , fourier transform and then sample , whereas in the standard hidden subgroup algorithm we compute the value of @xmath1 into a _",
    "register_. in general , this algorithm works when the fraction of values for which @xmath252 is zero is sufficiently small and the nonzero values of @xmath252 have constant magnitude .",
    "once we have identified @xmath24 , we can find a coset representative by solving the associated hidden coset problem for @xmath253 and @xmath254 where @xmath253 and @xmath254 are defined on the quotient group @xmath255 and are consistent in the natural way with @xmath0 and @xmath1 . for notational convenience",
    "we assume that @xmath0 and @xmath1 are defined on @xmath30 and that @xmath24 is trivial , that is , the shift is uniquely defined .",
    "the hidden shift problem may be interpreted as a _ deconvolution _ problem . in a deconvolution problem , we are given functions @xmath1 and @xmath256 ( the convolution of @xmath1 with some unknown function @xmath248 ) and asked to find this @xmath248 .",
    "let @xmath257 be the delta function centered at @xmath42 . in the hidden shift problem , @xmath0 is the convolution of @xmath258 and @xmath1 , that is , @xmath259 .",
    "finding @xmath2 , or equivalently finding @xmath258 , given @xmath0 and @xmath1 , is therefore a deconvolution problem .    recall that under the fourier transform convolution becomes pointwise multiplication .",
    "thus , taking fourier transforms , we have @xmath260 and hence @xmath261 provided @xmath252 is everywhere nonzero .",
    "for the multiplication by @xmath262 to be performed efficiently on a quantum computer would require @xmath252 to have constant magnitude and be everywhere nonzero .",
    "however , even if only a fraction of the values of @xmath252 are zero we can still approximate division of @xmath252 by only dividing when @xmath252 is nonzero and doing nothing otherwise . the zeros of @xmath252",
    "correspond to loss of information about @xmath258 .",
    "[ alg : hcp : algorithm ]     1 .",
    "[ alg : hcp : superposition ] create @xmath263 .",
    "[ alg : hcp:1stft ] compute the fourier transform to obtain @xmath264 , where @xmath265 are the characters of the group @xmath30 .",
    "3 .   [ alg : hcp : invertg ] for all @xmath265 for which @xmath266 is nonzero compute @xmath267 into the phase to obtain @xmath268 .",
    "[ alg : hcp:2ndft ] compute the inverse fourier transform and measure to obtain @xmath142 .    [ algorithm ] suppose @xmath0 and @xmath252 are efficiently computable , the magnitude of @xmath8 is constant for all values of @xmath4 in @xmath30 for which @xmath8 is nonzero , and the magnitude of @xmath266 is constant for all values of @xmath265 in @xmath269 for which @xmath266 is nonzero .",
    "let @xmath270 be the fraction of @xmath4 in @xmath30 for which @xmath8 is nonzero and @xmath271 be the fraction of @xmath265 in @xmath269 for which @xmath266 is nonzero .",
    "then the above algorithm outputs @xmath142 with probability @xmath272 .    1 .   by lemma  [ lemma : superposition ] we can create the superposition with probability  @xmath270 .",
    "2 .   the fourier transform moves the shift  @xmath2 into the phase .",
    "3 .   because @xmath252 has constant magnitude , for values where @xmath252 is nonzero , @xmath273 for some constant @xmath121 .",
    "so we can perform this step by computing the phase of @xmath274 into the phase . for the values where",
    "@xmath252 is zero we can just leave the phase unchanged as those terms are not present in the superposition .",
    "4 .   let @xmath275 .",
    "then the amplitude of @xmath149 is @xmath276 so we measure @xmath149 with probability @xmath271 .",
    "thus the algorithm succeeds in identifying @xmath2 with probability @xmath277 and only requires one query of @xmath0 and one query of @xmath252 .",
    "we show how the hidden shift problems we considered earlier fit into the framework of the hidden coset problem . in the shifted multiplicative character problem over finite fields",
    ", @xmath30 is the additive group of @xmath278 , @xmath279 and @xmath24 is trivial since the shift is unique for nontrivial @xmath38 . in the shifted multiplicative character problem over @xmath15",
    ", @xmath30 is the additive group of @xmath15 , @xmath279 and @xmath24 is the subgroup @xmath280 , where @xmath11 ( which is a factor of @xmath17 ) is the period of @xmath38 . in the shifted period",
    "multiplicative character problem over @xmath15 for unknown @xmath17 , @xmath30 is the additive group of @xmath281 , @xmath279 and @xmath24 is the infinite subgroup @xmath282 .",
    "we would like to thank the anonymous referee who pointed out the application of shifted legendre symbol problem to algebraically homomorphic cryptosystems and umesh vazirani , whose many suggestions greatly improved this paper .",
    "we also thank dylan thurston and an anonymous referee for pointing out that algebraically homomorphic cryptosystems can be broken using shor s algorithm for discrete log .",
    "thanks to lisa hales for helpful last minute suggestions ."
  ],
  "abstract_text": [
    "<S> almost all of the most successful quantum algorithms discovered to date exploit the ability of the fourier transform to recover subgroup structure of functions , especially periodicity . </S>",
    "<S> the fact that fourier transforms can also be used to capture shift structure has received far less attention in the context of quantum computation .    in this paper </S>",
    "<S> , we present three examples of `` unknown shift '' problems that can be solved efficiently on a quantum computer using the quantum fourier transform . we also define the _ hidden coset problem , _ which generalizes the hidden shift problem and the hidden subgroup problem . </S>",
    "<S> this framework provides a unified way of viewing the ability of the fourier transform to capture subgroup and shift structure . </S>"
  ]
}
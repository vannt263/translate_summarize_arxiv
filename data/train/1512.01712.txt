{
  "article_text": [
    "recurrent neural networks have recently been found to be very effective for many transduction tasks - that is transforming text from one form to another .",
    "examples of such applications include machine translation@xcite and speech recognition @xcite .",
    "these models are trained on large amounts of input and expected output sequences , and are then able to generate output sequences given inputs never before presented to the model during training .",
    "recurrent neural networks have also been applied recently to reading comprehension @xcite . there , the models are trained to recall facts or statements from input text .    our work is closely related to @xcite who also use a neural network to generate news headlines using the same dataset as this work .",
    "the main difference to this work is that they do not use a recurrent neural network for encoding , instead using a simpler attention - based model .",
    "we use the encoder - decoder architecture described in @xcite and @xcite , and shown in figure [ seqtoseq ] .",
    "the architecture consists of two parts - an encoder and a decoder - both by themselves recurrent neural networks .",
    "the encoder is fed as input the text of a news article one word of a time .",
    "each word is first passed through an embedding layer that transforms the word into a distributed representation . that distributed representation",
    "is then combined using a multi - layer neural network with the hidden layers generated after feeding in the previous word , or all 0 s for the first word in the text .",
    "the decoder takes as input the hidden layers generated after feeding in the last word of the input text .",
    "first , an end - of - sequence symbol is fed in as input , again using an embedding layer to transform the symbol into a distributed representation .",
    "then , the decoder generates , using a softmax layer and the attention mechanism , described in the next section , each of the words of the headline , ending with an end - of - sequence symbol . after generating each word that same word",
    "is fed in as input when generating the next word .",
    "the loss function we use is the log loss function : @xmath0 where @xmath1 represent output words and @xmath2 represent input words .",
    "note that during training of the model it is necessary to use what is called `` teacher forcing '' @xcite . instead of generating a new word and then feeding in that word as input when generating the next word , the expected word in the actual headline is fed in .",
    "however , during testing the previously generated word is fed in when generating the next word .",
    "that leads to a disconnect between training and testing . to overcome this disconnect , during training we randomly feed in a generated word , instead of the expected word , as suggested in @xcite",
    "specifically , we do this 10% of the time , as also done in @xcite . during testing",
    "we use a beam - search decoder which generates input words one at a time , at each step extending the @xmath3 highest probability sequences .",
    "we use 4 hidden layers of lstm units , specifically the variant described in @xcite .",
    "each layer has 600 hidden units .",
    "we attempted using dropout as is also described in @xcite .",
    "however we did not find it to be useful .",
    "thus , the models analyzed below do not use dropout .",
    "we initialize most parameters of the model uniformly in the range @xmath4 $ ] .",
    "we initialize the biases for each word in the softmax layer to the log - probability of its occurence in the training data , as suggested in @xcite .",
    "we use a learning rate of 0.01 along with the rmsprop @xcite adaptive gradient method . for rmsprop",
    "we use a decay of 0.9 and a momentum of 0.9 .",
    "we train for 9 epochs , starting to half the learning rate at the end of each epoch after 5 epochs .    additionally , we batch examples , processing 384 examples at a time .",
    "this batching complicates the implementation due to the varying lengths of different sequences .",
    "we simply fix the maximum lengths of input and output sequences and use special logic to ensure that the correct hidden states are fed in during the first step of the decoder , and that no loss is incurred past the end of the output sequence .",
    "attention is a mechanism that helps the network remember certain aspects of the input better , including names and numbers .",
    "the attention mechanism is used when outputting each word in the decoder . for each output word",
    "the attention mechanism computes a weight over each of the input words that determines how much attention should be paid to that input word .",
    "the weights sum up to 1 , and are used to compute a weighted average of the last hidden layers generated after processing each of the input words .",
    "this weighted average , referred to as the context , is then input into the softmax layer along with the last hidden layer from the current step of the decoding .",
    "we experiment with two different attention mechanisms .",
    "the first attention mechanism , which we refer to as _ complex _ attention , is the same as the _ dot _ mechanism in @xcite .",
    "this mechanism is shown in figure [ complex - attention ] . the attention weight for the input word at position @xmath5 , computed when outputting",
    "the @xmath6-th word is : @xmath7 where @xmath8 represents the last hidden layer generated after processing the @xmath5-th input word , and @xmath9 represents the last hidden layer from the current step of decoding .",
    "note one of the characteristics of this mechanism is that the same hidden units are used for computing the attention weight as for computing the context .",
    "the second attention mechanism , which we refer to as _",
    "simple _ attention , is a slight variation of the _ complex _ mechanism that makes it easier to analyze how the neural network learns to compute the attention weights .",
    "this mechanism is shown in figure [ simple - attention ] . here ,",
    "the hidden units of the last layer generated after processing each of the input words are split into 2 sets : one set of size 50 used for computing the attention weight , and the other of size 550 used for computing the context .",
    "analogously , the hidden units of the last layer from the current step of decoding are split into 2 sets : one set of size 50 used for computing the attention weight , and the other of size 550 fed into the softmax layer . aside from these changes the formula for computing the attention weights , given the correponding hidden units , and the formula for computing the context are kept the same .",
    "the model is trained using the english gigaword dataset , as available from the stanford linguistics department .",
    "this dataset consists of several years of news articles from 6 major news agencies , including the new york times and the associated press .",
    "each of the news articles has a clearly delineated headline and text , where the text is broken up into paragraphs .",
    "after the preprocessing described below the training data consists of 5.5 m news articles with 236 m words .",
    "the headline and text are lowercased and tokenized , separating punctuation from words . only the first paragraph of the text",
    "an end - of - sequence token is added to both the headline and the text .",
    "articles that have no headline or text , or where the headline or text lengths exceed 25 and 50 tokens , respectively , are filtered out , for computational efficiency purposes .",
    "all rare words are replaced with the @xmath10 unk @xmath11 symbol , keeping only the 40,000 most frequently occuring words .",
    "the data is split into a training and a holdout set .",
    "the holdout set consists of articles from the last month of data , with the second last month not included in either the training or holdout sets .",
    "this split helps ensure that no nearly duplicate articles make it into both the training and holdout sets .",
    "finally , the training data is randomly shuffled .",
    "the dataset as used has a number of issues .",
    "there are many training examples where the headline does not in fact summarize the text very well or at all .",
    "these include many articles that are formatted incorrectly , having the actual headline in the text section and the headline section containing words such as `` ( for use by new york times news service clients ) '' .",
    "there are many articles where the headline has some coded form , such as  biz - cover-1stld - writethru - nyt  or  bc - iraq - post 1stld - sub - pickup4thgraf  .",
    "no filtering of such articles was done .",
    "an ideal model should be able to handle such issues automatically , and attempts were made to do so using , for example , randomly feeding in generated words during training , as described in the model section .",
    "the performance of the model was measured in two different ways .",
    "first , we looked at the training and holdout loss .",
    "second , we used the bleu @xcite evaluation metric over the holdout set , defined next . for efficiency reasons ,",
    "the holdout metrics were computed over only 384 examples .",
    "the bleu evaluation metric looks at what fraction of n - grams of different lengths from the expected headlines are actually output by the model .",
    "it also considers the number of words generated in comparison to the number of words used in the expected headlines .",
    "both of these are computed over all 384 heldout example , instead of over each example separately . for the exact definition see @xcite .",
    "each model takes 4.5 days to train on a gtx 980 ti gpu .",
    "figures [ loss ] and [ bleu ] show the evaluation metrics as a function of training epoch .",
    "note that in our setup the training loss is generally higher than holdout loss , since when computing the holdout loss we do nt feed in generated words 10% of time .",
    "the model is quite effective in predicting headlines from the same newspapers as it was trained on .",
    "table [ example - predictions ] lists 7 examples chosen at random from the held - out examples .",
    "the model generally seems to capture the gist of the text and manages to paraphrase the text , sometimes using completely new words .",
    "however , it does make mistakes , for example , in sentences 2 , 4 and 7 .",
    ".example predictions [ cols=\"<,<,<\",options=\"header \" , ]     the neural network learns to spot many linguistic phenomena .",
    "our analysis was also somewhat shallow due to time constraints .",
    "we suspect that some of the neurons activate for even more complex phenomena than we are able to find , such as different types of sentence structure .",
    "it is important to note that the neurons in the encoding part of the network interact with the neurons in the decoding part of the network .",
    "indeed , the neurons in the decoding part of the network activate at different times to test for different phenomena .",
    "for example , unit 12 starts off being positive so that the network pays attention to the object first . then , unit 12 becomes negative so that the network pays attention to the subject .",
    "interestingly , unit 9 , which appears to work almost the same at unit 12 in the encoder , is usually 0 at the beginning of decoding , and only later on becomes activated .",
    "the network makes a lot of different types of errors .",
    "while we did nt do an in - depth error analysis , a few error still stood out .",
    "one flaw with the neural network mechanism is its tendency to fill in details when details are missing .",
    "for example , after simplifying the text given in table [ example - predictions ] , example 1 to `` 72 people died when a truck plunged into a gorge on friday . ''",
    "the model predicts `` 72 killed in truck accident in russia '' .",
    "the model makes up the fact that the accident happened in russia .",
    "these errors happen most often when the number of decoding beams is small , since the model stops considering the decoding where the sentence ends early before outputing the made up details .",
    "what also happens occasionally is the network outputs some headline that is completely unrelated to the input text ( e.g. `` urgent '' , `` bc - times '' or even `` can make individual purchases by calling 212 - 556 - 4204 or - 1927 . ) '' ) .",
    "this problem is caused by the fact that such headlines occur somewhat often in the input dataset .",
    "these errors happen most often when the number of decoding beams is large , since that increases the probability of the model starting to generate one such high probability sequence .",
    "these 2 examples demonstrate that our network is very sensitive to the number of decoding beams used .",
    "we used only 2 decoding beams for the bleu evaluation .",
    "we suspect that if we fixed the second problem we could get much better results with a large number of beams .",
    "one solution worthy of investigation is to use the scheduled sampling mechanism described in @xcite .",
    "we demostrate above that the recurrent neural network learns to model complex linguistic phenomena , given large amounts of training data",
    ". however , such large amounts of training data are usually not available for real - world nlp problems .",
    "one interesting direction to pursue is using a dataset , like gigaword , to pretrain a recurrent neural network that is then fine - tuned to solve a task such as part - of - speech tagging on a much smaller dataset .",
    "more immediately , in addition to the already discussed idea to use scheduled sampling , another way to improve the model is to use a bi - directional rnn .",
    "we suspect that the attention mechanism would work better with a bi - directional rnn , since more information would be available to model some of the phenomena outlined in table [ attention - neuron - purposes ] . in our current model ,",
    "the network must make a decision about which values to assign the neurons used to compute the attention weight for the current input word given only the current and previous words and not any of the following words . giving the model information about the following words would make this decision easier for the network to make .",
    "we ve trained an encoder - decoder recurrent neural network with lstm units and attention for generating news headlines using the texts of news articles from the gigaword dataset . using only the first 50 words of a news article , the model generates a concise summary of those 50 words , and most of the time",
    "the summary is valid and grammatically correct .",
    "the model does nt perform quite as well on general text , demonstrating that a lot of the articles in gigaword follow a particular form .",
    "we study 2 different versions of the attention mechanism with the goal of understanding how the model decides which words of the input text to pay attention to when generating each output word .",
    "we introduce a simplified attention mechanism that uses a small set of neurons for computing the attention weights .",
    "this simplified mechanism makes it easier to study the function of the network .",
    "we find that the network learns to detect linguistic phenomena , such as verbs , objects and subjects of a verb , ends of noun phrases , names , prepositions , negations , and so on .",
    "interestingly , we find that our simplified attention mechanism does better on the evaluation metrics .",
    "we d like to thank thang luong for his helpful suggestions and for sharing his machine translation code .",
    "we d like to thank samy bengio and andrej karpathy for suggesting a few interesting design alternatives .",
    "finally , we d like to thank chris r .",
    "some of the code written as part of doing research in his lab was used to complete this work ."
  ],
  "abstract_text": [
    "<S> we describe an application of an encoder - decoder recurrent neural network with lstm units and attention to generating headlines from the text of news articles . </S>",
    "<S> we find that the model is quite effective at concisely paraphrasing news articles . </S>",
    "<S> furthermore , we study how the neural network decides which input words to pay attention to , and specifically we identify the function of the different neurons in a simplified attention mechanism . </S>",
    "<S> interestingly , our simplified attention mechanism performs better that the more complex attention mechanism on a held out set of articles . </S>"
  ]
}
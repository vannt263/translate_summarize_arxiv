{
  "article_text": [
    "quantum algorithms for factoring and discrete logarithms require the ability to perform arithmetic operations on a quantum computer .",
    "one such operation is the addition of two @xmath2-bit numbers . in this paper",
    "i focus on the following problem .",
    "suppose we have two @xmath2-bit registers containing the binary representations of two @xmath2-bit numbers @xmath3 and @xmath4 .",
    "we wish to compute the @xmath2 least significant bits of @xmath5 ( i.e. we want to compute @xmath6 ) .",
    "we want the result to be computed in - place of the register initially containing @xmath4 .",
    "specifically , we are interested in a circuit implementing @xmath7 furthermore , we want the the circuit to be _ reversible_. a reversible circuit for the above task could be directly used in a quantum network to perform @xmath8 several quantum circuits have been proposed that perform this task .",
    "most of these are inherently classical reversible circuits ( @xcite , @xcite,@xcite ) and they require at least @xmath2 ancillary bits to keep track of the carry . for most of the practical proposed schemes for implementing quantum computers",
    ", qubits will be a very `` expensive '' resource .",
    "thus there is significant interest in implementing operations using as few qubits as possible .",
    "draper [ d00 ] has described a quantum circuit based on the quantum fourier transform that performs addition using no ancillary qubits .",
    "this approach uses rotation gates that must be implemented with exponential precision , or else be approximated .",
    "it is therefore of interest to investigate whether addition can be done without the need for @xmath0 ancillary bits , in a classical reversible way that does not require these quantum rotation gates . in the following sections",
    ", i will describe such a reversible circuit for addition that requires only 1 ancillary bit , and @xmath1 toffoli gates .",
    "after posting the original version of this note it was pointed out to me by c. zalka that essentially the same technique for addition was used in @xcite .",
    "the scenario in that paper was different , but it is clear how the technique they described generalizes to that in this paper .",
    "the addition circuit will be described in terms of not gates that are controlled on various patterns of control bits .",
    "the not gate , shown in figure [ fig_not ] , simply flips the binary value of a bit .",
    "that is , if the input to the not gate is 0 , the output is 1 , and vice versa .",
    "the quantum version of the not gate is represented by the pauli @xmath9 operator , and acts on qubit states in quantum superposition according to @xmath10    the simplest controlled not gate is the well known cnot gate , depicted in figure [ fig_cnot ] .",
    "the cnot gate applies the not operation to the `` target bit '' ( the lower bit in the figure ) , conditioned on the `` control bit '' ( the upper bit in the figure ) being equal to 1 .",
    "if the control bit is equal to 0 , the target bit is left alone .",
    "the quantum version of the cnot gate respects quantum superpositions and performs @xmath11    a generalized version of the cnot gate is the toffoli gate , shown in figure [ fig_toffoli ] .",
    "the toffoli gate has two control bits , and one target bit .",
    "the not operation is applied to the target bit conditioned on _ both _ the control bits being equal to 1 .",
    "the toffoli gate has the interesting properties that it is reversible , is and universal in the sense that any boolean operator can be simulated using it @xcite .",
    "so a quantum network for addition that uses only toffoli gates is actually a classical reversible circuit .",
    "a variant of the cnot gate is shown in figure [ fig_zero_cnot ] . here",
    "the not gate is applied to the target bit conditioned on the control bit equalling 0 .",
    "this is indicated in the figure by a hollow circle on the control bit , as opposed to a solid circle used in figure [ fig_cnot ] .",
    "as shown in the figure , the zero - controlled not gate can be implemented using a cnot , with not gates applied to the control bit before and after the cnot .",
    "we can also construct more elaborate controlled not `` gates '' , with the not operation applied conditioned on some @xmath12 control bits being in a specified pattern .",
    "for example , the `` gate '' shown in figure [ fig_fancy_cnot ] applies the not gate to the target bit conditioned on 3 control bits being in the pattern 101 .",
    "i will assume that the `` elementary gates '' we have at our disposal are @xmath13 . to determine the total depth of the circuits i will consider the circuits to be constructed only out of these elementary gates .",
    "we have seen how a zero - controlled not gate can be simulated using 2 not gates and a cnot gate .",
    "this means that the depth of a zero - controlled not gate is 3 .",
    "consider @xmath14 not gates , similar to that in figure [ fig_fancy_cnot ] , except with all the control bits being 1-controls ( solid black dots in the figure ) .",
    "this gate applies the not operation to the target bit only if all the control bits are in state @xmath15 .",
    "we are shown how to simulate the @xmath14 not gate by toffoli gates in @xcite . for a circuit having a total of @xmath16 bits , if @xmath17 , and @xmath18 , the @xmath14 not operation can be simulated using @xmath19 toffoli gates .",
    "note that the construction in @xcite does not require dedicated ancillary bits .",
    "the construction is illustrated for a specific example in figure [ fig_bbcex ] .",
    "consider the requirement that @xmath20 ( i.e. no more than half of the bits on the circuit can be used as control bits ) .",
    "the addition circuit i will describe later ( figure [ fig_add ] ) has @xmath21 bits ( where @xmath2 is the size of each of @xmath3 and @xmath4 ) and the controlled not gates will only use up to @xmath2 control bits .",
    "so this technical requirement will be satisfied , and we can use the above result to count the depth of the @xmath14 not gates .",
    "we wish to simulate a more general @xmath14 not gates such as those in figure [ fig_fancy_cnot ] , where some of the control bits are 0-controls ( hollow circles ) .",
    "to do this we have to add 2 to the overall depth , since we need to conjugate the 0-control bits with not gates , as in figure [ fig_zero_cnot ] .",
    "this means that the depth of a general controlled not gate is @xmath22 , where @xmath12 is the number of control bits ( providing the technical requirement @xmath23 is satisfied ) .",
    "a building block for the addition circuit is a circuit for _ incrementing _ an @xmath2-bit number : @xmath24 the circuit given in figure [ fig_inc ] does this with one ancillary bit , initially set to 1 .",
    "the ancillary bit will be known to equal 1 at the output of the circuit , and so can be re - used ( e.g. for further incrementing ) .",
    "that is , the circuit in figure [ fig_inc ] implements @xmath25    to understand how the circuit in figure [ fig_inc ] performs the incrementing , imagine how you would increment a binary number `` by hand '' .",
    "you would flip the least significant bit .",
    "if you had flipped it from a 0 to a 1 , you would be done .",
    "if you had flipped it from a 1 to a 0 , you would then proceed to flip the next most significant bit .",
    "you would proceed in this fashion until you had flipped a bit from 0 to 1 , at which point you would be done . the ancillary bit in the circuit",
    "can be viewed as a `` flag '' which signals the first time you have flipped a bit from @xmath26 to @xmath15 , and should stop flipping bits . the flag is @xmath15 as long as you should continue flipping bits , and then is set to @xmath26 when the condition is reached such that you should stop flipping bits .",
    "we know that at some point we will have flipped the state of the flag bit from @xmath15 to @xmath26 , unless the state of the @xmath27 least significant bits @xmath28 was initially @xmath29 . in this case",
    "the state of these bits after incrementing is @xmath30 .",
    "so after incrementing @xmath4 , the flag bit should be re - set to @xmath15 by a not gate , unless @xmath30 .",
    "the portion of the circuit of figure [ fig_inc ] surrounded by the dashed box accomplishes this uncomputing of the ancillary bit .",
    "note that i originally proposed this incrementing circuit in @xcite .",
    "the addition circuit will make use of a sequence of _ controlled_-incrementing circuits , @xmath31 .",
    "this will apply the incrementing circuit to an @xmath2-bit register containing @xmath4 , conditioned on a single control bit @xmath3 equalling @xmath15 .",
    "such a circuit can be realized by simply adding a control on @xmath3 to every gate in the incrementing circuit described above .",
    "the circuit and its abstract schematic symbol are shown in figure [ fig_cinc ] .",
    "now it can be seen that the circuit shown in figure [ fig_add ] performs the addition .",
    "the idea is that adding @xmath3 to @xmath4 modulo @xmath32 can be achieved by conditionally incrementing ( mod @xmath32 ) the @xmath33 most significant bits of @xmath4 , controlled on @xmath34 , for @xmath35 .",
    "the single ancillary bit is left in the state @xmath15 at the end of the circuit , and so can be re - used .",
    "it remains to determine the depth of the addition circuit .",
    "the addition circuit uses a sequence of @xmath2 controlled incrementing operations .",
    "let @xmath36 denote the depth of a controlled-@xmath37 operation .",
    "by carefully counting the depth of each of the general controlled not operations in the controlled-@xmath37 circuit , we find @xmath38 note that in the above calculation , i assumed that the controlled-@xmath37 operations will be in the context of a circuit having at least @xmath39 bits in total , so that the technical requirement of @xcite is satisfied .",
    "this is true in the context of the addition circuit , which has @xmath40 bits ( where @xmath2 is the size of @xmath3 and @xmath4 ) .    for @xmath41 ,",
    "the overall depth of the addition circuit is @xmath42",
    "we have seen how to perform in - place addition of two @xmath2-bit numbers with only 1 ancillary bit by an @xmath1-depth reversible circuit comprised of not , cnot and toffoli gates . after posting the original version of this note",
    "it was pointed out to me by c. zalka that essentially the same technique for addition was used in @xcite .",
    "the scenario in that paper was different , but it is clear how the technique they described generalizes to that in this paper .    the circuit in figure [ fig_add ] can be directly applied quantum states , provided we have a quantum implementation of the not , cnot and toffoli gates . in the language of quantum computing , the circuit would perform @xmath8 the circuit depth of @xmath1 probably means that it would not be practical for classical ( low power ) computing @xcite , but it may be practical for quantum computing if qubits are at a premium .",
    "99 adriano barenco , charles h. bennett , richard cleve , david p. divincenzo , norman margolus , peter shor , tycho sleator , john smolin , harald weinfurter , `` elementary gates for quantum computation '' , phys .",
    "a , 52:3457 - 3476 , 1995 .",
    "arxive e - print quant - ph/9503016 ."
  ],
  "abstract_text": [
    "<S> most of the work on implementing arithmetic on a quantum computer has borrowed from results in classical reversible computing ( e.g. @xcite , @xcite,@xcite ) . </S>",
    "<S> these quantum networks are inherently classical , as they can be implemented with only the toffoli gate . </S>",
    "<S> draper @xcite proposed an inherently `` quantum '' network for addition based on the quantum fourier transform . </S>",
    "<S> his approach has the advantage that it requires no carry qubits ( the previous approaches required @xmath0 carry qubits ) . </S>",
    "<S> the network in @xcite uses quantum rotation gates , which must either be implemented with exponential precision , or else be approximated . in this paper </S>",
    "<S> i give a network of @xmath1 toffoli gates for reversibly performing in - place addition with only a single ancillary bit , demonstrating that inherently quantum techniques are not required to achieve this goal ( provided we are willing to sacrifice quadratic circuit depth ) . after posting the original version of this note it was pointed out to me by c. zalka that essentially the same technique for addition was used in @xcite . </S>",
    "<S> the scenario in that paper was different , but it is clear how the technique they described generalizes to that in this paper . </S>"
  ]
}
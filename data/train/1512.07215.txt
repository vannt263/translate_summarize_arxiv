{
  "article_text": [
    "gal @xcite proposed a search problem on a connected network consisting of nodes joined by arcs .",
    "a _ searcher _ , beginning at a distinguished _ root _ node of the network moves around with unit speed with the aim of locating a target , or _",
    "hider _ , situated at an unknown point of the network .",
    "the problem for the searcher is to find a randomized search plan , or _",
    "mixed strategy _ that minimizes the expected time to locate the hider in the worst case . this can be viewed as a zero - sum game between the time minimizing searcher and the time maximizing hider .",
    "the idea of this game was originally conceived by @xcite .",
    "this is a natural model of many search problems in a military context , for example the problem of locating a terrorist , a bomb or a weapon cache hidden in a known environment .",
    "it is also relevant to search - and - rescue problems and to models of predator - prey interaction in the natural world . in security scenarios ,",
    "randomization can be exploited to ensure that your actions are not predictable to your opponent .",
    "an example of this is the use of randomized security patrolling used in los angeles airport ( see @xcite ) . but ease of implementation is also an important factor to consider , especially in a military context . in this paper",
    "we strive to balance the desire for randomness and unpredictability with the desire for easily implemented search strategies .    in his original work ,",
    "gal @xcite gave a full solution of his game for tree networks ( those with no cycles ) and eulerian networks ( those containing an eulerian tour , that is one that traverses each arc of the network exactly once ) .",
    "he found that for both these classes of networks it is optimal for the searcher to identify a minimal time tour , called a _ chinese postman tour _ ( or _ cpt _ ) of the network , and choose with equal probability the cpt or its reverse .",
    "this mixed strategy is known as a _ random chinese postman tour _ ( or _ rcpt _ ) , and it is easy to see that the expected time taken for the searcher using a rcpt to locate the hider , wherever he is located on the network , will be no more than half the length @xmath1 of the cpt .",
    "this is because if a given cpt finds a point of a network at time @xmath2 , the reverse of the cpt finds it at time no greater than @xmath3 , so that the expected discovery time is at most @xmath4 .    since its original formulation",
    "the game described above has received considerable attention , for example in the work of @xcite , @xcite and @xcite . in the latter work , gal finally completely classified those network for which it was optimal for the searcher to employ a rcpt .",
    "the networks for which this is the case are known as _ weakly eulerian _ , and are , roughly speaking , those consisting of a number of disjoint eulerian cycles which , when each contracted to a single point leave a tree .    on networks that are not weakly eulerian , little",
    "is known about the optimal search strategy in general .",
    "even very simple networks can have very complicated optimal search strategies .",
    "for example , the solution of the game played on the `` 3-arc network '' , consisting of 2 nodes joined by 3 unit length arcs was discovered by pavlovic @xcite not until several years after the model was first formulated .",
    "for this network , the optimal strategy for the searcher finds the hider in expected time @xmath5 , and the optimal searcher strategy is complicated , involving randomizing between a continuum of strategies .",
    "this would be impractical to implement , and so we may compare the performance of the optimal strategy of the searcher to that of a rcpt , which is straightforward to implement . in order to do this",
    "we calculate the _ approximation ratio _ of a rcpt : that is , the ratio between the maximum expected time that the rcpt finds a point on the network to that of an optimal strategy .",
    "since the length of a cpt for the 3-arc network is @xmath6 , a rcpt finds the hider in expected time no more than @xmath7 , so the rcpt has approximation ratio @xmath8 for this network .    in this paper",
    "we analyze the effectiveness of the rcpt as a search strategy in the general case , giving a simple formula in section [ sec : gal ] for calculating the approximation ratio of a rcpt and showing that it never exceeds @xmath0 .",
    "it is well known @xcite that the problem of finding a cpt is computable in polynomial time ( cubic in the number of nodes of the network ) , and once it has been found , a rcpt tour is easily implemented in a practical search situation by means of a toss of a coin .",
    "this work shows that the rcpt is not only easily implementable but also reasonably efficient as a search strategy .",
    "little attention has been paid in the literature to the problem of finding approximately optimal searcher strategies in unsolved cases of this game , and for search games in general .",
    "in section [ sec : f&f ] we go on to consider a natural variant on the original model in which the searcher wishes to minimize not simply the time to find the hider but the total time to find him and return to her starting point . the return speed may be different to the search speed .",
    "this model , known as _ find - and - fetch search _",
    ", was introduced recently in @xcite , and is a more appropriate model for search - and - rescue operations in which a casualty must be found and taken back to the hospital in least possible time .",
    "the model also pertains to foragers in the natural world who seek food to return to their lairs .",
    "this added detail complicates the solution to the model considerably , and in @xcite the solution is given for only some classes of tree networks .",
    "unlike in gal s original model , the searcher s optimal strategy in the find - and - fetch model is complicated and involves making a randomized decision at each node of the tree . in this work",
    "we assess the performance of a rcpt in the find - and - fetch model for _ all _ tree networks , finding a lower bound for the value of the game by using a new technique we call `` pruning '' to produce a new tree on which the game is easier to analyze .",
    "we also study the game on eulerian networks , again giving a simple formulas for the approximation ratio of a rcpt .",
    "this work lies in the general area of _ search games _ , on which there is an extensive literature . for good summaries",
    "see @xcite , @xcite and @xcite .",
    "in addition to the find - and - fetch model of alpern @xcite , there have been a number of recent extensions to the original model of search games on a network proposed by @xcite , for example recent work of @xcite and @xcite on search games with an arbitrary starting point for the searcher .",
    "search games in which the searcher must pay a _ search cost _ to inspect a node of the network are considered in @xcite and @xcite .",
    "the expanding search paradigm of @xcite models search problems in which the searcher can move instantaneously back to any point he has already searched , and @xcite consider a model in which the searcher can move at either a slow ( searching ) speed or a fast ( non - searching ) speed .",
    "there has also been much recent interest in _ patrolling games _ , which are search games on a network where a patroller wishes to intercept some terrorist attack , for example @xcite , @xcite and @xcite .",
    "let @xmath9 be a network consisting of arcs and nodes , with a distinguished root node @xmath10 .",
    "the network is assumed to be endowed with linear lebesgue measure @xmath11 , so that the length of an arc @xmath12 is @xmath13 .",
    "we write the total length of @xmath9 as @xmath14 .",
    "a _ search strategy _ is a unit speed path @xmath15 starting at @xmath10 , so that @xmath16 .",
    "arcs can be traversed in either direction , and the searcher does not have to finish traversing an arc after she starts , but can turn around and backtrack at any point . a _ mixed search strategy _ , usually denoted by a lower case letter",
    "@xmath17 is a probabilistic choice of strategies . for a given point @xmath18 on @xmath9 and a given search strategy @xmath19",
    ", we denote the first time that @xmath19 reaches @xmath18 by @xmath20 , which we call the _ search time_. that is @xmath21 note that a hiding place @xmath18 can be anywhere on the network , including in the interior of an arc . the search time is known to be well defined ( see @xcite ) .",
    "we consider the problem of determining the mixed strategy that minimizes the expected time to find any point on @xmath9 in the worst case .",
    "writing the set of all mixed search strategies as @xmath22 , the problem is to determine @xmath23 where @xmath24 is the expected value of the search time of @xmath18 under @xmath17 .",
    "this can be viewed as a zero - sum game @xmath25 between the searcher , who chooses a search strategy and a malevolent hider who picks a point on @xmath9 .",
    "the payoff , which the searcher seeks to minimize and the hider to maximize , is the search time .",
    "the game is known to have a value , @xmath26 ( see @xcite ) , and the players have optimal strategies , which in general are mixed ( randomized ) .",
    "a mixed strategy for the hider is a distribution over @xmath9 and is usually denoted by a lower case letter @xmath27 . for mixed strategies @xmath17 and @xmath27 of the searcher and hider ,",
    "respectively , we write @xmath28 for the expected value of the search time , which we called the _ expected search time_.    gal @xcite showed that if @xmath9 is a tree or eulerian , a rcpt is optimal for the searcher , as explained in the introduction , so that the value of the game is equal to @xmath29 , where @xmath30 is the length of a cpt . in the case of trees ,",
    "the value is @xmath31 and in the case of eulerian networks it is @xmath32 . the complete class of networks for which the rcpt is optimal was later shown by gal @xcite to be the class of weakly eulerian networks .",
    "we have already informally defined weakly eulerian networks in the introduction , but we give a formal definition here , which is easily seen to be equivalent .",
    "we use the notion of the _ bridge - block tree _ of a network , @xmath9 .",
    "this is obtained by considering an equivalence relation on the nodes of @xmath9 which relates two nodes if there are two arc - disjoint paths connecting them .",
    "this partitions the nodes of @xmath9 into equivalence classes , and for each equivalence class we may consider the sub - network containing all the nodes in that class and all arcs joining them .",
    "each of these sub - networks is _ 2-arc - connected _ : that is , they can not be disconnected without removing at least @xmath33 arcs .",
    "we call these subnetworks the _ blocks _ of @xmath9",
    ". the arcs of @xmath9 that are incident to two nodes in different block of @xmath9 are exactly the _ bridges _ of @xmath9 : that is , the disconnecting arcs .",
    "the bridge - block tree of @xmath9 is the tree that has a node for every block of @xmath9 and an arc between two nodes exactly when there is a bridge between the associated block in @xmath9 .",
    "a network @xmath9 is _ weakly eulerian _ if all its blocks are eulerian .    we now state gal s result formally .",
    "[ theorems 2 and 3 from @xcite ] [ thm : weakly - eul ] the value of the game played on @xmath9 is @xmath29 and a rcpt is optimal if and only if @xmath9 is weakly eulerian .    the only non - weakly eulerian networks for which the solution of the game is known are those consisting of two nodes joined by an odd number of arcs of the same length @xcite .",
    "the simplest example of a network of this type is 3-arc network described in the introduction .",
    "we saw that for this network , the expected search time of a rcpt is at most 1.28 times the value of the game .",
    "since the value of the game is not known in general , we may use lower bounds on the value to estimate it .",
    "one lower bound is obtained from the observation that if the hider hides uniformly in the network ( so that the probability he is located in any subset @xmath34 of @xmath9 is proportional to @xmath35 ) then the expected search time is at least @xmath36 .",
    "it is also easy to see that the length of a cpt is no more than @xmath37 , since by `` doubling '' every arc of the network we obtain an eulerian network of length @xmath37 , and an eulerian tour of this network maps onto a tour of the original network with the length @xmath37 . combining these two estimates of the value @xmath38 yields theorem 3.19 from @xcite : @xmath39 we write the maximum expected time of a rcpt over all points on @xmath9 as @xmath40 .",
    "we are interested in finding the approximation ratio of the rcpt , as described in the introduction .",
    "in particular , we say the rcpt has approximation ratio @xmath41 if @xmath42 for any network . by ( [ eq : weak - est ] ) ,",
    "@xmath40 satisfies @xmath43 in other words , the rcpt has approximation ratio 2 .",
    "the question of whether the ratio of @xmath33 can be improved has never been considered , and in the next section we show that it can be improved to @xmath0 .",
    "this section deals with the approximation ratio of the rcpt in gal s classic search game . in the next section we consider the approximation ratio of the rcpt in the `` find - and - fetch '' model recently introduced by alpern @xcite .",
    "we begin by stating our main theorem .",
    "[ thm : main ] the approximation ratio of the rcpt in gal s classic game is @xmath0 .",
    "that is , @xmath44 .    to prove the theorem , we start by obtaining a better lower bound on the value of the game .",
    "we use an observation from @xcite which says that if two nodes are `` stuck together '' , the value of the game can not increase .",
    "[ lemma : iden ] let @xmath45 and @xmath46 be nodes of a network @xmath9 , and consider a new network @xmath47 obtained by identifying @xmath45 and @xmath46 ( this can be thought of as adding an arc of length @xmath48 from @xmath45 to @xmath46 )",
    ". then @xmath49 .",
    "lemma [ lemma : iden ] is easily seen to hold since the strategy set of the hider in @xmath47 remains unchanged and any strategy of the searcher in @xmath9 can also be implemented in @xmath47 and must have no greater search time .",
    "let @xmath50 be the total length of the bridge - block tree of @xmath9 ( that is , the sum of the lengths of all bridges of @xmath9 ) and let @xmath51 be the sum of the lengths of the blocks .",
    "the value @xmath52 of the game on a network @xmath9 satisfies @xmath53 with equality if @xmath9 is weakly eulerian .",
    "we first define a new network @xmath54 with @xmath55 . for every block @xmath34 of @xmath9 ,",
    "identify all the nodes of @xmath34 , to obtain an eulerian network of the same measure . by lemma [ lemma : iden ] ,",
    "the value @xmath56 of the game on @xmath54 is no greater than @xmath52 . also , @xmath54 is clearly weakly eulerian , since all its blocks are eulerian .",
    "the length of a cpt on @xmath54 is @xmath57 , so by theorem [ thm : weakly - eul ] , @xmath58 if @xmath9 is already weakly eulerian , we clearly have equality in ( [ value - lb ] ) since by theorem [ thm : weakly - eul ] , the value @xmath52 is half the length of the cpt , which is @xmath57 .",
    "we will also need a combinatorial result , taken from proposition 5 of @xcite , which states that every connected , bridgeless graph has a cpt of length at most @xmath59 , where @xmath60 is the number of edges of @xmath61 .",
    "although this result is for graphs and not networks in the sense discussed in this paper , the next lemma follows easily .",
    "[ lemma : bridgeless ] suppose the network @xmath9 is 2-arc - connected .",
    "then the length @xmath30 of a cpt of @xmath9 satisfies @xmath62",
    "if @xmath9 is any network , @xmath30 satisfies @xmath63    the first statement follows from the analagous result of @xcite for graphs , since additional nodes can be added to @xmath9 to transform it into a network whose arcs are arbitrarily close in length .    the second statement",
    "is easily seen to be true since any cpt of @xmath9 must traverse all the bridges twice .",
    "theorem [ thm : main ] then follows , since the ratio of the expected search time @xmath40 of a rcpt and the value @xmath38 of the game satisfies @xmath64",
    "the find - and - fetch model , introduced recently by alpern @xcite , differs from gal s classic model in one way : the searcher must return to the root of the network at return speed @xmath65 after finding the hider .",
    "more precisely , the payoff of the game for a hider strategy @xmath18 and searcher strategy @xmath19 is not @xmath20 but @xmath66 , where @xmath67 is the length of the shortest path from @xmath18 to @xmath10 . as @xmath68 ,",
    "the payoff approaches @xmath20 , as in gal s game . in this section",
    "we use the same notation @xmath52 to denote the value of the find - and - fetch game played on a network @xmath9 with root @xmath10 .",
    "we may obtain a crude estimate on the approximation ratio of the rcpt in the find - and - fetch game using the observations that @xmath69 and @xmath70 for any hider strategy @xmath18 , so that @xmath71 .",
    "since the expected search time of any searcher strategy against the uniform hider strategy is at least @xmath36 , we must have @xmath72 .",
    "hence , writing @xmath73 for the maximum expected value over all points @xmath18 in @xmath9 of @xmath74 , we have @xmath75 showing that a rcpt is a @xmath6-approximation for the optimal searcher strategy , and a @xmath76-approximation for return speed is @xmath65 .",
    "we will analyze the efficiency of the rcpt for the find - and - fetch game on trees and eulerian networks , finding better bounds in these cases .",
    "we will first state the theorem from @xcite which gives the value of the game for a certain class of trees . in order to do this",
    ", we must define a distribution @xmath77 for the hider , known as the _ equal branch density _ ( or _ ebd _ ) distribution , on the leaf nodes , @xmath78 of a tree @xmath9 .",
    "we say a point or arc @xmath79 in @xmath9 is _ above _ another point or arc @xmath80 if the unique path from @xmath79 to @xmath10 contains @xmath80 . for any _ branch node _",
    "@xmath45 of @xmath9 ( that is , a node that has at least two incident arcs above it ) , we write @xmath81 for the subtree rooted at @xmath45 consisting of all points in @xmath9 above @xmath45 .",
    "we call each of the arcs @xmath12 in @xmath81 incident to @xmath45 _ branch arcs _ and by a _ branch _ at @xmath45 we mean a subtree rooted at @xmath45 consisting of a branch arc @xmath12 and all other points above @xmath12 .",
    "we denote this by @xmath82 .",
    "the ebd distribution @xmath77 on @xmath9 is the unique distribution on @xmath78 such that for any branch node @xmath45 with branch @xmath83 , the probability @xmath84 that the hider is located on @xmath83 is proportional to the length of @xmath83 .",
    "that is , @xmath85",
    ".    we also define @xmath86 to be the average distance of the leaf nodes from @xmath10 , weighted with respect to the ebd distribution , so that @xmath87    we summarize the relevant results from @xcite .",
    "[ thm : f&f ] the value @xmath52 of the find - and - fetch game on a rooted network @xmath9 satisfies @xmath88 the inequality above holds with equality if @xmath89 , where @xmath90 is a constant which measures the irregularity of the tree .",
    "we refer the reader to @xcite for a precise defininition of @xmath90 , since it is not relevant to our analysis .",
    "since the expected time for the rcpt to reach any leaf node is exactly @xmath11 , we have @xmath91 where @xmath92 is the distance of some furthest point in @xmath9 from @xmath10 .    in order to measure the efficiency of a rcpt we estimate how much larger @xmath93 is than @xmath94 , and we do this by obtaining a new tree @xmath95 from @xmath9 with @xmath96 by means of a process we call _",
    "pruning_. if @xmath45 is a branch node of @xmath9 and @xmath12 is a branch arc incident to @xmath45 , let @xmath97 $ ] be the tree obtained by removing @xmath82 and reattaching it at @xmath10 .",
    "we call @xmath97 $ ] the tree obtained by _ pruning _ the branch @xmath82 . note that @xmath98",
    ". figure [ fig : pruning ] depicts a network @xmath9 with branch node @xmath45 and branch arc @xmath12 , along with the tree @xmath97 $ ] obtained by pruning @xmath82 .",
    "and the tree @xmath97 $ ] obtained by pruning @xmath82 . ]",
    "[ lemma : pruning ] let @xmath9 be a rooted network with branch node @xmath99 and branch arc @xmath12 incident to @xmath45 , and suppose that there are no other branch nodes on the path between @xmath10 and @xmath12",
    ". then @xmath100 ) \\le d(q)$ ] .",
    "let @xmath101 be the complement in @xmath81 of the branch @xmath82 and let @xmath102 and @xmath103 be the average distance from @xmath45 to the leaf nodes of @xmath82 and @xmath101 , respectively , weighted according to the ebd distribution on @xmath82 and @xmath101 .",
    "the total contribution made to @xmath104 by the leaf nodes of @xmath82 and @xmath101 is @xmath105 similarly , the total contribution made by the associated leaf nodes in @xmath97 $ ] is @xmath106 the difference @xmath107 between expressions ( [ eq : incline ] ) and ( [ eq : pruned - incline ] ) is given by @xmath108 this expression for @xmath107 is clearly non - negative because @xmath109 . since the contribution to @xmath110 of all other leaf nodes in @xmath9 not contained in @xmath101 or @xmath82 remains unchanged after pruning , it follows that @xmath100 ) \\le d(q)$ ] .",
    "we now define the tree @xmath95 , and show that @xmath96 .",
    "let @xmath9 be a tree network with root @xmath10 , let @xmath45 be a node in @xmath9 at maximum distance @xmath92 from @xmath10 and let @xmath111 be the path from @xmath10 to @xmath45 .",
    "let @xmath95 be the tree obtained from @xmath9 by successively pruning branches @xmath82 where @xmath112 is a branch arc incident to some branch node @xmath46 in @xmath111 and @xmath46 is chosen each time to have minimum distance from @xmath10 .",
    "then @xmath113    it is clear from lemma [ lemma : pruning ] that @xmath114 . to prove the second inequality",
    ", we simply note that the probability attached to @xmath45 in @xmath95 under the ebd distribution is equal to @xmath115 , so the contribution to @xmath116 made by @xmath45 is @xmath117 .",
    "we may obtain an alternative lower bound on @xmath38 to the one given by theorem [ thm : f&f ] by considering the pure hider strategy of chosing a node @xmath45 at maximum distance from @xmath10 .",
    "this ensures a payoff of at least @xmath118 , so that @xmath119    note that ( [ eq : f&f - lb ] ) holds for arbitrary networks , not only trees .",
    "we can now state our main result for the approximation ratio of the rcpt in the find - and - fetch model .",
    "[ thm : main - f&f ] the approximation ratio of a rcpt in the find - and - fetch game on a tree is @xmath120 , where @xmath121    by equation ( [ eq : r - rcpt ] ) and theorem [ thm : f&f ] , we have @xmath122 where @xmath123 .    using elementary calculus , we find that the expression ( [ eq : bound1 ] ) is maximized for @xmath124 , where it takes the value @xmath125 .    combining ( [ eq : r - rcpt ] ) with the alternative lower bound ( [ eq : f&f - lb ] ) yields @xmath126    expression ( [ eq : bound2 ] ) is a decreasing function of @xmath127 . writing @xmath128 and @xmath129 for expressions ( [ eq : bound1 ] ) and ( [ eq : bound2 ] ) , respectively , we have @xmath130 . since @xmath131 is decreasing in @xmath127 , the from @xmath132 takes splits into two cases which depend on the value of @xmath65 : these cases are @xmath133 or @xmath134 , as depicted in figure [ fig : tree - graphs ] .     and @xmath129 for @xmath135 ( left ) and @xmath136 ( right ) . ]",
    "it is easy to check that the first case occurs when @xmath137 , in which case @xmath138 . in the second case ( when @xmath139 ) , the bound @xmath132 is given by the value of two functions @xmath140 and @xmath131 when they intersect for the first time .",
    "the two intersections can be shown to be at @xmath141 and @xmath142 , so at the first intersection , @xmath141 , we have @xmath143 .",
    "the theorem follows .",
    "figure [ fig : tree - alpha ] is a plot of the approximation ratio @xmath144 of a rcpt for tree networks .     for tree networks .",
    "]    note that as @xmath68 , the approximation ratio @xmath41 approaches @xmath145 , and so we recover the result of gal @xcite that the rcpt is optimal for trees .",
    "also note that @xmath41 is bounded above by @xmath33 , with @xmath146 as @xmath147 . when @xmath148 , so that the searcher s return speed is the same as her searching speed , @xmath149 .",
    "we conclude our analysis of the performance of the rcpt by examining the find - and - fetch game on eulerian networks .",
    "nothing is known about the solution of this game on such networks , as the work @xcite restricts its attention to trees .    for eulerian networks ,",
    "since the expected search time of any point under a rcpt is @xmath36 , the maximum expected payoff @xmath73 of a rcpt is easily seen to be @xmath150    in order to estimate the efficiency of the rcpt we may use the lower bound ( [ eq : f&f - lb ] ) given in the proof of theorem [ thm : main - f&f ] , but this bound is not very good if @xmath92 is small : in this case the hider benefits from randomization .",
    "so we construct another bound , based on the _ uniform _ strategy @xmath45 of the hider : that is the mixed strategy that chooses a subset @xmath83 of @xmath9 with probability proportional to the length @xmath151 of @xmath83 .",
    "consider the find - and - fetch game on a rooted eulerian network , @xmath9 .",
    "the uniform strategy @xmath45 of the hider guarantees the following lower bound on the value @xmath38 .",
    "@xmath152    first note that against @xmath45 any cpt is a best response .",
    "the expected search time of a cpt against @xmath45 is @xmath36 ( this is fairly obvious , but can be found , for example , in @xcite ) so the payoff of the find - and - fetch game is given by @xmath153 , where @xmath154 is the expected distance from @xmath10 to all points in @xmath9 , with respect to @xmath45 .",
    "that is , @xmath155 let @xmath156 be a shortest path from @xmath10 to a point @xmath80 at maximum distance from @xmath10 .",
    "since @xmath9 is eulerian , it is 2-arc - connected , and it follows that there is another path @xmath157 from @xmath10 to @xmath80 which is edge disjoint from @xmath156 and has length at least @xmath92 ( otherwise @xmath80 would not be at maximum distance from @xmath10 ) .",
    "it follows that @xmath158 inequality ( [ eq : f&f - lb2 ] ) follows .    combining our expression ( [ eq : r - rcpt2 ] ) for the payoff of a rcpt with our two lower bounds , ( [ eq : f&f - lb ] ) and ( [ eq : f&f - lb2 ] ) on the value",
    "result in the following .",
    "the approximation ratio of a rcpt in the find - and - fetch game on a eulerian network is @xmath120 , where @xmath159    by ( [ eq : r - rcpt2 ] ) and ( [ eq : f&f - lb2 ] ) , we have @xmath160 where @xmath161 , as before .",
    "expression ( [ eq : bound3 ] ) has a unique maximum at @xmath162 , at which point expression ( [ eq : bound3 ] ) is equal to @xmath163 .",
    "similarly , using ( [ eq : f&f - lb ] ) , we obtain @xmath164 write @xmath165 and @xmath166 for expressions ( [ eq : bound3 ] ) and ( [ eq : bound4 ] ) , respectively , so that @xmath167 .",
    "substituting @xmath168 into @xmath166 we find that @xmath169 .",
    "we calculate the difference between @xmath165 and @xmath166 at @xmath168 .",
    "@xmath170 the expression on the right - hand side is non - negative if and only if the difference between the squares of the two terms in the numerator are non - negative .",
    "that is , if @xmath171 which is clearly always true , so @xmath172 for any @xmath65 .",
    "since also @xmath173 is decreasing with @xmath174 as @xmath175 and @xmath176 , it follows that @xmath177 and @xmath173 intersect at some @xmath178 , and @xmath179 is maximized at this value of @xmath127 , as shown in figure [ fig : eul - graph ] .     and",
    "@xmath166 for @xmath135 . ]",
    "it is easy to show that @xmath177 and @xmath173 intersect at two points , and the smaller of those two intersections , at @xmath180 , maximizes @xmath179 .",
    "substituting this into @xmath177 or @xmath173 gives the approximation ratio in the statement of the theorem .",
    "as in the case of trees , we may recover the result of gal @xcite for eulerian networks , by writing the limit of the approximation ratio of a rcpt as @xmath181 as @xmath68 .",
    "figure [ fig : eul - alpha ] is a plot of the approximation ratio @xmath144 of a rcpt for eulerian networks .     for eulerian networks .",
    "]    note that @xmath41 is decreasing in @xmath65 , so the approximation ratio is bounded above by @xmath182 . when @xmath183 , so the return speed is the same as the searching speed , @xmath184 .",
    "we have examined the performance of a rcpt for gal s classic search game on a network and for the find - and - fetch game . in the former game we gave a simple formula for the approximation ratio of a rcpt for any network and in the latter game we did the same for trees and eulerian networks . since the time to compute a rcpt is polynomial in the number of nodes of the network , this work provides efficiently computable , easily implemented search strategies for games that in general have complicated exact solutions .    the calculation of the approximation ratio of a rcpt in the find - and - fetch game required the use of the new technique , `` pruning '' . in order to extend this work on the find - and - fetch game to arbitrary networks ,",
    "it is likely that further new techniques will have to be developed .",
    "future work could also be directed towards the version of gal s game where the searcher has an arbitrary starting point , as in @xcite and @xcite . in this game",
    ", one could examine the approximation ratio of a _",
    "random chinese postman path _",
    ", that is searcher strategy that chooses with equal probability a path in the network of minimum length and its reverse .",
    "pita j , jain m , marecki j , ordez f , portway c , tambe m , western c , paruchuri p , kraus s. ( 2008 ) deployed armor protection : the application of a game theoretic model for security at the los angeles international airport . in proceedings of the 7th international joint conference on autonomous agents and multiagent systems : industrial track:125 - 132 .",
    "international foundation for autonomous agents and multiagent systems ."
  ],
  "abstract_text": [
    "<S> we consider a classic search problem first proposed by s. gal in which a _ searcher _ randomizes between unit speed paths on a network , aiming to find a hidden point in minimal expected time in the worst case . </S>",
    "<S> this can be viewed as a zero - sum game between the searcher and a time maximizing _ </S>",
    "<S> hider_. it is a natural model for many search problems such as search and rescue operations ; the search for an enemy , a bomb or weapons in a military context ; or predator - prey search . </S>",
    "<S> a _ chinese postman tour _ ( _ cpt _ ) is a minimal time tour of the network that searches all the arcs and a _ random chinese postman tour _ ( _ rcpt _ ) is an equiprobable choice of any given cpt and its reverse . </S>",
    "<S> the full class of networks for which a rcpt is optimal is known , but otherwise little is known about the solution of the game except in some special cases that have complicated optimal strategies that would be impractical to implement . </S>",
    "<S> the question of how well a rcpt or any other search strategy performs for general networks has never been analyzed . </S>",
    "<S> we show that a rcpt has an approximation ratio of @xmath0 : that is , the maximum expected time it takes to find a point on the network is no greater than @xmath0 times that of the optimal search strategy . </S>",
    "<S> we then examine the performance of a rcpt in a related search game recently proposed by s. alpern in which the searcher must return to his starting point after finding the hider .    * </S>",
    "<S> keywords : * game theory ; search games ; chinese postman tour ; networks </S>"
  ]
}
{
  "article_text": [
    "kastan & alon  @xcite identify and describe the configurations of relatively simple and small subnetworks that occur more frequently in biological networks than would be the case if the network were random .",
    "they refer to these subnetworks as _",
    "network motifs_. later , in his 2007 book on systems biology  @xcite , alon makes the following comment    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ `` ideally , we would like to understand the dynamics of the entire network based on the dynamics of the individual building blocks . '' _",
    "( alon  @xcite . ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the underlying premise behind this comment is that a modular , or engineering , approach to network dynamics is feasible .",
    "identify building blocks , connect together to form networks and then describe dynamical properties of the resulting network in terms of the dynamics of its components .",
    "this approach works well in linear systems theory , where a superposition principle holds , or in , for example , the study of synchronization in weakly coupled systems of nonlinear approximately identical oscillators where network dynamics can be closely related to the dynamics of individual nodes ( oscillators ) .",
    "however , from the perspective of a mathematician or physicist , alon s comment seems unhelpful for the study of dynamics of heterogenous networks modelled by systems of nonlinear odes .",
    "this is a well - known issue in complex systems  @xcite . yet",
    "engineers do couple gadgets together to make more complex systems and so it is natural to ask if it is possible to reconcile these viewpoints .    in this note , we outline some of the basic ideas involved in an approach to network dynamics based on what we call _ asynchronous networks_. we allow for features seen in networks from technology , engineering , and biology ( for example , neuroscience or gene transcription networks ) .",
    "network dynamics can involve a mix of distributed and decentralized control , adaptivity , event driven dynamics , switching , varying network topology and hybrid dynamics .",
    "typically network dynamics will be piecewise smooth , time - irreversible , nodes may stop and later restart , and there may be no intrinsic global time .",
    "significantly , many of these networks have a function : transportation networks bring people and goods from one point to another , neural networks may perform pattern recognition or computation , etc .",
    "our goal is to address alon s comment in the context of functional asynchronous networks .",
    "specifically , we describe a factorization of dynamics theorem where it is possible to describe the function of a large class of functional asynchronous networks in terms of the function of constituent subnetworks . as this article",
    "is only intended to be an introduction , we work always with the simplest examples and models and omit technical details .",
    "we refer the reader to  @xcite for greater detail , generality and proofs .",
    "we briefly describe some characteristic examples of asynchronous networks ( we refer to @xcite for more detail ) .      in threaded or parallel computation , computation is broken into blocks or ` threads ' which are then computed _ independently _ of each other at a speed that depends on the clock rates of the individual processors .",
    "as the computation proceeds , threads may need to exchange information with other threads .",
    "this process involves stopping and synchronizing ( updating ) the thread states .",
    "each thread may have to stop and wait for other threads to complete their computations before it can continue with its own computation .",
    "each thread has its own clock ( determined by its associated processor ) .",
    "if threads run on separate processors , threads will be unaware of the clock times of other threads except during the stopping and synchronization events .",
    "we give a simple detailed example of a transport network in section  [ sec : trans ] . in production networks , parts , compounds , etc .",
    "are repeatedly built and combined as part of a production process leading to the desired item ( for example , a car or protein ) . in particular , there is variation in both connection structure , typically intermittent , and in the set of nodes ( nodes may be combined or decomposed ) .",
    "a power grid consists of a network of various types of generators and loads connected by transmission lines .",
    "a microgrid is a local network , capable of existing independently of the main power grid , and typically powered by renewable energy sources ( for example , solar or wind power ) .",
    "critical questions involve the stability of the power grid in case of loss of a transmission line or generator ( variation in network structure ) , and control and stability issues related to combining and separation ( islanding ) of a large set of microgrids from the main power grid .",
    "many mathematical models from engineering and biology incorporate thresholds . for networks ,",
    "when a node attains a threshold , there are often changes ( addition , deletion , weights ) in connections to another nodes . for networks of neurons , reaching a threshold can result in a neuron firing ( spiking ) and short term connections to other neurons ( for transmission of the spike ) .",
    "for learning mechanisms , such as spike - timing dependent plasticity ( stdp )  @xcite relative timings ( the order of firing ) are crucial  @xcite and so each neuron , or connection between a pair of neurons , comes with a ` local clock ' that governs the adaptation in stdp . in general , networks with thresholds , spiking and adaptation provide characteristic examples of asynchronous networks where dynamics is piecewise smooth and hybrid  a mix of continuous and discrete dynamics .",
    "we summarize some of the characteristic features of asynchronous networks as revealed in the examples above .    1 .   variable network structure and dependencies between nodes .",
    "changes depend on the state of the system or are given by a stochastic process .",
    "synchronization events associated with stopping or waiting states of nodes .",
    "3 .   order of events may depend on the initialization of the system or stochastic effects .",
    "dynamics is only piecewise smooth and there may be a mix of continuous and discrete dynamics .",
    "aspects involving function , adaptation and control . 6 .",
    "evolution only defined for forward time ",
    "systems are not time reversible .",
    "we use the notational conventions that @xmath0 and @xmath1 , @xmath2 . let @xmath3 .",
    "assume given a network with @xmath4 nodes , @xmath5 .",
    "suppose that @xmath6 has associated phase space @xmath7 , @xmath8 .",
    "set @xmath9  the network phase space .",
    "a vector field @xmath10 on @xmath11 is a _ network vector field_.    stopping , waiting , and synchronization are a feature of asynchronous networks . if nodes are stopped or partially stopped , node dynamics will be constrained to subsets of node phase space .",
    "we codify this situation by introducing a _ constraining node _",
    "@xmath12 that , when connected to @xmath6 , implies that dynamics on @xmath6 is constrained .",
    "set @xmath13 .",
    "interactions between distinct nodes in the network are given by the network graph .",
    "connections @xmath14 encode _ dependencies _ if @xmath15 , and _ constraints _ if @xmath16 , @xmath8 .",
    "a _ connection structure _ @xmath17 is a directed network graph on the nodes @xmath18 such that for all @xmath8 , @xmath19 , @xmath20 , there is at most one directed connection @xmath14 .",
    "we do not allow self - loops or connections to the constraining node @xmath12 .",
    "@xmath17-admissible _ vector field @xmath21 is a network vector field with dependencies given by @xmath17 .",
    "if @xmath22 , @xmath23 , then @xmath24 does not depend on @xmath25 ( and conversely , see @xcite ) .    referring to figure  [ fig:1 ] ,",
    "suppose @xmath26 is @xmath17-admissible . for @xmath27",
    ", we have @xmath28 @xmath29 where here we have assumed that the constraint @xmath30 results in @xmath31 being stopped .",
    "a _ generalized connection structure _ @xmath32 is a ( nonempty ) set of connection structures on @xmath18 .",
    "an @xmath32-structure @xmath33 is a set @xmath34 of network vector fields such that each @xmath35 is @xmath17-admissible .",
    "suppose that @xmath32 is a generalized connection structure and @xmath33 is an @xmath32-structure .",
    "interactions between nodes in asynchronous networks may be state dependent or change over time ( stochastically ) . here",
    "we only consider state dependence .",
    "we handle interactions and constraints using an _ event map _ @xmath36 .",
    "the quadruple @xmath37 defines an _",
    "asynchronous network_. dynamics on @xmath38 is given by the state dependent network vector field @xmath33 defined by @xmath39    we refer to  @xcite for the definition of an integral curve for ( [ eq:1 ] ) and note that the definition we use is different from that used in filippov systems  @xcite . under simple conditions on the event map  @xcite",
    ", it can be shown that if @xmath40 is compact then for each @xmath41 there is a unique piecewise smooth integral curve @xmath42 with initial condition @xmath43 and corresponding semiflow @xmath44 .",
    "in general , @xmath45 will not be continuous as a function of @xmath46 .",
    "we consider a single track railway line joining stations marked @xmath47 in figure  [ fig:2 ] .",
    "suppose there is a passing loop at @xmath48 .",
    "trains , marked @xmath49 and @xmath50 in figure  [ fig:2 ] , start from stations @xmath51 and @xmath52 respectively and proceed towards the opposite station .",
    "there is no central control or communication between the train drivers except when both trains are in the passing loop .",
    "we further assume that both drivers are running a nonlinear oscillator . when a train enters the passing loop it stops . when both trains are in the passing loop , the drivers cross couple their nonlinear oscillators .",
    "in order for a train to leave the passing loop , two conditions must be satisfied .    1",
    ".   both trains must be in the passing loop .",
    "2 .   the two nonlinear oscillators must be phase synchronized to within @xmath53 where @xmath54 .",
    "we model this setup using an asynchronous network with two nodes  corresponding to the two trains .",
    "the phase space for train @xmath55 will be @xmath56\\times \\mathbb{t}$ ] , @xmath57 ( @xmath58 ) , where the interval @xmath59 $ ] models the line joining @xmath51 to @xmath52 , @xmath51 has coordinate @xmath60 , @xmath52 has coordinate @xmath61 , the passing loop @xmath48 will be at @xmath62 , and @xmath63 will be the phase space for the nonlinear oscillator .",
    "assume train motion given by @xmath64 where @xmath65 @xmath66 $ ] .",
    "note that neither @xmath67 or @xmath68 can be zero anywhere on @xmath59 $ ] otherwise the trains will never both reach their destination stations in finite time .",
    "we define four connection structures .",
    "@xmath69    let @xmath70 be the associated generalized connection structure .",
    "model the uncoupled oscillator dynamics for train @xmath55 by @xmath71 , where @xmath72 , and the coupled dynamics by the kuramoto phase oscillator system @xmath73    it remains to define the admissible vector fields and event map that give the required dynamics for this example . as admissible vector fields ( on @xmath74 \\times \\mathbb{t})^2 $ ] )",
    "we take @xmath75 we define the event map by @xmath76 finally , dynamics are given by the network vector field    @xmath77    we leave it as an easy exercise for the reader to check that if @xmath55 is initialized at @xmath78\\times \\mathbb{t}$ ] , @xmath79 , where @xmath80 , then ( [ eq:2 ] ) has a well defined integral curve @xmath81\\times \\mathbb{t})^2 $ ] , with specified initial condition , that gives the correct dynamics for the passing loop problem .",
    "the passing loop gives an example of a simple _ functional _ asynchronous network .",
    "the function is for the trains to go from one station to the opposite station in finite time .",
    "observe that for this example there is the possibility of a _ dynamical deadlock _ : if the trains start at the same time and if @xmath82 , then the coupled phase oscillators will never phase synchronize ",
    "@xmath83 for all @xmath84  and so the trains will never exit the passing loop .",
    "we refer to  @xcite for more details on deadlocks in functional asynchronous networks .",
    "we follow the notational conventions of section  [ sec : async ] and let @xmath85 denote an asynchronous network .",
    "we assume that @xmath38 has associated semiflow @xmath86 suppose that we are given _ initialization _ and _ termination _ sets @xmath87 where @xmath88 typically , @xmath89 will be closed disjoint hypersurfaces that separate @xmath7 into three connected components , @xmath8 .",
    "that is , @xmath90 where @xmath91 and @xmath92 we call @xmath93 a _ functional asynchronous network_. the network function is getting from @xmath94 to @xmath95 and is expressed by the transition and timing functions @xmath96 that is , if @xmath97 , then for all @xmath8 there exists @xmath98 such that @xmath99    for the passing loop example discussed in the previous section , we take @xmath100 , @xmath101 . in this case",
    ", there is the implicit assumption that trains stop when they reach their termination set .",
    "equally well , we could take @xmath102 so that @xmath103\\times\\mathbb{t}$ ] etc .",
    "( see also  @xcite )",
    ". finally , observe that @xmath104 .",
    "more generally , we allow for general initialization times and define generalized transition and timing functions @xmath105 we refer to @xcite for details . for our main result , it is required that the network has a generalized transition and timing functions with @xmath106 .      in figure  [ fig:3 ]",
    "we show a nine node functional asynchronous network that is built from the eight `` events '' @xmath107 .",
    "the initialization and termination sets are indicated on the left and right sides of the figure respectively .",
    "the events signify regions of phase space where there can be ( state dependent ) interaction between nodes .",
    "for example , the event labelled @xmath108 involves interaction between nodes @xmath109 , @xmath110 , @xmath111 , and @xmath112 .",
    "observe that there is only a partially ordered temporal structure on the events .",
    "thus , the event @xmath108 must occur after @xmath113 but can occur before or after event @xmath114 .      in figure  [ fig:4 ]",
    "we represent a basic building block with the same number of inputs and outputs .",
    "the initialization sets are represented by the symbols @xmath115 , termination sets by @xmath116 .",
    "interaction between nodes occurs only in the event region denoted by the rectangle . outside of the event region ,",
    "nodes evolve independently .",
    "more generally , we can allow for different number of inputs and outputs : nodes may merge or split .",
    "our immediate aim is describe some basic operations that we can define on functional asynchronous networks that allow us enable us to find a ( maximal ) decomposition of a functional asynchronous network into the form shown in figure  [ fig:3 ] .",
    "if @xmath117 , @xmath118 , are functional asynchronous networks with distinct node sets ( @xmath119 , @xmath120 ) , define the _ product _ @xmath121 to be the functional asynchronous network @xmath93 , where @xmath122 and @xmath123 is defined in the obvious way to be the asynchronous network with node set @xmath124 ( we refer to @xcite for details ) .",
    "we say the @xmath4-node functional asynchronous network @xmath93 is _ trivial _ if @xmath125 where each @xmath126 has exactly one node @xmath127 .",
    "in particular , if @xmath128 is trivial there are no interactions between nodes and no constraints .",
    "next let @xmath129 , @xmath118 , be a family of functional asynchronous networks with common initialization set , termination set and node set @xmath130 .",
    "suppose that for each @xmath131 , there exists @xmath132 such that    1 .",
    "@xmath133 where @xmath134 has node set @xmath135 and @xmath136 is trivial . 2 .",
    "if @xmath137 , @xmath138 .",
    "we define the _ amalgamation _ @xmath139 to be the functional asynchronous network @xmath140 , where @xmath141 is the trivial network defined as the product of the common trivial factors in @xmath136 , @xmath131 .",
    "thus the node set of @xmath141 will be @xmath142 .    referring to figure  [ fig:5 ]",
    ", we have @xmath143 and @xmath144 .",
    "the amalgamation @xmath145 is trivial when restricted to nodes @xmath146 .",
    "finally , we outline the operation of concatenation , referring the reader to  @xcite for the details ( most ) we omit .",
    "suppose that @xmath147 , @xmath148 , are functional asynchronous networks with common node set .",
    "assume that @xmath149 .",
    "the _ concatenation _",
    "@xmath150 will be a temporal merging @xmath151 .",
    "we define    1 .",
    "@xmath152 , @xmath153 .",
    "2 .   @xmath154 ,    where @xmath155 denote the join of the graphs .",
    "the definition of the set of admissible vector fields @xmath33 for @xmath38 is trickier and requires additional conditions on @xmath151  we refer to  @xcite for details .",
    "we define the event map by @xmath156 .",
    "we refer to figure  [ fig:6 ] for the operation of concatenation .",
    "the concatenation @xmath157 has the important property that if @xmath126 has generalized transition and timing functions @xmath158 ,",
    "@xmath159 , @xmath160 , then @xmath157 has generalized transition function @xmath161 given by @xmath162  ( * ? ? ?",
    "* corollary 4.15 ) .",
    "we have deliberately avoided listing the detailed properties required of functional asynchronous networks in order to define amalgamations and concatenations .",
    "briefly , apart from requiring the existence of generalized transition and timing functions , we require ( 1 ) the uncoupled vector vectors defining intrinsic dynamics of a node @xmath6 to be transverse to @xmath163 , @xmath164 and ( 2 ) a local product structure on the network .",
    "we refer to  @xcite for the details .",
    "a functional asynchronous network is _ primitive _ if it can not be written as a nontrivial amalgamation or concatenation .",
    "[ fan ] under general conditions , a functional asynchronous network @xmath128 has a unique ( up to rearrangements ) decomposition @xmath165 where @xmath166 , @xmath167 , and and each @xmath168 is primitive .",
    "the generalized transition function @xmath161 for @xmath128 can be expressed in terms of the generalized transition and timing functions @xmath169 of @xmath170 ( or @xmath171 for @xmath168 ) by : @xmath172    consider the network shown in figure  [ fig:3 ] and assume that each event @xmath173 .",
    "@xmath174 is primitive .",
    "a decomposition satisfying the requirements of theorem  [ fan ] is indicated in figure  [ fig:7 ]  the dashed lines indicate the initialization and termination sets for the subnetworks .    the factorization for the network is @xmath175 this factorization corresponds to maximizing from the left hand side . however ,",
    "if we maximize from the right we obtain the factorization @xmath176 in either case there is a concatenation of five networks  that is the minimum number possible .",
    "theorem  [ fan ] allows us to write the function of a network explicitly in terms of the transition functions of the constituent subnetworks .",
    "results of this type depend crucially on intermittent connection structure and nonsmooth dynamics .",
    "for example , no such result is possible for a classical coupled network of phase oscillators .",
    "the approach works because we have adopted an engineer s viewpoint : we emphasise function rather than dynamics .",
    "indeed , we are indifferent to the specific dynamics occurring _ between _ the initialization and termination sets .",
    "of course , both the timing and transition functions provide the key information about network function .",
    "theorem  [ fan ] is a prototypical theorem providing proof of concept .",
    "the conditions for the theorem can be significantly weakened from those required in  @xcite .",
    "the theorem yields maximal feedforward structure on a functional asynchronous network ( note that individual events may have feedback loops ) .",
    "3 .   the result suggests the utility of starting with a small functional asynchronous network ; understanding the structure in depth and then then evolving to optimize function ( for example by adding feedback ) .",
    "there are many as yet unexplored issues such as bifurcation , hidden deadlocks , and the effects of noise .",
    "there is the problem of how far one can determine internal structure on the basis of input / output time series data",
    ".    99 u alon . _ an introduction to systems biology .",
    "design principles of biological circuits _",
    "( chapman & hall / crc , boca raton , 2007 ) .",
    "m di bernardo , c j budd , a r champneys , & p kowalczyk . _ piecewise - smooth dynamical systems _ ( springer , applied mathematical science 163 , london , 2008 ) .",
    "c bick & m j field . `",
    "asynchronous networks and event driven dynamics ' , ( 2016 ) , preprint .",
    "c bick & m j field . ` asynchronous networks : modularization of dynamics theorem ' , ( 2016 ) , preprint .",
    "n caporale & y dan . `",
    "spike timing dependent plasticity : a hebbian learning rule ' _ annu .",
    "neurosci . _ * 31 * ( 2008 ) , 2536 .",
    "a f filippov . _ differential equations with discontinuous righthand sides _ ( kluwer academic publishers , 1988 ) .",
    "w gerstner , r kempter , l j van hemmen & h wagner . ` a neuronal learning rule for sub - millisecond temporal coding ' , _ nature _ * 383 * ( 1996 ) , 7678 .",
    "w gerstner & w kistler .",
    "_ spiking neuron models _ ( cambridge university press , 2002 ) .",
    "n kashtan & u alon . `",
    "spontaneous evolution of modularity and network motifs ' , _ pnas _ * 102 * ( 39 ) ( 2005 ) , 1377313778 .",
    "j ladyman , j lambert , and k wiesner .",
    "` what is a complex system ? ' , _ eur .",
    "j. for phil . of sc . _ * 3*(1 ) ( 2013 ) , 3367 .",
    "a morrison , m diesmann & w gerstner . ` phenomenological models of synaptic plasticity based on spike timing ' , _ biol .",
    "* 98 * ( 2008 ) , 459478 ."
  ],
  "abstract_text": [
    "<S> in this note we describe the theory of functional asynchronous networks and one of the main results , the modularization of dynamics theorem , which for a large class of functional asynchronous networks gives a factorization of dynamics in terms of constituent subnetworks . for these networks </S>",
    "<S> we can give a complete description of the network function in terms of the function of the events comprising the network and thereby answer a question originally raised by alon in the context of biological networks . </S>"
  ]
}
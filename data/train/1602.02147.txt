{
  "article_text": [
    "in this work , every graph is a simple graph , i.e. , a graph containing no loops or multiple edges .",
    "we follow the notation and terminology in @xcite , in particular , we denote a complete graph on @xmath13 vertices as @xmath14 , and a complete bipartite graph having two partite sets with sizes @xmath15 and @xmath13 as @xmath16 .",
    "we consider orientations of simple graphs as described below .    given a graph @xmath17 , with finite vertex set @xmath18 and finite edge set @xmath19",
    ", we define an _ oriented graph _ as follows . for each pair of vertices @xmath20 and @xmath21 in @xmath18 such that there exists an edge @xmath22 in @xmath19 , we assign @xmath20 ( resp .",
    "@xmath21 ) to be the _ tail _ and @xmath21 ( resp .",
    "@xmath20 ) to be the _",
    "head_. this assignment results in an _ arc _ , where the tail _ is directed _ to the head .",
    "we denote the arc @xmath23 with tail @xmath20 and head @xmath21 as @xmath24 , and call @xmath20 and @xmath21 the _ endpoints _ of @xmath23 .",
    "the endpoints of an arc are _ adjacent _ and an arc is _ incident _ to both of its endpoints .",
    "we denote the resulting oriented graph @xmath3 with arc set @xmath25 and vertex set @xmath26 , which is equal to @xmath18 .",
    "given an oriented graph @xmath3 , the _ underlying graph _",
    "@xmath17 is the graph such that the directions associated to the arcs of @xmath3 are removed , yielding edges .",
    "an _ oriented subgraph _ of an oriented graph @xmath3 is an oriented graph @xmath27 such that @xmath28 , @xmath29 and for an arc @xmath30 , it must be true that @xmath31 and @xmath32 .",
    "a _ proper oriented subgraph _ of an oriented graph @xmath3 is an oriented subgraph @xmath27 of @xmath3 such that either @xmath33 or @xmath34 .",
    "given a graph @xmath0 , if two vertices @xmath20 and @xmath21 are adjacent in @xmath0 , i.e. , if there is an edge @xmath35 , we say that @xmath20 and @xmath21 are _ neighbors _ in @xmath0 , and denote the neighborhood of a vertex @xmath20 as @xmath36 . for an oriented graph @xmath3 containing an arc @xmath24",
    ", we say that @xmath20 is an _ in - neighbor _ of @xmath21 and that @xmath21 is an _ out - neighbor _ of @xmath20 . for a vertex @xmath37",
    ", we denote the set of all in - neighbors of @xmath20 as @xmath38 , and the set of all out - neighbors of @xmath20 as @xmath39 .",
    "we also say that the _ in - degree _ of @xmath20 is @xmath40 and the _ out - degree _ of @xmath20 is @xmath41 .",
    "neighborhood _ of @xmath20 is defined to be @xmath42 , and the _ degree _ of @xmath20 is @xmath43 . if @xmath44 , then @xmath20 is said to be a _ sink _ ; if @xmath45 , then @xmath20 is said to be a _",
    "source_.    for a graph @xmath17 with edge @xmath46 , the _ deletion of @xmath46 _ is an operation that yields a graph with edge set @xmath47 and vertex set @xmath18 .",
    "we denote the graph @xmath17 with edge @xmath46 deleted as @xmath48 .",
    "the deletion of an arc @xmath23 in an oriented graph @xmath3 is defined analogously , and is denoted @xmath49 .",
    "the _ converse _ of an arc @xmath50 is the arc @xmath51 , denoted @xmath52 .",
    "if we replace an arc @xmath23 with its converse @xmath52 , we obtain an oriented graph with arc set @xmath53 and vertex set @xmath26 ; we denote the resulting oriented graph @xmath54 .",
    "we call this replacement _ switching the direction of a_. if we switch the direction of every arc in an oriented graph @xmath3 , we call the resulting oriented graph the _ converse _ of @xmath3 and denote it @xmath55 . for a graph @xmath17 with vertex @xmath21 ,",
    "the _ deletion of v _ is an operation that yields a graph with vertex set @xmath56 and edge set @xmath57 , such that @xmath58 , @xmath59 , is incident to @xmath21 .",
    "we denote the graph @xmath17 with vertex @xmath21 deleted as @xmath60 .",
    "the deletion of a vertex @xmath21 in an oriented graph @xmath3 is defined analogously and is denoted @xmath61 .    for @xmath62 ,",
    "let @xmath63 $ ] denote @xmath64 . for @xmath65 ,",
    "the standard path , denoted @xmath66 , is the graph with @xmath67 \\}$ ] and @xmath68 consisting of the edges with endpoints @xmath69 , @xmath70 for @xmath71 .",
    "a _ path on @xmath13 vertices _ ( resp .",
    "n - path _ ) is a graph isomorphic to @xmath66 ( for some @xmath13 ) .",
    "a graph is _ connected _ if each pair of vertices belongs to a path ; an oriented graph is connected if its underlying graph is connected .",
    "if a graph is not connected , it is _ disconnected _ and its maximal connected subgraphs are called _",
    "components_. the standard cycle , denoted @xmath72 , is the graph @xmath66 with the added edge having endpoints @xmath73 and @xmath13 .",
    "cycle on @xmath13 vertices _ ( resp .",
    "n - cycle _ ) is a graph isomorphic to @xmath72 ( for some @xmath13 ) .    the _ standard directed path _ ,",
    "@xmath74 , is the oriented graph whose underlying graph is isomorphic to @xmath66 , and for each edge @xmath75 , we have the arc @xmath76 .",
    "an oriented graph isomorphic to @xmath74 is called an _",
    "n - dipath_. the _ standard directed cycle _ , denoted @xmath77 , is the oriented graph consisting of @xmath74 and the arc @xmath78 .",
    "an oriented graph isomorphic to @xmath77 is referred to as an _ n - dicycle_. one may notice that we specifically stated _ directed _ path or _ directed _ cycle .",
    "this is because the directions of the arcs `` follow '' each other along the path or the cycle .",
    "if this is not the case , and the underlying graph is isomorphic to a path or a cycle , but arbitrarily directed , we refer to each as an _ oriented n - path _ or _ oriented n - cycle _ , respectively .    for an integer @xmath79 , a _",
    "@xmath1-book _ , or _ a book with @xmath1 pages",
    "_ , consists of a line @xmath80 in @xmath81 , called the _ spine _ , where @xmath80 is identified with the @xmath82-axis , i.e. @xmath83 and @xmath1 distinct closed half planes , called _ pages _ , whose common boundary is @xmath80 . if @xmath84 is a page , then @xmath85 .",
    "the _ interior _ of a page @xmath84 is the open half plane , @xmath86 .",
    "@xmath1-page book embedding _ is an embedding of a graph @xmath0 into a @xmath1-book such that :    * each vertex @xmath87 is embedded into @xmath80 ; * each edge @xmath88 is either completely embedded into @xmath80 , or all points of @xmath46 ( except the endpoints ) are embedded into the interior of a single page .",
    "the _ spine order _",
    ", for a particular book embedding , is the ordering of the vertices embedded into the spine whose @xmath82-coordinates are strictly increasing or decreasing .",
    "we can label the vertices embedded into the spine @xmath89 .",
    "if two edges @xmath90 , with @xmath91 and @xmath92 , with @xmath93 are embedded into the same page , then it must be true that either @xmath94 , @xmath95 , @xmath96 , or @xmath97 . in this case",
    ", we say that the two edges follow the _ planarity rule_. the _ book thickness of a graph _ , denoted @xmath2 is the minimum @xmath1 required for @xmath0 to have a @xmath1-page book embedding .    for a particular book embedding of a graph @xmath17 , we call an edge in @xmath17 that is embedded into the spine a _ tight edge _ , and we call an edge in @xmath17 that is not a tight edge a _ loose edge_. in a given book embedding of a graph @xmath17 , we call a vertex @xmath21 of @xmath17 a _ tight vertex _ if it is the common endpoint of exactly two tight edges ; we call @xmath21 a _ half - loose vertex _ if it is the endpoint of exactly one tight edge , and we call @xmath21 a _ loose vertex _ if it is the endpoint of no tight edge . for a particular book embedding of a graph @xmath17",
    ", we say that an edge @xmath98 in @xmath17 _ covers _ a vertex @xmath99 if @xmath100 is between @xmath20 and @xmath21 in the spine order of the embedding . for two arcs @xmath101",
    "that are in the same page , if @xmath102 and @xmath103 share an endpoint , and @xmath102 covers the other endpoint of @xmath103 , or if @xmath102 covers both endpoints of @xmath103 , we say that @xmath102 and @xmath103 are _ nested _ or that _ @xmath103 is nested inside @xmath102_.    a _ planar graph _ is a graph that has an embedding in the plane , and an _ outerplanar graph _ is a graph that has an embedding in the plane with every vertex on the unbounded face .",
    "a graph is _ hamiltonian _ if it contains a cycle that passes through every vertex of the graph .",
    "@xmath104bernhart and kainen ,",
    "@xmath105  @xcite @xmath106 let @xmath0 be connected , then the following hold : @xmath107 @xmath108 if and only if @xmath0 is a path , and + @xmath109 @xmath110 if and only if @xmath0 is outerplanar .",
    "+ @xmath111 @xmath112 if and only if @xmath0 is a subgraph of a hamiltonian planar graph .",
    "[ bkthm ]    we call a graph @xmath0 a _ @xmath1-page critical graph _ if @xmath113 , and for every edge @xmath88 , we have that @xmath114 . by kuratowski s theorem  @xcite and theorem  [ bkthm ] , @xmath115 and @xmath116 are @xmath117-page critical graphs .",
    "all @xmath1-page critical graphs are connected ; since , if @xmath0 was @xmath1-page critical with distinct components @xmath118 , then @xmath119 .",
    "assume @xmath120 , and if we delete an edge @xmath121 , we have @xmath122 , and thus @xmath0 is not a @xmath1-page critical graph .",
    "we now focus on embedding an oriented graph into a @xmath1-book .",
    "since the spine @xmath80 of a @xmath1-book is identified with the @xmath82-axis , for convention we say that the spine is oriented upwards .",
    "we can then describe the orientation of the arcs embedded into the @xmath1-book as being _ upwards _ or _ downwards _ , relative to the spine .",
    "@xmath1-page oriented book embedding _ for an oriented graph @xmath3 is an embedding into a @xmath1-book such that :    * each vertex @xmath123 is embedded into @xmath80 ; * each arc @xmath31 is either completely embedded into @xmath80 , or all points of @xmath23 ( except the endpoints ) are embedded into the interior of a single page .",
    "* the orientation of all arcs embedded into @xmath80 agree ; * the orientation of all arcs embedded into a given page agree .",
    "( we call this restriction the _ direction rule_. )    if all arcs embedded into a single page are upwards , we refer to the page as an _ upwards page _ , or simply say the _ page is upwards _ ; similarly if all arcs embedded into a single page are downwards , we refer to the page as an _ downwards page _ , or simply say the _ page is downwards_. we do not restrict the direction of all arcs in the oriented book embedding to be the same , just those in the same page ; an oriented book embedding may have an upwards page and a downwards page .",
    "the _ oriented book thickness _",
    ", denoted @xmath4 is the minimum @xmath1 such that @xmath3 has a @xmath1-page oriented book embedding . from the definition of oriented book thickness and its requirements , for an oriented graph @xmath3 with underlying graph @xmath17 , we have that @xmath124 .",
    "the definitions for spine order , tight or loose arcs , and whether an arc covers a vertex in a particular oriented book embedding are all similar to their definitions for book embeddings in the unoriented case .",
    "we call an oriented graph @xmath3 a _ @xmath1-page critical oriented graph _",
    "if @xmath5 , and for every arc @xmath31 , we have that @xmath125 .",
    "the class of all @xmath1-page critical oriented graphs is denoted @xmath6 .",
    "determining @xmath6 for general @xmath1 is challenging ; we narrow down the list of oriented graphs in @xmath6 for small @xmath1 . in section 3",
    "we show complete list for @xmath10 , and in section 4 we discuss @xmath126 . for undirected graphs ,",
    "there are exactly two @xmath117-page critical graphs , @xmath115 and @xmath116 ; however , in the oriented case is becomes more complicated .",
    "we show a complete list for @xmath11 , where @xmath12 consists of all _ strictly dicyclic oriented graphs _ ,",
    "that is , oriented graphs containing exactly one oriented cycle , which is a directed cycle . to prepare for the proofs in section 4 , we first discuss the oriented book embeddings of _ oriented cycles _ and _ oriented trees _ in section 2 .",
    "in this section we discuss the oriented book embeddings of two fundamental types of oriented graphs , oriented cycles and oriented trees .",
    "we will use these oriented graphs to construct strictly uni - dicyclic graphs in section 4 .",
    "we now discuss oriented book embeddings of oriented cycles .",
    "we first discuss book embeddings of ( undirected ) cycles in theorem  [ cyclic_on_c ] , and characterize the spine order of every @xmath73-page book embedding of a cycle .",
    "we then describe all possible @xmath73-page oriented book embeddings of directed cycles in corollary  [ directed cycle ] .",
    "let @xmath127 be a cycle on @xmath13 vertices . by definition",
    ", there exists an isomorphism @xmath128 \\rightarrow v(c)$ ] such that the edge set of @xmath127 consists of @xmath129 for @xmath130 $ ] and edge @xmath131 . for @xmath62 and @xmath132 , a _",
    "cyclic permutation _ of @xmath133 is a mapping",
    "@xmath134 @xmath135 @xmath136 , @xmath137 $ ] .",
    "we call each cyclic permutation of @xmath133 a _ natural ordering _ of @xmath133 .",
    "[ cyclic_on_c ] let @xmath127 be a cycle having a @xmath1-page book embedding",
    ". then @xmath1 is minimal if and only if the spine order is a natural ordering of @xmath133 .    since @xmath127 is not a path , by theorem  [ bkthm ] , @xmath138 and since @xmath127 is outerplanar , @xmath139 .",
    "therefore @xmath1 is minimal when @xmath140 .",
    "we need only prove the necessary condition , as the sufficient condition is trivial .    to prove the necessary condition by contradiction ,",
    "choose a counterexample , that is , suppose that there exists a 1-page book embedding of @xmath127 such that @xmath141 the spine order is not a natural ordering of @xmath133 ; then there exists at least one pair of vertices , @xmath142 , @xmath143 in @xmath127 that are not consecutive in the spine , implying that the edge @xmath129 is a loose edge . considering all such pairs , @xmath144",
    "choose @xmath69 such that no other such pair exists between @xmath142 and @xmath143 in the spine .",
    "by @xmath141 , there is at least one vertex @xmath145 embedded between @xmath142 and @xmath143 in the spine . since @xmath145 is covered by the edge @xmath129 , by the planarity rule , vertex @xmath146 or vertex @xmath147 must also be covered by @xmath129 . if @xmath148 , then @xmath149 ; every spine order of three vertices is a natural ordering , and we obtain a contradiction .",
    "therefore , either @xmath146 or @xmath147 is not in @xmath150 . by continuing this logic for an arbitrary vertex @xmath145",
    ", every vertex except @xmath142 and @xmath143 is embedded between @xmath142 and @xmath143 ; otherwise , the planarity rule is violated . by @xmath144 ,",
    "the spine order must be a natural ordering of @xmath133 .",
    "corollary  [ directed cycle ] follows from theorem  [ cyclic_on_c ] and provides the location of the arcs in a @xmath73-page oriented book embedding of a directed cycle .",
    "[ directed cycle ] let @xmath151 be an @xmath13-dicycle .",
    "then @xmath151 has a @xmath73-page oriented book embedding if and only if the spine ordering is a natural ordering of @xmath152 and every arc is tight , except the arc between the top vertex and bottom vertex in the spine .",
    "we now show that every oriented cycle has a @xmath73-page oriented book embedding .",
    "let @xmath153 be an oriented cycle .",
    "then @xmath154 .",
    "let @xmath127 be the underlying graph of @xmath153 .",
    "since @xmath138 , we have that @xmath155 . to show that @xmath156 , embed the vertices into the spine so that the spine order is a natural ordering of @xmath152 , say @xmath157 .",
    "embed the arc @xmath23 with endpoints @xmath158,@xmath159 into the page . for @xmath160 ,",
    "embed every arc having the same direction as @xmath23 into the page and embed each arc having the opposite direction of @xmath23 into the spine .",
    "thus we obtain a 1-page oriented book embedding , and @xmath156 .",
    "since we have shown that @xmath161 , we conclude that @xmath162 .",
    "we now discuss oriented book embeddings of oriented trees and oriented forests , and introduce a type of oriented tree , called a _ fountain tree _ , which will be utilized in section 4 .",
    ", denoted @xmath163 , is a connected graph having no cycle as a subgraph .",
    "an _ oriented tree _",
    ", denoted @xmath164 , is an oriented graph whose underlying graph is a tree .",
    "the authors in  @xcite , focusing on oriented graphs which contain no directed cycle , use a restricted definition of oriented book embeddings , requiring the direction of all arcs in every page to agree and such that no arc is embedded into the spine , i.e. , each vertex _ must _ be loose in the embedding .",
    "they prove that every oriented tree has a @xmath73-page oriented book embedding such that an arbitrarily chosen vertex , called the _ root _ is uncovered .",
    "we translate their result below .",
    "[ oriented tree ] @xmath104heath , pemmaraju , and trenk , @xmath165  @xcite @xmath106 for every oriented tree @xmath164 with arbitrarily chosen root @xmath21 , there exists a spine order of @xmath166 that yields a @xmath73-page oriented book embedding of @xmath164 in which the root @xmath21 is uncovered , every vertex is loose , and the page is upwards .",
    "the above result only proves existence .",
    "we give an algorithm , called the riented ree pine rder algorithm , or otso algorithm , that gives a spine order which yields a @xmath73-page oriented book embedding as described in theorem  [ oriented tree ] . for convenience",
    ", we will always assume the direction of the page to be upwards , unless otherwise noted .",
    "for an oriented tree @xmath164 , we can choose the root to be a sink in @xmath164 .",
    "the following lemma proves that , in a @xmath73-page oriented book embedding of @xmath164 , we can place the root so that it is the top vertex in the spine .",
    "an oriented tree @xmath164 , an arbitrarily fixed vertex @xmath167 , and two empty lists @xmath80 and @xmath168 a list @xmath168 that yields the spine order of a @xmath73-page oriented book embedding of @xmath164 such that each vertex is loose in the embedding , the direction of all arcs agree , and @xmath100 is uncovered    2    let @xmath169 add @xmath170 to the end of @xmath80 add @xmath170 to the beginning of @xmath168    add @xmath171 to @xmath80 between @xmath172 and @xmath100 add @xmath171 to @xmath168 between @xmath172 and @xmath100    let @xmath173 add @xmath174 to the end of @xmath80 add @xmath175 to the end of @xmath168    add @xmath176 to @xmath80 between @xmath177 and @xmath100 add @xmath176 to @xmath168 between @xmath177 and @xmath100    [ tree_sink ] if a vertex @xmath100 is a sink in @xmath164 then there exists a spine order of @xmath166 which yields a @xmath73-page oriented book embedding of @xmath164 such that @xmath100 is the top vertex in the spine and each vertex is loose in the oriented book embedding .",
    "since @xmath100 is a sink , let @xmath178 .",
    "delete @xmath100 to obtain @xmath1 disconnected oriented trees , denoted @xmath179 , with root @xmath176 , @xmath59 .",
    "let @xmath180 be the spine order of @xmath179 in the @xmath73-page oriented book embedding guaranteed by theorem  [ oriented tree ] . to obtain a @xmath73-page oriented book embedding of @xmath164 , embed the vertices into the spine with spine order @xmath181 such that @xmath100 is the top vertex in the spine . by theorem  [ oriented tree ] ,",
    "every arc of @xmath179 , @xmath59 , can be placed into the interior of the page such that @xmath176 is uncovered , each arc is upwards , and each vertex is loose . then place each arc @xmath182 into the interior of the page , and since all arcs @xmath182 share @xmath100 as a common endpoint , they are nested and thus do not cross in the page",
    ". therefore the statement holds .",
    "let @xmath164 be an oriented tree with sink @xmath100 .",
    "for convenience , we call an oriented book embedding , as described in lemma  [ tree_sink ] , a _ sink oriented book embedding _ ; we abbreviate the spine order of such an embedding @xmath183 , such that @xmath100 is the top vertex in the spine , and @xmath184 represents @xmath185 .",
    "similarly , we can construct a _ source oriented book embedding_.    we are now prepared to define a sink fountain tree having an specific @xmath73-page oriented book embedding , which will be useful in section 4 . to do this",
    ", we use the standard dipath @xmath74 , with arcs @xmath186 , @xmath71 , and @xmath13 oriented trees @xmath187 , @xmath188 , such that each @xmath187 contains a sink @xmath189 . by lemma  [ tree_sink ] , each @xmath187 has a @xmath73-page sink oriented book embedding , such that @xmath189 is the top vertex in the spine , with spine order @xmath190 .",
    "embed @xmath191 and @xmath192 , @xmath188 , into the spine of a book with spine order @xmath193 such that @xmath73 is the top vertex in the spine .",
    "place all arcs in @xmath194 into the spine , and place all arcs in @xmath195 , @xmath188 , into the interior of the page .",
    "therefore we have a @xmath73-page oriented book embedding @xmath196 .",
    "we now identify each @xmath189 in @xmath187 with @xmath69 in @xmath74 , changing the spine order to @xmath197 , as shown in figure  [ fig : fnt_tree ] for @xmath198 .",
    "this does not increase the number of pages required , since for @xmath188 , each set of arcs with head @xmath189 will be nested inside the set of arcs with head @xmath199 .",
    "this yields an oriented tree containing an @xmath13-dipath .",
    "we call such an oriented tree a _ sink fountain tree _ and call the @xmath73-page oriented book embedding described above a _ sink fountain oriented book embedding_. we denote the spine order of a such an embedding @xmath200 , where @xmath201 is the top vertex in the spine and @xmath202 represents @xmath203 .",
    "similarly , we can construct a _ source fountain tree_.",
    "we now characterize the class , @xmath10 , of @xmath73-page critical oriented graphs .",
    "the only connected oriented graph on @xmath13 vertices which can be embedded into a @xmath204-page book , i.e. , only the spine , is a directed path @xmath74 .",
    "since @xmath74 has exactly one source and exactly one sink , to find minimal obstructions , we consider oriented graphs having a source or sink of degree at least two . thus we define @xmath205 to be the oriented @xmath206-path containing a source of degree two , and we define its converse @xmath207 to be @xmath208 , which contains a sink of degree two . if an oriented graph is an oriented tree that is not an oriented path , it contains a vertex of degree greater than or equal to three and must also contain an oriented subgraph isomorphic to either @xmath205 or @xmath208 ; therefore , the only other oriented graphs to consider are oriented cycles . if an oriented cycle is not a directed cycle , it must contain an oriented subgraph that is isomorphic to either @xmath205 or @xmath208 . while an @xmath13-dicycle , denoted @xmath151 , contains no @xmath205 or @xmath208 , its oriented book thickness is one , which will be discussed more in section 2 .",
    "however , the deletion of any arc in @xmath151 results in a dipath ; therefore , @xmath151 , @xmath209 , is in @xmath10 , giving the following result .",
    "[ m_1 ] @xmath210 .",
    "in this section , we give the complete description for the class of _ strictly uni - dicyclic graphs _ , denoted @xmath12 , and discuss three subclasses , @xmath211 , of @xmath12 that are @xmath117-page critical , which we use to characterize @xmath11 in theorem  [ unicyclic_list ] .",
    "let @xmath151 , @xmath209 , be an @xmath13-dicycle , with arcs @xmath212 , for @xmath71 , and arc @xmath213 ; then @xmath151 is a member of @xmath12 and we can construct every oriented graph in @xmath12 as follows .",
    "following the definition of @xmath73-sum for undirected graphs , found in  @xcite , we define the _ @xmath73-sum _ of two oriented graphs @xmath3 , @xmath8 , via @xmath214 and @xmath215 , to be the oriented graph obtained by identifying a vertex @xmath216 with a vertex @xmath217 ; we denote the resulting oriented graph @xmath218 . for convenience",
    ", we call a single vertex a _ trivial oriented tree_. for @xmath13 distinct , possibly trivial , oriented trees @xmath219 , @xmath188 , we describe a member of @xmath12 to be @xmath220 , where @xmath221 and @xmath222 . for an oriented graph @xmath3 in @xmath12 ,",
    "if @xmath219 is not a trivial oriented tree , we call the vertex @xmath223 in @xmath3 a",
    "_ heavy vertex_. in fact , each member of @xmath224 , @xmath225 , and @xmath226 have most three heavy vertices .",
    "the next result shows that if a strictly uni - dicyclic graph has exactly one heavy vertex , then its oriented book thickness is one .",
    "[ dicycle_1_tree ] let @xmath227 .",
    "if @xmath3 has exactly one heavy vertex , then there exists a @xmath73-page oriented book embedding of @xmath3 such that the page is upwards and the endpoints of the loose arc of @xmath228 are half - loose in the embedding .",
    "let @xmath151 be an @xmath13-dicycle with arcs @xmath229 , for @xmath71 , and arc @xmath213 .",
    "we may assume the heavy vertex in @xmath3 is @xmath158 .",
    "then there exists a non - trivial oriented tree @xmath164 , containing a vertex @xmath214 , such that @xmath230 . applying theorem  [ oriented tree ] ,",
    "embed @xmath164 into a @xmath73-page book such that each vertex is loose and the direction of the page is upwards . since @xmath231 is loose in the spine , we can insert the directed path @xmath232 into the spine below @xmath214 , so that each arc of the dipath is downwards in the spine , and place the arc @xmath213 into the interior of the page .",
    "thus we have a @xmath73-page oriented book embedding of @xmath3 with @xmath158 and @xmath159 half - loose in the embedding .",
    "we now define the first subclass of strictly uni - dicyclic graphs , @xmath224 , as follows .",
    "an oriented graph @xmath3 is a member of @xmath224 if @xmath3 contains an @xmath13-dicycle , @xmath228 , with @xmath233 , and for two vertices @xmath234 with @xmath235 , there exist two arcs @xmath236 , having one endpoint of degree one and other endpoint @xmath237 , respectively , in @xmath228 , such that @xmath238 .",
    "three members of @xmath224 , with @xmath239 , are shown in figure  [ fig : i ] .",
    "assume there exists a @xmath73-page oriented book embedding of @xmath3 .",
    "since @xmath3 contains dicycle , by lemma  [ directed cycle ] , each vertex of @xmath151 is tight in the embedding , except the endpoints of the loose arc .",
    "however @xmath142 and @xmath242 are not adjacent , thus at least one of @xmath243 , say @xmath142 , is covered by the loose arc of @xmath228 ; let @xmath171 be the other endpoint of the @xmath244 . since @xmath171 must be located in the spine above all vertices of the dicycle , or below all vertices of the dicycle , @xmath244 crosses the loose arc of the dicycle , a contradiction to the planarity rule .      for members of the class @xmath224",
    ", the length of the directed cycle is required to be at least four .",
    "therefore , we define the class @xmath225 to be the class of all oriented graphs @xmath3 which contain a @xmath206-dicycle and such that there exist three arcs @xmath246 having one endpoint of degree one and other endpoint @xmath247 , respectively , in @xmath228 , with @xmath248 . as with @xmath224 ,",
    "the direction of each arc not contained in the directed cycle is not unique .",
    "since the size of the dicycle in elements of @xmath225 is restricted , we are able to easily list , in figure  [ fig : t ] , the four members of @xmath225 .        to introduce the last class , @xmath226 , of strictly uni - dicyclic graphs , we first define an oriented tree , called an _",
    "antler _ , using the oriented paths @xmath250 and a standard @xmath251-dipath @xmath252 .",
    "let @xmath253 be the vertices of degree two in @xmath205 , @xmath208 , respectively .",
    "for an integer @xmath254 , we define a _ positive @xmath251-antler _",
    ", @xmath255 ; we also define the positive @xmath73-antler @xmath256 .",
    "we define a _ negative @xmath251-antler _ @xmath257 to be the converse , @xmath258 , of a positive @xmath251-antler . @xmath259 and",
    "@xmath260 can be seen in figure  [ fig : antler ] .",
    "it is important to note that if an oriented tree contains _ no _ positive antler , it is a negative fountain tree , and similarly , if an oriented tree contains _ no _ negative antler , it is a positive fountain tree .",
    "we now define @xmath226 , using a positive antler @xmath262 , a negative antler @xmath263 , and the standard @xmath13-dicycle , @xmath228 . in @xmath228",
    ", we choose an arbitrary arc @xmath229 and call it @xmath264 . let the oriented graph @xmath265 ; let the oriented graph @xmath266 .",
    "we then define the class @xmath226 as @xmath267 .",
    "figure  [ fig : r ] depicts @xmath268 , @xmath269 , and @xmath270 .",
    "let @xmath271 .",
    "for a contradiction , consider a @xmath73-page oriented book embedding of @xmath3 .",
    "we will first prove the statement for @xmath272 . in @xmath273 , we have that @xmath274 and @xmath275 .",
    "let @xmath276 be the sinks of the positive antler , and let @xmath277 be the sources of the negative antler . by corollary  [ directed cycle ] , the spine order of the embedding must be a natural ordering of @xmath278 and each arc except one , call it @xmath279 , is tight in the embedding and each vertex in @xmath278 , except the endpoints of @xmath279 , is covered by @xmath279 in the embedding . therefore , no vertex contained in @xmath278 can appear between two vertices of @xmath228 in the spine and @xmath280 ; otherwise , one of @xmath100 or @xmath214 , say @xmath100 , would be covered by @xmath279 and the arcs @xmath281 would cross @xmath279 .",
    "we may assume then that @xmath100 is below @xmath214 in the spine , and the direction of the page is upwards .",
    "both @xmath102 and @xmath103 can not appear below @xmath100 in the spine , otherwise , say if @xmath102 is below @xmath103 is below @xmath100 in the spine , then we would have an upwards arc @xmath264 and a downwards arc @xmath282 in the interior of the page , a contradiction to the direction rule . therefore , since each arc between @xmath100 and @xmath214 is tight , at least of @xmath101 , say @xmath103 is above @xmath214 in the spine",
    ". then @xmath214 is covered by @xmath283 .",
    "then both @xmath284 and @xmath285 must appear between @xmath214 and @xmath103 in the spine , thus either @xmath286 or @xmath287 is embedded into the page , as a downwards arc .",
    "however , since @xmath264 is an upwards arc , we obtain a contradiction and @xmath241 .",
    "the proofs for other members of @xmath226 are similar .        to prove the necessary condition , consider the contrapositive , which states : if @xmath3 contains a member of @xmath224 , @xmath225 , or @xmath226 then @xmath241 .",
    "this is true by corollary  [ i>1 ] , corollary  [ t ] , and lemma  [ r ] . to prove the sufficient condition ,",
    "let @xmath3 be a strictly uni - dicylic graph containing no member of @xmath224 , @xmath225 , or @xmath226 , and we now construct a @xmath73-page oriented book embedding of @xmath3 .",
    "let @xmath3 contain an @xmath13-dicycle @xmath151 .",
    "since @xmath3 contains no member of @xmath225 or @xmath224 as an oriented subgraph , @xmath228 has at most two heavy vertices @xmath100 and @xmath214 , such that the arc @xmath290 .",
    "since @xmath3 contains no member of @xmath226 , either @xmath291 does not contain a positive antler , or @xmath292 does not contain a negative antler .",
    "we may assume that @xmath291 does not contain a positive antler .",
    "we first consider a @xmath73-page oriented book embedding of @xmath293 , guaranteed by lemma  [ dicycle_1_tree ] .",
    "since @xmath100 has degree two in @xmath293 , @xmath100 is half - loose in the spine .",
    "we now put @xmath291 back into @xmath3 . since @xmath291 contains no positive antler , @xmath294 .",
    "if @xmath295 , then @xmath100 is a sink , and by lemma  [ tree_sink ] , there is sink oriented book embedding of @xmath291 with spine order @xmath296 .",
    "thus place @xmath184 below @xmath100 in the spine and we are done . if @xmath297 , then @xmath291 must be a sink fountain tree , and there is a sink fountain oriented book embedding of @xmath291 with spine order @xmath298 .",
    "thus place @xmath299 below @xmath100 in the spine and we are done . in either case , we obtain a @xmath73-page oriented book embedding of @xmath3 .",
    "the case in which @xmath292 does not contain a negative antler is similar ."
  ],
  "abstract_text": [
    "<S> a graph @xmath0 has a _ @xmath1-page book embedding _ </S>",
    "<S> if @xmath0 can be embedded into a _ @xmath1-page book_. the minimum @xmath1 such that @xmath0 has a @xmath1-page book embedding is the _ book thickness _ of @xmath0 , denoted @xmath2 . </S>",
    "<S> most of the work on this subject has been done for unoriented graphs and oriented acyclic graphs ( no directed cycles ) . in this work </S>",
    "<S> we discuss oriented graphs @xmath3 containing directed cycles by using _ oriented book embeddings _ and _ oriented book thickness _ , @xmath4 . </S>",
    "<S> to characterize @xmath3 such that @xmath5 , we define the class @xmath6 of _ @xmath1-page critical oriented graphs _ to be all oriented graphs @xmath3 with @xmath7 , but for every proper oriented subgraph of @xmath3 , denoted @xmath8 , we have that @xmath9 . </S>",
    "<S> determining @xmath6 for general @xmath1 is challenging ; we narrow down the list of oriented graphs in @xmath6 for small @xmath1 . in this work </S>",
    "<S> we show complete lists for @xmath10 and for @xmath11 , where @xmath12 consists of all _ strictly dicyclic oriented graphs _ </S>",
    "<S> , that is , oriented graphs containing exactly one oriented cycle , which is a directed cycle .    </S>",
    "<S> keywords : book embedding , book thickness , oriented book embedding , oriented book thickness , directed cycle , critical graph </S>"
  ]
}
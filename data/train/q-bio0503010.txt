{
  "article_text": [
    "systems made up of entities that interact pairwise can be modeled as networks . to comprehend the emergent properties of such systems  the objective of the study of complex systems and systems biology ",
    "one approach is to investigate the global properties of the corresponding networks @xcite . in many cases the individual entities ( or vertices )",
    "have distinct functions in the system . in such cases , provided the wiring of the edges relates to the function of vertices , one can predict these functions from the vertices position in the network .",
    "for example , a corporate hierarchy may be topped by a ceo , followed by a cfo and coo , so a chart of who reports to whom is enough to identify these positions .",
    "another problem in this category of much recent interest is to predict protein functions @xcite from the networks of protein interactions @xcite .",
    "these methods , like other methods based on e.g. protein sequences , are important because to confirm a protein function one needs function - specific and possibly hard - to - design _ in vivo _ , genetic or biochemical tests , while interaction and sequence data can be obtained fairly easily .",
    "in this paper we propose a general method of predicting the functions of vertices in networked systems where the functions are partly mapped out .",
    "the rationale of our algorithm is to match unknown vertices with the most similar ( judging from the network structure ) categorized vertex and take the functions of the latter vertex as our forecast .",
    "the network similarity concept we ground our method on is related to the notion of regular equivalence @xcite or role similarity @xcite of social network theory .",
    "roughly speaking , two vertices are similar , in this sense , if the network looks alike from their respective perspectives .",
    "we evaluate our method on model networks where the categories of vertices reflect their placement in the network .",
    "we also apply the method to _",
    "s.  cerevisiae _ protein data obtained from the mips data base @xcite ( data extracted january 23 , 2005 ) .",
    "role similarity refers to rather broad set of concepts and related measures .",
    "basically , the _ role _ of a vertex is determined by the characteristics of the vertices it is connected to @xcite .",
    "consider two vertices @xmath0 and @xmath1 .",
    "if their neighborhoods are similar , we say @xmath0 and @xmath1 have high role similarity . the question how to define the similarity of the neighborhoods @xmath2 and",
    "@xmath3 leads to two different concepts .",
    "one choice matches the identity of vertices in the neighborhood .",
    "this leads to the _ structural equivalence _",
    "relation which is true if @xmath4 .",
    "another way to compare neighborhoods is to match the similarity of vertices in the neighborhood which gives the concept of _ regular equivalence_if one can pair the vertices of @xmath2 with vertices in @xmath3 such that each pair is regularly equivalent , then @xmath0 and @xmath1 are also regularly equivalent .",
    "since vertices with the same functions need not , in general , be close , we will need a similarity score measuring how close to regular equivalence two vertices are .",
    "following refs .",
    "@xcite we define a similarity score based on iterating the regular equivalence principle `` two vertices are similar if they are pointed to , or point to , vertices that themselves similar . '' in the general case of a directed network with @xmath5 different types of edges , one implementation of this argument is just to sum the similarities between vertices of the neighborhoods : @xmath6,\\ ] ] where @xmath7 is the similarity between @xmath0 and @xmath1 after the @xmath8th iteration and @xmath9 is the in - neighborhood of @xmath0 with respect to @xmath10-edges . to avoid overflow problems we rescale all similarities so that @xmath11 after each iteration .",
    "we break the iteration when the sum , before the normalization , has not changed by more than a @xmath12th of its previous value .    by the eq .",
    "[ eq : simdef_i ] definition , high degree vertices will appear more similar to the average other vertex than low - degree vertices . to compensate for",
    "this effect one may divide by the appropriate degrees ( numbers of neighbors ) to obtain :    @xmath13,\\ ] ]    where @xmath14 is the in - degree of @xmath0 with respect to @xmath10-edges . from now on we call @xmath15 of eq .",
    "[ eq : simdef_i ] and @xmath16 of eq .",
    "[ eq : simdef_ii ] the i- and ii - similarity between @xmath0 and @xmath1 respectively .",
    "as mentioned , we suppose some of the vertices are functionally categorized . in general",
    "we assume one vertex can have many functions . for pairs of such functionally determined vertices",
    "the above similarities will add no information .",
    "instead we define a functional similarity @xmath17 for such pairs , where @xmath18 is @xmath0 s function set ( we assume a finite number of functions ) and @xmath19 denotes the jackard index @xmath20 and the average is over all pairs of categorized vertices",
    ". we will later need @xmath21 to represent neutrality which is why we subtract the mean .",
    "whenever a pair of classified vertices @xmath22 appears in the sums of eqs .",
    "[ eq : simdef_i ] or [ eq : simdef_ii ] we use the @xmath23 value of eq .",
    "[ eq : simdef_f ] instead of @xmath24 or @xmath16 .",
    "i.e. , we assume the functional classification is more accurate than the role - similarities and hence do not update the former .",
    "in general we can now define our prediction scheme as follows :    1 .",
    "[ enu : init ] for vertex pairs with at least one unclassified vertex initialize @xmath25 to @xmath26 if @xmath27 and to @xmath28 otherwise .",
    "[ enu : sim ] calculate the similarity scores for all pairs of unique vertices such that at least one is unclassified .",
    "[ enu : choose ] for an unclassified vertex @xmath0 , predict the function set @xmath29 , where @xmath30 is the classified vertex with highest similarity to @xmath0 .",
    "if @xmath30 is not unique , but a set @xmath31 has the highest similarity to @xmath0 , then let the set @xmath32 of functions present in more than half of the set of @xmath1 s be your guess",
    ". if @xmath32 is empty , let @xmath33 for a random @xmath34 be the guess .",
    "the diagonal elements will have maximal functional similarity ( which is why we set them to @xmath35 in step  [ enu : init ] ) , otherwise we assume neutrality .",
    "the backup selection rules in step  [ enu : choose ] will typically be needed when unclassified vertices are structurally equivalent to classified vertices , the use of the majority rule instead of only a random guess will compensate for occasional errors in the assignment of functions to classified proteins .",
    "our parameter @xmath36 sets the relative importance of the functional similarities to the subsequent assessments of @xmath37 .",
    "as mentioned above , the functional classification is assumed to be more accurate than the role - similarities , and it is thus sensible to choose a @xmath38 $ ] .",
    "the appropriate @xmath36 value is problem dependent .",
    "we will use @xmath39 which is in this interval for both our two test cases . to summarize ,",
    "we have proposed two versions of our prediction scheme , scheme i and ii , corresponding to i- and ii - similarity .",
    "to test our prediction algorithm we construct model networks where the assigned functions of the vertices correspond to their position in the network .",
    "we test the algorithm s size scaling and performance in sub - ideal conditions by randomly perturbing the network .          in defining our model",
    ", we will metaphorically use the flow of raw material , products and information in a manufacturing system . for our purpose",
    "we only need networks where the functions of vertices correspond to their position in their network surroundings  we will not further motivate its relevance as a model for manufacturing networks .",
    "we assign five distinct functional classes of the vertices : the _ supply _ vertices are the source of the raw material which flows along _ a - edges _ to _ assembler _ vertices .",
    "the assembled products are transported via _",
    "b - edges _ to _ delivery _ vertices that dispatch the products . from the delivery",
    "vertices informational feedback is sent to the supply vertices through _ c - edges_. furthermore , the a and b - edges can fork at _ a- _ and _ b - distributor _ vertices .",
    "the precise definition of the model is as follows : start with the kernel shown in fig .  [",
    "fig : ill](a ) , then grow the network vertex by vertex . at each iteration ,",
    "assign , with equal probability , one of the above functions to the new vertex .",
    "then , depending on the assigned function , form edges including the new vertex as follows .",
    ": :    add an a - edge to an assembler or a - distributor , and a c - edge from a    delivery vertex .",
    ": :    add an a - edge from an assembler or a - distributor vertex , and a b - edge    to an assembler or a - distributor .",
    ": :    add a b - edge from an assembler or b - distributor , and a c - edge to a    supplier .",
    ": :    add an a(b)-edge from an assembler or a(b)-distributor vertex , and an    a(b)-edge to an assembler or a(b)-distributor .",
    "the choice of vertex to attach the new vertex to , given its functional category , is done with uniform randomness .",
    "note that the number of edges will on average be twice the number of vertices ( two edges are added per vertex ) .    from the definition",
    "so far , any vertex is identifiable from its neighborhood  a vertex with incoming c - edges and out - going a - edges is a supplier , and so on .",
    "real data - sets are seldom perfect  neither in the wiring of the edges , nor in the functional classification . to test the prediction scheme under more realistic circumstances we randomize the network as follows :",
    "after generating a network according to the above scheme , we go through all edges sequentially . with a probability",
    "@xmath10 detach the from - side of an edge and re - attach it to a randomly chosen vertex such that no self - edge or multiple edge ( of the same type  a , b or c ) is formed .",
    "rewire the to - side likewise with the same probability .",
    "a realization of the algorithm is displayed in fig .",
    "[ fig : ill](b ) .",
    "after the rewiring there is not necessarily enough information to classify a vertex@xmath0 in fig .",
    "[ fig : ill](b ) is an assembler but could just as well have been a b - distributor .      to test the our prediction scheme we mark a random set of @xmath40 , @xmath41 , vertices unclassified .",
    "then we predict the function of these vertices and let the average fraction of correctly predicted vertices @xmath42 be our performance measure .",
    "[ fig : mod ] shows @xmath42 for @xmath43 and different network sizes , as a function of the the rewiring probability @xmath10 . in the small-@xmath10",
    "limit the i - similarity prediction scheme makes an almost flawless job with @xmath44 for @xmath45 .",
    "note , since we have five distinct functions , random guessing could not do better than @xmath46 .",
    "this value , @xmath46 , is by necessity attained in the random limit @xmath47 . for small @xmath10-values the scheme ii performs best , but if @xmath48 scheme i performs slightly better .",
    "the size convergence for scheme i is faster , so in the large network limit ii may outperform i. to understand the performance of the different schemes we note that scheme i has a tendency to match an unknown vertex to a known vertex of high degree .",
    "when @xmath49 this effect leads to some mispredictions for scheme i. but the redundant information about high degree vertices makes the more robust to minor perturbations , thus the slower decay of the @xmath50-curves compared with scheme ii .",
    "we observe that the performance increases with the systems size for both schemes .",
    "this is important effect since databases in general grow in size  our prediction scheme will thus be more accurate with time .",
    "we surmise the explanation lies in , roughly speaking , that the bigger the network gets , the more likely it is that there is a very good matching .",
    "this is an effect local methods ( taking only the surrounding of a vertex into account ) could not utilize .",
    "a full explanation of this effect lies beyond the scope of this paper .",
    "specifying protein functions experimentally requires demanding and potentially expensive tests . if one can obtain good guesses of the functions of an unknown protein , much is gained . during last decade",
    ", there has been a great number of methods suggested for protein functional prediction , including methods based on based on sequence or structure alignments @xcite , attributes derived from collections of sequences or structures @xcite , phylogenetic profiles @xcite , or analysis of protein complexes @xcite .",
    "much of recent work has concentrated on functional prediction based on protein - protein interaction data .",
    "many of these are specialized methods that exploit specific features of protein - protein interaction data ( such as that vertices that interact physically are likely to share some functionality ) .",
    "the more general approaches @xcite are local in the sense that they are only based on pairwise statistics .",
    "for this reason they may not share the advantageous size scaling properties of our method .",
    "there are two types of large scale network data available for _",
    "s.  cerevisiae _ : `` physical '' and `` genetic '' protein - protein interactions .",
    "the terms `` physical '' and `` genetic '' refer to the type of experiment used to deduce the interaction .",
    "the genetic experiments are based on mutation studies , and the evidence from them is of a more indirect nature .",
    "we therefore distinguish between physical and genetic edges .",
    "all edges are undirected .",
    "our data set , derived from the mips data base , has @xmath51 linked together by @xmath52 genetic regulation edges and @xmath53 physical interaction edges .",
    "we removed duplicates , self - edges and interactions where one or both of the interacting substances were not proteins .",
    "the assigned functions are arranged in a hierarchical fashion , according to the funcat categorization scheme @xcite used by the mips database .",
    "the first level contains the coarsest description of a protein s function , such as `` metabolism , '' the second level is more specified e.g.  `` amino acid metabolism , '' and so on .",
    "we will test our algorithm of the first and second level of this hierarchy and thus treat functions that differ in a finer classification as equal .",
    "there are three categories with no substantial functional information``ubiquitous expression , '' `` classification not yet clear - cut '' and `` unclassified proteins .",
    "'' we considered vertices with no other assigned categories than these three uncategorized .    in fig .",
    "[ fig : pex ] we show a small example of scheme ii in action on the yeast data .",
    "suppose yjl191w is to be classified ( we know it has the level-1 functions `` protein with binding function  '' and `` protein synthesis '' ) .",
    "the classified protein with highest similarity is yor133w .",
    "this is because ynl041c , which interacts physically with yjl191w , is functionally identical ( at level one of the hierarchy ) to ybr068c that is physically linked to yor133w .",
    "similarly , yjl191w is genetically linked with ycr031c , which shares one functional category with ydr385w , which is genetically linked with yor133w .",
    "these two features give a high similarity score to the pair yjl191w and yor133w , so scheme ii guesses that yjl191w has the functional category `` protein synthesis '' but misses the `` protein with binding function  '' category .",
    ".[tab : perf ] the performance of our methods compared to the neighborhood counting method of ref .",
    "@xmath54 is the average fraction of correct predictions among the predicted functions averaged over all the classified proteins .",
    "@xmath55 is the average fraction of correct predictions among the actual functions . [",
    "cols=\">,^,^,^,^,^,^ \" , ]     for the previously described test networks we know _ a priori _ that the number of functions to be predicted is one .",
    "the same may be true for a variety of systems , but not for proteins . with the number of functions as one variable in the prediction problem",
    "we proceed to replace the success rate @xmath42 by the two measures _ precision _ @xmath54 and _ recall _ @xmath55 ( the names borrowed from corresponding quantities in the text - mining literature , see e.g.  ref .",
    "@xcite and references therein ) : @xmath56 where @xmath57 is the number of correctly predicted functions , @xmath58 is the real number of functions and @xmath59 is the number of predicted functions .",
    "@xmath60 is thus the expected fraction of false positive predictions ( and similarly for @xmath55 ) .",
    "both these measures take values in the interval @xmath61 $ ] with @xmath26 meaning that no function is predicted correctly and @xmath62 represents perfect prediction .",
    "the averages are over the set of predicted functions in the same kind of leave - one - out estimates as performed for the test networks .",
    "we follow refs .",
    "@xcite and use the neighborhood counting method ( ncm ) of ref .",
    "@xcite for reference values .",
    "this method assigns the @xmath59 most frequent functions among the neighbors of the physical interaction network to the unknown protein . considering its simplicity , compared with the more elaborate procedures listed above ,",
    "this is a remarkably efficient method .",
    "( i.e. , @xmath59 is a parameter of this model . ) in our implementation , if the @xmath59th function is not unique we select that randomly .",
    "thus proteins with no neighbors are assigned @xmath59 functions randomly .",
    "precision and recall values are displayed in tab .",
    "[ tab : perf ] .",
    "we use @xmath63 for the ncm which is the closest value to the average number of functions per protein for both levels one and two in our data set .",
    "the values may look low compared to similar tables in other papers on protein prediction , but these often do not include low - degree vertices , or use other performance measures ( such as counting the fraction of proteins with at least one correctly predicted function , and so on ) .",
    "we note that , like the more disordered test networks , scheme ii gives better performance in general ( typically having better recall- but slightly worse precision - values ) .",
    "we have proposed methods for predicting the function of vertices in networked systems where the function of a vertex relates to its position .",
    "the principle behind our scheme is role equivalence as related to the regular equivalence concept of social network analysis .",
    "i.e. , vertices are similar if the network , as seen from the respective vertices , look similar .",
    "we make two extensions to the method proposed in refs .",
    "@xcite to networks where some of the vertices are functionally categorized .",
    "the prediction of an uncategorized protein is then done by copying the functions of the other vertex with highest role similarity .",
    "our schemes , corresponding to our two role similarities , are tested on model networks .",
    "these are designed to have a correspondence between the function of the vertex and their network surrounding .",
    "this correspondence can be tuned by a randomization parameter .",
    "we find that the performance of both schemes increases with the system size ( the fraction of unknown vertices and rewired edges is fixed ) , which makes the applicability of our methods increasing with time ( as data bases , in general , tend to grow ) . the differences between scheme i and ii can be described by the fact that , scheme i gives ( compared with scheme ii ) a higher similarity to vertex - pairs containing a high - degree vertex .",
    "furthermore , we apply our method to the _ s.  cerevisiae _ proteome .",
    "we use the networks of protein - protein interactions and obtain results that compare well with standard methods designed solely with protein functional prediction in mind .",
    "we do not claim that our method outperform the best specialized protein prediction methods  our aim is to construct a global method for general functional prediction , and most protein functional prediction schemes would perform poorly on our test networks .",
    "the ideas of this paper might however contribute to future , more elaborate , methods for prediction of protein functions .",
    "the basic advantage of our method , as we see it , is that is a very general method that should apply to functional prediction in many systems .",
    "moreover , it makes use of global network information , giving performance that does not decrease as the systems gets larger . the fact that it is a truly global algorithm ",
    "the prediction of every vertex functions takes wiring of the whole network into account  makes it rather slow ( compared to e.g.  specialized protein functional prediction methods , such as the one proposed in ref .",
    "the execution time scales as @xmath64 ( where @xmath65 is the total number of edges ) . but data sets of @xmath66-@xmath67 , which cover e.g.  the size of proteomes of known organisms , should be manageable to present day computers .",
    "we believe the problem of functional prediction in different types of networked systems is far from concluded  both in its full generality and the question how to utilize the characteristics of more specific systems .",
    "pagel , p. , kovac , s. , oesterheld , m. , brauner , b. , dunger - kaltenbach , i. , frishman , g. , montrone , c. , mark , p. , stmpflen , v. , mewes , h.  w.  _ et al . _",
    "( 2004 ) _ bioinformatics _ , [ epub ahead of print ] doi:10.1093/bioinformatics / bti115 ."
  ],
  "abstract_text": [
    "<S> we propose a general method to predict functions of vertices where : 1 . </S>",
    "<S> the wiring of the network is somehow related to the vertex functionality . </S>",
    "<S> 2 . a fraction of the vertices are functionally classified . </S>",
    "<S> the method is influenced by role - similarity measures of social network analysis . </S>",
    "<S> the two versions of our prediction scheme is tested on model networks were the functions of the vertices are designed to match their network surroundings . </S>",
    "<S> we also apply these methods to the proteome of the yeast _ saccharomyces cerevisiae _ and find the results compatible with more specialized methods . </S>"
  ]
}
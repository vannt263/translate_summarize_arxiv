{
  "article_text": [
    "over the past decade , there has been a lot of research relating the structure and function of networks  @xcite .",
    "the common picture is that real - world networks are to some degree random , but also have some regularities .",
    "these regularities , the network structure , affect dynamical processes taking place on the network .",
    "examples of such processes include epidemic spreading , synchronization , random walks and opinion formation .",
    "if follows that the network structure can influence how robust a dynamic system is to targeted attacks and random failures  @xcite . since the robustness and stability of networks is relevant for the reliability and security of our modern infrastructures  such as electricity systems , power - grids , sewage systems , cell - phone networks and the internet  it is important to know how to generate ( or design ) robust networks .",
    "when a fraction of vertices in a network are malfunctioning due to either random failures or malicious attacks , the whole network may be broken into isolated parts . assuming the indirect connectivity is important for the system to function",
    ", we can take this fragmentation process as reflecting the breakdown of the system s functionality . in the context of percolation theory ,",
    "this fragmentation can be monitored by the critical occupancy threshold @xmath0i.e .",
    "the fraction of functioning vertices needed for a finite fraction of the network to be connected ( in the large - size limit of a network model )  @xcite .",
    "instead of considering this criterion for robustness , schneider _",
    "et al . _",
    "@xcite , focused on the evolution of the largest component ( connected subgraph ) when one repeatedly remove the highest - degree vertices in the network .",
    "in particular , they introduced an index , @xmath1 , to weigh the robustness of network , which is defined as @xmath2 where @xmath3 is the number of vertices in the network and @xmath4 is the fraction of vertices in the largest connected cluster after removing @xmath5 vertices .",
    "the normalization factor @xmath6 makes it easier to compare the robustness of networks with different sizes .",
    "the value of @xmath1 lies strictly in the range @xmath7 $ ] , where the two limits correspond to a network with star structure and a fully connected network  @xcite .",
    "this situation is similar in other types of optimization of conflicting objectives  @xcite .",
    "an heuristic method for maximizing @xmath1 while keeping the degree sequence fixed is to pick random pairs of edges and swap these [ @xmath8 and @xmath9 to @xmath10 and @xmath11 whenever a swap increases @xmath1 .",
    "when no more swaps can increase @xmath1 , the procedure is terminated .",
    "the final networks , after this optimization procedure , will then have a conspicuous onion structure with a core of highly connected vertices , hierarchically surrounded by layers of vertices with decreasing degrees . although one can achieve a considerable enhancement of the robustness by this method , it is not so appropriate in practice for two reasons .",
    "assuming that there are @xmath12 edges in a network , since the swapping of two arbitrary edges can impact the value of @xmath1 , the computational complexity of the method of schneider _ et al .",
    "_  scales as @xmath13 . on top of this , it takes time for the correlations to propagate through the system so that the time for the greedy algorithm to converge also increase with the system size",
    ". all - in - all the running time is thus close to cubic , which makes the approach prohibitively slow for large systems .    in this paper , we present an alternative way to generate networks with onion structures under the constraint of invariant degree value of each vertex , and with computational complexity of order @xmath14 . since broad degree distribution are common in nature and society , we will focus our attention on generating scale - free networks with onion topology .",
    "we validate the efficiency of our algorithm by investigating the response of the generated networks to malicious attacks and random failures , and compare these to the networks obtained by the optimization procedure of ref .  @xcite .",
    "it has been suggested that the resilience of networks depends strongly on their assortativity , i.e. , on how the vertices connect with each other  @xcite . to be more specific , assortatively mixed networks ( i.e.",
    ", high degree vertices are more likely linked with other vertices also with high degrees ) are considerably more robust against the removal of vertices than their disassortative counterparts ( i.e. , high degree vertices are more likely linked with other vertices with low degrees )  @xcite .",
    "thus , keeping invariant the degree of each vertex and varying the mixing pattern among the vertices to increase assortativity would improve the robustness of a network .",
    "however , as was pointed out in  @xcite , onion and assortativity are distinct properties , and high assortative networks may be significantly fragile to malicious attacks due to the lack of onion topology .",
    "nonetheless , these two properties are highly relevant : not all assortative networks have onion structure , but all onion networks are assortative ( the vertices with similar degrees are connected more frequently , as we show below ) .    the time consuming optimization in ref .",
    "@xcite calls for a quicker , heuristic method to generate robust networks with a prescribed degree distribution  @xcite . to do this ,",
    "we first generate a set of @xmath3 random numbers @xmath15 drawn from a distribution @xmath16 .",
    "these numbers represent the degrees of the @xmath3 vertices in the networks .",
    "one can think of the numbers as `` stubs '' or half - edges , sticking out from their respective vertices .",
    "each vertex @xmath17 is then assigned a layer index @xmath18 according to its @xmath19 value .",
    "for the sake of convenience , we rank the vertices by degree , increasingly .",
    "we set the layer index for the vertices with lowest degree is @xmath20 , the index for the set of vertices with second lowest degree is @xmath21 , and so on until all vertices have been assigned an @xmath18 .",
    "then we connect the stubs by selecting a pair at random and joining these with a probability dependent on the layer difference of the two vertices according to @xmath22 where @xmath23 is the difference in layer index between @xmath17 and @xmath24 , and @xmath25 is a control parameter . according to eq .",
    "( [ prob ] ) , the vertices within a layer are connected with greater probability than vertices in different layers . with the increase of the layer index difference , @xmath26 approaches zero rapidly . the elementary stub - connection process is repeated until all the stubs have been used up .",
    "no duplicate connections between two vertices and self - loop connections are allowed during the construction of the network .",
    "it is easy to see that the networks generated in this way should be of onion property .",
    "vertices , @xmath27 , and a degree distribution @xmath28 . the lowest and highest degrees in this network are , respectively , @xmath29 and @xmath30 .",
    "the sizes of the vertices are proportional to their degree , and vertices with the same layer indices are marked by the same color , and edges between nodes with equal degree are highlighted.,title=\"fig : \" ] +    the parameter @xmath31 in eq .  ( [ prob ] ) is the only independent parameter of our model .",
    "if @xmath32 , our algorithm reduces to the well known configuration model of molloy and reed  @xcite .",
    "this , we argue , means that the network has a minimum of onion structure .",
    "if the value of @xmath31 is too large , the connection probabilities among vertices with different degrees become so small that the networks get either stratified and one - dimensional  @xcite or even fragmented in core where a layer typically consists of only one vertex . in sum",
    ", the optimal @xmath31-value , with respect to robustness , is intermediate . in the present study , we use @xmath33 unless otherwise stated . for @xmath33 , @xmath28 , @xmath34 , and @xmath35 ,",
    "there is typically fraction of stubs ( about @xmath36 , and we have checked that for larger size @xmath3 , this fraction can be even decreased ) that can not be paired in the construction process . in practice",
    "this is not much of a problem as it can easily be remedied by the following reshuffle procedure .    1 .   for stubs that are unpaired after many trials , we randomly select two of them at each step",
    ". 2 .   we randomly choose a connection already existing in the network , and simply cut it so that we get two `` new '' stubs . 3 .",
    "then we attach the two `` new '' stubs to the two selected ones to form two connections , and at the same time check if any duplicates and self - connections are produced .",
    "we accept the change if the resulting graph is simple ( has no multiple edges or self edges ) , otherwise we undo the change and go back to step 2 to make a new try .",
    "this procedure is repeatedly repeated until all the remaining stubs are paired .",
    "in addition to the graphs with the algorithm presented in this paper , we also create onion scale - free networks according to the method proposed in  @xcite , which will serve as a benchmark for comparison .",
    "in particular , we first obtain a scale - free network by procedure of the configuration model  @xcite with the same degree sequences . from this original network ,",
    "we swap pairs of randomly chosen edges if and only if such a move would increase the robustness .",
    "this is done as follows .",
    "before swapping the two randomly selected connections , we carry out @xmath37 independent attacks as will be described below .",
    "the average robustness value is called @xmath38",
    ". then we swap the neighbors of the two connections , and implement another @xmath37 independent attacks to determine the robustness of the new network @xmath39 .",
    "the swap of the neighbors is accepted only if and only if it would increase the robustness , i.e. , @xmath40 .",
    "this procedure is repeated with another randomly chosen pair of connections until no further improvement is achieved for a given large number of consecutive swaps ( the last ten thousands steps ) .    in fig .",
    "[ example ] we show a typical network generated by our algorithm .",
    "to check the efficiency of our algorithm , we attack networks generated by our algorithm and those obtained by the robustness - optimization algorithm of ref .",
    "the attack procedure proceeds by removing vertices one by one in order of the ( currently ) largest degree ( during the deletion process ) . to recalculate the degrees during the attack , rather than removing vertices by the degree of the original network ( as in ref .",
    "@xcite ) , is in line with the idea that the attacker has a relatively full picture of the system .",
    "if more is known about a specific system , one can of course model the attack procedure in greater detail .",
    "this attack - by - current - highest - degree was first proposed in ref .",
    "@xcite and proven to be more efficient  @xcite than removing vertices by initial degree . throughout this deletion process",
    "we record @xmath4 .     versus the fraction @xmath41 of removed vertices .",
    "vertices are removed according to their current degree during the removal to simulate an attack scenario where an adversary hits the fraction @xmath41 of the system s weakest points .",
    "we compare three types of model networks : the configuration model ( solid line ) , the robustness - optimized procedure ( dashed line ) , and our algorithm ( dashed - dot line ) .",
    "all networks have the same parameters as shown in fig .",
    "[ example].,title=\"fig : \" ] +    we report our simulation results in fig .",
    "[ robustness ] where the relative size @xmath42 of the largest component as a function of @xmath41 , the fraction of removed vertices .",
    "the solid , dashed , dashed - dot lines correspond , respectively , to the cases that attack is performed on scale - free networks generated by the configuration model  @xcite , by the optimization procedure of ref .",
    "@xcite , and by our algorithm .",
    "all these networks have the same sizes and degree distributions . comparing these curves",
    ", we note that the robustness - optimized networks really are more robust .",
    "furthermore , the curve for our algorithm nearly collapse with the optimized ones .",
    "this means that our algorithm can generate networks almost as robust as the optimization algorithm , but much faster .",
    "we have calculated the degree assortativity proposed by newman  @xcite  roughly the pearson correlation coefficient of the degree at either side of an edge  and found that robustness - optimized networks and our model networks are more assortative than the original configuration - model network ( not shown ) .",
    "this means that changing the mixing pattern among the vertices toward positive associativity can enhance the robustness of network against targeted attack .",
    "at the same time , assortativity and robustness are not necessarily correlated  @xcite .     as a function of ( a ) the assortativity @xmath43 , and ( b ) the ratio of the largest eigenvalue of the adjacency matrix to the second largest one of the networks @xmath44 .",
    "the plus and cross symbols are the results for @xmath45 networks generated , respectively , by the configuration model and our algorithm .",
    "@xmath46 independent degree attacks are carried out on each of them .",
    "the corresponding results for an optimized network , generated by the optimization procedure , are also shown for comparison ( the solid triangle ) .",
    "all networks have the same parameters as shown in fig .",
    "[ example].,title=\"fig : \" ] +     of vertices belonging to the largest connected cluster versus the fraction @xmath41 of removed vertices using the random attack strategy for scale - free networks generated by the configuration model ( solid line ) , and our algorithm ( dashed line ) .",
    "the two networks have the same system size @xmath35 , average degree @xmath34 , and degree sequences . the lowest and highest degrees in the networks are , respectively , @xmath47 and @xmath48 .",
    "each curve is obtained by averaging over @xmath49 independent trials.,title=\"fig : \" ] +     ( diamonds ) and assortativity coefficient @xmath43 ( circles ) as a function of @xmath31 for scale free networks generated by our algorithm  @xcite .",
    "the error bars indicate the standard errors of the robustness and assortativity calculated for @xmath45 scale - free networks .",
    "all networks have the same parameters as shown in fig .  [ percvalue ] .",
    ", title=\"fig : \" ] +    in order to understand how robustness and assortativity are correlated , we present in fig .  [ eigenvalue ] the scatter plot of the robustness @xmath1 as a function of the degree assortativity  @xcite for @xmath45 networks generated by the configuration model , and for another @xmath45 ones generated by our algorithm .",
    "one can see that the networks generated by our algorithm are always assortative ( @xmath50 ) , and they are also found to be more robust against malicious attack .",
    "it is well known that the spectral property of a network plays an important role in determining the evolution of dynamical processes , such as synchronization , random walks and diffusion , taking place on it  @xcite .",
    "usually , the principle eigenvalue are of particularly important .",
    "it has been proven that networks with large spectral gap ( the difference between the first principle eigenvalue and the second one ) are very good expanders , which also is thought to imply robustness  @xcite .",
    "the expander property of a network can by measured approximately by the ratio @xmath44 , where @xmath51 and @xmath52 here denote , respectively , the largest and the second largest eigenvalue of the adjacency matrix of the network , whose elements are ones or zeroes if the corresponding vertices are adjacent or not . to confirm the correlation between @xmath1 and @xmath44 we plot the values of these quantities in a scatter plot ( see fig .  [ eigenvalue](b ) ) .",
    "this correlation means that the conclusion from fig .",
    "[ eigenvalue](a ) also holds if we use a good expander property as robustness criterion .",
    "as described so far , our algorithm can be used to design a network with a given degree sequence that is robust against malicious attacks . to further confirm the efficiency of our algorithm",
    ", we also simulated random failure process by site percolation , on the generated scale - free networks  @xcite .",
    "the simulation results for the relative size of the largest component after a fraction @xmath41 of vertices has been randomly removed , are presented in fig .",
    "[ percvalue ] .",
    "we can see that the percolation threshold is close to one , which means that the spanning cluster persists up to nearly @xmath53 failure .",
    "this is in accordance with the results of  @xcite .",
    "finally , we show in fig .",
    "[ rvsa ] the robustness @xmath1 and the assortative coefficient @xmath43 of the scale free networks generated by our algorithm as a function of the parameter @xmath31 . for each value of @xmath31",
    ", the data are obtained from an average over @xmath45 scale - free networks , and for each network realization , @xmath37 independent attack - by - current - highest - degree processes are implemented .",
    "it is obvious that the preferential attachment mechanism among the nodes within the same layers indeed leads to robust networks than the lack of that .    from the results in figs .",
    "[ robustness]  [ rvsa ] , we conclude that robust scale - free networks with onion structures can be obtained from the very beginning and without the need of an explicit optimization .",
    "in summary , we have proposed an alternative method to generate networks that are both robust to malicious attacks and random failures . we started by generating the degree sequence of a scale - free network with prescribed power - law degree distribution . from the observation that robust networks have of onion structure  @xcite , we rank the vertices in terms of their degree , and assign a layer index to each vertex . the connection probability of two stubs is assigned to be related to the layer index difference of the two host vertices in such a way that the vertices with similar layer indices are connected with greater probability than otherwise . by means of this way , we are able to generate scale - free networks of onion structure . we validate our algorithm by testing the robustness of the obtained network against both a harmful attack , which progressively remove the vertex with largest degree in the remain network , and random failures , which is modeled by site percolation .",
    "in many systems there are different types of edges that contributes to different aspects of the system s functionality",
    "@xcite divide edges into connectivity edge and dependency edges .",
    "the former ones sustaining the primary connectivity of the system , the latter ones maintaining the functionality of the former . in the present study , we have restricted ourselves to the case where these edges coincide .",
    "an obvious further step would be to generalize the onion - structure generation to such interdependent networks .",
    "in general , interdependency can make networks more fragile  @xcite .",
    "our preliminary simulations show that this is indeed the case for both random failures and malicious attacks of our onion topologies .",
    "another issue is that an adversary typically does not have full information about the system , which would make the strategy to delete vertices by degree hard  @xcite . on the other hand , without information",
    ", one is not expected to do worse than the random failures that we simulate by percolation . to conclude , without interdependencies and with a fairly good knowledge of the graph , which is indeed the case to several vital infrastructures , onion networks are the best bet for constructing a network with a broad degree distribution that is robust to both errors and attacks .",
    "a. fabrikant , e. koutsoupias , c. h. papadimitriou , in _ proceedings of the 29th international conference on automata , languages , and programming _ , lecture notes in computer science * 2380 * ( springer , heidelberg ) , 110 ( 2002 ) .                      that we do nt see the eventual decrease of @xmath1 in the limit of large @xmath31 in fig .",
    "[ rvsa ] is attributed to the scale free networks we treated are somewhat  dense \" .",
    "if  sparser \" networks ( e.g. , with average degree 2.8 , rather than 4.75 ) were considered , @xmath1 indeed displays a decline for sufficiently large @xmath31 due to the fast fragmentation of the networks after removing just a few of nodes with highest degrees ( results not shown ) ."
  ],
  "abstract_text": [
    "<S> in a recent work [ proc . natl . acad . </S>",
    "<S> sci . u.s.a . * 108 * , 3838 ( 2011 ) ] , schneider _ et al . _ </S>",
    "<S> proposed a new measure for network robustness and investigated optimal networks with respect to this quantity . for networks with a power - law degree distribution , </S>",
    "<S> the optimized networks have an onion structure  high - degree vertices forming a core with radially decreasing degrees and an overrepresentation of edges within the same radial layer . in this paper </S>",
    "<S> we relate the onion structure to graphs with good expander properties ( another characterization of robust network ) and argue that networks of skewed degree distributions with large spectral gaps ( and thus good expander properties ) are typically onionly structured . </S>",
    "<S> furthermore , we propose a generative algorithm producing synthetic scale - free networks with onion structure , circumventing the optimization procedure of schneider _ et al . </S>",
    "<S> _ we validate the robustness of our generated networks against malicious attacks and random removals . </S>"
  ]
}
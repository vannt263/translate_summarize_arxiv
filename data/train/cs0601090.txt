{
  "article_text": [
    "in this work , we consider a family of codes that are based on expander graphs .",
    "the notion of graph codes was introduced by tanner in  @xcite .",
    "later , the explicit constructions of ramanujan expander graphs due to lubotsky , philips , and sarnak  ( * ? ? ?",
    "* chapter  4 ) , @xcite and margulis  @xcite , were used by alon _",
    "_ in  @xcite as building blocks to obtain new polynomial - time constructions of asymptotically good codes in the low - rate range ( by `` asymptotically good codes '' we mean codes whose rate and relative minimum distance are both bounded away from zero ) .",
    "expander graphs were used then by sipser and spielman in  @xcite to present polynomial - time constructions of asymptotically good codes that can be decoded in time complexity which is linear in the code length . by combining ideas from  @xcite and  @xcite , spielman provided in  @xcite an asymptotically good construction where both the decoding and encoding time complexities were linear in the code length .    while the linear - time decoder of the sipser - spielman construction was guaranteed to correct a number of errors that is a positive fraction of the code length , that fraction was significantly smaller than what one could attain by bounded - distance decoding ",
    "namely , decoding up to half the minimum distance of the code .",
    "the guaranteed fraction of linear - time correctable errors was substantially improved by zmor in  @xcite . in his analysis",
    ", zmor considered the special ( yet abundant ) case of the sipser - spielman construction where the underlying ramanujan graph is bipartite , and presented a linear - time iterative decoder where the correctable fraction was @xmath0 of the relative minimum distance of the code .",
    "an additional improvement by a factor of two , which brought the ( linear - time correctable ) fraction to be essentially equal to that of bounded - distance decoding , was then achieved by the authors of this paper in  @xcite , where the iterative decoder of zmor was enhanced through a technique akin to generalized minimum distance ( gmd ) decoding  @xcite , @xcite .    in  @xcite ,",
    "guruswami and indyk used zmor s construction as a building block and combined it with methods from  @xcite , @xcite , and  @xcite to suggest a code construction with the following three properties :    the construction is nearly - mds : it yields for every designed rate @xmath1 $ ] and sufficiently small @xmath2 an infinite family of codes of rate at least @xmath3 over an alphabet of size @xmath4 and the relative minimum distance of the codes is greater than @xmath5    the construction is linear - time encodable , and the time complexity per symbol is @xmath6 ( i.e. , this complexity grows polynomially with @xmath7 ) .",
    "the construction has a linear - time decoder which is essentially a bounded - distance decoder : the correctable number of errors is at least a fraction @xmath8 of the code length .",
    "the time complexity per symbol of the decoder is also @xmath6 .",
    "in fact , the decoder described by guruswami and indyk in  @xcite is more general in that it can handle a combination of errors and erasures .",
    "thus , by using their codes as an outer code in a concatenated construction , one obtains a linear - time encodable code that attains the zyablov bound  @xcite , with a linear - time bounded - distance decoder .",
    "alternatively , such a concatenated construction approaches the capacity of any given memoryless channel : if the inner code is taken to have the smallest decoding error exponent , then the overall decoding error probability behaves like forney s error exponent  @xcite , @xcite ( the time complexity of searching for the inner code , in turn , depends on @xmath9 , yet not on the overall length of the concatenated code ) .",
    "codes with similar attributes , both with respect to the zyablov bound and to the capacity of memoryless channels , were presented also by barg and zmor in a sequence of papers  @xcite , @xcite , @xcite ( yet in their constructions , only the decoding is guaranteed to be linear - time ) .    in this work",
    ", we present a family of codes which improves on the guruswami - indyk construction . specifically , our codes will satisfy properties ( p1)(p3 ) , except that the alphabet size in property  ( p1 ) will now be only @xmath10 the basic ingredients of our construction are similar to those used in  @xcite ( and also in  @xcite and  @xcite ) , yet their layout ( in particular , the order of application of the various building blocks ) , and",
    "the choice of parameters will be different .",
    "our presentation will be split into two parts .",
    "we first describe in section  [ sec : firstconstruction ] a construction that satisfies only the two properties  ( p1 ) and  ( p3 ) over an alphabet of size  ( [ eq : alphabetsize ] ) .",
    "these two properties will be proved in sections  [ sec : boundsonparameters ] and  [ sec : decoding ] .",
    "we also show that the codes studied by barg and zmor in  @xcite and  @xcite can be seen as concatenated codes , with our codes serving as the outer codes .",
    "the second part of our presentation consists of section  [ sec : lineartimeencoding ] , where we modify the construction of section  [ sec : firstconstruction ] and use the resulting code as a building block in a second construction , which satisfies property  ( p2 ) as well .",
    "let @xmath11 be a bipartite @xmath12-regular undirected connected graph with a vertex set @xmath13 such that @xmath14 , and an edge set @xmath15 such that every edge in @xmath15 has one endpoint in @xmath16 and one endpoint in @xmath17 .",
    "we denote the size of @xmath16 by @xmath18 ( clearly , @xmath18 is also the size of @xmath17 ) and we will assume hereafter without any practical loss of generality that @xmath19 .",
    "for every vertex @xmath20 , we denote by @xmath21 the set of edges that are incident with @xmath22 .",
    "we assume an ordering on @xmath23 , thereby inducing an ordering on the edges of @xmath21 for every @xmath20 . for an alphabet @xmath24 and a word @xmath25 ( whose",
    "entries are indexed by @xmath15 ) in @xmath26 , we denote by @xmath27 the sub - block of @xmath28 that is indexed by @xmath21 .",
    "let @xmath24 be the field @xmath29 and let @xmath30 and @xmath31 be linear @xmath32 $ ] and @xmath33 $ ] codes over @xmath24 , respectively .",
    "we define the code @xmath34 as the following linear code of length @xmath35 over @xmath24 : @xmath36 { } \\\\ & & \\textrm{and $ ( { { \\mbox{\\boldmath $ c$}}})_{\\!\\scriptscriptstyle e(v ) } \\in { { \\mathcal{c}}}''$ for every $ v \\in v''$ } \\bigr\\}\\end{aligned}\\ ] ] ( @xmath37 is the primary code considered by barg and zmor in  @xcite ) .",
    "let @xmath38 be the alphabet @xmath39 .",
    "fix some linear one - to - one mapping @xmath40 over @xmath24 , and let the mapping @xmath41 be given by @xmath42 that is , the entries of @xmath43 are indexed by @xmath16 , and the entry that is indexed by @xmath44 equals @xmath45 .",
    "we now define the code @xmath46 of length @xmath18 over @xmath38 by @xmath47 every codeword @xmath48 of @xmath46 ( with entries @xmath49 in @xmath38 ) is associated with a unique codeword @xmath50 such that @xmath51    based on the definition of @xmath46 , the code @xmath37 can be represented as a concatenated code with an inner code @xmath30 over @xmath24 and an outer code @xmath46 over @xmath38 .",
    "it is possible , however , to use @xmath46 as an outer code with inner codes other than @xmath30 . along these lines ,",
    "the codes studied in  @xcite and  @xcite can be represented as concatenated codes with @xmath46 as an outer code , whereas the inner codes are taken over a sub - field of @xmath24 .",
    "let @xmath52 , @xmath38 , and @xmath46 be as defined in section  [ sec : firstconstruction ] .",
    "it was shown in  @xcite that the rate of @xmath37 is at least @xmath53 . from the fact that @xmath37 is a concatenated code with an inner code @xmath30 and an outer code @xmath46",
    ", it follows that the rate of @xmath46 is bounded from below by @xmath54 in particular , the rate approaches @xmath3 when @xmath55 .",
    "we next turn to computing a lower bound on the relative minimum distance of @xmath46 . by applying this lower bound",
    ", we will then verify that @xmath46 satisfies property  ( p1 ) .",
    "our analysis is based on that in  @xcite , and we obtain here an improvement over a bound that can be inferred from  @xcite ; we will need that improvement to get the reduction of the alphabet size from  ( [ eq : gialphabetsize ] ) to  ( [ eq : alphabetsize ] ) .",
    "we first introduce several notations .",
    "denote by @xmath56 the adjacency matrix of @xmath57 ; namely , @xmath56 , is a @xmath58 real symmetric matrix whose rows and columns are indexed by the set @xmath23 , and for every @xmath59 , the entry in @xmath56 that is indexed by @xmath60 is given by @xmath61 it is known that @xmath12 is the largest eigenvalue of @xmath56 .",
    "we denote by @xmath62 the ratio between the second largest eigenvalue of @xmath56 and @xmath12 ( this ratio is less than @xmath63 when @xmath57 is connected and is nonnegative when @xmath19 ; see  ( * ? ? ?",
    "* propositions  1.1.2 and  1.1.4 ) ) .",
    "when @xmath57 is taken from a sequence of ramanujan expander graphs with constant degree @xmath12 , such as the lps graphs in  @xcite , we have @xmath64    for a nonempty subset @xmath65 of the vertex set @xmath23 of @xmath57 , we will use the notation @xmath66 to stand for the subgraph of @xmath57 that is induced by @xmath65 : the vertex set of @xmath66 is given by @xmath65 , and its edge set consists of all the edges in @xmath57 that have each of their endpoints in @xmath65 .",
    "the degree of @xmath22 in @xmath66 , which is the number of adjacent vertices to @xmath22 in @xmath66 , will be denoted by @xmath67 .",
    "[ thm : min_dist ] the relative minimum distance of the code @xmath46 is bounded from below by @xmath68 in particular , this lower bound approaches @xmath69 when @xmath70 .",
    "the proof of the theorem will make use of proposition  [ prop : alonchung ] below , which is an improvement on corollary  9.2.5 in alon and spencer  @xcite for bipartite graphs , and is also an improvement on lemma  4 in zmor  @xcite .",
    "we will need the following technical lemma for that proposition .",
    "the proof of this lemma can be found in appendix  [ app : a ] .",
    "denote by @xmath71 the set of vertices that are adjacent to vertex @xmath22 in @xmath57 .",
    "[ lemma : alonchung ] let @xmath72 be a real function on the vertices of @xmath57 where the images of @xmath72 are restricted to the interval @xmath73 $ ] . write @xmath74 then @xmath75    ( comparing to the results in  @xcite , lemma 4 therein is stated for the special case where the images of @xmath72 are either @xmath76 or @xmath63 .",
    "our first inequality in lemma  [ lemma : alonchung ] yields a bound which is always at least as tight as lemma 4 in  @xcite . )",
    "[ prop : alonchung ] let @xmath77 and @xmath78 be subsets of sizes @xmath79 and @xmath80 , respectively , such that @xmath81 .",
    "then the sum of the degrees in the graph @xmath82 is bounded from above by @xmath83    _ proof : _ we select @xmath84 in lemma  [ lemma : alonchung ] to be @xmath85 on the one hand , by lemma  [ lemma : alonchung ] , @xmath86 on the other hand , @xmath87 these two equations yield the desired result .",
    "_ proof of theorem  [ thm : min_dist ] : _ first , it is easy to see that @xmath46 is a linear subspace over @xmath24 and , as such , it is an abelian subgroup of @xmath88 .",
    "thus , the minimum distance of @xmath46 equals the minimum weight ( over @xmath38 ) of any nonzero codeword of @xmath46 .",
    "pick any nonzero codeword @xmath89 , and let @xmath90 be the unique codeword in @xmath37 such that @xmath91 .",
    "denote by @xmath92 the support of @xmath93 ( over @xmath24 ) , i.e. , @xmath94 let @xmath65 ( respectively , @xmath95 ) be the set of all vertices in @xmath16 ( respectively , @xmath17 ) that are endpoints of edges in @xmath96 .",
    "in particular , @xmath65 is the support of the codeword @xmath97 .",
    "let @xmath98 and @xmath99 denote the ratios @xmath100 and @xmath101 , respectively , and consider the subgraph @xmath102 of @xmath57 . since the minimum distance of @xmath30 is @xmath103 , the degree in @xmath104 of every vertex in @xmath16 is at least @xmath103 .",
    "therefore , the number of edges in @xmath104 satisfies @xmath105 similarly , the degree in @xmath104 of every vertex in @xmath17 is at least @xmath106 and , thus , @xmath107 therefore , @xmath108 on the other hand , @xmath104 is a subgraph of @xmath82 ; hence , by proposition  [ prop : alonchung ] , @xmath109 combining the last two equations yields @xmath110 we now distinguish between two cases .",
    "_ case 1 : @xmath111 .",
    "_ here  ( [ eq : y ] ) becomes @xmath112 and , so , @xmath113    _ case 2 : @xmath114 .",
    "_ by exchanging between @xmath98 and @xmath99 and between @xmath115 and @xmath69 in  ( [ eq : sigma_1 ] ) , we get @xmath116 therefore , @xmath117    either case yields the desired lower bound on the size , @xmath118 , of the support @xmath65 of @xmath97 .",
    "the next example demonstrates how the parameters of @xmath46 can be tuned so that the improvement  ( [ eq : alphabetsize ] ) of property  ( p1 ) holds .",
    "[ ex : epsilon^3 ] fix @xmath119 for some small @xmath120 $ ] ( in which case @xmath121 ) , and then select @xmath122 and @xmath12 so that @xmath123 . for such parameters , we can take @xmath30 and @xmath31 to be generalized reed - solomon ( grs ) codes over @xmath24 .",
    "we also assume that @xmath57 is a ramanujan bipartite graph , in which case @xmath124 by  ( [ eq : rate_bnd ] ) , the rate of @xmath46 is bounded from below by @xmath125 and by theorem  [ thm : min_dist ] , the relative minimum distance is at least @xmath126 thus , the code @xmath46 approaches the singleton bound when @xmath127 .",
    "in addition , if @xmath122 and @xmath12 are selected to be ( no larger than ) @xmath128 , then the alphabet @xmath38 has size @xmath129    from example  [ ex : epsilon^3 ] we can state the following corollary .",
    "[ cor : alph - size ] for any designed rate @xmath130 $ ] and sufficiently small @xmath2 there is an infinite family of codes @xmath46 of rate at least @xmath3 and relative minimum distance greater than @xmath131 , over an alphabet of size as in  ( [ eq : alphabetsize ] ) .",
    "let @xmath132 be defined over @xmath133 as in section  [ sec : firstconstruction ] .",
    "figure  [ fig : decoder ] presents an adaptation of the iterative decoder of sipser and spielman  @xcite and zmor  @xcite to the code @xmath46 , with the additional feature of handling erasures ( as well as errors over @xmath38 ) : as we show in theorem  [ thm : main ] below , the algorithm corrects any pattern of @xmath134 errors and @xmath135 erasures , provided that @xmath136 , where @xmath137 note that @xmath138 equals approximately half the lower bound in theorem  [ thm : min_dist ] .",
    "the value of @xmath139 in the algorithm , which is specified in theorem  [ thm : main ] below , grows logarithmically with @xmath18 .",
    "received word @xmath140 in @xmath141 .",
    "for @xmath44 do : @xmath142 .    for @xmath143",
    "do :    if @xmath144 is odd then @xmath145 and @xmath146 , else @xmath147 and @xmath148 .    for every @xmath149 do : @xmath150 .",
    "@xmath151 if @xmath152 ( and declare ` error ' otherwise ) .",
    "we use the notation `` @xmath153 '' to stand for an erasure .",
    "the algorithm in figure  [ fig : decoder ] makes use of a word @xmath25 over @xmath154 that is initialized according to the contents of the received word @xmath155 as follows .",
    "each sub - block @xmath27 that corresponds to a non - erased entry @xmath156 of @xmath155 is initialized to the codeword @xmath157 of @xmath30 .",
    "the remaining sub - blocks @xmath27 are initialized as erased words of length @xmath12 .",
    "iterations @xmath158 use an error - correcting decoder @xmath159 that recovers correctly any pattern of less than @xmath160 errors ( over @xmath24 ) , and iterations @xmath161 use a combined error - erasure decoder @xmath162 that recovers correctly any pattern of @xmath163 errors and @xmath164 erasures , provided that @xmath165 ( @xmath164 will be positive only when @xmath166 ) .    [ thm : main ]",
    "suppose that @xmath167 and fix @xmath98 to be a positive real number such that @xmath168 if @xmath169 then the decoder in figure  [ fig : decoder ] recovers correctly any pattern of @xmath134 errors ( over @xmath38 ) and @xmath135 erasures , provided that @xmath170    the proof of the theorem makes use of the following lemma .",
    "[ lemma : sqrt_st ] let @xmath72 , @xmath98 , and @xmath99 be as in lemma  [ lemma : alonchung ] , and suppose that the restriction of @xmath72 to @xmath17 is not identically zero and that @xmath171 .",
    "let @xmath69 be a real number for which the following condition is satisfied for every @xmath172 : @xmath173 then @xmath174    the proof of lemma  [ lemma : sqrt_st ] can be found in appendix  [ app : a ] .",
    "this lemma implies an upper bound on @xmath99 , in terms of @xmath98 ; it can be verified that this bound is always at least as tight as lemma  5 in  @xcite .",
    "_ proof of theorem  [ thm : main ] : _ for @xmath175 , let @xmath176 be the value of the set @xmath177 at the end of iteration @xmath144 in figure  [ fig : decoder ] , and let @xmath178 be the set of all vertices @xmath179 such that @xmath180 is in error at the end of that iteration .",
    "let @xmath181 be the function @xmath182 and , for @xmath175 define the function @xmath183 recursively by @xmath184 where @xmath185",
    ".    denote @xmath186 obviously , @xmath187 and , so , by  ( [ eq : maincondition ] ) we have @xmath188 .",
    "let @xmath189 be the smallest positive integer ( possibly @xmath190 ) such that @xmath191 .",
    "since both @xmath192 and @xmath193 are bounded - distance decoders , a vertex @xmath194 can belong to @xmath178 for even @xmath175 , only if the sum @xmath195 ( which equals the sum @xmath196 ) is at least @xmath197 .",
    "similarly , a vertex @xmath194 belongs to @xmath178 for odd @xmath198 , only if @xmath199 .",
    "it follows that the function @xmath200 satisfies the conditions of lemma  [ lemma : sqrt_st ] ( with @xmath115 taken instead of @xmath69 for odd @xmath144 ) and , so , @xmath201 using the condition @xmath202 , it can be verified by induction on @xmath175 that @xmath203 hence , for every @xmath204 , @xmath205 in particular , @xmath206 for odd @xmath144 and @xmath207 for even @xmath144 . incorporating these inequalities into  ( [ eq : sigma_ratio ] ) yields @xmath208 and",
    "@xmath209    by combining  ( [ eq : ratio_sigma_2even ] ) and  ( [ eq : ratio_sigma_2odd ] ) we get that for even @xmath210 , @xmath211 { } \\\\ & \\ge & \\frac{\\delta}{2 \\gamma_{{\\mathcal{g}}}\\sqrt{\\sigma_{i-1 } } } - \\frac{1{-}\\gamma_{{\\mathcal{g}}}}{\\gamma_{{\\mathcal{g } } } } \\sqrt{\\sigma }   \\ ; , \\end{aligned}\\ ] ] or @xmath212 where the second inequality follows from @xmath213 ( see  ( [ eq : sigmas - ratio ] ) ) , and the ( last ) equality follows from the next chain of equalities : @xmath214 { } \\\\ & = &   \\frac{1{-}\\gamma_{{\\mathcal{g}}}}{2 \\gamma_{{\\mathcal{g}}}^2 } \\left ( 2\\gamma_{{\\mathcal{g}}}+ \\sqrt{\\theta\\delta } \\right ) \\sqrt{\\frac{\\sigma \\theta}{\\delta } } \\\\ & = & - \\frac{1{-}\\gamma_{{\\mathcal{g}}}}{2 \\gamma_{{\\mathcal{g}}}^2 } \\cdot \\frac { 4 \\gamma_{{\\mathcal{g}}}^2     - \\theta \\delta } { \\sqrt{\\theta\\delta } - 2\\gamma_{{\\mathcal{g } } } } \\sqrt{\\frac{\\sigma \\theta}{\\delta } } \\\\ & = & - \\left ( 1- \\frac{\\theta \\delta}{4 \\gamma_{{\\mathcal{g}}}^2 } \\right )   \\frac{(1{-}\\gamma_{{\\mathcal{g } } } ) \\sqrt{\\sigma } } { ( \\delta/2 ) - \\gamma_{{\\mathcal{g}}}\\sqrt{\\delta/\\theta } } \\\\ & = & - \\left ( 1- \\frac{\\theta \\delta}{4 \\gamma_{{\\mathcal{g}}}^2 } \\right )   \\frac{\\sqrt{\\sigma } } { \\beta } \\ ; . \\end{aligned}\\ ] ]    consider the following first - order linear recurring sequence @xmath215 that satisfies @xmath216 where @xmath217 . from  ( [ eq : sigma - i+1 ] ) we have @xmath218 for even @xmath219 . by solving the recurrence for @xmath220",
    ", we obtain @xmath221    from the condition  ( [ eq : exponentbase ] ) we thus get that @xmath222 decreases exponentially with ( even ) @xmath144 . a sufficient condition for ending the decoding correctly after @xmath139 iterations",
    "is having @xmath223 , or @xmath224 we require therefore that @xmath139 be such that @xmath225 the latter inequality can be rewritten as @xmath226 thus yielding @xmath227 where the base of the logarithm equals @xmath228 . in summary",
    ", the decoding will end with the correct codeword after @xmath229 iterations ( where the base of the logarithm again equals @xmath228 . )    in lemma  [ lemma : complexity ] , which appears in appendix  [ app : b ] , it is shown that the number of actual applications of the decoders @xmath192 and @xmath193 in the algorithm in figure  [ fig : decoder ] can be bounded from above by @xmath230 , where @xmath231 thus , if @xmath115 and @xmath69 are fixed and the ratio @xmath232 is bounded away from @xmath63 and @xmath57 is a ramanujan graph , then the value of @xmath233 is bounded from above by an absolute constant ( independent of  @xmath12 ) .    the algorithm in figure",
    "[ fig : decoder ] allows us to use gmd decoding in cases where @xmath46 is used as an outer code in a concatenated code .",
    "in such a concatenated code , the size of the inner code is @xmath234 and , thus , it does not grow with the length @xmath18 of @xmath46 .",
    "a gmd decoder will apply the algorithm in figure  [ fig : decoder ] a number of times that is proportional to the minimum distance of the inner code .",
    "thus , if the inner code has rate that is bounded away from zero , then the gmd decoder will have time complexity that grows linearly with the overall code length .",
    "furthermore , if @xmath30 , @xmath31 , and the inner code are codes that have a polynomial - time bounded - distance decoder  e.g .",
    ", if they are grs codes  then the multiplying constant in the linear expression of the time complexity ( when measured in operations in @xmath24 ) is @xmath235 . for the choice of parameters in example  [ ex : epsilon^3 ] , this constant is @xmath6 and , since @xmath24 is chosen in that example to have size @xmath128 , each operation in @xmath24 can in turn be implemented by @xmath236 bit operations .",
    "( we remark that in all our complexity estimates , we assume that the graph @xmath57 is `` hard - wired '' so that we can ignore the complexity of figuring out the set of incident edges of a given vertex in @xmath57 . along these lines , we assume that each access to an entry takes constant time , even though the length of the index of that entry may grow logarithmically with the code length .",
    "see the discussion in  ( * ? ? ?",
    "* section  ii ) . )    when the inner code is taken as @xmath30 , the concatenation results in the code @xmath132 ( of length @xmath237 ) over @xmath24 , and the ( linear - time ) correctable fraction of errors is then the product @xmath238 , for any positive real @xmath98 that satisfies  ( [ eq : main ] ) .",
    "a special case of this result , for @xmath239 and @xmath240 , was presented in our earlier work  @xcite , yet the analysis therein was different .",
    "a linear - time decoder for @xmath37 was also presented by barg and zmor in  @xcite , except that their decoder requires finding a codeword that minimizes some weighted distance function , and we are unaware of a method that performs this task in time complexity that is @xmath235even when @xmath30 and @xmath31 have a polynomial - time bounded - distance decoder .",
    "in this section , we use the construction @xmath46 of section  [ sec : firstconstruction ] as a building block in obtaining a second construction , which satisfies all properties ( p1)(p3 ) over an alphabet whose size is given by  ( [ eq : alphabetsize ] ) .",
    "let @xmath132 be defined over @xmath133 as in section  [ sec : firstconstruction ] .",
    "the first simple observation that provides the intuition behind the upcoming construction is that the encoding of @xmath37 , and hence of @xmath46 , can be easily implemented in linear time if the code @xmath30 has rate @xmath241 , in which case @xmath242 .",
    "the definition of @xmath37 then reduces to @xmath243 we can implement an encoder of @xmath37 as follows . let @xmath244 be some one - to - one encoding mapping of @xmath31 .",
    "given an information word @xmath245 in @xmath246 , it is first recast into a word of length @xmath18 over @xmath247 by sub - dividing it into sub - blocks @xmath248 that are indexed by @xmath172 ; then a codeword @xmath50 is computed by @xmath249 by selecting @xmath250 in  ( [ eq : psi ] ) as the identity mapping , we get that the respective codeword @xmath251 in @xmath46 is @xmath252 thus , each of the @xmath12 entries ( over @xmath24 ) of the sub - block @xmath49 can be associated with a vertex @xmath253 , and the value assigned to that entry is equal to one of the entries in @xmath254 .",
    "while having @xmath255 allows easy encoding , the minimum distance of the resulting code @xmath46 is obviously poor . to resolve this problem , we insert into the construction another linear @xmath256 $ ] code @xmath257 over @xmath24 .",
    "let @xmath258 be some @xmath259 parity - check matrix of @xmath257 and for a vector @xmath260 , denote by @xmath261 the following coset of @xmath257 within @xmath38 : @xmath262 fix now a list of vectors @xmath263 where @xmath264 , and define the subset @xmath265 of @xmath37 by @xmath266 accordingly , define the subset @xmath267 of @xmath46 by @xmath268 now , if @xmath269 is all - zero , then @xmath265 coincides with the code @xmath270 ; otherwise , @xmath265 is either empty or is a coset of @xmath271 , where @xmath271 is regarded as a linear subspace of @xmath37 over @xmath24 . from this observation",
    "we conclude that the lower bound in theorem  [ thm : min_dist ] applies to any nonempty subset @xmath267 , except that we need to replace @xmath115 by @xmath272 .",
    "in addition , a simple modification in the algorithm in figure  [ fig : decoder ] adapts it to decode @xmath267 so that theorem  [ thm : main ] holds ( again under the change @xmath273 ) : during odd iterations @xmath144 , we apply to each sub - block @xmath27 a bounded - distance decoder of @xmath274 , instead of the decoder @xmath192 .    therefore , our strategy in designing the linear - time encodable codes will be as follows . the raw data",
    "will first be encoded into a codeword @xmath93 of @xmath37 ( where @xmath275 ) .",
    "then we compute the @xmath18 vectors @xmath276 and produce the list @xmath263 ; clearly , @xmath93 belongs to @xmath265 .",
    "the list @xmath269 will then undergo additional encoding stages , and the result will be merged with @xmath43 to produce the final codeword .",
    "the parameters of @xmath257 , which determine the size of @xmath269 , will be chosen so that the overhead due to @xmath269 will be negligible .    during decoding , @xmath269 will be recovered first , and then we will apply the aforementioned adaptation to @xmath267 of the decoder in figure  [ fig : decoder ] , to reconstruct the information word @xmath245 .",
    "we now describe the construction in more detail .",
    "we let @xmath24 be the field @xmath29 and @xmath277 and @xmath278 be positive integers .",
    "the construction makes use of two bipartite regular graphs , @xmath279 of degrees @xmath277 and @xmath278 , respectively .",
    "both graphs have the same number of vertices ; in fact , we are making a stronger assumption whereby both graphs are defined over the same set of vertices .",
    "we denote by @xmath18 the size of @xmath16 ( or @xmath17 ) and by @xmath280 and @xmath281 the alphabets @xmath282 and @xmath283 , respectively .",
    "the notations @xmath284 and @xmath285 will stand for the sets of edges that are incident with a vertex @xmath22 in @xmath286 and @xmath287 , respectively .      * a linear @xmath288 $ ] code @xmath257 over @xmath24 ; * a linear @xmath289 $ ] code @xmath290 over @xmath24 ; * a linear @xmath291 $ ] code @xmath292 over @xmath24 ; * a code @xmath293 of length @xmath18 and rate @xmath294 over the alphabet @xmath295 .      1 .   its rate is bounded away from zero : there is a universal positive constant @xmath297 such that @xmath298 .",
    "@xmath293 is linear - time encodable , and the encoding time per symbol is @xmath299 .",
    "3 .   @xmath293 has a decoder that recovers in linear - time any pattern of up to @xmath300 errors ( over the alphabet @xmath301 ) , where @xmath302 is a universal positive constant .",
    "the time complexity per symbol of the decoder is @xmath299 .",
    "( by a universal constant we mean a value that does not depend on any other parameter , not even on the size of @xmath301 . ) for example , we can select as @xmath293 the code of spielman in  @xcite , in which case @xmath297 can be taken as @xmath0 .",
    "based on these ingredients , we introduce the codes @xmath303 over @xmath24 .",
    "the code @xmath304 will play the role of the code @xmath37 as outlined in section  [ sec : outline ] , whereas the codes @xmath293 and @xmath305 will be utilized for the encoding of the list @xmath269 that was described there .    the overall construction , which we denote by @xmath306 ,",
    "is now defined as the set of all words of length @xmath18 over the alphabet @xmath307 that are obtained by applying the encoding algorithm in figure  [ fig : encoder ] to information words @xmath245 of length @xmath18 over @xmath308 . a schematic diagram of the algorithm is shown in figure  [ fig : schematicdiagram ] .",
    "( in this algorithm , we use a notational convention whereby entries of information words @xmath245 are indexed by @xmath17 , and so are codewords of @xmath293 . )                                                    ( 170,000 ) ( 000,160)(0,-20)5 ( 000,040)(0,-20)2 ( 000,050)(0,0)@xmath325 ( 215,200)(0,0)*step  ( e3 ) * ( 170,205)(0,-1)10 ( 174,010 ) ( 000,155)(10,10)[tr ] ( 005,085)(0,1)70 ( 010,085)(10,10)[bl ] ( 010,075)(10,10)[tl ] ( 005,075)(0,-1)70 ( 000,005)(10,10)[br ] ( 184,090)(1,0)11 ( 187,095)(0,0)[b]@xmath269 ( 195,070 )          from the discussion in section  [ sec : outline ] and from the assumption on the code @xmath293 it readily follows that the encoder in figure  [ fig : encoder ] can be implemented in linear time , where the encoding complexity per symbol ( when measured in operations in @xmath24 ) is @xmath326 .",
    "the rate of @xmath306 is also easy to compute : the encoder in figure  [ fig : encoder ] maps , in a one - to - one manner , an information word of length @xmath18 over an alphabet of size @xmath327 , into a codeword of length @xmath18 over an alphabet @xmath38 of size @xmath328 .",
    "thus , the rate of @xmath306 is @xmath329        we will select the parameters of @xmath306 quite similarly to example  [ ex : epsilon^3 ] .",
    "we assume that the rates @xmath330 and @xmath331 of @xmath290 and @xmath292 are the same and are equal to some prescribed value @xmath3 , and define @xmath332 ( notice that @xmath333 can be bounded from above by a universal constant that does not depend on @xmath3 , e.g. , by @xmath334 ) .",
    "we set @xmath335 for some positive @xmath336 ( in which case @xmath337 ) , and then select @xmath122 , @xmath277 , and @xmath278 so that @xmath338 and @xmath339 yet we also assume that @xmath122 is ( no larger than ) @xmath128 .",
    "the graphs @xmath286 and @xmath287 are taken as ramanujan graphs and @xmath257 , @xmath290 , and @xmath292 are taken as grs codes over @xmath24 .",
    "( requiring that both @xmath277 and @xmath278 be valid degrees of ramanujan graphs imposes some restrictions on the value @xmath340 .",
    "these restrictions can be satisfied by tuning the precise rate of @xmath293 last . )",
    "given this choice of parameters , we obtain from  ( [ eq : delta2 ] ) that @xmath341 and , so , the rate  ( [ eq : rate2 ] ) of @xmath306 is greater than @xmath342 the alphabet size of @xmath306 is @xmath343 as in  ( [ eq : alphabetsize ] ) , where we have absorbed into the @xmath344 term the constants @xmath297 and @xmath302 .",
    "our next step in the analysis of the code @xmath306 consists of showing that there exists a linear - time decoder which recovers correctly any pattern of @xmath134 errors and @xmath135 erasures , provided that @xmath345 this , in turn , will also imply that the relative minimum distance of @xmath306 is greater than @xmath346 , thus establishing with  ( [ eq : rate_bnd2 ] ) the fact that @xmath306 is nearly - mds .",
    "let @xmath48 be the transmitted codeword of @xmath306 , where @xmath347 and let @xmath140 be the received word ; each entry @xmath156 takes the form @xmath348 , where @xmath349 and @xmath350 .",
    "consider the application of the algorithm in figure  [ fig : decoder2 ] to @xmath155 , assuming that @xmath155 contains @xmath134 errors and @xmath135 erasures , where @xmath351 .",
    "the role of step  ( d2 ) is to compute a word @xmath361 that is close to the codeword @xmath317 of @xmath293 , which was generated in step  ( e3 ) of figure  [ fig : encoder ] .",
    "step  ( d2 ) uses the inverse of the encoder @xmath362 ( which was used in step  ( e4 ) ) and also a combined error - erasure decoder @xmath363 that recovers correctly any pattern of @xmath163 errors ( over @xmath24 ) and @xmath164 erasures , provided that @xmath364 .",
    "the next lemma provides an upper bound on the hamming distance between @xmath317 and @xmath365 ( as words of length @xmath18 over @xmath301 ) .      _",
    "proof : _ define the function @xmath366 by @xmath367 assuming that @xmath368 , this function satisfies the conditions of lemma  [ lemma : sqrt_st ] with respect to the graph @xmath287 , where @xmath118 equals @xmath369 and @xmath370 equals the number of vertices @xmath172 such that @xmath371 . by that lemma we get @xmath372 where @xmath373 stands for @xmath374 and the last inequality follows from  ( [ eq : decode0 ] ) .",
    "now , by  ( [ eq : delta2 ] ) we have @xmath375 from which we get the following upper bound on the square of @xmath373 : @xmath376 combining this bound with  ( [ eq : decode ] ) yields @xmath377 namely , @xmath378 .",
    "it follows from lemma  [ lemma : decode ] that step  ( d2 ) reduces the number of errors in @xmath365 to the extent that allows a linear - time decoder of @xmath293 to fully recover the errors in @xmath365 in step  ( d3 ) .",
    "hence , the list @xmath379 , which is computed in step  ( d3 ) , is identical with the list @xmath269 that was originally encoded in step  ( e2 ) .    finally , to show that step  ( d4 ) yields complete recovery from errors , we apply theorem  [ thm : main ] to the parameters of the code @xmath380 . here @xmath335 and @xmath381 therefore , @xmath382 and , so , by  ( [ eq : decode0 ] ) , the conditions of theorem  [ thm : main ] hold for @xmath383 ( note that @xmath384 yields @xmath385 , thus  ( [ eq : exponentbase ] ) holds ) .        given a bipartite graph @xmath11 , we associate with @xmath57 a @xmath386 real matrix @xmath387 whose",
    "rows and columns are indexed by @xmath16 and @xmath17 , respectively , and @xmath388 if and only if @xmath389 . with a proper ordering on @xmath390 ,",
    "the matrix @xmath387 is related to the adjacency matrix of @xmath57 by @xmath391    [ lemma : eigenvalues_xx ] let @xmath11 be a bipartite @xmath12-regular graph where @xmath392 . then @xmath393 is the largest eigenvalue of the ( symmetric ) matrix @xmath394 and the all - one vector @xmath395 is a corresponding eigenvector .",
    "the second largest eigenvalue of @xmath394 is @xmath396 .",
    "we conclude that @xmath399 is an eigenvalue of @xmath56 if and only if @xmath401 is an eigenvalue @xmath394 ; furthermore , when @xmath402 , both these eigenvalues have the same multiplicities in their respective matrices .",
    "the result readily follows .",
    "[ lemma:1 ] let @xmath11 be a bipartite @xmath12-regular graph where @xmath408 and let @xmath409 and @xmath410 be two column vectors in @xmath411",
    ". denote by @xmath98 and @xmath99 the averages @xmath412 and let the column vectors @xmath155 and @xmath28 in @xmath411 be given by @xmath413 define the vector @xmath414 by @xmath415 then , @xmath416    _ proof : _ first , it is easy to see that @xmath417 and that @xmath418 ; these equalities , in turn , yield the relationship : @xmath419 secondly , from  ( [ eq : ax ] ) we get that @xmath420 hence , the lemma will be proved once we show that @xmath421    let @xmath422 be the eigenvalues of @xmath394 and let @xmath423 be corresponding orthonormal eigenvectors where , by lemma  [ lemma : eigenvalues_xx ] , @xmath424 write @xmath425 where @xmath426 .",
    "recall , however , that @xmath427 ; so , @xmath428 the desired result  ( [ eq : in - prod-1 ] ) is now obtained from the cauchy - schwartz inequality .",
    "[ lemma:2 ] let @xmath429 be a bipartite @xmath12-regular graph where @xmath408 and let @xmath430 be a function on the vertices of @xmath57 . define the function @xmath431 and the average @xmath432 by @xmath433 and @xmath434 then @xmath435 where @xmath436 @xmath437 @xmath438 and @xmath439    _ proof : _ define the column vectors @xmath440 and @xmath441 and denote by @xmath98 and @xmath99 the averages @xmath442 the following equalities",
    "are easily verified : @xmath443 @xmath444 @xmath445 and @xmath446 the result now follows from lemma  [ lemma:1 ] .",
    "_ proof of lemma  [ lemma : alonchung ] : _ using the notation of lemma  [ lemma:2 ] , write @xmath447 @xmath448 and @xmath449 since the range of @xmath72 is restricted to the interval @xmath73 $ ] , we have @xmath450 hence , the values @xmath451 and @xmath452 can be bounded from above by @xmath453 substituting  ( [ eq : eg])([eq : varab ] ) into lemma  [ lemma:2 ] yields @xmath454 so , @xmath455 { } \\\\ & \\le &   \\sigma \\tau + \\gamma_{{\\mathcal{g}}}\\sqrt{\\sigma ( 1{-}\\sigma ) \\tau ( 1{-}\\tau ) } \\\\ & = & ( 1{-}\\gamma_{{\\mathcal{g } } } ) \\sigma \\tau + \\gamma_{{\\mathcal{g}}}\\sqrt{\\sigma \\tau } \\left ( \\sqrt{\\sigma \\tau }   + \\sqrt{(1{-}\\sigma ) ( 1{-}\\tau ) } \\right ) \\\\ & \\le & ( 1{-}\\gamma_{{\\mathcal{g } } } ) \\sigma \\tau + \\gamma_{{\\mathcal{g}}}\\sqrt{\\sigma \\tau } \\ ; , \\end{aligned}\\ ] ] as claimed .",
    "_ proof of lemma  [ lemma : sqrt_st ] : _ we compute lower and upper bounds on the average @xmath456 on the one hand , this average equals @xmath457 where the inequality follows from the assumed conditions on @xmath72 . on the other hand",
    ", this average also equals @xmath458 where the inequality follows from lemma  [ lemma : alonchung ] .",
    "combining these two bounds we get @xmath459 and the result is now obtained by dividing by @xmath460 and re - arranging terms .      when analyzing the complexity of the algorithm in figure  [ fig : decoder ] , one can notice that the decoder @xmath461 needs to be applied at vertex @xmath22 , only if @xmath180 has been modified since the last application of @xmath462 at that vertex .",
    "based on this observation , we prove the following lemma .      _",
    "proof : _ define @xmath464 by @xmath465 it is easy to verify that @xmath466 in the first @xmath464 iterations in figure  [ fig : decoder ] , we apply the decoder @xmath462 ( which is either @xmath192 or @xmath193 ) at most @xmath467 times .",
    "next , we evaluate the total number of applications of the decoder @xmath462 in iterations @xmath468 .",
    "we hereafter use the notations @xmath176 and @xmath178 as in the proof of theorem  [ thm : main ] . recall that we need to apply the decoder @xmath462 to @xmath180 for a vertex @xmath469 , only if at least one entry in @xmath180  say , the one that is indexed by the edge @xmath470",
    " has been altered during iteration @xmath471 .",
    "such an alteration may occur only if @xmath472 is a vertex in @xmath473 with an adjacent vertex in @xmath178 .",
    "we conclude that @xmath462 needs to be applied at vertex @xmath22 during iteration @xmath474 only if @xmath475 .",
    "the number of such vertices @xmath22 , in turn , is at most @xmath476 .",
    "we now sum the values of @xmath477 over iterations @xmath468 : @xmath478 { } \\nonumber \\\\ & = & \\delta^2 n \\left ( \\sum_{j = i_t/2}^{\\lfloor ( \\nu-1)/2 \\rfloor } \\sigma_{2j+1 }   + \\sum_{j = i_t/2}^{{\\lfloor ( \\nu-2)/2 \\rfloor } } \\sigma_{2j+2 } \\right ) \\nonumber \\\\ & \\le & \\delta^2 n \\cdot \\sum_{j = i_t/2}^{{\\lfloor ( \\nu-1)/2 \\rfloor } } \\sigma_{2j+1 } \\left ( 1 + \\frac{\\theta}{\\delta } \\right ) \\ ; ,   \\label{eq : sum - sigma}\\end{aligned}\\ ] ] where the last inequality is due to  ( [ eq : sigmas - ratio ] ) .    from  ( [ eq : recurrence ] ) ( and by neglecting a positive term ) ,",
    "we obtain @xmath479 for even @xmath480 . therefore , the expression in  ( [ eq : sum - sigma ] ) is bounded from above by @xmath481 { } \\nonumber \\\\ & \\le & \\frac{\\displaystyle \\delta^2 n \\left ( 1 + \\frac{\\theta}{\\delta } \\right ) \\cdot \\frac{1}{\\delta^2 } }   { \\displaystyle 1 - \\left ( \\frac{4 \\gamma_{{\\mathcal{g}}}^2}{\\theta \\delta } \\right)^2 } \\nonumber \\\\ & = & \\frac{\\displaystyle n \\left ( 1 + \\frac{\\theta}{\\delta } \\right ) }   { \\displaystyle 1 - \\left ( \\frac{4 \\gamma_{{\\mathcal{g}}}^2}{\\theta \\delta } \\right)^2 } \\ ; , \\ ] ] where the inequality follows from  ( [ eq : cond - i - t ] ) .",
    "adding now the number of applications of the decoder @xmath462 during the first @xmath464 iterations , we conclude that the total number of applications of the decoder @xmath462 is at most @xmath230 , where @xmath482    99 n. alon , j. bruck , j. naor , m. naor , and r.m .",
    "roth , `` construction of asymptotically good low - rate error - correcting codes through pseudo - random graphs , '' _ ieee trans .",
    "theory , _ vol .",
    "38 , no .  2 , pp .  509516 ,",
    "n. alon and j.h .",
    "spencer , _ the probabilistic method , _",
    "new york : wiley , 2000 .",
    "n. alon , j. edmonds , and m. luby , `` linear time erasure codes with nearly optimal recovery , '' in _ proc .",
    "36th annual ieee symp .  on foundations of computer science ( focs ) ,",
    "_ milwaukee , wisconsin , oct .",
    "1995 , pp .",
    "512519 . n. alon and m. luby , `` a linear time erasure - resilient code with nearly optimal recovery , '' _ ieee trans .",
    "theory , _ vol .",
    "42 , no .  6 , pp .",
    "17321736 , nov .",
    "a. barg and g. zmor ,",
    "`` error exponents of expander codes , '' _ ieee trans .  inf .",
    "theory , _ vol .",
    "48 , no .  6 , pp .  17251729 , june 2002",
    ". a. barg and g. zmor , `` error exponents of expander codes under linear - complexity decoding , '' _ siam j.  discrete math . ,",
    "17 , no .  3 , pp .",
    "426445 , 2004 .",
    "a. barg and g. zmor , `` concatenated codes : serial and parallel , '' _ ieee trans .  inf .",
    "_ , vol .",
    "51 , no .  5 , pp .  16251634 , may 2005 . g. davidoff , p. sarnak , and a. valette , _ elementary number theory , group theory , and ramanujan graphs .",
    "_ cambridge , uk : cambridge university press , 2003 .",
    "i. dumer , `` concatenated codes and their multilevel generalizations , '' in _ handbook of coding theory , volume ii , _ v.s .",
    "pless and w.c .",
    "huffman ( editors ) , amsterdam , netherlands : north - holland , pp .  19111988 , 1998 .",
    "forney , jr .",
    ", _ concatenated codes .",
    "_ cambridge , massachusetts : mit press , 1966 .",
    "forney , jr .",
    ", `` generalized minimum distance decoding , '' _ ieee trans .  inf .",
    "theory , _ vol .  12 , no .  2 , pp .",
    "125131 , apr .",
    "v. guruswami and p. indyk , `` near - optimal linear - time codes for unique decoding and new list - decodable codes over smaller alphabets , '' in _ proc .",
    "34th annual acm symposium on theory of computing ( stoc ) , _ montral , quebec , canada , pp .  812821 ,",
    "a. lubotsky , r. philips , and p. sarnak , `` ramanujan graphs , '' _ combinatorica , _ vol .  8 , pp .  261277 , 1988 .",
    "macduffee , _ the theory of matrices .",
    "_ new york : chelsea , 1946 .",
    "margulis , `` explicit group theoretical constructions of combinatorial schemes and their applications to the design of expanders and concentrators , '' _ probl .",
    ", _ vol .",
    "24 , no .  1 ,",
    "3946 , july 1988 .",
    "m. sipser and d.a .",
    "spielman , `` expander codes , '' _ ieee trans .  inf .",
    "theory , _ vol .",
    "42 , no .  6 , pp .",
    "17101722 , nov .",
    "v. skachek and r.m .",
    "roth , `` generalized minimum distance iterative decoding of expander codes , '' in _ proc .",
    "ieee inf .",
    "theory workshop ( itw ) , _",
    "paris , france , pp .  245248 , mar .- apr .",
    "spielman , `` linear - time encodable and decodable error - correcting codes , '' _ ieee trans .",
    "theory , _ vol .",
    "42 , no .",
    "6 , pp .  17231731 , nov .  1996 .",
    "tanner , `` a recursive approach to low - complexity codes , '' _ ieee trans .",
    "theory , _ vol .",
    "27 , no .  5 , pp",
    ".  533547 , sep .",
    "1981 . g. zmor , `` on expander codes , '' _ ieee trans .",
    "theory , _ vol .",
    "47 , no .  2 , pp .",
    "835837 , feb ."
  ],
  "abstract_text": [
    "<S> a construction of expander codes is presented with the following three properties : ( i )  the codes lie close to the singleton bound , ( ii )  they can be encoded in time complexity that is linear in their code length , and ( iii )  they have a linear - time bounded - distance decoder . by using a version of the decoder that corrects also erasures , the codes can replace mds outer codes in concatenated constructions , thus resulting in linear - time encodable and decodable codes that approach the zyablov bound or the capacity of memoryless channels . </S>",
    "<S> the presented construction improves on an earlier result by guruswami and indyk in that any rate and relative minimum distance that lies below the singleton bound is attainable for a significantly smaller alphabet size .    </S>",
    "<S> * keywords : * concatenated codes , expander codes , graph codes , iterative decoding , linear - time decoding , linear - time encoding , mds codes . </S>"
  ]
}
{
  "article_text": [
    "the quantum summation ( * qs * ) algorithm of brassard , hyer , mosca and tapp computes an approximation to the arithmetic mean of the values of a boolean function defined on a set of @xmath15 elements . an overview of the * qs * algorithm and its basic properties is presented in the first two sections of  @xcite . in section [ sec : qs - algo ] we remind the reader of the facts concerning the * qs * algorithm that are needed in this paper .",
    "the * qs * algorithm enjoys many optimality properties and has many applications .",
    "it is used for the summation of real numbers which in turn is an essential part for many continuous problems such as multivariate and path integration , and multivariate approximation .",
    "the knowledge of the complexity of the quantum summation problem allows us to determine the quantum complexity of many continuous problems , such as those mentioned above , see  @xcite and a recent survey @xcite .",
    "the * qs * algorithm has been studied in the two error settings so far :    * worst - probabilistic in @xcite , * average - probabilistic in @xcite .",
    "these settings are defined by taking the worst case / average performance with respect to all boolean functions and the probabilistic performance with respect to outcomes of the * qs * algorithm .",
    "it turns out that the * qs * algorithm is optimal in these two settings .",
    "the corresponding lower bounds for the boolean summation problem were shown in @xcite for the worst - probabilistic setting , and in @xcite for the average - probabilistic setting .",
    "in particular , we know that the * qs * algorithm with @xmath3 quantum queries , @xmath4 , has the error bound of order @xmath12 in the worst - probabilistic setting .",
    "in this paper we study the _ worst - average _ setting . in this setting , we take the worst case performance over all boolean functions and the average performance over all outcomes of the * qs * algorithm .",
    "the average performance is measured in the @xmath1 norm , @xmath2 $ ] .",
    "this setting is analogous to the randomized ( monte carlo ) setting used for algorithms on a classical computer .",
    "the worst - average setting also seems to be quite natural for the analysis of quantum algorithms .",
    "as we shall see , the results depend on the choice of @xmath11 .",
    "obviously , for larger  @xmath11 , the effect of the average behavior becomes less significant .",
    "in fact , the limiting case , @xmath10 , leads to the deterministic case ( modulo sets of measure zero ) .",
    "not surprisingly , for @xmath10 , the results are negative .    in what follows",
    "we indicate error bounds for large @xmath3 . since we always assume that @xmath4 , this means that for @xmath3 tending to infinity we also let @xmath0 tend to infinity . to make error bounds independent of @xmath0",
    ", we take the supremum over @xmath16 in the corresponding definitions of the errors .",
    "when we speak about the sharpness of error bounds , we usually take a large @xmath3 and select a still larger @xmath0 and a boolean function for which the presented error bound is sharp .",
    "the worst - average error @xmath17 of the * qs * algorithm with @xmath3 quantum queries satisfies :    * for @xmath6 , we have @xmath18 .",
    "furthermore , the asymptotic constant is @xmath19 for @xmath20 divisible by @xmath21 . * for @xmath8",
    ", we have @xmath22 .",
    "furthermore , the asymptotic constant is approximately @xmath23 for @xmath20 divisible by @xmath21 and @xmath11 close to @xmath9 . * for @xmath10",
    ", we have @xmath24 .    the error bounds of the * qs * algorithm are improved by the use of repetitions .",
    "namely , we repeat the * qs * algorithm @xmath25 times and take the median of the outputs obtained as the final output .",
    "this procedure boosts the success probability of the approximation at the expense of the number of quantum queries .",
    "we show that with @xmath26 independent of @xmath3 and linearly dependent on  @xmath11 , we decrease the * qs * algorithm error to be of order @xmath12 .",
    "hence , the use of repetitions is particularly essential for large @xmath11 since we change the error bound @xmath27 without repetitions to the error bound @xmath28 with repetitions .",
    "the constant in the last big @xmath29 notation is absolute and does not depend on @xmath11 and @xmath3 .",
    "the error bound of order @xmath12 is optimal .",
    "this follows from the use of , for instance , chebyshev s inequality and the fact that the lower bound @xmath14 is sharp in the worst - probabilistic setting , see also @xcite .",
    "hence , the * qs * algorithm with repetitions is optimal in the worst - average setting .",
    "the quantum summation * qs * algorithm of brassard , hyer , mosca and tapp , see @xcite , approximates the mean @xmath30 of a boolean function @xmath31 . without loss of generality",
    "we assume that @xmath0 is a power of two .",
    "the * qs * algorithm uses @xmath32 quantum queries .",
    "the only interesting case is when @xmath3 is much smaller than @xmath0 .",
    "the * qs * algorithm returns an index @xmath33 with probability @xmath34 see @xcite for the detailed analysis of the * qs * algorithm . here",
    "@xmath35 we will also be using @xmath36 clearly , @xmath37 $ ] and @xmath38 iff @xmath39 is an integer .",
    "we shall usually drop the subscript @xmath40 and denote @xmath41 , @xmath42 , @xmath43 when @xmath40 is clear from the context .    knowing the index @xmath44 , we compute the output @xmath45 on a classical computer .",
    "the error is then given by @xmath46    as in @xcite , we let @xmath47 denote the measure on the set of all possible outcomes of the * qs * algorithm which is defined as @xmath48 let @xmath49 denote the set of all possible outputs of the * qs * algorithm with @xmath32 queries , i.e. , @xmath50 let @xmath51 denote the probability of the output @xmath52 .",
    "note that @xmath53 . hence if @xmath54 and @xmath55 then @xmath56 .    in what follows",
    "we let @xmath57 denote the set of all boolean functions defined on @xmath58 .",
    "the error of the * qs * algorithm in the worst - probabilistic and average - probab- ilistic settings has been analyzed in @xcite . in this paper",
    "we analyze the error of the * qs * algorithm in the worst - average setting .",
    "this corresponds to the worst case performance with respect to all boolean functions from @xmath57 and the average performance with respect to all outcomes .",
    "this average performance is measured by the expectation in the @xmath1 norm , @xmath59 $ ] , with respect to the probability measure of all outcomes provided by the * qs * algorithm . as mentioned before",
    ", we make the worst - average error independent of @xmath0 by taking the supremum over @xmath16 .",
    "that is , the worst - average error is defined as :      it is easy to check that for @xmath10 , the * qs * algorithm behaves badly . indeed ,",
    "if @xmath3 is odd , we can take @xmath40 with all values one , and then @xmath63 , @xmath64 and @xmath65 .",
    ". if @xmath3 is even , we take @xmath40 with only one value equal to @xmath9 , and then @xmath67 , @xmath68 and @xmath69 .",
    "hence , @xmath70 and @xmath66 .",
    "[ thm : erravgloc_q>1 ] let @xmath76 .",
    "denote @xmath77 .",
    "if @xmath78 then @xmath79 . if @xmath80 then @xmath81 with @xmath82 and @xmath83 .. for @xmath84 , the only singularities are at the boundary points and are of the form @xmath85 for @xmath86 approaching @xmath87 .",
    "the function @xmath85 is integrable since @xmath72 . ]",
    "assume that @xmath80 .",
    "using the form of @xmath92 from section  [ sec : qs - algo ] , we rewrite  ( [ eq : e - avg ] ) as @xmath93 we have @xmath94 using the @xmath95-periodicity of @xmath96 , we see that the last sum is equal to @xmath97 therefore @xmath98 with @xmath99 we split @xmath100 as @xmath101 observe that @xmath102 is the rectangle formula for approximating the integral @xmath103 \\setminus [ \\pi { \\left\\lfloor \\sigma_a \\right\\rfloor } /m,\\pi { \\left\\lceil \\sigma_a \\right\\rceil } /m ] }   \\big|\\sin(x - \\theta_a)\\big|^{q-2 } \\big|\\sin(x + \\theta_a)\\big|^q\\ , dx.\\ ] ]    the error of the rectangle quadrature for @xmath104 and an absolutely continuous function @xmath105 \\rightarrow { \\mathbb{r}}$ ] whose first derivative belongs to @xmath106)$ ] satisfies @xmath107 thus defining @xmath108 and @xmath109 \\setminus [ \\pi { \\left\\lfloor \\sigma_a \\right\\rfloor } /m,\\pi { \\left\\lceil \\sigma_a \\right\\rceil } /m]$ ] and using the error formula above for the subintervals @xmath110 and @xmath111 $ ] ,",
    "we get @xmath112 define @xmath113 and @xmath114 \\setminus [ \\pi ( { \\left\\lfloor \\sigma_a \\right\\rfloor } -\\sigma_a ) /m,\\pi",
    "( \\sigma_a-{\\left\\lceil \\sigma_a \\right\\rceil } ) /m]$ ] .",
    "we have @xmath115 and by the @xmath95-periodicity of the integrand @xmath116 we have @xmath117 analogously , @xmath118 for @xmath119 $ ] the sine is positive and @xmath120 it is easy to check that for @xmath121 we have @xmath122 from this we get @xmath123 we then finally get @xmath124 observe also that @xmath125 since @xmath126 \\le 1 $ ] for @xmath127 $ ] , we get @xmath128 using @xmath129 we obtain @xmath130        [ cor : erravgloc_q>1 ] let @xmath76 . if @xmath78 then @xmath79 . if @xmath80 then @xmath132^{1/q},\\end{gathered}\\ ] ] with @xmath133 $ ] , and the factor in the big @xmath29 notation is independent of @xmath40 from  @xmath57 , and also independent of @xmath0 .",
    "the case @xmath78 can be proved as in theorem [ thm : erravgloc_q>1 ] .",
    "assume that @xmath80 .",
    "using the form of @xmath92 from section [ sec : qs - algo ] , we have @xmath140 as in the proof of theorem [ thm : erravgloc_q>1 ] we conclude that @xmath141 where @xmath142 with @xmath143 . changing the index  @xmath44 in the second sum to @xmath144 , and using periodicity of the sine ,",
    "we get @xmath145 and consequently @xmath146 using the triangle inequality twice , we obtain @xmath147 let @xmath148 . observe that @xmath149 . since the cotangent is @xmath95-periodic and the function @xmath150 is even , we get @xmath151 this and @xmath152 yield ( [ eq : erravg ] ) as claimed .",
    "this can be shown by applying the error formula for rectangle quadratures ( [ rectangle ] ) .",
    "note that @xmath157 is the rectangle quadrature for the integral @xmath158 with @xmath159 .",
    "we then obtain ( [ eq : erravglemma1 ] ) by using  ( [ rectangle ] ) .        for @xmath78",
    "we have @xmath164 and ( [ eq : erravgloc ] ) holds since @xmath135 by  @xcite .",
    "assume that @xmath165 . from lemmas [ lem : erravg ] and [ lem : erravglemma1 ] we have @xmath166.\\end{gathered}\\ ]",
    "] observe that @xmath167 the four formulas above yield @xmath168 observe that @xmath169 \\le 1 $ ] since @xmath170 $ ] .",
    "this and the obvious estimates of sine and cosine yield @xmath171 consider now the left hand side of ( [ eq : aux_estim3 ] ) .",
    "remembering that @xmath162 , and since @xmath172 for @xmath173 $ ] , we get @xmath174 thus by ( [ eq : aux_estim3 ] ) and ( [ eq : aux_estim1 ] ) we get the final estimate ( [ eq : erravgloc ] ) .          * for @xmath76 ,",
    "@xmath176 the last estimate is sharp , i.e. , @xmath177 in particular , for @xmath20 divisible by @xmath21 we have @xmath178 and the ratio of the integrals in ( [ eq : errworavgupper_q ] ) and ( [ eq : errworavglower_q ] ) are approximately @xmath9 for @xmath11 close to @xmath9 . * for @xmath6 , @xmath179 this estimate is sharp , i.e. , @xmath180 in particular , for @xmath20 divisible by @xmath21 we have @xmath181      the estimate ( [ eq : errworavgupper_q ] ) is sharp since we can take a boolean function @xmath40 such that @xmath185 . then ( [ eq : erravgloc_q>1 ] ) yields ( [ eq : errworavgasym_q ] ) .",
    "in particular , for @xmath186 and @xmath187 we have @xmath188 , @xmath189 and @xmath190 .",
    "therefore @xmath191 which proves  ( [ eq : errworavglower_q ] ) . for @xmath11 close to @xmath9 ,",
    "the value of @xmath192 is mostly due to the integrand values close to @xmath87 and @xmath95 . since @xmath193 is then approximately equal to one , the ratio of the upper and lower bound integrals is about @xmath9 .",
    "for @xmath6 the estimate ( [ eq : errworavgupper ] ) follows directly from theorem [ thm : erravgloc ] . to prove  ( [ eq : errworavgasym ] ) it is enough to choose a boolean @xmath40 for which the numbers @xmath194 are uniformly ( in @xmath3 ) separated from @xmath87 , see theorem [ thm : erravgloc ] .",
    "more precisely , since @xmath195 can take any value @xmath196 for @xmath197 , we take a boolean function @xmath40 such that @xmath198 . for sufficiently large @xmath0",
    ", we have @xmath199 . for large @xmath200 with @xmath201",
    ", we then have @xmath202 for some @xmath203 independent of @xmath3 .",
    "the success probability of the * qs * algorithm is increased by repeating it several times and taking the median of the outputs as the final output , see e.g. ,  @xcite .",
    "we show in this section that this procedure also leads to an improvement of the worst - average error estimate .",
    "we perform @xmath206 repetitions of the * qs * algorithm for some @xmath207 .",
    "we obtain @xmath208 and let @xmath209 be the median of the obtained outputs , i.e. , the @xmath210st number in the ordered sequence .",
    "let @xmath211 , @xmath88 , be the probability that the median @xmath209 is equal to  @xmath52 .",
    "this probability depends on the distribution function @xmath212 of the original outputs from @xmath213 , which is defined as @xmath214 it is known , see @xcite p. 410",
    ", that the distribution of the median @xmath209 is of the form @xmath215      we estimate @xmath217 by using theorem 12 of @xcite which states that the * qs * algorithm with @xmath3 queries computes @xmath218 such that @xmath219 for any positive integer @xmath220 , here @xmath221 and @xmath222 are absolute constants and @xmath40 is any boolean function from @xmath57 .",
    "if @xmath223 then for at least @xmath26 outcomes @xmath224 we must have @xmath225 but the probability that this occurs is bounded by @xmath226 it follows then that ( with @xmath203 which may depend on n ) @xmath227 we now use the standard summation by parts .",
    "define @xmath228 then , by the above estimate we get for an arbitrary integer @xmath229 , @xmath230 therefore @xmath231 for @xmath232 and with the number @xmath233 depending only on @xmath11 and @xmath26 .",
    "in fact , taking @xmath234 it is easy to check that @xmath235 is a single exponential function of  @xmath11 .",
    "hence , by taking the @xmath11th root we have @xmath236 with @xmath237 of order @xmath9 .",
    "therefore we have proven the following theorem .",
    "[ threp ] the worst - average error of the median of @xmath238 repetitions of the * qs * algorithm with @xmath3 quantum queries satisfies @xmath239 with an absolute constant in the big @xmath29 notation independent of @xmath11 and @xmath3 .",
    "the essence of theorem [ threp ] is that the number of repetitions of the * qs * algorithm is _ independent _ of @xmath3 and depends only linearly on @xmath11 .",
    "still , it allows to essentially improve the worst - average error of the * qs * algorithm . as we already mentioned in the introduction ,",
    "the bound of order @xmath12 is a lower bound on the worst - average error of any quantum algorithm .",
    "hence , the * qs * algorithm with repetitions enjoys optimality also in the worst - average setting .",
    "we wish to thank p. hyer for suggesting to study repetitions of the * qs * algorithm for @xmath6 .",
    "we are also grateful to j.  creutzig , e.  novak , a.  papageorgiou , j.  f.  traub and a.  g.  werschulz for valuable comments .",
    "g. brassard , p. hyer , m. mosca , a. tapp , quantum amplitude estimation and amplification , _ quantum computation and information _",
    ", s. j. lomonaco and h. e. brandt , eds .",
    ", american math .",
    "society , 2002 , http://arxiv.org/quant-ph/0005055 , 2000 .",
    "a. nayak and f. wu , the quantum query complexity of approximating the median and related statistics , proceedings of the 31th annual acm symposium on the theory of computing ( stoc ) , 384 - 393 , 1999 , http://arxiv.org/quant-ph/9804066 , 1998 ."
  ],
  "abstract_text": [
    "<S> we study the quantum summation ( * qs * ) algorithm of brassard , hyer , mosca and tapp , see @xcite , which approximates the arithmetic mean of a boolean function defined on @xmath0 elements . </S>",
    "<S> we present sharp error bounds of the * qs * algorithm in the worst - average setting with the average performance measured in the @xmath1 norm , @xmath2 $ ] .    </S>",
    "<S> we prove that the * qs * algorithm with @xmath3 quantum queries , @xmath4 , has the worst - average error bounds of the form @xmath5 for @xmath6 , @xmath7 for @xmath8 , and is equal to @xmath9 for @xmath10 . </S>",
    "<S> we also discuss the asymptotic constants of these estimates .    </S>",
    "<S> we improve the error bounds by using the * qs * algorithm with repetitions . using the number of repetitions which is independent of @xmath3 and linearly dependent on  @xmath11 </S>",
    "<S> , we get the error bound of order @xmath12 for any @xmath13 . </S>",
    "<S> since @xmath14 is a lower bound on the worst - average error of any quantum algorithm with @xmath3 queries , the * qs * algorithm with repetitions is optimal in the worst - average setting . </S>"
  ]
}
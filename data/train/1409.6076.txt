{
  "article_text": [
    "[ [ assignment - setting ] ] assignment setting + + + + + + + + + + + + + + + + + +    an assignment problem is a triple @xmath0 such that @xmath1 is the set of agents , @xmath2 is the set of objects , and the preference profile @xmath3 specifies for each agent @xmath6 his preferences @xmath11 over objects in @xmath5 .",
    "we write  @xmath12 to denote that agent  @xmath6 values object  @xmath13 at least as much as object  @xmath14 and use  @xmath15 for the strict part of  @xmath11 , i.e. ,  @xmath16 iff  @xmath12 but not  @xmath17 .",
    "we will assume that the agents have strict preferences and that @xmath18 is represented by a comma separated list as follows : @xmath19    consider an assignment problem in which @xmath20 , @xmath21 and the preferences @xmath22 are as follows .",
    "@xmath23    a random assignment @xmath8 is a @xmath24 matrix @xmath25 $ ] such that @xmath26 $ ] for all @xmath4 , and @xmath27 , ; @xmath28 for all @xmath27 ; and @xmath29 for all @xmath4 .",
    "the value @xmath30 represents the probability of object @xmath31 being allocated to agent @xmath6 .",
    "each row @xmath32 represents the allocation of agent @xmath6 .",
    "the set of columns correspond to the objects @xmath33 .",
    "a feasible random assignment is _ deterministic _ if @xmath34 for all @xmath4 and @xmath35 .",
    "a _ uniform assignment _ is a random assignment in which each agent has probability @xmath10-th of getting each object .    for and",
    "assignment problem in which @xmath20 , @xmath21 , the following is an example of a random assigment : @xmath36 in @xmath8 , the probability of agent @xmath37 getting @xmath38 is @xmath39",
    ".    given two random assignments @xmath8 and @xmath9 , @xmath40 i.e. , an agent @xmath6 _ sd  prefers _ allocation @xmath41 to allocation @xmath42 if @xmath43    an assignment @xmath8 is _ sd - efficient _ is there exists no assignment @xmath9 such that @xmath44 for all @xmath4 and @xmath45 for some @xmath4 .",
    "an assignment is _ ex post efficient _ if it be can represented as a probability distribution over the set of pareto optimal assignments .",
    "we say that a deterministic assignment @xmath9 is _ consistent _ with a random assignment @xmath8 if for each @xmath46 , we have that @xmath47 .",
    "a deterministic assignment can be represented by a permutation matrix in which an entry of one denotes the row agent getting the column object .",
    "a _ decomposition _ of a random assignment @xmath8 is a sum @xmath48 such that @xmath49 $ ] for @xmath50 , @xmath51 , and each @xmath52 is a permutation matrix ( consistent with @xmath8 ) .",
    "consider a random assignment @xmath53    then , the following is a valid decomposition of the assignment . @xmath54",
    "a deterministic assignment is pareto optimal iff it is ex post efficient iff it is sd - efficient .",
    "therefore both sd - efficiency and ex post efficiency are natural generalizations of pareto optimality in the context of random assignments .",
    "the convex hull of pareto optimal discrete assignments will be denoted by @xmath55 .",
    "an efficiency concept @xmath56 is _ combinatorial _ if for any two random assignments @xmath8 and @xmath9 such that @xmath47 if and only if @xmath57 , it holds that @xmath8 is efficient with respect to @xmath56 if and only if @xmath9 is efficient with respect to @xmath56 .    [ [ insights - into - ex - post - efficiency ] ] insights into ex post efficiency + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    before we examine ex post efficient random assignment , we review some characterizations of deterministic pareto optimal assignments . the first characterization is with respect to deterministic assignment algorithm called _ serial dictatorship",
    "_ which takes as a parameter a permutation @xmath58 over the set of agents .",
    "serial dictatorship @xmath59 lets the agents in the permutation @xmath58 serially take their most preferred object that has not yet been allocated until each agent has an object .",
    "[ fact : po : sd ] each pareto optimal assignment is an outcome of applying serial dictatorship with respect to some permutation of the agents .    it follows that rsd ( random serial dictator ) rule which takes some @xmath58 uniformly at random and then implements serial dictatorship with respect to it is ex post efficient .",
    "the next characterization of pareto optimal is graph - theoretical . for an assignment problem @xmath0 and deterministic assignment @xmath8 , the _ corresponding graph _",
    "@xmath60 is such that @xmath61 and @xmath62 is defined as follows . for all @xmath4 and all @xmath35 ,",
    "* @xmath63 iff @xmath64 and * @xmath65 iff @xmath66 where @xmath67 .",
    "[ fact : po : ttc ] an assignment is pareto optimal if and only if its corresponding graph does not admit a cycle .    the cycle is referred to as a trading cycle because it represents a trade of objects in which each agent in the cycle gets the object that he was pointing to  ( see e.g. , * ? ? ?",
    "we will use both facts [ fact : po : sd ] and [ fact : po : ttc ] in our arguments .",
    "an ex post efficient assignment can be computed in polynomial time .",
    "an outcome of serial dictatorship is ex post efficient .",
    "if we also require anonymity , then a maximum utility matching for utilities consistent with the ordinal preferences is also sd - efficient and hence ex post efficient .",
    "an ex post random assignment can have multiple pareto optimal decompositions .",
    "consider three agents with identical preferences .",
    "it can even be the case that an ex post efficient lottery can be expressed by a lottery over pareto dominated assignments  ( example 2 , * ? ? ?",
    "we consider the problem of testing ex post efficiency of a random assignment .",
    "since we are interested in checking whether a random assignment can be decomposed into pareto optimal assignment , we are reminded of birkhoff s algorithm that can decompose any given random assignment ( represented by a bistochastic matrix ) into a convex combination of at most @xmath68 deterministic assignments ( represented by permutation matrices )  @xcite .",
    "[ [ birkhoffs - algorithm ] ] birkhoff s algorithm + + + + + + + + + + + + + + + + + + + +    birkhoff s algorithm works as follows .",
    "we initialize @xmath6 to @xmath37 . for a bistochastic matrix @xmath69 , a permutation matrix @xmath52 with respect to @xmath69",
    "is guaranteed to exist .",
    "@xmath69 is set to @xmath70 where @xmath71 is such that no entry @xmath72 is negative but there is at least one extra zero entry in @xmath73 than in @xmath69 .",
    "index @xmath6 is incremented by one .",
    "the updated @xmath69 is again bistochastic .",
    "the process is repeated ( say @xmath74 times ) until @xmath69 is the zero matrix . then @xmath75 .",
    "when birkhoff s algorithm identifies a permutation matrix @xmath52 , multiplies it by a constant and then subtracts it from the input matrix representing the random assignment , we will refer to such a step as _ decomposing with respect to a permutation matrix_.    if a random assignment is sd - efficient , then _ any _ decomposition of the assignment is a decomposition into pareto optimal deterministic assignments . on the other hand ,",
    "if a random assignment is not sd - efficient , it may not admit a decomposition into pareto optimal deterministic assignments .",
    "one may wonder whether we can modify birkhoff s algorithm to check whether a given random assignment is ex post efficient or not .",
    "note that if we decompose with respect to some permutation matrices , then we can decompose in any order .",
    "we first show that checking whether there exists a pareto optimal permutation matrix that can be used to further decompose an assignment is np - complete .    checking whether there exists a pareto optimal deterministic assignment consistent with the given random assignment is np - complete .",
    "the following problem is np - complete : serialdictatorshipfeasibility  check whether there exists a permutation of agents for which serial dictatorship gives a particular object to an agent  @xcite .",
    "we present a reduction from serialdictatorshipfeasibility to the problem of checking whether there exists a pareto optimal deterministic assignment consistent with the given random assignment consider a random assignment @xmath8 in which agent @xmath6 gets @xmath7 with probability one and all other agents gets each object in @xmath76 with non - zero probability .",
    "we argue that serialdictatorshipfeasibility has a yes instance if and only if @xmath8 admits a pareto optimal deterministic assignment consistent with it .",
    "if there exists a pareto optimal deterministic assignment consistent with @xmath8 , then this implies that there exists a pareto optimal assignment in which @xmath6 gets @xmath7 .",
    "this means that there exists some permutation @xmath58 such that @xmath77 .",
    "assume that there exists some permutation @xmath58 such that @xmath77 .",
    "then the deterministic assignment corresponding to @xmath59 is a pareto optimal permutation matrix that is consistent with @xmath8 .",
    "the statement above does not imply that checking whether a random assignment is ex post efficient is np - complete .",
    "it is even not clear whether testing ex post efficiency of a random assignment is in np .",
    "the reason is that the certificate for membership may not in principle be polynomial - sized .",
    "however , we show that verifying an ex post efficient random assignment is in np but the problem is np - complete .",
    "[ mainthm ] testing ex post efficiency of a random assignment is np - complete .",
    "we first show that testing ex post efficiency of a random assignment is in np .",
    "it is sufficient to show that an ex post efficient random assignment admits a polynomial - sized pareto optimal decomposition .",
    "consider the @xmath78 dimensional euclidean space of all @xmath79 matrices .",
    "let @xmath80 denote the minimal polytope containing all determinisitc pareto optimal allocations .",
    "by definition @xmath80 is the set of all ex post efficient allocations .",
    "carathodory s theorem implies that any ex post efficient allocations must be a convex combination of no more than @xmath81 deterministic pareto optimal allocations",
    "( because all vertices in @xmath80 are pareto optimal allocations ) .",
    "dimensional subspace of @xmath82 because its feasible points has to satisfy @xmath83 equality constraints and one of which is redundant . ]",
    "we prove the np - hardness via a reduction from 3-sat . given a 3-sat instance @xmath84 , where @xmath85 is the set of binary variables and @xmath86 is the set of clauses .",
    "let each clause @xmath87 , where for @xmath88 , @xmath89 is either @xmath90 or @xmath91 with @xmath92 .",
    "the assumption that @xmath92 will be crucial in the proof .    given a 3-sat instance @xmath93",
    ", we build an assignment problem @xmath94 as follows .",
    "let @xmath95 .",
    "for each agent @xmath96 , let @xmath97 denote the corresponding dummy agent .",
    "let @xmath98 and @xmath99 .",
    "that is , @xmath100 .",
    "we will show that in the decompositions @xmath101 s are `` copies '' of @xmath102 and @xmath103 s are `` copies '' of @xmath104 .",
    "for each @xmath96 , @xmath106 .    to define the preferences of the agents , we first introduce the following notation . for any literal @xmath89 in clause @xmath107 , we let @xmath108 denote the item that corresponds to the value of @xmath90 that fails @xmath89 . more precisely , @xmath109    for each @xmath110 and @xmath87 , where @xmath89 is a literal of variable @xmath90 , we let @xmath111 , @xmath112 , and @xmath113 . for any @xmath114 and @xmath110 , if @xmath115 is not defined above then @xmath116 .",
    "moreover , we let @xmath117 .",
    "for example , for @xmath118 , @xmath119 , @xmath120 , and @xmath121 , we have    @xmath122 @xmath123 @xmath124    agents preferences are defined in two tables : preferences for @xmath125 s are in table  [ tab : x ] and preferences for all @xmath102 s are in table  [ tab : c ] .    .preferences for @xmath125 s .",
    "[ tab : x ] [ cols=\">,<\",options=\"header \" , ]     clearly for all @xmath110 , @xmath126 is not in any cycle because they have no outgoing edges .",
    "the only possibility of cycles are through @xmath127 , then through truncated figure  [ fig : demandx ] , where all @xmath104 and @xmath128 are removed . because @xmath129 satisfies @xmath93 , each potential path from @xmath101 to @xmath102",
    "is blocked by at least one @xmath103 .",
    "meanwhile , there is no cycle involving only @xmath103 s or involving @xmath103 s with different @xmath107 s , because any @xmath103 only has outgoing edges to @xmath115 , which is either ( 1 ) empty , or ( 2 ) contains another @xmath130 with @xmath131 ( recall we assume that @xmath92 for the three literals in @xmath132 ) or @xmath133 .",
    "this proves that @xmath134 is pareto optimal .",
    "@xmath135 is pareto optimal .",
    "the demand graph of @xmath136 in @xmath135 with all outgoing edges of @xmath102 s is illustrated in figure  [ fig : demandc ] ( b ) .",
    "clearly @xmath137 and all @xmath101 s are not in any cycle because they have no outgoing edges .",
    "after they are removed , @xmath126 s have no outgoing edges .",
    "@xmath102 can also be removed because none of the remaining agents demand @xmath138 .",
    "the only remaining agents are those in the truncated figure  [ fig : demandx ] , where all @xmath104 and @xmath128 are removed , and as in claim  [ claim : m1 ] , there is no cycle among them .",
    "checking membership of a point in @xmath55 is np - complete .",
    "since @xmath55 is a convex combination of pareto optimal determistic assignments , it contains all the ex post efficient points .",
    "optimizing a linear functions over @xmath55 is np - complete .    since testing membership in @xmath55 , the statements follows from the equivalence between optimizing over a poltope and implementing a separation oracle over over a polytope  @xcite .",
    "although we have shown that testing whether a given assignment is ex post efficiency is np - complete , we leave open the case when the assignment is uniform .    we now show that in the random assignment problem , ex post efficiency is not combinatorial .",
    "this is already a contrast with a stronger notion of efficiency called _ sd - efficiency _ which depends solely on the support of the random allocations .",
    "a trading cycle of size @xmath139 is _ consistent _ with random assignment @xmath8 if it consists of @xmath140 agents and @xmath140 objects , each objects points to an agent , each object to an agent in the cycle and the cycle satisfies the following constraints : @xmath141 @xmath57 if object @xmath7 points to the agent @xmath6 , and @xmath142 @xmath143 if agent @xmath6 points to object @xmath144 .",
    "( lemma 3 , * ? ? ?",
    "* ) proved that a random assignment is not sd - efficiency iff it admits a trading cycle consistent with it .",
    "the fact that sd - efficiency is combinatorial follows from its characterization .",
    "in contrast , ex post efficiency is not combinatorial .",
    "[ th : expost - not - combinatorial ] ex post efficiency is not combinatorial .    consider the following assignment problem .",
    "@xmath145    the following assignment @xmath8 is a result of rsd and hence ex post efficient :    @xmath146 now consider the following assignment :    @xmath147    note that @xmath9 is a random assignment such that @xmath47 if and only if @xmath57 .",
    "then in each pareto optimal matrix that can be used to decompose the assignment , due to pareto optimality , agents @xmath37 and @xmath148 get an object each from the following sets of objects @xmath149 , @xmath150 , and @xmath151 . agent 1 and 2 can not get the set @xmath152 in a pareto optimal assignment because if it were the case then there exists a serial dictatorship in which agent 3 or 4 take @xmath153 before @xmath154 is allocated . in order for agent @xmath37 to get @xmath39 of @xmath155 , we need to use the @xmath39 time the pareto optimal assignment in which @xmath155 gts @xmath39 . but",
    "this means that agent @xmath148 gets @xmath38 @xmath39 of the time .",
    "but this is not possible since agent @xmath148 gets @xmath38 @xmath156 of time .",
    "in this section , we formalize a new efficiency concept called _ ex post efficiency_. recall that a random assignment is ex post efficient if it can be represented as a convex combination of pareto optimal deterministic assignments .",
    "we say that a random assignment is _ robust ex post efficient _ if any decomposition of the assignment consists of pareto optimal deterministic assignments .",
    "the following is a useful characterization of robust ex post efficiency .",
    "[ th : robust - eff - charac ] an assignment is robust ex post efficient iff it does not admit a non - pareto optimal deterministic assignment consistent with it .",
    "assume that there exists no non - pareto optimal deterministic assignment consistent with the assignment @xmath8 .",
    "then each time , @xmath8 is decomposed with respect to a deterministic assignment , it is with respect to a pareto optimal deterministic assignment . by birkhoff s theorem ,",
    "the updated @xmath8 is still bistochastic after the decomposition .",
    "hence any decomposition of @xmath8 is into pareto optimal deterministic assignment and hence @xmath8 is robust ex post efficient .",
    "now let us assume that that there exists a non - pareto optimal deterministic assignment consistent with the assignment @xmath8 .",
    "we then decompose @xmath8 with respect to such an assignment using birkhoff s algorithm and continue decomposing it . since the decomposition contains at least non pareto optimal deterministic assignment ,",
    "hence @xmath8 is not robust ex post efficient .",
    "we point out that sd - efficiency implies robust ex post efficiency which implies ex post efficiency .",
    "note that in the general domain of voting , ex post efficiency and robust ex post efficiency are equivalent .",
    "sd - efficiency implies robust ex post efficiency which implies ex post efficiency .",
    "we first show that if an assignment is not ex post efficient , then it is not robust ex post efficient .",
    "if an assignment @xmath9 is not ex post efficient , then there does not exist _ any _ decomposition of the assignment into pareto optimal deterministic assignments .",
    "then @xmath9 is not robust ex post efficient .",
    "we now show that if an assignment is not robust ex post efficient , then it is not sd efficient .",
    "if an assignment @xmath9 is not robust ex post efficient , then there exists at least one decomposition of @xmath9 into deterministic assignments in which at least one deterministic assignment is not pareto optimal . but",
    "this implies that there exists at least one deterministic assignment @xmath69 consistent with @xmath9 that is not pareto optimal .",
    "by fact  [ fact : po : ttc ] , @xmath69 admits a trading cycle @xmath157 . since @xmath69 is consistent with @xmath9 , each object @xmath7 that points to an agent @xmath6 in the cycle is such that @xmath47 .",
    "now consider a random assignment @xmath8 which is the same as @xmath9 except that each agent @xmath6 gets @xmath158 probability less of the object that was pointing to it and @xmath158 probability more of the object he points to in cycle @xmath157 .",
    "assignment @xmath9 is such that @xmath40 for all @xmath4 and @xmath159 for all @xmath160 .",
    "hence @xmath9 is not sd - efficient .",
    "sd - efficiency is a strictly stronger concept than robust ex post efficiency .",
    "although @xcite did not explicitly define the concept robust ex post efficiency , they showed that a random assignment that has only one decomposition which is a randomization over pareto optimal assignments does not satisfy sd - efficiency .",
    "hence robust ex post efficiency does not imply sd - efficiency .",
    "next , we show that ex post efficiency does not imply robust ex post efficiency so that robust ex post efficiency is a strictly stronger concept than ex post efficiency .",
    "[ remark : expostnotrobust ] consider the assignment problem assignment @xmath8 in the proof of theorem  [ th : expost - not - combinatorial ] .",
    "assignment @xmath8 which is the result of random serial dictatorship is ex post efficient .",
    "however , there is a deterministic assignment @xmath69 consistent with @xmath8 that is not pareto optimal . hence @xmath8 is not robust ex post efficient .",
    "hence , we get the following .",
    "the random serial dictatorship mechanism may return an assignment that is not robust ex post efficient .",
    "the simple theorem above strengthens the observation of @xcite that random serial dictatorship is not sd - efficient .",
    "any robust ex post efficient point must lie on a face of the assignment polytope where all extreme points of the face are vectors of pareto optimal assignments .",
    "suppose not , then there is a robust ex post efficient point @xmath125 that is in the interior of the assignment polytope .",
    "then there is a @xmath158 ball centered around @xmath125 that is contained in the polytope .",
    "let @xmath8 be an extreme point that is not pareto optimal .",
    "choose @xmath161 small enough such that @xmath162 lies in the @xmath158 ball .",
    "then one can write @xmath125 as a convex combination of @xmath163 and @xmath8 . moreover , since @xmath163 belongs to the assignment polytope , @xmath163 can in turn be written as a convex combination of vectors of assignments .",
    "hence , we have expressed x as a convex combination of extreme points of the assignment polytope and one of which is not a pareto optimal assignment .",
    "so @xmath125 can not be robust ex post efficient .",
    "hence , any robust ex post efficient must lie on a face of the assignment polytope .",
    "we can then use the same argument to say that all extreme points of the face must correspond to pareto optimal assignments .",
    "we can consider similar computational questions regarding robust ex post efficiency : _ what is the computational complexity of checking whether an assignment is robust ex post efficient ? _",
    "our first observation is that the problem is in conp .",
    "[ remark : inconp ] the problem of checking whether a random assignment is robust ex post efficient is in conp . by theorem  [",
    "th : robust - eff - charac ] , any non - pareto optimal deterministic assignment consistent with the random assignment is a witness that the random assignment is not robust ex post efficient . also note that it can be checked in linear time whether a given assignment is pareto optimal ( fact  [ fact : po : ttc ] ) .",
    "due to the characterization of robust efficiency in theorem  [ th : robust - eff - charac ] , the problem of testing robust ex post efficiency is equivalent to checking whether there exists a constrained non pareto optimal assignment .",
    "previously , it has been shown that checking whether there exists a constrained pareto optimal assignment is np - complete  @xcite .",
    "next we give a simple necessary condition for robust ex post efficiency .",
    "if a random assignment is robust ex post efficient , there exists no consistent deterministic assignment in which no agent gets his most preferred object .",
    "the argument is as follows . for a random assignment @xmath8",
    ", it is sufficient to show that if there exists a consistent deterministic assignment @xmath9 in which no agent gets his most preferred object , then that assignment is not pareto optimal and hence @xmath8 is not robust ex post efficient .",
    "if no agent gets their most preferred object , then there exists no permutation over the agents under serial dictatorship returns @xmath8 . therefore ,",
    "by fact  [ fact : po : sd ] , @xmath9 is not pareto optimal .",
    "hence by theorem  [ th : robust - eff - charac ] , @xmath8 is not robust ex post efficient .",
    "next , we show that robust ex post efficiency is combinatorial .",
    "[ th : robust - is - combinatorial ] robust ex post efficiency is combinatorial .",
    "if @xmath8 is not robust ex post efficient , then there exists a deterministic assignment @xmath164 where @xmath57 for @xmath165 and @xmath164 is not pareto optimal .",
    "hence for deterministic assignment @xmath164 , @xmath47 for @xmath165 .",
    "thus @xmath164 is not robust ex post efficient because it admits a pareto dominated deterministic assignment that is consistent with it .",
    "the same argument also shows that is @xmath9 is not robust ex post efficient , then @xmath8 is not robust ex post efficient .    in the previous section",
    ", we mentioned that the complexity of testing whether the uniform assignment is ex post efficient is still open . on the other hand",
    ", it can be easily checked whether the uniform assignment is robust ex post efficient .",
    "the uniform assignment is robust ex post efficient if and only if the preferences are unanimous .",
    "the arguments is as follows .",
    "if preferences are unanimous then every assignment is pareto optimal .",
    "if preferences are not unanimous , then for some two objects @xmath7 and @xmath144 , at least two agents have opposite preferences over them . in this case ,",
    "any assignment that gives each of @xmath7 and @xmath144 to one of the two agents who prefers it less is not pareto optimal .",
    "two agents are said to of the same _ type _ if they have identical preferences .",
    "we show that if there are a constant number agents , types , then robust ex post efficiency can be checked in polynomial time .",
    "[ lemma : agent - types ] if there is a trading cycle consistent with random assignment that contain multiple agents of the same type , then there also exists a pareto cycle consistent with the random assignment , in which there is at most one agent of the same type .",
    "we show that if there exists a pareto cycle also containing @xmath102 agents of the same type , then there exists a pareto cycle containing @xmath166 agents of the same type .",
    "consider the pareto cycle in which the @xmath102 agents of the same type are @xmath167 where agent @xmath168 is the agent who has the least preferred object pointing to it among all the objects that point towards the @xmath102 agents .",
    "then agent @xmath168 can point directly to the object that agent @xmath169 points to thereby forming a smaller cycle only including @xmath170 .",
    "if there are a constant number of agent types , robust ex post efficiency can be checked in polynomial time .",
    "we will use the characterization of robust efficiency in theorem  [ th : robust - eff - charac ] to propose an algorithm . since we will check for a pareto dominated assignment , by fact  [ fact : po : ttc ] ,",
    "such an assignment admits a trading cycle consistent with the random assignment . from lemma  [ lemma : agent - types ] , we know that if there is a trading cycle consistent with the random assignment then there is also a trading cycle consistent with the assignment in which there is at most one agent of one type . in order to check for robust efficiency ,",
    "we need to check whether there is a trading cycle for which the agents outside the trading cycle are assigned an object each from outside the trading cycle consistent with the random assignment .",
    "we will use the fact that if there exists a trading cycle consistent with the assignment which contains multiple agents of the same type and if the agents outside the trading cycle are also perfectly matched to an object consistent with the random assignment , then there exists a trading cycle consistent with the assignment which contains at most one agent of each type and for which the agents outside the trading cycle are also perfectly matched to an object consistent with the random assignment .",
    "note that are constant number @xmath171 of possible orderings in which agent types are present in a pareto cycle in which there is at most one agent of the same type . for each of the agents types in the cycle , there may be @xmath172 options of objects that point to him .",
    "for each agent type there are @xmath172 agents that could be used for that type .",
    "therefore , the number of pareto cycles to be considered is at most @xmath173 where in each pareto cycle there are at most @xmath140 agents and @xmath140 objects .    for each of the ( short ) pareto cycles considered that are not more than @xmath173",
    ", we need to check whether the other agents can be perfectly matched to the unallocated objects .",
    "this can again be checked in polynomial time via the algorithm to check whether a perfect matching exists for agents _ not _ in the pareto cycle .",
    "it will be interesting to check whether there exists a fixed parametrized algorithm with parameter number of agent types .",
    "we examined different aspects of ex post efficiency of random assignments .",
    "one of the most important technical result in the paper is that testing ex post efficiency is np - complete .",
    "the result contrast with the followings facts ( 1 ) ex post stability in the two sided marriage setting can be tested in polynomial time via an lp  @xcite ; ( 2 ) sd - efficiency can be tested in polynomial time ; and ( 3 ) an ex post efficient assignment can be computed in polynomial time .",
    "one implication of the np - completeness result is that the set of ex post efficient assignments can not be characterized compactly .",
    "unless p = np , there is no polynomial - time separation oracle for the convex hull of pareto optimal assignments . due to the well - known equivalence of optimization and separation",
    ", it follows that optimizing a linear function over the convex hull of pareto optimal assignments is np - complete as well .",
    "another corollary is that for the marriage market model , testing ex post effiency is np - complete because the assignment setting can be viewed as a marriage market in which one side of the market is completely indifferent .",
    "we also showed that in the random assignment problem , robust ex post efficiency is combinatorial whereas ex post efficiency is not .",
    "the finding that ex post efficiency is not combinatorial contrasts with the fact that in randomized voting , ex post efficiency of a lottery simply depends on its support .",
    "a number of open problems arise as a result of this study .",
    "the complexity of checking whether a random assignment is robust ex post efficient is open .",
    "similarly , for a constant number of agent types , the complexity of checking whether a random assignment is ex post efficient is also open .",
    "computational aspects of pareto optimal deterministic assignments have been studied in great depth in recent years  @xcite .",
    "the more general randomized resource allocation settings provide a suitable ground for further developments in the algorithmic aspects of matching under preferences .",
    "nicta is funded by the australian government through the department of communications and the australian research council through the ict centre of excellence program .",
    "abraham , d.  j. , cechlrov , k. , manlove , d. , mehlhorn , k. , 2005 .",
    "pareto optimality in house allocation problems . in : proceedings of the 16th international symposium on algorithms and computation ( isaac ) .",
    "3341 of lecture notes in computer science ( lncs ) .",
    "11631175 .",
    "aziz , h. , brandl , f. , brandt , f. , 2014 .",
    "universal dominance and welfare for plausible utility functions . in : conitzer , v. , easley , d. ( eds . ) ,",
    "proceedings of the 15th acm conference on economics and computation ( acm - ec ) .",
    "forthcoming .",
    "roth , a.  e. , rothblum , u.  g. , vande vate , j.  h. , 1993 .",
    "stable matchings , optimal assignments , and linear programming .",
    "mathematics of operations research 18  ( 4 ) , 803828 803828 803828 803828 803828 .",
    "saban , d. , sethuraman , j. , 2013 .",
    "the complexity of computing the random priority allocation matrix . in : proceedings of the 9th international workshop on internet and network economics ( wine ) .",
    "lecture notes in computer science ( lncs ) .",
    "js1353/pubs / rpcomplexity.pdf ."
  ],
  "abstract_text": [
    "<S> in the random assignment problem , objects are randomly assigned to agents keeping in view the agents preferences over objects . </S>",
    "<S> a random assignment specifies the probability of an agent getting an object . </S>",
    "<S> we examine the structural and computational aspects of ex post efficiency of random assignments . </S>",
    "<S> we first show that whereas an ex post efficient assignment can be computed easily , checking whether a given random assignment is ex post efficient is np - complete . hence implementing a given random assignment via deterministic pareto optimal assignments </S>",
    "<S> is np - hard . </S>",
    "<S> we then formalize another concept of efficiency called robust ex post efficiency that is weaker than stochastic dominance efficiency but stronger than ex post efficiency . </S>",
    "<S> we present a characterization of robust ex post efficiency and show that it can be tested in polynomial time if there are a constant number of agent types . </S>",
    "<S> it is shown that the well - known random serial dictatorship rule is not robust ex post efficient . </S>",
    "<S> finally , we show that whereas robust ex post efficiency depends solely on which entries of the assignment matrix are zero / non - zero , ex post efficiency of an assignment depends on the actual values .    random assignment , efficiency + _ jel _ : c62 , c63 , and c78    pareto optimality has been termed the _ </S>",
    "<S> `` single most important tool of normative economic analysis '' _  </S>",
    "<S> @xcite . </S>",
    "<S> it appeals to the idea that there should not exist another possible outcome different from the social outcome which all the agents prefer . </S>",
    "<S> we consider pareto optimality in the _ random assignment problem _ which is a fundamental and widely applicable setting in computer science and economics  ( see e.g. , * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ) .    in a </S>",
    "<S> _ random assignment problem _ @xmath0 , there is a set of agents @xmath1 , a set of objects @xmath2 , and a preference profile @xmath3 that specifies for each agent @xmath4 his _ strict _ preferences over objects in @xmath5 . the goal is to find a desirable assignment keeping in view the preferences of the agents . </S>",
    "<S> a _ random assignment _ which we will simply refer to as assignment assigns the probability of agents getting objects . </S>",
    "<S> a random assignment can be represented as a bistochastic matrix in which each entry denotes the probability of an agent getting an object . since both </S>",
    "<S> the probability of an agent getting some object and the probability that an object is allocated to some agent is one , each column and row of the random assignment matrix sums up to one . </S>",
    "<S> a _ deterministic assignment _ is a random assignment in which the probability of an agent getting an object is either one or zero . </S>",
    "<S> the advantage of using random assignments instead of deterministic assignments is that they can allow for better ex ante fairness . </S>",
    "<S> it is well - known that any random assignment can be a result of a probability distribution over deterministic assignments  @xcite . </S>",
    "<S> a random assignment also a useful time - sharing interpretation whereby the probability of agent @xmath6 getting object @xmath7 is the fraction of time he will be matched to object @xmath7  ( see e.g. , * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ) .    in this paper , we focus on efficiency of random assignments . a deterministic assignment @xmath8 is _ pareto optimal _ if there exists no other deterministic assignment @xmath9 such that each agent weakly prefers his object allocated in assignment @xmath9 and at least one agent strictly prefers his object allocated in assignment @xmath9 . </S>",
    "<S> when the assignment is random , pareto optimality can be generalized to two well - studied efficiency concepts  ex post efficiency and stochastic dominance ( sd ) efficiency . </S>",
    "<S> a random assignment is _ ex post efficient _ if it can be represented as a convex combination of pareto optimal deterministic assignments . </S>",
    "<S> a random assignment is sd - efficient is there exists no other random assignment which each agent weakly prefers and some agent strictly prefers with respect to the stochastic dominance relation . </S>",
    "<S> ex post efficiency is a weaker requirement than _ stochastic dominance ( sd ) efficiency _  @xcite .    </S>",
    "<S> the main research problem in this paper is to understand _ the structure and complexity of efficient assignments in particular ex post efficiency assignments_. we not only consider ex post efficiency and sd - efficiency but also introduce an intermediate notion called _ robust ex post efficiency _ that is weaker than sd - efficiency and stronger than ex post efficiency . </S>",
    "<S> we seek to understand the geometry of the ex post efficient polytope and where the robust ex post efficient and sd - efficient points lie within the ex post efficient polytope or the assignment polytope . </S>",
    "<S> an efficiency concept is deemed _ combinatorial _ if the efficiency of an assignment solely depends on which entries of the assignment matrix are zero or non - zero . </S>",
    "<S> we explore which of the efficiency concepts are combinatorial . </S>",
    "<S> we also consider natural computational problems related to efficiency of random assignments . </S>",
    "<S> previously , computational aspects of pareto optimal deterministic assignments have been studied in great depth in recent years  @xcite . </S>",
    "<S> similar analysis has been done for sd - efficient assignments where it has been shown that not only can an sd - efficient random assignment be computed efficiently  @xcite , a linear programming formulation can be used to check whether an assignment is sd - efficient or not  @xcite . however , to the best of our knowledge , the complexity of testing ex post efficiency has not been settled . testing </S>",
    "<S> ex post efficiency is also closely related to implemeting a random assignment with respect to discrete pareto optimal assignments .    </S>",
    "<S> if one is able to compute an sd - efficient assignment  @xcite , then the question arises that why should we bother with a less demanding notion of efficiency ? </S>",
    "<S> there are a number of reasons why implementation of ex post assignments and testing ex post efficiency is important . </S>",
    "<S> firstly , the algorithm to test sd - efficiency of a random assignment can not be used to test weaker notions of efficiency . secondly , </S>",
    "<S> in many scenarios , a random assignment may be given _ a priori _ because of various constraints and hence may not be sd - efficient . for example , the random assignment could be a result of an already decided time sharing agreement . </S>",
    "<S> such a random assignment may need to be implemented in any case and would preferably be implemented via pareto optimal deterministic assignments . for example , agents may already have a time sharing assignment in place and one may want to know whether it can be achieved by randomizing over deterministic pareto optimal assignments . </S>",
    "<S> thirdly , there may already be simple strategyproof method such as the uniform assignment rule in place where each agent gets @xmath10 of each object . </S>",
    "<S> one may want to implement the uniform assignment via a convex combination of pareto optimal assignments even if it may not be sd - efficient . </S>",
    "<S> we also note that sd - efficiency is incompatible with strategyproofness when also requiring anonymity  @xcite . </S>",
    "<S> finally , the convex hull of deterministic pareto optimal assignments is an interesting mathematical object and testing ex post efficiency of a random assignment is equivalent to checking whether a given assignment is in the convex hull . </S>",
    "<S> the problem has important connections with optimizing linear functions over this convex hull .    </S>",
    "<S> [ [ contributions ] ] contributions + + + + + + + + + + + + +    we first examine the problem of checking whether a given random assignment is ex post efficient and obtain insights into why the problem may be computationally challenging . </S>",
    "<S> we show that whereas computing an ex post efficient assignment is easy , checking whether a given random assignment is ex post efficient is np - complete . hence implementing a given random assignment via deterministic pareto optimal assignments </S>",
    "<S> is np - hard . </S>",
    "<S> even if it is known that a random assignment is ex post efficient , finding its pareto optimal decomposition is np - hard . </S>",
    "<S> our result also implies that optimizing over the convex hull of pareto optimal assignments is np - complete .    </S>",
    "<S> we formalize a new efficiency concept called _ robust ex post efficiency _ that is weaker than sd - efficiency but stronger than ex post efficiency . </S>",
    "<S> a characterization of robust ex post efficiency is also presented . </S>",
    "<S> previously , characterizing sd - efficiency has already attracted considerable interest  ( see e.g. , * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ; * ? ? ? </S>",
    "<S> * ) . </S>",
    "<S> we show that robust efficiency can be checked in polynomial time if there are a constant number of agent types .    </S>",
    "<S> we highlight that the well - known random serial dictatorship mechanism  @xcite is not robust ex post efficient . </S>",
    "<S> our finding strengthens the observation of @xcite that random serial dictatorship is not sd - efficient .    </S>",
    "<S> we show that whereas robust ex post efficiency is combinatorial , ex post efficiency is not . </S>",
    "<S> the finding that ex post efficiency is not combinatorial also contrasts with the fact that in randomized voting , ex post efficiency of a lottery simply depends on its support .    </S>",
    "<S> table  [ table : summary - expost ] summarizes some of the results . </S>"
  ]
}
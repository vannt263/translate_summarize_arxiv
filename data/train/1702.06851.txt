{
  "article_text": [
    "computational methods play an indispensable role in various branches of the physical @xcite , chemical and biological @xcite sciences . in many cases",
    "the underlying phenomenon being studied is modeled by either a single or a set of ordinary or partial differential equations .",
    "well known examples include the quantum schrdinger equation governing the time evolution of a quantum wave function @xcite , reaction - diffusion type systems @xcite describing chemical reaction or population dynamics ( such as swimming microorganism ) , and the navier - stokes equation modeling the motion of an incompressible newtonian fluid @xcite to mention a few . + over the years",
    ", numerical tools have played an ever increasing role in the advancement of scientific discoveries .",
    "they provide a unique opportunity to tackle many challenging scientific problems that are otherwise difficult to solve .",
    "this is the case , for instance , in complex turbulent flows , weather prediction , stochastic neural dynamics and many body physics with large degrees of freedom .",
    "surprisingly enough , computational methods and numerical simulations can actually ignite new fundamental ideas and ultimately lead to the development of new theories .",
    "one example that stands out is the concept of a soliton which emerged as a result of numerical experiments .",
    "solitons , shape - invariant nonlinear waves that exhibit particle - like behavior upon collision , were discovered in 1965 by zabusky and kruskal @xcite while performing numerical simulations on the korteweg - de vries equation @xcite .",
    "their findings sparked an intense research interests in many areas of physics and mathematics which subsequently led to the establishment of the inverse scattering transform and integrable nonlinear evolution equations @xcite .",
    "soon thereafter , the notion of soliton or solitary wave , spread to many diverse areas in the physical , chemical and biological sciences .",
    "examples include , optical spatial and temporal solitons @xcite , atomic bose - einstein condensates @xcite , atomic chains @xcite , molecular and biophysical systems @xcite and electrical lattices @xcite .",
    "+ a unifying theme among such diverse fields is the development of computational methods capable of accurately and efficiently capturing the physics under study . as such , numerous numerical tools have been developed in the last few decades to simulate evolution equations . among the most",
    "well known are the so - called exponential differencing method @xcite . here",
    ", the underlying evolution equation is written in an integral form which is then solved using exponential time - stepping schemes @xcite .",
    "an issue of great importance is how to devise numerical schemes capable of enforcing physics into the simulations .",
    "for example , when it comes to simulating a conservative dynamical system one faces the challenge of imposing conservation laws .",
    "if the system under study happens to be hamiltonian , a commonly used method is the geometric or symplectic integrators @xcite .",
    "they are capable of exactly preserving the symplectic area in phase space and the hamiltonian .",
    "in some cases however , symplectic or geometric algorithms can be costly and tedious to implement .",
    "when it comes to nonlinear ( or even linear ) dissipative evolution equations , the situation is even more unclear in how to a priori incorporate dissipation / rate equations induced from the original dynamical systems into the simulations .",
    "+ in this paper we introduce the _ time - dependent spectral renormalization _ method as an effective and simple computational tool to numerically simulate linear and nonlinear evolution equations .",
    "the proposed algorithm has the capability to incorporate the underlying laws of physics in the form of an arbitrary number of conservation laws or dissipation / rate equations .",
    "the idea is to convert the given dynamical system from its evolution into an integral equation form .",
    "this approach allows us to think of the solution sought as being a fixed point in space and time of the resulting integral equation rather than being a solution to an evolution equation .",
    "to numerically compute that space - time fixed point , a _ time - dependent _ renormalization factor is introduced which is found using the _ physical properties _ of the original governing evolution equation such as conservation laws or dissipation rates .",
    "the solution is then obtained from a renormalized fixed - point iteration scheme .",
    "this novel time - dependent spectral renormalization scheme allows the flexibility to  integrate \" physics into the numerical simulation and allows the numerical method  to keep in touch \" with the original evolution system .",
    "the proposed method is applied on benchmark problems : the classical nonlinear schrdinger , integrable @xmath0 symmetric nonlocal nonlinear schrdinger and viscous burgers equations each being a prototypical representative of conservative and dissipative evolution equations .",
    "our scheme generalizes the _ time - independent _ spectral renormalization method introduced by ablowitz and musslimani in 2005 @xcite to the _ time _ domain .",
    "we point out that the steady state spectral renormalization has been widely used in many applications related to nonlinear optics @xcite , bose - einstein condensation @xcite and water waves @xcite . +   +",
    "the paper is organized as follows . in sec .",
    "[ time - dep - spec ] we introduce the time - dependent spectral renormalization scheme and detail its implementation to general evolution equations .",
    "the numerical implementation of the algorithm to conservative systems is given in sec .",
    "[ conserve_sec ] where the classical nonlinear schrdinger and integrable @xmath0 symmetric nonlocal nonlinear schrdinger equations are used to study important properties of the method .",
    "application of the scheme to dissipative evolution equations is presented in sec .",
    "[ dissipate_sec ] where the burgers equation is used as a benchmark problem to highlight the generalities of the proposed scheme .",
    "we conclude in sec.[conclude ] .",
    "in this section we introduce the time - dependent spectral renormalization method . to begin , we consider a complex or real valued wave function @xmath1 that depends on space variable @xmath2 and time @xmath3 the time evolution of @xmath4 is assumed to be governed by @xmath5 \\;,\\ ] ] where @xmath6 is a linear differential operator and @xmath7 is a nonlinear function of @xmath8 the spatial domain @xmath9 over which the partial differential equation ( [ time - field ] ) is defined can be either bounded or unbounded ( the whole space as an example ) . like most physically relevant evolution equations , eq .",
    "( [ time - field ] ) represents either a conservative or dissipative dynamical system . in the former case , this implies the existence of finite ( few ) or infinite number of conserved quantities given by @xmath10 dx = c_j \\;,\\ ] ] where all @xmath11 are constant in time . in the latter case , a set of dissipation or rate equations induced from the dynamical system ( [ time - field ] )",
    "are derived in the form @xmath12 dx = \\int_\\omega j_j[\\psi ( x , t ) ] dx\\;,\\ ] ] where @xmath13 and @xmath14 are functions of @xmath1 and referred to as densities and fluxes respectively . to highlight the effectiveness of our method and emphasize its usefulness",
    ", we shall limit the discussion to linear differential operators @xmath15 with constant coefficients given by @xmath16 where all @xmath17 are constants in space and time .",
    "the treatment of a more general case for which all or some of the coefficients @xmath17 are allowed to depend on @xmath2 and/or @xmath18 is also possible . in this situation , any such term(s )",
    "would be incorporated into the nonlinearity @xmath19.$ ] other variants of linear operators @xmath6 that differ from ( [ l - phys ] ) are in principle allowed . in this paper",
    "we consider problems in one space dimension only . the extension and applications to higher dimensions",
    "will be considered in future work .",
    "equation ( [ time - field ] ) is supplemented with the initial condition @xmath20 and boundary conditions chosen from the following :    * periodic boundary conditions in the case of a bounded domain .",
    "that is to say , @xmath21 where @xmath22 is the spatial domain size and @xmath23.$ ] * rapidly decaying to zero or vanishing boundary conditions on the whole real line , i.e. , @xmath24 for all @xmath25    in the case where the evolution equation ( [ time - field ] ) is posed on the whole real line @xmath26 with decaying boundary conditions , space discretization is done spectrally with the help of the symmetric forward and inverse fourier transforms defined by ( throughout the rest of the paper hat indicates quantities in fourier domain ) @xmath27",
    "\\equiv \\hat{\\psi}(k , t ) = \\frac{1}{\\sqrt{2\\pi } } \\int_{-\\infty}^{+\\infty }    \\psi ( x , t ) e^{-ikx }   dx \\;,\\ ] ] @xmath28 = \\psi ( x , t ) =   \\frac{1}{\\sqrt{2\\pi } } \\int_{-\\infty}^{+\\infty }   \\hat{\\psi}(k , t ) e^{ikx } dk\\;,\\ ] ] which is valid as long as @xmath1 is square integrable on the whole real line at all time . for problems formulated on a bounded spatial interval",
    "@xmath29 $ ] we instead represent the field @xmath1 in terms of its fourier series expansion @xmath30 @xmath31 where @xmath32 and make frequent use of the discrete fourier transform .",
    "the implementation of the time - dependent spectral renormalization algorithm to a general evolution equation of the type given in ( [ time - field ] ) follows several simple steps which we next outline in detail .    1 .",
    "rewrite eq .",
    "( [ time - field ] ) in a time - dependent integral form .",
    "this can be accomplished with the help of , for example , the  variation of constant \" formula or the integrating factor method . in our case",
    "we find @xmath33\\;.\\end{aligned}\\ ] ] here , @xmath34 is the so - called time propagator ( or semi - group ) defined by @xmath35 equation ( [ psi - int - gen ] ) is known in the mathematical and physical literature as duhamel s formula .",
    "it is often used as a departing point for the derivation of many _ time - stepping _ schemes such as runge - kutta @xcite and exponential differencing methods among others @xcite .",
    "importantly , formula ( [ psi - int - gen ] ) implies that the solution @xmath1 can be viewed as a fixed point in space and time rather than being a solution of a dynamical system . that is to say , eq .",
    "( [ psi - int - gen ] ) is no longer an evolution equation .",
    "the propagator @xmath34 can be computed with the aid of the fourier transform or fourier series .",
    "thus , we have the following representation @xmath36 \\;,\\ ] ] where @xmath37 is an arbitrary square - integrable or period function and @xmath38 is the fourier symbol corresponding to the linear operator @xmath6 defined by ( here @xmath39 ) @xmath40 for example , if @xmath41 where @xmath42 stands for the @xmath43 derivative with respect to @xmath2 and @xmath44 are constants then @xmath45 it should be pointed out that for problems posed on a bounded interval with periodic boundary conditions , the fourier transform @xmath46 defined in ( [ fourier - forward - gen ] ) is replaced by the discrete fourier transform .",
    "2 .   introduce a _ time - dependent _ renormalization factor @xmath47 via the change of variables @xmath48 here , @xmath49 is either real or complex valued function depending on the nature of the partial differential equation ( [ time - field ] ) . at this stage",
    ", @xmath47 is an unknown function of time and is _ assumed _ to be real and nonzero at all times .",
    "a remark about complex renormalization is discussed in sec .",
    "[ conserve_sec ] in connection to the classical and @xmath0 symmetric nls equations .",
    "substituting eq .",
    "( [ time - renorm - gen ] ) into ( [ psi - int - gen ] ) gives an integral representation for the new field @xmath50\\;.\\end{aligned}\\ ] ] equation ( [ phi - int - gen ] ) constitutes the basis for the spectral renormalization method .",
    "the solution @xmath51 is numerically found from the fixed - point iteration @xmath52\\ ; , \\nonumber \\\\ \\nonumber \\\\   & & n=1,2,3 , \\cdots .\\end{aligned}\\ ] ] this iteration is seeded with an initial guess @xmath53 the following three steps focus on how to find the renormalization factor , approximate the above time integral and algorithm implementation .",
    "3 .   compute the renormalization factor @xmath47 from the associated conservation law(s ) or dissipation ( rate ) equation(s ) _ induced _ from the dynamical system ( [ time - field ] ) . specifically speaking",
    ", we have the following : * if eq .",
    "( [ time - field ] ) is conservative , then the renormalization factor is computed from ( [ conserve - quant ] ) , i.e , @xmath54 dx = c_j \\;.\\ ] ] * if eq .",
    "( [ time - field ] ) is dissipative , then the renormalization factor is derived from the rate equation ( [ diss - quant ] ) which gives an evolution equation for @xmath47 in the form @xmath55 dx   \\nonumber \\\\ & = & \\int_\\omega j_j[r(t)\\phi ( x , t ) ] dx\\;.\\end{aligned}\\ ] ] + the calculation of @xmath47 is exemplified in secs .  [ conserve_sec ] and [ dissipate_sec ] when applied to the nls and viscous burgers equations .",
    "this crucial step ( computing the renormalization factor ) allows the simulation  to keep in touch \" with the original evolution equation and incorporate relevant physics into the integrator . since eq .",
    "( [ time - field ] ) can , in principle , admit more than one conserved quantity or alternatively several dissipation laws , one can in turn use several combinations to derive a formula for the renormalization factor @xmath47 .",
    "this flexibility amounts to incorporating conservation laws and rate equations on demand .",
    "4 .   evaluate the time integral that appears in eq .",
    "( [ phi - int - gen ] ) .",
    "this is one of the most important steps in the algorithm implementation .",
    "for ease of presentation we define the quantity @xmath56\\;.\\ ] ] thus , the integral we are interested in computing is given by @xmath57 in fourier space this integral is rewritten in the form @xmath58 in terms of the new integral @xmath59 , eq .",
    "( [ phi - int - gen ] ) takes the simplified form @xmath60 to numerically evaluate the integral ( [ i - fourier - gen ] ) we divide the time interval @xmath61 $ ] with @xmath62 being the end evolution time into @xmath63 ( even ) equally spaced intervals each of size @xmath64 then , denote the time levels by @xmath65 clearly , @xmath66 ( initial time ) and @xmath67 ( end evolution time ) . after some algebra , we find that @xmath68 satisfies the recursion relation @xmath69 , \\nonumber \\\\\\end{aligned}\\ ] ] for all @xmath70 note that when @xmath71 we have @xmath72 our goal next is to derive an approximate formula for the integral that appears in eq .",
    "( [ i - fourier - recursion - gen ] ) . this can be accomplished by replacing the integrand @xmath73 by either a constant , linear , quadratic or higher order polynomial of the time variable @xmath74 .",
    "this is referred to as filon integration @xcite .",
    "see also @xcite for applications of the filon method in exponential time differencing . in this paper , we present results only for linear interpolants . on each time interval",
    "@xmath75 we approximate the function @xmath73 by a linear function of @xmath74 @xmath76 ( \\tau - t_m)\\;.\\end{aligned}\\ ] ] substituting eq .",
    "( [ g - interp - gen ] ) into ( [ i - fourier - recursion - gen ] ) and performing integration by parts , we arrive at the result @xmath77,\\end{aligned}\\ ] ] valid for all @xmath78 with @xmath79 here , we define @xmath80 + @xmath81 once convergence of the iterative scheme ( [ i - fourier - recursion-2-gen ] ) ( in space and time simultaneously ) is achieved , the outcome would be the integral @xmath82 or @xmath83 this function will be used later in formula ( [ phi - int - gen - sim ] ) . since the coefficients @xmath84 and @xmath85 depend only on @xmath86 and the fourier mode @xmath87 ( but not on the solution itself or the iteration index @xmath88 ) they are pre - computed only once .",
    "it is highly conceivable that @xmath38 could vanish at some value(s ) of the fourier mode @xmath87 as is the case , for example , when @xmath89 which gives @xmath90 in such a situation , formulas ( [ quad_coeffs - gen - a ] ) and ( [ quad_coeffs - gen - b ] ) are no longer valid and their values will be replaced by their corresponding @xmath91 limit given by @xmath92 and @xmath93 this idea was implemented in the context of exponential time differencing @xcite .",
    "another way to avoid dividing by zero is to use cauchy integral formula @xcite .",
    "5 .   implement the time - dependent spectral renormalization fixed - point iteration based on eq .",
    "( [ phi - int - gen ] ) or ( [ phi - int - gen - sim ] ) .",
    "below we write it both in physical and fourier spaces respectively : @xmath94 @xmath95 where @xmath96 at every iteration step @xmath97 the function @xmath59 or alternatively @xmath82 is obtained from eq .",
    "( [ i - fourier - recursion-2-gen ] ) .",
    "the iteration scheme ( [ phi - int - iterate - phys - gen ] ) or equivalently ( [ phi - int - iterate - four - gen ] ) is seeded with an  arbitrary \" initial guess @xmath98 that satisfies the corresponding boundary conditions .",
    "typical examples include :    1 .   @xmath99 the initial condition ( [ ic ] ) , 2 .   @xmath100 with @xmath101 an  arbitrary \" function of time , 3 .   random function in space and time .",
    "convergence is achieved when the relative error between successive iterations is less than a prescribed level of error tolerance @xmath102 , i.e. , @xmath103 as @xmath104 .",
    "before we move on to present specific examples , we would like first to emphasize the strengths and advantages of the time - dependent spectral renormalization scheme .",
    "* the time - dependent spectral renormalization scheme treats space and time on equal footing and replaces the underlying dynamical system by an integral equation .",
    "the advantage would be to view the solution as a fixed - point in space and time which is then computed using a fixed - point iteration .",
    "importantly , at each iteration step , the wave function @xmath1 is known at all time grid points .",
    "this places a fundamental difference between the current method and all other time - stepping exponential integrator type schemes . having said that , the method comes with a caveat : it increases the dimensionality of the problem . *",
    "the time - dependent spectral renormalization approach allows one to choose the size of the total time interval @xmath62 to be _ large _ enough such that the standard ( _ unrenormalized , i.e , @xmath105 _ ) fixed point iteration @xmath106\\;,\\end{aligned}\\ ] ] will _ fail to converge_. one way to make the iteration ( [ direct - fp ] ) converge is to choose a _ small _ time interval so that the right hand side of eq .",
    "( [ direct - fp ] ) ends up being a contraction map .",
    "however , for many realistic applications the total time interval is such that the right hand side of eq .",
    "( [ direct - fp ] ) is most likely not a contraction .",
    "this fact highlights another important aspect of the time - dependent spectral renormalization approach . * when simulating an evolution equation , like the one given in eq .",
    "( [ time - field ] ) , it is highly desirable to design a time - stepping scheme that is able to capture , incorporate and preserve the underlying physics of the problem . for example , when numerically solving the time - dependent quantum schrdinger equation in a random potential , conservation of the total probability and the system s total energy should be embedded into the scheme .",
    "a few methods have been proposed that are capable of imposing partial physics into the simulation .",
    "the first is based on normalized gradient flow @xcite which uses conservation of total number of atoms ( or total probability ) and the other is the so - called symplectic or geometric integrators @xcite .",
    "the latter is suitable for hamiltonian systems and , at each time step , exactly preserves the area in phase space .",
    "however none of the above mentioned methods can simultaneously impose an arbitrary number of conserved quantities nor are applicable to dissipative dynamical systems .",
    "the time - dependent spectral renormalization method is capable of incorporating any number or combination of conservation laws and dissipation rates on demand .",
    "* equation ( [ time - field ] ) is an evolution equation that determines the state of an initial condition at later time . as such",
    ", a central question is how can one be sure that the outcome of the simulation indeed satisfies eq .",
    "( [ time - field ] ) ?",
    "this issue becomes of paramount importance when simulating a dynamical system for large times .",
    "numerical stability does not provide a guarantee that the outcome is indeed faithful . by recasting the underlying dynamical system in an integral form the solution",
    "is now viewed as a fixed - point where space and time are treated on equal basis . as a consequence ,",
    "the equation is no longer viewed as an evolution system .",
    "thus , upon convergence of the iterative scheme one is then guaranteed that the outcome is indeed a solution . *",
    "the scheme performance is satisfactory given the fact that the time integral ( [ i - space - gen ] ) or ( [ i - fourier - gen ] ) is approximated with the trapezoidal rule  one of the most basic and  non trivial \" ways to approximate an integral .",
    "as we show below , in spite of this relatively simple quadrature method , the outcome of the simulation agrees well with the exact solution .",
    "furthermore , the algorithm is robust and stable in the sense that it converges even for a coarse time grid .",
    "* generally speaking , when an explicit time stepping discretization scheme is implemented on a certain type of partial differential equation , numerical stability puts an upper bound on the time grid spacing @xmath86 that depends on the spatial grid size @xmath107 .",
    "this is known in the literature as the cfl condition @xcite .",
    "therefore , refining the spatial grid spacing ( to obtain a better resolution ) comes at the expense of smaller @xmath86 .",
    "being a fixed - point equation , the spectral renormalization scheme seems to be free of such limitations . in some cases",
    ", this observation manifests itself by choosing larger @xmath86 independent of @xmath107 .",
    "so far , we have presented a general framework where a solution to an evolution equation of the type given in eq .",
    "( [ time - field ] ) can be numerically obtained by a renormalized time - dependent fixed - point iteration . in the next two sections we implement this scheme on two important and physically relevant examples that represent conservative and dissipative dynamical systems .",
    "as a prototypical example representing a conservative dynamical system , we consider the classical nonlinear schrdinger ( nls ) equation @xcite @xmath108 where @xmath109 is a complex - valued function of the real variables @xmath2 and time @xmath110 subscripts indicate partial derivatives with respect to @xmath2 and @xmath111 equation ( [ nls ] ) is posed on the whole real line and is supplemented with the following boundary and initial conditions respectively : @xmath1 goes to zero sufficiently fast as @xmath112 and @xmath113 which is assumed to be smooth and square - integrable on the whole real line . in this section",
    ", we will focus on two different kind of initial conditions : one that leads to a single pure ( moving ) soliton , i.e. , @xmath114 and the other is a gaussian wave packet , @xmath115 two main reasons for why we chose the nls as a test bed for the performance of the time - dependent spectral renormalization scheme .",
    "the first is due to its wide applications in optics , condensed matter physics ( such as bose - einstein condensation , superfluidity and superconductivity ) and fluid mechanics ( deep water waves ) . the second reason is tied to the fact that eq .",
    "( [ nls ] ) is an integrable evolution equation and admits an infinite number of conserved quantities .",
    "furthermore , it admits the exact moving soliton @xmath116 } \\;,\\ ] ] where @xmath117 is a real constant used to generate momentum .",
    "this one parameter family of solutions will later be used as a test bed for numerical algorithm s performance .",
    "we emphasize that integrability or existence of an infinite number of conservation laws is not required for the implementation of the algorithm .",
    "all that is needed is some number of conserved quantities . for the nls equation",
    ", we have the following three physically relevant conserved quantities : +   + @xmath118= c_3\\;,\\end{aligned}\\ ] ] where @xmath119 are real constants .",
    "thus , we have @xmath120 and @xmath121 table [ tab1 ] lists various values of these time - invariant quantities for two different initial conditions .",
    "+    .list of the conserved quantities for two initial conditions : nls pure soliton solution and gaussian wavepacket . [ cols=\"<,^,^ \" , ]      + next , we outline each step in the process of numerical implementation of the time - dependent spectral renormalization method . to this end , the linear differential operator @xmath6 , its fourier symbol @xmath38 , the nonlinearity @xmath7 , the propagator ( or semigroup ) @xmath34 defined in formula ( [ propagator - def - general ] ) and the renormalized nonlinear term @xmath122 are respectively given by    * @xmath123 * @xmath124   = 2i |\\psi |^2\\psi \\;,\\;\\;\\ ;",
    "\\psi \\;\\text{is complex},$ ] * @xmath125 * @xmath126 * @xmath127 \\;,$ ] * @xmath128 * @xmath129 \\;.$ ]    solutions to eq .",
    "( [ nls ] ) , corresponding to initial condition ( [ ic ] ) are then computed from the following iterative scheme [ see also eq .",
    "( [ phi - int - iterate - four - gen ] ) ] @xmath130 with @xmath131 denoting the iteration index . at every fixed iterate number @xmath97 , the integral @xmath82",
    "is computed from formula ( [ i - fourier - recursion-2-gen ] ) which , for the nls case , reduces to    @xmath132   +   2ib   r^3(t_{m+1 } )   f\\left[| \\phi ( x , t_{m+1 } ) |^2 \\phi ( x , t_{m+1 } ) \\right ]   \\right\\}\\ ; , \\nonumber \\\\\\end{aligned}\\ ] ]    where @xmath78 and @xmath79 the coefficients @xmath84 and @xmath85 are defined in eqns .",
    "( [ quad_coeffs - gen - a ] ) and ( [ quad_coeffs - gen - b ] ) which , for the nls equation , read @xmath133 + @xmath134 at @xmath135 the value of @xmath84 and @xmath85 is replaced by their @xmath136 limit given by @xmath137 and @xmath138 we emphasize again that all quantities on the right hand side of eq .",
    "( [ i - fourier - recursion-2-gen - nls ] ) are _ known _ for all time grid points .",
    "the last and crucial step is the inclusion of physics into the simulations .",
    "this information is encoded in the renormalization factor @xmath47 which is found from the conserved quantities presented in ( [ nls - cons-1])([nls - cons-3 ] ) and their various combinations ; or alternatively from eq .",
    "( [ conserve - quant ] ) with @xmath139 and @xmath121 it should be pointed out that nls conservation laws will always lead to an expression for @xmath140 ( if @xmath141 is complex ) rather than @xmath142 itself .",
    "thus , assuming real valued renormalization factor we write @xmath143 ( the plus sign is chosen because of gauge invariance property of the nls ) . at the end of this section",
    ", we address the possibility of complex renormalization and use it to implement the proposed scheme .",
    "below we compile a list of choices that amount to enforcing either a  single \" or ",
    "multi \" physics . for convenience ,",
    "we use the short notation @xmath144 depends on both @xmath2 and @xmath111    1 .   _ conservation of power . _ from eq .",
    "( [ nls - cons-1 ] ) we find @xmath145 2 .",
    "_ conservation of momentum .",
    "_ from eq .",
    "( [ nls - cons-2 ] ) we obtain @xmath146 note that momentum can be enforced only when dealing with traveling waves .",
    "the sign of @xmath147 can be positive or negative depending on the direction of motion  see table [ tab1 ] for example .",
    "_ conservation of hamiltonian .",
    "_ from eq .",
    "( [ nls - cons-3 ] ) it follows that the renormalization factor @xmath142 satisfies the quadratic formula @xmath148 as we shall see later , eq .",
    "( [ r - cons - hamiltonian ] ) will be used as a base to impose conservation of hamiltonian along with other quantities . solving for @xmath142 we find @xmath149 if @xmath150 as is the case for stationary soliton initial conditions shown in table [ tab1 ] with @xmath151 then the plus sign will be chosen .",
    "otherwise , one needs to examine both signs during the simulations and see which one would make the right hand side of eq .",
    "( [ r - cons - hamiltonian-1 ] ) real and positive .",
    "_ conservation of power and momentum .",
    "_ multiplying eqns .",
    "( [ r - cons - power ] ) and ( [ r - cons - momentum ] ) we find @xmath152 it should be pointed out that expression ( [ r - cons - power - momentum ] ) is not the only way to impose conservation of power and momentum .",
    "in fact , multiplying eq .",
    "( [ r - cons - power ] ) by @xmath153 and ( [ r - cons - momentum ] ) by @xmath154 and add them one obtains @xmath155 for arbitrary nonzero @xmath153 and @xmath156 this last expression is valid as long as the right hand side is positive which is verified at each iteration step .",
    "_ conservation of power and hamiltonian . _ from eq .",
    "( [ r - cons - power ] ) it follows that @xmath157 which upon substitution in ( [ r - cons - hamiltonian ] ) gives @xmath158 this is particularly useful for initial conditions with positive @xmath159 alternative expression can be derived for @xmath142 that holds for negative values of @xmath159 indeed , replacing the middle term in ( [ r - cons - hamiltonian ] ) by @xmath160 would give @xmath161 6 .   _ conservation of momentum and hamiltonian .",
    "_ substituting the expression for @xmath142 obtain from eq .",
    "( [ r - cons - momentum ] ) into the first term of eq .",
    "( [ r - cons - hamiltonian ] ) we find @xmath162 this would be particularly useful for moving waves with positive @xmath159 7 .",
    "_ conservation of power plus momentum plus hamiltonian .",
    "_ to impose conservation of all three quantities we use eq .",
    "( [ r - cons - power ] ) and eq .",
    "( [ r - cons - momentum ] ) to rewrite the first and second terms in eq .",
    "( [ r - cons - hamiltonian ] ) , respectively , in the form @xmath163 and @xmath164 with this at hand , eq .   ( [ r - cons - hamiltonian ] ) gives @xmath165    it is obvious that the  space of options \" to single out one  favorite \" formula for the renormalization factor is rather large .",
    "the decision as to which expression to pick is based on various factors such as convenience , the physics of the problem and the numerical validity of that specific formula .",
    "[ h ]   on time obtained respectively from eqns .",
    "( [ r - cons - power ] ) and ( [ complex_r_define ] ) using conservation of power only . the real ( solid blue line ) and imaginary ( dashed red line ) parts of @xmath47",
    "are shown .",
    "columns ( a ) , ( b ) , ( c ) , and ( d ) correspond to the solutions shown in fig .",
    "[ fig1 ] rows ( a ) , ( b ) , ( c ) , and ( d ) , respectively.,title=\"fig : \" ]    [ h ]   as a function of number of iterations @xmath97 .",
    "( b ) intensity @xmath166 computed using various values of @xmath86 .",
    "the renormalization factor @xmath47 is computed using formula ( [ r - cons - power ] ) .",
    "computational parameters are : @xmath167.,title=\"fig : \" ]    [ h ]   by imposing conservation of power ( red ) using eq .",
    "( [ r - cons - power ] ) , momentum ( blue ) using ( [ r - cons - momentum ] ) , hamiltonian ( green ) using ( [ r - cons - hamiltonian ] ) , and power plus hamiltonian ( black ) using ( [ r - cons - power - hamiltonian ] ) .",
    "the computational parameters are : @xmath167.,title=\"fig : \" ]    [ h ] ) is used to determine @xmath168 the computational parameters are : @xmath167.,title=\"fig : \" ]     + we have implemented the time - dependent spectral renormalization scheme on the nls equation corresponding to three different types of initial conditions : ( i ) @xmath169 which gives rise to a stationary soliton , ( ii ) @xmath170 leading to a moving pure soliton carrying nonzero momentum  this is particularly important when it comes to enforcing conservation of momentum and ( iii ) a gaussian wavepacket @xmath171 our results are summarized in fig .",
    "[ fig1 ] which is obtained from iterating eqns .",
    "( [ phi - int - iterate - four - gen - nls ] ) and ( [ i - fourier - recursion-2-gen - nls ] ) using conservation of power only .",
    "thus , the renormalization factor @xmath47 used in the simulation is computed using expression ( [ r - cons - power ] ) . later on",
    "we shall consider the performance of the scheme when the renormalization is allowed to be complex . to examine the effectiveness of the method the iteration",
    "is seeded with four different initial guesses .",
    "the results are shown in fig .",
    "[ fig1 ] where a top view snapshots of the intensity @xmath172 are taken at various stages of the iterative process . in the first experiment , we fed the iteration with an initial guess identical to the nls initial condition , i.e. , @xmath173 this choice is somewhat natural to begin with .",
    "after a few rounds the wave function corrected itself and locked on the numerical soliton solution given in ( [ soliton ] ) with @xmath174  see fig .",
    "[ fig1](a ) . to test the scheme s sensitivity to initial guesses",
    ", we kept the same initial condition as before but now seeded the iteration with a random field in both space and time chosen to be uniformly distributed on the interval @xmath175\\times [ 0,1].$ ] interestingly enough , the outcome of the run was independent of the initial input as it again converged to the numerical soliton solution .",
    "this behavior is depicted in fig .",
    "[ fig1](b ) . undoubtedly , this demonstrates great robustness .",
    "we have repeated the numerical tests using different initial conditions .",
    "several simulations are shown in fig .",
    "[ fig1](c ) and ( d ) for traveling soliton and gaussian wavepacket respectively . while the results shown in this paper are carried out using conservation of power only ( as is the case in fig .",
    "[ fig1 ] ) we point out that other conservation quantities have been used to converge to the same solution .",
    "all numerical tests have been performed on a large spatial domain @xmath176 to insure the problem is indeed posed on the whole real line and guarantee decaying ( zero ) boundary conditions at all times . the total time interval used to produce fig .",
    "[ fig1 ] is @xmath177 which , _ without _ the use of any renormalization technique would cause the iterations to _ diverge _ .",
    "one interesting behavior we observed is that the renormalization factor approached zero when dealing with large time intervals .",
    "this is the case , for example , when computing stationary solitons @xmath178 while using real @xmath168 figure [ fig2 ] ( a ) , ( b ) and ( c ) depicts such behavior .",
    "probably , this is ultimately related to the fact that the pure soliton is given by @xmath179 however , this is not the case when solving the nls equation with gaussian input . here , the ( real ) renormalization factor remained on the same order as it started for all times  see figure [ fig2 ] ( d ) . to ensure convergence of the spectral renormalization method when @xmath62 ( end evolution time ) is _ very large _ we find it effective to divide the total simulation time interval @xmath61 $ ] into several subintervals @xmath180 , [ t_1 , t_2 ] , [ t_2 , t_3 ] , \\cdots .$ ] each @xmath181",
    "is chosen sufficiently large such that the spectral renormalization algorithm is effective , efficient and fast while at the same time fails _ without _ the presence of the spectral renormalization factor @xmath168 on the time span @xmath180 $ ] the proposed algorithm is implemented using the initial condition @xmath182 and stops until convergence to a fixed point in space and time is reached .",
    "the scheme is then applied to the time interval @xmath183 $ ] with initial condition @xmath184 the code is repeated until the whole time span is covered .",
    "typically , for problems integrated on time interval @xmath185 $ ] ten partitions would be sufficient for good performance .",
    "we point out that the spectral renormalization scheme converges even when one chooses a rather large time grid spacing @xmath186 figure [ fig3 ] shows maximum error between successive iterations defined by @xmath187 as a function of the iteration number @xmath188 for small @xmath86 the scheme converged after some @xmath189 iterates giving rise to an accurate soliton solution .",
    "interestingly , and some how unexpectedly , the iteration converged even for a relatively large @xmath86 ( on the order of 0.5 ) , however , the resulting solution shows poor accuracy .",
    "+   + to quantify the performance of the scheme , such as convergence , we have measured at each simulation run the maximum ( over space ) difference between the ( convergent ) numerically obtained solution @xmath190 and the exact soliton given in ( [ soliton ] ) .",
    "thus , we define @xmath191 furthermore , at each simulation run , we have monitored the difference between each numerically computed conserved quantity and its initial value as a function of time .",
    "precisely , we checked the time evolution of the following quantities : @xmath192 @xmath193 @xmath194 - c_3\\;.\\ ] ] for a fixed grid size @xmath86 ( or number of time grid points ) we ran four different types of simulations all using the same nls initial condition @xmath170 ( @xmath195 ) with each corresponding to different @xmath47 computed either from conservation of power ( [ r - cons - power ] ) , momentum ( [ r - cons - momentum ] ) , hamiltonian with the negative sign ( [ r - cons - hamiltonian-1 ] ) and conservation of momentum plus hamiltonian given in ( [ r - cons - power - hamiltonian ] ) .",
    "once convergence is achieved , the output @xmath196 is recorded and used to compute the maximum value of the quantities @xmath197 and @xmath198 listed in eqns.([max_norm])([h ] ) over the entire time domain .",
    "we then doubled the number of grid points ( halved the grid size @xmath86 ) and repeated the same experiment again .",
    "this procedure was performed eight times ( corresponding to eight different @xmath86 ) .",
    "the findings are summarized in fig .",
    "[ fig4 ] . as one can see from fig .",
    "[ fig4](a ) , the maximum error in the solution got smaller as the number of time grid points got doubled .",
    "thus , the error in the numerically computed solution is observed to converge at a second - order rate .",
    "furthermore , fig .",
    "[ fig4](b ) , ( c ) and ( d ) show the errors in the power , momentum and hamiltonian to be near machine precision when computed using their respective renormalization factor alone for each @xmath86 .",
    "otherwise , the error does not seem to be exceptional .",
    "[ h ] , power @xmath199 , momentum @xmath200 , and hamiltonian @xmath198 . the value of @xmath47 is found using conservation of power ( [ r - cons - power ] ) , momentum ( [ r - cons - momentum ] ) , and hamiltonian ( [ r - cons - hamiltonian-1 ] ) in panels ( a ) , ( b ) , and ( c ) , respectively .",
    "the computational parameters are : @xmath201.,title=\"fig : \" ]    it is of considerable interest to compare the time - dependent spectral renormalization method to other well known time - integrators . for that purpose",
    ", we choose to solve the nls equation ( [ nls ] ) with initial condition @xmath170 using three different second - order accurate schemes : integrating - factor runge - kutta ( rk2 ) , split - step fourier , and exponential time - differencing runge - kutta ( etdrk2 ) . in our spectral renormalization simulations we enforced conservation of power only and computed the renormalization factor @xmath47 from eq .",
    "( [ r - cons - power ] ) , which again is taken to be real . to quantify the performance of each scheme , we repeat the calculations that were performed in fig .",
    "4 using the four schemes mentioned above . in fig .",
    "[ fig5](a ) the solution errors obtained from all four integrators are observed to be on the same order of magnitude ( with the split - step error slightly lower than the others ) and converging at the same rate .",
    "the story is different when it comes to conservation of power . here",
    ", both the spectral renormalization and split - step methods are found to be numerically exact ( see in fig .",
    "[ fig5](b ) ) .",
    "note that the split - step method is known to conserve power exactly @xcite .",
    "the error obtained using these two methods are favorable in comparison to those obtained using runge - kutta schemes .",
    "for the parameters considered here , the spectral renormalization method yields power values that are around seven orders of magnitude more accurate . on the other hand ,",
    "the momentum and hamiltonian are most accurate when computed using the split - step method .",
    "we point out that for the runge - kutta schemes considered here , the physical quantities that any solution must satisfy appear to be constrained by the accuracy of the numerical solution .",
    "this is clearly not the case for the spectral renormalization scheme which can enforce certain relevant physical properties to excellent accuracy regardless of how accurate the solution is .",
    "finally , we have monitored the time evolution of the quantities @xmath197 and @xmath198 given in eqns.([max_norm])([h ] ) .",
    "they are displayed in fig .",
    "[ nls_error_evolve ] for a traveling wave soliton .",
    "the error in the computed solution compared to the exact one , @xmath202 , is found to grow with time .",
    "we point out that the measure we are using here is rather conservative and leads to worst case scenario .",
    "it is conceivable that the error can be significantly lower if other norm is used such as the @xmath203 norm .",
    "importantly , the errors in power , momentum and hamiltonian are machine precision accurate when computed using their respective renormalization factor ( fig .",
    "[ nls_error_evolve ] ) .",
    "+   + so far , we have implemented and examined the performance of the time - dependent spectral renormalization scheme under the assumption that @xmath47 is real valued .",
    "in fact this restriction is not needed for the formulation of the scheme .",
    "it is rather rooted in the fact that all nls conservation laws give the magnitude but not the phase of the renormalization factor . to remedy this issue",
    ", we propose here one possibility of lifting this constraint by deriving an expression for the renormalization factor directly from the nls equation . with this approach ,",
    "one is still able to incorporate conservation laws . to this end",
    ", we substitute @xmath204 into eq .",
    "( [ nls ] ) , integrate over the entire real line while utilizing the fast decay of the wave function ( localized boundary conditions ) and obtain @xmath205\\;,\\ ] ] where @xmath206 @xmath207 the constant @xmath208 is computed from ( [ alpha ] ) whereas @xmath209 is found from eq .",
    "( [ time - renorm - gen ] ) and ( [ ic ] ) .",
    "the result is @xmath210 formula ( [ complex_r_define ] ) provides an alternative expression for the renormalization factor @xmath141 _ without _ any assumption of being real .",
    "however , it is valid so long the quantity given in ( [ alpha ] ) is not zero .",
    "furthermore , this approach restricts the choices for @xmath211 as it could cause @xmath208 to become zero .",
    "last but not least : since @xmath212 is in general complex function , the term inside the exponent in eq .",
    "( [ complex_r_define ] ) can lead to growth which will eventually put serious strain on the time numerical integration . to enforce physics into ( [ complex_r_define ] )",
    "we replace @xmath213 that appears inside the exponent by any of the expression given in eqns .",
    "( [ r - cons - power])([r - cons - power - momentum - hamiltonian ] ) where @xmath214 is now replaced by @xmath215 we have implemented the time - dependent spectral renormalization scheme for the complex @xmath141 case and found that it converged to the solution from a large selection of initial guesses . the main difference between the real and complex renormalization approach is that the total time integration is now small and @xmath141 seems not to go to zero ; it rather oscillates in time ( see second row in fig .",
    "[ fig2 ] ) .      in this section",
    "we apply the time - dependent spectral renormalization method to the @xmath0 symmetric nonlocal nonlinear schrdinger equation @xmath216 where @xmath1 is a complex valued function of the real variables @xmath217 and time @xmath3 equation ( [ ptnls ] ) was first introduced in @xcite and shown to be an integrable infinite - dimensional hamiltonian dynamical system . as such , it admits an infinite number of conserved quantities .",
    "of particular interest is the conservation of the so - called  quasi - power \" @xmath218 furthermore , in @xcite a one soliton solution was obtained in the form of a breathing pure one soliton @xmath219 where @xmath220 are positive constants .",
    "interest in wave propagation in @xmath0 symmetric media has been at the forefront of research in physics and mathematics @xcite . here , we show how to use and implement the renormalization scheme to obtain a time - periodic soliton solution . to this end , we list , as before , the main ingredients needed to code the algorithm :    * @xmath221 * @xmath124   = -2i \\psi^2(x , t)\\psi^*(-x , t ) \\;,\\;\\;\\ ; \\psi \\;\\text{is complex}$ ] * @xmath222 \\right)^ * \\right ] \\ ; , $ ] * @xmath125 * @xmath126 * @xmath223 \\;,$ ] * @xmath224 * @xmath225 \\;.$ ]    solutions to eq .",
    "( [ ptnls ] ) corresponding to initial condition ( [ ic ] ) are then computed from the following iterative scheme [ see also eq .",
    "( [ phi - int - iterate - four - gen ] ) ] @xmath226 with @xmath131 denoting the iteration index . at every fixed iterate number @xmath97 , the integral @xmath82",
    "is computed from formula ( [ i - fourier - recursion-2-gen ] ) which , for the @xmath0 symmetric nls case , reduces to    @xmath227   -   2ib   r^3(t_{m+1 } )   f\\left[\\phi^2 ( x , t_{m+1 } ) \\phi^ * ( -x , t_{m+1 } ) \\right ]   \\right\\}\\ ; , \\nonumber \\\\\\end{aligned}\\ ] ]    where @xmath78 and @xmath79 the coefficients @xmath84 and @xmath85 are defined in eqns .",
    "( [ quad_coeffs - gen - a ] ) and ( [ quad_coeffs - gen - b ] ) .",
    "the renormalization factor @xmath47 is computed from the conservation law ( [ gamma_1_scalar ] ) and is given by ( assuming it is real ) @xmath228 note that the quantity in the denominator is real valued but not necessarily of a definite sign .",
    "an alternative formula for the renormalization that assumes it be _ complex _ can be derived in a manner similar to what we presented for the classical nls equation .",
    "to do so , we substitute @xmath229 into the nonlocal nls equation and , after some algebra , find @xmath230 \\ ; , \\ ] ] where @xmath231 is defined in ( [ alpha ] ) and @xmath232 @xmath233 the value of @xmath209 can be obtained by multiplying eq .",
    "( [ ic ] ) by @xmath234 and integrating over the entire spatial domain @xmath235 we have numerically coded the time - dependent spectral renormalization scheme to solve the initial boundary value associated with the nonlocal @xmath0 symmetric nls eq .",
    "( [ ptnls ] ) corresponding to initial condition given by @xmath236 the iteration scheme ( [ i - fourier - recursion-2-gen - ptnls ] ) was seeded with an initial guess @xmath237 after some number of iteration , the method converged and locked on the breathing soliton given in ( [ pt - sol ] ) . in order to quantify these numerical results we compare our converged solution to the exact one using the global max error given in ( [ max_norm ] ) .",
    "additionally , since we derive the renormalization factor directly from conservation of quasi - power ( [ r - nonloc ] ) we also measure the error in the quasi - power via the quantity @xmath238    [ h ] .",
    "global max error of the numerically calculated ( b ) solution and ( c ) @xmath239 .",
    "curves correspond to numerical solutions obtained through the spectral renormalization , integrating factor runge - kutta ( rk2 ) , exponential time - differencing runge - kutta ( etdrk2 ) , and split - step methods .",
    "conservation of  quasi - power \" given in eq .",
    "( [ r - nonloc ] ) is used to determine ( real ) @xmath168 the computational parameters are : @xmath240.,title=\"fig : \" ]    a summary of our findings using the renormalization factor defined in eq .",
    "( [ r - nonloc ] ) is shown in fig .",
    "[ fig6 ] . for this set of parameters , namely @xmath241 ,",
    "the soliton mode approaches a singularity at time @xmath242 \\approx 3.74 $ ] .",
    "the solution intensity is shown in fig .",
    "[ fig6](a ) where the soliton peak is rapidly growing in time .",
    "we next compare the numerical solutions obtained from our scheme with other second - order accurate time - integration techniques .",
    "figure  [ fig6](b ) reveals that all the methods exhibit second - order convergence .",
    "particularly , in fig .",
    "[ fig6](c ) we display the error in the quasi - power ( here given by @xmath243 ) obtained from four different methods .",
    "the split - step and spectral renormalization methods are found to preserve the quasi - power exactly , whereas the error computed using the runge - kutta type methods are orders of magnitude larger .",
    "lastly , we compare the real ( [ r - nonloc ] ) and complex ( [ nonlocal_complex_r ] ) versions of the renormalization factor .",
    "the two different forms of @xmath47 are shown in fig .",
    "[ fig7 ] for identical parameters . as with the classical nls above ,",
    "when @xmath141 is real the magnitude rapidly decays to zero , while when @xmath141 is complex it is observed to oscillate in time .",
    "[ h ]   with @xmath244 and @xmath245 time points.,title=\"fig : \" ]",
    "so far we have explained and implemented the time - dependent spectral renormalization algorithm to conservative systems and demonstrated its flexibility in terms of incorporating an arbitrary number of conserved physical properties into the simulation . in this section",
    ", we turn our attention to dissipative evolution equations and apply the scheme on the viscous burgers equation @xmath246 here , @xmath109 is a real valued function , @xmath247 is the viscosity coefficient .",
    "the problem will be considered on the bounded domain @xmath248 $ ] ( here @xmath249 ) with periodic boundary conditions : @xmath250 and @xmath251 the integration time interval is @xmath61.$ ] the limit @xmath252 is referred to in the literature as the inviscid burgers equation .",
    "it was first proposed by j. burgers @xcite as a model for turbulent flows and later shown to play a fundamental role in many branches of the nonlinear sciences .",
    "this equation exhibits rich mathematical structures such as finite time blow - up ( singularity ) , shock formation and wave breaking @xcite . physically speaking",
    ", it finds wide applications in gas dynamics , acoustics and traffic flows to name a few @xcite .",
    "the viscous burgers ( @xmath253 ) is often used in fluid mechanics as a simplified version of the navier - stokes equation in one space dimension under the assumption of incompressibility and no pressure gradient .",
    "importantly , eq .  ( [ burgers ] ) can be solved exactly with the help of the so - called cole - hopf transformation @xcite .",
    "indeed , if @xmath1 solves eq .",
    "( [ burgers ] ) then the function @xmath254 defined by @xmath255 satisfies the linear heat equation @xmath256 a spatially periodic exact solution to eq .",
    "( [ burgers ] ) corresponding to the initial condition @xmath257 is given by @xmath258 the viscous burgers equation is dissipative in nature . indeed , multiplying eq .",
    "( [ burgers ] ) by @xmath4 and integrate over the entire spatial domain we find @xmath259 the last relation describes the rate at which the total energy of the system gets dissipated . next we give the major steps needed to implement the scheme for the viscous burgers equation .",
    "to this end , the linear differential operator @xmath6 , its fourier symbol @xmath38 , the nonlinearity @xmath7 , the propagator ( or semigroup ) @xmath34 defined in formula ( [ propagator - def - general ] ) and the renormalized nonlinear term @xmath122 are respectively given by    * @xmath260 * @xmath124   = -\\psi \\psi_x \\;,\\;\\;\\ ; \\psi \\;\\text{is real},$ ] * @xmath261 * @xmath126 * @xmath262 \\;,$ ] * @xmath263 * @xmath264 \\;.$ ]    to derive a formula for the renormalization factor , we substitute @xmath265 into ( [ dissipate_rate ] ) ; integrate over the entire spatial domain and obtain @xmath266 where @xmath267 @xmath268 solving eq .",
    "( [ renorm_dissipate_rate ] ) for nontrivial solutions we obtain @xmath269 unlike the nls case , the quantities @xmath270 are non - negative and real .",
    "in contrast to well established time - stepping methods , where preservation of dissipation rates can not be directly imposed , here any numerical solution obtained by the time - dependent renormalization scheme is explicitly constructed to satisfy the decay rate ( [ dissipate_rate ] ) . to evaluate the cumulative time integral in eq .",
    "( [ lambda_burgers_define ] ) a second - order accurate trapezoidal method is used . with all this at hand , the initial boundary value problem ( [ burgers ] ) corresponding to initial condition ( [ ic - burgers ] ) is solved with the help of the following iterative scheme [ see also eq .",
    "( [ phi - int - iterate - four - gen ] ) ] @xmath271 with @xmath131 denoting the iteration index . at every fixed iterate number @xmath97 , the integral @xmath82",
    "is computed from formula ( [ i - fourier - recursion-2-gen ] ) , which for the burgers case , reduces to    @xmath272   -   b   r^2(t_{m+1 } )   f\\left [ \\phi ( x , t_{m+1 } )   \\phi_x ( x , t_{m+1 } ) \\right ]   \\right\\}\\;,\\end{aligned}\\ ] ]    where @xmath78 and @xmath79 the coefficients @xmath84 and @xmath85 are defined in eqns .",
    "( [ quad_coeffs - gen - a ] ) and ( [ quad_coeffs - gen - b ] ) which , for the burger s equation , reduce to @xmath273 + @xmath274 as was the case with the nls , we again replace the value of the coefficients @xmath84 and @xmath85 at @xmath135 by their @xmath136 limit given by @xmath137 and @xmath138 importantly , all quantities on the right hand side of eq .",
    "( [ i - fourier - recursion-2-gen - burgers ] ) are known for all time grid points .",
    "[ h ] ) ] in comparison to the exact rate .",
    "curves correspond to numerical solutions obtained through the spectral renormalization , runge - kutta without integrating factor ( rk2 ) , and exponential time - differencing runge - kutta ( etdrk2 ) methods .",
    "the computational parameters are : @xmath275.,title=\"fig : \" ]    since we are directly enforcing dissipation of energy in eq .",
    "( [ dissipate_rate ] ) we are interested to learn how the energy in the numerical solution compares to that of the exact one . for that purpose , we define the quantity @xmath276 where @xmath277 is the numerical solution obtained from iterating eqs .",
    "( [ phi - int - iterate - four - gen - burgers ] ) and ( [ i - fourier - recursion-2-gen - burgers ] ) using the initial condition ( [ ic - burgers ] ) .",
    "the error convergence rates are shown in fig .",
    "again , the global solution error in fig .",
    "[ fig8](a ) is observed to converge at a second - order rate .",
    "this is also the case for the rk2 and etdrk2 schemes .",
    "next , the error in the ( time - dependent ) dissipation rate is compared with the exact .",
    "doing so reveals that , unlike the time - independent conserved quantities above , the dissipation rate is not numerically exact , but instead converges at second - order rate [ see fig .",
    "[ fig8](b ) ] .",
    "similar rates are found for the runge - kutta methods .",
    "in this paper , we have presented a new numerical method to simulate evolution equations which we term here the time - dependent spectral renormalization scheme .",
    "spectral refers to space discretization and that spatial derivatives are computed spectrally with the help of , for example , the fourier transform or series . here",
    ", renormalization means a time - dependent amplitude rescaling .",
    "the proposed scheme is rooted in the ( _ time - independent _ ) spectral renormalization method introduced in 2005 by ablowitz and musslimani @xcite to numerically compute stationary nonlinear bound states for nonlinear boundary value problems of the nonlinear schrdinger , gross - pitaevskii and water wave equation types to mention a few . in this regard",
    ", the proposed method can be thought of as an extension to the time domain .",
    "the idea here is to rewrite the given evolution equation ( formulated in an ordinary or partial differential equation form ) into an integral equation .",
    "the solution is then viewed as a fixed point in both space and time rather than being a solution to an evolution equation .",
    "the resulting integral equation is then numerically solved using a simple renormalized fixed - point iteration .",
    "convergence of the method is achieved by introducing a _ time - dependent _ renormalization factor which is numerically computed from the _ physical properties _ of the governing evolution equations .",
    "this novel time - dependent spectral renormalization scheme has the ability to incorporate",
    " physics on demand \" into the numerical simulations and allows the numerical time integration to  keep in touch \" with the original evolution equation .",
    "thus , one can impose arbitrary number of conservation laws or dissipation rates into the simulation .",
    "the proposed method is applied to two benchmark problems : the nonlinear schrdinger and the burgers equations each of which being a prototypical example of a conservative and dissipative system respectively .",
    "the work of j.t.c . and",
    "z.h.m was supported in part by nsf grant number dms-0908599 . z.h.m",
    "thanks the lady - davis trust for the financial support during his visit to the technion - israel institute of technology .",
    "99 n. j. giordano , h. nakanishi , _ computational physics _ , ( pearson / prentice hall , 2006 ) .",
    ", _ computational neuroscience : a first course _ , ( springer , 2013 ) .",
    "b. haubold and t. wiehe , _ introduction to computational biology _ ,",
    "( birkhuser basel , 2006 ) .",
    "griffiths , _ introduction to quantum mechanics _ , ( pearson prentice hall , 2004 ) .",
    "murray , _ mathematical biology : an introduction _ , ( springer , 2001 ) . ,",
    "_ spectral methods : fundamentals in single domains _ ,",
    "( springer , 2006 ) . _",
    "spectral methods : evolution to complex geometries and applications to fluid dynamics _ , ( springer , 2007 ) .",
    "n. j. zabusky and m. d. kruskal , phys .",
    "lett . * 15 * , 240 ( 1965 ) .",
    "d. korteweg and g. de vries , phil . mag .",
    "5th series , 422 ( 1895 ) .",
    ", _ solitons and the inverse scattering transform _ , ( siam , philadelphia , 1981 ) .",
    "m. j. ablowitz , d. j. kaup , a. c. newell , and h. segur , stud .",
    "appl . math . * 53 * 249 ( 1974 ) .",
    "y.s . kivshar and g.p .",
    "agrawal , _ optical solitons _",
    "( elsevier academic press , 2003 ) . c. j. pethick and h. smith , _ bose - einstein condensation in dilute gases _ , ( cambridge university , 2008 ) .",
    "a. j. sievers and s. takeno , phys .",
    "* 61 * , 970 ( 1988 ) .",
    "a. s. davydov , j. theor .",
    "biol . * 38 * , 559 ( 1973 ) .",
    "p. marquii , j. m. bilbault , and m. remoissenet , phys . rev .",
    "e * 51 * , 6127 ( 1995 ) .",
    "m. hochbruck and a. ostermann , acta numerica * 19 * , 209 ( 2010 ) .",
    "b. fornberg and g.b .",
    "whitham , phil .",
    "royal soc .",
    "london * 289 * , 373 ( 1978 ) .",
    "g. beylkin , j. m. keiser , and l.vozovoi , j. comp . phys . * 147 * , 362 ( 1998 ) . s. m. cox and p.c .",
    "matthews , j. comp .",
    "phys . * 176 * , 430 ( 2002 ) .",
    "kassam and l. n. trefethen , siam j. sci . comput .",
    "* 26 * , 1214 ( 2006 ) .",
    "e. hairer , gerhard wanner and christian lubich , _ geometric numerical integration _ , ( springer verlag , 2006 ) .",
    "a. l. islas , d. a. karpeev , and c.m .",
    "schober , j. comp . phys .",
    "* 173 * , 116 ( 2001 ) .",
    "ablowitz and z.h .",
    "musslimani , opt . lett . * 30 * , 2140 ( 2005 ) . j. yang and z.h .",
    "musslimani , opt . lett . * 28 * , 2094 ( 2003 ) .",
    "z.h . musslimani and j. yang , j. opt .",
    "b * 21 * , 973 ( 2004 ) .",
    "ablowitz , n. antar , i. bakirta , and b. ilan , phys .",
    "a * 86 * , 033804 ( 2012 ) .",
    "m.a . hoefer and b. ilan , multiscale model . simul .",
    "* 10 * , 306 ( 2012 ) .",
    "ablowitz , a.s .",
    "fokas , and z.h .",
    "musslimani , j. fluid mech . * 562 * , 313 ( 2006 ) .",
    "spectral methods in matlab _",
    "( siam , philadelphia , 2000 ) .",
    "b. fornberg _ a practical guide to pseudospectral methods _ ( cambridge university , cambridge , 1996 ) .",
    "j. yang _ nonlinear waves in integrable and nonintegrable systems _",
    "( siam , philadelphia , 2010 ) . t.r .",
    "taha and m.j .",
    "ablowitz , j. comp . phys . *",
    "55 * , 203 ( 1984 ) ; , j. comp . phys . * 55 * , 231 ( 1984 ) .",
    "a. iserles , s.p .",
    "nrsett , s. olver , numerical mathematics and advanced applications * 80 * , 97 ( 2006 ) .",
    "w. bao and q. du , siam j. sci . comput . * 25 * 1674 ( 2006 ) .",
    "h. lewey , k. friedrichs , and r. courant , math . ann .",
    "* 100 * , 32 ( 1928 ) .",
    ", _ nonlinear dispersive waves _ , ( cambridge university , cambridge , 2011 ) .",
    "weideman and b.m .",
    "herbst , siam j. num .",
    "23 * , 485 ( 1986 ) . k.g .",
    "makris , r. el - ganainy , d.n .",
    "christodoulides , and z.h .",
    "musslimani , phys .",
    "lett . * 100 * , 103904 ( 2008 ) .",
    "r. el - ganainy , k.g .",
    "makris , d.n .",
    "christodoulides , and z.h .",
    "musslimani , opt .",
    "letters * 32 * , 2632 ( 2007 ) .",
    "musslimani , k.g .",
    "makris , r. el - ganainy , and d.n .",
    "christodoulides , phys .",
    "100 * , 030402 ( 2008 ) .",
    "k. g. makris , ziad h. musslimani , d. n. christodoulides and stefan rotter , nature communications , * 6 * , 7257 ( 2015 ) .",
    "k. g. makris , r. el ganainy , d. n. christodoulides , and ziad h. musslimani , phys .",
    "a * 81 * , 063807 , ( 2010 ) .",
    "rter , k.g .",
    "makris , r. el - ganainy , d.n .",
    "christodoulides , m. segev , d. kip , nat .",
    "* 6 * , 192 ( 2010 ) .",
    "j.t . cole , k.g .",
    "makris , z.h .",
    "musslimani , d.n .",
    "christodoulides , and s. rotter , phys . rev .",
    "a 93 , 013803 ( 2016 ) .",
    "s. nixon , l. ge , and j. yang , phys .",
    "a * 85 * , 023822 ( 2012 ) .",
    "konotop , j. yang , and d.a .",
    "zezyulin , rev .",
    "88 * , 035002 ( 2016 ) . v. v. konotop , d. e. pelinovsky , and d. a. zezyulin , eur .",
    "j. * 100 * , 56006 ( 2012 ) .",
    "j. cuevas , p. g. kevrekidis , a. saxena , and a. khare , phys . rev .",
    "a * 88 * , 032108 ( 2013 ) .",
    "v. achilleos , p. g. kevrekidis , d. j. frantzeskakis , and r. carretero - gonzalez , phys .",
    "a * 86 * , 013808 ( 2012 ) .",
    "p. g. kevrekidis , phys .",
    "a * 89 * , 010102(r ) ( 2014 ) .",
    "l. schwarz , h. cartarius , z. h. musslimani , j. main , and g. wunner , https://arxiv.org/pdf/1702.03846.pdf ( 2017 ) .",
    "h. cartarius and g. wunner , phys .",
    "a * 86 * , 013612 ( 2012 ) .",
    "m. kreibich , j. main , h. cartarius , and g. wunner , phys . rev .",
    "a * 87 * , 051601(r ) ( 2013 ) .",
    "m. j. ablowitz and z. h. musslimani , phys .",
    "lett . * 110 * , 064105 ( 2013 ) .",
    "m. j. ablowitz and z. h. musslimani , nonlinearity * 29 * , 915 ( 2016 ) .",
    "m. j. ablowitz and z. h. musslimani , phys .",
    "e * 90 * , 032912 ( 2014 ) .",
    "m. j. ablowitz and z. h. musslimani , stud . in appl .",
    "doi : 10.1111/sapm.12153 ( 2016 ) .",
    "j. m. burgers , _ the nonlinear diffusion equation _ , ( springer netherlands , 1974 ) . , _ linear and nonlinear waves _ , ( wiley - interscience , 1999 ) .",
    "j. d. cole , quart .",
    "appl . math . * 9 * , 225 ( 1951 ) .",
    "e. hopf , comm .",
    "pure appl .",
    "math . * 3 * , 201 ( 1950 ) ."
  ],
  "abstract_text": [
    "<S> the spectral renormalization method was introduced by ablowitz and musslimani in 2005 , [ opt . </S>",
    "<S> lett . * 30 * , pp . </S>",
    "<S> 2140 - 2142 ] as an effective way to numerically compute nonlinear ( time - independent ) bound states for nonlinear boundary value problems of the nonlinear schrdinger ( nls ) , gross - pitaevskii and water wave type equations to mention a few . in this paper , </S>",
    "<S> we extend this scheme to the _ time _ domain and introduce the _ time - dependent spectral renormalization _ method as a numerical means to simulate linear and nonlinear evolution equations . </S>",
    "<S> the essence of the method is to convert the underlying evolution equation from its partial ( or ordinary ) differential form into an integral equation . </S>",
    "<S> the solution sought is then viewed as a fixed point in both space and time rather than satisfying an evolution equation . </S>",
    "<S> the resulting integral equation is then numerically solved using a simple renormalized fixed - point iteration method . </S>",
    "<S> convergence is achieved by introducing a _ time - dependent _ renormalization factor which is numerically computed from the _ physical properties _ of the governing evolution equation . </S>",
    "<S> the proposed method has the ability to incorporate physics into the simulations and allows the numerical time integration to  keep in touch \" with the original evolution equation . in other words </S>",
    "<S> , one can incorporate an arbitrary number of conservation laws or dissipation rates into the simulation . </S>",
    "<S> the proposed method is implemented on benchmark evolution equations : the classical nls , integrable @xmath0 symmetric nonlocal nonlinear schrdinger and the viscous burgers equations , each of which being a prototypical example of a conservative and dissipative dynamical system . </S>",
    "<S> numerical implementation and algorithm performance are also discussed .     </S>"
  ]
}
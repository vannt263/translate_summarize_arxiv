{
  "article_text": [
    "* * * * he purpose of this paper is to discuss von neumann s @xcite rejection method to generate a random variable @xmath2 under the random bit model . in this model",
    ", we have access to an infinite sequence of independent random bernoulli@xmath3 bits , and are interested in the complexity as measured by the number of bits used until halting . for integer - value random variables @xmath2 , the entire story is known .",
    "knuth and yao @xcite obtained lower bounds on the expected number of bits for the exact simulation of @xmath2 , and exhibited optimal algorithms . on the other hand , for random variables @xmath2 with a density on @xmath1 , no exact algorithm exists , since any output of an algorithm delivers a function of a ( possibly random ) number of random bits .",
    "thus , it is necessary to introduce the notion of an @xmath0-approximation ( see section [ sect : bisection ] ) using wasserstein @xmath4-distance ( devroye and gravel @xcite and rachev and rschendorf @xcite ) .    a naive application of the rejection method  one of the most often used methods in simulation  leads to errors and inconsistencies .",
    "to deal with this , we introduce the notion of an oracle that computes the supremum and infimum of a function over any rectangles of @xmath1 ( see section [ sect : compactcase ] ) .",
    "the oracle can be used in conjunction with a quadtree partition of the space to design a rejection algorithm that is guaranteed to deliver an @xmath0-approximation ( sections [ sect : compactcase ] and [ sect : noncompacta1 ] ) .",
    "we show that is valid whenever @xmath5 is riemann - integrable and derive expected complexity bounds ( in terms of the number of random bits consumed ) that are close to the universal lower bounds of @xcite .",
    "we believe that random number generation libraries should offer the possibility of specifying any @xmath0no matter how small  as an input .",
    "current practice entirely disregards the effects of approximations . in this paper and a companion paper @xcite",
    ", we take a first small step towards this goal .",
    "applications in physics ( see @xcite who requires and develops @xmath0-accurate normal generators ) , quantum computing ( see brassard , devroye , and gravel @xcite ) , and other areas of science demand very precise computations .",
    "much more is needed of course , especially when many random variables are combined in scientific computation  how does an @xmath0-approximation propagate through a system , for example ?",
    "consider two probability vectors @xmath6 , and @xmath7 , where @xmath8 for a finite constant @xmath9 .",
    "then von neumann s rejection method can be reformulated as follows , if @xmath9 is explicitly known :    [ algo : orinatumsupolov ] generate @xmath2 according to @xmath10 . generate @xmath11 uniformly on @xmath12 $ ] .",
    "@xmath2    the expected number of iterations in this algorithm is @xmath9 .",
    "the returned random variable , @xmath2 , has distribution @xmath6 .",
    "knuth and yao @xcite showed that to generate @xmath2 , the expected number of random bits required by any algorithm is at least the entropy of @xmath2 , @xmath13 they also exhibited an algorithm that requires an expected number of bits not exceeding @xmath14 .",
    "note that given @xmath2 , the decision @xmath15 can be made using @xmath16 expected random bits because to decide @xmath17 given @xmath2 follows a geometric law with parameter @xmath18 ; we compare the @xmath19 bit of @xmath11 with the @xmath19 bit of @xmath20 until both do nt agree for integers @xmath21 ( see , e.g. , devroye and gravel @xcite ) .",
    "the expected number of random bits needed by this implementation is not more than @xmath22 this is usually quite far from the lower bound of knuth and yao , @xmath23 .",
    "it is worth to mention an application of the rejection method in the bit model to the simulation of physical phenomena and to communication complexity in brassard , devroye , and gravel @xcite .",
    "the remainder of the paper is concerned with the case in which @xmath2 has a density @xmath5 . since such @xmath2",
    "can not be generated exactly by any algorithm , it has to be approximated in some manner by a discrete random variable , and thus we require an appropriate  and as it turns out , nontrivial ",
    "generalization of algorithm [ algo : orinatumsupolov ] .",
    "the building block for continuous random generation is the bisection algorithm , which is mathematically equivalent to an algorithm given in devroye and gravel @xcite .",
    "we develop a version here that is convenient for later use .",
    "the analysis of theorem [ thm_bisect ] below is new .",
    "consider an algorithm for generating a random variable @xmath2 with density @xmath5 on @xmath1 that has the following property : for a given @xmath24 , it outputs a random variable @xmath25an @xmath0-approximation of @xmath2such that there exists a coupling of @xmath26 with @xmath27 where @xmath28 is the @xmath4-distance in @xmath1 .",
    "it is understood that necessarily , @xmath29 is discret since it is a function of a ( random ) finite number of random bits .",
    "we call @xmath29 an @xmath0-approximation of @xmath2 .    devroye and gravel @xcite showed that if @xmath30 is the random number of bits needed by any algorithm for generating such an approximation @xmath29 , then @xmath31 where @xmath32 is the differential entropy of @xmath5 , @xmath33 the lower bound is valid under a technical condition known as rnyi s condition ( see rnyi @xcite and csiszr @xcite ) , namely that the entropy of the discrete random variable @xmath34 , which takes values on the grid of all integer - valued vectors of @xmath1 , be finite .",
    "the lower bound ( [ lower_bnd ] ) serves as a guide to calibrate and compare the rejection algorithms presented in this paper .",
    "it is especially crucial to match its main term , , without an extra multiplicative constant .",
    "we require an auxiliary set of results on bisection algorithms for generating a random variate that is an @xmath0-approximation of a random variable @xmath2 with a continuous ( not necessarily absolutely continuous ) distribution function @xmath35 on a compact interval @xmath36 $ ] of length @xmath37 .",
    "the bisection algorithm [ bisecto_algo ] assumes that we have access to both @xmath35 and @xmath38 .",
    "@xmath39=[0,1]$ ] @xmath40 @xmath29 @xmath41 .",
    "@xmath43 $ ] @xmath44=\\big[g(a),g(z)\\big]$ ] @xmath45 $ ] @xmath46=\\big[g(z),g(b)\\big]$ ]    [ thm_bisect ] for the bisection algorithm [ bisecto_algo ] applied to any distribution with support on an interval of length @xmath47 , and halted as soon as an interval of length less than or equal to @xmath48 is reached , we have    1 .",
    "if @xmath29 denotes the center of the halting interval , then there exists a coupling between @xmath2 and @xmath29 such that @xmath49 .",
    "2 .   if @xmath30 denotes the number of bits used , then @xmath50 where @xmath51 .",
    "we note here that in general this bound can not be improved by more than @xmath52 bits .",
    "just consider the uniform distribution on @xmath53 $ ] . since all intervals have length to @xmath54 after @xmath55 were used , we have @xmath56    the bisection method yields , very naturally , a full binary tree , i.e. , one in which all internal nodes have two children .",
    "each internal node corresponds to a subinterval of @xmath36 $ ] of length greater than @xmath48 , the root represents the original interval @xmath36 $ ] of length @xmath47 , and leaves represent intervals of length less than or equal to @xmath48 that cause an exit .    upon exit ,",
    "the random variable @xmath29 can be coupled with @xmath2 such that @xmath49 , because at every iteration , the random binary choice picks the correct interval , @xmath57 $ ] or @xmath58 $ ] , with the correct probability @xmath18 .",
    "one could thus define @xmath2 as the limit of @xmath59 when the algorithm is run without halting . since @xmath29 is the midpoint of an interval of length at most @xmath48 that also contains @xmath2",
    ", we must have @xmath60 .",
    "this shows part ( i ) .    to prove part ( ii ) , let us denote the set of leaves by @xmath61 , and the set of internal nodes ( i.e. , all non - leaf nodes ) by @xmath62 .",
    "the depth of node @xmath63 is denoted by @xmath64 .",
    "it is of course possible that @xmath62 and @xmath61 are both infinite .",
    "however , one has that in all cases , @xmath65 because the leaves form a non - overlapping covering of @xmath36 $ ] so that the bisection method  a random walk started at the root and halted when a leaf is reached  always stops . also , @xmath66 in the next chain of inequalities , we define @xmath67 i.e. , the number of internal nodes at depth @xmath68 in the tree .",
    "using kraft s inequality ( see , e.g. , cover and thomas @xcite ) , which states that for any binary tree , @xmath65 we have , with @xmath69 denoting the set of ancestors @xmath63 and @xmath70 denoting the set of descendants of @xmath71 , that , since @xmath72 , @xmath73 observe that at depth @xmath68 , all intervals associated with nodes are disjoint , and thus , since each interval node corresponds to an interval strictly larger than @xmath48 , @xmath74 also , @xmath75 because we have a binary tree .",
    "hence , @xmath76 we deduce , using @xmath77 that @xmath78 to see this , treat the cases @xmath79 and @xmath80 separately .",
    "in this section , we assume that @xmath5 is riemann - integrable and supported on @xmath12^{d}$ ] . note that this is equivalent to the assumption that @xmath5 is almost - everywhere continuous , bounded , and supported on @xmath12^{d}$ ] .",
    "our algorithm requires an oracle  a black box  that for any closed rectangle @xmath81 gives @xmath82 if @xmath83 , then that oracle coincides with a standard function evaluation . without the possibility of computing infimum and supremum of the density @xmath5 over compact subintervals of the domain of @xmath5 , sampling absolutely continuous distribution using the rejection method seems to be impossible in total generality .",
    "we will also track complexity in terms of the number of uses of the oracle before halting , and call it @xmath30 .",
    "one use of the oracle reveals @xmath84^{d}}{f(x)},\\ ] ] which is a finite number by assumption ( riemann - integrable functions are bounded by definition ) . at once",
    ", we have a simple bound for applying the rejection method : @xmath85 .",
    "algorithm [ orig_vnabc ] shows the original algorithm by von neumann @xcite ( see also devroye @xcite ) of the standard rejection algorithm .",
    "generate @xmath2 uniformly on @xmath12^{d}$ ] .",
    "generate @xmath11 uniformly on @xmath12 $ ] .",
    "@xmath2    since we can not generate @xmath2 and @xmath11 with infinite precision , at least two modifications are needed .",
    "one modification is to take into account the precision @xmath0 desired for @xmath2 , and another modification is to take into account that bits of @xmath11 are generated sequentially .",
    "appendix [ app_b ] , which is in this article for pedagogical purpose , gives more insights on wrong and naive modifications that someone could be tempted to do .",
    "we can consider the initial rectangle @xmath86^{d}\\times [ 0,c],\\ ] ] and its @xmath87 child rectangles defined by the @xmath87 quadrants centered at the center @xmath88 of @xmath89 : @xmath90 in the data structure literature , such a partition , when applied recursively , leads to a quadtree ( see , e.g. , samet @xcite ) .",
    "any subsequent rectangle can be split again about its center point , and so forth , in the manner of infinite quadtree @xmath91 on @xmath92 as illustrated by figures [ fig_2dim_decomp_for_quadtree ] and [ fig_quadtree_decomp_example ] .    in von neumann s algorithm , deciding if @xmath93 for @xmath94 is equivalent to finding a rectangle @xmath95 in the quadtree @xmath91 with the property that either @xmath96 or @xmath97 however , this must be done carefully , without overlapping rectangles .",
    "thus , we must trim @xmath91 , and associate the exiting rectangles @xmath95 with the leaves .",
    "thus , @xmath98 and @xmath99    below , we will see that riemann - integrability of @xmath5 suffices for this decomposition .",
    "when a rejecting rectangle is found , the procedure is repeated .",
    "when an accepting rectangle is found , say , @xmath100}\\times [ \\alpha,\\beta],\\ ] ] it suffices to generate @xmath101}$ ] such that @xmath102 where @xmath103 is uniform on @xmath104}$ ] and coupled with @xmath29 .",
    "it is easy to see by the triangle inequality that @xmath29 is then coupled with @xmath2 having density @xmath5 such that @xmath105 to achieve ( [ xstar_xepsilon ] ) , use bisection for each dimension separately . by theorem [ thm_bisect ] ,",
    "the expected number of bits needed is bounded by @xmath106 for @xmath107 .",
    "if @xmath108 , then bisection requires no bit , so that we conclude that the expected number of bits does not exceed @xmath109    we note that the checks @xmath110 and @xmath111 can be carried out using our oracle .",
    "let    @xmath112    then ( [ check_one ] ) holds if @xmath113 , and ( [ check_two ] ) holds if @xmath114 .",
    "@xmath115^{d}\\times\\big[0,\\mathop{\\sup_{}}_{x\\in[0,1]^{d}}{f(x)}\\big]$][init_line_reject_algo ] @xmath116 call the oracle that returns @xmath117 and @xmath118 which are in turn used by the following branching statement .",
    "@xmath119 @xmath120 @xmath121 select one vertex @xmath71 of @xmath95 uniformly at random and replace @xmath95 by the rectangle with @xmath71 and @xmath122 as opposing vertices .",
    "goto line ( [ init_line_reject_algo ] ) use bisection to generate an @xmath0-approximation @xmath29 of a uniform variable in .[bisecto_sub_routine_line_reject_algo ] @xmath29    [ thm_quadtree ] let @xmath5 be a riemann - integrable density on @xmath12^{d}$ ] . then the quadtree @xmath91 partitions @xmath123^{d}\\times [ 0,\\sup{f}]}$ ] in a collection of leaf rectangles @xmath95 for which ( [ accept_rect ] ) and ( [ reject_rect ] ) hold .",
    "thus , algorithm [ algo_reject_compact ] halts with probability one and delivers an @xmath0-approxiation @xmath29 of @xmath2 , a random variable with density @xmath5 .",
    "let @xmath124 be the number of iterations of the algorithm before halting .",
    "in other words , @xmath124 is the depth of the leaf rectangle @xmath95 reached by randomly walking down the quadtree .",
    "that walk costs @xmath125 random bits .",
    "we show that @xmath126 and thus , ( [ accept_rect ] ) and ( [ reject_rect ] ) must hold . in the partition of @xmath89 into @xmath127 level-@xmath128 rectangles ( each of lebesgue measure @xmath129[0pt]{\\small$\\textstyle \\frac{1}{2^{k}}$}}{\\raisebox{0.04ex}[0pt][0pt]{\\small$\\textstyle \\frac{1}{2^{k}}$}}\\cdots{\\raisebox{0.04ex}[0pt][0pt]{\\small$\\textstyle \\frac{1}{2^{k}}$}}{\\raisebox{0.04ex}[0pt][0pt]{\\small$\\textstyle \\frac{c}{2^{k}}$}}$ ] ) , there are @xmath130 cells @xmath95those for which we can not decide  that are `` visited '' by @xmath5 , i.e. for which @xmath131 and @xmath132 then @xmath133    for every rectangle @xmath95 , let us define its projection , @xmath134 , onto @xmath1 , i.e. @xmath135    then , for a fixed dimension , we can group the @xmath136 cells @xmath134 with the same projection and verify that of these @xmath136 cells , at most @xmath137 are visited by @xmath5 .",
    "since there are @xmath138 rectangles @xmath134 , let @xmath139 be the collection of all projections @xmath134 , and then @xmath140 where we use the riemann approximations @xmath141 and @xmath142 of the integral of @xmath5 : @xmath143 therefore , @xmath144 since @xmath5 is riemann - integrable , this tends to @xmath145 as @xmath146 .",
    "we call @xmath5 a monotone density on @xmath12^{d}$ ] if it decreases along at least one of the dimensions , i.e. , there exists @xmath147 such that for all vectors , , , then . as",
    "before , let @xmath130 be the number of cells at level @xmath128 that are visited by @xmath5 . then ,",
    "@xmath148 because the domain of @xmath5 is divided into @xmath138 cells and the @xmath136 cells along the @xmath19 dimension give rise to a walk .",
    "this walk along the @xmath19 is at most of length @xmath149 as illustrated on figure [ fig_mono_curve ] .",
    "we have @xmath150 and thus , @xmath151 in other words , for monotone densities , the inner loop of the algorithm has a uniform performance guarantee .    for a complete analysis of algorithm @xmath152",
    ", we need to consider the total number @xmath153 of trials before deciding .",
    "the number of uses of the oracle is given by @xmath154 where @xmath155 is the number of iterations in the @xmath55-th trial ",
    "these @xmath155 s are i.i.d .",
    "the number of random bits used is @xmath156 during the first phase ( the decision phase ) , and is bounded by @xmath157 in the second phase ( the bisection phase ) . since @xmath158^{d}}{f(x)}$ ] , we see that the expected number of uses of the oracle is @xmath159 and that the expected number of random bits required is bounded from above by @xmath160 as noted earlier , for any coordinate - wise monotone density on @xmath12^{d}$ ] , @xmath161 however , for general riemann - integrable densities we can not insure that @xmath162 converges .",
    "we will address that point below .",
    "[ thm_compact_case ] let @xmath5 be a riemann - integrable density on @xmath12^{d}$ ] , with .    1 .",
    "if @xmath5 is monotone in at least one coordinate , then the expected number of uses of the oracle is not more than @xmath163 and the expected number of bits needed to generate an @xmath0-approximation @xmath29 is not more than @xmath164 2 .",
    "if @xmath165 and @xmath166 are the riemann approximation of @xmath167 for regular grids of size @xmath138 i.e. , each coordinate is split into @xmath136 equal intervals , then the expected number of uses of the oracle is not more than @xmath168 where @xmath169 and the expected number of random bits used by algorithm [ algo_reject_compact ] is not more than @xmath170    just recall the estimates of @xmath162 obtained above and recall the upper bound @xmath171 in terms of @xmath172 .",
    "part ( 2 ) of the theorem [ thm_compact_case ] is only useful if @xmath173 . for most densities , @xmath173 , as can be seen from this simple sufficient condition .",
    "let the modulus of continuity be @xmath174 we have @xmath173 if @xmath175 because @xmath176 it suffices that as @xmath177 , @xmath178 or @xmath179 for some @xmath180 .",
    "the number of bits used by our algorithm behaves as @xmath181 as @xmath182 , and thus matches the lower bound mentioned earlier .",
    "in general , we use von neumann s rejection method when we know a density @xmath183 for which random variate generation is `` easy '' , and can verify that @xmath184 where @xmath9 is a known constant :    generate @xmath2 with density @xmath183 generate @xmath11 uniformly on @xmath12 $ ] @xmath2    the expected number of iterations of algorithm [ gen_algo ] is @xmath9 .",
    "we offer a generalization of algorithm [ gen_algo ] for this situation under a certain number of assumptions .",
    "assume for now that @xmath185 , and that we can compute both @xmath35 and @xmath38 , where @xmath35 is the c.d.f .  for @xmath183 .",
    "assume furthermore that we have an oracle for @xmath186 for all intervals @xmath95 of @xmath187 .",
    "one may be able to work things out with oracles for @xmath188 , @xmath189 , @xmath190 , and @xmath191 as well but we opt to take the more convenient approach .",
    "define @xmath192 , which is known thanks to our oracle .",
    "the goal is to decompose @xmath193 as before , into regions for which random variate generation is `` easy '' . for a bounded density on @xmath12",
    "$ ] , we are content with the rectangles .",
    "this can be mimicked by transforming the @xmath194-axis with @xmath195 since @xmath35 is monotone and continuous . using this transformation",
    ", we note that if @xmath2 has density @xmath183 , then @xmath196 is uniform on @xmath12 $ ] .",
    "furthermore , note that if @xmath197 , then @xmath198 where @xmath199 is a density on @xmath12 $ ] on which we can use our @xmath200-@xmath201 oracle .",
    "since @xmath202 , we can use the quadtree method of algorithm [ algo_reject_compact ] to select a rectangle @xmath203 with probability @xmath204 in the decomposition @xmath205\\big\\}=\\bigcup_{i\\in\\mathbb{n}}{\\big\\{r_{i}:\\phantom{1}\\text{$r_{i}$ is an accepting rectangle}\\big\\}}.\\ ] ] this decomposition is valid , and the procedure halts with probability one , if @xmath199 is riemann - integrable . put differently , it works if @xmath206 is riemann - integrable .",
    "the expected number of bits required in the decision phase of the algorithm ( selecting a leaf of the quadtree ) is bounded as in theorem [ thm_compact_case ] , when applied to @xmath199 .",
    "it is bounded by @xmath207 where @xmath165 and @xmath166 are the riemann approximation of @xmath208 for a grid of @xmath136 equal intervals that partition @xmath12 $ ] .",
    "we only need to analyze the second phase  the method to generate an @xmath0-approximation once a rectangle @xmath95 has been selected , i.e. , the method that starts by accepting rectangle as illustrated by figure [ fig_bisect ] and outputs @xmath29 such that @xmath209 where @xmath2 , @xmath29 are coupled and @xmath210 is uniform in @xmath95 .",
    "this can be achieved by bisection , noting that @xmath211 has distribution function @xmath35 restricted to @xmath212 $ ] .",
    "note that with @xmath213 and @xmath214 , we have @xmath215 also if @xmath216 is such that @xmath217 , then the corresponding @xmath218 point is such that @xmath219 and similarly for @xmath220 .",
    "the inversion algorithm [ algo : inv_bisecto ] of devroye and gravel @xcite , which is extension of a similar method for the discrete case first proposed by han and hoshi @xcite is summarized as follows :    @xmath221 , @xmath222 such that @xmath223 @xmath224 @xmath225 @xmath226 @xmath29 @xmath227 @xmath228 @xmath229 @xmath225 @xmath230 @xmath224    this algorithm picks a uniform subinterval and , if permitted to run forever , would produce a random variable with distribution function @xmath35 restricted to as is illustrated in figure [ fig_bisect ] .",
    "so , for random variate generation , we only replace line ( [ bisecto_sub_routine_line_reject_algo ] ) of algorithm [ algo_reject_compact ] by algorithm [ algo : inv_bisecto ] where @xmath231=r^{*}$ ] , and note that elsewhere in algorithm [ algo_reject_compact ] , @xmath5 must be replaced by @xmath199 .",
    "[ thm_gen_case_i ] the expected number of bits used by algorithm [ algo : inv_bisecto ] is not more than @xmath232 where @xmath233 , and @xmath234 . in particular",
    ", if that sum is finite for @xmath235 and if @xmath236 , then , as @xmath182 , the expected number of bits does not exceed @xmath237    theorem [ thm_gen_case_i ] establishes that algorithm [ algo : inv_bisecto ] is optimal to within an additive constant .",
    "in particular , its main term , @xmath238 , and second term , the differential entropy @xmath239 , match the lower bound .    the expected number of bits required in the decision phase of the algorithm , @xmath240 , is finite under smoothness conditions on @xmath199 .",
    "it depends also on @xmath9 , but clearly not on @xmath0 .",
    "let us denote an accepting rectangle @xmath203 and its projection by @xmath241 .",
    "so , if @xmath242 $ ] , then @xmath243\\times [ \\alpha_i,\\alpha_i+cq_i]$ ] , where @xmath244 , @xmath245 $ ] .",
    "the probability mass of @xmath203 is @xmath246 .    by the mapping @xmath38 ,",
    "@xmath203 gets mapped to a contiguous region @xmath247 , of projection , with @xmath248 and thus , @xmath249 here we use the notation @xmath250)=g(b_i)-g(a_i)$ ] .",
    "we also note that for all @xmath194 , @xmath251 define a regular @xmath48-grid on @xmath187 with intervals @xmath252 for all @xmath253 .",
    "if we exit with rectangle @xmath203 , then the bisection phase of the algorithm takes an expected number of bits bounded by @xmath254 where @xmath255 is a probability vector in @xmath256 .",
    "this result is due to the observation that the bisection method is equivalent to the algorithm analyzed by devroye and gravel @xcite and gravel @xcite in the context of the discrete distribution algorithm by han and hoshi @xcite .",
    "thus , the expected number of bits , averaged over all @xmath203 , is not more than @xmath257 by the concavity of @xmath258 in @xmath63 , we have by jensen s inequality that ( [ ikuiku_no1 ] ) is not more than @xmath259 but @xmath260 where @xmath261 is the distribution function of @xmath5 , and @xmath262 .",
    "thus the expected number of bits in the bisection phase does not exceed @xmath263 in the last term , we recognize the entropy defined by the probability vector @xmath264 .    a theorem due to csiszr @xcite established that if @xmath264 has a finite entropy for some @xmath24 , and @xmath265 , then as @xmath182 , @xmath266 the `` 5 '' can be replaced by `` 3 '' if in addition @xmath5 is bounded and decreasing on its support , @xmath267 ( see gravel and devroye @xcite ) .",
    "the extension of our results to dimensions greater than one for densities with unbounded support should pose no big problems . with the oracles introduced in our modification of von neumann s method",
    ", we believe that it is impossible to design a rejection algorithm for densities that are not riemann - integrable , so the question of the design of a universally valid rejection algorithm under the random bit model remains open .",
    "the authors would like to thank all three referees for their feedback . they are invited to luc s house for drinks if they wish to come out of the closet .",
    "luc devroye s research was supported by an nserc discovery grant .",
    "claude gravel thanks gilles brassard",
    ".    10    , _ elements of information theory _ , wiley , new - york , 1991 .    , _ some remarks on the dimension and entropy of random variables _ , acta mathematica academiae scientiarum hungarica , 12 ( 1961 ) , pp",
    ".  399408 .    , _ non - uniform random variate generation _ , springer , new york , 1986 .    , _ sampling with arbitrary precision _",
    "http://arxiv.org/abs/1502.02539 .    ,",
    "_ chantillonnage de distributions non uniformes en prcision arbitraire et protocoles dchantillonnage distribu des distributions discrtes quantiques _ , phd thesis , universit de montral , 2015",
    ". https://papyrus.bib.umontreal.ca/xmlui/handle/1866/12337 .    ,",
    "_ exact classical simulation of the quantum - mechanical ghz distribution _ , ieee transactions on information theory , 62 ( 2016 ) , pp",
    ".  876890 .    , _ interval algorithm for random number generation _",
    ", ieee transactions on information theory , 43 ( 1997 ) , pp .  599611 .    , _ sampling exactly from the normal distribution _ ,",
    "acm trans .",
    ", 42 ( 2016 ) , pp .",
    "114 .    ,",
    "_ the complexity of nonuniform random number generation _ , in algorithms and complexity : new directions and recent results .",
    ", j.  f. traub , ed .",
    ", new york , 1976 , carnegie - mellon university , computer science department , academic press , pp .",
    "reprinted in knuth s _ selected papers on analysis of algorithms _",
    "( csli , 2000 ) .    , _ various techniques used in connection with random digits .",
    "onte arlo ethods _ , national bureau of standards , 12 ( 1951 ) , pp",
    ".  3638 .",
    ", _ mass transportation problems : volume 1 : theory _ , springer ( probability and its applications ) , 1998 .    , _ on the dimension and entropy of probability distributions _ , acta mathematica academiae scientiarum hungarica , 10 ( 1959 ) , pp",
    ".  193215 .    ,",
    "_ foundations of multidimensional and metric data structures _ , morgan kaufmann , elsevier / morgan kaufmann , san mateo , 2006 .",
    "in this section , we contruct a family of densities that are not riemann - integrable for which the oracle is useless .",
    "let @xmath268 be a parameter , and let @xmath269 $ ] be a cantor - like set constructed below .",
    "setting @xmath270 where @xmath271 is the lebesgue measure , we have ( see below ) @xmath272 .",
    "the lebesgue measure of the set of discontinuities is @xmath273 and is zero only if @xmath274 .",
    "the case of @xmath274 corresponds to the usual uniform density on @xmath12 $ ] that is riemann - integrable .",
    "all cases of @xmath275 are lebesgue integrable but not riemann - integrable because the set of discontinuities is non - zero and yet possess a cumulative distribution function .",
    "for every @xmath24 and every @xmath276 we have @xmath277}{f(x)}=0,\\\\ \\text{and}&\\\\ & \\sup_{[x-\\epsilon , x+\\epsilon]}{f(x)}=\\frac{1 - 2\\delta}{1 - 3\\delta}.\\end{aligned}\\ ] ] since these boundaries are invariant under changes of @xmath0 , algorithm [ algo_reject_compact ] , when used for rejection , say , from a uniform density , has an infinite loop with positive probability .",
    "it is , therefore , essential that riemann - integrable densities are considered as that the supremum and infimum returned by the oracle over given small intervals converge to each other as intervals shrink .    for the construction of @xmath278 , we recursively remove middle _",
    "open _ subintervals of geometrically decreasing sizes .",
    "let @xmath279 $ ] for @xmath280 and @xmath281 be the @xmath282 _ closed _ subintervals that are _ left _ once the middle parts are removed from the previous subintervals @xmath283 with @xmath284 corresponding to the leftmost subinterval and so on .",
    "initially , @xmath285 $ ] . for all @xmath280 and @xmath286 , the length of a removed middle part is @xmath287 . for all @xmath280 , the total length _ not _ removed at the @xmath256-th step",
    "is @xmath288 because the subintervals are of the same length .",
    "let @xmath278 be the limiting subset of @xmath12 $ ] that is left , i.e. , @xmath289 we compute @xmath290 as follows : @xmath291 and therefore @xmath292 so that @xmath293",
    "a trivial , but incorrect , modification to algorithm [ orig_vnabc ] would be :    by bisection , generate @xmath29 on @xmath12^{d}$ ] such that @xmath29 is an @xmath0-approximation of @xmath2 .",
    "generate @xmath11 uniformly on @xmath12 $ ] .",
    "decide `` @xmath294 '' by using two bits in expected value.[doomed_algo_line1 ] if the condition from the previous line is satisfied , then return @xmath29 .",
    "this attempt leads to failure .",
    "let @xmath152 be the support of @xmath29 , which is necessarily contained in a fixed countable subset of @xmath12^{d}$ ] . then given any riemann - integrable density @xmath183 ,",
    "take a finite subset @xmath295 of @xmath152 , and modify @xmath183 on @xmath295 by setting @xmath296 we have that @xmath5 is still a riemann - integrable density bounded by @xmath9 ( and its set of discontinuities is of measure @xmath145 because @xmath295 is countable ) but since @xmath297 if @xmath298 , we accept all @xmath298 , regardless of the density @xmath183 we started with .",
    "since @xmath299 , we make an error with positive probability ."
  ],
  "abstract_text": [
    "<S> in 1952 , von neumann introduced the rejection method for random variate generation . </S>",
    "<S> we revisit this algorithm when we have a source of perfect bits at our disposal . in this random bit model , </S>",
    "<S> there are universal lower bounds for generating a random variate with a given density to within an accuracy @xmath0 derived by knuth and yao , and refined by the authors . in general </S>",
    "<S> , von neumann s method fails in this model . </S>",
    "<S> we propose a modification that insures proper behavior for all riemann - integrable densities on compact sets , and show that the expected number of random bits needed behaves optimally with respect to universal lower bounds . in particular , we introduce the notion of an oracle that evaluates the supremum and infimum of a function on any rectangle of @xmath1 , and develop a quadtree - style extension of the classical rejection method .    </S>",
    "<S> * keywords : * random number generation , random bit model , von neumann sampling algorithm , tree - based algorithms , random sampling , entropy    * ams subject classifications : * 65c10 random number generation , 68q25 analysis of algorithms and problem complexity , 68q30 algorithmic information theory , 68q87 probability in computer science ( algorithm analysis , random structures , phase transitions , etc . ) , 68w20 randomized algorithms , 68w40 analysis of algorithms </S>"
  ]
}
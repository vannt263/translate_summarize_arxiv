{
  "article_text": [
    "it has recently been recognized @xcite that a large number of systems are organized into structures best described by complex networks , or massive graphs .",
    "many of these networks , also called _ scale - free networks _ , such as citation networks @xcite , the www @xcite , the internet @xcite , cellular metabolic networks @xcite , the sex - web @xcite , the world - wide airport network @xcite , and alliance networks in the u.s .",
    "biotechnology industry @xcite , possess power - law degree distribution , @xmath4 @xcite .",
    "scale - free networks are very different from pure random graphs , which are well studied in the mathematical literature @xcite , and which have `` bell curve '' poisson degree distributions .",
    "therefore , it is natural to ask : why do scale - free networks emerge in nature ?",
    "the diverse range of systems for which scale - free networks are important suggests that perhaps there is a simple common reason for their development .",
    "generally , real - world networks do not form or evolve simply by purely random processes .",
    "instead , networks develop in order to fulfill a _",
    "main function_. often that function is to _ transport _ entities such as information , cars , power , water , forces , etc .",
    "it is thus plausible that the structure that the network develops ( scale - free in particular ) will be one that ensures efficient transport .",
    "recent studies that explore the connection between network topology and flow efficiency were done by a number of researchers , including valverde and sol @xcite in the context of the internet , by valverde ferrer cancho and sol @xcite in the context of software architecture graphs , and guimer et.al .",
    "@xcite in the context of the world - wide airport network .",
    "all these studies clearly show that the flow optimization dynamics which attempts to maintain the overall efficiency , will induce strong constraints on the structural evolution of the network .    in this paper , we investigate the processing efficiency of flows on networks when the flows are generated by gradients of a scalar field distributed on the nodes of a network .",
    "this approach is motivated by the idea that transport processes are often driven by local gradients of a scalar .",
    "examples include electric current which is driven by a gradient of electric potential , and heat flow which is driven by a gradient of temperature .",
    "the existence of gradients has been also shown to play an important role in biological transport processes , such as cell migration @xcite : chemotaxis , haptotaxis , and galvanotaxis ( the later was shown to play a crucial role in morphogenesis ) .",
    "naturally , the same mechanism will generate flows in complex networks as well .",
    "besides the obvious examples of traffic flows , power distribution on the grid , and waterways , we present two less known examples of systems where gradient - induced transport on complex networks plays an important role : 1 ) diffusive load balancing schemes used in distributed computation @xcite ( and also employed in packet routing on the internet ) , and 2 ) reinforcement learning on social networks with competitive dynamics @xcite . in the first example , a computer ( or a router ) asks its neighbors on the network for their current job load ( or packet load ) , and then the router balances its load with the neighbor that has the _ minimum _ number of jobs to run ( or packets to route ) . in this case",
    "the scalar at each node is the negative of the number of jobs at that node , and the _ flow _ occurs in the direction of the gradient of this scalar in the node s network neighborhood . in the second example ,",
    "a number of agents / players who are all part of a social network , compete in an iterated game based with limited information @xcite . at every step of the game each agent has to decide who s advice to follow before taking an action ( such as placing a bet ) , in its circle of acquaintances ( network neighborhood ) .",
    "typically , an agent will try to follow that neighbor which in the past proved to be the most reliable .",
    "that neighbor is recognized using a reinforcement learning mechanism : a score is kept for every agent measuring its past success at predicting the correct outcome of the game , and then each agent follows the advice of the agent in its network neighborhood which has the _ highest score _",
    "@xcite accumulated up to that point in time . in this case , the scalar is the past success score kept for each agent .",
    "the remainder of this paper is organized as follows . in section",
    "ii we systematically build a framework for analyzing the properties of gradient flows on networks , which , as it will be demonstrated , generically organizes itself into a directed network structure without loops . in section iii , we obtain the exact expression for the in - degree distribution of the gradient flow network on binomial random graphs and show that in a certain scaling limit the gradient flow network becomes a scale - free network .",
    "we also discuss possible connections of this result to sampling biases in trace - route measurements that have been used to infer the topology of the internet .",
    "finally , in section iv we study how the structure of a network affects the efficiency of its transport properties , and offer a possible explanation in the form of a selection principle for the emergence of real - world scale - free networks .",
    "let us consider that transport takes place on a fixed network @xmath5 which we will call in the remainder , the _ substrate graph_. it has @xmath6 nodes , @xmath7 and the set of edges @xmath8 is specified by the adjacency matrix @xmath9 ( @xmath10 if @xmath11 and @xmath12 are connected , @xmath13 otherwise , and @xmath14 ) . given a node @xmath11",
    ", we will denote its set of neighbors in @xmath0 by @xmath15 .",
    "let us also consider a scalar field ( which could just as well be called ` potential landscape ' ) @xmath16 defined on the set of nodes @xmath17 , so that every node @xmath11 has a scalar value @xmath18 associated to it .",
    "we define the _ gradient _ @xmath19 of the field * h * in the node @xmath11 to be the _ directed edge _",
    "@xmath20 which points from @xmath11 to that neighbor , @xmath21 on @xmath0 at which the scalar field has the maximum value in @xmath22 , i.e. : @xmath23 see fig .",
    "[ fig : bp_fig1 ] . according to its classical definition , a gradient vector points in the direction of the steepest ascent at a point on a continuous ( @xmath24-dimensional ) landscape .",
    "the above definition is a natural generalization to the case when the continuous landscape is replaced by a graph .",
    "note that @xmath25 , if @xmath11 has the largest scalar value in its neighborhood ( i.e. in the set @xmath22 ) , and in this case the gradient edge is a _ self - loop _ at that node .",
    "since @xmath26 always has a global maximum , there is always at least one self - loop .",
    "it is possible that eq .",
    "( [ argmax ] ) has more than one solution ( several equal maxima ) in the case of which we say that the scalar field is degenerate . in this paper",
    "we deal only with non - degenerate fields , which is typical when for example @xmath26 is a continuous stochastic variable .",
    "= 3.0 in    this allows us to define : the set @xmath27 of gradient edges on @xmath0 , together with the vertex set @xmath17 form the _ gradient network _ , @xmath28 .",
    "assuming that all edges have the same ` conductance ' , or transport properties , the gradient network will be the substructure of the original network which at a given instant will _ channel the bulk of the flow _ , and thus alternatively can be called as the _ maximum flow subgraph_.    in general , the scalar field will be evolving in time , due to the gradients generated currents , and also to possible external sources and sinks on the network ( for example packets are generated and used up at nodes , but they can also be lost ) . as a result , the gradient network @xmath29 will be _ time - dependent , highly dynamic_.      here we will first show a number of fundamental _ structural _ properties valid for all _ instantaneous _ gradient networks , and then study the degree distribution of gradient networks generated by stochastic scalar fields on random graphs , and scale - free networks .",
    "this will lead us to show that scale - free networks are more efficient substrates for transport than random graphs . the first important observation we make about gradient networks",
    "is : + _ non - degenerate gradient networks form forests ( i.e. , there are no loops in @xmath29 , and it is a union of trees , more exactly of in - directed , planted pines ) . _ + to prove this statement , assume that on the contrary , there is a closed path @xmath30 , @xmath31 made up only of directed edges from @xmath32 , see fig .",
    "[ fig : gnfig2 ] .",
    "let @xmath33 be the node on this path for which @xmath34 .",
    "node @xmath33 has exactly two neighbors on @xmath35 , nodes @xmath36 , but only one gradient direction , @xmath37 pointing away from @xmath33 .",
    "since @xmath38 , none of the neighbors @xmath36 will have their gradient edges pointing into @xmath39 .",
    "since there are two edges , @xmath40 and @xmath41 , and only one gradient edge from @xmath33 , one of the edges must not be a gradient edge , and thus the loop is not closed , in contradiction with the assumption that @xmath35 is a loop with only gradient edges . using a similar reasoning we can show that for non - degenerate scalar fields , there is no continuous path in @xmath29 connecting two local maxima of the scalar field @xmath26 .",
    "this means that on a given tree of @xmath29 there is only one local maximum of the scalar , and it is the only node with a self - loop on that tree . as a consequence , _",
    "the number of trees in the forest equals the number of local maxima of the scalar field @xmath26 on @xmath0_. the fact that @xmath29 is made of trees ( no loops ) , is rather advantageous for existing analytical techniques , especially if we take into consideration that @xmath29 is the most important substructure driving the flow in the network . note that unless there is exactly one local maximum ( and thus global as well ) of @xmath26 on @xmath0 , @xmath29 is disconnected into a number of trees and thus @xmath29 is _ not _ a spanning tree .",
    "= 5.0 in    since every node has exactly one gradient direction from it , the out - degree of every node on the gradient network is unity .",
    "it also means that @xmath29 has exactly @xmath6 nodes and @xmath6 edges ( with at least one edge being a self - loop ) .",
    "however , the _ in - degree _ of a node @xmath11 , which is the number of gradient edges _ pointing into _ @xmath11 , can be anything in the range @xmath42 , where @xmath43 is the degree of node @xmath11 on @xmath0 .",
    "in this section we show that when the substrate graph @xmath0 is a binomial random graph @xmath44 @xcite , and @xmath45 is an i.i.d .",
    "( meaning independent identically distributed ) random field over @xmath17 , given by a distribution @xmath46 , the in - degree distribution @xmath47 of @xmath29 obeys the exact expression : @xmath48^{n-1-n - l } \\left [ p(1-p)^n\\right]^l\\ ; ,   \\label{exact}\\end{aligned}\\ ] ] an expression _ independent _ on the particular form of the distribution for the scalars , @xmath46 . the binomial random graph ( also coined in the physics literature as the erds - rnyi random graph )",
    "is constructed by taking all pairs @xmath49 of @xmath6 nodes and connecting them with probability @xmath50 , independently from other links .",
    "figure [ fig : fig4 ] shows the agreement between numerical simulations and the above exact expression .",
    "= 5 in    we will also show , that the gradient network @xmath29 becomes a _ scale - free ( or power law ) network _ with respect to the in - degree distribution , in the scaling limit @xmath51 and @xmath52 , such that @xmath53 .",
    "the in - degree distribution in this limit is described by the law : @xmath54 a behavior which is also apparent from fig .",
    "[ fig : fig4 ] .",
    "this power - law is a rather surprising result , since the substrate graph is a random graph which is _ not _ scale - free , its degree distribution ( in the same limit ) being poisson , with a well defined average degree @xmath55 ( setting the scale ) and faster than exponential decaying tails @xcite .",
    "a similar finding was reported in @xcite by lakhina et.al . by repeating the trace - route measurements employed to sample the structure of the internet , on binomial random graphs .",
    "lakhina et .",
    "find that the spanning trees obtained this way have a degree distribution that obeys the @xmath56 law .",
    "later , in ref .",
    "@xcite , clauset and moore have presented an analytical approach to derive the @xmath56 law .",
    "this suggests that perhaps there could be a mapping between the trace - route sampling generated graphs and gradient networks .",
    "although it is not an exact mapping , a close connection can indeed be made , and this will form the subject of a forthcoming publication . the main warning sign coming from the trace - route observations is then the fact that trace - route sampling might not be the best way to measure the structure of the internet , given that on random binomial graphs it fails miserably to reproduce its degree distribution ( instead of a poisson , it gives a @xmath56 law ) .",
    "however , all is not lost , for the following reason : trace - route measurements of the internet suggested a power - law dependence for its degree distribution , @xmath57 with an exponent of @xmath35 taking values between 2 and 3 , which is definitely not close to unity ! this excludes the binomial random graph as a model for the internet .",
    "one might then wonder for what kind of graphs will trace - route measurements suggest a power - law dependence with an exponent @xmath58 ? in section iii , we make the observation that if the substrate graph is a scale - free network with degree distribution given by @xmath57 ( @xmath58 ) then the corresponding gradient network _ will also be a scale - free network with the same exponent _ @xmath35 . using the above mentioned close mapping between trace - route trees and gradient networks (",
    "namely , trace - route trees can be interpreted as suitably constructed gradient networks ) this suggests that at least the assumption that the internet is a power - law graph with exponent @xmath58 is consistent with trace - route measurements .",
    "certainly , the problem of sampling biases generated by trace - routes could be elucidated by answering the following question : are there non - power - law substrate graphs which would still generate scale - free trace - route trees with exponent @xmath58 ? this is an open question wordy of further investigation .",
    "in this section we give a combinatorial derivation for formula ( [ exact ] ) . a more analytic and standard approach can be found in the appendix , which was our original method , and it has inspired the combinatorial one presented below .    in order to calculate the in - degree distribution @xmath2 this way , we first distribute the scalars on the node set @xmath17 , then find those link configurations which contribute to @xmath2 when building the random graph @xmath1 over these nodes .    without restricting the generality we will calculate the distribution of in - links for node 0",
    "let us consider a set of @xmath59 nodes from @xmath17 , that does not contain node 0 , and it has the property that the scalar values at these nodes are all larger than @xmath60 .",
    "we will denote this set by @xmath61 .",
    "the complementary set of @xmath61 in @xmath62 will be denoted by @xmath63 , see fig .",
    "[ fig : comb ] .    in order to have _ exactly",
    "_ @xmath64 nodes pointing their gradient edges into node 0 , we must fulfill the following conditions : first , they have to be connected to node 0 and , second , they _ must not _ be connected to the set @xmath61 ( otherwise , they would be connected to a node with a scalar value larger than @xmath60 , according to the definition of @xmath61 ) .",
    "the probability for one node to fulfill these two conditions is @xmath65 , and since the links are drawn independently , for @xmath64 nodes this probability is @xmath66^l$ ] .",
    "we must also require that no other nodes will have their gradient links pointing into node 0 .",
    "obviously , by definition , nodes from @xmath61 will not be pointing gradients into node 0 .",
    "therefore , we have to make sure , that none of the remaining @xmath67 nodes from @xmath63 will be pointing into 0 .",
    "for one such node this will happen with probability @xmath68 .",
    "for all the @xmath67 such nodes this probability will be @xmath69^{n-1-l - n}$ ] .",
    "thus , given a specific set @xmath61 , the probability of exactly @xmath64 in - links to node @xmath70 is : @xmath71^l \\left [ 1-p(1-p)^n \\right]^{n-1-l - n}\\;. \\label{at}\\ ] ] the combinatorial factor in ( [ at ] ) counts the number of ways the set of @xmath64 nodes which point their gradient edges to node 0 , can be chosen from @xmath63 .",
    "= 2.3 in    the probability in ( [ at ] ) was computed by fixing @xmath60 and the set @xmath61 .",
    "next , we compute the probability @xmath72 of such an event for a given @xmath59 , while letting the field @xmath26 vary according to its distribution . the probability for a node to have its scalar value larger than @xmath60 is : @xmath73 the probability to have exactly @xmath59 nodes with this property is given by : @xmath74^{n } \\left [ 1-\\gamma(h_0)\\right]^{n-1-n}\\;.\\ ] ] the number of ways the @xmath59 nodes can be chosen from @xmath62 is just the binomial @xmath75 .",
    "thus , the total probability @xmath72 will be given by : @xmath76^{n } \\left [ 1-\\gamma(h_0)\\right]^{n-1-n}\\;=\\frac{1}{n}\\ ; , \\label{qun}\\ ] ] where the last equality in the above is obtained after performing the change of variables @xmath77 .",
    "as a final step , by combining ( [ qun ] ) with ( [ at ] ) , and summing over all possible @xmath59 values , we arrive at ( [ exact ] ) .      in order to obtain the scaling @xmath78 valid in the limit @xmath79 , @xmath52 , such that @xmath80 , for @xmath81",
    ", we will use the saddle point method .",
    "we write equation ( [ exact ] ) first in the form @xmath82 and then exponentiate the argument . using the stirling s formula to the first order ( @xmath83 ) ,",
    "one obtains that @xmath84 , where : @xmath85}-l\\ln{(l / e)}-(n - n - l)\\ln{[(n - n - l)/e ] } \\nonumber \\\\ & + & ( n - n - l)\\ln{\\left(1-p(1-p)^{n-1}\\right)}+l[\\ln{p}+(n-1)ln{(1-p ) } ] \\label{qu}\\end{aligned}\\ ] ] to calculate the largest contributor under the sum in ( [ exact ] ) we use the saddle point method : @xmath86 where @xmath87 . in our case",
    "we thus need to consider : @xmath88 where @xmath89 denotes the index of the maximal contributor for a given @xmath64 .",
    "the difficulty we get into by trying to find @xmath90 from ( [ dn1 ] ) is that the equation can not be solved explicitly for @xmath90 . to get around this ,",
    "let us consider instead the derivative : @xmath91 defining @xmath92 . performing the derivation",
    "the solution is easily found as : @xmath93 since @xmath92 is a monotonic function of @xmath59 , it is invertible .",
    "( @xmath94 ) .",
    "the inverse of ( [ lhat ] ) , will be denoted by @xmath95 .",
    "this means that : @xmath96 next , we observe that @xmath92 satisfies ( [ dn1 ] ) when inserting it into its explicit expression . accordingly , it will also be satisfied by @xmath95 . assuming that there is only one solution to ( [ dn1 ] ) it thus follows that : @xmath97 if we now calculate @xmath98 , at the saddle point , we find that @xmath99 ( using the fact that the parametric curve of the maximum can be written as either @xmath100 or @xmath101 and thus calculating @xmath102 ) .",
    "this means that we need to go one step further in the stirling series , in order to calculate the leading piece of @xmath103 at the saddle point . for the saddle point itself , we use the same expression as previously ( obtained with the first order stirling approximation ) because as it can be shown , the corrections introduced by the next term in the stirling approximation are vanishing as @xmath79 and therefore they will be neglected . thus using the next order term in as well in the stirling series ( @xmath104 ) and writing @xmath105 where @xmath106 is the correction generated this way , we obtain : @xmath107 calculating the second derivative @xmath108 at the point ( [ lhat ] ) , one finally obtains : @xmath109 combining ( [ sdv ] ) with ( [ rnqs ] ) , ( [ sqs ] ) in the saddle point formula , one obtains that : @xmath110 valid in the domain @xmath111 .",
    "the cutoff value @xmath112 is determined by the validity range of the saddle - point method : since the function @xmath90 is monotonically decreasing , at @xmath113 it will hit the lowest allowed value by the range of the integral ( or sum ) , namely , at @xmath114 . since @xmath115 is the inverse function of @xmath116 , it follows that @xmath117 meaning that the cutoff for the @xmath78 scaling law happens at @xmath55 , which is indeed confirmed by the numerical simulations shown in fig .",
    "[ fig : fig4 ] .",
    "if the substrate graph is a scale - free network ( here we used the barabsi - albert ( ba ) process with parameter @xmath118 to generate the scale - free network @xcite , but others will lead to similar conclusions as long as @xmath58 ) , the gradient graph will still be a power - law . here",
    "@xmath118 is the number of `` stubs '' of an incoming node which will attach preferentially to the existing network in the growth process .",
    "figure [ fig : fig5 ] shows the in - degree distribution of the corresponding gradient networks ( for @xmath119 and @xmath120 , lines - markers ) which are to be compared with the degree distribution of the substrate network itself ( lines ) .",
    "one immediate conclusion is that the gradient network is the _ same type _ of structure as the substrate in this case , i.e. , it is a scale - free ( power law ) graph with the same exponent !    = 4.5 in    if @xmath121 denotes the number of nodes with @xmath64 in - links , the total number of nodes _ receiving _ gradient flow will be @xmath122 . the total number of gradient edges generated ( total flow ) is simply @xmath123 because every node has exactly one out - link .",
    "if the flow received by a node has to be processed , it will happen at a finite rate .",
    "for example , a node receiving a packet , has to read off its destination and find out to which neighbor to send it .",
    "this is a physical process and takes a non - zero amount of time .",
    "thus , if a node receives too many packets per unit time , they will form a queue , and long queues will generally cause delays in information transmission and thus leads to congestion , or jamming .",
    "an important question then arises : can the topology of the underlying substrate graph influence the level of congestion in the network ?",
    "+ the answer is yes , as illustrated through the following trivial examples .",
    "a ) if the network was a star - like structure as in fig .",
    "[ fig : fig6]a ) , then obviously all pairs of nodes would be at most two hops from each other , which is advantageous from the point of view of shortest distance between sources and destinations ( and also routing would be very simple ) , however it would not work for large networks , because the central node would have to handle _ all _ the traffic from the other nodes and would have to process an extremely large queue .",
    "b ) on the contrary , if the network would have a ring - like structure as in [ fig : fig6]b ) , then in average there would be one server per one client , a rather advantageous setup from the point of view of having no congestion , however , there would be no short distances for transmission . more importantly , for both structures in fig .",
    "[ fig : fig6 ] , the network is rather vulnerable : in case of a ) the failure of the central node , and in the case of b ) the failure of any node , would cause a complete breakdown of transmission .",
    "= 4 in    to characterize this interdependence between structure and flow in more generality , we introduce the ratio @xmath124 , which , naturally , will be related to the instantaneous global _ congestion _ in the network . as explained above , if this ratio is small , then there will be only a few nodes ( @xmath125 ) processing the flow of many ( @xmath126 ) others and therefore , long queues are bound to occur , leading to congestion .",
    "if we assume that flows are generated by gradients in the network , we can define : @xmath127 as the _ congestion ( or jamming ) factor_. certainly , @xmath128 means maximal congestion and @xmath129 corresponds to no congestion , and we always have @xmath130 $ ] .",
    "note that @xmath131 is rather a _ congestion pressure _ characteristic generated by gradients , than an actual throughput characteristic .",
    "for the random graph substrate @xmath132 , @xmath133^{n-1-n}$ ] .",
    "we can show that in the limit @xmath134 and @xmath79 , @xmath135 \\to 1 $ ] , i.e. , the random graph becomes _ maximally congested_. when @xmath136 is kept constant while @xmath51 , a good approximation is @xmath137 .",
    "the @xmath138 function has a minimum at @xmath139 , when @xmath140 and @xmath141 .",
    "since @xmath142 is always bounded : @xmath143",
    "$ ] , for all @xmath144 and @xmath145 , @xmath146 $ ] . expanding for @xmath147",
    ", we obtain : @xmath148 , ( @xmath149 is the euler constant ) i.e. , the random graph asymptotically becomes _ maximally congested , or jammed_. the latter result ( up to corrections in @xmath150 ) can immediately be obtained if one uses directly the asymptotic form ( [ arlz ] ) and the fact that @xmath151 .",
    "= 5 in    for scale - free networks , however , the conclusion about jamming is drastically different .",
    "we find that the jamming ( pressure ) coefficient @xmath131 is always a _ constant , independent of @xmath6 _ , in other words , scale - free networks _ are not prone to maximal jamming _ !",
    "in particular , @xmath152 and @xmath153 figure [ fig : gnfig4 ] shows as comparison the congestion factors as function of network size both for random graph and scale - free network substrates .",
    "most real - world networks evolve more - or - less spontaneously ( like the internet or www ) and they also can reach massive proportions ( order @xmath154 nodes ) . at such proportions , pure random graph structures would generate maximal congestion pressure ( practically equal to unity ) in the network and thus such substrates would be very inefficient for transport .",
    "scale - free networks , however , have a congestion pressure which is a constant bounded well away from unity , and thus they are rather efficient substrates for transport .",
    "so why not all real - world networks are scale - free ?",
    "our analysis assumed that all edges have the same transport properties ( conductance , or `` cost '' ) , which is true for some networks like the www , the internet , and not true for others : power grid , social networks , etc .",
    "when there are weights on the _ edges _ ( conductance or cost ) the actual transport efficiency ( determined by actual throughput ) will strongly depend on those and therefore also select the network topology .",
    "note that the congestion pressure depends on _ local properties _ of network topology ( 2-step neighborhoods ) .",
    "thus we expect that all networks with similar 2-step neighborhood distributions would have similar gradient networks , not just the models studied here .    in summary , after introducing the concept of gradient flow networks , we have shown why certain complex networks might emerge to be scale - free . we do not give a specific mechanism for network evolution , which we believe to be network and process dependent , and therefore not universal .",
    "instead , the network evolution mechanism is _ selected _ such , that the transport ( the network s main function ) is efficient , while a number of constraints imposed by the specific nature of the network ( edge cost , conductance , etc . )",
    "are obeyed .    in the case of the internet , if a router is constantly jammed , engineers will resolve the problem by connecting to the network other routers in its network vicinity , to share the load .",
    "this is a tendency to _ optimize _ the network flow _",
    "locally_. a series of such local optimization processes will necessarily have to constrain the global structure of the network .",
    "it seems that scale - free networks are within the class of networks obeying this type of constraint .",
    "the authors acknowledge useful discussions with m. anghel , b. bollobs , p.l .",
    "erds , e.e . lopez and d. sherrington .",
    "is supported by the us doe under contract w-7405-eng-36 , k.e.b .",
    "is supported by the nsf through dmr-0406323 , dmr-0427538 , and the alfred p. sloan foundation .",
    "b. k. and g. k. were supported in part by nsf through dmr-0113049 , dmr-0426488 , and the research corp .",
    "was also supported in part by the lanl summer student program in 2004 through us doe grant no . w-7405-eng-36 .",
    "when calculating the degree distribution , we have to perform two averages : one corresponding to the scalar field disorder @xmath155 and the other to an average over the network ( graph ensemble ) : @xmath156 where @xmath157 , @xmath158 and @xmath159 . here",
    "@xmath0 is the binomial random graph @xmath1 with @xmath6 nodes and link - probability @xmath50 .",
    "the integrals in ( [ fieldav ] ) are computed over the range of the scalar field and the summation in ( [ nta ] ) is over all @xmath160 pairs @xmath49 with @xmath161 .    in order to calculate the in - degree distribution ,",
    "we define first a counter operator for the in - links . without restricting the generality",
    "we calculate the in - degree of the gradient network for node 0 namely , @xmath162 .",
    "let us introduce @xmath163 , where @xmath164 is the @xmath165 identity matrix so @xmath166 , and the quantities : @xmath167 for @xmath168 , and @xmath169 .",
    "thus , the in - link counter can be written as : @xmath170 with the aid of fig .",
    "[ fig : fig3 ] we see that indeed this expression will count the number of gradient edges into node 0 : @xmath171 is zero only if the _ neighbor _ @xmath12 of @xmath11 ( except node @xmath70 ) has a larger scalar value than node 0 , i.e. , @xmath172 , otherwise @xmath171 is equal to unity .",
    "therefore a term under the sum in ( [ k0 in ] ) will be non - zero if and only if for _ all _ neighbors @xmath12 of @xmath11 ( i.e. , @xmath173 ) @xmath174 holds , making the edge @xmath175 to be the gradient edge for node @xmath11 .      the probability that a node will have @xmath64 in - degree on the gradient network @xmath27 ,",
    "is : @xmath176 first , we compute the average over the scalar field . ( the order of the averages does not matter , however , it is formally easier this way . ) let us denote @xmath177 we have : @xmath178}\\ ] ] let @xmath179 .",
    "so @xmath180 using the recursion @xmath181 m_i(m-1)\\;,\\ ] ] the integral over @xmath182 can be performed : @xmath183e^{-{\\mathbf i}q \\sum_{i=1}^{n-1}a_{0i}[1-b_{i n-1}]m_i(n-2)}\\right\\}\\end{aligned}\\ ] ] where @xmath184 . performing all the integrals recursively , except for @xmath60",
    ", we obtain : @xmath185_n \\in { \\cal p}_n(n-1)}\\!\\!\\!\\ ! e^{-{\\mathbf i}q\\sum_{i=1}^{n-1}a_{0i}\\prod_{j=1}^n ( 1-b_{i\\tau(j ) } ) } \\nonumber\\ ] ] where @xmath186^{n-1-n } [ 1-\\gamma(h_0)]^{n}$ ] . here",
    "@xmath187_n = \\",
    "{ \\tau(1 ) , \\tau(2 ) , ... , \\tau(n ) \\}$ ] is a @xmath59-subset of the set @xmath188 and @xmath189 denotes the set of all @xmath59-subsets of @xmath188 .",
    "we have @xmath190 . after a change of variables @xmath191 and using @xmath192 the integral @xmath193 yields @xmath194 , i.e. , the in - degree distribution is independent on the choice of the @xmath46 distribution !    in the following , we perform the network average @xmath195 . for a fixed @xmath59-subset @xmath187_n$ ] , let us denote : @xmath196_n}(q ) \\equiv \\left\\langle e^{-{\\mathbf i}q\\sum_{i=1}^{n-1}a_{0i } \\prod_{j=1}^n ( 1-b_{i\\tau(j ) } ) } \\right\\rangle_{nw}\\;. \\label{ztq}\\ ] ] thus , @xmath197_n \\in { \\cal p}_n(n-1 ) } z_{[\\tau]_n}(q)\\;. \\label{lgq}\\ ] ] let @xmath198_n\\cup\\bigcup_{j=1}^{n}s^{(1)}_{\\tau(j)}\\ ] ] be the set of vertices @xmath187_n$ ] and its neighbors on @xmath0 .",
    "note , that @xmath199 if and only if @xmath200 otherwise it is zero .",
    "therefore , @xmath201 from ( [ nta ] ) @xmath196_n}(q ) = \\sum_{a_{01}} ... \\!\\!\\sum_{a_{n-2 n-1 } } v(a_{01})",
    "... v(a_{n-2 n-1})\\;\\prod_{i=1}^{n-1 } e^{-{\\mathbf i}q a_{0i } \\prod_{j=1}^n ( 1-b_{i\\tau(j)})}\\ ] ] since @xmath202 , ( @xmath187_n \\in { \\cal p}_n(n-1)$ ] ) , the sums over the matrix variables @xmath203 can be performed : @xmath204 and therefore @xmath196_n}(q ) = \\sum_{a_{12}} ... \\!\\!\\sum_{a_{n-2 n-1 } } v(a_{12}) ...",
    "v(a_{n-2 n-1})\\;\\prod_{i=1}^{n-1 } \\left [ 1-p + p e^{-{\\mathbf i}q\\prod_{j=1}^n ( 1-b_{i\\tau(j ) } ) } \\right]\\;. \\label{ztqe}\\ ] ]    the set of vertices @xmath205 is split into two groups : @xmath187_n$ ] and its complementary in @xmath205 . without changing anything",
    ", we can rename the vertices , such that @xmath206_n$ ] and @xmath207_n}=\\{n+1,n+2, ... ,n-1\\}$ ] be the complementary set of @xmath187_n$ ] .",
    "it is easy to see that only cross - terms ( @xmath208 involving one node @xmath11 from @xmath187_n$ ] and one node @xmath12 from @xmath207_n}$ ] ) give non - trivial contribution ( i.e. , different from unity ) in ( [ ztqe ] ) .",
    "thus : @xmath196_n}(q ) = \\prod_{i = n+1}^{n-1}\\sum_{a_{1 i}} ... \\sum_{a_{n i } } v(a_{1 i}) ...",
    "v(a_{n i } ) \\left [ 1-p + p e^{-{\\mathbf i}q\\prod_{j=1}^n ( 1-a_{ji } ) } \\right ] \\label{zst}\\ ] ] let @xmath209 and @xmath210 . then : @xmath211 = \\alpha_2+\\beta_2 e^{-{\\mathbf i}q(1-a_{2i}) ... (1-a_{ni})}\\ ] ] where @xmath212 and @xmath213 . the summation over the rest of the matrix elements can be similarly performed to give ( for a fixed node @xmath11 ) @xmath214 the coefficients are determined from the recursion : @xmath215 which obeys @xmath216 for all @xmath217 .",
    "these recursions are easily solved : @xmath218 thus ( [ abn ] ) becomes @xmath219 .",
    "since for all indices @xmath11 in ( [ zst ] ) the result of the summations is the same , one finally obtains : @xmath196_n}(q ) = \\left [ 1-p(1-p)^n\\left(1-e^{-{\\mathbf i}q}\\right ) \\right]^{n-1-n}\\;. \\label{zf}\\ ] ] because the result in ( [ zf ] ) is not specific of the @xmath187_n$ ] set , for all realizations of @xmath187_n$ ] , @xmath220_n}(q)$ ] is the same expression , and thus the sum over all realizations of @xmath187_n$ ] in ( [ lgq ] ) will generate the factor @xmath190 which cancels the combinatorial factor in ( [ lgq ] ) . thus : @xmath221_n}(q)$ ] . plugging this into ( [ degd ] ) , and performing the integral over the @xmath222 variable we obtain :",
    "@xmath223^{n-1-n - l } \\left [ p(1-p)^n\\right]^l   \\label{rnl3}\\ ] ] with the usual convention @xmath224 for @xmath225 .",
    "equation ( [ rnl3 ] ) is the exact expression for the in - degree distribution of the gradient network @xmath29 ."
  ],
  "abstract_text": [
    "<S> we define gradient networks as directed graphs formed by local gradients of a scalar field distributed on the nodes of a substrate network @xmath0 . </S>",
    "<S> we derive an exact expression for the in - degree distribution of the gradient network when the substrate is a binomial ( erds - rnyi ) random graph , @xmath1 . using this expression </S>",
    "<S> we show that the in - degree distribution @xmath2 of gradient graphs on @xmath1 obeys the power law @xmath3 for arbitrary , i.i.d . random scalar fields . </S>",
    "<S> we then relate gradient graphs to congestion tendency in network flows and show that while random graphs become maximally congested in the large network size limit , scale - free networks are not , forming fairly efficient substrates for transport . combining this with other constraints , such as uniform edge cost , we obtain a plausible argument in form of a selection principle , for why a number of spontaneously evolved massive networks are scale - free . </S>",
    "<S> this paper also presents detailed derivations of the results reported in ref . </S>",
    "<S> @xcite . </S>"
  ]
}
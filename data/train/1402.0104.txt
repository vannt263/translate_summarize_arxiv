{
  "article_text": [
    "tandem duplications ( td ) occur when a region of dna is duplicated and inserted adjacent to the original segment .",
    "this can be seen in figure [ td_example]a where we start with five contiguous regions , labeled @xmath3 .",
    "this is the original configuration and is termed the _",
    "reference_. we then have a tandem duplication of @xmath4 to give sequence @xmath5 .",
    "we then have a duplication of region @xmath6 to finally give @xmath7 .",
    "this is one process that has long been known to be implicated in the formation of gene clusters @xcite , @xcite and more recently has been implicated in the formation of amplicons in cancer @xcite , @xcite , @xcite , @xcite . in both cases",
    "darwinian selection may be acting to increase the number of copies of a target gene .    analyzing tandem duplication leads to some interesting combinatorics ,",
    "some questions of which have been considered elsewhere @xcite , @xcite , @xcite . in particular ,",
    "@xcite and @xcite count the number of td trees consistent with sequences arising from a td process .",
    "these methods generally assume , firstly , that breakpoints can be re - used , and secondly , that the full sequences ( such as @xmath7 above ) are available .",
    "neither of these two assumptions necessarily applies to all situations .",
    "firstly , a breakpoint in this context can mean the gap between two contiguous loci , such as a pair of genes in a gene cluster , which can cover a wide region and be implicated in more than one duplication event with reasonable probability , or it can mean the precise end points of the duplicated region , which are less likely to be implicated on more than one occasion .",
    "modern sequencing ( paired - end ) data can resolve breakpoints to the basepair level and reveal tandem duplications to great precision , such as with cancer data @xcite . in such cases ,",
    "when a tandem duplication occurs , two breakpoints are implicated in a presumably random process .",
    "the chance that precisely the same positions are subsequently implicated in another td is likely to be small and assuming unique breakpoint use is reasonable in these circumstances .",
    "the questions considered in this work are restricted to the case of unique breakpoint use .",
    "secondly , a full td sequence contains more information than we may be accustomed to . typically , we know the reference sequence , the number of copies of each region , and pairwise connectivity .",
    "for example , in figure [ td_example]b , instead of the sequence @xmath7 , we see that we have @xmath8 $ ] copies of the five originating regions .",
    "we refer to this as a _ cnv _ ( copy number vector ) .",
    "we also see that we have two types of _ somatic connection _ that do not exist in the originating reference @xmath3 ; one connecting the end of @xmath9 to the beginning of @xmath10 , the other connecting the end of @xmath10 to the beginning of @xmath9 .",
    "we can represent this as a _ td - graph _ , such as in figure [ td_example]ciii , where each node represents a reference region , the numbers at each node represent the number of copies , and the curved edges represent the somatic connections .",
    "this is representative of the information that is typically available from some sequencing experiments @xcite and represents the data at the end of the td process .",
    "however , the genome at the start of the process will be represented by the simple td - graph in figure [ td_example]ci which will change every time we have a td .",
    "we thus have a sequence of td - graphs , such as in figures [ td_example]ci , ii , iii , arising from a td process .",
    "we refer to this as a _ td - evolution_.    .",
    "b ) the _ copy number vector _ , counting the number of copies of each reference region .",
    "c ) the corresponding _ td - evolution _ containing three _ td - graphs _ ; nodes represent reference regions , numbers at nodes count the number of copies of each region , and edges indicate connections between segments.,width=604 ]    the problem we consider is concisely stated ; count the number of different td - evolutions that arise from @xmath0 tds .",
    "this is acheived as follows .",
    "firstly , we consider how to best represent the process .",
    "we will see that by labeling each somatic connection with a number we can turn the process into an automaton acting upon words consisting of positive integers ; any structure produced by @xmath0 tds can then be represented by a word on symbols @xmath11 .",
    "we then explore the size of this space of words .",
    "each word will be seen to correspond to many different td - evolutions .",
    "thus , secondly , we consider how to count the distinct td - evolutions that all correspond to a single word .",
    "this involves the construction of a suitable partially ordered set ( poset ) .",
    "thirdly , we combine these two pieces of information and provide an explicit count of the number of possible evolutions for a given number of tandem duplications . concluding remarks",
    "complete the paper .",
    "we now introduce representations of the td process , utilizing three different forms .",
    "first we have a visual _ zig - zag _ representation , which is used to describe the final structure relative to the originating reference structure .",
    "secondly we have an algebraic _ word evolution _ representation , which enables the process to be viewed as an automaton on words composed of integers .",
    "finally we have a _ @xmath12d - tree _ representation .",
    "now @xmath12d trees generalize the notion of trees .",
    "trees can be characterized as connected graphs such that each node has a single parental node , apart from a single root node .",
    "we can define an @xmath0d tree to be a graph such that all nodes ( except root nodes ) have @xmath0 parental nodes .",
    "this kind of graph has been applied to data forms arising from search algorithms @xcite , @xcite and have seen other applications in genetics as recombination graphs @xcite , and pedigree graphs @xcite , for example .     and",
    "@xmath13 indicate the end positions of the @xmath14 duplicated region .",
    "b ) corresponding 2d - tree .",
    "nodes correspond to breakpoints and edges demarcate an ordering .",
    "red and blue colours indicate lower and upper bound breakpoints . dashed and plain edges indicate minor and major edges .",
    "c ) corresponding hasse diagram .",
    "d ) the major graph corresponding to evolution e. f ) increases each symbol of e by 1 .",
    "g ) an induced evolution from f. h ) the major graph corresponding to induced evolution g. the black nodes indicate the corresponding @xmath15-nodeset.,width=604 ]    we introduce the requisite structure with the example in figure [ td_process ] .",
    "we start with a single segment ; an interval @xmath16 $ ] , which is represented as a single horizontal line in figure [ td_process]ai .",
    "all coordinates described below are positioned relative to this interval , as demarcated by the positions at the top of figure [ td_process]a .",
    "the node @xmath17 is assigned a type , @xmath18 ( coloured red ) , indicating it is the left end of a segment .",
    "node @xmath19 is assigned a type , @xmath20 , ( coloured blue ) indicating a right end of a segment .",
    "these labels are associated with the top two nodes of the @xmath12d - tree in figure [ td_process]b .",
    "these are bridged by an edge which will represent their ordering in the reference ; @xmath21 .",
    "next we have the first td event .",
    "this involves the duplication of a specific single region ( coloured green in figure [ td_process]ai ) , and so implicates two positions ; the left and right ends of the duplicated region , with reference coordinates @xmath22 and @xmath23 , respectively .",
    "now end @xmath23 is connected to @xmath22 in the duplication process , represented by the dashed line in the zig - zag diagram of figure [ td_process]aii .",
    "this is the first _",
    "somatic connection _ , labeled with numerical symbol @xmath15 .",
    "thus we have our first word of figure [ td_process]e ; @xmath15 .",
    "now the two positions @xmath22 and @xmath23 are both bound between the coordinates of @xmath17 and @xmath19 . in the 2d - tree representation",
    ", we have two nodes representing coordinates @xmath22 and @xmath23 .",
    "these nodes both have edges connected to two parental nodes @xmath17 and @xmath19 .",
    "we have edges of type @xmath18 ( red ) from node @xmath17 to @xmath22 and @xmath23 representing the fact that @xmath17 is a lower bound of @xmath22 and @xmath23 .",
    "similarly we have edges of type @xmath20 ( blue ) from @xmath19 to @xmath22 and @xmath23 , representing the fact that @xmath19 is an upper bound of @xmath22 and @xmath23 .",
    "the black edge is a third class of edge , termed a _ fence _ , and connects @xmath22 to @xmath23 , representing the restriction @xmath24 .",
    "our second td then duplicates the green portion in figure [ td_process]aii , which includes the first somatic connection , forming two breakpoints @xmath25 and @xmath26 .",
    "position @xmath25 is on the upper segment @xmath27 $ ] of figure [ td_process]aii and so must lie between positions @xmath17 and @xmath23 .",
    "these are its two parental nodes .",
    "the blue edge from node @xmath23 to @xmath25 indicates @xmath23 is an upper bound of @xmath25 .",
    "the red edge from @xmath17 to @xmath25 indicates @xmath17 is a lower bound of @xmath25 .",
    "the status of _ major _ ( solid ) and _ minor _ ( dashed ) is assigned to each pair of parental edges to a node , where major and minor refer to the parental nodes with higher and lower td numbers , respectively .",
    "for example , @xmath25 has parents @xmath23 and @xmath17 , the td numbers satisfy @xmath28 , so the edge from @xmath23 is the major , and that from @xmath17 is the minor .",
    "this distinction will later be important .",
    "this results in one new somatic connection , labeled @xmath12 , and a duplication of the original connection @xmath15 . reading the somatic connections through the structure in figure [ td_process]aiii then produces the second word @xmath29 of figure [ td_process]e .",
    "we then procede through the tds building up the 2d - tree . in general",
    "we have the following : + _ * 2d - tree construction * _ + initialize with segment @xmath16 $ ] .",
    "let @xmath30 and @xmath13 represent the reference positions of the start and end of the @xmath14 duplicated region , where @xmath0 is the _ td - number_. node @xmath30 is designated type @xmath18 ( coloured red ) , and @xmath13 is designated type @xmath20 ( coloured blue ) .",
    "if @xmath30 ( resp .",
    "@xmath13 ) lies on the segment @xmath31 $ ] we have a type @xmath18 ( red ) edge from @xmath32 to @xmath30 ( resp .",
    "@xmath13 ) , and a type @xmath20 ( blue ) edge from @xmath33 to @xmath30 ( resp .",
    "@xmath13 ) .",
    "if @xmath34 , the edge from @xmath32 is major ( solid ) , the edge from @xmath33 is minor ( dashed ) .",
    "this is reversed if @xmath35 .",
    "if @xmath30 and @xmath13 are formed on the same segment , no somatic connections are duplicated , and we must have @xmath36 which we represent with a fence edge ( black ) between nodes @xmath30 and @xmath13 . + note that the choice of major and minor is ambiguous for the first td .",
    "both @xmath22 and @xmath23 are placed on the same interval @xmath16 $ ] so have parental nodes @xmath17 and @xmath19 that have equal td - number @xmath37 .",
    "it will prove consistent to define them as follows ; @xmath22 has major ( resp .",
    "minor ) parental nodes @xmath19 ( resp .",
    "@xmath17 ) , @xmath23 has major ( resp .",
    "minor ) parental nodes @xmath17 ( resp .",
    "@xmath19 ) . note that in all other cases either a type @xmath18 node @xmath30 is placed on @xmath31 $ ] , where @xmath38 resulting in new interval @xmath39 $ ] , with @xmath40 , or a type @xmath20 node @xmath13 is placed on @xmath31 $ ] , where @xmath38 resulting in new interval @xmath41 $ ] , with @xmath42 . thus apart from the initial interval ,",
    "the td numbers of the endpoints of any interval are distinct and the major / minor is well defined .",
    "we note that the relative order of positions @xmath30 and @xmath13 distinguishes two types of somatic connection .",
    "the somatic connection of the @xmath14 td is _ reversed _ when @xmath36 and otherwise it is _",
    "forward_. note , for example , that the first td in figure [ td_example]cii is reversed ( @xmath43 ) with a backward direction on the corresponding edge of the td - graph .",
    "this is the type of connection usually associated with tds .",
    "however , the second td is forward ( @xmath44 ) with a forward direction on the corresponding ( lower curved ) edge of the td - graph in figure [ td_example]ciii .",
    "this is the type of connection usually associated with dna deletions , but can occur from multiple tds .",
    "finally we comment that the presence of fences implies structures such as figure [ td_process]b take a more general form than a 2d - tree . for convenience",
    "we use the phrase _",
    "2d - tree _ with that understanding in mind .",
    "we can describe the evolution in the example of figure [ td_process]a in terms of words ( figure [ td_process]e ) ; @xmath45 ( duplicated subwords are underlined ) . here",
    ", the second td duplicates the first somatic connection , the third td duplicates no somatic connections , and the fourth duplicates the sub - word of somatic connections @xmath46 .",
    "this evolution of words is an example of an automaton @xcite : + _ * td word automaton * _ + initialize with word @xmath47",
    ". then the word formed from the @xmath14 td is obtained recursively as :    @xmath48    here @xmath49 is the length of word @xmath50 , @xmath51 is the sub - word formed from the @xmath52 letter to the @xmath53 letter ( inclusive ) , and @xmath54 . if @xmath55 then @xmath56 is empty . if @xmath57 then @xmath58 is empty . if @xmath59 then @xmath60 is empty .",
    "+ we refer to the sequence @xmath61 as a _ word evolution _ on @xmath0 tds .",
    "we let @xmath62 denote the set of all possible word evolutions on @xmath0 tds .",
    "we introduced fences for the situation where @xmath30 and @xmath13 form on the same segment .",
    "this means that the @xmath14 td does not duplicate any somatic connections . in terms of the word automaton , these correspond to a step where no symbols are duplicated ; no symbol is duplicated in the step @xmath63 for example .",
    "we next consider how many words can arise from @xmath0 tds , that is , the size of the space @xmath62 .",
    "for example , from the initial word @xmath15 , a second td can produce words @xmath46 , @xmath64 or @xmath29 , and @xmath65 ; two words of length @xmath12 and one word of length @xmath66 .",
    "in general we have the following result .",
    "if @xmath67 is the number of words of length @xmath68 arising from @xmath0 tds , we have the following recursion ,    @xmath69    where we have initial values @xmath70 [ lengththeorem ]    if we have a word with @xmath71 symbols then we can duplicate @xmath72 of those symbols .",
    "furthermore there are @xmath73 sets of @xmath74 consecutive symbols that we can choose to duplicate .",
    "note that a td duplication copies @xmath74 symbols and also introduces one new td symbol , resulting in a word with @xmath75 symbols .",
    "then @xmath76 for @xmath72 and any word of length @xmath68 can derive from a word of length @xmath77 .",
    "lastly , we note that there are @xmath78 ways to do this .        in figure [ td_words ]",
    "we see a graph representation of the possibilities , where values @xmath79 are equivalently obtained by taking products of the edge values along paths to the associated node , from the node labeled @xmath37 , and summing . for example , the node labeled @xmath80 in the fourth column of nodes corresponds to @xmath81 and has two paths , one with product @xmath82 , the other with @xmath83 and we find @xmath84 , five words of length five ; @xmath85 , @xmath86 , @xmath87 , @xmath88 and @xmath89 .",
    "it is natural to attempt to find a general formula for the number of words arising from @xmath0 tds by constructing a generating function from this recursion .",
    "however , this approach did not prove fruitful suggesting a closed form expression for the word count is not forthcoming .",
    "the counts @xmath90 of words arising from @xmath0 tds can be seen in table [ tablecount ] .",
    "although we can count the number of words with relative ease , there maybe several different td - evolutions that correspond to a single word .",
    "we see from figure [ td_evolution_counts]a , for example , that there are three td - evolutions possible in the word evolution @xmath91 $ ] , where the second somatic connection follows one copy of the first .",
    "these cases can be phrased more familiarly in terms of td sequences .",
    "now two tds result in four breakpoints @xmath22 , @xmath23 , @xmath25 and @xmath26 that divide the original interval @xmath16 $ ] into five regions @xmath92 , @xmath10 , @xmath93 , @xmath9 and @xmath94 .",
    "there are three choices that use two pairs of breakpoints uniquely such that the second somatic connection follows the first .",
    "if we underline the duplication and use ` @xmath95 ' for the @xmath96 somatic connection ; @xmath97 , @xmath98 and @xmath99 .",
    "counting copies of the five regions @xmath92 , @xmath10 , @xmath93 , @xmath9 and @xmath94 , we see that the three cases give rise to cnvs @xmath100 $ ] , @xmath100 $ ] and @xmath101 $ ] , respectively .",
    "although the first two are equal , all three can be seen to have distinct td - graphs in figure [ td_evolution_counts]a .",
    "these three cases have the following explanation in terms of breakpoint ordering .",
    "once the first duplication has occurred , the two breakpoints @xmath25 and @xmath26 associated with the second td need to be positioned . now , the first td requires @xmath43 resulting in segments @xmath27 $ ] and @xmath102 $ ] ( see figure [ td_process]aii , for example ) . to obtain the word @xmath46 from word @xmath15",
    "we find that we must not copy the first somatic connection , and both @xmath25 and @xmath26 must lie on the second segment @xmath102 $ ] , so we have @xmath103 .",
    "we then find that the three cases depend on whether @xmath104 is less than , in between , or greater than @xmath25 and @xmath26 .",
    "the three evolutions in figure [ td_evolution_counts]a i - iii then correspond to the three orders @xmath105 , @xmath106 or @xmath107 .",
    "these distinct orders represent possible breakpoint positions , subject to the restrictions @xmath43 from the first td , and @xmath103 from the second td . articulating these restrictions",
    "more generally requires the construction of a suitable partially ordered set ( _ poset _ ) @xcite .",
    "a poset is a set of elements with some order relationships between the elements .",
    "posets are usually represented by a hasse diagram .",
    "this is a directed graph where nodes represent the poset elements , and a directed edge between two nodes indicates an order relation between the two corresponding elements .",
    "any single ordering of the elements that satisfies such a set of restrictions is known as a _ linear extension_. the hasse diagram for any",
    "td word evolution can be readily constructed from the corresponding 2d - tree as follows .    if the direction of the type @xmath20 ( blue ) edges are reversed in the 2d - tree , and fences are directed from @xmath30 to @xmath13 whenever they occur , a hasse diagram with single source node @xmath17 and single sink node @xmath19 is obtained .",
    "[ hassecor ]    for example , in figure [ td_process]b we see 2d - tree corresponding to the word evolution given in figure [ td_process]e . in figure",
    "[ td_process]c we see the same graph except the blue edge directions have been reversed , and the three fences are directed .",
    "note that all fully extended , directed paths lead from @xmath17 to @xmath19 .",
    "any linear extension , such as @xmath108 at the top of figure [ td_process]a , is satisifed by this hasse diagram .",
    "( _ of lemma [ hassecor ] _ ) when we add any node @xmath109 to the 2d - tree , it has two parental nodes @xmath32 and @xmath33 . by construction ,",
    "the node @xmath110 represents a breakpoint that is placed on the segment @xmath31 $ ] with leftmost reference position @xmath32 and rightmost position @xmath33 , thus we have the ordering @xmath111 in terms of reference position .",
    "now the type @xmath18 edge directed from @xmath32 to @xmath110 represents the ordering @xmath112 .",
    "we then select direction of the edges in the hasse diagram to represent increasing reference position .",
    "now @xmath113 , so we require a directed edge from @xmath110 to @xmath33 , which is obtained by reversing the direction of the type @xmath20 edge in the @xmath12d - tree from @xmath33 to @xmath110",
    ". finally we note that if we have a fence , we are adding two position @xmath30 and @xmath13 to the same segment .",
    "we then have the additional ordering @xmath114 which is represented by the addition of a direction from @xmath30 to @xmath13 .    .",
    "b ) three structures associated with word @xmath64 .",
    "c ) five structures associated with word @xmath29 . in each instance",
    "the left hand image is the zig - zig plot , and the right hand plot the td - graph.,width=604 ]    counting the number of different td - evolutions associated with a given word then reduces to counting the number of linear extensions associated with a poset .",
    "although finding any single linear extension from a poset can be achieved in polynomial time @xcite , counting the number of linear extensions is known to be # p - complete @xcite and in general is slow to implement @xcite .",
    "however , for the problem we have , we will show that restricting the hasse diagram to major edges and fence edges ( that is , removing the minor edges ) contains all the ordering information .",
    "this simplified topology will enable us to obtain a closed form expression for the number of linear extensions .",
    "for any word evolution @xmath94 , we will refer to the graph obtained from 2d - tree @xmath115 by selecting just the major and fence edges as the _ major graph _",
    ", @xmath116 .",
    "the next result tells us that this simplified structure contains two trees if we also ignore the fences .",
    "the restriction of the hasse diagram to the major edges results in two trees rooted to nodes @xmath17 and @xmath19 .    in the construction of the poset graph , every node @xmath117 has two parental nodes , labeled @xmath32 and @xmath33 , arising from the segment @xmath31 $ ] that breakpoint @xmath110 is formed upon .",
    "these two nodes are connected to @xmath110 by a major and minor parental edge , where @xmath118 and @xmath119 are the major and minor td numbers , respectively . thus if we are restricted to the major edges , each node has one parental node , resulting in two trees attached to roots @xmath17 and @xmath19 .",
    "the following result describes how major and minor status relates to the segments of the form @xmath31 $ ] involved in the td process .",
    "it will be used to explain why removing the minor edges from the hasse diagram does not lose any information .",
    "if @xmath31 $ ] is any segment arising in the evolution of a td process then either :    \\a ) nodes @xmath32 and @xmath33 are connected by a single directed major edge from the node with td number @xmath119 to node with td number @xmath118 .",
    "the positions satisfy the single linear extension @xmath120 .    or :",
    "\\b ) nodes @xmath32 and @xmath33 are connected by a minor directed edge from the node with td number @xmath119 to that with td number @xmath118 . furthermore there",
    "exist nodes with td numbers in the order @xmath121 that are connected in a chain of major edges in the same order such that :    \\i ) if @xmath34 , all internal nodes are type @xmath18 ( red ) and the positions satisfy the single linear extension ,    @xmath122 ,    \\ii ) if @xmath35 , all internal nodes are type @xmath20 ( blue ) and the positions satisfy the single linear extension ,    @xmath123 .",
    "[ corelemma ]    we prove this by induction .",
    "initially we start with a single segment @xmath16 $ ] and the first td results in two segments @xmath27 $ ] and @xmath102 $ ] ( such as in figure [ td_process]aii ) .",
    "now node @xmath23 has major parental node @xmath17 and @xmath22 has major parental node @xmath19 .",
    "thus each of these segments has a single major edge connecting the corresponding nodes and so satisfy the conditions of the lemma .    for the induction we next assume that any segment @xmath31 $ ] satisfies the conditions of the lemma for all @xmath124 . for each segment",
    "we thus have either a single major edge connecting nodes @xmath32 and @xmath33 , or a minor edge connecting them along with a chain of major edges .",
    "we then introduce the @xmath125 td duplicating a region with endpoints @xmath126 and @xmath127 .",
    "we need to check all resulting segments satisfy the lemma .",
    "we have four cases to check .",
    "* case i * : the entire segment @xmath31 $ ] is duplicated or unmodified ; then the poset graph is unchanged between nodes @xmath32 and @xmath33 and we have nothing to do .",
    "* case ii * : the breakpoint @xmath126 lies in @xmath31 $ ] .",
    "we thus obtain a new segment @xmath128 $ ] . a new node",
    "@xmath126 then has major and minor parents with td number @xmath118 and @xmath119 .",
    "we then have two possibilities depending on whether @xmath129 and @xmath130 are connected by a major or minor edge .",
    "* case iia * : if they are connected by a major edge then we see that if @xmath35 then we have a new major edge from @xmath131 , and segment @xmath128 $ ] satisfies criterion a of the lemma .",
    "if @xmath34 , then we have a minor edge @xmath131 and a chain of two major edges @xmath132 , which satisfy @xmath133 , and segment @xmath128 $ ] matches criterion bi of the lemma .",
    "* case iib * : now @xmath129 and @xmath130 are connected by a minor edge , along with a chain of major edges as described in the theorem . then if @xmath35 we have a single major edge @xmath134 , and the conditions of the theorem are met .",
    "if @xmath34 we have a single minor edge @xmath134 and major edge @xmath135 with order @xmath133 .",
    "if we combine this condition with the inductive hypothesis of the theorem ; @xmath122 , we obtain @xmath136 , which again has the correct structure .",
    "* case iii * : if the breakpoint @xmath127 lies in @xmath31 $ ] , a parallel set of reasoning to case ii applies .",
    "* case iv * : if both breakpoints @xmath126 and @xmath127 lie in @xmath31 $ ] , we obtain segments @xmath137 $ ] and @xmath128 $ ] .",
    "these are the same segments as cases ii and iii and the same arguments apply to both segments .",
    "we now use this result to describe the inheritance nature of major and minor edges .        if any node has a major parental node of type @xmath18 ( resp .",
    "@xmath20 ) , its minor parent is the most recent common ancestor ( in the major graph ) of opposite type @xmath20 ( resp .",
    "@xmath18 ) . [ ab_structure ]",
    "consider the branch in figure [ td_ab_graphs]c .",
    "node @xmath138 has a major type @xmath18 parental node @xmath139 .",
    "the most recent type @xmath20 ancestor of @xmath138 is node @xmath140 , which is its minor parent .",
    "node @xmath141 has a major type @xmath20 parental node @xmath142 , we have to go back to node @xmath143 for its most recent type @xmath18 ancestor , its minor parental node .",
    "( _ of corollary [ ab_structure ] _ ) now by lemma [ corelemma ] any two nodes @xmath32 and @xmath33 bridging a segment @xmath31 $ ] are linked by a major or a minor edge .",
    "if a new node @xmath109 corresponding to a new breakpoint in this interval is formed , @xmath32 and @xmath33 are the major and minor parents , in some order .",
    "we have four cases to check :    * case i * : ( @xmath35 , major edge from @xmath32 to @xmath33 ) .",
    "then @xmath110 has minor parent @xmath32 and major parent @xmath33 .",
    "the minor parent @xmath32 is then connected to @xmath110 by the chain of major edges @xmath144 .",
    "node @xmath110 has a major parent of type @xmath20 and the minor parent @xmath32 is the most recent ancestor of type @xmath18 in the major graph ( see figure [ td_ab_graphs]ai ) .    *",
    "case ii * : ( @xmath34 , major edge from @xmath33 to @xmath32 ) .",
    "analogous to case i ; swap @xmath129 and @xmath130 , and swap @xmath18 and @xmath20 in argument ( see figure [ td_ab_graphs]aii ) .",
    "* case iii * : ( @xmath35 , minor edge from @xmath32 to @xmath33 ) .",
    "then by lemma [ corelemma ] minor node @xmath32 is connected to major @xmath33 by a chain of major edges of the form @xmath145 for some internal nodes of type @xmath20 .",
    "now node @xmath110 has major parental node @xmath33 so there is also a major edge @xmath146 .",
    "together we have the chain of major edges @xmath147 .",
    "we then find @xmath110 has a major of type @xmath20 and the minor @xmath32 is the most recent ancestor of type @xmath18 in the major graph ( see figure [ td_ab_graphs]aiii ) .",
    "* case iv * : ( @xmath34 , minor edge from @xmath33 to @xmath32 ) .",
    "analogous to case iii ; swap @xmath129 and @xmath130 , and swap @xmath18 and @xmath20 in argument ( see figure [ td_ab_graphs]aiv ) .",
    "we can now explain the sense in which minor edges can be removed from the hasse diagram . specifically , we find that any set of nodes connected by a directed chain of major edges has a single ordering . more precisely :",
    "consider any single directed chain of major edges connecting nodes @xmath148 where @xmath149 are nodes of type @xmath18 and @xmath150 are nodes of type @xmath20 .",
    "suppose furthermore that these nodes are in some order such that @xmath149 is an ancestor of @xmath151 for @xmath152 , and @xmath150 is an ancestor of @xmath153 for @xmath154 .",
    "these nodes have a single linear extension of the form :    @xmath155 . [ singlebranch ]",
    "thus as we follow any single path down the major tree , the types @xmath18 and @xmath20 of the nodes can be intermixed . however , the td numbers of the @xmath18 nodes increases down the path , as does the td numbers of the @xmath20 nodes .",
    "furthermore , the reference positions of the @xmath18 nodes increase and @xmath20 nodes decrease towards each other ( see figure [ td_ab_graphs]b for an example ) .",
    "now consider any sub - chain of nodes connected by major edges of the form @xmath156 .",
    "then @xmath157 has major parent @xmath158 ( of type @xmath20 ) , so @xmath159 . also , @xmath160 has major parent @xmath143 ( of type @xmath18 ) so @xmath161 .",
    "we also know that @xmath162 all have @xmath143 as their minor parent by corollary [ ab_structure ] , so @xmath163 for @xmath164 .",
    "together we then have the single order @xmath165 .",
    "if the chain then continues as a chain of type @xmath18 nodes @xmath166 , we similarly find that @xmath167 .",
    "however , @xmath168 has minor parent @xmath143 by corollary [ ab_structure ] so @xmath169 .",
    "we then find that these two orders combine into the single order @xmath170 .",
    "thus we find that as we move down a chain of nodes connected by major edges , the @xmath18 and @xmath20 nodes lie in one single nested structure where the @xmath18 nodes are increasing and the @xmath20 nodes are decreasing in reference position as we move down the major graph ; a single linear extension .",
    "we now explain how to count the linear extensions using the major graph . in all that follows",
    "@xmath171 represent binomial coefficients , and @xmath172 represent multinomial coefficients .",
    "there are two situations we need to deal with .",
    "\\i ) suppose @xmath173 branches descend from a single node @xmath174 in the major graph , such that the @xmath175 branch contains @xmath176 descendant nodes , and none of the @xmath173 daughter nodes of @xmath174 are connected by a fence .",
    "then the number of linear extensions involving the associated @xmath177 breakpoints is @xmath178 , where @xmath179 , and @xmath180 is the number of linear extensions associated with the @xmath176 nodes in branch @xmath71 .",
    "\\ii ) suppose two of the branches descending from a single node @xmath174 in the major graph contain @xmath181 and @xmath182 descendant nodes , respectively , and the two daughter nodes of @xmath174 in these branches are connected by a fence .",
    "then the number of linear extensions involving the associated @xmath177 breakpoints is @xmath183 , where @xmath184 , and @xmath185 and @xmath186 are the number of linear extensions associated with the @xmath181 and @xmath182 nodes in the respective branches .",
    "[ combinatoricslemma ]    \\i ) we have @xmath180 linear extensions associated with branch @xmath71 .",
    "if we select one linear extension from each branch , we have , by corollary [ singlebranch ] , @xmath173 orderings of the form :    @xmath187    here @xmath188 are the breakpoints represented by the nodes in branch @xmath71 .",
    "now node @xmath174 is the common ancestor of the @xmath173 branches and so arises from the earliest td .",
    "then by corollary [ singlebranch ] either @xmath189 is the left most node and is of type @xmath18 , or @xmath190 is the right most node and is of type @xmath20 ( in figure [ td_ab_graphs]b for example , the red node from the earliest td is type @xmath18 and has the lowest position ) .",
    "now node @xmath174 is fixed in position and common to all @xmath173 branches .",
    "any pair of nodes from different branches are unrestricted relative to each other .",
    "any pair of nodes within a branch @xmath71 have one relative order from the linear extension selected from the @xmath180 possibilities of that branch .",
    "we then need to count the number of ways of intercalating @xmath181 nodes from branch @xmath15 , with @xmath182 nodes from branch @xmath12 , through to @xmath191 nodes from the last branch .",
    "there are @xmath192 ways to do this .",
    "\\ii ) we now consider the case of a fence between two daughter nodes @xmath30 and @xmath13 of @xmath174 , which results in the extra condition @xmath36 .",
    "we have an ordering from each branch . by corollary [ singlebranch ] ,",
    "if @xmath174 is of type @xmath18 they will take the form :    @xmath193    @xmath194    here @xmath195 and @xmath196 are the breakpoints represented by the nodes descending from @xmath30 and @xmath13 , respectively .",
    "now there are @xmath197 ways to interlace these two orders .",
    "furthermore , precisely one of these interlacements contradicts the extra condition @xmath36 , and that is :    @xmath198    we subtract this single order from the count @xmath197 to give the desired result .",
    "the case where @xmath174 is of type @xmath20 is similar with the same conclusion .",
    "finally we put this information together to count the number of linear extensions arising from the 2d - tree .",
    "let the nodes @xmath17 , @xmath19 and daughter edges be removed from the major graph .",
    "for each node @xmath110 remaining let @xmath199 denote the number of nodes that are present in each of @xmath173 descending branches .",
    "if any pair of daughter nodes are connected by a fence , they contribute a factor @xmath200 , where @xmath201 and @xmath202 count the number of nodes descending down each branch connected by the fence .",
    "these two branches are then treated as a single branch with @xmath203 daughter nodes .",
    "we then associate the number @xmath204 with node @xmath110 .",
    "the number of distinct evolutions is then the product of these terms across nodes and fences .",
    "[ counttheorem ]    the td process starts with segment @xmath16 $ ] which produces two segments @xmath27 $ ] and @xmath205 $ ] after the first td .",
    "all future segments produced will always have at least one parental node with a td number greater",
    "then @xmath37 so the only major edge from @xmath17 leads to @xmath23 and the only major edge from @xmath19 leads to @xmath22 .",
    "then @xmath17 and @xmath19 both have single branches descending . now , applying lemma [ combinatoricslemma ] to any node with a single descending branch containing @xmath0 nodes results in a combinatorial term of the form @xmath206 .",
    "the combinatorial factors from @xmath17 and @xmath19 can thus be ignored . for the remaining nodes we see from lemma [ combinatoricslemma ] that the orders @xmath207 associated with nodes in individual branches are multiplied into the combinatorial terms ( such as @xmath208 ) associated with the parental node .",
    "we thus multiply the terms of the form @xmath208 from nodes and @xmath209 from fences .",
    "consider the word evolution @xmath210 $ ] with 2d - tree in figure [ td_process]b .",
    "once @xmath17 and @xmath19 are removed we have two fences corresponding to td numbers @xmath15 and @xmath66 .",
    "the restriction to major and fence edges then results in the graph in figure [ td_process]d .",
    "the upper fence has two nodes attached to one side and six nodes to the other .",
    "this results in a count @xmath211 .",
    "we note that node @xmath104 has three branches descending ; one fenceless branch with two nodes , and two branches bridged by a fence ; one and two nodes down each branch .",
    "the latter two branches with the fence then have @xmath212 orders and are then treated as a single branch of three nodes .",
    "there are then @xmath213 ways of interlacing the five positions from the remaining branch with two nodes and amalgamated branch with three nodes .",
    "the total number of linear extensions , and so td - evolutions , associated with word evolution @xmath94 is then @xmath214 .",
    "note that in the proof we saw that a node with a single descending branch containing @xmath0 nodes results in a combinatorial factor @xmath206 .",
    "this is true in general and explains why combinatorial terms from nodes with one descending branch were ignored in this example .",
    "we thus now can count both the number of td words , and the number of distinct evolutions for each word .",
    "we next consider how to combine this information and count the total number of evolutions for a given number of tds .",
    "we have seen that a td process can be represented as an automaton on words . furthermore , the number of td - evolutions represented by any single word evolution can be obtained from the corresponding major graph using the methods of the previous section .",
    "this naturally leads to the problem of determining the total number of td - evolutions .",
    "for example ,",
    "in figure [ td_evolution_counts ] we see all eleven evolutions that arise from two tds ; three evolutions corresponding to word @xmath46 , three corresponding to @xmath64 and five corresponding to @xmath29 .",
    "the aim of this section is to prove our main discovery :    the number @xmath215 of distinct evolutions arising from @xmath0 tds is given by :    @xmath216    [ evocounter ]    thus @xmath217 , in agreement with figure [ td_evolution_counts ] , for example .",
    "the first few terms in this series can be seen in the bottom row of table [ tablecount ] .      before constructing a proof of theorem [ evocounter ] , we discuss a motivating example . recall that @xmath62 is the set of word evolutions on @xmath0 tds . consider the following examples .",
    "@xmath218 $ ]    @xmath219 $ ]    @xmath220 $ ]    the first two word evolutions both use four symbols ; @xmath221 .",
    "these only differ in the labeling of tds ; all we have done is increase each symbol in @xmath94 by @xmath15 to get @xmath222 .",
    "in @xmath223 we have a word evolution involving one more td ; @xmath224 .",
    "there are two things to note .",
    "firstly , if we delete the symbol @xmath15 in @xmath223 we recover evolution @xmath222 .",
    "that is , conversely , introducing a new first td event to @xmath225 results in @xmath224 .",
    "this suggests we can generate td - evolutions in general by the repeated introduction of initial tds .",
    "this leads to the following definition :    if a new first td is introduced to word evolution @xmath226 , the resulting evolution @xmath227 is called an _ induced _ evolution .",
    "secondly , the major graph of @xmath223 is given in figure [ td_process]h .",
    "although we can form this directly from the word evolution @xmath223 using the 2d - tree construction from the previous section , we note that figure [ td_process]h is a subgraph of the 2d - tree from the original evolution @xmath94 ( figure [ td_process]b ) .",
    "this suggests we can get the major trees of induced evolutions from the 2d - trees of the originating evolutions .",
    "this implies in general that there may be a connection between @xmath228 and @xmath229 , both in terms of word evolutions , and in terms of major graphs .",
    "we need to explore both of these links in more detail .",
    "firstly we observe that for any word evolution there are a range of ways that a new first td can be introduced .",
    "for example , take the trivial td - evolution @xmath230 $ ] , and increase the symbols by @xmath15 ; @xmath231 $ ] .",
    "we can introduce a new first td in three ways ; @xmath232 $ ] , @xmath233 $ ] or @xmath234 $ ] .",
    "note that all three word evolutions reduce back to evolution @xmath235 $ ] if all copies of symbol @xmath15 are deleted .",
    "we will show something stronger in general ; each single word evolution @xmath236 leads to a unique subset of induced evolutions @xmath237 .",
    "we will secondly show that all the major graphs for the word evolutions of @xmath238 can be obtained from the 2d - tree for @xmath94 .",
    "now for any individual word evolution @xmath94 , we can use the major graph @xmath116 to count the number of associated td - evolutions using theorem [ counttheorem ] .",
    "we will extend this and show that the number of td - evolutions corresponding to @xmath238 is equal to the number of td - evolutions corresponding to @xmath94 multiplied by a constant factor @xmath239 . applying this observation recursively to the spaces @xmath240",
    "will then be seen to result in theorem [ evocounter ] .      for induced evolutions to be a useful concept , we must establish that any word evolution @xmath227 can be uniquely represented as an induced evolution from some word evolution @xmath241 .",
    "let @xmath242 be the process where we remove all copies of td symbol @xmath15 from word evolution @xmath94 and reduce each symbol by @xmath15 .",
    "this process has the following properties :    \\i ) if @xmath243 , then @xmath244 is a valid word evolution .",
    "\\ii ) for any word evolution @xmath241 , there exists a word evolution @xmath227 such that @xmath245 .",
    "[ lemmamap ]    \\i ) any evolution @xmath94 starts with trivial word @xmath15 .",
    "the next td in @xmath94 results in word evolution @xmath91 $ ] , @xmath246 $ ] or @xmath247 $ ] .",
    "for all three choices , removing the initial @xmath15 from the evolution leaves us the value @xmath12 , which becomes @xmath15 when the symbols are reduced in value by @xmath15 , thus we obtain the correct initial word for @xmath242 .",
    "now the word evolution is constructed by the td word automaton as a mapping of the form @xmath248 , for possibly empty subwords @xmath92 , @xmath249 or @xmath10 , for the @xmath250 td .",
    "if we remove all copies of the symbol @xmath15 from the subwords @xmath92 , @xmath249 and @xmath10 , and reduce all symbols by @xmath15 , to give @xmath251 , @xmath252 and @xmath253 , respectively , we get a mapping of the form @xmath254 which is a valid step in the @xmath14 iteration of the td word automaton , as required .",
    "\\ii ) for any evolution @xmath255 $ ] from @xmath229 we simply construct @xmath256 $ ] where word @xmath257 is obtained from @xmath258 by increasing each symbol by @xmath15 .",
    "this is a valid word evolution in @xmath259 .",
    "then applying @xmath9 to @xmath223 recovers @xmath94 , as required .",
    "this allows us to partition the space @xmath229 as follows :    let @xmath260 denote the set of induced evolutions from @xmath94 .",
    "then :    \\i ) for any two evolutions @xmath261 , the two corresponding sets of induced evolutions do not overlap ; @xmath262 .",
    "\\ii ) the set of induced evolutions satisfies the relation , @xmath263 .",
    "[ disjointunion ]    \\i ) we have shown from lemma [ lemmamap]i that deletion of symbol @xmath15 creates is a well defined mapping @xmath264 .",
    "conversely , therefore , we therefore can not have distinct word evolutions @xmath261 that produce the same induced evolution @xmath223 when a new first td is introduced ; @xmath265 and @xmath266 are thus distinct .",
    "\\ii ) we know from lemma [ lemmamap]ii that for any @xmath241 , @xmath267 .",
    "this implies that @xmath268 .",
    "conversely , from lemma [ lemmamap]i we know that @xmath269",
    ".    thus we can generate all of the word evolutions in @xmath259 as a disjoint union of induced evolutions from @xmath62 .",
    "we wish to construct the major graphs @xmath270 of all the induced word evolutions @xmath271 from the 2d - tree @xmath115 of the original evolution . to do this we need to relate the positions of new symbol @xmath15 in the new evolution @xmath223 to the nodes of the 2d - tree @xmath115 .",
    "in all that follows @xmath249 represents unspecified subwords in a word evolution .",
    "we have the following definition .",
    "let @xmath272 be the node labels for a 2d - tree @xmath273 , where @xmath222 is the word evolution after the td numbers have been increased by @xmath15 in some word evolution @xmath94 .",
    "for any evolution @xmath223 induced from @xmath94 , a _ @xmath15-nodeset _",
    "@xmath274 is defined as follows :    \\i ) if the word @xmath275 in word evolution @xmath222 becomes word @xmath276 in induced evolution @xmath223 , then @xmath277 .",
    "\\ii ) if the word @xmath275 in word evolution @xmath222 becomes @xmath278 in induced evolution @xmath223 , then @xmath279 .",
    "\\iii ) @xmath280 [ nodeset ]    in figure [ td_process]f ,",
    "g we have evolutions :    @xmath281 $ ]    @xmath282 $ ]    now @xmath12 in @xmath222 becomes @xmath46 in @xmath223 , so @xmath283 .",
    "similarly , @xmath284 becomes @xmath285 so @xmath286 ( see bold symbols above ) .",
    "we see @xmath287 becomes @xmath288 , the symbol @xmath289 picking up a @xmath15 either side in the induced evolution , so that @xmath290 .",
    "finally we note that @xmath80 remains isolated from the symbol @xmath15 so @xmath291 .",
    "thus @xmath292 .",
    "@xmath15-nodeset _ is a subset of the node labels for the 2d - tree .",
    "we find these sets have the following tree like structure :    let @xmath115 be the 2d - tree for a word evolution @xmath94 , and @xmath293 be the _",
    "@xmath15-nodeset _ corresponding to an induced evolution @xmath223 .",
    "then if @xmath294 ,    \\i ) if @xmath110 is not a root node , its parents are in @xmath293 .",
    "\\ii ) if @xmath110 is the parental node of a fence , at least one of the daughter nodes must be in @xmath293 .",
    "conversely , any set of nodes @xmath293 from @xmath115 satisying i ) and ii ) is a _",
    "@xmath15-nodeset _ for some induced evolution @xmath223 .",
    "[ nodesetsnbetatrees ]    thus the _ @xmath15-nodesets _ have the tree like property that for any node belonging to the _",
    "@xmath15-nodesets _ , all its ancestors are also present .",
    "in particular , the root nodes belong to @xmath293 .",
    "consider the example above ; @xmath292 , these are the ( solid ) nodes in figure [ td_process]h which satisfy these criterion .",
    "the two roots @xmath22 and @xmath23 are in @xmath293 .",
    "there is a fence between @xmath25 and @xmath26 , which have parental nodes @xmath295 that are members of node set @xmath293 .",
    "at least one of @xmath296 must therefore be in @xmath293 , and in this case @xmath26 is .",
    "( _ of lemma [ nodesetsnbetatrees ] _ ) consider the @xmath14 td in evolution @xmath94 .",
    "we have two cases to consider .",
    "* case i * : the td is not a fence .",
    "then we have a node @xmath30 with parents @xmath32 and @xmath33 , and node @xmath13 with parents @xmath297 and @xmath298 .",
    "we also have step @xmath299 in the corresponding word evolution @xmath94 , where the somatic connections from @xmath130 to @xmath300 ( inclusive ) are duplicated .",
    "note that subword @xmath301 represents somatic connections across the region containing the breakpoint @xmath30 , and @xmath302 similarly covers breakpoint @xmath13 .",
    "we consider changes to the parts @xmath301 and @xmath302 of word @xmath303 when symbol @xmath15 is introduced in the induced evolution separately .",
    "* case ia * : if we have word @xmath301 after symbol @xmath15 has been introduced into @xmath223 , then by definition [ nodeset ] , @xmath304 .",
    "we then find we have evolution step @xmath305 in @xmath223 and so symbol @xmath0 is not adjacent and left of symbol @xmath15 and we find that @xmath306 .",
    "that is , if the major parent of @xmath30 is not in @xmath293 , @xmath30 can not be in @xmath293 .",
    "if we have @xmath307 after symbol @xmath15 has been introduced , then by definition [ nodeset ] , @xmath308 .",
    "that is , the parents of @xmath30 are in @xmath293 .",
    "now we have two possibilities .",
    "firstly , we can have evolution step @xmath309 in @xmath223 , where the somatic connection @xmath15 is not duplicated . in this case",
    "we find symbol @xmath0 is not adjacent to a @xmath15 so by definition [ nodeset ] , @xmath306 .",
    "secondly , we can have evolution step @xmath310 , where the somatic connection @xmath15 is duplicated . in this case",
    "we find symbol @xmath0 is adjacent and left of symbol @xmath15 so by definition [ nodeset ] , @xmath311 .",
    "thus if the parents of @xmath30 are in @xmath293 , @xmath30 may or may not be in @xmath293 depending upon the choice of the induced evolution .",
    "note that the converse is also true and if the parents of @xmath30 are in @xmath293 , we select the evolution step depending on whether @xmath30 is in @xmath293 .",
    "* case ib * : the argument for node @xmath13 , which depends upon @xmath302 , is analogous , with the same conclusions .",
    "* case ii * : consider the case that the @xmath14 td results in a fence .",
    "in that case we have a step @xmath312 in @xmath94 .",
    "then if we have corresponding step @xmath312 in induced evolution @xmath223 we find that @xmath304 by definition [ nodeset ] and both @xmath313 .",
    "alternatively we may find that we have a step of the form @xmath314 in @xmath223 .",
    "then parental nodes @xmath308 and we have three possibilities to consider .",
    "we may have @xmath315 . here",
    "the @xmath15 is not duplicated , but we find @xmath0 is to the right of a @xmath15 and so @xmath316 .",
    "we may have @xmath317 . here",
    "the @xmath15 is not duplicated , but we find @xmath0 is to the left of a @xmath15 and so @xmath311 .",
    "lastly , we may have @xmath318 . here",
    "the @xmath15 is duplicated and both @xmath319 .",
    "thus when the parent nodes of a fence are in @xmath293 , at least one of the daughter nodes @xmath30 or @xmath13 must be .",
    "conversely , when the parent node and one or more of @xmath30 or @xmath13 are in @xmath293 , we select the corresponding evolutionary step .",
    "we can now show how to construct the major graph @xmath270 from the parental 2d - tree @xmath115 .    for any evolution",
    "@xmath223 induced from @xmath94 , let @xmath293 be the corresponding @xmath15-nodeset obtained from lemma [ nodesetsnbetatrees ] .",
    "let @xmath115 be the 2d - tree corresponding to @xmath94 .",
    "the major graph @xmath270 is constructed as follows .",
    "\\i ) select all nodes from @xmath115 and increase each td number in the node labels by @xmath15 .",
    "\\ii ) if any type @xmath18 ( resp .",
    "@xmath20 ) node ( that is not a root ) is a member of @xmath293 , select the parental edge of the same type , @xmath18 ( resp .",
    "@xmath20 ) .",
    "\\iii ) if any type @xmath18 ( resp .",
    "type @xmath20 ) node ( that is not a root ) is immediately adjacent ( but not in ) @xmath293 , select the parental edge from the opposite type , @xmath20 ( resp .",
    "@xmath18 ) .",
    "\\iv ) if any node @xmath30 ( resp .",
    "@xmath13 ) is neither a member of , or immediately adjacent to , @xmath293 , select the major edge of @xmath30 from @xmath115 .",
    "\\v ) if @xmath30 and @xmath13 are connected by a fence in @xmath115 ( for td number @xmath320 ) , select the fence if and only if @xmath306 or @xmath321 .",
    "\\vi ) place a fence between @xmath322 and @xmath104 and swap these two node labels .",
    "[ treeoperations ]    consider again the original 2d - tree @xmath115 in figure [ td_process]b , where @xmath94 is the evolution in figure [ td_process]e .",
    "we wish to construct and the major graph @xmath270 ( of induced evolution @xmath223 ) given in figure [ td_process]h by applying the lemma .",
    "we found the @xmath15-nodeset corresponding to evolution @xmath223 previously as @xmath323 , the black nodes in figure [ td_process]h . then to construct @xmath270 we take the nodes of @xmath115 and first increase the td numbers by @xmath15 , swap the two labels with td number @xmath15 , and place a fence between them .",
    "node @xmath324 is adjacent to @xmath293 so we select the edge from the node of opposite @xmath20 type by lemma [ treeoperations]iii .",
    "this was @xmath19 , which is now mapped to @xmath22 , so we select edge @xmath325 .",
    "node @xmath283 , so we select the parental edge of same node type @xmath20 .",
    "this was also @xmath19 , so we select the edge from mapped node @xmath326 . by lemma [ treeoperations]v",
    ", we furthermore select the fence between nodes @xmath25 and @xmath26 .",
    "now @xmath286 thus we select the edge from type @xmath18 parent , the node @xmath23 ( mapped from @xmath17 ) .",
    "node @xmath327 is not in or adjacent to @xmath293 so we select the major edge from @xmath115 ; @xmath328 .",
    "now @xmath290 so we select the edges from parental nodes of same type ; @xmath329 and @xmath330 parental node @xmath26 .",
    "nodes @xmath331 are adjacent to @xmath293 so we select its parent edges of opposite type ; @xmath332 and @xmath333 .",
    "observe that the differences between @xmath115 and @xmath270 are a form of subtree prune and graft operations @xcite ; when the major edge is swapped for the minor edge we are pruning from the major parental node and grafting to the minor parental node .",
    "( _ of lemma [ treeoperations ] _ )    \\i ) all the breakpoints from evolution @xmath94 remain in evolution @xmath223 so we inherit the representative breakpoints .",
    "the introduction of a new first td increases each td number by @xmath15 .",
    "\\ii ) consider the case that we have a type @xmath18 node @xmath311 .",
    "then we have evolution step @xmath305 in @xmath222 , and @xmath30 has major and minor parents @xmath32 and @xmath33 in @xmath115 ( in some order , depending upon whether @xmath34 ) .",
    "this evolution step becomes @xmath310 in @xmath223 .",
    "then the somatic connection @xmath15 is duplicated and breakpoint @xmath30 occurs between somatic connections @xmath129 and @xmath15 .",
    "the major and minor parents are then @xmath334 in @xmath335 .",
    "now @xmath336 so the major parent of @xmath30 in @xmath335 is the node @xmath32 . thus if we have a type @xmath18 node @xmath311 , we select the parental edge of the same type ; @xmath337 , irrespective of whether it was the major or minor in @xmath115 .",
    "the argument for @xmath13 is analogous .",
    "\\iii ) consider the case that @xmath30 is adjacent to a node in @xmath293 , that is , its major and minor parents are in @xmath293 .",
    "then we have evolution step @xmath305 in @xmath94 that becomes @xmath309 in @xmath223 .",
    "this time , in the induced evolution , the major and minor parents of @xmath30 are @xmath338 .",
    "now @xmath339 so the major parent of @xmath30 in @xmath223 is node @xmath33",
    ". thus if we have a type @xmath18 node @xmath311 , we select the parental edge of the opposite type ; @xmath340 , irrespective of whether it was the major or minor in the original evolution @xmath94 . the argument for @xmath13 is analogous .",
    "\\iv ) consider the case that @xmath30 is neither adjacent to a node in , or a member of @xmath293 .",
    "then we have evolution step @xmath305 in @xmath94 that becomes @xmath305 in @xmath223 .",
    "now the major / minor status of @xmath30 does not change from the original .",
    "the argument for @xmath13 is analogous .",
    "\\v ) if @xmath30 and @xmath13 are connected by a fence we have a step of the form @xmath312 in @xmath94 .",
    "the corresponding step in the induced evolution @xmath223 takes one of four forms .",
    "firstly , if @xmath318 in @xmath223 , then @xmath0 is adjacent to @xmath15 on both sides , so @xmath319 . note that @xmath0 has duplicated symbol @xmath15 , so we do not have a fence in @xmath270 . secondly ,",
    "if we have @xmath315 in @xmath223 , then @xmath306 and @xmath316 .",
    "note that @xmath0 has not duplicated the symbol @xmath15 and we still have a fence .",
    "thirdly , the evolution @xmath317 in @xmath223 similarly preserves the fence , with @xmath311 and @xmath321 .",
    "finally , if we have @xmath312 in @xmath223 , the fence is preserved and @xmath313 .",
    "thus @xmath270 contains the fence if and only if at least one of @xmath306 or @xmath321 is true .",
    "\\vi ) firstly note that the initial td in any evolution must occur on the single reference segment , and so must be fence because there are no prior tds to duplicate , thus we place a fence between nodes @xmath22 and @xmath23 .",
    "consider the @xmath14 td for some @xmath320 .",
    "note that the only way that node @xmath30 or @xmath13 can have a parental node @xmath17 or @xmath19 is to have a step of the form @xmath341 or @xmath342 in word evolution @xmath94 .",
    "consider first the step @xmath341 .",
    "note that @xmath0 must represent a fence because there are no symbols to the left of @xmath0 which could have been duplicated .",
    "then @xmath30 and @xmath13 have minor parents @xmath17 and some major parent @xmath33 .",
    "the induced evolution can then be in one of three forms .",
    "firstly , we can have corresponding step @xmath343 in @xmath223 . in this case , from definition [ nodeset ] we find @xmath30 is in @xmath293 and so is connected to its type @xmath18 parent @xmath17 by ii ) above .",
    "now because @xmath0 is a fence , @xmath13 has the same parents as @xmath30 , so is adjacent to @xmath293 in @xmath115 . then using iii ) above we find @xmath13 is connected to its type @xmath18 parent , also @xmath17 .",
    "however , constructing the major tree directly from the 2d - tree corresponding to word evolution @xmath223 , we find that @xmath0 is a fence with major parent @xmath23 .",
    "thus to get an equivalent form from the original 2d - tree , we map @xmath17 to @xmath23 .",
    "the case for @xmath344 is similar , resulting in a map from @xmath19 to @xmath22 .    for the third choice ,",
    "the step becomes @xmath345 in @xmath223 .",
    "we then find that @xmath319 by definition [ nodeset ] as @xmath0 is adjacent to @xmath15 on both sides .",
    "thus in the major graph for @xmath223 , @xmath30 is connected to its type @xmath18 parent @xmath17 and @xmath13 is connected to its @xmath20 parent @xmath346 .",
    "however , direct from @xmath223 we see that @xmath30 has major parent @xmath23 and @xmath13 has major parent @xmath346 , so again we map @xmath17 to @xmath23 for a consistent correspondence .",
    "the argument using step @xmath342 and node @xmath30 from @xmath94 is entirely similar with parallel conclusions .    in summary , we now know that for any word evolution @xmath347 there is a unique subset of induced evolutions @xmath348 , each member @xmath223 of which corresponds to a @xmath15-nodeset from the 2d - tree of @xmath94 .",
    "we can now use this to produce the major graph @xmath335 for the induced evolution using lemma [ treeoperations ] .",
    "we can then calculate the number of td - evolutions associated with each @xmath223 from theorem [ counttheorem ] .",
    "we thus need to sum the td - evolution counts across the set of @xmath15-nodesets corresponding to @xmath260 . whilst this is possible , leading to @xmath239 induced td - evolutions for each word evolution @xmath94 , the proof relies on a more general space of graphs than we have considered so far , which we now introduce .",
    "firstly we generalize the notion of the 2d - tree obtained from tds .",
    "a _ @xmath349-tree _",
    "@xmath350 is any directed graph such that :    \\i ) all nodes and edges are classified as either type @xmath18 or type @xmath20    \\ii ) there is a root node ( @xmath92 ) of type @xmath18 and a root node ( @xmath10 ) of type @xmath20 , and all directed edges point away from the roots .",
    "\\iii ) all other nodes have a type @xmath18 parental node and a type @xmath20 parental node .",
    "the two edges from the parental nodes are also of type @xmath18 and @xmath20 , respectively .",
    "either the two parents are the two roots , or one parent is a descendant of the other .",
    "the edge from the more recent ancestor is the major , the other is the minor .",
    "\\iv ) a type @xmath18 node and type @xmath20 node may be linked by a fence if they have the same parental nodes , or are the two roots .",
    "thus the 2d - trees defined from tds are @xmath349-trees , for example .",
    "note that @xmath349-trees are more general ; take figure [ td_tree_operations]a , b , for example , they do not have an even number of nodes and can not arise from a td process , but satisfy the requirements of a @xmath349-tree .",
    "similar to the 2d - tree construction , the major graph @xmath351 of a @xmath349-tree @xmath350 is the graph obtained when the minor edges are removed .    .",
    "i ) the full 2d - trees ; blue are type @xmath20 nodes or edges , red are type @xmath18 nodes or edges .",
    "solid lines are major edges , dashed lines are minor edges .",
    "black edges are fences .",
    "ii ) the major graph when nodes @xmath92 and @xmath10 are contracted .",
    "iii)-vi ) major graphs corresponding to @xmath349-subtrees indicated by blackened nodes .",
    "@xmath349-subtrees are partitioned into subgraphs @xmath352 connected to node @xmath92 and @xmath353 connected to node @xmath10 .",
    "iii ) major graphs when both @xmath354 are empty .",
    "iv ) major graphs when @xmath355 and @xmath356 .",
    "v ) the trees when @xmath357 and @xmath358 .",
    "vi ) major graphs when @xmath359 .",
    "vii ) the total @xmath360 of combinatorial terms of trees with @xmath74 nodes in component connected to node @xmath92.,width=529 ]    secondly , we generalize the notion of @xmath15-nodesets .    a _ @xmath349-subtree _ @xmath361 of a @xmath349-tree @xmath350 is a subset of nodes from @xmath350 such that :    \\i ) the two root nodes are in @xmath361 .",
    "\\ii ) if a node in @xmath361 is the parent of a fence , one of the two daughter nodes bridged by the fence must also be in @xmath361 .",
    "\\iii ) if a node is in @xmath361 , both parental nodes are also in @xmath361 .",
    "[ subtree ]    consider figure [ td_tree_operations]a , b . here",
    "the original @xmath349-trees are in figures [ td_tree_operations]a , bi .",
    "the @xmath349-subtrees are indicated in figure [ td_tree_operations]a , b iii - iv by the solid nodes .",
    "note that the two roots are always in @xmath361 .",
    "these are the parents of the fence @xmath362 in figure [ td_tree_operations]b and so in agreement with definition [ subtree]ii we find that at least one of the two nodes @xmath143 and @xmath160 bridged by @xmath362 lies in @xmath361 .",
    "the @xmath349-subtree @xmath361 of a @xmath349-tree @xmath350 can be used to define a modified major graph , analogously to the construction of @xmath270 in lemma [ treeoperations ] , as follows :    for a @xmath349-tree @xmath350 and @xmath349-subtree @xmath361 , the induced tree @xmath363 is the major graph obtained from @xmath350 by the following operations .",
    "\\i ) select all nodes from @xmath350 .",
    "\\ii ) for any node ( that is not a root ) in @xmath361 of type @xmath18 ( resp .",
    "@xmath20 ) , select the parental edge of same type @xmath18 ( resp .",
    "type @xmath20 ) .",
    "\\iii ) if any node ( that is not a root ) of type @xmath18 ( resp .",
    "@xmath20 ) is immediately adjacent ( but not in ) @xmath361 , select the parental edge of opposite type @xmath20 ( resp .",
    "type @xmath18 ) .",
    "\\iv ) if any node is neither a member of , or immediately adjacent to , @xmath361 , select the major parental edge from @xmath350 .",
    "\\v ) if two nodes are connected by a fence in @xmath350 , select the fence if and only if one or both nodes are not in @xmath361 .",
    "[ newtree ]    note that this definition differs from lemma [ treeoperations ] in one important way . by definition [ subtree ]",
    ", any @xmath349-subtree contains both root nodes . by definition [ newtree]v ,",
    "any fence between the two root nodes is not selected in @xmath363 .",
    "however , we find by lemma [ treeoperations]ii that @xmath270 will contain a fence between the two roots .",
    "we will later see that this difference has an important implication for the calculation of the total number of possible td - evolutions .    in order to introduce the main property of @xmath349-trees that will allow us to count td - evolutions we need to introduce some notation .",
    "+    * for any @xmath12d - tree @xmath350 with major graph @xmath363 corresponding to @xmath349-subtree @xmath361 : * * @xmath364 is the graph obtained when the two root nodes of @xmath363 are contracted together . *",
    "* @xmath365 is the product of combinatorial coefficients across nodes and fences of @xmath363 given by theorem [ counttheorem ] .",
    "* @xmath366 denotes the set of valid @xmath349-subtrees according to definition [ subtree ] .",
    "* @xmath367 denotes the trivial @xmath349-subtree containing just the two root nodes . * for any node or fence @xmath110 in @xmath350 : * * @xmath368 is the number of nodes from @xmath110 and its descendants in @xmath350 , attached to the @xmath92 root in @xmath363 . *",
    "* @xmath369 denotes the restriction of @xmath361 to @xmath110 and its descendants . * * @xmath370 denotes the set of possible subsets @xmath369 . * * @xmath371 denotes the product of factors of @xmath365 arising from @xmath110 and its descendants . *",
    "* @xmath372 denotes the single factor associated with node ( or fence ) @xmath110 . *",
    "* terms with an overline added , such as @xmath373 , are the corresponding terms using @xmath364 instead of @xmath363 . * * when terms , such as @xmath372 ( and @xmath371 ) , only depend upon @xmath110 ( and its descendants ) in @xmath363 , we equivalently use notation @xmath374 ( and @xmath375 ) .    in figure",
    "[ td_tree_operations]bii we have a @xmath349-tree .",
    "the graphs in each of figures [ td_tree_operations]biv - vi are the possible major graphs @xmath363 , where each @xmath349-subtree @xmath361 can be identified from the solid nodes .",
    "the counts @xmath376 can be seen above the @xmath92 node for each graph .",
    "node @xmath160 in the @xmath349-tree in figure [ td_tree_operations]bii has two daughter branches with one node each , so we write @xmath377 .",
    "we trivially have @xmath378 for leaf nodes @xmath379 and @xmath380 ; the descendants of @xmath160 , so can also write @xmath381 .",
    "we are finally in a position to describe the following fundamental result , which will allow us to determined the total number of td - evolutions .",
    "let @xmath350 be any @xmath349-tree with @xmath293 nodes , and @xmath366 the corresponding set of @xmath349-subtrees .",
    "then for any @xmath382 we have :    @xmath383    [ kerneltheorem ]    we see in figure [ td_tree_operations]bii the major graph @xmath384 , where the two root nodes have been contracted together .",
    "there are two non - trivial combinatorial terms .",
    "one from the fence @xmath362 below the root , which has two nodes descending the left side , three the right , resulting in combinatorial coefficient @xmath385 , by theorem [ counttheorem ] .",
    "the other term comes from the daughter node @xmath160 to the right of the root , which has two daughter branches with one node each , resulting in combinatorial term @xmath386 .",
    "all other nodes give coefficient @xmath15 .",
    "together we get the factor @xmath387 , the number in square brackets given below the graph .",
    "now there are two major graphs @xmath388 , @xmath389 for which @xmath390 ; the first graph in figure [ td_tree_operations]biv , which has combinatorial term @xmath391 , and the fifth graph in figure [ td_tree_operations]bvi , which has combinatorial term @xmath392 .",
    "these add up to the same value @xmath393 we found for the graph with contracted roots , agreeing with equation ( [ mainequation ] ) for @xmath394 .",
    "( _ of theorem [ kerneltheorem ] _ )",
    "we prove this by induction on the number of nodes in the @xmath349-tree .",
    "+ _ * induction initial case * _ + firstly consider @xmath349-trees with @xmath395 nodes in total .",
    "there are two root nodes @xmath92 and @xmath10 of type @xmath18 and @xmath20 , respectively .",
    "there are only two possible @xmath349-trees depending on whether @xmath92 and @xmath10 are linked by a fence .",
    "now any subtree from @xmath366 must contain the two roots by definition [ subtree]i , so there is only the one subtree @xmath396 to consider .",
    "if there is a fence between @xmath92 and @xmath10 then by definition [ newtree]v , the fence does not belong to @xmath397 .",
    "thus for both cases @xmath397 contains both root nodes and no edges .",
    "now the only value that @xmath398 can take is @xmath15 and @xmath399 ; the number of nodes attached to node @xmath92 is @xmath15 . now from theorem [ counttheorem ] ,",
    "the combinatorial term associated with each node @xmath92 and @xmath10 is @xmath15 .",
    "furthermore , the contracted tree @xmath384 is a single node , which similarly has a combinatorial term of @xmath15 .",
    "we then find that :    @xmath400    the result is therefore correct for @xmath349-trees with @xmath395 nodes .",
    "+ _ * inductive assumption * _ + next we make the inductive hypothesis that the theorem is true for all @xmath349-trees with @xmath401 nodes , for some @xmath402 .",
    "we now consider a @xmath349-tree @xmath350 with @xmath403 nodes .",
    "we have two root nodes , @xmath92 and @xmath10 .",
    "the daughter nodes from these two roots may be either type @xmath18 nodes from root node @xmath10 , type @xmath20 nodes from root node @xmath92 , or fences descending from both nodes , as portrayed in figure [ td_proof_pic]ai .",
    "note also that although the original @xmath349-tree @xmath350 can have type @xmath18 nodes with major parent @xmath92 , or type @xmath20 nodes with major parent @xmath10 , they can effectively be assumed to have opposite parentage .",
    "more specifically , if we have a daughter node @xmath404 of type @xmath18 descending from either root node , then when any @xmath349-subtree @xmath361 not including @xmath404 ( such as @xmath367 ) is used , we find @xmath404 is attached to @xmath10 in @xmath363 by definition [ newtree]iii . also , for any @xmath349-subtree @xmath361 including @xmath404 ( such as the entire nodeset from @xmath350 ) , we find @xmath404 is attached to @xmath92 in @xmath363 by definition [ newtree]ii .",
    "when the two roots are contracted in @xmath384 we find node @xmath404 attached to the single root .",
    "thus the choice of which root to use as the major parent of @xmath404 has no affect on the validity of equation ( [ mainequation ] ) and we take the root @xmath10 as stated . the argument for daughter node @xmath405 is similar .",
    "this is equivalent to assuming @xmath406 .",
    "although there may be any number of these type of branches descending from the roots , for the sake a simpler exposition we provide the proof just for the four branches drawn in figure [ td_proof_pic]ai .",
    "the generalization is relatively straightforward ( see comment at end of proof ) .",
    "now we require a sum over @xmath349-subtrees @xmath361 such that @xmath407 .",
    "that is , we require @xmath74 nodes in the component of @xmath363 attached to root node @xmath92 . we suppose that in the original tree @xmath350 ( see figure [ td_proof_pic]ai ) there are @xmath30 , @xmath13 and @xmath408 nodes contained in each of the two branches containing nodes @xmath18 and @xmath20 , and the two branches containing the fence @xmath362 , respectively , where @xmath409 .",
    "we suppose that there are subsequently @xmath410 , @xmath411 and @xmath412 of these nodes attached to @xmath92 in major tree @xmath363 , such as in figure [ td_proof_pic]aii .",
    "the count @xmath74 includes node @xmath92",
    "so we require @xmath413 .",
    "now @xmath365 is a product of terms across the nodes and fences , which can be split into @xmath92 , @xmath10 , the nodes in the two branches containing @xmath18 and @xmath20 , and the two branches bridged by fence @xmath362 . recalling the terminology introduced above , we can split the combinatorial term for major tree @xmath363 as :    @xmath414    note that @xmath415 , @xmath416 , @xmath417 and @xmath418 are the subsets of @xmath361 the include nodes @xmath18 , @xmath20 , @xmath419 and @xmath420 and their descendants , respectively .",
    "thus when we have trivial @xmath349-subtree @xmath421 , we find these subsets are empty ; @xmath422 .    the left hand side of equation ( [ mainequation ] )",
    "can then be split into sums across the four branches as follows : @xmath423    now the sum is restricted to @xmath349-subtrees with @xmath424 nodes in the branches descending from @xmath92 .",
    "we have three branches from node @xmath92 with node counts @xmath410 , @xmath411 and @xmath412 , where the two branches containing @xmath419 and @xmath420 are treated as a single branch in accordance with theorem [ counttheorem ] .",
    "thus we find that we associate node @xmath92 with the multinomial coefficient :    @xmath425    we similarly find we have :    @xmath426    we thus have expressions for two terms in equation ( [ messyequation ] ) . to calculate the remaining terms we show that each branch corresponds to a smaller @xmath349-tree ( @xmath427 nodes ) which will enable us to use the inductive hypothesis .",
    "we have three cases to consider .",
    "+ _ * case i : dealing with type @xmath18 branches * _ + instead of the full @xmath349-tree @xmath350 ( represented in figure [ td_proof_pic]ai ) , consider the @xmath349-tree in figure [ td_proof_pic]bi which we obtain by removing all branches except the branch containing @xmath18 , removing edge @xmath428 and contracting nodes @xmath92 to @xmath18 together .",
    "we call the resulting @xmath349-tree @xmath429 .",
    "the corresponding major graphs for @xmath350 and @xmath429 are represented in figures [ td_proof_pic]a , bii .",
    "now every @xmath349-subtree @xmath430 of @xmath429 can be written as @xmath431 for some @xmath432 .",
    "this correspondence applies for every @xmath433 . for this single case ,",
    "@xmath434 we find the root @xmath18 for @xmath429 is missing from @xmath435 , and we do not have a valid @xmath349-subtree of @xmath429 .",
    "we thus treat the two cases of @xmath436 and @xmath433 separately .",
    "* case ia * ( @xmath436 ) .",
    "now the major branch of @xmath12d - tree @xmath350 containing @xmath18 is unmodified in @xmath363 .",
    "thus all @xmath30 nodes in the branch containing the @xmath18 node are in one component connected to the root @xmath10 node , and so @xmath437 .",
    "now for any @xmath433 , node @xmath18 is attached to the root @xmath92 in @xmath363 by definition [ newtree]ii , so @xmath438 .",
    "thus the only case with @xmath439 is @xmath436 . for this case",
    "we note that @xmath440 , and the following equation holds true .",
    "@xmath441    * case ib * ( @xmath433 ) we next verify equation ( [ ca ] ) for values @xmath442 .",
    "now for @xmath433 we have well defined @xmath349-subtrees @xmath431 .",
    "furthermore , the descendants of root @xmath18 in the major graph @xmath443 match the descendants of node @xmath18 in major graph @xmath363 , and we find that the combinatorial term associated to tree @xmath443 will be precisely @xmath444 . noting that @xmath429 has at least one less node than @xmath350 , we can apply the inductive hypothesis using equation ( [ mainequation ] ) to @xmath429 and hence derive equation ( [ ca ] ) for the remaining cases where @xmath438 .",
    "+ _ * case ii : dealing with type @xmath20 branches * _ + by a symmetric argument on the branch with node @xmath20 we obtain an analogous equation of the form :    @xmath445    _ * case iii : dealing with daughter fences * _ + we are interested in the remaining combinatorial term @xmath446 from equation ( [ messyequation ] ) that we have yet to examine .",
    "this corresponds to the two branches containing nodes @xmath419 and @xmath420 , and the fence @xmath362 between them .",
    "we thus define @xmath349-tree @xmath429 as the restriction of @xmath350 to these two branches ( see figure [ td_proof_pic]ci ) .",
    "if we also remove the fence @xmath362 , we get the @xmath349-tree in figure [ td_proof_pic]di , which we call @xmath447 .",
    "we use terms , such as @xmath448 and @xmath449 for example , to refer to combinatorial terms associated to @xmath429 and @xmath447 .",
    "the reason for doing this is because the combinatorial terms of the two sets of induced major graphs are closely related , which we will exploit . for example , in figure [ td_tree_operations]a we see a @xmath349-tree with a fence and in [ td_tree_operations]b we see the same @xmath349-tree with the fence removed .",
    "the combinatorial terms ( in square brackets below each graph in figures [ td_tree_operations]a , biii - vi ) are identical in all cases except when either @xmath450 or @xmath451 is empty .",
    "first consider @xmath447 . for the graph in figure [ td_proof_pic]di we have @xmath452 nodes descending from node @xmath92 and @xmath453 from node @xmath10 .",
    "now because there is no fence @xmath362 present in @xmath447 we have two separate branches ; one from root @xmath92 down the branch containing node @xmath420 , the other from root @xmath10 down the branch containing node @xmath419 .",
    "we can then apply the same methods as cases i and ii above to conclude equation ( [ mainequation ] ) is valid for @xmath447 ( figure [ td_proof_pic]d ) .",
    "this gives us :    @xmath454    here we have used the fact that the components @xmath455 and @xmath456 derived from the @xmath349-tree @xmath447 ( corresponding to the two triangles in figure [ td_proof_pic]diii ) are identical to the components @xmath457 and @xmath458 derived from the original @xmath349-tree @xmath350 ( see figure [ td_proof_pic]aiii ) .",
    "the combinatorial term @xmath459 arises because when the two root nodes are contracted together the single resulting node has two descending branches containing @xmath453 and @xmath452 nodes ( see figure [ td_proof_pic]diii ) , and we then apply theorem [ counttheorem ] .",
    "now we want the corresponding sum to equation ( [ equation4proof ] ) for tree @xmath429 .",
    "we have four cases to consider depending on whether @xmath417 or @xmath418 are empty .",
    "+ ( @xmath460 ) now if both subsets @xmath417 and @xmath418 are non - empty , we find from lemma [ treeoperations]v that node @xmath419 is attached to root @xmath92 and node @xmath420 is attached to root @xmath10 , and the fence is not part of @xmath429 .",
    "this results in the identical situation to @xmath447 , where there was no fence @xmath362 in the first place .",
    "we then find that :    @xmath461    an example of this can be seen in figure [ td_tree_operations]a , bvi , where the combinatorial terms ( in square brackets ) are equal between the two groups .",
    "iii ) trees @xmath462 after root node contraction.,width=529 ]    now from equation ( [ messyequation ] ) we are interested in the subsets @xmath417 and @xmath418 such that the number of nodes either bridged by , or descending from , fence @xmath362 is equal to @xmath412 for some value @xmath463 . we have just seen that when @xmath417 and @xmath418 are both non - empty , the two sums in equation ( [ ca ] ) corresponding to trees @xmath429 and @xmath447 are equal for all values of @xmath463 . for the remaining three cases , where at lease one of @xmath417 and @xmath418 is empty , we will see that there is a constant difference between the sums arising from trees @xmath429 and @xmath447 .",
    "furthermore , the value @xmath463 will be seen to arise in exactly one of these three cases .",
    "+ ( @xmath464 and @xmath465 ) the @xmath349-subtree @xmath421 is trivial and there are no changes to the major graph .",
    "we then find there are @xmath452 nodes present in the branch descending from @xmath92 in @xmath466 .",
    "we thus find this case applies if @xmath465 .",
    "now this situation does not apply to @xmath429 ( when the fence @xmath362 is present ) .",
    "the parental nodes of @xmath362 ( the roots in this case ) lie in @xmath421 , so one of the two nodes bridged by @xmath362 must lie in the @xmath349-subtree @xmath361 by definition [ subtree]ii .",
    "we thus find that although @xmath467 in a valid @xmath349-subtree for @xmath447 , @xmath468 is not a valid @xmath349-subtree for @xmath429 ( figure [ td_tree_operations]a , biii only has a contribution for the fenceless graph , for example ) .",
    "for @xmath447 , the trivial conditions @xmath464 result in a single induced major tree ( corresponding to figure [ td_proof_pic]di ) , with major edges that match the original @xmath349-tree @xmath350 , and we obtain combinatorial term @xmath469 .",
    "we thus find :    @xmath470    * case iii iii * ( @xmath471 , @xmath472 and @xmath473 ) now @xmath417 is trivial , so the arm descending from @xmath10 containing node @xmath419 is unchanged from the original major graph for both trees @xmath429 and @xmath447 , and all @xmath453 nodes remain in the component of the major graph containing @xmath10 ( @xmath474 ) . after the changes induced by @xmath418 , the other arm splits with @xmath475 nodes belonging to the component of the major tree containing @xmath92 , and @xmath476 nodes belonging to the component containing @xmath10 .",
    "thus in total there are @xmath477 nodes from the original two branches that end up in the component of the major graph containing @xmath92 , for some @xmath478 .",
    "this case will thus apply provided @xmath473 .",
    "now the combinatorial term from the unmodified @xmath419 branch matches those from the original @xmath349-tree ; @xmath457 .",
    "now in the tree @xmath447 ( without the fence @xmath362 ) the branch containing node @xmath420 can be treated with the inductive hypothesis , like case ii above , and we find that :    @xmath479    here we pick up a combinatorial factor @xmath480 from the two branches descending from node @xmath10 . now for the tree @xmath429 ( with fence @xmath362 ) ,",
    "the only combinatorial factor that differs between any pair of induced major trees @xmath481 and @xmath466 , is the combinatorial term from node @xmath10 in @xmath466 , which becomes the fence factor for @xmath362 ; @xmath482 in @xmath481 .",
    "that is :    @xmath483 .    substituting this into equation ( [ stopgap ] )",
    "gives us :    @xmath484    then subtracting equation ( [ stopgap2 ] ) from equation ( [ stopgap ] ) reveals the same constant difference observed in the previous case :    @xmath485    * case iii iv * : ( @xmath486 , @xmath487 and @xmath488 ) the argument is analogous to case iii ii and the same difference is obtained where we find :    @xmath489    thus in all three cases ( iii i - iii ) the difference between the tree with and without the fence is @xmath490 .",
    "furthermore , for any single value of @xmath463 , one of these three cases is applicable .",
    "we thus find , using equations ( [ caseiiiii ] ) , ( [ caseiiiiii ] ) and ( [ caseiiiiv ] ) with ( [ caseiiii ] ) that :    @xmath491    then substituting this into equation ( [ equation4proof ] ) gives us :    @xmath492    now @xmath493 matches the combinatorial term from the fence and its descendants , @xmath446 .",
    "furthermore @xmath457 , @xmath458 and @xmath494 match the terms in the graph @xmath495 obtained from the branch containing node @xmath419 , the branch containing node @xmath420 , and fence @xmath362 ( by theorem [ counttheorem ] ) , and so equal @xmath496 .",
    "thus we find that :    @xmath497     + _ * completing the induction * _ + thus finally substituting equations ( [ c_a ] ) , ( [ c_b ] ) , ( [ ca ] ) , ( [ cb ] ) and ( [ fence ] ) into equation ( [ messyequation ] ) we find that we have :    @xmath498    then applying the multinomial version of the vandermonde identity @xcite results in :    @xmath499    however , the multinomial coefficient is identical to the combinatorial term we get if nodes @xmath92 and @xmath10 are contracted to a single root . in figure",
    "[ td_proof_pic]aiii we see two branches containing nodes @xmath30 and @xmath13 , these have combinatorial terms equal to @xmath500 and @xmath501",
    ". we also have fence @xmath362 bridging the two branches containing nodes @xmath453 and @xmath452 .",
    "application of theorem [ counttheorem ] to @xmath362 for the root contracted graph @xmath384 ( given in figure [ td_proof_pic]aiii ) returns precisely the term @xmath502 .",
    "we thus find that we have all the coefficients of @xmath503 and equation ( [ mainequation ] ) is obtained .",
    "if we have more than one branch descending from the root nodes , the only change to the argument above is that we sum over a greater number of @xmath504 values .",
    "the vandermonde identity still applies and the same result is obtained .      finally , we can use this inductive relationship to determine the number of different evolutions that arise from a td process , and prove our main result .",
    "( proof of theorem [ evocounter ] ) let @xmath347 be a word evolution on @xmath505 tds with 2d - tree @xmath350 , and @xmath506 the corresponding subset of induced evolutions .",
    "let @xmath507 and @xmath508 denote the number of td - evolutions corresponding to word evolution @xmath94 , and set of induced word evolutions @xmath260 , respectively .",
    "now for every induced evolution @xmath223 we know that there corresponds a @xmath15-nodeset @xmath361 such that the major graph @xmath270 corresponding to @xmath223 is obtained from lemma [ treeoperations ] . by definition [ subtree ] , @xmath361 is also a @xmath349-subtree , and we have an induced major graph @xmath363 .",
    "we also know from theorem [ kerneltheorem ] that for any induced major graph @xmath363 we can sum @xmath365 over the @xmath349-subtrees @xmath361 to obtain @xmath509 .",
    "now the difference between @xmath363 and the major graph @xmath116 is that the latter has a fence between the two root nodes , this difference arising from lemma [ treeoperations]vi .",
    "now @xmath223 is a word evolution on @xmath0 tds so @xmath510 has @xmath511 nodes .",
    "furthermore , @xmath270 can have @xmath74 nodes at the type @xmath18 root , for some @xmath512 , along with @xmath513 nodes at the type @xmath20 root .",
    "then given the extra fence between the roots , by theorem [ counttheorem ] , the number of td - evolutions associated with @xmath270 is given by @xmath514 .",
    "then , using theorem [ kerneltheorem ] , the total number of td - evolutions induced by @xmath94 is given by :    @xmath515    now by theorem [ counttheorem ] @xmath509 is the number of td - evolutions associated with word evolution @xmath94 .",
    "thus we have :    @xmath516    furthermore , by corollary [ disjointunion ] , the set of induced evolutions from @xmath228 gives rise to a disjoint union of @xmath229 . thus summing equation ( [ mainiteration ] ) across all @xmath347",
    "gives @xmath517 .",
    "starting a recursion from the single td - evolution with @xmath518 then proves the theorem .",
    "we have seen in table [ tablecount ] from our main result that the number of different evolutions increases with uncompromising velocity .",
    "this means that beyond five or six tandem duplications it is at present unrealistic to attempt to computationally explore this space in its entirety .",
    "this makes it difficult to compare any observations to the set of possibilities .",
    "this is further compounded by the non - uniqueness of copy number vectors , which grow at a far slower rate than the number of evolutions .",
    "this means that even if the precise copy number vector is known , it will correspond to a multitude of evolutions , all of which explain the data equally well .",
    "one could attempt to apply the type of analyses of @xcite to tds ; it is an open problem to determine the number of copy number vectors , or even an efficient algorithm to determine whether a copy number vector can arise from a process of tandem duplication under the assumption of unique breakpoint use .",
    "we see from table [ tablecount ] that including the somatic connectivity information of td - graphs improves the situation and more evolutions can be distinguished , however , we still have a degeneracy and the underlying evolution can not necessarily be identified .",
    "the development of suitable combinatoric approaches to count the number of possible td - graphs ( rather than the implemented brute force approach of a computer ) also remains an open problem .",
    "the methods utilized in this work largely parallel those used to examine breakage fusion cycles @xcite .",
    "these are a distinct form of rearrangement which suggest there may be a more general space in which rearrangements operate and these methods apply . given that tandem duplication and breakage fusion cycles are leading candidate rearrangements in the formation of large scale copy number increases such as those found in amplicons in cancer , a generalization of these methods to the combined space of these rearrangement processes may help to better understand their evolution .    in this study we have treated the process in a strictly discrete manner .",
    "however , one could consider td as a continuous process on the real line ( or stretch of dna ) and investigate the relative likelihoods of different structures arising , as has been done with breakage fusion bridge cycles in @xcite .",
    "the methods above and in @xcite can be viewed as mathematical operations on the real line .",
    "it would seem plausible that other duplication mechanisms beyond those found in biological rearrangements would yield to similar analyses , which may shed light on the applicability of these methods which link combinatorics , general automaton on symbolic algebra and duplicating mappings on intervals ."
  ],
  "abstract_text": [
    "<S> tandem duplication is an evolutionary process whereby a segment of dna is replicated and proximally inserted . the different configurations that can arise from this process give rise to some interesting combinatorial questions . </S>",
    "<S> firstly , we introduce an algebraic formalism to represent this process as a word producing automaton . </S>",
    "<S> the number of words arising from @xmath0 tandem duplications can then be recursively derived . </S>",
    "<S> secondly , each single word accounts for multiple evolutions . with the aid of a bi - coloured 2d - tree , </S>",
    "<S> a hasse diagram corresponding to a partially ordered set is constructed , from which we can count the number of evolutions corresponding to a given word . </S>",
    "<S> thirdly , we implement some subtree prune and graft operations on this structure to show that the total number of possible evolutions arising from @xmath0 tandem duplications is @xmath1 . </S>",
    "<S> the space of structures arising from tandem duplication thus grows at a super - exponential rate with leading order term @xmath2 . </S>"
  ]
}
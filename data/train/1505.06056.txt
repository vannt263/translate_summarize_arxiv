{
  "article_text": [
    "linear logic  @xcite is a well - known formal system that has attracted interest from computer science as well as logicians .",
    "it has a very well behaved proof theory , and categorical models for linear logic also contain a model of the ( linear ) simply - typed @xmath0-calculus .",
    "_ fully complete _",
    "@xcite models are those that equate precisely those proofs considered equivalent by the proof theory , and which exclusively contain morphisms that are the interpretation of some proof .",
    "the best understood fragment of linear logic is that of _ unit - free multiplicative linear logic _ ,  mll@xmath1 . to model that one requires a @xmath2-autonomous category  @xcite , but",
    "not all such categories satisfy the desired full completeness property .",
    "for example , compact closed categories  @xcite , which are thought of as _ degenerate _ models of mll@xmath1 , do not satisfy full completeness for the logic .",
    "the chu construction  @xcite creates @xmath2-autonomous categories which generally are not fully complete .",
    "pre - existing studies of ` good ' models in this stronger sense are  @xcite .    in  @xcite the _",
    "double glueing _ construction is introduced ( see also  @xcite for a general account ) , and it is suggested that fully complete models may be obtained when this is applied to three particular compact closed categories .",
    "the three categories in question are the category @xmath3 of sets and relations , the category @xmath4 of finite dimensional vector spaces over an arbitrary field @xmath5 of characteristic 0 , and the category of conway games and history - free strategies .",
    "however , the proof of the second  arguably the most interesting case  is not completed in the cited work ; and the restriction regarding the characteristic of the field turns out to be unnecessary .",
    "furthermore no two of the three proofs lend themselves to a common unification .    in this paper , a greatly expanded version of the extended abstract  @xcite",
    ", we provide an entirely new approach to proving full completeness which can be applied to a large variety of models provided by _",
    "tensor - generated compact closed categories with finite biproducts _ to which the double glueing construction has been applied . in the process",
    "we develop a ` tensor calculus ' for such categories , and discuss its combinatorial consequences .",
    "the full completeness proofs consist of algorithms which calculate the required proof - theoretic structure for a given natural transformation . as",
    "a consequence using the tensor calculus has a very algorithmic flavour , and there is certainly interesting future work to be done to connect this with other such work , for example in game semantics .",
    "both @xmath3 and @xmath4 belong to this collection of compact closed categories , and so the result is indeed a generalisation of tan s work .    for the sake of self - containment , we start in section  [ backgroundsection ] by offering some background information relevant to the theorem being proved .",
    "this includes a short introduction to unit - free multiplicative linear logic and its proof theory , as well as its categorical models and the double glueing construction which can be placed over them .",
    "we then provide a formal description of the ` tensor calculus ' and its validity for the resulting categories within section  [ arrowdecomp ] .",
    "it is within section  [ sectiongcfc ] that we provide the proof of our main result , theorem  [ fcomp ] , which says that all compact closed categories with finite biproducts satisfying an extremely weak version of full completeness give rise to fully complete mll@xmath1  models via double glueing . using a mixture of results from earlier sections and from  @xcite , we finish by demonstrating in section  [ sectionmllmixfc ] that the same double glueing construction under a _ slack focused orthogonality _",
    "@xcite can produce fully complete models of mll@xmath1+mix , the multiplicative fragment of linear logic with the ` mix ' rule ( theorem  [ mixfcomp ] ) .",
    "the results in this paper are taken from the thesis of the second author  @xcite .",
    "the thesis , to which we occasionally refer , offers further background and discusses some issues in more detail than is possible here .",
    "in this section we give a short account of the well - known proof theory of mll@xmath1  @xcite and how this system can be modelled categorically  @xcite .",
    "we repeat the formal notion of full completeness for such models , and indicate what can be said about the models provided by compact closed categories .",
    "an introduction to double glueing and orthogonalities is also contained within this background survey .      the linear logic fragment mll@xmath1  possesses a beautiful proof theory revolving around the notion of proof nets  @xcite .",
    "proof nets provide a method of equating two distinct derivations which differ only due to ` bureaucracy '  @xcite . since derivations in mll@xmath1  can be normalised confluently , we are interested primarily in cut - free mll@xmath1  proof nets .",
    "it is sufficient to consider right - sided sequents of formulae built from literals ( which in a derivation are created as pairs , one positive , one negative ) using the multiplicative conjunction @xmath6 and disjunction  @xmath7 . given a deduction in the system we can construct a graph by using the parse trees of the final sequent , connecting those literals that are created together in said proof via edges known as _ ( axiom ) links_. this is the _ proof net _ that corresponds to the derivation , and we wish to equate those deductions that have the same proof net .      while every proof net represents a derivation ,",
    "it is possible to create graphs which resemble proof nets but do not correspond to correct derivations . given a parse tree for a sequent constructed from literals and the mll@xmath1  connectives @xmath6 and @xmath7 we use the term _ proof structure _ for a graph resulting from connecting matching literals .",
    "in this paper , proof structures are written only as the sequent together with its set of axiom links connecting appropriate literals above it .",
    "an example is given below .",
    "[ auto , node distance=6 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath8 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath10 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b , xshift=-1 mm ] @xmath11 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath12 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d , xshift=-1 mm ] @xmath11 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath13 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f , xshift=-1 mm ] @xmath14 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath10 ;    \\(1 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 7 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ;    it is possible to check whether a given proof structure is , in fact , a proof net  @xcite using certain _",
    "correctness criteria_. a _ switching _ of a proof structure is a subgraph created by removing exactly one of the two argument edges of each @xmath7-vertex .",
    "a proof structure is a proof net if and only if every one of its switchings is both _ acyclic _ and _ connected_.      multiplicative linear logic does not possess all the distributivity laws associated with boolean logic . however , there are _ weak distributivity _",
    "laws which have the effect of `` weakening '' formulae into a state closer to ( and to closure into ) a disjunctive form .    from now on , in the appropriate contexts , we use the following notation : @xmath15 \\,=\\ , \\{n \\,\\in\\ , \\mathbb{n } \\,:\\ , m\\,\\leq\\,n\\,\\leq\\,n\\}$ ] , and @xmath16 \\,=\\ , [ 1,n]$ ] .",
    "an mll@xmath1  formula @xmath17 is in _ multiplicative disjunctive normal form _",
    "( or  _ mdnf _ ) if @xmath18 for literals @xmath19\\}$ ] for some @xmath20 , @xmath21 , and functions @xmath22\\ } \\longrightarrow [ n]$ ] and @xmath23\\ } \\longrightarrow \\{{\\epsilon},\\bot\\}$ ] indicating the literal and polarity of said literal respectively , where @xmath24 denotes an empty superscript , and therefore positivity .",
    "each subformula @xmath25 of @xmath17 for a given @xmath26 is called a _",
    "block _ of the formula .",
    "an mll@xmath1  sequent is considered to be in _ mdnf _ if all its constituent formulae are in mdnf ; and its blocks are the blocks of its formulae .    the correctness criteria for proof structures over mll@xmath1  sequents which are in mdnf are even further simplified .    [ factmdnfcorrectness ]",
    "@xcite an mdnf proof structure is a proof net for mll@xmath1  if and only if its maximal @xmath7-free subgraph is a tree .",
    "the simplicity of these mdnf proof structures and their correctness criteria is very useful to us when proving full completeness in a category .",
    "as is seen in sections  [ sectiongcfc ] and  [ sectionmllmixfc ] , seemingly weaker full completeness theorems concerning only sequents of this form can be shown to be equivalent to theorems dealing with all sequents .",
    "each block of literals in a mdnf  structure written as a sequent with axiom links can be seen as one large vertex without affecting the acyclicity and connectedness of graph ( the switchings of their parse trees are indeed still trees ) , and the instances of ` @xmath7 ' can be ignored by fact  [ factmdnfcorrectness ] . from this perspective , we can check this graph for acyclicity and connectedness very swiftly .",
    "for example , the mdnf proof structure below is clearly incorrect due to the cycle between the two blocks .    [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath27 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath10 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath27 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath10 ;    \\(2 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 1 ) edge [ black , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;      although not a formal part of linear logic , the ` mix ' rule is routinely seen as a part of the multiplicative structure .",
    "this is partly due to its insistence to being represented in many standard models , not least the category of coherence spaces  @xcite .",
    "the proof theory of mll@xmath1  is however not unduly made too difficult by the addition of this derivation rule .",
    "thanks to @xcite we know that the only true difference which can occur between correct proof structures for mll@xmath1  and mll@xmath1+mix  regards the disconnectedness of switchings .",
    "@xcite an mll@xmath1  proof structure describes a proof net for mll@xmath1+mix  if and only if all its switchings are acyclic .",
    "it is also possible to create a ` mix ' version of the mdnf criterion of the previous section :    @xcite an mdnf proof structure is a proof net for mll@xmath1+mix  if and only if its maximal @xmath7-free subgraph is a forest .",
    "sound categorical models of mll@xmath1  are found in the form of @xmath2-autonomous categories  @xcite  these are symmetric monoidal categories with a well - behaved self - duality .",
    "the underlying idea is quite simple : each symbol in the logic is interpreted by a functor ( of the appropriate arity ) on the category ; the monoidal structure @xmath6 gives conjunction , the duality @xmath28 allows negation , and to model disjunction these can be combined to define a de morgan dual @xmath29 .",
    "we use the latter functor also to interpret the commas separating formulae in a sequent .",
    "hence every sequent in mll@xmath1  determines a functor @xmath30 where @xmath31 .",
    "that is to say , each sequent is described by a multivariant endofunctor with @xmath32 co- and contravariant arguments respectively .",
    "if we look at these functors then we see that they are built by    * applying the duality functor @xmath28 to each copy of  @xmath33 , * creating as many copies of the arguments as required , then reordering them appropriately , * applying the functors @xmath6 and @xmath7 to get a result in  @xmath34 .",
    "we refer to the functors that can be built in this way as _",
    "mll@xmath1  functors_. similarly , functors that correspond to mdnf  sequents are referred to as _",
    "mdnf  functors_.    assume we have a right - sided sequent interpreted by the mll@xmath1functor  @xmath35 .",
    "the formula representing truth is interpreted by the functor whose value is the constant @xmath36 , the unit for the monoidal structure .",
    "we refer to this functor as @xmath37 , and allow ourselves to adjust its source as needed .",
    "every proof of the given sequent is interpreted by a _ dinatural transformation _ from @xmath37 ( with the same source as  @xmath35 ) to  @xmath35 , which is a family of arrows @xmath38)_{\\mathbf{r } \\in { \\mathbb{c}}^{n}}$ ] for which the diagram below commutes for every @xmath39 , where @xmath40 .",
    "@xmath41      & & f(\\mathbf{r},\\mathbf{r } ) & & \\\\    & \\ruto^{\\tau_{\\mathbf{r } } } & & \\rdto^{f(\\mathbf{f},1_{\\mathbf{r } } ) }     & \\\\    { \\mathbf{i } } & & & & f(\\mathbf{s},\\mathbf{r } ) \\\\    & \\rdto_{\\tau_{\\mathbf{s } } } & & \\ruto_{f(1_{\\mathbf{s}},\\mathbf{f } ) } & \\\\    & & f(\\mathbf{s},\\mathbf{s } ) & & \\end{diagram}\\ ] ]    an _ mll@xmath1 _",
    "( respectively _ mdnf _ ) _ transformation _ is a dinatural transformation to an mll@xmath1  ( respectively mdnf ) functor from a constant functor @xmath37 of appropriate source .",
    "it is possible to build mll@xmath1(+mix )  transformations corresponding to correct one - sided sequent derivations of the logic in an[soundnesstechnique ] inductive manner  @xcite in any @xmath2-autonomous category .",
    "furthermore , it can be shown that any two derivations which reduce to the same cut - free proof net are represented by the same mll@xmath1  transformation in the category  @xcite .",
    "this suggests that @xmath2-autonomous categories are a sensible collection of models through which one can investigate mll@xmath1 .",
    "dinatural transformations do not naturally compose with one another . however , they are capable of being composed with transformations natural in all components .",
    "the diagram below demonstrates the dinatural behaviour a composition of natural  @xmath42 and dinatural  @xmath43 .",
    "[ dinatscomposestatement ] @xmath41      & & f(\\mathbf{r},\\mathbf{r } ) & \\rto^{\\mu_{(\\mathbf{r},\\mathbf{r } ) } } & g(\\mathbf{r},\\mathbf{r } ) & & \\\\    & \\ruto^{\\tau_{\\mathbf{r } } } & & \\rdto^{f(\\mathbf{f},1_{\\mathbf{r } } ) }     & & \\rdto^{g(\\mathbf{f},1_{\\mathbf{r } } ) } & \\\\    { \\mathbf{i } } & & & & f(\\mathbf{s},\\mathbf{r } ) & \\rto^{\\mu_{(\\mathbf{s},\\mathbf{r } ) } } & g(\\mathbf{s},\\mathbf{r } ) \\\\    & \\rdto_{\\tau_{\\mathbf{s } } } & & \\ruto_{f(1_{\\mathbf{s}},\\mathbf{f } ) } & & \\ruto_{g(1_{\\mathbf{s}},\\mathbf{f } ) } & \\\\    & & f(\\mathbf{s},\\mathbf{s } ) & \\rto_{\\mu_{(\\mathbf{s},\\mathbf{s } ) } } & g(\\mathbf{s},\\mathbf{s } ) & & \\end{diagram}\\ ] ] the equivalent result for precompositions is demonstrated in a dual manner .",
    "one can now show that two proofs of the same sequent are interpreted by the same dinatural transformation if and only if they have the same proof net  @xcite .",
    "in other words , this categorical interpretation of proofs fits very well with the existing proof theory for  mll@xmath1 .    with @xmath2-autonomous categories being sound categorical models of mll@xmath1",
    ", it is expected that they should all contain natural transformations which model the weak distributivity laws discussed in section  [ mdnfproofstructures ] .",
    "@xmath44    it is shown how one can construct each of them in  @xcite .",
    "the ` mix ' rule is modelled in a @xmath2-autonomous category if and only if there is a natural transformation @xmath45 .",
    "this is equivalent to there existing a ` mix ' morphism @xmath46  @xcite .",
    "full completeness was first defined in  @xcite , and it is meant to describe the tightest possible connection between the logic and its model . not only are the interpretations of two proofs the same if and only if they are equivalent in the proof theory , but the model does not contain any representations of ` non - proofs.'-autonomous category . with this analogy in mind , due to every pair of derivations sharing the same cut - free proof net corresponding to the same mll@xmath1(+mix )  transformation , the satisfaction of the above definition may be more accurately described as full _ and faithful _ completeness . however , for the sake of convenience and easy comprehension , we keep to the originally given name . ]    in the case of the work in this paper , we are considering what this means from a dinatural interpretation of proofs .",
    "this provides us with the following definition , which originates from the notion as it is set out in  @xcite , and is further used in such works as  @xcite :    a @xmath2-autonomous category @xmath34 satisfies _",
    "mll@xmath1(+mix )  full completeness _",
    "if every mll@xmath1(+mix )  transformation in the category is the interpretation of a cut - free proof net .",
    "compact closed categories  @xcite are particular degenerate @xmath2-autonomous categories which possess a parameterised adjunction @xmath47 ( we denote the negation function @xmath48 for historical reasons in these categories ) .",
    "the existence of this adjunction induces an invertible ` mix ' natural transformation @xmath49 between the two functors modelling the binary connectives .",
    "nonetheless it turns out that they can form the basis for constructing fully complete models , as is seen in sections  [ sectiongcfc ] and  [ sectionmllmixfc ] .",
    "the adjunction associated with compact closed categories creates a bijective correspondence @xmath50\\rto \\left[(-)_{1},(-)_{3 } \\otimes ( -)_{2}^{\\,\\,*}\\right]$}\\/}$ ] .",
    "this , along with the coherence properties of symmetric monoidal categories and the functoriality of tensor , ensure that the mll@xmath1  transformations can be reproduced in the following manner :    1 .",
    "take the right natural isomorphism on each of the basis mll@xmath1  functors , @xmath51 with @xmath52 the projection of the @xmath53 component of the product category @xmath54 for each @xmath55 $ ] .",
    "2 .   use the parameterised adjunction associated with these categories with the right isomorphism to produce dinatural transformations @xmath56 for each argument first discussed in  @xcite ] .",
    "if the sequent whose derivation is being modelled contains @xmath57 positive / negative occurrences of the literal being modelled with the @xmath53 entries of the functors for each @xmath58 $ ] , then create the mll@xmath1  transformation @xmath59 4 .",
    "use the associativity and symmetry isomorphisms @xmath60 and @xmath61 to rearrange brackets and the ordering of the literals so that those literals are found in the same order and the brackets in the same place as the functor requires .",
    "if the @xmath53 and @xmath62 literals are supposed to be connected by an axiom link , then it must be ensured that the two literals found in those positions are two that were created simultaneously by the exact same ` axiom link ' dinatural transformation .",
    "the resulting dinatural transformation can be thought of as a _ fixed - point - free involution _ , relating literals to their negations .",
    "5 .   use the natural transformation @xmath63 liberally to change all @xmath64 functors into @xmath7 functors where necessary to shape the target functor to create the mll@xmath1  functor in the category .",
    "unfortunately , this advantage comes with a natural drawback : the unrestricted freedom to generate representations of axiom links within the mll@xmath1  transformations means that unsequentialisable proof structures can be modelled just as easily as genuine proof nets . as such , mll@xmath1  full completeness can not be satisfied by any of these categories .",
    "in this paper we are more interested in the case where there is even more structure than that given above , namely where the compact closed category @xmath34 has finite biproducts .",
    "recall  @xcite that @xmath34 has finite products if and only if it has finite sums if and only if it has finite biproducts . in this case",
    "the scalars ( that is the homset of endomorphisms on the tensor unit @xmath65 $ ] ) form a commutative unital semiring , and due to the biproducts distributing over the tensor product @xmath34 is enriched over @xmath66}$]the category of commutative semimodules over the semiring of scalars  @xcite .    given a set of dinatural transformations of the same type @xmath67 for some index set @xmath68 , we define a linear combination @xmath69 of them as the collection of arrows @xmath70 . it is easy to show that in such a category every linear combination of dinatural transformations is another such , giving a second obstacle to full completeness .",
    "nonetheless , from the above limitations , there is a clear concept of a compact closed category with finite biproducts being ` as fully complete as it can hope to be ' .",
    "[ feeblefcdefn ] a compact closed category @xmath34 with finite biproducts satisfies _ feeble full completeness _ if every mll@xmath1  transformation for the category is a linear combination of interpretations of proof structures over the same sequent .",
    "it is known from  @xcite ( proof reproduced in  @xcite ) that finite biproductal compact closed categories whose tensor unit acts as a separator satisfy feeble full completeness .",
    "these models are called _ tensor - generated _ , and there are many of them .",
    "examples include both @xmath3 and @xmath4 for any field @xmath5 , and extend beyond these to include categories such as that of finite - dimensional hilbert spaces .",
    "every compact closed category with finite biproducts clearly has a non - trivial full subcategory which is tensor - generated , namely the category generated by the object @xmath36 and the tensor , biproduct and duality functors .",
    "double glueing constructions  @xcite operate upon categories .",
    "they can be thought of as adding structure to objects in the form of two arrows , which then has to be preserved by the morphisms of the newly created category .",
    "this leaves a trivial forgetful functor  @xmath71 from the double - glued category to the original .",
    "when the added structure arrows are monomorphisms , this has the effect of generating homsets between two objects in the new category which are fundamentally subsets of the homsets of their underlying objects .",
    "@xcite that is , @xmath72\\right\\ } \\,\\subseteq\\ , { \\mathbb{c}}[a , b].\\ ] ]    the most commonly seen double glueing construction used on top of models of linear logic is the so - called hyland - tan construction  @xcite , inspired by loader s linear logic predicates  @xcite . this double glueing is based upon structure arrows which take the form of injections into homsets in  @xmath73 , and so are clear monomorphisms , allowing us to use the above fact .",
    "we define this construction formally below .",
    "[ gcdefn ] given a @xmath2-autonomous category @xmath34 with tensor unit @xmath36 , and letting @xmath74 , the category @xmath75 is the category described with the following object set and homsets :    * objects  @xmath76,\\,x \\subseteq { \\mathbb{c}}[a,\\bot]\\}$ ] * arrows  arrows in @xmath77 $ ] are described by single morphisms @xmath78 $ ] such that : @xmath79    in general , when discussing a @xmath75-object @xmath80 , we refer to @xmath81 and @xmath82 as the object s sets of _ values _ and _ covalues _ respectively .",
    "we write @xmath83    as with any double glueing , the hyland - tan construction preserves @xmath2-autonomy , and it also removes the degeneracy of compact closed categories .",
    "tensor products and negations of arrows are immediately inherited from the underlying category  indeed , the functor @xmath84 is @xmath2-autonomous .",
    "the object assignments are as follows : @xmath85)\\end{aligned}\\ ] ] where @xmath86:\\ , \\begin{array}{l } \\forall v \\in v,\\ , a \\rto{\\rho_{a } } a \\otimes { \\mathbf{i}}\\rto{1_{a } \\otimes v } a \\otimes b \\rto{z } \\bot \\in x , \\\\ \\forall u \\in u,\\,b \\rto{\\lambda_{b } } { \\mathbf{i}}\\otimes b \\rto{u \\otimes 1_{b } } a \\otimes b \\rto{z } \\bot \\in y \\end{array } \\right\\}$ ] .",
    "many examples of double - glued structures which have been investigated , particularly ones in which their glued nature is hidden , have restrictions on the objects which they are allowed to contain .",
    "for example , the category of chu spaces  @xcite can be thought of as a full subcategory of a generalised version of the category @xmath87 under the influence of a double - glueing @xcite .",
    "of course , the constraints must be defined sensibly in order to preserve the closure of the operations defined on such categories .",
    "these constraints are called _ orthogonalities _ , and they can come in a variety of forms . in this paper , we wish to look at _ focused _ , _ slack _ orthogonalities .    given any subset @xmath88 $ ] , we can construct an orthogonality in which two morphisms @xmath89 $ ] and @xmath90 $ ] are considered orthogonal if and only if they compose to form an arrow in the chosen set .",
    "this is called the orthogonality _ focused on _ @xmath91 , and spawns a _ focused glueing _",
    "@xmath92 whose values and covalues must be mutually orthogonal .    given a @xmath2-autonomous category @xmath34 and a set @xmath93 $ ] , the category @xmath92 is defined as the smallest full subcategory of @xmath75 containing every object @xmath80 such that @xmath94    of course , the tensor unit @xmath36 of @xmath75 is not contained in any of the orthogonally glued categories for which the focus is a proper subset of @xmath95 $ ] and @xmath75 are clearly the same when @xmath96 $ ] ] , meaning that the @xmath2-autonomous structure of @xmath75 is not preserved _ per se_. however , each one of these subcategories has another object within it which acts as legitimate unit for the tensor functor : the unit for @xmath92 is @xmath97 .    with this fact taken into account , and the fact that the categories are closed under the tensor product and negation functors , we know that all of these constructions preserve @xmath2-autonomy ( with respect to the new unit definitions ) .",
    "thus , just like the original @xmath98-glueing , the glueings generate models of mll@xmath1 .",
    "the hyland - tan double glueing construction and its focused orthogonalities are particularly well - behaved , and in fact possess some properties which are immediately relevant to the coming results .    given an arbitrary focused glueing @xmath88 $ ] , the value and covalue sets of an object are in fact precisely the homsets from @xmath99 and to @xmath74 .",
    "@xcite [ covaluearrowprop ] for every object @xmath100 , @xmath101 $ ] and @xmath102 $ ] , where @xmath103 .",
    "we can also claim a large understanding of the @xmath104  transformations for these double - glued categories .",
    "since homsets in these categories are in some way ` stripped ' versions of those from their underlying categories , it would be reasonable to assume that an analogous statement could be made about dinatural transformations .",
    "this is indeed correct , as can be deduced from the below proposition .",
    "@xcite [ propgpreservesdnts ] let @xmath105 be a dinatural transformation in @xmath92 .",
    "then there is a dinatural transformation @xmath106 in @xmath34 which defines @xmath43 ; that is , @xmath107 for every @xmath108 .",
    "theorem  1.3.2 of  @xcite provides the result for @xmath109 $ ] . as remarked on page  119 in  @xcite ,",
    "this proof only requires intermediary objects which are found in all categories of the given form , thus it extends to all subsets @xmath91 .",
    "the consequences of this proposition are marked .",
    "the transformations of feebly fully complete compact closed categories with biproducts take the form of linear combinations of fixed - point - free involutions  @xcite . therefore the same morphisms are used to described the transformations in the categories created by applying the glueing construction to them .    finally , given a compact closed category @xmath34 with finite biproducts , which is assured a morphism @xmath110 $ ] and a separate zero morphism @xmath111 in the homset @xmath112 $ ] , we note that every focused glueing @xmath113 where @xmath114 $ ] stops this morphism being found in @xmath115 $ ] , but @xmath116 preserves this modelling of the mix rule .",
    "for every compact closed category @xmath34 with finite biproducts and a set @xmath117 $ ] containing @xmath118 , the category @xmath119 models the mix rule if and only if @xmath120 .",
    "( see  @xcite )    for shorthand , we say @xmath121 .",
    "the category is the subject of section  [ sectionmllmixfc ] .",
    "every finite - dimensional vector space over a field @xmath122 can be given a finite basis , meaning that all arrows in their category @xmath123 can take the shape of a matrix , or in fact a tensor if desired , over the underlying field .",
    "although it is not possible to say that all arrows in a given compact closed category with finite biproducts can be reduced to an array - based form over a single input type , the multilinear representations still appear and can certainly be of use .",
    "we introduce this generalisation of matrix representations of arrows in the coming section , and show that mll@xmath1  transformations and the calculations required in deducing sets of values and covalues in double - glued objects can take a simplified form when using this notation .    an _ array _ with _ index set _ @xmath68 over a set @xmath82",
    "is a function @xmath124 .",
    "an array can be considered to be _",
    "@xmath32-dimensional _ if its index set takes the form @xmath125 for some @xmath126 .    letting @xmath127 , an _",
    "@xmath128-tensor _ @xmath129 over a semiring @xmath130 is an @xmath32-dimensional array , each of whose components contain a value from @xmath130 .",
    "the @xmath131 entry is written @xmath132 .",
    "indices of tensors are allowed to be separated by commas and semicolons to demarcate relevant groups of indices .",
    "superscripts may also be used to facilitate writing , though once a notation style is chosen for a specific tensor it must be adhered to .",
    "the number of indices a tensor requires to be expressed ( in this case @xmath32 ) is called its _",
    "order_. often tensors are written with general index variables to emphasise that they are indeed multidimensional arrays .",
    "furthermore , long sets of indices can be replaced by bold ` superindices ' .",
    "for example , @xmath133 can be rewritten @xmath134 for shorthand , where @xmath135 and @xmath136 .",
    "[ overloadref ] sometimes we overload the notation of the tensor so as to show the reader information concerning relative positions of indices with respect to other tensors or a set position .",
    "calculations involving tensors over semirings are unsurprisingly done in an identical manner to those involving tensors over fields in standard multilinear algebra .",
    "all the differences which may occur concern how its entries sum and multiply together .",
    "the standard algebraic manipulations are found below .    *",
    "( addition )  given two tensors @xmath129 and @xmath137 over the same index sets , their sum is clearly found in the same semimodule . @xmath138 * ( composition )  let @xmath129 and @xmath137 be @xmath139- and @xmath140-order tensors respectively with @xmath32 index positions ranging over the same index sets in both arrays .",
    "the composition of the two is given by an @xmath141-order tensor for which each component is found to be as follows : @xmath142 * ( product )  the outer product of two tensors @xmath143 and @xmath144 is given by an @xmath139-tensor for which each entry is merely a product of entries from its factors .",
    "@xmath145    examples of the first three manipulation techniques from above are seen ubiquitously in the forms of addition , multiplication and the trace operation of matrices .",
    "it should be noted that , if desired , one can consider tensor composition as the equivalent of finding the outer product of two tensors sharing indices and contracting the result .",
    "there are five types of tensor which are seen continuously in various guises within this paper .",
    "their definitions are given below .",
    "[ tensorexamdefns ] @xmath146 +    1 .",
    "a _ zero tensor _ , written @xmath147 for some indices @xmath148 , is a tensor , all of whose entries contain the scalar @xmath149 .",
    "2 .   similarly ,",
    "a _ one tensor _ , written @xmath150 , is a tensor whose entries all contain the scalar @xmath151 .",
    "3 .   a _ kronecker delta _ , written @xmath152 , is an @xmath153-tensor for any @xmath154 such that @xmath155 it is the tensor representation of the identity matrix .",
    "+ we also write @xmath156 as shorthand .",
    "4 .   a _ ( full ) _ @xmath157__-permutation over _ _",
    "@xmath158 $ ] is an @xmath159-tensor @xmath160 such that for all @xmath161 $ ] , and @xmath162 $ ] for each @xmath163 , there exists an @xmath164 $ ] so that @xmath165 .",
    "we use the notation @xmath166 to denote the set of all @xmath157-permutations over @xmath158 $ ] .",
    "note that a @xmath151-permutation over @xmath158 $ ] is simply a tensor of the form @xmath167 for some @xmath168 $ ] .",
    "+ of particular use are _ cycle permutation tensors_. we define @xmath169 , with @xmath170 , to be the @xmath171-tensor with entries defined as follows : @xmath172 5 .   generalising the above ,",
    "@xmath157__-permutation over _ _",
    "@xmath158 $ ] is an @xmath159-tensor @xmath160 such that for all @xmath161 $ ] , and @xmath162 $ ] for each @xmath163 , there exists an @xmath164 $ ] so that @xmath173 is equal to @xmath174 or @xmath175 .",
    "we use the notation @xmath176 to denote the set of all @xmath157-permutations over @xmath158 $ ] .    because of the number of indices which may be given to each tensor , the calculus of tensors can become very cluttered .",
    "the use of summation symbols adds to the excessive number of symbols in many expressions , and they can be thought of in many cases as unnecessary . as such , at some points it is useful to use the einstein summation convention : whenever an expression containing tensors has two index positions involved within it which are summed together over the same index @xmath177 say , the summation symbol may be omitted without worry .",
    "this means that a simple composition rule , for example , can be rewritten @xmath178 .",
    "decomposition of arrows between objects in the form of tensor products of direct sums is possible in a symmetric monoidal category with finite biproducts , and can be a very useful tool .",
    "suppose that @xmath34 is such a category , and consider the arbitrary arrow @xmath179 due to the preservation of products by the tensor product in any compact closed category , the functor @xmath180 in a compact closed category for any object @xmath181 can be seen as both a left and right adjoint , and as such preserves both products and coproducts  @xcite .",
    "we know that the following set of @xmath182 arrows describe @xmath183 . @xmath184\\right\\}\\ ] ] we can follow the same procedure of decomposing @xmath183 using the projections @xmath185 for all @xmath186 of the object . furthermore , due to the bifunctoriality of the tensor product , each of the projections is independent of the others .",
    "the injections operate similarly ; and as such , it is possible to separate @xmath183 yet further and describe it using a set of @xmath187 arrows @xmath188,\\ , j_{l } \\in [ n_{l}]\\}$ ] , where @xmath189    this decomposition of @xmath183 is known as a _",
    "tensor representation_. it is generally inconvenient to write down the resultant tensor as a single entity due to the number of dimensions required .",
    "this is , however , of little concern to us , because we are able to view the entries of the tensor on a case - by - case basis .",
    "the greatest implication this has is to the freedom of expression one has when decomposing arrows concerning the tensor product : given two arrows in the prescribed form above , it is possible to gain a tensor representation of their tensor product .",
    "this comes about almost trivially , with each entry in the new tensor being created by producing the tensor product of one entry from each of the representations of the more primitive morphisms .",
    "given arbitrary arrows @xmath78 $ ] and @xmath190 $ ] , with @xmath191 , @xmath192 , @xmath193 and @xmath194 , we find that @xmath195    rather unsurprisingly , addition and composition operate in an almost identical manner as they do in the matrix algebra .",
    "identity and zero morphisms between objects of the form given above are represented by kronecker deltas and zero tensors respectively .",
    "letting @xmath196 , @xmath197 , and @xmath198 $ ] ,    @xmath199    @xmath200    @xmath201\\ , , \\,i_{l}=j_{l } }   \\\\        0_{\\bigotimes_{l}^{n_{a } } a_{l , j_{l}},a_{l , i_{l } } }     &    otherwise \\end{array }                 \\right.\\end{aligned}\\ ] ]    then taking arbitrary @xmath202 and @xmath203 , @xmath204    there is a specific type of interaction composition and tensor multiplicaton which ought to be noted , namely when a composition passing through an object @xmath205 contains an arrow of the form @xmath206 or @xmath207 for some arrows @xmath208 or @xmath209 .",
    "consider the composition @xmath210 ; the tensor representations of the composite morphisms are written , naturally , as @xmath211 and @xmath212 .",
    "however , @xmath213 , and the only effect the kronecker delta on the end representation of the composition is the change of index , which is superficial . in these types of situation ,",
    "we consider ourselves at liberty to think instead of the composition of the two tensors @xmath214 and @xmath215 , summing over the indices of @xmath216 only .",
    "the monoidality of the category @xmath34 allows for scalar multiplication of arrows to be modelled by the synonymous operation on tensors .",
    "@xmath217    when the source and target objects of an arrow are tensor products of direct sums of the tensor unit @xmath36 , the arrow s tensor representation acts as a standard tensor over @xmath218 $ ] .",
    "these homsets are trivially in bijective correspondence with the set of scalars @xmath65 $ ] , and so we can work purely with tensors over this semiring .",
    "of course , in a compact closed category with finite biproducts , we are not restricted to building objects over the two functors @xmath219 and @xmath220 : the contravariant endofunctor @xmath48 is also available .",
    "we now show how tensor representations can be given to morphisms between objects built with this functor .",
    "consider a morphism @xmath221 , where @xmath222 , @xmath223 , and @xmath224 .",
    "the extent to which this arrow can be decomposed using the tensor representation system given above is less than one would hope .",
    "the negation of @xmath181 means that it is not possible to break it down without extending the representation .",
    "the parameterised adjunction @xmath225 described in section  [ sectioncompccs ] makes this extension possible .",
    "the isomorphism @xmath226 associated with the adjunction relates @xmath183 to an arrow @xmath227 .",
    "this new arrow is certainly in exactly the shape seen of morphisms at the beginning of this section ; @xmath181 is no longer shackled by the negation functor and its projections may be used in a decomposition in the same way as @xmath17 and @xmath228 .",
    "the set of arrows @xmath229 , j \\in [ b ] , k",
    "\\in [ a]\\}$ ] , where @xmath230 determines @xmath231 uniquely ; and since @xmath226 is an isomorphism the arrows provide a unique description of @xmath183 as well .    using the isomorphism once more , this time on every arrow in the above set , we are able to understand @xmath183 by viewing a set of morphisms that have a superficially identical form to it : @xmath232 , j \\in [ b ] , k \\in [ a]\\}$ ] .",
    "the parameterised adjunction offers a simplification of the descriptions of each of these arrows . @xmath233",
    "the principle above , where the duals of injection arrows into @xmath181 are used in place of projections , is entirely generalisable to multiple instances of dual objects in a tensor product .",
    "furthermore , the inherent duality of compact closed categories allows morphisms from tensor products with dualised elements to be decomposed by substituting injection arrows for duals of projection arrows .",
    "suppose that we have an arrow @xmath234 where the functions @xmath235\\rto \\{\\epsilon,*\\}$}\\/}$ ] and @xmath236\\rto \\{\\epsilon,*\\}$}\\/}$ ] depict the polarity of a direct sum in the tensor product with respect to the negation functor , @xmath24 denoting an empty superscript once more .",
    "we define the _ tensor representation _ of such an arrow to be the set of morphisms @xmath237,\\mathbf{k } \\in \\prod_{l=1}^{n_{a } } [ n_{a , l}]$ ] , where @xmath238 @xmath239 we can extend this using a simple induction so that the functions @xmath240 and @xmath241 may adopt the new range of the set of strings using only the letter @xmath2 , @xmath242 as we shall name it at this point leads to confusing overloading . ] , so that we can apply the duality functor as many times as wished to a direct sum .",
    "the tensor representation of the arrow @xmath243 remains the same , but the definitions of @xmath244 and @xmath42 are generalised accordingly .",
    "@xmath245    of course , the negation of a number of positive and negative direct sums of objects together in a tensor product is also possible , and is in fact necessary if the @xmath7 functor is to be defined",
    ". it would therefore be useful to produce tensor representations for arrows between objects containing such components .",
    "the principle being used in the earlier instances of negation may be translated directly to produce such entities .",
    "given an arrow @xmath246 where @xmath247 , @xmath248 , @xmath249 and @xmath250 are direct sums of objects acted on by the negation functor @xmath60 , @xmath251 , @xmath252 and @xmath152 times respectively .",
    "there is a bijective correspondence @xmath253 to @xmath254 $ ] to @xmath255 $ ] , and every morphism in this target set can be decomposed and be represented by a tensor containing arrows in the form shown below .",
    "@xmath256 using the correspondence @xmath226 once again , we see that each morphism in the aforementioned tensor is related to an arrow which may be placed into a new representation : the relative of the above arrow is @xmath257    the arrows of this form bundled into an appropriate set are defined to be the tensor representation of the arrow , and it is once again clear that the concept is generalisable to morphisms whose sources and targets may contain any number of tensor products affected by the functor @xmath48 . the self - duality of compact closed categories once more means that a similar line of reasoning can be afforded to dealing with negation in the source of an arrow by swapping the roles of injection and projection arrows . a logical extension to the argument can be constructed to deal with tensor products with the duality functor applied numerous times . using the symmetry natural isomorphism @xmath61",
    "sensibly it is possible to express tensor representations for arrows between objects which are tensor products of tensor products of direct sums of primitive objects under any number of instances of the duality functor .",
    "furthermore , due to induction , this style of reasoning is extendable to any arrow between objects built using indecomposable objects and the duality and tensor functors .",
    "we give new , recursive definitions for the arrow sets @xmath42 and @xmath244 .",
    "these are , however , reliant on the concept of index sets in a category theoretical sense .",
    "[ cattensorindexsetdefn ] an _ index set _ of an instance of an object @xmath17 in @xmath34 , written @xmath258 , is defined inductively as follows :    * if @xmath259 for some instances of objects @xmath260 we wish to be considered indecomposable , then @xmath261 $ ] . * if @xmath262 for some object @xmath181 , then @xmath263 . *",
    "if @xmath264 for some objects @xmath265 , then @xmath266 .",
    "equivalently , the index set of an object @xmath267 for which we consider its instances of @xmath268 indecomposable for each @xmath269 and @xmath270 is the set of @xmath32-tuples where for every @xmath271 $ ] , the @xmath272 component ranges over the number of objects in the @xmath272 direct sum .",
    "we are now in a position to define @xmath42 and @xmath244 .    the _ injection _ and _ projection arrow functions _ of an object @xmath17 built using the tensor product and negation functors over direct sums of indecomposable objects in a compact closed category @xmath34 with finite biproducts , written @xmath273 and @xmath274 respectively , have domain @xmath258 and are defined recursively as follows :    * if @xmath259 for indecomposable @xmath260 , @xmath275 and @xmath276 . * if @xmath262 for some @xmath181 , then @xmath277 and @xmath278 . * if @xmath264 for some @xmath265 , then @xmath279 and + @xmath280 , where each @xmath281 .",
    "the definition above facilitates the description of the tensor representation of every arrow built in the manner that has been discussed earlier .",
    "[ tensorrepdefn ] a _ tensor representation _ of an arrow @xmath282 , where @xmath17 and @xmath181 are objects built using tensor products and the negation functor over direct sums of instances of objects considered indecomposable , is defined as the set of morphisms @xmath283 where @xmath284    note how this definition of tensor representation is consistent with the earlier , more rudimentary forms which do not consider the possibility of negation existing beyond the direct sums .",
    "the entries in these tensors are still merely composites containing arrows ; and addition of morphisms is a consequence of enrichment over @xmath285 , so the connection between tensor and arrow addition is maintained , including the zero morphisms . similarly , scalar multiplication is unaffected .",
    "the extended definition of the identity arrow of any object @xmath17 is created recursively from prior knowledge of the standard diagonal matrix representation of the identity arrow for direct sums of objects and the preservation of identity morphisms by functors , and takes the form @xmath286 .    * if @xmath259 for indecomposable objects @xmath260 , then the representation of the identity morphism @xmath287 is @xmath288 * if @xmath262 for some object @xmath181 , then @xmath289 * if @xmath264 for some objects @xmath265 , then @xmath290    because of the lack of change required in the shape of this arrow from earlier versions , the manner in which composition operates is also preserved .",
    "unlike when we consider only the simpler form of arrow being placed into a multilinear representation , which lacks any use of the duality functor , it can not be taken for granted that the tensor describing an arrow between two objects built over direct sums of @xmath36 , and tensor and negation functors can be viewed as being a standard tensor over @xmath65 $ ] .",
    "this is because the entries take the form of arrows between tensor products over tensor products of both @xmath36 and @xmath291 .",
    "fortunately , @xmath292 is an isomorphism ; and we can compose suitable tensor products built from it , its inverse , dualities of both these arrows and the identity morphism @xmath293 to `` remove '' the dual instantiations of the unit , and so therefore allow us to view the tensors as being over @xmath218 \\cong { \\mathbb{c}}[{\\mathbf{i}},{\\mathbf{i}}]$ ] .      the representations described in this section offer a simplification to the form of morphisms between objects built from the three functors expected to exist in a compact closed category with finite biproducts .",
    "it therefore follows naturally that certain arrows that are part of an mll@xmath1  transformation can be viewed as tensors . in this section",
    "we consider an object @xmath294 in a compact closed category @xmath34 satisfying feeble full completeness for an arbitrary mll@xmath1  functor @xmath35 where @xmath295 , where @xmath296 , and give the arrows into the object which are constituents of mll@xmath1  transformations .",
    "it is known that every mll@xmath1  transformation in a compact closed category with finite biproducts satisfying feeble full completeness is a linear combination of fixed - point - free involutions  @xcite , with an involution being the equivalent of an appropriate number of instances of the unit dinatural transformation @xmath297 joined by a tensor product being postcomposed with a series of symmetry natural isomorphisms . each pair of objects created together by an instance of @xmath297 models a pair of literals joined by an axiom link in a cut - free proof net . as such",
    ", it makes sense to initially provide the tensor representation of @xmath298 for arbitrary @xmath299 .",
    "the unit transformation is derived from the bijective correspondence connected to @xmath34 being applied to the identity arrows in @xmath34 : for every @xmath300 , @xmath301 ; and because of this the arrow @xmath302 is easily shown to have an @xmath303 identity matrix as its tensor representation .",
    "@xmath304 we therefore are at liberty to express an axiom link as a kronecker delta tensor , with one index referring to the object modelling the positive literal and the other the negative literal .",
    "this concept may be extended now by tensor multiplication to mll@xmath1  functors with more than one pair of literals to being joined .",
    "letting @xmath60 be modelled by @xmath305 , the arrow modelling the proof structure    [ auto , node distance=6 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath8 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath10 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b , xshift=-1 mm ] @xmath11 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath12 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d , xshift=-1 mm ] @xmath11 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath13 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f , xshift=-1 mm ] @xmath14 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath10 ;    \\(1 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 7 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ;    is represented by the tensor @xmath306 , where the indices @xmath307 and @xmath308 are connected to the objects representing the @xmath272 positive and negative literals respectively . in a more general form , if the literals which are connected via axiom links are less well - ordered so that the @xmath272 positive literal is connected to the @xmath309 negative literal for some permutation @xmath310 , then the modelling tensor is @xmath311 .    the tensor @xmath312 represents the proof structure below .",
    "[ auto , node distance=6 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath8 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath10 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b , xshift=-1 mm ] @xmath11 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath12 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d , xshift=-1 mm ] @xmath11 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath13 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f , xshift=-1 mm ] @xmath14 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath10 ;    \\(1 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; ( 2 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ blue , skip loop = 5 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 6 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ;    as discussed in section  [ sectioncompccs ] , mll@xmath1  functors may model sequents which contain more than one instance of a single literal ; and such entities can have more than one set of axiom links attached to them .",
    "furthermore , regardless of the number of repeated literals , scalar multiplications on arrows , and so natural and dinatural transformations , are always possible .",
    "this gives rise to the possibility of transformations describing linear combinations of sets of axiom links on a single sequent .",
    "such linear combinations are modelled by mll@xmath1  transformations which are linear combinations of transformations representing single sets of axiom links , whose constituent arrows are linear combinations as well .",
    "it follows , therefore , that the tensor representation of an arrow @xmath313 for some mll@xmath1  transformation @xmath43 where @xmath295 is in the following form : @xmath314 where @xmath315 $ ] for every @xmath310 .",
    "the tensor @xmath316 represents the linear combination of axiom links on the mll@xmath1  formula given below .",
    "[ auto , node distance=6 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath8 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath10 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b , xshift=-1 mm ] @xmath11 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath12 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d , xshift=-1 mm ] @xmath11 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath13 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f , xshift=-1 mm ] @xmath14 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath10 ; ( z1 ) [ left of=1 ] ; ( t1 ) [ above of= z1 ] @xmath317 ; ( t2 ) [ above of= t1 ] @xmath317 ; ( s1 ) [ left of= t1 ] @xmath318 ; ( s2 ) [ left of= t2 ] @xmath151 ;    \\(1 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 7 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 8) ; ( 1 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; ( 2 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ blue , skip loop = 5 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 6 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ;    of course , not every proof structure ( and none which satisfies the correctness criteria ) is built over exactly one formula only containing tensors .",
    "it is therefore important to understand the effects of replacing some instances of the functor @xmath64 with those of @xmath7 .",
    "tensor representations of arrows between arbitrary objects are shown to exist in section  [ sectiontensorrep ] ; this immediately implies that they exist for ones containing the par functor as well .",
    "after all , it is the de morgan dual of the tensor product using @xmath48 as negation .",
    "we can see how involutions are viewed tensorially when certain tensor products are changed by considering @xmath319 described in section  [ catmodels ] and its representation . in compact closed categories ,",
    "the ` mix ' transformation is not just natural but isomorphic , and is in fact built from the same correspondence @xmath320 \\cong { \\mathbb{c}}[-_{a},-_{c } \\otimes ( -_{b})^{*}]$ ] : @xmath321 where @xmath322 is the composition of @xmath61 natural isomorphisms such that @xmath323 via an inductive argument on the size of @xmath17 and @xmath181 , we find that the representation of @xmath324 reduces to an identity , as long as both @xmath17 and @xmath181 are unit - generated . the natural consequence of this is that one need not even think of the multiplicative functor being used once the tensor calculus is employed : we differentiate between arrows with the same tensors purely by looking at their signatures .",
    "we can take this knowledge and provide an tensorial method to look at the the weakening natural transformations .",
    "consider @xmath325 .",
    "if the three inputs to the natural transformation are unit - generated , then we know from above that the instantiations of the @xmath326 functor may be viewed in exactly the same manner as the usages of the @xmath327 functor .",
    "it becomes obvious that , just like the mll@xmath1  transformations above , @xmath328 is perceived as a tensor in the same way as the associativity isomorphism .",
    "that is , letting @xmath329 and @xmath330 be the superindices denoting the @xmath331 entries of the source and target functors respectively , we find that @xmath332 .",
    "the other weakening transformations are defined similarly .",
    "the sets of values and covalues of an object @xmath333 in @xmath75 contain morphisms from  @xmath68 and to  @xmath334 respectively .",
    "as such , if @xmath335 is built solely from @xmath68 , @xmath48 and @xmath219 in the underlying category , then the elements of @xmath336 and @xmath337 can be represented by tensors over the semiring of scalars of @xmath34 .    given @xmath338 , @xmath339 $ ] , we provide the shape of the values and covalues created from the @xmath2-autonomous structure .",
    "one can see particularly how the formulation of these sets is greatly simplified for the negation and tensor product .",
    "* @xmath340 * @xmath341 ; @xmath342 . * @xmath343 * @xmath344",
    "for the purposes of this section , we let @xmath34 be an arbitrary compact closed category with biproducts satisfying feeble full completeness ( definition  [ feeblefcdefn ] ) .",
    "feeble full completeness allows us to assume that every mll@xmath1  transformation ( section  [ catmodels ] ) in this category is described by a linear combination of fixed - point - free involutions , each involution representing an axiom link connecting the two literals being modelled .",
    "it is shown in @xcite that @xmath75 must be @xmath2-autonomous , and so it is already known that all dinatural transformations modelling correct mll@xmath1  proof structures are found in the glued category .",
    "fact  [ propgpreservesdnts ] tells us that the dinatural transformations in the glued category are also described by linear combinations of fixed - point - free involutions . what still remains to be shown , however , is that the double glueing construction not only preserves the feeble full completeness of @xmath34 , but removes enough arrows to ensure that the only linear combinations of proof structures which are still modelled are not linear combinations at all , but denotations of single proof nets .",
    "with such strong constraints on the arrows within transformations already placed , the strategy to do this becomes in essence remarkably simple .",
    "for an mll@xmath1  transformation @xmath345 in @xmath34 to be found in @xmath75 , it must be the case that @xmath346 is found as an arrow from @xmath36 to @xmath347 for every @xmath348 , i.e. the set of values for the @xmath75-object @xmath347 .",
    "alternatively , it may be said that @xmath43 does _ not _ translate into @xmath75 if there is a tuple of @xmath75-objects @xmath349 where @xmath346 does not belong to @xmath350 .",
    "we provide tuples which expose how some arrows describing incorrect proof structures and impure linear combinations do not find themselves in all the sets of values needed to ensure they remain transformations in @xmath75 .    every compact closed category with finite biproducts",
    "has a full subcategory closed under all three of the characteristic functors which is generated solely by its tensor unit @xmath36 .",
    "by choosing ` test objects ' for the tuples from this subcategory , we ensure the proof is as general as possible .",
    "furthermore , if the tuple @xmath349 consists of test objects whose underlying @xmath34-objects are of the form @xmath305 for some @xmath351 , the shape of the object @xmath347 must be akin to those discussed in section  [ sectiontensorrep ] , and tensor representations of arrows may be considered instead , simplifying the process noticeably .",
    "the structure of the coming proof can be viewed as follows :    we first prove that the only mdnf  transformations in  @xmath75 model correct proof nets , a property which we call _ mdnf full completeness_.    1 .",
    "we introduce the families of test objects @xmath352 and @xmath353 , and calculate the sets of values for the objects given by mdnf functors when instantiated using a chosen object from either one of these categories .",
    "these value sets are dependent on the families of full and partial permutations given in definition  [ tensorexamdefns ] .",
    "it is shown that @xmath75 only contains mdnf  transformations modelling linear combinations of proof structures whose scalar multiples sum to @xmath151 ( proposition  [ onlyonelemma ] ) .",
    "in particular , mdnf  transformations containing only zero morphisms ( _ zero transformations _ ) are not found in the glued category .",
    "3 .   a proof that every mdnf  transformation in  @xmath75 models linear combinations of acyclic proof structures is given . * consider a transformation @xmath354 in @xmath34 modelling a linear combination containing a cyclic proof structure .",
    "* use algorithm  [ acyclicalg ] to produce partial permutations for all the blocks of a given cyclic structure .",
    "* proposition  [ acycliclemma ] , together with technical lemmas  [ acyclicclaim1 ] and  [ acyclicclaim2 ] , are used to show that the generated partial permutations can be used to prove that he tensor representation ( section  [ sectiontransextensors ] ) of the transformation instantiated with a single object @xmath305 for large enough @xmath355 can not be found in the instantiation of @xmath35 where all arguments are @xmath356 .",
    "this disproves the possible existence of the equivalent transformation in  @xmath75 .",
    "4 .   following a similar strategy to the above",
    ", we deduce that every mdnf  transformation in  @xmath75 models linear combinations of correct proof structures ( i.e. connectedness is proved ) . * we consider a transformation @xmath354 in @xmath34 modelling a linear combination of acyclic , disconnected proof structures , noting all the structures must be disconnected ( lemma  [ onediscthenallclaim ] ) .",
    "* we create appropriate full permutations for all blocks except one using algorithm  [ disconnecttuplealg ] and lemma  [ conalgcompletelemma ] . * proposition  [ connectedlemma ] explains how these permutations when composed with a tensor representation of appropriate dimensions of the linear combination of disconnected proof structures produces a zero tensor .",
    "this proves that the representation could not exist in the instantiation of @xmath35 where all arguments are @xmath357 , meaning that the transformation can not exist in the double - glued category .",
    "it is found that only singular , unique mdnf  proof nets can be modelled in  @xmath75 . *",
    "the method is nearly identical to those seen above , considering a transformation in @xmath34 to @xmath35 modelling a true linear combination of proof nets ( that is , one containing at least two different proof nets whose scalars are non - zero ) . *",
    "algorithm  [ uniquetuplealg ] generates partial permutations for all except one block containing exactly one literal ( which is a _ leaf _ in each mdnf  proof net ) .",
    "* proposition  [ uniquelemma ] , which lightly makes use of the full form of proposition  [ onlyonelemma ] , shows that the tensor representation of this linear combination can not be found in the set of values of the functor when instantiated using an appropriate @xmath356 once again , and so mdnf  full completeness holds .",
    "finally , we show that the full completeness of mdnf transformations extends to that for all mll@xmath1  transformations .",
    "* algorithms  [ mlltomdnfcyclealg ] and  [ mdnfalg ] take advantage of the natural isomorphisms and weak distributivity natural transformations in @xmath2-autonomous categories to create natural transformations which compose with general mll@xmath1  transformations to give ones for mdnf  functors .",
    "these transformations are used in theorem  [ fcomp ] that mdnf  full completeness implies mll@xmath1  full completeness , thus giving the desired result .",
    "it should be noted that the lemmata used in this full completeness proof find themselves in an unusual order . in previous mll@xmath1",
    "full completeness results , particularly those requiring glueing constructions @xcite , it is generally proved first that only mll@xmath1  proof structures are modelled in the category , and their correctness is shown afterwards . in the coming proof",
    "we do the exact reverse .",
    "the existence of cyclic proof structures in modelled linear combinations is disproved , and disconnectedness of modelled proof structures in the glued category is shown to be unallowed . only then do we prove that ` impure ' linear combinations and scalar multiples of proof nets are not represented by transformations in @xmath75 . without assuming acyclicity the most natural approach to show the ` purity ' ( or ` uniqueness ' as we refer to it from now on ) of the allowed linear combinations required ; the results of following this train of thought is seen in section  [ sectionmllmixfc ] .",
    "most parts of the coming proof method require the use of an algorithm to produce a number of permutation tensors , and these are given in each of the corresponding subsections .",
    "the intuition behind how and why the permutations are of use are given alongside these algorithms before providing each formal , generalised proof .",
    "it turns out that only two fundamental types of test object are required for full completeness to be proved .",
    "we define them both for each @xmath351 as follows :    * @xmath358 : x \\in [ n]\\ } \\cup \\{0_{i , n{\\mathbf{i}}}\\},\\{\\pi_{x } \\in { \\mathbb{c}}[n{\\mathbf{i}},{\\mathbf{i } } ] : x \\in [ n]\\ } \\cup \\{0_{n{\\mathbf{i}},{\\mathbf{i}}}\\})$ ] * @xmath359 : x \\in [ n]\\},\\{\\pi_{x } \\in { \\mathbb{c}}[n{\\mathbf{i}},{\\mathbf{i } } ] : x \\in [ n]\\})$ ]    as discussed in section  [ sectiondgtensor ] , we can represent these objects using sets of tensors instead of collections of arrows .",
    "their new form is given below .",
    "* @xmath360\\ } \\cup \\{0_{i}\\},\\{\\delta_{ix } : x \\in [ n]\\ } \\cup \\{0_{i}\\})$ ] * @xmath361\\},\\{\\delta_{ix } : x \\in [ n]\\})$ ]    it is clear , particularly from the tensor representations , that @xmath356 and @xmath357 are self - dual  that is , @xmath362 and @xmath363  for all positive natural numbers @xmath355 . as a consequence",
    "the sets of tensor representations of values and covalues of the objects @xmath347 and @xmath364 are the same if @xmath365 is the mll@xmath1  functor representing the same sequent as @xmath35 , only with all instances of negative literals converted to positive instances , and @xmath349 is filled only with objects such as @xmath356 and @xmath357 .",
    "because of this , in these situations we are at liberty to pretend that all instances of literals are positive in the formulae when viewing arrows solely through their multilinear arrays .",
    "tensor powers of these objects ( and therefore tensor products only containing positive and negative instances of them ) reproduce the sets of higher - order permutations , both full and partial as defined in definition  [ tensorexamdefns ] .",
    "this can be demonstrated using a standard inductive argument .",
    "we use the notation @xmath366 for the @xmath367 tensor power of an object @xmath82 .",
    "[ claimtensorpowers ] for each @xmath31 , @xmath368^{n}\\},{\\mathop{\\mathsf{perm}}\\nolimits}(n , n)\\right)$ ] .",
    "similarly , @xmath369^{n}\\ } \\cup \\{0_{i_{1 } \\cdots i_{n}}\\},{\\mathop{\\mathsf{pperm}}\\nolimits}(n , n)\\right)$ ] .",
    "the claim is trivially true for @xmath370 in both cases , and it is also clear that @xmath371    to prove that the values and covalues are as desired for any positive @xmath32 , we assume it is true for a natural number @xmath157 and show that it remains true for @xmath372 .",
    "section  [ sectiondgtensor ] contains the standard calculation rules that are used in this proof . starting with the values of the tensor power , we find @xmath373^{m},\\ , x_{m+1 } \\in [ n]\\ } \\\\                                                                                                  &    & \\cup \\ { \\tensor*{\\delta}{*^{x_{1}}_{i_{1}}^{\\;\\cdots\\;}_{\\;\\cdots}^{x_{m}}_{i_{m } } } \\cdot 0_{i_{m+1 } } : ( x_{1},\\ldots , x_{m } ) \\in [ n]^{m}\\ } \\\\                                                                                                  &    & \\cup \\{0_{i_{1 } \\cdots i_{m } } \\cdot \\delta_{i_{m+1}x_{m+1 } } : x_{m+1 } \\in",
    "[ n]\\ } \\cup \\{0_{i_{1 } \\cdots i_{m } } \\cdot 0_{i_{m+1}}\\ } \\\\                                                                                                  & = & \\ { \\tensor*{\\delta}{*^{x_{1}}_{i_{1}}^{\\;\\cdots\\;}_{\\;\\cdots}^{x_{m+1}}_{i_{m+1 } } } : ( x_{1},\\ldots , x_{m+1 } ) \\in [ n]^{m+1}\\ } \\cup \\{0_{i_{1 } \\cdots i_{m+1}}\\}.\\end{aligned}\\ ] ]    finally , the covalues are evaluated to be as required .",
    "@xmath374 , \\ , z_{i_{1 } \\cdots i_{m+1 } } \\cdot 0_{i_{1 } \\cdots i_{m } } \\in \\{\\delta_{i_{m+1}y } , 0_{i_{m+1}}\\},\\right . \\\\                                                                                                      &    &    \\;\\ ; \\forall \\mathbf{x } \\in [ n]^{m } , \\exists y \\in [ n ] , \\ , z_{i_{1 } \\cdots i_{m+1 } } \\cdot \\tensor*{\\delta}{*^{x_{1}}_{i_{1}}^{\\;\\cdots\\;}_{\\;\\cdots}^{x_{m}}_{i_{m } } } \\in \\{\\delta_{i_{m+1}y } , 0_{i_{m+1}}\\ } , \\\\                                                                                                      &    &    \\;\\ ; \\exists \\mathbf{y } \\in [ n]^{m } , \\ , z_{i_{1 } \\cdots i_{m+1 } } \\cdot 0_{i_{m+1 } } \\in \\{\\tensor*{\\delta}{*^{y_{1}}_{i_{1}}^{\\;\\cdots\\;}_{\\;\\cdots}^{y_{m}}_{i_{m } } } , 0_{i_{1 } \\cdots i_{m}}\\ } , \\\\                                                                                                      &    &    \\;\\left.\\ ;   \\forall x_{m+1 } \\in [ n ] , \\exists \\mathbf{y } \\in [ n]^{m } , \\",
    ", z_{i_{1 } \\cdots i_{m+1 } } \\cdot \\delta_{i_{m+1}x_{m+1 } } \\in { \\mathop{\\mathsf{pperm}}\\nolimits}(m , n)\\right\\ } \\\\                                                                                                      & = & \\left\\{z_{i_{1 } \\cdots i_{m+1 } } : \\forall _ { j=1}^{m+1 } \\exists y \\in [ n ] , \\ , z_{i_{1 } \\cdots i_{m+1 } } \\cdot \\prod_{k \\neq j } \\delta_{i_{k}x_{k } } = \\{\\delta_{i_{j}y } , 0_{i_{j}}\\}\\right\\ } \\\\                                                                                                      & = & { \\mathop{\\mathsf{pperm}}\\nolimits}(m+1,n)\\end{aligned}\\ ] ]    the inductive evaluations of the values and covalues for @xmath375 are simpler but essentially identical .    if a functor @xmath35 is in multiplicative disjunctive normal form , then the object @xmath347 takes the form @xmath376    for some @xmath157 and @xmath377 , where @xmath378 for some object @xmath379 , and @xmath380\\ } \\longrightarrow \\{0,1\\}$ ] indicates the number of times the negation functor is applied to one of the instances of the object @xmath333 . if @xmath333 is self - dual like each all objects of the form @xmath356 and @xmath357 , and we continue to use tensor representations , then the function @xmath240 becomes irrelevant and may be ignored to all intents and purposes .",
    "the sets of values and covalues in tensor representation form of the object @xmath347 are then the same as those of the object @xmath381 . knowing the values and covalues of the tensor powers of the objects @xmath356 and @xmath357 for each @xmath355 allows us to calculate @xmath350 and @xmath382 concretely for @xmath383 or @xmath384 . as in the previous chapter , to aid clarity of arguments , the names of the indices used in these sets are based upon the polarity of the literal to which they are tied : ` @xmath270'-indices represent positive literals , and ` @xmath177'-indices negative ones . in a block @xmath26 , we say that there are @xmath385 positive and @xmath386 negative literals ; and in total there are @xmath387 literals .",
    "@xmath388 ,       { \\displaystyle{\\forall}}_{m \\neq k } a^{m } \\in { \\mathop{\\mathsf{pperm}}\\nolimits}(l_m , n ) , \\\\     & & \\;\\exists    ( x_{1},\\ldots , x_{p_{k}},y_{1},\\ldots , y_{n_{k } } ) \\in    [ n]^{l_{k } } \\\\     & &   \\;z^{\\textbf{j}}_{\\textbf{i}}\\cdot\\textstyle\\prod_{m \\neq      k}\\tensor*{(a^{m})}{*^{j_{(m,1)}}_{i_{(m ,          1)}}^{\\;\\cdots\\;}_{\\;\\cdots}^{j_{(m , n_{m})}}_{i_{(m ,          p_{m } ) } } }     =      \\tensor*{\\delta}{*^{x_{1}}_{i_{(k ,          1)}}^{\\;\\cdots\\;}_{\\;\\cdots}^{y_{n_k}}_{j_{(k , n_k ) } } }    \\text { or }     0_{i_{(k,1 ) } \\cdots j_{(k , n_{k})}}\\big\\ } \\\\   & & \\\\",
    "f(\\mathbf{a}_{n},\\mathbf{a}_{n})_{coval }     & = & \\left\\{\\prod_{m=1}^{m}\\tensor*{(a^{m})}{*^{j_{(m,1)}}_{i_{(m ,          1)}}^{\\;\\cdots\\;}_{\\;\\cdots}^{j_{(m , n_{m})}}_{i_{(m , p_{m } ) } } } : a^{m } \\in { \\mathop{\\mathsf{pperm}}\\nolimits}(l_{m},n)\\right\\}\\end{aligned}\\ ] ]    @xmath389 ,       { \\displaystyle{\\forall}}_{m \\neq k } c^{m } \\in { \\mathop{\\mathsf{perm}}\\nolimits}(l_m , n ) , \\\\     & & \\;\\exists    ( x_{1},\\ldots , x_{p_{k}},y_{1},\\ldots , y_{n_{k } } ) \\in    [ n]^{l_{k } } \\\\     & &   \\;z^{\\textbf{j}}_{\\textbf{i}}\\cdot\\textstyle\\prod_{m \\neq      k}\\tensor*{(c^{m})}{*^{j_{(m,1)}}_{i_{(m ,          1)}}^{\\;\\cdots\\;}_{\\;\\cdots}^{j_{(m , n_{m})}}_{i_{(m ,          p_{m } ) } } }     =      \\tensor*{\\delta}{*^{x_{1}}_{i_{(k ,          1)}}^{\\;\\cdots\\;}_{\\;\\cdots}^{y_{n_k}}_{j_{(k , n_k)}}}\\big\\ } \\\\   & & \\\\      f(\\mathbf{c}_{n},\\mathbf{c}_{n})_{coval }     & = & \\left\\{\\prod_{m=1}^{m}\\tensor*{(c^{m})}{*^{j_{(m,1)}}_{i_{(m ,          1)}}^{\\;\\cdots\\;}_{\\;\\cdots}^{j_{(m , n_{m})}}_{i_{(m , p_{m } ) } } } : c^{m } \\in { \\mathop{\\mathsf{perm}}\\nolimits}(l_{m},n)\\right\\}\\end{aligned}\\ ] ]    the derivation of these sets follows from a simple induction on the number of blocks of tensor powers which exist in an mdnf  formula , using the same principles as demonstrated in lemma  [ claimtensorpowers ] and section  [ sectiondgtensor ] .    if an mdnf  transformation @xmath43 in @xmath34 representing a linear combination of sets of axiom links over an mdnf  sequent modelled by a functor @xmath35 is to exist in the glued category , then @xmath390 must belong to both @xmath391 and @xmath392 when @xmath393 .",
    "the rest of this section is dedicated to showing how we can always find permutations ( either full or partial ) that expose the inability of the aforementioned arrow to belong to at least one of these sets if the transformation models an unwanted axiom link combination .",
    "a zero transformation is an mll@xmath1  transformation found in every compact closed category with finite biproducts whose constituent arrows are all zero morphisms .",
    "they could be viewed from a certain perspective as the representation of the statement of a sequent being provable with no evidence , even if the sequent is in fact unprovable by standard linear logic reasoning .",
    "there is no place for such transformations in fully complete models of mll@xmath1 , and so it is fortunate that their absence from the category @xmath75 can be deduced with minimal effort .",
    "it is actually worthwhile proving a stronger result than merely the zero transformations being excluded from the glued category .",
    "we show that a linear combination of proof structures can not possibly be modelled by an mll@xmath1  transformation in @xmath75 unless the sum of the scalars given to each of the proof structures totals exactly @xmath151 .",
    "although this is not a particularly strong result  in particular in categories such as @xmath394 , where the result is in fact equivalent to stating that zero transformations are forbidden  it is necessary for the final full completeness proof to be finished .",
    "the test object which provides the clearest proof of the desired result is @xmath395 .",
    "the object is in fact the tensor unit @xmath396 of the sub-@xmath2-autonomous category @xmath397 defined in section  [ sectionfocusedorth ] , and the properties its position as a unit of a model of mll@xmath1+mix  bestows upon it are pivotal in the lemma below .",
    "[ onlyonelemma ] every mll@xmath1  transformation in @xmath75 models a linear combination of proof structures where the scalars applied to the constituent linkings sum to @xmath151 .    using induction",
    ", we observe that , for every mll@xmath1  functor @xmath35 , the arrows in the values and covalues of @xmath398 have the tensor representation @xmath151 .    *",
    "the base case is trivially true : @xmath399 , and @xmath400 .",
    "* @xmath401 .",
    "* @xmath402 . * @xmath403 , and so this step may be deduced from the previous two .    a linear combination of proof structures is modelled by a tensor @xmath404 , summing over bijections @xmath251 from the set of indices for positive indices to the set of indices for negative ones , with @xmath405 $ ] for all @xmath251 , when the underlying @xmath34-objects of the inputs to @xmath35 are of the form @xmath406 for some @xmath351 .",
    "when @xmath407 , as is the case when @xmath408 is the only @xmath75-object being used in @xmath35 , the deltas become trivial ( all the indices must be given the value @xmath151 ) , meaning that the tensor becomes @xmath409 ; that is , the proof structures are modelled by the sum of the scalars associated with the proof structures .",
    "the only scalar found in @xmath398 is @xmath151 regardless of the form of @xmath35 , meaning morphisms for any sum of scalars not equalling @xmath151 do not lift to the homset @xmath410 $ ] . as such ,",
    "because not all the arrows required to form them in the glued category can be seen , transformations describing linear combinations of proof structures whose scalars do not add up to @xmath151 in their semiring can not translate into @xmath75 either .",
    "no zero transformation @xmath411 in @xmath34 exists in the category @xmath75 .",
    "it is first shown that each proof structure that is part of a linear combination being modelled in @xmath75 satisfies the acyclicity criterion of danos and regnier @xcite .",
    "the concept behind how this is done can be understood by considering a few simple examples .",
    "the most basic example of a cyclic proof structure involves a single axiom link :    [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath412 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath413 ;    \\(1 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ;    modelling @xmath412 with @xmath356 for some @xmath414 , the values of the resultant object are square @xmath415-matrices with at most one entry being non - zero , and if such an entry exists it must be the number @xmath151 . however , the tensor representation of the proof structure desired is @xmath416 , which for this representation of @xmath412 has @xmath355 non - zero entries .",
    "there are too many entries containing non - zero positions .",
    "this fault still remains if we consider scalar multiples of the proof structure .. ]    the same problem occurs with larger cycles containing more than one axiom link and more than one block .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath417 ; ( a ) [ right of=1 ] @xmath9 ; ( 2 ) [ right of = a ] @xmath418 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath418 ;    \\(1 ) edge [ black , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 3 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 5 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;    the proof structure above is described by @xmath419 ( @xmath420 and @xmath421 relating to the positive and negative literals in the @xmath331 block as is the norm ) .",
    "one of the criteria a tensor @xmath422 must satisfy if @xmath423\\ ! ] } = a_{n}$ ] for large enough @xmath355 in order for it to belong to the values of the corresponding object is for every pair of partial ( @xmath424-)permutations over @xmath158 $ ] , @xmath425 and @xmath426 say , to create an @xmath415-matrix with at most one non - zero entry when composed with it . if we say that @xmath427 and @xmath428  which are indeed partial permutations  we find @xmath429 the resulting matrix clearly has two non - zero entries : when @xmath430 and @xmath431 ; and when @xmath432 and @xmath433 . as such , this particular cyclic structure",
    "is shown to be represented neither in the set of values of @xmath434 , nor the mll@xmath1  transformations of @xmath75 .",
    "the reason why this argument is possible is based on the fact that every block involved in a cycle has two literals incident to axiom links in the cycle .",
    "the two literals in the first block may be given tensors containing two non - zero positions which compose with the proof structure tensor because they are in the same block , and @xmath435 contains all partial permutations ; the same is true of those in the second block . if they were not , as would be the situation in the proof structure below , only one non - zero entry would be able to be found : tensors in @xmath436 only have at most one value of @xmath151 , with the rest being zeroes .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath418 ;    \\(1 ) edge [ black , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 3 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 5 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;    the objective of the coming proof is to generate partial permutations with two non - zero positions as above for all bar one of the blocks connected to the axiom links in a chosen cycle ; and these tensors should compose with the kronecker delta tensor representing an incorrect proof structure in a linear combination being considered to create a tensor with more than one entry not equalling zero . of course , the scenarios offered so far have been curtailed in two ways : all of their axiom links are involved in the cycle ( and there is only one cycle ) , and linear combinations of two or more distinct proof structures are absent .",
    "the algorithm below deals with both of these problems , and this is discussed in more detail after its description .",
    "[ acyclicalg ] input : a cyclic mdnf  proof structure with linking @xmath0 containing @xmath157 blocks , the @xmath437 of which containing @xmath438 literals , and one of its minimal cycles @xmath439 .",
    "+ output : a number @xmath351 ; tensors @xmath440 such that @xmath441 for each @xmath26 .    1 .",
    "let @xmath442 , and note that , at this point , none of the links in @xmath0 has been dealt with .",
    "2 .   find a link @xmath443 which has not been dealt with yet . 1 .",
    "if one should exist , then assign the number @xmath444 to both literals incident to  @xmath269 .",
    "increment @xmath270 , and go to step  2 . 2 .",
    "if one does not exist , then move to step  3 .",
    "3 .   find a link @xmath445 which has not been dealt with yet . 1 .",
    "if one should exist , then assign both the numbers @xmath444 and @xmath446 to both literals incident to @xmath269 .",
    "increase the value of @xmath270 by @xmath424 , and restart step  3 .",
    "if one does not exist , then move to step  4 .",
    "4 .   for each tensor product",
    "of literals which does not contain a literal incident to a link within @xmath439 , place the values assigned to each literal into a tuple in the same order as their literals appear in the subformula .",
    "this tuple ` belongs ' to that subformula .",
    "5 .   for each tensor product of literals which does contain a literal incident to at least one link within @xmath439 , create two tuples as follows : 1 .",
    "place the lowest values assigned to each literal into a tuple in the same order as their literals appear in the subformula .",
    "2 .   place the highest values assigned to each literal into a tuple in the same order as their literals appear in the subformula",
    ". 6 .   set @xmath447 ; and for each @xmath448 $ ] , define an element @xmath449 of @xmath450 as follows : @xmath451    the tensors created in this algorithm are indeed always partial permutations .",
    "the tensors associated with blocks which are not connected to the cycle @xmath439 only ever contain one non - zero entry , and that entry is @xmath151 . in this type of situation",
    "it is abundantly clear that there are only @xmath151s and @xmath149s as entries , and there can not be two @xmath151s in the same column . for those blocks connected to the cycle , there are two @xmath151s in their tensors , but since the two tuples which define their positions in the tensor differ in more than one component , they can not exist in the same column , and so they can exist together in a partial permutation .",
    "an example of how the algorithm functions with a typical input is given below .",
    "[ acyclicexam1 ] consider the sum of the two linkings @xmath452 and @xmath453 seen in the following diagram :    [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath413 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath454 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath413 ; ( t1 ) [ above of= z1 ] @xmath453 ; ( t2 ) [ above of= t1 ] @xmath452 ;    \\(1 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 5 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 7 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 8) ; ( 1 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 2 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 5 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 8) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ;    _ the tensor representation of this linear combination of axiom links is @xmath455 .",
    "we apply algorithm [ acyclicalg ] , choosing @xmath452 to be @xmath0 , and the subset of axiom links drawn below to be @xmath439 ( with representation @xmath456 ) _",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath413 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath454 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath413 ; ( t1 ) [ above of= z1 ] ; ( t2 ) [ above of= t1 ] ;    \\(3 ) edge [ magenta , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 5 ) edge [ magenta , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;    1 .",
    "step 2 from the algorithm is iterated twice . starting with the left most axiom link from @xmath457 , the literals , along with the numbers to them are as follows : + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath413 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath454 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath413 ; ( t1 ) [ above of= z1 ] ; ( t2 ) [ above of= t1 ] ; ( 11 ) [ below of=1 ] @xmath151 ; ( 12 ) [ below of=2 ] @xmath458 ; ( 17 ) [ below of=7 ] @xmath424 ; ( 18 ) [ below of=8 ] @xmath459 ; + \\(1 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 7 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; 2 .   like step 2",
    ", step 3 must also be repeated .",
    "starting once again from the left , the following number assignments are given : + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath413 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath454 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath413 ; ( t1 ) [ above of= z1 ] ; ( t2 ) [ above of= t1 ] ; ( 13 ) [ below of=3 ] 3 ; ( 14 ) [ below of=4 ] 5 ; ( 15 ) [ below of=5 ] 5 ; ( 16 ) [ below of=6 ] 3 ; ( 23 ) [ below of=13 ] 4 ; ( 24 ) [ below of=14 ] 6 ; ( 25 ) [ below of=15 ] 6 ; ( 26 ) [ below of=16 ] 4 ; + \\(3 ) edge [ magenta , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 5 ) edge [ magenta , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; 3 .",
    "tuples for the blocks are now created by merging the numbers for each of their literals . + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath417 ; ( c ) [ right of=3 ] @xmath9 ; ( 4 ) [ right of = c ] @xmath418 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath417 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath413 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath454 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath413 ; ( t1 ) [ above of= z1 ] @xmath453 ; ( t2 ) [ above of= t1 ] @xmath452 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 1 ] ; ( 13 ) [ below of=3 ] [ 3 ; ( 1c ) [ below of = c ] , ; ( 14 ) [ below of=4 ] 5 ] ; ( 15 ) [ below of=5 ] [ 5 ; ( 1e ) [ below of = e ] , ; ( 16 ) [ below of=6 ] 3 ; ( 1f ) [ below of = f ] , ; ( 17 ) [ below of=7 ] 2 ] ; ( 18 ) [ below of=8 ] [ 2 ] ; ( 23 ) [ below of=13 ] [ 4 ; ( 2c ) [ below of=1c ] , ; ( 24 ) [ below of=14 ] 6 ] ; ( 25 ) [ below of=15 ] [ 6 ; ( 2e ) [ below of=1e ] , ; ( 26 ) [ below of=16 ] 4 ; ( 2f ) [ below of=1f ] , ; ( 27 ) [ below of=17 ] 2 ] ; + \\(1 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 5 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 7 ) edge [ red , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 8) ; ( 1 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 2 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 5 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 8) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; 4 .   the tensors @xmath460 are then created from the tuples above .",
    "@xmath461    in the tuples underneath each of the blocks in the mdnf  formula given in part 4/5 of the above example , it can be seen that each of the numbers being assigned to the literals occur exactly twice .",
    "it can be easily verified that this occurs with any valid choice of input to the algorithm : before a number is assigned to a pair of literals in either of steps 2 or 3 , the counter used to provide that number is incremented so previously assigned numbers are never reused ; and numbers are assigned to two literals at a time .",
    "furthermore , two literals are given the same number ( or numbers ) of another literal if and only if they share an axiom link in the chosen linking @xmath0 .",
    "this can be realised by noting that steps 2 and 3 are actually , in principle , numbering the axiom links of @xmath0 , and the literals , and only the literals , incident to an axiom link take the numbers associated with that link .",
    "this principle allows us to differentiate the chosen @xmath0 from all other linkings , as can be seen in the coming claims .",
    "[ acyclicclaim1 ] suppose that we have a linear combination of proof structures including a non - zero instance of a linking @xmath0 which contains a minimal cycle @xmath439 , and choose a block @xmath186 through which @xmath439 passes .",
    "then a tensor modelling a linking @xmath462 when composed with all the tensors except @xmath463 created by algorithm [ acyclicalg ] ( when using @xmath0 and @xmath439 as inputs ) will result in a zero tensor if @xmath0 and @xmath462 do not have an identical set of axiom links not connected to block @xmath186 .",
    "suppose there is a link @xmath464 not connected to block @xmath186 .",
    "then the tensor modelling @xmath462 must take the form @xmath465 for some tensor @xmath466 , with @xmath270 and @xmath177 being indices associated with the literals connected via @xmath269 .",
    "for the blocks @xmath467 and @xmath468 containing the literals allocated the index @xmath270 and @xmath177 , the algorithm creates partial permutations built from summations of one or two tensors of the form @xmath469 and @xmath470 , with @xmath471 and @xmath252 and @xmath472 products of kronecker deltas whose details are of little relevance .    since the two literals connected to @xmath269 are not linked in @xmath0 , the numbers given to those literals in the tuples created by the algorithm are different , and therefore we know @xmath473 for each of the parts of the partial permutations @xmath474 and @xmath475 of the form @xmath469 and @xmath470 .",
    "we therefore find that @xmath476 , meaning @xmath477 in all entries , and therefore @xmath478 and @xmath479 for the appropriate indices .",
    "the claim above can be seen clearly in action in example [ acyclicexam1 ] .",
    "if we assume that block @xmath480 , which is certainly in the cycle @xmath439 in @xmath481 , then we see that the link in @xmath453 from the left - most negative literal to the positive literal directly to its right , represented by the tensor @xmath482 , is neither in @xmath452 nor incident to block  @xmath483 .",
    "the algorithm provides two partial permutations @xmath484 and @xmath485 which are intended to be composed directly with @xmath482 , and they produce a zero tensor as desired .",
    "@xmath486 the effects of the tensor relating to @xmath453 are therefore eradicated when composed with all of @xmath487 , @xmath488 , @xmath489 and @xmath490 .",
    "there are examples of linear combinations of proof structures and choice of block @xmath186 , unlike the one given above , where there is a linking @xmath462 which shares all of its axiom links not incident with block @xmath186 with @xmath0 .",
    "lemma  [ acyclicclaim1 ] is rendered useless in these situations when attempting to differentiate all other sets of axiom links from @xmath0 .",
    "the example below typifies such a dilemma .",
    "[ acyclicexam2 ] consider the sum of the three linkings @xmath452,@xmath453 and @xmath491 seen in the diagram below .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ;    \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 1 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 2 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 10mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 1 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 2 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ green , skip loop = 5 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;    _ their corresponding tensor representation is @xmath493 . choosing @xmath491 to be @xmath0 , and taking the subset of links given in the figure below to be @xmath439 ( with representation @xmath494 ) _    [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( t1 ) [ above of= z1 ] @xmath439 ;    \\(2 ) edge [ magenta , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ magenta , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;    1 .",
    "step 2 from the algorithm is only used once .",
    "we provide the single pair of literals connected to the sole link in @xmath457 with the number @xmath151 .",
    "+ [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( 11 ) [ below of=1 ] 1 ; ( 16 ) [ below of=6 ] 1 ; + \\(1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; 2 .",
    "step 3 is repeated twice .",
    "starting from the left , the assign numbers as follows : + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( t1 ) [ above of= z1 ] ; ( 12 ) [ below of=2 ] 2 ; ( 13 ) [ below of=3 ] 4 ; ( 14 ) [ below of=4 ] 4 ; ( 15 ) [ below of=5 ] 2 ; ( 22 ) [ below of=12 ] 3 ; ( 23 ) [ below of=13 ] 5 ; ( 24 ) [ below of=14 ] 5 ; ( 25 ) [ below of=15 ] 3 ; + \\(2 ) edge [ magenta , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ magenta , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; 3 .",
    "the numbers created in the previous steps are now used to make tuples . + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 2 ; ( 1b ) [ below of = b ] , ; ( 13 ) [ below of=3 ] 4 ] ; ( 14 ) [ below of=4 ] [ 4 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] 2 ; ( 16 ) [ below of=6 ] 1 ] ; ( 11 ) [ below of=11 ] [ 1 ] ; ( 12 ) [ below of=12 ] [ 3 ; ( 2b ) [ below of=1b ] , ; ( 23 ) [ below of=13 ] 5 ] ; ( 24 ) [ below of=14 ] [ 5 ; ( 2d ) [ below of=1d ] , ; ( 25 ) [ below of=15 ] 3 ; ( 2e ) [ below of=1e ] , ; ( 26 ) [ below of=16 ] 1 ] ; + \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 1 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 2 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 10mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 1 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 2 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ green , skip loop = 5 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; 4 .",
    "the tensors @xmath495 are then created from the tuples above .",
    "@xmath496 then @xmath497 .    fortunately , we are able to find another claim which provides enough information to differentiate any such rogue sets of axiom links from the chosen linking @xmath0 sufficiently .",
    "[ acyclicclaim2 ] suppose that we have a linear combination of proof structures including a non - zero instance of a linking @xmath0 which contains a minimal cycle @xmath439 , and choose a block @xmath186 through which @xmath439 passes .",
    "let @xmath498 and @xmath499 be the two tuples created for block @xmath186 by algorithm [ acyclicalg ] with @xmath0 and @xmath439 over their associated mll@xmath1  formula as its inputs , reordered so the @xmath272 positions of @xmath500 and @xmath501 relate to the @xmath272 positive literal ( given index @xmath502 ) , and @xmath503 and @xmath504 to the @xmath272 negative literal with @xmath505 . if a set of axiom links @xmath462 in the linear combination is similar enough to @xmath0 that their axiom links not connected to block @xmath186 are the same , then the tensor @xmath506 when composed with all the tensors created by algorithm [ acyclicalg ] except @xmath463 , and either one of the tensors @xmath507 and @xmath508 , the result is the scalar @xmath151 if @xmath509 , and @xmath149 otherwise .",
    "we start by showing that zero is created in the case that @xmath510 . in this situation",
    ", there is an axiom link in @xmath462 incident to block @xmath186 which is not found in @xmath0 . without loss of generality , we assume that this link is connected to block @xmath186 by a positive literal given index @xmath511 in the tensor representation ; it is adjacent to a negative literal with index @xmath512 for some @xmath26 and @xmath513 .",
    "the tensor representation of the axiom link is therefore @xmath514 , and the representation of @xmath462 has this as a factor .",
    "the value ( or values ) found in the @xmath515 position of the tuple ( or tuples ) associated with block @xmath26 in this case are not the same as @xmath516 for @xmath517 , since the link is not found in @xmath0 : the tensor @xmath518 has form @xmath519 or @xmath520 , and we find that @xmath521 for appropriate superindices @xmath522 and @xmath523 , from which this part of the claim is a trivial consequence .",
    "this is because , for both @xmath524 and @xmath424 , @xmath525    now we consider the case when @xmath526 .",
    "suppose that two literals , one of each polarity , given indices @xmath527 and @xmath528 are connected by an axiom link in @xmath0 .",
    "then @xmath529 has @xmath530 as a factor .",
    "if blocks @xmath467 and @xmath468 are not connected to @xmath439 , then it must be the case that @xmath531 and @xmath531 are factors of @xmath532 and @xmath533 respectively for the @xmath534 and @xmath535 defined in the algorithm for these index position . we know that @xmath536 for some @xmath537 for both constant tensors due to the axiom link being in @xmath0 . @xmath538 as such , @xmath539 produces kronecker deltas representing an mdnf  proof structure identical to that of @xmath0 , but with the literals incident to the chosen axiom link removed ( together with said axiom link ) . following this line of argument to its logical conclusion , we find , when @xmath540 means all blocks not adjacent to @xmath439 , that @xmath541 reduces to the tensor representation of the axiom links solely in the neighbouring blocks of @xmath439 , with the @xmath542 in the product being indices for each literal found in the blocks connected to the links in @xmath439 which are adjacent via axiom links to blocks not connected to the cycle .",
    "we now consider tuples @xmath543 for the remaining indices in the blocks connected to @xmath439 .",
    "that is , for each of these @xmath26 , @xmath544 for appropriate superindices .",
    "suppose that there is an axiom link connected to blocks connected to the cycle @xmath439 but not connected to block @xmath186 .",
    "then its representation takes the form @xmath530 for some @xmath467 , @xmath468 , @xmath545 , @xmath513 .",
    "it can not be the case that @xmath546 , since we have chosen for @xmath547 to be a minimal cycle in @xmath0 ( as prescribed by algorithm  [ acyclicalg ] ) .",
    "if it were , it would actually be the entire cycle .",
    "we are therefore left with the only possibility that @xmath548 .",
    "if @xmath549 , then there will be a factor of the original composition which is equivalent to the following : @xmath550 the tensor @xmath551 is acting as the representation of an axiom link between the two literals represented by the indices @xmath552 and @xmath512 .",
    "the two tuples @xmath553 and @xmath554 are partial permutations containing exactly two non - zero positions .",
    "this is seen by how they are found by the blocks @xmath474 and @xmath475 : the ` @xmath555 ' blocks are partial permutations with exactly two non - zero positions , and since they can be formed from the two ` @xmath556 ' tuples by use of a single kronecker delta the same must be true of their factors . by assumption , and without loss of generality regarding which tuple contains the positive literal of the axiom link and which contains the negative , we know that the tuples @xmath553 and @xmath554 are tuples which take the forms below .",
    "@xmath557 for some appropriately sized constant superindices @xmath558 and constants @xmath559 , whilst letting @xmath560 and @xmath561 be the free superindices which are @xmath562 and @xmath561 with @xmath527 and @xmath528 removed respectively .",
    "we know this because algorithm  [ acyclicalg ] ensures that the tuples created for two blocks of tensors will have entries which match each other if and only if there is an axiom link in @xmath0 connecting the literals whose positions they are representing .",
    "since the axiom links of @xmath462 and @xmath0 which are not connected to block @xmath186 are the , this crosses over to this linking .",
    "once these representations have been created , it becomes clear that the tensor composition from before reduces to nothing more than another partial permutation with two non - zero entries .",
    "@xmath563 the representation could be said to be equivalent to the block of literals which would be created by merging to two blocks to which @xmath564 and @xmath565 are connected and removing the linked literals .",
    "the same idea applies to the two tuples that are created .",
    "this is certainly a repeatable process for all axiom links not connected to block @xmath186 . following this procedure as far as possible , we find that the answer to the original composition becomes the same as @xmath566 the tensor @xmath567 is the partial permutation described by two tuples providing the locations of the non - zero entries of block @xmath186 : the concatenation of all the first tuples of blocks which are not @xmath186 , with tuple positions relating to indices describing literals not connected to block @xmath186 by an axiom link deleted ; and the same with the second tuples . in example  [ acyclicexam2 ] , taking that @xmath568 , it happens that @xmath569 .    due to the algorithm ensuring that certain tuple positions are kept equal to one another ,",
    "@xmath570 it then follows trivially that @xmath571    example [ acyclicexam2 ] fits the scenario where lemma  [ acyclicclaim2 ] is used neatly .",
    "assuming block @xmath572 is the chosen block @xmath186 , it is clear that every axiom link in @xmath573 not incident to that block is found in @xmath491 and vice versa .",
    "however , multiplying @xmath574 with @xmath487 and @xmath488 gives the following tensor : @xmath575    multiplying the resulting tensor with either @xmath576 or @xmath577 will immediately result in producing a @xmath149 as an output .",
    "@xmath578 @xmath579 note in particular how composing with @xmath576 produces two tensors being summed together which either have the right numbers to use in the entry positions but in the wrong order as in the first ( due to the axiom links connecting with the block in a different manner ) , or the wrong numbers altogether like in the second ( due to using the tensor created from the information from the upper tuple rather than the lower ) .",
    "the dual of this remark can be found by considering composition with @xmath576 .",
    "armed with the two claims created from the earlier simple principle , we are in a position to express why mdnf  transformations from @xmath34 only translate to @xmath75 if the linear combination of proof structures they model do not contain a cyclic proof structure .",
    "[ acycliclemma ] every mdnf transformation in @xmath75 models a linear combination of acyclic proof structures .",
    "suppose that the functor @xmath580\\!]}$ ] is in mdnf , and therefore for any @xmath351 @xmath581\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n } ) =      { \\displaystyle{\\invamp}}_{m=1}^{m}({\\textstyle{\\bigotimes}}_{l=1}^{l_{m}}a_{n}^{\\phi(m , l)}).\\ ] ] the tensor representations of the values of the above object are given in section  [ sectionmdnfobjects ]    let @xmath582\\!]}|(\\mathbf{r},\\mathbf{r})])_{\\mathbf{r } \\in { \\mathbb{c}}^{n}}$ ] be an mdnf transformation in @xmath34 , modelling a linear combination of proof structures , one of which is cyclic . for the object @xmath583 ,",
    "the component @xmath390 is represented by the tensor @xmath584 one of the bijections , @xmath585 say , is such that @xmath586 , and there is a cycle between the blocks .",
    "we show that @xmath587\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})_{val } =    { \\mathbf{g}\\mathbb{c}}[{\\mathbf{i}},{[\\![f]\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})]$ ] for some choice of @xmath351 .",
    "we choose @xmath355 and define a set of partial permutations @xmath588 \\}$ ] , one for each block of tensor products of literals , using algorithm  [ acyclicalg ] ; and we nominate any one of the blocks that is part of the chosen cycle , calling it @xmath186 .",
    "we know from lemmas  [ acyclicclaim1 ] and  [ acyclicclaim2 ] that there are two distinct entry tuples @xmath589 and @xmath590 for @xmath463 where @xmath591 that , for @xmath592 , @xmath593 the tensor @xmath594 , when multiplied with these partial permutations , produces a tensor with at least two non - zero entries , meaning it fails the criterion desired of it to belong to @xmath580\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})_{val}$ ] . as such @xmath390 is not an arrow in @xmath595\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})]$ ] , and consequently @xmath43 can not be seen as an mll@xmath1  transformation in @xmath75 .",
    "the previous subsection holds the proof that mdnf  transformations in @xmath75 only describe linear combinations of acyclic proof structures .",
    "this section is devoted to proving the proof structures are connected as well .",
    "once again we can see the intuition behind the coming proof using a couple of small examples",
    ".    consider the simplest disconnected proof structure .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath412 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath413 ;    \\(1 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ;    if we say @xmath423\\ ! ] } = c_{n}$ ] for some @xmath414 , it is quickly observed that the values of @xmath596\\!]}$ ] are described by the @xmath483-permutations over @xmath158 $ ] .",
    "these are all tensors of the form @xmath597 ( @xmath307 and @xmath308 being linked to the @xmath272 positive and negative literals respectively ) which , when composed with any three constant tensors , produce another constant tensor .",
    "the proof structure is described by @xmath598 .",
    "it is already known that this is not a full @xmath483-permutation , and therefore does not belong to the set of values .",
    "however , we require a more generalisable perspective in order to the learn from the example .",
    "if we compose @xmath599 with @xmath600 and @xmath601 , which are both @xmath151-permutations over @xmath158 $ ] , we see that @xmath602 , meaning @xmath603 . remembering the description of values of mdnf  objects built solely from @xmath357 in section  [ sectionmdnfobjects ] , it becomes clear that @xmath598 can not belong in @xmath604 : the zero tensor does not belong to @xmath605 , and composing any tensor from the non - empty @xmath606 with @xmath607 produces @xmath608 .    in",
    "the above example it was possible to find ( @xmath151-)permutations for both blocks in the left - hand component which , when composed with the kronecker delta modelling the axiom link incident to their associated literals , produce the scalar @xmath149 .",
    "the generalisability of this idea becomes further evident when a more complicated proof structure is considered .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f ] @xmath412 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath412 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath412 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath413 ;    \\(1 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ black , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; ( 6 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 9 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ;    the above structure contains far more axiom links , and some blocks have more than one literal within them .",
    "its links are described by @xmath609 , with the left - most component s links given by @xmath610 .",
    "the first five blocks constitute the left - most component , and five permutations which can annihilate the above tensors are found below .",
    "@xmath611 @xmath612 it is therefore true that @xmath613 for all @xmath614 , and so @xmath615 is not a value , meaning that @xmath0 is not modelled in @xmath75 by an mll@xmath1  transformation .",
    "the lesson to be learned from the arithmetic above is that although cycle permutations are being used for the permutations @xmath616 above . ] , this is only due to their ease in comprehension .",
    "what is most important is that certain positions in the permutations have value @xmath151 .",
    "the proof structure figure below shows a choice of positions in the permutations corresponding to each block in the proof structure from above which ensure that their composition with the tensor @xmath615 yields a zero tensor .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath413 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath417 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath454 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath492 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath454 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f ] @xmath412 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath412 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath412 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath413 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 1 ; ( 1b ) [ below of = b ] , ; ( 13 ) [ below of=3 ] 4 ] ; ( 14 ) [ below of=4 ] [ 4 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] 5 ; ( 1e ) [ below of = e ] , ; ( 16 ) [ below of=6 ] 2 ] ; ( 17 ) [ below of=7 ] [ 2 ] ; ( 18 ) [ below of=8 ] [ 3 ] ;    \\(1 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ black , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; ( 6 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 9 ) edge [ black , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ;    notice that each pair of literals in the proof structure are only given the same number for their entry positions if they are connected by an axiom link , and that all bar one of the linked pairs share a number , one of the rogue pair being the leaf which is the @xmath617 block . because of this , it is possible to follow a chain of compositions of permutations with @xmath615 in an order such that the permutation of a block @xmath26 is not considered until those of all the blocks whose unique path to the @xmath617 block in the block graph passes through @xmath26 have been ( leaving @xmath618 to last ) .",
    "this ensures that the product of all the permutations corresponding to blocks greater than or equal to @xmath26 in the block graph of the structure with respect to the partial tree ordering induced by the vertex representing the @xmath617 block with the primitive kronecker deltas of @xmath615 having at least one index in common with one of the permutations reduces to a kronecker delta @xmath619 , where @xmath270 is the sole remaining index relating to the literal connected via an axiom link to a literal not in the set of blocks greater than or equal to @xmath26 , and @xmath537 is the number in the tuple placed underneath the same literal .",
    "the inevitable consequence is that the final kronecker delta associated with the axiom link connected to the right - most leaf of the component having its indices substituted for two distinct numbers , which is equal to zero .    of course , we are not in a position to assume we are only dealing with singular proof structures and their scalar multiples  linear combinations of proof structures have not yet been discounted .",
    "lemma [ acycliclemma ] allows us to assume that all proof structures in a linear combination being considered are acyclic .",
    "this has a rather useful consequence , namely that if any one proof structure in a linear combination of them is disconnected , then all the others are as well .",
    "[ onediscthenallclaim ] if a sequent @xmath130 can be bestowed with a valid set of axiom links which induce an acyclic yet disconnected proof structure , then all possible valid linkings are also disconnected .",
    "given a set of proof structures over @xmath130 , we know that all the structures have the same number of edges .",
    "the number of axiom links in a single structure is equal to the number of pairs of literals which exist in @xmath130 , and so independent of the position of the links ; and since the proof structures are built over the same parse forest ( namely the one described by @xmath130 ) , the number of edges which are not axiom links are equal as well .",
    "the number of @xmath7 connectives is trivially only dependent on @xmath130 , and so the number of @xmath7-vertices in each structure does not vary .",
    "the number of edges in a switching of a proof structure is equal to the number in the entire proof structure minus the number of @xmath7-vertices in it , meaning that every switching of every proof structure over @xmath130 has the same number of edges .",
    "the number of vertices in a proof structure over @xmath130 ( and therefore in each of its switchings ) , @xmath355 say , is equal to the total number of literals and connectives in the sequent ; for a graph over this number of vertices to be connected the number of edges must be greater than @xmath620 . if there is an acyclic and disconnected proof structure , its switchings must have strictly fewer than @xmath620 edges : acyclicity provides an upper bound of @xmath620 , and the disconnectedness discounts the possibility of the number being exactly @xmath620 .",
    "therefore _ all _ switchings of all other proof structures have strictly fewer than @xmath620 edges , which implies that the structures are all disconnected .",
    "this fact leaves us with a slightly less daunting task .",
    "we merely need to place more restrictions on where entries must contain the value @xmath151 for each of the permutations being composed with the tensor describing the incorrect mll@xmath1  proof structure .",
    "different proof structures clearly lead to different components , and this could be viewed as creating a moving target .",
    "however , the claim above ensures that no problems are caused .",
    "we choose one leaf in the example to be the block not to be given a permutation to compose with the mdnf  tensor , and let ourselves be prepared to add restrictions to permutations for any of the other blocks if they are in a different component from that leaf for any one of the proof structures being modelled in the linear combination .",
    "the first task is to create a set of permutations over some @xmath158 $ ] for an unacceptable linear combination of proof structures over a sequent @xmath35 which makes it possible to derive a disproof of its associated tensor s existence in the set of values @xmath580\\!]}(\\mathbf{c}_{n},\\mathbf{c}_{n})$ ] .",
    "[ disconnecttuplealg ] input : a linear combination of acyclic , disconnected mdnf proof structures of the same sequent containing @xmath157 blocks .",
    "+ output : a number @xmath351 ; tensors @xmath621 such that @xmath622 for each @xmath26 .    1 .",
    "let @xmath623 be the set of axiom links in a linear combination of acyclic yet disconnected mdnf proof structures which are multiplied by a non - zero scalar .",
    "for each of the blocks containing exactly one literal ( _ leaves _ ) assign distinct values @xmath624 .",
    "we assign variables @xmath625 to each of the @xmath157 blocks , with @xmath626 as the initial setting .",
    "we call these variables _ valencies_. let @xmath627 and @xmath628 .",
    "2 .   take @xmath629 and the @xmath7-free subgraph of the parse tree , and consider the component of the graph containing the lowest numbered component which does not contain block @xmath151 .",
    "choose the leaf with the highest number in that component and change its valency to @xmath149 .",
    "3 .   choose the first block @xmath26 in the component such that @xmath630",
    "if one does exist and it is a leaf , let @xmath631 . if it is not adjacent to another leaf in the graph , then assign the number given to that leaf to the literal to which it is connected and decrement the valency of the block of the connected literal .",
    "restart step  3 . 2 .",
    "if one does exist but it is not a leaf , then mark the sole literal not yet allocated a number as an ` exit ' literal and go to step  4 .",
    "if there are no more blocks of valency @xmath151 and @xmath632 , create a new + @xmath438-tuple @xmath633 for each block @xmath26 in the component , and for every @xmath634 $ ] let @xmath635 be the label given to the @xmath53 literal of the block .",
    "if the @xmath53 literal is the exit of the block , then mark @xmath635 as an exit entry .",
    "delete duplicate tuples associated with each block , and remove all the labels and marks from all the literals except the leaves .",
    "increment @xmath186 and return to step  2 .",
    "4 .   otherwise , terminate the algorithm after declaring that @xmath636 and stating that for each @xmath637 $ ] , @xmath638 4 .",
    "check to see whether the numbers given to each of the non - exit literals correspond exactly to those of a tuple @xmath639 already associated with the block ( meaning that if @xmath640 is the number given to the @xmath53 literal in the block , that @xmath641 for every @xmath270 for which @xmath640 is defined ) .",
    "if so , then assign the final unused number in @xmath633 to the exit literal .",
    "2 .   if not , assign @xmath270 to the exit literal and increment  @xmath270 .",
    "+ assign the number to the literal with which the exit literal shares an axiom link , unless that literal is a leaf and already has been assigned a number .",
    "decrement the valencies of both block @xmath26 and the block with which the exit literal of block @xmath26 is linked by an axiom link in @xmath629 .",
    "go to step  3 .",
    "[ disconnectexam1 ] consider the sum of the three linkings @xmath452 , @xmath453 and @xmath453 provided below in red , blue and green respectively .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath413 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath454 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath492 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath413 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath418 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath412 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ;    \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 7 ) edge [ red , skip loop = 17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 10 ) ; ( 8) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 9 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 7 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 10 ) ; ( 8) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 9 ) ; ( 1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 6 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; ( 8) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ;    the linear combination s tensor representation is @xmath642 we apply algorithm  [ disconnecttuplealg ] .    1 .",
    "we first attach values to the leaves in each of the proof structures described .",
    "the value @xmath270 reaches @xmath643 .",
    "+ [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath413 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath454 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath492 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath413 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath418 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath412 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 2 ] ; ( 13 ) [ below of=3 ] [ 3 ] ; ( 14 ) [ below of=4 ] ; ( 15 ) [ below of=5 ] ; ( 16 ) [ below of=6 ] ; ( 17 ) [ below of=7 ] ; ( 18 ) [ below of=8 ] ; ( 19 ) [ below of=9 ] [ 4 ] ; ( 20 ) [ below of=10 ] [ 5 ] ; + \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 7 ) edge [ red , skip loop = 17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 10 ) ; ( 8) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 9 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 7 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 10 ) ; ( 8) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 9 ) ; ( 1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 6 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; ( 8) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ; + we make sure all the other components have valency the same as the number of literals within them : @xmath644 , @xmath645 , @xmath646 , @xmath647 and @xmath648 .",
    "we proceed with @xmath452 . with this set of axiom",
    "links the first block not in the same component as the first is the third .",
    "the component containing block @xmath572 contains the @xmath649 , @xmath617 , @xmath650 and @xmath651 blocks as well .",
    "we change the valency of block @xmath652 to @xmath149 .",
    "3 .   we must repeat the processes contained in steps  3 and  4 four times ( once for each axiom link in @xmath452 connected to the component containing block @xmath572 ) .",
    "* block @xmath572 is a leaf and connects to the first literal of block @xmath483 .",
    "that literal is therefore given the same number allocated to block @xmath572 ( @xmath572 ) , and the second literal is marked as an exit .",
    "block @xmath483 now has valency @xmath151 , and block @xmath572 has valency @xmath149 . *",
    "block @xmath483 is now the first block to have valency @xmath151 .",
    "its second literal , is given @xmath653 as its tuple entry , as is the first literal of the fifth block , which is adjacent .",
    "the valencies of blocks @xmath483 and @xmath654 become @xmath149 and @xmath424 . the counter @xmath270 is incremented to @xmath652 . * block @xmath643 , a leaf , is now the first block with valency @xmath151 .",
    "it has already been given value @xmath483 , so we give this to its adjacent literal  the third literal in the fifth block .",
    "we decrement the block valencies . *",
    "block @xmath654 is now the only one with valency  @xmath151 in the component .",
    "its only empty position  the second  is allocated the value @xmath655 .",
    "however , it is connected to the last leaf , and so we do not give its adjacent literal the same number ( it already has been given the entry @xmath654 ) .",
    "+ we are left with the following tuples , with the numbers in squares emphasising exit literals for that particular linking : + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath413 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath454 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath492 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath413 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath418 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath412 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 2 ] ; ( 13 ) [ below of=3 ] [ 3 ] ; ( 14 ) [ below of=4 ] [ 3 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] ] ; ( 16 ) [ below of=6 ] [ 6 ; ( 1f ) [ below of = f ] , ; ( 17 ) [ below of=7 ] ; ( 1 g ) [ below of = g ] , ; ( 18 ) [ below of=8 ] 4 ] ; ( 19 ) [ below of=9 ] [ 4 ] ; ( 20 ) [ below of=10 ] [ 5 ] ; + \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 7 ) edge [ red , skip loop = 17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 10 ) ; ( 8) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 9 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 7 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 10 ) ; ( 8) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 9 ) ; ( 1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 6 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; ( 8) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ; 4 .",
    "the process is then repeated with @xmath453 and @xmath491 .",
    "particular points to note are the following : * the component containing block @xmath151 can change ( note that blocks @xmath151 and @xmath424 are not respected with respect to @xmath453 , but the two are adjacent with when the linkings @xmath452 and @xmath491 are used ) .",
    "* in the third iteration for @xmath491 , block @xmath483 is reached at the same time in the same way as in @xmath452 . as such , the number @xmath643 is reused for the tuple entry for its second literal .",
    "+ we now have three sets of tuples for each block ( possibly repeated ) : + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath413 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath454 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath492 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath413 ; ( g ) [ right of=7 ] @xmath9 ; ( 8) [ right of = g ] @xmath418 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath412 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 2 ] ; ( 13 ) [ below of=3 ] [ 3 ] ; ( 14 ) [ below of=4 ] [ 3 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] ] ; ( 16 ) [ below of=6 ] [ 6 ; ( 1f ) [ below of = f ] , ; ( 17 ) [ below of=7 ] ; ( 1 g ) [ below of = g ] , ; ( 18 ) [ below of=8 ] 4 ] ; ( 19 ) [ below of=9 ] [ 4 ] ; ( 20 ) [ below of=10 ] [ 5 ] ; ( 21 ) [ below of=11 ] [ 1 ] ; ( 22 ) [ below of=12 ] [ 2 ] ; ( 23 ) [ below of=13 ] [ 3 ] ; ( 24 ) [ below of=14 ] [ 2 ; ( 2d ) [ below of=1d ] , ; ( 25 ) [ below of=15 ] ] ; ( 26 ) [ below of=16 ] [ 8 ; ( 2f ) [ below of=1f ] , ; ( 27 ) [ below of=17 ] ; ( 2 g ) [ below of=1 g ] , ; ( 28 ) [ below of=18 ] 4 ] ; ( 29 ) [ below of=19 ] [ 4 ] ; ( 30 ) [ below of=20 ] [ 5 ] ; ( 31 ) [ below of=21 ] [ 1 ] ; ( 32 ) [ below of=22 ] [ 2 ] ; ( 33 ) [ below of=23 ] [ 3 ] ; ( 34 ) [ below of=24 ] [ 3 ; ( 3d ) [ below of=2d ] , ; ( 35 ) [ below of=25 ] ] ; ( 36 ) [ below of=26 ] [ ; ( 3f ) [ below of=2f ] , ; ( 37 ) [ below of=27 ] 6 ; ( 3 g ) [ below of=2 g ] , ; ( 38 ) [ below of=28 ] 4 ] ; ( 39 ) [ below of=29 ] [ 4 ] ; ( 40 ) [ below of=30 ] [ 5 ] ; + \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 7 ) edge [ red , skip loop = 17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 10 ) ; ( 8) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 9 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 7 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 10 ) ; ( 8) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 9 ) ; ( 1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 6 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; ( 8) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ; 5 .",
    "the algorithm finished , leaving the following set of tensors : @xmath656    the above algorithm provides a set of partial permutations with entries containing the value @xmath151 at positions which are of use in the final proof of the necessity of connectedness having to be satisfied .",
    "however , they are still _ partial _ permutations , and in order to discuss objects of the form @xmath392 full permutations must be used .",
    "it is therefore necessary to complete the permutations .",
    "completing permutations is non - trivial , but by virtue of a number of properties bestowed on each of the partial permutations described in algorithm [ disconnecttuplealg ] , we are indeed capable of performing such a task .    [ conalgcompletelemma ] every partial higher - order permutation @xmath657 where @xmath637 $ ] which is an output tensor of algorithm  [ disconnecttuplealg ] can be completed to form a full higher - order permutation  @xmath658 .",
    "it is known from definition  [ tensorexamdefns ] that for any @xmath412 and @xmath355 it is always possible to find the tensor @xmath659 in @xmath660 .",
    "it is also well established that using a permutation over @xmath158 $ ] on the numbering used on a single index of a permutation in @xmath660 for any @xmath661 always produces another equally valid permutation in the same set .",
    "suppose that @xmath662 is one of the partial permutations generated by algorithm [ disconnecttuplealg ] after being given appropriate inputs .",
    "then we can refer back to the tuples @xmath663 created in the middle of the algorithm which describe the positions where its entries are equal to @xmath151 , and also the positions in each of the tuples with an ` exit marker ' . from the definition of the procedure",
    ", we can be assured that if the @xmath62 position of the @xmath331 tuple is marked , then @xmath664 for all @xmath665 . in other words ,",
    "the number found in the position of a tuple s exit marker is not used again in the same position of another tuple . with this information",
    ", we define a set of partial functions in @xmath666 @xmath667\\}$ ] in the following manner :    1 .",
    "let @xmath668 , @xmath669 and @xmath670 .",
    "2 .   if @xmath671 has not yet been assigned a value and the tuple position in question was not marked an exit entry in algorithm  [ disconnecttuplealg ] , then we say that @xmath672 and then increment @xmath270 .",
    "go to step  3 .",
    "if @xmath673 , increment @xmath269 and go to step  2 ; otherwise increment @xmath186 , set @xmath269 back to @xmath151 and go to step  4 .",
    "if @xmath674 , then go to step  2 ; otherwise , go to step  5 .",
    "reset @xmath186 and @xmath269 . 6 .",
    "if @xmath675 has not yet been assigned a value , then set @xmath676 and go to step  7 .",
    "otherwise increment @xmath269 and repeat step  6 . 7 .",
    "if @xmath677 , increment @xmath186 and let @xmath670 , and return to step 6 . otherwise , terminate the algorithm .",
    "this algorithm is well defined , and each partial function @xmath678 is injective with all defined source and target values in @xmath158 $ ] . as such , it is possible to restrict each of the partial functions to act upon @xmath158 $ ] , and then to extend them to full @xmath424-permutations over ( i.e. bijective endomorphisms on ) @xmath158 $ ] .",
    "one way in which such an extension of a partial function @xmath679 could be formed is inductively : by assigning the lowest value in @xmath158 $ ] not already in the image of @xmath679 to be the image of the lowest number in @xmath158 $ ] not in domain of definition , and continuing similarly with the new definition of the partial function until it becomes total .",
    "we now define the tensor @xmath680 for @xmath681 in the following manner : @xmath682 the tensor is created by using @xmath424-permutations on each of the entry positions of @xmath683 , and so belongs to the set @xmath660 . furthermore , since @xmath684 for each tuple",
    "@xmath685 where @xmath686 by design , it is a completion of @xmath681 , and as such we have satisfied the original statement as desired .",
    "much in the same manner as with lemma  [ acycliclemma ] , we are finally in a position to prove that the proof structures being modelled in linear combinations in the double - glued category are always proof nets .",
    "[ connectedlemma ] every mdnf transformation in @xmath75 modelling a linear combination of acyclic proof structures is modelling a linear combination of cut - free proof nets .",
    "let @xmath35 be an mdnf formula as in lemma  [ acycliclemma ] , and let + @xmath687\\!]}|(\\mathbf{r},\\mathbf{r})\\right])_{\\mathbf{r } \\in        { \\mathbb{c}}^{n}}$ ] be an mdnf transformation in @xmath34 modelling a linear combination of acyclic yet disconnected proof structures .",
    "we consider @xmath580\\!]}\\left(\\textbf{c}_{n},\\textbf{c}_{n}\\right)_{val}$ ] where @xmath355 is the output integer given by algorithm  [ disconnecttuplealg ] if the linear combination described by @xmath43 is used as an input . from section  [ sectionmdnfobjects ] we know the criteria the tensor representations of the values of this object must satisfy .",
    "as seen in earlier deductions , for the integer @xmath355 acquired from the algorithm , we have the tensor representation @xmath688 algorithm  [ disconnecttuplealg ] and lemma  [ conalgcompletelemma ] makes it possible to obtain a set of ( full ) permutations @xmath689\\}$ ] for the coming argument .",
    "take any set of axiom links described by a bijection , @xmath585 say , such that @xmath690 , and consider the tensor @xmath691 .",
    "it is possible to factorise this tensor into a product of kronecker deltas , one for each component in the switching of @xmath585 .",
    "multiplying the first of these smaller component tensors not containing the indices concerning the first block , @xmath692 say , with each of the permutations @xmath693 corresponding to the blocks within the component in question , the zero scalar is produced .    using the definitions of @xmath585 and @xmath694 given above ,",
    "@xmath695    it is easy to show that there is a partial ordering induced by every tree and every choice of node within it . given a tree @xmath696 and vertex @xmath697 , we can create an ordering @xmath698 defined as follows : if the unique path starting from a vertex @xmath137 and finishing at @xmath697 passes through the vertex @xmath226 , then we say that @xmath699 .",
    "the point @xmath697 is therefore maximal in this ordering .",
    "this is a partial order if we close this under reflexivity .",
    "we consider the blocks with numbers in the image of @xmath694 ( that is , the blocks of the second component ) observing the tree partial ordering induced by the leaf with the highest block number @xmath700 . with block @xmath700 being a leaf , the tensor @xmath701 for some constant @xmath412 , where the @xmath186-index replaces either an @xmath270- or @xmath177-index depending on the polarity of the literal in the block .",
    "it should also be noted that , by design of the algorithm , @xmath412 is a smaller number than any of the numbers given exit markers within the component which are not in a leaf block , and greater than all other numbers given to leaves in the component .",
    "we use an inductive argument on the blocks in this order to demonstrate that , for any block @xmath702 except the reference leaf , a composition of the tensors in @xmath703 with all the kronecker deltas pairs whose indices are shared with two permutations in that set reduces to a constant tensor on the index with the exit marker created at this point in algorithm [ disconnecttuplealg ] and the number with said marker .",
    "that is , @xmath704 where @xmath186 is the sole index not to be composed , and @xmath537 is the number connected to the exit marker in the tuple generated by the algorithm the appropriate linking .",
    "* the base case occurs when block @xmath702 is a leaf .",
    "the first product of kronecker deltas is then empty , and the second only contains the permutation @xmath705 .",
    "since block @xmath702 is a leaf , it must be the case that there is only one literal in the block , and therefore the permutation is a @xmath151-permutation , i.e. a constant tensor of dimension @xmath151 .",
    "the algorithm defines the non - zero entry to occur at the @xmath706 position , where @xmath537 is the single value given to the block in algorithm  [ disconnecttuplealg ] , as desired . *",
    "if not , then the composition can be split further .",
    "let @xmath707 denote the neighbourhood of block  @xmath26 in the graph and @xmath708 .",
    "we can rewrite the composition above as follows : + @xmath709 + by the induction hypothesis , the inside of the bracket can be simplified , leaving @xmath710 + since @xmath705 is a full @xmath711-permutation , it must be the case that our final tensor , with constants taking the places of all bar one of the entry positions , is a @xmath151-permutation as desired .",
    "furthermore , the kronecker deltas which have been fed into the equation are in agreement with exactly one set of tuples that is provided by the algorithm for @xmath705 .",
    "we therefore know that the number that the remaining free variable for the tensor must equal the final unused number from the tuple , which is the value at the exit marker .",
    "our equation reduces to the form @xmath712 with free index @xmath186 and constant @xmath537 as desired .",
    "now we refer back to the original claim .",
    "the composition @xmath713    reduces to the very simple @xmath714 , where the @xmath186-index is a substitute for an @xmath270- or @xmath177-index , depending on whether the literal for the component @xmath700 is positive or negative as before . by the design of the algorithm , this final value @xmath537 is assured of being not equal to @xmath412 ; and therefore it must be the case that @xmath715 as desired .",
    "multiplying a zero tensor with any other tensor results in another zero tensor , and as such we know that @xmath716 since @xmath717 is merely a linear combination of tensors like @xmath718 , and @xmath585 was arbitrary , we know that @xmath719 this means that @xmath720\\!]}\\left(\\textbf{b}_{n},\\textbf{b}_{n}\\right)_{val}$ ] , and so @xmath390 does not meet the criteria to be found in @xmath721\\!]}\\left(\\textbf{b}_{n},\\textbf{b}_{n}\\right)\\right]$ ] .",
    "the mll@xmath1  transformation @xmath43 in @xmath34 is therefore unable to be translated into @xmath75 either .",
    "non - simple linear combinations of two or more proof structures can never be proof nets themselves .",
    "because of this , their representations must be demonstrated to have been eradicated from the categorical model by the double glueing construction before we can declare mdnf  full completeness proved .",
    "the sections above allow us to take as fact that every mll@xmath1  transformation in the glued category @xmath75 is not only the representation of a linear combination of proof structures , but a linear combination of proof _",
    "nets_. furthermore , it is also known that the scalars that each of the proof nets being modelled is multiplied by must sum to the semiring multiplicative unit @xmath151 .",
    "interestingly , the information here is sufficient to provide mdnf  full completeness results for a number of categories of the form @xmath75 for some category @xmath34 : namely those whose semiring of scalars have the property that if a sum @xmath722 happens to equal @xmath151 , then there is exactly one @xmath537 such that @xmath723 , and every other @xmath724 .",
    "an example of this type of category is the category of semimodules over @xmath725 .",
    "however , such grandiose claims can not be written about the majority of compact closed categories with finite biproducts .",
    "in particular , the categories @xmath87 and @xmath123 , which are the examples investigated in @xcite in detail , do not benefit from having this property . a more comprehensive proof for uniqueness is required , and this unsurprisingly takes the same combinatorial form as seen throughout this chapter .",
    "we show the intuition to the proof below .    for the sake of the coming argument",
    ", we assume that we do not have the result from lemma [ onlyonelemma ] ( we use it in a more restricted form later ) .",
    "suppose we have an mll@xmath1  transformation @xmath34 which can be thought of as representing the sum of the two sets of axiom links over the formula below , itself being described by a functor @xmath35 .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) @xmath412 [ right of= z1 ] ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of= a ] @xmath492 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of= b ] @xmath418 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of= c ] @xmath413 ; ( t1 ) [ above of= z1 , xshift=-5 mm ] @xmath453 ; ( t2 ) [ above of= t1 ] @xmath452 ;    \\(1 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 1 ) edge [ red , skip loop = 11 mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 11 mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ;    both linkings successfully describe proof nets for the formula , and so we are looking at a scenario concerning a linear combination of proof nets .",
    "the tensor representations of the two linkings @xmath452 and @xmath453 , given by the red and blue linkings respectively , using the standard indices for each literal , are @xmath726 and @xmath727 respectively .",
    "the description of the linear combination of proof nets being discussed is @xmath728 .",
    "it is simple enough to find partial permutations for both of the first two blocks in the formula of some order which produces a constant tensor when composed with @xmath729 yet creates a zero tensor when composed with @xmath730 .",
    "if we let @xmath731 and @xmath732 , then @xmath733    by symmetry , it must also be possible to reverse this effect by letting @xmath734 and @xmath735 .",
    "@xmath736    there are two significant points in the development of these partial permutations .",
    "firstly , letting @xmath737 ( not using einstein notation ) , the unions @xmath738 and @xmath739 are both partial permutations , where @xmath740 if @xmath741 and @xmath151 otherwise .",
    "secondly , the constant tensors created by the compositions @xmath742 and @xmath743 are not identical .",
    "the effect that these properties together have is that we can find a pair of partial permutations which act on the tensor sum @xmath744 , and the resulting tensor is the sum of two constant tensors where the constants are different ( meaning they can not interfere with one another and cancel each other out ) .",
    "@xmath745 there are clearly two non - zero entries in the resultant tensor , which means we can infer that the tensor @xmath746 can not belong to the set of values @xmath391 for any number @xmath747 .    the idea behind the coming proof can be extrapolated from this very simple example with relative ease .",
    "given an mll@xmath1  transformation @xmath43 in @xmath34 modelling a non - simple linear combination of proof nets , we can show it does not manifest itself in any form in @xmath75 .",
    "an algorithm is given which takes linkings being described by @xmath43 and creates partial permutations for all bar one of the blocks in the formula such that composing them with the tensor representation of two axiom links leaves a constant tensor , minimising interference between tensor representations of each linking involved .",
    "composing these permutations with the a tensor representation of the linear combination of all the axiom links gives a tensor containing more than one non - zero entry , and therefore the tensor @xmath748 is not in @xmath749 for some @xmath355 , thus @xmath43 can not be found in @xmath75 .",
    "we start by giving the algorithm which begins this process .",
    "[ uniquetuplealg ] input : a non - trivial linear combination of mdnf proof nets for a sequent containing @xmath157 blocks , the @xmath437 of which having size @xmath750 for each @xmath26 .",
    "+ output : a number @xmath351 ; tensors @xmath751 such that @xmath752 for each @xmath26 except for one leaf .    1 .",
    "let @xmath452 and @xmath453 be two distinct sets of axiom links in the given linear combination of mdnf proof structures .",
    "we set the valencies @xmath625 such that @xmath753 for all @xmath448 $ ] , except for the last leaf , block @xmath269 say , for which @xmath754 .",
    "we let @xmath755 and @xmath628 .",
    "2 .   choose the first block @xmath26 with @xmath756",
    "if one does exist , then mark the sole literal not yet allocated a number as an ` exit ' and go to step 3 .",
    "if there are no more blocks of valency @xmath151 , create a new @xmath750 tuple @xmath633 for each block @xmath26 in the component , and let @xmath757 for every @xmath758 $ ] , where @xmath640 is the label given to the @xmath53 literal of the block .",
    "remove all the labels . if @xmath628 , increment @xmath186 , reset the valencies and restart step  2 ; otherwise go to step  4 .",
    "check to see whether the numbers given to each of the non - exit literals in the block correspond exactly to those of a tuple @xmath759 already associated with the block . 1 .",
    "if so , then assign the final unused number in @xmath760 to the exit literal .",
    "2 .   if not ,",
    "increment @xmath270 and then assign the new value of @xmath270 to the exit literal . + assign the number to the literal with which the exit literal shares an axiom link in @xmath629 .",
    "decrement the valencies of both block @xmath26 and the the block with which the exit literal of block @xmath26 is linked by an axiom link in @xmath629 .",
    "restart step  2 .",
    "declare that @xmath447 , and we state that for each @xmath448 $ ] , @xmath761    the algorithm above certainly terminates and produces partial permutations . by virtue of the proof structures being described by @xmath452 and @xmath453 being acyclic",
    ", there is always a block with valency @xmath151 at every stage of the algorithm for a single value of @xmath186 when one is needed until all the blocks bar leaf @xmath269 have been visited .",
    "this assures that each block is considered in step  2 exactly twice , and therefore at most two entries are found in each tensor of a block @xmath762 . on top of that , at the point where all bar one of the positions in a new tuple have been decided when @xmath763 it is checked whether they all correspond exactly to the first tuple created when @xmath628 .",
    "if they do then the second tuple is completed to be a clone of the first ; if not then a completely new number is used in the unfilled position .",
    "this ensures that there is never a situation where the two tuples differ in exactly one coordinate , and as such the tuples @xmath751 ( excluding @xmath764 ) have to be partial permutations .",
    "the partial permutations created need to have the effect of annihilating tensor representations of all possible axiom links on a sequent other than the two that have been selected for use in algorithm [ uniquetuplealg ] .",
    "fortunately , the algorithm does do this naturally , and in fact makes sure that the representations of @xmath452 and @xmath453 only make use of one non - zero entry in each of the permutations .    [ uniqueexam ] consider the sum of the three linkings @xmath452 , @xmath453 and @xmath491 ( given in red , blue and green respectively ) in the diagram below .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath492 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath418 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath418 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f ] @xmath412 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath492 ; ( h ) [ right of=8 ] @xmath9 ; ( 9 ) [ right of = h ] @xmath418 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ;    \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 8) ; ( 6 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 7 ) ; ( 9 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 10 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 8) ; ( 6 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 7 ) ; ( 9 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 10 ) ; ( 1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ; ( 6 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 8) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ;    _ the tensor representation of this linear combination is _",
    "@xmath765 _ we apply algorithm  [ uniquetuplealg ] , choosing @xmath452 and @xmath453 as the two ( synonymous ) input linkings . _    1 .",
    "block @xmath643 is the right - most block containing only one literal , so the valencies of each block are given as follows : @xmath766 2 .",
    "we deal first with @xmath452 ( @xmath628 ) .",
    "block @xmath151 has valency @xmath151 , and no tuples have been given to it already ( as is always the case when @xmath628 ) , so the number @xmath151 is allocated to it . + continuing along the same lines , looking for blocks of valency @xmath151 from left to right at each iteration of step  2 , we obtain the following tuples . + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath492 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath418 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath418 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f ] @xmath412 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath492 ; ( h ) [ right of=8 ] @xmath9 ; ( 9 ) [ right of = h ] @xmath418 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath452 ; ( t2 ) [ above of= t1 ] ; ( t3 ) [ above of= t2 ] ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 1 ; ( 1b ) [ below of = b ] , ; ( 13 ) [ below of=3 ] 2 ] ; ( 14 ) [ below of=4 ] [ 2 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] 4 ; ( 1e ) [ below of = e ] , ; ( 16 ) [ below of=6 ] 3 ] ; ( 17 ) [ below of=7 ] [ 3 ] ; ( 18 ) [ below of=8 ] [ 4 ; ( 1h ) [ below of = h ] , ; ( 19 ) [ below of=9 ] 5 ] ; ( 20 ) [ below of=10 ] [ 5 ] ; + \\(1 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; ( 6 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 9 ) edge [ red , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; 3 .   the same is done for @xmath763 , i.e. for the linking @xmath453 , only making sure tuples differing in exactly one position from the ones created when considering @xmath452 do not occur ( which in this case only occurs at leaf blocks @xmath151 and @xmath572 )",
    "we obtain the following : + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath492 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath418 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath418 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f ] @xmath412 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath492 ; ( h ) [ right of=8 ] @xmath9 ; ( 9 ) [ right of = h ] @xmath418 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath453 ; ( t2 ) [ above of= t1 ] ; ( t3 ) [ above of= t2 ] ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 6 ; ( 1b ) [ below of = b ] , ; ( 13 ) [ below of=3 ] 1 ] ; ( 14 ) [ below of=4 ] [ 6 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] 7 ; ( 1e ) [ below of = e ] , ; ( 16 ) [ below of=6 ] 3 ] ; ( 17 ) [ below of=7 ] [ 3 ] ; ( 18 ) [ below of=8 ] [ 7 ; ( 1h ) [ below of = h ] , ; ( 19 ) [ below of=9 ] 8 ] ; ( 20 ) [ below of=10 ] [ 8 ] ; + \\(1 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 8) ; ( 6 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 9 ) edge [ blue , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; 4 .   joining the two sets of tuples together , we get + [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( 1 ) [ right of = z1 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath492 ; ( b ) [ right of=2 ] @xmath9 ; ( 3 ) [ right of = b ] @xmath418 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath417 ; ( d ) [ right of=4 ] @xmath9 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath9 ; ( 6 ) [ right of = e ] @xmath418 ; ( f ) [ right of=6 ] @xmath7 ; ( 7 ) [ right of = f ] @xmath412 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath492 ; ( h ) [ right of=8 ] @xmath9 ; ( 9 ) [ right of = h ] @xmath418 ; ( i ) [ right of=9 ] @xmath7 ; ( 10 ) [ right of = i ] @xmath412 ; ( t1 ) [ above of= z1 ] @xmath491 ; ( t2 ) [ above of= t1 ] @xmath453 ; ( t3 ) [ above of= t2 ] @xmath452 ; ( 11 ) [ below of=1 ] [ 1 ] ; ( 12 ) [ below of=2 ] [ 1 ; ( 1b ) [ below of = b ] , ; ( 13 ) [ below of=3 ] 2 ] ; ( 14 ) [ below of=4 ] [ 2 ; ( 1d ) [ below of = d ] , ; ( 15 ) [ below of=5 ] 4 ; ( 1e ) [ below of = e ] , ; ( 16 ) [ below of=6 ] 3 ] ; ( 17 ) [ below of=7 ] [ 3 ] ; ( 18 ) [ below of=8 ] [ 4 ; ( 1h ) [ below of = h ] , ; ( 19 ) [ below of=9 ] 5 ] ; ( 20 ) [ below of=10 ] [ 5 ] ; ( 21 ) [ below of=11 ] [ 1 ] ; ( 22 ) [ below of=12 ] [ 6 ; ( 2b ) [ below of=1b ] , ; ( 23 ) [ below of=13 ] 1 ] ; ( 24 ) [ below of=14 ] [ 6 ; ( 2d ) [ below of=1d ] , ; ( 25 ) [ below of=15 ] 7 ; ( 2e ) [ below of=1e ] , ; ( 26 ) [ below of=16 ] 3 ] ; ( 27 ) [ below of=17 ] [ 3 ] ; ( 28 ) [ below of=18 ] [ 7 ; ( 2h ) [ below of=1h ] , ; ( 29 ) [ below of=19 ] 8 ] ; ( 30 ) [ below of=20 ] [ 8 ] ; + \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 8) ; ( 6 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 7 ) ; ( 9 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 10 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 3 ) ; ( 2 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 5 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 8) ; ( 6 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 7 ) ; ( 9 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 10 ) ; ( 1 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ; ( 6 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 7 ) ; ( 8) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; + therefore the tensors @xmath767 can now be formed @xmath768    composing the five partial permutations with the representation of @xmath452 ends with a constant tensor . @xmath769 with similar equations it is easily shown that @xmath770 , and that @xmath771 .",
    "the components affected by the tensor representations of @xmath452 and @xmath453 are different from one another , meaning they do not interfere with one another . similarly , the tensor representation for @xmath491 and partial permutations reduce to the zero morphism , and therefore has no effect on any component . the permutations composed with the tensor representation for the sum of all the linkings",
    "is therefore found to be @xmath772 , which has two non - zero entries .",
    "this proves that the linking combination can not be modelled in @xmath75 .",
    "it can also be seen that this lack of interference between different proof nets in the final result means that scalar multiples of the three linkings in question in the example can be summed together in a linear combination and the same concept of proof still holds . if we consider an mll@xmath1  transformation @xmath773 in the underlying category of such a form , then composing @xmath774 with the same five partial permutations for suitable @xmath355 results in a tensor with two non - zero entries , with the fifth and eighth positions filled by the scalars multipled to @xmath452 and @xmath453 repectively .",
    "the exact values within the entries are irrelevant  it only matters that two are non - zero .",
    "[ uniquealgsepsandannisclaim ] let @xmath775 be an mdnf  transformation in a compact closed category @xmath34 with finite biproducts modelling a linear combination of at least two distinct proof nets , @xmath776\\}$ ] say , over the mdnf  formula modelled by @xmath35 containing @xmath157 blocks , the @xmath272 of which is the last leaf .",
    "letting @xmath452 and @xmath453 be the two primary inputs to algorithm [ uniquetuplealg ] , producing @xmath777 partial permutations @xmath778\\backslash \\{l\\}\\}$ ] , we find that @xmath779 where @xmath537 and @xmath780 are the first and second values offered to leaf @xmath269 in the algorithm , and @xmath186 is the index @xmath781 or @xmath782 , depending on the polarity of the literal denoted by leaf @xmath269 . furthermore , for every @xmath783 , @xmath784    the tensor representation of a linking of a proof net is represented by a product of kronecker deltas , where two indices are in the same delta if the literals to which they are associated are linked by an axiom link . as such , if two indices @xmath527 and @xmath528 associated with literals connected by an axiom link in @xmath452 are forced to be given different values @xmath785 and @xmath542 say , then we know that @xmath786 for appropriate index sets @xmath522 and @xmath523 .    the partial permutations , containing either one or two non - zero entries , can be multiplied together and the distribution law can be used to give a sum of @xmath787 products of constant tensors ( @xmath788 being the number of blocks given partial permutations with two non - zero entries ) , with each index being given a number except @xmath186 .",
    "these @xmath787 assignments of numbers are determined by the combinations of first and second tuples associated with the sets of indices for each block  example [ uniqueexam ] provides a good example of this .    of these combinations ,",
    "only two are capable of being composed with a tensor representation of a set of axiom links to create a non - zero tensor : the one where all the constants are chosen to be from the top tuples of each block in the algorithm ; and the one from all the bottom tuples .",
    "this is because the algorithm continuously uses new numbers when an arbitrary number must be selected ( step  3(b ) ) , and so mixing up the top and bottom tuples leaves more than one number given to only one index , thus ensuring it can not be part of an axiom link pairing without creating a zero tensor .",
    "an example of this argument in action can be seen in example  [ uniqueexam ] at the start of step  4 : we see that @xmath789 of block  2 and @xmath790 of block @xmath572 only have one value @xmath424 within the two of them together .    for the tensor representation of @xmath452 , only the combination developed from the top tuples",
    "gives a non - zero tensor .",
    "the second tuples are defined so that two literals are only given the same number in their tuples if they share an axiom link in @xmath453 ; and since @xmath452 and @xmath453 are distinct , there must be at least one pair of literals joined by an axiom link in @xmath452 which does not exist in @xmath453 , thus leading to a zero tensor .",
    "the one index from @xmath791 which does not have a number assigned to it by a partial permutation is clearly @xmath186 , which is connected to the sole literal in a block other than @xmath269 assigned the number @xmath537 in the top tuple .",
    "the composition of @xmath792 with the contsant tensors for relating to the top tuples from the @xmath777 blocks which are not block @xmath269 therefore reduces to a product of kronecker deltas of the form @xmath793 for various @xmath794 and @xmath795 . since @xmath796 for all @xmath794 ,",
    "this becomes simply @xmath795 ; and so it follows that @xmath797 as desired .",
    "the argument for the representation of @xmath453 is fundamentally identical , replacing the bottom tuples for the top tuples throughout the above paragraph . for every other @xmath798 in the linear combination",
    "when composed any one of the @xmath799 combinations mixing top and bottom tuples equates to zero for the same reasons as for @xmath452 and @xmath453 before .",
    "each of them is also distinct from both @xmath452 and @xmath453 by definition , meaning that neither the combination of all the top tuples nor that of the bottom tuples induce constant tensors which compose with @xmath800 to give a non - zero tensor due to the same principle as why the bottom tuples do not for @xmath791 .",
    "we are now able to give the proof for a lemma proving the simplicity of the linear combinations of proof nets capable of being modelled in @xmath75 .",
    "[ uniquelemma ] every mdnf transformation in @xmath75 modelling a linear combination of proof nets is modelling a unique proof net with scalar  @xmath151 .",
    "let @xmath35 be an mdnf formula , and consider @xmath580\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})$ ] for arbitrary @xmath355 , where @xmath801 is defined as in section  [ sectionmdnfobjects ] .",
    "again , we use the criteria also given in section  [ sectionmdnfobjects ] that the tensor representation of an arrow @xmath802\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})|]$ ] must satisfy in order to be found in  @xmath75 .",
    "suppose that @xmath43 is an mdnf transformation in @xmath34 which models a linear combination of two or more proof nets .",
    "then , for @xmath583 , @xmath390 once again takes the tensorial form @xmath803 and we know that there are two bijections , @xmath804 and @xmath805 say , corresponding to axiom link sets @xmath452 and @xmath453 respectively , where @xmath806 .",
    "we use these two sets of axiom links in algorithm  [ uniquetuplealg ] to produce partial permutations @xmath807\\}$ ] for all of the blocks , and to fix the required size of the number @xmath351 to prove the lemma .",
    "let @xmath808 and @xmath809 be the first and second tuple values associated with the last leaf ( block @xmath269 ) from the algorithm .",
    "then we find that for @xmath810 @xmath811 where the index @xmath812 equals @xmath781 or @xmath782 depending on whether the literal of leaf @xmath269 is positive or negative .",
    "we have shown that there are at least two non - zero entries in + @xmath813 , and so @xmath814\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})_{val}$ ] .",
    "the arrow @xmath815\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})|]$ ] does not therefore exist in @xmath595\\!]}(\\mathbf{a}_{n},\\mathbf{a}_{n})]$ ] , and so @xmath43 is not an mll@xmath1  transformation .    from the above , we know that every mll@xmath1  transformation in @xmath75 models a scalar multiple of a cut - free proof net",
    ". lemma  [ onlyonelemma ] ensures that those scalar multiples with scalar not equal to @xmath151 are not possible , and so we have proved the result .",
    "[ mdnffc ] if @xmath34 is a compact closed category with biproducts satisfying feeble full completeness , then @xmath75 satisfies mdnf  full completeness .",
    "the previous subsections contain results which combine to produce a full completeness result for mll@xmath1  transformations to target functors describing sequents in the multiplicative disjunctive normal form .",
    "although a strong connection between any family of mll@xmath1  transformations and proof nets in mll@xmath1  is advantageous , it is certainly no substitute for a ` complete ' mll@xmath1  full completeness theorem .",
    "one of the remarkable properties of the categories in which we are interested is that the earlier mdnf  full completeness proof can be extended using one lemma and a couple of supplementary algorithms so that it works for _ all _ mll@xmath1  functors , giving the full completeness theorem originally proposed .    as stated in chapter",
    "[ catmodels ] , in every @xmath2-autonomous category @xmath816 there are natural transformations @xmath817 and these are canonically isomorphic to appropriate compositions of the associativity and symmetry isomorphisms @xmath60 and @xmath61 if @xmath816 happens to be compact closed , making them bijections ( no two distinct mll@xmath1  transformations compose with the same weak distributivity transformation to give the same result ) .",
    "the tensor representations of these natural isomorphisms are both described solely by kronecker deltas as demonstrated in section  [ sectiontransextensors ] . due to the small diagrammatic argument on page  , an mll@xmath1  transformation @xmath43 in @xmath34",
    "may be composed with a sequence of natural transformations built from the weak distributivity transformations and the associativity and symmetry isomorphisms of @xmath34 to produce an mdnf  transformation @xmath773 .",
    "furthermore , @xmath43 describes an mll@xmath1  transformation in @xmath75 only if @xmath773 does .",
    "[ mdnftomllprop ] let @xmath818 be an mll@xmath1  transformation in @xmath34 , and let @xmath819 be a natural transformation built from the weak distributivity , associativity and symmetry natural transformations of @xmath34 .",
    "then @xmath43 does not exist in @xmath75 if @xmath820 does not .",
    "the transformation @xmath821 is in @xmath75 , and so we know that if @xmath43 is dinatural in the glued category then so does @xmath820 , since both are well - defined in @xmath75 .",
    "the statement of the proposition is the contrapositive of this fact .",
    "it is always possible to find a natural transformations which preserves the cyclicity of at least one modelled cyclic proof structure between mll@xmath1  transformations . as such it is also possible to find a composition of natural transformations which not only preserves the existence of a cyclic proof structure modelled but ensures at least one of these cycles never passes through a @xmath7-vertex in its switching - vertex the cycle exists in all switchings of the proof structure ] .",
    "[ mlltomdnfcyclealg ] input : an mll@xmath1  transformation @xmath775 describing a linear combination of proof structures over a common sequent with at least one structure breaking the acyclicity criterion . + output : an mll@xmath1  transformation @xmath773 describing a linear combination of proof structures over a common sequent with at least one structure containing a switching cycle passing through no @xmath7-vertices .    1 .",
    "select one of the proof structures associated with @xmath43 which fails the acyclicity criterion . choose a cycle of minimum length from one of its switchings .",
    "we let @xmath822 and @xmath823 , and we name the cycle @xmath824 .",
    "let @xmath825 , and whenever we refer to subformulae called @xmath82 , @xmath826 and @xmath827 , we name their lowest vertices as in a parse tree @xmath537 , @xmath780 and @xmath794 respectively .",
    "2 .   search for a position in @xmath828 of the form @xmath829 for some subformulae @xmath82 , @xmath826 and @xmath827 , the corresponding edge @xmath830 of which is in the cycle @xmath357 . 1 .",
    "if one should exist , and @xmath357 passes through @xmath780 , then let @xmath831 the functor @xmath832 is defined to be the target functor of @xmath833 , which is the same as @xmath828 except that the subformula @xmath829 is replaced by @xmath834 .",
    "the cycle @xmath835 passes through the same vertices as those in @xmath357 in the identical sections of @xmath832 and @xmath828 .",
    "if @xmath357 contains the path @xmath836 , then the cycle @xmath835 is completed by adding @xmath837 ; otherwise , @xmath838 is used to connect the ends together .",
    "increment @xmath355 and restart step 2 . 2 .",
    "if one should exist , but @xmath357 passes through @xmath794 instead , let @xmath839 the functor @xmath832 is defined similarly to before : @xmath829 is replaced by @xmath840 . the cycle @xmath835 passes through the same vertices as those in @xmath357 in the identical sections of @xmath832 and @xmath828 .",
    "if @xmath357 contains @xmath841 , then the cycle @xmath835 is completed by adding the path @xmath842 ; otherwise , @xmath843 .",
    "increment @xmath355 and restart step 2 . 3 .",
    "if one does not exist , then move to step 3 .",
    "search for a position in @xmath828 of the form @xmath844 for some subformulae @xmath82 , @xmath826 and @xmath827 , the corresponding edge @xmath845 of which is in the cycle @xmath357 . 1 .",
    "if one should exist , and @xmath357 passes through @xmath537 , then let @xmath846 the functor @xmath832 is defined to be the target functor of @xmath833 , which is the same as @xmath828 except that the subformula @xmath844 is replaced by @xmath847 .",
    "the cycle @xmath835 passes through the same vertices as those in @xmath357 in the identical sections of @xmath832 and @xmath828 .",
    "if @xmath357 contains the path @xmath848 , then the cycle @xmath835 is completed by adding @xmath842 ; otherwise , @xmath849 is used to connect the ends together .",
    "increment @xmath355 and restart step 2 . 2 .",
    "if one should exist , but @xmath357 passes through @xmath780 instead , let @xmath850 the functor @xmath832 is defined similarly to before : @xmath844 is replaced by @xmath851 . the cycle @xmath835 passes through the same vertices as those in @xmath357 in the identical sections of @xmath832 and @xmath828 .",
    "if @xmath357 contains @xmath852 , then the cycle @xmath835 is completed by adding the path @xmath853 ; otherwise , @xmath843 .",
    "increment @xmath355 and go back to step 2 . 3 .",
    "if one does not exist , then define @xmath854 , @xmath855 and @xmath856    intuitively it is simple to see why this algorithm works .",
    "suppose , without loss of generality , that one of the scenarios expected for step  2(a ) unfolds ( dual arguments can be given for each of the other four situations ) .",
    "we can think of the proof structure with the cycle @xmath357 for some @xmath355 taking the form of one of the left - hand diagrams in figures  7.1 and  7.2 below .",
    "[ dissociatefigure ]    [ node distance=.3 cm and .5 cm , box/.style= rectangle , minimum size=6 mm , very thick , draw=#1!50!black!50 , top color=#1!50!black!20 , bottom color=#1!50!black!20 , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ line width=3mm , draw = black ,- triangle 45,postaction = draw , line width=5 mm , shorten > = 7 mm , - ] ( x1 ) [ box = red , ] @xmath82 ; ( y1 ) [ box = blue , right = of x1 ] @xmath826 ; ( z1 ) [ box = green , right = of y1 ] @xmath827 ; ( x1 ) [ below = of x1 ] @xmath537 ; ( y1 ) [ below = of y1 ] @xmath780 ; ( z1 ) [ below = of z1 ] @xmath794 ; ( p1 ) [ below left = of z1 , xshift=5 mm ] @xmath7 ; ( t1 ) [ below left = of p1 , xshift=5 mm ] @xmath9 ; ( w1 ) [ right = of z1 ] ; ( w2 ) at ( t1 -| w1 ) ; ( w0 ) [ above= 2 mm of w1 ] ; ( w3 ) [ below= 2 mm of w2 ] ; ( tail ) [ below right = of z1 , xshift=5 mm , yshift=2 mm ] ; ( head ) [ right= 20 mm of tail ] ; ( x2 ) [ box = red , right= 4 cm of z1 ] @xmath82 ; ( y2 ) [ box = blue , right = of x2 ] @xmath826 ; ( z2 ) [ box = green , right = of y2 ] @xmath827 ; ( x2 ) [ below = of x2 ] @xmath537 ; ( y2 ) [ below = of y2 ] @xmath780 ; ( z2 ) [ below = of z2 ] @xmath794 ; ( t2 ) [ below right = of x2 , xshift=-5 mm ] @xmath9 ; ( p2 ) [ below right = of t2 , xshift=-5 mm ] @xmath7 ; ( v1 ) [ right = of z2 ] ; ( v2 ) at ( p2 -| v1 ) ; ( v0 ) [ above= 2 mm of v1 ] ; ( v3 ) [ below= 2 mm of v2 ] ; ( x1 ) edge [ orange , very thick , skip loop=6 mm ] ( y1 ) ; ( x1 ) edge [ orange ] ( x1 ) ; ( y1 ) edge [ orange ] ( y1 ) ; ( z1 ) edge ( z1 ) ; ( x1 ) edge [ orange ] ( t1 ) ; ( y1 ) edge [ orange ] ( p1 ) ; ( z1 ) edge ( p1 ) ; ( p1 ) edge [ orange ] ( t1 ) ; ( x2 ) edge [ orange , very thick , skip loop=6 mm ] ( y2 ) ; ( x2 ) edge [ orange ] ( x2 ) ; ( y2 ) edge [ orange ] ( y2 ) ; ( z2 ) edge ( z2 ) ; ( x2 ) edge [ orange ] ( t2 ) ; ( y2 ) edge [ orange ] ( t2 ) ; ( z2 ) edge ( p2 ) ; ( p2 ) edge ( t2 ) ; ( tail)(head ) ;    [ dissociatefigure2 ]    [ node distance=.3 cm and .5 cm , box/.style= rectangle , minimum size=6 mm , very thick , draw=#1!50!black!50 , top color=#1!50!black!20 , bottom color=#1!50!black!20 , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ line width=3mm , draw = black ,- triangle 45,postaction = draw , line width=5 mm , shorten > = 7 mm , - ] ( x1 ) [ box = red , ] @xmath82 ; ( y1 ) [ box = blue , right = of x1 ] @xmath826 ; ( z1 ) [ box = green , right = of y1 ] @xmath827 ; ( x1 ) [ below = of x1 ] @xmath537 ; ( y1 ) [ below = of y1 ] @xmath780 ; ( z1 ) [ below = of z1 ] @xmath794 ; ( p1 ) [ below left = of z1 , xshift=5 mm ] @xmath7 ; ( t1 ) [ below left = of p1 , xshift=5 mm ] @xmath9 ; ( w1 ) [ right = of z1 ] ; ( w2 ) at ( t1 -| w1 ) ; ( w0 ) [ above= 2 mm of w1 ] ; ( w3 ) [ below= 2 mm of w2 ] ; ( tail ) [ below right = of z1 , xshift=5 mm , yshift=2 mm ] ; ( head ) [ right= 20 mm of tail ] ; ( x2 ) [ box = red , right= 4 cm of z1 ] @xmath82 ; ( y2 ) [ box = blue , right = of x2 ] @xmath826 ; ( z2 ) [ box = green , right = of y2 ] @xmath827 ; ( x2 ) [ below = of x2 ] @xmath537 ; ( y2 ) [ below = of y2 ] @xmath780 ; ( z2 ) [ below = of z2 ] @xmath794 ; ( t2 ) [ below right = of x2 , xshift=-5 mm ] @xmath9 ; ( p2 ) [ below right = of t2 , xshift=-5 mm ] @xmath7 ; ( v1 ) [ right = of z2 ] ; ( v2 ) at ( p2 -| v1 ) ; ( v0 ) [ above= 2 mm of v1 ] ; ( v3 ) [ below= 2 mm of v2 ] ; ( y1 ) edge [ orange , very thick , skip loop=6 mm ] ( w1 ) ; ( w0 ) edge [ orange , very thick ] ( w3 ) ; ( t1 ) edge [ orange , very thick , skip loop=-6 mm ] ( w2 ) ; ( x1 ) edge ( x1 ) ; ( y1 ) edge [ orange ] ( y1 ) ; ( z1 ) edge ( z1 ) ; ( x1 ) edge ( t1 ) ; ( y1 ) edge [ orange ] ( p1 ) ; ( z1 ) edge ( p1 ) ; ( p1 ) edge [ orange ] ( t1 ) ; ( y2 ) edge [ orange , very thick , skip loop=6 mm ] ( v1 ) ; ( v0 ) edge [ orange , very thick ] ( v3 ) ; ( p2 ) edge [ orange , very thick , skip loop=-6 mm ] ( v2 ) ; ( x2 ) edge ( x2 ) ; ( y2 ) edge [ orange ] ( y2 ) ; ( z2 ) edge ( z2 ) ; ( x2 ) edge ( t2 ) ; ( y2 ) edge [ orange ] ( t2 ) ; ( z2 ) edge ( p2 ) ; ( p2 ) edge [ orange ] ( t2 ) ; ( tail)(head ) ;    the diagrams highlight the two possible key paths from @xmath357 in @xmath828 ( which also happen to the the edges which still exist in one of the switchings causing the cycle ) .    * in the first situation the path is composed of the following : the switching path linking the subformulae @xmath82 and @xmath826 , which may pass through any number of other subgraphs of a switching ; the edge from @xmath537 to the @xmath64-vertex ; the switch edge from the @xmath7-vertex to @xmath780 ; and the edge between the @xmath64- and @xmath7-vertices denoting the synonymous connectives written explicitly in @xmath857 .",
    "it is trivially true that there must be a path from the literals connected to the highlighted axiom link through their respective subformulae @xmath82 and @xmath826 to @xmath537 and @xmath780 .",
    "+ the natural transformation @xmath328 converts that proof structure from figure  7.1 and the cycle described within it to the one to its right .",
    "the weak distributivity transformation does not affect which literals are connected to one another via an axiom link , and also does not affect any subformulae of @xmath828 except @xmath857 .",
    "the only change is a ` shuffling ' of the @xmath64- and @xmath7-vertices in the primary subformula being considered .",
    "the cycle itself can be thought of as having been reduced by the algorithm so it contains all the same vertices except possibly for the @xmath7-vertex , which may have been removed . * in the second scenario we have a slightly longer path : the switching path linking the lowest @xmath64-vertex in the subgraph back to @xmath826 at the top , which may pass through any number of axiom links ; the switch edge from the @xmath7-vertex to @xmath780 ; and the edge between the @xmath64- and @xmath7-vertices denoting the synonymous connectives written explicitly in @xmath857 . + the natural transformation @xmath328 converts the left proof structure of figure  7.2 to the one on its right , with the cycle highlighted in the second diagram still existing .",
    "in this situation the length of the cycle has not been reduced , but a @xmath64-vertex has effectively been moved further up the proof structure , which creates new possibilities for scenarios such as that seen in the previous point to be found .    the lowest vertices in a cycle in the switching of a proof structure must be @xmath64-vertices , with the cycle flowing through both of its argument edges . whenever we meet such a situation as seen in the first case ,",
    "the length of the cycle is reduced by one : a @xmath7-vertex is removed . in the second case",
    "the length of the cycle is not changed , but the alteration in the form of the cycle in effect pushes the @xmath7-vertex further down the structure until it inevitably meets a @xmath64-vertex of maximal depth , at which point the vertex is removed .",
    "since the other four steps 2(b ) , 3(a ) and 3(b ) of algorithm  [ mlltomdnfcyclealg ] are identical in concept to step  2(a ) they also steadily remove these vertices .",
    "since the algorithm stops once there are no @xmath7-vertices in the cycle , and eventually in the worst case all @xmath7-vertices will find themselves under the @xmath64-vertices , this principle assures termination .",
    "it is also always possible to produce an mdnf  transformation from an mll@xmath1  transformation using an algorithm such as the one below .",
    "[ mdnfalg ] input : an mll@xmath1  transformation @xmath775 describing a linear combination of proof structures over a common sequent . + output : an mdnf  transformation @xmath773 describing a linear combination of proof structures over a common sequent .    an algorithm which takes an mll transformation describing a linear combination of proof structures over a common sequent , and produces another mll transformation representing a linear combination of proof structures , only over an mdnf  sequent .",
    "the new sequent will preserve the number of tensor and par operators within the formulae .    1 .",
    "let @xmath858 and @xmath823 .",
    "let @xmath825 , and whenever we refer to subformulae called @xmath82 , @xmath826 and @xmath827 , we name their lowest vertices as in a parse tree @xmath537 , @xmath780 and @xmath794 respectively .",
    "2 .   search for any position in @xmath828 of the form @xmath829 for some subformulae @xmath82 , @xmath826 and @xmath827 .",
    "if one should exist , then let @xmath859 .",
    "the functor @xmath832 is defined to be the target functor of @xmath833 .",
    "increment @xmath355 and go back to step 2 . 2 .",
    "if one does not exist , then move to step 3 .",
    "search for any position in @xmath828 of the form @xmath844 for some subformulae @xmath82 , @xmath826 and @xmath827 .",
    "if one should exist , then let @xmath860 .",
    "the functor @xmath832 is defined to be the target functor of @xmath833 .",
    "increment @xmath355 and go back to step 2 . 2 .",
    "if one does not exist , then let @xmath861 , @xmath862 and @xmath863 .",
    "algorithm [ mdnfalg ] is far simpler than algorithm  [ mlltomdnfcyclealg ] , because there is no need to consider the preservation of anything : we are merely composing an mll@xmath1  transformation with a number of natural transformations which lead to the creation of an mdnf  transformation . however , it is useful to make the following observation .",
    "let @xmath775 be an mll@xmath1  transformation modelling a linear combination of proof structures over a sequent , at least one of which fails the acyclicity criterion . then applying algorithms  [ mlltomdnfcyclealg ] and  [ mdnfalg ] in that order produces an mdnf  transformation @xmath864 modelling a linear combination of proof structures , with at least one being cyclic .",
    "it is now possible to prove mll@xmath1  full completeness for @xmath75 .",
    "[ fcomp ] if @xmath34 is a compact closed category with finite biproducts satisfying feeble full completeness then @xmath75 satisfies mll@xmath1  full completeness .",
    "let @xmath43 be an mll@xmath1  transformation in @xmath34 modelling a linear combination of proof structures , at least one of which is cyclic . using algorithms [ mlltomdnfcyclealg ] and [ mdnfalg ]",
    ", we obtain a family of arrows @xmath864 modelling a linear combination of mdnf  proof structures , with at least one of these containing a switching cycle . by proposition  [ mdnffc ] ,",
    "@xmath864 is not an mdnf  transformation in @xmath75 ; and therefore it immediately follows from proposition  [ mdnftomllprop ] that @xmath43 is not either .",
    "if we instead assume that @xmath43 models a linear combination of acyclic yet disconnected mll@xmath1  proof structures , algorithm [ mdnfalg ] produces an mdnf  transformation @xmath773 when introduced to @xmath43 , and this new transformation is also a linear combination of acyclic , disconnected proof structures . proposition  [ mdnffc ] once again allows us to say that @xmath773and consequently @xmath43does not exist in @xmath75 .",
    "the same principle can be used for the case where @xmath43 is a non - simple linear combination of proof nets , and so no mll@xmath1  transformations not representing a unique proof net is found in @xmath75 .",
    "we can in fact improve on the theorem above greatly with near enough no effort by making a simple observation . for any choice of category @xmath34 , the only objects used in the lemmata in this section are in the sets @xmath865 and @xmath866 ; and all of these",
    "are found in the collection of objects for any orthagonality category @xmath92 with focus @xmath867 .",
    "the values and covalues of a @xmath92-object @xmath827 also describe the set of morphisms between the category s tensor unit @xmath868 and @xmath827 and between @xmath827 and @xmath869 respectively ( fact  [ covaluearrowprop ] ) . because of this",
    ", the arguments from previous chapters and earlier in this chapter using the properties of the values and covalues may be replicated verbatim to give an mll@xmath1  full completeness theorem for all categories of this more restricted form .",
    "if @xmath34 is a compact closed category with finite biproducts satisfying feeble full completeness then @xmath92 satisfies mll@xmath1  full completeness for any @xmath870 .    for a tensor - generated compact closed category with biproducts @xmath34 the category @xmath75 satisfies mll@xmath1  full completeness .",
    "note that biproducts are necessary for this result despite the fact that we are not addressing the additive connectives here .",
    "indeed , it is very easy to produce a ( tensor - generated ) compact closed category without biproducts which does not create a fully complete model under the double glueing construction ( the full subcategory of  @xmath123 containing only the tensor unit @xmath871 for example ) .",
    "the theorem given in the previous section has the effect of generalising the primary results found in first four chapters of @xcite , which concern the categories @xmath872 and @xmath873 for arbitrary field @xmath122 of characteristic @xmath149 .",
    "however , the manner in which tan proves her theorem for @xmath872 actually has a positive side effect that the proof above is unable to replicate .",
    "the lemmata proving acyclicity and uniqueness are not stated with an assumption of an already derived connectedness lemma ; and the objects used in the proofs of the acyclicity and uniqueness are found in the collection of objects in the orthogonality subcategory @xmath874 with focus the singleton @xmath875 for @xmath876 , which is defined earlier in section  [ sectiontransextensors ] . the category @xmath877 is known to be a categorical model of mll@xmath1+mix , and every dinatural transformation in @xmath877 is inherited from @xmath87 .",
    "all these facts together allow us to conclude the following :    @xcite the category @xmath877 satisfies mll@xmath1+mix  full completeness in @xcite . ] .    this result can in fact",
    "also be generalised , though not the same extent as that seen in section  [ sectiongcfc ] . in this section",
    "we demonstrate that the category @xmath397 satisfies mll@xmath1+mix  full completeness if @xmath34 is , like @xmath87 , a _",
    "zero - sum - free _ compact closed category with biproducts .",
    "a semiring @xmath130 is _ zero - sum - free _ if its additive unit @xmath149 is its sole element with an additive inverse .",
    "a compact closed category with finite biproducts is _ zero - sum - free _ if it is enriched over a category @xmath878 for which the @xmath130 is zero - sum - free .    though the use of counterexample test objects to show certain mll@xmath1  transformations found in @xmath34 can not be seen in the glued category",
    "is still abundantly present , the flavour of the coming proof resembles the deduction of tan more closely than the earlier proofs :    1 .",
    "we start by showing that the mll@xmath1  transformations which are found in both @xmath34 and @xmath397 must model simple linear combinations of proof structures .",
    "this is done by using reducing the problem to one for mll@xmath1  functors built using no tensor functors ( proposition  [ mdnfmixtomllprop ] ) . by necessity the proof of uniqueness ( proposition  [ mixuniquelemma ] ) takes a slightly less combinatorial shape than before and has a more algebraic feel , with its basis being simultaneous equations",
    ". 2 .   this",
    "is followed by the proof that the proof structures being modelled must also be acyclic and therefore correct with respect to the danos - regnier mll@xmath1+mix  proof net criterion .",
    "algorithm  [ mixcyclealg ] reduces the target to the most simple standard form , leaving a comparartively simple argument for proposition  [ mixacycliclemma ]",
    ". the theorem immediately follows .    in spite of the small change in proof style , the index notation for values and covalues of the objects of the form @xmath879 that has been employed greatly in this chapter continues to be utilised ubiquitously .      in this full subcategory of @xmath75",
    "in which we now reside , we have restrictions on the sets of values and covalues which we may choose for our test objects to prove certain transformations from the underlying category do not become transformations in our new location .",
    "every value must compose with every covalue to produce the morphism @xmath880 and vice versa .",
    "this is remarkably restrictive , primarily because it becomes harder to find valid test objects which are self - dual and still useful , such as the objects @xmath356 and @xmath881 described in section [ sectionmdnfobjects ] in @xmath75 .",
    "however , this is counterbalanced by the fact that categorical models of mll@xmath1+mix  are equipped with the ` mix ' natural transformation @xmath882 , which permits great simplifications to the set of mll@xmath1  formulae which must be considered to produce the desired results .",
    "the proof of the simplicity of all linear combinations of proof structures modelled in @xmath397 demonstrates both these changes to the playing field in the clearest manner .",
    "proposition  [ mdnftomllprop ] in the previous section allowed us to simplify the entire of the mll@xmath1  full completeness proof of @xmath75 to one for mdnf  full completeness . now using the mix natural transformation",
    ", we can produce a more extreme version of this proposition whose proof follows from an identical concept , which is possible due to @xmath883 being an isomorphism in compact closed categories .",
    "[ mdnfmixtomllprop ] let @xmath818 be an mll@xmath1  transformation in @xmath34 , and let @xmath819 be a natural transformation built from the ` mix ' , weak distributivity , associativity and symmetry natural transformations of @xmath34 .",
    "then @xmath43 does not translate into @xmath397 if @xmath820 does not .",
    "for the uniqueness proof the actual connectives that are in each formula being modelled become irrelevant  only the number of linkings is important . because of this , a natural transformation eradicating all uses of the tensor product ` @xmath64 ' , leaving a formula of the form @xmath884 , is a reasonable suggestion for @xmath821 in the above proposition .",
    "[ allpartomllprop ] every mll@xmath1+mix  transformation in @xmath397 models a single proof structure if and only if every mll@xmath1+mix  transformation to a functor leading to objects of the form @xmath885 for some @xmath886 \\longrightarrow [ n]$ ] does .",
    "we now follow the same procedure of choosing a single family of objects in @xmath397 , @xmath887 , where @xmath888 for each @xmath355 , so that the set of values of the object @xmath889 does not contain the tensor representation of an mll@xmath1  transformation modelling a non - simple linear combination of axiom links .",
    "we define each of the @xmath890 as follows : @xmath891\\},\\{1_{i}\\}),\\ ] ] where @xmath892 is the tensor with entries equalling @xmath151 for all @xmath270 . the values and covalues of @xmath893",
    "can be found from this definition for any @xmath157 easily .",
    "[ claimmixobjectproperties ] for each @xmath894 ,    * @xmath895 + @xmath896^{m}\\ , \\forall k \\in [ m]\\,\\ , z_{\\mathbf{j}}^{\\mathbf{i } } \\cdot \\prod_{m \\neq k } ( \\delta_{i_{m}}^{x_{m}}1_{j_{m } } ) \\in { \\mathop{\\mathsf{perm}}\\nolimits}(2,n)\\right\\}$ ] * @xmath897^{m}\\right\\}$ ]    we follow a similar argument to that seen in lemma  [ claimtensorpowers ] , which is based around induction .",
    "we start by considering the covalues .",
    "the proof that the covalues of @xmath898 is near enough trivial .",
    "@xmath899\\ }      \\end{aligned}\\ ] ] it now takes minimal effort to show that the result desired is true for @xmath900 whilst assuming the claim is true for @xmath901 for all @xmath902 .",
    "@xmath903^{m},\\,\\,x_{m+1 } \\in [ n]\\right\\ } \\\\                                                              & = & \\left\\{\\textstyle\\prod_{m=1}^{m+1}\\delta_{i_{m}}^{x_{m}}1_{j_{m } } : ( x_{1},\\ldots , x_{m+1 } ) \\in [ n]^{m+1}\\right\\ }      \\end{aligned}\\ ] ]    now we deal with the values of these object amalgamations .",
    "the base case shows us that the values of @xmath898 are the permutations over @xmath158 $ ] .",
    "z_{i}^{j}1_{i } = \\delta_{jy},\\,\\ , \\forall y \\in [ n ] \\\\                                                          &        &    \\qquad\\qquad\\qquad\\quad z_{i}^{j}\\delta_{jy}=z_{i}^{y}=1_{i}\\ } \\\\                                                          & = & { \\mathop{\\mathsf{perm}}\\nolimits}(2,n )      \\end{aligned}\\ ] ] the inductive case follows .",
    "@xmath905^{m}\\ , \\tensor*{z}{*^{\\mathbf{j}}_{\\mathbf{i}}^{j_{m+1}}_{i_{m+1 } } } \\cdot \\textstyle\\prod_{m=1}^{m}\\delta_{i_{m}}^{x_{m } } \\in { \\mathop{\\mathsf{perm}}\\nolimits}(2,n ) , \\\\                               &   & \\quad\\quad \\forall x_{m+1 } \\in [ n]\\ , \\tensor*{z}{*^{\\mathbf{j}}_{\\mathbf{i}}^{j_{m+1}}_{i_{m+1}}}\\delta_{i_{m+1}}^{m_{m+1}}1_{j_{m+1 } } \\in { \\mathbf{par}}_{m}(s_{n},s_{n})_{val}\\ } \\\\                                                                                 & = & \\{\\tensor*{z}{*^{\\mathbf{j}}_{\\mathbf{i}}^{j_{m+1}}_{i_{m+1 } } } : \\forall \\mathbf{x } \\in [ n]^{m}\\ , \\tensor*{z}{*^{\\mathbf{j}}_{\\mathbf{i}}^{j_{m+1}}_{i_{m+1}}}\\delta_{\\mathbf{i}}^{\\mathbf{x } } \\in { \\mathop{\\mathsf{perm}}\\nolimits}(2,n ) , \\\\                          &   & \\quad\\quad \\forall x_{m+1 } \\in [ n]\\ , \\tensor*{z}{*^{\\mathbf{j}}_{\\mathbf{i}}^{j_{m+1}}_{i_{m+1}}}\\delta_{i_{m+1}}^{m_{m+1}}1_{j_{m+1 } } \\in      \\{q_{\\mathbf{i}}^{\\mathbf{j } } : \\forall \\mathbf{x } \\in [ n]^{m}\\ , \\forall k \\in [ m ] \\\\           &   & \\quad\\quad\\quad\\quad q_{\\mathbf{j}}^{\\mathbf{i } } \\cdot \\textstyle\\prod_{m \\neq k } ( \\delta_{i_{m}}^{x_{m}}1_{j_{m } } ) \\in { \\mathop{\\mathsf{perm}}\\nolimits}(2,n)\\ }                          \\ } \\\\                                                      & = & \\{\\tensor*{z}{*^{j_{1}}_{i_{1}}^{\\;\\cdots\\;}_{\\;\\cdots}^{j_{m+1}}_{i_{m+1 } } } : \\forall ( x_{1},\\ldots , x_{m+1 } ) \\in [ n]^{m+1}\\ , \\forall k \\in [ m+1 ] \\\\                                                      &                                              &    \\qquad\\qquad\\qquad                                                z_{\\mathbf{j}}^{\\mathbf{i } }                                                \\cdot \\textstyle\\prod_{m                                                \\neq k }                                                ( \\delta_{i_{m}}^{x_{m}}1_{j_{m } } )                                                \\in { \\mathop{\\mathsf{perm}}\\nolimits}(2,n)\\ } \\rlap{\\hbox to 98 pt{\\hfill\\qed } }      \\end{aligned}\\ ] ]    having access to the form of the values of @xmath889 for each value of @xmath157 and @xmath355 makes it simple enough to prove uniqueness for @xmath397 as wished .    [ mixuniquelemma ] every mll@xmath1  transformation in @xmath397 for zero - sum - free @xmath34 models a unique proof structure .",
    "we show that transformations are as desired for the mll@xmath1  functor @xmath893 ; corollary [ allpartomllprop ] forces the result to work for all mll@xmath1  functors . at this point",
    "we notice that @xmath906 utilised primarily in section [ sectionzerotransproof ] is actually @xmath907 , and so is an object in @xmath397 .",
    "we can therefore use lemma  [ onlyonelemma ] to say that the sum of every scalar involved in a linear combination of proof structures modelled in the category totals @xmath151 .",
    "the formula @xmath908 is equal to @xmath909 , meaning only one valid set of axiom links can be placed on its formula , namely the linking containing only one axiom link connecting the only two literals .",
    "since every mll@xmath1  transformation in the category must model a linear combination of proof structures , this means that a transformation to @xmath910 has to model a scalar multiple of this one axiom link , and therefore have a tensor representation @xmath911 for some @xmath912 $ ] .",
    "lemma  [ claimmixobjectproperties ] tells us that @xmath913 for all @xmath351 , which only contains @xmath911 if @xmath914 .",
    "the conclusion of this is that non - identity scalar multiples of the axiom link are not modelled by a transformation in the glued category .",
    "now we consider the more general case of when @xmath915 .",
    "it is possible to follow the argument through for any @xmath916 , so for the sake of simplicity we take @xmath917 .",
    "lemma  [ claimmixobjectproperties ] states that the tensors in @xmath918 are those which create full permutations when any @xmath777 of the @xmath157 @xmath270-@xmath177-index pairs are composed with matrices of the form @xmath919 for each @xmath537 .",
    "this leads to many tensor equations , but due to the symmetry and addition properties noted in section  [ sectiontransextensors ] we may choose to restrict the equations somewhat without loss of generality .",
    "we only consider equations for which each @xmath920 composing with the value tensors are such that @xmath921 .",
    "this leaves @xmath157 simultaneous equations to be solved over the semiring @xmath65 $ ] : for each @xmath922 $ ] there must be a vector of values @xmath923^{m}$ ] such that @xmath924 again simplifying using the ideas from section  [ sectiontransextensors ] , we can look solely at the entries where the one remaining @xmath270-indexed position , the @xmath331 position , also considered at  @xmath186 .",
    "this means that the only entries of @xmath466 which are now of interest are of the form @xmath925 , where each @xmath926 \\longrightarrow [ m]$ ] is a permutation and @xmath927 a corresponding scalar .",
    "entries where the @xmath177-indices do not form a permutation of @xmath928 $ ] are therefore always zero .",
    "for some set of @xmath923^{m}$ ] , @xmath929 this leads to @xmath930 linear equations of consequence , all bar @xmath157 of which being sums which have to equal @xmath149 . in the context of a zero - sum - free semiring , as @xmath65 $ ]",
    "is from our original assumption , each of the values in the sums of these @xmath931 equations must equal @xmath149 .",
    "let @xmath932 \\longrightarrow [ m]$ ] be the function which describes the vector @xmath933 , i.e. for every @xmath186 , @xmath934 .",
    "focusing on an arbitrary @xmath186 , we find that @xmath935 therefore , by zero - sum - freeness , for every permutation @xmath785 whenever @xmath936 , @xmath937    by symmetry , we find that for all @xmath938 , @xmath939 unless @xmath940 for all @xmath941 $ ] , which forces us to conclude that @xmath942 for some @xmath943 $ ] .    by the form of @xmath466 , we already know then that @xmath944 must form a permutation , and that @xmath945 the sum of the scalars must be unity , so @xmath946 ; and so the arrow which @xmath466 describes is an instantiation of an mll@xmath1  transformation which represents a unique proof structure .    the proof above can be elucidated somewhat through the use of an example .",
    "[ mixuniqueexam ] we view the proof of lemma  [ mixuniquelemma ] for the mll@xmath1  formula @xmath947 in more detail .",
    "we assume that @xmath948 is the tensor representation of a linear combination of linkings on the formula modelled by @xmath949 .",
    "lemma  [ claimmixobjectproperties ] is provides us with the three tensor equations which must be satisfied for some numbers @xmath950 , @xmath951 and @xmath952 found in @xmath953 .",
    "@xmath954    suppose that @xmath955 for each @xmath186 , making each constant distinct from one another and the function @xmath183 proposed in the proof of the earlier lemma a permutation .",
    "this creates @xmath956 equations : @xmath957 since we are in a zero - sum - free compact closed category , we know that all the values in the sums equalling @xmath149 must come to zero themselves .",
    "that means we can conclude from looking at equations ( 2 ) , ( 3 ) , ( 4 ) , ( 6 ) , ( 7 ) and ( 8) that @xmath958 substituting these assignments into the @xmath959 equations leaves the six sums totalling zero as trivial , and equations ( 1 ) , ( 5 ) and ( 9 ) simplify to become @xmath960 note that the choices of @xmath950 , @xmath951 and @xmath952 coincide with the order of the three superscript index numbers of @xmath466 .",
    "this is to be expected , since the @xmath955 makes it necessary for the @xmath331 superscript index position to be @xmath186 in order to for it to be in the equation for which the other @xmath961 @xmath177-indices are changed in are added together and equate to  @xmath151 . as such , the given position is the only one which fits this criteria for all @xmath186 .    due to",
    "@xmath466 being a linear combination of kronecker deltas representing axiom links between positive and negative literals , the only mll@xmath1  transformation which can be said to satisfy the criteria given here is the one modelling the unique proof structure given below .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath412 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath413 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath413 ;    \\(1 ) edge [ skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 3 ) edge [ skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 5 ) edge [ skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ;    symmetry in permutations allows us to ascertain that all the possible linkings are possible by changing the permutation that @xmath183 describes to each of the other @xmath962 , but no non - simple linear combinations have been shown to be possible .    now , we choose values of @xmath963 so that the induced function @xmath183 is not a permutation .",
    "let us first consider @xmath964 for all @xmath186 ; these induce the following linear equations : @xmath965 earlier it is explained why the only position of @xmath966 that can be non - zero is the one where @xmath967 . bearing this in mind , we can expect no valuations of the entries of interest satisfy the above equations . hypothetically , only @xmath968 would be allowed to be non - zero ; but by the constraints set upon it it is @xmath149 by definition . by similar arguments , no tensor representation of an mll@xmath1",
    "transformation @xmath466 satisfies the equations when two or more of @xmath963 are equal .    for a tensor representation of an mll@xmath1  transformation to be in the values",
    ", it must satisfy the @xmath959 equations for at least one of the combinations of values @xmath950 , @xmath951 and @xmath952 can take . from the evidence above",
    "we know that such an @xmath969 can only do that if only one tuple @xmath970 provides a non - zero value for @xmath966 , and that position must equal zero .",
    "the only conclusion is , therefore , that @xmath971 for some permutation @xmath785 over @xmath572 .",
    "that is , no non - simple linear combinations of proof structures are modelled by a tensor in @xmath972 .",
    "now that is has been established that @xmath397 only contains mll@xmath1  transformations modelling unique proof structures , we can now attempt to show that those proof structures modelled are also acyclic . once this has been shown , we will have proved mll@xmath1+mix  full completeness : the connectedness condition of the danos - regnier criteria is rendered redundant once the ` mix ' rule has been installed in the logic .",
    "simplifying the problem down to dealing solely with the mll@xmath1  transformations @xmath893 for different values of @xmath157 is not an option here . if we wish to prove that a cyclic structure can not be modelled in the glued category , we need to make sure that any natural transformations do not create a transformation modelling an acyclic structure . as such",
    ", at least one of the @xmath64-vertices must be preserved .",
    "however , ignoring the existence of @xmath883 would be a waste of the available attributes of the category .    the methods utilised in section [ sectiongcfc ] to allow us to only consider the easier - to - handle mdnf  transformations are once again of use here .",
    "there is an algorithm given below which takes mdnf  transformations modelling unique cyclic proof structures and produces other mdnf  transformations modelling a formula containing the minimum number of @xmath64-vertices possible whilst preserving exactly one cycle .",
    "[ mixcyclealg ] input : an mdnf  transformation @xmath775 describing a unique proof structure , with @xmath157 blocks say , breaking the acyclicity criterion . + output : an mdnf  transformation @xmath973 built by composing @xmath43 with natural transformations which describes a unique proof structure still breaking the acyclicity criterion with the minimum number of @xmath64-vertices within it",
    ".    1 .   choose a cycle from the proof structure described by @xmath43 passing through the minimum number of axiom links .",
    "we let @xmath825 , @xmath670 , @xmath974 @xmath822 , and we name the cycle @xmath228 ( referring only to the literals ) . for every @xmath355 , @xmath828 is the target functor of @xmath975 2 .",
    "search for the block furthest to the left in the formula modelled with literals within @xmath228 , calling it block @xmath182 .",
    "let @xmath322 be a composition of the associativity and symmetry isomorphisms for the monoidal bifunctor @xmath327 which modifies the block so it takes the form @xmath976 , where @xmath977 and @xmath978 are the positions signifying the literals in @xmath228 and @xmath827 is a tensor product containing the rest of the literals .",
    "define @xmath979 , where @xmath980 is the @xmath437 block .",
    "if @xmath977 and @xmath978 are connected via an axiom link go to step  4 ; otherwise go to step  3 .",
    "increment @xmath269 .",
    "search for the block ( which we name block @xmath981 ) which contains the literal , @xmath982 , connected to literal @xmath983 via an axiom link .",
    "let @xmath322 be a composition of associativity and symmetry isomorphisms which modifies the block so it takes the form @xmath984 , where @xmath985 is the other literal position in the block which is in @xmath228 .",
    "define @xmath986 .",
    "if @xmath985 is connected via an axiom link to @xmath977 then go to step  4 ; otherwise repeat step  3 .",
    "consider block @xmath26 , @xmath987 where @xmath988 and @xmath989 are the functors representing the first and second literal positions .",
    "we set the natural transformation @xmath990 the maximal composition of ` mix ' transformations on an mll@xmath1  functor @xmath35 which eradicates all instances of @xmath64 and replaces them with @xmath7 whilst maintaining the order and bracketing of the inputs of the functor . 1 .",
    "if it does not contain a literal in @xmath228 , then let @xmath991 .",
    "2 .   if it does , then let @xmath992 + if @xmath993 , then increment the number , and repeat step  4 .",
    "otherwise let @xmath994 , increment @xmath355 and go to step  5 .",
    "let @xmath995 be a natural isomorphism built using the associativity and symmetry isomorphisms corresponding to the bifunctor @xmath326 so that all the blocks in the proof structure described by @xmath975 containing only one literal are to the left of all those containing two literals , and the two - literal blocks maintain the same order with respect to each other as found in @xmath975 .",
    "we let @xmath996 , and terminate the algorithm .",
    "the algorithm above certainly terminates ",
    "after all , each step changing an mll@xmath1  transformation can only deal with a finite set of finite blocks . equally , the output dinatural transformation does indeed describe a cyclic proof structure : in every switching there is a cycle @xmath997 , and the @xmath64-vertices in the cycle are the only ones which appear in the structure .",
    "together with algorithms [ mlltomdnfcyclealg ] and [ mdnfalg ] , we can find natural transformations from @xmath34 which continue to exist in @xmath397 which take any mll@xmath1  transformation describing a unique cyclic proof structure in @xmath34 and create another one which models a proof structure with shape much like the proof structure given below .",
    "[ mixcyclefigure ]    [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( 1 ) @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath998 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath412 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath413 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath417 ; ( f ) [ right of=6 ] @xmath9 ; ( 7 ) [ right of = f ] @xmath418 ; ( g ) [ right of=7 ] @xmath7 ; ( 8) [ right of = g ] @xmath998 ; ( h ) [ right of=8 ] @xmath7 ; ( 9 ) [ right of = h ] @xmath417 ; ( i ) [ right of=9 ] @xmath9 ; ( 10 ) [ right of = i ] @xmath418 ;    \\(1 ) edge [ skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 2 ) ; ( 4 ) edge [ skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 6 ) edge [ skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 10 ) ; ( 7 ) edge [ dashed , skip loop = 5 mm , shorten > =3 mm , shorten < =3 mm ] ( 9 ) ;    this is a very regular form of mll@xmath1  formula being modelled .",
    "the formulae can be separated into two distinct parts .",
    "if we instantiate the functor with tuples containing the same self - dual object built over a @xmath34-object @xmath305 for some @xmath351 in every entry , @xmath999 say , we can say the tensor representations of the values and covalues in the resulting object take the form @xmath1000 for the mdnf  functors @xmath1001 and @xmath1002 for some @xmath1003 , @xmath1004 , where @xmath1005    as has been the standard throughout this chapter , a single test object is required for all inputs of the total resulting mll@xmath1  transformation to show that acyclic proof structures are not modelled in @xmath397 .",
    "an object which is sufficient for the task whilst remaining in the confines of @xmath397 is @xmath1006    the values and covalues of objects @xmath1007 , where the @xmath32-dimensional tuple is @xmath1008 and @xmath35 is the target functor of an mdnf  transformation which is an output of algorithm  [ mixcyclealg ] can be found easily by using inductive methods , as seen in the claim below .",
    "[ gammadeltaclaim ] for every @xmath1009 , @xmath1010 , where @xmath1011 similarly , @xmath1012 .",
    "the object @xmath1013 , and so we show that @xmath1014 has the form of @xmath1015 is as seen above , only with @xmath1016 replaced by @xmath355 , starting with @xmath1017 . @xmath1018 the inductive case is proved as follows : @xmath1019    the result is exactly as desired , and so the claim concerning @xmath1020 is solved by corollary .",
    "we now move to demonstrate @xmath1021 takes the form wanted .",
    "we can conclude the following due to the functor @xmath327 being the de morgan dual of the functor @xmath326 : @xmath1022 the final result immediately follows .",
    "proposition  [ mdnfmixtomllprop ] , in collaboration with algorithms  [ mlltomdnfcyclealg ] and [ mixcyclealg ] , means the following statement is true : if we can show that mll@xmath1  transformations in the form seen in the above figure are not capable of existing in @xmath397 , then no cyclic proof structures may be modelled in the category @xmath34 under the orthogonalised glueing .",
    "[ mixacycliclemma ] every mll@xmath1  transformation in @xmath397 modelling a unique proof structure models an acyclic proof structure .    due to the earlier discussion it is only necessary to consider mll@xmath1  transformations of the shape seen in figure  [ mixcyclefigure ] due to algorithms  [ mlltomdnfcyclealg ] and [ mixcyclealg ] and proposition  [ mdnfmixtomllprop ] .",
    "suppose that @xmath1023 be such a functor , with @xmath1024 containing all the one - literal blocks and @xmath1025 all the two - literal blocks .",
    "we use the test object @xmath1026 , meaning that we are able to use the calculations given in lemma  [ gammadeltaclaim ] to find the values of @xmath1027 for some @xmath1028 , @xmath1004 .",
    "suppose that @xmath1024 is a functor describing a subformula containing no literals , making @xmath1029 for a positive integer @xmath1030 .",
    "the values of this object are therefore exactly as seen in lemma  [ gammadeltaclaim ] . to simplify matters , instead of making @xmath270- and @xmath177-indices correspond to positive and negative literal positions respectively as earlier",
    ", the indices @xmath1031 and @xmath1032 now relate to the first and second literals in the @xmath437 block in @xmath1033 for all @xmath1034 $ ] .",
    "we can therefore assume that the proof structure being discussed , which we say has linking @xmath0 , has tensor representation @xmath1035 .    for @xmath1036 ,",
    "the situation is clear : @xmath1037 , which clearly does not contain @xmath1038 as required for the cyclic proof structure to be modelled . for larger @xmath1030",
    ", we need to use covalues from @xmath1039 .",
    "@xmath1040 for every block @xmath1041 $ ] , we use @xmath1042 , which indeed does belong to the set of covalues .",
    "we find that @xmath1043 the tensor @xmath1044 does not equal @xmath1045 , and so it does not belong to the set of values for @xmath1039 . as such , @xmath615",
    "does not satisfy the criteria expected of all elements of the set of values for the object @xmath1046 .",
    "because of this , the mdnf  transformation to @xmath35 does not lift to @xmath397 .",
    "we extend this result so that it works for an non - empty @xmath1024 . in this scenario",
    "we expect @xmath1007 for positive @xmath243 and @xmath1030 , and by standard tensor calculations we note that , when @xmath1047 and @xmath1048 act as superindices for the positive and negative literals respectively , @xmath1049    lemma  [ gammadeltaclaim ] tells us that there is only covalue for @xmath1050 , namely @xmath1051 .",
    "the tensor representation of the transformation is @xmath1052 composing the two tensors presented above together , we find @xmath1053    we know from the base case when @xmath1054 that the tensor to which the composition reduces is not found in the set of values for @xmath1046 , irrespective of the size of @xmath1030 .",
    "we therefore conclude that @xmath615 is not found in the values of @xmath1055 ; and so its corresponding mdnf  transformation from @xmath34 does not lift into @xmath397 .",
    "[ mixfcomp ] let @xmath34 be a zero - sum - free compact closed category with finite biproducts satisfying feeble full completeness .",
    "then the category @xmath397 satisfies mll@xmath1+mix  full completeness .",
    "the satisfaction of full completeness for the logic mll@xmath1+mix  by degenerate categorical models under the orthogonalised glueing construction with focus @xmath875 is quite a strong result , but the form of the scalars required for the proof to operate is an unfortunate stumbling block .",
    "the proof given earlier in this section is designed to show that a compact closed category with finite biproducts satisfying feeble full completeness creates a full complete model of mll@xmath1+mix  when the ` @xmath1056'-glueing is used if the homset @xmath65 $ ] acts as a zero - sum - free semiring .",
    "we now make clear the insurmountable hurdle which stops tan s method from being further generalised .",
    "lemma  [ mixuniquelemma ] is insufficient for compact closed categories enriched over semimodules over semirings containing even a single additive inverse .",
    "this is confirmed by the algorithm below .",
    "we view the limitations of the proof of lemma  [ mixuniquelemma ] by viewing the mll@xmath1  formula @xmath947 in more detail .",
    "suppose that @xmath1057 , and let @xmath0 be the linear combination of the following sets of axiom links .",
    "[ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( z2 ) [ right of = z1 ] ; ( 1 ) [ right of = z2 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath412 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath413 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath413 ; ( t1 ) [ above of= z1 ] @xmath318 ; ( t2 ) [ above of= t1 ] @xmath318 ; ( t3 ) [ above of= t2 ] @xmath424 ; ( s1 ) [ below of= z1 ] @xmath318 ; ( s2 ) [ below of= s1 ] @xmath151 ; ( s3 ) [ below of= s2 ] @xmath151 ; ( t1 ) [ above of= z2 ] @xmath317 ; ( t2 ) [ above of= t1 ] @xmath317 ; ( t3 ) [ above of= t2 ] @xmath317 ; ( s1 ) [ below of= z2 ] @xmath317 ; ( s2 ) [ below of= s1 ] @xmath317 ; ( s3 ) [ below of= s2 ] @xmath317 ;    \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 3 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 4 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 5 ) ; ( 1 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 2 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 1 ) edge [ magenta , skip loop = -7 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 2 ) edge [ magenta , skip loop = -6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 5 ) edge [ magenta , skip loop = -5 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 1 ) edge [ orange , skip loop = -12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 3 ) edge [ orange , skip loop = -10mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 5 ) edge [ orange , skip loop = -11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 1 ) edge [ gray , skip loop = -16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 3 ) edge [ gray , skip loop = -15mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 5 ) edge [ gray , skip loop = -15mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ;    letting @xmath1058 and @xmath1059 denoting the symmetric and alternating groups of @xmath355 elements respectively , the tensor representation of the mll@xmath1  transformation is written @xmath1060 where the scalars in the set @xmath1061 are as follows : @xmath1062 note that this means the following essential entries have the following values within them :    * @xmath1063 ; * @xmath1064 ; * @xmath1065 .    we remind ourselves that there are three tensor equations which must be satisfied for some @xmath950 , @xmath951 and @xmath952 found in @xmath953 : @xmath1066 taking the non - trivial situation from example  [ mixuniqueexam ] , where @xmath955 for each @xmath186 , the significant equations may be found .",
    "@xmath1067 it is now seen that these equations are consistent with the entries of @xmath615 from earlier , and so it is deduced that @xmath1068 .",
    "as stated in lemma  [ mixuniquelemma ] , other simultaneous equations using other entry positions in the tensor @xmath615 reduce to linear combinations of those found above using the rules from section  [ sectiontransextensors ] .",
    "furthermore , other choices of @xmath355 for the test object @xmath890 do not provide any more information when it comes to producing equations which contradict the existence of a tensor representation of @xmath615 in the set of values of @xmath1069 .",
    "it follows that the proof , or any obvious minor alterations to it , is unable to be used to disprove that @xmath615 describes a transformation in the double - glued category .",
    "it comes as no surprise that there is more than one solution once negatives are added , especially when the values in the entries are in the genuine ring , once it is realised that there are @xmath643 variables and the maximal linearly independent set of equations has @xmath654 elements .",
    "having fewer linear independent equations than variables within them means that the kernel of the equations has positive dimension , and so a myriad of solutions may be found .",
    "@xmath1070 the problem becomes more apparent for formulae @xmath1071 the larger @xmath355 becomes .",
    "as stated in the proof of lemma  [ mixuniquelemma ] , the number of variable positions uniquely describing an mll@xmath1  transformation s tensor representation is @xmath1072 , whilst the number of equations which may be considered linearly independent from one another even in the absence of negative elements is @xmath1073 ; and clearly @xmath1074 for every @xmath1075 .    of course",
    "this does not prove that non - zero - sum - free compact closed categories are incapable of being the basis of fully complete mll@xmath1+mix  models .",
    "after all , only one test object has been considered ; _ all _ objects in the focused glued category must be shown to still contain the morphisms associated to a rogue mll@xmath1  transformation from @xmath34 to show that it remains a one in the glued category .",
    "fortunately , it is possible to extend the principle from the above example to a result on the level of mll@xmath1  transformations for all the non - zero - sum - free categories .",
    "[ nomllmixfcforbadgiclemma ] let @xmath34 be a compact closed category with finite biproducts satisfying feeble full completeness .",
    "then @xmath397 does not satisfy mll@xmath1+mix  full completeness if @xmath34 is not zero - sum - free .",
    "suppose @xmath34 is such a compact closed category , meaning that there exists at least one arrow @xmath912 $ ] with an additive inverse @xmath1076 .",
    "we assume without loss of generality that we are in a strict compact closed category , suppressing the usage of the isomorphism @xmath1077 .",
    "however , at times when associativity and unit isomorphisms are silently being used are noted for the sake of clarity , either in the equation or as a side comment .",
    "consider the mll@xmath1  transformation @xmath1078 found in @xmath34 modelling the following linear combination of proof structures :    [ auto , node distance=5 mm , skip loop/.style = to path= + + ( 0,#1 ) -| ( ) ] = [ text depth=-5pt , text height=0.5ex ] = [ text depth=-5pt , text height=0.5ex ] ( z1 ) ; ( z2 ) [ right of = z1 ] ; ( 1 ) [ right of = z2 ] @xmath412 ; ( a ) [ right of=1 ] @xmath7 ; ( 2 ) [ right of = a ] @xmath413 ; ( b ) [ right of=2 ] @xmath7 ; ( 3 ) [ right of = b ] @xmath412 ; ( c ) [ right of=3 ] @xmath7 ; ( 4 ) [ right of = c ] @xmath413 ; ( d ) [ right of=4 ] @xmath7 ; ( 5 ) [ right of = d ] @xmath412 ; ( e ) [ right of=5 ] @xmath7 ; ( 6 ) [ right of = e ] @xmath413 ; ( t1 ) [ above of= z1 ] @xmath1079 ; ( t2 ) [ above of= t1 ] @xmath1079 ; ( t3 ) [ above of= t2 , xshift=-3 mm ] @xmath1080 ; ( s1 ) [ below of= z1 ] @xmath1079 ; ( s2 ) [ below of= s1 ] @xmath1081 ; ( s3 ) [ below of= s2 ] @xmath1081 ; ( t1 ) [ above of= z2 ] @xmath317 ; ( t2 ) [ above of= t1 ] @xmath317 ; ( t3 ) [ above of= t2 ] @xmath317 ; ( s1 ) [ below of= z2 ] @xmath317 ; ( s2 ) [ below of= s1 ] @xmath317 ; ( s3 ) [ below of= s2 ] @xmath317 ;    \\(1 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 3 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ; ( 5 ) edge [ red , skip loop = 16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 1 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 3 ) edge [ blue , skip loop = 12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 4 ) edge [ blue , skip loop = 11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 5 ) ; ( 1 ) edge [ green , skip loop = 7 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 2 ) edge [ green , skip loop = 6 mm , shorten > =3 mm , shorten < =3 mm ] ( 5 ) ; ( 3 ) edge [ green , skip loop = 5 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 1 ) edge [ magenta , skip loop = -7 mm , shorten > =3 mm , shorten < =3 mm ] ( 4 ) ; ( 2 ) edge [ magenta , skip loop = -6 mm , shorten > =3 mm , shorten < =3 mm ] ( 3 ) ; ( 5 ) edge [ magenta , skip loop = -5 mm , shorten > =3 mm , shorten < =3 mm ] ( 6 ) ; ( 1 ) edge [ orange , skip loop = -12mm , shorten > = 8 mm , shorten < = 8 mm ] ( 4 ) ; ( 3 ) edge [ orange , skip loop = -10mm , shorten > = 8 mm , shorten < = 8 mm ] ( 6 ) ; ( 5 ) edge [ orange , skip loop = -11mm , shorten > = 8 mm , shorten < = 8 mm ] ( 2 ) ; ( 1 ) edge [ gray , skip loop = -17mm , shorten > = 13 mm , shorten < = 13 mm ] ( 6 ) ; ( 3 ) edge [ gray , skip loop = -16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 2 ) ; ( 5 ) edge [ gray , skip loop = -16mm , shorten > = 13 mm , shorten < = 13 mm ] ( 4 ) ;    up to isomorphism the transformation can be written @xmath1082 where the natural transformation @xmath1083 for given permutation @xmath1084 is the composition of associativity and symmetry natural transformations expected of symmetric monoidal categories containing arrows with source and target in the form below . @xmath1085 for short , we can write @xmath1086 , where @xmath1087    let @xmath1088 be an arbitrary object in @xmath397 , meaning that @xmath1089 for every @xmath1090 and @xmath1091 .",
    "we define the following notation :    * @xmath1092 is the tuple @xmath1093 missing the @xmath272 entry ; * @xmath1094 , where @xmath1095 is the natural composition of the unit isomorphism .",
    "we see that , @xmath1096 : { \\displaystyle{\\forall}}_{k=1}^{3 } u_{k}^ { * } \\in u\\,\\forall x_{k } \\in x,\\ , \\forall l\\,\\,\\left\\langle ( ( \\mathbf{x}^{(l)},\\mathbf{u}^{*})),f\\right\\rangle_{l } \\in u , \\\\      & & \\quad\\quad\\quad\\quad \\left\\langle ( \\mathbf{x},(\\mathbf{u}^{*})^{(l)}),f\\right\\rangle_{l+3 } \\in x^{*}\\}.      \\end{aligned}\\ ] ]    if either @xmath81 or @xmath1097 then it is trivially true that @xmath1098 is in the set of values .",
    "if both sets are non - empty , let @xmath1099 and @xmath1100 be arbitrary , not necessarily distinct morphisms . noting ( and suppressing usage of the isomorphism @xmath118 ) that @xmath1101 and @xmath1102 for all suitable arrows @xmath137 and @xmath537 in @xmath34 due to dinaturality , and that @xmath1103 for any choice of @xmath1104 , the composition @xmath1105 can be found for each permutation @xmath785 .",
    "@xmath1106 by symmetry and a similar argument we also find @xmath1107    finding the compositions @xmath1108 and + @xmath1109 now becomes a simple case of taking the correct linear combination of answers from the above calculations .",
    "@xmath1110 this final sum is a linear combination of the arrows @xmath1111 .",
    "one finds by inspection that the scalars added together in this sum for @xmath1112 for some @xmath186 are @xmath1113 and @xmath1114 , the two scalars for which @xmath1115 .",
    "since @xmath1116 and @xmath1117 are distinct but they share a value in exactly one position in this situation , it must be the case that one is an even permutation ( that is , it belongs to @xmath1118 ) , and one is odd ( and therefore is not a member of @xmath1118 ) .",
    "for the sake of convenience , let the former be the even permutation . if @xmath1119 , then we know that neither of the two permutations are @xmath1120 , and so we deduce that @xmath1121 . if however , @xmath1122 , then one of them does equal @xmath1120 , meaning @xmath1123 .",
    "we therefore conclude that @xmath1124 by a dual argument , we can find that @xmath1125    the arrows @xmath1126 and @xmath1127 are arbitrary throughout the above argument , meaning that any triple of values and covalues of @xmath1128 could be chosen . thus @xmath1129 .",
    "furthermore , we may say that this for any choice of @xmath17 , since @xmath17 is considered arbitrary in this proof as well . naturally this means that the @xmath34-arrows in the collection @xmath1130 are found in all the required homsets in @xmath397 , and therefore the mll@xmath1  transformation @xmath615 is also in @xmath397 .",
    "the linear combination of proof structures modelled by this transformation is non - simple , and so the category does not satisfy mll@xmath1+mix  full completeness .",
    "let @xmath34 be a compact closed category with finite biproducts satisfying feeble full completeness .",
    "the category @xmath397 satisfies mll@xmath1+mix  full completeness if and only if @xmath34 is zero - sum - free .",
    "in this paper we show that there are two simple , elegant methods of producing categorical models for both mll@xmath1  or  mll@xmath1+mix .",
    "the hyland - tan double glueing construction is seemingly the perfect semantic description of the deductive system when applied to tensor - generated compact closed categories with finite biproducts .",
    "certainly the danos - regnier description of proof nets has a strongly combinatorial flavour , and this paper shows that the same combinatorial restrictions are imposed on the categorical model by the double glueing construction .",
    "it is notable that the tensor representations of mll@xmath1transformations are precisely the _ isotropic tensors of even power _ over the semiring of scalars .",
    "viewed as vectors in euclidean space , this means that such representations are exactly those which are invariant under basis change .",
    "it is therefore reasonable to suggest that the more combinatorial proofs given in this paper may be replaceable by geometric arguments .",
    "such a methodology could unveil a different perspective on the categorical models and mll@xmath1  itself .    an obvious possibility for future work is applying these techniques to the ( unitless ) multiplicative additive fragment of linear logic , mall@xmath1 .",
    "since we start from compact closed categories with finite biproducts we know that our models , after double glueing , have both finite sums and products  @xcite and so are models of mall@xmath1 .    however , it is known that the hyland - tan construction alone can not produce fully complete models of mall@xmath1  @xcite : none of the resulting categories satisfy joyal s softness property on the dinatural level as is required .",
    "categories which accurately model mall@xmath1  proof nets are in short supply : the only example whose full proof has been published is @xmath1131  the category of hypercoherence spaces under the ` @xmath98'-construction  found in  @xcite .",
    "we note that @xmath1132 is another example of a double - glued category , but with a tight orthogonality upon it .",
    "we are writing an article giving the appropriate generalisation of the definition of orthogonality found in  @xcite in order to allow the essence of this construction to be extracted .",
    "it is hoped that this will provide a starting point for finding a full completeness result for mall@xmath1  which is as general as ours for  mll@xmath1 .",
    "one might note in passing that the result of blute , hamano and scott is based upon the mall@xmath1  proof net criteria of girard  @xcite based around monomial weights , whereas there is currently no comparable result for the hughes - van glabbeek proof net criteria  @xcite .",
    "we hope that our methods are suitable to address that situation .",
    "the authors would like to thank the anonymous reviewers of this paper for their constructive criticism of our originally submitted draft .",
    "thanks also to luke ong and harold simmons , examiners of the thesis from which this article was originally drawn , for their suggestions .",
    "the commutative diagrams were drawn using the diagrams package of paul taylor .",
    "hyland and c .- h.l .",
    "fair games and full completeness for multiplicative linear logic without the mix - rule .",
    "ftp from ftp.comlab.ox.ac.uk as fcomplete.ps.gz in /pub / documents / techpapers / luke.ong , 1993 ."
  ],
  "abstract_text": [
    "<S> the multiplicative fragment of linear logic is the formal system in this family with the best understood proof theory , and the categorical models which best capture this theory are the fully complete ones . </S>",
    "<S> we demonstrate how the hyland - tan double glueing construction produces such categories , either with or without units , when applied to any of a large family of degenerate models . </S>",
    "<S> this process explains as special cases a number of such models from the literature . in order to achieve this result </S>",
    "<S> , we develop a tensor calculus for compact closed categories with finite biproducts . </S>",
    "<S> we show how the combinatorial properties required for a fully complete model are obtained by this glueing construction adding to the structure already available from the original category . </S>"
  ]
}
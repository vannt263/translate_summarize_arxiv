{
  "article_text": [
    "in the same way as sat , the decision problem of propositional logic , is the archetypical problem complete for the complexity class np , qsat , the decision problem of _ quantified boolean formulas ( qbf ) _ , is the archetypical problem complete for the complexity class pspace .",
    "the fact that many important practical reasoning , verification , and synthesis problems fall into the latter complexity class ( cf .",
    "@xcite for an overview ) strongly motivates the quest for efficient qbf solvers .",
    "as the languages of propositional logic and qbf only marginally differ from a syntactical point of view , namely the quantifiers , it is a natural approach to take inspiration from sat solving and lift powerful sat techniques to qsat .",
    "motivated by the success of _ conflict - driven clause learning _ ( cdcl ) in sat solving  @xcite , a generalized version of cdcl called _ conflict / solution - driven clause / cube learning _ ( often abbreviated by qcdcl ) is applied in qsat solving  @xcite . given a propositional formula in conjunctive normal form ( cnf ) , a cdcl - based sat solver enriches the original cnf with clauses  already found and justified conflicts  which force the solver into a different area of the search space until either a model , i.e. , a satisfying variable assignment , is found or until the cnf is proven to be unsatisfiable .",
    "if a qbf in prenex conjunctive normal form ( pcnf ) is unsatisfiable then qcdcl works similar , apart from technical details . in the case of satisfiability , however , it is not sufficient to find one assignment satisfying the formula . to respect the semantics of universal quantification",
    ", qbf models have to be described either by assignment trees or by skolem functions .",
    "hence , a qbf solver may not abort the search if a satisfying assignment is found .",
    "dual to clause learning , a cube ( a conjunction of literals ) is learned and the search is resumed .",
    "qcdcl is implemented in several state - of - the - art qbf    apart from qcdcl , orthogonal approaches to qbf solving have been developed .",
    "qbf competitions like the qbf galleries 2013  @xcite and 2014  @xcite revealed the power of _ expansion - based approaches _",
    "@xcite , which are based on a different proof system than search - based solving with qcdcl .",
    "we refer to related work  @xcite for an overview of qbf proof systems .",
    "qcdcl relies on q - resolution  @xcite .",
    "traditionally , q - resolution calculi offer two kinds of axioms with limited deductive power : ( i ) the _ clause axiom _ stating that any clause in the cnf part of a qbf can be immediately derived and ( ii ) the _ cube axiom _ allowing to derive cubes which are propositional implicants of the cnf . in previous work",
    "@xcite , we generalized the cube axiom such that quantified blocked clause elimination ( qbce )  @xcite , a clause elimination procedure for preprocessing , could be tightly integrated in qcdcl for learning smaller cubes earlier in the search .    to overcome the restrictions of the traditional axioms of q - resolution , we extend previous work  @xcite on the cube axiom and present more powerful clause axioms .",
    "we generalize the traditional clause and cube axioms such that their application relies on checking the satisfiability of the pcnf under the current assignment in qcdcl .",
    "this way , the axioms can be applied earlier in the search .",
    "further , they provide a framework to combine q - resolution with any other ( complete or incomplete ) qbf proof system .",
    "we implemented the generalized axioms in the qcdcl solver depqbf .",
    "as a case study , we integrated bounded expansion and sat - based abstraction  @xcite in qcdcl as incomplete qbf solving techniques to detect potential axiom applications .",
    "experimental results indicate a substantial performance increase , particularly on application benchmarks .",
    "this paper is structured as follows . in sections  [ sec :",
    "prelim ] and  [ sec : qcdcl ] , we introduce preliminaries and recapitulate search - based qbf solving with qcdcl and traditional q - resolution . then we generalize the axioms of q - resolution in section  [ sec : gen : axioms ] allowing for the integration of other proof systems . in section  [ sec :",
    "abs : axiom ] we integrate sat - based abstraction into qcdcl .",
    "implementation and evaluation are discussed in section  [ sec : exp ] .",
    "we conclude with a summary and an outlook to future work in section  [ sec : concl ] .",
    "we introduce the concepts and terminology used in the rest of the paper .",
    "literal _ is a variable @xmath0 or its negation @xmath1 . by @xmath2",
    "we denote the negation of literal @xmath3 and @xmath4 if @xmath5 or @xmath6 . a disjunction , resp .",
    "conjunction , of literals is called _ clause _ , resp .  _",
    "cube_. a propositional formula in _ conjunctive normal form _ ( cnf ) is a conjunction of clauses .",
    "if convenient , we interpret a cnf as a set of clauses , and clauses and cubes as sets of literals .",
    "a qbf in _ prenex conjunctive normal form _ ( pcnf ) has the form @xmath7 with prefix @xmath8 and matrix @xmath9 , where @xmath9 is a propositional cnf over the variables defined in @xmath10 .",
    "the variable sets @xmath11 are pairwise disjoint and for @xmath12 , @xmath13 .",
    "we define @xmath14 .",
    "the quantifier @xmath15 of a literal @xmath3 is @xmath16 if @xmath17 .",
    "if @xmath18 and @xmath19 , then @xmath20 iff @xmath21 . for a clause or cube @xmath22 , @xmath23 and for cnf",
    "@xmath9 , @xmath24 .",
    "an _ assignment _ @xmath25 is a mapping from the variables @xmath26 of a qbf @xmath7 to truth values _ true _ and _ false_. we represent @xmath25 as a set of literals @xmath27 with @xmath28 such that if a variable @xmath0 is assigned _ true _ then @xmath29 and @xmath30 , and",
    "if @xmath0 is assigned _ false _ then @xmath29 and @xmath31 .",
    "further , for any @xmath32 with @xmath33 , @xmath34 .",
    "an assignment @xmath25 is _ partial _ if it does not map every variable in @xmath26 to a truth value , i.e. , @xmath35 .",
    "a qbf @xmath36 _ under assignment _",
    "@xmath25 , written as @xmath37 $ ] , is the qbf obtained from @xmath36 in which for all @xmath38 , all clauses containing @xmath3 are removed , all occurrences of @xmath2 are deleted , and @xmath39 is removed from the prefix . if the matrix of @xmath37 $ ] is empty , then the matrix is satisfied by @xmath25 and @xmath25 is a _ satisfying assignment _ ( written as @xmath37 = { \\textsf{t}\\xspace}$ ] ) .",
    "if the matrix of @xmath37 $ ] contains the empty clause , then the matrix is falsified by @xmath25 and @xmath25 is a _ falsifying assignment _",
    "( written as @xmath37 = { \\textsf{f}\\xspace}$ ] ) . a qbf @xmath7 with @xmath40 ( resp .",
    "@xmath41 ) is satisfiable iff @xmath42 $ ] or ( resp .  and )",
    "@xmath43 $ ] is satisfiable where @xmath44 .",
    "two qbfs @xmath36 and @xmath45 are _ satisfiability - equivalent _ , written as @xmath46 , iff @xmath36 is satisfiable whenever @xmath45 is satisfiable .",
    "two propositional cnfs @xmath9 and @xmath47 are _ logically equivalent _ , written as @xmath48 , iff they have the same set of propositional models , i.e. , satisfying assignments .",
    "two simplification rules preserving satisfiability equivalence are _ unit _ and _ pure literal detection_. if a qbf @xmath36 contains a unit clause @xmath49 , where @xmath50 , then @xmath51 $ ] .",
    "if a literal is pure in qbf @xmath36 , i.e. , @xmath36 contains @xmath3 but not @xmath2 , then @xmath51 $ ] if @xmath50 and @xmath52 $ ] otherwise .",
    "figure  [ fig : qcdcl ] shows an abstract workflow of traditional search - based qbf solving with qcdcl  @xcite . given a pcnf @xmath53 , assignments",
    "@xmath25 are successively generated ( box in top left corner of fig .",
    "[ fig : qcdcl ] ) . in general ,",
    "variables must be assigned in the ordering of the quantifier prefix .",
    "variables may either be assigned tentatively as _ decisions _ or by a qbf - specific variant of _ boolean constraint propagation ( qbcp)_. qbcp consists of unit and pure literal detection .",
    "assignments of variables carried out in qbcp do not have to follow the prefix ordering .",
    "we formalize the assignments generated during a run of qcdcl as follows .",
    "[ def : assign ] given a qbf @xmath54 .",
    "let assignment @xmath55 where @xmath56 are variables assigned as decisions and @xmath57 are variables assigned by unit / pure literal detection .",
    "@xmath25 is a _ qcdcl assignment _ if ( 1 ) for a maximal @xmath58 with @xmath59 it holds that @xmath60 and ( 2 ) all @xmath61 are unit / pure in @xmath62 $ ] after applying qbcp until completion .",
    "qcdcl generates only qcdcl assignments by definition  [ def : assign ] .",
    "assignment generation by decisions and qbcp continues until the current assignment  @xmath25 is either falsifying or satisfying by checking whether @xmath37 = { \\textsf{f}\\xspace}$ ] or @xmath37 = { \\textsf{t}\\xspace}$ ] ( box in top right corner of fig .",
    "[ fig : qcdcl ] ) . in these cases , a new _ learned clause _ or",
    "_ learned cube _ is derived in a _ learning _ phase , which is based on the _ q - resolution calculus_.    [ def_qres_calculus ] let @xmath54 be a pcnf .",
    "the rules of the _ q - resolution calculus ( qres ) _ are as follows .",
    "@xmath63    @xmath64    @xmath65    @xmath66 = \\textnormal{{\\textsf{t}\\xspace}}$ , \\\\ and $ c = ( \\bigwedge_{l \\in a } l)$ is a cube \\end{minipage } \\end{aligned}\\ ] ]    qresis a proof system which underlies qcdcl .",
    "rule  [ rule_cl_init ] is an axiom to derive clauses which are already part of the given pcnf @xmath36 . in practice ,",
    "the clause @xmath22 selected by axiom  [ rule_cl_init ] is falsified under the current qcdcl assignment .",
    "axiom  [ rule_cu_init ] allows to derive cubes based on a qcdcl assignment @xmath25 which satisfies all the clauses of the matrix @xmath9 of @xmath54 ( i.e. , @xmath37 = { \\textsf{t}\\xspace}$ ] ) .",
    "a cube @xmath22 derived by axiom  [ rule_cu_init ] is an _",
    "implicant _ of @xmath9 , i.e. , the implication @xmath67 is valid .",
    "the _ resolution _ and _ reduction _",
    "rules  [ rule_res ] and  [ rule_red ] , respectively , are applied either to clauses or cubes .",
    "rule  [ rule_red ] is called _ universal ( existential ) reduction _ when applied to clauses ( cubes ) .",
    "we write @xmath68 ( @xmath69 ) to denote the clause ( cube ) resulting from universal ( existential ) reduction of clause ( cube ) @xmath22 .",
    "the pcnf @xmath70 is obtained by universal reduction of all clauses in the pcnf @xmath36 .",
    "q - resolution of clauses  @xcite generalizes propositional resolution , which consists of rules  [ rule_cl_init ] and [ rule_res ] , by the reduction rule  [ rule_red ] .",
    "q - resolution of cubes was introduced for _ cube learning _",
    "@xcite , the dual variant of clause learning .",
    "qresis sound and refutationally complete for pcnfs  @xcite .",
    "the empty clause ( cube ) is derivable from a pcnf @xmath36 in qresif and only if @xmath36 is unsatisfiable ( satisfiable ) .",
    "a derivation of the empty clause ( cube ) from @xmath36 is a _ clause ( cube ) resolution proof _ of @xmath36 .    in qcdcl ,",
    "the rules of qresare applied to derive new learned clauses or cubes . a learned clause ( cube )",
    "@xmath22 is added conjunctively ( disjunctively ) to the pcnf @xmath54 to obtain @xmath71 ( @xmath72 ) .",
    "after @xmath22 has been added , certain assignments in the current assignment @xmath25 are retracted during _ backtracking _ , resulting in assignment @xmath56 ( @xmath73 in fig .",
    "[ fig : qcdcl ] ) .",
    "assignment generation based on @xmath56 continues , where learned clauses and cubes participate in qbcp . typically , only _ asserting _ learned clauses and cubes are generated in qcdcl .",
    "a clause ( cube ) @xmath22 is asserting if @xmath68 ( @xmath69 ) is unit under @xmath56 after backtracking .",
    "qcdcl terminates if and only if the empty clause or cube is learned ( @xmath74 in fig .",
    "[ fig : qcdcl ] ) .",
    "[ ex_bad_cube_proof ] given a pcnf @xmath36 with prefix @xmath75 and matrix @xmath9 :    @xmath76    let @xmath77 and @xmath78 be satisfying qcdcl assignments to be used for applications of axiom  [ rule_cu_init ] .",
    "a derivation of the empty cube by rules  [ rule_cu_init ] , [ rule_red ] , [ rule_res ] , and  [ rule_red ] ( from top to bottom ) is shown on the right .",
    "the axioms  [ rule_cl_init ] and  [ rule_cu_init ] of qreshave limited deductive power .",
    "any clause derived by  [ rule_cl_init ] already appears in the matrix @xmath9 of the pcnf @xmath54 .",
    "any cube derived by  [ rule_cu_init ] is an implicant of @xmath9 .    to overcome these limitations , we equip qreswith two additional axioms  one to derive clauses and one to derive cubes  which generalize  [ rule_cl_init ] and  [ rule_cu_init ] . _",
    "generalized model generation ( gmg ) _",
    "@xcite was presented as a new axiom to derive learned cubes .",
    "the combination of qreswith gmg is stronger than qreswith  [ rule_cu_init ] in terms of the sizes of cube resolution proofs it is able to produce . in the following ,",
    "we formulate a generalized clause axiom which we combine with qresin addition to gmg .",
    "thereby , we obtain a variant of qreswhich is stronger than traditional qresalso in terms of sizes of clause resolution proofs .",
    "figure  [ fig : qcdcl : gen : axioms ] shows an abstract workflow of search - based qbf solving with qcdcl relying on qres__with _ _ generalized axioms .",
    "this workflow is the same as in fig .",
    "[ fig : qcdcl ] except for applications of axioms ( box in top right corner ) .",
    "the generalized axioms are applied if the pcnf @xmath37 $ ] under a qcdcl assignment @xmath25 is _",
    "( un)satisfiable_. this is in contrast to the more restricted conditions @xmath37 = { \\textsf{t}\\xspace}$ ] or @xmath37 = { \\textsf{f}\\xspace}$ ] in fig .",
    "[ fig : qcdcl ] .",
    "we show that the generalized axioms allow to combine _ any _ sound ( but maybe incomplete ) qbf solving technique with qcdcl based on qres .",
    "first , we define _ qcdcl clauses _ and recapitulate _",
    "qcdcl cubes _  @xcite .",
    "[ def : assigncube ] given a qbf @xmath54 .",
    "the _ qcdcl clause",
    "_ @xmath22 of qcdcl assignment @xmath25 is defined by @xmath80 .",
    "qcdcl cube _",
    "@xmath22 of qcdcl assignment @xmath25 is defined by @xmath81 .    by definition  [ def : assign ] , a qcdcl clause or cube can not contain complementary literals @xmath0 and @xmath1 of some variable @xmath0 . according to qcdcl assignments ,",
    "we split qcdcl clauses and cubes into decision literals and literals assigned by unit and pure literal detection .",
    "let @xmath22 be a qcdcl clause or qcdcl cube .",
    "then @xmath82 where @xmath83 is the maximal subset of @xmath22 such that @xmath84 and @xmath85 .",
    "the literals in @xmath83 are the first @xmath86 consecutive variables of @xmath10 which are assigned , i.e. , @xmath83 contains all the variables in @xmath22 assigned as decisions",
    ". can also contain literals assigned by pure / unit literal detection , but as they are left to the maximal decision variable in the prefix , we treat them like decision variables . ] the literals in @xmath87 are assigned due to pure and unit literal detection and may occur anywhere in @xmath10 starting from @xmath88 .",
    "further we define @xmath89 and @xmath90 .",
    "we review _ generalized model generation _  @xcite as an axiom to derive cubes .",
    "[ def_generalized_model_gen ] given a pcnf @xmath36 and a qcdcl assignment @xmath25 according to definition  [ def : assign ] .",
    "if @xmath37 $ ] is satisfiable , then the qcdcl cube @xmath81 is obtained by _ generalized model generation_.    [ thm_generalized_model_gen ] given pcnf @xmath54 and a qcdcl cube @xmath22 obtained from @xmath36 by generalized model generation .",
    "then it holds that @xmath91 .",
    "[ cor : cube ] by theorem  [ thm_generalized_model_gen ] , a cube @xmath22 obtained from pcnf @xmath92 by generalized model generation can be used as a learned cube in qcdcl .",
    "dual to generalized model generation , we define _ generalized conflict generation _ to derive clauses which can be added to a pcnf in a satisfiability - preserving way .",
    "[ def_generalized_conflict_gen ] given a pcnf @xmath36 and a qcdcl assignment @xmath25 according to definition  [ def : assign ] .",
    "if @xmath37 $ ] is unsatisfiable , then the qcdcl clause @xmath80 is obtained by _",
    "generalized conflict generation_.    [ thm_generalized_conf_gen ] given pcnf @xmath54 and a qcdcl clause @xmath22 obtained from @xmath36 by generalized conflict generation using qcdcl assignment @xmath25 .",
    "then it holds that @xmath93 .",
    "we argue that if @xmath7 is satisfiable , so is @xmath94 .",
    "the case for unsatisfiability is trivial .",
    "let @xmath82 with @xmath95 and @xmath96 .",
    "further , let @xmath55 such that @xmath97 and @xmath98 . now assume that @xmath7 is satisfiable , but @xmath94 is not . in order to falsify @xmath22",
    ", its subclause @xmath83 has to be falsified , i.e. , the first @xmath86 variables of @xmath10 have to be set according to @xmath56 .",
    "then , due to pure and unit , also @xmath87 is falsified , and therefore , each assignment falsifying @xmath22 has to contain @xmath25 .",
    "but @xmath99 $ ] is unsatisfiable .",
    "since @xmath7 is satisfiable , there have to be other decisions than the decisions of @xmath25 to show its satisfiability , but these also satisfy @xmath94 .",
    "[ cor : clause ] by theorem  [ thm_generalized_conf_gen ] , a clause @xmath22 obtained from pcnf @xmath7 by generalized conflict generation can be used as a learned clause in qcdcl .",
    "based on corollaries  [ cor : cube ] and  [ cor : clause ] , we formulate axioms to derive learned clauses ( cubes ) from qcdcl assignments @xmath25 under which the pcnf @xmath36 is ( un)satisfiable .",
    "[ def_gen_axioms ] let @xmath54 be a pcnf .",
    "the _ generalized clause _ and _ cube axioms _ are as follows .",
    "@xmath100 $ is unsatisfiable , \\\\ and $ c = ( \\bigvee_{l \\in a } \\bar l)$ is a qcdcl clause \\end{minipage } \\end{aligned}\\ ] ]    @xmath101 $ is satisfiable , \\\\ and $ c = ( \\bigwedge_{l \\in a } l)$ is a qcdcl cube \\end{minipage } \\end{aligned}\\ ] ]    the generalized axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] are added to qresin addition to the traditional axioms  [ rule_cl_init ] and  [ rule_cu_init ] from definition  [ def_qres_calculus ] .",
    "[ ex_better_cube_proof ] consider the pcnf from example  [ ex_bad_cube_proof ] .",
    "let @xmath102 be a qcdcl    assignment where @xmath103 and @xmath104 are assigned as decisions .",
    "the pcnf @xmath37 = \\forall u \\exists y. ( u \\vee \\bar y ) \\wedge ( \\bar u \\vee y)$ ] is satisfiable .",
    "we apply [ rule_gen_cu_init ] to derive the cube @xmath105 and finally the empty cube @xmath106 ( proof shown on the right ) .",
    "@xmath79    in contrast to axioms  [ rule_cl_init ] and  [ rule_cu_init ] ( the latter corresponds to _ model generation _",
    "@xcite ) , the generalized axioms allow to derive clauses that are not part of the given pcnf @xmath36 and cubes that are not implicants of the matrix of @xmath36 .",
    "given the empty assignment @xmath107 and a pcnf @xmath36 , the empty clause or cube can be derived using @xmath25 by axioms  [ rule_gen_cl_init ] or  [ rule_gen_cu_init ] right away if @xmath37 $ ] is unsatisfiable or satisfiable , respectively . however , checking the satisfiability of the pcnf @xmath37 $ ] as required in the side conditions of the generalized axioms is pspace - complete .",
    "therefore , _ in practice _ it is necessary to consider non - empty qcdcl assignments @xmath25 and apply either complete approaches in a bounded way , like the successful expansion - based approaches  @xcite , or incomplete polynomial - time procedures , e.g. , as used in preprocessing  @xcite , to check the satisfiability of @xmath37 $ ] . _",
    "sign abstraction _",
    "@xcite can be regarded as a first approach towards more powerful cube learning as formalized by axiom  [ rule_gen_cu_init ] .",
    "axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] provide a formal framework for combining q - resolution in qreswith _ any _ qbf decision procedure @xmath108 by using @xmath108 to check @xmath37 $ ] .",
    "this framework also applies to related combinations of search - based qbf solving with variable elimination  @xcite .",
    "regarding proof complexity , decision procedures like expansion and q - resolution are incomparable as the lengths of proofs they are able to produce for certain pcnfs differ by an exponential factor  @xcite . due to this property , the combination of incomparable procedures in qresvia the generalized axioms allows to benefit from their individual strengths .",
    "for example , the use of expansion to check the satisfiability of @xmath37 $ ] in axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] results in a variant of qreswhich is exponentially stronger than traditional qres . for satisfiable",
    "pcnfs , qbce , originally a preprocessing technique to eliminate redundant clauses in a pcnf , was shown to be effective to solve @xmath37 $ ] for applications of axiom  [ rule_gen_cu_init ]  @xcite , resulting in an exponentially stronger cube proof system .    if a decision procedure @xmath108 is applied as a black box to check @xmath37 $ ] , then qresextended by  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] is not a proof system as defined by cook and reckhow  @xcite because the final proof @xmath109 of @xmath36 can not be checked in polynomial time .",
    "however , @xmath108 can be augmented to return a proof @xmath110 of @xmath37 $ ] for every application of  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] .",
    "such proof @xmath110 may be formulated , e.g. , in the qrat proof system  @xcite .",
    "finally , the proof @xmath109 of @xmath36 contains subproofs @xmath110 , all of which can be checked in polynomial time , like @xmath109 itself ( the size of @xmath109 may blow up exponentially in the worst case depending on the decision procedures that are used to produce the subproofs @xmath110 ) .    the qcdcl framework ( fig .",
    "[ fig : qcdcl : gen : axioms ] ) readily supports applications of the generalized axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] . a clause ( resp .",
    "cube ) @xmath22 derived by these axioms is first reduced by universal ( resp .",
    "existential ) reduction to obtain a reduced clause ( cube ) @xmath111 .",
    "then @xmath83 is used to derive an asserting learned clause ( cube ) _ in the same way _ as in clause learning by traditional qres(definition  [ def_qres_calculus ] ) .",
    "axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] by definition  [ def_gen_axioms ] are based on qcdcl assignments , where decision variables have to be assigned in prefix ordering . to overcome the order restriction",
    ", we introduce a clause axiom which allows to derive clauses based on an abstraction of a pcnf and _ arbitrary _ assignments .",
    "[ def_eabs ] let @xmath54 be a pcnf with prefix @xmath112 and matrix @xmath9 .",
    "the _ existential abstraction _",
    "@xmath113 of @xmath36 has prefix @xmath114 .",
    "[ lem : abs : prop : model : preserving ] let @xmath54 be a pcnf , @xmath115 its existential abstraction , and @xmath25 a partial assignment of the variables in @xmath115 . if @xmath116 $ ] is unsatisfiable then @xmath117 .    obviously , every model @xmath118 of @xmath119 is also a model of @xmath120 . to show the other direction ,",
    "let @xmath118 be a model of @xmath9 , but ( @xmath121 = { \\textsf{f}\\xspace}$ ] . then @xmath122 .",
    "since @xmath116 $ ] is unsatisfiable , also @xmath123 $ ] is unsatisfiable .",
    "then @xmath118 can not be a model of @xmath9 .",
    "[ thm_abs_conf_gen_correctness ] for a pcnf @xmath54 , @xmath115 its existential abstraction , and a partial assignment @xmath25 of the variables in @xmath115 such that @xmath116 $ ] is unsatisfiable , it holds that @xmath124 .    by lemma  [ lem : abs :",
    "prop : model : preserving ] , @xmath120 and @xmath125 have the same sets of propositional models . as argued in the context of sat - based qbf solving  @xcite and qbf preprocessing  @xcite , model - preserving manipulations of the matrix of a pcnf result in a satisfiability - equivalent pcnf .",
    "[ def_abs_conf_gen ] given a pcnf @xmath36 , its existential abstraction @xmath115 and an assignment @xmath25 ( not necessarily being a qcdcl assignment ) .",
    "if @xmath116 $ ] is unsatisfiable , then the clause @xmath80 is obtained by _ abstraction - based conflict generation_.    we formulate a new axiom to derive clauses by abstraction - based conflict generation , which can be used as ordinary learned clauses in qcdcl ( theorem  [ thm_abs_conf_gen_correctness ] ) .    [ def_abs_gen ] for a pcnf @xmath54 and @xmath115 by definition  [ def_eabs ] , the _ abstraction - based clause axiom _ is as follows : @xmath126 $ is unsatisfiable , \\\\ and $ c = ( \\bigvee_{l \\in a } \\bar l)$ is a clause \\end{minipage } \\end{aligned}\\ ] ]    axiom  [ rule_abs_cl_init ] can be added to qresin addition to all the other axioms . in the side condition of axiom  [ rule_abs_cl_init ]",
    ", the propositional cnf @xmath116 $ ] has to be solved , which naturally can be carried out by integrating a sat solver in qcdcl",
    ". sat solving has been applied in the context of qcdcl to derive learned clauses  @xcite and to overcome the ordering of the prefix of a pcnf .",
    "further , many qbf solvers rely on sat solving  @xcite . integrating axiom",
    "[ rule_abs_cl_init ] in qresby definition  [ def_qres_calculus ] results in a variant of qreswhich is exponentially stronger than traditional qres , as illustrated by the following example .",
    "[ ex_hkb ] consider the following family @xmath127 of pcnfs defined by kleine bning et al .",
    "a formula @xmath128 in @xmath127 has the quantifier prefix @xmath129 and a matrix consisting of the following clauses : @xmath130 the size of every clause resolution proof of @xmath128 in traditional qres(definition  [ def_qres_calculus ] ) is exponential in @xmath131  @xcite .",
    "we show that qreswith axiom  [ rule_abs_cl_init ] allows to generate proofs of @xmath128 which are polynomial in @xmath131 . to this end , we apply  [ rule_abs_cl_init ] to derive unit clauses @xmath132 for all existential variables @xmath133 in @xmath128 using assignments @xmath134 , respectively .",
    "since @xmath135 $ ] contains complementary unit clauses @xmath136 and @xmath137 resulting from the clauses @xmath138 and @xmath139 in @xmath128 , the unsatisfiability of @xmath135 $ ] can be determined in polynomial time without invoking a sat  solver .",
    "the derived unit clauses @xmath132 are resolved with clauses @xmath140 and @xmath141 to produce further unit clauses @xmath142 and @xmath143 after universal reduction .",
    "this process continues with @xmath144 and @xmath145 until the empty clause is derived using @xmath146 and @xmath147 .",
    "@xmath79    abstraction - based failed literal detection  @xcite , where certain universal quantifiers of a pcnf are treated as existential ones , implicitly relies on _ qu - resolution_. qu - resolution allows universal variables as pivots in rule  [ rule_res ] and can generate the same proofs of @xmath127 as in example  [ ex_hkb ]  @xcite .",
    "applying axiom  [ rule_abs_cl_init ] for clause learning in qcdcl harnesses the power of sat solving .",
    "furthermore , the combination of qres(definition  [ def_qres_calculus ] ) and  [ rule_abs_cl_init ] polynomially simulates qu - resolution , which has not been applied systematically to learn clauses in qcdcl . like with the axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] , clauses derived by axiom  [ rule_abs_cl_init ]",
    "can readily be used to derive asserting learned clauses in qcdcl .",
    "depqbf is a qcdcl - based qbf solver implementing the q - resolution calculus as in definition  [ def_qres_calculus ] . since version 5.0 , depqbfadditionally applies the generalized cube axiom  [ rule_gen_cu_init ] based on dynamic blocked clause elimination ( qbce )  @xcite .",
    "the case where qbce reduces the pcnf @xmath37 $ ] under the current assignment @xmath25 to the empty formula constitutes a successful application of axiom  [ rule_gen_cu_init ] .",
    "depqbfcomes with a sophisticated analysis of variable dependencies in a pcnf  @xcite to relax their linear prefix ordering . however , we disabled dependency analysis to focus the evaluation on axiom applications . in the following ,",
    "we evaluate the impact of ( combinations of ) the generalized axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] and the abstraction - based clause axiom  [ rule_abs_cl_init ] in practice .      in depqbf , we attempt to apply the generalized axioms after qbcp has saturated in qcdcl , i.e. , before assigning a variable as decision .",
    "we integrated the preprocessor bloqqer  @xcite to detect applications of  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] .",
    "bloqqer implements techniques such as equivalence reasoning , variable elimination , ( variants of ) qbce , and expansion of universal variables .",
    "since these techniques are applied in bounded fashion , bloqqer can be regarded as an incomplete qbf solver .",
    "if the pcnf @xmath37 $ ] is satisfiable ( unsatisfiable ) and bloqqer solves it , then a qcdcl cube ( clause ) is generated by axiom  [ rule_gen_cu_init ] ( [ rule_gen_cl_init ] ) , which is used to derive a learned cube ( clause )",
    ". otherwise , qcdcl proceeds as usual with assigning a decision variable .",
    "bloqqer is explicitly provided with the entire pcnf @xmath37 $ ] before each call . to limit the resulting run time overhead in practice",
    ", bloqqer is called in intervals of @xmath148 decisions , where @xmath149 in our experiments .",
    "further , bloqqer is never called on pcnfs with more than 500,000 original clauses , and it is disabled at run time if the average time spent to complete a call exceeds 0.125 seconds .",
    "to detect applications of the abstraction - based clause axiom  [ rule_abs_cl_init ] , we use the sat solver picosat  @xcite to check the satisfiability of the existential abstraction @xmath116 $ ] of the pcnf @xmath150 under the current qcdcl assignment @xmath25 .",
    "the matrix @xmath9 is imported to picosat once before the entire solving process starts .",
    "for each check of @xmath116 $ ] , the qcdcl assignment @xmath25 is passed to picosat via assumptions , and picosat is called incrementally .",
    "if @xmath116 $ ] is unsatisfiable , then we try to minimize the size of @xmath25 by extracting the set @xmath151 of _ failed assumptions_. failed assumptions are those assumptions that were relevant for the sat solver to determine the unsatisfiability of @xmath116 $ ] .",
    "note that in general @xmath56 is not a qcdcl assignment .",
    "it holds that @xmath152 $ ] is unsatisfiable and hence we derive the clause @xmath153 by axiom  [ rule_abs_cl_init ] .",
    "in addition to bloqqer and dynamic qbce ( which is part of depqbf  5.0  @xcite ) used to detect applications of the generalized cube axiom  [ rule_gen_cu_init ] , we implemented a _ trivial truth _",
    "@xcite test based on the following abstraction .",
    "[ def_univ_lit_abs ] let @xmath54 be a pcnf .",
    "the _ universal literal abstraction _",
    "@xmath154 of @xmath36 is obtained by removing all universal literals from all the clauses in @xmath9 and by removing all universal variables and universal quantifiers from @xmath10 .      by lemma  [ lem_trivial_truth_correctness ]",
    ", we can check the side condition of axiom  [ rule_gen_cu_init ] whether @xmath37 $ ] is satisfiable under a qcdcl assignment @xmath25 by checking whether @xmath156 $ ] is satisfiable . to this end",
    ", we use a second instance of picosat . note that while definition  [ def_univ_lit_abs ] corresponds to trivial truth , the existential abstraction ( definition  [ def_eabs ] ) corresponds to _ trivial falsity _  @xcite . hence by axiom applications",
    ", we apply trivial truth and falsity , which originate from purely search - based qbf solving without learning , to derive clauses and cubes in qcdcl .    like bloqqer",
    ", we call the two instances of picosat to detect applications of  [ rule_abs_cl_init ] and  [ rule_gen_cu_init ] in qcdcl before assigning a decision variable .",
    "picosat is called in intervals of @xmath157 decisions , where @xmath158 .",
    "picosat is never called on pcnfs with more than 500,000 original clauses , and it is disabled at run time if the average time spent to complete a call exceeds five seconds .",
    "the integration of bloqqer and sat solving to detect axiom applications results in several variants of depqbf .",
    "we use the letter code `` dq-\\{nq@xmath159b@xmath159a@xmath159 t } '' to label the variants , where `` dq '' represents depqbf5.0 with dynamic qbce used for axiom  [ rule_gen_cu_init ]  @xcite .",
    "variant `` nq '' indicates that dynamic qbce is disabled .",
    "letters , `` b '' , `` a '' , and `` t '' represent the additional application of bloqqer for axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] , sat solving to check the existential abstraction for axiom  [ rule_abs_cl_init ] , and sat solving to carry out the trivial truth test for  [ rule_gen_cu_init ] , respectively ."
  ],
  "abstract_text": [
    "<S> q - resolution is a proof system for quantified boolean formulas ( qbfs ) in prenex conjunctive normal form ( pcnf ) which underlies search - based qbf solvers with clause and cube learning ( qcdcl ) . with the aim to derive and learn stronger clauses and cubes earlier in the search </S>",
    "<S> , we generalize the axioms of the q - resolution calculus resulting in an exponentially more powerful proof system . </S>",
    "<S> the generalized axioms introduce an interface of q - resolution to any other qbf proof system allowing for the direct combination of orthogonal solving techniques . </S>",
    "<S> we implemented a variant of the q - resolution calculus with generalized axioms in the qbf solver depqbf . as two case studies , </S>",
    "<S> we apply integrated sat solving and resource - bounded qbf preprocessing during the search to heuristically detect potential axiom applications . </S>",
    "<S> experiments with application benchmarks indicate a substantial performance improvement . </S>"
  ]
}
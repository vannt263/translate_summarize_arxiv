{
  "article_text": [
    "malware family classification is age old problem that many industrial and academic efforts have tackled  @xcite .",
    "there are two common techniques used for classification , signature based  @xcite and behavior based  @xcite .",
    "signature based classification is based on detecting a family of malware by using a common sequence of bytes that appear in the binary code .",
    "behavior based classification is based on detecting a family of malware based on the artifacts the malware creates during execution .",
    "this paper will discuss a behavior based approach to classification of a single malware family , the zeus banking trojan  @xcite , using several machine learning algorithms .    in this paper , the main malware family that we study is the zeus banking trojan .",
    "the zeus banking trojan is a famous banking trojan that is used by cyber criminals to run a botnet to steal money , credentials , and system resources from the infected victims .",
    "the zeus source code was leaked in 2011 and since than there has been numerous variants that have surfaced  @xcite .",
    "although the variants have new add - on features that are not found in the original zeus banking trojan , they all exhibit very similar behavior .",
    "notable features in the new variants of zeus include bitcoin mining , peer - to - peer command and control infrastructure , and added layers of encryption to the configuration file .",
    "the zeus malware infects the system by writing a copy of itself to the appdata folder using a randomly generated file name .",
    "the stolen data is stored under the same directory , appdata , encrypted  @xcite . when zeus sends the stolen data to the command and control server it deletes the local copy . upon infection",
    ", zeus injects into explorer.exe process and other running system processes to run out of .",
    "zeus runs its main thread out of explorer.exe and communicates to the command and control server through explorer .",
    "new variants using peer-2-peer continue to run out of explorer.exe process but does not make any http request .",
    "the zeus banking trojan hooks several important windows apis to intercept data being sent from the browser and to modify pages seen by the victim .",
    "for example zeus is capable of adding fields in web forms to collect additional information from the victim when visiting banking site .",
    "after zeus infects a system and establishes a connection with the command - and - control server , zeus will download an updated version of the configuration file that tells the bot what sites to target .",
    "the configuration file use to be stored in the same appdata directory as the rest of the files .",
    "the recent variants of zeus have changed the storage area and storage method of the configuration to protected from being discovered . we have observed with the new variants of zeus that the configuration file is encrypted and stored in the registry under a random key name .",
    "the configuration file is an important aspect of the zeus banking trojan and can reveal an abundant amount of information about the zeus campaign .",
    "the configuration file can contain a list of backup command - and - control servers , link to an updated version of zeus , list of targeted websites , and list of html and javascript to be injected in the targeted websites .",
    "the configuration file information is important because system administrators can block access to all domains used for backup , targeted entities can be notified about a particular campaign effecting their users , and security researchers can track the infrastructure used by the attackers .",
    "the reason zeus is an important piece of malware is because it is the most prevalent banking trojan in the wild  @xcite .",
    "zeus accounts for most cyber crime targeting banks and small businesses , which calls for further investigation on identifying malware samples that belong to this family and exhibit new unique behaviors that we did not see before . to this end , this work is dedicated to unveiling zeus ; we identify a set of features in a large set of malware samples and use them automatically understand this important family .    to this end ,",
    "the contribution of this paper is as follows .",
    "first , we report on our effort characterizing malware samples by automatically analyzing binary codes in isolated environments using one of our products , named automal , and further discuss a small dataset obtained from this product .",
    "we identify a set of features that are representative to families of malware , including zeus .",
    "second , we use these features to automatically classify the different malware samples into families , using various machine learning algorithms , and report on both the efficiency and accuracy of the classification .",
    "the organization of the paper is as follows . in [ sec : prelim ] , we discuss the preliminaries of this study . in [ sec : data ] , we describe the dataset used in the study . in [ sec : experiments ] , we report on the experiments , and highlight the accuracy and error when using different machine learning algorithms , some recommendations and observations . in [ sec : related ] we review some of the related works followed by the future work in [ sec : conclusion ] .",
    "in this study we used five classification algorithms to understand their capability in classifying different families of malware samples . in the following we review these algorithms .    *",
    "* support vector classification : * ( also known as support vector machine ; svm ) is a supervised deterministic binary classification algorithm that assigns a label to input determining which of two classes of the output it belongs to .",
    "given a training set of samples ( i.e. , examples ) , each of which is marked as belonging to one of two categories , the algorithm builds a model that assigns each of the samples into one category or the other .",
    "the algorithm maps different samples as points in the vector space with a clear boundary between them , then the algorithm maps samples to the space , and associate them with other samples that are closer to them",
    ". the formal description of the algorithm can be found here  @xcite . in the svm algorithm",
    ", we use the l2 regularization ( because of the particular settings of our dataset and the number of features ) and l2 loss  for more details see section  [ sec : experiments ] . * * logistic regression : *  @xcite same as the svm , logistic regression allows us to predict an outcome , such as label , from a set of variables .",
    "the goal of logistic regression is to correctly predict the category of outcome for individual cases using the best model .",
    "for that , a model is created that includes all predictor features that are useful in predicting the needed label . in our experiments",
    ", we use both l1 regularization and l2 regularization  in this study , we use both to identify the better one for the given dataset size and set of features . *",
    "* classification tree : *  @xcite ( also known as decision trees , or regression trees ) is a model used for predicting the label by mapping observations about the sample to the conclusions about its target value . in the training part",
    ", the samples are used to create a model in which a boundary is created for each label based on the features . in the test part of the algorithm ,",
    "the decision model created earlier is used for identifying which label is associated with the sample based on how it is fitted on the classification tree . *",
    "* k - nearest neighbor *  @xcite is a simple machine learning algorithm used for classifying samples based on the closest training samples to them in the training feature space .",
    "because the algorithm is used for multiple classes , and our end goal is a binary classification of two classes , we limit the size of each cluster ( class ) discovered by the algorithm into the ideal size of each class in the training algorithm ( in such case , we use equal size of samples in the training part ; see details in the experiments ) .    in the rest of this study we rely on an off - the - shelf implementation of the aforementioned algorithms .",
    "we use mlpy  @xcite ( stands for machine learning python ) , which is a python toolkit that implements several machine learning algorithms .",
    "a fundamental part in our contribution in this work is the dataset , the set of features included in the data , the way we obtain the dataset and the features , and the way we use for establishing a baseline for the ground truth by manual classification . in the following , we elaborate on the background of the dataset , the method used for extracting the raw features used for the classification , the method used for establishing a ground truth , and the baseline we use in our experiments , including the testing dataset .      in this section",
    "we recall some of the background we mentioned in section  [ sec : introduction ] about the zeus dataset . for our data",
    "set we used zeus banking trojan .",
    "as we mentioned earlier , the zeus banking trojan is a famous banking trojan that is used by cyber criminals to run a botnet to steal money , credentials , and system resources from the infected victims .",
    "the zeus malware infects the system by writing a copy of itself to the appdata folder using a randomly generated file name .",
    "the stolen data is stored under the same directory encrypted in the appdata directory . in the following ,",
    "we present the method used for extracting features and artifacts that are representative to the malware sample .",
    "the data is a set of 1,980 sample of the zeus banking trojan .",
    "we ran these 1,980 samples through our automated malware analysis system auto - mal .",
    "the system auto - mal is a virtual machine ( vm ) based system that is used to run samples of malware and capture behavior characteristics of that sample .",
    "the system enables us to set a run - time for each sample that long enough to capture enough artifacts about the sample ; in our experiments we set the time into 1 minutes ( upon several trials , we realized that 1 minute is enough for characterizing common samples ) .",
    "the auto - mal system uses several tools for capturing and characterizing networking traffic ( ip address , port numbers , protocol types , and others  for details see table  [ tab : features ] ) .",
    "also , the auto - mal system uses tools , like sluethkit , which is used for file system and registry artifacts . in total , our system captures file system activities , registry activities , and network activities .",
    "the malware activity artifacts are logged to a mysql database .",
    "we call those artifacts as raw features .    from the raw features",
    ", we obtain a feature vector for each malware sample .",
    "most of the features consist of counts and normalized data sizes that are used as features . for sizes , we consider the quartile counts ( e.g. , how many of the specified artifacts have a size that falls into the specified quartile of size generated by that malware sample ; i.e. , for the 1st , 2nd , 3rd , and 4th quartiles in relation with the file , for example , with the largest size ) .",
    "we have 65 features in total most of which are network features , as shown in table  [ tab : features ] .",
    ".features used in classifying malware samples . [ cols=\">,<\",options=\"header \" , ]",
    "there has been plenty of work in the recent literature on the use of machine learning algorithms for classifying malware samples  @xcite .",
    "these works are broadly classified into two categories : signature based and behavior based techniques .",
    "our work belong to the second category of these works , where we used several behavior characteristics as features to classify the zeus malware sample . related to work",
    "are the works in  @xcite . in  @xcite ,",
    "the authors use behavior graphs matching to identify and classify families of malware samples . in  @xcite ,",
    "the authors follow a similar line of thoughts like ours for extracting features , and use svm for classifying samples .",
    "their ground truth relies on anti - virus reported classification which is mostly signature - based , and they do not include manual classification like in our case .",
    "furthermore , the algorithms used for classification include only the svm , which we tried along with other algorithms .",
    "their dataset does not include any zeus samples , and thus does not characterize this important malware family .",
    "the same work is extended in  @xcite .",
    "our work is different from the prior literature in two aspects .",
    "first , we limit our attention to understanding and classifying the zeus malware sample , which is , to the best of our knowledge is not classified before .",
    "second , to that end , our problem is limited in nature ; we only use techniques that are designed for 2-classes classification problems , thus our error rates are smaller than those reported in the literature for multi - class classification .",
    "in this paper , we have presented preliminary results on classifying zeus , a popular malware family , using different machine learning algorithms .",
    "much of the work is to be seen in the near future .",
    "we are currently collecting a larger set of zeus malware to be able to run the algorithms on a larger set .",
    "we are proactivily identifying zeus banking trojans and creating profiles for each new sample that comes in so we have a larger data set .",
    "we are also combing through our historical data to pull out samples that we might have missed and variants that might exhibited similar behavior but not exactly the same .",
    "we would like to run clustering algorithms on our entire data base of malware to break the samples into clusters then apply the memory signatures discussed earlier to label each cluster and identify sub - families within each of the classes .",
    "finally , in the future we would like to combine different classification algorithms with different weights to improve the classifications results ."
  ],
  "abstract_text": [
    "<S> malware family classification is an age old problem that many anti - virus ( av ) companies have tackled . </S>",
    "<S> there are two common techniques used for classification , signature based and behavior based . </S>",
    "<S> signature based classification uses a common sequence of bytes that appears in the binary code to identify and detect a family of malware . </S>",
    "<S> behavior based classification uses artifacts created by malware during execution for identification . in this paper </S>",
    "<S> we report on a unique dataset we obtained from our operations and classified using several machine learning techniques using the behavior - based approach . </S>",
    "<S> our main class of malware we are interested in classifying is the popular zeus malware . for its classification </S>",
    "<S> we identify 65 features that are unique and robust for identifying malware families . </S>",
    "<S> we show that artifacts like file system , registry , and network features can be used to identify distinct malware families with high accuracy  in some cases as high as 95% .    </S>",
    "<S> malware , classification , automatic analysis . </S>"
  ]
}
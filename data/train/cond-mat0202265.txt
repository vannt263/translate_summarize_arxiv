{
  "article_text": [
    "the calculation of coulomb interactions are time consuming due to their long range nature . in principle , each charge @xmath3 at position @xmath4 interacts with all others , leading to a computational effort of @xmath5 already within the central simulation box . for many physical investigations",
    "one wants to simulate bulk properties and therefore introduces periodic boundary conditions to avoid surface effects .",
    "the coulomb energy @xmath6 then has to be computed as a sum over all periodic images , @xmath7 where for simplicity we assume a cubic simulation box of length @xmath8 .",
    "the prime denotes that for @xmath9 the term @xmath10 has to be omitted .",
    "this sum is merely conditionally convergent , meaning that its value depends on the summation order .",
    "normally a spherical limit is used , i.  e. the vectors @xmath11 are added in the order of increasing length . then @xmath6 can be computed for example via the traditional ewald summation method @xcite .",
    "the basic idea of this method is to split the original sum via a simple transformation involving the splitting parameter @xmath12 into two exponentially convergent parts , where the first one is short ranged and evaluated in real space , the other one is long ranged and can be analytically fourier transformed and evaluated in fourier space . for any choice of the ewald parameter @xmath12 and no truncation in the sums the formula yields the exact result . in practice one",
    "cuts off the infinite sums at some finite values and obtains @xmath6 to a user controlled accuracy , which is possible by using error estimates for the cut - offs @xcite .    another way of computing eq .",
    "is via a convergence factor @xmath13 this approach is used in a method due to sperb @xcite called * mmm*.    in refs.@xcite it was shown that eqs .   and differ by a term proportional to the dipole moment for 3d systems .",
    "sperb et al . have developed a factorization approach which yields an @xmath14 algorithm @xcite , comparable in speed to the fft mesh based ewald algorithms@xcite .",
    "an different convergence factor was used by lekner @xcite to efficiently sum up the 3d coulomb sum . but this approach still leads to an @xmath5 algorithm .    for thin polyelectrolytes films , membrane interactions , or generally confined charged systems , one is interested in summations where only 2 dimensions are periodically replicated and the third one ( here always the z - direction ) is of finite thickness @xmath15 ( @xmath16 geometry ) . for this geometry ewald based formulas are only slowly convergent , have mostly @xmath5 scalings and no `` a priori '' error estimates exist @xcite . in ref.@xcite",
    "a comparison was made with respect to speed and accuracy of the three most popular versions , the traditional @xmath17ewald method developed by heyes , barber , and clarke ( hbc ) @xcite , the one due to hautmann - klein ( hk ) @xcite , and the approach attributed to nijboer and de wette ( ndw ) @xcite .",
    "another variant is due to smith @xcite , which combines hbc and ndw , resulting in a good scaling , but still slow convergence . recently",
    "two more ewald - type methods were proposed with different ways of approximating the fourier space sum of the hbc - formula@xcite .",
    "the aim of this paper is to develop a new method , which we call * mmm2d*. a brief description of the key features of this algorithm was already given in ref.@xcite .",
    "* mmm2d * will be using the same ideas leading to * mmm * and is therefore derived from an equation like eq .   using a convergence factor .",
    "we will show that for two dimensional systems this approach yields the same results as the spherical limit , i.  e. @xmath18 . in principle , already the 3d formula developed by lekner @xcite could be used for 2d + h systems .",
    "it employs modified bessel functions , but is only useful for particles separated in the @xmath19direction , and is only calculable pairwise .",
    "sperb @xcite derived a different formula , which is also applicable for particles lying in the same @xmath19plane . a combination of theses two formula has been used recently in md simulations , because it is easy to implement @xcite for small number of particles , but suffers the drawback of being an @xmath5 method , and therefore the system sizes which can be investigated are limited .",
    "moreover these methods use different convergence factors , and up to now no investigations have been performed to see whether both methods lead to the same result as the one obtained by using a spherical limit .    to precisely define the problem we consider systems of @xmath2 particles with charges @xmath20 and pairwise different coordinates @xmath21 , @xmath22 , where @xmath23\\times    \\biggl(-\\frac{\\ly}{2},\\frac{\\ly}{2}\\biggr]\\times\\r\\subset\\r^3\\ ] ] is the simulation box .",
    "furthermore it is assumed that the system is charge neutral , i.  e. @xmath24 .",
    "now let @xmath25 for @xmath26 .",
    "the expressions to be calculated are the interaction energies of particle @xmath27 with all other charges , defined as @xmath28 as usual the prime @xmath29 on the inner sum indicates that the term @xmath30 for @xmath31 is omitted .    in sec .",
    "[ sec : algo ] we will develop the formulas used by * mmm2d * for calculating the energy and the forces . in sec .",
    "[ sec : errors ] we develop error formulas for the energy and force calculations , which can be easily calculated prior to a simulation .",
    "then , in sec .  [ sec : implementation ] we give the details of our implementation , which is based on a factorization approach resulting in an @xmath1 scaling",
    ". in sec .",
    "[ sec : numerics ] we apply our algorithm to several test cases and prove its applicability and efficiency .",
    "we will also demonstrate that it is much faster than the @xmath17ewald method , and is thus a superior alternative to all aforementioned methods .",
    "we will end with some conclusions , and show for the interested reader in the appendix a that for two dimensional systems @xmath18 , i.  e. that the summation using a convergence factor as in eq .",
    "yields exactly the same result as the summation using a spherical limit as the @xmath17ewald method , there is no dipolar correction term needed .",
    "the transformations given here are similar to the transformations used in r. strebel s * mmm * @xcite for three  dimensional periodic systems . the ideas used in the following are similar to the ideas used to develop the formulas for * mmm*. basically , two different formulas are used to calculate the energy and forces . for the interaction between particles that are well separated , a formula that can be calculated in linear time is used . for the interaction between neighboring particles a second formula",
    "this leads to an @xmath32 algorithm .",
    "up to here the same ideas are used for * mmm2d*. but for the three dimensional case some further tricks are used to achieve the scaling of @xmath33 .",
    "these tricks involve the symmetry of the coordinates which is not true for two dimensional systems .",
    "therefore this better scaling can not be carried over to the two dimensional case .",
    "the formulas needed for * mmm2d * are derived in the next subsections in the same way as has been done for * mmm*@xcite .",
    "we first rewrite the sum using a convergence factor : @xmath34 where @xmath35 , @xmath36 and @xmath37 where we abbreviated @xmath38 the fact that the rhs .",
    "is equal to eq . is non  trivial",
    "; see appendix  [ prfconv ] for a proof .",
    "first we concentrate on developing an absolutely and rapidly converging formula for @xmath39 .",
    "then we can easily form the limit @xmath41 and obtain a formula for @xmath42 . for @xmath40 and @xmath43",
    "the sum in @xmath39 is an absolutely convergent sum of schwartz class functions .",
    "therefore for @xmath44 and @xmath45 , we can apply the _ poisson formula _ :",
    "@xmath46 where @xmath47 denotes the fourier transformation .",
    "furthermore we will be using the formulas @xmath48 which are valid for @xmath49 and can be found , for example , in @xcite . @xmath50 is called the modified bessel function of order 0 . for properties of the bessel functions , see @xcite .    setting @xmath51 we obtain after two fourier transformations @xmath52 expanding the term for @xmath53 we find @xmath54 , and obtain our final formula @xmath55    it has a singularity of @xmath56 which is independent of the particle coordinates .",
    "however , once the sum of @xmath39 is taken over all particles , the singularity vanishes via the charge neutrality condition . for the other parts of eq .",
    "taking the limit @xmath41 is trivial .",
    "the resulting formula ( see sec .  [",
    "sec : engexpr ] ) can be evaluated linearly in time , just like the fourier part of the ewald sum .",
    "this will be shown in more detail in section  [ sec : implementation ] .",
    "unfortunately the convergence becomes slower with decreasing @xmath19 and for @xmath57 the sum is not defined .",
    "thus we will need an alternative method for small @xmath19 .      for small particle distances ,",
    "the term for @xmath31 is dominant ( and must be omitted for the interaction of a particle with its own images )",
    ". therefore we leave it out for now and concentrate on a rapidly convergent formula for @xmath60 .",
    "this requires a little more work . for a more detailed derivation see @xcite .",
    "since we omit the @xmath31 term , the area to sum over has a hole . to efficiently treat the sum over this area we split @xmath61 where @xmath62    graphically this can be displayed like that :        we start by calculating @xmath63 . using the same argument as for formula",
    "we obtain @xmath64    while the first sum converges fast , the second one is still singular in @xmath65 and has to be investigated further : @xmath66 where we have used the asymptotic behavior @xmath67 for @xmath68",
    ".    the first sum can now be fourier transformed again : @xmath69    if we set @xmath70 , we obtain @xmath71 where @xmath72 are the bernoulli numbers .",
    "this series expansion is valid only for @xmath73 , which is fulfilled if @xmath74 .",
    "the last equality is found by integration from @xmath75 where the defining series @xmath76 for the bernoulli numbers was used .    using @xmath77 and @xmath78 we obtain @xmath79    it is easy to see that @xmath80 can be replaced by @xmath81 without changing the value of the sum .",
    "this is of advantage for the calculation of the forces by differentiation .    combining everything we obtain @xmath82",
    "now we concentrate on @xmath83 .",
    "it is sufficient to investigate the first of the two sums , because by replacing @xmath84 by @xmath85 the value of the second sum can be obtained .",
    "we start with @xmath86 details about the precise derivation of the equation can again be found in @xcite .",
    "moreover by @xmath87 and @xmath88 we obtain @xmath89    to evaluate the sum @xmath90 , we consider a @xmath91 such that @xmath92 .",
    "then for @xmath93 we have @xmath94 and therefore we can use the binomial series for @xmath95 to obtain @xmath96 where @xmath97 are the polygamma functions . for details on these functions ,",
    "see @xcite .    in summary",
    "we obtain for @xmath98 : @xmath99    combining the formulas for @xmath63 and @xmath98 we obtain , for @xmath100 , @xmath101 and @xmath91 such that @xmath92 , the final formula @xmath102 of course this formula leads to the same singularity in @xmath65 as formula and the charge neutrality argument also holds for any combination of the two formulas as long as the sum is performed over all particles .",
    "now we want to give the full expressions for the energy after taking the limit @xmath41 .    setting @xmath103",
    "we obtain for @xmath40 @xmath104 eq .",
    "will be called the _ far formula _ , since it will be used only for particles that are separated in the @xmath19plane by a fixed minimum distance .",
    "see sec .",
    "[ sec : implementation ] for details of the implementation .    for @xmath74",
    "we have @xmath105 in the same spirit as above this expression will be called the _ near",
    "formula_.    the far formula looks the same as an expression derived by smith @xcite and which is attributed to an approach originally due to nijboer and de wette @xcite .",
    "smith employed a spherical limit instead of a convergence factor , and therefore obtained a totally different singularity .",
    "therefore his formula can be combined with any other formula using a spherical limit for small @xmath19 , for example @xmath0ewald @xcite .",
    "this combination leads then to the algorithm described in detail in ref.@xcite .",
    "compared to this method , our combination has the advantage that the near formula is faster to evaluate than the @xmath0ewald sum and possesses an easy to use error formula that will be derived in the next section .",
    "therefore the * mmm2d * algorithm is faster than the smith algorithm , and in addition possesses full error control .      since the sums in equations rsp .",
    "converge absolutely , the electrostatic force @xmath106 can be derived by simple term - wise differentiation and the force can be calculated as @xmath107 where for @xmath108 is given by @xmath109    for @xmath74 we have @xmath110 where @xmath111 @xmath112 @xmath113 where @xmath114 is the modified bessel function of order one .",
    "for an implementation which is of practical use , error estimates are needed .",
    "since we calculate the energy ( forces ) by summing up pairwise energies @xmath115 ( their differential ) , it is reasonable to derive an upper bound for the error of @xmath6 .",
    "the maximal pairwise error @xmath116 for the energy is induced by the calculation of the formulas and with finite cutoffs .",
    "likewise we can derive an maximal pairwise error @xmath117 for the forces by formulas and , and one can furthermore give an upper bound for the commonly used rms  error of the forces .",
    "we will show later that the error distribution for * mmm2d * is highly non  uniform , and leads typically to an rms  error is much lower than our bound .",
    "thus the rms  error is not the optimal error measure .",
    "furthermore our implementation shows that an increase in precision has little impact on the calculation time of * mmm2d * , quite contrary to mesh based@xcite and other methods@xcite .      for the far formula given by and ,",
    "respectively , we use a radial cutoff .",
    "so the summation is not performed over all @xmath118 , but only for those @xmath119 where @xmath120    by a simple approximation of the sums by integrals it is easy to derive upper bounds .",
    "for the potential @xmath42 we find the estimate @xmath121 this upper bound is _ not _",
    "valid for the forces .",
    "for all three components @xmath122 , @xmath123 and @xmath124 of the forces _ and _ the potential we find the upper bound @xmath125 this value is precise only for @xmath124 .",
    "the other force components and the potential show even a better convergence .",
    "common to both error formulas is the _ exponential decrease _ of the error with @xmath126 .",
    "the near formula given by equations rsp .",
    "contains three sums with different cutoffs .    for the first sum containing bessel functions it is reasonable to sum over all @xmath127 where @xmath128 if @xmath129 , @xmath130 , @xmath131 , the inequality @xmath132 for @xmath133 can be used to derive the upper bound @xmath134 again by an approximation of the sum by an integral .",
    "the gaussian bracket @xmath135 denotes rounding up .",
    "this is an estimate for the absolute error of all force components and the potential .    for the second sum in containing the bernoulli numbers we use the estimate @xmath136 from @xcite to obtain the overall error estimate @xmath137 for the summation of this sum up to @xmath2 .",
    "note that this sum does not contribute to @xmath122 , due to the artificially broken symmetry in the derivation .",
    "the error estimate contains the particle position dependent term @xmath138 . by using a table lookup scheme for @xmath139 one can chose the appropriate cutoff at runtime to speed up the calculation .    for the last sum containing the polygammma functions there is no error estimate necessary .",
    "the terms in this sum drop monotonously with alternating signs and therefore the absolute value of the last added term is an upper bound on the error . so the cutoff is determined at runtime .",
    "in this section we want to describe how the formulas and can be efficiently implemented to achieve the time scaling of @xmath140 .",
    "the simulation box is split into @xmath141 equally sized slices along the @xmath19axis .",
    "we will see later how the parameter @xmath141 should be chosen .",
    "slice @xmath142 contains all particles @xmath27 that fulfill @xmath143 , where @xmath144 and @xmath145 are respectively the minimal and maximal @xmath19coordinates .",
    "furthermore we set @xmath146 and @xmath147 should be an arbitrary enumeration of the particles in slice @xmath142 .",
    "now for all particles in slice @xmath142 the interaction ( potential or force ) with the particles in the slices @xmath148 , @xmath142 and @xmath149 ( if existent ) will be calculated using the near formula rsp . .",
    "for the other slices the far formula rsp . is used . in the following picture the splitting of the calculation for all particles in the black slice",
    "is shown :        for the the near formula to be valid we need @xmath150 for particles @xmath27 and @xmath151 located in adjacent slices .",
    "this gives the constraint @xmath152 therefore @xmath153 should be as large as possible and it might be useful to exchange the @xmath84 and @xmath154axis if @xmath155 . in typical cases",
    "this will not be necessary since @xmath141 is normally chosen large enough to yield a minimal computation time .",
    "the minimal distance of two particles that are treated by the far formula is @xmath156 . with this distance",
    "it is easy to use the error estimate rsp . for the far formula to calculate the cutoff @xmath157 .",
    "essentially we have @xmath158      first the sets @xmath147 are determined .",
    "this can be done in time @xmath159 , as the following algorithm shows :    [ progsort ]    for all particles @xmath151 determine its slice @xmath160 as @xmath161 add @xmath151 to @xmath162 .",
    "the gaussian bracket @xmath163 denotes rounding down .",
    "it is more efficient to reorder the particle list so that the particles of a given slice are stored adjacently , since later many indirect accesses via the sets @xmath147 can be omitted .",
    "the calculation of the far formula consists of summing terms with frequencies @xmath164 in the fourier space .",
    "now we show how the calculation of the contribution to the energies @xmath115 by a fixed frequency @xmath164 can be done such that the computing time is @xmath159 .",
    "the algorithm presented can easily be adapted for the calculation of the sums with only a single fourier frequency and the @xmath165sum .",
    "the calculation of the forces can be done simultaneously with the calculation of the potential using the same expressions .    in the beginning",
    "we concentrate on a single particle @xmath27 located in slice @xmath166 .",
    "the far formula is used to calculate the contributions from all particles in non ",
    "adjacent slices , i.  e. slices @xmath160 where @xmath167 .",
    "first we restrict attention to the particles @xmath151 in slices @xmath168 , that is , to the particles in the set @xmath169 .",
    "the cosine terms are separable via the addition theorem and since @xmath170 for these slices , we have @xmath171    the sum for the @xmath172 is very similar , just the sign of the @xmath173 and @xmath174 is exchanged .",
    "for all particles @xmath151 only the eight terms @xmath175 are needed .",
    "the upper index describes the sign of the exponential term and whether sine or cosine is used for @xmath176 and @xmath177 in the obvious way .",
    "these terms can be used for all expressions on the right hand side of eq . .",
    "moreover it is easy to see from the addition theorem for the sine function that these terms also can be used to calculate the force information up to simple prefactors that depend only on @xmath178 and @xmath179 .",
    "once these terms are calculated for every particle , the rest of the calculation only consists of adding products of these terms @xmath180 with correct prefactors to the potential and the force . while it is easy to find these prefactors from the above formulas , it requires some care to insert the correct signs from the addition theorems into an implementation .",
    "again we present the algorithm in pseudo code :    [ progfar ]    1 .   for all particles @xmath151 calculate @xmath180 .",
    "2 .   for all slices",
    "@xmath181 calculate @xmath182 3 .   for all slices",
    "@xmath183 calculate @xmath184 4 .   for",
    "all particles @xmath27 add the appropriate linear combination of the terms @xmath185 ( left hand terms ) and the terms @xmath186 ( right hand terms ) to @xmath115 and @xmath187 .",
    "remember that a term with upper index @xmath188 is always combined with a term of upper index @xmath189 and vice versa .",
    "there are some tricks to speed up this algorithm .",
    "an easy way is to pre - calculate the sine and cosine terms for several frequencies @xmath178 and @xmath179 .",
    "and now it becomes clear that these loops are more efficient , as mentioned above , when particle data and results are stored consecutively in their respective arrays .",
    "if larger cutoffs @xmath157 are needed , the terms @xmath190 may get large rapidly",
    ". then it might be useful to use the scaled coordinates @xmath191 instead , where @xmath192 is constant for a slice ( e.g. the upper , lower border or the center ) .",
    "then the terms @xmath193 for the slices are calculated as before , the scaling is corrected during the summation for the @xmath194 .",
    "the advantage of this is that the expression @xmath195 is numerically much more stable than @xmath196 .",
    "remember that this algorithm has to be executed for every frequency @xmath164 and also for the single frequency sums and for the @xmath165sum .",
    "the calculation is algorithmically easy : it consists of two nested loops :    [ prognear ]    for every slice @xmath142 let @xmath197 .",
    "then for @xmath198 add the self energy , i.  e. the potential , that it feels from its own copies @xmath199 .",
    "furthermore calculate the potential and the force the particle @xmath200 feels from the particles @xmath201 and the particles @xmath202 .",
    "add these terms to the potential and the force of _ both _ particles , changing the sign of the force for particle @xmath151 .",
    "the self - energy can be calculated by formula .",
    "for @xmath203 it is @xmath204 .",
    "now we want to give some hints for the calculation of the somewhat unusual functions involved . for the bessel functions one can find approximations for example in @xcite .",
    "code using high order chebychev approximations to calculate the bessel functions is freely available , for example from the gnu scientific library  @xcite .",
    "also we need a table of the bernoulli numbers , which is easy to obtain .",
    "but it is more efficient to store the terms @xmath205 the calculation of the sum over the bernoulli numbers can be accelerated by making the cutoff depend on @xmath206 using the error formula .",
    "the polygamma functions needed for the last sum are not calculated directly , instead we will give quickly converging power series for the functions @xmath207 since these functions have a much better convergent series expansion than the polygamma functions .",
    "letting @xmath208 the terms needed in the last sum can be calculated as @xmath209    for the calculation of the power series we need the generalized zeta function or _",
    "hurwitz zeta function _",
    "@xmath210 algorithms to calculate this function can be found in @xcite , but code calculating this function is also freely available , again from the gnu scientific library  @xcite .",
    "again from @xcite we obtain with a little effort the series expansions @xmath211      using the implementation scheme given above , an estimation of the asymptotic computation time can be derived .",
    "we assume that the particles are distributed uniformly in a box .",
    "in other words , we assume that @xmath212 particles are located in every slice .",
    "the program  [ progsort ] has clearly a computation time of @xmath159 .",
    "the program  [ progfar ] is executed for all frequencies @xmath213 , that is @xmath214 times .",
    "the first two steps of the program obviously have a linear computation time , the third step a computation time of order @xmath215 .",
    "the last step is linear again . in total",
    "we obtain a time needed for the program of @xmath216 .",
    "the time for the calculation of the near formula for a single particle pair is assumed to be constant .",
    "this is sensible since at least the time for the sum over the bessel functions is constant and the times for the other two sums are bounded .",
    "therefore the time needed for program  [ prognear ] is @xmath217 .",
    "if we insert @xmath218 from equation , we obtain an asymptotical computation time of @xmath219 for the complete program .",
    "choosing @xmath220 , we obtain a computation time of @xmath221 this gives a total computational time of @xmath140 , which is easily seen to be optimal from equation .",
    "although we know the optimal proportionality of @xmath141 , this parameter has to be tuned to the underlying hardware . but",
    "this can be done by a simple trial and error algorithm at runtime , since the computational error does not depend on @xmath141 .",
    "in this section we give some numerical results from our implementation of the * mmm2d * algorithm .",
    "the computations were performed on a compaq xp1000 with a 667 mhz ev67cpu .",
    "first we want to demonstrate that * mmm2d * reproduces some known results from ref.@xcite .",
    "we also give the consumed computation times for * mmm2d * and for an implementation of the @xmath17ewald method .",
    "we consider the following systems , which are in more detail described in ref.@xcite :    100 particles distributed regularly in a square of length @xmath222 .",
    "the particles have a unit charge value with chessboard  like alternating signs .    the same as above , but one particle elevated by @xmath223 out of the plane .",
    "this system consists of 25 particles in a square and one elevated by @xmath224 out of the plane in the center of the square .",
    "the charges in the plane are again chessboard  like distributed , the full system is charge neutral .",
    "table  [ tabwid ] shows some results for these systems . for the numerical values",
    ", we tuned * mmm2d * for a maximal pairwise error of @xmath225 in the forces by the error formulas given above .",
    "for the timings @xmath226 we used a maximal pairwise error of @xmath227 ( timings for @xmath225 in parentheses ) .",
    "the @xmath17ewald method was tuned for a rms  error of @xmath228 , since for a typical simulation an error of @xmath228 is sufficient .",
    "note that for * mmm2d * the _ actual _ rms  errors were @xmath229 for @xmath230 and @xmath231 for @xmath232 . for system 1 the forces on all particles",
    "are equal in magnitude and the force on an arbitrary particle is given , for systems 2 and 3 the forces on the elevated particle are given .",
    ".force and energy results and computation times for the systems 1 , 2 and 3 [ cols=\"<,^,^,^,^,^,^ \" , ]     [ tabwid ]    in system 1 the @xmath19distance is 0 for every pair of particles , and therefore only the near formula is used . for the systems 2 and 3",
    "only the far formula was used for the interactions with the elevated particle , and the precision for those systems is much better than for the first , as can be inspected in tab .",
    "[ tabwid ] .",
    "this is due to the exponential factor containing the @xmath19distance in the error formulas eqs . and .",
    "this factor leads to a non  uniform error distribution with respect to @xmath19 and forces * mmm2d * to be extremely precise for some particle positions , and therefore the forces of the elevated particles are calculated with likewise precision .",
    "we will show this in more detail in the next part .",
    "the computation times will be discussed later .      for figure  [ picerr ] we used two particles , one located at @xmath233 , the other randomly placed in a cubic box of unit length .",
    "we show the error in the @xmath19force on the fixed particle for a calculation with @xmath234 and a maximal pairwise error of @xmath225 .",
    "force error in dependence of the @xmath19distance of the two - particle system ( compare text ) ]    since the box has a height of 1 and @xmath234 , the slices have a height of @xmath235 and the forces are calculated with the near formula if and only if @xmath236 . in this distance range is the maximum error nearly constant and scatters well below the maximal pairwise error .",
    "the additional structure which is observable in the error distribution is due to the way the different sums in the near formula are truncated depending on @xmath19 in order to reach the prescribed precision .",
    "for @xmath237 the exponential drop of the error predicted by the far error formulas eqs . and",
    "is clearly visible .",
    "this effect can not be seen on the right side for large @xmath19 since the error of the far formula is symmetrical , while the distance where the near formula is used is asymmetrical with respect to the fixed particle .",
    "if the fixed particle would be located at the upper bound of its slice , for example at @xmath238 , the far error would be visible on the right side , but not on the left .",
    "the exponential drop of the far formula error suggests that one could reduce the numbers of added fourier components for more distant slices to reduce the computation time .",
    "however , this would only save a number of operations ( additions and multiplications ) of the order of the number of slices , and the overhead for singling out the slices compensates the gain in time .",
    "in the time scale considerations above , the error estimate for the far formula has a central place .",
    "therefore we want to show that the estimates @xmath239 ( for the forces ) and @xmath240 ( for the energy ) are accurate .",
    "figure  [ picerrform ] shows the error estimates and the maximal errors in dependence of the cutoff @xmath157 .",
    "the system investigated here again consists of two particles , one fixed at @xmath241 , the other one randomly placed in @xmath242\\times[0,1]\\times[0.25,1]$ ] .",
    "it can be seen that both error formulas overestimate slightly the error , but are sufficiently close to the numerical results .",
    "force and the energy for the 2particle system ( compare text ) ]      now we want to investigate the rms  error scaling of * mmm2d * and the computation time for larger systems . the systems investigated consist of @xmath2 particles placed randomly in a cubic simulation box of unit length . half of the particles carry a charge of @xmath243 , half of them a charge of @xmath244 . for the calculations * mmm2d * was tuned to a maximal pairwise error of @xmath227 .",
    "the error distribution is highly non  uniform as we have shown before .",
    "therefore it is more safe to use the error formulas given above to constrain the maximal pairwise error rather than the rms  error , as is done usually .",
    "nevertheless we investigated the actual rms ",
    "error for the uniformly random systems described above .",
    "figure  [ picerrn ] shows the rms ",
    "error for different particle numbers and slice numbers . by the arguments given in sec .",
    "[ subsec:2particle ] , the error drops when more slices are used .     in dependence of the particle numbers @xmath2 for fixed @xmath245    if one assumes a standard deviation of the pairwise error of @xmath246 , and furthermore that the pairwise errors are independent , which is true for random systems , it is easy to see that the rms  error has an expectation value of @xmath247 @xcite , with @xmath248 , which can be seen in figure  [ picerrn ] . thus our rms - error behaves like the ones for the usual ewald methods @xcite .",
    "furthermore we have @xmath249 so that the rms  error can be bounded using our error estimates .",
    "note that again the rms - error is much smaller than the maximal pairwise error ( for 100 particles , @xmath250 instead of @xmath228 ) , although the gain is smaller than for the highly structured systems 1 - 3 .    having laid the theoretical foundations of the time scaling in sec .",
    "[ sec : implementation ] , we want to show that the theoretical scaling can be achieved in a real computation . figure  [ pictn ] shows the optimal computation time depending on the particle number @xmath2 for the systems considered above .",
    "we also give data for different box heights @xmath251 .",
    "the @xmath84 and @xmath154 sides are still fixed to unit length .",
    "the pairwise error in the forces was fixed to @xmath227 , resulting in the better rms - errors given above .",
    "the optimal number of slices @xmath141 depends on @xmath251 .",
    "for example , for @xmath252 we always have @xmath253 and a purely @xmath5 algorithm , as is seen in the figure .",
    "for @xmath254 the optimal slice numbers were @xmath255 for @xmath256 , @xmath234 for @xmath257 and @xmath258 for @xmath259 , and the @xmath1 scaling is achieved .",
    "it can also be seen that * mmm2d * becomes faster with growing @xmath251 , as one expects from the error formula . for comparison",
    "also computation times for the @xmath17ewald method ( at @xmath254 ) and the theoretical scaling curves of @xmath1 and @xmath5 are included .",
    "the computation times show that * mmm2d * is always faster than the hbc method , even for small particle numbers ( although we achieve a much smaller rms  error ) .",
    "this can also be seen in the computation times given in tab.[tabwid ] .",
    "these computation times also demonstrate that increasing the precision does not massively impact the computation time of * mmm2d*. this is due to the exponential error decrease with respect to the cutoff @xmath157 .",
    "since system 1 in this table is purely two dimensional , * mmm2d * only uses the near formula for the calculation .",
    "therefore even our near formula is superior to the @xmath17ewald method .    since * mmm2d * and",
    "the algorithm described by smith @xcite are similar up to the difference that smith uses the @xmath17ewald method instead of our near formula , * mmm2d * is also faster than the algorithm of smith . from the numbers given by widmann @xcite one",
    "can furthermore conclude that * mmm2d * is also faster than the algorithm proposed by hautman and klein@xcite , although we did not test this method explicitly .",
    "* mmm2d * is also similar in speed at our accuracy with respect to the two recent ewald - type algorithms proposed in refs .",
    "however , these two methods also have the drawback that no error estimates exist , and these will also be hard to develop because of the numerical integration involved . furthermore it seems unreasonable that their algorithm gets slower for larger @xmath251 , while * mmm2d * gets faster , and that their algorithm is fastest for the largest tested real - space cutoffs@xcite although they claim that their new fourier - space expression is responsible for the increase in speed . on the basis of their numbers and non - comparable test cases we are unable to draw further conclusions .    .",
    "we developed a new method termed * mmm2d * to accurately calculate the electrostatic energy and forces on charges being distributed in a two dimensional periodic array of finite thickness ( @xmath260 geometry ) .",
    "it has the advantage of requiring only a computational time of @xmath1 instead of a quadratic scaling as previous methods show .",
    "it is based on a convergence factor approach and as such does not require any fine  tuning of any ewald parameters for convergence . moreover , we derived rigorous error bounds and numerically verified them on specific examples .",
    "our method is not only asymptotically faster than all @xmath17ewald methods , but is about four times faster than the hbc method for small numbers of particles , and should also be superior to the method of hautman and klein , and to the new methods of refs .",
    "@xcite at our accuracies .",
    "our energy and force results achieve a maximal pairwise error of @xmath228 with minimal cutoffs , and @xmath261 can easily be achieved without large increase in computational time .",
    "therefore our method is even more superior whenever a high accuracy is needed .",
    "although the presented formulas may look awkward at the beginning , once implemented , the method is easy to use because the cutoffs for the sums can be easily determined at runtime .",
    "only the number of slices @xmath141 must be optimized for speed , but , although not implemented , this parameter could also be determined during execution .",
    "this is in contrast to basically all @xmath17ewald methods , for which the tuning of the various parameters is very crucial and error estimates do not exist .",
    "the numerical code for * mmm2d * in c++ can be requested from the authors .",
    "this code also provides interfaces for use with fortran and c.",
    "we would like to thank j. dejoannis , c. schneider , and the other members of the pep group for helpful comments .",
    "let @xmath262 and for @xmath26 let @xmath25 and @xmath263 .",
    "then it can be shown that for charge neutral systems @xmath264 ( see for example @xcite or @xcite ) .",
    "therefore for sufficient small @xmath65 we have @xmath270 this can be seen by applying equation to the two first terms and equation to the last . by approximating the sums over these terms separately as integrals",
    "it is easy to see that the sum in equation converges uniformly for small @xmath65 and therefore @xmath271                                                r.  strebel , pieces of software for the coulombic @xmath272 body problem , dissertation 13504 , eth zuerich ( 1999 ) .",
    "http://e - collection.ethbib.ethz.ch / show?type = diss&nr=1% 3504[http://e - collection.ethbib.ethz.ch / show?type = diss&nr=1% 3504 ]        a.  arnold , berechnung der elektrostatischen wechselwirkung in 2d + h periodischen systemen , diploma thesis , johannes gutenberg - universitt ( may 2001).http://www.mpip - mainz.mpg.de / www / theory / phd_work / dipl-% arnold.ps.gz[http://www.mpip - mainz.mpg.de / www / theory / phd_work / dipl-% arnold.ps.gz ]"
  ],
  "abstract_text": [
    "<S> we present a new method , in the following called * mmm2d * , to accurately calculate the electrostatic energy and forces on charges being distributed in a two dimensional periodic array of finite thickness . </S>",
    "<S> it is not based on an ewald summation method and as such does not require any fine - tuning of an ewald parameter for convergence . </S>",
    "<S> we transform the coulomb sum via a convergence factor into a series of fast decaying functions which can be easily evaluated . </S>",
    "<S> rigorous error bounds for the energies and the forces are derived and numerically verified . </S>",
    "<S> already for small systems our method is much faster than the traditional @xmath0ewald methods , but for large systems it is clearly superior because its time demand scales like @xmath1 with the number @xmath2 of charges considered . </S>",
    "<S> moreover it shows a rapid convergence , is very precise and easy to handle .    ,    electrostatics , coulomb interactions , alternative to ewald , planar surfaces , slab geometry    73 , 41.20.cv </S>"
  ]
}
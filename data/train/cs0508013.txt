{
  "article_text": [
    "in a binary linear code , a zero neighbor is a codeword whose voronoi region shares a facet with that of the all - zero codeword  @xcite .",
    "the local weight distribution  @xcite ( or local distance profile  @xcite ) of a binary linear code is defined as the weight distribution of zero neighbors in the code .",
    "knowledge of the local weight distribution of a code is valuable for the error performance analysis of the code .",
    "for example , the local weight distribution could give a tighter upper bound on error probability for soft decision decoding over awgn channel than the usual union bound  @xcite .",
    "formulas for local weight distribution are only known for certain classes of codes , hamming codes and second - order reed - muller codes .",
    "although an efficient method to examine zero neighborship of codeword is presented in  @xcite , the computation for obtaining the local weight distribution is a very time - consuming task .",
    "as agrell noted in  @xcite , the automorphism group of the code can help reduce the complexity . using the automorphism group of cyclic codes , i.e. cyclic permutations , mohri et al",
    ". devised a computation algorithm using a method for obtaining the representative codewords with respect to the cyclic permutations .",
    "the algorithm examines the zero neighborship only for the representative codewords . by using the algorithm",
    ", they obtained the local weight distributions of the binary primitive bch codes of length 63  @xcite .",
    "when the automorphism group properly contains cyclic permutations , for example the affine group , an efficient way of finding the representative codewords is unknown .",
    "we proposed an algorithm for computing the local weight distribution of a code using the automorphism group of the set of the all cosets of a subcode in the code  @xcite . using the algorithm",
    ", we obtained the local weight distributions of the @xmath3 extended primitive bch codes for @xmath1 and the @xmath4 third - order reed - muller code  @xcite . for extended primitive bch codes , which is closed under the affine group of permutations , our proposed algorithm has considerably smaller complexity than the algorithm in  @xcite and  @xcite .",
    "however , for cyclic codes , the complexity is not reduced .",
    "then the local weight distributions of the @xmath0 primitive bch codes for @xmath5 were not obtained although those of the corresponding @xmath3 extended primitive bch codes are known . a method for obtaining the local weight distribution of a code from that of its extended code",
    "should be considered .    in this paper ,",
    "a relation between local weight distributions of a binary linear code and its extended code is given .",
    "a more concrete relation is presented for the case that the extended code is transitive invariant and contains only codewords with weight multiples of four .",
    "extended binary primitive bch codes and reed - muller codes are transitive invariant codes .",
    "a relation between local weight distributions of a binary linear code and its even weight subcode is also given . by using the relations , the local weight distributions of the @xmath0 binary primitive bch codes for @xmath6 , the @xmath2 punctured third - order reed - muller code , and their even weight subcodes",
    "are obtained from the local weight distributions of the @xmath3 primitive bch codes for @xmath6 and the @xmath4 third - order reed - muller code .",
    "finally , we give an approach to improve the algorithm proposed in  @xcite .",
    "let @xmath7 be a binary @xmath8 linear code . define a mapping @xmath9 from @xmath10 to @xmath11 as @xmath12 and @xmath13 .",
    "the mapping @xmath9 is naturally extended to one from @xmath14 to @xmath15 .",
    "a zero neighbor of @xmath7 is defined  @xcite as follows :    [ def : zn ] for @xmath16 , define @xmath17 as @xmath18 where @xmath19 .",
    "the codeword @xmath20 is a zero neighbor if and only if @xmath21 where @xmath22(@xmath23 ) is the euclidean distance between @xmath24 and @xmath25 in @xmath15 .",
    "a zero neighbor is also called a minimal codeword in  @xcite .",
    "the following lemma is useful to check whether a given codeword is a zero neighbor or not  @xcite .",
    "[ lem : zn ] @xmath16 is a zero neighbor if and only if there is not @xmath26 @xmath27 such that @xmath28 .",
    "note that @xmath29 is the set of support of @xmath20 , which is the set of positions of nonzero elements in @xmath30 .",
    "the local weight distribution is defined as follows :    [ def : ldp ] let @xmath31 be the number of zero neighbors with weight @xmath32 in @xmath7 .",
    "the local weight distribution of @xmath7 is defined as the @xmath33-tuple @xmath34 .    on the local weight distribution , we have the following lemma  @xcite .",
    "[ lem : condition ] let @xmath35 be the number of codewords with weight @xmath32 in @xmath7 and @xmath36 be the minimum distance of @xmath7 .",
    "@xmath37    when all the weights @xmath32 in a code are confined in @xmath38 and @xmath39 , the local weight distribution can be obtained from the weight distribution straightforwardly .",
    "for example , the local weight distribution of the @xmath40 primitive bch code of length 63 for @xmath41 , of length 127 for @xmath42 , and of length 255 for @xmath43 can be obtained from their weight distributions .",
    "consider a binary linear code @xmath7 of length @xmath44 , its extended code @xmath45 , and its even weight subcode @xmath46 .",
    "for a codeword @xmath16 , let @xmath47 be the hamming weight of @xmath20 and @xmath48 be the corresponding codeword in @xmath45 , that is , @xmath48 is obtained from @xmath20 by adding the over - all parity bit .",
    "we define a _ decomposable _ codeword .    @xmath16 is called _ decomposable _ if @xmath20 can be represented as @xmath49 where @xmath50 and @xmath51 ( see figure  [ fig : deco ] ) .    from lemma  [ lem :",
    "zn ] , @xmath20 is not a zero neighbor if and only if @xmath20 is decomposable . for even weight codewords , we introduce an _ only - odd - decomposable _ codeword and an _ even - decomposable _ codeword .",
    "let @xmath16 be a decomposable codeword with even @xmath47 .",
    "that is , @xmath20 is not a zero neighbor in @xmath7 .",
    "@xmath20 is said to be _ only - odd - decomposable _ , if all the decomposition of @xmath20 is of the form @xmath52 with the odd weight codewords @xmath50 . otherwise , @xmath20 is said to be _ even - decomposable_.    when @xmath20 is even - decomposable , there is a decomposition of @xmath20 , @xmath52 such that both @xmath53 and @xmath54 are even .",
    "the relation between @xmath7 and @xmath45 with respect to zero neighborship is given in the following theorem , which is also summarized in table  [ tb : zn ] .",
    "[ th : ori_ex ]    1 .",
    "for a zero neighbor @xmath20 in @xmath7 , @xmath48 is a zero neighbor in @xmath45 .",
    "2 .   for a codeword @xmath20 which is not a zero neighbor in @xmath7 , the following a ) and b ) hold . 1 .",
    "when @xmath47 is odd , @xmath48 is not a zero neighbor in @xmath45 .",
    "when @xmath47 is even , @xmath48 is a zero neighbor in @xmath45 if and only if @xmath20 is only - odd - decomposable in @xmath7 .",
    "\\1 ) suppose that @xmath48 is not a zero neighbor in @xmath45 .",
    "then @xmath48 is decomposable into @xmath55 , and hence @xmath20 is decomposable into @xmath52 .",
    "this contradicts the indecomposability of @xmath20 .",
    "\\2 ) suppose that @xmath20 is decomposed into @xmath49 .",
    "a ) since @xmath47 is odd , the sum of the parity bits in @xmath56 and @xmath57 is one . also , the parity bit in @xmath48 is one",
    ". then @xmath48 is decomposable into @xmath55 , and @xmath48 is not a zero neighbor in @xmath45 .",
    "b ) since @xmath47 is even , the parity bit in @xmath48 is zero .",
    "( if part ) suppose that @xmath48 is not a zero neighbor in @xmath45 .",
    "then there exists a decomposition @xmath58 . because the parity bit in @xmath48 is zero",
    ", the parity bits in @xmath56 and @xmath57 must be zero .",
    "this implies that @xmath20 is even - decomposable into @xmath52 , and contradicts the assumption that @xmath20 is only - odd - decomposable .",
    "( only if part ) suppose that @xmath20 is even - decomposable .",
    "then there is a decomposition such that the parity bits in both @xmath56 and @xmath57 are zero .",
    "for such the decomposition , @xmath48 is decomposable into @xmath55 , and @xmath48 is not a zero neighbor in @xmath45 ( see figure  [ fig : even_odd_deco ] ) .",
    "-2)-b).,width=321 ]    from 2)-b ) of theorem  [ th : ori_ex ] , there may be codewords that are not zero neighbors in @xmath7 although their extended codewords are zero neighbors in @xmath45 .",
    "such codewords are the only - odd decomposable codewords . for investigating relations of local weight distributions between a code and its extended code , only - odd",
    "decomposable codewords are important .",
    "the following theorem is a direct consequence of theorem  [ th : ori_ex ] .",
    "[ th : ori_ex_equ ] for a code @xmath7 of length @xmath44 , @xmath59 where @xmath60 is the number of only - odd decomposable codewords with weight @xmath61 in @xmath7 .    [ cols=\"^,^,^,^,^,^,^ \" , ]     from theorem  [ th : ori_ex_equ ] , if there is no only - odd decomposable codeword in @xmath7 , the local weight distributions of @xmath45 are obtained from that of @xmath7 .",
    "next , we give a useful sufficient condition under which no only - odd - decomposable codeword exists .",
    "[ th : multi_four ] if all the weights of codewords in @xmath45 are multiples of four , no only - odd - decomposable codeword exists in @xmath7 .",
    "if @xmath16 is an only - odd - decomposable codeword and decomposed into @xmath52 , the weights of @xmath62 and @xmath63 can be represented as @xmath64 and @xmath65 where @xmath66 and @xmath61 are integers . then @xmath67 .",
    "this contradicts the fact that @xmath47 is a multiple of four .",
    "for example , all the weights of codewords in the @xmath3 extended primitive bch code with @xmath68 are multiples of four .",
    "the parameters of reed - muller codes with which all the weights of codewords are multiples of four are given by corollary 13 of chapter 15 in  @xcite . from the corollary , the third - order reed - muller codes of length 128 , 256 , and 512 have only codewords",
    "whose weights are multiples of four .",
    "although the local weight distribution of @xmath45 for these codes can be obtained from that of @xmath7 by using theorem  [ th : ori_ex_equ ] , what we need is a method for obtaining the local weight distribution of @xmath7 from that of @xmath45 .",
    "we need to know the number of zero neighbors with parity bit one . in section  [ sec : rel_tran ] , we will show a method to obtain the number of zero neighbors with parity bit one for a class of transitive invariant codes .",
    "a similar relation to that between @xmath7 and @xmath45 holds between @xmath7 and @xmath46 .",
    "this relation is given in theorem  [ th : ori_even ] without proof ( see table  [ tb : zn ] ) .",
    "[ th : ori_even ]    1 .   for an even weight zero neighbor @xmath20 in @xmath7 ,",
    "@xmath20 is a zero neighbor in @xmath46 .",
    "2 .   for an even weight codeword @xmath20 which is not a zero neighbor in @xmath7 ,",
    "@xmath20 is a zero neighbor in @xmath46 if and only if @xmath20 is only - odd - decomposable in @xmath7 .    from theorem",
    "[ th : ori_even ] , we have theorem  [ th : ori_even_equ ] .    [",
    "th : ori_even_equ ] for a code @xmath7 of length @xmath44 , @xmath69      a transitive invariant code is a code which is invariant under a transitive group of permutations .",
    "a group of permutations is said to be transitive if for any two symbols in a codeword there exists a permutation that interchanges them  @xcite .",
    "the extended primitive bch codes and reed - muller codes are transitive invariant codes . for a transitive invariant @xmath45 , a relation between the ( global ) weight distributions of @xmath7 and @xmath45 is presented in theorem 8.15 in  @xcite .",
    "a similar relation holds for local weight distribution .",
    "[ lem : zn2 ] if @xmath45 is a transitive invariant code of length @xmath70 , the number of zero neighbors with parity bit one is @xmath71 .",
    "this lemma can be proved in a similar way as the proof of theorem 8.15 .",
    "arrange all zero neighbors with weight @xmath32 in a column .",
    "next , interchange the @xmath61-th column and the last column , which is the parity bit column , for all these codewords with the permutation .",
    "all the resulting codewords have weight @xmath32 and must be the same as the original set of codewords .",
    "thus , the number of ones in the @xmath61-th column and that in the last column are the same .",
    "denote this number @xmath72 , which is the same as the number of zero neighbors of weight @xmath32 with parity bit one .",
    "then the total ones in the original set of codewords is @xmath73 , or @xmath74 times the weight @xmath32 .",
    "thus , @xmath75 , and @xmath76 .",
    "it is clear that there are @xmath77 zero neighbors with weight @xmath32 whose parity bit is zero from this lemma .",
    "the following theorem is obtained from theorem  [ th : ori_ex ] and lemma  [ lem : zn2 ] .",
    "[ th : transitive ] if @xmath45 is a transitive invariant code of length @xmath70 , @xmath78 if there is no only - odd - decomposable codeword in a transitive invariant code @xmath7 , the equality of  ( [ eq : transitive_leq ] ) holds .",
    "that is , in this case , we have that @xmath79    therefore , for a transitive invariant code @xmath45 having no only - odd - decomposable codeword in @xmath7 , the local weight distributions of @xmath7 can be obtained from that of @xmath45 by using ( [ eq : transitive_eq ] ) and ( [ eq : transitive_eq2 ] ) in theorem  [ th : transitive ] . after computing the local weight distribution of @xmath7 , that of @xmath46 can be obtained by using theorem  [ th : ori_even_equ ] .",
    "as discussed in the previous section , the local weight distributions of the @xmath0 primitive bch codes for @xmath68 , the punctured third - order reed - muller codes of length 127 , 255 , and 511 , and their even weight subcodes are obtained from those of the corresponding extended codes by using theorems  [ th : ori_even_equ ] and  [ th : transitive ] .",
    "since the local weight distribution for the @xmath80 extended primitive bch code and the third - order reed - muller codes of length 256 and 512 are unknown , only the local weight distributions of the @xmath0 primitive bch codes for @xmath81 , the @xmath2 punctured third - order reed - muller code , and their even weight subcodes are obtained .",
    "these local weight distributions are presented in table  [ tb : lwd_bch ] .",
    "the local weight distributions of the corresponding even weight subcodes are obtained straightforwardly from the distributions given in the table by using theorem  [ th : ori_even_equ ] .",
    "@xmath32 & & & @xmath32 & & & @xmath32 & & & @xmath32 & + 31 & 2,667 & & 31 & 31,115 & & 27 & 40,894 & & 15 & 11,811 + 32 & 8,001 & & 32 & 93,345 & & 28 & 146,050 & & 16 & 82,677 + 35 & 4,572 & & 35 & 2,478,024 & & 31 & 4,853,051 & & 23 & 13,889,736 + 36 & 11,684 & & 36 & 6,332,728 & & 32 & 14,559,153 & & 24 & 60,188,856 + 39 & 640,080 & & 39 & 82,356,960 & & 35 & 310,454,802 & & 27 & 684,345,088 + 40 & 1,408,176 & & 40 & 181,185,312 & & 36 & 793,384,494 & & 28 & 2,444,089,600 + 43 & 12,220,956 & & 43 & 1,554,145,736 & & 39 & 10,538,703,840 & & 31 & 77,893,639,488 + 44 & 23,330,916 & & 44 & 2,967,005,496 & & 40 & 23,185,148,448 & & 32 & 233,680,918,464 + 47 & 132,560,568 & & 47 & 16,837,453,752 & & 43 & 199,123,183,160 & & 35 & 5,097,898,213,632 + 48 & 220,934,280 & & 48 & 28,062,422,920 & & 44 & 380,144,258,760 & & 36 & 13,027,962,101,504 + 51 & 823,921,644 & & 51 & 106,485,735,720 & & 47 & 2,154,195,406,104 & & 39 & 172,489,249,981,440 + 52 & 1,204,193,172 & & 52 & 155,632,998,360 & & 48 & 3,590,325,676,840 & & 40 & 379,476,349,959,168 + 55 & 3,157,059,472 & & 55 & 400,716,792,672 & & 51 & 13,633,106,229,288 & & 43 & 3,259,718,804,643,840 + 56 & 4,059,076,464 & & 56 & 515,207,304,864 & & 52 & 19,925,309,104,344 & & 44 & 6,223,099,536,138,240 + 59 & 7,022,797,740 & & 59 & 905,612,814,120 & & 55 & 51,285,782,220,204 & & 47 & 35,130,035,853,803,520 + 60 & 7,959,170,772 & & 60 & 1,026,361,189,336 & & 56 & 65,938,862,854,548 & & 48 & 58,550,059,756,339,200 + 63 & 9,742,066,368 & & 63 & 1,238,334,929,472 & & 59 & 115,927,157,830,260 & & 51 & 218,602,288,622,075,904 + 64 & 9,742,066,368 & & 64 & 1,238,334,929,472 & & 60 & 131,384,112,207,628 & & 52 & 319,495,652,601,495,552 + 67 & 7,959,170,772 & & 67 & 1,026,345,592,720 & & 63 & 158,486,906,385,472 & & 55 & 766,899,891,905,495,040 + 68 & 7,022,797,740 & & 68 & 905,599,052,400 & & 64 & 158,486,906,385,472 & & 56 & 986,014,146,735,636,480 + 71 & 4,059,071,892 & & 71 & 515,097,101,376 & & 67 & 131,258,388,369,668 & & 59 & 1,306,771,964,441,395,200 + 72 & 3,157,055,916 & & 72 & 400,631,078,848 & & 68 & 115,816,225,032,060 & & 60 & 1,481,008,226,366,914,560 + 75 & 1,204,193,172 & & 75 & 155,191,535,184 & & 71 & 64,917,266,933,304 & & 63 & 258,664,522,171,023,360 + 76 & 823,921,644 & & 76 & 106,183,681,968 & & 72 & 50,491,207,614,792 & & 64 & 258,664,522,171,023,360 + 79 & 217,627,200 & & 79 & 26,980,367,680 & & 75 & 15,345,182,164,032 & + 80 & 130,576,320 & & 80 & 16,188,220,608 & & 76 & 10,499,335,164,864 & + 83 & 23,330,916 & & 83 & 1,617,588,840 & + 84 & 12,220,956 & & 84 & 847,308,440 & + 87 & 1,408,176 & + 88 & 640,080 & +",
    "as mentioned in section  [ sec : intro ] , we have computed the local weight distributions of several extended bch codes and the third - order reed - muller code of length 128 by using our computation algorithm in  @xcite . in the algorithm ,",
    "the time complexity is reduced by reducing the number of codewords whose zero neighborship should be checked .",
    "however , it is still time consuming to compute the local weight distribution of a @xmath8 code with larger @xmath82 and/or larger @xmath44 . in improving the computation algorithm ,",
    "the next target codes include the @xmath83 reed - muller code and the @xmath80 extended bch code .",
    "in this section , we give an approach for improving the algorithm proposed in  @xcite .",
    "first , we briefly review this algorithm . for a binary @xmath8 linear code @xmath7 and its linear subcode with dimension",
    "@xmath84 , let @xmath85 denote the set of cosets of @xmath86 in @xmath7 , that is , @xmath87 . then",
    ", @xmath88    let @xmath89 be a coset in @xmath85 and @xmath90 be the number of zero neighbors of @xmath7 in @xmath89 with weight @xmath32 .",
    "the local weight subdistribution for a coset @xmath91 is the @xmath33-tuple @xmath92 .",
    "then @xmath93    the following theorem gives an invariance property under permutations for cosets .",
    "[ th : inv_coset ] for @xmath94 , the local weight subdistribution for @xmath95 and that for @xmath96 are the same if there exists @xmath97 such that @xmath98 = d_2 $ ] , where @xmath99 is the automorphism group of @xmath7 and @xmath98=\\ { \\pi\\bm{v } : \\bm{v } \\in d_1 \\}$ ] .    in the algorithm in  @xcite , given a subgroup @xmath100 of @xmath99 , cosets in @xmath85 are partitioned into equivalence classes such that two cosets @xmath95 and @xmath96 are in the same class if and only if there is @xmath101 with @xmath98=d_2 $ ] .",
    "then if the local weight subdistributions only for the representative cosets of the classes and the sizes of the classes are obtained , we could obtain the local weight distribution of @xmath7 .",
    "next , we show the approach . to reduce the complexity more , we consider using the invariance property for cosets in computing the local weight subdistributions for the representative cosets .",
    "this means that we consider a coset @xmath102 as the set of cosets of @xmath103 , where @xmath103 is a linear subcode of @xmath86 .    for a coset @xmath102 ,",
    "let @xmath104 denote the set of all cosets of @xmath103 in @xmath105 , that is , @xmath106 .",
    "we also call the weight distribution of zero neighbors in @xmath107 the local weight subdistribution for @xmath108 .",
    "the following theorem gives an invariance property for cosets in @xmath104 .",
    "for @xmath109 , the local weight subdistribution for @xmath110 and that for @xmath111 are the same if there exists @xmath112 such that @xmath113 = e_2 $ ] , where @xmath114 = \\",
    "{ \\pi \\bm{v } \\ , : \\ , \\bm{v } \\in e \\}$ ] .",
    "we consider partitioning @xmath104 into the equivalence classes .",
    "permutations which are used to partition cosets into equivalence classes are presented in the following lemma .",
    "[ lem : coset_equi ] for a coset @xmath115 , @xmath116 \\in ( \\bm{v}+c')/c''\\ { \\rm for \\ any } \\ e \\in ( \\bm{v}+c')/c '' \\ } }   \\nonumber \\\\ & = & \\hspace{-2.5mm}\\ { \\rho : \\rho \\bm{v } \\in \\bm{v}+c ' , \\   \\rho \\in { \\rm aut}(c)\\cap{\\rm aut}(c')\\cap{\\rm aut}(c'')\\}.\\nonumber\\end{aligned}\\ ] ]    in order to partition cosets into equivalence classes , we should use permutations presented in lemma  [ lem : coset_equi ] .",
    "even if @xmath99 , @xmath117 , and @xmath118 are known , we should obtain permutations @xmath119 that satisfy @xmath120 .",
    "let @xmath121 denote the @xmath122-th order reed - muller code of length @xmath123 .",
    "we consider the case of the @xmath83 third - order reed - muller code , denoted by @xmath124 .",
    "the equivalent cosets in @xmath125 are presented in  @xcite , and there are 32 equivalence classes .",
    "we choose @xmath126 as a subcode of @xmath127 .",
    "then the general affine group  @xcite is a subgroup of @xmath128 . for each cosets in @xmath125 ,",
    "the estimated time for computing the local weight subdistribution is about 54 days with the algorithm in  @xcite .",
    "the total estimated time is about 1700 days . to compute the local weight distribution of @xmath124 in practical time",
    ", we should find the permutations @xmath119 that satisfy @xmath129 for each coset @xmath130 in @xmath125 .",
    "if we could find more than 50 such permutations for each cosets , the local weight distribution of @xmath124 may be computable .",
    "in this paper , some relations between local weight distributions of a binary linear code , its extended code , and its even weight subcode are presented .",
    "the local weight distributions of the @xmath0 primitive bch codes for @xmath81 , the @xmath2 punctured third - order reed - muller code , and their even weight subcodes are obtained .",
    "if the local weight distribution of the @xmath80 extended primitive bch code and the @xmath83 third - order reed - muller code are obtained , we can obtain the local weight distributions of the @xmath131 primitive bch code , the @xmath132 punctured third - order reed - muller code , and their even weight subcodes .",
    "k.  yasunaga and t.  fujiwara , `` an algorithm for computing the local weight distribution of binary linear codes closed under a group of permutations , '' _ proc . of isita2004 _ ,",
    "pp.846851 , oct .",
    "m.  mohri , and m.  morii , `` on computing the local distance profile of binary cyclic codes , '' _ proc . of isita2002 _ ,",
    "pp.415418 , oct ."
  ],
  "abstract_text": [
    "<S> relations between the local weight distributions of a binary linear code , its extended code , and its even weight subcode are presented . in particular , for a code of which the extended code is transitive invariant and contains only codewords with weight multiples of four , the local weight distribution can be obtained from that of the extended code . using the relations , the local weight distributions of the @xmath0 primitive bch codes for @xmath1 </S>",
    "<S> , the @xmath2 punctured third - order reed - muller , and their even weight subcodes are obtained from the local weight distribution of the @xmath3 extended primitive bch codes for @xmath1 and the @xmath4 third - order reed - muller code . </S>",
    "<S> we also show an approach to improve an algorithm for computing the local weight distribution proposed before . </S>"
  ]
}
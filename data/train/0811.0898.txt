{
  "article_text": [
    "the gottesman - knill theorem @xcite is a well - known result in quantum information theory which states that a certain class of non - trivial quantum circuits , called `` clifford circuits '' , can be simulated efficiently on a classical computer , and can hence not provide any speed - up w.r.t .",
    "classical computation .",
    "a clifford circuit is any quantum circuit which is composed of hadamard , phase and cnot gates .",
    "the gottesman - knill theorem asserts that each ( uniform family of ) clifford circuit(s ) , when acting on the computational basis state @xmath1 , and when followed by a computational basis measurement , can be simulated efficiently on a classical computer .    while in fact not so hard to prove , this result exhibits some rather remarkable and sometimes puzzling features , not all of which are fully understood .",
    "for example , even though they are efficiently classically simulatable , clifford circuits can generate a high degree of entanglement @xcite ; the highly entangled cluster states @xcite can e.g. be generated by clifford circuits .",
    "this very feature raises doubts about the often - recited mantra that `` entanglement is responsible for the quantum computational speed - up '' .",
    "in particular , it highlights that , while the presence of ( certain types of ) entanglement in a quantum computation ( qc ) is provably necessary to disallow efficient classical simulation ( see e.g. @xcite ) , it is certainly not sufficient .",
    "further , it is known that clifford circuits can efficiently be simulated classically by a rather restricted classical computer , namely a circuit model computer which only uses not and cnot gates @xcite . in other words , it is not necessary to invoke the full power of classical computers to efficiently simulate arbitrary clifford circuits",
    ". hence , clifford circuits are most likely not even universal for _ classical _ computation . in complexity",
    "theoretic terms , the power of classical computation with not and cnot gates  and hence of clifford circuits  is captured by the complexity class @xmath2 ( `` parity - l '' ) @xcite .",
    "this class is known to be contained in @xmath3 but not expected to be equal to it ( although this is an unproven conjecture ) . nevertheless , supplementing clifford operations with essentially any non - clifford gate",
    "immediately yields the full qc model @xcite .",
    "this yields an immediate `` jump '' in computational power from @xmath4 to @xmath5 rather than a `` smooth '' transition @xmath6 .",
    "in particular , this property makes it hard to extend clifford circuits to a class of efficiently simulatable quantum circuits which has the same computational power as full classical computation .",
    "it is the aim of this note to obtain some insight in the above list of features .",
    "first we will show that each clifford circuit @xmath7 can be ( efficiently ) reduced to an equivalent circuit @xmath8 which yields the same output .",
    "the `` normal form '' @xmath8 is also a clifford circuit but has a very simple structure , as displayed in fig .",
    "[ fig : clifford_circuit ] ; this normal form is based on an earlier result @xcite , for which we also provide a simple proof .",
    "we will see that @xmath8 is manifestly efficiently classically simulatable .",
    "we argue that the normal form also sheds some light on why the high degree of entanglement and interference generated by clifford operations does not result in any ( exponential ) quantum computational speed - up .",
    "finally , the normal form shows how the simulation of clifford operations fits within the standard embedding of probabilistic classical computation into the quantum circuit model .",
    "the latter is related to the notion of ht circuits , as discussed in section [ sect_bpp_bqp ] .    along the way",
    ", we will make some general remarks regarding classical simulation of qc .",
    "one of them regards the different possible definitions of the notion of `` classical simulation '' .",
    "when a qc is to be simulated classically , the aim may be to either ( i ) _ compute _ the probabilities of the output measurement efficiently classically with high accuracy ( `` strong simulation '' ) or ( ii ) _ sample _ from this distribution efficiently using a classical computer ( `` weak simulation '' ) .",
    "both variants constitute valid classical simulation techniques ; however , a priori it is not clear whether there is a clear separation between these two notions .",
    "the vast majority of all works ( see e.g. @xcite ) regarding classical simulation of qc considers quantum circuits which can be simulated efficiently classically in the strong sense , whereas not much is known about weak simulation .",
    "we will find that the simulatable quantum circuits considered in the present paper are _ not _ amenable to strong simulation  in fact , it is easy to show that strong simulation of these circuits constitutes a @xmath0-complete problem .",
    "nevertheless , weak classical simulation of the same circuits is efficiently possible by means of a very simple sampling technique .",
    "this shows that strong and weak simulation of qc are fundamentally different notions .",
    "moreover , these examples highlight that any serious attempt to understand the relationship between classical and quantum computation should not rely on the notion of strong simulation .",
    "here we state more precisely what we mean by `` efficient classical simulation of quantum computation '' .",
    "we essentially follow the definitions from @xcite .",
    "consider a uniform family of quantum circuits @xmath9 acting on the @xmath10-qubit input state @xmath11 , and followed by a measurement of , say , the first qubit in the computational basis .",
    "then this quantum computation yields as an outcome a bit @xmath12 .",
    "the probability that the outcome @xmath13 occurs is given by @xmath14{\\cal u}|\\mathbf{0}\\rangle$ ] .",
    "we say that the above quantum computation can be efficiently simulated classically in the _ strong _ sense if it is possible to evaluate @xmath15 up to @xmath16 digits in poly@xmath17 time on a classical computer .",
    "furthermore , we say that the quantum computation can be efficiently simulated classically in the _ weak _ sense if it is possible to sample once from the probability distribution @xmath18 in poly@xmath19 time on a classical computer , but sufficiently close to it ( see e.g. @xcite ) . in the examples in this paper , however , it will always be possibly to perform an exact sampling , such that we omit such accuracy issues for simplicity . ] .",
    "we further point out that to date the vast majority of results on simulation of quantum computation regard _",
    "strong _ classical simulation .",
    "this regards e.g. the gottesman - knill theorem , the simulation of `` matchgates '' @xcite , the simulation of the quantum fourier transform @xcite , simulation results involving tensor contracting techniques @xcite , etc .",
    "however , in order to study the difference between classical and quantum computation , the notion of weak classical simulation is much more appropriate .",
    "in fact , the strong simulation of general quantum circuits can easily be shown to be a @xmath0-hard problem ( this can e.g. been showed by considering the the family of circuits @xmath20 as in section [ sect_bpp_bqp ] ) . as @xmath5 is believed to be much smaller than @xmath0 , this indicates that strong classical simulation inevitably seems too strong a requirement to study the relation between classical and quantum computation .",
    "however , not much is known about the difference between strong and weak simulation of quantum computation . in section [ sect_bpp_bqp ]",
    "we will give an example of a class of quantum circuits which is efficiently simulatable in the weak sense but which is intractable in the strong sense ( unless @xmath3 is equal to @xmath0 ) .",
    "in this section we recall the gottesman - knill theorem and the relation between clifford operations and the complexity class @xmath2 .",
    "( a variant of ) the gottesman - knill theorem can be formulated as follows @xcite :    every ( uniform family of ) clifford circuit(s ) , when applied to the input state @xmath21 and when followed by a @xmath22 measurement of the first qubit , can be efficiently simulated classically in the strong sense .    the standard technique to prove this result involves a connection between clifford operations and groups of commuting pauli operations called `` stabilizer groups '' .",
    "we omit this proof here and refer to e.g. @xcite .",
    "below we will provide an alternative proof of the gottesman - knill theorem which does not use stabilizer techniques .",
    "it turns out that a rather restricted classical computer suffices to efficiently simulate arbitrary clifford circuits .",
    "indeed , every clifford circuit can be efficiently simulated by a classical circuit model computer which uses not and cnot gates only , applied to the input string @xmath23 @xcite .",
    "more precisely , in @xcite the problem gottesman - knill was defined as follows : the input is an @xmath24-qubit clifford circuit @xmath7 ; the problem is to decide whether the first qubit will be in the state @xmath25 with certainty after @xmath7 has been applied to the input @xmath26 .",
    "it was showed in @xcite that this problem can be mapped , under a logarithmic - space reduction , to a problem of simulating a classical poly - size cnot - not circuit acting on the all - zeroes input state .",
    "the complexity class of problems that are log - space reducible to the simulation of cnot - not circuits , is called @xmath2 ( `` parity-@xmath27 '' ) ; the inclusion is believed to be strict , but a proof of this conjecture has not yet been found . ] @xcite .",
    "hence , it was showed in @xcite that gottesman - knill is in @xmath2 . as cnot and",
    "not gates are clifford operations , it is clear that every @xmath2 problem can be reduced to gottesman - knill . in conclusion ,",
    "the problem gottesman - knill is _",
    "@xmath2-complete _ @xcite .",
    "the class of problems in @xmath4 are centered around linear algebra over the finite field @xmath28 .",
    "it has been shown that the problems of solving linear equations over @xmath28 , finding the inverse of a nonsingular @xmath28-matrix , multiplying matrices over @xmath28 etc .",
    ", are @xmath2 problems @xcite .",
    "here we briefly review how classical ( probabilistic ) computation can be regarded as being a `` part '' of quantum computation .",
    "all material in this section is standard ( see e.g. @xcite ) , except for an observation about the difference between strong and weak simulation of quantum computation , which will be made at the end of this section .",
    "probabilistic classical computation is classical computation ( e.g. considered in the circuit model ) supplemented with the possibility of deciding , in each step of the computation , which gate to apply based on the random outcome of a coin toss .",
    "it is well understood how probabilistic classical computation can be embedded in the full pure - state circuit model of quantum computation .",
    "the subclass of quantum circuits that corresponds to probabilistic classical computation is the following : ( round 1 ) apply hadamard gates to an arbitrary subset of qubits ; ( round 2 ) apply a ( uniform family of ) circuit(s ) consisting of classical a `` classical gate '' if it maps computational basis states to computational basis states . ]",
    "gates only ( e.g. not , cnot , toffoli gates ) . a quantum circuit with the above structure will be called an ht circuit ( short for hadamard - toffoli ) ; see also fig [ fig : toffoli_circuit ] . it can easily be shown that every probabilistic classical computation can be accounted for by a suitable ht circuit acting on the all - zeroes input state and followed by a single - qubit @xmath22 measurement ( say , on the first qubit ) .",
    "conversely , it is also straightforward to see that each ht circuit ( with input and measurement as above ) can be simulated efficiently  in the weak sense  by a probabilistic classical computer : if the quantum register has @xmath10 qubits , if @xmath29 denotes the number of hadamard gates applied in round 1 , and if the classical gates in round 2 compute an efficiently computable ( invertible ) function @xmath30 , then the state of the system after the first two rounds has the form @xmath31 where there are @xmath32 zeroes in the argument of @xmath33 .",
    "we will use the abbreviation @xmath34 . performing a @xmath35 measurement on the first qubit yields as an outcome a bit @xmath12 .",
    "the probability that @xmath13 occurs is equal to [ pi_alpha ] ( ) = , where @xmath36 denotes the first bit of @xmath37 . sampling from this probability distribution",
    "can easily be done classically : simply generate an @xmath29-bit string @xmath38 uniformly at random , then compute @xmath37 and finally set @xmath39 ; then @xmath13 is generated with probability @xmath40 as desired .",
    "this shows that weak classical simulation of ht quantum circuits is efficiently possible .",
    "we can therefore conclude that the computational power of ht quantum circuits is equivalent to probabilistic classical computation .",
    "we remark that _ strong _ classical simulation of ht circuits is much harder  in fact , we point out that such strong simulation is a @xmath0-complete problem .",
    "the complexity class @xmath0 is concerned with _ counting problems _ : given an efficiently computable boolean function @xmath41 p , the problem of determining the integer @xmath42 defines the complexity class @xmath0 .",
    "it is easy to see that the problem of computing the probabilities ( [ pi_alpha ] ) is at least as hard as computing @xmath43 for arbitrary functions @xmath44 . to show this ,",
    "consider an arbitrary boolean function @xmath45 which is in @xmath3 . then there exists a poly - sized ht quantum circuit @xmath46 such that @xmath47 performing a measurement in the computational basis on the last qubit yields a single bit with probability distribution @xmath48 computing these probabilities with perfect accuracy is thus equivalent to computing @xmath43 .",
    "this shows that strong simulation of ht circuits is at least as hard as any problem in @xmath0 an is thus @xmath0-hard .",
    "moreover , it can easily be shown that , for arbitrary ht circuits and for arbitrary computational basis measurements , the problem of computing the probabilities ( [ pi_alpha ] ) is always in @xmath0 .",
    "this shows that the strong simulation of ht circuits is a @xmath0-complete problem . in conclusion ,",
    "_ efficient strong classical simulation of ht quantum circuits is intractable ( unless @xmath3 is equal to @xmath0 ) , while weak simulation of these circuits is efficiently possible _ ( even trivially so ) .",
    "in this section we show that , modulo some `` redundancies '' ( to be explained below ) , each clifford circuit can be reduced to an ht circuit , which is manifestly classically simulatable . to this aim",
    ", we provide an alternative proof of the gottesman - knill theorem which will allow to make the connection to ht circuits .",
    "the proof will not be centered around stabilizer groups ( and hence does not require any knowledge of the stabilizer formalism ) but will simply consist of tracking the coefficients @xmath49 of the state @xmath50 of the quantum register throughout the application of an arbitrary clifford circuit . to achieve this",
    ", it will be useful to know what the most general form is which the coefficients @xmath49 may assume .",
    "the latter issue has in fact already been fully investigated and understood in @xcite , where the following result was proved : every @xmath10-qubit state @xmath51 , where @xmath7 represents a clifford circuit , is given by an expression of the form [ expansion ] |_xa i^l(x ) ( -1)^q(x ) |x , where we have the following notations .",
    "first , @xmath52 is an affine subspace , i.e. a subset of the form @xmath53 , for some fixed ( nonsingular ) @xmath54 matrix @xmath55 and vector @xmath56 .",
    "second , @xmath57 is a linear function on @xmath58 , i.e. , @xmath59 maps @xmath38 to @xmath60 for some @xmath61 .",
    "the exponent @xmath57 of @xmath62 is computed modulo two . finally , @xmath63 is a quadratic function on @xmath58 .",
    "that is , @xmath64 maps @xmath10-bit strings @xmath65 to @xmath66 , for some ( fixed ) @xmath67 .",
    "moreover , @xmath64 , @xmath59 and @xmath68 can be efficiently computed .",
    "conversely , every state of the form ( [ expansion ] ) is a stabilizer state .    the proof that an arbitrary clifford circuit composed always maps @xmath69 to a state of the form ( [ expansion ] ) was first derived in @xcite and is based on mappings between clifford operations , the stabilizer formalism and arithmetic over @xmath28 . here",
    "we will give a simple alternative proof of this theorem .",
    "* proof of eq .",
    "( [ expansion ] ) : * the proof can be obtained by induction on the number of gates in the circuit @xmath7 .",
    "evidently , ( [ expansion ] ) is true when @xmath7 is the identity .",
    "now suppose that the result is true for every clifford circuit consisting of @xmath70 gates .",
    "we then have to prove that the result still holds for circuits with one additional gate .",
    "consider an arbitrary circuit @xmath7 of size @xmath71 , and write @xmath7 as a product of a single clifford gate @xmath72 and a circuit @xmath8 of size @xmath70 : @xmath73 . by the induction step",
    ", we may assume that there exist @xmath68 , @xmath59 and @xmath64 such that @xmath74 is given by ( [ expansion ] ) .",
    "it is then simply a matter of verifying that the general form ( [ expansion ] ) is kept when a gate from the set @xmath75 is applied .",
    "this can be shown using straightforward arithmetic , and for completeness these calculations are given in the appendix .",
    "@xmath76    the above proof of expression ( [ expansion ] ) leads to a simple algorithm to compute @xmath68 , @xmath59 and @xmath64 if a circuit @xmath7 is given : first , one initializes @xmath68 , @xmath59 and @xmath64 to their trivial values , corresponding to the state @xmath69 .",
    "then one sequentially updates @xmath68 , @xmath59 and @xmath64 corresponding to the first , second , etc . gate in @xmath7 .",
    "the final values for @xmath68 , @xmath59 and @xmath64 then correspond to the state @xmath77 .",
    "it is now easy to see that each clifford computation can be simulated efficiently . if a circuit @xmath7 is given , the first step is to compute the triple @xmath78 parameterizing @xmath77 .",
    "the goal is then to efficiently simulate @xmath35 measurements on this state .",
    "to do so , one argues at follows .",
    "first , the outcome probabilities of a measurement in the computational basis are _ independent _ of the phases @xmath79",
    ". that is , the specific values of @xmath59 and @xmath64 are in this context completely redundant , such that we may set these quantities to their trivial values @xmath80 .",
    "this leaves us with the state @xmath81 .",
    "let the affine space @xmath68 be given by @xmath82 , for some invertible @xmath54 matrix @xmath55 and @xmath83 .",
    "further , suppose that the first qubit is measured , yielding as an outcome a bit @xmath13 which occurs with probability ( ) = .it is trivial to sample from this probability distribution : simply generate a uniformly random @xmath29-bit string @xmath84 , compute @xmath85 and set @xmath13 to be the first coefficient of @xmath85 .",
    "this shows that each clifford circuit can efficiently be simulated in the weak sense .",
    "however , one can do more than this , as the probabilities @xmath40 can be _ computed _ efficiently as well .",
    "indeed , each of these probabilities has the form @xmath86 for some integer @xmath87 which can be obtained by solving a system of linear equations over @xmath28 .",
    "hence , strong simulation is possible as well , thus recovering the gottesman - knill theorem .",
    "next we note that the expression ( [ expansion ] ) provides an alternative way  different than the circuit @xmath7to prepare the output state @xmath77 .",
    "if the affine space @xmath68 is given by @xmath82 , then this state can be prepared from @xmath69 as follows .",
    "first , apply @xmath29 hadamard gates such as to yield @xmath88 .",
    "second , apply appropriate cnot gates such as to yield @xmath89 .",
    "third , apply the not operation @xmath90 , yielding @xmath91 .",
    "fourth , apply appropriate phase and cphase gates such as to yield @xmath77 .",
    "the overall structure of this preparation method is illustrated in fig .",
    "[ fig : clifford_circuit ] .",
    "we have now arrived the following result .",
    "[ thm_clifford ] let @xmath7 be an arbitrary poly - sized clifford circuit .",
    "then there exists a poly - sized clifford circuit @xmath8 satisfying @xmath92 such that @xmath8 can be decomposed into three `` rounds '' : ( round 1 ) apply hadamard gates to an arbitrary subset of qubits ; ( round 2 ) apply a poly - sized circuit of nots and cnots ; ( round 3 ) apply a poly - size circuit of phases and cphases . the circuit @xmath8 can be efficiently determined .",
    "it is important to remark that it is generally not true that the circuits @xmath7 and @xmath8 are equal as @xmath93 matrices = hph . by exhaustive enumeration of all possibilities",
    ", it can easily be shown that no single - qubit circuit @xmath8 of the above structure satisfies @xmath94 . ] .",
    "these circuits merely have the same effect on the input state @xmath69 , i.e. , _ they generate the same output state_. note that it is the output state @xmath95 of the computation which is relevant for our purposes ",
    "i.e . a single column of the @xmath93 matrix @xmath7and",
    "not the entire circuit .",
    "we further emphasize that the choice of a standard input state @xmath69 as opposed to arbitrary products of @xmath96 , @xmath97 , @xmath22 eigenstates as inputs , does not entail any loss of generality , as such alternative input states can always be rotated into the state @xmath69 using a ( local ) clifford operation .",
    "the clifford normal form highlights the computational `` weakness '' of clifford circuits .",
    "first , the original clifford circuit , which may contain many hadamard gates located at different places in the circuit , causing subsequent rounds of constructive and destructive interference , is ( efficiently ) mapped to the normal form which does not display any interference at all .",
    "indeed , up to the irrelevant last round of diagonal gates , each clifford circuit is reduced to a circuit of not and cnot gates applied to a superposition of computational basis states @xmath98in other words , nothing but a ( very simple instance of an ) ht circuit , which are trivially classically simulatable . also the connection between clifford circuits and the complexity class @xmath4 is in this way highlighted , given the relation between the class @xmath2 and circuits consisting of not and cnot operations .    with a little extra work , theorem [ thm_clifford ]",
    "may be used to arrive at a normal form for clifford circuits @xmath7 which does regard the entire @xmath93 matrix .",
    "the normal form is in fact highly similar to theorem [ thm_clifford ] .",
    "the significance of this normal form is again that it contains only a single round of basis - changing operations ( i.e. hadamards ) .",
    "in fact , we will see that every clifford operation can be written as a a tensor product of hadamard operations @xmath99 acting nontrivially on a subset @xmath100 of the qubits , multiplied on the left and the right with _",
    "basis - preserving _ clifford circuits @xmath101 and @xmath102 , i.e. circuits composed of cnot , phase and cphase gates .",
    "similar to ( [ expansion ] ) , ( a variant of ) theorem [ normal - cliff2 ] was proved in @xcite using mappings between the stabilizer formalism , clifford operations and @xmath103-arithmetic ; here we provide a direct proof .",
    "[ normal - cliff2 ] let @xmath7 be an arbitrary @xmath24-qubit clifford operation . then there exist : ( a ) poly - size circuits @xmath101 and @xmath102 composed of cnot , phase and cphase gates and ( b ) a tensor product of hadamard gates and identities @xmath99 acting nontrivially on a subset @xmath100 of the qubits , such that @xmath104 .",
    "moreover , @xmath101 , @xmath102 and @xmath105 can be determined efficiently .",
    "_ proof : _ let @xmath106 denote an arbitrary @xmath24-bit string . for every @xmath107 , define @xmath108 where @xmath109 denotes the pauli matrix @xmath96 acting on qubit @xmath62 . since @xmath7 is a clifford operation , each @xmath110 is a pauli operator where each @xmath111 is either the identity or one of the pauli matrices @xmath96 , @xmath97 or @xmath22 .",
    "] , possibly with an overall minus sign . denoting @xmath112 and @xmath113",
    ", we thus have @xmath114 . since @xmath115 , we have @xmath116",
    ". we can now apply theorem [ thm_clifford ] to the state @xmath117 : there exists a poly - size clifford circuit @xmath16 consisting of phase , cphase and cnot gates , and an operation @xmath118 such that @xmath119 where @xmath87 is some overall phase factor .",
    "now define @xmath120 for every @xmath62 ; also @xmath121 is a pauli operator , possibly supplemented with an overall minus sign . denoting @xmath122",
    ", we thus have @xmath123 .",
    "this leads to [ proof_normal3 ] c|a= ( a ) m h|0^n= mh ( a)|0^n.note that @xmath87 does not depend on @xmath124 .",
    "we now study the general form of the unitary mapping @xmath125 .",
    "since each @xmath121 is an element of the pauli group , there exist @xmath24-bit strings @xmath126 , @xmath127 and @xmath128 such that @xmath129 and hence [ proof_normal4 ] ( a ) = _ i ( -1)^a_iu_i i^a_iv_i x(a_ir^i ) z(a_it^i).for every two @xmath130 , we have @xmath131 .",
    "hence , we may reshuffle the factors in the product ( [ proof_normal4 ] ) at the cost of an overall phase factor of the form @xmath132 , for some quadratic function @xmath133 .",
    "in particular , we may write ( a ) = ( -1)^q(a ) _",
    "i i^a_iv_i _ i x(a_ir^i ) _ iz(a_it^i).letting @xmath55 ( @xmath134 ) denote the @xmath135 matrix with columns @xmath136 ( @xmath137 ) , we then have ( a ) = ( -1)^q(a ) _ i i^a_iv_i x(ra ) z(ta).the action of @xmath138 on @xmath26 then has the following form : ( a)|0^n & = & ( -1)^q(a ) _",
    "i i^a_iv_i x(ra ) z(ta)|0^n= ( -1)^q(a ) _",
    "i i^a_iv_i |ra , where we have used that @xmath139 and that @xmath140 .",
    "it then easily follows that there exists a clifford circuit @xmath141 ( independent of @xmath124 ) composed of cnot , phase and cphase gates such that @xmath142 .",
    "together with ( [ proof_normal3 ] ) , this completes the proof .",
    "the clifford normal form also makes it easy to extend the gottesman - knill theorem .",
    "next we provide a class of quantum circuits which are efficiently simulatable classically ( in the weak sense ) , and which are extensions of gottesman - knill in the sense that these circuits can efficiently generate any output state which can be efficiently generated by arbitrary clifford circuits . moreover ,",
    "contrary to clifford circuits , the extensions encompass full probabilistic classical computation .",
    "we consider circuits of the following structure : first , apply an arbitrary local unitary operation ; afterwards , apply an arbitrary ( uniform family ) of quantum circuit(s ) consisting of toffoli and diagonal gates only .",
    "we show that such circuits , when applied to the input @xmath69 and when followed by a computational basis measurement , can be efficiently simulated classically in the weak sense .",
    "after the first round , the state of the quantum register is a complete product state @xmath143 . denoting @xmath144 , the coefficients @xmath145 of @xmath146 in the computational basis ( where @xmath65 is an @xmath10-bit string )",
    "are given by @xmath147 the final state of the quantum register has the form @xmath148 where the @xmath149 are complex phases ( which are efficiently computable as a function of @xmath38 , but this will not be relevant here ) and where @xmath150 is an invertible , efficiently computable boolean function .",
    "further , suppose that a subset @xmath100 of the @xmath10 qubits is measured , yielding as an outcome a bit string of @xmath151 , where the bit @xmath152 is the measurement outcome for qubit @xmath153 .",
    "then @xmath13 occurs with probability @xmath154 where the sum is over all bit strings @xmath38 such that @xmath155 for all @xmath156 . to state it differently",
    ", @xmath40 is the total probability that an @xmath10-bit string @xmath38 which is generated with probability @xmath157 , satisfies @xmath155 for all @xmath156 .",
    "now , it is possible to efficiently sample from the probability distribution @xmath158 . as a consequence , the following procedure ( i)-(ii)-(iii ) allows to efficiently generate a bit string @xmath13 with probability @xmath40 on a classical computer : ( i )",
    "generate an @xmath10-bit string @xmath38 with probability @xmath159 ( note that @xmath158 is a simple product distribution since @xmath146 is a product state ) ; ( ii ) compute @xmath160 ; ( iii ) set @xmath161 to be the @xmath153-th coefficient of @xmath160 , for every @xmath156 .",
    "this shows it is possible to efficiently sample from the probability distribution @xmath18 .",
    "note that the first round , consisting of a local unitary operation , can be generalized while keeping the entire circuit classically simulatable . to do so , consider a quantum circuit @xmath46 such that the computation @xmath162 , followed by a computational basis measurement of _ all _ @xmath10 qubits , can be efficiently simulated classically in the weak sense .",
    "that is , it is classically possible to efficiently sample once from the probability distribution @xmath163 .",
    "then such a circuit , followed by an arbitrary ( uniform ) quantum circuit consisting of classical and diagonal gates only , and followed by a computational basis measurement of an arbitrary subset of the qubits , can be simulated efficiently classically in the weak sense .",
    "this last observation e.g. implies that a `` matchgate circuit '' @xcite , a circuit of `` bounded tree - width '' @xcite , a circuit which generates `` bounded schmidt - rank '' @xcite , or a quantum fourier transform @xcite ( which are all known to be strongly simulatable ) , followed by an arbitrary poly - sized toffoli - diagonal circuit , is still weakly simulatable .",
    "we have studied classical simulation of quantum computation , taking the gottesman - knill theorem as a starting point .",
    "we have showed that each clifford circuit @xmath7 can be reduced to a simple equivalent circuit @xmath8 which , when applied to the input @xmath69 , provides the same output state . using this reduction to the normal form",
    ", we have attempted to provide a better understanding in the somewhat peculiar features of the gottesman - knill theorem .",
    "we have argued that the normal form provides insight in why the large amount of entanglement which can be generated by clifford circuits fails to provide any quantum computational speed - up .",
    "furthermore , the normal form shows how the simulation of clifford operations fits within the standard embedding of probabilistic classical computation into the quantum circuit model , related to the notion of ht circuits .    the class of ht circuits considered here , while indeed simple , exhibits features which are quite different from many results regarding classical simulation of quantum computation which have been found so far ( such as the gottesman - knill theorem itself , matchgates , circuits of small tree - width , etc ) .",
    "for example , while such circuits are classically simulatable in the weak sense ( i.e. they can be simulated using classical sampling techniques ) , strong classical simulation ( i.e. the problem of _ computing _ the output probabilities of measurement outcomes with high accuracy ) is @xmath0-complete and hence intractable .",
    "this is in contrast with previous results , the vast majority of which considering circuits where strong simulation is efficiently possible .",
    "also , ht circuits can generate unbounded amounts of entanglement ( as can e.g. clifford circuits ) while several previous results use techniques which allow classical simulation of certain quantum circuits only in cases where the entanglement generated by these circuits is `` bounded '' ( see e.g. @xcite ) .",
    "thus , the present results provide simple examples of quantum circuits which can generate vast amounts of entanglement , which nevertheless does not result in any quantum computational speed - up .",
    "we further note that a very moderate extension of ht circuits immediately leads to highly non - trivial quantum algorithms .",
    "for example , it is known that shor s factoring algorithm , using the phase estimation approach @xcite ( see also @xcite ) , can be implemented by an ht circuit _ supplemented with a final round of hadamard gates _ , and then followed by a measurement in the computational basis .",
    "this shows that a mere final round of local basis changes allows to go from an ht circuit , which is trivially classically simulatable , to shor s factoring algorithm , which is believed to provide an exponential speed - up .",
    "* acknowledgements .",
    "* i am very grateful to r. jozsa , w. dr , h. briegel , a. kay and i. cirac for interesting discussions and suggestions on the manuscript .",
    "work supported by the excellence cluster map .",
    "here we show the following claim : * claim : * suppose that an @xmath10-qubit state @xmath164 is given in terms of an expression of the form ( [ expansion ] ) for some @xmath78 , and suppose that a gate @xmath165 is applied to @xmath164 , resulting in a state @xmath166",
    ". then @xmath166 still has the form ( [ expansion ] ) for some updated @xmath78 , and that these updates can be performed efficiently .    before proceeding with the proof ,",
    "we note the following : in ( [ expansion ] ) , the functions @xmath64 and @xmath59 are defined on the space of @xmath10-bit strings @xmath58 . if the affine space @xmath68 is given by @xmath167 , we might as well write [ expansion2]|_u ( -1)^|q(u ) i^ |l(u)|ru+t , where now @xmath168 and @xmath169 are quadratic , resp .",
    "linear functions defined on the space of @xmath29-bit strings @xmath84 , such that @xmath170 and @xmath171 . note that it is computationally easy to determine @xmath168 ( @xmath169 ) from @xmath64 ( @xmath59 ) and vice versa . in the following",
    "we will be a bit sloppy and simply identify @xmath172 and similar for @xmath59 ; it will be clear from the context what the notation means .",
    "[ lemma ] let @xmath63 and @xmath57 be quadratic and linear functions , resp .",
    ", on @xmath173 , where @xmath174 .",
    "denote @xmath175 .",
    "then there exist a quadratic function @xmath176 and two linear functions @xmath177 and @xmath178 on @xmath179 , such that _ x_1 ( -1)^q(x ) i^l(x ) ( -1)^q(|x ) i^l(|x)_l(|x ) , 0,where @xmath180 denotes equality up to a multiplicative constant independent of @xmath181 .",
    "moreover , determining @xmath182 and @xmath178 from @xmath64 and @xmath59 can be performed efficiently .",
    "* proof of claim : * first , suppose that @xmath164 is given by ( [ expansion ] ) and that a phase gate is applied to , say , the first qubit .",
    "as @xmath183 maps @xmath184 to @xmath185 ( @xmath186 ) the resulting state @xmath166 is |_xa ( -1)^q(x ) i^ l(x)i^x_1|x , where @xmath187 is the first component of @xmath38 . using the identity",
    "is computed modulo 2 . ]",
    "@xmath188 , for every @xmath189 , then shows that @xmath166 is again of the form ( [ expansion ] ) .",
    "second , suppose that a cnot gate is applied to , say , the first and second qubit of @xmath164 .",
    "note that cnot maps @xmath190 to @xmath191 , for every @xmath192 .",
    "that is , cnot performs a linear transformation ( over @xmath28 ) `` within the ket '' .",
    "this immediately implies that the state ( [ expansion2 ] ) is mapped to |_u_2^m ( -1)^q(u ) i^ l(u)|ru+t,for some appropriate @xmath193 and @xmath194 which are easily determined by performing the cnot .",
    "thus , also in this case the form ( [ expansion ] ) is kept .",
    "finally , suppose that a hadamard gate is applied to , say , the first qubit of @xmath164 .",
    "this is the most nontrivial case of the three .",
    "recall that @xmath195 maps @xmath184 to @xmath196 ( where @xmath186 ) . denoting the first row of @xmath55 by @xmath197 ,",
    "letting @xmath198 be the @xmath199 matrix obtained by removing the first row of @xmath55 and denoting @xmath200 , one has [ expansion_h ] |_v=0",
    "^ 1_u_2^m ( -1)^q(u ) + v(r^tu ) + vt_1  i^l(u ) |v ,    @xmath198 may have either full rank @xmath29 , or rank @xmath201 .",
    "if @xmath198 has full rank , then ( [ expansion_h ] ) is of the form ( [ expansion2 ] ) and we are done .",
    "if @xmath198 has rank @xmath201 , some additional work is required . in this case , there is exactly one nontrivial linear combination of the columns of @xmath198 which yields the identity . without loss of generality , we may assume that the first column of @xmath198 can be written as a linear combination of the other columns , and that the last @xmath201 columns of @xmath198 are linearly independent .",
    "denoting the columns of @xmath198 by @xmath202 @xmath203 , we therefore conclude that there exists a bit string @xmath204 such that @xmath205 .",
    "note that determining @xmath206 is a @xmath2 problem as @xmath206 is the solution to a system of linear equations over @xmath28 .",
    "it is then easy to verify that @xmath207 $ ] , where the @xmath208 invertible matrix @xmath209 is defined by q = .making the substitution @xmath210 in ( [ expansion_h ] ) yields an expression of the following form : [ expansion_h ]    quadratic and linear functions @xmath176 and @xmath177 which can be easily determined ( by a @xmath2 computer ) . to lighten notation",
    "we will drop all primes in the above expression , i.e. , @xmath211 , @xmath212 , @xmath213 .",
    "now note that the vector @xmath214 does not depend on the first coefficient of @xmath84 , since the first column of @xmath215 is zero .",
    "indeed , denoting @xmath216 , we have @xmath217\\bar u$ ] ( note also that @xmath218 $ ] has full rank ) .",
    "therefore , in ( [ expansion_h ] ) the variable @xmath219 can be fully summed out .",
    "using lemma [ lemma ] then shows that @xmath166 is again of the desired form ( [ expansion ] ) .",
    "this completes the proof .",
    "m. hein , w. dr , j. eisert , r. raussendorf , m. van den nest and h. j. briegel , proceedings of the international school of physics `` enrico fermi '' on `` quantum computers , algorithms and chaos '' ( 2005 ) ; see also arxiv : quant - ph/0602096 ."
  ],
  "abstract_text": [
    "<S> we study classical simulation of quantum computation , taking the gottesman - knill theorem as a starting point . </S>",
    "<S> we show how each clifford circuit can be reduced to an equivalent , manifestly simulatable circuit ( normal form ) . </S>",
    "<S> this provides a simple proof of the gottesman - knill theorem without resorting to stabilizer techniques . </S>",
    "<S> the normal form highlights why clifford circuits have such limited computational power in spite of their high entangling power . at the same time , the normal form shows how the classical simulation of clifford circuits fits into the standard way of embedding classical computation into the quantum circuit model . </S>",
    "<S> this leads to simple extensions of clifford circuits which are classically simulatable . </S>",
    "<S> these circuits can be efficiently simulated by classical sampling ( `` weak simulation '' ) even though the problem of exactly computing the outcomes of measurements for these circuits ( `` strong simulation '' ) is proved to be @xmath0-complete  thus showing that there is a separation between weak and strong classical simulation of quantum computation . </S>"
  ]
}
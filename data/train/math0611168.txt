{
  "article_text": [
    "we consider the problems of computing the convolution @xmath5 possibly with matrix - valued kernel @xmath6 and vector - valued function @xmath7 , and of solving evolution equations with memory containing such convolution integrals where @xmath7 is not a function known in advance , but @xmath8 depends on the solution at time @xmath9 of the integral equation or integro - differential equation . in previous papers",
    "@xcite we have developed convolution algorithms that are _ fast _ and _ oblivious _ : to approximate ( [ eq : convolution ] ) on a grid @xmath10 @xmath11 with constant step size @xmath12 and @xmath13 , the algorithm requires    * @xmath1 operations , * @xmath2 evaluations of the laplace transform @xmath14 , none of @xmath6 , and * @xmath2 active memory .    in the @xmath15th time step ,",
    "@xmath7 is evaluated at @xmath16 , but the history @xmath17 for @xmath18 is forgotten in this algorithm , and only logarithmically few linear combinations of the values of @xmath7 are kept in memory .",
    "this is to be contrasted with the @xmath3 operations , @xmath4 evaluations of the kernel @xmath6 , and @xmath4 memory for a naive implementation of a quadrature formula for ( [ eq : convolution ] ) .",
    "moreover , we note that in many applications the laplace transform @xmath19 ( the transfer function ) , rather than the kernel @xmath6 ( the impulse response ) , is known _ a priori_. a basic feature of the fast algorithm is the reduction , via contour integral representations , to differential equations of the form @xmath20 for suitable complex values of @xmath21 , which are solved numerically .",
    "it is not necessary to solve these differential equations with constant time step @xmath12 , as was done in @xcite , but the step size may instead be adapted to the behavior of @xmath7 .",
    "this observation opens the way to an _ adaptive _ fast and oblivious convolution algorithm .",
    "turning this simple idea into an efficient algorithm is , however , not as simple and the development of such an algorithm is precisely the topic of the present paper .",
    "the need to use adaptive time steps in solving evolutionary integro - differential equations in applications has been addressed at various places in the literature , e.g. , by adolfsson , enelund & larsson @xcite , cao , burrage & abdullah @xcite , and diethelm & freed  @xcite .",
    "none of the adaptive algorithms proposed there , however , can make use of the convolution structure to reduce the @xmath3 operation count and @xmath4 memory requirements for @xmath0 steps .",
    "the convolution algorithm proposed here works in the situation of a _ sectorial _ laplace transform @xmath19 : @xmath22    \\hbox{and in this sector , } \\",
    "|f(s)| \\le m\\ , |s|^{-\\nu}\\quad\\hbox{for some real $ m$ and $ \\nu>0$}.    \\end{array}\\ ] ] an equivalent condition is that @xmath6 is analytic in a complex sector containing the positive real half - axis @xmath23 , and is bounded by @xmath24 in this sector .",
    "a typical example is the fractional - power kernel @xmath25 , which has the laplace transform @xmath26 .",
    "an essential ingredient of the algorithm is the discretization of the inversion formula for the laplace transform , given by @xmath27 with @xmath28 a contour in the sector of analyticity oriented with increasing imaginary part and going to infinity with an acute angle to the negative real half - axis , so that @xmath29 decays fast for growing @xmath30 along @xmath28 .",
    "we will choose the contour as a hyperbola .",
    "since we can not obtain a uniformly good approximation for all @xmath31 $ ] with a single contour  @xmath28 , we use different hyperbolas @xmath32 corresponding to geometrically growing intervals of uniform approximation , @xmath33 $ ] with an integer @xmath34 , e.g. , @xmath35 , and with a minimum step size @xmath36 . the required number of contours is thus bounded by @xmath37 .",
    "this logarithm shows up in the complexity estimates in place of @xmath38 for the fixed - stepsize algorithm . as in that case",
    ", it appears multiplied with the number of quadrature points on each hyperbola , which is @xmath39 for an accuracy @xmath40 in the approximation of ( [ eq : inv ] ) . in ",
    "2 we briefly review recent results from @xcite on the approximation of inverse laplace transforms by discretized contour integrals . in  3 we describe the fast and oblivious algorithm for computing convolutions with variable time steps .",
    "the algorithm is then illustrated on various problems where adaptive time steps are important : a blow - up problem for a nonlinear abel integral equation resulting from a nonlinear schrdinger equation with concentrated nonlinearity (  4 ) , a fractional diffusion - reaction system from chemical reaction kinetics (  5 ) , and visco - elasticity with a weakly singular memory kernel in the constitutive equations , under applied forces that are switched on and off  (  6 ) .",
    "in the inversion formula ( [ eq : inv ] ) we choose @xmath28 as the left branch of a hyperbola parameterized by @xmath41 where @xmath42 is a scale parameter , @xmath43 is the shift in , and @xmath44 .",
    "thus , @xmath28 is the left branch of the hyperbola with center at @xmath45 , foci at @xmath46 , @xmath47 , and with asymptotes forming angles @xmath48 with the real axis , so that @xmath28 remains in the sector of analyticity of @xmath19 .",
    "after parameterizing , the function @xmath6 is approximated by applying the truncated trapezoidal rule to the resulting integral along the real axis , i.e. , @xmath49 with weights @xmath50 and quadrature nodes @xmath51 given by @xmath52 and @xmath53 a suitable step length parameter .",
    "different choices of contours @xmath28 and parameterizations have been studied for the numerical inversion of sectorial laplace transforms in the last years .",
    "the choice of a hyperbola has been studied in @xcite , and actually we follow here the approach in @xcite .",
    "the choice of @xmath28 as a parabola has also been considered recently in @xcite .",
    "finally we refer to talbot s method @xcite , which could also be used with the present algorithm ; cf .",
    "the good behavior of this quadrature formula to approximate is due to the good properties of the trapezoidal rule when the integrand can be analytically extended to a horizontal strip around the real axis @xcite .",
    "we refer to @xcite for details and only give here the following error bound , which decays exponentially in the number of quadrature nodes .",
    "[ thm : err ] @xcite suppose that the laplace transform @xmath19 satisfies the sectorial condition . for fixed @xmath54 , @xmath55 , @xmath56 , and",
    "@xmath57 there are positive numbers @xmath58 depending on @xmath59 and @xmath60 ( @xmath61 depends additionally on @xmath62 unless @xmath63 in ) such that the choice of parameters @xmath64 and @xmath65 yields a quadrature error in bounded by @xmath66 in intervals @xmath67 $ ] with arbitrary @xmath68 , where @xmath69 is the exponent of and @xmath70 is the precision in the evaluations of the laplace transform @xmath19 and the elementary operations in  .",
    "+ hence , @xmath71 quadrature points are sufficient to obtain an accuracy @xmath72 in the approximation of the contour integral . in practice , we choose @xmath73 and compute the values @xmath74 and @xmath75 following the optimization process described in  @xcite .",
    "we want to approximate @xmath76 on a sequence of times @xmath77 , spaced arbitrarily . for the moment",
    "we assume that @xmath7 is a known function , though we will see later how to use the algorithm for solving integral and integro - differential equations . for a given @xmath78",
    ", we can insert the laplace inversion formula in and write @xmath79 the numerical inversion of the laplace transform is performed very efficiently by the quadrature rule ( [ numinvlt ] ) . in section  [ sec : invlaplace ] we have seen that the same contour @xmath28 used in this quadrature can be used to approximate @xmath6 at different values of @xmath80 , ranging over intervals of the form @xmath81 $ ] , for a given ratio @xmath55 . since in",
    "we need to approximate @xmath82 for @xmath83 $ ] , we can not use a unique contour @xmath28 and we need to split the integral in into several pieces . for suitable intermediate times",
    "@xmath84 , with @xmath85 , we select a suitable contour @xmath28 for the time interval @xmath86 $ ] and approximate @xmath87 where @xmath88 is the solution at @xmath89 to the linear inhomogeneous ode @xmath90 we now approximate @xmath88 by interpolating @xmath7 linearly on each interval @xmath91 $ ] for @xmath92 , and integrating exactly .",
    "( more elaborate integration methods could be used instead , cf .",
    "@xcite , but for simplicity of presentation we will just consider this particular integration scheme . ) we denote by @xmath93 the interpolant of @xmath7 and by @xmath94 the resulting approximation to @xmath95 , i.e. , @xmath96 is the exact solution at @xmath97 to @xmath98 thus , we approximate @xmath99      the key to the algorithm is the way the splitting times @xmath100 for the integral in are selected for every @xmath78 with @xmath101 .",
    "this is done following the mosaic in the triangle @xmath102 shown in fig .",
    "[ fig : mosaicym ] , where patches grow geometrically with increasing distance from the diagonal . for the moment",
    ", we fix a minimum size of the patches closest to the diagonal , corresponding to a minimum step size @xmath36 . if along the vertical line at @xmath78 joining @xmath103 with the diagonal value @xmath78 we have @xmath104 different patches of the tessellation , then we obtain the values @xmath105 and @xmath106 for @xmath107 as the smallest and largest grid points , resp .",
    ", within the @xmath108th patch along the vertical line at @xmath78 .",
    "all those @xmath108s are collected in an index set @xmath109 . in case",
    "a patch does not contain any grid points its value @xmath108 is not contained in @xmath109 .",
    "the times @xmath110 depend on @xmath15 , though for simplicity we omit this dependence in the notation .",
    "each class of patches of the same size in the mosaic represents a distance class to the diagonal in the mosaic , and thus corresponds to a different approximation interval and a different contour to perform the inversion of the laplace transform and to a different set of @xmath111 scalar differential equations .",
    "the approximation intervals for the values @xmath112 are of the form @xmath113 $ ] , @xmath114 , so that the ratio @xmath60 is @xmath115 . since we consider a non - equidistant sequence of times @xmath116 , in this splitting there likely appear `` gaps '' in between the @xmath117 and @xmath105 , which in figure  [ fig : mosaicym ] correspond to pairs of horizontal lines with any boundary of @xmath118 patches in between them",
    "for example , at the time point @xmath119 we have @xmath120 , @xmath121 , @xmath122 , @xmath123 , @xmath124 and @xmath125 .     for @xmath126 with times",
    "@xmath116 indicated by points .",
    "each monochromatic rectangle fully enclosed by black lines corresponds to a solution value @xmath127 of a linear differential equation ( [ eq : linode]).,scaledwidth=75.0% ]    we split into @xmath128 parts @xmath129 where @xmath130 is computed using   and @xmath131 correspond respectively to the step from @xmath132 to @xmath78 near the diagonal and to the gaps between @xmath117 and @xmath105 ; see fig .",
    "[ fig : mosaicym ] .",
    "these parts are computed by `` direct steps '' explained in the next subsection .",
    "thus , for @xmath119 , @xmath133 is calculated using :    * one `` ode step '' , @xmath134 , from @xmath135 to @xmath136 .",
    "* one `` direct step '' , @xmath137 , from @xmath136 to @xmath138 . *",
    "one `` ode step '' , @xmath139 , from @xmath138 to @xmath140 .",
    "* one `` direct step '' , @xmath141 , from @xmath140 to @xmath142 .",
    "* one `` direct step '' , @xmath143 , from @xmath142 to @xmath144 .    translating the above splitting from the picture into a formal procedure , we thus proceed as follows : given a minimum step size @xmath36 and a basis @xmath145 , for each @xmath146 we take @xmath104 as small as possible so that we can represent @xmath147 with @xmath148 , where @xmath149 denotes the smallest integer greater than @xmath150 .",
    "@xmath151 is the largest and @xmath152 is the smallest value in @xmath153 , such that @xmath154 we remark that with this definition , there always exists some @xmath155 and some integer @xmath156 such that @xmath157 and @xmath158 . the @xmath159 are such that the integration limits of @xmath160 fit into the approximation interval : @xmath161 . in figure",
    "[ fig : mosaicym ] we show how the solutions to the linear odes @xmath162 fill the mosaic .",
    "in this example we have @xmath126 and the @xmath116 are given by the non - equidistant sequence of time points indicated both along the horizontal axis and the diagonal of the triangle .",
    "we can see here that , for instance , when times greater than @xmath163 are reached , all the `` past '' from @xmath103 to @xmath164 is stored in the solution values @xmath165 , represented in figure  [ fig : mosaicym ] by the tall dark rectangle with basis @xmath166 $ ] for @xmath167 , and in the adjacent incomplete white rectangle to the right for @xmath168 . in our example the values @xmath169",
    "are used @xmath170 times to evaluate @xmath171 for @xmath172 $ ] .",
    "the filling of the mosaic is done bottom up in the algorithm , advancing all the differential equations in every time step , so that the algorithm can forget all the past values of the function @xmath7 , with the exception of those at @xmath173 , which are needed for the direct steps described below .",
    "in addition to the current solution values @xmath174 of the differential equations at time @xmath175 , also their values at a splitting point @xmath176 need to be stored until @xmath176 is increased at a later step .",
    "actually the algorithms stores three copies of @xmath177 .",
    "pseudocodes for the organization of the decomposition are given in the appendix .",
    "the gaps @xmath178 $ ] between the enclosed blocks in figure  [ fig : mosaicym ] are bridged using the values @xmath179 whose computation we describe next .",
    "these direct steps compute @xmath180 for some @xmath181 . on the interval",
    "@xmath182 $ ] we approximate @xmath183 by a linear function : @xmath184 with @xmath185 , @xmath186 .",
    "( here again , the approach would extend to polynomials of higher degree . ) extending @xmath187 to @xmath188 $ ] we split in two terms @xmath189    & = &   \\mathcal{l}^{-1}[f\\cdot    \\mathcal{l}g(\\cdot + t_j)](t_n - t_j ) - \\mathcal{l}^{-1}[f\\cdot     \\mathcal{l}g(\\cdot + t_{j+1})](t_n - t_{j+1 } )    \\\\[5pt ]   & = &   \\mathcal{l}^{-1}\\bigg [ f_1 g_j +    f_2\\ , \\frac{g_{j+1}-g_j } { h_{j+1 } }    \\bigg](t_n - t_j )    -\\mathcal{l}^{-1}\\bigg[f_1 \\ , g_{j+1 } +    f_2\\ , \\frac{g_{j+1}-g_j } { h_{j+1 } } \\bigg](t_n - t_{j+1}),\\end{aligned}\\ ] ] where @xmath190 and @xmath191 .",
    "we approximate the inverse laplace transforms @xmath192 at @xmath193 and @xmath194 using the numerical integration of the laplace inversion formula along the integration contours corresponding to the approximation intervals @xmath195 and @xmath196 such that @xmath197 and @xmath198 .",
    "the result of the direct step is then calculated forming linear combinations @xmath199 this is also used for the terms closest to the diagonal , @xmath200 , where we note in addition that @xmath201 .      given an arbitrary sequence of time points @xmath202 with the minimum step size @xmath203 , the above algorithm computes @xmath204 ( with @xmath93 the piecewise linear interpolant of @xmath7 ) up to an error @xmath40 using    * @xmath205 hyperbolas with * @xmath206 quadrature points on each hyperbola .",
    "the algorithm thus requires @xmath207 evaluations of the laplace transform @xmath208 at the quadrature points and solves @xmath207 differential equations @xmath209 . as the algorithm proceeds , only three solution values need to be stored for each of these differential equations .",
    "in addition , at most @xmath210 values of @xmath7 need to be kept in memory for the direct steps . in total , the active memory requirements are @xmath211 vectors of the dimension of @xmath7 .",
    "the total operation count is @xmath212 . for the variable - step - size algorithm",
    "we thus obtain the complexity characteristics as stated in the introduction for the fast and oblivious fixed - step - size algorithm , with @xmath213 now replaced by @xmath214 .",
    "there are two sources of error in the algorithm .",
    "the first one is the discretization of the contour integral , which is well controlled .",
    "the second one is the piecewise linear interpolation of @xmath7 by @xmath93 . ignoring the error from discretizing the contour integrals",
    ", the algorithm thus computes ( [ eq : convollin ] ) instead of ( [ eq : convolution ] ) .",
    "we control the error in @xmath7 , which is bounded by @xmath215 given a tolerance _ tol _ , we propose the new step - size @xmath216 according to the criterion @xmath217 where @xmath218 with the quadratic interpolant @xmath219 to @xmath7 at @xmath220 .",
    "the constant @xmath61 is chosen as @xmath221 additionally the step - size is restricted to fulfill @xmath222 .",
    "the proposed step size @xmath216 is tested by @xmath223 where the new value @xmath224 is used in the computation of @xmath225 .",
    "if this condition is satisfied , then @xmath216 is accepted and we set @xmath226 , else we repeat the test with a reduced step @xmath216 determined from ( [ eq : new - step ] ) with @xmath225 in place of @xmath227 . if necessary , this procedure is repeated until ( [ eq : step - test ] ) is satisfied .    in the following sections we give three examples to show the performance of the algorithm , using also other strategies for controlling the step size in the time integration of integro - differential equations .",
    "however , we point out that the above fast algorithm is independent of the particular step size selection strategy .",
    "the step size control is just the way we generate the sequence of time points .",
    "the minimum step size need not be specified _ a priori _ , and at time @xmath78 the future time points @xmath228 need not yet be known in the algorithm .",
    "for the three examples provided , we ran the algorithm with basis @xmath35 , which gives approximation intervals of the type @xmath229 $ ] .",
    "adami & teta @xcite consider a nonlinear schrdinger equation with nonlinearity concentrated at @xmath230 , @xmath231 with initial data @xmath232 for @xmath233 .",
    "the equation can be given a rigorous formulation as an integral equation .",
    "with duhamel s principle the wave function @xmath234 can be expressed as the sum of @xmath235 , that is , the solution at position @xmath150 and time @xmath80 of the free schrdinger equation with initial data @xmath236 , and of a convolution with @xmath237 , where @xmath238 for @xmath239 .",
    "the function @xmath240 is the solution of a nonlinear , complex abel - type integral equation @xmath241 is the solution at @xmath230 of the free schrdinger equation .",
    "we present the results of numerical experiments in a situation where the solution is known to have finite - time blow - up .",
    "we choose @xmath242 , and @xmath243 which corresponds to a gaussian wave - packet @xmath244 as initial data .",
    "for @xmath245 and for different tolerances.,title=\"fig:\",scaledwidth=48.0% ]   for @xmath245 and for different tolerances.,title=\"fig:\",scaledwidth=48.0% ] +   for @xmath245 and for different tolerances.,title=\"fig:\",scaledwidth=48.0% ]   for @xmath245 and for different tolerances.,title=\"fig:\",scaledwidth=48.0% ]    for four different values of @xmath246 , @xmath247 the evolution of the solution is shown in fig  [ fig : sol_blowup ] for different tolerances .",
    "the thick lines correspond to solutions obtained with a tolerance of @xmath248 .",
    "the other two lines correspond to tolerances of @xmath249 and @xmath250 .",
    "whereas for @xmath251 one can not distinguish the different tolerances in the plot , for @xmath252 it is clearly visible , that choosing a too low tolerance will produce a wrong result .     and different tolerances , title=\"fig:\",scaledwidth=45.0% ]   and different tolerances , title=\"fig:\",scaledwidth=45.0% ] +   and different tolerances , title=\"fig:\",scaledwidth=45.0% ]   and different tolerances , title=\"fig:\",scaledwidth=45.0% ]    in fig .",
    "[ fig : stepsize_blowup ] the step size is plotted over @xmath80 .",
    "clearly the adaptivity pays off to resolve the blow - up . in case @xmath253 we observe for a tolerance of @xmath248 step - sizes ranging from @xmath254 to @xmath255 .     for @xmath256 , at @xmath257 for @xmath258 , at @xmath259 for @xmath260 , and at @xmath261 for @xmath253,title=\"fig:\",scaledwidth=45.0% ]   for @xmath256 , at @xmath257 for @xmath258 , at @xmath259 for @xmath260 , and at @xmath261 for @xmath253,title=\"fig:\",scaledwidth=45.0% ] +   for @xmath256 , at @xmath257 for @xmath258 , at @xmath259 for @xmath260 , and at @xmath261 for @xmath253,title=\"fig:\",scaledwidth=45.0% ]   for @xmath256 , at @xmath257 for @xmath258 , at @xmath259 for @xmath260 , and at @xmath261 for @xmath253,title=\"fig:\",scaledwidth=45.0% ]    fig .",
    "[ fig : err_ns_blowup ] displays the absolute error at the final time , obtained with tolerances @xmath262 versus the total number of steps .",
    "the error is measured against a reference solution obtained with tolerance @xmath248 .",
    "the numerical inversion of the laplace transform is performed as explained in section  [ sec : invlaplace ] , with @xmath263 , @xmath264 , and @xmath265 , which gives @xmath266 and @xmath267 ( see theorem  [ thm : err ] ) . for larger tolerances ,",
    "good results can be obtained with a smaller @xmath268 , say @xmath269 .",
    "taking @xmath270 , we only get small oscillations in the stepsize for the smallest tolerance , @xmath271 , in figure  [ fig : stepsize_blowup ] , and no visible changes for less stringent tolerances .",
    "we consider three molecular species @xmath272 , @xmath145 and @xmath61 , reacting as @xmath273 @xmath274 being the resulting product .",
    "the diffusion of each of the species is anomalous .",
    "so we obtain a reaction diffusion equation with a memory term . a model like this , with three species and three reactions was considered in  @xcite .",
    "however we have chosen to follow  @xcite and to associate a memory with the reaction term . thus to model this process the following system of integro - differential equations",
    "is considered : @xmath275 where @xmath276 is the 1d laplacian with periodic boundary condition on @xmath277 $ ] and @xmath278 denotes the fractional integral of order @xmath279 , given by the riemann liouville operator @xmath280 for @xmath281 . integrating in time system",
    ", we get the integro - differential equation @xmath282   \\\\",
    "u_{2}(t)- u_2(0 ) = & \\partial_t^{-\\alpha } \\big [ k\\delta u_2(t ) - k_{1 } u_1(t ) u_2(t ) + k_{2}u_3(t )    \\big ]   \\\\",
    "u_{3}(t)- u_3(0 ) = & \\partial_t^{-\\alpha } \\big [ k\\delta u_3(t ) + k_{1 } u_1(t ) u_2(t ) - ( k_{2}+k_{3})u_3(t ) \\big ] .",
    "\\end{aligned}\\end{gathered}\\ ] ]    in this situation we have in the convolution terms the weakly singular kernel @xmath283 , with laplace transform @xmath284 .",
    "we approximate the solution to by using an adaptive strategy similar to the one explained in section  [ sec : strategy_interpolationerror ] but replacing criterion   by @xmath285 and the test   by @xmath286 where @xmath287 , with @xmath288 the linear interpolant of @xmath7 at @xmath132 and @xmath78 .",
    "our choice for the different parameters is @xmath289 , @xmath290 , @xmath291 and @xmath292 , and we integrate up to @xmath293 .",
    "we fix @xmath294 and consider smoothed step - like functions as the initial data .    setting @xmath295^t$ ] , @xmath296 the @xmath297 identity matrix , and following the notation introduced in section  [ sec : dsteps ] for the direct steps of the algorithm , the discrete equation approximating is @xmath298 where @xmath299 denotes the piecewise linear interpolant of @xmath300 at times @xmath301 and , for @xmath302 nodes in the spatial discretization and @xmath303 a column vector of length @xmath304 , we define @xmath305^t,\\ ] ] with @xmath306 the second order finite difference approximation to @xmath307 with periodic boundary conditions and @xmath308 the @xmath309 matrix @xmath310 where @xmath311 is the @xmath312 identity matrix .    , @xmath145 , @xmath61 , at different times ( lighter lines for larger times ) .",
    "right : step size versus time @xmath80 , error versus tolerance , and error versus number of steps .",
    "all for @xmath293 , @xmath313 , @xmath314 , @xmath315 , and @xmath316.,title=\"fig:\",scaledwidth=43.0% ] , @xmath145 , @xmath61 , at different times ( lighter lines for larger times ) .",
    "right : step size versus time @xmath80 , error versus tolerance , and error versus number of steps .",
    "all for @xmath293 , @xmath313 , @xmath314 , @xmath315 , and @xmath316.,title=\"fig:\",scaledwidth=43.0% ] + , @xmath145 , @xmath61 , at different times ( lighter lines for larger times ) .",
    "right : step size versus time @xmath80 , error versus tolerance , and error versus number of steps .",
    "all for @xmath293 , @xmath313 , @xmath314 , @xmath315 , and @xmath316.,title=\"fig:\",scaledwidth=43.0% ] , @xmath145 , @xmath61 , at different times ( lighter lines for larger times ) .",
    "right : step size versus time @xmath80 , error versus tolerance , and error versus number of steps .",
    "all for @xmath293 , @xmath313 , @xmath314 , @xmath315 , and @xmath316.,title=\"fig:\",scaledwidth=43.0% ] + , @xmath145 , @xmath61 , at different times ( lighter lines for larger times ) .",
    "right : step size versus time @xmath80 , error versus tolerance , and error versus number of steps .",
    "all for @xmath293 , @xmath313 , @xmath314 , @xmath315 , and @xmath316.,title=\"fig:\",scaledwidth=43.0% ] , @xmath145 , @xmath61 , at different times ( lighter lines for larger times ) .",
    "right : step size versus time @xmath80 , error versus tolerance , and error versus number of steps .",
    "all for @xmath293 , @xmath313 , @xmath314 , @xmath315 , and @xmath316.,title=\"fig:\",scaledwidth=43.0% ]    fig .",
    "[ fig : err_redif_t30 ] shows numerical results and performance characteristics of the algorithm .",
    "here we inverted the laplace transform taking @xmath317 , @xmath318 , and @xmath270 quadrature nodes on the hyperbolas , giving @xmath319 and @xmath320 .",
    "again , less stringent accuracy requirements demand fewer quadrature nodes .",
    "the fractional order linear viscoelastic constitutive equation for the stress @xmath321 considered in  @xcite reads @xmath322 with stress tensor @xmath323 and strain tensor @xmath324 given by @xmath325 where @xmath326 and @xmath21 are the lam constants and @xmath327 is a given parameter .",
    "we refer to @xcite for more details about the model .",
    "the basic equations for the displacement field @xmath328 are @xmath329 .",
    "\\end{aligned}\\end{gathered}\\ ] ] @xmath330 denotes the dirichlet boundary of the @xmath331 and @xmath332 the neumann boundary , where the boundary force @xmath333 is applied .    on the sobolev space @xmath334 the variational formulation reads as follows",
    ": find @xmath335 such that @xmath336 where the tensor product is given by @xmath337 equation   is discretized in space using linear finite elements .",
    "the mesh is generated using triangle  @xcite and the assembly of the mass and stiffness matrices @xmath302 and @xmath272 and the boundary force vector @xmath338 is done following  @xcite .",
    "in contrast to  @xcite we have chosen not to use lagrange multipliers to enforce the dirichlet data , but to incorporate the dirichlet data directly . thus   results in the abstract integro - differential equation @xmath339 the kernel @xmath6 in is given by @xmath340 where @xmath341 denotes the mittag - leffler function of order @xmath342 , defined by @xmath343 the laplace transform @xmath19 of @xmath6 is given by @xmath344      the discretization of the fractional order viscoelastic problem yields a volterra integro - differential equation of second order of convolution type , @xmath345 this is equivalent to @xmath346 applying the transformations @xmath347 , @xmath348 , @xmath349 and @xmath350 , we get @xmath351 in what follows we drop the @xmath352 .",
    "the time discretization is done using the strmer",
    " verlet scheme , which is explicit and symmetric and has good properties for the part @xmath353 ( without the memory term ) .",
    "the verlet scheme for the above equation reads @xmath354 where @xmath355 is computed using the adaptive convolution algorithm explained in section  [ sec : alg ] .",
    "note that @xmath356 is already known before we evaluate the @xmath357 and thus scheme is explicit . in order not to lose the good properties of the strmer - verlet scheme a special step - size control",
    "is used , following @xcite . for the _ integrating _ controller we fix an accuracy parameter @xmath40 ( which can roughly be viewed as the square root of a local error tolerance ) .",
    "our step - size density function should control @xmath358 and @xmath359 , therefore we take @xmath360 assuming that @xmath272 is symmetric , the partial derivatives of @xmath361 are @xmath362 with this choice the step - size becomes approximately proportional to @xmath363 .",
    "we have to take the @xmath272 norm of @xmath364 so that @xmath365 and @xmath366 are in the same units .",
    "we use the integrating controller of  @xcite , ( * ? ? ?",
    "* ( viii.3.2 ) ) and set @xmath367 where for an evaluation , @xmath368 and @xmath369 at @xmath78 are approximated by divided differences using @xmath370 ( set to zero for negative subscripts ) .",
    "transforming back to `` non - hat '' quantities and again assuming that @xmath302 and @xmath272 are symmetric one obtains @xmath371 and @xmath372 with an accuracy parameter @xmath40 , and starting with @xmath373 , @xmath374 , we compute for @xmath375 @xmath376 where @xmath377 is the new step - size proposed by the integrating controller .      in the example",
    "the domain @xmath331 has the form of a cantilever as shown in fig  [ fig : viscodomain ] .",
    "the dirichlet boundary @xmath330  the left vertical boundary of @xmath331  is indicated by squares .",
    "the time - dependent boundary force @xmath333 is applied to the right vertical boundary @xmath378 of @xmath331  indicated by circles in fig .",
    "[ fig : viscodomain ] . on @xmath379 ( the upper and lower part of the boundary of @xmath331 ) homogenous neumann boundary condition is assumed .",
    "is indicated by small squares and @xmath378 by circles.,scaledwidth=65.0% ]    as the initial data @xmath380 , @xmath381 we take the lowest mode of the static semi - discrete problem corresponding to the first order equation , i.e. , the eigenvector of the matrix there corresponding to the smallest eigenvalue .",
    "the boundary force is given by @xmath382 in the numerical example the order of the mittag - leffler function is @xmath383 .",
    "we set the density @xmath384 and @xmath385 .",
    "youngs modulus and poisson ratio are @xmath386 , @xmath387 .",
    "equivalently the lam constants are @xmath388 , @xmath389 . for the numerical inversion of the laplace",
    "transform we took here @xmath263 , @xmath264 and @xmath390 quadrature nodes , giving @xmath391 and @xmath392 .    the evolution from @xmath393 to @xmath394 of the horizontal component ( @xmath150 coordinate ) of the displacement field @xmath328 , the velocity @xmath395 , and the acceleration @xmath396 recorded at the upper left corner of the cantilever is shown in fig .",
    "[ fig : evolelasto ] . at @xmath397",
    "when the boundary force is applied , an abrupt change in the velocity and strong oscillations in the acceleration is observed .",
    "furthermore fig .",
    "[ fig : evolelasto ] shows the evolution of the step - size @xmath377 for five different precision parameters @xmath398 .",
    "the integrating controller reduces the step - size by roughly a factor of ten at @xmath397 .    .",
    "displacement , velocity , and acceleration recorded for one fixed spatial node . also step size versus time for different @xmath40.,title=\"fig:\",scaledwidth=46.0% ] .",
    "displacement , velocity , and acceleration recorded for one fixed spatial node . also step size versus time for different @xmath40.,title=\"fig:\",scaledwidth=46.0% ] + .",
    "displacement , velocity , and acceleration recorded for one fixed spatial node . also step size versus time for different @xmath40.,title=\"fig:\",scaledwidth=46.0% ] .",
    "displacement , velocity , and acceleration recorded for one fixed spatial node . also step size versus time for different @xmath40.,title=\"fig:\",scaledwidth=46.0% ]    the relative error at @xmath394 in energy norm @xmath399 is calculated with respect to a reference solution obtained with @xmath400 . the left plot in fig  [ fig : errorelasto ]",
    "shows the relative error versus the number of steps .",
    "the different solutions were obtained for @xmath401 . the right plot in fig",
    "[ fig : errorelasto ] shows the cpu time in seconds versus the number of steps , illustrating the essentially linear growth .",
    ".,title=\"fig:\",scaledwidth=46.0% ] .,title=\"fig:\",scaledwidth=46.0% ]",
    "we thank roland klose for kindly providing his elasticity finite - element code .    10    , _ a simple model of concentrated nonlinearity . _ in mathematical results in quantum mechanics , prague , czech republic , 1998 , oper .",
    "theory adv .",
    "appl . , 108 , birkhuser , basel , ( 1999 ) , pp .",
    "183189 .    , _ a class of nonlinear schrdinger equations with concentrated nonlinearity _ , j. funct .",
    ", 180 ( 2001 ) , pp .",
    "148175 .    , _ discretization of integro - differential equations modeling dynamic fractional order viscoelasticity _ in proc .",
    "large - scale scientific computations , sozopol , bulgaria , 2005 lncs vol . 3743 , springer , ( 2006 ) , pp .",
    "76 - 83 .",
    ", _ adaptive discretization of fractional order viscoelasticity using sparse time history _ , computer meth .",
    "eng . , 193 ( 2004 ) , pp .",
    "45674590 .    , _ matlab implementation of the finite element method in elasticity _ , computing , 69 ( 2002 ) , pp .  239263 .    , _ a variable stepsize implementation for fractional differential equations _ , report , 2006 .    , _ fast collocation methods for volterra integral equation of convolution type _ , j. comput",
    ", 196 ( 2006 ) , pp .  652663 .",
    ", _ the fracpece subroutine for the numerical solution of differential equations of fractional order _ , in forschung und wissenschaftliches rechnen : beitrge zum heinz - billing - preis 1998 , gesellschaft fr wissenschaftliche datenverarbeitung , gttingen ( 1999 ) , pp",
    ".  5771    , _ data - sparse approximation to the operator - valued functions of elliptic operators _ , math . comp .",
    ", 73 ( 2004 ) , pp .",
    "12971324 .    , _ data - sparse approximation to a class of operator - valued functions _ , math . comp .",
    ", 74 ( 2005 ) , pp .  681708 .    , _ geometric numerical integration .",
    "structure - preserving algorithms for ordinary differential equations . _ 2nd ed . , springer , berlin , 2006 .    , _ explicit , time reversible , adaptive step size control _ , siam j. sci .",
    "comput . , 6 ( 2005 ) ,",
    "18381851 .    , _ non - reflecting boundary conditions for maxwell s equations _ , computing , 71 ( 2003 ) , pp",
    ".  265292 .    , _ on the numerical inversion of the laplace transform of certain holomorphic mappings _ , appl .",
    ", 51 ( 2004 ) , pp .",
    "289303 .    , _ a spectral order method for inverting sectorial laplace transforms _ , siam j. numer",
    ", 44 ( 2006 ) , pp .",
    "13321350 . , _ fast convolution for nonreflecting boundary conditions _ , siam j. sci .",
    ", 24 ( 2002 ) , pp .  161182 .",
    ", _ time discretization of an evolution equation via laplace transforms _ , i m a j. numer . anal . , 24 ( 2004 ) , pp .",
    "439463 .",
    ", _ the random walk s guide to anomalous diffusion : a fractional dynamics approach _ , physics reports , 339 ( 2000 ) , pp .",
    "177 .    , _ a modification of talbot s method for the simultaneous approximation of several values of the inverse laplace transform _ ,",
    "acm trans . math .",
    "software , 21 ( 1995 ) , pp .",
    "347371 .    , _ ein schneller faltungsalgorithmus fr nichtreflektierende randbedingungen .",
    "_ doctoral thesis , universitt tbingen , germany , 2002 .    , _ fast and oblivious convolution quadrature _ , siam j. sci .",
    "28 ( 2006 ) , pp .  421438 .    , _ a parallel method for time discretization of parabolic equations based on laplace transformation and quadrature _ , math .",
    ", 69 ( 2000 ) , pp .",
    "177195 .    , _",
    "triangle : engineering a 2d quality mesh generator and delaunay triangulator _ in applied computational geometry : towards geometric engineering , lncs , vol .",
    "1148 , springer , ( 1996 ) pp .",
    "203222 .    , _ approximations via whittaker s cardinal function _ , j. approx .",
    "theory , 17 ( 1976 ) , pp .",
    "222240 .    , _ numerical methods based on whittaker cardinal , or sinc functions _ , siam rev . ,",
    "23 ( 1981 ) , pp .",
    "165224 .    ,",
    "_ the accurate numerical inversion of laplace transforms _ , j. inst .",
    "appl . , 23 ( 1979 ) , pp",
    ".  97120 .    , _ optimizing talbot s contours for the inversion of the laplace transform _ , preprint , 2005 .    ,",
    "_ parabolic and hyperbolic contours for computing the bromwich integral _ , preprint , 2005 .    , _ reaction front in an a+b @xmath402 c reaction - subdiffusion process _ , phys .",
    "e 69 , ( 2004 ) , pp .",
    "we describe one step of the algorithm from @xmath132 to a given new time @xmath403 .    for all @xmath404 and @xmath405",
    "the odes   corresponding to the @xmath406 with initial time @xmath407 are advanced to the new time @xmath80 or restarted , depending on whether the horizontal line at height @xmath80 fits the current patch or enters a new patch ( see section  [ subsec : filling ] and figure [ fig : mosaicym ] ) , i.e. , we compute @xmath408 , or we set @xmath409 and @xmath410 , using the pseudocode  [ odesol ] .      * @xmath411 , the solution of the ode corresponding to the @xmath108-patch , * @xmath412 , the initial time of the ode in the @xmath108-patch , * @xmath413 , the new time ( new final time of the ode ) , * @xmath414 , the number of the current step in the corresponding @xmath108-patch of the mosaic , along the vertical line from @xmath415 to @xmath416 ( see figure  [ fig : mosaicym ] ) .",
    "this value ranges between 1 and @xmath145 . in the example of section  [ subsec : filling ] we have for @xmath417 , @xmath418 , @xmath419 and @xmath420 . *",
    "@xmath421 , the baseline of the @xmath108-patch of the mosaic , along the vertical line from @xmath415 to @xmath416 . *",
    "@xmath422 , the top line of the @xmath108-patch of the mosaic , along the vertical line from @xmath415 to @xmath416 ( @xmath423 ) , * @xmath424 upper bound of the approximation interval , * @xmath425 lower bound of the approximation interval , * @xmath426 and @xmath427 , the values of the inhomogeneity at the initial time in the @xmath108-patch and at the current time .            to fill the mosaic botton - up , algorithm  [ update ] is used . there copying the structure @xmath448 to @xmath449 and @xmath450 is done by checking if the distances to the diagonal @xmath451 and @xmath452 fit the approximation interval @xmath453 .",
    "algorithm  [ fastconvquad ] puts together the necesary `` direct '' and `` odes '' steps .",
    "it uses the ode solutions ` yt ` and the vector ` idv ` from algorithm  [ update2 ] . `",
    "idv ` stores the orders @xmath108 of the @xmath468 required at @xmath469 ."
  ],
  "abstract_text": [
    "<S> to approximate convolutions which occur in evolution equations with memory terms , a variable - stepsize algorithm is presented for which advancing @xmath0 steps requires only @xmath1 operations and @xmath2 active memory , in place of @xmath3 operations and @xmath4 memory for a direct implementation . </S>",
    "<S> a basic feature of the fast algorithm is the reduction , via contour integral representations , to differential equations which are solved numerically with adaptive step sizes . rather than the kernel itself , </S>",
    "<S> its laplace transform is used in the algorithm . </S>",
    "<S> the algorithm is illustrated on three examples : a blow - up example originating from a schrdinger equation with concentrated nonlinearity , chemical reactions with inhibited diffusion , and viscoelasticity with a fractional order constitutive law .    </S>",
    "<S> convolution quadrature , adaptivity , volterra integral equations , numerical inverse laplace transform , anomalous diffusion , fractional order viscoelasticity ,    65r20 , 65m99 . </S>"
  ]
}
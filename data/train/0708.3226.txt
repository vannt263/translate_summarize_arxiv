{
  "article_text": [
    "constraint satisfaction problems ( @xmath0 ) are a natural way of formalizing a large number of computational problems arising in combinatorial optimization , artificial intelligence , and database theory .",
    "this problem has the following two equivalent formulations : ( 1 ) to find an assignment of values to a given set of variables , subject to constraints on the values that can be assigned simultaneously to specified subsets of variables , and ( 2 ) to find a homomorphism between two finite relational structures @xmath9 and @xmath10 .",
    "applications of @xmath0s arise in the propositional logic , database and graph theory , scheduling and many other areas . during the past 30 years",
    ", @xmath0 and its subproblems has been intensively studied by computer scientists and mathematicians .",
    "considerable attention has been given to the case where the constraints are restricted to a given finite set of relations @xmath8 , called a constraint language @xcite .",
    "for example , when @xmath8 is a constraint language over the boolean set @xmath11 with four ternary predicates @xmath12 , @xmath13 , @xmath14 , @xmath15 we obtain 3-sat .",
    "this direction of research has been mainly concerned with the computational complexity of @xmath16 as a function of @xmath8 .",
    "it has been shown that the complexity of @xmath16 is highly connected with relational clones of universal algebra @xcite .",
    "for every constraint language @xmath8 , it has been conjectured that @xmath16 is either in p or np - complete @xcite .    in the minimum cost homomorphism problem ( @xmath1 ) , we are given variables subject to constraints and , additionally , costs on variable / value pairs .",
    "now , the task is not just to find any satisfying assignment to the variables , but one that minimizes the total cost .",
    "[ d : first ] suppose we are given a finite domain set @xmath9 and a finite constraint language @xmath17 .",
    "denote by @xmath7 the following minimization task :    * instance : * a first - order formula @xmath18 , @xmath19 , and weights @xmath20 .",
    "* solution : * assignment @xmath21 , that satisfies the formula @xmath22 .",
    "if there is no such assignment , then indicate it .",
    "* measure : * @xmath23 .",
    "[ r:0 ] note that when we require weights to be positive we do not lose generality , since @xmath7 with arbitrary weights can be polynomial - time reduced to @xmath7 with positive weights by the following trick : we can add @xmath24 to all weights , where @xmath24 is some integer .",
    "this trick only adds @xmath25 to the value of the optimized measure .",
    "hence , we can make all weights negative , and @xmath7 modified this way is equivalent to maximization but with positive weights only .",
    "this remark explains why both names @xmath1 and @xmath26 can be allowed , though we prefer @xmath1 due to historical reasons .",
    "@xmath1 was introduced in @xcite where it was motivated by a real - world problem in defence logistics .",
    "the question for which directed graphs @xmath27 the problem @xmath28 is polynomial - time solvable was considered in @xcite . in this paper",
    ", we approach the problem in its most general form by algebraic methods and give a complete algebraic characterization of tractable constraint languages . from this characterization , we obtain a dichotomy for @xmath1 , i.e. , if @xmath7 is not polynomial - time solvable , then it is np - hard .",
    "of course , this dichotomy implies the dichotomy for directed graphs .    in section 2 , we present some preliminaries together with results connecting the complexity of @xmath1 with conservative algebras .",
    "the main dichotomy theorem is stated in section 3 and its proof is divided into several parts which can be found in sections 4 - 8 .",
    "the np - hardness results are collected in section 4 followed by the building blocks for the tractability result : existence of majority polymorphisms ( section 5 ) and connections with optimization in perfect graphs ( section 6 ) .",
    "section 7 introduces the concept of _ arithmetical deadlocks _ which lay the foundation for the final proof in section 8 . in section 9",
    "we reformulate our main result in terms of relational clones .",
    "finally , in section 10 we explain the relation of our results to previous research and present directions for future research .",
    "recall that an optimization problem @xmath9 is called np - hard if some np - complete language can be recognized in polynomial time with the aid of an oracle for @xmath9 .",
    "we assume that @xmath29 .",
    "[ d : first ] suppose we are given a finite set @xmath9 and a constraint language @xmath17 . the language @xmath8 is said to be _ tractable _ if , for every finite subset @xmath30 , @xmath31 is polynomial - time solvable , and @xmath8 is called _ np - hard _ if there is a finite subset @xmath30 such that @xmath31 is np - hard .    first , we will state some standard definitions from universal algebra .",
    "[ d : first ] let @xmath32 and @xmath33 .",
    "we say that the function ( operation ) @xmath5 _ preserves _ the predicate @xmath34 if , for every @xmath35 , we have that @xmath36 .    for a constraint language @xmath8 ,",
    "let @xmath37 denote the set of operations preserving all predicates in @xmath8 . throughout the paper , we let @xmath9 denote a finite domain and @xmath8 a constraint language over @xmath9 .",
    "we assume the domain @xmath9 to be finite .",
    "[ d : first ] a constraint language @xmath8 is called _ a relational clone _ if it contains every predicate expressible by a first - order formula involving only    * predicates from @xmath38 ; * conjunction ; and * existential quantification .",
    "first - order formulas involving only conjunction and existential quantification are often called _ primitive positive ( pp ) formulas_. for a given constraint language @xmath8 , the set of all predicates that can be described by pp - formulas over @xmath8 is called the _ closure _ of @xmath8 and is denoted by @xmath39 .    for a set of operations @xmath40 on @xmath9 , let @xmath41 denote the set of predicates preserved under the operations of @xmath40 .",
    "obviously , @xmath41 is a relational clone .",
    "the next result is well - known @xcite .",
    "[ t:1 ] for a constraint language @xmath8 over a finite set @xmath9 , @xmath42 .",
    "theorem [ t:1 ] tells us that the galois closure of a constraint language @xmath8 is equal to the set of all predicates that can be obtained via pp - formulas from the predicates in @xmath8 .",
    "[ t:2 ] for any finite constraint language @xmath8 and any finite @xmath43 , there is a polynomial time reduction from @xmath31 to @xmath7 .",
    "since any predicate from @xmath44 can be viewed as a pp - formula with predicates in @xmath8 , an input formula to @xmath31 can be represented on the form @xmath45 , where @xmath46 and @xmath47 is a first - order formula involving only predicates in @xmath8 , equality , and conjunction .",
    "obviously , this formula is equivalent to @xmath48 .",
    "@xmath49 can be considered as an instance of @xmath50 with variables @xmath51 where weights @xmath52 will remain the same and for additional variables @xmath53 we define @xmath54 . by solving @xmath50 with the described input ,",
    "we can find a solution of the initial @xmath31 problem .",
    "it is easy to see that the number of added variables is bounded by a polynomial in @xmath55 .",
    "so this reduction can be carried out in polynomial time .",
    "finally , @xmath50 can be reduced polynomially to @xmath7 because an equality constraint for a pair of variables is equivalent to identification of these variables .",
    "the previous theorem tells us that the complexity of @xmath7 is basically determined by @xmath56 , i.e. , by @xmath37 .",
    "that is why we will be concerned with the classification of sets of operations @xmath40 for which @xmath57 is a tractable constraint language .",
    "[ d : first ] an _ algebra _ is an ordered pair @xmath58 such that @xmath9 is a nonempty set ( called a universe ) and @xmath40 is a family of finitary operations on @xmath9 .",
    "an algebra with a finite universe is referred to as a finite algebra .",
    "[ d : first ] an algebra @xmath58 is called _ tractable _ if @xmath59 is a tractable constraint language and @xmath60 is called _ np - hard _ if @xmath59 is an np - hard constraint language .    in the following theorem ,",
    "we show that we only need to consider a very special type of algebras , so called _ conservative _ algebras .    [",
    "d : first ] an algebra @xmath58 is called conservative if for every operation @xmath61 we have that @xmath62 .",
    "[ t:3 ] for any finite constraint language @xmath8 over @xmath9 and @xmath63 , there is a polynomial time turing reduction from @xmath64 to @xmath7 .",
    "let the first - order formula @xmath65 , where @xmath66 , and weights @xmath67 be an instance of @xmath64 .",
    "we assume without loss of generality that @xmath68 , when @xmath69 .",
    "let @xmath70 and define a new formula and weights @xmath71 @xmath72    then , using an oracle for @xmath7 , we can solve @xmath73 suppose that @xmath74 is satisfiable and @xmath5 is a satisfying assignment .",
    "it is easy to see that the part of the measure @xmath75 that corresponds to the added values @xmath76 is equal to 0 and the measure can not be greater than @xmath77 . if @xmath78 is any assignment that does not satisfy @xmath79 , then we see that this part of measure can not be 0 , and hence , is greater or equal to @xmath76 .",
    "this means that the minimum in the task is achieved on satisfying assignments of @xmath74 and any such assignment minimize the part of the measure that corresponds to the initial weights , i.e. , @xmath80 .",
    "if @xmath74 is not satisfiable , then either @xmath81 is not satisfiable or @xmath82 . using an oracle for @xmath7 , we can easily check this .",
    "consequently , @xmath64 is polynomial - time reducible to @xmath7 .",
    "[ t:4 ] if @xmath8 is a constraint language over @xmath9 that contains all unary relations , then @xmath83 is conservative .",
    "let @xmath84 .",
    "if a function @xmath85 preserves the predicate @xmath86 , then @xmath87 .",
    "let @xmath88 be an arbitrary conservative function and @xmath89 . define the function @xmath90 , such that @xmath91 , i.e. the restriction of @xmath78 to the set @xmath92 . throughout this paper we will consider a conservative algebra @xmath58 .",
    "for every @xmath93 , let @xmath94 .",
    "then @xmath95 denotes an algebra @xmath96 .",
    "we assume that @xmath40 is closed under superposition and variable change and contains all projections , i.e. , it is _ a functional clone _ , because closing the set @xmath40 under these operations does not change the set @xmath57 .",
    "sometimes we will consider clones as algebras and to describe them we will use the terms ( conservativeness , tractability , np - hardness ) defined for algebras .",
    "all tractable clones , in case @xmath97 , can be easily found using well - known classification of boolean clones @xcite .",
    "[ t : pnew ] the boolean functional clone @xmath27 is tractable if either @xmath98 or @xmath99 , where @xmath100 denote conjunction and disjunction . otherwise , @xmath27 is np - hard .    in the proof of this theorem",
    "we will need the following definition .",
    "[ d : first ] a constraint language @xmath8 over @xmath9 is called a _ maximal tractable _ constraint language",
    "if it is tractable and is not contained in any other tractable languages .",
    "let us identify all maximal tractable constraint languages in the boolean case using posts classification @xcite . from theorems [ t:2 ] , [ t:3 ] , [ t:4 ]",
    "we conclude that every maximal tractable constraint language corresponds to some conservative functional clone . in the case",
    "@xmath101 , there is a countable number of conservative clones : we list them below according to the table on page 76 @xcite . for every row ,",
    "the closure of the predicates given is equal to the set of all predicates preserved under the functions of the corresponding clone .",
    "@xmath102 where @xmath103 .",
    "[ l : post ] the relational clones @xmath104 and @xmath105 are maximal tractable constraint languages .",
    "every other constraint language given in the table , except @xmath106 , is np - hard .",
    "the class @xmath106 is tractable , since it contains only two simple unary predicates @xmath107 and @xmath108 . as we will see later , it can not be maximal since it is included in other tractable constraint languages .",
    "let us prove that @xmath109 is tractable . by theorem [ t:2 ] , it is equivalent to polynomial solvability of @xmath110 , because the class @xmath104 is the closure of this set of predicates .",
    "a proof of this statement can be found in @xcite",
    ". we will give it for completeness .",
    "obviously , @xmath110 is equivalent to the following boolean linear programming task , sets @xmath111 and integer weights @xmath112 given as an input : @xmath113    let us prove that the polyhedron which is given by the same equalities and inequalities as previous , but with @xmath114 replaced by @xmath115 , is integer .",
    "suppose it is not integer and @xmath116 is its extreme point where @xmath117 is not equal to 0 or 1 .",
    "let us define @xmath118 as the minimum of three values @xmath119 , @xmath120 , @xmath121 and two vectors @xmath122 and @xmath123 : @xmath124 if @xmath125 and @xmath126 , @xmath127 , otherwise .",
    "it is easy to see that points @xmath122 and @xmath123 are also in polyhedron , and @xmath128 .",
    "this contradicts the extremeness of @xmath3 .    since the polyhedron is integer we can solve @xmath110 in polynomial time by standard linear programming algorithms",
    "consequently , @xmath129 is tractable .",
    "now let us prove that @xmath105 is tractable , i.e. @xmath130 is polynomial - time solvable .",
    "let an instance of this problem be the sets @xmath131 and integer weights @xmath132 .",
    "by @xmath133 we denote the set of assignments of variables @xmath134 that satisfy the input formula , i.e. such that @xmath135 and @xmath136 .",
    "the graph @xmath137 where @xmath138 can be decomposed into connected components @xmath139 , where @xmath140 .",
    "such a decomposition can be made in @xmath141 steps . if among these components there is a graph with an odd cycle , then , obviously , @xmath142 .",
    "otherwise , the optimization task can be reduced to subtasks for every component .",
    "i.e. , if for some component @xmath143 , then @xmath142 , otherwise : @xmath144 but @xmath145 , and a straightforward algorithm solves every subtask .",
    "so , @xmath105 is tractable .",
    "we first now show that the classes in the table , except @xmath104 , @xmath105 and @xmath106 , are np - hard . since , @xmath146\\wedge \\left [ { x_3   \\le x_2 } \\right ] \\\\   x_1   \\vee x_2   = \\exists x_3 \\left [ { x_3   = 1 } \\right]\\wedge \\left [ { x_3   = x_1   \\vee x_3   = x_2 } \\right ] \\\\   \\overline { x_1 }   \\vee \\overline { x_2 }   = \\exists x_3 \\left [ { x_3   = 0 } \\right]\\wedge \\left [ { x_3   = x_1 x_2 } \\right ] \\\\   x_1   \\vee x_2   = \\exists x_3 \\left [ { x_3   = 1 } \\right]\\wedge \\left [ { x_3   = x_1   \\vee x_2 } \\right ] \\\\   \\overline { x_1 }   \\vee \\overline { x_2 }   = \\exists x_3 \\dots x_m \\left [ { x_1 x_2 \\dots x_m   = 0 } \\right]\\wedge \\left [ { x_2   = x_3 } \\right]\\wedge \\dots\\wedge \\left [ { x_{m - 1 }   = x_m } \\right ] \\\\   x_1   \\vee x_2   = \\exists x_3 \\dots x_m \\left [ { x_1   \\vee x_2   \\vee \\dots \\vee x_m   = 1 } \\right]\\wedge \\left [ { x_2   = x_3 } \\right]\\wedge \\dots\\wedge \\left [ { x_{m - 1 }   = x_m } \\right ] \\\\   \\end{array}\\ ] ] we see that @xmath147 , @xmath148 , @xmath149 and @xmath150 , @xmath151 , @xmath152 .",
    "we first prove that @xmath153 is np - hard .",
    "suppose an instance of this problem consists of an undirected graph @xmath154 where each vertex is considered as a variable .",
    "for each pair of variables @xmath155 , we require their assignments to satisfy @xmath156 or @xmath157 . it is easy to see that for any such assignment @xmath5 , the set @xmath158 is independent in the graph @xmath159 .",
    "furthermore , for any independent set @xmath92 in the graph @xmath159 , @xmath160 $ ] is a satisfying assignment .",
    "if we define @xmath161 for @xmath162 , then @xmath1 is equivalent to finding a maximum independent set .",
    "this implies that @xmath153 is np - hard , since finding independent sets of maximal size is an np - hard problem .",
    "the case @xmath163 is analogous .",
    "therefore , @xmath164 , @xmath165 , @xmath166 , @xmath167 , @xmath168 , @xmath169 , @xmath151 , @xmath170 are np - hard , too .",
    "it remains to prove np - hardness of @xmath171 .",
    "we show that using an algorithm for @xmath172 as an oracle , we can solve max - cut in polynomial time .",
    "let @xmath173 be a graph and introduce variables @xmath174 .",
    "a system of equations @xmath175 can be viewed as an instance of @xmath172 .",
    "it is easy to see that arbitrary boolean vector @xmath176 defines a single solution @xmath177 of the system .",
    "vector @xmath178 can be considered as the cut @xmath179 and the value @xmath180 is equal to the doubled cost of the cut .",
    "then max - cut is polynomially reduced to solving @xmath181 .",
    "only two classes @xmath104 and @xmath105 are left as candidates for maximality . since they are not included in each other , they are both maximal .",
    "[ l : post2 ] if a constraint language @xmath182 is contained in neither @xmath104 nor @xmath105 , then it is np - hard .",
    "suppose we are given a constraint language @xmath92 which is not contained in @xmath104 and @xmath105 .",
    "then , @xmath183 is not contained in @xmath104 and @xmath105 , either .",
    "since @xmath183 is a boolean conservative relational clone , then , by previous lemma , it is np - hard . by theorems [ t:2 ] and [ t:3 ]",
    ", we conclude that @xmath92 is np - hard .",
    "the bases in the clones @xmath184 are @xmath185 and @xmath186 and the theorem follows from lemma [ l : post2 ] .",
    "every 2-element subalgebra of a tractable algebra must be tractable , which motivates the following definition .",
    "[ d : first ] let @xmath40 be a conservative functional clone .",
    "we say that @xmath40 satisfies the _ necessary local conditions _ if and only if for every 2-element subset @xmath187 , either    * there exists @xmath188 s.t .",
    "@xmath189 and @xmath190 are different binary commutative functions ; or * there exists @xmath191 s.t .",
    "@xmath192 .",
    "[ t:6 ] suppose @xmath40 is a conservative functional clone .",
    "if @xmath40 is tractable , then it satisfies the necessary local conditions .",
    "if @xmath40 does not satisfy the necessary local conditions , then it is np - hard .    since for every two - element subset @xmath93 , @xmath193 , then @xmath194 is tractable .",
    "assume without loss of generality that @xmath195 . from theorem [ t : pnew",
    "] , we get that @xmath196 or @xmath197 .",
    "@xmath198 is a pair of different commutative conservative functions and @xmath199 .    in general ,",
    "the necessary local conditions are not sufficient for tractability of a conservative clone .",
    "let @xmath200 and @xmath201 .",
    "suppose @xmath191 .",
    "by @xmath202 we mean @xmath203 and @xmath204 .",
    "for example , @xmath205 means that @xmath206 .",
    "introduce an undirected graph without loops @xmath207 where @xmath208 and @xmath209 .",
    "the core result of the paper is the following .",
    "[ t:7 ] suppose @xmath40 satisfy the necessary local conditions . if the graph @xmath207 is bipartite , then @xmath40 is tractable . otherwise , @xmath40 is np - hard .",
    "the proof of this theorem will be given in two steps .",
    "firstly , in the following section , we will prove np - hardness of @xmath40 when @xmath207 is not bipartite .",
    "the final sections will be dedicated to the polynomial - time solvable cases .",
    "in this section , we will prove that if a set of functions @xmath40 satisfies the necessary local conditions and @xmath207 ( as defined in the previous section ) is not bipartite , then @xmath40 is np - hard",
    ". let @xmath210 and @xmath211 denote the predicates @xmath212 and @xmath213 , where @xmath214 .",
    "we need the following lemmas .",
    "[ l:1 ] a constraint language that contains @xmath215 is np - hard .    before proving lemma [ l:1 ] , we need to introduce some concepts from graph theory .",
    "all graphs are assumed to be undirected and without loops .",
    "we will be interested in the complexity of finding independent sets of maximal size in classes of graphs .",
    "let a finite number of graphs @xmath216 be given and let @xmath217 denote the set of graphs that has no induced subgraphs isomorphic to one of @xmath216 .",
    "the following theorem has been proved by alekseev@xcite .",
    "[ t:8 ] if there is no graph among @xmath216 whose every connected component is a tree with at most 3 leaves , then the maximum independent set problem is np - hard when restricted to graphs in @xmath217 .",
    "[ d : first ] the graph @xmath173 is said to be _ homomorphic _ to the graph @xmath218 if there is a mapping @xmath219 such that @xmath220 .",
    "the mapping @xmath5 is called an _",
    "@xmath27-homomorphism_.    let @xmath221 be a cycle of length @xmath222 .",
    "[ t:9 ] if @xmath223 is odd , then the problem of finding a maximum independent set in an undirected graph homomorphic to @xmath221 is np - hard even if a @xmath221-homomorphism is given .",
    "first , we will prove np - hardness of finding maximum independent sets in a graph homomorphic to @xmath224 , i.e. three - partite graph , following @xcite .",
    "an instance consists of a graph and a partitioning into three independent sets .",
    "let @xmath225 be a class of graphs with degrees not greater than 3 .",
    "this class can be characterized by forbidden subgraphs  it is sufficient to forbid graphs with 5 vertices that has a vertex connected with 4 others .",
    "obviously , every such graph is connected and if it is a tree it has 4 leaves . by theorem [ t:8 ]",
    "we conclude that finding maximum independent sets is np - hard in the class @xmath225 .    from brooks theorem@xcite",
    ", we have that every graph in @xmath225 , besides the complete graph on 4 vertices , is three - partite .",
    "the required partition can be constructed in polynomial time by an algorithm of lovasz@xcite .",
    "therefore , the problem of finding maximum independent sets in a three - partite graph is np - hard even if a partition is given .",
    "the case when @xmath226 can be reduced to every odd case @xmath227 .",
    "let a three - partite graph be given .",
    "we will define it in the following form : @xmath228 , where @xmath229 . transform @xmath159 as follows :",
    "for each edge @xmath230 , add vertices @xmath231 to the graph , delete the edge @xmath232 , and add edges @xmath233 .",
    "the obtained graph @xmath234 is , obviously , homomorphic to @xmath221 .",
    "let @xmath235 denote the independence numbers of @xmath159 and @xmath234 respectively .",
    "it is easy to see that @xmath236 .",
    "we prove that we actually have equality there .",
    "note that intersection of any maximum independent set of @xmath234 and @xmath237 contains not less than @xmath238 , and not more than @xmath239 elements . in the first case(@xmath238 ) , we can delete all elements @xmath240 from the independent set and replace them by @xmath241 , while not destroying independency . in the second case(@xmath239 ) , either @xmath242 or @xmath3 are always in the independent set .",
    "again , we delete @xmath240 from it . in the case where @xmath242 was in the independent set originally ,",
    "we replace the deleted elements by @xmath243 and otherwise by @xmath244 . as a result",
    ", we obtain independent set of @xmath234 with the same cardinality as initially .",
    "this operation can be done with all pairs @xmath245 .",
    "it is easy to see that intersection of the obtained set with @xmath246 is an independent set in @xmath159 and it has cardinality @xmath247 .",
    "consequently , @xmath248 and the constructed intersection is a maximum independent set in @xmath159 . the steps of construction can be carried in polynomial time .",
    "thus , by finding a maximum independent set in @xmath234 , we can easily reconstruct that of @xmath159 .",
    "this means that the maximum independent set problem in a three - partite graph is polynomial - time reducible to the maximum independent set problem in a graph homomorphic to @xmath221(with given homomorphism ) .",
    "we show that finding a maximum independent set in a graph homomorphic to @xmath249 can be reduced to @xmath7 where @xmath250 .",
    "suppose the task is to find a maximum independent set in a graph homomorphic to @xmath249 , which , for convenience , will be given in the following form : @xmath251 , where @xmath252 denotes @xmath253 .",
    "we consider every vertex @xmath254 as a variable and require values of variables @xmath255 to satisfy the constraint @xmath256 .",
    "the set of satisfying assignments is denoted by @xmath257 .",
    "it is easy to see that @xmath258 therefore , the task @xmath259 } } \\ ] ] is equivalent to finding a maximum independent set in the graph @xmath159 .",
    "i.e. , it is equivalent to the @xmath260 problem with an instance consisting of the defined constraints on the variables @xmath261 and weights @xmath262",
    ". consequently , @xmath260 is np - hard .",
    "[ l:2 ] if @xmath263 , then either @xmath264 , or @xmath265 .",
    "we begin by constructing functions @xmath266 such that @xmath267 .",
    "the symbol @xmath268 means that either @xmath269 , or @xmath270 is a projection .    since @xmath271",
    ", we have @xmath272 .",
    "moreover , by the definition of @xmath273 , we have @xmath274 . by defining @xmath275",
    ", we see that @xmath267 .",
    "suppose @xmath276 .",
    "we prove that in this case @xmath265 . since the predicate @xmath277 consists of three pairs , it is not preserved by some function of arity two or three .",
    "let us consider these two cases :    i. a function @xmath278 of arity two does not preserve @xmath277 if ( for some appropriate permutation of variables ) : @xmath279 then @xmath280 which contradicts that @xmath263 .    \\ii .",
    "a function @xmath278 of arity three does not preserve @xmath277 if ( for some appropriate permutation of variables ) : @xmath281 then , @xmath282 , since , otherwise , we can find @xmath283 and construct the following term @xmath284 .",
    "this contradicts that @xmath263 .",
    "suppose instead that @xmath285 , i.e. , there is a function @xmath191 of arity two that does not preserve @xmath211 .",
    "if @xmath5 does not preserve @xmath211 , then it does not preserve either @xmath277 , or @xmath286 .",
    "since @xmath287 , we get a contradiction in both cases via the same argument as in case i.    for binary predicates @xmath288 , let @xmath289 . obviously , if @xmath290 , then @xmath291 , too .",
    "since @xmath207 is not bipartite , we can find a shortest odd cycle in it , i.e. a sequence @xmath292 , such that @xmath293 .",
    "here , @xmath252 denotes @xmath294 .    by lemma [ l:2 ] ,",
    "there is a cyclic sequence @xmath295 such that @xmath296 is either equal to @xmath297 or equal to @xmath298 .",
    "note that all predicates can not be of the second type : otherwise , we have @xmath299 which contradicts that @xmath300 .",
    "if the sequence contains a fragment @xmath301 , @xmath302 , @xmath303 , then these predicates can be replaced by : @xmath304 let us replace @xmath305 , @xmath306 , @xmath307 by @xmath308 in the sequence @xmath309 .",
    "we have @xmath310 , since otherwise the predicate @xmath311 is not preserved .",
    "hence , we can delete two vertices in the cycle @xmath312 .",
    "this contradicts that this sequence is the shortest among odd sequences .",
    "therefore , such a fragment does not exist .",
    "if the sequence contains a fragment @xmath313 , @xmath314 , @xmath315 , then these predicates can be replaced by : @xmath316 as in the previous case , we obtain a contradiction . consequently , we have an odd sequence @xmath317 . by lemma [ l:1 ] , this class of predicates is np - hard .",
    "the necessary local conditions tell that every two - element subalgebra of a tractable algebra contains certain operations .",
    "the simplest algebras over a domain @xmath9 that satisfy these conditions are the following : @xmath318 where @xmath319 are conservative commutative operations such that @xmath320 for every @xmath321 , and @xmath322 where @xmath323 is a conservative arithmetical operation , i.e. @xmath324 .",
    "this leads us to the following definitions .",
    "[ d : first ] suppose a set of operations @xmath27 over @xmath325 is conservative and @xmath326 . a pair of binary operations @xmath327 is called a _ tournament pair _ on @xmath10 , if @xmath328 and for arbitrary @xmath329 , @xmath330 .",
    "an operation @xmath331 is called _ arithmetical _ on @xmath10 , if @xmath332 .",
    "[ d : first ] an operation @xmath333 , satisfying the equality @xmath334 is called a majority operation .",
    "[ t:11 ] if @xmath40 satisfies the necessary local conditions and @xmath207 is bipartite , then @xmath40 contains a tournament pair on @xmath335 .",
    "let @xmath336 denote a partitioning of the bipartite graph @xmath207 .",
    "then , for every @xmath337 , there is a function @xmath338 .",
    "let us prove by induction that for every @xmath339 , there is a @xmath340 .",
    "the base of induction @xmath341 is obvious .",
    "let @xmath342 be given . by the induction hypothesis ,",
    "there are @xmath343 .",
    "then , it is easy to see that @xmath344 which completes the induction proof .",
    "the analogous statement can be proved for @xmath345 .",
    "moreover , @xmath346 .",
    "so it follows from the proof that there are binary operations @xmath347 , such that @xmath348 and @xmath349 .",
    "thus , the operations @xmath350 and @xmath351 satisfy the conditions of theorem .",
    "the proof of the following theorem uses ideas from @xcite .",
    "[ t:12 ] if @xmath40 satisfies the necessary local conditions and @xmath352 , then @xmath40 contains an arithmetical operation on @xmath353 .",
    "note first that for every @xmath354 , @xmath194 can not contain any commutative binary function . to see this ,",
    "assume that @xmath355 and note that @xmath194 contains @xmath356 and either conjunction or disjunction . from post",
    "s results @xcite , we see that @xmath194 contains all boolean functions preserving 0 and 1 , i.e. , contains both conjunction and disjunction .",
    "this contradicts that @xmath357 .",
    "therefore , every binary function in @xmath194 is a projection .    for @xmath358 ,",
    "let @xmath359 be an arithmetical function on @xmath10 ; existence of this function follows from the necessary local conditions .",
    "assume now that @xmath360 .",
    "we prove by induction that for every @xmath361 , @xmath40 contains a function @xmath362 that is arithmetical on @xmath363 .    when @xmath364 , @xmath365 and the statement is obviously true .",
    "suppose it is true for @xmath366 and that we have the function @xmath367 .",
    "let us prove the statement for @xmath368 .",
    "if @xmath369 is arithmetical on @xmath370 , then we define @xmath371 and the statement is proved .",
    "otherwise , one of the following three statements is true @xmath372,\\ ] ] @xmath373,\\ ] ] @xmath374.\\ ] ]    suppose the first case holds ( the proof for other cases is analogous ) , i.e. @xmath375 is the @xmath376-projection .",
    "it is easy to see that the function @xmath377 is arithmetical on @xmath378 .",
    "induction completed and it is clear that @xmath379 satisfies the condition of theorem .",
    "[ t:13 ] if @xmath40 satisfies the necessary local conditions and @xmath207 is bipartite , then @xmath40 contains a majority operation @xmath380 .",
    "if @xmath352 , then by theorem [ t:12 ] , @xmath40 contains a function @xmath381 that is arithmetical on @xmath353 . then the function @xmath382 satisfies the conditions @xmath383 .",
    "it is clear that , in the case where @xmath384 , we can take @xmath385 as majority @xmath380 .",
    "if @xmath386 , then by theorem [ t:11 ] , there is a tournament pair @xmath387 on @xmath335 .",
    "then , the function @xmath388 satisfies conditions @xmath389 , and @xmath390 .",
    "if @xmath391 , then we can take @xmath392 as the majority @xmath380 .    finally , if @xmath393 , then @xmath394 .",
    "every predicate in @xmath41 , when @xmath40 contains a majority operation , is equal to the join of its binary projections @xcite . to prove theorem [ t:7 ] , it is consequently sufficient to prove polynomial - time solvability of @xmath395 where @xmath396 , i.e. the @xmath1 problem restricted to binary constraint languages .",
    "[ d : first ] suppose we are given a constraint language @xmath8 over @xmath9 .",
    "denote by @xmath397 the following minimization problem :    * instance : * a finite set of variables @xmath398 , a constraints pair @xmath399 where @xmath400 , @xmath401 , @xmath402 , and weights @xmath403 .",
    "* solution : * assignment @xmath21 , such that @xmath404 and @xmath405 .    *",
    "measure : * @xmath23 .    we suppose everywhere that @xmath406 ( where @xmath407 ) .",
    "if @xmath408 , then we can always define @xmath409 , which does not change the set @xmath410 . for a binary predicate @xmath411 , define projections @xmath412 and @xmath413 .",
    "[ d : first ] an instance of @xmath397 with constraints pair @xmath400 , @xmath401 is called _ arc - consistent _ if @xmath414 and is called _ path - consistent _ if for each different @xmath415 .",
    "obviously , by applying operations @xmath416 , @xmath417 , @xmath418 , @xmath419 , @xmath420 , we can always make an instance arc - consistent and path - consistent in polynomial time .",
    "it is clear that under this transformations the set of feasible solutions does not change .",
    "[ d : first ] the _ microstructure graph _ @xcite of an instance of @xmath397 with constraints pair @xmath400 , @xmath401 is the graph @xmath421 , where @xmath422 and @xmath423 .",
    "[ t : vvg ] let @xmath424 be a satisfiable instance of @xmath397 . then there is a one - to - one correspondence between maximal - size cliques of @xmath425 and satisfying assignments of @xmath426 .",
    "the microstructure graph of an instance with constraints pair @xmath400 , @xmath401 is , obviously , @xmath55-partite , since @xmath427 and pairs @xmath428 are not connected .",
    "therefore , the cardinality of a maximal clique of @xmath421 is not greater than @xmath55 .    if the cardinality of a maximal clique @xmath429 is @xmath55 , then , for every @xmath430 , @xmath431 .",
    "then , denoting the only element of @xmath432 by @xmath433 , we see that the assignment @xmath434 satisfies all constraints .",
    "the opposite is also true , i.e. , if the constraints @xmath435 can be satisfied by some assignment @xmath5 , then @xmath436 is a clique of cardinality @xmath55 .",
    "hence , @xmath397 can be reduced to finding a maximal - size clique @xmath429 of a microstructure graph that minimizes the following value : @xmath437    [ d : first ] let @xmath438 ( minimal weight among maximal - size cliques ) denote the following minimization problem :    * instance : * a graph @xmath173 and weights @xmath439 .",
    "* solution : * a maximal - size clique @xmath440 of @xmath159 .    *",
    "measure : * @xmath441 .",
    "the following theorem connects perfect microstructure graphs and the complexity of @xmath1 .",
    "[ t : perfect ] suppose we are given a class of conservative functions @xmath40 containing a majority operation .",
    "if the microstructure graph is perfect for arbitrary arc - consistent and path - consistent instances of @xmath442 , then @xmath40 is tractable .",
    "recall that a graph @xmath173 is called perfect if for every induced subgraph the chromatic number is equal to the clique number .    for a graph @xmath173 , the following polytope",
    "is called the _ fractional stable set polytope _ :    @xmath443    by a well - known theorem of lovasz@xcite , a graph @xmath173 is perfect if and only if its fractional stable set polytope equals the convex hull of the characteristic vectors of independent sets in @xmath159 . by the vertex packing problem we mean the weighted version of maximum independent set .",
    "it is easy to see that vertex packing in perfect graphs is equivalent to optimizing a linear function over the fractional stable set polytope .",
    "there is a polynomial algorithm for solving the vertex packing in perfect graphs@xcite . using well - known results@xcite about polynomial equivalence between the separation and optimization of linear function on polytopes",
    "we obtain that there is a polynomial algorithm that takes a perfect graph @xmath173 , a rational vector @xmath444 as input , and checks whether the vector is in the fractional stable set polytope of @xmath159 or not . if not , it finds a hyperplane ( given by rational vectors ) that separates @xmath444 from the polytope .",
    "therefore , there exists a polynomial separation algorithm for the fractional stable set polytope of a perfect graph with addition of the following equality : @xmath445 where @xmath446 is independence number of the given graph @xmath159 .",
    "that is , we have a polynomial algorithm for the following task :    @xmath447    it is easy to see that this task coincides with mmclique for the complement of @xmath159 . since the complement of a perfect graph is perfect , mmclique for perfect graphs is polynomial - time solvable , too .    [",
    "d : first ] a cycle @xmath249 , @xmath448 , is called _ an odd hole _ and its complement graph _ an odd antihole_.    in section 8 we will use the following conjecture of berge , which was proved in @xcite .",
    "[ t:14 ] a graph is perfect if and only if it does not contain an induced subgraph isomorphic to an odd hole or antihole .",
    "we say that a graph is _ of type _",
    "@xmath449 if it is isomorphic to the graph with vertex set @xmath450 , where vertices @xmath451 , @xmath452 are not connected and vertices @xmath451 , @xmath453 are connected .",
    "other pairs can be connected arbitrarily .",
    "obviously , every odd hole or antihole is of one of types @xmath449 .",
    "the key idea for the proof of the polynomial case of theorem [ t:7 ] is to show that path- and arc - consistent instances of @xmath442 have a perfect microstructure graph .",
    "we will prove this by showing that the microstructure graph forbids certain types of subgraphs .",
    "the exact formulation of the result can be found below in theorem [ t:16 ] .",
    "this theorem uses the nonexistence of structures called _ arithmetical deadlocks _ which are introduced in this section .",
    "[ d : first ] suppose @xmath27 is a conservative set of functions over @xmath325 , @xmath331 is an arithmetical operation on @xmath326 and a pair @xmath327 is a tournament pair on @xmath454 .",
    "an instance of @xmath455 with constraints pair @xmath400 , @xmath401 is called _ an odd arithmetical deadlock _ if there is a subset @xmath456 of odd cardinality and @xmath457 , such that for @xmath458 : @xmath459 , where @xmath252 denotes @xmath460 .",
    "the subset @xmath461 is called _ a deadlock subset_.    [ t:15 ] suppose @xmath27 is a conservative set of functions over @xmath325 , @xmath331 is an arithmetical operation on @xmath326 and a pair @xmath327 is a tournament pair on @xmath454 .",
    "if an instance of @xmath455 is arc- and path - consistent , then it can not be an odd arithmetical deadlock .",
    "we will begin by introducing some technical concepts from the theory of @xmath0 which we will need in the proof of theorem [ t:15 ] .",
    "an algebra @xmath60 is said to be _ of type @xmath462 _ if its operations are indexed by elements of the set @xmath462 , called terms . for every @xmath463 , the corresponding operation is denoted by @xmath464 .",
    "the universe of an algebra @xmath465 is denoted by @xmath466 .",
    "recall that @xmath467 .",
    "[ d : first ] let a finite set of indexes @xmath426 be given and every index @xmath468 corresponds to some algebra @xmath465 of type @xmath462 .",
    "_ a set of indexed multi - domain predicates over @xmath469 _ is a pair @xmath470 , where for each @xmath430 and @xmath471 , @xmath472 is a subalgebra of @xmath465 and @xmath473 is a subalgebra of @xmath474 .",
    "we assume that @xmath406 .",
    "[ d : first ] a set of indexed multi - domain predicates @xmath470 over @xmath469 is called _ arc - consistent _ if for distinct @xmath475 .",
    "[ d : first ] a set of indexed multi - domain predicates @xmath470 over @xmath469 is called _ path - consistent _ if for any distinct @xmath476",
    ".    introduce the notation @xmath477 .",
    "[ d : first ] assume that algebras @xmath469 are of type @xmath462 , that they are conservative , and @xmath478 . a term @xmath479 is called _",
    "arithmetical on @xmath480 _ , if for any @xmath468 @xmath481 is arithmetical on @xmath482 .",
    "a pair of terms @xmath483 is called _ a tournament pair on @xmath480 _ , if for any @xmath468 a pair @xmath484 is a tournament pair on @xmath482 .",
    "we now generalize the notion of an _ odd arithmetical deadlock _ to multi - domain constraints .",
    "[ d : first ] assume that algebras @xmath469 are of type @xmath462 , that they are conservative , and @xmath478 . furthermore , assume @xmath479 is an arithmetical term on @xmath480 and a pair @xmath483 is a tournament pair on @xmath485 .",
    "then , the set of indexed multi - domain predicates @xmath470 over @xmath469 is called an _ odd arithmetical deadlock _ if there is a subset @xmath486 of odd cardinality and @xmath487 , such that for @xmath488 : @xmath489 , where @xmath252 denotes @xmath490 .",
    "the subset @xmath491 is called a _ deadlock subset_.    we will now prove the following theorem , which is a generalization of theorem [ t:15 ] .    [ t:152 ] suppose @xmath479 is an arithmetical term on @xmath480 , and a pair @xmath483 is a tournament pair on @xmath485 .",
    "if a set of indexed multi - domain predicates @xmath470 over @xmath469 is arc- and path - consistent , then it can not be an odd arithmetical deadlock .",
    "any instance of @xmath455 can be considered as a set of indexed multi - domain predicates over @xmath469 where @xmath426 is a set of variables and @xmath492 . by defining @xmath493",
    "we see that theorem [ t:15 ] is a special case of theorem [ t:152 ] . before proving theorem [ t:152 ] , we need to prove some preliminary lemmas .",
    "recall that a congruence of an algebra @xmath60 is an equivalence relation on @xmath9 that is a subalgebra of @xmath494 .",
    "if @xmath495 is a congruence of @xmath60 and @xmath496 , then equivalence class of @xmath495 containing @xmath4 is denoted by @xmath497 .",
    "if for each @xmath498 , @xmath499 is a congruence of @xmath500 , then @xmath501 and @xmath502 , which we view as subalgebras of @xmath503 and @xmath504 .",
    "[ l:3 ] let @xmath505 be a congruence of @xmath465 for each @xmath468 and assume that a set of indexed multi - domain predicates @xmath470 over @xmath469 is arc- and path - consistent .",
    "then a set of indexed multi - domain predicates @xmath506 over @xmath507 is arc- and path - consistent , too .",
    "let @xmath508 be natural homomorphisms , i.e. , @xmath509 . obviously , @xmath510 and @xmath511 = \\left\\ { { n_k \\left ( x \\right)|x \\in \\pr _ 1 \\rho _ { kl } } \\right\\ } = \\pr _ 1 \\rho _ { kl } /\\theta",
    "analogously , we can prove that @xmath512 = \\pr _ 2 \\rho _ { kl } /\\theta _ l $ ] .    from arc - consistency",
    "it follows that @xmath513 , and we have @xmath511 = \\rho _ k /\\theta _ k , \\pr _ 2 \\left [ { \\rho _ { kl } /\\left ( { \\theta _ k   \\times \\theta _ l } \\right ) } \\right ] = \\rho _ l /\\theta _",
    "this is equivalent to arc - consistency of the set @xmath506 .",
    "the path - consistency condition @xmath514 gives us : @xmath515    this is equivalent to path - consistency of @xmath516 and @xmath517 .    for @xmath518 , let @xmath519 and @xmath520 .",
    "[ l:4 ] suppose algebras @xmath521 of type @xmath462 are conservative and @xmath522 .",
    "furthermore , assume that @xmath479 is an arithmetical term on @xmath523 , and a pair @xmath483 is a tournament pair on @xmath524",
    ". if @xmath34 is a subalgebra of @xmath525 and there are @xmath526 , such that @xmath527 , then @xmath528 and @xmath529 .",
    "suppose , for example , that @xmath530 .",
    "then , if @xmath531 , we have :    @xmath532    if @xmath533 , then there is a @xmath534 where either @xmath535 or @xmath536 and",
    "we have :    @xmath537    now we see that @xmath528 ( analogously @xmath529 )",
    ".    for @xmath518 , @xmath538 and @xmath539 denote the transitive closures of @xmath540 and @xmath541 respectively .",
    "[ l:5 ] suppose algebras @xmath521 of type @xmath462 are conservative and @xmath522 .",
    "suppose also that @xmath479 is arithmetical term on @xmath523 , and a pair @xmath483 is a tournament pair on @xmath524 . if @xmath34 is a subalgebra of @xmath525 and there are @xmath526 , such that @xmath542 , then @xmath543 .",
    "note that for @xmath544 , the equivalence class @xmath545 can be obtained by the following procedure : @xmath546 , @xmath547 , @xmath548 , @xmath549 and so on .",
    "the resulting equivalence class is @xmath550 .",
    "consider this process for elements @xmath551 and denote the corresponding sets by @xmath552 and @xmath553 .",
    "we prove by induction that @xmath554 and @xmath555 is a congruence of @xmath556 , if @xmath557 is odd , or of @xmath558 , if @xmath557 is even .",
    "base of induction .",
    "obviously , @xmath559 .",
    "since @xmath560 is a subalgebra of @xmath561 , we see that @xmath562 is a congruence of @xmath563 .",
    "suppose the assertion is true for @xmath564 .",
    "consider the case when @xmath557 is even ( the odd case is analogous ) .",
    "let @xmath565 .",
    "clearly , @xmath566 is a subalgebra of @xmath567 and from @xmath568 we have @xmath569    a pair of algebras @xmath570 of type @xmath462 obviously satisfy conditions of lemma [ l:4 ] . since @xmath571 and @xmath572",
    ", we have @xmath573 from lemma [ l:4 ] we see that @xmath574 which is equivalent to @xmath575 .    from the emptiness of this intersection , we conclude that the predicate @xmath576 is a congruence and equals to @xmath577 , and the induction is completed .    [ l:6 ] suppose @xmath60 is three - element algebra containing an operation @xmath578 that is arithmetical on @xmath579 .",
    "then , there can not be two different nontrivial(i.e .",
    "not equal to @xmath580 or @xmath581 ) congruences of this algebra .",
    "we give a proof by contradiction . without loss of generality",
    "we can assume that @xmath582 and @xmath583 , @xmath584 .",
    "since @xmath585 preserve @xmath586 , we have : @xmath587 preservation of @xmath588 leads to contradiction : @xmath589    suppose to the contrary that there exists a set of indexed multi - domain predicates that is an odd arithmetical deadlock .",
    "we can assume that @xmath590 and @xmath591 , such that @xmath592 , where @xmath252 denotes @xmath593 .",
    "consider the predicates @xmath594 and @xmath595 .",
    "let @xmath596 and @xmath597 denote congruences @xmath598 consistently .",
    "by lemma [ l:5 ] , @xmath599 . obviously , @xmath600 and @xmath601 .",
    "therefore , we conclude that @xmath602    let us show that @xmath603 and @xmath604 .",
    "suppose to the contrary that the first one is false ( the other case is absolutely analogous ) , i.e. @xmath605 . from @xmath606 , we see that @xmath607 .",
    "but , from @xmath608 , we conclude that @xmath609 .",
    "consider the three - element algebra @xmath610 .",
    "the congruences @xmath611 , @xmath612 restricted to that algebra are equal to @xmath613 and @xmath614 , since , by lemma [ l:5 ] , @xmath599 and @xmath615 .",
    "it is easy to see that the three - element conservative algebra @xmath610 with @xmath616 has such congruences only if @xmath323 is arithmetical on @xmath617 .",
    "this contradicts lemma [ l:6 ] .    from @xmath603 and @xmath604",
    ", we conclude that @xmath618 therefore , changing a system of one - type algebras @xmath619 to @xmath620 where @xmath621 we obtain , by lemma [ l:3 ] , an arc- and path - consistent set of indexed predicates @xmath622 .",
    "the resulting set of predicates will be an odd arithmetical deadlock , too .",
    "analogously , we can prove that changing a system of one - type algebras @xmath619 to @xmath620 , where @xmath623 result in an arc- and path - consistent set of indexed predicates @xmath622 , which will be an odd arithmetical deadlock .    by using those transformations for different @xmath557 successively",
    ", we eventually obtain an arc- and path - consistent @xmath624 , such that @xmath625 and @xmath626 and @xmath627 .",
    "we show that there is no such set .    from path - consistency",
    "we conclude that for any @xmath628 : @xmath629 .",
    "hence , @xmath630    since @xmath631 is not empty , we see that @xmath632    however , we have @xmath633 which contradicts that @xmath634 .",
    "[ t:16 ] suppose that @xmath40 satisfies the necessary local conditions and that the graph @xmath207 is bipartite",
    ". then for every path- and arc - consistent instance of @xmath442 , its microstructure graph forbids subgraphs of type @xmath635 .",
    "suppose to the contrary that we have a arc- and path - consistent instance @xmath424 of @xmath636 with constraints pair @xmath400 , @xmath401 and its microstructure graph has a subgraph of type @xmath635 . for convenience ,",
    "let us introduce @xmath637 .",
    "then , there is a set of pairs @xmath638 , such that for @xmath639 : @xmath640 and @xmath641 , where @xmath252 denotes @xmath642 .    from @xmath641 and the path - consistency condition @xmath643",
    ", we see that there is @xmath644 , such that @xmath645 and @xmath646 .",
    "consider the predicate @xmath647 .",
    "obviously , @xmath648 equals to either @xmath649 or @xmath650 .",
    "let us show that if @xmath651 , then @xmath652 , too .",
    "assume to the contrary that @xmath653 .",
    "then , by theorem [ t:11 ] , there is a @xmath654 , where @xmath655 is a projection on the first coordinate . in this case ,",
    "@xmath656 preserves neither @xmath649 nor @xmath650 , because @xmath657    hence , we need to consider two cases only : 1 ) @xmath658 and 2 ) @xmath659 . in the first case",
    ", we have @xmath660 , i.e. , there is an odd cycle in @xmath661 which contradicts that @xmath661 is bipartite .",
    "now , consider the case @xmath659 . by theorem [ t:12 ] ,",
    "there is a function @xmath662 , arithmetical on @xmath353 .",
    "if @xmath663 , then we have that @xmath664 and @xmath665 .",
    "consider the set @xmath666 .",
    "suppose first that all @xmath667 are distinct .",
    "then , theorems [ t:11 ] and [ t:12 ] show us that we have an arithmetical operation @xmath662 on @xmath353 and a tournament pair @xmath668 on @xmath335 .",
    "it is easy to see that an instance of @xmath636 with constraints pair @xmath669 is an odd arithmetical deadlock where @xmath666 is a deadlock set .",
    "this contradicts that @xmath426 is arc- and path - consistent .",
    "the case when the elements @xmath667 are not distinct can be reduced to the previous case by the following trick : introduce a new set of variables @xmath670 and @xmath671 , where @xmath672 . if @xmath673 , then @xmath674 , else @xmath675 .",
    "it is easy to see that an instance with constraints pair @xmath676 satisfy the conditions of theorem [ t:15 ] and is an odd arithmetical deadlock , where the set @xmath677 is a deadlock set .",
    "therefore , we have a contradiction .",
    "the conditions of theorem [ t:7 ] coincides with the conditions of theorem [ t:16 ] so the microstructure graph of an arc- and path - consistent instance forbids subgraphs of type @xmath635 . by theorem [ t:14 ] , it is perfect and , by theorem [ t : perfect ] , we see that the class @xmath40 is tractable",
    ".    theorems [ t:6 ] and [ t:7 ] give the required dichotomy for conservative algebras , which implies the dichotomy for conservative constraint languages . by theorem [ t:3 ] , we have the following general dichotomy .",
    "[ t:17 ] if @xmath7 is not tractable then it is np - hard .",
    "it is possible to reformulate our results in terms of constraint languages .",
    "let @xmath678 denote the predicate @xmath679 where @xmath680 denotes an addition modulo 2 .",
    "for example , @xmath681 .",
    "[ t:18 ] suppose @xmath8 is a constraint language over @xmath9 which is a conservative relational clone , then either    * @xmath682 such that @xmath683 , or * @xmath682 such that @xmath684 , or * @xmath685 such that @xmath686 , or * @xmath8 is tractable .",
    "consider a functional clone @xmath687 and an algebra @xmath688 . recall that the necessary local conditions are equivalent to requiring a conservative algebra to have only tractable 2-element subalgebras .",
    "it is obvious from the proof of lemma [ l : post ] that a conservative algebra @xmath40 with domain set @xmath689 is np - hard if and only if @xmath690 or @xmath691 or @xmath692 .",
    "otherwise , it is tractable . therefore , the necessary local conditions for @xmath687 are equivalent that @xmath693 , @xmath694 and @xmath695 .",
    "suppose @xmath8 has the last two properties , i.e. @xmath687 satisfies the necessary local conditions . as is easily seen from the proof of the np - hard case of theorem [ t:7 ] , @xmath8 is np - hard only if it contains an odd number of predicates @xmath696 .",
    "if we assume that for any @xmath697 this system of predicates is not contained in @xmath8 , then @xmath8 is tractable .",
    "@xmath1 can be viewed as a problem that fits the vcsp ( valued csp ) framework by @xcite . by a valued predicate of arity @xmath323 over a domain @xmath325 , we mean a function @xmath698 .",
    "informally , if @xmath8 is a finite set of valued predicates over a finite domain @xmath325 , then an instance of @xmath699 is a set of variables together with specified subsets of variables restricted by valued predicates from @xmath8 .",
    "any assignment to variables can be considered a solution and the measure of this solution is the sum of the values that the valued predicates take under the assignments of the specified subsets of variables . the problem is to minimize this measure .",
    "it is widely believed that a dichotomy conjecture holds for @xmath699 , too .",
    "our dichotomy result for @xmath1 encourages us to consider generalizations that belong to this framework .",
    "suppose we are given a constraint language @xmath8 and a finite set of unary functions @xmath700 .",
    "let @xmath701 denote a minimization problem which is defined completely analogously to @xmath702 except that we are restricted to minimizing functionals of the following form : @xmath703 .",
    "a complete classification of the complexity of this problem is an open question .    \\2 .",
    "suppose we have a finite valued constraint language @xmath8 , i.e. a set of valued predicates over some finite domain set .",
    "if @xmath8 contains all unary valued predicates , we call @xmath699 a conservative @xmath704 . this name is motivated by the fact that in this case the multimorphisms ( which is a generalization of polymorphisms for valued constraint languages @xcite ) of @xmath8 must consist of conservative functions .",
    "since there is a well - known dichotomy for conservative csps @xcite , we suspect that there is a dichotomy for conservative @xmath705 .",
    "@xmath1 has ( just as csp ) a homomorphism formulation .",
    "if we restrict ourselves to relational structures given by digraphs , we arrive at the following problem which we call digraph @xmath1 : given digraphs @xmath706 and weights @xmath707 , find a homomorphism @xmath708 that minimizes the sum @xmath709 .",
    "suppose we have sets of digraphs @xmath710 .",
    "then , @xmath711 denotes the digraph @xmath1 problem when the first digraph is from @xmath712 and the second is from @xmath713 . in this case",
    ", @xmath714 is always polynomially tractable and @xmath715 coincides with @xmath716 which is characterized in this paper .",
    "another characterization based on digraph theory was announced during the preparation of the camera - ready version of this paper @xcite .",
    "we believe that this approach could be fruitful for characterizing the complexity of @xmath717 : for example , is there a dichotomy for @xmath717 ?",
    "the author wishes to acknowledge fruitful discussions with peter jonsson and andrei bulatov .",
    "alekseev v. on the local restrictions effect on the complexity of finding the graph independence number . , gorkiy university press , 1983 , pp .",
    "313 . baker k. , pixley a. polynomial interpolation and the chinese remainder theorem for algebraic systems . , 1975 , 143 , no .",
    "2 , pp . 165174 . bodnarcuk v.g . ,",
    "kalunin l.a . ,",
    "kotov n.n .",
    ", romov b.a .",
    "galois theory for post algebras . , kiev , 1969 , no .",
    "3 , pp . 110 , no .",
    "5 , pp . 19 .",
    "( in russian ) brooks r. l. on colouring the nodes of a network . , math .",
    ", 1941 , no .",
    "bulatov a. tractable conservative constraint satisfaction problems . , 2003 , pp .",
    "chudnovsky m. , robertson n. , seymour p. , thomas r. the strong perfect graph theorem . , 2006 , no .",
    "cohen d. , cooper m. , jeavons p. an algebraic characterisation of complexity for valued constraints . , 2006 , pp .",
    "feder t. , vardi m. y. the computational structure of monotone monadic snp and constraint satisfaction : a study through datalog and group theory .",
    ", 1999 , no .",
    "28(1 ) , pp .",
    "geiger d. closed systems of functions and predicates .",
    ", 1968 , no .",
    "27 , pp . 95100 .",
    "grotshel m. , lovasz l. , schrijver a. geometric algorithms and combinatorial optimization .",
    "springer - verlag , berlin geidelberg new york , 1988 .",
    "grotshel m. , lovasz l. , schrijver a. relaxations of vertex packing .",
    ", 1986 , series b , no .",
    "40(3 ) , pp .",
    "gupta a. , hell p. , karimi m. , rafiey a. minimum cost homomorphisms to reflexive digraphs . , 2008 .",
    "gutin g. , hell p. , rafiey a. , yeo a. a dichotomy for minimum cost graph homomorphisms .",
    ", 2008 , volume 29 , issue 4 , pp . 900911 .",
    "gutin g. , hell p. , rafiey a. , yeo a. minimum cost and list homomorphisms to semicomplete digraphs .",
    ", 2006 , volume 154 , pp .",
    "gutin g. , rafiey a. , yeo a. , tso m. level of repair analysis and minimum cost homomorphisms of graphs .",
    "154(6 ) , pp . 881889 .",
    "gutin g. , rafiey a. , yeo a. minimum cost homomorphism dichotomy for oriented cycles . , lecture notes in computer science , 2008 , 5034 , pp . 224234 .",
    "jeavons p. on the algebraic structure of combinatorial problems .",
    ", 1998 , no .",
    "200 , 12 , pp . 185204 .",
    "jgou p. decomposition of domains based on the micro - structure of finite constraint satisfaction problems .",
    "proceedings of the 11th national conference on artificial intelligence , 1993 , pp .",
    "boolean constraint satisfaction : complexity results for optimization problems with arbitrary weights . , 2000 , no . 244 , 12 , pp .",
    "khachiyan l. g. polynomial algorithm in linear programming .",
    ", 1980 , no .",
    "5372 . lovasz l. three short proofs in graph theory . , 1975 , series b , no .",
    "marchenkov s.s .",
    "closed classes of boolean functions .",
    "nauka , fizmatlit , moscow , 2000 , 126 pp .",
    "( in russian ) .",
    "post e. the two - valued iterative systems of mathematical logic .",
    ", princeton university press , 1941 , no .",
    "5 . rafiey a. , hell p. duality for min - max orderings and dichotomy for min cost homomorphisms .",
    "schaefer t.j .",
    "the complexity of satisfiability problems . , 1978 ,"
  ],
  "abstract_text": [
    "<S> in the constraint satisfaction problem ( @xmath0 ) , the aim is to find an assignment of values to a set of variables subject to specified constraints . in the minimum cost homomorphism problem ( @xmath1 ) , one is additionally given weights @xmath2 for every variable @xmath3 and value @xmath4 , and </S>",
    "<S> the aim is to find an assignment @xmath5 to the variables that minimizes @xmath6 . </S>",
    "<S> let @xmath7 denote the @xmath1 problem parameterized by the set of predicates allowed for constraints . </S>",
    "<S> @xmath7 is related to many well - studied combinatorial optimization problems , and concrete applications can be found in , for instance , defence logistics and machine learning . </S>",
    "<S> we show that @xmath7 can be studied by using algebraic methods similar to those used for csps . with the aid of algebraic techniques , </S>",
    "<S> we classify the computational complexity of @xmath7 for all choices of @xmath8 . </S>",
    "<S> our result settles a general dichotomy conjecture previously resolved only for certain classes of directed graphs , [ gutin , hell , rafiey , yeo , european j. of combinatorics , 2008 ] .    </S>",
    "<S> rustem takhanov </S>"
  ]
}
{
  "article_text": [
    "the metric that is used for detecting errors hence correcting them afterwards depends on the channel transferring or storing digital data , and the media used where different scenarios take place and different type of errors occur .",
    "the most used and well - known metric is the hamming metric .",
    "a different error type where the sender knows the possible error location but not the error value itself is introduced by bassalygo , gelfand , and pinsker @xcite and later by roth and seroussi in @xcite .",
    "some work on this direction with applications is pursued by the same authors in @xcite , and also by ahlswede , bassalygo , and pinsker in @xcite , and by larsson in @xcite and roth in @xcite .",
    "a new construction method for codes correcting multiple localized burst errors is proposed in @xcite .",
    "another work that distinguishes between errors by prioritizing some cases is presented in @xcite and the performance of such a scheme is verified on the popular h.264/avc codec .",
    "for instance , in some wireless communication systems , headers of the transmitted data such as the frame control , duration and address are more important than the frame body .",
    "this is due the fact that the errors in the headers may cause a rejection of the transmission which makes these positions more important than the others . in order to solve this problem a method called unequal error protection ( uep )",
    "is first introduced by masnik et al .",
    "@xcite .",
    "some recent studies towards this direction are pursued in @xcite and further constructions of such codes are presented and some bounds are studied by kuriata in @xcite .    as seen above one can device a code with the knowledge that some bits due to their location in a codeword could be more vulnerable to the errors or play more important role comparing the other ones . to sort out this phenomena",
    "one may use a poset metric which depends on the position of bits and hence can help on distinguishing between the locations of bits .",
    "further , burst errors are also very common and hence this suggests to combine these two properties and define a new metric which we call @xmath0-spotty poset metric and study the relation between the weight distributions of codes and their duals .",
    "the motivation of this work mainly relies on the very recent studies done on both @xmath0-spotty and poset weight enumerators .",
    "the @xmath0-spotty weights were introduced since they are capable of modelling the errors that frequently appear in flash memory disks as bursts in bytes @xcite . for further information on spotty byte errors",
    "the readers can refer to @xcite . due to this important fact the researchers have been extensively studying its properties and especially macwilliams identities that relate the weight enumerators of codes to their duals . in @xcite ,",
    "@xmath0-spotty weight enumerators of @xmath0-spotty byte error control codes are introduced and the macwilliams identity for m - spotty hamming weight enumerators for binary m - spotty byte error control codes are established . in addition , this generalization includes the macwilliams identity for the hamming weight enumerator as a special case . in @xcite ,",
    "@xmath0-spotty lee weights are introduced and a macwilliams - type identity for m - spotty lee weight enumerators is proved . in @xcite ,",
    "the results obtained in @xcite are extended further to arbitrary finite fields . in @xcite ,",
    "@xmath0-spotty weights and m - spotty weight enumerator of linear codes over the ring @xmath1 are introduced and a macwilliams - type identity is established . later , in @xcite ,",
    "@xmath0-spotty weights for codes over the ring @xmath2 with @xmath3 are introduced and a macwilliams - type identity is also proved . recently , in @xcite , the studies on macwilliams identities for m - spotty byte error control codes have been considered for different metrics .",
    "further , in @xcite , the studies on macwilliams identities for m - spotty byte error control codes have been considered for some new m - spotty weight enumerators and their properties are studied .    on the other hand , studies on poset weight enumerators",
    "are also very recent @xcite . in @xcite , the original problem studied by niederreiter @xcite on optimal parameters of linear codes",
    "is considered in a more general setting of partially ordered sets and in this setting poset - codes are introduced .",
    "niederreiter s setting was viewed as the disjoint union of chains and extended some of niederreiter s bounds and also obtained bounds for posets which are the product of two chains . lately",
    ", poset codes are shown to outperform better then the classical ones while applied in decoding processes @xcite . in @xcite ,",
    "all poset structures that admit the macwilliams identity with respect to ideal based weights are classified , and the macwilliams identities for poset weight enumerators corresponding to such posets are derived .",
    "it is shown that being a hierarchical poset is a necessary and sufficient condition for a poset to admit such a macwilliams type identity @xcite .",
    "an explicit relation is also derived between the poset weight distribution of a hierarchical poset code and the @xmath4 ( dual poset)-weight distribution of the dual code @xcite .",
    "recently , in @xcite , an alternative p - complete weight enumerator of linear codes with respect to poset metric that includes the hierarchical posets consisting of more variables is defined and a macwilliams - type identity is proved .",
    "poset weights also generalize the hamming weights and rosenbloom - tsfasman weights .",
    "the interesting case is the rosenbloom - tsfasman ( rt ) which is a special poset consisting of a single chain .",
    "some work on rt metric over various special finite frobenius rings related to macwilliams identities is done @xcite .    in section [ sec2 ] , some facts and preliminaries that will be referred to in the sequel are presented . in section [ sec3 ] ,",
    "the byte weight enumerator for a linear poset code over frobenius ring is introduced and a macwilliams - type identity is also proven . in section [ sec4 ] ,",
    "the definition of complete m - spotty poset level weight enumerator for a poset code ( @xmath5 code ) @xmath6 over frobenius rings is introduced and a macwilliams - type identity for complete m - spotty poset level weight enumerator is proved . moreover ,",
    "the definition of poset level weight enumerator of binary linear codes is extended to linear codes ( @xcite ) over frobenius rings and a macwilliams - type identity for these weight enumerators is obtained .",
    "also , a new m - spotty weight enumerator which is called m - spotty poset level weight enumerator is introduced and the macwilliams identity with respect to this weight enumerator is also established . in section [ sec5 ] ,",
    "some illustrative examples are given and section [ sec6 ] concludes the paper .",
    "in this section , we state some basic results and definitions . for some terms and detailed information especially regarding frobenius rings ,",
    "the readers are welcome to refer to @xcite .",
    "let @xmath7 be a finite ring and let @xmath8 be a positive integer .",
    "a linear code @xmath6 over @xmath7 is an @xmath9submodule of @xmath10 .",
    "the elements of @xmath6 are referred as codewords . by abuse of terminology , the elements of @xmath10 will be called vectors .    [ byteweightdef1 ]",
    "the @xmath11th bytes @xmath12 of a vector @xmath13 whose index set is partitioned into @xmath14 not necessarily equal parts each of size @xmath15 is defined by @xmath16 where @xmath17    the @xmath18tuple @xmath19 is called the @xmath18level representation of a vector @xmath20 of length @xmath8 such that each @xmath21tuple @xmath12 denotes the part in the @xmath11th level of the vector .    throughout this paper @xmath8 , @xmath12 s and @xmath22 s will be used as in definition [ byteweightdef1 ] .",
    "[ ex31 ] let @xmath23 and @xmath24 and @xmath25 .",
    "then , @xmath26 , @xmath27,@xmath28 with respect to the given poset in figure [ fig100 ] and the @xmath29level @xmath30 representation of @xmath20 is given as @xmath31 .",
    "+    for any two vectors @xmath32 , @xmath33 , the inner product of @xmath20 and @xmath34 is given by @xmath35    given a linear code @xmath36 we define its dual code with respect to the inner product in ( [ 2.1 ] ) as    @xmath37    the hamming weight of a vector @xmath38 , denoted by @xmath39 , is the number of non - zero coordinates of @xmath34 .",
    "the hamming distance , a metric on @xmath10 , between two vectors @xmath20 and @xmath34 is @xmath40 .",
    "the minimum distance of the linear code @xmath6 is the minimal hamming distance between any two distinct codewords of @xmath41 the smallest nonzero hamming weight in a code is called the minimum hamming weight of the code . in linear code case the minimum distance and the minimum hamming weight are equal .",
    "a different metric which is refereed to as the poset metric has been of interest to the algebraic coding theorists pretty recently .",
    "this is a position based metric and it is a generalization of some important metrics such as hamming and rosenbloom - tsfasman metrics .",
    "now we present some basics on the poset metric over @xmath10 .",
    "suppose that @xmath42 is a partially ordered set of size @xmath8 . for all @xmath43 and @xmath44 if @xmath45 then this subset @xmath46 of @xmath47 is called _ an ideal _ of @xmath47 .",
    "if @xmath48 , then @xmath49 is the smallest ideal of @xmath47 containing @xmath50 .",
    "suppose that @xmath51 and the coordinate positions of elements of @xmath52 are labeled by the elements of @xmath47 .",
    "for any vector @xmath53 the @xmath5 weight of @xmath34 is defined by @xmath54 which is the size of the smallest ideal of @xmath47 containing the support of @xmath34 , where @xmath55 .",
    "then naturally the @xmath5distance , a metric on @xmath56 between two vectors @xmath20 and @xmath34 is defined as @xmath57 .",
    "there are two direct observations regarding the poset weight : if @xmath47 is antichain , then the @xmath5 weight is the same as hamming weight .",
    "if @xmath47 consists of a single chain , then @xmath5 weight coincides with rosenbloom - tsfasman ( rt ) weight . if @xmath10 is endowed with a poset metric , then we call a subset @xmath6 of @xmath10 a poset code .",
    "if the poset metric is derived from a poset @xmath47 , then @xmath6 is called a @xmath5code .",
    "@xcite suppose that @xmath6 is a linear p - code of length @xmath8 .",
    "@xmath58 is called the poset weight enumerator of @xmath6 where @xmath59 .",
    "the following example , presented in @xcite , shows that a direct attempt for obtaining a macwilliams identity for poset codes is not possible in general .",
    "[ ex32]@xcite let @xmath60 be a poset with order relation @xmath61 i.e. , a single chain poset .",
    "let @xmath62 and @xmath63 be two binary linear codes with respect to the poset @xmath64 the poset weight enumerators of @xmath65 and @xmath66 are given by @xmath67 .",
    "the dual codes of @xmath65 and @xmath66 are @xmath68 and @xmath69 , respectively .",
    "the p- weight enumerators of the dual codes are given by @xmath70 and @xmath71 .",
    "as seen in the example above , in @xcite the problem to obtain a macwilliams identity is achieved by restricting the structure of the poset to being a hierarchical poset and considering the dual code over the dual poset . in @xcite ,",
    "a complete poset weight enumerator is introduced and a macwilliams identity is obtained for a broaden class of posets including hierarchical posets .",
    "recently , in @xcite , the results obtained in @xcite has been generalized further to the posets that are forests and further both the code and its dual are considered over the same poset .    from now on",
    "we assume that all rings are finite commutative frobenius rings .",
    "we first give the basic definitions and theorems , next we state and prove macwilliams - type identities of new weight enumerators for linear codes over finite commutative frobenius rings .",
    "[ def1 ] a finite ring @xmath7 is said to be a frobenius ring if @xmath72 here , the character group of the additive group of @xmath7 is denoted by @xmath73 .",
    "it is well - known ( cf .",
    "@xcite ) that if @xmath7 is a finite frobenius ring , then @xmath7 and @xmath74 are isomorphic also as left @xmath9modules .",
    "@xcite[examp1 ] the ring of integers modulo @xmath0 ( @xmath75 ) , galois fields and rings , and @xmath76 , the ring of all @xmath77matrices over @xmath7 are examples of frobenius rings .",
    "@xcite[def2 ] a character @xmath78 of @xmath7 is a generating character if the mapping    @xmath79    is an isomorphism of @xmath9modules for all @xmath80 and for all @xmath81    @xcite[theo1 ] let @xmath82 be a character of @xmath83 then @xmath82 is a generating character if and only if the kernel of @xmath82 contains no non - zero ideals .    from definition [ def1 ] ,",
    "a finite ring is frobenius if and only if it admits a generating character .",
    "@xcite[lemma1 ] let @xmath84 be an ideal of @xmath7 and @xmath82 be a generating character of @xmath7 .",
    "then , @xmath85    by lemma [ lemma1 ] and @xmath86 , we obtain the following corollary :    [ corol1 ] suppose that @xmath7 is a ring , with a generating character @xmath87 then ,    @xmath88    the following lemma plays an important role in deriving a macwilliams - type identity for weight enumerators over finite commutative frobenius rings :    [ lemma2 ] let @xmath89 be a function defined on @xmath10 , and let @xmath82 be a generating character on @xmath83 the hadamard transform @xmath90 of @xmath89 is defined by    @xmath91    then , the following relation holds between @xmath92 and @xmath93    @xmath94    where @xmath95 denotes the size of the code @xmath6 .    *",
    "* proof . *",
    "* proof is similar to that of lemma 2 of @xcite .",
    "byte weight enumerators are introduced for hamming metrics due to the burst errors that occur in both transmission or storing data processes . in @xcite ,",
    "codewords with an index partition are introduced and macwilliams identity is proven . in this section",
    "we combine the byte - weight concept with posets .",
    "further , we point out that the definition in @xcite becomes a special case by choosing a special poset .",
    "now we introduce the following weight function that is going to appear in the proof of theorem [ byteweighttheo1 ] .",
    "[ byteweightdef2 ] let @xmath6 be a linear @xmath96code over a poset of size @xmath8 and @xmath14 levels and let @xmath97 .",
    "to each @xmath15-tuple @xmath12 in @xmath98 we define the weight function as follows :    * if @xmath99 , then @xmath100 , * if @xmath101 , then @xmath102    where @xmath103    let @xmath6 be a binary @xmath104code with @xmath24 and @xmath105 .",
    "consider the vector @xmath20 in example [ ex31 ] .",
    "then , @xmath106 .",
    "otherwise @xmath107 .",
    "we are now ready to give the definition of a byte poset level weight enumerator for a linear @xmath96code .",
    "[ byteweightdef3 ] let @xmath6 be a linear @xmath96code over a poset of size @xmath8 and @xmath14 levels .",
    "then the byte poset level weight enumerator of @xmath6 is defined as follows : @xmath108 where @xmath109 , @xmath110 , and    @xmath111    now , we state the macwilliams identity for a linear @xmath96code .",
    "[ byteweighttheo1 ] let @xmath6 be a linear @xmath96code over a poset of size @xmath8 and @xmath14 levels .",
    "then , the relation between the byte poset level weight enumerator of @xmath6 and its dual is given by @xmath112 where @xmath82 is a nontrivial additive character of @xmath7 , @xmath113 and @xmath114 .",
    "we recall lemma [ lemma2 ] that @xmath115 where @xmath116 let @xmath117 and for @xmath38 we take @xmath118 then , @xmath119    for fixed @xmath120 , first we compute @xmath121 . using the definition of @xmath122 in ( [ mufunction ] ) , we obtain @xmath123    we rewrite each vector @xmath20 and @xmath34 in their @xmath18level representation , and we observe that @xmath124 collecting each @xmath22 , @xmath125 under a single sum , we obtain @xmath126 we use the definition of @xmath127 , ( [ characterfunction ] ) , and rewrite each @xmath22 more explicitly under the observation of definition [ byteweightdef2 ] . hence , we obtain @xmath128    recalling that @xmath129 counts the number of @xmath18levels of the codeword @xmath20 that are equal to the @xmath130tuple @xmath131 we obtain    @xmath132 where @xmath133    now by applying the equality ( [ unluteorem ] ) given at beginning of the proof , we obtain the desired result .",
    "in this section , we introduce the definition of complete m - spotty poset level weight enumerator of a linear @xmath96code over frobenius rings and obtain a macwilliams - type identity for the complete poset level weight enumerator .",
    "[ definitioncompleteweight ] let c be a linear @xmath96code over a poset of size @xmath8 and @xmath14 levels .",
    "then the complete poset level weight enumerator of @xmath6 is defined as follows : @xmath134 where @xmath12 denotes the part in the @xmath11th level of a codeword .",
    "let @xmath135 @xmath136 be the hamming weight of the part in the @xmath137th level of a vector @xmath138 and @xmath139 be the hamming weight spectrum vector of @xmath34 .",
    "then , we can express the last equality in an equivalent but different form which can be directly expressed by the parameters @xmath140 and @xmath141 as follows :    @xmath142    where the summation @xmath143 takes over all @xmath144 satisfying @xmath145 for each @xmath137 and @xmath146 denotes the number of codewords in @xmath6 having the hamming weight spectrum vector @xmath140 .    in the following theorem",
    ", we derive a macwilliams - type identity for the complete poset level weight enumerator of a linear @xmath96code .",
    "[ theocomplete ] let @xmath6 be a linear @xmath96code over a poset of size @xmath8 and @xmath14 levels .",
    "then , the relation between the complete poset level weight enumerator of @xmath6 and its dual is given by @xmath147 where @xmath82 is a nontrivial additive character of @xmath7 and the summation @xmath143 takes over all @xmath144 satisfying @xmath145 for each @xmath137 and @xmath146 denotes the number of codewords in @xmath6 having the hamming weight spectrum vector @xmath140 . here",
    ", @xmath148 for @xmath149 and @xmath150 .",
    "set @xmath151 , by lemma [ lemma2 ] , we obtain    @xmath152     +    let @xmath153 be a vector in @xmath154 for @xmath155 , having @xmath156 .",
    "assume that the vector @xmath157 and @xmath153 both have nonzero components at @xmath158 positions out of @xmath135 nonzero positions of @xmath157 , which can be chosen in @xmath159 ways .",
    "by figure [ vedatt ] , the remaining @xmath160 nonzero positions of @xmath153 coincide with the zero positions of @xmath157 , which are @xmath161 in number , and can be chosen in @xmath162 ways .",
    "also @xmath156 , the nonzero entries of @xmath153 appear at @xmath163 positions , say at @xmath164 . then ,    @xmath165    where @xmath166    since both @xmath157 and @xmath153 have non - zero bits at @xmath158 positions , assume that @xmath167 has non - zero bits positions @xmath168 @xmath169 ... , @xmath170 then , we obtain the following equality :    @xmath171    since @xmath82 is a non - trivial generating character , by corollary [ corol1 ] , @xmath172 however , using @xmath173 and @xmath174 , we obtain the following :    @xmath175    as @xmath153 runs over the elements of @xmath154 , its hamming weight @xmath163 varies from @xmath176 to @xmath177 hence ,    @xmath178    since @xmath146 is the number of codewords in @xmath6 having the hamming weight spectrum vector @xmath179 , then @xmath180 where the summation runs over all @xmath18tuples .    substituting eq.([eq80 ] ) into eq.([eq81 ] ) lemma [ lemma2 ] we get the result .      in this subsection , we extend the definition of poset level weight enumerator of linear codes to frobenius rings , originally given for the binary field in @xcite and establish a macwilliams - type identity for these weight enumerators .",
    "[ defposetlevel ] let c be a linear @xmath96code over a poset of size @xmath8 and @xmath14 levels .",
    "then the poset level weight enumerator of @xmath6 is defined as follows : @xmath181 where @xmath12 denotes the part in the @xmath11th level of a codeword .",
    "let @xmath47 be a partial ordered set with order relation @xmath182 .",
    "consider two binary linear @xmath104codes given by    @xmath183    it is easily seen that the linear @xmath104codes @xmath65 and @xmath66 have the following dual codes , respectively :    @xmath184    by definition [ defposetlevel ] , the poset weight enumerators of these codes and their dual codes are obtained as follows :    @xmath185 ,    @xmath186    in the following corollary , we establish a macwilliams - type identity for @xmath187 and @xmath188 as follows :    [ theoposetweight ] @xmath189    this follows from theorem [ theocomplete ] that the poset level weight enumerator of a linear @xmath96code @xmath6 can be obtained from the complete poset weight enumerator of @xmath6 by replacing @xmath190 with @xmath191 for each @xmath137 .      in this subsection",
    ", the results in @xcite are generalized .",
    "further , it is easily seen that the results of this section are special results of the previous section .",
    "a @xmath192 spotty byte error is defined as @xmath193 or fewer bits errors within a @xmath21bit byte , where @xmath194 for @xmath195 .    here , if we let @xmath196 for all @xmath11 and take the ring to be the binary field then this definition and the results in @xcite follow as corollaries .",
    "we now introduce the m - spotty poset level weight and the m - spotty poset level distance as follows :    let @xmath197 be an error vector and @xmath198 be the @xmath11th level of @xmath199 , where @xmath125 .",
    "the m - spotty poset level weight , denoted by @xmath200 is defined as @xmath201 where @xmath202 denotes the ceiling of @xmath203 , i.e. the smallest integer which is not less than @xmath203 .",
    "let @xmath20 and @xmath34 be codewords of a linear @xmath96code @xmath6 . then m - spotty poset level distance between @xmath20 and @xmath34 , denoted by @xmath204 , is defined as follows : + @xmath205 here @xmath12 and @xmath22 denote the @xmath11th level of @xmath20 and @xmath34 , respectively .",
    "the m - spotty poset level distance is a metric over @xmath7 .",
    "it is easy to see that @xmath206 for @xmath207 , @xmath208 for @xmath209 and @xmath210 .",
    "so , we only need to show that the triangle equality , i.e. @xmath211 for every @xmath20 , @xmath34 and @xmath212 @xmath213 .",
    "since the hamming distance function is a metric , then @xmath214 can be written for @xmath215 .",
    "so @xmath216 .",
    "for each level + @xmath217 + @xmath218 @xmath219 @xmath219 @xmath219 @xmath220 by summing all the inequalities from @xmath221 to @xmath222 , we see that @xmath211 .",
    "the weight enumerator for m - spotty byte error control code @xmath6 is defined as : @xmath223    the following theorem gives a relation between the m - spotty poset level weight enumerator of a linear @xmath96code and that of its dual .",
    "[ theomspottyposet ] @xmath224    this follows from theorem [ theocomplete ] that the poset level weight enumerator of a linear @xmath96code @xmath6 can be obtained from the complete poset weight enumerator of @xmath6 by replacing @xmath190 with @xmath225 for each @xmath137 .",
    "+    in this section , we present some illustrative examples for byte poset level weight enumerators , complete poset level weight enumerators , poset level weight enumerators and m - spotty poset level weight enumerators over a special poset given in figure [ noyan ] .",
    "further , their dual weight enumerators are presented as well .",
    "[ example200 ] let @xmath226 be a linear @xmath104code .",
    "it can be easily seen that @xmath227 . by definition [ byteweightdef3 ] ,",
    "the byte weight enumerators of these codes are as follows : @xmath228    and by applying theorem [ byteweighttheo1 ] , we immediately obtain the byte poset level weight enumerator of @xmath229 as follows :    @xmath230    [ example201 ] consider again the linear @xmath104code @xmath6 in example [ example200 ] . by definition [ definitioncompleteweight ] ,",
    "we compute the complete weight enumerators of these codes as follows :    @xmath231    and by theorem [ theocomplete ] , we obtain the complete poset weight enumerator of @xmath229 in the above equality , that is , @xmath232    by corollary [ theoposetweight ] and corollary [ theomspottyposet ] , we replace @xmath233 with @xmath234 and @xmath234 with @xmath235 in example [ example201 ] , respectively , where @xmath236 @xmath237 .",
    "therefore , the poset weight enumerator and the m - spotty poset level weight enumerator of @xmath229 via the complete poset weight enumerator of @xmath229 given in example [ example201 ] can be easily seen as follows : @xmath238 and @xmath239",
    "in this study , byte poset level weight enumerators , complete level weight enumerators , poset level weight enumerators and @xmath240spotty poset level weight enumerators of linear poset codes over frobenius rings are introduced .",
    "respectively their macwilliams identities are established .",
    "naturally this contribution has led to generalizations of some recent work done on weight enumerators and due to this generalizations some well - known weight enumerators and their macwilliams type identities are easily obtained as corollaries .",
    "since these are new weight enumerators , similar to the classical cases there are many new directions for further studying .",
    "for instance , gleason s type theorems and lattices related to these weight enumerators are just a few to mention here .",
    "m. firer , l. panek , l. rifo , coding in the presence of semantic value of information : unequal error protection using poset decoders , available in arxiv:1108.3832v1 [ cs.it ] , partial version in aip conf . proc .",
    "1490 : 126 - 134 ."
  ],
  "abstract_text": [
    "<S> codes over various metrics such as rosenbloom - tsfasman ( rt ) , lee , etc . have been considered . </S>",
    "<S> recently , codes over poset metrics have been studied . </S>",
    "<S> poset metric is a great generalization of many metrics especially the well - known ones such as the rt and the hamming metrics . </S>",
    "<S> poset metric can be realized on the channels with localized error occurrences . </S>",
    "<S> it has been shown that macwilliams identities are not admissible for codes over poset metrics in general [ kim and oh , 2005 ] . lately , to overcome this problem some further studies on macwilliams identities over poset metrics has been presented . in this paper , we introduce new poset level weight enumerators of linear codes over frobenius commutative rings . </S>",
    "<S> we derive macwilliams - type identities for each of the given enumerators which generalize in great deal the previous results discussed in the literature . </S>",
    "<S> most of the weight enumerators in the literature such as hamming , rosenbloom - tsfasman and complete @xmath0-spotty weight enumerators follow as corollaries to these identities especially .    </S>",
    "<S> * keywords : * macwilliams identity ; linear codes ; poset codes    * 2010 msc : * 94b05 ; 94b60 ; 94b99 </S>"
  ]
}
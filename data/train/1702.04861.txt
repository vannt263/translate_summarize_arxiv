{
  "article_text": [
    "of the most predominant protocols of the internet is the transmission control protocol ( tcp ) , which provides a high level of reliability on end - to - end connections .",
    "it regulates the transmission rate between the two ends of a connection based on the changes of the underlying network . in other words , it estimates the condition of the connection and adjusts its congestion window ( _ cwnd _ ) accordingly .    in order to enhance the total performance of tcp over high - speed networks , many congestion control algorithms ( ccas )",
    "have been proposed in the literature such as scalable tcp @xcite , hs - tcp @xcite , h - tcp @xcite , bic @xcite , tcp africa @xcite , tcp compound @xcite , fusion @xcite , yeah @xcite , tcp illinois @xcite , cubic , @xcite and hcc @xcite .",
    "the main three approaches , which are employed by these ccas , are either loss - based , delay - based or loss - delay - based approach @xcite .",
    "the delay - based approach relies on the variation of delay resulted by big buffers and/or long rtts , which are presented in high - bdp networks .",
    "however , the low - bdp networks employ small buffer sizes and generate very short rtts resulting in a very trivial delay variation , which makes it worthless to use a delay - based approach . these characteristics of such networks allow tcp to rely only on packet losses since it is the only indicator to congestion . in turn",
    ", this behavior makes tcp very sensitive to packet losses , which negatively affects its total performance .",
    "one of the latest versions of loss - based tcp cca is agile - sd @xcite , which has been proposed with a view to mitigating the sensitivity to packet losses .",
    "it proposes agility factor ( @xmath2 ) , which is used to shorten the epoch time ( the epoch is the time needed by a cca to increase its @xmath3 from the time of reduction to the time of attaining the maximum utilization of the link ) , as shown in fig.[fig : agile ] .",
    "the unique agility factor mechanism ( afm ) of agile - sd has been evaluated by extensive simulation experiments , which confirmed that agile - sd has the ability to reduce the sensitivity to packet losses and to improve the performance of tcp to a reasonable extent , especially over low - bdp networks .    in the literature , many mathematical models have been proposed in order to study and evaluate the performance of tcp .",
    "the authors of @xcite proposed a clear model to calculate the steady - state throughput of tcp as a function of rtt and loss rate .",
    "also , the authors of @xcite evaluated the throughput of tcp using periodic loss based model .",
    "the authors of @xcite used the markov chains and the stationary distribution to predict the behavior of tcp dealing with red - based routers .",
    "the authors of @xcite used the random matrix model to evaluate the performance of multiple aimd tcp flows via drop - tail queue management system .",
    "the authors of @xcite derived the stationary distribution of markov chains to calculate the steady - state throughput of tcp cubic .",
    "as aforementioned , the models in @xcite calculate the steady - state throughput of tcp as a function of rtt and loss rate , while they did not take the buffer size into account . in order to calculate the throughput of tcp as a function of buffer , rtt and loss rate , we propose a novel mathematical model to calculate the average throughput of both newreno and agile - sd over high - speed networks .",
    "the main contributions of this model are : first , to validate the simulation results of agile - sd by comparing it to the numerical results of this model and to the results of newreno as a benchmark .",
    "second , to study the impact of @xmath0 parameter on the throughput and epoch time , where the epoch time is a period of time confined between two consecutive losses .",
    "third , to formulate an equation for automating the configuration of optimal @xmath0 based on the given system parameter @xmath4 in order to increase the scalability of agile - sd .",
    "consider a link between two computers and suppose that the link speed is _ c _ ( in kbps ) and the source has a large file to send to the destination .",
    "assume that the packet size is @xmath5 ( in kbits ) .",
    "also , assume that the rtt ( in seconds ) is constant , which is a common assumption in loss - based tcp mathematical models @xcite .",
    "since the bandwidth - delay product ( bdp ) of a link is equal to the multiplication of _ c _ by rtt , consequently , the maximum congestion window size @xmath6 is calculated as equation @xcite , @xmath7    as for the buffer size , we necessarily need to understand its impact on the behavior of tcp to know how it could affect this model . based on equation",
    ", suppose that we have a scenario in which the maximum window size is 100 packets , which allows 100 packets , maximum , to be in - flight . then , let us say that the buffer size used in this link is 20 packets , which allows the maximum packets in - flight to be 120 packets .",
    "accordingly , we can conclude that the buffer size is playing a role in extending the capacity of the link , thus , equation can be reformulated as below , @xmath8 where @xmath9 is a constant indicates to the buffer size in packets .",
    "at the congestion avoidance stage , agile - sd increases its congestion window @xmath10 by a small fraction after every reception of acknowledgment , similarly like the standard newreno .",
    "however , newreno calculates this increase as 1 over @xmath10 , which gives : @xmath11 while in agile - sd this increase is calculated as @xmath2 over @xmath10 , which gives : @xmath12 where the cycle index @xmath13 @xmath14 , @xmath15 is the amount of degradation in congestion window after loss , @xmath16 , @xmath1 is the multiplicative decrease factor of tcp , the epoch index @xmath17 @xmath18 and @xmath19 is the number of epochs needed for tcp connection to finish its data transmission , where @xmath20 and tt is the total transmission time , as shown in fig.[fig : agile ] . as for @xmath21 , it represents the agility factor of agile - sd at the cycle @xmath13 in the epoch @xmath17 , which is calculated as in equation below , @xmath22 where @xmath23 and @xmath0 are system parameters , @xmath24 , @xmath25 , , @xmath26 is the congestion window on the time of reduction of the previous epoch , where , @xmath27 is the congestion window just before the time of reduction of the previous epoch and @xmath28 is a system parameter representing the minimum allowed congestion window . as for max",
    "( ) function , it is used to always guarantee that @xmath29 .        from fig.[fig : agile ] , it is very clear that the epoch is a period of time confined between two consecutive losses @xcite .",
    "each epoch @xmath17 contains a number of sequent cycles and every cycle @xmath13 is a sub - period of time confined between two consecutive increases or between a consecutive degradation and increase . as known ,",
    "the standard tcp variants are rtt - dependent ; in which tcp needs to receive all acks of the previous _ cwnd _ to increase their _ cwnd _ by one .",
    "consequently , these tcp variants consume a complete rtt per cycle in order to achieve that increase .",
    "since the operating systems allow their _ cwnd _ to be only an integer number , we use the flooring function during the assignment of a new value to the _ cwnd _ of the operating system .",
    "thus , the transmission rate ( tr ) of data at cycle @xmath13 in epoch @xmath17 is , @xmath30    differently , agile - sd is an rtt - independent , which consumes only @xmath31 to increase its _ cwnd _ by one .",
    "thus , agile - sd consumes shorter time than the time needed by the rtt - dependent tcp variants to reach the maximum _",
    "cwnd_. in other words , agile - sd shows shorter epoch time than rtt - dependent tcps , as shown in fig.[fig : epochsa ] and fig.[fig : epochsb ] .",
    "[ h ! ]    in fact , agile - sd is still subject to the same transmission rate of standard tcp as equation , however , agile - sd sends only @xmath32 packets in every cycle , where the cycle duration time is only @xmath33 seconds .",
    "this behavior does not increase the transmission rate per cycle , but it controls the period of transmission time given to every cycle .",
    "thus , it shortens the time given for the cycles with low rates and lengthens the time given to the cycles with high rates , which results in shorter epochs ( as in fig.[fig : epochsb ] ) than the rtt - dependent tcp variants ( as in fig.[fig : epochsa ] ) .",
    "let us now calculate the transmission rate per epoch , which is equal to the total data sent , in an epoch , over its duration time .",
    "since the data sent at a cycle @xmath13 is equal to @xmath34 and the duration time of a cycle @xmath13 is equal to @xmath35 , thus , the epoch average transmission rate ( eatr@xmath36 ) is equal to the summation of data sent over all cycles in epoch @xmath17 divided by the duration time of the epoch cycles , as in equation below , @xmath37 where @xmath20 , tt is the total transmission time , @xmath15 is the number of cycles in epoch @xmath17 , , @xmath5 is the packet size , @xmath26 is the congestion window at the time of reduction of the previous epoch where , @xmath38 , and @xmath1 is the multiplicative decrease factor of tcp .",
    "however , calculating the transmission rate per epoch is not a final target , it is only to be used for calculating the total average transmission rate ( tatr ) of a connection .",
    "fundamentally , any connection passes through an @xmath19 epochs , where every epoch @xmath17 sends an amount of data equal to @xmath39 over a duration time equal to @xmath40 .",
    "thus , the tatr of a connection can be calculated as the summation of total data sent through the connection over the total duration of its transmission time , as in equation below , @xmath41      assume that packet losses are either _ congestion loss _ or _ random packet loss_. congestion loss happens when the transmission rate attains the maximum capacity @xmath42 of the bottleneck link or the maximum window size @xmath6 , and it also happens when the buffers are overflowed . as for random packet loss , it can be caused by collision , interference and/or fading , where the random packet loss is subject to the poisson distribution with rate @xmath43 @xcite .",
    "thus , the probability density function @xmath44 for a given congestion window @xmath10 is : @xmath45 where @xmath46 is the probability of occurrence of @xmath47 packet losses in congestion window @xmath10 .",
    "let @xmath48 denote the range of congestion window size , which represents a system with an @xmath49 states , where @xmath50 and @xmath51 , which results in , @xmath52 where @xmath6 and @xmath28 are the maximum and minimum allowed congestion window , respectively .",
    "let @xmath53 denote the transition probability matrix of the markov chains for the system of @xmath49 states , given as , @xmath54 }    & _ { v[1,2 ] }    & \\dots    & _ { v[1,n-1 ] }    & _ { v[1,n ] }      \\\\          _ { v[2,1 ] }    & _ { v[2,2 ] }    & \\dots    & _ { v[2,n-1 ] }    & _ { v[2,n ] }      \\\\",
    "\\vdots       & \\vdots       & \\ddots   & \\vdots         & \\vdots         \\\\          _ { v[n-1,1 ] } & _ { v[n-1,2 ] } & \\dots    & _ { v[n-1,n-1 ] } & _ { v[n-1,n ] }    \\\\          _ { v[n,1 ] }    & _ { v[n,2 ] }    & \\dots    & _ { v[n , n-1 ] }    & _ { v[n , n ] }      \\\\      \\end{bmatrix},\\end{aligned}\\ ] ] where @xmath55 $ ] represents the transition probability of the system to move from the @xmath56 state to the @xmath57 state , where .",
    "if the _ cwnd _ size is in the @xmath56 state , it is denoted by @xmath58 .",
    "this finite set of _ cwnd _ sizes corresponds to the markov chain with @xmath49 states .",
    "let us consider an example of a system with @xmath59 and @xmath60 .",
    "based on equation , the system has only 5 states ( @xmath61 ) , where the finite set of the system states is @xmath62 where @xmath63 .",
    "also , let us suppose that @xmath64 .",
    "thus , the transition diagram of the system can be drawn as shown in fig.[fig : tdiagram ] , where the transition probabilities are calculated based on the probability distribution shown in equation @xcite below : @xmath65 =   \\left\\{\\begin{array}{ll } p_x(w )   & ,",
    "j = \\lfloor\\beta \\times i\\rfloor\\\\ & , i = [ 1 , n-1]\\\\ \\\\",
    "1-p_x(w ) & , j = i+1\\\\ & , i = [ 1 , n-1]\\\\ \\\\ 1        & , j = \\lfloor\\beta \\times",
    "i\\rfloor\\\\   & , i = n\\\\ \\\\ 0        & , \\text{otherwise } , \\end{array}\\right . \\label{eq11}\\end{aligned}\\ ] ] where @xmath10 is the congestion window , @xmath55 $ ] is the transition probability of the system to move from the @xmath56 state to the @xmath57 state , and .",
    ", @xmath66 , @xmath62 and @xmath63 . ]",
    "let us now put the probabilities of all represented transitions shown in fig.[fig : tdiagram ] into their relevant places in the transition matrix @xmath53 .",
    "then , let us fill the unrepresented transitions by zeros .",
    "thus , the resulted transition matrix @xmath53 will be as shown in fig.[fig : tmatrix ] .",
    "let @xmath67 be the @xmath56 row vector in @xmath53 , which represents the probabilities for the system to move from the @xmath56 state to all possible _ n _ states of the system , @xmath68 , v[i,2 ] , \\ldots , v[i , n]\\big],\\end{aligned}\\ ] ] where every element represents the probability to move from the @xmath56 state to one @xmath57 state .    [ !",
    ", @xmath66 , @xmath62 and @xmath63.,title=\"fig : \" ]    from fig.[fig : tmatrix ] , we can see that the @xmath69 is a special case , in which the system will transit from @xmath70 to @xmath71 due to a random loss with @xmath72 probability or a congestion loss with .",
    "thus , the total probability will be .    in order to validate the distribution of these probabilities in the matrix @xmath53 ,",
    "the summation of the probabilities in every row vector must always be equal to one .",
    "@xmath73 } = 1 , \\forall i \\in \\{1 , 2 , \\ldots , n\\}.\\end{aligned}\\ ] ]    let @xmath74 be the probability distribution of the system states at the transition @xmath75 , where @xmath74 is equal to the product of the previous probability distribution of the system states at the transition @xmath76 and the matrix @xmath53 , as follows , @xmath77 where @xmath78 is the initial state , which is the transition probability distribution of system states at the time zero .    since this model is for the average throughput , we set the initial _ cwnd _ of the system to @xmath79 , which represents a system in the state of loss degradation at the congestion avoidance stage .",
    "thus , the initial state row vector of the markov chain is denoted by @xmath78 , in which the probabilities are distributed as below :",
    "@xmath80 =   \\left\\{\\begin{array}{ll } 1    & , j = \\lceil\\beta n\\rceil\\\\ \\\\ 0    & , \\text{otherwise } \\end{array}\\right . , \\forall j",
    "\\in \\{1,2,\\ldots , n\\ } , \\label{eq111}\\end{aligned}\\ ] ] where @xmath17 is the item index in @xmath78 .    in order to calculate the average throughput ( ath ) of the system",
    "while taking the congestion and random losses into account , we employ equation into equation to count all data packets received at the destination over the given connection .",
    "since the source sends @xmath81 data at transition @xmath75 and the destination receives only @xmath82 data at the same transition , therefor , the ath can be calculated as in equation below , @xmath83 where @xmath84 is the number of iterations needed for the system to reach the steady - state , @xmath85 is the transpose of the sample space vector @xmath86 , where @xmath87 $ ] , and @xmath88 is the agility factor at @xmath89 , as , @xmath90 where @xmath23 and @xmath0 are system parameters , @xmath24 , @xmath25 , .    indeed , another markovian model to account for the changing agility factor ( @xmath2 ) is needed to be integrated with equation to find the stationary distribution of the system states , by calculating the eigenvector of @xmath53 with eigenvalue 1 .",
    "however , the integration of two markovian models will increase the complexity of the main model and may hinder the process of understanding the model . in order for us to avoid this complexity and",
    "since @xmath88 is easy to be determined at every transition @xmath75 in the main markov chain of this model , we account for @xmath88 using equation at every cycle in equation .",
    "based on observation , we found that the system starts entering to the steady state after about 4 thousand iterations , however , 10 thousand iterations are used in order to increase the precision of results .",
    "in this section , we compare the numerical results for both newreno and agile - sd to the simulation results in order to confirm the validity of the proposed model .",
    "indeed , our mathematical model is able to represent both newreno and agile - sd , where the numerical results of newreno can be obtained using this model with @xmath91 . using simulation",
    ", we confirmed that agile - sd would exactly perform like newreno if @xmath0 was set to 1 , as shown in fig.[fig : lambda ] .     and",
    "newreno , under different pers . ]    in order to obtain the numerical results , we use octave version 4.0 , which is a major free alternative software to matlab . more specifically , we run our model with both @xmath23 and @xmath0 equal to 1 to obtain the results of newreno .",
    "thereafter , we run it again with @xmath23 and @xmath0 equal to 1 and 5 , respectively , to obtain the results of agile - sd . for better understanding , table [ params1 ]",
    "shows the setting of the model .",
    "p4.3cm|ll & +   + buffer size ( @xmath9 ) & + loss rate ( @xmath92 ) & + packetsize ( @xmath5 ) & + link capacity ( @xmath42 ) & + 2-way link delay ( rtt ) & + minimum allowed window ( @xmath28 ) & + maximum allowed window ( @xmath6 ) & + system states ( @xmath49 ) & + sample space of the system ( @xmath86 ) & + iterations ( @xmath84 ) & + congestion control algorithms & & + & + multiplicative decrease factor @xmath4 & & + minimum @xmath2 @xmath93 & & + maximum @xmath2 @xmath94 & & +   +    further , we present the impact of some parameters , such as buffer size and @xmath0 , on the epoch time and average throughput of agile - sd . at the end",
    ", an automated algorithm configuration and parameter tuning ( aacpt ) @xcite process is exploited to automate the calculation of the optimal @xmath0 for a given multiplicative decrease factor @xmath1 , instead of configuring it manually by the system administrators as a preset parameter .      for simplicity , a node - to - node topology , as shown in fig.[fig : topology ] , is used to validate the results of this mathematical model using ns2 simulator version 2.35 .",
    "the sender - node ( s1 ) sends an ftp data to the receiver - node ( d1 ) for 100 seconds over a full - duplex tcp connection , in which the bandwidth is 1 gbps , the two - way propagation delay is 10 milliseconds , and the buffer size in each node is varied from 4 to 128 packets subject to drop - tail , while the per is varied from @xmath95 to @xmath96 .",
    "furthermore , @xmath1 and @xmath0 are set to 0.5 and 5 , respectively .",
    "in fact , these setting ( as shown in table [ params ] ) are used to mimic the worst short - distance network configurations , where the buffer sizes are very small and the pers are very high .",
    "p4.3cm|l & +   + ccas & agile - sd , newreno + @xmath1 & 0.5 + @xmath97 & 1 , 5 only for agile - sd + buffer size & from 4 to 128 packets + packet size & 1000 bytes + link capacity & 1gbps + 2-way link delay & 10ms + loss rate ( per ) & from @xmath95 to @xmath96 + queuing algo & drop - tail + traffic type & ftp + sack , fack & disabled + simulation time & 100 seconds + simulator version & ns-2 ver2.35 +   +    [ params ]    in order to obtain the simulation results shown in fig.[fig : lr ] , where the buffer size is fixed to @xmath98 packets , we run the simulation for 10 times to calculate the average throughput for every per . as for the simulation results shown in fig.[fig : comparison ] , where the per is fixed to @xmath95 , we also run the simulation for 10 time to calculate the average throughput for every buffer size . additionally , the numerical results are collected using the proposed model under the same conditions used in the simulations in order to present a fair comparison .    as it is clear in fig.[fig : lr ] , the simulation and mathematical results are very close to each other",
    ". however , the mathematical curve slightly diverges from the simulation curve , due to neglecting the slow start phase in our model and also due to the additional processing overhead occur during the simulation .",
    "nevertheless , the results in fig.[fig : lr ] confirms the validity of this model supported by the results in fig.[fig : comparison ] and fig.[fig : rtt ] , which compare between the throughput of agile - sd and the standard newreno under different conditions of buffer size and rtt , respectively .          as shown in fig.[fig : comparison ] , agile - sd overcomes the standard newreno in all cases .",
    "nevertheless , both algorithms show the same pattern for a proportional relationship between throughput and buffer size , which supports our assumption in equation . as well as , agile - sd can perform better than the standard newreno in most rtt cases , especially when the rtt and the used buffer size are very small , as shown in fig.[fig : rtt ] .",
    "since these network characteristics are seen in short - distance and near - zero buffer networks ( such as fiber optic networks ) , thus , the behavior of agile - sd would be promising for improving tcp performance if such networks are targeted .    per where @xmath99 and @xmath100 .",
    "]    [ h ! ] per where @xmath99 , @xmath100 and buffer size is only 4 packets.,title=\"fig : \" ]      due to its unique agility factor mechanism ( afm ) , agile - sd shows shorter epoch time than the standard newreno , as shown in fig.[fig : cwnd ] .",
    "this behavior reduces the underutilized area of bandwidth and , in turn , it improves the average throughput of tcp , as shown in equation , where the epoch time is represented by @xmath33 at the denominator .        as shown in fig.[fig",
    ": lambda - impact ] , it is very clear that the epoch time is inversely correlated to the value of @xmath0 parameter , while the average throughput is positively correlated to @xmath0 .",
    "thus , the greater @xmath0 , the shorter epoch time and the higher average throughput , and vice versa .",
    "hence , it can be deduced that the main player , which directly affects the performance of agile - sd , is the parameter @xmath0 .",
    "thus , this parameter @xmath94 must be carefully configured based on the value of @xmath1 .    [",
    "t ! ]   on the average throughput and epoch time.,title=\"fig : \" ]",
    "the designers and system users of parameterized algorithms routinely encounter a problem of how to find the optimum configurations or parameter settings to obtain the best possible results . in this section ,",
    "an aacpt @xcite technique is used to find the optimal parameter settings of @xmath0 based on a set of problem instances of @xmath1 .",
    "the optimum value of @xmath0 should reflect the minimum setting to obtain the maximum average throughput for a given @xmath1 .",
    "henceforth , @xmath0 will be denoted by @xmath101 for the sake of simplifying the presentation .",
    "let @xmath102 donate the set of possible configurations of @xmath101 , and let @xmath103 denote the set of problem instances of @xmath1 , where @xmath104 $ ] and @xmath105 $ ] .",
    "let @xmath106 be the parameter configuration combination matrix with the size @xmath107 $ ] , which contains all possible @xmath108 combinations , where @xmath109 , @xmath110 , @xmath111 , @xmath112 , and @xmath113 .",
    "thus , each row @xmath114 in @xmath106 merely denotes the possible @xmath102 configurations for a given problem instance @xmath115 , as shown in equation , @xmath116 \\label{eq - row } , \\forall i \\in \\{1 , 2 , \\ldots , m\\}.\\end{aligned}\\ ] ]    let us now calculate the average throughput ( at ) of agile - sd for each configuration combination @xmath108 using equation , where the result is stored into the relevant at@xmath117 element in at , which is an @xmath107 $ ] matrix .",
    "let us also track @xmath118 , which is the optimal @xmath101 configuration in @xmath102 for a given @xmath115 .",
    "then , let us save every @xmath118 into the relevant position in the vector of the optimum setting ( @xmath119 ) , which is an @xmath120 $ ] matrix .",
    "for more understanding , algorithm [ algo01 ] explains the process of aacpt in detail .",
    "afterward , the at results matrix of agile - sd under all possible configurations is drawn as a graph , as shown in fig.[fig:3d ] , to show the complete perspective behind this aacpt .",
    "the circled points in fig.[fig:3d ] reflect the vector of the optimal configurations @xmath121 for the given @xmath103 .",
    "for each @xmath115 in problem instance space @xmath103 , the optimal @xmath101 configuration is @xmath118 from @xmath119 .",
    "the relationship between the problem instance space @xmath103 and its optimal configuration space @xmath118 , as shown in fig.[fig : apc ] is directly extracted from fig.[fig:3d ] .    in order to facilitate the process of formulating an equation to fit this relationship , the free on - line tool , namely @xcite ,",
    "is used to find the trend line of the optimal points . eventually , the employment of tool produces a simple linear equation , which is able to directly calculate @xmath118 based on a given @xmath115 , as shown in equation , @xmath122 where @xmath123 is the length of @xmath119 , @xmath124 .",
    "fortunately , the result of this equation is identical to the result of the aforementioned aacpt process , as shown in fig.[fig : apc ] .",
    "[ h ! ]",
    "* initialization : * + @xmath125 $ ] ; + @xmath126 $ ] ; + define @xmath127 at as @xmath128 $ ] matrices ; + define @xmath119 as @xmath129 $ ] matrix ; + set @xmath130 ; +    [ h ! ]   and @xmath1.,title=\"fig : \" ]    it is very clear that equation has the ability to improve the average throughput of agile - sd compared to newreno without the need for manually configuring the @xmath101 , as shown in fig.[fig : optimumlambda ] .",
    "thus , this equation is highly recommended to be used in agile - sd since it can automate the calculation of the optimum value of @xmath101 parameter based on the preset value of @xmath1 , where @xmath1 is one of the main parameters in the standard tcp interface .",
    "this automation of @xmath101 increases the scalability of agile - sd and maximizes its throughput .",
    "more importantly , it helps for keeping the standard interface of tcp as it is , which facilitates the implementation of agile - sd into the real operating systems .",
    "[ h ! ] , per@xmath131 , and buffer size is only 4 packets.,title=\"fig : \" ]",
    "in this paper , we propose a mathematical model to calculate the average throughput of agile - sd and newreno .",
    "this model is designed based on markov chains , in which the congestion loss and packet error rate are considered . in order to validate the correctness of this model , a number of simulation experiments",
    "are carried out , in which the results are compared to the outputs of this model to validate the results presented in @xcite . besides , this model evaluates the average throughput of agile - sd under different pers , rtts , and buffer sizes , in which agile - sd overcomes newreno even in the cases of small buffers and short rtts .",
    "based on this results , agile - sd could be a promising congestion control algorithm for the short - distance networks , especially that with near - zero buffers such as fiber optic networks .",
    "also , the proposed model shows that the average throughput is positively correlated to the values of @xmath1 and @xmath101 .",
    "thus , the greater the @xmath1 and @xmath101 , the higher the throughput and vice versa . from the other side",
    ", there must be an inverse correlation between @xmath1 and @xmath101 in order to keep the aggressiveness of agile - sd balanced .",
    "in other words , whenever @xmath1 is increased , @xmath101 must be decreased and vice versa . for more robustness , an aacpt process is exploited to formulate an equation , which calculates the optimal configuration of @xmath101 based on a given @xmath1 , as in equation ( [ eq - opt ] ) . for future work",
    ", we plan to implement this equation in agile - sd to make its interface compatible with the standard tcp interface .",
    "this work has been partially supported by the malaysian ministry of education under the fundamental research grant frgs/1/2014/ict03/upm/01/1 for financial support .            l.  xu , k.  harfoush , and i.  rhee , `` binary increase congestion control ( bic ) for fast long - distance networks , '' in _",
    "infocom 2004 .",
    "twenty - third annual joint conference of the ieee computer and communications societies _ , vol .  4 , 2004 ,",
    ". 25142524 .    r.  king , r.  baraniuk , and r.  riedi , `` tcp - africa : an adaptive and fair rapid increase rule for scalable tcp , '' in _",
    "infocom 2005 .",
    "24th annual joint conference of the ieee computer and communications societies .",
    "proceedings ieee .",
    "_ , 2005 , pp . 111",
    ".    k.  tan and j.  song , `` compound tcp : a scalable and tcp - friendly congestion control for high - speed networks , '' in _ 4th international workshop on protocols for fast long - distance networks ( pfldnet ) _ , 2006 , pp .",
    "k.  kaneko , t.  fujikawa , z.  su , and j.  katto , `` tcp - fusion : a hybrid congestion control algorithm for high - speed networks , '' in _ proc .",
    "pfldnet , isi , marina del rey ( los angeles ) , california .",
    "_ , 2007 , pp .",
    "3136 .            ,",
    "mohamed othman , borhanuddin ali , and zurina mohd hanapi , `` comparative study of high - speed linux tcp variants over high - bdp networks , '' _ journal of network and computer applications _ , vol .",
    "43 , pp . 6675 , 2014 .",
    "j.  padhye , v.  firoiu , d.  towsley , and j.  kurose , `` modeling tcp throughput : a simple model and its empirical validation , '' _ acm sigcomm computer communication review _ , vol .",
    "28 , no .  4 , pp . 303314 , 1998 .",
    "j.  padhye , v.  firoiu , d.  f. towsley , and j.  f. kurose , `` modeling tcp reno performance : a simple model and its empirical validation , '' _ ieee / acm transactions on networking ( ton ) _ , vol .  8 , no .  2 , pp .",
    "133145 , 2000 .",
    "a.  misra and t.  j. ott , `` the window distribution of idealized tcp congestion avoidance with variable packet loss , '' in _ proceedings .",
    "ieee infocom99 , eighteenth annual joint conference of the ieee computer and communications societies _ , vol .",
    "3.1em plus 0.5em minus 0.4emieee , mar 1999 , pp .",
    "15641572 .",
    "i.  huh , j.  y. lee , and b .- c .",
    "kim , `` decision of maximum congestion window size for tcp performance improvement by bandwidth and rtt measurement in wireless multi - hop networks . '' _ international journal of information processing systems _ , vol .  2 , no .  1 ,",
    "3438 , 2006 .",
    "a.  jansang , a.  phonphoem , and b.  paillassa , `` analytical model for expected packet delay evaluation in ieee 802.11 e , '' in _ communications and mobile computing , 2009 . cmc09 .",
    "wri international conference on _ , vol .",
    "2.1em plus 0.5em minus 0.4emieee , 2009 , pp . 344348 .",
    "a.  jansang and a.  phonphoem , `` a simple analytical model for expected frame waiting time evaluation in ieee 802.11e hcca mode , '' _ wireless personal communications _ ,",
    "69 , no .  4 , pp . 18991924 , 2013 .        mohamed a. alrshah received his bsc degree in computer science from naser university - libya , in 2000 , and his msc degree in computer networks in may 2009 from universiti putra malaysia .",
    "and now he is a ph.d candidate in the faculty of computer science and information technology , universiti putra malaysia .",
    "he has published a number of articles in high impact factor scientific journals .",
    "his research interests are in the field of high speed tcp protocols , high speed network , parallel and distributed algorithms , software defined networking , network design and management , wireless networks .    mohamed othman received his phd from the universiti kebangsaan malaysia with distinction ( best phd thesis in 2000 awarded by sime darby malaysia and malaysian mathematical science society ) .",
    "now , he is a professor in the faculty of computer science and information technology , universiti putra malaysia ( upm ) .",
    "he is also an associate researcher at the lab of computational science and mathematical physics , institute of mathematical research ( inspem ) , upm .",
    "he published more than 160 international journals and 230 proceeding papers .",
    "his main research interests are in the fields of high speed network , parallel and distributed algorithms , wireless network ( mpdu- and msdu - frame aggregation , tcp performance , mac layer , resource management , and traffic monitoring ) and scientific telegraph equation and modeling .",
    "borhanuddin mohd .",
    "ali received his b.sc ( hons . ) electrical and electronics engineering from loughborough university of technology in 1979 , his m.sc and phd in electromagnetic engineering , from the university of wales , in 1981 - 1985 , respectively .",
    "borhanuddin is now a full time professor in department of computer and communication engineering , faculty of engineering upm .",
    "he was on secondment to mimos bhd , a government research lab on ict , heading the centre of wireless communications .",
    "previously , he served as the director of the institute of multimedia and software , a centre of excellence within the same university , 2002 - 2006 , spent 1 year at celcom r&d in 1995 as visiting scientist , and 2 years at might in 1996 - 97 as a senior manager , charged with coming up with research and policy direction for malaysian telecommunication industry . in 1996",
    "he helped to realize the formation of teman project , and later was made the chairman of the myren research community , a national research testbed .",
    "he is a chartered engineer and a member of the iet , and senior member of ieee .",
    "he was the chair of ieee malaysia section 2002 - 2004 , and previously the chair of comsoc chapter , 1999 - 2002 .",
    "his research interest spans wireless and broadband communications , and network engineering .",
    "binti mohd hanapi received her b.sc . in computer and electronic system engineering , strathclyde university in 1999 , her m.sc . in computer and communication systems engineering , universiti putra malaysia in 2004 and her ph.d.in electrical , electronic , and system engineering , universiti kebangsaan malaysia in 2011",
    "now , she is working as a lecturer at universiti putra malaysia .",
    "she has received an excellence teaching awards in 2005 , 2006 and 2012 . and she has received silver medal in 2004 and bronze medal in 2012 . she is a leader of some research projects and she has published many conference and journal papers .",
    "her research interests in routing , wireless sensor network , wireless communication , distributed computing , network security , crpytography , and intelligent systems ."
  ],
  "abstract_text": [
    "<S> agile - sd is one of the latest versions of loss - based congestion control algorithm ( cca ) , which has been proposed to improve the total performance of tcp over high - speed and short - distance networks . </S>",
    "<S> it has introduced a new mechanism , called agility factor mechanism ( afm ) , which shortens the epoch time to reduce the sensitivity to packet losses and in turn to increase the average throughput . </S>",
    "<S> agile - sd has only been tested via simulation , however , it has not been mathematically proven or evaluated . </S>",
    "<S> the contribution of this paper is twofold : first , a new mathematical model for the throughput of newreno and agile - sd is proposed . </S>",
    "<S> this model is designed using the well - known markov chains to validate the correctness of agile - sd and to show the impact of buffer size , multiplicative decrease factor and maximum limit of agility factor ( @xmath0 ) on the total performance . </S>",
    "<S> second , an automated algorithm configuration and parameter tuning ( aacpt ) technique is employed to optimize and automate the configuration of @xmath0 . </S>",
    "<S> further , the numerical results for both newreno and agile - sd are compared to the simulation results in which the validity of the proposed model is confirmed . </S>",
    "<S> moreover , the output of aacpt is exploited to formulate a new equation which calculates the optimal @xmath0 from a given @xmath1 in order to conserve the standard interface of tcp . </S>",
    "<S> this equation increases the scalability of agile - sd and improves its total performance .    </S>",
    "<S> addtoresetfootnotepage    agile - sd , transmission control protocol , congestion control , markov chains , average throughput . </S>"
  ]
}
{
  "article_text": [
    "low - density parity - check ( ldpc ) convolutional codes @xcite , also known as spatially coupled ldpc ( sc - ldpc ) codes @xcite , can be obtained from a sequence of individual ldpc block codes by distributing the edges of their tanner graphs over several adjacent blocks @xcite .",
    "the resulting spatially coupled codes exhibit a _",
    "threshold saturation _ phenomenon , which has attracted a lot of interest in the past few years : the threshold of an iterative belief propagation ( bp ) decoder , obtained by density evolution ( de ) , is improved to that of the optimal maximum - a - posteriori ( map ) decoder .",
    "it follows from threshold saturation that it is possible to achieve capacity by spatial coupling of simple regular ldpc codes , which show a significant gap between bp and map threshold in the uncoupled case .",
    "a first analytical proof of threshold saturation was given in @xcite for the binary erasure channel ( bec ) , considering a specific ensemble with uniform random coupling .",
    "an alternative proof based on potential functions was then presented in @xcite , which was extended from scalar recursions to vector recursions in @xcite . by means of vector recursions ,",
    "the proof of threshold saturation can be extended to spatially coupled ensembles with structure , such as sc - ldpc codes based on protographs @xcite .",
    "the concept of spatial coupling is not limited to ldpc codes .",
    "also codes on graphs with stronger component codes can be considered . in this case",
    "the structure of the component codes has to be taken into account in a de analysis . instead of a simple check node update ,",
    "a constraint node update within bp decoding of a generalized ldpc code involves an a - posteriori probability ( app ) decoder applied to the associated component encoder .",
    "in general , the input / output transfer functions of the app decoder are multi - dimensional because the output bits of the component encoder have different protection . for the bec , however , it is possible to analytically derive explicit transfer functions @xcite by means of a markov chain analysis of the decoder metric values in a trellis representation of the considered code @xcite .",
    "this technique was applied in @xcite to perform a de analysis of braided block codes ( bbcs ) @xcite and other spatially coupled generalized ldpc codes .",
    "threshold saturation could be observed numerically in all the considered cases .",
    "bbcs can be seen as a spatially coupled version of product codes , and are closely related to staircase codes @xcite , which have been proposed for high - speed optical communications .",
    "it was demonstrated in @xcite that bbcs show excellent performance even with the iterative hard decision decoding that is proposed for such scenarios .",
    "the recently presented spatially coupled split - component codes @xcite demonstrate the connections between bbcs and staircase codes .    in this paper , we study codes on graphs whose constraint nodes represent convolutional codes @xcite .",
    "we denote such codes as turbo - like codes ( tcs ) .",
    "we consider three particular concatenated convolutional coding schemes : parallel concatenated codes ( pccs ) @xcite , serially concatenated codes ( sccs ) @xcite , and braided convolutional codes ( bccs ) @xcite .",
    "our aim is to investigate the impact of spatial coupling on the bp threshold of these tcs . for this purpose",
    "we introduce some special block - wise spatially coupled ensembles of pccs ( sc - pccs ) and sccs ( sc - sccs ) @xcite . in the case of bccs , which are inherently spatially coupled , we consider the original block - wise ensemble from @xcite and generalize it to larger coupling memories .",
    "furthermore , we introduce a novel bcc ensemble in which not only the parity bits but also the information bits are coupled over several time instants @xcite .    for these spatially coupled turbo - like codes ( sc - tcs ) , we perform a threshold analysis for the bec analogously to @xcite .",
    "we derive their exact de equations from the transfer functions of the convolutional component decoders @xcite , whose computation is similar to that for generalized ldpc codes in @xcite . in order to evaluate and compare the ensembles at different rates , we also derive de equations for random puncturing . using these equations , we compute bp thresholds for both coupled and uncoupled tcs @xcite and compare them with the corresponding map thresholds @xcite .",
    "our numerical results indicate that threshold saturation occurs if the coupling memory is chosen sufficiently large .",
    "the improvement of the bp threshold is specially significant for sccs and bccs , whose uncoupled ensembles suffer from a poor bp threshold .",
    "we then consider the construction of families of rate - compatible sc - tcs which achieve close - to - capacity performance for a wide range of code rates .",
    "motivated by the numerical results , we prove threshold saturation analytically .",
    "we show that , by few assumptions in the ensembles of uncoupled tcs , in particular considering identical component encoders , it is possible to rewrite their de recursions in a form that corresponds to the recursion of a scalar admissible system .",
    "this representation allows us to apply the proof technique based on potential functions for scalar admissible systems proposed in @xcite , which simplifies the analysis . for the general case , the analysis is significantly more complicated and requires the coupled vector recursion framework of @xcite .",
    "finally , for the example of pccs , we generalize the proof to non - symmetric ensembles with different component encoders by using the framework in @xcite .",
    "the remainder of the paper is organized as follows . in section  [ sec : compactgraphcc ] , we introduce a compact graph representation for the trellis of a convolutional code that is amenable for a de analysis .",
    "furthermore , we derive explicit input / output transfer functions of the bcjr decoder for transmission over the bec .",
    "then , in section  [ sec : compactgraphtcs ] , we describe uncoupled ensembles of pccs , sccs and bccs by means of the compact graph representation .",
    "sc - tcs , their spatially coupled counterparts , are introduced in section  [ sec : sctcs ] . in section  [ sec : de ] , we derive exact de equations for uncoupled and coupled ensembles of tcs . in section  [ sec : randomp ] , we consider random puncturing and derive the corresponding de equations and analyze sc - tcs as a family of rate compatible codes .",
    "numerical results are presented and discussed in section  [ sec6 ] .",
    "threshold saturation , which is observed numerically in the results section , is proved analytically in section [ sec7 ] .",
    "finally , the paper is concluded in section  [ sec8 ] .",
    "in this section , we introduce a graphical representation of a convolutional code , which can be seen as a compact form of its corresponding factor graph @xcite .",
    "this compact graph representation makes the illustration of sc - tcs simpler and is convenient for the de analysis .",
    "we also generalize the method in @xcite to derive explicit input / output transfer functions of the bcjr decoder of rate-@xmath0 convolutional codes on the bec , which will be used in section  [ sec : de ] to derive the exact de for sc - tcs .",
    "consider a rate-@xmath0 systematic convolutional encoder of code length @xmath1 bits , i.e. , its corresponding trellis has @xmath2 trellis sections . at each time",
    "instant @xmath3 , corresponding to a trellis section , the encoder encodes @xmath4 input bits and generates @xmath5 parity bits .",
    "let @xmath6 , @xmath7 , and @xmath8 , @xmath9 , denote the @xmath4 input sequences and the @xmath5 parity sequences , respectively .",
    "we also denote by @xmath10 , @xmath11 , the @xmath12th code sequence , with @xmath13 for @xmath7 and @xmath14 for @xmath15 .",
    "the conventional factor graph of a convolutional encoder is shown in fig .  [",
    "factorgraph](a ) , where black circles represent code bits , each black square corresponds to the code constraints ( allowed combinations of input state , input bits , output bits , and output state ) of one trellis section , and the double circles are ( hidden ) state variable nodes .    for convenience",
    ", we will represent a convolutional encoder with the more compact graph representation depicted in fig .",
    "[ factorgraph](b ) . in this compact graph representation ,",
    "each input sequence @xmath16 and each parity sequence @xmath17 is represented by a single black circle , referred to as variable node , i.e. , each circle represents @xmath2 bits .",
    "furthermore , the code trellis is represented by a single empty square , referred to as factor node .",
    "the factor node is labeled by the length @xmath2 of the trellis .",
    "systematic convolutional code .",
    "( b ) compact graph representation of the same code . ]",
    "each node in the compact graph represents a sequence of nodes belonging to the same type , similar to the nodes in a protograph of an ldpc code .",
    "variable nodes in the original factor graph may represent different bit values , even if they belong to the same type in the compact graph .",
    "however , assuming a tailbiting trellis , the probability distribution of these values after decoding will be equal for all variables that correspond to the same node type . as a consequence",
    ", a de analysis can be performed in the compact graph , independently of the trellis length @xmath2 , which plays a similar role as the lifting factor of a protograph ensemble .",
    "if a terminated convolutional encoder , which starts and ends in the zero state , is used instead , the bits that are close to the start and end of the trellis will have a slightly stronger protection . since this effect will not have a significant impact on the performance",
    ", we will neglect this throughout this paper and assume equal output distributions for all bits of the trellis , even when termination is used .",
    "consider the bcjr decoder of a memory @xmath18 , rate@xmath19 convolutional encoder and transmission over the bec .",
    "without loss of generality , we restrict ourselves within this paper to encoders with @xmath20 or @xmath21 , which can be implemented with @xmath22 states in controller canonical form or observer canonical form , respectively .",
    "we would like to characterize the transfer function between the input erasure probabilities ( i.e. , prior to decoding ) and output erasure probabilities ( i.e. , after decoding ) on both the input bits and the output bits of the convolutional encoder .",
    "note that the erasure probabilities at the input of the decoder depend on both the channel erasure probability and the a - priori erasure probabilities on systematic and parity bits ( provided , for example , by another decoder ) .",
    "thus , in the more general case , we consider non - equal erasure probabilities at the input of the decoder .    the extrinsic erasure probability of the @xmath23th , @xmath24 , code bit bits are the systematic bits .",
    "] at the output of the decoder is denoted by @xmath25 . the probabilities @xmath25 depend on the erasure probabilities of all code bits ( systematic and parity ) at the input of the decoder , @xmath26 where @xmath27 is the erasure probability of the @xmath23th code bit at the input of the decoder and @xmath28 is the transfer function of the bcjr decoder for the @xmath23th code bit . for notational simplicity , we will often omit the argument of @xmath28 and write simply @xmath29 .",
    "let @xmath30 , @xmath11 , be the vectors of received symbols at the output of the channel , with @xmath31 , where @xmath32 denotes an erasure .",
    "the branch metric of the trellis edge departing from state @xmath33 at time @xmath34 and ending to state @xmath35 at time @xmath36 , @xmath37 , is @xmath38 where @xmath39 is the a - priori probability on symbol @xmath40 .",
    "the forward and backward metrics of the bcjr decoder are@xmath41    finally , the extrinsic output likelihood ratio is given by @xmath42    let the @xmath22 trellis states be @xmath43 .",
    "then , we define the forward and backward metric vectors as @xmath44 and @xmath45 , respectively . for transmission on the bec ,",
    "the nonzero entries of vectors @xmath46 and @xmath47 are all equal .",
    "thus , we can normalize them to @xmath48 .",
    "we consider transmission of the all - zero codeword .",
    "the sets of values that vectors @xmath46 and @xmath47 can take on are denoted by @xmath49 and @xmath50 , respectively .",
    "it is important to remark that these sets are finite .",
    "furthermore , the sequence @xmath51 forms a markov chain , which can be properly described by a probability transition matrix , denoted by @xmath52 .",
    "the @xmath53 entry of @xmath52 is the probability of transition from state @xmath54 to state @xmath55 .",
    "denote the steady state distribution vector of the markov chain by @xmath56 , which can be computed as the solution to @xmath57 similarly , we can define the transition matrix for the sequence of backward metrics @xmath58 , denoted by @xmath59 , and compute the steady state distribution vector @xmath60 .",
    "consider the rate-@xmath61 , @xmath62-state convolutional encoder with generator matrix @xmath63 @xmath64 and @xmath65 are equal and have cardinality @xmath66 , @xmath67    consider equal erasure probability for all code bits at the input of the decoder , i.e. , @xmath68 .",
    "then , @xmath69$}\\;.\\end{aligned}\\ ] ] @xmath70    in order to compute the erasure probability of the @xmath23th bit at the output of the decoder , we have to compute the probability of @xmath71 .",
    "define the matrices @xmath72 , @xmath73 , where the @xmath53 entry of @xmath72 is computed as @xmath74 then , the extrinsic erasure probability of the @xmath23th output , @xmath75 , introduced in  , is obtained as @xmath76    consider the rate@xmath77 convolutional encoder with generator matrix @xmath78    assuming @xmath79 , the transfer functions for the corresponding decoder are @xmath80 @xmath81 @xmath70    [ lemma1 ] consider a terminated convolutional encoder where all distinct input sequences have distinct encoded sequences .",
    "for such a system , the transfer function @xmath82 of a bcjr decoder with input erasure probabilities @xmath83 , or any convex combination of such transfer functions , is increasing in all its arguments .",
    "we prove the statement by contradiction .",
    "recall that the bcjr decoder is an optimal app decoder .",
    "now , consider the transmission of the same codeword over two channels such that the input erasure probabilities at the input of the decoder , @xmath84 and @xmath85 for transmission over channel 1 and 2 , respectively , are equal for all @xmath86 except for the @xmath87th bit , for which @xmath88 .",
    "assume that the transfer function @xmath89 is non - increasing in its @xmath87th argument , @xmath90 puncture the @xmath87th bit sequence of the codeword transmitted over channel 1 such that @xmath91 .",
    "since puncturing can only make the output of the decoder worse ( otherwise we could replace our encoder with the punctured one and achieve a higher rate ) , @xmath92 where the second inequality follows from assumption .",
    "however , since after puncturing @xmath84 and @xmath85 are equal for all @xmath12 , then @xmath93 , which is in contradiction with .",
    "in this section , we describe pccs , sccs and bccs using the compact graph representation introduced in the previous section . in section  [ sec : sctcs ] we then introduce the corresponding spatially coupled ensembles .",
    "we consider a rate @xmath94 pcc built from two rate-@xmath95 recursive systematic convolutional encoders , referred to as the upper and lower component encoder .",
    "its conventional factor graph is shown in fig .",
    "[ uncoupled](a ) , where @xmath96 denotes the permutation .",
    "the trellises corresponding to the upper and lower encoders are denoted by @xmath97 and @xmath98 , respectively .",
    "the information sequence @xmath99 , of length @xmath2 bits , and a reordered copy are encoded by the upper and lower encoder , respectively , to produce the parity sequences @xmath100 and @xmath101 .",
    "the code sequence is denoted by @xmath102 .",
    "the compact graph representation of the pcc is shown in fig .",
    "[ uncoupled](b ) , where each of the sequences @xmath99 , @xmath100 and @xmath101 is represented by a single variable node and the trellises are replaced by factor nodes @xmath97 and @xmath98 ( cf .",
    "[ factorgraph ] ) . in order to emphasize that a reordered copy of the input sequence is used in @xmath98 , the permutation is depicted by a line that crosses the edge which connects @xmath99 to @xmath98 .",
    "we consider a rate @xmath103 scc built from the serial concatenation of two rate-@xmath95 recursive systematic component encoders , referred to as the outer and inner component encoder .",
    "its compact graph representation is shown in fig .",
    "[ uncoupled](c ) , where @xmath104 and @xmath105 are the factor nodes corresponding to the outer and inner encoder , respectively , and the rectangle illustrates a multiplexer / demultiplexer .",
    "the information sequence @xmath99 , of length @xmath2 , is encoded by the outer encoder to produce the parity sequence @xmath106 .",
    "then , the sequences @xmath99 and @xmath106 are multiplexed and reordered to create the intermediate sequence @xmath107 , of length @xmath108 ( not shown in the graph ) .",
    "finally , @xmath107 is encoded by the inner encoder to produce the parity sequence @xmath109 .",
    "the transmitted sequence is @xmath110 .",
    "we consider a rate @xmath94 bcc built from two rate-@xmath61 recursive systematic convolutional encoders , referred to as upper and lower encoders .",
    "the corresponding trellises are denoted by @xmath97 and @xmath98 . the compact graph representation of this code is shown in fig .",
    "[ uncoupled](d ) .",
    "the parity sequences of the upper and lower encoder are denoted by @xmath100 and @xmath101 , respectively . to produce the parity sequence @xmath100 , the information sequence @xmath99 and a reordered copy of @xmath101",
    "are encoded by @xmath97 .",
    "likewise , a reordered copy of @xmath99 and a reordered copy of @xmath100 are encoded by @xmath98 in order to produce the parity sequence @xmath101 . similarly to pccs , the transmitted sequence is @xmath102 .",
    "in this section , we introduce sc - tcs . we first describe the spatial coupling for both pccs and sccs .",
    "then , we generalize the original block - wise bcc ensemble @xcite in order to obtain ensembles with larger coupling memories .",
    "we consider the spatial coupling of rate-@xmath111 pccs , described in the previous section .",
    "consider a collection of @xmath112 pccs at time instants @xmath113 , where @xmath112 is called the coupling length .",
    "an sc - pcc ensemble with coupling memory @xmath114 is obtained by connecting each pcc in the chain to the @xmath114 pccs to the left and the @xmath114 pccs to the right .",
    "graphically , we make @xmath115 copies of the compact graph in fig .",
    "[ uncoupled](b ) and connect the variable nodes at time @xmath116 , @xmath117 , to the factor nodes at times @xmath118 .",
    "the coupling is performed as follows .",
    "we denote by @xmath119 the information sequence , and by @xmath120 and @xmath121 the parity sequence of the upper and lower encoder , respectively , at time @xmath116 .",
    "the code sequence of the pcc at time @xmath116 is given by the triple @xmath122 .",
    "divide the information sequence @xmath123 into @xmath124 sequences of equal size @xmath125 , denoted by @xmath126 , @xmath127 .",
    "likewise , divide @xmath128 , the information sequence @xmath119 reordered by a permutation , into @xmath124 sequences of equal size , denoted by @xmath129 , @xmath127 . at time @xmath116 , the information sequence at the input of the upper encoder is @xmath130 , properly reordered by a permutation .",
    "likewise , the information sequence at the input of the lower encoder is @xmath131 , reordered by a permutation . using the procedure described above , a coupled chain ( a convolutional structure over time ) of @xmath112 pccs with coupling memory @xmath114",
    "is obtained .",
    "the compact graph representation of the sc - pcc with coupling memory @xmath114 is shown in fig .",
    "[ coupled](a ) for a given time instant @xmath116 .    in order to terminate the encoder of the sc - pcc to the zero state ,",
    "the information sequences at the end of the chain are chosen in such a way that the code sequences become @xmath132 at time @xmath133 , and @xmath123 is set to @xmath134 for @xmath135 .",
    "analogously to conventional convolutional codes , this results in a rate loss that becomes smaller as @xmath112 increases .     for time instant @xmath116 . ]",
    "an sc - scc is constructed similarly to sc - pccs .",
    "consider a collection of @xmath112 sccs at time instants @xmath113 , and let @xmath119 be the information sequence at time @xmath116 .",
    "also , denote by @xmath136 and @xmath137 the parity sequence at the output of the outer and inner encoder , respectively .",
    "the information sequence @xmath119 and the parity sequence @xmath136 are multiplexed and reordered into the sequence @xmath138 . the sequence @xmath138 is divided into @xmath124 sequences of equal length , denoted by @xmath139 , @xmath127 . then",
    ", at time instant @xmath116 , the sequence at the input of the inner encoder is @xmath140 , properly reordered by a permutation .",
    "this sequence is encoded by the inner encoder into @xmath137 .",
    "finally , the code sequence at time @xmath116 is @xmath141 . using this construction method ,",
    "a coupled chain of @xmath112 sccs with coupling memory @xmath114 is obtained .",
    "the compact graph representation of sc - sccs with coupling memory @xmath114 is shown in fig .",
    "[ coupled](b ) for time instant @xmath116 .    in order to terminate the encoder of the sc - scc , the information sequences at the end of the chain are chosen in such a way that the code sequences become @xmath132 at time @xmath133 .",
    "a simple and practical way to terminate sc - sccs is to set @xmath142 for @xmath143 .",
    "this enforces @xmath132 for @xmath133 , since we can assume that @xmath142 for @xmath135 . using this termination technique ,",
    "only the parity sequence @xmath144 needs to be transmitted at time instants @xmath143 .",
    "the compact graph representation of the original bccs is depicted in fig  [ bccsc ] . as for sc - pccs , let @xmath119 , @xmath120 and @xmath121 denote the information sequence , the parity sequence at the output of the upper encoder , and the parity sequence at the output of the lower encoder , respectively , at time @xmath116 . at time @xmath116 , the information sequence @xmath119 and a reordered copy of @xmath145 are encoded by the upper encoder to generate the parity sequence @xmath120 .",
    "likewise , a reordered copy of the information sequence , denoted by @xmath128 , and a reordered copy of @xmath145 are encoded by the lower encoder to produce the parity sequence @xmath121 . the code sequence at time @xmath116 is @xmath146 .",
    "as it can be seen from fig  [ bccsc ] , the original bccs are inherently spatially coupled codes . ] with coupling memory one . in the following ,",
    "we introduce two extensions of bccs , referred to as type - i and type - ii , with increased coupling memory , @xmath147 .",
    "the compact graph of type - i bccs is shown in fig .",
    "[ bcci - ii](a ) for time instant @xmath116 .",
    "the parity sequence @xmath148 is randomly divided into @xmath114 sequences @xmath149 , @xmath150 , of the same length .",
    "likewise , the parity sequence @xmath151 is randomly divided into @xmath114 sequences @xmath152 , @xmath150 . at time @xmath116 , the information sequence @xmath119 and the sequence @xmath153 , properly reordered , are used as input sequences to the upper encoder to produce the parity sequence @xmath148 .",
    "likewise , a reordered copy of the information sequence @xmath119 and the sequence @xmath154 , properly reordered , are encoded by the lower encoder to produce the parity sequence @xmath151 .     at time",
    "instant @xmath116 . ]    the compact graph of type - ii bccs is shown in fig .",
    "[ bcci - ii](b ) for time instant @xmath116 .",
    "contrary to type - i bccs , in addition to the coupling of parity bits , for type - ii bccs information bits are also coupled . at time @xmath116 , divide the information sequence @xmath155 into @xmath124 sequences @xmath156 , @xmath127 of equal length .",
    "furthermore , divide the reordered copy of the information sequence , @xmath128 , into @xmath124 sequences @xmath157 ,",
    "the first input of the upper and lower encoders are now the sequences @xmath158 and @xmath159 , respectively , properly reordered .",
    "in this section we derive the exact de for sc - tcs . for the three considered code ensembles ,",
    "we first derive the de equations for the uncoupled ensembles and then extend them to the coupled ones .",
    "consider the compact graph of a pcc in fig .",
    "[ uncoupled](b ) .",
    "let @xmath160 and @xmath161 denote the average extrinsic erasure probability from factor node @xmath162 to @xmath99 and @xmath100 , respectively , in the @xmath12th iteration . ) as the sequence itself ( @xmath163 in this case ) .",
    "] likewise , denote by @xmath164 and @xmath165 the extrinsic erasure probabilities from @xmath166 to @xmath99 and @xmath101 , respectively .",
    "it is easy to see that the erasure probability from @xmath119 and @xmath120 to @xmath162 is @xmath167 and @xmath168 , respectively .",
    "therefore , the de updates for @xmath162 can be written as @xmath169 where @xmath170 and @xmath171 and @xmath172 denote the transfer function of @xmath162 for the systematic and parity bits , respectively .",
    "similarly , the de update for @xmath166 can be written as @xmath173 where @xmath174 and @xmath175 and @xmath176 are the transfer functions of @xmath166 for the systematic and parity bits , respectively .",
    "consider the compact graph of a sc - pcc ensemble in fig .",
    "[ coupled](a ) .",
    "the variable node @xmath119 is connected to factor nodes @xmath177 and @xmath178 , at time instants @xmath179 .",
    "we denote by @xmath180 and @xmath181 the average extrinsic erasure probability from factor node @xmath177 at time instant @xmath182 to @xmath99 and @xmath100 , respectively , computed in the @xmath12th iteration .",
    "we also denote by @xmath183 the input erasure probability to variable node @xmath119 in the @xmath12th iteration , received from its neighbors @xmath177 .",
    "it can be written as @xmath184    similarly , the average erasure probability from factor nodes @xmath178 , @xmath179 , to @xmath119 , denoted by @xmath185 , can be written as @xmath186    the erasure probabilities from variable node @xmath119 to its neighbors @xmath177 and @xmath178 are @xmath187 and @xmath188 , respectively .    on the other hand , @xmath189 at time",
    "@xmath116 is connected to the set of @xmath190s for @xmath191 .",
    "the erasure probability to @xmath189 from this set , denoted by @xmath192 , is given by @xmath193    thus , the de updates of @xmath189 are @xmath194    similarly , the input erasure probability to @xmath195 from the set of connected @xmath190s at time instants @xmath191 , is @xmath196 and the de updates of @xmath195 are @xmath197    finally the a - posteriori erasure probability on @xmath119 at time @xmath116 and iteration @xmath12 is @xmath198 de is performed by tracking the evolution of the a - posteriori erasure probability with the number of iterations .        consider the compact graph of the scc ensemble in fig .",
    "[ uncoupled](c ) .",
    "let @xmath199 and @xmath200 denote the erasure probability from @xmath201 to @xmath99 and @xmath106 , respectively , computed in the @xmath12th iteration .",
    "likewise , @xmath202 and @xmath203 denote the extrinsic erasure probability from @xmath204 to @xmath205 and @xmath109 .",
    "both @xmath99 and @xmath106 receive the same erasure probability , @xmath206 , from @xmath204 .",
    "therefore , the erasure probabilities that @xmath201 receives from these two variable nodes are equal and given by @xmath207 the de equations for @xmath201 can then be written as @xmath208 where @xmath209 and @xmath210 are the transfer functions of @xmath201 for the systematic and parity bits , respectively .",
    "the erasure probability that @xmath204 receives from @xmath205 is the average of the erasure probabilities from @xmath99 and @xmath106 , @xmath211 on the other hand , the erasure probability to @xmath204 from @xmath109 is @xmath168 .",
    "therefore , the de equations for @xmath204 can be written as @xmath212      consider the compact graph representation of sc - sccs in fig .",
    "[ coupled](b ) .",
    "variable nodes @xmath119 and @xmath213 are connected to factor nodes @xmath214 at time instants @xmath179 . the input erasure probability to variable nodes @xmath119 and @xmath213 from these factor nodes , denoted by @xmath215 , is the same for both @xmath119 and @xmath213 and is obtained as the average of the erasure probabilities from each of the factor nodes @xmath214 , @xmath216 the erasure probability to @xmath217 from @xmath119 and @xmath213 is @xmath218 thus , the de updates of @xmath219 are @xmath220 at time @xmath116 , @xmath221 is connected to a set of @xmath222s at time instants @xmath223 .",
    "the erasure probability that @xmath221 receives from this set is the average of the erasure probabilities of all @xmath190s and @xmath224s at times @xmath225 .",
    "this erasure probability can be written as @xmath226 hence , the de updates for the inner encoder are given by @xmath227 finally , the a - posteriori erasure probability on information bits at time @xmath116 and iteration @xmath12 is @xmath228        consider the compact graph of uncoupled bccs in fig .",
    "[ uncoupled](c ) . these can be obtained by tailbiting bccs , as shown in fig .",
    "[ bccsc ] , with coupling length @xmath229 .",
    "let @xmath230 and @xmath231 denote the erasure probabilities of messages from @xmath162 and @xmath166 through their @xmath4th connected edge , @xmath232 , respectively .",
    "the erasure probability of messages that @xmath162 receives through its edges are @xmath233 the exact de equations of @xmath162 can be written as @xmath234 where @xmath235 denotes the transfer function of @xmath162 for its @xmath4th connected edge .",
    "similarly , the de equations for @xmath166 can be written by swapping indexes @xmath236 and @xmath237 in .      consider the compact graph representation of type - i bccs in fig .",
    "[ bcci - ii](a ) . as in the uncoupled case , the de updates of factor nodes @xmath189 and @xmath195 are similar due to the symmetric structure of the coupled construction .",
    "therefore , for simplicity , we only describe the de equations of @xmath189 and the equations for @xmath195 are obtained by swapping indexes @xmath236 and @xmath237 in the equations .",
    "the first edge of @xmath189 is connected to @xmath119 .",
    "thus , the erasure probability that @xmath189 receives through this edge is @xmath238 the second edge of @xmath189 is connected to variable nodes @xmath239 at time instants @xmath240 .",
    "the erasure probability that @xmath189 receives through its second edge is therefore the average of the erasure probabilities from the variable nodes @xmath239 that are connected to this edge .",
    "this erasure probability can be written as @xmath241 the third edge of @xmath189 is connected to @xmath120 , which is in turn connected to the second edges of factor nodes @xmath178 at time instants @xmath242 .",
    "the erasure probability that @xmath120 receives from the set of connected nodes @xmath178 is the average of erasure probabilities from these nodes through their second edges .",
    "the erasure probability from @xmath120 to @xmath189 is @xmath243 the de equations of @xmath189 can then be written as in the de equations of type - i bccs . ]",
    "@xmath244 the a - posteriori erasure probability on @xmath119 at time @xmath116 and iteration @xmath12 for type - i bccs is @xmath245    as we discussed in the previous section , the difference between type - i and type - ii bccs is that @xmath119 is also coupled in the latter .",
    "variable node @xmath119 in type - ii bccs is connected to a set of factor nodes @xmath177 and @xmath178 at time instants @xmath179 .",
    "the de equations of type - ii bccs are identical to those of type - i bccs except for equation .",
    "denote by @xmath246 the input erasure probability to @xmath119 from the connected factor nodes @xmath178 in the @xmath12th iteration . according to fig .",
    "[ bcci - ii](b ) , @xmath246 is the average of erasure probabilities from @xmath178 at time instants @xmath179 , @xmath247 factor node @xmath248 is connected to variable nodes @xmath190 at time instants @xmath223 . the incoming erasure probability to @xmath189 through its first edge , denoted by @xmath249 , is therefore the average of the erasure probabilities from @xmath190 at times @xmath223 , @xmath250 finally , the a - posteriori erasure probability on @xmath119 at time @xmath116 and iteration @xmath12 for type - ii bccs is @xmath198",
    "sc - tcs with higher rates can be obtained by applying puncturing . in this section ,",
    "we consider the construction of rate - compatible sc - tcs by means of puncturing .",
    "in particular , for analysis purposes , we consider random puncturing of the code sequences .",
    "we denote by @xmath251 $ ] the fraction of surviving bits after puncturing , referred to as the permeability rate .",
    "consider that a code sequence @xmath252 is randomly punctured with permeability rate @xmath253 and transmitted over a bec with erasure probability @xmath168 , bec@xmath254 .",
    "for the bec , applying puncturing is equivalent to transmitting @xmath255 over a bec with erasure probability @xmath256 , resulting from the concatenation of two becs , bec@xmath254 and bec@xmath257 .",
    "the de equations of sc - tcs in the previous section can then be easily modified to account for random puncturing .    for sc - pccs , we consider puncturing of parity bits only , i.e.",
    ", the overall code is systematic .",
    "the rate of the punctured code ( without considering termination of the coupled chain ) is @xmath258 .",
    "the de equations of punctured sc - pccs are obtained by substituting @xmath259 in , , and .    for punctured sc - sccs",
    ", we consider the coupling of the punctured sccs proposed in @xcite , where @xmath260 and @xmath261 are the permeability rates of the systematic and parity bits , respectively , of the outer code ( see ( * ? ? ?",
    "* fig .  1 ) ) , and @xmath262 is the permeability rate of the parity bits of the inner code . the code rate of the punctured , i.e. , the overall code is systematic .",
    "] sc - scc is @xmath263 ( neglecting the rate loss due to termination ) .",
    "the de for punctured sc - sccs is obtained by substituting @xmath264 in and , and modifying to @xmath265 and , to @xmath266 where @xmath267 is given in and @xmath268    for both type - i and type - ii bccs , similarly to sc - pccs , we consider only puncturing of parity bits with permeability rate @xmath253 .",
    "the de equations of punctured sc - bccs are obtained by substituting @xmath259 in and and the corresponding equations for @xmath269 and @xmath270 .",
    "in table  [ tab : bpthresholdsscc ] we give de results for sc - pccs and sc - sccs and their uncoupled ensembles for several code rates .",
    "in particular , we consider sc - pcc and sc - scc ensembles with identical 4-state and 8-state component encoders with generator matrix @xmath271 and @xmath272 , respectively , in octal notation .",
    "the bp thresholds ( @xmath273 ) and map thresholds ( @xmath274 ) of the uncoupled ensembles are given in columns 5 and 6 , respectively .",
    "the map threshold is obtained using the area theorem @xcite .",
    "we also give the bp thresholds of sc - pccs and sc - sccs for coupling memory @xmath275 , denoted by @xmath276 , @xmath277 and @xmath278 , respectively .",
    "the gap to the shannon limit is shown by @xmath279 .    [ cols=\"^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     [ bpthresholdsbcc ]    in table  [ bpthresholdsbcc ] , we give bp thresholds for type - i and type - ii sc - bccs with different coupling memories and several rates . corresponds to the bp threshold of the original bcc .",
    "] we also report the bp threshold and map threshold of the uncoupled ensembles .",
    "in particular , we consider bccs with two identical 4-state component encoders and generator matrix @xmath280    the bp decoder works poorly for uncoupled bccs and the bp thresholds are worse than those of pccs and sccs ( an exception are sccs with @xmath94 ) .",
    "this is specially significant for rates @xmath281 , for which the bp thresholds of uncoupled bccs are very close to zero . on the other hand ,",
    "the map thresholds of bccs are better than those of both pccs and sccs for all rates . as for sc - pccs and sc - sccs ,",
    "the bp thresholds improve if coupling is applied .",
    "type - ii bccs yield better thresholds than type - i bccs and achieve threshold saturation for small coupling memories .",
    "in contrast , for the coupling memories considered , threshold saturation is not observed for type - i bccs .",
    "the numerical results in the previous section suggest that threshold saturation occurs for sc - tcs . in this section , for some relevant ensembles , we prove that , indeed , threshold saturation occurs . to prove threshold saturation we use the proof technique based on potential functions introduced in @xcite . in the general case , the de equations of tcs form a vector recursion .",
    "however , we show that , for some relevant tc ensembles , it is possible to rewrite the de vector recursion in a form which corresponds to the recursion of a scalar admissible system .",
    "we can then prove threshold saturation using the framework in @xcite for scalar recursions .",
    "since the proof for scalar recursions is easier to describe , we first address this case , and we then highlight the proof for the general case of tcs with a vector recursion based on the framework in @xcite .",
    "[ def1 ] a scalar admissible system @xmath282 , is defined by the recursion @xmath283 where @xmath284 \\times [ 0,1 ] \\rightarrow [ 0,1]$ ] and @xmath285 \\rightarrow [ 0,1]$ ] satisfy the following conditions .    1 .",
    "@xmath89 is increasing in both arguments @xmath286 $ ] ; 2 .",
    "@xmath287 is increasing in @xmath288 $ ] ; 3 .   @xmath289",
    "@xmath89 and @xmath287 have continuous second derivatives .    in the following",
    "we show that the de equations for some relevant tcs form a scalar admissible system .        the de equations ",
    "form a vector recursion .",
    "however , if the code is built from identical component encoders , i.e. , @xmath290 , it follows @xmath291 using this and substituting into and into , the de can then be written as @xmath292 with initialization @xmath293 .",
    "[ lemmapcc ] the de recursion of a pcc with identical component encoders , given in , forms a scalar admissible system with @xmath294 and @xmath295 .    it is easy to show that all conditions in definition  [ def1 ] are satisfied for @xmath295 .",
    "we now prove that @xmath296 satisfies conditions 1 , 3 and 4 .",
    "note that @xmath296 is the transfer function of a rate-@xmath95 convolutional encoder . according to equation ,",
    "this function can be written as @xmath297 , where @xmath298 and @xmath299 .",
    "using lemma  [ lemma1 ] , @xmath297 is increasing with @xmath300 and @xmath301 , therefore @xmath296 is increasing with @xmath302 and @xmath168 and condition 1 is satisfied .    to show that condition 3 holds , it is enough to realize that for @xmath303",
    "the input sequence can be recovered perfectly from the received sequence , i.e. , @xmath304 , as there is a one - to - one mapping between input sequences and coded sequences .",
    "furthermore , when @xmath305 , the input sequence is fully known by a - priori information and the erasure probability at the output of the decoder is zero , i.e. , @xmath304 .",
    "finally , @xmath296 is a rational function and its poles are outside the interval @xmath306 $ ] ( otherwise we may get infinite output erasure probability for a finite input erasure probability ) , hence it has continuous first and second derivatives inside this interval .",
    "consider the de equations of the scc ensemble in ",
    ", which form a vector recursion . for identical component encoders , @xmath307 and @xmath308 . using this and @xmath309 , by substituting  into",
    ", the de recursion can be rewritten as @xmath310 where @xmath311 and the initial condition is @xmath293 .",
    "[ lemmascc ] the de recursion of a scc with identical component encoders , given in and , form a scalar admissible system with @xmath312 and @xmath313    the proof follows the same arguments as the proof of lemma  [ lemmapcc ] .",
    "similarly to pccs and sccs , the de equations of bccs ( see  ) form a vector recursion . with identical component encoders , due to the symmetric structure of the code , @xmath314 and @xmath315 for @xmath232 . using this ,",
    " can be rewritten as @xmath316    the above de equations are still a vector recursion .",
    "to write the recursion in scalar form , it is necessary to have identical transfer functions for all the edges which are connected to factor nodes @xmath162 and @xmath166 .",
    "this is needed because all variable nodes in a bcc receive a - priori information . in order to solve this problem ,",
    "one alternative is to consider identical component encoders with time - varying trellises .",
    "this can be obtained by permuting the symbols along trellis branches randomly .",
    "then , it results @xmath317 and all transfer functions are equal to the average of the transfer functions @xmath318 , @xmath319 using this , the de equations can be simplified as @xmath320    [ lemmabcc ] the de recursion of a bcc with identical component encoders and time varying trellises , given in , form a scalar admissible system with @xmath321 and @xmath295 .",
    "the proof follows the same arguments as the proof of lemma  [ lemmapcc ] .",
    "[ def2 ] for a scalar admissible system , defined in definition  [ def1 ] , the potential function @xmath322 is @xmath323 where @xmath324 and @xmath325 .",
    "the potential function has the following properties .    1 .",
    "@xmath322 is strictly decreasing in @xmath326 $ ] ; 2 .",
    "an @xmath327 $ ] is a fixed point of the recursion ( [ recursion ] ) if and only if it is a stationary point of the corresponding potential function .",
    "[ defbp ] if the de recursion is the recursion of a bp decoder , the bp threshold is @xcite @xmath328 : u'(x;\\varepsilon)>0,\\ ; \\forall x\\in ( 0,1]\\big\\ } \\ .\\ ] ]    according to definition  [ defbp ] , for @xmath329 , the derivative of the potential function is always larger than zero for @xmath330 $ ] ,",
    "i.e. , the potential function has no stationary point in @xmath330 $ ] .",
    "[ defpotth ] for @xmath331 , the minimum unstable fixed point is @xmath332 : f(g(x);\\varepsilon)<x , x\\in ( 0,\\tilde{x})\\big\\}$ ] .",
    "then , the potential threshold is defined as @xcite @xmath333 : u(x)>0 , \\min_{x",
    "\\in [ u(x),1 ] } u(x;\\varepsilon ) > 0 \\big\\ } \\ .\\end{aligned}\\ ] ]    the potential threshold depends on the functions @xmath296 and @xmath334 .    consider rate-@xmath111 pccs with identical 2-state component encoders with generator matrix @xmath335 .",
    "for this code ensemble , @xmath336 therefore , @xmath337 and @xmath338 @xmath70        consider the pcc ensemble in fig .",
    "[ uncoupled](b ) with identical component encoders with generator matrix @xmath339 .",
    "the de recursion of this ensemble is given in , where @xmath340 is the transfer function of the @xmath341 component encoder .",
    "the corresponding potential function is @xmath342 where @xmath343 and @xmath344 .",
    "the potential function is shown in fig .",
    "[ potpcc ] for several values of @xmath168 .",
    "as it is illustrated , for @xmath345 the potential function has no stationary point .",
    "the bp threshold and the potential threshold are @xmath346 and @xmath347 , respectively ( see definitions  [ defbp ] and [ defpotth ] ) .",
    "these results match with the de results in table  [ tab : bpthresholdsscc ] .",
    "@xmath70            the potential function of the scc ensemble in fig .",
    "[ uncoupled](c ) with identical component encoders with generator matrix @xmath339 is shown in fig .",
    "[ potscc ] .",
    "the bp threshold and the potential threshold are @xmath348 and @xmath349 , respectively , which match with the de results in table  [ tab : bpthresholdsscc ] .",
    "@xmath70    consider the bcc ensemble in fig .",
    "[ uncoupled](d ) with identical component encoders with generator matrix given in and time - varying trellises .",
    "the potential function of this code is depicted in fig .",
    "[ potbcc ] .",
    "the bp threshold and the potential threshold are @xmath350 and @xmath351 , respectively .",
    "note that these values are slightly different from the values in table  [ bpthresholdsbcc ] .",
    "this is due to the fact that we considered an ensemble with time - varying trellises , which can be modeled by means of a scalar recursion .",
    "the ensemble considered in table  [ bpthresholdsbcc ] needs to be analyzed by means of a vector recursion .",
    "@xmath70      [ thm1 ] consider a spatially coupled system defined by the following recursion at time @xmath116 , @xmath352 if @xmath296 and @xmath334 form a scalar admissible system , for large enough coupling memory and @xmath353 , the only fixed point of the recursion is @xmath305 .",
    "the proof follows from @xcite .    in the following",
    "we show that the de recursions of sc - tcs ( with identical component encoders ) can be written in the form . as a result",
    ", threshold saturation occurs for these ensembles .",
    "consider the sc - pcc ensemble in fig .",
    "[ coupled](a ) with identical component encoders . due to the symmetric coupling structure",
    ", it follows that ( cf . and )",
    "@xmath354 now , using @xmath355 in and , we can write @xmath356 finally , by substituting into and and the results into and , the recursion of sc - pccs can be rewritten as @xmath357 note that the recursion in is identical to the recursion in .",
    "consider the sc - scc ensemble in fig .",
    "[ coupled](b ) with identical component encoders .",
    "define @xmath358 ( see ) now , use it in . finally , by substituting the result in , the recursion of a sc - scc an be rewritten as @xmath359 where @xmath334 is shown in equation .",
    "the recursion in is identical to the recursion in theorem [ thm1 ] .",
    "consider a coupling for bccs slightly different from the one for type - ii bccs . at time @xmath116 , each of the parity sequences @xmath360 and @xmath361 is divided into @xmath124 sequences , @xmath149 , @xmath127 , and @xmath152 , @xmath127 , respectively ( in type - ii bccs they are divided into @xmath114 sequences ) .",
    "the sequences @xmath362 and @xmath363 are multiplexed and reordered , and are used as the second input of the lower and upper encoder , respectively .",
    "note that in this way of coupling , part of the parity bits at time @xmath116 are used as input at the same time instant @xmath116 .",
    "now , similarly to uncoupled bccs , consider identical time - varying trellises .",
    "let @xmath364 denote the extrinsic erasure probability from @xmath189 through all its edges in the @xmath12th iteration .",
    "the erasure probabilities to @xmath365 through all its incoming edges are equal and are given by the average of the erasure probabilities from variable nodes @xmath366 , @xmath367 , @xmath368 thus , the erasure probabilities from @xmath189 and @xmath195 are identical and equal to @xmath369 . finally , the recursion at time slot @xmath116 is @xmath370 the recursion in ( [ eq : scbcc ] ) is identical to ( [ screcursion ] ) .      in the following ,",
    "we show that the de recursion of punctured tc ensembles can also be rewritten as a scalar admissible system for some particular cases .",
    "then , threshold saturation follows from the discussion in the previous subsection .",
    "consider the pcc ensemble with identical component encoders and random puncturing of the parity bits with permeability rate @xmath253 .",
    "the de recursion can be rewritten as , @xmath371 the above equation is a recursion of a scalar admissible system and satisfies the conditions in definition [ def1 ] , where @xmath295 and @xmath372 .",
    "consider random puncturing of the scc ensemble with identical component encoders . assuming @xmath373 ( i.e.",
    ", we puncture also systematic bits of the outer code ) , we can rewrite the de recursion as @xmath374 where @xmath375 and @xmath376 .",
    "the above equation is the recursion of a scalar admissible system , where @xmath377 and @xmath334 is obtained by equation .",
    "consider random puncturing of the bcc ensemble with identical time - varying trellises .",
    "assume that the systematic bits and the parity bits of the upper and lower encoders are punctured with the same permeability rate @xmath253 .",
    "then , the de recursion can be rewritten as , where @xmath168 should be replaced by @xmath256 .      in general , the de recursions of tcs are vector recursions . in this case",
    ", it is possible to prove threshold saturation using the technique proposed in @xcite for vector recursions .",
    "the proof is similar to that of scalar recursions , albeit more involved . in the following ,",
    "we show how to rewrite the recursion of punctured pccs as a vector admissible system recursion .",
    "then , following @xcite , we can prove threshold saturation .",
    "using the same technique , it is possible to prove threshold saturation for sccs and bccs as well .",
    "consider the de equations of the pcc ensemble in . to reduce the number of the equations , substitute and into and , respectively .",
    "consider random puncturing of information bits , upper encoder parity bits and lower encoder parity bits with permeability rates @xmath260 , @xmath261 and @xmath262 , respectively . by considering @xmath378 and @xmath379 ,",
    "the de recursion can be simplified to @xmath380 @xmath381 the above equations can be written in vector format as @xmath382 where , @xmath383 $ ] , @xmath384 $ ] and @xmath385 $ ] .",
    "is it easy to verify that the recursion in satisfies the conditions in ( * ? ? ?",
    "* def .  1 ) , hence is the recursion of a vector admissible system . for this vector admissible system",
    ", the line integral is path independent in ( * ? ? ?",
    "* eq .  ( 2 ) ) and the potential function is well defined .",
    "so , we can define ( see @xcite ) @xmath386 , @xmath387 and @xmath388 it is possible to show that the de recursion of sc - pccs can be rewritten in the same form as ( * ? ? ?",
    "* eq .  ( 5 ) ) and by using ( * ? ? ?",
    "* th .  1 ) , threshold saturation can be proven .",
    "in this paper we investigated the impact of spatial coupling on the bp decoding threshold of turbo - like codes .",
    "we introduced the concept of spatial coupling for pccs and sccs , and generalized the concept of coupling for bccs . considering transmission over the bec , we derived the exact de equations for uncoupled and coupled ensembles .",
    "for all spatially coupled ensembles , the bp threshold improves and our numerical results suggest that threshold saturation occurs if the coupling memory is chosen sufficiently large .",
    "we therefore constructed rate - compatible families of sc - tcs that achieve close - to - capacity performance for a wide range of code rates .",
    "we showed that the de equations of sc - tc ensembles with identical component encoders can be properly rewritten as a scalar recursion .",
    "for sc - pccs , sc - sccs and bccs we then proved threshold saturation analytically , using the proof technique based on potential functions proposed in @xcite . finally , we demonstrated how vector recursions can be used to extend the proof to more general ensembles .",
    "the invention of turbo codes and the rediscovery of ldpc codes , allowed to approach capacity with practical codes . today",
    ", both turbo - like codes and ldpc codes are ubiquitous in communication standards . in the academic arena",
    ", however , the interest on turbo - like codes has been declining in the last years in favor of the ( considered ) more mathematically - appealing ldpc codes .",
    "the invention of spatially coupled ldpc codes has exacerbated this situation . without spatial coupling",
    ", it is well known that pccs yield good bp thresholds but poor error floors , while sccs and bccs show low error floors but poor bp thresholds .",
    "our sc - tcs , however , demonstrate that turbo - like codes can also greatly benefit from spatial coupling .",
    "the concept of spatial coupling opens some new degrees of freedom in the design of codes on graphs : designing a concatenated coding scheme for achieving the best bp threshold in the uncoupled case may not necessarily lead to the best overall performance .",
    "instead of optimizing the component encoder characteristics for bp decoding , it is possible to optimize the map decoding threshold and rely on the threshold saturation effect of spatial coupling .",
    "powerful code ensembles with strong distance properties such as sccs and bccs can then perform close to capacity with low - complexity iterative decoding .",
    "we hope that our work on spatially coupled turbo - like codes will trigger some new interest in turbo - like coding structures ."
  ],
  "abstract_text": [
    "<S> in this paper , we introduce the concept of spatially coupled turbo - like codes ( sc - tcs ) as the spatial coupling of a number of turbo - like code ensembles . </S>",
    "<S> in particular , we consider the spatial coupling of berrou _ et al . </S>",
    "<S> _ parallel concatenated codes ( pccs ) and benedetto _ et al . </S>",
    "<S> _ serially concatenated codes ( sccs ) . </S>",
    "<S> furthermore , we propose two extensions of braided convolutional codes ( bccs ) , a class of turbo - like codes which have an inherent spatially coupled structure , to higher coupling memories , and show that these yield improved belief propagation ( bp ) thresholds as compared to the original bcc ensemble . </S>",
    "<S> we derive the exact density evolution ( de ) equations for sc - tcs and analyze their asymptotic behavior on the binary erasure channel . </S>",
    "<S> we also consider the construction of families of rate - compatible sc - tc ensembles . </S>",
    "<S> our numerical results show that threshold saturation of the belief propagation ( bp ) decoding threshold to the maximum a - posteriori threshold of the underlying uncoupled ensembles occurs for large enough coupling memory . </S>",
    "<S> the improvement of the bp threshold is especially significant for sccs and bccs , whose uncoupled ensembles suffer from a poor bp threshold . for a wide range of code rates , </S>",
    "<S> sc - tcs show close - to - capacity performance as the coupling memory increases . </S>",
    "<S> we further give a proof of threshold saturation for sc - tc ensembles with identical component encoders . </S>",
    "<S> in particular , we show that the de of sc - tc ensembles with identical component encoders can be properly rewritten as a scalar recursion . </S>",
    "<S> this allows us to define potential functions and prove threshold saturation using the proof technique recently introduced by yedla _ </S>",
    "<S> et al._.    braided codes , density evolution , potential function , serially concatenated codes , spatially coupled codes , threshold saturation , turbo codes . </S>"
  ]
}
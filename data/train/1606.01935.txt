{
  "article_text": [
    "the literature on vehicle routing problems has become very rich and covers nowadays a variety of applications , modeling approaches and solution methods @xcite . due to their huge importance in practice",
    ", these problems have called the attention of many researchers and motivated a large number of collaborations between companies and academia @xcite . in addition",
    ", vehicle routing problems lead to challenging formulations that require the development of sophisticate solution strategies and motivates the design of clever heuristics and meta - heuristics @xcite .",
    "vehicle routing problems are typically modeled using two different types of formulations . the first type , known as vehicle flow ( vf ) formulation , is based on binary variables associated to arcs of a network representation of the problem . in general , this is more intuitive and leads to a compact model that can be straightforwardly put on a black - box optimization solver .",
    "also , valid inequalities and constraints ( most of them exponential in terms of the number of customers ) have been used to achieve a more effective strategy , resulting in specialized branch - and - cut methods . however , even with the use of very elaborate inequalities , vf formulations may be still very challenging for current optimization solvers .",
    "the main reason is the weak linear relaxation of these formulations .",
    "a stronger linear relaxation is observed in the second type of models , known as set partitioning ( sp ) formulation .",
    "the number of constraints in this formulation is much smaller with respect to a vf formulation , but it has a huge number of variables : one for each feasible route in the problem . in the vast majority of cases , generating all these routes is not viable and hence the column generation technique is required to generate columns in an iterative way .",
    "columns correspond to an incidence vector of feasible routes , which are generated by solving a resource constrained shortest path problem ( rcespp ) .",
    "most implementations solve the rcespp by a label - setting algorithm , which is aided with clever strategies to improve its performance @xcite .",
    "the solution strategies based on sp formulations are currently the most efficient to obtain optimal solutions of vehicle routing problems @xcite .",
    "still , the performance can be very poor on problems that allow long routes , i.e. routes that visit many customers .    from this brief description of the two most used types of vrp formulations",
    ", we can observe that they have many opposite features and then can be recognized as very different from each other .",
    "however , in this paper we show that they are not so different , as they are actually special cases of a general formulation of vehicle routing problems , which we call as @xmath0-step formulation .",
    "in fact , this is a family of formulations , as different values of @xmath0 lead to different formulations .",
    "we show that the vf formulation and the sp formulation are @xmath0-step formulations with particular choices of @xmath0 .",
    "in addition , we prove a relationship between the bounds provided by the linear relaxation of @xmath0-step formulations with different @xmath0 .",
    "column generation can also be used to solve a @xmath0-step formulation , with the advantage that more dual information is sent to the rcespp with respect to sp formulations .",
    "the @xmath0-step formulation associate variables to partial paths in the network representation of the problem .",
    "this has the potential of reducing the difficulty of solving problems that allow long routes , the big challenge in a sp formulation . on the other hand",
    ", @xmath0-step formulations may lead to stronger linear relaxations than a vf formulation , the main weakness of this latter .",
    "many other advantages can be achieved by using a @xmath0-step formulation , as we enunciate ahead in this paper .",
    "a formulation based on partial paths has also been proposed in @xcite , for the vrp with time windows .",
    "similarly to the @xmath0-step formulation , the partial paths can start and end at any node of the network and must visit exactly a given number of customers .",
    "the authors obtain this formulation by applying dantzig - wolfe decomposition to a modified vehicle flow formulation of the problem , which relies on a modified graph to represent the solution as a giant tour .",
    "they prove that the linear relaxation of the resulting model provides a bound that is larger than or equal to the bound provided by the standard two - index flow formulation .",
    "the relationship between formulations with different resource bounds is not analyzed by the authors and no computational experiments are reported for the proposed formulation .",
    "a similar idea has also been applied to other types of problem . in @xcite ,",
    "the authors propose a formulation based on horizon decomposition for the capacitated lot sizing problem with setup times .",
    "they partition the time horizon in several subsets , possibly with overlap , to have smaller subproblems , so they can be quickly solved by a black - box optimization solver . in the column generation framework , columns become associated to production plans defined for only one of the partitions of the time horizon .",
    "these partial production plans are then combined in the master problems , as in the p - step formulation .",
    "the remainder of this paper has the following structure . in section [ sec : classical ] , we review the vehicle flow and set partitioning formulations and quickly discuss about their main features .",
    "in section [ sec : family ] , we propose the @xmath0-step formulation and present theoretical and computational results that relate the formulations obtained using different choices of @xmath0 . the column generation scheme for @xmath0-step formulations is proposed in section [ sec : cg : pstep ] , followed by a discussion of its main advantages and disadvantages in section [ sec : advantages ] .",
    "in this section , we review the formulations of two classical vrp variants , namely the capacitated vehicle routing problem ( cvrp ) and the vehicle routing problem with time windows ( vrptw ) .",
    "these formulations are the basis for many other variants of the problem .",
    "the purpose is to set the notation , nomenclature and foundations for the remaining sections of this paper .",
    "consider a set of customers represented by @xmath1 , such that a positive demand is associated to each customer @xmath2 . to service these customers",
    ", we have to design routes for a fleet with @xmath3 vehicles available in a single depot .",
    "each route must start at the depot , visit a subset of customers and then return to the depot .",
    "all customers must be visited exactly once .",
    "each vehicle has a maximum capacity @xmath4 , which limits the number of customers it can visit before returning to the depot . for the sake of clarity ,",
    "we assume a homogeneous fleet of vehicles , but the discussion presented ahead can be easily extended to a heterogeneous fleet .",
    "we represent the problem using a graph @xmath5 , in which @xmath6 is the set of nodes associated to customers in @xmath7 and to the depot nodes @xmath8 and @xmath9 .",
    "we use two nodes to represent the same single depot and impose that all routes must start on @xmath8 and return to @xmath9 .",
    "set @xmath10 contains the arcs @xmath11 for each pair of nodes @xmath12 ( we assume a complete graph ) .",
    "the cost of crossing an arc @xmath13 is denoted by @xmath14 .",
    "each node has a demand @xmath15 , such that @xmath16 for each @xmath2 and @xmath17 .",
    "the objective of the problem is to determine a set of minimal cost routes that satisfies all the requirements defined above .      in the two - index vf formulation ,",
    "we define the binary decision variable @xmath18 that assumes value @xmath19 if and only if there is a route that goes from customer @xmath20 to @xmath21 directly , for @xmath22 .",
    "in addition , @xmath23 is a continuous decision variable corresponding to the cumulated demand on the route that visits node @xmath24 up to this visit . with these parameters and decision variables , the two - index flow formulation of the cvrp if given by : @xmath25 constraints",
    "ensure that all customers are visited exactly once .",
    "constraints guarantee the correct flow of vehicles through the arcs , by stating that if a vehicle arrives to a node @xmath26 , then it must depart from this node .",
    "constraint limits the maximum number of routes to @xmath3 , the number of vehicles .",
    "constraints and ensure together that the vehicle capacity is not exceeded .",
    "the objective function is defined by and imposes that the total travel cost of the routes is minimized .",
    "constraints also avoid subtours in the solution , _",
    "i.e. _ cycling routes that do not pass through the depot .",
    "different types of constraints are proposed in the literature to impose vehicle capacities and/or avoid subtours @xcite .",
    "the advantage of using and is that the model has a polynomial number of constraints in terms of the number of customers .",
    "however , the lower bound provided by the linear relaxation of this model is known to be weak in relation to other models .",
    "hence , many authors recur to capacity constraints that results in better lower bounds , even though the number of constraints becomes exponential in terms of the number of customers , requiring the use of a branch - and - cut strategy @xcite .",
    "the vrptw is an entension of the cvrp , in which customer time windows are imposed for the visits .",
    "a time window corresponds to a time interval @xmath27 $ ] which imposes that the service at node @xmath28 can not start earlier than the time instant @xmath29 nor later than @xmath30 .",
    "if the vehicle arrives before than @xmath29 , then it has to wait until this instant to start servicing the node .",
    "to each arc @xmath13 , we assign a travel time @xmath31 , which respects triangle inequality . also , each node @xmath20 has a service time @xmath32 that corresponds to the minimum amount of time that the vehicle has to stay in a visited node .",
    "let @xmath33 be a continuous decision variable representing the time instant that the service starts at node @xmath28 .",
    "we obtain a model for the vrptw by adding the following constraints to the formulation  : @xmath34 where @xmath35 is a sufficiently large value , which can be defined as @xmath36 .      currently , the most efficient exact methods for solving vrp variants are based on sp formulations .",
    "the variables in these formulations correspond to feasible routes of the problem .",
    "let @xmath37 be the set of routes that satisfy the problem requirements .",
    "for example , in the cvrp , a route in @xmath37 must start and finish at the depot , visit at most once a customer , respect the vehicle capacity and guarantee that if the route arrives to a customer than it has to leave this customer .",
    "the same requirements are valid for the vrptw , in addition to satisfying time windows of all visited customers .",
    "let @xmath38 be the binary decision variable that is equal to 1 if and only if the route @xmath39 is selected .",
    "the sp formulation is as follows : @xmath40 this can be used to model the cvrp , vrptw and many other vrp variants , depending on how we define the set of routes @xmath37 .",
    "the objective function minimizes the total cost of the selected routes .",
    "the cost of route @xmath39 , denoted by @xmath41 , is computed using the arc costs @xmath14 defined above .",
    "namely , given a route @xmath42 that sequentially visits nodes @xmath43 , @xmath44 , its total cost is given by @xmath45 constraints impose exactly one visit to each customer node .",
    "each column @xmath46 is a binary vector in which @xmath47 if and only if the corresponding route @xmath42 visits customer @xmath20 .",
    "constraint imposes the maximum number of vehicles available at the depot .",
    "if @xmath3 is sufficiently large for the problem , than this constraint can be dropped from the formulation .",
    "generating all routes of @xmath37 is impractical in general , as the number of routes is exponential in terms of the numbers of customers .",
    "hence , set partitioning formulations require using the column generation technique for solving the linear relaxation of model  @xcite . as a consequence , to obtain optimal integer solutions we need a branch - and - price method @xcite . in the column generation technique , we start with a small subset of routes @xmath48 that is used to create the following restricted master problem ( rmp ) : @xmath49 notice that the rmp is the linear relaxation of  , but considering only a subset of variables",
    ". let @xmath50 and @xmath51 be the dual variables associated to constraints and , respectively .",
    "at each iteration of the column generation method , we solve the rmp to obtain a dual solution @xmath52 that is used to generate the columns that are not in the rmp yet .",
    "these columns are associated with feasible routes obtained by solving the following subproblem : @xmath53 where @xmath54 and @xmath55 is a binary vector such that @xmath56 if and only if route @xmath39 visits node @xmath20 and goes directly to node @xmath21 .",
    "this subproblem is a _",
    "resource constrained elementary shortest path problems _",
    "( rcespp ) @xcite .",
    "let @xmath57 be associated to an optimal route @xmath42 of the subproblem .",
    "if the corresponding value @xmath58 is negative , then a new variable @xmath38 can be added to the rmp using this route .",
    "indeed , @xmath58 is the reduced cost of this new variable , for which we have the following cost and column coefficients : @xmath59 @xmath60 hence , @xmath42 is added to @xmath61 and the new rmp has to be solved again . if @xmath58 is nonnegative and @xmath52 are optimal dual solutions of the current rmp , then the optimal solution of the current rmp is also optimal for the linear relaxation of the mp .",
    "hence , the column generation method terminates successfully .",
    "the performance of a computational implementation of the column generation algorithm is strongly dependent on the way rmps and subproblems are solved . to be successful",
    ", implementations should quickly solve the rmps and use stable dual solutions that help to reduce the total number of iterations @xcite .",
    "solving the rcespp effectively is also a very important requirement in a column generation algorithm for vrp variants .",
    "although integer programming formulations are available for the rcespp , they can not be solved effectively by the current state - of - the - art optimization solvers @xcite .",
    "the current best strategies use a label - setting algorithm based on dynamic programming .",
    "this algorithm was originally proposed by @xcite and @xcite and since then has been continuously improved @xcite .",
    "in this section , we propose a generalized vrp formulation .",
    "the idea of this new family of formulations is to have binary variables associated to up to @xmath0 ( sequential ) steps in the network .",
    "one step corresponds to traversing a given arc in the network , so @xmath0 steps correspond to a partial path that traverses exactly @xmath0 arcs .",
    "let @xmath62 be the set of all feasible @xmath0-steps in the network , including also all the feasible @xmath63-step paths that start at node @xmath8 , for all @xmath64 , when @xmath65 .",
    "by feasible we mean that the arcs can be traversed sequentially and that none of the resources are violated .",
    "for instance , if @xmath66 then @xmath62 is the set of all partial paths of the forms @xmath67 and @xmath68 , for any @xmath69 .",
    "given a partial @xmath63-step path @xmath70 , for @xmath71 , we denote by @xmath72 and @xmath73 its first and last nodes , respectively .",
    "let @xmath74 be a binary variable that is equal to @xmath19 if and only if the arcs in @xmath70 are traversed sequentially in the optimal path .",
    "for the sake of clarity , we assume at first that capacity is the only resource in the problem . let @xmath75 be a continuous decision variable that is equal to the cumulated demand of all nodes visited by a route up to node @xmath21 ( inclusive ) .",
    "the @xmath0-step formulation for the cvrp is as follows : @xmath76 where @xmath77 contains only the paths that traverse arc @xmath11 for a given pair @xmath12 ; @xmath78 is the total cost of traversing all arcs in path @xmath79 ; and @xmath80 and @xmath81 are vectors defined as @xmath82 @xmath83 for all @xmath84 and @xmath70 . in this formulation , constraints impose that each customer node is visited at most once ; constraints ensure that if two paths are linked , then the last node in one path is the same as the first node in the other ; constraint imposes the maximum number of ( complete ) routes in an optimal solution ; constraints and ensure that routes satisfy the capacity resource and has no subtours ; and impose the binary domain of the decision variables @xmath85 .",
    "notice that the @xmath0-step paths in @xmath62 must traverse exactly @xmath0 arcs in the network .",
    "the only partial paths in @xmath62 that are allowed to cross less than @xmath0 arcs are those that starts on the depot node 0 .",
    "customer time windows can also be included in the @xmath0-step formulation by adding the following constraints , resulting in the vrptw @xmath0-step model : @xmath86 @xmath87 where @xmath88 is a decision variable that indicates the time instant that the service starts at node @xmath89 .",
    "constraints can be written in a coupled way , based only on the first ( @xmath72 ) and last ( @xmath73 ) nodes of the partial path @xmath70 , as follows : @xmath90 @xmath91 where @xmath92 is the total demand of the nodes visited by this path , except for its first node .      as mentioned before , model  is a family of formulations , because for each @xmath93 we have different paths . indeed ,",
    "for particular choices of @xmath0 , we obtain the vf formulation  and the sp formulation  , as presented in proposition [ prop : particularcases ] .",
    "[ prop : particularcases ] the vehicle flow formulation  and the set partitioning formulation  are particular cases of the @xmath0-step formulation , with @xmath94 and @xmath95 , respectively .    in the @xmath19-step formulation , the set @xmath62 is given by all the single arcs @xmath11 , with @xmath96 .",
    "hence , all variables in this formulation can be rewritten as @xmath97 , where @xmath98 is the arc traversed by the 1-step path @xmath70 . by replacing this in the @xmath0-step formulation  and noticing that path @xmath79 can be expressed uniquely by its corresponding pair of nodes @xmath72 and @xmath73 , we obtain the vf formulation . on the other hand , in the @xmath99-step formulation , set @xmath62 is given by all the @xmath63-paths that start at node @xmath8 , @xmath100 , as no @xmath99-step path exists .",
    "hence , @xmath62 can be reduced to all feasible complete routes , as in the usual sp formulation .",
    "in addition to that , since any path in @xmath70 is a proper feasible route , resource constraints in the @xmath0-step formulation are redundant and can be discarded , which leads to the sp formulation .",
    "@xmath101      for any value of @xmath102 ,",
    "the corresponding @xmath0-step formulation is a valid vehicle routing problem formulation .",
    "the basic difference between formulations with different values of @xmath0 lies in the level of arc coupling in the partial paths .",
    "indeed , in the @xmath19-step formulation , the arcs are totally detached , so the model has to decide what is the best way of connecting them , without violating other constraints such as elementarity and resource availability .",
    "the number of variables in the model is polynomial in terms of the number of nodes , so a general - purpose optimization package could be used to solve it .",
    "in addition , generating these paths is quick and straightforward .",
    "however , the vf formulation is well known for its poor performance , mainly due to a weak linear relaxation . on the other , in the @xmath99-step formulation all the arcs are already attached so the model has only to choose what is the best set of routes .",
    "the sp formulation is well recognized by having a stronger linear relaxation , but column generation and branch - and - price methods are required to solve the problem , as the number of variables is exponential in terms of the number of customers . in this case , the difficulty lies in generating the paths , as they must be feasible routes that depart from and return to the depot .",
    "these features illustrate that vf formulations and sp formulations are extremal cases of @xmath0-step formulations . at this point ,",
    "an intriguing question emerges : is there a choice of @xmath0 such that the @xmath0-step formulation has a reasonably strong linear relaxation and performs well in practice ?",
    "proposition [ prop : particularcasesobj ] brings an interesting relationship between @xmath0-step formulation regarding their optimal values .",
    "[ prop : particularcasesobj ] let @xmath103 be the optimal value of the linear relaxation of a @xmath0-step formulation , for @xmath102 .",
    "for any @xmath104 , we have that @xmath105 .    by contradiction ,",
    "let us assume that @xmath106 .",
    "the @xmath0-step formulation has the following partial paths : @xmath107 in the @xmath108-step formulation , we have the partial paths : @xmath109 hence , both formulations have all @xmath63-step paths starting on @xmath8 , for @xmath71 .",
    "the difference between them lies in the partial paths starting on @xmath110 and in the @xmath108 paths starting on @xmath8 .",
    "let @xmath111 and @xmath112 be primal and dual optimal solutions of the @xmath0-step formulation . since they are optimal , no partial path in the @xmath0-step formulation can lead to a column with negative reduced cost for the dual solution @xmath112 . on the other hand , since @xmath106 , there must exist a path @xmath113 in the @xmath108-step formulation that leads to a column with negative reduced cost for @xmath112 .",
    "however , this is a contradiction , as any @xmath0-step path visiting only vertices in @xmath114 has a reduced cost greater than or equal to zero .",
    "indeed , the sum of @xmath115 terms can not be negative if the sum of each combination having @xmath0 terms of them is non - negative .",
    "therefore , @xmath105 .",
    "@xmath101    we now present an empirical evidence of the difference in the optimal values for @xmath0-step formulations with different values of @xmath0 .",
    "the experiments use the well known solomon s instances of the vrptw @xcite , considering only the first 25 customers .",
    "all partial paths were generated by full enumeration and we added only the feasible ones , i.e. partial paths that satisfy vehicle capacity and customer time windows requirements .",
    "the formulation with all generated paths was solved by the ibm cplex v.12.4 optimization studio , using the cplex concert library .",
    "the experiments were run on a dell precision t7600 with intel e5 - 6280 2.70 ghz cpu and 192 gb ram , under linux operating system .",
    "table [ tab : vrptw : lr : value : p1 - 10 ] shows the optimal values regarding the linear relaxations of the @xmath0-step formulations with @xmath0 from 1 to 10 . as stated in proposition [ prop : particularcasesobj ] , we observe that the optimal value of the linear relaxation for a given @xmath116 is smaller than or equal to the optimal value for @xmath115 . tables [ tab : vrptw : lr : time : p1 - 10 ] and [ tab : vrptw : lr : cols : p1 - 10 ] shows the corresponding total cpu time ( in seconds ) to solve the linear relaxation and the total number of columns in the problem , respectively .    the plots in figures [ fig : rl : r1 ] to [ fig : rlcols : r1 ] summarize the results presented in the tables , for class r1 . for the other classes the behavior is similar . in the plots on the left",
    ", the horizontal axis give the name of the instance , while the lines represent the behavior of a @xmath0-step formulation for a particular @xmath0 .",
    "in the plots on the right , we have the opposite , so we can observe the behavior of an instance according to different values of @xmath0 .",
    "the plots in fig .",
    "[ fig : rl : r1 ] show the objective values of the linear relaxations .",
    "as expected , a line for a given value of @xmath0 dominates all the other lines with a smaller value , for the plot on the left .",
    "an interesting behavior is observed in the plot on the right .",
    "the easiest instances ( e.g. r101 and r102 ) are those with the largest difference on the values according to the variation of @xmath0 .",
    "the most difficult instances ( e.g. r112 and r108 ) are those with the smallest variations in objective values . the plots in fig .",
    "[ fig : rltime : r1 ] show that the largest computational times are for instances r104 and r108 , with intermediate values of @xmath0 ( from 5 to 7 ) .",
    "the same instances and values of @xmath0 have the largest number of feasible partial paths , as presented in the plots in fig .",
    "[ fig : rltime : r1 ] .",
    ".optimal values of the linear relaxations of @xmath0-step formulations with @xmath117 .",
    "[ cols=\"<,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]",
    "any @xmath0-step formulation can be seen as a column generation model , as any of its columns ( variables ) can be generated by following a known rule . of course , for @xmath0 small , the number of columns in the formulation is polynomial in terms of the number of nodes and hence it can be practical to enumerate them beforehand .",
    "even so , for large - scale problems it can be more advantageous to recur to column generation , as only a few variables will be nonzero at the optimal solution . consider the linear relaxation of the @xmath0-step formulation  having only the columns corresponding to an arbitrary subset @xmath118 .",
    "this leads to the following restricted master problem ( rmp ) : @xmath119 where @xmath120 has the same meaning as @xmath121 , but considers only the paths in @xmath122 .",
    "notice that we have written constraints  in a slightly different way for the sake of clarity .",
    "let @xmath123 , @xmath124 , @xmath125 and @xmath126 be the dual variables associated to constraints ",
    ", respectively . given a dual solution @xmath127 of the rmp , where we assume @xmath128 , the reduced cost of the column corresponding to a path @xmath129 is given by : @xmath130 where @xmath131 is equal to 1 if condition @xmath132 is true ; @xmath8 , otherwise .",
    "any feasible path with negative cost corresponds to a path in @xmath133 .",
    "this can be used to generate a new column ( variable ) that has a negative reduced cost and then should be added to the current rmp . after solving the modified rmp a new dual solution is obtained and the process is repeated . if it is not possible to find a path with negative cost , then the current optimal solution of the rmp is also optimal for the linear relaxation of .",
    "similarly , for the vrptw , we have the following restricted master problem ( rmp ) : @xmath134 where @xmath35 is a sufficiently large constant , e.g. @xmath135 . as in the cvrp formulation",
    ", we have dual variables @xmath136 to @xmath137 corresponding to constraints to .",
    "additionally , @xmath138 are the dual variables associated to constraints . given a dual solution @xmath139 of the rmp , where we assume @xmath128 ,",
    "the reduced cost of the column corresponding to a route @xmath129 is given by : @xmath140    regarding the reduced cost of a column in the set partitioning formulation , we can observe that more dual information is provided for the subproblem in a @xmath0-step formulation . indeed , the shadow prices of resources are provided by the rmp and can be used to guide the decision at the subproblem level .",
    "in addition , this information can be used with no extra cost in the subproblem , as the duals are defined for pair of nodes and hence can be included as additional costs on the edges of the network . therefore , even though @xmath0-step formulations have additional constraints in the mp with respect to sp formulations , we can ensure that they are robust @xcite , as the difficulty of solving the subproblem will be the same as in the sp formulation .",
    "we address now a few advantages of the @xmath0-step formulations with respect to the classical formulation for vehicle routing problems . as mentioned before ,",
    "different types of capacity constraints and valid inequalities can be incorporated to these formulations .",
    "they can be even stated in terms of partial paths instead of arcs , when it leads to stronger versions .",
    "other advantage is that different requirements can be imposed directly to the master problem , which can be very convenient when dealing with rich vehicle routing problems and integrated problems , such as location routing and inventory routing problems @xcite .    at the subproblem level",
    ", @xmath0-step formulations may lead to a better performance , as the label extension is limited by a new resource , the number of steps .",
    "also , the subproblems can be solved in parallel , by splitting the label extension by starting node .",
    "then , we are able to solve @xmath9 subproblems in parallel , which is suitable for the current multi - core cpu machines .    as proposed in this paper , the size of the partial paths in the @xmath0-step formulation is limited by the number of traversed arcs .",
    "since this can be seen as a resource , other types of resource may be used to limit a path : capacity , timing , etc .",
    "for example , we could generate partial paths in which the maximum load is a percentage of the capacity , or the total travel time is less than a percentage of the final time instant .",
    "this is somehow a generalization of the bidirectional label - extension @xcite , but with the joining of paths done at the master problem .",
    "this allows for any type of partitioning in the label - extension , instead of using two partitions only ( e.g. several partitions of time ) .",
    "of course , @xmath0-step formulations have a few disadvantages as well .",
    "the first one is that the quality of the bound provided by the linear relaxation of a @xmath0-step formulation depends on @xmath0 .",
    "a large @xmath0 leads to a bound as good as that obtained from the sp formulation , while @xmath94 leads to the weak linear relaxation of the vf formulation .",
    "a good strategy would be the use of a _ turning point strategy _ , in which the value of @xmath0 is increased during the solution process .",
    "hence , at the turning point , the @xmath0-step formulation is converted to a @xmath141-step formulation , @xmath142 , by explicitly combining @xmath0-step paths to obtain @xmath141-step paths .",
    "another disadvantage of the @xmath0-step formulation is related to the size of the master problem . instead of the usual @xmath143 constraints of the sp formulation , a @xmath0-step model of the vrptw has @xmath144 constraints , like in the vf formulation .",
    "although the current linear programming solvers are very powerful nowadays , the solution time can be relatively large for @xmath143 large .",
    "nevertheless , interior point methods can help to overcome this weaknesses , specially if aided by active set strategies for identifying inactive constraints @xcite .",
    "in this working paper , we have introduced a general class of formulations for vehicle routing problems , namely the @xmath0-step formulations .",
    "they offer several advantages over classical formulations and seem to be promising in practice .",
    "theoretical results presented in this paper show that the classical formulations are special cases of the @xmath0-step formulations . also , the proposed formulation can be put in a column generation scheme that allows more dual information to be sent to the subproblem .",
    "this is still a ongoing research , in its very early stage .",
    "a computational implementation of a branch - price - and - cut method for the @xmath0-step formulation is in course and should be finished soon .",
    "computational results will be reported in a future version of this working paper .",
    "the author is thankful to claudio contardo and silvio araujo for pointing out references @xcite and @xcite in private communication .",
    "d.  feillet , p.  dejax , m.  gendreau , and c.  gueguen .",
    "an exact algorithm for the elementary shortest path problem with resource constraints : application to some vehicle routing problems .",
    ", 44:216229 , 2004 .",
    "m.  poggi and e.  uchoa .",
    "new exact algorithms for the capacitated vehicle routing problem . in p.",
    "toth and d.  vigo , editors , _ vehicle routing : problems , methods , and applications _ , mos / siam ser optim , pages 5986 .",
    "2014 .",
    "f.  semet , p.  toth , and d.  vigo .",
    "classical exact algorithms for the capacitated vehicle routing problem . in p.",
    "toth and d.  vigo , editors , _ vehicle routing : problems , methods , and applications _ , mos / siam ser optim , pages 3758 ."
  ],
  "abstract_text": [
    "<S> different types of formulations are proposed in the literature to model vehicle routing problems . </S>",
    "<S> currently , the most used ones can be fitted into two classes , namely vehicle flow formulations and set partitioning formulations . </S>",
    "<S> these types of formulations differ from each other not only due to their variables and constraints but also due to their main features . </S>",
    "<S> vehicle flow formulations have the advantage of being compact models , so general - purpose optimization packages can be used to straightforwardly solve them . </S>",
    "<S> however , they typically show weak linear relaxations and have a large number of constraints . </S>",
    "<S> branch - and - cut methods based on specialized valid inequalities can also be devised to solve these formulations , but they have not shown to be effective for large - scale instances . on the other hand , set partitioning formulations have stronger linear relaxations , but requires the implementation of sophisticate techniques such as column generation and specialized branch - and - price methods . </S>",
    "<S> due to all these reasons , so far it is has been recognized in the vehicle routing community that these two types of formulations are rather different . in this paper </S>",
    "<S> , we show that they are actually strongly related as they correspond to special cases of a generalized formulation of vehicle routing problems . </S>"
  ]
}
{
  "article_text": [
    "solving partial differential equations ( pdes ) on surfaces or manifolds in general has many important applications arising from problems in science and engineering .",
    "examples include diffusion process simulation on interfaces in multiphase problems in fluids and materials , three dimensional geometric modeling and shape analysis , manifold learning in high dimensional data analysis , to name just a few .",
    "one numerical representation of the surface is given by a point cloud which is the simplest , the most natural and ubiquitous way of sampling and representing surfaces and manifolds of free form in three dimension and higher .",
    "points cloud data are routinely obtained by modern sensing technology and are extensively used in 3d modeling and shape analysis .",
    "feature vectors used in data analysis can also be viewed as point clouds typically embedded in a high dimensional euclidean space .",
    "various intrinsic differential operators have been successfully used to _ connect the dots _ to extract geometric quantities and local / global structures from these unstructured point clouds .",
    "hence , it is desirable to develop efficient and robust numerical methods for solving pdes directly on point clouds without a global mesh or parameterization .",
    "although point clouds provide a simple and flexible way for geometric representations , it leads to difficulties when computing integrals and solving differential equations . in this work",
    ", we propose a simple numerical method for discretizing the laplace - beltrami ( lb ) operator on manifolds sampled by point clouds .",
    "the lb operator is one of the most important differential operators defined on manifolds .",
    "it models diffusion process on surfaces in physics .",
    "the eigen - system of lb operator also provides an intrinsic orthogonal basis for square integrable functions and it contains intrinsic geometrical information of the underlying manifold .",
    "the lb operator and related tools such as the lb eigen - map , the heat kernel and diffusion maps are used extensively in shape analysis and manifold learning .    given a manifold sampled by a point cloud",
    ", there are a few ways to approximate the lb operator .",
    "one way is first to construct a global mesh , e.g. , triangulation , on the point cloud .",
    "then the lb operator can be readily approximated using any standard finite element method based on variational formulation on the triangulation @xcite .",
    "this approach naturally results in a symmetric positive definite linear system , which is the main advantage of the approach . on the other hand ,",
    "obtaining a global triangulation itself can already be a challenging task .",
    "moreover , the resulting triangulation may not be good enough for a stable finite element method if the sampling of the point cloud is non - uniform . instead of building a global mesh ,",
    "a local mesh method has been recently proposed in @xcite .",
    "however , the discretized system is not symmetric in general .",
    "there are also a few methods for approximating the lb operator directly on point clouds .",
    "instead of building a mesh on point clouds , these methods only utilize neighboring points relation and are particularly useful when a good quality global mesh is intractable .",
    "one type in this class is the kernel based methods @xcite .",
    "the idea is to transform the differential equation into an integral equation .",
    "if the kernel function is the green s function for the lb operator on the underlying manifold , an exact integral equation can be derived .",
    "however , since the green s function for the lb operator is impossible to obtain in practice , one usually derive an approximate integral equation using a radial symmetric kernel function in the ambient euclidean space with compact support or exponential decay .",
    "even though kernel based method can be generalized to more general settings such as graph laplacian and diffusion maps , the method is still mainly restricted to the diffusion operator .",
    "kernel based methods typically lead to a discrete linear system with a m - matrix , which gives the discrete system a maximum principle analogous to that of the continuous problem .",
    "the approximation error is determined by two competing scales .",
    "one is the spatial scale of the kernel at which geodesic distance of the underlying manifold is approximated by the euclidean distance in the ambient space .",
    "the other is the finer scale at which the data is sampled and such that integration at the kernel scale can be approximated accurately enough . although one can show that the solution to the integral equation converges to the corresponding solution to the lb equation under certain sampling conditions of the point cloud , the order of convergence is low @xcite .",
    "recently , motivated by our earlier work @xcite where the grid based particle method ( gbpm ) was developed for moving interface problems , @xcite has introduced another framework for solving pdes directly on point clouds . the gbpm represent and track a moving interface by meshless lagrangian particles based on an underlying eulerian mesh .",
    "this results in a special type of point clouds representation of the interface with a quasi - uniform sampling rate .",
    "we refer interested readers to @xcite for a complete discussion on the representation . in a follow - up work @xcite",
    ", the method has been further developed to solve several kinds of pdes on surfaces arising from physical and geometric flow based on the gbpm .",
    "the key observation is that both the manifold and the function on it can be parametrized in a local cartesian coordinate system at each point of the point cloud .",
    "hence , differential operators can be approximated at each point by applying a least squares approximation to both the manifold ( and its metric ) and the function in the local coordinate system through neighboring points .",
    "the least squares approximation in the approach introduce a more robust and flexible discretization compared to the exact interpolation on point clouds .",
    "the method applies to general differential operators on point clouds sampling manifolds with arbitrary dimensions and co - dimensions .",
    "local least squares approximation allows also high order accuracy .",
    "moreover , the computational complexity depends mainly on the intrinsic dimension of the manifold rather than the dimension of the embedded space .",
    "however , the computational cost for least squares approximation grows quickly with the dimension of the manifold .",
    "although local approximation accuracy is relatively easy to achieve , a more important and more challenging issue is how to construct a discretization on the whole point cloud so that the resulting linear system can be solved efficiently and stably .",
    "for example , when applied to the lb operator , one can obtain a m - matrix system by using a constrained quadratic programming optimization technique to enforce both the consistency and diagonal dominance after the discretization @xcite . in this work",
    ", we propose a new and simple discretization of the lb operator on point clouds , called the modified virtual grid difference ( mvgd ) .",
    "there are two key ideas in our new approach .",
    "based on the same observation that both the manifold and the function on it can be parametrized in a local cartesian coordinate system centered at each point of the point cloud , we first introduce a virtual grid with a scale adapted to the sampling density in the local coordinate system and we apply finite difference scheme on the virtual grid to discretize the lb operator .",
    "secondly , functions values on the virtual grid used for the finite difference scheme are interpolated from the local least squares approximation of the function * except * at the center grid ( coincided with the data point ) , where the function value at the data point is explicitly used .",
    "as will be shown later , this mvgd discretization leads to a more diagonal dominant and a better conditioned linear system which can be efficiently and robustly solved by many existing fast solver for elliptic pdes .    using a simple 1d example with some explicit formula",
    ", we will show that the mvgd improves both the numerical accuracy and computational stability as compared to the original least squares approach .",
    "the numerical implementation is also simpler compared to the discretization using the constrained quadratic optimization approach proposed in @xcite .",
    "as demonstrated by numerical tests , the mvgd can handle point clouds with non - uniform sampling reasonably well too .",
    "it is worth mentioning that although in this paper we are only concentrated only on solving lb equation on point clouds , there have actually been some interesting recent research works on surface information approximation , parametrization , reconstruction and rendering @xcite .",
    "they provide alternative tools to provide a local approximation of the underlying manifold which is also important for the subsequent discretization of any differential operator on the underlying manifold .",
    "the paper is organized as follows . in section [",
    "sec : background ] , we first briefly summarize the approach discussed in @xcite , and will discuss some issues associated to the discretization of lb operator . the proposed method will be given in section [ sec : modifyapp ] .",
    "explicit discretization for the lb operator for one and two dimensional manifolds will be explicitly constructed .",
    "a simple numerical examples in one dimension will be provided a few insights . in section [ sec : examples ] , we first test our new discretization by solving the lb equation on point clouds .",
    "we then compute the eigenvalues and the eigenvectors of the lb operator and make comparisons with other methods .",
    "for simplicity , we consider a two - dimensional surface @xmath0 in @xmath1 parametrized by @xmath2 , the lb operator acting on a function @xmath3 is defined by @xmath4 where the metric @xmath5 $ ] is given by @xmath6 with the surface @xmath0 given by @xmath7 .",
    "the function @xmath8 is the jacobian of the metric and @xmath9 $ ] is the inverse of the matrix @xmath5 $ ] .",
    "note further that the laplace - beltrami operator is geometric intrinsic and is therefore independent of the parametrization .",
    "so our later computations based on local parametrization is still valid and geometric intrinsic .",
    "numerically , given a point cloud @xmath10 sampling @xmath0 , we want to approximate the above lb operator at any point @xmath11 .",
    "a general framework has been proposed in @xcite .",
    "the key idea is that both @xmath12 and @xmath13 are functions that can be parametrized in a local cartesian coordinate system centered at @xmath14 , and can be approximated to any desired order , e.g. , by polynomials using least squares on neighbors of @xmath14 .",
    "then the lb operator at @xmath14 can be defined in the local coordinate system and easily approximated as well .",
    "a key point is that the resulting numerical approximation or discretization of the lb operator of a function at a point @xmath14 is written as a linear combination of the function values at neighboring points of @xmath14 .",
    "the coefficients of the linear combination depends on the relative locations of the neighboring points and the choice of least squares approximation .",
    "although local approximation accuracy is relatively easy to achieve , the central issue is essentially how to construct a discretization so that the resulting linear system can be efficiently inverted in a stable manner .",
    "for example , it is desirable for the discrete system to preserve analogous properties of the underlying continuous differential operator . without a global mesh , symmetry of the linear system",
    "is not possible in general .",
    "even so , it is still possible and desirable to obtain a m - matrix for the linear system which gives discrete maximum principle and hence stability for the numerical solution .",
    "here we give a brief summary of the idea . for a detailed description ,",
    "we refer interested reader to @xcite and some references thereafter .    for a given @xmath15",
    ", we first collect its @xmath16 neighboring points , e.g. , @xmath16 nearest neighbors ( knn ) , and denote them by @xmath17 belongs to the nearest @xmath16 neighboring points of @xmath14 , for @xmath18}. then the manifold is locally approximated using these points in an appropriate cartesian coordinate system centered at @xmath14 .",
    "for example , one can use standard principal component analysis ( pca ) to obtain the local coordinate system .",
    "let @xmath19 be the covariance matrix at point @xmath15 through its knn , @xmath20 where @xmath21 is the local barycenter of @xmath22 given by @xmath23 the eigenvectors of the covariance matrix @xmath19 provides a cartesian coordinate system centered at @xmath15 . to simplify the later notations",
    ", we denote the corresponding coordinates of knn by \\{@xmath24}. here the @xmath25-axis is in parallel to the eigenvector that corresponds to the smallest eigenvalue and is an approximation of the surface normal at @xmath14 .",
    "as long as the surface is smooth , in a sufficient small neighborhood of @xmath15 resolved by local sampling density , we can construct a local cartesian coordinate system in which the surface @xmath0 is a graph .",
    "then it can be locally approximated by a polynomial , e.g. , of second order , denoted by @xmath26 @xmath27 where the metric @xmath28 in this coordinates system can be approximated by @xmath29=\\left ( \\begin{array}{cc } 1+\\left(\\frac{\\partial z^{(i)}}{\\partial x}\\right)^2 & \\frac{\\partial z^{i)}}{\\partial x}\\frac{\\partial z^{(i)}}{\\partial y } \\\\",
    "\\frac{\\partial z^{(i)}}{\\partial x}\\frac{\\partial z^{(i)}}{\\partial y } & 1+\\left(\\frac{\\partial z^{(i)}}{\\partial y}\\right)^2 \\end{array } \\right ) \\",
    ", , \\ ] ] with @xmath30    numerically , the local approximation can be computed using ( weighted ) moving least squares ( mls ) . given a function @xmath13 defined on @xmath0 also sampled on the point cloud , we again use mls to approximate it in the same local coordinate system at @xmath14 , e.g. , by a quadratic polynomial , denoted by @xmath31 , @xmath32 note that such least squares approximation is valid only locally near @xmath14 . for general situations when the number of data points is larger than the degree of freedom or when the underlying function @xmath13 is not a polynomial of the same or lower degree , the value of least square approximation at @xmath14 given by @xmath33 is generally different from @xmath34 . once we have obtained such least squares approximation , we can then approximate the derivatives of @xmath13 using the corresponding derivatives of the polynomial @xmath35 . by expanding ( [ eqn : surlapeqn ] )",
    ", we obtain @xmath36 where coefficients @xmath37 depend on the local metric , which can be computed from local reconstruction of the surface to . from the local approximation for @xmath31",
    ", we have : @xmath38 as @xmath35 is the least squares approximation , we have the system of linear equation @xmath39 where @xmath40 @xmath41 @xmath42 with the sum is taken over @xmath14 and its knn , i.e. @xmath43 .",
    "so , @xmath44 for @xmath45 are all linear combinations of values of @xmath13 at @xmath14 and @xmath46 .",
    "thus , at every point on the point cloud , the lb operator can be discretized and expressed as a linear combination of its value and its neighboring values , where the coefficients depend on the locations of neighboring points . by assembling the discretization at all points of the point cloud together ,",
    "we can obtain a linear system with the function value at each point of the point cloud as unknowns .",
    "each row of the matrix corresponds to the discretization of lb operator at a point and we denote the matrix by @xmath47 .",
    "first of all , @xmath47 is not symmetric in general because the least squares approximation at each point is computed in a local coordinate system through its nearest neighbors . for a general point cloud ,",
    "the relative positions of nearest neighbors for two nearby points are different .",
    "this fact is illustrated by fig [ fig : unsymmat ] . consider the two points ( red square ) on a curve ( black curve ) .",
    "local coordinate systems are plotted using arrow ( along the normal ) and dashed ( along the tangent ) lines , respectively .",
    "the @xmath48 coordinate of each point translated to the local coordinate system of the other point is denoted by a blue circle .",
    "in general , @xmath49 is different from @xmath50 .",
    "local approximation order can be achieved by using certain higher order of polynomial in the least squares approximation .",
    "for example , if quadratic polynomials are used for the local least squares approximation for the lb operator , local truncation error is at least of first order ( of second order if super - convergence happens ) @xcite .",
    "however , monotonicity or discrete maximum principle is not preserved by the quadratic approximation . moreover",
    ", the matrix @xmath47 can be quite ill - conditioned especially when the sampling density of the point cloud is highly non - uniform .",
    "therefore , a more challenging problem is how to construct a discretization so that one can have a computationally efficient algorithm to stably invert the resulting linear system .",
    "to address these issues , one approach proposed in @xcite is to enforce the consistency and the diagonal dominance as constraints . since consistency is guaranteed , which implies that the sum of each row of @xmath47 is zero , diagonal dominance is enforced if the diagonal element is of different sign with all off - diagonal elements .",
    "this means that the local least squares approximation is transformed into a constrained optimization problem .",
    "the resulting discretization leads to a m - matrix and hence the discrete maximum principle holds .",
    "however , quadratic programming is used for the optimization at each point which increases the computational cost .",
    "one key idea for the mvgd is to introduce a virtual grid aligning with the local coordinate system of each data point with the grid size adapted to the local sampling density . instead of using the derivatives of the local least squares approximation at the data point to approximate the corresponding derivatives of the underlying function , we approximate",
    "the derivatives of the underlying function by applying an appropriate finite difference method on the local least squares approximation with the following modification : the value of the original function instead of the value of the least squares approximation is used at the center grid which coincides with the data point .    )",
    "are plotted in red squares .",
    "the least squares approximation to the manifold ( @xmath51 ) is plotted in the red dashed line . on this parametrized surface",
    ", we obtain a least squares approximation to the function @xmath13 , represented by @xmath52 .",
    "then we use the function value at @xmath53 ( located using black circles ) to approximate the derivatives of @xmath13 at @xmath54.,width=226 ]    here we first use the following 1d example to illustrate our method . assume @xmath13 is a function defined on a 1d curve sampled by a point cloud @xmath55 with @xmath56 and @xmath57 . in a local coordinate with origin at @xmath14 , let @xmath51 be the least squares approximation of the curve and @xmath52 be the least squares approximation of @xmath13 near @xmath14 in the local coordinate . with a virtual grid in the @xmath48-dimension centered at @xmath14 and with a grid size @xmath58 , we define the following mvgd at @xmath14 to approximate derivatives of @xmath13 , @xmath59 note that we have replaced @xmath60 by @xmath56 for the central finite difference formula for @xmath61 . in general , for a least squares approximation , we have @xmath62 and so @xmath63 . in the case when we use a polynomial with a degree less than 3 in the least squares approximation , we have @xmath64 if the least squares polynomial has a degree less than 4 , we have @xmath65 for a 1d curve , the lb operator in the local coordinate at @xmath14 is explicitly given by @xmath66 which leads to the following two possible ways of discretizing the lb operator at @xmath14",
    ".    1 .   the central difference @xmath67 ^ 2}-\\frac{y^{(i)}_{x}(0)y^{(i)}_{xx}(0)\\tilde{d}_hu({\\mathbf{p}}_i)}{\\left(1+[y^{(i)}_x(0)]^2\\right)^2 } \\ , ; \\label{eq : center}\\ ] ] 2 .",
    "the central difference in the divergence form @xmath68 ^ 2}}- \\left(\\frac{1}{\\sqrt{1+[y^{(i)}_x(\\frac{h}{2})]^2 } } + \\frac{1}{\\sqrt{1+[y^{(i)}_x(-\\frac{h}{2})]^2}}\\right ) u_i    + \\frac{u^{(i)}(-h)}{\\sqrt{1+[y^{(i)}_x(-\\frac{h}{2})]^2}}}{h^2\\sqrt{1+[y^{(i)}_x(0)]^2 } } \\ , .",
    "\\label{eq : divergence}\\ ] ]    both discretizations are easy to implement and have similar performance as will be shown on a simple test in section [ subsec : lb ] . for most of our tests we use the non - divergence form ( [ eq : center ] ) in this work .",
    "the mvgd can be easily generalized to high dimensions for the lb operator . to approximate a derivative of @xmath13 at a point @xmath14",
    ", one can simply apply the standard centered difference to the local least squares approximation @xmath31 of @xmath13 on a virtual grid centered at @xmath14 and replace @xmath31 at the center grid by @xmath56 whenever needed .",
    "the same strategy can be applied to other type of finite difference approximations .",
    "for example , to solve the differential equation with an advection term such as the advection diffusion equation , one should use an upwind or a one sided difference .",
    "we can made the following modification to the standard one sided difference , @xmath69 corresponding to the forward and the background differences , respectively .    the grid scale @xmath58 of the virtual grid at each data point should be compatible with the local sampling density of the point cloud , which will be justified to some extent below . at a point @xmath14 ,",
    "the general guideline is that @xmath58 should not be too large so that @xmath70 or @xmath71 becomes an extrapolation of @xmath13 in terms of local least squares approximation through its @xmath16 neighbors @xmath22 .",
    "this should be avoided whenever possible since it may cause numerical instability . on the other hand",
    ", @xmath58 should not be too small compared to the spacing of data points near @xmath14 since it may leads to unnecessary ill - conditioning of the linear system without gaining more accuracy .",
    "there are many possible ways to choose @xmath58 according to this guideline which all produce satisfying and similar numerical results .",
    "for example , one could choose @xmath58 to be the average spacing near @xmath14 using its knn .",
    "in our numerical experiments , we choose @xmath72 for a one dimensional manifold ( 1d curve ) , which is one - fourth of the size of the interval that contains the knn in the local coordinate at @xmath14 .",
    "we use @xmath73 for a two dimensional manifold .    for point clouds sampled from open surfaces with boundary",
    ", various boundary conditions can be incorporated in the mvgd at boundary points . for an open surface @xmath0 with the dirichlet boundary condition @xmath74",
    ", we just enforce this condition at all boundary points and use the mvgd for all interior points . for an open surface with the neumann boundary condition @xmath75 ,",
    "where @xmath76 is the normal of the boundary in the tangent plane of the surface , we use the following reflection method in the @xmath76 direction .",
    "the key idea of the reflection method is to create an extended layer of ghost points by reflecting those interior points near the boundary with respect to the boundary .",
    "the neumann boundary condition is used to reflect the function values at those interior points near the boundary to their reflected points .",
    "once the reflection is done , the mvgd discretization can be applied at all interior points which results in a linear system that involve all interior points as well as the neumann boundary condition . in order to implement the reflection for an interior point near the boundary",
    ", one needs to construct a local coordinate system at a corresponding boundary point which consists of the normal to the surface , the tangent of the boundary and the normal to the boundary in the tangent plane of the surface . to be more specific mathematically ,",
    "let @xmath77 and @xmath78 be the sets of interior and boundary points in the point cloud , respectively . for an interior point @xmath79 , we check if any of its knn is a boundary point .",
    "if no , we just use mvgd for the discretization at @xmath80 as described before .",
    "if yes , we need to create a ghost point as the reflection of @xmath81 with respect to the boundary .",
    "first , we find the closest boundary point @xmath82 , i.e. @xmath83 and construct a local coordinate system at @xmath82 as follows . following the procedure proposed in @xcite , we use the @xmath84-nearest boundary neighbors of @xmath85 in @xmath78 to construct the boundary curve locally as @xmath86 in some local coordinate system .",
    "this provides the tangent of the boundary at @xmath85 , denoted by @xmath87 . using the pca on the @xmath84-nearest neighbors of @xmath85 from the whole data set",
    ", one constructs the normal to the surface at @xmath85 , denoted by @xmath88 .",
    "then the normal to the boundary at @xmath85 in the tangent plane of the surface is then given by @xmath89 .",
    "assuming @xmath81 has coordinates @xmath90 in this local coordinate system , its reflection point @xmath91 has coordinates @xmath92 .",
    "the setup is summarized and is plotted in figure [ fig : neumannsetup ] .    once the reflection point is determined , we impose the neumann boundary condition @xmath75 by assigning the function value at the reflected point by @xmath93 once we obtain all reflections of all interior points near the boundary with respect to the boundary , we assign their function values by imposing the boundary condition and we use the mvgd to discretize the differential operator at each interior point @xmath94 .",
    "note that the knn of @xmath95 consist of points in @xmath96 , where @xmath97 denotes the set of all reflected points .",
    "hence a linear system involving all interior points is formed with the neumann boundary condition implicitly incorporated . combining the treatments for the dirichlet and the neumann boundary conditions",
    ", one can also easily deal with the general robin type of boundary condition .    finally ,",
    "for the full linear system resulting from the above discretization for the lb operator at each point , we find that algebraic multi - grid ( amg ) is a very effective solver .      for simplicity",
    ", we use the laplacian in @xmath98 to shed some insights into the new discretization in terms of both accuracy and stability .      in terms of local truncation error , from the definitions in ( [ eq : centered1 ] ) , we have @xmath99 and so , one can see that when @xmath58 is compatible with the local spacing of data points and quadratic polynomial is used for least squares approximation , the two terms in the above expression for local truncation error is of the same order .",
    "they are at least of @xmath100 and can be of @xmath101 if the distribution of data points has some symmetry so that super - convergence occurs ( see @xcite ) .      as discussed before ,",
    "an important and more difficult issue is for a discretization is to result a better behaved linear system that can be solved stably and efficiently . since we are discretizing the lb operator directly on a point cloud without a global mesh or parametrization ,",
    "it is rather hard , if not impossible , to design a discretization so that the resulting linear system has a symmetric positive definite matrix .",
    "however , one can still hope that the linear system has a m - matrix due to the use of least squares approximation instead of exact interpolation .",
    "discretization based on the least squares approximation provides ( i ) more robustness with respect to noise or almost degeneracy of point distribution , e.g. , very close neighbors when sampling is highly non - uniform , and ( ii ) flexibility to satisfy both required accuracy and extra constraints .",
    "for example , a constrained optimization approach was proposed in @xcite to design such a discretization . however , quadratic programming has to be used for the optimization at each point .",
    "here we show that the proposed mvgd for the lb operator can also achieve this goal .",
    "since our discretization of the lb operator is consistent , the sum of each row of the matrix of the discretized linear system is zero .",
    "if the matrix is diagonal dominant , then it is a m - matrix .",
    "below we construct an explicit example for the laplacian in @xmath98 to show that by using the value of the original function instead of the value of the least squares approximation at the center grid in the standard central finite difference scheme , diagonal dominance can be achieved for the linear system when the grid size is comparable to the local spacing of the point cloud .",
    "consider that the discretization of the laplacian of a function @xmath102 on the straight line at the point @xmath54 as shown in fig [ fig : analysis ] , and the function @xmath102 is sampled at regular grid points with grid size @xmath84 .",
    "assume @xmath103 is the least squares quadratic approximation through the function values at 5 points , i.e. @xmath104 for @xmath105 . from the least squares approximation",
    ", we have @xmath106 and so @xmath107 if we simply use the derivative of the least squares approximation at the origin , it leads to the following discretization of @xmath108 @xmath109 where @xmath110 .",
    "although it is consistent with the second order local truncation error , the resulting matrix is not diagonal dominant since off - diagonal elements have mixed sign .",
    "this means that the linear system after discretization does not give a m - matrix and this can cause numerical instability and might lead to non - convergence for many iterative methods .",
    "now for the proposed mvgd discretization , we have @xmath111 as long as @xmath112 all off - diagonal elements have different sign from diagonal element which makes the discretized linear system having a m - matrix .",
    "since @xmath113 and @xmath114 in this simple example , our choice of @xmath58 according to ( [ eqn : defh ] ) implies @xmath115 and so the ratio @xmath116 satisfies above conditions .    from this simple yet explicit example",
    ", we see that by replacing @xmath117 by @xmath118 at the center grid in the modified central finite difference , we have introduced to the coefficient @xmath119 in the new discretization an extra term , @xmath120 .",
    "it can be easily checked that the magnitude of the newly added term is of order @xmath101 which is the same as @xmath121 when @xmath122 , which is a special case of equation when a quadratic polynomial is used for the least squares approximation and data points are regularly distributed around 0 .",
    "however , the key observation is that this modification enhances the diagonal dominance . in this special case , for a given @xmath84 , diagonal dominance",
    "is guaranteed for any @xmath58 satisfying . for more general cases ,",
    "an explicit formula is more complicated since it depends on both the distribution of neighboring points near 0 and the number of points used in the least squares approximation .",
    "nevertheless , we will demonstrate numerically that the new discretization of lb operator on point clouds will indeed lead to a much better conditioned matrix in the following section .    finally , in practice , at each point one could also determine the virtual grid spacing @xmath58 by the following dynamical approach .",
    "we can first determine explicitly all the coefficients in the discretization for the lb operator in terms of @xmath58 , and then we choose the value of @xmath58 at each sampling point to optimize the diagonal dominant property .",
    "in this section , we give numerical results from our proposed mvgd discretization of the lb operator on point clouds .",
    "we are going to demonstrate that the new discretization indeed provides better conditioning , stability and numerical accuracy when compared to the simple least squares approach ( without using the constraint optimization ) as described in section [ sec : background ] as proposed in @xcite .",
    "for all numerical examples , the linear system corresponding to the mvgd discretization is solved by the agm .",
    "while the linear system corresponding to the simple least squares approach can not be typically solved by most common efficient iterative methods and is solved by gmres in our tests .",
    "let @xmath47 be the matrix corresponding to the discretization of the lb operator on a given point cloud .",
    "we decompose it as @xmath123 according to gauss - seidel iteration , i.e. , @xmath124 is upper triangular portion of @xmath47 .",
    "we compute the eigenvalues of matrix @xmath125 for a few point clouds in 2d and 3d .",
    ", width=453 ]     ( b).,width=453 ]    in our first example , we have sampled the two curves in fig [ fig : twocurves ] by the gbpm , where an interface is sampled by closest points to those underlying mesh points in the vicinity of the interface .",
    "a typical point cloud sampling an interface by the gbpm is illustrated in fig [ fig : twocurves ] ( a ) , where we plot the underlying mesh in solid line , all active grids near the interface ( a circle ) using little blue circles and their associated closest points on the interface using little red squares .",
    "the correspondence between each pair is shown by a solid line link .",
    "the point cloud resulting from the gbpm can be quite non - uniform because two closest points to two mesh points can be very close or the same .",
    "the eigenvalues of matrix @xmath125 corresponding to the discretization using the ls approach for these two point clouds are plotted in fig [ fig : pre_lapspectrum ] .",
    "the unit circle in the complex plane is plotted in red . as we can see clearly , the magnitude of most of these eigenvalues ( blue dots ) are larger than one and there is no guarantee of convergence if gauss - seidel iteration is used to solve the linear system .",
    "fig [ fig : lapspectrum ] shows the eigenvalues corresponding to the mvgd discretization .",
    "the magnitude of all eigenvalues are now less than 1 .",
    "hence , even the simple gauss - seidel iteration can be used to solve the linear system .       and @xmath126 , respectively.,width=453 ]    we first consider a simple example , point clouds sampled from a unit circle centered at the origin . on the unit circle ,",
    "let @xmath127 which solves @xmath128 .",
    "we solve this lb equation on three different point cloud data sets sampled on the circle .",
    "one is evenly distributed , the second one is sampled by the gbpm and the third one is a non - uniformly sample obtained by randomly picking points on the circle .",
    "fig [ fig : amg_uniform ] shows the @xmath129 errors in the numerical solution using these three different type of sampling methods . in fig",
    "[ fig : amg_uniform ] ( a ) and ( c ) , we plot the error in the solutions versus the number of sampling points .",
    "in fig [ fig : amg_uniform ] ( b ) , we consider the error versus the grid spacing @xmath130 in the underlying uniform mesh . as a comparison , we have also implemented the mls approach as discussed in @xcite .",
    "the weights in the method are chosen to be @xmath131 if @xmath132 and @xmath133 if @xmath134 , where @xmath16 is the number of neighboring points , which is reported to be one of the best weighting functions .",
    "even though all methods seem to give second order convergence , the proposed discretization in this paper can achieve a better accuracy in solving the lb equation .",
    "more importantly , since the linear system resulted from the mvgd discretization can be solved by any efficient iterative solver , such as amg , it is computationally much more efficient .",
    "we have implemented the mvgd for the lb operator using both central difference ( [ eq : center ] ) and the divergence form ( [ eq : divergence ] ) and show results in fig [ fig : amg_uniform ] ( a ) .",
    "the two are comparable and both are significant better than that by using direct mls discretization .",
    "we carry out a similar test on a sphere .",
    "let @xmath135 be a point on any given surface @xmath12 , we have @xmath136 where @xmath137 is the mean curvature vector on @xmath12 @xcite .",
    "if @xmath12 is the unit sphere centered at the origin , the mean curvature is one and the above equation is reduced to @xmath138 . to test the convergence of the algorithm , we look at only the @xmath48-coordinate in @xmath135 , i.e. we let the right hand side of ( [ eqn - lapsphere ] ) be @xmath139 and therefore the exact solution to the equation is simply @xmath48 .",
    "once again , we consider three different point clouds .",
    "one is the _ uniform _ sampling given by the fibonacci sampling @xcite , the second one is sampled by the gbpm and the third one is non - uniform sampled by randomly picking points on a sphere .",
    "these three different samplings of the sphere are shown in fig [ fig : sampling ] .",
    "fig [ fig : amg_gbpm ] ( a ) shows the @xmath129 error versus the number of points on a uniformly sampled sphere , and ( b ) shows the corresponding @xmath129 error versus the grid spacing @xmath130 on a sphere sampled by the gbpm and ( c ) shows the @xmath129 error versus the number of points on a non - uniformly sampled sphere .",
    "we observe similar convergence behaviors as in the circle case .",
    "both methods converge in approximately second order .",
    "amg works beautifully for the linear system discretized by the mvgd .",
    "table [ table : tablecputime ] presents the cpu time ( in second ) for solving the lb equation on a sphere sampled by the uniform sampling .",
    "it shows that the cpu time is approximately linear in the number of sampling points .",
    ".the cpu time for solving lb equation discretized by the mvgd using the amg .",
    "sample size represents the number of points on a uniformly sampled sphere .",
    "the cpu time is approximately linearly proportional to the sample size . [",
    "cols=\"^,^,^,^,^,^,^\",options=\"header \" , ]     [ table : eigtableuppersphereneu ]",
    "in this paper , we have proposed the modified virtual grid difference ( mvgd ) method for discretizing the lb operator on manifolds sampled by point clouds .",
    "the discretization is very simple to implement .",
    "the discretized system can achieve diagonal dominance and can be efficiently solved by many well developed iterative methods which then leads to a computationally very efficient method for solving the lb equation on manifolds . as a future application , we will extend this proposed lb discretization to solve differential equations on moving interfaces .",
    "the work of leung was supported in part by the hong kong rgc under grants 16303114 and 16309316 .",
    "zhao s research is partially supported by the nsf grant dms-1418422 .",
    "the authors would also like to thank j. liang and r. lai for their helps on implementing the least squares approach as proposed in @xcite and also the local mesh method as proposed in @xcite .",
    "m.  belkin , j.  sun , and y.  wang .",
    "constructing laplace operator from point clouds in rd . in _ proceedings of the twentieth annual acm - siam symposium on discrete algorithms _ , pages 10311040 .",
    "society for industrial and applied mathematics , 2009 ."
  ],
  "abstract_text": [
    "<S> we propose a new and simple discretization , named the modified virtual grid difference ( mvgd ) , for numerical approximation of the laplace - beltrami ( lb ) operator on manifolds sampled by point clouds . </S>",
    "<S> the key observation is that both the manifold and a function defined on it can both be parametrized in a local cartesian coordinate system and approximated using least squares . </S>",
    "<S> based on the above observation , we first introduce a local virtual grid with a scale adapted to the sampling density centered at each point . </S>",
    "<S> then we propose a modified finite difference scheme on the virtual grid to discretize the lb operator . instead of using the local least squares values on all virtual grid points like the typical finite difference method </S>",
    "<S> , we use the function value explicitly at the grid located at the center ( coincided with the data point ) . </S>",
    "<S> the new discretization provides more diagonal dominance to the resulting linear system and improves its conditioning . </S>",
    "<S> we show that the linear system can be robustly , efficiently and accurately solved by existing fast solver such as the algebraic multigrid ( amg ) method . </S>",
    "<S> we will present numerical tests and comparison with other exiting methods to demonstrate the effectiveness and the performance of the proposed approach . </S>"
  ]
}
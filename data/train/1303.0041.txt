{
  "article_text": [
    "the _ quantified constraint satisfaction problem _ qcsp@xmath2 , for a fixed _ template _ ( structure ) @xmath3 , is a popular generalisation of the _ constraint satisfaction problem _ csp@xmath2 . in the latter , one asks if a primitive positive sentence ( the existential quantification of a conjunction of atoms ) @xmath4 is true on @xmath3 , while in the former this sentence may be positive horn ( where universal quantification is also permitted ) .",
    "much of the theoretical research into csps is in respect of a large complexity classification project ",
    "it is conjectured that csp@xmath2 is always either in p or np - complete @xcite .",
    "dichotomy _ conjecture remains unsettled , although dichotomy is now known on substantial classes ( e.g. structures of size @xmath5 @xcite and smooth digraphs @xcite ) .",
    "various methods , combinatorial ( graph - theoretic ) , logical and universal - algebraic have been brought to bear on this classification project , with many remarkable consequences .",
    "a conjectured delineation for the dichotomy was given in the algebraic language in @xcite .",
    "complexity classifications for qcsps appear to be harder than for csps .",
    "indeed , a classification for qcsps will give a fortiori a classification for csps ( if @xmath6 is the disjoint union of @xmath3 with an isolated element , then qcsp@xmath7 and csp@xmath2 are polynomially equivalent ) . just as csp@xmath2 is always in np , so qcsp@xmath2 is always in pspace .",
    "however , no overarching polychotomy has been conjectured for the complexities of qcsp@xmath2 , as @xmath3 ranges over finite structures , but the only known complexities are p , np - complete and pspace - complete ( see @xcite for some trichotomies ) .",
    "it seems plausible that these complexities are the only ones that can be so obtained ( for more in this see @xcite ) .    in this paper",
    "we study the complexity of qcsp@xmath0 , where @xmath1 is a partially reflexive cycle . in this respect ,",
    "our paper is a companion to the similar classification for partially reflexive forests in @xcite .",
    "we derive a classification between those cases that are in nl and those that are np - hard .",
    "for some of the np - hard cases we are able to demonstrate pspace - completeness .",
    "the dichotomy , as depicted in figure  [ fig : wavyline ] at the end , is quite esoteric and deviates somewhat from similar classifications ( for retraction as given in @xcite ) . to our minds , this makes it interesting in its own right .",
    "some of our hardness proofs come from judicious amendments to the techniques used in @xcite .",
    "several others use different elaborate encodings of retraction problems , known to be hard from @xcite .",
    "all but one of our nl - membership results follow from a majority polymorphism in an equivalent template ( indeed  the so - called _ q - core _ of @xcite ) , as they did in @xcite . however , @xmath8 is special .",
    "it has no qcsp - equivalent that admits a majority ( indeed , it omits majority and is a q - core ) , so we have to give a specialised algorithm , based on ideas from @xcite , to demonstrate that qcsp@xmath9 is in l. indeed , and in light of the observations in @xcite , this is the principal news from the partially reflexive cycles classification that removes it from being simply a sequel to partially reflexive forests : for a partially reflexive forest @xmath1 , either the q - core of @xmath1 admits a majority polymorphism and qcsp@xmath0 is in nl , or qcsp@xmath10 is np - hard .",
    "the same can not be said for partially reflexive cycles , due to the odd case of @xmath8 .",
    "this paper is organised as follows .",
    "after the preliminaries , we address small cycles in section  [ sec : small ]",
    ". then we deal with reflexive cycles , cycles whose loops induce a path and cycles with disconnected loops in sections  [ sec : reflexive ] , [ sec : path ] and [ sec : disconnected ] , respectively .",
    "finally we give our classification in section  [ sec : class ] and our conclusions in section  [ sec : conclusion ] .",
    "for reasons of space , many proofs are deferred to the appendix .",
    "let @xmath11:=\\{1,\\ldots , n\\}$ ] .",
    "a graph @xmath12 has vertex set @xmath13 , of cardinality @xmath14 , and edge set @xmath15 . for a sequence @xmath16 , of length @xmath17 , let @xmath18 be the undirected path on @xmath17 vertices such that the @xmath19th vertex has a loop iff the @xmath19th entry of @xmath20 is @xmath21 ( we may say that the path @xmath22 is _ of the form _",
    "@xmath20 ) .",
    "we will usually envisage the domain of a path with @xmath23 vertices to be @xmath11 $ ] , where the vertices appear in the natural order .",
    "similarly , for @xmath16 , let @xmath24 be the @xmath17 cycle with domain @xmath11 $ ] and edge set @xmath25=1 \\}$ ] ( note @xmath26 ) . if @xmath20 and @xmath27 are sequences in @xmath28 such that @xmath29=\\alpha'[i+1 \\bmod n]$ ] then @xmath24 and @xmath30 are isomorphic .",
    "a partially reflexive cycle is one that may include some self - loops .",
    "for such an @xmath31-cycle @xmath32 , whose vertices we will imagine to be @xmath33 in their natural @xmath34 adjacencies , let @xmath35 $ ] be shorthand for a conjunction specifying a path , whichever is the fastest way @xmath34 , from @xmath36 to @xmath37 .",
    "for example , if @xmath38 , then 1 . )",
    "@xmath39 $ ] is @xmath40 , 2 . )",
    "@xmath41 $ ] is @xmath42 , and 3 . )",
    "@xmath43 $ ] is @xmath44 .",
    "we ask the reader to endure the following relaxation of this notation ; @xmath45 $ ] indicates an edge from @xmath36 to @xmath46 then a path to @xmath37 ( which may not be the same as @xmath35 $ ] as the latter may take the other path around the cycle ) .",
    "finally , let @xmath47 indicate @xmath48 , whichever is the quickest way around the cycle @xmath34 .",
    "all graphs in this paper are undirected , so edge statements of the form @xmath49 should be read as asserting @xmath50 .",
    "the problems csp@xmath51 and qcsp@xmath51 each take as input a sentence @xmath4 , and ask whether this sentence is true on @xmath52 . for the former ,",
    "the sentence involves the existential quantification of a conjunction of atoms  _ primitive positive _ logic . for the latter ,",
    "the sentence involves the arbitrary quantification of a conjunction of atoms  _ positive horn _ logic . by convention equalities",
    "are permitted in both of these , but these may be propagated out by substitution in all but trivial degenerate cases . the _ retraction problem _",
    "@xmath53 takes as input some @xmath12 , with @xmath1 an induced substructure of @xmath12 , and asks whether there is a homomorphism @xmath54 such that @xmath55 is the identity on @xmath1 .",
    "it is important that the copy of @xmath1 is specified in @xmath12 ; it can be that @xmath1 appears twice as an induced substructure and there is a retraction from one of these instances but not to the other . the problem ret@xmath0 is easily seen to be logspace equivalent with the problem csp@xmath56 , where @xmath57 is @xmath1 expanded with all constants ( one identifies all elements assigned to the same constant and enforces the structure @xmath1 on those constants ) .    the _ direct product _ @xmath58 of two graphs @xmath12 and @xmath1 has vertex set @xmath59 and edge set @xmath60 .",
    "direct products are ( up to isomorphism ) associative and commutative .",
    "the @xmath61th power @xmath62 of a graph @xmath12 is @xmath63 ( @xmath61 times ) .",
    "a homomorphism from a graph @xmath12 to a graph @xmath1 is a function @xmath64 such that , if @xmath65 , then @xmath66 .",
    "a _ @xmath61-ary polymorphism _ of a graph is a homomorphism from @xmath62 to @xmath12 .",
    "a ternary function @xmath67 is designated a _ majority _",
    "operation if @xmath68 , for all @xmath69 .",
    "a positive horn sentence @xmath4 in the language of graphs induces naturally a graph @xmath70 whose vertices are the variables of @xmath4 and whose edges are the atoms of @xmath4 . in the case of primitive positive @xmath4",
    "one would call @xmath70 the _ canonical database _ and @xmath4 its _",
    "canonical query_. with positive horn @xmath4 there is additional extra structure and one may talk of a vertex - variable as being existential/ universal and as coming before/ after ( earlier/ later ) , in line with the quantifier * block * and its order in @xmath4 .",
    "variables in the same quantifier block will not need their orders considered ( there is commutativity within a block anyway ) . a typical reduction from a retraction problem ret@xmath10 , where @xmath71 , builds a positive horn @xmath4 sentence involving variables @xmath33 where we want @xmath70 restricted to @xmath72 ( itself a copy of @xmath32 ) to map automorphically to @xmath32 .",
    "typically , we can force this with some evaluation of the variables ( some of which might be universally quantified ) .",
    "the other valuations are _ degenerate _ and we must ensure at least that they map @xmath70 restricted to @xmath72 homomorphically to @xmath32 .",
    "the classification for qcsp for cycles of length @xmath73 is slightly esoteric , although it does match the analogous classification for retraction ( the former is a dichotomy between nl and pspace - complete ; the latter is a dichotomy between p and np - complete ) .",
    "the following has appeared in @xcite , where it was given as an application of counting quantifiers in qcsps .",
    "we review it now because we will need to generalise it later in section  [ sec : reflexive ] .",
    "[ prop : c1111 ] qcsp@xmath74 is pspace - complete",
    ".    we will reduce from the problem qcsp@xmath75 ( known to be pspace - complete from , e.g. , @xcite ) .",
    "we will borrow heavily from the reduction of csp@xmath75 to ret@xmath74 in @xcite .",
    "we introduce the following shorthands ( @xmath76 must appear nowhere else in @xmath77 , which may contain more free variables than just @xmath78 ) .",
    "@xmath79 on @xmath80 , it is easy to verify that , for each @xmath81 $ ] , @xmath82 holds iff there exist at least @xmath19 elements @xmath78 satisfying @xmath77 . thus our borrowing the notation of counting quantifiers is justified .",
    "we now reduce an instance @xmath4 of qcsp@xmath75 to an instance @xmath83 of qcsp@xmath74 .",
    "we begin with a cycle @xmath80 on vertices @xmath21 , @xmath84 , @xmath85 and @xmath86 , which we realise through their canonical query ( without quantification ) as @xmath87 @xmath88 ( recall that the canonical query is in fact the reflexive closure of this , but this will not be important in this case or many future cases  when it is important it will be stated explicitly ) . if @xmath4 contains an atom @xmath49 , then this gives rise to a series of atoms in @xmath83 as dictated by the gadget in figure  [ fig : surhomcref4 ] ( for each atom we add many new vertex - variables , corresponding to the vertices in the gadget that are not @xmath89 ) .",
    "these atoms can be seen to join up with the atoms of @xmath90 as in the right end of the figure .",
    "build @xmath91 from @xmath4 by this process and conjunction with @xmath90 . then make @xmath92 from @xmath91 by existentially quantifying all of the variables other than those associated to atoms of @xmath4 ( @xmath78 , @xmath93 in the figure ) and @xmath94 ( @xmath95 in the figure ) .",
    "now , we build @xmath96 from @xmath92 , by copying the quantifier order of @xmath4 on the outside of the existential quantifiers that we already have . thus @xmath97 is a positive horn formula with precisely four free variables .",
    "it is not hard to see that when @xmath94 are evaluated as ( an automorphism of ) @xmath98 , then we have a faithful simulation of qcsp@xmath75 .",
    "this is because @xmath78 and @xmath93 , as in the gadget drawn , may evaluate precisely to distinct vertices on @xmath80 . finally , we build @xmath99 .",
    "it is not hard to see that @xmath83 forces on some evaluation of @xmath94 that these map isomorphically to @xmath98 in @xmath80 .",
    "further , a rudimentary case analysis shows us that when they do not , we can still evaluate the remainder of @xmath96 , if we could have done when they did .",
    "in fact , if @xmath94 are not mapped isomorphically ( but still homomorphically , of course ) to @xmath98 then we can extend each of the edge gadgets to homomorphism under * all maps * of vertices @xmath78 and @xmath93 to @xmath98 ( not just ones in which @xmath78 and @xmath93 are evaluated differently ) .",
    "[ prop : c0111 ] qcsp@xmath9 is in l.    recall @xmath8 has vertices @xmath100 in cyclic order and @xmath21 is the only non - loop .",
    "consider an input @xmath4 for qcsp@xmath9 , without any equalities , and its evaluation on @xmath8 as a game on @xmath4 between _ prover _ , playing ( evaluating on @xmath8 ) existential variables , and _ adversary _ , playing universal variables .",
    "adversary never gains by playing @xmath85 , as any existential edge witness to anything from @xmath101 is already an edge - witness to @xmath85 .",
    "that is , if @xmath102 then already each of @xmath103 and @xmath104 .",
    "similarly , prover never gains by playing @xmath21 .",
    "thus , @xmath4 is true on @xmath8 iff it is true with all universal variables relativised to @xmath101 and all existential variables relativised to @xmath105 .",
    "( this intuition is formalised in the notion of @xmath106-@xmath107-surjective hyper - endomorphism in @xcite .",
    "what we are saying is that @xmath108 is a surjective hyper - endomorphism of @xmath8 . ) henceforth , we will make this assumption of relativisation in our inputs .",
    "given an input @xmath4 we will describe a procedure to establish whether it is true on @xmath8 based around a list of forbidden subinstances .    * an edge @xmath49 in @xmath70 with the later of @xmath78 and @xmath93 being universal . * a @xmath85-star @xmath109 where @xmath110 are universal variables coming before @xmath93 existential . * a path @xmath111 of existential variables , where : both @xmath112 and @xmath113 have edges to * two * earlier universal variables , and @xmath114 have edges each to * one * earlier universal variable . * a path @xmath111 of existential variables , where @xmath112 comes before @xmath113 , and @xmath112 has an edge to an earlier universal variable .",
    "@xmath113 has edges to two earlier universal variables at least one of which comes after @xmath112 .",
    "finally , @xmath114 each have edges to an earlier universal variable .",
    "these cases are illustrated in figure  [ fig : not - yet - drawn ] . using the celebrated result of @xcite",
    "it can be seen that one may recognise in logspace whether or not @xmath4 contains any of these forbidden subinstances .",
    "it is not hard to see that if @xmath4 contains such a subinstance then @xmath4 is false on @xmath8 ( the universal variables adjacent and before @xmath113 can be played as either @xmath115 or @xmath116 to force @xmath113 to be either @xmath84 or @xmath86 ) .",
    "we now claim all other instances @xmath4 are true on @xmath8 and we demonstrate this by giving a winning strategy for prover on such an instance . owing to case",
    "@xmath117 being omitted , adversary has no trivial win .",
    "prover will now _ always play @xmath85 if she can_. owing to the omission of case @xmath118 , prover never has to answer a variable adjacent to more than two elements .",
    "it can be seen that there are few circumstances in which she can not play @xmath85 .",
    "indeed , the only one is if she is forced at some point to play @xmath84 or @xmath86 as a neighbour to adversary s having played @xmath21 . in this case",
    ", adversary can force this response to be propagated as in the chain of cases @xmath119 and @xmath120 , but because these cases are forbidden , adversary will never succeed here in winning the game .",
    "we will use similar edge gadgets to those of figure  [ fig : surhomcref4 ] to prove np - hardness of qcsp@xmath121 , for @xmath122 .",
    "if @xmath122 is even , then the edge gadget @xmath123 consists of @xmath31 copies of @xmath124 where each copy  with vertices @xmath125 , is connected to its successor by edges joining vertex @xmath61 with vertices @xmath61 and @xmath126 ( @xmath34 ) . in the first of the copies ,",
    "the vertex @xmath127 is labelled @xmath93 and a reflexive path of length @xmath128 is added to the vertex labelled @xmath21 , which culminates in a vertex labelled @xmath78 .",
    "the last of the copies of @xmath124 retains the vertex labelling @xmath125  we consider the other vertices ( except for @xmath78 and @xmath93 ) to become unlabelled .",
    "of course , @xmath129 is already drawn in figure  [ fig : surhomcref4 ] .",
    "the left end of @xmath130 is drawn in figure  [ fig : surhomcref56 ] ( to the right ) .",
    "if @xmath122 is odd , then the edge gadget @xmath123 is drawn in a similar manner , except vertex @xmath131 becomes @xmath93 and the reflexive path of length @xmath132 that culminates in @xmath78 at one end and at the other end a vertex that makes a triangle with vertices @xmath21 and @xmath84 , respectively .",
    "the left end of @xmath133 is drawn in figure  [ fig : surhomcref56 ] ( to the left ) .",
    "these gadgets are borrowed from @xcite and have the property that when the right - hand cycle @xmath124 is evaluated automorphically to itself then the rest of the cycles are also evaluated automorphically ( but may twist @xmath134th each turn  this is why we have @xmath31 copies ; @xmath31 is a minimum number , more copies would still work ) .",
    "finally , in the left - hand cycle it can be seen that @xmath78 can be evaluated anywhere except @xmath93 .    just as in proposition",
    "[ prop : c1111 ] , we want to try to force vertex - variables @xmath33 , corresponding to @xmath125 , to be evaluated ( up to isomorphism ) around @xmath124 .    [ prop : reflexive ] qcsp@xmath121 , for any @xmath135 is np - hard .",
    "we begin by recalling the result for qcsp@xmath136 from @xcite , on which our proof for propositions  [ prop : missing ] and corollary  [ cor : disconnected ] will be based . in this proof",
    "we introduce the notions of _ pattern _ and _ @xmath137-selector _ that will recur in the sequel .",
    "[ prop : p101 ] qcsp@xmath136 is pspace - complete .    for hardness , we reduce from _ quantified not - all - equal 3-satisfiability _ , whose pspace - completeness is well known @xcite , where we will ask for the extra condition that no clause has three universal variables ( of course , any such instance would be trivially false ) . from an instance @xmath4 of qnaesat",
    "we will build an instance @xmath83 of qcsp@xmath136 such that @xmath4 is in qnae3sat iff @xmath83 in qcsp@xmath136 .",
    "we will consider the quantifier - free part of @xmath83 , itself a conjunction of atoms , as a graph , and use the language of homomorphisms .",
    "we begin by describing a graph @xmath70 , whose vertices will give rise to the variables of @xmath83 , and whose edges will give rise to the atoms listed in the quantifier - free part of @xmath83 .",
    "most of these variables will be existentially quantified , but a small handful will be universally quantified .",
    "@xmath70 consists of two reflexive paths , labelled @xmath138 and @xmath139 which contain inbetween them gadgets for the clauses and variables of @xmath4 .",
    "we begin by assuming that the paths @xmath138 and @xmath139 are evaluated to vertices @xmath21 and @xmath85 in @xmath140 , respectively ( the two ends of @xmath140 ) ; later on we will show how we can effectively enforce this .",
    "of course , once one vertex of one of the paths is evaluated to , say , @xmath21 , then that whole path must also be so evaluated  as the only looped neighbour of @xmath21 in @xmath141 is @xmath21 .",
    "the gadgets are drawn in figure  [ fig : gadgets ] .",
    "the _ pattern _ is the path @xmath141 , that forms the edges of the diamonds in the clause gadgets as well as the tops and bottoms of the variable gadgets .",
    "the diamonds are braced by two horizontal edges , one joining the centres of the top patterns and the other joining the centres of the bottom patterns .",
    "@xmath137-selector _ is the path @xmath142 , which travels between the universal variable node @xmath143 and the labelled vertex @xmath137 .",
    "( the remainder of this proof is deferred to the appendix . )",
    "[ prop : missing ] let @xmath144 be a cycle in which @xmath145 ( @xmath146 odd ) or @xmath147 ( @xmath146 even ) . then qcsp@xmath148 is pspace - complete .",
    "the reduction is similar to that employed for proposition  [ prop : p101 ] .",
    "we use the pattern @xmath149 and @xmath137-selector @xmath150 .",
    "the key part to the reduction is how we get @xmath151 and @xmath152 to evaluate suitably .",
    "let @xmath153 be variables not appearing in @xmath154 ( cf .",
    "proof of proposition  [ prop : p101 ] ) . in the following ,",
    "interpret @xmath155 to be @xmath156 , if @xmath157 .",
    "for @xmath146 odd , set @xmath158 @xmath159 \\wedge [ y_1 \\rightarrow y_{\\frac{d+3}{2}+\\lfloor \\frac{e - d-5}{2 } \\rfloor } , v_\\bot ] \\wedge [ v_\\top , z_1,\\ldots , z_d , v_\\bot ] \\wedge \\\\ \\mathrm{ref}(x_{\\frac{d+3}{2}},\\ldots , x_{\\frac{d+3}{2}+\\lfloor \\frac{e - d-5}{2 } \\rfloor } ) \\wedge \\mathrm{ref}(y_{\\frac{d+3}{2}},\\ldots , y_{\\frac{d+3}{2}+\\lfloor \\frac{e - d-5}{2 } \\rfloor } ) \\wedge \\psi'(v_\\top , v_\\bot ) \\end{array}\\ ] ] for @xmath146 even , set @xmath160 @xmath161 \\wedge [ y_1 \\rightarrow y_{\\frac{d}{2}+\\lfloor \\frac{e - d-5}{2 } \\rfloor } , v_\\bot ] \\wedge [ v_\\top , z_1,\\ldots , z_d , v_\\bot ] \\wedge \\\\ \\mathrm{ref}(x_{\\frac{d+2}{2}},\\ldots , x_{\\frac{d}{2}+\\lfloor \\frac{e - d-5}{2 } \\rfloor } ) \\wedge \\mathrm{ref}(y_{\\frac{d+2}{2}},\\ldots , y_{\\frac{d}{2}+\\lfloor \\frac{e - d-5}{2 } \\rfloor } ) \\wedge \\psi'(v_\\top , v_\\bot ) \\end{array}\\ ] ]    note how the previous proof breaks down in boundary cases , for example on the cycle @xmath162 .",
    "the following proofs make use of reductions from ret@xmath10 , where @xmath71 .",
    "it is ultimately intended that the variables @xmath33 in the created instance map automorphically to the cycle .",
    "the cycle will be found when the universally quantified @xmath163 is mapped to a non - looped vertex at maximal distance from the looped vertices ( sometimes this is unique , other times there are two ) .",
    "we then require that the universally quantified @xmath164 be mapped to a neighbour of @xmath163 at maximal distance from the loops ( given @xmath163 s evaluation , this will either be unique or there will be two ) .",
    "all other maps of @xmath163 and @xmath164 lead to degenerate cases .",
    "[ prop : odds ] let @xmath32 be an odd @xmath31-cycle which contains an induced @xmath165 ( or is @xmath162 ) .",
    "then qcsp@xmath10 is np - hard .",
    "[ prop : evens ] let @xmath32 be an even @xmath31-cycle which contains an induced @xmath165",
    ". then qcsp@xmath10 is np - hard .",
    "we note that the previous two propositions do not quite use the same techniques as one another .",
    "all cases of proposition  [ prop : missing ] involving more than one non - loop are weakly subsumed by propositions  [ prop : odds ] and [ prop : evens ] in the sense that pspace - completeness only becomes np - hardness .",
    "it is interesting to note that the proposition  [ prop : evens ] breaks down on even cycles with two consecutive loops only .",
    "it is no longer possible to ensure to encircle the cycle . for these cases we will need yet another specialised construction .",
    "[ prop : evens2 ] for @xmath166 , let @xmath32 be an even @xmath31-cycle which contains only two consecutive loops . then qcsp@xmath10 is np - hard .",
    "let @xmath167 be the multiset ( of two or more elements ) , where @xmath168 are the maximal non - looped induced sections ( paths ) of a cycle @xmath32 in which the loops induce a disconnected graph .",
    "a single non - loop between two loops contributes a value @xmath169 to @xmath170 .",
    "we need to split into three cases .",
    "[ prop : discon - unique - max ] let @xmath32 be a partially reflexive @xmath31-cycle in which the loops induce a disconnected graph .",
    "if @xmath170 contains a unique maximal element @xmath171 , then qcsp@xmath10 is pspace - complete .",
    "[ prop : discon - even - gaps ] let @xmath32 be a partially reflexive @xmath31-cycle in which the loops induce a disconnected graph . if @xmath170 contains only one value , then qcsp@xmath10 is pspace - complete .",
    "[ cor : disconnected ] let @xmath32 be a partially reflexive @xmath31-cycle in which the loops induce a disconnected graph . then qcsp@xmath10 is pspace - complete .",
    "[ thm : over4 ] let @xmath172 .",
    "then qcsp@xmath148 is in nl if i. ) @xmath31 is odd and @xmath173 or @xmath84 , or ii . )",
    "@xmath31 is even and @xmath174 or @xmath21 . otherwise , qcsp@xmath148 is np - hard .",
    "pspace - hardness for irreflexive odd cycles is well - known ( see @xcite ) .",
    "hardness for cycles with disconnected loops follows from corollary  [ cor : disconnected ] .",
    "otherwise , for most cycles hardness follows from propositions  [ prop : odds ] and [ prop : evens ] . for reflexive cycles",
    "see proposition  [ prop : reflexive ] and for cycles with a single non - loop see proposition  [ prop : missing ] . finally , the outstanding cases of even cycles with two loops are taken care of in proposition  [ prop : evens2 ] .",
    "now we address the nl cases . for even cycles with no loops , we are equivalent to qcsp@xmath175 ( in nl ",
    "see @xcite ) .",
    "for even cycles @xmath176 , qcsp@xmath177 is equivalent to qcsp@xmath178 ( in nl ",
    "see @xcite ) .",
    "this is because there are surjective homomorphisms from both @xmath179 to @xmath176 and @xmath176 to @xmath180 ( see @xcite ) . for odd cycles , there are surjective homomorphisms from @xmath181 to @xmath182 and from @xmath181 to @xmath183 .",
    "thus , qcsp@xmath184 is equivalent to both qcsp@xmath185 and qcsp@xmath186 and the result follows from @xcite .    for @xmath32 a partially reflexive cycle , either qcsp@xmath10 is in nl or it is np - hard .",
    "owing to theorem  [ thm : over4 ] , it remains only to consider partially reflexive cycles on four or fewer vertices .",
    "firstly , we consider nl - membership .",
    "each of @xmath187 @xmath188 , @xmath189 , @xmath190 , @xmath191 , @xmath192 and @xmath193 admits a majority polymorphism .",
    "it follows form @xcite that qcsp@xmath10 reduces to the verification of a polynomial number of instances of csp@xmath194 , each of which is in nl by @xcite . finally , the case @xmath8 is taken care of in proposition  [ prop : c0111 ] .    for hardness , it is well - known that _ quantified @xmath85-colouring _",
    "qcsp@xmath195 is pspace - complete @xcite . and",
    "the like result for @xmath80 appears as proposition  [ prop : c1111 ] .",
    "we have given a systematic classification for the qcsp of partially reflexive cycles .",
    "many of the tractable cases can be explained by the notion of q - core  a minimal equivalent qcsp template ( see @xcite )  and this is done implicitly in theorem  [ thm : over4 ] .",
    "all np - hard cases we have seen in this paper have templates that are already q - cores , with the sole exception of @xmath196 , whose q - core is @xmath141 .",
    "by contrast , all of the tractable cases are not q - cores , except @xmath193 and @xmath8 .    since finding an algorithm for qcsp@xmath9 we became aware of a polymorphism enjoyed by this structure .",
    "@xmath8 has a ternary polymorphism @xmath197 so that there is @xmath198 such that each of the three binary functions @xmath199 , @xmath200 and @xmath201 is surjective .",
    "the code from figure  [ fig : maroti ] will verify such a polymorphism and is intended to run on the excellent program of mikls marti .",
    "the naming of the vertices has been altered according to the bijection @xmath202 ( vertices are numbered from @xmath156 for the computer ) .",
    "if follows from @xcite that @xmath8 is @xmath84-collapsible , and hence qcsp@xmath9 may be placed in nl by other means .",
    "we would like to improve the lower bound from np - hardness to pspace - hardness in the cases of propositions  [ prop : reflexive ] , [ prop : odds ] , [ prop : evens ] and [ prop : evens2 ] .",
    "this might be quite messy in the last three cases , involving careful consideration of the hardness proof for the retraction problem .",
    "for the reflexive cycles , though , it just requires more careful analysis of the degenerate cases . this is because we may only have a homomorphic image under @xmath197 of the cycle for @xmath33 , but the universal variables may be evaluated outside of the image of @xmath203 .",
    "we will require something of the following form ( @xmath123 is defined at the beginning of section  [ sec : reflexive ] ) .",
    "[ lem : gen ] let @xmath197 be a function from @xmath204 in @xmath123 to @xmath124 that is a non - surjective homomorphism .",
    "let @xmath205 , for some @xmath206 , be the partial function that extends @xmath197 from @xmath207 in @xmath123 to @xmath124 , by mapping @xmath208 and @xmath209 .",
    "then @xmath205 can be extended to a homomorphism from @xmath123 to @xmath124 .",
    "the proof of this seems to be rather technical . for those who doubt it ,",
    "let us remind ourselves that the length of the chain in @xmath123 may be any fixed function of @xmath31 , and the reduction of propositions  [ prop : c1111 ] and [ prop : reflexive ] will still work .",
    "the conjecture is surely easier to prove if we make the chains much longer ( say exponential in @xmath31 ) .",
    "finally , we conjecture that none of the nl cases are nl - hard , and that most likely our dichotomy can be perfected to l/ pspace - complete .    * acknowledgements*. the authors thank the referees and are grateful to catherine .",
    "10    the csp dichotomy holds for digraphs with no sources and no sinks ( a positive answer to a conjecture of bang - jensen and hell ) .",
    ", 5 ( 2009 ) , 17821802 .",
    "the complexity of constraint satisfaction games and qcsp .",
    ", 9 ( 2009 ) , 923944 .    a dichotomy theorem for constraint satisfaction problems on a 3-element set . , 1 ( 2006 ) , 66120 .    classifying the complexity of constraints using finite algebras",
    "( 2005 ) , 720742 .    the complexity of quantified constraint satisfaction : collapsibility , sink algebras , and the three - element case . , 5 ( 2008 ) , 16741701 .",
    "meditations on quantified constraint satisfaction .",
    "( 2012 ) . appeared in festschrift for dexter kozen 60th .",
    "quantified constraints and containment problems . in _",
    "23rd annual ieee symposium on logic in computer science _ ( 2008 ) , pp .  317328 .",
    "majority constraints have bounded pathwidth duality . , 4 ( 2008 ) , 821837 .",
    "list homomorphisms to reflexive graphs . , 2 ( 1998 ) , 236250 .    retractions to pseudoforests . , 1 ( 2010 ) , 101112 .    the computational structure of monotone monadic snp and constraint satisfaction : a study through datalog and group theory .",
    "( 1999 ) , 57104 .    on the complexity of h - coloring .",
    "( 1990 ) , 92110 .    a tetrachotomy for positive equality - free logic . in _ proceedings of the 26th annual ieee symposium on logic in computer science , lics 2011 _ ( 2011 ) .",
    "containment , equivalence and coreness from csp to qcsp and beyond . in _",
    "18th cp 2012 _ ( 2012 ) , pp .  480495 .",
    "constraint satisfaction with counting quantifiers . in _",
    "7th international csr 2012 _ ( 2012 ) , pp .",
    "253265 .    on partially reflexive forests .",
    "in _ 17th cp 2011 _ ( 2011 ) .    towards a trichotomy for",
    "quantified h - coloring . in _",
    "on computatibility in europe , lncs 3988 _ ( 2006 ) , pp .",
    "342352 .    .",
    "addison - wesley , 1994 .",
    "undirected connectivity in log - space .",
    ", 4 ( 2008 ) , 124 .",
    "the complexity of satisfiability problems . in _ proceedings of stoc78 _ ( 1978 ) , pp .",
    "we will reduce from the problem csp@xmath210 in essentially the same manner , for @xmath211 , as we did for @xmath212 and qcsp@xmath210 in proposition  [ prop : c1111 ] .",
    "the salient points remain unchanged , except that we use the gadgets @xmath123 for edges in the graph input of qcsp@xmath210 , instead of @xmath129 , and we may assume that all variables in our reduction instance are existential .",
    "so it is that we build a formula @xmath213 in place of the formula @xmath214 that we built in proposition  [ prop : c1111 ] . for @xmath215 ,",
    "let us define the shorthands ( the variables @xmath216 and @xmath217 are new and must not appear in @xmath77 ) .",
    "@xmath218 recalling that @xmath124 is reflexive , it is not hard to verify that @xmath219 may be satisfied on @xmath124 iff @xmath78 takes at least @xmath84 values ( @xmath31 even ) or iff @xmath78 takes at least two non - adjacent values ( @xmath31 odd ) . to elucidate , let us consider the two examples , when @xmath220 .",
    "@xmath221 for @xmath31 even , we set @xmath222 @xmath223 \\wedge \\diamondsuit v_{\\frac{m}{2}+2 } \\exists v_{\\frac{m}{2}+3},\\ldots , v_{m } [ v_{\\frac{m}{2}+1},v_{\\frac{m}{2}+2 } \\rightarrow v_1 ] \\wedge \\\\ & \\psi'(v_1,\\ldots , v_m ) \\end{array}\\ ] ] for @xmath31 odd , note that @xmath224 selects adjacent pairs ( but @xmath78 and @xmath93 distinct ! ) .",
    "for @xmath31 odd , we set @xmath222 @xmath225 \\wedge [ v_{\\frac{m+3}{2 } } \\rightarrow v_1 ]   \\wedge \\\\ & \\psi'(v_1,\\ldots , v_m )   \\end{array}\\ ] ] it is not hard to see that @xmath83 forces on some evaluation of @xmath33 that these map isomorphically to @xmath125 in @xmath124 . if they do not , then they instead map according to a homomorphism @xmath197 , and we are in a degenerate case .",
    "if they had mapped according to the identity , then a yes - instance ( all other variables are existential ) extends to homomorphism ( from the graph associated with @xmath83 ) by , say , @xmath226 .",
    "but now @xmath227 extends to homomorphism in the degenerate case , and we are done .      for each existential variable @xmath163 in @xmath4",
    "we add the gadget on the far left , and for each universal variable @xmath143 we add the gadget immediately to its right .",
    "there is a single vertex in that gadget that will eventually give rise to a variable in @xmath83 that is universally quantified , and it is labelled @xmath137 ( however , it is the vertex at the other end , labelled @xmath143 in figure  [ fig : gadgets ] , that actually corresponds to the universally quantified variable ) . for each clause of @xmath4",
    "we introduce a copy of the clause gadget drawn on the right .",
    "we then introduce an edge between a variable @xmath228 and literal @xmath229 ( @xmath230 ) if @xmath231 ( note that all literals in qnae3sat are positive ) .",
    "we reorder the literals in each clause , if necessary , to ensure that literal @xmath232 of any clause is never a variable in @xmath4 that is universally quantified .",
    "it is not hard to verify that homomorphisms from @xmath70 to @xmath141 ( such that the paths @xmath138 and @xmath139 are evaluated to @xmath21 and @xmath85 , respectively ) correspond exactly to satisfying not - all - equal assignments of @xmath4 .",
    "the looped vertices must map to either @xmath21 or @xmath85  @xmath138 or @xmath139  and the clause gadgets forbid exactly the all - equal assignments . now we will consider the graph @xmath70 realised as a formula @xmath92 , in which we will existentially quantify innermost all of the variables of @xmath92 except :    * one variable each , @xmath151 and @xmath152 , corresponding respectively to some vertex from the paths @xmath138 and @xmath139 , and * all variables corresponding to the centre vertex of an existential variable gadget , and * all variables corresponding to the @xmath137-selector ( the centre vertex of a universal variable gadget and the vertex labelled @xmath137 ) .      *",
    "existentially , the variable corresponding to the centre vertex of an existential variable gadget , * universally , the variable corresponding to the extra vertex labelled @xmath137 of a universal variable gadget , and then existentially , the remaining vertices of the @xmath137-selector .",
    "the reason we do not directly universally quantify the vertex associated with a universal variable is because we want it to be forced to range over only the looped vertices @xmath21 and @xmath85 ( which it does as its unlooped neighbour @xmath137 is forced to range over all @xmath233 ) .",
    "@xmath154 is therefore a positive horn formula with two free variables , @xmath151 and @xmath152 , such that , @xmath4 is qnae3sat iff @xmath234 .",
    "finally , we construct @xmath83 from @xmath96 with the help of two @xmath137-selectors , adding new variables @xmath235 and @xmath236 , and setting @xmath237 the purpose of universally quantifying the new variables @xmath235 and @xmath236 , instead of directly quantifying @xmath151 and @xmath152 , is to force @xmath235 and @xmath236 to range over @xmath238 ( recall that @xmath239 and @xmath240 are both atoms of @xmath83 ) .",
    "this is the same reason we add the vertex @xmath137 to the universal variable gadget .",
    "we claim that @xmath234 iff @xmath241 .",
    "it suffices to prove that @xmath234 implies @xmath242 .",
    "the first of these follows by symmetry .",
    "the second two are easy to verify , and follow because the second literal in any clause is forbidden to be universally quantified in @xmath4 . if both paths @xmath138 and @xmath139 are evaluated to @xmath21 , then , even if some @xmath243- or @xmath244-literals are forced to evaluate to @xmath85 , we can still extend this to a homomorphism from @xmath70 to @xmath141 .",
    "the following proofs make use of reductions from ret@xmath10 , where @xmath71 .",
    "it is ultimately intended that the variables @xmath33 in the created instance map automorphically to the cycle .",
    "the cycle will be found when the universally quantified @xmath163 is mapped to a non - looped vertex at maximal distance from the looped vertices ( sometimes this is unique , other times there are two ) .",
    "we then require that the universally quantified @xmath164 be mapped to a neighbour of @xmath163 at maximal distance from the loops ( given @xmath163 s evaluation , this will either be unique or there will be two ) .",
    "all other maps of @xmath163 and @xmath164 lead to degenerate cases .",
    "we reduce from the problem of ret@xmath10 , known to be np - complete from @xcite .",
    "let @xmath32 be of the form @xmath144 .",
    "we find a copy of @xmath32 with the variables @xmath33 in the following fashion .",
    "@xmath245 \\wedge [ x_1 \\rightarrow x_{\\frac{m+1}{2 } } ] \\wedge \\mathrm{ref}(v_{\\lceil \\frac{d+2}{2 } \\rceil},\\ldots , v_{\\frac{m+1}{2 } } )   \\wedge \\\\ \\mathrm{ref}(x_{\\lceil \\frac{d+2}{2 } \\rceil},\\ldots , x_{\\frac{m+1}{2 } } ) \\wedge x_{\\frac{m+1}{2}}=v_{\\frac{m+1}{2 } } \\wedge \\\\",
    "\\exists v_m,\\ldots , v_{\\frac{m+3}{2 } } \\ x_{\\frac{m-1}{2}}=v_{\\frac{m+3}{2 } } \\wedge [ v_1,v_m \\rightarrow v_{\\frac{m+1}{2 } } ] \\wedge   \\mathrm{ref}(v_{\\frac{m+3}{2}},\\ldots , v_{\\lceil \\frac{m+2}{2 } \\rceil } ) \\wedge \\ldots\\\\ \\end{array}\\ ] ]    it is interesting to see where the previous proof breaks down cycles in which there are less than three loops or a single non - loop . let us consider the sentence obtained in the case for @xmath246 .",
    "@xmath247 \\wedge [ x_1 \\rightarrow x_{3 } ] \\wedge e(v_{3},v_{3 } ) \\wedge x_{3}=v_{3 } \\wedge \\\\ & \\exists v_5,v_4 \\ x_{2}=v_{4 } \\wedge [ v_1,v_5 \\rightarrow v_3 ] \\wedge e(v_{3},v_{3 } ) \\wedge \\ldots\\\\ \\end{array}\\ ] ] the problem with @xmath246 occurs when @xmath163 and @xmath164 are both evaluated as , say , vertex @xmath85 ( there can be no @xmath248 between @xmath163 and @xmath249 ) .",
    "we reduce from the problem ret@xmath10 , known to be np - complete from @xcite .",
    "let @xmath32 be of the form @xmath144 .",
    "we find a copy of @xmath32 with the variables @xmath33 in the following fashion .",
    "@xmath250 \\wedge [ x_1 \\rightarrow x_{\\lceil \\frac{m - d+2}{2}\\rceil } ] \\wedge \\mathrm{ref } ( v_{\\lceil \\frac{m - d+2}{2}\\rceil } , x_{\\lceil \\frac{m - d+2}{2}\\rceil } ) \\wedge \\\\",
    "\\exists v_{\\lceil \\frac{m - d+2}{2}\\rceil+1 } , \\ldots , v_{\\lceil \\frac{m - d+2}{2}\\rceil+d-1 } \\\\",
    "v_{\\lceil \\frac{m - d+2}{2}\\rceil+d-1}=x_{\\lceil \\frac{m - d+2}{2}\\rceil }",
    "\\wedge   [ v_{\\lceil \\frac{m - d+2}{2}\\rceil+1 } \\rightarrow v_{\\lceil \\frac{m - d+2}{2}\\rceil+d-1 } ] \\wedge \\mathrm{ref}(v_{\\lceil \\frac{m - d+2}{2}\\rceil+1 } , v_{\\lceil \\frac{m - d+2}{2}\\rceil+d-1 } )   \\wedge \\\\",
    "\\exists v_{\\lceil \\frac{m - d+2}{2}\\rceil+d } , \\ldots , v_{m }    [ v_{\\lceil \\frac{m - d+2}{2}\\rceil+d-1 } \\rightarrow v_{m } ] \\end{array}\\ ] ]    we note that the previous two propositions do not quite use the same techniques as one another . all cases of proposition  [ prop : missing ] involving more than one non - loop are weakly subsumed by propositions  [ prop : odds ] and [ prop : evens ] in the sense that pspace - completeness only becomes np - hardness .",
    "it is interesting to see where the proposition  [ prop : evens ] breaks down on even cycles with two consecutive loops only .",
    "it is no longer possible to ensure to encircle the cycle . for these cases we will need yet another specialised construction .",
    "let us label the vertices of the cycle @xmath21 to @xmath31 s.t .",
    "the loops are at positions @xmath251 and @xmath127 .",
    "we introduce the following shorthand ( @xmath252 does not appear in @xmath77 ) . @xmath253",
    "the @xmath254 quantifier is some kind of weak universal quantifier , with the following important property : if @xmath255 and @xmath256 are false then @xmath257 and @xmath258 are true .",
    "unlike the previous proofs , which used just @xmath33 , we will need also @xmath259 and we will be able to say that _ at least one of them _ maps automorphically to @xmath32 .",
    "we begin with @xmath260 \\wedge e(v_{\\frac{m}{2}},v_{\\frac{m}{2 } } ) \\wedge \\\\",
    "\\forall w_1 \\exists w_2 , \\ldots , w_{\\frac{m}{2 } }   [ w_1 \\rightarrow w_{\\frac{m}{2 } } ] \\wedge   e(w_{\\frac{m}{2}},w_{\\frac{m}{2 } } ) \\wedge \\end{array}\\ ] ] if @xmath163 and @xmath261 are evaluated on @xmath21 and @xmath31 , respectively , then @xmath262 and @xmath263 will be on @xmath251 and @xmath127 , respectively .",
    "in the past , we did not care about degenerate cases , so long as they extend to homomorphism , but here we will use the fact that some degenerate cases _ could not _ extend to homomorphism , if we had used a universal quantifier . assuming @xmath264",
    "is mapped to @xmath265 , these degenerate cases would come about with @xmath266 mapped to either @xmath84 or @xmath267 .",
    "thus , using the @xmath254 quantifier we can force @xmath266 to be mapped to both @xmath21 and @xmath267 .",
    "we complete with @xmath268 \\wedge v_{\\frac{m}{2}+1}=x_{\\frac{m}{2 } } \\wedge v_{\\frac{m}{2}+2}=x_{\\frac{m}{2}-1 } \\wedge \\\\ & \\exists y_2 , \\ldots , y_{\\frac{m}{2 } } \\exists w_{\\frac{m}{2}+1},w_{\\frac{m}{2}+2 } & e(w_{\\frac{m}{2}+1},w_{\\frac{m}{2}+1 } ) \\wedge e(w_{\\frac{m}{2}+1},w_{\\frac{m}{2}+2 } ) \\wedge \\\\   & & [ z , y_2\\rightarrow y_{\\frac{m}{2}},w_{\\frac{m}{2}+1},w_{\\frac{m}{2}+2 } ] \\wedge w_{\\frac{m}{2}+1}=y_{\\frac{m}{2 } }   \\wedge w_{\\frac{m}{2}+2}=y_{\\frac{m}{2}-1 } \\wedge \\\\ & & \\exists   v_{\\frac{m}{2}+3 } , \\ldots , v_m [ v_{\\frac{m}{2}+2}\\rightarrow v_m , v_1 ] \\wedge \\\\ & & \\exists   w_{\\frac{m}{2}+3 } , \\ldots , w_m [ w_{\\frac{m}{2}+2}\\rightarrow w_m , w_1].\\\\ \\end{array}\\ ] ] the key observation is that the statements @xmath269 and @xmath270 are impossible to satisfy if @xmath271 is mapped to @xmath272 or @xmath273 .",
    "this is why a universal quantifier can not be used for @xmath266 and why we can not add @xmath269 to the construction from the previous proposition .",
    "let @xmath167 be the multiset ( of two or more elements ) , where @xmath168 are the maximal non - looped induced sections ( paths ) of a cycle @xmath32 in which the loops induce a disconnected graph .",
    "a single non - loop between two loops contributes a value @xmath169 to @xmath170 .",
    "we need to split into three cases . in the following , as in @xcite , we refer to paths involving loops and non - loops according to words @xmath274  where @xmath156 indicates a non - loop and @xmath21 a loop .",
    "* proposition  [ prop : discon - unique - max ] * let @xmath32 be a partially reflexive @xmath31-cycle in which the loops induce a disconnected graph . if @xmath170 contains a unique maximal element @xmath171 , then qcsp@xmath10 is pspace - complete .",
    "let @xmath22 be the partially reflexive path , obtained by removing the middle ( or middle two ) vertices in the unique section of non - loops of maximal length in @xmath32 .",
    "it follows from inspection of the proofs from @xcite that qcsp@xmath275 is pspace - complete even when the universal variables are restricted to range over some subset of @xmath276 that contains at least each of the two end - most loops .",
    "we reduce from this problem",
    ". the @xmath137-selector will be @xmath277 .",
    "it remains to show how to relativise the existential variables so they range over precisely @xmath278 . in order to do this ,",
    "we ensure that each existential variable is at distance @xmath279 from its nearest loop , by adding a path of length @xmath279 to a loop .",
    "the reduction is clear and the result follows .",
    "* proposition  [ prop : discon - even - gaps ] * let @xmath32 be a partially reflexive @xmath31-cycle in which the loops induce a disconnected graph . if @xmath170 contains only one value , then qcsp@xmath10 is pspace - complete .",
    "let @xmath32 be over @xmath23 vertices , and suppose @xmath170 contains @xmath61 instances of its maximal element @xmath197 .",
    "these may be produced by sections of non - loops of length @xmath280 or @xmath281 .",
    "let @xmath282 be the maximal such length of non - loops .",
    "the reduction is similar to that employed in proposition  [ prop : p101 ] .",
    "the pattern will be @xmath283 , while the @xmath137-selector will be @xmath284 .",
    "it remains to explain how to evaluate @xmath151 and @xmath152 .",
    "we begin with a universal variable followed by a path of @xmath197 non - loops and then a loop @xmath285 just as in the @xmath137-selector .",
    "we then have a sequence of alternations of @xmath286 followed finally by @xmath287 .",
    "the number of these alternations is @xmath288 from @xmath151 and @xmath289 from @xmath152 .",
    "the point is that when the initial universal variables are evaluated at opposite sides of @xmath32 , with respect to the @xmath61 large gaps , then some evaluation forces @xmath151 and @xmath152 to be at distance exactly distance @xmath282 , across non - loops .",
    "taking into consideration the results of propositions  [ prop : discon - unique - max ] and [ prop : discon - even - gaps ] , the only remaining case is where @xmath170 has multiple  @xmath61  copies of its maximal element , and some other smaller elements also .",
    "but , this case can be handled very similarly to proposition  [ prop : discon - even - gaps ] .",
    "simply amend the alternating motif @xmath286 to @xmath290  thereby allowing any section of @xmath291 or fewer non - loops to be crossed for free ."
  ],
  "abstract_text": [
    "<S> we study the ( non - uniform ) quantified constraint satisfaction problem qcsp@xmath0 as @xmath1 ranges over partially reflexive cycles . </S>",
    "<S> we obtain a complexity - theoretic dichotomy : qcsp@xmath0 is either in nl or is np - hard . </S>",
    "<S> the separating conditions are somewhat esoteric hence the epithet `` wavy line of tractability '' ( see figure  [ fig : wavyline ] at end ) . </S>"
  ]
}
{
  "article_text": [
    "we define @xmath2 , where @xmath3 . an additive code @xmath4 over @xmath1 of length @xmath5 is an additive subgroup of @xmath1 .",
    "clearly , @xmath6 contains codewords for some @xmath7 , and can be defined by a @xmath8 generator matrix , with entries from @xmath1 , whose rows span @xmath6 additively .",
    "we call @xmath6 an @xmath9 code .",
    "the _ hamming weight _ of @xmath10 , denoted by @xmath11 , is the number of non zero components of @xmath12 .",
    "the _ hamming distance _ between two vectors @xmath13 , @xmath14 is @xmath15 .",
    "the _ minimum distance _",
    "@xmath16 of a code is defined as the smallest possible distance between pairs of distinct codewords .",
    "the _ conjugation _ of @xmath17 is defined by @xmath18 , and the _ trace map _ is defined by @xmath19 .",
    "hermitian trace inner product _ of @xmath13 and @xmath14 , with @xmath20 , is given by @xmath21 .",
    "we define _ the dual of the code _ @xmath6 with respect to the hermitian trace inner product , @xmath22",
    ". then @xmath23 is _ self - orthogonal _ if @xmath24 , and @xmath6 is _ self - dual _ if @xmath25 .",
    "a graph code is an additive code over @xmath1 that has a generator matrix of the form @xmath26 , where @xmath27 is the identity matrix and @xmath28 is the adjacency matrix of a simple undirected graph .",
    "a code is called _ optimum _ if it meets both lower and upper bounds in the code tables , and a _ proposed optimum _",
    "code if it only meets the lower bound in the code tables .",
    "the distribution of a code is the sequence @xmath29 , where @xmath30 is the number of codewords of weight @xmath31 .",
    "the _ weight enumerator _ of the code is the polynomial @xmath32    let us now introduce some concepts and notions from graph theory .",
    "an _ undirected graph _",
    "@xmath33 is a set @xmath34 of vertices together with a collection @xmath35 of edges , where each edge is an unordered pair of vertices .",
    "the vertices @xmath36 and @xmath37 are _ adjacent _ if @xmath38 is an edge .",
    "then @xmath37 is a _",
    "neighbour _ of @xmath39 .",
    "all the neighbours of vertex @xmath39 in graph @xmath28 form the _ neighbourhood _ of @xmath39 , and it is denoted by @xmath40 .",
    "the _ degree of a vertex _",
    "@xmath41 is the number of vertices adjacent to @xmath41 .",
    "a graph is _ k - regular _ if all vertices have the same degree @xmath42 .",
    "the _ adjacency matrix _",
    "@xmath43 of a graph @xmath33 is a symmetric @xmath44-matrix defined as follows : @xmath45 if the @xmath31-th and @xmath46-th vertices are adjacent , and @xmath47 otherwise .",
    "circulant graphs and their various applications are the objects of intensive study in computer science and discrete mathematics , see @xcite .",
    "recently , monakhova published a survey paper on this subject , see @xcite .",
    "let @xmath48 be a set of integers such that @xmath49 and let the vertices of an @xmath5-vertex graph be labelled @xmath50 .",
    "then the _ ciculant graph _",
    "@xmath51 has @xmath52 adjacent to each vertex @xmath31 .",
    "a _ circulant matrix _ is obtained by taking an arbitrary first row , and shifting it cyclically one position to the right in order to obtain successive rows .",
    "we say that a circulant matrix is generated by its first row .",
    "formally , if the first row of an @xmath5-by-@xmath5 circualant matrix is @xmath53 , then the @xmath54 element is @xmath55 , where subscripts are taken modulo @xmath5 .",
    "the term circulant graph arises from the fact that the adjacency matrix for such a graph is a circulant matrix .",
    "for example , figure [ fig1 ] shows the circulant graph @xmath56 .    [ 0.6 ] + figure 1 : the circulant graph @xmath56 [ fig1 ]    in @xmath57 , tonchev @xcite first set up a relationship between a linear binary code and the adjacency matrix of an undirected graph . in @xmath0 , danielsen and parker",
    "@xcite proved that every self - dual additive code over @xmath1 is equivalent to a graph code . recently , finding optimum codes from graphs has received a wide attention of many researchers , see @xcite . in @xcite ,",
    "danielsen and parker showed that two codes are equivalent if and only if the corresponding graphs are equivalent with respect to local complementation and graph isomorphism .",
    "they used these facts to classify all codes of length up to @xmath58 . in 2012",
    ", danielsen @xcite focused his attention on additive codes over @xmath59 and transformed the problem of code equivalence into a problem of graph isomorphism . by an extension technique , they classified all optimal codes of lengths @xmath60 and @xmath58 .",
    "in fact , a computer search reveals that circulant graph codes usually contain many strong codes , and some of these codes have highly regular graph representations , see @xcite . in @xcite , danielsen obtained some optimum additive codes from circulant graphs in 2005 .",
    "later , varbanov investigated additive circulant graph codes over @xmath1 , see @xcite .    in this paper",
    ", we find out some optimum additive codes from some special circulant graphs .",
    "this paper is organized as follows . in section @xmath61",
    ", we propose a new method to find additive optimum codes from circulant graphs .",
    "inspired by the optimum additive codes obtained by danielsen @xcite , we focus on the dense circulant graphs and get some optimum additive codes in section @xmath62 .",
    "in fact , glynn et al .",
    "@xcite obtained an optimum code from a circulant graph , called 5-valent graph .",
    "recall that @xmath63 is a circulant graph of order @xmath58 ; see figure 1 @xmath64 .",
    "[ 0.6 ] + figure 1 : @xmath64 a @xmath65-valent graph @xmath63 ; @xmath66 the circulant graph @xmath67 .    let @xmath68 . for the vertex @xmath69 ,",
    "we let @xmath70 . for the vertex @xmath71",
    ", we just rotate the above vertices and edges , that is , we only permit the existence of the set @xmath72 of edges . for each vertex @xmath73",
    ", we can also obtained the sets @xmath74 of edges .",
    "observe that @xmath75 .",
    "the adjacency matrix of the graph @xmath63 is the following circulant matrix .",
    "@xmath76 the above matrix can also be obtained by the following vector @xmath77 observe that this vector just corresponds to the set @xmath78 of edges , which is an expression of the adjacent relation about the vertex @xmath69 .",
    "we conclude that a @xmath65-valent graph can be determined by the edge set @xmath78 , and the adjacency matrix of this graph is determined by the above vector @xmath79 .",
    "furthermore , the matrix @xmath80 is @xmath81 this matrix is also a circulant matrix , which can be obtained by the following vector @xmath82 from the matrix @xmath80 , we can get a graph code @xmath83 . from the code tables , we know that @xmath84 is an optimum additive code over @xmath1 . then @xmath85 and @xmath86 , where @xmath87 is the minimum distance of the code @xmath83 .",
    "the above statement suggests the following method for finding optimum codes .",
    "* step 1 . * given an even integer @xmath5 .",
    "denote by @xmath88 the lower bound of the additive code ( @xmath5,@xmath89 ) over @xmath1 . from code tables , we find the exact value of @xmath88 for the given @xmath5 .",
    "we now construct a circulant graph @xmath90 by a set @xmath78 of edges as follows .",
    "* step 1.1 . *",
    "arrange the vertices from @xmath91 in a circular order .",
    "* step 1.2 . *",
    "determine the set @xmath78 of edges satisfying @xmath92 or @xmath93 , where @xmath94 . if @xmath93 , then @xmath95 if @xmath92 , then @xmath96    * step 2 .",
    "* by the edge set @xmath78 , we write the vector @xmath97 corresponding to @xmath78 . if @xmath93 , then    @xmath98  @xmath99  @xmath100 @xmath101  @xmath102  @xmath103@xmath104 @xmath105 if @xmath92 , then    @xmath98  @xmath99  @xmath106 @xmath101 @xmath107  @xmath103@xmath104 @xmath105    * step 3 . * change the first component of the vector @xmath97 to @xmath108 .",
    "denote by @xmath109 the new vector .",
    "we generate a circulant matrix @xmath110 from @xmath109 .",
    "@xmath111    * step 4 .",
    "* by algorithm @xmath112 , we obtain the minimum distance @xmath113 of the code @xmath114 and determine whether @xmath115 .",
    "if so , the code @xmath114 is a proposed optimum code .",
    "below is an algorithm ( running in sage ) .",
    "for more details , we refer to @xcite .    ' '' ''     + * algorithm * 1 : minimum distance of a circulant graph code +    ' '' ''     + input : the value of @xmath5 , the generator vector @xmath97 of a circulant graph code @xmath116 + objective : the minimum distance of the circulant graph code @xmath116 + 1 .",
    "input the value of @xmath5 , the generator vector @xmath117 ; + 2 .",
    "obtain the generator matrix @xmath118 of the circulant graph code @xmath116 ; + 3 .",
    "get the minimum distance of the circulant graph code @xmath116 .",
    "+ take an example , let @xmath119 and @xmath120 .",
    "+ the algorithm details are stated as follows : + _ program _ : +  @xmath121 +  @xmath119 ; +  @xmath122 $ ] +  @xmath123 $ ] for @xmath31 in @xmath124 $ ] for @xmath42 in @xmath125)$ ] ; +  @xmath126,s))$ ] ; +  @xmath127 $ ] ; +  for @xmath42 in @xmath128 $ ] : +  @xmath129 for @xmath31 in subsets @xmath130)$ ] ; +  @xmath131 $ ] ; +  print @xmath132 ; + _ output _ :  [ 8 ] +  [ 8 ,  8 ] +  [ 8 ,  8 ,  10 ] +  [ 8 ,  8 ,  10 ,  8 ] +  [ 8 ,  8 ,  10 ,  8 ,  8 ] +  [ 8 ,  8 ,  10 ,  8 ,  8 ,  8 ] +  [ 8 ,  8 ,  10 ,  8 ,  8 ,  8 ,  8 ] +  [ 8 ,  8 ,  10 ,  8 ,  8 ,  8 ,  8 ,  10 ] + _ result _ :  the minimum element of the last array is the minimum distance @xmath133 of the code @xmath134 , + that is , @xmath135 .",
    "+    ' '' ''    inspired by the graph code @xmath136 which corresponds to the @xmath65-valent graph , we hope to find out some other optimum additive codes for @xmath119 .",
    "* recall @xmath137 is the lower bound of the additive code @xmath138 over @xmath1 . from code tables ,",
    "we find the exact value of @xmath137 , @xmath139 .",
    "we now construct a circulant graph @xmath67 by a set @xmath78 of edges as follows .",
    "* step 1.1 . *",
    "arrange the vertices from @xmath140 in a circular order .",
    "* step 1.2 . *",
    "determine the set @xmath78 of edges satisfying @xmath141 or @xmath142 , where @xmath94 .",
    "if @xmath143 , then @xmath144    if @xmath145 , then @xmath146    in this case , the circulant graph @xmath67 can be found out ; see figure 1 @xmath66 .    * step 2 .",
    "* by the edge set @xmath78 , we write the vector @xmath147 corresponding to @xmath78 . if @xmath143 , then @xmath148    if @xmath145 , then @xmath149    * step 3 .",
    "* change the first component of the vector @xmath147 to @xmath108 .",
    "denote by @xmath150 the new vector .",
    "we generate a circulant matrix @xmath151(@xmath152 ) from @xmath150(@xmath153 ) .",
    "@xmath154 @xmath155    * step 4 . * by algorithm @xmath112 , we obtain the minimum distance @xmath156 .",
    "therefore , both @xmath157 and @xmath158 are proposed optimum codes over @xmath1 .",
    "the weight enumerators of the codes @xmath157 and @xmath158 are @xmath159 @xmath160    applying the above method , we can obtain optimum graph codes over @xmath1 from the first two generator vector .    ' '' ''     + @xmath5  @xmath16  @xmath88  first row of generator matrix +    ' '' ''     + @xmath161  @xmath162  @xmath162   + @xmath163  @xmath164  @xmath164   + @xmath161  @xmath162  @xmath162   + @xmath165  @xmath166  @xmath166   +    ' '' ''",
    "from the above section , we see that the circulant graphs under our consideration are all relatively sparse .",
    "so one may think that only sparse circulant graphs produce optimum graph codes .",
    "the following fact gives it a negative answer .",
    "danielsen @xcite obtained an optimum additive code @xmath167 from the vector @xmath168 which corresponds to a circulant graph of order @xmath169 such that its adjacent matrix @xmath170 is generated by the first row @xmath171 it is clear that the circulant graph is @xmath172-regular .",
    "note that the order of this graph is @xmath169 , so the degree of each vertex is relatively large , i.e. , it is a relatively dense graph ."
  ],
  "abstract_text": [
    "<S> in @xmath0 , danielsen and parker @xcite proved that every self - dual additive code over @xmath1 is equivalent to a graph code . </S>",
    "<S> so , graph is an important tool for searching ( proposed ) optimum codes . in this paper </S>",
    "<S> , we introduce a new method of searching ( proposed ) optimum additive codes from circulant graphs . </S>",
    "<S> + * ams subject classification 2010 * : 94b05 , 05c50 , 05c25 . </S>"
  ]
}
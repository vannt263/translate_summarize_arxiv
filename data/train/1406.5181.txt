{
  "article_text": [
    "over the last century , the elements of many disparate systems have been found to approximately follow zipf s law  that element size is inversely proportional to element size rank  @xcite  from city populations  @xcite , to firm sizes  @xcite , and family names  @xcite . starting with mandelbrot s optimality argument  @xcite , and the dynamically growing , rich - get - richer model of simon  @xcite",
    ", strident debates over theoretical mechanisms leading to zipf s law have continued until the present  @xcite .",
    "persistent claims of uninteresting randomness underlying zipf s law  @xcite have been successfully challenged  @xcite , and in non - linguistic systems , good evidence supports simon s model  @xcite which has been found to be the basis of scale - free networks  @xcite .    for language , the vast majority of arguments have focused on the frequency of an individual word which we suggest here is the wrong fundamental unit of analysis .",
    "words are an evident building block of language , and we are naturally drawn to simple counting as a primary means of analysis ( the earliest examples are biblical corcordances , dating to the 13th century ) . and while we have defined morphemes as the most basic meaningful ` atoms ' of language , the meaningful ` molecules ' of language are clearly a mixture of individual words and phrases .",
    "the identification of meaningful phrases , or multi - word expressions , in natural language poses one of the largest obstacles to accurate machine translation  @xcite . in reading the phrases `` new york city '' or `` star wars '' ,",
    "we effortlessly take them as irreducible constructions , different from the transparent sum of their parts . indeed , it is only with some difficulty that we actively parse highly common phrases and consider their individuals words .    while partitioning a text into words",
    "is straightforward computationally , partitioning into meaningful phrases would appear to require a next level of sophistication requiring online human analysis .",
    "but in order to contend with the increasingly very large sizes and rapid delivery rates of important text corpora  such as news and social media  we are obliged to find a simple , necessarily linguistically naive , yet effective method .",
    "a natural possibility is to in some way capitalize on @xmath0-grams , which are a now common and fast approach for parsing a text .",
    "large scale @xmath0-gram data sets have been made widely available for analysis , most notably through the google books project  @xcite .",
    "unfortunately , all @xmath0-grams fail on a crucial front : in their counting they overlap , which obscures underlying word frequencies .",
    "consequently , and crucially , we are unable to properly assign rankable frequency of usage weights to @xmath0-grams combined across all values of @xmath0 .    here",
    ", we introduce ` random partitioning ' , a method that is fast , intelligible , scalable , and sensibly preserves word frequencies : i.e. , the sum of sensibly - weighted partitioned phrases is equal to the total number of words present .",
    "as we show , our method immediately yields the profound basic science result that phrases of mixed lengths , as opposed to just individual words , obey zipf s law , indicating the method can serve as a profitable approach to general text analysis . to explore a lower level of language",
    ", we also partition for sub - word units , or graphemes , by breaking words into letter sequences . in the remainder of the paper , we first describe random partitioning and then present results for a range of texts .",
    "to begin our random partitioning process , we break a given text @xmath1 into clauses , as demarcated by standard punctuation ( other defensible schemes for obtaining clauses may also be used ) , and define the length norm , @xmath2 , of a given clause @xmath3 ( or phrase , @xmath4 ) as its word count , written @xmath5 .",
    "we then define a partition , @xmath6 , of a clause @xmath3 to be a sequence of the boundaries surrounding its words : @xmath7 and note that @xmath8 for any @xmath6 , as we have ( a priori ) the demarcation knowledge of the clause . for example , consider the highly ambiguous text :    `` hot dog doctor ! ''    forgoing punctuation and casing , we might attempt to break the clause down , and interpret through the partition :    at ( -1.5,0 ) ( t ) hot ; at ( 0,0 ) ( t ) dog ; at ( 1.5,0 ) ( t ) doctor ; at ( -4,-0.4 ) ( linl ) ; at ( 4,-0.4 ) ( linr ) ; at ( -3,-1 ) ( p ) @xmath9 ; at ( -2.25,-1 ) ( x0 ) @xmath10 ; at ( -2.25,-0.8 ) ( b0l ) ; at ( -2.25,0.3 ) ( b0h ) ; at ( -0.75,-1 ) ( x1 ) @xmath11 ; at ( -0.75,-0.8 ) ( b1l ) ; at ( -0.75,0.3 ) ( b1h ) ; at ( 2.25,-1 ) ( x3 ) @xmath12 ; at ( 2.25,-0.8 ) ( b3l ) ; at ( 2.25,0.3 ) ( b3h ) ; ( linl )  ( linr ) ; ( b0l )  ( b0h ) ; ( b1l )  ( b1h ) ; ( b3l )  ( b3h ) ;    i.e. , @xmath13 , which breaks the text into phrases , `` hot '' and `` dog doctor '' , and assume it as reference to an attractive veterinarian ( as was meant in @xcite ) .",
    "however , depending on our choice , we might have found an alternative meaning : @xmath14 note in the above that we ( as well as the speaker in @xcite ) have allowed the phrase `` dog doctor '' to carry idiomatic meaning in its non - restriction to canines , despite the usage of the word `` dog '' .",
    "now , in an ideal scenario we might have some knowledge of the likelihood for each boundary to be `` cut '' ( which would produce an ` informed ' partition method ) , but for now our goal is generality , and so we proceed , assuming a uniform boundary - cutting probability , @xmath15 , across all @xmath16 word - word ( clause - internal ) boundaries of a clause , @xmath3 . in general",
    ", there are @xmath17 possible partitions of @xmath3 involving @xmath18 potential phrases . for each integral pair @xmath19 with @xmath20",
    ", we note that the probability for a randomly chosen partition of the clause @xmath3 to include the ( contiguous ) phrase , @xmath21 , is determined by successful cutting at the ends of @xmath21 and failures within ( e.g. , @xmath22 must _ not _ be cut to produce `` dog  doctor '' ) , accommodating for @xmath21 reaching one or both ends of @xmath3 , i.e. , @xmath23 where @xmath24 is the number of the clause s boundaries shared by @xmath21 and @xmath3 . allowing for a phrase @xmath4 to have labeling equivalence to multiple contiguous regions ( i.e. , @xmath25 , with @xmath26 ) within a clause e.g. , `` ha ha '' within `` ha ha ha '' , we interpret the ` expected frequency ' of @xmath27 given the text by the double sum : @xmath28 departing from normal word counts , we may now have @xmath29 , except when one partitions for word ( @xmath30 ) or clause ( @xmath31 ) frequencies . when weighted by phrase length , the partition frequencies of phrases from a clause sum to the total number of words originally present in the clause : @xmath32 which ensures that when the expected frequencies of phrases , @xmath27 , are summed ( with the length norm ) over the whole text : @xmath33 the underlying mass of words in the text is conserved ( see si-2 for proofs of eqs .",
    "[ eq : tpz.phraseweight_text ]  and  [ eq : tpz.wordmass_text ] ) . said differently , phrase partition frequencies ( random or otherwise ) conserve word frequencies through the length norm @xmath2 , and so have a physically meaningful relationship to the words on `` the page . ''",
    "here , we focus on three natural kinds of partitions : @xmath34@xmath35@xmath36 : clauses are partitioned only as clauses themselves ; @xmath34@xmath35@xmath37 : what we call ` pure random partitioning'all partitions of a clause are equally likely ; @xmath34@xmath35@xmath38 : clauses are partitioned into words .    in carrying out pure random partitioning ( @xmath34@xmath35@xmath37 ) , which we will show has the many desirable properties we seek",
    ", we are assuming all partitions are equally likely , reminiscent of equipartitioning used in statistical mechanics  @xcite . extending the analogy",
    ", we can view @xmath34@xmath35@xmath36 as a zero temperature limit , and @xmath34@xmath35@xmath38 as an infinite temperature one . as an anchor for @xmath39",
    ", we note that words that appear once within a text  hapax legomena  will have @xmath40 ( depending on clause boundaries ) , on the order of 1 as per standard word partitioning .",
    "before we apply the random partition theory to produce our generalization of word count , @xmath41 , we will first examine the results of applying the random partition process in a ` one - off ' manner .",
    "we process through the clauses of a text once , cutting word - word boundaries ( and in a parallel experiment for graphemes , cutting letter - letter boundaries within words ) uniformly at random with probability @xmath42 .    ,",
    "orange ) , words ( yellow ) , pure random partitioning graphemes ( @xmath43 , green ) , and letters ( blue ) .",
    "the specific phrases and graphemes shown are for one realization of pure random partitioning . *",
    "b. * zipf distributions for the five kinds of partitions along with estimates of the zipf exponent @xmath44 when scaling is observed .",
    "no robust scaling is observed at the letter scale .",
    "the colors match those used in panel * a * , and the symbols at the start of each distribution are intended to strengthen the connection to the legend .",
    "see ref .",
    "@xcite and supplementary material for measurement details .",
    ", scaledwidth=49.0% ]    in fig .",
    "[ fig : tpz.twocities_cartoon_zipf]a , we present an example ` one - off ' partition of the first few lines of charles dickens `` tale of two cities '' we give example partitions at the scales of clauses ( red ) , pure random partition phrases ( orange ) , words ( yellow ) , pure random partition graphemes ( green ) , and letters ( blue ) . in fig .",
    "[ fig : tpz.twocities_cartoon_zipf]b , we show zipf distributions for all five partitioning scales .",
    "we see that clauses ( @xmath34@xmath35@xmath36 ) and pure random partitioning phrases ( @xmath34@xmath35@xmath37 ) both adhere well to the pure form of @xmath45 where @xmath46 is rank . for clauses",
    "we find @xmath47 and for random partitioning , @xmath48 ( see supplementary material for measurement details and for examples of other works of literature ) .",
    "the quality of scaling degrades as we move down to words and graphemes with the appearance of scaling breaks  @xcite .",
    "scaling vanishes entirely at the level of letters .",
    "for ` one - off ' randomly paritioned phrases and word zipf distributions ( @xmath34@xmath35@xmath38 and @xmath34@xmath35@xmath37 ) for around 4000 works of literature .",
    "we indicate `` tale of two cities '' by the red circle , and with black circles , we represent measurements for 14 other works of literature analyzed further in the supplementary material . * b. * histograms of the zipf exponent @xmath44 for the same set of books ( marginal distributions for * a * ) .",
    "phrases typically exhibit @xmath49 whereas words produce unphysical @xmath50 , according to simon s model * c. * test of simon s model s analytical connection @xmath51 , where @xmath44 is the zipf exponent and @xmath52 is the rate at which new terms ( e.g. , graphemes , words , phrases ) are introduced throughout a text .",
    "we estimate @xmath52 as the number of different words normalized by the total word volume . for both words and phrases ,",
    "we compute linear fits using reduced major axis ( rma ) regression  @xcite to obtain slope @xmath53 , along with the pearson correlation coefficient @xmath54 .",
    "words ( green ) do not exhibit a simple linear relationship whereas phrases do ( blue ) , albeit clearly below the @xmath55 line in black .",
    ", scaledwidth=49.0% ]    moving beyond a single work , we next summarize findings for a large collection of texts  @xcite in fig .  [",
    "fig : tpz.twocities_more]a , and compare the zipf exponent @xmath44 for words and pure random @xmath34@xmath35@xmath37 ` one - off ' partitioning for around 4000 works of literature .",
    "we plot the corresponding marginal distributions in fig .",
    "[ fig : tpz.twocities_more]b , and see that clearly @xmath56 for @xmath34@xmath35@xmath37 phrases , while for words , there is a strong positive skew with the majority of values of @xmath50 .",
    "these steep scalings for words ( and graphemes ) , @xmath50 , are not dynamically accessible for simon s model  @xcite .    leaving aside this non - physicality of zipf distributions for words and concerns about breaks in scaling",
    ", we recall that simon s model connects the rate , @xmath52 , at which new terms are introduced , to @xmath44 in a simple way : @xmath57  @xcite .",
    "given frequency data from a pure simon model , the word / phrase introduction rate is determined easily to be @xmath58 , where @xmath0 is the number of unique words / phrases , and @xmath59 is the sum total of all word / phrase frequencies .",
    "we ask how well works of literature conform to this connection in fig .",
    "[ fig : tpz.twocities_more]c , and find that words ( green dots ) do not demonstrate any semblance of a linear relationship , whereas phrases ( blue dots ) exhibit a clear , if approximate , linear connection between @xmath60 and @xmath44 .    despite this linearity",
    ", we see that a pure simon model fails to accurately predict the phrase distribution exponent @xmath44 .",
    "this is not surprising , as when @xmath61 , an immediate adherence to the rich - get - richer mechanism produces a transient behavior in which the first few ( largest - count ) word varieties exist out of proportion to the eventual scaling .",
    "because a pure zipf / simon distribution preserves @xmath62 , we expect that a true , non - transient power - law consistently makes the underestimate @xmath63 .    inspired by our results for one - off partitions of texts ,",
    "we now consider ensembles of pure random partitioning for larger texts . in fig .",
    "[ eq : tpz.randompartitionzipf ] , we show zipf distributions of expected partition frequency , @xmath41 , for @xmath34@xmath35@xmath37 phrases for four large - scale corpora : english wikipedia , the new york times ( nyt ) , twitter , and music lyrics ( ml ) , coloring the main curves according to the length of a phrase for each rank . for comparison",
    ", we also include word - level zipf distributions ( @xmath34@xmath35@xmath38 ) for each text in gray , along with the canonical zipf distribution ( exponent @xmath44=1 ) for reference .",
    "we observe scalings for the expected frequencies of phrases that hover around @xmath64 for over a remarkable 79 orders of magnitude .",
    "we note that while others have observed similar results by simply combining frequency distributions of @xmath0-grams  @xcite , these approaches were unprincipled as they over - counted words . for the randomly partitioned phrase distributions @xmath65 ,",
    "the scaling ranges we observe persist down to @xmath66 , beyond the happax legomena , which occur at frequencies greater than @xmath67 .",
    "such robust scaling is in stark contrast to the very limited scaling of word frequencies ( gray curves ) . for pure word partitioning , @xmath34@xmath35@xmath38 ,",
    "we see two highly - distinct scaling regimes exhibited by each corpus , with shallow upper ( zipf ) scalings at best extending over four orders of magnitude , and typically only three . ( in a separate work , we investigate this double scaling finding evidence that text - mixing is the cause  @xcite . )    for all four corpora , random partitioning gives rise to a gradual interweaving of different length phrases when moving up through rank @xmath46 .",
    "single words remain the most frequent ( purple ) , typically beginning to blend with two word phrases ( blue ) by rank @xmath68 . after the appearance of phrases of length around 1020 , depending on the corpus ,",
    "we see the phrase rank distributions fall off sharply , due to long clauses that are highly unique in their construction ( upper right insets ) .        in the supplementary material ,",
    "we provide structured tables of example phrases extracted by pure random partitioning for all four corpora ( tabs .  [ tab : tpz.wikipedia][tab : tpz.lyrics ] ) , along with complete phrase data sets . as with standard @xmath0-grams , the texture of each corpus",
    "is quickly revealed by examining phrases of length 3 , 4 , and 5 .",
    "for example , the second most common phrases of length 5 for the four corpora are routinized phrases : `` the average household size was '' ( ew ) , `` because of an editing error '' ( nyt ) , `` i uploaded a youtube video '' ( tw ) , and `` na na na na na '' ( ml ) . by design ,",
    "random partitioning allows us to quantitatively compare and sort phrases of different lengths . for music lyrics",
    ", `` la la la la la '' has an expected frequency similar to `` i do nt know why '' , `` just want to '' , `` we ll have '' , and `` whatchu '' ( see tab .  [",
    "tab : tpz.lyrics ] ) , while for the new york times , `` the new york stock exchange '' is comparable to `` believed to have '' ( see tab .  [",
    "tab : tpz.nyt ] ) .",
    "the phrases and their effective frequencies produced by our pure random partitioning method may serve as input to a range of higher order analyses .",
    "for example , information theoretic work may be readily carried out , context models may be built around phrase adjacency using insertion and deletion , and specific , sentence - level partitions may be realized from probabilistic partitions .",
    "while we expect that other principled , more sophisticated approaches to partitioning texts into rankable mixed phrases should produce zipf s law spanning similar or more orders of magnitude in rank , we believe random partitioning  through its transparency , simplicity , and scalability  will prove to be a powerful method for exploring and understanding large - scale texts .    to conclude , our results reaffirm zipf s law for language , uncovering its applicability to a vast lexicon of phrases .",
    "furthermore , we demonstrate that the general semantic units of statistical linguistic analysis can and must be phrases  not words  calling for a reevaluation and reinterpretation of past and present word - based studies in this new light .",
    "the authors are grateful for the computational resources provided by the vermont advanced computing core which was supported by nasa ( nnx 08a096 g ) .",
    "cmd was supported by nsf grant dms-0940271 ; psd was supported by nsf career award # 0846668 .",
    "30ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo",
    "secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]  + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop _ _ ,",
    "patterns  ( ,  ,  ) @noop _ _ ,  patterns  ( ,  ,  ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) in  @noop _ _ ,  ( ,  ,  ) pp .   @noop * * , ( ) link:\\doibase 10.1371/journal.pone.0009411 [ * * , ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) link:\\doibase    10.1103/physrevlett.101.218701 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) in  @noop _ _ ,  ( , ,  )  pp .",
    "@noop @noop `` , ''   ( ) ,   @noop _ _ ,  general ,  , vol .",
    "( ,  ,  ) @noop * * ,   ( ) link:\\doibase 10.1076/jqul.8.3.165.4101 [ * * ,   ( ) ] @noop * * ,   ( ) @noop `` , ''   ( ) ,   @noop * * ,   ( ) @noop ( ) ,   in  @noop _ _ ( )  pp .",
    "@noop `` , ''   ( ) @noop ( ) ,   @noop ( ) ,   @noop ( ) ,     = startsupp.txt",
    "to obtain the results in fig .",
    "[ fig : tpz.twocities_more ] , we utilize the maximum likelihood estimation ( mle ) procedure developed in  @xcite . in applying this procedure to clause and phrases distributions ,",
    "several quantities are generally considered :    * @xmath69 : zipf exponent estimate . *",
    "@xmath70 : upper cutoff in rank @xmath46 determined by mle procedure .",
    "* @xmath71 : kolmogorov - smirnov ( ks ) statistic . * @xmath72 determined by the mle procedure ( note that higher is better in that the null hypothesis is more favored ) .",
    "* @xmath60 : estimate of zipf exponent @xmath44 based on simon s model  @xcite where @xmath52 is the introduction rate of new terms .",
    "we estimate @xmath52 as the number of unique terms ( @xmath0 ) divided by the total number of terms ( @xmath59 ) .    which we report for 14 famous works of literature in si-3 .    in fig .",
    "[ fig : tpz.twocities_more]c we measure covariation between regressed values of @xmath69 and the simon model prediction @xmath60 . since both are subject to measurement error ( @xmath69 is a regressed quantity and @xmath52 is only coarsely approximated by @xmath73 ) , we adhere to reduced major axis regression @xcite , which produces equivalent results upon interchanging @xmath74 and @xmath75 variables , and",
    "hence guarantees that no information is assumed or lost when we place @xmath69 as the @xmath74-variable ) .    to produce the rank - frequency distributions in fig .",
    "[ eq : tpz.randompartitionzipf ] and words in tables s1s4 , we apply the random partition process to several large corpora from a wide scope of content .",
    "these corpora are : twenty years of new york times articles ( nyt , 19872007 )  @xcite , approximately @xmath76 of a year s tweets ( twitter , 2009 )  @xcite , music lyrics from thousands of songs and authors ( lyrics , 19602007 )  @xcite , and a collection of complete wikipedia articles ( wikipedia , 2010 )  @xcite . in fig .",
    "[ fig : tpz.twocities_more ] we also use a subset of more than @xmath77 books from the project gutenberg ebooks collection ( ebooks , 2012 )  @xcite of public - domain texts .",
    "in the body of this document we claim that the random partition frequencies of the phrases within a text @xmath1 conserve the text s underlying mass of words , @xmath78 .",
    "this claim relies on the fact that the partition frequencies of phrase - segments , @xmath21 , emerging from a single clause , @xmath3 , preserve its word mass , @xmath5 .",
    "we represented this by the summation presented ( eq .  [ eq : tpz.phraseweight_text ] ) in the body of this document , which is equivalent to , @xmath79 $ ] , i.e. , the total number of words represented by the frequency of appearance of all phrases generated by the @xmath15-partition : @xmath80~&=~\\sum_{s\\in s}\\ell(s)f_q(s\\mid t)\\\\          & = ~\\sum_{s\\in s}\\sum_{s = t_{i\\cdots j}}\\ell(t_{i\\cdots j})p_q(t_{i\\cdots j}\\mid t)\\\\      & = ~\\sum_{1\\leq i < j\\leq\\ell(t)}\\ell(t_{i\\cdots j})p_q(t_{i\\cdots j } \\,|\\ , t ) ,    \\end{split}\\ ] ] which we now denote by @xmath81 for brevity . for convenience ,",
    "we now let @xmath82 denote the clause s length and observe that for each phrase - length @xmath83 there are two single - boundary phrases having partition probability @xmath84 , and @xmath85 no - boundary phrases having partition probability @xmath86 .",
    "the contribution to the above sum by all @xmath87-length phrases is then given by @xmath88 upon noting the frequency of the single phrase ( equal to the clause @xmath3 ) whose length is @xmath89 , @xmath90 , we consider the sum over all @xmath91 , @xmath92\\:&\\sum_{k=1}^{n-1}k(1-q)^{k-1}\\\\    -~q^2&\\sum_{k=1}^{n-1}k(k+1)(1-q)^{k-1 } , \\end{split}\\ ] ] which we will show equals @xmath89 .",
    "we now define the quantity @xmath93 ( the probability that a space remains intact ) , and in these terms find the sum to be : @xmath94&\\sum_{k=1}^{n-1}kx^{k-1}\\\\     -~(1-x)^2&\\sum_{k=1}^{n-1}k(k+1)x^{k-1}. \\end{split}\\ ] ] this framing through @xmath74 affords a nice representation in terms of the generating function @xmath95 which allows us to express the summations through derivatives of @xmath96 : @xmath97 to find @xmath98(f'(x)-nx^{n-1})\\\\      & -~(1-x)^2f''(x ) .",
    "\\end{split}\\ ] ] substitution of the second derivative term @xmath99 then produces the reduced form : @xmath100 ,    \\end{split}\\ ] ] into which we substitute the first derivative term @xmath101 to render @xmath102~=~n ,    \\end{split}\\ ] ] which proves eq .",
    "[ eq : tpz.phraseweight_text ] . putting this together into a sum over all clauses ,",
    "we see proof of eq .",
    "[ eq : tpz.wordmass_text ] naturally follows : @xmath103",
    "below are tables showing fits of zipf s exponent , @xmath69 , for 14 famous works of literature , along with details of the maximum likelihood estimation ( mle ) procedure in  @xcite .",
    "the quantities used in these table are described in si-1 , materials and methods .      [ cols=\"^,^,^,^,^,^\",options=\"header \" , ]",
    "the following tables contain selected phrases extracted by random partitioning for the four corpora examined in the main text .",
    "we provide complete phrase lists in csv format along with other material online at : http://www.uvm.edu / storylab / share / papers / williams2014a/."
  ],
  "abstract_text": [
    "<S> with zipf s law being originally and most famously observed for word frequency , it is surprisingly limited in its applicability to human language , holding over no more than three to four orders of magnitude before hitting a clear break in scaling . here , </S>",
    "<S> building on the simple observation that phrases of one or more words comprise the most coherent units of meaning in language , we show empirically that zipf s law for phrases extends over as many as nine orders of rank magnitude . in doing so </S>",
    "<S> , we develop a principled and scalable statistical mechanical method of random text partitioning , which opens up a rich frontier of rigorous text analysis via a rank ordering of mixed length phrases . </S>"
  ]
}
{
  "article_text": [
    "our extension of @xmath1 is motivated by a real - world application on geographic objects that requires to reuse existing ontologies and relate them through meta - modelling @xcite .",
    "+ figure 1 describes a simplified scenario of this application in order to illustrate the meta - modelling relationship .",
    "it shows two ontologies separated by a line .",
    "the two ontologies conceptualize the same entities at different levels of granularity . in the ontology above the line ,",
    "rivers and lakes are formalized as individuals while in the one below the line they are concepts .",
    "if we want to integrate these ontologies into a single ontology ( or into an ontology network ) it is necessary to interpret the individual @xmath2 and the concept @xmath3 as the same real object .",
    "similarly for @xmath4 and @xmath5 . +",
    "our solution consists in equating the individual @xmath2 to the concept @xmath3 and the individual @xmath4 to the concept @xmath5 .",
    "these equalities are called _ meta - modelling axioms _ and in this case , we say that the ontologies are related through _ meta - modelling_. in figure [ fig : firstview ] , meta - modelling axioms are represented by dashed edges . after adding the meta - modelling axioms for rivers and lakes , the concept @xmath6 is now also a _ meta - concept _ because it is a concept that contains an individual which is also a concept .",
    "+ the kind of meta - modelling we consider in this paper can be expressed in owl full but it can not be expressed in owl dl . the fact that it is expressed in owl full is not very useful since the meta - modelling provided by owl full is so expressive that leads to undecidability @xcite .",
    "+ owl 2 dl has a very restricted form of meta - modelling called _ punning _ where the same identifier can be used as an individual and as a concept @xcite .",
    "these identifiers are treated as different objects by the reasoner and it is not possible to detect certain inconsistencies .",
    "we next illustrate two examples where owl would not detect inconsistencies because the identifiers , though they look syntactically equal , are actually different .",
    "[ example : five ] if we introduce an axiom expressing that _ hydrographicobject _ is a subclass of _ river _ , then owl s reasoner will not detect that the interpretation of @xmath3 is not a well founded set ( it is a set that belongs to itself ) .",
    "[ example : simpletransference ] we add two axioms , the first one says that @xmath2 and @xmath7 as individuals are equal and the second one says that the classes @xmath3 and @xmath5 are disjoint .",
    "then owl s reasoner does not detect that there is a contradiction .        in this paper",
    ", we consider @xmath1 ( @xmath8 with qualified cardinality restrictions ) and extend it with _ mboxes_.",
    "an mbox is a set of equalities of the form @xmath9 where @xmath10 is an individual and @xmath11 is a concept . in our example , we have that @xmath12 and these two identifiers are semantically equal , i.e. the interpretations of the individual @xmath2 and the concept @xmath3 are the same .",
    "the domain of an interpretation can not longer consists of only basic objects but it must be any well - founded set .",
    "the well - foundness of our model is not ensured by means of fixing layers beforehand as in @xcite but it is our reasoner which checks for circularities .",
    "our approach allows the user to have any number of levels ( or layers ) ( meta - concepts , meta meta - concepts and so on ) .",
    "the user does not have to write or know the layer of the concept because the reasoner will infer it for him . in this way",
    ", axioms can also naturally mix elements of different layers and the user has the flexibility of changing the status of an individual at any point without having to make any substantial change to the ontology .",
    "+ we define a tableau algorithm for checking consistency of an ontology in @xmath0 by adding new rules and a new condition to the tableau algorithm for @xmath1 .",
    "the new rules deal with the equalities and inequalities between individuals with meta - modelling which need to be transferred to the level of concepts as equalities and inequalities between the corresponding concepts .",
    "the new condition deals with circularities avoiding non well - founded sets . from the practical point of view , extending tableau for @xmath1 has the advantage that one can easily change and reuse the code of existing owl s reasoners . from the theoretical point of view , we give an elegant proof of correctness by showing an isomorphism between the canonical interpretations of @xmath1 and @xmath0 . instead of re - doing inductive proofs",
    ", we `` reuse '' and invoke the results of correctness of the tableau algorithm for @xmath1 from @xcite wherever possible .",
    "[ [ sec : relwork ] ] related work .",
    "+ + + + + + + + + + + + +    as we mentioned before , owl 2 dl has a very restricted form of meta - modelling called _ punning _ @xcite . in spite of the fact that the same identifier can be used simultaneously as an individual and as a concept , they are semantically different . in order to use the punning of owl 2 dl in the example of figure [ fig : firstview ] , we could change the name @xmath2 to @xmath3 and @xmath4 to @xmath5 . in spite of the fact that the identifiers look syntactically equal",
    ", owl would not detect certain inconsistencies as the ones illustrated in examples [ example : five ] and [ example : simpletransference ] , and in example [ example : transferenceequality ] which appears in section [ sec : alcqm ] . in the first example , owl wo nt detect that there is a circularity and in the other examples , owl wo nt detect that there is a contradiction . apart from having the disadvantage of not detecting certain inconsistencies ,",
    "this approach is not natural for reusing ontologies . for these scenarios ,",
    "it is more useful to assume the identifiers be syntactically different and allow the user to equate them by using axioms of the form @xmath9 .",
    "+ motik proposes a solution for meta - modelling that is not so expressive as rdf but which is decidable @xcite . since his syntax",
    "does not restrict the sets of individuals , concepts and roles to be pairwise disjoint , an identifier can be used as a concept and an individual at the same time . from the point of view of ontology design ,",
    "we consider more natural to assume that the identifiers for a concept and individual that conceptualize the same real object ( with different granularity ) will be syntactically different ( because most likely they will live in different ontologies ) . in @xcite ,",
    "motik also defines two alternative semantics : the context approach and the hilog approach @xcite .",
    "the context approach is similar to the so - called punning supported by owl 2 dl .",
    "the hilog semantics looks more useful than the context semantics since it can detect the inconsistency of example [ example : simpletransference ] .",
    "however , this semantics ignores the issue on well - founded sets . besides , this semantics",
    "does not look either intuitive or direct as ours since it uses some intermediate extra functions to interpret individuals with meta - modelling . the algorithm given in (",
    "* theorem 2 ) does not check for circularities ( see example [ example : five ] ) which is one of the main contributions of this paper .",
    "+ de giacomo et al . specifies a new formalism , `` higher / order description logics '' , that allows to treat the same symbol of the signature as an instance , a concept and a role @xcite .",
    "this approach is similar to punning in the sense that the three new symbols are treated as independent elements .",
    "+ pan et al address meta - modelling by defining different `` layers '' or `` strata '' within a knowledge base @xcite .",
    "this approach forces the user to explicitly write the information of the layer in the concept .",
    "this has several disadvantages : the user should know beforehand in which layer the concept lies and it does not give the flexibility of changing the layer in which it lies .",
    "neither it allows us to mix different layers when building concepts , inclusions or roles , e.g. we can not express that the intersection of concepts in two different layers is empty or define a role whose domain and range live in different layers .",
    "+ glimm et al .",
    "codify meta - modelling within owl dl @xcite .",
    "this codification consists in adding some extra individuals , axioms and roles to the original ontology in order to represent meta - modelling of concepts . as any codification ,",
    "this approach has the disadvantage of being involved and difficult to use , since adding new concepts implies adding a lot of extra axioms . this codification is not enough for detecting inconsistencies coming from meta - modelling ( see example [ example : transferenceequality ] ) .",
    "the approach in @xcite has also other limitations from the point of view of expressibility , e.g. it has only two levels of meta - modelling ( concepts and meta - concepts ) .",
    "[ [ organization - of - the - paper . ] ] organization of the paper .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    the remainder of this paper is organized as follows .",
    "section [ section : casestudy ] shows a case study and explains the advantages of our approach .",
    "section [ sec : alcqm ] defines the syntax and semantics of @xmath13 .",
    "section [ sec : reasoneralcqm ] proposes an algorithm for checking consistency .",
    "section [ sec : correcttableau ] proves its correctness .",
    "finally , section [ sec : relworks ] sets the future work .",
    "in this section , we illustrate some important advantages of our approach through the real - world example on geographic objects presented in the introduction .",
    "+ figure [ fig : secondview ] extends the ontology network given in figure [ fig : firstview ] .",
    "ontologies are delimited by light dotted lines .",
    "concepts are denoted by ovals and individuals by small filled circles .",
    "meta - modelling between ontologies is represented by dashed edges .",
    "thinnest arrows denote roles within a single ontology while thickest arrows denote roles from one ontology to another ontology .",
    "+ figure [ fig : secondview ] has five separate ontologies .",
    "the ontology in the uppermost position conceptualizes the politics about geographic objects , defining _",
    "geographicobject _ as a meta meta - concept , and _ activity _ and _ governmentoffice _ as concepts .",
    "the ontology in the left middle describes hydrographic objects through the meta - concept _ hydrographicobject _ and the one in the right middle describes flora objects through the meta - concept _ floraobject_. the two remaining ontologies conceptualize the concrete natural resources at a lower level of granularity through the concepts @xmath3 , @xmath5 , @xmath14 and @xmath15 .",
    "+ note that horizontal dotted lines in figure [ fig : secondview ] do not represent meta - modelling levels but just ontologies .",
    "the ontology `` geographic object politics '' has the meta meta - concept _ geographicobject _ , whose instances are concepts which have also instances being concepts , but we also have the concepts _ governmentofice _ and _ activity _ whose instances conceptualize atomic objects .",
    "owl has only one notion of hierarchy which classifies concepts with respect to the inclusion @xmath16 .",
    "our approach has a new notion of hierarchy , called _ meta - modelling hierarchy _ , which classifies concepts with respect to the membership relation @xmath17 .",
    "the meta - modelling hierarchy for the concepts of figure [ fig : secondview ] is depicted in figure [ fig : levelview ] .",
    "the concepts are _ governmentoffice _ , _ activity _ , _ river _ , _ lake _ , _ wetland _ and _ naturalforest _ , the meta - concepts are _ hydrographicobject _ and _ floraobject _ , and the meta meta - concept is _ geographicobject_. + the first advantage of our approach over previous work concerns the reuse of ontologies when the same conceptual object is represented as an individual in one ontology and as a concept in the other . the identifiers for the individual and the concept will be syntactically different because they belong to different ontologies ( with different uris ) .",
    "then , the ontology engineer can introduce an equation between these two different identifiers .",
    "this contrasts with previous approaches where one has to use the same identifier for an object used as a concept and as an individual . in figure",
    "[ fig : secondview ] , @xmath2 and @xmath3 represent the same real object . in order to detect inconsistency and do the proper inferences",
    ", one has to be able to equate them .",
    "+ the second advantage is about the flexibility of the meta - modelling hierarchy .",
    "this hierarchy is easy to change by just adding equations .",
    "this is illustrated in the passage from figure [ fig : firstview ] to figure [ fig : secondview ] .",
    "figure [ fig : firstview ] has a very simple meta - modelling hierarchy where the concepts are _ river _ and _ lake _ and the meta - concept is _",
    "hydrographicobject_. the rather more complex meta - modelling hierarchy for the ontology of figure [ fig : secondview ] ( see figure [ fig : levelview ] ) has been obtained by combining the ontologies of figure [ fig : firstview ] with other ontologies and by simply adding some few meta - modelling axioms . after adding the meta - modelling equations , the change of the meta - modelling hierarchy is _ automatic _ and _ transparent _ to the user .",
    "concepts such as _ geographicobject _ will automatically pass to be meta meta - concepts and roles such as _ associatedwith _ will automatically pass to be meta - roles , i.e. roles between meta - concepts .    ]",
    "the third advantage is that we do not have any restriction on the level of meta - modelling , i.e. we can have concepts , meta - concepts , meta meta - concepts and so on .",
    "figure [ fig : firstview ] has only one level of meta - modelling since there are concepts and meta - concepts . in figure",
    "[ fig : secondview ] , there are two levels of meta - modelling since it has concepts , meta - concepts and meta meta - concepts .",
    "if we needed , we could extend it further by adding the equation @xmath18 for some concept @xmath19 and this will add a new level in the meta - modelling hierarchy : concepts , meta - concepts , meta meta - concepts and meta meta meta - concepts .",
    "+ moreover , the user does not have to know the meta - modelling levels , they are transparent for him .",
    "our algorithm detects inconsistencies without burdening the user with syntactic complications such as having to explicitly write the level the concept belongs to .",
    "+ the fourth advantage is about the possibility of mixing levels of meta - modelling in the definition of concepts and roles .",
    "we can build concepts using union or intersection between two concepts of different levels ( layers ) .",
    "we can also define roles whose domain and range live in different levels ( or layers ) .",
    "for example , in figure [ fig : secondview ] , we have : 1 ) a role _ over _ whose domain is just a concept while the range is a meta - concept , 2 ) a role",
    "_ manages _ whose domain is just a concept and whose range is a meta meta - concept",
    ". we can also add axioms to express that some of these concepts , though at different levels of meta - modelling , are disjoint , e.g. the intersection of the concept @xmath20 and the meta - concept @xmath21 is empty .",
    "in this section we introduce the @xmath13 description logics ( dl ) , with the aim of expressing meta - modelling in a knowledge base .",
    "the syntax of @xmath0 is obtained from the one of @xmath1 by adding new statements that allow us to equate individuals with concepts .",
    "the definition of the semantics for @xmath13 is the key to our approach . in order to detect inconsistencies coming from meta - modelling",
    ", a proper semantics should give _ the same interpretation _ to individuals and concepts which have been equated through meta - modelling .",
    "+ recall the formal syntax of @xmath22 @xcite .",
    "we assume a finite set of atomic individuals , concepts and roles .",
    "if @xmath11 is an atomic concept and @xmath23 is a role , the concept expressions @xmath24 , @xmath25 are constructed using the following grammar : +    [ cols= \" < \" , ]",
    "we first recall the tableau algorithm for checking consistency in @xmath1 @xcite .",
    "we follow the presentation of @xcite using tableau graphs and make some small changes to be able to accommodate equalities and inequalities in the abox . as in @xcite , we assume that all concepts in @xmath26 are in negation normal form and that @xmath27 is a set of concepts .",
    "each statement @xmath28 of the tbox is transformed into the concept @xmath29 .    a _ tableau graph _ consists of    * a set of nodes , labelled with individual names or variable names , * directed edges between some pairs of nodes , * for each node labelled @xmath30 , @xmath31 is either undefined or defined .",
    "if it is defined then it is a set of concept expressions , * for each pair of nodes @xmath30 and @xmath32 , @xmath33 is either undefined or defined . if it is defined , then it is a set of role names , * two relations between nodes , denoted by @xmath34 and @xmath35 .",
    "these relations keep record of the equalities and inequalities of nodes in the algorithm .",
    "the relation @xmath34 is assumed to be reflexive , symmetric and transitive while @xmath35 is assumed to be symmetric .",
    "canonical representatives are distinguished from non - canonical ones by setting @xmath36 to be defined or undefined .",
    "[ definition : equate ] we define a procedure @xmath37 that equates two nodes @xmath30 and @xmath32 in @xmath36 as follows .",
    "let @xmath38 and @xmath39 be the canonical representatives of the @xmath34-equivalence classes of @xmath30 and @xmath32 , i.e. @xmath40 and @xmath41 where @xmath42 and @xmath43 are defined .",
    "assume that either @xmath38 is not a variable or that both @xmath38 and @xmath39 are variables ( then , @xmath30 and @xmath32 will also be variables ) .",
    "when we equate a variable with an individual of the ontology , we choose the individual of the ontology as representative of the equivalence class .    1",
    ".   set @xmath44 2 .",
    "set @xmath45 and @xmath46 3 .   set @xmath47 4 .",
    "set @xmath48 to be undefined 5 .   for all @xmath49 with @xmath50 , @xmath51 6 .",
    "close @xmath34 under reflexivity , symmetry and transitivity .",
    "[ definition : makedifferent ] we define a procedure called @xmath52 that makes two nodes @xmath30 and @xmath32 different in @xmath36 as follows . for all @xmath38 and @xmath39 such that @xmath40 and @xmath41 , set @xmath53 .",
    "close @xmath35 under symmetry .",
    "[ definition : tableauinit ] the initial tableau for @xmath54 is defined by the following procedure .    1 .   for each individual @xmath55 ,",
    "create a node labelled @xmath10 and set @xmath56 .",
    "2 .   for all pairs @xmath57 of individuals ,",
    "set @xmath58 .",
    "3 .   for each @xmath59 in @xmath60 ,",
    "set @xmath61 .",
    "4 .   for each @xmath62 in @xmath60 ,",
    "set @xmath63 .",
    "5 .   for each @xmath64 in @xmath65 ,",
    "set @xmath66 .",
    "6 .   for each @xmath67 in @xmath60 , @xmath68 .",
    "we say that @xmath32 is a _",
    "successor _ of @xmath30 if @xmath69 is neither @xmath70 nor undefined .",
    "we define that @xmath32 is a _ descendant _ of @xmath30 by induction .    1 .",
    "every successor of @xmath30 , which is a variable , is a descendant of @xmath30 .",
    "every successor of a descendant of @xmath30 , which is a variable , is also a descendant of @xmath30 .",
    "we define the notion of blocking by induction .",
    "a node @xmath30 is blocked by a node @xmath32 if @xmath30 is a descendant of @xmath32 and @xmath71 or @xmath30 is a descendant of @xmath72 and @xmath72 is blocked by @xmath32 .",
    "after initialization , the tableau algorithm proceeds by non - deterministically applying the * expansion rules * for @xmath1 defined in figure [ definition : rules ] .",
    "ll * @xmath73-rule * : & if @xmath74 and @xmath75 then set @xmath76 .",
    "+   + * @xmath77-rule * : & if @xmath78 and @xmath79 then set @xmath80 or + & @xmath81 . +   + * @xmath82-rule * : & if @xmath30 is not blocked , @xmath83 and there is no @xmath32 with @xmath84 + & and @xmath85 then + & 1 . add a new node with label @xmath32 ( where @xmath32 is a new node label ) , + & 2 . set @xmath86 , + & 3 . set @xmath87 . +   + * @xmath88-rule * : & if @xmath89 and there is a node @xmath32 with @xmath84 and @xmath90 + & then set @xmath91 .",
    "+   + * @xmath92-rule * : & if @xmath93 and @xmath94 , then @xmath91 .",
    "+   + * @xmath95-rule * : & if @xmath96 , @xmath30 is not blocked and there are no @xmath97 such that + & @xmath98 , @xmath99 , @xmath100 for @xmath101 , then + & 1 .",
    "create @xmath102 new nodes @xmath103 .",
    "+ & 2 . set @xmath104 , @xmath105 and @xmath100 for @xmath106 . +   + * choose - rule * : & if @xmath107 and there is @xmath32 such that @xmath84 , @xmath90 , + & @xmath108 , then set @xmath109 or @xmath110 . +   + * @xmath111-rule * : & if @xmath107 , there are @xmath112 with @xmath98 , @xmath99 + & for @xmath113 and there are @xmath114 such that @xmath115 + & does not hold , then @xmath116    @xmath117 has a contradiction if either    * @xmath11 and @xmath118 belongs to @xmath119 for some atomic concept @xmath11 and node @xmath30 or * we have that @xmath120 and @xmath121 for some nodes @xmath30 and @xmath32 .",
    "* there is a node @xmath30 such that @xmath122 , @xmath98 , @xmath99 , @xmath123 for all @xmath124 .",
    "@xmath36 is @xmath125-complete if none of the rules of figure [ definition : rules ] is applicable .",
    "the algorithm terminates when we reach some @xmath36 that is either complete or has a contradiction .",
    "the ontology @xmath126 is consistent if there exists some @xmath36 without contradictions .",
    "otherwise it is inconsistent .",
    "in this section , we show some proofs that we could not include in the main part of the paper due to space constraints . +   + *",
    "proof of lemma [ lemma : firstreasoningproblem ] .",
    "*    first we prove the @xmath127 direction : + suppose towards a contradiction that there exists a model @xmath128 of @xmath129 such that @xmath130 .",
    "then , @xmath131 and @xmath132 .",
    "but as @xmath133 , we have that @xmath134 , @xmath132 and @xmath131 , what results in a contradiction .",
    "+   + @xmath135 direction : + suppose towards a contradiction that @xmath136 .",
    "then for some model @xmath128 of @xmath129 , @xmath137 .",
    "we introduce a new individual @xmath138 such that @xmath139 and clearly , @xmath140 .",
    "this contradicts the hypothesis .                    1 .",
    "if @xmath151 is obtained from @xmath152 by applying an @xmath0-expansion rule which is not close , @xmath111 , @xmath77 or choose then @xmath145 is a model of @xmath153 .",
    "if the rule applied is either close , @xmath111 , @xmath77 or choose then there exists a choice that yields a @xmath151 where @xmath145 is a model of @xmath153 .      by lemma",
    "[ lemma : modelaboxinic ] , we have that @xmath145 is a model of @xmath154 where @xmath155 and @xmath156 is the initial graph build by the tableau algorithm . by theorem [ theorem :",
    "termination ] , the tableau algorithm always terminates .",
    "it follows from lemma [ lemma : expansionrulesforward ] and the fact that @xmath145 is a model of @xmath146 that there is a sequence @xmath157 such that @xmath145 is also a model of @xmath158 , @xmath159 is obtained from @xmath160 by applying an @xmath0-expansion rule , @xmath161 is @xmath0-complete and @xmath162 has no contradictions .",
    "+ suppose now towards a contradiction that @xmath36 has a cycle . by definition [ definition :",
    "cycle ] , there exist a set of meta - modelling axioms @xmath163 , @xmath164 , @xmath165 @xmath166 all in @xmath167 such that @xmath168 it follows from definition [ definition : associatedontology ] and the fact that @xmath145 is a model of @xmath169 @xmath161   and @xmath170 , by definition of @xmath143 , @xmath171 . since @xmath145 is a model of @xmath143 , we have that @xmath172 because @xmath145 is a model of @xmath143 . ]",
    "that @xmath173 since @xmath145 is also a model of @xmath167 , we have that @xmath174 and hence , the domain of @xmath145 is not well - founded contradicting the first clause in definition [ definition : modelalcqm ] .",
    "suppose @xmath36 is @xmath0-complete and has no contradictions . by the close - rule , we have that either @xmath175 or @xmath176 ( but not both ) .",
    "+ suppose @xmath175 . by the @xmath34 and @xmath27-rules",
    ", we have that @xmath177 , @xmath178 for all nodes @xmath32 such that @xmath179 is defined .",
    "it is easy to prove that @xmath180 iff @xmath181 for all nodes @xmath32 such that @xmath179 is defined .",
    "hence , @xmath182 .",
    "+ suppose now that @xmath183 . by @xmath35-rule",
    ", we have that @xmath184 for some node @xmath72 .",
    "either @xmath185 or @xmath186 .",
    "in any case , @xmath187 ."
  ],
  "abstract_text": [
    "<S> this works is motivated by a real - world case study where it is necessary to integrate and relate existing ontologies through _ meta - modelling_. for this , we introduce the description logic @xmath0 which is obtained from @xmath1 by adding statements that equate individuals to concepts in a knowledge base . in this new extension </S>",
    "<S> , a concept can be an individual of another concept ( called _ meta - concept _ ) which themselves can be individuals of yet another concept ( called _ meta meta - concept _ ) and so on . </S>",
    "<S> we define a tableau algorithm for checking consistency of an ontology in @xmath0 and prove its correctness . </S>"
  ]
}
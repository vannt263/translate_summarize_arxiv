{
  "article_text": [
    "formal language theory has been used in the past to study autonomous systems , the grammatical complexity of the sequences generated according to some coding being used to characterize the complexity of the dynamical system .",
    "references @xcite to @xcite are a representative sample of some of this work",
    ". however , most systems used in technological applications are not autonomous , but controlled dynamical systems .",
    "therefore one has to distinguish , from the start , between the information that is generated by the dynamics of the system and the one that depends on the free will of the controlling operator .",
    "this has some implications on the nature of the formal entities that are used to code the system variables and on the nature of the languages that are generated .",
    "another important requirement for practical applications is the possibility to extract the grammars by on line learning from the data generated by the system , independently of whether or not an analytic model is known .    in section 2 ,",
    "after a short introduction to some formal language concepts , we show how the modelling framework for controlled dynamical systems leads , almost uniquely , to a context - dependent grammatical formulation .",
    "a learning algorithm is then proposed for on - line generation of the productions of the grammar .",
    "the following sections illustrate how this formulation may be used for modelling , control and anomaly detection .",
    "most of our applications concern electromechanical drives .",
    "using grammatical interpolation , as described in section 3 , one may obtain quite accurate results , even with small grammars .",
    "however the main capabilities of a language - based formulation lies in the pattern detection domain",
    ". therefore early detection of anomalies or faulty behaviour is probably the most promising domain of application for this technique .",
    "many fundamental contributions to the formal language field originate from the work of chomsky @xcite - @xcite , whose theory of formal grammars had a major influence in the development of the subject .",
    "_ grammatical inference _ , that is , the development of algorithms which extract grammatical information from examples , is a concept that goes back to gold s work @xcite .",
    "since then a great deal of work has been done , which can be found in several surveys @xcite - @xcite    to apply grammatical inference procedures , a dynamical system must be considered as an entity ( linguistic source ) capable of generating a specific language .",
    "the _ grammar _",
    "@xmath0 of the language is the set of rules that specifies all the _ words _ in the language and their relationships .",
    "once the grammar is found , the grammar itself is a _ model _ for the source . to define a grammar @xmath0",
    "one specifies a _ terminal alphabet _ , a _ non - terminal alphabet _ , a _ start symbol _ and a _ set of productions _",
    "@xmath1    _ _ terminal alphabet ( _ _ @xmath2 _ ) _ : set of symbols that make up the _ words _ , a word being a string of symbols .    _ _ non - terminal alphabet ( _ _ @xmath3 _ ) _ : set of auxiliary symbols that are used to generate the words by the production rules .    _",
    "start symbol _ ( @xmath4 ) : a special non - terminal symbol used to start the generation of words .",
    "_ _ productions ( _ _ @xmath5 _ ) _ : set of substitution rules ( denoted @xmath6 ) used to generate the allowed words in the language .",
    "example : the grammar @xmath7 generates the language with words consisting of a @xmath8 symbol followed by any number of @xmath9 symbols .",
    "the set of productions encodes the dynamics of the system that generates the language .",
    "any word that can be derived from the start symbol by a sequence of productions of the grammar is said to be in the language generated by the dynamical system .",
    "_ grammatical inference _ is an algorithm by which a grammar is inferred from a set of sample words produced by the dynamical system considered as the linguistic source .",
    "notice that there is not a unique relation between a language and the grammar , because distinct grammars may generate the same language .",
    "grammatical inference , in general , is the identification of a grammar from a set of positive and negative examples .",
    "one may also consider a scheme where a  teacher ",
    "answers questions concerning the language to be inferred .",
    "however , in dynamical system identification by grammatical inference , we are in the restricted setting of language identification from positive examples alone . therefore a finite sample can not characterize an infinite language .",
    "it may at most specify the class of languages , which possesses that finite sample as an allowed one .",
    "a practical problem , when learning from a finite set of examples , is the fact that some relevant productions may never be inferred .",
    "if a metric is defined in the space of words , this problem may be solved to some extent by _ grammatical interpolation techniques_. another practical problem arises when the system under study is perturbed by noise .",
    "then , productions may be inferred which are not characteristic of the system , but are a result of the noise perturbation .",
    "the solution used in our applications is to keep as valid only those productions that appear many times in the learning process .",
    "the threshold for acceptance of a production depends of course on the size of the training set and the estimated noise intensity .",
    "we work here in the _ phrase - structure grammar _ setting as defined by chomsky .",
    "notice however that more general systems like _ programmed grammars _ , _ cooperating distributed grammars _ or _ contextual grammars _",
    "@xcite may also find useful applications in the characterization of dynamical systems .",
    "in particular , programmed languages and the interpretation of controls as labels , could be a viable alternative to our identification of the control variables with non - terminal symbols .",
    "a model for a controlled dynamical system has the general form @xmath10 or , considering the time divided into discrete steps @xmath11 where @xmath12 is the state variable , @xmath13 the output ( or observed ) variable and @xmath14 the input ( or control ) variable .",
    "eqs.([2.1a ] - [ 2.1b ] ) also establish a functional relationship between the output variables at different times @xmath15 however , in most systems used in technology , not all state variables are observable .",
    "therefore eq.([2.1c ] ) does not provide a complete specification of the system . in general , specification of the dynamics in terms of the output variables",
    "requires a set of functional relationships involving many time steps in the past , namely @xmath16 it is this structure , which is required by dynamical considerations on actual controlled systems , that leads in a natural way to our proposal of @xmath17type productions .    to develop a grammatical description and a grammatical inference algorithm for controlled",
    "dynamical systems three steps are required .",
    "first , the quantification of the variables , then the specification of the nature of the productions and finally a learning algorithm to extract the productions from the experimental data .    * _ quantification _",
    "quantification refers to the creation of alphabets for the output variable @xmath18 and the control variable @xmath19 . in our approach",
    "we associate the terminal alphabet @xmath2 to the output variable @xmath13 and the non - terminal alphabet @xmath3 to the control variable @xmath19 .",
    "let @xmath20 be the number of terminal symbols and @xmath21 the number of non - terminal symbols .",
    "a quantification of the variables is made , in a discrete way , dividing the variables range in equal intervals and associating each interval to a symbol in the alphabet @xmath22    * _ productions _",
    "@xmath23__type productions _",
    "_ are defined to be substitution rules of the form @xmath24 where @xmath25 is a sequence of terminal symbols , @xmath26 a non terminal symbol and @xmath27 a special non terminal .",
    "@xmath27 is used to allow the conclusion , or not , of a generated word , by the use of following special set of productions @xmath28 where @xmath29 denotes the empty symbol .",
    "a @xmath23type production codes the evolution of the output variable , depending on its @xmath30 past values and on the value of the control variable @xmath19 .",
    "there is therefore a functional relationships between the dynamics of the system and the @xmath23type productions .",
    "* _ learning algorithm _    to obtain a sample of the language ,",
    "a sequence of control signals is applied to the system is such a way that the output variable @xmath13 takes values in a sufficiently wide region . the signal evolution",
    "is then quantified as described above and the following learning algorithm is used :    \\1 .",
    "a @xmath31type production is assumed for every newly occurring control symbol .",
    "a new @xmath32type production is generated each time the data conflicts with the previously established @xmath33type productions .",
    "the conflicting @xmath33type productions are also promoted to @xmath34type productions or are deleted if there is not sufficient information on the past to do so .    to be able to revise the conflicting @xmath33type productions , promoting them to @xmath34type productions",
    ", we need to keep in a _ memory window _",
    "the record of a certain numbers of past steps in the system evolution .",
    "the length of the memory window need not be larger than @xmath35 ( @xmath36 being the highest order allowed for the productions ) . in general there is not great harm in having zero - length for the memory window and just deleting all the conflicting lower order productions .",
    "this is because all the most relevant productions will reappear some time again in the future .",
    "as an example , consider the following symbol sequence obtained from a data sample @xmath37 at time zero the algorithm analyzes the leading symbols of both the control and the output variable . since no other information is yet available , a @xmath31type production @xmath38 is assumed .",
    "after analyzing the second symbol , the algorithm establishes another @xmath31type production @xmath39 .",
    "the third symbol would yield a @xmath31type production @xmath40 .",
    "however , this production contradicts the previously established @xmath38 , because the grammar is not stochastic .",
    "therefore , in this case , a @xmath41type production @xmath42 is obtained .",
    "the @xmath31type production @xmath38 is deleted because no information is available on the past of the first symbol ( @xmath43 ) . at the next step",
    "we obtain the production .",
    "another conflict arises when we reach the last symbol in ( [ 2.7 ] ) .",
    "then a @xmath45type production @xmath46 is obtained and @xmath47 is revised to @xmath48 .",
    "finally one is left with @xmath49 the learning algorithm is described by the flow chart in fig.1 .    unlike , for example , the rules for fuzzy logic inference , the structure of the formal language productions , obtained by our algorithm , is not established in advance .",
    "a mixture of different types of productions may be obtained in the grammar .",
    "this feature provides flexible adaptation in dynamical systems displaying distinct behavior in different regions of the working space .    in a controlled system",
    "the two types of variables , output variables and control variables , have a distinct nature .",
    "this is represented in our formalism by the assignment of terminal symbols to the dynamical variables and non - terminal symbols to the control . in turn , the productions represent the action of the control in the context of the past and present dynamics of the system .",
    "the languages generated in this way fall in the category of context - sensitive languages@xcite .    in practical applications",
    "the grammatical inference algorithm is completed with _",
    "grammatical interpolation _ and a _ noise rejection _ mechanism .",
    "grammatical interpolation is discussed in section 3 and noise rejection is simply implemented by keeping only those productions that appear a sufficient number of times in the data .",
    "also , for practical purposes , an upper bound is put on the order of the productions that the algorithm generates .    as a simple example , of how this methodology is used to model the dynamics , we consider the following piecewise linear system    @xmath50    the working domain of this dynamical systems",
    "is spanned by three distinct planes , depending on the values of the @xmath26 variable ( fig.2 ) .",
    "the assumed codification is    [ cols=\"^,^\",options=\"header \" , ]     the language generated by this dynamical system is represented by a grammar @xmath51 , whose rewriting system has one @xmath31type production , two @xmath41type productions and twenty four @xmath45type productions .",
    "this system was used to test our on - line learning algorithm with a random input control signal @xmath26 .",
    "fig.3 shows the evolution of the productions , extracted from randomly generated data , for the first 30 data points .",
    "one sees , for example , at the data point 19 , the cancellation of a @xmath31type production forced by a new @xmath41type production .",
    "also at data point 62 two contradictory @xmath45type productions are discarded .",
    "the linguistic coding described before has been used , in our laboratory , to model an experimental drive system , consisting of an electronically fed induction machine .",
    "the experimental system is depicted in fig.4 .",
    "it is composed of an induction motor driven by a power inverter .",
    "drive systems of this type are modelled using the electromechanical power conversion theory @xcite .",
    "a 12-equations model represents the electrical drive system .",
    "the large number of variables hinders any attempt to perform on - line learning without huge computational costs .",
    "therefore , one needs to simplify the electrical drive model .",
    "considering an input variable internal control loop @xcite , stator currents may be assumed to be controlled .",
    "the model is then reduced from a 12th to a 3rd order system @xcite which , in the rotor flux reference frame , is @xmath52    the rotor fluxes ( @xmath53,@xmath54 ) and the rotor speed ( @xmath55 ) are the state variables , and the stator current components ( @xmath56,@xmath57 ) the control variables .",
    "@xmath58 is the rotor time constant , @xmath59 the mutual ( stator - rotor ) induction coefficient , @xmath60 the inertia coefficient , @xmath61 the rotor self - inductance coefficient , @xmath62 the friction coefficient and @xmath63 the load torque . with the reference frame rotor flux given by @xmath64 one obtains from ( [ 3.1 ] ) @xmath65    to obtain relevant training sets , two types of information , qualitative and quantitative , should be acquired .",
    "qualitative information is obtained from the mathematical models .",
    "this leads to the choice of the relevant variables that describe the system behavior .",
    "this choice is very important to insure the existence of a functional relationship representative of the drive behavior@xcite .",
    "otherwise both learning and recognition would be impossible .    to obtain quantitative information",
    "experimental data is acquired . to obtain the data an excitation signal must be chosen .",
    "a possible approach would be to use a pseudo - random binary signal@xcite . however , this signal is not the best choice for drive systems because it is filtered by mechanical time constants .",
    "it is better to use sinusoidal signals of different amplitudes and frequencies . in this way",
    ", frequencies and amplitudes may be adjusted within the limits of the drive response , thus avoiding the filtering problem and collecting data that adequately spans the operating domain .",
    "a grammar of the drive language is inferred from the ( control ) input - output experimental information .",
    "the @xmath56 current is kept constant , a non terminal alphabet is established from the quantification of the @xmath57 current and a terminal alphabet established from the output speed signal ( @xmath66 ) . a representative training set is obtained with a sinusoidal reference signal containing a combination of different amplitudes and frequencies .",
    "fig.5 shows the evolution , in the input / output space , of the training and test data sets , the test data being displayed in bold .",
    "the acquisition of the training set is an essential step in obtaining a good knowledge of the system to be modelled .",
    "the training set must cover a representative part of the entire working domain .      to test the validity of the recognition process",
    ", two alphabets were considered .",
    "a quantification is established for both input and output variables , yielding a 60 symbol alphabet .",
    "the inferred grammar contains 183 productions distributed in the following way : 5 @xmath31type productions , 156 @xmath41type productions and 22 @xmath45type productions . to avoid the influence of noise on the inferred productions ,",
    "a production is considered valid only if it appears more than a certain number of times , this parameter depending on the size the training set .",
    "this procedure works as a filter on noise perturbations .    applying this grammar to the test set ,",
    "we obtain the recognition results shown in fig.6 .",
    "the actual electromechanical drive speed is shown as a dotted line and the grammar response as a continuous one .",
    "apart from the quantification error , the recognition results may be considered satisfactory , because the evolution of the drive speed and the grammar results are similar .",
    "however , we must point out that there are some situations , indicated by the white arrows in fig.6 , where the grammar does not provide any answer .",
    "this happens when no production was inferred representing that particular input / output relationship .",
    "as explained later , a generalization method is used to establish non - learned productions .    for the second alphabet , a quantification interval ten times higher",
    "is assumed for both input and output variables , yielding now a 6-symbol alphabet , instead of the previous 60 symbols .",
    "the inferred grammar contains 36 productions , distributed in the following way : 0 @xmath31type productions , 4 @xmath67type productions and 32 @xmath45type productions . applying this grammar to the test",
    "set the recognition results are those shown in fig.7 .",
    "as before , the electromechanical drive speed is shown as a dotted line and the grammar response as a continuous one .",
    "the white arrows denote the absence of applicable productions .",
    "as expected , the quantitative modelling performance deteriorates , there being a larger difference between the measured drive speed and the grammatical reconstruction .",
    "however , if the important feature is the qualitative recognition of the drive speed , the results may still be considered as satisfactory . for a qualitative recognition process",
    "a limited alphabet is not a serious drawback .",
    "however , as in the larger grammar , the problem of non - existent productions is present here .",
    "the discrete quantification performed within the grammatical inference algorithm implies a discrete response when recognition of the drive is performed . in order to improve the quantitative recognition capabilities of the algorithm",
    "two solutions may be used .",
    "the first is to increase the number of symbols in the alphabet to make a more accurate quantification .",
    "alternatively one may use numerical interpolation of the productions .",
    "the first solution increases the number of productions thus slowing the recognition process .",
    "the second solution does not increase the number of productions .    to illustrate the operation of the interpolation process consider again the 60-symbol alphabet and another training set which is half the size of the one used for the results in fig.6 .",
    "after inferring the correspondent grammar , the recognition results are shown in fig.8 .",
    "it is seen that the recognition process has considerable faults because , for the reduced training set , the number of productions that is obtained is considerably smaller .",
    "a smaller training set led to a faulty grammar , which fails to recognize some words .",
    "however because the symbols in our alphabets are in correspondence with numerical values of the variables domain , a metric may be defined in the space of words .",
    "new productions may then be obtained , from those inferred from the smaller sample , by interpolation .",
    "_ grammatical interpolation",
    "_ establishes new productions by a structural matching procedure .",
    "the main idea of structural matching is based on a measure of similarity between the unknown input pattern and the available data structures .",
    "the measure of similarity is the distance between the non - existent production and the nearest productions .",
    "several methods for structural word matching have been reported in the literature@xcite .",
    "the basic algorithm states that the distance between two words is related to the sequence of edit operations ( substitution , insertion , and deletion ) required to transform one word into another . for any sequence of edit operations a cost function @xmath68",
    "is considered @xmath69 @xmath68 denotes the cost of a particular sequence @xmath70 , and @xmath71 the cost of a particular edit operation .",
    "the distance between two words @xmath12 and @xmath13 is defined as the minimum cost of transforming a word into another @xmath72    when a word can not be recognized because there is no production generating some symbol in that word , a grammatical interpolation formula is used to obtain the last terminal symbol @xmath73 in the right - hand side of the new production @xmath74 this interpolation formula establishes a weighed average of the available productions of the required order , on an average distance between similar productions .",
    "the distance @xmath75 is the distance between the words @xmath76 in the left - hand side of the existent productions and the word of the new production .",
    "fig.9 shows the recognition results for the same grammar as considered in fig.8 , when the grammatical interpolation procedure is applied .",
    "the effect of the non - existent productions is reduced , and the number of symbols that are not recognized much smaller .",
    "grey arrows denote the interpolation of non - existent productions and white arrows productions that could not be obtained by interpolation .    by _ generalization",
    "_ we mean the ability of an algorithms to perform even under working conditions distinct of those observed during the learning phase .",
    "the interpolation process as described above provides generalization abilities to the algorithm .",
    "however this type of generalization is a local effect in the working space .",
    "for example , consider the training set shown in fig.10 .",
    "in this case the training set contains only positive speed values .",
    "fig.11 shows the modelling results that are obtained using this sample data .",
    "recognition fails for some of the domain areas not covered by the training data set .",
    "namely symbols that code for negative drive speed are not recognized .",
    "generalization has only a local effect .",
    "therefore , experimental training data must always cover a significant part of the working domain .",
    "any grammar @xmath0 codes for the class of patterns that belong to the language @xmath77 the grammar generates . in this way",
    "one may use the grammar to recognize well formed strings and reject anomalous ones . once one has learned the grammar of the strings generated by the system under normal conditions , if at a later time there is some fault in the dynamic system , strings that will be generated are not compatible with the learned grammar .",
    "it is also reasonable to assume that this might occur already at an early stage of the anomaly",
    ". the language algorithm might therefore be valuable as a tool for early fault detection .",
    "detection of grammar anomalies is based on the same distance and similarity measures as considered before , for grammar interpolation .",
    "the anomaly detection algorithm ( fig.12 ) computes the distance between the string generated by the dynamical system and the one generated by the learned grammar .",
    "if this distance exceeds some threshold , a fault is reported .    as a first example , let us consider the dynamical system represented by eq.([2.9 ] ) , with the same codification and inferred grammar as before . for the anomaly detection test",
    "we consider a random input during 100 time steps .",
    "a sustained anomaly was simulated between time steps 30 to 60 , and a spurious one between time steps 80 to 85 .",
    "the anomaly simulation is simply the replacement of the parameter 2 by 3 in eq.([2.9 ] ) . the dynamical system changes and therefore some of the strings that are generated do not match the learned grammar .",
    "whenever the distance between the system - generated strings and those of the grammar exceeds a threshold , an anomaly is reported .",
    "figs.13 - 15 display the anomaly detection results . in response to the control variable both the learned grammar and the system produce terminal words .",
    "these are shown in fig.14 , the output of the grammar as a continuous line and the output of the dynamical system as a dashed line .",
    "they differ whenever there is an anomaly .",
    "fig.15 displays the distance between words produced by the learned grammar and those of the dynamical system , for a word length of 10 symbols .",
    "this distance exceeds the threshold only for the sustained anomaly .    as a second example we consider anomaly detection in an induction motor .",
    "the anomaly is a rotor broken bar , and the variable coded as a terminal alphabet is the stator phase current .",
    "the learned grammar , representing the experimental drive system , is generated with the motor operating without anomaly .",
    "fig16 shows the stator current deviation due to the presence of the anomaly between time 1 and 2 ( seconds ) .",
    "fig.17 shows the distance between the words generated by the learned grammar and those of the induction motor .",
    "soon after the onset of the anomaly , this distance begins to exceed the threshold .",
    "a non - zero threshold must be defined because , as is seen in the figure , some deviations are obtained even without anomalies due to noise or even to small mismatches in the learned grammar .",
    "once the grammar generated by a dynamical system is learned , this grammar , defining the structural features of the words produced by the linguistic source , is a model for the source .",
    "so it is possible to use the productions to predict the evolution of the system or to find the control string that leads from one state to another .",
    "the basic idea of the control algorithm is as follows .",
    "a string of terminal symbols is given which represents the sequence of states that one wants the system to follow .",
    "knowing the initial state of the system , for each symbol of the desired sequence of target states one chooses a production leading the system from its present state to the desired one . at each step",
    "the production that is chosen is the one that leads the system as close as possible to the desired state .",
    "the procedure is repeated until that symbol is reached and then one moves to the next target symbol .    as an example consider the dynamical system defined by eq.([2.9 ] ) .",
    "suppose that the sequence of target states is @xmath78. fig.18 shows the evolution of the system obtained by the control methodology described above .",
    "the target sequence is shown as a dashed line and the system evolution as a continuous line .",
    "notice that to evolve from one target symbol to another the system may have to pass through other terminal symbols .",
    "the control algorithm is robust in the sense that whenever , at some time @xmath79 , the expected evolution differs from the one predicted by the learned grammar , due to some perturbation or noise , it suffices to apply the same algorithm once more starting from the state at time @xmath79 .",
    "this paper proposes a characterization of controlled system dynamics by formal language techniques .",
    "the applications we have been concerned with are mostly electromechanical drives",
    ". however , the technique might also be useful for many other dynamical systems or industrial processes .",
    "an important issue is the choice of an appropriate quantification for the feature space .",
    "this influences the choice and size of the alphabets and the dimension and complexity of the grammars .",
    "also , good coverage of the working domain , in the learning stage , is essential to insure good generalization properties .    unlike other approaches",
    ", the nature of the rules that define the dynamical system are not set up in advance , different types of productions being established on - line according to the incoming words from the linguist source .",
    "the method seems to provide good recognition results and a reasonable quantitative accuracy .",
    "fuzzy logics approaches are probably more efficient when quantitative accuracy is very important and a good knowledge already exists concerning the rules of the system .",
    "however , if the dynamics is unknown or if pattern recognition is the important issue , the formal language approach seems quite promising .",
    "j. p. crutchfield and k. young ; _ computation at the onset of chaos , _ in _ complexity , entropy and physics of information _ , sfi studies in the sciences of complexity vol.8 , w. h. zurek ( ed . )",
    "223 - 267 , 1990 .                                      j. f. martins , a. j. pires and j. a.dente , _ automatic input / output modeling of a squirrel cage induction motor drive system using a neural network _  ; in proc . of epe97 , pp .",
    "4.632 - 4.637 , trondheim , norway ; september 1997 .",
    "h. bunke ; _ string matching for structural pattern recognition _ , in _ syntactic and structural pattern recognition .",
    "theory and applications _",
    ", h. bunke and a. sanfelui ( eds . ) , series in computer science , world scientific , singapore 1990 ."
  ],
  "abstract_text": [
    "<S> formal language techniques have been used in the past to study autonomous dynamical systems . however , for controlled systems , new features are needed to distinguish between information generated by the system and input control . </S>",
    "<S> we show how the modelling framework for controlled dynamical systems leads naturally to a formulation in terms of context - dependent grammars . </S>",
    "<S> a learning algorithm is proposed for on - line generation of the grammar productions , this formulation being then used for modelling , control and anomaly detection . </S>",
    "<S> practical applications are described for electromechanical drives . grammatical interpolation techniques </S>",
    "<S> yield accurate results and the pattern detection capabilities of the language - based formulation makes it a promising technique for the early detection of anomalies or faulty behaviour . </S>"
  ]
}
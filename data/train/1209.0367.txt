{
  "article_text": [
    "all graphs in this manuscript are simple ; that is , the edges are undirected and there are no loops or multiple edges . in other words ,",
    "the adjacency matrices for graphs are binary , symmetric , and hollow .",
    "this restriction to simple graphs is for convenience only ; indeed , all of our work and analysis can be naturally extended to settings with more general graphs .",
    "suppose @xmath0 and @xmath1 are two graphs with respective vertex sets @xmath2 and @xmath3 such that @xmath4 .",
    "for any bijective function @xmath5 , the number of adjacency disagreements under @xmath6 is defined to be @xmath7 \\mbox { or } [ u \\not \\sim_{g_1 } v   \\mbox { and } \\phi(u ) \\sim_{g_2 } \\phi(v)]\\}|.\\ ] ] the _ graph matching problem _ is to minimize @xmath8 over all bijective functions @xmath5 .",
    "this problem is np - hard ; in fact , even the simpler problem of deciding whether there exists a graph isomorphism between @xmath0 and @xmath1 is notoriously of unknown complexity ( and , indeed , is suspected to belong to an intermediate complexity class which is strictly between p and np - complete ) .",
    "thus , in particular , there are no efficient algorithms known for graph matching , and it is suspected that none exist .",
    "the development of graph matching heuristics is a venerable and active field .",
    "an excellent survey article by conte , foggia , sansone , and vento titled  thirty years of graph matching in pattern recognition \" @xcite outlines successful application of approximate graph matching to two - dimensional and three - dimensional image analysis , document processing , biometric identification , image databases , video analysis , and biological and biomedical applications .",
    "the current state - of - the - art algorithms can provide effective and realtime approximate graph matching for graphs with hundreds or thousands of vertices @xcite .    in this manuscript , we utilize the approximate graph matching algorithm of vogelstein et al .",
    "@xcite which they call  faq \" ( an acronym for fast approximate quadratic assignment problem algorithm ) ; its running time is cubic in the number of vertices and , in practice , the quality of the approximate solution and the speed of the algorithm are state - of - the - art .",
    "the relevant details of faq will be specified later , in section  [ mfo ] .",
    "now consider that we are also given subsets @xmath9 , @xmath10 such that @xmath11 and we are given a fixed bijection @xmath12 .",
    "the _ seeded graph matching problem _ is defined to be the problem of minimizing @xmath8 over all bijections @xmath5 that are _ extensions _ of @xmath13  that is , @xmath6 must agree with @xmath13 on @xmath14 ( i.e. , for all @xmath15 , @xmath16 ) .",
    "the elements of @xmath14 are called _ seeds _ and the bijection @xmath13 is a _",
    "seeding_. in section  [ mfo ] , we modify the approximate graph matching faq algorithm for use in approximate seeded graph matching .    when we say that `` @xmath0 on vertex set @xmath2 , and @xmath1 on vertex set @xmath3 are random graphs drawn from the same distribution , with _ correspondence function",
    "_ @xmath17 '' , ( for the bijective function @xmath18 ) , we mean that there are specified probabilities for each of the @xmath19 possible graphs on the vertex set @xmath2 and , from this probability distribution , the two graphs @xmath0 and @xmath1 are realized ( perhaps independently , or perhaps with dependence ) and then  just in @xmath1  each vertex @xmath20 is relabeled as @xmath21 , so that @xmath0 remains on vertex set @xmath2 but @xmath1 now has vertex set @xmath3 .",
    "the approximate graph matching solution @xmath22 may be viewed as an approximation for the underlying correspondence function @xmath23 , if @xmath17 is partially or completely unknown .",
    "we will see in section [ demos ] that minimizing @xmath6 may be a poor approximation for @xmath17 , perhaps agreeing with @xmath17 at only a few vertices , not much better than chance .",
    "however , we will also see that utilizing seeds @xmath9  and the seeding function @xmath13 consisting of the _ restriction _ of @xmath17 to @xmath14  can yield an approximate seeded graph match solution which agrees with @xmath17 on a much more substantial fraction of the nonseeded vertices from @xmath2 .",
    "while the literature on graph matching is vast , with @xcite and @xcite providing a comprehensive survey ( 2004 ) and a recent literature review ( 2012 ) , respectively , there is precious little prior art for _ seeded _ graph matching : in @xcite a very small seeded graph matching problem ( 12 vertices ) is addressed , while @xcite and @xcite incorporate constraints that enforce correspondences to be only between vertices of the same `` type '' .",
    "the structure of this paper is as follows : in section [ mfo ] we adapt the faq algorithm of @xcite into an algorithm for approximate seeded graph matching ; in section [ demos ] we demonstrate the effectiveness of our algorithm  and the potential for dramatic performance improvement from incorporating just a few seeds  via simulation and three real data experiments ; we conclude in section [ disc ] with a discussion of implications and future work .",
    "we are interested in solving the seeded graph matching problem but , as discussed earlier , this problem is np - hard and so we have no expectation that there even exists an efficient algorithm .",
    "thus we seek an approximate solution that can be efficiently computed .    in section [ relaxation ]",
    "we express the seeded graph matching problem as an optimization problem with integer constraints , and then we relax the integer constraints by replacing them with nonnegativity constraints . in section [ mfaq ]",
    "we modify the faq algorithm of @xcite into an algorithm that approximately solves the relaxed seeded graph matching problem .",
    "of course , when solving a relaxation , the solution may not in general be integer valued , and as such it would not be appropriate even as an approximate solution to the original ( unrelaxed ) problem . therefore , in section",
    "[ proj ] , we project the solution of the relaxed optimization problem to the nearest element of the feasible region of the unrelaxed problem , and we then declare that to be the approximate solution to the original ( unrelaxed ) problem .      recall that @xmath0 is a graph on vertex set @xmath2 and @xmath1 is a graph on vertex set @xmath3 such that @xmath24 , the set of seeds @xmath14 is a subset of @xmath2 and @xmath25 is a subset of @xmath3 such that @xmath26 , and the bijection @xmath27 is the seeding . without loss of generality , we will take @xmath2 and @xmath3 to each be the set of integers @xmath28 , we will take @xmath14 and @xmath25 to each be the set of integers @xmath29 , we will take @xmath13 to be the identity function , for some fixed nonnegative integer @xmath30 and positive integer @xmath31 .",
    "( when @xmath32 we have the ( unseeded ) graph matching problem . )",
    "let @xmath33 be the adjacency matrices for @xmath0 and @xmath1 , respectively ; this means that for all @xmath34 it holds that @xmath35 or @xmath36 according as @xmath37 or not , and @xmath38 or @xmath36 according as @xmath39 or not .",
    "it will soon be useful to let @xmath40 and @xmath41 be partitioned as @xmath42 \\ \\ \\ \\ \\ \\ \\ \\ \\ b = \\left [ \\begin{array}{cc } b_{11 } & b_{12 }",
    "\\\\ b_{21 } & b_{22 } \\end{array } \\right ] \\ ] ] where @xmath43 , @xmath44 , @xmath45 , and @xmath46 .",
    "it is clear that the seeded graph matching problem is minimize @xmath47 over all @xmath48 permutation matrices @xmath49 , where @xmath50 is the @xmath30-by-@xmath30 identity matrix , @xmath51 is the direct sum of matrices , and @xmath52 is the @xmath53 vector norm on matrices ; say the optimal @xmath49 is @xmath54 . then the corresponding bijection @xmath55 defined as , for all @xmath56 , @xmath57 and , for all @xmath58 , @xmath59 precisely when @xmath60 , is the bijection which solves the seeded graphmatch problem .",
    "of course , this optimization problem is equivalent to minimizing @xmath61 or @xmath62 or @xmath63 , over all permutation matrices @xmath49 , where @xmath64 is the @xmath65 vector norm on matrices . expanding @xmath66",
    ", we see that this optimization problem is equivalent to maximizing @xmath67 over permutation matrices @xmath49 .",
    "and @xmath41 are symmetric matrices , we nonetheless keep transposes in place wherever they are present to enable further generalization ; our analysis will not change if we instead were in a broader setting where @xmath40 and @xmath41 are generic ( nonsymmetric , nonhollow , and/or nonintegral ) matrices in @xmath68 . ]    as mentioned previously , graph matching in np - hard , so we do not expect to ever find an efficient algorithm for seeded graph matching . in looking for an approximate solution for seeded graph matching , it makes sense to work with a relaxation ; specifically , we concern ourselves with first solving maximize @xmath67 over all doubly stochastic matrices @xmath49 , which means that @xmath69 such that @xmath70 , @xmath71 , and @xmath72 coordinatewise , where @xmath73 is the @xmath31-by-@xmath31 matrix of zeros and @xmath74 is the @xmath31-vector of all ones . indeed , this is a relaxation of seeded graph matching in the sense that if we were to add integrality constraints  that @xmath49 is integer - valued  then we would precisely return to the constraint that @xmath49 is a permutation matrix , hence we would have returned to the seeded graph matching problem .",
    "the modified - faq algorithm is a modification of the state - of - the - art graph matching algorithm of @xcite , which they call faq , so that it can be used for approximate seeded graph matching .",
    "modified - faq approximately solves the relaxed seeded graph matching problem ",
    "maximize @xmath67 subject to @xmath49 being a doubly stochastic matrix  by using the frank - wolfe method , which is an iterative procedure that involves successively solving linearizations .",
    "it turns out that the linearizations can be cast as linear assignment problems that are solved with the hungarian algorithm .",
    "we first briefly review the frank - wolfe method before proceeding to apply it .",
    "the general kind of optimization problem for which the frank - wolfe method is used is @xmath75 where @xmath76 is a polyhedral set ( i.e. , is described by linear constraints ) in a euclidean space of some dimension , and the function @xmath77 is continuously differentiable .",
    "a starting point @xmath78 is chosen in some fashion , perhaps arbitrarily .",
    "for @xmath79 , the following is done .",
    "the function @xmath80 is defined to be the first order ( i.e. , linear ) approximation to @xmath81 at @xmath82  that is , @xmath83 ; then solve the linear program : minimize @xmath84 such that @xmath85 ( this can be done efficiently since it is a linear objective function with linear constraints , and note that , by ignoring additive constants , the objective function of this subproblem can be abbreviated : minimize @xmath86 such that @xmath85 ) , say the solution is @xmath87 .",
    "now , the point @xmath88 is defined as the solution to : minimize @xmath89 such that @xmath90 is on the line segment from @xmath82 to @xmath91 in @xmath76 .",
    "( this is a just a one dimensional optimization problem ; in the case where @xmath81 is quadratic this can be exactly solved analytically . )",
    "go to the next @xmath92 , and terminate this iterative procedure when the sequence of iterates @xmath93 , @xmath94 , @xmath95 ,  stops changing much or develops a gradient close enough to zero .",
    "this concludes our review of the frank - wolfe method .",
    "we now describe how modified - faq employs the frank - wolfe method to solve the relaxed seeded graph matching problem .",
    "the objective function here is @xmath96 \\left [   \\begin{array}{cc }   i_{m \\times m } & 0_{m \\times n } \\\\ 0_{n \\times m } & p   \\end{array } \\right ] \\left [   \\begin{array}{cc }   b_{11 } & b_{12 } \\\\",
    "b_{21 } & b_{22 }   \\end{array } \\right ] \\left [   \\begin{array}{cc }   i_{m \\times m } & 0_{m \\times n } \\\\ 0_{n \\times",
    "m } & p^t   \\end{array } \\right ] \\right ) \\\\ & = & { \\textup{trace}}\\left ( \\left [   \\begin{array}{cc }   a^t_{11 } & a^t_{21 } \\\\",
    "a^t_{12 } & a^t_{22 }   \\end{array } \\right ] \\left [   \\begin{array}{cc }   b_{11 } & b_{12}p^t \\\\",
    "pb_{21 } & pb_{22}p^t   \\end{array } \\right ] \\right ) \\\\ & = & { \\textup{trace}}a_{11}^tb_{11}+ { \\textup{trace}}a_{21}^tpb_{21}+{\\textup{trace}}a_{12}^tb_{12}p^t + { \\textup{trace}}a_{22}^tpb_{22}p^t \\\\ & = &   { \\textup{trace}}a_{11}^tb_{11}+ { \\textup{trace}}p^t a_{21}b_{21}^t+{\\textup{trace}}p^ta_{12}^tb_{12 } + { \\textup{trace}}a_{22}^tpb_{22}p^t\\end{aligned}\\ ] ] which has gradient @xmath97    we start the frank - wolfe algorithm at the doubly stochastic matrix @xmath98 .",
    "( this is only for simplicity , and any other choice of doubly stochastic @xmath54 might be as effective ) . in the next paragraph",
    "we describe a single step in the frank - wolfe algorithm .",
    "such steps are repeated iteratively until the iterates empirically converge .",
    "given any particular doubly stochastic matrix @xmath99 the frank - wolfe - step linearization involves maximizing @xmath100 over all of the doubly stochastic matrices @xmath101 .",
    "this is precisely the linear assignment problem ( since it is not hard to show that the optimal doubly stochastic @xmath102 can in fact be selected to be a permutation matrix ) and so the hungarian algorithm will in fact find the optimal @xmath102 , call it @xmath103 , in @xmath104 time . the next task in the frank - wolfe algorithm step will be maximizing the objective function over the line segment from @xmath54 to @xmath103 ; i.e. , maximizing @xmath105 over @xmath106 $ ] . denote @xmath107 and @xmath108 and @xmath109 and @xmath110 and @xmath111",
    ". then ( ignoring the additive constant @xmath112 without loss of generality , since it will not affect the maximization ) we have @xmath113 which simplifies to @xmath114 .",
    "setting the derivative of @xmath115 to zero yields potential critical point @xmath116 ( if indeed @xmath117 ) ; thus the next frank - wolfe algorithm iterate will either be @xmath54 ( in which case algorithm would halt ) or @xmath103 or @xmath118 , and the objective functions can be compared to decide which of these three matrices will be the @xmath54 of the next frank - wolfe step .    at the termination of the frank - wolfe algorithm , we have an approximate solution , say the doubly stochastic matrix @xmath54 , to the problem maximize @xmath67 subject to @xmath49 being a doubly stochastic matrix .",
    "after the termination of the frank - wolfe algorithm with @xmath54 , what if @xmath54 is not a permutation matrix ?",
    "how do we get out of @xmath54 a meaningful approximate solution to the seeded graph matching problem ?",
    "the answer is that we will do one more step ; we will find the permutation matrix @xmath103 which solves the optimization problem min @xmath119 subject to @xmath102 being a permutation matrix , and finally @xmath120 is our approximate seeded graphmatch solution . to solve this latter optimization problem ,",
    "observe that for any permutation matrix @xmath102 @xmath121 thus , minimizing @xmath119 subject to @xmath102 being a permutation matrix is equivalent to maximizing @xmath122 subject to @xmath102 being a permutation matrix ; this latter optimization formulation is precisely a formulation of the well - known linear assignment problem , and it is efficiently solvable in @xmath104 time with the hungarian algorithm . in this manner",
    "we can efficiently obtain @xmath120 , which is our approximate seeded graph matching solution .      by limiting the number of frank - wolfe steps to a constant ,",
    "the running time of modified - faq is cubic in the number of vertices , since that is the complexity of the hungarian algorithm . since there is no appreciable difference in running time between modified - faq and faq , we have state - of - the - art running time , in practice , as reported for faq in @xcite .",
    "in addition , faq finds the optimal solution for several of the benchmarks considered in @xcite .",
    "we demonstrate the effectiveness of our fast approximate seeded graph matching algorithm via a simple but illustrative simulation study and three real data experiments .",
    "the potential for dramatic performance improvement from incorporating just a few seeds is undeniable .    in all four examples",
    ", we increase the number of seeds @xmath30 from zero to some substantial fraction of the ( fixed ) total number of vertices in the graphs , @xmath123 , and attempt to match the remaining @xmath31 vertices ( @xmath124 ) .",
    "( for the wikipedia graphs in section [ wiki ] , @xmath125 ; for the enron email graphs in section [ enron ] , @xmath126 ; for the c.  elegans nervous system graphs in section [ celegans ] , @xmath127 . for the simulation in section [ sim ] , we consider @xmath128 . )",
    "we report performance as the fraction of unseeded vertices correctly matched  where @xmath129 agrees with correspondence function @xmath17 .",
    "that is , the _ match ratio _ is given by @xmath130 the expected number of vertices for which a randomly chosen bijection @xmath131 agrees with @xmath17 is @xmath132 . for a given value of @xmath30",
    ", we need to match only the remaining @xmath133 vertices ; thus chance performance @xmath134 increases as @xmath30 increases . in all cases , we observe that @xmath135 increases much faster than chance .      here",
    "we present a simple but illustrative simulation study , where the graphs are ( dependent ) erdos - renyi .",
    "we must specify a joint probability model for the pair @xmath136 .",
    "we use @xmath137 ; @xmath1 is obtained by flipping bits in @xmath0 according to the `` perturbation parameter '' @xmath138 $ ] : given that edge @xmath139 , we let @xmath140 ; given that edge @xmath141 , we let @xmath142 .",
    "thus @xmath143 means @xmath1 is identical to @xmath0 and we can hope for best case performance of @xmath31 correct matches recovered , while @xmath144 means @xmath1 is independent of @xmath0 and we expect chance performance of 1 correct match recovered .",
    "we consider @xmath128 and @xmath145 .     against the number of seeds @xmath30 for various degrees of dependency between graphs .",
    "the perturbation parameter @xmath146 increases from @xmath36 to @xmath147 ( from dark blue to red ) in increments of @xmath148 , with performance decreasing monotonically as @xmath146 increases .",
    "the right plot is a zoom - in , showing details for small @xmath30 .",
    "nb : @xmath149 gives perfect matching , even for @xmath32 .",
    "[ sim - fig-1],title=\"fig : \" ]   against the number of seeds @xmath30 for various degrees of dependency between graphs .",
    "the perturbation parameter @xmath146 increases from @xmath36 to @xmath147 ( from dark blue to red ) in increments of @xmath148 , with performance decreasing monotonically as @xmath146 increases .",
    "the right plot is a zoom - in , showing details for small @xmath30 .",
    "nb : @xmath149 gives perfect matching , even for @xmath32 .",
    "[ sim - fig-1],title=\"fig : \" ]    the graphs @xmath0 and @xmath1 are matched using modified - faq .",
    "figure [ sim - fig-1 ] plots the mean and standard error of the match ratio @xmath135 against the number of seeds @xmath30 , based on 400 randomly chosen seed sets @xmath150 for each @xmath30 , for perturbation parameter @xmath146 increasing from @xmath36 to @xmath147 in increments of @xmath148 .",
    "( chance is plotted in black , but is indistinguishable from @xmath151 ( red ) . )",
    "notice that @xmath135 increases quickly as @xmath30 increases and decreases as @xmath146 increases , as expected .",
    "we note that perfect performance when @xmath149  the darkest blue line in figure [ sim - fig-1 ] shows that the match ratio @xmath152 even for @xmath32  indicates that modified - faq finds the isomorphism when it exists .",
    "wikipedia is an online editable encyclopedia with 22 million articles ( more than 4 million articles in english ) in 285 languages .",
    "a collection of @xmath125 english articles were collected by crawling the ( directed ) 2-neighborhood of the document `` algebraic geometry '' using inter - language links from one english article to another .",
    "this first graph will be made a simple undirected graph by symmetrizing its adjacency matrix . in wikipedia",
    ", intra - language links between articles of the same topic in different languages are available ; thus , 1 - 1 correspondence information between the vertices of this english wikipedia subgraph and some vertices of the french wikipedia graph is available .",
    "corresponding articles in french were collected and their inter - language links yield a second graph ( not necessarily connected ) which is also symmetrized . following the notation in previous sections ,",
    "the english wikipedia subgraph is denoted @xmath0 and the french wikipedia subgraph induced by the correspondents of the english wikipedia articles is denoted @xmath1 .     against the number of seeds @xmath30 .",
    "[ wiki - fig-1 ] ]    the english and french wikipedia subgraphs @xmath0 and @xmath1 are matched using modified - faq .",
    "figure [ wiki - fig-1 ] plots , in red , the mean and standard error of the match ratio @xmath135 against the number of seeds @xmath30 , based on 100 randomly chosen seed sets @xmath150 for each @xmath30 .",
    "( chance is plotted in black . )",
    "we see dramatic performance improvement from incorporating just a few seeds : with no seeds @xmath153 ( chance is @xmath154 ) , while with just @xmath155 seeds @xmath156 ( chance is @xmath157 ) .",
    "the blue curve in figure [ wiki - fig-1 ] shows the match ratio @xmath135 for the _ unseeded _",
    "problem on @xmath158 vertices .",
    "while the problem becomes smaller as @xmath30 increases , performance does not improve appreciably in terms of match ratio .",
    "the enron email corpus consists of messages amongst @xmath126 employees of the enron corporation .",
    "publicly available emails are used to compute a time series of graphs @xmath159 on the actors , where each graph represents one week of emails .",
    "the inference task is to identify `` chatter '' anomalies  small groups of actors whose activity amongst themselves increases significantly for some week @xmath160 .",
    "previous work identified such an anomaly at week @xmath161 ( see @xcite ) .     against the number of seeds @xmath30 .",
    "[ enron - fig ] ]    the enron email graphs for consecutive weeks @xmath162 are matched , one pair at a time , using modified - faq .",
    "figure [ enron - fig ] plots , for each pair , the mean and standard error of the match ratio @xmath135 against the number of seeds @xmath30 , based on 100 randomly chosen seed sets @xmath150 for each @xmath30 .",
    "( chance is plotted in black . ) the results are consistent with the finding reported in @xcite : the match ratio @xmath135 is much higher between graphs for weeks @xmath163 , where there was no significant change , compared to matching across the change ( between @xmath164 and between @xmath165 ) . the anomalous event at week @xmath161 makes the graphs more different and the graph matching more difficult .",
    "indeed , investigation shows that the difference in performance is largely attributable to the vertices participating in the anomaly , as reported in @xcite .      c.",
    "elegans is a roundworm that has been extensively studied ; its particular usefulness comes from its simple nervous system , consisting of @xmath127 neurons whose connections have been mapped @xcite .",
    "there are two types of connections between neurons : chemical ( chemical synapses ) and electrical ( junction potentials ) .",
    "the adjacency matrices for both graphs are sparse .",
    "both @xmath0 and @xmath1 are weighted graphs ; for sake of uniformity with our other examples , the adjacency matrices are binarized and symmetrized .     against the number of seeds @xmath30 .",
    "[ worm - fig ] ]    the objective of this experiment is to match the chemical graph @xmath0 to the electrical graph @xmath1 , using modified - faq . figure [ worm - fig ] plots , in red , the mean and standard error of the match ratio @xmath135 against the number of seeds @xmath30 , based on 100 randomly chosen seed sets @xmath150 for each @xmath30 .",
    "( chance is plotted in black . )",
    "although performance improves when incorporating seeds , the match ratio for this experiment is significantly lower than for either wikipedia or enron .",
    "for instance , with @xmath166 seeds , the remaining @xmath167 vertices are matched with @xmath168 ( chance is @xmath169 ) .",
    "this suggests that the similarity between the two types of brain graphs , while significant , is tenuous .",
    "many graph inference tasks are more easily accomplished if the graphs under consideration are labeled  if we know the correspondence between vertices in graphs @xmath0 and @xmath1 .",
    "we have demonstrated , via a simple but illustrative simulation and three real data experiments , the potential for dramatic performance improvement in identifying this correspondence from incorporating just a few seeds .    in practice ,",
    "identifying seeds @xmath14 , @xmath25 , and their bijection @xmath13 may be costly .",
    "thus , understanding the cost - benefit trade - off between inference without correspondence and inference performed subsequent to seeded graph matching is essential .",
    "this paper provides the foundation for that analysis .",
    "as noted above , our methodology applies immediately in the broader setting where adjacency matrices are generic ( nonsymmetric , nonhollow , and/or nonintegral ) ; that is , to weighted , directed , loopy graphs .",
    "figure [ worm2-fig ] provides results for matching the c.  elegans graphs of section [ celegans ] , but in the case where the adjacency matrices have _ not _ been binarized and symmetrized . comparing results for the original graphs vs.  their simplified versions ,",
    "we see that the addition of edge weights actually degrades performance significantly , suggesting that the edge weights in this case are _ not _ consistent across the two modalities .",
    "obvious extensions to this work include : ( a ) the case where @xmath170  say , @xmath171 ; ( b ) the case where the correspondence may be many - to - many ; and ( c ) the case where the seeds are `` soft '' rather than `` hard ''  that is , we know that it is _ likely _ ( but not _ certain _ ) that the bijection @xmath13 between seed sets @xmath14 and @xmath25 holds .",
    "each of these extensions can be addressed within the framework presented here .    in conclusion , we contend that the methodology presented herein forms the foundation for improving performance in myriad graph inference applications for which there exists a partially unknown correspondence between the vertices of various graphs .              c. fraikin and p. van dooren , graph matching with type constraints on nodes and edges , in _ web information retrieval and linear algebra algorithms _",
    "( a. frommer , m.w . mahoney , and d.b .",
    "szyld , eds ) ( 2007 ) .",
    "vogelstein , j.m .",
    "conroy , l.j .",
    "podrazik , s.g .",
    "kratzer , e.t .",
    "harley , d.e .",
    "fishkind , r.j .",
    "vogelstein , and c.e .",
    "priebe , brain graph matching via fast approximate quadratic programming , _ submitted for publication _ ( 2012 ) available at @xmath172arxiv.org / pdf/1112.5507@xmath173 ."
  ],
  "abstract_text": [
    "<S> graph inference is a burgeoning field in the applied and theoretical statistics communities , as well as throughout the wider world of science , engineering , business , etc . given two graphs on the same number of vertices , the graph matching problem is to find a bijection between the two vertex sets which minimizes the number of adjacency disagreements between the two graphs . </S>",
    "<S> the seeded graph matching problem is the graph matching problem with an additional constraint that the bijection assigns some particular vertices of one vertex set to respective particular vertices of the other vertex set . </S>",
    "<S> solving the ( seeded ) graph matching problem will enable methodologies for many graph inference tasks , but the problem is np - hard . </S>",
    "<S> we modify the state - of - the - art approximate graph matching algorithm of vogelstein et al .  </S>",
    "<S> ( 2012 ) to make it a fast approximate seeded graph matching algorithm . </S>",
    "<S> we demonstrate the effectiveness of our algorithm  and the potential for dramatic performance improvement from incorporating just a few seeds  via simulation and real data experiments . </S>"
  ]
}
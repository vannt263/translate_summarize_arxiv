{
  "article_text": [
    "leaky integrate and fire ( lif ) neuron , @xcite is a universally - accepted `` standard '' neuronal model in theoretical neuroscience .",
    "usage of lif as a model allowed obtaining numerous theoretical results , see e.g. @xcite .",
    "when input impulses are absent , the membrane potential of the lif model decays exponentially . in computer simulations ,",
    "this makes inevitable the usage of machine floating point arithmetic .",
    "however , the floating point calculations can be considerably inaccurate in some cases , see e.g. @xcite .",
    "these cases do not so frequently occur . therefore , if one studies neuronal firing statistics , when a simulation is repeated many times with slightly different parameters , the errors due to floating point pitfalls can be negligibly small .",
    "the problem arises if one needs to check if two neuronal states obtained in the course of simulation are identical .",
    "this kind of check is necessary , e.g. to figure periodic dynamical regimes of a reverberating network , see @xcite for an example . in order to check",
    "if a neural net is in a periodic regime , one needs to check whether two states the net passes through at two distinct moments of time are exactly the same .",
    "if states of individual neurons the net is composed of are described by floating point variables , then this expects checking that two floating point numbers are exactly equal  the operation , which is not permitted in programming due to small , but inevitable inaccuracy adhered to the machine floating point arithmetic .",
    "instead , the option is to check whether the distance between two numbers is less than a `` machine epsilon '' , @xcite . this does not help to find periodic regimes reliably . indeed , in this comparison paradigm , two different states may happen to be treated as identical and this may bring about a fake periodic regime .",
    "taking into account that rounding mode depends on operating system and on machine architecture , it will be difficult to treat in a consistent manner sustained behavior of a dynamical system prone to instability ( as do neuronal nets ) if simulation is made in floating point numbers .",
    "this problem is avoided in @xcite , where the binding neuron model was used as neuronal model .",
    "the binding neuron states are naturally described by integers , and machine arithmetic of integers is perfectly accurate .",
    "this admits a routine check whether two numbers are exactly equal , and finally , whether two states of a neuronal net are identical , provided those states are expressed in terms of whole numbers , exclusively .",
    "it would be nice to have the same possibility when a lif model is used for simulations .",
    "in traditional computer simulations of lif model driven with input stream of stimulating impulses , a dynamical system is simulated , which has states described with machine floating point numbers .",
    "we denote this dynamical system as fplif .",
    "the purpose of this paper is to offer an approximation , which replaces the fplif with intlif  a dynamical system whose states are expressed in terms of integers . in what follows",
    ", we describe the approximation itself and check its quality by running both fplif and intlif with the same stream of input impulses randomly distributed in time .",
    "it appears that it is possible to choose the approximation parameters in such a way , that dynamics of both fplif and intlif are exactly the same , if considered in terms of spiking moments .",
    "the simplest lif model is considered .",
    "namely , the neuronal state at moment @xmath0 is described as membrane voltage , @xmath1 .",
    "the resting state is defined as @xmath2 .",
    "any input impulse advances membrane potential by @xmath3 , where @xmath4 . between two consecutive input impulses",
    ", @xmath1 decays exponentially : @xmath5where @xmath6 , @xmath7  is the membrane relaxation time .",
    "suppose that the threshold value for the lif neuron is @xmath8 .",
    "the neuron fires a spike every time when @xmath9 and @xmath1 is reset to zero after that .",
    "the set of possible values of @xmath1 is the following interval : @xmath10 the above mentioned properties of the lif model can be routinely coded with @xmath1 and @xmath3 declared as floating point quantities . in this case",
    ", possible values of @xmath1 will be those machine floating point numbers , which fall into the interval ( [ interval ] ) . and",
    "this gives the fplif dynamical system .",
    "in numerical simulation of a dynamical system , the time is advanced in discrete steps , having duration of a small fixed . ]",
    "time - step , @xmath11 .",
    "this gives an approximation of the continuous time @xmath0 with discrete moments : @xmath12 due to this fact , the membrane voltage , @xmath1 , also changes in a discrete manner from step to step . as a result",
    ", in a single run of the pure decay dynamics ( without input stimulation ) the @xmath1 will pass through only some discrete values , missing the intermediate ones .",
    "those discrete values can be chosen as an approximation of the continuous interval ( [ interval ] ) .",
    "it is clear that the set of the discrete values mentioned depends on the initial value of @xmath13 . to be concrete ,",
    "let us chose the following approximating set : @xmath14 this induces the following representation of the interval ( [ interval ] ) : @xmath15 any value @xmath16 falls for some @xmath17 into interval @xmath18 and we chose its left end as an approximation for that @xmath1 .",
    "the error of this approximation is less than @xmath19    now , if neuron has membrane potential @xmath20 and one intends to describe by values from @xmath21 its consequent dynamics due to pure decay , the following should be done .",
    "the @xmath1 value should be replaced with @xmath22 , and the subsequent decay dynamics simply propels @xmath1 through values @xmath23 from @xmath21 .",
    "the state of neuron at each time step can be labeled with integer @xmath17 by the following way : the state @xmath24 obtains label @xmath17 , where @xmath25 .",
    "now , the decay dynamics can be expressed in terms of @xmath17 .",
    "namely , if at some discrete moment of time @xmath26 a state is labeled as @xmath17 , then the state at the next moment , @xmath27 , is labeled as @xmath28 .",
    "thus , having in mind the correspondence : @xmath29 , the pure decay dynamics becomes as simple as adding unity to the state label at each time step .    for computer simulation purpose",
    ", it should be noticed , that the set @xmath21 is finite . if the state label @xmath17 is declared in a program as ` int ` , then @xmath21 has ` int_max`+1 elements , where ` int_max ` is the largest value of ` int`-type variable which can be represented in the operating system .",
    "thus , with state labels of type ` int ` , instead of ( [ bins1 ] ) , one has to chose as @xmath21 the following set of ` int_max`+1 elements : @xmath30 where the value 0 is added to describe the resting state , which is attained just after firing .",
    "consequently , ( [ intervals1 ] ) should be replaced with the following : @xmath31    in a 64-bits os , ` int_max ` = 2147483647 .",
    "this imposes a limit on possible duration of the pure decay evolution represented with ` int ` type labels .",
    "if the time step @xmath32 ms , then ` int_max`@xmath33 350 minutes .",
    "thus , description of neuronal state by ` int ` type label fails , if a lif neuron starts , e.g. with @xmath1 close to @xmath8 and does not receive excitatory stimulation for longer than 350 minutes of real time",
    ".    in real networks , stimulus - free period of a neuron involved in a useful task can not be so long . indirectly ,",
    "a very crude upper bound for possible duration of stimulus - free period can be estimated from duration of suppression of activity observed in some brain networks , @xcite .",
    "such a suppression can last up to 1000 ms . based on this value ,",
    "let us expect that our neuron receives excitatory input impulses of amplitude @xmath3 with mean rate higher than @xmath34 hz . before the first input impulse",
    ", neuron is in the state `` empty '' with @xmath35 .",
    "after the first input impulse the state label @xmath36 and this value is small if compared with ` int_max ` .",
    "for example , for @xmath32 ms , @xmath37 ms , @xmath38 one obtains @xmath39 .",
    "the label @xmath40 gets increment 1 after each time step @xmath11 until the next input impulse comes .",
    "the mean waiting time for the next stimulation , if expressed in the @xmath11 units , is @xmath41 .",
    "this means that at the moment of next stimulation , the state label @xmath42 after the next input impulse , the state label @xmath43 .",
    "this suggests that states with labels @xmath44 will be observed quite rare with no chances to attain @xmath17 value close to the ` int_max ` provided a neuron receives at least a moderate stimulation .",
    "suppose that input impulse at moment @xmath0 advances by @xmath3 the membrane voltage @xmath1 .",
    "if @xmath45 , then @xmath46 does not hold in most cases .",
    "one needs to approximate @xmath47 by a suitable value from @xmath21 , as described in n. [ pdd ] , and then to proceed with pure decay dynamics expressed in integers , as described in n. [ pdd ] , until the next input impulse .",
    "preliminary tests of this scheme where performed with lif neuron stimulated with poisson stream of input impulses .",
    "the standard floating point lif ( fplif ) simulation and integer lif ( intlif ) simulation , as described here , were performed with the same input streams .",
    "the threshold manner of triggering gives chances that firing moments of both models will be the same , if expressed in whole number of @xmath11 .",
    "computer simulations performed show that the firing moments of both models are indeed the same for some initial period of time after which they become different .",
    "this is because the approximation error , when approximating lif state ( voltage ) by a value from @xmath21 , builds up too fast with each input impulse . in order to decrease the error",
    ", one needs more precise approximation of the continuum set @xmath48 , than that given by the discrete set @xmath21 .",
    "the required approximation can be achieved by introducing second order bins into the set @xmath21 .",
    "let us choose an integer @xmath49 and divide each bin from ( [ intervals1int_max ] ) to @xmath50 equal second order bins ) , because we do not expect the state @xmath13 will ever fall into it , except of just after firing , when @xmath35 , exactly . ] .",
    "this gives representation of @xmath17-th first order bin : @xmath51where @xmath52 denotes the size of second order bin within the @xmath17-th first order bin @xmath18 : @xmath53 now , if @xmath54 , then we chose @xmath55 as its approximation .",
    "this results in the new set @xmath56 of possible values for @xmath1 : @xmath57 any point , except of 0 , in the set @xmath56 is labelled with two integers , @xmath58 , where @xmath59 , @xmath60 .",
    "any label @xmath58 corresponds to the membrane voltage @xmath61 from @xmath56 : @xmath62 , or : @xmath63 from the last , it is clear that pure decay evolution for time step @xmath11 transforms voltage @xmath61 into @xmath64 , which means for the integer labels : @xmath65    now , if initial state of neuron is given as floating point number @xmath66 , then one needs to find its approximation @xmath67 , as described above .",
    "the precision of this approximation is : latexmath:[\\[\\label{precn }     in the approximation of @xmath13 with @xmath61 , the value of @xmath17 should satisfy the following relation : @xmath69 , which gives : @xmath70 - 1\\ ] ] where @xmath71 $ ] denotes the integer part of @xmath72 .",
    "now , with @xmath17 found , we determine the @xmath73 value from the following relation : @xmath74 , which gives : @xmath75\\ ] ]    now evolution of lif state can be expressed in integer numbers as follows . for initial value of voltage , @xmath76 , we find its integer representation / approximation @xmath58 in accordance with eqs .",
    "( [ v2n ] ) , ( [ vn2i ] ) .",
    "the pure decay evolution then goes as displayed in ( [ ni2ni ] ) .",
    "in order to describe influence of input impulse with magnitude @xmath3 on the state @xmath58 we calculate the voltage @xmath61 in accordance to ( [ ni2v ] ) .",
    "the voltage after receiving input impulse becomes @xmath77 .",
    "if @xmath78 , then neuron produces an output impulse and ends in the state `` empty '' with @xmath35 .",
    "otherwise , the new integer state , @xmath79 , can be found with ( [ v2n ] ) , ( [ vn2i ] ) applied to the @xmath80 instead of @xmath13 .",
    "the procedures given above define the dynamical system intlif in which a neuronal state is described with two integers , @xmath58 , with additional unique state `` empty '' attained just after firing .",
    "neuronal state is described by three integers : `",
    "int n , i ; char empty ; ` if ` empty = = 1 ` then the neuron is in its resting state with @xmath35 .",
    "if ` empty = = 0 ` then @xmath13 can be calculated from the ` n , i ` in accordance with ( [ ni2v ] ) .",
    "equation ( [ ni2v ] ) gives the following c - code for calculating @xmath13 from known integer state ` { n , i , empty } ` :    .... v = empty ? 0 : pow(al , n)*v0*(al + ( double)i / n*(1 - al ) ) ; ....    where ` v0 ` stands for @xmath8 and ` al ` stands for @xmath81 .",
    "after firing , ` empty = = 1 ` .    equation ( [ v2n ] )",
    "gives the following c - code for calculating @xmath17 :    .... n = - floor(log(v0/v)/log(al ) ) - 1 ; ....",
    "similarly for the equations ( [ cn ] ) , ( [ vn2i ] ) .      for testing the intlif simulation paradigm , both intlif and fplif models were stimulated with the same random stream of impulses .",
    "the stream with exponential distribution of inter - spike intervals ( isi ) was generated with random number generator from the gnu scientific library .",
    "generators of three types were used , each with a number of different seeds , see table [ t1 ] .",
    ".[t1 ] parameters of simulating algorithm [ cols= \" < , < \" , ]     as a result of testing , it was found that for any combination of parameters it is possible to ensure that all firing moments of intlif and fplif are identical by choosing proper @xmath50 and @xmath11 values .",
    "the decisive factor , which determines whether all spiking moments of intlif and fplif coincide , is the precision of approximating the interval of possible voltages , @xmath48 , with discrete values from @xmath56 as compared to @xmath3 .",
    "this relative error , @xmath82 , can be estimated based on ( [ error1 ] ) and ( [ precn ] ) : @xmath83 which for small @xmath84 gives : @xmath85 . in the testing",
    "performed , it appeared that having @xmath86 guarantees that sequences of spiking moments of intlif and fplif are identical . for larger values of @xmath82",
    ", differences between the two sequences may appear , which are characterized by a few misplaced spikes , up to several hundred and more .",
    "in numerical simulation of a dynamical system adaptive algorithms are normally used , when the time step @xmath11 value is increased / decreased during calculations in order to make calculations faster and more precise .",
    "this works perfect if it is necessary to calculate the system s state at some future moment of time starting from some initial state . to determine periodic regimes in a reverberating network",
    ", it is instead necessary to calculate the whole trajectory during some interval of time . in this case",
    ", the straightforward way is to approximate that interval with equidistant discrete points as in ( [ moments ] ) and calculate states of the system in those points .",
    "therefore , paradigm of fixed time step is used here for a single neuron .",
    "description of neuronal state ( voltage ) with a pair of integers @xmath58 does not exempt the intlif model from using machine floating point numbers . indeed , in eqs .",
    "( [ ni2v ] ) , ( [ v2n ] ) , ( [ vn2i ] ) , operations with floating point numbers are explicitly involved .",
    "nevertheless , the pure decay evolution , as it is described in ( [ ni2ni ] ) goes without rounding errors .",
    "the underlying to ( [ ni2ni ] ) values from @xmath56 are always the same for the same @xmath58",
    ". with obtained input impulse , calculation of @xmath87 involves a rounding error . the error is immediately cleared while calculating new @xmath58 by means of ( [ v2n ] ) , ( [ vn2i ] ) .",
    "this allows describing states of lif neuron in terms of integers in a consistent manner .",
    "namely , different state labels @xmath58 correspond to different voltages from @xmath56 and vice versa .",
    "we used here the simplest possible model for lif neuron .",
    "it seems , that technique offered in nn .",
    "[ pdd ] , [ ii ] , above , can be extended to be valid for more elaborated lif models , like those described in @xcite .",
    "the intlif paradigm for numerical simulation of leaky integrate and fire neuron is proposed . in this paradigm ,",
    "neuronal state is described by two integers , @xmath58 .",
    "the membrane voltage of lif neuron can be calculated from @xmath58 , if required .",
    "the lif state change due to both leakage and stimulating impulses is expressed exclusively in terms of changing integers @xmath58 .",
    "the intlif paradigm is compared with the standard fplif simulation paradigm , where membrane voltage is expressed as machine floating point number , by stimulating both models with the same random stream of input impulses and registering the spiking moments of both models .",
    "it is concluded that approximation parameters of intlif can be chosen in such a way that spiking moments of both models are exactly the same if expressed as whole number of simulation time step , @xmath11 .",
    "description of lif states by integers gives a consistent numerical model , suitable for situations where exact comparison of states is necessary .",
    "this work was supported by the programs of the nas of ukraine `` microscopic and phenomenological models of fundamental physical processes in a micro and macro - world '' , pk no 0112u000056 , and `` formation of structures in quantum and classical equilibrium and nonequilibrium systems of interacting particles '' , pk no 0107u006886 .",
    "11 natexlab#1#1[1]`#1 ` [ 2]#2 [ 1]#1 [ 1]http://dx.doi.org/#1 [ ] [ 1]pmid:#1 [ ] [ 2]#2 , , ( ) . , , ( ) . , , ( )",
    ", , , . , , ( ) . , , (",
    ", , , , , , , , , , , ( ) . , , ( ) .",
    ", , ( ) . ."
  ],
  "abstract_text": [
    "<S> the leaky integrate and fire ( lif ) neuron represents standard neuronal model used for numerical simulations . </S>",
    "<S> the leakage is implemented in the model as exponential decay of trans - membrane voltage towards its resting value . </S>",
    "<S> this makes inevitable the usage of machine floating point numbers in the course of simulation . </S>",
    "<S> it is known that machine floating point arithmetic is subjected to small inaccuracies , which prevent from exact comparison of floating point quantities . in particular , it is incorrect to decide whether two separate in time states of a simulated system composed of lif neurons are exactly identical . </S>",
    "<S> however , decision of this type is necessary , e.g. to figure periodic dynamical regimes in a reverberating network . here </S>",
    "<S> we offer a simulation paradigm of a lif neuron , in which neuronal states are described by whole numbers . within this paradigm </S>",
    "<S> , the lif neuron behaves exactly the same way as does the standard floating point simulated lif , although exact comparison of states becomes correctly defined .    </S>",
    "<S> * keywords . * </S>",
    "<S> leaky integrate and fire neuron ; floating point calculations ; simulations </S>"
  ]
}
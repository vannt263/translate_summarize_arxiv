{
  "article_text": [
    "we will discuss two notions of monotonicity for probability measures on a finite partially ordered set ( poset ) .",
    "let @xmath9 be a finite poset and let @xmath10 be a pair of probability measures on @xmath1 .",
    "( we use a calligraphic letter @xmath9 in order to distinguish the set @xmath1 from the same set equipped with a partial ordering @xmath11 . ) a subset @xmath12 of @xmath1 is said to be an _ up - set _ in @xmath9 ( or _ increasing set _ ) if @xmath13 whenever @xmath14 and @xmath15 .",
    "we say that @xmath16 is _ stochastically smaller _",
    "than @xmath17 , denoted @xmath18 , if @xmath19 an important characterization of stochastic ordering was established by   and fully investigated by  .",
    "they show that ( [ eq : stocle.def ] ) is necessary and sufficient for the existence of a pair @xmath20 of @xmath1-valued random variables [ defined on some probability space @xmath21 satisfying the properties that @xmath22 and that @xmath23 for @xmath24 .",
    "now let @xmath25 be a finite poset .",
    "let @xmath26 be a system of probability measures on @xmath1 .",
    "we call @xmath27 a _ realizably monotone _",
    "system if there exists a system @xmath28 of @xmath1-valued random variables such that @xmath29 and @xmath30 in such a case we shall say that @xmath31 _ realizes the monotonicity _ of @xmath27 .",
    "the ( easier half of the ) characterization of stochastic ordering applied pairwise implies @xmath32 the system @xmath26 is said to be _ stochastically monotone _ if it satisfies  ( [ eq : sm.mono ] ) .",
    "thus , stochastic monotonicity is necessary for realizable monotonicity .    in light of strassen s characterization of stochastic ordering",
    ", one might guess that stochastic monotonicity is also sufficient for realizable monotonicity .",
    "it is perhaps surprising that the conjecture is false in general .",
    "various counterexamples are given by  , including one independently discovered by  .",
    "given a pair @xmath33 of posets , if the two notions of monotonicity  stochastic and realizable  are equivalent , then we say that _ monotonicity equivalence _ holds for @xmath33 .",
    "suppose that @xmath9 is linearly ordered .",
    "then , for a given probability measure @xmath34 on @xmath1 , we can define its _ inverse probability transform _",
    "@xmath35 by @xmath36 where @xmath37 is the distribution function for  @xmath34 .",
    "furthermore , let @xmath25 be any poset , and let @xmath26 be a stochastically monotone system of probability measures on @xmath1 .",
    "given a single uniform random variable @xmath38 on @xmath39 , we can construct a system @xmath40 of @xmath1-valued random variables via @xmath41 which realizes the monotonicity .",
    "this proves that monotonicity equivalence always holds for @xmath33 when @xmath9 is linearly ordered .    in section  [ ss : invprob ]",
    "we generalize the definition of inverse probability transform to a certain class of posets  @xmath9 which are not necessarily linearly ordered .",
    "we then extend the construction in the preceding paragraph and present theorems  [ th : class.z ] and  [ th : class.w ] , thereby establishing monotonicity equivalence under certain additional assumptions . a further extension of theorem  [ th : class.w ] is discussed briefly in section  [ ss : me.class.w ] , which culminates in theorem  [ th : class.w.ext ] .",
    "we will not discuss the proofs of theorems  [ th : class.z ] , [ th : class.w ] , and  [ th : class.w.ext ] in the present brief paper , but rather refer the reader to   for ( the highly technical ) proofs and more extensive discussion .      of particular interest in our general study of realizable monotonicity is the case @xmath42 . here",
    "the system @xmath43 of probability measures can be considered as a markov transition matrix @xmath44 on the state space @xmath1 . and introduced algorithms to produce observations distributed _ perfectly _ according to the long - run distribution of a markov chain .",
    "both algorithms apply most readily and operate most efficiently when the state space @xmath9 is a poset and a suitable monotonicity condition holds . of the many differences between the two algorithms ,",
    "one is that the appropriate notion of monotonicity for the propp ",
    "wilson algorithm is realizable monotonicity , while for fill s algorithm it is stochastic monotonicity ; see remark  4.5 in  . here",
    "the properties  ( [ eq : rm.mono])([eq : rm.marg ] ) are essential for the propp ",
    "wilson algorithm to be able to generate transitions simultaneously from every state in such a way as to preserve ordering relations . for further discussion of these perfect sampling algorithms in the monotone",
    "setting , see   and  ; for further discussion of perfect sampling in general , consult the annotated bibliography at http://www.dbwilson.com / exact/. show that the two notions of monotonicity are equivalent if and only if the poset @xmath9 is acyclic ; see section  [ ss : poset ] herein for the definition of this term .",
    "we begin with a notion of acyclic poset , and its use in introducing a distribution function on such a poset .",
    "most of the basic poset terminology adopted here can be found in   or  , and most of the graph - theoretic terminology in  .",
    "let @xmath9 be a poset . for @xmath45",
    ", we say that @xmath46 _ covers _",
    "@xmath47 if @xmath48 in @xmath9 and no element @xmath49 of @xmath1 satisfies @xmath50 .",
    "we define the _ cover graph _ @xmath51 of @xmath9 to be the undirected graph with edge set @xmath52 consisting of those unordered pairs @xmath53 such that either @xmath47 covers @xmath46 or @xmath46 covers @xmath47 in @xmath9 .",
    "a poset @xmath9 is said to be _ acyclic _ when its cover graph @xmath51 is acyclic in the usual graph - theoretic sense ( i.e. , the graph has no cycle ) .    throughout the sequel",
    "we assume that the cover graph @xmath51 is acyclic and also connected , that is , that the graph @xmath51 is a tree .",
    "let @xmath54 be a fixed leaf of @xmath51 , that is , an element @xmath54 in @xmath1 such that there exists a unique edge @xmath55 in @xmath52 ( for some @xmath56 ) .",
    "then , declare @xmath57 for @xmath58 if the ( necessarily existent and unique ) path @xmath59 in the graph from @xmath54 to @xmath47 contains the path @xmath60 from @xmath54 to @xmath46 as a segment .",
    "this introduces a partial ordering @xmath61 on the ground set @xmath1 [ ] , which may be different from  @xmath62 for the original poset @xmath9 .",
    "we call this new poset @xmath63 a _ rooted tree _ ( rooted at @xmath54 ) .    for each @xmath64 , set @xmath65 then a linear extension @xmath66 of @xmath63 can be obtained by choosing a linear ordering on @xmath67 for every @xmath64 .",
    "explicitly , we define @xmath68 if either ( i ) @xmath57 , or ( ii ) there exist some @xmath56 and some @xmath69 such that @xmath70 , @xmath71 , and @xmath72 has been chosen to be smaller than @xmath73 in @xmath74 .",
    "see section  [ ss : example ] for an example .",
    "_ for a given probability measure @xmath34 on @xmath1 , we define the _ distribution function _",
    "@xmath75 of @xmath34 by @xmath76 and the _ distribution function @xmath77 of linear extension _ by @xmath78 _    in particular , when @xmath51 is a path from one end point @xmath54 to the other end point , the rooted tree @xmath63 is linearly ordered , and therefore @xmath79 .      for a given distribution function @xmath77 of linear extension on @xmath1",
    ", we define the _ inverse probability transform _ @xmath35 , a map from @xmath39 to @xmath1 , by @xmath80 where the minimum is given in terms of the linearly ordered set @xmath66 .",
    "when @xmath9 is linearly ordered , the two definitions of inverse probability transform in  ( [ inv ] ) and  ( [ g.inv ] ) are the same .",
    "this equivalence can be extended to the case that the cover graph @xmath51 is a path , because of the fact that then @xmath79 .",
    "moreover , the property of inverse probability transform discussed in section  [ intro : inv ] remains true in that case :    [ th : class.z ] let @xmath38 be a uniform random variable on @xmath39 .",
    "suppose that @xmath51 is a path .",
    "then , a stochastically monotone system @xmath26 is always realizably monotone via @xmath41 .",
    "theorem  [ th : class.z ] reiterates a result presented by , namely , theorem  6.1 in their paper .",
    "an acyclic poset @xmath9 is called a _ poset of class _  z if the cover graph @xmath51 is a path .",
    "otherwise , the acyclic ( connected ) poset @xmath9 has a multiple - element @xmath67 for some @xmath64 .",
    "an example in section  [ ss : example ] will demonstrate that theorem  [ th : class.z ] can fail when an acyclic poset @xmath9 is not in class  z. besides the result for class  z , fill and machida gave a complete answer to the monotonicity equivalence problem [ i.e. , the question whether monotonicity equivalence holds for given @xmath81 when there exists some @xmath64 such that ( i ) @xmath67 contains at least two elements , and ( ii ) @xmath47 is neither minimal nor maximal in @xmath9 , that is , when an acyclic poset @xmath9 falls into either _ class _  b or _ class _  y , in their terms . [ in their investigation , a construction of random variables with the desired properties  ( [ eq : rm.mono])([eq : rm.marg ] ) was reduced to application of strassen s characterization of stochastic ordering if monotonicity equivalence holds for @xmath33 with @xmath9 a poset either of class  b or of class  y. ] however , when @xmath9 is a poset satisfying the property that @xmath47 is either maximal or minimal in @xmath9 whenever @xmath67 contains at least two elements , which they ( and we ) call a _ poset of class _  w , we do not know a complete answer to the monotonicity equivalence problem .",
    "but for a poset  @xmath9 of class  w our generalization of inverse probability transform can , for some posets  @xmath25 , be used to establish monotonicity equivalence :    [ th : class.w ] let @xmath38 be a uniform random variable on @xmath39 .",
    "suppose that @xmath9 is a poset of class  w , and that @xmath25 is a poset having a minimum element and a maximum element .",
    "then , given a stochastically monotone system @xmath26 , there exists a system @xmath82 of @xmath38-invariant maps from @xmath39 to @xmath39 [ i.e. , @xmath83 such that @xmath84 realizes the monotonicity .",
    "we call the @xmath38-invariant maps @xmath85 in theorem  [ th : class.w ] _ synchronizing functions_. discussion about how we can practically construct the desired synchronizing functions can be found in",
    ".      consider the poset @xmath9 of class  w with the following hasse diagram : @xmath86 the downward arc from @xmath49 to @xmath46 , for example , indicates that @xmath49 covers @xmath46 in @xmath9 .",
    "then the rooted tree @xmath63 rooted at @xmath54 and the corresponding linear extension @xmath66 are given respectively by @xmath87 where we have chosen the linear ordering @xmath88 in @xmath89 and the linear ordering @xmath48 in @xmath74 .",
    "let @xmath16 and @xmath17 be the two probability measures on @xmath1 in the following table : @xmath90     and @xmath91,title=\"fig : \" ]   and @xmath91,title=\"fig : \" ]    we can easily check that @xmath18 .",
    "however , @xmath92 does not hold for all @xmath93 : for @xmath94 , @xmath95 is incomparable with @xmath96 , and again for @xmath97 , @xmath98 is incomparable with @xmath99 .",
    "figure  [ phi12.fig ] displays the synchronizing functions @xmath100 and @xmath91 , which are both @xmath38-invariant from @xmath39 to @xmath39 . then consider the map @xmath101 from @xmath39 to @xmath1 for @xmath102 and @xmath103 , as in figure  [ fphi12c.fig ] .",
    "it is clear from figure  [ fphi12c.fig ] that @xmath104 for all @xmath93 , as desired .",
    "given a poset @xmath9 of class  w , theorem  [ th : class.w ] implies that if @xmath25 is a poset having a minimum element and a maximum element , then monotonicity equivalence holds for @xmath33 .",
    "this section introduces without detail a further extension of monotonicity equivalence to a synchronizable poset  @xmath25 ( as defined below ) .",
    "let @xmath106 be the set of all the minimal elements in @xmath25 .",
    "then we define a graph @xmath107 on the vertex set @xmath106 by including @xmath108 as an edge in @xmath109 if @xmath110 and there exists some @xmath111 such that @xmath112 in @xmath25 .",
    "we define in analogous fashion a graph @xmath113 on the set @xmath114 of all the maximal elements in @xmath25 .",
    "we call these _ graphs of interlacing relation_. let @xmath115 be a spanning tree of @xmath107 , that is , let @xmath115 be a tree with @xmath116 .",
    "we will say that @xmath115 is a _ locally connected spanning tree _ of @xmath107 if for every @xmath117 , the subgraph of @xmath115 induced by @xmath118 is connected .",
    "finally , we call @xmath25 a _ synchronizable poset _ if there exist respective locally connected spanning trees of @xmath107 and of @xmath113 .            theorem  [ th : class.w.ext ] has shown that synchronizability of the poset @xmath25 is sufficient for monotonicity equivalence when @xmath9 is a poset of class  w. but the above example disproves the assertion that synchronizability is necessary for monotonicity equivalence .",
    "furthermore , let @xmath121 denote the class of all posets @xmath25 of monotonicity equivalence for @xmath9 .",
    "then we can also demonstrate [ cf .",
    "example  6.33 in  ] that @xmath121 is _ not _ the same for all posets @xmath9 of class  w. thus , the interesting question raised but not settled by the present paper is how to completely characterize posets @xmath25 of monotonicity equivalence given a poset @xmath9 of class  w , that is , to determine @xmath121 exactly for each poset @xmath9 of class  w.    * acknowledgments .",
    "* the second author carried out research leading to this paper while he was a doctoral student in the department of mathematical sciences at the johns hopkins university .",
    "we thank keith crank , alan goldman , leslie hall , and edward scheinerman for providing helpful comments ."
  ],
  "abstract_text": [
    "<S> a system @xmath0 of probability measures on a common state space @xmath1 indexed by another index set @xmath2 can be `` realized '' by a system @xmath3 of @xmath1-valued random variables on some probability space in such a way that each @xmath4 is distributed as @xmath5 . </S>",
    "<S> assuming that @xmath2 and @xmath1 are both partially ordered , we may ask when the system @xmath0 can be realized by a system @xmath3 with the monotonicity property that @xmath6 almost surely whenever @xmath7 . </S>",
    "<S> when such a realization is possible , we call the system @xmath0 `` realizably monotone . </S>",
    "<S> '' such a system necessarily is stochastically monotone , that is , satisfies @xmath8 in stochastic ordering whenever @xmath7 . in general , </S>",
    "<S> stochastic monotonicity is not sufficient for realizable monotonicity . </S>",
    "<S> however , for some particular choices of partial orderings in a finite state setting , these two notions of monotonicity are equivalent . </S>",
    "<S> we develop an inverse probability transform for a certain broad class of posets @xmath1 , and use it to explicitly construct a system @xmath3 realizing the monotonicity of a stochastically monotone system when the two notions of monotonicity are equivalent . </S>"
  ]
}
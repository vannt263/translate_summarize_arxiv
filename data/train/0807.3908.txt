{
  "article_text": [
    "the semantic web community has introduced a set of standards and protocols for representing , querying , and manipulating a distributed , directed labeled graph of web resources .",
    "the uniform resource identifier ( uri ) , as the foundation standard of the world wide web , provides the distributed address space for web resources . the resource description framework ( rdf ) , as the foundation standard of the semantic web , provides a data model for graphing web resources . in a local environment , uris can be minted and related to one another in a relatively straightforward manner .",
    "what becomes difficult is making the link from the uris of one environment to the uris of another .",
    "that is , the same _ thing _ can be given two unique uris and the cross repository linking of such uris is a difficult problem . with the world wide web ,",
    "the author of an html document is responsible for the linking of web resources and this can be managed in a straightforward manner as html documents maintain a relatively small set of links .",
    "however , on the semantic web , there is no human consumable free - text _ per se_. instead , every minutia of information is encoded as a statement ( or triple ) . the amount of resources and links can grow fast and thus is only maintainable , for the most part , by machines .",
    "the linked data community expends much effort ensuring that rdf repositories are linked appropriately such that what emerges is a global web of data that is rich in content and able to be traversed by both man and machine @xcite .",
    "however , traversing the semantic web is not quite the same as traversing the world wide web .",
    "for the human , it is reasonable to traverse from repository to repository exploring the semantic web in a manner similar to how the world wide web is traversed .",
    "however , for a machine , it is a different story .",
    "there will be orders of magnitude more resources and links on the semantic web .",
    "while a machine can crawl and pull the data to its local environment for processing , this becomes inefficient when the process data requirements must span large parts of the semantic web graph . for distributed graph computations , a more efficient mechanism would be to migrate the process between rdf repositories so that information is not pulled back to the local environment , but instead , processed where the data is maintained .",
    "in other words , an efficient mechanism for processing the semantic web graph would be to move the process to the data , not the data to the process .",
    "while the semantic web provides an infrastructure to support the distributed representation of a graph of resources , there currently does not exist a distributed process infrastructure for analyzing and manipulating this graph .",
    "for the world wide web , the search engine philosophy of  download and index \" has made it possible for end users to find information on the world wide web in a more efficient manner than by simply surfing and bookmarking . with modern commercial triple - stores scaling to the order of 10 billion triples , centralized indexing repositories will have to contend with not only the volume of data , but also the computational complexities of analyzing such a graph in a sophisticated way .",
    "the semantic web provides a much richer machine processable data structure than what is provided by html and thus , antiquated keyword search simply does not take significant advantage of what the semantic web is providing .",
    "labeled graph query languages such as sparql are one method of retrieving data from the semantic web , but like keyword search , this is not the end story .",
    "the future of the semantic web will be rife with algorithms from many schools of thoughts",
    ". many of these algorithms will compute across various repositories of the semantic web and will require a distributed turing complete infrastructure to do so .",
    "the notion of process migration for distributed computing is not new . for instance , the standards and technologies associated with grid computing are aimed at facilitating the distributed and shared use of computing resources @xcite .",
    "furthermore , the idea of a semantic grid has been proposed as an extension to the current grid infrastructure to support the semantic annotation of computing resources to aid in discovery , reuse , etc . @xcite .",
the semantic grid refers to an approach to grid computing in which information , computing resources and services are described using the semantic data modelthe distributed process infrastructure discussed in this essay is aimed primarily at supporting the exploitation of the semantic web data structure directly as a data structure , not to augment an existing distributed processing infrastructure with the standards of the semantic web .",
    "the web has provided a distributed address space that is infinite in size .",
    "it is possible to represent processes such they compute within this address space agnostic to the physical machines that support their execution .",
    "the idea of an rdf virtual machine ( rvm ) was introduced to facilitate this level of abstraction @xcite . with an rvm , the computing machine , the computing machine s software , and",
    "the data being processed are all represented in rdf and within the uri address space ( as well as the blank and literal space ) .",
    "some of the major consequences of the this computing model are    * an rvm has no reference to the underlying physical ( or virtual ) machine executing it * an rvm is constrained to the uri address space * an rvm only executes rdf encoded software * an rvm only processes rdf encoded data .",
    "a primary tenet of the rvm model is that rdf is the lowest level of representation and in being the lowest level of representation , rdf is used to model all aspects of computing .",
    "thus , rdf is used to define those data structures that are common in computing such as the lists , the sets , the arrays , the maps , the vectors , the stacks , the program counters , the heaps , the trees , the objects , the instructions  in general , the general - purpose modeling construct : the graph .",
    "thus , rdf is used not just for representing metadata , rdf is used for representing data . when all information is placed in the uri address space",
    ", computing is at a new level of abstraction .",
    "this level of abstraction is a shared memory space that is built on the existing web infrastructure .",
    "as more data sets are linked to the growing linked data web , there will exist algorithms that will be burdened by the  over the wire \" speeds of the internet . with the rvm model ,",
    "the rvm can compute regardless of the physical machine that is supporting its execution . in this way",
    ", an rvm can traverse the linked data set not by pulling data to a local environment , but by actually moving between machines and more specifically , moving to those machines that are maintaining the subgraph of the semantic web that is of interest to the algorithm at particular points in time .",
    "for every architecture , there are drawbacks . in the rvm model of computing ,",
    "the issues that are obvious are the issues of security , speed , and adoption . with respect to security",
    ", the migration of process requires an infrastructure to protect the semantic web and the physical machines that support its representation .",
    "it is important to ensure that poorly or maliciously written rdf code does not destroy the integrity of an rdf data set , does not abuse the computational resources of a publicly available physical machine , and only accesses those aspects of an rdf data set that it has permission to access .",
    "with respect to speed , the rvm model of distributed computing on the semantic web requires fast execution times .",
    "when multiple levels of computing are represented in the uri address space there does not exist a direct physical memory correlate and as such , computing is slower .    with respect to the adoption of the rvm model ,",
    "the model requires rdf data providers to support rvm  farms \" ( or open computing spaces ) for foreign processes to use for their execution .",
    "furthermore , the model relies on programming languages that are engineered for a pure uri address space and thus , requires the development of algorithms in these languages .",
    "initial solutions to the aforementioned issues have been previously discussed in @xcite .",
    "the next section provides a brief overview of the various rdf programming languages that exist .",
    "an rdf programming language is a language that is not only compiled into rdf , but also aimed at directly manipulating an rdf graph .",
    "rdf programming languages include :    * fabl : an object - oriented rdf programming language @xcite * adenosine : an rdf programming language * ripple : a functional , stack - based rdf programming language @xcite * neno / fhat : an object - oriented rdf programming language with rdf - encoded virtual machine .",
    "@xcite    these languages were designed to take explicit advantage of rdf as a data model . unlike rdf apis in other languages such as java ,",
    "c , etc . these languages do not require the developer to work with two different data models .",
    "that is , rdf apis in other languages require the developer to write in the constructs of the programming environment as well as in the constructs of rdf .",
    "with rdf programming languages , the constructs of the language are simply uris and rdf triples .",
    "there is no disjoint experience for the developer @xcite .",
    "rdf programming languages compile down to rdf and thus , can be accessed like any piece of data on the semantic web . furthermore",
    ", unique situations emerge when rdf code is represented across different physical server machines .",
    "because all rdf software is in the same uri address space , there is nothing that prevents the software , much like the data , to by physically distributed . with an rdf virtual machine executing compiled rdf code , it is possible for the virtual machine and the compiled code to be relocated by simply downloading the rdf subgraph to another environment .",
    "thus , instead of migrating large amounts of data to a local environment for processing , the rdf virtual machine and code can be migrated to the remote environment . in this way",
    ", the process is moved to the data , not the data to the process .",
    "the semantic web provides an infrastructure that supports an instantiation of a distributed graph of web resources .",
    "however , it lacks a distributed infrastructure for processing that graph . for the world wide web ,",
    "the solution to the issue of processing the vast amount of information has been to literally download the entire web and index and process it at a single local environment . while the content on the world wide web is distributed , the means by which the information on the web is analyzed",
    "the semantic web need not fall into this same model . with the nearly limitless ways in which a directed labeled graph ( an rdf graph ) can be searched and manipulated",
    ", it would be a disappointment if the information on the semantic web was left to centralized repositories to store , index , and provide query functionality .",
    "joshua shinavier read draft versions of this essay and after doing so , provided many useful comments ."
  ],
  "abstract_text": [
    "<S> the resource description framework ( rdf ) is continuing to grow outside the bounds of its initial function as a metadata framework and into the domain of general - purpose data modeling . </S>",
    "<S> this expansion has been facilitated by the continued increase in the capacity and speed of rdf database repositories known as triple - stores . </S>",
    "<S> high - end rdf triple - stores can hold and process on the order of 10 billion triples . in an effort to provide a seamless integration of the data contained in rdf repositories , the linked data community is providing specifications for linking rdf data sets into a universal distributed graph that can be traversed by both man and machine . </S>",
    "<S> while the seamless integration of rdf data sets is important , at the scale of the data sets that currently exist and will ultimately grow to become , the  download and index \" philosophy of the world wide web will not so easily map over to the semantic web . </S>",
    "<S> this essay discusses the importance of adding a distributed rdf process infrastructure to the current distributed rdf data structure .    </S>",
    "<S> = 1 </S>"
  ]
}
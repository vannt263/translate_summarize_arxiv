{
  "article_text": [
    "we study the one - to - many matching problem , also known as the hospitals / residents problem .",
    "formally , this is given by a set of residents @xmath2 and a set of hospitals @xmath3 , where every hospital @xmath4 has a capacity @xmath5 .",
    "every resident seeks to get matched to a hospital and every hospital @xmath4 seeks to get matched to @xmath8 residents .",
    "moreover , every resident @xmath9 has a strict ranking @xmath10 over hospitals that are acceptable to @xmath11 and every hospital @xmath4 has a strict ranking @xmath12 over residents that are acceptable to @xmath4 .",
    "the set of mutually acceptable pairs is given by @xmath13 .",
    "thus our input is a bipartite graph @xmath0 and the preferences of a vertex are expressed as an ordered list of its neighbors , e.g. , @xmath14 denotes the preference @xmath15 , i.e. , @xmath16 prefers @xmath17 to @xmath18 .",
    "a matching @xmath7 in @xmath19 is a subset of @xmath20 such that @xmath21 for each @xmath22 and @xmath23 for each @xmath24 , where @xmath25 .",
    ", we assume @xmath26 if @xmath27 , whenever suitable . ]    the goal is to compute an _",
    "optimal _ matching in @xmath6 .",
    "the usual definition of optimality in this setting has been _ stability _  @xcite .",
    "a matching @xmath7 in @xmath6 is said to be stable if there is no resident - hospital pair @xmath28 that `` blocks '' @xmath7 .",
    "we say a pair @xmath28 blocks @xmath7 if ( 1 )  either @xmath11 is unmatched in @xmath7 or @xmath11 prefers @xmath4 to @xmath29 and ( 2 )  either @xmath4 has less than @xmath8 partners in @xmath7 or @xmath4 prefers @xmath11 to its worst partner in @xmath30 .",
    "the gale - shapley algorithm can be easily generalized to find a stable matching in @xmath0 as was shown by gale and shapley  @xcite .",
    "since a stable matching is a maximal matching in @xmath6 , its size is at least @xmath31 , where @xmath32 is a max - size matching in @xmath6 .",
    "this bound can be tight as shown by the following simple example : let @xmath33 and @xmath34 where each hospital has capacity 1 and the edge set is @xmath35 @xmath36 .",
    "the preferences are shown in the table below . here",
    "the only stable matching ( red line ) is @xmath37 , which is of size @xmath38 .",
    "however , the max - size matching ( dashed lines ) is @xmath39 , which is of size @xmath40 .",
    "@xmath41    \\(r ) at ( 0,.5 ) ; ( r ) at ( 0,-.5 ) ;    \\(h ) at ( 3,.5 ) ; ( h ) at ( 3,-.5 ) ;    \\(r ) to ( h ) ; ( r ) to ( h ) ; ( r ) to ( h ) ;    it can be shown that all stable matchings have to match the same set of residents and every hospital gets matched to the same capacity in every stable matching .",
    "this is popularly called the `` rural hospitals theorem ''  @xcite .",
    "more precisely , roth  @xcite showed that not only is every hospital matched to the same number of residents in every stable matching , but moreover , every hospital that is not matched up to its capacity in some stable matching is actually matched to the same _ set of residents _ in any stable matching .",
    "thus the usual notion of stability is very restrictive .    from a social point of view",
    "it seems desirable to have a higher number of residents matched to hospitals in order to keep fewer residents unemployed and guarantee sufficient staffing for hospitals .",
    "the latter point particularly applies to rural hospitals that oftentimes face the problem of being understaffed with residents by the national resident matching program in the usa ( cf .",
    "a similar point could be made for matching workers to firms or students to seminar seats .",
    "this motivates relaxing the notion of `` absence of blocking edges '' to a weaker notion of stability so as to obtain matchings that are guaranteed to be significantly more than @xmath31 .",
    "note that we do not want to wish to ignore the preferences of vertices and impose a max - size matching on them as such a way of assigning partners will be socially undesirable as it does not take into account the preferences of vertices .",
    "thus we would like to use a notion of optimality that replaces the _ local _ stability notion of `` no blocking edges '' with a weaker notion that is democratic or _ globally _ stable and achieves more `` global good '' , i.e. , its size is always at least @xmath42 for some @xmath43 .",
    "* popularity .",
    "* popularity is such a notion .",
    "the notion of popularity was introduced by grdenfors  @xcite in the stable marriage problem , i.e. , the one - to - one setting ( each vertex has capacity 1 ) .",
    "popular matchings have been well - studied here  @xcite and we generalize them to the hospitals / residents setting now . in the one - to - one setting ,",
    "given any two matchings @xmath44 in @xmath6 and a vertex @xmath16 , we say @xmath16 prefers @xmath45 to @xmath46 if @xmath16 prefers @xmath47 to @xmath48 , where we say `` @xmath49 null '' if @xmath16 is left unmatched in matching @xmath50 , for @xmath51  note that the null option is the least preferred state for any vertex @xmath16 in a matching .",
    "we will use the function @xmath52 for any vertex @xmath16 and neighbors @xmath53 of @xmath16 that is defined as follows : @xmath52 is 1 if @xmath16 prefers @xmath17 to @xmath18 , it is @xmath54 if @xmath16 prefers @xmath18 to @xmath17 , else it is 0 ( i.e. , @xmath55 ) .",
    "for any two matchings @xmath44 in @xmath6 and a resident @xmath11 , we define @xmath56 @xmath57 where as before , we adopt the convention that `` @xmath58 null '' for a resident @xmath11 left unmatched in @xmath50 , for @xmath59 .",
    "we would now like to define @xmath60 for a hospital @xmath4 .",
    "if @xmath4 is not matched up to its capacity in @xmath50 , we will say `` @xmath61 null '' with multiplicity equal to @xmath62 and the null state is the least preferred state for @xmath4 .",
    "* voting by hospitals .",
    "* when we compare the preference of a hospital @xmath4 with @xmath63 for @xmath64 versus @xmath65 ( where @xmath66 is the @xmath67-th ranked resident in @xmath4 s preference list ) , we would like @xmath4 s vote to capture the fact that @xmath4 is better - off by _ 3 residents _ in @xmath68 when compared to @xmath69 .",
    "so while comparing one matching versus another , we allow a hospital to cast more than one vote .",
    "let @xmath4 be any hospital and let @xmath70 be any subsets of the set of @xmath4 s neighbors where we add some occurrences of `` null '' to make @xmath70 sets of size @xmath8 .",
    "we will view the sets @xmath71 and @xmath72 as arrays @xmath73,\\ldots , s'_i[k]\\rangle$ ] ( for @xmath51 ) , where @xmath74 .",
    "the preference of hospital @xmath4 for @xmath68 versus @xmath69 , denoted by @xmath75 , is defined as follows : @xmath76}\\sum_{i = 1}^k { \\mathsf{vote}}_h(s'_0[i],s'_1[\\sigma(i)]),\\ ] ] where @xmath77 $ ] is the set of permutations on @xmath78 .",
    "let @xmath79 .",
    "so @xmath60 counts the number of votes by @xmath4 for @xmath80 versus @xmath81 when the sets @xmath82 and @xmath83 are being compared in the order that is most adversarial or _ negative _ for @xmath45 .",
    "that is , this order @xmath84 $ ] of comparison between elements of @xmath85 and @xmath86 gives the least value for @xmath87 , where @xmath88 is the number of indices @xmath67 such that @xmath89 \\succ_h s'_1[\\sigma(i)]$ ] and @xmath90 is the number of indices @xmath67 such that @xmath89 \\prec_h s'_1[\\sigma(i)]$ ] .",
    "for instance , when a hospital @xmath4 with @xmath63 compares two subsets @xmath91 and @xmath92 ( where @xmath66 is the @xmath67-th ranked resident in @xmath4 s preference list ) , we have @xmath93 since comparing the following pairs results in the least value of @xmath75 : this pairing is ( @xmath94 with @xmath95 ) , ( @xmath96 with @xmath97 ) , ( @xmath98 with @xmath99 ) .",
    "this makes @xmath100 . while computing @xmath101 , the pairing would be ( @xmath97 with @xmath94 ) , ( @xmath99 with @xmath96 ) , ( @xmath95 with @xmath98 ) : then @xmath102 .    for any two matchings @xmath45 and @xmath46 in @xmath6 , we compare them using the function @xmath103 defined below .",
    "we say @xmath45 is at least as popular as @xmath46 if @xmath105 and @xmath45 is more popular than @xmath46 if @xmath106 .",
    "if @xmath105 then for every hospital @xmath4 in @xmath3 : _ no matter in which order _ the elements of @xmath82 and @xmath83 are compared against each other by @xmath4 in the evaluation of @xmath60  when we sum up the total number of votes cast by all hospitals and residents , the votes for @xmath46 can _ never _ outnumber the votes for @xmath45 .",
    "[ def : pop - match ] @xmath45 is a popular matching in @xmath107 if @xmath105 for all matchings @xmath46 in @xmath6 .",
    "thus for a matching @xmath45 to be popular , it means that @xmath45 is at least as popular as every matching in @xmath6 , i.e. , there is no matching @xmath46 such that @xmath108 . if there exists a matching @xmath46 such that @xmath108 then this is taken as a certificate of _ unpopularity _ of @xmath45 .",
    "it is not obvious whether popular matchings always exist in @xmath6 .",
    "our definition of popularity may seem too strict and restrictive since for each hospital @xmath4 , we choose the most negative or adversarial ordering for @xmath109 versus @xmath110 while calculating @xmath60",
    ". a more relaxed definition may be to order the sets @xmath82 and @xmath83 in increasing order of preference of @xmath4 and take @xmath111,\\,s'_1[i])$ ] as @xmath4 s vote .",
    "an even more relaxed definition may be to choose the most favorable or _ positive _ ordering for @xmath85 versus @xmath86 while calculating @xmath60 .",
    "[ def : weakly - pop ] call a matching @xmath45 _ weakly popular _ if @xmath112 for all matchings @xmath46 in @xmath6 .",
    "thus @xmath45 is a weakly popular matching if the sum of votes for @xmath45 is at least the sum of votes for any matching @xmath46 when each hospital @xmath4 compares @xmath109 versus @xmath110 in the ordering that is most favorable for @xmath45 .",
    "thus `` weak popularity '' is a more relaxed notion than `` popularity '' and a max - size weakly popular matching could presumably be larger than a max - size popular matching .",
    "* our results .",
    "* we will show that every stable matching in @xmath0 is popular , thus our definition of popularity is a relaxation of stability .",
    "this also shows that popular matchings always exist .",
    "we will present a simple linear time algorithm for computing a max - size popular matching @xmath45 in @xmath6 and show that @xmath113 .",
    "we also show that @xmath45 is more popular than every _",
    "larger _ matching , i.e. , @xmath106 for any matching @xmath46 that is larger than @xmath45 .",
    "thus @xmath45 is also a _ max - size weakly popular matching _ in @xmath6 as no matching @xmath46 larger than @xmath45 can be weakly popular due to the fact that @xmath106 .",
    "akin to the rural hospitals theorem , we show that all max - size popular matchings have to match the same set of residents and every hospital gets matched to the same capacity in every max - size popular matching .",
    "however every hospital that is not matched up to its capacity in some max - size popular matching does _ not _ need to be matched to the same set of residents in any max - size popular matching , which is in contrast to stable matchings @xcite .",
    "* techniques . *",
    "our algorithm is an adaptation of the 2-level gale - shapley algorithm from @xcite that finds a max - size popular matching in a stable marriage instance .",
    "our main contribution here is to show that this algorithm computes a max - size popular matching in the hospitals / residents setting as well .",
    "while the analysis of the 2-level gale - shapley algorithm in @xcite is based on a structural characterization of popular matchings ( from @xcite ) on forbidden alternating paths and alternating cycles , we will use linear programming to show the correctness of this algorithm here .",
    "our linear programming techniques are based on a linear program that was used in @xcite to find a popular fractional matching in a bipartite graph with _ 1-sided preference lists_. the popular fractional matching polytope shown in @xcite was also used in @xcite to show the popularity of some half - integral matchings in the stable marriage problem .",
    "we do not design a popular fractional matching polytope for the hospitals / residents problem  instead we focus on the matching @xmath45 obtained via the 2-level gale - shapley algorithm and use linear programming on a certain weighted graph @xmath114 that we build here .",
    "* background and related work . * the first algorithmic question studied in popular matchings was in the domain of 1-sided preference lists  @xcite where it is only vertices on the left , who are _ agents _ , that have preferences ; the vertices on the right are _ objects _ and they have no preferences .",
    "popular matchings need not always exist here , however fractional matchings that are popular always exist and can be computed in polynomial time via linear programming  @xcite .",
    "popular matchings always exist in any instance of the stable marriage problem with strict preference lists since every stable matching is popular  @xcite .",
    "efficient algorithms to find a max - size popular matching in a stable marriage instance are known  @xcite and a subclass of max - size popular matchings called _ dominant matchings _ was studied in @xcite . while a max - size popular matching can be easily computed here , there is no polynomial time algorithm currently known for computing a min - cost popular matching when there is a cost function on the edge set .",
    "a polynomial time algorithm was shown in @xcite to find a min - cost popular _ half - integral _ matching .",
    "when preference lists admit ties , the problem of determining if the given instance admits a popular matching or not is np - hard  @xcite .",
    "the stable matching problem in a marriage instance has been extensively studied  we refer to the books  @xcite on this topic .",
    "the problem of computing stable matchings or its variants in the hospitals / residents setting is also well - studied  @xcite . the stable matching algorithm in the hospitals",
    "/ residents problem has several real - world applications  it is used to match residents to hospitals in canada  @xcite and in the usa  @xcite .",
    "in this section we describe the `` 2-level gale - shapley algorithm '' ( earlier used in @xcite ) to compute a max - size popular matching in @xmath107 .",
    "this algorithm works in the graph @xmath115 defined as follows : @xmath116 consists of two copies @xmath117 and @xmath94 of every resident @xmath11 in @xmath2 , i.e. , @xmath118 .",
    "the set @xmath3 of hospitals in @xmath119 is the same as in @xmath6 and the edge set here is @xmath120 .",
    "the preference list of @xmath66 ( for @xmath51 ) is exactly the same as the preference list of @xmath11 .",
    "the elements in the set @xmath121 will be called _ level  @xmath67 _ residents , for @xmath51 .",
    "every @xmath24 prefers any level  1 neighbor to a level  0 neighbor : within the set of level  @xmath67 neighbors ( for @xmath122 ) , @xmath4 s preference order is the same as its original preference order .",
    "for instance , if a hospital @xmath4 has only 2 neighbors @xmath11 and @xmath123 in @xmath6 where @xmath124 , the preference order of @xmath4 in @xmath119 is : @xmath125 .    at any point in time",
    ", only one of @xmath117 and @xmath94 will be _ active _ in our algorithm . to begin with ,",
    "all level  0 residents are active in our algorithm and all level  1 residents are inactive .",
    "we keep a queue @xmath126 of all the active residents and they propose as in gale - shapley algorithm :    * every active unmatched resident @xmath66 who has neighbors in @xmath119 proposes to its most preferred neighbor in @xmath119 * in case @xmath117 has no neighbors in @xmath119 , then @xmath117 becomes inactive and @xmath94 becomes active and it joins the queue @xmath126 .",
    "_ input : @xmath127 ;  output : a matching @xmath7 in @xmath119_[alg : max - size ]       when a hospital @xmath4 receives a proposal from @xmath66 , the hospital @xmath4 accepts this offer .",
    "if @xmath4 is now matched to more than @xmath8 partners then @xmath4 rejects its worst partner @xmath128 in the current matching and so @xmath128 will have to find a new partner now and it joins @xmath126 .",
    "if @xmath4 is now matched to @xmath8 partners then we delete all edges @xmath129 from @xmath119 where @xmath130 is a neighbor in @xmath119 that is ranked worse than @xmath4 s worst partner in the current matching ",
    "so no such resident @xmath130 can propose to @xmath4 later on in the algorithm .",
    "once @xmath126 becomes empty , the algorithm terminates . a description of our algorithm is given as algorithm  [ alg : max - size ] .",
    "let @xmath7 be the matching returned by this algorithm and let @xmath45 be the matching in @xmath6 that is obtained by projecting @xmath7 to the edge set of @xmath6 , i.e. , @xmath131 for every edge @xmath132 in @xmath7 , where @xmath133 .",
    "we will prove that @xmath45 is a max - size popular matching in section  [ sec : analysis ] .",
    "in this section we show a sufficient condition for a matching @xmath134 in @xmath6 to be popular .",
    "this is shown via a graph called @xmath135 : this is a bipartite graph constructed using @xmath134 such that @xmath134 gets mapped to a _ simple matching _",
    "@xmath136 in @xmath135 , i.e. , @xmath137 for all vertices @xmath16 in @xmath135 .",
    "the vertex set of @xmath135 includes @xmath138 where @xmath139 .",
    "that is , for each hospital @xmath4 , there are @xmath8 many copies of @xmath4 in @xmath140 . for each edge",
    "@xmath28 in @xmath6 such that @xmath141 , we will arbitrarily choose a distinct @xmath142 and call @xmath143 .",
    "if @xmath4 was not fully matched in @xmath134 , i.e. , it has less than @xmath8 many partners in @xmath134 , then some @xmath144 s will be left unmatched in @xmath136 .    * for each edge @xmath28 in @xmath6 such that @xmath145 , we will have edges @xmath146 in @xmath135 , for @xmath147 .",
    "* for each edge @xmath28 in @xmath6 such that @xmath141 , we will have the edge @xmath148 in @xmath135 where @xmath143 .",
    "thus for any edge @xmath149 , there are @xmath8 many copies of @xmath150 in @xmath119 : these are @xmath146 for @xmath147 . however for any edge @xmath151 , there is only _",
    "one _ edge @xmath148 in @xmath135 where @xmath143 , in other words , for @xmath152 , the resident @xmath11 is not adjacent to hospital @xmath144 in @xmath135 .",
    "there are also some new vertices called `` last resort neighbors '' in @xmath135 : for any @xmath153 , there is one such vertex @xmath154 and every vertex @xmath16 ranks @xmath154 at the bottom of its preference list .",
    "the purpose of the vertex @xmath154 is to capture the state of @xmath16 being left unmatched in any matching so that every matching in @xmath6 gets mapped to an _",
    "@xmath157-complete matching _ in @xmath135 , i.e. , one that matches all vertices in @xmath138 .",
    "we will use these last resort neighbors to obtain an @xmath157-complete matching @xmath158 from @xmath136 .",
    "@xmath159 thus every resident @xmath11 unmatched in @xmath134 gets matched to @xmath160 in @xmath158 and if a hospital @xmath4 was not fully matched in @xmath134 , then some @xmath144 s will be matched to their last resort neighbors in @xmath158 .",
    "we now define edge weights in @xmath135 .    * for any edge @xmath161 : the weight of edge @xmath150 is @xmath162 .",
    "note that for each edge @xmath163 , we have @xmath164 and @xmath165 if and only if @xmath150 blocks @xmath134 . * for any edge @xmath166 : the weight of edge @xmath150 is @xmath167 .",
    "thus @xmath168 if @xmath16 was matched in @xmath136 and @xmath169 otherwise ( in which case @xmath170 )",
    ".    observe that every edge @xmath171 satisfies @xmath172 .",
    "thus the weight of the matching @xmath158 in @xmath135 is 0 .",
    "we will show in theorem  [ main - thm ] that if _ every _ @xmath157-complete matching in the graph @xmath135 has weight at most 0 , then @xmath134 is a popular matching in @xmath6 .",
    "we will show later that the matching @xmath45 obtained from our algorithm satisfies this condition .",
    "suppose not .",
    "that is , let @xmath134 be an _ unpopular _ matching in @xmath6 .",
    "so there exists a matching @xmath173 in @xmath6 such that @xmath174 .",
    "we will show a realization @xmath175 of @xmath173 in @xmath135 such that @xmath175 is an @xmath157-complete matching .",
    "that is , each edge @xmath176 for some @xmath177 such that @xmath178 is in @xmath135 and @xmath175 will also have some appropriate @xmath155 edges .",
    "* for every edge @xmath179 do : set @xmath180 ; thus if @xmath181 then @xmath148 belongs to @xmath175 as well .",
    "* for every @xmath11 that is matched in @xmath173 and @xmath182 , we have to decide the index @xmath177 such that @xmath183 where @xmath184 . in the evaluation of @xmath185 , while comparing the sets @xmath186 and @xmath187 : * * let @xmath188 be the resident that @xmath4 compares @xmath11 with .",
    "so the matching @xmath158 contains the edge @xmath189 for some @xmath190 .",
    "set @xmath191 .",
    "* * if @xmath11 is compared with `` null '' by @xmath4 ( so @xmath4 is not fully matched in @xmath134 ) , then we set @xmath191 for some @xmath190 such that @xmath192 and @xmath193 is unmatched so far in @xmath175 . * for any vertex @xmath156 that is left unmatched in steps  ( i)-(ii ) above , set @xmath194 .",
    "we have @xmath198 from the definition of edge weights in @xmath135 . by grouping together for each @xmath4 , the edges @xmath146 for all @xmath199 and any possible @xmath200 edges",
    ", we get the right side of eqn .  .",
    "crucially , eqn",
    ".   follows from how we constructed the matching @xmath175 : for each hospital @xmath4 , we have @xmath201 and so @xmath202 .",
    "the total sum of all the terms @xmath203 for @xmath204 is @xmath205 .",
    "since @xmath174 , it follows that the weight of @xmath175 is positive .",
    "thus there is a matching with positive weight in @xmath135 that matches all vertices in @xmath138 .",
    "this contradicts the fact that every @xmath157-complete matching in @xmath135 has weight at most 0 .",
    "hence @xmath134 is a popular matching .",
    "let @xmath206 be any stable matching in @xmath6 .",
    "consider the graph @xmath207 : since @xmath206 has no blocking edge in @xmath6 , it follows that every edge @xmath150 in @xmath207 satisfies @xmath208 .",
    "thus every matching in @xmath207 has weight at most 0 and so by theorem  [ main - thm ] , we can conclude that @xmath206 is popular .",
    "we will now use theorem  [ main - thm ] to prove the popularity of the matching @xmath45 computed in section  [ sec : hosp - res - algo ] .",
    "we will construct the matchings @xmath209 and the graph @xmath114 corresponding to the matching @xmath45 as described in the early part of section  [ sec : analysis ] .",
    "our goal is to show that every @xmath157-complete matching in @xmath114 has weight at most 0 .",
    "note that the matching @xmath210 has weight 0 in @xmath114 .    in order",
    "prove that every @xmath157-complete matching in the graph @xmath114 has weight at most 0 , we will partition the set @xmath2 into @xmath211 and the set @xmath140 into @xmath212 as follows .",
    "initially @xmath213 .",
    "for each edge @xmath214 do :      recall that @xmath221 is the matching in the graph @xmath119 obtained at the end of the 2-level gale - shapley algorithm ( see algorithm  [ alg : max - size ] ) and the projection of @xmath7 on to @xmath222 is @xmath45 .",
    "the definition of the sets @xmath223 implies that @xmath224 . also add residents unmatched in @xmath225 to @xmath219 and hospitals unmatched in @xmath225 to @xmath217 .",
    "thus we have @xmath226 and @xmath227 ( see fig .  [ fig0:label ] ) .          theorem  [ thm : max - pop ] will show that the matching @xmath45 satisfies the condition of theorem  [ main - thm ] and this will imply that @xmath45 is a popular matching in @xmath6 .",
    "this proof is inspired by the proof in @xcite that shows the membership of certain half - integral matchings in the popular fractional matching polytope of a stable marriage instance .",
    "let our primal lp be the max - weight @xmath157-complete matching problem in @xmath114 .",
    "we want to show that the primal optimal value is at most 0 .",
    "we will do this by showing a dual feasible solution with value 0 .",
    "the primal lp is the following : @xmath228 where @xmath229 is the set of edges incident on @xmath16 in @xmath114 .",
    "consider the following assignment of @xmath230-values for all @xmath156 : set @xmath232 for all @xmath16 unmatched in @xmath233 ( each such vertex is in @xmath234 ) and for the matched vertices @xmath16 in @xmath233 , we set @xmath230-values as follows : @xmath235 if @xmath236 and @xmath237 if @xmath238",
    ".    observe that inequality   holds for all vertices @xmath156 .",
    "this is because @xmath239 for all @xmath16 unmatched in @xmath233 ; similarly , for all @xmath16 matched in @xmath233 we have @xmath240 . in order to show inequality",
    ", we will use claim  [ lem : g - m - edges ] stated below ( its proof is given after the proof of theorem  [ thm : max - pop ] ) .",
    "* claim  [ lem : g - m - edges ]  ( i ) states that for every edge @xmath245 in @xmath114 , we have @xmath246 . since @xmath247 for all @xmath248 , inequality   holds for all edges of @xmath114 in @xmath249 .",
    "* claim  [ lem : g - m - edges ]  ( ii ) states that for every edge @xmath146 in @xmath250 , we have @xmath251 . since @xmath252 for all @xmath253 ( for @xmath254 ) , inequality   holds for all edges of @xmath114 in @xmath250 .    since @xmath255 for all edges @xmath150 in @xmath114 and we set @xmath235 for all vertices @xmath236",
    ", inequality   is satisfied for all edges of @xmath114 in @xmath256 .",
    "thus inequality   holds for all edges @xmath146 in @xmath114 and so these @xmath230-values are dual feasible .    for every edge @xmath257 , we have @xmath258 and @xmath232 for vertices @xmath16 unmatched in @xmath233 .",
    "hence it follows that @xmath259 .",
    "so by weak duality , the primal optimal is at most 0 .",
    "in other words , every matching in @xmath114 that matches all vertices in @xmath138 has weight at most 0 .",
    "* proof of claim  [ lem : g - m - edges ] .",
    "* consider any edge @xmath241 in @xmath114 .",
    "note that the matching @xmath45 does not contain the edge @xmath28  if it did , then @xmath114 would have only one copy of this edge , say @xmath148 , which being an edge of @xmath233 has to be in either @xmath260 or @xmath261 whereas we are given that @xmath241 .",
    "the resident @xmath262 , i.e. , @xmath94 got activated in our algorithm and recall that every hospital prefers level  1 neighbors to level  0 neighbors in our algorithm .",
    "so if @xmath94 had proposed to @xmath4 , then this offer would have been accepted since @xmath4 had at least one partner who was a level  0 resident ( since @xmath263 ) .",
    "thus @xmath94 must have been accepted by a neighbor that @xmath11 prefers to @xmath4 .",
    "hence @xmath11 prefers its partner in @xmath45 to @xmath4 , so @xmath264 .",
    "the resident @xmath117 was rejected by all its neighbors ( including @xmath4 ) and became inactive .",
    "when @xmath4 rejected @xmath117 , the hospital @xmath4 was matched to @xmath8 neighbors , each of which was preferred by @xmath4 to @xmath117 .",
    "thereafter , @xmath4 may have received ( and accepted ) better offers from its neighbors and since @xmath263 , the hospital @xmath4 never received enough offers from level  1 neighbors to have all its partners as level  1 residents .",
    "in particular , @xmath144 is matched to a level  0 neighbor that is preferred to @xmath117 .",
    "thus @xmath144 prefers its neighbor in @xmath233 to @xmath11 , so @xmath265 .",
    "so it follows that @xmath246 .",
    "we will now show part  ( ii ) of this lemma . in our algorithm , the preference order of each hospital @xmath4 ,",
    "when restricted to level  0 neighbors , is its original preference order and similarly , its preference order when restricted to level  1 neighbors , is its original preference order .",
    "thus for each edge @xmath146 in @xmath114 where @xmath243 , either ( 1 )  @xmath144 prefers its partner in @xmath233 to @xmath11 or vice - versa or ( 2 )  @xmath257 . in both cases , we have @xmath251 .",
    "we need to show that @xmath45 is a max - size popular matching in @xmath6 and we now show that this follows quite easily from the proof of theorem  [ thm : max - pop ] .",
    "let @xmath173 be any matching in @xmath6 .",
    "we can obtain a realization @xmath175 of the matching @xmath173 in @xmath114 that is absolutely analogous to how it was done in steps  ( i)(iii ) in the proof of theorem  [ main - thm ] .",
    "thus @xmath175 is an @xmath157-complete matching in @xmath114 and @xmath266 .    we know from theorem  [ thm : max - pop ]",
    "that @xmath267 .",
    "suppose @xmath173 is a popular matching in @xmath6 .",
    "then @xmath268 has to be @xmath269 , otherwise the popularity of @xmath173 is contradicted since @xmath270 implies that @xmath271 ( because @xmath266 ) .",
    "so if @xmath173 is a popular matching in @xmath6 , then @xmath175 is an optimal solution to the maximum weight @xmath272)-complete matching problem in @xmath114 .",
    "recall that this is the primal lp in the proof of theorem  [ thm : max - pop ] .",
    "we will use complementary slackness to prove the following lemma .      consider the @xmath275-values assigned to vertices in @xmath138 in the proof of theorem  [ thm : max - pop ] .",
    "this is an _ optimal dual _ solution since its value is 0 which is the value of the optimal primal solution .",
    "thus complementary slackness conditions have to hold for each edge in the optimal solution @xmath276 to the primal lp .",
    "that is , for each edge @xmath277 , we have : @xmath278    let @xmath156 be a vertex such that @xmath273 , so @xmath232 . if @xmath16 is a resident , then @xmath279 ; observe that all of @xmath16 s neighbors are in @xmath220",
    " otherwise @xmath16 would propose to its neighbor in @xmath217 who would accept its offer since any level  1 resident is preferred to its current partner ( who is a level  0 resident ) .",
    "similarly , if @xmath16 is a hospital , then @xmath280 and all its neighbors are in @xmath216 ; otherwise @xmath16 would be adjacent to some resident @xmath281 and @xmath16 ( being unmatched ) would have accepted @xmath282 s proposal and @xmath283 would never have been activated in the 2-level gale - shapley algorithm .    in both cases every edge @xmath284 that is incident on @xmath16 in @xmath114 is _ slack _ because @xmath285 : thus @xmath232 and @xmath286 while @xmath287 .",
    "thus it follows from equation  ( [ eqn : new ] ) that @xmath288 for @xmath289 .",
    "since @xmath175 is @xmath157-complete , it follows that @xmath274 .",
    "now it is immediate to see that @xmath45 is a max - size popular matching in @xmath6 .",
    "let @xmath173 be any popular matching in @xmath6 .",
    "consider the matching @xmath290 .",
    "lemma  [ lem : new - max - size ] implies that @xmath291 because every vertex @xmath16 left unmatched in @xmath233 has to be left unmatched in @xmath292 also . since @xmath293 and @xmath294",
    ", we have @xmath295 .",
    "as this holds for any popular matching @xmath173 in @xmath6 , we can conclude that @xmath45 is a max - size popular matching in @xmath6 .",
    "it is known that the gale - shapley algorithm for the hospitals / residents problem can be implemented to run in linear time  @xcite .",
    "hence the 2-level gale - shapley algorithm also runs in linear time and we can conclude the following theorem .",
    "lemma  [ lem : max - size ] below shows that any matching @xmath173 larger than @xmath45 can not be weakly popular ( see definition  [ def : weakly - pop ] ) as @xmath271 for such a matching .",
    "this implies that @xmath45 is also a max - size weakly popular matching in @xmath6 .",
    "if @xmath173 is a larger matching than @xmath45 , then some vertices left unmatched in @xmath45 have to be matched in @xmath173 .",
    "thus for some @xmath156 such that @xmath297 , the matching @xmath175 contains an edge @xmath298 where @xmath289 . thus @xmath175 contains a _ slack _",
    "edge @xmath284 since @xmath232 , @xmath286 while @xmath299 ( see the proof of lemma  [ lem : new - max - size ] ) .",
    "it now follows from equation  ( [ eqn : new ] ) that @xmath175 can not be an optimal solution to the maximum weight @xmath272)-complete matching problem in @xmath114 .",
    "thus @xmath270 , in other words , @xmath271 since @xmath266 .",
    "_ the above result implies that the following interesting property : for any definition of popularity that is `` in between '' popularity and weak popularity , the size of a max - size popular matching is the same . to formalize the meaning of `` in between '' , consider the two relations on assignments @xmath300 and @xmath301 , where @xmath302 if @xmath303 and @xmath304 if @xmath305 , induced by popularity and weak popularity , respectively .",
    "clearly , @xmath306 .",
    "note that popular matchings and weakly popular matchings correspond to maximal elements of @xmath300 and @xmath301 , respectively . is a maximal element of a relation @xmath307 if for all elements @xmath46 we have : @xmath308 implies @xmath309 . ] our result that @xmath45 is also a max - size maximal element of @xmath301 implies that if @xmath307 is a relation on matchings ( induced by an alternative notion of popularity ) such that @xmath310 , then @xmath45 is also a max - size maximal element of @xmath307 . hence we can conclude the following proposition which even allows for different hospitals to compare sets of residents in different ways .        the rural hospitals theorem for stable matchings  @xcite does not necessarily hold for max - size popular matchings .",
    "that is , a hospital that is not matched up to capacity in some max - size popular matching is not necessarily matched to the same set of residents in every max - size popular matching .",
    "consider the instance @xmath19 with @xmath33 and @xmath311 and @xmath312 and @xmath313 .",
    "the edge set is @xmath314 .",
    "the preferences are shown in the table below .",
    "the ( max - size ) popular matchings are @xmath315 ( in black ) and @xmath316 ( in red ) .",
    "so @xmath317 is matched to a different resident in the two max - size popular matchings @xmath7 and @xmath318 .",
    "note that @xmath318 is not stable , as @xmath28 is a blocking pair .",
    "however lemma  [ lem : rural - hosp ] holds here . such a result for max - size popular matchings in the one - to - one setting",
    "was shown in @xcite .",
    "our proof is based on linear programming and is different from the combinatorial proof in @xcite .",
    "[ lem : rural - hosp ] let @xmath173 be a max - size popular matching in @xmath6",
    ". then @xmath173 matches the same residents as @xmath45 and moreover , every hospital @xmath4 is matched in @xmath173 to the same capacity as it gets matched to in @xmath45 .",
    "consider the realization @xmath175 of @xmath173 such that @xmath175 is an @xmath157-complete matching in @xmath114 and @xmath266 . since @xmath173 is popular , we know that @xmath175 has to include all the edges @xmath155 for vertices @xmath16 left unmatched in @xmath233 ( by lemma  [ lem : new - max - size ] ) .",
    "let @xmath290 .",
    "every vertex in @xmath114 that is unmatched in @xmath233 is left unmatched in @xmath292 also .",
    "we also have @xmath319 as both @xmath45 and @xmath173 are max - size popular matchings in @xmath6 .",
    "hence @xmath292 and @xmath233 match the same vertices in @xmath114 , i.e. , @xmath173 matches the same residents as @xmath45 and every hospital @xmath4 is matched in @xmath173 to the same capacity as it gets matched to in @xmath45 .",
    "we show a non - trivial lower bound on the size of a max - size popular matching in @xmath6 in lemma  [ lem : size - s ] .",
    "this proof is based on an analogous proof in @xcite which shows such a result in the one - to - one setting .",
    "the size of the matching @xmath45 is exactly the same as @xmath233 .",
    "consider the graph @xmath114 without last resort neighbors ( call this graph @xmath322 )  we will show that every augmenting path with respect to @xmath225 here has length at least 5 .",
    "this will immediately imply that @xmath323 where @xmath324 is the size of the max - size matching in @xmath322 . the value @xmath325",
    "since corresponding to any matching @xmath173 in @xmath6 , we have a matching @xmath292 in @xmath322 such that @xmath293 .",
    "thus the size of a largest matching in @xmath322 is at least @xmath326 and so we get @xmath327 .",
    "consider any augmenting path @xmath328 with respect to @xmath233 in the graph @xmath322 ( see fig .",
    "[ fig3:label ] )  let the endpoints of @xmath328 be @xmath11 and @xmath144 . since these vertices are left unmatched in @xmath233 , it follows that @xmath262 and @xmath263 .",
    "as seen in the proof of lemma  [ lem : new - max - size ] , the vertex @xmath94 is adjacent only to vertices in @xmath220 in the graph @xmath322 and the unmatched vertex @xmath144 is adjacent only to vertices in @xmath216 in the graph @xmath322 .",
    "every vertex in @xmath216 is matched in @xmath45 to a neighbor in @xmath217 and every vertex in @xmath220 is matched in @xmath45 to a neighbor in @xmath219 .",
    "thus the shortest augmenting path with respect to @xmath233 has the following structure with respect to the sets in @xmath329 that its vertices belong to : @xmath219-@xmath220-@xmath219-@xmath217-@xmath216-@xmath217 , i.e. , its length is at least 5 .",
    "lemma  [ lem : min - size ] below states that a stable matching is a _ min - size _ popular matching in @xmath6 .",
    "such a result in the one - to - one setting was shown in @xcite and our proof is inspired by their proof .",
    "in fact , the proof of lemma  [ lem : min - size ] will show that a stable matching is a _ min - size weakly popular matching _ in @xmath6 .",
    "let @xmath173 be a matching in @xmath6 such that @xmath330 .",
    "consider a realization @xmath175 of the matching @xmath173 in the graph @xmath207 as described in the proof of theorem  [ main - thm ] such that @xmath175 is @xmath157-complete and @xmath331 . recall that @xmath206 is a stable matching in @xmath6",
    " hence for each edge @xmath150 in @xmath207 , we have @xmath208 .",
    "moreover , because @xmath330 , there is a resident @xmath11 that is matched to a genuine neighbor in @xmath206 , however @xmath175 contains the edge @xmath332 .",
    "we have @xmath333 .",
    "thus @xmath334 .",
    "in other words , @xmath335 and @xmath173 is unpopular .",
    "since @xmath206 is a popular matching in @xmath6 , it means that @xmath206 is a min - size popular matching in @xmath6 .",
    "we would like to remark that the 2-level gale - shapley algorithm and our analysis extend to the _ many - to - many _ setting as well . here",
    "every vertex @xmath16 in the instance @xmath336 has a capacity @xmath337 associated with it and seeks @xmath338 many partners in a matching .",
    "thus a max - size popular matching in such an instance can also be computed in linear time .",
    "_ acknowledgments . _",
    "the first author wishes to thank larry samuelson for comments on the motivation for popular matchings .",
    "the second author wishes to thank david manlove and bruno escoffier for asking her about popular matchings in the hospitals / residents problem ."
  ],
  "abstract_text": [
    "<S> our input is a bipartite graph @xmath0 where each vertex in @xmath1 has a preference list strictly ranking its neighbors . </S>",
    "<S> the vertices in @xmath2 ( similarly , in @xmath3 ) are called _ residents _ ( resp . , _ hospitals _ ) : each resident seeks to be matched to a hospital while each hospital @xmath4 seeks @xmath5 many residents to be matched to it . </S>",
    "<S> the gale - shapley algorithm computes a stable matching in @xmath6 in linear time . </S>",
    "<S> we consider the problem of computing a _ popular _ matching in @xmath6  a matching @xmath7 is popular if @xmath7 can not lose an election to any other matching where vertices cast votes for one matching versus another . </S>",
    "<S> our main contribution is to show that a max - size popular matching in @xmath6 can be computed by the _ 2-level gale - shapley _ algorithm in linear time . </S>",
    "<S> this is a simple extension of the classical gale - shapley algorithm and we prove its correctness via linear programming . </S>"
  ]
}
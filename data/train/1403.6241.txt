{
  "article_text": [
    "a quarter of a century ago give or take a month or two lenore blum , mike shub , and steve smale published an article  @xcite developping a theory of complexity over the real numbers .",
    "the two previous decades had witnessed a spectacular development of the foundations of discrete computations and the declared purpose of  @xcite was to lay down the grounds for a similar development for numerical computations . to understand the nature of this goal it will be useful to give an overview of the ideas involved .",
    "the design of computer software ( operating systems , compilers , text editors ) that accompanied the spread of digital computers brought an interest in the understanding of the cost of algorithmic solutions for a large number of combinatorial problems ( searching , sorting , pattern matching ) .",
    "this interest took two forms : the analysis of specific algorithms and the search of inherent lower bounds for specific problems .",
    "the former would allow to compare the efficiency of different algorithms whereas the latter would allow to compare any algorithm s cost with current lower bounds and , in some cases , prove optimality .",
    "on the other extreme of optimality results , a number of problems exhibited a large gap between the cost of their best algorithmic solutions and their provable lower bounds . to understand this gap , and",
    "to eventually decide which of the bounds was off the mark , it was beside the point to use a cost measure that would be too fine . instead",
    ", emphasis was soon made on _ polynomial time _ as opposed to _ exponential time _",
    ", the former broadly meaning `` tractable '' and the latter `` intractable ''  @xcite . furthermore , technical reasons allowed to focus on decision problems ( questions with a yes / no answer ) and this gave rise to the classes @xmath1 and @xmath3 of such problems solvable in polynomial and exponential time , respectively .",
    "the existence of problems in @xmath4 was soon established  @xcite but these problems were somehow artificial and had no relevance besides helping to establish that @xmath5 . for many problems of interest ,",
    "the question of whether a polynomial time algorithm could be devised ( or , instead , a superpolynomial complexity lower bound proved ) remained open .    a new insight developed in the early 70s that had a lasting impact on theoretical computer science .",
    "there was a surge of interest on a subclass of @xmath3 consisting in searching problems for which a candidate solution can easily ( i.e. , in @xmath1 ) be verified to be ( or not ) a true solution to the search .",
    "this class was given the name @xmath2 ( from _ nondeterministic polynomial time _ ) and satisfied the inclusions @xmath6 .",
    "then , steve cook  @xcite and leonid levin  @xcite independently proved that the problem @xmath7 of deciding whether a boolean formula had a satisfying assignment ( i.e. , whether its variables can be given values in @xmath8 such that the formula evaluates to true ) had the following properties :    \\(i ) @xmath7 belongs to @xmath2 , and    \\(ii ) if @xmath7 belongs to @xmath1 then @xmath9 .",
    "shortly after , richard karp  @xcite showed that  21 problems coming from diverse areas of discrete computation shared these two properties as well , and it was a matter of a few years to have literally thousands of them .",
    "these problems are said to be _",
    "@xmath2-complete_. and , as it happens , the membership in point  ( ii ) above remains open for all of them .",
    "that is , it is not known whether any of them is in @xmath1 , or equivalently , whether @xmath9 .",
    "the lanscape drawn by these results is frustrating .",
    "we can prove exponential lower bounds for some natural problems but these are few .",
    "on the other hand , we can prove @xmath2-completeness for a large number of problems but can not deduce superpolynomial lower bounds from these completeness results since we do not know whether @xmath9 .",
    "one can therefore understand that the truth of this equality became the most important open problem in theoretical computer science , and even a paramount one for mathematicians  @xcite .",
    "the @xmath9 question along with everything involved in it ( notably , a formal machine model upon which a notion of cost can be defined ) revealed a gap between the theoretical foundations of discrete computations in the early 80s and those of numerical computations .",
    "it is this gap ( indeed , the desire to fill it ) what motivated blum , shub and smale . among other results ,",
    "their paper  @xcite defined a formal computational model over the real numbers , associated a natural cost measure to computations in this model , and used this cost measure to define complexity classes @xmath10 , @xmath11 , and @xmath12 satisfying the following properties ( all of them , mimicking known properties of their discrete counterparts ) :    \\(i ) the classes @xmath10 and @xmath12 are closed by complements ( i.e. , if a problem @xmath13 is in the class , so is the problem obtained by exchanging yes and no answers ) ,    \\(ii ) @xmath14 , and    \\(iii ) the class @xmath11 has natural complete problems .",
    "the @xmath11-complete problem exhibited in  @xcite is the following : given a polynomial @xmath15 $ ] of degree at most  4 , does there exists @xmath16 such that @xmath17 ?",
    "unlike the situation in the discrete setting , however , there was no avalanche of @xmath11-complete problems after the publication of  @xcite .",
    "we wo nt delve into the reasons of this contrast ( the interested reader may find a possible cause in  @xcite ) .",
    "also , we note here that the inclusion @xmath18 was not proved in  @xcite and that it is certainly non - trivial ( see , e.g. ,  @xcite ) .",
    "it is , in addition , strict ( i.e. , @xmath19 , see  @xcite ) , a separation that in the discrete setting remains conjectural as of today .",
    "the ideas in  @xcite fusioned algebraic complexity theory and structural complexity and , simultaneously , built a bridge between theory of computation and numerical analysis .",
    "its influence after a quarter of century give or take a month or two can hardly be overestimated .",
    "the above notwithstanding , blum , shub and smale were aware of at least two aspects left out of their exposition .",
    "firtsly , the consideration of roundoff errors and their effect on computation .",
    "secondly , the complexity of iterative methods .",
    "both issues are related to the notion of _ condition _ ( the analyses of both are expressed in terms of a _ condition number _ ) and are the warp and woof of numerical analysis .",
    "actually , the last section of  @xcite is devoted to open problems , the last of which reads    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ finally , to bring machines over @xmath0 closer to the subject of numerical analysis , it would be useful to incorporate round - off error , condition numbers and approximate solutions into our development .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    our only agenda here is to pursue this proposal .      in this paper",
    "we extend the notion of _ decision problem _ to include the condition of an input .",
    "besides the _ length _ of such an input there is a natural notion of _ size _ that naturally takes into account its condition .",
    "also , for any finite - precision computation we define a notion of _ cost _ that accommodates precision requirements .",
    "endowed with these basic notions the first goal is to define a version of the class @xmath1 in the context of finite precision .",
    "our version is the class @xmath20 of problems decidable with _ roundoff polynomial cost_. this is a very general class that captures , we believe , the features and uncertainties of finite - precision computations . the complexity class @xmath21 is similarly defined .",
    "both @xmath20 and @xmath21 are closed by complements . in other words ,",
    "property  ( i ) above holds in this setting as well .",
    "thinking about nondeterminism leads to the issue of which candidate solutions @xmath22 are taken into account for a given problem . in this paper",
    "we consider two possible answers to this question according to whether the magnitude of such a @xmath22 ( roughly speaking , the lengths of the exponents in a floating - point representation of the components @xmath23 ) is to be polynomially bounded on the size of the problem s data .",
    "we thus obtain the classes of _ bounded _ and _ unrestricted _ nondeterministic polynomial time @xmath24 and @xmath25 , respectively .",
    "for both of these two classes we show that a version of the _ circuit feasibility problem _ is complete ( under a notion of reduction that is appropriate to our finite - precision context ) .",
    "the question to be decided is the same in both cases but the condition numbers are different .    for these classes",
    "we therefore show the following :    ( ii ) @xmath26 , and @xmath27 , and    ( iii ) the classes @xmath24 and @xmath25 have natural complete problems .",
    "furthermore , we show that the inclusion @xmath27 is strict , just as the inclusion @xmath18 is , but the proof now relies on bounds for precision requirements ( which we show in the more general form of a hierarchy theorem ) .",
    "the inclusion @xmath28 remains open ; we conjecture it holds true .",
    "the class @xmath20 is , as we said , very general .",
    "a glance at the literature shows the existence of two , more down - to - earth , subclasses of @xmath20 which we will denote by @xmath29 and @xmath30 . in the first ( which roughly coincides with the so called _ direct _ algorithms ) the running time of the algorithm",
    "does not depend on the precision needed .",
    "an error - free execution provides the right answer . in the second , iteration is of the essence and machine precision can be adjusted during the execution .",
    "a fundamental feature now is that the algorithm s outputs are guaranteed correct .",
    "the corresponding classes for exponential cost naturally follow .",
    "a way in which the class @xmath20 becomes `` closer to numerical analysis '' ( than the class @xmath10 introduced in  @xcite ) is that subsets of @xmath31 decided in @xmath20 no longer need to have semialgebraic boundaries .",
    "an example is the set @xmath32 which belongs to @xmath20 ( when endowed with a natural condition nuber ) .",
    "four further classes for nondeterministic polynomial cost can be naturally defined . yet , in our exposition , we wo nt elaborate on @xmath33 or @xmath34 , and we will merely briefly discuss on the classes @xmath35 and @xmath36 , for which a completeness result is shown . a diagram of the main classes studied in this paper , with arrows indicating inclusions , follows .",
    "diagrama2.pictex    decision problems , a notion of input size , finite - precision machines , and the cost of their computations , are all introduced in section  [ sec : decision ] .",
    "the classes @xmath37 and @xmath30 are described in section  [ sec : pro ] .",
    "the classes @xmath38 and @xmath36 are examined in section  [ sec : npdir ] .",
    "different versions of the _ circuit feasibility problem _ are then shown to be complete in these classes , under appropriately defined reductions .",
    "the inclusion @xmath27 is shown in section  [ sec : exp ] .",
    "section  [ sec : fin_rem ] briefly discusses two issues related to our exposition : a relationship between condition and average complexity which is ubiquitous in the modern approach to condition , and a comparison with a turing machine based approach to numerical computations .",
    "preceding these developments we spend some time overviewing the basic features of finite - precision computations and conditioning . for the latter , and in order to convey a certain ad - hoc character of condition numbers ( cf .  remark",
    "[ rem : cond1 ] below ) , we are liberal with examples .      to the best of our knowledge , this is the first exposition of a theory of np - completeness that considers condition and finite - precision .",
    "nonetheless , our development was only possible because substantial literature on related ideas was available .    to begin with , the condition - based accuracy analysis that goes back to the work of turing  @xcite and von neumann and goldstine  @xcite .",
    "this analysis has since been pervasive in numerical linear algebra , and more recently began occurring in other subjects ( linear optimization , polynomial computations , etc . ) .",
    "then there is the condition - based complexity analysis , which goes back to the analysis of the conjugate gradient method by hestenes and stiefel  @xcite , and was more recently championed by lenore blum  @xcite and steve smale  @xcite .",
    "the work of jim renegar on linear optimization  @xcite in the mid-90s is an outstanding example .",
    "thirdly , the theories of complexity that grew in the 1970s for discrete computations ( see  @xcite for text expositions ) and in the late 1980s for numerical problems ( cf .",
    "@xcite ) , which set the model for the kind of results one should look for in the finite - precision setting .    finally , there are a few articles that , without attempting to build a theory , delve into the overlap of complexity and accuracy . notably among them are an old result by miller  @xcite establishing a trade - off between complexity and numerical stability for matrix multiplication , and a recent paper by allender et al",
    ".  @xcite that relates a specific discrete problem with various aspects of numerical computations .",
    "i can not end this paragraph without mentioning another stream of research on the complexity of numerical computations .",
    "the point of departure now is the adoption of the turing machine as computational model , together with the procedure of both inputting and outputting real numbers bit by bit .",
    "an excellent short account of this viewpoint is in  @xcite .",
    "comprehensive expositions can be found in  @xcite .",
    "we will briefly describe the differences with our approach in  [ sec : comp ] .    *",
    "* this paper stem from discussions with gregorio malajovich and mike shub . during the process of its writing",
    "i often communicated with both of them , and received constructive criticism for both definitions that did not capture , and proofs that did not establish , what they had to .",
    "i am greatly indebted to them .",
    "this section recounts the main features of finite - precision computations as they are performed in numerical analysis .",
    "the idea is not to propose a theory ( this will be done in subsequent sections ) but to acquaint readers possibly unfamiliar with these features and to motivate ensuing definitions .",
    "numerical computations on a digital computer are supported by a representation of real numbers and their arithmetic .",
    "because of the necessary finiteness of computer data real numbers are replaced by _ approximations _ and the ubiquitous form of these approximations are the so called _ floating - point _ numbers .",
    "we next briefly describe them , pointing to the reader that a comprehensive exposition of the subject is chapter  2 in  @xcite ( from where our short description has been extracted ) .    a _ floating - point number system _",
    "@xmath39 is a set of real numbers @xmath22 having the form @xmath40 where    ( 1 ) : :    @xmath41 , @xmath42 , is the _ base _ of    the system , ( 2 ) : :    @xmath43 , @xmath44 is its _ precision _ , ( 3 ) : :    @xmath45 satisfies @xmath46    ( the _ exponent range _ ) with @xmath47 ,    and @xmath48 ( the _ mantissa _ ) satisfies @xmath49 .",
    "we actually impose , to ensure a unique representation of @xmath22 , that for @xmath50 we have @xmath51 .",
    "this implies @xmath52 with @xmath53 for all @xmath54 and @xmath55 .    the non - zero elements @xmath22 of @xmath56 satisfy @xmath57 the real numbers in these two intervals , along with @xmath58 , make the _ range _ of @xmath56 , which we denote by @xmath59 .",
    "that is , @xmath60    \\;\\cup\\;\\{0\\}\\;\\cup\\;\\big[\\beta^{\\emin-1},\\beta^{\\emax}(1-\\beta^{-t})\\big].\\ ] ] associated to the system @xmath56 there is a _ rounding function _",
    "@xmath61 which maps each real @xmath62 in the range of @xmath56 to an element @xmath63 in @xmath56 closest to @xmath62 ( there are several ways to break ties whose nature is of no consequence to our development ; the interested reader can see the notes and references of chapter  2 in  @xcite ) .",
    "if @xmath62 is not in the range of @xmath56 then it is either too large in absolute value ( @xmath64 ) or too small ( @xmath65 ) .",
    "we talk about _ overflow _ or _ underflow _ , respectively .",
    "different implementations of @xmath66 treat these cases in different manners , a common one letting @xmath63 map @xmath62 to the nearest non - zero element in @xmath56 .",
    "the _ unit roundoff _ of @xmath56 is defined to be @xmath67 .",
    "`` it is the most useful quantity associated with @xmath56 and is ubiquitous in the world of rounding error analysis ''  @xcite .",
    "it satisfies the following : @xmath68    arithmetic in @xmath56 , in the _ standard model _ ,",
    "is performed by first computing on @xmath69 the exact result of an operation and then applying @xmath66 to it .",
    "this defines , for any operation @xmath70 a corresponding operation @xmath71 which satisfies , for all @xmath72 , @xmath73    [ rem : exponents ] there is a qualitative difference between the bounds required for mantissas ( @xmath74 ) and exponents ( @xmath75 ) in a floating - point number system . for all real numbers",
    "@xmath76 the exponent @xmath77 needed to represent @xmath62 in the interval @xmath78 is finite .",
    "in contrast with this , for almost all real numbers @xmath62 one must have @xmath79 if one wants that @xmath80 .",
    "this feature , together with the fact that over and underflow are rare when compared with the all - pervasive presence of rounding errors , is at the origin of the fact that , almost invariably , theoretical analyses of roundoff assume a floating - point system without bounds for the exponents .",
    "that is , a system where   and   hold true without requiring @xmath81 ( or , equivalently , where @xmath82 ) .",
    "we will refer to such a system as having _",
    "unrestricted exponents_. most accuracy analyses in the literature ( e.g. , all those cited in this paper ) assume unrestricted exponents .",
    "the sequencing of arithmetic operations in the execution of an algorithm entails the accumulation of errors given by equation   and with it , the occurrence of products of quantities of the form @xmath83 with @xmath84 .",
    "the following result ( see  ( * ? ? ?",
    "* lemma  3.1 ) ) deals with these products .",
    "[ lem : h31 ] if @xmath85 and @xmath86 for @xmath87 , and @xmath88 then @xmath89 where @xmath90 is a real number satisfying @xmath91      the possible effect of roundoff errors on a computation raised the attention of the founding figures of modern numerical analysis .",
    "both turing in the u.k . and von neumann and goldstine in the u.s . considered this effect for the case of linear equation solving and attempted a quantitative explanation  @xcite .",
    "the story of the former is nicely described by wilkinson in his 1970 s turing lecture  @xcite .",
    "what follows is a brief exposition of the ideas introduced by them and their subsequent extensions .",
    "errors in a finite - precision algorithm @xmath92 computing a function @xmath93 will accumulate and @xmath92 will return , on input @xmath94 , a point @xmath95 different from @xmath96 .",
    "the extent of this difference can be measured by the _ normwise relative error _ @xmath97 an approach that has often worked to estimate this error passes through showing that @xmath98 for a point @xmath99 sufficiently close to @xmath62 , say , satisfying that @xmath100 where @xmath101 grows slowly with @xmath102 and @xmath103 ( e.g. , as a low degree polynomial ) .",
    "if such a result known as _ backward - error analysis_ is possible , the relative error in   can be estimated from the knowledge of the _",
    "( relative , normwise ) condition number _ of @xmath62 @xmath104 equation   shows the usual understanding of a condition number as `` the worst possible magnification of the error , in the value of @xmath96 , produced by a small perturbation of the data @xmath62 . ''",
    "it follows from ( [ eq : relerrorn][eq : cn ] ) that @xmath105    it is important to note here that a backward - error analysis is not always possible . in these cases",
    ", one needs to obtain bounds for @xmath106 with a more direct ( and usually laborious ) approach referred to as _ forward - error analysis_.    [ ex : les ] for the case of matrix inversion we have the function @xmath107 from the set of invertible matrices to @xmath108 . under the assumption of unrestricted exponents ( cf .",
    "remark  [ rem : exponents ] above ) , the corresponding condition number @xmath109 is exactly @xmath110 , a quantity usually denoted by @xmath111 .",
    "similar bounds hold for the problem of linear equation solving , @xmath112 , just that now we only have the bounds @xmath113 .",
    "also , in this case , a backward error analysis shows that the computed ( using householder qr decomposition ) solution @xmath114 satisfies , for some constant @xmath115 , @xmath116    [ rem : hs ] soon after the introduction of @xmath111 for error analysis , hestenes and stiefel  @xcite showed that this quantiy also played a role in complexity analyses .",
    "more precisely , they showed that the number of iterations of the conjugate gradient method ( assuming infinite precision ) needed to ensure that the current approximation to the solution of a linear system attained a given accuracy is proportional to @xmath117 .",
    "a goal of this section is to show that , in spite of the rigor of the definition in   the idea of condition has a bit of an ad - hoc character ( we will return to this idea in remark  [ rem : cond1 ] below ) .",
    "the next two examples show a first gradual departure of condition as given in  .    [",
    "ex : goffin ] given a matrix @xmath118 such that @xmath119 we want to find a point in @xmath120 .",
    "this problem does not fit the framework above in the sense that the function @xmath121 is not well - defined : any point @xmath22 in @xmath122 would do . in 1980",
    "goffin  @xcite analyzed the cost of a procedure to find one such @xmath22 in terms of the `` best conditioned '' point in @xmath122 . for @xmath123",
    "one defines @xmath124 then @xmath125 and finally @xmath126 goffin s complexity analysis is in terms of @xmath127 ( in addition to @xmath102 and @xmath103 ) .",
    "[ ex : bezout ] let @xmath128 be positive integers and @xmath129 .",
    "we denote by @xmath130 the complex vector space of systems @xmath131 with @xmath132 $ ] homogeneous of degree @xmath133 .",
    "the problem is to compute ( i.e. , to approximate ) a zero of @xmath134 .",
    "generically , such a system @xmath135 has @xmath136 different zeros in complex projective space @xmath137 .",
    "for each one of them , shub and smale have characterized the value of @xmath138 ( here @xmath139 is the selected zero ) to be @xmath140 where @xmath141 is the tangent space at @xmath139 and the inverse is of the restriction of @xmath142 to this tangent space .",
    "also , here @xmath143 denotes the diagonal matrix with entries @xmath144 , and @xmath145 is the norm induced by weyl s hermitian product on @xmath130 . a variation of this quantity , @xmath146 has the advantage of being unitarily invariant and has been used is several analyses of algorithms for approximating zeros  @xcite . for this problem , and as in the previous example , since the data is the system @xmath135 and no zero @xmath139 is specified ( any one would do ) a condition number @xmath147 is defined in terms of the collection @xmath148 .",
    "[ ex : square_root ] let @xmath149 .",
    "we want to approximate @xmath150 by using hero s method ( from hero of alexandria , although the method was already known to the babylonians ) .    assume , for the time being , that @xmath151 and take @xmath152 so that @xmath153 . let @xmath154 where @xmath155 because of roundoff errors we actually compute a sequence @xmath156 and it is not difficult to show that , for some small constant @xmath115 , @xmath157 it follows that to ensure that @xmath158 it is enough to have both @xmath159 to compute @xmath150 with @xmath160 arbitrary one computes @xmath161 and @xmath162 such that @xmath163 , and then @xmath164 .",
    "the case @xmath165 is dealt with using that @xmath166 .",
    "when @xmath151 , the requirements   that ensure a relative error bounded by @xmath167 are independent of @xmath168 .",
    "this is consistent with the fact that , for all @xmath76 , the condition number @xmath169 given by   is constant ( and equal to @xmath170 ) . for arbitrary @xmath149 , in contrast , the scaling process",
    ", i.e. , the computation of @xmath171 and @xmath172 above , depends on the magnitude of @xmath168 , both in terms of complexity ( the value of @xmath173 grows linearly with @xmath174 ) and accuracy ( the log of @xmath175 also grows linearly with @xmath174 ) .      a common feature of the problems in examples  [ ex : les ] to  [ ex : bezout ] is the existence of a subset of data instances at which the condition number is not well - defined ( or , more precisely , takes the value @xmath176 ) .",
    "these data are considered _ ill - posed _ with respect to the problem at hand in the sense that no amount of ( finite ) precision will guarantee a given accuracy in the output .",
    "an old result  @xcite related to example  [ ex : les ] , nowadays known as _ condition number theorem _ ( cnt in what follows ) shows that , if @xmath177 denotes the set of non - invertible matrices ( which are the ill - posed matrices for the problem of matrix inversion or linear equation solving ) , then @xmath178 here @xmath179 denotes the spectral norm , and @xmath180 refers to the distance induced by this norm .",
    "a systematic search for relations between condition and distance to ill - posedness was campaigned by jim demmel  @xcite .",
    "these relations are nowadays frequently established .      for a finite - valued problem , that is , one given by a function @xmath181 where @xmath182 is a finite set ( say @xmath183 ) the quantity @xmath184 is of little use .",
    "it is immediate to check that @xmath185 when @xmath62 is in the boundary of some @xmath186 , for @xmath187 , and that @xmath188 otherwise .",
    "the family of boundaries between the sets @xmath189 is composed of data @xmath62 for which there is no hope that a finite - precision computation with input @xmath62 will yield a reliable output .",
    "elements in these boundaries are considered to be _ ill - posed_.    an idea championed by jim renegar  @xcite is to define condition , for finite - valued problems , as the ( relativized ) inverse to the distance to ill - posedness ( i.e. , to impose a cnt ) .",
    "but other approaches to define condition for these problems have been used as well .",
    "[ ex : polyhedral ] one can turn the problem in example  [ ex : goffin ] into a feasibility problem : given @xmath118 decide whether @xmath190 .",
    "this problem can be solved with finite precision and both the accuracy and the complexity of the algorithm are ( nicely ) bounded in terms of a simple extension of @xmath127 ( for not necessarilly feasible matrices  @xmath191 ) .",
    "one takes @xmath192 and @xmath193 note that @xmath194 if and only if @xmath191 is feasible and @xmath191 is ill - posed precisely when @xmath195 .",
    "this extension was done in  @xcite where it was proved that @xmath127 satisfies a cnt , namely , that @xmath196 ( here @xmath197 is the 1 - 2 operator norm , @xmath198 its associated distance , and @xmath177 the boundary between the sets of feasible and infeasible matrices @xmath191 ) .",
    "this extension was then used to analyze interior - point methods for the feasibility problem ( see  @xcite and chapters  6 , 7 , 9 , and 10 in  @xcite ) .",
    "a variety of other condition measures have been proposed for this feasibility problem .",
    "a description of a few of them ( with some comparisons ) appears in  @xcite .",
    "[ ex : counting ] the space @xmath199 is as @xmath130 but with real coefficients .",
    "the problem now is , given @xmath200 , count the number of real projective zeros of @xmath135 .",
    "this is a finite - valued problem .",
    "a finite - precision algorithm that solves it is described in  @xcite and both its complexity and accuracy analyzed in terms of the condition number @xmath201 here @xmath145 is the norm induced by weyl s inner product on @xmath199 . in",
    "@xcite it is shown that @xmath202 satisfies a cnt .",
    "indeed , a system @xmath135 is ill - posed when arbitrary small perturbations can change the number of its real zeros .",
    "denote by @xmath177 the set of ill - posed systems . then @xmath203 .",
    "[ ex : feas_pol ] let @xmath204}^{\\r}$ ] denote the space of systems of @xmath103 homogeneous polynomials in @xmath205 variables with real coefficients .",
    "we want to determine whether one such system @xmath135 is feasible .",
    "that is , whether there exists @xmath206 such that @xmath207 . here",
    "@xmath208 denotes the unit sphere in @xmath209 .",
    "an algorithm for solving this problem was given in  @xcite and analyzed in terms of @xmath210                      \\displaystyle\\max_{\\zeta\\in\\is^n}\\frac{\\|f\\|}{\\|f(x)\\| }                      & \\mbox{otherwise . }",
    "\\end{array}\\right.\\ ] ] here @xmath211 denotes the zero set of @xmath135 on @xmath208 and @xmath212 a version of @xmath213 for overdetermined systems defined with the help of the moore - penrose inverse .    for the condition numbers @xmath127 and @xmath202 in examples  [ ex : polyhedral ] and  [ ex : counting ] we have that the condition is @xmath176 if and only if the data is in the boundary between sets of the form @xmath214 ( inputs with a specific output ) .",
    "this is not the case for @xmath215 in example  [ ex : feas_pol ] .",
    "this condition number takes the value infinity at the ill - posed systems @xmath135 but it does so at other systems as well ( for instance on the case @xmath216 , @xmath217 , @xmath218 and the polynomial @xmath219 )",
    ".    we still want to say that inputs @xmath135 for which @xmath220 are ill - posed . to distinguish between them and those in the boundaries between sets @xmath189 we will , using an expression due to jim renegar  @xcite , call the latter _ definitely ill - posed_.    [ rem : cond1 ] we close this section returning to the nature of condition numbers .",
    "already the definition in   depends on a number of choices .",
    "for instance , the selection of a particular norm , or the way of measuring errors , which needs not be normwise ( as in   and  ) but may be componentwise instead .",
    "on top of this , we just saw that for finite - valued problems the quantity defined in   is of no practical use and other forms of condition need to be defined .",
    "examples  [ ex : polyhedral ] ,  [ ex : counting ] , and  [ ex : feas_pol ] show that there is not a single , all - purpose , choice here either .",
    "on top of all this , the result of hestenes and stiefel mentioned in remark  [ rem : hs ] triggered the emergence of an assortment of measures associated to data for various problems which were used for the complexity analysis of iterative algorithms .",
    "almost invariably these measures were also referred to as condition numbers .",
    "we formally define in this section both the class of problems we will deal with and the model for the machines solving them .      among the finite - valued problems",
    "the class of decision problems deserves emphasis .",
    "these are problems with only two outputs and are usually stated as a question on the input data which may have as answer either yes or no . in the rest of this paper we will focus on decision problems .    before giving a formal definition of decision problems we note that natural objects occurring in the theory ( circuits , polynomials , machines ,  ) have discrete and continuous components . consistently with this division , algorithms perform computations both with real and discrete data ( and computer languages such as c , fortran , or mathlab , distinguish between floating - point and integer numbers and implement arithmetics for both ) .",
    "to reflect this situation we will consider data in the product @xmath221 and define decision problems to appropriately take into account this structure . here",
    "@xmath222 where the union is disjoint and @xmath223 is an empty symbol so that @xmath224 .",
    "similarly for @xmath225 .    a _ decision problem _ is a pair @xmath226 where @xmath227 and @xmath228 $ ] . here",
    "@xmath229 is the _ condition number_. we denote by @xmath177 the set @xmath230 and we say that elements in @xmath177 are _ ill - posed_.    examples  [ ex : polyhedral ] and  [ ex : feas_pol ] provide instances of decision problems .",
    "[ rem : coding ] different condition numbers for the same subset @xmath227 define different decision problems .",
    "this is akin to the situation in classical ( i.e. , both discrete and infinite - precision bss ) complexity theory where different encodings of the intended input data define ( sometimes radically ) different problems .",
    "for instance , to specify a univariate real polynomial in _ dense encoding _ we provide both its coefficients ( the continuous data ) and its degree ( the discrete data ) .",
    "that is , we describe a polynomial @xmath231 by using the array @xmath232 $ ] . instead , if the encoding is _ sparse _ , we describe @xmath135 by the list @xmath233 .",
    "the size of the dense encoding may be exponentially larger than the size of the sparse one and consequently , the complexity of a problem ( e.g. , decide whether @xmath135 has a real root ) may dramatically depend on which of these two encodings the input is given .",
    "we will return to the issue of the arbitrariness of condition numbers in  [ sec : average ] .",
    "briefly , a finite - precision machine is a bss machine whose arithmetic is not exact but obeys the laws described in ",
    "[ subsec : fpc ] .",
    "we will not give a completely formal definition of them to avoid repeating a definition that nowadays is well - known ( readers wishing to read such definition will find it in  @xcite or  @xcite ) .    [ def : fp ] a _ finite - precision bss machine _ is a bss machine performing finite - precision computations . to precisely define the latter",
    ", we fix a number @xmath234 ( the _ unit roundoff _ ) and let @xmath235 in a _ @xmath236-computation _ , built - in constants , input values , and the result of arithmetic operations , call any such number @xmath237 , are systematically replaced by another real number @xmath238",
    "satisfying @xmath239 for all @xmath240 , we denote by @xmath241 the set of all possible @xmath236-computations of @xmath242 with input @xmath243 .    we will refer to @xmath244 as the _ precision _ of @xmath242 .",
    "finally , we will assume that the machine @xmath242 has some special - purpose , read - only , registers storing the values of @xmath245 ( as an element in @xmath225 ) and @xmath236 .",
    "[ rem : discrete ] the definition above does not discriminate between real and discrete data .",
    "this is not necessary ( and we have therefore proceeded with simplicity as a goal ) .",
    "indeed , discrete data can be encoded by sequences of real numbers in @xmath246 .",
    "a number @xmath62 encodes @xmath247 if @xmath76 and encodes @xmath248 otherwise .",
    "furthermore , turing machine computations can be simulated by finite - precision computations and these simulations are both robust they are always correct , independently of the precision at hand and efficient the cost of the simulation is linear in the cost of the turing s machine computation .",
    "we will assume both these encoding and simulations when talking about finite - precision machines taking inputs in @xmath249 , refer to the data thus encoded as _",
    "discrete data _ , and indicate as _ discrete computations _ those ( simulations ) performed on discrete data .",
    "it is crucial to keep in mind , and we repeat it here , that these computations are error - free .",
    "[ rem : machines ]    ( i ) : :    some of the details in the definition above are meant to allow for    generality whereas some others are chosen to simplify the exposition .    the notion of @xmath236-computation mimics the    finite - precision computations described in  [ subsec : fpc ] under the    assumtion of unrestricted exponents .",
    "but we do not impose a finite set    @xmath56 and actually allow for all possible outputs of    @xmath66 in @xmath0 as long as   is satisfied .",
    "( ii ) : :    the inclusion of divisions as a basic arithmetic operation in bss    machines makes possible the occurrence of divisions by zero .",
    "we will    assume ( as done in  @xcite ) that all divisions are preceeded by a test    eliminating this possibility .",
    "( iii ) : :    it is useful to think of the `` machine program '' and the constant    @xmath236 as separate entities .",
    "this allows one to consider    the computations of a machine @xmath242 for different values of    @xmath236 .",
    "recall , however , that the values of    @xmath245 and @xmath236 are available to the    program and that the machine may use these values during the    computation .",
    "( iv ) : :    a ( somehow peculiar ) consequence of the availability of    @xmath236 to the machine program is the fact that some    @xmath236-computations may not be    @xmath250-computations for some @xmath251 .    the obvious example is a computation that tests an inequality of the    form @xmath252 .",
    "[ def : exact ] we will say that a computation is _ exact _",
    "when all its arithmetic operations are performed error - free , that is , @xmath253 in definition  [ def : fp ] .    obviously , for every @xmath254 an exact computation is a possible @xmath167-computation .",
    "it will occassionally be useful to talk about _",
    "infinite precision_. this amounts to set @xmath255 and @xmath256 . in this case , it is easy to see , we recover the standard bss machines .    to deal with complexity we need to fix two yardsticks . a measure of size ( for the inputs of a problem ) and a measure of cost ( for the computations solving this problem ) .",
    "complexity is the dependence of the latter on the former .",
    "we define the _ length _ of @xmath257 , which we write as @xmath258 , to be @xmath259 .",
    "we define the _ size _ of @xmath243 as @xmath260 note that if @xmath243 is ill - posed then @xmath261 and that otherwise @xmath262 .",
    "also , that for pairs @xmath243 with @xmath263 ( in particular , for elements @xmath264 ) we have @xmath265 .",
    "the computation of a bss machine has a cost associated to it which is the number of steps performed before halting .",
    "we call this the _ arithmetic cost _ and , for the computation of a machine @xmath242 on input @xmath240 , we denote it by @xmath266 .    in addition to the arithmetic cost , we define the _ accuracy cost _ of a computation ( of a machine @xmath242 on input @xmath243 ) to be the smallest value of @xmath245 guaranteeing a correct answer .",
    "this is commonly associated with the the cost in practice ( measured in number of bit operations ) of operating with floating - point numbers since , assuming the exponents of such numbers are moderately bounded , this cost is at most quadratic on @xmath245 for all the common implementations of floating - point arithmetic .",
    "we can now deal with complexity .",
    "complexity classes are usually defined by putting restrictions on computation resources ( notably , running time ) as a function of input length .",
    "our situation demands for a more involved approach due to a number of features proper to it : size depends on condition as well as on length ( and condition is not known a priori ) , output correctness depends on the machine precision , and total cost must depend on this machine precision as well ( since the cost of arithmetic operations in practice does so ) .",
    "definition  [ def : clock ] below intends to capture these features .",
    "it uses the common notion of time constructibility which we next recall .",
    "a function @xmath267 is _ time constructible _ when there exists a turing machine that with input @xmath102 returns @xmath268 in time @xmath269 .",
    "most of the functions used in complexity theory ( e.g. , polynomial and exponential functions ) are time constructible .",
    "[ def : clock ] let @xmath270 and @xmath271 be time constructible functions .",
    "we say that a decision problem @xmath272 is _ solved with cost _ @xmath273 when there exists a finite - precision bss machine @xmath242 satisfying the following . for every @xmath240 with",
    "@xmath274 the computation of @xmath242 with input @xmath243 satisfies @xmath275 and , if @xmath276 then all computations of @xmath242 correctly decide whether @xmath277 .",
    "we observe that the machine @xmath242 in definition  [ def : clock ] above needs not to halt for ill - posed inputs . in addition",
    ", we highlight two important features :    ( i ) : :    computations are clocked , i.e. , their arithmetic cost is bounded by a    function on two parameters immediately available : length of the input    data and machine precision .",
    "( ii ) : :    computations are unreliable in the sense that there is no guarantee    that the precision used is enough to ensure a correct output .",
    "actually , correctness is not guaranteed even for exact computations .",
    "our basic deterministic complexity classes , @xmath20 and @xmath21 will be obtained by appropriately bounding @xmath278 and @xmath279 in definition  [ def : clock ] .",
    "the evaluation of many common functions ( e.g. , a determinant ) is done with clocked computations whose arithmetic cost , in general , depend only on the length of the input .",
    "the following example shows a general situation where , in contrast , this cost depends on @xmath245 as well .",
    "[ ex : continuous ] we want to decide whether a continuous function ( e.g. , a polynomial ) @xmath280\\to\\r$ ] has a zero in the interval @xmath281 $ ] .",
    "we consider as ill - posed any pair @xmath282)$ ] on which all the zeros of @xmath135 are either at the endpoints of @xmath281 $ ] or are extrema of @xmath135 .",
    "that is , such a pair is ill - posed if @xmath135 has a zero but does not change sign on @xmath281 $ ] .",
    "a simple scheme to decide this problem is to evaluate @xmath135 in a set @xmath283 , say of equally spaced points , and to reject if all the obtained values have the same sign .",
    "common sense suggests that it is useless to have too many points on @xmath284 when @xmath245 is small .",
    "it also suggest that it is useless to have a large @xmath245 if the set @xmath284 has few points .",
    "the values of @xmath245 and @xmath102 will have to grow , as it were , in tandem ( and here the fact that a machine can read its current @xmath245 is of the essence ) .",
    "when both values are low , we do not expect our scheme to correctly decide the existence of a zero of @xmath135 . how large they need to be for the scheme to do so ?",
    "this of course depends on the characteristics of @xmath135 , and should be measured by a condition number .",
    "we will see a detailed version of this scheme in theorem  [ thm : np_expro ] .",
    "early on the development of complexity theory it was proved that given more resources a turing machine could solve more problems .",
    "these results were referred to as _ hierarchy theorems _ and the two best known are for time  @xcite and space  @xcite .    in this paragraph",
    "we show a hierarchy theorem for precision .",
    "[ prop : hierarchy ] let @xmath267 be time constructible and @xmath285 such that @xmath286 is continuous and increasing and @xmath287 .",
    "there exists a decision problem @xmath288 which can be decided with @xmath289 and @xmath290 , without reading the values of @xmath245 or @xmath236 , but can not be decided with @xmath291 ( no matter the arithmetic cost ) .",
    "let @xmath288 given by the set @xmath292 and the condition number @xmath293 where @xmath294 the fact that @xmath286 is continuous and increasing allows us to use its inverse .",
    "the definition of @xmath295 implies that , for all @xmath296 , if @xmath297 then for any possible machine deciding @xmath298 there are @xmath236-computations yielding a wrong answer for input @xmath296 .",
    "indeed , assume @xmath299 and let @xmath300 be such that @xmath301 and @xmath302 .",
    "then the computation that first rounds @xmath62 to @xmath303 and then proceeds error - free , is an @xmath236-computation and returns that @xmath304 since this is the case for @xmath305 . likewise for the case @xmath304 .",
    "it follows that the precision needed by any machine deciding @xmath298 satisfies @xmath306 for all input @xmath296 .",
    "that is , we must have @xmath307    now consider any pair @xmath296 with @xmath308",
    ". then @xmath309 and therefore , to decide such a pair we must have @xmath310 this shows that ( independently of arithmetic cost considerations ) @xmath288 can not be decided with @xmath311 .    to conclude",
    ", we will show that @xmath288 can be solved with the claimed cost bounds .",
    "to do so , we consider the algorithm that computes @xmath312 by repeated squaring and use a simple backward error argument",
    ".    the algorithm first computes @xmath313 ( note , this is a discrete computation whose cost is @xmath314 since @xmath315 is time constructible ) and then performs @xmath316 multiplications .",
    "its arithmetic cost is therefore @xmath314 .",
    "in addition , using lemma  [ lem : h31 ] , it is easy to see that the computed value @xmath172 is of the form @xmath317 and therefore , of the form @xmath318 where , we recall , @xmath319 satisfies @xmath320 if @xmath321 .",
    "take @xmath322 .",
    "then , @xmath323 our choice of @xmath245 also implies @xmath324 and therefore , that @xmath325 .",
    "it follows from the definition of @xmath326 that @xmath327 if and only if @xmath328 and therefore , that the machine correctly decides the pair @xmath296 .",
    "we focus in this section in polynomial cost .",
    "we first define the general class capturing this notion and then proceed to describe the subclasses @xmath29 and @xmath30 .",
    "[ def : pro ] a decision problem @xmath272 belongs to @xmath20 ( _ roundoff polynomial cost _ ) when there exists a finite - precision bss machine @xmath242 solving @xmath13 with cost @xmath273 and such that    ( i ) : :    @xmath279 is bounded by a polynomial function , and ( ii ) : :    the function @xmath329 is    bounded by a polynomial in @xmath330 , for all    @xmath240 .",
    "we note that the polynomial bound on @xmath279 is satisfied whenever a bound of the form @xmath331 for some constants @xmath332 , ensures that @xmath242 correctly decides whether @xmath277 .",
    "it is this kind of expression which is commonly found in the literature .",
    "[ rem : defpro ]    ( i ) : :    definition  [ def : pro ] is somehow tortuous , and a few remarks may help    to understand the issues at hand .    +    the fact that @xmath279 is bounded by a polynomial    guarantees that the precision required by the algorithm is at most    polynomial in the input size and hence , that the ( turing ) cost of each    arithmetic operation is so .",
    "+    furthermore , the bound in  ( ii ) implies that the arithmetic cost with    this required precision is also polynomially bounded in the size of    the input .    +    but the definition allows for various ways to achieve this    combination . in the simplest ,",
    "both @xmath279 and    @xmath278 are polynomials in their arguments .",
    "a different    possibility would allow a smaller bound for @xmath279 , say    logarithmic , and in this case the dependance of @xmath278 on    its second variable could be exponential and still have",
    "( i ) holding    true . in this case",
    "we say that @xmath272 can be solved    with",
    "_ logarithmic precision_. ( ii ) : :    it is clear that the quality of being in @xmath20 , for the    problem of deciding a subset @xmath333 , depends on    the condition number @xmath229 associated to @xmath13 .",
    "as we mentioned in remark  [ rem : coding ] , this is akin to the situation    in classical complexity theory where different encodings of the    intended input may affect the membership of the problem to the class p    ( over @xmath334 ) or @xmath10 ( over    @xmath0 ) .",
    "+    the choice of a particular condition number ( just as the choice of a    particular encoding ) is outside the theory . in the case of condition    numbers , a probabilistic analysis allows one to compare complexity    bounds ( for possibly different algorithms , in terms of possibly    different condition numbers ) by taking expectations and expressing    expected values of functions of condition numbers in terms of the    length of the input .",
    "we will return to this theme in  [ sec : average ] .",
    "a cursory look at various textbooks in numerical analysis shows the existence of two categories of algorithms , referred to as _",
    "direct _ and _ iterative _ ( the table of contents of  @xcite is a case at hand ) .",
    "for instance , for linear equation solving , gauss elimination is a direct method whereas jacobi s method is iterative , and for linear programming , the same disctinction applies to the simplex and interior point methods , respectively .",
    "this grouping is strongly related to another one , based on whether the precision @xmath236 an algorithm works with needs to be considered as fixed or can be increased during the execution of the algorithm . in the first case one can expect correct outputs only for sufficiently well - conditioned inputs , whereas the goal in the second is to ensure correct outputs for all well - posed inputs , at the price of an undeterminate halting time .",
    "for the case of functional ( as opposed to decisional ) problems , the difference can be discerned on examples we have already seen . in example",
    "[ ex : les ] we solve a system @xmath335 with householder qr decomposition , which requires @xmath336 operations , a bound depending on the dimension of @xmath191 only .",
    "the computed solution @xmath114 satisfies the relative error bound  , whose right - hand side can not be estimated without knowledge of the condition number @xmath111 .",
    "hence , we are uncertain about the magnitude of this error .",
    "in example  [ ex : square_root ] , instead , given @xmath254 , we can guarantee a relative error at most @xmath167 for the computed approximation @xmath337 of @xmath150 provided @xmath338 and @xmath339 for a constant @xmath340 .",
    "now both the arithmetic cost and the reequired precision will increase with a decrease on @xmath167 but , if we are allowed to adjust @xmath236 , we can ensure that the relative error is bounded by this @xmath167 .    the distinction between fixed and variable precision , even though less common in the literature , will serve us to define two natural subclasses of @xmath20 .      [ def : p ] a decision problem @xmath272 belongs to @xmath29 ( _ direct polynomial cost _ ) when there exists a finite - precision bss machine @xmath242 satisfying the following . for every @xmath240 the computation of @xmath242 with input",
    "@xmath243 never reads the values of @xmath245 or @xmath236 and satisfies that @xmath341 and that , if @xmath342 then all computations of @xmath242 correctly decide whether @xmath277 .",
    "if correctness is ensured as soon as @xmath343 we say that @xmath272 can be solved with _",
    "logarithmic precision_.",
    "( i ) : :    computations of machines in @xmath29 always halt within a    bounded number of steps since their time bound depend only on the    input length . the output of such computation , however , may be    incorrect and this will happen when the machine precision is    insufficient .",
    "( ii ) : :    if both @xmath255 and @xmath261    we condider the second bound in definition  [ def : p ] to hold .",
    "this means    that we can decide ill - posed inputs as long as we compute with    infinite precision .",
    "the following result is trivial .",
    "[ prop : propdir ] we have @xmath344 .    the fact that a @xmath29 machine never reads the values of @xmath245 or @xmath236 immediately yields the following result ( compare with remark  [ rem : machines](iv ) ) .",
    "[ prop : e - comps ] let @xmath242 be a @xmath29 machine and @xmath345 .",
    "then every @xmath167-computation of @xmath242 is a @xmath300-computation as well .",
    "the notion of boolean circuit plays a fundamental role in discrete complexity theory ( see , e.g. ,  @xcite ) .",
    "the same is true for algebraic circuits in algebraic complexity  @xcite , whose definition we recall next .",
    "an _ algebraic circuit _ is a connected , directed acyclic graph whose nodes have in - degree either 0 , 2 , or 3 .",
    "nodes with in - degree 0 are labeled either with a variable ( we call them _ input nodes _ ) , or with a real constant ( _ constant nodes _ ) .",
    "nodes with in - degree 2 ( called _ arithmetic _ ) are labeled with an arithmetic operation in @xmath346 .",
    "nodes with in - degree 3 are called _",
    "selection nodes_. nodes with out - degree 0 are called _",
    "output nodes_.    the following drawing gives an example of an algebraic circuit .",
    "circuit.pictex    as in remark  [ rem : machines](ii ) , we will assume that all division nodes are preceeded by a test making sure that denominators are non - zero .",
    "an algebraic circuit @xmath347 with input variables @xmath348 and @xmath103 output nodes has naturally associated to it the computation of a function @xmath349 . given a point @xmath94 this computation proceeds from input and constant nodes to output nodes by performing the arithmetic operations and the selections . for the latter ,",
    "if the selection nodes has three parents @xmath350 , the selection returns @xmath22 if @xmath351 and @xmath237 if @xmath352 .",
    "we call this computation the",
    "_ canonical procedure_.    the following diagram shows how the canonical evaluation is performed on the circuit drawn above for an input @xmath353 .",
    "circuit_eval.pictex    for @xmath354 we define an _ @xmath167-evaluation _ of @xmath347 on input @xmath62 to be any finite - precision computation ( as described in definition  [ def : fp ] ) of the canonical procedure with @xmath355 .",
    "that is , any perturbation of this procedure in which the values of input variables , constants , or arithmetic nodes are multiplied by quantities of the form @xmath83 with @xmath356 ( selections are performed error - free ) .",
    "the notion of an _ exact _ evaluation is similarly defined .",
    "the following result is straightforward .",
    "[ prop : e - eval ] if @xmath345 then every @xmath167-evaluation of @xmath347 at @xmath94 is a @xmath300-evaluation as well .    in all what follows",
    "we will assume that circuits have a single output node or that , if this is not the case , we have singled out one of them . in this way , we will be only interested in associated functions of the form @xmath357 .",
    "in addition , we will write @xmath358    algebraic circuits are easily encoded as points in @xmath359 and can therefore be passed as input data to finite - precision bss machines .",
    "we will define two decision problems based on this fact soon enough .",
    "but before doing so we want to state a fundamental property of the simulation of the canonical procedure by bss machines .",
    "[ lem : simula ] there exists a finite - precision bss machine that , with input a circuit @xmath347 with @xmath102 input nodes and a point @xmath94 computes @xmath360 following the canonical procedure .",
    "the machine does not read the values of @xmath245 or @xmath236 .",
    "the arithmetic cost of this computation is linear in @xmath361 .",
    "furthermore , for every @xmath362 the set @xmath363 of @xmath242 bijects with the set of possible @xmath167-evaluations of @xmath347 on input  @xmath62 .",
    "the existence of a machine @xmath242 evaluating circuits on points via the canonical procedure is clear .",
    "furthermore , we note that all the data management of such @xmath242 is performed with discrete data and is therefore error - free .",
    "the only real number arithmetic performed by @xmath242 corresponds to the operations of @xmath347 , and the fact that @xmath242 follows the canonical procedure means that both @xmath242 and @xmath347 evaluate @xmath364 following the same sequence of arithmetic operations .",
    "it follows from this that to each @xmath167-computation of @xmath242 with input @xmath365 corresponds a @xmath167-evaluation of @xmath347 on @xmath62 , and conversely",
    ".    the next decision problem will be essential in the sequel .",
    "[ ex : circeval ] instances for @xmath366 are algebraic circuits @xmath347 ( with input variables @xmath348 ) together with a point @xmath94 . the problem is to decide whether @xmath367 .    to specify a condition number we first define @xmath368              \\sup\\{\\e<1\\mid \\mbox{all $ \\e$-evaluations      of $ \\mcc$ at $ x$",
    "yield $ x\\not\\in\\sc$}\\ } & \\mbox{otherwise . }",
    "\\end{array}\\right.\\ ] ] we then take as condition number @xmath369 in case @xmath365 is syntactically incorrect ( e.g. , @xmath347 is not properly encoded , @xmath370 with @xmath371 ) we set @xmath372 and take @xmath373 .",
    "[ prop : circeval ] we have @xmath374 .",
    "we consider the machine , given by lemma  [ lem : simula ] , that with input @xmath365 computes @xmath360 and accepts if the result of this computation is greater than or equal to zero .",
    "the arithmetic cost of this computation is linear in @xmath361 .",
    "hence , we only need to check that the machine decides correctly as long as its precision is polynomially bounded on @xmath375 .    for a",
    "well - posed input @xmath365 let @xmath376 .",
    "then @xmath377 and the definition of @xmath378 ensures that every @xmath236-evaluation of @xmath347 at @xmath62 yields @xmath379 if and only if @xmath367 .",
    "that is , the @xmath236-evaluation yields the same sign ( @xmath380 or @xmath381 ) than the infinite - precision evaluation .",
    "in other words , this @xmath236-evaluation correctly decides the input .",
    "since the choice of @xmath236 is equivalent to set @xmath382 , we are done .",
    "the ( discrete ) class @xmath1 is included in @xmath29 via the simulation of turing machines mentioned in remark  [ rem : discrete ] ( we take condition one for all inputs in a discrete problem ) .",
    "we will see in   [ sec : inf_prec ] that @xmath29 is also closely related to @xmath10 .",
    "the definition of @xmath20 requires that , for a given input @xmath243 , the machine correctly decides the membership of @xmath243 to @xmath13 as soon as @xmath245 is large enough .",
    "but it does not impose any specific output otherwise .",
    "if the precision is insufficient , an output in @xmath383 may be wrong .",
    "in general , this possibility can not be ruled out a priori as we do not know the condition @xmath384 of the input and , consequently , can not estimate whether the available precision is sufficient or not for the input at hand .",
    "the same can be said of @xmath29 .    for some decision problems ,",
    "however , this uncertainty can be avoided .",
    "this is the case when there is a simple procedure to guarantee , given @xmath243 and @xmath245 , that the computed output is correct .",
    "such a situation would therefore allow three possible outputs : yes , no , and unsure .",
    "the first two being guaranteed correct , and the last meaning `` i need more resources to decide this input . ''",
    "availability of such a procedure naturally introduces the consideration of _ variable precision _ algorithms .",
    "these are iterative algorithms which can modify the value of their precision @xmath245 and always return the correct output ( yes or no ) to the decision question .",
    "they adaptively increase their precision ( in theory re - reading their input each time they do so ) and only halt when the current precision , together with the computations done , guarantee a correct answer .",
    "that is , their form typically follows the following general scheme :    input @xmath243    initialize @xmath245    repeat    attempt to decide @xmath243 and halt if the outcome    is either yes or no    if the outcome is unsure then increase @xmath245    one can therefore define a subclass @xmath30 of @xmath20 that contains the problems for which such an error - free algorithm exists ( with the appropriate polynomial cost bounds ) .    [",
    "def : pit ] a decision problem @xmath272 belongs to @xmath30 ( _ iterative polynomial cost _ ) when there exists a bss machine @xmath242 in @xmath20 such that for all @xmath243 with @xmath274 :    ( i ) : :    all computations of @xmath242 return an element in    @xmath385 and in the first    two cases this output is correct , and ( ii ) : :    there exist @xmath386 such that if    @xmath387 then all computations of    @xmath242 return an element in    @xmath383 .",
    "we refer to the scheme ( gs ) coupled with @xmath242 as a _ machine in _ @xmath30 .    unlike machines in @xmath29 , the halting time of a machine in @xmath30",
    "is not bounded .",
    "it increases with the input size and may be infinite ( i.e. , the machine may loop forever ) for ill - posed inputs . on the other hand ,",
    "outputs of @xmath30 machines are always correct .",
    "we have already described ( without saying so ) a problem in @xmath30 .",
    "* example  [ ex : polyhedral ] ( continued ) * it was shown in  @xcite ( see also  ( * ? ? ?",
    "* section  9.4 ) ) that the feasibility of a system @xmath388 , can be decided using an iterative algorithm that follows the general scheme  ( gs ) .",
    "the algorithm carries out @xmath389 iterations , each of them performing @xmath336 arithmetic operations .",
    "the value of @xmath236 is refined at each iteration and the finest value used by the algorithm satisfies @xmath390 these bounds show the problem is in @xmath30 .",
    "the following result is trivial .",
    "[ prop : propit ] we have @xmath391 .",
    "most of the literature in numerical analysis describes algorithms in a context of infinite precision .",
    "finite precision analyses are tedious and , more often than not , avoided .",
    "it is therefore worth to ponder on what the classes @xmath29 and @xmath30 become under the presence of infinite precision . for this , one replaces in the definition of these two classes and if needed , the bound for @xmath245 in the bound for the arithmetic cost ( so that the later are in terms of input s size ) and then disregards the requirement on @xmath245 altogether . because the assumption of infinite precision puts us on the standard bss realm , the classes thus obtained will be either new or already existing classes in the standard theory .    by definition ,",
    "the arithmetic cost of machines in @xmath29 is independent on the precision at hand or the input s condition .",
    "also , since we are assuming infinite precision , the issue of how large needs @xmath245 to be to guarantee a correct answer becomes irrelevant .",
    "all in all , condition plays no role and the following straightforward result shows that , under the presence of infinite precision , the class @xmath29 is , essentially , @xmath10 .",
    "[ prop : pdir = pr ] let @xmath333 .",
    "if @xmath392 then @xmath393 .",
    "conversely , if @xmath393 then @xmath394 . here",
    "@xmath395 is the constant function with value @xmath176 .",
    "consider now a computation in @xmath29 endowed with infinite precision . because the computations are error - free , the only role played by @xmath245 is in allowing more computing time at each iteration .",
    "and part  ( ii ) in definition  [ def : pit ] puts a bound on the total running time in terms of the input s condition ( or size ) .",
    "the complexity class emerging captures many algorithms described in the literature .",
    "we say that a problem @xmath272 is in @xmath396 when there exists a ( standard ) bss machine deciding @xmath272 whose running time on input @xmath240 is bounded by a polynomial in @xmath330 .",
    "this is a new class in the standard bss setting , the first one ( to the best of our knowledge ) to consider condition as a complexity parameter .",
    "one clearly has @xmath397 .",
    "problems in ( all versions of ) np are sets @xmath13 for which membership of an element @xmath62 to @xmath13 can be established through an `` easy '' proof @xmath22 .",
    "all definitions of the discrete class @xmath2 translate that @xmath22 is easy by imposing that the length of @xmath22 must be polynomially bounded in the length of @xmath62 ( in addition of the fact that one can verify that @xmath22 is a proof of @xmath398 in polynomial time in the length of @xmath399 ) . similarly for the class @xmath11 .",
    "the finite - precision context introduces additional considerations .",
    "not only the length of a proof @xmath22 will have to be appropriately bounded , it is clear that the condition of the pair @xmath399 will have to be so as well .",
    "the class @xmath25 is obtained by imposing these restrictions .",
    "even more so , we might want the magnitude of a proof @xmath22 , understood as how large or small can the absolute value of the components of @xmath22 be , to be bounded as well .",
    "this gives rise to the class @xmath24 .",
    "[ def : npro ] a decision problem @xmath400 belongs to @xmath24 ( _",
    "non - deterministic roundoff polynomial cost _ ) when there exist a decision problem @xmath401 , a finite - precision bss machine @xmath242 deciding @xmath401 in @xmath20 , and polynomials @xmath402 , such that for @xmath240 ,    ( i ) : :    if @xmath403 then there exists    @xmath404 , such that @xmath405 , and    @xmath406 , and ( ii ) : :    if @xmath407 then , for all @xmath123    we have @xmath408 and    @xmath409 .    here @xmath410 .",
    "[ ex : circfeas ] instances for @xmath411 are algebraic circuits @xmath347 ( with input variables @xmath412 ) . the problem is to decide whether there exists @xmath123 such that @xmath413 ( in which case , we say that @xmath347 is _ feasible _ ) . we take as condition number @xmath414 where @xmath415     \\displaystyle\\inf_{y\\in\\r^m}\\varrho_{\\eval}(\\mcc , y )      & \\mbox{otherwise . }",
    "\\end{array}\\right.\\ ] ] note that in the feasible case , @xmath416 is the condition of its best conditioned solution , and in the infeasible case , it is the condition of the worst conditioned point in @xmath417 .",
    "[ prop : circfeas_ro ] we have @xmath418 .",
    "we need to exhibit a problem @xmath401 and a machine @xmath242 as in definition  [ def : npro ] .",
    "for @xmath401 we take the problem @xmath366 , which we know is in @xmath20 by proposition  [ prop : circeval ] . for @xmath242",
    "we take the machine on the proof of that proposition ( which actually shows that @xmath374 ) .",
    "let @xmath347 be a circuit having @xmath103 input variables .",
    "if @xmath419 then there exist points @xmath413",
    ". choose @xmath420 among those , that additionally satisfies may not exists since the sup in the definition of @xmath421 may not be attained . as the modification to the proof in such",
    "a case is straightforward , for the sake of clarity and conciseness , we will write the proof for the case that @xmath420 exists . ]",
    "@xmath422 since @xmath423 the first requirement in definition  [ def : npro](i ) is trivially true .",
    "in addition , @xmath424 , which implies @xmath425 and hence the second requirement .    now assume that @xmath426 .",
    "then , for all @xmath123 , @xmath427 . the second requirement in definition  [ def : npro](ii ) is immediate since the definition of @xmath416 implies that , in the infeasible case , @xmath428 for all @xmath123 , and hence , that @xmath429 .    [ prop : pro - npro ] we have @xmath430 .",
    "let @xmath431 .",
    "let @xmath401 where @xmath432 and @xmath433 .",
    "let @xmath434 be any machine deciding @xmath400 in @xmath20 and @xmath242 the machine that with input @xmath435 runs @xmath434 on @xmath243 .",
    "then @xmath242 shows that @xmath436 and the pair @xmath437 establishes that @xmath438 ( with @xmath439 and @xmath440 ) .",
    "[ def : reduction_ro ] a _ @xmath20-reduction _ from @xmath400 to @xmath441 is a finite - precision machine @xmath442 which , given a point @xmath240 and a number @xmath443 , performs a discrete computation and returns a pair @xmath444 with @xmath445 polynomially bounded on @xmath258 and @xmath173 .",
    "in addition , we require the existence of some @xmath446 such that for all @xmath447 one has    ( i ) : :    @xmath448 , and ( ii ) : :    @xmath449 is polynomially bounded in    @xmath450 .",
    "if all of the above holds , we write @xmath451 .",
    "the notion of @xmath20-reduction is tailored to capture the basic property any polynomial - time reduction must have ( proposition  [ prop : reduct_ro ] below ) together with the peculiarities of finite - precision computations .",
    "[ prop : reduct_ro ] if @xmath451 and @xmath452 then @xmath431 .",
    "let @xmath442 be as in the definition above and @xmath453 be a finite - precision machine solving @xmath13 in @xmath20 .    by hypothesis ,",
    "the arithmetic cost of @xmath442 on input @xmath243 is bounded by a polynomial in @xmath258 and @xmath173 , and therefore , such a bound also holds for @xmath454 ( since the cost of writing the output is smaller than the total arithmetic cost ) .",
    "that is , there exist constants @xmath455 , such that @xmath456 also , there exists @xmath457 such that for any input @xmath243 , if @xmath458 then @xmath459 finally , we know that for some @xmath460 , and for any input @xmath461 , if @xmath462 then @xmath453 correctly decides whether @xmath463",
    ".    let @xmath464 be the machine given by the following code :    input @xmath243    compute @xmath465    run @xmath442 on input @xmath466 ; let @xmath461 be the returned point    run @xmath453 on input @xmath461 and accept iff @xmath453 accepts    we will prove that this machine decides @xmath400 in @xmath20 .",
    "we begin by observing that , by our choice of @xmath173 , we have @xmath467    we first deal with the complexity . we know that the arithmetic cost of @xmath468 is polynomial in @xmath258 and @xmath173 .",
    "since the latter is bounded by @xmath469 we are done with the cost of @xmath468 .",
    "and the cost of @xmath453 is also polynomially bounded in @xmath258 and @xmath469 since such a bound holds on @xmath454 and @xmath469 and , by  , the first term is polynomially bounded on @xmath258 and @xmath173 .",
    "we next deal with the precision needed . set @xmath470",
    "this value of @xmath245 is clearly polynomially bounded on @xmath330 .",
    "now , because of the last term within the brackets ( and  ) we have @xmath471 i.e. ,   holds .",
    "it follows that the simulation of @xmath468 on input @xmath466 returns @xmath461 satisfying  .",
    "in addition , we have @xmath472 we divide by cases .",
    "\\1 ) assume first that @xmath473 .",
    "then , using   @xmath474 the last inequality since @xmath475 .",
    "\\2 ) assume instead that @xmath476 .",
    "then , and here we use the first statement in  , @xmath477 in both cases the precision on the simulation of @xmath478 on input @xmath461 satisfies   and therefore we have both that @xmath463 iff @xmath403 and that @xmath453 correctly decides whether @xmath463 .",
    "it follows that @xmath464 correctly decides whether @xmath403 .",
    "[ def : npcro ] we say that a decision problem @xmath441 is _ @xmath25-hard _ when for any problem @xmath438 we have @xmath479 .",
    "we say that it is _",
    "@xmath25-complete _ when it is @xmath25-hard and it belongs to @xmath25 .",
    "[ thm : circfeas_ro ] the problem @xmath411 is @xmath25-complete .",
    "we have already seen in proposition  [ prop : circfeas_ro ] that @xmath411 is in @xmath24 .",
    "the hardness of @xmath411 applies arguments that have been used once and again , adapted to our context .",
    "consider a problem @xmath400 and a pair @xmath437 as in definition  [ def : npro ] certifying this problem in @xmath24 .",
    "let @xmath480 and @xmath103 be as in that definition .",
    "also , let @xmath481 and @xmath482 be the functions bounding the arithmetic cost and necessary precision of @xmath242 , as in definition  [ def : pro ] . without loss of generality , we will assume that @xmath482 is monotonically increasing .",
    "next fix an input @xmath240 , @xmath443 and let @xmath483 , @xmath484 , and @xmath485 .",
    "then , for all @xmath123 , all computations of @xmath242 with input @xmath435 and precision @xmath486 halt and return an output in @xmath487 within @xmath315 steps .",
    "one can construct a decision circuit @xmath347 of depth @xmath315 in the variables @xmath412 ( having the numbers @xmath488 associated to constant nodes ) which replicates these computations .",
    "more precisely , @xmath347 satisfies the following conditions :    ( a ) : :    the number of nodes of @xmath347 is polynomial in    @xmath489 and @xmath173 .",
    "( b ) : :    for all @xmath123 , there exist accepting    @xmath236-computations of @xmath242 with input    @xmath435 iff there exist @xmath236-evaluations    of @xmath347 at @xmath22 yielding    @xmath413 .",
    "similarly for rejecting computations and    @xmath490 .",
    "( c ) : :    the circuit @xmath347 is computed with cost polynomial in    @xmath489 and @xmath173 and this computation is    discrete .    the construction of this circuit is given with details in  @xcite so we wo nt repeat these details here .",
    "we may nonetheless summarize the main idea ( but , note , this requires familiarity with bss machines as presented in  @xcite from the part of the reader ) .    at any time during the computation of @xmath242 the internal state of the machine can be described by the current node @xmath491 of @xmath242 together with an element in its state space @xmath492 . if the computation performs @xmath315 steps then the values of the first two components are themselves bounded by @xmath315 and the only components of @xmath493 that ever play a role in it are the first @xmath315 .",
    "it follows that the relevant variable taking values during the computation are the following :    @xmath494 : for the values of the two integer components of the state space at time @xmath495 ,    @xmath496 : for the value of the current node at time @xmath495 ,    @xmath497 : for the value of the @xmath498th component of the state space at time @xmath316 , @xmath499 .",
    "the values of these variables at time @xmath500 are given by the initialization of the machine .",
    "for @xmath501 , these values depend on the values of a few ( at most 8 , see  @xcite ) variables at time @xmath502 . in addition , this dependence is simple in the sense that it can be computed by circuits @xmath503 , @xmath504 , @xmath505 , and @xmath506 , each of them with a small , bounded number of nodes .",
    "the circuit @xmath347 above is obtained by appropriately connecting these four families plus a series of constant nodes corresponding to the constants of @xmath242 , the components of @xmath62 , and the numbers @xmath236 and @xmath245 .",
    "a further small subcircuit is required , which returns @xmath247 if the computation of @xmath242 accepts and returns @xmath507 otherwise .",
    "it is straightforward to see that it satisfies conditions ( a ) , ( b ) , and  ( c ) above .",
    "the @xmath20-reduction is given by the machine @xmath442 which , given @xmath243 , returns @xmath347 .",
    "we will prove that this is indeed a reduction .",
    "the first condition in definition  [ def : reduction_ro ] , the fact that @xmath445 is polynomially bounded in @xmath258 and @xmath173 , is just property  ( c ) above .",
    "we therefore focus on the other two conditions in definition  [ def : reduction_ro ] , which require to find an appropriate lower bound for @xmath173 .",
    "let @xmath508 be the polynomial in definition  [ def : npro ] and @xmath509 then , for all @xmath510 , @xmath511 for a polynomial @xmath512 .",
    "take any @xmath173 satisfying @xmath513 note that @xmath514 is polynomially bounded in @xmath330 .",
    "we claim that requirements ( i ) and ( ii ) in definition  [ def : reduction_ro ] hold for these @xmath173 .",
    "to prove this claim , set the precision of @xmath242 to be @xmath515 ( and , accordingly , @xmath516 ) .",
    "the monotonicity of @xmath482 together with   imply that , for all @xmath510 , @xmath517 we now divide by cases .",
    "* case i : * @xmath403.in this case , there exists @xmath518 such that @xmath405 . since @xmath518 , inequality   holds true for @xmath420 .",
    "therefore , all @xmath236-computations of @xmath242 with input @xmath519 halt and accept .",
    "it follows from property  ( b ) above that all @xmath236-evaluations of @xmath347 at @xmath420 return @xmath520 .",
    "since this occurs , in particular , for the exact evaluation , we deduce that @xmath419 .",
    "this proves  ( i ) in definition  [ def : reduction_ro ] .",
    "furthermore , from the fact that all @xmath236-evaluations of @xmath347 with input @xmath420 yield @xmath521 we deduce that @xmath522 and therefore , that @xmath523 it follows that @xmath524 and therefore , that @xmath525 this bound is polynomial in @xmath450 , as we wanted .",
    "* case ii : * @xmath407.in this case , for every @xmath123 , we have @xmath408 and @xmath510 .",
    "again , for all @xmath123 , inequality   holds and we deduce that all @xmath236-computations of @xmath242 reject @xmath435 .",
    "it follows from property  ( b ) that the same result occurs for all @xmath236-evaluations of @xmath347 at @xmath22 . and",
    "since these evaluations include the exact one , we deduce that @xmath526 .",
    "this is true for all @xmath123 .",
    "therefore , @xmath347 is infeasible .",
    "this proves condition  ( i ) in definition  [ def : reduction_ro ] .    to prove condition",
    "( ii ) , we use again the fact that , for all @xmath123 , all @xmath236-evaluations of @xmath347 at @xmath22 yield the same output ( @xmath526 ) .",
    "this implies that , for all @xmath123 , @xmath527 and therefore , that @xmath528 .",
    "consequently , we have @xmath529 , and we conclude as in case  i.    the following result is an immediate consequence of proposition  [ prop : reduct_ro ] and theorem  [ thm : circfeas_ro ] .",
    "[ cor : pnpro ] we have @xmath530 .    the construction of a circuit as in the proof of theorem  [ thm : circfeas ] has been done in many situations : for discrete computations it is the basis of ladner s proof  @xcite of the @xmath1-completeness of the circuit evaluation problem ( in this case , condition ( c ) in the proof is strengthened to require that the computation of @xmath347 can be done with fewer resources , usually logarithmic space or polylogarithmic parallel time ) , in the bss model is the basis of a similar result over the reals  @xcite , and even in the additive bss model ( where no multiplications are allowed ) it is the basis of the proofs of some completeness results  @xcite .",
    "in fact , the universality of this construction has prompted bruno poizat  @xcite to define @xmath1 over an arbitrary structure as the class of sets decidable by families of circuits ( with nodes appropriate for the structure ) that can be constructed in polynomial time by a ( standard ) turing machine .",
    "the main open question in this development is , as one can expect , to decide whether @xmath531 . as usual , we believe this is not the case .      to define this class we must first provide a formal definition of the notion of magnitude .    given @xmath443 we consider the set @xmath532 composed of 0 plus all numbers of the form   with @xmath533 by construction ( recall  ) @xmath532 is a floating - point system whose elements @xmath50 satisfy @xmath534 and these upper and lower bounds are attained for some elements in @xmath532 .",
    "recall , the real intervals defined by  , along with @xmath58 , define the range of @xmath532 .    for @xmath535",
    "we define the _ magnitude _ of @xmath62 to be @xmath536 and for @xmath94 , @xmath537 .",
    "[ def : bnpro ] a decision problem @xmath400 belongs to @xmath24 ( _ bounded non - deterministic roundoff polynomial cost _ ) when there exist a decision problem @xmath401 , a finite - precision bss machine @xmath242 deciding @xmath401 in @xmath20 , and polynomials @xmath480 , such that for @xmath240 ,    ( i ) : :    if @xmath403 then there exists    @xmath404 , such that @xmath405 ,    @xmath406 , and    @xmath538 , and ( ii ) : :    if @xmath407 then , for all @xmath123    we have @xmath408 and    @xmath409 .    here @xmath410 .",
    "[ ex : circbfeas ] instances for @xmath539 are algebraic circuits @xmath347 ( with input variables @xmath412 ) . the problem is to decide whether there exists @xmath123 such that @xmath413 .",
    "what makes this problem different from @xmath411 is its condition number .",
    "here we take @xmath540 where @xmath541     \\displaystyle\\inf_{y\\in\\r^m}\\varrho_{\\eval}(\\mcc , y )      & \\mbox{otherwise . }",
    "\\end{array}\\right.\\ ] ] agai , in the feasible case , @xmath416 is the condition of its best conditioned solution but here we take into account the magnitude of the solution so that feasible circuits having only large - magnitude solutions are poorly conditioned .",
    "[ prop : bcircfeas_ro ] we have @xmath542 .    the proof is as that of proposition  [ prop : bcircfeas_ro ] just that now , in the feasible case , @xmath420 is chosen to satisfy @xmath543 the two first requirements in definition  [ def : bnpro](i ) are shown as in that proposition and for the third we have @xmath544 which shows this requirement ( with @xmath172 being the identity ) .    in the same manner",
    ", the following result is shown as proposition  [ prop : pro - npro ] .",
    "we have @xmath26 .",
    "the notions of @xmath24-hardness and @xmath24-completeness are defined as in definition  [ def : npcro ] .",
    "our main result here is the following .",
    "[ thm : circbfeas_ro ] the problem @xmath539 is @xmath25-complete .",
    "it follows that of theorem  [ thm : circbfeas_ro ] almost word by word .",
    "the only difference is in the arguments for case  i. the point @xmath518 such that @xmath405 now additionally satisfies that @xmath545 .",
    "this does not affect the proof that all @xmath236-evaluations of @xmath347 at @xmath420 return @xmath520 and hence that @xmath347 is feasible and that @xmath522 .",
    "but from the latter we now deduce @xmath546 it follows that @xmath547 and therefore , that @xmath548 this bound is clearly polynomial in @xmath450 , as we wanted .",
    "[ cor : pbnpro ] we have @xmath549 .",
    "the definitions of @xmath35 and @xmath36 are the obvious variations of that for @xmath25 and @xmath24 .",
    "[ def : npdir ] a decision problem @xmath441 belongs to @xmath35 ( _ non - deterministic direct polynomial cost _ )",
    "when there exist a decision problem @xmath401 , a finite - precision bss machine @xmath242 deciding @xmath401 in @xmath29 , and polynomials @xmath402 , satisfying properties  ( i ) and  ( ii ) of definition  [ def : npro ] .",
    "similarly for @xmath36 ( and definition  [ def : bnpro ] ) .    also , our first examples of problems in @xmath35 and @xmath36 follow from a quick look at the proof of proposition  [ prop : circfeas_ro ] .    [",
    "prop : circfeas ] we have @xmath550 and @xmath551 .",
    "the fact that the arithmetic cost of @xmath29 machines depends only on the input s length allows for a simpler form of reduction .",
    "[ def : reduction ] a _ @xmath1-reduction _ from @xmath400 to @xmath441 is a finite - precision machine @xmath442 which , given an input @xmath240 , performs a discrete computation and returns a pair @xmath444 satisfying the following :    ( i ) : :    @xmath448 , ( ii ) : :    @xmath445 is polynomially bounded on    @xmath258 , and ( iii ) : :    @xmath552 is polynomial in    @xmath450 .    if all of the above holds , we write @xmath553 .    [",
    "prop : reduct ] if @xmath553 and @xmath554 then @xmath555 .",
    "it is a simpler version of the proof of proposition  [ prop : reduct ] .",
    "hardness and completeness with respect of @xmath1-reductions are defined as in definition  [ def : npcro ] .",
    "[ thm : circfeas ] the problems @xmath411 and @xmath539 are @xmath35-complete and @xmath36-complete , respectively , with respect of @xmath1-reductions .",
    "again , proposition  [ prop : circfeas ] shows that @xmath411 is in @xmath35 and we only need to prove the hardness .",
    "the proof is , essentially , contained in that of theorem  [ thm : circfeas_ro ] . instead of a family of circuits parameterized by @xmath443",
    ", we deal with only one circuit whose depth is given by a polynomial in @xmath258 .",
    "property  ( iii ) in definition  [ def : reduction ] is clear .",
    "property  ( i ) is shown word by word as in theorem  [ thm : circfeas_ro ] .",
    "finally , for property  ( ii ) , the proof of this theorem shows that @xmath556 is polynomially bounded in @xmath557 . and",
    "since @xmath361 is polynomially bounded in @xmath258 , it follows that @xmath558 is polynomially bounded in @xmath330 .    similarly for @xmath539 and @xmath36 .",
    "the following result is an immediate consequence of proposition  [ prop : reduct ] and theorem  [ thm : circfeas ] .",
    "[ cor : pnp ] we have @xmath559 and @xmath560 .",
    "again , we leave open the truth of the equality @xmath561 . and",
    "again , we believe that equality does not hold .",
    "as we mentioned in the introduction , a crucial property of @xmath2 or @xmath11 is that they are subclasses of their corresponding exponential time classes . in the case of the reals",
    ", it is even known that the inclusion @xmath18 is strict  @xcite . the main result in this section shows a similar property for @xmath24 . before stating it",
    ", we define the general class @xmath21 of exponential cost , along with subclasses extending @xmath29 and @xmath30 .",
    "[ def : expro ] a decision problem @xmath272 belongs to @xmath21 ( _ roundoff exponential cost _ ) when there exists a finite - precision bss machine @xmath242 deciding @xmath13 with cost @xmath273 and such that    ( i ) : :    @xmath279 is bounded by a exponential function , and ( ii ) : :    the function @xmath329 is    bounded by an exponential in @xmath330 , for all    @xmath240 .    in both  ( i ) and  ( ii ) by exponential we understand a function of the kind @xmath562 for some @xmath563 and @xmath564 .    what we observed for definition  [ def : pro ] in remark  [ rem : defpro](i ) applies here _",
    "mutatis mutandis_. in particular , when @xmath279 in definition  [ def : expro ] is polynomially bounded we say that @xmath272 can be solved with _ polynomial precision _ , and we write @xmath565 .",
    "it is important to note that in this case the dependence of @xmath278 on @xmath245 may be exponential .",
    "the classes @xmath566 and @xmath567 are defined with the obvious modifications to definitions  [ def : p ] and  [ def : pit ] . in both cases ,",
    "if the required precision satisfies @xmath568 we say that the problem can be solved with _ polynomial precision_.    * example  [ ex : feas_pol ] ( continued ) * the main result in  @xcite shows that the problem mentioned in example  [ ex : feas_pol ] ( feasibility of real homogeneous polynomial systems ) is in @xmath567 .",
    "[ prop : exp_strict ] the inclusion @xmath569 is strict . the class @xmath566 is not included in @xmath570 .",
    "proposition  [ prop : hierarchy ] , with @xmath571 , @xmath572 a polynomial function , and @xmath573 , proves the first statement",
    ". a closer look at its proof reveals that the machine deciding the set @xmath288 there , with the functions above , is in @xmath566 .",
    "the second statement follows .",
    "the following results are shown as propositions  [ prop : reduct_ro ] and  [ prop : reduct ] .",
    "[ prop : reduct_exp ] if @xmath451 and @xmath574 then @xmath575 .",
    "a similar statement holds for the class @xmath570 .",
    "[ prop : reduct_exp_dir ] if @xmath553 and @xmath576 then @xmath577 .",
    "the fact that finite - precision computations need to be robust ( i.e. , they need to result in the same outcome ) when the precision is sufficiently large allows to reduce the search for solutions to the circuit feasibility problem to a search over the points of a sufficiently fine grid .",
    "we describe here these grids and the cost and accuracy of constructing them .",
    "we begin by recalling the floating - point system @xmath532 defined at the beginning of   [ sec : npro ] and observing that its unit roundoff is @xmath578 .",
    "a point in @xmath532 can be given by @xmath579 bits ( @xmath580 to write down @xmath77 along with @xmath580 more to write @xmath581 ) .",
    "we will denote by @xmath582 the element in @xmath532 associated to a point @xmath583 .",
    "consider the set @xmath584 .",
    "for any @xmath585 we write @xmath586 .    [",
    "prop : grid ] given @xmath587 we can compute @xmath588 with @xmath589 arithmetic operations . if @xmath590 and @xmath591 , the computed quantity @xmath592 satisfies @xmath593 furthermore , for all @xmath254 we can ensure @xmath594 if , in addition , @xmath595 .    to compute @xmath582 we need to compute both @xmath596 and @xmath597 .",
    "assume , without loss of generality , that @xmath598 .",
    "since @xmath599 , it has a binary decomposition @xmath600 ( here @xmath601 ) .",
    "hence @xmath602 since @xmath603 we can compute the collection of all the @xmath604 with @xmath173 multiplications , and with at most @xmath173 additional multiplications we obtain @xmath596 .",
    "the cost of computing @xmath596 is therefore @xmath589 .",
    "also , the mantissa @xmath605 can be computed with at most @xmath606 operations . for @xmath607 each @xmath608",
    "is obtained with a single division from @xmath609 and is added to the partial sum if @xmath610 .",
    "it follows that the arithmetic cost of computing @xmath582 is @xmath589 .",
    "we now consider precision issues .",
    "recall the computation of the mantissa .",
    "the quantity @xmath608 is obtained from @xmath609 with one division .",
    "it is easy to show by induction ( using lemma  [ lem : h31 ] ) that the computed quantity @xmath611 is of the form @xmath612 . from this",
    "bound , using that @xmath613 a further induction argument shows that the computed mantissa is of the form @xmath614 recall also the computation of @xmath582 .",
    "we compute each of the powers @xmath604 with @xmath615 multiplications and it is easy to see , using lemma  [ lem : h31 ] , that we obtain @xmath616 continuing using this lemma , we compute @xmath596 using   ( multiply the powers with smaller exponent first ) and obtain @xmath617 an extra multiplication with @xmath618 yields @xmath619 as claimed . assume finally that @xmath595 .",
    "then , @xmath620 and @xmath621 which finishes the proof .",
    "we can now show a key membership result for @xmath570 .",
    "[ thm : np_expro ] we have @xmath622 .    the general idea is to evaluate the circuit on the points of a canonical grid .",
    "we consider the machine @xmath464 given by the following code ( here @xmath102 is the number of input gates of the circuit @xmath347 ) :    input @xmath347    compute @xmath102    set @xmath623    for all @xmath624 do    compute @xmath625    evaluate @xmath626    accept if for one of these evaluations we obtain @xmath627    the arithmetic cost of @xmath464 is easily bounded . since @xmath532 contains @xmath628 numbers the grid @xmath629 contains @xmath630 points .",
    "to produce each of these points takes @xmath631 arithmetic operations ( proposition  [ prop : grid ] ) , and to evaluate @xmath347 at each of them an additional @xmath632 operations .",
    "it follows that the arithmetic cost of @xmath464 is bounded by @xmath633 , a bound we can write in the form @xmath634 , as we wanted .    to prove the bound on the precision needed , we assume that @xmath635 ( and hence , that the same holds for @xmath558 ) and take @xmath636 .",
    "we want to see that when @xmath242 works with this precision it correctly decides whether its input @xmath347 is in @xmath539 .",
    "note that for @xmath245 as above the unit roundoff of @xmath532 satisfies @xmath637 .",
    "we divide by cases .",
    "assume first that @xmath347 is feasible .",
    "in this case there exist points @xmath367 .",
    "let @xmath638 be one such point satisfying @xmath639 this implies that @xmath640 and therefore , that @xmath641 .",
    "that is , @xmath638 belongs to @xmath642 .",
    "this implies the existence of @xmath624 such that the corresponding @xmath643 satisfies , for @xmath87 , @xmath644 since @xmath591 and @xmath645 , proposition  [ prop : grid ] ensures that the computation of @xmath625 done by @xmath464 returns a point @xmath646 satisfying @xmath647 from this inequality , together with  , we deduce that @xmath648 the last inequality by  .",
    "consider the computation of @xmath464 corresponding to the point @xmath649 .",
    "it first produces the approximation @xmath646 of @xmath625 and then evaluates @xmath650 with a @xmath236-computation  @xmath651 .",
    "we can associate to this computation the evaluation of @xmath347 at @xmath638 that first approximates @xmath638 by @xmath646 and then approximates @xmath650 with @xmath651 .",
    "we claim that this is a @xmath652-evaluation .",
    "indeed , the relative errors in the first process are bounded by @xmath652 ( because of  ) and the second process is a @xmath652-evaluation of @xmath347 at @xmath646 ( we use @xmath653 and proposition  [ prop : e - eval ] ) . putting these bounds together",
    "the claim follows .",
    "the definition of @xmath652 implies that this evaluation returns @xmath654 .",
    "but this implies that the @xmath236-computation of @xmath464 above also yields @xmath654 .",
    "which in turn implies that @xmath464 accepts @xmath347 .",
    "assume now that @xmath347 is not feasible .",
    "in this case , for all @xmath94 , @xmath655 .",
    "this implies that , for all @xmath624 , the @xmath236-evaluation of @xmath347 at the computed approximation @xmath646 of @xmath625 yields @xmath656 .",
    "this implies that @xmath464 rejects @xmath347 .",
    "we can now conclude since @xmath657 this linear bound is well within the polynomial growth required in the definition of @xmath570 .",
    "essential to the fact the largest precision needed is linear in @xmath558 is the circumstance that the values of @xmath658 are computed by @xmath464 _ independently _ , for all the points @xmath22 in @xmath629 .",
    "this fact would also be central in the proof that @xmath24 is actually included in the subclass @xmath659 of @xmath21 of problems decidable in variable - precision parallel polynomial time .",
    "but we do nt deal with parallelism in this paper .",
    "we have @xmath660 and the inclusion is strict .",
    "the first statement readily follows from proposition  [ prop : reduct_exp ] .",
    "the second follows from proposition  [ prop : exp_strict ] .",
    "a major open question in this section is whether @xmath25 is included in @xmath21 or , equivalently , whether @xmath411 belongs to @xmath21 .",
    "we conjecture that this question has a ppositive answer .    the question above can be strengthened .",
    "we know that @xmath550 and that it is actually complete in this class for @xmath1-reductions .",
    "this raises the question of whether @xmath661 ( a membership that would imply @xmath662 ) .",
    "these last open questions are both related to a finite - precision analysis of existing algorithms .",
    "the feasibility of an algebraic circuit @xmath347 reduces to the feasibility of a boolean combination of the form @xmath663 where @xmath664 , @xmath665 is polynomially bounded in @xmath361 , @xmath666 is exponentially bounded in @xmath361 , and @xmath667 are straight - line programs of length polynomially bounded ( and hence degree exponentially bounded ) in @xmath361 . there exist a number of algorithms showing that the feasibility of such a system can be done , under the assumption of infinite precision , in time exponential in @xmath361  @xcite .",
    "hence , an accuracy analysis proving correctness of any of these algorithms under a @xmath245 bounded by an exponential function of @xmath361 and @xmath416 would imply membership of @xmath411 to @xmath35 ( and hence the inclusions @xmath662 and @xmath28 ) .",
    "but these finite - precision analyses are , as of today , not at hand .",
    "in section  [ sec : decision ] we defined decision problems as pairs of subsets and condition numbers and in doing so , we put essentially no requirement on what a condition number function is .",
    "remark  [ rem : coding ] in that section elaborated a little on this generality .",
    "we now elaborate more , focusing on a viewpoint that has accompanied the development of condition numbers practically since the origins of the notion of condition .",
    "these origins can be traced back to the condition number @xmath111 ( in example  [ ex : les ] ) introduced by turing  @xcite and von neumann and goldstine  @xcite to understand the loss of precision in the solution of systems of linear equations . for a system",
    "@xmath335 this is the number of correct figures in the entries of @xmath191 and @xmath171 minus the this number for the computed solution @xmath114 .",
    "it follows from   that this number is about @xmath668 .",
    "the fact , however , that @xmath111 is not known a priori ( and computing it from @xmath191 is a process with the same shortcomings as those of solving @xmath335 ) prompted von neumann and goldstine to propose studying @xmath669 as a random variable .",
    "their paper  @xcite exhibited some results in this direction assuming @xmath191 to be gaussian ( i.e. , having its entries independent and normally distributed ) .",
    "the state of the art for this assumption was shown by alan edelman  @xcite who proved that , for gaussian real or complex @xmath670 matrices , we have @xmath671 where @xmath672 in the real case and @xmath673 in the complex . as a consequence ,",
    "the loss of precision in the solution of @xmath335 is , on the average , of the order of @xmath674 .",
    "a different algorithm , analyzed in terms of a different condition number , would produce , for the same underlying probability measure a ( likely ) different dependence on @xmath102 and the comparison of these dependences translates into a comparison of the two algorithms efficiencies .    in 1997 , steve smale advocated studying the complexity of an algorithm in a similar manner .",
    "one would first derive complexity bounds in terms of input length and a condition number and then eliminate the latter by endowing the set of inputs of length @xmath102 with a probability measure ( usually the standard gaussian ) and bounding the expected value of this condition number ( or of its logarithm , if appropriate ) by a function of @xmath102 .",
    "one thus obtains _ average complexity bounds _ depending on the input length only .",
    "a convenient feature of this procedure is the fact that one is free to choose the condition number .",
    "different analyses for a computational problem may rely on different condition numbers ( sometimes for the same algorithm ! ) and algorithms may be compared by the average complexity bounds shown on these analyses .",
    "a case at hand is the polyhedral feasibility problem described in example  [ ex : polyhedral ] .",
    "we mentioned in this example that algorithmic solutions to this problem have been proposed whose analyses are based on a variety of condition numbers ( in addition to @xmath127 defined there ) .",
    "expected values for ( the log of ) these condition numbers allows for a comparison of the efficiency of these algorithmic solutions .",
    "we mention here that in  @xcite it is proved that for gaussian matrices @xmath118 @xmath675 this means that the contribution of the condition in the complexity bound mentioned in example  [ ex : polyhedral ] ( continued ) is dominated , on the average , by that in terms of the dimension of @xmath191 .",
    "the average complexity of the algorithm is @xmath676 .",
    "similarly for the average of the required @xmath245 , which turns to be @xmath677 .",
    "probabilistic analysis is therefore a way to reduce the arbitrariness in the choice of condition numbers .",
    "we wo nt go deeper into these ideas but point instead to the recent monograph  @xcite , where condition numbers are the central character and their probabilistic analysis a recurrent theme .",
    "we mentioned in  [ previous ] a stream of research that approaches numerical computations based on turing machines .",
    "detailed expositions of this research are in  @xcite .",
    "it is worth to point out the differences with the theory we have developed in this paper .",
    "a first major difference is made clear early on  @xcite where the author mentions that , despite the fact that `` the floating - point model is the usual model of computation in numerical analysis '' , it not the model used in the theory .",
    "indeed , a look at this theory reveals it to be closer to fixed - point arithmetic .",
    "a second major difference is the absence of the notion of conditioning .",
    "again , an examination of  @xcite reveals that this notion is absent in the book .",
    "none of these differences is in detriment of an approach that has undeniably provided understanding of some numerical computations .",
    "but they both row against the agenda cited at the end of   [ sec : back ] , namely `` to incorporate round - off error [ and ] condition numbers into [ the blum - shub - smale ] development . ''",
    "our theory attempts to stay close to the design and analysis of algorithms in numerical analysis ( as described in  @xcite ) .",
    "it is also close to discrete computation in the measure that our finite - precision computations can be simulated by turing machines . in these simulations",
    "real data , both machine constants and input , are replaced by floating - point numbers ( with unrestricted exponents ) and then operated .",
    "but these simulations do not preserve polynomial time because of the presence of unrestricted exponents ( for every polynomial bound , just reading a real number with a sufficiently large magnitude will have a cost beyond this bound ) .",
    "our choices for machine model , size , and cost were taken , as wished in  @xcite , `` to bring machines over @xmath0 closer to the subject of numerical analysis . ''",
    "we actually strived to bring them closer to the literature in numerical analysis ( where unrestricted exponents dominate ) .",
    "we nonetheless mention that a modification of our theory that makes it closer to the discrete framework is possible .",
    "one defines the size of @xmath240 by @xmath678 then , the basic version of polynomial time cost is obtained by writing @xmath679 in definition  [ def : pro ] .",
    "we have the feeling , though , that this theory would be more removed from numerical analysis thinking .",
    "we have therefore not pursued this avenue .",
    "d.  cheung , f.  cucker , and ye .",
    "y. linear programming and condition numbers under the real number computation model . in ph .",
    "ciarlet and f.  cucker , editors , _ handbook of numerical analysis _ , volume  xi , pages 141207 .",
    "north - holland , 2003 .",
    "a.  cobham .",
    "the intrinsic computational difficulty of problems . in _ international congress for logic , methodology , and the philosophy of science , _ edited by y. bar - hillel , north - holland _ _ , pages 2430 , 1964 .",
    "m.  shub and s.  smale .",
    "complexity of bzout s theorem ii : volumes and probabilities . in f.",
    "eyssette and a.  galligo , editors , _ computational algebraic geometry _ ,",
    "volume 109 of _ progress in mathematics _ , pages 267285 .",
    "birkhuser , 1993 ."
  ],
  "abstract_text": [
    "<S> we develop a theory of complexity for numerical computations that takes into account the condition of the input data and allows for roundoff in the computations . </S>",
    "<S> we follow the lines of the theory developed by blum , shub , and smale for computations over @xmath0 ( which in turn followed those of the classical , discrete , complexity theory as laid down by cook , karp , and levin among others ) . in particular , we focus on complexity classes of decision problems and paramount among them , on appropriate versions of the classes @xmath1 , @xmath2 and @xmath3 of polynomial , nondeterministic polynomial , and exponential time , respectively . </S>",
    "<S> we prove some basic relationships between these complexity classes and exhibit natural np - complete problems .    * * </S>"
  ]
}
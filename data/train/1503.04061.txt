{
  "article_text": [
    "fully homomorphic encryption ( fhe ) is a kind of encryption scheme with the homomorphic property .",
    "it enables arbitrary computation on encrypted plaintext , without decrypting them .",
    "fhe is fundamental in the theory and application of cryptology , such as secure multiparty computation , zero - knowledge proof , search encrypted data , outsourcing computing , copyright protection . for many years ,",
    "the researchers yearn for a construction of fhe scheme .",
    "since gentry @xcite sucessfully devised a fhe scheme , fhe becomes an important research direction in cryptology .",
    "quantum fully homomorphic encryption ( qfhe ) @xcite represents a quantum version of fhe . generally , qfhe is a kind of fhe scheme which is realized through quantum computing technology .",
    "similar with the classical fhe , a qfhe has four algorithms : key generation algorithm , encryption algorithm , decryption algorithm , evaluation algorithm .",
    "the difference between qfhe and fhe is the computing model .",
    "fhe is established under the model of polynomial - time probabilistic computation , while qfhe is defined by the model of polynomial - time quantum computation .    in 2012 , rohde et al.@xcite proposed a symmetric quantum homomorphic encryption scheme , which permits quantum random walk on encrypted quantum data .",
    "however , it is not fully homomorphic .",
    "later , in ref.@xcite , qfhe is formalized , and a weak symmetric scheme is constructed . by the scheme , the encrypted quantum data can be directly used in the quantum computation , without decrypting them in advance . however , the scheme is different from the commonly mentioned fhe , since the secret key is necessary during the computation on encrypted data .",
    "recently , yu et al.@xcite proved that , when the perfect security is required , quantum homomorphic encryption scheme would need at least @xmath0 qubits to store the encrypted result , where @xmath1 denotes the size of the set @xmath2 ( @xmath2 is the set of permitted computation ) .",
    "so , the qfhe scheme with perfect security would necessarily incur exponential storage overhead .",
    "the qfhe scheme proposed in ref.@xcite does not provide the security of cryptographic sense .",
    "the reason is as follow : it only hides @xmath3 bits ( @xmath4 is the size of the message ) , then the ratio of the hidden amount to the total amount approaches to 0 ( @xmath5 ) when @xmath4 approaches to infinity . broadbent and jeffery @xcite proposed three public - key quantum homomorphic encryption schemes ( not fully homomorphic ) , which are constructed by combining quantum one - time pad with classical fhe scheme .",
    "so , their efficiency and security are bounded by classical fhe scheme .    in modern cryptography",
    ", error - correcting code is an important tool in the design of cryptosystems , such as mceliece public - key encryption algorithm @xcite . as a special lattice",
    ", error - correcting codes can also be used to construct fhe scheme .",
    "similarly , in quantum cryptography , quantum error - correcting codes can be used to devise quantum cryptosystems , such as quantum authentication scheme @xcite and fujita s public - key encryption scheme @xcite .",
    "in addition , we also have proposed a quantum mceliece public - key encryption scheme @xcite based on error - correcting codes . in this article , we shall devise a qfhe scheme based on quantum fault - tolerant construction .",
    "css code is an important kinds of quantum error - correcting codes , and plays the fundamental role in fault - tolerant quantum computation .",
    "we devise qfhe scheme based on css codes , for the reason that it has good property in fault - tolerant quantum computation : after encoding quantum states through css codes , the quantum operation on logical qubit can be implemented by transversal quantum operations on physical qubits .",
    "for example , the fault - tolerant h gate and cnot gate can be implemented by transversal h gates and transversal cnot gates , respectively .",
    "the fault - tolerant s gate can be implemented by transversal @xmath6 gates .",
    "thus , when the code - length is known , the fault - tolerant h , cnot , s gates can be carried out without any information about the code . in fault - tolerant quantum computation ,",
    "the t ( or @xmath7 ) gate can also be implemented transversally , however , an ancillary state is necessary , which is relative to the css code .",
    "see ref.@xcite for more details .",
    "firstly , we should determine a value of security parameter @xmath4 . for a given value @xmath4",
    ", there exists @xmath8 kinds of @xmath9 $ ] quantum css codes",
    ". denote @xmath10 as the set of all @xmath9 $ ] quantum css codes .",
    "the size of @xmath10 is @xmath11 .",
    "next , we present a symmetric qfhe scheme based on the set @xmath10 .",
    "the secret key is selected from the set @xmath10 , and is used in the encryption / decryption algorithms .",
    "the scheme contains the following four algorithms .    *",
    "key generation algorithm + alice randomly selects a css code from the set @xmath10 .",
    "the css code is used as the secret key . denote it as @xmath12 .",
    "we suggest the following two ways to randomly select the secret key . 1 .",
    "similar to the key generation algorithm of fujita s public - key encryption scheme @xcite , alice selects a css code of generator matrix @xmath13 from @xmath10 , and randomly selects a nonsingular binary matrix @xmath2 and a permutation matrix @xmath14 ( the concrete parameter and form of these matrixes can be referred in @xcite ) .",
    "then , alice computes @xmath15 , which is a generator matrix of another css code in @xmath10 .",
    "@xmath16 is used as the secret key .",
    "2 .   in the other way",
    ", it uses a family of css codes with parameters @xmath17 and @xmath18 , denoted as @xmath19 @xcite .",
    "firstly , alice determines a css code @xmath20 , then randomly selects two random numbers @xmath17 and @xmath18 . the css code @xmath21 is used as the secret key . *",
    "encryption algorithm + according to the secret key @xmath12 ( a css code ) , alice performs css encoding on quantum plaintext @xmath22 , @xmath23 and each qubit is encoded into @xmath4 cipher qubits .",
    "the quantum circuit for encoding can be constructed from the standard form of the generator matrix for a stabilizer code @xcite .",
    "* evaluation algorithm + denote @xmath24 as bob s quantum computation and @xmath25 as its fault - tolerant version .",
    "bob does not know the secret key , which is the encoding scheme of css code .",
    "he performs fault - tolerant quantum computation @xmath25 on encoded quantum data @xmath26 , and obtains the encoded result @xmath27 , which equals to @xmath28 .",
    "the details are as follows .",
    "the set @xmath29 is a universal set of gates for quantum computation , so any quantum computation can be described by a quantum circuit consisting of the h , cnot , t gates .",
    "according to the quantum circuit , bob performs quantum computation on encrypted states in the following ways . 1 .",
    "if bob intends to perform an h ( or cnot ) gate on the @xmath30th ( or @xmath31th ) logical qubits of the plaintext @xmath22 , he should perform a fault - tolerant h ( or cnot ) gate on the corresponding physical qubits of the encrypted states @xmath26 .",
    "the fault - tolerant h ( or cnot ) has @xmath4 transversal h ( or cnot ) gates , denoted as @xmath32 ( or @xmath33 ) .",
    "@xmath34 2 .",
    "if bob intends to perform a t gate on the @xmath30th logical qubit of the plaintext @xmath22 , he needs an ancillary state @xmath35 which depends on the secret key ( or the css code ) @xmath12 .",
    "because @xmath12 is private for bob , the ancillary state must be provided by alice .",
    "alice can produce the ancillary state by encrypting a qubit @xmath36 : @xmath37 to avoid interactive process between alice and bob , the ancillary state @xmath35 should be prepared when alice performs the encryption algorithm , and be sent to bob together with the encoded state @xmath26 . according to the implementation of fault - tolerant @xmath38 gate @xcite , by using the ancillary state , the @xmath38 gate on the logical qubit can also be implemented by @xmath4 transversal cnot gates and @xmath4 transversal @xmath39 gates . *",
    "decryption algorithm + denote @xmath40 as the obtained result after finishing the evaluation algorithm on the encrypted state @xmath26 . according to the secret key @xmath12 ( a css code )",
    ", alice performs css decoding on quantum ciphertext @xmath40 @xmath41 then every @xmath4 cipher qubits are decoded into single plain qubit .",
    "the quantum circuit for decoding can be constructed from the standard form of the generator matrix for a stabilizer code @xcite .    until now",
    ", we have completely described a symmetric qfhe scheme .",
    "its correctness ( or @xmath42 ) can be deduced from fault - tolerant quantum computation @xmath43 where @xmath25 represents the quantum computation on encoded qubits or physical qubits , and @xmath24 represents the quantum computation on logical qubits .",
    "it is worth to notice that , the ancillary state @xmath35 depends on the css code , which is alice s secret key .",
    "thus , the ancillary state @xmath35 should be provided by alice , and their amount depends on the number of @xmath38 gates in bob s quantum computation @xmath24 . to avoid interactive computing , alice should provide enough ancillary states when she sends the encrypted state @xmath26 to bob .",
    "another thing that should be noticed is , our qfhe scheme is constructed based on quantum fault - tolerant construction , however , it is unnecessary to periodically perform error - correction precedure .",
    "it can be known from our construction that , the security is independent of any computational hard problems . finally , we analyze the security of the qfhe scheme .",
    "alice s secret key @xmath12 is a quantum css code in @xmath10 , the attacker does not know which css code is selected by alice",
    ". there may be two possible ways to attack the scheme : ( 1)decrypt the cipher state through css decoding , ( 2)decrypt the ancillary state @xmath35 through css decoding .",
    "in the first case , the attacker knows neither the plain state nor the css code @xmath12 .",
    "thus , even if he guesses the secret key @xmath12 correctly , he can not judge whether he has attacked successfully . in the second case",
    ", the attacker can decode the ancillary state , and compare the decoded state with @xmath36 , then he can know whether he succeed .",
    "so , the focus of the security is the total amount of @xmath9 $ ] quantum css codes . because the total number of @xmath9 $ ] quantum css codes is @xmath44 ,",
    "when n is large enough , the attack will succeed with an exponentially small probability . because the ancillary state contains some information about the css code @xmath12 , the attacker can determine @xmath12 from sufficiently more ancillary states .",
    "in the practice , alice should predict how many @xmath38 gates would be in the quantum circuit @xmath24 , and select a large enough security parameter @xmath4 .",
    "then the attacker can not obtain enough information about @xmath12 by measuring these ancillary states .",
    "the theoretical analysis of the security about the qfhe scheme will be given in the full paper .",
    "we have proposed a symmetric qfhe scheme . how to construct an asymmetric scheme ? in this section ,",
    "we try to solve the problem based on quantum css codes .",
    "similar to fujita s public - key cryptosystems @xcite , random errors are added to the encoded quantum state while encrypting the state . however , this would cause a problem : when bob performs nonlocal quantum computation on the cipher state , the random errors would propagate between different logical qubits ( a logical qubit is a block of physical qubits )",
    ". the errors in single logical qubit maybe increase and finally cause the failure of decryption .",
    "similar to the periodically error - correction in fault - tolerant quantum computation , we can solve the problem by periodical interaction : when bob finishes a period of quantum computation on encrypted data , he sends the outcome to alice ; alice decrypts it and encrypts it again , then she sends the new cipher state to bob ; bob begins the next period of quantum computation .    *",
    "key generation algorithm + alice determines the private key @xmath45 ( it is the same as ref.@xcite ) , and computes @xmath15 .",
    "@xmath16 can determine a css code .",
    "the css code can correct up to @xmath46 errors .",
    "then the public key is @xmath47 , where @xmath48 is a constant number . *",
    "encryption algorithm + according to the public key @xmath16 , alice encodes the quantum plaintext @xmath22 , and randomly adds @xmath49 pauli errors ( denoted as @xmath50 ) on the encoded state , @xmath51 then she sends the cipher state @xmath52 to bob .",
    "* evaluation algorithm + assume bob s quantum computation has been represented as a quantum circuit @xmath24 consisting of h , t , cnot gates .",
    "after receiving the cipher state @xmath52 from alice , bob begins to perform the quantum gates in his circuit according to the public key @xmath16 .",
    "for the different gates , he performs in the following different ways . 1 .   for the h gate",
    ", bob performs the fault - tolerant hadamard gate @xmath32 according to the css code @xmath16 .",
    "@xmath32 is @xmath4 transversal h gates .",
    "@xmath53 where @xmath54 denotes another @xmath49 pauli errors .",
    "the positions of the @xmath49 pauli errors are the same as @xmath50 .",
    "2 .   for the t gate",
    ", bob prepares an ancillary state @xmath35 according to the css code @xmath16 .",
    "then he performs the fault - tolerant t gate .",
    "3 .   for the cnot gate ,",
    "when bob performs a fault - tolerant cnot gate , the pauli errors will increase .",
    "when the total errors increase to @xmath46 , bob returns the outcome to alice . according to the private key @xmath45",
    ", alice decrypts it .",
    "then she encrypts it again , and sends to bob .",
    "bob continues the unfinished quantum computation . + performing the above interactive procedure until bob finishes the whole quantum circuit . * decryption algorithm + according to the private key @xmath45 , alice can decrypt the cipher state .",
    "see ref.@xcite for the details .",
    "this asymmetric scheme is computationally secure .",
    "its formal description and strict security analysis will be given in the full paper .",
    "in the asymmetric qfhe scheme , random pauli errors are introduced to realize the encryption , and the interaction between alice and bob is introduced to control the increase of the errors . to avoid the interactive process , one possible solution is the quantum bootstrapping , which is similar to the bootstrapping in classical fhe .",
    "the quantum bootstrapping is still under consideration now .",
    "the encoder of any quantum css code can not commute with arbitrary quantum operator . from the fault - tolerant quantum computation , we know the commutative rules between the h ( or cnot ) gate and any css encoder @xmath55 .",
    "@xmath56 however , in the universal set @xmath57 , only the t gate does not satisfy the above relation .",
    "so , an ancillary state is employed for the t gate in the symmetric scheme .",
    "while in the asymmetric scheme , the interactive process between alice and bob is used .",
    "we guess that , in the construction of qfhe scheme , it is necessary that alice provides ancillary computation for bob .",
    "based on quantum fault - tolerant construction , this paper presents two qfhe schemes . in the symmetric scheme ,",
    "the css code is used as the secret key for encryption and decryption .",
    "quantum fault - tolerant construction is adopted during the computing on encrypted states , however there has not any periodical error - correction and no interaction is needed .",
    "the security of the scheme does not depend on any computational hard problems . in the asymmetric scheme ,",
    "interaction between alice and bob is necessary , and the security relies on np - complete problem .",
    "this work was supported by the national natural science foundation of china under grant no.61173157 ."
  ],
  "abstract_text": [
    "<S> fully homomorphic encryption is a kind of encryption scheme , which enables arbitrary computation on encrypted data without accessing the data . </S>",
    "<S> we present the quantum version of fully homomorphic encryption scheme , which is constructed based on quantum fault - tolerant construction . </S>",
    "<S> two schemes are constructed . </S>",
    "<S> the first is a symmetric scheme , and the secret key is the quantum css code . in the scheme , </S>",
    "<S> when server performs quantum computation on the encrypted plaintext , some ancillary quantum states should be provided by client . </S>",
    "<S> the second is an asymmetric scheme , which contains the periodical interaction between client and server .    quantum cryptography , fully homomorphic encryption , quantum css codes , fault - tolerant quantum computation </S>"
  ]
}
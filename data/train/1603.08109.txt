{
  "article_text": [
    "gaussian and box filters typically work well in applications where the amount of smoothing required is small . for example , they are quite effective in removing small dosages of noise from natural images . however , when the noise floor is large , and one is required to average more pixels to suppress the noise , these filters begin to over - smooth sharp image features such as edges and corners .",
    "the over - smoothing can , however , be alleviated using some form of data - driven ( non - linear ) diffusion , where the quantum of smoothing is controlled using the image features .",
    "a classical example in this regard is the famous pde - based diffusion of perona and malik @xcite .",
    "the bilateral filter was proposed by tomasi and maduchi @xcite as a filtering - based alternative to the perona - malik diffusion .",
    "the bilateral filter has turned out to be a versatile tool that has found widespread applications in image processing , computer graphics , computer vision , and computational photography @xcite .",
    "more recently , the bilateral filter has received renewed attention in the context of image denoising @xcite .    in this paper , we consider a standard form of the bilateral filter where a gaussian kernel is used for range filtering , and a box or gaussian kernel is used for spatial filtering @xcite . in this",
    "setting , the bilateral filtering of an image @xmath5 , where @xmath6 is some finite rectangular domain of @xmath7 , is given by @xmath8 where @xmath9 the spatial filter is a gaussian : @xmath10 or a box : @xmath11 the domain @xmath12 of the spatial kernel is a square neighbourhood , @xmath13 \\times [ -w , w]$ ] , where @xmath14 for the gaussian filter .",
    "we refer the interested reader to @xcite for a detailed exposition on the working of the filter .",
    "we note that the bilateral filter has a straightforward extension to video and volume data .",
    "another natural extension is the cross ( or joint ) bilateral filter @xcite .",
    "while we will limit our discussion to the standard bilateral filter , the main ideas in this paper can also be applied to the above - mentioned extensions .",
    "it is clear that a direct computation of requires @xmath15 operations per pixel .",
    "in fact , the computation is slow for practical settings of @xmath16 . to address this issue ,",
    "researchers have come up with several fast algorithms @xcite - @xcite .",
    "most of these are based on some form of approximation , and provide various levels of compromise between speed and quality of approximation .",
    "one of the early algorithms for fast bilateral filtering involved the quantization of the image intensities , where the final output was obtained via the interpolation of the output of a set of linear filters @xcite .",
    "it was later shown that this approximation can be used to obtain a constant - time implementation which further improves its speed @xcite . in a different direction",
    ", it was observed in @xcite that the bilateral filter can be conceived as a linear filter acting in three - dimensions , where the three - dimensions are obtained by augmenting the image intensity to the spatial dimensions .",
    "this observation was used to derive a fast filtering in three - dimensions , which was then sampled to obtained the final output .",
    "we refer the interested reader to @xcite for a survey of fast algorithms for bilateral filtering .    the algorithms in @xcite are particularly relevant to the present work . here",
    "the authors proceed by approximating using polynomial and trigonometric functions , and demonstrate how the bilateral filter can be decomposed into a series of spatial filterings as result . as is well - known , since spatial box and gaussian filters can be implemented in constant - time using separability and recursion @xcite , the overall approximation",
    "can therefore be computed in constant - time .",
    "we propose a fast algorithm for computing which was motivated by the line of work in @xcite .",
    "in particular , similar to these papers , we present a novel approximation of that allows us to decompose the bilateral filter into a series of spatial convolutions .",
    "the fundamental difference between the above papers and the present approach is that , instead of approximating and then translating the approximation in range space , we directly approximate the translated gaussians appearing in . in particular , the computational advantages obtained using the proposed approximation are the following : + ( 1 ) for a fixed approximation order ( to be defined shortly ) , the proposed approximation requires half the number of spatial filterings required by the approximations in @xcite .",
    "+ ( 2 ) the proposed approximation does not involve the transcendental functions @xmath17 and @xmath18 which are used in @xcite .",
    "it only involves polynomials ( and just a single gaussian ) , and hence can be efficiently implemented on hardware @xcite .",
    "moreover , the rounding error is small when working with polynomials .    as will be demonstrated shortly , the proposed algorithm is generally faster and more accurate than yang s algorithm @xcite , which is currently considered to be the state - of - the - art @xcite .",
    "in particular , we perform an error analysis whereby we compare the output obtained using the proposed algorithm with that of the exact bilateral filter . due to the particular nature of the proposed approximation ,",
    "our analysis is much more simple than that carried out for yang s algorithm in @xcite .",
    "nevertheless , compared to yang s algorithm , we are able to establish a smaller bound on the number of spatial filterings required to achieve a given filtering accuracy .",
    "the latter is defined in terms of the error between the outputs of the bilateral filter and the fast algorithm ( this will be made precise in section [ fastalgo ] ) .",
    "to best of our knowledge , with the exception of @xcite , this is the only fast algorithm that comes with a provable guarantee on the quality of approximation . at this point , we note that the term `` accurate '' is used in the paper not just to signify that the output of the fast algorithm is visibly close to that of the target bilateral filter",
    ". it also has a precise technical meaning , namely , that we can control the approximation order to make the error between the outputs of the bilateral filter and the fast algorithm arbitrarily small .",
    "the rest of the paper is organized as follows .",
    "we present the proposed kernel approximation and the error analysis in section [ sec1 ] . in section [ fastalgo ]",
    ", we develop a fast constant - time algorithm arising from the gaussian - polynomial approximation .",
    "we then analyze the quality of approximation that can be achieved using our algorithm .",
    "this gives us a simple rule for tuning the approximation order for a given user - defined accuracy .",
    "we present exhaustive numerical results in section [ exp ] , and demonstrate the superior performance of the proposed algorithm over some of the existing algorithms .",
    "the present idea is to consider the translated kernel @xmath19 that appears in , where @xmath20 and @xmath21 .",
    "we can write @xmath22 for a fixed translation @xmath23 , this is a function of @xmath24 .",
    "notice that the first term is simply a scaling factor , while the second term is a gaussian centered at the origin .",
    "in fact , the second term essentially contributes to the bell shape of the translated gaussian .",
    "the third term is a monotonic exponential , which is increasing or decreasing depending on the sign of @xmath23 ; this term helps in translating the gaussian to @xmath25 .",
    "we assume ( without loss of generality , as will be explained at the start of section [ fastalgo ] ) that the dynamic range of the image is @xmath26 $ ] .",
    "that is , the arguments @xmath20 and @xmath21 in take values in @xmath26 $ ] .",
    "this means that the product @xmath27 appearing in takes values in @xmath28 $ ] .",
    "consider the taylor expansion of the exponential term about the origin : @xmath29 by dropping the higher - order terms , we obtain the following approximation of : @xmath30.\\ ] ] being the product of a bivariate gaussian and a polynomial , we will henceforth refer to as a _ gaussian - polynomial _ , where @xmath4 is its approximation",
    "_ order_. by construction , we have the pointwise convergence @xmath31 we would like to note that the above idea of splitting the kernel and approximating a part of its using taylor polynomials was employed in @xcite in the context of the fast gauss transform . to the best of our knowledge , this idea has not been exploited for fast bilateral filtering along the lines of the present work .    in figure",
    "[ onedimscan ] , we study the approximations corresponding to different @xmath4 .",
    "the fundamental difference between the taylor approximation in @xcite and the gaussian - polynomial approximation is that instead of approximating the entire gaussian , we approximate one of its component , namely the exponential function in .",
    "the intuition behind this is that the taylor polynomial blows up as one moves away from the origin .",
    "this makes it difficult to approximate the tail part of a gaussian using such polynomials . on the other hand ,",
    "the exponential in is monotonic , and hence can be closely approximated using polynomials .",
    "this point is explained with an example in figure [ comparison ] .",
    "in particular , notice in figure [ fb ] that the gaussian - polynomial approximation is quite precise over the range of interest , and is comparable to the raised - cosine approximation of same order @xcite .     using gaussian - polynomials @xmath32 with different @xmath4 .",
    "the bivariate functions @xmath33 and @xmath32 have been sampled along @xmath34 to generate a one - dimensional profile . ]      before explaining how we can use gaussian - polynomials to derive a fast bilateral filter in section [ fastalgo ] , we study the kernel error incurred by approximating using gaussian - polynomials .",
    "we will see in section [ fastalgo ] that a bound on the kernel error can in turn be used to bound the filtering accuracy of the fast algorithm .",
    "note that tells us that gaussian - polynomial can be used to approximate the range kernel with arbitrary accuracy .",
    "however , in practice , we will be required to use a gaussian - polynomial of some fixed order @xmath4 .",
    "a relevant question is the size of error incurred for a given @xmath4 ?",
    "a related question is that , given some error margin @xmath35 , how do we fix the smallest @xmath4 such that the corresponding error is within @xmath36 ?    to begin with , we define the error function @xmath37 the mathematical problem is one of bounding for fixed @xmath4 and @xmath38 . in this work , we consider the @xmath39 error given by @xmath40 this is also referred to as the worst - case or uniform error .",
    "we note that one can measure the error using other means , e.g. , using the @xmath41 metric .",
    "the reason why we choose the @xmath39 metric is that our ultimate goal is to quantify the @xmath39 accuracy of the final filtering arising from the approximation , and a bound on is sufficient for this purpose .",
    "moreover , computing the @xmath39 error is relatively simple .    using the inequality @xmath42",
    ", we can bound the first term in by @xmath43 .",
    "therefore , we have @xmath44 }   \\ \\psi_{n,\\sigma_r}(s),\\ ] ] where @xmath45.\\ ] ]    using , we obtain the following result . we note that this bound is stronger than that derived for the fast gauss transform in @xcite .",
    "[ prop_tightbound ] @xmath46    to arrive at , we proceed by writing as @xmath47 after differentiation , we get @xmath48 thus , is non - decreasing on @xmath49 $ ] , whereby we conclude that the maximum in is attained at @xmath50 .",
    "this establishes proposition [ prop_tightbound ] .",
    "to get an idea of the tightness of the bound in , we compare the mesh plots of and in figure [ errorbound ] when @xmath51 and @xmath52 .",
    "while there is a gap between the error and the corresponding bound at certain values of @xmath53 , the supremum of the latter ( which occurs at one of the boundaries as predicted above ) is nevertheless of the same order of magnitude as the supremum of the former .      having obtained a bound on the approximation error , we consider the problem of finding the smallest @xmath4 such that is within some allowed error margin @xmath54 .",
    "note that the quantity on the right in is simply the tail probability of a poisson random variable with parameter @xmath55 .",
    "we recall that a random variable @xmath56 taking values in @xmath57 is said to follow a poisson distribution with parameter @xmath58 if @xmath59 we can thus interpret the quantity on the right in as the probability @xmath60 . in this context",
    ", the leading question is the following : given @xmath54 , find the smallest @xmath4 such that @xmath61 .",
    "the advantage of expressing the problem in this form is that it brings to our disposal various tools for bounding the tail probability .",
    "for example , assuming that @xmath62 , we have the chebyshev bound @xcite : @xmath63 on the other hand , the chernoff bound @xcite when @xmath62 is given by @xmath64 numerical experiments suggest that for @xmath65 and for a range of values of @xmath36 ( to be reported shortly ) , the empirically computed @xmath4 is always larger than @xmath55 . under this assumption , we have the following estimate of the smallest @xmath4 using : @xmath66,\\ ] ] where @xmath67 $ ] is the smallest integer greater than or equal to @xmath68 .",
    ".comparison of the gaussian - polynomial order obtained using , where ( 1 ) @xmath69 is computed using the matlab function ` lambertw ` ( @xmath70 ) , ( 2 ) @xmath69 is given by ( @xmath71 ) , and ( 3 ) the series evaluation is refined using three newton iterations ( @xmath72 ) . [ cols=\"<,<,<,<,<,<,<,<,<,<\",options=\"header \" , ]     finally , we performed a detailed comparison of the proposed algorithm with yang s algorithm , which is widely considered to be the state - of - the - art algorithm . in the first comparison",
    ", we fixed an image and the parameters of the bilateral filter .",
    "the order @xmath4 was then varied and the corresponding error and run times were noted .",
    "the results are presented in table [ table1 ] .",
    "notice that the run time of gpa is consistently smaller than that of yang s algorithm for both the box and gaussian kernels .",
    "indeed , as remarked earlier , for a fixed order @xmath4 , yang s algorithm @xcite requires @xmath73 spatial filterings , while gpa requires only @xmath3 spatial filterings .",
    "thus , the runtime of gpa is about half of that of yang s algorithm .",
    "moreover , beyond a certain @xmath4 , gpa provides much better filtering accuracy .",
    "we performed a similar experiment by varying @xmath74 , the results of which are reported in table [ table2 ] .",
    "notice that the run time of yang s algorithm becomes prohibitively large when @xmath74 is small .",
    "we presented a novel fast algorithm for approximating the bilateral filter .",
    "the algorithm was shown to be both fast and accurate in practice using extensive experiments .",
    "the space and time complexity of the proposed algorithm is smaller than the state - of - the - art algorithm of yang @xcite , and , moreover , was shown to provide much better accuracy .",
    "we also performed an error analysis of the approximation scheme , and presented a rule for setting the approximation order that can guarantee the filtering accuracy to be within a desired margin . before concluding , we note that the proposed algorithm can be used to perform cross bilateral filtering , and can also be extended for the filtering of video and volume data .",
    "taking the logarithm of , we can restate the problem as one of finding the smallest integer @xmath75 such that @xmath76 where @xmath77 and @xmath78 .",
    "notice that @xmath79 and @xmath80 .",
    "hence , @xmath81 is strictly convex over @xmath82 with a minimum at @xmath83 .",
    "since @xmath84 when @xmath85 , we conclude that there exists some @xmath86 for which @xmath87 .",
    "the smallest integer solution of is precisely @xmath88 $ ] . to find @xmath89 , we solve the equations @xmath90 and @xmath86 .",
    "note that we can write @xmath90 as @xmath91 which is of the form @xmath92 , where @xmath93 .",
    "the inverse of the mapping @xmath94 is a well - studied function called the lambert w - function @xcite . in particular , the inverse ( which is generally multivalued ) in this case is given by @xmath95 where @xmath96 is one of the two branches of the lambert w - function @xcite .",
    "this gives us estimate .      in terms of ,",
    "we can write @xmath97 as @xmath98 on substituting in the numerator of , and exchanging the summations , we get @xmath99 which gives us where we have used . similarly , on substituting in the denominator of , and exchanging the summations , we get @xmath100 where @xmath101 is given by . cancelling the common exponential term from the numerator and denominator , we get .",
    "note that typically @xmath121 .",
    "for example , @xmath122 is in hundreds for a grayscale image , whereas , @xmath123 .",
    "therefore , it follows from that @xmath124 . on the other hand , from and , we have @xmath125 where @xmath126 and @xmath127 . since @xmath128 , @xmath129 therefore , @xmath130 .",
    "the authors thank dr .",
    "alessandro foi and the anonymous reviewers for their useful comments and suggestions ."
  ],
  "abstract_text": [
    "<S> the bilateral filter is a non - linear filter that uses a range filter along with a spatial filter to perform edge - preserving smoothing of images . </S>",
    "<S> a direct computation of the bilateral filter requires @xmath0 operations per pixel , where @xmath1 is the size of the support of the spatial filter . in this paper </S>",
    "<S> , we present a fast and provably accurate algorithm for approximating the bilateral filter when the range kernel is gaussian . </S>",
    "<S> in particular , for box and gaussian spatial filters , the proposed algorithm can cut down the complexity to @xmath2 per pixel for any arbitrary @xmath1 . </S>",
    "<S> the algorithm has a simple implementation involving @xmath3 spatial filterings , where @xmath4 is the approximation order . </S>",
    "<S> we give a detailed analysis of the filtering accuracy that can be achieved by the proposed approximation in relation to the target bilateral filter . </S>",
    "<S> this allows us to to estimate the order @xmath4 required to obtain a given accuracy . </S>",
    "<S> we also present comprehensive numerical results to demonstrate that the proposed algorithm is competitive with state - of - the - art methods in terms of speed and accuracy .    </S>",
    "<S> edge - preserving smoothing , bilateral filter , kernel , approximation , fast algorithm , error analysis , bounds . </S>"
  ]
}
{
  "article_text": [
    "a `` key '' is a semistandard tableau such that the entries in each column also appear in each column to the left .",
    "if a semistandard tableau @xmath1 is not a key itself , then the `` right ( left ) key '' of @xmath1 is a slightly greater ( lesser ) tableau ( via entrywise comparison ) that is associated to @xmath1 .",
    "perhaps the foremost result that uses the notion of the right key of a tableau is a summation formula [ 6 , thm .",
    "1 ] for demazure characters due to lascoux and schtzenberger [ 3 ] . recall a well known description of schur functions : given a partition @xmath2 , the schur function @xmath3 is equal to the sum of the weights of all semistandard tableaux of shape @xmath2 .",
    "more generally , given a highest weight @xmath4 and a permutation @xmath5 , the demazure character ( or `` key polynomial '' ) determined by @xmath4 and @xmath5 of a `` borel subalgebra '' of @xmath0 is equal to the sum of the weights of all semistandard tableaux of shape @xmath4 whose right keys are less than or equal to the key corresponding to @xmath5 .",
    "we now describe a method to quickly write down the right key of a given semistandard tableau @xmath1 .",
    "to do so we need only one special definition beyond the usual terminology .",
    "given a sequence @xmath6 , its _",
    "earliest weakly increasing subsequence _ ( ewis ) is @xmath7 , where @xmath8 and for @xmath9 the index @xmath10 is the smallest index such that @xmath11 .",
    "here is an english description of our method that a non - mathematician could apply : draw an empty young diagram that has the same shape as @xmath1 ; this diagram will receive the entries of the right key of @xmath1 . viewing the bottom entries of the columns of @xmath1 from left to right as forming a sequence , use two index fingers to find the ewis of this sequence . whenever an entry is added to the ewis ,",
    "put a dot above it .",
    "when this ewis ends , write its last member in the diagram for the right key of @xmath1 in the lowest available box in the leftmost available column .",
    "next , repeat the process as if the boxes with dots are no longer part of @xmath1 .",
    "once every box in @xmath1 has a dot , the leftmost column of the right key has been formed . to find the entries of the next column in the right key :",
    "ignore the leftmost column of @xmath1 , erase the dots in the remaining boxes , and repeat the above process .",
    "continue in this manner until the young diagram has been filled with the entries of the right key of @xmath1 .",
    "it can be seen that if there is more than one column of a given length , upon reaching this length one may ignore all but the rightmost of these columns . also , erasing the dots is unnecessary if there is one color of ink available for each distinct column length",
    ".    let @xmath1 be the semistandard tableau shown in figure 1 .",
    "first we find the ewiss that begin in the first column of @xmath1 .",
    "to display all six ewiss with just one figure , we use the over - decorations @xmath12{1.00,1.00,1.00}{1}}$ ] , @xmath13{1.00,1.00,1.00}{1}}$ ] , @xmath14{1.00,1.00,1.00}{1}}$ ] , @xmath15{1.00,1.00,1.00}{1}}$ ] , @xmath16{1.00,1.00,1.00}{1}}$ ] and @xmath17{1.00,1.00,1.00}{1}}$ ] to indicate their successive creations and removals .    & & & & + & & & & + & & & |8 + & |7 & +     1 & 6 & 6 & 6 & 6 + 4 & 7 & 7 & 7 & 9 + 6 & 8 & 8 & 9 + 7 & 9 & 9 + 8 + 9    so the six ewiss are ( 8,9,9 ) , ( 7,7,8 ) , ( 5,5,6,7 ) , ( 4,5,6 ) , ( 2,3,3,4 ) , and ( 1,1 ) .",
    "hence the entries of the 1st column of the right key of @xmath1 are 9 , 8 , 7 , 6 , 4 , and 1 . to find the ewiss for the later columns",
    ", we repeat the process ( after erasing the over - decorations ) as if the first column is no longer part of @xmath1 .",
    "the four ewiss for the rightmost length 4 column are ( 9,9 ) , ( 6,8 ) , ( 5,7 ) , and ( 3,4,6 ) . continuing the procedure for the length 3 column ,",
    "the three ewiss are ( 8,9 ) , ( 7 ) , and ( 4,6 ) . for the length 2 column ( and in fact the rightmost column of any ssyt ) , the ewiss are just the entries in the column .",
    "writing in the last members from each of these ewiss , we obtain the right key of t , which is also displayed in figure 1 .    this paper s main result , theorem 4.5 , states that the output of this method is in fact the right key of @xmath1 .",
    "the proof uses the jeu de taquin description of the right key presented in [ 2 ] .",
    "now we describe the above procedure with mathematical notation . a _ shape _",
    "@xmath18 is a sequence @xmath19 of positive integers such that @xmath20 for some @xmath21 .",
    "each member of a shape is a _ ( column )",
    "length_. the _ young diagram of @xmath18 _ is the diagram with @xmath22 top justified boxes in column @xmath23 for @xmath24 .",
    "semistandard tableau of shape @xmath18 _ is a filling of the young diagram of @xmath18 with positive integers such that the entries are strictly increasing down the columns and weakly increasing across the rows .",
    "henceforth we more simply write _ tableau ( of shape @xmath18 _ ) .",
    "( for lie theoretical purposes , one would bound both the lengths of a shape and the tableau entries by some fixed @xmath25 . )    fix a tableau @xmath1 of shape @xmath18 with @xmath26 columns .",
    "let @xmath27 denote the @xmath23th column of @xmath1 for @xmath24 .",
    "the tableau @xmath1 is a _ key _ if the entries in @xmath27 also appear in @xmath28 for @xmath29 . given a column @xmath30 , let @xmath31 denote its length .",
    "so @xmath32 .",
    "define @xmath33 to be the bottom entry of @xmath27 for @xmath24 .",
    "let @xmath34 for some @xmath35 denote the ewis obtained from @xmath36 .",
    "let @xmath37 denote the collection of boxes in the young diagram of @xmath1 that respectively contain the entries of @xmath38 .",
    "define @xmath39 to be the operator that removes a specified set of boxes ( and their entries ) from a diagram or tableau .",
    "it is easy to see that @xmath40 is a tableau .",
    "write @xmath41 to notate the result of attaching a single entry @xmath42 to the bottom of a column @xmath30 , and @xmath43 to notate the result of prepending a column @xmath30 to the left side of @xmath1 .",
    "the following doubly recursive definition specifies a tableau @xmath44 that has the same shape as @xmath1 ; here @xmath45 denotes the first column of @xmath44 and @xmath46 denotes the bottom entry of @xmath45 .",
    "set @xmath47 ( if @xmath1 is nonempty ; otherwise , for terminating purposes set @xmath48 ) . set @xmath49 .",
    "define @xmath50 .",
    "we call @xmath44 the _ scanning tableau _ of @xmath1 .",
    "the fact that @xmath44 is a key will follow from the main result of this paper .",
    "in this section we present a common definition of the right key of a tableau , as can be found in appendix 5 of [ 2 ]",
    ". we also present a specific method for calculating the right key that uses this definition . given a shape @xmath18 with @xmath26 lengths and a shape @xmath51 with @xmath52 lengths such that @xmath53 for @xmath54 , the _ skew diagram of shape @xmath55 _ is obtained by removing the diagram of @xmath51 from the diagram of @xmath18 .",
    "the sequence of column lengths of @xmath55 is @xmath56",
    ". some of the lengths in a skew diagram may be zero .",
    "skew tableau _ is a filling of a skew diagram with positive integers such that the entries are strictly increasing down the columns and weakly increasing along the rows .",
    "now we assume familiarity with the jeu de taquin ( jdt ) process , as in ( for example ) chapter 1 of [ 2 ] .",
    "rectification _ of a skew tableau [ 2 , p. 15 ] is the tableau that results from successively applying `` jdt slides '' to the `` inside corners '' of the skew tableau ( in any order ) until there are no inside corners left .",
    "it is known that the rectification of a skew tableau is unaffected by any jdt slide or `` reverse jdt ( rjdt ) slide '' .",
    "let @xmath57 be the skew tableau of some shape @xmath55 that is formed by arranging the @xmath26 columns @xmath58 according to @xmath51 .",
    "let @xmath59 and @xmath60 .",
    "using rjdt slides , one may shift all of the entries of each of @xmath61 down @xmath62 rows without otherwise modifying @xmath57 .    as @xmath63 runs from 1 to @xmath64 ,",
    "successively perform @xmath62 rjdt slides beginning directly under @xmath65 .",
    "it can be seen that for @xmath66 , each of these rjdt slides will pull each entry of @xmath65 down one row ( without affecting the columns that have already been pulled down ) .",
    "a skew tableau is _ frank _ if its lengths are a rearrangement of the lengths of the shape of its rectification .    *",
    "[ 2 , p. 208",
    "] * given a tableau @xmath1 and a skew diagram @xmath55 whose lengths are a rearrangement of the lengths of @xmath1 , there is a unique skew tableau on @xmath55 that rectifies to @xmath1 .",
    "the rightmost column of a frank skew tableau that rectifies to @xmath1 depends only upon the length of that column .",
    "fix a shape @xmath18 with @xmath26 lengths .",
    "let @xmath1 be a tableau of shape @xmath18 . for @xmath24",
    ", define @xmath67 to be the rightmost column of any frank skew tableau whose rightmost column has length @xmath22 and that rectifies to @xmath1 .",
    "right key of _",
    "@xmath1 is @xmath68 .",
    "note that @xmath69 has shape @xmath18 . also , it is known [ 2 , app .",
    "2 ] that @xmath69 is a key . before specifying a method to obtain the individual columns of @xmath69",
    ", we define an operation that will be iterated to produce each of them .",
    "let @xmath57 be a skew tableau of some shape @xmath55 formed from the @xmath26 columns @xmath70 , where @xmath51 has @xmath52 lengths .",
    "for any @xmath71 , set @xmath72 and define @xmath73 to be the number of boxes in @xmath74 that are attached to boxes in @xmath65 . for such @xmath63 , the process of successively shifting @xmath75 down @xmath73 rows and then successively performing @xmath76 rjdt slides on the outside corner of @xmath77 is called the _ jth length swap ( on @xmath57)_. note that the lengths of the resulting skew tableau are @xmath78 .",
    "let @xmath57 be a frank skew tableau of shape @xmath55 that rectifies to a tableau @xmath1 . for @xmath71 ,",
    "the @xmath63th length swap produces a frank skew tableau @xmath79 that also rectifies to @xmath1 .",
    "rectification is preserved by rjdt slides .",
    "since @xmath57 is frank and the lengths of @xmath79 are a rearrangement of the lengths of @xmath57 , we have that @xmath79 is also frank .",
    "let @xmath1 be a tableau of shape @xmath18 with @xmath26 columns and let @xmath80 . successively performing the @xmath23th , @xmath81st , ... , @xmath82st length swaps produces a frank skew tableau with lengths @xmath83 that rectifies to @xmath1 .",
    "its rightmost column is @xmath67 .",
    "apply lemma 3.4 as @xmath63 runs from @xmath23 to @xmath84 .",
    "the method of producing @xmath69 in this section parallels the construction of @xmath44 in section 2 .",
    "let @xmath18 be a shape with @xmath26 lengths . fix a tableau @xmath1 of shape @xmath18 .",
    "@xmath85 .",
    "proposition 3.5 implies that the calculation of @xmath67 does not involve the first @xmath86 columns of @xmath1",
    ". therefore the calculations for @xmath87 are independent of @xmath88 .",
    "we now focus on producing @xmath89 .",
    "define @xmath90 and for @xmath91 define @xmath92 to be the skew tableau obtained by performing the @xmath63th length swap on @xmath93 .",
    "the shape of @xmath93 has lengths @xmath94 .",
    "therefore @xmath95 .",
    "let @xmath96 denote the bottom entry of @xmath89 . recall that @xmath33 is the bottom entry of @xmath27 for @xmath24 , and that @xmath97 .",
    "for @xmath98 , let @xmath99 denote the bottom entry of @xmath100 .",
    "since @xmath101 , we have that @xmath102 .",
    "note that if @xmath103 , then @xmath104 and hence @xmath105 . for @xmath91 ,",
    "the entry @xmath106 produced by the @xmath63th length swap on @xmath93 is one of two possible entries :    let @xmath91 .",
    "+ ( i ) if @xmath107 , then @xmath108 .",
    "+ ( ii ) otherwise , @xmath109 .    let @xmath91 . the difference in lengths of the two rightmost columns involved in the @xmath63th length swap on @xmath93 is @xmath110 .",
    "first suppose @xmath107 . in this case , by the semistandard conditions @xmath111 is greater than every entry in @xmath112 except perhaps @xmath113 .",
    "thus the first @xmath114 rjdt slides of the @xmath63th length swap will each pull @xmath111 down one row .",
    "then the @xmath76th rjdt slide will compare @xmath113 to @xmath111 and also pull @xmath111 down .",
    "hence @xmath108 . otherwise , @xmath115 . in this case",
    ", @xmath113 is greater than every entry in @xmath112 . as a result",
    ", the @xmath76th rjdt slide will move @xmath113 to the right regardless of what it is compared to .",
    "thus @xmath109 .",
    "note that _",
    "( ii ) _ happens precisely when the final rjdt slide of the @xmath63th length swap moves the bottom entry of @xmath116 across to become the bottom entry of @xmath117 . in this case , the ewis @xmath38 of @xmath118 `` skips '' @xmath119 . the complementary possibility _ ( i ) _ occurs precisely when a new member is appended to @xmath38 .",
    "hence :    @xmath120 .",
    "apply these two observations as @xmath63 run from 1 to @xmath84 in lemma 4.2 to see that @xmath121 is the last member of @xmath38 .",
    "recall that @xmath62 denotes the collection of boxes containing @xmath38 :    @xmath122 .",
    "let @xmath91 .",
    "we need to show that the entries of @xmath117 above @xmath106 determined by the @xmath63th length swap on @xmath93 are unaffected by the presence of the entries of @xmath38 in @xmath116 .",
    "( these entries are initially located at @xmath62 in @xmath123 . )",
    "it is clear that : @xmath124 for @xmath91 , the presence of @xmath113 will not affect whether or not the entries in @xmath116 above it will be pulled to the right during the @xmath63th length swap . since @xmath125 , it can be safely removed from @xmath1 ( and its successor skew tableaux ) .    from lemma 4.2 ,",
    "all but the first member of @xmath38 arise as @xmath111 for some @xmath91 .",
    "suppose @xmath126 and @xmath127 . by the proof of lemma 4.2 we have that @xmath111 was pulled straight down from the bottom of @xmath128 to the bottom of @xmath117 .",
    "so the first move in every rjdt slide executed in the @xmath63th length swap pulls @xmath111 down 1 row .",
    "then the remainder of the rjdt slide continues as it would have if @xmath111 was not originally part of @xmath93 .",
    "now @xmath127 , so by @xmath124 it can be safely removed from @xmath1 ( and its successor skew tableaux ) .",
    "similar reasoning shows that @xmath121 can be safely removed when @xmath129 .",
    "so we see that the presence of the entries in @xmath38 does not affect the determination of @xmath130 .",
    "thus once @xmath96 is found , we can remove all of @xmath62 ( and @xmath38 ) from @xmath1 and then find the rest of @xmath89 iteratively without the entries of @xmath38 being present .",
    "let @xmath1 be a tableau .",
    "the right key @xmath69 is equal to the scanning tableau @xmath44 .",
    "the combination of corollary 4.3 , lemma 4.4 , and lemma 4.1 agrees with the doubly recursive definition of @xmath44 .",
    "here is a method to write down the left key of a given semistandard tableau @xmath1 : draw an empty young diagram that has the same shape as @xmath1 .",
    "let @xmath26 be the number of columns of @xmath1 .",
    "let @xmath131 be the sequence defined as follows : let @xmath132 be the bottom entry of the @xmath26th column . for @xmath29 , let @xmath133 be the largest entry in the @xmath134th column that is less than or equal to @xmath135 .",
    "note that by the semistandard row condition , at least one such entry is guaranteed to exist .",
    "put a dot above each entry of @xmath136 .",
    "place @xmath137 in the lowest available box in the rightmost available column of the young diagram . next , repeat the process as if the boxes with dots and all boxes below them are no longer part of @xmath1 .",
    "once such a sequence has been found for each entry in the rightmost column of @xmath1 , the rightmost column of the left key of @xmath1 has been determined . to find the next column in the left key , ignore the rightmost column of @xmath1 , erase all the dots , and repeat the above process .",
    "continue in this manner until the entire young diagram has been filled .",
    "the proof that the tableau produced by this method is the left key of @xmath1 is similar to the proof of the analogous statement concerning the right key given in this paper .",
    "in fact the proof is simpler , since the sequence produced above necessarily contains exactly one entry from each column to the left of its starting point .",
    "lascoux and schtzenberger introduced [ 3 ] the notions of right and left key in definition 2.9 and developed their relation to demazure characters on pp .",
    "132 - 138 .",
    "the paper [ 6 ] by reiner and shimozono explicitly stated the summation formula for the `` key polynomial '' in theorem 1 .",
    "fulton s book [ 2 ] appeared in 1997 . in [ 4 ] lenart stated ( on p. 280 ) that one can use `` reverse column insertion '' to produce the left key of a tableau , restates [ 6 , thm .",
    "1 ] as theorem 4.1 , and discusses how this result may be proved using material from [ 3 ] . in [ 1 ] , aval showed how to compute the left key of a tableau using manipulations of `` sign matrices '' .",
    "then he obtained the right key from the left key by using the notion of `` complement '' of a young tableau .",
    "mason presented a method in [ 5 ] to produce the right key of a tableau using `` semiskyline augmented fillings '' .",
    "both [ 1 ] and [ 5 ] had larger goals than key computations that led to these procedures .    the author would like to thank sarah mason for her remarks and encouragement .",
    "reading [ 5 ] led to the creation of the method presented in this paper , whose original proof referred to her corollary 5.1 .",
    "the author would also like to thank vic reiner for suggesting the possibility of the more direct proof given in this paper .",
    "in addition , both mark shimozono and jim haglund provided valuable perspective to the author s advisor through conversations .    finally , the author would like to thank his advisor bob proctor for suggesting many of the aspects of this presentation and for his repeated encouragement . among others ,",
    "these expositional aspects include the english description of the scanning method , notating shapes with column lengths , and structuring the proof of the main result to parallel the scanning method ."
  ],
  "abstract_text": [
    "<S> the right key of a semistandard young tableau is a tool used to find demazure characters for @xmath0 . </S>",
    "<S> this paper gives methods to obtain the right and left keys by inspection of the semistandard young tableau .    </S>",
    "<S> october 27 , 2011 </S>"
  ]
}
{
  "article_text": [
    "vertex deletion problems include some of the best studied np - hard problems in theoretical computer science , including vertex cover or feedback vertex set . in general , the problem asks whether it is possible to delete at most @xmath0 vertices from a graph so that the resulting graph belongs to a specified graph class . while these problems are studied in a variety of contexts , they are of special importance for the parameterized complexity paradigm  @xcite , which measures the performance of algorithms not only with respect to the input size but also with respect to an additional numerical parameter .",
    "vertex deletion problems allow a highly natural choice of the parameter ( specifically , @xmath0 ) , and many vertex deletion problems are known to admit so - called _ single - exponential fixed - parameter algorithms _ , which are algorithms running in time @xmath1 for input size @xmath2 and some constant @xmath3 .    over the past years , the parameterized complexity of vertex deletion to a plethora of graph classes has been systematically researched .",
    "however , there still remain a few important classes where the existence of a single - exponential fixed - parameter algorithm remains open .",
    "one such class has , until now , been the class of _ distance - hereditary graphs _  @xcite ( also called _ completely separable graphs _  @xcite ) .",
    "distance - hereditary graphs have several equivalent characterizations ; for instance , they are the graphs where every induced path is a shortest path .",
    "but perhaps the main reason why distance - hereditary graphs are particularly important in the context of vertex deletion problems is their connection to the structural parameter _",
    "rank - width _  @xcite . while treewidth-@xmath4 vertex deletion vertex deletion asks whether it is possible to delete @xmath0 vertices so that the resulting graph has treewidth at most @xmath4 .",
    "] is known to admit a single - exponential fixed - parameter algorithm for every fixed @xmath4  @xcite , the existence of such algorithms for the analogous rank - width-@xmath4 vertex deletion is a challenging open problem .",
    "since distance - hereditary graphs are exactly the graphs of rank - width @xmath5  @xcite , a single - exponential fixed - parameter algorithm for distance - hereditary vertex deletion represents the first step towards handling rank - width-@xmath4 vertex deletion .",
    "0.2 cm    the main result of this paper is an @xmath6-time algorithm for distance - hereditary vertex deletion , solving an open problem of kant ' e , kim , kwon , and paul  @xcite .",
    "the core of our approach exploits two distinct characterizations of distance - hereditary graphs : one by forbidden induced subgraphs ( obstructions ) , and the other by admitting a special kind of split decomposition  @xcite .",
    "the algorithm can be conceptually divided into three parts .    1 .",
    "* iterative compression*. this technique allows us to reduce the problem to the easier disjoint distance - hereditary vertex deletion , where we assume that the instance additionally contains a certain form of advice to aid us in our computation . specifically , this advice is a vertex deletion set @xmath7 to distance - hereditary graphs which is disjoint from and slightly larger than the desired solution .",
    "* branching rules*. we exhaustively apply two branching rules to simplify the given instance of disjoint distance - hereditary vertex deletion . at a high level , these branching rules allow us to assume that the resulting instance contains no small obstructions and furthermore that certain connectivity conditions hold on @xmath8 $ ] .",
    "* simplification of split decomposition*. we compute the split decomposition of @xmath9 and exploit the properties of our instance @xmath10 guaranteed by branching to prune the decomposition . in particular , we show that the connectivity conditions and non - existence of small obstructions mean that @xmath7 must interact with the split decomposition of @xmath9 in a special way , and this allows us to identify irrelevant vertices in @xmath9 .",
    "this is by far the most technically challenging part of the algorithm .",
    "a more detailed explanation of our algorithm is provided in section  [ sec : general ] , after the definition of required notions .",
    "we complement this result with an algorithmic lower bound which rules out a subexponential fixed - parameter algorithm for distance - hereditary vertex deletion under well - established complexity assumptions .",
    "the set of induced subgraph obstructions for distance - hereditary graphs consists of three small graphs , and induced cycles of length at least @xmath11 .",
    "we remark that heggernes et al .",
    "@xcite showed that the problem asking whether it is possible to delete @xmath0 vertices so that the resulting graph has no induced cycles of length at least @xmath11 is w[2]-hard .",
    "therefore , one can not simply obtain a single - exponential fixed - parameter algorithm for distance - hereditary vertex deletion   using the problem of hitting induced cycles of length at least @xmath11 .",
    "the paper is organized as follows .",
    "section  [ sec : prelim ] contains the necessary preliminaries and notions required for our results . in section  [ sec : general ] , we set the stage for the process of simplifying the split decomposition , which entails the definition of disjoint distance - hereditary vertex deletion , introduction of our branching rules , and a few technical lemmas which will be useful throughout the later sections .",
    "section  [ sec : rules ] then introduces and proves the safeness of @xmath12 polynomial - time reduction rules ; crucially , the exhaustive application of these rules guarantees that the resulting instance will have a certain `` inseparability '' property . in section  [ sec : twinclass ] , we introduce and prove the safeness of our final reduction rule using this inseparability property .",
    "finally , the proof of our main result as well as the corresponding lower bound are presented in section  [ sec : completing ] .",
    "section  [ sec : completing ] also illustrates one potential application of our result : we show that a vertex deletion set to distance - hereditary graphs can be used as a parameter which allows single - exponential fixed - parameter algorithms for classical np - hard problems .",
    "all graphs in this paper are simple and undirected . for a graph @xmath10 , let @xmath13 and @xmath14 denote the vertex set and the edge set of @xmath10 , respectively . for @xmath15 , let @xmath8 $ ] denote the subgraph of @xmath10 induced on @xmath7 . for @xmath16 and @xmath15 , let @xmath17 be the graph obtained from @xmath10 by removing @xmath18 , and let @xmath9 be the graph obtained by removing all vertices in @xmath7 . for @xmath16 , the set of neighbors of @xmath18 in @xmath10",
    "is denoted by @xmath19 .",
    "for @xmath20 , let @xmath21 denote the set of all vertices in @xmath22 that have a neighbor in @xmath23 .",
    "the _ length _ of a path is the number of edges on the path . for @xmath16 and a subgraph @xmath24 of @xmath25",
    ", we say @xmath18 is adjacent to @xmath24 if it has a neighbor in @xmath24 .",
    "a _ star _ is a tree with a distinguished vertex , called the _ center _ , adjacent to all other vertices .",
    "complete graph _ is a graph with all possible edges .",
    "two vertices @xmath26 in a graph @xmath10 are called _ twins _ if they have the same set of neighbors on @xmath27 . for two vertex sets @xmath23 and @xmath28",
    ", we say that    * @xmath23 is _ complete _ to @xmath28 if for every @xmath29 , @xmath30 , @xmath31 is adjacent to @xmath32 , * @xmath23 is _ anti - complete _ to @xmath28 if for every @xmath29 , @xmath30 , @xmath31 is not adjacent to @xmath32 .",
    "a graph @xmath10 is called _ distance - hereditary _ if for every connected induced subgraph @xmath24 of @xmath10 and every @xmath33 , the distance between @xmath18 and @xmath34 in @xmath24 is the same as the distance between @xmath18 and @xmath34 in @xmath10 .",
    "for instance , the induced cycle @xmath35 is not distance - hereditary , because the distance from @xmath36 to @xmath37 is @xmath38 , but if we take an induced subgraph on @xmath39 , then the distance becomes @xmath40 .",
    "this graph class was first introduced by howorka  @xcite , and deeply studied by bandelt and mulder  @xcite .",
    "there are several other , equivalent characterizations of distance - hereditary graphs .",
    "one of the most prominent ones links it to the structural parameter _",
    "rank - width _",
    "@xcite ; specifically , distance - hereditary graphs are precisely the graphs of rank - width @xmath5  @xcite . however , in this paper we will exploit two other characterizations of the graph class : one by forbidden induced subgraphs ( given below ) , and one via split decompositions ( given in the following subsection ) .    the house , the gem , the domino graphs are depicted in figure  [ fig : obsdh ] .",
    "a graph isomorphic to one of the house , the gem , the domino , and induced cycles of length at least @xmath11 will be called a _ distance - hereditary obstruction _ or shortly a _",
    "dh obstruction_. a dh obstruction with at most @xmath41 vertices will be called a _",
    "small dh obstruction_. note that every dh obstruction does not contain any twins .",
    "a graph is distance - hereditary if and only if it contains no dh obstructions as induced subgraphs .",
    "we state an observation which will be useful later on .",
    "[ obs : sub ] for any dh obstruction @xmath24 and any edge @xmath42 in @xmath24 , it holds that the graph @xmath43 obtained by subdividing @xmath42 also contains a dh obstruction as an induced subgraph .",
    "the following lemma will be used to find dh obstructions later on .",
    "[ lem : dhobs ] let @xmath10 be a graph obtained from an induced path of length at least @xmath40 by adding a vertex @xmath18 adjacent to its end vertices where @xmath18 may be adjacent to some internal vertices of the path .",
    "then @xmath10 has a dh obstruction containing @xmath18 .",
    "in particular , if the given path has length at most @xmath44 , then @xmath10 has a small dh obstruction containing @xmath18 .",
    "we follow the notations in @xcite .",
    "split _ of a connected graph @xmath10 is a vertex partition @xmath45 of @xmath10 such that @xmath46 , and @xmath47 is complete to @xmath48 .",
    "splits are also called _ 1-joins _ , or simply _ joins _  @xcite . a connected graph @xmath10",
    "is called a _ prime graph _ if @xmath49 and it has no split . a connected graph @xmath50 with a distinguished set of edges @xmath51",
    "is called a _ marked graph _ if the edges in @xmath51 form a matching and each edge in @xmath51 is a cut edge .",
    "an edge in @xmath51 is called a _ marked edge _ , and every other edge is called an _ unmarked edge_. a vertex incident with a marked edge is called a _ marked vertex _ , and every other vertex is called an _ unmarked vertex_. each connected component of @xmath52 is called a _ bag _ of @xmath50 .    when @xmath10 admits a split @xmath45 , we construct a marked graph @xmath50 on the vertex set @xmath53 such that    * for vertices @xmath54 with @xmath55 or @xmath56 , @xmath57 if and only if @xmath58 , * @xmath59 is a new marked edge , * @xmath60 is anti - complete to @xmath61 , * @xmath62 is complete to @xmath63 and @xmath64 is complete to @xmath65 ( with unmarked edges ) .    the marked graph @xmath50 is called a _ simple decomposition of _ @xmath10 .",
    "split decomposition _ of a connected graph @xmath10 is a marked graph @xmath50 defined inductively to be either @xmath10 or a marked graph defined from a split decomposition @xmath66 of @xmath10 by replacing a connected component @xmath24 of @xmath67 with a simple decomposition of @xmath24 .",
    "see figure  [ fig : example ] for an example of a split decomposition .",
    "we note that when @xmath50 is a split decomposition of a graph @xmath10 and @xmath68 are two vertices in @xmath10 , @xmath69 if and only if there is a path from @xmath70 to @xmath18 in @xmath50 where its first and last edges are unmarked , and an unmarked edge and a marked edge alternatively appear in the path  ( * ? ? ?",
    "* lemma 2.10 ) .",
    "naturally , we can define a reverse operation of decomposing into a simple decomposition ; for a marked edge @xmath71 of a split decomposition @xmath50 , _ recomposing @xmath71 _ is the operation of removing two vertices @xmath72 and @xmath73 and making @xmath74 complete to @xmath75 with unmarked edges .",
    "it is not hard to observe that if @xmath50 is a split decomposition of @xmath10 , then @xmath10 can be obtained from @xmath50 by recomposing all marked edges .",
    "note that there are many ways of decomposing a complete graph or a star , because every its non - trivial vertex partition is a split .",
    "cunningham and edmonds @xcite developed a canonical way to decompose a graph into a split decomposition by not allowing to decompose a bag which is a star or a complete graph .",
    "a split decomposition @xmath50 of @xmath10 is called a _",
    "canonical split decomposition _ if each bag of @xmath50 is either a prime graph , a star , or a complete graph , and every recomposing of a marked edge in @xmath50 results in a split decomposition without the same property .",
    "it is not hard to observe that every canonical split decomposition has no marked edge linking two complete bags , and no marked edge linking a leaf of a star bag and the center of another star bag  @xcite .",
    "furthermore , for each pair of twins @xmath76 in @xmath10 , it holds that @xmath76 must both be located in the same bag of the canonical split decomposition .",
    "[ thm : ced ] every connected graph has a unique canonical split decomposition , up to isomorphism .",
    "[ thm : dahlhaus ] the canonical split decomposition of a graph @xmath10 can be computed in time @xmath77 .",
    "we can now give the second characterization of distance - hereditary graphs that is crucial for our results .",
    "for convenience , we call a bag a _ star bag _ or a _ complete bag _ if it is a star or a complete graph , respectively .",
    "[ thm : bouchet ] a graph is a distance - hereditary graph if and only if every bag in its canonical split decomposition is either a star bag or a complete bag .",
    "we will later on also need a little bit of additional notation related to split decompositions .",
    "let @xmath50 be a canonical split decomposition . for two distinct bags @xmath78 and",
    "@xmath79 , we denote by @xmath80 the connected component of @xmath81 containing @xmath79 . technically , when @xmath82 , we define @xmath80 to be the empty set . for two bags @xmath78 and @xmath79 ,",
    "we denote by @xmath83 the set of all bags containing a vertex in a shortest path from @xmath78 to @xmath79 in @xmath50 .",
    "note that @xmath83 contains @xmath78 and @xmath79 .",
    "see figure  [ fig : example ] for an example .     and",
    "its canonical split decomposition . marked edges are represented by dashed edges , and bags are indicated by circles .",
    "note that @xmath84 , bags @xmath85 , @xmath86 are @xmath87-separator bags , and @xmath85 is a @xmath88-separator bag.,title=\"fig : \" ] and its canonical split decomposition . marked edges are represented by dashed edges , and bags are indicated by circles .",
    "note that @xmath84 , bags @xmath85 , @xmath86 are @xmath87-separator bags , and @xmath85 is a @xmath88-separator bag.,title=\"fig : \" ]    let @xmath89 be two disjoint vertex subsets of @xmath50 such that each @xmath89 is a set of unmarked vertices contained in ( not necessarily distinct ) bags @xmath90 , respectively .",
    "a bag @xmath28 is called _ a @xmath87-separator bag _ if @xmath28 is a star bag contained in @xmath83 whose center is adjacent to neither @xmath91 nor @xmath92 .",
    "we remark that @xmath28 can be @xmath93 for some @xmath94 , and especially when @xmath82 and it is a star bag and each @xmath95 consists of leaves of @xmath28 , @xmath78 is a @xmath87-separator bag .",
    "for convenience , we also say that a bag @xmath28 is _ a @xmath96-separator bag _ if @xmath28 is a star bag contained in @xmath97 whose center is adjacent to neither @xmath91 nor @xmath92 .",
    "for this notation , @xmath28 can not be @xmath78 nor @xmath79 .",
    "it is not hard to check that the length of the shortest path from @xmath98 to @xmath99 in the original graph is exactly the same as one plus the number of @xmath87-separator bags .",
    "we begin by applying the _ iterative compression technique _ , first introduced by reed , smith and vetta  @xcite to show that odd cycle transversal can be solved in single - exponential fpt time .",
    "this technique allows us to transform our original target problem to one that is easier to handle , which we call disjoint distance - hereditary vertex deletion .",
    "our goal for the majority of the paper will be to obtain a single - exponential fixed - parameter algorithm for disjoint distance - hereditary vertex deletion ; this is then used to obtain the sought after algorithm for distance - hereditary vertex deletion in section  [ sec : completing ] .",
    "0.2 cm    we will denote instances of disjoint distance - hereditary vertex deletion as a tuple @xmath100 . by theorem  [ thm : bouchet ] , every connected component of @xmath9 admits a canonical split decomposition whose bags are either a star or a complete graph .    before explaining the general approach for solving disjoint distance - hereditary vertex deletion",
    ", it will be useful to introduce a few definitions .",
    "since the canonical split decomposition guaranteed by theorem  [ thm : bouchet ] only helps us classify twins in @xmath9 and not in @xmath10 , we explicitly define an equivalence @xmath101 on the vertices of @xmath9 which allows us to classify twins in @xmath10 :    for two vertices @xmath102 , @xmath103 iff they are twins in @xmath10 .",
    "we denote by @xmath104 the set of equivalence classes of @xmath101 on @xmath105 , and each individual equivalence class will be called a _ twin class _ in @xmath9 .",
    "we can observe that if @xmath106 lies in a single connected component of @xmath9 , then @xmath107 must be contained in precisely one bag of the split decomposition of this connected component of @xmath9 , as @xmath107 is a set of twins in @xmath9 as well .",
    "a twin class is _",
    "@xmath7-attached _ if it has a neighbor in @xmath7 , and",
    "_ non-@xmath7-attached _ if it has no neighbors in @xmath7 .",
    "similarly , we say that a bag in the canonical split decomposition of @xmath9 is _ @xmath7-attached _ if it has a neighbor in @xmath7 , and _",
    "non-@xmath7-attached _ otherwise .",
    "now that we have introduced the required terminology , we can provide a high - level overview of our approach for solving disjoint distance - hereditary vertex deletion .    1 .",
    "we exhaustively apply the branching rules described in section  [ subsec : branching ] .",
    "branching rules will be applied when @xmath10 has a small subset @xmath108 such that @xmath109 induces a dh obstruction , or there is a small connected subset @xmath108 such that adding @xmath60 to @xmath7 decreases the number of connected components in @xmath8 $ ] .",
    "we exhaustively apply the initial reduction rules described in section  [ sec : rules ] .",
    "each of these rules runs in polynomial time , finds a part in the canonical split decomposition of a connected component of @xmath9 that can be simplified , and modifies the decomposition .",
    "each application of a reduction rule from section  [ sec : rules ] either reduces the number of vertices in @xmath9 or reduces the total number of bags in the canonical split decomposition ( of a connected component of @xmath9 ) . it is well known that the total number of bags in the canonical split decomposition of a graph is linear in the number of vertices . therefore , the total number of applications of these initial reduction rules will also be at most linear in the number of vertices .",
    "we say that @xmath10 and the canonical split decompositions of @xmath9 are _ reduced _ if the branching rules in section  [ subsec : branching ] and reduction rules in section  [ sec : rules ] can not be applied anymore .",
    "we will obtain the following simple structure of the decompositions in the reduced instance : * each canonical split decomposition @xmath50 of a connected component of @xmath9 contains at least two distinct @xmath7-attached twin classes ( lemma  [ lem : onesattached ] ) .",
    "* each bag contains at most one @xmath7-attached twin class ( lemma  [ lem : twinclassreduction ] ) .",
    "* when @xmath28 is a bag and @xmath66 is a connected component of @xmath110 containing no bags having a neighbor in @xmath7 , @xmath66 consists of one bag and @xmath28 is a star bag whose center is adjacent to @xmath66 ( lemma  [ lem : smallbranch ] ) .",
    "* when @xmath28 is a bag and @xmath66 is a connected component of @xmath110 such that @xmath66 contains exactly one @xmath7-attached bag @xmath111 , there is no @xmath112-separator bag ( lemma  [ lem : simplifynearsattached2 ] ) .",
    "4 .   we choose a canonical split decomposition @xmath50 of a connected component of @xmath9 and assign any bag as a root bag of @xmath50 .",
    "we choose a bag farthest from the root bag such that there are two descendant bags having @xmath7-attached twin classes @xmath98 and @xmath99 , respectively .",
    "then the length of every shortest path from @xmath98 to @xmath99 in @xmath9 is at most @xmath38 , and we introduce a special polynomial - time reduction rule in section  [ sec : twinclass ] which simplifies this configuration .",
    "let us also say a few words about the running time of the algorithm .",
    "let @xmath113)$ ] where @xmath114 denotes the number of connected components",
    ". then each of our branching rules will reduce @xmath115 and branch into at most @xmath41 subinstances .",
    "each reduction rule takes polynomial time , and the reduction rules will be applied at most @xmath116 times . whenever we introduce a new rule , we need to show that it is _ safe _ ; for branching rules this means that there exists at least one subinstance resulting from the rule which is a yes - instance iff the original graph was a yes - instance , while for reduction rules this means that the application of the rule preserves the property of being a yes - instance .",
    "a vertex @xmath18 in @xmath9 is called _ irrelevant _ if @xmath117 is a yes - instance if and only if @xmath118 is a yes - instance",
    ". we will be identifying and removing irrelevant vertices in several of our reduction rules .",
    "when removing a vertex @xmath18 from @xmath9 , it is easy to modify the canonical split decomposition containing @xmath18 , and thus it is not necessary to recompute the canonical split decomposition of the resulting graph from scratch .",
    "more details regarding such modifications of split decompositions can be found in the work of gioan and paul  @xcite .",
    "we state our two branching rules below .    [",
    "brule : threevertices ] for every vertex subset @xmath60 of @xmath9 with @xmath119 , if @xmath120 $ ] is not distance - hereditary , then we remove one of the vertices in @xmath60 , and reduce @xmath0 by @xmath5 .",
    "[ brule : reducecomponent ] for every vertex subset @xmath60 of @xmath9 with @xmath119 such that @xmath121 $ ] is connected and the set @xmath122 is not contained in a connected component of @xmath8 $ ] , then we either remove one of the vertices in @xmath60 and reduce @xmath0 by @xmath5 , or put all of them into @xmath7 ( which reduces the number of connected components of @xmath8 $ ] ) .    the safeness of branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] are clear , and these rules can be performed in polynomial time .",
    "the exhaustive application of these branching rules guarantees the following structure of the instance .",
    "[ lem : shortdistance ] let @xmath117 be an instance reduced under branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] .    1 .",
    "@xmath10 has no small dh obstructions . 2 .",
    "let @xmath123 .",
    "for every two vertices @xmath124 , they are contained in the same connected component of @xmath8 $ ] and there is no induced path of length at least @xmath40 from @xmath72 to @xmath73 in @xmath8 $ ] .",
    "specifically , if @xmath125 , then there is an induced path @xmath126 for some @xmath127 .",
    "3 .   there is no induced path @xmath128 of length @xmath44 in @xmath9 where @xmath129 and @xmath130 have neighbors in @xmath7 but @xmath131 and @xmath132 have no neighbors in @xmath7 .",
    "4 .   there is no induced path @xmath133 of length @xmath40 in @xmath9 where @xmath129 and @xmath132 have neighbors on @xmath7 but @xmath131 has no neighbors on @xmath7 .",
    "\\(1 ) suppose @xmath10 has a small dh obstruction @xmath24 . since @xmath9 is distance - hereditary , @xmath134 .",
    "thus , @xmath135 , and it can be reduced under branching rule  [ brule : threevertices ] .",
    "\\(2 ) first , by branching rule  [ brule : reducecomponent ] , @xmath72 and @xmath73 are contained in the same connected component of @xmath8 $ ] .",
    "suppose there is an induced path of length at least @xmath40 from @xmath72 to @xmath73 in @xmath8 $ ] .",
    "then by lemma  [ lem : dhobs ] , @xmath136 $ ] contains a dh obstruction , contradicting to our assumption that @xmath10 is reduced under branching rule  [ brule : threevertices ] .",
    "so , if @xmath125 , then there is an induced path of length @xmath38 from @xmath72 to @xmath73 in @xmath8 $ ] .",
    "\\(3 ) suppose there is an induced path @xmath128 of length @xmath44 in @xmath9 where @xmath129 and @xmath130 have neighbors on @xmath7 but @xmath131 and @xmath132 have no neighbors on @xmath7 . by branching rule  [ brule : reducecomponent ] ,",
    "we know that @xmath137 and @xmath138 are contained in the same connected component of @xmath8 $ ] .",
    "let @xmath139 be a shortest path from @xmath137 to @xmath138 ( if @xmath129 and @xmath130 have a common neighbor , then we choose a common neighbor ) .",
    "then @xmath140 is an induced path of length at least @xmath44 and @xmath141 is adjacent to its end vertices .",
    "so , @xmath142 $ ] contains a dh obstruction , contradicting to our assumption that @xmath10 is reduced under branching rule  [ brule : threevertices ] .",
    "\\(4 ) the same argument in ( 3 ) holds .",
    "lemma  [ lem : shortdistance ] , and especially point @xmath143 in the lemma , is used in many parts of our proofs .",
    "since we will apply the branching rules exhaustively at the beginning and also after each new application of a reduction rule , these properties will be implicitly assumed to hold in subsequent sections .",
    "we will make use of two more lemmas based on our branching rules .",
    "these will be used in section  [ sec : twinclass ] as well as in the proof of lemma  [ lem : twinclassreduction ] in section  [ sec : rules ] .",
    "[ lem : relationt1t2 ] let @xmath117 be an instance reduced under branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] .",
    "let @xmath144 be two distinct @xmath7-attached twin classes in the canonical split decomposition of a connected component of @xmath9 such that @xmath145 is anti - complete to @xmath146 , and @xmath147 .",
    "then :    1 .   @xmath148 .",
    "2 .   for every @xmath149 and every @xmath150 , if @xmath72 is adjacent to one of @xmath151 and @xmath152 , then @xmath72 is adjacent to both of them .",
    "3 .   for every @xmath149 and every @xmath150 ,",
    "if there is a path @xmath153 for some @xmath154 ( not necessarily induced ) , then @xmath155 is adjacent to @xmath152 as well .    for each @xmath94 let @xmath156 and let @xmath157 .",
    "\\(1 ) suppose @xmath158 and @xmath159 are disjoint . by branching rule  [ brule : reducecomponent ] , we know that @xmath158 and @xmath159 are contained in the same connected component of @xmath8 $ ] .",
    "let @xmath139 be a shortest path from @xmath158 to @xmath159 in @xmath8 $ ] .",
    "clearly , @xmath139 contains at most one vertex from each @xmath160 . as @xmath145 is anti - complete to @xmath146",
    ", @xmath161 is an induced path of length at least @xmath40 and a common neighbor of @xmath162 and @xmath163 in @xmath9 , say @xmath3 , is adjacent to its end vertices . by lemma  [ lem : dhobs ] , @xmath164 $ ] contains a dh obstruction , contradicting to the assumption that @xmath10 is reduced under branching rule  [ brule : threevertices ] .",
    "\\(2 ) for contradiction , suppose @xmath165 and @xmath166 .",
    "then @xmath167 is an induced path of length @xmath40 and @xmath151 is adjacent to its end vertices . by lemma  [ lem : dhobs ]",
    ", @xmath10 contains a small dh obstruction , contradiction .",
    "\\(3 ) suppose there is a path @xmath153 for some @xmath168 and @xmath155 is not adjacent to @xmath152 .",
    "first assume that @xmath169 .",
    "if @xmath170 , then @xmath171 is an induced path , and otherwise , @xmath172 is an induced path .",
    "since @xmath151 is adjacent to @xmath155 and @xmath163 , by lemma  [ lem : dhobs ] , @xmath10 contains a small dh obstruction , contradiction .",
    "we depict this case in figure  [ fig : c1c2anticomplete ] .",
    "when @xmath173 , @xmath174 becomes an induced path of length @xmath40 and @xmath151 is adjacent to its end vertices , and thus @xmath10 contains a small dh obstruction .",
    "we conclude that @xmath155 is adjacent to @xmath152 .",
    "is forced in ( 3 ) of lemma  [ lem : relationt1t2 ] . ]",
    "[ lem : completerelationt1t2 ] let @xmath117 be an instance reduced under branching rules  [ brule : threevertices ] , and [ brule : reducecomponent ] .",
    "let @xmath144 be two distinct @xmath7-attached twin classes in the canonical split decomposition of a connected component of @xmath9 such that @xmath145 is complete to @xmath146 .",
    "then :    1 .   for every @xmath149 and every @xmath150 , if @xmath72 is adjacent to one of @xmath151 and @xmath152 , then either @xmath72 is adjacent to @xmath152 as well , or @xmath151 is adjacent to @xmath152 .",
    "2 .   for every @xmath149 and every @xmath175 ,",
    "there is a path @xmath126 for some @xmath176 ( not necessarily induced ) , then @xmath177 .    for each @xmath94 and let @xmath156 and let @xmath157 .",
    "\\(1 ) suppose @xmath165 and @xmath178 .",
    "then @xmath179 $ ] is isomorphic to the gem , contradiction .",
    "\\(2 ) suppose there is a path @xmath126 for some @xmath180 .",
    "then @xmath181 $ ] is isomorphic to the house or the gem , contradiction .",
    "in this section , we assume that the given instance @xmath117 is reduced under branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] . the reduction rules introduced here either remove some irrelevant vertex , or move some vertex into @xmath7 , or reduce the number of bags in the decomposition by modifying the instance into an equivalent instance .",
    "after we apply any of these reduction rules , we will run the two branching rules from section  [ sec : general ] again .",
    "before we move on to the reduction rules themselves , we introduce a generic way of finding an irrelevant vertex which will be used in many reduction rules . for a vertex @xmath18 in @xmath9 and an induced cycle @xmath24 of length at least @xmath11 in @xmath10 containing a vertex @xmath18 and two neighbors @xmath34 , @xmath182 of @xmath18 in @xmath24 , a vertex @xmath183 in @xmath7",
    "is called a _ bypassing vertex _ for @xmath24 and @xmath18 if @xmath183 is adjacent to @xmath34 and @xmath182 .",
    "if such a vertex @xmath183 exists , it is clear that @xmath183 is not contained in @xmath24 because @xmath184 is a cycle of length @xmath44 .",
    "more importantly , since @xmath185 is an induced path of length at least @xmath40 from @xmath34 to @xmath182 and @xmath183 is adjacent to both of its endpoints , by lemma  [ lem : dhobs ] , @xmath186 $ ] contains a dh obstruction .",
    "the name of the bypassing vertex comes from the property that there is another dh obstruction that uses @xmath183 instead of @xmath18 .",
    "this implies that one of the vertices in @xmath187 must be contained in every solution ( note that @xmath188 and so @xmath183 itself can not be part of a solution ) .",
    "this property results in the following two lemmas .",
    "[ lem : badvertex ] let @xmath117 be an instance reduced under branching rule  [ brule : threevertices ] .",
    "let @xmath18 be a vertex in @xmath9 such that for every induced cycle @xmath24 of length at least @xmath189 containing @xmath18 , there is a bypassing vertex for @xmath24 and @xmath18 .",
    "then @xmath18 is irrelevant .",
    "we claim that @xmath117 is a yes - instance if and only if @xmath118 is a yes - instance .",
    "the forward direction is clear .",
    "suppose that @xmath25 has a vertex set @xmath190 such that @xmath191 , @xmath192 , and @xmath193 is distance - hereditary .",
    "if @xmath194 is distance - hereditary , then we are done .",
    "suppose that @xmath194 has a dh obstruction @xmath24 .",
    "since @xmath10 has no small dh obstructions , @xmath24 should be an induced cycle of length at least @xmath189 . by the assumption ,",
    "there is a bypassing vertex @xmath183 for @xmath24 and @xmath18 , and thus @xmath186 $ ] contains another dh obstruction .",
    "this contradicts to the fact that @xmath193 is distance - hereditary .",
    "[ lem : twovertexins ] let @xmath117 be an instance reduced under branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] .",
    "let @xmath18 be a vertex in @xmath9 and @xmath24 be an induced cycle of length at least @xmath189 containing @xmath18 , and let @xmath195 be the two neighbors of @xmath18 in @xmath24 .",
    "if @xmath196 , then there is a bypassing vertex for @xmath24 and @xmath18 , and thus @xmath197 $ ] contains a dh obstruction .",
    "note that @xmath198 .",
    "thus , by ( 2 ) of lemma  [ lem : shortdistance ] , there is an induced path @xmath199 for some @xmath127 , and @xmath155 is a bypassing vertex .",
    "we are now ready to start with our reduction rules . for",
    "the remainder of this section , let us fix a canonical split decomposition @xmath50 of a connected component of @xmath9 .",
    "we start with a simple reduction rule that can be applied when @xmath50 contains at most one @xmath7-attached twin class .",
    "[ rrule : dhcomponent ] if @xmath50 has at most one @xmath7-attached twin class , then we remove all unmarked vertices of @xmath50 from @xmath10 .",
    "[ lem : onesattached ] reduction rule  [ rrule : dhcomponent ] is safe .",
    "if @xmath50 has no @xmath7-attached twin class , then its underlying graph is a connected component of @xmath10 .",
    "thus , we can safely remove all its unmarked vertices .",
    "we may assume that @xmath50 has one @xmath7-attached twin class @xmath200 .",
    "since there are no edges between @xmath201 and @xmath202 and @xmath200 is a twin class , every induced cycle of length at least @xmath11 can not contain a vertex in @xmath201 .",
    "thus , we can safely remove all vertices in @xmath201 .",
    "now we assume that @xmath203 .",
    "we claim that every vertex in @xmath200 is also irrelevant .",
    "suppose that there is an induced cycle @xmath24 of length at least @xmath11 containing a vertex @xmath18 in @xmath200 .",
    "let @xmath204 be the two neighbors of @xmath18 in @xmath24 . since @xmath200 is a twin class , @xmath204",
    "are contained in @xmath7 . since @xmath198 , by lemma  [ lem : twovertexins ] ,",
    "there is a bypassing vertex for @xmath24 and @xmath18 .",
    "since @xmath24 was arbitrarily chosen , by lemma  [ lem : badvertex ] , @xmath18 is irrelevant .",
    "[ rrule : leaftos ] let @xmath28 be a star bag whose center is unmarked , and let @xmath18 be a leaf unmarked vertex in @xmath28 . if @xmath18 has no neighbor in @xmath7 , then we remove @xmath18 .",
    "if @xmath18 has a neighbor in @xmath7 , then we move @xmath18 into @xmath7 .",
    "[ lem : leaftos ] reduction rule  [ rrule : leaftos ] is safe .",
    "suppose @xmath28 is a star bag whose center is unmarked .",
    "let @xmath72 be the center of @xmath28 and let @xmath18 be a leaf unmarked vertex in @xmath28 .",
    "if @xmath18 has no neighbor in @xmath7 , then @xmath18 has degree @xmath5 in @xmath10 , and we can safely remove it .",
    "we assume that @xmath18 has a neighbor in @xmath7 .",
    "we claim that @xmath117 is a yes - instance if and only if @xmath205 is a yes - instance .",
    "the converse direction is easy .",
    "suppose that @xmath10 contains a vertex set @xmath190 where @xmath206 , @xmath192 , and @xmath194 is distance - hereditary .",
    "let @xmath207 if @xmath208 , and otherwise , we remove @xmath18 from @xmath190 and add @xmath72 to @xmath190 , and call it @xmath209 .",
    "we claim that @xmath210 is distance - hereditary .",
    "suppose that @xmath210 is not distance - hereditary .",
    "since @xmath10 has no small dh obstructions , @xmath210 contains an induced cycle @xmath24 of length at least @xmath189 .",
    "if @xmath24 contains @xmath72 , then @xmath211 , and thus @xmath194 also contains @xmath24 , contradiction .",
    "thus , @xmath212 .",
    "if @xmath213 , then @xmath24 is an induced subgraph of @xmath194 because @xmath190 and @xmath209 only differ at @xmath214 .",
    "this implies that @xmath215 and @xmath216 .",
    "thus @xmath209 contains @xmath72 .",
    "let @xmath195 be the two neighbors of @xmath18 in @xmath24 .",
    "as @xmath209 contains @xmath72 , @xmath34 and @xmath182 are contained in @xmath7 . by lemma",
    "[ lem : twovertexins ] , @xmath217 $ ] contains another dh obstruction .",
    "it contradicts to the fact that @xmath194 is distance - hereditary , as @xmath217 $ ] is an induced subgraph of @xmath194 .",
    "we remark that when we move @xmath18 into @xmath7 in reduction rule  [ rrule : leaftos ] , @xmath218)$ ] does not increase .",
    "next , we introduce an important rule which reduces the number of @xmath7-attached twin classes in each bag .",
    "[ rrule : twinclassreduction ] let @xmath28 be either a complete bag or a star bag whose center is marked .",
    "let @xmath219 be two distinct @xmath7-attached twin classes in @xmath28 such that @xmath220 is non - empty",
    ". then we remove @xmath98 .    [",
    "lem : twinclassreduction ] reduction rule  [ rrule : twinclassreduction ] is safe .    for each @xmath94 , let @xmath221 and let @xmath222 .",
    "let @xmath223 .",
    "since @xmath219 are contained the same bag @xmath28 , @xmath224 .",
    "let @xmath225 .",
    "we claim that for every induced cycle @xmath24 of length at least @xmath189 containing @xmath18 , there is a bypassing vertex for @xmath24 and @xmath18 .",
    "let @xmath195 be the two neighbors of @xmath18 in @xmath24 .",
    "if @xmath196 , then by lemma  [ lem : twovertexins ] , there is a bypassing vertex . without loss of generality we may assume that @xmath226 .",
    "[ [ case-1.-c_1-is - anti - complete - to - c_2 ] ] * case 1 .",
    "* @xmath98 is anti - complete to @xmath99 :    by lemma  [ lem : relationt1t2 ] , @xmath227 .",
    "let @xmath228 .",
    "suppose @xmath229 .",
    "since @xmath230 , by ( 2 ) of lemma  [ lem : relationt1t2 ] , @xmath182 is not adjacent to @xmath73 .",
    "thus , there is an induced path @xmath231 for some @xmath127 .",
    "then by ( 3 ) of lemma  [ lem : relationt1t2 ] , @xmath155 is adjacent to @xmath34 , and therefore , @xmath155 is a bypassing vertex .",
    "suppose @xmath232 .",
    "if @xmath72 is adjacent to @xmath73 , then by ( 2 ) of lemma  [ lem : relationt1t2 ] , @xmath72 is adjacent to both @xmath34 and @xmath182 , and thus @xmath72 becomes a bypassing vertex .",
    "we may assume that @xmath125 .",
    "then there is an induced path @xmath126 for some @xmath127 . by ( 3 ) of lemma  [ lem : relationt1t2 ] , @xmath155 is adjacent to both @xmath34 and @xmath182 , and therefore , @xmath155 is a bypassing vertex , as required .",
    "[ [ case-2.-c_1-is - complete - to - c_2 ] ] * case 2 . *",
    "@xmath98 is complete to @xmath99 :    suppose @xmath233",
    ". then @xmath182 can not be in @xmath234 , and thus @xmath229 .",
    "if @xmath182 has a neighbor in @xmath159 , then the neighbor is a bypassing vertex .",
    "we may assume that @xmath182 has no neighbors in @xmath159 .",
    "let us take a shortest path @xmath139 from @xmath34 to @xmath235 in @xmath8 $ ] .",
    "then @xmath236 is an induced path of length at least @xmath40 and @xmath18 is adjacent to its end vertices , and thus @xmath237 $ ] has a dh obstruction , which is contradiction .",
    "suppose @xmath226 . in this case",
    ", @xmath182 is not in @xmath99 .",
    "first assume that @xmath229 .",
    "let @xmath139 be a shortest path from @xmath182 to @xmath159 .",
    "if @xmath139 has length at least @xmath38 , then @xmath238 is an induced path of length at least @xmath40 and @xmath18 is adjacent to its end vertices .",
    "so , @xmath239 $ ] contains a dh obstruction , contradiction .",
    "thus , @xmath182 has a neighbor in @xmath235 , say @xmath240 .",
    "if @xmath34 is adjacent to neither @xmath182 nor @xmath240 , then @xmath241 $ ] is isomorphic to the house or the gem .",
    "since @xmath34 is not adjacent to @xmath182 , @xmath34 is adjacent to @xmath240 .",
    "thus , @xmath240 is a bypassing vertex , as required .",
    "now , we assume that @xmath242 . if @xmath72 is adjacent to @xmath182 , then by ( 1 ) of lemma  [ lem : completerelationt1t2 ]",
    ", @xmath34 is adjacent to @xmath72 because @xmath34 is not adjacent to @xmath182 .",
    "thus , @xmath72 is a bypassing vertex .",
    "so , we may assume that @xmath72 is not adjacent to @xmath182 .",
    "therefore , there is an induced path @xmath243 for some @xmath127 . by ( 2 ) of lemma  [ lem : completerelationt1t2 ] , @xmath173 , and again by ( 1 ) of lemma  [ lem : completerelationt1t2 ] , either @xmath244 or @xmath245 .",
    "since @xmath198 , @xmath155 becomes a bypassing vertex .",
    "we conclude that @xmath18 is irrelevant .",
    "we proceed by introducing a reduction rule which sequentially arranges non-@xmath7-attached bags in a canonical split decomposition .",
    "the operation of _ swapping the adjacency _ between two vertices @xmath72 and @xmath73 in a graph is to remove an edge if @xmath71 was an edge , or add an edge if otherwise .",
    "the number of bags in @xmath50 is strictly reduced when applying reduction rule  [ rrule : leaf ] .",
    "[ rrule : leaf ]",
    "let @xmath28 be a leaf bag and @xmath111 be the neighbor bag of @xmath28 .    1 .",
    "if @xmath28 is a complete bag having exactly one twin class and @xmath111 is a star bag whose leaf is adjacent to @xmath28 , then we swap the adjacency between every two unmarked vertices in @xmath28 . by swapping the adjacency",
    ", @xmath28 becomes a star whose center is adjacent to @xmath111 , and thus we can recompose the marked edge connecting @xmath28 and @xmath111 .",
    "we recompose the marked edge connecting @xmath28 and @xmath111 .",
    "if @xmath28 is a star bag having exactly one twin class , the center of @xmath28 is adjacent to @xmath111 , and @xmath111 is a complete bag , then we swap the adjacency between every two unmarked vertices in @xmath28 . by swapping the adjacency , @xmath28 becomes a complete graph , and thus we can recompose the marked edge connecting @xmath28 and @xmath111 .",
    "we recompose the marked edge connecting @xmath28 and @xmath111 .",
    "we use the following lemma .",
    "[ lem : swaptwinproperty ] let @xmath23 be a set of vertices that are pairwise twins in @xmath10 .",
    "let @xmath246 be the graph obtained from @xmath10 by swapping the adjacency relation between two vertices in @xmath23 .",
    "then @xmath117 is a yes - instance if and only if @xmath247 is a yes - instance .",
    "note that either @xmath248 $ ] is a complete graph or it has no edges .",
    "therefore , @xmath23 is again a set of vertices that are pairwise twins in @xmath246 .",
    "since each dh obstruction contains at most one vertex from a set of twins ( and hence , at most one vertex from @xmath23 ) , swapping the adjacency on @xmath23 will neither introduce nor remove dh obstructions from @xmath10 .",
    "hence it is easy to check that @xmath117 is a yes - instance if and only if @xmath247 is a yes - instance .",
    "reduction rule  [ rrule : leaf ] is safe .",
    "this follows from lemma  [ lem : swaptwinproperty ] .",
    "the next reduction rule allows us to remove a non-@xmath7-attached twin class under certain conditions ( see figure  [ fig : rrule2 ] ) .",
    "[ rrule : stardirection ] let @xmath78 be a leaf bag containing at most one @xmath7-attached twin class and @xmath79 be a bag distinct from @xmath78 such that    * every bag in @xmath97 is non-@xmath7-attached , not a @xmath96-separator bag , and has exactly two neighbor bags , and * @xmath79 is a star bag whose center is adjacent to @xmath249 .",
    "if @xmath79 contains a non-@xmath7-attached twin class @xmath200 , then we remove @xmath200 .",
    ".,title=\"fig : \" ] .,title=\"fig : \" ]    [ lem : starcenter ] reduction rule  [ rrule : stardirection ] is safe .",
    "suppose @xmath79 contains a non-@xmath7-attached twin class , and let @xmath18 be a vertex in the class .",
    "it is clear that if @xmath117 is a yes - instance then @xmath118 is a yes - instance . for the converse",
    "direction , suppose that @xmath25 contains a vertex set @xmath190 such that @xmath192 , @xmath206 and @xmath193 is distance - hereditary . if @xmath194 is distance - hereditary , then we are done .",
    "as @xmath10 has no small dh obstructions , we may assume that @xmath194 contains an induced cycle @xmath24 of length at least @xmath189 containing the vertex @xmath18 .",
    "let @xmath195 be the neighbors of @xmath18 in @xmath24 .    since @xmath198",
    ", we can observe that there are two bags @xmath250 in @xmath251 such that    * @xmath252 is closer to @xmath79 ( possibly @xmath253 ) , * @xmath252 is a star bag whose center is adjacent to @xmath254 , and * one of @xmath34 and @xmath182 is contained in @xmath255 and the other is contained in @xmath252 .    without loss of generality",
    ", we may assume that @xmath34 is contained in @xmath252 , and in case when @xmath256 , we may assume that @xmath34 is contained in the non-@xmath7-attached twin class .",
    "then the other neighbor of @xmath34 in @xmath24 should be adjacent to @xmath182 , which is a contradiction .",
    "we conclude that @xmath18 is an irrelevant vertex .",
    "we can now show that after the exhaustive application of the reduction rules introduced up to this point , every connected component of @xmath110 containing no @xmath7-attached bags is `` simple '' , as formalized in the next lemma .",
    "[ lem : smallbranch ] let @xmath50 be the canonical split decomposition of a connected component of @xmath9 reduced under reduction rules  [ rrule : dhcomponent][rrule : stardirection ] .",
    "let @xmath28 be a bag and @xmath66 be a connected component of @xmath110 containing no @xmath7-attached bags .",
    "then @xmath66 consists of one bag and @xmath28 is a star bag whose center is adjacent to @xmath66 .",
    "let @xmath111 be the neighbor bag of @xmath28 contained in @xmath66 .",
    "first claim that @xmath257 .",
    "suppose @xmath66 contains at least one bag other than @xmath111 .",
    "we regard @xmath111 as the root bag of @xmath66 , and choose a bag @xmath60 most far from the root bag having only leaf children and having at least one child .",
    "suppose @xmath60 is a star whose center is adjacent to the parent .",
    "let @xmath61 be a child bag of @xmath60",
    ". then @xmath61 can not be a star whose center is adjacent to @xmath60 .",
    "if @xmath61 is a star whose leaf is adjacent to @xmath60 , then it can be reduced under reduction rule  [ rrule : leaftos ] .",
    "if @xmath61 is a complete graph , then it can be reduced under reduction rule  [ rrule : leaf ] .",
    "it is contradiction .",
    "suppose @xmath60 is a star whose leaf is adjacent to the parent . by the same argument",
    ", there is no child bag pending to a leaf of @xmath60 .",
    "thus @xmath60 can have exactly one child @xmath61 where the center of @xmath60 is adjacent to @xmath61 . by reduction rule  [ rrule : stardirection ]",
    ", we can remove all unmarked vertices in @xmath60 , and we can recompose one of the marked edges incident with @xmath60 .",
    "suppose @xmath60 is a complete graph .",
    "let @xmath61 be a child bag of @xmath60",
    ". then @xmath61 can not be a complete graph .",
    "if @xmath61 is a star whose leaf is adjacent to @xmath60 , then all unmarked vertices in @xmath61 can be removed by reduction rule  [ rrule : leaftos ] .",
    "if @xmath61 is a star whose center is adjacent to @xmath60 , then we can shrink this bag using reduction rule  [ rrule : leaf ] .",
    "we conclude that @xmath257 . moreover ,",
    "if @xmath28 is not a star whose center is adjacent to @xmath111 , then we can reduce @xmath111 using reduction rule  [ rrule : leaftos ] or [ rrule : leaf ] .",
    "thus @xmath28 is a star whose center is adjacent to @xmath111 .",
    "next , we introduce some rules simplifying connected components of @xmath110 for some bag @xmath28 containing one @xmath7-attached twin class . the following rule is depicted in figure  [ fig : rrule3 ] .",
    "[ rrule : sattachedleaf ] let @xmath78 be a leaf bag having exactly one @xmath7-attached twin class and @xmath79 be a bag distinct from @xmath78 such that    * @xmath78 is not a star whose leaf is adjacent to a neighboring bag , * every bag in @xmath97 is non-@xmath7-attached , not a @xmath96-separator bag and has exactly two neighbor bags , and * @xmath79 is a star whose center is either an unmarked vertex , or adjacent to a connected component of @xmath258 consisting of one non-@xmath7-attached bag .",
    "if @xmath78 contains a non-@xmath7-attached twin class @xmath200 , then we can safely remove @xmath200 .",
    ".,title=\"fig : \" ] .,title=\"fig : \" ]    [ lem : sattachedleaf ] reduction rule  [ rrule : sattachedleaf ] is safe .",
    "let @xmath200 be the non-@xmath7-attached twin class in @xmath28 .",
    "we claim that there is no induced cycle of length at least @xmath11 containing a vertex in @xmath200 .",
    "let @xmath259 and @xmath24 be an induced cycle of length at least @xmath11 containing @xmath18 .",
    "let @xmath195 be the two neighbors of @xmath18 in @xmath24 .",
    "note that the @xmath7-attached twin class can not contain both of @xmath34 and @xmath182 , and similarly the connected component of @xmath258 that is attached to the center of @xmath79 , if it exists , can not contain both of @xmath34 and @xmath182 .",
    "thus , it is not hard to observe that either the next vertex of @xmath34 in @xmath24 is adjacent to @xmath182 , or the next vertex of @xmath182 in @xmath24 is adjacent to @xmath34 , which contradicts to the fact that @xmath260 are consecutive vertices in @xmath24 .",
    "this proves that @xmath18 is irrelevant .    by applying reduction rules  [ rrule : leaf ] , [ rrule : stardirection ] , and [ rrule : sattachedleaf ]",
    ", we can simplify the decomposition near an @xmath7-attached leaf containing one @xmath7-attached twin class ; for instance , in figure  [ fig : rrule3 ] , @xmath78 will be eventually merged with @xmath79 .",
    "we state the properties that are guaranteed by the reduction rules introduced up to this point in the following lemma .",
    "[ lem : simplifynearsattached ] let @xmath50 be the canonical split decomposition of a connected component of @xmath9 reduced under reduction rules  [ rrule : dhcomponent][rrule : sattachedleaf ] .",
    "let @xmath28 be a star bag whose center is unmarked or adjacent to a connected component of @xmath110 consisting of one non-@xmath7-attached bag .",
    "let @xmath66 be a connected component of @xmath110 such that    * @xmath66 contains exactly one @xmath7-attached bag @xmath111 , and * there is no @xmath112-separator bag .",
    "then @xmath111 is a star whose leaf is adjacent to @xmath261 and there is a leaf bag @xmath262 where the center of @xmath111 is adjacent to @xmath262 .",
    "first claim that @xmath111 is a star whose leaf is adjacent to @xmath261 .",
    "suppose not .",
    "we observe that by lemma  [ lem : smallbranch ] , @xmath263 has no connected component other than @xmath261 , and by lemma  [ lem : twinclassreduction ] , @xmath111 contains exactly one @xmath7-attached twin class .",
    "let @xmath200 be the unique @xmath7-attached twin class contained in @xmath111 .",
    "since @xmath111 is not a star whose leaf is adjacent to @xmath261 , if @xmath111 contains a non-@xmath7-attached twin class , then we can remove it by reduction rule  [ rrule : sattachedleaf ] . also , by reduction rule  [ rrule : stardirection ] , we know that there is no star bag @xmath262 in @xmath264 whose center is adjacent to @xmath265 .",
    "thus , by applying reduction rule  [ rrule : leaf ] , we can swap the adjacency between two vertices in the class @xmath200 , and merge with its neighbor bag .",
    "note that we can apply reduction rules  [ rrule : sattachedleaf ] and [ rrule : leaf ] until there is no bag in @xmath66 , because a leaf of @xmath28 is adjacent to @xmath66 and there is no @xmath112-separator bag .",
    "we conclude that such a connected component @xmath66 can not exist and @xmath111 is a star whose leaf is adjacent to @xmath261 . moreover ,",
    "if the center of @xmath28 is unmarked , then we can reduce using reduction rule  [ rrule : leaftos ] . therefore , there is a leaf bag @xmath262 where the center of @xmath111 is adjacent to @xmath262 by lemma  [ lem : smallbranch ] .    the final two rules in this section",
    "help us simplify the configuration specified in lemma  [ lem : simplifynearsattached ] ; using reduction rule  [ rrule : bypassing1 ] we can remove all unmarked vertices in @xmath264 , and then reduction rule  [ rrule : bypassing2 ] allows us to merge @xmath111 with @xmath28 .",
    "[ rrule : bypassing1 ] let @xmath78 and @xmath79 be two star bags in @xmath50 such that    * for each @xmath94 , either the center of @xmath93 is an unmarked vertex , or the center of @xmath93 is adjacent to a connected component of @xmath266 consisting of one non-@xmath7-attached bag , * every bag in @xmath267 is a non-@xmath7-attached bag , has two neighbor bags , and is not a @xmath96-separator bag .",
    "then we remove every unmarked vertex in every bag in @xmath267 .",
    "[ lem : bypassing1 ] reduction rule  [ rrule : bypassing1 ] is safe .",
    "let @xmath268 and @xmath18 be an unmarked vertex of @xmath28 .",
    "we claim that there is no induced cycle of length at least @xmath11 containing @xmath18 .",
    "suppose there is an induced cycle @xmath24 of length at least @xmath11 containing @xmath18 in @xmath10 .",
    "let @xmath204 be the two neighbors of @xmath18 in @xmath24 . since @xmath198 and @xmath28 is not a @xmath96-separator bag , @xmath34 and @xmath182",
    "are contained in the same connected component of @xmath110 .",
    "it is not hard to observe that either the next vertex of @xmath34 in @xmath24 is adjacent to @xmath182 , or the next vertex of @xmath182 in @xmath24 is adjacent to @xmath34 , which contradicts to the fact that @xmath260 are consecutive vertices in @xmath24 .",
    "this proves that @xmath18 is irrelevant .",
    "[ rrule : bypassing2 ] let @xmath269 be distinct bags in @xmath50 such that    * @xmath78 is a non-@xmath7-attached leaf bag whose neighbor bag is @xmath79 , and it is not a star whose leaf is adjacent to @xmath79 , * @xmath79 has exactly two neighbor bags @xmath78 and @xmath270 , it is a star whose center is adjacent to @xmath78 , and the set of unmarked vertices in @xmath79 is the unique @xmath7-attached twin class @xmath99 in @xmath79 , and * @xmath270 is a star whose center is either an unmarked vertex , or adjacent to a connected component of @xmath271 consisting of one non-@xmath7-attached bag .",
    "let @xmath98 be the set of unmarked vertices in @xmath78",
    ". then we remove @xmath78 and @xmath79 , and add a leaf set of unmarked vertices @xmath272 with @xmath273 vertices to @xmath270 , that is complete to @xmath274 and has no other neighbors in @xmath7 .",
    "we provide an illustration of reduction rule  [ rrule : bypassing2 ] in figure  [ fig : bypassing2 ] .    note that this rule can potentially create an induced cycle of length @xmath41 .",
    "so , we need to run branching rule  [ brule : threevertices ] after applying reduction rule  [ rrule : bypassing2 ] .",
    "we confirm the safeness of reduction rule  [ rrule : bypassing2 ] in the following lemma .",
    ".,title=\"fig : \" ] .,title=\"fig : \" ]    [ lem : bypassing2 ] reduction rule  [ rrule : bypassing2 ] is safe .",
    "let @xmath246 be the resulting graph obtained by applying reduction rule  [ rrule : bypassing2 ] .",
    "let @xmath275 .",
    "note that @xmath272 is a set of pairwise twins in @xmath246 ( it may not be a twin class ) , and @xmath276 .",
    "we claim that @xmath117 is a yes - instance if and only if @xmath247 is a yes - instance .",
    "suppose that @xmath10 has a vertex set @xmath190 such that @xmath192 , @xmath206 , and @xmath194 is distance - hereditary .",
    "first assume that @xmath190 contains no vertex in @xmath277 , and suppose that @xmath278 contains a dh obstruction @xmath24 .",
    "if @xmath24 does not contain a vertex in @xmath272 , then @xmath24 is an induced subgraph of @xmath194 , contradicting to our assumption .",
    "thus , @xmath24 contains a vertex in @xmath272 , and as @xmath272 is a twin class , @xmath279 .",
    "let @xmath18 be the vertex in @xmath280 .",
    "if @xmath24 contains no vertex in @xmath281 , then we can obtain a dh obstruction by replacing @xmath18 with a vertex of @xmath98 in @xmath10 , which implies that @xmath194 contains a dh obstruction .",
    "similarly , if @xmath24 contains no vertex in @xmath282 , then we can obtain a dh obstruction by replacing @xmath18 with a vertex of @xmath99 in @xmath10 , which implies that @xmath194 contains a dh obstruction .",
    "thus we may assume that @xmath24 contains at least one vertex from each of @xmath281 and @xmath282 .",
    "furthermore , as @xmath281 is a twin class , @xmath24 has exactly one vertex from @xmath281 .",
    "so , for two vertices @xmath283 and @xmath284 , we can obtain a dh obstruction in @xmath194 from @xmath24 by removing @xmath18 and adding @xmath285 , which is equivalent ( up to isomorphism ) to subdividing the unique edge in @xmath24 incident to @xmath18 and a vertex in @xmath281 . by observation  [ obs :",
    "sub ] , we know that the resulting graph @xmath194 must then also contain a dh obstruction , contradicting our assumption .",
    "we can assume that @xmath190 contains a vertex in @xmath277 .",
    "as @xmath286 and @xmath99 are twin classes , @xmath190 fully contains one of @xmath98 and @xmath99 . since @xmath287 , the set @xmath288 has size at most @xmath0 .",
    "moreover , we conclude that @xmath289 is distance - hereditary , as it is an induced subgraph of @xmath194 .",
    "for the converse direction , suppose that @xmath246 has a vertex set @xmath209 such that @xmath290 , @xmath291 , and @xmath289 is distance - hereditary .",
    "we first assume that @xmath292 .",
    "suppose @xmath210 has a dh obstruction @xmath24 .",
    "since @xmath10 has no small dh obstructions due to the application of branching rules , @xmath24 should be an induced cycle of length at least @xmath189 .",
    "we have @xmath293 , otherwise @xmath24 is an induced subgraph of @xmath289 , which is contradiction .",
    "as @xmath98 and @xmath99 are twin classes , @xmath24 contains at most one vertex from each of @xmath98 and @xmath99 .",
    "note that @xmath281 is a twin class .",
    "therefore , it is not possible that @xmath294 and @xmath295 .",
    "suppose @xmath296 but @xmath297 . let @xmath298 .",
    "then the two neighbors of @xmath18 in @xmath24 are contained in @xmath7 . by lemma  [ lem :",
    "twovertexins ] , @xmath197 $ ] contains a dh obstruction , which is contained in @xmath289 .",
    "this constitutes a contradiction .",
    "we can assume that @xmath24 contains one vertex from each of @xmath98 and @xmath99 .",
    "it further implies that @xmath24 contains one vertex from each of @xmath281 and @xmath274 .",
    "since @xmath24 has length at least @xmath189 , we can obtain an induced cycle of length at least @xmath41 in @xmath278 from @xmath24 by removing the vertices in @xmath277 and adding one vertex of @xmath272 , which is contradiction .",
    "lastly , suppose @xmath299 . as @xmath272 is a twin class , we have @xmath300 .",
    "we obtain a set @xmath190 from @xmath209 by removing @xmath272 , and adding @xmath98 if @xmath301 and adding @xmath99 if @xmath302 . if @xmath303 , then we add one of them chosen arbitrarily . clearly , @xmath304 . in case",
    "when @xmath305 , we observe that every induced cycle of length at least @xmath11 containing a vertex in @xmath98 has to contain two vertices in @xmath281 , which is not possible .",
    "thus , @xmath194 has no induced cycle of length at least @xmath11 containing a vertex in @xmath98 , and thus @xmath194 is distance - hereditary .",
    "suppose @xmath306.note that @xmath307",
    ". then whenever there is an induced cycle in @xmath194 containing a vertex in @xmath98 , by lemma  [ lem : twovertexins ] there exists another dh obstruction which does not contain any vertex in @xmath99 , contradicting the assumption that @xmath308 is distance - hereditary .",
    "hence we conclude that @xmath194 is distance - hereditary .",
    "finally , after applying all the reduction rules in this section , our instance has the desired inseparability property .",
    "we formalize and prove this property below .",
    "[ lem : simplifynearsattached2 ] let @xmath50 be the canonical split decomposition of a connected component of @xmath9 reduced under reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] .",
    "let @xmath28 be a bag and let @xmath66 be a connected component of @xmath110 such that @xmath66 contains exactly one @xmath7-attached bag @xmath111 .",
    "then there is no @xmath112-separator bag .    for contradiction ,",
    "suppose that there is a @xmath112-separator bag .",
    "we choose such a bag @xmath262 with minimum distance from @xmath111 to @xmath262 in @xmath50 . from the choice of @xmath262",
    ", there is no @xmath309-separator bag . by applying lemma  [ lem : simplifynearsattached ] for @xmath111 and @xmath262",
    ", we can observe that @xmath111 is a star whose leaf is adjacent to @xmath310 . by lemma  [ lem : smallbranch ]",
    ", there is no connected component of @xmath263 pending to leaves other than the leaf adjacent to its parent .",
    "also , if the center of @xmath111 is unmarked vertex , then this bag @xmath111 can be reduced using reduction rule  [ rrule : leaftos ] .",
    "so , there is a leaf bag @xmath311 where the center of @xmath111 is adjacent to @xmath311 .",
    "if @xmath312 is non - empty , then we can apply reduction rule  [ rrule : bypassing1 ] .",
    "therefore , @xmath262 is a neighbor bag of @xmath111 . in this case",
    ", we can apply reduction rule  [ rrule : bypassing2 ] , a contradiction .",
    "we conclude that there is no @xmath112-separator bag .",
    "[ prop : applicationrr ] let @xmath117 be an instance reduced under branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] .",
    "given a canonical split decomposition @xmath50 of a connected component of @xmath9 , we can in time @xmath313 either apply one of reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] , or correctly answer that reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] can not be applied anymore .",
    "we first classify twin classes in @xmath50 .",
    "this can be done in time @xmath313 .",
    "note that the total number of bags in canonical split decompositions of connected components of @xmath9 is @xmath116 .",
    "first check whether @xmath50 contains at most one @xmath7-attached twin class , and if it does , we apply reduction rule  [ rrule : dhcomponent ] .",
    "it takes a constant time . by recursively choosing at most two arbitrary bags",
    ", we can check whether @xmath50 contains bags satisfying the conditions in one of reduction rules  [ rrule : leaftos][rrule : bypassing1 ] in time @xmath313 . for reduction rule  [ rrule : twinclassreduction ] , whenever there is a bag containing at least two distinct @xmath7-attached twin classes @xmath98 and @xmath99 , as @xmath98 and @xmath99 are distinct twin classes , @xmath314 and @xmath274 should be distinct , and thus either @xmath315 or @xmath316 .",
    "thus , we can always apply reduction rule  [ rrule : twinclassreduction ] and remove one of @xmath98 and @xmath99 . for each leaf bag",
    ", we can check whether this bag with its neighbor bag satisfies the condition in reduction rule  [ rrule : bypassing2 ] , and if it does , we apply the rule .",
    "we conclude that we can in time @xmath313 either apply one of reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] , or correctly answer that reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] can not be applied anymore .",
    "in this section , we introduce our last , but perhaps most important , reduction rule .",
    "later on in the proof of theorem  [ thm : main2 ] , we will show that whenever the other rules can not be applied , we can either apply reduction rule  [ rrule : twinclassreduction2 ] or our instance is trivial .",
    "[ rrule : twinclassreduction2 ] suppose that @xmath117 and all canonical split decompositions of connected components of @xmath9 are reduced under branching rules  [ brule : threevertices][brule : reducecomponent ] and reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] .",
    "let @xmath50 be the canonical split decomposition of a connected component of @xmath9 , and let @xmath28 be a bag , and @xmath317 be two distinct @xmath7-attached bags ( possibly @xmath318 for some @xmath94 ) .",
    "furthermore , let @xmath219 be two distinct @xmath7-attached twin classes in @xmath317 , respectively , such that for each @xmath94 , either @xmath319 or @xmath95 is the unique @xmath7-attached twin class in @xmath320",
    ". then we apply one of the following :    1 .",
    "if the distance from @xmath98 to @xmath99 in @xmath9 is @xmath38 and the unique @xmath87-separator bag is contained in @xmath92 , then we remove @xmath99 .",
    "( in proposition  [ prop : anticomplete1 ] , we show that @xmath28 can not be the @xmath87-separator bag . ) 2 .   if @xmath98 is complete to @xmath99 , @xmath321 , and @xmath28 is a star bag whose center is adjacent to @xmath92 , then we remove @xmath98 .",
    "if @xmath98 is complete to @xmath99 , @xmath322 , and @xmath28 is a complete bag , then @xmath78 contains a non-@xmath7-attached twin class @xmath323 and we remove @xmath323 .",
    "we fix @xmath324 as per the statement of reduction rule  [ rrule : twinclassreduction2 ] . before proving the safeness of reduction rule  [ rrule : twinclassreduction2 ]",
    ", we show that @xmath98 can not be too far from @xmath99 in @xmath9 .",
    "[ lem : distancec1c2 ] every shortest path from @xmath98 to @xmath99 in @xmath9 has length at most @xmath38 .",
    "let us take a shortest sequence of twin classes @xmath325 from @xmath98 to @xmath99 in @xmath9 such that for @xmath326 with @xmath327 , @xmath328 is complete to @xmath329 if @xmath330 and they are anti - complete , otherwise .",
    "clearly , at most one of @xmath331 possibly has a neighbor in @xmath7 because @xmath95 is the unique @xmath7-attached twin class in @xmath320 if @xmath332 . by lemma  [ lem : shortdistance ] , @xmath4 can not be @xmath38 or @xmath40 . also , by lemma  [ lem : simplifynearsattached2 ] , we know that there is no @xmath333-separator bag when @xmath332 . thus , @xmath4 can not be larger than @xmath40 .",
    "so , the distance from @xmath98 to @xmath99 in @xmath9 is at most @xmath38 .      in this case",
    ", we know that there is exactly one @xmath87-separator bag in @xmath50 .    [ prop : anticomplete1 ] if @xmath98 is anti - complete to @xmath99 , then @xmath28 is not the @xmath87-separator bag",
    ".    for each @xmath94 let @xmath221 and let @xmath222 .",
    "suppose that @xmath28 is the @xmath87-separator bag .",
    "note that @xmath332 for some @xmath94 because @xmath78 and @xmath79 are distinct . without loss of generality ,",
    "we assume that @xmath334 .",
    "we claim that there is a vertex in @xmath335 having no neighbors in @xmath7 .",
    "note that @xmath78 is either a complete graph , or a star whose center is adjacent to @xmath336 , and also @xmath78 contains a non-@xmath7-attached twin class , otherwise , we can apply reduction rule  [ rrule : leaf ] .",
    "if @xmath78 is a complete graph , then the non-@xmath7-attached twin class is contained in @xmath335 .",
    "if @xmath78 is a star , then since @xmath28 is a star whose leaf is adjacent to @xmath91 , there is at least one bag in @xmath337 .",
    "moreover , there is no star bag @xmath111 in @xmath337 whose center is adjacent to @xmath338 , otherwise , we can apply reduction rule  [ rrule : stardirection ] .",
    "therefore , there is at least one complete bag in @xmath337 , which contains a vertex in @xmath335 .",
    "we choose such a vertex @xmath72 ; that is , @xmath72 is a vertex in @xmath335 having no neighbors in @xmath7 .",
    "we also observe that @xmath72 is contained in a complete bag .",
    "since @xmath72 is contained in a complete bag , @xmath72 has a neighbor in @xmath339 . by ( 1 ) of lemma",
    "[ lem : relationt1t2 ] , we have @xmath227 . by ( 2 ) of lemma  [ lem : relationt1t2 ] , @xmath72 should be adjacent to all vertices in @xmath340 , which contradicts to the fact that @xmath72 has no neighbors in @xmath7 .    [",
    "prop : anticomplete2 ] if @xmath98 is anti - complete to @xmath99 and the @xmath87-separator bag is contained in @xmath92 , then every vertex in @xmath99 is irrelevant",
    ".    for each @xmath94 let @xmath221 and let @xmath222 .",
    "let @xmath111 be the @xmath87-separator bag .",
    "we first show that @xmath341 , that is , @xmath99 is contained in the bag @xmath111 . for contradiction , suppose @xmath342 .",
    "then @xmath111 is a @xmath343-separator bag .",
    "however , since @xmath92 has exactly one @xmath7-attached bag @xmath78 , by lemma  [ lem : simplifynearsattached2 ] , there is no @xmath343-separator bag , a contradiction .",
    "we conclude that @xmath344 .",
    "if the center of @xmath79 is an unmarked vertex , then we can reduce it using reduction rule  [ rrule : leaftos ] .",
    "thus , there is a leaf bag @xmath345 where the center of @xmath79 is adjacent to @xmath345 .",
    "let @xmath346 .",
    "we claim that for every induced cycle @xmath24 of length at least @xmath189 containing @xmath18 , there is a bypassing vertex for @xmath24 and @xmath18 .",
    "let @xmath34 and @xmath182 be the two neighbors of @xmath18 in @xmath24 .",
    "if @xmath34 and @xmath182 are contained in @xmath7 , then by lemma  [ lem : twovertexins ] , there is a bypassing vertex .",
    "if @xmath34 and @xmath182 are contained in @xmath105 , then they are contained in @xmath345 whose unmarked vertices form a twin class .",
    "since no dh obstruction contain twins , this is not possible .",
    "we may assume that @xmath226 and @xmath347 .",
    "note that since @xmath348 , @xmath34 has no neighbors in @xmath7 .    by ( 1 ) of lemma  [ lem : relationt1t2 ]",
    ", we have @xmath227 .",
    "let @xmath349 .",
    "[ [ case-1.-zin - t_2setminus - t_1cap - s ] ] * case 1 . *",
    "@xmath350 :    since @xmath182 is not adjacent to @xmath34 , by ( 2 ) of lemma  [ lem : relationt1t2 ] , @xmath182 is not adjacent to @xmath4 .",
    "so , there is an induced path @xmath351 for some @xmath127 .",
    "note that @xmath155 can not be in @xmath234 as @xmath230 .",
    "if @xmath352 , then by ( 2 ) of lemma  [ lem : relationt1t2 ] @xmath155 is adjacent to @xmath34 , but @xmath34 has no neighbors in @xmath7 , a contradiction .",
    "if @xmath353 , then by ( 3 ) of lemma  [ lem : relationt1t2 ] , @xmath155 is adjacent to @xmath34 , again a contradiction .",
    "[ [ case-2.-zin - t_1cap - t_2cap - s ] ] * case 2 . *",
    "@xmath242 :    if @xmath34 and @xmath36 have a common neighbor @xmath3 in @xmath9 that is adjacent to neither @xmath18 nor @xmath182 , then @xmath354 $ ] is isomorphic to the house .",
    "so , there are no such vertices .",
    "this implies that for each @xmath94 , there is no complete bag in @xmath355 , and if @xmath78 is a complete bag , then @xmath78 contains no non-@xmath7-attached twin class .",
    "these further imply that @xmath78 is a child of @xmath28 and if @xmath78 is a complete bag , then @xmath28 is a star bag whose center is adjacent to @xmath78 .",
    "also , we can observe that the next vertex of @xmath34 in @xmath24 , say @xmath356 , is not adjacent to @xmath36 .",
    "suppose @xmath78 is a complete graph .",
    "as we observed , @xmath78 is a child of @xmath28 , and @xmath28 is a star bag whose center is adjacent to @xmath78 .",
    "then , @xmath356 should be adjacent to @xmath36 , which is contradiction .",
    "therefore @xmath78 is a star .",
    "since @xmath356 is not adjacent to @xmath36 , @xmath356 should be contained in a non-@xmath7-attached twin class in @xmath78 .",
    "then the next vertex of @xmath356 in @xmath24 , say @xmath357 , is adjacent to @xmath36 .",
    "so , @xmath358 is an induced path of length @xmath44 and @xmath36 is adjacent to its end vertices , and by lemma  [ lem : dhobs ] , @xmath10 has a small dh obstruction , contradiction .",
    "we conclude that for every induced cycle @xmath24 of length at least @xmath189 containing @xmath18 , there is a bypassing vertex for @xmath24 and @xmath18 . by lemma  [ lem : badvertex ] , @xmath18 is an irrelevant vertex .",
    "next , we deal with the case when @xmath98 is complete to @xmath99 .",
    "[ prop : complete2 ] if @xmath98 is complete to @xmath99 , @xmath321 , and @xmath28 is a star bag whose center is adjacent to @xmath92 , then every vertex in @xmath98 is irrelevant .    for each @xmath94 and let @xmath221 and let @xmath222 .",
    "we distinguish cases depending on whether @xmath359 or not .",
    "[ [ case-1.-t_1cap - t_2cap - vg - sneq - emptyset ] ] * case 1 . *",
    "@xmath360 :    we choose a vertex @xmath361 .",
    "since @xmath72 is contained in @xmath91 or @xmath92 , @xmath72 has no neighbors in @xmath7 .",
    "we claim that @xmath227 .",
    "suppose @xmath158 and @xmath159 are disjoint , and let @xmath139 be a shortest path from @xmath158 to @xmath159 in @xmath8 $ ] .",
    "then @xmath362 $ ] contains a dh obstruction , which contradicts to the assumption that @xmath10 is reduced under branching rule  [ brule : reducecomponent ] .",
    "therefore , @xmath227 . let @xmath228 .",
    "clearly , @xmath72 is not adjacent to @xmath73 .",
    "we claim that @xmath363 .",
    "suppose there is a vertex @xmath70 in @xmath364 .",
    "since @xmath125 , if @xmath365 , then @xmath366 by ( 1 ) of lemma  [ lem : completerelationt1t2 ] .",
    "but @xmath72 has no neighbors in @xmath7 .",
    "thus , we have @xmath367 , and therefore there is an induced path @xmath368 for some @xmath127 . if @xmath369 , then by the same reason , @xmath70 or @xmath155 should be adjacent to @xmath72 , which is contradiction . and",
    "by ( 2 ) of lemma  [ lem : completerelationt1t2 ] , @xmath155 can not be in @xmath370 .",
    "we conclude that @xmath363 .",
    "let @xmath225 .",
    "we claim that for every induced cycle @xmath24 of length at least @xmath189 containing @xmath18 , there is a bypassing vertex for @xmath24 and @xmath18 .",
    "let @xmath195 be the two neighbors of @xmath18 in @xmath24 . if @xmath196 , then by lemma  [ lem : twovertexins ] , there is a bypassing vertex .",
    "suppose that @xmath371 .",
    "since @xmath198 , there should be two bags @xmath255 and @xmath252 in @xmath372 such that such that    * @xmath255 is closer to @xmath78 ( possibly @xmath253 ) , * @xmath255 is a star bag whose center is adjacent to @xmath373 , and * one of @xmath34 and @xmath182 is contained in @xmath255 and the other is contained in @xmath252 .    without loss of generality",
    ", we may assume that @xmath34 is contained in @xmath255 , and in case when @xmath374 , we may assume that @xmath34 is contained in the non-@xmath7-attached twin class .",
    "then the next vertex of @xmath34 in @xmath24 should be adjacent to @xmath182 , contradiction .",
    "thus , we may assume that @xmath375 and @xmath242 .",
    "since @xmath232 , we have @xmath376 .",
    "we can observe that @xmath34 has no neighbors in @xmath7 as @xmath34 is contained in some bag in @xmath83 , and it is not contained in @xmath277 .",
    "let @xmath356 be the next vertex of @xmath34 in @xmath24 .",
    "suppose @xmath377 . in this case , we can observe that @xmath356 is adjacent to @xmath378 .",
    "therefore , @xmath378 is adjacent to the end vertices of an induced path @xmath379 , implying that @xmath10 has a small dh obstruction , which is contradiction .",
    "we may assume that @xmath226 .",
    "if @xmath356 is adjacent to @xmath378 , then by the same argument , @xmath10 has a small dh obstruction .",
    "therefore , @xmath380 .",
    "but then , @xmath356 is adjacent to @xmath18 , contradiction .",
    "[ [ case-2.-t_1cap - t_2cap - vg - semptyset ] ] * case 2 . *",
    "@xmath359 :    this implies that there are no complete bags in @xmath97 , and especially , if @xmath78 or @xmath79 is a complete bag , then it has no non-@xmath7-attached twin class .",
    "this implies that @xmath381 and @xmath28 is the neighbor bag of @xmath79 .",
    "let @xmath225 .",
    "we claim that for every induced cycle @xmath24 of length at least @xmath189 containing @xmath18 , there is a bypassing vertex for @xmath24 and @xmath18 .",
    "let @xmath195 be the two neighbors of @xmath18 in @xmath24 .",
    "if @xmath196 , then by lemma  [ lem : twovertexins ] , there is a bypassing vertex . without loss of generality",
    "we may assume that @xmath375 .",
    "let @xmath356 be the next vertex of @xmath34 in @xmath24 .",
    "suppose @xmath233 . then @xmath229 .",
    "if @xmath182 has a neighbor in @xmath235 , then we have a bypassing vertex .",
    "so , we may assume that @xmath182 has no neighbors in @xmath235 .",
    "let @xmath139 be a shortest path from @xmath182 to @xmath235 in @xmath8 $ ] .",
    "then @xmath382 is an induced path of length at least @xmath40 and @xmath34 is adjacent to its end vertices , and therefore @xmath383 contains a dh obstruction which contradicts the exhaustive application of our branching rules .",
    "thus , the claim holds .    now , suppose @xmath376 .",
    "it implies that @xmath79 is a star bag having a non-@xmath7-attached twin class , and @xmath34 is contained in the set",
    ". then @xmath356 should be a common neighbor of @xmath378 and @xmath34 .",
    "let @xmath139 be the shortest path from @xmath378 to @xmath18 in @xmath384 $ ] .",
    "then @xmath385 is an induced path of length at least @xmath40 , and @xmath356 is adjacent to its end vertices .",
    "therefore , @xmath386 $ ] contains a dh obstruction , contradicting to our assumption that @xmath10 is reduced under branching rule  [ brule : threevertices ] .",
    "we conclude that @xmath18 is irrelevant .",
    "[ prop : complete1 ] if @xmath98 is complete to @xmath99 , @xmath322 , and @xmath28 is a complete bag , then @xmath78 contains a non-@xmath7-attached twin class @xmath323 and every vertex in @xmath323 is irrelevant .    for each @xmath94 and let @xmath221 and let @xmath222 .",
    "suppose @xmath98 is complete to @xmath99 , @xmath322 , and @xmath28 is a complete bag . by reduction rule  [ rrule : leaf ]",
    ", @xmath78 contains a non-@xmath7-attached twin class .",
    "let @xmath323 be the non-@xmath7-attached twin class in @xmath78",
    ".    first observe that @xmath387 . if @xmath78 is a star bag , then @xmath388 .",
    "if @xmath78 is a complete bag , then since @xmath28 is a complete bag , there should be a star bag @xmath111 in @xmath337 whose center is adjacent to @xmath261 .",
    "thus , the unmarked vertices in @xmath111 are contained in @xmath389 .",
    "let @xmath390 .",
    "note that @xmath73 has no neighbors in @xmath7 .",
    "let @xmath391 .",
    "we claim that for every induced cycle @xmath24 of length at least @xmath189 , there is a bypassing vertex for @xmath24 and @xmath18 .",
    "let @xmath34 and @xmath182 be the two neighbors of @xmath18 in @xmath24 . since @xmath198 , @xmath371 , and @xmath28 is a complete graph , one can check that @xmath34 and @xmath182 have to be contained in @xmath339 .",
    "suppose @xmath227 .",
    "let @xmath392 . since we know that @xmath18 has no neighbors in @xmath7 , @xmath393 , and by ( 1 ) of lemma  [ lem : completerelationt1t2 ]",
    ", @xmath72 should be adjacent to both @xmath34 and @xmath182 .",
    "thus , @xmath72 is a bypassing vertex , as required .",
    "we may assume that @xmath394 .    by branching rule  [ brule : reducecomponent ] , we know that @xmath158 and @xmath159 are contained in the same connected component of @xmath8 $ ] .",
    "let @xmath139 be a shortest path from @xmath158 to @xmath159 .",
    "if @xmath139 has length at least @xmath38 , then @xmath395 $ ] is an induced cycle of length at least @xmath11 , contradicting to our assumption that @xmath10 is reduced under branching rule  [ brule : threevertices ] .",
    "thus , @xmath139 has length @xmath5 .",
    "let @xmath396 be the path where @xmath397 is a neighbor of @xmath398 for each @xmath94 .",
    "if @xmath399 or @xmath400 is adjacent to one of @xmath34 and @xmath182 , the by ( 1 ) of lemma  [ lem : completerelationt1t2 ] , it becomes a bypassing vertex .",
    "therefore , for each @xmath94 , @xmath397 is adjacent to neither @xmath34 nor @xmath182 .",
    "so , @xmath401 is an induced path of length @xmath40 , and @xmath378 is adjacent to its end vertices .",
    "it implies that @xmath10 has a small dh obstruction , contradiction .",
    "we conclude that every vertex in @xmath323 is irrelevant .",
    "[ prop : twinclassreduction2 ] reduction rule  [ rrule : twinclassreduction2 ] is safe .",
    "if the distance from @xmath98 to @xmath99 in @xmath9 is @xmath38 and the unique @xmath87-separator bag is contained in @xmath92 , then by proposition  [ prop : anticomplete2 ] , @xmath99 can be safely removed .",
    "if @xmath98 is complete to @xmath99 , @xmath321 , and @xmath28 is a star bag whose center is adjacent to @xmath92 , then by proposition  [ prop : complete2 ] , @xmath98 can be safely removed .",
    "if @xmath98 is complete to @xmath99 , @xmath322 , and @xmath28 is a complete bag , then by proposition  [ prop : complete1 ] , @xmath78 contains a non-@xmath7-attached twin class @xmath323 and @xmath323 can be safely removed .",
    "we conclude that reduction rule  [ rrule : twinclassreduction2 ] is safe .",
    "our goal in this section is to give a proof of our main result , theorem  [ thm : main ] , and obtain corresponding lower bounds .",
    "below , we use the presented reduction and branching rules to give an algorithm for disjoint distance - hereditary vertex deletion .",
    "this is then followed by a proof of our main algorithmic result .",
    "[ thm : main2 ] disjoint distance - hereditary vertex deletion  can be solved in time @xmath402 .",
    "let @xmath117 be an instance of disjoint distance - hereditary vertex deletion .",
    "we exhaustively apply branching rules  [ brule : threevertices][brule : reducecomponent ] and reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] .",
    "we prove that whenever we can not apply those rules , either we have a trivial instance , or we meet a situation where we can apply reduction rule  [ rrule : twinclassreduction2 ] .",
    "it will imply that we can apply one of all rules recursively until @xmath9 is empty .",
    "suppose that @xmath50 is the canonical split decomposition of a connected component of @xmath9 such that @xmath10 and @xmath50 are reduced under branching rules  [ brule : threevertices][brule : reducecomponent ] and reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] .",
    "if @xmath50 contains at most one @xmath7-attached twin class , then this connected component can be removed using reduction rule  [ rrule : dhcomponent ] .",
    "thus , we know that @xmath50 contains at least two distinct @xmath7-attached twin classes .",
    "we choose a root bag of @xmath50 , and choose a bag @xmath28 that is farthest from the root bag such that there are two descendant bags @xmath317 of @xmath28 having distinct @xmath7-attached twin classes @xmath219 , respectively .",
    "note that @xmath28 can be one of @xmath78 and @xmath79 .",
    "we argue that @xmath403 .",
    "suppose @xmath82 .",
    "if @xmath78 is a star bag whose center is unmarked , then we can reduce by reduction rule  [ rrule : leaftos ] .",
    "we may assume that if @xmath78 is a star bag , then its center is marked .",
    "then we can reduce by reduction rule  [ rrule : twinclassreduction ] , contradiction .",
    "therefore , @xmath403 . by lemma  [ lem : distancec1c2 ]",
    "the distance from @xmath98 to @xmath99 in @xmath9 is at most @xmath38 .",
    "suppose that the distance from @xmath98 to @xmath99 in @xmath9 is @xmath38 .",
    "thus , there is a unique @xmath87-separator bag in @xmath50 . by proposition  [ prop : anticomplete1 ]",
    ", @xmath28 can not be the @xmath87-separator bag .",
    "thus , @xmath404 or @xmath405 .",
    "if @xmath406 for some @xmath94 , then by reduction rule  [ rrule : twinclassreduction2 ] , we can safely remove @xmath95 .",
    "suppose @xmath98 is complete to @xmath99 .",
    "if @xmath28 is a star bag , then since it is not a @xmath87-separator bag , the center of @xmath28 is adjacent to either @xmath91 or @xmath92 .",
    "if the center of @xmath28 is adjacent to @xmath320 for some @xmath94 , then by reduction rule  [ rrule : twinclassreduction2 ] , we can remove @xmath407 .",
    "we may assume that @xmath28 is a complete bag .",
    "in this case , since @xmath403 , @xmath332 for some @xmath94 .",
    "then by reduction rule  [ rrule : twinclassreduction2 ] , @xmath93 contains a non-@xmath7-attached twin class @xmath408 and we can remove @xmath408 .",
    "this proves that our algorithm is correct .",
    "finally , we argue that the runtime bounds hold . for the convenience , we will denote @xmath409 by @xmath2 and @xmath410 by @xmath411 .",
    "first notice that each branching rule reduces either @xmath0 or the number of connected components in @xmath7 and branch into at most @xmath41 subinstances .",
    "moreover , none of the reduction rules change @xmath0 or the number of components in @xmath7 .",
    "hence a branching rule is applied at most @xmath412 times .",
    "similarly , every reduction rule reduces either the number of vertices in @xmath9 or the number of bags in canonical split decomposition of @xmath9 .",
    "therefore , it is not hard to observe that the branching tree of the algorithm will have at most @xmath413 leaves and each leaf will be in depth at most @xmath414 and hence the branching tree will have at most @xmath415 nodes . in the following",
    "we will discuss that the runtime in every node will not exceed @xmath416 . in each node",
    ", we go through the branching and reduction rules , in the order they are introduced in the paper , and apply the first rule that can be applied .",
    "let us start with detecting and applying branching rule  [ brule : threevertices ] .",
    "our algorithm is going through all sets @xmath417 of size at most @xmath11 and checking , whether @xmath120 $ ] is distance - hereditary .",
    "it follows from theorems  [ thm : dahlhaus ] and [ thm : bouchet ] that we check whether a graph is distance - hereditary in time @xmath418 .",
    "if the graph is not distance - hereditary , applying of the rule can be done in constant time .",
    "hence , the branching rule  [ brule : threevertices ] can be verified in time @xmath416 .",
    "similarly , for branching rule  [ brule : reducecomponent ] for every set @xmath108 of size at most @xmath11 , we can in time @xmath418 , e.g. using breadth - first search , verify that the neighborhood of @xmath60 is in the same connected component and the same running bound follows . after verifying that the graph is actually reduced under branching rules  [ brule : threevertices ] and [ brule : reducecomponent ] it follows from proposition  [ prop : applicationrr ] that we can in time @xmath419 either apply one of reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] or correctly deduce that the graph is reduced also under reduction rules  [ rrule : dhcomponent][rrule : bypassing2 ] .",
    "finally observe that the algorithm described in the first part of this proof for reduction rule  [ rrule : twinclassreduction2 ] can be easily implemented in linear time .",
    "hence , the whole algorithm for disjoint distance - hereditary vertex deletion  can be implemented in time @xmath420 .",
    "[ thm : main ] distance - hereditary vertex deletion  can be solved in time @xmath6 .",
    "we apply the standard iterative compressing technique .",
    "the algorithm involves two - step reduction of distance - hereditary vertex deletion : we first reduce distance - hereditary vertex deletion  to compression problem , which reduces to disjoint distance - hereditary vertex deletion .    for the convenience ,",
    "we denote for this proof @xmath421 and @xmath422 .",
    "fix an arbitrary labeling @xmath423 of @xmath13 and let @xmath424 be a the graph @xmath425 $ ] for @xmath426 . from @xmath427 up to @xmath2 , we consider the following compression problem for distance - hereditary vertex deletion : given a graph @xmath424 and @xmath428 such that @xmath429 is distance - hereditary and @xmath430 , we aim to find a set @xmath431 such that @xmath432 is distance - hereditary and @xmath433 , if one exists , and output no otherwise . since distance - hereditary graphs are closed under taking induced subgraphs , @xmath434 is yes - instance of distance - hereditary vertex deletion  if and only if @xmath435 is a yes - instance for compression for all @xmath436 , where @xmath435 is a legitimate instance .",
    "hence we correctly output that @xmath434 is no - instance of distance - hereditary vertex deletion  if @xmath435 is a no - instance for some @xmath436 . moreover , if @xmath437 is a solution to the @xmath436-th instance of compression , then @xmath438 is a legitimate instance for @xmath439-th instance of compression .",
    "given an instance @xmath440 of compression , we enumerate all possible intersections @xmath441 of @xmath7 and a desired solution to @xmath442 . for each guessed set @xmath441 ,",
    "we solve the instance @xmath443 of disjoint distance - hereditary vertex deletion  using theorem  [ thm : main2 ] .",
    "note that @xmath440 is yes - instance if and only if @xmath443 is yes - instance for some @xmath444 .",
    "if @xmath445 is a solution to @xmath443 , then clearly @xmath446 is a solution to the instance @xmath442 of compression .",
    "conversely , if @xmath445 is a solution to the instance @xmath442 of compression then for the set @xmath447 the instance @xmath443 is yes - instance for disjoint distance - hereditary vertex deletion .",
    "therefore , using the algorithm from theorem  [ thm : main2 ] we can correctly solve distance - hereditary vertex deletion .",
    "it remains to prove the complexity of the algorithm .",
    "given an instance @xmath442 we guess at most @xmath448 sets @xmath441 of size @xmath436 for each @xmath449 , and solve instance the resulting instance @xmath443 of disjoint distance - hereditary vertex deletion  in time @xmath450 . summing up , distance - hereditary vertex deletion  can be solved by running an algorithm for compression at most @xmath2 times , which yields the claimed running time @xmath451      here we will present our lower bound result , based on the well - established exponential time hypothesis  @xcite .",
    "there exists a constant @xmath452 such that 3-cnf - sat with @xmath2 variables and @xmath411 clauses can not be solved in time @xmath453 .",
    "our result uses the fact that the classical vertex cover problem can not be solved in subexponential time under eth .",
    "[ thm : ethvc ] there is no @xmath454 algorithm for vertex cover , unless eth fails .",
    "[ thm : main3 ] there is no @xmath454 algorithm for distance - hereditary vertex deletion unless eth fails .    for a graph @xmath10 , we will denote @xmath409 by @xmath2 and @xmath410 by @xmath411 . for contradiction suppose there exists an algorithm for solving distance - hereditary vertex deletion  problem in time @xmath455 .",
    "we show that we can solve vertex cover in time @xmath455 .",
    "let @xmath456 be an instance of vertex cover problem .",
    "we construct a graph @xmath246 as follows .",
    "we replace every edge @xmath457 of @xmath10 with two vertex disjoint paths of length @xmath40 between @xmath70 and @xmath18 .",
    "note that for every edge @xmath457 in @xmath10 the two disjoint paths of length @xmath40 in @xmath246 form an induced subgraph isomorphic to @xmath458 .",
    "moreover we have @xmath459 .",
    "we claim that @xmath10 has a vertex set @xmath7 of size at most @xmath0 such that @xmath9 has no edges if and only if @xmath246 has a vertex deletion set of size at most @xmath0 to a distance - hereditary graph .",
    "suppose that @xmath10 has such a vertex cover @xmath7 .",
    "it is easy to confirm that @xmath460 is a disjoint union of subdivisions of stars , which is distance hereditary .    for the converse direction , suppose @xmath246 has a distance - hereditary vertex deletion set @xmath7 of size at most @xmath0",
    "let us fix an arbitrary edge @xmath457 in @xmath10 .",
    "note that no dh obstruction contains a pendant vertex .",
    "hence we observe that if @xmath24 is a dh obstruction containing a vertex @xmath4 on a shortest @xmath461 path in @xmath246 , then @xmath24 contains both vertices @xmath70 and @xmath18 as well .",
    "therefore , if @xmath462 , then also graphs @xmath463 and @xmath464 are distance - hereditary . since the choice of the edge @xmath457 was arbitrary , we can find a set @xmath190 , such that @xmath465 , @xmath466 , and @xmath278 is a distance - hereditary graph .",
    "clearly for every edge @xmath457 in @xmath10 , @xmath190 contains @xmath70 or @xmath18 , otherwise @xmath278 contains an induced @xmath458 .",
    "we conclude that @xmath190 is a vertex cover of @xmath10 , which finishes the proof .",
    "there is an established line of research studying the algorithmic applications of vertex deletion sets to specific graph classes  @xcite . in this context , it is natural to ask whether theorem  [ thm : main ] allows the development of single - exponential algorithms for problems parameterized by the size of a vertex deletion set to distance - hereditary graphs .",
    "clearly , any problem that is fpt when parameterized by clique - width ( and rank - width ) must also be fpt when parameterized by the size of a vertex deletion set to distance - hereditary graphs .",
    "however , the existence of a single - exponential fpt algorithm parameterized by clique - width does not immediately imply that the problem also admits a single - exponential fpt algorithm parameterized by our parameter , since the addition of @xmath0 vertices to a graph may increase clique - width by a factor of up to @xmath467  @xcite . on the other hand ,",
    "known fpt algorithms parameterized by rank - width usually do not have a single - exponential dependency on the parameter . as a consequence",
    ", one can not obtain the following examples of single - exponential algorithms by simply solving these problems via known fpt algorithms parameterized by rank - width or clique - width .",
    "independent set , vertex cover , and @xmath40-coloring admit a single - exponential fpt algorithm when parameteried by the size of a vertex deletion set to distance - hereditary graphs .    for each of the presented problems , we always begin by invoking theorem  [ thm : main ] to compute a vertex deletion set @xmath60 to distance - hereditary graphs of size at most @xmath0 .",
    "in the case of independent set and vertex cover , we can apply standard branching algorithms to solve these problems .",
    "in particular , we begin by branching over the at most @xmath467 options of how @xmath60 intersects with a ( hypothetical ) solution ; let @xmath468 be one such subset of @xmath60 and let @xmath469 .",
    "for independent set , we first test the validity of a branch ( i.e. , whether @xmath468 is independent ) , then delete @xmath60 and all neighbors of @xmath468 , and find a maximum independent set @xmath7 in the remaining distance - hereditary subgraph of @xmath10 in polynomial time . finally , for each branch we compare the desired solution size with @xmath470 ; clearly , a graph is a yes - instance of independent set if and only if at least one selection of @xmath468 results in a value of @xmath470 which is at least the desired solution size .    for vertex cover , after branching we",
    "proceed by testing the validity of a branch ( i.e. , whether each edge with both endpoints in @xmath60 is covered by @xmath468 ) . for each valid branch ,",
    "we delete @xmath60 and the set @xmath471 of all neighbors of @xmath472 in @xmath473 .",
    "next , we find a minimum vertex cover @xmath200 in the remaining distance - hereditary subgraph of @xmath10 in polynomial time . finally ,",
    "for each branch we compare the desired solution size with @xmath474 ; clearly , a graph is a yes - instance of vertex cover if and only if at least one selection of @xmath468 results in a value of @xmath474 which is at most the desired solution size .    for @xmath40-coloring , we also begin by branching over the at most @xmath475 @xmath40-colorings of @xmath60 . for each such proper @xmath40-coloring of @xmath60",
    ", we construct an instance of @xmath40-list coloring as follows : the input graph is @xmath473 , and the list of admissible colors for each vertex @xmath18 contains all colors that are not used by a neighbor of @xmath18 in @xmath60 .",
    "the @xmath40-list coloring problem can be solved in polynomial time on distance - hereditary graphs : indeed , the problem can easily be reduced to the mso@xmath476 model checking problem over labeled graphs with ( at most ) @xmath12 labels . since @xmath473 has rank - width at most @xmath5 , the polynomial - time tractability of the problem follows for instance from courcelle s theorem  @xcite .",
    "all that remains now is to test whether at least one of the considered @xmath475 branches give rise to a yes - instance of @xmath40-list coloring on @xmath473 .",
    "we conclude with a few remarks on why we believe that the presented algorithm is of high interest .",
    "first , it intrinsically exploits the properties guaranteed by distinct , seemingly unrelated characterization of distance - hereditary graphs ; this approach can likely be used to design or improve algorithms for other vertex deletion problems .",
    "second , it uses highly nontrivial reduction rules which simplify canonical split decompositions , and an adaptation or extension of the presented rules could be highly relevant for other graph classes characterized by special canonical split decompositions , such as parity graphs  @xcite or circle graphs  @xcite .",
    "third , it is the first of its kind which targets a `` full '' class of graphs of bounded rank - width ( contrasting previous results for specific subclasses of graphs of rank - width  @xmath5  @xcite ) .",
    "it is worth noting that there remains a number of interesting open problems in this general area .",
    "perhaps the most prominent one is the question of whether vertex deletion to graphs of rank - width @xmath3 , for any constant @xmath3 , admits a single - exponential fixed - parameter algorithm .",
    "our algorithm represents the first steps in this general direction .",
    "recently , kim and the third author  @xcite announced a polynomial kernel for distance - hereditary vertex deletion .",
    "the existence of a polynomial kernel or an approximation algorithm for such vertex deletion problems for @xmath477 remains open .",
    "the first and second authors were supported by the austrian science fund ( fwf , projects p26696 and w1255-n23 ) .",
    "robert ganian is also affiliated with fi mu , brno , czech republic .",
    "the third author was supported by erc starting grant paramtight ( no . 280152 ) and also supported by the european research council ( erc ) under the european union s horizon 2020 research and innovation programme ( erc consolidator grant distruct , agreement no .",
    "648527 ) .",
    "a.  agrawal , s.  kolay , d.  lokshtanov , and s.  saurabh . a faster fpt algorithm and a smaller kernel for block graph vertex deletion . in _",
    "latin 2016 : theoretical informatics - 12th latin american symposium , ensenada , mexico , april 11 - 15 , 2016 , proceedings _ , pages 113 , 2016 .",
    "e.  eiben , r.  ganian , and s.  szeider .",
    "meta - kernelization using well - structured modulators . in t.",
    "husfeldt and i.  a. kanj , editors , _ parameterized and exact computation - 10th international symposium , ipec 2014 , patras , greece ,",
    "september 16 - 18 , 2015 . revised selected papers _ ,",
    "volume  43 of _ lipics _ ,",
    "pages 114126 , 2015 .",
    "e.  eiben , r.  ganian , and s.  szeider .",
    "solving problems on graphs of high rank - width . in _",
    "algorithms and data structures symposium ( wads 2015 ) , august 5 - 7 , 2015 , university of victoria , bc , canada _ , lncs , pages 314326 , 2015 .",
    "m.  r. fellows , d.  lokshtanov , n.  misra , f.  a. rosamond , and s.  saurabh .",
    "graph layout problems parameterized by vertex cover . in _",
    "algorithms and computation , 19th international symposium , isaac 2008 , gold coast , australia , december 15 - 17 , 2008 .",
    "proceedings _ , pages 294305 , 2008 .",
    "f.  v. fomin , d.  lokshtanov , n.  misra , and s.  saurabh .",
    "planar @xmath478-deletion : approximation , kernelization and optimal fpt algorithms . in _",
    "53rd annual ieee symposium on foundations of computer science , focs 2012 , new brunswick , nj , usa , october 20 - 23 , 2012 _ , pages 470479 , 2012 .",
    "j.  gajarsk , p.  hlinen , j.  obdrzlek , s.  ordyniak , f.  reidl , p.  rossmanith , f.  s. villaamil , and s.  sikdar .",
    "kernelization using structural parameters on sparse graph classes . in _",
    "algorithms - esa 2013 - 21st annual european symposium , sophia antipolis , france , september 2 - 4 , 2013 .",
    "proceedings _ , pages 529540 , 2013 .",
    "e.  j. kim and o.  kwon . .",
    "in t.  husfeldt and i.  kanj , editors , _ 10th international symposium on parameterized and exact computation ( ipec 2015 ) _ , volume  43 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 270281 , dagstuhl , germany , 2015 .",
    "schloss dagstuhl  leibniz - zentrum fuer informatik ."
  ],
  "abstract_text": [
    "<S> vertex deletion problems ask whether it is possible to delete at most @xmath0 vertices from a graph so that the resulting graph belongs to a specified graph class . over the past years , the parameterized complexity of vertex deletion to a plethora of graph classes has been systematically researched . here </S>",
    "<S> we present the first single - exponential fixed - parameter algorithm for vertex deletion to distance - hereditary graphs , a well - studied graph class which is particularly important in the context of vertex deletion due to its connection to the graph parameter rank - width . </S>",
    "<S> we complement our result with matching asymptotic lower bounds based on the exponential time hypothesis . as an application of our algorithm , </S>",
    "<S> we show that a vertex deletion set to distance - hereditary graphs can be used as a parameter which allows single - exponential fixed - parameter algorithms for classical np - hard problems .    </S>",
    "<S> distance - hereditary graphs , fixed - parameter algorithms , rank - width </S>"
  ]
}
{
  "article_text": [
    "let @xmath4 be an undirected graph with vertex set @xmath5 , edge set @xmath6 and edge - length function @xmath7 .",
    "we shall use @xmath8 and @xmath9 to stand for @xmath10 and @xmath11 , respectively . for @xmath12 ,",
    "simple @xmath3-path _ is a path from @xmath0 to @xmath1 without repeated vertex in the path . in this paper",
    ", a path always means a simple path .",
    "the _ length of a path _ is the total length of all edges in the path .",
    "an @xmath3-path is a shortest @xmath3-path if its length is minimum amongst all possible @xmath3-paths .",
    "the shortest path length from @xmath0 to @xmath1 is denoted by @xmath13 which is the length of their shortest path .",
    "next - to - shortest _",
    "@xmath3-path is an @xmath3-path which length is minimum amongst those the path lengths _ strictly larger _ than @xmath13 . and",
    "the _ next - to - shortest path problem _ is to find a next - to - shortest @xmath3-path for given @xmath14 , @xmath0 and @xmath1 . in this paper , we present a linear time algorithm for solving the next - to - shortest path problem on graphs with nonnegative edge lengths , assuming the distances from @xmath0 and @xmath1 to all other vertices are given .      the next - to - shortest path problem was first studied by lalgudi and papaefthymiou in the directed version with no restriction to positive edge length @xcite .",
    "they showed that the problem is intractable for path and can be efficiently solved for walk ( allowing repeated vertices ) .",
    "algorithms for the problem on special graphs were also studied @xcite . for undirected graphs with positive edge lengths ,",
    "the first polynomial algorithm was presented in @xcite with time complexity @xmath15 time .",
    "the time complexity has been improved several times @xcite .",
    "the currently best result is @xmath16 @xcite , and recently the author further improved to linear time , assuming the distances from @xmath0 and @xmath1 to all other vertices are given .",
    "hence , the positive length version of the next - to - shortest path problem can be solved with the same time complexity as the single source shortest paths problem . on the other hand ,",
    "the problem becomes more complicated when edges of zero weight are allowed , and there is no polynomial time algorithm for this version before this work .",
    "an edge of zero - length is called as _ zero - edge _ and otherwise a _",
    "positive edge_. let @xmath17 be the union of all shortest @xmath3-paths .",
    "let @xmath18 be the digraph obtained from @xmath17 by orientating all edges toward @xmath1 .",
    "that is , for any directed edge ( arc ) in @xmath18 , there is a shortest @xmath3-path in @xmath14 passing through this edge with the same direction .",
    "since a next - to - shortest path either contains an edge in @xmath19 or not , the problem is divided into two subproblems : the shortest detour path problem and the shortest zigzag path problem .",
    "the _ shortest detour path problem _ is to find a shortest @xmath3-path using at least one edge not in @xmath20 while the _ shortest zigzag path problem _ looks for a shortest @xmath3-path consisting of only edges in @xmath20 with at least one reverse arc of a positive length in @xmath18 .",
    "clearly , the shorter path found from the above two subproblems is a next - to - shortest path .    in this paper",
    ", we solve the nonnegative length version also by solving the two subproblems individually .",
    "but there are some difficulties to be overcome .",
    "first , the digraph @xmath18 is not so easy to construct as in the positive length version .",
    "secondly , @xmath18 is no more a dag ( directed acyclic graph ) as in the positive length version , and therefore some properties in @xcite can not be used .",
    "instead @xmath18 , we solve the two subproblems based on a relaxed digraph @xmath21 of @xmath18 , in which all zero edges are regarded as bidirectional .",
    "the method to solve the shortest detour path subproblem is similar to the previous one for the positive length version , but a special care is taken into consideration for the zero - edges and the proofs are non - trivial and different from the previous ones .",
    "the shortest zigzag path subproblem is relatively more complicated . to solve this subproblem efficiently",
    ", the most important thing is to determine for a pair of vertices @xmath22 if there exists a simple @xmath3-path using a path from @xmath23 to @xmath24 as a backward subpath .",
    "the previous paper @xcite showed a necessary and sufficient condition for the positive length version , but this condition no more holds when there are zero - edges . to overcome this difficulty",
    ", we use immediate dominators developed in the area of flow analysis .",
    "in addition , we define zero - component in @xmath21 , which are basically connected components of the subgraph induced by the zero - edges but any vertex and its dominators are divided into different components . by shrinking zero - components and orientating the remaining zero - edges , we construct an auxiliary dag . with the help of the auxiliary dag , we categorize a shortest zigzag path into four types and derive necessary and sufficient conditions individually .    the main result of this paper is the following theorem , and its proof is given by theorems  [ thm : back ] and [ thm : out ] in sections  3 and 4 , respectively .",
    "[ thm : main ] a next - to - shortest @xmath3-path of an undirected graph with nonnegative edge lengths can be found in linear time if the distances from @xmath0 and @xmath1 to all other vertices are given .",
    "the paper is divided as follows . in section 2 ,",
    "the preliminaries are presented .",
    "in addition to the notation used in this paper , in the preliminaries , we introduce dominators , a method of constructing @xmath21 , and zero - components .",
    "also we show some basic properties in this section . in sections 3 and 4",
    ", we discuss the shortest zigzag , and detour , path problems , respectively . and finally concluding remarks are given in section 5 .",
    "throughout this paper , we shall assume that @xmath14 is the input graph and @xmath25 is the pair of vertices for which a next - to - shortest path is asked .",
    "furthermore , @xmath14 is simple , connected and undirected , and all edge lengths are nonnegative integers .    for a graph @xmath26 , @xmath27 and @xmath28 denote its vertex and edge sets , respectively . for simplicity ,",
    "sometimes we abuse the notation of a subgraph for its vertex set when there is no confusion from the context .",
    "@xmath29-path _ is a path from @xmath30 to @xmath31 . for vertices @xmath30 and @xmath31 on path @xmath32 , let @xmath33 $ ] denote the subpath from @xmath30 to @xmath31 .",
    "we shall use `` a @xmath29-path '' and a path @xmath33 $ ] alternatively . for a path @xmath32",
    ", we use @xmath34 to denote the reverse path of @xmath32 . for paths",
    "@xmath35 $ ] and @xmath36 $ ] , @xmath37 denotes the path obtained by concatenating these two paths .",
    "note that , even for an undirected path , we use @xmath33 $ ] to specify the direction from @xmath30 to @xmath31 .",
    "for example , by `` the first vertex @xmath23 of @xmath33 $ ] satisfying some property '' , we mean that @xmath23 is the first vertex satisfying the property when we go from @xmath30 to @xmath31 along path @xmath32 .",
    "two paths are _ internally disjoint _ if they have no common vertex except their endpoints . for a path @xmath32 , let @xmath38 denote the length of the path .",
    "let @xmath39 denote the shortest path length from @xmath30 to @xmath31 in @xmath14 , which is also called the _ distance _ from @xmath30 to @xmath31 . for convenience ,",
    "let @xmath40 and @xmath41 .    to show the time complexities",
    "more precisely , we shall assume the distances from @xmath0 and @xmath1 to all other vertices are given .",
    "these distances can be found by solving the single source shortest paths ( sssp ) problem . for general undirected and nonnegative edge length graphs",
    "( the most general setting of the problem discussed in this paper ) , the sssp problem can be solved in @xmath16 time @xcite , and more efficient algorithms exist for special graphs or graphs with restrictions on edge lengths .",
    "a shortest path tree rooted at @xmath0 can also be constructed in linear time if the distances from @xmath0 to all others are given .",
    "let @xmath21 be the digraph obtained from @xmath17 by orientating all positive edges toward @xmath1 .",
    "that is , we treat all zero - edges as bidirectional even though only one direction of some of them can be used to form a shortest @xmath3-path . our algorithm for finding a shortest zigzag path works on @xmath21 for the sake of efficiency .    to construct @xmath21",
    ", we have to construct @xmath17 first . in the following ,",
    "we show how to construct @xmath17 and @xmath21 in linear time .",
    "clearly , for @xmath42 , @xmath43 always holds .",
    "unfortunately , the condition that @xmath43 is not a necessary and sufficient condition to determine the set of vertices in @xmath44 when there are zero - edges . the reason is described as follows .",
    "let @xmath45 be the subgraph of @xmath14 with @xmath46 and @xmath47 for @xmath48 .",
    "a vertex is a _ non-@xmath3-cut _ if it is a cut vertex and its removal does not separate @xmath0 and @xmath1 . for a non-@xmath3-cut @xmath23 , a connected component @xmath49 of @xmath50",
    "is called a _ knob _ if @xmath51 .",
    "since @xmath23 is a cut vertex , any @xmath3-path passing through a vertex in @xmath49 repeats at @xmath23 and can not be simple .",
    "furthermore , for any vertex @xmath31 in @xmath49 , since @xmath43 , it must be connected to @xmath23 by a path of zero - length .",
    "[ d+ ] a vertex @xmath31 is in @xmath44 iff @xmath52 is not in any knob .    by definition , @xmath42 implies @xmath52 .",
    "furthermore , @xmath31 can not be in any knob since there is no simple @xmath3-path in @xmath45 passing through any vertex in a knob .",
    "now , we prove the other direction . for any vertex @xmath53 , consider the digraph @xmath54 obtained from @xmath45 by reversing the direction of all positive edges @xmath22 with @xmath55 . also we add a new vertex @xmath56 as well as two arcs @xmath57 and @xmath58 .",
    "then there exists a shortest @xmath3-path passing @xmath31 in @xmath45 iff there are two disjoint paths from @xmath56 to @xmath31 in @xmath54 , or equivalently there is no non-@xmath3-cut .",
    "obviously any vertex @xmath30 with @xmath59 can not be an @xmath60-cut in @xmath54 , and there exists such a cut node iff @xmath31 is in a knob .",
    "@xmath21 can be constructed in linear time if @xmath61 and @xmath62 are given for all @xmath31 .",
    "first we construct @xmath45 in linear time . by using depth - first search starting from @xmath0",
    ", all cut vertices can be found in linear time . according to the order of found cut vertices ,",
    "all knobs can be detected by checking the components after removing the cut vertices .",
    "we shall use the term `` immediate dominators '' defined in @xcite .",
    "a vertex @xmath63 is an _",
    "@xmath0-dominator _ of another vertex @xmath30 iff all paths from @xmath0 to @xmath30 contain @xmath31 .",
    "an @xmath0-dominator @xmath31 of @xmath30 is an _ @xmath0-immediate - dominator _ of @xmath30 , denoted by @xmath64 , if it is the one closest to @xmath30 , i.e. , any other @xmath0-dominator of @xmath30 is an @xmath0-dominator of @xmath64 . in @xmath21 ,",
    "any vertex has a unique @xmath0-immediate - dominator .",
    "the @xmath1-dominator is defined symmetrically , i.e. , @xmath31 is a _",
    "@xmath1-dominator _ of @xmath30 iff any @xmath65-path contains @xmath31 , and @xmath66 stands for the @xmath1-dominator closest to @xmath30 .",
    "note that @xmath0 is an @xmath0-dominator and @xmath1 is a @xmath1-dominator of any other vertex in @xmath21 .",
    "finding immediate dominators is one of the most fundamental problems in the area of global flow analysis and program optimization . the first algorithm for the problem was proposed in 1969 by lowry and medlock @xcite , and then had been improved several times @xcite . a linear time algorithm for finding the immediate dominator for each vertex",
    "was given in @xcite .",
    "a path @xmath32 is a 0-path if all edges in @xmath32 are zero - edges .",
    "a 0-path @xmath33 $ ] is a @xmath67-path if @xmath33 $ ] does not contain any vertex in @xmath68 .",
    "a _ zero - component _ is the subgraph of @xmath21 induced by a maximal set of vertices in which every two vertices are connected by a @xmath67-path .",
    "the zero - component which @xmath31 belongs to is denoted by @xmath69 .",
    "a zero - component may contain only one vertex but no edge .",
    "all the zero - components partition @xmath44 into equivalence classes , i.e. , @xmath70 iff @xmath71 .",
    "we shall show how to find all zero - components of @xmath21 in linear time .",
    "[ zero - d ] if @xmath72 , then @xmath73 and @xmath74 .",
    "if @xmath75 is not an @xmath0-dominator of @xmath31 , there is an @xmath76-path @xmath77 avoiding @xmath75 .",
    "since @xmath31 and @xmath78 are in the same zero - component , there is a 0-path @xmath79 $ ] in @xmath69 avoiding @xmath75 .",
    "thus , @xmath80 , possibly taking a short - cut if the path is non - simple , is a path from @xmath0 to @xmath78 avoiding @xmath75 , a contradiction .",
    "therefore @xmath75 is an @xmath0-dominator of @xmath31 .",
    "similarly we can show that @xmath81 is also an @xmath0-dominator of @xmath78 .",
    "consequently @xmath75 and @xmath81 dominate each other , and thus they are the same vertex .",
    "the result @xmath74 can be shown similarly .    an _ @xmath0-dominator tree _",
    "@xcite of @xmath21 is a tree @xmath82 with root @xmath0 and vertex set @xmath83 .",
    "a vertex @xmath30 is a child of @xmath31 in @xmath82 iff @xmath84 .",
    "the subgraph of @xmath21 induced by the edge set @xmath85 is the union of all zero - components , where @xmath86 is the zero - edges set , and @xmath87 and @xmath88 are the edge sets of @xmath0- and @xmath1-dominator trees of @xmath21 , respectively .",
    "since no positive edge is in any zero - component , we only need to consider the zero - edges @xmath86 . for any vertex @xmath31 ,",
    "if @xmath89 is the last edge of a path from @xmath31 to @xmath81 , then @xmath30 is a child of @xmath81 in the @xmath0-dominator tree . after removing @xmath87 and @xmath88 ,",
    "there is no path from any vertex to its @xmath0- or @xmath1-dominator .",
    "therefore , by definition , the induced subgraph is the union of all zero - components .",
    "since a dominator tree can be constructed in linear time @xcite , the next corollary follows directly from the above lemma .",
    "all zero - components of @xmath21 can be found in linear time .",
    "a positive edge @xmath90 is a reverse positive edge if @xmath91 .",
    "it implies that @xmath92 since any positive edge in @xmath21 is unidirectional .",
    "a _ backward subpath _ of a path in @xmath14 is a path consisting of at least one reverse positive edge and possibly some zero - edges . a semi - path in @xmath21 with at least one backward subpath",
    "is called a _",
    "zigzag path_. two backward subpaths in a zigzag path are consecutive if there are separated by a sequence of non - reverse positive edges and zero edges ; otherwise , they form a longer backward subpath indeed .    by definition ,",
    "a zigzag path is a semi - path in @xmath21 . for simplicity",
    ", we shall use `` path '' instead of `` semi - path '' in the following .",
    "an _ outward subpath _ of an @xmath3-path in @xmath14 is a path consisting of edges in @xmath19 .",
    "the both endpoints of an outward subpath are in @xmath44 and all its internal vertices , if any , are not in @xmath44 . an @xmath3-path is called a _ detour path _ if it contains at least one outward subpath .",
    "the _ shortest detour path problem _ is to find a shortest detour @xmath3-path while the _ shortest zigzag path problem _ looks for a shortest zigzag @xmath3-path consisting of only edges in @xmath20 . since a next - to - shortest path",
    "either contains an edge in @xmath19 or not , the shorter path found from the above two subproblems is a next - to - shortest path .",
    "since @xmath0 and @xmath1 are fixed throughout this paper , we shall simply use `` zigzag path '' and `` detour path '' instead of `` zigzag @xmath3-path '' and `` detour @xmath3-path '' , respectively .",
    "when the edge lengths are all positive , the following result was shown in @xcite , and it is also the basis of the algorithms in this paper . in remaining paragraphs of this subsection , we show theorem  [ backout ] by lemmas  [ oneback ] and [ oneout ] .",
    "[ backout ] a shortest zigzag path contains exactly one backward subpath .",
    "a shortest detour path contains exactly one outward subpath and no backward subpath .",
    "[ oneback ] a shortest zigzag path contains exactly one backward subpath .",
    "suppose by contradiction that @xmath32 is a shortest zigzag path in @xmath21 with more than one backward subpath .",
    "let @xmath93 $ ] , for @xmath94 , be the consecutive backward subpaths in @xmath32 and @xmath95 $ ] where @xmath96 and @xmath97 .",
    "we may assume that the first and the last edges of @xmath98 are positive edges ( otherwise move @xmath99 forth or @xmath100 back accordingly ) . let @xmath101 be the first vertex on @xmath32 such that @xmath102)=0 $ ] and @xmath103 the last vertex such that @xmath104)=0 $ ] ( see fig .",
    "[ f1back].(a ) ) .",
    "we divide into three cases , and in either case we show that there exists a shorter zigzag path @xmath105 .",
    "* there is a path @xmath106 from @xmath0 to an internal vertex @xmath31 of @xmath98 such that @xmath106 is disjoint to @xmath107 $ ] . then @xmath108 $ ] is a zigzag path . since @xmath106 is a short - cut of @xmath109 $ ] , @xmath105 is shorter than @xmath32 ( see fig .  [ f1back].(b ) ) .",
    "* there is a path @xmath110 from an internal vertex @xmath31 of @xmath98 to @xmath1 such that @xmath110 is disjoint to @xmath111 $ ] .",
    "similarly , @xmath112\\circ p_2 $ ] is a zigzag path shorter than @xmath32 .",
    "* otherwise , since the first case does not hold , there exists a path @xmath106 from @xmath0 to a vertex @xmath113 on @xmath107 $ ] , which is internally disjoint to @xmath98 .",
    "furthermore , @xmath114 .",
    "similarly , there exists a path @xmath110 from a vertex @xmath115 on @xmath111 $ ] to @xmath1 , which is internally disjoint to @xmath98 . and @xmath116 .",
    "then the path @xmath117\\circ p_2 $ ] is a zigzag path .",
    "clearly @xmath118 ( see fig .",
    "[ f1back].(c ) ) .    .",
    "( a ) a path @xmath32 with more than one backward subpath . the bold line is @xmath98 ; ( b ) case 1 ; ( c ) case 3 . ]",
    "[ 2paths ] for any two vertices @xmath23 and @xmath24 in @xmath119 , there exist an @xmath120-path and a @xmath121-path ; or an @xmath122-path and an @xmath123-path ; which are disjoint .",
    "the result is trivial for the case @xmath124 .",
    "we only need to show the case @xmath125 .",
    "to show the lemma for this case , we construct an auxiliary directed graph from @xmath21 by adding a new vertex @xmath31 and two bidirectional edges @xmath126 and @xmath127 .",
    "since there is no non-@xmath3-cut , similar to menger s theorem , there is an @xmath3-path passing through @xmath31 in the auxiliary graph , and the desired two paths exist .",
    "[ oneout ] a shortest detour path contains exactly one outward subpath and no backward subpath .",
    "let @xmath32 be a shortest detour path , in which @xmath128 $ ] is an outward subpath .",
    "we shall show that if @xmath32 had another outward subpath or backward subpath in addition to @xmath128 $ ] , we could construct a detour path @xmath105 shorter than @xmath32 .    by lemma  [ 2paths ]",
    ", there exist an @xmath120-path and a @xmath121-path ; or an @xmath122-path and an @xmath123-path in @xmath21 which are disjoint . in either case that the two paths exist , we can concatenate the two paths with @xmath128 $ ] ( or its reverse ) to form a simple @xmath3-path .",
    "it is clear that the shorter detour path in the two cases is a shortest detour path @xmath105 containing @xmath128 $ ] .",
    "by theorem  [ oneback ] , a shortest zigzag path has the form @xmath129\\circ \\bar{p}_2[x , y]\\circ p_3[y , t]$ ] , in which @xmath130 are paths in @xmath21 .",
    "since @xmath131 is required to be simple , the three subpaths must be simple and disjoint except at the two joint vertices .",
    "therefore our goal is to find @xmath132 minimizing @xmath133 subject to that there exists a simple path @xmath134\\circ \\bar{p}_2[x , y]\\circ p_3[y , t]$ ] in @xmath21 .",
    "since @xmath13 is fixed for a given graph @xmath14 , the objective is to find the minimum of @xmath135 .",
    "if @xmath23 and @xmath24 satisfy the constraint , we say `` the pair @xmath22 is _ valid _ '' and `` @xmath24 is valid for @xmath23 '' .",
    "a valid pair @xmath22 with minimum @xmath135 is an _ optimal backward pair _ , or simply _ optimal pair _ , and the corresponding backward subpath is an _ optimal backward subpath_. the shortest zigzag path problem is equivalent to finding an optimal pair .",
    "the auxiliary simple digraph @xmath136 is obtained from @xmath21 by shrinking every zero - component and orientating all the remaining zero - edges toward @xmath1 . by the definition of zero - component ,",
    "if @xmath137 is a zero - edge in @xmath136 , @xmath138 or @xmath139 . therefore the orientation can be easily done . for @xmath69 in @xmath21 , let @xmath140 denote its corresponding vertex in @xmath136 .",
    "for simplicity , since @xmath0 and @xmath1 themselves must be zero - components , the corresponding vertices in @xmath136 are also denoted by @xmath0 and @xmath1 , respectively . for a vertex @xmath140 , @xmath141 and @xmath142",
    "are again the immediate @xmath0- and @xmath1-dominators ( but in @xmath136 ) .",
    "a simple path in @xmath21 corresponds to a simple path in @xmath136 since , without backward subpath , a path can not enter a zero - component twice .",
    "we define a binary relation on pairs of vertices in @xmath83 : @xmath143 or equivalently @xmath144 iff @xmath145 and there exists a path from @xmath146 to @xmath140 in @xmath136 .",
    "let @xmath147 and @xmath148 .",
    "the predicate @xmath149 is true iff @xmath150 and @xmath151 .",
    "[ beta1a ] if @xmath149 is true , @xmath152 .    by definition , @xmath150 , and therefore @xmath153 and @xmath154 .",
    "if @xmath155 , they are connected by a 0-path but not a @xmath67-path , i.e. , a path containing a vertex in @xmath156 . since @xmath157 , a @xmath158-path contains neither @xmath159 nor @xmath160 . since @xmath150 and @xmath161 , @xmath162 , which implies that any @xmath158-path in @xmath21 contains neither @xmath163 nor @xmath164 , a contradiction",
    "the notation defined on @xmath21 will also be used for @xmath136 .",
    "we do not distinguish between them since there will be no confusion from the context .",
    "the next two lemmas appeared in @xcite for positive length version , and it is easy to see it also holds for nonnegative length version .",
    "the next lemma show a necessary condition for the validity of a pair .",
    "[ back_nec ] if @xmath22 is valid , then @xmath149 is true .    by definition , @xmath157 .",
    "if @xmath165 , by the definition of immediate dominator , any @xmath120-path and @xmath158-path contain @xmath163 simultaneously and can not be disjoint .",
    "therefore we have @xmath166 , and then @xmath150 by definition .",
    "the relation @xmath161 can be shown similarly .",
    "[ close ] if @xmath150 , there are two paths from @xmath0 and @xmath24 , respectively , to @xmath23 , which are disjoint except at @xmath23 .",
    "let @xmath167 and @xmath168 be any @xmath169-path . by the definition of immediate dominator , removing any vertex in @xmath170 can not separate @xmath171 and @xmath23 and therefore there are two internally disjoint @xmath172-paths , say @xmath106 and @xmath110 . if @xmath24 is on one of them , say @xmath110 , we have done since @xmath173 and @xmath174 $ ] are the desired paths .",
    "otherwise , let @xmath175 be any @xmath158-path and @xmath31 be the first vertex on @xmath175 and also in @xmath176 .",
    "w.l.o.g . let @xmath177 .",
    "then , the path @xmath178\\circ p_1[v , x]$ ] is a @xmath158-path disjoint to @xmath179 .",
    "[ redu_y ] if @xmath149 is true and there exists a path @xmath32 from @xmath24 to @xmath1 avoiding @xmath180 , then there exists a vertex valid for @xmath23 . furthermore if @xmath181 satisfies the above condition with minimum @xmath182 , then there exists a vertex @xmath31 such that @xmath183 is valid and @xmath184 .",
    "the same result also holds for the case that @xmath149 is true and there exists a path from @xmath0 to @xmath23 avoiding @xmath185 .",
    "we show the first result and the second one can be shown similarly .",
    "let @xmath31 be the last vertex of @xmath32 in @xmath170 .",
    "since @xmath186 is also true , we have that @xmath187 by lemma  [ beta1a ] . by lemma  [ close ] , there are a path @xmath134 $ ] and a path @xmath188 $ ] which are internally disjoint .",
    "then , the path @xmath189 $ ] is a zigzag path and therefore @xmath183 is a valid pair .",
    "since @xmath31 is also a vertex satisfying the condition , we have @xmath184 , otherwise @xmath31 contradicts the minimality of @xmath181 .",
    "by the definition of zero - component , there exists an @xmath120-path avoiding @xmath185 iff @xmath190 is not an @xmath0-dominator of @xmath191 .",
    "similarly , there exists a @xmath121-path avoiding @xmath180 iff @xmath191 is not a @xmath1-dominator of @xmath190 .",
    "therefore , all the valid pairs @xmath22 can be categorized into the following four types , and the best of the four types , if any , is an optimal pair .    * type i : @xmath190 is not an @xmath0-dominator of @xmath191 and @xmath191 is not a @xmath1-dominator of @xmath190 . * type ii : @xmath190 is an @xmath0-dominator of @xmath191 and @xmath191 is a @xmath1-dominator of @xmath190 .",
    "* type iii : @xmath190 is an @xmath0-dominator of @xmath191 and @xmath191 is not a @xmath1-dominator of @xmath190 . * type iv : @xmath190 is not an @xmath0-dominator of @xmath191 and @xmath191 is a @xmath1-dominator of @xmath190 .    in the following subsections",
    ", we shall derive linear time algorithms for each of the types .",
    "the next theorem concludes the result of this section , and its proof is given by lemmas [ type1 t ] , [ type2 t ] and [ type34 t ] in the following subsections .",
    "[ thm : back ] suppose that @xmath61 and @xmath62 are given for all vertices @xmath31 .",
    "a shortest zigzag path can be found in linear time .      by definition , @xmath136 is a dag . if @xmath192 is a zero - edge in @xmath136 , then @xmath193 or @xmath194 . by this property , all the properties and",
    "the algorithm derived for a shortest zigzag path in @xcite also hold for @xmath136 .",
    "[ type1 t ] suppose that @xmath61 and @xmath62 are given for all vertices @xmath31 .",
    "a shortest zigzag path of type i can be found in linear time .    for @xmath22 such that @xmath149 is true , by definition , the pair @xmath22 is valid of type i iff @xmath195 is valid in @xmath136 .",
    "therefore , a shortest zigzag path of type i in @xmath21 can be found by solving the shortest zigzag path problem in @xmath136 . by the result of @xcite",
    ", it can be done in linear time .      for a shortest zigzag path of type ii , the corresponding path in @xmath136 repeats at both @xmath191 and @xmath190 .",
    "the next lemma is not only for type ii .    .",
    "the dotted - line depicts a valid zigzag path .",
    "( a ) @xmath196 and @xmath197 is valid ; ( b ) @xmath98 intersects @xmath106 and @xmath127 is valid . ]",
    "[ redu_cx ] for any @xmath150 , if @xmath24 is valid for some @xmath198 , then there exists some @xmath199 such that @xmath127 or @xmath200 is valid .",
    "since @xmath24 is valid for @xmath101 , there exists a path @xmath201\\circ \\bar{p}_2[x',y]\\circ p_3[y , t]$ ] . by lemma  [ back_nec ] ,",
    "@xmath202 is true and @xmath203 .",
    "since @xmath150 and @xmath204 , @xmath149 is also true .",
    "if @xmath205 or @xmath175 does not pass any vertex in @xmath180 , by lemma  [ redu_y ] , @xmath22 is valid and the proof is complete .",
    "otherwise both the two subpaths pass vertices in @xmath180 , and therefore , in @xmath180 we can find @xmath206 and @xmath207 on @xmath205 and @xmath175 , respectively , as well as a 0-path @xmath208 $ ] which is internally disjoint to @xmath205 and @xmath175 . since @xmath209 and @xmath210 , @xmath211 . since @xmath175 is a path passing @xmath180 and avoiding @xmath101 , @xmath212",
    ". therefore @xmath213 by lemma  [ beta1a ] .",
    "if @xmath98 is disjoint to @xmath106 , the path @xmath201\\circ",
    "\\bar{p}_2[x',q]\\circ q\\circ p_3[q',t]$ ] is a simple path with a backward subpath from @xmath101 to @xmath206 .",
    "that is , @xmath214 and @xmath197 is valid ( fig .  [ f2back].(a ) )",
    ". otherwise @xmath98 intersects @xmath106 .",
    "let @xmath31 be the intersection vertex closest to @xmath206 on @xmath98 .",
    "then , the path @xmath215\\circ q[v , q]\\circ\\bar{p}_2[q , y]\\circ p_3[y , t]$ ] is a simple path with a backward subpath from @xmath31 to @xmath24 .",
    "that is , @xmath216 and @xmath127 is valid ( fig .",
    "[ f2back].(b ) ) .",
    "[ 2p1to2 ] for any two vertices @xmath30 and @xmath31 such that @xmath217 , there exist two internally disjoint paths from @xmath171 to @xmath30 and @xmath31 , respectively",
    ".    by definition , there exists no cut vertex whose removal separates @xmath81 from @xmath30 or @xmath31 . by menger s theorem ,",
    "such two disjoint paths exist .",
    "by definition , if @xmath22 is valid for type ii , @xmath191 is a @xmath1-dominator of @xmath190 and @xmath190 is an @xmath0-dominator of @xmath191 .",
    "we show a stronger condition in the next lemma .",
    "[ type2b ] if @xmath22 is an optimal pair of type ii , @xmath218 and @xmath219 .",
    "suppose that @xmath220 is a shortest zigzag path of type ii , in which @xmath205 is the backward subpath from @xmath23 to @xmath24 .",
    "if @xmath221 , both @xmath106 and @xmath110 contain a vertex in @xmath69 .",
    "we shall show that @xmath222 , and then by lemma  [ redu_cx ] , @xmath22 is not optimal .",
    "the result @xmath218 can be handled similarly .",
    "let @xmath223 $ ] and @xmath224 $ ] be subpaths of @xmath106 and @xmath110 , respectively , such that @xmath225 , @xmath226 , and no internal vertex of them is in @xmath227 .",
    "we can find a path @xmath228 $ ] in @xmath69 and two disjoint paths from @xmath159 to @xmath229 and @xmath230 , respectively ( lemma  [ 2p1to2 ] ) .",
    "then there are two disjoint paths from @xmath113 to @xmath159 , and therefore @xmath222 .",
    "if @xmath218 and @xmath219 as well as @xmath149 is true , we say that @xmath180 and @xmath185 are a _ candidate component pair_. by lemma  [ type2b ] , to find an optimal pair of type ii , we only need to determine if there exists a valid pair for any candidate component pair . for a candidate component pair @xmath180 and @xmath185 , let @xmath231 be the digraph with vertex set @xmath232 .",
    "the edge set is @xmath233)-e(z(x))-e(z(y))$ ] , in which @xmath234 $ ] is the subgraph of @xmath21 induced by @xmath235 .",
    "is true ; ( b ) the case that @xmath236 and @xmath237 exist ( lemma  [ type2iff ] ) ; ( c ) the case that @xmath238 and @xmath239 exist ( lemma  [ type2iff ] ) . ]",
    "the predicate @xmath240 is true iff there are three internally disjoint paths @xmath241 $ ] , @xmath242 $ ] and @xmath243 $ ] in @xmath231 satisfying : ( 1 ) @xmath244 and @xmath245 ; and ( 2 ) @xmath246 or @xmath247 for @xmath248 ; and ( 3 ) @xmath249 and @xmath250 .    fig .  [ fbeta].(a ) illustrates the four possible cases of the three paths when @xmath240 is true .    [ 3v2path ] for any three vertices @xmath229 , @xmath230 and @xmath251 in @xmath185 , there are two disjoint paths @xmath252 $ ] and @xmath253 $ ] , or @xmath254 $ ] and @xmath255 $ ] .",
    "let @xmath256 and @xmath168 be any @xmath169-path .",
    "note that @xmath168 avoids @xmath185 . by lemma  [ 2p1to2 ] , there are two disjoint paths @xmath257 $ ] and @xmath258 $ ] .",
    "if @xmath251 is on one of the paths , we have done . otherwise , let @xmath175 be any path in @xmath259 from @xmath230 to @xmath251 , and @xmath206 be the last vertex of @xmath175 appeared on @xmath106 or @xmath110 .",
    "if @xmath206 is on @xmath106 , then @xmath260\\circ p_3[q , y_3]$ ] and @xmath261 are the desired two paths .",
    "the case that @xmath206 is on @xmath110 can be shown similarly .",
    "[ 3v2pathb ] for any three vertices @xmath99 , @xmath262 and @xmath263 in @xmath180 , there are two disjoint paths @xmath264 $ ] and @xmath265 $ ] , or @xmath266 $ ] and @xmath267 $ ] .",
    "[ type2iff ] suppose that @xmath180 and @xmath185 are a candidate component pair .",
    "there exist @xmath268 and @xmath269 such that @xmath270 is a valid backward pair of type ii iff @xmath240 is true .",
    "it is clear that if @xmath270 is valid for type ii , the three paths exist and @xmath240 is true .",
    "it remains to prove that such a valid @xmath270 exists if @xmath240 is true .",
    "since @xmath240 is true , there are three internally disjoint paths @xmath241 $ ] , @xmath242 $ ] and @xmath243 $ ] in @xmath231 , in which @xmath249 and @xmath250 .    by lemma  [ 3v2path ] and w.l.o.g . , there exist disjoint paths @xmath271 $ ] and @xmath272 $ ] . in the case that @xmath273 , @xmath274 contains only one vertex but no edge .",
    "if @xmath275 , by corollary  [ 3v2pathb ] , there exist two disjoint paths @xmath276 $ ] and @xmath277 $ ] ; or @xmath278 $ ] and @xmath279 $ ] . if @xmath236 and @xmath237 exist , the path @xmath280 is a desired path , as shown in fig .",
    "[ fbeta].(b ) .",
    "that is , @xmath281 and @xmath282 .",
    "otherwise @xmath238 and @xmath239 exist , and the path @xmath283 is the desired path , as shown in fig .",
    "[ fbeta].(c ) , namely , @xmath281 and @xmath284 .",
    "it remains to consider @xmath285 . by the definition of immediate dominator",
    ", there is a path @xmath168 from @xmath263 to @xmath1 avoiding @xmath99 .",
    "the path @xmath286 is a desired path ( similar to fig .",
    "[ fbeta].(c ) ) , in which @xmath281 and @xmath284 .    from @xmath231",
    ", we construct a vertex - capacitated digraph @xmath287 as follows .",
    "first , if any connected component contains exactly one vertex @xmath30 in @xmath180 and one vertex @xmath31 in @xmath185 , we replace the component by an edge @xmath288 .",
    "then , we add a new source @xmath289 and a new sink @xmath290 .",
    "for each @xmath291 there is an edge @xmath292 ; and there is an edge @xmath293 for each @xmath199 .",
    "the capacity of vertex @xmath31 is denoted by @xmath294 .",
    "the capacities are assigned as follows : @xmath295 ; @xmath296 for any @xmath297 ; and @xmath298 for any other vertex . in",
    "the following , `` the max - flow in @xmath287 '' means the maximum vertex - capacitated flow from @xmath289 to @xmath290 in @xmath287 .",
    "note that a vertex - capacitated digraph can be easily transformed to an edge - capacitated digraph , and the maximum flow of a vertex - capacitated digraph can be computed by traditional maximum - flow algorithms .    .",
    "( a ) @xmath98 and @xmath175 are disjoint ; ( b ) @xmath98 intersects @xmath175 .",
    "the dotted - line depicts a valid zigzag path . ]    [ beta22 ] suppose that @xmath180 and @xmath185 are a candidate component pair and @xmath200 is not a valid type - i pair for any @xmath268 and @xmath299 .",
    "then , @xmath240 is true iff the max - flow in @xmath287 is at least three .",
    "if @xmath240 is true , it is easy to see that the max - flow in @xmath300 is at least three .",
    "we need to show the other direction .",
    "if there is a flow of value three , there are three internally disjoint paths @xmath301 $ ] , @xmath302 . according to the assigned capacities ,",
    "there are at least two distinct vertices in @xmath303 , and so are in @xmath304 .",
    "the only question is that two of the three paths may have the same endpoints .",
    "that is , w.l.o.g . , @xmath285 and @xmath305 . by the construction of @xmath287 , the connected component containing",
    "the two paths must contain another vertex in @xmath306 .",
    "let @xmath269 be such a vertex .",
    "then , let @xmath98 be a path from @xmath103 to @xmath99 and @xmath206 the first vertex of @xmath98 intersecting @xmath106 or @xmath110 .",
    "w.l.o.g . let @xmath206 be on @xmath110 ( see fig .",
    "[ f3back ] ) .    * if @xmath98 and @xmath175 are disjoint , the three paths @xmath106 , @xmath307\\circ p_2[q , x_1]$ ] and @xmath175 satisfy the requirement and @xmath240 is true ( fig .",
    "[ f3back].(a ) ) .",
    "* otherwise @xmath98 and @xmath175 share a common vertex , possibly @xmath282 .",
    "let @xmath207 be the last vertex of @xmath98 on @xmath175 . * * if @xmath308 , the three paths @xmath106 , @xmath309\\circ p_2[q , x_1]$ ] and @xmath175 satisfy the requirement and @xmath240 is true .",
    "* * otherwise @xmath310 .",
    "there exists a path @xmath311\\circ \\bar{q}[q , q']\\circ p_3[q',x_3]$ ] is a path from @xmath229 to @xmath263 with a backward subpath of length @xmath312 , and this path can be extended to a zigzag path of type i , a contradiction to the assumption ( fig .",
    "[ f3back].(b ) ) .",
    "note that @xmath313 is true and therefore @xmath314 by lemma  [ beta1a ] .",
    "[ betatime ] under the assumption of lemma  [ beta22 ] , @xmath240 can be determined in @xmath315 time , in which @xmath316 and @xmath317 are the numbers of edges and vertices in @xmath287 , respectively .    by lemma  [ beta22 ]",
    ", @xmath240 can be determined by checking whether the max - flow in @xmath287 is larger than or equal to three .",
    "since all the capacities are integral , this max - flow question can be determined with at most three iterations of the augmentation step of the ford - fulkerson maximum flow algorithm @xcite or equivalently at most three breadth - first search on the residue graphs .",
    "therefore the time complexity is linear .",
    "[ type2 t ] suppose that @xmath318 is the length of an optimal backward subpath of type i. in linear time , we can find an optimal backward subpath of type ii with length less than @xmath318 or determine there is no such subpath .    by lemmas [ type2iff ] and [ beta22 ]",
    ", we can determine if there exists an optimal backward subpath of type ii with length less than @xmath318 .",
    "note that the proofs of lemmas  [ type2iff ] and [ beta22 ] are constructive and they implies a linear time algorithm for constructing such a zigzag path if it exists . by corollary [ betatime ] ,",
    "the time complexity is linear to @xmath319 , in which the summation is taken over all candidate component pairs . by lemma  [ type2b ] and the uniqueness of immediate dominator",
    ", any zero - component is involved in the max - flow computations at most twice .",
    "therefore the total time complexity is @xmath320 .",
    "types iii and iv are similar to type ii , but simpler .",
    "furthermore , the two types are symmetric and we shall only explain type iii briefly .",
    "a pair @xmath22 is valid for type iii if @xmath190 is an @xmath0-dominator of @xmath191 and @xmath191 is not a @xmath1-dominator of @xmath190 .",
    "[ type3 ] if @xmath22 is an optimal pair of type iii , @xmath219 .    by using a similar argument as in lemma  [ type2b ] ,",
    "this lemma follows .    in the next lemma",
    ", @xmath231 has the same definition as in type ii .",
    "[ type3iff ] suppose that @xmath219 and @xmath191 is not a @xmath1-dominator of @xmath190 .",
    "there exist @xmath268 and @xmath269 such that @xmath270 is a valid backward pair of type iii iff there are two disjoint paths @xmath241 $ ] and @xmath242 $ ] in @xmath231 such that @xmath249 .",
    "it is clear that if @xmath270 is valid for type iii , the two paths exist .",
    "conversely , if @xmath106 and @xmath110 exist , by lemma  [ 2p1to2 ] , there are two disjoint paths @xmath321 $ ] and @xmath322 $ ] , respectively . since @xmath191 is not a @xmath1-dominator of @xmath190 , we can find a path @xmath168 from @xmath229 to @xmath1 and avoiding @xmath180 .",
    "let @xmath31 be the last vertex of @xmath168 intersecting @xmath77 or @xmath274 .",
    "then @xmath31 is valid for @xmath99 , namely , @xmath281 and @xmath323 .",
    "[ type34 t ] suppose that @xmath318 is the length of an optimal backward subpath of type i. in linear time , we can find an optimal backward subpath of type iii or iv with length less than @xmath318 or determine there is no such subpath .",
    "similar to lemma  [ beta22 ] , the necessary and sufficient condition of type iii shown in lemma  [ type3iff ] can be determined by checking whether the max - flow in @xmath287 is at least two or not . and",
    "the max - flow computations for all candidate pairs can be done in linear time .",
    "the optimal backward subpath of type iv can be computed similarly .",
    "in this section we show an efficient algorithm for finding a shortest detour path .",
    "a shortest detour path contains exactly one outward subpath and has no backward subpath , in which an outward subpath is a path @xmath32 such that @xmath324 , both endpoints of @xmath32 are in @xmath44 , and any of its internal vertex is not in @xmath44 .",
    "note that a _ simple _ @xmath3-path containing an edge not in @xmath17 must have length strictly larger than @xmath13 , or otherwise it should be entirely in @xmath17 .",
    "our goal is to efficiently find a minimum length @xmath3-path with an outward subpath .    in this section",
    "@xmath82 denotes an arbitrary shortest - path tree of @xmath14 rooted at @xmath0 and let @xmath325 denote the graph obtained by removing edges in @xmath326 from @xmath82 .",
    "apparently @xmath327 is a forest consisting of subtrees of @xmath82 and @xmath328 . by the definition of @xmath17 , any shortest path between two vertices in @xmath17",
    "must be included in @xmath20 . for any @xmath42",
    ", the path from @xmath0 to @xmath31 on @xmath82 must be entirely within @xmath20 and therefore @xmath31 must be a root of a subtree of @xmath327 .",
    "furthermore , the root of any subtree of @xmath327 must be in @xmath44 because the edge between it and its parent is removed .    for any vertex @xmath329 ,",
    "let @xmath330 denote the root of the subtree of @xmath327 which @xmath31 belongs to .",
    "let @xmath331 denote the set of edges @xmath22 such that @xmath332 and @xmath333 .",
    "define @xmath334 note that , since @xmath14 is undirected , both @xmath22 and @xmath335 denote the same edge .",
    "but @xmath336 in general .",
    "[ out1 ] any detour path @xmath32 contains an edge in @xmath331 . furthermore ,",
    "if @xmath337 is an edge on @xmath32 , then @xmath338 .    by definition @xmath32",
    "contains an outward subpath .",
    "since the both endpoints of this outward subpath are in @xmath44 , they must be in different subtrees of @xmath327 , and @xmath32 must have an edge in @xmath331 .",
    "the result @xmath338 directly follows from definitions .    for any vertex @xmath31 , @xmath339 and the equality holds iff",
    "@xmath340\\circ q[r_v , t]$ ] is a shortest @xmath341-path , in which @xmath340 $ ] is the @xmath342-path in @xmath82 and @xmath343 $ ] is an arbitrary shortest @xmath344-path in @xmath17 .",
    "a vertex @xmath31 is a _ dangler _ if @xmath345 . by definition",
    "any vertex in @xmath44 is a dangler .",
    "[ dangler1 ] if @xmath31 is not a dangler , there exists a detour path @xmath98 of length at most @xmath346 .",
    "let @xmath32 be the @xmath76-path in @xmath82 and @xmath105 any shortest @xmath341-path .",
    "let @xmath206 be the last vertex of @xmath105 intersecting @xmath32 , possibly @xmath347 .",
    "the path @xmath348\\circ p'[q , t]$ ] is a simple @xmath3-path , and the length of @xmath98 is @xmath349 .",
    "we shall show @xmath350 .",
    "then , by the definition of @xmath327 , @xmath351 and therefore @xmath352 . consequently @xmath32 is a simple path not entirely in @xmath17 and thus a detour path .",
    "suppose to the contrary that @xmath353 .",
    "since @xmath354 , we have @xmath355 and furthermore @xmath356 . since @xmath206 is on @xmath105 , @xmath357 which is a contradiction to that @xmath31 is not a dangler .",
    "[ dangler2 ] suppose that @xmath31 is not a dangler and @xmath32 is any shortest @xmath341-path .",
    "for any @xmath358 , @xmath359 .",
    "let @xmath30 be a vertex with @xmath360 .",
    "we show that @xmath32 can not contain @xmath30 . since @xmath330 is on a shortest @xmath76-path , @xmath361 , and therefore @xmath362 .",
    "since @xmath363 , by @xmath360 , we have @xmath364 .",
    "thus , @xmath365 .",
    "since @xmath31 is not a dangler , @xmath366 , and therefore @xmath30 is not on any shortest @xmath341-path .     is a dangler while @xmath24 is not .",
    "@xmath367 is a common vertex of a shortest @xmath120-path and a shortest @xmath123-path ; ( b ) the triangle inequalities when @xmath368 intersects @xmath369 ( for lemma  [ outopt ] ) ; ( c ) case 3 in the proof of lemma  [ outopt ] : when @xmath206 is on @xmath370 $ ] . ]",
    "[ outopt ] if @xmath22 minimizes function @xmath371 and @xmath372 , then there exists a simple @xmath3-path of length @xmath373 and with one edge in @xmath331 .",
    "such a path is a shortest detour path .    since an edge in @xmath331 is not an edge in @xmath20 , a simple path containing edge @xmath374 must have length strictly larger than @xmath13 .",
    "we only need to show the existence of such a simple path , and then it is a shortest detour path by lemma  [ out1 ] .",
    "let @xmath369 and @xmath375 be the shortest paths from @xmath0 to @xmath23 and @xmath24 on @xmath82 , respectively .",
    "let @xmath368 be a shortest @xmath121-path .",
    "if @xmath369 and @xmath368 are disjoint , @xmath376 is a simple path and its length is clearly @xmath373 . otherwise let @xmath206 be the last vertex of @xmath368 intersecting @xmath369 . by the triangle inequalities ( see fig .",
    "[ outf].(b ) ) , we have @xmath377\\circ y[q , y])+w(x , y)+w(p_x[x , q]\\circ y[q , t])\\\\ & = & w(p_x)+w(x , y)+w(y)=d_s(x)+w(x , y)+d_t(y)=f(x , y).\\end{aligned}\\ ] ] by the minimality of @xmath373 , the equality must hold .",
    "i.e. , @xmath378    we divide into three cases according to whether @xmath23 and @xmath24 are danglers .",
    "* case 1 : both @xmath23 and @xmath24 are danglers . by lemma  [ 2paths ]",
    ", there are two disjoint paths @xmath379 $ ] and @xmath380 $ ] ; or @xmath381 $ ] and @xmath382 $ ] in @xmath21 .",
    "if @xmath77 and @xmath383 exist , the path @xmath384\\circ ( y , x)\\circ p_x[x , r_x]\\circ q_1'$ ] is a simple path . since @xmath23 is a dangler , @xmath385\\circ q_1'$ ]",
    "is a shortest @xmath123-path and the length of the path is @xmath373 .",
    "the other case that @xmath274 and @xmath386 exist can be shown similarly . *",
    "case 2 : neither @xmath23 nor @xmath24 is a dangler . by lemma  [ dangler1 ] , there exist two detour paths @xmath106 and @xmath110 such that @xmath387 and @xmath388 .",
    "then @xmath389 * case 3 : either @xmath23 or @xmath24 is a dangler .",
    "assume that @xmath23 is a dangler but @xmath24 is not .",
    "first we show that @xmath390 in this case .",
    "recall that @xmath368 is a shortest @xmath121-path intersecting @xmath369 .",
    "if the intersection @xmath206 is on @xmath391 $ ] , by lemma  [ dangler2 ] , @xmath392 .",
    "otherwise @xmath206 is on @xmath370 $ ] and therefore @xmath367 is on a shortest @xmath121-path . as a result ,",
    "@xmath393 . since @xmath24 is not a dangler , @xmath394 .",
    "therefore @xmath395 since @xmath396 is on a shortest @xmath122-path , @xmath397 , and equivalently @xmath398 since both @xmath367 and @xmath396 are in @xmath44 , @xmath399 , and we have @xmath400 therefore @xmath390 .",
    "thus , any shortest @xmath401-path @xmath98 is disjoint to @xmath375 .",
    "the path @xmath402\\circ q$ ] is a simple @xmath3-path with length @xmath403 .",
    "[ thm : out ] for an undirected graph with nonnegative edge lengths , the shortest detour path problem can be solved in @xmath320 time if @xmath61 and @xmath62 are given for all @xmath31 .    by lemma  [ outopt ] ,",
    "the length of a shortest detour path is the minimum value of function @xmath371 . to compute @xmath22 minimizing @xmath371 , we first construct @xmath17 and a shortest path tree @xmath82 , and then find the edge set @xmath331 .",
    "the minimum value of @xmath371 can be found by checking both @xmath373 and @xmath404 for all edges @xmath405 .",
    "the time complexity is linear if the distances @xmath61 and @xmath62 for all @xmath31 are given .",
    "once @xmath22 is found , by the method in the proof of lemma  [ outopt ] , the corresponding path can be constructed in linear time .",
    "by theorem  [ thm : main ] , we have the next corollary .    for undirected graphs with nonnegative edge lengths ,",
    "if the single source shortest path problem can be solved in @xmath406 time , the next - to - shortest path problem can be solved in @xmath407 time .",
    "important graph classes for which the single source shortest path problem can be solved in linear time include unweighted graphs ( by bfs @xcite ) , planar graphs @xcite , and integral edge length graphs @xcite .",
    "as pointed out in @xcite , it can be easily shown that the next - to - shortest problem is at least as hard as finding a shortest path between two vertices .",
    "when negative - weight edges are allowed , the next - to - shortest problem becomes np - hard because it is polynomial - time reducible from the longest path problem by a similar reduction .",
    "an interesting problem is how to efficiently find the next - to - shortest paths for single source and multiple destinations .",
    "another open problem is the complexity of the version on directed graphs with positive - weight edges .",
    "bang ye wu was supported in part by nsc 97 - 2221-e-194 - 064-my3 and nsc 98 - 2221-e-194 - 027-my3 from the national science council , taiwan , r.o.c .",
    "b.  y. wu , a simpler and more efficient algorithm for the next - to - shortest path problem , in proceeding of the 4th annual international conference on combinatorial optimization and applications ( cocoa 2010 ) , lncs 6509 , 219227",
    ". an improved and full version of this paper is available by arxiv : 1105.0608v1 ."
  ],
  "abstract_text": [
    "<S> for two vertices @xmath0 and @xmath1 in a graph @xmath2 , the next - to - shortest path is an @xmath3-path which length is minimum amongst all @xmath3-paths strictly longer than the shortest path length . in this paper </S>",
    "<S> we show that , when the graph is undirected and all edge lengths are nonnegative , the problem can be solved in linear time if the distances from @xmath0 and @xmath1 to all other vertices are given .    </S>",
    "<S> algorithms , graphs , shortest path , time complexity , next - to - shortest path </S>"
  ]
}
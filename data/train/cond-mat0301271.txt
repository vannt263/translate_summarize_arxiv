{
  "article_text": [
    "the last years have seen a fruitful exchange between theoretical computer science and statistical mechanics @xcite . due to the formal analogy between various combinatorial optimization problems and certain spin - glass models , substantial progress in the understanding of hard combinatorial questions",
    "could be made by using tools which were originally developed in the statistical mechanics of disordered systems .",
    "the most striking results so far were obtained in the description of the solution - space structure of the random satisfiability problem @xcite , of the number partitioning problem @xcite , of vertex covers @xcite or colorings @xcite of random graphs . in these cases , equilibrium methods from statistical mechanics can be applied directly , including e.g. the replica and cavity approaches .",
    "the main result is that these models undergo phase transitions from an easily solvable , under - constrained phase to a hard , highly constrained one .",
    "the latter is characterized by the existence of glass - like states , i.e. the solution space is subdivided into a large number of disconnected clusters , and there are exponentially many excited states hindering even the best local algorithms from finding optimal solutions in sub - exponential time ( where exponential means , here and in the following , exponential in the system size , as given e.g. by the number of discrete degrees of freedom or , in a more computer - science oriented language , in the number of bits needed to encode an instance of the problem under consideration ) .    up to now ,",
    "much less is understood about the dynamical behavior of algorithms which are used to numerically solve the combinatorial problems .",
    "also these are known to undergo algorithm - dependent phase transitions from phase space regions where the problems are typically efficiently solvable , to regions where solutions are exponentially hard to construct .",
    "some understanding was obtained for heuristics , i.e. approximate algorithms running in linear time , see e.g. @xcite , for complete solvers @xcite which are guaranteed to find an optimal solution , and finally for randomized versions of these complete algorithms @xcite .",
    "the problem in analyzing algorithms is that they are intimately related to non - equilibrium statistical mechanics , which frequently is technically much harder to handle . in addition , algorithms are not forced to fulfill physical criteria like detailed balance , which again complicates the analysis .    in this paper",
    ", we are going to analyze a different class of algorithms : _ stochastic local search algorithms _ , in particular variants of the so - called _ walk - sat _",
    "algorithm @xcite which is one of the most popular and successful solvers for satisfiability problems .",
    "whereas the full problem is to hard to attack successfully by means of analytical tools , we will give some approximation methods which allow us to draw a qualitative picture on how these algorithms solve an optimization problem .",
    "the paper is organized as follows : in sec .",
    "[ sec : model ] the considered models are introduced .",
    "we first introduce the random @xmath0-satisfiability problem ( @xmath0-sat ) and give an overview of the current state of knowledge .",
    "then we introduce a second model , the random @xmath0-xor - satisfiability problem ( @xmath0-xor - sat ) .",
    "being in many aspects similar to the @xmath0-sat , it has recently attracted some interest due to its better analytical tractability . in the last part of sec .",
    "[ sec : model ] we give a short introduction to some stochastic local search algorithms , in particular to the famous walk - sat algorithm which will be analyzed in the present paper .",
    "we then show some numerical observations in sec .",
    "[ sec : num ] .",
    "these are analytically explained in secs . [",
    "sec : lin ] and [ sec : exp ] .",
    "the first of these two sections deals with the linear - time behavior , whereas the second one describes the exponential time behavior .",
    "our results are summarized in the last section .",
    "_ note : _ while preparing this paper , we noticed that a complementary study of the walk - sat algorithm was carried out independently by g. semerjian and r. monasson @xcite .",
    "a random @xmath0-satisfiability ( @xmath0-sat ) formula @xmath1 consists of @xmath2 logical clauses @xmath3 which are defined over a set of @xmath4 boolean variables @xmath5 which can take the values 0=false and 1=true .",
    "every clause contains @xmath0 randomly chosen boolean variables which are connected by logical or operations ( @xmath6 ) and appear negated with probability 1/2 , e.g.  @xmath7 for @xmath8 . because of the or - conjunction a @xmath0-sat - clause is satisfied if at least one of the @xmath0 variables has the correct assignment . in the formula",
    "@xmath1 all clauses are connected by logical and operations ( @xmath9 ) , @xmath10 so all clauses have to be satisfied simultaneously in order to satisfy the formula . for @xmath11 ,",
    "i.e. if each clause connects only two variables , the problem is easy , and polynomial - time algorithms are known @xcite . on the other hand ,",
    "the problem becomes @xmath12-complete for all @xmath13 @xcite , so one expects that no efficient algorithm to solve generic @xmath0-sat formulas in polynomial time can be found .",
    "the considerable attention attracted by the random @xmath0-sat problem was initiated about one decade ago , when the model was numerically observed @xcite to undergo a characteristic phase transition which is parametrized by the clause - to - variable ratio @xmath14 . for @xmath15 and sufficiently large",
    "system sizes @xmath4 , almost all 3-sat formulas were found to be satisfiable .",
    "for @xmath16 this behavior changes drastically ; the formulas are found to be unsatisfiable with a probability approaching one in the thermodynamic limit @xmath17 .",
    "even more interestingly , this transition was observed to coincide with a strong exponential peak in the algorithmic solution time of complete algorithms .",
    "the hardest to solve formulas are thus located close to the phase boundary , and are said to be critically constrained .",
    "the observation of this phase transition finally led to the application of analytical tools developed in the statistical mechanics of disordered systems , since random @xmath0-sat can be mapped to a spin - glass model on a random hyper - graph .",
    "after the pioneering work by monasson and zecchina @xcite providing the first analytical approximation to the phase transition using the replica method , many efforts were done to improve the analytical understanding . in ref .",
    "@xcite , on the basis of a variational approach , a second phase transition was suggested to appear inside the satisfiable phase : for very low @xmath18 , the set of all solutions to a @xmath0-sat formula was found to be unstructured , with the exponentially large number of solutions collected in one large connected cluster . for larger @xmath18 the solution space breaks into an exponential number of clusters . using the cavity approach ,",
    "the ( probably ) exact location of this transition was established recently for @xmath19 .",
    "it is given by @xmath20 @xcite .",
    "a model showing a very similar behavior , but being analytically much more tractable , is given by the random @xmath0-xor - sat problem ( in the physical literature initially denoted as @xmath0-hsat @xcite ) .",
    "the difference to @xmath0-sat is that the variables appearing in the clauses are connected by logical xor operations ( @xmath21 ) instead of or .",
    "a clause is thus satisfied if an odd number of variables is assigned correctly , i.e. to true if the variable appears non - negated , and to false if it appears negated .",
    "the @xmath21-operation is equivalent to an integer addition modulo 2 . using this equivalence we can map each clause to a linear equation ( modulo 2 ) , and the formula consequently to a coupled set of @xmath2 linear equations .",
    "the solution of this system can be easily found in @xmath22 steps .",
    "hence xor - sat formulas can be solved efficiently by a _",
    "algorithm , i.e. by exploiting the global information about the instance and its structure in every step .",
    "if we use , however , _",
    "local _ algorithms like the ones used also for @xmath0-sat , we observe a very similar behavior of both models .    again , the system can be conveniently parametrized by @xmath14 .",
    "the numbers given below are valid for @xmath19 , but the qualitative picture is valid for any @xmath13 . for @xmath23 ,",
    "the formula is typically easy to solve , the solution space consisting of one large cluster . in the region @xmath24 , the formulas are still satisfiable with probability tending to one for @xmath17 , but the solution state decays into an exponential number of clusters .",
    "in addition , there are also exponentially many metastable states which prevent even the best local algorithms from fast convergence to a solution . for @xmath25 ,",
    "the system is almost surely unsatisfiable .",
    "these values were originally calculated using the replica method which is believed to be exact , but still lacks a rigorous foundation . a very beautiful result for @xmath0-xor - sat",
    "was recently obtained in two independent works @xcite : the results given above , including the ones obtained by one - step replica symmetry broken calculations , were reproduced using mathematically rigorous methods .",
    "the @xmath0-xor - sat problem is also interesting from a physical point of view , because it is equivalent to a diluted @xmath0-spin model .",
    "such models are frequently discussed in connection to the glass transition , see e.g. @xcite .      as already mentioned in the introduction ,",
    "here we are not interested in the solution space structure of @xmath0-sat and @xmath0-xor - sat , but in the _ non - equilibrium dynamics _ of so - called stochastic local search algorithms ( sls ) .",
    "the idea behind these algorithms is that , if a formula is satisfiable , a solution can frequently be found more quickly if _ randomized _ algorithms are used . in general , these algorithms are _ incomplete _ , i.e. they stop once they have found a solution , but they are not guaranteed to really find one .",
    "due to their random character , they are also not able to prove the unsatisfiability of a formula . in the case where there is no solution the algorithm just runs for ever , or until some running - time cutoff is reached .",
    "here we mainly concentrate on the _ walk - sat algorithm _ introduced in @xcite .",
    "its most recent implementations are available in the satlib @xcite , and they are one of the best stochastic local search algorithms for random @xmath0-sat .",
    "the algorithm starts with a random assignment to all @xmath4 variables . within this assignment",
    ", there is a number @xmath26 of satisfied clauses , whereas the other @xmath27 are unsatisfied .    in every step",
    ", the algorithm selects an unsatisfied clause @xmath28 randomly and then one of its @xmath0 variables @xmath29 +    * with probability @xmath30 randomly ( _ walk_-step ) , + * with probability @xmath31 the variable in @xmath28 occurring in the least number of satisfied clauses .",
    "( _ greedy_-step ) . +    the current assignment of @xmath29 is inverted .",
    "all clauses containing @xmath29 that were unsatisfied before become now satisfied .",
    "clauses that were satisfied behave differently for the two models under consideration : for @xmath0-sat , a previously satisfied clause becomes unsatisfied iff @xmath29 was the only correctly assigned variable in this clause . for @xmath0-xor - sat ,",
    "every previously satisfied clause containing @xmath29 becomes unsatisfied .",
    "these steps are repeated until no unsatisfied clause is left .",
    "then the algorithm has found a solution of formula @xmath1 and stops . as noted earlier the algorithm will run for ever if no solution exists .",
    "there are variants for the greedy step : the algorithm could also select the variable in @xmath28 leading to the minimal number of unsatisfied clauses ( `` maximal gain '' ) , or the one minimizing the number of previously satisfied clauses which become unsatisfied ( `` minimal negative gain '' ) .",
    "the second case is equivalent to our choice for @xmath0-xor - sat .",
    "for @xmath0-sat they are different due to the fact that not all satisfied clauses become unsatisfied .",
    "a completely different heuristic is the gsat heuristic @xcite which , in the greedy step , globally selects the variable leading to the minimal number of unsatisfied clauses . in numerical studies ,",
    "this selection is outperformed by walk - sat @xcite .",
    "there also other heuristic variations of walk - sat and gsat are discussed . for reasons of clarity",
    "we concentrate completely on the algorithm given above .",
    "we expect , however , that the approximate approach developed in this paper can also be extended to more involved cases , as long as the dynamics can be considered as a markov process .",
    "a different iteration of variable flips was introduced by schning @xcite .",
    "he suggested to stop the algorithm after @xmath32 steps , and to restart it by selecting a new random initial assignment to all @xmath4 boolean variables . for @xmath33 ,",
    "i.e. for a pure random walk dynamic , he was able to prove that the worst case solution time goes down from @xmath34 iterations to only @xmath35 steps , i.e. the algorithm is exponentially accelerated . this simple algorithm shows , up to a refinement leading to @xmath36 steps @xcite , the currently best known worst case behavior of all sat - algorithms .    in the following sections , we will analyze both models for exponential waiting times and for an exponential number of random restarts .",
    "we will concentrate on formulas which are satisfiable , i.e. on variables - to - clauses ratios inside the satisfiable phase of the model under consideration . in the unsatisfiable phase there are no solutions , thus the algorithm can not terminate by construction .",
    "now we present some numerical observations on the behavior of walk - sat applied to randomly generated satisfiability formulas .",
    "we look to @xmath0-sat as well as to @xmath0-xor - sat , and we mainly concentrate on the solution times needed by walk - sat , and the dynamical evolution of the number of unsatisfied clauses while the algorithm is running . explaining",
    "these observations will be the final aim in the following sections .",
    "let us start with random @xmath0-sat .",
    "at first we realize that the running time heavily depends on the ratio @xmath37 of clauses to variables .",
    "let us concentrate on the case @xmath19 and @xmath38 first , i.e. only walk - steps are performed . for small @xmath18 negating one variable in an unsatisfied clause rarely causes other clauses to become unsatisfied . up to a critical threshold @xmath39 a solution is found in a median time growing linearly with @xmath4 , above this point running times grow exponentially , see figs . [ fig:3sat_median ] and [ fig : walksattime ] .",
    "this observation does not depend on the fact whether we use the algorithm with or without restarts . in the following we measure all running times in the number of monte - carlo sweeps ( mc sweeps ) , i.e.",
    "a single step of the algorithm leading to the negation of one variable is counted as @xmath40 . during a time interval of length one ,",
    "every variable becomes thus negated on average once .",
    "note that in this representation linear solution times lead to a constant number of mc sweeps , whereas exponential iterations of walk - sat correspond to exponentially many mc sweeps . in fig .",
    "[ fig:3sat_timehisto ] we show a histogram of the resolution times inside the exponential regime .",
    "obviously , this distribution can be well described by the mean of the logarithm of the running time .",
    "for such an exponentially dominated distribution this is equivalent to characterizing it by the median , whereas the average running time would be dominated by exponentially rare events with exponentially longer resolution times .",
    "the algorithm starts with an extensive number of unsatisfied clauses , and stops when their number reaches zero . to characterize the search process we therefore look at the behavior of @xmath41 , which is given as the number of unsatisfied clauses per variable .",
    "we can think of it as an energy density of the system of the @xmath4 variables . in a randomly drawn starting configuration of the boolean variables @xmath42",
    ", there are on average @xmath43 of all clauses unsatisfied , we thus have almost surely @xmath44 . concentrating first on the linear time behavior , i.e. to finite mc times , it is convenient to work with large systems , @xmath45 . these show a good separation of linear and exponential time scales but also minimize the influence of fluctuations .",
    "numerically we find , in dependence on @xmath18 , the following behavior : +    * for @xmath46 a solution is found after a finite number of mc sweeps , i.e. @xmath41 becomes zero at finite mc times .",
    "this solution time grows with @xmath18 , and diverges once we approach the dynamical threshold @xmath47 .",
    "+ * for @xmath48 the energy density @xmath41 initially decreases and quickly equilibrates to a non - zero plateau ( fig .",
    "[ fig : walksattime ] ) . for larger times",
    "@xmath41 fluctuates around its plateau value , as can be seen for smaller system sizes , cf .",
    "fig [ fig : walksattimefluct ] . eventually , and only if the formula is satisfiable , one of these fluctuations is large enough to reach @xmath49 .",
    "this behavior explains the origin of the title of the paper : for @xmath50 , the system equilibrates to a non - zero number of unsatisfied clauses , and only fluctuations around this equilibrium lead the dynamics to satisfying assignments , and the algorithm stops .",
    "such macroscopic fluctuations appear , of course , only with exponentially small probability , giving rise to exponential solution times .",
    "this observation leads to an obvious way of improving the algorithmic performance : we may choose a better heuristic having a lower equilibrium number of unsatisfied clauses .",
    "exactly this is achieved by introducing a fraction @xmath51 of greedy steps , see fig .",
    "[ fig : walksattimegreedy ] where the plateau energy is determined as a function of @xmath30 for two different values of @xmath50 .",
    "we can see an minimum in the plateau energy for high values of @xmath30 .",
    "the dynamical threshold itself also changes slightly and has a maximum at @xmath52 .",
    "there formulas up to @xmath53 can be solved in linear time .",
    "a qualitatively similar behavior can be observed for random @xmath0-xor - sat , for @xmath19 and @xmath33 ( pure walk dynamics ) .",
    "the main difference is of a quantitative nature : the dynamical threshold marking the onset of exponential solution times is located at @xmath54 .",
    "we therefore do not repeat the figures given for random 3-sat , but the corresponding numerical data can be found in the following sections in comparison to analytical results .",
    "the main idea of the analytical approach presented in this section is to characterize each variable only by the number of satisfied and unsatisfied clauses it is contained in .",
    "we subdivide the set of all @xmath4 boolean variables into subsets of @xmath55 variables belonging to @xmath56 satisfied and @xmath57 unsatisfied clauses , for a randomly selected variable the numbers @xmath56 and @xmath57 are thus taken with probability @xmath58 .",
    "the numbers @xmath55 and thus also the probabilities @xmath59 are changed by the action of walk - sat , but for every single variable @xmath60 remains constant as it counts the total number of clauses containing this variable .    from these quantities",
    "we can , in particular , calculate the total number of unsatisfied clauses @xmath61 . taking into account that by summing over variables every clause is counted @xmath0-fold",
    ", we find @xmath62 where @xmath63 denotes the average over the distribution @xmath64 at mc - time @xmath65 .",
    "the algorithm does not select variables according to @xmath59 , but selects first an unsatisfied clause @xmath66 and then , according to the chosen heuristic ( greedy or walk step ) , one of the variables @xmath29 in @xmath66 is flipped .",
    "the probability that variable @xmath29 belongs to exactly @xmath56 satisfied and @xmath57 unsatisfied clauses is denoted by @xmath67 , and can be calculated from @xmath59 under the assumption of _ independence of neighboring sites _ , i.e. we assume that the joint distribution for three variables being in one unsatisfied clause factorizes .",
    "this assumption , which we will exploit more frequently , is the main approximation we apply in the analytical approach , and it allows us to describe the full dynamics in terms of @xmath59 .",
    "it is strictly valid only for the initial configuration of the dynamics , but as we will see below , it can give a good approximation also for larger times .    for a walk step , variable @xmath29",
    "is randomly selected in @xmath66 .",
    "there are @xmath68 possibilities for selecting a @xmath29 which appears in @xmath56 satisfied and @xmath57 unsatisfied clauses . by normalization",
    "we thus find the following selection probability : @xmath69    for a greedy step , the only random choice is the selection of the unsatisfied clause @xmath66 .",
    "then the variable @xmath29 is selected which appears in the smallest number @xmath56 of satisfied clauses among all @xmath0 variables in @xmath66 .",
    "if there is more than one variable with the same minimal @xmath56 , then one of them is chosen randomly . applying the independent - site assumption , and using the heavyside function under the convention @xmath70",
    ", we find for @xmath11 @xmath71\\notag\\\\      & = & 2 p_t^{(u)}(s , u ) \\sum_{s ' , u ' } p_t^{(u)}(s ' , u ' ) \\theta(s'-s)\\notag\\\\      & = & p_t^{(u)}(s , u ) \\left[2 - \\sum_{u'=0}^{\\infty }        \\left(p_t^{(u)}(s , u ' ) + 2 \\sum_{s'=0}^{s-1 } p_t^{(u)}(s ' ,          u')\\right)\\right]\\ , \\end{aligned}\\ ] ] and similarly for @xmath19 @xmath72\\notag\\\\       & = & 3 p_t^{(u)}(s , u ) \\left[1 - \\sum_{u'=0}^{\\infty }        \\left(1/2 p_t^{(u)}(s , u ' ) +   \\sum_{s'=0}^{s-1 } p_t^{(u)}(s ' ,           u')\\right)\\right]^2      + 1/4 p_t^{(u)}(s , u ) \\left [ \\sum_{u'=0}^{\\infty } p_t^{(u)}(s ,        u')\\right]^2\\ . \\end{aligned}\\ ] ] note that the contribution @xmath73 is a correction term for the case that @xmath74 which results from the convention @xmath70 .    for the full algorithms ,",
    "these two different steps appear with probabilities @xmath30 and @xmath31 .",
    "the selection probability @xmath75 is thus given by the linear combination of the two cases , @xmath76    at this point , gsat - like heuristics could also be included , e.g. by taking @xmath77 with @xmath78 .",
    "this would guarantee a preferential selection of variables belonging to a high number of unsatisfied clauses . here",
    "we do not consider this additional possibility .      for a moment we concentrate on the simplified case where the algorithms uses only walk steps , i.e. to @xmath33 @xcite .",
    "we further assume that @xmath56 and @xmath57 are , for arbitrary times , distributed independently according to poissonian distributions : @xmath79 again , this assumption is valid for @xmath80 , whereas deviations appear for larger times . on average",
    "each variable is contained in @xmath81 satisfied and @xmath82 unsatisfied clauses .",
    "if we plug this ansatz into we get for an algorithm without greedy - steps @xmath83 which again is a product of poissonian distributions of @xmath56 and @xmath84 . hence , on average , the negated variable @xmath29 is contained in @xmath85 satisfied and @xmath86 unsatisfied clauses .",
    "we continue by first considering the analytically simpler case of @xmath0-xor - sat . there , by flipping @xmath29 , all @xmath56 satisfied clauses containing @xmath29",
    "become unsatisfied , whereas all @xmath57 unsatisfied ones become satisfied . the _ expected number of unsatisfied clauses _",
    "@xmath87 changes during one step as @xmath88 concentrating on the _ average dynamics _ , which is followed with probability approaching one in the thermodynamic limit @xmath17 , we have @xmath89 . measuring the time @xmath65 in mc sweeps",
    ", every algorithmic step contributes a @xmath90 , and the difference on the left - hand - side of eq .",
    "( [ eq : meansteppois ] ) can be replaced by a time derivative ( if @xmath45 ) , @xmath91 if we solve this differential equation we get for the the energy density of @xmath0-xor - sat @xmath92 in the typical starting configuration half the clause are satisfied and half are not , i.e. @xmath93 . so we finally get @xmath94 in fig .",
    "[ fig : numtyp3xorsat ] the results for different @xmath18 are compared to numerical simulations . for small times",
    "both curves coincide , because correlations have not yet built up .",
    "later the algorithm reaches a lower density of unsatisfied clauses than the poissonian approximation would suggest .",
    "we also see that there are two different regimes . for small @xmath18",
    "the energy decreases quickly to zero - reaching zero at finite mc times with non - zero slope . for larger @xmath18 ,",
    "the number of unsatisfied clauses first decreases , but then reaches a positive plateau value .",
    "both regimes are separated by a dynamical threshold which is located at @xmath95 in the special case @xmath19 we thus find @xmath96 which coincides perfectly with our numerical findings .",
    "note that for @xmath97 , the algorithm thus constructs a satisfying assignment already after a linear number of algorithmic steps .",
    "above @xmath47 , the algorithm does not reach a solution in linear times with a probability tending to one in the large-@xmath4 limit .      for random @xmath0-sat we can get a similar estimate .",
    "we have to take into account that now satisfied clauses do not necessarily become unsatisfied if a contained variable is inverted . for each @xmath0-sat clause @xmath28",
    "there is one unsatisfying and @xmath98 possible satisfying assignments .",
    "the only case where the clause becomes unsatisfied by flipping a single variable @xmath29 is the assignment where this variable is the only correct assigned variable in @xmath28 .",
    "if we assume independent clauses this happens with probability @xmath99 , so we get for the expected number of unsatisfied clauses @xmath100 going for @xmath17 again to continuous - time quantities and differential equations , we find @xmath101 with solution ( the initial condition is given by @xmath102 ) @xmath103       \\left[e^{-\\frac{2^k}{2^k-1}t}-1\\right]\\right)\\ , \\ ] ] cf .",
    "[ fig : numtyp3sat ] . for random @xmath0-sat",
    "we thus find the poissonian estimate @xmath104 for the onset of exponential solution times . in the special case",
    "@xmath105 we get @xmath106 which is smaller than the numerical value 2.7 .",
    "we have seen that already a simple poissonian approximation is able to qualitatively reproduce the behavior of walk - sat for linear solution times , at least for a pure walk - dynamics without greedy steps .",
    "there were , however , some systematic quantitative deviations , in particular for the case of random @xmath0-satisfiability . it is thus necessary to go beyond the simple poissonian ansatz for @xmath59 , i.e. for the time - dependent fraction of boolean variables belonging to exactly @xmath56 satisfied and @xmath57 unsatisfied clauses .",
    "our aim is to work only with these quantities , i.e. we still have to keep the approximation that the joint distribution for variables within one clause factorizes .",
    "this approximation of independent neighboring variables was already used in the beginning of this section , when @xmath107 was derived , cf .",
    "( [ eq : p_flip_walk]-[eq : pflip_greedy_k_3 ] ) .      as",
    "above , we denote by @xmath108 the expected number of variables that occur in exactly @xmath56 satisfied and @xmath57 unsatisfied clauses at step @xmath65 .",
    "our algorithm starts at @xmath109 and each step counts as @xmath110 .",
    "we follow the procedure in @xcite to describe the typical evolution of the algorithm .    a variable @xmath29 with @xmath111 satisfied and @xmath112 unsatisfied clauses is flipped .",
    "this occurs with probability @xmath113 .",
    "three different processes contribute to @xmath114 :    * _ contribution by @xmath29 : _ the @xmath111 satisfied clauses become unsatisfied , whereas the @xmath112 unsatisfied clauses become satisfied .",
    "the number of variables characterized by @xmath111 satisfied , @xmath112 unsatisfied clauses is thus decreased by one , the number of variables in @xmath112 satisfied and @xmath111 unsatisfied clauses is increased by one .",
    "this means that the expected number of variables @xmath115 is decreased by @xmath113 , and @xmath116 is increased by the same amount . * _ neighbors of @xmath29 in previously satisfied clauses _ : the flipped variable @xmath29 occurs , on average , in @xmath117 previously satisfied clauses , where @xmath118 . since each clause contains @xmath0 variables , and",
    "since random formulas are locally tree - like , there are on average @xmath119 neighbors in previously satisfied clauses . + all these clauses become unsatisfied .",
    "this means that for each other variable contained in these satisfied clauses , the number of satisfied clauses goes down by one , the number of unsatisfied clauses is increased by one .",
    "taking into account that , according to the assumption of independent neighbors , these belong to @xmath56 satisfied and @xmath57 unsatisfied clauses with probability @xmath120 , we conclude that @xmath55 is , on average , decreased by @xmath121 .",
    "one out of these @xmath56 satisfied clauses is the one with the flipped variable @xmath29 , so the decrease of @xmath55 is now added to @xmath122 . * _ neighbors of @xmath29 in previously unsatisfied clauses _ : analogously to the discussion in the last item one gets contributions to @xmath55 for variables @xmath123 which occur together with @xmath29 in unsatisfied clauses .    combining these processes we get an evolution equation for the expected numbers @xmath55 of variables appearing in exactly @xmath56 satisfied and @xmath57 unsatisfied clauses at time @xmath65 :    @xmath124    setting again @xmath90 and replacing differences by derivatives in the thermodynamic limit , @xmath125 we get a set of differential equations for @xmath59 :    @xmath126    in the typical initial configuration the probability of a clause to be unsatisfied is @xmath127 and so @xmath128 is given by equation with @xmath129 .    by numerical integration of we",
    "can find the typical trajectory for an algorithm with given @xmath130 .",
    "the results for an algorithms without greedy - steps ( e.g. @xmath131 ) for different values of the ratio @xmath14 are shown in figure [ fig : numtyp3xorsat ] .",
    "they are compared with numerical data obtained from single runs of the algorithm on a large single , randomly selected sample formula .",
    "as we can see the assumption of independent variables is suitable to describe the behavior of the algorithm in this model .",
    "we also see that the dynamical threshold @xmath47 , which marks the onset of exponential solution times , is again given by 1/3 .    ) , as a function of the mc time @xmath65 , for walk - sat with _",
    "walk steps _ only .",
    "different ratios of @xmath18 are shown , from top to bottom we have @xmath132 .",
    "the dashed line is obtained by numerically integrating equations , the full line gives the poissonian approximation .",
    "these results are compared to the evolution for a ( random ) single 3-xor - sat instance with @xmath133 , as given by the symbols.,height=264 ]    when analyzing the algorithm including a fraction of greedy steps we see that the assumption of independent variables is indeed very crucial . in figure [ fig : xorgreedy ] we show the result of the numerical integration now using @xmath134 as given by eq . .",
    "since in this case the probability of a variable to be flipped depends on its neighbors naturally correlations between neighboring variables built up . this explains why the ansatz does not give a good quantitative approximation when greedy steps are included .    .",
    "as above the dashed line is obtained by numerically integrating equation after plugging in eq . and using @xmath135 .",
    "the dotted line shows the evolution of a ( random ) single run of the algorithm with @xmath133 . from top to bottom we have @xmath136 ( i.e. no greedy steps ) , @xmath137 , @xmath138 , @xmath139 .",
    "the energy plateau decreases with q but due to correlations the integrated equation does not fit the numerical data.,height=264 ]      let us now consider the slightly more involved case of random @xmath0-sat .",
    "as already discussed in the context of the poissonian approximation , we have to take into account that flipping a variable does not necessarily unsatisfy all previously satisfied clauses the variable is contained in .",
    "we assume again that the probability of such a clause to become unsatisfied is clause- and time - independently given by its naive average @xmath140 .",
    "similar to xor - sat we get three contributions to @xmath114 , one coming from the flipped variable itself , two from neighbors in previously satisfied ( resp .",
    "unsatisfied ) clauses .    *",
    "if the flipped variable @xmath29 appears in exactly @xmath111 satisfied and @xmath112 unsatisfied clauses than , as in xor - sat , @xmath141 is decreased by one .",
    "this happens with probability @xmath142 . + by flipping @xmath29 , all @xmath112",
    "previously unsatisfied clauses become satisfied . out of the @xmath111",
    "previously satisfied clauses , a random number @xmath143 remains satisfied , @xmath144 become unsatisfied , i.e. @xmath145 is increased by one .",
    "there are @xmath146 possibilities for selecting these @xmath143 clauses , each one appearing with probability @xmath147 .",
    "+ the total contribution by @xmath29 is obtained by summing over all possible values of @xmath143 . *",
    "the contributions from neighbors of the flipped variable are similar to xor - sat .",
    "the only difference is that the average number of neighboring variables on satisfied clauses becoming unsatisfied is now @xmath148 .",
    "combining all contributions we derive a set of differential equations for the probability distribution of the variables : @xmath149 also these equations have to be solved numerically . the results for the most interesting case @xmath19 ( i.e. @xmath150 ) for different values of @xmath18 are shown in figure [ fig : numtyp3sat ]",
    ". even if they are quantitatively much more accurate than the poissonian approximation , there are some systematic deviations compared to direct numerical simulations .",
    "the curves match the simulation results for small times",
    ". then correlations between neighboring variables build up , violating our basic assumption .",
    "however , for larger times both curves match again , because the same distribution @xmath59 is reached .",
    "this can be seen in the histogram in figure [ fig : psudistr ] : at @xmath151 the distributions @xmath59 as derived from the rate equations or evaluated numerically are different , while after @xmath152 they again have almost converged to the same distribution .",
    "this observation allows for a precise determination of the dynamical threshold @xmath47 which marks the transition from typically linear to exponential algorithmic solution times needed by walk - sat : the transition is defined by the point where the expected energy density @xmath41 asymptotically does not decrease to zero any more . in figure [ fig:3sat_threshold ]",
    "one can see that , for @xmath19 , this happens at @xmath153 .",
    "are shown , from top to bottom we have @xmath154 .",
    "the dashed line is obtained by integrating equations with @xmath155 .",
    "the symbols show the evolution of a ( random ) single run of the algorithm with @xmath133 .",
    "the solid line shows the analytical solution of the markov equation assuming a poissonian distribution @xmath59 for all times @xmath65 , for clarity only @xmath156 and @xmath157 are depicted.,height=264 ]     for t=1.4 ( left ) and t=6 .",
    "the results are shown as a function of @xmath56 , the different curves correspond to @xmath158 ( from top to bottom ) .",
    "one can see that numerical and analytical results differ for @xmath159 , whereas they are very close for larger times corresponding to the energy plateau.,title=\"fig:\",height=207 ]   for t=1.4 ( left ) and t=6 .",
    "the results are shown as a function of @xmath56 , the different curves correspond to @xmath158 ( from top to bottom ) .",
    "one can see that numerical and analytical results differ for @xmath159 , whereas they are very close for larger times corresponding to the energy plateau.,title=\"fig:\",height=207 ]     ( from rate equations ) reaches zero , as a function of @xmath18 .",
    "this time diverges logarithmically at @xmath47 . for larger @xmath18 ,",
    "a non - zero energy plateau is found , which is shown in the right curve.,height=264 ]    as already observed for xor - sat , the influence of greedy steps can not be reproduced very well . in figure [ fig:3satgreedytime ]",
    "we show results for three different @xmath30 at @xmath160 .",
    "the energy density obtained by assuming independent variables gives a too low energy density .",
    "for @xmath161 it even decreases to zero at finite times , contrary to our numerical results ( cf . sec .",
    "[ sec : num - ksat ] ) .",
    "we therefore conclude that the independent - neighbor approximation is only suitable for the case without greedy steps , where less correlations can be built up .    .",
    "as above the dashed line is obtained by numerically integrating equation after plugging in eq . .",
    "from top to bottom we have @xmath137 , @xmath138 , @xmath139 .",
    "the symbols show simulation data for the evolution of a single run of the algorithm with @xmath162 .",
    ", height=264 ]",
    "in the last section , we have characterized the _ typical linear - time behavior _ of walk - sat on satisfiable , randomly generated @xmath0-sat and @xmath0-xor - sat formulas .",
    "we have , within some approximation assuming independent neighbors , calculated the trajectory which is followed by the system in terms of the probabilities @xmath59 that a randomly selected variable belongs to exactly @xmath56 satisfiable and @xmath57 unsatisfiable clauses .",
    "`` typical '' behavior means in this context that the trajectory is followed with probability tending to one in the thermodynamic limit @xmath17 .",
    "we have seen that there exists some ( model - dependent ) dynamical threshold @xmath47 , below which the algorithm reaches zero energy , i.e. a solution of the sat formula , after linear time . above @xmath47 , the typical trajectory",
    ", however , shows a fast equilibration towards a non - zero plateau value @xmath163 .",
    "the walk - sat algorithm is no longer able to construct a solution in linear time , i.e. we expect the solution times to become exponentially large .",
    "the approach of sec .",
    "[ sec : lin ] thus fails to describe the final descent of the energy to zero .    in sec .",
    "[ sec : num ] we have seen that , for smaller system sizes , the number of unsatisfied clauses fluctuates around its expected value . eventually these fluctuations become large enough that the system by chance hits a solution  fluctuations are the way walk - sat finally succeeds constructing a solution . however , we expect these fluctuations to be exponentially rare , i.e. we have to wait almost surely an exponentially long time to really touch a solution .",
    "this section is dedicated to characterizing these fluctuations , or , more precisely , to calculating the probability @xmath164 that the system reaches @xmath165 after some finite time @xmath166 , under the condition that the system started initially with some @xmath167 .",
    "this probability gives all important information about the dominant exponential contribution to the typical running times @xmath168 beyond @xmath47 :    * for _ walk - sat without restarts _ , we start from a typical initial condition @xmath169 ( for @xmath0-sat ) resp .",
    "1/2 ( for @xmath0-xor - sat ) , and we wait until the system reaches @xmath49 .",
    "this does not happen for finite times , i.e. the solution time is given by the exponent @xmath170 the solution time is thus , in general , exponentially large in @xmath4 .",
    "note that the order of limits in the above expression is relevant , there @xmath166 measures only a finite mc time scale . with interchanged limits ,",
    "the right - hand side would vanish , since the algorithm finds a solution after exponential times @xmath166 with probability one .",
    "* for _ walk - sat with restarts _ , the situation changes slightly .",
    "let us assume that the algorithm stops every @xmath171 walk - sat iterations and re - initializes the variables randomly . in this case , we have to take into account two distinct rare events : first",
    ", the starting point may be close to a solution , i.e. @xmath167 is atypically small .",
    "this happens with probability @xmath172 where @xmath173 is the micro - canonical entropy for the energy density @xmath167 .",
    "@xmath174 tends to one for the typical starting point discussed in the previous item , and becomes exponentially rare for smaller initial energies .",
    "this may be balanced by the fact , that finding a solution after some given time @xmath166 becomes more probable for smaller initial energies . from the probability of finding a solution after a single restart , @xmath175",
    ", we can read off the number of restarts @xmath176 needed to find a solution with high probability : @xmath177\\ ] ]    our aim is thus to calculate the large - deviation functional determining @xmath164 . as we will see , this can be done only within the poissonian approximation , i.e. throughout this section we assume @xmath178 with @xmath179 being time - independent .",
    "here we discuss only an algorithm without greedy - steps , where the above approximation works reasonably well .",
    "therefore @xmath67 is given by equation .",
    "the number of unsatisfied clauses in a formula at time @xmath65 is given by @xmath180 .",
    "this number changes by @xmath181 in the next step if a variable with @xmath57 unsatisfied and @xmath56 satisfied clauses is flipped .",
    "the probability @xmath182 of a given energy shift @xmath183 in a single step is consequently given by @xmath184    the probability @xmath185 of a change of the number of unsatisfied clauses by @xmath186 after @xmath187 steps is given by the convolution of the single - step probabilities .",
    "for @xmath188 with small @xmath189 , the energy density @xmath41 and thus @xmath190 are almost time - independent , so we get in fourier space @xmath191 switching again to intensive quantities , we have @xmath192 and thus @xmath193 as the probability of the algorithm for getting from energy density @xmath194 at time @xmath65 to energy density @xmath195 at time @xmath196 . to calculate the transition probability between @xmath167 and arbitrary @xmath197 after linear time @xmath171 we write @xmath166 as a composition of many small intervals @xmath198 .",
    "we then get that transition probability by integrating over all possible paths @xmath41 going from @xmath167 to @xmath197 . by this step",
    "also the conjugate variable @xmath199 becomes a time - dependent function @xmath200 , @xmath201 where the lagrangian @xmath202 is given by @xmath203 we can replace the integral by its saddle point in the thermodynamic limit . since @xmath200 is not a dynamic variable ( @xmath204 does not appear in the lagrangian ) we find @xmath205 the saddle point in @xmath41 is given by the euler - lagrange equation @xmath206 we are , in particular , interested in trajectories leading to a solution of the formula , i.e.  trajectories starting at some @xmath167 and going to @xmath207 after some given final time @xmath166 .",
    "this results in a set of two coupled first - order non - linear differential equations for @xmath41 and @xmath208 with two boundary conditions given for @xmath41 , and none for @xmath208 . by substituting @xmath209 the equations",
    "read @xmath210 a trivial solution of the second equation , @xmath211 leads to @xmath212 which is exactly the equation for the typical trajectory given by .",
    "indeed we have @xmath213 , so this trajectory has probability 1 in the thermodynamic limit .",
    "this solution is , however , not stable since we have @xmath214 for @xmath215 and @xmath216 for @xmath217 , i.e. the trajectory deviates from the typical one once @xmath218 deviates from 1 .",
    "we can , however , solve the equations for xor - sat in this poissonian approximation and get @xmath219 in principle also the integrals in the second expression can be carried out analytically , but we failed to find a compact representation of the result . the solution still contains the unknown constant @xmath220 which has to be adjusted to meet the final condition @xmath165 .",
    "we have observed that @xmath220 is slightly smaller than @xmath221 , but it is easier to determine @xmath222 than its inverse @xmath223 .    : energy densities @xmath224 for various initial conditions @xmath167 and solution times @xmath166 .",
    "the system first equilibrates to a plateau being independent on the initial condition , and finally solves the sat formula by a macroscopic fluctuation.,height=264 ]    the trajectories show an interesting behavior , cf .",
    "figure [ fig:3hsatendens ] : after about 1 mc - sweep the energy reaches a plateau independent of the starting energy density @xmath41 .",
    "the plateau value is the same as given by the typical trajectory and almost independent of the time @xmath166 where the solution is found .",
    "the energy drops to @xmath225 suddenly about 1 mc - sweep before @xmath166 .",
    "this is similar to the qualitative picture we observed numerically in sec .",
    "[ sec : num ] : the system first equilibrates and then , by means of an exponentially improbable fluctuation , reaches zero energy , cf .",
    "[ fig : walksattimefluct ] .",
    "the fluctuations which are present in the numerical data can not be seen in the analytical curve due to the fact that the latter one gives an average over all possible trajectories under the condition that @xmath226 is reached for the first time at @xmath166 , so only the very last fluctuation leading to the solution is common to all possible numerical trajectories .    to calculate the probability that the algorithm , starting at some @xmath167 , finds a solution after time @xmath166 we have to calculate the action @xmath227 using solution ( [ eq : solxorsatpois ] ) .",
    "the evaluation is simplified by plugging in the saddle - point equations in order to eliminate @xmath228 , @xmath229 the results are shown in fig [ fig:3hsatwirk ] for different values of the initial condition @xmath167 and different solution times .",
    "for the typical initial condition @xmath230 we find a monotonically decreasing function which has practically reached its asymptotic value for @xmath231 . from equation ,",
    "the probability that the algorithm finds a solution is given by @xmath232 and the typical solution time of the algorithm _ without restarts _ is given by eq .",
    "( [ eq : t_norestart ] ) , @xmath233    : action @xmath234 as a function of the resolution time @xmath166 , for initial conditions @xmath235 , from bottom to top .",
    "the inset shows the logarithm of the predicted solution time for the same values @xmath167 , but now from top to bottom.,height=264 ]    we also observe that , for smaller than typical @xmath167 , the action shows a pronounced minimum for small solution times .",
    "this minimum corresponds to trajectories which start close to a solution ( small @xmath167 ) and go more or less directly to this solution ( small @xmath166 ) .",
    "as discussed in the beginning of this section , it may be possible that the algorithm can profit from this by using random restarts .",
    "taking the entropy as calculated in ref .",
    "@xcite , we however find that the minimum in @xmath234 is over - compensated by the small entropy of low - energy starting configurations , cf .",
    "the inset of fig .",
    "[ fig:3hsatwirk ] where @xmath236 is presented .",
    "the minimum of @xmath237 is still found for the typical starting configuration , and it is related to the typical running time by @xmath238 . here",
    "it coincides with the solution time without restarts .     for schning s",
    "algorithm ( only walk steps , random restarts after @xmath239 steps ) measured as the number of restarts , as a function of @xmath18 . the analytical result is given by the full line .",
    "numerical data for @xmath240 ( dots , squares , diamonds , lines are guides to the eyes only ) seem to indicate much smaller solution times",
    ". the inset shows , however , that there are huge finite size effects for @xmath241 ( crosses , stars ) .",
    "the analytical estimates for the corresponding solution times are @xmath242 . ,",
    "height=264 ]    in fig .",
    "[ fig:3hsattime ] , the resulting solution time is compared to numerical data obtained using the algorithm with random restarts after @xmath32 iterations . due to the exponential behavior only small systems up to @xmath243 could be investigated in the full satisfiable region .",
    "the resulting running times seem to be much smaller than the analytical predictions .",
    "there are , however , huge finite size effects . in the inset",
    "we show numerical data for @xmath244 and @xmath245 , where the exponent is still small enough that systems up to @xmath246 can be easily solved .",
    "it is obvious that even from such large systems the asymptotic running time can not be reasonably estimated .",
    "on the other hand , the qualitative behavior is well - represented by the analytical curve , in particular the sub - linear slope close to the threshold .",
    "the analytical curve suggests @xmath247 .",
    "another interesting observation is that , at the sat / unsat threshold @xmath248 , the analytical prediction for the solution - time exponent is 0.249 , which is smaller but quite close to schning s rigorous upper worst - case bound @xmath249 .",
    "the same type of analysis can be done for the case of random @xmath0-sat .",
    "the main difference is , as mentioned already in sec .",
    "[ sec : lin ] , that a satisfied clause does not necessarily become unsatisfied when one of its variables is flipped .",
    "this happens only if the clause is satisfied only by the variable to be flipped , which is one of the @xmath250 satisfying assignments to this clause .",
    "we again use the assumption that the variables in one clause are uncorrelated and assume that a clause becomes unsatisfied with probability @xmath140 . in analogy to the discussion above",
    "we conclude that the probability that a variable flip leads to a given energy change @xmath183 is given by @xmath251 where @xmath143 sums over all possible numbers of clauses which become unsatisfied in the considered algorithmic step . concentrating again on the pure walk algorithm without greedy steps , i.e. on @xmath33",
    ", we can go through the same procedure as for @xmath0-xor - sat .",
    "the transition probability from some initial to some final density of unsatisfied clauses is , in the poissonian approximation ( [ eq : p_s_u_pois2 ] ) given by the path integral @xmath252 with the modified lagrangian @xmath253 the saddle - point equations are given by @xmath254 their solution dominates , for @xmath17 , the path integral ( [ eq : pathintpois ] ) and is given by the generalization of eqs .",
    "( [ eq : solxorsatpois ] ) : @xmath255 the results for the typical trajectories leading to a solution after some given final time @xmath166 are presented in fig . ( [ fig:3satendens ] ) .",
    "they show the same qualitative behavior like @xmath0-xor - sat with a slightly slower convergence towards the equilibrium due to the reduced exponential factor @xmath256 .",
    "also the action calculated for the trajectories shows a similar behavior like for @xmath0-xor - sat , cf .",
    "[ fig:3satwirk ] . the exponentially dominant contribution to the typical solution time",
    "is again given by @xmath257 .    in fig .",
    "[ fig:3sattime ] we finally compare the predicted typical solution time with numerical simulations .",
    "close to the dynamical threshold , the numerical running times are much smaller , which can be explained already by the fact that the poissonian approximation under - estimates @xmath47 . for larger",
    "@xmath18 , the numerical data cross the analytical approximation , but both stay well below schning s bound .",
    "this is to be expected , since there is an exponential number of possible solutions , while schning assumes only the existence of a single one .",
    "note that the solution times are exponentially smaller for 3-sat than for random 3-xor - sat .    :",
    "energy densities @xmath224 for various initial conditions @xmath167 and solution times @xmath166 .",
    "the system first equilibrates to a plateau being independent on the initial condition , and finally solves the sat formula by a macroscopic fluctuation.,height=264 ]    : action @xmath234 as a function of the resolution time @xmath166 , for initial conditions @xmath258 , from bottom to top.,height=264 ]     for schning s algorithm ( only walk steps , random restarts after @xmath239 steps ) measured as the number of restarts , as a function of @xmath18 .",
    "the analytical result is given by the full line .",
    "numerical data for @xmath240 ( squares , dots , diamonds ) this time cross the analytical prediction .",
    "note that the solution times are smaller than for 3-xor - sat.,height=264 ]",
    "in this paper , we have presented an approximate analytical approach to describe the dynamical behavior of a class of stochastic local search algorithms applied to random @xmath0-satisfiability and @xmath0-xor - satisfiability problems .",
    "we have seen that there are two distinct dynamical phases :    * for clause - to - variable ratio @xmath97 ( with @xmath47 being algorithm- and problem - dependent ) , the algorithm is able to solve almost all instances in linear time . in this regime",
    ", the dynamics was studied using a simple rate - equation approach which was able to capture the most important features of the average trajectory taken by the system under the action of the algorithm . * for @xmath50 , typical solution times were found to scale exponentially with the system size given by the number of variables @xmath4 .",
    "this behavior could be understood analytically using a functional - integral approach to evaluate the probability of large deviations from the typical trajectory .",
    "we found the following behavior : the system equilibrates very fast to a non - zero plateau in the number of unsatisfied clauses .",
    "then the system only fluctuates around this plateau .",
    "this goes on until an exponentially improbable macroscopic fluctuation towards one of the solutions appear , and the algorithm stops .",
    "the small probability of these fluctuations explains the exponentially large waiting times until a satisfying assignment is reached .    for the exponential - time regime ,",
    "only a poissonian approximation was used . in principle",
    "it would be possible to go beyond this ansatz using the full distribution @xmath59 of vertices with @xmath56 satisfied and @xmath57 unsatisfied clauses .",
    "following the same scheme as in the poissonian approach , we reach a system of first - order differential equations for all @xmath59 and their conjugate parameters @xmath259 . being non - linear , it is far from obvious how to construct an analytical solution .",
    "but also the numerical integration of these equations is a hard problem : for the @xmath59 there are initial and final conditions , whereas the @xmath259 have no boundary condition at all .",
    "the question if it is possible to follow this improved approach is still under investigation .",
    "another possible extension of this work concerns the application of different heuristics like gsat which was discussed in the second section . the analytical approach can serve as a basis for evaluating the relative performance of different heuristics and , as a consequence of the insight gained , also as a step towards a systematic improvement of stochastic local search .",
    "a third point which remains open is the question in how far the solution space structure influences the performance of walk - sat . as discussed in the beginning of the paper , random @xmath0-sat and random @xmath0-xor - sat",
    "undergo a clustering transition deep inside the satisfiable phase . below this transition ,",
    "all solutions are collected in one huge cluster , above , an exponential number of such clusters exists .",
    "the clustering transition is also connected to a proliferation of metastable states which are expected to cause problems for any local algorithm . however , in our approach to the walk - sat dynamics , we do not see any sign of a direct impact of this transition on the performance of the algorithms under consideration .",
    "the onset of exponential solution times is found to be inside the unclustered phase .",
    "it thus remains an open problem whether the clustering transition can be approached by using improved heuristic criteria .",
    "* acknowledgments : * we are grateful to r. zecchina for helpful discussions .",
    "we also thank r. monasson and g. semerjian for communicating their results @xcite prior to publication .",
    "wb and akh obtained financial support from the dfg ( deutsche forschungsgemeinschaft ) under grant zi 209/6 - 1 .",
    "akh was also partly funded by the volkswagenstiftung within the program `` nachwuchsgruppen an universitten '' .",
    "e. dantsin , a. goerdt , e.a .",
    "hirsch , and u. schning , _ proc . of the int",
    ". colloq . on automata , languages and computation 2000 _ , genf .",
    "lecture notes in computer science 1853 , 236 ( springer , new york , 2000 ) ."
  ],
  "abstract_text": [
    "<S> stochastic local search algorithms are frequently used to numerically solve hard combinatorial optimization or decision problems . </S>",
    "<S> we give numerical and approximate analytical descriptions of the dynamics of such algorithms applied to random satisfiability problems . </S>",
    "<S> we find two different dynamical regimes , depending on the number of constraints per variable : for low constraintness , the problems are solved efficiently , i.e. in linear time . for higher </S>",
    "<S> constraintness , the solution times become exponential . </S>",
    "<S> we observe that the dynamical behavior is characterized by a fast equilibration and fluctuations around this equilibrium . </S>",
    "<S> if the algorithm runs long enough , an exponentially rare fluctuation towards a solution appears . </S>"
  ]
}
{
  "article_text": [
    "proteins contain one or more domains each of which could have evolved independently from the rest of the protein structure and which could have unique functions @xcite . because of molecular evolution",
    ", proteins with similar sequences often share similar folds and structures . retrieving and ranking protein domains that are similar to a query protein domain from a protein domain database",
    "are critical tasks for the analysis of protein structure , function , and evolution @xcite .",
    "the similar protein domains that are classified by a ranking system may help researchers infer the functional properties of a query domain from the functions of the returned protein domains .",
    "the output of a ranking procedure is usually a list of database protein domains that are ranked in descending order according to a measure of their similarity to the query domain .",
    "the choice of a similarity measure largely defines the performance of a ranking system as argued previously @xcite .",
    "a large number of algorithms for computing similarity as a ranking score have been developed :    pairwise protein domain comparison algorithms : :    compute the similarity between a pair of protein domains either by    protein domain structure alignment or by comparing protein domain    features .",
    "_ protein structure alignment based methods _ compare protein    domain structures at the level of residues and sometime even atoms , to    detect structural similarities with high sensitivity and accuracy . for    example , carpentier et al . proposed yakusa @xcite which compares    protein structures using one - dimensional characterizations based on    protein backbone internal angles , while jung and lee proposed sheba    @xcite for structural database scanning based on environmental    profiles . _",
    "protein domain feature based methods _ extract structural    features from protein domains and compute their similarity using a    similarity or distance function .",
    "for example , zhang et al . used the    32-d tableau feature vector in a comparison procedure called ir    tableau @xcite , while lee and lee introduced a measure called wdac    ( weighted domain architecture comparison ) that is used in the protein    domain comparison context @xcite .",
    "both these methods use cosine    similarity for comparison purposes .",
    "graph - based similarity learning algorithms : :    use the traditional protein domain comparison methods mentioned above    that focus on detecting pairwise sequence alignments while neglecting    all other protein domains in the database and their distributions . to    tackle this problem ,",
    "a graph - based transductive similarity learning    algorithm has been proposed @xcite .",
    "instead of computing    pairwise similarities for protein domains , graph - based methods take    advantage of the graph formed by the existing protein domains . by    propagating similarity measures between the query protein domain and    the database protein domains via graph transduction ( gt )",
    ", a better    metric for ranking database protein domains can be learned .",
    "the main component of graph - based ranking is the construction of a graph as the estimation of intrinsic manifold of the database . as argued by cai et al .",
    "@xcite , there are many ways to define different graphs with different models and parameters . however , up to now , there are , in general , no explicit rules for choice of graph models and parameters . in @xcite ,",
    "the graph parameters were determined by a grid - search of different pairs of parameters . in @xcite ,",
    "several graph models were considered for graph regularization , and exhaustive experiments were carried out for the selection of a graph model and its parameters .",
    "however , these kinds of grid - search strategies select parameters from discrete values in the parameter space , and thus lack the ability to approximate an optimal solution . at the same time",
    ", cross - validation @xcite can be used for parameter selection , but it does not always scale up very well for many of the graph parameters , and sometimes it might over - fit the training and validation set while not generalizing well on the query set .    in @xcite , geng et al . proposed an ensemble manifold regularization ( emr ) framework that combines the automatic intrinsic manifold approximation and semi - supervised learning ( ssl ) @xcite of a support vector machine ( svm ) @xcite . based on the emr idea",
    ", we attempted to solve the problem of graph model and parameter selection by fusing multiple graphs to obtain a ranking score learning framework for protein domain ranking .",
    "we first outlined the graph regularized ranking score learning framework by optimizing ranking score learning with both relevant and graph constraints , and then generalized it to the multiple graph case .",
    "first a pool of initial guesses of the graph laplacian with different graph models and parameters is computed , and then they are combined linearly to approximate the intrinsic manifold .",
    "the optimal graph model(s ) with optimal parameters is selected by assigning larger weights to them .",
    "meanwhile , ranking score learning is also restricted to be smooth along the estimated graph . because the graph weights and ranking scores are learned jointly , a unified objective function is obtained .",
    "the objective function is optimized alternately and conditionally with respect to multiple graph weights and ranking scores in an iterative algorithm .",
    "we have named our * * multi**ple * * g**raph regularized * * rank**ing method * multig - rank*. it is composed of an off - line graph weights learning algorithm and an on - line ranking algorithm .",
    "graph model and parameter selection given a data set of protein domains represented by their tableau 32-d feature vectors @xcite @xmath0 , where @xmath1 is the tableau feature vector of @xmath2-th protein domain , @xmath3 is the query protein domain , and the others are database protein domains .",
    "we define the ranking score vector as @xmath4^\\top \\in   \\mathbb{r}^n$ ] in which @xmath5 is the ranking score of @xmath6 to the query domain .",
    "the problem is to rank the protein domains in @xmath7 in descending order according to their ranking scores and return several of the top ranked domains as the ranking results so that the returned protein domains are as relevant to the query as possible .",
    "here we define two types of protein domains : _ relevant _ when they belong to the same scop fold type @xcite , and _ irrelevant _ when they do not .",
    "we denote the scop - fold labels of protein domains in @xmath7 as @xmath8 , where @xmath9 is the label of @xmath2-th protein domain and @xmath10 is the query label .",
    "the optimal ranking scores of relevant protein domains @xmath11 should be larger than the irrelevant ones @xmath12 , so that the relevant protein domains will be returned to the user .",
    "we applied two constraints on the optimal ranking score vector @xmath13 to learn the optimal ranking scores :    relevance constraint : :    because the query protein domain reflects the search intention of the    user , @xmath14 should be consistent with protein domains that    are relevant to the query .",
    "we also define a relevance vector of the    protein domain as    @xmath15^\\top \\in \\{1,0\\}^n$ ]    where @xmath16 , if @xmath6 is relevant to the    query and @xmath17 if it is not . because the type label    @xmath10 of a query protein domain @xmath3 is    usually unknown , we know only that the query is relevant to itself and    have no prior knowledge of whether or not others are relevant ;    therefore , we can only set @xmath18 while    @xmath19 is unknown .",
    "+    to assign different weights to different protein domains in    @xmath7 , we define a diagonal matrix @xmath20    as @xmath21 when @xmath22 is known , otherwise    @xmath23 .",
    "to impose the relevant constraint to the    learning of @xmath14 , we aim to minimize the following    objective function :    +    @xmath24 graph constraint : :    @xmath14 should also be consistent with the local distribution    found in the protein domain database .",
    "the local distribution was    embedded into a @xmath25 nearest neighbor graph    @xmath26 . for each    protein domain @xmath6 , its @xmath25 nearest    neighbors , excluding itself , are denoted by    @xmath27 .",
    "the node set @xmath28    corresponds to @xmath29 protein domains in    @xmath7 , while @xmath30 is the edge    set , and @xmath31 if    @xmath32 or    @xmath33 .",
    "the weight of an edge    @xmath34 is denoted as @xmath35 which can be    computed using different graph definitions and parameters as described    in the next section .",
    "the edge weights are further organized in a    weight matrix @xmath36 \\in \\mathbb{r}^{n\\times n}$ ] ,    where @xmath35 is the weight of edge @xmath34 .",
    "we expect that if two protein domains @xmath6 and    @xmath37 are close ( i.e.,@xmath35 is big ) , then    @xmath5 and @xmath38 should also be close . to    impose the graph constraint to the learning of @xmath14 ,",
    "we aim    to minimize the following objective function :    +    @xmath39    +    where @xmath40 is a diagonal matrix whose entries are    @xmath41 and @xmath42 is    the graph laplacian matrix .",
    "this is a basic identity in spectral graph    theory and it provides some insight into the remarkable properties of    the graph laplacian .    when the two constraints are combined , the learning of @xmath13 is based on the minimization of the following objective function :    @xmath43    where @xmath44 is a trade - off parameter of the smoothness penalty .",
    "the solution is obtained by setting the derivative of @xmath45 with respect to @xmath13 to zero as @xmath46 . in this way , information from both the query protein domain provided by the user and the relationship of all the protein domains in @xmath7 are used to rank the protein domains in @xmath7 .",
    "the query information is embedded in @xmath47 and @xmath20 , while the protein domain relationship information is embedded in @xmath48 .",
    "the final ranking results are obtained by balancing the two sources of information . in this paper",
    ", we call this method * * g**raph regularized * * rank**ing ( g - rank ) .      here",
    "we describe the multiple graph learning method to directly learn a self - adaptive graph for ranking regularization the graph is assumed to be a linear combination of multiple predefined graphs ( referred to as base graphs ) .",
    "the graph weights are learned in a supervised way by considering the scop fold types of the protein domains in the database .",
    "the main component of graph regularization is the construction of a graph . as described previously , there are many ways to find the neighbors @xmath27 of @xmath6 and to define the weight matrix @xmath49 on the graph @xcite .",
    "several of them are as follows :    * * gaussian kernel weighted graph * : @xmath27 of @xmath6 is found by comparing the squared euclidean distance as , + @xmath50 + and the weighting is computed using a gaussian kernel as , + @xmath51 + where @xmath52 is the bandwidth of the kernel . * * dot - product weighted graph * : @xmath27 of @xmath6 is found by comparing the squared euclidean distance and the weighting is computed as the dot - product as , + @xmath53 * * cosine similarity weighted graph * : @xmath27 of @xmath6 is found by comparing cosine similarity as , + @xmath54 + and the weighting is also assigned as cosine similarity as , + @xmath55 * * jaccard index weighted graph * : @xmath27 of @xmath6 is found by comparing the jaccard index @xcite as , + @xmath56 + and the weighting is assigned as , + @xmath57 * * tanimoto coefficient weighted graph * : @xmath27 of @xmath6 is found by comparing the tanimoto coefficient as , + @xmath58 + and the weighting is assigned as , + @xmath59    with so many possible choices of graphs , the most suitable graph with its parameters for the protein domain ranking task is often not known in advance ; thus , an exhaustive search on a predefined pool of graphs is necessary .",
    "when the size of the pool becomes large , an exhaustive search will be quite time - consuming and sometimes not possible .",
    "hence , a method for efficiently learning an appropriate graph to make the performance of the employed graph - based ranking method robust or even improved is crucial for graph regularized ranking . to tackle this problem we propose a multiple graph regularized ranking framework , that provides a series of initial guesses of the graph laplacian and combines them to approximate the intrinsic manifold in a conditionally optimal way , inspired by a previously reported method @xcite .    given a set of @xmath60 graph candidates @xmath61 , we denote their corresponding candidate graph laplacians as @xmath62 . by assuming that the optimal graph laplacian lies in the convex hull of the pre - given graph laplacian candidates , we constrain the search space of possible graph laplacians o linear combination of @xmath63 in @xmath64 as ,    @xmath65    where @xmath66 is the weight of @xmath67-th graph .",
    "to avoid any negative contribution , we further constrain @xmath68    to use the information from data distribution approximated by the new composite graph laplacian @xmath48 in ( [ equ : l ] ) for protein domain ranking , we introduce a new multi - graph regularization term . by substituting ( [ equ : l ] ) into ( [ equ : og ] ) , we get the augmented objective function term in an enlarged parameter space as ,    @xmath69    where @xmath70^\\top$ ] is the graph weight vector .      in the on - line querying procedure , the relevance of query @xmath3 to database protein domains is unknown and thus the optimal graph weights @xmath71 can not be learned in a supervised way .",
    "however , all the scop - fold labels of protein domain in the database are known , making the supervised learning of @xmath71 in an off - line way possible .",
    "we treat each database protein domain @xmath72 as a query in the off - line learning and all the items of its relevant vector @xmath73^\\top $ ] as known because all the scop - fold labels are known for all the database protein domains as ,    @xmath74    therefore , we set @xmath75 as a @xmath76 identity matrix .",
    "the ranking score vector of the @xmath77-th database protein domain is also defined as @xmath78^\\top$ ] . substituting @xmath79 , @xmath80 and @xmath20 to ( [ equ : qr ] ) and ( [ equ : omultig ] ) and combining them",
    ", we have the optimization problem for the @xmath77-th database protein domain as ,    @xmath81    to avoid the parameter @xmath71 over - fitting to one single graph , we also introduce the @xmath82 norm regularization term @xmath83 to the object function . the difference between @xmath84 and @xmath85 should be noted : @xmath86 plays the role of the given ground truth in the supervised learning procedure , while @xmath87 is the variable to be solved . while @xmath84 is the ideal solution of @xmath85 ,",
    "it is not always achieved after the learning .",
    "thus , we introduce the first term in ( [ equ : fq])to make @xmath85 as similar to @xmath84 as possible during the learning procedure .",
    "* object function * : using all protein domains in the database @xmath88 as queries to learn @xmath71 , we obtain the final objective function of supervised multiple graph weighting and protein domain ranking as ,    @xmath89 + \\beta ||\\mu||^2\\\\ & = tr \\left [ ( f - y)^\\top ( f - y)\\right]+\\alpha \\sum_{m=1}^m \\mu_m tr(f^\\top l_m f ) + \\beta ||\\mu||^2\\\\ s.t.~&\\sum_{m=1}^m \\mu_m=1,~\\mu_m\\geq 0 . \\end{aligned}\\ ] ]    where @xmath90 $ ] is the ranking score matrix with the @xmath77-th column as the ranking score vector of @xmath77-th protein domain , and @xmath91 $ ] is the relevance matrix with the @xmath77-th column as the relevance vector of the @xmath77-th protein domain .    *",
    "optimization * : because direct optimization to ( [ equ : ofmu ] ) is difficult , instead we adopt an iterative , two - step strategy to alternately optimize @xmath92 and @xmath71 . at each iteration , either @xmath92 or @xmath71 is optimized while the other is fixed , and then the roles are switched .",
    "iterations are repeated until a maximum number of iterations is reached .",
    "* _ optimizing @xmath92 _ : by fixing @xmath71 , the analytic solution for ( [ equ : ofmu ] ) can be easily obtained by setting the derivative of @xmath93 with respect to @xmath92 to zero .",
    "that is , + @xmath94 * _ optimizing @xmath71 _ : by fixing @xmath92 and removing items irrelevant to @xmath71 from ( [ equ : ofmu ] ) , the optimization problem ( [ equ : ofmu ] ) is reduced to , + @xmath95 + where @xmath96 and @xmath97^\\top$ ] .",
    "the optimization of ( [ equ : lp ] ) with respect to the graph weight @xmath71 can then be solved as a standard quadratic programming ( qp ) problem @xcite .    *",
    "off - line algorithm * : the off - line @xmath71 learning algorithm is summarized as algorithm [ alg : offline ] .",
    "candidate graph laplacians set @xmath64 ; scop type label set of database protein domains @xmath98 ; maximum iteration number @xmath99 ; construct the relevance matrix @xmath100^{n\\times n}$ ] where @xmath101 if @xmath102 , 0 otherwise ; initialize the graph weights as @xmath103 , @xmath104 ;    update the ranking score matrix @xmath105 according to previous @xmath106 by ( [ equ : f ] ) ; update the graph weight @xmath107 according to updated @xmath105 by ( [ equ : lp ] ) ;    output graph weight @xmath108 .",
    "given a newly discovered protein domain submitted by a user as query @xmath109 , its scop type label @xmath110 will be unknown and the domain will not be in the database @xmath111 . to compute the ranking scores of @xmath112 to query @xmath109 ,",
    "we extend the size of database to @xmath113 by adding @xmath109 into the database and then solve the ranking score vector for @xmath109 which is defined as @xmath114 \\in \\mathbb{r}^{n+1}$ ] using ( [ equ : of ] ) . the parameters in ( [ equ : of ] )",
    "are constructed as follows :    * * laplacian matrix @xmath48 * : we first compute the @xmath67 graph weight matrices @xmath115 with their corresponding laplacian matrices @xmath116 for the extended database @xmath117 .",
    "then with the graph weight @xmath71 learned by algorithm [ alg : offline ] , the new laplacian matrix @xmath48 can be computed as in ( [ equ : l ] ) . + _ on - line graph weight computation _ :",
    "when a new query @xmath109 is added to the database , we calculate its @xmath25 nearest neighbors in the database @xmath118 and the corresponding weights @xmath119 and @xmath120 .",
    "if adding this new query to the database does not affect the graph i n the database space , the neighbors and weights @xmath121 for the protein domains in the database are fixed and can be pre - computed off - line .",
    "thus , we only need to compute @xmath29 edge weights for each graph instead of @xmath122 . *",
    "* relevance vector @xmath47 * : the relevance vector for @xmath109 is defined as @xmath123^\\top \\in \\{1,0\\}^{n+1 } $ ] with only @xmath124 known and @xmath22 , @xmath125 unknown . * * matrix @xmath20 * : in this situation , @xmath20 is a @xmath122 diagonal matrix with @xmath126 and @xmath23 , @xmath125 .",
    "then the ranking score vector @xmath14 can be solved as ,    @xmath127    the on - line ranking algorithm is summarized as algorithm [ alg : inline ] .",
    "protein domain database @xmath111 ; query protein domain @xmath109 ; graph weight @xmath71 ; extend the database to @xmath128 size by adding @xmath109 and compute @xmath60 graph laplacians of the extended database ; obtain multiple graph laplacian @xmath48 by linear combination of @xmath60 graph laplacians with weight @xmath71 as in ( [ equ : l ] ) ; construct the relevance vector @xmath129 where @xmath124 and diagonal matrix @xmath130 with @xmath21 if @xmath131 and 0 otherwise ; solve the ranking vector @xmath13 for @xmath109 as in ( [ equ : f ] ) ; ranking protein domains in @xmath118 according to ranking scores @xmath13 in descending order .",
    "we used the scop 1.75a database @xcite to construct the database and query set . in the scop 1.75a database , there are 49,219 protein domain pdb entries and 135,643 domains , belonging to 7 classes and 1,194 scop fold types .",
    "our protein domain database was selected from _ astral scop 1.75a _ set @xcite , a subset of the scop ( structural classification of proteins)1.75a database which was released in march 15 , 2012 @xcite .",
    "astral scop 1.75a 40% ) @xcite , a genetic domain sequence subset , was used as our protein domain database @xmath118 .",
    "this database was selected from scop 1.75a database so that the selected domains have less than 40% identity to each other .",
    "there are a total of 11,212 protein domains in the astral scop 1.75a 40% database belonging to 1,196 scop fold types .",
    "the astral database is available on - line at http://scop.berkeley.edu .",
    "the number of protein domains in each scop fold varies from 1 to 402 .",
    "the distribution of protein domains with the different fold types is shown in fig .",
    "[ fig : figpronum ] .",
    "many previous studies evaluated ranking performances using the older version of the astral scop dataset ( astral scop 1.73 95% ) that was released in 2008 @xcite .",
    "we also randomly selected 540 protein domains from the scop 1.75a database to construct a query set .",
    "for each query protein domain that we selected we ensured that there was at least one protein domain belonging to the same scop fold type in the astral scop 1.75a 40% database , so that for each query , there was at least one `` positive '' sample in the protein domain database .",
    "however , it should be noted that the 540 protein domains in the query data set were randomly selected and do not necessarily represent 540 different folds .",
    "here we call our query set the _ 540 query _ dataset because it contains 540 protein domains from the scop 1.75a database .      a ranking procedure is run against the protein domains database using a query domain .",
    "a list of all matching protein domains along with their ranking scores is returned .",
    "we adopted the same evaluation metric framework as was described previously @xcite , and used the receiver operating characteristic ( roc ) curve , the area under the roc curve ( auc ) , and the recall - precision curve to evaluate the ranking accuracy .",
    "given a query protein domain @xmath3 belonging to the scop fold @xmath10 , a list of protein domains is returned from the database by the on - line multig - rank algorithm or other ranking methods . for a database protein domain @xmath132 in the returned list ,",
    "if its fold label @xmath133 is the same as that of @xmath3 , i.e. @xmath134 it is identified as a true positive ( tp ) , else it is identified as a false positive ( fp ) . for a database protein domain @xmath135 not in the returned list , if its fold label @xmath136 , it will be identified as a true negative ( tn ) , else it is a false negative ( fn ) . the true positive rate ( tpr ) , false positive rate ( fpr ) , recall , and precision can then be computed based on the above statistics as follows :    @xmath137    by varying the length of the returned list , different @xmath138 , @xmath139 , recall and precision values are obtained .",
    "roc curve : :    using @xmath140 as the abscissa and @xmath138 as the    ordinate , the roc curve can be plotted . for a high - performance ranking    system",
    ", the roc curve should be as close to the top - left corner as    possible .",
    "recall - precision curve : :    using recall as the abscissa and precision as the ordinate , the    recall - precision curve can be plotted . for a high - performance ranking    system",
    ", this curve should be close to the top - right corner of the    plot .",
    "auc : :    the auc is computed as a single - figure measurement of the quality of    an roc curve .",
    "auc is averaged over all the queries to evaluate the    performances of different ranking methods .",
    "we first compared our multig - rank against several popular graph - based ranking score learning methods for ranking protein domains .",
    "we then evaluated the ranking performance of multig - ranking against other protein domain ranking methods using different protein domain comparison strategies .",
    "finally , a case study of a tim barrel fold is described .",
    "we compared our multig - rank to two graph - based ranking methods , g - rank and gt @xcite , and against the pairwise protein domain comparison based ranking method proposed in @xcite as a baseline method ( fig .",
    "[ fig : graphroc ] ) .",
    "the evaluations were conducted with the 540 query domains form the _ 540 query _ set .",
    "the average ranking performance was computed over these 540 query runs .",
    "the figure shows the roc and the recall - precision curves obtained using the different graph ranking methods .",
    "as can be seen , the multig - rank algorithm significantly outperformed the other graph - based ranking algorithms ; the precision difference got larger as the recall value increased and then tend to converge as the precision tended towards zero ( fig .",
    "[ fig : graphroc ] ( b ) ) .",
    "the g - rank algorithm outperformed gt in most cases ; however , both g - rank and gt were much better than the pairwise ranking which neglects the global distribution of the protein domain database .    the auc results for the different ranking methods on the _ 540 query _",
    "set are tabulated in table [ tab : aucgraph ] .",
    "as shown , the proposed multig - rank consistently outperformed the other three methods on the 540 query set against our protein domain database , achieving a gain in auc of 0.0155 , 0.0210 and 0.0252 compared with g - rank , gt and pairwise rank , respectively .",
    "thus , we have shown that the ranking precision can be improved significantly using our algorithm .",
    "we have made three observations from the results listed in table [ tab : aucgraph ] :    1 .",
    "g - rank and gt produced similar performances on our protein domain database , indicating that there is no significant difference in the performance of the graph _ transduction _ based or graph _ regularization based _ single graph ranking methods for unsupervised learning of the ranking scores . 2 .",
    "pairwise ranking produced the worst performance even though the method uses a carefully selected similarity function as reported in @xcite .",
    "one reason for the poorer performance is that similarity computed by pairwise ranking is focused on detecting statistically significant pairwise differences only , while more subtle sequence similarities are missed .",
    "hence , the variance among different fold types can not be accurately estimated when the global distribution is neglected and only the protein domain pairs are considered .",
    "another possible reason is that pairwise ranking usually produces a better performance when there is only a small number of protein domains in the database ; therefore , because our database contains a large number of protein domains , the ranking performance of the pairwise ranking method was poor .",
    "multig - rank produced the best ranking performance , implying that both the discriminant and geometrical information in the protein domain database are important for accurate ranking .",
    "in multig - rank , the geometrical information is estimated by multiple graphs and the discriminant information is included by using the scop - fold type labels to learn the graph weights .",
    "we compare the multig - rank against several other popular protein domain ranking methods : ir tableau @xcite , qp tableau @xcite , yakusa @xcite , and sheba@xcite . for the query domains and the protein domain database we used the _ 540 query _ set and the astral scop 1.75a 40% database , respectively .",
    "the yakusa software source code was downloaded from http://wwwabi.snv.jussieu.fr/yakusa , compiled and used for ranking .",
    "we used the  make bank \" shell script ( http://wwwabi.snv.jussieu.fr/yakusa ) which calls the phipsi program ( version 0.99 abi , june 1993 ) to format the database .",
    "yakusa compares a query domain to a database and returns a list of the protein domains along with ranks and ranking scores .",
    "we used the default parameters of yakusa to perform the ranking of the protein domains in our database .",
    "the sheba software ( version 3.11 ) source code was downloaded from https://ccrod.cancer.gov/confluence/display/ccrlee/sheba , complied and used it for ranking .",
    "the protein domain database was converted to  .env \" format and the pairwise alignment was performed between each query domain and each database domain to obtain the alignment scores .",
    "first , we compared the different protein domain - protein domain ranking methods and computed their similarity or dissimilarity .",
    "an ordering technique was devised to detect hits by taking the similarities between data pairs as input . for our multig - rank",
    ", the ranking score was used as a measure of protein domain - protein domain similarly .",
    "the ranking results were evaluated based on the roc and recall - precision curves as shown in fig .",
    "[ fig : rankingroc ] .",
    "the auc values are given in table [ tab : aucranking ] .",
    "the results in table [ tab : aucranking ] show that with the advantage of exploring data characteristics from various graphs , multig - rank can achieve significant improvements in the ranking outcomes ; in particular , auc is increased from 0.9478 to 0.9730 in multig - rank which uses the same tableau feature as ir tableau .",
    "multig - rank also outperforms qp tableau , sheba , and yakusa ; and auc improves from 0.9364 , 0.9421 and 0.9537 , respectively , to 0.9730 with multig - rank . furthermore , because of its better use of effective protein domain descriptors , ir tableau outperforms qp tableau .",
    "to evaluate the effect of using protein domain descriptors for ranking instead of direct protein domain structure comparisons , we compared ir tableau with yakusa and sheba .",
    "the main differences between them are that ir tableau considers both protein domain feature extraction and comparison procedures , while yakusa and sheba compare only pairs of protein domains directly .",
    "the quantitative results in table [ tab : aucranking ] show that , even by using the additional information from the protein domain descriptor , ir tableau does not outperform yakusa .",
    "this result strongly suggests that ranking performance improvements are achieved mainly by graph regularization and not by using the power of a protein domain descriptor .",
    "plots of tpr versus fpr obtained using multig - rank and various field - specific protein domain ranking methods as the ranking algorithms are shown in fig .",
    "[ fig : rankingroc ] ( a ) and the recall - precision curves obtained using them are shown in fig .",
    "[ fig : rankingroc ] ( b ) .",
    "as can be seen from the figure , in most cases , our multig - rank algorithm significantly outperforms the other protein domain ranking algorithms .",
    "the performance differences get larger as the length of the returned protein domain list increases .",
    "the yakusa algorithm outperforms sheba , ir tableau and qp tableau in most cases .",
    "when only a few protein domains are returned to the query , the sizes of both the true positive samples and the false positive samples are small , showing that , in this case , all the algorithms yield low fpr and tpr . as the number of returned protein domains increases , the tpr of all of the algorithms increases",
    ". however , multig - rank tends to converge when the fpr is more than 0.3 , whereas the other ranking algorithms seems to converge only when the fpr is more than 0.5 .",
    "besides considering the results obtained for the whole database , we also studied an important protein fold , the tim beta / alpha - barrel fold ( c.1 ) .",
    "the tim barrel is a conserved protein fold that consists of eight @xmath44-helices and eight parallel @xmath141-strands that alternate along the peptide backbone @xcite .",
    "tim barrels are one of the most common protein folds . in the astral scop",
    "1.75a % 40 database , there are a total of 373 proteins belonging to 33 different superfamilies and 114 families that have tim beta / alpha - barrel scop fold type domains , . in this case study , the tim beta / alpha - barrel domains from the query set were used to rank all the protein domains in the database .",
    "the ranking was evaluated both at the fold level of the scop classification and at lower levels of the scop classification ( ie .",
    "superfamily level and family level ) . to evaluate the ranking performance , we defined `` true positives '' at three levels :    fold level : :    when the returned database protein domain is from the same fold type    as the query protein domain . superfamily level : :    when the returned database protein domain is from the same superfamily    as the query protein domain",
    ". family level : :    when the returned database protein domain is from the same family as    the query protein domain .",
    "the roc and the recall - precision plots of the protein domain ranking results of multig - rank for the query tim beta / alpha - barrel domain at the three levels are given in fig .",
    "[ fig : resultstmi ] .",
    "the graphs were learned using the labels at the family , superfamily and the fold level .",
    "the results show that the ranking performance at the fold level is better than at the other two levels ; however , although the performances at the lower levels , superfamily and family , are not superior to that at the fold level , they are still good .",
    "one important factor is that when the relevance at the lower levels was measured , a much fewer number of protein domains in the database were relevant to the queries , making it more difficult to retrieve the relevant protein domains precisely .",
    "for example , a query belonging to the family of phosphoenolpyruvate mutase / isocitrate lyase - like ( c.1.12.7 ) matched 373 database protein domains at the fold level because this family has 373 protein domains in the astral scop 1.75a % 40 database . on the other hand ,",
    "only 14 and four protein domains were relevant to the query at the superfamily and family levels respectively .",
    "the proposed multig - rank method introduces a new paradigm to fortify the broad scope of existing graph - based ranking techniques .",
    "the main advantage of multig - rank lies in its ability to represent the learning of a unified space of ranking scores for protein domain database in multiple graphs .",
    "such flexibility is important in tackling complicated protein domain ranking problems because it allows more prior knowledge to be explored for effectively analyzing a given protein domain database , including the possibility of choosing a proper set of graphs to better characterize diverse databases , and the ability to adopt a multiple graph - based ranking method to appropriately model relationships among the protein domains . here",
    ", multig - rank has been evaluated comprehensively on a carefully selected subset of the astral scop 1.75 a protein domain database .",
    "the promising experimental results that were obtained further confirm the usefulness of our ranking score learning approach .",
    "the authors declare no competing interests .",
    "jw invented the algorithm , performed the experiments and drafted the manuscript .",
    "hb drafted the manuscript .",
    "xg supervised the study and made critical changes to the manuscript .",
    "all the authors have approved the final manuscript .",
    "the study was supported by grants from national key laboratory for novel software technology , china ( grant no .",
    "kfkt2012b17 ) , 2011 qatar annual research forum award ( grant no .",
    "arf2011 ) , and king abdullah university of science and technology ( kaust ) , saudi arabia .",
    "we appreciate the valuable comments from prof .",
    "yuexiang shi , xiangtan university , china .",
    "10 [ 1][#1 ]    zhang y , sun y : * hmm - frame : accurate protein domain classification for metagenomic sequences containing frameshift errors*. _ bmc bioinformatics _ 2011 , * 12*(198 ) .",
    "ochoa a , llinas m , singh m : * using context to improve protein domain identification*. _ bmc bioinformatics _ 2011 , * 12*(90 ) .",
    "zhang l , bailey j , konagurthu as , ramamohanarao k : * a fast indexing approach for protein structure comparison*. _ bmc bioinformatics _ 2010 , * 11*(1 ) .",
    "stivala a , wirth a , stuckey pj : * tableau - based protein substructure search using quadratic programming*. _ bmc bioinformatics _ 2009 , * 10*:153 .",
    "stivala ad , stuckey pj , wirth ai : * fast and accurate protein substructure searching with simulated annealing and gpus*. _ bmc bioinformatics _ 2010 , * 11*(446 ) .",
    "bai x , yang x , latecki lj , liu w , tu z : * learning context - sensitive shape similarity by graph transduction*. _ ieee transactions on pattern analysis and machine intelligence _ 2010 , * 32*(5):861874 .",
    "carpentier m , brouillet s , pothier j : * yakusa : a fast structural database scanning method*. _ proteins - structure function and bioinformatics _ 2005 , * 61*(1):137151 .",
    "jung j , lee b : * protein structure alignment using environmental profiles*. _ protein engineering _ 2000 , * 13*(8):535543 .",
    "lee b , lee d : * protein comparison at the domain architecture level*. _ bmc bioinformatics _ 2009 , * 10*.    weston j , kuang r , leslie c , noble w : * protein ranking by semi - supervised network propagation*. _ bmc bioinformatics _ 2006 , * 7*(1 ) .",
    "cai d , he x , han j , huang ts : * graph regularized nonnegative matrix factorization for data representation*. _ ieee transactions on pattern analysis and machine intelligence _ 2011 , * 33*(8):15481560 .",
    "varma s , simon r : * bias in error estimation when using cross - validation for model selection*. _ bmc bioinformatics _ 2006 , * 7*(91 ) .",
    "nagel k , jimeno - yepes a , rebholz - schuhmann d : * annotation of protein residues based on a literature analysis : cross - validation against uniprotkb*. _ bmc bioinformatics _ 2009 , * 10*.    geng b , tao d , xu c , yang l , hua x : * ensemble manifold regularization*. _ ieee transactions on pattern analysis and machine intelligence _ 2012 , * pp*(99):1 .",
    "you zh , yin z , han k , huang ds , zhou x : * a semi - supervised learning approach to predict synthetic genetic interactions by combining functional and topological properties of functional gene network*. _ bmc bioinformatics _ 2010 , * 11*(343 ) .    , hwanjo yu , wook - shin han : * combining active learning and semi - supervised learning techniques to extract protein interaction sentences*. _ bmc bioinformatics _ 2011 , : s4 ( 11 pp . ) .",
    "kandaswamy kk , pugalenthi g , hazrati mk , kalies ku , martinetz t : * blprot : prediction of bioluminescent proteins based on support vector machine and relieff feature selection*. _ bmc bioinformatics _ 2011 , * 12*(345 ) .",
    "tung cw , ziehm m , kaemper a , kohlbacher o , ho sy : * popisk : t - cell reactivity prediction using support vector machines and string kernels*. _ bmc bioinformatics _ 2011 , * 12*(446 ) .",
    "shi jy , zhang yn : * fast scop classification of structural class and fold using secondary structure mining in distance matrix*. in _ pattern recognition in bioinformatics .",
    "proceedings 4th iapr international conference , prib 2009 _ 2009:34453 .",
    "albatineh an , niewiadomska - bugaj m : * correcting jaccard and other similarity indices for chance agreement in cluster analysis*. _ advances in data analysis and classification _ 2011 , * 5*(3):179200 .",
    "chandonia j , hon g , walker n , lo  conte l , koehl p , levitt m , brenner s : * the astral compendium in 2004*. _ nucleic acids research _ 2004 , * 32*(si):d189d192 .",
    "kim c , basner j , lee b : * detecting internally symmetric protein structures*. _ bmc bioinformatics _ 2010 , * 11*(303 ) .",
    "each curve represents a graph - based ranking score learning algorithm .",
    "multig - rank , the multiple graph regularized ranking algorithm ; g - rank , graph regularized ranking ; gt , graph transduction ; pairwise rank , pairwise protein domain ranking method @xcite ( a ) roc curves of the different ranking methods ; ( b ) recall - precision curves of the different ranking methods .",
    "\\(a ) roc curves for different field - specific protein domain ranking algorithms .",
    "tpr , true positive rate ; fpr , false positive rate .",
    "( b ) recall - precision curves for different field - specific protein domain ranking algorithms .",
    "\\(a ) roc curves of the ranking results for the tim beta / alpha - barrel domain at the fold , superfamily , and family levels .",
    "tpr , true positive rate ; fpr , false positive rate .",
    "( b ) recall - precision curves of the ranking results for the tim beta / alpha - barrel domain at the fold , superfamily , and family levels .",
    ".auc results off different graph - based ranking methods . [ cols=\"<,^\",options=\"header \" , ]"
  ],
  "abstract_text": [
    "<S> background : :    protein domain ranking is a fundamental task in structural biology .    </S>",
    "<S> most protein domain ranking methods rely on the pairwise comparison of    protein domains while neglecting the global manifold structure of the    protein domain database . </S>",
    "<S> recently , graph regularized ranking that    exploits the global structure of the graph defined by the pairwise    similarities has been proposed . </S>",
    "<S> however , the existing graph    regularized ranking methods are very sensitive to the choice of the    graph model and parameters , and this remains a difficult problem for    most of the protein domain ranking methods . </S>",
    "<S> results : :    to tackle this problem , we have developed the multiple graph    regularized ranking algorithm , multig - rank . </S>",
    "<S> instead of using a single    graph to regularize the ranking scores , multig - rank approximates the    intrinsic manifold of protein domain distribution by combining    multiple initial graphs for the regularization . </S>",
    "<S> graph weights are    learned with ranking scores jointly and automatically , by alternately    minimizing an objective function in an iterative algorithm .    experimental results on a subset of the astral scop protein domain    database </S>",
    "<S> demonstrate that multig - rank achieves a better ranking    performance than single graph regularized ranking methods and pairwise    similarity based ranking methods . </S>",
    "<S> conclusion : :    the problem of graph model and parameter selection in graph    regularized protein domain ranking can be solved effectively by    combining multiple graphs . </S>",
    "<S> this aspect of generalization introduces a    new frontier in applying multiple graphs to solving protein domain    ranking applications .    </S>",
    "<S> [ 1995/12/01 ] </S>"
  ]
}
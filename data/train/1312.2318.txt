{
  "article_text": [
    "point sets with pairwise rational or integral distances have been studied for a long time ; see e.g.  @xcite . for brevity",
    "we will call those point sets rational or integral . nevertheless only a few theoretical results are known and integral point sets seem to be unexpectedly difficult to construct . on the other hand there is the famous open problem , asking for a dense set in the plane such that all pairwise euclidean distances are rational , posed by ulam in 1945 , see e.g.  @xcite .",
    "till now we only know that one can easily construct rational points sets which are either dense on a line or a circle , see e.g. , ( * ? ? ?",
    "* sec .  5.11 ) or @xcite .",
    "in @xcite the authors have shown that no irreducible algebraic curve other than a line or a circle contains an infinite rational set . thus if ulam s question admits a positive answer the corresponding point set has to be very special .",
    "almering @xcite established , that for a given triangle with rational side lengths , the set of points with rational distances to the three vertices , is dense in the plane of the triangle .",
    "berry @xcite relaxed the conditions to one rational side length and the other two side lengths being a square root of a rational number .",
    "more general considerations can be found in the recent preprint @xcite .",
    "so far no such result is known for a quadrilateral with pairwise rational distances . with just one distance missing dubickas states in @xcite",
    "that every @xmath4 points in @xmath1 can be slightly perturbed to a set of @xmath0 points in @xmath5 such that at least @xmath6 of the mutual distances are rational . declaring which of the mutual distances has to be rational can be modeled as a graph .",
    "classes of _ admissible _ graphs have been studied e.g.  in @xcite .    given a finite rational point set , we can of course convert it into an integral point set by rescaling its edge lengths with the least common multiple of their respective denominators .",
    "thus for each finite number @xmath0 one can easily construct an integral point set consisting of @xmath0 points where ( almost ) all points are located on a circle .",
    "constructions of finite integral point sets where @xmath7 or @xmath8 points are located on a line are e.g.  given in @xcite . to this end",
    "several authors , including paul erds ( * ? ? ?",
    "* problem d20 ) , ask for integral points sets in general position , meaning that no three points are on a line and no four points are on a circle . these objects seem to be rather rare or at the very least hard to find . for @xmath9 points",
    "a few general constructions for integral points sets in general position are known @xcite .",
    "the only two published examples of @xmath2-point integral point sets in general position are given in @xcite . independently and even earlier , in may 2006 chuck simmons and landon curt noll found even more restricted configurations . at that time",
    "the _ smallest _ one has ( integral ) coordinates @xmath10    aiming at @xmath0-point integral point sets in general position , for especially @xmath9 , noll and bell @xcite additionally required that also the coordinates have to be integral and called those structures @xmath11-clusters , or when the restriction to the dimension .",
    "the term _ general position _ then has the meaning that no @xmath12 points are contained in a hyperplane and no @xmath13 points are contained in a hypersphere , see e.g.  @xcite . ]",
    "is clear from the context , @xmath0-clusters . using a computer",
    "search the authors found 91  non - similar @xmath14-clusters , where the respective greatest common divisor of their corresponding edge lengths is one , but no @xmath2-clusters .- clusters . ] using a slightly improved version and lots of computing time simmons and noll in 2006 found the first @xmath2-clusters and extended there list to twenty - five @xmath2-clusters in 2010 .",
    "the aim of this paper is to present a set of sophisticated algorithms in order to construct @xmath0-clusters for @xmath15 . using an exhaustive search",
    "we were able to determine , with respect to its diameter , the smallest @xmath2-cluster and provide heuristic methods to produce more than 1000 non - similar @xmath2-clusters . unfortunately so far no @xmath16-cluster turned up .",
    "so the hunt for an integral octagon in general position or even an @xmath16-cluster is still open . in this context",
    "we mention the erds / noll infinite - or - bust @xmath17-cluster conjecture : for any dimension @xmath18 , and any number of points @xmath19 , there exists either @xmath20 or an infinite number of primitive @xmath17-clusters .    in section  [ sec_basic ]",
    "we summarize the known theory on integral point sets and in section  [ sec_heronian_triangles ] we go into the algorithmic details how to generate large lists of heronian triangles",
    ". section  [ sec_exhaustive_n_cluster ] is devoted to exhaustive searches for @xmath0-clusters up to a given diameter .",
    "here the idea is to combine @xmath0-clusters that share a common @xmath7-cluster .",
    "allowing the containment of similar @xmath7-clusters , i.e.  a scaled version , is the idea behind section  [ sec_combine ] .",
    "our most successful algorithmic approach is presented in section  [ sec_triangle_extension ] . since the basic operations of our algorithms have to be performed quite often , we present low level details in section  [ sec_low_level_details ] .",
    "a theoretically interesting algorithm , based on circle inversion , is presented in section  [ sec_circle_inversion ] .",
    "methods to extend a given triangle with rational side length by a forth point are studied in section  [ sec_fourth_point ] . since almost all of our presented algorithms",
    "depend on a selection of heronian triangles , which may not be too large due to computational limits , we present ways to select heronian triangles from larger sets in section  [ sec_promising ] .",
    "our computational observations are summarized in section  [ sec_observations ] .",
    "we present our computational results in section  [ sec_results ] before we draw a conclusion in section  [ sec_conclusion ] .",
    "an integral point set @xmath21 is a set of points in the plane that are not all located on a line such that the pairwise differences are all integers .",
    "we remark that integral point sets can easily be defined in arbitrary dimensions , see e.g.  @xcite but the present paper is restricted to the two - dimensional case .",
    "one of the first question arising when dealing with integral point sets is how to represent them .",
    "of course one may list a coordinate representation .",
    "one example of such a representation is in the introduction .",
    "another way is to provide a table of the pairwise distances from which a coordinate representation can easily be computed . for the example from the introduction we have the following distance table : @xmath22 given a matrix of distances one can decide whether there exists a set of vertices in the @xmath23-dimensional euclidean space @xmath24 attaining those distances based on a set of inequalities and equations involving the so - called cayley - menger determinants @xcite .    if @xmath25 is a point set in @xmath26 with vertices @xmath27 and @xmath28 denotes the @xmath29 matrix given by @xmath30 the cayley - menger matrix @xmath31 is obtained from @xmath32 by bordering @xmath32 with a top row @xmath33 and a left column @xmath34 .    *",
    "( menger @xcite ) * [ theorem_menger ] a set of vertices @xmath35 with pairwise distances @xmath36 is realizable in the euclidean space @xmath37 if and only if for all subsets @xmath38 of cardinality @xmath39 , @xmath40 and for all subsets of cardinality @xmath41 , @xmath42    thus it is possible to deal with integral point sets by storing their pairwise distances only but often it is computationally cheaper to use coordinate representations which are easy to compute .",
    "as remarked in the introduction we are interested in integral point sets in the euclidean plane @xmath1 with some additional properties .",
    "an ( plane ) integral point set is in general position if no three points are on a line and no four points are on a circle .",
    "the condition on the arrangement of points can easily be generalized to higher dimension and also be expressed using the cayley - menger determinants , see e.g.  @xcite .",
    "for the plane it suffices to check the triangle inequality in order to discover three collinear points .",
    "checking the condition of ptolemy s theorem , one can easily discover four points on a circle .",
    "an @xmath0-cluster is a plane integral point set in general position that consists of @xmath0 points such that there exists a representation using integer coordinates , i.e. , lattice points .",
    "fortunately we do not have to deal with the constraint of integral coordinates , but we have to go far afield : the area @xmath43 of a triangle with side lengths @xmath44 , @xmath45 , @xmath46 is given by @xmath47 due to the heron formula . if the area is non - zero , we can uniquely write @xmath48 with a rational number @xmath49 and a square - free integer @xmath50 .",
    "the number @xmath50 is called the characteristic @xmath51 of the triangle with side lengths @xmath44 , @xmath45 , @xmath46 .",
    "kemnitz @xcite has shown that each non - degenerate triangle of an integral point set has the same characteristic , which was also generalized to arbitrary dimensions in @xcite .",
    "since triangles with integral coordinates have a rational area , see e.g.   pick s theorem , the triangles of an @xmath0-cluster all have to have a characteristic of @xmath52 .",
    "we now argue that the opposite is also true .",
    "given an integer sided triangle with characteristic @xmath52 we can easily determine a representation using rational coordinates , see e.g.  @xcite .",
    "due to fricke @xcite , see also @xcite , each integral point set in the plane which has a representation in rational coordinates has a representation in integral coordinates . thus there is no need to explicitly search for integral coordinates for @xmath0-clusters .",
    "one just needs to check that all pairwise distances are integral and that at least one contained non - degenerate triangle has characteristic @xmath52 or , equivalently , that it has a representation in rational coordinates .",
    "a heronian triangle is a triangle with integer side lengths and area . due to the formula for @xmath43 for an",
    "integer sided triangle with characteristic @xmath52 , the area is rational and may in principle be non - integral .",
    "nevertheless one may consider the cases of the side lengths modulo @xmath16 ( see @xcite ) and conclude that such triangles have to be integral .",
    "we summarize these findings in :    given a non - degenerate triangle @xmath53 with integer side lengths then the following statements are equivalent :    * @xmath53 has characteristic @xmath52 * @xmath53 has rational area * @xmath53 has integral area , i.e.  @xmath53 is heronian    thus heronian triangles are the basic building blocks of @xmath0-clusters and we will consider algorithms how to generate them in the next section .    in the introduction we have spoken of _ the smallest _ cluster .",
    "so in order to have a measure of the _ size _ of an @xmath0-cluster or more generally an integral point sets we denote the largest distance between two points as its diameter . if we perform an exhaustive search in the following we will always have to impose a limit on the maximum diameter .",
    "we remark that other metrics are possible too , but most of them can be bounded by constants in terms of the maximum diameter .",
    "given an @xmath0-cluster we can obviously construct an infinite sequence of non - isomorphic @xmath0-clusters by rescaling the clusters by integers @xmath54 .",
    "we call those @xmath0-clusters similar and are generally interested in lists of non - similar @xmath0-clusters . to this end",
    "we call a given @xmath0-cluster primitive if its edge lengths do not have a common factor larger then @xmath52 .",
    "as argued before dividing the edge lengths of a given integral point set by the greatest common divisor does not destroy the property of admitting integral coordinates .",
    "applying this insight to the example given in the introduction we observe that the greatest common divisor of the edge length is @xmath55 . thus dividing all edge lengths",
    "gives the following distance matrix : @xmath56 this @xmath2-cluster has a diameter of @xmath57 , which is smallest possible as verified in section  [ sec_exhaustive_n_cluster ] .",
    "a coordinate representation is given by @xmath58",
    "the conceptually simplest algorithm to exhaustively generate all heronian triangles up to a given diameter is to loop over all non - isomorphic integer triangles and to check whether the area is integral :    * ( exhaustive generation of heronian triangles ) * +   for @xmath44 from @xmath52 to @xmath0 + for @xmath45 from @xmath59 to @xmath44 + for @xmath46 from @xmath60 to @xmath45 + if @xmath61 + then output @xmath44 , @xmath45 , and @xmath46    assuming that the check in the last - but - one line can be performed in constant time , this algorithm has time complexity @xmath62 .",
    "two @xmath63 algorithms , where @xmath64 is arbitrary , have been given in @xcite .",
    "complete parameterizations have been known for a long time , i.e.  the indian mathematician brahmagupta ( 598 - 668 a.d . ) who gives , see e.g.  @xcite , the parametric solution @xmath65 for positive integers @xmath66 , @xmath49 , @xmath67 , @xmath68 , and @xmath69 fulfilling @xmath70 and @xmath71 .    due to the presence of the denominators @xmath49",
    "this parameterization is not well compatible with restrictions on the maximum diameter . on the other hand we can easily generate primitive , meaning that the side lengths have no common factor , heronian triangles by looping over all feasible triples @xmath72 below a suitable upper bound , setting @xmath66 to @xmath52 and choosing @xmath49 case dependent such that @xmath73 .",
    "using this approach we can quickly generate a huge amount of primitive heronian triangles , but on the other hand may get those with small diameters rather late , compared to the upper bound on @xmath74 , and have to face the fact that the same primitive heronian triangle may be generated several times .",
    "for the purpose of this paper we use a different exhaustive algorithm to generate all primitive heronian triangles up to a prescribed diameter . given a triangle with side lengths @xmath44 ,",
    "@xmath45 , and @xmath46 we have @xmath75 and @xmath76 . for a heronian triangle @xmath77 and @xmath78",
    "are rational numbers so that also @xmath79 .",
    "thus there are coprime integers @xmath80 satisfying @xmath81 . with these parameters",
    "we obtain @xmath82 where @xmath83 . from the other representation of @xmath84",
    "we can then conclude that @xmath85 divides @xmath86 .",
    "so given two integral side lengths @xmath45 and @xmath46 of a heronian triangles , we can determine all possibilities for @xmath85 , then determine all possibilities for @xmath23 and @xmath0 , and finally determine all possibilities for the third side @xmath44 :    * ( find the third side ) * +   loop over all divisors @xmath50 of @xmath86 + loop over all solutions @xmath87 of @xmath88 + solve @xmath89 for @xmath44 + if @xmath90 and the triangle inequalities are satisfied for @xmath91 + then output @xmath44    so in order to determine all primitive heronian triangles up to diameter @xmath92 we have to loop over all coprime pairs @xmath93 with @xmath94 and apply the above algorithm to determine @xmath44 .",
    "given @xmath44 we can check whether @xmath95 are coprime , @xmath96 , and @xmath97 , @xmath98 ( to avoid isomorphic duplicates ) .    in this context",
    "the maximum diameter @xmath0 has to be limited to a few millions so that we can easily determine the prime factorizations of all integers at most @xmath0 in a precomputation .",
    "given those data we can quickly determine the prime factorization of @xmath86 and loop over all divisors without any additional testing .",
    "next we want to describe the set of solutions of @xmath88 and assume that @xmath99 where the @xmath100 are primes congruent to @xmath101 modulo @xmath102 and the @xmath103 are primes congruent to @xmath52 modulo @xmath102 . if any of the @xmath104 is odd , then no integer solution to @xmath88 exists .",
    "otherwise each solution can be written as @xmath105 , where @xmath106 and @xmath107 , i.e.@xmath108 where @xmath109 . due to the formula @xmath110 and the unique factorization of the gaussian integers",
    "@xmath111 $ ] it suffices to combine the solutions the problem , where @xmath112 is a prime power . ignoring signs for @xmath113",
    "the unique solution is given by @xmath114 .",
    "ignoring signs and order then there is a unique solution for @xmath115 once @xmath66 is equivalent to @xmath52 modulo @xmath102 .",
    "again ignoring signs and order , for prime powers the set of solutions @xmath116 is given by @xmath117 , where @xmath118 .",
    "thus it remains to determine a solution of @xmath115 , which can be done by the hermite - serret algorithm , which first determines an integer @xmath119 satisfying @xmath120 , using that @xmath121 for each quadratic nonresidue @xmath122 , and then applies the euclidean algorithm on @xmath123 to determine @xmath124 .",
    "see @xcite for the original sources and @xcite for an improved algorithm .",
    "the just sketched algorithm for the generation of all heronian triangles up to diameter @xmath0 runs in @xmath63 time , where @xmath64 is arbitrary .    using this algorithm",
    "we have exhaustively generated all primitive heronian triangles up to diameter @xmath3 .",
    "they are available for download at @xcite . having the data at hand we have computed an approximate counting function which fits best for a given type of functions",
    "let @xmath125 denote the number of primitive heronian triangles with diameter between @xmath126 and @xmath127 .",
    "the best least squares fitting function of the form @xmath128 is given by @xmath129 and leads to a @xmath130-distance of @xmath131 for the entire data .",
    "we remark that , besides the ( implicit ) @xmath132 upper bound from @xcite , we are not aware of any non - trivial lower and upper bounds for the number of ( primitive ) heronian triangles with a given diameter . as shown in @xcite one may deduce lower bounds for the minimum diameter of plane integral point sets , where the current knowledge is still very weak @xcite , from such estimates .",
    "in order to determine the , with respect to its diameter , smallest @xmath2-cluster we have performed an exhaustive search for @xmath0-clusters up to a given diameter . for the purpose of this paper",
    "the chosen maximum diameter is @xmath3 .",
    "a starting point is a complete list of all heronian triangles up to this diameter .",
    "more concretely we have chosen the exhaustive algorithm described in section  [ sec_heronian_triangles ] to generate all primitive heronian triangles up to diameter @xmath3 and extended this list by including all rescaled version such that the resulting diameter is at most @xmath3 .",
    "the underlying basic idea to construct @xmath0-clusters is to combine two @xmath7-clusters sharing a common @xmath8 cluster .",
    "this way we can benefit from the fact that the constraints can be partially checked very early . so starting from a list of @xmath101-clusters , i.e.  heronian triangles , we generate all @xmath102-clusters , then all @xmath133-clusters , then all @xmath14-clusters , and finally all @xmath2-clusters .    for the first combination step , i.e.  @xmath134 , `` sharing a common @xmath8-cluster '' means that the two triangles which should be combined both must have a side of the same length .    to avoid time - extensive duplicates and also the need to store extensive lists in memory",
    "we apply the concept of orderly generation , see @xcite , which avoid isomorphism search when cataloging combinatorial configurations like in our example integral point sets or @xmath0-clusters . to this end",
    "a canonical form has to be defined so that during the algorithm only canonical objects are combined .",
    "the constructed objects are accepted if and only if they are canonical too .",
    "the benefit from such an approach is that no isomorphic copies arise . for the details we refer the reader to @xcite with the adaptation of considering triangles of characteristic @xmath52 .    as a result",
    "we have computationally verified that the smallest @xmath2-cluster has diameter @xmath135 and that there is no other @xmath2-cluster with diameter less then or equal to @xmath136 . along the way we have also exhaustively constructed all @xmath102- , @xmath133- , @xmath14- , and @xmath2-cluster with diameter at most @xmath3 .",
    "those lists will be beneficial for the construction of additional @xmath2-clusters as will be explained in the following sections .",
    "in the previous section we have described an algorithm to exhaustively generate a list of all @xmath0-clusters up to given diameter taking a complete list of @xmath7-clusters with respect to that diameter . as induction",
    "start we need a complete list of all heronian triangles up to the used diameter . as described in section  [ sec_heronian_triangles ] the computational limits of such an approach force restrictions to rather small diameters where only a few @xmath2-clusters exist .",
    "so from now on we will leave the approach of exhaustive generation and go over to incomplete construction algorithms .",
    "our assumption for this section is that we are given a list of @xmath0-clusters , which we then combine to a list of @xmath137-clusters . for our paper ,",
    "the most general setting is the following : given a list @xmath138 of @xmath139-clusters and a possibly different list @xmath140 of @xmath11-clusters we consider pairs @xmath141 , where @xmath142 and @xmath143 , to construct @xmath137-clusters , where mostly @xmath144 .",
    "in section  [ sec_exhaustive_n_cluster ] we have assumed that the @xmath7-clusters @xmath145 and @xmath146 share a common @xmath8-cluster .",
    "since in the end we are only interested in lists of non - similar @xmath0-clusters we relax that to the requirement that @xmath145 and @xmath146 contain a common @xmath46-cluster , where @xmath46 is an additional parameter .",
    "mostly we will restrict ourselves on the largest @xmath46-cluster of @xmath145 while looping over all non - isomorphic @xmath46-clusters of @xmath145 is also possible . having the @xmath46-cluster @xmath147 of @xmath145 fixed we loop over all @xmath46-clusters @xmath148 of @xmath146 and check whether @xmath147 and @xmath148 can be rescaled so that they coincide .",
    "this check is implemented as follows : let @xmath149 be the diameter of @xmath147 and @xmath150 be the diameter of @xmath148 we define @xmath151 and @xmath152",
    ". with this @xmath147 and @xmath148 are similar if and only if @xmath153 is isomorphic to @xmath154 . comparing the sorted lists of the pairwise distances",
    "is a first computationally cheap test for this task .",
    "if successful we compare the canonical forms of @xmath147 and @xmath148 and compare them .",
    "so by rescaling we are in the situation that @xmath145 and @xmath146 contain a common @xmath46-cluster and we proceed by computing common coordinates : we apply to the algorithm from subsection  [ subsec_rational_coordinates ] to compute coordinates for @xmath145 and @xmath146 separately .",
    "is large it is computationally beneficial to store a coordinate representation , given by the algorithm in subsection  [ subsec_rational_coordinates ] , for each @xmath143 . ] by assuming that the first @xmath46 points of @xmath145 and @xmath146 coincide we can obtain a common coordinate system by just scaling the numerators .",
    "we remark that for @xmath155 we have two possibilities for the join , otherwise just one .",
    "having the coordinates at hand we can look over all @xmath50-set of the points , where @xmath50 is sufficiently large , and check whether they satisfy the conditions of a @xmath50-cluster , where we relax the condition of integral distances to rational distances .",
    "if all ( relaxed ) conditions are satisfied we store a primitive version of the corresponding , possibly scaled , @xmath50-cluster .",
    "we have mostly used three instances of this general framework .",
    "the first is with the parameters @xmath156 , @xmath157 , and @xmath155 , i.e.  we try to extend a given list of @xmath7-clusters by combining them with a list of primitive heronian triangles along a common edge .",
    "since we use rescaling this combination is always possible , albeit it is not clear if there result any @xmath0-clusters at all .",
    "depending on the available computation time and the size of the list of the @xmath7-clusters one may choose all known primitive heronian triangles for the second list .",
    "we have done that to a large extend for the list of known @xmath2-clusters but unfortunately did not locate an @xmath16-cluster .",
    "the second instance we used is with the parameters @xmath158 and @xmath159 to combine lists of @xmath14-clusters sharing a common triangle to obtain additional @xmath14- or @xmath2-clusters .",
    "the resulting point set consists of nine points .",
    "we remark that the second method was able to discover some previously unknown @xmath14- and @xmath2-clusters but turned out to be rather slow . for later reference",
    "we call this method the combine - hexagons algorithm .",
    "similar approaches seemed to be even less successful .",
    "the third method mimics the exhaustive generation method from section  [ sec_exhaustive_n_cluster ] , i.e.@xmath160 and @xmath161 , starting from @xmath134 and increasing it by one in each iteration .",
    "while the algorithms in section  [ sec_combine ] have to be iteratively used to end up with @xmath0-clusters for @xmath0 large , we will now describe an algorithm that directly approaches @xmath0-clusters for @xmath0 as large as possible .",
    "let @xmath162 be a list of primitive heronian triangles of length @xmath0 .",
    "* ( triangle extensions ) * +   for @xmath68 from @xmath52 to @xmath0 + @xmath163 + for @xmath69 from @xmath68 to @xmath0 + combine @xmath164 with @xmath165 in all possible ways + compute coordinates of fourth point @xmath66 + if @xmath166 is a @xmath102-cluster then add @xmath66 to @xmath21 + compute all pairwise distances between the points in @xmath21 + loop over all @xmath50-sets , where @xmath167 , @xmath168 of @xmath21 + if @xmath169 is a cluster and @xmath170 then output @xmath169 +    we remark that the loop over the @xmath50-sets is iteratively done , i.e.  all subsets of the present @xmath50-set are previously checked so that e.g.  the upper bound for @xmath50 automatically is chosen .",
    "the implementation details for the coordinate and distances computations are described in section  [ sec_low_level_details ] .",
    "in the previous sections we have described our algorithms without much implementation details . since the application of those algorithms result in many sub computations like e.g.  coordinate and distance computations those sub routines have to be carefully designed in order to save costly unlimited precision rational computations .",
    "suppose we are given three integer side lengths @xmath44 , @xmath45 , and @xmath46 , which form a non - degenerate heronian triangle .",
    "our aim is to compute rational coordinates for the points @xmath171 , @xmath172 , and @xmath173 attaining those pairwise distances , i.e.  @xmath174 , @xmath175 , and @xmath176 .",
    "w.l.o.g .",
    "we can assume that the first point is located in the origin of our coordinate system , i.e.  @xmath177 .",
    "considering the edge of length @xmath44 , we locate the second point of the positive side of the @xmath178-axis so that @xmath179 . by introducing variables @xmath178 and @xmath180 for the coordinates of the third point , i.e.  @xmath181",
    ", we obtain a quadratic equation system , which can be uniquely solved if we assume that the @xmath180-coordinate is non - negative : @xmath182 the second solution is given by @xmath183 .    in some algorithms all permutations of the three edge lengths of a heronian triangle @xmath91 should be considered . to this end",
    "we assume that the above auxiliary integer values @xmath184 and @xmath185 have already been computed .",
    "permuting the two latter side lengths , i.e.  @xmath186 , is equivalent to swap the points @xmath171 and @xmath172 .",
    "the corresponding coordinates with non - negative @xmath180-values are given by @xmath187 by applying a suitable rotation matrix we obtain the coordinate representation @xmath188 for the triangle @xmath189 and @xmath190 for the triangle @xmath191 .",
    "so there is no need to compute additional square roots .",
    "of course the common subexpressions like e.g.  @xmath192 , @xmath193 , and @xmath194 should be stored additionally .",
    "we assume a suitable but fixed ordering of the @xmath0 points and denote the ( integer ) distance between the first two points by @xmath195 . w.l.o.g .",
    "the first point has coordinates @xmath196 and the second @xmath197 . for the third point",
    "we utilize the formula for @xmath198 in subsection  [ subsec_heron_coordinates ] . we restrict ourselves onto the case of a positive @xmath180 coordinate . for points",
    "@xmath102 to @xmath0 we also compute the positive coordinates according to the previous subsection  [ subsec_heron_coordinates ] using the distances to point  1 and point  2 .",
    "next we have to check whether the squared distance to the coordinates of point  3 coincides with the presumed squared distance and possibly negate the computed @xmath180-coordinate .",
    "thus all points have coordinates @xmath199 with integers @xmath200 .",
    "suppose we are given two points with rational coordinates @xmath201 and @xmath202 . the task is to decide whether they are at rational distance and eventually compute the distance .",
    "since during our searches most of the checked distances are irrational it is important to have a quick check for the decision problem .",
    "an exact expression for the distance is given by @xmath203 thus the problem is reduced to the question whether a certain integer is a square .",
    "here we can benefit from modular arithmetic .",
    "suppose that @xmath23 is an arbitrary integer and compute @xmath204 by performing all intermediate computations modulo @xmath23 .",
    "if the result is not a square in @xmath205 the distance under study can not be rational .",
    "if @xmath23 is a product of distinct primes then we can check the square property separately for each prime @xmath66 by simply tabulating a boolean incidence vector for the squares in @xmath206 . in our implementation",
    "we use @xmath207 and @xmath208 , i.e.  we perform two successive modular tests .",
    "since computations modulo @xmath102 are very cheap in most arbitrary precision libraries it pays off to first check whether the integer under study is equivalent to either @xmath20 or @xmath52 modulo @xmath102 ; otherwise its square can not be rational .",
    "if we can assume a common denominator of the coordinates , as e.g.  implied by the algorithm in subsection  [ subsec_rational_coordinates ] , the computations can be simplified since the distance between the points @xmath209 and @xmath210 is given by @xmath211      in order to be able to check @xmath0-clusters for similarity we define a canonical form in such a way that two @xmath0-clusters are similar if and only if their canonical forms coincide . given a matrix of the pairwise rational distances we first normalize by multiplying with the least common multiple of the denominators and then by dividing the greatest common divisor of the resulting nominators .",
    "now we are given integer distances whose greatest common divisor is trivial . since distances are symmetric it suffices to consider the upper right triangular submatrix without the diagonal of zeros .",
    "appending the columns of this matrix gives a vector  distance vector for brevity , which can be compared with respect to the lexicographical ordering .",
    "we define the canonical form to be the lexicographically maximal distance vector over all permutations of the points .",
    "clearly the defined canonical form is unique and we can determine it by comparing all @xmath212 possible permutations . for our purposes",
    "this was fast enough even for @xmath213 , but we remark that one can easily design @xmath214 algorithms to compute the canonical form .",
    "as observed in @xcite the rationality of distances in @xmath1 is preserved by translations , rotations , scaling with rational numbers and by some kind of circle inversion .",
    "we go into the details of the latter transform .",
    "assume that our point set has a point in the origin , then a circle inversion through the origin with radius one sends each point with coordinates @xmath198 besides the origin to @xmath215 . ] .    using this transform",
    "we can construct @xmath7-clusters from @xmath0-clusters by moving each of their points to the origin and applying the described circle inversion .",
    "doing this for the set of all known @xmath2-clusters gives no new @xmath14-clusters , while even preserving the set of the contained subtriangles , i.e.  the set of the ( normalized ) subtriangles from the resulting @xmath14-clusters coincides with the set of the subtriangles contained in the @xmath2-clusters .    discarding one point is , on the one hand disadvantageous , but gives us some freedom in the initial point set , it does not have to be an @xmath0-cluster . to be more precise ,",
    "we need rational point sets @xmath21 with characteristic  @xmath52 , where no three points are on a line and no four points are on a circle .",
    "circle inversion at a vertex of @xmath21 automatically destroys the property of those collinear triples .",
    "we were able to extend some of the @xmath2-clusters to @xmath16-point rational sets .",
    "clearly at most @xmath101 points are on a line and all those lines intersect in the @xmath16th point .",
    "unfortunately in each of this cases the @xmath16th point also was part of a circle containing four points of the point set .",
    "a promising configuration might be the so - called pappus configuration consisting of nine points and nine line , with three points per line and three lines through each point .",
    "unfortunately we were not able to find a representation of the pappus configuration with pairwise rational distances .",
    "so while circle inversion might be theoretically interesting we were not able to draw any computational advantages .",
    "instead of extending a given @xmath216-cluster with the aid of heronian triangles one might directly appeal to almerings theorem that the set of points at rational distance to the vertices of a sub triangle of a cluster is dense in the plane . here",
    "we simplify notation and assume that we are given a triangle with rational side lengths .",
    "moreover we assume that this triangle is rotated into a convenient position , compare subsection  [ subsec_heron_coordinates ] . in the following two subsections we present two approaches capable of producing candidates for a forth point with rational distances to the vertices of the initial triangle .",
    "we have applied both methods in order to extend @xmath0-clusters for small @xmath0 and report that they both find some examples but generally the necessary running time , i.e. the number of choices for the method s parameters , is not competitive compared to the other algorithms described earlier on .      given an arbitrary heronian triangle with side lengths @xmath44 , @xmath45 , and @xmath46 we rotate it in the convenient position shown in figure  [ fig : heron_tangents ] , i.e. , the three vertices have coordinates @xmath217 , @xmath218 , and @xmath219 , where @xmath220 is the area of the triangle .",
    "the method of _ pythagorean arctangent _ uses two pythagorean arctangents to choose two smaller angles , one @xmath221 located at @xmath222 and the other @xmath223 at @xmath224 such that the intersection point @xmath225 has rational coordinates and the distances @xmath226 and @xmath227 are rational too .",
    "in other words the triangle spanned by vertices @xmath222 , @xmath225 , and @xmath224 is made heronian .",
    "a pythagorean arctangent can be parameterized as @xmath228 with integers @xmath23 and @xmath0 . dividing both the numerator and the denominator by @xmath229 we obtain the rational parameterizations @xmath230 and @xmath231 with @xmath232 . with this we can easily check that the coordinate of the fourth point @xmath233 and also the two distances @xmath234 and @xmath235 are rational . for the third distance we obtain @xmath236 using the substitution @xmath237 yields the simplified expression @xmath238",
    "the numerator of this equation must be a square , if @xmath239 has to be rational .",
    "unfortunately it has the form of a homogeneous quartic equation in @xmath240 , @xmath241 which , in general , is difficult to solve . if one point for a choice of @xmath240 , @xmath241 is found , then others exist , because it can be transformed into an elliptic curve . at this time , the only choice is to actually determine the value and then take the square root for arbitrary choices of @xmath240 , @xmath241 .",
    "@xmath242 is fixed by our choice of @xmath240 , @xmath241 , but the numerator - constraint must be taken into account .      given a triangle with vertices @xmath222 , @xmath224 , and @xmath32 , let the lines @xmath243 , @xmath244 and @xmath245 be drawn , where @xmath246 is a common point .",
    "the intersection points at the sides of the initial triangles are denoted by @xmath225 , @xmath247 , and @xmath248 , respectively , see figure  [ fig : ceva_point ] , where @xmath246 is the common intersection point .",
    "let @xmath249 denote the signed length of the segment between @xmath250 and @xmath242 , i.e. , @xmath251 . with this notation ,",
    "ceva s theorem states @xmath252        we set @xmath253 , @xmath254 and use the rational coordinates @xmath255 of @xmath32 to state the coordinates @xmath256 of the common intersection point @xmath246 , which clearly are rational .",
    "for the three distances we obtain @xmath257 we can easily constrain @xmath240 and @xmath241 so that the first two distances get rational . having chosen suitable rational numbers @xmath232 , we can then check the third distance @xmath258 .",
    "viewed from a different angle we choose a heronian triangle with side lengths @xmath44 , @xmath45 , @xmath46 and another one with side lengths @xmath195 , @xmath259 , @xmath260 . via scaling we",
    "ensure that @xmath44 and @xmath195 coincide .",
    "it remains to check that the two off - axis points ( @xmath32 and @xmath225 in figure  [ fig : ceva_point ] ) are at a rational distance  compare section  [ sec_triangle_extension ] .",
    "the algorithms presented in the previous sections can in principle deal with large lists of @xmath0-clusters , but of course the computation time limits such searches . in order to find many non - similar @xmath2-clusters we have tried to restrict ourselves on promising search spaces . either the exhaustive - like algorithm from section  [ sec_combine ] or the triangle extension algorithm from section  [ sec_triangle_extension ] grounds on a list of heronian triangles and then dives into the resulting search space . unfortunately we do not have the computational capacity to start those algorithms with all heronian triangles known to us but have to select a subset of them . of course this subset should be selected in a way so that is small on the one hand but generates many @xmath2-clusters . to satisfy",
    "the latter aim is essential but of course the hardest part .",
    "so far we have no theoretical justification but only computational results in that direction .",
    "conceptually the best way is to invent a method that is able to compute a score for a given heronian triangles and then choosing a given number of heronian triangles with the largest score .",
    "a very easy but effective scoring function is the negative diameter of all heronian triangles . in order to verify our claim",
    "we have used the triangle extension algorithm with subsets of @xmath261 heronian triangles . using the first @xmath261 smallest , with respect to diameter , heronian triangles produces @xmath262 @xmath14-clusters and four @xmath2-clusters ( having diameters @xmath263 , @xmath264 , @xmath265 , and @xmath266 ) .",
    "the second smallest @xmath261 heronian triangles produces _ only _ nine @xmath14-clusters and no @xmath2-cluster .",
    "a promising idea might be to use the number of divisors or prime divisors of the side lengths normalized by magnitude , i.e.  prime side lengths should get the lowest possible score while highly composite numbers get large scores .",
    "exemplary we report the results of two explicit scoring functions based on this idea .",
    "for @xmath267 we have chosen the @xmath261 heronian triangles with maximal score among all heronian triangles with diameter at most @xmath268 . applying the triangle - extension algorithm results in three @xmath14-clusters and no @xmath2-cluster .",
    "the similar function @xmath269 increases the number of found @xmath14-clusters to @xmath270 within the same setting .",
    "but of course @xmath271 tends to prefer triangles with smaller diameter .",
    "we remark that using the number of divisors instead of the number of prime divisors yields similar results .",
    "the most successful approach in our computationally study was to use the known lists of @xmath0-clusters as selectors .",
    "to be more precisely , given a list of @xmath0-clusters we can determine the contained sub - triangles , which then , after rescaling , gives a list of primitive heronian triangles .",
    "if the resulting list of heronian triangles is too large for our purposes we take the @xmath23 smallest ones according to their diameter or we take frequency into account , i.e.  we consider only those primitive heronian triangles which appear at least @xmath50 times , where @xmath50 is suitably chosen , as sub - triangles within the list of @xmath0-clusters .",
    "exemplary we report the following to experiments performed near the end of our computational study , were we already know lots of @xmath14- and @xmath2-clusters . for @xmath9 and @xmath213",
    "we choose the @xmath261 heronian triangles having the smallest diameter , respectively . in the first case triangle extension yields @xmath272 @xmath14-clusters and four @xmath2-clusters .",
    "for the latter case we obtain @xmath273 @xmath14-clusters and @xmath274 @xmath2-clusters .",
    "so a higher initial value of @xmath0 results in more clusters , but of course those examples are harder to find .",
    "a completely different idea is to associate heronian triangles @xmath91 with ellipses represented by @xmath275 . as an experiment we took the @xmath276 smallest heronian triangles and computed the three associated ellipses in each case .",
    "the most frequent ellipse representation occurs @xmath277 times . taking the smallest @xmath261 triangles results in @xmath278 @xmath133-clusters applying the triangles extension algorithm . taking triangles from ellipse representations that occur exactly",
    "once result in just six @xmath133-clusters .",
    "in this section we collect some computational observations that help us to design our searches for @xmath2-clusters .    the triangle - extension algorithm is more effective than the combine - hexagons algorithm .    using the @xmath279 triangles contained in the original twenty - five @xmath2-clusters found by simmons and noll in 2010 as an input for the triangle - extension algorithm yields @xmath280 non - similar @xmath2-clusters in less than two minutes computation time .",
    "if we instead take the sub - hexagons of the original twenty - five @xmath2-clusters plus an additional list of @xmath281 hexagons and apply the combine - hexagons algorithm we end up in @xmath282 non - similar @xmath2-clusters .",
    "we remark that all but one of these heptagons is contained in the list of the @xmath280 heptagons from the triangle extension algorithm .",
    "additionally the computation time of the combine - hexagons algorithm is usually much larger than the computation time of the triangle - extension algorithm .",
    "stripping isosceles triangles from the input set of heronian triangles only mildly reduces the number of @xmath14- and @xmath2-clusters found in the search of the triangle - extension algorithm .    because any pair of isosceles heronian triangles forms a @xmath102-cluster ,",
    "there are numerous @xmath102-clusters formed from pairs of isosceles triangles .",
    "when testing a pair of @xmath102-clusters that have this property , the pair will not be interesting because three points will lie on the line through the median of the base of the isosceles triangles .    as expected the runtime increases while including isosceles heronian triangles , where the precise factor heavily depends on the chosen subset of heronian triangles . for comparison",
    "we have chosen the @xmath261 smallest non - isosceles heronian triangles and applied the triangle - extension algorithm , which resulted in @xmath283 @xmath14-clusters and four @xmath2-clusters .",
    "so we have missed @xmath284 @xmath14-clusters but no @xmath2-cluster . here the computation time was decreased by a factor of two . in a larger experiment we have chosen @xmath285 heronian triangles and obtained @xmath286 @xmath14-clusters and @xmath287 @xmath2-clusters .",
    "stripping all @xmath288 isosceles triangles we have obtained @xmath289 @xmath14-clusters and @xmath287 @xmath2-clusters , while the computation time decreases by a factor larger than @xmath290 .    [ claim_partionioning ] partitioning the set of triangles can speed up the search of the triangle - extension algorithm .    given a list of @xmath23 @xmath0-clusters containing the same @xmath7-cluster",
    "the ordinary combination would need @xmath229 tests . since integral point sets with many points on a line or a circle",
    "are quite common it makes sense to take this fact into account .",
    "partitioning @xmath102-clusters by a line through @xmath291 of the points or by a circle through @xmath101 of the points avoids many spurious comparisons and speeds up the search .",
    "the important thing is that a pair of items in a partition can not form an @xmath292-cluster because it would violate a con - circularity or co - linearity constraint . in our programs",
    "we can either turn on and off the partitioning algorithm , but mostly use it to increase the computation speed .",
    "the typical performance boost is around 10  % .",
    "[ claim_no_large_triangles ] large heronian triangles tend to not form 4-clusters .",
    "that is , given two random small heronian triangles , the probability they form a @xmath102-cluster is relatively high compared to the probability that two large heronian triangles will form a @xmath102-cluster , i.e.we have to perform many unsuccessful combinations of heronian triangles per found @xmath102-cluster .",
    "to additionally justify this theoretically , one might appeal to ceva s theorem . as we allow the size of a heronian triangle to increase the prime factors present in the numerators of the sines of the heronian angles increase making it more difficult to find sets of angles where the numerators cancel each other out .    iterating",
    "the triangle - extension algorithm can find new triangles and @xmath0-clusters .",
    "as described in section  [ sec_promising ] combining the triangles contained in the twenty - five @xmath2-clusters found by simmons and noll in 2010 yields @xmath280  non - similar @xmath2-clusters .",
    "those @xmath2-clusters contain @xmath293 triangles which combine to @xmath294 non - similar @xmath2-clusters using the triangle extension algorithm .",
    "then the iteration gets stuck since those @xmath2-clusters contain exactly @xmath293 non - similar triangles again .",
    "similarly we have used the @xmath262  @xmath14-clusters which arose from combining the @xmath261 smallest heronian triangles , see section  [ sec_promising ] .",
    "those @xmath14-clusters contain @xmath295 non - similar triangles which can be combined to @xmath296 non - similar @xmath14-clusters and @xmath297 non - similar @xmath2-clusters .",
    "the rational distance test rules out most of the combinations of heronian triangles .    to verify this claim",
    "we report the statistics of a large scale experiment .",
    "we have chosen the @xmath276 smallest primitive heronian triangles along with those contained in the @xmath14-clusters known to us .",
    "using @xmath298 cores during @xmath299 days @xmath300 pairs of @xmath101-clusters were tried . in @xmath301",
    "% the missing sixth distance was not rational .",
    "the concircular test ruled out @xmath302 possibilities ( @xmath303  % ) and the collinearity test @xmath304 possibilities ( @xmath305  % ) , while we found @xmath306 ( possibly similar ) successful combinations ( @xmath307  % ) .",
    "the longest list of @xmath102-clusters containing a common @xmath101-cluster had length @xmath308 . in table",
    "[ table_checks ] we have summarized the corresponding statistics for the combinations of the resulting @xmath50-clusters for @xmath309 .",
    ".failure of different checks for @xmath310-clusters combining two @xmath50-clusters [ cols= \" > , > , > , > , > , > , > \" , ]     as hardware we have used @xmath298 cores at google inc .  and the linux computing cluster of the university of bayreuth , which consists of 201  2xintel e5520 2.26 ghz and 52  2xintel e5620 2.4ghz processors ( 100 - 300 jobs are done in parallel ) .",
    "the computations for the triangle - extension algorithm using the triangles in the known @xmath2-clusters were done on a customary laptop computer in less than one day of computation time per iteration .",
    "we used the gnu mp bignum library and class library of numbers ( cln ) libraries to provide arbitrary precision integers and rationals .",
    "although we have invested a large amount of processing power over the past year in our current collaboration , we have not found an @xmath16-cluster .",
    "the techniques of finding @xmath0-clusters have dramatically improved since the discovery of the first @xmath14-clusters in @xmath1 : back when some researchers incorrectly conjectured that @xmath14-clusters in @xmath1 did not exist . at the current state",
    "it is still a significant computational challenge to find new @xmath2-clusters , but we have shown that quite some examples exist . a toolbox of algorithms to generate @xmath0-clusters is provided .",
    "using the triangle - extension algorithm one may eventually extend a small list of @xmath0-clusters to a larger list of @xmath0-clusters by just combining their contained sub triangles . compared with its running time and its output in terms of newly found @xmath0-clusters",
    "this is certainly the most effective algorithm that is currently known . for",
    "a given @xmath0-cluster the knowledge of only @xmath8 of its sub triangles may suffice to recover all distances and so all @xmath311 sub triangles .",
    "moreover we have some kind of scale invariance , i.e.  only the angles but not the side lengths have to be known in advance . considering all possible scalings comes at constant cost",
    ".    however this algorithm is indentured from a good list of heronian triangles , or indirectly a list of starting @xmath0-clusters . to some extent",
    "the algorithm itself produces some new heronian triangles so that it can be applied iteratively . but",
    "admittedly the number of successful iterations is observed to be rather small in practice .",
    "so different algorithms are needed to populate the set of _ promising _ triangles . choosing them directly from the list of heronian triangles , based on a scoring function ,",
    "still has no satisfactory solution and is left as an open problem . so still the discovery of new @xmath2-clusters depends on extensive computer calculations to that highly optimized low level routines are essential to check a large number of cases .      the question whether there exists",
    "an infinite number of non - similar @xmath2-clusters is still open . at this point",
    "we would be the last to speculate that there are anything but an infinite number of @xmath16-clusters in @xmath1 ."
  ],
  "abstract_text": [
    "<S> a set of @xmath0-lattice points in the plane , no three on a line and no four on a circle , such that all pairwise distances and all coordinates are integral is called an @xmath0-cluster ( in @xmath1 ) . </S>",
    "<S> we determine the smallest existent @xmath2-cluster with respect to its diameter . </S>",
    "<S> additionally we provide a toolbox of algorithms which allowed us to computationally locate over 1000 different @xmath2-clusters , some of them having huge integer edge lengths . on the way , we exhaustively determined all heronian triangles with largest edge length up to @xmath3 . </S>"
  ]
}
{
  "article_text": [
    "over the past decade the statistical properties of combinatorial problems has attracted increasingly greater attention from both the computer science and physics communities @xcite .",
    "most computationally difficult problems encountered in practice belong to the class of np - complete problems .",
    "there is a one - to - one correspondence between these problems and spin glass models @xcite . unlike problems with regular structure ,",
    "many combinatorial optimization problems are formulated on random graphs and hypergraphs .",
    "the long - standing problem in the computer science community is p vs. np  , that is , can np - complete problems be solved in polynomial time , or they are inherently intractable @xcite ? although the problem is extremely important , it is also deeply theoretical as it concentrates on worst - case scenarios . from the viewpoint of practitioners , efficient algorithms",
    "have to be designed with real - world problems in mind .",
    "appropriate test cases can be prepared for comparing the performance of different algorithms .",
    "however , this approach does not allow the design of algorithms with typical performance in mind , only their comparison .",
    "one can argue that the purely theoretical study of algorithms was somewhat impeded by exploding speed of computers that encouraged experimentation .",
    "this state of affairs may be challenged by the emerging paradigm of quantum computing . until a working prototype of a quantum computer",
    "is built , it exists only on paper .",
    "classical simulations of quantum computers can be done only for very small problems , due to speed and memory requirements .",
    "since these reqirements grow exponentially with the size of the problem , they could be used only in proof - of - concept scenarios . while quantum computation was shown to be efficient for some classically intractable problems ( the most notable example being shor s algorithm @xcite ) , whether they provide an advantage for np - complete problems is unresolved .",
    "therefore , designing algorithms with typical complexity in mind for quantum computer may be desirable . whether the newly proposed quantum adiabatic algorithm is efficient in tackling np - complete problems",
    "is an area of active research @xcite .",
    "the statistics of real - world examples is largely unknown . as a first approximation",
    "one can assume that the problems can be chosen completely at random .",
    "the underlying belief is that if an algorithm is efficient for a uniform ensemble of randomly chosen problem instances , it will solve real - world examples fairly efficiently as well .",
    "the performance for random problems is a truly unbiased benchmark to compare different algorithms .",
    "the same explosion in computational speed responsible for diminished reliance on theoretical study has also reignited interest in this type of study .",
    "many problems of interest are written as a boolean expression ( a formula )  a set of @xmath0 variables and @xmath1 constraints , all which we aim to satisfy .",
    "each constraint is a clause involving @xmath2 variables and it determines which combinations of variables are permitted . the types of constraints differ from problem to problem , but for great many the following picture persists : for small @xmath5 the problem is almost always ( that is , with probability @xmath4 in the limit @xmath6 ) satisfiable , while at @xmath7 an abrupt change occurs , and for all @xmath8 the problem is almost always unsatisfiable @xcite .",
    "an even more interesting phenomenon occurs for the typical running time of the algorithm : the time it takes to solve a problem is usually polynomial for @xmath9 , and exponential for @xmath10 , where @xmath11 is algorithm - dependent .",
    "however , independent of the algorithm used , the complexity peaks at @xmath7 , where the probability that the formula is satisfiable is approximately @xmath12 .",
    "random satisfiability problems grabbed the attention of the statistical physics community , since the phenomenon in question is a phase transition ; the study of this phase transition may improve the understanding of the physics of random materials such as glasses .",
    "this is in addition to any statistical properties of the solutions  properties that can be used for the design of efficient classical or quantum algorithms .",
    "the quest for exact values of @xmath13 or @xmath11 has so far been elusive .",
    "the best results for a particular problem  k - sat  were obtained using the so - called one - step rsb approximation and are in excellent agreement with experiment @xcite .",
    "however , the method has drawn criticism because the method itself is not well - understood , lacks a rigorous foundation , and the result depends on extensive numerical computations . on the upside ,",
    "rigorous bounds have been obtained for @xmath2-xor - sat ( note , however that it can be solved in polynomial time ) . on the mathematical side ,",
    "a series of results on rigorous lower @xcite and upper @xcite bounds on @xmath13 appeared recently .",
    "typically lower bounds rely on an explicit algorithm and upper bounds rely on the counting of solutions .",
    "the trivial upper bound is obtained using the annealing approximation .",
    "all improvements over the annealing approximation employ the fact that at the satisfiability transition the number of solutions jumps from the exponentially large number @xmath14 to @xmath15 .",
    "the method we propose in this paper does not deviate from this strategy . for any random formula",
    "we identify a subformula that possesses identical satisfiability properties , but has suppressed fluctuations .",
    "that is , if the formula is satisfiable , the subformula is also satisfiable but has a significantly smaller number of solutions . by performing the disorder average of the number of solutions of the subformula ( rather than formula , as in the annealing approximation ) the point where the average goes to zero determines the upper bound on the true transition point .",
    "the advantages of the method described here are that it is rigorous ( it does not rely on any hypotheses , although we supply proofs only when they are not immediately intuitive ; it is straightforward to rederive all the results with complete mathematical rigor ) and that the method is applicable to various types of random satisfiability problems .",
    "we choose to describe @xmath2-xor - sat as well as the np - complete problems @xmath2-sat and positive @xmath4-in-@xmath2-sat .",
    "each problem adds its own touch  to the formalism .",
    "for the case @xmath2-xor - sat  a polynomial problem  the upper bound is exact @xcite , while the upper bound for @xmath2-sat grossly overestimates the transition .",
    "this could be related to the fact that @xmath2-sat is very difficult for classical algorithms . in all cases",
    "we take a two step approach . in the first step",
    "we compute the parameters of the subformula  the core . in the second step",
    "we compute the annealing approximation for the number of solutions of the subformula .",
    "the size of the core also exhibits a phase transition and has been studied for a range of problems @xcite .",
    "our method provides a much simpler way to derive those results .",
    "the paper is organized as follows .",
    "we describe @xmath2-xor - sat , @xmath2-sat and positive @xmath4-in-@xmath2-sat in sections [ sec : kxorsat ] through [ sec:1inksat ] ; section [ sec : simulations ] is devoted to numerical simulations for the positive @xmath4-in-@xmath16-sat problem ; section [ sec : summary ] is a summary .",
    "in this model the instance of the problem consists of @xmath0 variables and @xmath1 clauses , each clause involving @xmath2 variables .",
    "each variable can take values @xmath15 or @xmath4 .",
    "the ensemble we consider ( random hypergraph ) is that of independent clauses with variables in each clause drawn uniformly at random out of the set of @xmath0 variables . to each clause",
    "we also attribute a number @xmath15 or @xmath4 , each with probability of @xmath12 , and posit that the clause is satisfied if the exclusive - or ( xor ) of the @xmath2 variables in the clause equals that number .",
    "the entire formula is said to be satisfied if all of its clauses are satisfied    the probability that such random formula is satisfied , in the limit @xmath6 , exhibits a sharp jump from @xmath4 to @xmath15 at some critical ratio of clauses to variables @xmath17 .",
    "we attempt to estimate this satisfiability threshold .",
    "the simplest approximation ( in fact an upper bound ) uses the first moment method ( known as the annealing approximation in the physics community ) .",
    "one can compute the disorder - averaged number of solutions .",
    "the point where the expectation value of the number of solutions becomes smaller than @xmath4 corresponds to a formula that is unsatisfiable ; therefore this serves as an upper bound on the location of the transition .",
    "in essence we have approximated @xmath18 = \\mathbbm{e } [ \\theta ( \\mathcal{n}- 1 ) ] $ ] by @xmath19 $ ] , where @xmath20 denotes the number of solutions ( an integer ) . in the physics community the annealing approximation for the entropy is regarded as the replacement of the correct quantity @xmath21 $ ] by the incorrect expression @xmath22 $ ] .",
    "computing the point where the annealed entropy becomes zero is trivial .",
    "for each clause , the probability that the clause is satisfiable is independent of the assignment of variables and equals @xmath12",
    ". therefore the expected number of solutions is @xmath23 = 2^n 2^{- m},\\ ] ] and the corresponding entropy @xmath24 becomes negative above @xmath25 ( the subscript indicates that this is the upper bound ) .",
    "a major drawback of the annealing approximation is in that it fails to account for finite entropy at the satisfiability transition .",
    "( by accident , for this particular problem , the annealed expression for the entropy on the satisfiable side of the transition is exact ) .",
    "it can be argued that at any finite connectivity a random graph possesses a large ( @xmath26 ) number of variables that do not appear in any clauses , thus making a contribution to the entropy which we fail to take into account .",
    "furthermore , there are clauses that involve variables , the variables not being in any other clauses , as well as small clusters of such clauses .",
    "the annealing bound would be significantly improved if it were possible to separate these _ irrelevant _ contributions to the entropy .    in a paper devoted to the finite - size effects of the satisfiability transition",
    ", a concept of _ irrelevant _ clauses was put forward . given a random formula one can always easily identify clauses that can be trivially satisfied .",
    "the paper did not specify the procedure for finding such clauses , only that their number is extensive ( @xmath26 ) .",
    "one example is isolated clauses , since variables can always be set so as to satisfy the clause .",
    "the presence of such extensive clauses is responsible for the lower bound of @xmath27 of the finite - size scaling exponent @xmath28 , or , in other words , that the disorder is relevant to the phase transition .",
    "one can try to advance the most general definition of irrelevant clause based on local properties alone .",
    "in fact this has been done for @xmath2-xor - sat @xcite .",
    "in essence we repeat the derivation in a slightly simplified form , but will generalize it to other problems later on . for @xmath2-xor - sat",
    "we identify variables that appear in no clauses and delete those variables .",
    "further , we identify variables that appear in only one clause .",
    "such variables can be set to @xmath15 or @xmath4 ( after other variables have been assigned ) so that the clause becomes satisfiable .",
    "hence the satisfiability of the entire formula will be unaffected if the variable and the corresponding clause are deleted .",
    "this process ( known as trimming algorithm , illustrated below , in fig . [ fig : trim1 ] ) can be continued until we either end up with an empty graph ( which would imply that the formula is satisfiable ) or a _ core _  the formula in which all variables appear in at least two clauses .",
    "one can compute the annealed entropy on the core and use the point at which the entropy becomes zero as the improved upper bound @xmath29 .",
    "example of trimming algorithm for 3-xor - sat .",
    "variables are represented graphically as vertices and clauses are represented as triangles .",
    "incomplete triangles represent connections to the remainder of the graph ( not shown ) .",
    "lightly shaded clauses are removed by the trimming algorithm.,width=240 ]    we examine the structure of the remaining core .",
    "first , observe that the remaining core does not depend on the order in which the variables and clauses are removed .",
    "in fact the remaining core is the unique maximal subformula of the original formula with the property that every variable appears in at least two clauses .",
    "the original formula is the core plus all deleted clauses and variables .",
    "assume that the core has @xmath30 variables and @xmath31 edges ( implying @xmath32 variables and @xmath33 clauses were deleted ) .",
    "correspondingly , all original graphs can be divided into distinct groups based on values of @xmath30 , @xmath31 .",
    "suppose we keep @xmath30 and @xmath31 fixed .",
    "observe that to every realization of the core there corresponds an equal number of possible realizations of deleted clauses , and , as a consequence , an equal number of possible realizations of the original graph ( in the group labeled by @xmath30 , @xmath31 ) .",
    "therefore , for any fixed @xmath30 , @xmath31 all possible realization of the core are equiprobable  a fact we employ to perform disorder averages .",
    "notice that all possible realizations of the core are equiprobable only for fixed @xmath30 , @xmath31 .",
    "the values of @xmath30 and @xmath31 themselves fluctuate .",
    "however , the fluctuations in @xmath30 and @xmath31 are on the order of @xmath34 while their respective values are @xmath26 . since we expect the threshold to be sharp as a function of @xmath35 , we need not concern ourselves with these fluctuations .",
    "therefore we concentrate on finding the most likely values of @xmath36 and @xmath37 .",
    "one approach is to work with a set of @xmath38  a fraction of vertices that appear in @xmath39 clauses .",
    "one can describe an algorithm as a random process and study the changes in the average values of @xmath38 .",
    "the discrete steps of the algorithm are approximated by continuous time @xmath40 , and a set of @xmath41 is replaced by its generating function @xmath42 .",
    "the problem is then reduced to solving the resulting pde .",
    "this is the approach taken in @xcite .",
    "slightly differing variants of this method were also employed in @xcite .",
    "we instead opt for an approach that does not take dynamics into considerations .",
    "the approach is inspired in part by work analyzing the matching problem @xcite .",
    "in essence , we seek the disordered average of @xmath36 .",
    "this is precisely the probability @xmath43 that a randomly chosen variable belongs to the core .",
    "we can also fix a specific variable ( say , variable @xmath44 ) and perform a disorder average of a function that yields @xmath4 if that vertex belongs to the core or @xmath15 if it does not . for every formula @xmath45 we can introduce the set @xmath46 of variables that belong to the core .",
    "obviously @xmath47 .",
    "now , introduce an extension of @xmath46 , which we denote as @xmath48 , defined as the minimal set that satisfies the following requirements    1 .",
    "if @xmath50 variables in some clause belong to @xmath48 , then the remaining variable must also belong to @xmath48 .",
    "it is straightforward to see that set @xmath48 so defined is unique .",
    "let @xmath51 , where @xmath52 can be interpreted as the probability that a random vertex belongs to @xmath48 .",
    "let us turn to the original random graph .",
    "the number of clauses in which the variable @xmath44 appears is a random variable distributed according to a poisson distribution with parameter @xmath53 . in performing disorder averages",
    "we can first average over all possible disorders with fixed values of clauses @xmath39 first , and average over @xmath39 with weight @xmath54 as the last step .",
    "further , observe that those @xmath39 clauses are independent .",
    "let @xmath55 denote a formula that is obtained by removing the variable @xmath44 and the clauses in which it appears .",
    "let @xmath56 denote the parameter @xmath52 associated with @xmath55 .",
    "suppose that for some clause in which @xmath44 appears , all the other @xmath50 variables belong to @xmath57 $ ] .",
    "then @xmath44 must belong to @xmath58 $ ] .",
    "the probability that for some clause @xmath50 variables other than @xmath44 belong to @xmath59 $ ] is @xmath60 .",
    "the number of such clauses is , hence , also poisson , but with parameter @xmath61 .",
    "the probability @xmath52 that @xmath44 belongs to @xmath58 $ ] is therefore @xmath62 now observe that @xmath55 is essentially a random formula with @xmath63 variables and the same ( to within @xmath64 ) ratio of clauses to variables .",
    "therefore in the limit @xmath65 which we are ultimately interested in , there should be no difference in statistical properties , and hence @xmath66 .",
    "this leads to self - consistency equation @xmath67 note that @xmath68 is always a solution to this equation .",
    "since the core is defined as the largest possible subformula with certain properties , and the size of the core is directly related to @xmath52 , we must adopt a convention that the largest possible solution to ( [ eq : kxor - q ] ) is always chosen .",
    "below a certain threshold only @xmath68 is a solution , whereas above the threshold , another @xmath69 solution appears .",
    "we now turn to the original goal of finding @xmath30 .",
    "if at least two clauses which include @xmath44 have the property that @xmath50 other variables are in @xmath70 $ ] , then the variable @xmath44 as well as the aforementioned variables are in @xmath58 $ ] .",
    "hence , we can write @xmath71 to compute @xmath31 we examine the average degree ( number of clauses in which it appears ) of the randomly chosen vertex in the core .",
    "the latter should equal @xmath72 .",
    "if vertex @xmath44 is in the core ( with probability @xmath43 ) , the number of clauses which are in the core was shown above to be a random variable  a truncated ( only @xmath73 are allowed ) poisson distribution with parameter @xmath74 . therefore @xmath75 recognizing that the denominator is @xmath76 we can rewrite @xmath77      as with the original annealing bound , we are aided by the fact that clauses require that the exclusive - or of the variables be either @xmath15 or @xmath4 with probability @xmath12 .",
    "the probability that a clause is satisfied is independent of the assignment of the variables , and the entropy is predicted to decrease to zero when @xmath78 or @xmath79 coupled with @xmath80 this puts the upper bound of critical threshold at @xmath81 .",
    "it is a remarkable feature of @xmath2-xor - sat is that whenever it is satisfiable , the number of solutions of @xmath2-xor - sat equals the number of solutions of the corresponding ferromagnetic ",
    "model , where we require that the exclusive - or of the variables be precisely @xmath15 in all clauses .",
    "note that for @xmath2-xor - sat , this is not so ; the ferromagnetic model always possesses at least one solution .",
    "the next observation is that the disorder average of the square of the number of solutions of @xmath2-xor - sat @xmath82 $ ] equals @xmath83 multiplied by @xmath19 $ ] as computed for the ferromagnetic model .",
    "as long as the annealing bound for the ferromagnetic model equals that for @xmath2-xor - sat we can be sure that the annealing bound is correct and we are in the satisfiable phase .",
    "the point at which it ceases to be so is the lower bound on the satisfiability transition @xmath84 .",
    "finding the annealed entropy for the ferromagnetic model on a complete graph is trivial and amounts to finding a maximum of @xmath85 + m \\ln \\frac{1 + m^3}{2 } .\\ ] ] for as long as @xmath86 is a global maximum of this expression , the annealed entropies of the ferromagnetic and random models are equal .",
    "it ceases to be so at @xmath87 , which serves as a lower bound on satisfiability transition .",
    "it is worthwhile to compute the annealed entropy on the core .",
    "that task has been accomplished in @xcite .",
    "we rederive the results using a different method which can be readily generalized to other problems .",
    "the annealed entropy is simply the difference between @xmath88 and @xmath89 , where @xmath90 is the number of possible disorders , and @xmath91 counts the total number of disorder configurations and variable assignments compatible with the disorder . for simplicity ,",
    "we decide to distinguish between disorders that differ only by permutation of clauses and permutation of variables within clauses .",
    "any double counting in @xmath90 due to this convention will be exactly canceled by identical factor in @xmath91 .",
    "the advantages are especially evident for the case of the original random graph .",
    "we can immediately obtain @xmath92 .",
    "the expression is more complex when restricted so that the degrees of all variables are at least @xmath27 .",
    "we now investigate it closely .",
    "we introduce a set @xmath93 where @xmath94 is a vector with @xmath2 components @xmath95 that count the number of clauses in which some variable appears in @xmath43-th position .",
    "the quantity @xmath96 is the fraction of variables described by vector @xmath94 .",
    "one trivial constraint is that @xmath97 .",
    "one can represent disorders as an @xmath98 table of numbers from @xmath4 to @xmath30 .",
    "we can divide the variables into various classes according to the value of @xmath94 .",
    "the number of all possible permutations is the product of two factors .    1",
    ".   @xmath99 for the number of ways to arrange the variables into the various classes .",
    "2 .   @xmath100 $ ] for the number of ways to rearrange the variables in the @xmath98 table .    in general",
    "we ought to perform a sum over all possible values of @xmath101 . however , the sum is dominated by particular values of @xmath101 that maximize the entropy ( @xmath102 ) @xmath103 & = & - n ' \\sum_{\\boldsymbol{k } } c_{\\boldsymbol{k } } \\ln     c_{\\boldsymbol{k } } + k ( m ' \\ln m ' - m ' ) - n ' \\sum_{\\boldsymbol{k } }     c_{\\boldsymbol{k } }   \\big ( \\sum_p \\ln k_p !",
    "\\big ) \\nonumber \\\\     & = & s_j^ { ( 1 ) } [ c_{\\boldsymbol{k } } ] + k ( m ' \\ln m ' - m ' ) .\\end{aligned}\\ ] ] note that we have @xmath2 constraints on @xmath96 @xmath104 and that we require @xmath105 if @xmath106 .",
    "maximizing @xmath107 $ ] is easiest if we work with its dual transform .",
    "let @xmath108 be dual variables associated with constraints ( [ eq : kxor - constr ] ) . instead of finding @xmath109 = \\max_{c_{\\boldsymbol{k } } }",
    "\\bigg\\ { s_j^ { ( 0 ) } [     c_{\\boldsymbol{k } } ] \\ , \\bigg| \\ ,",
    "\\sum_{\\boldsymbol{k } } k_p c_{\\boldsymbol{k } } = m ' / n '     \\bigg\\}\\ ] ] we compute @xmath110 = \\min_{m'_p } \\bigg\\ { - \\sum_p m_p ' \\ln     \\mu_p - s_j^{(1 ) } [ n ' , \\ { m_p ' \\ } ] \\bigg\\},\\ ] ] where @xmath111 $ ] denotes @xmath112 $ ] maximized under the constraints @xmath113 .",
    "after simplifications @xmath110 = \\min_{\\ { c_{\\boldsymbol{k } } \\ } } \\bigg\\ {     - n ' \\sum_{\\boldsymbol{k } } c_{\\boldsymbol{k } } \\sum_p k_p \\ln \\mu_p + n '     \\sum_{\\boldsymbol{k } } c_{\\boldsymbol{k } } \\ln \\big [ c_{\\boldsymbol{k } } \\prod_p     k_p !",
    "\\big ] \\bigg\\}\\ ] ] optimizing this with respect to @xmath96 under the constraint @xmath97 and @xmath105 for @xmath114 yields @xmath115 = - n ' \\ln g \\big ( \\sum_p \\mu_p     \\big),\\ ] ] where @xmath116 is the generating function of the ensemble . reverting to original variables",
    "is easy . via the dual",
    "transform we obtain @xmath109 = \\min_{\\ { \\mu_p \\ } } \\bigg\\ { - m '   \\sum_p \\ln \\mu_p     + \\tilde{s}_j^ { ( 1 ) } [ \\ { \\mu_p \\ } ] \\bigg\\},\\ ] ] and for @xmath117 we obtain @xmath118 = \\min_{\\ { \\mu_p \\ } } \\bigg\\ { m ' \\sum_p \\ln \\frac{m'}{\\mu_p }     + n ' \\ln g \\big ( \\sum_p \\mu_p \\big ) \\bigg\\ } - km ' .\\ ] ] clearly , the minimum is permutation - symmetric : @xmath119 .",
    "equivalently , @xmath118 = \\min_{\\mu } \\left\\ { km ' \\ln \\frac{km'}{\\mu } + n ' \\ln g (     \\mu ) \\right\\ } - km ' .\\ ] ] comparison with ( [ eq : kxor - q ] ) , ( [ eq : kxor - m ] ) gives @xmath120 .",
    "note that substituting @xmath121 ( meaning no constraints on degrees of variables ) gives @xmath122 and @xmath123 = km ' \\ln n'$ ] as expected .",
    "we now turn to computing the logarithm of @xmath91 .",
    "binary variables can take values of @xmath15 and @xmath4 .",
    "since these can be mapped onto @xmath124 and @xmath125 , with exclusive - or replaced by a product , from now on we shall succinctly refer to values taken by variables as @xmath126 and @xmath127 . for each realization of disorder and variable assignment ,",
    "we ascribe a type @xmath128 to each clause according to the values of the variables inside that clause ; @xmath128 is a vector with @xmath2 elements with @xmath129 . for the time being we fix the number of clauses of each type @xmath130 ( remember that @xmath131 unless @xmath132 for the ferromagnetic model ) .",
    "in addition to its value @xmath133 , we ascribe to each variable a vector @xmath94 of @xmath134 elements ; @xmath135 denotes the number of clauses of type @xmath128 in which that variable appears in @xmath43-th position . having fixed @xmath130 and @xmath136 we discover that the contribution to @xmath91 is given by the product of @xmath16 factors :    1 .",
    "@xmath137 for the number of ways to arrange the variables into classes . 2 .",
    "@xmath138 $ ] for the number of ways to rearrange the variables within the clauses .",
    "@xmath139 for the number of ways to assign types to clauses .",
    "the associated entropy @xmath140 = - n ' \\sum_{s,\\boldsymbol{k } }     c_{s,\\boldsymbol{k } } \\ln \\big [ c_{s,\\boldsymbol{k } }     \\prod_{p,\\boldsymbol{\\sigma } } k_{\\boldsymbol{\\sigma}}^p !",
    "\\big ] + k     \\sum_{\\boldsymbol{\\sigma } } \\left ( m_{\\boldsymbol{\\sigma } } ' \\ln     m_{\\boldsymbol{\\sigma } } ' - m_{\\boldsymbol{\\sigma } } ' \\right ) + m ' \\ln m ' -     \\sum_{\\boldsymbol{\\sigma } } m_{\\boldsymbol{\\sigma } } ' \\ln m_{\\boldsymbol{\\sigma}}'\\ ] ] is to be maximized under the constraints @xmath141 and the requirement that @xmath142 unless @xmath143 .",
    "another important constraint is that unless @xmath144 , we require @xmath145 .",
    "the optimization of the first part of the entropy is best accomplished through the use of the dual transformation .",
    "the dual parameters are @xmath146 : @xmath147 & = & \\min_{\\ {     m_{\\boldsymbol{\\sigma}}^p \\ } } \\bigg\\ { - \\sum_{p,\\boldsymbol{\\sigma } }     m_{\\boldsymbol{\\sigma}}^p \\ln \\mu_{\\boldsymbol{\\sigma}}^p \\nonumber \\\\     & & - \\max_{\\ {     c_{s,\\boldsymbol{k } } \\ } } \\big\\ { - n ' \\sum_{s,\\boldsymbol{k } }     c_{s,\\boldsymbol{k } } \\ln \\big [ c_{s,\\boldsymbol{k } }     \\prod_{p,\\boldsymbol{\\sigma } } k_{\\boldsymbol{\\sigma}}^p",
    "! \\big ] \\big|     \\sum_{\\boldsymbol{k } } k_{\\boldsymbol{\\sigma}}^p c_{s,\\boldsymbol{k } } =     m_{\\boldsymbol{\\sigma}}^p \\big\\ } \\bigg\\ } .\\end{aligned}\\ ] ] after simplifications we can rewrite @xmath148 = n ' \\ln     \\bigg [ g \\big ( \\sum_{p,\\boldsymbol{\\sigma } } \\frac{1 + \\sigma_p}{2 }     \\mu_{\\boldsymbol{\\sigma}}^p \\big ) + g \\big ( \\sum_{p,\\boldsymbol{\\sigma } }     \\frac{1 - \\sigma_p}{2 } \\mu_{\\boldsymbol{\\sigma}}^p \\big ) \\bigg ] .\\ ] ] the argument of the first @xmath149 is a sum restricted to @xmath150 , and the argument of the second @xmath149 is a sum restricted @xmath151 .",
    "it is convenient to introduce @xmath152 reverting the dual transformation we can obtain @xmath153 & = & \\min_{\\ {    \\mu_{\\boldsymbol{\\sigma}}^p \\ } } \\bigg\\ { \\sum_{p,\\boldsymbol{\\sigma } }    m_{\\boldsymbol{\\sigma } } ' \\ln    \\frac{m_{\\boldsymbol{\\sigma}}'}{\\mu_{\\boldsymbol{\\sigma}}^p } + n ' \\ln \\bigg [ g    \\big ( \\sum_{p,\\boldsymbol{\\sigma } } \\frac{1 + \\sigma_p}{2 }    \\mu_{\\boldsymbol{\\sigma}}^p \\big ) + g \\big ( \\sum_{p,\\boldsymbol{\\sigma } }    \\frac{1 - \\sigma_p}{2 } \\mu_{\\boldsymbol{\\sigma}}^p \\big ) \\bigg ] \\bigg\\ } \\nonumber \\\\    &   & -km ' + m ' \\ln m ' - \\sum_{\\boldsymbol{\\sigma } } m_{\\boldsymbol{\\sigma } } ' \\ln    m_{\\boldsymbol{\\sigma } } ' .\\end{aligned}\\ ] ] it is convenient to define @xmath154 the expression for the entropy can be simplified to @xmath155 & = & \\min_{\\mu_{\\pm } } \\left\\ {     \\mathcal{m}_+ \\ln \\frac{\\mathcal{m}_+}{\\mu_+ } + \\mathcal{m}_- \\ln     \\frac{\\mathcal{m}_-}{\\mu_- } + \\ln [ g ( \\mu_+ ) + g ( \\mu_- ) ] \\right\\ } -     km ' \\nonumber \\\\     & & + m ' \\ln m ' - \\sum_{\\boldsymbol{\\sigma } } m_{\\boldsymbol{\\sigma } } ' \\ln     m_{\\boldsymbol{\\sigma } } ' .\\end{aligned}\\ ] ] the expression for the annealed entropy @xmath156 thus reads @xmath157 & = & \\min_{\\mu_{\\pm } }    \\left\\ { \\mathcal{m}_+ \\ln \\frac{\\mathcal{m}_+}{\\mu_+ } + \\mathcal{m}_- \\ln    \\frac{\\mathcal{m}_-}{\\mu_- } + \\ln [ g ( \\mu_+ ) + g ( \\mu_- ) ] \\right\\ } \\nonumber \\\\    & & -\\min_{\\mu } \\left\\ { km ' \\ln \\frac{km'}{\\mu } + \\ln g ( \\mu ) \\right\\ } + m ' \\ln    m ' - \\sum_{\\boldsymbol{\\sigma } } m_{\\boldsymbol{\\sigma } } ' \\ln    m_{\\boldsymbol{\\sigma}}'.\\end{aligned}\\ ] ] this expression has to be maximized with respect to @xmath130 . as a first step , we would like to maximize the third term @xmath158 keeping @xmath31 and @xmath159 fixed .",
    "its dual is @xmath160 let @xmath161 determine whether the clause of type @xmath128 is permitted ( @xmath162 ) or not ( @xmath163 )",
    ". for the ferromagnetic model @xmath164 . for @xmath165 we obtain @xmath166 and the original @xmath167 is given by @xmath168 = \\min_h \\big\\ { - h     ( \\mathcal{m}_+ -\\mathcal{m}_- ) + m ' \\ln \\sum_{\\boldsymbol{\\sigma } }     \\epsilon_{\\boldsymbol{\\sigma } } \\mathrm{e}^{\\left ( \\sum_p \\sigma_p     \\right ) h } \\big\\}.\\ ] ] it is convenient to parameterize @xmath169 and @xmath170 by a single parameter ( @xmath171 is a second constraint ) .",
    "we can arbitrarily choose @xmath172 as such a parameter @xmath173 for the case of the ferromagnetic model this becomes @xmath174 subsequently , we compute @xmath175 as a function of @xmath172 and maximize the expression with respect to @xmath172 .",
    "for our special case we obtain that @xmath176 gives the maximum to the expression as long as @xmath177 . for @xmath178",
    ", @xmath175 takes a particularly simple form @xmath179 .",
    "note that this is precisely the annealed entropy for @xmath2-xor - sat .",
    "therefore , the annealing approximation is correct up to @xmath78 , and the corresponding connectivity of the original graph @xmath180 is both an upper and a lower bound , i.e. the exact answer .",
    "an instance of @xmath2-sat is a set of @xmath1 clauses , each clause consisting of @xmath2 literals , where the literal is either one of @xmath0 variables @xmath181 or its negation @xmath182 , each with probability @xmath12 .",
    "the clause is satisfied if at least one of the literals is @xmath4 . using boolean logic clause",
    "can be written as an `` or '' of literals , e.g. @xmath183 .",
    "a formula is satisfied if all of its clauses are satisfied . for randomly generated formulae , a satisfiability transition as a function of @xmath184 occurs for some critical ratio @xmath17 .",
    "the exact location of this phase transition is a major open problem .",
    "a trivial upper bound is given by the annealing approximation .",
    "notice that the probability that a random clause is satisfied is independent of variable assignment and equals @xmath185 .",
    "correspondingly the annealed entropy @xmath186 = n \\ln 2 + m \\ln \\left ( 1 - 2^{- k } \\right ) .\\ ] ] the annealing bound ( where the annealed entropy is @xmath15 ) is hence @xmath187 . for @xmath188",
    "this gives an upper bound of @xmath1891 , whereas numerical evidence places the transition at @xmath190 .      here",
    "the structure of disorder is more complex compared with the ferromagnetic model since variables can appear both positively ( @xmath191 ) and negatively ( @xmath192 ) . to identify irrelevant clauses we use",
    "the _ pure literal _ heuristic .",
    "variables that appear only positively or only negatively can be set to @xmath4 or @xmath15 , respectively , to satisfy those clauses .",
    "removing such `` pure '' literals together with clauses in which they appear for as long as possible ( as usual , we also remove variables that appear in no clauses ) yields a much smaller graph  a core ( see fig . [",
    "fig : trim3 ] below ) .",
    "moreover , by the same logic , all cores with the same number of variables @xmath30 and clauses @xmath31 and the condition that all variables appear at least once positively and at least once negatively , are equiprobable .",
    "we now turn to the subproblem of finding the expectation values of @xmath30 and @xmath31 as a function of @xmath5 that characterized the original random formula .",
    "example of the trimming algorithm for 3-sat .",
    "variables are represented graphically as vertices and clauses are represented as triangles .",
    "signs `` + '' and `` - '' in triangles indicate whether the variable appears positively or negatively .",
    "incomplete triangles represent connections to the remainder of the graph ( not shown ) .",
    "lightly shaded clauses are removed by the trimming algorithm.,width=240 ]    as before , we use the notation @xmath76  the probability that a randomly chosen vertex belongs to the core .",
    "the set of variables in the core is denoted as @xmath46 .",
    "we now introduce two different extensions of this set : @xmath48 and @xmath193  the minimal sets with following properties    1 .",
    "@xmath49 and @xmath194 .",
    "if for some clause , @xmath50 variables have a certain property , so should the remaining variable ; the property being that the variable belongs to @xmath193 if it appears positively or belongs to @xmath48 if it appears negatively .",
    "we also reserve the notation @xmath195 and @xmath196 . also observe that @xmath197 .",
    "fix a variable @xmath44 .",
    "it appears in @xmath39 clauses positively ( as @xmath44 ) and in @xmath198 clauses negatively ( as @xmath199 ) .",
    "the numbers @xmath39 , @xmath198 are independent random variables distributed according to a poisson distribution with parameter @xmath200 .",
    "we assume that @xmath52 and @xmath201 for the full formula @xmath45 are not different from @xmath56 and @xmath202 for the formula @xmath55 with variable @xmath44 deleted .",
    "dropping primes we can write self - consistency equations for @xmath52 , @xmath201 : @xmath203 obviously @xmath204 and a simpler equation could be written @xmath205 notice that this is identical to ( [ eq : kxor - q ] ) with the replacement @xmath206 . as a consequence",
    ", the core appears at exactly twice the threshold for @xmath2-xor - sat ( for @xmath16-xor - sat the core appears at @xmath207 , and for @xmath16-sat it appears at @xmath208 .",
    "this threshold was obtained earlier ( by a different method ) in one of the first papers on lower bounds for the satisfiability transition in @xmath16-sat . )    to find @xmath43 , the sums have to be restricted to @xmath209 and @xmath210 thus giving @xmath211 .",
    "hence @xmath212 to find @xmath37 we need to count the average degree of the variable in the core @xmath213 simplified , this becomes @xmath214 .",
    "now that the remaining clauses are correlated , the annealed entropy for @xmath2-sat is not as easily computed as for @xmath2-xor - sat .",
    "the technique parallels one used to find the annealed entropy for the ferromagnetic model .",
    "we need to find the logarithm of the number of disorders @xmath90 and the logarithm of the number of spin - disorder combinations @xmath91 .",
    "in contrast to @xmath2-xor - sat , clauses acquire a type @xmath215  a vector , elements of which determine whether the variable in @xmath43-th position appears inverted or not ( @xmath216 ) .",
    "correspondingly , a vertex degree is now a vector @xmath94 with elements @xmath217 describing the number of appearances of a certain variable in the @xmath43-th position in clauses of type @xmath215 .",
    "we fix the number of variables with given @xmath94 : @xmath101 ( corresponding fractions are @xmath218 ) . the number of disorders for fixed @xmath219 and @xmath220 is composed of the following factors :    1 .",
    "@xmath99 for the number of ways to divide the variables into classes . 2 .",
    "@xmath221 $ ] for the number of ways to rearrange the variables among clauses .",
    "@xmath222 for the number of permutations of clauses of various types .",
    "taking the logarithm , we obtain @xmath223 = - n ' \\sum_{\\boldsymbol{k } } c_{\\boldsymbol{k } }     \\ln \\big [ c_{\\boldsymbol{k } }   \\prod_{p,\\boldsymbol{\\tau } }     k_{\\boldsymbol{\\tau}}^p !",
    "\\big ] + k \\sum_{\\boldsymbol{\\tau } }    \\left (     m_{\\boldsymbol{\\tau } } ' \\ln m_{\\boldsymbol{\\tau } } ' - m_{\\boldsymbol{\\tau } } '     \\right ) + m ' \\ln m ' - \\sum_{\\boldsymbol{\\tau } } m_{\\boldsymbol{\\tau } } ' \\ln     m_{\\boldsymbol{\\tau } } ' .\\ ] ] we must optimize over @xmath224 taking into account the constraint that @xmath105 if either @xmath225 or @xmath226 .",
    "we also have constraints @xmath227 . introducing dual variables and a generating function @xmath228",
    "we can write @xmath229 = \\min_{\\left\\ {     \\mu_{\\boldsymbol{\\tau}}^p \\right\\ } } \\bigg\\ { \\sum_{p,\\boldsymbol{\\tau } }     m_{\\boldsymbol{\\tau } } ' \\ln     \\frac{m_{\\boldsymbol{\\tau}}'}{\\mu_{\\boldsymbol{\\tau}}^p } + n ' \\ln g ( \\mu ,     \\bar{\\mu } ) \\bigg\\ } + m ' \\ln m ' - \\sum_{\\boldsymbol{\\tau } }     m_{\\boldsymbol{\\tau } } ' \\ln m_{\\boldsymbol{\\tau } } ' - km',\\ ] ] where @xmath230 also introducing the quantities @xmath231 we rewrite @xmath232 as @xmath233 = \\min_{\\mu , \\bar{\\mu } } \\left\\ {     \\mathcal{m } \\ln \\frac{\\mathcal{m}}{\\mu } + \\bar{\\mathcal{m } } \\ln     \\frac{\\bar{\\mathcal{m}}}{\\bar{\\mu } } + n ' \\ln g ( \\mu , \\bar{\\mu } ) \\right\\ }     + m ' \\ln m ' - \\sum_{\\boldsymbol{\\tau } } m_{\\boldsymbol{\\tau } } ' \\ln     m_{\\boldsymbol{\\tau } } ' .\\ ] ] for convenience we will write @xmath234 . where @xmath235 .",
    "one can verify that @xmath232 is maximized when @xmath236 and @xmath237 .",
    "now we need to evaluate @xmath91 .",
    "this time the clauses are parameterized by @xmath215  the appearance of literals in a clause as well as @xmath128  the particular assignments of variables .",
    "we fix @xmath238 as well as @xmath219 , with @xmath94 being a vector with @xmath239 elements : @xmath240 is the number of appearances of a variable in clauses of type @xmath241 in the @xmath43-th position . the number @xmath91 can be broken into the following factors    1 .",
    "@xmath242 2 .",
    "@xmath243 $ ] 3 .",
    "@xmath244    enforcing constraints @xmath245 as well as constraints on the vector @xmath94 , i.e. that @xmath246 and that @xmath142 if for some @xmath247 @xmath248 and @xmath249 , we are able to cast the expression for @xmath250 $ ] in a simple form @xmath251 & = &     \\min_{\\mu_{\\pm } , \\bar{\\mu}_{\\pm } } \\big\\ {     \\sum_{p,\\boldsymbol{\\sigma},\\boldsymbol{\\tau } } m_{\\boldsymbol{\\sigma }     \\boldsymbol{\\tau } } ' \\ln \\frac{m_{\\boldsymbol{\\sigma }     \\boldsymbol{\\tau}}'}{\\mu_{\\boldsymbol{\\sigma } \\boldsymbol{\\tau}}^p } + \\ln [ g (     \\mu_+ , \\bar{\\mu}_+ ) + g ( \\mu_- , \\bar{\\mu}_- ) ] \\big\\ } \\nonumber \\\\     & & + m ' \\ln m ' -     \\sum_{\\boldsymbol{\\sigma},\\boldsymbol{\\tau } } m_{\\boldsymbol{\\sigma }     \\boldsymbol{\\tau } } ' \\ln m_{\\boldsymbol{\\sigma } \\boldsymbol{\\tau } } ' - km',\\end{aligned}\\ ] ] where @xmath252 also introducing @xmath253 we can rewrite the first part of @xmath254 as @xmath255 =     \\min_{\\mu_{\\pm } , \\bar{\\mu}_{\\pm } } \\big\\ { & & \\mathcal{m}_+ \\ln     \\frac{\\mathcal{m}_+}{\\mu_+ } + \\mathcal{m}_- \\ln \\frac{\\mathcal{m}_-}{\\mu_- }     + \\bar{\\mathcal{m}}_+ \\ln \\frac{\\bar{\\mathcal{m}}_+}{\\bar{\\mu}_+ } +     \\bar{\\mathcal{m}}_- \\ln \\frac{\\bar{\\mathcal{m}}_-}{\\bar{\\mu}_- } \\nonumber \\\\     & & + n ' \\ln [ g ( \\mu_+ , \\bar{\\mu}_+ ) + g ( \\mu_- , \\bar{\\mu}_- ) ] \\big\\ } \\label{eq : k - ssj1}\\end{aligned}\\ ] ] next , we optimize the expression @xmath256 subject to fixed @xmath169 , @xmath170 , @xmath257 , @xmath258 . introducing dual variables @xmath259 coupled to @xmath260 , @xmath261 and @xmath262 respectively , the optimized expression becomes @xmath263 & & =     \\min_{h , h ' , h '' } \\big\\ { - h ( \\mathcal{m}_+ -\\mathcal{m}_- -     \\bar{\\mathcal{m}}_+ + \\bar{\\mathcal{m}}_- ) - h ' ( \\mathcal{m}_+     -\\mathcal{m}_- + \\bar{\\mathcal{m}}_+ - \\bar{\\mathcal{m}}_- ) \\nonumber \\\\     & & - h ''     ( \\mathcal{m}_+ + \\mathcal{m}_- - \\bar{\\mathcal{m}}_+ -     \\bar{\\mathcal{m}}_- ) - m ' \\ln \\sum_{\\boldsymbol{\\sigma }     \\boldsymbol{\\tau } } \\epsilon_{\\boldsymbol{\\sigma } \\boldsymbol{\\tau } }     \\mathrm{e}^{\\left ( \\sum_p \\sigma_p \\tau_p \\right ) h + \\left ( \\sum_p \\sigma_p     \\right ) h ' + \\left ( \\sum_p \\tau_p \\right ) h '' }    \\big\\ } \\nonumber \\\\     & & \\end{aligned}\\ ] ] where @xmath264 determines whether the clause is permitted . for the case of",
    "@xmath2-sat we only prohibit combinations @xmath265",
    ". we can express @xmath266 in terms of @xmath267 and @xmath268 and substitute into ( [ eq : k - ssj1 ] ) .",
    "consequently , maximization over @xmath269 will be performed .",
    "it can be shown that the maximum necessarily corresponds to @xmath270 leading to further simplifications : @xmath271 and we can show that @xmath272 and @xmath273 .",
    "( as a result @xmath274 and @xmath275 ) . @xmath276     \\big\\},\\end{aligned}\\ ] ] where @xmath277 are the functions of @xmath172 : @xmath278 or , substituting @xmath279 for @xmath2-sat @xmath280 we also verify that the maximum of the complete expression corresponds to @xmath176 . as a result    @xmath281\\end{aligned}\\ ] ]    solving @xmath282 translates into an upper bound for @xmath188 of @xmath283  a rather insignificant improvement over straightforward annealing approximation .",
    "in this model , we have a set of clauses , each clause involving @xmath2 variables that can take values @xmath15 or @xmath4 .",
    "a clause is satisfied if the sum of values of variables is exactly @xmath4 .",
    "a formula is satisfied if all the clauses that constitute it are satisfied .",
    "a related problem was considered in @xcite in the context of the quantum adiabatic algorithm , which served as the main motivation for present analysis . for a randomly generated formula ,",
    "the satisfiability transition occurs for some critical clause - to - variable ratio @xmath5 .",
    "the easiest upper bound is obtained using the straightforward annealing approximation . for the logarithm of the expected number of solutions we obtain @xmath186 = \\max_m \\bigg\\ { - n \\big ( \\frac{1 + m}{2 }     \\ln \\frac{1 + m}{2 } + \\frac{1 - m}{2 } \\ln \\frac{1 - m}{2 } \\big ) + m \\ln     \\big [ 3 \\frac{1 - m}{2 } \\left ( \\frac{1 + m}{2 } \\right)^2 \\big ] \\bigg\\},\\ ] ] where we identified @xmath284 with having all variables assigned a value of @xmath15 , @xmath285 with having all variables set to @xmath4 , and intermediate values of @xmath286 being the appropriate mixture",
    ".    the annealed entropy becomes @xmath15 at the critical threshold @xmath287 .",
    "we now seek to improve upon this simplistic approximation .",
    "the structure of the core for positive @xmath4-in-@xmath2-sat is more complex than what we have seen before . as before variables of degree @xmath15 are eliminated .",
    "similarly variables of degree @xmath4 are removed , although we are no longer justified in removing the clause in which variable appears . instead , the corresponding @xmath2-clause has to be replaced with a @xmath288-clause .",
    "the latter is deemed to be satisfied if the sum of variables in it is either @xmath15 or @xmath4 .",
    "then the remaining variable could always be set to either @xmath15 or @xmath4 so that the sum of all @xmath2 variables is exactly @xmath4 .",
    "similarly , if any variable has degree @xmath4 and appears in a @xmath288-clause , the latter can be converted to a @xmath289-clause and so on .",
    "for all clauses of length less than @xmath2 , the criterion for satisfiability is that the sum of variables be either @xmath15 or @xmath4 .",
    "finally , we identify variables that appear only in @xmath27 clauses . setting any such variable to @xmath15 will satisfy all @xmath27-clauses .",
    "thus , such variables and clauses in which they appear can be eliminated .",
    "this process continues until we are left with a subformula where the degree of each variable is @xmath290 and no variable appears only in @xmath27-clauses ( see fig . [",
    "fig : trim2 ] ) .",
    "example of the trimming algorithm for 1-in-4-sat .",
    "variables are represented graphically as vertices and 4- , 3- and 2-clauses are represented as rhombi , triangles and edges correspondingly .",
    "incomplete polygons represent connections to the remainder of the graph .",
    "the figure depicts evolution of part of the graph under the trimming algorithm.,width=576 ]    for any fixed @xmath30 and a set of @xmath291 ( with @xmath292 )  the number of clauses of length @xmath39  all subformulae that satisfy aforementioned constraints are equally probable .",
    "the values @xmath36 and @xmath293 are self - averaging and their means will be computed shortly .    as before ,",
    "we introduce the following notation .",
    "@xmath46 denotes the set of variables that belong to the core .",
    "in addition to @xmath46 we introduce sets @xmath294 and @xmath48 .",
    "the sets shall have the following properties :    1 .",
    "if @xmath27 variables in some clause belong to @xmath48 , then all variables in that clause belong to @xmath48 .",
    "if @xmath4 variable in some clause belongs to @xmath294 , then all variables in that clause belong to @xmath294 .",
    "we reserve the notation @xmath296 , @xmath297 and @xmath298 . as",
    "before , we single out a single variable @xmath44 and study the probability that the variable belongs to classes @xmath46 , @xmath48 or @xmath294 .",
    "the number of clauses in which the variable appears is poisson with parameter @xmath53 .",
    "the variable @xmath44 is in @xmath48 if for at least one clause in which @xmath44 appears at least two variables among the @xmath50 remaining variables belong to @xmath294 .",
    "@xmath299,\\ ] ] where we have used the fact that the probability that among randomly chosen @xmath300 variables the probability that at least two belong to @xmath294 is @xmath301 .",
    "the variable @xmath44 is in @xmath294 if for at least one clause , at least one variable among the other @xmath288 variables belongs to @xmath48 or at least two variables belong to @xmath294 .",
    "the probability of that is @xmath302 .",
    "the second self - consistency equation is thus @xmath303 .\\ ] ] consider clauses in which the variable @xmath44 appears .",
    "let us call those clauses in which at least two variables appear in @xmath294 type-@xmath4 clauses , and those clauses in which one variable belongs to @xmath48 ",
    "type-@xmath27 clauses .",
    "variable @xmath44 is in @xmath46 if it appears in two or more type-@xmath4 or type-@xmath27 clauses , and at least one type-@xmath4 clause .",
    "therefore , we should have @xmath304 where @xmath305 to find the number of @xmath39-clauses in the core @xmath306 , compute the average @xmath39-degree of variable @xmath44 , i.e. the number of @xmath39-clauses in which it appears .",
    "we readily obtain the following formulae : @xmath307      as before , we compute @xmath90  the number of disorders , subject to fixed @xmath30 and @xmath291 , under the condition that each variable has a degree of at least two , and that no variable appears in @xmath27-clauses exclusively .",
    "introduce a vector of length @xmath50 of vertex degrees @xmath308 , with elements being the number of @xmath39-clauses in which the variable appears .",
    "we prohibit vertices with@xmath309 or @xmath310",
    ". the corresponding generating function @xmath311 it is convenient to write @xmath312 , where @xmath313 .",
    "we proceed to counting the number of disorders with fixed @xmath30 and @xmath314 .",
    "it is convenient to introduce the quantities @xmath315 that count the number of vertices ; indices @xmath316 being the number of appearances in @xmath43-th position in a clause of length @xmath317 . starting from @xmath318 = - n '     \\sum_{\\boldsymbol{k}_2 \\ldots \\boldsymbol{k}_k } c_{\\boldsymbol{k}_2 \\ldots     \\boldsymbol{k}_k } \\ln \\big [ c_{\\boldsymbol{k}_2 \\ldots \\boldsymbol{k}_k }     \\prod_{i , p } k_i^p ! \\big ]",
    "+ \\sum_{k = 2}^k k ( m_k ' \\ln m_k ' - m_k ' ) \\ ] ] and optimizing over @xmath319 subject to constraints on degrees as well as the set of constraints @xmath320 we obtain @xmath321 = \\min_{\\ { \\mu_k \\ } } \\big\\ { \\sum_{k = 2}^k km_k '     \\ln \\frac{km_k'}{\\mu_k } + n ' \\ln g ( \\ { \\mu_k \\ } ) \\big\\ } - \\sum_{k =     2}^k km_k'\\ ] ] using the relation @xmath322 rewrite @xmath323 & = & \\min_{\\mu_2 , \\mu } \\bigg\\ { 2 m_2 ' \\ln \\frac{2     m_2'}{\\mu_2 } + \\big ( \\sum^k_{k = 3 } km_k ' \\big ) \\ln",
    "\\frac{\\sum_{k     = 3}^k km_k ' } { \\mu } + n ' \\ln g_2 ( \\mu_2 , \\mu ) \\bigg\\ } \\nonumber \\\\     & & - \\sum_{k = 2}^k km_k ' .\\end{aligned}\\ ] ] now , compute the total number of disorders and variable assignments compatible with them .",
    "now the clauses of each length have to be subdivided into types @xmath324 through @xmath325 , according to the variable assignments in the corresponding clause .",
    "we arrange variables into classes according to their value @xmath133 and a vector @xmath326 , with @xmath327 being the number of appearances of a variable in a clause of length @xmath317 and type @xmath328 in @xmath43-th position .",
    "the number @xmath91 is given as a product of three factors    1 .",
    "@xmath329 for the number of ways to rearrange the variables into classes 2 .",
    "@xmath330 $ ] for the number of ways to rearrange variables inside the clauses .",
    "3 .   @xmath331 $ ] for the number of ways to rearrange clauses .    for the entropy we obtain @xmath332 & = & - n '     \\sum_{s,\\boldsymbol{k}_2 \\ldots \\boldsymbol{k}_k } c_{s,\\boldsymbol{k}_2 \\ldots     \\boldsymbol{k}_k } \\ln \\big [ c_{s,\\boldsymbol{k}_2 \\ldots \\boldsymbol{k}_k }     \\prod_{i,\\boldsymbol{\\sigma}_{\\boldsymbol{i } } , p } k_{\\boldsymbol{\\sigma}_i}^p !",
    "\\big ] + \\sum_{i,\\boldsymbol{\\sigma}_i } i \\left ( m_{\\boldsymbol{\\sigma}_i } '     \\ln m_{\\boldsymbol{\\sigma}_i } ' - m_{\\boldsymbol{\\sigma}_i } ' \\right ) \\nonumber \\\\     & & + \\sum_i m_i ' \\ln m_i ' - \\sum_{i,\\boldsymbol{\\sigma}_i }     m_{\\boldsymbol{\\sigma}_i } ' \\ln m_{\\boldsymbol{\\sigma}_i } ' .\\end{aligned}\\ ] ] we must note the constraints @xmath333 as well as constraints on variable value ( @xmath334 ) and on the degrees of the variables ( @xmath335 ) . with the aid of the generating function and the dual variables we can write @xmath336 & = & \\min_{\\ { \\mu_{\\boldsymbol{\\sigma}_k}^p \\ } }     \\bigg\\ { \\sum_{k,\\boldsymbol{\\sigma}_k , p } m_{\\boldsymbol{\\sigma}_k } ' \\ln     \\frac{m_{\\boldsymbol{\\sigma}_k}'}{\\mu_{\\boldsymbol{\\sigma}_k}^p } + n ' \\ln     \\left [ g \\left ( \\left\\ { \\mu_{k + } \\right\\ } \\right ) + g \\left ( \\left\\ {     \\mu_{k - } \\right\\ } \\right ) \\right ] \\bigg\\ } \\nonumber \\\\     & & + \\sum_k m_k ' \\ln m_k ' -     \\sum_{k,\\boldsymbol{\\sigma}_k } m_{\\boldsymbol{\\sigma}_k } ' \\ln     m_{\\boldsymbol{\\sigma}_k } ' - \\sum_k km_k',\\end{aligned}\\ ] ] where we have written @xmath337 . also , introducing @xmath338 the first subexpression can be simplified to @xmath339 = \\min_{\\left\\ { \\mu_k^{\\pm } \\right\\ } }     \\bigg\\ { \\sum_k \\big ( \\mathcal{m}_{k + } \\ln \\frac{\\mathcal{m}_{k + } } { \\mu_{k     + } } + \\mathcal{m}_{k - } \\ln \\frac{\\mathcal{m}_{k -}}{\\mu_{k - } } \\big ) + n '     \\ln \\left [ g \\left ( \\left\\ { \\mu_{k + } \\right\\ } \\right ) + g \\left ( \\left\\ {     \\mu_{k - } \\right\\ } \\right ) \\right ] \\bigg\\},\\ ] ] and using @xmath340 can be rewritten as @xmath341 = & & \\min_{\\mu_{2 \\pm } , \\mu_{\\pm } } \\bigg\\ {     \\mathcal{m}_{2 + } \\ln \\frac{\\mathcal{m}_{2 + } } { \\mu_{2 + } } + \\mathcal{m}_{2     + } \\ln \\frac{\\mathcal{m}_{2 -}}{\\mu_{2 - } } + \\big ( \\sum_{k = 3}^k     \\mathcal{m}_{k + } \\big ) \\ln \\frac{\\sum_{k = 3}^k \\mathcal{m}_{k     + } } { \\mu_+ } \\nonumber \\\\     & & + \\big ( \\sum_{k = 3}^k \\mathcal{m}_{k - } \\big ) \\ln     \\frac{\\sum_{k = 3}^k \\mathcal{m}_{k -}}{\\mu_- } + \\ln\\left [ g_2 \\left (     \\mu_{2 + } , \\mu_- \\right ) + g_2 \\left ( \\mu_{2 - } , \\mu_- \\right ) \\right ]     \\bigg\\}\\end{aligned}\\ ] ] in correspondence with the different treatment afforded to @xmath27-clauses and @xmath39-clauses for @xmath342 , we introduce two fields @xmath343 and @xmath344 coupled to @xmath345 and @xmath346 correspondingly .",
    "the dual of second part of @xmath254 is @xmath347 = \\min_{\\left\\ {     m_{\\boldsymbol{\\sigma}_k } ' \\right\\ } } \\bigg\\ { & & - h_2 \\left ( \\mathcal{m}_{2 + }     -\\mathcal{m}_{2 - } \\right ) - h \\sum_{k = 3}^k \\left ( \\mathcal{m}_{k + }     -\\mathcal{m}_{k - } \\right ) \\nonumber \\\\     & & - \\sum_{k = 2}^k \\big ( m_k ' \\ln m_k ' -     \\sum_{\\boldsymbol{\\sigma}_k } m_{\\boldsymbol{\\sigma}_k } ' \\ln     m_{\\boldsymbol{\\sigma}_k } ' \\big ) \\bigg\\ } .\\end{aligned}\\ ] ] note that for @xmath348 only @xmath349 is allowed , while for @xmath350 , @xmath351 and @xmath352 are both allowed .",
    "after proper minimizations we obtain @xmath353 = m_2 ' \\ln \\left ( 2 + \\mathrm{e}^{h_2 }     \\right ) + \\sum_{k = 3}^{k - 1 } m_k ' \\ln \\left ( k \\mathrm{e}^ { ( k - 1 ) h } +     \\mathrm{e}^{kh } \\right ) + m_k ' \\ln \\left ( k \\mathrm{e}^{kh }",
    "\\right ) .\\ ] ] we can express @xmath354 in terms of @xmath355 and @xmath172 via @xmath356,\\\\    \\sum_{k = 3}^k \\mathcal{m}_{k \\pm } & = & \\sum_{k = 3}^k km_k ' \\pm    \\frac{1}{2 }   \\frac{\\partial}{\\partial h }   \\tilde{s}_{s , j}^ { ( 2 ) } [ h_2 , h    ] .\\end{aligned}\\ ] ] the entire expression for the annealed entropy is then written as @xmath357 & = & \\min_{\\mu_{2 \\pm } , \\mu_{\\pm } }     \\bigg\\ { \\mathcal{m}_{2 + } \\ln \\frac{\\mathcal{m}_{2 + } } { \\mu_{2 + } }     + \\mathcal{m}_{2 + } \\ln \\frac{\\mathcal{m}_{2 -}}{\\mu_{2 - } } + \\big ( \\sum_{k     = 3}^k \\mathcal{m}_{k + } \\big ) \\ln \\frac{\\sum_{k = 3}^k \\mathcal{m}_{k     + } } { \\mu_+ } \\nonumber \\\\     & & + \\big ( \\sum_{k = 3}^k \\mathcal{m}_{k - } \\big ) \\ln     \\frac{\\sum_{k = 3}^k \\mathcal{m}_{k -}}{\\mu_- } + \\ln \\left [ g_2 \\left (     \\mu_{2 + } , \\mu_- \\right ) + g_2 \\left ( \\mu_{2 - } , \\mu_- \\right ) \\right ]     \\bigg\\ } \\nonumber \\\\     & & - \\min_{\\mu_2 , \\mu } \\bigg\\ { 2 m_2 ' \\ln",
    "\\frac{2 m_2'}{\\mu_2 } +     \\big ( \\sum^k_{k = 3 } km_k ' \\big ) \\ln \\frac{\\sum_{k = 3}^k km_k '     } { \\mu } +",
    "n ' \\ln g_2 ( \\mu_2 , \\mu ) \\bigg\\ } \\nonumber \\\\     & & - h_2 ( \\mathcal{m}_{2 + }     -\\mathcal{m}_{2 - } ) - h \\sum_{k = 3}^k ( \\mathcal{m}_{k + }     -\\mathcal{m}_{k - } ) \\nonumber \\\\     & & + m_2 ' \\ln ( 2 + \\mathrm{e}^{h_2 } ) + \\sum_{k = 3}^{k - 1 }     m_k ' \\ln \\left ( k \\mathrm{e}^ { ( k - 1 ) h } + \\mathrm{e}^{kh } \\right ) + m_k ' \\ln     \\left ( k \\mathrm{e}^{kh } \\right)\\end{aligned}\\ ] ] maximization over @xmath358 and solving @xmath282 gives an upper bound for the satisfiability transition . for @xmath188",
    "we obtain @xmath359 .",
    "this compares favorably to @xmath360 observed in simulations and beats the previous best upper bound of @xmath361 @xcite .",
    "in this section we present experimental results on random positive 1-in-3-sat instances . using the davis - putnam ( dp ) algorithm ( see appendix [ app : a ] ) we study the crossover point and the computation complexity .",
    "we also identify experimentally the position of the phase transition .",
    "the major feature of a phase transition in a satisfiability problem is the presence of a threshold in @xmath362 , below which almost all random problem instances are solvable , and above which almost no random problem instances are .",
    "figure [ fig : crossover ] shows a plot of the proportion of random problem instances that have a satisfying assignment , versus @xmath362 , for various values of @xmath0 .",
    "the proportions are based on running the dp algorithm on 50,000 random problem instances for each value of @xmath0 and @xmath362 .",
    "the expected features are present .",
    "the sharpness of the phase transition increases with @xmath0 , and the point at which the curve crosses the line where the proportion of instances with a satisfying assignment equals @xmath363 decreases with @xmath0 .",
    "experimentally the crossover point is at @xmath364 , slightly lower than the upper bound of @xmath365 computed in section [ sec:1inksat ] . in figure",
    "[ fig : phase_transition ] ( lower curve ) we plot the value of @xmath362 for which 50% of the problem instances were satisfiable as a function of the number of bits .",
    "the curve appears to have an asymptote around @xmath364 .",
    "figure [ fig : dp_complexity_1 ] shows plots of the median complexity of the davis - putnam ( dp ) algorithm ( complexity is defined as the number of calls to the function ` find_model ` displayed in table [ tab : dp ] ) .",
    "the median was taken over 50,000 random problem instances . as expected ,",
    "because the dp algorithm is complete , its performance scales exponentially with problem size , @xmath0 .",
    "note also that the value of @xmath362 for which the maximum complexity occurs is above @xmath13 , and slowly reduces as @xmath0 increases . in figure",
    "[ fig : phase_transition ] ( upper curve ) we plot the position of the maximum complexity and its uncertainty .",
    "we note that for the range of values of @xmath0 considered , it does not appear to have converged to an asymptote , but the curve does not appear to contradict our earlier result of @xmath364 .",
    "fitting an exponential law to the peak complexity gives @xmath366 , a very slow rate of increase  an order of magnitude slower than reported results on the complexity of dp applied to 3-sat @xcite .",
    "in this paper we have proposed a new method for analyzing subgraphs ( subformulae ) of the random graph ( formula ) subject to simple geometric constraints . for every constraint satisfaction problem",
    "one can identify a core  a subformula that is satisfiable if and only if the original formula was satisfiable .",
    "in fact simplifying the original formula is typically a first step before applying general - purpose algorithms such as the davis - putnam routine or simulated annealing , and the best algorithms use it .",
    "this may become an essential tool for the analysis of `` smart '' algorithms that perform transformations on the instance of the problem or even on intermediate steps .",
    "we have also applied the methods used in the present paper for the approximate analysis of the quantum adiabatic algorithm for positive @xmath4-in-@xmath2-sat problem @xcite .",
    "we have also tried to estimate the satisfiability transition from the above for three problems : @xmath2-xor - sat , @xmath2-sat and positive @xmath4-in-@xmath2-sat .",
    "the results for @xmath367 are as follows : @xmath368 for @xmath2-xor - sat ( exact ) , @xmath369 for @xmath2-sat ( vs. @xmath190 experimentally ) and @xmath365 for positive @xmath4-in-@xmath2-sat ( vs. @xmath360 experimentally ) .",
    "the bound for @xmath2-sat was an insignificant improvement over the annealing approximation despite deleting irrelevant clauses that contribute to the entropy .",
    "results for @xmath2-xor - sat and @xmath4-in-@xmath2-sat were quite good .",
    "note that random @xmath4-in-@xmath2-sat ( where variables may appear in clauses either positively or negatively with probability @xmath370 , akin to @xmath2-sat ) is quite simple .",
    "the satisfiability transition coincides with percolation , and algorithms solve the problem very efficiently in the satisfiable phase . a precise way to state",
    "this is that the dynamical transition coincides with the satisfiability transition , shrinking the difficult region .",
    "this is not the case for positive @xmath4-in-@xmath2-sat that we consider , where most likely @xmath371 .    that the annealing approximation for the simplified formula fails to predict the correct transition suggests that a large number of solutions remains up to the satisfiability threshold . in all likelihood",
    "these individual solutions are well - separated , which may explain the poor performance of algorithms .",
    "we conjecture that random instances of positive @xmath4-in-@xmath2-sat are significantly simpler to solve than those of @xmath2-sat .",
    "this view is partly supported by simulations .",
    "also observe that the answer for @xmath2-xor - sat  a polynomial problem  is exact .",
    "this work was supported in part by the national security agency ( nsa ) and advanced research and development activity ( arda ) under army research office ( aro ) contract number arda - qc - p004-j132-y03/lps - fy2003 , we also want to acknowledge the partial support of nasa cict / is program .",
    "the davis - putnam ( dp ) algorithm @xcite , or a variation , is regarded as the most efficient _ complete _ algorithm for satisfiability problems .",
    "an outline of the dp algorithm is given in table [ tab : dp ] @xcite .",
    "the version we used varies from this outline in one major respect .",
    "we perform a sort of the variables before the first call to ` find_model ` , sorting on the number of clauses which use the variable .",
    "this was found to produce , on average , a very large speed - up in the algorithm s execution .",
    "the ` unit_propagate `",
    "step of the algorithm is also extremely efficient for the @xmath4-in-@xmath2-sat problem .",
    "once one variable in a clause is set to @xmath4 , the value of the other two variables is fixed , and extensive propagation often occurs . also ,",
    "because a single variable in a clause being set to @xmath4 determines the other two variables in the clause , we call ` find_model ( theory and x ) ` first .    ....",
    "find_model ( theory )    unit_propagate ( theory ) ;    if contradiction discovered return(false ) ;    else if all variables are valued return(true ) ;    else {      x = some unvalued variable ;      return ( find_model ( theory and x ) or              find_model ( theory and not x ) ) ;    } ....    99 p. cheeseman , b. kanefsky and w.m .",
    "taylor , proc . of the international joint conference on artificial intelligence ,",
    "* 1 * , pp .",
    "331 - 337 ( 1991 ) .",
    "crawford , j.m . and",
    "auton , l.d . : experimental results on the crossover point in satisfiability problems .",
    "eleventh national conference on artificial intelligence ( 1993 ) r. monasson , r. zecchina , s. kirkpatrick , b. selman , l. troyansky `` determining computational complexity from characteristic phase transitions'' , nature * 400 * , pp .",
    "133 - 137 ( 1999 ) y.t .",
    "anderson , `` application of statistical mechanics to np - complete problems in combinatorial optimization '' , j. phys .",
    "a. * 19 * , pp .",
    "1605 - 1620 ( 1985 ) .",
    "karp , in r.e .",
    "miller and j.w .",
    "thatcher , eds . _ complexity of computer computations _ , plenum press , new york , 1972 , pp .",
    "shor , `` algorithms for quantum computation : discrete logarithms and factoring '' , proc .",
    "35th symp . on fondations of computer science , ( s. goldwasser , ed . ) pp .",
    "124 - 134 ( 1994 ) e. farhi , j. goldstone , s. gutmann , j. lapan , a. lundgren , and d. preda , `` a quantum adiabatic evolution algorithm applied to random instances of an np - complete problem '' , science * 292 * , pp .",
    "472 - 475 ( 2001 ) w. van dam , m. mosca , u. vazirani , `` how powerful is adiabatic quantum computation ? '' , proc .",
    "symp . on foundations of computer science , pp .",
    "279 - 287 ( 2001 ) .",
    "t. hogg , `` adiabatic quantum computing for random satisfiability problems '' , phys .",
    "a * 67 * , 022314 ( 2003 ) .",
    "m. mzard , g. parisi , and r. zecchina , `` analytic and algorithmic solution of random satisfiability problems '' , science * 297 * , pp .",
    "812 - 815 ( 2002 ) .",
    "d. achlioptas , `` lower bounds for random 3-sat via differential equations '' , theoretical computer science * 265 * , pp .",
    "159 - 185 ( 2001 ) .",
    "o. dubois ,  upper bounds on the satisfiability threshold  , theoretical computer science * 265 * , pp .",
    "187 - 197 ( 2001 ) .",
    "m. mezard , f. ricci - tersenghi , r. zecchina , `` alternative solutions to diluted p - spin models and xorsat problems '' , j. stat .",
    "* 111 * , 505 ( 2003 ) .",
    "b. pittel , j. spencer , n. wormald , `` sudden emergence of a giant k - core in a random graph '' , j. of combinatorial theory , b * 67 * , pp . 111 - 151 ( 1996 ) .",
    "m. bauer , o. golinelli , `` core percolation in random graphs : a critical phenomena analysis '' , eur .",
    "j. b * 24 * , pp .",
    "339 - 352 ( 2001 ) ; also arxiv : cond - mat/0102011 . m. weigt , `` dynamics of heuristic optimization algorithms on random graphs '' , eur .",
    "j. b * 28 * , 369 ( 2002 ) ; also arxiv : cond - mat/0203281 .",
    "karp , m. sipser , `` maximum matchings in sparse random graphs '' , proc . of the 22nd annual ieee symp . on foundations of computing ,",
    "364 - 375 ( 1981 ) .",
    "a.z.broder , a.m. frieze , e. uptal `` on the satisfiability and maximum satisfiability of random 3-cnf formulas '' , 4th annual acm - siam symp . on discrete algorithms , austin ,",
    "tx , 1993 , acm , new york 1993 , pp .",
    "322 - 330 .",
    "y. boufkhad , v. kalapala , and c. moore , `` the phase transition in positive 1-in-3 sat '' , to be published .",
    "davis , m. and putnam , h. `` a computing procedure for quantification theory '' j. acm , * 7 * , 201 - 215 ( 1960 ) .",
    "v. smelyanskiy , s. knysh , r.d .",
    "morris , `` quantum adiabatic optimization and combinatorial landscapes '' , arxiv : quant - ph/0402199 ."
  ],
  "abstract_text": [
    "<S> using methods and ideas from statistical mechanics and random graph theory , we propose a simple method for obtaining rigorous upper bounds for the satisfiability transition in random boolean expressions composed of @xmath0 variables and @xmath1 clauses with @xmath2 variables per clause . </S>",
    "<S> the method is based on the identification of the core  a subexpression ( subgraph ) that has the same satisfiability properties as the original expression . </S>",
    "<S> we formulate self - consistency equations that determine the macroscopic parameters of the core and compute an improved annealing bound for the satisfiability threshold , @xmath3 . </S>",
    "<S> we illustrate the method for three sample problems : @xmath2-xor - sat , @xmath2-sat and positive @xmath4-in-@xmath2-sat . </S>"
  ]
}
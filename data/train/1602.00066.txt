{
  "article_text": [
    "in an _ infrastructure - based ( or cellular ) _ cognitive radio ( cr ) network , the base station ( bs ) has to broadcast to secondary receivers / users on more than one broadcast channels via a channel hopping ( ch ) process .",
    "the _ broadcast failure problem _ can occur for a ch - based broadcast protocol .",
    "first , the primary users ( pu , or licensed users ) may reclaim the spectrum band where broadcast channels reside , and the secondary receivers have to vacate this channel according to the requirement for protection of pu .",
    "second , there may exist a clock drift between the bs and the secondary receiver , which can lead to broadcast failures due to the non - overlapping of their ch sequences .",
    "note that any fast synchronization scheme requires necessary information exchange that incurs additional control overhead .    in order to address these problems",
    ", we expect the ch - based broadcast protocol to have the following properties .    1 .",
    "_ multiple broadcast channels_. ideally , broadcast deliveries can occur over all available broadcast channels , thus becoming invulnerable to broadcast failures caused by the pu on a single broadcast channel .",
    "_ self - adaptive synchronization without information exchange_. the secondary receivers are supposed to synchronize with the bs autonomously via a self - adaptive synchronization process without any information exchange , in order to minimize both the broadcast latency and control overhead .    in this paper , we present a channel - hopping based multi - channel broadcast protocol , called _ sass _ , where the ch sequences are constructed on basis of a mathematical construct  the _ self - adaptive skolem sequence_. the sass protocol has the following two noteworthy features .    *",
    "the bs can successfully broadcast to secondary receivers over multiple ( or up to the maximum number of ) available channels within a bounded latency , for increasing ( or maximizing ) the broadcast channel diversity . *",
    "the broadcast latency can be minimized to be near - zero given any amount of clock drift , as each secondary receiver can adaptively synchronize its clock with the bs without any information exchange by leveraging the historical information of successful broadcast deliveries .",
    "our analytical and simulation results show that sass incurs small broadcast latency and guarantees a high successful delivery rate under various network conditions .",
    "the rest of this paper is organized as follows .",
    "we introduce the related work on channel hopping broadcast protocols and skolem sequence in section  [ sec : bkg ] .",
    "we provide the system model and formulate the problem in section  [ sec : problem ] . in section  [ sec : protocol ] , we describe the sass broadcast protocol .",
    "we evaluate the performance of our proposed broadcast schemes in section  [ sec : sim ] .",
    "we conclude the paper in section  [ sec : conclude ] .",
    "the purpose of most ch protocols in the literature is to achieve channel rendezvous between a sender and a receiver using jump - stay techniques  @xcite , the array - based quorum systems  @xcite , or modular arithmetics  @xcite .",
    "it has not been largely investigated as yet to devise multi - channel broadcast protocols in the context of an infrastructure - based cr network . in  @xcite ,",
    "a fully - distributed broadcast protocol is proposed to provide very high successful delivery rate while achieving the shortest broadcast delay .",
    "however , most of existing research on channel - hopping based broadcast protocols in cr networks  @xcite did not leverage the availability of information gathered from past successful broadcast deliveries to synchronize clocks independent of information exchange and minimize broadcast latencies . note that existing clock synchronization techniques  @xcite rely on necessary information exchange ( e.g. , exchange of clock time and/or relevant parameters ) after a successful broadcast delivery is established",
    "* multi - channel broadcast via channel hopping*. in a cr network , a broadcast channel may become unavailable at any time due to the primary user s activities .",
    "therefore , the secondary bs ( or broadcast sender ) has to broadcast the content over multiple channels to ensure successful delivery to the secondary receiver , which we call a _ multi - channel broadcast _ process .",
    "every secondary user ( su ) is equipped with a single radio interface , and we use the channel hopping sequence to define the order in which a radio ( or a su ) visits a set of broadcast channels .",
    "suppose there are @xmath0 broadcast channels , labeled as @xmath1 .",
    "we consider a time - slotted communication system , in which a timeslot means the minimum time unit within which a network node accesses a channel .",
    "thus , the ch sequence @xmath2 of radio @xmath3 ( or su @xmath3 ) is represented as a sequence of channel indices : @xmath4 where @xmath2 can be an infinite sequence and @xmath5 $ ] represents the channel index of @xmath2 in the @xmath6-th timeslot .",
    "* clock drift*. suppose the local clock of radio / su @xmath3 is @xmath7 timeslots behind the global clock ; @xmath8 can be a negative integer , and this means that the local clock of radio / su @xmath3 is in fact @xmath9 timeslots ahead of the global clock . from the perspective of the global clock , the ch sequence of radio @xmath3 is a sequence that starts from timeslot @xmath8 : @xmath10 where @xmath11 .",
    "it is likely that the clock drift is not a multiple of a timeslot .",
    "this is also termed that these two nodes timeslots are _ not aligned_. however , we can extend the slot duration to be twice of the original slot duration .",
    "we will easily arrive at the conclusion that as long as two nodes have successful broadcast delivery on a certain channel , the delivery duration is at least an original slot duration .    * successful broadcast delivery*. given two ch sequences @xmath2 and @xmath12 , if there exists @xmath13 such that @xmath14 and @xmath15 , where @xmath16 $ ] , we say that a _",
    "successful broadcast delivery _ occurs between radios @xmath3 and @xmath17 in the @xmath18-th ( global ) timeslot on broadcast channel @xmath19 .",
    "the @xmath18-th timeslot is called a _ delivery slot _ and channel @xmath19 is called a _ delivery channel _ between sus  @xmath3 and @xmath17 .",
    "a _ skolem sequence ( ss ) _  @xcite , @xmath20 of order @xmath21 , is a permutation of the sequence of @xmath22 integers @xmath23 , and it satisfies the _ skolem property _ :    * if @xmath24 , then @xmath25 .",
    "for example , the sequence @xmath26 is a skolem sequence of order @xmath27 . given @xmath28 and @xmath29",
    ", we have @xmath30 , and @xmath31 ; given other combinations of @xmath3 and @xmath17 , the sequence @xmath32 also satisfies the skolem property .",
    "the following lemma holds @xcite .",
    "[ lemma_ss ] a skolem sequence of order @xmath21 exists if and only if @xmath21 is congruent to 0 or 3 modulo 4 .    in @xcite",
    ", skolem proposed a very efficient and general construction method for skolem sequences in his proof of theorem  2 .",
    "* extended skolem sequence*. we define an _ extended skolem sequence ( ess ) _ ,",
    "@xmath33 of order @xmath21 , as a permutation of the sequence of @xmath34 integers : @xmath35 .",
    "the sequence satisfies the skolem property , i.e. , if @xmath36 , then @xmath25 .",
    "for example , the sequence @xmath37 is an extended skolem sequence ( ess ) of order @xmath27 .",
    "it follows immediately from lemma  [ lemma_ss ] that an extended skolem sequence of order @xmath21 exists if @xmath21 is congruent to 0 or 3 modulo 4 .",
    "given a skolem sequence @xmath20 of order @xmath21 , we can construct an extended skolem sequence @xmath33 of the same order by inserting two integers @xmath38 at the beginning of the original ss  i.e .",
    ", by letting @xmath39 when @xmath40 ; and @xmath41 when @xmath42 . in an extended skolem sequence @xmath43 of order @xmath21 , any integer @xmath44 $ ] appears exactly twice in the ess .      in this subsection",
    ", we use ess to generate channel hopping sequences for the base station and secondary receivers .",
    "when the channel number @xmath0 is congruent to 0 or 1 modulo 4 , then @xmath45 is congruent to 0 or 3 , and by lemma [ lemma_ss ] , there exists an ess @xmath46 of order @xmath45 .",
    "for example , when @xmath47 , the ess - based ch sequence is @xmath48    when @xmath49 , we can easily use the _ _ padding technique _ _ is congruent to 0 or 1 modulo 4 .",
    "we only need to discard at most 2 channels . ] to transform it into the case with the channel number @xmath50 congruent to 0 or 1 modulo 4 . according to the padding technique",
    ", we increase the channel number @xmath0 to the minimum integer @xmath50 so that @xmath51 and @xmath50 is congruent to 0 or 1 modulo 4 .",
    "obviously , @xmath52 .",
    "we regard the newly added @xmath53 channels as aliases of the original @xmath0 channels , we add a new channel , say , channel 4 , so that the new channel number amounts to 4 .",
    "channel 4 serves as an alias of channel 1 . ] . with the padding scheme",
    ", we can focus on the case where the channel number @xmath50 is congruent to 0 or 1 modulo 4 .",
    "* let @xmath54 and @xmath55 be two ch sequences of the same length , say , @xmath56 .",
    "we denote the set of delivery channels by @xmath57:\\exists t\\in[0,t-1],u^{t}=v^{t}=h\\}.\\ ] ] * let @xmath58 denote the set of delivery slots between @xmath54 and @xmath55 and @xmath59:u^{t}=v^{t}\\}.\\ ] ] * we define the notion of circular shift to represent the clock drift , i.e. , @xmath60 is a sequence of length @xmath56 and @xmath61 . *",
    "we let @xmath62 denote the concatenation of sequences @xmath63 s .",
    "consider two ess - based ch sequences with different amount of clock drift , @xmath64 and @xmath65 , where @xmath54 is an ess .",
    "their relative clock drift is @xmath66 .",
    "* theorem [ thm : simple ] shows the relationship between the set of broadcast delivery channels @xmath67 and the relative clock drift @xmath68 .",
    "* theorem [ thm : density ] shows the relationship between the set of broadcast delivery slots @xmath69 and the relative clock drift @xmath68 .    according to these two theorems ,",
    "a secondary receiver is able to figure out the exact clock drift between the bs and the receiver itself by simply looking at the historical information  i.e .",
    ", the set of broadcast delivery channels  such that the receiver can synchronize to the bs without exchanging any control messages .",
    "[ thm : simple]suppose that @xmath70 is an ess of order @xmath71 .",
    "1 .   @xmath72 if and only if @xmath73 .",
    "@xmath74 , where @xmath75 , if and only if @xmath76 .",
    "the first clause is obvious .",
    "now it suffices to show that @xmath77 will imply @xmath78 where @xmath75 . if @xmath79 , then @xmath80 s.t .",
    "thus @xmath82 , @xmath83 , i.e. , @xmath84 .",
    "suppose @xmath85 , then @xmath86 s.t .",
    "@xmath87 . by the definition of ess , @xmath88 , @xmath89",
    ". therefore @xmath90 if @xmath91 , then @xmath92 .",
    "thus @xmath93 .",
    "[ thm : density ] suppose that @xmath70 is an ess of order @xmath71 .    1 .",
    "@xmath94 if and only if @xmath73 .",
    "2 .   if @xmath95 , where @xmath75 , then 1 .",
    "@xmath96 if and only if @xmath97 .",
    "2 .   @xmath98 if and only if @xmath99 .",
    "the first clause is obvious .",
    "now suppose @xmath95 ( @xmath75 ) .",
    "it suffices to show that @xmath100 and @xmath101 . by theorem [ thm :",
    "simple ] , @xmath102 and @xmath74 , i.e. , the delivery channel @xmath103 and @xmath86 s.t .",
    "@xmath104 . there are only two @xmath19 s in @xmath64 and @xmath65 , respectively . without loss of generality ,",
    "the remaining @xmath19 in @xmath64 is @xmath105\\bmod{2n'}}$ ] and that in @xmath65 is @xmath106\\bmod{2n'}}$ ] .",
    "if @xmath107 , we have @xmath108 . since @xmath109 , we conclude that @xmath99 . therefore if @xmath110 , @xmath111 and @xmath96 ; if @xmath99 , then @xmath107 and @xmath98 .",
    "the broadcast ch sequence for the bs ( sender ) is @xmath112 , where @xmath113 is a prespecified ess of order @xmath71 and thus with a length of @xmath114 .",
    "every secondary receiver has an initial ch sequence .",
    "then , the ch sequence is dynamically updated by the receiver based on the historical information of whether successful broadcast delivery occurs in the past timeslots .",
    "specifically , it calibrates the clock in a self - adaptive manner by leveraging the mathematical properties of ess , so as to synchronize to the bs ( sender ) for minimizing the broadcast latency .    *",
    "phase  1 : ess - based ch sequence generation*. a secondary receiver initially uses the ch sequence @xmath115 until the first successful broadcast delivery occurs .",
    "meanwhile , it counts / maintains the number of successful broadcast deliveries since its local clock s timeslot @xmath116 , where @xmath6 is the current timeslot according to its local clock .",
    "the secondary receiver will not wait long for the first successful broadcast delivery to occur .",
    "if the pu signal is not present in all channels , the first successful broadcast delivery will occur within @xmath117 timeslots after both the secondary sender and receiver start channel hopping , as shown by theorem  [ thm : firstbdst ] .",
    "[ thm : firstbdst ] under sass , the first successful broadcast delivery occurs within @xmath117 timeslots after both the secondary sender and receiver start channel hopping .",
    "suppose the sender uses the ess @xmath54 of length @xmath114 , and the receiver uses @xmath54 , @xmath118 , @xmath119 , @xmath120 , @xmath121 , sequentially .",
    "since the receiver exhausts all possible cyclic rotations of @xmath54 , the first successful broadcast delivery will occur within @xmath122 slots .    then , we can further improve this upper bound to @xmath117 .",
    "now we establish our argument for the case @xmath123 as an example . for a general @xmath50",
    ", we can have a similar argument .",
    "suppose @xmath123 . from the perspective of the sender s clock ,",
    "the receiver uses @xmath124 , @xmath125 , @xmath126 , @xmath127 , where @xmath128 is the clock drift between the sender and the receiver .",
    "now we consider the consecutive @xmath129 slots .",
    ".the cases of broadcast channels if the sender uses @xmath54 and the receiver uses @xmath124 with a clock drift of @xmath128 slots , where @xmath128 varies from 0 to @xmath130 , given @xmath123 .",
    "the `` all '' here means that if the sender and receiver are synchronized , they can have broadcast delivery on all channels .",
    "the `` 0 '' here means that if the clock drift between the sender and receiver is 1 , they can have broadcast delivery on channel 0 , and similarly for `` 1 '' , `` 2 '' and `` 3 '' hereinafter .",
    "[ tab : sdrrvr ] [ cols=\"^,^,^,^\",options=\"header \" , ]     table  [ tab : sdrrvr ] shows the cases of broadcast channels for all possible clock drifts . if the sender and the receiver are synchronized , the receiver starts from the second row ( i.e. , it starts from @xmath131 ) , and then uses @xmath118 , @xmath119 , @xmath120 , @xmath132 , and then back to @xmath131 and so on . if they have a clock drift of @xmath128 slots , the receiver uses @xmath124 , @xmath125 , @xmath126 , @xmath127 , then back to @xmath124 and so on . if @xmath133 , broadcast delivery occurs on all channels , which is the best case .",
    "the worst case is when the receiver starts from @xmath118 . in this case , when it arrives at @xmath134 , successful broadcast delivery must have occurred because from @xmath118 to @xmath134 , they have tried all possible channels 0 , 1 , 2 , and 3 .",
    "thus first successful delivery will occur within @xmath135 slots . for a general @xmath50 ,",
    "the upper bound is @xmath136 .",
    "* phase  2 : self - adaptive clock calibration*. upon the first successful broadcast delivery , the secondary receiver enters the clock calibration phase : it knows the exact clock drift between the sender ( bs ) and itself , and then adaptively synchronize to the sender .    according to the local clock of the secondary receiver , we group every @xmath114 timeslots into a ( time ) frame , e.g. timeslots 0 to @xmath137 of the receiver form the first frame .",
    "suppose su  @xmath3 is the sender , su  @xmath17 is the receiver , and that the first broadcast delivery occurs in channel @xmath138 $ ] in timeslot @xmath139 that lies in the @xmath140-th frame according to su  @xmath17 s clock .",
    "by the definition of ess , there exists another timeslot @xmath141 that lies in the @xmath140-th frame and contains channel @xmath142 .",
    "let @xmath143 $ ] denote the segment of su @xmath17 s ch sequence in the @xmath140-th frame according to su @xmath17 s local clock , and we have @xmath143=\\rt(\\mu,\\phi-1)$ ] .    in the calibration phase",
    ", the receiver ( i.e. su @xmath17 ) continues using its original ch sequence @xmath144 until the end of its @xmath140-th frame ; and in the meanwhile , su @xmath17 continues counting the number of successful broadcast deliveries since its local clock s timeslot @xmath145 , where @xmath6 is the current timeslot according to its local clock .    when the @xmath140-th frame ends , the receiver checks if successful broadcast delivery occurs in timeslot @xmath146 and obtains the total number of successful broadcast deliveries in the @xmath140-frame , which is denoted by @xmath147 $ ] .",
    "the secondary receiver chooses different ch sequences in the following cases .",
    "_ case  1 _ : successful broadcast delivery occurs in timeslot @xmath146 and @xmath148 . in this case",
    ", the receiver knows that the segment of su @xmath3 s ch sequence in the @xmath140-th frame according to su @xmath17 s clock , denoted by @xmath149 $ ] , is exactly @xmath143=\\rt(\\mu,\\phi-1)$ ] . from the next frame ( the @xmath150-th frame ) on , the receiver uses @xmath151 as its new ch sequence .",
    "[ fig : case1 ] shows an example of case  1 with @xmath123 .",
    "the pu occupies channels 0 and 3 .",
    "the first successful delivery occurs on channel 1 ( thus @xmath152 ) and in the 4th slot of the @xmath140-th frame .",
    "slot  @xmath146 is the 6th slot of frame @xmath140 and successful delivery occurs in slot @xmath146 .",
    "thus the receiver ( su @xmath17 ) knows that it has been synchronized with the sender ( su @xmath3 ) .",
    "so it continues using @xmath153 as its ch sequence .",
    "_ case  2 _ : @xmath154 .",
    "this implies that successful broadcast delivery occurs in timeslot @xmath146 ; and that @xmath149 $ ] is either @xmath143 $ ] or @xmath155,n')$ ] .",
    "* in the next frame ( the @xmath150-th frame ) , the receiver uses @xmath155,n')$ ] as its ch sequence and counts the number of successful broadcast deliveries in the @xmath150-th frame , denoted by @xmath156 $ ] . * from the @xmath157-th frame on , the receiver knows the exact difference between its clock and the sender s , and it can choose the ch sequence synchronized with the sender .",
    "if @xmath147\\geq sb[\\phi+1]$ ] , it chooses @xmath158=\\prod_{n=0}^{\\infty}\\rt(\\mu,\\phi-1);\\ ] ] otherwise , it uses @xmath159=\\prod_{n=0}^{\\infty}\\rt(\\mu,\\phi-1+n').\\ ] ]    fig .",
    "[ fig : case2 ] shows an example of case  2 with @xmath123 .",
    "the pu occupies channels 1 and 2 .",
    "the first successful delivery occurs on channel 3 ( thus @xmath160 ) and in the 3th slot of the @xmath140-th frame .",
    "slot @xmath146 is the 7th slot of frame @xmath140 and successful delivery occurs in slot @xmath146 .",
    "thus the receiver ( su @xmath17 ) knows that the segment of the sender s ch sequence in frame @xmath140 is either @xmath143=\\{2,1,3,2,0,0,3,1\\}$ ] or @xmath155,4)=\\{0,0,3,1,2,1,3,2\\}$ ] .",
    "so it tries @xmath155,4)=\\{0,0,3,1,2,1,3,2\\}$ ] in frame @xmath150 and finds that @xmath147=2 $ ] , @xmath156=4 $ ] and @xmath147<sb[\\phi+1]$ ] .",
    "therefore it knows that the sender uses @xmath155,4)=\\{0,0,3,1,2,1,3,2\\}$ ] .",
    "so it synchronizes its clock with the sender and uses @xmath161 as its ch sequence from frame  @xmath157 on .",
    "_ case  3 _ : successful broadcast delivery does not occur in timeslot @xmath146 .",
    "this implies that @xmath148 and that either @xmath149=\\rt(u_{j}[\\phi],\\alpha+1)$ ] or @xmath149=\\rt(u_{j}[\\phi],-(\\alpha+1))$ ] .    *",
    "the receiver uses @xmath155,\\alpha+1)$ ] and @xmath155,-(\\alpha+1))$ ] as its ch sequences in the @xmath150-th and @xmath157-th frames ; it counts the numbers of successful broadcast deliveries in these two frames , denoted by @xmath156 $ ] and @xmath162 $ ] , respectively .",
    "* from the @xmath163-th frame on , if @xmath164\\geq sb[\\phi+2],\\ ] ] the receiver chooses @xmath159=\\prod_{n=0}^{\\infty}\\rt(\\mu,\\phi-1+(\\alpha-1));\\ ] ] otherwise , it uses @xmath165=\\prod_{n=0}^{\\infty}\\rt(\\mu,\\phi-1-(\\alpha-1)).\\ ] ]    fig .",
    "[ fig : case3 ] shows an example of case  3 with @xmath123 .",
    "the pu occupies channels 2 and 3 .",
    "the first successful delivery occurs on channel 1 ( thus @xmath152 ) and in the 6th slot of the @xmath140-th frame .",
    "slot @xmath146 is the last slot of frame @xmath140 and successful delivery does not occur in slot @xmath146 .",
    "thus the receiver ( su @xmath17 ) knows that the segment of the sender s ch sequence in frame @xmath140 is either @xmath155,2)=\\{0,0,3,1,2,1,3,2\\}$ ] or @xmath155,-2)=\\{2,1,3,2,0,0,3,1\\}$ ] .",
    "so it tries @xmath155,2)=\\{0,0,3,1,2,1,3,2\\}$ ] in frame @xmath150 and tries @xmath155,-2)=\\{2,1,3,2,0,0,3,1\\}$ ] in frame @xmath150 .",
    "it finds that @xmath156=4 $ ] , @xmath162=0 $ ] and @xmath156>sb[\\phi+2]$ ] .",
    "thus it knows that the sender uses @xmath155,2)=\\{0,0,3,1,2,1,3,2\\}$ ] .",
    "so it synchronizes its clock with the sender and uses @xmath155,2)=\\{0,0,3,1,2,1,3,2\\}$ ] as its ch sequence from frame  @xmath163 on .    after completing the clock calibration",
    ", every secondary receiver is synchronized to the bs .",
    "since the bs and secondary receivers use the same ess - based ch sequence , the broadcast latency will be minimized to zero upon the successful clock calibration in phase  2 .",
    "in this section , we compare the performance of the proposed broadcast protocol sass and existing ch based broadcast protocols via simulation results : the random channel hopping broadcast protocol ( rch ) , the canonical skolem sequence based broadcast protocol without self - adaptivity ( css ) and the asynchronous channel hopping protocol ( ach ) @xcite .    in each simulated broadcast pair ( secondary sender / bs and secondary receiver ) , each node can access @xmath0 broadcast channels ( i.e. , the number of broadcast channels available to the broadcast pair is @xmath0 ) . and both of the two nodes generate their ch sequences using the agreed broadcast protocol ( i.e. , either the proposed sass protocol or other existing broadcast protocols ) and perform channel hopping in accordance with the sequences .",
    "* primary user traffic*. we simulated a number of @xmath166 primary transmitters operating on @xmath166 channels independently , and these channels were randomly chosen in each simulation run . in most existing work , it is assumed that a primary user transmitter follows a  busy / idle transmission pattern on a licensed channel @xcite , and we assume the same traffic pattern here  i.e. , the busy period has a fixed length of @xmath167 timeslots , and the idle period follows an exponential distribution with a mean of @xmath32 timeslots .",
    "a channel is considered _ unavailable _ when pu signals are present in it .",
    "the intensity of primary user traffic can be characterized as @xmath168 .",
    "* random clock drift*. in a cr network , the nodes may lose clock synchronization or even link connectivity at any time when they experience the broadcast failure problem due to primary user activities .",
    "hence , the clock of the nodes are not necessarily synchronized . in each simulation",
    "run , each secondary node determines its clock time independently of other nodes .",
    "we define the proportion of successful delivery slots in the first @xmath6 timeslots , @xmath169 , as the percentage of timeslots in the first @xmath6 timeslots in which successful broadcast delivery occurs .",
    "[ fig : pu0 ] , [ fig : pu25 ] , [ fig : pu50 ] and [ fig : pu75 ] illustrate the results given the pu traffic @xmath170 , @xmath171 , @xmath172 and @xmath173 , respectively . in the proposed sass protocol",
    ", the proportion of successful broadcast slots progressively approximates to the theoretical maximum @xmath174the proportion values are @xmath175 , @xmath173 , @xmath172 , and @xmath171 respectively .",
    "however , the performance of other protocols is approximately stable at @xmath176 .      in this set of simulations ,",
    "we simulate @xmath177 pairs of nodes , and investigate the broadcast latencies under the proposed sass and other existing ch based broadcast protocols in the following five scenarios : ( 1 ) the latency until the first successful broadcast delivery occurs ; and the average delivery latency in the first ( 2 ) 50 , ( 3 ) 100 , ( 4 ) 150 , and ( 5 ) 200 timeslots .",
    "the results are showed in fig .",
    "[ fig : latency ] .",
    "we observe that the latency under the sass protocol progressively outperforms the other three protocols as the number of successful broadcast deliveries increases .",
    "its delivery latency drops down to 7 and then 5 and finally decreases below 5 , while the other three protocols latency remains above 15 .",
    "this can be attributed to the fact that the sass protocol can synchronize all of the receivers with the broadcast sender , thus greatly reducing the delivery latency on average .",
    ", width=288 ]",
    "in this paper , we propose a channel hopping based multi - channel broadcast protocol , called sass , where the ch sequences are constructed on basis of the self - adaptive extended skolem sequence .",
    "sass allows the network base station ( broadcast sender ) to broadcast over multiple channels such that the broadcasts can be successfully delivered to secondary receivers .",
    "meanwhile , each secondary receiver can infer the difference between its clock and the clock of the sender , and then adaptively synchronize with the sender to further reduce the broadcast latency .",
    "sass is robust to the broadcast failure caused by primary user activities and the clock drift between two ch sequences .",
    "99 k. bian , and j .-",
    "park , `` maximizing rendezvous diversity in rendezvous protocols for decentralized cognitive radio networks , '' _ ieee transactions on mobile computing _ , vol .",
    "12 , no . 7 , pp . 12941307 , 2013 .",
    "s. huang , x. liu , and z. ding ,  optimal transmission strategies for dynamic spectrum access in cognitive radio networks , _ ieee transactions on mobile computing _ , vol .",
    "16361648 , dec . 2009 ."
  ],
  "abstract_text": [
    "<S> the base station ( bs ) in a multi - channel cognitive radio ( cr ) network has to broadcast to secondary ( or unlicensed ) receivers / users on more than one broadcast channels via channel hopping ( ch ) , because a single broadcast channel can be reclaimed by the primary ( or licensed ) user , leading to _ </S>",
    "<S> broadcast failures_. meanwhile , a secondary receiver needs to synchronize its clock with the bs s clock to avoid broadcast failures caused by the possible clock drift between the ch sequences of the secondary receiver and the bs . in this paper </S>",
    "<S> , we propose a ch - based broadcast protocol called _ sass _ , which enables a bs to successfully broadcast to secondary receivers over multiple broadcast channels via channel hopping . </S>",
    "<S> specifically , the ch sequences are constructed on basis of a mathematical construct  the _ self - adaptive skolem sequence_. moreover , each secondary receiver under sass is able to adaptively synchronize its clock with that of the bs without any information exchanges , regardless of any amount of clock drift . </S>"
  ]
}
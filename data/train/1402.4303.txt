{
  "article_text": [
    "the contribution of this paper is twofold .",
    "firstly , we provide a practical implementation for finding a preference profile for a given condorcet dimension by encoding the problem as a boolean satisfiability ( sat ) problem @xcite , which is then solved by a sat solver .",
    "this technique has proven useful for a range of other problems in social choice theory ( * ? ? ? * ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* see , ) and can easily be adapted .",
    "for instance , only little needs to be altered in order answer similar questions for dominating sets rather than condorcet winning sets .",
    "secondly , we give an answer to an open question by @xcite and provide a minimal example of a preference profile of condorcet dimension @xmath0 , which we computed using our implementation .",
    "this profile involves @xmath2 alternatives and agents only , improving the size of previous examples both in terms of agents and alternatives .",
    "alternatives and agents . ]",
    "the formalization in sat turns out to be efficient enough , not only to discover this particular profile of condorcet dimension @xmath0 , but also to show its minimality .",
    "let  @xmath3 be a set of @xmath4 alternatives and @xmath5 a set of agents .",
    "the preferences of agent  @xmath6 are represented by a linear ( reflexive , complete , transitive , and antisymmetric ) _ preference relation _",
    "the interpretation of @xmath8 , usually denoted by @xmath9 , is that agent  @xmath10 values alternative  @xmath11 at least as much as alternative  @xmath12 .",
    "a _ preference profile _",
    "@xmath13 is an @xmath14-tuple containing a preference relation @xmath15 for each agent @xmath6 .",
    "let @xmath16 be a preference profile . as introduced by @xcite ,",
    "we now define the notion of a condorcet winning set through an underlying covering relation between sets of alternatives and alternatives : a set of alternatives @xmath17 @xmath18-covers an alternative @xmath19 ( short : @xmath20 ) if @xmath21    a set of alternatives @xmath17 is called a _ condorcet winning set _ if for each alternative @xmath22 the set @xmath17 @xmath23-covers @xmath19 .",
    "the set of all condorcet winning sets of @xmath16 will be denoted by @xmath24 .",
    "the _ condorcet dimension _",
    "@xmath25 is defined as the size of the smallest condorcet winning set the profile @xmath16 admits , @xmath26    consider the preference profile @xmath16 depicted in . as @xmath16 does not have a condorcet winner @xmath27 .",
    "it can easily be checked that @xmath28 ( like any other two - element set in this case ) is a condorcet winning set of @xmath16 and , thus , @xmath29 .",
    "@xmath30    in this work , we address the computational problem of finding a preference profile of a given condorcet dimension . to this end",
    ", we define the problem of checking whether for a given number of agents @xmath14 and alternatives @xmath4 there exists a preference profile @xmath16 with @xmath31 .",
    "* name * : check - condorcet - dimension-@xmath32 + * instance * : a pair of natural numbers @xmath14 and @xmath4 .",
    "+ * question * : does there exist a preference profile @xmath16 with @xmath14 agents and @xmath4 alternatives that has condorcet dimension of at least @xmath33 ? +    [ cols=\"<,^,^,^,^,^,^\",options=\"header \" , ]     note that the following simple observation can be used to    [ obs : indalternatives ] if there is a preference profile @xmath16 of condorcet dimension @xmath25 involving @xmath4 alternatives , then there is also one of the same dimension involving @xmath34 alternatives .    let @xmath16 be a preference profile on a set of @xmath4 alternatives @xmath3 with @xmath25 .",
    "we need to construct a preference profile @xmath35 on a set of @xmath34 alternatives @xmath36 with @xmath37 such that @xmath38 . for each @xmath10 , define @xmath39 , add @xmath40 in the last place of agent @xmath10 s preference ordering .",
    "it is then immediately clear that @xmath41 , which establishes @xmath42 . on the other hand ,",
    "if we assume @xmath43 , then there exist a condorcet winning set @xmath44 for @xmath35 of size @xmath45 .",
    "this set , however , must  by the construction of @xmath35also be a condorcet winning set for @xmath16 ; a contradiction .",
    "the number of objects potentially involved in the check - condorcet - dimension-@xmath32problem are given in for @xmath46 .",
    "it is immediately clear that a nave algorithm will not solve the problem in a satisfactory manner .",
    "this section describes our algorithmic efforts to solve this problem for reasonably large instances .      in order to solve the problem check - condorcet - dimension-@xmath32 for arbitrary @xmath47",
    ", we follow a similar approach as @xcite , @xcite , and @xcite : we translate the problem to propositional logic ( on a computer ) and use state - of - the - art sat solvers to find a solution . at a glance ,",
    "the overall solving steps are shown in  .",
    "* input : * positive integers @xmath14 and @xmath4 + * output : * whether there exists a preference profile @xmath16 with @xmath14 agents and @xmath4 alternatives and @xmath48 + file cnffile cnffile + = encoder.neutrality ( ) satisfiable = satsolver.solve(cnffile )    generally speaking , the problem at hand can be understood as the problem of finding a preference profile that satisfies certain conditions  here : having a condorcet dimension of at least @xmath33 ) .",
    "thus , a satisfying instance of the propositional formula to be designed should represent a preference profile . to capture this ,",
    "a formalization based on two types of variables suffices .",
    "the boolean variable @xmath49 represents @xmath50 , agent @xmath10 ranking alternative @xmath11 at least as high as alternative @xmath12 ; and the variable @xmath51 stands for the set @xmath52 covering alternative @xmath19 .    in more detail ,",
    "the following conditions / axioms need to be formalized :    1 .",
    "all @xmath14 agents have linear orders over the @xmath4 alternatives as their preferences ( short : linear preferences ) 2 .   for each set @xmath53 with @xmath54 ,",
    "it is not the case that @xmath52 is a condorcet winning set ( short : no condorcet set )    for the first axiom , we encode reflexivity , completeness , transitivity , and anti - symmetry of the relation @xmath15 for all agents @xmath10 .",
    "the complete translation to cnf ( conjunctive normal form , the established standard input format for sat solvers ) is given exemplarily for the case of transitivity ; the other axioms are converted analogously .    in formal terms transitivity",
    "can be written as @xmath55 which then translates to the pseudo code in for generating the cnf file .",
    "the key in the translation of the inherently higher order axioms to propositional logic is ( as pointed out by @xcite already ) that because of finite domains , all quantifiers can be replaced by finite conjunctions or disjunctions , respectively .    in all algorithms ,",
    "a subroutine r@xmath56 takes care of the compact enumeration of variables .    the axiom `` no condorcet set '' can be formalized in a similar fashion , but requires further subroutines to avoid an exponential blow - up of the size of the formula in cnf . in short , the axiom can be written as @xmath57    it remains as part of this axiom to define a sufficient condition for @xmath58 . in the following ,",
    "we denote the smallest number of agents required for a strict @xmath18-majority by @xmath59 . in formal terms",
    ", we write for each set @xmath53 with @xmath54 and each alternative @xmath22 :    @xmath60    in order to avoid an exponential blow - up when converting this formula to cnf , variable replacement ( a standard procedure also known as tseitin transformation ) is applied . in our case , we replaced @xmath61 by new variables of the form @xmath62 and introduced the following defining clauses : @xmath63 in this case , the helper variables even have an intuitive meaning as @xmath62 enforces that for no alternative @xmath64 it is the case that agent @xmath10 prefers alternative @xmath19 over alternative @xmath65 , agent @xmath10 does not contribute to @xmath52 @xmath18-covering @xmath19 .    note that the conditions like @xmath54 can easily be fulfilled during generation of the corresponding cnf formula on a computer . for enumerating all subsets of alternatives of a given size we , for instance , used gosper s hack @xcite .",
    "the corresponding pseudo code for the `` no condorcet set '' axiom can be found in .    with all axioms formalized in propositional logic , we are now ready to search for preference profiles @xmath16 of condorcet dimension @xmath48 .",
    "before we do so , however , we describe a ( standard ) optimization technique called symmetry breaking , which speeds up the solving process of the sat solver .",
    "observe that from a given example of a preference profile @xmath16 with @xmath48 we can always generate further examples simply by permuting the ( names of the ) alternatives .",
    "one could say that all positive witnesses to the sat - check - condorcet - dimension-@xmath32problem are invariant under permutations of the alternatives .",
    "therefore , we implemented a standard technique in sat solving called symmetry breaking ; here in the form of setting agent 1 s preferences to a fixed preference ordering , for instance to lexicographic preferences .",
    "this trims the search space for the sat solver and therefore reduces the runtime of the solving process .",
    "an encoding can be achieved simply by adding a subformula of the form @xmath66 which sets the first agents preferences to lexicographic ordering .",
    "all computations were run on a intel core i5 , 2.66ghz ( quad - core ) machine with 12 gb ram using the sat solver plingeling @xcite .    when called with the parameters @xmath67 , our implementation of sat - check - condorcet - dimension-@xmath32returns the preference profile @xmath68 within about one second .",
    "@xmath68 is a smallest preference profile of condorcet dimension @xmath0 and is shown in . with @xmath69 not being condorcet winning sets are also returned by sat - check - condorcet - dimension-@xmath70 and can be obtained from the output in . that there is a larger set ( @xmath71 ) which forms a condorcet winning set",
    "can easily be confirmed manually ( or by calling sat - check - condorcet - dimension-@xmath72 ) . ]",
    "furthermore , it turns out that this preference profile is a smallest profile of condorcet dimension @xmath0 .",
    "all strictly smaller profiles ( with less agents and at most as many alternatives , or with less alternatives and at most as many agents ) can be shown to have a condorcet dimension of at most 2 via sat - check - condorcet - dimension-@xmath70 .",
    "@xmath73    an overview of further ( preliminary ) results can be found in .",
    ".... model ( decoding of satisfying assignment ) found : agent 0 : 0 > 1 > 2 > 3 > 4 > 5 agent 1 : 2 > 3 > 5 > 0 > 4 > 1 agent 2 : 5 > 4 > 0 > 1 > 2 > 3 agent 3 : 3 > 5 > 1 > 4 > 0 > 2 agent 4 : 4 > 0 > 3 > 1 > 2 > 5 agent 5 : 1 > 2 > 4 > 3 > 5 > 0 does not have a condorcet winning set of size 2   ( 6 agents and 6 alternatives ) .",
    "witnesses : { 0 , 1 } does not cover alternative(s ) : 5 { 0 , 2 } does not cover alternative(s ) : 4 { 1 , 2 } does not cover alternative(s ) : 0 { 0 , 3 } does not cover alternative(s ) : 4 { 1 , 3 } does not cover alternative(s ) : 0 { 2 , 3 } does not cover alternative(s ) : 0 { 0 , 4 } does not cover alternative(s ) : 5 { 1 , 4 } does not cover alternative(s ) : 5 { 2 , 4 } does not cover alternative(s ) : 1 { 3 , 4 } does not cover alternative(s ) : 2 { 0 , 5 } does not cover alternative(s ) : 3 { 1 , 5 } does not cover alternative(s ) : 3 { 2 , 5 } does not cover alternative(s ) : 1 { 3 , 5 } does not cover alternative(s ) : 2 { 4 , 5 } does not cover alternative(s ) : 3 ....    * 13c @xmath74 & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 + 1 &  &  &  &  &  &  &  &  &  &  &  &  + 2 &  &  &  &  &  &  &  &  &  &  &  &  + 3 &  &  &  &  &  &  &  &  &  &  &  &  + 4 &  &  &  &  &  &  &  &  &  &  &  &  + 5 &  &  &  &  &  &  &  &  &  &  &  &  + 6 &  &  &  &  &  & + &  & &  &  &  & + + 7 &  &  &  &  &  & + &  & &  & + & & + + 8 &  &  &  & &  & + & & & & + & & + + 9 &  &  &  & & & + & & & & + & & + + 10 &  &  &  & & & + & & & & + & & + +",
    "this material is based upon work supported by deutsche forschungsgemeinschaft under grant br  2312/9 - 1 .",
    "the author thanks felix brandt and hans georg seedig for helpful discussions and their support .",
    "a.  biere .",
    "lingeling , plingeling and treengeling entering the sat competition 2013 . in a.",
    "balint , a.  belov , m.  heule , and m.  jrvisalo , editors , _ proceedings of the sat competition 2013 _ , pages 5152 , 2013 .      f.  brandt and c.  geist .",
    "finding strategyproof social choice functions via sat solving . in _ proceedings of the 13th international conference on autonomous agents and multi - agent systems ( aamas)_. ifaamas , 2014 ."
  ],
  "abstract_text": [
    "<S> condorcet winning sets are a set - valued generalization of the well - known concept of a condorcet winner . as supersets of condorcet winning sets </S>",
    "<S> are always condorcet winning sets themselves , an interesting property of preference profiles is the size of the smallest condorcet winning set they admit . </S>",
    "<S> this smallest size is called the condorcet dimension of a preference profile . since little </S>",
    "<S> is known about profiles that have a certain condorcet dimension , we show in this paper how the problem of finding a preference profile that has a given condorcet dimension can be encoded as a satisfiability problem and solved by a sat solver . </S>",
    "<S> initial results include a minimal example of a preference profile of condorcet dimension @xmath0 , improving previously known examples both in terms of the number of agents as well as alternatives . </S>",
    "<S> due to the high complexity of such problems it remains open whether a preference profile of condorcet dimension @xmath1 exists . </S>"
  ]
}
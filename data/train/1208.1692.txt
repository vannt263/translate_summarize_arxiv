{
  "article_text": [
    "there has been extensive research on learning probabilistic networks from data by maximizing some suitable scoring function .",
    "@xcite  ( @xcite ) gave an efficient algorithm for the class of _ branchings _ , that is , directed forests with in - degree at most one ; the algorithm was discovered independently by @xcite  ( @xcite ) , and it has been later simplified and expedited by others @xcite .",
    "@xcite  ( @xcite ) showed that for general directed acyclic graphs , dags , the problem is np - hard even if the in - degree is at most two .",
    "motivated by this gap , @xcite  ( @xcite ) asked for a network class that is more general than branchings yet admitting provably good structure - learning algorithms ; his findings concerning _ polytrees _ , that is , dags without undirected cycles , were however rather negative , showing that the optimization problem is np - hard even if the in - degree is at most two .",
    "given the recent advances in exact exponential algorithms in general ( see , e.g. , the book by @xcite  ( @xcite ) ) , and in finding optimal dags in particular , it is natural to ask , whether `` fast '' exponential - time algorithms exist for finding optimal polytrees .",
    "for general dags the fastest known algorithms run in time within a polynomial factor of @xmath0 , where @xmath1 is the number of nodes @xcite .",
    "however , it is not clear , whether even these bounds can be achieved for polytrees ; a brute - force algorithm would visit each polytree one by one , whose number scales as the number of directed labelled trees @xmath2 @xcite .",
    "do significantly faster algorithms exist ? does the problem become easier if only a small number of nodes are allowed an in - degree larger than one ?    in this work",
    ", we take a first step towards answering these questions by considering polytrees that differ from branchings by only a few arcs .",
    "more precisely , we study the problem of finding an optimal _ @xmath3-branching _ , defined as a polytree that can be turned into a branching by deleting @xmath3 arcs .",
    "we make the standard assumption that the scoring function decomposes into a sum of local scores ; see the next section for precise definitions .",
    "we note that @xmath3-branchings generalize branchings in a different direction than the tree - augmented naive bayes classifier ( tan ) due to @xcite  ( @xcite ) .",
    "namely , in a tan the in - degree of each node is at most two , and there is a designated class node of in - degree zero , removing of which leaves a spanning tree ; the tree is undirected in the sense that the symmetric conditional mutual information is employed to score arcs .",
    "[ [ polynomial - time - result - for - k - branchings ] ] polynomial - time result for @xmath3-branchings + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our main result is an algorithm that finds an optimal @xmath3branching in polynomial time for every constant @xmath3 .",
    "( see the next section for a formal definition of the problem . )",
    "our overall approach is straightforward : we search exhaustively over all possible sets of at most @xmath3 `` extra arcs '' , fix the guessed arcs , and solve the induced optimization problem for branchings . implementing this seemingly innocent algorithm",
    ", however , requires successful treatment of certain complications that arise when applying the existing matroid machinery for finding optimal branchings .",
    "in particular , one needs to control the interaction of the extra arcs with the solution from the induced subproblem .    [ [ fixed - parameter - tractability ] ] fixed - parameter tractability + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our algorithm for the @xmath3-branching is polynomial for fixed  @xmath3 , but the degree of the polynomial depends on @xmath3 , hence the algorithm does not scale well in @xmath3 .",
    "we therefore investigate variants of the @xmath3-branching problem that admit _ fixed - parameter tractability _ in the sense of @xcite  ( @xcite ) : the running time bound is given by a polynomial whose degree is independent of the parameter , the parameter contributing a constant factor to the bound .    in particular , we show that the @xmath3-branching problem is fixed - parameter tractable if the set of arcs incident to nodes with more than one parent form a connected polytree with exactly one sink , and each node has a bounded number of potential parent sets .",
    "this result is interesting as we show that the @xmath3-branching problem remains np - hard under these restrictions .",
    "we complement the fixed - parameter tractability result by showing that more general variants of the @xmath3-branching problem are not fixed - parameter tractable , subject to complexity theoretic assumptions .",
    "in particular , we show that the @xmath3-branching problem is not fixed - parameter tractable when parameterized by the _ number of nodes _ whose deletion produces a branching .",
    "a probabilistic network is a multivariate probability distribution that obeys a structural representation in terms of a directed graph and a corresponding collection of univariate conditional probability distributions . for our purposes , it is crucial to treat the directed graph explicitly , whereas the conditional probabilities will enter our formalism only implicitly .",
    "such a graph is formalized as a pair @xmath4 , where @xmath5 is the _ node set _ and @xmath6 is the _ arc set _ ; we identify the graph with the arc set @xmath7 when there is no ambiguity about the node set .",
    "a node @xmath8 is said to be a _",
    "parent _ of @xmath9 in the graph if the arc @xmath10 is in @xmath7 ; we denote by @xmath11 the set of parents of @xmath9 .",
    "when our interest is in the undirected structure of the graph , we may denote by @xmath12 the _ skeleton _ of @xmath7 , that is , the set of _ edges _ @xmath13 .",
    "for instance , we call @xmath7 a _ polytree _ if @xmath12 is acyclic , and a _ branching _ if additionally each node has at most one parent",
    ".    when learning a probabilistic network from data it is customary to introduce a scoring function that assigns each graph @xmath7 a real - valued score @xmath14 that measures how well @xmath7 fits the data .",
    "while there are plenty of alternative scoring functions , derived under different statistical paradigms and assumptions @xcite , the most popular ones share one important property : they are _ decomposable _ , that is , @xmath15 with some `` local '' scoring functions @xmath16 .",
    "the generic computational problem is to maximize the scoring function over some appropriate class of graphs given the local scoring functions as input .",
    "note that the score @xmath17 need not be a sum of any individual arc weights , and that the parent set @xmath11 may be empty .",
    "figure  [ fig : score+branching ] shows a table representing a local scoring function @xmath18 , together with an optimal polytree .",
    "= [ inner sep=10pt , draw ] = [ draw , line width=8pt ]    ( 0,0 ) node[rectangle , inner sep=0pt ] @xmath19 ;    ( 2cm,0 cm ) node @xmath20 ;    = [ inner sep=2pt , draw ] = [ draw , line width=1pt ]    ( -2cm,0 ) node[circle , label = above:@xmath21 ( n1 ) ( 2cm,0 ) node[circle , label = above:@xmath22 ( n2 )    ( -4cm,-4 cm ) node[circle , label = left:@xmath23 ( n3 ) ( 0cm,-4 cm ) node[circle , label = right:@xmath24 ( n4 ) ( 4cm,-4 cm ) node[circle , label = right:@xmath25 ( n5 )    ( -2cm,-8 cm ) node[circle , label = below:@xmath26 ( n6 ) ( 2cm,-8 cm ) node[circle , label = below:@xmath27 ( n7 ) ;    ( n1 ) edge[-latex ] ( n3 ) ( n1 ) edge[-latex ] ( n5 )    ( n2 ) edge[-latex ] ( n5 )    ( n3 ) edge[-latex ] ( n6 ) ( n4 ) edge[-latex ] ( n6 )    ( n5 ) edge[-latex ] ( n7 ) ;    we study this problem by restricting ourselves to a graph class that is a subclass of polytrees but a superclass of branchings .",
    "we call a polytree @xmath7 a _ @xmath3-branching _ if there exists a set of at most @xmath3 arcs @xmath28 such that in @xmath29 every node has at most one parent . note that any branching is a @xmath30-branching",
    ". the _ @xmath3-branching problem _ is to find a @xmath3-branching @xmath7 that maximizes @xmath14 , given the values @xmath17 for each node @xmath9 and some collection of possible parent sets @xmath31 .",
    "throughout this section we consider a fixed instance of the @xmath3-branching problem , that is , a node set @xmath5 and scoring functions @xmath16 for each @xmath32 .",
    "thus all arcs will refer to elements of @xmath33 .",
    "we will use the following additional notation .",
    "if @xmath7 is an arc set , then @xmath34 denotes the _ heads _ of the arcs in @xmath7 , that is , the set @xmath35 .",
    "if @xmath36 is a set of edges , then @xmath37 denotes the induced node set @xmath38 .",
    "we present an algorithm that finds an optimal @xmath3-branching by implementing the following approach .",
    "first , we guess an arc set @xmath39 of size at most @xmath3",
    ". then we search for an optimal polytree @xmath7 that contains @xmath39 such that in @xmath29 every node has at most one parent ; in other words , @xmath40 is an optimal branching with respect to an induced scoring function .",
    "clearly , the set @xmath41 must be acyclic .",
    "the challenge is in devising an algorithm that finds an optimal branching @xmath42 that is disjoint from @xmath39 while guaranteeing that the arcs in @xmath39 will not create undirected cycles in the union @xmath43 . to this end",
    ", we will employ an appropriate weighted matroid intersection formulation that extends the standard formulation for branchings .",
    "we will need some basic facts about matroids .",
    "matroid _ is a pair @xmath44 , where @xmath45 is a set of _ elements _ , called the _ ground set _ , and @xmath46 is a collection of subsets of @xmath45 , called the _ independent sets _ , such that    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( m1 ) @xmath47 ;    ( m2 ) if @xmath48 and @xmath49 then @xmath50 ; and    ( m3 ) if @xmath51 and @xmath52 then there exists an @xmath53 such that @xmath54 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the _ rank _ of a matroid is the cardinality of its maximal independent sets . any subset of @xmath45 that is not independent is called _ dependent_. any minimal dependent set is called a _",
    "circuit_.    the power of matroid formulations is much due to the availability of efficient algorithms @xcite for the _ weighted matroid intersection problem _",
    ", defined as follows . given two matroids @xmath55 and @xmath56 , and a weight function @xmath57 , find an @xmath58 that is independent in both matroids and maximizes the total weight of @xmath59 , that is , @xmath60 .",
    "the complexity of the fastest algorithm we are aware of ( for the general problem ) is summarized as follows .",
    "[ the : brezovec ] the weighted matroid intersection problem can be solved in @xmath61 time , where @xmath62 , @xmath63 is the minimum of the ranks of @xmath64 and @xmath65 , and @xmath66 is the time needed for finding the circuit of @xmath67 in both @xmath64 and @xmath65 where @xmath68 and @xmath59 is independent in both @xmath64 and @xmath65 .",
    "we now proceed to the specification of two matroids , @xmath69 and @xmath70 , parametrized by an arbitrary arc set @xmath71 such that @xmath72 is acyclic .",
    "the _ in - degree matroid _",
    "@xmath73 : let @xmath74 consist of all arc sets @xmath42 such that no arc in @xmath42 has a head in @xmath75 and every node outside @xmath75 is the head of at most one arc in @xmath42 .",
    "the _ acyclicity matroid _",
    "@xmath76 : let @xmath77 consist of all arc sets @xmath42 such that @xmath78 is acyclic .",
    "we observe that the standard matroid intersection formulation of branchings is obtained as the special case of @xmath79 : then an arc set is seen to be branching if and only if it is independent in both the in - degree matroid and the acyclicity matroid .",
    "the next two lemmas show that @xmath73 and @xmath76 are indeed matroids whenever @xmath72 is acyclic .",
    "[ lem : matroid - one ] @xmath73 is a matroid .",
    "fix the arc set @xmath71 and denote @xmath74 by @xmath80 for short . clearly , @xmath81 and if @xmath82 and @xmath83 then also @xmath84 .",
    "consequently , @xmath73 satisfies ( m1 ) and ( m2 ) . to see that @xmath73 satisfies ( m3 )",
    "let @xmath85 with @xmath52 .",
    "because of the definition of @xmath73 the sets @xmath7 and @xmath42 contain at most one arc with head @xmath9 , for every @xmath86 . because @xmath52 there is a node @xmath86 such that @xmath9 is the head of an arc in @xmath42 but @xmath9 is not the head of an arc in @xmath7 .",
    "let @xmath87 be the arc with head @xmath9",
    ". then @xmath88 and @xmath89 .",
    "hence , @xmath73 satisfies ( m3 ) .",
    "[ lem : matroid - two ] @xmath76 is a matroid .    fix the arc set @xmath71 and denote @xmath77 by @xmath90 for short . because the skeleton @xmath72 is acyclic and",
    "acylicity is a hereditary property ( a graph property is called hereditary if it is closed under taking induced subgraphs ) it follows that @xmath91 and if @xmath82 and @xmath92 then also @xmath93 .",
    "consequently , @xmath76 satisfies ( m1 ) and ( m2 ) . to see that @xmath76 satisfies ( m3 )",
    "let @xmath94 with @xmath52 .",
    "consider the sets @xmath95 and @xmath96 .",
    "let @xmath36 be a connected subset of @xmath97 .",
    "because both @xmath97 and @xmath98 are acyclic , it follows that the number of edges of @xmath98 with both endpoints in @xmath37 is at most the number of edges of @xmath97 with both endpoints in @xmath37 .",
    "because every edge in @xmath99 corresponds to an arc in @xmath7 and similarly every edge in @xmath100 corresponds to an arc in @xmath42 and @xmath101 , it follows that there is an arc @xmath88 whose endpoints are contained in two distinct components of @xmath97 .",
    "consequently , the set @xmath102 is acyclic and hence @xmath103 .",
    "we now relate the common independent sets of these two matroids to @xmath3-branchings . if @xmath7 is a @xmath3-branching , we call an arc set @xmath39 a _ deletion set _ of @xmath7 if @xmath39 is a subset of @xmath7 , contains at most @xmath3 arcs , and in @xmath29 every node has at most one parent .",
    "[ lem : matroid - three ] let @xmath7 be an arc set and @xmath39 a subset of @xmath7 of size at most @xmath3 such that no two arcs from @xmath104 have the same head and such that @xmath72 is acyclic , where @xmath105 .",
    "we have that @xmath7 is a @xmath3-branching with deletion set @xmath39 if and only if @xmath106 is independent in both @xmath73 and @xmath76 .",
    "@xmath107 suppose @xmath7 is a @xmath3-branching with deletion set @xmath39 .",
    "then @xmath29 is a branching , which shows that every node @xmath9 outside @xmath75 has in - degree at most one in @xmath106 . since by definition",
    "all arcs with a head in @xmath75 are contained in @xmath71 , no arc in @xmath106 has a head in @xmath75 .",
    "therefore , @xmath106 is independent in @xmath73 . since every @xmath3-branching is a polytree , @xmath108 is acyclic , and therefore @xmath106 is independent in @xmath76 .",
    "@xmath109 since @xmath106 is independent in @xmath76 , we have that @xmath108 is acyclic .",
    "thus , @xmath7 is a polytree .",
    "as @xmath106 is independent in @xmath73 , every node outside @xmath75 has in - degree at most one in @xmath106 and every node from @xmath75 has in - degree zero in @xmath106 .",
    "since the head of every arc from @xmath110 is in @xmath75 and no two arcs from @xmath110 have a common head , @xmath111 has maximum in - degree at most one . because @xmath112 , we have that @xmath7 is a @xmath3-branching with deletion set @xmath39 .",
    "the characterization of lemma  [ lem : matroid - three ] enables the following algorithm for the @xmath3-branching problem .",
    "define the weight function by letting @xmath113 for all arcs @xmath10 .",
    "guess the arc sets @xmath39 and @xmath110 , put @xmath114 , check that @xmath72 is acyclic , find a maximum - weight set @xmath42 that is independent in both @xmath73 and @xmath76 ; output a @xmath3-branching @xmath115 that yields the maximum weight over all guesses @xmath39 and @xmath110 , where the weight of @xmath116 is obtained as @xmath117 it is easy to verify that maximizing this weight is equivalent to maximizing the score @xmath14 .",
    "figure  [ fig : algo ] illustrates the algorithm for the scoring function of figure  [ fig : score+branching ] .",
    "= [ inner sep=2pt , draw ] = [ draw , line width=1pt ] ( -2cm,0 ) node[circle , label = above:@xmath21 ( n1 ) ( 2cm,0 ) node[circle , label = above:@xmath22 ( n2 )    ( -4cm,-4 cm ) node[circle , label = left:@xmath23 ( n3 ) ( 0cm,-4 cm ) node[circle , label = right:@xmath24 ( n4 ) ( 4cm,-4 cm ) node[circle , label = right:@xmath25 ( n5 )    ( -2cm,-8 cm ) node[circle , label = below:@xmath26 ( n6 ) ( 2cm,-8 cm ) node[circle , label = below:@xmath27 ( n7 ) ;    ( n3 ) edge[-latex , densely dotted ] ( n6 ) ( n4 ) edge[-latex , dashed ] ( n6 )    ( n1 ) edge[-latex , densely dotted ] ( n5 ) ( n2 ) edge[-latex , dashed ] ( n5 ) ;    = [ inner sep=2pt , draw ] = [ draw , line width=1pt ]    ( -2cm,0 ) node[circle , label = above:@xmath21 ( n1 ) ( 2cm,0 ) node[circle , label = above:@xmath22 ( n2 )    ( -4cm,-4 cm ) node[circle , label = left:@xmath23 ( n3 ) ( 0cm,-4 cm ) node[circle , label = right:@xmath24 ( n4 ) ( 4cm,-4 cm ) node[circle , label = right:@xmath25 ( n5 )    ( -2cm,-8 cm ) node[circle , label = below:@xmath26 ( n6 ) ( 2cm,-8 cm ) node[circle , label = below:@xmath27 ( n7 ) ;    ( n3 ) edge[-latex , densely dotted ] ( n6 ) ( n4 ) edge[-latex , dashed ] ( n6 )    ( n1 ) edge[-latex , densely dotted ] ( n5 ) ( n2 ) edge[-latex , dashed ] ( n5 )    ( n1 ) edge[-latex ] ( n3 ) ( n5 ) edge[-latex ] ( n7 ) ;    it remains to analyze the complexity of the algorithm .",
    "denote by @xmath1 the number of nodes . for a moment , consider the arc set @xmath71 fixed . to apply theorem  [ the : brezovec ] , we bound the associated key quantities : the size of the ground set is @xmath118 ; the rank of both matroids is clearly @xmath119 ; circuit detection can be performed in @xmath119 time , by a depth - first search for @xmath73 and by finding a node that has higher in - degree than it is allowed to have in @xmath76 .",
    "thus , by theorem  [ the : brezovec ] , a maximum - weight set that is independent in both matroids can be found in @xmath120 time .",
    "then consider the number of possible choices for the set @xmath114 .",
    "there are @xmath121 possibilities for choosing a set @xmath39 of at most @xmath3 arcs such that @xmath41 is acyclic . for a fixed @xmath39 ,",
    "there are @xmath122 possibilities for choosing a subset @xmath123 such that @xmath124 is acyclic and no two arcs from @xmath110 have the same head .",
    "thus there are @xmath125 relevant choices for the set @xmath71 .",
    "we have shown the following .",
    "[ the : xp ] the @xmath3-branching problem can be solved in @xmath126 time .",
    "theorem  [ the : xp ] shows that the @xmath3branching problem can be solved in `` non - uniform polynomial time '' as the order of the polynomial time bound depends on  @xmath3 . in this section",
    "we study the question of whether one can get @xmath3 `` out of the exponent '' and obtain a uniform polynomial - time algorithm .    the framework of _ parameterized complexity _ @xcite offers the suitable tools and methods for such an investigation , as it allows us to distinguish between uniform and non - uniform polynomial - time tractability with respect to a parameter .",
    "an instance of a parameterized problem is a pair @xmath127 where @xmath59 is the _",
    "main part _ and @xmath3 is the _",
    "parameter _ ; the latter is usually a non - negative integer .",
    "a parameterized problem is _ fixed - parameter tractable _ if there exist a computable function @xmath18 and a constant  @xmath66 such that instances @xmath127 of size @xmath1 can be solved in time @xmath128 .",
    "@xmath129 is the class of all fixed - parameter tractable decision problems .",
    "fixed - parameter tractable problems are also called _ uniform polynomial - time tractable _ because if @xmath3 is considered constant , then instances with parameter @xmath3 can be solved in polynomial time where the order of the polynomial is independent of @xmath3 ( in contrast to non - uniform polynomial - time running times such as @xmath130 ) .",
    "parameterized complexity offers a completeness theory similar to the theory of np - completeness .",
    "parameterized reductions _ which are many - one reductions where the parameter for one problem maps into the parameter for the other .",
    "more specifically , problem @xmath131 reduces to problem @xmath132 if there is a mapping @xmath133 from instances of @xmath131 to instances of @xmath132 such that ( i )  @xmath127 is a yes - instance of @xmath131 if and only if @xmath134 is a yes - instance of  @xmath132 , ( ii )  @xmath135 for a computable function @xmath136 , and ( iii )  @xmath133 can be computed in time @xmath128 where @xmath18 is a computable function , @xmath66 is a constant , and @xmath1 denotes the size of @xmath127 .",
    "the parameterized complexity class @xmath137}}$ ] is considered as the parameterized analog to np .",
    "for example , the parameterized maximum clique problem ( given a graph @xmath138 and a parameter @xmath139 , does @xmath138 contain a complete subgraph on @xmath3 vertices ? )",
    "is @xmath137}}$]-complete under parameterized reductions .",
    "note that there exists a trivial non - uniform polynomial - time @xmath130 algorithm for the maximum clique problems that checks all sets of @xmath3 vertices .",
    "@xmath140}}$ ] is a widely accepted complexity theoretic assumption @xcite .",
    "for example , @xmath141}}$ ] implies the ( unlikely ) existence of a @xmath142 algorithm for @xmath1variable 3sat  @xcite .",
    "a first parameterized analysis of probabilistic network structure learning using structural parameters such as treewidth has recently been carried out by  @xcite  ( @xcite ) .",
    "the algorithm from theorem [ the : xp ] considers @xmath125 relevant choices for the set @xmath114 , and for each fixed choice of @xmath71 the running time is polynomial .",
    "thus , for restrictions of the problem for which the enumeration of all relevant sets @xmath71 is fixed parameter tractable , one obtains an fpt algorithm .",
    "one such restriction requires that @xmath143 is an in - tree , i.e. , a directed tree where every arc is directed towards a designated root , and each node has a bounded number of potential parent sets .",
    "[ thm : fptrestriction ] the @xmath3-branching problem is fixed - parameter tractable if we require that ( i )  the set @xmath105 of arcs is an in - tree and ( ii )  each node has a bounded number of potential parent sets .    to compute a @xmath3-branching @xmath7 , the algorithm guesses its deletion set @xmath39 and the set @xmath144 . as @xmath7 is a @xmath3-branching , @xmath112 and for every @xmath145",
    "there is at most one arc in @xmath110 with head @xmath9 .",
    "the algorithm first guesses the root @xmath63 for the in - tree @xmath71 .",
    "then it goes over all possible choices for @xmath39 and @xmath110 as follows , until @xmath39 has at least @xmath3 arcs .",
    "guess a leaf @xmath146 of @xmath71 ( initially , @xmath63 is the unique leaf of @xmath71 ) , and guess a non - empty parent set @xmath147 for @xmath146 in @xmath7 .",
    "if @xmath148 , then backtrack .",
    "otherwise , choose at most one arc @xmath149 to add to @xmath110 , where @xmath150 , and add all other arcs from a node from @xmath147 to @xmath146 to @xmath39 ( if @xmath151 , no arc is added to @xmath110 ) .",
    "now , check whether the current choice for @xmath105 leads to a @xmath3-branching by checking whether @xmath72 is acyclic and using the matroids @xmath73 and @xmath76 as in theorem [ the : xp ] .",
    "there are at most @xmath1 choices for @xmath63 .",
    "the in - tree @xmath71 is expanded in at most @xmath3 steps , as each step adds at least one arc to @xmath39 . in each step ,",
    "@xmath146 is chosen among at most @xmath152 leaves , there is a constant number of choices for its parent set @xmath147 and at most @xmath153 choices for adding ( or not ) an arc @xmath149 , with @xmath150 , to @xmath110 ( as @xmath154 ) .",
    "the acyclicity check for @xmath72 and the weighted matroid intersection can be computed in time @xmath120 , leading to a total running time of @xmath155 , where @xmath66 is such that every node has at most @xmath66 potential parent sets",
    ".    condition ( i ) in theorem [ thm : fptrestriction ] may be replaced by other conditions requiring the connectivity of @xmath39 or a small distance between arcs from @xmath39 , giving other fixed - parameter tractable restrictions of the @xmath3-branching problem .",
    "the following theorem shows that an exponential dependency on @xmath3 or some other parameter is necessary since the @xmath3-branching problem remains np - hard under the restrictions given above .",
    "[ thm : fptrestrictionnp ] the @xmath3-branching problem is np - hard even if we require that ( i )  the set @xmath105 of arcs is an in - tree and ( ii )  each node has at most @xmath156 potential parent sets .",
    "we devise a polynomial reduction from @xmath156-sat-@xmath157 a version of 3-satisfiability where every literal occurs at most in two clauses .",
    "@xmath156-sat-@xmath157 is well known to be np - hard  @xcite .",
    "our reduction uses the same ideas as the proof of theorem  6 in  @xcite .",
    "let @xmath158 be an instance of @xmath156-sat-@xmath157 with clauses @xmath159 and variables @xmath160 .",
    "we define the set @xmath5 of nodes as follows . for every variable @xmath161 in @xmath158",
    "the set @xmath5 contains the nodes @xmath162 and @xmath163 .",
    "furthermore , for every clause @xmath164 the set @xmath5 contains the nodes @xmath165 and @xmath164 .",
    "let @xmath166 , @xmath167 , and @xmath168 .",
    "we set @xmath169 if the clause @xmath164 is the @xmath170-th clause that contains the literal @xmath161 .",
    "similarly , we set @xmath171 if the clause @xmath164 is the @xmath170-th clause that contains the literal @xmath172 .",
    "we set @xmath173 , @xmath174 for every @xmath175 , and @xmath176 for every @xmath167 .",
    "furthermore , we set @xmath177 for all the remaining combinations of @xmath32 and @xmath178 .",
    "this completes the construction of @xmath5 and @xmath18 .",
    "observe that every node of @xmath5 has at most @xmath156 potential parent sets .",
    "this completes our construction .",
    "we will have shown the theorem after showing the following claim .",
    "_ claim : @xmath158 is satisfiable if and only if there is a @xmath179-branching  @xmath39 such that @xmath180 , the set @xmath143 of arcs is an in - tree , and each node of @xmath5 has at most @xmath156 potential parent sets .",
    "_    = [ circle , inner sep=2pt , draw , color = black ] = [ draw ]    ( 0,0 ) node[label = above:@xmath181 ( p1 ) ( 2,0 ) node[label = above:@xmath182 ( p2 ) ( 4,0 ) node[label = above:@xmath183 ( p3 )    ( 0,-1 ) node[label = left:@xmath184 ( x1 ) ( -0.5,-2 ) node[label = left:@xmath185 ( x11 ) ( -0.5,-3 ) node[label = left:@xmath186 ( x12 ) ( 0.5,-2 ) node[label = left:@xmath187 ( nx11 ) ( 0.5,-3 ) node[label = left:@xmath188 ( nx12 )    ( 2,-1 ) node[label = left:@xmath189 ( x2 ) ( 1.5,-2 ) node[label = left:@xmath190 ( x21 ) ( 1.5,-3 ) node[label = left:@xmath191 ( x22 ) ( 2.5,-2 ) node[label = left:@xmath192 ( nx21 ) ( 2.5,-3 ) node[label = left:@xmath193 ( nx22 )    ( 4,-1 ) node[label = left:@xmath194 ( x3 ) ( 3.5,-2 ) node[label = left:@xmath195 ( x31 ) ( 3.5,-3 ) node[label = left:@xmath196 ( x32 ) ( 4.5,-2 ) node[label = left:@xmath197 ( nx31 ) ( 4.5,-3 ) node[label = left:@xmath198 ( nx32 )    ( 0,-4 ) node[label = left:@xmath199 ( c3 ) ( 2,-4 ) node[label = left:@xmath200 ( c2 ) ( 4,-4 ) node[label = left:@xmath201 ( c1 )    ( 4,-5 ) node[label = below:@xmath202 ( p4 ) ( 2,-5 ) node[label = below:@xmath203 ( p5 ) ( 0,-5 ) node[label = below:@xmath204 ( p6 ) ;    ( p1 ) edge[-latex ] ( p2 ) ( p2 ) edge[-latex ] ( p3 ) ( p3 ) edge[-latex , bend left ] ( p4 ) ( p4 ) edge[-latex ] ( p5 ) ( p5 ) edge[-latex ] ( p6 )    ( x1 ) edge[-latex ] ( p1 ) ( x2 ) edge[-latex ] ( p2 ) ( x3 ) edge[-latex ] ( p3 )    ( c1 ) edge[-latex ] ( p4 ) ( c2 ) edge[-latex ] ( p5 ) ( c3 ) edge[-latex ] ( p6 )    ( nx11 ) edge[-latex ] ( x1 ) ( nx12 ) edge[-latex ] ( x1 )    ( nx21 ) edge[-latex ] ( x2 ) ( nx22 ) edge[-latex ] ( x2 )    ( x31 ) edge[-latex ] ( x3 ) ( x32 ) edge[-latex ] ( x3 )    ( x12 ) edge[-latex ] ( c3 ) ( x22 ) edge[-latex ] ( c2 ) ( nx31 ) edge[-latex ] ( c1 ) ;    @xmath107 suppose that the formula @xmath158 is satisfiable and let @xmath205 be a satisfying assignment for @xmath158 .",
    "furthermore , for every @xmath206 let @xmath207 be a literal of @xmath164 that is set to true by @xmath205 .",
    "we construct a @xmath179-branching @xmath39 as follows . for every @xmath208",
    "the digraph @xmath39 contains an arc @xmath209 if @xmath210 and @xmath164 is the @xmath170-th clause that contains @xmath161 and an arc @xmath211 if @xmath212 and @xmath164 is the @xmath170-th clause that contains @xmath172 for some @xmath166 and @xmath213 .",
    "furthermore , for every @xmath166 the digraph @xmath39 contains the arcs @xmath214 and @xmath215 if @xmath216 and the arcs @xmath217 and @xmath218 if @xmath219 .",
    "last but not least @xmath39 contains the arcs @xmath220 , @xmath221 and @xmath222 for every @xmath223 , @xmath167 , and @xmath224 . figure  [ fig : np - hard - branching ] shows an optimal @xmath179-branching @xmath39 for some @xmath156-sat-@xmath157 formula .",
    "it is easy to see that @xmath39 is a @xmath179-branching such that @xmath225 and the set @xmath105 of arcs is an in - tree .",
    "@xmath109 suppose there is a @xmath179-branching @xmath39 such that @xmath180 . because @xmath226 it follows that every node of @xmath5 achieves its maximum score in @xmath39 .",
    "hence , @xmath39 has to contain the arcs @xmath220 , @xmath221 , @xmath222 , for every @xmath166 , @xmath227 , and @xmath228 .",
    "for the same reasons @xmath39 has to contain either the arcs @xmath214 and @xmath215 or the arcs @xmath217 and @xmath218 for every @xmath229 .",
    "furthermore , for every @xmath167 the @xmath179-branching @xmath39 has to contain one arc of the form @xmath209 or @xmath211 where @xmath164 is the @xmath170-th clause that contains @xmath161 or @xmath172 , respectively , for some @xmath166 and @xmath230 .",
    "let @xmath166 , @xmath206 , and @xmath213 .",
    "we first show that whenever @xmath39 contains an arc @xmath231 then @xmath39 contains no arc of the form @xmath209 and similarly if @xmath39 contains an arc @xmath232 then @xmath39 contains no arc of the form @xmath233 .",
    "suppose for a contradiction that @xmath39 contains an arc @xmath231 together with an arc @xmath209 or an arc @xmath231 together with an arc @xmath209 .",
    "in the first case @xmath39 contains the undirected cycle @xmath234 and in the second case @xmath39 contains the cycle @xmath235 contradicting our assumption that @xmath39 is a @xmath179-branching .",
    "it now follows that the assignment @xmath205 with @xmath219 if @xmath39 does not contain the arcs @xmath214 and @xmath215 and @xmath216 if @xmath39 does not contain the arcs @xmath217 and @xmath218 is a satisfying assignment for @xmath158 .",
    "so far we have measured the difference of a polytree to branchings in terms of the number of arcs to be deleted .",
    "next we investigate the consequences of measuring the difference by the number of nodes to be deleted .",
    "we call a polytree @xmath7 a _",
    "@xmath3-node branching _ if there exists a set of at most @xmath3 nodes @xmath236 such that @xmath237 is a branching .",
    "@xmath3-node branching problem _ is to find a @xmath3-node branching @xmath7 that maximizes @xmath14 .",
    "clearly every @xmath3-branching is a @xmath3-node branching , but the reverse does not hold . in other words ,",
    "the @xmath3-node branching problem generalizes the @xmath3-branching problem .    in the following",
    "we show that the @xmath3-node branching problem is hard for the parameterized complexity class @xmath137}}$ ] ; this provides strong evidence that the problem is not fixed - parameter tractable .",
    "[ thm : hardness - knodeb ] the @xmath3-node branching problem is @xmath137}}$]-hard .",
    "we devise a parameterized reduction from the following problem , called partitioned clique , which is well - known to be @xmath137}}$]-complete  for parameter  @xmath3  @xcite .",
    "the instance is a @xmath3partite graph @xmath238 with partition @xmath239 such that @xmath240 for every @xmath241 .",
    "the question is whether there are nodes @xmath242 such that @xmath243 for @xmath244 and @xmath245 for @xmath246 ?",
    "( the graph @xmath247 is a _",
    "@xmath3-clique _ of @xmath138 . )",
    "let @xmath238 be an instance of this problem with partition @xmath248 , @xmath249 , and parameter @xmath3 .",
    "let @xmath250 , @xmath251 , and @xmath252 .",
    "let @xmath253 and @xmath254 or @xmath255 for every @xmath256 .",
    "then @xmath5 is defined as @xmath257 .",
    "let @xmath258 .",
    "we define the score function @xmath18 as follows .",
    "we set @xmath259 for every @xmath260 and @xmath261 , and @xmath262 for every @xmath263 , @xmath264 , @xmath265 , and @xmath266 .",
    "furthermore , we set @xmath177 for all the remaining combinations of @xmath9 and @xmath147 .",
    "this completes our construction .",
    "we will have the theorem after showing the following claim .",
    "_ claim : @xmath138 has a @xmath3-clique if and only if there is a @xmath267-node branching  @xmath39 such that @xmath268 .",
    "_    c|cc    = [ circle , inner sep=1pt , draw ]    ( 0,2 cm ) + ( -1cm,0 ) node[circle ] ( v11 ) + ( 0,0 ) node[circle , fill ] ( v12 ) + ( 1cm,0 ) node[circle ] ( v13 )    + ( 0,0 ) node[rectangle , minimum width=1.3cm , minimum height=0.4cm , draw , rotate around=0:(0,0 ) ] ;    ( 0,2 cm ) + ( -1cm,0 ) node[circle ] ( v21 ) + ( 0,0 ) node[circle , fill ] ( v22 ) + ( 1cm,0 ) node[circle ] ( v23 )    + ( 0,0 ) node[rectangle , minimum width=1.3cm , minimum height=0.4cm , draw , rotate around=-120:(0,0 ) ] ;    ( 0,2 cm ) + ( -1cm,0 ) node[circle ] ( v31 ) + ( 0,0 ) node[circle , fill ] ( v32 ) + ( 1cm,0 ) node[circle ] ( v33 )    + ( 0,0 ) node[rectangle , minimum width=1.3cm , minimum height=0.4cm , draw , rotate around=120:(0,0 ) ] ;    ( v11 ) edge [ ] ( v23 ) ( v12 ) edge[thick ] ( v22 ) ( v13 ) edge [ ] ( v21 )    ( v21 ) edge [ ] ( v31 ) ( v22 ) edge[thick ] ( v32 )    ( v33 ) edge [ ] ( v13 ) ( v32 ) edge[thick ] ( v12 ) ( v31 ) edge [ ] ( v11 ) ;    & &    = [ circle , inner sep=1pt , draw ]    ( 0,2 cm ) + ( -1cm,0 ) node[circle ] ( v111 ) + ( 0,0 ) node[circle , fill ] ( v121 ) + ( 1cm,0 ) node[circle ] ( v131 )    + ( -1cm,0.5 ) node[circle ] ( v112 ) + ( 0,0.5 ) node[circle , fill ] ( v122 ) + ( 1cm,0.5 ) node[circle ] ( v132 )    + ( -1cm,1 ) node[circle ] ( v113 ) + ( 0,1 ) node[circle , fill ] ( v123 ) + ( 1cm,1 ) node[circle ] ( v133 )    + ( 0,2.5 ) node[circle ] ( c1 )    + ( 0,1.25 ) node[rectangle , minimum width=1.3cm , minimum height=1.5cm , draw ] ;    ( 0,2 cm ) + ( -1cm,0 ) node[circle ] ( v211 ) + ( 0,0 ) node[circle , fill ] ( v221 ) + ( 1cm,0 ) node[circle ] ( v231 )    + ( -1cm,0.5 ) node[circle ] ( v212 ) + ( 0,0.5 ) node[circle , fill ] ( v222 ) + ( 1cm,0.5 ) node[circle ] ( v232 )    + ( -1cm,1 ) node[circle ] ( v213 ) + ( 0,1 ) node[circle , fill ] ( v223 ) + ( 1cm,1 ) node[circle ] ( v233 )    + ( 0,2.5 ) node[circle ] ( c2 )    + ( 0,1.25 ) node[rectangle , minimum width=1.3cm , minimum height=1.5cm , draw , rotate around=-120:(0,0 ) ] ;    ( 0,2 cm ) + ( -1cm,0 ) node[circle ] ( v311 ) + ( 0,0 ) node[circle , fill ] ( v321 ) + ( 1cm,0 ) node[circle ] ( v331 )    + ( -1cm,0.5 ) node[circle ] ( v312 ) + ( 0,0.5 ) node[circle , fill ] ( v322 ) + ( 1cm,0.5 ) node[circle ] ( v332 )    + ( -1cm,1 ) node[circle ] ( v313 ) + ( 0,1 ) node[circle , fill ] ( v323 ) + ( 1cm,1 ) node[circle ] ( v333 )    + ( 0,2.5 ) node[circle ] ( c3 )    + ( 0,1.25 ) node[rectangle , minimum width=1.3cm , minimum height=1.5cm , draw , rotate around=120:(0,0 ) ] ;    ( 30:1 ) node[circle ] ( a12 ) ( 150:1 ) node[circle ] ( a13 ) ( -90:1 ) node[circle ] ( a23 ) ;    ( v111 ) edge[-latex ] ( c1 ) ( v112 ) edge[-latex ] ( c1 ) ( v113 ) edge[-latex ] ( c1 )    ( v131 ) edge[-latex ] ( c1 ) ( v132 ) edge[-latex ] ( c1 ) ( v133 ) edge[-latex ] ( c1 )    ( a12 ) edge[-latex , bend right=60 ] ( c1 ) ( a13 ) edge[-latex , bend left=60 ] ( c1 )    ( v122 ) edge[-latex , bend left=10 ] ( a12 ) ( v123 ) edge[-latex , bend right=10 ] ( a13 ) ;    ( v211 ) edge[-latex ] ( c2 ) ( v212 ) edge[-latex ] ( c2 ) ( v213 ) edge[-latex ] ( c2 )    ( v231 ) edge[-latex ] ( c2 ) ( v232 ) edge[-latex ] ( c2 ) ( v233 ) edge[-latex ] ( c2 )    ( a12 ) edge[-latex , bend left=60 ] ( c2 ) ( a23 ) edge[-latex , bend right=60 ] ( c2 )    ( v221 ) edge[-latex , bend right=10 ] ( a12 ) ( v223 ) edge[-latex , bend left=10 ] ( a23 ) ;    ( v311 ) edge[-latex ] ( c3 ) ( v312 ) edge[-latex ] ( c3 ) ( v313 ) edge[-latex ] ( c3 )    ( v331 ) edge[-latex ] ( c3 ) ( v332 ) edge[-latex ] ( c3 ) ( v333 ) edge[-latex ] ( c3 )    ( a13 ) edge[-latex , bend right=60 ] ( c3 ) ( a23 ) edge[-latex , bend left=60 ] ( c3 )    ( v321 ) edge[-latex , bend left=10 ] ( a13 ) ( v322 ) edge[-latex , bend right=10 ] ( a23 ) ;     + @xmath138    &    &    @xmath39    @xmath107 suppose that @xmath138 has a @xmath3-clique @xmath269 .",
    "then it is easy to see that the dag @xmath39 on @xmath5 defined by the arc set @xmath270 is a @xmath267-node branching and @xmath271 .",
    "figure  [ fig : hardnessknodeb ] shows an optimal @xmath267-node branching @xmath39 constructed from an example graph @xmath138 .",
    "@xmath109 suppose there is a @xmath267-node branching @xmath39 with @xmath268 .",
    "it follows that every node of @xmath39 achieves its maximum score .",
    "in particular , for every @xmath260 the nodes @xmath272 must have score @xmath273 in @xmath39 and hence there is a node @xmath274 such that @xmath272 is adjacent to all nodes in @xmath275 .",
    "furthermore , for every @xmath263 the node @xmath276 is adjacent to exactly one node in @xmath277 and to exactly one node in @xmath278 .",
    "let @xmath279 be the unique node in @xmath277 adjacent to @xmath276 and similarly let @xmath280 be the unique node in @xmath278 that is adjacent to @xmath276 for every @xmath263 .",
    "then @xmath281 and @xmath282 because otherwise the skeleton of @xmath39 would contain the cycle @xmath283 or the cycle @xmath284 .",
    "consequently , the edges represented by the parents of @xmath276 in @xmath39 for all @xmath263 form a @xmath3-clique in @xmath138 .",
    "we have studied a natural approach to extend the known efficient algorithms for branchings to polytrees that differ from branchings in only a few extra arcs . at first glance",
    ", one might expect this to be achievable by simply guessing the extra arcs and solving the remaining problem for branchings .",
    "however , we do not know whether such a reduction is possible in the strict sense . indeed , we had to take a slight detour and modify the two matroids in a way that guarantees a control for the interactions caused by the presence of high - in - degree nodes .",
    "as a result , we got an algorithm that runs in time polynomial in the input size : namely , there can be more than @xmath285 relevant input values for each of the @xmath1 nodes ; so , the runtime of our algorithm is less than cubic in the size of the input , supposing the local scores are given explicitly .",
    "while this answers one question in the affirmative , it also raises several further questions , some of which we give in the next paragraphs .",
    "our complexity analysis relied on a result concerning the general weighted matroid intersection problem .",
    "do significantly faster algorithms exist when restricted to our two specific matroids ?",
    "one might expect such algorithms exist , since the related problem for branchings can be solved in @xmath118 time by the algorithm of @xcite .",
    "even if we could solve the matroid intersection problem faster , our algorithm would remain practical only for very small values of @xmath3 .",
    "can one find an optimal @xmath3-branching significantly faster , especially if allowing every node to have at most two parents ? as the current algorithm makes around @xmath286 mutually overlapping guesses , there might be a way to considerably reduce the time complexity .",
    "specifically , we ask whether the restricted problem is fixed - parameter tractable with respect to the parameter @xmath3 , that is , solvable in @xmath287 time for some computable function @xmath18 and polynomial @xmath288  @xcite . the fixed - parameter algorithm given in section  [ sec : fpt ]",
    "can be seen as a first step towards an answer to this question .",
    "can we find other restrictions under which the @xmath3-branching problem becomes fixed - parameter tractable ?    can we use a similar approach for the more general @xmath3-node branching problem , i.e. , is there a polynomial time algorithm for the @xmath3-node branching problem for every fixed @xmath3 ?",
    "likewise , we do not know whether the problem is easier or harder for polytrees than for general dags : do similar techniques apply to finding maximum - score dags that can be turned into branchings by deleting some @xmath3 arcs ?",
    "serge gaspers , sebastian ordyniak , and stefan szeider acknowledge support from the european research council ( complex reason , 239962 ) .",
    "serge gaspers acknowledges support from the australian research council ( de120101761 ) .",
    "mikko koivisto acknowledges the support from the academy of finland ( grant 125637 ) .",
    "mathieu liedloff acknowledges the support from the french agence nationale de la recherche ( anr agape anr-09-blan-0159 - 03 ) ."
  ],
  "abstract_text": [
    "<S> inferring probabilistic networks from data is a notoriously difficult task . under </S>",
    "<S> various goodness - of - fit measures , finding an optimal network is np - hard , even if restricted to polytrees of bounded in - degree . </S>",
    "<S> polynomial - time algorithms are known only for rare special cases , perhaps most notably for branchings , that is , polytrees in which the in - degree of every node is at most one . here , </S>",
    "<S> we study the complexity of finding an optimal polytree that can be turned into a branching by deleting some number of arcs or nodes , treated as a parameter . </S>",
    "<S> we show that the problem can be solved via a matroid intersection formulation in polynomial time if the number of deleted arcs is bounded by a constant . </S>",
    "<S> the order of the polynomial time bound depends on this constant , hence the algorithm does not establish fixed - parameter tractability when parameterized by the number of deleted arcs . </S>",
    "<S> we show that a restricted version of the problem allows fixed - parameter tractability and hence scales well with the parameter . </S>",
    "<S> we contrast this positive result by showing that if we parameterize by the number of deleted nodes , a somewhat more powerful parameter , the problem is not fixed - parameter tractable , subject to a complexity - theoretic assumption . </S>"
  ]
}
{
  "article_text": [
    "let @xmath0 be a finite abelian group .",
    "fourier analysis provides a convenient basis for the space of functions @xmath1 , namely the characters @xmath2 .",
    "it follows that any function @xmath3 can be represented as a linear combination @xmath4 , where @xmath5 is the discrete fourier transform of @xmath6 .",
    "a standard problem is to approximate a function , up to any error term , using a linear combination of a small number of characters .",
    "this is not always possible , but for certain functions ( which are called _ concentrated _ ) it is possible .",
    "the coefficients in such an approximation are called _ significant _ fourier coefficients , as their size is large relative to the function s norm .",
    "the simplest example of a concentrated function is a character itself .",
    "a natural computational problem is to compute such an approximation .",
    "when doing this one might have a complete description of the function or , as will be the case in this paper , just a small set of values @xmath7 . the ability to choose specific @xmath8",
    "s plays a crucial role in the ability to approximate @xmath6 .",
    "indeed , the main result in this subject is an algorithm that efficiently computes a _ sparse _ approximation for any concentrated function on any abelian group @xmath0 , by computing all its significant coefficients ( assuming one is able to choose the inputs @xmath8 ) .",
    "algorithms that compute significant coefficients first appear explicitly in the works of goldreich - levin  @xcite and kushilevitz - mansour  @xcite , though some of the main ideas already appear in earlier works .",
    "we use the general term _ significant fourier transform _ ( sft ) to refer to algorithms of this type .",
    "the main aim of our paper is to survey some sft algorithms and their applications in cryptography .",
    "one simple application is the problem of computing a secret vector @xmath9 when given access to a function @xmath10 on @xmath11 that computes @xmath12 where @xmath13 is a noise that is zero with probability @xmath14 ( this is the original application studied by goldreich and levin ) .",
    "there are many approaches to solving this noisy linear algebra problem ; one is to define the function @xmath15 and to consider fourier analysis on the additive group @xmath16",
    ". one can show ( see example  [ example4 ] ) that the coefficient @xmath17 corresponding to the character @xmath18 is a significant fourier coefficient .",
    "hence , computing the significant fourier coefficients for this function gives an algorithm to compute the secret vector @xmath19 .",
    "we emphasize that in order to efficiently compute the significant coefficients it is important to be able to choose the queries @xmath20 to the function , otherwise this problem is the learning parity with noise ( lpn ) problem ( also closely related to decoding a random binary linear code ) which is believed to be hard .    in some other applications",
    "there is a known function @xmath6 , and we also have access to the function @xmath21 for some function @xmath22 parameterized by an unknown value @xmath23 .",
    "if @xmath6 has a significant fourier coefficient , and if there is some relation between the fourier transforms @xmath24 of @xmath6 and @xmath25 , then one could hope that this relation would disclose some information on @xmath23 . for example , taking @xmath0 to be the additive group @xmath26 and @xmath27 , we have the _ scaling property _",
    "@xmath28 for every @xmath29 .",
    "it follows that @xmath6 and @xmath25 share the same coefficients in different order .",
    "if @xmath30 is a significant fourier coefficient of @xmath6 and @xmath31 is a significant fourier coefficient of @xmath25 then @xmath32 is a candidate value for @xmath23 .",
    "this idea has been used by akavia , goldwasser and safra @xcite to give a new approach for the chosen multiplier hidden number problem in @xmath33 , which subsequently led to a new approach in study the security of diffie - hellman schemes .",
    "this paper is aimed at the cryptographer who has heard about these tools and seeks a clear understanding of their mechanics , and a framework for their usefulness and their limitations .",
    "we describe the sft algorithm from a high level point of view , stressing the mathematical ideas behind it and the situations in which it can be applied .",
    "we study , from the fourier analysis point of view , different approaches for applying these tools and of proving results in this area .",
    "we also show some limitations on applications that use these tools .",
    "moreover , we survey some of the recent results and applications using these tools .",
    "the sft algorithm and variants have received great attention in the literature outside the regime of cryptography .",
    "the kushilevitz - mansour algorithm  @xcite is a cornerstone in this research field , and serves as a basis for most algorithms , including the one we present in this paper .",
    "researchers in engineering , concerned with practical applications in signal processing , have developed algorithms with greater efficiency ( with respect to various metrics ) ; for a recent survey on these algorithms see gilbert , indyk , iwen and schmidt  @xcite .",
    "0.2 cm    * previous work *    the goldreich - levin ( gl ) algorithm  @xcite is considered to be the first algorithm that finds significant fourier coefficients .",
    "the algorithm approximates noisy inner - product functions over @xmath34 , as already mentioned above .",
    "an application is a _ hardcore function _ ( known as the gl hardcore bit ) for every one - way function .",
    "there are two formulations of the gl algorithm .",
    "one formulation is due to rackoff and is based on ideas that were used in earlier work on hardcore bits  @xcite .",
    "the other formulation uses the language of fourier analysis and was developed in the work of kushilevitz and mansour ( km )  @xcite , who extended the ideas to give an algorithm that approximates any real - valued function over @xmath34 .",
    "mansour  @xcite gave a very similar algorithm for complex - valued functions over @xmath35 .",
    "all these works rely heavily on the fact that the domain is a group of order @xmath36 ( though this point is not made explicitly in their papers ) .",
    "for functions on @xmath37 , bleichenbacher  @xcite developed an algorithm very similar in nature to gl and showed how to approximate functions that are a noisy product in @xmath38 , i.e. @xmath39 . using this algorithm , bleichenbacher gave an attack on dsa signatures .",
    "bleichenbacher s work has been used recently to give an attack on nonce leaks in ecdsa  @xcite and to show some nice results on decomposition techniques in elliptic curves  @xcite .",
    "akavia , goldwasser and safra ( ags )  @xcite gave a complete algorithm for all complex - valued functions over @xmath37 , from which it was naturally generalized to all finite abelian groups .",
    "their algorithm can be seen as a generalization of bleichenbacher s with ideas from km and mansour .",
    "all these algorithms require the ability to access the function on any requested value , that is , to ask @xmath40 for any @xmath41 .",
    "we overview them in section [ sec_algorithm ] .    0.2 cm    * applications *    akavia , goldwasser and safra  @xcite showed that a number of bit security results ( for rsa , rabin , and discrete logs ) can be re - proved using these tools .",
    "a classic result of this type , from alexi , chor , goldreich and schnorr  @xcite ( acgs ) , is that if one has an oracle that on input @xmath42 ( where @xmath43 is an rsa public key ) returns the least significant bit of @xmath41 with probability noticeably better than @xmath44 , then one can compute @xmath45-th roots modulo @xmath46 .",
    "hstad and nslund @xcite generalized this result for an oracle that returns any single bit of @xmath41 ( see also ( * ? ? ?",
    "* section 4.1 ) ) , but their method is very complex and requires complicated and adaptive manipulations of the bits . on the other hand ,",
    "the algorithm given by ags , which applies to functions with significant fourier coefficients , is much clearer and is not adaptive .",
    "similar to hstad and nslund , morillo and rfols  @xcite extended the ags results to all single bit functions , by showing they have a significant fourier coefficient ( in particular , one can obtain the acgs result for any bit ) .",
    "subsequently , a number of papers  @xcite have proved ( or re - proved ) various results on bit security in the context of diffie - hellman keys on elliptic curves and finite fields @xmath47 with @xmath48 , but usually in a model that allows changing the curve or field representation .",
    "we emphasize that the requirement of chosen inputs for the functions restricts these applications . indeed , the question of main interest , whether single bits of diffie - hellman secrets are hardcore , is still open .    the sft algorithm has also been used to show _ search - to - decision _ reductions for the _ learning with errors _ and _ learning with rounding _",
    "problems  @xcite .",
    "we elaborate on these applications in section [ sec_applications ] .    0.2 cm    * paper organisation and contributions *    section  [ sec : basics ] summarises the basic definitions .",
    "section  [ sec_algorithm ] presents the key ideas behind the sft algorithm , and deals with some related issues .",
    "specifically , with few examples we explain why being able to choose the inputs to the functions is essential and why one does not expect to have a similar tool when the inputs to the functions are chosen at random ; we also analyze the case of working with unreliable oracles .",
    "in section  [ sec : mod - switch ] we outline our recent work on applying _ modulus switching _ to this subject ( namely to re - cast a function on @xmath26 to a function on @xmath35 for the nearest power of @xmath49 to @xmath50 ) .",
    "these ideas are very similar to the approach taken in shor s algorithm  @xcite . in our opinion",
    "this provides a simpler approach to the results of akavia - goldwasser - safra and morillo - r ` afols .",
    "section  [ sec_applications ] surveys bit security applications using the language of the _ hidden number problem _ : given @xmath6 and access to @xmath21 find the value @xmath23 .",
    "in section  [ sec_limitations ] we explain a fundamental limitation to this approach : we prove that one can only solve the ( chosen multiplier ) hidden number problem with these tools when the function @xmath51 is linear or affine .",
    "therefore , these tools can not be directly used to address the _",
    "elliptic curve hidden number problem _ or the _ modular inversion hidden number problem_. our work therefore answers a question in  @xcite .",
    "we review basic background on fourier analysis on discrete domains .",
    "proofs and further details can be found in terras  @xcite .",
    "let @xmath52 be a finite ring and denote by @xmath53 the corresponding additive abelian group .",
    "we are interested in the set of functions @xmath54 .",
    "the set @xmath55 is a vector space over @xmath56 of dimension @xmath57 , with the usual pointwise addition and scalar multiplication of functions .",
    "convolution of two functions @xmath58 is defined by @xmath59 .",
    "the _ expectation _ of a function @xmath60 is defined to be @xmath61 = \\frac{1}{\\abs{r } } \\sum_{x \\in r } f(x)$ ] .",
    "the space @xmath55 is equipped with an inner product @xmath62 = \\frac{1}{\\abs{r } } \\sum_{x \\in r } f(x ) \\overline{g(x)}$ ] , where @xmath63 denotes the complex conjugate of @xmath64 .",
    "the inner product induces a norm @xmath65 .",
    "we also define @xmath66 .",
    "one basis for this vector space is the set of _ kronecker delta functions _",
    "@xmath68 if @xmath69 , otherwise @xmath70 .",
    "this is an orthogonal basis with respect to the inner product .",
    "however , this basis is not as useful as the fourier basis , as we will explain later in this section .",
    "a _ character _ of a group @xmath71 is a group homomorphism taking values in the non - zero complex numbers , namely @xmath72 such that @xmath73 . since @xmath74",
    ", we see that the characters take values in the complex @xmath75-th roots of unity .",
    "the set of characters of @xmath0 forms a group ( with respect to point - wise multiplication ) which is often denoted @xmath76 , and is isomorphic to @xmath0 .    in general",
    ", we fix a choice of isomorphism @xmath77 and denote it by @xmath78 . in particular , for @xmath79 the characters are defined by @xmath80 where @xmath81 . for @xmath82 , let @xmath83 and @xmath84 ; the character @xmath85 is given by @xmath86 and the map @xmath87 from @xmath0 to @xmath76 is an isomorphism .",
    "we sometimes write @xmath88 so that @xmath89 .",
    "the following relations are standard and can be used to show that the characters are orthonormal @xmath90 if @xmath91 then for any @xmath92 we define the orthogonal set @xmath93 this set is fundamental for the understanding of the sft algorithm and appears frequently in section [ sec : sftalgo ] . using the relations above it",
    "can be shown that @xmath94    the _ fourier basis _ for @xmath55 is the set @xmath76 consisting of all the characters @xmath95 .",
    "it is an orthonormal basis .",
    "therefore , we can represent each function @xmath96 uniquely as a linear combination @xmath4 of the characters @xmath97 . the function @xmath98 given by @xmath99",
    "is called the _ discrete fourier transform_. the map @xmath100 is @xmath56-linear .",
    "notice that a single fourier coefficient encapsulates information about the function on the whole domain , unlike the representation in terms of kronecker delta functions where one coefficient only holds information about the function at a single point .",
    "_ parseval s identity _ is the relationship @xmath101 between the norms of @xmath6 and @xmath5 .    adopting signal processing terminology ,",
    "when we work with the values @xmath40 for @xmath102 we say that @xmath41 is in the _ time domain_. when we use the values @xmath103 we say @xmath81 is in the _ frequency domain_. there does not seem to be a rigorous formulation of this terminology and we do not use it much , but the reader will find it very common in the engineering literature .",
    "we signal to the reader whether we are working in the time domain or frequency domain by using latin letters @xmath104 for elements in the former ( elements of @xmath0 ) , and greek letters @xmath105 for the latter ( corresponding to elements of @xmath76 , e.g. @xmath106 ) .",
    "let @xmath107 .",
    "basic properties of the fourier transform include the following ( note that the basis of kronecker delta functions does not satisfy these properties , which is one reason why it is less useful than the fourier basis ) :    * ( time ) scaling : if @xmath108 for @xmath109 , then @xmath110 ; * ( time ) shifting : if @xmath111 for @xmath112 , then @xmath113 ; * ( frequency ) shifting : if @xmath114 for @xmath112 , then @xmath115 ; * convolution - multiplication duality : @xmath116 .",
    "we now recall some definitions from @xcite .",
    "the same definitions can be made for functions over rings @xmath117 where @xmath0 is their additive group .",
    "[ restriction ] given a function @xmath118 and a set of characters @xmath119 , the _ restriction of @xmath6 to @xmath119 _ is the function @xmath120 defined by @xmath121 .",
    "[ concentration ] let @xmath122 be a family of functions .",
    "let @xmath123 be a real number .",
    "then @xmath124 is _",
    "fourier @xmath125-concentrated _ if there exist a polynomial @xmath126 $ ] and sets of characters @xmath127 such that @xmath128 and @xmath129 for all @xmath130 .",
    "we say that @xmath124 is _ concentrated _ if @xmath124 is @xmath125-concentrated for every @xmath131 .",
    "most applications are concerned with a single function that implicitly defines the entire family . in this case",
    "we informally say that the function , instead of the family , is concentrated .",
    "examples of concentrated functions , and of this terminology , are given in example [ example4 ] .",
    "[ heavy coefficient ] for a function @xmath118 and a threshold @xmath132 , we say that a coefficient @xmath103 ( corresponding to the character @xmath97 ) is _ @xmath133-heavy _ if @xmath134 .",
    "the phrases _ significant coefficient _ and _ heavy coefficient _ are often used interchangeably to mean any coefficient @xmath103 which is large relative to the norm of the function , but without reference to any specific value of @xmath133 . by parseval",
    "s identity it is evident that a function can not have many significant coefficients . in this paper",
    "our convention is to use `` heavy '' in a formal sense and `` significant '' in an informal sense .",
    "the relationship between concentrated functions and functions with significant coefficients is subtle .",
    "if a function has a @xmath133-heavy coefficient , then is it @xmath135-concentrated ( with @xmath136 ) .",
    "but such a function is not necessarily @xmath125-concentrated for all @xmath125 .",
    "the literature has tended to focus on concentrated functions , but for many of the bit security applications it is sufficient that the function has one or more significant coefficients .",
    "the distinction is important since it is harder to prove that a function is concentrated than to prove it has a significant coefficient .",
    "[ example4 ] here are some examples of functions with significant coefficients , most of which are concentrated :    * a single character is concentrated ; that is , the family @xmath137 for some @xmath138 is concentrated .",
    "the case @xmath139 corresponds to constant functions , which are concentrated but will be un - interesting in our applications .",
    "* for the least - significant - bit function @xmath140 on @xmath35 , which gives the parity of @xmath41 , the functions @xmath141 given by @xmath142 are concentrated . indeed",
    ", these functions correspond to the characters @xmath143 . * the functions @xmath144 , for which @xmath145",
    "if @xmath146 and @xmath147 otherwise , are concentrated ; one has @xmath148 $ ] . elementary arguments ( see claim  [ fact1 ] below ) show that @xmath149_n|}\\ ] ] where @xmath150_n$ ] denotes the unique integer in @xmath151 $ ] that is congruent to @xmath30 modulo @xmath46 .",
    "similarly @xmath152_n |}$ ] .",
    "these results can be used to show that @xmath153 is concentrated on a set of characters @xmath30 with small @xmath154_n |$ ] .",
    "similar arguments hold for the most - significant - bit function @xmath155 , thus it is also concentrated . * for primes @xmath50 ,",
    "the functions @xmath156 given by @xmath142 are concentrated .",
    "this follows from @xmath157 and the scaling property . *",
    "the function @xmath158 , given by @xmath159 for @xmath45 which is mostly @xmath160 ( and otherwise @xmath161 ) , has a significant coefficient and therefore is @xmath125-concentrated ( for some large @xmath125 ) .",
    "let @xmath162 be the set for which @xmath163 , then @xmath164 .",
    "since the size @xmath165 is relatively small , the coefficient @xmath166 is large , that is , the function @xmath167 `` behaves '' like the character @xmath168 in @xmath169 .",
    "if @xmath165 is very small , for example @xmath170 , then @xmath167 is also concentrated .",
    "moreover , one can show that @xmath171 , and on average is expected to be proportional to @xmath172 . * ` noisy characters ' given by @xmath173 for some suitable random functions @xmath45 have a significant coefficient @xmath103 as we show in section [ sec : e - concentrated ] .",
    "an example of such a noisy character is the function @xmath174 , given by @xmath175 for @xmath176 drawn from a gaussian distribution .",
    "another example of concentrated functions are the @xmath177-th bit functions , see section  [ sec : i - th - bit ] for details .",
    "let @xmath178 be a function for which one wants to learn its significant coefficients .",
    "the learner gets _ access _ to samples of the form @xmath179 .",
    "in the _ random access _ model the learner receives polynomially many samples for inputs @xmath180 drawn independently and uniformly at random .",
    "as opposed to this model , in the _ query access _ model the learner can query the function on any chosen input @xmath180 to receive the corresponding sample .",
    "an algorithm _ learns _ a function @xmath6 if it outputs a set containing all its significant fourier coefficients .",
    "formally , given a function @xmath6 and @xmath181 , the algorithm outputs a set @xmath119 , such that @xmath182 with probability at least @xmath183 .",
    "the main result of this subject ( see theorem  [ thm_sft_algo ] below ) is that there is a randomised , polynomial - time algorithm to compute a sparse approximation @xmath184 to a concentrated function in the query access model .",
    "in other words , concentrated functions are learnable in polynomial time .",
    "the chernoff bound gives an upper bound on the probability that a sum of independent random variables deviates from its expected value .",
    "one can therefore derive a lower bound for the number of samples needed to estimate the sum of independent random variables , with any required probability and error term .",
    "for a random variable @xmath185 on a set @xmath186 we denote by @xmath187 the expected value @xmath188 .",
    "[ chernoff ] let @xmath189 be a set of complex numbers such that @xmath190 for all @xmath191 .",
    "let @xmath192 be chosen independently and uniformly at randomly from @xmath189 . then @xmath193-\\frac{1}{m}\\sum_{i=1}^mx_i\\right| > \\lambda \\right]\\leq 2 \\mathrm{e}^{-\\lambda^2 m / 2 m^2 } \\enspace .\\ ] ]      we summarize the main notation and definitions in the following table .",
    "[ cols=\"<,<\",options=\"header \" , ]     most early works such as  @xcite require complicated algebraic manipulations such as tweaking and untweaking bits .",
    "using the sft algorithm  @xcite gives a uniform and clear approach .",
    "we present this solution to cm - hnp , using different terminology than the original one , for functions of norm @xmath161 , as the subsequent applications involve single bit functions ( with the convention that @xmath194 where @xmath8 is the @xmath177-th bit of @xmath41 ) .",
    "[ @xcite ] [ hnp_thm ] let @xmath195 be a function with a @xmath133-heavy fourier coefficient for @xmath196 . then , the chosen multiplier hidden number problem in @xmath38 with the function @xmath6 can be solved in polynomial time .    in particular",
    ", the theorem holds for every concentrated function .",
    "theorem [ hnp_thm ] rephrases theorem @xmath49 of @xcite .",
    "the latter work gives a polynomial time list - decoding algorithm for _ concentrated codes _ with corrupted code words ( theorem @xmath161 ) and subsequently a general list - decoding methodology for proving hardcore functions ( theorem @xmath49 ) .",
    "most subsequent works on hardcore bits adopt this coding - theoretic language .",
    "thus , in order to apply theorem @xmath49 of @xcite , these works use theorem @xmath161 of @xcite , which applies to concentrated codes .",
    "this caused these authors to put effort into proving that a particular code is concentrated .",
    "however , we emphasize that to apply the cm - hnp approach of  @xcite there is no need for the function to be concentrated .",
    "instead it suffices that the function has a significant fourier coefficient , and this is usually much easier to prove .",
    "we make this clear in our formulation of theorem  [ hnp_thm ] . in other words , while concentration is sufficient for a code to be _ recoverable _ it is not a necessary condition . for these reasons",
    "( and others ) we find the coding - theoretic language unhelpful and do not use it in this paper .",
    "we now sketch the proof of theorem  [ hnp_thm ] : run the sft algorithm on @xmath6 and @xmath25 to get short lists @xmath197 of @xmath133-heavy coefficients for each function , respectively . by the scaling property @xmath28 for every @xmath30 .",
    "therefore , for every @xmath198 for which @xmath199 is @xmath133-heavy there exists @xmath200 such that @xmath201 . the secret @xmath23 can be recovered efficiently . notice",
    "that while the hidden number problem takes place in a multiplicative group , this solution involves fourier analysis over an additive group .",
    "a template for algorithms for cm - hnp is the following : show that @xmath202 the `` partial information '' function @xmath6 has a significant coefficient , @xmath203 the function @xmath25 has a significant coefficient , and @xmath204 some ( recoverable ) relation between the coefficients of @xmath6 and @xmath25 exists .",
    "if one succeeds in showing these @xmath205 conditions , then using the sft algorithm one can solve this instance of cm - hnp .",
    "this template allows bit security researchers to look for settings where a solution to cm - hnp is already known ( namely , cases where these @xmath205 conditions are already known to hold , like single - bit functions over @xmath37 ) and try to convert their problem of interest to this setting .",
    "another case of interest is the _ multivariate hidden number problem _ ( mvhnp ) , which we define as follows .",
    "[ multivariate hidden number problem ] [ mvhnp_def ] let @xmath117 be a ring , let @xmath206 be a secret element in @xmath207 and let @xmath6 be a function defined over @xmath117 . find @xmath208 using oracle access to the function @xmath209 ) .",
    "specific instances of this problem are lwe and lwr .",
    "this problem is also related to bit security of diffie - hellman secrets in ( finite ) extension fields @xcite ( and similarly , to the polynomial version of lwe ) .",
    "similar to the solution to hnp in @xmath26 , one expects to have a solution in @xmath210 for the @xmath211 msb s . a result in this fashion",
    "is given by shparlinski in @xcite to the _",
    "polynomial hnp_. as mentioned in the final two sentences of  @xcite , this result also holds for general multivariate polynomials .",
    "however since mvhnp consists of a multivariate polynomials of degree one , it is possible to adjust this solution even when only @xmath212 msb s are given .",
    "this however , requires @xmath50 not polynomial in @xmath213 .",
    "the resulting algorithm is a rather straightforward lattice attack , very similar to known algorithms for lwe , that reduces the problem to the closest vector problem in a certain lattice .",
    "a related problem is the _ trace hnp _",
    "@xcite , which can be interpreted as mvhnp under some basis , due the linearity of trace .",
    "one can also define a chosen - multiplier version of the multivariate hidden number problem ( cm - mvhnp ) , as done in @xcite . by proving an analogue of the fourier scaling property in higher dimensions one can generalize theorem [ hnp_thm ] to the case of cm - mvhnp .",
    "we present some of the applications in cryptography of the sft algorithm .",
    "they are all based on reducing some problems to the cm - hnp or cm - mvhnp . in the following we assume to have an oracle @xmath214 that solves some problem , and",
    "show how to use this oracle to solve a harder problem , thus establishing the hardness equivalence between the two problems .",
    "the first application of the algorithm was given in  @xcite , where it is shown that the most - significant bit and least - significant bit are hardcore for the rsa function @xmath215 and for exponentiation @xmath216 , where @xmath217 is an element of prime order @xmath218 in some group .",
    "the results hold for imperfect oracles that have noticeable advantage over guessing .",
    "these results were already known , as @xcite first shows that the lsb is hardcore for the rsa function and @xcite shows that every bit is hardcore for both functions .",
    "nevertheless , the approach based on sft is more general ( holds for every function with significant coefficients ) and simpler .",
    "we explain how to derive these results .",
    "given an instance @xmath219 , we want to recover @xmath41 .",
    "since the values @xmath220 are public in the rsa setting , for every number @xmath221 one can calculate @xmath222 by @xmath223 .",
    "hence , given @xmath224 one can query the oracle on @xmath225 to get a bit of @xmath226 for every chosen @xmath221 .",
    "the problem therefore becomes the cm - hnp in @xmath227 , and this can be solved using the sft algorithm over the additive group @xmath228 , which has known order .",
    "similarly , given an instance @xmath229 , since @xmath217 and @xmath218 are public , one can calculate @xmath230 for every number @xmath221 by @xmath231 .",
    "thus , given @xmath232 one can query the oracle on @xmath233 to get a bit of @xmath226 for every chosen @xmath221 .",
    "the problem therefore becomes the cm - hnp in @xmath234 , and this can be solved using the sft algorithm over the additive group @xmath235 .",
    "this proves bit security results for the dlp in finite fields and elliptic curves .",
    "applying theorem  [ hnp_thm ] we find that all bits for those functions are hardcore .",
    "this result also holds for other functions , as _ rabin _",
    "( see  ( * ? ? ?",
    "* chapter 7 ) ) and the paillier trapdoor permutation ( see ( * ? ? ?",
    "* section 7 ) ) .",
    "an open question is to prove that single bits of diffie - hellman keys are hardcore .",
    "here we assume that we have an oracle @xmath214 that on @xmath236 returns a single bit of the diffie - hellman key @xmath237 . to interact with the oracle , notice that given @xmath238 one can calculate @xmath239 for any number @xmath221 .",
    "one can then query the oracle @xmath214 with @xmath240 and receive a bit of @xmath241 .",
    "this is how the hidden number problem was originally identified .",
    "this application does not correspond to the cm - hnp , since choosing the multiplier @xmath242 is equivalent to finding discrete logarithms for the base @xmath243 in @xmath244 .    for related schemes where the exponent is fixed , akavia  @xcite followed boneh - venkatesen  @xcite to get around this problem by assuming an `` advice '' that provides the discrete logarithms of the chosen multipliers @xmath242 to the base @xmath243 , but this is not realistic in actual applications ( see also our remark in section [ sec_subgroups ] ) .",
    "there is currently no method known to prove the hardness of single bits of diffie - hellman keys in the usual model . to overcome this problem , boneh and shparlinski  @xcite suggested ( in the context of elliptic curves ) a different model where the oracle @xmath214 takes as input a group homomorphism @xmath245 , the values @xmath246 , and then outputs @xmath247 .",
    "the approach is then to keep the inputs @xmath236 fixed and to use @xmath248 as the way to choose multipliers in the hidden number problem .",
    "we call this the _ representation changing model_. this model allows to convert the nonlinear diffie - hellman problem to an easier linear problem",
    ".    in this case one can think of @xmath23 as some secret element ( not necessarily a diffie - hellman key as the interaction with the oracle does not come from the key exchange setting ) , for which one receives @xmath249 .",
    "now assume @xmath23 has several components , @xmath250 , such that the oracle @xmath214 returns a bit of some component @xmath251 . in this model , if for some @xmath252 the family of functions @xmath253 is a family of isomorphisms , then getting a single bit of @xmath254 for chosen @xmath221 , gives rise to cm - hnp with single - bit functions .",
    "therefore , one can show hardness of single bits in this model , if one can find a group for which the condition on the functions holds ( note that one only recovers a component of @xmath23 , and therefore needs other methods for recovering the entire value @xmath23 ; for the case in which @xmath255 is a diffie - hellman key in @xmath256 that we describe below , one can use the results involving `` summing functions '' from @xcite and recover the entire secret @xmath208 from the algorithm that recovers a single ( fixed ) component @xmath257 ) .    as mentioned above ,",
    "this idea was introduced by boneh and shparlinski  @xcite for the lsb of ( each coordinate of ) diffie - hellman secrets in elliptic curve groups over prime fields .",
    "it is shown that changing the weierstrass equation is an isomorphism that gives rise to the desired functions .",
    "they then use the same technique as in @xcite to prove hardness of lsb .",
    "this approach was then applied by @xcite to every single bit of diffie - hellman secret keys in elliptic curves , using the sft algorithm ( that is , using the solution to cm - hnp for single - bit functions ) .",
    "the idea of changing group representations can also be used for finite fields .",
    "the works @xcite consider the computational diffie - hellman problem in groups @xmath258 for @xmath259 .",
    "they show that some polynomial representations give rise to the desired functions , and therefore reduce to cm - hnp .",
    "for a detailed overview of these techniques we refer the reader to the exposition of sections @xmath260 and subsections within of @xcite .",
    "this latter work gives applications of the solution for cm - mvhnp to show bit security of the computational diffie - hellman problem in groups of higher dimension in models similar to those mentioned above ; specifically , for elliptic curves over extension fields , and for @xmath258 with different representations of the field @xmath256 .",
    "we stress that these models do not tell a lot about the hardness of specific bits in real life implementations of diffie - hellman key exchange , where the representation of the group is fixed .",
    "one should interpret results in the representation changing model as follows : assuming hardness of cdh in a group @xmath0 ( where @xmath0 can be the multiplicative group of a finite extension field or an elliptic curve over a finite field ) , there is no algorithm that takes @xmath261 and outputs the @xmath177-th bit of @xmath262 for many representations of @xmath0 ( more precisely , for representations corresponding to the specific isomorphisms used in the reduction ) .",
    "nevertheless , given an instance @xmath263 in a specific representation of @xmath0 , this result does not tell us whether it is hard to compute a specific bit of the secret @xmath262 .",
    "indeed , this problem is still open .",
    "we assume the reader is familiar with the _ search _ and _ decision _ variants of the lwe and lwr problems .",
    "we only focus on the part of the reduction which involves the sft algorithm ; the entire reduction is more involved . by a `` hybrid '' argument ( see ( * ? ? ?",
    "* theorem 1 ) or ( * ? ? ?",
    "* lemma 3 ) ) , one can reduce the decision problem to distinguishing a single lwe sample .",
    "we therefore consider a single lwe sample . the standard method to show that the decision problem is as hard as the search problem is as follows .",
    "suppose one has a perfect decision oracle .",
    "given an lwe sample @xmath264 one makes a guess @xmath265 for @xmath266 and re - randomises the sample as @xmath267 .",
    "if the guess is correct ( i.e. , if @xmath268 ) then @xmath269 is a valid lwe sample whereas if the guess is incorrect then @xmath270 is uniform .",
    "hence the decision oracle determines whether the guess of the secret is correct .",
    "after at most @xmath271 queries to the decision oracle one can compute the secret .",
    "when the oracle is not perfect one will have to repeat this procedure with different inputs @xmath272 and follow majority rule . when the success rate of the oracle is low , one may not have enough initial inputs @xmath272 to satisfactorily apply the majority rule , and therefore would need to draw more samples .",
    "sample - preserving _ reduction is a reduction that uses only the initial given samples , and does not ask for more samples during the procedure . micciancio and",
    "mol  @xcite used the sft algorithm to show a sample - preserving search - to - decision reduction for the learning with errors problem .",
    "we explain this reduction .",
    "the standard method involves choosing a unit vector @xmath273 and guessing @xmath274 .",
    "micciancio and mol observe that one can choose any random vector @xmath275 and guess @xmath276 , then let the decision oracle to advise whether this guess is correct or incorrect .",
    "notice that one can try all possible @xmath50 guesses for the same value @xmath276 , and store the one on which the oracle replied that the guess is correct , or keep drawing new vectors @xmath275 and make only one guess for @xmath276 , denoted by @xmath277 .",
    "the latter approach is taken in @xcite , where if the oracle says that the guess for @xmath276 is incorrect ( more precisely , that the distribution is uniform ) , then one takes @xmath277 to be any value from the remaining @xmath278 possibilities .",
    "again , if the oracle is perfect then one determines the correct guesses and eventually obtains @xmath279 linear equations in @xmath208 and hence can solve the problem .",
    "however if the oracle is not perfect ( but has a noticeable advantage over a random guess ) , then for a selection of chosen vectors @xmath275 we have the values @xmath277 , for which @xmath280 with some noticeable bias from @xmath281 .",
    "in other words , we have query access to a noisy version of the function @xmath282 .",
    "this is an instance of cm - mvhnp with an unreliable oracle .",
    "one runs the sft algorithm on the function @xmath283 , which is a noisy version of @xmath284 , to find the significant coefficient , hence the character , and thus solve this problem .",
    "a very similar approach is taken in @xcite for the learning with rounding problem .",
    "we remark that the reduction is an average - case reduction , and does not hold for worst case .",
    "a sample - preserving reduction for the latter is still an open problem .",
    "the solution to the cm - hnp in @xmath37 ( theorem [ hnp_thm ] ) is based on fourier analysis in the additive group @xmath285 and it exploits the scaling property of the fourier transform for the function @xmath286 . in other words ,",
    "the function @xmath25 is the composition of @xmath6 with a linear map on @xmath37 .",
    "it is natural to consider whether this approach can be used for other algebraic groups ( such as elliptic curves and algebraic tori ) .",
    "the hidden number problem in the case of elliptic curves is to determine a secret point @xmath287 given samples @xmath288 where a typical choice for the function would be @xmath289 .",
    "the natural approach is to still use fourier analysis in the additive group @xmath290 but instead of composing with a linear map , to compose with a rational function ( e.g. , coming from the translation map @xmath291 ) .",
    "another generalisation would be fourier analysis in other groups @xmath292 .",
    "if such tools could be developed we might have an approach to the bit security of diffie - hellman key exchange in the group of elliptic curve points in certain models .",
    "there are also other interesting problems that could be approached with fourier analysis on general groups .",
    "for example , the authors of  @xcite raise the question whether it is possible to apply these results to the _ modular inversion hidden number problem_.    unfortunately , there is a major obstacle to applying the sft algorithm to these sorts of problems .",
    "namely , if @xmath6 is a concentrated function then the composition @xmath293 is concentrated only when @xmath22 is affine .",
    "the aim of this section is to explain this obstacle . since the translation map for the elliptic curve group law is a non - linear rational function",
    ", this explains why the method can not be directly applied to the elliptic curve hidden number problem .",
    "our argument also answers the question of  @xcite in the negative .",
    "let @xmath294 be a function and let @xmath295 , where @xmath296 is an efficiently computable function ( that depends on some unknown value @xmath23 ) . to generalise the proof of theorem  [ hnp_thm ] one needs the following three conditions :    1 .",
    "the function @xmath6 has significant coefficients ; 2 .",
    "the function @xmath25 has significant coefficients ; 3 .",
    "there exists a relation between the significant coefficients of @xmath6 and @xmath25 that allows to determine @xmath23 ( or at least a small set of candidates for @xmath23 ) .",
    "one special case is when @xmath6 is a constant function .",
    "then @xmath25 is also a constant function and both conditions 1 and 2 are satisfied .",
    "the problem is that a constant function can not tell us anything about the secret @xmath23 , and so condition 3 does not hold .",
    "hence , we need to focus on functions that are far from constant , which we formalise in our proof by requiring that @xmath297 ( in other words , @xmath6 is `` balanced '' ) .    having dispensed with this special case we focus on the first two conditions .",
    "we first consider the case when @xmath6 is concentrated .",
    "if @xmath298 is affine then we already know from the scaling and time - shifting properties that all fourier coefficients of @xmath6 are preserved , and so if @xmath6 is concentrated then @xmath25 is also concentrated .",
    "our aim is to show a converse to this fact : if @xmath51 is a rational function and if conditions 1 and 2 both hold then @xmath51 must be affine .",
    "this result is closely related to the beurling - helson theorem @xcite ( see @xcite for related results in @xmath26 ) and the work of green and konygin @xcite on the fourier transform of balanced functions .    for our result",
    "we need the following lemma ( * ? ? ?",
    "* lemma 7 ) ( a proof , for general fields @xmath256 , can be found in ( * ? ? ?",
    "* theorem 2 ) ) .",
    "[ lem_character_sum ] let @xmath299 be prime . for any polynomials",
    "@xmath300 $ ] such that the rational function @xmath301 is not constant in @xmath302 , the following bound holds @xmath303 where @xmath304 means that the summation is taken over all @xmath305 which are not poles of @xmath306 and @xmath307 and @xmath308 is the number of distinct zeros of @xmath217 in the algebraic closure of @xmath302 .",
    "we formulate the following result for functions on @xmath309 for a prime @xmath299 , but it can be generalised to finite fields @xmath256 with @xmath310 .",
    "let @xmath311 $ ] be polynomials where @xmath306 is not the constant zero .",
    "let @xmath312 be the set of zeroes in @xmath313 of @xmath306 .",
    "we define @xmath314 for all @xmath315 and @xmath316 otherwise ( since we will assume @xmath312 is small compared with @xmath299 it does not matter how we define @xmath22 on @xmath312 ) .",
    "recall that the definition of concentration applies to families of functions . to keep the formulation of the following proposition clean , we call a single function concentrated as explained after the definition above .",
    "[ prop_limit ] let @xmath299 be a sufficiently large prime .",
    "let @xmath6 be a concentrated function on @xmath309 such that @xmath317 and @xmath297 .",
    "let @xmath318 $ ] be polynomials of degree bounded by @xmath319 and let @xmath312 be the set of zeroes of @xmath306 .",
    "define @xmath320 as above and suppose this function is non - constant .",
    "let @xmath321 .",
    "if @xmath293 has any @xmath133-heavy fourier coefficients then @xmath322 for some @xmath323 .",
    "let @xmath324 and write @xmath325 .",
    "let @xmath326 . for contradiction",
    "we suppose @xmath327 for any @xmath328 .",
    "let @xmath329 .",
    "since @xmath6 is concentrated there is a set @xmath119 of size @xmath330 such that @xmath331 since @xmath297 it follows that @xmath119 does not contain zero .",
    "now consider @xmath332 .",
    "for every @xmath333 we have @xmath334 where we denote @xmath335 .",
    "since @xmath297 we can ignore the case @xmath139 and by our supposition that @xmath336 we know that there are no @xmath337 such that @xmath338 is constant .",
    "hence , the last sum is a character sum satisfying the conditions of lemma  [ lem_character_sum ] .",
    "furthermore , @xmath339 and so the value @xmath340 in lemma  [ lem_character_sum ] is bounded by @xmath341 .",
    "applying lemma [ lem_character_sum ] , we get that for every @xmath342 and every @xmath31 it holds that @xmath343 where @xmath344 .    now note that @xmath345 for the first term we note that @xmath346 and that @xmath347 implies @xmath348 and @xmath349 for all @xmath30 .",
    "therefore @xmath350    we apply the triangle inequality on the first sum and the cauchy - schwarz inequality on the second .",
    "let @xmath351 and write @xmath352 and @xmath353 .",
    "then using lemma [ lem_character_sum ] we get @xmath354 since @xmath355 we have that this bound ( similarly for the earlier bound @xmath356 ) is negligible , so we have for example @xmath357    from parseval s identity @xmath358 .",
    "therefore , by the cauchy - schwarz inequality we have @xmath359 then @xmath360    finally , combining the two bounds we get @xmath361 therefore , for every @xmath31 the coefficient @xmath362 is not @xmath133-heavy for any noticeable @xmath133.this gives the required contradiction and so we conclude that @xmath22 is affine .",
    "proposition  [ prop_limit ] shows that if @xmath6 is concentrated ( and far from constant ) and @xmath293 has significant coefficients , then @xmath22 is affine .",
    "it is natural to wonder whether the condition that @xmath6 is concentrated is necessary .",
    "in fact , the result can not be weakened in general : if @xmath314 is non - affine and invertible almost everywhere ( such as a m \" obius function @xmath363 where @xmath364 ) then @xmath365 is such that @xmath40 has a significant coefficient at @xmath30 and @xmath293 has a significant coefficient at @xmath31 .    however , a version of proposition  [ prop_limit ] is true for some non - concentrated functions of interest .",
    "since theorem  [ hnp_thm ] does not require the function to be concentrated , it is of interest to also show that composing with non - affine @xmath320 is an obstruction to the solution to cm - hnp for these functions as well .",
    "hence , for the rest of this section we consider a ` noisy character ' , @xmath366 .",
    "we first show that these functions have a significant coefficient , then we show that @xmath293 does not have a significant coefficient when @xmath22 is not affine .    to formalise the problem we think of @xmath176 as a random variable from some distribution ( e.g. , a discrete gaussian or a uniform distribution on some small interval compared with @xmath46 ) .",
    "we treat @xmath176 as being independent of @xmath41 , in which case we can write @xmath367 to show that @xmath368 is large it suffices to give a lower bound for @xmath369 .",
    "we do this by following an argument due to bleichenbacher  @xcite .",
    "bleichenbacher defines the _ bias _ of a random variable @xmath185 on @xmath370 as @xmath371 assume @xmath185 is the uniform distribution in some interval @xmath372 $ ] for some @xmath373",
    ". then @xmath374 some properties of @xmath375 appear in lemma @xmath161 of @xcite .",
    "since the latter is a geometrical progression , @xmath376    suppose @xmath176 follows the uniform distribution @xmath185 .",
    "that is , for each @xmath377 the value @xmath176 is chosen uniformly and independently at random in @xmath372 $ ] . from linearity",
    "it is easy to see that @xmath378    it is obvious that if @xmath379 then @xmath380 . in applications @xmath176 usually represents some given bits , and so it is natural to restrict @xmath381 as we do , though the following argument also holds given a fraction of a bit . for @xmath381 one",
    "has for different @xmath381 . ]",
    "@xmath382 , and so @xmath383 . the desired lower bound is provided .",
    "a similar approach holds when @xmath45 follows a gaussian distribution . in this case",
    "the size of the bias is even larger , as @xmath384 on a large set ( and @xmath176 is small on an even larger set ) and so most of the energy is distributed around zero .",
    "hence , we have established that a noisy character has a significant coefficient .",
    "finally , we address the result of proposition  [ prop_limit ] for such a function .",
    "let @xmath22 be as in proposition [ prop_limit ] , and let @xmath176 given by the uniform distribution ( over some interval in @xmath37 ) or by a gaussian distribution .",
    "if @xmath385 has a significant coefficient then @xmath322 for some @xmath386 .",
    "we observe that for every @xmath31 @xmath387 where @xmath388 .",
    "since @xmath389 , it suffices to upper - bound @xmath390 .",
    "such a bound follows from lemma [ lem_character_sum ] in the same way as in the proof of proposition  [ prop_limit ] .",
    "another limitation on the applications of the sft algorithm is the following .",
    "suppose that the multipliers in the hidden number problem are drawn from some set @xmath391 .",
    "one can consider the multipliers to be in a proper subgroup @xmath392 , as done in @xcite .",
    "it is not clear how to apply the sft algorithm to solve this variant of the ( chosen multiplier ) hidden number problem .",
    "specifically , the chosen queries in the algorithm have to be correlated , but it is not guaranteed that these correlated queries will all lie in the same subgroup . if the index @xmath393 $ ] is small ( e.g. , @xmath393 = 2 $ ] , as in the case of the set of squares in @xmath394 ) then the issue can be managed , but if @xmath393 $ ] is large then no results are known . therefore , for results ( on diffie - hellman related schemes ) that rely on advice of the form of discrete logarithms to some base @xmath217 ( as in @xcite ) , if @xmath217 generates a relatively small subgroup , it is not guaranteed that the desired correlated multipliers are indeed in the group generated by @xmath217 .",
    "this restricts , for example , the result given in ( * ? ? ?",
    "* section 5 ) .",
    "this observation is similar to the one in ( * ? ? ?",
    "* section 2.5 ) , and was handled in ( * ? ? ?",
    "* section 5 ) and @xcite since the set of squares in @xmath395 has index 2 in @xmath395 .",
    "we thank ben green for providing some insights and references ."
  ],
  "abstract_text": [
    "<S> ideas from fourier analysis have been used in cryptography for three decades . </S>",
    "<S> akavia , goldwasser and safra unified some of these ideas to give a complete algorithm that finds significant fourier coefficients of functions on any finite abelian group . </S>",
    "<S> their algorithm stimulated a lot of interest in the cryptography community , especially in the context of `` bit security '' . </S>",
    "<S> this paper attempts to be a friendly and comprehensive guide to the tools and results in this field . </S>",
    "<S> the intended readership is cryptographers who have heard about these tools and seek an understanding of their mechanics , and their usefulness and limitations . </S>",
    "<S> a compact overview of the algorithm is presented with emphasis on the ideas behind it . </S>",
    "<S> we survey some applications of this algorithm , and explain that several results should be taken in the right context . </S>",
    "<S> we point out that some of the most important bit security problems are still open . </S>",
    "<S> our original contributions include : an approach to the subject based on modulus switching ; a discussion of the limitations on the usefulness of these tools ; an answer to an open question about the modular inversion hidden number problem .    </S>",
    "<S> keywords : significant fourier transform , goldreich - levin algorithm , kushilevitz - mansour algorithm , bit security of diffie - hellman .    </S>",
    "<S> = 1.8pt    = 1.8pt </S>"
  ]
}
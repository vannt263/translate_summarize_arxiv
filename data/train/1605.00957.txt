{
  "article_text": [
    "content based image retrieval ( cbir ) has been an active research topic in computer vision and multimedia in the last decades , and it is still very relevant due to the emergence of social networks and the creation of web - scale image databases .",
    "most of the works have addressed the development of effective visual features , from engineered features like sift and gist to , more recently , learned features such as cnns @xcite . to obtain scalable cbir systems features are typically compressed or hashed , to reduce their dimensionality and size .",
    "however , research on data structures that can efficiently index these descriptors has attracted less attention , and typically simple inverted files ( e.g.  implemented as hash tables ) are used .    in this paper",
    "we address the problem of approximate nearest neighbor ( ann ) image retrieval proposing a simple and effective data structure that can greatly reduce the need to perform any comparison between the descriptor of the query and those of the database , when the probability of a match is very low . considering the proverbial problem of finding a needle in a haystack , the proposed system is able to tell when the haystack probably contains no needle and thus the search can be avoided completely .    to achieve this",
    "we propose a novel variation of an effective hashing method for cnn descriptors , and use this code to perform ann retrieval in a database .",
    "to perform an immediate rejection of a search that should not return any result we store the hash code in a bloom filter , i.e.   a space efficient probabilistic data structure that is used to test the presence of an element in a set . to the best of our knowledge",
    "this is the first time that this data structure has been proposed for image retrieval since , natively , it has no facility to handle approximate queries .",
    "we perform extensive experimental validation on three standard datasets , showing how the proposed hashing method improves over state - of - the - art methods , and how the data structure greatly improves computational cost and makes the system suitable for application to mobile devices and distributed image databases .",
    "_ * visual features . * _ sift descriptors have been successfully used for many years to perform cbir .",
    "features have been aggregated using bag - of - visual - words and , with improved performance , using vlad @xcite and fisher vectors @xcite .",
    "the recent success of cnns for image classification tasks has suggested their use also for image retrieval tasks .",
    "et al . _",
    "@xcite have proposed the use of different layers of cnns as features , compressing them with pca to reduce their dimensionality , and obtaining results comparable with state - of - the - art approaches based on sift and fisher vectors .",
    "aggregation of local cnn features using vlad has been proposed in @xcite , while fisher vectors computed on cnn features of objectness window proposals have been used in @xcite .    _",
    "* hashing . * _ one of the most successful visual feature hashing methods presented in the literature is product quantization ( pq ) , proposed by jgou _",
    "_  @xcite . in this method",
    "the feature space is decomposed into a cartesian product of subspaces with lower dimensionality , that are quantized separately .",
    "the method has obtained state - of - the - art results on a large scale sift and gist features dataset .",
    "the good performance of the product quantization method has led to development of several related methods that introduce variations and improvements .",
    "norouzi and fleet @xcite have built two variations of k - means ( orthogonal k - means and cartesian k - means ) upon the idea of compositionality of the pq approach .",
    "et al . _",
    "@xcite have improved pq minimizing quantization distortions w.r.t .",
    "space decomposition and quantization codebooks , in their opq method ; he _ et al . _",
    "@xcite have approximated the euclidean distance between codewords in k - means method , proposing an affinity - preserving technique .",
    "more recently , kalantidis and avrithis @xcite have proposed to use a local optimization over a rotation and a space decomposition , applying a parametric solution that assumes a normal distribution , in their vector quantization method ( lopq ) .",
    "most of recent approaches for cnn features hashing are based on simultaneous learning of image features and hash functions as in the method of gao _ et al . _",
    "@xcite , that uses visual and label information to learn a relative similarity graph , to reflect more precisely the relationship among training data .",
    "unsupervised two steps hashing of cnn features has been proposed by lin _",
    "et al . _",
    "@xcite . in the first step",
    "stacked restricted boltzmann machines learn binary embedding functions , then fine tuning is performed to retain the metric properties of the original feature space .    _",
    "* indexing . *",
    "_ typically hashed features are stored in inverted files .",
    "a few works have studied other data structures to speed up approximate nearest neighbors .",
    "babenko and lempitsky @xcite have proposed an efficient similarity search method that generalizes the inverted index ; the method , called inverted multi - index ( multi - d - adc ) , replaces vector quantization inside inverted indices with product quantization , and builds the multi - index as a multi - dimensional table .",
    "et al . _",
    "@xcite have proposed an hashing method that improves over pq by performing multiple assignments to k - means centroids , and have stored the hash codes in marisa tries to greatly compress their storage .",
    "_ * bloom filter . * _ bloom filter and its many variants have received an extremely limited attention from the vision and multimedia community , so far .",
    "inoue and kise @xcite have used bloomier filters ( i.e.  an associative array of bloom filters ) to store pca - sift features of an objects dataset more efficiently than using an hash table ; they perform object recognition by counting how many features stored in the filters are associated with an object .",
    "bloom filter has been used by danielsson @xcite as feature descriptor for matching keypoints .",
    "similarity of descriptors is evaluated using the  union \" operator .",
    "srijan and jawahar have proposed to use bloom filters to store compactly the descriptors of an image , and use the filter as postings of an inverted file index in @xcite .",
    "in the proposed approach , differently from @xcite , we learn a vector quantizer separately from the cnn features , so to easily replace different and pre - trained cnn networks for feature extraction , without need of retraining .",
    "moreover , we propose to include bloom filters into feature indexing structures to improve the speed of queries .",
    "bloom filters act as gatekeepers that rule out immediately , with a very limited memory cost , if a query should be completely performed or if it can be avoided .",
    "the proposed data structure is very suitable for mobile and distributed applications .",
    "the proposed approach is a variation of @xcite , which is an efficient method for mobile visual search based on a multiple assignment k - means hashing schema ( _ multi - k - means _ ) that obtained very good results , compared to pq , on the bigann dataset .",
    "the first step of the method consists in learning a standard k - means dictionary with a small number of centroids ( to maintain a low computational cost ) .",
    "each centroid is associated to a bit of the hash code , that has thus length equal to the number of centroids .",
    "the bit is set to 1 if the feature is assigned to the centroid , 0 otherwise .",
    "a feature can be assigned to more than one centroid , and it is assigned to it if the distance from the centroid is less than the mean distance from all the centroids ( figure [ fig : bin - method ] , top ) . instead , in this work we select a fixed number @xmath1 of distances and we set to 1 all the bits associated to the smaller @xmath1 distances ( figure [ fig : bin - method ] , bottom ) . in the following we refer to this method as minx .",
    "this change has proven to be more efficient when coding cnn feature descriptors , that were used in the experiments .",
    "( minx method ) . ]",
    "approximate nearest neighbor retrieval of image descriptors is performed in two steps : in the first step is performed an exhaustive search over the binary codes using hamming distances , to reduce negative effects of quantization errors .",
    "all the binary codes with hamming distance below a threshold are selected . in the second step",
    "the candidate neighbors are ranked according to the distance computed using the full feature vector using _ cosine distance _ , that proved to be more effective than @xmath2 during the experiments .      to improve search of feature vectors",
    "we also introduce the use of _ bloom filters _ @xcite . typically this type of structures are used to speed up the answers in a key - based storage system ( figure [ fig : bloom_filters ] ) .",
    "a bloom filter is an efficient probabilistic data structure used to test if an element belongs to a set or not .",
    "this structure works with binary signatures , and can provide false positive response but not false negative and more elements are inserted into the structure and more high is the probability to obtain a false positive . to insert an element inside a bloom filter we need to define @xmath3 hash functions which locate @xmath3 positions inside the array , setting them to 1 .    to check the presence of an element inside a bloom filter we to compute the @xmath3 hash functions over the element and check the related positions inside the array .",
    "if just one bit of these positions is equal to 0 it means that the element is not present inside the array ; if all the checked bits are equal to 1 it means that either the element is inside the array or we have a false positive .",
    "we used the method of @xcite to create the @xmath3 functions from just two hash functions .",
    "a useful property of bloom filter is that we can measure the presence of a false positive with probability : @xmath4    where @xmath5 is the bit number of the array , @xmath6 is the number of inserted items , @xmath7 is the probability that one position of the array is equal to 0 , and @xmath3 is the number of hash functions .",
    "we can obtain the optimal value @xmath3 which minimizes false positive probability : @xmath8    supposed that @xmath9 we can write out @xmath10 like @xmath11    so @xmath6 is strictly related to @xmath5 , and in general @xmath12 it is a good compromise .    storing in the bloom filter hash codes that are designed for ann , as those of sect .",
    "[ sec : quantization - method ] , results in a data structure that is similar , from a practical point of view , to distance - sensitive bloom filters proposed in @xcite , where lsh functions are used as @xmath3 hash functions .",
    "our proposed retrieval system merges the methods introduced in [ sec : quantization - method ] and [ sec : bloom - method ] . regarding visual feature hashing",
    "we have applied the proposed method to cnns features .",
    "our system ( figure [ fig : system ] ) provides a initial phase were descriptors are extracted from base images , binarized following one of the methods introduced in [ sec : quantization - method ] and saved inside a data structure composed by a set of inverted files of hashes implementing an horizontal partition of data ( allowing to distribute the database as  shard \" ) , each one guarded by a bloom filter .",
    "the hash code is also added to the bloom filter of the corresponding inverted file .    during the search phase",
    "we extract the cnn descriptor from query images , compute the hash code , and check the presence of the hash in the bloom filters , each of which guard a subset of the base .",
    "if one of this bloom filters gives a positive response ( this means that we have a positive or a false positive match ) , all the hash codes within an hamming distance threshold are used to select the full feature vector .",
    "this provides a great speedup in the approximate nearest neighbor retrieval since we consider only descriptors from base coded by a bloom filter , and below the hamming threshold value . for each resulting original cnn descriptor",
    "we compute the distance and we rearrange results to obtain a ranked list of vectors .",
    "we tested our system using three standard dataset : inria holidays @xcite , oxford 5k @xcite and paris 6k @xcite .",
    "we used the query images and ground truth provided for each dataset , adding 100,000 distractor images from _ flickr 100 _ @xcite .",
    "when testing on a dataset training is performed using the other two datasets .",
    "features have been hashed to 64 bits binary codes , a length that has proved to be the best compromise between compactness and representativeness .",
    "other parameters used for hashing were :     number of @xmath1 nearest distances used in the hash code computation ( @xmath13 ) ;     hamming distance threshold @xmath14 .",
    "for the sake of brevity , in the following we report only the best combinations . for the evaluation we used the mean average precision ( map ) metric .",
    "the cnn features used in the following experiments have been extracted using the 1024d average pooling layer of googlenet @xcite , that in initial experiments has proven to be more effective than the fc7 layer of vgg @xcite used in @xcite .      in the first experiment",
    "we evaluate the effects of the method parameters , comparing the proposed hashing approach ( minx ) with the original method of @xcite ( mean ) , a baseline that uses no hashing , and several state - of - the - art methods , among which the recent uth method @xcite .",
    "the best combinations of minx are reported , compared on the three datasets in terms of map . as expected",
    "the uncompressed features perform better , but the min6 setup , with an hamming distance @xmath15 has comparable results , and greatly outperforms any state - of - the - art hashing method .",
    "time results in seconds , for inria holidays dataset , are reported in fig .",
    "[ fig : inria - time ] . a @xmath16 speedup can be obtained with hamming distances between 6 and 10 .",
    "similar results , not reported here for the sake of brevity , have been obtained on oxford 5k and paris 6k datasets .        in the second experiment",
    "we evaluate a use case in which a database of images is queried with a large number of images that do not belong to it .",
    "hash codes have been computed with different variants of the proposed hashing method .",
    "the database contains the paris 6k images , and it is queried with all the query images of paris 6k and all the 100,000 distractor images . a different number of bloom filters , with different sizes is tested and compared against a baseline that does not use any bloom filter . map values and query time in seconds are reported in tab .",
    "[ tab : map - bf - paris6k ] ( map in the first row and time in the second ) .",
    "the speedup obtained is about @xmath17 since a large number of distractor queries are immediately stopped by the system ; the slight increase in map is due to the beneficial effect of elimination of some false positives of the paris 6k images , that do not result in retrieving wrong dataset images .    in the third experiment",
    "we evaluate a more challenging and large scale experiment : three datasets composed by distractor images and holidays , paris 6k and oxford 5k images are built and stored in the proposed data structure .",
    "the standard dataset query images are then used to query the system . in this case",
    "we have used 10 filters to  shard \" the database that , thus , can be distributed . tab .  [",
    "tab : map - bf - needle ] reports the results in terms of map and time ( secs . ) . for the sake of space we report only results for min6 and hamming threshold 10 . using the proposed method results in speed improvement of @xmath17 while improving map , except the holidays dataset that only improves speed .",
    "the size of each bloom filter is @xmath18 kb , allowing the use of the method in a mobile environment , by distributing the bloom filters to the mobile devices and maintaining the shards of the database on the backend .",
    "in this paper we have presented a simple and effective method for cnn feature hashing that outperforms current state - of - the - art methods on standard datasets .",
    "a novel indexing structure , where bloom filters are used as gatekeepers to inverted files storing the hash codes , results in a @xmath17 speedup for ann , without loss in map ."
  ],
  "abstract_text": [
    "<S> this paper presents a novel method for efficient image retrieval , based on a simple and effective hashing of cnn features and the use of an indexing structure based on bloom filters . </S>",
    "<S> these filters are used as gatekeepers for the database of image features , allowing to avoid to perform a query if the query features are not stored in the database and speeding up the query process , without affecting retrieval performance . </S>",
    "<S> thanks to the limited memory requirements the system is suitable for mobile applications and distributed databases , associating each filter to a distributed portion of the database . </S>",
    "<S> experimental validation has been performed on three standard image retrieval datasets , outperforming state - of - the - art hashing methods in terms of precision , while the proposed indexing method obtains a @xmath0 speedup . </S>"
  ]
}
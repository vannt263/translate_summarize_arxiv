{
  "article_text": [
    "there are many problems in computational physics that involve solving partial differential equations ( pdes ) in complex geometries .",
    "examples include fluid flows in complicated systems , vein networks in plant leaves , and tumours in human bodies .",
    "standard solution methods for pdes in complex domains typically involve triangulation and unstructured grids .",
    "this rules out coarse - scale discretizations and thus efficient geometric multi - level solutions .",
    "also , mesh generation for three - dimensional complex geometries remains a challenge , in particular if we allow the geometry to evolve with time .    in the past several years",
    ", there has been much effort put into the development of numerical methods for solving partial differential equations in complex domains .",
    "however , most of these methods typically require tools not frequently available in standard finite element and finite difference software packages . examples of such approaches include the extended and composite finite element methods ( e.g. , @xcite ) , immersed interface methods ( e.g. , @xcite ) , virtual node methods with embedded boundary conditions ( e.g. , @xcite ) , matched interface and boundary methods ( e.g. , @xcite ) , modified finite volume / embedded boundary / cut - cell methods / ghost - fluid methods ( e.g. , @xcite ) . in another approach , known as the fictitious domain method ( e.g. , @xcite ) ,",
    "the original system is either augmented with equations for lagrange multipliers to enforce the boundary conditions , or the penalty method is used to enforce the boundary conditions weakly .",
    "see also @xcite for a review of numerical methods for solving the poisson equation , the diffusion equation and the stefan problem on irregular domains .",
    "an alternate approach for simulating pdes in complex domains , which does not require any modification of standard finite element or finite difference software , is the diffuse - domain method . in this method ,",
    "the domain is represented implicitly by a phase - field function , which is an approximation of the characteristic function of the domain .",
    "the domain boundary is replaced by a narrow diffuse interface layer such that the phase - field function rapidly transitions from one inside the domain to zero in the exterior of the domain .",
    "the boundary of the domain can thus be represented as an isosurface of the phase - field function .",
    "the pde is then reformulated on a larger , regular domain with additional source terms that approximate the boundary conditions .",
    "although uniform grids can be used , local grid refinement near domain boundaries improves efficiency and enables the use of smaller interface thicknesses than are achievable using uniform grids .",
    "a related approach involves the level - set method @xcite to describe the implicitly embedded surface and to obtain the appropriate surface operators ( e.g. , @xcite ) .",
    "the diffuse - domain method ( ddm ) was introduced by kockelkoren et al.@xcite to study diffusion inside a cell with zero neumann boundary conditions at the cell boundary ( a similar approach was also used in @xcite using spectral methods ) .",
    "the ddm was later used to simulate electrical waves in the heart @xcite and membrane - bound turing patterns @xcite .",
    "more recently , diffuse - interface methods have been developed for solving pdes on stationary @xcite and evolving @xcite surfaces .",
    "diffuse - domain methods for solving pdes in complex evolving domains with dirichlet , neumann and robin boundary conditions were developed by li et al.@xcite and by teigen et al .",
    "@xcite who modelled bulk - surface coupling .",
    "the ddm was also used by aland et al .",
    "@xcite to simulate incompressible two - phase flows in complex domains in 2d and 3d , and by teigen et al .",
    "@xcite to study two - phase flows with soluble surfactants .",
    "li et al .",
    "@xcite showed that in the ddm there exist several approximations to the physical boundary conditions that converge asymptotically to the correct sharp - interface problem .",
    "li et al .",
    "presented some numerical convergence results for a few selected problems and observed that the choice of boundary condition can significantly affect the accuracy of the ddm .",
    "however , li et al .",
    "did not perform a quantitative comparison between the different boundary - condition approximations , nor did they estimate convergence rates .",
    "further , li et al .  did not address the source of the different levels of accuracy they observed for the different boundary - condition approximations .    in the context of dirichlet boundary conditions ,",
    "franz et al.@xcite recently presented a rigorous error analysis of the ddm for a reaction - diffusion equation and found that the method converges only with first - order accuracy in the interface thickness parameter @xmath0 , which they confirmed numerically .",
    "similar results were obtained numerically by reuter et al .",
    "@xcite who reformulated the ddm using an integral equation solver .",
    "reuter et al .  demonstrated that their generalized ddm , with appropriate choices of approximate surface delta functions , converges with first - order accuracy to solutions of the poisson equation with dirichlet boundary conditions .",
    "here , we focus on neumann and robin boundary conditions and we present a matched asymptotic analysis of general diffuse - domain methods in a fixed complex geometry , focusing on the poisson equation for robin boundary conditions and a steady reaction - diffusion equation for neumann boundary conditions",
    ". however , our approach applies to transient problems and more general equations in the same way as shown in @xcite .",
    "our analysis shows that for certain choices of the boundary condition approximations , the ddm is second - order accurate in @xmath0 , which in practice is proportional to the smallest mesh size .",
    "however , for other choices the ddm is only first - order accurate .",
    "this helps to explain why the choice of boundary condition approximation is important for rapid global convergence and high accuracy .",
    "further , inspired by the work of karma and rappel @xcite and almgren @xcite , who incorporated second - order corrections in their phase field models of crystal growth and by the work of folch et al.@xcite who added second - order corrections in phase - field models of advection , we also suggest correction terms that may be added to yield a more accurate version of the diffuse - domain method .",
    "simple modifications of first - order boundary condition approximations are proposed to achieve asymptotically second - order accurate schemes .",
    "our analytic results are confirmed numerically for selected test problems .",
    "the outline of the paper is as follows . in [ sec : dda ] we introduce and present an analysis of general diffuse - domain methods . in [ sec : discretization ] the numerical methods are described , and in [ sec : results ] the test cases are introduced and numerical results are presented and discussed .",
    "we finally give some concluding remarks in [ sec : conclusion ] .",
    "the main idea of the ddm is to extend pdes that are defined inside complex and possibly time - dependent domains into larger , regular domains . as a model problem ,",
    "consider the poisson equation in a domain @xmath3 , @xmath4 with neumann or robin boundary conditions . as shown in li et al .",
    "@xcite , the results for the poisson equation can be used directly to obtain diffuse - domain methods for more general second - order partial differential equations in evolving domains .",
    "the ddm equation is defined in a larger , regular domain @xmath5 as @xmath6 see [ fig : ddadomain ] . here",
    "@xmath7 approximates the characteristic function of @xmath3 , @xmath8 and bc is chosen to approximate the physical boundary condition , cf.@xcite .",
    "this typically involves diffuse - interface approximations of the surface delta function .",
    "a standard approximation of the characteristic function is the phase - field function , @xmath9 here @xmath0 is the interface thickness and @xmath10 is the signed - distance function with respect to @xmath11 , which is taken to be negative inside @xmath3 .",
    "( 0,0 ) rectangle(9,5 ) ; ( 2,1 ) .. controls ( 1,1 ) and ( 1,4 ) .. ( 3,3.5 ) .. controls ( 5,3 ) and ( 4,5 ) .. ( 6,4 ) node[above right ] @xmath11 .. controls ( 8,3 ) and ( 8,1.5 ) .. ( 7,1.5 ) .. controls ( 3,1.5 ) and ( 3,1 ) .. ( 2,1 ) ; at ( 2.3,2.3 ) @xmath3 ; at ( 7.6,0.8 ) @xmath12 ; at ( 4.8,2.4 ) @xmath13 ; at ( 5.4,0.5 ) @xmath14 ;    as li et al .",
    "@xcite described , there are a number of different choices for bc in [ ddm ] . for example , in the neumann case , where @xmath15 on @xmath11 , one may take : @xmath16 in the robin case , where @xmath17 on @xmath11 , one may use analogous approximations : @xmath18 note that the terms @xmath19 and @xmath20 approximate the surface delta function .",
    "following li et al .",
    "@xcite we assume that @xmath21 is extended constant in the normal direction off @xmath11 and that @xmath22 is smooth up to @xmath11 and is extended into the exterior of @xmath3 constant in the normal direction .",
    "we next perform an asymptotic analysis to estimate the rate of convergence of the corresponding approximations .      to show asymptotic convergence , we need to consider the expansions of the diffuse - domain variables in powers of the interface thickness @xmath0 in regions close to and far from the interface .",
    "these are called inner and outer expansions , respectively .",
    "the two expansions are then matched in a region where both are valid , see [ fig : regions ] , which provides the boundary conditions for the outer variables .",
    "we refer the reader to @xcite and @xcite for more details and discussion of the general procedure .",
    "[ yscale=0.8 , interface/.style = thick , inner/.style = fill = gray , dotted , fill opacity=0.2 , outer/.style = fill = gray , dashed , fill opacity=0.3 , labels/.style = above right , font= , ]    ( 0,0 ) rectangle(9,5 ) ; ( 2,1 ) .. controls ( 1,1 ) and ( 1,4 ) .. ( 3,3.5 ) .. controls ( 5,3 ) and ( 4,5 ) .. ( 6,4 ) .. controls ( 8,3 ) and ( 8,1.5 ) .. ( 7,1.5 ) node ( g1 ) .. controls ( 3,1.5 ) and ( 3,1 ) .. ( 2,1 ) ; at ( 7.4,0.4 ) @xmath12 ; at ( 2.0,2.3 ) @xmath3 ; ( a ) at ( 2.4,1.6 ) ; ( b ) at ( 3.4,1.6 ) ; ( c ) at ( 2.4,0.6 ) ; ( d ) at ( 3.4,0.6 ) ; ( c ) rectangle ( b ) ;    \\(a )  ( 0 , 3 ) ; ( b )  ( 8 , 3 ) ; ( c )  ( 0,-3 ) ; ( d )  ( 8,-3 ) ; ( 0,-3 ) rectangle ( 8,3 ) ; ( a )  ( 0 ,",
    "3 ) ; ( b )  ( 8 , 3 ) ;    ( 0,0 ) .. controls ( 2 , 0.5 ) and ( 3 , 0.5 ) .. ( 4,0 ) .. controls ( 5,-0.5 ) and ( 6,-1.0 ) .. ( 8,0 ) ;    ( 0,2.0 ) .. controls ( 2,2.5 ) and ( 3,2.5 ) .. ( 4,2.0 ) .. controls ( 5,1.5 ) and ( 6,1.0 ) .. ( 8,2.0 )  ( 8,-2.0 ) .. controls ( 6,-3.0 ) and ( 5,-2.5 ) .. ( 4,-2.0 ) .. controls ( 3,-1.5 ) and ( 2,-1.5 ) .. ( 0,-2.0 )  cycle ;    ( 0,3.0 ) ",
    "( 8,3.0 ) ",
    "( 8,1.0 ) .. controls ( 6,0.0 ) and ( 5,0.5 ) .. ( 4,1.0 ) .. controls ( 3,1.5 ) and ( 2,1.5 ) .. ( 0,1.0 )  cycle ; ( 0,-3.0 )  ( 8,-3.0 ) ",
    "( 8,-1.0 ) .. controls ( 6,-2.0 ) and ( 5,-1.5 ) .. ( 4,-1.0 ) .. controls ( 3,-0.5 ) and ( 2,-0.5 ) .. ( 0,-1.0 )  cycle ;    at ( 0.1,2.25 ) outer region ; at ( 0.1,1.25 ) overlapping region ; at ( 0.1,0.25 ) inner region ; ( 8.1 , 3.0 )  node[right=0.5em ] @xmath3 ( 8.1 , 0.1 ) ; ( 8.1,-0.1 )  node[right=0.5em ] @xmath12 ( 8.1,-3.0 ) ; at ( 8.1,0 ) @xmath11 ;    the outer expansion for the variable @xmath23 is simply @xmath24 the outer expansion of an equation is then found by inserting the expanded variables into the equation .",
    "the inner expansion is found by introducing a local coordinate system near the interface @xmath11 , @xmath25 where @xmath26 is a parametrization of the interface , @xmath27 is the interface normal vector that points out of @xmath3 , @xmath28 is the stretched variable @xmath29 and @xmath30 is the signed distance from the point @xmath31 to @xmath11 . in the local coordinate system ,",
    "the derivatives become @xmath32 where @xmath33 is the curvature of the interface .",
    "note that @xmath34 .",
    "the inner variable @xmath35 is now given by @xmath36 and the inner expansion is @xmath37    to obtain the matching conditions , we assume that there is a region of overlap where both the expansions are valid . in this region , the solutions have to match .",
    "in particular , if we evaluate the outer expansion in the inner coordinates , this must match the limits of the inner solutions away from the interface , that is @xmath38 insert the expansions into [ eq : outer , eq : inner ] to get @xmath39 the terms on the left - hand side can be expanded as a taylor series , @xmath40 where @xmath41 and @xmath42 .",
    "now we end up with the matching equation @xmath43 which must hold when the interface width is decreased , that is @xmath44 . in the matching region",
    "it is required that @xmath45 . under this condition , if we let @xmath46 , we get the following asymptotic matching conditions : @xmath47 and as @xmath46 , @xmath48 where the quantities on the right - hand side are the limits from the interior ( @xmath49 ) and exterior ( @xmath50 ) of @xmath3 . here",
    "@xmath51 means that the expressions approach equality when @xmath52 .",
    "that is , @xmath51 is defined such that if some function @xmath53 , then we have @xmath54 .",
    "now we are ready to consider the poisson equation with robin boundary conditions , @xmath55 where @xmath56 .",
    "consider a general ddm approximation , @xmath57 where @xmath58 represents the bc approximation in the ddm .",
    "the scaling factor @xmath59 is taken for later convenience .",
    "if we assume that @xmath58 is local to the interface ( e.g. , vanishes to all orders in @xmath0 away from @xmath11 ) and that @xmath22 is independent of @xmath0 ( e.g. , is smooth in a neighbourhood of @xmath11 and is extended constant in the normal direction out of @xmath3 ) , which is the case for the approximations bc1 and bc2 given in [ eq : bc_robin ] , then the outer solution to this equation when @xmath60 satisfies @xmath61 now , if @xmath62 satisfies [ eq : poiss_robin ] and @xmath63 then the outer expansion @xmath64 and the ddm is asymptotically first - order accurate . however , if @xmath65 , then @xmath66 and the ddm is asymptotically second - order accurate . determining which of these is the case requires matching the outer solutions to the solutions of the inner equations .",
    "before we analyse the inner expansions , we develop a higher - order matching condition based on [ eq : match2,eq : match3 ] that matches a robin boundary condition for @xmath67 .",
    "first we take the derivative of [ eq : match3 ] with respect to @xmath28 and subtract @xmath68 times [ eq : match2 ] , which gives @xmath69 move the terms that make up a robin condition for @xmath67 to the left - hand side , and move the rest to the right - hand side , that is @xmath70 the laplacian can be decomposed into normal and tangential components as @xmath71 which can be shown by writing the gradient vector as @xmath72 .",
    "we can therefore write @xmath73 where we have assumed that @xmath62 satisfies the system , as demonstrated below .",
    "if we insert this into the matching condition , we get @xmath74 as @xmath75 .",
    "now consider the inner expansion of [ eq : general_dda ] , @xmath76 expand @xmath77 , @xmath78 , @xmath79 and @xmath80 in powers of @xmath0 , to get @xmath81 and then collect the leading order terms .",
    "note that because @xmath22 is smooth up to @xmath11 and extended constantly outside @xmath3 we have that @xmath82 is independent of @xmath28 .",
    "the lowest power of @xmath0 gives @xmath83 suppose that @xmath84 , which is the case as we show below for bc1 and bc2 , then we obtain @xmath85 . by the matching condition , this gives @xmath86 , where @xmath87 is the limiting value of @xmath62 .",
    "the next order terms give @xmath88 integrating from @xmath89 to @xmath90 in @xmath28 and using the matching condition , we get @xmath91 to obtain a robin boundary condition for @xmath62 , we need that @xmath92    now consider the zeroth order terms , @xmath93 if we subtract @xmath94 from both sides of [ eq : ddarobin0 ] , we get @xmath95 where we have taken into account the cancellation of terms and used the fact that @xmath82 and @xmath96 are independent of @xmath28 .",
    "the latter holds when @xmath21 is extended as a constant in the normal direction off @xmath11 , e.g. , @xmath97 and is independent of @xmath28 and @xmath0 .",
    "next , we integrate and use the matching condition on the left - hand side , @xmath98 if the right - hand side of [ order 1 bc ] vanishes , then we obtain @xmath99 from which we can conclude that the outer solution @xmath65 since @xmath67 is harmonic : @xmath100 .",
    "next we analyse the boundary condition approximations bc1 and bc2 .",
    "the bc1 approximation corresponds to @xmath101 since @xmath102 in the outer region ( interior part of @xmath3 ) , we conclude that @xmath58 vanishes in the outer region . in the inner region",
    ", we have @xmath103 where we have used that @xmath97 and is independent of @xmath28 and @xmath0 .",
    "since @xmath84 , we conclude from our analysis in [ sec : dda_robin_inner ] that @xmath104 and hence @xmath105 .",
    "the next orders of [ expansion of bc1 ] give @xmath106 a direct calculation then shows that @xmath107 as desired .",
    "thus , the leading order outer solution @xmath62 satisfies the problem ( [ eq : poiss_robin ] ) .    to continue , we must first consider [ eq : first_bc ] , @xmath108 from which we get @xmath109 where @xmath110 is the limiting value of the outer solution ( e.g. , see [ eq : match2 ] ) . combining this with [ order 1 bc ] , we obtain @xmath111 further , it follows from the definition of the phase - field function   that @xmath112 is an odd function .",
    "therefore the integral on the right - hand side of [ order 1 bc 1 ] is equal to zero .",
    "thus @xmath113 and so by our arguments below [ eq : dda_outer ] , the ddm with bc1 is second - order accurate in @xmath0 .",
    "when the bc2 approximation is used , we obtain @xmath114 accordingly , in the inner region , we obtain @xmath115 since @xmath116 , we get @xmath117 as desired . from [ eq : first_bc ] we have @xmath118 using that @xmath119 , this gives @xmath120 where @xmath121 combining [ u1 inner solve b2,u1 inner solve b2 a , order 1 bc ] we get @xmath122 direct calculations show that @xmath123 and @xmath124 using these in [ order 1 bc 2 ]",
    ", we get @xmath125 this shows that the ddm with bc2 is only first - order accurate because the solution @xmath67 of @xmath126 is in general not equal to @xmath127 , e.g. , @xmath128 .      in order to modify bc2 to achieve second - order accuracy ,",
    "we introduce @xmath129 such that @xmath130 that is , @xmath129 perturbs only the higher order terms in the inner expansion and is chosen to cancel the term on the right - hand side of [ order 1 bc 2 final ] in order to achieve @xmath131 , which in turn implies that @xmath65 and the new formulation is second - order accurate .",
    "the correction @xmath129 does not affect the @xmath132 or @xmath133 orders in the system .",
    "thus , @xmath134 and @xmath135 are unchanged from the previous subsection .",
    "now becomes @xmath136 so we wish to determine @xmath137 such that @xmath138 two simple ways of achieving this are to take @xmath139 putting everything together , we can obtain bc2 m , a second - order version of bc2 , using @xmath140 the resulting ddm is an elliptic system since @xmath141 , as required for the robin boundary condition . in each instance , this is guaranteed if the interface thickness @xmath0 is sufficiently small .      thus far , we have taken advantage of integration to achieve second - order accuracy .",
    "alternatively , one may try to add correction terms to directly obtain second - order boundary conditions without relying on integration .",
    "for example , from [ order 1 bc ] to achieve second - order accuracy we may take @xmath142 where @xmath135 is a functional of @xmath143 .",
    "this provides another prescription of how to obtain a second - order accurate boundary condition , which could in principle lead to faster asymptotic convergence since it directly cancels a term in the inner expansion of the asymptotic matching . as an illustration ,",
    "let us use bc1 as a starting point even though this boundary condition is already second - order accurate . through the prescription in [ local correction ]",
    "above , we derive another second - order accurate boundary condition . to see this ,",
    "write @xmath144 then from [ local correction ] we get @xmath145 this can be achieved by taking @xmath146 where @xmath30 is the signed distance to @xmath11 as defined earlier .",
    "note that we can also achieve second - order accuracy by taking instead @xmath147 where we use the fact that the integral involving @xmath148 vanishes in [ order 1 bc ] .",
    "we refer to these choices , which are by no means exhaustive , as @xmath149 we remark , however , that this prescription may not always lead to an optimal numerical method .",
    "for example , when using bc1m2 , the system is guaranteed to be elliptic when @xmath150 for @xmath151 , which puts an effective restriction on the interface thickness @xmath0 depending on the values of @xmath68 and @xmath152 .",
    "when bc1m1 is used , the situation is more delicate since ellipticity can not be guaranteed when @xmath153 due to the @xmath154 term .",
    "recall that @xmath153 outside the original domain @xmath3 and so this issue is associated with the extending the modified boundary condition outside @xmath3 . in future work",
    ", we plan to consider different extensions that automatically guarantee ellipticity .    to summarize",
    ", we have shown that the ddm @xmath155 is a second - order accurate approximation of the system when bc1 , bc2 m , and bc1 m are used .",
    "when bc2 is used , the ddm is only first - order accurate .",
    "since the poisson equation with neumann boundary conditions does not have a unique solution , we instead consider the steady reaction - diffusion equation with neumann boundary conditions , @xmath156    again we consider a general ddm approximation , @xmath157 under the same conditions on @xmath58 as in the previous section , the outer solution now satisfies @xmath158 as in the robin case , if @xmath62 satisfies [ eq : poiss_neumann ] and @xmath63 then the ddm is first - order accurate .",
    "however , if @xmath159 , then the ddm is second - order accurate .    to construct the boundary condition for @xmath67 , we follow the approach from the robin case and combine [ eq : match3,laplace decomp ] to get @xmath160 assuming that @xmath62 satisfies the system as demonstrated below , and to get @xmath161 as @xmath60 .",
    "the inner expansion of [ eq : reacdiff_general_dda ] is analogous to the robin case derived in [ sec : dda_robin_inner ] .",
    "as before , if @xmath84 then @xmath162 and @xmath86 , the limiting value of the outer solution . still holds at the next order and so to get the desired boundary condition for @xmath62 , we need @xmath163 analogously to [ eq : ddarobin0 ] the next order equation is @xmath164 subtracting @xmath165 from [ eq : o1 ] we get @xmath166 where we have used @xmath167 as justified below . integrating , we obtain @xmath168 as in the robin case , if the right - hand side of [ order 1 bc neumann ] vanishes then we may conclude that @xmath65 since @xmath67 satisfies @xmath169 with zero neumann boundary conditions .",
    "we next analyse the boundary conditions bc1 and bc2 .      when the bc1 approximation is used , we obtain @xmath170 and @xmath171 accordingly , we find that @xmath86 and [ integral constraint neumann ] holds .",
    "thus @xmath62 satisfies the system as claimed above .    at the next order , from [ eq : first_bc , psi expansion for bc1 neumann ]",
    "we obtain @xmath172 thus , combining [ hat u1 neumann , order 1 bc neumann ] we get @xmath173 from which we conclude that @xmath65 and the ddm with bc1 is second - order accurate .",
    "when the bc2 approximation is used , we obtain @xmath174 and @xmath175 analogously to the case when bc1 is used , @xmath176 , [ integral constraint neumann ] holds , and @xmath62 satisfies the system . at the next order , from [ eq : first_bc , psi expansion for bc2 neumann ]",
    "we obtain @xmath177 combining [ hat u1 neumann bc2,order 1 bc neumann ] we get @xmath178 from which we conclude that @xmath65 and the ddm with bc2 is second - order accurate for the neumann problem as well , which is different from the robin case .",
    "analogously to the robin case , to achieve second - order accuracy we may also take @xmath179 following the same reasoning , alternative boundary conditions analogous to those in [ bc1 m versions ] may be derived @xmath180 note that as in the robin case , when bc1m1 is used ellipticity can not be guaranteed when @xmath153 due to the @xmath154 term .    to summarize",
    ", we have shown that the ddm @xmath181 is a second - order accurate approximation of the system when bc1 , bc2 , and bc1 m are used .",
    "the equations are discretized on a uniform grid with the second - order central - difference scheme .",
    "the discrete system is solved using a multigrid method , where a red - black gauss - seidel type iterative method is used to relax the solutions ( see @xcite ) .",
    "the equations are solved in two - dimensions in a domain @xmath182 ^ 2 $ ] for all the test cases .",
    "periodic boundary conditions are used on the domain boundaries @xmath183 .",
    "the iterations are considered to be converged when the residual of the current solution has reached a tolerance of @xmath184 .",
    "since the phase - field function quickly tends to zero outside the physical domain @xmath3 , it must be regularized in order to prevent the equations from becoming ill - posed .",
    "we therefore use the modified phase - field function @xmath185 where the regularization parameter is set to @xmath186 unless otherwise specified .",
    "in addition , one should note that the chosen boundary condition for the computational domain , @xmath12 , should not interfere with the physical domain .",
    "thus one has to make sure that the distance from the computational wall to the diffuse interface of @xmath3 is large enough not to affect the results .    as shown in [ sec : asymptotic_analysis ] , the normal vector and the curvature can be calculated from the phase - field function as @xmath187 and @xmath188 the surface laplacian can be found from the identity @xmath189 where @xmath190 in 2d we get @xmath191    below , we verify the accuracy of our numerical implementation on several test problems in which we manufacture a solution to the ddm with different choices of boundary conditions through particular choices of @xmath22 . as suggested by our analysis , we find that when we include the surface laplacian , we are unable to solve the discrete system using the multigrid method even though the correction term and the subsequent loss of ellipticity outside @xmath3 is confined to the interfacial region . as also mentioned in [ sec : dda_robin_other ] , future work involves developing alternative extensions of the boundary conditions outside @xmath3 that maintain ellipticity .",
    "nevertheless , as a proof of principle , we still consider the effect of this term by using the surface laplacian of the analytic solution in the ddm equations .",
    "we next investigate the performance of the ddm with different choices of boundary conditions and compare the results with the exact solution of the sharp - interface equations for the reaction - diffusion equation with neumann boundary conditions and the poisson equation with robin boundary conditions .",
    "we consider four different cases with neumann boundary conditions and three different cases with robin boundary conditions .",
    "for each case , we calculate and compare the error between the calculated solution @xmath192 and an analytic solution @xmath193 of the original pde , which is extended from @xmath3 into @xmath12 .",
    "the error is defined as @xmath194 where @xmath195 is a norm and @xmath7 is used to restrict the error to the physical domain @xmath3 .",
    "the convergence rate in @xmath0 as @xmath196 is calculated as @xmath197 for a decreasing sequence @xmath198 . in the following results we mainly use the @xmath1 norm , @xmath199 where @xmath58 is an array with @xmath200 elements .",
    "for a couple of cases , we also present the results with the @xmath2 norm , @xmath201    for a given @xmath0 , the error @xmath202 in both @xmath1 and @xmath2 is calculated by refining the grid spacing until a minimum of two leading digits converge ( e.g. , stop changing under refinement ) in the @xmath1 norm . in some cases for the smallest values of @xmath0 ,",
    "the error has not yet converged to two digits in the @xmath2 norm . however , due to memory limits on our computers , we were not able to use more than @xmath203 cells in each direction",
    ". this limited our ability to obtain grid convergence , particularly when bc2 ( see below ) is used for very small values of @xmath0 .",
    "consider the steady reaction - diffusion equation with neumann boundary conditions , @xmath204 in this section we solve the ddm systems @xmath205 where bc refers to selected boundary condition approximations considered in the previous section . in the case of bc1m1 , as remarked above , the surface laplacian term is not solved , rather the surface laplacian of the analytic solution is used and is treated as a known source term .",
    "consider the case where @xmath3 is a circle of radius @xmath206 centred at @xmath207 , and where the analytic solution to the reaction - diffusion equation in @xmath3 is @xmath208 this corresponds to @xmath209 , @xmath210 , and @xmath211 . in this case , the curvature is @xmath212 .",
    "now consider the case where @xmath3 is the square @xmath213 ^ 2 $ ] .",
    "again let the analytic solution in @xmath3 be @xmath214 so that @xmath209 , @xmath210 , and @xmath215 . in this case",
    "the curvature is zero almost everywhere .    to initialize the square domain @xmath3 , the signed - distance function is defined as @xmath216 the phase - field function",
    "is then calculated directly from the signed - distance function in [ eq : characteristic ] .",
    "again let @xmath3 be the circle centred at @xmath207 with radius @xmath206 , but now consider the case where the analytic solution is @xmath217 which corresponds to @xmath218 @xmath219 , and @xmath220 note that in the ddm equations , @xmath21 is extrapolated constantly in the normal direction off of the boundary @xmath11 .      for the final neumann case we again let @xmath213 ^ 2 $ ] , and we consider the case where the analytic solution is @xmath221 where @xmath222 .",
    "this corresponds to @xmath223 the boundary function @xmath21 and the surface laplacian of the analytic function along the boundary are @xmath224 where @xmath225 along the bottom and top boundaries , and @xmath226 along the left and right boundaries .      and [ tab : neumann_error_per_eps ] show convergence results in the @xmath1 norm where  @xmath0 is reduced for cases 1 to 4 with bc1 , bc1m1 , bc1m2 and bc2 . shows the results for case 4 where the @xmath2 norm is used .",
    "although the ddm is most efficient when adaptive meshes are used , here we consider only uniform meshes to more easily control the discretization errors in order to focus on the errors in the ddm . as in all diffuse - interface methods , fine grids are necessary to accurately solve the equations when @xmath0 is small .",
    "this is especially apparent for the cases with bc2 where even the finest grid spacing , @xmath227 in each direction , becomes too coarse to obtain results for small @xmath0 that have converged with respect to the grid refinements .",
    "the results confirm the second - order accuracy of all the considered boundary condition approximations .",
    "note that while the difference between bc1 and bc1m1 tends to be small , bc1m1 consistently performs better than bc1 . in turn , bc1 performs better than bc2 . in case 2",
    "there is a noticeable improvement of bc1m1 over bc1 .",
    "case 3 is the first case that has a nonconstant boundary condition , and the surface laplacian of the analytic solution along the boundary is also nonconstant .",
    "an unexpected result for case 3 is that bc1m2 performs the best .",
    "one possible explanation to this is errors due to grid anisotropy .",
    "therefore we also consider a fourth case , which again has a nonconstant boundary condition and nonconstant surface laplacian of the analytic solution .",
    "since the domain in this case is a square , the effect of grid anisotropy is lessened .",
    "correspondingly bc1m1 performs the best .",
    "the cases were also calculated with the @xmath2 norm , which gave similar results , although at the smallest values of @xmath0 , the orders of accuracy of bc1m1 and bc1m2 may deteriorate in @xmath2 , as seen in [ fig : neumann_case4-plot-2,tab : neumann_error_per_eps_infty ] for case 4 .",
    "this could be due to the influence of higher order terms in the expansion , or the amplification of error when @xmath0 is small due to the condition number of the system , which should scale like @xmath228 .",
    "this is currently under investigation .",
    "the difference between bc1 and bc2 is noticeable , especially with regard to the required amount of grid refinement that is needed to obtain a convergent result .",
    "this provides practical limits for the use of bc2 .",
    "plot coordinates ( 8.000e-01 , 3.4e-01 ) ( 4.000e-01 , 9.9e-02 ) ( 2.000e-01 , 2.6e-02 ) ( 1.000e-01 , 6.4e-03 ) ( 5.000e-02 , 1.6e-03 ) ( 2.500e-02 , 4.2e-04 ) ;    plot coordinates ( 8.000e-01 , 4.8e-01 ) ( 4.000e-01 , 1.1e-01 ) ( 2.000e-01 , 2.7e-02 ) ( 1.000e-01 , 6.5e-03 ) ( 5.000e-02 , 1.6e-03 ) ;    plot coordinates ( 8.000e-01 , 3.1e-01 ) ( 4.000e-01 , 9.5e-02 ) ( 2.000e-01 , 2.6e-02 ) ;    plot coordinates ( 8.000e-01 , 2.5e-01 ) ( 4.000e-01 , 7.3e-02 ) ( 2.000e-01 , 1.9e-02 ) ( 1.000e-01 , 5.2e-03 ) ;    plot coordinates ( 8.000e-01 , 2.0e-01 ) ( 4.000e-01 , 2.6e-02 ) ( 2.000e-01 , 5.2e-03 ) ( 1.000e-01 , 1.2e-03 ) ;    plot coordinates ( 8.000e-01 , 2.9e-01 ) ( 4.000e-01 , 7.8e-02 ) ( 2.000e-01 , 2.0e-02 ) ( 1.000e-01 , 5.1e-03 ) ;    plot coordinates ( 8.000e-01 , 2.2e-01 ) ( 4.000e-01 , 7.0e-02 ) ( 2.000e-01 , 2.0e-02 ) ;    plot coordinates ( 8.000e-01 , 1.3e-01 ) ( 4.000e-01 , 3.1e-02 ) ( 2.000e-01 , 7.5e-03 ) ( 1.000e-01 , 1.8e-03 ) ( 5.000e-02 , 4.5e-04 ) ( 2.500e-02 , 1.2e-04 ) ;    plot coordinates ( 8.000e-01 , 8.7e-02 ) ( 4.000e-01 , 2.9e-02 ) ( 2.000e-01 , 7.1e-03 ) ( 1.000e-01 , 1.8e-03 ) ( 5.000e-02 , 4.3e-04 ) ( 2.500e-02 , 1.1e-04 ) ;    plot coordinates ( 8.000e-01 , 3.2e-02 ) ( 4.000e-01 , 1.3e-02 ) ( 2.000e-01 , 3.4e-03 ) ( 1.000e-01 , 8.6e-04 ) ( 5.000e-02 , 2.1e-04 ) ;    plot coordinates ( 8.000e-01 , 1.2e-01 ) ( 4.000e-01 , 2.8e-02 ) ( 2.000e-01 , 8.1e-03 ) ;    plot coordinates ( 8.000e-01 , 1.7e-01 ) ( 4.000e-01 , 4.4e-02 ) ( 2.000e-01 , 1.1e-02 ) ( 1.000e-01 , 3.0e-03 ) ;    plot coordinates ( 8.000e-01 , 1.4e-01 ) ( 4.000e-01 , 2.0e-02 ) ( 2.000e-01 , 4.6e-03 ) ( 1.000e-01 , 1.2e-03 ) ;    plot coordinates ( 8.000e-01 , 3.4e-01 ) ( 4.000e-01 , 5.5e-02 ) ( 2.000e-01 , 1.2e-02 ) ( 1.000e-01 , 3.1e-03 ) ;    plot coordinates ( 8.000e-01 , 1.7e-01 ) ( 4.000e-01 , 4.6e-02 ) ( 2.000e-01 , 1.2e-02 ) ;    plot coordinates ( 8.000e-01 , 1.8e-01 ) ( 4.000e-01 , 5.2e-02 ) ( 2.000e-01 , 1.5e-02 ) ( 1.000e-01 , 4.3e-03 ) ;    plot coordinates ( 8.000e-01 , 1.5e-01 ) ( 4.000e-01 , 2.2e-02 ) ( 2.000e-01 , 1.2e-02 ) ( 1.000e-01 , 5.8e-03 ) ( 5.000e-02 , 2.8e-03 ) ;    plot coordinates ( 8.000e-01 , 3.5e-01 ) ( 4.000e-01 , 6.3e-02 ) ( 2.000e-01 , 1.6e-02 ) ( 1.000e-01 , 4.6e-03 ) ( 5.000e-02 , 2.4e-03 ) ;    plot coordinates ( 8.000e-01 , 1.8e-01 ) ( 4.000e-01 , 5.1e-02 ) ( 2.000e-01 , 1.4e-02 ) ( 1.000e-01 , 4.7e-03 ) ;    rlrlrlrlr & bc1 & & bc1m1 & & bc1m2 & & bc2 + @xmath0 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 +   + 0.800 & 3.391 & & 4.771 & & & & 3.091 & + 0.400 & 9.942 & 1.8 & 1.121 & 2.1 & & & 9.522 & 1.7 + 0.200 & 2.572 & 2.0 & 2.682 & 2.1 & & & 2.572 & 1.9 + 0.100 & 6.433 & 2.0 & 6.513 & 2.0 & & & & + 0.050 & 1.613 & 2.0 & 1.593 & 2.0 & & & & + 0.025 & 4.154 & 2.0 & 3.874 & 2.0 & & & & +   + 0.800 & 2.461 & & 1.961 & & 2.881 & & 2.221 & + 0.400 & 7.302 & 1.8 & 2.582 & 2.9 & 7.812 & 1.9 & 6.992 & 1.7 + 0.200 & 1.942 & 1.9 & 5.213 & 2.3 & 1.962 & 2.0 & 1.952 & 1.8 + 0.100 & 5.163 & 1.9 & 1.203 & 2.1 & 5.103 & 1.9 & & +   + 0.800 & 1.271 & & 8.742 & & 3.162 & & 1.181 & + 0.400 & 3.122 & 2.0 & 2.852 & 1.6 & 1.282 & 1.3 & 2.822 & 2.1 + 0.200 & 7.483 & 2.1 & 7.083 & 2.0 & 3.403 & 1.9 & 8.133 & 1.8 + 0.100 & 1.813 & 2.0 & 1.753 & 2.0 & 8.584 & 2.0 & & + 0.050 & 4.484 & 2.0 & 4.324 & 2.0 & 2.124 & 2.0 & & + 0.025 & 1.154 & 2.0 & 1.064 & 2.0 & & & & +   + 0.800 & 1.711 & & 1.381 & & 3.391 & & 1.741 & + 0.400 & 4.422 & 2.0 & 2.042 & 2.8 & 5.512 & 2.6 & 4.612 & 1.9 + 0.200 & 1.142 & 2.0 & 4.583 & 2.2 & 1.242 & 2.2 & 1.202 & 1.9 + 0.100 & 2.953 & 1.9 & 1.183 & 2.0 & 3.093 & 2.0 & & +",
    ".the @xmath2 error for the neumann problem as a function of @xmath0 for case 4 .",
    "all results are calculated with @xmath227 in each direction on uniform grids .",
    "blank results indicate that the solutions require even finer grids to converge .",
    "[ cols= \" > , < , > , < , > , < , > , < , > \" , ]      now consider the poisson equation with robin boundary conditions , @xmath230 as in the previous section , we solve the ddm equation @xmath231 using bc1 , bc2 , bc1 m and bc2 m .",
    "consider the case where @xmath3 is a circle of radius @xmath206 centred at @xmath207 , and where the analytic solution to the poisson equation in @xmath3 is @xmath208 this corresponds to @xmath232 , @xmath233 and @xmath211 .",
    "we will consider the case when @xmath234 , thus @xmath235 .",
    "again let @xmath3 be the circle at @xmath207 with radius @xmath206 , but now consider the case where the analytic solution is @xmath236 which corresponds to @xmath237 and @xmath238 again let @xmath234 so that @xmath239 .",
    "similar to the neumann case 3 , @xmath21 is extended constantly in the normal direction in the ddm equations .      for the final robin case we let @xmath213 ^ 2 $ ] ,",
    "and we consider a case that corresponds to the neumann case 4 where the analytic solution is @xmath221 where @xmath222 .",
    "this corresponds to @xmath240 the boundary function @xmath21 and the surface laplacian of the analytic function along the boundary are @xmath241 where @xmath225 along the bottom and top boundaries , and @xmath226 along the left and right boundaries .",
    "the convergence results calculated with the @xmath1 norm are presented in [ fig : robin_cases - plot1,fig : robin_cases - plot2,fig : robin_cases - plot3 ] and [ tab : robin_error_per_eps ] .",
    "shows the results for case 2 where the @xmath2 norm is used .",
    "again the results indicate that bc1m1 performs better than bc1 , although both methods are second - order accurate , as predicted by our analysis .",
    "the results also show that bc1 gives better results than bc2 , which is approximately first - order accurate as also predicted by theory .",
    "further , as in the neumann case , bc2 is seen to require very fine grids to converge . for small @xmath0 , the requirement exceeds our finest grid .    the modified bc2m1 and bc2m2 schemes are also tested .",
    "the results with bc2m2 are almost indistinguishable from the results with bc2m1 , so only the latter results are shown in the following figures .",
    "all results are listed in [ tab : robin_error_per_eps ] and [ tab : robin_error_per_eps_infty ] .",
    "the bc2 m schemes are shown to perform better than the bc2 scheme , but they also require very fine grids to converge .",
    "further , the orders of accuracy of bc2m1 and bc2m2 seem to deteriorate somewhat at the smallest values of @xmath0 . as discussed in [ sec : dda_robin_bc2 m ] , this could be due to the influence of higher order terms in the expansion , or the amplification of error and is under study .",
    "plot coordinates ( 8.000e-01 , 2.1e-01 ) ( 4.000e-01 , 4.4e-02 ) ( 2.000e-01 , 9.0e-03 ) ( 1.000e-01 , 2.0e-03 ) ( 5.000e-02 , 4.6e-04 ) ( 2.500e-02 , 1.2e-04 ) ;    plot coordinates ( 8.000e-01 , 1.2e-01 ) ( 4.000e-01 , 2.7e-02 ) ( 2.000e-01 , 6.4e-03 ) ( 1.000e-01 , 1.6e-03 ) ( 5.000e-02 , 3.8e-04 ) ;    plot coordinates ( 8.000e-01 , 1.7e-01 ) ( 4.000e-01 , 5.2e-02 ) ( 2.000e-01 , 2.2e-02 ) ( 1.000e-01 , 1.0e-02 ) ;    plot coordinates ( 8.000e-01 , 1.14e-01 ) ( 4.000e-01 , 2.29e-02 ) ( 2.000e-01 , 6.87e-03 ) ( 1.000e-01 , 2.54e-03 ) ;    plot coordinates ( 8.000e-01 , 4.21e-01 ) ( 4.000e-01 , 1.02e-01 ) ( 2.000e-01 , 2.19e-02 ) ( 1.000e-01 , 4.77e-03 ) ( 5.000e-02 , 1.09e-03 ) ( 2.500e-02 , 2.57e-04 ) ;    plot coordinates ( 8.000e-01 , 1.27e-1 ) ( 4.000e-01 , 4.87e-2 ) ( 2.000e-01 , 1.30e-2 ) ( 1.000e-01 , 3.27e-3 ) ( 5.000e-02 , 8.15e-4 ) ( 2.500e-02 , 2.04e-4 ) ;    plot coordinates ( 8.000e-01 , 3.84e-1 ) ( 4.000e-01 , 9.16e-2 ) ( 2.000e-01 , 2.51e-2 ) ( 1.000e-01 , 9.13e-3 ) ;    plot coordinates ( 8.000e-01 , 3.48e-1 ) ( 4.000e-01 , 7.24e-2 ) ( 2.000e-01 , 1.56e-2 ) ( 1.000e-01 , 4.65e-3 ) ;    plot coordinates ( 8.000e-01 , 3.80e-1 ) ( 4.000e-01 , 9.39e-2 ) ( 2.000e-01 , 2.14e-2 ) ( 1.000e-01 , 4.90e-3 ) ( 0.500e-01 , 1.15e-3 ) ( 0.250e-01 , 2.78e-4 ) ;    plot coordinates ( 8.000e-01 , 1.36e-1 ) ( 4.000e-01 , 4.30e-2 ) ( 2.000e-01 , 1.06e-2 ) ( 1.000e-01 , 2.53e-3 ) ( 5.000e-02 , 6.09e-4 ) ( 2.500e-02 , 1.49e-4 ) ;    plot coordinates ( 8.000e-01 , 3.24e-1 ) ( 4.000e-01 , 7.49e-2 ) ( 2.000e-01 , 1.91e-2 ) ( 1.000e-01 , 6.98e-3 ) ;    plot coordinates ( 8.000e-01 , 3.04e-1 ) ( 4.000e-01 , 6.94e-2 ) ( 2.000e-01 , 1.72e-2 ) ( 1.000e-01 , 6.40e-3 ) ;    plot coordinates ( 8.000e-01 , 7.9e-02 ) ( 4.000e-01 , 1.6e-02 ) ( 2.000e-01 , 3.7e-03 ) ( 1.000e-01 , 9.0e-04 ) ;    plot coordinates ( 8.000e-01 , 3.6e-02 ) ( 4.000e-01 , 7.4e-03 ) ( 2.000e-01 , 1.7e-03 ) ( 1.000e-01 , 4.3e-04 ) ;    plot coordinates ( 8.000e-01 , 8.2e-01 ) ( 4.000e-01 , 1.9e-02 ) ( 2.000e-01 , 5.9e-03 ) ;    plot coordinates ( 8.000e-01 , 6.75e-02 ) ( 4.000e-01 , 1.27e-02 ) ( 2.000e-01 , 2.78e-03 ) ;    clrlrlrlrlr & bc1 & & bc1m1 & & bc2 & & bc2m1 & & bc2m2 + @xmath0 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 +   + 0.800&2.111 & & 1.201 & & 1.701 & & 1.141 & & 1.151 + 0.400&4.402&2.3 & 2.722&2.1 & 5.212&1.7&2.292&2.3&2.312 & 2.3 + 0.200&8.993&2.3 & 6.423&2.1 & 2.182&1.3&6.873&1.7&6.923 & 1.7 + 0.100&1.953&2.2 & 1.573&2.0 & 1.032&1.1&2.543&1.4&2.553 & 1.4 + 0.050&4.574&2.1 & 3.794&2.0 + 0.025&1.234&1.9",
    "+   + 0.800&4.211 & & 1.271 & & 3.841 & & 3.481 & & 3.491 & + 0.400&1.021&2.0&4.872&1.4&9.162&2.1 & 7.242&2.3&7.262&2.3 + 0.200&2.192&2.2&1.302&1.9&2.512&1.9 & 1.562&2.2&1.572&2.2 + 0.100&4.773&2.2&3.273&2.0&9.133&1.5 & 4.653&1.7&4.673&1.7 + 0.050&1.093&2.1&8.154&2.0 + 0.025&2.574&2.1&2.044&2.0 +   + 0.800&7.892 & & 3.602 & & 8.232 & & 6.752 & & 6.802 & + 0.400&1.642&2.3&7.383&2.3 & 1.892&2.2&1.272&2.3&1.282&2.4 + 0.200&3.703&2.2&1.713&2.1 & 5.903&1.7&2.783&2.2&2.813&2.2 + 0.100&9.044&2.0&4.284&2.0 +    clrlrlrlrlr & bc1 & & bc1m1 & & bc2 & & bc2m1 & & bc2m2 + @xmath0 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 & @xmath229 & @xmath68 +   + 0.800&3.801 & & 1.361 & & 3.241 & & 3.041 & & 3.051 & + 0.400&9.392&2.0&4.302&1.7&7.492&2.1 & 6.942&2.1&6.952&2.1 + 0.200&2.142&2.1&1.062&2.0&1.912&2.0 & 1.722&2.0&1.732&2.0 + 0.100&4.903&2.1&2.533&2.1&6.983&1.5 & 6.403&1.4&6.423&1.4 + 0.050&1.153&2.1&6.094&2.1 + 0.025&2.784&2.1&1.494&2.0 +    shows a plot of the solutions of case 1 with @xmath242 at @xmath243 .",
    "the plot shows the solutions with bc1 ( black dashed ) , bc1m1 ( black doted ) , bc2 ( blue dashed ) and bc2m1 ( blue dotted ) .",
    "we see that the solutions with the modified schemes bc1m1 and bc2m1 perform better than the corresponding schemes with bc1 and bc2 .    .",
    "the solutions with bc2m1 and bc2m2 are indistinguishable , so only bc2m1 is shown .",
    "( a ) shows the full slice , where the domain boundary is depicted as thin vertical lines at @xmath244 .",
    "( b ) a zoom - in that shows the solutions near the left boundary.,scaledwidth=80.0% ]    .",
    "the solutions with bc2m1 and bc2m2 are indistinguishable , so only bc2m1 is shown .",
    "( a ) shows the full slice , where the domain boundary is depicted as thin vertical lines at @xmath244 .",
    "( b ) a zoom - in that shows the solutions near the left boundary.,scaledwidth=80.0% ]",
    "we have performed a matched asymptotic analysis of the ddm for the poisson equation with robin boundary conditions and for a steady reaction - diffusion equation with neumann boundary conditions .",
    "our analysis shows that for certain choices of the boundary condition approximations , the ddm is second - order accurate in the interface thickness @xmath0 .",
    "however , for other choices the ddm is only first - order accurate .",
    "this is confirmed numerically and helps to explain why the choice of boundary - condition approximation is important for rapid global convergence and high accuracy .",
    "this helps to explain why the choice of boundary - condition approximation is important for rapid global convergence and high accuracy .",
    "in particular , the boundary condition bc1 , which arises from representing the surface delta function as @xmath19 , is seen to give rise to a second - order approximation for both the neumann and robin boundary conditions and thus is perhaps the most reliable choice .",
    "the boundary condition bc2 , which arises from approximating the surface delta function as @xmath20 yields a second - order accurate approximation for the neumann problem , but only first - order accuracy for the robin problem .",
    "in addition , bc2 requires very fine meshes to converge .",
    "our analysis also suggests correction terms that may be added to yield a more accurate diffuse - domain method .",
    "we have presented several techniques for obtaining second - order boundary conditions and performed numerical simulations that confirm the predicted accuracy , although the order of accuracy may deteriorate at the smallest values of @xmath0 possibly due to amplification errors associated with conditioning of the system or the influence of higher order terms in the asymptotic expansion .",
    "this is currently under study .",
    "further , the correction terms do not improve the mesh requirements for convergence .",
    "a common feature of the correction terms is that the interface thickness must be sufficiently small in order for the ddm to remain an elliptic equation .",
    "in addition , one choice of boundary condition involves the use of the surface laplacian of the solution , which could in principle lead to faster asymptotic convergence since it directly cancels terms in the inner expansion of the asymptotic matching .",
    "however , the extension of this term outside the domain of interest can cause the loss of ellipticity of the ddm . as such",
    ", this is an intriguing but not a practical scheme .",
    "nevertheless , as a proof of principle , we still considered the effect of this term , however , by using the surface laplacian of the analytic solution in the ddm .",
    "we found that this choice gave the smallest errors in nearly all the cases considered . by incorporating different extensions of the boundary conditions in the exterior of the domain that automatically guarantee ellipticity",
    ", we aim to make this method practical .",
    "this is the subject of future investigations .",
    "we plan to extend our analysis to the dirichlet problem where the boundary condition approximations considered by li et al .",
    "@xcite seem only to yield first - order accuracy @xcite .",
    "our asymptotic analysis thus has the potential to identify correction terms that can be used to generate second - order accurate diffuse - domain methods for the dirichlet problem .",
    "kyl acknowledges support from the fulbright foundation for a visiting researcher grant to fund a stay at the university of california , irvine .",
    "kyl also acknowledges support from statoil and gdf suez , and the research council of norway ( 193062/s60 ) for the research project enabling low emission lng systems .",
    "jl acknowledges support from the national science foundation , division of mathematical sciences , and the national institute of health through grant p50gm76516 for a center of excellence in systems biology at the university of california , irvine .",
    "the authors gratefully thank bernhard mller ( ntnu ) and svend tollak munkejord ( sintef energy research ) for helpful discussions and for feedback on the manuscript .",
    "the authors also wish to thank the anonymous reviewers for comments that greatly improved the manuscript .                                                                          , _ an efficient second - order accurate cut - cell method for solving the variable coefficient poisson equation with jump conditions on irregular domains _ , int .",
    "fluids , 52 ( 2006 ) , pp .  723 - 748 .                                                    , _ solving partial differential equations on irregular domains with moving interfaces , with applications to superconformal electrodeposition in semiconductor manufacturing _ , j. comput . phys .",
    ", 227 ( 2008 ) , pp .",
    "6411 - 6447 .    , _ a diffuse - interface approach for modeling transport , diffusion and adsorption / desorption of material quantities on a deformable interface _ , communications in mathematical sciences , 7 ( 2009 ) , pp",
    ".  10091037 .      ,",
    "_ a second - order sharp numerical method for solving the linear elasticity equations on irregular domains and adaptive grids  application to shape optimization _ , j. comput .",
    "phys . , 233 ( 2013 ) ,",
    "430 - 448 ."
  ],
  "abstract_text": [
    "<S> in recent work , li et al .  </S>",
    "<S> ( comm .  math .  </S>",
    "<S> sci . </S>",
    "<S> , 7:81 - 107 , 2009 ) developed a diffuse - domain method ( ddm ) for solving partial differential equations in complex , dynamic geometries with dirichlet , neumann , and robin boundary conditions . </S>",
    "<S> the diffuse - domain method uses an implicit representation of the geometry where the sharp boundary is replaced by a diffuse layer with thickness @xmath0 that is typically proportional to the minimum grid size . </S>",
    "<S> the original equations are reformulated on a larger regular domain and the boundary conditions are incorporated via singular source terms . </S>",
    "<S> the resulting equations can be solved with standard finite difference and finite element software packages . here , we present a matched asymptotic analysis of general diffuse - domain methods for neumann and robin boundary conditions . </S>",
    "<S> our analysis shows that for certain choices of the boundary condition approximations , the ddm is second - order accurate in @xmath0 . </S>",
    "<S> however , for other choices the ddm is only first - order accurate . </S>",
    "<S> this helps to explain why the choice of boundary - condition approximation is important for rapid global convergence and high accuracy . </S>",
    "<S> our analysis also suggests correction terms that may be added to yield more accurate diffuse - domain methods . </S>",
    "<S> simple modifications of first - order boundary condition approximations are proposed to achieve asymptotically second - order accurate schemes . </S>",
    "<S> our analytic results are confirmed numerically in the @xmath1 and @xmath2 norms for selected test problems .    </S>",
    "<S> karl yngve lervg and john lowengrub    numerical solution of partial differential equations , phase - field approximation , implicit geometry representation , matched asymptotic analysis . </S>"
  ]
}
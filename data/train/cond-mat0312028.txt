{
  "article_text": [
    "in the rapidly growing literature on the modeling of complex networks one of the most important classes of network models is the random graph  @xcite .",
    "one well - studied such model is the model consisting of the ensemble of all graphs that have a given degree sequence  @xcite , and this model has proved useful in understanding a variety of network properties .",
    "realistic applications often require that we restrict ourselves to graphs with no multiple edges between any vertex pair and no self - edges . unfortunately",
    ", both the analytic and numerical study of such networks is known to present challenges  @xcite . in this short paper",
    "we consider computer algorithms for generating graphs uniformly from this ensemble .",
    "we are concerned primarily with directed graphs , since the examples we will consider are directed , but the concepts discussed generalize in a straightforward fashion to the undirected case also .",
    "there are two algorithms in common use for the generation of random graphs with single edges",
    ". we will refer to them as the _ switching algorithm _",
    "@xcite and the _ matching algorithm _  @xcite .",
    "we argue that , under certain circumstances , both of these algorithms can generate a nonuniform sample of possible graphs .",
    "we then present a new algorithm based on the monte carlo procedure known as _ go with the winners _",
    "@xcite , which generates uniformly sampled graphs .",
    "we compare the three methods in the context of a particular network problem  estimation of the density of commonly occurring subgraphs or _",
    "motifs_and show that , in this context , the difference between them is small .",
    "this result is of some practical importance , since the `` go with the winners '' algorithm , although statistically correct , is slow , while the other two algorithms are substantially faster .",
    "[ cols=\"<,^,^,^,^,^,^,^,^,^,^,^,^ \" , ]",
    "in this section we describe the three algorithms under consideration .",
    "first , we describe the switching algorithm , which uses a markov chain to generate a random graph with a given degree sequence  @xcite . for simplicity ,",
    "we discuss directed networks with no mutual edges ( vertex pairs with edges running in both directions between them ) .",
    "the case with mutual edges is a simple generalization  @xcite .",
    "the method starts from a given network and involves carrying out a series of monte carlo switching steps whereby a pair of edges @xmath0 is selected at random and the ends are exchanged to give @xmath1 .",
    "however , the exchange is only performed if it generates no multiple edges or self - edges ; otherwise it is not performed .",
    "the entire process is repeated some number @xmath2 times , where @xmath3 is the number of edges in the graph and @xmath4 is chosen large enough that the markov chain shows good mixing .",
    "( exchanges that are not performed because they would generate multiple or self - edges are still counted to insure detailed balance  @xcite . )",
    "this algorithm works well but , as with many markov chain methods , suffers because in general we have no measure of how long we need to wait for it to mix properly .",
    "theoretical bounds on the mixing time exist only for specific near - regular degree sequences  @xcite .",
    "we empirically find , however , that for many networks , values of around @xmath5 appear to be more than adequate ( see fig .",
    "[ fig2 ] ) .",
    "an alternative approach is the matching algorithm  @xcite , in which each vertex is assigned a set of `` stubs '' or `` spokes''the sawn - off ends of incoming and outgoing edges  according to the desired degree sequence .",
    "( one can also assign mutual - edge stubs for networks that include such edges . )",
    "then in - stubs and out - stubs are picked randomly in pairs and joined up to create the network edges .",
    "if a multiple or self - edge is created , the entire network is discarded and the process starts over from scratch .",
    "this process will correctly generate random directed graphs with the desired properties .",
    "unfortunately , however , many real - world networks have a heavy - tailed degree distribution that includes a small minority of vertices with high degree .",
    "all other things being equal , the expected number of edges between two such vertices will often exceed one , making it unlikely that the procedure above will run to completion , except in the rarest of cases . to obviate this problem a modification of the method can be used in which , following selection of a stub pair that creates a multiple edge , the network is not discarded , and an alternative stub pair is selected at random . in general this method generates a biased sample of possible networks  @xcite but , as we will show , not significantly so for our purposes ( see table  [ table1 ] ) .",
    "the `` go with the winners '' algorithm is a non - markov - chain monte carlo method for sampling uniformly from a given distribution  @xcite . when applied to the problem of graph generation , the method is as follows .",
    "we consider a colony of @xmath6 graphs . as with the matching algorithm ,",
    "we start with the appropriate number of in - stubs and out - stubs for each vertex and repeatedly choose at random one in - stub and one out - stub from the graph and link them together to create an edge .",
    "if a multiple edge or self - edge is generated , the network containing it is removed from the colony and discarded . to compensate for the resulting slow decline in the size of the colony , its size",
    "is periodically doubled by cloning each of the surviving graphs ; this cloning step is carried out at a predetermined rate chosen to keep the size of the colony roughly constant on average .",
    "the process is repeated until all stubs have been linked , then one network is chosen at random from the colony and assigned a weight : @xmath7 where @xmath8 is the number of cloning steps made and @xmath9 is the number of surviving networks .",
    "the mean of any quantity @xmath10 ( for example , the number of occurrences of a given subgraph ) over a set of such networks is then given by @xmath11 where @xmath12 is the value of @xmath10 in network  @xmath13 .",
    "in fig .  [ hub1 ] we show a comparison of the performance of our three algorithms when applied to a simple toy network .",
    "the network consists of an out - hub with ten outgoing edges , an in - hub with ten incoming edges , and ten nodes with one incoming edge and one outgoing edge each . given this degree sequence",
    ", there are just two distinct network topologies with no multiple edges , as shown in fig .",
    "[ hub1]a and  [ hub1]b .",
    "there is only a single way to form the network in [ hub1]a , but there are 90 different ways to form  [ hub1]b .",
    "we generated @xmath14 random networks using each of the 3 methods described here and the results are summarized in fig .  [ hub1]c .",
    "as the figure shows , the matching algorithm introduces a bias , undersampling the configuration of fig .",
    "this is a result of the dynamics of the algorithm , which favors the creation of edges between hubs .",
    "the switching and `` go with the winners '' algorithms on the other hand sample the configurations uniformly , generating each graph an equal number of times within the measurement error on our calculations .",
    "the `` go with the winners '' algorithm truly samples the ensemble uniformly but is far less efficient than the two other methods .",
    "the results given here indicate that the switching algorithm produces essentially identical results while being a good deal faster .",
    "the matching algorithm is faster still but samples in a measurably biased way .",
    "now consider the study of network motifs .",
    "we are interested in knowing when particular subgraphs or motifs appear significantly more or less often in a real - world network than would be expected on the basis of chance , and we can answer this question by comparing motif counts to random graphs .",
    "some results for the case of the `` feed - forward loop '' motif  @xcite are given in table  [ table1 ] .",
    "in this case the densities of motifs in the real - world networks are many standard deviations away from random , which suggests that any of the present algorithms is adequate for generating suitable random graphs to act as a null model , although the `` go with the winners '' and switching algorithms , while slower , are clearly more satisfactory theoretically .",
    "the matching algorithm was measurably nonuniform for our toy example above , but seems to give better results on the real - world problem .",
    "overall , our results appear to argue in favor of using the switching method , with the `` go with the winners '' method finding limited use as a check on the accuracy of sampling .",
    "accuracy checks are also supplied by analytical estimates for subgraph numbers  @xcite .",
    "numerical results in  @xcite were done using the switching algorithm .",
    "in this paper we have compared three algorithms for generating random graphs with prescribed degree sequences and no multiple edges or self - edges .",
    "two of the three have been used previously , but suffer from nonuniformity in their sampling properties , while the third , a method based on the `` go with the winners ''",
    "monte carlo procedure , is new and samples uniformly but is quite slow .",
    "of the two older algorithms , we show that one , which we call the `` matching '' algorithm , has measurable deviations from uniformity when compared to the `` go with the winners '' method , although for graphs typical of practical studies these deviations are small enough to make no significant difference to most previously published results .",
    "the other older algorithm , which we call the `` switching '' algorithm and which is based on a markov chain monte carlo method , samples correctly in the limit of long times and in practice is found to give good results when compared with the `` go with the winners '' method .",
    "overall , therefore , we conclude that the switching algorithm is probably the algorithm of choice , with the `` go with the winners '' algorithm finding a supporting role as a check on uniformity , although its slowness makes it impractical for large - scale use .",
    "+ we thank oliver d. king for discussions and for pointing out and demonstrating that the matching algorithm of the supplementary online material of @xcite does not uniformly generate simple graphs .",
    "99 b. bollobas , _ random graphs _ , 2nd edition , academic press , new york ( 2001 ) .",
    "e. bender and e. canfield , the asymptotic number of labelled graphs with given degree sequences , _ j. combin",
    ". theory ser .",
    "a _ * 24 * , 296307 ( 1978 ) .",
    "m. molloy and b. reed , the size of the giant component of a random graph with a given degree sequence , _ combinatorics , probability and computing _ * 7 * , 295305 ( 1998 ) .",
    "m. molloy and b. reed , a critical point for random graphs with a given degree sequence , _ random structures and algorithms _ * 6 * , 161179 ( 1995 ) .",
    "m. e. j. newman , s. h. strogatz , and d. j. watts , random graphs with arbitrary degree distribution and their applications , _ phys .",
    "e _ * 64 * , 026118 ( 2001 ) .",
    "f. chung and l. lu , the average distances in random graphs with given expected degrees , _ proc .",
    "_ * 99 * , 1587915882 ( 2002 ) .",
    "t. a. b. snijders , enumeration and simulation methods for 01 matrices with given marginals , _ psychometrika _ * 56 * , 397417 ( 1991 ) .",
    "a. r. rao , r. jana , and s. bandyopadhya , a markov chain monte carlo method for generating random @xmath15-matrices with given marginals , _",
    "indian j. of statistics _ * 58 * , 225242 ( 1996 ) . j. m. roberts , jr . , simple methods for simulating sociomatrices with given marginal totals , _ social networks _ * 22 * , 273283 ( 2000 ) .",
    "r. kannan , p. tetali , and s. vempala , simple markov - chain algorithms for generating bipartite graphs and tournaments , _ proceedings of the acm symposium on discrete algorithms _ ( 1997 ) .",
    "y. chen , p. diaconis , s. p. holmes , and j. s. liu , sequential monte carlo methods for statistical analysis of tables , _ discussion paper 03 - 22 _ , institute of statistics and decision sciences , duke university ( 2003 ) .",
    "s. itzkovitz , r. milo , n. kashtan , g. ziv , and u. alon , subgraphs in random networks , _ phys .",
    "e _ * 68 * , 026127 ( 2003 ) .",
    "s. maslov , k. sneppen , and a. zaliznyak , pattern detection in complex networks : correlation profile of the internet , preprint cond - mat/0205379 ( 2002 ) .",
    "j. park and m.e.j .",
    "newman , the origin of degree correlations in the internet and other networks , _ phys .",
    "e _ * 68 * , 026112 ( 2003 ) .",
    "m. e. j. newman , assortative mixing in networks , _ phys .",
    "* 89 * , 208701 ( 2002 ) .",
    "s. maslov and k. sneppen , specificity and stability in topology of protein networks , _ science _ * 296 * , 910913 ( 2002 ) .",
    "a. roberts , l. stone , island - sharing by archipelago species .",
    "_ oecologia _ * 83 * , 560 - 567 ( 1990 ) .",
    "s. shen - orr , r. milo , s. mangan , and u. alon , network motifs in the transcriptional regulation network of escherichia coli , _ nature genetics _ * 31 * , 6468 ( 2002 ) .",
    "r. milo , s. shen - orr , s. itzkovitz , n. kashtan .",
    ", d. chklovskii , and u. alon , network motifs : simple building blocks of complex networks , _ science _ * 298 * , 824827 ( 2002 ) .",
    "r. milo , s. itzkovitz , n. kashtan , r. levitt , s. shen - orr , i. ayzenshtat , m. sheffer and u. alon , superfamilies of designed and evolved networks , _ science _ * 303 * , 153842 ( 2004 ) . o. d. king , private communication .",
    "d. aldous and u.v .",
    "vazirani , `` go with the winners '' algorithms , _ proceedings of the ieee symposium on foundations of computer science _ , pp .",
    "492501 ( 1994 ) .",
    "p. grassberger and w. nadler , `` go - with - the - winners '' simulations , preprint cond - mat/0010265 ( 2000 ) .",
    "f. brglez , d. bryan , and k. kozminski , combinatorial profiles of sequential benchmark circuits , _ proceedings of ieee international symposium on circuits and systems _ , 1929 ( 1989 ) .",
    "there are singular networks where the markov process is not ergodic .",
    "this lack of ergodicity can be removed by making small modifications as in  @xcite , and by choosing the number of switching steps per edge to be randomly distributed around q."
  ],
  "abstract_text": [
    "<S> random graphs with prescribed degree sequences have been widely used as a model of complex networks . </S>",
    "<S> comparing an observed network to an ensemble of such graphs allows one to detect deviations from randomness in network properties . </S>",
    "<S> here we briefly review two existing methods for the generation of random graphs with arbitrary degree sequences , which we call the `` switching '' and `` matching '' methods , and present a new method based on the `` go with the winners '' monte carlo method . the matching method may suffer from nonuniform sampling , while the switching method has no general theoretical bound on its mixing time . </S>",
    "<S> the `` go with the winners '' method has neither of these drawbacks , but is slow . </S>",
    "<S> it can however be used to evaluate the reliability of the other two methods and , by doing this , we demonstrate that the deviations of the switching and matching algorithms under realistic conditions are small compared to the `` go with the winners '' algorithm . because of its combination of speed and accuracy </S>",
    "<S> we recommend the use of the switching method for most calculations . </S>"
  ]
}
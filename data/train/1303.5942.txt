{
  "article_text": [
    "the issue of non - locality in quantum physics was raised in 1935 by einstein , podolsky and rosen when they introduced the notion of entanglement  @xcite .",
    "thirty years later , john bell proved that the correlations entailed by entanglement can not be reproduced by classical local hidden theories between noncommunicating ( e.g.  space - like separated ) parties  @xcite .",
    "this  momentous discovery led to the natural question of _ quantifying _ quantum non - locality .",
    "a natural quantitative approach to the non - locality inherent in a given entangled quantum state is to study the amount of resources that would be required in a purely classical theory to exactly the probabilities corresponding to measuring this state .",
    "more formally , we consider the problem of _ sampling _ the joint discrete probability distribution of the outcomes obtained by people sharing this quantum state , on which each party applies locally some measurement on his share . each party is given a description of his own measurement but not informed of the measurements assigned to the other parties .",
    "this task would be easy ( for a theoretician ! )  if the parties were indeed given their share of the quantum state , but they are  not .",
    "instead , they must _ simulate _ the outcome of these measurements without any quantum resources , using as little classical communication as possible .",
    "this conundrum was introduced by tim maudlin  @xcite in 1992 in the simplest case of polarization measurements at arbitrary angles on the two photons that form a bell state such  as .",
    "maudlin claimed that this required `` the capacity  to send messages of   length '' , but he showed nevertheless that the task could be achieved with a bounded amount of _ expected _ communication .",
    "similar concepts were reinvented independently years later by other researchers  @xcite .",
    "this  led to a series of results , culminating with the protocol of toner and bacon to simulate arbitrary von neumann on a bell state with a single bit of communication in the worst case  @xcite , thus contradicting maudlin s claim .",
    "later , regev and toner extended this result by giving a simulation of arbitrary binary von neumann measurements ( meaning that the outcome for each party can take only two values ) on arbitrary bipartite states of any dimension using two bits of communication , also in the worst case  @xcite .",
    "inspired by steiner s work  @xcite , cerf , gisin and massar showed that the effect of an arbitrary pair of positive - operator - valued measurements ( povms ) on a bell state can also be simulated with a bounded amount of expected communication  @xcite .",
    "a  more detailed early history of the simulation of quantum entanglement can be found in section  6 of ref .",
    "@xcite .",
    "all this prior work is concerned strictly with the simulation of _ bipartite _ entanglement .",
    "much less is known when it comes to simulating multipartite entanglement with classical communication , a topic that is still teeming with major open problems .",
    "consider the simplest case , which is the simulation of independent arbitrary von neumann measurements on the tripartite ghz state , named after greenberger , horne and zeilinger  @xcite , which we shall denote , or more generally on its @xmath3-partite generalization .",
    "the easiest situation arises in the case of _ equatorial _ measurements ( defined below ) on a ghz state because all the marginal probability distributions obtained by tracing out one or more of the parties are uniform .",
    "hence , it suffices in this case to simulate the tite correlation .",
    "once this has been achieved , all the marginals can easily be made uniform  @xcite . making the best of this observation , bancal , branciard and gisin",
    "have given a protocol to simulate equatorial measurements on the tripartite and fourpartite ghz states at an expected cost of 10 and 20  bits of communication , respectively  @xcite .",
    "later on , branciard and gisin improved this in the tripartite case with a protocol using 3 bits of communication in the worst case  @xcite .",
    "the simulation of equatorial measurements on @xmath4 for was handled subsequently by brassard and kaplan , with an expected cost of @xmath0 bits of communication  @xcite .    despite substantial effort , the case of _",
    "arbitrary _ von neumann measurements , even on the original tripartite ghz state @xmath5 , was still wide open . here",
    ", we solve this problem in the general case of the simulation of the @xmath3-partite ghz state  @xmath4 , for any @xmath3 , under a model in which a single party , whom we call _ the leader _ , has access to a source of unbiased independent random bits , all the other parties being purely deterministic .",
    "furthermore , we have no needs for shared random variables between the parties .",
    "( most of the prior art on the simulation of entanglement by classical communication required the parties to share _ continuous _ real random variables in an initialization phase  , admittedly an unreasonable proposition , but there have been exceptions , such as ref .",
    "an  expected number of @xmath6 perfect random bits suffices to carry out our simulation  all of which can ( but do not have to ) be tossed by the leader . the expected communication cost is @xmath0 bits , but only @xmath1 _ time _ if we count one step for sending bits in parallel provided no party sends or receives more than one bit in any single  step .",
    "furthermore , in the case of equatorial measurements , it is easy to modify our protocol and improve the earlier best result  @xcite with an expected communication cost of only  @xmath1 bits and parallel time . at  the cost of a slight increase in the number of bits communicated and",
    "the number of required random bits , these tasks can be accomplished with a constant expected number of rounds .    more formally , the quantum task that we want to simulate is as follows .",
    "each party  @xmath7 holds one qubit of state and is given the description of a von neumann measurement  @xmath8 . by  local operations",
    ", they collectively perform on  @xmath4 , thus obtaining one outcome each , say  , which is their output . the  joint probability distribution @xmath9 of the  @xmath10 s",
    "is defined by the joint set of measurements .",
    "our  purpose is to sample this joint probability distribution by a purely classical process that involves no prior shared random variables and as little communication as possible . as  mentioned above , previous simulations  @xcite were able to succeed only when each individual measurement was equatorial ( defined in section  [ sampling ] ) . in  order to overcome this limitation ,",
    "our complete builds on four ingredients : ( 1 )  gravel s recently published decomposition of @xmath9 as a convex combination of two sub - distributions  @xcite ; ( 2 )  knuth and yao s algorithm  @xcite to sample exactly probability distributions assuming only a source of unbiased identically independently distributed ( i.i.d . )",
    "_ bits _ rather than a source of i.i.d .",
    "_ continuous _ uniform random variables on the interval ; ( 3 )  the _ universal method of inversion _ ( probability integral transform )  ( * ? ? ?",
    "* for instance ) ; and ( 4 )  our own distributed version of the classic _ von neumann s rejection algorithm _  @xcite .",
    "we define precisely our problem in section  [ sampling ] and we give our convex decomposition of the ghz distribution , which is the key to its simulation .",
    "then , we explain how to sample according to a bernoulli distribution even when only approximations to the distribution s parameter are available .",
    "we  also explain how the classic von neumann rejection algorithm can be used to sample in the sub - distributions defined by our convex decomposition .",
    "however , little attention is paid to the fact that the various parameters that define the joint distribution are not available in a single place .",
    "section  [ comcomp ] is concerned with the communication complexity issues .",
    "it  culminates with a complete protocol to solve our problem .",
    "improvements are presented subsequently to save time by using parallelism between the parties and to reduce the expected number of rounds to a constant .",
    "any von neumann measurement @xmath11 can be conveniently represented by a point on the bloch sphere , which can be specified by two parameters and , in which azimuthal angle  @xmath12 represents the equatorial part of the measurement and elevation angle @xmath13 represents its real part .",
    "recall that this means that @xmath11 is the hermitian idempotent operator defined by @xmath14 where , , , and @xmath15 , @xmath16 and @xmath17 are the pauli operators .",
    "a  von neumann measurement is said to be _ equatorial _ when its elevation angle vanishes .",
    "consider a set of @xmath3 von neumann single - qubit measurements @xmath18 , represented by their parameters , .",
    "this set of operators defines a joint measurement . in  turn",
    ", this measurement defines a probability distribution  @xmath19 , which we shall call the _ ghz distribution _",
    ", on the set @xmath20 of its eigenvalues .",
    "this distribution corresponds to the probability of all possible outcomes when the @xmath3-partite ghz state is measured according to  m.    it  is shown in @xcite , albeit in the usual computer science language in which von neumann measurements are presented as a unitary transformation followed by a measurement in the computational basis , that the probability of @xmath21 can be decomposed as @xmath22 where and @xmath23 hence , we see that distribution @xmath9 is a convex combination of sub - distributions @xmath24 and  @xmath25 , in which the coefficients @xmath26 and @xmath27 depend only on the equatorial part of the measurements , whereas the sub - distributions depend only on their real part",
    ". furthermore , the squares of @xmath28 and @xmath29 are themselves discrete probability distributions",
    ". a  direct derivation of these formulas is sketched in appendix  [ app - decomp ] .",
    "sampling @xmath19 is therefore a matter of sampling a bernoulli distribution with defining parameter @xmath26 before sampling either @xmath30 or @xmath31 , whichever is the case .",
    "notice that sampling @xmath31 is like sampling @xmath30 if , say , we replace @xmath32 by @xmath33 .",
    "as we shall see , full knowledge of the parameters is not required to sample exactly .",
    "we  shall see in subsection  [ bernoulli ] how to sample a bernoulli distribution with an arbitrary as parameter ( not the same @xmath19 as our probability distribution for  ghz ) using a sequence of approximants converging to @xmath19 and using an expected number of only two unbiased identically independently distributed ( i.i.d . )",
    "random bits .",
    "subsequently , we shall see in subsection  [ sampling_p ] how to sample @xmath30 by modifying von neumann s rejection algorithm in a way that it uses sequences of approximants and unbiased i.i.d .",
    "random bits . for simulating exactly the ghz distribution ,",
    "an expected number of @xmath6 perfect random bits is sufficient .",
    "note that this is close to what would be the optimal result of knuth and yao  @xcite even if all the parameters were in the same party s hand , rather than having to deal with a distributed problem .",
    "indeed , we remind the reader that their result states that , for any discrete probability distribution with entropy @xmath34 , the optimal expected number of bits is between @xmath34 and @xmath35 . the entropy of the ghz distribution is bounded by @xmath3 bits .",
    "assume that only a random bit generator is available to sample a given probability distribution and that the parameters that specify this distribution are only accessible as follows : we can ask for any number of bits of each parameter , but will be charged one unit of cost per bit that is revealed .",
    "we  shall also be charged for each random bit requested from the generator    to warm up to this conundrum , consider the problem of generating a bernoulli random variable with parameter . if @xmath36 is the binary expansion of a uniform @xmath37 random variable , i.e.  @xmath38 is our source of unbiased independent random bits , and if @xmath39 is the binary expansion of  @xmath19 ( in  case we can proceed as if it were @xmath40 with each ) , we compare bits @xmath41 and @xmath42 for @xmath43 until for the first time @xmath44 . then , if @xmath45 , we return @xmath46 , and if @xmath47 , we return @xmath48 .",
    "it  is  clear that @xmath46 if and only if @xmath49 .",
    "therefore , @xmath50 is bernoulli@xmath51 .",
    "the expected number of bits required from @xmath19 is precisely  2 .",
    "the expected number of bits needed from our random bit source is also  2 .    now , suppose that the parameter @xmath19 defining our bernoulli distribution is given by @xmath52 , as in the case of our decomposition of the ghz distribution . none of the parties can know @xmath12 precisely since it is distributed as a sum of @xmath53 s , each of which is known only by one individual party .",
    "if  we could obtain as many physical bits of  @xmath19 as needed ( although the expected number of required bits is as little as  2 ) , we could use the idea given above in order to sample according to this bernoulli distribution .",
    "however , it is not possible in general to know even the first bit of  @xmath19 , called @xmath30 above , given any fixed number of bits of the  @xmath53 s .",
    "( for  instance , if @xmath12 is arbitrarily close to @xmath54 , we need arbitrarily many bits of precision about it before we can tell if the first bit in the binary expansion of @xmath55 is @xmath56 or  @xmath57 ) .",
    "nevertheless , we can use _ approximations _ of  @xmath19 , rather than _ truncations _ , which in turn can come from approximations of  @xmath12 .",
    "we  postpone to section  [ bernoulli - distributed ] the detail of how these approximations can be obtained in a distributed setting . for the moment , assume that , for any  @xmath58 , we can obtain @xmath59 so that @xmath60",
    ". then , setting @xmath61 , we have that @xmath62 if @xmath63 and that @xmath64 if @xmath65 .",
    "considering furthermore that @xmath66 can only happen with probability  0 , the algorithm  [ algo - bernoulli ] can be employed to check if @xmath49 by generating only as many bits of @xmath67 and increasingly good approximations of @xmath19 as needed , and hence to generate a bernoulli@xmath51 random variable .",
    "set @xmath68 set @xmath69 generate an i.i.d .",
    "unbiased bit @xmath70 compute @xmath71 \\{hence @xmath72 } obtain @xmath59 so that @xmath60 return @xmath73 return @xmath74 @xmath75    the @xmath76 generated by algorithm  [ algo - bernoulli ] is bernoulli@xmath51 because of the following lemma and the fact that @xmath77 if @xmath67 is a continuous uniform random variable on @xmath78 .",
    "in fact , the algorithm is directly inspired by this lemma .",
    "[ stopping - lemma ] let @xmath79 and @xmath80 be two sequences of real numbers converging to @xmath81 and  @xmath82 , respectively , with .",
    "if , in addition , @xmath83 , @xmath84 , @xmath85 , and @xmath86 are four sequences of positive real numbers converging to zero such that and for all  @xmath58 , then there exists a positive integer @xmath87 such that for all @xmath88 the following two statements hold : @xmath89    [ 0cm][0cm]@xmath90    choosing @xmath91 , @xmath92 when @xmath93 , and @xmath94 , @xmath95 , and @xmath96 in the previous lemma , we see that algorithm  [ algo - bernoulli ] returns @xmath97 with probability  @xmath19 . notice also that the algorithm never terminates if @xmath98 , but this only happens with probability  0 .",
    "the number of iterations before returning a value , which is also the required number of independent unbiased random bits , is a random variable , say  @xmath99 .",
    "we  have seen above that @xmath100 , the expected value of  @xmath99 , would be exactly  2 if we could generate arbitrarily precise truncations of  @xmath19 .",
    "but since we can only obtain arbitrarily precise approximations instead , which is why we needed algorithm  [ algo - bernoulli ] in the first place , we shall have to pay the price of a small increase in  @xmath100 .",
    "@xmath101 therefore , @xmath102 note that the expected number of random bits used for sampling a bernoulli by this process falls within the bounds of knuth and yao  @xcite .",
    "as mentioned already , it suffices to concentrate on @xmath30 since one can sample @xmath31 in exactly the same way provided one of the angles @xmath103 is replaced by @xmath104 : this introduces the required minus sign in front of @xmath29 to transform @xmath30 into  @xmath31 .",
    "first of all , it is useful to rewrite @xmath24 . to this end , define @xmath105 and recall that @xmath106 .",
    "consider an arbitrary and let @xmath107 then @xmath24 can conveniently be rewritten as follows : @xmath108 this is a decomposition into three terms .",
    "note that @xmath109 defines a probability distribution over @xmath110 . indeed ,",
    "if we define @xmath111 as a rademacher random variable that takes value @xmath112 with probability @xmath113 and @xmath114 with complementary probability  @xmath115 , then the random vector with independent components given by @xmath116 has distribution @xmath117 . similarly , if we set @xmath118 then the random vector with independent components given by @xmath119 has distribution @xmath120 .",
    "the key observation is that both @xmath117 and @xmath120 can be sampled without any needs for communication because each party @xmath121 knows parameters @xmath115 and  @xmath113 , which is sufficient to draw independently according to local rademacher random variable @xmath111 or  @xmath122 .",
    "moreover , a single unbiased independent random bit  @xmath123 drawn by a designated party suffices to sample collectively from distribution , provided this bit is transmitted to all parties : everybody samples according to @xmath117 if or to @xmath120 if .",
    "now , it is easy to verify that for all , and therefore .",
    "the relevance of all these observations is that we can apply von neumann s rejection algorithm  @xcite to sample @xmath24 since it is bounded by a small constant  ( 2 ) times an easy - to - draw probability distribution  ( @xmath124 ) . for  the moment , we assume once again the availability of a continuous uniform random generator , which we shall later replace by a source of unbiased independent random bits",
    ". we  also assume for the moment that we can compute the @xmath125 s , @xmath24 , @xmath126 and @xmath127 exactly .",
    "this gives rise to algorithm  [ algo - vn ] .",
    "generate @xmath67 uniformly on @xmath128 $ ] generate independent rademacher random variables @xmath129 with parameters @xmath130 generate an unbiased independent random bit @xmath131 set @xmath132 set @xmath133    by the general principle of von neumann s rejection algorithm , because for all @xmath134 , the number of iterations round the loop before probability distribution @xmath30 is successfully sampled is at most  2 . within one iteration , exactly 2 expected independent unbiased random bits suffice to generate each of the @xmath3 rademacher random variables by a process similar to what is explained in the second paragraph of section  [ bernoulli ]",
    ". hence an expected total of random bits are needed each time round the loop for an expected grand total of no more than bits .",
    "the entropy of @xmath30 being bounded by @xmath3 , we are not far from reaching knuth and yao s bound  @xcite on the number of expected random perfect bits that would be required to sample it exactly in the random bit model .",
    "but of course , this does not take account of the ( apparent ) need to generate continuous uniform @xmath37 random variable  @xmath67 .",
    "it  follows that the expected total amount of work required by algorithm  [ algo - vn ] is @xmath2 , provided we count infinite real arithmetic at unit cost .",
    "furthermore , the time taken by this algorithm , divided by  @xmath3 , is stochastically smaller than a geometric random variable with constant mean , so its tail is exponentially decreasing .",
    "now , we modify and adapt this algorithm to eliminate the need for the continuous uniform  @xmath67 ( and hence its generation ) , which is not allowed in the random _ bit _ model . furthermore , we eliminate the need for infinite real arithmetic and for the exact values of @xmath135 , @xmath136 and @xmath137 , which would be impossible to obtain in our distributed setting since the parameters needed to compute these values are scattered among all participants , and replace them with approximations ",
    "we  postpone to section  [ approx - product ] the issue of how they can be computed .",
    "( on  the other hand , arbitrarily precise values of the @xmath125 s _ are _ available to generate independent rademacher random variables with these parameter . )    in  each iteration of algorithm  [ algo - vn ] , we generated a pair @xmath138 .",
    "however , we did not really need  @xmath67 : we  merely need to generate a bernoulli random variable @xmath76 for which @xmath139 for this , we adapt the method developed for algorithm  [ algo - bernoulli ] . again , we denote by @xmath140 the approximant of @xmath67 obtained by truncating @xmath67 to the first @xmath58 bits in its binary expansion , so that , except with probability  0 . furthermore , we denote by @xmath141 ( @xmath142  for _ left _ ) and @xmath143 ( @xmath144  for _ right _ ) the @xmath58-th approximants of @xmath145 and @xmath137 , respectively , which means that @xmath146 and @xmath147 . then using @xmath148 to denote arbitrary real numbers so that , @xmath149 similarly , @xmath150 thus , we know that @xmath97 if @xmath151 also , @xmath152 if @xmath153    note : @xmath154 is given to the algorithm , generated according to @xmath155 set @xmath68 set @xmath69 generate an i.i.d .",
    "unbiased bit @xmath70 compute @xmath71 \\{hence @xmath72 } compute @xmath141 and @xmath143 from @xmath50 return @xmath73 return @xmath74 @xmath75    it  follows that algorithm  [ algo - stopping ] can be used to sample random variable  @xmath156 , which is used as terminating condition in algorithm  [ algo - vn ] in order to eliminate its need for the generation of a continuous uniform random variable and for the precise values of @xmath135 , @xmath136 and  @xmath137 .    since @xmath157 and @xmath158 as @xmath159 , algorithm  [ algo - stopping ] halts with probability  1 by lemma  [ stopping - lemma ] .",
    "if it has not halted after having processed @xmath141 and @xmath143 , then we know that @xmath160 but since @xmath67 is uniformly distributed on @xmath128 $ ] , the probability of this is no more than @xmath161 let @xmath99 be the value of @xmath58 upon exit from the loop in the algorithm , which is the number of bits needed from the binary representations of @xmath162 and @xmath137 in order to reject or accept .",
    "we  have @xmath163 thus by denoting @xmath164 , @xmath165 now , we uncondition , and obtain @xmath166 it is unimportant for what follows , but worth noting nevertheless , that the intermediate bound on @xmath100 involves the binary entropy of the distribution @xmath167 .",
    "in this section , we consider the case in which the sampler of the previous section no longer has full knowledge of the ghz distribution to be simulated .",
    "the sampler , whom we call _ the leader _ in a distributed setting , has to communicate through classical channels in order to obtain partial knowledge of the parameters belonging to the other parties .",
    "partial knowledge results in approximation of the distributions involved in sampling the ghz distribution , but , as we saw in the previous section , we know how to sample exactly in the random bit model using approximations .",
    "we  consider two models of communication : in  the _ sequential model _ , the leader has a direct channel with everyone else and all the communication takes place sequentially because the leader can not listen to everyone at the same time ; in  the _ parallel model _ , parties communicate with one another in a tree - structured way , with the leader at the root , which allows us to save on communication _ time _ , at the expense of a small increase in the total number of bits that need to be communicated . although all parties toss random coins in what follows , it is easy to modify the protocol in a way that only the leader needs the availability of a source of unbiased identically independently distributed random bits , all the other parties being purely deterministic , at a negligible cost in terms of communication complexity .",
    "* definition : * a  _ @xmath58-bit approximation _ of a quantity @xmath168 is any @xmath169 such that @xmath170 . for instance , @xmath168 can be a sum of numbers , a product of numbers or a real - valued function of one or many variables .",
    "a  special case of @xmath58-bit approximation is the _",
    "@xmath58-bit truncation _ . for convenience",
    ", we sometimes use the shortcuts _",
    "@xmath58-approximation _ and _",
    "@xmath58-truncation_.      in order to sample the ghz distribution , we know from section  [ sampling ] that we must first sample the bernoulli distribution with parameter @xmath26 , where . let us say that the leader is party number  1",
    ". since he knows only  @xmath171 , he must communicate with the other parties to obtain knowledge about @xmath53 for @xmath172 .",
    "the problem of sampling a bernoulli distribution with probability @xmath26 reduces to learning the sum @xmath12 with sufficient precision in order to use algorithm  [ algo - bernoulli ] .",
    "the problem of computing a @xmath58-bit approximation of @xmath173 is relatively easy .",
    "define and for each  @xmath7 . if  the leader obtains an @xmath174-bit approximation of  each @xmath175 , , and if we define , we need  to find the value of @xmath174 for which is a @xmath58-bit approximation of . by virtue of results on taylor series expansion , we have @xmath176 where denotes the euclidean norm of a vector .",
    "it  suffices to choose in order to conclude as required that .",
    "taking into account the integer part of each @xmath175 , which must also be communicated , and remembering that since it is an angle is a _ half _ angle and one fewer bit is needed to communicate its integer part , but we prefer to consider here the more general case of approximating the cosine square of a sum of arbitrary angles . ] , the required number of communicated bits in the sequential model is therefore , which is @xmath177 . in  this case , the expected value of @xmath58 is bounded by  @xmath178 ( see the analysis of the bernoulli sampling section  [ bernoulli ] ) , so that this operation requires an expected communication of @xmath1 bits in the sequential model .",
    "once the leader has produced a bit @xmath179 with probability @xmath26 , he samples either @xmath30 or @xmath31 , depending on whether he got @xmath180 or  @xmath181 .",
    "the problem of sampling @xmath31 reduces to sampling @xmath30 if the leader replaces his own @xmath32 with @xmath182 ; thus we concentrate on sampling @xmath30 .",
    "of  course , the leader does not know @xmath103 for @xmath172 .",
    "this problem reduces to learning with sufficient precision the products and , given that the @xmath111 s are independent rademacher distributions with parameters @xmath183 , . once these products are known with , say , @xmath184 bits of precision , the left and right @xmath58-bit approximations @xmath141 and @xmath143 are easily computed , which allows us to run the modified von neumann s rejection algorithm from the previous section .    in this section , we explain how to compute a @xmath58-bit approximation to @xmath185 and @xmath186 at an expected communication cost of bits in the sequential model , which translates to an expected @xmath187 _ time _ in the parallel model . for our specific application of simulating the ghz distribution , we proved at the end of section  [ sampling_p ] that the expected value of @xmath58 is bounded by .",
    "it  follows that an expected cost of @xmath0 bits suffices in the sequential model and @xmath1 time in the parallel model .    given with the @xmath188 s distributed according to non - identical independent rademachers with parameter @xmath189 or @xmath190",
    ", we need to compute approximations of @xmath185 and @xmath186 .",
    "we  use @xmath191 and @xmath192 to denote and , respectively , as well as @xmath193 and @xmath194 to denote their respective @xmath174-approximations obtained by truncating @xmath191 and @xmath192 to @xmath174 bits .",
    "we  need to determine @xmath174 such that the products @xmath195 and @xmath196 are of @xmath185 and  @xmath186 , respectively . _",
    "notice that each party knows exactly his own @xmath191 and @xmath192 , and hence @xmath193 and @xmath194 can be transmitted directly to the leader , rather than approximations of the @xmath103s_. for each @xmath191 , there exists @xmath197 $ ] such that @xmath198 ; thus , using @xmath199 to denote @xmath200 , we have @xmath201 and hence we can bound the error as follows : @xmath202 setting @xmath203 then @xmath204 notice that if @xmath205 and @xmath206 , then @xmath207 taking account of the need to transmit the @xmath174-approximations to both @xmath191 and  @xmath192 , which consists of the sign of these numbers in addition to the first @xmath174 bits of their binary expansion , the expected communication cost in the sequential model is @xmath208 bits , which once again is .    to  bring this down to @xmath187",
    ", we introduce the parallel model , in which parties communicate with one another to a binomial tree structure . for  simplicity , we may that @xmath3 is a power of  @xmath209 .",
    "to  understand the algorithm , think of a tree with nodes containing @xmath192 and  @xmath191 , for .",
    "node number @xmath121 can be thought of as belonging to party number @xmath121 , who knows @xmath192 and @xmath191 exactly .",
    "we  pair parties by groups of  @xmath209 . for a given pair , say , with @xmath121 odd , party sends @xmath210 and @xmath211 to party  @xmath121 , who computes @xmath212 and @xmath213 .",
    "then , party  @xmath121 is matched with party @xmath214 , where is divisible by  4 .",
    "this process gives rise to the new pair , from which emerges the products @xmath215 and @xmath216 , and so on up to the leader , who is party  1 at the root of the tree .",
    "this process is illustrated in figure  [ fig : algo4 ] , in which numbers in the nodes correspond to parties and numbers next to the arrows correspond to the order in which data is transmitted .",
    "if @xmath3 is not a power of  @xmath209 , add virtual parties with for + ( these parties , being dummy , have no on the overall communication complexity ) @xmath217 party @xmath121 does @xmath218 and @xmath219 , which are @xmath174-approximations of @xmath191 and @xmath192 , respectively @xmath220 party @xmath221 sends @xmath222 and @xmath223 to party @xmath121 party @xmath121 computes @xmath224 and @xmath225 , both truncated to @xmath174 bits[step : retruncate ] @xmath226 party 1 ( the leader ) outputs @xmath227 and @xmath228    this approach is formalized in algorithm  [ algo - parallel ] , in which new variables @xmath229 and @xmath230 are introduced to hold approximations of products of increasingly many @xmath231 s and @xmath123 s as the process unfolds .",
    "the  issue of the required precision at each level of the process has to be reconsidered because the leader will no longer receive the entire list of @xmath193 s and @xmath194 s since subproducts are calculated _ en  route _ by intermediate parties .",
    "it  is shown in appendix  [ app - error ] that if @xmath232 and @xmath233 are @xmath174-truncations of @xmath234 and @xmath235 , respectively , for arbitrary real numbers @xmath234 and @xmath235 in @xmath236 $ ] and integer  @xmath174 , then @xmath237 is an imation of  @xmath238 .",
    "however , @xmath237 could have @xmath239 bits of precision and we do not want to transmit so many bits up the binomial tree . there is an apparent problem if we transmit the @xmath174-truncation of @xmath237 instead , as we do indeed in algorithm  [ algo - parallel ] , because _ it _ is an -approximation of  @xmath238 but not necessarily an -approximation .",
    "nevertheless , it is shown in appendix  [ app - error ] that the recursive application of pairwise multiplications followed by @xmath174-truncations results in the loss of only one bit of precision per subsequent level .",
    "thus , on the @xmath7-th time round the * repeat * loop , , the numbers calculated at step  [ step : retruncate ] , even after @xmath174-truncation , are -approximations to the exact product that they represent .",
    "it  follows that the final numbers computed by the leader when are @xmath58-approximations of the products of all the @xmath191 s and the @xmath192 s , as required .    to analyse the communication complexity of this strategy",
    ", we consider that bits sent and received in parallel between disjoint pairs of parties count as a single time step in the global communication process .",
    "the * repeat * loop is carried out times .",
    "each time round this loop , parties transmit in parallel two @xmath174-bit approximations , which require bits of communication per active party since signs must also be transmitted .",
    "it  follows immediately that the parallel complexity of algorithm  [ algo - parallel ] is , which is .",
    "therefore , this takes @xmath240 time provided @xmath241 .",
    "we are finally ready to glue all the pieces together into algorithm  [ algo - final ] ( on  next page ) , which has an complexity of @xmath0 bits of communication in the sequential model .",
    "variations are discussed in section  [ variations ] to reduce the number of rounds and to adapt it to make it work in @xmath242 time in the parallel model , as well as to make it go much faster in the case of equatorial measurements .",
    "the leader , who is party number  1 , generates a random bit @xmath179 according to a bernoulli random distribution with parameter @xmath26 using algorithm 1 modified according to section  [ bernoulli - distributed ] to take account of the fact that the value of is distributed among the parties[step : bern ] the leader adds @xmath243 to his own @xmath13-parameter i.e.  @xmath244 + [ begin - repeat ] the leader generates a fair random bit @xmath131 and broadcasts it to the other parties + [ step : scratch ] locally , each party @xmath121 generates a random @xmath245 according to an independent rademacher distribution with probability @xmath246 that + each party does @xmath247   + the leader sets @xmath68[line : initk ] the leader sets @xmath69 + [ begin - repeat - forever ] the leader generates an i.i.d .",
    "unbiased bit @xmath70 the leader computes @xmath71 \\{hence @xmath72 } the leader requests @xmath248-approximations of @xmath191 and @xmath192 from each party @xmath249[line : costly ] the leader uses this information to compute @xmath250-bit approximations of @xmath185 and @xmath186 , as explained in section  [ approx - product ] .",
    "these approximations are used in turn to compute @xmath58-bit approximations @xmath251 of @xmath252 and @xmath253 of @xmath137 set @xmath254 and * break from the repeat forever loop*. set @xmath255 and * break from the repeat forever loop*. set @xmath75 and * continue the repeat forever loop * + [ line : increase ] [ end - repeat - forever ] [ end - repeat ] the leader informs all the other parties that the simulation is complete and , therefore , that the time has come for each party  @xmath121 ( including the leader himself ) to output his current value of  @xmath111[step : thatsit ]    * correctness of the protocol : * the part occurring before the first `` repeat '' ( line  [ begin - repeat ] ) samples a bernoulli with parameter @xmath256 , which allows the leader to decide whether to sample @xmath50 to  @xmath30 ( by  leaving his @xmath32 unchanged ) or according to  @xmath31 ( by  adding @xmath243 to his  @xmath32 ) . notice that the leader does not have to inform the other parties of this decision since they do not need to know if the sampling will be done according to @xmath30 or  @xmath31 . in  section  [ bernoulli - distributed ] , we showed how to sample exactly a bernoulli with parameter @xmath256 when the @xmath257 s are not known to the leader for  .",
    "the part within the outer `` repeat '' loop ( lines  [ begin - repeat ] to  [ end - repeat ] ) is essentially von neumann s rejection algorithm , which has been adapted and modified to work in a distributed scenario .",
    "the leader must first know which of @xmath258 or @xmath259 to sample . for  this purpose",
    ", he generates an unbiased random bit @xmath131 and broadcasts it to the other parties . sampling either @xmath117 or @xmath120",
    "can now be done locally and independently by each party @xmath121 , yielding a tentative .",
    "the parties will output these @xmath111 s only at the end , provided this round is not rejected .",
    "now , each party uses his @xmath111 to compute locally @xmath260 and @xmath261 , which will be sent bit by bit to the leader upon request , thus allowing him to compute increasingly precise approximations @xmath141 and @xmath143 of and @xmath137 , respectively .",
    "these values are used to decide whether a decision can be made to accept or reject this particular  @xmath50 , or whether more information is needed from the other parties to make this decision .",
    "as  shown in the section  [ sampling_p ] , the expected number of bits needed in @xmath141 and @xmath143 before we can break out of the `` repeat forever '' loop is . at  that point",
    ", flag @xmath76 tells the leader whether or not this was a successful run of von neumann s rejection algorithm . if  @xmath152 , the entire process has to be restarted from scratch , except for the initial bernoulli sampling , at line  [ step : scratch ] .",
    "on  the other hand , once the leader gets @xmath97 , he can finally tell the other parties that they can output their  @xmath111 s because , according to von neumann s rejection principle , this signals that the vector @xmath262 is distributed according to @xmath30 ( or  @xmath31 , depending on the initial bernoulli ) .",
    "no  more than rounds of the outer `` repeat '' loop are expected to be required before we can thus conclude successfully .",
    "* expected communication cost and number of random coin : * the expected amount of randomness used in this process is upper - bounded by bits .",
    "this is calculated as follows : the expected number of bits for sampling bernoulli  @xmath179 is bounded by  @xmath178 .",
    "this is followed by an expectation of no more than @xmath263 rounds of von neumann s rejection algorithm ( the outer `` repeat ''  loop ) . in  each of these rounds ,",
    "we need @xmath57 bit for @xmath131 and expect @xmath209 bits for each of the @xmath111 s ( hence @xmath264 in total ) , before entering the `` repeat forever '' loop .",
    "we  expect to go round this loop times , needing one more random bit @xmath70 each time .",
    "putting it all together , the expected number of random bits is no more than .",
    "the expected amount of communication is dominated by the leader s need to obtain increasingly accurate approximations of @xmath191 and @xmath192 from all other parties at line  [ line : costly ] in order to compute increasingly accurate approximations of @xmath141 and @xmath143 , which he needs in order to decide whether or not to break from the `` repeat forever '' loop and , in such case , whether or not to accept  @xmath50 as final output .",
    "on  the @xmath58-th time round the `` repeat forever '' loop , the leader needs bits of precision plus one bit of sign about each @xmath191 and  @xmath192 , ( in  addition to having full knowledge about his own @xmath265 and @xmath266 , of course ) .",
    "this would be very expensive if all those bits had to be resent each time round the loop , with increasing values of  @xmath58 .",
    "fortunately , this process works well if the parties send _ truncations _ of these values to the leader , because each truncation simply adds one bit of precision to the previous one .",
    "hence , it suffices for the leader to request bits from each other party at the onset when , and only two additional bits per party are needed afterwards for each subsequent trip round the loop ( one  for @xmath191 and one for  @xmath192 ) .",
    "all counted , a total of bits will have been requested from all other participants by the time we have gone through the `` repeat forever '' loop @xmath58 times . since the expected value of @xmath58 upon exiting this loop is bounded by , we expect the leader to need bits of communication from the other participants to complete von neumann s rejection algorithm ( lines  [ begin - repeat ] to  [ end - repeat ] ) .",
    "this is @xmath0 expected bits of communications . the additional amount of communication required to sample bernoulli @xmath179 at step  [ step : bern ] ( which is bits ) and for the leader to broadcast to all participants the value of @xmath131 as well as synchronization bits by which he needs to inform the other parties of success or failure each time round the loops is negligible .",
    "all counted , algorithm  [ algo - final ] needs @xmath2 bits of randomness and @xmath0 bits of communication in order to sample exactly the ghz distribution under arbitrary von neumann measurements .",
    "we can modify algorithm  [ algo - final ] in a variety of ways to improve different parameters at the expense of others . here , we mention briefly three of these variations : the parallel model , bounding the number of rounds , and the simulation of equatorial measurements .    * the parallel model : * let us use algorithm  [ algo - parallel ] to replace step  [ line : costly ] in algorithm  [ algo - final ] .",
    "this allows the leader to obtain his required -approximations of @xmath267 and @xmath268 with no need for him to learn all the @xmath248-approximations of @xmath191 and @xmath192 from each party  @xmath249 .",
    "we  have seen that parallel time is expected to suffice to this task . unfortunately , this improvement is incompatible with the idea of transmitting only one more bit of information for each @xmath191 and @xmath192 when @xmath58 is increased by  @xmath57 , which was crucial in the efficiency of the basic version of algorithm  [ algo - final ] studied in section  [ final - protocol ] .",
    "the problem stems from the fact that the @xmath58-truncation of the product of the @xmath58-truncations of @xmath234 and @xmath235 can be entirely different from the ( ) -truncation of the product of the ( ) -truncations of the same numbers .",
    "this is illustrated with and ( in  binary , of course ) .",
    "if  we take , the truncations of @xmath234 and @xmath235 are @xmath269 and @xmath270 , respectively , whose product is @xmath271 .",
    "in  contrast , with , the truncations of @xmath234 and @xmath235 are @xmath272 and @xmath273 , respectively , whose product is @xmath274 .",
    "we  see that the @xmath275-truncation of the product of the @xmath275-truncations is @xmath276 , whereas the @xmath178-truncation of the product of the @xmath178-truncations is @xmath277 , which are different on each bit of the fractional part .",
    "this demonstrates the fact that the bits going up the binomial tree in algorithm  [ algo - parallel ] can change drastically from one run to the next even if a single bit of precision is added to all nodes at the bottom level , and therefore that we have to start afresh for each new value of  @xmath58 . as  a consequence ,",
    "the use algorithm  [ algo - parallel ] to replace step  [ line : costly ] in algorithm  [ algo - final ] results in an `` improvement '' in which we expect to have to transmit @xmath278 bits , taking @xmath279 parallel time to do  so !",
    "fortunately , there is an easy cure to this problem , which we only sketch here . in  addition to using algorithm  [ algo - parallel ] to replace step  [ line : costly ] in algorithm  [ algo - final ]",
    ", we also change step  [ line : increase ] from to .",
    "even though parties have to transmit the entire -truncations of each @xmath191 and @xmath192 for each new value of  @xmath58 , the work done each time round the loop is roughly equivalent to the sum of all the work done until then . since we expect to succeed when @xmath58 is roughly equal to  @xmath3 , the expected total parallel time will be about twice with , which is simply",
    ". the expected total number of bits communicated with this approach will be slightly greater than with algorithm  [ algo - final ] , but will remain @xmath0 .    * reducing the number of rounds : * algorithm  [ algo - final ] is efficient in terms of the number of bits of randomness as well as the number of bits of communication , but it requires an expected @xmath2 rounds , in which the leader and all other parties take turn at sending messages",
    ". this could be prohibitive if they are far apart and their purpose is to try to convince examiners that they are actually using true entanglement and quantum processes to produce their joint outputs , because it would prevent them from responding quickly enough to be credible .",
    "the solution should be rather obvious at this point , and we leave the details to the reader . if  we change step  [ line : increase ] from to , the expected number of rounds is decreased from @xmath2 to  @xmath280 . if  in addition we start with `` @xmath281 '' instead of `` @xmath68 '' , the expected number of rounds becomes a constant .",
    "we  should refrain from using the parallel model , however , which requires logarithmically more messages than the sequential model to be transmitted between pairs of parties .",
    "* equatorial measurements : * recall that equatorial measurements are those for which for each party  @xmath7 . in  this case , the leader can sample according to  @xmath30 or @xmath31 without any help or communication from the other parties since he has complete knowledge of their elevation angles .",
    "therefore , he can run steps  [ begin - repeat ] to  [ end - repeat ] of algorithm  [ algo - final ] all by himself !",
    "however , he needs to know from which of @xmath30 or @xmath31 to sample , which is provided by step  [ step : bern ] in algorithm  [ algo - final ] .",
    "the  only remaining needs for communication occurs in step  [ step : thatsit ] , which has to be modified from `` the leader informs all the other parties that the simulation is complete '' to `` the leader informs all the other parties of which value of he has chosen from them '' .    only step  [ step : bern ] requires significant communication since the new step  [ step : thatsit ] needs only the transmission of bits .",
    "we  have already seen at the end of section  [ bernoulli - distributed ] that step  [ step : bern ] requires an expected communication of @xmath1 bits in the sequential model .",
    "this is an improvement over the previously best technique known to simulate the ghz distribution under arbitrary equatorial von neumann measurements  @xcite , which required an expectation of @xmath0 bits of communication .    in the parallel model ,",
    "it is easy to adapt algorithm  [ algo - parallel ] to work with sums instead of products , which is the relevant operation to parallelize step  [ step : bern ] of algorithm  [ algo - final ] . in  fact , parallelizing sums is easier than products because if @xmath232 and @xmath233 are @xmath174-truncations of @xmath234 and @xmath235 , respectively , then @xmath282 is not only an imation of  @xmath283 , but so is its @xmath174-truncation .",
    "we  expect about 4 rounds in the `` repeat forever '' loop of algorithm  [ algo - bernoulli ] , in which round @xmath58 requires the leader to obtain a imation of @xmath284 , which in turn requires the transmission of bits from each of the half - angles owned by the various parties .",
    "the binomial tree construction makes it possible to percolate this sum up to the leader through @xmath285 levels for an expected total of @xmath286 time .",
    "ironically , this makes trivial step  [ step : thatsit ] dominate over step  [ step : bern ] in terms of parallel time .",
    "even though the leader is able to obtain the global outcome after only @xmath286 time , the problem at hand requires him to distribute their outputs to each participant . according to our parallel model , of communication , no shortcut is possible since the leader must send the output bits one by one .",
    "consequently , we can not do better than @xmath2 time in the parallel model to sample the ghz distribution under arbitrary equatorial measurements .",
    "of course , we could have parallelized step  [ step : bern ] even in the case of non - equatorial measurements .",
    "however , this would not have impacted significantly on the overall time complexity of our solution , which remains @xmath1 .",
    "we have addressed the problem of simulating the effect of arbitrary independent von neumann measurements on the qubits forming the general ghz state distributed among @xmath3 parties . rather than doing the actual quantum measurements , the parties must sample the exact ghz probability distribution by purely classical means , which necessarily requires communication in view of bell s theorem .",
    "our main objective was to find a protocol that solves this conundrum with a finite amount of expected communication , which had only been known previously to be possible when the von neumann measurements are restricted to being equatorial ( a  severe limitation indeed ) .",
    "our solution needs only @xmath0 bits of communication , which can be dispatched in @xmath1 time if bits can be sent in parallel provided nobody has to send or receive more than one bit in any given step .",
    "we  also improved on the former art in the case of equatorial measurements , with @xmath1 bits of communication and @xmath2 parallel time .",
    "knuth and yao  @xcite initiated the study of the complexity of generating random integers ( or  bit strings ) with a given probability distribution  @xmath9 , assuming only the availability of a source of unbiased identically independently distributed random bits .",
    "they showed that any sampling algorithm must use an expected number of bits at least equal to the entropy @xmath287 of the distribution , and that the best algorithm does not need more than three additional bits .",
    "for further results on the bit model in random variate generation , see chapter xiv of ref .",
    "@xcite .",
    "the ghz distribution has a binary entropy no larger than  @xmath3 , and therefore it could be simulated with at most random bits if all the parameters were concentrated in a single place .",
    "even though we have studied the problem of simulating this distribution in a setting in which the defining parameters ( here the description of the von neumann measurements ) are distributed among @xmath3 parties , and despite the fact that our main purpose was to minimize communication between these parties , we were able to succeed with expected random bits , which is less than six times the bound of knuth and yao .",
    "we leave for further research the problem of simulating arbitrary positive - operator - valued measurements ( povms ) on the single - qubit shares of ghz states , as well as the problem of simulating the ghz distribution with _ worst - case _ bounded classical communication .",
    "we wish to thank marc kaplan and nicolas gisin for stimulating discussions about the simulation of entanglement .",
    "furthermore , marc has carefully read ref .",
    "@xcite , in which the decomposition of the ghz distribution as a convex combination of two sub - distributions was first accomplished .",
    "g.b .  is supported in part by canada s natural sciences and engineering research council of canada ( nserc ) , the canada research chair program , and the canadian institute for advanced research ( cifar ) .",
    "is supported in part by nserc and fonds de recherche du qubec  nature et technologies ( frqnt )",
    ".    20 j .- d .",
    "bancal , c.  branciard and n.  gisin , `` simulation of equatorial von neumann measurements on ghz states using nonlocal resources '' , _ advances in mathematical physics _ * 2010*:293245 , 2010 .",
    "bell , `` on  the einstein - podolsky - rosen paradox '' , _ physics _ * 1*:195200 , 1964 .    c.  branciard and n.  gisin ,",
    "`` quantifying the nonlocality of greenberger - horne - zeilinger quantum correlations by a bounded communication simulation protocol '' , _ physical review letters _ * 107*:020401 , 2011 .",
    "g.  brassard .",
    "`` quantum communication complexity '' , _ foundations of physics _ * 33*(11):15931616 , 2003 .",
    "g.  brassard , r.  cleve and a.  tapp , `` cost of exactly simulating quantum entanglement with classical communication '' , _ physical review letters _ * 83*:18741877 , 1999 .",
    "g.  brassard and m.  kaplan , `` simulating equatorial measurements on ghz states with finite expected communication cost '' , _ proceedings of 7th conference on theory of quantum computation , communication , and cryptography ( tqc ) _ , pp .  6573 , 2012 .",
    "n.  cerf , n.  gisin and s.  massar , `` classical teleportation of a quantum bit '' _ physical review letters _ * 84*(11):25212524 , 2000 .",
    "l.  devroye , _ non - uniform random variate generation _ , springer - verlag , new york , 1986 .",
    "a.  einstein , b.  podolsky and n.  rosen , `` can quantum - mechanical description of physical reality be considered complete ? '' , _ physical review _ * 47*:777780 , 1935 .",
    "n.  gisin , personal communication , 2010 .    c.  gravel , `` structure de la distribution de probabilit de ltat ghz sous laction de mesures de von neumann locales '' , m.sc .",
    "thesis , department of computer science and operations , universit de montral : https://papyrus.bib.umontreal.ca/jspui/handle/1866/5511 , 2011 .    c.  gravel , `` structure of the probability distribution for the ghz quantum state under local von neumann measurements '' , _ quantum physics letters _ * 1*(3):8796 , 2012 .",
    "greenberger , m.a .",
    "horne and a.  zeilinger , `` going beyond bell s theorem '' , in _",
    "bell s theorem , quantum theory and conceptions of the universe _ , edited by m.  kafatos ( kluwer academic , dordrecht ) , pp .  6972 , 1989 .",
    "d.e .  knuth and a.c .",
    "yao , `` the complexity of nonuniform random number generation '' , in : _ algorithms and complexity _ , edited by j.e .",
    "traub , pp .",
    "357428 , academic press , new york , 1976 .",
    "s.  massar , d.  bacon , n.  cerf and r.  cleve , `` classical simulation of quantum entanglement without local hidden variables '' , _ physical review  a _ * 63*(5):052305 , 2001 .",
    "t.  maudlin , `` bell s inequality , information transmission , and prism models '' , _ psa : proceedings of the biennial meeting of the philosophy of science association _ , pp .  404417 , 1992 .",
    "j.  von neumann , `` various techniques used in connection with random digits .",
    "monte carlo methods '' , _ national bureau standards _ * 12*:3638 , 1951 . reprinted in _ collected works _ , * 5*:768770 , pergamon press , 1963 .",
    "o.  regev and b.  toner , `` simulating quantum correlations with finite communication '' , _ siam journal on computing _ * 39*(4):15621580 , 2009 .",
    "m.  steiner , `` towards quantifying non - local information transfer : finite - bit non - locality '' , _ physics letters",
    "a _ * 270*:239244 , 2000 .    b.  toner and d.  bacon , `` communication cost of simulating bell correlations '' , _ physical review letters _ *",
    "91*:187904 , 2003 .",
    "our simulation of ghz distribution hinges upon its decomposition into a convex combination of two sub - distributions , as stated at the beginning of section  [ sampling ] , @xmath22 in which the coefficients @xmath26 and @xmath27 depend only on the equatorial part of the measurements , whereas the sub - distributions depend only on their real part .",
    "this decomposition was obtained by one of us  @xcite , albeit in the usual computer science language in which von neumann measurements are presented as a unitary transformation followed by a measurement in the computational basis . for completeness , we give in this appendix a rough sketch of how this decomposition can be obtained directly in the language of von neumann measurements .",
    "first , we remind the reader of some facts , including some already given in section  [ sampling ] .",
    "we begin with a @xmath288 von neumann measurement , which is a hermitian idempotent operator @xmath11 that be written as @xmath289 the fact that @xmath11 is idempotent implies that @xmath290 .",
    "thus , using the spherical coordinates @xmath291 $ ] , the parameters @xmath292 can be written as @xmath293 so that @xmath294    the spectra ( set of eigenvalues ) of @xmath11 is @xmath295 and the unitary operator @xmath67 that diagonalizes @xmath11 is given by @xmath296 with @xmath297 in other words , we have @xmath298 .    also , we have that the density matrix representing the ghz state can be decomposed as @xmath299    before analyzing the joint probability function , we also remind the reader that @xmath300 and @xmath301 and that @xmath302 where @xmath303 is the kronecker delta function @xmath304 iff @xmath305 and @xmath306 iff @xmath307",
    ". we also invite the reader to verify that @xmath308    from now on , we write @xmath309 , @xmath310 , @xmath311 and @xmath312 in order to save space . + given @xmath3 von neumann measurements @xmath18 , or equivalently the @xmath3 unitary transformations @xmath313 for @xmath314 that diagonalize them , i.e.  @xmath315 , and also their joint _ eigenvectors _ @xmath316 and the joint spectral operator @xmath317 , the joint probability function of the _ eigenvalues _ is given by the axioms of quantum mechanics : @xmath318    putting these equations together , we have : @xmath319    thus , @xmath320 .    keeping in mind that @xmath321 and @xmath322 it follows that @xmath323 if we define @xmath324 this is precisely the convex decomposition @xmath325 where , given at the beginning of section  [ sampling ] .    as a `` reality check ''",
    ", it is elementary to analyse this formula for the special case of equatorial measurements , in which @xmath326 for all  @xmath121 . in  particular",
    ", we obtain the well - known facts that all the marginal probability distributions obtained by tracing out one or more of the parties are uniform and that the expected value of the product of the @xmath327 s is equal to @xmath328 those were indeed the formulas used in the prior art of simulating equatorial measurements on ghz states  @xcite .",
    "hereinafter , @xmath329 denotes the integer part of @xmath330 for any @xmath331 . for any @xmath331 and positive integer  @xmath174",
    ", we have that @xmath332      suppose now that we have two numbers @xmath336 at level @xmath121 in the binomial tree inherent to algorithm  [ algo - parallel ] , such that @xmath337 and @xmath338 . @xmath339 and @xmath340 can be expressed recursively using the numbers @xmath341 , @xmath342 , @xmath343 , and @xmath344 as @xmath345      before upper bounding @xmath349 , we notice that , @xmath350 & = & { \\varepsilon}_{j-1}\\end{aligned}\\ ] ] and the same for @xmath351 . + before upper bounding @xmath349",
    ", we also establish the following inequality @xmath352"
  ],
  "abstract_text": [
    "<S> john bell has shown that the correlations entailed by quantum mechanics can not be reproduced by a classical process involving non - communicating parties . </S>",
    "<S> but can they be simulated with the help of bounded communication ? </S>",
    "<S> this problem has been studied for more than twenty years and it is now well understood in the case of bipartite entanglement . </S>",
    "<S> however , the issue was still widely open for multipartite entanglement , even for the simulation of arbitrary von measurements on the tripartite ghz state . here , we give a complete solution for general ghz states : von neumann measurements can be simulated exactly with @xmath0 bits of expected communication , and @xmath1 time is sufficient to carry out the protocol in parallel . </S>",
    "<S> furthermore , only one party needs to be probabilistic and it needs to draw only @xmath2 unbiased random bits . in the case of equatorial measurements , we improve earlier results with a protocol that needs only @xmath1 bits of communication and @xmath2 parallel time . at  the cost of a slight increase in the number of bits communicated , these tasks can be accomplished with a constant expected number of rounds . </S>",
    "<S> + keywords and phrases . </S>",
    "<S> entanglement simulation , greenberger  horne  </S>",
    "<S> zeilinger ( ghz ) state , multiparty entanglement , von neumann s rejection algorithm , universal method of inversion , knuth - yao s sampling algorithm . </S>"
  ]
}
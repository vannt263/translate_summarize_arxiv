{
  "article_text": [
    "the problem of community detection in networks has received wide attention  @xcite .",
    "it has proved to be a problem of remarkable subtlety , computationally challenging and with deep connections to other areas of research including machine learning , signal processing , and spin - glass theory .",
    "a large number of algorithmic approaches to the problem have been considered , but interest in recent years has focused particularly on statistical inference methods  @xcite , partly because they give excellent results , but also because they are mathematically principled and , at least in some cases , provably optimal  @xcite .    in this paper",
    "we study two of the most fundamental community inference methods , based on the so - called stochastic block model or its degree - corrected variant  @xcite .",
    "we show that it is possible to map both methods onto the well - known minimum - cut graph partitioning problem , which allows us to adapt any of the large number of available methods for graph partitioning to solve the community detection problem . as an example",
    ", we apply the laplacian spectral partitioning method of fiedler  @xcite to derive a community detection method competitive with the best currently available algorithms in terms of both speed and quality of results .",
    "the first method we consider is based on the stochastic block model , sometimes also called the planted partition model , a well studied model of community structure in networks  @xcite .",
    "this model supposes a network of  @xmath0 vertices divided into some number of groups or communities , with different probabilities for connections within and between groups .",
    "we will here focus on the simplest case of just two groups ( of any size , not necessarily equal ) . in the commonest version of the model edges",
    "are placed independently at random between vertex pairs with probability  @xmath1 for pairs in the same group and @xmath2 for pairs in different groups . in this paper",
    "we use the slightly different poisson version of the model described in  @xcite , in which we place between each pair of vertices a poisson - distributed number of edges with mean @xmath3 for pairs in the same group and @xmath4 for pairs in different groups . in essentially all",
    "real - world networks the fraction of possible edges that are actually present in the network is extremely small ( usually modeled as vanishing in the large-@xmath0 limit ) , in which case the two versions of the model become indistinguishable , but the poisson version is preferred because its analysis is more straightforward .    at its heart ,",
    "the statistical inference of community structure is a matter of answering the following question : if we assume an observed network is generated according to our model , what then must the parameters of that model have been ?",
    "in other words , what were the values of @xmath3 and  @xmath4 used to generate the network and , more importantly , which vertices fell in which groups ?",
    "even though the model is probably not a good representation of the process by which most real - world networks are generated , the answer to this question often gives a surprisingly good estimate of the true community structure .    to answer the question , we make use of a maximum likelihood method .",
    "let us label the two groups or communities in our model group  1 and group  2 , and denote by  @xmath5 the group to which vertex  @xmath6 belongs .",
    "the edges in the network will be represented by an adjacency matrix having elements @xmath7 then the likelihood of generating a particular network or graph  @xmath8 , given the complete set of group memberships , which we ll denote by the shorthand  @xmath9 , and the poisson parameters , which we ll denote by  @xmath10 , is @xmath11 where @xmath12 denotes the expected number of edges between vertices  @xmath6 and  @xmath13either @xmath3 or  @xmath4 , depending on whether the vertices are in the same or different groups .",
    "we are assuming there are no self - edges in the network ",
    "edges that connect vertices to themselves ",
    "so @xmath14 for all  @xmath6 .",
    "given the likelihood , one can maximize it to find the most likely values of the group labels and parameters , which can be done in a number of different ways . in ref .",
    "@xcite , for example , the likelihood was maximized first with respect to the parameters  @xmath3 and  @xmath4 by differentiation . applying this method to eq .",
    "gives most likely values of @xmath15 where @xmath16 and @xmath17 are the observed numbers of edges within and between groups respectively for a given candidate division of the network , and @xmath18 and @xmath19 are the numbers of vertices in each group . substituting these values back into eq .",
    "gives the profile likelihood , which depends on the group labels only .",
    "in fact , one typically quotes not the profile likelihood itself but its logarithm , which is easier to work with . neglecting an unimportant additive constant ,",
    "the log of the profile likelihood for the present model is @xmath20 the communities can now be identified by maximizing this quantity over all possible assignments of the vertices to the groups .",
    "this is still a hard task , however .",
    "there are an exponentially large number of possible assignments , so an exhaustive search through all of them is unfeasible for all but the smallest of networks",
    ". one can apply standard heuristics like simulated annealing to the problem , but in this paper we take a different approach .    in the calculation above",
    ", the likelihood is maximized over @xmath10 first , for fixed group assignments , then over the group assignments .",
    "but we can also take the reverse approach , maximizing first over the group assignments , for given  @xmath10 , and then over  @xmath10 at the end .",
    "this approach is attractive for two reasons .",
    "first , as we will show , the problem of maximizing with respect to the group assignment when @xmath10 is given is equivalent to the standard problem of minimum - cut graph partitioning , a problem for which many excellent heuristics are already available .",
    "second , after maximizing with respect to the group assignments the remaining problem of maximizing with respect to  @xmath10 is a one - parameter optimization that can be solved trivially .",
    "the net result is that the problem of maximum - likelihood community detection is reduced to one of performing a well - understood task  graph partitioning  plus one undemanding extra step .",
    "the resulting algorithm is fast and , as we will see , gives good results .",
    "so consider the problem of maximizing the likelihood , eq .",
    ", with respect to the group labels  @xmath5 , for given values of the parameters  @xmath3 and  @xmath4 . we will actually maximize the logarithm  @xmath21 of the likelihood , @xmath22 , \\label{eq : logl1}\\ ] ] which gives the same result but is usually easier .",
    "to proceed we write  @xmath12 and @xmath23 as @xmath24 where @xmath25 is the kronecker delta . substituting these into eq .   and",
    "dropping overall additive and multiplicative constants , which have no effect on the position of the maximum , the log - likelihood can be rearranged to read @xmath26 where @xmath27 which is positive whenever @xmath28 , meaning we have traditional community structure in our network .",
    "( it is possible to repeat the calculations for the case @xmath29 and derive methods for detecting such structure as well , although we will not do that here . )",
    "the quantity @xmath30 is the cut size of the network partition represented by our two communities , i.e. ,  the number of edges connecting vertices in different communities , which we previously denoted  @xmath17 , and @xmath31 where as previously @xmath18 and @xmath19 are the numbers of vertices in communities  1 and  2 .",
    "thus we can also write the log - likelihood in the form @xmath32 the maximization of this log - likelihood corresponds to the minimization of the cut size , with an additional penalty term  @xmath33 that favors groups of equal size .",
    "this is similar , though not identical , to the so - called ratio cut problem , in which one minimizes the ratio @xmath34 , which also favors groups of equal size , although the nature of the penalty for unbalanced groups is different .",
    "the catch with maximizing eq .",
    "is that we do nt know the value of  @xmath35 , which depends on the unknown quantities @xmath3 and  @xmath4 via eq .  , but we can get around this problem by the following trick . we first perform a limited maximization of   in which the sizes @xmath18 and  @xmath19 of the groups are held fixed at some values that we choose .",
    "this means that the term @xmath36 is a constant and hence drops out of the problem and we are left maximizing only  @xmath37 , or equivalently minimizing the cut - size  @xmath17 .",
    "this problem is now precisely the standard minimum - cut problem of graph partitioning  the minimization of the cut size for divisions of a graph into groups of given sizes .",
    "there are @xmath38 possible choices of the sizes of the two groups , ranging from putting all vertices in group  1 to all vertices in group  2 , and everything in between . if we solve the minimum - cut problem for each of these @xmath38 choices we get a set of @xmath38 solutions and we know that one of these must be the solution to our overall maximum likelihood problem .",
    "it remains only to work out which one . but",
    "choosing between them is easy , since we know that the true maximum also maximizes the profile likelihood , eq .  .",
    "so we can simply calculate the profile likelihood for each solution in turn and find the one that gives the largest result .    in effect",
    ", our approach narrows the exponentially large pool of candidate divisions of the network to a one - parameter family of just @xmath38 solutions ( parametrized by group size ) , from which it is straightforward to pick the overall winner by exhaustive search .",
    "moreover , the individual candidate solutions are all themselves solutions of the standard minimum - cut partitioning problem , a problem that has been well studied for many years and about which a great deal is known  @xcite . although partitioning problems are , in general , hard to solve exactly , there exist many heuristics that give good answers in practical situations .",
    "the approach developed here allows us to apply any of these heuristics directly to the maximum - likelihood community detection problem .      as an example of this approach , we demonstrate a fast and simple spectral algorithm based on the laplacian spectral bisection method for graph partitioning introduced by fiedler  @xcite",
    "a description of this method can be found , for example , in  @xcite , where it is shown that a good approximation to the minimum - cut division of a network into two parts of specified sizes can be found by calculating the fiedler vector , which is the eigenvector of the graph laplacian matrix  @xmath39 corresponding to the second smallest eigenvalue .",
    "( the graph laplacian is the @xmath40 symmetric matrix @xmath41 , where @xmath42 is the adjacency matrix and @xmath43 is the @xmath40 diagonal matrix with  @xmath44 equal to the degree of vertex  @xmath6 . )",
    "having calculated the fiedler vector one divides the network into groups of the required sizes  @xmath18 and @xmath19 by inspecting the vector elements and assigning the  @xmath18 vertices with the largest ( most positive ) elements to group  1 and the rest to group  2 .",
    "although the method gives only an approximation to the global minimum - cut division , practical experience ( and some rigorous results ) show that it gives good answers under commonly occurring conditions  @xcite .",
    "a nice feature of this approach is that , in a single calculation , it gives us the entire one - parameter family of minimum - cut divisions of the network .",
    "we need calculate the fiedler vector only once , sort its elements in decreasing order , then cut them into two groups in each of the @xmath38 possible ways and calculate the profile likelihood for the resulting divisions of the network .",
    "the one with the highest score is ( an approximation to ) the maximum - likelihood community division of the network .",
    "these developments are for the standard stochastic block model . as shown in ref .",
    "@xcite , however , the standard block model gives poor results when applied to most real - world networks because the model fails to take into account the broad degree distribution such networks possess .",
    "this problem can be fixed by a relatively simple modification of the model in which the expected number  @xmath12 of edges between vertices  @xmath6 and  @xmath13 is replaced by @xmath45 where @xmath46 is the degree of vertex  @xmath6 and @xmath12 again depends only on which groups the vertices  @xmath6 and  @xmath13 belong to .",
    "all the developments for the standard block model above generalize in straightforward fashion to this `` degree - corrected '' model .",
    "the log - likelihood and log - profile likelihood become @xmath47 where @xmath48 and @xmath49 are the sums of the degrees of the vertices in the two groups . in other words ,",
    "the expressions are identical to those for the uncorrected model except for the replacement of the group sizes  @xmath50 by  @xmath51 .",
    "the maximization of  @xmath21 is thus once again reduced to a generalized minimum - cut partitioning problem , with a penalty term proportional to @xmath52 , which again favors balanced groups .",
    "although we do nt know the value of  @xmath35 , we can reduce the problem to a variant of the minimum - cut problem by the equivalent of our previous approach , holding  @xmath48 and  @xmath49 constant . and",
    "again we can derive a spectral algorithm for this problem based on the graph laplacian . by a derivation analogous to that for the standard spectral method",
    "we can show that a good approximation to the problem of minimum - cut partitioning with fixed  @xmath51 ( as opposed to fixed  @xmath50 ) is given not by the second eigenvector of  @xmath39 but by the second eigenvector of the generalized eigensystem @xmath53 , where , as previously , @xmath43  is the diagonal matrix of vertex degrees .",
    "once again we calculate the vector and split the vertices into two groups according to the sizes of their corresponding vector elements and once again this gives us a one - parameter family of @xmath38 candidate solutions from which we can choose an overall winner by finding the one with the highest profile likelihood , eq .  .",
    "vertices , generated using the standard ( uncorrected ) stochastic block model with equal group sizes of 5000 vertices each and a range of strengths of the community structure . defining @xmath54 , @xmath55 ,",
    "the curves are ( top to bottom ) @xmath56 , 75 , 70 , 65 , and  60 , and @xmath57 .",
    "the dashed vertical line indicates the true size of the planted communities .",
    "the curves have been displaced from one another vertically for clarity .",
    "the vertical axis units are arbitrary because additive and multiplicative constants have been neglected in the definition of the log - likelihood .",
    "( b )  profile likelihoods for the same parameter values but unequal groups of size @xmath58 and  @xmath59 .",
    "( c )  the average fraction of vertices classified correctly for networks of @xmath60 vertices each and two equally sized groups .",
    "each point is an average over 100 networks .",
    "statistical errors are smaller than the points in all cases .",
    "the vertical dashed line indicates the position of the `` detectability threshold '' at which community structure becomes formally undetectable  @xcite . ]",
    "we have tested this method on a variety of networks , and in practice it appears to work well . figure  [ fig : synthetic ] shows results from tests on a large group of synthetic ( i.e. ,  computer - generated ) networks .",
    "these networks were themselves generated using the standard stochastic block model ( which is commonly used as a benchmark for community detection  @xcite ) .",
    "the two left panels in the figure show the value of the profile likelihood for the families of @xmath38 candidate solutions generated by the spectral calculation for networks with two equally sized groups ( top ) and with unequal groups ( bottom ) . in each case",
    "there is a clear peak in the profile likelihood at the correct group sizes , suggesting that the algorithm has correctly identified the group membership of most vertices .",
    "the third panel in fig .",
    "[ fig : synthetic ] tests this conclusion by calculating the fraction of correctly identified vertices as a function of the strength of the community structure for equally sized groups ( which is the most difficult case ) .",
    "as the figure shows , the algorithm correctly identifies most vertices over a large portion of the parameter space .",
    "the vertical dashed line represents the `` detectability threshold '' identified by previous authors  @xcite , below which it is believed that every method of community detection must fail .",
    "our algorithm fails below this point also , but appears to work well essentially all the way down to the transition , and there are reasons to believe this result to be exact , at least for networks that are not too sparse  @xcite .",
    "+   +     figure  [ fig : results ] shows the results of applications of the algorithm to two well - studied real - world networks , zachary s `` karate club '' network  @xcite and adamic and glance s network of political blogs  @xcite .",
    "both are known to have pronounced community structure and the divisions found by our spectral algorithm mirror closely the accepted communities in both cases .",
    "in addition to being effective , the algorithm is also fast .",
    "the computation of the eigenvector can be done using , for instance , the lanczos method , an iterative method which takes time  @xmath61 per iteration , where @xmath62 is the number of edges in the network .",
    "the number of iterations required is typically small , although the exact number is not known in general .",
    "the search for the division that maximizes the profile likelihood can also be achieved in @xmath61 time . of the @xmath38 different divisions of the network that must be considered ,",
    "each one differs from the previous one by the movement of just a single vertex from one group to the other .",
    "the movement of vertex  @xmath6 between groups causes the quantities appearing in eq .   to change according to @xmath63 where @xmath64 equals the number of edges between  @xmath6 and vertices in group  1 minus the number between  @xmath6 and vertices in group  2 .",
    "these quantities and the resulting change in the profile likelihood can be calculated in time proportional to the degree of the vertex and hence all @xmath0 vertices can be moved in time proportional to the sum of all degrees in the network , which is equal to  @xmath65 .",
    "thus , to leading order , the total running time of the algorithm goes as  @xmath62 times the number of lanczos iterations , the latter typically being small , and in practice the method is about as fast as the best competing algorithms .",
    "in this paper we have shown that the widely - studied maximum likelihood method for community detection in networks can be reduced to a search through a small family of candidate solutions , each of which is itself the solution to a minimum - cut graph partitioning problem , which is a well studied problem about which much is known .",
    "this mapping allows us to use trusted partitioning heuristics to solve the community detection problem . as an example",
    "we have adapted the method of laplacian spectral partitioning to derive a spectral likelihood maximization algorithm and tested its performance on both synthetic and real - world networks . in terms of both accuracy and speed",
    "we find the algorithm to be competitive with the best current methods .",
    "a number of extensions of our approach would be possible , including extensions with more general forms for the parameters  @xmath10 , such as different values of @xmath3 and @xmath4 for different groups , or extensions to more than two groups , but we leave these for future work .",
    "the author would like to thank charlie doering , tammy kolda , and raj rao nadakuditi for useful conversations and lada adamic for providing the data for the network of political blogs .",
    "this work was funded in part by the national science foundation under grant dms1107796 and by the air force office of scientific research ( afosr ) and the defense advanced research projects agency ( darpa ) under grant fa95501210432 ."
  ],
  "abstract_text": [
    "<S> many methods have been proposed for community detection in networks . some of the most promising are methods based on statistical inference , which rest on solid mathematical foundations and return excellent results in practice . in this paper </S>",
    "<S> we show that two of the most widely used inference methods can be mapped directly onto versions of the standard minimum - cut graph partitioning problem , which allows us to apply any of the many well - understood partitioning algorithms to the solution of community detection problems . </S>",
    "<S> we illustrate the approach by adapting the laplacian spectral partitioning method to perform community inference , testing the resulting algorithm on a range of examples , including computer - generated and real - world networks . both the quality of the results and the running time rival the best previous methods . </S>"
  ]
}
{
  "article_text": [
    "calculating the derivatives of noisy functions is of prime importance in many applications .",
    "the problem consists of calculating stably the derivative of a smooth function @xmath0 given its noisy data @xmath1 , @xmath2 .",
    "this is an ill - posed problem : a small error in @xmath0 may lead to a large error in @xmath3 .",
    "many methods have been introduced in the literature .",
    "a review is given in [ 7 ] .",
    "divided differences method with @xmath4 has been first proposed in [ 4 ] , see also @xcite .",
    "necessary and sufficient conditions for the existence of a method for stable differentiation of noisy data are given in @xcite , see also @xcite . in our paper a method for stable differentiation based on solving the regularized volterra equation @xmath5 is proposed ( see also @xcite ) .",
    "one often applies the variational regularization ( vr ) method @xmath6 for stable differentiation .    in this paper ( and in @xcite ) an approach , based on the fact that the quadratic form of the operator @xmath7 is nonnegative in real hilbert space @xmath8 , @xmath9 , is used .",
    "consider two different approaches to solving equation . the first approach consists of solving directly regularized equation .",
    "the second approach is based on the dynamical systems method ( dsm ) and an iterative scheme from @xcite .      in @xcite ,",
    "the derivatives of a noisy function @xmath1 are obtained by solving the equation @xmath10 if @xmath11 is continuous on @xmath12 , @xmath13 and @xmath14 then the following result holds ( see @xcite ) :    assume .",
    "then @xmath15 where @xmath16 solves with @xmath17 .",
    "the solution of is : @xmath18 this formula and an _ a priori _ choice @xmath19 , where @xmath20 , @xmath21 is a constant , yield a scheme for stable differentiation .",
    "when @xmath22 is known , the problem is reduced to calculating integral .",
    "there are many methods for calculating accurately and fast integral ( see e.g. @xcite ) . however , there is no known algorithm for choosing @xmath23 which are optimal in some sense .",
    "the advantage of our approach is that the cpu time for the method is very small compared with the vr and dsm , see section [ sectionfirst ] .",
    "moreover , one can calculate the solution analytically when the function @xmath1 is simple by using tables of integrals or maple .",
    "another approach to stable differentiation is to use the dsm ( see @xcite ) .",
    "the dsm yields a stable solution of the equation : @xmath24 where @xmath25 is a hilbert space and @xmath7 is a linear operator in @xmath25 which is not necessarily bounded but closed and densely defined .",
    "the dsm to solve is of the form : @xmath26 where @xmath27 and @xmath28 is a nonincreasing function such that @xmath29 as @xmath30 .",
    "the unique solution to is given by @xmath31 an iterative scheme for computing @xmath32 in is proposed in @xcite : @xmath33 with @xmath34 satisfying @xmath35 one chooses @xmath36 and @xmath37 as follows : @xmath38 where @xmath39 , @xmath40 . to increase the speed of computing we recommend choosing @xmath41 . at each iteration one",
    "checks if @xmath42 this is a stopping criterion of discrepancy principle type ( see @xcite ) .",
    "if @xmath43 is the first time such that is satisfied , then one stops and takes @xmath44 as the solution to .",
    "the choice of @xmath34 satisfying is done by iterations as follows :    1 .   as an initial guess for @xmath34 one takes @xmath45 , where @xmath46 .",
    "2 .    if @xmath47 , then one takes @xmath48 as the next guess and checks if condition is satisfied .",
    "if @xmath49 then one takes @xmath50 .",
    "if @xmath51 , then @xmath52 is used as the next guess .",
    "4 .    after @xmath34 is updated , one checks if is satisfied .",
    "if is not satisfied , one repeats steps 2 and 3 until one finds @xmath34 satisfying condition .",
    "algorithms for choosing @xmath34 and computing @xmath44 are detailed in algorithms 1 and 2 in @xcite .",
    "numerical experiments are carried out in matlab in double - precision arithmetic . in all experiments , by @xmath32 , @xmath53}(t)$ ] , @xmath54 and @xmath55",
    "we denote the exact derivative , the derivatives computed by the first , the dsm and the vr methods , respectively . in this section by @xmath56 we denote the number of points used to discretize the interval @xmath57 $ ] .",
    "let us compute the derivatives of the function @xmath58 contaminated by the noise function @xmath59 .",
    "the derivative of @xmath60 is @xmath61 . to solve this problem we use three methods : the first method , based on computing integral , the vr method , and the dsm method , based on a discretized version of .",
    "numerical results for this problem are presented in figure  [ fig1 ] . in our experiments , since the results otained by the dsm and the vr are nearly the same , we present only the results for the dsm in figure  [ fig1 ] and [ fig12 ] in order to make these figures simple .    in this experiment",
    "the trapezoidal quadrature rule is applied to integral equation and is used for computing integral .",
    "one may use higher order intepolation methods to compute integral .",
    "however , it does not necessarily bring improvements in accuracy .",
    "this is so because using a high order intepolation method for inaccurate data may even lead to worse results .",
    "this is the case when the noise level is large .",
    "the approximate derivative formula for @xmath62 close to 0 does not use much information about @xmath1 .",
    "thus , we only use for computing @xmath63 for @xmath64 $ ] . for @xmath65",
    "$ ] , we take @xmath66 and use formula for @xmath67 with @xmath68 $ ] .",
    "that is , we have a discontinuity at @xmath69 of the solution , obtained by the first method in figure  [ fig1 ] and [ fig12 ] . the same idea is applied in discretizing equation in the implementation of the dsm and vr .    in the dsm and",
    "vr we also use the trapezoidal quadrature rule to discretize equation . since the right - hand side @xmath1 contains noise , using high order collocation methods does not necessarily improve the accuracy .",
    "experiments have shown that the use of higher order collocation methods leads to linear algebraic systems with larger condition numbers and yields numerical solutions with low accuracy .    .",
    "discretization points @xmath70 . ]",
    "the cpu times for the vr and dsm are about 0.0125 sec .",
    "the cpu time for the first method is much smaller : 0.0015 sec . here",
    ", we should bear in mind that the dsm and the vr use iterations to look for `` good '' regularization parameter @xmath71 while the code based on the first method does nothing to look for @xmath71 but uses @xmath71 as an input value . if one also uses the regularization parameter as an input in the vr and dsm , although these methods still take more time than the first method the difference in computation time is not so large .    .",
    "discretization points @xmath70 . ]",
    "the error of the first method for @xmath72 is larger than those of the vr and the dsm , but when @xmath73 then the first method gives smaller errors . from figure  [ fig1 ] and [ fig12 ]",
    ", one can see that the solutions obtained by the dsm are better than those obtained by the first method for all @xmath74 $ ] except for the @xmath62 which are close to the boundary of the interval .",
    "indeed , it can be showed analytically that the solution @xmath75 to equation satisfies @xmath76 .",
    "however , the derivative of @xmath0 in figure  [ fig1 ] satifies @xmath77 and @xmath78 . if the computed derivatives at the points close to the boundary are discarded , then in both cases the dsm and the vr are more accurate than the first method .",
    "figure  [ fig12 ] presents the numerical experiment for @xmath79 contaminated by the same noise function @xmath59 . for this problem ,",
    "since the function to be differentiated @xmath0 satisfies @xmath80 both the dsm and the vr give more accurate results than the first method .    from figure  [ fig1 ] and  [ fig12 ] one can see that for @xmath81 the computed derivatives are very close to the exact derivative at all points except for those close to the boundary in figure  [ fig1 ] .",
    "let us give numerical results for computing the second derivatives of noisy functions .",
    "the problem is reduced to an integral equation of the first kind .",
    "a linear algebraic system is obtained by a discretization of the integral equation whose kernel @xmath82 is green s function @xmath83 here @xmath84 $ ] and as the right - hand side @xmath0 and the corresponding solution @xmath75 one chooses one of the following ( see @xcite ) : @xmath85    collocation method is used for discretization .",
    "this discretization can be improved by other methods but we do not go into detail .",
    "we use @xmath86 and @xmath87 , where @xmath88 is a vector containing random entries , normally distributed with mean 0 , variance 1 , and scaled so that @xmath89 .",
    "this linear algebraic system is mildly ill - posed : the condition number of @xmath90 is @xmath91 .",
    ".results for case 1 and 2 with @xmath92 , @xmath93 .",
    "[ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^ , > , < \" , ]     table  [ table1 ] shows that numerical results obtained by the dsm are more accurate than those by the vr .",
    "figure  [ fig2 ] plots the numerical solutions for these cases .",
    "the computation time of the dsm in these cases is about the same as or less than that of the vr . from table",
    "[ table1 ] one can see that both the dsm and the vr perform better in case 2 than in case 1 .",
    "note that the regularized equation to solve for second derivatives in this case is of the same form as equation . as we discussed earlier , it is because in case 2 we have @xmath80 .",
    "we conclude that in this experiment the dsm competes favorably with the vr .    , @xmath94 .",
    "]    looking at figure  [ fig2 ] case 1 , one can see that the computed values at @xmath95 and @xmath96 are zeros .",
    "again , the regularized scheme forces the computed derivative @xmath75 to satisfy the relations @xmath97 .",
    "if one wants to compute the derivative of a noisy function on an interval by the proposed method , one should collect data on a larger interval and use this method to calculate the derivative at the points which are not close to the boundary .",
    "in this paper two approaches to stable differentiation of noisy functions are discussed .",
    "the advantage of the first approach is that it contains neither matrix inversion nor solving of linear algebraic systems .",
    "its computation time is very small .",
    "the drawback of the method is that there is no known _ a posteriori _ choice of @xmath22 .",
    "the second approach is an implementation of the dsm .",
    "it competes favorably with the vr in both computation time and accuracy .",
    "the dsm competes favorably with the vr in solving linear ill - conditioned algebraic systems . _",
    "a posteriori _ choice of @xmath71 , an efficient way to compute integral for the first method , and an efficient discretization of the volterra equation with the implementation of the dsm are planned for future research ."
  ],
  "abstract_text": [
    "<S> based on a regularized volterra equation , two different approaches for numerical differentiation are considered . </S>",
    "<S> the first approach consists of solving a regularized volterra equation while the second approach is based on solving a disretized version of the regularized volterra equation . </S>",
    "<S> numerical experiments show that these methods are efficient and compete favorably with the variational regularization method for stable calculating the derivatives of noisy functions .    </S>",
    "<S> * keywords * : ill - posed problems , numerical differentiation .    * </S>",
    "<S> ams subject classification * : primary 65d05 . </S>",
    "<S> secondary 65d25 . </S>"
  ]
}
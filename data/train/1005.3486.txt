{
  "article_text": [
    "pseudocodewords play a significant role in the finite - length analysis of binary linear low - density parity - check ( ldpc ) codes under linear - programming ( lp ) or message - passing ( mp ) decoding ( see e.g.  @xcite ) .",
    "the concept of _ pseudoweight _ of a pseudocodeword was introduced in  @xcite as an analog to the pertinent parameter in the maximum likelihood ( ml ) decoding scenario , i.e. the signal euclidean distance in the case of the additive white gaussian noise channel ( awgnc ) , or the hamming distance in the case of the binary symmetric channel ( bsc ) .",
    "accordingly , for a binary linear code @xmath1 and a parity - check matrix @xmath4 of @xmath1 , the ( awgnc or bsc ) minimum pseudoweight @xmath5 may be considered as a first - order measure of decoder error - correcting performance for lp or mp decoding .",
    "note that @xmath5 may be different for different matrices  @xmath4 : adding redundant rows to  @xmath4 introduces additional constraints on the so - called _ fundamental cone _ and may thus increase the minimum pseudoweight .",
    "another closely related measure is the max - fractional weight ( pseudoweight ) .",
    "it serves as a lower bound on both awgnc and bsc pseudoweights .",
    "the awgnc ( or bsc ) pseudocodeword redundancy @xmath6 ( or @xmath7 , respectively ) of a code @xmath1 is defined as the minimum number of rows in a parity - check matrix @xmath4 such that the corresponding minimum pseudoweight @xmath5 is as large as its minimum hamming distance @xmath8 .",
    "it is set to infinity if there is no such matrix .",
    "we sometimes simply write @xmath0 , when the type of the channel is clear from the context .",
    "the pseudocodeword redundancy for the binary erasure channel ( bec ) , @xmath9 , was studied in  @xcite , where it was shown to be finite for any binary linear code @xmath1 .",
    "the authors also presented some bounds on @xmath9 for general linear codes , and for some specific families of codes .",
    "the study of bsc pseudoredundancy was initiated in  @xcite , where the authors presented bounds on @xmath7 for various families of codes . in a recent work  @xcite , we provided some bounds on @xmath6 and @xmath7 for general linear codes .",
    "in particular , @xcite listed some preliminary results regarding the awgnc and bsc pseudocodeword redundancies of short codes ; this paper provides more comprehensive results in this direction .",
    "the outline of the paper is as follows . after providing detailed definitions in section  [ sec :",
    "general_settings ] we prove several new theoretical results on the pseudocodeword redundancy in sections  [ sec : basic_results ] and  [ sec : rows_weight_2 ] .",
    "the next two sections are devoted to experimental results ; section  [ sec : short_codes ] examines the pseudocodeword redundancy for all codes of small length , and section  [ sec : kv_bound ] deals with cyclic codes that meet the eigenvalue bound of vontobel and koetter .",
    "let @xmath1 be a code of length @xmath10 over the binary field @xmath11 , defined by @xmath12 where @xmath4 is an @xmath13 _ parity - check matrix _ of the code @xmath1 .",
    "obviously , the code @xmath1 may admit more than one parity - check matrix , and all the codewords form a linear vector space of dimension @xmath14 .",
    "we say that @xmath15 is the _ dimension _ of the code @xmath1 .",
    "we denote by @xmath16 ( or just @xmath8 ) the minimum hamming distance ( also called the minimum distance ) of @xmath1 .",
    "the code @xmath1 may then be referred to as an @xmath17 $ ] linear code over @xmath11 .",
    "the parity - check matrix @xmath4 is said to be @xmath18-regular if every column of @xmath4 has exactly @xmath19 nonzero symbols , and every row of it has exactly @xmath20 nonzeros .",
    "the matrix @xmath4 is called @xmath21-regular if every row and every column in it has @xmath21 nonzeros .",
    "denote the set of column indices and the set of row indices of @xmath4 by @xmath22 and @xmath23 , respectively . for @xmath24 , we denote @xmath25 , and for @xmath26 , we denote @xmath27 .",
    "the _ fundamental cone _ of @xmath4 , denoted @xmath28 , is defined in  @xcite and  @xcite as the set of vectors @xmath29 that satisfy @xmath30 @xmath31    the vectors @xmath32 satisfying  ( [ eq : polytope - inequality-1 ] ) and  ( [ eq : polytope - inequality-2 ] ) are called _ pseudocodewords _ of @xmath1 with respect to the parity - check matrix @xmath4 . note that the fundamental cone @xmath28 depends on the parity - check matrix @xmath4 rather than on the code @xmath1 itself . at the same time , the fundamental cone is independent of the underlying communication channel .",
    "the bec , awgnc , bsc pseudoweights and max - fractional weight of a nonzero pseudocodeword @xmath33 were defined in  @xcite and  @xcite as follows : @xmath34 let @xmath35 be a vector in @xmath36 with the same components as @xmath37 but in non - increasing order . for @xmath38 , where @xmath39 , let @xmath40 .",
    "define @xmath41 and @xmath42 finally , the max - fractional weight of @xmath37 is defined as @xmath43    we define the bec _ minimum pseudoweight _ of the code @xmath1 with respect to the parity - check matrix @xmath4 as @xmath44 the quantities @xmath45 , @xmath46 and @xmath47 are defined similarly . when the type of pseudoweight is clear from the context , we might use the notation @xmath48 . note that all four minimum pseudoweights are upper bounded by  @xmath8 , the code s minimum distance .",
    "then we define the bec _ pseudocodeword redundancy _ of the code @xmath1 as @xmath49 where @xmath50 , and similarly we define the pseudocodeword redundancies @xmath6 , @xmath7 and @xmath51 for the awgnc and bsc pseudoweights , and the max - fractional weight .",
    "when the type of pseudocodeword redundancy is clear from the context , we might use the notation @xmath0 .",
    "we remark that all pseudocodeword redundancies satisfy @xmath52 .",
    "we describe the behavior of the pseudocodeword redundancy and the minimum pseudoweight for a given binary linear @xmath17 $ ] code  @xmath53 by introducing four classes of codes :    * ( class 0 ) * : :    @xmath54 is infinite , i.e.  there is no    parity - check matrix @xmath4 with    @xmath55 , * ( class 1 ) * : :    @xmath54 is finite , but    @xmath56 , * ( class 2 ) * : :    @xmath57 , but    @xmath53 is not in class 3 , * ( class 3 ) * : :    @xmath55 for    _ every _ parity - check matrix @xmath4 of    @xmath53 .",
    "the next lemma is taken from  @xcite .",
    "[ lemma : relations ] let @xmath1 be a binary linear code with the parity - check matrix @xmath4 .",
    "then , @xmath58    the following theorem is a straightforward corollary to lemma  [ lemma : relations ] .",
    "[ thrm : pseudoredundancies ] let @xmath1 be a binary linear code .",
    "then , @xmath59    the following results hold with respect to the awgnc and bsc pseudoweights , and the max - fractional weight .    [ lemma : puncturing ]",
    "let @xmath53 be an @xmath17 $ ] code having @xmath60 zero coordinates , and let @xmath61 be the @xmath62 $ ] code obtained by puncturing @xmath53 at these coordinates .",
    "then @xmath63    in the proof we use the following notation : we identify @xmath36 with @xmath64 , and for @xmath65 and some subset @xmath66 we let @xmath67 be the projection of @xmath37 onto the coordinates in @xmath68 .",
    "let @xmath66 be the set of nonzero coordinates of the code @xmath53 . to prove the first inequality , let @xmath4 be a @xmath69 parity - check matrix for @xmath53 .",
    "consider its @xmath70 submatrix @xmath71 consisting of the columns corresponding to @xmath68 .",
    "then @xmath71 is a parity - check matrix for @xmath61 , and @xmath72 therefore , @xmath73 , and this proves @xmath74 .    for the second inequality ,",
    "let @xmath71 be a @xmath75 parity - check matrix for @xmath61 .",
    "now we consider a @xmath76 matrix @xmath4 with the following properties : the upper @xmath77 submatrix of @xmath4 consists of the columns of @xmath71 at positions @xmath68 and of zero - columns at positions @xmath78 , and the lower @xmath79 submatrix consists of rows of weight  @xmath80 that have @xmath80s at the positions @xmath78 . then @xmath81 and @xmath82 consequently , @xmath83 , and this proves @xmath84 .",
    "[ lemma : distance_two ] let @xmath53 be a code of minimum distance @xmath85 .",
    "then @xmath55 for any parity - check matrix @xmath4 of @xmath53 , i.e.  @xmath53 is in class @xmath86 ( for awgnc and bsc pseudoweight , and for max - fractional weight ) .    by lemma  [ lemma : relations ]",
    "it suffices to prove this lemma for the max - fractional weight @xmath87 .",
    "since @xmath88 holds for all nonzero pseudocodewords , we always have @xmath89 , which proves the result in the case @xmath90 .",
    "let @xmath91 and @xmath4 be a parity - check matrix for @xmath53 .",
    "let @xmath92 and let @xmath93 be the largest coordinate . since @xmath91 there is no zero column in @xmath4 and thus there exists a row @xmath94 with @xmath95 .",
    "then @xmath96 , hence @xmath97 , and thus @xmath98 .",
    "it follows @xmath99 and the lemma is proved .",
    "the main result of this section appears in the following lemma .",
    "[ lemma : row_weight_2 ] let @xmath4 be a parity - check matrix of @xmath1 such that every row in @xmath4 has weight  @xmath100 .",
    "then :    1 .   there is an equivalence relation on the set @xmath101 of column indices of @xmath4 such that for a vector @xmath32 with non - negative coordinates we have @xmath92 if and only if @xmath37 has equal coordinates within each equivalence class .",
    "the minimum distance of @xmath1 is equal to its minimum awgnc and bsc pseudoweights and its max - fractional weight with respect to @xmath4 , i.e.  @xmath102 .    for ( a ) ,",
    "define the required relation @xmath103 as follows : for @xmath104 let @xmath105 if and only if @xmath106 or there exists an integer @xmath107 , column indices @xmath108 and row indices @xmath109 such that @xmath110 this is an equivalence relation , and it defines equivalence classes over @xmath101 .",
    "it is easy to check that inequalities  ( [ eq : polytope - inequality-1 ] ) imply that @xmath92 if and only if @xmath111 for any @xmath112 .    in order to prove ( b ) , we note that the minimum ( awgnc , bsc or max - fractional ) pseudoweight is always bounded above by the minimum distance of @xmath1 , so we only have to show that the minimum pseudoweight is bounded below by the minimum distance .",
    "let @xmath113 be the set of equivalence classes of @xmath103 , and let @xmath114 for @xmath115 .",
    "it is easy to see that the minimum distance of @xmath1 is @xmath116 ( since the minimum weight nonzero codeword of @xmath1 has non - zeros in the coordinates corresponding to a set @xmath115 of minimal size and zeros everywhere else ) .",
    "now let @xmath92 .",
    "since the coordinates @xmath117 , @xmath118 , depend only on the equivalence classes , we may use the notation @xmath119 , @xmath115 .",
    "let @xmath120 be the largest coordinate .",
    "then : @xmath121 therefore , @xmath122 , and by using lemma  [ lemma : relations ] , we obtain that @xmath123 and @xmath124 .",
    "the following proposition is a stronger version of lemma  [ lemma : row_weight_2 ] .",
    "[ prop : row_weight_2 ] let @xmath4 be an @xmath13 parity - check matrix of @xmath1 , and assume that @xmath125 first rows in @xmath4 have weight 2",
    ". denote by @xmath126 the @xmath127 matrix consisting of these rows , consider the equivalence relation of lemma  [ lemma : row_weight_2 ] ( a ) with respect to @xmath126 , and assume that @xmath128 intersects each equivalence class in at most one element .",
    "then , the minimum distance of @xmath1 is equal to its minimum awgnc and bsc pseudoweights and its max - fractional weight with respect to @xmath4 , i.e.  @xmath102 .",
    "let @xmath129 be the set of classes of the aforementioned equivalence relation on @xmath101 , and let @xmath130 for @xmath115 .",
    "let @xmath131 also let @xmath132 , so that @xmath133 for all @xmath134 .",
    "let @xmath135 .",
    "as before , since the coordinates @xmath117 , @xmath118 , depend only on the equivalence classes , we may use the notation @xmath119 , @xmath115 . the fundamental polytope constraints and may then be written as @xmath136 for all @xmath137 and @xmath138 respectively , and the max - fractional pseudoweight of @xmath139 is given by @xmath140    suppose @xmath135 has minimal max - fractional pseudoweight .",
    "let @xmath120 be its largest coordinate .",
    "first note that if there exists @xmath141 with @xmath142 , setting @xmath143 to zero results in a new pseudocodeword with lower max - fractional pseudoweight , which contradicts the assumption that @xmath37 achieves the minimum .",
    "therefore @xmath144 for all @xmath145 .",
    "we next consider two cases .    _ case 1 : _ @xmath146 .",
    "if there exists @xmath147 with @xmath148 , setting all such @xmath143 to zero results in a new pseudocodeword with lower max - fractional pseudoweight , which contradicts the minimality of the max - fractional pseudoweight of @xmath37 . therefore @xmath120 is the only positive coordinate of @xmath37 , and by the max - fractional pseudoweight of @xmath37 is @xmath149 .",
    "_ case 2 : _",
    "@xmath150 . in this case",
    "@xmath144 for all @xmath151 . from inequality  ( [ eq : polytope_ineq_s ] ) for @xmath152 we obtain @xmath153 with @xmath154 it follows that @xmath155 consequently , @xmath156 and thus @xmath157 .",
    "we conclude that the minimum max - fractional pseudoweight is given by @xmath158 but this is easily seen to be equal to the minimum distance @xmath8 of the code .    finally , by using lemma  [ lemma : relations ]",
    ", we obtain that @xmath159 and @xmath160 .    _",
    "remark : _ note that the requirement that all @xmath161 belong to the different equivalence classes of @xmath126 in proposition  [ prop : row_weight_2 ] is necessary .",
    "indeed , consider the matrix @xmath162 } \\;.\\ ] ] one can see that there are two equivalence classes for @xmath126 : @xmath163 , @xmath164 .",
    "the minimum distance of the corresponding code @xmath1 is @xmath165 ( since @xmath166 is the only nonzero codeword ) .",
    "however , @xmath167 is a pseudocodeword of max - fractional weight @xmath100 .",
    "[ corollary : dimension_two ] let @xmath1 be a code of length  @xmath168 and dimension  @xmath100 .",
    "then @xmath169 , i.e.  @xmath1 is of class at least  @xmath100 ( for awgnc and bsc pseudoweight , and for max - fractional weight ) .",
    "we consider two cases .",
    "* _ case 1 : @xmath1 has no zero coordinates .",
    "_ + let @xmath170 and @xmath171 be two linearly independent codewords of @xmath1 . define the following subsets of @xmath101 : @xmath172 the sets @xmath173 , @xmath174 and @xmath175 are pairwise disjoint .",
    "since @xmath1 has no zero coordinates , @xmath176 .",
    "the ordering of elements in @xmath101 implies an ordering on the elements in each of @xmath173 , @xmath174 and @xmath175 .",
    "assume that @xmath177 and @xmath178 . if @xmath179 , let @xmath180 be the minimal element in @xmath173 , and define an @xmath181 matrix @xmath182 as follows : @xmath183 similarly , define @xmath184 and @xmath185 matrices @xmath186 and @xmath187 , with respect to @xmath174 and @xmath175 .",
    "let @xmath188 and @xmath189 be minimal elements of @xmath174 and @xmath175 , respectively .",
    "+ define also a @xmath190 matrix @xmath191 : @xmath192 + finally , define an @xmath193 matrix @xmath4 by @xmath194 $ ] .",
    "( some of the @xmath195 s might be equal to @xmath196 , in which case the corresponding @xmath197 is an @xmath198 `` empty '' matrix . )",
    "it is easy to see that all rows of @xmath4 are linearly independent , and so it is of rank @xmath199 .",
    "it is also straightforward that for all @xmath200 we have @xmath201 .",
    "therefore , @xmath4 is a parity - check matrix of  @xmath1 .",
    "+ the matrix @xmath4 has a form as in proposition  [ prop : row_weight_2 ] ( where @xmath173 , @xmath174 and @xmath175 are corresponding equivalence classes over @xmath101 ) , and therefore @xmath202 . *",
    "_ case 2 : @xmath1 has @xmath203 zero coordinates . _ + consider a code @xmath204 of length @xmath205 obtained by puncturing @xmath1 in these @xmath60 zero coordinates . from case 1",
    "( with respect to @xmath204 ) , @xmath206 . by applying the rightmost inequality in lemma  [ lemma : puncturing ] ,",
    "we have @xmath207 . since @xmath208",
    ", we conclude that @xmath209 .",
    "in this section we compute the awgnc , bsc , and max - fractional pseudocodeword redundancies for all codes of small length . by lemma  [ lemma : distance_two ]",
    "it is sufficient to examine only codes with minimum distance at least  @xmath86 .",
    "furthermore , in light of lemma  [ lemma : puncturing ] we will consider only codes without zero coordinates , i.e.  that have a dual distance of at least  @xmath100 .",
    "finally , we point out to corollary  [ corollary : dimension_two ] for codes of dimension  @xmath100 , by which we may focus on codes with dimension at least  @xmath86 .      to compute the pseudocodeword redundancy of a code @xmath53 we have to examine all possible parity - check matrices for the code @xmath53 , up to equivalence .",
    "here , we say that two parity - check matrices @xmath4 and @xmath71 for the code @xmath53 are _ equivalent _ if @xmath4 can be transformed into @xmath71 by a sequence of row and column permutations . in this case , @xmath210 holds for the awgnc and bsc pseudoweights as well as for the max - fractional weight .",
    "the enumeration of codes and parity - check matrices can be described by the following algorithm .",
    "* input : * parameters @xmath168 ( code length ) , @xmath15 ( code dimension ) , @xmath211 ( number of rows of the output parity - check matrices ) , where @xmath212 .    * output : * for all codes of length @xmath168 , dimension @xmath15 , distance @xmath213 , and without zero coordinates , up to code equivalence : a list of all @xmath69 parity - check matrices , up to parity - check matrix equivalence .    1 .",
    "collect the set @xmath214 of all @xmath215 matrices such that * they have different nonzero columns , ordered lexicographically , * there is no non - empty @xmath11-sum of rows which has weight  @xmath216 or  @xmath80 _ ( this way , the matrices are of full rank and the minimum distance of the row space is at least  @xmath100)_. 2 .",
    "determine the orbits in @xmath214 under the action of the group @xmath217 of invertible @xmath218 matrices over @xmath11 _",
    "( this enumerates all codes with the required properties , up to equivalence ; the codes are represented by parity - check matrices)_. 3 .   for each orbit @xmath219 , representing a code @xmath53 :",
    "1 .   determine the suborbits in @xmath219 under the action of the symmetric group @xmath220 _ ( this enumerates all parity - check matrices without redundant rows , up to equivalence)_. 2 .   for each representative @xmath4 of the suborbits ,",
    "collect all matrices enlarged by adding @xmath221 different redundant rows that are @xmath11-sums of at least two rows of @xmath4 .",
    "let @xmath222 be the union of all such @xmath69 matrices .",
    "3 .   determine the orbits in @xmath222 under the action of the symmetric group @xmath223 , and output a representative for each orbit .",
    "this algorithm was implemented in the c programming language .",
    "the minimum pseudoweights for the various parity - check matrices were computed by using maple 12 and the convex package  @xcite .",
    "we considered all binary linear codes up to length @xmath168 with distance @xmath213 and without zero coordinates , up to code equivalence .",
    "the number of those codes for given length @xmath168 and dimension @xmath15 is shown in table  [ table : no - codes ] .",
    ".the number of binary @xmath17 $ ] codes with  @xmath213  and  without  zero  coordinates [ cols=\">,>,^,^,^,^\",options=\"header \" , ]      +    we conclude this section by proving a result which was observed by the experiments .",
    "let @xmath224 and let @xmath53 be the intersection of a hamming code of length @xmath225 with a simple parity - check code of length @xmath168 , which is a cyclic @xmath226 $ ] code . consider its full circulant parity - check matrix @xmath4 .",
    "then @xmath227    in particular , if @xmath228 then @xmath53 is the @xmath229 $ ] code and the result implies @xmath230 and @xmath231 .",
    "let @xmath4 be the @xmath21-regular full circulant parity - check matrix for @xmath53 .",
    "we claim that @xmath232 .",
    "indeed , each row @xmath233 of @xmath4 is a codeword of the dual code @xmath234 , and since @xmath234 consists of the codewords of the simplex code and their complements , the weight of @xmath233 and thus @xmath21 must be @xmath235 , @xmath236 , or @xmath237 .",
    "but @xmath21 can not be even , for otherwise all codewords of @xmath234 would be of even weight . as @xmath238 is clearly impossible , it must hold @xmath232 .    next , we show that the second largest eigenvalue of @xmath239 equals @xmath240",
    ". indeed , let @xmath241 and @xmath242 be different rows of @xmath4 , representing codewords of @xmath234 . as their weight is equal , their hamming distance is even , and thus it must be @xmath236 .",
    "hence , the size of the intersection of the supports of @xmath241 and @xmath242 is @xmath243 .",
    "this implies that @xmath244 and @xmath245 , for @xmath246 .",
    "consequently , @xmath247 has an eigenvalue of multiplicity @xmath248 , namely @xmath249 , and thus @xmath250 must be @xmath251 .    finally , we apply proposition  [ prop : kv_bound ] to get @xmath252",
    "the authors would like to thank nigel boston , christine kelley and pascal vontobel for helpful discussions .        , `` graph - cover decoding and finite - length analysis of message - passing iterative decoding of ldpc codes , '' accepted for _ ieee trans .",
    "theory_. also available as arxiv report at arxiv : cs.it/0512078 .    , `` on the effective weights of pseudocodewords for codes defined on graphs with cycles , '' in _ codes , systems , and graphical models",
    "_ , i m a workshop , minneapolis , usa , aug . 1999 . new york , usa : springer , 2001 , pp ."
  ],
  "abstract_text": [
    "<S> the awgnc , bsc , and max - fractional _ pseudocodeword redundancy _ @xmath0 of a code @xmath1 is defined as the smallest number of rows in a parity - check matrix such that the corresponding minimum pseudoweight is equal to the minimum hamming distance of @xmath1 . </S>",
    "<S> this paper provides new results on the awgnc , bsc , and max - fractional pseudocodeword redundancies of codes . </S>",
    "<S> the pseudocodeword redundancies for all codes of small length ( at most @xmath2 ) are computed . </S>",
    "<S> also , comprehensive results are provided on the cases of cyclic codes of length at most @xmath3 for which the eigenvalue bound of vontobel and koetter is sharp . </S>"
  ]
}
{
  "article_text": [
    "we study the computational complexity ( tractable versus intractable cases ) of the following basic graph problem .",
    "# star partition_#star partition : _    star partition    an undirected @xmath0-vertex graph  @xmath1 and an integer  @xmath2 .",
    "can the vertex set  @xmath3 be partitioned into @xmath4 disjoint subsets  @xmath5 , such that each subgraph  @xmath6 $ ] contains an @xmath7-star  ( a  @xmath8 ) ?",
    "two prominent special cases of star partitionare the case @xmath9 ( finding a perfect matching ) and the case @xmath10 ( finding a partition into connected triples ) .",
    "perfect matchings ( @xmath9 ) , of course , can be found in polynomial time .",
    "partitions into connected triples ( the case  @xmath10 ) , however , are hard to find ; this problem , denoted @xmath11-partition , was proven to be np - complete by kirkpatrick and hell  @xcite .",
    "the close connection of star partition to perfect matchings makes it a prime candidate for many applications .",
    "= [ align = center , inner sep=2pt , text centered ] = [ treenode , rectangle , minimum height=.6 cm , rounded corners , draw , fill = white , very thick ]    = [ rounded corners , treenode , minimum height = .6 cm , rectangle , draw ]    = [ treenode , rectangle , minimum height = .6 cm , draw , rounded corners , very thick , fill = white ]    = [ treenode , rectangle , minimum height = .6 cm , rounded corners , draw , fill = white , very thick ]    = [ treenode , rectangle split , rectangle split parts=2 , minimum height = .6 cm , rounded corners , draw , rectangle split part fill = none , gray!20 , rectangle split draw splits = false ]    = [ treenode , rectangle split , rectangle split parts=2 , minimum height = .6 cm , rounded corners , draw , rectangle split part fill = white , white , rectangle split draw splits = false , very thick ]    = [ treenode , rectangle , minimum height = .6 cm , rounded corners , draw , fill = white ]    = [ treenode , rectangle , minimum height = .6 cm , rounded corners , draw , fill = white ]    = [ -,red!28 , line width=0.4pt , rounded corners , top color = red!20,bottom color = red!20 ]    = [ -,green!28 , line width=0.4pt , rounded corners , top color = green!20,bottom color = green!20 ]    ( ser_para ) series - parallel  @xcite ;    ( tree ) tree ;    ( ser_para ) edge ( tree ) ;    ( bip_perm ) edge ( tree ) ;    ( inter ) edge ( triv_perfect ) ;    ( perm ) edge ( bip_perm ) ;    ( split)(threshold.east ) ;    background @scan@one@point@firstofone(perfect.north ) ; @scan@one@point@firstofone(ser_para.west ) ; @scan@one@point@firstofone(split.east ) ; @scan@one@point@firstofone(threshold.south ) ; @scan@one@point@firstofone(chordal.south ) ; @scan@one@point@firstofone(chordal.east ) ; @scan@one@point@firstofone(cograph.north ) ; @scan@one@point@firstofone(inter.west ) ; @scan@one@point@firstofone(comparability.south east ) ; @scan@one@point@firstofone(cograph.north west ) ; @scan@one@point@firstofone(tree.north ) ; @scan@one@point@firstofone(chordal_bip.south east ) ; @scan@one@point@firstofone(ser_para.north east ) ; @scan@one@point@firstofone(bipartite.east ) ; @scan@one@point@firstofone(bipartite.south ) ; @scan@one@point@firstofone(planar_bip.east ) ; @scan@one@point@firstofone(planar_bip.south east ) ; @scan@one@point@firstofone(grid.east ) ; @scan@one@point@firstofone(bip_perm.north ) ;    ( @xmath12 )  ( @xmath13 )  ( @xmath14 )  ( @xmath15 )  ( @xmath16 ) ",
    "( @xmath17 ) ",
    "( @xmath18 ) ",
    "( @xmath19 ) ",
    "( @xmath20 ) ",
    "( @xmath21 ) ",
    "( @xmath22 )  ( @xmath23 ) ",
    "( @xmath24 )  ( @xmath25 )  cycle ;    ( @xmath26 )  ( @xmath27 )  ( @xmath28 )  ( @xmath29 )  ( @xmath30 )  ( @xmath31 )  ( @xmath32 )  ( @xmath33 )  ( @xmath34 )  ( @xmath35 )  ( @xmath36 )  ( @xmath37 )  ( @xmath38 )  cycle ;    at ( @xmath39 ) ( nph ) * -complete * ; at ( @xmath40 ) ( p ) * * ;    our goal in this paper is to achieve a better understanding of star partitions of certain classes of perfect graphs .",
    "we provide a fairly complete classification in terms of polynomial - time solvability versus np - completeness on the most prominent subclasses of perfect graphs , leaving few potentially challenging cases open ; see for an overview of our results .",
    "[ [ motivation . ] ] motivation .",
    "+ + + + + + + + + + +    the literature in algorithmic graph theory is full with packing and partitioning problems . from a more applied point of view , @xmath11-packing and @xmath11-partition find applications in dividing distributed systems into subsystems  @xcite as well as in the test cover problem arising in bioinformatics  @xcite .",
    "in particular , the application in distributed systems explicitly motivates the consideration of very restricted ( perfect ) graph classes such as grid - like structures .",
    "let us discuss a few specific application scenarios for star partitionwith respect to important subclasses of _ perfect graphs_. first , star partition on grid graphs naturally occurs in political redistricting problems  @xcite . we show that star partition remains np - complete on subcubic grid graphs .",
    "interval graphs are another famous class of perfect graphs . here",
    ", star partitioncan be considered a team formation problem : assume that we have a number of agents , each being active during a certain time interval . our goal is to form teams , all of same size , such that each team contains at least one agent sharing time with every other team member .",
    "this specific team member becomes the team leader , since it can act as an information hub .",
    "forming such teams is nothing else than solving star partitionon interval graphs .",
    "we present efficient algorithms for star partitionon unit interval graphs ( that is , for the case when all agents are active for the same amount of time ) and for @xmath11-partition on interval graphs",
    ".    finally , consider split graphs , another class of perfect graphs , whose vertices can be partitioned into a clique and an independent set .",
    "assume that we have agents that are all employees of one institution and agents that are the institution s potential clients .",
    "once again , the goal is to form teams of equal size , each containing a team leader as information hub .",
    "if we require the team leader to be a member of the institution , this immediately leads to star partition on split graphs : the clique vertices represent the institution agents and the independent set vertices represent the potential clients .",
    "we show that star partitionrestricted to split graphs is polynomial - time solvable for @xmath10 , but np - complete otherwise .",
    "[ [ previous - work . ] ] previous work .",
    "+ + + + + + + + + + + + + +    = -1 packing and partitioning problems are central problems in algorithmic graph theory with many applications and with close connections to matching theory  @xcite . in the case of packing",
    ", one wants to maximize the number of graph vertices that are `` covered '' by vertex - disjoint copies of some fixed pattern graph  @xmath41 . in the case of partitioning ,",
    "one wants to cover _ all _ vertices in the graph .",
    "we focus on a partitioning problem that has also been called @xmath41-factor in the literature . in this work",
    ", we always refer to it as @xmath41-partition . as kirkpatrick and hell",
    "@xcite established the np - completeness of @xmath41-partition on general graphs for every connected pattern  @xmath41 with at least three vertices , one branch of research has turned to the investigation of classes of specially structured graphs .",
    "for instance , on the upside @xmath41-partition has been shown to be polynomial - time solvable on trees and series - parallel graphs  @xcite and on graphs of maximum degree two  @xcite .",
    "on the downside , @xmath42-partition ( for fixed @xmath43 ) remains np - complete on planar bipartite graphs  @xcite ; this hardness result generalizes to @xmath41-partition on planar graphs for any outerplanar pattern  @xmath41 with at least three vertices  @xcite .",
    "partitioning into triangles , that is , @xmath44-partition , is polynomial - time solvable on chordal graphs  @xcite and linear - time solvable on graphs of maximum degree three  @xcite .",
    "optimization versions of @xmath42-partition , called min @xmath42-partition , have also received considerable interest in the literature .",
    "this version asks for a partition of a given graph into a minimum number of paths of length _ at most _",
    "clearly , all hardness results for @xmath42-partition carry over to the minimization version . if  @xmath45 is _ part of _ the input , then min @xmath42-partitionis hard for cographs  @xcite and chordal bipartite graphs  @xcite .",
    "in fact , min @xmath42-partitionis -hard even on convex graphs and trivially perfect graphs ( also known as quasi - threshold graphs ) , and hence on interval and chordal graphs @xcite .",
    "min @xmath42-partitionis solvable in polynomial time on trees @xcite , threshold graphs , cographs ( for fixed  @xmath45 )  @xcite and bipartite permutation graphs  @xcite .",
    "[ [ our - contributions . ] ] our contributions .",
    "+ + + + + + + + + + + + + + + + + +    so far , surprisingly little has been known about the complexity of star partitionfor subclasses of perfect graphs .",
    "we provide a detailed picture of the complexity landscape of perfect graphs ; see for an overview .",
    "let us briefly summarize some of our results .    as a central result",
    ", we provide a quasilinear - time algorithm for @xmath11-partitionon interval graphs ; the complexity of star partitionfor @xmath46 remains open .",
    "furthermore , we develop a polynomial - time algorithm for star partitionon cographs .",
    "most of our polynomial - time algorithms are simple to describe : they are based on dynamic programming or even on greedy approaches , and hence should work well in implementations .",
    "their correctness proofs , however , are intricate .    on the boundary to np - hardness , we strengthen a result of @xcite and @xcite by showing that @xmath11-partition , which is star partitionwith @xmath10 , is np - complete on grid graphs with maximum degree three .",
    "note that in strong contrast to this , @xmath44-partition is linear - time solvable on graphs with maximum degree three  @xcite .",
    "furthermore , @xmath11-partitionis np - complete on chordal graphs , while @xmath44-partition is polynomial - time solvable in this case  @xcite .",
    "we observe that @xmath11-partitionis typically not easier than star partitionfor  @xmath47 .",
    "an exception to this rule is provided by the class of split graphs , where @xmath11-partitionis polynomial - time solvable but star partitionis np - complete for any constant value  @xmath47 . due to space constraints , most of our proofs have been moved to an appendix .    [",
    "[ preliminaries . ] ] preliminaries .",
    "+ + + + + + + + + + + + + +    we assume basic familiarity with standard graph classes  @xcite .",
    "definitions of the graph classes are provided when first studied in this paper .",
    "the graph  @xmath8 is often called an @xmath7-starin the following . for a graph @xmath1 , an _",
    "@xmath7-star partition _ is a set of  @xmath48 pairwise disjoint vertex subsets  @xmath49 with @xmath50 such that each subgraph  @xmath6 $ ] contains an @xmath7-staras a ( not necessarily induced ) subgraph .",
    "we refer to the vertex sets  @xmath51 as _ stars _ , even though the correct description of a star would be _ arbitrary  @xmath8-subgraph of  @xmath6$]_. @xmath11-partitionis the special case of star partition(@xmath10 ) , where the star is a  @xmath11 , that is , a path on three vertices . without loss of generality , we assume throughout the paper that the input graph  @xmath52 is connected ( otherwise , we can solve the partition problem separately for each connected component of  @xmath52 ) . throughout the paper ,",
    "we denote by @xmath53 the number of vertices and by @xmath54 the number of edges in a graph  @xmath1 .",
    "in this section , we present algorithms that solve star partition on unit interval graphs in linear time and @xmath11-partition on interval graphs in quasilinear time .    an _ interval graph _ is a graph whose vertices one - to - one correspond to intervals on the real line such that there is an edge between two vertices if and only if their representing intervals intersect . in a _ unit interval graph",
    ", all representing intervals have the same length .",
    "the restricted structure of unit interval graphs allows us to solve star partitionusing a simple greedy approach : repeatedly select the @xmath55  leftmost intervals to form an @xmath7-star and then deleting them .",
    "if , at some point , the @xmath55  leftmost intervals do not contain an @xmath7-star , it can be shown that the graph can not be partitioned into  @xmath7-stars .",
    "this algorithm yields the following result .",
    "[ thm : unitlinear ] star partitionis @xmath56  time solvable on unit interval graphs .      while it might come unsurprisingly that star partitioncan be solved efficiently on unit interval graphs using a greedy strategy ,",
    "this is far from obvious for general interval graphs .",
    "the obstacle here is that two intervals arbitrarily far apart from each other may eventually be required to form a  @xmath11 in the solution .",
    "indeed , the greedy strategy we propose to overcome this obstacle is naive in the sense of allowing wrong choices that can be corrected later .",
    "note that , while we can solve the more general star partition in polynomial time on subclasses of interval graphs like unit interval graphs and trivially perfect graphs ( see ) , we are not aware of a polynomial - time algorithm for star partition with @xmath57 on interval graphs .    [ [ overview - of - the - algorithm . ] ] overview of the algorithm .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    the algorithm is based on the following analysis of a @xmath11-partition of an interval graph .",
    "each @xmath11 contains a _ center _ and two _ leaves _ connected to the center via edges called _",
    "links_. we associate with each interval two so - called `` handles '' .",
    "we require that the link between a leaf and a center `` uses '' both of the leaf s handles ( such that a leaf can have only one link ) and one handle of the center ( which can thus be linked to two leaves ) .",
    "the algorithm examines the _ event points _ ( start and end points of intervals ) of an interval representation in increasing order .",
    "we say a link  @xmath58 `` consumes '' the handles of  @xmath59 and  @xmath60  as soon as one of the two intervals ends .",
    "intuitively , a graph is a no - instance if , at some point , an interval with one or two free handles ends , but there are not enough free handles in other intervals to create a link .",
    "it is a yes - instance if the number of handles is always sufficient .",
    "the algorithm works according to the following two rules : when an interval starts , its two handles are added to a list of free handles ; when an interval with free handles ends , then three handles are deleted from this list ( ideally : the handles of the earliest - ending intervals ) .",
    "the algorithm is sketched in .",
    "[ fig : intervals ] shows an example instance and the lists of handles created by the algorithm .",
    "note that a handle of an interval @xmath59 is simply represented by a copy of interval @xmath59 itself .",
    "we now introduce the necessary formal definitions .",
    "[ algo : p3-interval ] @xmath61 empty handle list @xmath62 ( [ algoloop])@xmath63 to @xmath64    , 0.4    = [ circle , inner sep=1.0pt , draw = black!70 , fill = black!70 ] = [ circle , inner sep=1.0pt , draw = black!70 , fill = white ] = [ circle , inner sep=1.0pt , draw = black!70 , fill = black!20 ] = [ draw = none ] = [ draw = black , line width=1pt ]    ( s - a ) at ( 2.5,2 * , ) ; ( s - b ) at ( 1.5 , , ) ; ( s - c ) at ( 2.5 , , ) ; ( s - d ) at ( 3.5 , 0 ) ; ( s - e ) at ( 4 , , ) ; ( s - f ) at ( 4.5 , 0 ) ;    in a , e , f at ( [ shift=(90:0.22)]s- ) @xmath65 ;    in b , c , d at ( [ shift=(-90:0.22)]s- ) @xmath65 ;    /in a / d , a / e , d / c ( s- )  ( s- ) ;    /in a / b , a / c , d / e , e / f ( s- )  ( s- ) ;    ( b - a ) at ( 1,2 * , ) ; ( d - a ) at ( 9,2 * , ) ; ( b - b ) at ( 2 , , ) ; ( d - b ) at ( 3 , , ) ; ( b - c ) at ( 4 , , ) ; ( d - c ) at ( 6 , , ) ; ( b - d ) at ( 5,0 ) ; ( d - d ) at ( 8,0 ) ; ( b - e ) at ( 7 , , ) ; ( d - e ) at ( 11 , , ) ; ( b - f ) at ( 10,0 ) ; ( d - f ) at ( 12,0 ) ;    in a , b , c , d , e , f ( b- )  ( d- ) node [ pos=0.5 , above=-0.1 ] @xmath65 ;    01/ 11/a,2/a 11 21/a,2/a,3/b,4/b 23 31/a 32 41/a,2/c,3/c 42 51/a,2/d,3/d,4/c,5/c 52 61/a,2/d 63 71/e,2/e,3/a,4/d 71 81/e 82 91/e at ( 10 + 0.2,0.1 ) @xmath66 ; /in 1/f,2/f,3/e at ( 10 + 0.2,-0.7 * , ) @xmath67 ; 1 at ( 11 + 0.2,0.1 ) @xmath68 ; /in 1/ at ( 11 + 0.2,-0.7 * , ) @xmath67 ; 1 at ( 12 + 0.2,0.1 ) @xmath69 ; /in 1/ at ( 12 + 0.2,-0.7 * , ) @xmath67 ;    [ [ definitions . ] ] definitions .",
    "+ + + + + + + + + + + +    we consider a fixed interval graph @xmath1 .",
    "we assume that any vertex  @xmath70 represents a right - open interval @xmath71 with integer endpoints @xmath72 .",
    "moreover , without loss of generality , each position in @xmath73 corresponds to exactly one event .",
    "given @xmath74 containing a @xmath11 with @xmath75 , we write @xmath76 , @xmath77 , and @xmath78 .",
    "moreover , we call the element among @xmath79 having the earliest start point the _ center _ of  @xmath80 . the other two elements of  @xmath80 are called _ leaves_. note that the center of  @xmath80 intersects both leaves .    a _ handle list _",
    "@xmath81 is a list of intervals @xmath82 sorted by decreasing end points ( @xmath83 for @xmath84 ) .",
    "we consider the list to be represented vertically , with the latest - ending interval on top .",
    "we write @xmath85 for the length of @xmath81 , @xmath62 for the empty handle list , and @xmath86 if interval @xmath59 appears in  @xmath81 .",
    "we now define insertion , deletion and comparison of handle lists : @xmath87 is the handle list obtained from @xmath81 by inserting intervals @xmath88 so that the list remains sorted . for @xmath89 , the list  @xmath90 is obtained by deleting one copy of @xmath59 from @xmath81 ( otherwise , @xmath91 ) ; and @xmath92 .",
    "we write @xmath93 if @xmath94 and @xmath95",
    "let @xmath96 be a @xmath11-partition .",
    "we define @xmath97 as a tuple of @xmath98 handle lists @xmath99 such that",
    "@xmath100 and for @xmath101 ,    * if @xmath102 , then @xmath103 , * if @xmath104 , then let @xmath105 be the @xmath11 in @xmath106 containing @xmath59 and * * if @xmath76 , then @xmath107 where @xmath108 is the center of @xmath80 , * * if @xmath109 , then @xmath110 , * * if @xmath111 , then @xmath112 .    note that in , each handle list @xmath113 for @xmath96 is equal to the respective @xmath114 , except for @xmath115 and @xmath116 .    the following lemmas state that , on the one hand , if there is a @xmath11-partition , then will find a sequence of handle lists that always contains enough handles to answer `` ` true ` '' in the end . on the other hand , if the algorithm returns `` ` true ` '' , then it is indeed possible to construct a @xmath11-partition .",
    "[ lem : p3-partition->h_t<=a_t ] if an interval graph @xmath52 has a @xmath11-partition @xmath96 , then for all @xmath117 , defines set @xmath114 with @xmath118 and @xmath119 , where @xmath120 .",
    "[ lem : a_t - defined->partial solution ] let @xmath52 be an interval graph such that returns ` true ` on  @xmath52 . then there exists a @xmath11-partition of @xmath52 .",
    "the above lemmas allow us to conclude the correctness of .",
    "[ thm : p3-interval ] @xmath11-partition on interval graphs is solvable in @xmath121  time .",
    "in this section , we show that star partitioncan be solved in @xmath122  time on bipartite permutation graphs .",
    "the class of bipartite permutation graphs can be characterized using _",
    "strong orderings _ of the vertices of a bipartite graph :    [ def : strongorder ] a _ strong ordering _",
    "@xmath123 of the vertices of a bipartite graph @xmath124 is the union of a total order @xmath125 of @xmath126 and a total order @xmath127 of @xmath128 , such that for all @xmath129 , @xmath130 in @xmath131 , where @xmath132 and @xmath133 , @xmath134 and @xmath135 implies that @xmath136 and @xmath137 are in @xmath131 .",
    "a graph is a bipartite permutation graph if and only if it is bipartite and there is a strong ordering of its vertices . in this case",
    "a strong ordering can be computed in linear time  @xcite .",
    "our key to obtain star partitions in bipartite permutation graphs is a structural result that only a certain `` normal form '' of star partitions has to be searched for .",
    "this paves the way to developing a dynamic programming solution exploiting these normal forms .",
    "we sketch these structural properties of an @xmath7-star partition of bipartite ( permutation ) graphs in the following .",
    "let @xmath138 be a star partitioninstance , where @xmath124 is a bipartite permutation graph , @xmath123 is a strong ordering of the vertices , and @xmath139 is the reflexive closure of  @xmath123 .",
    "assume that @xmath52 admits an @xmath7-star partition  @xmath96 .",
    "let @xmath140 form a star .",
    "we denote @xmath141 ( resp .",
    "@xmath142 ) as the leftmost ( resp .",
    "rightmost ) leaf of  @xmath143 with respect to  @xmath123 .",
    "the _ scope _ of star  @xmath143 is the set  @xmath144 containing all vertices from @xmath145 to @xmath146 .",
    "the _ width _ of star  @xmath143 is the cardinality of its scope , that is , @xmath147 .",
    "the _ width _ of @xmath96 , @xmath148 , is the sum of @xmath149 over all @xmath140 .",
    "let @xmath150 and @xmath151 be two edges .",
    "we say that @xmath152 and @xmath153 _ cross _ each other if either ( @xmath134 and @xmath154 ) or ( @xmath155 and @xmath156 ) . the _ edge - crossing number _ of two stars  @xmath157 is the number of pairs of crossing edges  @xmath158 where @xmath152 is an edge of  @xmath143 and  @xmath153 is an edge of  @xmath159 .",
    "the edge - crossing number  @xmath160 of  @xmath96 is the sum of the edge - crossing numbers over all pairs of stars @xmath161 .",
    "we identify the possible configurations of two stars , depending on the relative positions of their leaves and centers , see [ fig : crossing ] . among those ,",
    "the following two configurations are favorable : given @xmath157 , we say that @xmath143 and @xmath159 are    * _ non - crossing _ if their edge - crossing number is zero ; * _ interleaving _ if @xmath162 and @xmath163 ;    we say that @xmath96 is _ good _ if any two stars @xmath164 are either non - crossing or interleaving .",
    "we define the score of @xmath96 as the tuple  @xmath165 .",
    "we use the lexicographical order to compare scores .    ,",
    "1.5    = [ circle , fill = black!30 , inner sep=2pt ] = [ circle , draw = black!80 , fill = black!30 , inner sep=2pt , line width=1pt ] = [ draw = black , line width=1pt ] = [ draw = blue!20 , line width=3pt ] = [ draw = black!80!red , line width=1pt ]    ( u-1 ) at ( 1 , , ) ; in 2,3,4 ( u- ) at ( , , ) ; ( v-4 ) at ( 4,0 ) ; in 1,2,3 ( v- ) at ( , 0 ) ; in 1,2,3 ( u-1 )  ( v- ) ; in 2,3,4 ( u- )  ( v-4 ) ; at ( 2.5,-.5 ) non - crossing ;    ( u-2 ) at ( 2 , , ) ; in 1,3,4 ( u- ) at ( , , ) ; ( v-3 ) at ( 3,0 ) ; in 1,2,4 ( v- ) at ( , 0 ) ; in 1,2,4 ( u-2 ) ",
    "( v- ) ; in 1,3,4 ( u- )  ( v-3 ) ; at ( 2.5,-.5 ) interleaving ;    ( u-2 ) at ( 1.5 , , ) ; ( u-4 ) at ( 3.5 , , ) ; in 0,1,2,3,4,5 ( v- ) at ( , 0 ) ;    in 0,1,2 ( u-2 )  ( v- ) ; in 3,4,5 ( u-4 )  ( v- ) ; in 0,1,4 ( u-2 )  ( v- ) ; in 2,3,5 ( u-4 )  ( v- ) ; at ( 2.5,-.5 ) configuration  i ;    ( u-2 ) at ( 1.5 , , ) ; ( u-4 ) at ( 3.5 , , ) ; in 0,1,2,3,4,5 ( v- ) at ( , 0 ) ; in 0,1,2 ( u-2 )  ( v- ) ; in 3,4,5 ( u-4 )  ( v- ) ; in 3,4,5 ( u-2 ) ",
    "( v- ) ; in 0,1,2 ( u-4 )  ( v- ) ; at ( 2.5,-.5 ) configuration  iii ;    ( u-1 ) at ( 1 , , ) ; in 2,3,4 ( u- ) at ( , , ) ; ( v-3 ) at ( 3,0 ) ; in 1,2,4 ( v- ) at ( , 0 ) ; in 1,2,3 ( u-1 )  ( v- ) ; in 2,3,4 ( u- )  ( v-4 ) ; in 1,2,4 ( u-1 )  ( v- ) ; in 2,3,4 ( u- )  ( v-3 ) ;    at ( 2.5,-.5 ) configuration  ii ;    ( u-1 ) at ( 1 , , ) ; in 2,3,4 ( u- ) at ( , , ) ;",
    "( v-1 ) at ( 1,0 ) ; in 2,3,4 ( v- ) at ( , 0 ) ; in 1,2,3 ( u-1 )  ( v- ) ; in 2,3,4 ( u- )  ( v-4 ) ; in 2,3,4 ( u-1 )  ( v- ) ; in 2,3,4 ( u- )  ( v-1 ) ;    at ( 2.5,-.5 ) configuration  iv ;    this definition allows us to show a normal form for star partitions in bipartite permutation graphs .",
    "[ lem : only_noncrossing+interleaving ] any @xmath7-star partition of a bipartite permutation graph @xmath52 with minimum score is a good @xmath7-star partition .",
    "[ cor : at - most - one - crossing ] let @xmath96 be an @xmath7-star partition of a bipartite permutation graph @xmath52 with minimum score . then for every star  @xmath166 , there is at most one  @xmath167 such that @xmath143 and @xmath159 are interleaving , and for all @xmath168 , @xmath143 and @xmath169 are non - crossing .",
    "we now informally describe a dynamic programming algorithm focused on deciding whether there is a _ good _ @xmath7-star partition .",
    "it builds up a solution following the strong ordering of the graph from left to right .",
    "a partial solution can be extended in three ways only : either a star is added with the center in @xmath126 , or a star is added with the center in @xmath128 , or two interleaving stars are added .",
    "the algorithm can thus compute , for any given number of centers in @xmath126 and in @xmath128 , whether it is possible to partition the leftmost vertices of  @xmath126 and  @xmath128 in one of the three ways above .",
    "this algorithm leads to the following result .",
    "[ thm : bipperm ] star partitioncan be solved in @xmath122  time on bipartite permutation graphs .",
    "in this section , we show that @xmath11-partition is np - hard even on grid graphs with maximum degree three , thus strengthening a result of @xcite and @xcite , who showed that @xmath11-partition is -complete on planar bipartite graphs of maximum degree three .",
    "a _ grid graph _ is a graph with a vertex set @xmath170 and edge set @xmath171 .",
    "that is , its vertices can be given integer coordinates such that every pair of vertices is joined by an edge if and only if their coordinates differ by at most 1 in at most one dimension .",
    "to show np - hardness of @xmath11-partition on grid graphs , we exploit the above mentioned result of @xcite and @xcite and find a suitable embedding of planar graphs into grid graphs while maintaining the property of a graph having a @xmath11-partition .",
    "this allows us to prove    [ nphardgrid ] @xmath11-partitionis -hard on grid graphs of maximum degree three .",
    "the following observation helps us embedding planar graphs into grid graphs , as it allows us to replace edges by paths on @xmath172  new vertices for any @xmath173 .",
    "[ obsubdivide ] let @xmath52  be a graph , @xmath174 be an edge of  @xmath52 , and @xmath175 be the graph obtained by removing the edge  @xmath152 from  @xmath52 and by connecting @xmath176 and  @xmath177 using a path on three new vertices .",
    "then , @xmath52 has a @xmath11-partition if and only if  @xmath175 has .",
    "we can now prove by showing that @xmath52  has a @xmath11-partition if and only  @xmath175 has , where @xmath175  is the graph obtained from a planar graph  @xmath52 of maximum degree three using the following construction .",
    "[ cons : gridgraphs ] let @xmath52  be a planar graph of maximum degree three . using a polynomial - time algorithm of @xcite we obtain a crossing - free _ rectilinear embedding _ of  @xmath52 into the plane such that :    1 .",
    "each vertex is represented by a horizontal line .",
    "each edge is represented by a vertical line .",
    "all lines end at integer coordinates with integers in @xmath178 .",
    "4 .   if two vertices are joined by an edge , then the vertical line representing this edge ends on the horizontal lines representing the vertices .",
    "illustrates such an embedding . without loss of generality ,",
    "every end point of a line lies on another line .",
    "now , in polynomial time , we obtain a grid graph  @xmath175 from the rectilinear embedding , as follows :    1 .",
    "we multiply all coordinates by six ( see ) .",
    "every point in the grid touched by a horizontal line that represents a vertex  @xmath176 of  @xmath52 becomes a vertex in  @xmath175 .",
    "the horizontal path resulting from this horizontal line we denote by @xmath179 .",
    "3 .   for each vertical line ,",
    "all its grid points become a vertex in  @xmath175 , except for one point that we bypass by adding a bend of five vertices to the vertical line ( see ) .",
    "4 .   with each vertex  @xmath176 in  @xmath52 ,",
    "we associate the vertex  @xmath180 of  @xmath175 that lies on @xmath179 and has degree three .",
    "there is at most one such vertex .",
    "if no such vertex exists , then we arbitrarily associate with  @xmath176 one of the end points of @xmath179 .",
    "this section briefly summarizes our hardness and tractability results for cographs , split graphs , and chordal graphs .    [",
    "[ cographs . ] ] cographs .",
    "+ + + + + + + + +    a cograph is a graph that does not contain a @xmath181 ( path of length four ) as an induced subgraph .",
    "cographs allow for a so - called linear - time computable _ cotree _  @xcite . using a dynamic programming approach on the cotree representation of the cograph",
    ", we can solve star partitionin polynomial time .",
    "[ thm : cographs ] star partitioncan be solved in @xmath182 time on cographs .",
    "[ [ split - graphs . ] ] split graphs .",
    "+ + + + + + + + + + + + +    a _ split graph _ is a graph whose vertices can be partitioned into a clique and an independent set .",
    "remarkably , split graphs are the only graph class where we could show that @xmath11-partition is solvable in polynomial time , but star partition for @xmath183 is np - hard .",
    "more precisely , we solve @xmath11-partition on split graphs by reducing it to finding a restricted form of _ factor _ in an auxiliary graph ; herein , a _ factor _ of a graph @xmath52 is a spanning subgraph of @xmath52 ( that is , a subgraph containing all vertices ) .",
    "this graph factor problem then can be solved in polynomial time @xcite .",
    "in contrast , we can show that star partition is np - hard for each @xmath47 by exploiting a reduction from exact cover by @xmath7-sets .",
    "[ thm : splittract ] star partition on split graphs is solvable in @xmath184  time for @xmath10 , but is np - hard for each @xmath47 .    [ [ chordal - graphs . ] ] chordal graphs . + + + + + + + + + + + + + + +    a graph is _ chordal _ if any induced subgraph containing a cycle of length at least four also contains a _ triangle _ , that is , a cycle of length three .",
    "we show that @xmath11-partitionrestricted to chordal graphs is -hard by reduction from the well - known 3-dimensional matchingproblem  @xcite .",
    "[ thm : p3-hard - chordal ] @xmath11-partitionrestricted to chordal graphs is -hard .    for the reduction",
    ", we use the construction that @xcite used to show that @xmath11-partition is np - complete and observe that we can triangulate the resulting graph while maintaining the correctness of the reduction .",
    "with this paper , we worked towards closing a wide gap concerning the assessment of the computational complexity of a class of fundamental graph partitioning problems  partitioning perfect graphs into stars .",
    "we close with three open questions for future research . what is the complexity of star partitionfor  @xmath185 on permutation graphs ?",
    "what is the complexity of star partitionfor  @xmath46 on interval graphs ? are there other important graph classes ( not necessarily perfect ones ) where star partitionis polynomial - time solvable ?    [ [ acknowledgments . ] ] acknowledgments .",
    "+ + + + + + + + + + + + + + + +    ren van bevern was supported by the dfg , project dapa ( ni 369/12 ) , robert bredereck by the dfg , project paws ( ni 369/10 ) , vincent froese by the dfg , project damm ( ni 369/13 ) , laurent bulteau and gerhard j.  woeginger by the alexander von humboldt foundation , bonn , germany , and jiehua chen by the studienstiftung des deutschen volkes .",
    "* appendix *",
    "given a unit interval graph  @xmath1 , we can in linear time compute a _ bicompatible elimination order _ of its vertices  @xcite , that is , an ordering  @xmath186 such that for any vertex  @xmath187 it holds that the set @xmath188 : =    \\{u \\in n[v ] \\mid \\sigma(u ) \\le \\sigma(v)\\}$ ] of its left neighbors and the set  @xmath189 : = \\{u \\in n[v ] \\mid \\sigma(u ) \\ge \\sigma(v)\\}$ ] of its right neighbors each form a clique in  @xmath52 .",
    "moreover , since we assume @xmath52  to be connected , it can be shown that for all  @xmath190 with  @xmath191 , the set  @xmath192 induces a clique in  @xmath52 @xcite . for a subset",
    "@xmath193 let  @xmath194 denote the rightmost vertex in  @xmath195 with respect to  @xmath196 .",
    "now , we greedily partition  @xmath52 into @xmath7-stars starting with the first  @xmath55 vertices  @xmath197 . if  @xmath198 $ ] does not contain an  @xmath7-star , then we answer `` no '' .",
    "otherwise we delete  @xmath199 from  @xmath52 and continue on the remaining graph .",
    "if we end up with the empty graph , we have found a partition of  @xmath52 into  @xmath7-stars and answer  `` yes '' .",
    "obviously , the algorithm requires linear time .",
    "it remains to show that it is correct . to this end",
    ", we show that if there is an @xmath7-star partition  @xmath80 of  @xmath52 , then there is also an @xmath7-star partition  @xmath200 of  @xmath52 with @xmath201 .",
    "let  @xmath80  be a partition of  @xmath52 into  @xmath7-stars such that @xmath202 , that is , the first @xmath55 vertices are not grouped into one star but distributed among several stars .",
    "then , let  @xmath203 be stars such that  @xmath204 for  @xmath205 , @xmath206 and assume that  @xmath207 .",
    "further , let  @xmath108 denote the center vertex of  @xmath208 .",
    "note that  @xmath209 , which implies  @xmath210 $ ] .",
    "since  @xmath211 $ ] and  @xmath212 $ ] are cliques , it follows that  @xmath213 $ ] contains an  @xmath7-star that could participate in an @xmath7-star partition if also the remaining vertices in  @xmath214 can be partitioned into @xmath7-stars . to verify that this is possible , observe first that the number  @xmath215 of remaining vertices is again divisible by  @xmath55 .",
    "we now show that we can greedily cover @xmath216 by stars , because @xmath216 consists of two cliques where one vertex of the first clique is connected to all vertices of the second clique . to this end , let @xmath217)$ ] be the rightmost neighbor of  @xmath218 it holds that  @xmath219 $ ] , because for a vertex  @xmath220 either @xmath221 or @xmath222 and there is some star center @xmath223 with @xmath224 and @xmath225 since no star  @xmath226 could have a center  @xmath227 with  @xmath228 . in particular , all vertices in  @xmath229 $ ] are connected to the rightmost vertex  @xmath230)$ ] of  @xmath231 $ ] .",
    "the vertices in  @xmath231 $ ] are also connected to  @xmath59 as they induce a clique including  @xmath59 .",
    "moreover , @xmath232 $ ] also induces a clique , because @xmath59 is , in particular , connected to the rightmost vertex in  @xmath232 $ ] .",
    "now , since  @xmath229 $ ] induces a clique in  @xmath52 , we arbitrarily pack as many @xmath7-stars as possible into  @xmath229 $ ] .",
    "any remaining vertices are grouped together with  @xmath59 and the necessary number of arbitrary vertices from  @xmath231 $ ] .",
    "finally , the remaining vertices in  @xmath231 $ ] are arbitrarily partitioned into  @xmath7-stars . again , since  @xmath231 $ ] induces a clique in  @xmath52 , this is possible .",
    "[ fig : unit ] depicts an example of the rearranged partition .",
    "= [ circle , draw = black , inner sep=2pt ] = [ draw = black , line width=1pt ]    in 1,2,3,4 ( v ) at ( , 2 ) ; in 5,6, ...",
    ",9 ( v ) at ( , 2 ) ; ( v10 ) at ( 10,2 ) ; ( u ) at ( 11,2 ) ; ( v12 ) at ( 12,2 ) ; ( v13 ) at ( 13,2 ) ;    ( v1 )  ( v2 ) ; ( v2 ) to[out=45 , in=135 ] ( v5 ) ; ( v2 ) to[out=45 , in=135 ] ( v6 ) ;    ( v3 ) to[out=315,in=225 ] ( v7 ) ; ( v7 ) ",
    "( v8 ) ; ( v7 ) to[out=315 , in=225 ] ( v10 ) ;    ( v4 ) to[out=45 , in=135 ] ( v9 ) ; ( v9 ) to[out=45 , in=135 ] ( v12 ) ; ( v9 ) to[out=45 , in=135 ] ( v13 ) ;    in 1,2,3,4 ( v ) at ( , 0 ) ; in 5,6, ... ,9 ( v ) at ( , 0 ) ; ( v10 ) at ( 10,0 ) ; ( u ) at ( 11,0 ) ; ( v12 ) at ( 12,0 ) ; ( v13 ) at ( 13,0 ) ;    ( v1 )  ( v2 ) ; ( v2 )  ( v3 ) ; ( v2 ) to[out=45 , in=135 ] ( v4 ) ;    ( v5 ) ",
    "( v6 ) ; ( v5 ) to[out=45 , in=135 ] ( v7 ) ; ( v5 ) to[out=45 , in=135 ] ( v8 ) ;    ( v10 )  ( v9 ) ; ( v10 ) to[out=45 , in=135 ] ( v12 ) ; ( v10 ) to[out=45 , in=135 ] ( v13 ) ;      to more closely compare the handle lists generated by to those induced by a @xmath11-partition , we show a few properties for both types of lists .    [ property : handle : delete_size=3 ] let @xmath96 be a @xmath11-partition with @xmath233 and let  @xmath59 be an interval with @xmath234 .",
    "then , one of the following is true :    @xmath235 , @xmath236 , and @xmath237 or    @xmath238 and @xmath239 .",
    "moreover , in both cases , @xmath240 .",
    "let @xmath241 be the @xmath11 containing @xmath59 .",
    "depending on the rank of  @xmath59 , we prove that either case  ( i ) or  ( ii ) applies .    if @xmath76 , then @xmath59 is not the center of @xmath80 . let @xmath108 be the center of @xmath80 .",
    "since @xmath108 is connected to @xmath59 , it follows that @xmath242 .",
    "since @xmath59 ranks first , @xmath243 contains twice both elements  @xmath59 and  @xmath108 .",
    "hence , @xmath244 , and from the definition of @xmath245 it follows that @xmath237 , we are thus in case  ( i ) .",
    "moreover , only one copy of @xmath108 remains in @xmath113 .    if @xmath109 and @xmath59 is not the center .",
    "let  @xmath108 be the center of @xmath80 and @xmath60 be the interval of rank 1 in @xmath80 . using the reasoning above",
    ", it follows that @xmath243 contains once @xmath108 and twice @xmath59 but not @xmath60 , implying that @xmath236 . as  @xmath246",
    ", this implies that @xmath237 : we are in case  ( i ) .",
    "if @xmath109 and @xmath59 is the center , then let @xmath247 such that @xmath60 ranks first and @xmath248 ranks third . using the same reasoning as before it follows that @xmath243 contains  @xmath59 once and @xmath248 twice , but not @xmath60 , implying that @xmath236 .",
    "as  @xmath249 , this implies that @xmath237 : we are in case  ( i ) .    finally , if @xmath111 , then @xmath243 does not contain @xmath59 ( the last copies have been removed when the rank-2-interval ended ) , and @xmath239 : we are in case  ( ii ) .",
    "the fact that @xmath240 is clear in each case ( all copies are removed when @xmath250 , none is added ) .",
    "[ property : in_handle_is_alive ] for any @xmath114 defined by and @xmath251 , it holds that @xmath252 .    for any @xmath11-partition @xmath96 with @xmath253 and @xmath254",
    ", it holds that @xmath252 .",
    "an element @xmath59 is only added to a handle list @xmath114 or @xmath113 when @xmath102 , so the inequality @xmath255 is trivial in both cases .",
    "consider now an interval  @xmath59 and @xmath234 .",
    "we show that neither @xmath114 nor @xmath113 contain  @xmath59 , which suffices to complete the proof .",
    "the fact that @xmath240 is already proven in [ property : handle : delete_size=3 ] .",
    "moreover , if @xmath256 , then @xmath257 follows obviously .    now , assume that @xmath258 .",
    "we inductively apply to obtain that for any @xmath259 , we have @xmath260 ( note that the property is trivial for  @xmath261 ) .",
    "hence , @xmath59 is the interval with the earliest end point in @xmath262 ( i.e. the lowest interval ) and all of its copies ( at most two ) are removed from @xmath262 to obtain @xmath114 in line  [ delatline ] of .",
    "it follows that @xmath257 .",
    "[ property : keep_list_order ] let @xmath263 and @xmath264 be two handle lists such that @xmath265 .",
    "then for any @xmath266 , @xmath267 and for any interval  @xmath59 , @xmath268 .    for both insertion and deletion , the size constraint is clearly maintained ( both list lengths respectively increase or decrease by 1 ) .",
    "it remains to compare pairs of elements with the same index in both lists ( such pairs are said to be _ aligned _ ) .",
    "for the deletion case @xmath269 is removed from @xmath81 . for any @xmath270",
    ", @xmath271 is now aligned with either @xmath272 ( if @xmath273 ) or @xmath274 ( if @xmath275 ) .",
    "we have @xmath276 since @xmath265 and @xmath277 since @xmath278 is sorted .",
    "hence , @xmath271  is aligned with an interval ending no later than @xmath271 itself .",
    "we now prove the property for the insertion of @xmath59 in both @xmath81 and @xmath278 .",
    "an element @xmath279 of @xmath81 or @xmath278 is said to be shifted if it is lower than the insertion point of  @xmath59 ( assuming that already - present copies of @xmath59 in @xmath81 or @xmath278 are not shifted ) , this is equivalent to @xmath280 .",
    "note that if some @xmath281 is shifted but @xmath269 is not , then @xmath282 , a contradiction to @xmath283 .",
    "this implies that the insertion point of @xmath59 in @xmath278 is not higher than the insertion point in @xmath81 .",
    "let @xmath279 be an interval of @xmath284 , now aligned with some @xmath285 in @xmath286 .",
    "we prove that @xmath287 .",
    "assume first that @xmath288 , then either @xmath289 , in which case trivially @xmath287 , or @xmath290 .",
    "then , @xmath285 can not be shifted ( since the insertion point is not higher in @xmath278 than in  @xmath81 ) , and @xmath291 .    assume now that @xmath292 .",
    "then , @xmath293 for some @xmath294 . with @xmath265",
    ", we have @xmath295 .",
    "if @xmath296 then we directly have @xmath297 . otherwise , exactly one of @xmath269 and @xmath281 must be shifted .",
    "it can not be @xmath281 ( the insertion point of @xmath59 is not higher in @xmath278 than in  @xmath81 ) , hence @xmath269 is shifted and @xmath281 is not . in  @xmath81 we have @xmath298 , and in @xmath278 intervals @xmath281 and @xmath285 must be consecutive and can not occur lower than @xmath59 ( note that @xmath289 is possible ) , thus we have @xmath299 .",
    "overall , we indeed have @xmath297 .",
    "we show by induction that for any position @xmath300 ,",
    "@xmath117 , the algorithm defines a set @xmath114 with @xmath301 and @xmath302 .    for @xmath303 , defines set @xmath304 , and @xmath305 .",
    "consider now some @xmath306 , and assume that the induction property is proven for @xmath307 .",
    "if an interval  @xmath59 starts at position  @xmath300 , then @xmath308 , @xmath309 , @xmath310 , and defines @xmath311 .",
    "then property @xmath302 is trivially preserved , and [ property : keep_list_order ] implies @xmath118 .",
    "if an interval  @xmath59 ends at  @xmath300 , then we first show defines @xmath114 . towards a contradiction ,",
    "suppose that @xmath114 is not defined .",
    "this means that @xmath312 and @xmath313 .",
    "then , @xmath314 since @xmath315 , which implies @xmath316 ( since @xmath317 ) . by [ property",
    ": handle : delete_size=3 ] , we must have @xmath318 and @xmath319 .",
    "on the other hand , with @xmath315 , the lowest element  @xmath320 in @xmath243 must have @xmath321 . by [ property : in_handle_is_alive ] , @xmath322 , i.e. @xmath323 , and @xmath324 : a contradiction since @xmath238 .",
    "we have shown that defines @xmath114 . moreover",
    ", we have @xmath325 ( [ property : handle : delete_size=3 ] ) , and @xmath326 ( ) , hence @xmath302 .",
    "note also that @xmath327 and @xmath328 .",
    "if @xmath309 , then @xmath329 , and @xmath330 .    if @xmath258 and @xmath308 , then @xmath239 ( [ property : handle : delete_size=3 ] ) . observe that @xmath315 and , therefore , @xmath331 would imply the existence of an interval  @xmath332 with @xmath333 .",
    "this is impossible , since for all @xmath334 , by [ property : in_handle_is_alive ] , @xmath335 .",
    "thus , one has @xmath336 , which implies @xmath337 .",
    "hence , since the _ lowest _ three elements of @xmath262 are removed to obtain @xmath114 , from @xmath315 we conclude @xmath338 and , in turn , @xmath118 .",
    "if @xmath258 and @xmath250 , then let @xmath339 be the three deleted intervals from @xmath243 , and @xmath340 the lowest three elements of @xmath262 ( which are removed to obtain @xmath114 ) . then , applying [ property : keep_list_order ] three times , we obtain @xmath341 , i.e. @xmath118 .",
    "we first introduce some definitions . given an interval @xmath59 and a handle list @xmath81 , we write @xmath342 for the number of occurrences of interval @xmath59 in @xmath81 . for @xmath343 , let @xmath344 be a partition of  @xmath345 .",
    "then @xmath96 is called a _ partial partition at @xmath300 _ if each  @xmath346 is either ( i ) a singleton @xmath347 , in which case @xmath348 , ( ii ) an edge @xmath58 , in which case @xmath349 , or ( iii ) a triple @xmath350 containing a @xmath11 .",
    "trivially , @xmath11-partitions of an interval graph one - to - one correspond to partial partitions at  @xmath351 .",
    "a partial solution  @xmath96 at  @xmath300 _ satisfies _",
    "@xmath114 if : for any singleton @xmath352 we have @xmath353 , for any edge @xmath354 with @xmath355 we have @xmath356 and @xmath357 , and for any triple  @xmath358 we have @xmath359 . note that for any @xmath360 , since @xmath252 ( [ property : in_handle_is_alive ] ) , @xmath59 must be in a singleton or edge of any partial solution satisfying @xmath114 .",
    "moreover , for any @xmath300 and @xmath361 with @xmath362 , intervals @xmath59 and @xmath60 intersect ( there is an edge between them in the interval graph ) .",
    "we prove by induction that for any @xmath300 such that defines @xmath114 , there exists a partial solution at @xmath300 satisfying @xmath114 .    for @xmath303 , the partial solution @xmath62 satisfies @xmath363 .",
    "assume now that for some  @xmath364 , defines  @xmath114 , and that there exists a partial solution  @xmath96 at  @xmath307 satisfying  @xmath262 .",
    "first , if @xmath102 for some interval @xmath59 , then let @xmath365 .",
    "thus @xmath366 is now a partial solution at @xmath300 ( it partitions every interval with earlier starting point into singletons , edges and @xmath11s ) which satisfies @xmath114 since by construction of  @xmath114 by , @xmath353 .",
    "now assume that @xmath104 with @xmath309 .",
    "then , in @xmath96 , either @xmath59 is part of an edge @xmath58 with @xmath367 , or @xmath59 is part of a @xmath11 . in both cases , @xmath368 is a partial solution at @xmath300 which satisfies @xmath329 .",
    "we now explore the case where @xmath104 with @xmath258 .",
    "then , the lowest element of @xmath262 must be @xmath59 ( no other interval @xmath369 can have @xmath370 ) .",
    "let @xmath60 and @xmath248 be the two elements above  @xmath59 in @xmath262 .",
    "then , by construction , @xmath371 and @xmath372 for all @xmath373 .",
    "we create a partial solution @xmath366 at @xmath300 depending on the number of occurrences of @xmath59 , @xmath60 and @xmath248 in @xmath262 .",
    "if @xmath374 ( hence , @xmath375 ) and @xmath376 , then @xmath96 contains two singletons  @xmath347 and @xmath377 .",
    "let @xmath378 .",
    "then , @xmath366 is indeed a partial solution at @xmath300 ( since @xmath379 is an edge with @xmath380 ) that satisfies @xmath114 , since @xmath356 and @xmath381 .    if @xmath374 ( hence , @xmath375 ) and @xmath382 , then @xmath96 contains a singleton  @xmath347 and an edge  @xmath383 . also , note that @xmath384 , that is , @xmath385 . because there is an edge @xmath379 , the triple @xmath386 contains a  @xmath11 .",
    "let @xmath387 .",
    "then @xmath366 is indeed a partial solution at @xmath300 that satisfies @xmath114 , since @xmath388 .",
    "if @xmath389 ( hence , @xmath390 and @xmath376 ) , then similarly @xmath96 contains an edge @xmath391 and a singleton @xmath377 : @xmath392 is a partial solution at @xmath300 that satisfies @xmath114 .    if @xmath393 and @xmath394 ( hence , @xmath395 and @xmath396 ) , and @xmath376 , then @xmath96 contains two edges @xmath391 and @xmath397 and a singleton @xmath377 . recall that @xmath398 .",
    "assume first that @xmath399 , then interval @xmath400 intersects @xmath60 , and @xmath401 contains a @xmath11 .",
    "also , @xmath379 forms an edge with @xmath381 : define @xmath402 . in the case where @xmath403 , @xmath404 contains a @xmath11 and @xmath405 is a partial solution at @xmath300 that satisfies @xmath114 .",
    "finally , we have a similar situation when @xmath393 , @xmath394 and @xmath382 : then , @xmath96 contains three edges @xmath391 , @xmath397 and @xmath406 . if @xmath399 , then both @xmath401 and @xmath407 contain @xmath11s",
    "otherwise , @xmath404 and @xmath408 contain @xmath11s .",
    "thus , we define respectively @xmath409 and @xmath410 . in both cases , @xmath366 is a partial solution at @xmath300 that satisfies @xmath114 .",
    "overall , if returns ` true ` , then it defines @xmath411 . according to the property",
    "we have proven , there exists a partial solution at @xmath351 , hence @xmath52 has a @xmath11-partition .",
    "let @xmath52 be an interval graph . to prove the theorem",
    ", we show that returns ` true ` on @xmath52 if and only if @xmath52 has a @xmath11-partition .",
    "the `` only if '' part is the statement of [ lem : a_t - defined->partial solution ] . for",
    "the `` if '' part , suppose that @xmath52 has a @xmath11-partition  @xmath96 .",
    "then [ lem : p3-partition->h_t<=a_t ] implies that defines set @xmath114 at position  @xmath351 , which means it returns ` true ` .",
    "it remains to prove the running time bound .",
    "we first preprocess the input as follows : in @xmath56  time , we can get an interval representation of an interval graph with @xmath0  intervals that use start and end points in  @xmath412  ( * ? ? ?",
    "* section  8) .",
    "hence , in @xmath178  time , we can get an increasingly sorted list  @xmath413 of @xmath64  event points ( for example , using `` pigeon sort '' ) . then , in @xmath178  time , iterate over  @xmath413 and reassign the event points to points in @xmath414 in the order of their appearance in  @xmath413 . at the same time , we build an @xmath64-element array  @xmath415 such that @xmath416 $ ] holds a pointer to the interval starting or ending at event point  @xmath294 ( there is at most one such interval ) .",
    "it follows that all preprocessing works in @xmath56  time .",
    "after this preprocessing , each of the @xmath178  iterations for some @xmath417 of the loop in line  [ algoloop ] of is executed in @xmath418  time : in constant time , we get the interval @xmath419 $ ] starting or ending at  @xmath300 and each operation on the handle list can be executed in @xmath418 time if it is implemented as a balanced binary tree ( not that only the current value of @xmath114 need to be kept at each point , hence it is never necessary for the algorithm to make a copy of the whole handle list ) .",
    "given a vertex  @xmath59 and a set of vertices  @xmath420 , we write @xmath421 if for every vertex  @xmath422 it holds @xmath423 . given another set of vertices  @xmath424",
    ", we write @xmath425 if for every vertex  @xmath426 and every vertex  @xmath427 it holds that @xmath428 .    in a bipartite graph",
    "@xmath52 with vertex set  @xmath429 , if the subgraph induced by a size-@xmath430 vertex subset @xmath431 contains an @xmath7-star , then this induced subgraph is exactly a star and there is only one way to assign the star center .",
    "thus , we also refer to @xmath432 $ ] as a star .",
    "we denote @xmath433 as the center of star  @xmath432 $ ] .",
    "observe that the number @xmath434 of star centers in @xmath126 and the number @xmath435 of star centers in @xmath128 are uniquely determined by the sizes @xmath436 and @xmath437 of the two independent vertex sets and by the size @xmath7 of the stars : @xmath438 if these numbers are not positive integers , then @xmath52 does not have an @xmath7-star partition .",
    "thus , we assume throughout this section that @xmath434 and @xmath435 are positive integers .    [ prop : multiple - crossings ] let @xmath439 and @xmath440 be four vertices such that edges @xmath441 and @xmath442 are in @xmath52",
    ". then @xmath52 has edges @xmath443 and @xmath444 , and for any edge  @xmath152 crossing one ( resp .",
    "both ) edge(s ) in @xmath445 , @xmath152 crosses one ( resp .",
    "both ) edge(s ) in @xmath446 .",
    "the existence of the edges @xmath443 and @xmath444 is a direct consequence of [ def : strongorder ] .",
    "let @xmath447 be an edge crossing @xmath443 and/or @xmath444 .",
    "we consider the cases where @xmath448 and where @xmath449 ( the case @xmath450 being symmetrical with @xmath448 ) .    if @xmath448 , then @xmath451 , and @xmath152 crosses both @xmath443 and @xmath442 .",
    "also , if @xmath152 crosses @xmath444 , then @xmath152 also crosses @xmath441 , which proves the property for this case .    if @xmath452 , then if @xmath152 crosses @xmath443 , then @xmath152 also crosses @xmath441 .",
    "if  @xmath152 crosses @xmath444 , then @xmath152 also crosses @xmath442 .",
    "overall , the property is thus proven for all cases .",
    "let @xmath96 be an @xmath7-star partition for @xmath52 .",
    "first , we show that for any two stars @xmath453 where @xmath143 and @xmath159 are neither non - crossing nor interleaving , then @xmath143 and @xmath159 are in one of the following four configurations ( possibly after exchanging the roles of @xmath143 and @xmath159 , see [ fig : crossing ] for an illustration ) :    1 .   @xmath454 ; 2 .",
    "@xmath455 and @xmath456 ; 3 .",
    "@xmath457 and @xmath458 ; 4 .",
    "@xmath459 and @xmath460 or , symmetrically , @xmath461 and @xmath462 .",
    "first , assume that @xmath433 and @xmath463 are both either in  @xmath126 or in  @xmath128 .",
    "further , assume without loss of generality that @xmath464 .",
    "if @xmath143 and  @xmath159 are not in configuration  i , then either @xmath465 or @xmath458 .",
    "if @xmath465 , then @xmath432 $ ] and @xmath466 $ ] are non - crossing ( a contradiction ) .",
    "otherwise , @xmath458 and configuration  iii holds .    if @xmath433 and @xmath463 are in different vertex sets and if @xmath143 and @xmath159 are not in configuration  iv , then @xmath467 and/or @xmath468 . if @xmath469 , then @xmath470 ( as @xmath432 $ ] and @xmath466 $ ] are not interleaving )",
    "otherwise , @xmath471 ( as @xmath432 $ ] and @xmath466 $ ] are not interleaving ) .",
    "thus , we are in configuration  ii .",
    "we now prove that @xmath96 does not contain any pair of stars  @xmath472 in configurations  i , ii , iii or  iv . for each configuration",
    "we proceed by contradiction : assuming a pair of stars is in this configuration , we construct an @xmath7-star partition  @xmath366 with a strictly smaller score than @xmath96 .    [",
    "[ configurationi . ] ] configuration  i. + + + + + + + + + + + + + + + +    let @xmath473 be two stars of @xmath96 in configuration  i , that is , @xmath474 .",
    "write @xmath475 and @xmath476",
    ". then  @xmath477 and  @xmath478 must be in the same subset of @xmath126 or @xmath128 .",
    "without loss of generality , we can assume @xmath479 .",
    "write @xmath480 for the union of the leaves of  @xmath143 and  @xmath159 , with indices taken such that @xmath481 for @xmath482 .",
    "let  @xmath483 and  @xmath484 .",
    "we first show that both vertex sets @xmath485 and @xmath486 form a star in @xmath52 .",
    "let @xmath45 be the index such that @xmath487 . then , since the scopes of  @xmath143 and  @xmath159 intersect , @xmath488 can not be to the right of all the leaves of @xmath432 $ ] , hence we have  @xmath489 , and @xmath490 .",
    "consider now any @xmath491 .",
    "if @xmath492 , then there exists an edge @xmath493 in @xmath52 . if @xmath494 , then there exists an edge @xmath495 in @xmath52 which crosses  @xmath496 ( since  @xmath497 and @xmath479 ) .",
    "thus , there also exists an edge @xmath493 in  @xmath52 by [ def : strongorder ] . with a symmetrical argument",
    ", @xmath52 has an edge  @xmath495 for all @xmath498 .",
    "thus the vertex sets @xmath499 and @xmath500 both form a star in @xmath52 .",
    "we now compare the widths of @xmath501 $ ] and @xmath502 $ ] with the widths of the original stars @xmath432 $ ] and @xmath466 $ ] .",
    "let @xmath177 be the total number of elements between @xmath503 and @xmath504 , i.e. the cardinality of vertex set @xmath505 . then , using the fact that the scopes of @xmath420 and @xmath424 are disjoint and included in a size-@xmath177 set , we have @xmath506 we can thus construct an @xmath7-star partition @xmath507 with @xmath508 , i.e. with strictly smaller score .",
    "thus , no pair of stars in the @xmath7-star partition @xmath96 may be in configuration  i.    [ [ configurationii . ] ] configuration  ii .",
    "+ + + + + + + + + + + + + + + + +    let @xmath473 be two stars of @xmath96 in configuration  ii , that is , @xmath455 and @xmath456 .",
    "write @xmath475 and  @xmath476",
    ". then @xmath509 and either @xmath510 or @xmath511 .",
    "we only consider the case of @xmath510 .",
    "the case of @xmath512 works analogously .",
    "let @xmath513 be the rightmost vertex of the leaves of star  @xmath432 $ ] .",
    "first , @xmath52  contains edge  @xmath514 as star  @xmath466 $ ] has at least one leaf  @xmath400 with @xmath515 and  @xmath516 , and @xmath52 contains edges  @xmath517 and @xmath518 .",
    "now consider every vertex  @xmath519 .",
    "then , edge  @xmath517 crosses edge  @xmath520 , since @xmath515 and @xmath521 .",
    "the graph  @xmath52 contains edges  @xmath514 and @xmath522 .",
    "thus , the vertex sets  @xmath523 and @xmath524 both form a star in  @xmath52 .",
    "we now compare the widths of @xmath501 $ ] and @xmath502 $ ] with the widths of the original stars @xmath432 $ ] and @xmath466 $ ] .    since @xmath525 , @xmath526 .",
    "obviously , @xmath527 .",
    "we can thus construct an @xmath7-star partition @xmath528 with @xmath508 , i.e. with strictly smaller score .",
    "thus , no pair of stars in the @xmath7-star partition @xmath96 may be in configuration  ii .",
    "[ [ configurationiii . ] ] configuration  iii .",
    "+ + + + + + + + + + + + + + + + + +    let @xmath473 be two stars of @xmath96 in configuration  iii .",
    "let  @xmath529 and @xmath530 and assume without loss of generality that  @xmath479 .",
    "then , @xmath458 .",
    "thus , all edges of @xmath432 $ ] cross with all edges of @xmath466 $ ] .",
    "hence , there exists an edge @xmath531 for each leaf @xmath60 of @xmath466 $ ] , and an edge @xmath532 for each leaf @xmath59 of @xmath432 $ ] . defining @xmath533 and  @xmath534",
    ", we thus have two stars @xmath501 $ ] and @xmath502 $ ] with the same width as @xmath432 $ ] and @xmath466 $ ] respectively .",
    "hence , the @xmath7-star partition @xmath507 has the same width as @xmath96 .",
    "we now show that @xmath535 .",
    "we write @xmath536 ( resp .",
    "@xmath537 , @xmath538 , @xmath539 ) for the _ branches _ of the corresponding star , that is , for the set of edges of @xmath432 $ ] ( resp .",
    "@xmath466 $ ] , @xmath501 $ ] , @xmath502 $ ] ) , and @xmath540 ( resp .",
    "@xmath541 ) for the set of edges in @xmath542 $ ] for any @xmath543 ( resp .",
    "@xmath544 ) . note that by definition of @xmath366 , @xmath545 , we thus simply denote this set by @xmath546 .",
    "we write  @xmath547 ( resp .",
    "@xmath548 ) for the number of crossings between branches of  @xmath536 and  @xmath537 ( resp . @xmath538 and @xmath539 ) , @xmath549 ( resp .",
    "@xmath550 ) for the number of crossings between a branch in  @xmath551 ( resp .",
    "@xmath552 ) and an edge in @xmath546 , and @xmath553 for the number of crossings between two edges in @xmath546 . note that @xmath554 and that @xmath555 .",
    "it is easy to see that @xmath556 ( @xmath420 and @xmath424 form non - crossing stars ) , and  @xmath557 ( actually , @xmath558 ) .",
    "let  @xmath559 ( resp .",
    "@xmath560 ) be the  @xmath294-th leaf of  @xmath143 ( resp .",
    "@xmath159 ) by the order @xmath123 . then , by [ prop : multiple - crossings ] , any edge in @xmath546 crossing one or two edges among  @xmath561 also crosses at least as many edges among  @xmath562 .",
    "summing over all branches and all crossing edges , we obtain @xmath563 .",
    "thus , overall , we indeed have @xmath535 .",
    "finally , we have constructed an @xmath7-star partition with the same width but fewer crossings , that is , with strictly smaller score .",
    "thus , no pair of stars in the  @xmath7-star partition @xmath96 may be in configuration  iii .",
    "[ [ configurationiv . ] ] configuration  iv .",
    "+ + + + + + + + + + + + + + + + +    let @xmath473 be two stars of @xmath96 in configuration  iv .",
    "without loss of generality , we assume that @xmath564 and @xmath565 .",
    "we moreover assume that @xmath143 and @xmath159 are chosen so that the number of elements between @xmath433 and @xmath566 , written @xmath567 , is minimal among all pairs in configuration  iv .",
    "the configuration is depicted in more detail in [ fig : configiv ] ( left ) .    ,",
    "2    = [ circle , fill = black!30 , inner sep=2pt ] = [ circle , draw = black!80 , fill = black!30 , inner sep=2pt , line width=1pt , align = center ] = [ center ] = [ draw = black , line width=1pt ] = [ draw = black!80!red , line width=1pt ] = [ oldedge ] = [ draw = black!80!red , line width=0.6pt , dotted ]    ( u-1 ) at ( 0 , , ) ; in 2,3 ( u- ) at ( 1 , , ) ; in 4,5 ( u- ) at ( 1.2 , , ) ;    \\(c ) at ( [ shift=(0,)]u-1 ) @xmath463 ; ( lm ) at ( [ shift=(-0.1,)]u-2 ) @xmath141 ; ( rm ) at ( [ shift=(0.1,)]u-5 ) @xmath142 ; ( lm.south west )  ( rm.south east ) ;    ( v-1 ) at ( 1,0 ) ; in 2,3,4,5 ( v- ) at ( 1.2,0 ) ;    \\(c ) at ( [ shift=(0,-)]v-1 ) @xmath568 ; ( lm ) at ( [ shift=(-0.1,-)]v-2 ) @xmath569 ; ( rm ) at ( [ shift=(0.1,-)]v-5 ) @xmath566 ; ( lm.north west )  ( rm.north east ) ;    in 2,3,4,5 ( u-1 )  ( v- ) ; in 2,3,4,5 ( u- )  ( v-1 ) ;    ( u-1 ) at ( 0 , , ) ; in 2,3 ( u- ) at ( 1 , , ) ; in 4,5 ( u- ) at ( 1.2 , , ) ;    ( cp ) at ( [ shift=(0,)]u-1 ) @xmath570 ; ( lmp ) at ( [ shift=(-0.1,)]u-2 ) @xmath571 ; ( rmp ) at ( [ shift=(0.1 , ) ] u-5 ) @xmath572 ; ( lmp.south west) ( rmp.south east ) ; ( v-5 ) at ( 6,0 ) ; in 1,2,3,4 ( v- ) at ( 1.2,0 ) ;    ( cp ) at ( [ shift=(0,-)]v-5 ) @xmath573 ; ( lmp ) at ( [ shift=(-0.1,-)]v-1 ) @xmath574 ; ( rmp ) at ( [ shift=(0.1,-)]v-4 ) @xmath575 ; ( lmp.north west) ( rmp.north east ) ; in 1,2,3,4 ( u-1 )  ( v- ) ; in 2,3,4,5 ( u- )  ( v-5 ) ;    we first show that @xmath576 , which means that no vertex exists between @xmath433 and  @xmath566 , except for the @xmath577 other leaves of @xmath159 .",
    "suppose towards a contradiction that there is a vertex  @xmath578 such that @xmath579 .",
    "assume first that @xmath248 is the center of a star @xmath501 $ ] with  @xmath580 .",
    "thus , @xmath581 since @xmath143 and @xmath420 can not be in configuration  i or  iii .",
    "also , we have @xmath582 since otherwise @xmath583 and @xmath159 and @xmath420 would be in configuration  ii .",
    "hence , @xmath420 and @xmath159 are in configuration  iv ( with @xmath584 , @xmath585 ) , and @xmath586 , which is a contradiction .",
    "now assume that @xmath248 is a leaf of a star @xmath502 $ ] with @xmath587 .",
    "first compare @xmath159 and @xmath424 : @xmath588 as otherwise @xmath159 and @xmath424 would be in configuration  i. using @xmath589 , it follows that @xmath590 .",
    "this implies that @xmath591 as otherwise @xmath424 and @xmath159 would be in configuration  iii .",
    "we now compare @xmath143 and @xmath424 . by the above",
    ", we have @xmath592 .",
    "also , @xmath593 as otherwise @xmath424 and @xmath143 would be in configuration  ii .",
    "using @xmath594 , we thus have @xmath595 , which implies that @xmath143 and @xmath424 are in configuration  iv with @xmath596 , which is a contradiction .",
    "overall , no other vertex than the leaves of @xmath159 may exist between @xmath433 and @xmath566 .",
    "let @xmath597 and @xmath598 .",
    "first observe that  @xmath52 contains the edge  @xmath599 since there is an edge in @xmath432 $ ] and an edge in  @xmath466 $ ] crossing each other .",
    "hence , @xmath600 forms a star .",
    "now , consider any vertex  @xmath601 .",
    "the edge  @xmath602 crosses edge  @xmath603 and therefore implies by definition that  @xmath52 contains the edge  @xmath604 .",
    "thus , @xmath605 forms a star , see [ fig : configiv ] ( right ) . also , @xmath420 and @xmath424 are non - crossing ( @xmath420 is completely to the right of  @xmath424 ) .",
    "we now compare their widths with the original stars  @xmath432 $ ] and @xmath466 $ ] . obviously , @xmath606 .",
    "since @xmath607 , it follows that @xmath608 .",
    "hence , the @xmath7-star partition @xmath507 has the same width as @xmath96 .",
    "since the width did not change , we need to show that @xmath535 .",
    "we introduce the same notations as in configuration  iii : let @xmath536 ( resp .",
    "@xmath537 , @xmath538 , @xmath539 ) be the set of branches of the corresponding star , that is , the set of edges in @xmath432 $ ] ( resp .",
    "@xmath466 $ ] , @xmath501 $ ] , @xmath502 $ ] ) , and let @xmath540 ( resp .",
    "@xmath541 ) be the set of edges in  @xmath542 $ ] for any @xmath168 ( resp .",
    "@xmath609 ) . note that by definition of @xmath366 , @xmath545 , and we thus simply denote this set by  @xmath546 .",
    "further , let @xmath547 ( resp .",
    "@xmath548 ) be the number of crossings between branches of @xmath536 and @xmath537 ( resp . @xmath538 and @xmath539 ) ,",
    "let @xmath549 ( resp .",
    "@xmath550 ) be the number of crossings between a branch in @xmath551 ( resp .",
    "@xmath610 ) and an edge in @xmath546 , and let @xmath553 be the number of crossings between two edges in @xmath546 . note that @xmath611 and that @xmath612 .",
    "it is easy to see that @xmath613 ( @xmath420 and @xmath424 form non - crossing stars ) , and @xmath557 ( actually , @xmath558 ) .",
    "we now show that @xmath614 .",
    "first , remember that no edge in @xmath546 has an endpoint between @xmath433 and @xmath566 .",
    "we consider the branches in @xmath552 and give for each a unique edge in @xmath615 crossing the same edges of @xmath546 . for any leaf @xmath59 of @xmath420 ,",
    "any @xmath616 crossing @xmath617 must also cross @xmath618 .",
    "for the leftmost branch of @xmath424 , any  @xmath616 crossing @xmath619 must also cross @xmath620 . for any other branch @xmath621 of @xmath424 ,",
    "any  @xmath616 must also cross the same branch @xmath622 of @xmath424 .",
    "overall , we indeed have  @xmath623 , which implies @xmath535 .",
    "finally , we have constructed an @xmath7-star partition with at most the same width but fewer crossings , i.e. with strictly smaller score .",
    "thus no pair of stars of the  @xmath7-star partition @xmath96 may be in configuration  iv .",
    "since @xmath96 has minimum score , for any @xmath624 , @xmath432 $ ] and @xmath466 $ ] must be either interleaving or non - crossing .",
    "any star interleaving with @xmath432 $ ] must contain @xmath625 in its scope .",
    "if there exist at least two such stars in @xmath96 , then their scopes intersect , and they are in configuration  i , which is impossible as proven before .",
    "let @xmath138 denote a star partitioninstance , where @xmath124 is a bipartite permutation graph .",
    "furthermore , let @xmath626 and  @xmath627 such that @xmath628 ( resp .",
    "@xmath629 ) implies @xmath630 for some fixed strong ordering @xmath123 .",
    "we describe a dynamic programming algorithm that finds a good @xmath7-star partition  @xmath96 .",
    "the idea is to use the fact that a star from  @xmath96 is either interleaving with exactly one other star from  @xmath96 or it does not cross with any other star from  @xmath96 ( see and ) . in both cases , the part of the graph that lies consecutively left to the star ( resp .  the two interleaving stars ) with respect to the strong ordering must have an @xmath7-star partition by its own .",
    "this is clearly also true for the part of the graph that lies consecutively right , but we do not need this for the proof .    informally , an entry @xmath631 of our binary dynamic programming table  @xmath632 is true if and only if @xmath59  stars with centers from  @xmath126 and @xmath60  stars with centers from  @xmath128 can `` consecutively cover '' the correspondingly large part of the graph from the left side of the strong ordering .",
    "formally , the binary dynamic programming table  @xmath632 is defined as follows : @xmath633,s ) \\in { \\textsc{star partition}\\xspace}).\\ ] ] initialize the table  @xmath632 by :",
    "@xmath634\\text { contains an { \\ensuremath{s}-star\\xspace}})\\text{,}\\\\      t(1,0)&= ( g[\\{u_1,w_1,w_2,\\dots , w_{s}\\}]\\text { contains an { \\ensuremath{s}-star\\xspace}})\\text { , and}\\\\      t(1,1)&= ( g[\\{u_1,u_2,\\dots , u_{s+1},w_1,w_2,\\dots , w_{s+1}\\}]\\text {        contains disjoint { \\ensuremath{s}-stars\\xspace}})\\text{. }    \\end{aligned}\\ ] ] update the table  @xmath632 for all @xmath635 and @xmath636 by : @xmath637\\\\      & \\text{contains an { \\ensuremath{s}-star\\xspace } } ) \\wedge t(x , y-1)\\big ) \\tag{a}\\\\      & \\vee \\big((g[\\{u_{(x-1)+s \\cdot y+1 } , w_{y+s \\cdot ( x-1)+1 } ,      w_{y+s \\cdot ( x-1)+2 } , \\dots , w_{y+s \\cdot ( x-1)+s}\\}])\\\\      & \\text{contains an { \\ensuremath{s}-star\\xspace } } ) \\wedge t(x-1,y)\\big ) \\tag{b}\\\\      & \\vee \\big((g[\\{u_{(x-1)+s \\cdot ( y-1)+1 } , u_{(x-1)+s \\cdot        ( y-1)+2 } , \\dots , u_{(x-1)+s \\cdot ( y-1)+s+1},\\\\ & w_{(y-1)+s        \\cdot ( x-1)+1 } ,      w_{(y-1)+s \\cdot ( x-1)+2 } , \\dots , w_{(y-1)+s \\cdot ( x-1)+s+1},\\}]\\\\      & \\text{contains an { \\ensuremath{s}-star\\xspace } } ) \\wedge t(x-1,y-1)\\big ) .",
    "\\tag{c }    \\end{aligned}\\ ] ] finally , @xmath638 is true if and only if there is an @xmath7-star partition with minimum score , and hence , if and only if there is an @xmath7-star partition .",
    "concerning the running time , first , a strong ordering of the vertices can be computed in linear time  @xcite .",
    "second , the table in the dynamic program have @xmath639 table entries and initialization as well as updating works in @xmath640 time . hence , the total running time is @xmath641 .    concerning the correctness of the algorithm ,",
    "consider an @xmath7-star partition  @xmath366 for @xmath642 , @xmath643 $ ] with minimum score .",
    "now there are three simple cases :    [ [ casea . ] ] case  ( a ) .",
    "+ + + + + + + + +    the rightmost vertex of @xmath175 in  @xmath128 is a center of a non - crossing star in  @xmath366 and , hence , @xmath644 $ ] has an @xmath7-star partition .    [ [ caseb . ] ] case  ( b ) .",
    "+ + + + + + + + +    the rightmost vertex of @xmath175 in  @xmath126 is a center of a non - crossing star in  @xmath366 and , hence , @xmath645 $ ] has an @xmath7-star partition .    [",
    "[ casec . ] ] case  ( c ) .",
    "+ + + + + + + + +    the rightmost vertex of @xmath175 in  @xmath126 and @xmath175s rightmost vertex in  @xmath128 are leaves of two interleaving stars . due to",
    ", none of the other stars from  @xmath366 is crossing these two stars .",
    "it follows that @xmath646 $ ] has an @xmath7-star partition .",
    "note that the rightmost vertex of @xmath175 in  @xmath126 can only be a leaf of a non - crossing star in  @xmath366 if the rightmost vertex of @xmath175 in  @xmath128 is the center and vice versa . otherwise , the corresponding star is clearly not non - crossing .",
    "hence , these cases are already covered by  @xmath647 and  @xmath648 . furthermore",
    ", neither the rightmost vertex of @xmath175 in  @xmath126 nor in  @xmath128 can be a center of an interleaving star from  @xmath366 , because both are rightmost with respect to the strong ordering and , thus , interleaving is impossible .",
    "thus we considered all cases and the update process is correct .",
    "first , note that the correctness of is proven by , which enumerates all possible cases .",
    "now , for the correctness of , it remains to show that , for a graph  @xmath175 obtained using from a planar graph  @xmath52 of maximum degree three , @xmath175 has a @xmath11-partition if and only if @xmath52  has .",
    "then , follows from the np - hardness of @xmath11-partition on planar graphs of maximum degree three .",
    "it remains to show that @xmath52  has a @xmath11-partition if and only if @xmath175  has . by ,",
    "it is sufficient to verify that every edge @xmath649 in  @xmath52 is replaced by a path  @xmath650 between  @xmath651  and  @xmath180 in  @xmath175 whose number of inner vertices is divisible by three . to this end",
    ", we partition the path  @xmath650 into two parts : one part consists of the subpaths  @xmath652 of  @xmath650 that lie on @xmath653 and  @xmath179 , respectively .",
    "note that each of @xmath654 and @xmath655 might consist only of one vertex , as seen for the path from  @xmath656 to  @xmath657 in .",
    "the other part is a path  @xmath658 that connects @xmath654 to  @xmath655 .",
    "we consider @xmath658 not to contain the vertices of  @xmath654 or  @xmath655 .",
    "hence , @xmath658 contains no vertices of any horizontal paths .",
    "the number of _ inner _ vertices of  @xmath650 shared with the horizontal paths  @xmath654 and  @xmath655 is divisible by three ( it is possibly zero ) since all coordinates that start or end paths are divisible by three ( in fact , by six ) .",
    "herein , note that we do not count the vertices  @xmath651 and  @xmath180 lying on  @xmath654 or  @xmath655 , respectively .",
    "moreover , the number of vertices on  @xmath658 is also divisible by three : the number of vertices on a strictly vertical path  @xmath659 connecting @xmath654 with @xmath655 would leave a remainder of two when divided by three ( as the two vertices on @xmath654 and  @xmath655 are not considered to be part of  @xmath659 ) .",
    "however , our added bend of five new vertices makes @xmath658 by four vertices longer compared to  @xmath659 .",
    "hence , the number of vertices on @xmath658 is also divisible by three .",
    "it follows that the total number of inner vertices of  @xmath650 is divisible by three .",
    "a cotree  @xmath660 of a cograph  @xmath1 is a rooted binary tree  @xmath661 , together with a label function @xmath662 that assigns a binary label to each non - leaf vertex of  @xmath632 and the set of leaves @xmath663 corresponds to the original set  @xmath3 of vertices such that :    * a subtree consisting of a single _ leaf node _ corresponds to an induced subgraph with a single vertex . * a subtree rooted at a _ union node _ , labeled  `` @xmath664 '' , corresponds to the disjoint union of the subgraphs defined by the two children of that node . *",
    "a subtree rooted at a _",
    "join node _",
    ", labeled  `` @xmath665 '' , corresponds to the _ join _ of the subgraphs defined by the two children of that node ; that is , the union of the two subgraphs with additional edges between every two vertices corresponding to leaves in different subtrees .",
    "consequently , the subtree rooted at the root  @xmath666 of @xmath660 corresponds to  @xmath52 .",
    "let @xmath667 be a star partitioninstance with  @xmath52 being a cograph .",
    "let @xmath668 denote the cotree of @xmath52 .",
    "furthermore , for any node @xmath669 let @xmath670 $ ] denote the subgraph of @xmath52 that corresponds to the subtree of @xmath632 rooted by @xmath59 .    we define the dynamic programming table  @xmath413 as follows . for every node @xmath669 and every non - negative integer @xmath671 , the table entry @xmath672 $ ] denotes the maximum number of leaves in @xmath670 $ ] that are covered by a center in @xmath670 $ ] when @xmath108 vertices in @xmath670 $ ] are centers .",
    "consequently , @xmath138 is a yes - instance if and only if  @xmath673= ks$ ] .",
    "now , let us describe how to compute  @xmath413 processing the cotree  @xmath632 bottom up .",
    "_ leaf nodes .",
    "_ for a leaf node  @xmath59 , either the only vertex  @xmath176 from  @xmath670 $ ] is a center or not . in both cases no leaf in",
    "@xmath670 $ ] is covered by  @xmath176 .",
    "thus , @xmath674=l[x,1]=0 $ ] and @xmath675=-\\infty$ ] .",
    "_ union nodes .",
    "_ let  @xmath59 be a node labeled with `` @xmath664 '' and let @xmath676 and @xmath677 be its children .",
    "note that there is no edge between a vertex from  @xmath678 $ ] and a vertex from  @xmath679 $ ] , neither in  @xmath670 $ ] nor in any other subgraph of  @xmath52 corresponding to any  @xmath680 , x ' \\in v_t$ ] .",
    "thus , for every leaf  @xmath176 in  @xmath670 $ ] that is covered by a center  @xmath180 from  @xmath670 $ ] , it holds that either both @xmath176 and @xmath180 are in @xmath678 $ ] or both are in @xmath679 $ ] .",
    "hence , it follows @xmath672=\\max_{c_1+c_2=c}(l[x_1,c_1 ] + l[x_2,c_2])$ ] .",
    "_ join nodes .",
    "_ let  @xmath59 be a node labeled with `` @xmath665 '' and let @xmath676 and @xmath677 be its children .",
    "join nodes are more complicated than leaf or union nodes for computing the table entries , because these nodes actually introduce the edges .",
    "however , they always introduce _ all possible _ edges between vertices from @xmath678 $ ] and @xmath679 $ ] which has some nice consequences .",
    "the idea is that the maximum number of leaves in  @xmath670 $ ] that are covered by centers in  @xmath670 $ ] is achieved by maximizing the number of leaves from  @xmath679 $ ] that are covered by centers from  @xmath678 $ ] and vice versa .    to compute  @xmath672 $ ]",
    ", we introduce an auxiliary table  @xmath681 as follows . for every pair  @xmath682 of non - negative integers with  @xmath683",
    ", the table entry @xmath684 $ ] denotes the maximum number of leaves in  @xmath670 $ ] that are covered by a center in  @xmath670 $ ] when @xmath685 vertices in  @xmath678 $ ] are centers and @xmath686 vertices in @xmath679 $ ] are centers . to this end , let @xmath687 , be the number of leaves in the desired @xmath7-star partition being in  @xmath688 $ ] .",
    "( note that in every solution every vertex is either a center or a leaf and a leaf is not necessarily already covered within the current  @xmath670 $ ] . )",
    "moreover , @xmath689)|-c_i$ ] , where @xmath690)$ ] is the set of vertices in @xmath688 $ ] . to compute the auxiliary table  @xmath681",
    ", we consider three cases :    [ [ case-1-c_1-cdot - s - ell_2-wedge - c_2-cdot - s - ell_1 . ] ] case 1 : @xmath691 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this case , we can cover all leaves in @xmath670 $ ] by covering the leaves from @xmath678 $ ] with centers from @xmath679 $ ] and vice versa .",
    "thus , @xmath684=\\ell_1+\\ell_2 $ ] .    [",
    "[ case-2-c_1-cdot - s - le - ell_2-wedge - c_2-cdot - s - le - ell_1 . ] ] case 2 : @xmath692 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this case , we can cover @xmath693 leaves in  @xmath670 $ ] by covering @xmath694 leaves from  @xmath679 $ ] by centers from  @xmath678 $ ] and @xmath695 leaves from  @xmath678 $ ] by centers from  @xmath679 $ ] .",
    "this is obviously the best one can do .",
    "thus , @xmath684=c \\cdot s$ ] .    [ [ case-3-c_1-cdot - s - ell_2-wedge - c_2-cdot - s - le - ell_1-or - c_1-cdot - s - le - ell_2-wedge - c_2-cdot - s - ell_1 . ] ] case 3 : @xmath696 or @xmath697 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to see that also in this case greedily maximizing the number of leaves from @xmath679 $ ] that are covered by centers from @xmath678 $ ] and vice versa is optimal , let @xmath698 , denote the number of leaves from @xmath688 $ ] that are covered by a center from @xmath688 $ ] .",
    "more precisely , assume that @xmath699 and @xmath700 are both greater than zero .",
    "then , repeatedly take one center from @xmath678 $ ] covering a leaf in @xmath679 $ ] and one center from @xmath679 $ ] covering a leaf in @xmath678 $ ] and exchange their leaves until either @xmath699 or @xmath700 is zero .    without loss of generality ,",
    "let @xmath701 and @xmath702 ( if both become zero , we would be in case  2 ) .",
    "note that this corresponds to the case @xmath703the other case works analogously . as @xmath702 and @xmath704",
    ", we can assume that @xmath686 centers from @xmath679 $ ] cover altogether @xmath695 leaves from  @xmath678 $ ] .",
    "furthermore , all  @xmath705 leaves from  @xmath679 $ ] are covered by centers from @xmath678 $ ] . since @xmath706 , the centers from @xmath678 $ ] might additionally cover some number  @xmath707 of leaves from  @xmath678 $ ] , but clearly :    * @xmath707 is at most @xmath708 , the maximum number of leaves that can be covered by @xmath685 centers , * @xmath707 is at most @xmath709 , the maximum number of leaves that are not already covered by centers from @xmath679 $ ] , and * @xmath707 is at most @xmath710 $ ] , the maximum number of leaves from @xmath678 $ ] that can be covered by centers from @xmath678 $ ] . here , the property that a join node introduces all possible edges between",
    "the two subgraphs is crucial , because we can therefore simply cover leaves from  @xmath678 $ ] by centers from  @xmath678 $ ] in an optimal way .",
    "( _ each _ center from @xmath678 $ ] can cover _ each _ leaf from @xmath679 $ ] and vice versa . )",
    "@xmath711=\\\\ &          \\begin{cases }            c_2 s + \\ell_2 + \\max(c_1 s - \\ell_2 , \\ell_1 - c_2 s ,            l[x_1,c_1])&\\text{if $ ( c_1 s > \\ell_2 ) \\wedge ( c_2 s \\le \\ell_1)$}\\\\            c_1 s + \\ell_1 + \\max(c_2 s - \\ell_1 , \\ell_2 - c_1 s ,            l[x_2,c_2 ] ) & \\text{if $ ( c_1 s \\le \\ell_2 ) \\wedge ( c_2 s >              \\ell_1)$ }          \\end{cases}.        \\end{aligned}\\ ] ]    finally , we compute  @xmath672 $ ] by considering the auxiliary table , that is , @xmath712=\\max_{c_1+c_2=c}(a[c_1,c_2]).\\ ] ]    the @xmath182 running time of this algorithm can be analyzed as follows : computing the cotree representation runs in linear time  @xcite .",
    "the table size of the dynamic program is bounded by @xmath713there are @xmath178  nodes in the cotree and @xmath714 . since @xmath690)$ ] corresponds to the set of leaf nodes of the subtree of  @xmath632 rooted in  @xmath559 , the sizes @xmath715)|$ ] can be precomputed in linear time for each node  @xmath559 of the cotree .",
    "hence , computing a table entry costs at most @xmath178 .",
    "we show that it is -hard to find an @xmath7-star partition of a split graph via reduction from exact cover by @xmath7-sets@xcite ( illustrated in ) .",
    "# exact cover by @xmath7-sets_#exact cover by @xmath7-sets : _",
    "exact cover by @xmath7-sets    a finite set @xmath126 and a collection @xmath716 of subsets of @xmath126 of size @xmath7 .",
    "is there a subcollection @xmath717 that partitions @xmath126 ( each element of  @xmath126 is contained in exactly one subset in @xmath718 ) ?    given @xmath719 with @xmath720 and @xmath721 where @xmath722 , we construct a split graph  @xmath723 as follows : the vertex set consists of a clique  @xmath724 and an independent set  @xmath725 .",
    "the clique  @xmath724 contains a vertex for each subset in  @xmath716 , the independent set  @xmath725 contains a vertex for each element of  @xmath126 . for each  @xmath726",
    "the corresponding vertex in  @xmath724 is adjacent to the  @xmath7 vertices in  @xmath725 that correspond to the elements of  @xmath727 .",
    "moreover , let  @xmath728 such that  @xmath729 .",
    "we add  @xmath279 dummy vertices to both  @xmath724 and  @xmath725 and connect every dummy vertex in  @xmath724 with all other vertices in  @xmath724 and uniquely with one of the dummy vertices in  @xmath725 . finally , we add one more dummy vertex to  @xmath724 and another  @xmath730 dummy vertices to  @xmath725 .",
    "this last dummy in  @xmath724 is connected to all other vertices in  @xmath724 and to each of the  @xmath730 dummies in  @xmath725 .",
    "note that each dummy vertex in  @xmath725 has degree one .",
    "the above construction can be carried out in polynomial time .",
    "now , let @xmath717 be a partition of  @xmath126 .",
    "then we can partition  @xmath52 into stars of size  @xmath7 in the following way : for each  @xmath731 , we choose the star containing the vertex from  @xmath724 corresponding to  @xmath727 and the vertices in  @xmath725 corresponding to the elements of  @xmath727 .",
    "moreover , each of the dummy vertices in  @xmath725 is put together with its neighboring dummy in  @xmath724 and filled up to a star of size  @xmath7 with the remaining non - dummy vertices in  @xmath724 corresponding to the subsets in  @xmath732 .",
    "indeed , the values of  @xmath279 and  @xmath666 are chosen in a way that guarantees that this is possible .",
    "since  @xmath718 partitions  @xmath126 , we get a valid @xmath7-star partition of  @xmath52 .",
    "conversely , in any @xmath7-star partition of  @xmath52 , all dummy vertices in  @xmath725 are grouped together into an @xmath7-star with their one dummy neighbor in  @xmath724 and the respective number of other non - dummy vertices from  @xmath724 .",
    "the values of  @xmath279 and  @xmath666 are such that there are exactly  @xmath0 non - dummy vertices left in  @xmath724 together with the  @xmath733 vertices in  @xmath725 corresponding to  @xmath126 .",
    "it follows that each remaining non - dummy vertex in  @xmath724 forms a star with its  @xmath7 neighbors in  @xmath725 , which yields a partition of  @xmath126 .",
    ", 2    = [ circle , fill = black!30 , inner sep=2pt ] = [ draw = black , line width=1pt ] ( i-0 ) at ( 10 , , ) @xmath725 ; ( u-0 ) at ( .5 , , ) @xmath126 ; in 1,2, ... ,9 ( i- ) at ( , , ) ;    ( c-0 ) at ( 9,0 ) @xmath724 ; ( s-0 ) at ( 1.5,0 ) @xmath716 ; in 1,2, ... ,7 ( c- ) at ( + 1,0 ) ;    ( c-3 )  ( i-1 ) ; ( c-3 )  ( i-2 ) ; ( c-3 )  ( i-4 ) ; ( c-4 )  ( i-2 ) ; ( c-4 )  ( i-3 ) ; ( c-4 )  ( i-5 ) ; ( c-5 )  ( i-3 ) ; ( c-5 )  ( i-5 ) ; ( c-5 )  ( i-6 ) ; ( c-6 )  ( i-7 ) ; ( c-6 ) to[out=160 , in=20 ] ( c-4 ) ; ( c-6 )  ( c-5 ) ; ( c-7 )  ( i-8 ) ; ( c-7 ) ",
    "( i-9 ) ; ( c-7 ) to[out=195 , in=345 ] ( c-3 ) ; ( c-1 ) ",
    "( i-1 ) ; ( c-1 )  ( i-2 ) ; ( c-1 )  ( i-3 ) ; ( c-2 )  ( i-4 ) ; ( c-2 )  ( i-5 ) ; ( c-2 )  ( i-6 ) ;    background ( c ) [ draw = none , rounded corners , fill = gray!10,fit=(c-0 ) ( c-1 ) ] ; ( i ) [ draw = none , rounded corners , fill = gray!10,fit=(i-0 ) ( i-1 ) ] ; ( u ) [ draw = none , rounded corners , fill = gray!20,fit=(u-0 ) ( i-1 ) ( i-6 ) ] ; ( s ) [ draw = none , rounded corners , fill = gray!20,fit=(s-0 ) ( c-1 ) ( c-5 ) ] ;      let @xmath734 be a split graph where @xmath735 is an induced clique , @xmath725  is an independent set , and @xmath736 forms a bipartite graph over  @xmath724 and  @xmath725 .",
    "note that if @xmath737 is not a multiple of @xmath738 , or if @xmath739 , then @xmath52 has trivially no @xmath11-partition .",
    "we thus assume that @xmath737 ( and hence @xmath740 ) is a multiple of @xmath738 , and that @xmath741 .",
    "first , we show how a @xmath11-partition of a split graph is related to a specific factor of the bipartite graph @xmath415 .",
    "assume that  @xmath52 admits a partition into @xmath11s and let @xmath80 denote the set of edges in the partition .",
    "there are three types of @xmath11s :    a.   [ 3clique - vertices ] a @xmath11 consisting of three clique vertices , b.   [ 2clique - vertices+1independent - vertex ] a @xmath11 consisting of two clique vertices and one independent set vertex , and c.   [ 1clique - vertex+2independent - vertices ] a @xmath11 consisting of one clique vertex and two independent set vertices .",
    "thus , for each  @xmath11 , we can assume that the edges are selected so that exactly one edge is incident to the independent set vertex . due to this observation",
    ", any @xmath11-partition can be edited until each independent set vertex is incident with exactly one edge in  @xmath80 .",
    "a factor  @xmath742 of the bipartite graph  @xmath415 is _ feasible _ if , in @xmath742 , all independent set vertices have degree  1 , every clique vertex has degree  0 , 1 or  2 , and there are at least as many degree - zero clique vertices as degree - one clique vertices .",
    "[ prop : multiple - of-3 ] in any feasible factor @xmath742 of @xmath415 , the difference between the number of degree - zero clique vertices and degree - one clique vertices is a multiple of 3 .",
    "write @xmath743 ( resp .",
    "@xmath744 , @xmath745 ) for the number of degree - zero ( resp .",
    "degree-1 , degree-2 ) clique vertices in @xmath742 .",
    "we have @xmath746 and @xmath747 ( each vertex in @xmath725 has degree one ) .",
    "then @xmath748 , which is a multiple of 3 since the number of vertices in @xmath52 is a multiple of 3 itself .",
    "[ lem : p3-partition==factor+contraint ] @xmath52 admits a partition into @xmath11s if and only if there exists a feasible factor of @xmath415 .",
    "assume that there is a partition of  @xmath52 into @xmath11s with edge set @xmath80 such that each vertex in  @xmath725 is incident with exactly one edge in @xmath80 .",
    "let  @xmath749 be the subset of edges of the partition which connect vertices from @xmath724 with vertices from  @xmath725 , and @xmath750 be the corresponding factor of @xmath415 .",
    "each vertex in  @xmath725 has degree one in  @xmath742 ( since it is adjacent to exactly one edge in @xmath80 , which is also in @xmath751 ) .",
    "each vertex  @xmath176 in  @xmath724 belongs to a @xmath11 from @xmath80 .",
    "depending on the type of this @xmath11 , @xmath176 can have degree zero ( type  ( [ 3clique - vertices ] ) or ( [ 2clique - vertices+1independent - vertex ] ) ) , one ( type  ( [ 2clique - vertices+1independent - vertex ] ) ) or two ( type  ( [ 1clique - vertex+2independent - vertices ] ) ) .",
    "let  @xmath752 ( resp .",
    "@xmath753 ) denote the number of  @xmath11s of type  ( [ 3clique - vertices ] ) ( resp .",
    "( [ 2clique - vertices+1independent - vertex ] ) ) .",
    "then , in  @xmath724 , the number of degree - zero vertices is  @xmath754 , and the number of degree - one vertices is @xmath753 , hence the difference is positive .",
    "thus , @xmath742 is feasible .",
    "conversely , let @xmath755 be a feasible factor of @xmath415 .",
    "then we partition  @xmath52 into  @xmath756 as follows . for each degree - one vertex  @xmath176 in  @xmath724 , add  @xmath757 to  @xmath80 where  @xmath400 is its neighbor in  @xmath725 and  @xmath177 is an arbitrary degree - zero clique vertex ( there are enough such vertices ) .",
    "the number of remaining degree - zero vertices in  @xmath724 is thus a multiple of  @xmath738 : these vertices are simply grouped up in arbitrary triples .",
    "overall , due to the degree constraints , @xmath80 is a  @xmath11-partition of  @xmath52 .    with the above lemma",
    ", we can reduce our @xmath11-partition problem to a special graph factor problem : we add an additional vertex  @xmath248 to  @xmath415 , connect it to all vertices in  @xmath724 .",
    "we call this graph  @xmath758 .",
    "now , the following lemma states without proof that  @xmath758 can be used to find a feasible factor for  @xmath415 .",
    "[ lem : b = bfac ] the bipartite graph  @xmath415 admits a feasible factor if and only if graph  @xmath758 has a factor satisfying the following degree constraints : every vertex in  @xmath725 has degree one , every vertex in  @xmath724 has degree zero or two , and vertex  @xmath248 has degree at most  @xmath759 .    depicts an example factor for the graph  @xmath758 fulfilling the degree constraints of .",
    "this graph factor problem can be solved in polynomial time @xcite .",
    "using a gadget introduced by @xcite , we can even reduce our problem to a perfect matching problem . to this end",
    ", we will prove an even stronger result than  [ lem : b = bfac ] .",
    "we introduce integers @xmath279 and @xmath666 such that  @xmath760 ( with @xmath761 and  @xmath762 ) .",
    "we start with the following property about the number of degree - one vertices that are actually possible .",
    "[ prop : feasible_factor+no_zero>=no_one->degree_constraints ] let @xmath763 be a feasible factor of  @xmath415 . then , the number of degree - one vertices in  @xmath724 is  @xmath764 for some  @xmath765 .",
    "let @xmath743 , @xmath744 , and @xmath745 be the number of degree - zero , degree - one , and degree - two clique vertices in  @xmath742 .",
    "then @xmath766 ( all clique vertices have degree 0 , 1 or 2 ) , @xmath767 ( vertices in  @xmath725 have degree 1 ) , and @xmath768 is a positive multiple of  3 ( by [ prop : multiple - of-3 ] ) .",
    "let @xmath769 with @xmath770 .",
    "this can be rewritten as @xmath771 and @xmath772 , which implies , using the above equations , that @xmath773 .",
    "thus , @xmath774 , which completes the proof of the property .    in accordance with [ lem :",
    "b = bfac ] , we get the following .    [",
    "lem : b = b ] the bipartite graph @xmath415 admits a feasible factor if and only if graph  @xmath758 has a factor satisfying the following degree constraints : every vertex in  @xmath725 has degree one , every vertex in  @xmath724 has degree zero or two , and vertex  @xmath248 has degree at most  @xmath759 . moreover , in such a case , the degree of @xmath248 is @xmath764 with @xmath765 .",
    "assume that @xmath415 admits a feasible factor  @xmath755 .",
    "then @xmath775 is a factor of @xmath758 . for each degree - one vertex  @xmath776 , we add edge  @xmath777 to factor  @xmath778 . by [ prop : feasible_factor+no_zero>=no_one->degree_constraints ] , we thus add @xmath764 edges , with @xmath779 .",
    "it is easy to verify that the degree constraints stated in the lemma are satisfied .",
    "conversely , let @xmath778 be a factor for graph  @xmath758 where every independent set vertex have degree one , every clique vertex have degree zero or two , and vertex  @xmath248 has degree at most  @xmath780 . if we delete from @xmath778 all edges incident to vertex  @xmath248 , then we obtain a feasible factor  @xmath742 for @xmath415 where the number @xmath744 of degree - one clique vertices is at most the original degree of @xmath248 , that is , @xmath781 .",
    "since each independent set vertex still has degree one , the number of degree - two clique vertices is @xmath782 , and the number of degree - zero clique vertices is @xmath783 .",
    "the difference between the number of degree-1 and degree-0 vertices is @xmath784 , which is positive .",
    "now we construct a graph  @xmath785 from @xmath758 for which we are searching for a perfect matching .",
    "the idea is to replace every clique vertex  @xmath176 by a gadget which can simulate the constraint that @xmath176 has degree zero or two .",
    "also , we have to replace vertex  @xmath248 by a gadget to simulate its degree constraint .",
    "[ cons : graph_for_matching ] let @xmath786 ( number of edges between @xmath724 and @xmath725 in the original split graph ) and @xmath787 be the degree of a clique vertex  @xmath176 in @xmath758 . note that due to the edges going to vertex  @xmath248 , we have @xmath788 .",
    "moreover , we can safely assume that @xmath789 and @xmath790 .",
    "for each independent set vertex  @xmath791 , add to  @xmath785 a vertex  @xmath792 .",
    "we now consider each clique vertex  @xmath176 .",
    "for each edge  @xmath152 in  @xmath758 which contains  @xmath176 add a vertex  @xmath793 to  @xmath785 , and denote the set of these vertices as @xmath794 .",
    "add @xmath787 vertices  @xmath795 to  @xmath785 , and denote the set of these vertices as @xmath796 .",
    "then @xmath797 .",
    "consider now vertex  @xmath248 .",
    "for each edge  @xmath798 in @xmath758 , add a vertex  @xmath799 to  @xmath785 , and denote the set of these vertices as @xmath800 . finally , add vertices  @xmath801 to  @xmath785 and denote the set of these vertices as @xmath802 .",
    "thus , @xmath803 and @xmath804 . in total",
    ", @xmath785 has @xmath805 vertices .",
    "now we are ready to add edges to @xmath785 .",
    "consider first each edge  @xmath806 ( resp .",
    "@xmath807 ) in @xmath758 which connects an independent set vertex  @xmath400 ( resp .",
    "vertex  @xmath248 ) and a clique vertex  @xmath176 .",
    "add edge  @xmath808 ( resp .",
    "@xmath809 ) to @xmath785 , and edges  @xmath810 . now ,",
    "for each edge  @xmath807 in @xmath758 and each  @xmath811 , add edge  @xmath812 to @xmath785 .",
    "finally , for each  @xmath776 add edge @xmath813 , and for each  @xmath814 , add edge  @xmath815 to @xmath785 .",
    "the overall number of edges in  @xmath785 is @xmath816 .",
    "this finishes the construction .",
    "now , we show how the constructed graph  @xmath785 can be used to find a factor for  @xmath758 satisfying the specific degree constraint as stated in [ lem : b = b ] .",
    "[ lem : bhas_a_factor==b*has_a_matching ] graph  @xmath758 admits a factor @xmath778 satisfying the condition that every vertex in  @xmath725 has degree one , every vertex in  @xmath724 has degree zero or two , and vertex  @xmath248 has degree @xmath764 , for some @xmath817 , if and only if graph  @xmath785 has a perfect matching .",
    "assume that @xmath758 admits a factor  @xmath778 satisfying the above condition .",
    "we show that the following construction yields a perfect matching @xmath818 for @xmath785 .    for each edge  @xmath819 in @xmath778 that connects an independent set vertex  @xmath400 and a clique vertex  @xmath176 , add to @xmath818 edge  @xmath808 . for each edge",
    "@xmath807 in @xmath778 that connects vertex  @xmath248 with a clique vertex  @xmath176 , add to @xmath818 edge  @xmath820 .    for each vertex  @xmath821 ,",
    "let @xmath822 be the set of vertices which are not yet matched by  @xmath818 .",
    "we now need to cover all vertices in @xmath823 or @xmath824 for any @xmath821 .",
    "consider first a clique vertex  @xmath176 . depending on whether @xmath176 has degree zero or two in @xmath778 ,",
    "@xmath825 is either zero or two , and @xmath826 .",
    "moreover , all edges between vertices @xmath827 and @xmath824 are @xmath785 . if @xmath828 , then add edges to match vertices of @xmath823 and of @xmath824 ; otherwise , @xmath829 : add edge  @xmath830 to  @xmath818 , and add edges to match vertices of @xmath823 and of @xmath831 .",
    "analogously , let @xmath832 be the set of vertices in @xmath800 which are not yet matched by @xmath818 .",
    "note that depending on the degree of @xmath176 in @xmath742 , @xmath833 is @xmath764 where @xmath834 . since @xmath835",
    ", we have @xmath836 .",
    "moreover , all edges between vertices @xmath800 and @xmath802 are in @xmath785 .",
    "add edges @xmath837 to @xmath818 , and add edges to match vertices of @xmath838 and of @xmath839 .",
    "it is easy to verify that @xmath818 is a perfect matching .",
    "conversely , let @xmath818 be a perfect matching for @xmath785 .",
    "we construct a factor  @xmath840 for @xmath758 . for each edge",
    "@xmath841 which connects @xmath792 ( where @xmath400 is an independent set vertex ) with a vertex  @xmath793 corresponding to the clique vertex  @xmath776 , we add to @xmath842 edge  @xmath843 . for each edge",
    "@xmath844 which connects vertices in  @xmath800 and  @xmath845 , add to @xmath842 edge  @xmath798 .",
    "we show that @xmath778 is a factor for @xmath785 with the property that each independent set vertex  @xmath791 has degree one , each clique vertex  @xmath776 has degree zero or two , and vertex  @xmath248 has degree  @xmath764 , where @xmath846 .",
    "obviously , every independent set vertex  @xmath791 has degree one .",
    "consider a clique vertex  @xmath776 . by the construction of graph  @xmath785 , in order to match all vertices in @xmath824 , either ( i ) every vertex in @xmath824 has to be matched to a vertex in @xmath827 or ( ii ) @xmath847 and @xmath848 are matched together while every vertex in @xmath849 is matched to exactly one vertex in @xmath827 .",
    "this implies that either no vertex or exactly two vertices in @xmath827 are matched to some vertices which are not from @xmath824 .",
    "thus , @xmath176 has either degree zero or degree two in @xmath742 .",
    "analogously , by the construction of graph  @xmath785 , in order to match all vertices in @xmath802 which has size @xmath850 , exactly @xmath294 pairs of vertices in @xmath802 can be left without being matched to any vertex in @xmath800 where @xmath851 .",
    "this implies that exactly @xmath852 vertices from @xmath800 are matched to vertices that are not from @xmath802 .",
    "thus , @xmath248 has degree @xmath764 .",
    "we now have gathered all ingredients to show .",
    "let @xmath853 be a split graph with @xmath854 being the number of edges in @xmath131 .",
    "let @xmath855 be a bipartite graph over @xmath724 and @xmath856 .",
    "let @xmath785 be created from @xmath758 by [ cons : graph_for_matching ] . by [ lem : p3-partition==factor+contraint , prop : feasible_factor+no_zero>=no_one->degree_constraints , lem : bhas_a_factor==b*has_a_matching ] , @xmath52 admits a @xmath11-partition if and only if @xmath785 has a perfect matching . since deciding whether a graph with @xmath650 vertices and @xmath279 edges has",
    "a perfect matching can be done in @xmath857 time using the algorithm of hopcroft and karp  ( * ? ? ?",
    "* theorem  16.4 ) and since @xmath785 has @xmath858 vertices and @xmath859 edges , deciding whether @xmath52 has a @xmath11-partition can be done in @xmath184 time .    = [ circle , fill = black!30 , inner sep=2pt ]    \\(z ) at ( 0-,-1.5 ) @xmath248 ;    ( c-0 ) at ( 0,0 ) @xmath724 ; in 1,2, ... ,6 ( c- ) at ( 0,-0.5 ) ;    ( i-0 ) at ( , 0 ) @xmath725 ; / in 1,2, ... ,6 ( i- ) at ( , -0.5 ) ;    in 1,2,3,4 ( z )  ( c- ) ;    = [ draw = black , line width=1pt ] ( c-3 )  ( i-1 ) ; ( c-3 )  ( i-4 ) ; ( c-4 )  ( i-6 ) ; ( c-5 )  ( i-3 ) ; ( c-6 )  ( i-5 ) ; ( c-1 )  ( i-1 ) ; ( c-1 )  ( i-2 ) ; ( c-2 )  ( i-3 ) ; ( c-2 )  ( i-4 ) ; ( c-5 )  ( i-5 ) ; ( c-6 )  ( i-6 ) ; ( c-5 )  ( z ) ; ( c-6 ) ",
    "( z ) ;    background ( c ) [ draw = none , rounded corners , fill = gray!10,fit=(c-0 ) ( c-6 ) ] ; ( i ) [ draw = none , rounded corners , fill = gray!10,fit=(i-0 ) ( i-6 ) ] ;      we reduce the following problem to @xmath11-partition on chordal graphs .",
    "# 3-dimensional matching  ( 3dm)_#3-dimensional matching  ( 3 dm ) : _",
    "3-dimensional matching  ( 3 dm )    pairwise disjoint sets @xmath860 with @xmath861 and a set of triples  @xmath862 .",
    "does there exist a _",
    "perfect 3-dimensional matching _",
    "@xmath863 , that is , @xmath864 and each element of @xmath865 occurs in exactly one triple of @xmath818 ?",
    "@xcite introduced [ cons : tdm - to - p3planar ] described below ( see also [ fig : gadget_c ] )",
    ". using it as a reduction from the -hard restriction of 3 dm to planar graphs , they proved that @xmath11-partitionrestricted to bipartite planar graphs is -complete  @xcite .",
    "[ cons : tdm - to - p3planar ] let @xmath866 with @xmath861 be an instance of 3 dm . construct a graph  @xmath867 as follows . for each element",
    "@xmath868 , create two vertices  @xmath869 and connect them by an edge  @xmath870 .",
    "denote @xmath871 as an _ element - vertex _ and @xmath872 as a _ pendant - vertex_. for each triple  @xmath873 create three vertices  @xmath874 .",
    "denote these three vertices as _ triple - vertices_. make triple - vertex  @xmath875 adjacent to both @xmath876 and @xmath877 . also make triple - vertex  @xmath876 ( resp .",
    "@xmath875 and @xmath877 ) adjacent to element - vertex  @xmath878 ( resp .",
    "@xmath879 and  @xmath880 ) .",
    "formally , @xmath881 and @xmath882 .",
    "= [ align = center , circle , inner sep=1.2pt , fill = black ] ( n_vr ) @xmath876 ; ( n_vb ) @xmath875 ; ( n_vy ) @xmath877 ;    in r , b , y    at ( @xmath883 ) ( v ) ; ( u ) ;    ( n_u ) @xmath884 ; ( u ) ; ( n_u ) @xmath885 ;    \\(v )  ( u ) ; ( u )  ( u ) ;    ( vr )  ( vb ) ; ( vb )  ( vy ) ;    ( ur )  ( ub )  ( uy ) ; ( vb )  ( ur ) ; ( vb )  ( uy ) ;    plot[smooth ] coordinates ( uy.north west ) ( @xmath886 ) ( @xmath887 ) ( ur.north east ) ;    we extend [ cons : tdm - to - p3planar ] to show the -hardness of @xmath11-partitionrestricted to chordal graphs .",
    "make any two element - vertices adjacent to each other such that the graph induced by all element - vertices is complete .",
    "furthermore , for each triple  @xmath888 add two edges  @xmath889 and @xmath890 to the graph , as illustrated in [ fig : gadget_c ] .",
    "let @xmath52 be the resulting graph .",
    "we first show that @xmath52 is chordal .",
    "consider any size-@xmath891 set  @xmath724 of vertices with  @xmath892 such that the subgraph @xmath893 induced by  @xmath724 contains a simple cycle of length  @xmath891 .",
    "since the pendant - vertices all have degree one , @xmath724 can not contain any pendant - vertex . if  @xmath724 contains a degree - two triple - vertex  @xmath894 ( resp .",
    "@xmath895 ) for some @xmath896 , then  @xmath724 contains both its neighbors :  @xmath897 and  @xmath878 ( resp .",
    "@xmath897 and  @xmath880 ) which are connected , i.e. forming a triangle .",
    "otherwise , if  @xmath724 contains a degree - five triple - vertex  @xmath897 but does not contain  @xmath894 nor  @xmath895 , then  @xmath897 lies , in the cycle , between two element - vertices . since two element - vertices",
    "are always connected , @xmath893  contains a triangle .",
    "finally , if  @xmath724 does not contain any triple - vertex , then it is included in the set of element - vertices , which form a complete graph : again , @xmath893 contains a triangle .",
    "second , we show that @xmath866 has a perfect 3-dimensional matching if and only if @xmath52 can be partitioned into @xmath11s .    for the `` only if '' part , suppose that @xmath898 is a perfect 3-dimensional matching for @xmath866 .",
    "then , the @xmath11s in @xmath899 and those in  @xmath900 indeed partition the graph  @xmath52 .    for the `` if '' part , suppose that @xmath52 has a partition  @xmath80 into @xmath11s .",
    "we first enumerate the possible centers of the @xmath11s .",
    "since each pendant - vertex is only adjacent to its element - vertex , every element - vertex is the center of a @xmath11 that contains a pendant - vertex .",
    "we call such a @xmath11 an _ element-@xmath11_. for each triple  @xmath888 , neither @xmath876 nor @xmath877 can be the center of a @xmath11 since they are adjacent to only one vertex which is not already a center ( namely , @xmath875 ) . thus , any @xmath11 which is not an element-@xmath11 must have vertex  @xmath875 as a center for some @xmath901 : we call such a @xmath11 a _ triple-@xmath11 corresponding to @xmath300_.    consider now any triple @xmath901 .",
    "if there exists a triple-@xmath11 corresponding to  @xmath300 ( i.e. , centered on @xmath875 ) , then the two leaves can only be @xmath876 and @xmath877 ( since @xmath902 is a center ) .",
    "otherwise , each of the three triple - vertices @xmath876 , @xmath875 , and @xmath877 must be a leaf of an element-@xmath11 centered on @xmath878 , @xmath879 , or @xmath880 .",
    "there is actually only one way to match the three triple - vertices to these three element - vertices , that is by using edges @xmath903 , @xmath904 and @xmath905 . as a consequence ,",
    "the leaves of the element-@xmath11 centered on any @xmath871 are @xmath872 and @xmath906 for some triple @xmath300 containing @xmath907 .",
    "we show that the triples with _ no _ corresponding triple-@xmath11 in @xmath80 form a perfect 3-dimensional matching  @xmath898 for @xmath866 .",
    "note that for each element @xmath908 , the element-@xmath11 centered in  @xmath871 uses a triple - vertex  @xmath906 for some triple @xmath300 containing @xmath907 , which means that no triple-@xmath11 in @xmath80 corresponds to  @xmath300 .",
    "hence , @xmath909 and element  @xmath907 is matched by  @xmath300 .",
    "now it remains to show that every element is matched at most once .",
    "suppose for the sake of contradiction that there is an element  @xmath908 which is matched at least twice . to this end , let @xmath906  be the triple - vertex that together with @xmath871 and @xmath910 forms an element-@xmath11 .",
    "thus , @xmath911 .",
    "further , let @xmath912 be another triple in @xmath898 that matches  @xmath907 .",
    "since @xmath912 does not correspond to any @xmath11 in @xmath80 , there is an element-@xmath11 containing a triple - vertex  @xmath913 such that @xmath300 also contains element @xmath907 . but then @xmath913 together with @xmath871 and @xmath910 must also form an element-@xmath11a contradiction .    star"
  ],
  "abstract_text": [
    "<S> the partition of graphs into nice subgraphs is a central algorithmic problem with strong ties to matching theory . </S>",
    "<S> we study the partitioning of undirected graphs into stars , a problem known to be np - complete even for the case of stars on three vertices . </S>",
    "<S> we perform a thorough computational complexity study of the problem on subclasses of perfect graphs and identify several polynomial - time solvable and np - hard cases , for example , on interval graphs , grid graphs , and bipartite permutation graphs . </S>"
  ]
}
{
  "article_text": [
    "collective intelligences ( coins ) are large , sparsely connected recurrent neural networks , whose `` neurons '' are reinforcement learning ( rl ) algorithms .",
    "the distinguishing feature of coins is that their dynamics involves no centralized control , but only the collective effects of the individual neurons each modifying their behavior via their individual rl algorithms .",
    "this restriction holds even though the goal of the coin concerns the system s global behavior .",
    "one naturally - occurring coin is a human economy , where the `` neurons '' consist of individual humans trying to maximize their reward , and the `` goal '' , for example , can be viewed as having the overall system achieve high gross domestic product .",
    "this paper presents a preliminary investigation of designing and using artificial coins as controllers of distributed systems .",
    "the domain we consider is routing of internet traffic .",
    "the design of a coin starts with a global utility function specifying the desired global behavior .",
    "our task is to initialize and then update the neurons `` local '' utility functions , without centralized control , so that as the neurons improve their utilities , global utility also improves .",
    "( we may also wish to update the local topology of the coin . ) in particular , we need to ensure that the neurons do not `` frustrate '' each other as they attempt to increase their utilities .",
    "the rl algorithms at each neuron that aim to optimize that neuron s local utility are _",
    "microlearners_. the learning algorithms that update the neuron s utility functions are _",
    "macrolearners_.    for robustness and breadth of applicability , we assume essentially no knowledge concerning the dynamics of the full system , i.e. , the macrolearning and/or microlearning must `` learn '' that dynamics , implicitly or otherwise .",
    "this rules out any approach that models the full system .",
    "it also means that rather than use domain knowledge to hand - craft the local utilities as is done in multi - agent systems , in coins the local utility functions must be automatically initialized and updated using only the provided global utility and ( locally ) observed dynamics .",
    "the problem of designing a coin has never previously been addressed in full  hence the need for the new formalism described below .",
    "nonetheless , this problem is related to previous work in many fields : distributed artificial intelligence , multi - agent systems , computational ecologies , adaptive control , game theory  @xcite , computational markets  @xcite , markov decision theory , and ant - based optimization .    for the particular problem of routing ,",
    "examples of relevant work include  @xcite .",
    "most of that previous work uses microlearning to set the internal parameters of routers running conventional shortest path algorithms ( spas ) .",
    "however the microlearning occurs , they do not address the problem of ensuring that the associated local utilities do not cause the microlearners to work at cross purposes .",
    "this paper concentrates on coin - based setting of local utilities rather than macrolearning .",
    "we used simulations to compare three algorithms .",
    "the first two are an spa and a coin . both had `` full knowledge '' ( fk ) of the true reward - maximizing path , with reward being the routing time of the associated router s packets for the spas , but set by coin theory for the coins .",
    "the third algorithm was a coin using a memory - based ( mb ) microlearner  @xcite whose knowledge was limited to local observations .",
    "the performance of the fk coin was the theoretical optimum .",
    "the performance of the fk spa was @xmath0 worse than optimum . despite limited knowledge ,",
    "the mb coin outperformed the fk spa , achieving performance @xmath1 closer to optimum .",
    "note that the performance of the fk spa is an upper bound on the performance of any rl - based spa .",
    "accordingly , the performance of the mb coin is at least @xmath2 superior to that of any rl - based spa .",
    "section  [ sec : math ] below presents a cursory overview of the mathematics behind coins .",
    "section  [ sec : route ] discusses how the network routing problem is mapped into the coin formalism , and introduces our experiments .",
    "section  [ sec : res ] presents results of those experiments , which establish the power of coins in the context of routing problems .",
    "finally , section  [ sec : disc ] presents conclusions and summarizes future research directions .",
    "the mathematical framework for coins is quite extensive  @xcite .",
    "this paper concentrates on four of the concepts from that framework : subworlds , factored systems , constraint - alignment , and the wonderful - life utility function .",
    "we consider the state of the system across a set of discrete , time steps , @xmath3 .",
    "all characteristics of a neuron at time @xmath4  including its internal parameters at that time as well as its externally visible actions  are encapsulated in a real - valued vector @xmath5 .",
    "we call this the `` state '' of neuron @xmath6 at time @xmath4 , and let @xmath7 be the state of all neurons across all time",
    ". world utility , @xmath8 , is a function of the state of all neurons across all time , potentially not expressible as a discounted sum .",
    "a subworld is a set of neurons .",
    "all neurons in the same subworld @xmath9 share the same _ subworld utility function _ @xmath10 .",
    "so when each subworld is a set of neurons that have the most effect on each other , neurons are unlikely to work at cross - purposes  all neurons that affect each other substantially share the same local utility .",
    "associated with subworlds is the concept of a ( perfectly ) _ constraint - aligned _ system . in such systems",
    "any change to the neurons in subworld @xmath9 at time 0 will have no effects on the neurons outside of @xmath9 at times later than 0 . intuitively , a system is constraint - aligned if the neurons in separate subworlds do not affect each other directly , so that the rationale behind the use of subworlds holds .    a _",
    "subworld - factored _ system is one where for each subworld @xmath9 considered by itself , a change at time 0 to the states of the neurons in that subworld results in an increased value for @xmath10 if and only if it results in an increased value for @xmath8 . for a subworld - factored system",
    ", the side effects on the rest of the system of @xmath9 s increasing its own utility ( which perhaps decrease other subworlds utilities ) do not end up decreasing world utility .",
    "for these systems , the separate subworlds successfully pursuing their separate goals do not frustrate each other as far as world utility is concerned .",
    "the desideratum of subworld - factored is carefully crafted . in particular , it does _ not _ concern changes in the value of the utility of subworlds other than the one changing its actions . nor does it concern changes to the states of neurons in more than one subworld at once . indeed , consider the following alternative desideratum : any change to the @xmath11 state of the entire system that improves all subworld utilities simultaneously also improves world utility .",
    "reasonable as it may appear , one can construct examples of systems that obey this desideratum and yet quickly evolve to a _",
    "minimum _ of world utility  @xcite .",
    "it can be proven that for a subworld - factored system , when each of the neurons reinforcement learning algorithms are performing as well as they can , given each others behavior , world utility is at a critical point .",
    "correct global behavior corresponds to learners reaching a ( nash ) equilibrium  @xcite .",
    "there can be no tragedy of the commons for a subworld - factored system  @xcite .",
    "let @xmath12 be defined as the vector @xmath7 modified by clamping the states of all neurons in subworld @xmath9 , across all time , to an arbitrary fixed value , here taken to be 0 .",
    "the _ wonderful life subworld utility _ ( wlu ) is : @xmath13    when the system is constraint - aligned , so that , loosely speaking , subworld @xmath9 s `` absence '' would not affect the rest of the system , we can view the wlu as analogous to the change in world utility that would have arisen if subworld @xmath9 `` had never existed '' .",
    "( hence the name of this utility - cf . the frank capra movie . )",
    "note however , that @xmath14 is a purely mathematical operation .",
    "indeed , no assumption is even being made that @xmath12 is consistent with the dynamics of the system .",
    "the sequence of states the neurons in @xmath9 are clamped to in the definition of the wlu need not be consistent with the dynamical laws of the system .",
    "this dynamics - independence is a crucial strength of the wlu .",
    "it means that to evaluate the wlu we do _ not _ try to infer how the system would have evolved if all neurons in @xmath9 were set to 0 at time 0 and the system evolved from there .",
    "so long as we know @xmath7 extending over all time , and so long as we know @xmath15 , we know the value of wlu .",
    "this is true even if we know nothing of the dynamics of the system .",
    "in addition to assuring the correct equilibrium behavior , there exist many other theoretical advantages to having a system be subworld - factored .",
    "in particular , the experiments in this paper revolve around the following fact : a constraint - aligned system with wonderful life subworld utilities is subworld - factored . combining this with our previous result that subworld - factored systems are at nash equilibrium at critical points of world utility , this result leads us to expect that a constraint - aligned system using wl utilities in the microlearning will approach near - optimal values of the world utility .",
    "no such assurances accrue to wl utilities if the system is not constraint - aligned however . accordingly",
    "our experiments constitute an investigation of how well a particular system performs when wl utilities are used but little attention is paid to ensuring that the system is constraint - aligned .",
    "in our experiments we concentrated on the two networks in figure  [ fig : net ] , both slightly larger than those in  @xcite . to facilitate the analysis , traffic originated only at routers indicated with white boxes and had only the routers indicated by dark boxes as ultimate destinations .",
    "note that in both networks there is a bottleneck at router 2 .    as is standard in much of traffic network analysis  @xcite , at any time",
    "all _ traffic _ at a router is a real - valued number together with an ultimate destination tag . at each timestep , each router sums all traffic received from upstream routers in this timestep , to get a _",
    "load_. the router then decides which downstream router to send its load to , and the cycle repeats .",
    "a running average is kept of the total value of each router s load over a window of the previous @xmath16 timesteps .",
    "this average is run through a _",
    "load - to - delay _ function , @xmath17 , to get the summed _ delay",
    "_ accrued at this timestep by all those packets traversing this router at this timestep .",
    "different routers had different @xmath17 , to reflect the fact that real networks have differences in router software and hardware ( response time , queue length , processing speed etc ) . in our experiments",
    "@xmath18 for routers 1 and 3 , and @xmath19 for router 2 , for both networks .",
    "the global goal is to minimize total delay encountered by all traffic .    in terms of the coin formalism",
    ", we identified the neurons @xmath6 as individual pairs of routers and ultimate destinations .",
    "so @xmath5 was the vector of traffic sent along all links exiting @xmath6 s router , tagged for @xmath6 s ultimate destination , at time @xmath4 .",
    "each subworld consisted of the set all neurons that shared a particular ultimate destination .    in the spa each node @xmath6 tries to set @xmath5 to minimize the sum of the delays to be accrued by that traffic on the way to its ultimate destination .",
    "in contrast , in a coin @xmath6 tries to set @xmath5 to optimize @xmath20 for the subworld @xmath9 containing @xmath6 . for both algorithms ,",
    "`` full knowledge '' means that at time @xmath4 all of the routers know the window - averaged loads for all routers for time @xmath21 , and assume that those values will be the same at @xmath4 . for large enough @xmath16",
    ", this assumption will be arbitrarily good , and therefore will allow the routers to make arbitrarily accurate estimates of how best to route their traffic , according to their respective routing criteria .",
    "in contrast , having limited knowledge , the mb coin could only _ predict _ the wlu value resulting from each routing decision .",
    "more precisely , for each router - ultimate - destination pair , the associated microlearner estimates the map from traffic on all outgoing links ( the inputs ) to wlu - based reward ( the outputs  see below ) .",
    "this was done with a single - nearest - neighbor algorithm .",
    "next , each router could send the packets along the path that results in outbound traffic with the best ( estimated ) reward .",
    "however to be conservative , in these experiments we instead had the router randomly select between that path and the path selected by the fk spa .",
    "the load at router @xmath22 at time @xmath4 is determined by @xmath7 .",
    "accordingly , we can encapsulate the load - to - delay functions at the nodes by writing the delay at node @xmath22 at time @xmath4 as @xmath23 . in our experiments",
    "world utility was the total delay , i.e. , @xmath24 .",
    "so using the wlu , @xmath25 , where @xmath26 $ ] . at each time @xmath4 ,",
    "the mb coin used @xmath27 as the `` wlu - based '' reward signal for trying optimize this full wlu .    in the mb coin , evaluating this reward in a decentralized fashion was straight - forward .",
    "all packets have a header containing a running sum of the @xmath28 s encountered in all the routers it has traversed so far .",
    "each ultimate destination sums all such headers it received and echoes that sum back to all routers that had routed to it . in this way",
    "each neuron is apprised of the wlu - based reward of its subworld .",
    "the networks discussed above were tested under light , medium and heavy traffic loads .",
    "table  [ tab : traffic ] shows the associated destinations ( cf .",
    "1 ) .    [ htb ]",
    ".source  destination pairings for the three traffic loads [ cols=\"^,^,^,^,^\",options=\"header \" , ]     [ tab : results ]    table  [ tab : results ] provides two important observations : first , the wlu - based coin outperformed the spa when both have full knowledge , thereby demonstrating the superiority of the new routing strategy . by not having",
    "its routers greedily strive for the shortest paths for their packets , the coin settles into a more desirable state that reduces the average total delay for _ all _ packets .",
    "second , even when the wlu is estimated through a memory - based learner ( using only information available to the local routers ) , the performance of the coin still surpasses that of the fk spa .",
    "this result not only establishes the feasibility of coin - based routers , but also demonstrates that for this task coins will outperform _ any _ algorithm that can only estimate the shortest path , since the performance of the fk spa is a ceiling on the performance of any such rl - based spa .",
    "figure  [ fig : res ] shows how total delay varies with time for the medium traffic regime ( each plot is based on @xmath29 runs ) .",
    "the `` ringing '' is an artifact caused by the starting conditions and the window size ( @xmath29 ) .",
    "note that for both networks the fk coin not only provides the shortest delays , but also settles into that solution very rapidly .    [ fig : res ]",
    "many distributed computational tasks are naturally addressed as recurrent neural networks of reinforcement learning algorithms ( i.e. , coins ) .",
    "the difficulty in doing so is ensuring that , despite the absence of centralized communication and control , the reward functions of the separate neurons work in synchrony to foster good global performance , rather than cause their associated neurons to work at cross - purposes .",
    "the mathematical framework synopsized in this paper is a theoretical solution to this difficulty . to assess its real - world applicability , we employed it to design a full - knowledge ( fk ) coin as well as a memory - based ( rl - based ) coin , for the task of packet routing on a network .",
    "we compared the performance of those algorithms to that of a fk shortest - path algorithm ( spa ) .",
    "not only did the fk coin beat the fk spa , but also the memory - based coin , despite having only limited knowledge , beat the full - knowledge spa .",
    "this latter result is all the more remarkable in that the performance of the fk spa is an upper bound on the performance of previously investigated rl - based routing schemes , which use the rl to try to provide accurate knowledge to an spa .",
    "there are many directions for future work on coins , even restricting attention to domain of packet routing . within that particular domain ,",
    "currently we are extending our experiments to larger networks , using industrial event - driven network simulators .",
    "concurrently , we are investigating the use of macrolearning for coin - based packet - routing , i.e. , the run - time modification of the neurons utility functions to improve the subworld - factoredness of the coin .",
    "j.  boyan and m.  littman .",
    "packet routing in dynamically changing networks : a reinforcement learning approach . in _ advances in neural information processing systems - 6 _ , pages 671678 .",
    "morgan kaufmann , 1994 .",
    "s.  p.  m. choi and d.  y. yeung .",
    "predictive q - routing : a memory based reinforcement learning approach to adaptive traffic control . in _ advances in neural information processing systems - 8 _ , pages 945951 . mit press , 1996 .",
    "p.  marbach , o.  mihatsch , m.  schulte , and j.  tsisiklis .",
    "reinforcement learning for call admission control and routing in integrated service networks . in _ adv . in neural info .",
    "systems - 10 _ , pages 922928 . mit press , 1998 .",
    "d.  subramanian , p.  druschel , and j.  chen .",
    "ants and reinforcement learning : a case study in routing in dynamic networks . in _ proceedings of the fifteenth international conference on artificial intelligence _ , pages 832838 , 1997 ."
  ],
  "abstract_text": [
    "<S> a collective intelligence ( coin ) is a set of interacting reinforcement learning ( rl ) algorithms designed in an automated fashion so that their collective behavior optimizes a global utility function . </S>",
    "<S> we summarize the theory of coins , then present experiments using that theory to design coins to control internet traffic routing . </S>",
    "<S> these experiments indicate that coins outperform all previously investigated rl - based , shortest path routing algorithms . </S>"
  ]
}
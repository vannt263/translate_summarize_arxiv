{
  "article_text": [
    "we are concerned with the representation of integers in base @xmath3 , where @xmath4 is an integer .",
    "we let @xmath5 , and we let @xmath6 denote the canonical representation of @xmath1 in base @xmath3 , starting with the most significant digit , and _ without _ leading zeroes .",
    "if @xmath7 , we let @xmath8_k$ ] denote the integer represented by @xmath9 ( where @xmath9 is allowed to have leading zeroes ) . to represent a pair of integers @xmath10 , we use words over the alphabet @xmath11 .",
    "for such a word @xmath9 , we let @xmath12 to be the projection onto the @xmath13th coordinate .",
    "the canonical representation @xmath14 is defined to be the word @xmath9 such that @xmath15_k = m$ ] and @xmath16_k = n$ ] , and having no leading @xmath17 $ ] s .",
    "for example @xmath18[0,1][1,0][0,0][1,0][1,1]$ ] .",
    "recently , arturo carpi and his co - authors introduced a very interesting class of sequences that are computable by automata in a novel fashion : the class of @xmath3-synchronized sequences .",
    "let @xmath19 be a sequence taking values in @xmath20 .",
    "they call such a sequence",
    "_ @xmath3-synchronized _ if there is a deterministic finite automaton @xmath21 accepting the base-@xmath3 representation of the graph of @xmath22 , namely @xmath23 .",
    "sequences that are @xmath3-synchronized are `` halfway between '' the class of @xmath3-automatic sequences , introduced by cobham @xcite and studied in many papers ; and the class of @xmath3-regular sequences , introduced by allouche and shallit .",
    "they are particularly interesting for two reasons .",
    "if a sequence @xmath24 is @xmath3-synchronized , then    * we immediately get a bound on its growth rate : @xmath25 ; * we immediately get a linear - time algorithm for efficiently calculating @xmath26 .",
    "result ( a ) can be found in .",
    "we now state and prove result ( b ) .",
    "suppose @xmath19 is @xmath3-synchronized . then there is an algorithm that , given the base-@xmath3 representation of @xmath1 , will compute the base-@xmath3 representation of @xmath26 in @xmath27 time .",
    "[ calc ]    we know there is a dfa @xmath28 accepting @xmath29 . from result ( a ) above",
    "we know that @xmath30 , for some constant @xmath31 , so if @xmath32 is accepted , then the first component is @xmath33 for some @xmath34 , where @xmath35 is the canonical base-@xmath3 representation of @xmath1 .",
    "let @xmath36 .",
    "we now create a directed graph out of @xmath37 copies of the transition graph for @xmath21 , by starting at the final states of @xmath21 and tracing a path backwards , using the reversed transitions of @xmath21 .",
    "this path is chosen so the first component of the labels encountered form @xmath38 and the second component is arbitrary .",
    "the reslting graph has at most @xmath39 transitions and vertices .",
    "there will be only one path of length @xmath40 with @xmath41 that leads to the initial state @xmath42 , and this can be found with depth - first search in @xmath39 time .",
    "then , reading the corresponding labels of the second components in the forward direction gives the base-@xmath3 representation of @xmath26 .    in this paper , we are concerned with infinite words over a _",
    "finite _ alphabet .",
    "let @xmath43 be an infinite word . by @xmath44 $ ] we mean the factor @xmath45 of @xmath2 of length @xmath46 .",
    "the subword complexity function @xmath0 counts the number of distinct factors of length @xmath1 .    an infinite word or sequence",
    "@xmath47 is said to be @xmath3-automatic if there is an automaton with outputs associated with the states that , on input @xmath6 , reaches a state with output @xmath48 $ ] . in this paper",
    "we show that if @xmath2 is a @xmath3-automatic sequence , then the subword complexity @xmath0 is @xmath3-synchronized . as an application",
    ", we generalize and simplify recent results of goldstein @xcite .",
    "furthermore , we obtain analogous results for the number of length-@xmath1 primitive words and the number of length-@xmath1 powers .",
    "we remark that there are a number of quantities about @xmath3-automatic sequences already known to be @xmath3-synchronized .",
    "these include    * the separator sequence of a non - ultimately - periodic @xmath3-automatic sequence ; * the repetitivity index of a @xmath3-automatic sequence ; * the recurrence function of a @xmath3-automatic sequence ; * the `` appearance '' function of a @xmath3-automatic sequence .    the latter two examples were not explicitly stated to be @xmath3-synchronized in , but the result follows immediately from the proofs in that paper .",
    "cobham @xcite proved that if @xmath2 is a @xmath3-automatic sequence , then @xmath49 .",
    "cassaigne @xcite proved that any infinite word @xmath2 satisfying @xmath49 also satisfies @xmath50 .",
    "carpi and dalonzo showed that the subword complexity function @xmath0 is a @xmath3-regular sequence .",
    "charlier , rampersad , and shallit found this result independently , using a somewhat different approach .",
    "they used the following idea . call an occurrence of the factor",
    "@xmath51 $ ] `` novel '' if @xmath52 does not appear as a factor of @xmath53 $ ] . in other words , the leftmost occurrence of @xmath52 in @xmath2 is at position @xmath13 .",
    "then the number of factors of length @xmath1 in @xmath2 is equal to the number of novel occurrences of factors of length @xmath1 .",
    "the property that @xmath54 $ ] is novel can be expressed as a predicate , as follows : @xmath55 \\not= { \\bf x}[j .. j+n-1 ] \\ }   = \\\\ \\ { ( n , i)_k \\ : \\ \\forall",
    "j , 0 \\leq j <",
    "i   \\       \\exists m , 0 \\leq m < n \\            { \\bf x}[i+m ] \\not= { \\bf x}[j+m ] \\ } . \\label{pred}\\end{gathered}\\ ] ]    as shown in , the base-@xmath3 representation of the integers satisfying any predicate of this form ( expressible using quantifiers , integer addition and subtraction , indexing into a @xmath3-automatic sequence @xmath2 , logical operations , and comparisons ) can be accepted by an explicitly - constructable deterministic finite automaton . from this , it follows that the sequence @xmath0 is @xmath3-regular , and hence can be computed explicitly in terms of the product of certain matrices and vectors depending on the base-@xmath3 expansion of @xmath1 .",
    "we show that , in fact , the subword complexity function @xmath56 is @xmath3-synchronized .",
    "the main observation needed is the following ( theorem  [ luke ] ) : in any sequence of linear complexity , the novel occurrences of factors are `` clumped together '' in a bounded number of contiguous blocks .",
    "this makes it easy to count them .",
    "more precisely , let @xmath2 be an infinite word and for any @xmath1 consider the set of novel occurrences @xmath57 \\text { is novel } \\rbrace.\\ ] ] we consider how @xmath58 evolves with increasing @xmath1 .",
    "as an example , consider the thue - morse sequence @xmath59 defined by letting @xmath60 be the number of @xmath61 s in the binary expansion of @xmath1 , taken modulo @xmath62 .",
    "the gray squares in the rows of of figure  [ fig1 ] depict the members of @xmath63 for the thue - morse sequence for @xmath64 .",
    "let @xmath2 be an infinite word .",
    "if the factor of length @xmath1 beginning at position @xmath13 is a novel occurrence , so is    * the factor of length @xmath65 beginning at position @xmath13 ; * the factor of length @xmath65 beginning at position @xmath66 ( for @xmath67 ) .",
    "\\(a ) suppose the factor of length @xmath65 also occurs at some position @xmath68 .",
    "then the factor of length @xmath1 also occurs at position @xmath69 , contradicting the fact that it was a novel occurrence at @xmath13 .",
    "\\(b ) suppose the factor of length @xmath65 beginning at position @xmath66 occurs at some earlier position @xmath70 .",
    "we can write the factor as @xmath71 , where @xmath72 is a single letter and @xmath9 is a word , so the factor of length @xmath1 beginning at position @xmath13 must also occur at position @xmath73 .",
    "but then it is not a novel occurrence .",
    "let @xmath2 be an infinite word . for @xmath74 ,",
    "the number of contiguous blocks in @xmath58 is at most @xmath75 .",
    "[ luke ]    we prove the claim by induction on @xmath1 . for @xmath76",
    "the claim says there are at most @xmath77 contiguous blocks , which is evidently true , since there are at most @xmath77 novel factors of length @xmath61 .",
    "now assume the claim is true for all @xmath78 ; we prove it for @xmath1 .",
    "consider the evolution of the novel occurrences of factors in going from length @xmath79 to @xmath1 .",
    "every occurrence that was previously novel is still novel , and furthermore in every contiguous block except the first , we get novel occurrences at one position to the left of the beginning of the block .",
    "so if row @xmath79 has @xmath52 contiguous blocks , then we get @xmath80 novel occurrences at the beginning of each block , except the first .",
    "( of course , the first block begins at position @xmath81 , since any factor beginning at position @xmath81 is novel , no matter what the length is . )",
    "the remaining @xmath82 novel occurrences could be , in the worst case , in their own individual contiguous blocks .",
    "thus row @xmath1 has at most @xmath83 contiguous blocks .    in our thue - morse example , it is well - known that @xmath84 , so the number of contiguous blocks in any row is at most @xmath85 .",
    "this is achieved , for example , for @xmath86 .",
    "we give an example of a recurrent infinite word over a finite alphabet where the number of contiguous blocks in @xmath58 is unbounded .",
    "consider the word @xmath87 then for each @xmath88 the first occurrence of each of the words @xmath89 , @xmath90 have a non - novel occurrence immediately following them , which shows there at at least @xmath91 blocks in @xmath92 .",
    "if @xmath49 , then there is a constant @xmath31 such that every row @xmath58 in the evolution of novel occurrences consists of at most @xmath31 contiguous blocks .    by the result of cassaigne @xcite , we know that there exists a constant @xmath31 such that @xmath93 . by theorem  [ luke ] , we know there are at most @xmath31 contiguous blocks in any @xmath58 .",
    "let @xmath2 be a @xmath3-automatic sequence .",
    "then its subword complexity function @xmath0 is @xmath3-synchronized .",
    "[ scthm ]    following , it suffices to show how to accept the language @xmath94 with a finite automaton . here",
    "is a sketch of the argument . from our results",
    "above , we know that there is a finite constant @xmath95 such that the number of contiguous blocks in any row of the factor evolution diagram is bounded by @xmath31 .",
    "so we simply `` guess '' the endpoints of every block and then verify that each factor of length @xmath1 starting at the positions inside blocks is a novel occurrence , while all other factors are not .",
    "finally , we verify that @xmath96 is the sum of the sizes of the blocks .    to fill in the details , we observe above in ( [ pred ] ) that the predicate `` the factor of length @xmath1 beginning at position @xmath13 of @xmath2 is a novel occurrence '' is solvable by a finite automaton .",
    "similarly , given endpoints @xmath97 and @xmath1 , the predicates `` every factor of length @xmath1 beginning at positions @xmath72 through @xmath98 is a novel occurrence '' and `` no factor of length @xmath1 beginning at positions @xmath72 through @xmath98 is a novel occurrence ''",
    "are also solvable by a finite automaton .",
    "the length of each block is just @xmath99 , and it is easy to create an automaton that will check if the sums of the lengths of the blocks equals @xmath96 , which is supposed to be @xmath0 .",
    "applying theorem  [ calc ] we get    given a @xmath3-automatic sequence @xmath2 , there is an algorithm that , on input @xmath1 in base @xmath3 , will produce @xmath0 in base @xmath3 in time @xmath27 .    as another application",
    ", we can recover and improve some recent results of goldstein @xcite .",
    "he showed how to compute the quantities @xmath100 and @xmath101 for the special case of @xmath3-automatic sequences that are the fixed points of @xmath3-uniform morphisms related to certain groups .",
    "corollary  [ ss ] below generalizes these results to all @xmath3-automatic sequences .",
    "there is an algorithm , that , given a @xmath3-automatic sequence @xmath2 , will compute @xmath102 , @xmath100 , and @xmath103 , @xmath101 .",
    "[ ss ]    we already showed how to construct an automaton accepting @xmath104 .",
    "now we just use the results from .",
    "notice that the @xmath105 corresponds to what is called the largest `` special point '' in .",
    "continuing our example of the thue - morse sequence , figure  [ fig2 ] displays a dfa accepting @xmath106 inputs are given with the most significant digit first ; the `` dead '' state and transitions leading to it are omitted .    given an infinite word @xmath2 , we can also count the number of contiguous blocks in each @xmath58 for @xmath107 .",
    "( for the thue - morse sequence this gives the sequence @xmath108 . )",
    "if @xmath2 is @xmath3-automatic , then this sequence is also , as the following theorem shows :    if @xmath2 is @xmath3-automatic then the sequence @xmath109 counting the number of contiguous blocks in the @xmath1th step @xmath58 of the evolution of novel occurrences of factors in @xmath2 is also @xmath3-automatic .",
    "since we have already shown that the number of contiguous blocks is bounded by some constant @xmath31 if @xmath2 is @xmath3-automatic , it suffices to show for each @xmath110 we can create an automaton to accept the language @xmath111 .",
    "to do so , on input @xmath1 in base @xmath3 we guess the endpoints of the @xmath13 contiguous nonempty blocks , verify that the length-@xmath1 occurrences at those positions are novel , and that all other occurrences are not novel .",
    "[ fig2 ]    figure  [ fig3 ] below gives the automaton computing the number @xmath112 of contiguous blocks of novel occurrences of length-@xmath1 factors for the thue - morse sequence .",
    "here is a brief table :    [ cols=\"^,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>\",options=\"header \" , ]",
    "we wrote a program that , given an automaton generating a @xmath3-automatic sequence @xmath2 , will produce a deterministic finite automaton accepting the language @xmath113 .",
    "we used the following variant which does not require advance knowledge of the bound on the first difference of @xmath0 :    1 .   construct an automaton @xmath114 that accepts @xmath115 if , for factors of length @xmath1 , the next contiguous block of novel occurrences after position @xmath116 ends at position @xmath117 and has length @xmath118 . if there are no blocks past @xmath116 , accept @xmath119 .",
    "2 .   construct an automaton @xmath120 that accepts @xmath121 .",
    "3 .   construct an automaton @xmath122 that accepts @xmath123 if there exist @xmath116 and @xmath124 such that * @xmath125 accepts @xmath126 * @xmath114 accepts @xmath127 .",
    "if @xmath128 then we are done .",
    "we create an automaton that accepts @xmath129 if there exists @xmath117 such that @xmath125 accepts @xmath123 .",
    "factors in the thue - morse sequence , width=377 ]    [ fig3 ]    besides the automaton depicted in figure  [ fig1 ] , we ran our program on the paperfolding sequence and the so - called `` period - doubling sequence '' @xcite .",
    "the results are depicted below in figures  [ fig4 ] and [ fig5 ] .",
    "let @xmath35 be a nonempty word .",
    "we say @xmath35 is a _ power _ if there exists a word @xmath9 and an integer @xmath4 such that @xmath130 ; otherwise we say @xmath35 is _ primitive_. given a word @xmath131 , there is a unique way to write it as @xmath132 , where @xmath133 is primitive and @xmath13 is an integer @xmath134 ; this @xmath133 is called the _ primitive root _ of @xmath131 . thus , for example , the primitive root of murmur is mur .",
    "we say @xmath135 has a _ period _",
    "@xmath136 if @xmath137 for @xmath138",
    ". thus , for example , alfalfa has period @xmath139 .",
    "it is easy to see that a word @xmath35 is a power if and only if it has a period @xmath136 such that @xmath140 and @xmath141 .    two finite words @xmath142 are conjugates if one is a cyclic shift of the other ; in other words , if there exist words @xmath143 such that @xmath144 and @xmath145 . for example , enlist is a conjugate of listen . as is well - known , every conjugate of a power of a word @xmath9 is a power of a conjugate of @xmath9 .",
    "the lexicographically least conjugate of a primitive word is called a _ lyndon word_. we call the lexicographically least conjugate of the primitive root of @xmath9 the _ lyndon root _ of @xmath9 .",
    "the following lemma says that if we consider the starting positions of length-@xmath1 powers in a word @xmath9 , then there must be large gaps between contiguous blocks of such starting positions .",
    "let @xmath131 be a finite or infinite word , and let @xmath146 be an integer .",
    "suppose there exist integers @xmath147 such that    * @xmath148 $ ] is a power ; * @xmath149 $ ] is a power ; * @xmath150 .",
    "then @xmath151 $ ] is a power for @xmath152 .",
    "furthermore , if @xmath153 is the lyndon root of @xmath154 , then @xmath153 is also the lyndon root of each word @xmath151 $ ] .",
    "[ gocl ]        [ fig4 ]        [ fig5 ]    let @xmath153 be the primitive root of @xmath154 and @xmath155 be the primitive root of @xmath156 . since @xmath153 and @xmath155 are powers , there exist integers @xmath157 such that @xmath158 and @xmath159 .",
    "since @xmath154 and @xmath156 are both of length @xmath1 , and since their starting positions are related by @xmath150 , it follows that the word @xmath160 $ ] is common to both @xmath154 and @xmath156 , and @xmath161 .",
    "now there are three cases to consider :    * @xmath162 ; * @xmath163 ; * @xmath164 .",
    "case ( a ) : we must have @xmath165 , so @xmath166 . since @xmath167 is a suffix of @xmath154 , it has period @xmath168 . since @xmath167 is a prefix of @xmath156 , it has period @xmath169 . then @xmath170 . by a theorem of fine and wilf",
    ", it now follows that @xmath167 , and hence @xmath153 , has period @xmath171 .",
    "now @xmath136 is less than @xmath172 and also divides it , so this means @xmath153 is a power , a contradiction , since we assumed @xmath153 is primitive .",
    "so this case can not occur .",
    "case ( b ) gives a similar contradiction .",
    "case ( c ) : we have @xmath173 .",
    "then the last occurrence of @xmath153 in @xmath154 lies inside @xmath174 , and so @xmath153 is a conjugate of @xmath155 .",
    "hence @xmath154 is a conjugate of @xmath156 .",
    "it now follows that @xmath175 $ ] is a conjugate of @xmath154 for every @xmath52 , @xmath152 .",
    "but the conjugate of a power is itself a power , and we are done .",
    "the bound of @xmath176 in the statement of lemma  [ gocl ] is best possible , as shown by the following class of examples .",
    "let @xmath177 be the morphism that maps @xmath178 and @xmath179 , and consider the word @xmath180 this word is of length @xmath181 , and contains squares of length @xmath182 starting in the first @xmath183 positions , and cubes of length @xmath182 ending in the last @xmath184 positions .",
    "this achieves a gap of @xmath185 infinitely often .",
    "now , given an infinite word @xmath2 , we define a function @xmath186 , the _ appearance function _",
    ", to be the least index @xmath13 such that every length-@xmath1 factor of @xmath2 appears in the prefix @xmath187 $ ] ; see .    if @xmath2 is a @xmath3-automatic sequence , then @xmath188 .",
    "[ app - thm ]    first , we show that the appearance function is @xmath3-synchronized .",
    "it suffices to show that there is an automaton accepting @xmath189 . to see this , note that on input @xmath190 we can check that    * for all @xmath191 there exists @xmath69 , @xmath192 such that @xmath54 = { \\bf x}[j .. j+n-1]$ ] ; and * for all @xmath193 we have @xmath194 \\not= { \\bf x}[l .. l+n-1]$ ] .    from we know @xmath3-synchronized functions are @xmath195 .",
    "as before , we consider maximal blocks of novel occurrences of length-@xmath1 powers in @xmath2 .",
    "our goal is to prove    if @xmath2 is @xmath3-automatic , then there are only a constant number of such blocks .",
    "[ lnpow ]    to begin with , we consider maximal blocks of length-@xmath1 powers in @xmath2 ( not considering whether they are novel occurrences ) . from theorem  [ app - thm ]",
    "we know that every length-@xmath1 factor must occur at a position @xmath196 , for some constant @xmath31 ( depending on @xmath2 ) .",
    "we first argue that the number of maximal blocks of length-@xmath1 powers , up to the position of the last length-@xmath1 power to occur for the first time , is at most @xmath197 .",
    "suppose there @xmath198 such blocks .",
    "then lemma  [ gocl ] says that any two such blocks must be separated by at least @xmath176 positions .",
    "so the first occurrence of the last factor to occur occurs at a position @xmath199 , a contradiction .    so using a constant number of blocks ,",
    "in which each position of each block starts a length-@xmath1 factor that is a power , we cover the starting positions of all such factors .",
    "it now remains to process these blocks to remove occurrences of length-@xmath1 powers that are not novel .",
    "the first thing we do is remove from each block the positions starting length-@xmath1 factors that have already occurred _ in that block_. this has the effect of truncating long blocks .",
    "the new blocks have the property that each factor occurring at the starting positions in the blocks never appeared before in that block .",
    "above we already proved that inside each block , the powers that begin at each position are all powers of some conjugate of a fixed lyndon word .",
    "now we process the blocks associated with the same lyndon root together , from the first ( leftmost ) to the last . at each step , we remove from the current block all the positions where length-@xmath1 factors begin that have appeared in any previous block .",
    "when all blocks have been processed , we need to see that there are still at most a constant number of contiguous blocks remaining .",
    "suppose the associated lyndon root is @xmath133 , with @xmath200 .",
    "each position in a block is the starting position of a power of a conjugate of @xmath133 , and hence corresponds to a right rotation of @xmath133 by some integer @xmath13 , @xmath201 .",
    "thus each block @xmath202 actually corresponds to some @xmath203 that is a contiguous subblock of @xmath204 ( thought of as arranged in a circle ) .",
    "as we process the blocks associated with @xmath133 from left to right we replace @xmath203 with @xmath205 .",
    "now if @xmath206 is a union of contiguous subblocks , let @xmath207 be the number of contiguous subblocks making up @xmath208 .",
    "we claim that @xmath209    to see this , suppose that when we set @xmath210 , the subblock @xmath211 has an intersection with @xmath52 of the lower - numbered subblocks .",
    "forming the union @xmath212 then obliterates @xmath52 subblocks and replaces them with @xmath61 . but",
    "@xmath213 has @xmath80 new subblocks , plus at most @xmath62 at either edge ( see figure  [ fig9 ] ) .",
    "this means that the left side of ( [ ineq ] ) increases by at most @xmath214 .",
    "doing this @xmath1 times gives the result .",
    "sc6.pdf_t    now at the end of the procedure there will be at least one interval in the union of all the @xmath215 , so @xmath216 , and we have proved ( [ ineq ] ) .",
    "earlier we showed that there are at most @xmath197 maximal blocks of length-@xmath1 powers , up to the position of the last length-@xmath1 power to occur for the first time .",
    "then , after processing these blocks to remove positions corresponding to factors that occurred earlier , we will have at most @xmath217 blocks remaining .    if @xmath2 is @xmath3-automatic , then    * the function counting the number of distinct length-@xmath1 factors that are powers is @xmath3-synchronized ; * the function counting the number of distinct length-@xmath1 factors that are primitive words is @xmath3-synchronized .",
    "suppose @xmath2 is @xmath3-automatic , and generated by the dfao @xmath21 .",
    "from the lyndon - schtzenberger theorem @xcite , we know that a word @xmath9 is a power if and only if there exist nonempty words @xmath218 such that @xmath219 .",
    "thus , we can express the predicate @xmath220 `` @xmath221 $ ] is a power '' as follows : `` there does not exist @xmath222 , @xmath223 , such that @xmath224 = { \\bf x}[i+d .. j]$ ] and @xmath225 = { \\bf x}[i .. i+d-1]$ ] '' .",
    "furthermore , we can express the predicate @xmath226 `` @xmath54 $ ] is a length-@xmath1 power and the first occurrence of that power in @xmath47 '' , as @xmath227    from lemma  [ lnpow ] we know that the novel occurrences of length-@xmath1 powers are clustered into a finite number of blocks .",
    "then , as in the proof of theorem  [ scthm ] , we can guess the endpoints of these blocks , and verify that the length-@xmath1 factors beginning at the positions inside the blocks are novel occurrences of powers , while those outside are not , and sum the lengths of the blocks , using a finite automaton built from @xmath21 .",
    "thus , the function counting the number of length-@xmath1 powers in @xmath2 is @xmath3-synchronized .",
    "the number of length-@xmath1 primitive words in @xmath2 is then also @xmath3-synchronized , since it is expressible as the total number of words of length @xmath1 , minus the number of length-@xmath1 powers .    using the technique above",
    ", we can prove analogous results for the functions counting the number of length-@xmath1 words that are @xmath228-powers , for any fixed rational number @xmath229 .",
    "it is natural to wonder whether other aspects of @xmath3-automatic sequences are always @xmath3-synchronized .",
    "we give an example that is not .",
    "we say a word @xmath35 is _ bordered _ if it has a nonempty prefix , other than @xmath35 itself , that is also a suffix .",
    "alternatively , @xmath35 is bordered if it can be written in the form @xmath230 , where @xmath52 is nonempty .",
    "otherwise a word is _",
    "unbordered_.    charlier et al .   showed that @xmath231 , the number of unbordered factors of length @xmath1 of a sequence @xmath2 , is @xmath3-regular if @xmath2 is @xmath3-automatic .",
    "they also gave a conjecture for recursion relations defining @xmath232 where @xmath233 is the thue - morse sequence ; this conjecture has recently been verified by go and shallit .",
    "it is not hard to verify that @xmath235 is @xmath62-automatic and that @xmath235 has exactly @xmath237 unbordered factors of length @xmath238 , for @xmath239  namely , the factors beginning at positions @xmath240 for @xmath241 , and the factor beginning at position @xmath238 .",
    "however , if @xmath236 were @xmath62-synchronized , then reading an input where the first component looks like @xmath242 ( and hence a representation of @xmath243 ) for large @xmath244 would force the transitions to enter a cycle .",
    "if the corresponding transitions for the second component contained a nonzero entry , this would force @xmath236 to grow linearly with @xmath1 when @xmath1 is of the form @xmath238 .",
    "otherwise , the corresponding transitions for the second component are just @xmath81 s , in which case @xmath236 is bounded above by a constant , for @xmath1 of the form @xmath238 .",
    "both cases lead to a contradiction .",
    "e.  charlier , n.  rampersad , and j.  shallit .",
    "enumeration and decidable properties of automatic sequences . in g.",
    "mauri and a.  leporati , editors , _ developments in language theory15th international conference , dlt 2011 _ , vol .",
    "6795 , pp .",
    "springer - verlag , 2011 .",
    "j.  shallit .",
    "the critical exponent is computable for automatic sequences . in p.",
    "ambroz , s.  holub , and z.  msakov , editors , _",
    "proceedings 8th international conference words 2011 _ , vol .",
    "63 of _ elect .",
    "_ , pp . 231239 ."
  ],
  "abstract_text": [
    "<S> we show that the subword complexity function @xmath0 , which counts the number of distinct factors of length @xmath1 of a sequence @xmath2 , is @xmath3-synchronized in the sense of carpi if @xmath2 is @xmath3-automatic . as an application </S>",
    "<S> , we generalize recent results of goldstein . </S>",
    "<S> we give analogous results for the number of distinct factors of length @xmath1 that are primitive words or powers . </S>",
    "<S> in contrast , we show that the function that counts the number of unbordered factors of length @xmath1 is _ not _ necessarily @xmath3-synchronized for @xmath3-automatic sequences . </S>"
  ]
}
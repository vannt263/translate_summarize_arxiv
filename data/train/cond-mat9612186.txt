{
  "article_text": [
    "the word `` monte carlo method '' can be traced back to a game very popular in monaco .",
    "it s not what you think , it s mostly a children s pass - time played on the beaches . on wednesdays (",
    "when there is no school ) and on weekends , they get together , pick up a big stick , draw a circle and a square as shown in figure  [ 1children ] .",
    "they fill their pockets with pebbles    ( 6.8,5 . )",
    "( 0.0,0 )    .",
    "then they stand around , close their eyes , and throw the pebbles randomly in the direction of the square .",
    "someone keeps track of the number of pebbles which hit the square , and which fall within the circle ( see figure  [ 1children ] ) .",
    "you will easily verify that the ratio of pebbles in the circle to the ones in the whole square should come out to be @xmath0 , so there is much excitement when the @xmath1th , @xmath2th , @xmath3th is going to be cast .",
    "this breath - taking game is the only method i know to compute the number @xmath4 to arbitrary precision without using fancy measuring devices ( meter , balance ) or advanced mathematics ( division , multiplication , trigonometry ) .",
    "children in monaco can pass the whole afternoon at this game .",
    "you are invited to write a little program to simulate the game .",
    "if you have never written a monte carlo program before , this will be your first one .",
    "you may also recover `` ` simplepi.f ` '' from my www - site .",
    "lately , big people in monaco have been getting into a similar game . late in the evenings , when all the helicopters are safely stowed away ,    ( 8.,5 . ) ( 0.0,0 )    they get together on the local heliport ( cf . figure  [ 1grownups ] ) , which offers the same basic layout as in the children s game .",
    "they fill their expensive herms handbags with pebbles , but since the field is so large , they play a slightly different game : they start somewhere on the field , close their eyes , and then throw the little stone in a random direction .",
    "then they walk to where the first stone landed , take a new one out of their handbag , and start again",
    ". you will realize that using this method , one can also sweep out evenly the heliport square , and compute the number @xmath4 .",
    "you are invited to write a @xmath5-line program to simulate the heliport game - but it s not completely trivial .",
    "are you starting to think that the discussion is too simple ?",
    "if that is so , please consider the lady at c ) .",
    "she just flung a pebble to c ) , which is outside the square .",
    "what should she do ?    1 .",
    "simply move on at c ) 2 .",
    "climb over the fence , and continue until , by accident , she will reintegrate the heliport 3 .",
    "other :    a correct answer to this question will be given on page  , it contains the essence of the concept of detailed balance .",
    "many monte carlo programs are wrong because the wrong alternative was programmed .",
    "the two cases - the children s game and the grown - ups game are perfect illustrations of what is going on in monte carlo  and in monte carlo algorithms . in each case , one is interested in evaluating an integral @xmath6 { } } dx dy \\pi(x , y ) f(x , y)\\ ] ] with a _ probability density _ @xmath4 which , in our case is the square @xmath7 and a function @xmath8 ( the circle ) @xmath9 both the children and the grown - ups fill the square with a constant density of pebbles ( corresponding to @xmath10 , one says that they",
    "the function @xmath11 on the basic square .",
    "if you think about it you will realize that the number @xmath4 can be computed in the two games only because the area of the basic square is known .",
    "if this is not so , one is reduced to computing the ratio of the areas of the circle and of the square , i.e. , in the general case , the ratio of the integrals : @xmath6 { } } dx dy \\pi(x , y ) f(x , y ) / \\int_{x , y\\;\\epsilon \\framebox[.2 cm ] { } } dx dy \\pi(x , y )    \\label{ratio_of_integs}\\ ] ]    two basic approaches are used in the monte carlo method :    1 .",
    "direct sampling ( children on the beach ) 2 .   markov - chain sampling ( adults on the heliport )    direct sampling is usually like pure gold , it means that you are able to call a subroutine which provides an independent hit at your distribution function @xmath11 .",
    "this is exactly what the kids do whenever they get a new pebble out of their pockets .",
    "most often , there is no way to do direct sampling in a reasonable manner .",
    "one then resorts to markov - chain sampling , as the adults on the heliport .",
    "almost all physical systems are of this class .",
    "a famous example , which does not oblige us to speak of energies , hamiltonians etc . has occupied more than a generation of physicists .",
    "it can easily be created with a shoe - box , and a number of coins ( cf figure  [ 1coin ] ) : how do you generate ( directly sample )    ( 6.,4 . ) ( 0.0,0 )    random configurations of the coins such that they do nt overlap ?",
    "imagine the @xmath12-dimensional configuration space of @xmath13 non - overlapping coins in a shoe - box .",
    "nobody has found a subroutine which would directly sample this configuration space , i.e. create any of its members with equal probability .",
    "first - time listeners often spontaneously propose a method called random sequential adsorption : deposit a first coin at a random position , then a second , etc , ( if they overlap , simply try again ) .",
    "random sequential adsorption will be dealt with in detail , but in a completely different context , on page  .",
    "try to understand that this has nothing to do with finding a random non - overlapping configuration of the coins in the shoe - box ( in particular , the average maximum density of random sequential deposition is much smaller than the close packing density of the coins ) .",
    "direct sampling is usually impossible - and that is the basic frustration of monte carlo methods ( in statistical physics ) .",
    "in contrast , the grown - ups game can be played in any situation (  already on the heliport which is too large for direct sampling ) .",
    "markov chain sampling has been used in an uncountable number of statistical physics models , in the aforementioned coin - in - a - box problem , the hubbard model , etc etc .",
    "usually it is a very poor , and extremely costly substitute to what we really want to do .    in the introduction",
    ", i have talked about orientation , and to get oriented you should realize the following :    * in the case of the children s game , you need only a few dozen pebbles ( samples ) to get a physicist s idea of the value of @xmath4 , which will be sufficient for most applications . exactly the same is true for some of the most difficult statistical physics problems .",
    "a few dozen ( direct ) samples of large coin - in - the - box problems at any density would be sufficient to resolve long - standing controversies .",
    "( for a random example , look up ref .",
    "@xcite , where the analysis of a monumental simulation relies on an effective number of @xmath14 samples ) .",
    "+ likewise , a few dozen direct samples of the hubbard model of strong fermionic correlation would give us important insights into superconductivity .",
    "yet , some of the largest computers in the world are churning away day after day on problems as the ones mentioned .",
    "they all try to bridge the gap between the billions of markov chain samples and the equivalent of a few random flings in the children s game . *",
    "it is only after the problem to generate independent samples by markov chains _ at all _ is understood , that we may start to worry about the slow convergence of mean - values .",
    "this is already apparent in the children s game - as in every measurement in experimental physics - : the precision of the numerical value decreases only as @xmath15 , where @xmath13 is the number of independent measurements .",
    "again , let me argue against the `` mainstream '' that the absolute precision discussion is not nearly as important as it may seem : you are not always interested in computing your specific heat to five significant digits before putting your soul to rest . in daily practice of monte carlo it is usually more critical to be absolutely sure that the program has given some independent samples rather than that there are millions and billions of them .",
    "* it is essential to understand that a long markov chain , even if it produces only a small number of independent samples ( and thus a very approximative result ) is usually extremely sensitive to bugs , and even small irregularities of the program .",
    "we have yet to determine what the lady at point c ) in the heliport game should do .",
    "it s a difficult question , and full of consequences , and we do nt want to give her any wrong advice .",
    "so , let s think , and analyze first a similar , discretized game , the well - known puzzle shown in figure  [ 1puzzle ] . understanding this puzzle will allow us to make a definite recommendation .",
    "( 0.0,0 )    the task is now to create a perfect scrambling algorithm which generates any possible configuration of the puzzle with equal probability .",
    "one such method , the toddlers algorithm , is well known , and illustrated in figure  [ 1toddler ] together with one of its inventors .",
    "( 6.8,5 . )",
    "( 0.0,0 )    the theoretical baggage picked up in the last few sections allows us to class this method without hesitation among the direct sampling methods ( as the children s game before ) , since it creates an independent instance each time the puzzle is broken apart .",
    "we are rather interested in a grown - up people s algorithm , which respects the architecture of the game",
    ".    what would you do ? almost certainly , you would hold the puzzle in your hands and - at any time step - move the empty square in a random direction .",
    "the detailed balance condition which you will find out about in this section shows that this completely natural sounding algorithm is wrong .",
    "if the blank square is in the interior ( as in figure  [ 1puzzle ] ) then the algorithm should clearly be to choose one of the four possible directions with equal probability , and to move the empty square .",
    "as in the heliport game , we have to analyze what happens at the boundary of the square .",
    "( 6.9,4.3 ) ( 0.0,0 )    consider the corner configuration @xmath16 , which communicates with the configurations @xmath17 and @xmath18 , as shown in figure  [ 1detailed ] .",
    "if our algorithm ( yet to be found ) generates the configurations @xmath16 , @xmath17 and @xmath18 with probabilities @xmath19 , @xmath20 , and @xmath21 , respectively ( we impose them to be the same ) , we can derive a simple rate equation relating the @xmath4 s to the transition probabilities @xmath22 etc .",
    "since @xmath16 can only be generated from @xmath17 , @xmath18 , or from itself , we have @xmath23 this gives @xmath24   =    \\pi(b ) p(b\\rightarrow a ) + \\pi(c ) p(c\\rightarrow a ) \\label{at_a}\\ ] ] we write the condition which tells us that the empty square , once at @xmath16 , can stay at @xmath16 or move to @xmath17 or @xmath18 : @xmath25 which gives @xmath26 = p(a\\rightarrow b ) + p(a\\rightarrow c)$ ] .",
    "this formula , introduced in eq .",
    "( [ at_a ] ) yields @xmath27 we can certainly satisfy this equation if we equate the braced terms separately : @xmath28 this equation is the celebrated condition of detailed balance .",
    "we admire it for awhile , and then pass on to its first application , in our puzzle .",
    "there , we impose equal probabilities for all accessible configurations , i. e. @xmath29 , etc , and the only simple way to connect the proposed algorithm for the interior of the square with the boundary is to postulate an equal probability of @xmath30 for any possible move . looking at eq .",
    "( [ sumofprob ] ) , we see that we have to allow a probability of @xmath31 for @xmath32 .",
    "the consequence of this analysis is that to maximally scramble the puzzle , we have to be immobile with a probability @xmath31 in the corners , and with probability @xmath30 on the edges",
    ".    we can assemble all the different rules in the following algorithm : at each time step @xmath33    1 .",
    "choose one of the four directions with equal probability .",
    "2 .   move the blank square into the corresponding direction _ if possible_. otherwise , stay where you are , but advance the clock .",
    "i have presented this puzzle algorithm in the hope that you will not believe that it is true .",
    "this may take you to scrutinize the detailed balance condition , and to understand it better .",
    "recall that the puzzle game was in some respect a discretized version of the heliport game , and you will now be able to answer by analogy the question of the fashionable lady [ answerdb ] at c ) .",
    "notice that there is already a pebble at this point .",
    "the lady should now pick two more stones out of her handbag , place one of them on top of the stone already on the ground , and use the remaining one to try a new fling .",
    "if this is again an out - fielder , she should pile one more stone up etc .",
    "if you look onto the heliport after the game has been going on for awhile , you will notice a strange pattern of pebbles on the ground ( cf .",
    "figure  [ 1afterthegame ] ) .",
    "( 0.0,0 )    there are mostly single stones in the interior , and some more or less high piles as you approach the boundary , especially the corner .",
    "yet , this is the most standard way to enforce a constant density @xmath34 .",
    "it has happened that first - time listeners of these sentences are struck with utter incredulity .",
    "they find the piling - up of stones absurd and conclude that _ i _ must have gotten the story wrong . the only way to reinstall confidence is to show simulations ( of ladies flinging stones ) which do and do not pile up stones on occasions .",
    "you are invited to do the same ( start with one dimension ) .",
    "in fact , we have just seen the first instance of a rejection , which , as announced , is a keyword of this course , and of the monte carlo method in general .",
    "the concept of a rejection is so fundamental that it is worth discussing it in the completely barren context of a monaco airfield .",
    "rejections are the basic method by which the monte carlo enforces a correct density @xmath11 on the square , with an algorithm ( random  flings \" ) which is not particularly suited to the geometry .",
    "rejections are also wasteful ( of pebbles ) , and expensive ( you throw stones but in the end you just stay where you were ) .",
    "we will deepen our understanding of rejections considerably in the next sections .",
    "we have introduced the rejections by a direct inspection of the detailed balance condition .",
    "this trick has been elevated to the status of a general method in the socalled metropolis algorithm @xcite .",
    "there , it is realized that the detailed balance condition eq .",
    "( [ detail ] ) is verified if one uses @xmath35 what does this equation mean ?",
    "let s find out in the case of the heliport : standing at a ) ( which is inside the square , i.e. @xmath36 ) , you throw your pebble in a random direction ( to @xmath17 ) .",
    "two things can happen : either @xmath17 is inside the square ( @xmath37 ) , and eq .",
    "( [ metrop ] ) tells you to accept the move with probability @xmath38 , or @xmath17 is outside ( @xmath39 ) , and you should accept with probability @xmath40 , i.e. reject the move , and stay where you are .    after having obtained an operational understanding of the metropolis algorithm , you may want to see whether it is correct in the general case .",
    "for once , there is rescue through bureaucracy , for the theorem can be checked by a bureaucratic procedure : simply fill out the following form : +    [ cols=\">,^,^,^\",options=\"header \" , ]     fill out , and you will realize for both columns that the second and forth rows are identical , as stipulated by the detailed balance condition .",
    "you have understood all there is to the metropolis algorithm .      like a diamond tool",
    ", the metropolis algorithm allows you to `` grind down '' an arbitrary density of trial movements ( as the random stone - flings ) into the chosen stationary probability density @xmath11 .    to change the setting we discuss here how a general classical statistical physics model with an arbitrary high - dimensional energy @xmath41 ) is simulated ( cf the classic reference @xcite ) . in this case",
    ", the probability density is the boltzmann measure @xmath42 , and the physical expectation values ( energies , expectation values ) are given by formulas as in eq .",
    "( [ ratio_of_integs ] ) .",
    "all you have to do ( if the problem is not too difficult ) is to     * set up a ( rather arbitrary ) displacement rule , which should generalize the random stone - flings of the heliport game .",
    "for example , you may from an initial configuration @xmath43 go to a new configuration by choosing an arbitrary dimension i , and doing the random displacement on @xmath44 , with @xmath45 between @xmath46 and @xmath47 .",
    "discrete variables are treated just as simply . *",
    "having recorded the energies @xmath48 and @xmath49 at the initial point @xmath16 and the final point @xmath17 , you may use the metropolis algorithm to compute the probability , @xmath50 , to actually go there . @xmath51)\\ ] ] this is implemented using a single uniformly distributed random number @xmath52 , and we move our system to @xmath17 under the condition that @xmath53 , as shown in the figure .",
    "+ ( 4.,2.9 ) ( .0,0.0 ) * you notice that ( for continuous systems ) the remaining liberty in your algorithm is to adjust the value of @xmath54 .",
    "the time - honored procedure consists in choosing @xmath54 such that about half of the moves are rejected .",
    "this is of course just a golden rule of thumb .",
    "the `` @xmath55 '' rule , as it may be called , does in general insure quite a quick diffusion of your particle across configuration space .",
    "if you want to do better , you have to monitor the speed of your monte carlo diffusion , but it is usually not worth the effort .",
    "as presented , the metropolis algorithm is extremely powerful , and many problems are adequately treated with this method .",
    "the method is so powerful that for many people the theory of monte carlo stops right after equation ( [ detail ] ) .",
    "all the rest is implementation details , data collection , and the adjustment of @xmath54 , which was just discussed .",
    "many problems , especially in high dimensions , nevertheless defy this rule . for these problems , the programs written along the lines of the one presented above will run properly , but have a very hard time generating independent samples at all .",
    "these are the problems on which one is forced to either give up or compromise : use smaller sizes than one wants , take risks with the error analysis etc . the published papers , over time , present much controversy , shifting results , and much frustration on the side of the student executing the calculation .    prominent examples of difficult problems are phase transitions in general statistical models , hubbard model , bosons , and disordered systems .",
    "the strong sense of frustration can best be retraced in the case of the hard sphere liquid , which was first treated in the original @xmath56 publication introducing the metropolis algorithm , and which has since generated an unabating series of unconverged calculations , and heated controversies .",
    "a very useful system to illustrate a difficult simulation , shown in figure  [ 1oscillators ]    ( 10.6,4.1 ) ( 0.0,0 ) ( -1.,2.5 )    is the chain of @xmath13 springs with an energy @xmath57 @xmath58 and @xmath59 are fixed at zero , and @xmath60 are the lateral positions of the points , the variables of the system .",
    "how do we generate distributions according to @xmath61 ?",
    "a simple algorithm is very easily written ( you may recover `` ` spring.f ` '' from my www - site ) . according to the recipe given above",
    "you simply choose a random bead and displace it by a small amount .",
    "the whole program can be written in about @xmath5 lines .",
    "if you experiment with the program , you can also try to optimize the value of @xmath54 ( which will come out such that the average change of energy in a single move is @xmath62 ) .",
    "what you will find out is that the program works , but is extremely slow .",
    "it is so slow that you want to cry or to cray ( give up or use a supercomputer ) , and both would be ridiculous .",
    "let us analyze why a simple program for the coupled springs is so slow .",
    "the reason are the following    * your `` @xmath63 '' rule fixes the step size , which is necessarily very small . *",
    "the distribution of , say , @xmath64 , the middle bead , as expressed in units of @xmath54 is very large , since the whole chain will have a lateral extension of the order of @xmath65 .",
    "it is absolutely essential to realize that the distribution can never be intrinsically wide , but only in units of the imposed step size ( which is a property of the algorithm ) . *",
    "it is very difficult to sample a large distribution with a small stepsize , in the same way as it takes a very large bag of stones to get an approximate idea of the numerical value of @xmath4 if the heliport is much larger than your throwing range ( cf .",
    "figure  [ 1slow ] ) .",
    "+ ( 10.,5.1 ) ( 0.0,0.3 )    the difficulty to sample a wide distribution is the basic reason why simulations can have difficulties converging .    at this point ,",
    "i often encounter the remark : why ca nt i move several interconnected beads independently , thus realizing a large move ?",
    "this strategy is useless.[simultaneous ] in the big people s game , it corresponds to trying to save every second stone by throwing it into a random direction , fetching it ( possibly climbing over the fence ) , picking it up and throwing it again .",
    "you do nt gain anything since you already optimized the throwing range before .",
    "you already had an important probability of rejection , which will now become prohibitive .",
    "the increase in the rejection probability will more than annihilate the gain in stride .    as set up , the thermal spring problem is difficult because the many degrees of freedom @xmath66 are strongly coupled .",
    "random @xmath54-moves are an extremely poor way to deal with such systems . without an improved strategy for the attempted moves ,",
    "the program very quickly fails to converge , _ i e _ to produce even a handful of independent samples .    in the coupled spring problem ,",
    "there are essentially two ways to improve the situation .",
    "the first consists in using a basis transformation , in this case in simply going to fourier space .",
    "this evidently decouples the degrees of freedom .",
    "you may identify the fourier modes which have a chance of being excited .",
    "if you write a little program , you will very quickly master a popular concept called `` fourier acceleration '' .",
    "an exercise of unsurpassed value is to extend the program to an energy which contains a small additional anisotropic coupling of the springs and treat it with both algorithms .",
    "fermi , pasta and ulam , in @xmath67 , were the first to simulate the anisotropic coupled chain problem on a computer ( with a deterministic algorithm ) and to discover extremely slow thermalization .",
    "the basis transformation is a specific method to allow large moves .",
    "usually , it is however impossible to find such a transformation . a more general method to deal with difficult interacting problems consists in isolating subproblems which you can more or less sample easily and",
    "solve exactly . the _ a priori _ information gleaned from this analytical work",
    "can then be used to propose exactly those ( large ) moves which are compatible with the system .",
    "the proposed moves are then rendered correct by means of a generalized monte carlo algorithm .",
    "a modified metropolis rejection remains , it corrects the `` engineered '' density into the true stationary probability .",
    "we will first motivate this very important method in the case of the coupled chain example , and then give the general theory , and present a very important application to spin models .    to really understand what is going on in the coupled spring problem , let s go back to figure  [ 1oscillators ] , and analyze a part only of the whole game :",
    "the motion of the bead labeled @xmath68 with @xmath69 and @xmath70 ( for the moment ) immobilized at some values @xmath71 and at @xmath72 .",
    "it is easy to do this simulation ( as a thought experiment ) and to see that the results obtained are as given in figure  [ 1probaaccept ] .",
    "you see that the distribution function @xmath73 ,    ( 6.7,5.5 ) ( 0.0,0 )    ( at fixed @xmath71 and @xmath72 ) is a gaussian centered around @xmath74 .",
    "note however that there are in fact two distributions : the accepted one and the rejected one .",
    "it is the metropolis algorithm which , through the rejections , modifies the proposed - flat - distribution into the correct gaussian .",
    "we see that the rejections - besides being a nuisance - play the very constructive role of modifying the proposed moves into the correct probability density . there is a whole research literature on the use of rejection methods to sample @xmath75dimensional distributions ( cf @xcite , chap 7.3 ) ,  a subject which we will leave instantly because we are more interested in the higher - dimensional case .",
    "let us therefore extend the usual formula for the detailed balance condition and for the metropolis algorithm , by taking into account the possible `` _ _ a priori _ _ ''",
    "choices of the moves , which is described by an a priori probability @xmath76 to attempt the move . in the heliport game , this probability was simply @xmath77 with @xmath54 the throwing range , and we did not even notice its presence . in the elastic spring example , the probability to pick a bead @xmath68 , and to move it by a small amount @xmath78 was also independent of @xmath68 , and of the actual position @xmath79 .    now , we reevaluate the detailed balance equation , and allow explicitly for an algorithm : the probability @xmath80 is split up into two separate parts @xcite : @xmath81 where @xmath82 is the ( still necessary ) acceptance probability of the move proposed with @xmath76 . what is this rejection probability ?",
    "this is very easy to obtain from the full detailed balance equation @xmath83 you can see , that for any _ a priori _ probability , i.e. for any monte carlo algorithm we may find the acceptance rate which is needed to bring this probability into accordance with our unaltered detailed balance condition . as before , we can use a metropolis algorithm to obtain ( one possible ) correct acceptance rate @xmath84 which results in @xmath85 evidently , this formula reduces to the original metropolis prescription if we introduce a flat _ a priori _ probability ( as in eq .",
    "( [ simpleapriori ] ) ) . as it stands , eq .",
    "( [ metropmod ] ) states the basic algorithmic liberty which we have in setting up our monte carlo algorithms : any possible bias @xmath76 can be made into a valid monte carlo algorithm since we can always correct it with the corresponding acceptance rate @xmath82 .",
    "of course , only a very carefully chosen probability will be viable , or even superior to the simple and popular choice eq .",
    "( [ metrop ] ) .",
    "inclusion of a general _ a priori _ probability is mathematically harmless , but generates a profound change in the practical setup of our simulation . in order to evaluate the acceptance probability in eq .",
    "( [ metropmod ] ) , @xmath82 , we not only propose the move to @xmath17 , but also need explicit evaluations of both @xmath76 and of the return move @xmath86 .",
    "can you see what has changed in the eq .",
    "( [ metropmod ] ) with respect to the previous one ( eq .  ( [ metrop ] ) ) ? before , we necessarily had a large rejection probability whenever getting from a point @xmath16 with high probability ( large @xmath19 ) to a point @xmath17 which had a low probability ( small @xmath20 ) .",
    "the naive metropolis algorithm could only produce the correct probability density by installing rejections .",
    "now we can counteract , by simply choosing an _ a priori _ probability which is also much smaller .",
    "in fact , you can easily see that there is an an optimal choice : we may be able to use as an _ a priori _ probability @xmath76 the probability density @xmath20 and @xmath86 the probability density @xmath19 . in that case , the ratio expressed in eq .",
    "( [ metropmod ] ) will always be equal to @xmath38 , and there will never be a rejection . of course , we are then also back to direct sampling  where we came from because direct sampling was too difficult  .",
    "the argument is not circular , as it may appear , because it can always be applied to a part of the system . to understand this point , it is best to go back to the example of the elastic string .",
    "we know that the probability distribution @xmath87 for fixed @xmath71 and @xmath72 is @xmath88 \\label{1move}\\ ] ] with @xmath74 .",
    "we can now use exactly this formula as an _ a priori _",
    "probability @xmath89 and generate an algorithm without rejections , which thermalizes the bead @xmath68 at any step with its immediate environment . to program this rule , you need gaussian random numbers ( cf .",
    "@xcite for the popular box - muller algorithm ) .",
    "so far , however , the benefit of our operation is essentially non - existent .",
    "it is now possible to extend the formula for @xmath79 at fixed @xmath71 and @xmath72 to a larger window . integrating over @xmath71 and @xmath72 in @xmath90",
    ", we find that @xmath91 \\label{2move}\\ ] ] where , now , @xmath92 .",
    "having determined @xmath79 from a sampling of eq .",
    "( [ 2move ] ) , we can subsequently find values for @xmath71 and @xmath72 using eq .",
    "( [ 1move ] ) .",
    "the net result of this is that we are able to update @xmath93 simultaneously .",
    "the program `` ` levy.f ` '' which implements this so called lvy construction can be retrieved and studied from my www - site .",
    "it generates large moves with arbitrary window size without rejections .      from this simple example of the coupled spring problem",
    ", you can quickly reach all the subtleties of the monte carlo method .",
    "you see that we were able to produce a perfect algorithm , because the _ a priori _ probability @xmath94 could be chosen equal to the stationary probability @xmath95 resulting in a vanishing rejection rate .",
    "this , however , was just a happy accident .",
    "the enormous potential of the _ a priori _ probability resides in the fact that eq .",
    "( [ metropmod ] ) deteriorates ( usually ) very gracefully when @xmath96 and @xmath97 differ . a recommended way to understand this point consists in programming a second program for the coupled chain problem , in which you again add a little perturbing term to the energy , such as @xmath98 which is supposed to be relatively less important than the elastic energy .",
    "it is interesting to see in which way the method adapts if we keep the above lvy - construction as an algorithm .",
    "if you go through the following argument , and possibly even write the program and experiment with its results , you will find the following    * the energy of each configuration now is @xmath99 , where @xmath100 is the term given in eq .",
    "( [ oscillators ] ) , which is in some way neutralized by the _ a priori _ probability @xmath101 $ ] .",
    "one can now write down the metropolis acception rate of the process from eq .",
    "( [ metropmod ] ) .",
    "the result is @xmath102}{\\exp[-\\beta e_1(a ) ] } \\right ) \\label{metropmodappl}\\ ] ] this is exactly the naive metropolis algorithm eq .",
    "( [ metrop ] ) , but exclusively with the newly added term of the energy . * implementing the _ a priori _ probability with @xmath103 , your code runs with acceptance probability @xmath38 , independent of the size of the interval @xmath104 .",
    "if you include the second term @xmath105 , you will again have to optimize this size .",
    "of course , you will find that the optimal window corresponds to a typical size of @xmath106 . * with this cutting - up of the system into a part which you can solve exactly , and an additional term , you will find out that the monte carlo algorithm has the appearance of a perturbation method . of course , it will always be exact .",
    "it has all the chances to be fast if @xmath105 is typically smaller than @xmath107 .",
    "one principal difference with perturbation methods is that it will always sample the full perturbed distribution @xmath108 $ ] .",
    "one can spend an essentially endless time pondering about the _ a priori _ probabilities , and the similarities and differences with perturbation theory .",
    "this is where the true power of the monte carlo method lies .",
    "this is what one has to understand before venturing into custom tailering tomorrow s powerful algorithms for the problems which are today thought to be out of reach . programming a simple algorithm for the coupled oscillators will be an excellent introduction into the subject . useful further literature are @xcite , where the coupled spring problem is extended into one of the most successful applications to quantum monte carlo methods , and @xcite , where some limitations of the approach are outlined .    in any case , we should understand that a large rate of rejections is always indicative of a structure of the proposed moves which is unadapted to the probability density of the model at the given temperature .",
    "the benefit of fixing this problem - if we only see how to do it - is usually tremendous : doing the small movements with negligible rejection rate often allows us to do larger movements , and to explore the important regions of configuration space all the more quickly .    to end this section",
    ", i will give another example : the celebrated cluster methods in lattice systems , which were introduced ten years ago by swendsen and wang @xcite and by wolff @xcite .",
    "there again , we find the two essential ingredients of slow algorithms : necessarily small moves , and a wide distribution of the physical quantities . using the concept of _ a priori _ probabilities",
    ", we can very easily understand these methods .",
    "i will discuss these methods in a way which brings out clearly the `` engineering '' aspect of the _ a priori _ probability , where one tries to cope with the large distribution problem . before doing this ,",
    "let us discuss , as before , the general setting and the physical origin of the slow convergence .",
    "as we all know , the ising model is defined as a system of spins on a lattice with an energy of @xmath109 where the spins can take on values of @xmath110 , and where the sum runs over pairs of neighboring lattice sites .",
    "a simple program is again written in a few lines : it picks a spin at random , and tries to turn it over .",
    "again , the _ a priori _ probability is flat , since the spin to be flipped is chosen arbitrarily .",
    "you may find such a program ( `` ` simpleising.f ` '' ) on my www site .",
    "using this program , you will very easily be able to recover the phase transition between a paramagnetic and a ferromagnetic phase , which in two dimensions takes place at a temperature of @xmath111 ( you may want to look up the classic reference @xcite for exact results on finite lattices ) .",
    "you will also find out that the program is increasingly slow around the critical temperature .",
    "this is usually interpreted as the effect of the divergence of the correlation length as we approach the critical point . in our terms , we understand equally well this slowing - down : our simple algorithm changes the magnetization by at most a value of @xmath112 at each step , since the algorithm flips only single spins .",
    "this discrete value replaces the @xmath54 in our previous example of the coupled springs . if we now plot histograms of the total magnetization of the system ( in units of the stepsize @xmath113 ! ) , we again see that this distribution becomes `` wide '' as we approach @xmath114 ( cf figure  [ 1histogram ] ) .",
    "( 0.0,0 )    clearly , the total magnetization has a wide distribution , which it is extremely difficult to sample with a single spin - flip algorithm .    to appreciate the cluster algorithms",
    ", you have to understand two things :    1 .   as in the coupled spring problem",
    ", you can not simply flip several spins simultaneously ( cf the discussion on page  . )",
    "you want to flip large clusters , but on the other hand you can not simply solder together all the spins of one sign which are connected to each other , because those could never again get separated .",
    "2 .   if you can not solidly fix the spins of same sign with probability @xmath38 , you have to choose adjacent coaligned spins with a certain probability @xmath50 .",
    "this probability @xmath50 is the construction parameter of our _ a priori _",
    "probability @xmath96 .",
    "the algorithm will run for an arbitrary value of @xmath50 ( @xmath115 corresponding to the single spin - flip algorithm ) , but the @xmath50 minimizing the rejections will be optimal .",
    "the cluster algorithm we find starts with the idea of choosing an arbitrary starting point , and adding `` like '' links with probability @xmath50 .",
    "we arrive here at the first nontrivial example of the evaluation of an _ a priori _ probability .",
    "consider the figure  [ 1swendsen ] .",
    "imagine that we start from a `` + '' spin in the gray area of configuration a ) and add `` like '' spins .",
    "what is the _ a priori _",
    "probability @xmath116 and the inverse probability @xmath117 , and what are the boltzmann weights @xmath19 and @xmath20 ?",
    "@xmath116 is given by a term concerning interior `` +  + '' links , @xmath118 , which looks difficult , and which we do nt even try to evaluate , and a part concerning the boundary of the cluster .",
    "this boundary is made up of two types of links , as summarized below    ( 11,4.5 ) ( 0.0,0 ) ( 6.5,0 )    @xmath119    ( in the example of figure  [ 1swendsen ] , we have @xmath120 and @xmath121 ) .",
    "the _ a priori _ probability is @xmath122 . to evaluate the boltzmann weight ,",
    "we also abstain from evaluating terms which do nt change between a ) and b ) : we clearly only need the boundary energy , which is given in eq .",
    "( [ atob ] ) .",
    "it follows that @xmath123 $ ] .",
    "we now consider the inverse move . in the cluster",
    "b ) , the links across the boundary are as follows : @xmath124 the _ a priori _ probability to construct this cluster is again put together by an interior part , which is exactly the same as for the cluster in a ) , and a boundary part , which is changed : @xmath125 .",
    "similarly , we find that @xmath126 $ ] .",
    "it is now sufficient to put everything into the formula of the detailed balance @xmath127 } ( 1-p)^{c_2 } \\mathcal { p}(a\\rightarrow b ) = e^{-\\beta [ c_2 - c_1 ] } ( 1-p)^{c_1 } \\mathcal { p}(b\\rightarrow a)\\ ] ] which results in the acceptance probability : @xmath128}(1-p)^{c_1 } } { e^{-\\beta [ c_1 - c_2]}(1-p)^{c_2 } } ) \\label{generalswendsen}\\ ] ] the most important point of this equation is not that it can be simplified , as we will see in a minute , but that it is perfectly explicit , and may be evaluated without problem : once your cluster is constructed , you could simply evaluate @xmath129 and @xmath130 and compute the rejection probability from this equation .    on closer inspection of the formula eq .",
    "( [ generalswendsen ] ) , you see that , for @xmath131 $ ] , the acceptance probability is always @xmath38 .",
    "this is the `` magic '' value implemented in the algorithms of swendsen - wang and of wolff .",
    "the resulting algorithm @xcite is very simple , and follows exactly the description given above : you start picking a random spin , and add coaligned neighbors with probability @xmath50 , the construction stops once none of the `` like '' links across the growing cluster has been chosen . if you are interested , you may retrieve the program `` ` wolff.f ` '' from my www - site .",
    "this program ( which was written in less than an hour ) explains how to keep track of the cluster construction process .",
    "it is amazing to see how it passes the curie point without any perceptible slowing - down .",
    "once you have seen such a program churn away at the difficult problem of a statistical physics model close to the critical point you will come to understand what a great pay - off can be obtained from an intelligent use of powerful monte carlo ideas .",
    "we arrive at the end of the introduction to equilibrium monte carlo methods .",
    "i hope to have given a comprehensible introduction to the way the method presents itself in most statistical physics contexts :    * the ( equilibrium ) monte carlo approach is an integration method which converges slowly , but surely .",
    "except in a few cases , one is always forced to sample the stationary density ( boltzmann measure , density matrix in the quantum case ) by a markov chain approach .",
    "the critical issue there is the correlation time , which can become astronomical . in the usual application ,",
    "one is happy with a very small number of truly independent samples , but an appallingly large number of computations never succeed in decorrelating the markov chain from the initial condition . *",
    "the regular methods work well , but have some important disadvantages .",
    "as presented , the condition that the rejection rate has to be quite small - typically of the order of @xmath31 - reduces us to very local moves .",
    "* the acceptance rate has important consequences for the speed of the program , but a small acceptance rate is in particular an indicator that the proposed moves are inadequate . * it would be wrong to give the impression that the situation can always be ameliorated - sometimes one is simply forced to do very big calculations . in many cases",
    "however , a judicious choice of the _ a priori _ probability allows us to obtain very good acceptance rates , even for large movements .",
    "this work is _ important _ , and it frequently leads to an exponential increase in efficiency .",
    "usually , together with the fundamental concept of detailed balance , one finds also a discussion of ergodicity , since it is the combination of both principles which insures that the simulation will converge to the correct probability density .",
    "ergodicity simply means that any configuration @xmath17 can eventually be reached from the initial configuration @xmath16 , and we denote it by @xmath132 .      *",
    "trivially , when your monte carlo dynamics for some reasons only samples part of phase space , split off , _",
    "e.g. _ , by a symmetry principle .",
    "an amusing example is given by the puzzle game we considered already in section [ toddler ] [ ergodbreak ] : it is easy to convince yourself that the toddlers algorithm is not equivalent to the grown - up algorithm , and that it creates only half of the possible configurations .",
    "consider those configurations of the puzzle with the empty square in the same position , say in the lower right corner , as in figure  [ 2puzzle ] .",
    "+    + two such configurations can only be obtained from each other if the empty square describes a closed path , and this invariably corresponds to an even number of steps ( transpositions ) of the empty square .",
    "the first two configurations in figure  [ 2puzzle ] can be obtained by such a path . the third configuration ( to the right )",
    "differs from the middle one in only one transposition .",
    "it can therefore not be obtained by a local algorithm .",
    "ergodicity breaking of the present type is very easily fixed , by simply considering a larger class of possible moves . *",
    "the much more vicious ergodicity breaking appears when the algorithm is `` formally correct '' , but is simply too slow .",
    "after a long simulation time , the algorithm may not have visited all the relevant corners of configuration space",
    ". the algorithm may be too slow by a constant factor , a factor @xmath13 , or @xmath133  .",
    "ergodicity breaking of this kind sometimes goes unnoticed for a while , because it may show up clearly only in particular variables , _",
    "etc_. very often , the system can be solidly installed in some local equilibrium , which does however not correspond to the thermodynamically stable state .",
    "it always invalidates the monte carlo simulation .",
    "there are many examples of this type of ergodicity breaking , _",
    "e. g. _ in the study of disordered systems .",
    "notice that the abstract proof that no `` trivial '' accident happens does not protect you from a `` vicious '' one .    for orientation ( and knowing that i may add to the confusion )",
    "i would want to warn the reader to think that in a benign simulation all the configuration have a reasonable chance to be visited .",
    "this is not at all the case , even in small systems . using the very fast algorithm for the ising model which i presented in the last chapter , you may for yourself generate energy histograms of , say , the @xmath134 ising model at two slightly different temperatures ( above the curie point ) .",
    "even for very small differences in temperature , there are many configurations which have no practical chance to ever be generated at one temperature , but which are commonly encountered at another temperature .",
    "this is of course the legacy of the metropolis method where we sample configurations according to their statistical weight @xmath135 $ ] .",
    "this socalled `` importance sampling '' is the rescue ( and the danger ) of the monte carlo method - but is related only to the equilibrium properties of the process .",
    "ergodicity breaking - a sudden slowdown of the simulation - may be completely unrelated to changes in the equilibrium properties of the system .",
    "there are a few models in which this problem is discussed . in my opinion",
    ", none is as accessible as the work of ref @xcite which concerns a modified ising model , which undergoes a purely dynamic roughening transition .",
    "we retain that the absolute probability @xmath132 can very rarely be evaluated explicitly , and that the formal mathematical analysis is useful only to detect the `` trivial '' kind of ergodicity violation .",
    "very often , careful data analysis and much physical insight is needed to assure us of the practical correctness of the algorithm .",
    "one is of course very interested in the numerical study of the phenomena associated with very slow dynamics , such as relaxation close to phase transitions , as glasses , spin glasses , _",
    "etc_. we have just seen that these systems are _ a priori _ difficult to study with monte carlo methods , since the stationary distribution is never reached during the simulation .",
    "it is characteristic of the way things go in physics that - nonwithstanding these difficulties - there is often no better method to study these systems than to do a ",
    "monte carlo simulation ! in dynamical monte carlo ,",
    "one is of course bound to a specific monte carlo algorithm , which serves as a model for the temporal evolution of the system from one local equilibrium state to another . in these cases ,",
    "one knows by construction that the monte carlo algorithm will drive the system towards the equilibrium , but very often after a time much too large to be relevant for experiment and simulation .",
    "so one is interested in studying relaxation of the system from a given initial configuration .",
    "the conceptual difference of the equilibrium monte carlo ( which was treated in the last chapter ) with the dynamical monte carlo methods can not be overemphasized . in the first one ,",
    "we have an essentially unrestricted choice of the algorithm ( expressed by the _ a priori _ probability , which was discussed at length ) , since one is exclusively interested in generating independent configurations @xmath136 distributed according to @xmath137 . in the thermodynamic monte carlo ,",
    "the temporal correlations are just a nuisance . as we turn to dynamical calculations",
    ", these correlations become the main object of our curiosity . in dynamical simulations ,",
    "the _ a priori _ probability is of course fixed .",
    "also , if the monte carlo algorithm is ergodic both in principle and in practice , the static results will naturally be independent of the algorithm .",
    "you may ask whether there is any direct relationship between the metropolis dynamics ( which serves as our model ) , and the true physical time of the experiment , which would be obtained by a numerical integration of the equations of motion , as is done for example in molecular dynamics .",
    "there has been a lot of discussion of this point and many simulations have been devoted to an elucidation of this question for , say , the hard sphere liquid .",
    "all these studies have confirmed our intuition ( as long as we stay with purely local monte carlo rules ) : the difference between the two approaches corresponds to a renormalization of time , as soon as we leave a ballistic regime ( times large compared to the mean - free time ) .",
    "the monte carlo dynamics is very often simpler to study .    in equilibrium monte carlo",
    ", theory does not stop with the naive metropolis algorithm .",
    "likewise , in dynamical simulation there is also room for much algorithmic subtlety .",
    "in fact , even though our model for the dynamics is fixed , we are not forced to implement the metropolis rejections blindly on the computer .",
    "again , it s the rate of rejections which serves as an important indicator that something more interesting than the naive metropolis algorithm may be tried .",
    "the keyword here are faster than the clock algorithms which are surprisingly little appreciated , even though they often allow simulations of unprecedented speed .            a magnetic field @xmath139 , at finite temperature .",
    "the energy of each of the two configurations is @xmath140 we consider the metropolis algorithm of eq .",
    "( [ metrop ] ) to model the dynamical evolution of the system and introduce an explicit time step @xmath141 .",
    "@xmath142 & ( \\mbox{otherwise } ) \\end{array } \\right . \\label{dynamicmonte}\\ ] ] to be completely explicit , we write down again how the spin state for the next time step is evaluated in the metropolis rejection procedure : at each time step",
    "@xmath143 we compute a random number @xmath144 and compare it with the probability @xmath50 from eq .",
    "( [ dynamicmonte ] ) : @xmath145 this rule assures that , asymptotically , the two configurations are chosen with the boltzmann distribution . notice that , whenever we are in the excited `` @xmath146 '' state of the single spin model , our probability to fall back on the next time step is @xmath38 , which means that the system will flip back to the `` @xmath147 '' state on the next move .",
    "therefore , the simulation will look as follows : @xmath148 as the temperature is lowered , the probability to be in the excited state will gradually diminish , and you will spend more and more time computing random numbers in eq .  ( [ dynreject ] ) , but rejecting the move from @xmath149 to @xmath150 .    at the temperature @xmath151 ,",
    "the probability to flip the spin is exactly @xmath152 , and the physical problem is then identical to the game of the little boy depicted in figure [ 2boy ] .",
    "he is playing with      a special die , with @xmath153 empty faces ( corresponding to the rejections @xmath154 ) and one face with the inscription `` flip '' ( @xmath155 , @xmath156 ) .",
    "the boy will roll the die over and over again , but of course most of the time the result of the game is negative . as the games goes on , he will expend energy , get tired , etc etc , mostly for nothing . only very rarely does he encounter the magic face which says `` flip '' . if you play this game in real life or on the computer , you will soon get utterly tired of all these calculations which result in a rejection , and you may get the idea that there must be a more economical way to arrive at the same result . in fact , you can predict analytically what will be the distribution of time intervals between `` flips '' . for the little boy , at any given time , there is a probability of @xmath157 that one roll of the die will result in a rejection , and a probability of @xmath158 that two rolls result in successive rejections , etc .",
    "the numbers @xmath159 are shown in the lower part of figure  [ 2boy ] .",
    "you can easily convince yourself that the shaded space in the figure corresponds to the probability @xmath160 to have a flip at exactly the third roll .",
    "so , to see how many times you have to wait until obtaining a `` flip '' , you simply draw a random number ran @xmath52 , and check into which box it falls .",
    "the box index @xmath161 is calculated easily : @xmath162",
    "what this means is that there is a very simple program `` ` dice.f ` '' , which you can obtain from my www - site , and which has the following characteristics :    * the program has no rejection . for each random number drawn",
    ", the program computes a true event : the waiting time for the next flip . *",
    "the program thus is `` faster than the clock '' in that it is able to predict the state of the boy s log - table at simulation time t with roughly t/6 operations . *",
    "the output of the accelerated program is completely indistinguishable from the output of the naive metropolis algorithm .",
    "it is of course possible to generalize the little example from a probability @xmath163 to a general value of @xmath164 , and from a single spin to a general statistical mechanics problem with discrete variables . ",
    "i hope you will remember the trick next time that you are confronted to a simulation , and the terminal output indicates one rejection after another .",
    "so you will remember that the proper rejection method eq .",
    "( [ dynreject ] ) is just one possible implementation of the metropolis algorithm eq .",
    "( [ dynamicmonte ] ) .",
    "the method has been used to study different versions of the ising model , disordered spins , kinetic growth and many other phenomena . at low temperatures , when the rejection probabilities increase",
    ", the benefits of this method can be enormous .",
    "so , you will ask why you have never heard of this trick before .",
    "one of the reason for the relative obscurity of the method can already be seen on the one - spin example : in fact you see that the whole method does not actually use the factor @xmath152 , which is the probability to do something , but with @xmath165 , which is the probability to do nothing . in a general spin model",
    ", you can flip each of the @xmath13 spins . as input to your algorithm computing waiting times",
    ", you again need the probability `` to do nothing '' , which is @xmath166\\ ] ] if these probabilities all have to be computed anew for each new motion , the move becomes quite expensive ( of order @xmath13 ) .",
    "a straightforward implementation therefore has all the chances to be too onerous to be extremely useful . in practice , however , you may encounter enormous simplifications in evaluating @xmath164 for two reasons :    * you may be able to use symmetries to compute all the probabilities .",
    "since the possible probabilities to flip a spin fall into a finite number @xmath167 of classes . the first paper on accelerated dynamical monte carlo algorithms @xcite has coined the name `` n - fold way '' for this strategy .",
    "* you may be able to simply look up the probabilities , instead of computing them , since you did nt visit the present configuration for the first time and you took notes @xcite .",
    "we now discuss the main characteristics of the method , as applied to a general spin model with configurations @xmath168 made up of @xmath13 spins @xmath169 .",
    "we denote the configuration obtained from @xmath168 by flipping the spin @xmath170 as @xmath171}$ ] .",
    "the system remains in configuration @xmath168 during a time @xmath172 , so that the time evolution can be written as @xmath173 the probability of flipping spin @xmath170 is given by @xmath174},\\delta\\tau ) = \\frac{\\delta\\tau}{n } \\left\\ { \\begin{array}{cl } 1                         & ( \\mbox{if}\\;\\ ; e(s_i^{[m ] } ) <",
    "e(s_i ) ) \\\\ \\exp[-\\beta ( \\delta e ) ]   & ( \\mbox{otherwise } )",
    "\\end{array } \\right .",
    "\\label{transition}\\ ] ] where the @xmath175 factor expresses the the @xmath175 probability to select the spin @xmath170 . after computing @xmath176})$ ]",
    ", we obtain the waiting time as in eq .",
    "( [ boxforl ] ) , which gives the exact result for a finite values of @xmath177 .",
    "of course , in the limit @xmath178 , the eq .  ( [ boxforl ] ) simplifies , and we can sample the time to stay in @xmath168 directly from an exponential distribution @xmath179 ( cf @xcite chap . 7.2 for how to generate exponentially distributed random numbers ) .    if we have then found out that after a time @xmath180 we are going to move from our configuration @xmath181 , where are we going ?",
    "the answer to this question can be simply understood by looking at figure  [ 2pile ] :      there we see the `` pile '' of all the probabilities which were computed .",
    "if the waiting time @xmath172 is obtained from @xmath182 , we choose the index @xmath183 $ ] of the flipped spin with a probability @xmath184})$ ] . to do this , you need all the elements to produce the box in figure  [ 2pile ] i. e. the probabilities : @xmath185})+p(s \\rightarrow s^{[2]})+\\ldots p(s \\rightarrow s^{[n]})=\\lambda\\\\ \\vdots\\\\ p(s \\rightarrow s^{[1]})+p(s \\rightarrow s^{[2]})\\\\ p(s \\rightarrow s^{[1]})\\\\ \\end{array } \\label{pileofprob}\\ ] ] in addition , one needs a second random number ( @xmath186 ) to choose one of the boxes ( cf the problem in figure [ 2boy ] ) .",
    "the best general algorithm to actually compute @xmath170 is of course not `` visual inspection of a postscript figure '' , but what is called `` search of an ordered table '' .",
    "this you find explained in any book on basic algorithms ( cf , for example @xcite , chap .",
    "3.2 ) . locating",
    "the correct box only takes of the order of @xmath187 operations .",
    "the drawback of the computation is therefore that any move costs an order of @xmath13 operations , since in a sense we have to go through all the possibilities of doing something before knowing our probability `` to do nothing '' .",
    "this expense is the price to be payed in order to completely eliminate the rejections .",
    "once you have understood the basic idea of accelerated algorithms , you may wonder how these methods are implemented , and whether it s worth the trouble . in cases",
    "in which the local energy is the same for any lattice site , you will find out that the probabilities can take on only @xmath167 different values . in the case of the @xmath112-dimensional ising model ,",
    "there are @xmath5 classes that the spin can belong to , ranging from up - spin with @xmath188 neighboring up - spins , up - spin with @xmath189 neighboring up - spins , to down - spin with @xmath188 neighboring down - spins . knowing the repartition into different classes at the initial time",
    ", you see that flipping the spin changes the classes of @xmath153 spins , and can be seen as a change of the number of particles belonging to the different classes . using a somewhat more intricate bookkeeping",
    ", we can therefore compute the value of @xmath164 in a constant number of operations , and the cost of making a move is reduced to order @xmath190 .",
    "you see that the accelerated algorithm has truly solved the problem of small acceptance probabilities which haunts so many simulations at low temperature ( for practical details , see refs  @xcite , @xcite ) .    ",
    "if you program the method , the impression of bliss may well turn into frustration , for we have overlooked an important point : the system s dynamics , while without rejections , may still be futile .",
    "consider for concreteness an energy landscape as in figure  [ 2landscape ] ,      where any configuration ( one of the little dots ) is connected to two other configurations .",
    "imagine the system at one of the local minima at some initial time . at the next time step",
    ", it will move to one of the neighboring sites , but it will almost certainly fall back right afterwards . at low temperature , the system will take a very long time ( and , more importantly , a very large number of operations ) before hopping over one of the potential barriers . in these cases ,",
    "the dynamics is extremely repetitive , futile . if such behavior is foreseeable , it is of course wasteful to recompute the  ` pile of probabilities' eq .",
    "( [ pileofprob ] ) , and even to embark on the involved book - keeping tricks of the n - fold way algorithm . in these cases , it is much more economical to save much of the information about the probabilities , and to look up all the relevant information .",
    "an archive can be set up in such a way that , upon making the move @xmath191}$ ] we can quickly decide whether we have seen the new configuration before , and we can immediately look up the `` pile of probabilities '' .",
    "this leads to extremely fast algorithms ( for practical details , see @xcite , @xcite ) .",
    "systems in which this approach can be used contain : flux lines in a disordered superconductor , the nnn ising model @xcite alluded to earlier , disordered systems with a so - called single - step replica symmetry breaking transition , and in general systems with steep local minima . for these systems it is even possible to produce a second - generation algorithm , which not only accepts a move at every timestep , but even a move to a configuration which the system has never seen before .",
    "one such algorithm has been proposed in @xcite , cf also @xcite .",
    "there are endless possibilities to improve the dynamical algorithms for some systems .",
    "of course , the more powerful a method the less frequently it can be applied .",
    "it should be remembered that the above method is only of use if the probability to do nothing is very large , and/or if the dynamics is very repetitive ( steep local minimum of energy function in figure  [ 2landscape ] ) . a large class of systems for which none of these conditions hold",
    "are the spin glasses with a socalled continuous replica symmetry breaking transition , as the sherrington - kirkpatrick model . in these cases ,",
    "the ergodicity breaking takes place very `` gracefully '' , there are very many configurations accessible for any given initial condition . in this case",
    ", there seems to be very little room for improvements of the basic method .",
    "i do not want to leave the reader with the impression that the accelerated algorithms are restricted only to spin models .",
    "in fact , intricate rapid methods can be conceived in most cases in which you have many rejections in a dynamical simulation .",
    "these rejections simply indicate that the time to `` do something '' may be much larger than the simulation time step .",
    "the following example , random sequential adsorption , was already mentioned in section [ monaco ] .",
    "imagine a large two - dimensional square on which you deposit one coin per second - but attention : we only put the coin if it does not overlap with any of the coins already deposited .",
    "the light - gray coin in the figure  [ 2deposit ] will immediately be taken away .",
    "* the game will stop at the moment at which it is impossible to deposit a new coin .",
    "what is the time after which this `` jamming '' state is reached and what are its properties ?",
    "* we would also like to know the mean density as a function of time for a large number of realizations .",
    "i will give here a rather complete discussion of this problem in six steps , displaying the panoply of refinements which can be unfolded as we come to understand the program .",
    "there is a large research literature on the subject , but you will see that you can yourself find an optimal algorithm by simply applying what we have learned in the problem of the rolling die .      you can write a program simulating in a few minutes .",
    "you need a table which contains the ( @xmath192 ) positions of the @xmath193 coins already deposited , and a random number generator which will give the values of @xmath194 .",
    "if you run the program , you will see that even for modest sizes of the box , it will take quite a long time before it stops .",
    "you may say `` well , the program is slow , simply because the physical process of random absorption is slow , there is nothing i can do  '' .",
    "if that is your reaction , you may gain something from reading on .",
    "you will find out that there is a whole cascade of improvement that can be imported into the program .",
    "these improvements concern not only the implementation details but also the deposition process itself , which can be simulated faster than in the experiment - especially in the final stages of the deposition .",
    "again , there is a faster than the clock algorithm , which deposits ( almost ) one particle per unit time .",
    "these methods have been very little explored in the past .",
    "the first thing you will notice is that the program spends a lot of time computing distances between the proposed point ( @xmath194 ) and the coins which are already deposited .",
    "it is evident that you will gain much time by performing only a local search .",
    "this is done with a grid , as shown in figure  [ 2grid ] and by computing the table of all the particles contained in each of the little squares . as you try to deposit the particle at @xmath195 , you first        compute the square which houses the point ( @xmath194 ) and then compute the overlaps with particles contained in neighboring squares",
    ". some bookkeeping is necessarily involved , and varies with the size of the squares adopted .",
    "there has been a lot of discussion about how big the little squares have to be taken , and there is no clear - cut answer .",
    "some people prefer a box of size approximately @xmath196 times the radius of the spheres . in this case",
    "you are sure that at most @xmath38 sphere per square is present , but the number of boxes which need to be scrutinized is quite large .",
    "others have adopted larger boxes which have the advantage that only the contents of @xmath197 boxes have to be checked . in any case , one gains an important factor @xmath198 with respect to the naive implementation .      since we said that we want to play the game up to the bitter end",
    ", you may want to find out whether there is at all a possibility to deposit one more coin .",
    "the best thing to do is to write a program which will tell you whether the square can host one more point . to do this",
    ", you have to apply basic trigonometry to find out whether the whole square is covered with `` exclusion disks '' , as shown in figure [ 2grid ]      try to apply the idea of an exclusion disk to the configuration shown in figure [ 2exclude ] .",
    "using the idea of the exclusion disk , you will be able to compute the parts of the field on which you can still deposit a new coin .",
    "these parts have been designed in dark , we call them      `` stars '' for obvious reasons",
    ". you can see that , at the present moment , there are only @xmath188 of the @xmath199 grid - squares which can take on a new point . before starting to compute distances with coins in adjacent squares",
    ", it may be a good idea to check at all whether it is possible to deposit a box on the point",
    ". you will quickly realize that we are confronted with exactly the same problem as the boy in figure  [ 2boy ] : only one out of six grid - squares has a non - zero chance to accept a new coin .",
    "the time for the next hit of one of the useful squares can be obtained with a one - sides die , or , equivalently , sampled from eq .",
    "( [ boxforl ] ) .",
    "so , you can write a faster ( intermediate ) program , by determining which of the boxes can still hold a coin . this probability then gives the probability `` to do nothing '' , which is used in eq .",
    "( [ boxforl ] ) to sample the time after which a new deposition is attempted .",
    "are you tempted to write such a program ?",
    "you simply need a subroutine able to determine whether there is still free space in a square .",
    "with such a subroutine you are able to exclude squares from the consideration .",
    "the ratio of excluded squares to the total number of squares then gives the probability @xmath200 to do nothing , which is what you need for the faster - than - the - clock algorithm of section [ dice ] .",
    "cutting up the field into little squares allows us a second time to make the program run faster by a factor @xmath13 , where @xmath13 is the number of little squares . not only can we use the squares to simplify the calculation of overlaps , but to exclude large portions of the field from the search .",
    "unfortunately , you will quickly find out that the program still has a very large rejection probability  just look at the square denoted by an * a * in figure  [ 2boy ] : roughly @xmath201 of the square s surface can only accept a new coin .",
    "so , you will attempt many depositions in vain before being able to do something reasonable .",
    "one idea to go farther consists in going to smaller and smaller squares .",
    "this has been implemented in the literature @xcite .",
    "what one really wants to do , however , is to exploit the exact analogy between the area of the stars , and the probabilities in eq .",
    "( [ pileofprob ] ) .",
    "if we know the location and the area of the stars , we are able to implement one of the rejection - free algorithms . computing the area of a `` star '' is a simple trigonometric exercise .",
    "having such a subroutine at our disposal allows us to envision the ultimate program for random sequential adsorption .    *",
    "initially , you do the naive algorithm for a while * then you do a first cut - up into stars .",
    "the total relative area of the field not covered by stars corresponds to the factor @xmath164 , and you will sample the the star for the next deposition exactly as in eq .",
    "( [ pileofprob ] ) . then you randomly deposit ( @xmath194 ) into the star chosen , and update the book keeping .",
    "so , finally , this breath - taking , practical discussion brings us to ponder a philosophical question : how to sample loci in a star .",
    "in fact , how do we do that ? .",
    "for my part , i have given up looking for a rejection - free method to solve this problem - i simply sample a larger square , as in figure [ 2star ] , and then use the good old rejection method .",
    "but perhaps you know how to do this ?          of course , the example of the random adsorption was only given to stimulate you to think about better algorithms for your current monte carlo problem , and how it may be possible in your own research problem to get away from a blind use of algorithms . if you want to know more about random deposition , notice that there is a vast research literature , and an algorithm has been presented in @xcite .",
    "notice that in our algorithm it was very important for the spheres to be monodisperse , ie for them all to have the same diameter . what can be done in the contrary case ?",
    "are there accelerated algorithms for spheres with some distribution of diameters ( from @xmath202 to @xmath203 ) ( easy ) , and what would be an optimal algorithm for deposition of objects with additional degrees of freedom ? the problem is of some interest in the case of ellipses . evidently , from a numerical point of view",
    ", you will end up with a three - dimensional `` star '' in which you have to sample ( @xmath204 ) , where @xmath205 gives the orientation of the ellipse to be deposited .",
    "you may be inspired to think about such a simulation .",
    "remember that it is not important to compute the @xmath206 star exactly , just as , in the last chapter , it was without real importance that the _ a priori _ probability @xmath207 could be made exactly to @xmath137 ."
  ],
  "abstract_text": [
    "<S> in these lectures , given in 96 summer schools in beg - rohu ( france ) and budapest , i discuss the fundamental principles of thermodynamic and dynamic monte carlo methods in a simple light - weight fashion . </S>",
    "<S> the keywords are markov chains , sampling , detailed balance , a priori probabilities , rejections , ergodicity ,  </S>",
    "<S> faster than the clock algorithms \" .    </S>",
    "<S> the emphasis is on orientation , which is difficult to obtain ( all the mathematics being simple ) . </S>",
    "<S> a firm sense of orientation helps to avoid getting lost , especially if you want to leave safe trodden - out paths established by common usage .    even though i will remain quite basic ( and , i hope , readable ) , i make every effort to drive home the essential messages , which are easily explained : the crystal - clearness of detail balance , the main problem with markov chains , the great algorithmic freedom , both in thermodynamic and dynamic monte carlo , and the fundamental differences between the two problems . </S>"
  ]
}
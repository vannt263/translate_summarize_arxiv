{
  "article_text": [
    "to build a fully functioning quantum computer , it is necessary to encode quantum information to protect it from noise . in physical systems",
    ", one expects noise to act locally .",
    "therefore , _",
    "topological codes _",
    "@xcite , which naturally protect against local errors , represent our best hope for storing quantum information .",
    "however , a quantum computer must also be capable of processing this information .",
    "this motivates the search for topological codes allowing the implementation of a set of gates which ( i ) can operate in the presence of typical noise without corrupting the stored information , and ( ii ) can perform any computation on the encoded information .",
    "a theoretical framework has been developed around these ideas  a gate which is _ fault - tolerant _ does not propagate typical errors into uncorrectable errors  @xcite , and therefore satisfies ( i ) . a set of gates which is _ universal _ can generate any unitary on the code space with arbitrary precision @xcite , and therefore satisfies ( ii ) .",
    "the known methods of implementing a universal , fault - tolerant gate set in topological codes typically require an enormous amount of overhead .",
    "for instance , magic state distillation @xcite with the two - dimensional toric code requires many additional ancilla qubits @xcite , whereas computing by braiding non - abelian anyons @xcite requires additional time to move anyons around macroscopic loops @xcite .",
    "these forms of overhead can make quantum processing orders of magnitude less efficient than storage alone in topological codes .",
    "this may render such approaches impractical given the experimental difficulty of scaling up quantum hardware  @xcite . in this paper",
    "we focus on a new construction by bombn  @xcite , for a universal fault - tolerant gate set with topological color codes .",
    "this seems not to involve significant additional overhead , however a lattice of at least three dimensions is required , limiting the construction s practicality for reasons of architecture .",
    "following bombn s construction , we use the simplest form of fault - tolerant gate  the _ transversal gate _ , which is a code - space preserving unitary composed of separate unitaries applied to each physical qubit .",
    "however , according to a no - go theorem by eastin and knill @xcite , for any code which protects against arbitrary single - qubit errors , the set of transversal gates forms a finite group and therefore can not be universal . some recent approaches to circumvent this no - go theorem in order to implement a universal gate set with transversal gates have been put forward  @xcite .    in ref .",
    "@xcite , bombn applies the approach of _ gauge fixing _",
    "@xcite to color codes in a @xmath4-dimensional lattice .",
    "color codes were first introduced in two dimensions by bombn and martin - delgado in ref .",
    "they are _ topological stabilizer codes _ @xcite , meaning they are defined on a lattice and have macroscopic distance together with geometrically local stabilizer generators .",
    "the main new conceptual contribution in ref .",
    "@xcite is that gauge fixing allows one to fault - tolerantly switch between a ( stabilizer ) color code on a @xmath4-dimensional lattice , in which @xmath2 and @xmath5 are transversal , and a different ( subsystem ) color code on the same lattice , in which @xmath1 is transversal .",
    "critically , for @xmath6 , @xmath7 forms a universal gate set . to the authors knowledge , this represents the first construction using gauge fixing to achieve a universal gate set in a topological code .    in ref .",
    "@xcite , bombn argues that for every @xmath8 , there exists a @xmath4-dimensional color code with a transversal implementation of @xmath9 , which is the main technical contribution therein . at the same time , for any topological stabilizer code , bravyi and knig @xcite showed that the group of logical gates implemented transversally must be contained in @xmath10 , the @xmath11 level of the clifford hierarchy according to @xmath12 , with @xmath13 representing the pauli group .",
    "note that @xmath14 is the well - known clifford group . ]",
    "these results have been extended beyond the stabilizer code setting @xcite .",
    "color codes are the only family of topological stabilizer codes currently known to saturate the bravyi - knig classification in every dimension @xmath15 .    in this paper , we provide a simplified yet rigorous presentation of the ideas in ref .",
    "the organization is as follows .",
    "first , to build some intuition , we introduce color codes in two dimensions in section  [ sec:2dim ] .",
    "we explain how to transversally implement the gate set @xmath16 , which generates the clifford group .",
    "then , we describe the generalization of color codes to @xmath4 dimensions in section  [ sec : ddim ] .",
    "next , in section  [ sec : gates ] we discuss transversal gates in those codes with an emphasis on the phase gate @xmath17 , and show that in certain @xmath4-dimensional color codes @xmath18 is transversal .",
    "our construction utilizes the bipartite property of the lattice allowing for a simpler verification than in ref .",
    "@xcite . finally , in section  [ sec : universal ]",
    "we explain how to switch between color codes fault - tolerantly using the technique of gauge fixing .",
    "in particular , this allows one to implement a fault - tolerant universal gate set @xmath3 in a color code in three dimensions .",
    "in this section , we give an explicit construction of a stabilizer color code in two dimensions @xcite .",
    "we consider a @xmath19-valent lattice formed as a tiling of a sphere , such that faces of the lattice are colored with three colors , where neighboring faces have distinct colors .",
    "qubits are placed at the vertices of this lattice . to define a color code on this lattice ,",
    "we associate an @xmath20- and a @xmath21-type stabilizer generator with every face .",
    "this code encodes no logical qubits .",
    "a new code , which encodes a single logical qubit , can be formed through the removal of a single physical qubit .",
    "we describe the transversal implementation of the logical gates @xmath22 , @xmath23 and @xmath24 in the new code .",
    "color codes in two dimensions are css stabilizer codes @xcite , and are therefore specified by their stabilizer group @xmath25 generated by @xmath20- and @xmath21-type stabilizer generators .",
    "the code space is the simultaneous @xmath26 eigenspace of every stabilizer generator . in the construction ,",
    "we use a two - dimensional lattice @xmath27 , obtained from a tiling of the 2-sphere , and satisfying the following requirements    * valence  every vertex is 3-valent , meaning it belongs to exactly 3 edges , * colorability  faces can be colored with 3 colors : red , green and blue , such that every two faces sharing an edge have different colors .",
    "an example of such a tiling of the 2-sphere is presented in fig .",
    "[ fig:2dlatticeconstruction](a ) . from these properties",
    "alone , one can show that the total number of vertices in @xmath27 is even . to see this",
    ", note that the euler characteristic gives @xmath28 , where @xmath29 , @xmath30 and @xmath31 denote the number of vertices , edges and faces in @xmath32 , respectively .",
    "since every vertex is @xmath19-valent , we obtain @xmath33 , and then @xmath34 , which is even .    - and @xmath21-type stabilizer generators are associated with faces . in ( c ) and ( d ) ( the dual picture ) , qubits are placed on faces , and @xmath20- and @xmath21-type stabilizer generators are associated with vertices .",
    "( a ) take a lattice @xmath27 , which is a tilling of the 2-sphere with 3-colorable faces and 3-valent vertices .",
    "the surrounding circle is identified with a vertex @xmath35 .",
    "the color code on @xmath27 encodes no logical qubits .",
    "( b ) to obtain @xmath36 , remove from @xmath27 the vertex @xmath35 , together with the three edges and three faces containing it .",
    "the color code on @xmath36 encodes one logical qubit .",
    "( c ) ( dual ) lattice @xmath37 is obtained from @xmath27 by replacing faces , edges and vertices by vertices , edges and faces , respectively . all faces are triangles , and the vertices are 3-colorable . the color code on @xmath37 encodes no logical qubits .",
    "( d ) lattice @xmath38 formed from @xmath37 by removing a single face .",
    "no stabilizer generators are associated with those vertices belonging to the boundary of the removed face .",
    "the color code on @xmath38 encodes one logical qubit.,scaledwidth=45.0% ]    at every vertex in @xmath32 we place a qubit .",
    "we refer to the set of all qubits by @xmath39 , whereas by @xmath40 we denote the set of vertices of a face @xmath41 .",
    "alternatively , we can think of @xmath42 as the set of qubits belonging to @xmath41 . to define the color code ,",
    "it is sufficient to specify @xmath20- and @xmath21-type stabilizer generators . for every face @xmath41",
    ", we define an @xmath20-type stabilizer generator @xmath43 to be a tensor product of pauli @xmath20 operators supported on qubits @xmath42 , similarly for @xmath21-type generators .",
    "then , the stabilizer group @xmath25 is generated by @xmath44    to prove that this specifies a well - defined stabilizer code , we must verify that all the generators of @xmath25 commute .",
    "it is sufficient to check that for any two faces @xmath45 and @xmath46 in @xmath27 , @xmath47 and @xmath48 commute .",
    "first take the case @xmath49 .",
    "if @xmath45 and @xmath46 share no vertices , then @xmath47 and @xmath48 trivially commute .",
    "if they share a vertex , then by @xmath19-valence , they also share an edge .",
    "moreover , due to @xmath19-colorability , @xmath45 and @xmath46 can not share two consecutive edges , and thus their intersection has to contain an even number of vertices , @xmath50 for the case @xmath51 , due to @xmath19-colorability and @xmath19-valence , the number of vertices belonging to a face @xmath41 is even , latexmath:[\\[\\label{evenverticesoffaces }    of @xmath47 and @xmath48 for arbitrary @xmath45 and @xmath46 .    from the construction of the lattice ,",
    "one obtains that each vertex belongs to exactly three faces , colored with three different colors .",
    "thus , one can express the set of vertices in @xmath27 as the disjoint union in place of the union @xmath53 of two sets @xmath54 and @xmath55 when their instrsection is empty , @xmath56 .",
    "] of vertices belonging to red faces , and similarly for green and blue  @xcite , namely @xmath57 where @xmath58 , @xmath59 and @xmath60 are the sets of all red , green and blue faces , respectively .",
    "this implies that not all the stabilizer generators we have defined are independent @xmath61 in fact , these are the only conditions  @xcite which relate the stabilizer generators to one another",
    ".    we can now verify that the color code which we have defined on the lattice @xmath27 encodes no logical qubits .",
    "as before , using the euler characteristic we obtain @xmath62 , and from @xmath19-valence of vertices  @xmath33 . we have placed physical qubits at vertices , thus @xmath63 .",
    "there are @xmath64 independent stabilizer generators , since there are two stabilizer generators for every face and four conditions  ( [ eq : conditionsontiling1 ] )  and  ( [ eq : conditionsontiling2 ] ) .",
    "the number of logical qubits is equal to the number of physical qubits minus the number of independent stabilizer generators , and we obtain @xmath65      to obtain a color code with one encoded logical qubit , we can remove one vertex from the lattice @xmath27 , together with three edges and three faces it belongs to , obtaining a new lattice @xmath36 ( see fig .",
    "[ fig:2dlatticeconstruction]b ) . by removing one vertex",
    ", we also discard six stabilizer generators associated with the removed faces , and thus the stabilizer generators no longer have to satisfy ( [ eq : conditionsontiling1 ] ) and ( [ eq : conditionsontiling2 ] ) .",
    "one can check that this new code encodes one logical qubit , since there is one qubit more than independent stabilizer generators . by removing more vertices",
    ", one could encode more logical qubits , but we will not analyze that case . note that the total number of qubits in @xmath36 is odd , @xmath66 , which plays an important role in our considerations .    on physical grounds",
    ", it is of interest to consider stabilizer codes with stabilizer generators which are low - weight and geometrically local . in the construction we have presented ,",
    "this can be achieved if each face in the lattice @xmath36 is geometrically local and contains a small number of vertices , as in fig .",
    "[ fig:2dlatticeconstruction]b .",
    "it can be shown that following this construction , the resulting color code has macroscopic distance @xcite , and therefore is a topological stabilizer code .",
    "later , when we discuss color codes in @xmath4 dimensions , we follow a similar construction .",
    "we briefly outline the procedure here , deferring detailed discussion to section  [ sec : ddim ] .",
    "we start with a tiling of a @xmath4-sphere , place qubits at vertices and define ( gauge group ) generators to be supported on suitable cells .",
    "then , we remove one vertex and all the cells containing it .",
    "in particular , we discard generators supported on the removed cells .",
    "such a code encodes only one logical qubit @xcite .",
    "in this paper we consider stabilizer codes encoding only one logical qubit , with the stabilizer group @xmath25 . in this",
    "setting , a _ transversal gate _",
    "@xmath67 on a single logical qubit is implemented as a tensor product of single physical qubit unitaries @xmath68 , which preserves the code space . on the other hand ,",
    "a logical gate on two logical qubits requires two copies of the code , in which case we say that the _ overall _ code space is the @xmath26 eigenspace of the elements in @xmath69 .",
    "a transversal gate on two logical qubits is implemented as a tensor product of two qubit gates on pairs of corresponding qubits in both copies of the code , which preserves the overall code space .",
    "observe that transversal gates are fault - tolerant since they do not spread errors within each copy of the code .",
    "we now show that in the two - dimensional color code described in the previous subsection , one can transversally implement the gate set @xmath70 , which generates the ( non - universal ) clifford group .",
    "the clifford group , combined with computational basis state preparation and measurement , can be simulated efficiently on a classical computer  @xcite . for each gate , @xmath23 , @xmath22 and @xmath24",
    ", we verify that a particular transversal unitary implements the logical gate by showing that it has the correct action under conjugation on generators of the logical pauli group , and that the stabilizer group is preserved .",
    "the two - dimensional color code is a css stabilizer code encoding a single logical qubit with logical pauli operators @xmath71 and @xmath72 .",
    "in addition it is a _ self - dual css stabilizer code _  a code with the same support for @xmath20- and @xmath21-type stabilizer group elements ( for each face , there is an @xmath20- and a @xmath21-type generator ) .",
    "this implies that the logical hadamard gate can be implemented transversally , as under conjugation by @xmath73 , @xmath74 and similarly @xmath75 .",
    "moreover , @xmath76 , @xmath77 , and thus @xmath25 is preserved .",
    "the logical gate @xmath22 can be implemented transversally between two identical copies of this color code by applying a physical gate @xmath2 to every pair of corresponding qubits in the first and the second copy .",
    "this can be verified by checking that under conjugation by @xmath22 , @xmath78 , @xmath79 , @xmath80 , @xmath81 and @xmath82 is preserved are mapped under conjugation to a different generators , namely @xmath83 , @xmath84 , @xmath85 and @xmath86 . ] .    to show that @xmath24 can be implemented transversally , we use the fact that the set of vertices in @xmath36 is bipartite ( see fig .  [",
    "fig : bipartitegraph](a ) ) .",
    "in other words , @xmath39 can be split into two subsets , @xmath87 and @xmath88 , such that vertices in @xmath87 are connected only to vertices in @xmath89 and vice versa . to prove this , first note that every face in @xmath27 has an even number of edges .",
    "moreover , every cycle in @xmath27 ( as a tiling of the 2-sphere ) is contractible .",
    "this implies that every cycle in @xmath27 is a boundary of faces and is therefore even .",
    "using the following lemma    a graph containing only even cycles is bipartite  @xcite .",
    "[ lemma : bipartition ]    we see that @xmath27 must be bipartite , and so is the lattice @xmath36 due to its construction from @xmath27 .",
    "now , we can show that @xmath90 implements @xmath24 , for some choice of integer @xmath91 .",
    "we use the relations @xmath92 and @xmath93 . since @xmath66 , then @xmath94 , and picking @xmath95 ensures that @xmath96 . with this choice of @xmath91 ,",
    "the action by conjugation of @xmath90 on the logical @xmath97 and @xmath98 is @xmath99    furthermore , as every face @xmath41 in the lattice @xmath36 has an equal number of vertices in @xmath87 and @xmath89 , under the action of @xmath100 the stabilizer generators @xmath43 and @xmath101 become : @xmath102 implying that the stabilizer group @xmath25 is preserved .",
    "this completes the verification that @xmath100 implements @xmath24 .",
    ", the lattice used to define the color code , is bipartite  it can be split into two subsets : @xmath87 ( hollow circles ) , and its compliment @xmath103 ( filled circles ) .",
    "vertices in @xmath87 are only connected to vertices in @xmath89 and vice versa .",
    "the logical gate @xmath24 can implemented by applying @xmath104 to qubits in @xmath87 , and @xmath105 to qubits in @xmath103 , where @xmath106 .",
    "( b ) the dual lattice @xmath38 .",
    "faces are bipartite.,scaledwidth=48.0% ]      we can alternatively express the construction of color codes in the dual lattice picture , which we use extensively in the later discussion for @xmath107 dimensions .",
    "we use a two - dimensional ( dual ) lattice @xmath37 , obtained from a tiling of the 2-sphere , and satisfying the following requirements    * all faces are triangles , * vertices are 3-colorable , meaning two vertices belonging to the same edge are colored with different colors .",
    "see fig .",
    "[ fig:2dlatticeconstruction](c ) for a simple example . note that these conditions are equivalent to the conditions of 3-valence of vertices and 3-colorability of faces required for the tiling @xmath27 of the 2-sphere , where lattices @xmath27 and @xmath37 are dual to one another .",
    "a qubit is placed on every face of @xmath37 , and an @xmath20- and a @xmath21-type stabilizer generator is associated with every vertex , meaning they are supported on qubits corresponding to faces containing that vertex .",
    "the resulting color code is exactly the same as that described in section  [ colorcode2dnoqubits ] , and therefore has zero logical qubits . to encode a single logical qubit ,",
    "one should remove a face from @xmath37 , together with stabilizer generators associated with the vertices belonging to the removed face , see fig .",
    "[ fig:2dlatticeconstruction](d ) .",
    "the bipartition of vertices in @xmath36 corresponds to a bipartition of faces in @xmath38 , meaning that faces can be split into two sets , @xmath87 and its compliment @xmath89 , such that faces in @xmath87 share an edge only with faces in @xmath89 and vice - versa .",
    "see fig .",
    "[ fig : bipartitegraph](b ) .",
    "here we present a construction of color codes on @xmath4-dimensional lattices . in higher dimensions",
    "it is easier to describe the construction in the language of the dual lattice .",
    "the majority of this section is devoted to defining dual lattices satisfying certain conditions and analyzing their properties .",
    "the discussion is a generalization of that already presented for two dimensions .",
    "the basic idea of how to construct the dual lattice @xmath38 is to first tile a @xmath4-sphere with @xmath4-simplices to form a lattice @xmath37 .",
    "we require that every vertex in @xmath37 can be assigned one of @xmath108 distinct colors and two vertices belonging to the same edge have different colors .",
    "the lattice @xmath38 , used to define the color code , is formed by removing one @xmath4-simplex from @xmath37 .",
    "a @xmath4-simplex @xmath109 is a @xmath4-dimensional polytope which is a convex hull of its @xmath108 affinely independent vertices @xmath110 , namely @xmath111 in particular , @xmath112-simplices are vertices , @xmath113-simplices are edges , @xmath114-simplices are triangles , @xmath19-simplices are tetrahedra and so on .    a convex hull of a subset of vertices of size @xmath115 is a @xmath91-simplex @xmath116 , which we call a @xmath91-face of @xmath109 , and @xmath117 . for example , the faces of a @xmath19-simplex ( a tetrahedron ) are : four @xmath112-simpices , six @xmath113-simplices , four @xmath114-simplices and a single @xmath19-simplex .",
    "more generally , @xmath109 contains @xmath118 @xmath91-faces , since every @xmath91-face is uniquely determined by the choice of @xmath119 vertices spanning it .",
    "by @xmath120 we call the set of all @xmath91-faces of @xmath109 , namely @xmath121    instead of having only one simplex , we can consider a collection of them .",
    "moreover , we can create new objects , called simplicial complexes  @xcite , by gluing simplices along their proper faces of matching dimension .",
    "we restrict ourselves to simplicial complexes containing finitely many simplices .",
    "we will define a @xmath4-dimensional color code on a lattice @xmath38 obtained by gluing together @xmath4-simplices .",
    "the technical name for such a lattice is a homogeneous simplicial @xmath4-complex .    although @xmath38 is formally a collection of simplices , by the same symbol we also denote the union of these simplices as a topological space . notice that @xmath38 is a manifold with a boundary , which we can think of as being embedded in real space .",
    "we denote by @xmath122 the set of simplices belonging to the boundary of @xmath38 , where the boundary of @xmath38 is the set of points in the closure of @xmath38 not belonging to the interior of @xmath38 .",
    "moreover , by @xmath123 we understand a set of all @xmath91-simplices belonging to @xmath124 .",
    "note that @xmath125 .",
    "we say that a simplicial @xmath4-complex @xmath38 is @xmath126-colorable if we can introduce a function @xmath127 where @xmath128 is a set of @xmath108 colors , and two vertices belonging to the same edge have different colors .",
    "moreover , by @xmath129 we understand the set of colors assigned to all the vertices of a simplex @xmath109 , namely @xmath130    an example of a @xmath19-colorable , homogeneous , simplicial @xmath114-complex is the lattice @xmath38 shown in fig .",
    "[ fig:2dlatticeconstruction](d ) .",
    "note in particular that it is composed of nineteen @xmath114-simplices ( triangles ) .",
    "the exact shape of objects in @xmath38 is not important due to its topological nature  the lattice is not rigid and can be smoothly deformed . in this example , @xmath131 consists of the set of @xmath132 vertices ( the three vertices in the boundary are excluded ) .",
    "@xmath133 is the set of @xmath134 edges , ( the three edges in the boundary are excluded ) .",
    "@xmath135 is the set of all @xmath136 triangular faces .",
    "here we define color codes on a @xmath4-dimensional lattice @xmath38 , which must satisfy the following conditions    @xmath38 is a homogeneous simplicial @xmath4-complex obtained as a triangulation of the interior of a @xmath4-simplex .",
    "[ cond1 ]    @xmath38 is @xmath126-colorable .",
    "[ cond2 ]    one can obtain such a lattice @xmath38 from any @xmath126-colorable tiling of the @xmath4-sphere with @xmath4-simplices , followed by the removal of one @xmath4-simplex . in @xmath137 dimensions , this is precisely the procedure described in section  [ duallattice2d ] .",
    "an explicit construction of a family of lattices satisfying these conditions is outlined in appendix  [ latticeconstruction ] .",
    "qubits are placed on each and every @xmath4-simplex of @xmath38 , and thus the set of all qubits @xmath39 is equal to @xmath138 .",
    "this motivates the next definition , namely for a simplex @xmath139 we define @xmath140 in other words , @xmath141 can be thought of as the set of qubits placed on @xmath4-simplices containing @xmath109 .",
    "we say that qubits @xmath141 are supported on @xmath109 . by saying that an operator is supported on @xmath109 we mean that it is supported on the set @xmath141 , for example @xmath142 .",
    "a color code is a css subsystem code  @xcite .",
    "recall that a css subsystem code is specified by its gauge group @xmath143 .",
    "each @xmath20-type gauge group generator @xmath144 consists of pauli @xmath20 operators applied to qubits @xmath145 ; similarly for @xmath21-type generators .",
    "the stabilizer group @xmath146 is the group generated by all pauli operators @xmath147 and @xmath148 contained in @xmath143 , which commute with every element of @xmath143 .",
    "note that @xmath149 .",
    "the codewords are @xmath26 eigenvectors of all elements of @xmath25 .",
    "we define a @xmath4-dimensional color code  @xcite on the lattice @xmath38 , where @xmath150 , as the css subsystem code with of @xmath20- and @xmath21-type gauge generators supported on @xmath151- and @xmath152-simplices in @xmath38 , @xmath153 where @xmath154 .",
    "the @xmath20- and @xmath21-type generators of the stabilizer group @xmath25 are supported on @xmath155- and @xmath156-simplices , namely @xmath157    we refer to this code by @xmath158 .",
    "when context makes the lattice unambiguous , we sometimes use @xmath159 to emphasize the dimensionality of the lattice , @xmath160 .",
    "note that the generators of the gauge and stabilizer groups are supported on simplices which do not belong to @xmath122 , the boundary of the lattice @xmath38 .    to illustrate the language introduced in this section , we revisit the two - dimensional color code described in sections  [ 2donequbit ] and  [ duallattice2d ] .",
    "we begin with the lattice @xmath38 shown in fig .",
    "[ fig:2dlatticeconstruction]d .",
    "qubits are placed on @xmath114-simplices ( triangular faces ) . since @xmath161",
    ", there is only one color code on the two - dimensional lattice @xmath38 , namely @xmath162 , which is a stabilizer code .",
    "stabilizer generators are associated with @xmath112-simplices ( vertices ) .",
    "note that no stabilizer generators are assigned to the three vertices belonging to the boundary of @xmath38 .",
    "here we present some properties of any @xmath126-colorable homogeneous simplicial @xmath4-complex @xmath38 .",
    "we use these properties to verify that @xmath163 is a valid code , and later that there is a transversal implementation of @xmath164 .",
    "we start with the following two lemmas    let @xmath109 and @xmath116 be two simplices in @xmath124 . if @xmath165 , then @xmath166 , where @xmath167 is the smallest simplex containing both @xmath109 and @xmath116 .",
    "[ lemma : intersection ]    if @xmath165 , then there exists @xmath168 such that @xmath169",
    ". let @xmath170 and set @xmath167 to be the unique @xmath171-simplex in @xmath172 , colored with the set of colors @xmath173 . clearly , @xmath167 is the smallest simplex containing @xmath109 and @xmath116 , and @xmath166 .",
    "let @xmath109 be a @xmath91-simplex not belonging to the boundary of the lattice , @xmath174 , with @xmath175 .",
    "then @xmath176 [ lemma : evenfaces ]    before we prove the ( even support ) lemma  [ lemma : evenfaces ] , we explain its consequences . for @xmath177 to be a subsystem code , the stabilizer generators have to commute with each other , as well as with the gauge group generators .",
    "notice that for two arbitrary @xmath20- and @xmath21-type stabilizer generators to commute , the intersection of their supports has to contain even number of elements .",
    "let @xmath20- and @xmath21-type stabilizer generators be supported on @xmath178 and @xmath179 , respectively .",
    "if the intersection @xmath180 is non - empty , then due to the ( intersection ) lemma  [ lemma : intersection ] there exists a simplex @xmath167 such that @xmath166 .",
    "moreover , since @xmath109 is spanned by @xmath181 vertices and @xmath116 by @xmath182 vertices , then @xmath167 is spanned by at most @xmath183 vertices .",
    "thus , @xmath167 is a @xmath91-simplex with @xmath184 , and the ( even support ) lemma  [ lemma : evenfaces ] applies , @xmath185 , showing that @xmath186 and @xmath187 commute .",
    "the commutation of stabilizer generators with the gauge generators follows similarly .",
    "we can obtain the ( even support ) lemma  [ lemma : evenfaces ] as a corollary of the following    let @xmath38 be a simplicial @xmath4-complex which is @xmath126-colorable .",
    "then , for a simplex @xmath139 and a chosen set of colors @xmath188 , such that @xmath189 , there exists a partition of the set of qubits supported on @xmath109 into a disjoint union of sets of qubits supported on @xmath190-simplices containing @xmath109 , namely @xmath191 [ disjointunionlemma ]    first note , that two different @xmath91-simplices @xmath192 and @xmath193 in @xmath124 colored with the same colors , @xmath194 , can not belong to the same @xmath195-simplex , @xmath196 , thus do not share a qubit , @xmath197 . moreover , if @xmath198 , where @xmath168 , then @xmath199 and there exists a unique simplex @xmath200 colored with colors @xmath55 . since @xmath201 , then @xmath202 , which finishes the proof of the ( disjoint union ) lemma  [ disjointunionlemma ] .    in particular , the set of qubits supported on any @xmath91-simplex @xmath109 in @xmath124 with @xmath184",
    "can be decomposed as a disjoint union of qubits suppoted on @xmath203-simplices @xmath116 containing @xmath109 and colored with a chosen set of @xmath4 colors , @xmath204 .",
    "notice , that @xmath205 for any @xmath206 , which immediately yields @xmath207 showing the ( even support ) lemma  [ lemma : evenfaces ] .",
    "the property needed for the transversal implementation of the gate @xmath164 , presented in section  [ sec : gates ] , can be encapsultated in the following lemma    the set of @xmath4-simplices in @xmath38 , @xmath138 , is bipartite .",
    "[ lemma : qubitsbipartition ]    let us first explain the ( bipartition of qubits ) lemma  [ lemma : qubitsbipartition ]  the @xmath4-simplices in @xmath38 can be split into two disjoint sets , where @xmath4-simplices in the first set share @xmath203-faces only with @xmath4-simplices from the second set , and vice versa .    first , construct a graph @xmath208 with the set of vertices @xmath209 and the set of edges @xmath210 .",
    "two vertices @xmath211 are connected by an edge @xmath212 iff @xmath4-simplices corresponding to @xmath35 and @xmath213 share a @xmath203-face corresponding to @xmath214 .",
    "since for all @xmath215 the ( even support ) lemma  [ lemma : evenfaces ] gives @xmath216 , and every cycle in @xmath38 is contractible , we obtain that every cycle in the graph @xmath217 is even . using the ( graph bipartition ) lemma  [ lemma : bipartition ]",
    "we immediately obtain that @xmath217 is bipartite .",
    "this shows that the set of @xmath4-simplices in @xmath38 , which is equal to the set of qubits , @xmath218 , is bipartite .",
    "as mentioned in the introduction , transversal gates are fault - tolerant . in this section ,",
    "we first review some relevant features of a class of css subsystem codes , which includes the color codes defined in sectionrefsec : ddim .",
    "then , we examine transversal gates of codes in this class .",
    "we show that @xmath22 is transversal in any such code and under certain additional conditions the hadamard and @xmath164 can be transversal , too .",
    "finally , we show that the additional conditions are satisfied by certain color codes .",
    "a css subsystem code @xcite is specified by its gauge group @xmath143 , which is a subgroup of the pauli group on physical qubits @xmath39 . each @xmath20-type gauge group generator",
    "@xmath144 consists of pauli @xmath20 operators applied to qubits @xmath145 ; similarly for @xmath21-type generators .",
    "the stabilizer group @xmath219 is the group generated by all pauli operators @xmath147 and @xmath148 contained in @xmath143 , which commute with every element of @xmath143 . note that a stabilizer code is a special case of a subsystem code , for which @xmath220 .",
    "the codewords are the @xmath26 eigenvectors of all elements of @xmath25 .",
    "we say that two codewords are equivalent if they differ by application of a linear combination of elements of @xmath221 .",
    "this allows one to decompose the subspace of codewords into a tensor product of two spaces : _ logical _ qubits and _ gauge _ qubits .",
    "elements of @xmath221 have no effect on the state of the logical qubits , but may change that of the gauge qubits .    for a subsystem code , we say a unitary implements a _ logical gate _ if it preserves the space of all codewords , and has an action on the logical qubits which is independent of any action on the gauge qubits .",
    "a logical gate @xmath67 can be implemented on the logical qubits @xmath222 as a _ bare _",
    "gate @xmath223 which leaves gauge qubits @xmath224 unchanged , @xmath225 , or more generally as a _ dressed _",
    "gate @xmath226 , which can affect the gauge qubits too , @xmath227 .",
    "consider the class of css subsystem codes which    * encode one logical qubit , * have bare logical @xmath97 and @xmath98 implemented by @xmath228 and @xmath229 .",
    "note that these codes are defined on an odd number of physical qubits , @xmath230 , since @xmath97 and @xmath98 anticommute .",
    "we can define a pair of inequivalent ( and not normalized ) codewords , which are representatives of logical @xmath231 and @xmath232 , namely @xmath233 is a state with every physical qubit set to @xmath234 , and @xmath235 is a fixed state of the gauge qubits .",
    "one can verify that the states @xmath236 and @xmath237 are @xmath26 eigenstates of @xmath25 , and satisfy @xmath238 , @xmath239 .",
    "they are also @xmath26 eigenstates of every @xmath20-type generator of @xmath143 .",
    "all equivalent codewords can be generated from @xmath240 by application of a linear combination of elements from @xmath221 .",
    "an alternative pair of representatives of logical @xmath231 and @xmath232 is latexmath:[\\[\\begin{aligned } \\label{zgaugebasis1 }    \\label{zgaugebasis2 }    which are @xmath26 eigenstates of all @xmath21-type generators of @xmath143 .",
    "consider a css subsystem code with one logical qubit , and @xmath97 and @xmath98 implemented by @xmath228 and @xmath229 . to check that a physical unitary @xmath242 implements a dressed logical gate @xmath67 in such a code",
    ", one can verify its action on @xmath243 , and @xmath244 for every state @xmath245 of the gauge qubits .",
    "alternatively , it is sufficient to verify that @xmath242 has the correct action by conjugation on @xmath97 and @xmath98 , and that it preserves is a sufficient , but not a necessary condition for @xmath242 to implement a dressed logical gate . ]",
    "the gauge group @xmath143 .",
    "the logical gate @xmath22 can be implemented transversally between two identical copies of a css subsystem code by applying a physical gate @xmath2 to every pair of corresponding qubits in the first and the second copy .",
    "this can be verified by checking that under conjugation by @xmath22 , @xmath246 , @xmath247 , @xmath248 , @xmath249 and @xmath250 is preserved are mapped under conjugation to another set of generators , namely @xmath251 , @xmath252 , @xmath253 and @xmath254 . ] .    for a _ self - dual _ css subsystem code , namely a code with @xmath20- and @xmath21-type gauge group generators supported on the same sets of qubits , @xmath255 , a dressed logical hadamard gate",
    "can be implemented transversally as @xmath256 . to see this ,",
    "observe that under conjugation by @xmath73 , @xmath257 , @xmath75 , @xmath258 and @xmath259 , and thus @xmath143 is preserved .",
    "the last logical gate we analyze is @xmath260 , for an integer @xmath261 .",
    "we aim to implement @xmath164 transversally as a bare logical gate by applying the same single - qubit unitary to some subset @xmath262 of the physical qubits , and applying that unitary s inverse to the rest of the qubits @xmath263 .",
    "specifically , we now prove that @xmath164 is implemented by @xmath264 , for some suitably chosen @xmath265 , provided that @xmath87 and @xmath143 satisfy @xmath266 first , pick @xmath91 such that @xmath267 the existence of @xmath91 is guaranteed by bezout s lemma , since @xmath268 is odd , @xmath269 , and thus @xmath270 . noting that @xmath271 and @xmath272",
    ", we obtain @xmath273 which shows that @xmath100 correctly implements logical @xmath164 when the gauge qubits are in the state @xmath235 .",
    "however , all other states of the gauge qubits can be reached by application of @xmath21-type operators from @xmath221 , which all commute with @xmath100 ( since it is diagonal in the @xmath21-basis ) .",
    "therefore for any state @xmath245 of the gauge qubits , it must be that @xmath274 , verifying that @xmath100 implements the bare logical gate @xmath164",
    ".    it may not be obvious that there exists a set @xmath262 satisfying ( [ eq : conditionont ] ) for a given code . in the later parts of this paper we show an explicit construction of @xmath87 for color codes in @xmath4 dimensions , with @xmath275 .",
    "notice that condition  ( [ eq : conditionont ] ) can be inferred from the following condition @xmath276 where @xmath277 and @xmath278 is any subset of the @xmath20-type generators of the gauge group @xmath143 . to see the implication ( [ eq : conditionont2])@xmath279([eq : conditionont ] ) notice , that for any @xmath280 , we can write it as product of generators , namely @xmath281",
    ". then @xmath282 where we used the symmetric difference of sets , @xmath283 . using the inclusion - exclusion principle for symmetric difference",
    ", we have @xmath284 we obtain @xmath285 and a similar expression for @xmath286 .",
    "clearly , if condition ( [ eq : conditionont2 ] ) holds , then @xmath287 , showing ( [ eq : conditionont ] ) . moreover , condition ( [ eq : conditionont2 ] ) is easier to verify than condition  ( [ eq : conditionont ] ) , since we only need to check it for the @xmath20-type generators of @xmath143 , rather than for every @xmath20-type element of @xmath143 .    we can summarize the discussion of how to implement transversal @xmath164 in the following lemma    [ lem : sufficientcondition ] consider a css subsystem code encoding one logical qubit . let the code be defined on a set of physical qubits @xmath39 , where @xmath268 is odd and with bare logical operators @xmath288 and @xmath289 .",
    "if there exists @xmath262 , such that for any @xmath277 : @xmath290 for every subset @xmath278 of the @xmath20-type gauge generators of the code , then @xmath291 implements logical @xmath164 , where @xmath91 is a solution to @xmath292 and @xmath293 .",
    "here we show how to implement the logical gate @xmath164 transversely in the color code @xmath158 , for any integer @xmath294 .",
    "one applies @xmath295 for some integer @xmath91 , where @xmath87 and its compliment @xmath296 correspond to the bipartite decomposition of qubits @xmath39 specified in the ( bipartition of qubits ) lemma  [ lemma : qubitsbipartition ] .",
    "we make use of the following property    for any @xmath297-simplex @xmath116 in @xmath124 with @xmath298 @xmath299 [ lemmadual ]    by the choice of the set @xmath87 , every @xmath203-simplex @xmath109 has one qubit in @xmath87 , and one qubit in @xmath296 , which is equivalent to @xmath300 . using the ( disjoint union ) lemma  [ disjointunionlemma ]",
    ", we can decompose the set of qubits @xmath301 supported on an @xmath297-simplex @xmath116 , where @xmath298 , as a disjoint union of qubits supported on @xmath203-simplices colored with a chosen set of @xmath4 colors @xmath302 , and then we immediately obtain @xmath303 which shows the ( property of @xmath87 ) lemma  [ lemmadual ] .",
    "note that ( [ eq : sufficientcondition ] ) in the ( sufficient condition ) lemma  [ lem : sufficientcondition ] follows form the ( property of @xmath87 ) lemma  [ lemmadual ] . to see this ,",
    "observe first that every stabilizer generator @xmath304 is supported on a @xmath151-simplex @xmath305 , thus @xmath306 and we obtain @xmath307 where @xmath167 is a simplex colored with colors @xmath308 , such that @xmath309 .",
    "the case of an empty intersection is trivial .",
    "since @xmath310 , then obviously @xmath311 , and thus @xmath167 is at most @xmath203-simplex . using the ( property of @xmath87 ) lemma  [ lemmadual ] we obtain that for any @xmath312 : @xmath313 which implies ( [ eq : sufficientcondition ] ) .",
    "the ( sufficient condition ) lemma  [ lem : sufficientcondition ] implies that @xmath100 implements the logical @xmath164 .",
    "in particular , one can implement @xmath314 using the code @xmath315 , since @xmath160 , @xmath316 and thus @xmath317 .",
    "a finite set of gates which is universal can be used to implement any logical unitary , with arbitrary precision . in particular , due to the solovay - kitaev  @xcite theorem , the number of applied gates scales poly - logarithmically with the precision of approximation . note",
    "that the set @xmath318 is universal for any integer @xmath319 .    in this section ,",
    "we show how to achieve a universal transversal gate set with color codes by using the technique of _ gauge fixing _ to switch between different codes .",
    "this technique allows one to take advantage of the transversally implementable gates for different color codes .",
    "we first illustrate the method with a simple example of two 15-qubit codes  @xcite .",
    "then , we define a partial order between color codes . one can switch between color codes which are comparable to implement a universal gate set in three or higher dimensions .",
    "first , let us define matrices @xmath320 and @xmath321 given by @xmath322 moreover , for a binary matrix @xmath323 , we define @xmath324 to be a matrix obtained from @xmath323 by the following substitutions , @xmath325 and @xmath326 .",
    "similarly for @xmath327 , we substitute @xmath325 and @xmath328 .",
    "let @xmath329 be the stabilizer code with the stabilizer group @xmath330 generated by rows of @xmath331 , @xmath332 and @xmath333 , which we denote by @xmath334 let @xmath335 be the subsystem code with the stabilizer group @xmath336 and the gauge group @xmath337 chosen as follows @xmath338 we can consider both codes @xmath329 and @xmath335 to be defined on the same @xmath339 physical qubits .",
    "one can check that @xmath329 represents the @xmath340 $ ] quantum reed - muller ( stabilizer ) code  @xcite and @xmath335 is a @xmath340 $ ] ( subsystem ) code , which can be thought of as the @xmath341 $ ] hamming code , with six of the seven logical qubits treated as gauge qubits .",
    "note also that @xmath342 and @xmath337 has @xmath20- and @xmath21-type generators supported on the same qubits ( i.e. @xmath335 is a self - dual subsystem code ) .    since the @xmath20-type generators of @xmath337 coincide with the @xmath20-type generators of @xmath330 , the codewords of @xmath329 and @xmath335 are the same when the latter has a gauge state @xmath343 . in other words ,",
    "codewords @xmath344 , @xmath345 for @xmath329 are the same as codewords @xmath346 , @xmath347 for @xmath335 , as defined in eqs .",
    "( [ zgaugebasis1 ] )  and  ( [ zgaugebasis2 ] ) . on the other hand the codewords @xmath348 , @xmath349 for @xmath335 ( as defined in eqs .",
    "( [ xgaugebasis1 ] )  and  ( [ xgaugebasis2 ] ) ) , are not valid codewords for @xmath329 .",
    "now we show that @xmath350 implements @xmath351 transversally in @xmath329 .",
    "consider any three of the four @xmath20-type generators for @xmath352 , and specify their support on subsets of qubits @xmath353 , @xmath354 , @xmath355 , which correspond to rows of @xmath320 .",
    "one can verify that @xmath356 , @xmath357 , and @xmath358 , where @xmath359 .",
    "therefore by the ( sufficient condition ) lemma  [ lem : sufficientcondition ] , and by setting @xmath87 to be an empty set , @xmath360 , we see that @xmath350 implements @xmath351 transversally in the code @xmath329 .",
    "in contrast for the code @xmath335 , the extra @xmath20-type generators in @xmath361 do not satisfy these conditions , and thus one can not show that @xmath351 is implemented transversally in @xmath335 .",
    "it is straightforward to verify that @xmath23 is implemented transversally by @xmath362 in @xmath335 .",
    "it swaps @xmath20 and @xmath21 on any physical qubit , and therefore acts on the representative states as @xmath363 .",
    "since the state of the gauge qubits has changed , @xmath362 is a dressed implementation of @xmath23 in @xmath329 .",
    "clearly , @xmath362 does not implement @xmath364 in @xmath329 , since it takes the state @xmath365 to @xmath366 .",
    "to implement @xmath23 fault - tolerantly in @xmath329 , we use the technique of _ gauge fixing_. first , one should apply @xmath362 , resulting in mapping @xmath367 to @xmath368 , which is a codeword of @xmath335 , but not of @xmath329 . then , to switch from code @xmath335 to @xmath329 , one should sequentially measure each of the six @xmath21-type stabilizer generators generated by rows of @xmath333 , i.e. those in @xmath369 . note that it is possible to fault - tolerantly measure the stabilizer generators in any stabilizer code @xcite .",
    "if the measurement reveals that a particular @xmath21-type generator is not satisfied , then one should apply an @xmath20-type pauli operator which commutes with all generators in @xmath333 and @xmath332 , except for the violated stabilizer generator ( with which it must anticommute ) .",
    "such an @xmath20-type pauli operator always exists .",
    "following this application , the @xmath21-type generator will no longer be violated .",
    "therefore , after this is carried out for all six generators in @xmath333 , the state will have changed from @xmath368 to @xmath370 , as required .",
    "specifically , we use the term _ gauge fixing _ to refer to the process of measuring and setting the gauge qubits to a desired state .    to recap , in the @xmath340 $ ] reed - muller code @xmath329 , one can implement @xmath23 fault - tolerantly with the following procedure @xmath371 in combination with the transversal gates of @xmath329 , this allows one to implement a fault - tolerant universal gate set @xmath372 .",
    "we will repeat essentially the same procedure for color codes later .      given a @xmath4-dimensional lattice @xmath38 , @xmath160 , satisfying conditions  [ cond1 ]  and  [ cond2 ] , we can catalog all color codes defined on @xmath38 .",
    "namely , a pair of integers @xmath373 , such that @xmath154 , corresponds to a color code , denoted as @xmath158 , with @xmath20- and @xmath21-type gauge generators supported on @xmath151- and @xmath152-simplices .",
    "note that the @xmath20- and @xmath21-type stabilizer generators of @xmath158 are supported on @xmath374-simplices and @xmath375-simplices , respectively . in two dimensions , @xmath137 ,",
    "there is only one color code , @xmath376  a stabilizer code , with both @xmath20- and @xmath21-type stabilizer generators supported on @xmath112-simplices , whereas in three dimensions , @xmath377 , there are three color codes , @xmath378 , @xmath379  stabilizer codes , and @xmath380  a subsystem code",
    ".    one can define a partial order for subsystem color codes defined on the same lattice @xmath38 if each codeword of code @xmath381 is also a codeword of the other code @xmath382 . in particular , we say that @xmath383 holds if    * @xmath381 and @xmath382 encode the same number of logical qubits , with identical bare logical pauli operators , * the gauge group @xmath143 of @xmath381 is contained in the gauge group @xmath384 of @xmath382 , @xmath385 .",
    "note that @xmath385 implies @xmath386 , thus any codeword of @xmath381 is also a codeword of @xmath382 , and since the bare pauli operators for the logical qubit are the same in both codes , it actually represents the same logical codeword in both codes .",
    "observe , that the partial order we have just defined can be succinctly expressed as @xmath387 as illustrated in fig .",
    "[ fig : colorcodesfamily ] .",
    "this follows from the observation that due to the ( disjoint union ) lemma  [ disjointunionlemma ] the @xmath20-type gauge generators of @xmath158 , which are supported on @xmath151-simplices , can be expressed as the product of the @xmath20-type gauge generators of @xmath388 supported on @xmath389-simplices , since @xmath390 .",
    "similarly for @xmath21-type gauge generators .",
    "we represent the family of color codes in fig .",
    "[ fig : colorcodesfamily ] , and show their partial order using arrows .    , only color codes below the @xmath11 diagonal line can be realized , where @xmath150 and the point @xmath391 corresponds to the color code @xmath163 .",
    "this constraint holds , since @xmath151 and @xmath152 have to satisfy @xmath154 .",
    "an arrow from code @xmath381 to @xmath382 indicates partial order between them , @xmath383 .",
    "the number placed at @xmath391 indicates the maximum gate @xmath164 which can be implemented transversally with the stabilizer color code @xmath177 , with @xmath392 , resulting in @xmath393.,scaledwidth=35.0% ]      here we apply the techniques just discussed to color codes defined on the same lattice @xmath38 .",
    "one can switch back and forth between two codes which are comparable , @xmath394 , as follows    * @xmath395 : one does nothing , since codewords of @xmath158 are codewords of @xmath388 , * @xmath396 : one can view the codewords of @xmath158 as those for @xmath388 with the additional gauge qubits present in @xmath158 set to a particular state .",
    "to switch , one fixes the state of the additional gauge qubits to the appropriate state .    given a three - dimensional lattice @xmath38 , @xmath397",
    ", one can implement a universal gate set starting with a code @xmath398 . as explained earlier",
    ", one can transversally perform the logical @xmath22 and @xmath399 on that code . to form a universal gate set",
    ", it suffices to also implement logical @xmath23 .",
    "this gate can not be implemented transversally in @xmath398 , but can be achieved in @xmath162 .",
    "note that @xmath400 , therefore any codeword in @xmath401 is a valid codeword in @xmath402 .",
    "in particular , we can think of @xmath403 as @xmath404 , where @xmath224 is a state of the gauge qubits of @xmath402 . by applying @xmath73",
    "we perform the logical @xmath23 on the logical qubits of @xmath402 , which also changes the state of the gauge qubits , namely @xmath405 note that the resulting codeword @xmath406 is not a valid codeword of @xmath401 , since the gauge qubits are in the state @xmath407 .",
    "to return to @xmath379 , one needs to _ fix the gauge qubits _ to the correct state , namely @xmath408 , and we obtain a codeword @xmath409 . since @xmath401 is a stabilizer code , it is possible to measure and correct the violated stabilizers in a fault - tolerant way , just as in  section  [ sec:15qubit ] .",
    "therefore , to fix the gauge , one should first measure all @xmath21-type stabilizer generators supported on 1-simplices , and then apply the appropriate @xmath20-type pauli operators in order to correct any violated stabilizer generators .",
    "after this , assuming no errors have occurred , all the stabilizer generators for @xmath401 are satisfied .    to summarize",
    ", we can perform the logical @xmath23 on @xmath401 by first applying @xmath73 and subsequently fixing the gauge to return to the codespace of @xmath401 , @xmath410    since @xmath411 and @xmath351 can be performed transversally in @xmath401 , one can fault - tolerantly implement a universal gate - set @xmath372 in @xmath401 .",
    "this procedure can be directly generalized to fault - tolerantly implement the universal gate set @xmath412 with the code @xmath315 in @xmath4 dimensions .",
    "we would like to thank hctor bombn for introducing us to color codes and taking the time to explain his results .",
    "we would like to thank jeongwan haah , beni yoshida , olivier landon - cardinal , gorjan alagic and john preskill for helpful comments on the manuscript .",
    "we thank fernando pastawski for pointing out bipartition as a possible construction of the set @xmath87 .",
    "we acknowledge funding provided by the institute for quantum information and matter , an nsf physics frontiers center with support of the gordon and betty moore foundation ( grants no . phy-0803371 and phy-1125565 ) .",
    "36ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]",
    " + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty http://arxiv.org/abs/1311.0879 [   ( ) ] ,   link:\\doibase 10.1016/s0003 - 4916(02)00018 - 0 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevb.71.045110 [ * * , ( ) ] link:\\doibase 10.1103/physrevlett.97.180501 [ * * ,   ( ) ] http://arxiv.org/abs/1003.2856 [   ( ) ] ,   in  link:\\doibase 10.1109/sfcs.1996.548464 [ _ _ ]  ( ,  )  pp",
    ".   link:\\doibase 10.1098/rspa.1998.0167 [ * * ,   ( ) ] http://stacks.iop.org/0036-0279/52/i=6/a=r02 [ * * ,   ( ) ] @noop _ _  ( ,  ) link:\\doibase 10.1103/physreva.71.022316 [ * * ,   ( ) ] link:\\doibase 10.1103/physreva.86.032324 [ * * ,   ( ) ] link:\\doibase    10.1103/revmodphys.80.1083 [ * * ,   ( ) ] link:\\doibase 10.1103/physreva.64.052309 [ * * ,   ( ) ] link:\\doibase 10.1126/science.1231930 [ * * ,   ( ) ] link:\\doibase    10.1103/physreva.90.022305 [ * * ,   ( ) ] link:\\doibase 10.1103/physreva.54.1862 [ * * ,   ( ) ] link:\\doibase    10.1103/physrevlett.78.405 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.110.170503 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.102.110502 [ * * , ( ) ] link:\\doibase 10.1038/46503 [ * * ,   ( ) ] http://arxiv.org/abs/1408.1720 [   ( ) ] ,   http://arxiv.org/abs/1409.3898 [   ( ) ] ,   link:\\doibase 10.1103/physrevlett.112.010505 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.111.090505 [ * * ,   ( ) ] link:\\doibase 10.1103/physrevlett.113.080501 [ * * ,   ( ) ] in  http://arxiv.org/abs/1311.0277[__ ] ,  ( ,  ) link:\\doibase 10.1103/physrevb.75.075103 [ * * ,   ( ) ] http://arxiv.org/abs/quant-ph/9807006 [   ( ) ] ,   link:\\doibase 10.1103/physreva.70.052328 [ * * ,   ( ) ] @noop _ _  ( ,  ) @noop _ _  ( ,  ) link:\\doibase 10.1103/physrevlett.95.230504 [ * * ,   ( ) ] link:\\doibase 10.1103/physreva.73.012340 [ * * , ( ) ] @noop _ _  ( ,  ) link:\\doibase 10.1109/18.771249 [ * * ,   ( ) ] http://arxiv.org/abs/1403.5426 [   ( ) ] ,",
    "a recipe to obtain a lattice @xmath38 satisfying the conditions  [ cond1 ]  and  [ cond2 ] required to define color codes in @xmath4 dimensions is as follows ( see fig .  [",
    "fig : construction2d ] for an example in @xmath137 ) .",
    "-simplex @xmath109 , with vertices colored in red , green and blue .",
    "( b ) divide @xmath109 into `` smaller '' simplices with matching colors .",
    "this is a @xmath19-colorable homogeneous simplicial @xmath114-complex @xmath413 .",
    "( c ) place @xmath413 inside a @xmath114-simplex @xmath167 and attach @xmath114-simplices between @xmath167 and @xmath413 .",
    "the resulting homogeneous simplicial @xmath114-complex @xmath38 is @xmath19-colorable , and thus we can define a color code on the lattice @xmath38.,scaledwidth=41.0% ]    1 .",
    "start with a @xmath4-simplex @xmath109 , with vertices which are colored with @xmath108 colors @xmath414 .",
    "2 .   construct a homogeneous simplicial @xmath4-complex @xmath413 from @xmath109 by dividing @xmath91-faces of @xmath109 into @xmath91-simplices .",
    "we also require that the coloring is preserved , i.e. every @xmath91-face @xmath117 colored with @xmath415 is divided into @xmath91-simplices colored with @xmath173 and the whole complex @xmath413 is @xmath126-colorable .",
    "place the @xmath4-complex @xmath413 inside a @xmath4-simplex @xmath167 colored with @xmath414 .",
    "4 .   for every @xmath91-face @xmath416 and for every @xmath417-simplex @xmath418 obtained from a @xmath417-face @xmath117 with complementary colors , @xmath419 , attach a @xmath4-simplex spanned by @xmath420 and @xmath421 . 5 .   choose @xmath38 to be the collection of all @xmath4-simplices added in step 4 , together with simplices belonging to @xmath413 and @xmath167 .",
    "this can be used to define a color code on the lattice @xmath38 as specified in section  [ sec : ddim ] .",
    "note that in the above recipe , step 2 is not fully specified .",
    "any homogeneous simplicial @xmath4-complex @xmath413 obtained from a @xmath4-simplex @xmath109 will work , as long as @xmath413 is @xmath126-colorable",
    ". such lattices always exist  below we give an explicit example of a family of lattices in any dimension @xmath15 .",
    "following steps 3 - 5 , we always obtain a lattice on which we can define a color code in @xmath4 dimensions .",
    "there is a systematic construction of a family of ( fractal ) color codes in @xmath4 dimensions , for which there is an explicit recipe for @xmath413 .",
    "the resulting codes neither have spatially local generators nor have macroscopic distance , and do not result in color codes , which are topological stabilizer codes .",
    "the prescription is as follows .    1 .",
    "the first member is defined on the lattice @xmath422 , obtained from the recipe by setting @xmath413 to be a @xmath4-simplex .",
    "the @xmath423 member of the family is defined on the lattice @xmath424 , obtained from the recipe by setting @xmath425 .      in ref .",
    "@xcite , a systematic construction in two and three dimensions for families of color codes with spatially local generators is presented . in two dimensions ,",
    "@xmath413 is chosen to be a part of triangular lattice ( as in fig .",
    "[ fig : construction2d ] ) , whereas in three dimensions @xmath413 is a part of the bcc lattice .",
    "bombn s constructions result in topological color codes .",
    "there exists a family of codes known as the quantum reed - muller codes  @xcite .",
    "here we are concerned with the subfamily of quantum reed - muller codes with members labeled uniquely by an integer @xmath426 with parameters @xmath427 $ ] , i.e. encoding one logical qubit into @xmath428 physical qubits , with a distance of three .",
    "we denote by @xmath429 the @xmath430 member of this subfamily .",
    "these codes are defined in terms of matrices @xmath431 satisfying the recursion relations @xmath432 note that the set of columns of @xmath433 is the set of all non - zero binary vectors of length @xmath297 . by @xmath434",
    "we denote a matrix dual to @xmath433 , namely a matrix with rows being a basis of the kernel of @xmath433 .",
    "clearly , @xmath435 .",
    "we can define @xmath429 as the stabilizer code with the stabilizer group @xmath436 generated by rows of @xmath433 and @xmath434 with @xmath112 s and @xmath113 s replaced by @xmath437 s and @xmath20 s or @xmath21 s , namely @xmath438 we now show that @xmath429 is the same as the stabilizer color code @xmath439 obtained from the construction described in appendix  [ latticeconstruction ] by taking the simplicial complex @xmath413 to be a @xmath440-simplex @xmath109 , @xmath441 .",
    "in other words , @xmath429 is equal to the first member of the ( fractal ) color code family in @xmath442 dimensions ( see fig .  [",
    "fig : fractalcode ] ( a ) for @xmath443 case ) .",
    "in particular , @xmath444 is steane s @xmath445-qubit code and @xmath446 is the @xmath339-qubit reed - muller code .     as a special case of a ( stabilizer ) color code @xmath439 for ( a ) @xmath443  steane s @xmath445-qubit code , and ( b ) @xmath447  the @xmath339-qubit reed - muller code .",
    "steane s code with all the possible transversal gates have recently been implemented experimentally  @xcite .",
    ", scaledwidth=45.0% ]    to prove this equivalence , it is sufficient to show that there is a one - to - one identification of physical qubits of @xmath429 with those of @xmath439 such that the logical pauli operators @xmath97 and @xmath98 are identical , and that the @xmath20-type stabilizer generators are identical .",
    "note that this completely specifies the stabilizer group @xmath25 , since the @xmath21-type generator matrix is a dual to the @xmath20-type generator matrix .",
    "in particular , we show that the @xmath20-type generator matrix @xmath448 for @xmath439 is the same as @xmath433 for @xmath429 up to a permutation of columns .",
    "using the construction described in appendix  [ latticeconstruction ] , and taking the simplicial complex @xmath441 , where @xmath109 is a @xmath440-simplex , results in a lattice @xmath38 , with @xmath449 .",
    "the total number of @xmath440-simplices in @xmath38 is @xmath450 .",
    "this is because we attach @xmath440-simplices between every @xmath451-face @xmath452 , for every @xmath453 , and the @xmath454-face @xmath117 colored with the complementary colors , @xmath455 .",
    "we can pick a subset of @xmath91 vertices of @xmath167 in @xmath456 different ways and thus the number of newly attached @xmath440-simplices is @xmath457 . therefore , including a qubit placed at @xmath109 , there are exactly @xmath428 physical qubits in @xmath458 . on the other hand ,",
    "there are exactly @xmath297 vertices in @xmath124 , and thus there are @xmath297 @xmath20-type stabilizer generators in @xmath458 .",
    "the weight of a column in @xmath448 , corresponding to a qubit supported on a @xmath440-simplex @xmath459 , is given by the number of @xmath20-type stabilizer generators supported on that qubit , i.e. the number of vertices belonging to @xmath459 but not to @xmath122 .",
    "there are exactly @xmath460 @xmath440-simplices containing @xmath91 vertices not belonging to @xmath122 and each of them contains different set of @xmath91 vertices .",
    "thus , there are @xmath461 different columns of weight @xmath91 in @xmath448 and the only way this can occur is if the columns of @xmath448 are the set of all non - zero binary vectors of length @xmath297 .",
    "thus , up to a relabeling of physical qubits , @xmath448 and @xmath433 are identical .",
    "also note that the logical operators of both codes are @xmath71 and @xmath72 .",
    "therefore the codes are the same ."
  ],
  "abstract_text": [
    "<S> we provide a simplified , yet rigorous presentation of the ideas from bombn s paper _ gauge color codes _ @xcite . our presentation is self - contained , and assumes only basic concepts from quantum error correction . </S>",
    "<S> we provide an explicit construction of a family of color codes in arbitrary dimensions and describe some of their crucial properties . within this framework , </S>",
    "<S> we explicitly show how to transversally implement the generalized phase gate @xmath0 , which deviates from the method in ref .  </S>",
    "<S> @xcite , allowing an arguably simpler proof . </S>",
    "<S> we describe how to implement the hadamard gate @xmath1 fault - tolerantly using code switching . in three dimensions , </S>",
    "<S> this yields , together with the transversal @xmath2 , a fault - tolerant universal gate set @xmath3 without state - distillation . </S>"
  ]
}
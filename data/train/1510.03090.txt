{
  "article_text": [
    "multimedia scenarios such as interactive theater performances , interactive museum exhibitions and electroacoustic music are usually designed and controlled by computer programs .",
    "it is crucial that the software to execute such scenarios preserve the _ macroform _ and the _ microform_. the macroform comprises the structure of the scenario ( e.g. , the tempo and the duration of the scenes , movements , parts and measures ) .",
    "the microform comprises the operations with samples ( e.g. , micro delays , articulation , and sound envelope ) . in this paper",
    "we deal with the macroform of multimedia content , but only with the microform of sound .",
    "there are four problems with most existing multimedia scenario software : ( 1 ) time models are unrelated temporally , ( 2 ) they provide no hierarchy , ( 3 ) the different time scales are unrelated , and ( 4 ) schedulers are not appropriate for real - time . in what follows",
    "we explain each of them .",
    "the first problem is that software to design multimedia scenarios is usually based either on a fixed timeline with a very precise script , such as _ _ pro tools _ _ , or a more flexible script using cue lists , such as the theater cue manager _ _ qlab__. another software to design such scenarios is _ _ ableton live__. live is often used in electroacoustic music and performing arts because it allows to use both the fixed timeline and the cue lists , but the two time models are unrelated temporally .",
    "in fact , most software provide only one time model or they are unrelated temporally .",
    "the second problem is that most software do not provide a hierarchy to represent the temporal objects of the scenario . as an example , using a hierarchy , it is possible to control the start or end of an object by controlling those from its parent . in interactive music , vickery argues that a hierarchy is useful to control higher - order parameters of the piece ; for instance , to control the volume dynamics , instead of the volume of each note @xcite .",
    "the third problem is that the different time scales are often unrelated and can not be controlled in the same tool . _",
    "discrete user gestures _",
    "( e.g. , clicking the mouse ) , _ control events _",
    "( e.g. , control messages ) and _ sound processing _ have different sampling frequencies and computing models . as an example , the audio processing language _ _ csound _ _ has three types of variables with different sampling rates : instrument variables , control variables and audio variables .    as a consequence of having the time scales unrelated , it is difficult to associate , for instance , a human gesture to both control events and signal processing parameters in csound . to control signal processing and control events by human gestures , _ max / msp _ and _ pure data ( pd ) _",
    "@xcite are often used , but they do not provide an environment to design scenarios .",
    "the fourth problem is that the most _ soft real - time _",
    "schedulers , for instance those from pd and max , control both signals and control messages together and they do not support parallelism , thus they often fail to deliver control messages at the required time ; for instance , when they work under high cpu load , which is common when they process video , 3d graphics and sound . we argue that in soft real - time , the usefulness of a result degrades after its deadline , thereby degrading the system s quality of service ; whereas in _ hard real - time _ missing a deadline is a total system failure ( e.g. , flight control systems ) .",
    "we focus on soft real - time .    to solve the problem of scheduling and to write high - performance",
    "_ digital signal processors ( dsps ) _ for max and pd , users often write c++ plugins to model loops and independent threads . c++ plugins solve part of the problem , but the control messages for the input and output of these plugins are handled by max or pd s schedulers .",
    "another solution for the scheduler problem often used during live performance is to open two or more instances of max or pd simultaneously , running different programs on each one .",
    "nonetheless , synchronization is usually done either manually during performance or by using _ open sound control ( osc ) _ , which adds more complexity and latency .",
    "the description of a multimedia scenario requires a consistent relationship between the representation of the scenario in the composition environment and the execution .",
    "artistic creation requires a composition of events at different time scales . as an example , it is easy to describe that a video begins when the second string of a guitar arpeggio starts , but how can we achieve it in practice if the beginning of the notes of the arpeggio is controlled by the user ?",
    "the problem emerges at runtime .",
    "the example given above is very simple , but under high cpu load , a system interruption at the point of playing the arpeggio and the video can often lead to desynchronization . usually , these eventualities are not considered by developers , as the quality of systems is evaluated according to an average performance .",
    "nonetheless , during performance , it is desired that the system works well even under high cpu load .",
    "the synchronization between the arpeggio and the video must be achieved in every execution . if it does not work for a performance , concert or show ,",
    "the system performance is not satisfactory .",
    "usually , artists prefer that an event is canceled if the event is not going to be properly synchronized with the other media .",
    "users want a system that ensures that the events are either launched as they were defined in the score or they are not produced .",
    "it is difficult to ensure determinism in the execution of multimedia processes ( e.g. , sound , video and 3d images ) .",
    "some operating system like _ _ rt linux _ _ or _ _ redhawk _ _ include priority queues for processes to respect hard real - time constraints ; however , in common operating systems , the user does not have this type of control .",
    "this paper proposes a system to declare temporal constraints among multimedia processes that aims to ensure all temporal relations between events in the macroform and the microform of the scenario ; however , our solution remains under the realm of soft real - time .",
    "there is a formalism to link both the fixed timeline and the cue list model .",
    "the formalism of _ interactive scores _ was proposed at the beginning of the century to describe scenarios with flexible and fixed temporal relations among temporal objects @xcite .",
    "examples of temporal objects are sounds , videos and light controls .",
    "the designer can specify that a video is played strictly before a light show , as an example of flexible temporal relations .",
    "the designer can also specify that a drum loop starts three seconds after the video , or between 10 and 15 seconds after , as an example of fixed temporal relations .",
    "interactive scores also include a hierarchy of temporal objects : an object contained inside another object must start after the execution of its father and must end before its father ends .",
    "in addition , by using fixed temporal relations on the first level of the hierarchy , it is possible to express absolute execution times for the events of the scenario .    a mathematical structural definition , an abstract semantics , formal properties of the scenarios , and an operational semantics of interactive scores was presented in @xcite .    the formalism of interactive scores has also encouraged the development of software .",
    "an implementation of interactive scores is _ virage _ , which has been used for performing arts @xcite .",
    "another one is _ iscore _",
    "@xcite , used for composition of electroacoustic music .",
    "unfortunately , neither virage nor iscore provide a satisfactory solution to control sound processing in real - time .",
    "virage can control different devices by the means of the osc protocol and it can be used to model , for instance , curves that change the value of a dsp parameter for sound synthesis .",
    "nonetheless , the values of these curves are sent at the control - event frequency and , therefore , its users can not express temporal relations at the sound processing level ; for instance , that one sound starts 500 @xmath0s after another .      in this paper , we propose an extension to the interactive scores formalism to define dsps for sound synthesis .",
    "this paper deals with the macrostructure of multimedia , but only microstructure of sound , and does not consider the structure of image , video or other media . to define the microform of sound , we define a new type of temporal relations meant for high precision ; for instance , to express micro delays .",
    "we also introduce dataflow relations ; for instance , how the audio recorded by a temporal object is transferred to another object to filter it , add a micro delay , and then , send it to another temporal object to be diffused .",
    "the designer may define two views of the scenario : one for temporal relations and another one for dataflow ( e.g. , fig .",
    "[ fig : microdelayscore ] ) ; otherwise , relations may overlap .",
    "we also propose an encoding of the scenario into two models that interact during performance .",
    "( 1 ) a model based on the _ non - deterministic timed concurrent constraint _ ( ` ntcc ` ) calculus @xcite for concurrency , user interactions and temporal relations , and ( 2 ) a model based upon _",
    "@xcite for sound processing and micro controls .",
    "the great advantage of having a formal model is that we could prove properties ( e.g. , playability ) and predict the behavior of the system .",
    "in fact , the interoperability of ntcc and faust has already been sketched in previous works @xcite .",
    "the novelty of our approach is using the constraints sent from ` ntcc ` to control faust .",
    "we tested our applications in pd , although they could also be compiled for max or as a standalone program since both faust and ` ntcc ` can be translated into c++ and max .",
    "in fact , the final goal of our research is to develop a standalone program .    in what follows",
    "we briefly describe ` ntcc ` , faust , and how they interact together .      in the process calculus ` ntcc ` , a system is modeled in terms of processes adding to a common _ store _ partial information on the value of variables .",
    "concurrent processes synchronize by blocking until a piece of information can be deduced from the store .    `",
    "ntcc ` includes the notion of discrete time as a sequence of time units .",
    "each time unit starts with a ( possibly empty ) store supplied by the environment .",
    "processes scheduled for that time unit are then run until quiescence .",
    "the resulting store is the output at that time unit .",
    "residual processes might also result .",
    "these are scheduled for the next ( or any future ) time unit and computation starts all over again . `",
    "ntcc ` has been used in many musical applications @xcite .",
    "the semantics of ` ntcc ` processes are given in @xcite .",
    "process calculi has been applied to the modeling of interactive music systems @xcite and ecological systems @xcite .    a model for interactive scores based upon `",
    "ntcc ` is proposed in @xcite . in this model",
    ", the store contains all the constraints from the temporal relations and the information of the events launched by the user .",
    "temporal object processes synchronize themselves with the store .    `",
    "ntcc ` models can be simulated in a real - time setting using _ ntccrt _ @xcite .",
    "ntccrt is based on _ gecode _ @xcite : state - of - the - art in constraint propagation .",
    "ntccrt programs can be compiled into standalone programs , or plugins for pd or max .",
    "users can use pd to communicate any object with the ntccrt plugin .",
    "in fact , ntccrt can control all the available objects for audio processing defined in pd , although our goal is to use faust for such tasks .",
    "faust is a functional programming language for sound processing . in faust ,",
    "dsp algorithms are functions operating on signals .",
    "faust programs are compiled into efficient c++ code that can be used in multiple programming languages and environments @xcite .",
    "_ graphical user interface ( gui ) _ objects in faust can be defined in the same way as other signals .",
    "we can control buttons , check boxes and integer inputs originally designed for users from ntccrt ( fig .",
    "[ fig : faustbuton ] ) .",
    "although faust programs can be compiled into efficient c++ programs , faust programs are limited because all signals must have the same sampling rate .",
    "for that reason , faust was recently extended for multirate @xcite .",
    "with such an extension , faust would be capable to handle signals at different frequencies .",
    "this is useful , for instance , for scenarios with different media such as audio and video .",
    "unfortunately , this extension is not yet implemented , thus we only focus on sound processing .",
    "another extension of faust is the _ pd - faust _",
    "interface @xcite .",
    "this interface is useful for dsps that can not be efficiently implemented in pd because of a restriction of pd : the 1-block minimum delay for feedback loops .",
    "an example of such a dsp is the _ karplus - strong _ algorithm @xcite . furthermore , pd - faust can also be used for other dsps .",
    "finally , there is another reason to choose faust : its extension for automatic parallelization and vectorization @xcite .",
    "this extension has been proved to be very efficient ; for instance , for the karplus - strong which we will use in several examples in this paper .",
    "_ found that using automatic parallelization , a program that simulates simultaneously 32 strings based on karplus - strong is twice faster using automatic parallelization @xcite .",
    "ntcc can send constraints to faust , but currently faust can not send information to ntcc because it requires subsampling",
    ". the constraints sent from ntcc can not be partial information , such as @xmath1 or @xmath2 because such information can not be processed by faust .",
    "constraints must be equalities of the form @xmath3 .",
    "using pure data , we can communicate those values from ntcc to faust by the means of number fields .    as an example",
    ", we present a possible interoperoperation between faust and ntcc in figure [ fig : heterogeneousexample ] . on the one hand",
    ", ntcc can receive a user input each discrete time unit .",
    "if the value of the input is @xmath4 , ntcc communicates to faust that the gain is @xmath5 ; otherwise , if the user gives no input , ntcc communicates faust that the gain is @xmath6 . on the other hand",
    ", faust takes an audio signal an multiplies by the gain value given by ntcc .",
    "in addition , faust multiplies the signal by @xmath7 if the current value of the audio input is less than @xmath8 .",
    "note that ntcc can not take decisions based on the values of the audio signal because ntcc is not mean to handle audio signals , and faust can not take decision based on absence of information or partial information .",
    "it is out of the scope of this paper to define formal semantics of interactive scores .",
    "semantics of interactive scores were defined in @xcite .",
    "it also out of the scope of this paper to fully describe the semantics of interactive scores and faust interoperability .",
    "such a semantics is to be defined in the _ interactivity in the writing of time and interactions _ ( inedit ) project supported by the",
    "_ french research agency _",
    "the purpose of this project is to explore the interoperability of interactive scores , faust , and other french computer music software .",
    "the project will start in fall 2012 .",
    "this paper offers preliminary and encouraging results for inedit .    in what follows ,",
    "we present the extension of interactive scores in section [ extension ] ; some applications developed with our framework in section [ applications ] ; quantitative results of the execution of the application in section [ results ] ; and conclusions , results and future work in section [ conclusions ] .",
    "scenarios in interactive scores are represented by _ temporal objects _ , _ temporal relations for micro and macro controls _ , _ interactive objects _ and _ dataflow relations_.      temporal objects can be triggered by interactive objects ( usually launched by the user ) and several temporal objects can be active simultaneously .",
    "the duration of a temporal object is given by an interval of natural numbers ( which may include @xmath9 ) .",
    "a temporal object may contain other temporal objects : this hierarchy allows us to control the start or end of a temporal object by controlling the start or end of its parent .",
    "objects that do not have children , may have a sound synthesis process .",
    "a process is a faust program that is active during the execution of the object .",
    "these processes include at least two input signals : to control its start and end . during the execution of a score",
    ", only one instance of a temporal object can be active simultaneously because scores are linear and loops are not considered in this extension .",
    "temporal relations provide a partial order for the execution of the temporal objects ; for instance , to express precedence between two objects . in interactive scores , it is also possible to specify a variety of relations among temporal objects such as global constraints and conditional branching . in this paper , we take into account scenarios limited to hierarchical relations represented as a directed tree , _ point - to - point temporal relations _ without disjunction nor inequality ( @xmath10 ) , and quantitative temporal relations @xcite .",
    "the first ` ntcc ` model proposed in @xcite is based on allen s relations ; fortunately , point - to - point relations can express all allen s relations without disjunction @xcite .",
    "we proposed a ` ntcc ` model with point - to - point relations in @xcite .",
    "in this paper , we extend such a model to control faust from ` ntcc ` .    in the model in @xcite ,",
    "the relations between the start or end of two temporal objects are labeled with an interval of integers that represents the possible duration between the two points .",
    "using @xmath9 in such intervals , it is possible to represent the relations @xmath11 and @xmath12 with their usual interpretation over natural numbers .    in this paper , we also include _ high - precision temporal relations_. this new type of temporal relations between sound objects are meant to have higher precision and they are controlled by faust .",
    "temporal relations for sound - processing micro controls are labeled by an integer @xmath13 , where @xmath13 represents , for instance , a number of samples or microseconds .",
    "nonetheless , we can also use this relations to represent durations of seconds .",
    "we represent graphically such relations with dashed arrows .",
    "a dataflow relation between objects @xmath14 and @xmath15 means that the audio outputs of @xmath14 are connected to the audio inputs of @xmath15 .",
    "if @xmath14 has more outputs than @xmath15 inputs , they are merged ; if @xmath14 has less outputs than @xmath15 , they are split",
    ". the control inputs of a faust subprocess are connected automatically depending on the dataflow , and the micro and macro controls .    as an example",
    ", the reader may see the _ dataflow view _ of a scenario in figure [ fig : dataflowexample ] .",
    "in such a scenario , a sound is recorded by the acquisition object , then the stream is passed to a delay object , and then is passed to a filter that adds gain .",
    "finally , the stream is passed to an object that sends two copies of the stream to the output . in what follow",
    ", we describe another example .",
    "karplus - strong is an algorithm to generate metallic plucked - string sounds .",
    "it can be described in a few lines of faust . in the faust program presented by orlarey _",
    "_ in @xcite , a button triggers the sound .",
    "we connect such button to a control signal sent from the ntccrt plugin to the faust plugin at the beginning of the temporal object .",
    "we also add another button to stop the sound of the string . in pure data ( pd ) ,",
    "such buttons can be represented by _ bang _ or _ toggle _ objects that send messages to the plugin .",
    "in addition , we can use number fields as input for faust .",
    "we use pd for simplicity , but pd is not required to integrate ntccrt with faust .",
    "figure [ fig : threefaust ] is a scenario that models an arpeggio of three strings using karplus - strong .",
    "the dataflow is simple : each audio outputs is merged into a single output .",
    "there are two types of temporal relations : some labeled with intervals in the order of seconds that will be handled by the _ ntccrt _",
    "plugin , and the high precision ones , in the order of samples , that will be handled by the faust plugin .    ) and in the high precision temporal relations with samples ( @xmath16 ) .",
    "interactive objects are @xmath14 and @xmath15 .",
    "]    the temporal constraints of the scenario are obtained from the duration of each temporal object , the hierarchy and from the temporal relations . for each temporal object , we add to the constraints : ( 1 ) `` the start time of the object plus its duration is equal to the end time of the object '' and ( 2 ) `` the object starts after its father and ends before its father '' . for each temporal relation , we add the constraint `` the time of the first point plus the duration in the relation is the time of the second point '' .",
    "the temporal constraints of the score are explained in detail in @xcite .",
    "figure [ fig : constraintgraph ] is the constraint graph of the scenario in figure [ fig : threefaust ] .",
    "the ` ntcc ` model is parametric on the constraint graph , which can be obtained from the abstract semantics of the score , introduced in @xcite .",
    "high precision relations are represented as zero durations in the constraint graph because they are controlled by faust and not by ntccrt , even if the duration in the relations were given in seconds .    .",
    "the durations in the temporal relations are labeled with seconds ( @xmath17 ) and the high precision temporal relations are considered as zero delays . ]",
    "figure [ fig : faustdiagram ] is the block diagram for the faust program in charge of sound processing .",
    "block diagram semantics are explained in detail in @xcite .",
    "the inputs are controlled by the ntccrt plugin . for simplicity , to avoid upsampling , control signals ( e.g. , @xmath18 , @xmath19 and @xmath20 ) are replaced by faust gui buttons ( fig .",
    "[ fig : faustbuton ] ) .",
    "interactive objects are represented by messages labeled by @xmath4 : if a message arrives , the interactive object must be launched .",
    "the audio output of each karplus block is added together into a single output .",
    "figure [ fig : ntccfaustpd ] is the pure data patch representing the scenario .",
    "( the start of the first string ) . ]    .",
    "the ntccrt plugin has only five outputs because the start of the second karplus - strong object ( @xmath21 ) is controlled directly from faust .",
    "the internal clock of ntccrt is controlled by a pd _ metronome _ object with a period of 20 ms.,width=226 ]",
    "we present some multimedia scenarios modeled in the extended formalism of interactive scores .      in figure [",
    "fig : threethreefaust ] , we duplicate an arpeggio three times .",
    "the macroform is respected : the duration of each arpeggio is 10 seconds , but the start date and the durations of some notes can be controlled by the user with the freedom described in figure [ fig : threefaust ] .",
    "this problems shows how to solve the problem of having both time models ( the cue list and the fixed timeline models ) temporally related . in our framework",
    ", we can model the macroform of the arpeggio ( e.g. , the duration of the notes and the global duration ) and we can also model the microform ( e.g. , the microdelays handled by faust and the delays among the notes that can be controlled by user interactions ) .    ) .",
    "the double - headed arrow represents an inequality ( @xmath22 ) and a white - headed arrow represents an equality relation ( @xmath12 ) . ]      there is a problem with the example in figure [ fig : threefaust ] : interrupting abruptly the execution of the karplus - strong dsp causes perceptible `` clicks '' . a solution to this problem is to gradually decrease the volume ( or increase the attenuation parameter ) before stopping the dsp .",
    "the value of 0.5 seconds is arbitrary , but it is fixed in the scenario , allowing us to know precisely the macroform of the scenario ( e.g. , its total duration ) .",
    "therefore , instead of increasing the attenuation parameter indefinitely , we represent the attenuation with a temporal object , thus we can predict its duration and the global duration of the arpeggio .",
    ", to remove `` clicks '' .",
    "the karplus objects simulate plucked - strings and the ac objects change the attenuation parameter of the strings gradually .",
    "the macroform of the scenario in figure [ fig : threefaust ] is preserved intact . ]",
    "small delays between the start of two temporal objects are usually not perceptible ; however , in some cases such as the example in figure [ fig : microdelayscore] , a small delay of 500 @xmath23 between a sound played on the left channel and the same sound played on the right channel can change the way on which we perceive the sound source .",
    "we implemented the arpeggio of figure [ fig : threefaust ] .",
    "we tested three implementations of the karplus - strong in pure data ( pd ) : one from colin barry that uses an instruction to define blocks of one sample ( object @xmath24~@xmath25 ) , one from johannes kreidler that uses one - sample delays ( object @xmath26~@xmath25 ) , and one from albert grf using a faust plugin generated with pd - faust .",
    "the interactive objects are launched automatically ( at the latest possible time ) .    for each test",
    ", we played each arpeggio four times with a cpu load of 3% and four times with a load of 85% .",
    "we repeated each test ten times .",
    "the tests were performed in a 3.06 ghz intel core i3 processor on an imac with a ram memory of 4 gb 1333 mhz ddr3 , under mac os 10.6.8 , using pure data extended 0.42 and faust 0.9 . to increase the cpu load",
    ", we ran several video processing operations from the _ graphics environment for multimedia _ ( gem ) plugin for pd . the cpu load values are approximatively and they were obtained using mac os x s _ activity monitor_.    we calculated the average relative jitter of the micro- temporal structure of the scenario : the average time difference between the expected starting time of each string , with respect to the first string of the arpeggio , and the time obtained during execution .",
    "the average relative jitter using faust is 500 @xmath0s with both a cpu load of 3% and 85% ; on the contrary , the implementation from colin barry has a jitter of 7991 ms with a cpu load of 85% and the implementation from johannes kreidler has a jitter of 9231 ms with a cpu load of 85% .",
    "these values are very big and make the listening of the arpeggio incomprehensible .",
    "the average relative jitter was calculated using matlab .",
    "the pd implementations of karplus - strong have also a limitation for high frequencies : they work well until 2000 hz and faust works well until 3000 hz .",
    "although this last result is the authors perception , we believe that the upper fundamental frequency limit may be due to the `` chunk - sized '' buffer delay in the feedback loop in pd .",
    "another advantage of faust is that the control signals in faust can be delayed at sample level , whereas it is not possible to add sample delays to messages in pd . in pd , we need to delay the audio output instead of the control signals to produce such result . finally , using faust , sound processors could be automatically parallelized , improving its performance in many cases @xcite .",
    "in this paper we extend the formalism of interactive scores with sound processing and micro controls for sound processors .",
    "we present an encoding of the scenario into a ` ntcc ` model executed using the real - time capable interpreter _ ntccrt_ and a faust program .",
    "both programs interact during the performance of the scenario .",
    "we show how some interesting applications can be easily modeled in the formalism and how they can be executed in pure data ( pd ) .    using faust and ntccrt",
    ", we achieved an efficient and real - time capable performance of a scenario even under high cpu - load .",
    "nonetheless , our final goal is to integrate ntccrt and faust in a standalone program .",
    "we argue that the solution we propose solves three of the problems we posed in the introduction .",
    "first , time models are related temporally , for instance , we can specify that an object is executed strictly in the third second of execution , and we can can also express that another object is executed between two and five seconds after the end of the previous object .",
    "although in the execution the micro controls are managed by faust and the macro controls by ` ntcc ` , it is also possible to express , for instance , that an object starts 500 microseconds after another , and it will end one second before another object .",
    "second , hierarchy is available in our model and it allows to constrain the execution times of the objects contained in another object .",
    "third , the system is appropriate , even under high cpu - load , to interact with a human in real - time , as shown in the quantitative results .    unfortunately , different time scales are available in our tool , but they are temporally unrelated , as in many tools ; for instance , is not possible to relate the frequency of the clock that controls ntcc discrete time units to the signal processing sampling rate .",
    "note that the score in figure [ fig : threefaust ] is difficult to model in the existing tools presented in the introduction .",
    "qlab and live do not allow to model delays of 100 samples .",
    "max and csound allow to express delays of 100 samples , but it is very hard to synchronize processes whose durations are integer intervals such as @xmath27 $ ] .",
    "the solution to these problems is relevant for the multimedia interaction domain because , in addition to sound processing , the computer may execute at the same time complex video and image operations .",
    "for that reason , we did the evaluation of our system under high cpu - load , obtained by executing several video processing operations concurrently .",
    "we believe that any faust program could be translated into ` ntcc ` based on the results obtained by rueda _",
    "_ in @xcite .",
    "_ translated the karplus - strong faust program into ` ntcc ` .",
    "although it is clear that the execution of a ntccrt simulation can not be done at sound processing sampling frequency , such translation could be used to verify properties of correctness of a scenario where ` ntcc ` and faust interact ( e.g. , playability ) as proposed in @xcite .",
    "we also propose to extend the implementation to handle audio files efficiently . _",
    "_ libaudiostream _ _ is an audio library , developed at the french research institute _ _ grame _ _ , to manipulate audio resources through the concept of streams using faust programs .    including libaudiostream in our framework",
    ", it will be possible to design a scenario where a temporal object loads a sound file into memory , faust filter it , and then , faust plays the sound at the appropriate time .",
    "precision is guaranteed because the time to load the file and process it is foreknown in the scenario .",
    "currently , we have to rely on third - party programs , such as pd , to do handle audio files , and to communicate the control signals from ntccrt to faust .",
    "ommited during blind reviewing    mauricio toro is associate professor at the computer science department at universidad eafit .",
    "he holds bsc , phd and postdoctorate degrees in computer science .",
    "his research field is simulation and verification of complex concurrent systems ; in particular , he has worked on models of computer music interactive systems and ecological systems .",
    "he also holds an habilitation to supervise phd students from the doctorate of engineering programme at eafit university .",
    "he has two research interests .",
    "first , he is interested in the simulation and verification of spatially - explicit individual - based ecological models for large populations .",
    "this was the topic of research he worked on during his postdoctorate .",
    "second , he is interested in the simulation and verification of structured interactive music scores .",
    "this was the topic of research he worked on during his phd .",
    "myriam desainte - catherine is full professor at universit de bordeaux and the computer science research laboratory of bordeaux ( labri ) .",
    "she has worked for more than 15 years on the formalism of interactive scores .",
    "she has supervised more than 10 phd students on different topics including sound and music computing .",
    "she is currently head of the music modeling team at labri and the studio of creation of electroacoustic music of bordeaux ( scrime ) .",
    "julien castet is researcher at universit de bordeaux and the computer science research laboratory of bordeaux ( labri ) .",
    "he completed a phd in the music modeling team at labri .",
    "his expertise is on signal processing and haptic instruments ."
  ],
  "abstract_text": [
    "<S> software to design multimedia scenarios is usually based either on a fixed timeline or on cue lists , but both models are unrelated temporally . on the contrary </S>",
    "<S> , the formalism of interactive scores can describe multimedia scenarios with flexible and fixed temporal relations among the objects of the scenario , but can not express neither temporal relations for micro controls nor signal processing . </S>",
    "<S> we extend interactive scores with such relations and with sound processing . </S>",
    "<S> we show some applications and we describe how they can be implemented in pure data . </S>",
    "<S> our implementation has low average relative jitter even under high cpu load .    </S>",
    "<S> interactive scores , multimedia , interaction , concurrent constraint programming , sound processing .    </S>",
    "<S> software para disear escenarios multimedia es , usualmente , basado en una lnea de tiempo fija o en una lista de eventos , pero ambos modelos se encuentran sin relaciones temporales . </S>",
    "<S> por el contrario , el formalismo de partituras musicales interactivas puede describir escenarios multimedia , con relaciones temporales de duracin fija y flexible , entre los objetos del escenario , pero tampoco puede expresar relaciones temporales para micro controles ni para para procesamiento de seales . en este artculo presentamos una extensin con ese tipo de relaciones y con procesamiento de seales . </S>",
    "<S> nosotros mostramos algunas aplicaciones y describimos cmo pueden ser implementadas en pure data . </S>",
    "<S> nuestras implementaciones tienen un jitter promedio bajo , an con una alta carga de procesamiento en cpu .    </S>",
    "<S> partituras musicales interactivas , multimedia , interaccin , programacin concurrente por restricciones , procesamiento de sonido . </S>"
  ]
}
{
  "article_text": [
    "physical unclonable functions ( pufs ) are low - cost hardware security primitives and can be seamlessly integrated with devices during the design and fabrication processes  @xcite , to act as trust anchors .",
    "the puf , in essence , extracts secrets from the inevitable process variations . hence , in reality , identical puf instances can not be forged , not even by the same manufacturer . there exists a number of puf structures  @xcite . among them , time - delay based pufs  @xcite , in particular , the arbiter puf ( apuf ) and its variants such as xor - apufs , is one of popular silicon puf construction considering its compact structure and the large challenge - response pair ( crp ) space characterizing of a strong puf  @xcite .",
    "prominent puf applications include authentication and cryptographic key generation  @xcite . in recent years ,",
    "use of pufs in more advanced cryptographic protocols such as key exchange , oblivious transfer , bit commitment and muti - party computation  @xcite , where a strong puf is always required , has been investigated .",
    "although authentication is able to tolerate the noisy puf responses , key generation applications and key exchange , especially recent advanced cryptographic protocols  @xcite , require large number of error free responses .",
    "stabilizing puf response is usually left to the on - chip error correcting logic assisted by the associated priori computed helper data as illustrated in fig .",
    "[ fig : keygeneration ] .",
    "such a scheme maybe adequate for a single or a small number of key extractions such as from sram pufs  @xcite , but becomes a limitation when a large number of keys are necessary .",
    "we propose exploiting puf models , originally used attack pufs by creating puf functional copies  @xcite , to enable the determination of a randomly selected challenge to generate error - free response under all operating conditions in the absence of the apuf .",
    "the developed approach is able to : i ) eschew expensive error correction logic on puf embedded security modules ; ii ) overcome the burden of exhaustive characterization of huge number of crps , especially when large number of keys extracted from strong pufs are necessary ; iii ) eliminate computation of helper data and subsequent on - chip storage or off - chip storage and transfer .",
    "we summarize our contributions below :    1 .",
    "we exploit statistical delay models of apufs to evaluate the response reliability of a random challenge to select challenges that generate error - free responses under all operating conditions .",
    "we have validated our approach based on two apuf datasets .",
    "first , we build synthetic apufs using real - world ro - puf  @xcite frequency measurements to acquire arbitrary number of crps for performing extensive evaluations .",
    "second , we use 64,000 crps collected across eight apufs implemented on eight fpgas .",
    "our results show that no erroneous bits occur when selected responses are re - evaluated across a wide range of operating conditions .",
    "in addition , the selected challenges still exhibit the randomness characteristic expected from the corresponding responses .",
    "we show that our error - free response generation method is cost - free to the puf integrated device without any area or power overhead .",
    "building a model takes less than fifteen seconds including collecting a small number , 10,000 , of crps and the subsequent delay - time statistical characterization of each delay segment at each stage of an apuf , while the reliable challenge selection using the model can be performed on demand .",
    "next section introduces related work .",
    "section  [ sec : apufmodel ] describes the approach to build an accurate statistical delay model of an apuf , and subsequently describes an algorithm to filter challenges that produce highly reliable response bits .",
    "section  [ sec : experimentalsysthesis ] validates the proposed approach based on two apuf datasets .",
    "section  [ sec : conclusion ] concludes this paper .",
    "reconciling puf response errors is usually carried out by employing error correction codes ( ecc ) .",
    "thus the ecc based generalized puf key generations have two phases as illustrated in fig .",
    "[ fig : keygeneration ] : ( 1 ) the key enrollment phase computes helper data that will be used in ( 2 ) the key regeneration phase to reconcile errors of the reproduced response and retrieve the enrolled key .",
    "this scheme is efficient to guarantee a small number of error - free responses to derive a single cryptographic key such as from a sram puf @xcite , but it becomes expensive when multiple number of keys are necessary to realize : i ) revocation of keys ; ii ) session key exchange ; iii ) controlled puf constructions  @xcite .",
    "these applications all prefer employing a strong puf that is able to provide a large number of error - free responses .",
    "notably , the associated helper data leaks information that may be exploited to attack pufs  @xcite .",
    "there is a concurrent but independent investigation of selecting reliable responses of delay - based pufs  @xcite using simulated data , where the effect of explicit puf operational conditions , such as operating voltage and temperature , on the selection strategy remains to be investigated .",
    "based on measured data , we extensively evaluate our error - free response generation approach across a wide range of operating conditions .",
    "we assume that a trusted party  the server  has one - time access to the underlying apufs acting as a puf building block within the controlled puf or puf embedded cryptographic key generators .",
    "the puf building block can also be xor - apufs rather than basic apufs .",
    "the server securely stores the derived statistical model of each apuf and destroys the one - time access , eg . , fusing one - time programmable wires .",
    "the challenge response interface can be protected .",
    "for example , in a controlled puf construction , it is achieved in a way of @xmath2 , where @xmath3 is a hash function , @xmath4 is the input , and @xmath5 is the puf .",
    "we employ a delay time adaptive characterization technique following @xcite to build up a statistical model of an apuf that is able to accurately estimate the internal delay times of the apuf to eschew physically characterizations . in  @xcite",
    ", the authors employ this adaptive characterization to realize an impersonation of an apuf from a physical means rather than a software means . during the key extraction phase , filtered reliable challenges are issued by the server and applied to the puf to obtain reliable response bits that can be directly utilized to derive keys without error correction .",
    "next , we detail the principles of generating error free responses when wire delay times for all stages of the apuf are estimated .",
    "and the bottom path @xmath6 in the arbiter input determines the response bits.,scaledwidth=40.0% ]      as depicted in fig .",
    "[ fig : apuf ] , an apuf consists of @xmath7 stages of two 2-input multiplexers , or any other unit forming two theoretically symmetrical , but practically asymmetrical , signal paths due to inherent randomness in the fabrication processes . to generate a response bit",
    ", an active pulse is fed as an input to the first stage , while the selection bit of @xmath8 , @xmath9 determines the signal path to the next stage . for example , if @xmath10 , two signals propagate from 1 to 3 and from 2 to 4 , respectively , in other words , these two signals pass through the @xmath11-th stage of the apuf without crossing .",
    "conversely , if @xmath12 , they propagate from 1 to 4 and from 2 to 3 concurrently , these two paths are referred to as cross paths .",
    "we refer to the delay time from 1 to 3 of @xmath13 stage as @xmath14 , and the corresponding delays through the others as @xmath15 , and @xmath16 . at the circuit level",
    ", each stage of the apuf can be implemented by a multiplexer . at the end of the cascaded multiplexers , an arbiter , which can be implemented by a latch ,",
    "determines whether the top or bottom signal arrives first and hence results in a logic ` 0 ' or ` 1 ' , accordingly , to yield a 1-bit response .",
    "distribution , where @xmath17 , @xmath18 and @xmath6 are the signal propagation delay times of the input signal at the top path and the bottom path respectively .",
    "( b ) response bit reliability determined by @xmath19 to a given challenge . , scaledwidth=30.0% ]      more specifically , the delay time difference @xmath20 between the delay time of the top path @xmath18 and the delay time of the bottom path @xmath6 determines the response bit ( output ) at the arbiter and also its reliability , as depicted in fig .  [",
    "fig : timedelaydifferencedist ] . for a randomly chosen challenge , if the corresponding delay time difference @xmath21 , then a response of ` 0 ' is produced , and vice versa .",
    "further , if @xmath22 , @xmath23 being a delay discrimination threshold , the delay time difference @xmath20 falls into the unreliable region as illustrated in fig .",
    "[ fig : timedelaydifferencedist ] ; then the corresponding response bit has a high probability of being nondeterministic during repeated regeneration attempts , especially under varying environmental conditions .",
    "conversely , if @xmath24 , then a highly reliable response bit can be expected . further , if @xmath25 is far away from zero , we can expect that a response bit without error will be generated .",
    "this relies on the fact that responses to those challenges resulting in a large @xmath26 are able to tolerate a greater degree of environmental variations , eg . ,",
    "fluctuation of supply voltage , and temperature , as further depicted in fig .",
    "[ fig : delay ] . for example , considering that the @xmath18 and @xmath6 have different simplified linear temperature co - efficients . a large @xmath19 guarantees no intersection between @xmath18 and @xmath6 , while an intersection eventually results in a flipped response ",
    "erroneous response when the temperature deviates .",
    "similar observation has shown in  @xcite , where a pair of ring oscillators ( ros ) exhibiting a large frequency difference ensures a reliable response bits regenerated from a ropuf .     to @xmath27 .",
    "( b ) challenge results in an unreliable response bit.,scaledwidth=40.0% ]    if @xmath28 , and @xmath16 can be accurately measured , then it is easy to determine challenges capable of generating highly reliable response bits by evaluating @xmath26 . concurrently , the response bit value , being ` 0 ' or ` 1 ' , can also be judiciously determined .",
    "physical measurement of each delay segment is hard , if not impossible , in practice .",
    "it may require probing the die which may damage the circuit or alter the delay , or other on - chip complicated peripheral circuits that are always unavailable for resource - constraint devices  @xcite .",
    "next , we introduce a method following @xcite for obtaining a statistical model to capture delay times of internal wires for all @xmath29 stages of an apuf .",
    "the goal of a statistical model is to accurately characterize individual delay times of @xmath28 , and @xmath16 .",
    "more specifically , if the probability of @xmath30 , @xmath31 , and probability of @xmath32 , @xmath33 , can be estimated precisely , then @xmath31 and @xmath33 can be used to replace the delay time difference of @xmath34 and @xmath35 at the @xmath36-th stage of an apuf .",
    "in other words , we need to statistically estimate the following four probabilities in ( [ eq:3 ] ) after collecting a number of crps .",
    "@xmath37 given the probabilistic formula of delays , there exists two relations @xmath38 and @xmath39 for @xmath40 .",
    "the @xmath41 , @xmath42 , @xmath43 , @xmath44 for all stages are estimated based on an adaptive characterization technique .",
    "we refer readers to xu _ et",
    ".al _ s work for detailed implementations  @xcite .",
    "consequently , a statistical delay model of an apuf is obtained when @xmath41 , @xmath42 , @xmath43 , @xmath44 for all stages are estimated . as there is a linear relation between the delay time , eg .",
    ", @xmath45 , and its corresponding probability , eg . , @xmath46  @xcite , we can use the corresponding probability to replace the delay time and consequently to predict responses and concurrently their reliability for unseen challenges according to @xmath19 that is the summation of delay difference for all stages .",
    "filtering reliable response bits is straightforward and simple , once the statistical model is obtained , and it is a one - time task done during the enrollment phase by the server  the trusted authority .",
    "most importantly , it costs no extra area and power overhead to the puf integrated device , while it also avoids the overhead related to the ecc and helper data during both , key enrollment and regeneration phases .",
    "the challenge filtering procedure is described in the * algorithm .  [",
    "algorithm : selectionreliableresponse]*.    @xmath47    response @xmath48 0 ; select @xmath49 ; * return * response @xmath48 1 ; select @xmath49 ; * return * discard @xmath49 ; * return *",
    "in this section , we empirically evaluate the reliable challenge selection method employing two datasets : i ) we build up synthetic apufs using ropufs  @xcite frequency measurements , by this means , we are able to obtain almost arbitrary number of crps for extensively testings ; ii ) we use the crp data collected across eight apufs implemented on eight fpgas  @xcite , the total number of crps in this dataset is 64,000 , which is the main reason that we consider the synthesized apufs first to obtain arbitrary number of crps due to 64,000 crps insufficient for some tests .",
    "for example , by using the first dataset , we test up to 50 million reliable challenges , all yielding error free responses , filtered from 830 million random challenges .",
    "this large number empirical tests is hard to be carried out based on the second dataset .    building a statistical model of an apuf only requires collecting a number , 10,000 , of crps under the nominal condition rather than all operating conditions .",
    "time of crp collection costs less than one second considering that one crp evaluation needs 50 ns for a 64-stage apuf  @xcite .",
    "the delay characterization takes only less than fifteen seconds to obtain a model , where we use matlab 2012b to achieve the model building and the processor is an intel i7 - 3770cpu@3.4ghz cpu .",
    "there are five ropufs implemented across five spartan3e s500 fpgas boards in virginia tech s public ropuf data .",
    "each fpga implements one ropuf that consists of 512 ring oscillators ( ros ) .",
    "detailed implementation information is detailed in @xcite .",
    "the dataset contains each ro s frequency measurements .",
    "each ro s frequency is measured 100 times under 0.96  v , 1.08  v , 1.20  v , 1.32  v , 1.44  v , respectively , at a fixed temperature of @xmath50 to reflect supply voltage influence .",
    "similarly , each ro is also evaluated 100 times under @xmath51 , @xmath52 , @xmath53 , @xmath54 , respectively , with a fixed supply voltage of 1.20  v , to reflect influence from temperature changes . to use these measurements for synthesizing an apuf",
    ", we employ the inverse of frequencies of four ros to replace @xmath55 in order to form the realistic delay time behavior of the @xmath36-th stage in the apuf . by this means , we are able to exploit existing real time delay data to form a @xmath56-stage synthesized apuf by using 256 ros implemented in the same fpga board . the arbiter ( performing delay time comparison ) function is carried out off - chip by post - processing in matlab .",
    "consequently , we obtain five synthesized apufs .",
    "the second crp dataset are obtained from eight pdl ( programmable delay line ) apufs ; each has 128 stages .",
    "each apuf is fed with 64000 challenges , therefore , 64000 crps are collected  @xcite . for each crp",
    ", it is evaluated 128 times the same operating condition . in total , nine operating conditions are considered : ( @xmath57 , 0.95  v ) ; ( @xmath57 , 1.00  v ) ; ( @xmath57 , 1.05  v ) ; ( @xmath58 , 0.95  v ) ; ( @xmath58 , 1.00  v ) ; ( @xmath58 , 1.05  v ) ; ( @xmath59 , 0.95  v ) ; ( @xmath59 , 1.05  v ) ; ( @xmath59 , 1.05  v ) . we treat ( @xmath58 , 1.00  v ) as the nominal condition .",
    "we evaluate each apuf s bit error rate ( ber ) .",
    "the ber is the probability that two puf responses from two distinct and random evaluations subject to the same randomly chosen challenge applied to the same puf are different . in practice ,",
    "a reference response took under the nominal condition is always used , while the regenerated response took under a different operating condition is compared with the reference response  @xcite . in our tests , each response bit is evaluated 100 times given the same challenge under the same operating condition .",
    "results are shown in fig .",
    "[ fig : ber ] .",
    "the ber solely introduced by noise is around @xmath60 when both voltage and temperature are under the nominal condition , where the voltage is 1.2  v and the temperature is @xmath61 .",
    "we can see that supply voltage has predominant influence on the apuf ber compared with the temperature .",
    "further , the worst - case ber of @xmath62 is observed when the voltage has a @xmath63 deviation from the nominal condition . although apufs evaluated here are synthesized , the presented reliability performance is in good agreement with  @xcite .    in the following descriptions , for convenience ,",
    "we refer to a challenge that satisfies @xmath64 as a reliable challenge .",
    "concurrently , we refer to the response bit corresponding to a reliable challenge as a reliable response .",
    "the statistical model has 97% response accuracy prediction that is well agreed with  @xcite .",
    "after reliable challenges are selected by performing the challenge filtering * algorithm  [ algorithm : selectionreliableresponse ] * , they are applied to the same apuf when operating conditions are changed to any setting within a wide range . the regenerated response bits are compared with the reference response bit evaluated at the nominal condition .",
    "if they are same , this indicates that such a filtered challenge does have a very high tolerance to the environmental changes , which guarantees an error free response bit regenerated across a wide operating conditions . otherwise , an error is marked and counted .",
    "we calculate the error rate that is the percentage of counted errors out of the number of selected reliable challenges .",
    "it is convenient to refer the error rate under a specific @xmath23 setting as ber@@xmath23 .",
    "we denote the ber@@xmath23 as below",
    ".    * ber@@xmath23 . *",
    "the ber@@xmath23 is the probability that the reevaluated response bit took under one random chosen operating condition within a range is different from the reference response bit evaluated under the nominal operating condition by applying the same selected reliable challenge to the same puf , where the reliable challenge resulted delay time difference between top and bottom paths in an apuf satisfying @xmath65 .",
    "we also refer ber@(@xmath66 ) as ber@default .",
    "in fact , ber@default is the ber when challenge filtering is not employed , eg .",
    ", shown in fig .",
    "[ fig : ber ] .    [ tab:1 ]      [ tab:2 ]    tested results are shown in table .",
    "[ tab:1 ] and  [ tab:2 ] .",
    "the ber@@xmath23 is evaluated within different operating ranges for each table . noting the supply voltage range of table .",
    "[ tab:2 ] ( @xmath0 deviation ) is larger than table .",
    "[ tab:1 ] ( @xmath67 deviation ) .",
    "it is not surprising that ber@@xmath23 is not zero when the @xmath23 is set to a small value .",
    "but as the @xmath23 goes up , ber@@xmath23 decreases significantly . when the @xmath68 , all filtered challenges that satisfy @xmath69 produce responses with 100% reliability .",
    "the apuf@xmath70 is the most interested testing sample because , in fig .",
    "[ fig : ber ] , apuf@xmath70 has the highest worst - case ber of 12.98% among other apufs when the voltage varies between 0.96 v and 1.44 v. by using judiciously selected error free responses to derive keys , it equals to an ecc decoder that has to correct at least 12.98% errors . due to infinite number of reliable challenges filtering can not be achieved in evaluation , we use up to more than 830 million randomly generated challenges for all testings , among them , 50 million selected reliable challenges are obtained when the @xmath68 .",
    "we can see that all of responses given selected challenges are error free regenerated even when the supply voltage has a @xmath0 variation and the temperature experiences a @xmath1 variation .",
    "the crp loss is the probability that a randomly given challenge can not meet the challenge filtering criterion of @xmath71 .",
    "the crp loss is increasing as the @xmath72 increases .",
    "[ fig : bitloss ] depicts the crp loss as a function of @xmath72 .",
    "we can see that 94% response bits will be discarded when @xmath73 . as",
    "an apuf is able to generate an exponential number of crps as a function of the number of stages @xmath29 , large number of reliable challenges can still be promised .",
    "for example , given a 64-stage apuf , its crp space is up to @xmath74 .",
    "hence , there are still @xmath75 error free response bits available .",
    "when the puf operating range varies insignificant in practice , a smaller @xmath72 can be chosen to decrease the crp loss while still produce error free responses as shown in table .",
    "[ tab:1 ] .",
    "[ tab : pdlapufs ]    the statistical model is obtained by training 10,000 crps evaluated only under the nominal condition and the prediction accuracy with 92.41% is achieved . this lower prediction accuracy compared with the prediction accuracy of the synthetic apuf model",
    "are attributed to  @xcite : i ) the slightly increased nominal ber is 4.99% that is obtained under the nominal condition  the nominal ber of the synthesized apuf is 2.2% , see fig .",
    "[ fig : ber ] ; ii ) the usage of pdls on fpga , which makes the mux structure more complicated ( slightly nonlinearity is introduced ) .",
    "there are eight pdl apufs tested , each of them is implemented on a different fpga board .",
    "the maximum ber@@xmath23 for all of eight apufs are listed in table .",
    "[ tab : pdlapufs ] . among tested eight apufs ,",
    "the maximum worst - case ber@default is 16.68% .",
    "when the @xmath76 , there is no error found in all reproduced responses under any tested operating condition .",
    "same to the results obtained from synthesized apufs in [ tab:2 ] , ber@@xmath77 decreases as the @xmath23 increases .",
    "there are still around 1% challenges satisfying the selection criterion for all eight tested apufs even when @xmath76 .",
    "settings.,scaledwidth=35.0% ]",
    "we further investigate the response randomness  percentage of occurrence of  1 s in response bits  relationship with the @xmath23 , in general , the challenge filtering should not result into a bias to puf s response with a preferable value ( ` 0'/`1 ' ) . in fig .",
    "[ fig : randomness ] , the challenge filtering does not deteriorate the randomness of the selected reliable response bits .",
    "the randomness is always close to 50% when the challenge filtering is performed under different @xmath23 settings .",
    "in addition , even the response s randomness is not close to 50% initially , the challenge filtering seems eliminate such an initial randomness bias .",
    "we propose an approach for determining error free responses even when they are re - evaluated across a wide range of operating condition .",
    "the proposed approach can be adopted into controlled puf designs and also provide large number of error free responses on demand for advanced cryptographic applications .",
    "this method has no burden to the puf embedded devices because there is no ecc and helper data involved , where the model building is left to the server and only asks negligible computational resources to the server .",
    "extensive empirically evaluations validate the practicability of our error free response methodology .",
    "there are some interesting future works .",
    "firstly , though good results have been demonstrated through simulated data  @xcite considering aging effects , further empirical validations remain to be investigated . secondly , adopting our error - free response generation method in to controlled pufs  @xcite . in this context , it is imperative to reduce the crp loss , which will enable an efficient control logic realization within the controlled pufs .",
    "last but not least , attacks assisted by the helper data compromising the security of a key generator only extracting a single key or very limited number of keys  @xcite may be even harder , if not impossible , when they are mounted to key generators in capable of generating a large number of keys where the helper data is not used . this will be another interesting investigation of securely using error - free responses  @xcite .",
    "we acknowledge the apuf dataset provided by dr mehrdad majzoobi and mr siam u. hussain from research group of prof farinaz koushanfar .",
    "g.  e. suh and s.  devadas , `` physical unclonable functions for device authentication and secret key generation , '' in _ proceedings of the 44th annual design automation conference_.1em plus 0.5em minus 0.4em acm , 2007 , pp . 914 .",
    "s.  devadas , e.  suh , s.  paral , r.  sowell , t.  ziola , and v.  khandelwal , `` design and implementation of puf - based `` unclonable '' rfid ics for anti - counterfeiting and security applications , '' in _ ieee international conference on rfid_.1em plus 0.5em minus 0.4emieee , 2008 , pp .",
    "s.  u. hussain , m.  majzoobi , and f.  koushanfar , `` a built - in - self - test scheme for online evaluation of physical unclonable functions and true random number generators , '' _ ieee transactions on multi - scale computing systems _ , vol .  2 , no .  1 ,",
    "pp . 216 , 2016 .",
    "b.  gassend , d.  clarke , m.  van  dijk , and s.  devadas , `` controlled physical random functions , '' in _",
    "18th annual computer security applications conference_.1em plus 0.5em minus 0.4emieee , 2002 , pp . 149160 .",
    "d.  lim , j.  w. lee , b.  gassend , g.  e. suh , m.  van  dijk , and s.  devadas , `` extracting secret keys from integrated circuits , '' _ ieee trans . very large scale integr .",
    "( vlsi ) syst _ , vol .  13 , no .  10 , pp . 12001205 , 2005 .",
    "a.  maiti , i.  kim , and p.  schaumont , `` a robust physical unclonable function with enhanced challenge - response set , '' _ ieee transactions on information forensics and security _ ,",
    "vol .  7 , no .  1 , pp . 333345 , 2012 .",
    "u.  ruhrmair , j.  solter , f.  sehnke , x.  xu , a.  mahmoud , v.  stoyanova , g.  dror , j.  schmidhuber , w.  burleson , and s.  devadas , `` puf modeling attacks on simulated and silicon data , '' _ ieee trans .",
    "forensics security _ , vol .  8 , no .  11 , pp . 18761891 , 2013 .      m.  van dijk and u.  rhrmair , `` protocol attacks on advanced puf protocols and countermeasures , '' in _ proceedings of the conference on design , automation & test in europe_.1em plus 0.5em minus 0.4em",
    "european design and automation association , 2014 , p. 351 .",
    "b.  gassend , m.  v. dijk , d.  clarke , e.  torlak , s.  devadas , and p.  tuyls , `` controlled physical random functions and applications , '' _ acm transactions on information and system security _ , vol .",
    "10 , no .  4 , p.  3",
    ", 2008 .",
    "x.  xu , w.  burleson , and d.  e. holcomb , `` using statistical models to improve the reliability of delay - based pufs , '' in _ ieee computer society annual symposium on vlsi _ , 2016 , doi : 10.1109/isvlsi.2016.125 .",
    "t.  xu , d.  li , and m.  potkonjak , `` adaptive characterization and emulation of delay - based physical unclonable functions using statistical models , '' in _ proceedings of the 52nd annual design automation conference_.1em plus 0.5em minus 0.4emacm , 2015 , p.  76 .",
    "m.  majzoobi , e.  dyer , a.  elnably , and f.  koushanfar , `` rapid fpga delay characterization using clock synthesis and sparse sampling , '' in _ international test conference ( itc ) _ , 2010 ,",
    "doi : 10.1109/test.2010.5699248 .",
    "m.  majzoobi , a.  kharaya , f.  koushanfar , and s.  devadas , `` automated design , implementation , and evaluation of arbiter - based puf on fpga using programmable delay lines . ''",
    "_ iacr cryptology eprint archive _",
    "2014 , p. 639",
    ", 2014 .",
    "m.  majzoobi , f.  koushanfar , and m.  potkonjak , `` techniques for design and implementation of secure reconfigurable pufs , '' _ acm transactions on reconfigurable technology and systems _ , vol .  2 , no .  1 , p.  5",
    ", 2009 .",
    "m.  majzoobi , f.  koushanfar , and s.  devadas , `` fpga puf using programmable delay lines , '' in _ ieee international workshop on information forensics and security ( wifs)_.1em plus 0.5em minus 0.4emieee , 2010 , doi : 10.1109/wifs.2010.5711471 .",
    "r.  maes , v.  roi , i.  verbauwhede , p.  koeberl , e.  van  der sluis , and v.  van  der leest , `` experimental evaluation of physically unclonable functions in 65 nm cmos , '' in _ proceedings of the esscirc_.1em plus 0.5em minus 0.4emieee , 2012 , pp ."
  ],
  "abstract_text": [
    "<S> physical unclonable functions ( puf ) extract secrets from randomness inherent in manufacturing processes . </S>",
    "<S> pufs are utilized for basic cryptographic tasks such as authentication and key generation , and more recently , to realize key exchange and bit commitment requiring a large number of error free responses from a strong puf . </S>",
    "<S> we propose an approach to eliminate the need to implement expensive on - chip error correction logic implementation and the associated helper data storage to reconcile naturally noisy puf responses . </S>",
    "<S> in particular , we exploit a statistical model of an arbiter puf ( apuf ) constructed under the nominal operating condition during the challenge response enrollment phase by a trusted party to judiciously select challenges that yield error - free responses even across a wide operating conditions , specifically , a @xmath0 supply voltage variation and a @xmath1 temperature variation . </S>",
    "<S> we validate our approach using measurements from two apuf datasets . </S>",
    "<S> experimental results indicate that large number of error - free responses can be generated on demand under worst - case when puf response error rate is up to 16.68% .    </S>",
    "<S> error free response , puf , modeling building </S>"
  ]
}
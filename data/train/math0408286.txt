{
  "article_text": [
    "the theory of finite type invariants allows us , via the kontsevich integral @xcite , to identify knot and link invariants with their associated _ weight systems _ , functionals on _ chord diagrams _ which obey certain relations .",
    "since these diagrams are purely combinatorial objects , we can take a combinatorial approach to studying these weight systems , providing a new viewpoint on the associated knot invariants .",
    "one approach to these chord diagrams for knots , due to chmutov , duzhin and lando @xcite , is to study their _",
    "intersection graphs_. while these graphs do not contain all of the information of the chord diagrams , they distinguish chord diagrams in many cases @xcite , and have an interesting algebraic structure of their own @xcite .",
    "recently , the author has extended the notion of an intersection graph to string links @xcite .    in this paper",
    "we will not discuss the background of finite type invariants , instead looking at the relationship between the intersection graph and the chord diagram from a purely combinatorial viewpoint . for a discussion of how these diagrams arise in the theory of finite type invariants ,",
    "see @xcite . in section  [ s : prelim ] we will review the definitions of chord diagrams and intersection graphs for string links . in section  [ s:2comp ]",
    "we will look at chord diagrams on two components . in this case , we look at a special class of trees ( _ trimmed _ trees ) which arise as intersection graphs , and show that they determine the associated chord diagram modulo some standard relations , the 1-term and 4-term relations . in section  [ s:>2comp ]",
    "we address the ( easier ) case of diagrams with more than two components .",
    "finally , in section  [ s : questions ] we pose some questions for further research .",
    "_ acknowledgement : _ the author thanks loyola marymount university for supporting this work via a summer research grant in 2004 .",
    "we begin by defining what we mean by a _ chord diagram_. since we are only considering chord diagrams which arise from string links , we will simply refer to these as chord diagrams , but the reader should be aware that these differ somewhat from the more usual chord diagrams for knots .    a * chord diagram of degree n with k components * is a disjoint union of k oriented line segments ( called the * components * of the diagram ) , together with @xmath0 chords ( unoriented line segments with endpoints on the components ) , such that all of the @xmath1 endpoints of the chords are distinct .",
    "the diagram is determined by the orders of the endpoints on each component .",
    "we can naturally organize the diagrams with @xmath2 components into a graded vector space with real coefficients , graded by their degree .",
    "we denote the vector space of chord diagrams of degree @xmath0 on @xmath2 components by @xmath3 .",
    "we impose three relations on @xmath3 ( motivated by knot theory ) , called the _",
    "1-term _ , _ 4-term _ and _",
    "antisymmetry _ relations , shown in figure  [ f:4-term ] ( no other chords have endpoints on the arcs shown ; in the 4-term relation , all other chords of the four diagrams are the same ) ; we will still call the resulting vector space @xmath3 .",
    "the three arcs in the 4-term relation may belong to the same component or to different components .",
    "( 1-term relation ) @xmath4 ( 4-term relation ) @xmath5 ( antisymmetry relation ) @xmath6    it is sometimes useful to combine the vector spaces @xmath3 into a graded module @xmath7 via direct sum .",
    "we can give the module @xmath8 a bialgebra ( or hopf algebra ) structure for any @xmath2 by defining an appropriate product and co - product :    * we define the ( noncommutative ) product @xmath9 of two chord diagrams @xmath10 and @xmath11 as the result of placing @xmath11 on top of @xmath10 ( joining the components so the orientations agree ) , as shown below : @xmath12 * we define the co - product @xmath13 of a chord diagram @xmath14 as follows : @xmath15 where @xmath16 is a subset of the set of chords of @xmath14 , @xmath17 is @xmath14 with all the chords in @xmath16 removed , and @xmath18 is @xmath14 with all the chords _ not _ in @xmath16 removed .",
    "for example : @xmath19    it is easy to check the compatibility condition @xmath20 .",
    "we can also define an action of @xmath21 on @xmath8 ( in fact , @xmath2 different actions ) .",
    "bar - natan @xcite showed that @xmath21 is isomorphic to the space of chord diagrams on knots , modulo the 4-term relation .",
    "he also showed that there is a well - defined ( again , modulo the 4-term relation ) commutative product on this space , where @xmath22 is the connected sum of the diagrams @xmath10 and @xmath11 . extending these results",
    ", we define the product @xmath23 ( where @xmath24 and @xmath25 ) to be the result of taking the connected sum of @xmath26 ( viewed as a chord diagram on a circle ) and the @xmath27th component of @xmath14 .",
    "this action is well - defined modulo the 4-term relation ; i.e. it does not matter where on the @xmath27th component of @xmath14 we `` glue in '' @xmath26 .",
    "for example : @xmath28    to end this section , we will define the notion of a _ share _ - a collection of chords in a diagram which can sometimes be treated as a single chord ( see , for example , lemma [ l : gen4term ] in section [ ss : igc ] ) .",
    "shares will be an extremely useful tool in our proofs .",
    "[ d : share ] a * share * of a chord diagram d is a subset s of the set of chords in d and two arcs a and b on the boundary components of d ( a and b may be on the same or different components ) such that every chord in s has both endpoints in @xmath29 and * no * other chord in d has an endpoint in @xmath29 .",
    "the essential value of the intersection graph for knots ( in which the chord diagram consists of chords in a bounding circle ) is that it can detect when the order of two endpoints for different chords along the bounding circle is switched , since this changes the pair of chords from ( visually ) intersecting to non - intersecting or vice - versa . for chord diagrams for string links ,",
    "the existence of a `` bottom '' and `` top '' for each component allows us to give a linear ( rather than cyclic ) ordering to the endpoints of the chords on each component , and so the notion of one endpoint being `` below '' another is well - defined .",
    "we want our intersection graphs to detect when this order is reversed .",
    "@xcite [ d : igstring ] let @xmath14 be a chord diagram with @xmath2 components ( oriented line segments , colored from 1 to @xmath2 ) and @xmath0 chords .",
    "the _ intersection graph _",
    "@xmath30 is the labeled , directed multigraph such that :    * @xmath30 has a vertex for each chord of @xmath14 .",
    "each vertex is labeled by an unordered pair @xmath31 , where @xmath27 and @xmath32 are the labels of the components on which the endpoints of the chord lie .",
    "* there is a directed edge from a vertex @xmath33 to a vertex @xmath34 for each pair @xmath35 where @xmath36 is an endpoint of the chord associated to @xmath33 , @xmath37 is an endpoint of the chord associated to @xmath34 , @xmath36 and @xmath37 lie on the same component of @xmath14 , and the orientation of the component runs from @xmath36 to @xmath37 ( so if the components are all oriented upwards , @xmath36 is below @xmath37 ) .",
    "we count these edges `` mod 2 '' , so if two vertices are connected by two directed edges with the same direction , the edges cancel each other .",
    "if two vertices are connected by a directed edge in each direction , we will simply connect them by an undirected edge .",
    "examples of chord diagrams and their associated intersection graphs are given in figure  [ f : igstring ] .",
    "@xmath38    note that when the two chords have both endpoints on the same component @xmath27 , our definition of intersection graph corresponds to the usual intersection graph for knots .",
    "our definition also matches our intuition in the case of chord diagrams of two components , as shown in figure  [ f : igstring ] .",
    "note also that the total number of directed edges between a vertex @xmath39 labeled @xmath31 and a vertex @xmath40 labeled @xmath41 is given by the sum of the number of occurrences of @xmath27 in @xmath41 and the number of occurrences of @xmath32 in @xmath41 .",
    "in particular , if a vertex @xmath39 has a label @xmath42 , this number will be even ( 0 , 2 or 4 ) .",
    "since we count directed edges modulo 2 , this implies there is an ( uncancelled ) directed edge from @xmath39 to another vertex @xmath40 if and only if there is also an ( uncancelled ) directed edge from @xmath40 to @xmath39 .",
    "we will say that labeled directed multigraphs which have this property are _",
    "[ d : semisym ] a directed multigraph g , with each vertex labeled by a pair \\{i , j } , is * semisymmetric * if for every vertex v labeled \\{i , i } , and any other vertex w , there is a directed edge from v to w if and only if there is a directed edge from w to v.    for convenience , we will refer to vertices with labels @xmath42 ( and their associated chords ) as _ unmarked _ , and to other vertices and chords as _ marked_. in other words , a marked chord connects two different components of the chord diagram , whereas an unmarked chord has both endpoints on the same component . if we do not need the full structure of the labels , and need only distinguish these two types of vertices , we will talk about _ marked _ , rather than labeled , trees .",
    "it is understood that any tree which is labeled as in definition [ d : igstring ] is also a marked tree .",
    "just as it is useful to consider shares as parts of a chord diagram , it is useful to consider subsets of the vertices of a tree intersection graph .",
    "[ d : bough ] a * bough * of a vertex v in a marked tree t is a connected component of @xmath43 ( the graph which results from removing the vertex v and all edges incident to v ) .",
    "the bough is called * light * if it contains at most one marked vertex and this vertex ( if present ) is adjacent to v in t. otherwise the bough is * heavy*.    in fact , we have shown @xcite that there is a close connection between the boughs of an intersection graph and shares in the chord diagram .",
    "@xcite [ l : share ] assume t is a marked tree which is the intersection graph for a chord diagram d , and v is a vertex in t. further assume that @xmath44 has at least one marked vertex .",
    "then a bough of v is light if and only if the corresponding chords are a share in d.",
    "in this section we will show that the intersection graph determines the ( string link ) chord diagram ( modulo the 1-term and 4-term relations ) in the special case when the intersection graph is a _ trimmed _ tree ( for diagrams with 2 components ) .",
    "this generalizes a result of chmutov , _ et al . _",
    "@xcite , who proved that for knots ( i.e. string links with one component ) , tree diagrams are determined by their intersection graph .",
    "[ d : trimmed ] an intersection graph t for a chord diagram with 2 components is a * trimmed * tree if it is an ( undirected ) tree , and there is some vertex v in t , called the * trunk * of t , such that every bough of v is light ( see definition [ d : bough ] ) .",
    "if @xmath44 is a trimmed tree with trunk @xmath39 , then every marked vertex in @xmath44 is adjacent to @xmath39 ( otherwise , @xmath39 would have a heavy bough ) .",
    "moreover , every other vertex in @xmath44 has at most one heavy bough ; namely , the bough containing @xmath39 . also , by lemma [ l : share ] , every bough of @xmath39 corresponds to a share in @xmath14 ( assuming @xmath44 has at least one marked vertex ) . our goal in this section is to prove :    [ t:2comp ] if @xmath45 , where @xmath44 is a trimmed tree , then @xmath10 and @xmath11 are equivalent modulo the 1-term and 4-term relations",
    ".    we will describe a set of _ elementary transformations _ which will provide an equivalence relation between chord diagrams with the same intersection graphs , and then show that these transformations can be achieved using the 1-term and 4-term relations .      consider a chord diagram @xmath14 on two components , whose intersection graph @xmath44 is a trimmed tree .",
    "denote the trunk of @xmath44 by @xmath39 ; we will also use @xmath39 to denote the corresponding chord in @xmath14 .",
    "consider the vertices in @xmath44 adjacent to @xmath39 and the corresponding chords in @xmath14 .",
    "these vertices may be both marked and unmarked : denote the unmarked vertices @xmath46 and the marked vertices @xmath47 .",
    "note that if @xmath40 is any _ other _ vertex of @xmath44 , @xmath40 will be adjacent to at most one marked vertex , contained in the same bough of @xmath40 as @xmath39 .",
    "since @xmath44 is a tree , each of @xmath48 and @xmath49 belongs to a different bough of @xmath39 , and so the corresponding chords belong to non - intersecting shares in @xmath14 . if @xmath14 is drawn to minimize crossings between chords , these chords will cross @xmath39 in some order ; without loss of generality , say the order is @xmath50 .",
    "( since @xmath44 is a tree , the @xmath49 s must be grouped together , because an unmarked chord can not have both endpoints between two of the @xmath49 s and still cross @xmath39 . ) similarly , if @xmath40 is some other chord of @xmath14 , then the chords crossing @xmath40 can be put in order @xmath51 , where @xmath52 corresponds to the heavy bough of @xmath40 in @xmath44 ( if it exists ) , and all the @xmath53 s are unmarked chords corresponding to light boughs in @xmath44 , and hence shares in @xmath14 .",
    "now we can define the elementary transformations .",
    "[ d : elementary ] the * elementary transformations * of a chord diagram @xmath14 whose intersection graph is a trimmed tree are :    1 .   permuting the boughs along a chord @xmath40 .",
    "if @xmath40 is the trunk of @xmath14 , then all the marked boughs must remain adjacent .",
    "if @xmath40 is not the trunk , and has a heavy bough , the heavy bough stays fixed while the other boughs move around it .",
    "moreover , unmarked boughs can not be moved from one component to the other ( as this will change the intersection graph ) .",
    "2 .   if the trunk of @xmath14 is marked , reflecting the other marked boughs across the trunk .",
    "examples of these transformations are shown in figure  [ f : elementary ] ( a and b are boughs ) .",
    "[ h ] @xmath54    [ p : elementary ] let @xmath10 and @xmath11 be chord diagrams such that @xmath55 and @xmath56 are trimmed trees .",
    "then @xmath57 if and only if @xmath10 can be transformed into @xmath11 via elementary transformations .",
    "proof : it s clear that the elementary transformations have no effect on the intersection graphs , so we only need to show that if the intersection graphs are the same , then the diagrams are equivalent modulo the elementary transformations .",
    "assume that @xmath45 , and let @xmath39 be the trunk of @xmath44 .",
    "the order of the boughs along @xmath39 in @xmath10 differs from the order along @xmath11 by a permutation which keeps all the marked boughs adjacent ( since they must be adjacent in both diagrams ) , and which keeps unmarked chords on the same component ; this can be achieved by an elementary tranformation of type 1 .",
    "if @xmath39 is marked , it is possible that its marked boughs in @xmath10 differ from the marked boughs in @xmath11 by the direction of their slant - this can be corrected by an elementary transformation of type 2 .",
    "we can now consider the vertices adjacent to @xmath39 .",
    "once again , we can rearrange the order of the boughs by elementary transformations of type 1 ; moreover , we can consider the bough containing @xmath39 ( the only possible heavy bough ) to be fixed during this process , so we will not effect the results of our previous moves .",
    "since these chords can have at most one marked bough ( the one containing @xmath39 ) , we will never need to use transformations of type 2 .",
    "continuing inductively , moving on to vertices farther and farther from the trunk , we can rearrange the chords of @xmath10 until @xmath58 .",
    "@xmath59      in this section we will prove theorem  [ t:2comp ] .",
    "our proof is modeled on the proof for knots given by chmutov _",
    "et al _ @xcite .",
    "using proposition  [ p : elementary ] , it is sufficient to show the following :    [ p : equivalence ] if @xmath10 and @xmath11 are chord diagrams on two components which differ by an elementary transformation , then @xmath10 and @xmath11 are equivalent modulo the 1-term and 4-term relations .    before we begin to prove this proposition",
    ", we will state a few useful facts .",
    "[ l : gen4term ] ( generalized 4-term relation @xcite ) for any share and chord , the following relation holds ( modulo the usual 4-term relation ) : @xmath60    proof : write down the 4-term relations for the given chord and every chord in the given share , and add together all these relations . except for the four terms of the generalized 4-term relation ,",
    "every term will appear twice with opposite sign , and so cancel .",
    "we are left with the generalized 4-term relation .",
    "[ c : simple ] @xcite modulo the 1-term and 4-term relations , we have the following relations among chord diagrams : @xmath61    proof : for each pair of diagrams , keeping the shares fixed , consider all diagrams formed from the shares and a single chord .",
    "writing down all the generalized 4-term relations among these diagrams , and cancelling terms using the 1-term relation , we quickly see that the three relations are equivalent .",
    "dogolazky @xcite proved the first relation holds .",
    "remark : chmutov _ et al . _",
    "@xcite proved the result by solving the system of equations arising from the 4-term relations .",
    "dogolazky @xcite pointed out that this proof only works if the space @xmath3 has no elements of order 2 , and that this is not true in general .",
    "however , he provided a more complex proof to show the result is true in general .",
    "our proof of proposition  [ p : equivalence ] will consider several cases .",
    "since any permutation can be decomposed into transpositions , it will suffice to consider a few transpositions of boughs .",
    "[ l : permute ] the four pairs of diagrams below are equivalent modulo the 1-term and 4-term relations .",
    "the diagram consisting of the shares @xmath26 and @xmath62 and the chord @xmath39 is a tree diagram ; there are no restrictions on the share @xmath63 .",
    "there are no other chords with endpoints on the indicated arcs , although there may be other chords which intersect the chords shown .",
    "\\(1 ) @xmath64 ( 2 ) @xmath65 ( 3 ) @xmath66 ( 4 ) @xmath67    our proof will proceed by induction on the total number of chords in the shares @xmath26 and @xmath62 ; we will call this the _ complexity _ of the diagram @xmath14 , denoted @xmath68 . our proof of lemma  [",
    "l : permute ] will require two additional lemmas .",
    "the first lemma is essentially identical to a lemma in @xcite ; we provide a proof here for clarity and to show the ( very slight ) modifications needed for diagrams on string links .",
    "[ l : rewrite ] suppose that lemma [ l : permute ] holds for any diagram with complexity less than m. then : @xmath69 where the total number of chords in the shares a and b is @xmath70 .",
    "proof of lemma [ l : rewrite ] : by the generalized 4-term relation , we have : @xmath71 using the generalized 4-term relation again , and rewriting the last term as a product , this equals : @xmath72 since the number of chords in the share @xmath26 is less than @xmath73 ( unless @xmath62 is empty , which is a trivial case ) we can apply lemma [ l : permute ] and permute the boughs of the first diagram . and since the multiplication @xmath74 is well - defined , we can rewrite the second diagram to get : @xmath75 applying the usual 4-term relation gives : @xmath76 using the generalized 4-term relation once more we get : @xmath77 the second diagram vanishes by the 1-term relation",
    ". we can apply corollary [ c : simple ] to the first diagram to obtain : @xmath78 which completes the proof .",
    "[ c : deconstruct ] assume that lemma [ l : permute ] holds for diagrams of complexity less than m. then : @xmath79 where the share a is a tree diagram , @xmath80 is the number of chords in the share a , the chord labeled i represents i disjoint chords along the chord v , and @xmath81 is the sum of all diagrams of degree n - i obtained by taking the connect sum of disjoint boughs of a. @xmath82 is the empty diagram , with no chords .",
    "proof : we will prove this corollary by induction on @xmath0 . in the base case ,",
    "@xmath83 , and @xmath26 is just a single chord .",
    "then @xmath81 is either @xmath82 ( the empty diagram ) or @xmath84 . but",
    "@xmath85 , by the one - term relation .",
    "so there is only one term on the right - hand side of the equation , when @xmath86 , which gives us the original diagram .",
    "now assume that the corollary holds when there are fewer than @xmath0 chords in the share , and assume @xmath26 has @xmath0 chords .",
    "we have two cases : either @xmath26 is connected ( i.e. @xmath26 is a single bough of the chord @xmath39 ) , or @xmath26 is made up of several boughs of @xmath39 .",
    "we will first consider the case when @xmath26 is the union of several boughs .",
    "then @xmath26 can be divided into two shares @xmath62 and @xmath87 , each of which contains at least one bough of @xmath39 .",
    "say that @xmath62 has @xmath73 chords and @xmath87 has @xmath2 chords , so @xmath88 . then",
    ", by our inductive hypothesis , we can apply the corollary to the shares @xmath62 and @xmath87 , as follows : @xmath89 since each term of @xmath81 is simply the product ( via connect sum ) for some @xmath90 of a term of @xmath91 and a term of @xmath92 , we are left with the desired sum .    in the case when @xmath26 is a single bough of @xmath39 , we can apply lemma [ l : rewrite ] ( since @xmath80 , so the total number of chords in the shares @xmath62 and @xmath87 below is less than @xmath73 ) : @xmath93 the first term is the term for @xmath94 ; the other term can be decomposed into the terms for @xmath95 as in the previous case .",
    "this completes the proof of the corollary .",
    "@xmath59    [ l : center ] the diagram @xmath96 shown below is in the center of @xmath97 for @xmath98 .",
    "@xmath99    proof : dogolazky @xcite showed that certain linear combinations of chord diagrams @xmath100 ( represented as a _ unitrivalent diagram _ ) are in the center of @xmath97 for @xmath101 .",
    "a discussion of the isomorphism between the spaces of chord diagrams and unitrivalent diagrams can be found in @xcite ; we will not reproduce it here , since it is not required for the remainder of the paper .",
    "it is an easy exercise in induction to show that @xmath102 , so @xmath96 is also in the center .",
    "@xmath59 +   + proof of lemma [ l : permute ] : we will start by proving relation ( 1 ) ; the proofs of the other parts are similar .",
    "we are inducting on the complexity of the chord diagram ( i.e. the number of chords in the shares @xmath26 and @xmath62 ) .",
    "the base case is when the complexity is 0 ; in this case the result is given by corollary [ c : simple ] .",
    "for our inductive step , we assume the diagram has complexity @xmath103 , and assume the lemma holds for all diagrams with complexity less than @xmath73 . denote the number of chords in the shares @xmath26 and @xmath62 by @xmath104 and @xmath105 respectively .",
    "since @xmath104 and @xmath105 are both at most @xmath73 , we can apply corollary [ c : deconstruct ] to the diagram on the left - hand side to get : @xmath106 here , a chord labeled , for example , @xmath27 denotes a share consisting of @xmath27 disjoint chords .",
    "so it suffices to consider the case when the shares @xmath26 and @xmath62 each consist of collections of disjoint chords .",
    "but by corollary [ c : simple ] , this means the diagram consisting of the shares @xmath26 and @xmath62 and the chord between them is simply @xmath107 , which is in the center of @xmath97 by lemma [ l : center ] .    to prove the other three relations , notice that relation ( 4 ) is the same as relation ( 1 ) , except that the oriented line segments belong to the same component .",
    "relation ( 2 ) is also the same as ( 1 ) , except that we have reversed the orientation of one line segment .",
    "but , by the antisymmetry relation , this only changes the diagrams by a sign , so the equality still holds .",
    "finally , relation ( 3 ) is the same as ( 2 ) , when the line segments belong to the same component .",
    "this completes the proof .",
    "@xmath59    so far , we have only shown that we can permute neighbouring marked or unmarked boughs .",
    "the next case we need to consider is moving an umarked bough from one end of an unmarked chord to the other , possibly across marked chords .",
    "[ l : endtoend ] the two diagrams below are equivalent modulo the 1-term and 4-term relations .",
    "no other chords have endpoints on the solid line segments , though there may be chords ( including chords to other components ) with endpoints on the dashed segments .",
    "proof : as before , our proof is by induction on the complexity of the diagram - the number of chords in the shares @xmath26 and @xmath62 . if the complexity is 0 , then @xmath26 and @xmath62 are empty , and the relation follows from corollary [ c : simple ] .",
    "so we may assume the relation holds for diagrams with complexity less than @xmath73 .",
    "assume the diagrams in the relation have complexity @xmath73 .",
    "if we apply lemma [ l : rewrite ] to the diagram on the left - hand side , we obtain : @xmath109 applying lemma [ l : rewrite ] to the diagram on the right - hand side gives almost the same result , except that the shares @xmath26 and @xmath62 ( and the single chord ) are at the other ends of the chord .",
    "but since these shares have fewer than @xmath73 chords , we may apply our inductive hypothesis to move them to the other end as needed .",
    "this completes the proof .",
    "@xmath59    all that remains is to show that diagrams which are equivalent modulo the second elementary transformation ( flipping the marked chords across the trunk of the tree ) are also equivalent modulo the 1-term and 4-term relations .",
    "but , in fact , we have already done this - this is part ( 2 ) of lemma [ l : permute ] .",
    "this completes the proof of proposition [ p : equivalence ] .",
    "together , propositions [ p : elementary ] and [ p : equivalence ] prove theorem [ t:2comp ] .",
    "remark : perhaps surprisingly , if the intersection graph is an untrimmed tree it does _ not _ determine the diagram modulo the 1-term and 4-term relations ( for diagrams on two components ) .",
    "a counterexample was given by dogolazky @xcite , who showed by a computer calculation that the two diagrams in figure  [ f : untrimmed ] are not equal in @xmath110 .",
    "[ h ] @xmath111",
    "the case of tree diagrams with more than two components is actually simpler than the case of two components , since there are greater restrictions on the trees which can be realized as intersection graphs .",
    "the following theorem was proven in @xcite :    [ t : treeclass ] let t be a connected , labeled directed tree with n colors ( so each vertex has a label \\{i , j } , where @xmath112 ) .",
    "let @xmath113 denote the number of vertices with label \\{i , j}. then t is an intersection graph for a connected chord diagram on n components if and only if the following conditions are met ( possibly after relabeling the tree by a permutation of 1 , ... , n ) :    1 .",
    "the labels of adjacent vertices must have at least one color in common .",
    "t is semisymmetric ( see definition [ d : semisym ] ) .",
    "if v has label \\{i , j } and w has label \\{i , k } , where i , j and k are all distinct , then there is a directed edge between v and w. 4 .   @xmath114 if @xmath115 .",
    "@xmath116 for @xmath117 , @xmath118 and @xmath119",
    "no two marked vertices are connected by a path of undirected edges .",
    "let @xmath44 be a tree satisfying the six conditions above , so it is the intersection graph for some chord diagram @xmath14 .",
    "our goal is to reconstruct @xmath14 from @xmath44 , at least modulo the 1-term and 4-term relations .",
    "consider the graph @xmath120 which results from removing all the directed edges in @xmath44 . by the last condition above ( and the fact that @xmath44 was connected ) , each component of this diagram will contain a single marked vertex .",
    "exactly one of these marked vertices will be labeled @xmath121 unless @xmath122 or @xmath123 , in which cases there may be more than one .",
    "so each component of @xmath120 is the intersection graph for a trimmed tree diagram on two components , and by theorem [ t:2comp ] this diagram is determined by its intersection graph ( modulo the 1-term and 4-term relations ) .",
    "all that remains is to arrange these diagrams to form @xmath14 .",
    "this arrangement is determined by the directions of the directed edges of @xmath44 , except for the components with marked chords labeled @xmath124 or @xmath125 .",
    "for example , if @xmath126 and there is a directed edge from the ( unique ) vertex of @xmath44 labeled @xmath127 to the ( unique ) vertex labeled @xmath128 , then the chords corresponding to the component of @xmath120 containing the first marked chord will be placed below the chords corresponding to the component of @xmath120 containing the second marked chord .",
    "the chords at the ends need to be treated a little more carefully .",
    "the components with a chord labeled @xmath124 naturally fall into two groups : those which lie below the ( unique ) chord labeled @xmath127 , and those which lie above this chord . within these two groups ,",
    "however , the order of the components can be rearranged without affecting the intersection graph",
    ". however , these rearrangements are all permutations of the components , which by lemma [ l : permute ] do not change the diagram modulo the 1-term and 4-term relations .",
    "the same is true for the components with a chord labeled @xmath125 .",
    "so , modulo the 1-term and 4-term relations , we can reconstruct the diagram @xmath14 from the intersection graph @xmath44 .",
    "we can conclude :    [ t:>2comp ] if @xmath10 and @xmath11 are connected tree diagrams on n components ( @xmath129 ) which have the same intersection graph , then @xmath10 and @xmath11 are equivalent in @xmath130 .",
    "note that , unlike for diagrams on 2 components , we do not need to restrict to a smaller class of tree diagrams , because of the greater constraints imposed by theorem [ t : treeclass ] .",
    "we noted at the end of section [ s:2comp ] that , in general , tree diagrams on two components are not determined by their intersection graphs .",
    "however , the example found by dogolazky @xcite lies in the torsion subgroup of @xmath110 - the difference @xmath131 of the two diagrams in figure [ f : untrimmed ] has order 2 .",
    "[ q : quest1 ] do all counterexamples to the intersection graph conjecture for tree diagrams have finite order ?",
    "in other words , is the conjecture true if we look at the quotient of @xmath97 by its torsion subgroup ?    stanford has shown that , while @xmath131 is nontrivial in @xmath110 , any realization of it as a difference of two singular string links _ is _ trivial modulo the `` topological '' 1-term and 4-term relations .",
    "so one could also ask :              10 bar - natan , d. : on the vassiliev knot invariants , _ topology _ 34 , no .",
    "423 - 472 , 1995 chmutov , s.v . ,",
    "duzhin , s.v . and",
    "lando , s.k .",
    ": vassiliev knot invariants i , ii , iii , _ advances in soviet mathematics _ 21 , pp . 117 - 145 , 1994 dogolazky , i. : eine abhandlung ber die algebra der schlingeldiagramme , ph.d .",
    "thesis , university of bonn , 1998 , ftp://ftp.math.uni-bonn.de/people/ilyad/diplom/ m. kontsevich , vassiliev s knot invariants , advances in soviet mathematics * 16 * , part 2 , pp .",
    "137 - 150 , 1993 lando , s. : on a hopf algebra in graph theory , _ journal of combinatorial theory , series b _ ,",
    "v.80 , p. 104 - 121 , 2000 mellor , b. : the intersection graph conjecture for loop diagrams , _ journal of knot theory and its ramifications _ , vol . 9 , no . 2 , 2000 mellor , b. : intersection graphs for string links , preprint , 2003 , arxiv : math.gt/0312347 mellor , b. : tree diagrams for string links , preprint , 2004 , arxiv : math.gt/0405537 stanford , t. : some computational results on mod 2 finite - type invariants of knots and string links , _ geometry and topology monographs _ 4 , pp . 363 - 376 , 2004"
  ],
  "abstract_text": [
    "<S> in previous work @xcite , we defined the intersection graph of a chord diagram associated with a string link ( as in the theory of finite type invariants ) . in this paper , we look at the case when this graph is a tree , and we show that in many cases these trees determine the chord diagram ( modulo the usual 1-term and 4-term relations ) . </S>"
  ]
}
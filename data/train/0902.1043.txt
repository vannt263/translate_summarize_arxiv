{
  "article_text": [
    "in many practical scenarios of network design , input graphs have a natural drawing on the sphere or equivalently the plane . in most cases , these embeddings have few crossings , either to avoid digging multiple levels of tunnels for fiber or cable or to avoid building overpasses in road networks . but a few crossings are common , and can easily come in bunches where one tunnel or overpass might carry several links or roads .",
    "thus we naturally arrive at graphs of small ( bounded ) genus , which is the topic of this paper .",
    "we develop a ptas framework for subset - connectivity problems on edge - weighted graphs of bounded genus .",
    "in general , we are given a subset of the nodes , called _",
    "terminals _ , and the goal is to connect the terminals together with some substructure of the graph by using cost within @xmath1 of the minimum possible cost .",
    "our framework applies to three well - studied problems in this framework . in _ steiner tree _ , the substructure must be connected , and thus forms a tree . in _",
    "subset tsp ( traveling salesman problem ) _ , the substructure must be a cycle ; to guarantee existence , the cycle may traverse vertices and edges multiple times , but pays for each traversal . in _",
    "@xmath2-edge - connectivity survivable network design _ , the substructure must have @xmath3 edge - disjoint paths connecting terminals @xmath4 and  @xmath5 , where each @xmath6 ; we allow the substructure to include multiple copies of an edge in the graph , but pay for each copy .",
    "in particular , if @xmath7 for all terminals @xmath4 and  @xmath5 , then we obtain the steiner tree problem ; if @xmath8 for all terminals @xmath4 and  @xmath5 , then we obtain the _ minimum - cost @xmath9-edge - connected submultigraph _ problem .",
    "our framework yields the first ptas for all of these problems in bounded - genus graphs .",
    "these ptass are efficient , running in @xmath10 time for graphs embedded on orientable surfaces and non - orientable surfaces .",
    "( we usually omit the mention of @xmath11 and @xmath12 by assuming @xmath13 and @xmath14 are constant , but we later bound @xmath11 as singly exponential in a polynomial in  @xmath15 and @xmath14 and @xmath12 as singly exponential in @xmath14 . ) in contrast , the problems we consider are apx - complete ( and @xmath16-approximable ) for general graphs .",
    "we build upon recent ptas framework of borradaile , klein , and mathieu  @xcite for subset - connectivity problems on planar graphs .",
    "in fact , our result is strictly more general : any problem to which the previous planar - graph framework applies automatically works in our framework as well , resulting in a ptas for bounded - genus graphs .",
    "for example , borradaile , klein and pritchard  @xcite have recently claimed a ptas for the _ @xmath17-edge - connectivity survivable network design _ problem using the planar framework .",
    "this will imply a similar result in bounded genus graphs .",
    "in contrast to the planar - graph framework , our ptases have the attractive feature that they run correctly on all graphs with the performance degrading with genus .",
    "our techniques for attacking bounded - genus graphs include two recent results from soda 2007 : decompositions into bounded - treewidth graphs via contractions  @xcite and fast algorithms for finding the shortest noncontractible cycle  @xcite .",
    "we also use a simplified version of an algorithm for finding a short sequence of loops on a topological surface from soda 2005  @xcite , and sophisticated dynamic programming .",
    "all graphs @xmath18 have @xmath19 vertices , @xmath20 edges and are undirected with edge lengths ( weights ) .",
    "the length of an edge @xmath21 , subgraph @xmath22 , and set of subgraphs @xmath23 are denoted @xmath24 , @xmath25 and @xmath26 , respectively .",
    "the shortest distance between vertices @xmath4 and @xmath5 in graph @xmath27 is denoted @xmath28 .",
    "the boundary of a graph @xmath27 embedded in the plane is denoted by @xmath29 . for an edge @xmath30",
    ", we define the operation of _ contracting _ @xmath21 as identifying @xmath31 and @xmath32 and removing all loops and duplicate edges .",
    "we use the basic terminology for embeddings as outlined in  @xcite . in this paper",
    ", an embedding refers to a _",
    "2-cell embedding _ ,",
    "i.e. a drawing of the vertices and faces of the graph as points and arcs on a surface such that every face is homeomorphic to an open disc .",
    "such an embedding can be described purely combinatorially by specifying a _ rotation system _",
    ", for the cyclic ordering of edges around vertices of the graph , and a _ signature _ for each edge of the graph ; we use this notion of a _",
    "combinatorial embedding_. a combinatorial embedding of a graph @xmath27 naturally induces such a 2-cell embedding on each subgraph of @xmath27 .",
    "we only consider compact surfaces without boundary .",
    "when we refer to a planar embedding , we actually mean an embedding in the 2-sphere .",
    "if a surface contains a subset homeomorphic to a mbius strip , it is _ non - orientable _ ; otherwise it is _",
    "orientable_. for a 2-cell embedded graph @xmath27 with @xmath33 facial walks , the number @xmath34 is called the euler genus of the surface .",
    "the euler genus is equal to twice the usual genus for orientable surfaces and equals the usual genus for non - orientable surfaces .",
    "the _ dual _ of an embedded graph @xmath27 is defined as having the set of faces of @xmath27 as its vertex set and having an edge between two vertices if the corresponding faces of @xmath27 are adjacent .",
    "we denote the dual graph by @xmath35 and identify each edge of @xmath27 with its corresponding edge in @xmath35 .",
    "a cycle of an embedded graph is _ contractible _ if it can be continuously deformed to a point ; otherwise it is _ non - contractible_. the operation of _ cutting along a 2-sided cycle _ @xmath36 is essentially : partition the edges adjacent to @xmath36 into left and right edges and replace @xmath36 with two copies @xmath37 and @xmath38 , adjacent to the left or right edges , accordingly .",
    "the inside of these new cycles is `` patched '' with two new faces .",
    "if the resulting graph is disconnected , the cycle is called _ separating _ , otherwise _ non - separating_. cutting along a 1-sided cycle @xmath36 on non - orientable surfaces is defined similarly , only that @xmath36 is replaced by one bigger cycle @xmath39 that contains every edge of @xmath36 exactly twice .",
    "next we define the notions related to treewidth as introduced by robertson and seymour  @xcite .",
    "a _ tree decomposition _ of a graph @xmath27 is a pair @xmath40 , where @xmath41 is a tree and @xmath42 is family of subsets of @xmath43 , called _ bags _ , such that    1 .",
    "every vertex of @xmath27 appears in some bag of @xmath44 ; 2 .   for every edge @xmath30 of @xmath27 ,",
    "there exists a bag that contains both @xmath31 and @xmath32 ; 3 .   for every vertex @xmath32 of @xmath27 , the set of bags that contain @xmath32 form a connected subtree @xmath45 of @xmath46 .",
    "the _ width _ of a tree decomposition is the maximum size of a bag in @xmath44 minus @xmath47 .",
    "the _ treewidth _ of a graph @xmath27 , denoted by @xmath48 , is the minimum width over all possible tree decompositions of @xmath27 .",
    "the input graph is @xmath49 and has genus @xmath50 ; the terminal set is @xmath51 .",
    "we assume @xmath52 is equipped with a combinatorial embedding ; such an embedding can be found in linear time , if the genus is known to be fixed , see  @xcite .",
    "let @xmath53 be the considered subset - connectivity problem .",
    "in section  [ sect : preprocess ] , we show how to find a subgraph @xmath54 of @xmath52 , so that for @xmath55 any @xmath56-approximate solution of @xmath53 in @xmath52 also exists in @xmath27 . hence , we may use @xmath27 instead of @xmath52 in the rest of the paper . note that as a subgraph of @xmath52 , @xmath27 is automatically equipped with a combinatorial embedding .",
    "let @xmath57 denote the length of an optimal steiner tree spanning terminals  @xmath51 .",
    "we define @xmath58 to be the length of an optimal solution to problem @xmath53 . for the problems that we solve ,",
    "we require that @xmath59 and in particular that @xmath60 .",
    "the constant @xmath61 will be used in section  [ sec : mg - proof ] and is equal to @xmath9 for both the subset tsp and @xmath2-edge - connectivity problems .",
    "this requirement is also needed for the planar case ; see  @xcite . because @xmath62 , upper bounds in terms of @xmath57 hold for all the problems herein . as a result",
    ", we can safely drop the @xmath53 subscript throughout the paper .",
    "we show how to obtain a @xmath63 solution for a fixed constant @xmath64 . to obtain a @xmath65 solution",
    ", we can simply use @xmath66 as input to the algorithm .",
    "in  @xcite and  @xcite , borradaile , klein and mathieu developed a ptas for the steiner tree problem in planar graphs .",
    "the method involves finding a grid - like subgraph called the _ mortar graph _ that spans the input terminals and has length @xmath67 .",
    "the set of feasible steiner trees is restricted to those that cross between adjacent faces of the mortar graph only at a small number ( per face of the mortar graph ) of pre - designated vertices called _",
    "portals_. a structure theorem guarantees the existence of a nearly optimal solution ( one that has length at most @xmath68 ) in this set .",
    "we review the details that are relevant to this work and generalize to genus-@xmath14 graphs .      here",
    "we define the mortar graph in such a way that generalizes to higher genus graphs .",
    "a path @xmath69 in a graph @xmath27 is _ @xmath70-short in @xmath27 _ if for every pair of vertices @xmath4 and @xmath5 on @xmath69 , the distance from @xmath4 to @xmath5 along @xmath69 is at most @xmath71 times the distance from @xmath4 to @xmath5 in @xmath27 : @xmath72 . given a graph @xmath27 embedded on a surface and a set of terminals @xmath51 , a mortar graph is a subgraph of @xmath27 with the following properties ( where @xmath73 , to be defined later , will depend polynomially on @xmath74 and  @xmath14 ) :    given an embedded graph @xmath27 and a set of terminals @xmath51 , a mortar graph is a subgraph @xmath75 of @xmath27 spanning @xmath51 such that each facial walk of @xmath75 encloses an area homeomorphic to an open disk . for each face of @xmath75",
    ", we construct a _ brick _ @xmath76 of @xmath27 by cutting @xmath27 along the facial walk .",
    "@xmath76 is the subgraph of @xmath27 embedded inside the face , including the facial walk .",
    "each brick satisfies the following properties :    1 .",
    "@xmath76 is planar .",
    "the boundary of @xmath76 is the union of four paths in the clockwise order @xmath77 , @xmath78 , @xmath79 , @xmath80 .",
    "3 .   every terminal of @xmath51 that is in @xmath76 is on @xmath78 or on @xmath80 .",
    "@xmath78 is 0-short in @xmath76 , and every proper subpath of @xmath80 is @xmath13-short in @xmath76 .",
    "there exists a number @xmath81 and vertices @xmath82 ordered from left to right along @xmath80 such that , for any vertex @xmath4 of @xmath83 , the distance from @xmath4 to @xmath84 along @xmath80 is less than @xmath13 times the distance from @xmath4 to @xmath78 in @xmath76 : @xmath85 .    the mortar graph and the set of bricks are illustrated in figures  [ fig : mg ]  ( a ) ,  ( b ) and  ( c ) .",
    "constructing the mortar graph for planar graphs first involves finding a 2-approximate steiner tree @xmath46 and cutting open the graph along @xmath46 creating a new face with boundary @xmath22 and then :    1 .   finding shortest paths between certain vertices of @xmath22 .",
    "these paths result in the @xmath78 and @xmath80 boundaries of the bricks.[mg : step-3 ] 2 .   finding shortest paths between vertices of the paths found in step  [ mg : step-3 ] .",
    "these paths are called _ columns _ , do not cross each other , and have a natural order .",
    "[ mg : step-4 ] 3 .   taking every @xmath73th path found in step  [ mg : step-4 ] .",
    "these paths are called _ supercolumns _ and form the @xmath79 and @xmath77 boundaries of the bricks .",
    "[ mg : step-5 ]    the mortar graph is composed of the edges of @xmath46 ( equivalently , @xmath22 ) and the edges found in steps  [ mg : step-3 ] and  [ mg : step-5 ] . in  @xcite",
    ", it is shown that the total length of the mortar graph edges is @xmath86 .",
    "the correction is forthcoming in a journal version . ] . for the purposes of this paper",
    ", we bound the length of the mortar graph in terms of @xmath25 .",
    "the following theorem can be easily deduced from  @xcite and  @xcite :    @xcite [ thm : planar - mg ] given a planar graph with boundary @xmath22 containing the terminals and a number @xmath73 , there is a mortar graph containing @xmath22 whose length is at most @xmath87 and whose supercolumns have length at most @xmath88 .",
    "the mortar graph can be found in @xmath89 time .",
    "we will use this theorem to prove the existence of a mortar graph for genus-@xmath14 embedded graphs .",
    "section  [ sec : mg - proof ] is devoted to proving the following theorem :    [ thm : genus - mortar - graph ] let @xmath27 be an embedded graph with fixed genus @xmath14 .",
    "let @xmath51 be a subset of vertices .",
    "for @xmath90 and @xmath91 , there is a mortar graph @xmath75 of @xmath27 such that the length of @xmath75 is @xmath92 and the supercolumns of @xmath75 have length @xmath93 .",
    "the mortar graph can be found in @xmath89 time .      along with the mortar graph , borradaile et  al .",
    "@xcite define an operation @xmath94 called _ brick - copy _ that allows a succinct statement of the structure theorem . for each brick @xmath76",
    ", a subset of @xmath95 vertices are selected as _",
    "portals _ such that the distance along @xmath96 between any vertex and the closest portal is at most @xmath97 . for every brick @xmath76 , embed @xmath76 in the corresponding face of @xmath75 and connect every portal of @xmath76 to the corresponding vertex of @xmath75 with a zero - length _ portal edge _ : this defines @xmath98 .",
    "@xmath98 is illustrated in figure  [ fig : mg ]  ( d ) .",
    "we denote the set of all portal edges by @xmath99 .",
    "the following simple lemma , proved in  @xcite holds also for bounded - genus graphs :    @xcite [ lem : soln ] if @xmath100 is a connected subgraph of @xmath101 , then @xmath102 is a connected subgraph of @xmath27 spanning the same nodes of @xmath27 .",
    "the following structure theorem is the heart of the correctness of the ptass .",
    "let @xmath27 be an embedded graph of genus @xmath14 .",
    "there exists a constant @xmath103 depending polynomially on @xmath104 and @xmath105 such that @xmath106 here @xmath107 for steiner tree and @xmath2-edge connectivity and @xmath108 for subset tsp .",
    "recall that @xmath73 and @xmath104 depend polynomially on @xmath74 and @xmath14 ( theorem  [ thm : genus - mortar - graph ] ) .",
    "since the bricks are always planar , the proof for bounded - genus graphs follows as for the planar cases : see  @xcite for the steiner tree problem and  @xcite for the @xmath2-edge - connectivity problem . in the remainder of this section , we sketch the proof for the subset - tsp problem .",
    "we will use the following lemma due to arora :    [ lem : patching ] let @xmath80 be any line segment of length @xmath109 and @xmath110 be a closed path that crosses @xmath80 at least thrice .",
    "then we can break the path in all but two of these places and add to it line segments lying on @xmath80 of total length at most @xmath111 such that @xmath110 changes into a closed path @xmath112 that crosses @xmath80 at most twice .",
    "this lemma applies to embedded graphs as well .",
    "note : the patching process connects paths in the tour that end on a common side of @xmath80 by a subpath of @xmath80 .",
    "let @xmath22 be a subgraph of a graph @xmath27 and let @xmath69 be a path in @xmath22 .",
    "a _ joining vertex _ of @xmath22 with @xmath69 is a vertex of @xmath69 that is the endpoint of an edge of @xmath113 .",
    "the proof of theorem  [ sec : structure - thm ] for subset - tsp follows from the following tsp property of bricks using the same technique as the planar case for , e.g. ,  steiner tree .",
    "see  @xcite for details .",
    "the condition that @xmath79 and @xmath77 are crossed at most twice each is achieved by including two copies of each supercolumn in the solution and rerouting the tour around these copies .",
    "[ thm : tsp - prop ] let @xmath76 be a brick of graph @xmath27 with boundary @xmath114 ( where @xmath79 and @xmath77 are supercolumns ) .",
    "let @xmath46 be a tour in @xmath27 such that @xmath46 crosses @xmath79 and @xmath77 at most @xmath9 times each .",
    "let @xmath22 be the intersection of @xmath46 with @xmath76 .",
    "then there is another subgraph of @xmath76 , @xmath115 , such that :    1 .",
    "@xmath115 has at most @xmath116 joining vertices with @xmath96 .",
    "2 .   @xmath117 .",
    "3 .   there is a tour in the edge set @xmath118 that spans the vertices in @xmath119 .    in the above ,",
    "@xmath120 .",
    "let @xmath22 be the subgraph of @xmath46 that is strictly enclosed by @xmath76 ( i.e. , @xmath22 contains no edges of @xmath96 ) .",
    "we can write @xmath22 as the union of 4 sets of minimal @xmath96-to-@xmath96 paths @xmath121 where paths in : @xmath122 start and end on @xmath80 ; @xmath123 start and end on @xmath78 ; @xmath124 start on @xmath79 or @xmath77 and end on @xmath96 ; @xmath125 start on @xmath80 and end on @xmath78 .    because @xmath46 crosses @xmath79 and @xmath77 at most 4 times , @xmath126 and @xmath124 results in at most 8 joining vertices with @xmath96 .",
    "for each path @xmath127 , let @xmath128 be the minimal subpath of @xmath78 that spans @xmath69 s endpoints and let @xmath129 be the resulting set . similarly define @xmath130 .",
    "because @xmath78 is 0-short and @xmath80 is @xmath13-short , @xmath131 because @xmath129 and @xmath130 are subpaths of @xmath96 , they result in no joining vertices with @xmath96 .",
    "it remains to deal with the paths in @xmath125 .",
    "let @xmath132 ( where @xmath81 ) be the vertices of @xmath80 guaranteed by the properties of the bricks ( see section  [ sec : mg ] ) .",
    "let @xmath133 be the subset of paths of @xmath125 that start on @xmath80 strictly between @xmath84 and @xmath134 .",
    "let @xmath135 be the remaining paths ( note : @xmath136 ) .",
    "if @xmath137 , we do the following : let @xmath138 be the path in @xmath133 whose endpoint @xmath4 on @xmath80 is closest to @xmath134 .",
    "let @xmath139 be the subpath of @xmath80 from @xmath84 to @xmath4 .",
    "by the properties of the bricks , @xmath140 .",
    "apply the patching lemma to the tour @xmath46 and path @xmath139 : as a result , at most two paths of @xmath133 occur right before ( or after ) crossings of @xmath51 in the new tour @xmath141 .",
    "let @xmath142 whose endpoints are not crossings in @xmath141 : @xmath143 .",
    "let @xmath144 be the subpaths of @xmath139 that are added to the tour . by the patching lemma , @xmath145    while @xmath146 , we do the following : let @xmath69 be any path in @xmath142 . as a result of the patching process @xmath69",
    "is connected to another path @xmath147 in @xmath133 via a path @xmath148 : that is , @xmath149 is a subpath of the tour .",
    "let @xmath150 be the minimal subpath of @xmath78 connecting the endpoints of @xmath69 and @xmath147 . because @xmath78 is @xmath151-short , @xmath152 . by the patching process ,",
    "the endpoints of @xmath69 and @xmath147 on @xmath80 are spanned by a part of the tour `` on the other side '' of @xmath139 .",
    "remove @xmath139 from @xmath144 and add @xmath150 .",
    "remove @xmath69 and @xmath147 from @xmath133 .",
    "when we are done , @xmath153 is empty .",
    "let @xmath154 be the set resulting from all such replacements .",
    "let @xmath155 be the union of @xmath135 , @xmath156 and @xmath154 over all @xmath157 . because @xmath154 is a set of subpaths of @xmath78 and @xmath80 , these paths result in no joining vertices with @xmath158 . because @xmath159 , these paths result in at most 4 joining vertices with @xmath96 . because @xmath160 , these paths have at most @xmath161 joining vertices with @xmath96 .",
    "therefore @xmath162 has at most @xmath163 joining vertices with @xmath158 .    because the only added length is introduced via the patching process , by equation  ( [ eq : q ] ) , @xmath164 let @xmath115 be the union of the paths in @xmath124 , @xmath165 , @xmath129 , and @xmath155 . combining equations  ( [ eq : n ] ) and  ( [ eq : ns ] ) , we find that @xmath166 . by construction ,",
    "the edges in @xmath118 contains a tour .",
    "@xmath115 has @xmath167 joining vertices with @xmath96 .",
    "in  @xcite , klein gave a framework for designing ptases in planar graphs that is based on finding a _ spanner _ for a problem , a subgraph containing a nearly optimal solution having length @xmath67 .",
    "it is possible , using the techniques in this paper and in  @xcite , to find such a spanner for bounded - genus graphs .",
    "we omit the details in favour of generalizing the framework of borradaile et  al .  @xcite .",
    "while both methods result in @xmath89 algorithms , the first method is doubly exponential in a polynomial in @xmath14 and @xmath74 and the second is singly exponential . ) .",
    "our presentation here is chosen to unify the methods for all problems studied . ]",
    "the idea in  @xcite is to perform dynamic programming over the bricks of the brick decomposition after performing a _ thinning _ step which groups the bricks into manageable groups . to this end ,",
    "the operation _ brick - contraction _",
    "@xmath168 is defined to be the application of the operation @xmath94 followed by contracting each brick to become a single vertex of degree at most @xmath95 ( see figure  [ fig : mg](e ) ) .",
    "the thinning algorithm decomposes the mortar graph @xmath75 into parts , called _",
    "parcels _ , of _ bounded dual radius _ ( implying bounded treewidth ) . applying @xmath168 to each parcel",
    "maintains bounded dual radius .",
    "the dynamic program computes optimal steiner trees inside the bricks using the method of  @xcite only at the leaves of the dynamic programming tree , thus eliminating the need of an a - priori constructed spanner .",
    "the interaction between subproblems of the dynamic programming is restricted to the portals , of which there are a few .    for embedded graphs with genus @xmath169 , the concept of bounded dual radius does not apply in the same way .",
    "we deal with treewidth directly by applying the following contraction decomposition theorem due to demaine et  al .",
    "@xcite :    ( * ? ? ? * theorem  1.1 ) [ thm : genus - baker ] for a fixed genus @xmath14 , and any integer @xmath170 and for every graph @xmath27 of euler genus at most @xmath14 , the edges of @xmath27 can be partitioned into @xmath171 sets such that contracting any one of the sets results in a graph of treewidth at most @xmath172 .",
    "furthermore , such a partition can be found in @xmath173 time .",
    "( recent techniques  @xcite have improved the above running time to @xmath89 . )",
    "we apply the above theorem directly to @xmath174 and contract a set of edges @xmath175 in @xmath174 . in @xmath174 , we modify the definition of contraction : after contracting an edge , we do not delete parallel portal edges .",
    "because portal edges connect the mortar graph to the bricks , they are not parallel in the graph in which we find a solution via dynamic programming . with this modified definition , we have the following algorithm :    [ lem : thinning ] the algorithm thinning(@xmath176 ) returns a set of edges @xmath175 and a tree decomposition @xmath40 of @xmath174 , so that    a.   the treewidth of @xmath40 is at most @xmath177 where @xmath178 ; b.   every brick is either marked as ignored or none of its portal edges are in @xmath175 ; c.   @xmath179 ;    we first verify that @xmath40 is indeed a tree decomposition . for a vertex @xmath32 and a tree decomposition @xmath180 ,",
    "let @xmath181 denote the subtree of @xmath141 that contains @xmath32 in all of its bags .",
    "let us denote the tree decomposition of step ( 4 ) by @xmath182 . for each brick vertex @xmath183 and each of its portals",
    "@xmath184 , we know that @xmath185 is connected and @xmath186 is connected and that these two subtrees intersect ; it follows that after the replacement in step ( 5.2 ) , we have that @xmath187 is a connected subtree of @xmath46 and hence , @xmath40 is a correct tree decomposition .",
    "note that theorem  [ thm : genus - baker ] guarantees a tree decomposition of width @xmath172 if any of @xmath188 are contracted ; and in step ( 3 ) , we only add to the set of edges to be contracted .",
    "hence , the treewidth of @xmath182 is indeed @xmath172 and with the construction in line ( 5.1 ) , the size of each bag will be multiplied by a factor of at most @xmath95 .",
    "this shows the correctness of claim ( i ) .",
    "the correctness of claim ( ii ) is immediate from the construction in line ( 3 ) .",
    "it remains to verify claim ( iii ) .",
    "let @xmath150 denote the weight of @xmath174 after setting the weights of the portal edges according to step ( 1 ) of the algorithm .",
    "we have that @xmath189 hence , the weight of @xmath175 , as selected in step ( 2 ) , is at most @xmath190 . the operation in step ( 3 )",
    "does not add to the weight of @xmath175 : when the boundary of a face @xmath191 is added to @xmath175 , its weight is subtracted again when resetting the weights of the portal edges back to @xmath151 in step ( 6 ) .",
    "if a brick is `` ignored '' by thinning , the boundary of its enclosing mortar graph face is completely added to @xmath175 .",
    "because @xmath175 can be added to the final solution , every potential connection through that brick can be rerouted through @xmath175 around the boundary of the brick .",
    "the interior of the brick is not needed .    an almost standard dynamic programming algorithm for bounded - treewidth graphs ( cf .",
    "@xcite ) can be applied to @xmath192 and @xmath40 . however , for the leaves of the tree decomposition that are added in step ( 5.2 ) of the thinning procedure , the cost of a subset of portal edges is calculated as , e.g. , the cost of the minimum steiner tree interconnecting these portals in the corresponding brick . because the bricks are planar , this cost can be calculated by the algorithm of erickson et al .",
    "@xcite for steiner tree or  @xcite for @xmath9-edge connectivity . because all the portal edges of this brick are present in this bag ( recall that we do not delete parallel portal edges after contractions ) , all possible solutions restricted to the corresponding brick will be considered . because the contracted brick vertices only appear in leaves of the dynamic programming tree ,",
    "the rest of the dynamic programming algorithm can be carried out as in the standard case , considering the portal edges , whenever they occur again , as having zero length .",
    "[ [ analysis - of - the - running - time . ] ] * analysis of the running time . * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    as was shown in  @xcite , the total time spent in the leaves of the dynamic programming is @xmath193 .",
    "the rest of the dynamic programming takes time @xmath194 .",
    "the running time of the thinning algorithm is dominated by the contraction decomposition of theorem  [ thm : genus - baker ] which is @xmath195  @xcite .",
    "hence , the total time is @xmath196 for the general case ; particularly , this is singly exponential in @xmath74 and @xmath14 , as desired .",
    "let @xmath49 be the input graph of genus @xmath50 and @xmath51 be the terminal set .",
    "in a first preprocessing step , we delete a number of unnecessary vertices and edges of @xmath52 to obtain a graph @xmath54 of genus @xmath197 that still contains every @xmath56-approximate solution for terminal set @xmath51 for all @xmath198 while fulfilling certain bounds on the length of shortest paths . in the next step ,",
    "we find a _ cut graph _",
    "@xmath199 of @xmath27 that contains all terminals and whose length is bounded by a constant times @xmath57 .",
    "we cut the graph open along @xmath199 , so that it becomes a planar graph with a simple cycle @xmath200 as boundary , where the length of @xmath200 is twice that of @xmath199 .",
    "see figure  [ fig : cutgraph ] for an illustration .",
    "afterwards , the remaining steps of building the mortar graph can be the same as in the planar case , by way of theorem  [ thm : planar - mg ] .",
    "for an edge @xmath201 in @xmath52 , we let @xmath202 and say that @xmath21 is _ at distance _ @xmath203 from @xmath204 .",
    "if the root vertex represents a contracted graph @xmath22 , we use the same terminology with respect to @xmath22 .",
    "any deleted vertex or edge is at distance @xmath205 from any terminal and hence , can not be part of a @xmath56-approximation for any @xmath206 .",
    "we call the resulting graph @xmath54 and henceforth use @xmath27 instead of @xmath52 in our algorithm .",
    "the preprocessing step can be accomplished in linear time : @xmath207 can be calculated with the recent improvement on mehlhorn s algorithm  @xcite by tazari and mller - hannemann  @xcite , and the shortest path tree with henzinger et al.s algorithm  @xcite .",
    "trivially , we have        start again with @xmath207 contracted to a vertex @xmath204 .",
    "we construct our cut graph as a _ system of loops _ rooted at @xmath204 : iteratively find short non - separating cycles through @xmath204 and cut the graph open along each cycle .",
    "erickson and whittlesey  @xcite showed that , for orientable surfaces , taking the _ shortest _ applicable cycle at each step results in the shortest system of loops through @xmath204 .",
    "they suggest an implementation of their algorithm using the _ tree - cotree decomposition _ , introduced by eppstein  @xcite , that runs in linear time on bounded - genus graphs .",
    "a tree - cotree decomposition of an embedded graph @xmath27 is a triple @xmath209 , so that @xmath46 is a spanning tree of @xmath27 rooted at @xmath204 , @xmath210 is a spanning tree of the dual of @xmath211 , and @xmath212 is the remaining set of edges ( recall that we identify the edges of @xmath27 and @xmath35 ) .",
    "eppstein showed that the set of elementary cycles @xmath213 is a cut graph of @xmath27 where @xmath214 is the cycle formed by the paths in @xmath46 from @xmath204 to the endpoints of @xmath21 plus the edge  @xmath21 .",
    "eppstein s decomposition also works for non - orientable embeddings .",
    "as we only need to bound the length of our cut graph , we present a simpler algorithm :        [ lem : cut - graph ] the algorithm planarize returns a cut graph @xmath199 , so that cutting @xmath27 open along @xmath199 results in a planar graph @xmath215 with a distinguished face whose facial walk @xmath200        clearly , @xmath217 is tree - cotree decomposition of @xmath27 and so , by eppstein s lemma  @xcite , @xmath199 is a cut graph . by euler s formula , we get that @xmath218 , the euler genus of @xmath27 . each edge",
    "@xmath219 completes a ( non - surface - separating , not - necessarily simple ) cycle as follows : a shortest path @xmath220 from @xmath207 to @xmath32 , the edge @xmath21 , a shortest path @xmath221 from @xmath222 to @xmath207 and possibly a path @xmath223 in @xmath207 . by proposition  [ prop : preprocess ] , we know that @xmath21 is at distance at most @xmath208 from @xmath207 and so , @xmath220 , @xmath221 , and at least one of @xmath224 and @xmath225 have length at most @xmath226 .",
    "hence , we have that @xmath227 . because there are ( exactly ) @xmath14 such cycles in @xmath199",
    ", we get that @xmath228 because @xmath199 is a cut graph , it follows that it consists of a single facial walk @xmath229 ; this follows easily from euler s formula , because @xmath199 has euler genus @xmath14 ( because @xmath230 is planar ) , with some @xmath171 vertices and @xmath231 edges .",
    "so , @xmath229 contains every edge of @xmath199 exactly twice ( cf .",
    "@xcite ) , i.e.  @xmath232 . cutting the graph open along @xmath229 results in a planar graph with a simple cycle @xmath233 as its boundary , as desired",
    "( see fig .",
    "[ fig : cutgraph ] ) .    as mentioned in the previous section , @xmath207 and @xmath234 can be computed in linear time on bounded - genus graphs  @xcite .",
    "@xmath235 can be obtained , for example , by a simple breadth - first - search in the dual .",
    "the remaining steps can also easily be implemented in linear time .",
    "let @xmath215 be the result of planarizing @xmath27 as guaranteed by lemma  [ lem : cut - graph ] .",
    "@xmath215 is a planar graph with boundary @xmath200 spanning @xmath51 and with length @xmath236 .",
    "let @xmath75 be the mortar graph guaranteed by theorem  [ thm : planar - mg ] .",
    "every edge of @xmath75 corresponds to an edge of @xmath27 .",
    "let @xmath237 be the subgraph of @xmath27 composed of edges corresponding to @xmath75 .",
    "every face @xmath33 of @xmath75 ( other than @xmath200 ) corresponds to a face @xmath238 of @xmath237 and the interior of @xmath238 is homeomorphic to a disk on the surface in which @xmath27 is embedded .",
    "it is easy to verify that @xmath237 is a mortar graph of @xmath27 satisfying the length bounds of theorem  [ thm : genus - mortar - graph ] .",
    "g.  borradaile and p.  n.  klein .",
    "the two - edge connectivity survivable network problem in planar graphs . in _",
    "icalp 08 : proceedings of the 35th international colloquium on automata , languages and programming _ , volume 5125 of _ lecture notes in computer science _ , pages 485501 .",
    "springer , 2008 .",
    "g.  borradaile , c.  mathieu , and p.  n.  klein . a polynomial - time approximation scheme for steiner tree in planar graphs . in _",
    "soda 07 : proceedings of the 18th annual acm - siam symposium on discrete algorithms _ , pages 12851294 , 2007 .",
    "g.  borradaile , c.  mathieu , and p.  n.  klein .",
    "steiner tree in planar graphs : an @xmath89 approximation scheme with singly exponential dependence on epsilon . in _",
    "wads 07 : proceedings of the 10th workshop on algorithms and data structures _ ,",
    "volume 4619 of _ lecture notes in computer science _ ,",
    "pages 275286 .",
    "springer , 2007 .",
    "s.  cabello and e.  w.  chambers .",
    "multiple source shortest paths in a genus g graph . in _ soda 07 : proceedings of the 18th annual acm - siam symposium on discrete algorithms _ , pages 8997 , philadelphia , pa , usa , 2007 .",
    "e.  d.  demaine , m.  hajiaghayi , and b.  mohar .",
    "approximation algorithms via contraction decomposition . in _",
    "soda 07 : proceedings of the 18th annual acm - siam symposium on discrete algorithms _ , pages 278287 , philadelphia , pa , usa , 2007 .",
    "j.  erickson and k.  whittlesey .",
    "greedy optimal homotopy and homology generators . in _",
    "soda 05 : proceedings of the 16th annual acm - siam symposium on discrete algorithms _ , pages 10381046 , philadelphia , pa , usa , 2005 .                  s.  tazari and m.  mller - hannemann .",
    "shortest paths in linear time on minor - closed graph classes , with an application to steiner tree approximation .",
    ", in press , 2008 . an extended abstract appeared in wg 08 : proceedings of the 34th workshop on graph theoretic concepts in computer science , lncs 5344 , pp .",
    "360371 , springer , 2008 ."
  ],
  "abstract_text": [
    "<S> we present the first polynomial - time approximation schemes ( ptases ) for the following subset - connectivity problems in edge - weighted graphs of bounded genus : steiner tree , low - connectivity survivable - network design , and subset tsp . </S>",
    "<S> the schemes run in @xmath0 time for graphs embedded on both orientable and non - orientable surfaces . </S>",
    "<S> this work generalizes the ptas frameworks of borradaile , klein , and mathieu  @xcite from planar graphs to bounded - genus graphs : any future problems shown to admit the required structure theorem for planar graphs will similarly extend to bounded - genus graphs .    </S>",
    "<S> glencora borradaile    erik d.  demaine    siamak tazari </S>"
  ]
}
{
  "article_text": [
    "the connes  kreimer hopf algebra and the butcher group .",
    "the hopf algebra @xmath5 of rooted trees is now a well - established object in mathematics , thanks in particular to the seminal works of connes and kreimer .",
    "kreimer  @xcite discovered that @xmath5 controls the combinatorics of renormalisation in perturbative quantum field theory , and his collaboration with connes ( e.g.  @xcite , @xcite , to cite a few ) uncovered deep connections with noncommutative geometry , number theory , lie theory , and algebraic combinatorics , stimulating a lot of further activity by many mathematicians and physicists . the connes ",
    "kreimer hopf algebra has now been characterised by several different universal properties @xcite , @xcite , @xcite .",
    "the group of characters of @xmath5 , now called the butcher group , was in fact studied by butcher  @xcite some 30 years earlier , in relation with order conditions for runge  kutta methods in numerical integration .",
    "the link back to this work from the connes ",
    "kreimer hopf algebra was provided by brouder  @xcite .",
    "categorification of the connes  kreimer hopf algebra .",
    "this article investigates a categorification of the bialgebra @xmath5 , i.e.  a lift from the level of algebra to the level of sets . to be precise",
    ", the antipode is _ not _ categorified .",
    "indeed , the antipode is a feature depending on the additive inverses of the ground ring .",
    "but in fact , the most natural ` ring ' of definition of @xmath5 is the semiring @xmath6 of natural numbers , and lacking additive inverses there is no antipode to be had here .",
    "the semiring @xmath6 appears as the burnside semiring of the distributive category @xmath7 of finite sets , i.e.  is the set of isomorphism classes of finite sets , with addition and multiplication inherited from the categorical sum and product .",
    "exhibiting a distributive category whose burnside semiring is @xmath5 , and describing at this level the comultiplication , is what we mean by categorification , following a popular terminology which goes back to crane and yetter  @xcite ; the specific process employed can more precisely be called objectification , cf .",
    "lawvere , schanuel , and their collaborators .",
    "a recommended introduction to categorification is the beautiful paper @xcite of baez and dolan .",
    "while the combinatorial nature of @xmath5 makes it clear that this categorification should be possible , a considerable amount of categorical algebra is needed in order to make all the algebraic structure explicit at the objective level .",
    "the categorification of @xmath5 will be the distributive category @xmath8 $ ] of polynomial functors on the category @xmath9 of @xmath10-indexed finite sets , where @xmath10 is the set of trees .",
    "for technical reasons we mostly work with @xmath0-trees for a finitary polynomial endofunctor @xmath0 , and we start out by explaining the differences",
    ". the comultiplication will be a comomonoidal structure on @xmath8 $ ] , relative to a certain tensor product of distributive categories .",
    "it is conceptually much easier to take the dual viewpoint",
    ". the category @xmath9 will be the categorification of the butcher group ( or rather the butcher monoid ) , and the task is to describe the monoidal structure on @xmath9 dual to the comultiplication .",
    "this monoidal structure , a functor @xmath11 , is itself a polynomial functor . the comultiplication is now given by precomposition with @xmath12 .",
    "polynomial functors .",
    "the notion of polynomial functor is central to this work .",
    "the theory of polynomial functors has roots in topology , representation theory , combinatorics , logic and computer science , but the task of unifying these developments has only recently begun  @xcite .",
    "an important feature of polynomial functors is that they can be manipulated in terms of a few representing sets , just as polynomial functions can be manipulated in terms of their coefficients and exponents .    in the present work ,",
    "polynomial functors enter at two levels : firstly , and most importantly , the notion of polynomial functor categorifies the notion of polynomial function ; second , the trees that index the involved variables are operadic trees , and they are themselves defined in terms of polynomial endofunctors . for the first aspect we need to develop some basic theory , which constitutes section  [ sec : alg ] ; for the second , the theory needed is already available from @xcite and @xcite .",
    "free monads , @xmath0-trees , and beyond .",
    "historically , one starting point for the general project of categorification is the quest in combinatorics for bijective proofs : it is well appreciated that a bijection between sets represents better understanding than a mere equation between numbers .",
    "one insight into the hopf algebra of rooted trees which results from its categorification and the polynomial viewpoint is the relation with free monads : it is shown that the set maps occurring in the polynomial representation of the new monoidal structure are the same maps as occur in the polynomial representation of the free monad construction .",
    "unfortunately , this is not completely true for abstract trees .",
    "it is true for @xmath0-trees , and we develop the theory in this setting  the free monad in question is then the free monad on @xmath0 .",
    "the notion of @xmath0-tree ( cf .",
    "[ ptree ] below ) covers many notions of structured and decorated trees , such as binary and planar trees , but abstract trees themselves are not an example : abstract trees should be @xmath0-trees for the terminal polynomial endofunctor , but the category of polynomial endofunctors over sets ( see [ cart ] ) does not have a terminal object !",
    "nevertheless , with a little care , the constructions made for @xmath0-trees work also for abstract trees , only the relation with free monads is then less direct .",
    "this is explained in section  [ sec : beyond ] , where it is also explained how these issues disappear when upgrading the whole theory from sets to groupoids : in this fancier setting , the terminal polynomial endofunctor does exist , and abstract trees become a particular case of the notion of @xmath0-tree .",
    "outline of the paper .",
    "in section  [ sec : bialg ] we introduce the bialgebra of operadic trees , and explain its relation with the usual connes  kreimer hopf algebra .",
    "section  [ sec : poly ] collects the notions and results needed from the theory of polynomial functors , notably the explicit formula for substitution of polynomials . in section  [ sec : alg ] we set up a framework for dealing with categories of polynomial functors and categories of indexed finite sets as ` polynomial rings ' and ` affine space ' , respectively .",
    "this section contains many observations that seem not to have been made before , regarding polynomial functors as categorification of polynomial functions . in section  [ sec : trees ] we introduce trees and @xmath0-trees and review in detail the construction of the free monad on a polynomial endofunctor @xmath0 . finally in section  [ sec : monoidal ] we establish the monoidal structure on @xmath9 , and relate it to the bialgebra of trees .",
    "section  [ sec : beyond ] contains some remarks about the difference between @xmath0-trees and abstract trees , and hints at a groupoid version of all the constructions as a more comprehensive framework .",
    "related work .",
    "this work was presented at the 2010 international category theory conference in genova . at the same conference ,",
    "matas menni spoke about his work with lawvere  @xcite on categorification of incidence algebras of mbius categories . while it is known that the connes ",
    "kreimer hopf algebra can be constructed as the incidence algebra of a suitable family of posets , it seems unlikely that it can be given as the incidence algebra of a single mbius category , so at present the lawvere ",
    "menni approach does not apply to categorify the connes ",
    "kreimer hopf algebra .",
    "work is under way to develop a higher - categorical notion of mbius categories in order to unify the two approaches .",
    "acknowledgments . the author has benefited greatly from many conversations with kurusch ebrahimi - fard , and",
    "also thanks the anonymous referees for many pertinent remarks which led to improved exposition .",
    "partial support from research grants mtm2009 - 10359 and mtm2010 - 20692 of spain and 2009sgr-1092 of catalonia is gratefully acknowledged .",
    "the standard connes  kreimer hopf algebra of rooted trees concerns combinatorial trees , whereas in this paper we prefer to work with operadic trees .",
    "this section explains the differences .",
    "combinatorial trees .",
    "the trees usually employed , which here we call combinatorial trees , are often defined as finite connected graphs without loops or cycles , and with a designated root vertex . if a connected subgraph of a rooted tree @xmath13 does not contain the root of @xmath13 , then instead it has a vertex nearest the root , which is then defined to be its root .    the connes ",
    "kreimer bialgebra of rooted trees .",
    "the bialgebra of rooted trees of connes and kreimer  @xcite is the polynomial @xmath14-algebra @xmath5 on the set of isomorphism classes of combinatorial trees . here",
    "@xmath14 can be any commutative @xmath6-algebra .",
    "the comultiplication is given on generators by @xmath15 where the sum is over all admissible cuts of @xmath13 ; the left - hand factor @xmath16 is the forest ( interpreted as a monomial ) found above the cut , and @xmath17 is the subtree found below the cut ( or the empty forest , in case the cut is below the root ) . `",
    "admissible cut ' means upper - set in the poset underlying the tree ( oriented from leaves ( inputs ) to root ( output ) ) i.e.  either a subtree containing the root , or the empty set .",
    "@xmath5 is a connected bialgebra : the grading is by the number of nodes , and @xmath18 is spanned by the unit .",
    "therefore , by general principles ( see for example @xcite ) , it acquires an antipode and becomes a hopf algebra  provided @xmath14 has additive inverses , i.e.  is a @xmath3-algebra .",
    "( in any case , the antipode exists after base change to @xmath3 . )    operadic trees .",
    "we shall need trees with slightly more expressive power , by allowing loose ends ( leaves ) : these are _ operadic trees _ , also called finite rooted trees with boundary  a formal definition is given in [ polytree - def ] .",
    "for the moment , the following drawings should suffice to exemplify operadic trees  as usual the planar aspect inherent in a drawing should be disregarded :    0.5 ( -50 0 ) ( 0 0 ) ( 0 30 )    ( 0 0 ) ( 0 0 ) ( 0 18 ) ( 0 0 ) f:0 r:2    ( 50 0 ) ( 0 0 ) ( 0 36 ) ( 0 18 ) ( 0 0 ) f:0 r:2    ( 105 0 ) ( 0 0 ) ( 0 15 ) ( 0 0 ) f:0 r:2 ( -5 33 ) ( 0 0 ) f:0 r:2 ( 0 15 ) ( -12 28 ) ( 0 0 ) f:0 r:2 ( 0 15 ) ( 4 43 ) ( 0 15 ) ( 12 40 )    ( 170 0 ) ( 0 0 ) ( 0 18 ) ( 0 0 ) f:0 r:2 ( -6 32 ) ( 0 0 ) f:0 r:2 ( -12 57 ) ( 0 18 ) ( 4 40 ) ( 0 0 ) f:0 r:2 ( 20 50 ) ( 0 0 ) f:0 r:2 ( 15 65 ) ( 20 50 ) ( 25 65 ) ( 4 40 ) ( 9 54 ) ( 0 0 ) f:0 r:2 ( 4 40 ) ( -4 61 )    note that certain edges ( the _ leaves _ ) do not start in a node and that one edge ( the obligatory _ root edge _ ) does not end in a node . a node without incoming edges is not the same thing as a leaf ; it is a nullary operation ( i.e.  a constant ) in the sense of operads .",
    "in operad theory , the nodes represent operations , and trees are formal combinations of operations .",
    "the small incoming edges drawn at every node serve to keep track of the arities of the operations . furthermore , for coloured operads , the operations have type constraints on their inputs , encoded as attributes of the edges .",
    "operadic trees in qft .",
    "the use in quantum field theory of more refined notions of trees , and operadic trees in particular , has been hinted at by kreimer in several papers , most concretely with bergbauer  @xcite , where trees with loose edges are used to analyse combinatorial dyson  schwinger equations .",
    "in fact , the role of trees in the connes  kreimer bialgebra is to encode nestings of 1-particle irreducible feynman graphs  @xcite , and one can argue @xcite that they are naturally operadic : each tree naturally comes equipped with decorations by primitive 1pi graphs on nodes and interaction labels on edges . to fully encode the compatibility conditions involved in these decorations , and to allow to recover the graph from the decorated trees , it is necessary to keep track of the arities of the nodes , so that even vacant input slots are represented",
    "; this leads naturally to operadic trees .",
    "a more thorough analysis of the relationship between graphs and trees is given elsewhere  @xcite .",
    "kreimer  @xcite stresses the general utility of trees as expression of nestings of structures , not only of feynman graphs . in the following picture",
    "we see first a nesting of subsets , then a combinatorial - tree expression of the nesting , and finally an operadic - tree expression of the same nesting , in which the leaves correspond to the elements of the nested sets :    0.5 ( 0 30 ) r:30 ( -15 15 ) r:7 ( 8 32 ) r:19 ( 17 38 ) r:5 ( 7 24 ) r:9 ( -15 15 ) ( 0 0 ) f:0 r:2 ( 4 25 ) ( 0 0 ) f:0 r:2 ( 10 23 ) ( 0 0 ) f:0 r:2 ( 4 42 ) ( 0 0 ) f:0 r:2 ( -13 48 ) ( 0 0 ) f:0 r:2    0.8 ( 0 15 ) 1.5 ( 0 0 ) f:0 r:3 ( -10 20 ) f:0 r:3 ( 0 0 ) ( 10 20 ) f:0 r:3 ( 0 40 ) f:0 r:3 ( 10 20 ) ( 20 40 ) f:0 r:3 ( 0 0)(*ex * ey ) ( * ex * ey ) ( 0 0 )    0.8 1.5 ( 0 0 ) f:0 r:3 ( -10 20 ) f:0 r:3 ( 0 0 ) ( 10 20 ) f:0 r:3 ( 0 40 ) f:0 r:3 ( 10 20 ) ( 20 40 ) f:0 r:3 ( 0 0)(*ex * ey ) ( * ex * ey ) 0.5 ( 0 40 ) ( -5 65 ) ( 0 40 ) ( 5 65 ) ( 0 0 ) ( 0 -15 ) ( 0 0 ) ( -40 45 ) ( -10 20 ) ( -22 60 ) ( 10 20 ) ( 15 64 ) ( 0 0)(*ex * ey ) ( * ex * ey )    one feature of operadic trees is that they admit colimit descriptions of basic operations : most importantly , grafting can be expressed as a pushout , and every tree is the colimit of its elementary subtrees , i.e.  trees without inner edges @xcite .",
    "this makes them well suited for constructions ( rather than just decomposition ) .",
    "another advantage is that symmetries of the original nested structure ( for example a nesting of feynman graphs ) are better captured by operadic trees than by combinatorial trees , as the above picture also illustrates : the combinatorial tree has a symmetry which does not reflect a symmetry in the nesting , and fails to detect the inner symmetries of the nesting .",
    "( the symmetry issues play a crucial role in the treatment of green functions , where the operadic viewpoint seems important  @xcite . )",
    "the bialgebra of operadic trees.[comultmy ] a _ cut _ of an operadic tree is defined to be a subtree containing the root  note that the arrows in the category of operadic trees ( section  [ sec : trees ] ) are arity preserving ( [ sub ] ) , meaning that if a node is in the subtree , then so are all the incident edges of that node .",
    "if @xmath19 is a subtree containing the root , then each leaf @xmath20 of @xmath21 determines an _ ideal subtree _ of @xmath13 ( [ sub ] ) , namely consisting of @xmath20 ( which becomes the new root ) and all the descendant edges and nodes .",
    "this is still true when @xmath20 is also a leaf of @xmath13 : in this case , the ideal tree is the trivial tree consisting solely of @xmath20 .",
    "figuratively , this means that cuts can go through the leaves but are not allowed to go _ above _ the leaves .",
    "note also that the root edge is a subtree ; the ideal tree of the root edge is of course the tree itself .",
    "this is the analogue of the cut - below - the - root in the combinatorial case . for a cut @xmath19 ,",
    "define @xmath16 to be the forest consisting of all the ideal trees generated by the leaves of @xmath21 .",
    "let @xmath22 be the polynomial @xmath14-algebra on the set of isomorphism classes of operadic trees .",
    "with comultiplication defined on the generators by @xmath23 as for combinatorial trees , @xmath22 becomes a graded bialgebra .",
    "it is not connected : @xmath24 is spanned by powers of the trivial tree @xmath25 ( including the empty power , which is the algebra unit @xmath26 ) .",
    "these are all group - like , so one could obtain a connected bialgebra by imposing the equation @xmath27 . note that the comultiplication for operadic trees is linear in the right - hand factor , unlike the comultiplication for combinatorial trees , where @xmath28 always contains a factor @xmath29 corresponding to the empty - cut - below - the - root .    as an example , here are the 11 possible cuts of the tree in the previous picture :    note that the first and the last term of the comultiplication of this tree @xmath13 are @xmath30 not @xmath31 .    from operadic trees to combinatorial trees .",
    "the _ core _ of a non - trivial operadic tree @xmath13 is the combinatorial tree @xmath32 obtained by pruning off all leaves as well as the root edge .",
    "taking core is functorial in root - preserving inclusions .",
    "for any non - trivial operadic tree @xmath13 , there is a natural bijection between the set of non - trivial subtrees of @xmath13 and the set of combinatorial subtrees of @xmath32 .",
    "this bijection sends @xmath33 to @xmath34 . by extending the assignment by defining the core of the trivial tree to be the empty ( combinatorial ) forest ,",
    "it is clear that the operation is compatible with comultiplication , as illustrated in the previous picture , where the core is highlighted with fat lines .",
    "in conclusion we have :    proposition . _",
    "taking core defines a surjective homomorphism of graded bialgebras @xmath35 _    the bialgebra of @xmath0-trees .",
    "the definition makes sense equally well for @xmath0-trees ( [ ptree ] ) .",
    "if there are more than one edge colour involved , there is a trivial tree for each edge colour , and the monomials in these trees ( including the trivial monomial @xmath26 ) span @xmath24 .",
    "clearly they are all group - like .",
    "in this section , we recall the basic notions of polynomial functors , referring to gambino ",
    "kock  @xcite for all details .",
    "slices , pullback , and adjoints .",
    "we write @xmath36 and @xmath37 for the disjoint union of sets ( i.e.  the categorical coproduct ) .",
    "the equality sign denotes canonical isomorphism of sets .",
    "let @xmath38 be a set .",
    "recall ( e.g.  from  @xcite ,  9.7 ) the _ slice category _ @xmath39 : its objects are maps @xmath40 , and its arrows are commutative triangles    x & & & & x + & & & & + & & b . & &    for a set map @xmath41 , we denote the fibre over @xmath42 by @xmath43 .",
    "we can then write @xmath44 as the union of the fibres , @xmath45 , and interpret @xmath46 as a @xmath38-indexed family of sets .",
    "in fact , there is a canonical equivalence of categories @xmath47 & \\longmapsto & [ b\\mapsto x_b ] .",
    "\\end{aligned}\\ ] ] here @xmath48 denotes the category of functors @xmath49 ( considering the set @xmath38 as a discrete category ) . for either interpretation of @xmath38-indexed family of sets",
    ", we shall use the notation @xmath50 .    given a map @xmath51",
    ", we have the _ lowershriek _ functor @xmath52 & \\longmapsto & [ x\\to a \\to b ] .",
    "\\end{aligned}\\ ] ] using decomposition into fibres , the functor has the following description : @xmath53 i.e.  sum along the fibres .",
    "the functor @xmath54 has a right adjoint , denoted by _",
    "upperstar _ , given by pullback : @xmath55[0ex]{\\(\\ast\\ ) } } } : { { \\text{\\textbf{\\textsl{set}}}}}/b & \\longrightarrow & { { \\text{\\textbf{\\textsl{set}}}}}/a   \\\\      { } [ x\\to b ] & \\longmapsto & [ a\\times_b x \\to a ] .    \\end{aligned}\\ ] ] in fibre notation , @xmath56    finally , also @xmath57[0ex]{\\(\\ast\\)}}}$ ] in turn has a right adjoint , denoted _ lowerstar _ , which is more involved to describe synthetically , but whose description in terms of fibres is `` multiply along the fibres '' : @xmath58[0ex]{\\(\\ast\\)}}}:{{\\text{\\textbf{\\textsl{set}}}}}/a   & \\longrightarrow & { { \\text{\\textbf{\\textsl{set}}}}}/b   \\\\      ( x_a\\mid a\\in a ) & \\longmapsto & ( \\prod_{a\\in a_b } x_a \\mid b\\in b )",
    ".    \\end{aligned}\\ ] ]    if the categories @xmath59 and @xmath39 are replaced by the equivalent categories @xmath60 and @xmath48 , the three functors @xmath54 , @xmath57[0ex]{\\(\\ast\\)}}}$ ] , and @xmath61[0ex]{\\(\\ast\\)}}}$ ] can still be interpreted : @xmath57[0ex]{\\(\\ast\\)}}}$ ] is just precomposition with @xmath62 .",
    "its adjoints are left and right kan extension respectively ( cf .  @xcite , ch .",
    "x , for this notion ) . in this paper",
    "we shall not need the explicit form of these functors .",
    "although we actually formulate many results in terms of the functor categories @xmath48 , when it comes to functors we prefer to work with slices .",
    "polynomial functors .",
    "a diagram of sets @xmath63    & & e & \\rto^p   & & b & & \\\\    & \\ldto^{s}&&&&&\\rdto^{t } & \\\\ i & & & & & & & j \\end{diagram}\\ ] ] defines a _ polynomial functor _ @xmath64[0ex]{\\(\\ast\\)}}}}\\rto   { { \\text{\\textbf{\\textsl{set}}}}}/e \\stackrel{p{_{\\raisebox{-0.33ex}[-0.5ex][0ex]{\\(\\ast\\)}}}}\\rto { { \\text{\\textbf{\\textsl{set}}}}}/b   \\stackrel{t{_!}}\\rto   { { \\text{\\textbf{\\textsl{set}}}}}/j .\\ ] ] in terms of indexed families and fibres , the formula for this polynomial functor is @xmath65 it is hence an @xmath66-indexed family of sums of products of @xmath67-indexed families .",
    "particularly suggestive is the case @xmath68 , so that we are talking about a ` single polynomial in one variable ' . in this case",
    "the formula boils down to @xmath69    morphisms.[nat ] morphisms of polynomial functors are just natural transformations",
    ". one can show ( @xcite ) that a natural transformation @xmath70 between polynomial functors is uniquely represented by diagrams of the form @xmath71 by @xmath72 we denote the category of polynomial functors @xmath73 , and their natural transformations .    for the manipulation of polynomial functors in terms of the representing sets , the following two facts are basic .",
    "beck  chevalley . given a pullback square    a & ^ & b +   + a & _ & b    there are natural isomorphisms of functors @xmath74[0ex]{\\(\\ast\\)}}}{\\stackrel{\\raisebox{0.1ex}[0ex][0ex]{\\(\\sim\\ ) } }             { \\raisebox{-0.15ex}[0.28ex]{\\(\\rightarrow\\)}}}{\\varphi}{^{\\raisebox{-0.25ex}[0ex][0ex]{\\(\\ast\\)}}}\\circ \\beta{_!}\\qquad \\text { and } \\qquad       \\beta{^{\\raisebox{-0.25ex}[0ex][0ex]{\\(\\ast\\)}}}\\circ { \\varphi}{_{\\raisebox{-0.33ex}[-0.5ex][0ex]{\\(\\ast\\)}}}{\\stackrel{\\raisebox{0.1ex}[0ex][0ex]{\\(\\sim\\ ) } }             { \\raisebox{-0.15ex}[0.28ex]{\\(\\rightarrow\\)}}}{\\overline}{\\varphi}{}{_{\\raisebox{-0.33ex}[-0.5ex][0ex]{\\(\\ast\\)}}}\\circ       \\alpha{^{\\raisebox{-0.25ex}[0ex][0ex]{\\(\\ast\\)}}},\\ ] ] usually called the _ beck  chevalley",
    "isomorphisms_.    distributivity .",
    "starting from maps @xmath75 , we can construct the following diagram by applying @xmath76[0ex]{\\(\\ast\\)}}}$ ] to the map @xmath77 :    ^[0ex][0ex]@xmath78_[-0.5ex][0ex]@xmath78a & ^ & _ [ -0.5ex][0ex]@xmath78a +   +   + & & & ^ & & & _ & & _ & & & + & & & & _ & & & & & & _ & + & ^&&&&&_&&_&&&&^ + & & & q&&&&&&&p & & &    the composite @xmath79 is constructed as the top outline : start by taking the pullback at the common middle set , then lowerstar the result to arrive at what will be the top right - hand corner of the composite , and pull back to complete the distributivity pentagon . the diagram is completed by taking two more pullbacks as indicated .",
    "the bridge diagram constructed is naturally isomorphic to the composite of the original functors by the beck ",
    "chevalley isomorphisms and distributivity .",
    "the construction reflects closely how one composes two polynomial functions in elementary algebra : the key point is of course distributing the products involved in the outer polynomial over the sums of the inner .",
    "the @xmath80-category of polynomial functors .",
    "polynomial functors form a @xmath80-category - category ( see for example @xcite , ch .",
    "xii ) is not essential to understand this work , but it is an efficient framework to set up some of the involved notions correctly . ] @xmath81 in which the objects are the slices of @xmath82 ( or equivalently , the categories @xmath83 for @xmath67 a set ) , the @xmath26-cells are the polynomial functors ( i.e.  those isomorphic to one given by a diagram ) , and @xmath80-cells are arbitrary natural transformations .",
    "@xmath81 is a strict @xmath80-category . by theorem  2.17 of @xcite",
    "it is biequivalent to a bicategory whose objects are sets @xmath67 , whose @xmath26-cells are diagrams like and whose @xmath80-cells are diagrams like ( and where composition is described as in [ comp ] ) .",
    "the theorem allows us to blur the distinction between bridge diagrams and the polynomial functors they represent , allowing for the conceptual benefit of the strict @xmath80-category @xmath81 and the computational benefit of the representing diagrams .",
    "this is a characteristic aspect of the theory of polynomial functors .",
    "we are here concerned with the aspect of polynomial functors as a categorification of the elementary algebra of polynomial functions . in this section we introduce a set - up to deal with ` rings ' of polynomial functors and their associated ` affine spaces ' , in the sense of algebraic geometry  @xcite .",
    "the results in this section appear for the first time , but they are not difficult .",
    "one key issue is to impose the correct finiteness conditions .",
    "certainly , our ` ground category ' should be the category of finite sets : all coefficients and exponents will now be required to be finite .",
    "however , the polynomial rings we are interested in have infinitely many variables , so we can not just take the theory of polynomial functors internally to the category of finite sets .",
    ". the category of finite sets , which we denote @xmath84 will be our coefficient ` ring ' .",
    "more precisely , the monoidal operations of finite sums and products make it a distributive category  @xcite . clearly",
    "the set of isomorphism classes of @xmath7 is the set of natural numbers , and sum and products then yield the usual addition and multiplication of numbers . in short ,",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath6 is the burnside semiring of @xmath7 _ , _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    which is categorification in its purest form .",
    "the notation @xmath7 stresses the algebraic aspect of @xmath85 , and we use this notation when we think of that category as the ground ring .",
    "the same category also plays a geometric role , and as such we denote it @xmath86 leading to a natural notation for what plays the role of affine space .",
    "namely , if @xmath67 is a set , then the functor category @xmath87 is the domain for the finite polynomial functors in @xmath67-many variables .",
    "( note that @xmath88 is not equivalent to @xmath89 when @xmath67 is an infinite set : the latter is the category of maps @xmath90 with @xmath91 finite .",
    "the former is equivalent to the category of maps @xmath90 with finite fibres . )",
    "finite polynomials .",
    "a polynomial @xmath92 is called _ finite _ when @xmath38 and @xmath91 are finite sets .",
    "these are the polynomial functors on @xmath93 with values in finite sets .",
    "we denote the category of these polynomial functors @xmath94 : = { \\text{\\textbf{\\textsl{finpoly}}}}(i,1 ) .\\ ] ] clearly @xmath95 $ ] is a distributive category and    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the burnside semiring of @xmath95 $ ] is @xmath96 $ ] , the polynomial semiring in @xmath67-many variables , _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    as the notation also suggests .",
    "moreover ,    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath95 $ ] is the free distributive category on the set @xmath67 , _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    just as @xmath96 $ ] is the free commutative semiring on @xmath67 .",
    "indeed , the category @xmath95 $ ] is generated freely under finite sums by the monomials , i.e.  those @xmath97 for which @xmath98 .",
    "from the characterisation of natural transformations in [ nat ] , we see that the category of monomial functors in @xmath67-many variables has arrows given by commutative triangles    & & e + i & ( 2,1 ) & + & ( 2,1 ) & e ,    and so is equivalent to @xmath99 .",
    "but it is well known that @xmath99 is the finite - product completion of @xmath67 .    ` polynomial rings ' and ` affine space ' .",
    "the distributive category @xmath95 $ ] is the category of finite polynomial functors on @xmath93 .",
    "conversely , the category @xmath93 can be reconstructed from @xmath95 $ ] : define a _ character _ on a distributive category @xmath100 to be a functor @xmath101 preserving finite sums and finite products .",
    "the form a category in which the morphisms are the finite - sum - and products - compatible natural transformations .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath93 is equivalent to the category of characters of @xmath95 $ ] . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    indeed , the category of sum - and - product preserving functors @xmath95\\to{\\mathbb{f}}$ ] is equivalent to the product - preserving functors @xmath102 , and since the domain is the product - completion of @xmath67 , we are finally left with the category of functors @xmath103 , which is what we denote @xmath93 .",
    "appropriate maps : locally finite polynomial functors .",
    "[ duality ] for a given set @xmath67 we now have the category @xmath95 $ ] playing the role of a polynomial ring , and the category @xmath93 playing the role of affine space .",
    "we proceed to assemble these objects into @xmath80-categories @xmath104 and @xmath105 , respectively , which will be the ambient setting for defining the algebraic structures promised in the introduction .",
    "the @xmath80-category @xmath104 is defined as follows .",
    "its objects are the categories of the form @xmath95 $ ] ( i.e.  free distributive categories on a set ) .",
    "the @xmath26-cells are the finite - sum - and - product - preserving functors , and the @xmath80-cells are the compatible natural transformations ( i.e.  those whose component on a finite sum is the sum of the components , and similarly with finite products ) .",
    "the universal property of @xmath106 $ ] implies that the hom cats in @xmath104 are @xmath107,{\\mathbb{f}}[i ] ) \\simeq { \\mathbb{f}}[i]^j .\\ ] ]    on the other hand , the @xmath80-category @xmath105 is defined as having the categories @xmath93 as objects , and as hom cats the categories of locally finite polynomial functors and their natural transformations , denoted @xmath108 : a polynomial functor @xmath109 is called _ locally finite _ when the maps @xmath46 and @xmath110 have finite fibres .",
    "this means that only finite sums and finite products are involved .",
    "it is not difficult to see that we have an equivalence of categories @xmath111^j .\\ ] ] one may observe that the locally finite polynomial functors can also be charaterised as those @xmath112 such that for any @xmath0 belonging to @xmath106 $ ] , the composite @xmath113 belongs to @xmath95 $ ] , in analogy with the definition of regular maps in algebraic geometry .",
    "almost tautologically we have an equivalence of @xmath80-categories @xmath114 justifying the symbols and the terminology .    the tensor product and comonoidal structure .",
    "the @xmath80-category @xmath115 has finite products : it is given by the equivalence of categories @xmath116 accordingly , the category @xmath104 has categorical sums , which we denote by @xmath117 .",
    "all we need to know about it is the equivalence @xmath118 { \\otimes}_{{\\mathbb{f } } } { \\mathbb{f}}[i_2 ] \\simeq   { \\mathbb{f}}[i_1+i_2 ] , \\ ] ] which is just dual to the previous display .",
    "the neutral element for this tensor product is the category @xmath119 $ ] itself , which is an initial object in @xmath104 : the unique sum - and - product - preserving functor @xmath120 $ ] sends a finite set @xmath121 to the polynomial functor @xmath122 the objects in @xmath123 are algebras .",
    "we would like to define bialgebras as comonoids in @xmath123 , or rather pseudo - comonoids ( i.e.  coassociative only up to given coherent isomorphisms ) .",
    "a bialgebra is then a category @xmath95 $ ] equipped with a comonoidal structure , i.e.  functors @xmath124 \\to { \\mathbb{f}}[i]{\\otimes}{\\mathbb{f}}[i]$ ] .",
    "every @xmath95 $ ] has two canonical such comonoidal structures , as we shall see in the next paragraph .",
    "the main result of this paper establishes another comonoidal structure for the special case @xmath125 .",
    "however , it is much more convenient to describe these structures on the other side of the duality , namely in @xmath126 , where the background structure is just the product , and we are talking about the familiar notion of monoidal structure instead of comonoidal structure .",
    "canonical monoidal structures on @xmath93 .",
    "fix a set @xmath67 .",
    "the category @xmath93 has two canonical monoidal structures : pointwise sum and pointwise product .",
    "these are given by locally finite polynomial functors .",
    "the _ sum _ of @xmath127 and @xmath128 is the function @xmath129 which sends @xmath130 to @xmath131 . under the equivalence @xmath132",
    "the sum map is polynomial : it is represented by @xmath133 the corresponding comonoidal structure on @xmath95 $ ] is given by @xmath134 & \\longrightarrow & { \\mathbb{f}}[i]{\\otimes}_{\\mathbb{f}}{\\mathbb{f}}[i ]    \\\\",
    "x_i   & \\longmapsto & x_i{\\otimes}1 + 1 { \\otimes}x_i .",
    "\\end{aligned}\\ ] ] here @xmath135 $ ] denotes the polynomial functor @xmath136 where @xmath137 picks out the element @xmath130 .",
    "the neutral object for the sum is of course the constant empty set @xmath138 . under the equivalence @xmath139",
    ", the corresponding map is represented by @xmath140 the corresponding counit for the comultiplication is given by @xmath141 .",
    "the _ product _ of @xmath127 and @xmath128 is the function @xmath142 which sends @xmath130 to @xmath143 .",
    "it is represented by @xmath144 the unit is the constant function @xmath26 .",
    "the corresponding comonoidal structure on @xmath95 $ ] is given by @xmath145 and @xmath146 .",
    "this categorifies the construction of the monoid - algebra on the free abelian monoid on @xmath67 .    before coming to the promised new monoidal structure on @xmath9 in section  [ sec : monoidal ] ,",
    "we need some background on trees .",
    "we briefly summarise the polynomial formalism of trees from @xcite .",
    "trees.[polytree - def ] it was observed in @xcite that operadic trees can be conveniently encoded by diagrams of the same shape as polynomial functors .",
    "we take this as the definition of tree : an _ operadic tree _ is a diagram of finite sets    a & ^s & m & ^p & n & ^t & a    satisfying the following three conditions :    \\(1 ) @xmath110 is injective    \\(2 ) @xmath147 is injective with singleton complement ( called the _ root _ and denoted @xmath26 ) .    with @xmath148 ,",
    "define the walk - to - the - root function @xmath149 by @xmath150 and @xmath151 for @xmath152 .",
    "\\(3 ) @xmath153 .",
    "the elements of @xmath154 are called _",
    "edges_. the elements of @xmath155 are called _",
    "nodes_. for @xmath156 , the edge @xmath157 is called the _ output edge _ of the node . that @xmath110 is injective is just to say that each edge is the output edge of at most one node . for @xmath156 ,",
    "the elements of the fibre @xmath158 are called _ input edges _ of @xmath42 .",
    "hence the whole set @xmath159 can be thought of as the set of nodes - with - a - marked - input - edge , i.e.  pairs @xmath160 where @xmath42 is a node and @xmath20 is an input edge of @xmath42 .",
    "the map @xmath147 returns the marked edge .",
    "condition ( 2 ) says that every edge is the input edge of a unique node , except the root edge .",
    "condition ( 3 ) says that if you walk towards the root , in a finite number of steps you arrive there .",
    "the edges not in the image of @xmath110 are called _",
    "leaves_. from now on we just say _ tree _ for ` operadic tree ' .    the tree @xmath161 is the _",
    "trivial tree _ , which we denote by .",
    "cartesian morphisms ( cf .",
    "@xcite ) . [ cart ]",
    "a _ cartesian morphism _ of polynomial endofunctors is by definition a diagram @xmath162    i ' & \\lto & e ' \\sepbk & \\rto & b ' & \\rto & i '   \\\\",
    "\\dto<\\alpha & & \\dto & & \\dto & & \\dto>\\alpha \\\\",
    "i   & \\lto & e & \\rto & b & \\rto    & i .",
    "\\end{diagram}\\ ] ] if @xmath163 is an identity map , then this corresponds precisely to cartesian natural transformations between polynomial endofunctors ( i.e.  whose naturality squares are cartesian ) . in the general case ,",
    "the cartesian morphisms like are outside the scope of the @xmath80-category @xmath81 , but they can be reduced to it by some base change  @xcite .",
    "morphisms of trees ( cf .",
    "1.1).[sub ] a _ morphism of trees _ is by definition a cartesian morphism of the associated polynomial endofunctors .",
    "hence edges go to edges , and the cartesian condition means that a node of arity @xmath164 is mapped to a node of arity @xmath164 .",
    "the morphisms of trees are also called _ tree embeddings _ since in fact each of the components of such a map is automatically injective : indeed , the tree axioms above imply that a morphism necessarily commutes with the walk - to - the - root function @xmath165 , and together with arity perservation this forces the maps to be injective .",
    "hence the category of trees and tree embeddings , denoted @xmath166 , is mostly concerned with subtrees , but note that it also contains automorphisms of trees .",
    "a tree embedding is _ root - preserving _ when it sends the root to the root . in formal terms , these are diagrams such that also the left - hand square is cartesian , @xcite , 1.1.13 .    an _ ideal embedding _ ( or an _ ideal subtree _ ) is a subtree for which every descendent edge and node is also in the tree , @xcite , 1.1.9 .",
    "there is one ideal subtree generated by each edge in the tree .",
    "the ideal embeddings are characterised as having also the right - hand square of cartesian .",
    "ideal embeddings and root - preserving embeddings admit pushouts along each other in the category @xmath166 , @xcite , 1.1.20 .",
    "the most interesting case is pushout over a trivial tree : this is then the root of one tree and a leaf of another tree , and the pushout is the grafting onto that leaf .",
    "decorated trees : @xmath0-trees.[ptree ] let @xmath0 denote a finitary polynomial endofunctor on @xmath167 , represented by @xmath168 by definition ( @xcite ,  1.2 ) , a _",
    "@xmath0-tree _ is a diagram    a&&m & & n & & a + & & & & & & + i&&e&&b & & i .    where the top row is a tree .",
    "unfolding the definition , we see that a @xmath0-tree is a tree whose edges are decorated in @xmath67 , whose nodes are decorated in @xmath38 , and with the additional structure of a bijection for each node @xmath169 ( with decoration @xmath170 ) between the set of input edges of @xmath164 and the fibre @xmath171 , subject to the compatibility condition that such an edge @xmath172 corresponding to @xmath173 has decoration @xmath174 , and the output edge of @xmath164 has decoration @xmath157 .",
    "note that the @xmath67-decoration of the edges is completely specified by the node decoration together with the compatibility requirement , except for the case of a trivial tree .",
    "the free monad on a polynomial endofunctor .",
    "( for the notion of monad , see @xcite , ch.vi , or @xcite , ch .  10 . )",
    "by a _ polynomial monad _ we mean a monad in the @xmath80-category of polynomial functors and cartesian natural transformations , cf .",
    "the forgetful functor from polynomial monads to polynomial endofunctors has a left adjoint , the free - monad functor .",
    "it has the following pleasing description in terms of trees , cf .",
    "@xcite , prop .",
    "1.2.8 : the free monad on a polynomial endofunctor @xmath0 is the polynomial monad represented by @xmath175 where @xmath176 is the set of ( isomorphism classes of ) @xmath0-trees , and @xmath177 is the set of ( isomorphism classes of ) @xmath0-trees with a marked leaf .",
    "the left - most map returns the decoration of the marked leaf ; the right - most map returns the decoration of the root , and the middle map @xmath178 just forgets the mark .",
    "the monad structure is given by grafting of trees , an operation that allows an easy and completely formal description in the category of trees in terms of pushouts , cf .",
    "@xcite , prop .",
    "examples of the notion of @xmath0-trees , for suitable choices of @xmath0 , are planar and binary trees , or more specialised examples like trees with nodes decorated by primitive 1pi graphs of a quantum field theory  @xcite , or the opetopes of higher category theory  @xcite .",
    "the polynomial endofunctor @xmath0 will be held fixed throughout , and from now on we put @xmath179 .",
    "we let @xmath180 denote the free monad on @xmath0 .",
    "we shall need an explicit description of the monad structure of @xmath180 .",
    "as in [ comp ] , the composite @xmath181 , is built by the following diagram , whose constituents we now make explicit :    & & & & & & &&&&^p & & & = q_[-0.5ex][0ex]@xmath78(_i  ) + & & & & & & & & _ + & & & & & & & _ i &&&&>r + & & & & & & & & & & & + & & &&_q&&&&&&_q & + & & & & & & & & & & & & + i&&&f&&&&i&&&f&&&i    the construction starts from the bottom by forming the central pullback square : @xmath182 is the set of pairs @xmath183 such that the root of @xmath121 is of the same type as the marked leaf of @xmath21 , in other words a simple grafting of one tree onto another .",
    "this can also be interpreted as the set of trees with one marked edge : the two projections are then : return the ideal subtree generated by that edge ( that s @xmath121 ) , and return the root - preserving tree obtained by pruning that ideal subtree ( that s @xmath21 ) .",
    "next we compute @xmath184[0ex]{\\(\\ast\\)}}}({\\mathbf{t}}\\times_i { \\mathbf{t}}')$ ] .",
    "( note that this set can also be described as @xmath185 . ) by definition of the lowerstar operation , the result is a set over @xmath10 whose fibre over a fixed tree @xmath186 is the set of maps from the set of leaves of @xmath21 to the set of all trees with matching root .",
    "this data is equivalent to the grafting of all those leaf - indexed trees onto the leaves of @xmath21 .",
    "alternatively this data amounts to the inclusion of @xmath21 into the big tree resulting from the graftings .",
    "in other words , @xmath187 is the set of trees with a cut , and the map @xmath188 returns the tree found below the cut .",
    "the pullback along @xmath178 is the set @xmath189 of pairs consisting of a marked tree and graftings onto all leaves , which amounts to trees with a pointed cut ; the map @xmath190 just forgets the mark in the cut .",
    "the evaluation map @xmath191 is described like this : if we think of the elements of @xmath189 as given by a tree together with a marked leaf and a map from each leaf to @xmath10 ( with matching root ) , then the map @xmath192 simply applies that map to the marked leaf hence obtaining a single tree with correct root , and hence an element in @xmath182 .",
    "( we do nt really need the remaining left - hand part of the diagram , but here it is , for completeness : the upper left - hand corner is the set of trees with a pointed cut and a marked leaf in the subtree corresponding to the point .",
    "( since that marked leaf together with the cut automatically provides a point on the cut it is enough to say : tree with a cut and a marked leaf . ) the set just below it is the set of trees with a marked edge and a marked descendant leaf . )",
    "finally , we describe the structure maps of the free monad @xmath180 : the multiplication @xmath193 is the cartesian natural transformation    ff : & & i & &  & & & & i +  & & & & & & > m & & + f : & & i&& & & & & i .    where the maps in the middle simply forget the cut .",
    "the unit for the monad , @xmath194 is given essentially by the map @xmath195 assigning to each ` colour ' @xmath196 the trivial tree with edge of colour @xmath130 .",
    "we summarise the maps @xmath197 , @xmath46 , @xmath62 , @xmath198 , for later use :    & & & & & ^p&&=f ( ) + &    ( 0,0)(-20,16 ) ( 45,45)(-30,30)(-45,-45 ) ( -24,20)(0,0)[t]@xmath199 ( -45,-45)(-1,-4)0    & & + & & _ i &&&&>r + & & & & & & &    ( 0,0)(6,16 ) ( -12,87)(30,0)(-15,-95 ) ( 16,10)(0,0)[t]@xmath200 ( -14.5,-95)(-1,-4)0     + & & & &  & & + & & & & & & & + & & i&&&f&&&i + & & & & & & & + & & & & & &",
    "in this section the symbol @xmath10 stands for the set of isomorphism classes of @xmath0-trees , for any fixed finitary polynomial endofunctor @xmath0 ( and similarly for the decorated symbols , @xmath187 , etc . ) .",
    "the construction of the monoidal structure works also for abstract trees , but then the various sets and maps no longer come from the free - monad construction , and need to be defined in a more ad hoc manner .",
    "we discuss this in the next section .    theorem .    _ the polynomial functor @xmath201 defined by _    & & + & ^p , & & & & + & ^f+r&&&&&^m & + + & & &  m & & & &    is a monoidal structure on @xmath9 . its unit is the functor @xmath202 given by    & & 0 & & i & & + & & & & & ^e & + 0 & & & u & & &",
    ".    description of the maps",
    ". an interesting feature of this monoidal structure is that all the involved maps are recognised as those occurring in the polynomial description of the free - monad construction .",
    "we review the definitions of the sets and maps :    * @xmath10 is the set of iso - classes of @xmath0-trees . if @xmath180 denotes the free monad on @xmath0 , then @xmath203 .",
    "* the set @xmath187 is the set of iso - classes of @xmath0-trees with a cut .",
    "it appears as @xmath204 .",
    "more formally , the set of iso - classes of trees with a subtree containing the root . *",
    "the map @xmath205 is the multiplication of the monad , @xmath206 , i.e.  forget the cut . *",
    "the set @xmath189 is the set of iso - classes of @xmath0-trees with a pointed cut , and @xmath46 is the map that forgets the point .",
    "more formally , @xmath207[0ex]{\\(\\ast\\)}}}{\\overset { { \\begin{picture}(8,1)(0,0 )       \\put(0,0){\\line(1,0){8 } } \\end{picture } } } { { \\mathbf{t } } } } , \\ ] ] where @xmath208 is the set of iso - classes of @xmath0-trees with a marked leaf ( it appears as the total space of @xmath209 in the diagram representing @xmath180 ) , and @xmath210 is the projection . *",
    "the map @xmath211 returns the @xmath0-tree below the cut . *",
    "@xmath212 returns the ideal subtree generated by the edge marked by the pointed cut .",
    "this is the most complicated map to explain formally , but it occurs already in the diagram for @xmath181 , and is composed of the @xmath10-component of the counit of the @xmath213[0ex]{\\(\\ast\\)}}}{\\dashv}q{_{\\raisebox{-0.33ex}[-0.5ex][0ex]{\\(\\ast\\)}}}$ ] adjunction ( that s the evaluation map @xmath214[0ex]{\\(\\ast\\)}}}{\\overset { { \\begin{picture}(8,1)(0,0 )       \\put(0,0){\\line(1,0){8 } } \\end{picture } } } { { \\mathbf{t}}}}\\to { \\mathbf{t}}\\times_i { \\mathbf{t}}'$ ] ) followed by the projection to @xmath10 . *",
    "finally , @xmath195 assigns to each ` colour ' @xmath196 the trivial tree with edge of colour @xmath130 .",
    "note that here and throughout , the name of a set is also used to indicate its identity map .",
    "so for example @xmath215 denotes the map whose first component is @xmath46 and whose second component is the identity map on @xmath187 .",
    "note that the polynomial is a ` sum - wise tensor product ' of a non - linear functor ( in the first set of variables ) :    & & & ^p & & & & + & ^f&&&&&^m & + & & & & & & &    ( which concerns taking all cuts and retaining the forest of cut - off branches ) , and a linear functor ( in the second set of variables ) :    & & & ^= & & & & + & ^r&&&&&^m & + & & & & & & &    ( which is about taking all cuts and retaining the bottom tree , which of course is a single tree , hence the linearity ) .",
    "proof of associativity . in the following diagram , which commutes strictly , the left - hand vertical polynomial is @xmath216 , and the bottom is @xmath12 .",
    "similarly the top polynomial is @xmath217 and the right - hand vertical polynomial is @xmath12 . we show that both composites are naturally isomorphic to the polynomial indicated by the diagonal ( to be detailed in the proof ) . in both cases",
    "this amounts to performing the constructions as in [ comp ] .",
    "this natural isomorphism provides the associator , which is part of the monoidal structure .",
    "( the pentagon equation for the associator is not established explicitly .",
    "we invoke instead a general coherence principle : since the associator is constructed by canonical isomorphisms ( beck  chevalley and distributivity ) , it is coherent . )",
    "+ + & & ^&&(+)+&^&+&^&+ + & ( 4,4)^ & & & & & > + & & + + ( + ) & ^&&^&&^ & & & > + & & + + & _ & & _ & & _ & & ^ & +   + + & _ & + & & _ & & & _ & .",
    "we start with the lower left - hand composite .",
    "the first step is to take a pullback in the lower left - hand corner :    + & ^&+ +   + + & _ & + .",
    "here @xmath218 is the set of trees with two non - crossing cuts , or more formally , a sequence of two root - preserving inclusions @xmath219 .",
    "the upper cut is the one coming from the lower right - hand corner of the diagram , and the lower cut comes from the upper left - hand corner of the diagram .",
    "hence the map denoted @xmath220 forgets the lower cut .",
    "the right - hand map @xmath221 we shall now lowerstar along @xmath222 to complete the distributivity pentagon :    + & & & ^ & +   + + & & _ & & .",
    "the resulting right - hand map is just @xmath220 . indeed ,",
    "the lowerstar operation amounts to multiplying along the fibres .",
    "but since in the left - hand summand the map we lowerstar is just the identity of @xmath223 , no contribution comes from this summand , and in the right - hand summand we are lowerstarring along the identity map , hence the result is just @xmath220 , the map that forgets the lower cut .    we have now shown that the set @xmath218 appears at the crucial point of the diagonal polynomial when constructed from the lower left - hand side .",
    "we proceed to construct it also from the upper right - hand side of the big diagram .",
    "the argument is different because of the non - symmetry of the tensor product .",
    "the pullback square in the upper right - hand corner is , typographically transposed :    + & ^ & + +   + + & _ & + .",
    "here there are two new symbols : @xmath224 denotes the set of trees with a marked cut and a further cut in the tree above the mark .",
    "the map @xmath225 forgets the ` short ' cut .",
    "we shall now lowerstar the map @xmath226 along @xmath227 , to complete the distributivity pentagon    + & & & ^ & +   + + & & _ & & .",
    "the claim is that the right - hand map is just @xmath228 , the map that forgets the upper cut .",
    "we compute this fibre - wise over an element @xmath229 in @xmath230 .",
    "the @xmath231-fibre has one element for each leaf @xmath20 of @xmath21 . for each leaf @xmath20 ,",
    "the @xmath225-fibre consists of the possible cuts in the ideal subtree @xmath232 generated by @xmath20 .",
    "lowerstarring means multiplying these fibres , so it amounts to giving a cut in @xmath233 for each leaf @xmath20 of @xmath21 .",
    "altogether , this amounts to giving a total cut in @xmath13 above the original cut @xmath33 .",
    "this is once again the set @xmath218 , but the projection @xmath234 this time forgets the upper cut .",
    "( note that there is no contribution from the right - hand summand , as it has trivial fibres . )    finally , note that the square appearing where the two constructions meet ,    & ^ & +   + & _ &    commutes , since it amounts to forgetting first the upper cut and then the lower , or the other way around .",
    "the remaining part of the big diagram is only about taking pullbacks , and presents no difficulties .",
    "proof of the unit axiom .",
    "the unit is the functor @xmath202 represented by @xmath235 where the last map associates to an edge colour the corresponding trivial tree .    that this is the unit object means that when left - added to the identity functor on @xmath10 , @xmath236 and composing with @xmath12 yields the identity functor . and similarly of course with right - adding the identity functor .",
    "checking this amounts to filling the following big diagram :    & & ^&&&^&+i&^&+ + & ( 4,4 ) & & & & & > + & & + & ^&&^&&^ & & & > + & & + i+&_&&_&&_&&^ & +   + + & _ & + & & _ & & & _ & .    as with associativity , we content ourselves to checking that the two constructions meet at the distributivity squares .",
    "starting at the lower left - hand corner with a pullback :    i+&^f+r&v+ +   + + & _",
    "f+r&+    the set @xmath237 appearing is the set of trees with a marked cut such that the mark itself is a leaf ( in other words , the upper tree is a trivial tree ) . at random . ]",
    "the map @xmath238 is the inclusion of these special pointed cuts into the set of all pointed cuts .",
    "now lowerstar along @xmath239 , to complete the distributivity pentagon :    v+ & & & ^ & w&= +   + + & & _ p , & & .",
    "this amounts to requiring for each mark of the cut , that the tree above it is trivial ; in other words it is the set @xmath240 of cuts that only take leaves , i.e.  the set of trivial root - preserving inclusions , i.e.  the set @xmath10 itself .",
    "( the map @xmath241 is of course the inclusion of this particular kind of cuts into the set of all cuts . )",
    "the check is similar for the right - hand unit axiom , except that the set in the corner is the set of trees with the root cut , which again is naturally identified with @xmath10 itself .",
    "bialgebra of polynomial functors . by the duality of [ duality ]",
    ", the monoidal structure on @xmath9 induces a comonoidal structure on @xmath8 $ ] ,    & ^ & [ ] & ^ & [ ] _ [ ] :    the comultiplication is simply defined by precomposition with @xmath12 and the counit is defined by precomposition with @xmath242 . in detail , if @xmath243 $ ] is a polynomial functor in @xmath10-many variables , @xmath244 we compute @xmath245 as the composite    & & + & ^p , & & & & & & e & & b & & + & ^f+r&&&&&^m & & & & & & & + + & & & & & & & & & & & & & 1 .",
    "note that the comonoidal structure is automatically multiplicative , for formal reasons : multiplication in @xmath8 $ ] is dual to the diagonal functor @xmath246 , and every monoidal structure on @xmath9 is compatible with this diagonal .",
    "it is instructive to calculate @xmath247 on a multiplicative generator of @xmath8 $ ] : these are the single - variable polynomials @xmath248 where the map @xmath249 picks out the tree @xmath250 .",
    "the composition in this case just amounts to taking fibres , so the result is    & & ( ) _ t+()_t & ^ p_t,()_t & & ( ) _ t & & + & ^f+r & & & & & & + + & & & & & & & 1 .",
    "here @xmath251 is the set of cuts in the specific tree @xmath13 , and the fibre over that is the a two - component set where the left - hand component is the set of all pointed cuts on @xmath13 , and the right - hand component is again the set of cuts on @xmath13 . spelling out what the polynomial does as a functor",
    ", we see that it is exactly the functorial version of the formula from [ comultmy ] : we have to sum over the set @xmath251 ( that s the set of cuts ) , then multiply the fibres for each cut @xmath252 ; the fibre has an element for each edge in the cut ( and one extra ) : for each edge we must apply @xmath62 , which gives the branch factor of @xmath16 , and multiply all these , getting altogether what is denoted @xmath16 , and for the extra point of the fibre we must apply @xmath197 , which gives the tree @xmath17 below the cut , which is to be placed in the right - hand factor .",
    "the counit associates to each tree @xmath13 a polynomial in zero variables , i.e.  just a finite set .",
    "if the tree is represented as @xmath253 , we need to compose    & & 0 & & i & & & & 1 & & 1 & & + & & & & & & & & & & & & + 0 & & & & & & & & & & & & 1 .",
    "the result is    & & 0 & & & i _ 1 & & + & & & & & & & + 0 & & & & & & & 1 ,    i.e.  the set @xmath254 , which is the singleton set @xmath26 if @xmath13 belongs to @xmath67 and the empty set @xmath138 otherwise .",
    "again it is clear that this is the functorial analogue of the specification in section  [ sec : bialg ] .",
    "trees ( irrespective of any @xmath0 ) . we have worked with @xmath0-trees for two reasons :",
    "the first is to allow the connection with the free - monad construction .",
    "the second is the fact that @xmath0-trees ( in the set - based setting we are working in ) are rigid .",
    "this guarantees that taking sets of isomorphism classes is well - behaved .",
    "abstract trees , in the sense of [ polytree - def ] , are not @xmath0-trees for any polynomial endofunctor over @xmath82 .",
    "the ` terminal endofunctor ' in the category of polynomial endofunctors and their cartesian morphisms which should make the abstract trees @xmath0-trees does not exist . also ,",
    "trees clearly may have non - trivial automorphisms , so taking sets of isomorphism classes may be prone to errors , and care is needed .",
    "reinterpretation of the sets and maps in section  [ sec : monoidal ] . in spite of the above remarks , it is nevertheless possible to mimic all the constructions of the previous section ,",
    "if just the involved sets and set maps are defined a little bit differently .",
    "the starting point is the same : we now let @xmath10 denote the set of isomorphism classes of abstract trees .",
    "hence the basis for the bialgebra is the same as used already in section  [ sec : bialg ] .",
    "but while for @xmath0-trees , the set @xmath187 can be described as isomorphism classes of root - preserving inclusions , this description does not work for abstract trees .",
    "indeed , it is crucial that the fibres of the projection @xmath255 have the correct cardinality : for example , the abstract tree      certainly has five different cuts , but two of them are isomorphic as abstract cuts .",
    "so instead of defining @xmath187 as the set of isomorphism classes of cuts , it is necessary first to choose a representative for each iso - class in @xmath10 , and then for each such representative @xmath13 define @xmath256 to be the set of cuts of that specific tree @xmath13 , and finally let @xmath187 be the disjoint union of all those fibres .",
    "similar care is needed to define @xmath208 and @xmath189 , and the other symbols involved .",
    "the fact that all the symbols are defined fibrewise over @xmath10 , instead of being defined abstractly in terms of isomorphism classes , guarantees that all the pullback and lowerstar operations ( which are fibrewise operations ) yield the expected results , and one can check that the proof of associativity and the unit axiom work equally well for abstract trees , with these provisos .",
    "groupoids instead of sets .",
    "clearly the remedies just explained are rather ad hoc . a better and more conceptual way to account for abstract trees and @xmath0-trees on equal footing consists in upgrading the theory from sets to groupoids .",
    "this can be seen as one further step of categorification .",
    "first of all it is necessary ( and possible ) to upgrade the theory of polynomial functors from sets to groupoids : this means that the representing diagrams for polynomial functors @xmath257 should then be ( suitably homotopically finite ) groupoids , and the functors themselves go between slices of the category of groupoids ( slices being taken in the homotopical sense ) . with",
    "the appropriate adjustments , everything works as for sets : pullbacks and fibres have to be homotopy pullbacks and homotopy fibres , if the maps are not groupoid fibrations ; sums are replaced by slightly fancier colimits , and everything is up to equivalence of groupoids instead of isomorphism of sets .",
    "this theory correctly incorporates all questions of symmetries of objects @xcite .    in this setting , abstract trees are @xmath91-trees for the ` exponential functor ' @xmath258,\\ ] ] represented by the groupoid diagram @xmath259 where @xmath260 is the groupoid of finite sets and bijections , and @xmath261 the groupoid of finite pointed sets and basepoint - preserving bijections , and where the quotient is the weak groupoid quotient ( sewing in paths instead of collapsing ) .",
    "dolan  @xcite for further discussion of such constructions , and the exponential functor in particular .    in the groupoid setting , one works with the groupoid of trees , instead of with its set of isomorphism classes .",
    "the practical benefit , in the presence of automorphisms of objects , is the same as working with moduli stacks rather than coarse moduli spaces in algebraic geometry .",
    "the choice in this paper to work with sets is first of all that this theory is already available .",
    "second , it is preferable to expose the essential ideas and constructions in the transparent rigid set - up , so as not to burden the arguments with homotopy theory .",
    "however , to ease the eventual upgrade to groupoids , the exposition is careful to perform the arguments in a clean , functorial language , favouring natural isomorphisms over element - based constructions .",
    "in fact , the theory of polynomial functors is currently being worked out for infinity - groupoids , in joint work with david gepner .",
    "one important insight is that @xmath262-groupoids play just the same role for @xmath262-categories as sets play for categories .",
    "seeing how the theory goes for sets is therefore an important first step for the more general case of groupoids and @xmath262-groupoids .                                              .",
    ". in _ homotopy methods in algebraic topology ( boulder , co , 1999 )",
    "271 of contemp .",
    "math . , pp .",
    "soc . , providence , ri , 2001 .",
    "http://arxiv.org/pdf/math-ph/9907010[arxiv:math-ph/9907010 ] ."
  ],
  "abstract_text": [
    "<S> we exhibit a monoidal structure on the category of finite sets indexed by @xmath0-trees for a finitary polynomial endofunctor @xmath0 . </S>",
    "<S> this structure categorifies the monoid scheme ( over @xmath1 ) whose semiring of functions is ( a @xmath0-version of ) the connes  kreimer bialgebra @xmath2 of rooted trees ( a hopf algebra after base change to @xmath3 and collapsing @xmath4 ) . </S>",
    "<S> the monoidal structure is itself given by a polynomial functor , represented by three easily described set maps ; we show that these maps are the same as those occurring in the polynomial representation of the free monad on @xmath0 .    </S>",
    "<S> joachim kock    * keywords : * rooted trees , hopf algebras , categorification , monoidal categories , polynomial functors , finite sets .    </S>",
    "<S> * mathematical subject classification : * 05c05 ; 16t05 ; 18a99 . </S>"
  ]
}
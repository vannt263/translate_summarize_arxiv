{
  "article_text": [
    "a positional numeration system is given by a base and by a set of digits .",
    "the base @xmath0 is a real or complex number such that @xmath1 , and the digit set @xmath4 is a finite alphabet of real or complex digits .",
    "the most studied numeration systems are of course the usual ones , where the base is a positive integer .",
    "but there have been also numerous studies where the base is an irrational real number ( the so - called _ @xmath0-expansions _ ) , a complex number , or a non - integer rational number , _ etc_. some surveys can be found in ( * ? ? ?",
    "* chapter 7 ) and ( * ? ? ? * chapter 2 ) .    in this work ,",
    "the base @xmath0 is an algebraic number , that is to say , the root of a polynomial with integer coefficients , and the digits of @xmath4 are consecutive integers .",
    "we consider only finite @xmath0-representations , see section  [ prem ] for definitions .",
    "let us denote @xmath5 in general , the set @xmath6 is not closed under addition . in this paper , we will prove that when @xmath0 is a root of a polynomial with a dominant coefficient , the alphabet @xmath4 can be chosen in such a way that @xmath6 is a ring , and , moreover , addition can be performed by a parallel algorithm with time complexity @xmath7 .",
    "addition of two numbers in the classical @xmath8-ary numeration system , where @xmath8 is an integer @xmath9 , has linear time complexity . in order to save time ,",
    "several solutions have been proposed .",
    "a popular one is the avizienis signed - digit representation  @xcite , which consists of changing the digit set . instead of taking digits from the canonical alphabet @xmath10",
    ", they are taken from a symmetric alphabet of the form @xmath11 , @xmath12 being an integer such that @xmath13 ( @xmath8 has to be @xmath14 ) .",
    "such a numeration system is _ redundant _ , that is to say , some numbers may have several representations .",
    "this property allows one to perform addition in constant time in parallel , because there is a limited carry propagation . a similar algorithm for base 2",
    "has been devised by chow and robertson  @xcite , using alphabet @xmath15 .",
    "here addition is realized in parallel with a window of size 3 .",
    "notice that cauchy  @xcite already considered the redundant representation in base 10 and alphabet @xmath16 .    in symbolic dynamics ,",
    "such functions computable in parallel are called _ local _ , more precisely @xmath17-local , which means that to determine the image of a word by a @xmath17-local function , it is enough to consider a sliding window of length @xmath17 of the input .",
    "it is a general result that a @xmath17-local function is computable by an on - line finite automaton with delay @xmath18 , see  @xcite for instance .    amongst the non - standard bases , special attention has been paid to the complex ones , which allow to represent any complex number by a single sequence ( finite or infinite ) of natural digits , without separating the real and the imaginary part . for instance , it is known that every complex number can be expressed with base @xmath19 and digit set @xmath20 , @xcite .",
    "parallel algorithms for addition in bases @xmath21 , @xmath22 , @xmath23 and @xmath19 have been given in @xcite .",
    "results on addition in bases @xmath24 , @xmath25 and @xmath19 in connection with automata theory have been presented in @xcite . in particular ,",
    "if @xmath8 is an integer , @xmath26 , and @xmath27 with @xmath28 , addition in base @xmath29{b}$ ] is computable in parallel and is a @xmath30-local function .",
    "if @xmath31 is even , set @xmath32 ; then addition in base @xmath29{b}$ ] on @xmath33 is a @xmath34-local function .",
    "the paper is organized as follows : first we suppose that the base @xmath0 is a root of a polynomial with integer coefficients such that one of them is greater than twice the sum of the moduli of the other ones .",
    "we then say that @xmath0 satisfies the _ strong representation of zero property _ ( or , for short , that _",
    "@xmath0 is srz _ ) .",
    "we give a parallel algorithm , algorithm  i , for addition in that case , theorem  [ ai ] .",
    "when @xmath0 is an integer @xmath14 , it is the same algorithm as the one of avizienis .",
    "section  [ reduc ] is devoted to reduction of the working alphabet .",
    "we now suppose that @xmath0 is a root of a polynomial such that one coefficient is greater than the sum of the moduli of the other ones .",
    "we then say that @xmath0 satisfies the _ weak representation of zero property _ ( or , for short , that _",
    "@xmath0 is wrz _ ) .",
    "we give a parallel algorithm , algorithm  ii , where the alphabet is reduced compared to algorithm  i , but there is a fixed number of iterations depending ( only ) on the weak polynomial satisfied by @xmath0 , to be compared with algorithm  i which always has just one iteration .",
    "we then show that in fact all algebraic numbers with no conjugate of modulus  @xmath2 are srz ( or wrz ) , and we give a constructive method to obtain the suitable polynomial ( strong or weak representation of zero ) from the minimal polynomial of @xmath0 , proposition [ dominant ] .    in the end , we concentrate on the case where @xmath0 is the golden mean .",
    "algorithm  ii works with alphabet @xmath35 , which is big compared to the minimally redundant alphabet . using ideas similar to the chow and robertson algorithm",
    ", we obtain a parallel algorithm on @xmath3 , algorithm  iii .",
    "this algorithm can be applied to the fibonacci numeration system as well .",
    "a finite _ word _ on the alphabet @xmath4 is a concatenation of a finite number of letters of @xmath4 .",
    "the set of words on @xmath4 is the free monoid @xmath36 .",
    "the set of bi - infinite words on @xmath4 is denoted @xmath37 .",
    "a finite @xmath0-_representation _ of @xmath38 with digits in @xmath4 is a finite sequence @xmath39 , with @xmath40 in @xmath4 , such that @xmath41 .",
    "it is denoted by the word @xmath42 with the most significant digit at the left hand - side , as in the decimal numeration system .",
    "the notion of a function computable in parallel comes from computer arithmetic ( see @xcite ) , where it is defined on finite words , but we give here a definition on bi - infinite words .",
    "a function @xmath43 is said to be _ computable in parallel _ if there exist two non - negative integers @xmath44 and @xmath45 , a positive integer @xmath46 , and a function @xmath47 from @xmath48 to @xmath49 , with @xmath50 , such that if @xmath51 and @xmath52 , then @xmath53 if , and only if , for every @xmath54 in @xmath55 , @xmath56 are decreasing from left to right . ] .",
    "this means that the image of @xmath57 by @xmath58 is obtained through a sliding window of length @xmath17 .",
    "such functions are computable in constant time in parallel .",
    "the notion of a _ local function _ comes from symbolic dynamics ( see @xcite ) and is often called a _ sliding block code_. it is a function computable in parallel with @xmath59 .",
    "the parameter @xmath44 is called the _ memory _ and the parameter @xmath45 is called the _ anticipation _ of the function @xmath58 . the function @xmath58 is then said to be _",
    "@xmath17-local_.    to be self - contained , we recall the classical algorithms for parallel addition of avizienis  @xcite , and of chow and robertson  @xcite . in",
    "what follows ,  for each @xmath54 in parallel \" means that  each numbered step is executed in parallel , and the results of the parallel computations are shared between the steps \" .",
    "1.5 cm    ' '' ''    0.2 cm    * algorithm of avizienis * : base @xmath60 , @xmath61 integer , parallel addition on alphabet @xmath62 , @xmath13 .    0.2 cm    ' '' ''    0.2 cm    _ input _ : two words @xmath63 and @xmath64 of @xmath36 , with @xmath65 , @xmath66 and @xmath67 .",
    "+ _ output _ : a word @xmath68 of @xmath36 such that @xmath69    ` for each i in parallel do ` + 0 .",
    "@xmath70 + 1 . `",
    "if ` @xmath71 ` then ` @xmath72 , @xmath73 + ` if ` @xmath74 ` then ` @xmath75 , @xmath76 + ` if ` @xmath77 ` then ` @xmath78 , @xmath79 + 2 .",
    "@xmath80    0.2 cm    ' '' ''    0.2 cm addition realized by the avizienis algorithm is a @xmath81-local function , with memory @xmath2 and anticipation @xmath82 .",
    "notice that the minimally redundant symmetric alphabet is obtained with the value @xmath83 .    the chow and robertson algorithm works for base @xmath81 and alphabet @xmath3 .",
    "we give here a generalization to an even base @xmath84 , @xmath62 .",
    "0.2 cm    ' '' ''    0.2 cm    * algorithm of chow and robertson * : base @xmath85 , @xmath86 integer , parallel addition on alphabet @xmath62 .    0.2 cm    ' '' ''    0.2 cm    _ input _ : two words @xmath63 and @xmath64 of @xmath36 , with @xmath65 , @xmath66 and @xmath67 .",
    "+ _ output _ : a word @xmath68 of @xmath36 such that @xmath69    ` for each i in parallel do ` + 0 .",
    "@xmath70 + 1 . ` if ` @xmath87 ` then ` @xmath72 , @xmath73 + ` if ` @xmath88 ` then ` @xmath75 , @xmath76 + ` if ` @xmath77 ` then ` @xmath78 , @xmath79 + ` if ` @xmath89 ` and ` @xmath90 ` then ` @xmath72 , @xmath91 + ` if ` @xmath89 ` and ` @xmath92 ` then ` @xmath78 , @xmath93 + ` if ` @xmath94 ` and ` @xmath95 ` then ` @xmath75 , @xmath93 + ` if ` @xmath94 ` and ` @xmath96 ` then ` @xmath78 , @xmath91 + 2 .",
    "@xmath97    0.2 cm    ' '' ''    0.2 cm addition realized by the chow and robertson algorithm is a @xmath98-local function , with memory @xmath81 and anticipation @xmath82 .",
    "the main difference between the two algorithms is that the avizienis algorithm is _ neighbour - free _ , while the chow and robertson algorithm is _ neighbour - sensitive _ , since the decision taken at position @xmath54 in step 1 depends also on the digit at position @xmath99 .",
    "now we move to bases @xmath0 that are algebraic numbers .",
    "let us formalize the assumption we want @xmath0 to satisfy .",
    "[ defsrz ] let @xmath0 be such that @xmath1 .",
    "we say that @xmath0 satisfies the _ strong representation of zero property _ ( or , for short , that _",
    "@xmath0 is srz _ ) if there exist integers @xmath100 , for some non - negative integers @xmath101 and @xmath46 , such that @xmath0 is a root of the polynomial @xmath102 and @xmath103 the polynomial @xmath104 is a said to be a _ strong polynomial _ for @xmath0 .",
    "if @xmath0 satisfies ( [ treba1 ] ) , then the word @xmath105 is a @xmath0-representation of zero . from this",
    "we can derive a set of rewriting rules , generated by the rule @xmath106 .    to simplify the notation , we set @xmath107 and @xmath108 the inequality from definition [ defsrz ]",
    "now reads @xmath109 suppose that @xmath0 is srz .",
    "we choose the symmetric alphabet @xmath110 for this fixed alphabet @xmath4 , we describe a parallel algorithm for addition in base @xmath0 .",
    "let us denote @xmath111 then @xmath112 . the alphabet @xmath113 will be referred to as the _ inner _ alphabet .    ' '' ''",
    "0.2 cm    * algorithm  i * : parallel addition for base @xmath0 with the strong representation of zero property ( @xmath0 is srz ) .    0.2 cm    ' '' ''    0.2 cm    _ input _ : two words @xmath63 and @xmath64 of @xmath36 , with @xmath65 , @xmath66 and @xmath67 .",
    "+ _ output _ : a word @xmath114 of @xmath36 such that @xmath115    ` for each i in parallel do ` + 0 .",
    "@xmath70 + 1 .",
    "find @xmath116 such that @xmath117 + 2 .",
    "@xmath118    0.2 cm    ' '' ''    0.5 cm    before proving the correctness of the algorithm , let us stress that the numbers @xmath119 , @xmath12 , and @xmath120 have been defined in such a way that they satisfy @xmath121 the first two inequalities are clear . to verify the last one",
    ", we will use the fact that , for any positive real numbers @xmath122 , one has @xmath123 .",
    "putting @xmath124 and @xmath125 , we obtain @xmath126 this inequality , together with our choice @xmath127 , already proves the third inequality of .",
    "[ ai ] suppose that @xmath0 is srz .",
    "then algorithm  i realizes addition in constant time in parallel in @xmath6 with @xmath128 , where @xmath129 .    the proof is structured in two parts :    * the digits of the output belong to @xmath4 : + after line 0 of algorithm  i , @xmath130 belongs to @xmath131 .",
    "+ since the inner alphabet @xmath132 is formed by @xmath133 consecutive integers and @xmath134 , there exists @xmath135 such that @xmath117 . since @xmath136 and @xmath137",
    ", the integer @xmath135 can be found in range @xmath138 .",
    "+ finally , in line 2 , the new digit @xmath130 ( denoted for the moment by @xmath139 ) is @xmath140 as @xmath141 and @xmath142 , the resulting @xmath139 satisfies @xmath143 . *",
    "the output represents the number @xmath144 : + in order to avoid a tedious description of ranges of summation indices , we will consider all coefficients which do not play any role in our consideration to be equal to zero . with this convention , @xmath145 for all @xmath146 , and",
    "therefore we may express the rewriting rule as @xmath147 .",
    "similarly , @xmath40 and @xmath148 are set to @xmath82 for all @xmath149 , and thus @xmath150 . also the auxiliary coefficients @xmath135 are set to @xmath82 for all @xmath151 .",
    "+ after line 2 of algorithm  i , we obtain @xmath152 since for the last sum we have @xmath153 the output is correct .",
    "the correctness of the algorithm stems from the inequalities , which are satisfied by many triplets @xmath12 , @xmath120 , @xmath119 .",
    "our specific choice of @xmath12 , @xmath120 , and @xmath119 displayed in and gives the smallest possible value @xmath12 , and thus the smallest cardinality of the alphabet @xmath4 in our algorithm .",
    "of course , this does not exclude existence of other parallel algorithms with smaller alphabets .",
    "let us demonstrate the optimality of our choice of @xmath12 , @xmath120 , and @xmath119 .",
    "according to ( ii ) of , in order to minimize @xmath12 , we have to minimize integers @xmath120 and @xmath119 .",
    "the choice of @xmath120 in is minimal with respect to the requirement @xmath154 . by ( ii ) and",
    "( iii ) of , we obtain @xmath155 combining the last inequality with ( i ) of , and insisting on positivity of @xmath119 , we have @xmath156 which already shows that our choice of @xmath119 in was minimal as well .",
    "let us point out that we also used the inequality @xmath157 .    if @xmath0 is srz , then addition realized by algorithm  i is a @xmath158-local function with memory @xmath46 and anticipation @xmath101 .",
    "algorithm  i is neighbour - free .    consider the base @xmath159 .",
    "it is srz for the polynomial @xmath160 , where @xmath161 and @xmath162 . in this case",
    "@xmath163 therefore , our algorithm provides parallel addition in the decimal numeration system on alphabet @xmath164 , and in fact it is precisely the algorithm that avizienis gave in 1961 , see @xcite .    more generally , for any integer @xmath165 , the base @xmath166 is srz for the polynomial @xmath167 , and therefore we can apply the same algorithm for addition , namely on the alphabet @xmath168 with @xmath169 .",
    "[ binar ] consider the base @xmath170 .",
    "for such a base , @xmath171 is not a strong polynomial .",
    "nevertheless , this base satisfies also the polynomial @xmath172 , which already is strong , with @xmath173 and @xmath162 .",
    "now we have @xmath174 so algorithm  i works for base @xmath81 with the alphabet @xmath175 , and is @xmath98-local .",
    "remind that the chow and robertson algorithm is @xmath98-local as well , but it works with smaller alphabet @xmath176 .    [ fibonacci ] let us consider the base @xmath177 , the golden mean .",
    "this base @xmath0 is one root of the quadratic equation @xmath178 , the second root is @xmath179 .",
    "since @xmath180 , @xmath0 is a root of the strong polynomial @xmath181 with @xmath182 and @xmath183 .",
    "this implies @xmath184 , @xmath185 , and @xmath186 .",
    "the alphabet we work with is @xmath187 .",
    "the inner alphabet is @xmath188 .    in the following , we denote the signed - digit @xmath24 by @xmath189 ( this notation is already present in the work of cauchy  @xcite ) .",
    "below is shown the performance of algorithm i for addition of two numbers from @xmath6 , namely @xmath190 we have @xmath191 and @xmath192 .",
    "@xmath193 all positions @xmath54 of @xmath194 for which @xmath130 does not belong to the inner alphabet @xmath195 must be modified by adding or subtracting the rewriting rule @xmath196 , with the digit @xmath197 on position @xmath54 , as follows :    @xmath198 hence @xmath199 .",
    "[ gaussian ] consider the complex base @xmath200 .",
    "since @xmath201 , we can use the strong polynomial @xmath202 with @xmath203 and @xmath162 , _ i.e. _ , we can perform parallel addition on the alphabet @xmath204 , and this addition is a @xmath205-local function .",
    "this result appeared in @xcite .",
    "there is also a parallel algorithm on alphabet @xmath206 (  la chow and robertson ) , which gives a @xmath207-local function , @xcite . on the minimally redundant alphabet @xmath3 , there is a parallel addition algorithm provided by nielsen and muller  @xcite .",
    "[ rat ] take for base @xmath0 the rational @xmath208 .",
    "this is an algebraic number , which is not an algebraic integer .",
    "it is known that any non - negative integer has a finite expansion in this base on the alphabet @xmath209 , see  @xcite . there is a strong polynomial @xmath210 with @xmath182 and @xmath183 .",
    "thus @xmath185 , @xmath184 , and @xmath186 .",
    "it is not difficult to see that any integer has a finite representation on the redundant alphabet @xmath211 , and , by algorithm  i , addition is realizable in parallel .",
    "it is very difficult to prove that an alphabet used by some algorithm for parallel addition is minimal . it is a lot easier to prove that the alphabet is not minimal ; which is the case for the alphabet we worked with in algorithm i. let us start this section with an example .",
    "[ golden ] take for @xmath0 the golden mean .",
    "this base satisfies the equation @xmath212 we say that rewriting rule @xmath213 is _",
    "positively applied _ at position @xmath54 if the number 3 is added to the actual digit occurring at position @xmath54 and the number @xmath2 is subtracted from the actual digits at positions @xmath214 and @xmath215 .",
    "analogously , we define the _ negatively applied _ at position @xmath54 .",
    "we shall present a parallel algorithm for addition on the alphabet @xmath216    let us explain the algorithm less formally .    ' '' ''    0.2 cm    _ input _ : two finite sequences of digits @xmath217 and @xmath218 of @xmath219 , with @xmath220 and @xmath221 .",
    "+ _ output _ : a finite sequence of digits @xmath222 of @xmath219 such that @xmath223    ` for each i in parallel do ` + @xmath224 + 0.2 cm    ' '' ''    0.5 cm    during the course of the algorithm , we change only the actual values of the coefficients @xmath130 , but we do not change the sum @xmath225 . therefore , for correctness of the algorithm , we just have to realize that    * after step 0 , each @xmath130 belongs to @xmath226 , * after step 1 , each @xmath130 belongs to @xmath227 , * after step 2 , each @xmath130 belongs to @xmath228 , and , finally , * after step 3 , each @xmath130 belongs already to the original alphabet @xmath229 .",
    "let us illustrate the algorithm on the following example : @xmath230    when @xmath0 is the golden mean , we have seen how using a weaker representation of zero @xmath231 enables to exploit the reduced alphabet @xmath232 instead of the alphabet @xmath233 , which was necessary for applying the strong representation of zero @xmath234 .",
    "the idea of this reduction can be generalized to other bases @xmath0 as well .",
    "let @xmath0 be such that @xmath1 .",
    "we say that @xmath0 satisfies the _ weak representation of zero property _",
    "( or , for short , that _",
    "@xmath0 is wrz _ ) if there exist integers @xmath100 , for some non - negative integers @xmath101 and @xmath46 , such that @xmath0 is a root of the polynomial @xmath235 and @xmath236 the polynomial @xmath237 is said to be a _",
    "weak polynomial _ for @xmath0 .",
    "when @xmath0 is wrz , we can describe a parallel algorithm for addition .",
    "let us put as above @xmath238 , and let @xmath239 similarly to algorithm  i , the inner alphabet is @xmath240 with @xmath241 .",
    "the algorithm works in @xmath242 the steps will be indexed by @xmath243 .",
    "after the @xmath244-step , the digits @xmath130 will belong to the alphabet @xmath245 and to the alphabet @xmath246 for @xmath247 .",
    ".    0.3 cm    ' '' ''    0.2 cm    * algorithm  ii * : parallel addition for base @xmath0 with the weak representation of zero property ( @xmath0 is wrz ) .",
    "0.2 cm    ' '' ''    0.2 cm    _ input _ : two words @xmath63 and @xmath64 of @xmath36 , with @xmath65 , @xmath66 and @xmath67 .",
    "+ _ output _ : a word @xmath249 of @xmath36 such that @xmath250    ` for each i in parallel do ` + 0 .",
    "@xmath70 + 1 . ` for ` @xmath251 ` to ` @xmath252 ` do ` + 2 . ` if ` @xmath253 ` then ` @xmath254 ` else ` @xmath255 + 3 .",
    "@xmath256    0.2 cm    ' '' ''    0.5 cm    [ aii ] suppose that @xmath0 is wrz .",
    "then algorithm  ii realizes addition in constant time in parallel in @xmath6 with alphabet @xmath257 , where @xmath258 .    during the course of the algorithm , we do not change the value @xmath225 ( thanks to the fact that we are only applying the weak representation of zero , either positively , or negatively ) . for correctness of the algorithm , we just have to check the magnitude of digits at the time when the algorithm stops .",
    "+ after the @xmath259-step , any digit @xmath130 belongs to the alphabet @xmath260",
    ". we will prove    for @xmath261  : : :    if after the @xmath262-step the digit    @xmath130 belongs to @xmath263 ,    then after the @xmath244-step the new digit    @xmath130 ( we shall denote it for the moment by    @xmath139 ) belongs to    @xmath264 .",
    "for @xmath265  : : :    if after the @xmath266-step the digit @xmath130    belongs to @xmath267 , then after the    @xmath268-step the new digit @xmath139    belongs to @xmath4 .",
    "this already will confirm the correctness of algorithm  ii .",
    "+ let us discuss the value of digits @xmath130 after the @xmath244-step according to the value @xmath135 computed in this step . during the discussion we shall use the inequalities",
    "@xmath269 which follow from the choice of @xmath252 by .",
    "let @xmath130 be in @xmath270 .",
    "there are three possible cases :    * @xmath271 : in this case , @xmath272 and @xmath273",
    ". therefore , @xmath274 _ i.e. _ , @xmath275 for @xmath276 and @xmath277 for @xmath265 .",
    "* @xmath278 : in this case , @xmath279 and @xmath280 therefore , for the upper bound we have @xmath281 on the other hand , we obtain for the lower bound @xmath282 _ i.e. _ , @xmath275 for @xmath276 and @xmath277 for @xmath265 . *",
    "@xmath283 : analogous to the previous case .    in the previous discussion",
    "we have also used the inequality @xmath284 which is a consequence of the definition of @xmath12 , see .    if @xmath0 is wrz , then addition realized by algorithm  ii is a @xmath285-local function with memory @xmath286 and anticipation @xmath287 .",
    "algorithm  ii is neighbour - free .",
    "if @xmath0 is a root of a strong polynomial , we may use both algorithms  i and ii with this strong representation of zero .",
    "they work with the alphabet @xmath288 , whereby in the first algorithm @xmath289 , while in the second one @xmath290 .",
    "thus the alphabet of algorithm  ii is never bigger than the alphabet of algorithm  i using the same srz .",
    "it is easy to see that both the alphabets coincide ( @xmath291 ) if , and only if , @xmath292 .",
    "if @xmath293 and @xmath294 satisfy this inequality , then the parameter @xmath252 from algorithm  ii is equal to 1 , and the algorithms are the same .    if @xmath295 , then algorithm  ii uses a strictly smaller alphabet .",
    "the price we have to pay is the number of steps . unlike algorithm",
    "i , the number of steps in algorithm  ii depends on values @xmath294 and @xmath293 in the weak polynomial .",
    "another disadvantage of algorithm  ii is the increasing number of positions needed to store the result . comparing the length of outputs in both algorithms ,",
    "if @xmath296 is the degree of the strong or weak polynomial , algorithm  i can enlarge the number of used positions by @xmath297 , while algorithm  ii enlarges the number of used positions by @xmath298 .",
    "a given base @xmath0 can satisfy more than one strong polynomial , and , consequently , we have several versions of algorithm  i. similarly , one base @xmath0 can satisfy several different weak polynomials , and thus several versions of algorithm  ii .    let us consider an integer base @xmath166 in @xmath299 .    * if @xmath165 , then @xmath300 is a strong polynomial for @xmath8 , with @xmath301 and @xmath162 , thus @xmath292 . according to the previous remark , the two algorithms ( i and ii ) coincide and require the same alphabet @xmath302 with @xmath303 . in this sense , both algorithms are generalizations of the avizienis algorithm to non - integer bases . * for @xmath304 , the equation @xmath305 is a weak polynomial and we may use it in algorithm  ii , which works now with the alphabet @xmath306 .",
    "this alphabet is bigger than the alphabet in the parallel algorithm given by chow and robertson , but , on the other hand , it is smaller than the alphabet in the algorithm that we have described in example  [ binar ] .    in both our algorithms ( i and ii ) , the decision about application of the rewriting rule at position @xmath54 depends only on the actual value of the digit at this position .",
    "this is the crucial difference from the algorithm described by chow and robertson for base @xmath81 , where the decision depends also on the digit at the right neighboring position @xmath99 .",
    "a natural question is whether this kind of strategy may be applied to other bases as well . in the last section",
    ", we can answer this question positively , at least for the golden mean .",
    "algorithms i and ii are applicable only to bases @xmath0 being a root of a strong or a weak polynomial , that is to say , a polynomial with integer coefficients , where one of these coefficients is dominant , _",
    "i.e. _ , is greater than twice or once the sum of the moduli of the other coefficients .",
    "we shall show that for most of the algebraic numbers @xmath0 with @xmath1 such a strong or weak polynomial exists .",
    "[ dominant ] let @xmath307 be an algebraic number of degree @xmath297 with algebraic conjugates @xmath308 ( including @xmath307 itself ) .",
    "let us assume that @xmath309 for all @xmath310 and @xmath311 .",
    "then , for any @xmath312 there exist a polynomial @xmath313\\ ] ] and an index @xmath314 such that @xmath315    let @xmath316 be the minimal polynomial of @xmath307 , _",
    "i.e. _ , @xmath317\\,.\\ ] ] let @xmath294 be the companion matrix of the polynomial @xmath316 : @xmath318 it is a well - known fact , which can be easily verified , that the characteristic polynomial of @xmath294 satisfies @xmath319 where @xmath320 is the unit matrix of corresponding size @xmath321 .",
    "in particular , the numbers @xmath322 are eigenvalues of @xmath294 . for any @xmath323 in @xmath299 , @xmath324 , define @xmath325 since the matrix @xmath326 has eigenvalues @xmath327 , we have @xmath328 as @xmath294 is a rational matrix , its power @xmath326 is rational as well , and thus @xmath329 is a polynomial with rational coefficients .",
    "it implies that , for all @xmath323 in @xmath299 , the polynomial @xmath330 has rational coefficients .",
    "clearly , for all @xmath323 in @xmath299 and @xmath331 in @xmath332 , we have @xmath333 where @xmath334 is the set of all subsets of @xmath335 with cardinality @xmath331 .",
    "+ without loss of generality , let us assume @xmath336 , and denote @xmath337 .",
    "our choice of @xmath338 guarantees that @xmath339 for any subset @xmath340 and @xmath341 .",
    "therefore , for all such choices of @xmath342 , we have @xmath343 since the coefficients @xmath344 of the polynomial @xmath345 satisfy , we can deduce @xmath346 we may already claim that there exists @xmath347 in @xmath299 such that @xmath348 the existence of a suitable @xmath349 is obvious , as the right hand side tends to 0 and the left hand side has the limit @xmath2 .",
    "let us fix one such @xmath349 , and denote by @xmath350 the least common multiple of the denominators of ratios @xmath351 .",
    "then the polynomial @xmath352 and the index @xmath353 have the desired properties .",
    "[ def_t - pol ] let @xmath312 , and let @xmath354 be a polynomial with integer coefficients @xmath355 in @xmath356 .",
    "@xmath357 is called a _ @xmath45-polynomial _ if there exists @xmath358 such that @xmath359    the polynomial @xmath360 constructed in the proof of proposition [ dominant ] clearly is a  @xmath45-polynomial , and , for @xmath361 we obtain a weak polynomial , while for @xmath362 we get a strong polynomial .",
    "lemma 8 in @xcite gives a little bit weaker statement in the case of an expanding algebraic integer @xmath307 , _",
    "i.e. _ , @xmath363 for all conjugates of @xmath307 . our proof of the previous proposition [ dominant ] was strongly inspired by the proof given by s.  akiyama , p.  drungilas , and j.  jankauskas in @xcite .",
    "the proof of proposition [ dominant ] is constructive .",
    "the strong representations of zero we have used in examples [ binar ] , [ fibonacci ] , and [ gaussian ] can be obtained by the construction given in the proof with @xmath362 , namely as follows :    * for @xmath170 , the minimal polynomial is @xmath364 , then @xmath365 , and the desired @xmath366 . * for the golden mean , the minimal polynomial is @xmath367 with @xmath177 and @xmath368 .",
    "the minimal @xmath323 satisfying is @xmath369 .",
    "therefore , @xmath370 , and the final @xmath371 . * for the base @xmath200 , the minimal polynomial is @xmath372 .",
    "already for @xmath373 we have @xmath374 , and our strong representation of zero uses the polynomial @xmath375 .",
    "[ mod1 ] let @xmath0 be an algebraic number with a conjugate @xmath376 such that @xmath377 .",
    "then @xmath0 can not satisfy a @xmath45-polynomial for any @xmath378 .",
    "suppose that @xmath0 is a root of a polynomial @xmath379 with integer coefficients @xmath380 .",
    "then also the conjugate @xmath376 is a root of @xmath381 : @xmath382 since @xmath377 , we obtain @xmath383 and proposition  [ mod1 ] we obtain the following result :    [ srr ] let @xmath0 with @xmath384 be an algebraic number",
    ". then @xmath0 is srz ( or wrz ) if and only if it has no conjugate of modulus @xmath2 .",
    "it is fairly easy to recognize whether an algebraic number does , or does not have a conjugate of modulus 1 , by looking at its minimal polynomial .",
    "first , if the number is quadratic , it can not have any conjugate of modulus @xmath2 . suppose now that @xmath307 is an algebraic number of degree @xmath385 , with a conjugate @xmath386 with modulus @xmath387",
    "let @xmath388 be its minimal polynomial , @xmath316 in @xmath389 $ ] . since @xmath316 is minimal , @xmath390 ; _ i.e. _ , @xmath386 is not real . as the minimal polynomial has all its coefficients real , the complex conjugate @xmath391 is a root of @xmath392 as well . in general ,",
    "if the minimal polynomial has two different roots @xmath393 and @xmath394 , then the minimal polynomial satisfies @xmath395 thus it is reciprocal and its degree is even .",
    "this is summarized in the following remark .",
    "let @xmath0 with @xmath384 be an algebraic number of degree @xmath297 .",
    "* if @xmath297 is odd , or * if @xmath396 , or * if @xmath397 is even and the minimal polynomial of @xmath0 is not reciprocal ,    then @xmath0 has no conjugate of modulus @xmath2 .",
    "in @xcite , berstel described an algorithm for parallel addition in base @xmath398 on an alphabet with cardinality 13 . in this section ,",
    "we give algorithm  iii for parallel addition in this numeration system on the alphabet @xmath399 .",
    "this alphabet can not be further reduced , as proved in @xcite . in our algorithm , we use a method similar to the method of chow and robertson .",
    "we begin by describing two auxiliary algorithms for elimination of digits .",
    "both of them use the weak representation of zero @xmath231 .",
    "the first auxiliary algorithm removes digits @xmath21 :    0.2 cm    ' '' ''    0.2 cm    * algorithm  a * : base @xmath398 , reduction from alphabet @xmath400 to @xmath401 .    0.2 cm    ' '' ''    0.2 cm    _ input _ : a finite sequence of digits @xmath222 of @xmath402 , with @xmath403 .",
    "+ _ output _ : a finite sequence of digits @xmath222 of @xmath404 , with @xmath403 .    0.2 cm    ` for each i in parallel do ` + 1 . `",
    "case ` @xmath405  ` then ` @xmath406 + ` else ` @xmath407 + 2 .",
    "@xmath408    0.2 cm    ' '' ''    0.5 cm    for the correctness of algorithm  a we have to show that the value @xmath409 belongs to the alphabet @xmath410 for each @xmath54 .",
    "+ we will use the fact that our prescription for @xmath135 satisfies @xmath411 let us discuss the value of @xmath139 according to the values @xmath135 :    @xmath271 : :    and    +    * @xmath412 : then ,    @xmath413 .",
    "* @xmath414 : then our algorithm for the value    @xmath135 supposes that @xmath415 or    @xmath416 .",
    "according to , we have    @xmath417 or @xmath418 .",
    "therefore ,    @xmath419 .",
    "@xmath420 : :    and    +    * @xmath421 : then ,    @xmath422 .",
    "* @xmath414 : the rule for the value @xmath135    supposes that @xmath423 and    @xmath424 .",
    "therefore ,    @xmath425 , which implies    @xmath426 .    other combinations , namely ( @xmath427 and @xmath428 ) or ( @xmath429 and @xmath430 ) , are impossible .",
    "thereby , we have shown that the digits of the result belong to the desired alphabet @xmath431 .",
    "the second auxiliary algorithm removes digits @xmath81 :    0.2 cm    ' '' ''    0.2 cm    * algorithm  b * : base @xmath398 , reduction from alphabet @xmath432 to @xmath433 .    0.2 cm    ' '' ''    0.2 cm    _ input _ : a finite sequence of digits @xmath222 of @xmath410 , with @xmath403 .",
    "+ _ output _ : a finite sequence of digits @xmath222 of @xmath176 , with @xmath403 .    0.2 cm    ` for each i in parallel do ` + 1 . `",
    "case ` @xmath434  ` then ` @xmath435 + ` else ` @xmath407 + 2 .",
    "@xmath408    0.2 cm    ' '' ''    0.5 cm    before explanation of the correctness of algorithm  b , we point out several simple facts about the values @xmath135 determined in algorithm b :    * fact 1 .",
    "@xmath436 * fact 2 .",
    "@xmath437 * fact 3 .",
    "@xmath438 * fact 4 .",
    "@xmath439    unlike the previous four facts , the following three ones deserve short proofs :    * fact 5 .",
    "@xmath440 + _ proof of fact 5 . _",
    "the assumption @xmath441 and @xmath271 implies @xmath442 . if @xmath443 , then we have directly @xmath417 .",
    "now suppose that @xmath444 . if @xmath445 were equal to @xmath2 , then , according to fact 4 , the value @xmath135 is equal to @xmath2 , a contradiction .",
    "the discussion for @xmath446 is analogous .",
    "@xmath447 + _ proof of fact 6 .",
    "_ when @xmath448 , then the value @xmath135 is zero in these two situations : + a ) one of numbers @xmath449 , @xmath450 is not positive .",
    "then , according to fact 2 , one of the values @xmath445 , @xmath446 is zero .",
    "+ b ) both @xmath451 and @xmath452 . the assumption @xmath453 forces , without loss of generality , that @xmath454 and @xmath455 .",
    "so we can use fact 3 to deduce @xmath418 .",
    "@xmath456 + _ proof of fact 7 . _",
    "the assumption @xmath441 and @xmath278 implies @xmath457 or @xmath452 .",
    "according to fact 1 , at least one of numbers @xmath445 or @xmath446 is @xmath2 .",
    "now we demonstrate the correctness of algorithm  b , by showing that @xmath409 belongs to the alphabet @xmath3 for each @xmath54 .",
    "let us again discuss the value @xmath139 according to the values @xmath135 :    @xmath271 : :    and    +    * @xmath458 : then ,    @xmath459 .",
    "* @xmath414 : due to fact 6 , we have    @xmath460 .",
    "* @xmath461 : according to fact 5 , we have    @xmath462 .",
    "@xmath463 : :    and    +    * @xmath464 : then ,    @xmath459 .    *",
    "@xmath461 : due to fact 7 , we have    @xmath465 .",
    "* @xmath414 : according to fact 4 , we have    @xmath466 .    other combinations , namely ( @xmath427 and @xmath467 ) or ( @xmath468 and @xmath469 ) , are impossible .",
    "thereby , we have shown that the digits of the result belong to the desired alphabet @xmath433 .",
    "lastly , we can proceed by summarizing the algorithm  iii for parallel addition in base @xmath177 and alphabet @xmath470 :    0.2 cm    ' '' ''    0.2 cm    * algorithm  iii * : base @xmath398 , parallel addition on alphabet @xmath471 .    0.2 cm    ' '' ''    0.2 cm    _ input _ : two finite sequences of digits @xmath217 and @xmath218 of @xmath3 , with @xmath220 and @xmath221 .",
    "+ _ output _ : a finite sequence of digits @xmath222 of @xmath3 such that @xmath223    ` for each i in parallel do ` + 0 .",
    "@xmath472 + 1 .",
    "use algorithm  a with input @xmath473 and denote its output @xmath474 + 2 .",
    "use algorithm  b with input @xmath474 and denote its output @xmath222 + 0.2 cm    ' '' ''    0.5 cm    [ 21 ] addition in base the golden mean on the alphabet @xmath3 realized by algorithm  iii is a @xmath475-local function with memory @xmath476 and anticipation @xmath476 .",
    "algorithm  iii is neighbour - sensitive .    it is easily seen that algorithm  a is local with memory @xmath477 and anticipation @xmath477 .",
    "algorithm  b is local with memory @xmath478 and anticipation @xmath478 .",
    "therefore , algorithm  iii is @xmath475-local with memory @xmath476 and anticipation @xmath476 .",
    "all of our algorithms described above are working with symmetric alphabets of signed - digits .",
    "such a choice of alphabet is practical , because the algorithm for addition can be used for subtraction at the same time .",
    "however , the symmetry of the alphabet is not necessary for parallelism as such . the parallel algorithm for addition in base being the golden mean given by berstel  @xcite uses an alphabet of 13 non - negative digits , namely @xmath479 .",
    "in fact , our auxiliary algorithms a and b demonstrate that , if we do not insist on the symmetry , we may be able to further reduce the alphabet .",
    "[ 2machines ] in algorithm  iii , input values @xmath480 and @xmath481 at even positions do not influence the output values @xmath482 at odd positions , and similarly for the input in odd positions .",
    "therefore , the data at even and odd positions can be stored separately , and addition can be performed in parallel on the input @xmath483 and @xmath484 on one hand , and on the input @xmath485 and @xmath486 on the other hand , by an @xmath487-local function independently .",
    "the structure of algorithm  iii depends heavily on the coefficients of the weak polynomial satisfied by the golden mean .",
    "it is not clear how to generalize it to a broader class of bases .",
    "however , the case where @xmath0 is a quadratic unit integer seems feasible similarly to the golden mean .    *",
    "( fibonacci numeration system ) *  the fibonacci numbers are defined as follows : @xmath488 it is well known that any non - negative integer @xmath489 can be expressed as a sum of different fibonacci numbers , @xmath490 if , moreover , we require @xmath491 for any index @xmath331 , then such an expression is unique , see  @xcite .",
    "for example , the number @xmath492 can be represented in the fibonacci numeration system by @xmath493 , as @xmath494 .",
    "if we abandon the requirement of uniqueness , and allow coefficients @xmath495 , then the numeration system is redundant , and addition can be performed by a parallel algorithm in constant time as well .",
    "let us explain it .",
    "we want to add two integers written in the form @xmath496 we can use algorithm  iii with a small modification .",
    "algorithm  iii is based on the weak representation of zero @xmath497 .",
    "the fibonacci numbers satisfy analogous relations :    * @xmath498 for all @xmath499 * @xmath500 * @xmath501    therefore , the algorithm  iii needs only slight changes , namely at the positions with indices @xmath502 in part 1 ( algorithm a ) and @xmath503 in part 2 ( algorithm b ) .    however , a function computable in parallel is defined by a sliding window of length @xmath17 , which means that the function @xmath47 can not depend on any particular index @xmath54 , but only on the @xmath17-tuples of the input alphabet .",
    "to get rid of this problem , we use the classical trick of extending the alphabet @xmath3 by an artificial symbol , say @xmath504 , to indicate the exceptional positions to the function @xmath47 .",
    "thus we will represent the above mentioned number @xmath492 as @xmath505 .",
    "the domain of the @xmath475-local function @xmath47 announced in corollary [ 21 ] has to be enlarged to the set @xmath506 , and the definition of @xmath47 must be correspondingly extended as well .    note that , due to the relation @xmath500 , the alternative option of processing the odd positions separately from the even positions ( as described in remark [ 2machines ] .",
    "for base @xmath177 ) can not be used for the fibonacci numeration system .",
    "we are grateful to shigeki akiyama for showing us the connection between polynomials with a dominant coefficient and the height reducing problem with expanding base @xmath307 , and for providing us the reference  @xcite .",
    "we also want to thank wolfgang steiner for pointing out that the results contained in  @xcite imply proposition  [ dominant ] in case @xmath0 is a pisot number . finally , we thank pter burcsi for proposition  [ mod1 ] .    we acknowledge financial support by the czech science foundation grant gar 201/09/0584 , and by the grants msm6840770039 and lc06002 of the ministry of education , youth , and sports of the czech republic .                    ch .",
    "frougny and j. sakarovitch , number representation and finite automata , _ combinatorics , automata and number theory _ , v. berth , m. rigo ( eds ) , encyclopedia of mathematics and its applications 135 , cambridge university press , 2010 ."
  ],
  "abstract_text": [
    "<S> we consider numeration systems where digits are integers and the base is an algebraic number @xmath0 such that @xmath1 and @xmath0 satisfies a polynomial where one coefficient is dominant in a certain sense . </S>",
    "<S> for this class of bases @xmath0 , we can find an alphabet of signed - digits on which addition is realizable by a parallel algorithm in constant time . </S>",
    "<S> this algorithm is a kind of generalization of the one of avizienis . </S>",
    "<S> we also discuss the question of cardinality of the used alphabet , and we are able to modify our algorithm in order to work with a smaller alphabet . </S>",
    "<S> we then prove that @xmath0 satisfies this dominance condition if and only if it has no conjugate of modulus @xmath2 . when the base @xmath0 is the golden mean , we further refine the construction to obtain a parallel algorithm on the alphabet @xmath3 . </S>",
    "<S> this alphabet can not be reduced any more .    </S>",
    "<S> numeration , addition , parallel algorithm , golden mean </S>"
  ]
}
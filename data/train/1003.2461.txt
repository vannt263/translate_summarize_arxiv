{
  "article_text": [
    "the ( unforced ) incompressible navier ",
    "stokes equations @xmath1 describe the evolution of the velocity field @xmath2 of an incompressible fluid with kinematic viscosity @xmath3 in the absence of external forcing . here",
    "@xmath4 with @xmath5 , @xmath6 , @xmath7 .",
    "equation ( [ eqnincompressibility ] ) is the incompressibility constraint . unlike compressible fluids , the pressure @xmath8 in ( [ eqnnavierstokes ] )",
    "does not have a physical meaning and is only a lagrange multiplier that ensures incompressibility is preserved .",
    "while equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) can be formulated in any dimension @xmath7 , they are usually only studied in the physically relevant dimensions @xmath9 or @xmath0 .",
    "the presentation of the navier ",
    "stokes equations above is in the absence of spatial boundaries ; an issue that will be discussed in detail later .    when @xmath10 , ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) are known as the euler equations .",
    "these describe the evolution of the velocity field of an ( ideal ) inviscid and incompressible fluid .",
    "formally the difference between the euler and navier  stokes equations is only the dissipative laplacian term .",
    "since the laplacian is exactly the generator a brownian motion , one would expect to have an exact stochastic representation of ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) which is physically meaningful , that is , can be thought of as an appropriate average of the inviscid dynamics and brownian motion .",
    "the difficulty , however , in obtaining such a representation is because of both the nonlinearity and the nonlocality of equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) . in 2d , an exact stochastic representation of ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) dates back to chorin  @xcite in 1973 and was obtained using vorticity transport and the kolmogorov equations . in three dimensions , however , this method fails to provide an exact representation because of the vortex stretching term .    in 3d",
    ", a variety of techniques has been used to provide exact stochastic representations of ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) .",
    "one such technique ( le jan and sznitman  @xcite ) uses a backward branching process in fourier space .",
    "this approach has been extensively studied and generalized @xcite by many authors ( see also @xcite ) .",
    "a different and more recent technique due to busnello , flandoli and romito @xcite ( see also @xcite ) uses noisy flow paths and a girsanov transformation .",
    "a related approach in @xcite is the stochastic - lagrangian formulation , exact stochastic representation of solutions to ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) which is essentially the averaging of noisy particle trajectories and the inviscid dynamics .",
    "stochastic variational approaches ( generalizing arnold s @xcite deterministic variational formulation for the euler equations ) have been used by @xcite and a related approach using stochastic differential geometry can be found in @xcite .",
    "one common setback in all the above methods is the inability to deal with boundary conditions .",
    "the main contribution of this paper adapts the stochastic - lagrangian formulation in @xcite ( where the authors only considered periodic boundary conditions or decay at infinity ) to the situation with boundaries .",
    "the usual probabilistic techniques used to transition to domains with boundary involve stopping the processes at the boundary .",
    "this introduces two major problems with the techniques in @xcite .",
    "first , stopping introduces spatial discontinuities making the proof used in @xcite fail and a different approach is required .",
    "second and more interesting is the fact that merely stopping does _ not _ give the no - slip ( @xmath11-dirichlet ) boundary condition as one would expect .",
    "one needs to also create trajectories at the boundary which essentially propagate the influence of the vorticity at the boundary to the interior fluid velocity .",
    "this paper is organized as follows . in section  [ sxnslintro ] a  brief introduction to the stochastic - lagrangian formulation without boundaries is given . in section [ sxnslwithboundaries ]",
    "we motivate and state the stochastic - lagrangian formulation in the presence of boundaries ( theorem [ thmslnsnoslip ] ) . in section [ sxnbackwardito ]",
    "we recall certain standard facts about backward it integrals which will be used in the proof of theorem [ thmslnsnoslip ] . in section [ sxnnoslipproof ]",
    "we prove theorem [ thmslnsnoslip ] .",
    "finally , in section [ sxnvorticitytransport ] we discuss stochastic analogues of vorticity transport and inviscid conservation laws .",
    "the technique used by the pi for this section is the stochastic - lagrangian formulation , developed by peter constantin and the pi in @xcite .",
    "the advantage of the stochastic - lagrangian formulation over the techniques cited above is that it is the only exact stochastic representation of the    the stochastic - lagrangian formulation ( [ eqnxdef])([eqnaveragedwebber ] ) is exactly this ; it gives an exact , physically meaningful probabilistic representation of the 3d incompressible navier - stokes equations using noisy particle trajectories and averaging .",
    "physically , this provides the intuition that viscosity arises from the averaging of brownian motion of fluid particles .",
    "mathematically , it provides us with a natural , explicit stochastic representation which we hope will enhance our analytical understanding of the navier - stokes equations .",
    "this was developed by peter constantin and the pi in @xcite .",
    "in this section , we provide a brief description of the stochastic - lagrangian formulation in the absence of boundaries . for motivation ,",
    "let us first study a lagrangian description of the euler equations [ equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) with @xmath10 ; we will usually use a superscript of @xmath11 to denote quantities relating to the euler equations ] .",
    "let @xmath12 denote the spatial dimension and @xmath13 be the flow defined by @xmath14 with initial data @xmath15 , for all @xmath16 . to clarify our notation , @xmath17 is a  function of the initial data @xmath16 and time @xmath18 .",
    "we usually omit the spatial variable and use @xmath13 to denote @xmath19 , the slice of @xmath17 at time @xmath20 .",
    "time derivatives will always be denoted by a dot or @xmath21 instead of a @xmath20 subscript .",
    "one can immediately check ( see , e.g. , @xcite ) that @xmath2 satisfies the incompressible euler equations if and only if @xmath22 is a gradient composed with @xmath23 . by newton s second law ,",
    "this admits the physical interpretation that the euler equations are equivalent to assuming that the force on individual particles is a gradient .",
    "one would naturally expect that solutions to the navier ",
    "stokes equations can be obtained similarly by adding noise to particle trajectories and averaging .",
    "however , for noisy trajectories , an assumption on @xmath24 will be problematic . in the incompressible case",
    ", we can circumvent this difficultly using the weber formula @xcite [ equation ( [ eqneulerwebber ] ) below ] .",
    "indeed , a direct computation ( see , e.g. , @xcite ) shows that for divergence free @xmath2 , the assumption that  @xmath24 is a  gradient is equivalent to @xmath25,\\ ] ] where @xmath26 denotes the leray ",
    "hodge projection @xcite onto divergence free vector fields , the notation @xmath27 denotes the transpose of the jacobian and for any @xmath5 , @xmath28 is the spatial inverse of the map @xmath13 [ i.e. ,  @xmath29 for all @xmath30 and @xmath31 for all @xmath32 .    from this",
    "we see that the euler equations are formally equivalent to equations ( [ eqneulerxdef ] ) and ( [ eqneulerwebber ] ) .",
    "since these equations no longer involve second ( time ) derivatives of the flow @xmath17 , one can consider noisy particle trajectories without any analytical difficulties .",
    "in fact , adding noise to ( [ eqneulerxdef ] ) and averaging out the noise in ( [ eqneulerwebber ] ) gives the equivalent formulation of the navier ",
    "stokes equations stated below .    [ thmslns]let @xmath33 be the spatial dimension , @xmath3 represent the kinematic viscosity and @xmath34 be a divergence free , periodic , hlder @xmath35 function and @xmath36 be a @xmath37-dimensional wiener process .",
    "consider the system @xmath38,\\end{aligned}\\ ] ] where , as before , for any @xmath5 , @xmath39 denotes the spatial inverse ) and ( [ eqnx0 ] ) gives a stochastic flow of diffeomorphisms and , in particular , guarantees the existence of the spatial inverse of @xmath23 .",
    "] of  @xmath40 . then @xmath2 is a classical solution of the navier  stokes equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) with initial data @xmath34 and periodic boundary conditions if and only if @xmath2 is a  fixed point of the system ( [ eqnxdef])([eqnaveragedwebber ] ) .",
    "the flows @xmath41 above are now a function of the initial data @xmath16 , time @xmath18 and the probability variable @xmath42 .",
    "we always suppress the probability variable , use @xmath40 to denote @xmath43 and omit the spatial variable when unnecessary .",
    "the function @xmath2 is a deterministic function of space and time and , as above , we use @xmath44 to denote the function @xmath45 .",
    "we now briefly explain the idea behind the proof of theorem [ thmslns ] given in  @xcite and explain why this method can not be used in the presence of spatial boundaries .",
    "consider first the solution of the sde ( [ eqnxdef ] ) with initial data ( [ eqnx0 ] ) .",
    "using the it ",
    "wentzel formula @xcite , theorem 4.4.5 , one can show that any ( spatially regular ) process @xmath46 which is constant along trajectories of  @xmath23 satisfies the spde @xmath47 since the process @xmath48 ( which , as before , is defined to be the spatial inverse of  @xmath23 ) is constant along trajectories of @xmath23 , the process @xmath46 defined by @xmath49 is constant along trajectories of @xmath23 .",
    "thus , if @xmath50 is regular enough ( @xmath51 ) , then  @xmath46 satisfies spde ( [ eqntheta ] ) .",
    "now , if @xmath2 is deterministic , taking expected values of  ( [ eqntheta ] ) we see that @xmath52 satisfies @xmath53 with initial condition @xmath54 .",
    "note that when @xmath10 , @xmath48 is deterministic so @xmath55 .",
    "further , equation ( [ eqntheta ] ) reduces to the transport equation for which writing the solution as @xmath56 is exactly the method of characteristics . when @xmath3 , the above procedure is an elegant generalization , termed as the `` method of random characteristics '' ( see @xcite for further information ) .",
    "once explicit equations for @xmath48 and @xmath57 have been established , a direct computation using it s formula shows that @xmath2 given by ( [ eqnaveragedwebber ] ) satisfies the navier ",
    "stokes equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) .",
    "this was the proof used in @xcite .",
    "this point of view also yields a natural understanding of generalized relative entropies @xcite .",
    "eyink s recent work @xcite adapted this framework to magnetohydrodynamics and related equations by using the analogous weber formula @xcite .",
    "we also mention that zhang @xcite considered a backward analogue and provided short elegant proofs to classical existence results to ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) .",
    "in this section we describe how ( [ eqnxdef])([eqnaveragedwebber ] ) can be reformulated in the presence of boundaries .",
    "we begin by describing the difficulty in using the techniques from @xcite described in section [ sxnslintro ] .",
    "let @xmath58 be a domain with lipschitz boundary .",
    "even if we insist @xmath59 on the boundary of @xmath60 , we note that the noise in ( [ eqnxdef ] ) is independent of space and thus , insensitive to the presence of the boundary .",
    "consequently , some trajectories of the stochastic flow @xmath23 will leave the domain @xmath60 and for any @xmath61 , the map @xmath40 will ( surely ) not be spatially invertible .",
    "this renders  ( [ eqnthetadef ] ) meaningless .    in the absence of spatial boundaries ,",
    "equation ( [ eqnthetadef ] ) dictates that @xmath62 is determined by averaging the initial data over all trajectories of @xmath23 which reach @xmath63 at time @xmath20 . in the presence of boundaries",
    ", one must additionally average the boundary value of all trajectories reaching @xmath64 , starting on @xmath65 at any intermediate time ( figure [ fgrboundaries ] ) . as we will see later",
    ", this means the analogue of ( [ eqnthetadef ] ) in the presence of spatial boundaries is a spatially discontinuous process .",
    "this renders ( [ eqntheta ] ) meaningless , giving a second obstruction to using the methods of @xcite in the presence of boundaries .     without boundaries and with boundaries . ]    while the method of random characteristics has the above inherent difficulties in the presence of spatial boundaries , equation ( [ eqnbartheta ] ) is exactly the kolmogorov backward equation ( @xcite , section 8.1 ) . in this case , an expected value representation in the presence of boundaries is well known . more generally , the feynman ",
    "kac ( @xcite , section 8.2 ) formula , at least for linear equations with a potential term , has been successfully used in this situation .",
    "a certain version of this method ( section [ sxnfeynmankacbdd ] ) , without making the usual time reversal substitution , is essentially the same as the method of random characteristics .",
    "it is this version that will yield the natural generalization of  ( [ eqnxdef])([eqnaveragedwebber ] ) in domains with boundary ( theorem [ thmslnsnoslip ] ) . before turning to the navier ",
    "stokes equations , we provide a brief discussion on the relation between the feynman  kac formula and the method of random characteristics.=-1      both the feynman  kac formula and the method of random characteristics have their own advantages and disadvantages : the method of random characteristics only involves forward sde s and obtains the solution of ( [ eqnbartheta ] ) at time @xmath20 with only the knowledge of the initial data and `` @xmath23 at time @xmath20 '' ( or more precisely , the solution at time @xmath20 of the equation ( [ eqnxdef ] ) with initial data specified at time @xmath11 ) .",
    "however , this method involves computing the spatial inverse of @xmath23 , which analytically and numerically involves an additional step .    on the other hand , to compute the solution of ( [ eqnbartheta ] ) at time @xmath20 via the probabilistic representation using the kolmogorov backward equation ( or equivalently , the feynman ",
    "kac formula with a @xmath11 potential term ) when @xmath2 is time dependent involves _ backward _",
    "sde s and further requires the knowledge of the solution to ( [ eqnxdef ] ) with initial conditions specified at all times @xmath66 .",
    "however , this does not require computation of spatial inverses and , more importantly , yields the correct formulation in the presence of spatial boundaries .",
    "now , to see the relation between the method of random characteristics and the feynman ",
    "kac formula , we rewrite ( [ eqnxdef ] ) in integral form and keep track of solutions starting at all times @xmath67 . for any @xmath67 , we define the process @xmath68 to be the flow defined by @xmath69    now , as always , we let @xmath70 .",
    "then formally composing ( [ eqnxst ] ) with  @xmath71 and using the semigroup property @xmath72 gives the self - contained backward equation for @xmath71 @xmath73 now ( [ eqnthetadef ] ) can be written as @xmath74 and using the semigroup property @xmath75 we see that @xmath76 we remark that while ( [ eqnthetadef ] ) can be computed with the knowledge of the _ one parameter _",
    "family of flows @xmath40 given by ( [ eqnxdef ] ) , equation ( [ eqnthetadefa ] ) requires the knowledge of the entire _ two parameter _ family of flows @xmath71 given by ( [ eqnast ] ) ; even though ( [ eqnthetadefa ] ) involves only the one parameter family of flows @xmath77 , the definition of @xmath77 involves @xmath71 for all intermediate @xmath78 .",
    "this formal calculation leads to a natural generalization of ( [ eqnthetadef ] ) in the presence of boundaries .",
    "as before , let @xmath79 be a domain with lipschitz boundary and assume , for now , that @xmath2 is a lipschitz function defined on _ all _ of @xmath80 .",
    "let @xmath71 be the flow defined by ( [ eqnast ] ) and for @xmath81 , we define the _ backward exit time _ @xmath82 by @xmath83 \\mbox { and } \\forall r \\in ( s , t ] , a_{r , t}(x ) \\in d \\}.\\ ] ] let @xmath84 and @xmath85 be two given ( regular enough ) functions and define the process @xmath86 by @xmath87 note that when @xmath88 , equation ( [ eqnthetabdddef ] ) is consistent with ( [ eqnthetadefast ] ) . thus , ( [ eqnthetabdddef ] ) is the natural generalization of ( [ eqnthetadef ] ) in the presence of spatial boundaries and we expect @xmath89 satisfies the pde ( [ eqnbartheta ] ) with initial data @xmath90 and boundary conditions @xmath91 on @xmath92 . indeed , this is essentially the expected value representation obtained via the kolmogorov backward equations .",
    "if an extra term @xmath93 is desired on the left - hand side of ( [ eqnbartheta ] ) , then we only need to replace ( [ eqnthetabdddef ] ) by @xmath94 provided @xmath95 is bounded below .",
    "this is essentially the feynman ",
    "kac formula and its application to the navier ",
    "stokes equations is developed in the next section .",
    "note that the backward exit time @xmath96 is usually discontinuous in the spatial variable .",
    "thus , even with smooth @xmath97 , the process @xmath46 need not be spatially continuous . as mentioned earlier , equation ( [ eqntheta ] ) will now become meaningless and we will not be able to obtain a spde for @xmath46 . however , equation  ( [ eqnbartheta ] ) , which describes the evolution of the expected value @xmath98 , can be directly derived using the backward markov property and it s formula ( see , e.g. ,  @xcite ) .",
    "we will not provide this proof here but will instead provide a  proof for the more complicated analogue for the navier ",
    "stokes equations described subsequently .",
    "first note that if @xmath99 in ( [ eqnthetabdddef ] ) , then the solution to ( [ eqnbartheta ] ) with initial data @xmath50 and @xmath11-dirichlet boundary conditions will be given by @xmath100.\\ ] ]    recall the no - slip boundary condition for the navier ",
    "stokes equations is exactly a @xmath11-dirichlet boundary condition on the velocity field .",
    "let @xmath2 be a  solution to the navier ",
    "stokes equations in @xmath60 with initial data @xmath34 and no - slip boundary conditions .",
    "now , following ( [ eqnbarthetabdddef ] ) , we would expect that analogous to ( [ eqnaveragedwebber ] ) , the velocity field @xmath2 can be recovered from the flow @xmath71 [ equation  ( [ eqnast ] ) ] , the backward exit time @xmath101 [ equation  ( [ eqnentrancetimedef ] ) ] and the initial data @xmath34 by @xmath102    this , however , is _",
    "false_. in fact , there are two elementary reasons one should expect ( [ eqnunoboundarysgen ] ) to be false .",
    "first , absorbing brownian motion at the boundaries will certainly violate incompressibility .",
    "the second and more fundamental reason is that experiments and physical considerations lead us to expect production of vorticity at the boundary .",
    "this is exactly what is missing from ( [ eqnunoboundarysgen ] ) .",
    "the correct representation is provided in the following result .",
    "[ thmslnsnoslip]let @xmath103 ; c^1(\\bar d))$ ] be a solution of the navier ",
    "stokes equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) with initial data @xmath34 and no - slip boundary conditions .",
    "let @xmath48 be the solution to the backward sde ( [ eqnast ] ) and @xmath96 be the backward exit time defined by ( [ eqnentrancetimedef ] ) .",
    "there exists a function @xmath104 \\to{\\mathbb{r}}^3 $ ] such that for @xmath105 we have @xmath106    conversely , given a function @xmath107 \\to{\\mathbb{r}}^d$ ] , suppose there exists a  solution to the stochastic system ( [ eqnast ] ) , ( [ eqnwdef ] ) , ( [ eqnunoboundaryscorrect ] ) .",
    "if further @xmath108 ; c^1(\\bar d))$ ] , then @xmath2 satisfies the navier  stokes equa - tions   with initial data @xmath34 and _ vorticity _ boundary conditions @xmath109.\\ ] ]    the proof of theorem [ thmslnsnoslip ] is presented in section [ sxnnoslipproof ] .",
    "we conclude this section with a few remarks .",
    "[ rmkdiffnotation]@xmath110by @xmath111 in equation ( [ eqnwdef ] ) we mean @xmath112_{s = \\sigma_t(x)}$ ] .",
    "that is , @xmath113 refers to the transpose of the jacobian of @xmath48 , evaluated at initial time @xmath82 , final time @xmath20 and position @xmath63 ( see @xcite for existence ) .",
    "this is different from the transpose of the jacobian of the function  @xmath114 which does not exist as the function is certainly not differentiable in space .",
    "[ rmkregularityassumptions ] in order to simplify the presentation , our regularity assumptions on @xmath2 are somewhat generous .",
    "our assumptions on @xmath2 will immediately guarantee that @xmath2 has a lipschitz extension to @xmath80 . now",
    "the process  @xmath48 , defined to be a solution to ( [ eqnast ] ) with this lipschitz extension of @xmath2 , can be chosen to be a ( backward ) stochastic flow of diffeomorphisms @xcite .",
    "thus , @xmath115 is well defined and further defining  @xmath96 by  ( [ eqnentrancetimedef ] ) is valid . finally , since the statement of theorem [ thmslnsnoslip ] only uses values of @xmath71 for @xmath116 , the choice of the lipschitz extension of @xmath2 will not matter .",
    "see also remark [ rmkweakerregularity ] .",
    "[ rmkvorticitybc]note that our statement of the converse above _ does not _",
    "explicitly give any information on the dirichlet boundary values of @xmath2 .",
    "of course , the normal component of @xmath2 must vanish at the boundary of @xmath60 since  @xmath2 is the leray ",
    "hodge projection of a function .",
    "but an explicit local relation between @xmath117 and the boundary values of the tangential component of @xmath2 can not be established .",
    "we remark , however , that while the vorticity boundary condition ( [ eqnuvorticitybc ] ) is somewhat artificial , it is enough to guarantee uniqueness of solutions to the initial value problem for the navier ",
    "stokes equations .",
    "[ rmktildewchoice]we explain how @xmath117 can be chosen to obtain the no - slip boundary conditions",
    ". we will show ( lemma [ lmawequation ] ) that for @xmath118 defined by ( [ eqnwdef ] ) , the expected value @xmath119 solves the pde @xmath120 with initial data @xmath121 as shown before , @xmath122 in ( [ eqnbarwpde ] ) denotes the transpose of the jacobian of @xmath44 .",
    "now , if @xmath123 , then we will have @xmath124 in @xmath60 and by continuity , on the boundary of @xmath60 .",
    "thus , to prove existence of the function @xmath117 , we solve the pde ( [ eqnbarwpde ] ) with initial conditions ( [ eqnbarwinitialdata ] ) and _ vorticity _ boundary conditions @xmath125 we chose @xmath117 to be the dirichlet boundary values of this solution .    to elaborate on remark [ rmktildewchoice ] , we trace through the influence of the vorticity on the boundary on the velocity in the interior .",
    "first , the vorticity at the boundary influences @xmath126 by entering as a boundary condition on the first derivatives for the pde ( [ eqnbarwpde ] ) . now , to obtain @xmath2 we need to find @xmath117 , the ( dirichlet ) boundary values of ( [ eqnbarwpde ] ) and use this to weight trajectories that start on the boundary of @xmath60 .",
    "the process of finding @xmath117 is essentially passing from neumann boundary values of a pde to the dirichlet boundary values which is usually a nonlocal pseudo - differential operator .",
    "thus , while the procedure above is explicit enough , the boundary vorticity influences the interior velocity in a highly implicit , nonlocal manner .",
    "our choice of @xmath117 is not unique . indeed ,",
    "if @xmath127 and @xmath128 are two solutions of ( [ eqnbarwpde])([eqnbarwboundaryconditions ] ) , then we must have @xmath129 , where @xmath130 satisfies the equation @xmath131 with initial data @xmath132 .",
    "since we do not have boundary conditions on @xmath130 , we can certainly have nontrivial solutions to this equation . thus",
    ", our choice of @xmath117 is only unique up to addition by the gradient of a solution to ( [ eqnqeq ] ) .",
    "this now raises numerous interesting questions .",
    "a fundamental open question in fluid dynamics is about boundary layer separation in the inviscid limit .",
    "it is known that in some situations the boundary layer can ` detach ' and produce vorticity in the interior @xcite .",
    "the above probabilistic representation allows a new direction of approach to this problem .",
    "one can now quantify boundary separation in terms of the chance that the backward exit time @xmath133 is strictly positive .",
    "our hope is that this framework will allow the use of probabilistic techniques , especially those with no deterministic analogues ( e.g. large deviations ) , to provide new insight into the study of the inviscid limit .",
    "while the formulation of theorem [ thmslnsnoslip ] involves only regular ( forward ) it integrals , the proof requires backward it integrals and processes adapted to a two parameter filtration .",
    "the need for backward it integrals stems from equation ( [ eqnast ] ) which , as mentioned earlier , is the evolution of @xmath48 , _ backward _ in time .",
    "this is , however , obscured because our diffusion coefficient is constant making the martingale term exactly the increment of the wiener process and can be explicitly computed without any backward ( or even forward ) it integrals .    to elucidate matters , consider the flow @xmath134 given by @xmath135 if , as usual , @xmath136 , then substituting formally is not spatially constant",
    "this is explained subsequently and the correct equation is ( [ eqnastsigmacorrect ] ) below . ]",
    "@xmath137 and assuming the semigroup property gives the equation @xmath138 for the process @xmath139 .",
    "the need for backward it integrals is now evident ; the last term above does not make sense as a forward it integral since @xmath140 is not @xmath141 measurable .",
    "this term , however , is well defined as a backward it integral ; an integral with respect to a decreasing filtration where processes are sampled at the right endpoint . since forward",
    "it integrals are more predominant in the literature , we recollect a few standard facts about backward it integrals in this section . a  more detailed account , with proofs , can be found in @xcite , for instance .",
    "let @xmath142 be a probability space , @xmath143 be a @xmath37-dimensional wiener process on @xmath144 and let @xmath145 be the @xmath96-algebra generated by the increments @xmath146 for all @xmath147 , augmented so that the filtration @xmath148 satisfies the usual conditions , @xmath149 contains all @xmath150-null sets .",
    "further , @xmath151 is right - continuous in @xmath20 and left - continuous in @xmath152 .",
    "see @xcite , definition 2.25 , for instance . ]",
    "note that for @xmath153 , we have @xmath154 . also @xmath155 is @xmath151-measurable and is independent of both the past  @xmath156 , and the future @xmath157 .",
    "we define a ( two parameter ) family of random variables @xmath158 to be a ( two parameter ) process adapted to the ( two parameter ) filtration @xmath159 , if for all @xmath160 , the random variable @xmath161 is @xmath151-measurable . for example",
    ", @xmath162 is an adapted process .",
    "more generally , if @xmath2 and  @xmath96 are regular enough _ deterministic _ functions , then the solution @xmath163 of the ( forward ) sde ( [ eqnxstsigma ] ) is an adapted process .",
    "given an adapted ( two parameter ) process @xmath164 and any @xmath5 , we define the backward it integral @xmath165 by @xmath166 where @xmath167 is a partition of @xmath168 $ ] and @xmath169 is the length of the largest subinterval of @xmath170 . the limit is taken in the @xmath171 sense , exactly as with forward it integrals ( see , e.g. , @xcite , page 148 , @xcite , page 35 , @xcite , page 111 ) .",
    "the standard properties ( existence , it isometry , martingale properties ) of the backward it integral are , of course , identical to those of the forward integral .",
    "the only difference is in the sign of the it correction .",
    "explicitly , consider the process @xmath172 satisfying the backward it differential equation ( [ eqnastsigma ] ) .",
    "if @xmath173 is adapted , @xmath51 in space and continuously differentiable with respect to @xmath152 , then the process @xmath174 satisfies the backward it differential equation @xmath175\\circ{a_{r , t } } \\,dr \\\\ & & { } + \\int_s^t [ { \\nabla}f_{r , t } \\sigma_r ] \\circ{a_{r , t } } \\,dw_r,\\end{aligned}\\ ] ] where @xmath176 with the einstein sum convention .",
    "though we only consider solutions to ( [ eqnxstsigma ] ) for constant diffusion coefficient , we briefly address one issue when @xmath96 is not constant .",
    "our motivation for the equation ( [ eqnastsigma ] ) was to make the substitution @xmath177 and formally use the semigroup property .",
    "this , however , does not yield the correct equation when @xmath96 is not constant and the equation for @xmath178 involves an additional correction term . to see this",
    ", we discretize the forward integral in ( [ eqnxstsigma ] ) ( in time ) and substitute @xmath137 .",
    "this yields a sum sampled at the _ left _ endpoint of each time step .",
    "while this causes no difficulty for the bounded variation terms , the martingale term is a discrete approximation to a _",
    "backward _ integral and hence , must be sampled at the _",
    "right _ endpoint of each time step . converting this to sum sampled at the right endpoint via",
    "a  taylor expansion of @xmath96 is what gives this extra correction .",
    "carrying through this computation ( see , e.g. , @xcite , section 4.2 ) yields the equation @xmath179\\\\[-8pt ] & & { } + \\int_s^t \\bigl ( { \\partial}_j \\sigma_r^{i , k } \\circ a'_{r , t}(x ) \\bigr ) \\bigl ( \\sigma ^{j , k}_r \\circ a'_{r , t}(x ) \\bigr ) e_i \\,dr,\\nonumber\\end{aligned}\\ ] ] where @xmath180 are the elementary basis vectors and @xmath181 denotes the @xmath182th entry in the @xmath183 matrix @xmath96 .",
    "we recall that the proof of the ( forward ) it formula involves approximating @xmath184 by its taylor polynomial about the left endpoint of the partition intervals .",
    "analogously , the backward it formula involves approximating @xmath184 by taylor polynomial about the _",
    "right _ endpoint of partition intervals , which accounts for the reversed sign in the it correction .",
    "finally , we remark that for any fixed @xmath5 , the solution @xmath185 of the backward sde ( [ eqnast ] ) is a backward strong markov process [ the same is true for solutions to ( [ eqnastsigmacorrect ] ) ] . the backward markov property states that @xmath186 then @xmath187_{y = a_{s , t}(x)},\\ ] ] where @xmath188 denotes the conditional expectation with respect to the @xmath96-algebra @xmath151 and @xmath189 the conditional expectation with respect to the @xmath96-algebra generated by the process @xmath190 .    for the strong markov property ( we define @xmath96 to be a _ _ backward @xmath20-stopping time__-stopping time is analogous to @xmath152-stopping time in @xcite , page 24 . ] if almost surely @xmath191 and for all @xmath66 , the event @xmath192 is @xmath151-measurable",
    ". now if @xmath96 is any backward @xmath20-stopping time with @xmath193 almost surely , the backward strong markov property states @xmath194\\mathop{{}_{\\hspace*{-21pt } s = \\sigma , } } _ { y = a_{\\sigma ,",
    "the proofs of the backward markov properties is analogous to the proof of the forward markov properties and we refer the reader to @xcite , for instance .",
    "we conclude this section by outlining how theorem [ thmslnsnoslip ] can be reformulated without using lipschitz extensions of @xmath2 .",
    "this is mainly of interest when @xmath195 blows up near @xmath65 .",
    "let @xmath58 be a domain , not necessarily lipschitz , @xmath196 , and assume @xmath197 \\to{\\mathbb{r}}^d$ ] is bounded and _ locally _ lipschitz .",
    "now we can always write @xmath198 , where the @xmath199 s are an increasing sequence of locally compact open sets with lipschitz boundary . now",
    "the function @xmath2 restricted to @xmath199 must have a lipschitz extension to @xmath80 , which we denote by @xmath200 .",
    "let @xmath201 be the solution to ( [ eqnast ] ) with @xmath2 replaced by @xmath200 .",
    "now we can define @xmath202 to be the backward exit time of @xmath201 from the domain @xmath199 .",
    "that is , we define @xmath203 by ( [ eqnentrancetimedef ] ) , with @xmath48 replaced with @xmath201 , and @xmath60 replaced with @xmath199 .",
    "note that by pathwise uniqueness , we must have @xmath204 for all @xmath205 , @xmath206 , almost surely .",
    "thus we define @xmath207    for @xmath208 and any realization where @xmath209 , the sequence @xmath210 is eventually constant .",
    "so on the event @xmath211\\}$ ] , we define @xmath212$}.\\ ] ] now , @xmath48 must satisfy ( [ eqnast ] ) almost surely on the event @xmath213 \\}$ ] .",
    "since @xmath2 is bounded , equation ( [ eqnast ] ) and lvy s almost sure , modulus of continuity @xcite*section 2.9f for brownian motion will guarantee that for almost every realization the function @xmath214 is uniformly continuous on @xmath215 $ ] .",
    "thus the limit @xmath216 exists almost surely , and we denote it by @xmath217 exists is in fact independent of @xmath63 . ] note that by definition of @xmath96 , we must have @xmath218 .",
    "finally , we remark that the above definition of @xmath48 is independent of the sequence of domains @xmath199 .",
    "this , again , is an immediate consequence of pathwise uniqueness .",
    "now we can reformulate theorem [ thmslnsnoslip ] using @xmath96 and @xmath48 defined by ( [ eqnsigmadef ] ) and ( [ eqnastnolipschitz ] ) , respectively .",
    "provided we have enough control on @xmath219 to guarantee that the limit @xmath220 exists , theorem [ thmslnsnoslip ] and it s proof will remain unchanged in this context .",
    "note that both the above limits as @xmath221 exist because the sequences become eventually constant .    the minimal existence time @xmath222 .",
    "suppose we had an increasing sequence of lipschitz domains @xmath199 such that @xmath223 and @xmath224 is compactly contained in @xmath225 .",
    "now the usual picard iteration will show that ( [ eqnast ] ) has a solution up to a backward stopping time .",
    "explicitly , this means for every @xmath208 , @xmath226 $ ] , there exists a backward @xmath20-stopping time @xmath82 and a process @xmath227}$ ] such that :    1 .   for all @xmath228 $ ] , @xmath190 is @xmath145-measurable , and @xmath229 .",
    "2 .   if @xmath61 , then @xmath230 almost surely .",
    "3 .   equation ( [ eqnast ] ) holds almost surely up to @xmath231 .",
    "explicitly , @xmath232 further , if @xmath209 , then @xmath233 .",
    "now , the lipschitz assumption on @xmath2 immediately guarantees pathwise uniqueness .",
    "thus if we have a second solution @xmath234 , up to the backward @xmath20-stopping time @xmath235 , then , almost surely , @xmath236 .",
    "this uniqueness , combined with local existence above will show that @xmath231 can be ( uniquely ) chosen so that @xmath237 almost surely .",
    "we call this choice of @xmath82 the _ minimal existence time _ of ( [ eqnaststopped ] ) . thus , when stating theorem [ thmslnsnoslip ] when @xmath2 does not admit a lipschitz extension , we define @xmath82 to be the minimal existence time of ( [ eqnaststopped ] ) , instead of using ( [ eqnentrancetimedef ] ) .    ' '' ''    to avoid technicalities , we will also assume @xmath238 \\to{\\mathbb{r}}^d$ ] has a lipschitz extension to @xmath239 $ ] .",
    "since all our definitions and theorems below will be independent of which extension of @xmath2 is used , we will , when necessary , use the same letter @xmath2 to denote a lipschitz extension of @xmath2 .",
    "we conclude this section by defining the notion of solutions of ( [ eqnast ] ) .",
    "we will always assume @xmath58 is a lipschitz domain . to avoid technicalities",
    ", we will also assume @xmath238 \\to{\\mathbb{r}}^d$ ] has a lipschitz extension to @xmath239 $ ] .",
    "since all our definitions and theorems below will be independent of which extension of @xmath2 is used , we will , when necessary , use the same letter @xmath2 to denote a lipschitz extension of @xmath2 .",
    "[ dfnsolution]let @xmath60 , @xmath2 and @xmath240 be as in the statement of theorem [ thmslnsnoslip ] .",
    "we say @xmath48 is a solution to ( [ eqnast ] ) with respect to the family of backward stopping times @xmath96 if the following conditions hold .    1 .   for every @xmath208 , @xmath226 $",
    "] , the function @xmath82 is a backward @xmath20-stopping time , and for @xmath241 , @xmath242 .",
    "the function @xmath243 \\times\\omega\\to[0 , t]$ ] is progressively measurable , @xmath244 \\times \\omega\\to[0,t]$ ] is measurable with respect to the product sigma algebra @xmath245 ) \\times\\mathcal f_{s , t}$ ] . ] and for every @xmath226 $ ] , @xmath208 , the random variable @xmath231 is a backward @xmath20-stopping time .",
    "@xmath246 is such that for all @xmath208 , @xmath247 , and for all @xmath248 , @xmath71 is @xmath151-measurable .",
    "further , if @xmath208 , @xmath249 , then @xmath233 .",
    "let @xmath250 \\times[0 , t ] \\times\\omega$ ] be the ( random ) domain defined by@xmath251 the function @xmath252 progressively measurable .",
    "equation ( [ eqnast ] ) holds almost surely on @xmath253 .",
    "existence of solutions to ( [ eqnast ] ) can be proved by a standard iteration argument and the it isometry .",
    "since @xmath2 is always assumed to be at least lipschitz , we know pathwise uniqueness holds for ( [ eqnast ] ) .",
    "[ dfnminimalexistencetime]we say @xmath96 is a minimal existence time of ( [ eqnast ] ) if the following conditions hold .    1",
    ".   there exists a process @xmath48 which is a solution to ( [ eqnast ] ) with respect to the backward stopping time @xmath96 .",
    "2 .   for any solution @xmath254 to ( [ eqnast ] ) with respect to the backward stopping time @xmath255 , we have @xmath256 almost surely .",
    "[ rmkminimalexistencetimeexistence1]the existence of the minimal existence time can be seen as follows .",
    "first , let @xmath257 and @xmath258 be two solutions to ( [ eqnast ] ) .",
    "as long as the drift @xmath2 is regular enough ( lipschitz , e.g. ) , strong uniqueness will guarantee that almost surely , for every @xmath259 , @xmath260 .",
    "zorn s lemma will now show the existence of the minimal existence time .",
    "in this section we prove theorem  [ thmslnsnoslip ] . first , we know from @xcite that spatial derivatives of @xmath48 can be interpreted as the limit ( in probability ) of the usual difference quotient .",
    "in fact , for regular enough velocity fields @xmath2 ( extended to all of @xmath80 ) , the process @xmath48 can , in fact , be chosen to be a flow of diffeomorphisms of @xmath80 ( see , e.g. , @xcite ) in which case @xmath48 is surely differentiable in space . interpreting the jacobian of  @xmath48 as either the limit ( in probability ) of the usual difference quotient or as the jacobian of the stochastic flow of diffeomorphism , we know @xcite that  @xmath115 satisfies the equation @xmath261 obtained by formally differentiating ( [ eqnast ] ) in space .",
    "here @xmath262 denotes the @xmath183 identity matrix .",
    "we reiterate that equation ( [ eqngradast ] ) is an ode as the wiener process is independent of the spatial parameter .",
    "[ lmawequation]let @xmath263 be as in theorem [ thmslnsnoslip ] , @xmath96 be the backward exit time from @xmath60 [ equation ( [ eqnentrancetimedef ] ) ] and @xmath48 be the solution to ( [ eqnast ] ) with respect to the backward stopping time @xmath96 .    1 .   let @xmath264 ; c^1(\\bar d))$ ] be the solution of ( [ eqnbarwpde ] ) with initial data ( [ eqnbarwinitialdata ] ) and boundary conditions @xmath265 then , for @xmath118 defined by ( [ eqnwdef ] ) , we have @xmath266 .",
    "2 .   let @xmath118 be defined by ( [ eqnwdef ] ) and @xmath266 as above .",
    "if for all @xmath267 $ ] , @xmath268 and @xmath126 is @xmath269 in time , then @xmath126 satisfies @xmath270 where @xmath271 is defined by @xmath272 and @xmath273 is the set of all @xmath274 for which the limit on the right - hand side exists .",
    "further , @xmath126 has initial data @xmath34 and boundary conditions ( [ eqnbarwdirichletbc ] ) .    before proceeding any further ,",
    "we first address the relationship between the two assertions of the lemma .",
    "we claim that if @xmath275 , then equation  ( [ eqnbarwpdewithl ] ) reduces to equation ( [ eqnbarwpde ] ) .",
    "this follows immediately from the next proposition .",
    "[ ppngeneratorat]if @xmath276 , then for any @xmath267 $ ] , @xmath277 and further , @xmath278 .    omitting the spatial variable for notational convenience , the backward it formula gives @xmath279 \\,dr + \\sqrt{2\\nu } \\int _ { s { \\vee}\\sigma_t}^t { \\nabla}\\phi{|}_{a_{r , t } } \\,dw_r.\\end{aligned}\\ ] ]",
    "since @xmath280 is a backward @xmath20-stopping time , the second term above is a  martingale .",
    "thus @xmath281 \\,dr\\\\ & = & ( u_t \\cdot{\\nabla})\\phi- \\nu{\\triangle}\\phi\\end{aligned}\\ ] ] since the process @xmath48 has continuous paths and @xmath282 on the interior of @xmath60 .",
    "[ rmkweakerregularity ] one can weaken the regularity assumptions on @xmath2 in the statement of theorem [ thmslnsnoslip ] by instead assuming for all @xmath283 $ ] , @xmath284 and is @xmath269 in time , as with the second assertion of lemma [ lmawequation ] . however , while the formal calculus remains essentially unchanged , there are a couple of technical points that require attention .",
    "first , when assumptions on smoothness of @xmath2 up to the boundary is relaxed ( or when @xmath65 is irregular ) , a  lipschitz extension of @xmath2 need not exist . in this case , we can no longer use  ( [ eqnentrancetimedef ] ) to define @xmath96 .",
    "further , we can not regard the process @xmath48 as a stochastic flow of diffeomorphisms and some care has to be taken when differentiating it .",
    "these issues can be addressed using relatively standard techniques and once they are sorted out , the proof of theorem  [ thmslnsnoslip ] remains unchanged .",
    "now we prove the first assertion of lemma [ lmawequation ] .",
    "@xmath285recall that @xmath286 is differentiable in @xmath152 . differentiating ( [ eqngradast ] ) in  @xmath152 and transposing the matrices",
    "gives @xmath287 let @xmath267 $ ] , @xmath208 and @xmath255 be any backward @xmath20-stopping time with @xmath288 almost surely .",
    "omitting the spatial variable for convenience , the backward it formula and equations ( [ eqnbarwpde ] ) and ( [ eqngradtast ] ) give @xmath289 thus , taking expected values gives @xmath290 recall that when @xmath88 , @xmath291 .",
    "thus , choosing @xmath292 and using the boundary conditions ( [ eqnbarwdirichletbc ] ) and initial data ( [ eqnbarwinitialdata ] ) , we have @xmath293 substituting this in ( [ eqnbarwsigma ] ) completes the proof .    in order to prove the second assertion in lemma [ lmawequation ] , we will directly prove ( [ eqnbarwsigma ] ) using the backward strong markov property . before beginning the proof",
    ", we establish a few preliminaries .",
    "let @xmath60 , @xmath2 , @xmath240 , @xmath96 , @xmath48 , @xmath118 , @xmath126 be as in the second assertion of lemma [ lmawequation ] .",
    "given @xmath208 and a @xmath294 matrix @xmath295 , define the process @xmath296 to be the solution of the ode @xmath297",
    "if @xmath262 denotes the @xmath183 identity matrix , then by ( [ eqngradast ] ) we have @xmath298 for any @xmath299 .",
    "further , since the evolution equation for  @xmath300 is linear , we see @xmath301 note that for any fixed @xmath267 $ ] , the process @xmath302 is _ not _ a backward markov process .",
    "indeed , the evolution of @xmath303 at any time @xmath66 depends on the time @xmath152 through the process @xmath71 appearing on the right - hand side in  ( [ eqngradast ] ) . however , process @xmath304 [ or equivalently the process @xmath305 is a backward markov process since the evolution of this system now only depends on the state .",
    "this leads us to the following identity which is the essence of proof of the second assertion in lemma [ lmawequation ] .",
    "[ lmamarkov ] choose any backward @xmath20-stopping time @xmath255 with @xmath306 almost surely",
    ". then @xmath307\\\\[-8pt ] & & \\qquad = \\mathop{\\bigl [ e b_{\\sigma_r(y ) , r}^*(y , m ) \\bar w_{\\sigma_r(y ) } \\circ a_{\\sigma _",
    "r(y ) , r}(y ) \\bigr ] _ { r = \\sigma ' , y = a_{\\sigma ' , t}(x),}}_{\\hspace*{150pt } m = b_{\\sigma ' , t}(x , i)}\\nonumber\\end{aligned}\\ ] ] holds almost surely .",
    "this follows from an appropriate application of the backward strong markov property . while this is easily believed , checking that the strong markov property applies in this situation requires a little work and will distract from the heart of the matter .",
    "thus , we momentarily postpone the proof of lemma [ lmamarkov ] and proceed with the proof of the second assertion of lemma [ lmawequation ] .",
    "proof of lemma [ lmawequation ] we recall @xmath308 where @xmath118 is defined by ( [ eqnwdef ] ) . by our assumption on @xmath2 and @xmath65 , the boundary conditions ( [ eqnbarwdirichletbc ] ) and initial data ( [ eqnbarwinitialdata ] ) are satisfied . for convenience , when @xmath309 , @xmath61 , we define @xmath310 and when @xmath311 , @xmath312 , we define @xmath313 .",
    "let @xmath208 , @xmath314 $ ] as used before .",
    "let @xmath255 be any backward @xmath20-stopping time with @xmath288 .",
    "first , if @xmath292 almost surely , then , since the point @xmath315 belongs to the parabolic boundary @xmath316 ) { \\stackrel{\\mathrm{def}}{=}}({\\partial}d \\times[0 , t ] ) \\cup(d \\times\\{0\\})$ ] , our boundary conditions and initial data will guarantee  ( [ eqnbarwsigma ] ) .",
    "now , for arbitrary @xmath288 , we will use lemma [ lmamarkov ] to deduce ( [ eqnbarwsigma ] ) directly .",
    "indeed , @xmath317 _ { r = \\sigma ' , y = a_{\\sigma ' , t}(x),}}_{\\hspace*{150pt } m = b_{\\sigma ' , t}(x , i ) } \\bigr)\\\\ & = & e \\bigl ( \\mathop{\\bigl [ m^ * e b_{\\sigma_r(y ) , r}^*(y , i ) \\bar w_{\\sigma_r(y ) } \\circ a_{\\sigma_r(y ) , r}(y ) \\bigr ] _ { r = \\sigma ' , y = a_{\\sigma ' ,",
    "t}(x),}}_{\\hspace*{160pt } m = b_{\\sigma ' , t}(x , i ) } \\bigr)\\\\ & = & e { { \\nabla}{^*}}a_{\\sigma',t}(x ) \\bar w_{\\sigma ' } \\circ a_{\\sigma ' , t}(x),\\end{aligned}\\ ] ] showing that ( [ eqnbarwsigma ] ) holds for any backward @xmath20 stopping time @xmath288 .",
    "now , choose @xmath318 for @xmath319 . note that for any @xmath208 , we must have @xmath230 almost surely . thus , omitting the spatial coordinate for convenience , we have @xmath320   \\\\ & & \\hphantom{\\lim_{s \\to t^- } \\biggl ( } { } + \\frac{1}{t - s } e ( \\bar w_t - \\bar w_{s { \\vee}\\sigma_t } ) \\circ a_{s { \\vee}\\sigma_t , t } \\\\ & & \\hphantom{\\lim_{s \\to t^- } \\biggl ( } { } + \\frac{1}{t - s } e ( i - { { \\nabla}{^*}}a_{s { \\vee}\\sigma_t , t } ) \\bar w_{s { \\vee}\\sigma_t } \\circ a_{s { \\vee}\\sigma_t , t } \\biggr ) \\\\ & = & l_t \\bar w_t + { \\partial}_t \\bar w_t + ( { { \\nabla}{^*}}u_t ) \\bar w_t,\\end{aligned}\\ ] ] on the interior of @xmath60 .",
    "the proof is complete .",
    "it remains to prove lemma [ lmamarkov ] .",
    "@xmath321    proof of lemma [ lmamarkov ] @xmath321define the stopped processes @xmath322 and @xmath323 . define the process @xmath324 by @xmath325 note that for any given @xmath66 , we know that @xmath82 need not be @xmath151 measurable .",
    "however , @xmath326 _ is _ an @xmath151 measurable backward @xmath20-stopping time .",
    "thus , @xmath139 , @xmath327 and , consequently , @xmath328 are all @xmath151 measurable .",
    "now we claim that almost surely , for @xmath329 , we have the backward semigroup identity @xmath330 to prove this , consider first the third component of the left - hand side of  ( [ eqncsemigroup ] ) : @xmath331 consider the event @xmath332 . by the semigroup property for @xmath48 and strong existence and uniqueness of solutions to ( [ eqnast ] ) , we have @xmath333 almost surely .",
    "thus , almost surely on @xmath332 , we have @xmath334 now consider the event @xmath335 . we know @xmath336 and so .",
    "this gives @xmath337 almost surely on @xmath338 .",
    "therefore , we have proved almost sure equality of the third components in equation ( [ eqncsemigroup ] ) .",
    "for the first component @xmath339 , consider as before the case @xmath209 . in this case @xmath340 and the semigroup property of @xmath48 gives equality of the first components in ( [ eqncsemigroup ] ) almost surely on @xmath332 .",
    "when @xmath341 , as before , @xmath342 and @xmath343 .",
    "thus , @xmath344 almost surely on @xmath345 .",
    "this shows almost sure equality of the first components in equation ( [ eqncsemigroup ] ) .",
    "almost sure equality of the second components follows similarly , completing the proof of ( [ eqncsemigroup ] ) .",
    "now , for @xmath329 , the random variable @xmath328 is @xmath151 measurable and so must be independent of @xmath346 .",
    "this , along with ( [ eqncsemigroup ] ) , will immediately guarantee the markov property for @xmath324 .",
    "since the filtration @xmath347 satisfies the usual conditions and for any fixed @xmath20 the function @xmath348 is continuous , @xmath324 satisfies the strong markov property ( see , e.g. , @xcite , theorem 2.4 ) .",
    "thus , for any fixed @xmath226 $ ] and any borel function @xmath349 , the strong markov property gives @xmath350\\mathop{{}_{\\hspace*{-58pt } r = \\sigma',}}_{\\hspace*{-1pt } ( y , m , \\tau ) = c_{0 , \\sigma'}(x , i , 0 ) } \\\\ & = & [ e \\varphi ( c_{r , t}(y , m , \\tau ) ) ] \\mathop{{}_{\\hspace*{-22pt } r = \\sigma ' , y = a_{\\sigma ' , t}(x),}}_{\\hspace*{-1pt}m = b_{\\sigma',t}(x , i ) , \\tau = \\sigma_r(x ) , } \\end{aligned}\\ ] ] = 0.2em plus 0.05em minus 0.02em almost surely for any @xmath351 , @xmath352 , @xmath353 . choosing @xmath354 proves ( [ eqnmarkov ] ) .",
    "now a direct computation shows that if @xmath126 satisfies ( [ eqnbarwpde ] ) , then @xmath123 satisfies ( [ eqnnavierstokes ] ) regardless of our choice of @xmath117 .",
    "of course , we will only get the no - slip boundary conditions with the correct choice of @xmath117 .",
    "we first obtain the pde for @xmath2 .",
    "[ lmaupde]if @xmath126 satisfies ( [ eqnbarwpde ] ) and @xmath123 , then @xmath2 satisfies ( [ eqnnavierstokes ] ) and  ( [ eqnincompressibility ] ) .    by definition of the leray ",
    "hodge projection , @xmath355 for some function @xmath130 and equation ( [ eqnincompressibility ] ) is automatically satisfied .",
    "thus , using equation ( [ eqnbarwpde ] ) we have @xmath356\\\\[-8pt ] & & \\qquad { } + { \\partial}_t { \\nabla}q_t + ( u_t \\cdot{\\nabla } ) { \\nabla}q_t + ( { { \\nabla}{^*}}u_t ) { \\nabla}q_t - \\nu{\\triangle}{\\nabla}q_t = 0.\\nonumber\\end{aligned}\\ ] ] defining @xmath8 by @xmath357 equation ( [ eqnuns1 ] ) becomes ( [ eqnnavierstokes ] ) .",
    "now to address the no - slip boundary condition .",
    "the curl of @xmath126 satisfies the vorticity equation which is how the vorticity enters our boundary condition .",
    "[ lmacurlw]let @xmath126 be a solution of ( [ eqnbarwpde ] ) .",
    "then @xmath358 satisfies the vorticity equation @xmath359    we only provide the proof for @xmath360 . for this proof",
    "we will use subscripts to indicate the component instead of time as we usually do .",
    "if @xmath361 are all distinct , let @xmath362 denote the signature of the permutation @xmath363 . for convenience ,",
    "we let @xmath364 if @xmath365 are not all distinct . using the einstein summation convention",
    ", @xmath358 translates to @xmath366 on components .",
    "thus , taking the curl of ( [ eqnbarwpde ] ) gives @xmath367 because @xmath368 .",
    "making the substitutions @xmath369 and @xmath370 in the last sum above we have @xmath371 where @xmath372 denotes the kronecker delta function and the last equality follows because @xmath373 .",
    "thus , ( [ eqnxi ] ) reduces to ( [ eqncurlw ] ) .",
    "theorem [ thmslnsnoslip ] now follows from the above lemmas .",
    "proof of theorem [ thmslnsnoslip]first , suppose @xmath2 is a solution of the navier ",
    "stokes equations , as in the statement of the theorem .",
    "we choose @xmath117 as explained in remark  [ rmktildewchoice ] .",
    "notice that our assumptions on @xmath2 and @xmath60 will guarantee a classical solution to ( [ eqnbarwpde])([eqnbarwboundaryconditions ] ) exists on the interval @xmath374 $ ] and thus , such a choice is possible .    by lemma [ lmawequation ]",
    "we see that for @xmath118 defined by ( [ eqnwdef ] ) , the expected value @xmath266 satisfies ( [ eqnbarwpde ] ) with initial data ( [ eqnbarwinitialdata ] ) and boundary conditions  ( [ eqnbarwdirichletbc ] ) . by our choice of @xmath117 and uniqueness to the dirichlet problem ( [ eqnbarwpde ] ) , ( [ eqnbarwinitialdata ] ) and ( [ eqnbarwdirichletbc ] ) , we must have the vorticity boundary condition ( [ eqnbarwboundaryconditions ] ) .",
    "now , let @xmath358 and @xmath375 .",
    "by lemma [ lmacurlw ] , we see that @xmath164 satisfies the vorticity equation ( [ eqncurlw ] ) .",
    "since @xmath2 satisfies ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) , it is well known ( see , e.g. , @xcite or the proof of lemma [ lmacurlw ] ) that @xmath376 also satisfies @xmath377 from ( [ eqnbarwboundaryconditions ] ) we know @xmath378 on @xmath379 $ ] . by ( [ eqnbarwinitialdata ] )",
    ", we see that @xmath380 and hence , @xmath378 on the parabolic boundary @xmath381)$ ] .",
    "the above shows that @xmath376 and @xmath164 both satisfy the same pde [ equations  ( [ eqncurlw ] ) or ( [ eqnvorticity ] ) ] with the same initial data and boundary conditions and so we must have @xmath382 on @xmath383 $ ] .",
    "thus , @xmath384 in @xmath385 $ ] showing @xmath2 and  @xmath126 differ by a gradient .",
    "since @xmath386 and @xmath59 on @xmath379 $ ] , we must have @xmath387 proving ( [ eqnunoboundaryscorrect ] ) .    to see uniqueness of @xmath117 , note that regardless of our choice of @xmath117 , lemma [ lmawequation ] shows that @xmath126 satisfies ( [ eqnbarwpde ] ) with initial data ( [ eqnbarwinitialdata ] ) . now ,",
    "if ( [ eqnunoboundaryscorrect ] ) holds , then @xmath2 and @xmath126 must only differ by a gradient , and so @xmath124 in @xmath60 . by continuity , this must also hold on @xmath65 , and thus ( [ eqnuvorticitybc ] ) must hold .",
    "but , by definition of @xmath118 , we must have @xmath117 to be the boundary values of @xmath118 .",
    "since the solution to ( [ eqnbarwpde ] ) with initial data ( [ eqnbarwinitialdata ] ) and boundary conditions ( [ eqnbarwboundaryconditions ] ) is unique , @xmath117 is uniquely determined .",
    "conversely , assume we have a solution to the system ( [ eqnast ] ) , ( [ eqnwdef ] ) and  ( [ eqnunoboundaryscorrect ] ) .",
    "as stated above , lemma [ lmawequation ] shows @xmath308 satisfies  ( [ eqnbarwpde ] ) with initial data  ( [ eqnbarwinitialdata ] ) . by lemma [ lmaupde ]",
    "we know @xmath2 satisfies the equation ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) with initial data @xmath34 . finally , since equation ( [ eqnunoboundaryscorrect ] ) shows @xmath124 in @xmath383 $ ] and by continuity",
    ", we have the boundary condition ( [ eqnuvorticitybc ] ) .",
    "the vorticity is a quantity which is of fundamental importance , both for the physical and theoretical aspects of fluid dynamics . to single out one among the numerous applications of vorticity",
    ", we refer the reader to two classical criterion which guarantee global and existence and regularity of the navier ",
    "stokes equations provided the vorticity is appropriately controlled : the first due to beale , kato and majda @xcite and the second due to constantin and fefferman @xcite .    for the euler equations , exact identities and conservation laws governing the evolution of vorticity",
    "are well known .",
    "for instance , vorticity transport [ equation ( [ eqneulervorttransport ] ) ] shows that the vorticity at time @xmath20 followed along streamlines is exactly the initial vorticity stretched by the jacobian of the flow map .",
    "similarly , the conservation of circulation [ equation ( [ eqneulercirculation ] ) ] shows that the line integral of the velocity ( which , by stokes theorem , is a surface integral of the vorticity ) computed along a closed curve that is transported by the fluid flow is constant in time .",
    "prior to @xcite , these identities were unavailable for the navier  stokes equations . in @xcite ,",
    "the authors provide analogues of these identities for the navier ",
    "stokes equations in the absence of boundaries .",
    "these identities , however , do not always prevail in the presence of boundaries .    in this section",
    "we illustrate the issues involved by considering three inviscid identities .",
    "all three identities generalize perfectly to the viscous situations without boundaries . in the presence of boundaries , the first identity ( vorticity transport )",
    "generalizes perfectly , the second identity ( ertel s theorem ) generalizes somewhat unsatisfactorily and the third identity ( conservation of circulation ) has no nontrivial generalization in the presence of boundaries .",
    "let @xmath388 be a solution to the euler equations with initial data @xmath34 .",
    "let @xmath17 the inviscid flow map defined by ( [ eqneulerxdef ] ) and for any @xmath5 , let @xmath28 be the spatial inverse of the diffeomorphism @xmath13 .",
    "the vorticity transport ( or cauchy formula ) states @xmath389 \\circ a^0_t , & \\quad   if $ d = 3 $ , } \\iffalse\\text{)}\\fi\\ ] ] where we recall that the vorticity @xmath390 is defined by @xmath391 and where @xmath392 is the initial vorticity .    in @xcite ,",
    "the authors obtained a natural generalization of ( [ eqneulervorttransport ] ) for the navier ",
    "stokes equations in the absence of spatial boundaries .",
    "if @xmath2 solves  ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) with initial data @xmath34 and @xmath23 is the noisy flow map defied by ( [ eqnxdef])([eqnx0 ] ) , then @xmath375 is given by @xmath393    we now provide the generalization of this in the presence of boundaries .",
    "note that for any @xmath5 , @xmath394 , so we can rewrite ( [ eqnnsvorttransport ] ) completely in terms of the process @xmath48 .",
    "now , as usual , we replace @xmath395 with the solution of ( [ eqnast ] ) with respect to the minimal existence time @xmath96 .",
    "we recall that in theorem [ thmslnsnoslip ] , in addition to `` starting trajectories at the boundary , '' we had to correct the expression for the velocity by the boundary values of a related quantity ( the vorticity ) . for the vorticity , however , we need no additional correction and the interior vorticity is completely determined given  @xmath48 , @xmath96 and the vorticity on the parabolic boundary)$ ] is defined to be @xmath396 . ]",
    "@xmath381)$ ] .",
    "[ ppnvorticityrep]let @xmath2 be a solution to ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) in @xmath60 with initial data @xmath34 and suppose @xmath397 \\times\\bar d)$ ] .",
    "let @xmath398 denote the values of @xmath376 on the parabolic boundary @xmath381)$ ] .",
    "explicitly , @xmath398 is defined by @xmath399 then , @xmath400 , & \\quad if $ d = 2$,\\cr e \\bigl [ \\bigl({\\nabla}a_{\\sigma_t(x ) , t}(x ) \\bigr){^{-1}}\\tilde\\omega_{\\sigma_t(x ) } \\bigl ( a_{\\sigma_t(x ) , t}(x ) \\bigr ) \\bigr ] , & \\quad if $ d = 3$. } \\ ] ]    [ ppnvorticityeq]more generally , suppose @xmath398 is any function defined on the parabolic boundary of @xmath383 $ ] and let @xmath376 be defined by ( [ eqnomegarep ] ) .",
    "if for all @xmath267 $ ] , @xmath401 and @xmath376 is @xmath269 in time , then @xmath402 satisfies @xmath403 with @xmath404 on the parabolic boundary . here",
    ", @xmath271 is the generator of @xmath405 ; @xmath273 is the domain of @xmath271 .",
    "these are defined in the statement of lemma  [ lmawequation ] .",
    "of course , proposition [ ppnvorticityeq ] , along with proposition [ ppngeneratorat ] and uniqueness of ( strong ) solutions to ( [ eqnvorticity ] ) , will prove proposition [ ppnvorticityrep ] .",
    "however , direct proofs of both proposition [ ppnvorticityeq ] and proposition [ ppnvorticityrep ] are short and instructive and we provide independent proofs of each .",
    "proof of proposition [ ppnvorticityrep]we only provide the proof when @xmath406 . as shown before , differentiating ( [ eqngradast ] ) in space and taking the matrix inverse of both sides gives @xmath407 almost surely . now choose any @xmath208 , @xmath61 and any backward @xmath20-stopping time @xmath288 . omitting the spatial parameter for notational convenience",
    ", the backward it formula gives @xmath408 thus , taking expected values gives @xmath409.\\ ] ] choosing @xmath292 and using the fact that @xmath410 always belongs to the parabolic boundary finishes the proof .",
    "proof of proposition [ ppnvorticityeq ] again , we only consider the case .",
    "we will prove equation ( [ eqnomegamarkov ] ) directly and then deduce ( [ eqnvorticity ] ) .",
    "let the process  @xmath300 be as in the proof of the second assertion of lemma [ lmawequation ] and use @xmath411 to denote the process consisting of _ matrix _ inverses of the process @xmath300 .",
    "pick @xmath208 , @xmath412 $ ] and a backward @xmath20-stopping time @xmath288 . using ( [ eqnmarkov ] ) we have @xmath413\\\\ & = & e e_{\\mathcal f_{\\sigma',t } } \\bigl [ b_{\\sigma_t(x),t}{^{-1}}(x , i ) \\tilde\\omega_{\\sigma_t(x ) } \\circ a_{\\sigma_t(x),t}(x ) \\bigr]\\\\ & = & e \\bigl ( \\bigl [ e b_{\\sigma_r(y),r}{^{-1}}(y , m ) \\tilde\\omega_{\\sigma_r(y ) } \\circ a_{\\sigma_r(y),r}(y ) \\bigr]\\mathop { { } _ { r = \\sigma ' , y = a_{\\sigma',t}(x),}}_{\\hspace*{-15pt}m = b_{\\sigma',t}(x , i ) } \\bigr)\\\\ & = & e \\bigl ( \\bigl [ m{^{-1}}e b_{\\sigma_r(y),r}{^{-1}}(y , i ) \\tilde\\omega_{\\sigma _ r(y ) } \\circ a_{\\sigma_r(y),r}(y ) \\bigr]\\mathop { { } _ { r = \\sigma ' ,",
    "y = a_{\\sigma',t}(x),}}_{\\hspace*{-15pt}m = b_{\\sigma',t}(x , i ) } \\bigr)\\\\ & = & e [ ( { \\nabla}a_{\\sigma',t}(x ) ) { ^{-1}}\\omega_{\\sigma ' } \\circ a_{\\sigma',t}(x ) ] , \\end{aligned}\\ ] ] proving ( [ eqnomegamarkov ] ) .    as stated before , choose @xmath66 and @xmath414 . omitting the spatial parameter for notational",
    "convenience gives @xmath415\\\\ & = & \\lim_{s \\to t^- } \\biggl ( \\frac{1}{t - s } [ \\omega_t - e\\omega_t \\circ a_{\\sigma_t { \\vee}s , t } ] \\\\ & & \\hphantom{\\lim_{s \\to t^- } \\biggl ( } { } + \\frac{1}{t - s } e [ \\omega_t - \\omega_{\\sigma_t{\\vee}s } ] \\circ a_{\\sigma_t{\\vee}s , t } \\\\ & & \\hphantom{\\lim_{s \\to t^- } \\biggl ( } { } + \\frac{1}{t - s } e [ i - ( { \\nabla}a_{\\sigma_t { \\vee}s , t } ) { ^{-1 } } ] \\omega_{\\sigma_t{\\vee}s } \\circ a_{\\sigma_t{\\vee}s , t } \\biggr ) \\\\ & = & l_t \\omega_t + { \\partial}_t \\omega_t - ( { \\nabla}u_t ) \\omega_t.\\end{aligned}\\ ] ]    we remark that the vorticity transport in propositions [ ppnvorticityrep ] or [ ppnvorticityeq ] can be used to provide a stochastic representation of the navier  stokes equations . to see this",
    ", first note that the proofs of propositions [ ppnvorticityrep ] and [ ppnvorticityeq ] are independent of theorem [ thmslnsnoslip ] .",
    "next , since @xmath2 is divergence free , taking the curl twice gives the negative laplacian .",
    "thus , provided boundary conditions on  @xmath2 are specified , we can obtain @xmath2 from @xmath376 by @xmath416 therefore , in theorem [ thmslnsnoslip ] we can replace ( [ eqnunoboundaryscorrect ] ) by ( [ eqnomegarep ] ) and ( [ eqnbiotsavart ] ) , where  @xmath398 is the vorticity on the parabolic boundary and we impose @xmath11-dirichlet boundary conditions on ( [ eqnbiotsavart ] ) .      as shown above , we use a superscript of @xmath11 to denote the appropriate quantities related to the euler equations . for this section",
    "we also assume @xmath406 .",
    "ertel s theorem says that if @xmath417 is constant along trajectories of @xmath17 , then so is @xmath418 .",
    "hence , @xmath419 satisfies the pde @xmath420    for the navier ",
    "stokes equations , we first consider the situation without boundaries .",
    "let @xmath2 solve ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) , @xmath23 be defined by ( [ eqnxdef ] ) , @xmath48 be the spatial inverse of @xmath23 and define @xmath164 by @xmath421 where @xmath422 is the initial vorticity . from ( [ eqnnsvorttransport ] )",
    "we know that @xmath423 .",
    "now we can generalize ertel s theorem as follows :    [ ppnertelnoboundaries ] let @xmath46 be a @xmath424 valued process .",
    "if @xmath46 is constant along trajectories of the ( stochastic ) flow @xmath23 , then so is @xmath425 .",
    "hence , @xmath426 satisfies the pde @xmath427 with initial data @xmath428 .    if @xmath46 is constant along trajectories of @xmath23 , we must have @xmath429 almost surely .",
    "thus , @xmath430 which is certainly constant along trajectories of @xmath23 .",
    "the pde for @xmath274 now follows immediately .",
    "now , in the presence of boundaries , this needs further modification .",
    "let  @xmath48 be a solution to ( [ eqnast ] ) and @xmath96 be the backward exit time of @xmath48 from @xmath60 .",
    "the notion of `` constant along trajectories '' now corresponds to processes @xmath46 defined  by @xmath431 for some function @xmath432 defined on the parabolic boundary of @xmath60 .",
    "irrespective of the regularity of @xmath60 and @xmath432 , the process @xmath46 will not be continuous in space , let alone differentiable .",
    "the problem arises because while @xmath48 is regular enough in the spatial variable , the existence time @xmath101 is not .",
    "thus , we are forced to avoid derivatives on @xmath96 in the statement of the theorem , leading to a somewhat unsatisfactory generalization .",
    "[ ppnertelboundaries ] let @xmath432 be a @xmath269 function defined on the parabolic boundary of @xmath383 $ ] and let @xmath433 be any @xmath269 extension of @xmath432 , defined in a neighborhood of the parabolic boundary of @xmath383 $ ] .",
    "if @xmath46 is defined by ( [ eqnthetabdddef1 ] ) , then @xmath434_{s = \\sigma_t(x)}\\ ] ] satisfies the pde ( [ eqnphipde ] ) with initial data @xmath435 and boundary conditions @xmath436 for @xmath241 .",
    "a satisfactory generalization in the scenario with boundaries would be to make sense of @xmath437 ( despite the spatial discontinuity of  @xmath46 ) and reformulate proposition [ ppnertelboundaries ] accordingly .    note that when @xmath438 , then @xmath439 and hence , @xmath440 . in this case proposition [ ppnertelboundaries ]",
    "reduces to proposition  [ ppnertelnoboundaries ] .",
    "the proof of proposition  [ ppnertelboundaries ] is identical to that of proposition  [ ppnertelnoboundaries ] and the same argument obtains @xmath441_{s = \\sigma_t(x ) } = [ ( \\xi_s \\cdot{\\nabla } ) \\tilde\\theta'_s ( y ) ] \\mathop{{}_{\\hspace*{-16pt } s = \\sigma_t(x),}}_{y = a_{\\sigma_t(x),t}(x)},\\ ] ] which immediately implies ( [ eqnphipde ] ) .",
    "the circulation is the line integral of the velocity field along a closed curve . for the euler equations ,",
    "the circulation along a closed curve that is transported by the flow is constant in time .",
    "explicitly , let @xmath388 , @xmath17 , @xmath442 , @xmath34 be as in the previous subsection . let @xmath443 be a rectifiable closed curve , then for any @xmath5 , @xmath444 for the navier  stokes equations , without boundaries , a generalization of  ( [ eqneulercirculation ] ) was considered in @xcite .",
    "let @xmath2 solve ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) , @xmath23 be defined by  ( [ eqnxdef ] ) and ( [ eqnx0 ] ) and @xmath48 be the spatial inverse of @xmath23 .",
    "then @xmath445    a proof of this ( in the absence of boundaries ) follows immediately from theorem [ thmslns ] .",
    "indeed , @xmath446\\\\[-8pt ] & = & e \\oint_\\gamma{\\mathbf{p } } [ ( { { \\nabla}{^*}}a_t ) u_0 \\circ a_t ] \\cdot dl = \\oint_\\gamma u_t \\cdot dl,\\nonumber\\end{aligned}\\ ] ] where the first equality follows by definition of line integrals , the second because the line integral of gradients along closed curves is @xmath11 and the last by fubini and ( [ eqnaveragedwebber ] ) .    equation ( [ eqnnscirculation ] ) does not make sense in the presence of boundaries , as the curves one integrates over will no longer be rectifiable !    in the presence of boundaries , there are certain obstructions to making this work .",
    "let @xmath48 , @xmath96 , @xmath117 be as in the statement of theorem [ thmslnsnoslip ] .",
    "we extend @xmath117 to the parabolic boundary @xmath381)$ ] by defining @xmath447 for @xmath208 .",
    "now we would expect the natural generalization of ( [ eqnnscirculation ] ) to be @xmath448 we remark again , that though @xmath59 on @xmath65 , we must have a nonzero contribution from trajectories starting on the side of the cylinder @xmath383 $ ] .",
    "however , the integral on the right is not well defined , as the curve @xmath449 is not necessarily rectifiable !    now , as with ertel s theorem , we can try and avoid irregularities from @xmath96 when we transport @xmath443 . indeed ,",
    "almost tautologically we have @xmath450 \\cdot dl(x).\\ ] ] further , if @xmath439 , the right - hand side of equation ( [ eqncirculationwithboundaries ] ) is exactly the right - hand side of ( [ eqnnscirculation ] ) .    of course ,",
    "if we had a backward @xmath20-stopping time @xmath255 such that almost surely @xmath451 on @xmath443 , _ and _ , @xmath255 is lipschitz in space , then following ( [ eqnconscirculationproof ] ) we would certainly have @xmath452 with the random velocity @xmath118 ( not @xmath2 ) on the right .",
    "however , it is not clear any such ( nontrivial ) @xmath255 exist . however ( [ eqncirculationwithboundaries ] ) is essentially a tautological rephrasing of ( [ eqnaveragedwebber ] ) , and does not capture the essence of ( [ eqnnscirculation ] )",
    ". it would be interesting indeed if one can give meaning to the right - hand side of ( [ eqnnscirculationwithboundaries ] ) , and then prove ( [ eqnnscirculationwithboundaries ] ) . at present",
    ", we are unable to carry out this construction .",
    "analogously , for the navier - stokes equations , equation ( [ eqnaveragedwebber ] ) is algebraically equivalent to an _ averaged _ vorticity transport equation    and the biot - savart law ( [ eqnbiotsavart ] ) .",
    "thus theorem [ thmslns ] is true if we replace equation ( [ eqnaveragedwebber ] ) with ( [ eqnbiotsavart ] ) and ( [ eqnnsvorttransport ] ) .",
    "if @xmath388 is the solution to the euler equations ( equations ( [ eqnnavierstokes ] ) and ( [ eqnincompressibility ] ) , with @xmath10 ) , then the well known vorticity transport says if @xmath2 is a solution to the navier - stokes equations , it is well known that the vorticity @xmath375 satisfies the equation    with boundary conditions and initial data @xmath453 where @xmath2 is a given @xmath269 vector field .",
    "an elementary calculation immediately shows that if @xmath2 is a classical solution to the incompressible navier - stokes equations , then @xmath375 is a solution to ( [ eqnvorticity ] ) .",
    "if boundary conditions are specified on @xmath2 , as is usually the case with the navier - stokes equations , then incompressibility allows us to recover @xmath2 from @xmath402 by solving the poisson equation @xmath454 with the specified boundary condition on @xmath2 .    ' '' ''    for the euler equations , equation ( [ eqneulerwebber ] ) is _ algebraically _ equivalent to vorticity transport and the biot - savart law @xcite .",
    "now , since @xmath388 is divergence free , taking the curl twice gives the negative laplacian .",
    "inverting this , expresses the velocity field in terms of the vorticity .",
    "this is the biot - savart law : where we impose periodic boundary conditions on @xmath455 .",
    "thus when we say the ( [ eqneulerwebber ] ) is algebraically equivalent to vorticity transport and the biot - savart law , we mean that    equivalent to equation ( [ eqneulerxdef ] ) and    ' '' ''    in this section we obtain a stochastic representation of ( [ eqnvorticity ] ) in @xmath60 with boundary condition ( [ eqnomegaboundary ] ) and initial data ( [ eqnomegainitial ] ) .",
    "now , further postponing the proof of theorem [ ppnvorticityrep ] , we address the relationship between theorem [ ppnvorticityrep ] and the vorticity representation in @xcite .",
    "if @xmath23 is the solution to the sde ( [ eqnxdef ] ) with initial data ( [ eqnx0 ] ) , and for any @xmath5 , @xmath456 is the spatial inverse of @xmath40 , then in the absence of spatial boundaries , @xcite*proposition 2.7 shows that @xmath376 defined by @xmath457 \\circ a_t ) \\ ] ] solves the vorticity equation ( [ eqnvorticity ] ) with initial data ( [ eqnomegainitial ] ) .",
    "consider first ( [ eqnomegarep ] ) in the case @xmath458 . in this case",
    "@xmath459 identically .",
    "further , by uniqueness of solutions , the processes @xmath460 which solves ( [ eqnxdef ] ) with initial data ( [ eqnx0 ] ) , and the process @xmath461 which solves ( [ eqnxst ] ) ( with @xmath462 ) are indistinguishable .",
    "consequently , the processes @xmath463 and @xmath464 are indistinguishable . finally , since for any @xmath5 , @xmath465 , equation ( [ eqnomegarep ] ) reduces to ( [ eqnomeganoboundariesdef ] ) when @xmath458 .",
    "next consider the case @xmath466 for all @xmath5 . in this case",
    ", we claim that if we essentially ignore all trajectories that exit @xmath60 , equation ( [ eqnomeganoboundariesdef ] ) reduces to ( [ eqnomegarep ] ) . to see this ,",
    "let @xmath467 be the exit time of the process @xmath40 from the domain @xmath60 .",
    "define the ( random ) domain @xmath468 , and @xmath469 be the spatial inverse of @xmath40 on the ( random ) domain @xmath470 .",
    "now the natural reformulation of ( [ eqnomeganoboundariesdef ] ) which ignores the contribution from trajectories that exit @xmath60 would be @xmath471\\ ] ]    as before , @xmath472 and @xmath473 are indistinguishable , and consequently @xmath474 and @xmath475 are indistinguishable is not defined outside @xmath470 . however defining @xmath456 arbitrarily outside @xmath470 will not change indistinguishability of @xmath476 and @xmath477 since @xmath478 outside @xmath470 . ] .",
    "further one can easily check that @xmath479 now , since @xmath480 , we have @xmath481 where the equality above means that the left - hand side and right - hand side are indistinguishable processes . thus ignoring the contribution from trajectories",
    "that exit reduces ( [ eqnomeganostressdef ] ) to ( [ eqnomegarep ] ) if @xmath480 .    before beginning the proof , we remark that by considering a ( regular ) function which extends @xmath2 to all of @xmath80 , and letting @xmath40 be the unique strong solution of the sde ( [ eqnxdef ] ) , we may assume that the flows @xmath40 , @xmath456 are defined on all of @xmath80 .",
    "notice that the statement of the theorem only involves knowledge of @xmath467 and @xmath40 for @xmath482 , and inside @xmath60 these are of course independent of how the function @xmath2 is extended outside @xmath60 .",
    "the proofs of both assertions of the theorem will involve rewriting ( [ eqnomeganostressdef ] ) in terms of @xmath71 and @xmath101 .",
    "note first that if @xmath71 is defined by ( [ eqnast ] ) , and @xmath231 the backward exit time in equation ( [ eqnentrancetimedef ] ) , then by uniqueness of solutions , we see that the processes @xmath40 and @xmath483 are indistinguishable . consequently @xmath456 and @xmath77 are indistinguishable .",
    "further we have @xmath484 . indeed for any @xmath485 , @xmath486 for all @xmath66 , and hence @xmath487 . for the second inclusion , if @xmath488 , we know @xmath489 and hence @xmath485 or @xmath490 .",
    "since @xmath491 , this gives @xmath492 we now provide the proof of theorem [ ppnvorticityrep ] .",
    "prove local existence of all flows in question ( track the dependence on viscosity ) .",
    "sobolev type tricks can be used with the above formulation .",
    "( i d recommend doing this later to see if anything interesting props up . )",
    "note that @xmath493 decays exponentially at a rate that depends only on @xmath60 ( independent of @xmath2 ) .",
    "perhaps this gives some added insight ?",
    "short note showing what we get from the old version if we ignore trajectories at the boundary .",
    "write in terms of @xmath494 , instead of feynman  kac type @xmath71 .",
    "the authors would like to thank the referee for suggesting various improvements to the first version of the paper ."
  ],
  "abstract_text": [
    "<S> in this paper we derive a probabilistic representation of the deterministic @xmath0-dimensional navier  stokes equations in the presence of spatial boundaries . </S>",
    "<S> the formulation in the absence of spatial boundaries was done by the authors in [ _ comm . </S>",
    "<S> pure appl . </S>",
    "<S> math . </S>",
    "<S> _ * 61 * ( 2008 ) 330345 ] . </S>",
    "<S> while the formulation in the presence of boundaries is similar in spirit , the proof is somewhat different . </S>",
    "<S> one aspect highlighted by the formulation in the presence of boundaries is the nonlocal , implicit influence of the boundary vorticity on the interior fluid velocity .    and    .    </S>"
  ]
}
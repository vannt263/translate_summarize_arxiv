{
  "article_text": [
    "the steiner tree problem is one of the most fundamental and important problems in computer science and operations research . whereas a @xmath0-approximation is easily obtained by computing a minimum spanning tree over the terminals , obtaining algorithms with an approximation guarantee bounded away from @xmath0 has proven to be a non - trivial task .",
    "the problem is known to be inapproximable to within @xmath7 , unless @xmath8  @xcite ) .",
    "there has been a long sequence of combinatorial approximation algorithms  @xcite , based on different greedy approaches , culminating in the famous @xmath9 approximation of robins and zelikovsky  @xcite .",
    "no further progress was achieved until byrka , grandoni , rothvo  and sanit  @xcite presented the first lp - based approach leading to a @xmath2 approximation .",
    "a major hindrance in the design of lp - based steiner tree algorithms is a rather poor understanding of potential lp relaxations . in particular , until the result of  @xcite , for no ( efficiently solvable ) lp relaxation of the steiner tree problem was it known whether the integrality gap was bounded away from @xmath0 .",
    "intriguingly , even though their @xmath3 approximation algorithm is based on a particular lp relaxation , its approximation guarantee is not with respect to the lp solution and does not imply a @xmath4 integrality gap for the relaxation .",
    "in  @xcite , the authors show a weaker @xmath1 integrality gap using a technique not directly linked to their algorithm .",
    "chakrabarty et al .",
    "@xcite provide a simpler alternative proof of the same bound .    the linear relaxation used by byrka et al",
    ", the _ directed component - based relaxation _ , was introduced by polzin and vahdati - daneshmand  @xcite , based in turn on an equivalent _ undirected _ component - based lp introduced by warme  @xcite .",
    "it is the undirected version that we will use in this paper .",
    "another notable relaxation is the partition - based lp introduced by knemann et al .",
    "@xcite . in  @xcite ,",
    "chakrabarty et al",
    ".  showed that this relaxation is equivalent to the others mentioned above , and introduced the term `` hypergraphic '' for this family of relaxations .",
    "they also proved that basic solutions are sparse , having support size less than the number of terminals .",
    "the limited understanding of lp relaxations of the steiner tree problem is arguably a major barrier in the design of stronger approximation algorithms .",
    "the goal of this work is to fill this gap by providing a fresh view on the component - based lp relaxation  one that heavily exploits methods and results from the theory of matroids and submodular functions .",
    "more precisely , based on the approach of byrka et al .",
    "@xcite , we present a deterministic @xmath3 algorithm that starts with a solution to the component - based lp relaxation , iteratively contracts a component and updates the lp solution . the algorithm of byrka et al .  solves the component - based lp ( through a very large extended formulation ) in each iteration after contracting , in order to again obtain a feasible solution .",
    "by contrast , we show how the lp can be modified by a simple greedy algorithm over a well - chosen matroid to achieve the same goal .",
    "this leads to a considerably faster way to update the lp , but more importantly , we show how the approximation quality of our approach can be analyzed with respect to the initial lp solution .",
    "this implies a bound of the integrality gap of the component - based lp relaxation of @xmath4 . by comparison ,",
    "the best known lower bound is @xmath10 ( e.g. , by the example of @xcite ) .",
    "furthermore , we show how the separation problem of the component - based relaxation can be reduced to computing maximum flows .",
    "whereas this result is likely to be of independent interest , it also provides a way to obtain a fast independence oracle for the matroids that we use in our approach .",
    "additionally , we further investigate the special case of quasi - bipartite graphs , which has played a central role in the design of approximation algorithms for the steiner tree problem , as well as to find @xmath11-hard problem classes . rajagopalan and vazirani  @xcite showed that the integrality gap of the bidirected cut relaxation for such graphs can be bounded by @xmath12 .",
    "this was later improved to @xmath13 @xcite and to @xmath14  @xcite .",
    "we obtain a @xmath6 bound for the integrality gap , again matching the approximation factor of  @xcite .",
    "such a bound was previously known only for the case when all edge costs are equal  @xcite .",
    "chakrabarty et al .",
    "@xcite showed that on quasi - bipartite graphs , the bidirected cut and hypergraphic relaxations are actually equivalent .",
    "however their proof is based on a duality argument , and they leave as an open problem the question of converting a solution from the bidirected cut relaxation to the hypergraphic relaxation efficiently ( more quickly than simply optimizing the hypergraphic lp ) .",
    "we present a simple algorithm to perform this transformation ; since the bidirected cut relaxation can be solved much more efficiently via a compact extended formulation , this gives a much faster method of solving the hypergraphic lp in the quasi - bipartite case . combining this result with the suggested approximation algorithm",
    ", we obtain a significantly faster @xmath6 approximation than the one of byrka et al .",
    "@xcite , since we do not need to ( repeatedly ) optimize the component - based relaxation by using either the ellipsoid method or a very large extended formulation .",
    "let @xmath15 be an undirected graph with terminals @xmath16 and edge costs @xmath17 .",
    "a _ component _",
    "@xmath18 is simply a subgraph of @xmath19 with the property that it is a tree spanning @xmath20 , all leaves of @xmath18 are terminals , and all internal nodes are non - terminals .",
    "write @xmath21 for the cost of a component @xmath18",
    ". we will frequently need the terminal set of a component @xmath22 , and so by abuse of notation , when we refer to @xmath18 as a vertex set , we mean the set @xmath23 of terminals in @xmath18 .",
    "in particular , @xmath24 refers to the number of terminals in @xmath18",
    ".    now let @xmath25 be the set of all components of @xmath19 ; we assume that all components contain at least two terminals , else they can be safely removed .",
    "we use the notation @xmath26 .",
    "then the component - based lp relaxation is as follows  @xcite :    @xmath27    borchers and du  @xcite showed that the optimal _",
    "@xmath28-restricted _ steiner tree , meaning only components with at most @xmath28 terminals can be used , has cost at most @xmath29 times the cost of an optimal steiner tree .",
    "furthermore , when restricting the variables in   to components with at most @xmath28 terminals , the resulting linear program can be solved efficiently , e.g. , by solving a polynomial - size extended formulation  @xcite .",
    "it follows that for any fixed @xmath30 , a ( @xmath31)-approximate solution to   can be obtained efficiently .",
    "we also point out in appendix  [ appendix : nphardness ] that optimizing @xmath32 exactly is strongly @xmath33-hard ( this does not seem to have been previously observed ) .",
    "the framework of our algorithm is similar to byrka et al .",
    "@xcite , and in particular , it is iterative in nature",
    ". they begin by computing a near - optimal fractional solution @xmath34 to .",
    "they then sample a component @xmath18 at random , proportional to its entry @xmath35 , and _",
    "contract _ this component .",
    "the solution @xmath34 is no longer feasible to on this new contracted instance , so they re - solve the lp and iterate this procedure until all terminals are connected .    in their analysis",
    ", they show that a single random contraction reduces the cost of the _ optimum _ steiner tree by a certain factor in each iteration .",
    "the crucial ingredient is a lower bound on the expected cost of edges that could be removed from an optimum solution after a contraction , while still obtaining a steiner tree . to obtain a bound on the integrality gap ,",
    "we need a stronger result that says even a _ fractional _",
    "solution becomes significantly cheaper after a random contraction .",
    "even for a fixed set of terminals @xmath36 , it was unclear how to modify a fractional solution in order to preserve feasibility after contraction  a question that had a simple answer in the integral case . _",
    "( should we say why ? ) _ our first goal will be to obtain an understanding of the structure of these modifications .",
    "while it can be avoided , it significantly simplifies the discussion to consider `` blown up '' versions of solutions to  .",
    "consider any @xmath37 , and let @xmath38 be such that @xmath39 for all @xmath22 .",
    "the minimal _ blowup graph _ corresponding to @xmath34 is the unweighted multigraph defined as follows .",
    "first take the disjoint union of @xmath40 disjoint copies of @xmath18 for each component @xmath18 ; then identify , for each @xmath41 , all the copies of @xmath42 .",
    "the edge costs of @xmath43 are inherited from @xmath19 in the obvious way .",
    "see figure  [ fig : blowup ] for an example of an lp solution and its associated minimal blowup graph .",
    "observe then that @xmath44 .",
    "note that @xmath43 ( along with @xmath45 , but this will remain fixed throughout ) encodes all the information in @xmath34 . in particular , given @xmath43 we can determine all of its components : these are simply the maximal connected subgraphs that are trees whose leaves are precisely the terminals spanned .",
    "thus we can define @xmath46 as the set of components of a blowup graph @xmath43 .",
    "each component @xmath47 is a subgraph of @xmath43 , but again , we will abuse notation when the context is clear and sometimes use @xmath18 to refer to just the terminals of @xmath18 .",
    "thus , e.g. , for some @xmath48 , @xmath49 refers to the terminals in @xmath18 that are also in @xmath50 .",
    "we will need slightly more generality in our definition of a blowup graph .",
    "for any @xmath51 , let @xmath52 be the multigraph obtained by first taking @xmath53 disjoint copies of @xmath19 , and then for each @xmath41 , identifying all copies of @xmath42 .",
    "for a solution @xmath54 with corresponding minimal blowup graph @xmath55 , we call a multigraph @xmath56 a ( not necessarily minimal ) blowup graph corresponding to @xmath54 if    @xmath57 for some @xmath51 ,    @xmath58 , and    for any distinct terminals @xmath59 , there is no @xmath60-@xmath42-path in @xmath56 that is not already present in @xmath55 .    any edges in @xmath56 that were not in @xmath55 we call _ pendant _ edges .",
    "we will say that a blowup graph @xmath55 is _ feasible _ if it corresponds to a feasible solution to ; otherwise we call it infeasible .",
    "note that pendant edges have no effect on feasibility ; they will always be removed in what we will later call a `` cleanup '' step .",
    "let @xmath43 be the blowup graph corresponding to some solution @xmath34 .",
    "we are interested in the situation after contracting some full component of @xmath19 . in order to avoid some annoying technicalities , for now instead of contracting @xmath36",
    "we will think of increasing the value of @xmath61 by @xmath62 .",
    "in other words , in terms of the blowup graph , we take @xmath45 fresh copies of component @xmath36 and add it to @xmath43 .",
    "we denote the new blowup graph obtained by @xmath63 .",
    "formally , @xmath63 is obtained by taking the disjoint union of @xmath43 and @xmath45 copies of @xmath36 , and then identifying all copies of @xmath42 for each @xmath41 .",
    "it is clear that @xmath63 is not feasible .",
    "we are interested in describing the set of edges @xmath64 that can be _ removed _ so that @xmath65 is feasible .",
    "this is the primary reason that it is simpler to work with the blowup graph @xmath43 rather than @xmath34 ; this modification operation is much simpler than an equivalent operation defined on @xmath34 .",
    "for example , removing a single edge from @xmath43 can have the effect of splitting up some component @xmath18 into subcomponents @xmath66 and @xmath67 ; the corresponding effect on @xmath34 is to reduce @xmath35 by @xmath68 and increase @xmath69 and @xmath70 by the same amount .",
    "unfortunately , the set of all possible edge removals is not so well behaved . in order to expose the structure we need ,",
    "we must consider _ minimal _ removals .",
    "let @xmath71 figure  [ fig : contraction ] shows an example ; after a set @xmath72 is removed , an edge of the blowup graph becomes pendant , and so can also be removed without affecting feasibility .",
    "one of the most crucial elements of our analysis is the following :    [ thm : ismatroid ] for every component @xmath36 , @xmath73 forms the set of bases of a matroid @xmath74 .",
    "in particular , it follows that any minimal removal set has the same number of edges ; this number turns out to be @xmath75 .",
    "we are able to give a precise description of the matroid @xmath74 by giving its rank function ; more details of this will be given in section  [ sec : deeper ] .",
    "we can also show that the matroid is a gammoid ( a special type of matroid related to flows ) ; see appendix  [ appendix : sep ] . as an aside",
    ", we note that @xmath74 depends only on the terminals of @xmath36 , and not its structure ; we could actually define a matroid @xmath76 for _ any _ subset @xmath50 of terminals , but this will not be important for our purposes .    we will now study which edge sets can be removed after the random contraction of a component .",
    "even though we will finally present a deterministic algorithm , this analysis will be helpful in guaranteeing the existence of removal sets with certain properties by an averaging argument .",
    "as before , let @xmath43 be the blowup graph corresponding to a feasible lp solution @xmath34 . upon contracting component @xmath36",
    ", we may remove some edges in order to again obtain a feasible solution . in particular , by theorem  [ thm : ismatroid ] , we can remove any basis of @xmath74 . for",
    "added flexibility , we allow choosing a basis @xmath77 randomly , according to any distribution we like . in this case , each edge @xmath78 will be removed with some probability @xmath79 .",
    "the probability vectors that are attainable are simply the convex combinations of incidence vectors of the bases ; in other words , precisely the vectors in @xmath80 , the base polytope of @xmath74 .",
    "now consider , as in  @xcite , randomly contracting a single component , with component @xmath81 contracted with probability @xmath82 .",
    "note that since each original component @xmath83 has @xmath84 copies in @xmath46 , this is the same as contracting a component in @xmath25 with probability proportional to @xmath85 .",
    "again , we allow ourselves to choose an arbitrary distribution over @xmath73 for removals on contracting @xmath36 , and ask what probability vectors @xmath86 describing edge removal probabilities are attainable . but any such probability vector is given by some convex combination @xmath87 , where @xmath88 .",
    "in other words , the attainable probability vectors form precisely the polytope @xmath89 given by the minkowski sum @xmath90 this implies that @xmath89 is a polymatroid  @xcite ; from our knowledge of the rank functions of the @xmath74 s , we can also describe the rank function of @xmath89 , as will be described in detail in section  [ sec : deeper ] .",
    "in the following , we use _ scaled cost _ to refer to costs reduced by a factor of @xmath45 , compensating for the blowup factor .",
    "the goal is to show that the expected scaled cost of removed edges is large , compared to the expected cost of the component that is contracted .",
    "perfection would be if we could always remove edges of total scaled cost as large as the cost of the contracted component , but of course this is not possible ( it would imply an integrality gap of @xmath62 ) .",
    "thus we lower our goals slightly . it _",
    "is _ possible to show that there is a point @xmath91 with @xmath92 for all @xmath93 .",
    "this gives an expected decrease of @xmath94 in the lp solution after scaling down , and the expected cost of the contracted component is @xmath95 ; so this implies only an uninteresting bound of @xmath0 on the integrality gap .",
    "instead , we must choose the distribution more carefully .",
    "more precisely , we will choose a well - structured subset @xmath96 and only consider removal probabilities @xmath97 whose support is contained in @xmath98 .",
    "the set @xmath98 will be chosen to be a minimal subset of @xmath99 whose removal from @xmath99 disconnects all terminals in the blowup graph .",
    "we call such a set a _",
    "_ splitting set__. interestingly , the family of all splitting sets form the bases of a cographic matroid , since @xmath100 is a splitting set precisely when @xmath101 is a spanning tree in the graph obtained from @xmath43 by contracting together all its terminals . as we will see more formally in the proof of theorem  [ thm : uniform ] , when choosing @xmath100 to be a splitting set , the set @xmath102 is nonempty for every @xmath36 , and so form the bases of the matroid @xmath103 obtained by restricting @xmath74 to @xmath100 .",
    "this implies that the polytope @xmath104 of removal probabilities we consider is nonempty , and thus forms the base polytope of the polymatroid obtained by restricting the polymatroid corresponding to @xmath89 to @xmath100 .",
    "once we have chosen some splitting set @xmath100 , we will call edges in @xmath100 _ core  edges _ , and all other edges _ cleanup  edges_. to see the reason for this name , recall that the matroid @xmath74 describes only the _ minimal _ edge removals upon contracting @xmath36",
    ". however , there may be other removals that are possible ; for @xmath72 , there may be pendant edges in @xmath105 which can be removed without having any effect on feasibility .",
    "our choice of @xmath98 ensures that for any edge @xmath106 , @xmath78 can be deleted ( `` cleaned up '' ) once enough edges of @xmath107 have been removed .",
    "but just as importantly , we can prove    [ thm : uniform ] if @xmath98 is any splitting set , then there is a distribution over @xmath108 for each @xmath81 such that if @xmath36 is chosen uniformly at random from @xmath46 , and then @xmath109 is chosen from @xmath110 according to the chosen distribution , then @xmath111    this is discussed further in section  [ sec : deeper ] .      for the accounting in our analysis , we will need to keep track of precisely which edges in @xmath112 must be removed before an edge @xmath113 can be deleted ( cleaned up ) .",
    "define @xmath114 , the _ witness set _ of edge @xmath78 , as the unique _ minimal _ set of edges such that after removing @xmath115 , @xmath78 becomes a pendant edge and can be cleaned up .",
    "the fact that there exists such a unique set is shown in lemma  [ lem : witness ] in the appendix .",
    "we also define @xmath116 if @xmath117 . figure  [ fig : witness ] shows an example of a witness set .",
    "we define a _ weight _ ( distinct from the cost ) on all core  edges in such a way that the total weight of core  edges equals the total cost of @xmath43 , by charging the cost of a cleanup  edge to the core  edges in its witness set .",
    "more precisely , let @xmath118 the following is an easy consequence of theorem  [ thm : uniform ] and the fact that @xmath119 :    [ lem : contrcosttobasis ] let @xmath100 be any splitting set .",
    "there exists some component @xmath36 such that @xmath120 , where @xmath121 is a maximum weight basis of @xmath103 .    for a given @xmath36 , a maximum weight basis of @xmath103 can be found via a greedy approach ; all that is needed is an independence oracle .",
    "this we can obtain immediately from our understanding of the rank function of @xmath103 ; it can be computed using submodular function minimization ( see in the next section ) . however , while polynomial time , this is quite slow .",
    "we can instead exploit the result that @xmath103 is a gammoid , giving a much faster independence oracle based on solving a maximum flow problem ; this is discussed in appendix  [ appendix : sep ] .",
    "we are now ready to describe precisely our deterministic algorithm , given in algorithm  [ alg ] . in the algorithm , at each stage we choose a component @xmath36 and contract it ( in the usual sense , yielding an instance with a smaller vertex set ) .",
    "thus at intermediate stages of the algorithm , @xmath43 will be a feasible blowup graph of some contraction of the original graph @xmath19 .",
    "we also emphasize that the witness sets @xmath115 , and hence also the weights @xmath122 , depend on the blowup graph in the particular iteration .",
    "@xmath123    we now define , for any blowup graph @xmath43 and splitting set @xmath98 , a potential function @xmath124 by @xmath125 where @xmath126 is the harmonic function .    [ thm : potbound ] for any minimal splitting set @xmath98 and feasible blowup graph @xmath43 , algorithm  [ alg ] yields a solution of cost at most @xmath127 .",
    "the proof of this theorem ( given in appendix  [ appendix : alg ] ) essentially boils down to showing that in a single step of the algorithm , the expected cost of the contracted component is no larger than the decrease in the potential function scaled down by @xmath68 .",
    "let @xmath128 and @xmath129 be the blowup graph and splitting set at iteration @xmath53 of the algorithm , with @xmath130 the selected removal set .",
    "we are able to show that @xmath131 , from which the theorem immediately follows .    from this",
    ", we can use an averaging argument to show the @xmath132 integrality gap bound .",
    "essentially , if @xmath98 is chosen randomly from the matroid of possible minimal splitting sets according to an appropriate distribution , it can be shown that @xmath133 it is also possible to minimize @xmath134 as a function of @xmath98 , via a dynamic program .",
    "the full proof can be found in the appendix : altogether we obtain , recalling @xmath44 ,    [ thm : ln4bound ] for any solution @xmath34 of , and choosing @xmath98 to minimize @xmath124 , algorithm  [ alg ] returns a solution of cost at most @xmath135 .",
    "we emphasize again that while we have described everything in terms of the blowup graph , it is possible to implement algorithm  [ alg ] directly in terms of the lp solution , yielding a polynomial time algorithm .",
    "details will be provided in the full version .",
    "the situation is much simplified in the case of quasi - bipartite graphs . in this case",
    ", we may choose @xmath98 to consist of all edges except for the cheapest in each component .",
    "this clearly minimizes @xmath134 , and it can be shown that    [ lem : quasi ] let @xmath136 , where @xmath137 consists of a cheapest edge from every component . then @xmath138    a @xmath139 bound on the integrality gap immediately follows from theorem  [ thm : potbound ] .",
    "one of the major drawbacks of relying on , or any of the hypergraphic lps , is that solving them is computational intensive ; in general , to obtain a @xmath31 approximation , nothing better than @xmath140 time is known .",
    "this can be improved somewhat to @xmath141 in quasi - bipartite graphs , but this is still very slow .",
    "we show how to sidestep this issue and obtain a reasonable running time for quasi - bipartite graphs by instead solving the much more tractable bidirected cut relaxation , which has only @xmath142 variables . combined with the fact that we do not need to re - solve the lp in each iteration , we obtain a markedly faster algorithm than the one of byrka et al .  @xcite .",
    "more precisely , we show how a solution to the bidirected cut relaxation can be transformed into a solution to with the same cost , via a natural greedy procedure .",
    "one step of the transformation consists of taking , from a star centered around a steiner vertex , all arcs with incoming flow and one arc with outgoing flow .",
    "this yields one component for ; the capacities are then uniformly reduced on these edges and the process is continued .",
    "the details of this are given in appendix  [ sec : equivalence ] .",
    "previously , @xcite showed that the bidirected cut relaxation always has the same objective value as the hypergraphic relaxations , suggesting that such a transformation should exist , but the question remained open .",
    "in this section , we discuss in more detail the heart of our arguments ; uncovering the matroid structure of edge removals , and showing appropriate uniform removal probabilities after the random contraction of a component .    in what follows",
    ", we will often need to refer to the terminal set of a component @xmath18 , so we will again abuse notation and write , e.g. , @xmath143 for the number of terminals in @xmath18 .",
    "define @xmath144 by @xmath145 it is immediate from that @xmath43 is feasible if and only if @xmath146 indeed , @xmath147 is , up to scaling , simply the _ slack _ ( or if negative , violation ) of the corresponding constraint in .",
    "two important properties of @xmath148 are the following :    [ lem : hsubm ] for any blowup graph @xmath43 ,    [ item : hsubm ] @xmath148 is intersecting submodular , i.e. , for any two sets @xmath149 with @xmath150 , @xmath151    [ item : boundedinc ] for any @xmath64 and @xmath152 , @xmath153 .",
    "[ item : hsubm ] ) this follows immediately from the fact that for any @xmath154 , the function @xmath155 is intersecting supermodular .",
    "[ item : boundedinc ] ) the removal of any additional edge @xmath156 from @xmath43 leads to a split of some component @xmath18 of @xmath43 into subcomponents @xmath157 with @xmath158 , @xmath159 .",
    "hence , @xmath160 which leads to @xmath161 . applying this",
    "repeatedly yields the claim .",
    "an interesting consequence , that essentially follows by intersecting submodularity of @xmath148 and standard uncrossing techniques , is that any basic feasible solution to has a support of size bounded by @xmath162 ( see , e.g. , @xcite for an example of this reasoning ) . for an equivalent version of",
    ", this result was already obtained through a rather involved technique by chakrabarty et al .",
    "@xcite .    for convenience ,",
    "define @xmath163    the following lemma describes feasibility of @xmath65 in a convenient form , and also shows that we need only consider constraints corresponding to subsets containing @xmath36 .",
    "[ lem : hstarfeas ] the blowup graph @xmath65 is feasible if and only if @xmath164 and @xmath165 for all @xmath166 .",
    "let @xmath167 .",
    "then @xmath168 is feasible iff @xmath169 for all @xmath48 , @xmath170 , with equality for @xmath171 .",
    "but @xmath172 and so this can be equivalently stated as @xmath173 for all @xmath170 , and @xmath164 .",
    "all that needs to be proved then is that only the constraints for @xmath166 need to be considered .",
    "so suppose @xmath50 is a violated set : @xmath174 .",
    "then @xmath175 , otherwise @xmath176 by feasibility of @xmath43 .",
    "but for any such @xmath50 ,    & & n(|s|-1 ) -",
    "n(|sq|-1)^+  & =   n(|sq|-1 ) - n(|q|-1)^+ & + & & _ c(- f ) ( |sc|-1)^+  &   _ c(- f ) ( |(sq)c|-1)^+ . &    subtracting and using  , we obtain that @xmath177 . since @xmath50 was a violating set , so is @xmath178 .",
    "let @xmath99 be any subset of @xmath179 , and define @xmath180 by @xmath181 _",
    "( maybe some explanation about @xmath182 , maybe a little further down , explaining some intuition why it makes sense that this is the rank function . )",
    "_ we will show :    [ prop : matroid ] the function @xmath182 is the rank function of a matroid of rank @xmath75 .",
    "once we have this , it is straightforward to show that this matroid precisely describes the minimal edge removals :    [ thm : ismatroidagain ] the set of bases of the matroid defined by @xmath182 is precisely @xmath183 .",
    "let @xmath184 be the set of bases of the matroid defined by @xmath182 , and consider any @xmath185 .",
    "by the definition of @xmath182 , we have that @xmath186 moreover , by lemma  [ lem : hsubm ]  ( [ item : boundedinc ] ) , @xmath187 the final equality follows since @xmath188 and @xmath189 by feasibility of @xmath43 .",
    "thus by lemma  [ lem : hstarfeas ] , @xmath105 is feasible .",
    "conversely , consider any @xmath190 . by feasibility and lemma",
    "[ lem : hstarfeas ] again , @xmath191 for all @xmath166 , with equality for @xmath192 .",
    "thus @xmath193 , and so there is some @xmath194 with @xmath195 .",
    "but then @xmath196 is also a feasible removal set by the above , and so by minimality @xmath197 .",
    "proof of proposition  [ prop : matroid ] first , observe from applied to the empty blowup graph that @xmath198 we must show that @xmath182 is increasing , submodular , and satisfies @xmath199 for all @xmath200 .",
    "the fact that @xmath182 is increasing follows immediately from the definitions of @xmath182 and @xmath201 ; removing a larger set can only increase the slack . considering some fixed @xmath166",
    ", we have by lemma  [ lem : hsubm ]  ( [ item : boundedinc ] ) that @xmath202 .",
    "thus @xmath203 since @xmath204 by feasibility of @xmath43 .",
    "now we come to the main part of the proof , showing that @xmath182 is submodular .",
    "we must show that for any @xmath205 and @xmath206 , @xmath207 it is clearly sufficient to show this for @xmath208 and @xmath209 differing by a single edge .",
    "consider any @xmath166 and @xmath210 .",
    "the difference @xmath211 is one or zero , and it is one precisely if @xmath78 splits up some component @xmath212 into two components @xmath213 that both intersect @xmath50 . if this is the case for some component in @xmath214 , then @xmath78 will also split up some component in @xmath215 into two pieces both intersecting @xmath50 , since @xmath216 is a subgraph of @xmath217 . thus for any @xmath166 ,",
    "@xmath218 it also follows that for any @xmath219 with @xmath220 , @xmath221    let @xmath222 be the set of terminal subsets containing @xmath36 that minimize @xmath223 , over all @xmath166 . since @xmath224 is intersecting submodular by lemma  [ lem : hsubm ] , there is a unique _ maximal _ set @xmath225 , meaning @xmath226 for all @xmath227 .",
    "similarly , there is a unique _ minimal _ set @xmath228 ; so @xmath229 for all @xmath230 .",
    "we first show @xmath231 .",
    "notice that for @xmath232 with @xmath233 we have @xmath234 , where the first inequality follows by lemma  [ lem : hsubm ]  .",
    "furthermore , @xmath235 , again by lemma  [ lem : hsubm ]  .",
    "hence @xmath236 , and thus @xmath237 must contain some minimizers of @xmath238 , i.e. , @xmath239 . since @xmath240 is",
    "the minimal set in @xmath241 and @xmath242 is the maximal set in @xmath237 we obtain @xmath231 .",
    "we finally have @xmath243    _",
    "( i think we could discuss the separation here ( give the construction ) , and then say that this leads on to showing that the matroid @xmath74 is actually a gammoid . ) _      we first show that for any component @xmath36 , @xmath244 this in turn implies that @xmath245 is nonempty , since the rank of @xmath74 is @xmath75 by proposition  [ prop : matroid ] , and so @xmath246 .",
    "notice that for @xmath247 , we have @xmath248 , since in @xmath249 all components contain precisely one terminal .",
    "hence , @xmath250    as already discussed in section  [ sec : overview ] , the polytope @xmath89 is simply a weighted minkowski sum of the base polytopes @xmath80 for @xmath81 .",
    "it is well known that the minkowski sum of matroid polytopes is a polymatroid , and moreover , the rank function of the sum is simply the sum of the rank functions of the summands  @xcite .",
    "thus , @xmath89 is the base polytope of a polymatroid with rank function @xmath251 to show that the point @xmath86 given by @xmath252 for all @xmath117 is in @xmath89 , we need to show that @xmath253 for every @xmath254 . expanding out   and the definition of @xmath182 , and writing @xmath255 for the subset @xmath166 that attains the minimum in  , we obtain @xmath256 we now observe that because @xmath98 is a splitting set , @xmath257 . for imagine removing the edges of @xmath258 from @xmath43 one by one ; @xmath259 just counts the number of times where a component is split by the deleted edge in this process . but by the nature of minimal splitting sets",
    ", this must happen at _ every _ step  no pendant edges are formed at any stage . hence @xmath260 ; moreover , @xmath189 by feasibility , so indeed @xmath257 . _",
    "( explain this better . ) _ thus to finish the proof , it suffices to show    [ claim : missing ] @xmath261 .    to prove claim  [ claim : missing ]",
    ", we replace the function @xmath201 on the left - hand side of the inequality by a function @xmath262 that lower bounds @xmath201 and is well structured .",
    "more precisely , @xmath262 is chosen to be a conic combination of a special type of intersecting submodular functions which we call _ partition functions _ : for any partition @xmath263 of @xmath264 , the corresponding partition function @xmath265 is given by @xmath266 \\mid p_j\\cap s \\neq \\emptyset\\}|-1\\right)^+    \\quad \\forall s\\subseteq r.\\ ] ] the following theorem ( whose proof can be found in appendix  [ appendix : sub ] ) guarantees the existence of the function @xmath262 that we need to prove claim  [ claim : missing ] .",
    "[ thm : submlowerbound ] let @xmath267 any nonnegative intersecting submodular function with @xmath268 for all @xmath269 . then there is a monotone intersecting submodular function @xmath262 of the form @xmath270 for some @xmath271 , where @xmath272 and @xmath273 is a partition of @xmath274 for each @xmath275 , satisfying :    [ item : lowerbounda ] @xmath276 for all @xmath277 , and    [ item : matchra ] @xmath278 .    consider the function @xmath279 defined by @xmath280 .",
    "then @xmath279 differs from @xmath201 only on the empty set , since @xmath281 for all @xmath170 .",
    "thus @xmath279 is still intersecting submodular , and also nonnegative .",
    "let @xmath282 be the function obtained by applying theorem  [ thm : submlowerbound ] to @xmath279 .",
    "we then have @xmath283 where the first inequality holds since @xmath284 for all @xmath170 , and the second inequality holds since @xmath262 is monotone and @xmath285 .    as observed by chakrabarty et al .",
    "@xcite , any solution @xmath34 to   satisfies the following partition constraints for any partition @xmath286 of @xmath264 : @xmath287 where @xmath288 is the number of sets in partition @xmath286 . in our",
    "blown - up setting this translates into @xmath289 combining this observation with   and using @xmath290 , claim  [ claim : missing ] follows since @xmath291 where the last equality follows from property   of theorem  [ thm : submlowerbound ] .    .",
    "depicted is some component @xmath18 with core edges @xmath100 ( solid ) and cleanup edges ( dashed ) .",
    "[ fig : witness ] ]    10    m.  bern and p.  plassmann .",
    "the steiner problem with edge lengths 1 and 2 .",
    ", 32(4):171176 , 1989 .",
    "a.  borchers and d .- z .",
    "du . the @xmath28-steiner ratio in graphs . , 26(3):857869 , june 1997 .",
    "j.  byrka , f.  grandoni , t.  rothvo , and l.  sanit .",
    "teiner tree approximation via iterative randomized rounding . .",
    "to appear .",
    "j.  byrka , f.  grandoni , t.  rothvo , and l.  sanit .",
    "an improved lp - based approximation for steiner tree . in",
    "_ proceedings of the 42nd annual acm symposium on theory of computing ( stoc ) _ ,",
    "pages 583592 , 2010 .",
    "d.  chakrabarty , n.  r. devanur , and v.  v. vazirani .",
    "new geometry - inspired relaxations and algorithms for the metric steiner tree problem . in _ international conference on integer programming and combinatorial optimization ( ipco ) _ , pages 344358 , 2008 .",
    "d.  chakrabarty , j.  knemann , and d.  pritchard .",
    "hypergraphic lp relaxations for steiner trees . in _",
    "international conference on integer programming and combinatorial optimization ( ipco)_. 2010 .",
    "d.  chakrabarty , j.  knemann , and d.  pritchard .",
    "integrality gap of the hypergraphic relaxation of steiner trees : a short proof of a 1.55 upper bound .",
    ", 38(6):567  570 , 2010 .",
    "m.  chlebk and j.  chlebkov .",
    "the steiner tree problem on graphs : inapproximability results . , 406(3):207214 , 2008 .",
    "e.  n. gilbert and h.  o. pollak .",
    "minimal trees .",
    "16(1):129 , 1968 .    m.  x. goemans .",
    "minimum bounded degree spanning trees . in _ proceedings of the 47th ieee symposium on foundations of computer science ( focs ) _",
    ", pages 273282 , 2006 .",
    "m.  x. goemans and y.  myung .",
    "a catalog of steiner tree formulations .",
    ", 23(1):1928 , 1993 .",
    "m.  karpinski and a.  zelikovsky .",
    "new approximation algorithms for the steiner tree problem .",
    ", 1(1):4765 , 1997 .",
    "j.  knemann , d.  pritchard , and k.  tan . a partition - based relaxation for steiner trees .",
    ", 127(2):345370 , 2011 .",
    "rado s theorem for polymatroids .",
    ", 78:263281 , 1975 .",
    "n.  megiddo .",
    "applying parallel computation algorithms in the design of serial algorithms .",
    ", 30(4):852865 , 1983 .",
    "m.  padberg and l.a .",
    "trees and cuts . in _",
    "combinatorial mathamtics ( proceedings international colloquium on graph theory and combinatorics ) _ , pages 511517 , 1983 .",
    "j .- c . picard and m.  queyranne . selected applications of minimum cuts in networks .",
    ", 20:294370 , 1982 .",
    "t.  polzin and s.  vahdati - daneshmand . on steiner trees and minimum spanning trees in hypergraphs .",
    ", 31(1):1220 , 2003 .",
    "h.  j. prmel and a.  steger . a new approximation algorithm for the steiner tree problem with performance ratio 5/3 .",
    ", 36:89101 , 2000 .",
    "s.  rajagopalan and v.  v. vazirani . on",
    "the bidirected cut relaxation for the metric steiner tree problem . in _",
    "acm - siam symposium on discrete algorithms ( soda ) _ , pages 742751 , 1999 .",
    "g.  robins and a.  zelikovsky .",
    "tighter bounds for graph steiner tree approximation . , 19(1):122134 , 2005 .",
    "a.  schrijver . .",
    "springer , 2003 .",
    "d.  warme . .",
    "phd thesis , 1998 .",
    "a.  zelikovsky .",
    "an @xmath292-approximation algorithm for the network steiner problem .",
    ", 9:463470 , 1993 .",
    "in this section , we investigate the separation problem for .",
    "although it is not necessary , for convenience we will work in the blown up formulation ; thus , for a given @xmath43 , our goal is to determine whether is satisfied ( see section  [ sec : deeper ] for details of this and the definition of @xmath148 ) .",
    "in fact , we will do more ; for any @xmath293 , @xmath294 , we will find the most violated set over all @xmath166 . given this , we can answer the separation question by checking that @xmath295 is zero for each choice of @xmath42 ( note that @xmath296 , and so we must exclude this trivial set from consideration ) . for each choice of @xmath42",
    ", one max - flow calculation will be required .",
    "the construction is inspired by one for the forest polytope  @xcite ( see also  @xcite ) . while what follows is not precisely a generalization ( in the case where all components have size @xmath0 , the resulting construction is slightly different ) , it is similar in spirit . in the _ directed _ component - based relaxation , separation via an equivalent flow - based formulation is completely straightforward .",
    "however this does not imply such a formulation for the undirected version .",
    "since @xmath148 is an intersecting submodular function , it follows already that @xmath297 can be computed in polynomial time  @xcite , using submodular function minimization as a black box .",
    "however , the combinatorial algorithm we demonstrate here , which reduces the separation problem to a max - flow calculation , gives some additional insights ( as well as being more efficient ) .",
    "let @xmath43 be the blowup graph of some solution @xmath34 .",
    "first , let @xmath298 if @xmath299 is negative for any @xmath42 , it is easily seen that @xmath43 is not feasible ( it corresponds to @xmath300 ) .",
    "so from now on , we assume @xmath301 for all @xmath41 .",
    "construct a directed multigraph @xmath302 ( we will write @xmath303 if we wish to be explicit on the choice of @xmath43 ) as follows",
    ". begin with the multigraph @xmath43 , and for each component @xmath47 , pick an arbitrary node @xmath304 as the root .",
    "adjoin a source node @xmath305 and sink node @xmath53 .",
    "now orient all edges of @xmath306 away from @xmath304 for each component , and adjoin the arcs @xmath307 for each @xmath47 , and @xmath308 for each @xmath41 .",
    "we assign capacities @xmath309 to the arcs ; @xmath310 for all @xmath41 , and @xmath311 for all other arcs .",
    "[ thm : separation ] for any nonempty @xmath293 , the value of the maximum @xmath305-@xmath312-flow in @xmath313 is equal to @xmath314 . more specifically ,",
    "if @xmath315 is a minimum @xmath312-@xmath305 cut in @xmath313 with @xmath316 , then @xmath317 minimizes @xmath147 over @xmath166 , and @xmath318    use @xmath319 to denote the arcs in @xmath313 corresponding to @xmath306 in @xmath43 , and let @xmath320 .",
    "for any @xmath48 , let @xmath321 be defined by @xmath322    for any nonempty @xmath48 , @xmath323 .",
    "moreover , for any @xmath324 with @xmath325 , @xmath326 and @xmath327 , we have @xmath328 .",
    "consider some component @xmath47 .",
    "if @xmath329 , then clearly @xmath330 .",
    "so suppose @xmath331 . if @xmath332 , then clearly @xmath333 , and @xmath334 .",
    "on the other hand , if @xmath335 ( implying in particular that @xmath304 is a terminal ) , then @xmath336 and @xmath337 , since all terminals are leaves of the components they belong to . in either case , @xmath338 .",
    "for any @xmath41 , @xmath339 if and only if @xmath340 . putting this all together , @xmath341 now taking and adding and subtracting @xmath342 , we have @xmath343 now consider any @xmath274 with @xmath326 , @xmath325 and @xmath327 . we again clearly have @xmath344 for all @xmath345 , and again @xmath346 if @xmath331 .",
    "so @xmath347 .",
    "by this claim , @xmath348 ; since @xmath315 is a minimum cut , we must have equality .",
    "then again by the claim , @xmath349    we now show how this leads to a description of the matroid @xmath74 as a gammoid . recall the definition of a gammoid : a directed graph @xmath350 is given , along with two subsets @xmath351 .",
    "the groundset of the gammoid is @xmath352 , and a set @xmath353 is independent if there are vertex - disjoint paths from @xmath354 to some subset of @xmath355 .",
    "we say in this case that this defines the gammoid _ from _ @xmath352 _ to _ @xmath355 in @xmath350 .",
    "it is convenient to observe that by transforming the digraph @xmath350 appropriately , we can replace vertex - disjoint in the above definition with arc - disjoint , and still characterize gammoids .",
    "we need to slightly tweak the digraph @xmath313 defined above . for each @xmath356 , there is a corresponding arc @xmath357 in @xmath313 . split the arc by adding an additional node @xmath358 , producing a `` front '' arc @xmath359 with tail @xmath358 and a `` back '' arc @xmath360 with head @xmath358 .",
    "we may also remove the node @xmath305 and all its adjacent arcs . call the resulting modified digraph @xmath361 .",
    "define the sets @xmath362 let @xmath363 be the gammoid defined on @xmath313 from @xmath364 to @xmath355 , requiring arc - disjointness rather than vertex - disjointness . then define @xmath365 ; this contraction is also a gammoid._(citation needed ? ) _ by the one - to - one correspondence between @xmath352 and @xmath179 , we may consider this is a matroid over @xmath99 .",
    "[ thm : gammoid ] for any component @xmath36 , @xmath366 .",
    "the rank of a set @xmath367 in @xmath368 is @xmath369 , where @xmath370 is the rank function of @xmath363 .",
    "notice that the maximum number of arc - disjoint paths from @xmath371 to @xmath355 is precisely the max - flow from @xmath305 to @xmath372 in @xmath313 .",
    "thus by theorem  [ thm : separation ] , and the definition of @xmath182 , @xmath373 .",
    "now @xmath374 is the maximum number of arc - disjoint paths from @xmath375 to @xmath355 . but",
    "imagine what would happen to @xmath374 if the arcs @xmath376 were removed from @xmath361 .",
    "take @xmath377 to be any maximum collection of arc - disjoint paths from @xmath375 to @xmath355 in @xmath361 .",
    "for some @xmath378 , if some path @xmath379 uses arc @xmath360 , then certainly no other path emanates from @xmath358 , and so we can simply remove the initial segment of @xmath379 before @xmath358 to obtain another maximum collection of disjoint paths that do not use @xmath360 .",
    "repeating this process , we obtain paths @xmath380 that do not use any arcs in @xmath381 . but taking @xmath382 , and contracting all of @xmath274 to form the source , yields precisely @xmath383 , the digraph for the separation construction corresponding to @xmath384 . thus again by theorem  [ thm :",
    "separation ] , @xmath385 .",
    "thus @xmath386 , and so @xmath366 .",
    "let us fix a component @xmath47 and a splitting set @xmath100 . by the definition of @xmath100 ( as the complement of a spanning tree in the graph @xmath387 obtained by contracting terminals )",
    ", every steiner node @xmath388 has a unique path @xmath389 of cleanup edges to a terminal that we term @xmath390 ( see again figure  [ fig : witness ] ) .",
    "[ lem : witness ] for any splitting set @xmath96 , component @xmath47 and edge @xmath113 , let @xmath391 then @xmath115 is the unique minimal subset of @xmath112 whose removal makes @xmath78 a pendant edge .",
    "let @xmath392 be _ some _ minimal subset of splitting edges , whose removal makes @xmath78 a pendant edge .",
    "consider a set @xmath393 of removed core edges such that @xmath394 is feasible .",
    "observe that in the blowup graph @xmath394 , the component @xmath18 is potentially split into several components . in fact , removing any further edge makes the blowup graph infeasible , if more connected components are created .",
    "consider a splitting edge @xmath395 that we decided not to remove . then @xmath396 and @xmath397 are still in the same connected component .",
    "now , the removal of any edge on @xmath398 or on @xmath399 would split the component containing @xmath396 and @xmath397 into two components .",
    "thus @xmath400 .",
    "but vice versa , in the forest @xmath401 , the edge @xmath78 only connects steiner nodes to some terminal . removing it ,",
    "does not create new components .",
    "thus the claim follows .",
    "let @xmath392 be any subset of splitting edges . if @xmath402 then @xmath78 remains on a path , namely @xmath403 between the terminals , implying that @xmath78 is not pendant .",
    "thus , any subset @xmath404 which makes @xmath78 pendant must contain @xmath115 .",
    "on the other hand , we claim that @xmath78 is pendant in @xmath405 . to see this , let @xmath406 with @xmath407 .",
    "for @xmath78 to be pendant , there would need to be a path @xmath408 that does not contain @xmath78 from @xmath357 to a terminal .",
    "but the first edge in @xmath100 on @xmath408 must be in @xmath115 , contradicting the fact that @xmath409 .    for any splitting set @xmath100 and feasible blowup graph @xmath43 , algorithm  [ alg ]",
    "yields a solution of cost at most @xmath127 .",
    "we prove the theorem by showing that the decrease in the potential at any iteration is lower bounded by the weight of the edges we remove .",
    "more formally , consider a given iteration @xmath53 with current blowup graph @xmath128 , splitting set @xmath410 , and weights @xmath411 .",
    "let @xmath412 be the component to contract and @xmath413 the edges to be removed from @xmath128 in this iteration .",
    "at the end of iteration @xmath53 a new blowup graph @xmath414 is obtained with splitting set @xmath415",
    ". we will show @xmath416 this in turn implies the theorem since the potential function at any iteration , and in particular at the end of the algorithm , is nonnegative .",
    "therefore , the total weight of all core edges being removed throughout the algorithm is upper bounded by the potential value of the initial blowup graph , i.e. , @xmath417 . furthermore , since at every iteration , @xmath412 and @xmath130 are chosen such that @xmath418 , we obtain that the cost of all contracted components  which is the cost of the steiner tree our algorithm returns  can be upper bounded by @xmath419 , as desired .",
    "hence , it remains to prove  .    for any edge @xmath420 ,",
    "we denote by @xmath421 its witness set at the beginning of iteration @xmath53 . for simplicity",
    ", we define @xmath422 on all of @xmath423 , defining @xmath424 for @xmath425 . by definition of the witness sets",
    ", we have @xmath426 expanding the left - hand side of  , we obtain @xmath427 furthermore , by expanding the right - hand side of   using the definition of the weights @xmath411 , we obtain @xmath428 inequality   finally follows by combining   with  .    in the following ,",
    "we show that @xmath100 can always be chosen s.t .",
    "@xmath429 , following the proof of @xcite . for the sake of a simpler exposition",
    ", we replace every steiner node in @xmath43 of degree higher than 3 , with a binary tree consisting of cost zero edges in order to obtain nodes that have degree exactly 3 .",
    "suppose we find a suitable pair @xmath430 of splitting and cleanup edges in this auxiliary graph .",
    "then every steiner node @xmath60 in the original graph has potentially several paths @xmath431 of cleanup edges to terminals .",
    "we keep the one path minimizing @xmath432 and discard the first edge of all other paths .",
    "this does not increase @xmath134 . applying this iteratively",
    ", we end up with a feasible pair of cleanup edges and splitting edges .    from now on",
    ", we assume that every component @xmath47 is a binary tree .",
    "we pick an arbitrary edge @xmath433 as _ root edge_. from any interior node @xmath388 , there are two outgoing edges ( these are the edges that do not lie on the path from @xmath60 to the root edge ) .",
    "we randomly pick one of these edges as cleanup edge and the other one as splitting edge .",
    "in other words , every interior node @xmath60 has a unique path of cleanup edges to some terminal and hence , @xmath100 is a legal splitting set .",
    "moreover , for every non - root edge @xmath78 one has @xmath434 .",
    "if @xmath99 is chosen randomly according to the above distribution , @xmath435    fix a component @xmath18 and an edge @xmath436 .",
    "it suffices to show that @xmath437 .",
    "the root edge is always a splitting edge , thus @xmath438 .",
    "so , let @xmath78 be a non - root edge and let @xmath439 be the path from @xmath78 to the root edge , i.e. @xmath440 and @xmath441 .",
    "let @xmath442 be the number of consecutive cleanup edges on this path , starting from @xmath78 ( and @xmath443 if already @xmath444 ) .",
    "then @xmath445 for @xmath446 and @xmath447 .",
    "furthermore @xmath448 if @xmath449 and @xmath450 otherwise .",
    "we calculate @xmath451    the above argument can be derandomized by the method of conditional expectations , and this leads to a proof of theorem  [ thm : ln4bound ] .",
    "another option is to observe that the best choice of @xmath98 can be found in polynomial time , via a dynamic program as is indicated below .",
    "combined with the above lemma , this implies theorem  [ thm : ln4bound ] .",
    "a splitting set @xmath100 minimizing @xmath134 can be found in polynomial time .",
    "since the potential function can be decomposed into terms corresponding to each component , and a splitting set @xmath100 consists of the union of splitting sets in each component , it suffices to consider each component separately .",
    "hence , let @xmath18 be any fixed component with vertices @xmath20 and edges @xmath306 ; our goal is to find a splitting set @xmath100 for @xmath18 that minimizes @xmath452 .    as usual",
    "when applying dynamic programming to problems on trees , we start by computing tables ( to be specified soon ) for subtrees consisting of a single terminal , and successively combine those tables until a table for the full tree is obtained , revealing the optimal splitting set . to specify the order in which we create tables for larger subtrees from smaller ones , we direct the edge of the tree @xmath18 away from an arbitrarily chosen node in @xmath20 . we consider the following type of subtrees that we call _ partial trees_. for any vertex @xmath453 and subset @xmath454 of arcs leaving @xmath455 , the _ partial tree @xmath456 with root @xmath455 _ is the induced subgraph of @xmath18 consisting of @xmath455 and all vertices that can be reached from @xmath455 with paths starting with one of the arcs in @xmath274 . to simplify notation we also use @xmath456 to refer to the edge set of the partial tree .",
    "furthermore , let @xmath457 , and let @xmath458 denote the terminals contained in the partial tree @xmath456 .    to better understand what information should be stored for a partial tree @xmath459 , we first briefly discuss how the choice of splitting set @xmath100 within @xmath459 impacts the witness sets in @xmath460 , and vice versa",
    ". we will refer to the choice of core and cleanup edges ( i.e. , the choice of @xmath100 ) within some subset of edges as a _ configuration _ for that subset .",
    "we distinguish two ways that the root @xmath455 of @xmath459 can be connected to a terminal through cleanup edges : _ case ( a ) _ through a path within the partial tree @xmath459 , and _ case ( b ) _ through a path outside of @xmath459 .",
    "correspondingly , we call a configuration for @xmath459 a _ type ( a ) configuration _ if case ( a ) holds for the root of @xmath459 , and a _ type ( b ) configuration _ otherwise",
    ". notice that in a type ( a ) configuration , _ every _ node within @xmath459 is connected to a terminal in @xmath461 by cleanup edges . for a partial tree @xmath459 we will store two tables , one corresponding to case ( a ) and one to case ( b ) .",
    "consider case ( a ) and let @xmath408 be the path of cleanup edges connecting a terminal in @xmath461 to @xmath455 .",
    "notice that in this case @xmath462 .",
    "hence , the configuration for @xmath459 does not have any impact on the contribution of the edges of @xmath460 to the function @xmath463 .",
    "however , the witness sets of the edges in @xmath408 depend on the configuration for @xmath460 , namely every core edge that can be reached within @xmath460 from @xmath455 by following cleanup edges is part of the witness set of any @xmath464 .",
    "hence , the only information about the configuration for @xmath460 that matters in finding an optimal configuration within @xmath459 is the number @xmath465 of core edges in @xmath460 that can be reached from @xmath455 through cleanup edges .",
    "thus for case ( a ) we want to store a table for @xmath459 which contains , for each value of @xmath466 , a corresponding type ( a ) configuration that minimizes @xmath467 . here",
    ", @xmath468 can be computed without knowing the precise configuration in @xmath460 ( apart from @xmath465 ) since @xmath469    now consider case ( b ) and let @xmath408 be the path in @xmath460 connecting a terminal to @xmath455 . in this case",
    "the situation is reversed and @xmath470 for any @xmath471 .",
    "hence , the configuration for @xmath460 does not have any impact on the contribution of the edges of @xmath459 to the function @xmath463 .",
    "however this time , the witness sets of edges on @xmath408 depends on the configuration for @xmath459 , namely every core edges that can be reached within @xmath459 from @xmath455 by following cleanup edges is part of the witness set of any @xmath464 .",
    "hence , the only information that has to be stored for @xmath459 in case ( b ) , in order to describe how the configuration within @xmath459 impacts the configuration outside of @xmath459 , is the number @xmath472 of core edges in @xmath459 that can be reached from @xmath455 through cleanup edges .",
    "hence , for case ( b ) we want to store a table for @xmath459 which contains , for each value of @xmath473 , a corresponding type ( b ) configuration that minimizes @xmath474 .    clearly ,",
    "if we can compute the ( a ) table for the full component @xmath18 , then we are done , since the globally best configuration is the one minimizing the potential function over all values of @xmath465 .",
    "computing type ( a ) and ( b ) tables for partial trees corresponding to single terminals is trivial : table ( a ) contains one entry corresponding to @xmath475 of value zero , and table ( b ) is empty .",
    "there are two constellation we exploit to compute tables for larger partial trees based on the tables of smaller ones .",
    "the first constellation is the following .",
    "assume that we have tables ( a ) and ( b ) for two partial trees @xmath476 and @xmath477 with @xmath478 , and both having root @xmath455 .",
    "then we can compute the two tables for @xmath479 from the tables of @xmath476 and @xmath477 .",
    "this can be done by considering all legal combinations ( meaning pairs of configurations that can be completed to a splitting set ) of one table entry corresponding to @xmath476 and one corresponding to @xmath477 , keeping the best ones .",
    "since the size of each table is polynomially bounded in the input , this can be done efficiently .",
    "we skip the somewhat tedious details for combining those tables which are based on standard arguments .    in the second constellation ,",
    "we consider a vertex @xmath455 and one of its out - neighbors @xmath42 , i.e. , there is an arc directed from @xmath455 to @xmath42 , such that both tables for @xmath480 have already been computed .",
    "we can then compute the two tables for @xmath481 by considering all legal combinations of an entry of one of the tables of @xmath480 and the two possibilities of @xmath482 being a core edge or a cleanup edge .",
    "it is easy to observe that starting from the terminals and leveraging the above two update rules , one can construct both tables for the full component @xmath18 efficiently .    for the following lemma",
    ", we assume that the graph @xmath19 is quasi - bipartite .",
    "let @xmath136 , where @xmath137 consists of a cheapest edge from every component .",
    "then @xmath138    consider a component @xmath18 , which now is a star with edges @xmath483 .",
    "assume @xmath484 minimizes the cost , then the splitting edges in @xmath18 are @xmath485 .",
    "first of all , @xmath100 is obviously a legal splitting set .",
    "secondly @xmath486 for @xmath487 and @xmath488 .",
    "thus @xmath489 using that @xmath490 is maximized for @xmath491 .",
    "the claim follows by summing over all components @xmath47 .",
    "the main goal of this section is to prove theorem  [ thm : submlowerbound ] . before presenting the core part of the proof",
    "we discuss some basic properties of partition functions , and make some general observations concerning the statement of theorem  [ thm : submlowerbound ] which are useful to understanding its proof .",
    "let @xmath274 be a finite set .",
    "we recall that @xmath492 is called a _ lattice family _ if it is closed under unions and intersections .",
    "a function @xmath493 is _",
    "submodular on @xmath494 _ if @xmath495 for all @xmath496 ; _ supermodular on @xmath494 _ , _ intersecting supermodular on @xmath494 _ etc . , are defined similarly in the obvious way .",
    "any partition @xmath263 of @xmath274 induces naturally a lattice family @xmath497 which consists of all possible unions of sets in @xmath286 .",
    "consider the coverage function @xmath498 \\mid p_j\\cap s\\neq \\emptyset\\}|$ ] , which is clearly submodular .",
    "notice that we can write @xmath499 , and in particular @xmath500 for all @xmath170 . thus @xmath265 is intersecting submodular : for any @xmath501 with @xmath502 , @xmath503 furthermore , it is easy to see that @xmath265 is intersecting supermodular on @xmath504 . hence @xmath265 is _ intersecting modular _ on @xmath286 , i.e. , @xmath505 for any intersecting sets @xmath506 .    by the above observation , the function @xmath262 claimed by theorem  [ thm : submlowerbound ] is by construction intersecting submodular since all @xmath507 are intersecting submodular .",
    "similarly , @xmath262 is monotone due to the monotonicity of @xmath507 .",
    "we prove the following slightly stronger version of theorem  [ thm : submlowerbound ] .",
    "[ thm : strongsubmlowerbound ] let @xmath267 any nonnegative intersecting submodular function , such that all maximal sets @xmath277 with @xmath508 form a partition @xmath509 of @xmath274 . then there is an intersecting submodular function @xmath262 of the form @xmath270 where @xmath510 , @xmath511 $ ] , @xmath512 are partitions of @xmath274 that become coarser with increasing index , and @xmath262 satisfies :    [ item : lowerbound ] @xmath513 ,    [ item : matchr ] @xmath278 .",
    "furthermore , the partitions @xmath273 together with the coefficients @xmath514 , and hence @xmath262 , can be constructed efficiently .",
    "notice that the condition in theorem  [ thm : strongsubmlowerbound ] stating that the maximal tight sets of @xmath515 form a partition of @xmath274 is equivalent to the property that the family of all tight sets of @xmath515 covers @xmath274 , due to the following uncrossing argument .",
    "if the tight sets of @xmath515 cover @xmath274 then so do the maximal tight sets ; furthermore , for any two intersecting tight sets @xmath516 , @xmath517 by submodularity and nonnegativity of @xmath515 ; hence @xmath518 is also tight .",
    "hence , this condition is indeed weaker than the one used in theorem  [ thm : submlowerbound ] , which states that all singletons must be tight .    the partitions @xmath519 and coefficients @xmath520 defining @xmath262 are obtained as follows .",
    "we start by observing that each function @xmath521 encountered during the algorithm is intersecting submodular over @xmath522 ( by convention we set @xmath523 ) , and that @xmath273 indeed forms a partition of @xmath274 .",
    "this can easily be verified through an inductive argument . by assumption @xmath524",
    "is intersecting submodular over @xmath274 , and @xmath525 is a partition of @xmath274 .",
    "the intersecting submodularity of @xmath526 over @xmath527 follows by the intersecting submodularity of @xmath521 over @xmath527 and the intersecting supermodularity of @xmath507 over @xmath527 .",
    "since @xmath528 is intersecting submodular over @xmath527 , the maximal tight sets @xmath529 of @xmath528 in @xmath527 thus again form a partition of @xmath274 .    the suggested procedure can indeed be implemented efficiently . at any iteration @xmath530 and for any fixed @xmath531 ,",
    "finding the set @xmath532 minimizing @xmath533 is a submodular function minimization problem .",
    "hence , in step  , @xmath514 can be found by using e.g.  binary search , or by applying the parametric search technique of megiddo  @xcite .",
    "furthermore , since @xmath534 for all the sets @xmath535 that are tight with respect to @xmath521which are precisely the sets in @xmath273we have @xmath536 in each iteration . by choosing @xmath514 to be maximum in step  ,",
    "there is at least one set @xmath535 that is tight with respect to @xmath528 but not @xmath521 .",
    "hence , @xmath537 , and the procedures will terminate .",
    "let @xmath28 be the index of the last @xmath538 that was set in step  .",
    "hence , @xmath539 , and @xmath540 .",
    "since we start with @xmath541 and the partitions coarsen at each step , this implies @xmath510 .",
    "additionally , point   of theorem  [ thm : submlowerbound ] clearly holds by the termination criterion of the while - loop .",
    "hence , it remains to prove point  , which we prove by showing the following claim through induction from @xmath542 to @xmath543 , where @xmath543 corresponds to the statement  : @xmath544 for @xmath542 ,   clearly holds , since @xmath545 @xmath546 , by choice of @xmath547 .",
    "now let @xmath548 and assume that   holds for all values above @xmath549 .",
    "let @xmath550 , and we define @xmath551 to be the minimal set in @xmath552 that contains @xmath50 , i.e. , @xmath553 notice that @xmath554    where the equality holds since all sets in @xmath555 are tight with respect to @xmath556 by construction , and the inequality follows by standard uncrossing arguments : for any set @xmath557 , we have @xmath558 by intersecting submodularity and nonnegativity of @xmath521 , and thus the two terms @xmath559 and @xmath560 can be replaced by @xmath561 and this procedure can be repeated . in other words , we simply exploit that any nonnegative intersecting submodular function has the subadditivity property for any family of sets that are connected when seen as hyperedges on the given ground set .",
    "the inductive step of the proof of   finally follows by @xmath562 where the first inequality follows from   and the monotonicity of @xmath563 , and the last one by the inductive hypothesis .",
    "let @xmath15 be a _ quasi - bipartite _ graph , where steiner vertices are not connected by edges ( i.e. , we have edges only between terminals and steiner vertices or between terminals and terminals ) .",
    "let @xmath564 be the bidirection of @xmath565 , i.e. , for any @xmath566 , @xmath564 contains arcs @xmath567 and @xmath568 .",
    "the _ bidirected cut relaxation _ with _ root _",
    "terminal @xmath569 is @xmath570    in words : we need to reserve enough capacity in order to support a unit flow from every terminal to the current root @xmath455 .",
    "it was proven in @xcite that in quasi - bipartite graphs , the value of coincides with the optimum value of .",
    "this was done by lifting an optimum dual solution for the partition - based relaxation ( which is equivalent to even in general graphs  @xcite ) to a dual solution of .",
    "however , the authors of @xcite posed as an open question : for a given optimum bidirected cut solution , can a corresponding primal solution to be directly extracted without solving ?",
    "we answer this question affirmatively .    to avoid an unnecessary case analysis ,",
    "we split direct edges between terminals by inserting a dummy steiner vertex ( we split the edge cost arbitrarily among the two parts ) .",
    "let @xmath34 be an optimum solution to ; then the _ natural decomposition _ is as follows .",
    "for a star with center @xmath571 , take an arc @xmath572 with positive outgoing flow and all arcs @xmath573 carrying incoming flow .",
    "let @xmath574 be the minimum capacity on any of these arcs . then transfer this capacity into a component @xmath575 .",
    "iterate this process until all capacity has been transferred .",
    "_ ( this should be expanded slightly . ) _ the main result of this section is :    [ thm : naturaldecomposition ] let @xmath34 be an optimum solution for .",
    "then the natural decomposition yields a feasible optimum solution for with the same objective value .",
    "imagine that we want to `` relocate '' the root from @xmath455 to another terminal @xmath576 .",
    "we can do this by considering the unit flow from @xmath576 to @xmath455 , and reversing all capacity corresponding to this flow .",
    "this provides a feasible solution for @xmath577 that we term @xmath578 , which again has the same cost ( see @xcite for a proof ) .",
    "note that for any @xmath579 , the sum @xmath580 is independent of @xmath455 . for a steiner vertex @xmath581 , let @xmath582 be the set of neighbours in the star with center @xmath60 .",
    "it suffices to show theorem  [ thm : naturaldecomposition ] for basic solutions , since the decomposition of a convex combination of capacity vectors equals the convex combination of natural decompositions . by standard arguments",
    ", we may assume that the edge costs are distinct for all edges in the same star .",
    "[ lem : bcrincomingflow ] in a star with center @xmath60 and @xmath583 one has @xmath584 and @xmath585 for each @xmath586 with @xmath587 .",
    "the flow on arc @xmath588 can be removed and the flow on @xmath572 arc can be redirected to @xmath589 .",
    "both operations would leave the solution feasible and decrease the cost , contradicting optimality .",
    "see figure  [ fig : positiveflowinbcrstar ] for an illustration of the claim .     that may carry positive flow .",
    "[ fig : positiveflowinbcrstar ] ]    next , we consider one iteration of the natural decomposition for a star with center @xmath60 .",
    "for this reason , insert an extra steiner vertex @xmath590 into the graph , which has an edge @xmath591 with @xmath592 iff there is an edge @xmath593 with @xmath594 . for @xmath595 ,",
    "we abbreviate @xmath596 ( see figure  [ fig : transferingcapacity ] ) .",
    "we define @xmath597 and @xmath598 for all @xmath599 .",
    "note that @xmath600 is still an optimum solution .",
    "[ lem : splittingbcr ] let @xmath601 , @xmath602 and @xmath603 . starting from @xmath600 , transfer capacity of @xmath604 from all arcs @xmath605 to @xmath606 and term the new capacity reservation @xmath607 .",
    "then the new capacity vector @xmath607 is a feasible optimum solution for .",
    "we first show that the claim holds for _ some _",
    "@xmath608 which is small enough .",
    "consider any cut @xmath609 and assume for the sake of a contradiction that @xmath610 .",
    "for @xmath608 small enough , this may only happen if @xmath50 was a tight cut before , i.e. @xmath611 .",
    "furthermore , any critical cut must contain at least two arcs of the form @xmath612 , i.e. , @xmath613 .",
    "pick @xmath614 . according to lemma  [",
    "lem : bcrincomingflow ] , the flow is @xmath598 for @xmath615 .",
    "since @xmath611 , the unit flow from @xmath576 to @xmath455 needs all capacities on @xmath612 arcs for @xmath616 .",
    "consequently , when relocating the root to @xmath576 , the flow on all these arcs must be turned around completely . in particular @xmath617 for @xmath618 contradicting lemma [ lem : bcrincomingflow ] .",
    "we conclude that we can choose _ some _",
    "@xmath608 s.t .",
    "@xmath607 is feasible .",
    "but the argument above shows that no cut @xmath50 can become tight , thus the only limitation on @xmath604 is the arc capacity .",
    "the claim then follows .",
    "we apply lemma  [ lem : splittingbcr ] iteratively to all stars , adding copies of steiner nodes as required , until we have a solution @xmath619 ( with root @xmath620 chosen arbitrarily ) where    every steiner node has flow on at most one outgoing arc , and    the flow on all arcs of a star carrying a nonzero amount of flow is the same .",
    "then @xmath619 induces a solution to the _ directed component - based relaxation _ : @xmath621 the solution @xmath622 corresponding to @xmath619 is obtained by setting , for each flow - carrying star with terminal set @xmath18 and outgoing flow on arc @xmath572 , @xmath623 ( the common flow value in the star ) .",
    "all other components of @xmath622 are zero .",
    "it is easily checked that @xmath622 is feasible , and has the same cost as @xmath619 ( and hence @xmath34 ) .",
    "then projecting to the undirected formulation , the vector @xmath624 is feasible for ( see @xcite ) , and moreover corresponds precisely to the natural decomposition described earlier .",
    "it is well - known that there is a ptas for solving  . in other words , for every fixed @xmath608 , there is a polynomial time algorithm that computes a feasible fractional solution to the considered hypergraphic relaxation  , which is within a @xmath625 factor of the optimum fractional value .",
    "we argue now , that this is best possible ( answering the posed question in @xcite ) .",
    "let @xmath15 be a complete graph with terminals @xmath626 , edge cost @xmath627 for all @xmath628 .",
    "bern and plassmann  @xcite showed that it is @xmath33-hard to decide whether the cost @xmath629 of the cheapest steiner tree is at most a given parameter @xmath630 .",
    "we construct another steiner tree instance @xmath631 as follows : for each terminal @xmath632 in the original instance , we add a terminal @xmath633 and an edge @xmath634 with cost @xmath635 with @xmath636 and @xmath637 . furthermore , we downgrade the original terminal to an ordinary vertex , i.e. , we define @xmath638 as terminal set .",
    "let @xmath639 be the value of the optimum fractional solution of for instance @xmath640 ( using components of arbitrary size ) .",
    "first we show that @xmath641 .",
    "let @xmath642 be the optimum integral steiner tree in @xmath19 .",
    "we add all @xmath634 edges to @xmath642 and consider the emerging tree as component with fractional weight @xmath62 and cost @xmath643 .",
    "next , we prove that @xmath644 ( which in turn implies the claim of the theorem ) .",
    "let @xmath34 be an optimum solution to in @xmath640 .",
    "for a component @xmath22 , we denote @xmath306 as the contained edges from the original graph ( i.e. without @xmath634 edges ) and by @xmath143 we denote the number of terminals . either @xmath18 contains less than @xmath28 terminals , or @xmath645 . in any case",
    "@xmath646 using that @xmath647 , @xmath648 and @xmath649 .",
    "now we can bound the cost of the fractional solution as @xmath650 exploiting @xmath651 .",
    "observe that the above reduction in not approximation preserving .",
    "this is not surprising , considering the fact that steiner tree even with edge weights @xmath652 is @xmath11-hard ( e.g. by a straightforward reduction from set cover with sets of size 3 ) ."
  ],
  "abstract_text": [
    "<S> until recently , lp relaxations have only played a very limited role in the design of approximation algorithms for the steiner tree problem . in particular , no ( efficiently solvable ) steiner tree relaxation was known to have an integrality gap bounded away from @xmath0 , before byrka et al .  </S>",
    "<S> @xcite showed an upper bound of @xmath1 of a hypergraphic lp relaxation and presented a @xmath2 approximation based on this relaxation . </S>",
    "<S> interestingly , even though their approach is lp based , they do not compare the solution produced against the lp value .    </S>",
    "<S> we take a fresh look at hypergraphic lp relaxations for the steiner tree problem  one that heavily exploits methods and results from the theory of matroids and submodular functions  which leads to stronger integrality gaps , faster algorithms , and a variety of structural insights of independent interest . </S>",
    "<S> more precisely , along the lines of the algorithm of byrka et al .  </S>",
    "<S> @xcite , we present a deterministic @xmath3 approximation that compares against the lp value and therefore proves a matching @xmath4 upper bound on the integrality gap of hypergraphic relaxations .    </S>",
    "<S> similarly to  @xcite , we iteratively fix one component and update the lp solution . however , whereas in  @xcite the lp is solved at every iteration after contracting a component , we show how feasibility can be maintained by a greedy procedure on a well - chosen matroid . </S>",
    "<S> apart from avoiding the expensive step of solving a hypergraphic lp at each iteration , our algorithm can be analyzed using a simple potential function . </S>",
    "<S> this potential function gives an easy means to determine stronger approximation guarantees and integrality gaps when considering restricted graph topologies . </S>",
    "<S> in particular , this readily leads to a @xmath5 upper bound on the integrality gap of hypergraphic relaxations for quasi - bipartite graphs .    </S>",
    "<S> additionally , for the case of quasi - bipartite graphs , we present a simple algorithm to transform an optimal solution to the bidirected cut relaxation to an optimal solution of the hypergraphic relaxation , leading to a fast @xmath6 approximation for quasi - bipartite graphs . </S>",
    "<S> furthermore , we show how the separation problem of the hypergraphic relaxation can be solved by computing maximum flows , which provides a way to obtain a fast independence oracle for the matroids that we use in our approach . </S>"
  ]
}
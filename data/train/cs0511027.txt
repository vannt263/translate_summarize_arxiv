{
  "article_text": [
    "the aim of this paper is to present a theoretical framework for building recurrent network models where the states of the network nodes are discrete - valued , which will define a general framework for discrete information processing that can be implemented in various computational architectures .",
    "the introduction of recurrence into networks makes them much more difficult to analyse and control than feed - forward networks .",
    "the basic reason for these difficulties is that loopy propagation in recurrent networks causes each network observable to be a sum of an infinite ( or , at least , a very large ) number of contributions .",
    "one type of network that can be modelled using this framework is a network of spiking neurons , where the presence or absence of a spike is a binary quantity ( i.e. it is discrete - valued ) .",
    "however , in this paper , there is no specific aim to model biological information processing , but there will nevertheless be points of contact between the general information processing framework presented here and the specific details of biological information processing .",
    "the only consistent way of processing information is to use bayesian methods @xcite , which represent information by using  the joint probability of the states of the network nodes , and process information ( or make inferences ) by manipulating these joint probabilities according to well - defined rules such as bayes theorem .",
    "the bayesian approach achieves its consistency by _ not _ discarding any of the various alternative inferences that can be made , and by following up the consequences of all of the alternatives it ensures that there are never any of the contradictions that would otherwise occur , such as reaching conclusions that depend on which route one takes through the maze of inferences .",
    "bayesian information processing needs a flexible way of representing and manipulating joint probabilities .",
    "an ideal framework for this is markov random field ( mrf ) theory @xcite , because it allows one to systematically build up a joint probability model out of pieces that have a simple functional dependence on the underlying state variables . for networks that have a finite number of nodes ,",
    "each of which has a finite number of states , the mrf approach allows _ all _ possible joint probability models to be constructed , so use of the mrf framework imposes no artificial constraints . because the mrf approach constructs a joint probability model ,",
    "it can be cleanly coupled to any other probability modelling approach .",
    "the implementation of mrfs is usually done using stochastic markov chain monte carlo ( mcmc ) computations , unless the mrf happens to have a particularly simple topology which allows a simpler deterministic implementation to be achieved ( e.g. a tree - like topology allows exact computations to be done ) . in this paper",
    "no simplifying assumptions will be made about the network topology , in order to create the most general possible theoretical framework for discrete information processing .",
    "the simplest type of mcmc computation stochastically updates the joint state of the mrf , so that it moves around its joint state space visiting every joint state with a frequency that is proportional to the joint probability specified by the mrf .",
    "more sophisticated mcmc computations do the same thing but with an _ ensemble _ of joint states of the mrf ; these are known as `` particle filtering '' algorithms @xcite .",
    "the main result that is presented in this paper is a new way of describing mcmc algorithms , in which the updating of the mrf joint state ( i.e. the joint state of the network nodes ) is decomposed into a set of more elementary operations , which are the creation and annihilation of network node states . in the simplest case",
    ", a single mcmc update changes the joint state of an mrf by modifying its state at a single node of the network , which can be decomposed into first annihilating the old node state then creating the new node state .",
    "any mcmc algorithm can be composed out of a sequence of such creation and annihilation operations .",
    "furthermore , the properties of the operators that enact these creation and annihilation operations are very familiar to physicists , because they are identical to the properties of the creation and annihilation operators that appear in a quantum field theory ( qft ) of bosons @xcite .",
    "this allows a lot of prexisting conceptual and computational machinery to be brought to bear upon the problem of describing mcmc algorithms . by drawing an analogy with multi - particle qft states ,",
    "the mrf framework can be consistently generalised so that each node of the network exists in a _",
    "occupied state , rather than a _ singly _ occupied state .",
    "there are also many other points of contact with qft .",
    "the generalisation of the mrf framework to multiply occupied node states allows contact to be made with a particular type of self - organising network ( son ) theory known as the adaptive cluster expansion network ( acenet ) @xcite .",
    "one of the aims of a son is to discover for itself what network architecture to use to solve an information processing task , so it must be able to dynamically change its architecture .",
    "this requires splitting and merging of network nodes , and also the creation of appropriate links between them . in an mrf ,",
    "if a node is split into two nodes there is no consistent way of assigning a pairwise state to the resulting pair of nodes , unless the preexisting single node had two ( or more ) states assigned to it in the first place .",
    "this is exactly what multiple occupancy in the generalised mrf framework provides , using creation and annihilation operators to manipulate these states .",
    "thus the creation and annihilation operator approach allows mrf theory and son theory can be cleanly unified .",
    "the structure of this paper is as follows . in section [ xref - section-41134323 ]",
    "the theory of mrfs is summarised , together with the details of mcmc algorithms for simulating mrfs . in section [ xref - subsection-33113632 ]",
    "the main new contribution of this paper is presented , which is an operator implementation of the mcmc algorithm that generalises mrf theory to multiple occupancy states .",
    "finally , in section [ xref - section-11423193 ] some simple applications are used to illustrate the use of this operator implementation , one of which is the demonstration that the equilibrium state of a particular type of multiply occupied mrf has the same properties as acenet .",
    "the aim of this section is to review the mrf framework for building and manipulating the joint probability models that are used when doing bayesian information processing .",
    "this includes some informal material in which multiple occupancy of node states is discussed before giving the more formal development later on in section [ xref - subsection-33113632 ] .",
    "section [ xref - subsubsection-331132456 ] introduces mrfs and the hammersley - clifford expansion of joint probabilities , and section [ xref - subsubsection-4611524 ] describes an mcmc algorithm for sampling the joint states of an mrf .",
    "section [ xref - subsubsection-331134331 ] introduces the concept of a multiple occupancy state which is essential for the generalisation of mrfs that is presented later in section [ xref - subsection-33113632 ] .",
    "finally , section [ xref - subsubsection-4712833 ] describes how mrfs can be used to do bayesian inference .",
    "mrfs are a flexible way of constructing joint probabilities based on the hammersley - clifford expansion ( hce ) , which is defined as @xcite @xmath0    where @xmath1 is the joint state @xmath2 of an mrf with @xmath3 nodes , @xmath4 is the order of the term in the expansion ( i.e. @xmath4 is the number of components of @xmath1 that the term depends on , which is thus a @xmath4-tuple ) , @xmath5 labels the particular @xmath4-tuple ( or @xmath4-clique ) that the term depends on , @xmath6 is the @xmath4-tuple ( or clique state ) , @xmath7 is the probability factor ( or clique factor ) associated with @xmath6 , and @xmath8 is a normalisation factor to ensure that the total probability sums to unity as @xmath9 , so @xmath8 is defined as @xmath10    there are some minor technical issues to do with exactly how the states of the @xmath6 are enumerated in the hce to ensure that states are not double - counted , but these are not important here .    to compute the average @xmath11 of a statistic @xmath12 you need to evaluate the following @xmath13    where the probability factor @xmath14 appropriately weights the contribution of each @xmath1 in the sum , so that overall the correct weighted average @xmath15",
    "is computed . despite the functional simplicity of the hce expression for @xmath14 ,",
    "it is usually _ not _ possible to evaluate equation [ xref - equation-322151345 ] in closed - form , so numerical techniques must be used .",
    "an intuitive feel for how equation [ xref - equation-322151345 ] can be evaluated can be obtained by noting that the _ relative _ probability of a pair of joint states @xmath16 and @xmath17 is given by @xmath18    where the normalising @xmath8 factor in equation [ xref - equation-322152418 ] cancels , and also any factors in common between the numerator and denominator of the ratio in equation [ xref - equation-47123935 ]  will cancel .",
    "thus , if the joint states @xmath16 and @xmath17 differ in only a few of their vector components , then any of the probability factors @xmath19 that do _ not _ depend on these differing components will cancel out , leaving a relatively simple expression for the ratio @xmath20 .",
    "this cancellation is a key property of the functional form of the hce in equation [ xref - equation-322152418 ] .",
    "once a simple expression for the relative probability @xmath21 of a pair of joint states @xmath16 and @xmath17 is available , it can be used to define an mcmc algorithm ( see section [ xref - subsubsection-4611524 ] ) for hopping around between the various joint states @xmath1 , and which is designed to visit each joint state with a frequency that is propartional to pr@xmath22 , as is required for computing a numerical estimate of @xmath23 in equation [ xref - equation-322151345 ] .",
    "it is possible to construct an mcmc algorithm for hopping between joint states of an mrf that respects their relative probability of occurrence .",
    "it is _ not _ trivially obvious how to design a hopping algorithm with these properties , because one has to consider the net effect of _ all _ of the ways that one s proposed algorithm can hop in to and out of each state , and to check that this does indeed give rise to the correct joint @xmath14 .",
    "consider a network of nodes whose joint state of its nodes splits into two parts @xmath24 whose joint probability is @xmath25 .",
    "this joint probability can be split into two parts as @xmath26    where @xmath27 and @xmath28 are obtained from @xmath25 as @xmath29 and @xmath30 .",
    "now update the joint state using @xmath31 where @xmath32 is a sample that is drawn from @xmath33 , where @xmath33 is a conditional probability that has the _ same _ dependence on its arguments as @xmath27 above .",
    "the joint probability @xmath34 of the updated joint state is then @xmath35    comparing equation [ xref - equation-47114519 ] with equation [ xref - equation-47114526 ] shows that the new joint probability @xmath36 is the _ same _ function of its arguments as the old joint probability @xmath37 , by construction .",
    "this would _ not _ be the case if the sample @xmath32 was drawn from a @xmath38 that did _ not _ have the same dependence on its arguments as @xmath39 above .",
    "the above argument shows that if you have a network whose joint probability is @xmath37 , and assuming that the network starts in an initial joint state @xmath24 that has joint probability @xmath25 , then updating the joint state using @xmath31 guarantees that the new joint state @xmath40 has joint probability @xmath41 ( which has the same dependence on its arguments as @xmath25 ) .",
    "thus the joint probability of the joint state of the network nodes maps to itself under the update prescription @xmath31 .",
    "typically , a _ sequence _ of updates is applied , where the joint state of the network is split into two parts in _ different _ ways for successive updates , so that eventually all the nodes in the network are visited for updating .",
    "the overall effect is that updating causes the network to move around in the joint state space of its nodes , whilst guaranteeing that the joint probability of the network node states stays the same .    on the other hand ,",
    "if the initial joint state @xmath24 does _ not _ have joint probability @xmath25 , then @xmath41 and @xmath37 will _ not _ be the same functions of their arguments , so the joint probability will _ change _ as the updating scheme is applied .",
    "if a sequence of updates ( using a variety of splittings of the network of nodes , as described above ) is applied then this evolution can converge to a fixed point where the joint probability is _ stationary _ under updating . however , convergence to a unique fixed point is not actually guaranteed , because an inappropriate update prescription could be used that leads to non - ergodic behaviour where the whole joint state space is not explored , for instance . however",
    ", in practical problems with soft joint probabilities convergence usually occurs .    in an mrf",
    "the ratio of conditional probabilities @xmath42 that is used to generate the mcmc updates @xmath43 is given in equation [ xref - equation-47123935 ] . if the joint states @xmath44 and @xmath45 differ in only a few of their vector components , then there is a lot of cancellation in @xmath46 so the fully simplified expression for @xmath42 is relatively simple .",
    "this is what makes mcmc algorithms so appropriate for mrf networks .",
    "image processing is an area where mrfs have proved to be particularly useful @xcite .",
    "the starting point is to define an mrf model of the joint probability @xmath47 of the image pixels @xmath48    where @xmath47 is expressed as the marginal probability of @xmath25 after the hidden variables @xmath49 have been averaged over , and both @xmath39 and @xmath28 may be written as products of factors using the hce in equation [ xref - equation-322152418 ] . the hidden variables @xmath49 are the unobserved causes that determine the values of the image pixels @xmath1 , and are thus the causal factors that are used to construct a generative model of the image .",
    "this generative model can be multi - layered with several levels of hidden variables .",
    "to compute the probability of the joint state of the hidden variables @xmath49 given an observation of the image pixel values @xmath1 the posterior probability @xmath50 must be used , which may be obtained using bayes theorem as @xmath51    an mcmc algorithm ( see section [ xref - subsubsection-4611524 ] ) can then be used to draw samples from @xmath50 .",
    "note that successive samples produced by the mcmc algorithm are strongly correlated with each other because the mcmc algorithm has a finite memory time ; this makes mcmc run times ( for a given size of error bar ) much longer than would be the case if the samples could be somehow independently drawn from @xmath50 .",
    "also , if @xmath52 has a _ single _ well - defined peak of probability , then the mcmc algorithm can be used to locate this , usually with the assistance of a simulated annealing algorithm to `` soften '' @xmath50 during the early stages of the algorithm , and then mcmc fluctuations about this peak can be observed in order to deduce the robustness of the solution .    typically , in image processing applications there is a single overwhelmingly likely hidden variables interpretation of the image pixels ( i.e. @xmath52 has a _ single _ well - defined peak of probability ) .",
    "however , the above approach gracefully ( and consistently ) degrades when the interpretation is ambiguous ( i.e. @xmath50 does _ not _ have a single well - defined peak of probability ) .",
    "this graceful degradation in the face of ambiguity is one of the strengths of the bayesian approach .",
    "it is useful to develop a concrete way of visualising the hopping processes that underlie the mcmc algorithm described in section [ xref - subsubsection-4611524 ] .",
    "this is a prerequisite for the generalisation of mcmc algorithms that developed later in section [ xref - subsection-33113632 ] .",
    "the state @xmath1 of an @xmath3-node mrf is @xmath53 , and for a given @xmath1 each of its components @xmath54 lives in _",
    "one _ of an assumed finite number @xmath55 of states that are available to @xmath54 , where for simplicity we assume that all the @xmath54 have the _ same _ number of states @xmath55 .",
    "one way of representing each @xmath54 is as an @xmath55-component vector @xmath56 , where the `` 1 '' identifies which of the @xmath55 states @xmath54 happens to have .",
    "this representation is essentially a histogram with @xmath55 bins , with a _",
    "single _ sample occupying one of the bins .",
    "the whole state of the @xmath3 component @xmath1 vector is then represented by @xmath3 such histograms , each with a _ single _ `` 1 '' placed in the appropriate bin to identify the state of _ all _ of the @xmath54 for @xmath57 .",
    "naturally , this use of histograms is an exceedingly wasteful coding of the state @xmath1 because it consists mostly of `` 0 '' entries .",
    "however , it _ does _ allow the hopping operations that are generated by the mcmc algorithm to be represented directly as operations in which each `` 1 '' hops around between the bins of its histogram .",
    "more importantly , this representation of the mrf state is suitable for the generalisation in section [ xref - subsection-33113632 ] where each histogram will have _ multiple _ samples occupying its bins ( i.e. multiple states will be recorded at each mrf node ) .",
    "this is discussed in more detail below .     and @xmath58 .",
    "]    figure [ xref - figurecaption-101810312 ] shows a markov chain with 7 nodes ( i.e. @xmath59 ) , each of which has 7 possible states ( i.e. @xmath58 ) .",
    "the state space of each node is represented by one of the rectangles , the particular bin that is occupied by a sample is shown as a blob ( the unoccupied bins are shown as dots ) , and the particular 2-clique interactions ( see equation [ xref - equation-322152418 ] ) that are activated by the occupied node states are shown as bold lines .    1 .   the top row of figure [ xref - figurecaption-101810312 ] shows a random initial state of the markov chain .",
    "the middle row of figure [ xref - figurecaption-101810312 ] shows that the sample in node 3 has been annihilated .",
    "this is the _ first _ step of an mcmc update , in which a node is chosen at random and its state is erased.[xref - item1numbered-1018101151 ] 3 .",
    "the bottom row of figure [ xref - figurecaption-101810312 ] shows that a sample in node 3 has been created .",
    "this is the _ second _ step of an mcmc update , in which a sample is created in node 3 whose state was previously erased in step [ xref - item1numbered-1018101151 ] above .",
    "the influence of the neighbouring nodes is used to probabilistically determine the state in which to create the sample , as described in section [ xref - subsubsection-4611524 ] .",
    "+     the histogram representation allows generalisations of the mcmc algorithm in which each mrf node is occupied by more than one sample , when it is said to be multiply occupied .",
    "figure [ xref - figurecaption-1018103048 ] shows an example of this type of mrf state .",
    "it is important not to confuse multiply occupied states with other uses of state space :    1 .",
    "histograms with more than one sample are _ not _ the same as ensembles of histograms each with one sample .",
    "this is because the former allow for the possibility that the mcmc algorithm can cause the samples to interact with each other , whereas the latter is a means of running multiple standard mcmc algorithms in parallel . 2 .",
    "histograms with more than one sample could be viewed as having a single `` super''-state that recorded as a single state the entire contents of the histogram bins , which would disguise the fact that the histogram was actually constructed out of samples occupying the histogram bins .",
    "the higher level super - state description is mathematically equivalent to the lower - level description in terms of individual samples , but it does _ not _ allow the development of  detailed mcmc algorithms .",
    "we prefer to view the higher level super - state description as an interpretation that is used _",
    "after _ the lower level details have been worked out using the techniques that are presented in this paper .    in figure [ xref - figurecaption-1018103048 ] the histogram associated with each node contains more than one sample .",
    "such multiple occupancy was _ not _ present in the basic mrf theory of section [ xref - subsubsection-331132456 ] , so the detailed form of the mcmc algorithm of section [ xref - subsubsection-4611524 ] must now be generalised .",
    "multiple occupancy is explored in detail in section [ xref - subsection-33113632 ] using creation and annihilation operator techniques to hop samples between histogram bins , which is achieved by annihilating a sample from one bin and creatng a sample in another bin , as illustrated in figure [ xref - figurecaption-101810312 ] .",
    "when more than one sample per histogram is allowed then various new types of processing become possible :    1 .",
    "the number of samples per histogram can be varied with time .",
    "this requires birth and death rules as well as migration ( or hopping ) rules for the histogram samples . in this case",
    "the creation and annihilation operators would be applied in ways that do _ not _ enforce conservation of the number of samples in each histogram , so annihilation without subsequent creation ( and vice versa ) are permitted operations .",
    "this is how `` reversible jump '' mcmc algorithms @xcite might be implemented using creation and annihilation operators .",
    "2 .   the samples can interact with each other in complicated ways to form `` bound states '' , which would then behave like higher level `` symbols '' ( i.e. sets of interacting histogram samples ) that are constructed out of `` sub - symbols '' ( i.e. the histogram samples themselves ) .",
    "this is illustrated in figure [ xref - figurecaption-46141421 ] , figure [ xref - figurecaption-46142153 ] and figure [ xref - figurecaption-11520345 ] below .",
    "+     figure [ xref - figurecaption-46141421 ] shows a multiple - sample version of figure [ xref - figurecaption-101810312 ] that is more highly structured than the example shown in figure [ xref - figurecaption-1018103048 ] . for illustrative purposes ,",
    "the samples are now assumed to be in neighbouring states at each node rather than spread out at random ; typically this would be the case for markov chains whose properties are optimised to encode information in a topographically ordered way .",
    "the 2-cliques that then contribute typically form the tube - like joint state of activated 2-cliques shown in figure [ xref - figurecaption-46141421 ] .",
    "figure [ xref - figurecaption-46142153 ] shows another possibility that can arise with multiple sample occupancy , where the occupancy of each node splits into two separate clusters of samples , _ and _ where the probability factors associated with the 2-cliques is such that only node states that are both in the top half of the diagram are connected ( and similarly for the bottom half of the diagram ) , so that there are no activated 2-cliques running between the top and bottom halves of the diagram ( or at least the contribution of these is negligible ) .",
    "effectively , this multiply occupied markov chain has two completely independent markov chains embedded within it , each of which has its own tube - like joint state of activated 2-cliques .",
    "this type of structure emerges in multiply occupied markov chains that have a _ limited _ number of states available to each node of the chain , and which are optimised to encode information topographically ( which ensures that the tube - like joint states are localised in the node state spaces ) .",
    "this  type of behaviour emerges when  son training methods are used , but it will not be discussed further in this paper .",
    "figure [ xref - figurecaption-11520345 ] shows how figure [ xref - figurecaption-46142153 ] can be modified if the two tube - like joint states have some node states in common , which  binds the tubes together .",
    "an extreme version of this binding between tubes can occur if the situation is as shown in figure [ xref - figurecaption-46142153 ] , but _ additionally _ there are some weak interactions between the tubes .",
    "the aim of this section is to present a theoretical framework for expressing mcmc algorithms , which is based on  operators that have very simple algebraic properties , but which is nevertheless sufficiently flexible that it allows a large class of mcmc - like algorithms to be represented .",
    "section [ xref - subsection-1021112317 ] gives some background material that motivates the use of mcmc algorithms as the primary means of building dynamical models for discrete networks .",
    "section [ xref - subsubsection-331145022 ] introduces creation and annihilation operators for manipulating samples in multiply occupied network nodes .",
    "section [ xref - subsection-322174917 ] uses these basic operators to construct a composite operator for generating mcmc updates , finally , section [ xref - subsubsection-91313212 ] summarises a diagrammatic representation of mcmc algorithms .",
    "the aim here is to rewrite the mcmc algorithm for running an mrf ( see section [ xref - subsubsection-4611524 ] ) using operator algebra .",
    "this will allow the algorithm to be run in state spaces where the basic mcmc algorithm has not previously been used , and will thus generalise the algorithm . throughout this section",
    "the emphasis is on using the mcmc algorithm as the _ starting point _ for deducing the properties of an mrf , so the mrf is viewed as corresponding to the equilibrium behaviour of a ( stochastic ) discrete - time dynamical system .",
    "hitherto , the mcmc algorithm could be viewed as an artefact of a particular way of sampling from an mrf , but here it is viewed as the way in which the mrf actually behaves .",
    "this moves slightly away from the original motivation for using mrfs to model and manipulate joint probabilities for use in bayesian calculations ( see section [ xref - section-116135347 ] ) , but this change of emphasis allows full advantage to taken of the flexibility of the mcmc approach , and in particular its generalisation to multiply occupied states .",
    "this jump to using discrete - time dynamical systems as the starting point for building models allows a much larger class of behaviours to be explored , including ones that do _ not _ have a corresponding hce representation of the equilibrium behaviour ( i.e. as a simple product of probability factors , as in equation [ xref - equation-322152418 ] ) , or do _ not _ have a steady state equilibrium behaviour at all ( e.g. a limit _ cycle _ rather than a limit _ point _ ,",
    "etc ) .    the mcmc approach models",
    "everything as part of a dynamical evolution process , where a static statistical model of the world is obtained by taking a snapshot of the evolution of the dynamical system .",
    "those who insist on starting from a fixed graphical model based on the hce ( or a set of such models ) might be disappointed that this is _ not _ the starting point that is used here .",
    "however , they should note that the underlying process that generates their graphical model in the first place is actually dynamical , and that their model merely describes the statistical properties through a time slice of this dynamical process ; in other words , their model describes only a _ marginal _ distribution .",
    "for instance , an mrf image model does _ not _ attempt to model the history of the dynamical processes that cause the ( hidden ) objects to eventually give rise to the observed pixel values .",
    "analogously , _ all _ mrfs derive from a hidden dynamical process .",
    "the results presented in this section make use of creation and annihilation operator techniques to generate the hopping processes that underlie mcmc algorithms , which allows mcmc algorithms to be written using a very compact notation .",
    "these operator techniques will be familiar to physicists who use quantum field theory ( qft ) @xcite , and for the convenience of physicists the notation used here is the same as is used in qft .",
    "generally , creation and annihilation operators can be used to generate birth and death processes ( respectively ) , which thus increase and decrease the dimensionality of the state space ( respectively ) , so this approach naturally lends itself to describing processes that correspond to `` reversible jump '' mcmc algorithms @xcite .      in this section the mathematical development of the properties of creation and annihilation operators is deliberately presented in an informal way , by expressing it in terms of operations on the samples occupying histogram bins .",
    "this is to encourage a concrete and intuitive understanding of how these operators act on samples , rather than to merely think of them as objects that have particular algebraic properties . to a physicist who is familiar with the use of these techniques in qft",
    ", the explanations will appear to be very long - winded and the derivations very cavalier , and to them we apologise .",
    "the multiply occupied states described in section [ xref - subsubsection-331134331 ] can be manipulated by suitably defined creation and annihilation operators .",
    "multiply occupied states can viewed as hsistograms with multiple samples occupying the histogram bins .",
    "these histograms can be represented thus :    1 .",
    "empty histogram : @xmath60 .",
    "this represents the bins ( an indeterminate number of them ) of a histogram with no samples in any of the bins .",
    "the notation @xmath60 has been chosen to correspond exactly to the `` vacuum '' state as used by physicists ; it represents the background in which we will create and annihilate histogram samples ( or particles).[xref - item1numbered-331134841 ] 2 .",
    "histogram with one sample in bin @xmath61 : @xmath62 .",
    "the @xmath60 represents the empty histogram ( as defined above ) , and the creation operator @xmath63 acting from the left represents the action of creating one sample in bin @xmath61 of the empty histogram .",
    "the notation @xmath63 has been chosen to correspond exactly to the operator for creating a particle in state @xmath61 as used by physicists , and the notation @xmath62 corresponds exactly to the notation for a single particle in state @xmath61 .",
    "the use of the dagger notation @xmath64 ( i.e. adjoint operator ) is chosen to make our notation compatible with that used in qft @xcite , which will be discussed in more detail in section [ xref - subsubsection-116143013].[xref - item1numbered-331135457 ] 3 .",
    "histogram with @xmath65 samples in bin @xmath61 : @xmath66 .",
    "this is a multiply occupied histogram , which is obtained by operating on the empty histogram @xmath60 multiple times with the creation operator @xmath63 .",
    "4 .   histogram with @xmath65 samples in bin @xmath61 ( for @xmath67 ) : @xmath68 .",
    "this is a straightforward generalisation of the above , where creation operators are applied multiple times to all of the histogram bins .",
    "the above representation of histogram states does _ not _ provide a means for freely manipulating them . in order to be able to do this",
    "it is necessary to be able to annihilate samples as well as create them as above .",
    "the annihilation operations discussed below may be achieved by using the annihilation operator @xmath69 which is the adjoint of the creation operator @xmath63 .",
    "see the discussion on adjoint operators in section [ xref - subsubsection-116143013 ] for more details on why the creation operator @xmath63 and annihilation operator @xmath69 are adjoints of each other .",
    "note that in the description immediately below the behaviour of @xmath63 and @xmath69 corresponds to our intuitive notion of how these operators should behave , rather than formally derived from their algebraic properties which are presented later on in section [ xref - subsubsection-1018145547 ] .",
    "annihilating a sample from an empty histogram erases the state space itself .",
    "this simply _ defines _ what happens when you try to remove a sample from an already empty histogram , which is very useful for cleaning up algebraic expressions involving @xmath69 and @xmath60 . in effect , this defines the `` vacuum '' @xmath70 as the reference state for determining the occupancy of each histogram bin . @xmath71    which can be represented for a 4-bin histogram for any @xmath61 as @xmath72    annihilating a sample from a 1-sample histogram leaves an empty histogram .",
    "this definition is the common - sense notion of what should happen when you create a sample in a histogram bin , then annihilate it again .",
    "thus @xmath73    which can be represented for a 4-bin histogram and for @xmath74 as @xmath75    annihilating the _ wrong _ sample ( i.e. @xmath76 ) from a 1-sample histogram erases the state space itself .",
    "this is a generalisation of equation [ xref - equation-32216231 ] in which the histogram already contains one sample , but it is in a _ different _ bin from the one from which we are trying to remove a sample .",
    "@xmath77    which can be represented for a 4-bin histogram and for @xmath74 and @xmath76 as @xmath78    equation [ xref - equation-4714300 ] and equation [ xref - equation-47143011 ] can now be combined to give ( the illustration shows the @xmath74 case ) @xmath79    if the location of the occupied bin is unknown , yet you want to be certain that you annihilate the sample , then you have to attempt to annihilate a sample from every one of the histogram bins .",
    "this combines the properties of both equation [ xref - equation-46163415 ] and equation [ xref - equation-46163424 ] .",
    "note that @xmath70 ( the empty histogram ) is different from @xmath80 ( no histogram at all , i.e. not even an empty one ) .",
    "@xmath81    which can be represented for a 4-bin histogram and for @xmath74 as @xmath82    annihilating a sample from a 2-sample histogram ( samples in _ different _ bins , i.e. @xmath83 ) leaves two 1-sample histograms .",
    "this is a generalisation of equation [ xref - equation-46163523 ] in which the histogram starts with _ two _ samples ( known to be in different bins ) rather than _",
    "one _ sample .",
    "@xmath84    which can be represented for a 4-bin histogram and for @xmath85 as @xmath86    annihilating a sample from a 2-sample histogram ( samples in the _ same _ bin , i.e. @xmath87 ) leaves two copies of the same 1-sample histogram ( because either of the two samples can be annihilated to leave one sample ) .",
    "this is a variation of equation [ xref - equation-46164216 ] , and it is the _ first _ example of attempting to annihilate a sample from a bin that has more than one sample in it .",
    "the number of ways of annihilating a sample from a multiply occupied bin is equal to the number of samples in the bin . @xmath88    which can be represented for a 4-bin histogram and for @xmath89 as @xmath90      now that some of the required properties of creation and annihilation operators have been established , we are in a position to guess what their general algebraic properties should be , so that we can do arbitrarily complicated operator manipulations on states of arbitrary occupany .",
    "all of the above behaviour of creation and annihilation operators ( apart from @xmath91 in equation [ xref - equation-32216231 ] ) can be summarised in the following commutation relations @xmath92    where @xmath93 is a kronecker delta ( @xmath94 if @xmath95 , and @xmath96 if @xmath97 ) .",
    "these commutation relations are usually written in shorthand notation as @xmath98   & = \\delta _ { i , j } \\\\",
    "\\left [ a_{i},a_{j}\\right ]   & = 0 \\\\   \\left [ { a_{i}}^{\\dagger } , { a_{j}}^{\\dagger } \\right ]   & = 0 \\end{array}% \\label{xref - equation-32216132}\\ ] ]    the @xmath99=0 $ ] and @xmath100=0 $ ] commutation relations follow from the fact that a sequence consisting solely  of annihilation operators ( or solely of creation operators ) has the same effect whatever the order in which the operators appear in the sequence .",
    "however , this order independence property vanishes when the sequence contains interleaved creation and annihilation operators , as will be explained below .",
    "the @xmath101=\\delta _ { i , j}$ ] commutation relation may be illustrated for a 4-bin _ empty _ histogram and for @xmath102 as @xmath103    and for the general histogram as @xmath104    and by taking the difference of the @xmath105 ( i.e. the first line in equation [ xref - equation-520142115 ] above ) and the @xmath106 ( i.e. the second line in equation [ xref - equation-520142115 ] above ) results above the commutator relation @xmath101=\\delta _ { i , j}$ ] is correctly verified . the key result is the @xmath95 case in equation [ xref - equation-520142115 ] which has a factor @xmath107 in the @xmath108 case and a factor @xmath65 in the @xmath109 case , which arises because the number of ways of annihilating a sample is equal to the number of samples in the histogram bin which the annihilation operator acts upon , and this number is _",
    "one greater _ in the case where a creation operator got to act on the bin _ before _ the annihilation operator got its chance to act on the same bin .",
    "note that the commutation relation in equation [ xref - equation-32216132 ] _ extends _ the properties of the creation and annihilation operators independently of the states that they act upon , so that the operators now have specific effects on histograms with multiple samples in multiple bins ; these extended properties were not specified in the development up as far as equation [ xref - equation-512102316 ] .",
    "thus the particular choice of commutation relation in equation [ xref - equation-32216132 ] defines a specific set of combinatoric factors for how one can select samples for creation and annihilation , which are described above and which have intuitively reasonable properties .",
    "the above properties of the creation and annihilation operators have been justified by appealing to simple operations on the samples in histogram bins , which leads automatically these operators having the same combinatoric properties as the creation and annihilation operators that are used in a qft of bosons @xcite .      in section [ xref - subsubsection-1018145547 ]",
    "a set of commutation relations was defined based on the required properties of the creation and annihilation operators in a variety of simple cases that were discussed in section [ xref - subsubsection-11713637 ]",
    ". however , these commutation relations do more than just summarise these special cases , they extend the use of creation and annihilation operators to _ all _ situations , including cases where the histogram bins are occcupied by an arbitrary number of samples . thus these commutation relations provide an algebraically simple route to generalisation of mcmc algorithms .",
    "no doubt there are other generalisations of the standard mcmc algorithm , but none of them will have the algebraic simplicity of the properties defined in section [ xref - subsubsection-1018145547 ] .",
    "for instance , consider the multiply occupied state @xmath110 . as in qft @xcite",
    ", the creation operators can be used to construct a fock space of states with all possible occupancies , and this fock space can be explored by applying creation and annihilation operators .",
    "this type of exploration corresponds to what is done in reversible jump mcmc algorithms @xcite , where the scope of mcmc updates is extended so that they sample from various models , in additional to the sampling within a single model that usually occurs .",
    "it can be seen that the effect of @xmath111 is to count the number of samples in each histogram bin ( i.e. the number of ways of annihilating a sample from a bin is equal to the number of samples in the bin ) , and to also annihilate one of the samples from each bin , as is shown in equation [ xref - equation-41124426 ] .",
    "@xmath112    the above deficit of one sample after the application of @xmath111 can be rectified by altering the operator as  @xmath113 , because the inclusion of @xmath114 to the left of @xmath115 ensures that a sample will be created in bin @xmath116 to make up for the one that @xmath115 annihilated .",
    "note that there is only _",
    "one _ way of creating a sample in a bin , but there are as many ways of annihilating a sample as there are samples in the bin .",
    "the result in equation [ xref - equation-41124426 ] can be summarised as follows for @xmath117 ( note that the r.h.s .",
    "is 0 for @xmath118 ) @xmath119    which can be represented for a 4-bin histogram and for @xmath102 as @xmath120    this result may be used in general to move annihilation operators to the right of all creation operators .",
    "the result in equation [ xref - equation-41124843 ] is easily proved by using @xmath101=\\delta _ { i , j}$ ] to progressively move @xmath69 to the right through one @xmath114 at a time , and then using @xmath91 to discard any terms that contain @xmath121 .      using explicit notation ( e.g. @xmath122 ) for what the creation and annihilation operators are doing to the samples in the histogram bins is very tedious in cases that are not much more complicated than the ones discussed above .",
    "the purpose of introducing creation and annihilation operators is to replace the manipulation of histogram samples by algebraic manipulations based on the properties @xmath123 and @xmath101=\\delta _ { i , j}$ ] , which also has the desirable side effect that the calculations can be completely automated by using symbolic algebra techniques . in general ,",
    "explicit notation  should be needed only to verify what is being done to the samples in the histograms , and to check that this corresponds to what was intended .    from a theoretical point of view",
    "the commutation relations in equation [ xref - equation-32216132 ] are an algebraic way of doing the book - keeping to keep track of how creation and annihilation operators construct and modify histogram states depending on the order in which the operators are applied .",
    "the @xmath101=\\delta _ { i , j}$ ] commutation relation can be written in the form @xmath124 , which can then used to replace  @xmath108 by @xmath125 , which effectively moves the annihilation operator to the right ( giving the @xmath106 term ) whilst picking up a commutator ( the @xmath93 term ) as a side effect .",
    "this says that annihilation after creation ( i.e. @xmath105 ) is the same as annihilation before creation ( i.e. @xmath109 ) , except for when the operators are applied to the same bin , which triggers the appearance of the @xmath93 term for reasons discussed above .    as a manual exercise",
    ", it can be verified that operators with the above properties ( i.e. @xmath91 and @xmath126=\\delta _ { i , j}$ ] ) correctly annihilate a sample from a 2-sample histogram ( samples in any bins ) ; this generalises equation [ xref - equation-33114267 ] to the case where the bins are _ not _ assumed to be the same . the strategy in this derivation ( and in all other derivations using creation and annihilation operators ) is to move the annihilation operators to the right of all the creation operators ( using @xmath124 ) , thus generating a sum of terms of the form @xmath127 , and wherever there is a non - zero number of annihilation operators acting on @xmath60 the term may be removed ( using @xmath91 ) .",
    "this leaves a sum of terms that contain only creation operators acting on @xmath70 .",
    "the detailed derivation of the effect of applying @xmath111 to @xmath128 is as follows @xmath129    after this sort of manipulation has been done a few times it is not necessary to write down all of the intermediate steps as above , because the manipulations have a very simple form where each annihilation operator @xmath69 is moved freely to the right , except that whenever it passes through a corresponding creation operator @xmath114 an additional term is created ( i.e. the @xmath93 commutator term ) . in more complicated cases",
    "it is more convenient to replace manual manipulations with symbolic manipulations .",
    "the above results ( e.g. see equation [ xref - equation-41124426 ] ) allow the definition of a _ number operator _",
    "@xmath130 that counts the total number of samples in the histogram .",
    "thus @xmath131    this gives @xmath132    where the _ total _ number of histogram samples @xmath133 is the quantity that is measured by applying @xmath130 .",
    "for instance , @xmath134 can be represented for a 4-bin histogram and for @xmath102 as @xmath135    the structure of @xmath130 in equation [ xref - equation-331144329 ] makes it clear how to define the number operator @xmath136 for bin @xmath61 of the histogram , so that @xmath137 where @xmath136 is defined as @xmath138    and @xmath139 may be represented for a 4-bin histogram and for @xmath102 as @xmath140      the states constructed using the creation operators described above are orthogonal and complete .",
    "consider the general histogram state @xmath141 and attempt to annihilate its samples .",
    "the strategy of the proof will be to demonstrate that there is a _",
    "unique _ set of annihilation operators that you have to use in order to recover the empty histogram state @xmath70 .",
    "apply a single annihilation operator @xmath142 ( using equation [ xref - equation-41124843 ] to move it to the right ) @xmath143    now apply the same annihilation operator @xmath144 more times to eventually obtain @xmath145    repeat this pattern of annihilation successively for bins @xmath146 of the histogram to obtain @xmath147    where the resulting state is ( proportional to ) the empty histogram @xmath60 .",
    "thus we recover the empty histogram by applying exactly those annihilation operators to the histogram that correspond to the creation operators that we used to construct the histogram in the first place . the fact that the empty histogram can be recovered _",
    "only _ by applying the _ same _ set @xmath148 of annihilation operators as creation operators means that the states are _ orthogonal _ , and the fact that _ all _ possible states are constructable using the appropriate set @xmath149 of creation operators means that the states are _",
    "the constant of proportionality @xmath150 is the number of ways in which the annihilation operators can annihilate the histogram samples , which corresponds to the total number of ways of permuting the samples within the histogram bins ( but _ not _ permuting between bins ) .",
    "if this permutation factor is not required then the states could be defined as @xmath151 , and a similar normalisation factor @xmath152 should be included with the annihilation operators when this whole state is to be annihilated .",
    "it is a matter of tast whether the normalisation factor _ is _ included along with the state , or whether it is _ not _ included but is then subsequently divided out from the results of calculations .      the above results on orthogonality and completeness can be written more rigorously by introducing the _ adjoint _ state .",
    "intuitively , the adjoint state is obtained by time - reversing everything , so that instead of making operators act to the right ( with operators that act later being placed further to the left ) , the operators in an adjoint state act to the left ( with operators that act earlier being placed further to the right ) .",
    "note that between these two viewpoints the time order of operator action corresponds to the order in which the operators appear in the `` operator product '' .",
    "also note that a creation operator acting to the right ( i.e. create a sample as time increases , as in @xmath153 ) behaves in the same way as an annihilation operator acting to the left ( i.e. annihilate a sample as time decreases , as in @xmath154 ) .",
    "in this case @xmath153 says ( reading from right to left ) that there is an empty histogram in the distant past which later has a sample created in bin @xmath61 , whereas @xmath155 says ( reading from left to right ) that there is an empty histogram in the distant future which earlier has a sample annihilated from bin @xmath61 to give 0 ( i.e. @xmath154 ) .",
    "introduce a notation for a histogram with occupancies @xmath149 @xmath156    and its adjoint state for creating a histogram with occupancies @xmath157 , _ but _ done in the reversed time sense where there is an empty histogram in the far future , which is then populated as we move backwards in time @xmath158    the orthogonality property can then be stated as @xmath159    where the result in equation [ xref - equation-513124511 ] is used , and where @xmath160 is defined .",
    "the completeness property then corresponds to the following resolution of the identity operator @xmath161    where the states that this operator acts upon are assumed to be constructed in the same way as @xmath162 ( i.e. using creation operators ) .      1 .   creation operator for bin @xmath61 : @xmath63 .",
    "when applied to a histogram state this creates one sample in bin @xmath61 .",
    "annihilation operator for bin @xmath61 : @xmath69 .",
    "when applied to a histogram state this annihilates one sample from bin @xmath61 in as many ways ( i.e. @xmath65 ) as there are samples already in bin @xmath61 .",
    "the result is @xmath65 copies of the histogram state with one sample annihilated from bin @xmath61 .",
    "this includes the special case @xmath163 where the histogram is annihilated altogether to give @xmath80 .",
    "annihilation operator for all bins : @xmath164 .",
    "this produces a generalisation of what @xmath69 alone does . for each @xmath61 ( @xmath165 )",
    "the result is @xmath65 copies of the histogram state with one sample annihilated from bin @xmath61 , which gives a total of @xmath166 histograms .",
    "this operator is useful for preparing a histogram for an mcmc update because it removes a sample at random from the histogram ( i.e. it prepares @xmath166 copies of the histogram in each of which a different sample has been annihilated ) .",
    "4 .   annihilate an empty histogram : @xmath91 .",
    "this defines the `` vacuum '' state as a reference state for determining the occupancy of each histogram bin .",
    "this definition is very useful for removing terms that do not contribute to the overall histogram state .",
    "creation / annihilation commutator : @xmath126=\\delta _ { i , j}$ ] .",
    "this summarises the basic interaction between the creation and annihilation operators .",
    "it is mainly used in the form @xmath167 to move annihilation operators to the right of creation operators , which eventually brings the annihilation operators so that they act directly on @xmath60 , where they can be removed ( using @xmath123 ) .",
    "annihilation / annihilation and creation / creation commutators : @xmath99=0 $ ] and @xmath168=0 $ ] .",
    "these summarise the fact that a sequence consisting solely of annihilation operations ( or solely of creation operations ) has the same effect whatever the order in which the operators appear in the sequence .",
    "moving an annihilation operator to the right : @xmath169 : this is the basic result that is used to remove annihilation operators from expressions .",
    "the @xmath69 is moved progressively to the right through the @xmath114 ( using @xmath124 ) until it reaches the @xmath70 , where it is discarded ( using @xmath91 ) .",
    "number operator for bin @xmath61 : @xmath170 .",
    "this annihilates then creates a sample in bin @xmath61 . because there are @xmath65 ways of annihilating a sample but only 1 way of creating a sample , the net effect is to count the number @xmath65 of samples in bin @xmath61 . 9 .",
    "total number operator for all bins : @xmath171 .",
    "this counts the total number of samples in the histogram .",
    "this follows directly from @xmath172 above .",
    "state and adjoint state : @xmath173 and @xmath174 ( respectively ) .",
    "the adjoint state can be applied to the left of a state and the annihilation operators then moved to the right using @xmath175 to demonstrate orthogonality ( assuming @xmath176 ) .",
    "the adjoint of @xmath91 implies @xmath177 .",
    "orthogonality :  @xmath178 . here",
    "@xmath160 is assumed by definition .",
    "completeness : all states @xmath179 are constructable by using the appropriate set @xmath149 of creation operators .",
    "the above results are for a _ single _ mrf node . when there are multiple nodes , each mrf node has it own set of creation and annihilation operators , which have all of the properties described above .",
    "operators for different nodes commute with each other because they act on different state spaces , so the generalised form of equation [ xref - equation-32216132 ] is @xmath180   & = \\delta _ { i , j}\\delta _ { s , t } \\\\   \\left [ a_{i}^{s},a_{j}^{t}\\right ]   & = 0 \\\\   \\left [ a_{i}^{s \\dagger } , a_{j}^{t \\dagger } \\right ]   & = 0 \\end{array}\\ ] ]    where @xmath181 and @xmath182 are node indices .",
    "there are analogous generalisations of all the results in section [ xref - subsubsection-117133527 ] .      in section [ xref - subsubsection-331134331 ] it",
    "was shown how the state of an @xmath3-node mrf can be represented as a set of @xmath3 histograms each of which contains one sample in one of the histogram bins , and how mcmc updates of the mrf can be represented as hopping operations where each sample hops around between the bins of its histogram .",
    "the aim now is to use the creation and annihilation operators defined in section [ xref - subsubsection-331145022 ] to implement these mcmc hopping operations .",
    "the mcmc update operator @xmath183 can be constructed in several easy steps , in which each mcmc hopping operation is broken down into annihilation followed by subsequent creation of a sample .    1 .",
    "annihilate a sample ( see the middle row of figure [ xref - figurecaption-101810312 ] ) .",
    "apply @xmath111 to the histogram state to annihilate one sample from each bin , which prepares @xmath166 copies of the histogram in each of which a different sample has been annihilated .",
    "the output of this operation is thus a linear combination of histogram states , where each state is weighted by the same factor of unity ( i.e. all states are equally likely ) .",
    "this linear combination of @xmath166 terms ( of which only @xmath55 are distinct ) represents the ensemble of all the possible outcomes of annihilating one sample .",
    "2 .   create a sample ( see the bottom row of figure [ xref - figurecaption-101810312 ] ) .",
    "apply @xmath184 to each histogram state in the ensemble generated above , which prepares @xmath55 copies of the histogram in each of which a different sample has been created , and weight each of these @xmath55 histogram states so that where the sample is created in bin @xmath61 the state is weighted by a factor @xmath185 .",
    "if the @xmath185 satisfy @xmath186 and @xmath187 then @xmath185 can be interpreted as the probability of creating a sample in bin @xmath61 .",
    "actually , the normalisation condition @xmath187 can be omitted because the _ relative _ size of the @xmath185 is all that is required .",
    "the output of this operation is thus a linear combination of histogram states , where each state is weighted by the appropriate probability factor @xmath185 corresponding to the bin @xmath61 in which a sample has just been created .",
    "this linear combination of @xmath55 terms represents the ensemble of all the possible outcomes of creating one sample in one of the bins of a histogram .",
    "concatenate these two operators to define the mcmc update operator @xmath183 @xmath188    where the action of @xmath111 produces @xmath189 histograms , then the action of @xmath190 on _ each _ of these @xmath166 histograms produces @xmath55 histograms . finally ,",
    "all of these histograms should be regrouped so that multiple copies of identical histograms are represented as a single copy with an appropriate weighting factor .",
    "the weighting factor that is applied to the state ( as used here ) represents probability itself rather than probability amplitude ( as used in the corresponding qft ) .",
    "however , if a qft is `` wick rotated '' to become a euclidean qft then it is equivalent to quantum statistical mechanics @xcite , where the state is a probability - weighted mixture of states .",
    "so the  approach discussed in this paper has a mathematical structure that is similar to the euclidean version of a qft of bosons .",
    "the pieces @xmath191 of the mcmc update operator may be represented diagrammatically as @xmath192    where state @xmath116 comes in from the left and is annihilated by @xmath115 , and a new state @xmath61 is created by @xmath193 which then goes out to the right , and the probability of this transition occurring is @xmath185 which depends only on the output state ( so it is memoryless ) , which is in turn generated by a source ( e.g. mrf neighbours , external source , etc ) .",
    "the whole mcmc update operator @xmath183 is the sum of this diagram over states @xmath61 and @xmath116 .",
    "this result can be generalised to an mrf with @xmath3 nodes ( with node @xmath181 having @xmath194 states ) @xmath195    which can be written using the transition operator @xmath196 that hops a sample from bin @xmath116 to bin @xmath61 at node @xmath181 .",
    "@xmath197    in practice the creation probability @xmath198 depends ( via a product of clique factors , as described in the discussion on the hce in section [ xref - subsubsection-331132456 ] ) on the states of the other nodes in the mrf .",
    "this probability can be computed by applying an appropriately designed operator to the mrf node states .",
    "thus use the number operator for bin @xmath4 at node @xmath182 ( which is @xmath199 ) weighted by @xmath200 to determine the 2-clique contribution ( i.e. pairwise interactions between nodes of the mrf ) for creation in bin @xmath61 at node @xmath181 due to bin @xmath4 at node @xmath182 being occupied .",
    "this operator expression is appropriate for _ any _ number of samples in bin @xmath4 at node @xmath182 , because the number operator @xmath201 automatically determines the number of samples as needed , and then uses this number to weight any clique factor that involves this node .",
    "this use of sample number to weight clique factors is consistent because it guarantees that a _ single _ sample at each node ( i.e. standard hce ) is physically equivalent to the situation where each of these samples is cut into a number of equal - sized sub - samples , because the additional factors then generated by the number operator applied to these sub - samples are exactly cancelled by the additional factors then generated by the fact that interactions between _",
    "sub_-samples are proportionally weaker than interactions between samples .",
    "this allows @xmath198 to be replaced by an operator @xmath202 , which can be used to construct a @xmath198 based on whatever samples it finds in the histograms in the neighbourhood @xmath203 of node @xmath181 of the mrf .",
    "@xmath204    this result should be compared with the product form of the hce in equation [ xref - equation-322152418 ] , where the @xmath205 in equation [ xref - equation-52015372 ] corresponds to the @xmath206 in equation [ xref - equation-322152418 ] , and the sum over operators @xmath207 in equation [ xref - equation-52015372 ]  is needed to cover all the possibilities that might appear in the @xmath208 inside @xmath206 in equation [ xref - equation-322152418 ] .",
    "more generally for 3-cliques the operator @xmath202 is given by @xmath209    which may be straightforwardly generalised to higher order cliques .",
    "inserting the operator - valued version of @xmath198 into equation [ xref - equation-41103321 ] , the mcmc update operator @xmath183 becomes ( using 2-cliques only ) @xmath210    with analogous expressions for higher order cliques .",
    "this operator - valued object @xmath183 can be applied to _ any _ mrf state , whether it is a conventional _ single _ sample per node state , or has _ multiple _",
    "samples per node .",
    "this is the key advantage of using operators , because they are effectively general procedures ( e.g. algorithms ) that can be applied to any state that is constructed using creation operators .",
    "the algebra of the creation and annihilation operators provides a unified framework for handing all of these possibilities consistently .    the functional form used in equation [ xref - equation-41104529 ]",
    "is enforced by backward compatibility with the mcmc update operator for an mrf shown in equation [ xref - equation-51716233 ] , where the factor @xmath198 is a product of clique factors that intersect with node @xmath181 ( i.e. for 2-cliques only , it is generated by the @xmath211 factor in equation [ xref - equation-41104529 ] ) .",
    "however , the framework developed here allows for any functional form built out of creation and annihilation operators , so a very large class of update operators @xmath183 can be constructed such as :    1 .",
    "the operator that generates the product of clique factors @xmath212 can be replaced by some other functional form , such as a non - linear sigmoid squashing function @xmath213 , as is typically done in `` neural network '' implementations of recurrent networks .",
    "one possible way of viewing the relationship between this non - linear sigmoidal version and the clique product can be obtained by perturbatively expanding the sigmoid to obtain various powers of its argument @xmath214 , which includes terms that look like the original clique product @xmath212 , plus other higher order terms .",
    "the hopping operator @xmath215 can be replaced by some other functional form , such as one that increases ( i.e. birth ) or decreases ( i.e. death ) the number of samples , which may be used to allow the update operator @xmath183 to explore histogram states with various occupancies .",
    "note that if this part of the overall update operator @xmath183 is used _",
    "alone _ as the update operator ( i.e. without the clique factor piece above ) , then it can be used to generate the prior behaviour that the histogram state has before any interactions with other histograms are included .    the effect of the creation and annihilation operators can be viewed in terms of elementary operations on histograms ( as described in section [ xref - subsubsection-331145022 ] ) , and their operator algebra can be used to do calculations in which @xmath183 is applied to multiply occupied states to generate mcmc updates .",
    "it is also possible to use symbolic algebra to do these operator manipulations automatically . in general",
    ", the effect of the mcmc update operator @xmath183 on a set of histogram states can be represented as a type of feynman diagram , in which each vertex represents a product of operators acting on an incoming state to produce an outgoing state ( if any ) , and a ( weighted ) sum of such diagrams represents the corresponding ( weighted ) sum of products of operators ( note that here the weights are probabilities rather than probability amplitudes ) .",
    "note that the mcmc update operator @xmath183 in equation [ xref - equation-41104529 ] is number - conserving in the sense that its transition operator @xmath196 causes samples to hop from bin @xmath116 to bin @xmath61 at node @xmath181 , without gain or loss of the total number of samples at node @xmath181 .",
    "formally , this property may be written as @xmath216=0 $ ] where @xmath217 is the _ total _ number operator at node @xmath181 .",
    "this result can be seen intuitively because it may be written as @xmath218 , which states that when you measure the total number of samples at node @xmath181 then do an mcmc update , you get the _ same _ result as when you do an mcmc update then measure the total number of samples at node @xmath181 , so there must be number conservation .    the steps in the derivation of the number conservation property @xmath219=0 $ ] are as follows @xmath220   & = \\sum _ { s=1}^{n}\\sum _ { i , j=1}^{m_{s}}\\left [ \\mathcal{t}_{i , j}^{s } \\left ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t}\\right ) , \\mathcal{n}^{u}\\right ]   \\\\    & = \\sum _ { s=1}^{n}\\sum _ { i , j=1}^{m_{s}}\\left ( \\begin{array}{c }   \\mathcal{t}_{i , j}^{s } \\left ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t}\\right ) \\mathcal{n}^{u } \\\\   -\\mathcal{n}^{u}\\mathcal{t}_{i , j}^{s } \\left ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t}\\right ) \\end{array}\\right )   \\\\    & = \\sum _ { s=1}^{n}\\sum _ { i , j=1}^{m_{s}}\\left ( \\begin{array}{c }   \\mathcal{t}_{i , j}^{s } \\left ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t}\\right ) \\mathcal{n}^{u } \\\\   -\\mathcal{t}_{i , j}^{s } \\mathcal{n}^{u } ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t } ) \\end{array}\\right )   \\\\    & = \\sum _ { s=1}^{n}\\sum _ { i , j=1}^{m_{s}}\\left ( \\begin{array}{c }   \\mathcal{t}_{i , j}^{s } \\left ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t}\\right ) \\mathcal{n}^{u } \\\\   -\\mathcal{t}_{i , j}^{s } \\left ( \\prod _ { t\\in c ( s ) } \\sum _ { k=1}^{m_{t}}p_{i , k}^{s , t}\\mathcal{n}_{k}^{t}\\right ) \\mathcal{n}^{u } \\end{array}\\right )   \\\\    & = 0 \\end{array}\\ ] ]    using @xmath221=0 $ ] ( @xmath222 causes hopping at node @xmath181 but conserves total number at node @xmath181 , _ and _ also trivially conserves total number at all other nodes ) to make the replacement @xmath223 , and @xmath224=0 $ ] ( number operators always commute ) to make the replacement @xmath225 .",
    "note that the fact that @xmath221=0 $ ] and @xmath224=0 $ ] are simple to derive from the basic creation / annihilation content of the various operators .    the overall effect of using creation and annihilation operators is to formalise the act of manipulating samples in histograms , so that these manipulations are now represented algebraically .",
    "one _ could _ avoid the use of this algebraic approach ( especially when each histogram has only a single sample , as in a standard mrf ) , but as the manipulations become more complicated ( e.g. subtle interdependencies between histograms ) it is better to do them by using this algebraic approach .      a sequence of mcmc updates ( e.g. see section [ xref - subsubsection-4611524 ] ) in which @xmath1 and @xmath49 are _ alternately _ updated by sampling from @xmath25 is illustrated below where each arrow represents a dependency .",
    "the graph structure shows that the updates are memoryless .",
    "for instance , @xmath17 depends on @xmath226 via @xmath227 , but it does _ not _ depend on @xmath16 .",
    "@xmath228    the above diagram can be skeletonised by omitting all inessential labelling in order to emphasis the information flow , in which case the result looks like this    @xmath229    if this skeletonisation is used to draw an information flow diagram for a sequence of mcmc updates of a 4 node markov chain , then a typical result looks like the diagram below .",
    "@xmath230    for illustrative purposes the markov chain is drawn in the up - down direction in the diagram , with the horizontal direction being used for the discrete time steps that are generated by the mcmc update procedure .",
    "the @xmath231 notation at the left hand side shows the labelling convention that is used for the update that occurs at each time step , where @xmath232 indicates an interaction between a node and its right hand neighbour ( right is `` down '' in the diagram ) , and @xmath233 is the analogous notation for the left hand neighbour . the @xmath231 notation along the bottom of the diagram shows the actual update interaction that occurs at each time step .",
    "the particular sequence of mcmc updates that is represented in the diagram above is unimportant because it is random .",
    "there are 6 separate basic diagrams that are used to build the above diagram which are shown in the diagram below .",
    "usually a randomly selected sequence of these diagrams forms the mcmc algorithm , but other choices are possible .",
    "@xmath234    the skeletonised structure of the diagrams can now be simplified further to make it look more symmetrical as shown in the diagram below , where the pieces of the above diagrams are drawn individually in more symmetrical fashion .",
    "@xmath235    this reduces the description of the mcmc algorithm to a set of basic diagrams in which the state of a node evolves freely ( i.e. @xmath236 ) or is involved in an interaction ( i.e. @xmath237 and @xmath238 ) .",
    "these diagrams allow for the possibility that a node has a `` memory '' of its previous state ( i.e. an arrow comes in from the left ) , so the mcmc diagrams above are a special case in which this memory is discarded .",
    "these diagrams can be used to represent higher order mcmc algorithms which amalgamate the effect of several basic mcmc updates .",
    "thus , start by defining an mcmc update operator @xmath183 . for a _ pair _ of mrf nodes this",
    "is illustrated in equation [ xref - equation-103125636 ] , which is of the form @xmath239 .",
    "the @xmath240 is the `` identity '' which corresponds to no update occurring , and the @xmath241 and @xmath242 pieces correspond to updates that occur on one or the other of the two nodes , respectively .",
    "@xmath243    multiple mc updates may then be generated by iterating @xmath183 to create powers of @xmath183 .",
    "for instance , @xmath244 may be derived as by expanding out @xmath245 and collecting together similar terms , as shown in equation [ xref - equation-103125657 ] and equation [ xref - equation-1025104456 ] .",
    "@xmath246    where @xmath247    the result in equation [ xref - equation-103125657 ] and equation [ xref - equation-1025104456 ] may be simplified to equation [ xref - equation-913131538 ] and equation [ xref - equation-1025104519 ] ( using @xmath248 and @xmath249 ) .",
    "@xmath250    where @xmath251    in the diagrammatic expression for @xmath244 in equation [ xref - equation-1025104519 ] the first row represents _ no _ interaction , the second row _ one _ interaction , and the third row _ two _ interactions . note that the order in which the interactions occur is important ( i.e. @xmath252 in general ) so the diagrams in the third row _ can not _ be combined . on the other hand",
    "@xmath249 so the diagrams in the second row _ can _ be combined .",
    "these diagrams are actually feynman diagrams , which describe operator expressions in an visually appealing way . in this case",
    "they show how the various operations invoked by the pieces of the mcmc update operator @xmath183 fit together in various ways to generate the diagrammatic representation of the higher order mcmc update operator @xmath244 .",
    "this example is simple enough that the results are obvious , but the diagrammatic technique generalises to arbitrarily complicated cases .",
    "the aim of this section is to show some simple practical uses of the operator approach that is described in section [ xref - subsection-33113632 ] .",
    "no attempt will be made to do extensive computations , because these will be presented in future papers in this `` discrete network dynamics '' series of papers .",
    "section [ xref - subsubsection-41111651 ] illustrates how the mcmc update operator correctly generates mcmc updates for histograms that are each occupied by a single sample , thus ensuring backwards compatibility between the operator approach and the standard mcmc algorithm for sampling mrfs .",
    "section [ xref - subsubsection-41115422 ] generalises this to the case of multiply occupied states , and derives the equilibrium state of a single node mrf which has the same properties as acenet @xcite .      as a check on the result for @xmath183 in equation [ xref - equation-41104529 ] verify that the application of @xmath183 to a standard mrf state ( i.e. _ one _ sample per node ) leads to the expected standard form of the mcmc update .    in a standard mrf",
    "only a single bin @xmath253 is occupied at each node @xmath254 . for an @xmath3-node mrf",
    "this defines a _ pure _ state @xmath255 that has the form @xmath256    the first operator to consider in equation [ xref - equation-41104529 ] is the number operator @xmath201 ( for measuring how many samples are in bin @xmath4 at node @xmath182 ) .",
    "when @xmath201 is applied to @xmath255 it gives @xmath257    so the number @xmath258 is 1 if the bin at node @xmath182 being examined ( i.e. @xmath4 ) matches the bin in which the sample at node @xmath182 is to be found ( i.e. @xmath259 ) , and is 0 otherwise .",
    "insert this result into the @xmath212 part of @xmath183 in equation [ xref - equation-41104529 ] to obtain the following simplification @xmath260    which is equal to @xmath255 weighted by the product of the 2-clique factors that involve node @xmath181 .",
    "this result correctly computes the 2-clique influence of the neighbours of node @xmath181 that is expected in a standard mcmc algorithm .",
    "@xmath183 in equation [ xref - equation-41104529 ] also involves the transition operator @xmath222 .",
    "apply @xmath222 to @xmath255 to obtain @xmath261    where the annihilation operator @xmath262 is moved to the right , picking up a non - zero commutator only when it moves past the creation operator @xmath263 ( i.e. both the creation and the annihilation are at the _ same _ node so they do _ not _ commute if @xmath264 ) , and finally meets the empty state @xmath60 which it annihilates .",
    "this result is equal to @xmath265 weighted by a factor @xmath266 , which corresponds to a new pure state in which the sample at node @xmath181 has hopped to bin @xmath61 , weighted by 1 if the sample at node @xmath181 started off in bin @xmath116 , and 0 otherwise .",
    "this is exactly the behaviour that is expected of the transition operator @xmath222 .",
    "finally , inserting the results in equation [ xref - equation-4111533 ] and equation [ xref - equation-4111546 ] into @xmath183 in equation [ xref - equation-41104529 ] gives @xmath267    the action of @xmath183 on the _ pure _ state @xmath255 produces a weighted sum of states ( or _ mixed _ state ) , because the effect of @xmath183 at each node @xmath181 is to _ simultaneously _",
    "create @xmath194 states @xmath268 ( for @xmath269 ) , each of which has its own probability factor @xmath270 ( i.e. product of 2-clique factors ) , which is a total of @xmath271 states with their corresponding probability factors . note that this ensemble of histograms should be regrouped so that multiple copies of identical histograms are represented as a single copy with an appropriate weighting factor .",
    "thus @xmath272 is _ precisely _ the ensemble of states from which the standard mcmc update algorithm draws its updated state .    this verifies that the update operator @xmath183 generates the correct behaviour when only a _",
    "bin @xmath253 is occupied at each node @xmath254 , as is the case in standard mcmc simulations of mrfs .",
    "similarly , higher order cliques produce the same consistency between what the update operator @xmath183 generates and what the standard mcmc algorithm generates , so the assumed operator form of @xmath183 is backwardly compatible with mcmc simulations of standard mrfs with a single sample per node .",
    "standard mcmc algorithms randomly select a _ single _",
    "state from the above ensemble of states generated by the action of the update operator @xmath183 ; the probability of a particular state being selected is given by the probability factor that weights that state in the ensemble .",
    "more sophisticated mcmc algorithms , known as particle filtering algorithms @xcite , select _ several _ states from the ensemble which allows several alternative updates to be simultaneously followed , which allows the probability over alternatives to be represented in a sampled form .",
    "however , all of these approaches fit into the same theoretical framework where the update operator @xmath183 generates the _ full _ ensemble of alternatives .",
    "note that pure states and mixed states are related to doubly distributional population codes @xcite .",
    "thus a pure state specifies a single joint state of the mrf nodes , whereas a mixed state specifies a range of alternative joint states of the mrf nodes .",
    "the operator algebra presented in this paper provides a complete and consistent framework for using mcmc algorithms to manipulate these pure and mixed mrf states , or equivalently the corresponding doubly distributional population codes .",
    "the aim of this section is to demonstrate in detail that the mcmc update operator @xmath273 has an equilibrium state which has the same properties as acenet @xcite .    in section [ xref - subsubsection-41111651 ]",
    "the application of @xmath183 to a pure state @xmath274 converts it into a mixed state ( see equation [ xref - equation-41111742 ] ) .",
    "the aim now is to derive the equilibrium mixed state that self - consistently maps to itself under the action of @xmath183 .",
    "this would correspond to a mixed state that contains exactly the right mixture of pure states to balance the hopping rates generated by @xmath183 . in physics",
    "this is known as the _ detailed balance _ condition .",
    "when there is a _ single _ sample per node this equilibrium mixed state corresponds to the equilibrium ensemble that the standard mcmc update algorithm seeks to generate .",
    "it is _ not _ possible in general to analytically derive this equilibrium mixed state ; if it were then mcmc algorithms would not be needed .",
    "this intractability arises because the clique factors cause the samples at neighbouring nodes ( i.e. nodes in the same clique ) to interact with each other , which leads to the development of _ indirect _ long - range correlations between nodes by cascading together multiple _ direct _ short - range interactions ( i.e. paths of influence are built out of interlinked clique factors ) .",
    "the summation over all possible paths via which the nodes can interact indirectly with each other is _ not _ analytically tractable , except in simple cases such as when the nodes interact along a 1-dimensional chain ( or any acyclic graph of interactions ) .",
    "more interesting cases , such as 2-dimensional sheets of node interactions , are _ not _ analytically tractable in general ( although there are special cases that are exceptions , such as the 2-dimensional ising model ) .",
    "one case which _ can _ be solved analytically is the case of an mrf with a _ single _",
    "node that interacts with a fixed external source .",
    "in effect , this is an @xmath3-node mrf in which @xmath275 of the nodes are frozen , and their influence on the single remaining ( unfrozen ) node is represented by the external source .",
    "this case is interesting because it is the model that is used in the simplest version ( i.e. single coding layer ) of acenet @xcite ; it is therefore prudent to use the operator methods developed in this paper to verify that the mcmc equilibrium state corresponds to the behaviour that is observed in acenet .",
    "the state space of a multiply occupied 1-node mrf is an @xmath276-sample histogram .",
    "the aim now is to derive the equilibrium state of an @xmath276-sample histogram under the action of repeated mcmc samplings generated by @xmath277 ( see equation [ xref - equation-1018122141 ] ) , where the probabilities @xmath185 are derived from a fixed external source .",
    "the equilibrium mixed state @xmath278 must satisfy the self - consistent bound state equation @xmath279    where @xmath280 is an eigenvalue .",
    "in other words the mcmc update operator must map the equilibrium state into a multiple of itself , as is expected of an equilibrium state . because correct normalisation of the state and of the mcmc update operator have not been imposed ( to avoid lots of distracting normalisation factors appearing in the mathematics ) ,",
    "the eigenvalue is not the expected @xmath281 , but nevertheless the value of @xmath280 may be readily interpreted ( see after equation [ xref - equation-1021103352 ] ) .",
    "the mixed state @xmath278 can be expanded as a weighted mixture of pure states thus @xmath282    where @xmath283 is ( up to a normalising constant ) a histogram with @xmath284 samples in bin @xmath4 , @xmath285 is ( up to a normalising constant ) a histogram with occupancy @xmath149 , @xmath286 is the probability ( up to a normalising constant ) of this histogram occurring , and @xmath287 is a mixture of such histograms . note that it is not necessary to introduce the normalising constants explicitly because all we are trying to do is to demonstrate that @xmath278 is a solution of equation [ xref - equation-323111626 ] .",
    "first of all , force the _ total _ number of samples to be constrained . in physicists terminology , the case with a fixed number of samples is a _ canonical _",
    "ensemble , rather than a _ grand canonical _ ensemble in which the total number of samples would be allowed to vary .",
    "thus write @xmath278 as @xmath288    where the kronecker delta @xmath289 ensures that only terms in @xmath290 that satisfy the condition @xmath291 can contribute .",
    "now find the state @xmath278 that satisfies the consistency condition in equation [ xref - equation-323111626 ] .",
    "first substitute equation [ xref - equation-41115157 ] into the left hand side of equation [ xref - equation-323111626 ] to obtain @xmath292    now use that @xmath293 to move all of the annihilation operators to the right in the @xmath294 part of the expression in equation [ xref - equation-41115256 ] to obtain the following simplification @xmath295    where the cases @xmath95 ( annihilation and creation within a single bin ) and @xmath97 ( annihilation in one bin and creation in another bin , i.e. hopping ) have to be considered separately .    the contribution for a given final state @xmath116 ( but summing over the initial state @xmath61 ) can be represented diagrammatically as follows @xmath296    which is a sum of contributions of the form @xmath297    where the overall factor of @xmath65 comes from the fact that the annihilation operator @xmath69 has @xmath65 samples to choose from in the initial state .    the coefficients of corresponding contributions to the left hand side and right hand side of the equilibrium condition in equation [ xref - equation-323111626 ]",
    "can now be matched up .",
    "note that this matching of coefficients is allowed because the set of states @xmath298 is orthogonal and complete ( see section [ xref - subsubsection-11714376 ] ) .",
    "this leads to the following consistency equation that interrelates the @xmath286 .",
    "@xmath299    now define a trial solution to this equation ( where @xmath300 ) @xmath301    this trial solution corresponds to placing @xmath276 samples at random into the histogram , using sampling probabilities @xmath302 for each of the @xmath55 bins .",
    "the probability factor @xmath303 is the probability of each possible way of placing @xmath276 samples ( taking account of the order in which the samples are placed ) , and the multinomial factor @xmath304 is the number of possible orderings of samples that leave the histogram unchanged ( i.e. permute _ within _ bins but not _ between _ bins ) .",
    "it is reasonable to expect this to be the solution because the effect of @xmath183 ( i.e. @xmath305 ) is to randomly annihilate a sample from the histogram , and then to create it again with probability @xmath185 in bin @xmath61 ( which is a",
    "_ memoryless _ operation ) , so the @xmath306 given in equation [ xref - equation-323114626 ] should be an equilibrium solution for updates generated by @xmath183 .",
    "substitute this trial solution into the consistency equation equation [ xref - equation-41132542 ] to obtain @xmath307    cancel the factorials and the probability factors .",
    "solve this equation for the eigenvalue @xmath280 , and use that @xmath309 and @xmath310 to simplify the result .",
    "@xmath311    thus @xmath312 which is the ( fixed ) total number of samples in the histogram .",
    "the source of this factor is @xmath313 , where each annihilation operator @xmath115 has @xmath314 to choose from in the initial state , so the sum of annihilation operators @xmath111 generates @xmath310 separate contributions .",
    "the fact that @xmath280 is a constant means that the consistency equation ( i.e. equation [ xref - equation-41132542 ] ) has an eigenvalue @xmath315 that is _ independent _ of the choice of @xmath149 , which means that the update operator @xmath183 has the _ same _ effect on each pure state component of the equilibrium state @xmath278 ( as is required in order for @xmath278 to satisfy equation [ xref - equation-323111626 ] ) .",
    "the result in equation [ xref - equation-1021103352 ] verifies that the trial solution proposed in equation [ xref - equation-323114626 ] is correct , and that the equilibrium histogram state corresponds to placing @xmath276 samples at random into the histogram using sampling probabilities @xmath316 for each of the @xmath55 bins .",
    "summarise these results :    1 .",
    "basic mcmc update operator : @xmath317 2 .",
    "general state ( fixed @xmath276 ) : @xmath318 3 .",
    "equilibrium condition : @xmath319 4 .",
    "equilibrium state : @xmath320 with @xmath312    the equilibrium state is a _ mixture _ of pure states , where each pure state is weighted by the probability of its occurrence . in this approach the state @xmath278 of",
    "the system corresponds to the _ entire _ probability - weighted ensemble of alternative histograms . in effect , these histograms mix with each other under the updating action of the fixed external source that causes the samples in the bins of each histogram to hop from bin to bin , whilst conserving the total number of samples in the histogram ( i.e. there is migration of samples but no birth or death of samples ) .",
    "the equilibrium condition ensures that the mixing that occurs due to the hopping of samples has no net effect on the probability - weighted ensemble of alternative histograms .",
    "this completes the demonstration that the simplest ( i.e. a single node ) multiple occupancy mrf has the same properties as acenet @xcite , which is _ defined _ as having an equilibrium state that is generated by the random ( but probability - weighted ) placement of @xmath276 samples into a set of histogram bins .",
    "also , larger sons can be built out of multiple linked acenet modules , and these correspond to mrfs with a larger number of nodes .",
    "this unification of mrfs and sons is possible because both approaches can be viewed as implementing algorithms for manipulating samples in histogram bins , and all such algorithms can be expressed by using the algebra of creation and annihilation operators .",
    "a key advantage of this mrf / son unification is that the techniques that are used to train sons ( i.e. to discover structure in data ) can now be used to train mrfs , which allows the mrf graph structure ( i.e. nodes and connections ) to adapt itself so that it is better matched to the data it is trying to model .",
    "the mcmc updating of mrfs whose nodes are occupied by multiple samples potentially leads to lots of interesting properties .",
    "the derivation above shows how a single node mrf behaves under the influence of a _ fixed _ external source , but",
    "more interesting behaviour occurs when either the mrf has a single node but the external source is _ variable _ , or if the mrf has multiple interacting nodes so that each node sees the variable state of the other nodes .",
    "this last case is especially interesting in mrfs that are trained as sons , because it leads to behaviours in which the samples that occupy the nodes act collectively , and thus cause the joint node states to behave like extended symbols ( see section [ xref - subsubsection-331134331 ] for some diagrams that illustrate this point in more detail ) .",
    "the work described in this paper assumes that markov random field models are used to implement bayesian inference .",
    "the key contribution of this paper is an implementation using creation and annihilation operators of mcmc algorithms for simulating mrfs .",
    "this theoretical framework has a similar structure to that used in quantum field theories of bosons in physics @xcite .",
    "an equilibrium solution of the mcmc update operator is derived which is shown to be equivalent to the equilibrium behaviour of the adaptive cluster expansion network ( acenet ) @xcite , which is a type of self - organising network that computes using discrete - valued quantities .",
    "this point of contact between mrf theory and son behaviour allows the theories of these two fields to be unified .",
    "although mrfs and sons are superficially _ different _ ( mrfs have one sample per node , whereas acenet sons have multiple samples per node ) , the underlying operators that are used to manipulate them are the _",
    "same_. mrf theory could benefit from this unification by being able to make use of sons to build mrf networks in a data - driven way .",
    "son theory could benefit from this unification by being able to make full use of the rich theoretical theory of mrfs .",
    "it is very convenient that mrfs and sons are unified within a qft framework , because such theories are used extensively by physicists to describe the interaction of particles , and many techniques have been developed to compute results using such theories .",
    "we have found that it is very easy to transfer knowledge from qft to the unified mrf / son framework presented in this paper .",
    "also , the diagrammatic notation ( i.e. feynman diagrams ) makes it much easier to understand what mcmc algorithms are actually doing , without becoming submerged in large amounts of theory .",
    "future papers in this `` discrete network dynamics '' series of papers will focus in detail on the consequences of implementing mcmc algorithms using update operators built out of creation and annihilation operators .",
    "this research presented in this paper was supported by the united kingdom s mod corporate research programme .    000 cox , r. t. ( 1946 ) .",
    "_ probability , frequency and reasonable expectation_. am .",
    "j. phys . , * 14*(1 ) , 113.[cox1946 ] smyth , p. ( 1998 ) .",
    "_ belief networks , hidden markov models , and markov random fields : a unifying view_. pattern recogn .",
    "lett . , * 18*(11 - 13 ) , 12611268.[smyth1998 ] doucet , a. , godsill , s. , & andrieu , c. ( 2000 ) . _ on sequential monte carlo sampling methods for bayesian filtering_. stat .",
    "comput . , * 10*(3 ) , 197208.[doucetgodsillandrieu2000 ] zee , a. ( 2003 ) . _ quantum field theory in a nutshell_. princeton : university press.[zee2003 ] luttrell , s. p. ( 1996 ) . _ a discrete firing event analysis of the adaptive cluster expansion network_. network - comp .",
    "neural , * 7*(2 ) , 285290.[luttrell1996 ] besag , j. ( 1974 ) .",
    "_ spatial interaction and the statistical analysis of lattice systems_. j. roy .",
    "b , * 36*(2 ) , 192236.[besag1974 ] geman , s. , & geman , d. ( 1984 ) .",
    "_ stochastic relaxation , gibbs distributions , and the bayesian restoration of images_. ieee trans .",
    "pattern anal .",
    ", * 6*(6 ) , 721741.[gemangeman1984 ] green , p. j. ( 1995 ) . _",
    "reversible jump markov chain monte carlo computation and bayesian model determination_. biometrika , * 82*(4 ) , 711732.[green1995 ] sahani , m. , & dayan , p. ( 2003 ) .",
    "_ doubly distributional population codes : simultaneous representation of uncertainty and multiplicity_. neural comput . ,",
    "* 15*(10 ) , 22552279.[sahanidayan2003 ]"
  ],
  "abstract_text": [
    "<S> an operator algebra implementation of markov chain monte carlo algorithms for simulating markov random fields is proposed . </S>",
    "<S> it allows the dynamics of networks whose nodes have discrete state spaces to be specified by the action of an update operator that is composed of creation and annihilation operators . </S>",
    "<S> this formulation of discrete network dynamics has properties that are similar to those of a quantum field theory of bosons , which allows reuse of many conceptual and theoretical structures from qft . </S>",
    "<S> the equilibrium behaviour of one of these generalised mrfs and of the adaptive cluster expansion network ( acenet ) are shown to be equivalent , which provides a way of unifying these two theories . </S>"
  ]
}
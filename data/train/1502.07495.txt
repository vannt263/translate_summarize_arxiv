{
  "article_text": [
    "the internet is challenged not only by the multitude and diversity of interconnected objects ( content items , sensors , controllers , services , people etc . ) but also by the mobile and virtualized nature of their hosting environment .",
    "services and applications are becoming increasingly demanding and dynamic in nature , requiring access to various sets of data , other services , controlled devices or mobile users , at internet scale .",
    "requirements for instant object publishing , open and secure access are immense .",
    "the advent of hardware virtualization and fast computing technologies boosts scalability and cost - effectiveness of internet operations and services however it amplifies mobility requirements .",
    "data , services and applications are highly virtualized , migrating within and across data centers of the same or different providers .",
    "the integration of virtual computing and networking technologies at global scale has become a crucial issue .",
    "the ip communications model is not readily fit for meeting the above challenges .",
    "communicating objects are viewed as application layer resources , accessed through specialized protocols , and networking is between network endpoints .",
    "this design makes it hard to follow object mobility and migration across the internet , while it can lead to confined object availability within large - scale service providers , as we witness today ; which , in our view , inhibits the provisioning of internet - scale applications .    the evolution towards an all - connected world , the internet of everything ( ioe ) @xcite , which is underlined by strong mobility and migration requirements , requires a new set of global networking abstractions and related functions , beyond those of the ip model .",
    "network programmability and virtualization technologies , most notably sdn @xcite and nfv @xcite , are versatile means for building networking solutions , with openness and flexibility in incorporating network functionality being their main strengths ; per se they do not constitute specific network architectures . although already applied in specific environments , especially cloud environments , internet architectures utilizing their benefits remain an active topic of research .",
    "the named networking nature of the icn paradigm @xcite-@xcite has the potential of gracefully meeting the instant availability and generalized mobility requirements of the ioe because it can address these requirements through native network means rather than through new / add - ons in protocols at the network and/or the application layers .",
    "the unique capability of icn compared to host - centric networking for dealing with the location and service dynamics in an iot environment @xcite is highlighted in @xcite .",
    "being content - centric , existing icn architectures adopt a pull ( request - reply ) model for transferring data over the network . their ability to support conversational and notification services",
    "is not evident .",
    "although a number of proposals have been made ( e.g. , @xcite ) , especially on ccn / ndn architectures , service support in icn is an open research issue .",
    "we propose the _ object - oriented networking ( oon ) _ paradigm to the end of providing a flexible and sustainable networking and service enablement infrastructure for the ioe .",
    "following icn , oon views the various objects that need to be accessed or communicate via the internet as network layer resources identified by location - independent names . by abstracting them as computing objects , with attributes and methods , rather than as content ( static or dynamic ) like in existing icn architectures",
    ", oon provides for :    * multiple - attribute descriptive object names , * object discovery based on description semantics even with partially - specified names and * any form of data exchange ( pull , push or interactive ) between the methods that objects expose .    by placing data exchange between objects in the context of their methods , required transport and application layer interactions",
    "may not necessarily rely on standardized protocols , while service development can be facilitated .",
    "building on its semantic richness , the design of oon allows the flexible incorporation of security - by - design solutions .",
    "the rest of the paper is organized as follows .",
    "section  [ principles ] , [ data - layer ] and  [ information - layer ] describe the oon framework .",
    "section  [ routing ] discusses routing scalability in oon , while section  [ realisation ] addresses realization and deployment aspects .",
    "section  [ benefits ] presents the oon benefits , whereas section  [ icn ] positions oon with respect to existing icn architectures .",
    "finally , section  [ conclusions ] concludes the paper and highlights dimensions for future work .",
    "oon proposes a `` named object '' networking model , where the term `` object '' refers to anything that contains data e.g. , documents , books , articles , pictures , videos and movies , or is able to produce or consume data e.g. , smart meters , sensors , various services , users and individual persons .",
    "the various data - consuming , -producing or -holding objects are seen as instances of specific well - defined classes since they can be distinguished into ( sub-)types , as indicated by the previous examples , that can be clearly and comprehensibly described .",
    "this premise is in line with various on - going modeling activities like the dublin core initiative @xcite and the foaf project @xcite .    as a result",
    ", objects can be viewed that exist in a class - instantiated or _ informational form _ , comprising a set of attribute - value pairs and a list of methods , as appropriate to the class they belong .",
    "in addition , objects are viewed in their `` default '' _ physical form _ in which they actually exist in a networked environment e.g. , as a file , a computer process , a physical thing or a human being .",
    "the following point is worth - making .",
    "existing networking technologies are solely concerned with objects in their physical form , irrespective of whether they assume network location - specific or informational addressing schemes . in oon , we complement object physical forms with informational forms for abstracting networking at a user comprehensible level , which is beneficial from many aspects ; object naming , discovery , higher - level interactions and service development",
    ".    an object may exist in multiple physical forms e.g. , cached content items .",
    "however , it can only be associated with a single informational form , which signifies its availability -objects can not be accessed unless their informational forms exist .",
    "the attributes in the object informational forms are distinguished into : description attributes , presenting the main characteristics and properties of the object class ; management attributes , holding the state , status and various use and usage statistics ; and , relationship attributes , holding `` pointers '' to ( the identifiers of ) the corresponding object s physical form(s ) , perhaps other objects according to well - defined relationships .",
    "the methods in the object informational forms correspond to the rudimentary actions that can be performed on the data that the object may hold , produce or consume , such as to push / send , pull / get or sink / consume data .",
    "for instance , a content item presents a method for sending its data .",
    "additional methods may be provided to expose the particular higher - level communication services that a specific object class may offer e.g. , to chat or to talk for persons or to pause or to jump for videos .",
    "it is worth noting that security and management functionality may be embodied in the object methods and/or in other specialized , not publicly visible though , objects . without loss of generality ( see section  [ realisation ] ) , it is assumed that the realization of the object methods is part of their physical forms .",
    "oon encompasses two distinct networking layers : the _ information networking layer _ and the _ data networking layer_. the data networking layer maintains and interconnects objects in their physical form and it is responsible for transferring data between objects . the information networking layer maintains and interconnects objects in their informational form and enables the discovery of objects that can be accessed at global scale .",
    "it is noted that object discovery is based on the semantics of the attributes included in the object informational forms , not on the data ( terms / key words ) that the objects actually contain or produce . as such , oon does not obsolete the role of search engines . on the contrary",
    ", it facilitates required crawling operations , avoiding tensions with nsps , and enhances the ability to search for everything as it becomes available in the internet , including things and their data which currently are out of searching scope ; these can be achieved by crawling first the information networking layer .",
    "furthermore , oon calls for a distributed multi - polar search paradigm to the benefit of scalable global and instant search of everything .",
    "logically , the information networking layer lies above the data networking layer since object informational forms hold pointers to ( the identifiers of ) the corresponding object physical forms .",
    "the two layers can operate completely independently with the correctness of their operations depending on the consistency between the object forms in each layer .",
    "appropriate mechanisms should therefore exist to ensure that the objects informational forms maintain valid and up - to - date pointers to their physical forms .",
    "the data and information networking layers are operated by different interconnected oon domains , which may not necessarily be in @xmath0 correspondence .",
    "domains in different layers need not be connected , since each layer has distinct networking goals . as in today s internet , the global topology at each networking layer can not be known .",
    "domains at the data networking layer are mainly characterized by their geographical span , while domains at the information networking layer are mainly characterized by the volume and kinds of objects that they hold . in analogy to ip , domains at the data networking layer correspond to nsps , while domains at the information networking layer correspond to those running the dns backbone .",
    "in fact , the information networking layer can be viewed as a multiple - attribute naming resolution mechanism with inherent searching capabilities as opposed to a fixed - naming resolution service , as in ip .",
    "objects are identified in their physical and informational forms by distinct identifiers : a _ an informational name ( i - name ) _ and a _ physical - form name ( p - name ) _ , respectively .",
    "informational names identify objects in a descriptive manner at a user - friendly abstraction level .",
    "each object class can be completely characterized in terms of the so - called _ class - defining attributes _ -with objects within the class differing in their values- which by definition are part of the description attributes included in the object informational forms .",
    "as such , object i - names and informational forms are not different structures ; i - names are included in informational forms and conversely , informational forms extend i - names with additional information .",
    "objects are identified by their i - name in the information networking layer .",
    "physical - form names identify objects from a data networking perspective . the routing functions ( route dissemination , aggregation , selection ) in the data networking layer",
    "operate on these names .",
    "it is noted that for routing scalability and forwarding efficiency , objects could not be identified by their i - name , since i - names do not provide for high degrees of aggregation , while their structure ( components and size ) are largely variable .",
    "in addition to being hierarchical and of fixed length for enabling scalable and efficient routing , object p - names should not bear network location or service technology semantics for supporting object mobility and migration , while they should be consistent for facilitating caching and multicasting within and across domains . note that bindings for verifying object integrity and provenance could be embedded in the object informational forms , not in p - names .    the definition of the semantics and the structure of object p - names should be seen in conjunction to their assignment process ( see next section ) and their ability to support scalable network operations .",
    "it is left as a design choice of different oon approaches , which of course are required to inter - operate at the data networking layer .    since object i- and p - names serve distinct purposes -i - names are used for object discovery , while p - names are used for routing data between objects- they have different characteristics .",
    "object i - names are expressive and comprehensible , being made up of common - sense attributes , which may even be guessed if not known , whereas p - names are system - centric and generally not user - friendly .",
    "object i - names may be supplied in a partially or loosely defined form , whereas p - names are strict in syntax and value being of no use unless they are supplied correctly in their entirety . in analogy to ip networking , object i - names correspond to uris and p - names to ip addresses .",
    "first , objects need to be _ instantiated _ i.e. , have their physical form appeared in data networking domain(s ) and _ published _",
    "i.e. , have their informational form created in an information networking domain . in the general case , object instantiation and publishing takes place at the same epoch , following a bottom - up , first instantiated then published , or a top - down , first published then instantiated , procedure .",
    "however , publishing may not be required for objects whose data networking name , p - name , can be made known to other objects through other specialized means than public discovery .",
    "objects have their informational name , i - name , defined , during publication , as part of the process of filling out their informational forms .",
    "this process may be carried out through automated and/or manual means , depending on particular ( publishing and/or published ) object characteristics .",
    "objects may be assigned their p - name by the domain holding their physical form , during instantiation , or by the overlying domain maintaining their informational form , during publishing .",
    "evidently , this choice is of significant importance since it affects the semantics , structure and number of distinct prefixes of object p - names , therefore data routing scalability and forwarding efficiency , as well as name consistency across data networking domains .",
    "since it touches upon business aspects , it is left as an option . in any case , for data routing scalability and name consistency reasons , oon assumes that there is a trusted organization like iana @xcite , which supplies domains ( either in the information or in the data networking layer ) with `` top level identifiers '' for _ prefixing ( the physical forms of ) objects in a systematic manner _ , that is in a manner that favors aggregation per individual domain .",
    "once objects are instantiated , they can exchange data with other objects , through the data networking layer , provided that their p - names are known to each other ( through discovery or other means ) .",
    "once objects are published , they can be discovered by other objects based on the semantics of their attributes , through interactions with the information networking layer .",
    "their p - name can be retrieved and subsequently , if desired , data exchange can take place in the data networking layer .",
    "figure [ architecture ] presents the logical architecture of oon summarizing the section .",
    "the data networking layer provides for a single network message , the `` data '' message , for carrying data between objects in their physical form .    _",
    "data exchange between objects is always done within the context of their methods_. the `` data '' message header includes information about the calling object and its initiating method , the target object and the method to be invoked therein .",
    "this quadruplet is analogous to the source and destination pairs of ip address and port number included in the ip header .",
    "it also includes a reply - to method specified by the calling object , to which the called object should send subsequent data .",
    "the default for the calling , called and reply - to methods are the generic data - related methods -to get , send and sink data- that every object supports .",
    "additional information may be included such as transfer priority and cumulated transfer time , as deemed necessary by specific oon approaches .",
    "generally speaking , objects can learn about the methods that other objects support by discovering the objects and `` reading '' their informational forms .",
    "the latter can be done manually or though automated inspection means . note that the methods of widely used object classes may be globally known .    in the following",
    "we exemplify the `` data '' header information through typical data exchanges .",
    "note that object methods are named as actions that can be performed to the objects than as capabilities offered to other objects .",
    "that is , a content item exposes a `` send data '' method than a `` get data '' method for enabling other objects to retrieve its data .",
    "if a data consumer , object @xmath1 , wishes to retrieve the data of a file , object @xmath2 , object @xmath1 , say its method ` getdatafrom ` , will issue a `` data '' message to object @xmath2 , calling for its method , say ` senddatato ` ; subsequently , for sending the data to the requester , object s @xmath2 called method will issue `` data '' messages to object @xmath1 , calling for its method , say ` sinkdatafrom ` , or the particular method that object @xmath1 specified in the initial `` data '' message .    the voice conversation between two persons , objects @xmath1 and",
    "@xmath2 , involves an exchange of `` data '' messages in both directions . assuming that the two objects have agreed to converse , object @xmath1 ,",
    "say its method ` talking ` , sends `` data '' messages to object @xmath2 , say to method ` listening ` , specifying also that the reply data should be sent to its method , say ` listening ` ; and , similarly , in the other direction , object @xmath2 sends its own `` data '' messages to object @xmath1 .",
    "`` data '' messages are routed on called - object information i.e. , on the names identifying object physical forms ( p - names , see section [ naming ] ) .",
    "calling - object information or other information could be utilized for providing differentiated routing .",
    "it is taken that object methods exist within local object scope , implying that object physical forms can not be distributed . as such , object method information can not be globally identifiable and therefore used for routing .",
    "the design choice of including not only object but also method information in the data - carrying messages is made to the benefits of security and higher - level communications . from a security perspective , it adds extra levers .",
    "method names , in particular the reply - to method , could be cryptographic and/or could vary during sessions for continuously asserting that data are exchanged between legitimate parties .",
    "higher - level communications are facilitated in terms of flexibility , performance and service provisioning as there is no need to standardize required protocols .",
    "higher - level services can be considered as objects per se and therefore their interfaces -object methods- can be invoked natively by the proposed network message .",
    "consensus on required capabilities and interface semantics can be established significantly faster than agreements on technical specifications through explicit standardization cycles .",
    "scalable means for inter / intra - domain routing based on physical - object names , associated protocols , mechanisms and generic nodal functions are the main challenges in this layer ( see section [ pnamer ] ) . caching and multicast , which are obviously facilitated by the named - object nature of oon ,",
    "are not considered at a framework level ; they are left as open design issues to be dealt within the context of specific oon approaches .",
    "the information networking layer provides for the `` xfind '' and the `` results '' messages , which , in the general case , are in @xmath3 correspondence .",
    "additionally , it provides for interface messages corresponding to the actions and their responses that may be performed on object informational forms , namely : find the ones matching certain criteria , register a new one , modify and delete existing ones .",
    "interface action messages translate to appropriate `` xfind '' messages and the produced `` results '' messages to interface responses .    in its find - version ,",
    "the `` xfind '' message includes information about the object(s ) of a specific class to be sought for .",
    "this information corresponds to a partially defined object informational form .",
    "specifically , it contains pairs of the class description attributes and logical expressions for their values .",
    "the message traverses the distributed environment maintaining the object informational forms to the end of locating those matching the included information . as they are located , they are packaged in `` results '' messages and returned to the node that issued the `` xfind '' message following the reverse route .",
    "in its other versions , the `` xfind '' message includes the exact attribute - value pairs of the object s informational form to be created , modified or deleted . in these cases ,",
    "the `` xfind '' message effectively checks the absence or existence of the carried informational form , which only if so is created or modified / deleted , respectively .",
    "a single `` results '' message is returned containing an affirmation of the requested action .",
    "generic means for scalable and efficient routing of `` xfind '' messages in a distributed multi - domain environment that is , for routing on multiple - attribute names with precisely or loosely specified values , is the main challenge in this layer ( see section [ inamer ] ) .",
    "in addition , procedures and mechanisms for aligning , merging and distributing object informational forms across domains are required .",
    "obviously , these procedures are performed off - line at the granularity of agreement establishment between domains .",
    "mechanisms for secure object access should be incorporated .",
    "a policy - based paradigm is recommended , whereby access control policies could be defined by the objects themselves setting the viewing ( of informational forms ) and communication ( data exchange ) rights of requesting objects .",
    "the interface messages should convey an unambiguous identifier of the requesting object e.g. , its informational form and be time - stamped .",
    "this layer bears its own security concerns , which are related to its operational integrity and the validity / accuracy of the maintained information .",
    "appropriate mechanisms should be provided for ensuring that the infrastructure , interfaces and information are not compromised ; such as , mechanisms for detecting false object informational forms and for avoiding malicious attacks .",
    "these security concerns are an aftermath of oon , however they should be weighed out with its benefits ; after all , they are common security concerns for which solutions have already been worked out .",
    "the above security aspects , at object access and layer operations levels call for a logically distinct _",
    "information security layer _",
    ", where all related mechanisms could be realized .",
    "the architecture of such a security layer is orthogonal to the proposed oon framework .",
    "for scalable and efficient routing based on multiple - attribute names , we propose a _ lexicographic partitioning - based routing _",
    "scheme , ala multiple - dimension dht .",
    "such names can be seen as points in a multi - dimensional information space , with the dimensions corresponding to the attributes .",
    "the value space in each attribute - dimension is ordered and bound ( e.g. , a*-*z ) and as such it can be segmented . by taking unions of the cartesian product of these elementary segments , n - cubes ,",
    "lexicographic partitions can be formed , which are then assigned to suitably connected nodes .",
    "this gives rise to a network of _ information relay nodes ( irns ) _ , each holding and managing a specific subset of the whole multiple - attribute namespace .",
    "the proposed lexicographical approach to partitioning and networking a multiple - attribute namespace avoids the requirement for an explicit exchange of routing information as objects are added / updated / deleted and facilitates simple forwarding schemes . as the namespace is partitioned and pre - assigned to irns , at publishing epochs , ( the informational form of ) an object just needs to be forwarded to the node assigned to maintain the corresponding partition .",
    "similarly , at request epochs , that node needs to be reached .",
    "the formation of lexicographic partitions and the topology of the irn network are the free parameters for tuning to best meet the intrinsic aspects of routing in multi - dimensional namespaces .",
    "we have worked ( to be published ) in such schemes and the results confirm scalable and efficient operations at the expense of computing and connectivity resources .",
    "oon prescribes ( see section [ naming ] ) that object p - names are hierarchical with fixed number of components and size . without loss of generality",
    "it can be assumed that their structure if of the form @xmath4 , where the first part should be globally unique and is used for inter - domain routing , while the second part should be unique within the first part and is used for intra - domain routing . as outlined in section [ operation ] ,",
    "object p - names are assigned by providers holding the object informational or physical forms . as such",
    ", the magnitude of @xmath5 is in the order of the number of such providers , not of the objects , which obviously impacts positively on inter - domain routing scalability . routing on p - names",
    "can follow the routing schemes proposed in the literature for icn routing .",
    "the data and information networking layers can be realized through existing software - defined networking or network functions virtualization technologies . they can be deployed in an incremental fashion .",
    "the information networking layer can initially be deployed to provide for object discovery and resolution to ip addresses or uris .",
    "subsequently , the data networking layer can be deployed , again in an incremental fashion e.g. , for different types of objects .",
    "it is noted that the realization technologies facilitate deployment and interoperation with ip .    as stated in section [ forms ] , the realization of the objects methods is considered to be part of their physical form .",
    "evidently , this is the case for service kind of objects . for other kinds of objects ,",
    "this can be achieved through alternative means .",
    "indicatively , we mention : by specialized `` container objects '' or by transparent applications e.g. , oon servers , in which cases they should appear in the oon object name space on behalf of the objects that they hide ; by native means at file system or os levels , in the end - system where the object physical forms exist .",
    "the following points are worth - making .",
    "the notion of containers is not only useful for deployment but also for scalability reasons .",
    "transport control logic could be provided as part of the realization of object methods or through specialized objects , which evidently should not be publicly accessible .",
    "similarly , network and service management intelligence could be provided in the form of oon - adhering objects , without requiring standardized protocols for their interactions .",
    "overall , oon proposes an _ object - oriented communications model _ advocating an open communications software market .",
    "by design , oon provides for seamless data transfer and semantic discovery of objects across an internet - connected world ( of content , things , services and people ) through common means , _ avoiding interoperability problems between different naming and networking systems for different kinds of objects_. building on the icn paradigm ( see section  [ principles ] ) , its `` named - object '' networking nature can _ inherently support mobility , migration , in - network caching and multicast_.    by distinguishing between object informational and physical forms , oon allows the _ flexible accommodation of security - by - design solutions _ for object verification and access control , identity management and privacy , without burdening the naming structure used for data networking .",
    "oon promotes a communications model , where higher level interactions may not _ necessarily be based on standardized protocols _ , but rather on a cascade of method calls ; in oon , service capabilities can be exposed in a technology - agnostic manner , may be discovered if not a priori known and invoked by native network means .",
    "this obviously impacts positively on internet service provisioning .",
    "finally , oon constitutes a _ sustainable networking and service enablement infrastructure _ not only for the evolving dynamics of the current internet but also for future requirements . required functionality , being basically software ,",
    "can be introduced in the internet as needed in the form of oon - adhering objects .",
    "oon follows the named - networking principle of icn however it does not build around the notion of content as existing icn architectures do . to us ,",
    "the icn paradigm is orthogonal to content . by bringing oop principles into icn",
    ", oon builds around the notion of named object ( not just named data)- in the oop sense , an object comprises attributes ( data and content per se ) and methods through which data can be accessed . as such , oon differs from existing icn architectures and brings unique benefits over them :    * semantically rich names ; in current icn architectures names are hierarchical or flat , not of a descriptive multiple - attribute structure as in oon that evidently bears richer semantics . *",
    "discovery and dynamic name construction capabilities ; in current icn architectures names should be supplied as provided by the producer / publisher , whereas in oon they may be supplied in a partially - specified form , being filled in automatically and selected by the user ( request object ) if multiple options exist .",
    "* native means for bridging user and network views of the world - because of the above . note that this does not obsolete current web search engines , which provide for deep - data-(content)-based search , whereas oon can only provide for meta - data - based search . * native support of any service interaction model ; current icn architectures are receiver - initiated ( providing for a pair of data retrieval messages , request and reply messages ) , whereas oon can natively support data exchange between everything in any possible mode -pull , push or interactive .",
    "* native support for higher - level services ; current icn architectures may require dedicated standardized protocols at transport and application layers , whereas oon advocates a protocol - less communication model - required intelligence ( brought as objects ) and interactions ( realized through method - oriented data exchange ) can be deployed faster than waiting standardization .",
    "generalizing icn from named - data to named - object networking , all existing icn architectures can be mapped to oon .",
    "for example , the ccn / ndn architecture @xcite maps to the data - networking layer of oon with the interest and data messages corresponding to the oon data messages targeted for send - data and sink - data methods , respectively . the upper layer of oon , the information - network layer , that brings the three first of the above benefits , is missing from all icn architectures",
    "we proposed object - oriented networking ( oon ) as an internet architectural framework , for meeting current and future interconnection , mobility , migration and technology integration requirements .",
    "the key element of the oon design is the interconnection of the various entities that communicate or are accessed via the internet from an informational perspective.this enables distributed , multi - polar search of everything based on description semantics and the realization of higher - level interactions by network - native means .",
    "aspects of future work correspond to the development and performance evaluation of the technical challenges underlining the operation of the data and information networking layers : routing based on multiple - attribute names ; schema of object informational forms and naming structure for data networking ; procedures for object instantiation and publishing ; te and ( self-)management functions and mechanisms at the information and data networking layers ; and , security infrastructure and mechanisms .",
    "n. mckeown , t. anderson , h. balakrishnan , g. parulkar , l. peterson , j. rexford , s. shenker and j. turner , `` openflow : enabling innovation in campus networks , '' acm sigcomm computer communication review , vol .",
    "38 , april 2008 .",
    "w. k. chai , n. wang , i. psaras , g. pavlou , ch .",
    "wang , g. g. de blas , f. salguero , l. liang , s. spirou , an .",
    "beben and el .",
    "hadjioannou , `` curling : content - ubiquitous resolution and delivery infrastructure for next - generation services , '' in ieee communications magazine , vol .",
    "49 , pp . 112120 , 2011 .",
    "g. xylomenos , c. n. ververidis , v. a. siris , n. fotiou , c. tsilopoulos , x. vasilakos , k. v. katsaros and g. c. polyzos , `` a survey of information - centric networking research , '' in ieee commun . surveys , 2013 .",
    "v. jacobson , d. k. smetters , n. h. briggs , m. f. plass , p. stewart , j. d. thornton and r. l. braynard , `` voccn : voice - over content - centric networks '' , workshop on re - architecting the internet ( rearch ) , pp . 16 , 2009 ."
  ],
  "abstract_text": [
    "<S> we propose the object - oriented networking ( oon ) framework , for meeting the generalized interconnection , mobility and technology integration requirements underlining the internet . in oon , </S>",
    "<S> the various objects that need to be accessed through the internet ( content , smart things , services , people , etc . ) are viewed as network layer resources , rather than as application layer resources as in the ip communications model . by abstracting them as computing objects -with attributes and methods- </S>",
    "<S> they are identified by expressive , discoverable names , while data are exchanged between them in the context of their methods , based on suitably defined system - specific names . </S>",
    "<S> an oon - enabled internet is not only a global data delivery medium but also a universal object discovery and service development platform ; service - level interactions can be realized through native network means , without requiring standardized protocols . </S>",
    "<S> oon can be realized through existing software - defined networking or network functions virtualization technologies and it can be deployed in an incremental fashion .    </S>",
    "<S> internet architecture , information - centric networks , object - oriented programming , routing , ioe , iot . </S>"
  ]
}
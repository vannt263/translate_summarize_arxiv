{
  "article_text": [
    "generally , embedded computer systems perform dedicated functions with a high degree of reliability . they are used in a variety of sophisticated applications , which range from entertainment software , such as games and graphics animation , to safety - critical systems , including nuclear reactors and automotive controllers  @xcite .",
    "embedded systems are ubiquitous in modern day information systems , and are also becoming increasingly important in our society , especially in micro - grids , where reliability and carbon emission reduction are of paramount importance  @xcite , and in cyber - physical systems ( cps ) , which demand short development cycles and again a high - level of reliability  @xcite . as a consequence ,",
    "human life has also become more and more dependent on the services provided by this type of system and , in particular , their success is strictly related to both service relevance and quality .",
    "figure  [ intelligent - product ] shows embedded systems examples , which typically consist of a human - machine interface ( _ e.g. _ , keyboard and lcd ) , a processing unit ( _ e.g. _ , real - time computer system ) , and an instrumentation interface ( _ e.g. _ , sensor , network , and actuator ) @xcite . indeed , many current embedded systems , such as unmanned aerial vehicles ( uavs )  @xcite and medical monitoring systems  @xcite , become interesting solutions only if they can reliably perform their target tasks .",
    "besides , when physical interaction with the real world is needed , which happens in cps , additional care must be taken , mainly when human action is directly replaced , as in vehicle driving . regarding the latter , even human - in - the - loop feedback control can be employed , which raises deeper concerns w.r.t .",
    "reliability of human behavior modeling and system implementation .",
    "consequently , it is important to go beyond design correctness and also address behavior correctness , which may be performed by incorporating system models . in particular , these models can be used for synthesizing a given system , ensuring that all needed functions are correctly implemented and the correct behavior exhibited , i.e. , the system is indeed correct by its method of construction  @xcite . here",
    ", machine learning emerges as a powerful technique to automatically learn the correct behavior of the system , which must provably satisfy a given correctness specification @xmath0 .",
    "specifically , synthesizers can use @xmath0 as starting point and then incrementally produce a sequence of candidate solutions that satisfy @xmath0 , by integrating deductive methods with inductive inference ( learning from counterexamples )  @xcite . as a result , a given candidate solution can be iteratively refined to match the specification @xmath0 based on a counterexample - guided learning approach .",
    "state - of - the - art verification methodologies for embedded systems generate test vectors ( with constraints ) and use assertion - based verification and high - level processor models , during simulation  @xcite , as shown in figure  [ verification - methodologies ] .        here",
    ", the main challenges regarding the verification of embedded systems lie on improving coverage , pruning the state - space exploration during verification , and incorporating system models , which allow specific checks regarding system behavior and not only code correctness . additionally , embedded system verification raises additional challenges , such as : ( 1 ) time and energy constraints ; ( 2 ) handling of concurrent software ; ( 3 ) platform restrictions ; ( 4 ) legacy designs ; ( 5 ) support to different programming languages and interfaces ; and ( 6 ) handling of non - linear and non - convex optimization functions .    indeed , the first two aspects are of extreme relevance in micro - grids and cyber - physical systems , in order to ensure reliability , which is a key issue for ( smart ) cities , industries , and consumers , and the third one is essential in systems that implement device models , such as digital filters and controllers , which present a behavior that is highly dependent on signal inputs and outputs and whose deployment may be heavily affected by hardware restrictions . the fourth aspect is inherent to a large number of embedded systems from telecommunications , control systems , and medical devices . in particular , software developed for those systems has been extensively tested and verified , and also optimized for efficiency over years .",
    "therefore , when a new product is derived from a given platform , a lot of legacy code is usually reused for reducing development time and improving code quality .",
    "the fifth aspect is related to the evolution of development processes and technologies , which may delay the application of suitable verification and synthesis approaches if verifiers and synthesizers do not support different programming languages and interfaces .",
    "the last one is related to the widespread use of embedded systems in autonomous vehicle navigation systems , which demand optimization solving during their execution for a wide range of functions , including non - linear and non - convex optimization functions .",
    "those challenges place difficulties for developing ( reliable ) synthesizers for embedded systems , especially for cps and micro - grids , where the controlled object ( _ e.g. _ , physical plant ) typically exhibits continuous behavior whereas the controller ( usually implemented by a real - time computer system ) operates in discrete time and over a quantized domain ( cf .",
    "intelligent product in figure  [ intelligent - product ] ) .",
    "in particular , synthesizers for those systems need to consider the effects of the quantizers ( a / d and d / a converters ) , when a digital equivalent of the controlled object is considered , _",
    "i.e. _ , a model of their physical environment . additionally , finite - precision arithmetic and their related rounding errors need to be considered when correct - by - construction code is generated for embedded systems .",
    "the main challenge lies on exploiting effectively and efficiently counterexamples provided by verifiers to automatically learn reliable embedded software implementations ( cf .",
    "figure  [ verification - methodologies ] ) .",
    "this research statement tackles six major problems in computer - aided verification and synthesis for embedded systems , which are ( partially ) open in current published research .    *",
    "( rp1 ) * provide suitable encoding into smt , which may extend the background theories typically supported by smt solvers , with the goal of reasoning accurately and effectively about realistic embedded ( control ) software .    * ( rp2 ) * exploit smt techniques to leverage bounded model checking of multi - threaded software , in order to mitigate the state - explosion problem due to thread interleaving .    *",
    "( rp3 ) * prove correctness and timeliness of embedded systems , by taking into account stringent constraints imposed by hardware .    * ( rp4 ) * incorporate knowledge about system purpose and associated features to detect system - level and behavior failures .    *",
    "( rp5 ) * provide tools and approaches capable of addressing different programming languages and application interfaces , with the goal of reducing the time needed to adapt current verification techniques to new developments and technologies .    *",
    "( rp6 ) * develop automated synthesis approaches that are algorithmically and numerically sound , in order to handle embedded ( control ) software that is tightly coupled with the physical environment by considering uncertain models and fwl effects .",
    "in order to support smt encoding * ( rp1 ) * , cordeiro , fischer , and marques - silva proposed the first smt - based bmc for full c programs , called efficient smt - based context - bounded model checker ( esbmc )  @xcite , which was later extended to support c++ , cuda , and qt - based consumer electronics applications .",
    "this approach was also able to find undiscovered bugs related to arithmetic overflow , buffer overflow , and invalid pointer , in standard benchmarks , which were later confirmed by the benchmarks creators ( _ e.g. _ , nokia , nec , nxp , and verisec ) .",
    "other smt - based bmc approaches have also been proposed and implemented in the literature  @xcite , but the coverage and verification time of all existing ones are still limited to specific classes of programs , especially for those that contain intensive floating - point arithmetic and dynamic memory allocation .",
    "one possible research direction is to bridge the gap between bmc tools and smt solvers to propose background theories and develop more efficient decision procedures to handle specific classes of programs .",
    "the smt - based bmc approach proposed by cordeiro , fischer , and marques - silva was further developed to verify correct lock acquisition ordering and the absence of deadlocks , data races , and atomicity violations in multi - threaded software based on posix and cuda libraries * ( rp2 ) *  @xcite , considering monotonic partial - order reduction and state - hashing techniques , in order to prune the state - space exploration .",
    "recent advances for verifying multi - threaded c programs have been proposed to speed up the verification time , which significantly prune the state - space exploration ; however , the class of concurrent programs ( _ e.g. _ , opencl and mpi ) that can be verified is still very limited .",
    "one possible research direction is to further extend bmc of multi - threaded programs via sequentialization  @xcite and also analyze interpolants to prove non - interference of context switches  @xcite .",
    "novel approaches to model check embedded software using _ k_-induction and invariants were proposed and evaluated in the literature * ( rp3 ) * , which demonstrate its effectiveness in some real - life embedded - system applications  @xcite .",
    "however , the main challenge still remains open , _",
    "i.e. _ , to compute and strengthen loop invariants to prove program correctness and timeliness in a more efficient and effective way , in order to be competitive with other model - checking approaches  @xcite .",
    "in particular , invariant - generation algorithms have substantially evolved over the last years , with the goal of discovering inductive invariants of programs or continuously refine them during verification  @xcite .",
    "yet there is still a lack of studies for exploiting the combination of different invariant - generation algorithms ( _ e.g. _ , interval analysis , linear inequalities , polynomial equalities and inequalities ) and how to strengthen them .",
    "state - of - the - art smt - based context - bmc approaches were extended to verify overflow , limit cycle , stability , and minimum phase , in digital systems * ( rp4)*. indeed , digital filters and controllers were tackled , in order to verify system - level properties of those systems , specified as linear - time temporal logic  @xcite .",
    "in particular , a specific uav application was tackled , with the goal to verify its attitude controllers . in general , however , there is still a lack of studies to verify system - level properties related to embedded systems ; emphasis should be given to micro - grids and cyber - physical systems , which require high - dependability requirements for computation , control , and communication .",
    "additionally , the application of automated fault detection , localization , and correction techniques to digital systems represents an important research direction to make bmc tools useful for engineers .",
    "although esbmc was extended to support c / c++ and some variants * ( rp5 ) * , new application interfaces and programming languages are often developed , which require suitable verifiers .",
    "indeed , it would be interesting if a new programming language model could be loaded , which along with a bmc core could check different programs . some work towards that was already presented by  @xcite , which employed operational models for checking qt - based programs from consumer electronics . in summary ,",
    "the bmc core is not changed , but instead an operational model , which implements the behavior and features of qt libraries , is used for providing the new code structure to be checked .",
    "such research problem is closely related to the first one * ( rp1 ) * and has the potential to devise a new paradigm in software verification .",
    "state - of - the - art synthesis approaches * ( rp6 ) * for embedded ( control ) systems typically disregard the platform in which the embedded system software operates and restrict itself to generate code that do not take into account fwl effects",
    ". however , the synthesized system must include the physical plant to avoid serious system s malfunctioning ( or even a catastrophe ) due to the embedded ( control ) software , _",
    "e.g. _ , the mars polar lander did not account for leg compressions prior to landing  @xcite .",
    "research in this direction has made some progress to design , implement , and evaluate an automated approach for generating correct - by - construction digital controllers that is based on state - of - the - art inductive synthesis techniques  @xcite .",
    "however , there is still little evidence whether that approach can scale for larger systems modeled by other types of representations ( _ e.g. _ , state - space ) .",
    "another research direction for synthesizers is to automatically produce uav trajectory and mission planning code , by taking into account system s dynamics and nonholonomic constraints . as a result",
    ", verifiers and synthesizers need to handle a wide range of functions , including non - linear and non - convex optimization problems  @xcite .",
    "machine learning techniques could be employed here to learn from counterexamples , _",
    "i.e. _ , in the inductive step , synthesizers could learn the model from raw data , and in the deductive step , the model could be applied to predict the behaviour of new data  @xcite .",
    "this research statement presented the main challenges related to the verification of design correctness , in embedded systems , and also raised some important side considerations about synthesis . given that software complexity has significantly increased in embedded products , there is still the need for stressing and exhaustively covering the entire system state space , in order to verify low - level properties that have to meet the application s deadline , access memory regions , handle concurrency , and control hardware registers .",
    "besides , there is a trend towards incorporating knowledge about the system to be verified , which may take software verification and synthesis one step further , where not only code correctness will be addressed , but also full system reliability .",
    "finally , it seems interesting to provide behavioral models when new application interfaces or programming language features are used , in order to extend the capabilities of current verification tools , without changing the core bmc module .    as future perspective",
    ", the main goal of this research is to extend bmc as a verification and synthesis tool for achieving correct - by - construction embedded system implementations .",
    "special attention will be given to cps and modern micro - grids , considering small - scale versions of a distributed system , so that reliability and other system - level properties ( _ e.g. _ , carbon emission reduction in smart cities ) are amenable to automated verification and synthesis , probably through behavior models ."
  ],
  "abstract_text": [
    "<S> the dependency on the correct functioning of embedded systems is rapidly growing , mainly due to their wide range of applications , such as micro - grids , automotive device control , health care , surveillance , mobile devices , and consumer electronics . </S>",
    "<S> their structures are becoming more and more complex and now require multi - core processors with scalable shared memory , in order to meet increasing computational power demands . as a consequence , reliability of embedded ( distributed ) software becomes a key issue during system development , which must be carefully addressed and assured . </S>",
    "<S> the present research discusses challenges , problems , and recent advances to ensure correctness and timeliness regarding embedded systems . </S>",
    "<S> reliability issues , in the development of micro - grids and cyber - physical systems , are then considered , as a prominent verification and synthesis application . in particular , machine learning techniques emerge as one of the main approaches to learn reliable implementations of embedded software for achieving a _ correct - by - construction _ design . </S>"
  ]
}
{
  "article_text": [
    "computational algorithms are constructed on the basis of certain primitive operations .",
    "these operations manipulate data that describe `` numbers . ''",
    "these `` numbers '' are elements of a `` numerical domain , '' that is , a mathematical object such as the field of real numbers , the ring of integers , different semirings etc .    in practice ,",
    "elements of the numerical domains are replaced by their computer representations , that is , by elements of certain finite models of these domains .",
    "examples of models that can be conveniently used for computer representation of real numbers are provided by various modifications of floating point arithmetics , approximate arithmetics of rational numbers  @xcite , interval arithmetics etc .",
    "the difference between mathematical objects ( `` ideal '' numbers ) and their finite models ( computer representations ) results in computational ( for instance , rounding ) errors .    an algorithm is called _ universal _ if it is independent of a particular numerical domain and/or its computer representation  @xcite .",
    "a typical example of a universal algorithm is the computation of the scalar product @xmath0 of two vectors @xmath1 and @xmath2 by the formula @xmath3 .",
    "this algorithm ( formula ) is independent of a particular domain and its computer implementation , since the formula is well - defined for any semiring .",
    "it is clear that one algorithm can be more universal than another .",
    "for example , the simplest newton  cotes formula , the rectangular rule , provides the most universal algorithm for numerical integration .",
    "in particular , this formula is valid also for idempotent integration ( that is , over any idempotent semiring , see @xcite ) . other quadrature formulas ( for instance , combined trapezoid rule or the simpson formula ) are independent of computer arithmetics and can be used ( for instance , in the iterative form ) for computations with arbitrary accuracy .",
    "in contrast , algorithms based on gauss ",
    "jacobi formulas are designed for fixed accuracy computations : they include constants ( coefficients and nodes of these formulas ) defined with fixed accuracy .",
    "( certainly , algorithms of this type can be made more universal by including procedures for computing the constants ; however , this results in an unjustified complication of the algorithms . )    modern achievements in software development and mathematics make us consider numerical algorithms and their classification from a new point of view .",
    "conventional numerical algorithms are oriented to software ( or hardware ) implementation based on floating point arithmetic and fixed accuracy .",
    "however , it is often desirable to perform computations with variable ( and arbitrary ) accuracy . for this purpose ,",
    "algorithms are required that are independent of the accuracy of computation and of the specific computer representation of numbers .",
    "in fact , many algorithms are independent not only of the computer representation of numbers , but also of concrete mathematical ( algebraic ) operations on data . in this case",
    ", operations themselves may be considered as variables .",
    "such algorithms are implemented in the form of _ generic programs _ based on abstract data types that are defined by the user in addition to the predefined types provided by the language .",
    "the corresponding program tools appeared as early as in simula-67 , but modern object - oriented languages ( like @xmath4 , see , for instance , @xcite ) are more convenient for generic programming .",
    "computer algebra algorithms used in such systems as mathematica , maple , reduce , and others are also highly universal .    a different form of universality is featured by iterative algorithms ( beginning with the successive approximation method ) for solving differential equations ( for instance , methods of euler , euler  cauchy , runge ",
    "kutta , adams , a number of important versions of the difference approximation method , and the like ) , methods for calculating elementary and some special functions based on the expansion in taylor s series and continuous fractions ( pad approximations ) .",
    "these algorithms are independent of the computer representation of numbers .",
    "the concept of a generic program was introduced by many authors ; for example , in  @xcite such programs were called ` program schemes . ' in this paper , we discuss universal algorithms implemented in the form of generic programs and their specific features .",
    "this paper is closely related to  @xcite , in which the concept of a universal algorithm was defined and software and hardware implementation of such algorithms was discussed in connection with problems of idempotent mathematics , see , for instance ,  @xcite .    the so - called _ idempotent correspondence principle _ , see  @xcite , linking this mathematics with the usual mathematics over fields , will be discussed below . in a nutshell",
    ", there exists a correspondence between interesting , useful , and important constructions and results concerning the field of real ( or complex ) numbers and similar constructions dealing with various idempotent semirings .",
    "this correspondence can be formulated in the spirit of the well - known n.  bohr s _ correspondence principle _ in quantum mechanics ; in fact , the two principles are closely connected ( see  @xcite ) . in a sense ,",
    "the traditional mathematics over numerical fields can be treated as a ` quantum ' theory , whereas the idempotent mathematics can be treated as a ` classical ' shadow ( or counterpart ) of the traditional one .",
    "it is important that the idempotent correspondence principle is valid for algorithms , computer programs and hardware units .    in quantum mechanics",
    "the _ superposition principle _ means that the schrdinger equation ( which is basic for the theory ) is linear .",
    "similarly in idempotent mathematics the ( idempotent ) superposition principle ( formulated by v.  p.  maslov ) means that some important and basic problems and equations that are nonlinear in the usual sense ( for instance , the hamilton - jacobi equation , which is basic for classical mechanics and appears in many optimization problems , or the bellman equation and its versions and generalizations ) can be treated as linear over appropriate idempotent semirings , see  @xcite .",
    "note that numerical algorithms for infinite dimensional linear problems over idempotent semirings ( for instance , idempotent integration , integral operators and transformations , the hamilton  jacobi and generalized bellman equations ) deal with the corresponding finite - dimensional approximations .",
    "thus idempotent linear algebra is the basis of the idempotent numerical analysis and , in particular , the _ discrete optimization theory_.    b.  a.  carr  @xcite ( see also  @xcite ) used the idempotent linear algebra to show that different optimization problems for finite graphs can be formulated in a unified manner and reduced to solving bellman equations , that is , systems of linear algebraic equations over idempotent semirings .",
    "he also generalized principal algorithms of computational linear algebra to the idempotent case and showed that some of these coincide with algorithms independently developed for solution of optimization problems .",
    "for example , bellman s method of solving the shortest path problem corresponds to a version of jacobi s method for solving a system of linear equations , whereas ford s algorithm corresponds to a version of gauss ",
    "seidel s method .",
    "we briefly discuss bellman equations and the corresponding optimization problems on graphs , and use the ideas of carr to obtain new universal algorithms .",
    "we stress that these well - known results can be interpreted as a manifestation of the idempotent superposition principle .    note that many algorithms for solving the matrix bellman equation could be found in  @xcite .",
    "more general problems of linear algebra over the max - plus algebra are examined , for instance in  @xcite .",
    "we also briefly discuss interval analysis over idempotent and positive semirings .",
    "idempotent interval analysis appears in  @xcite , where it is applied to the bellman matrix equation .",
    "many different problems coming from the idempotent linear algebra , have been considered since then , see for instance  @xcite .",
    "it is important to observe that intervals over an idempotent semiring form a new idempotent semiring .",
    "hence universal algorithms can be applied to elements of this new semiring and generate interval extensions of the initial algorithms .",
    "this paper is about software implementations of universal algorithms for solving the matrix bellman equations over semirings . in section  [ s : sem ] we present an introduction to mathematics of semirings and especially to the tropical ( idempotent ) mathematics , that is , the area of mathematics working with _ idempotent semirings _ ( that is , semirings with idempotent addition ) . in section  [ s : main ] we present a number of well - known and new universal algorithms of linear algebra over semirings , related to discrete matrix bellman equation and algebraic path problem .",
    "these algorithms are closely related to their linear - algebraic prototypes described , for instance , in the celebrated book of golub and van loan  @xcite which serves as the main source of such prototypes .",
    "following the style of  @xcite we present them in matlab code .",
    "the perspectives and experience of their implementation are also discussed .",
    "a broad class of universal algorithms is related to the concept of a semiring .",
    "we recall here the definition ( see , for instance , @xcite ) .",
    "a set  @xmath5 is called a _ semiring _ if it is endowed with two associative operations : _ addition _  @xmath6 and _ multiplication _  @xmath7 such that addition is commutative",
    ", multiplication distributes over addition from either side , @xmath8 ( resp . , @xmath9 )",
    "is the neutral element of addition ( resp . ,",
    "multiplication ) , @xmath10 for all @xmath11 , and @xmath12 .",
    "let the semiring  @xmath5 be partially ordered by a relation  @xmath13 such that @xmath8 is the least element and the inequality @xmath14 implies that @xmath15 , @xmath16 , and  @xmath17 for all @xmath18 ; in this case the semiring  @xmath5 is called _ positive _ ( see , for instance , @xcite ) .",
    "an element @xmath19 is called _ invertible _ if there exists an element @xmath20 such that @xmath21 .",
    "a semiring  @xmath5 is called a _ semifield _ if every nonzero element is invertible .",
    "a semiring  @xmath5 is called _ idempotent _ if @xmath22 for all @xmath11 . in this case",
    "the addition  @xmath6 defines a _ canonical partial order _",
    "@xmath13 on the semiring  @xmath5 by the rule : @xmath23 iff @xmath24 .",
    "it is easy to prove that any idempotent semiring is positive with respect to this order .",
    "note also that @xmath25 with respect to the canonical order . in the sequel",
    ", we shall assume that all idempotent semirings are ordered by the canonical partial order relation .",
    "we shall say that a positive ( for instance , idempotent ) semiring @xmath5 is _ complete _ if for every subset @xmath26 there exist elements @xmath27 and @xmath28 , and if the operations @xmath6 and @xmath7 distribute over such sups and infs .",
    "the most well - known and important examples of positive semirings are `` numerical '' semirings consisting of ( a subset of ) real numbers and ordered by the usual linear order @xmath29 on  @xmath30 : the semiring  @xmath31 with the usual operations @xmath32 , @xmath33 and neutral elements @xmath34 , @xmath35 , the semiring  @xmath36 with the operations @xmath37 , @xmath38 and neutral elements @xmath39 , @xmath40 , the semiring @xmath41 , where @xmath42 , @xmath43 for all @xmath44 , @xmath45 if @xmath46 , and @xmath47 , and the semiring  @xmath48 } = [ a , b]$ ] , where @xmath49 , with the operations @xmath50 , @xmath51 and neutral elements @xmath52 , @xmath53 .",
    "the semirings  @xmath54 , @xmath55 , and  @xmath48 } = [ a , b]$ ] are idempotent .",
    "the semirings @xmath55 , @xmath56}_{\\mathrm{max , min}}$ ] , @xmath57 are complete .",
    "remind that every partially ordered set can be imbedded to its completion ( a minimal complete set containing the initial one ) .",
    "the semiring @xmath58 with operations @xmath59 and @xmath60 and neutral elements @xmath61 , @xmath62 is isomorphic to @xmath54 .",
    "the semiring @xmath54 is also called the _ max - plus algebra_. the semifields @xmath54 and @xmath63 are called _",
    "tropical algebras_. the term `` tropical '' initially appeared in  @xcite for a discrete version of the max - plus algebra as a suggestion of ch .",
    "choffrut , see also  @xcite .",
    "many mathematical constructions , notions , and results over the fields of real and complex numbers have nontrivial analogs over idempotent semirings .",
    "idempotent semirings have become recently the object of investigation of new branches of mathematics , _ idempotent mathematics _ and _ tropical geometry _ , see , for instance  @xcite .",
    "denote by @xmath64 a set of all matrices @xmath65 with @xmath66  rows and @xmath67  columns whose coefficients belong to a semiring  @xmath5 .",
    "the sum @xmath68 of matrices @xmath69 and the product @xmath70 of matrices @xmath71 and @xmath72 are defined according to the usual rules of linear algebra : @xmath73 and @xmath74 where @xmath75 and @xmath76 .",
    "note that we write @xmath70 instead of @xmath77 .",
    "if the semiring  @xmath5 is positive , then the set + @xmath64 is ordered by the relation @xmath78 iff @xmath79 in  @xmath5 for all @xmath80 , @xmath81 .",
    "the matrix multiplication is consistent with the order  @xmath13 in the following sense : if @xmath82 , @xmath83 and @xmath84 , @xmath85 , then @xmath86 in @xmath87 .",
    "the set @xmath88 of square @xmath89 matrices over a [ positive , idempotent ] semiring  @xmath5 forms a [ positive , idempotent ] semi - ring with a zero element @xmath90 , where @xmath91 , @xmath92 , and a unit element @xmath93 , where @xmath94 if @xmath95 and @xmath96 otherwise .",
    "the set @xmath97 is an example of a noncommutative semiring if @xmath98 .      in what follows ,",
    "we are mostly interested in complete positive semirings , and particularly in idempotent semirings . regarding examples of the previous section , recall that the semirings @xmath56}_{\\mathrm{max , min}}$ ] , @xmath99 , @xmath100 and @xmath101 are complete positive , and the semirings @xmath56}_{\\mathrm{max , min}}$ ] , @xmath55 and @xmath102 are idempotent .",
    "@xmath103 is a completion of @xmath104 , and @xmath55 ( resp .",
    "@xmath102 ) are completions of @xmath54 ( resp .",
    "@xmath63 ) . more generally , we note that any positive semifield @xmath5 can be completed by means of a standard procedure , which uses dedekind cuts and is described in  @xcite .",
    "the result of this completion is a semiring @xmath105 , which is not a semifield anymore .",
    "the semiring of matrices @xmath88 over a complete positive ( resp . , idempotent ) semiring is again a complete positive ( resp . , idempotent ) semiring . for more background in complete idempotent semirings ,",
    "the reader is referred to  @xcite .    in any complete positive semiring @xmath5",
    "we have a unary operation of _ closure _ @xmath106 defined by @xmath107 using that the operations @xmath6 and @xmath7 distribute over such sups , it can be shown that @xmath108 is the * least solution * of @xmath109 and @xmath110 , and also that @xmath111 is the the least solution of @xmath112 and @xmath113 .    in the case of idempotent",
    "addition   becomes particularly nice : @xmath114    if a positive semiring @xmath5 is not complete , then it often happens that the closure operation can still be defined on some `` essential '' subset of @xmath5 . also recall that any positive semifield @xmath5 can be completed  @xcite , and then the closure is defined for every element of the completion .    in numerical semirings",
    "the operation  @xmath115 is usually very easy to implement : @xmath116 if @xmath117 in @xmath31 , or @xmath103 and @xmath118 if @xmath119 in @xmath103 ; @xmath120 if @xmath121 in @xmath54 and @xmath55 , @xmath122 if @xmath123 in @xmath55 , @xmath120 for all @xmath44 in @xmath48}$ ] . in all other cases",
    "@xmath124 is undefined .",
    "the closure operation in matrix semirings over a complete positive semiring  @xmath5 can be defined as in  : @xmath125 and one can show that it is the least solution @xmath126 satisfying the matrix equations @xmath127 and @xmath128 .",
    "equivalently , @xmath129 can be defined by induction : let @xmath130 in @xmath131 be defined by  , and for any integer @xmath132 and any matrix @xmath133 where @xmath134 , @xmath135 , @xmath136 , @xmath137 , @xmath138 , by definition , @xmath139     d^ * a_{21 } a^*_{11 } &     d^ *     \\end{pmatrix},\\ ] ] where @xmath140 .",
    "defined here for complete positive semirings , the closure operation is a semiring analogue of the operation @xmath141 and , further , @xmath142 in matrix algebra over the field of real or complex mumbers .",
    "this operation can be thought of as * regularized sum * of the series @xmath143 , and the closure operation defined above is another such regularization .",
    "thus we can also define the closure operation @xmath144 and @xmath145 in the traditional linear algebra . to this end , note that the recurrence relation above coincides with the formulas of escalator method of matrix inversion in the traditional linear algebra over the field of real or complex numbers , up to the algebraic operations used .",
    "hence this algorithm of matrix closure requires a polynomial number of operations in  @xmath67 , see below for more details .",
    "let  @xmath5 be a complete positive semiring .",
    "the _ matrix ( or discrete stationary ) bellman equation _ has the form @xmath146 where @xmath147 , @xmath148 , and the matrix  @xmath126 is unknown . as in the scalar case",
    ", it can be shown that for complete positive semirings , if @xmath129 is defined as in   then @xmath149 is the least in the set of solutions to equation   with respect to the partial order in @xmath150 . in the idempotent case",
    "@xmath151    consider also the case when @xmath152 is @xmath153 _ strictly upper - triangular _ ( such that @xmath154 for @xmath155 ) , or @xmath153 _ strictly lower - triangular _ ( such that @xmath154 for @xmath156 ) . in this case",
    "@xmath157 , the all - zeros matrix , and it can be shown by iterating @xmath127 that this equation has a unique solution , namely @xmath158 curiously enough , formula   works more generally in the case of numerical idempotent semirings : in fact , the series   converges there if and only if it can be truncated to  .",
    "this is closely related to the principal path interpretation of @xmath129 explained in the next subsection .",
    "in fact , theory of the discrete stationary bellman equation can be developed using the identity @xmath159 as an axiom without any explicit formula for the closure ( the so - called _ closed semirings _",
    ", see , for instance , @xcite ) .",
    "such theory can be based on the following identities , true both for the case of idempotent semirings and the real numbers with conventional arithmetic ( assumed that @xmath160 and @xmath161 have appropriate sizes ) : @xmath162 this abstract setting unites the case of positive and idempotent semirings with the conventional linear algebra over the field of real and complex numbers .",
    "suppose that @xmath5 is a semiring with zero  @xmath8 and unity  @xmath9 .",
    "it is well - known that any square matrix @xmath163 specifies a _ weighted directed graph_. this geometrical construction includes three kinds of objects : the set @xmath126 of @xmath67 elements @xmath164 called _ nodes _ , the set @xmath165 of all ordered pairs @xmath166 such that @xmath167 called _ arcs _ , and the mapping @xmath168 such that @xmath169 .",
    "the elements @xmath170 of the semiring @xmath5 are called _ weights _ of the arcs.conversely , any given weighted directed graph with @xmath67 nodes specifies a unique matrix @xmath147 .",
    "this definition allows for some pairs of nodes to be disconnected if the corresponding element of the matrix @xmath160 is @xmath8 and for some channels to be `` loops '' with coincident ends if the matrix @xmath160 has nonzero diagonal elements .",
    "recall that a sequence of nodes of the form @xmath171 with @xmath172 and @xmath173 , @xmath174 , is called a _",
    "path _ of length @xmath175 connecting @xmath176 with @xmath177 .",
    "denote the set of all such paths by @xmath178 .",
    "the weight @xmath179 of a path @xmath180 is defined to be the product of weights of arcs connecting consecutive nodes of the path : @xmath181 by definition , for a ` path ' @xmath182 of length @xmath183 the weight is @xmath9 if @xmath95 and @xmath8 otherwise .    for each matrix @xmath147 define @xmath184 ( where @xmath185 if @xmath95 and @xmath96 otherwise ) and @xmath186 , @xmath187 . let @xmath188}_{ij}$ ] be the @xmath189th element of the matrix @xmath190 .",
    "it is easily checked that @xmath191}_{ij } =     \\bigoplus_{\\substack{i_0 = i,\\ , i_k = j\\\\      1 \\leq i_1 , \\ldots , i_{k - 1 } \\leq",
    "n } }      a_{i_0i_1 } \\odot \\dots \\odot a_{i_{k - 1}i_k}.\\ ] ] thus @xmath188}_{ij}$ ] is the supremum of the set of weights corresponding to all paths of length @xmath175 connecting the node @xmath192 with @xmath193 .",
    "let @xmath129 be defined as in  .",
    "denote the elements of the matrix @xmath129 by @xmath194 , @xmath195 ; then @xmath196    the closure matrix @xmath129 solves the well - known _ algebraic path problem _ , which is formulated as follows : for each pair @xmath197 calculate the supremum of weights of all paths ( of arbitrary length ) connecting node @xmath198 with node @xmath199 .",
    "the closure operation in matrix semirings has been studied extensively ( see , for instance , @xcite and references therein ) .",
    "let @xmath200 , so the weights are real numbers . in this case @xmath201",
    "if the element @xmath170 specifies the length of the arc @xmath197 in some metric , then @xmath194 is the length of the shortest path connecting @xmath198 with @xmath199 .",
    "let @xmath202 with @xmath37 , @xmath51 .",
    "then @xmath203 @xmath204 if the element @xmath170 specifies the `` width '' of the arc @xmath197 , then the width of a path @xmath205 is defined as the minimal width of its constituting arcs and the element @xmath194 gives the supremum of possible widths of all paths connecting @xmath198 with @xmath199 .",
    "let @xmath206 and suppose @xmath170 gives the _ profit _ corresponding to the transition from @xmath198 to @xmath199 .",
    "define the vector @xmath207 whose element @xmath208 gives the _ terminal profit _ corresponding to exiting from the graph through the node @xmath198 .",
    "of course , negative profits ( or , rather , losses ) are allowed .",
    "let @xmath66 be the total profit corresponding to a path @xmath209 , that is @xmath210 then it is easy to check that the supremum of profits that can be achieved on paths of length @xmath175 beginning at the node @xmath198 is equal to @xmath211 and the supremum of profits achievable without a restriction on the length of a path equals @xmath212 .",
    "note that in the formulas of this section we are using distributivity of the multiplication @xmath7 with respect to the addition @xmath6 but do not use the idempotency axiom .",
    "thus the algebraic path problem can be posed for a nonidempotent semiring @xmath5 as well ( see , for instance , @xcite ) .",
    "for instance , if @xmath213 , then @xmath214 if @xmath215 but the matrix @xmath216 is invertible , then this expression defines a regularized sum of the divergent matrix power series @xmath217 .",
    "we emphasize that this connection between the matrix closure operation and solutions to the bellman equation gives rise to a number of different algorithms for numerical calculation of the matrix closure .",
    "all these algorithms are adaptations of the well - known algorithms of the traditional computational linear algebra , such as the gauss ",
    "jordan elimination , various iterative and escalator schemes , etc .",
    "this is a special case of the idempotent superposition principle ( see below ) .",
    "traditional interval analysis is a nontrivial and popular mathematical area , see , for instance ,  @xcite .",
    "an `` idempotent '' version of interval analysis ( and moreover interval analysis over positive semirings ) appeared in  @xcite .",
    "rather many publications on the subject appeared later , see , for instance ,  @xcite .",
    "interval analysis over the positive semiring @xmath104 was discussed in  @xcite .",
    "let a set  @xmath5 be partially ordered by a relation @xmath13 .",
    "a _ closed interval _ in  @xmath5 is a subset of the form @xmath218 = \\{\\ , x \\in s \\mid { \\underline{{\\mathbf x}}}\\preceq x \\preceq { \\overline{{\\mathbf x}}}\\ , \\}$ ] , where the elements @xmath219 are called _ lower _ and _ upper bounds _ of the interval @xmath220 .",
    "the order  @xmath13 induces a partial ordering on the set of all closed intervals in  @xmath5 : @xmath221 iff @xmath222 and @xmath223 .    a _ weak interval extension _ @xmath224 of a positive semiring",
    "@xmath5 is the set of all closed intervals in  @xmath5 endowed with operations @xmath6 and  @xmath7 defined as @xmath225 $ ] , @xmath226 $ ] and a partial order induced by the order in @xmath5 .",
    "the closure operation in @xmath224 is defined by @xmath227 $ ] .",
    "there are some other interval extensions ( including the so - called strong interval extension  @xcite ) but the weak extension is more convenient .",
    "the extension @xmath224 is positive ; @xmath224 is idempotent if @xmath5 is an idempotent semiring .",
    "a universal algorithm over @xmath5 can be applied to @xmath224 and we shall get an interval version of the initial algorithm . usually both versions have the same complexity . for the discrete stationary bellman equation and the corresponding optimization problems on graphs ,",
    "interval analysis was examined in  @xcite in details .",
    "other problems of idempotent linear algebra were examined in  @xcite .",
    "idempotent mathematics appears to be remarkably simpler than its traditional analog .",
    "for example , in traditional interval arithmetic , multiplication of intervals is not distributive with respect to addition of intervals , whereas in idempotent interval arithmetic this distributivity is preserved .",
    "moreover , in traditional interval analysis the set of all square interval matrices of a given order does not form even a semigroup with respect to matrix multiplication : this operation is not associative since distributivity is lost in the traditional interval arithmetic . on the contrary , in the idempotent ( and positive ) case associativity is preserved",
    ". finally , in traditional interval analysis some problems of linear algebra , such as solution of a linear system of interval equations , can be very difficult ( more precisely , they are @xmath228-hard , see   @xcite and references therein ) . it was noticed in  @xcite that in the idempotent case solving an interval linear system requires a polynomial number of operations ( similarly to the usual gauss elimination algorithm ) .",
    "two properties that make the idempotent interval arithmetic so simple are monotonicity of arithmetic operations and positivity of all elements of an idempotent semiring .",
    "interval estimates in idempotent mathematics are usually exact . in the traditional theory",
    "such estimates tend to be overly pessimistic .",
    "there is a nontrivial analogy between mathematics of semirings and quantum mechanics .",
    "for example , the field of real numbers can be treated as a `` quantum object '' with respect to idempotent semirings .",
    "so idempotent semirings can be treated as `` classical '' or `` semi - classical '' objects with respect to the field of real numbers .",
    "let @xmath30 be the field of real numbers and @xmath31 the subset of all non - negative numbers .",
    "consider the following change of variables : @xmath229 where @xmath230 , @xmath231 ; thus @xmath232 , @xmath233 .",
    "denote by @xmath8 the additional element @xmath234 and by @xmath5 the extended real line @xmath235 .",
    "the above change of variables has a natural extension @xmath236 to the whole @xmath5 by @xmath237 ; also , we denote @xmath238 .",
    "denote by @xmath239 the set @xmath5 equipped with the two operations @xmath240 ( generalized addition ) and @xmath241 ( generalized multiplication ) such that @xmath236 is a homomorphism of @xmath242 to @xmath243 .",
    "this means that @xmath244 and @xmath245 , that is , @xmath246 and @xmath247 .",
    "it is easy to prove that @xmath248 as @xmath249 .",
    "@xmath31 and @xmath239 are isomorphic semirings ; therefore we have obtained @xmath54 as a result of a deformation of @xmath31 .",
    "we stress the obvious analogy with the quantization procedure , where @xmath250 is the analog of the planck constant . in these terms , @xmath31 ( or @xmath30 ) plays the part of a `` quantum object '' while @xmath54 acts as a `` classical '' or `` semi - classical '' object that arises as the result of a _ dequantization _ of this quantum object . in the case of @xmath63 ,",
    "the corresponding dequantization procedure is generated by the change of variables @xmath251 .",
    "there is a natural transition from the field of real numbers or complex numbers to the idempotent semiring @xmath54 ( or @xmath63 ) .",
    "this is a composition of the mapping @xmath252 and the deformation described above .    in general an _ idempotent dequantization _",
    "is a transition from a basic field to an idempotent semiring in mathematical concepts , constructions and results , see  @xcite for details .",
    "idempotent dequantization suggests the following formulation of the idempotent correspondence principlethere exists a heuristic correspondence between interesting , useful , and important constructions and results over the field of real ( or complex ) numbers and similar constructions and results over idempotent semirings in the spirit of n.  bohr s correspondence principle in quantum mechanics .",
fig.2 ]     thus idempotent mathematics can be treated as a `` classical shadow ( or counterpart ) '' of the traditional mathematics over fields .",
    "a systematic application of this correspondence principle leads to a variety of theoretical and applied results , see , for instance ,  @xcite .",
    "relations to quantum physics are discussed in detail , for instance , in  @xcite .    in this paper",
    "we aim to develop a practical systematic application of the correspondence principle to the algorithms of linear algebra and discrete mathematics . for the remainder of this subsection",
    "let us focus on an idea how the idempotent correspondence principle may lead to a unifying approach to hardware design .",
    "( see  @xcite for more information . )",
    "the most important and standard numerical algorithms have many hardware realizations in the form of technical devices or special processors .",
    "these devices often can be used as prototypes for new hardware units resulting from mere substitution of the usual arithmetic operations by their semiring analogs ( and additional tools for generating neutral elements @xmath8 and @xmath9 ) . of course , the case of numerical semirings consisting of real numbers ( maybe except neutral elements ) and semirings of numerical intervals is the most simple and natural .",
    "note that for semifields ( including @xmath54 and @xmath63 ) the operation of division is also defined .",
    "good and efficient technical ideas and decisions can be taken from prototypes to new hardware units .",
    "thus the correspondence principle generates a regular heuristic method for hardware design .",
    "note that to get a patent it is necessary to present the so - called ` invention formula ' , that is to indicate a prototype for the suggested device and the difference between these devices .",
    "consider ( as a typical example ) the most popular and important algorithm of computing the scalar product of two vectors : @xmath253 the universal version of   for any semiring @xmath160 is obvious : @xmath254 in the case @xmath255 this formula turns into the following one : @xmath256    this calculation is standard for many optimization algorithms , so it is useful to construct a hardware unit for computing  .",
    "there are many different devices ( and patents ) for computing   and every such device can be used as a prototype to construct a new device for computing   and even  .",
    "many processors for matrix multiplication and for other algorithms of linear algebra are based on computing scalar products and on the corresponding `` elementary '' devices .",
    "using modern technologies it is possible to construct cheap special - purpose multi - processor chips and systolic arrays of elementary processors implementing universal algorithms .",
    "see , for instance ,  @xcite where the systolic arrays and parallel computing issues are discussed for the algebraic path problem .",
    "in particular , there is a systolic array of @xmath257 elementary processors which performs computations of the gauss ",
    "jordan elimination algorithm and can solve the algebraic path problem within @xmath258 time steps .",
    "in this section we discuss universal algorithms computing @xmath129 and @xmath149 .",
    "we start with the basic escalator and gauss - jordan elimination techniques in subsect .",
    "[ ss : gj ] and continue with its specification to the case of toeplitz systems in subsect .",
    "[ ss : toep ] .",
    "the universal ldm decomposition of bellman equations is explained in subsect .",
    "[ ss : ldm ] , followed by its adaptations to symmetric and band matrices in subsect .",
    "[ ss : ldmspec ] .",
    "the iteration schemes are discussed in subsect .",
    "[ ss : iter ] . in the final subsect .",
    "[ ss : impl ] we discuss the implementations of universal algorithms .",
    "algorithms themselves will be described in a language of matlab , following the tradition of golub and van loan  @xcite .",
    "this is done for two purposes : 1 ) to simplify the comparison of the algorithms with their prototypes taken mostly from  @xcite , 2 ) since the language of matlab is designed for matrix computations .",
    "we will not formally describe the rules of our matlab - derived language , preferring just to outline the following important features :    * our basic arithmetic operations are @xmath259 , @xmath260 and @xmath108 . *",
    "the vectorization of these operations follows the rules of matlab .",
    "* we use basic keywords of matlab like ` for ' , ` while ' , if and end , similar to other programming languages like @xmath4 or java .",
    "let us give some examples of universal matrix computations in our language : + _ example 1 .",
    "_ @xmath261 means that the result of ( scalar ) multiplication of the first @xmath262 components of the @xmath175th column of @xmath160 by the closure of @xmath263 is assigned to the first @xmath262 components of @xmath264 .",
    "+ _ example 2 .",
    "_ @xmath265 means that we add ( @xmath6 ) to the entry @xmath170 of @xmath160 the result of the ( universal ) scalar multiplication of the @xmath266th row with the @xmath262th column of @xmath160 ( assumed that @xmath160 is @xmath153 ) .",
    "+ _ example 3 .",
    "_ @xmath267 means the outer product of the @xmath175th column of @xmath160 with the @xmath268th row of @xmath161 .",
    "the entries of resulting matrix @xmath269 equal @xmath270 , for all @xmath271 and @xmath272 .",
    "+ _ example 4 .",
    "_ @xmath273 is the scalar product of vector @xmath44 with vector @xmath274 whose components are taken in the reverse order : the proper algebraic expression is @xmath275 .",
    "+ _ example 5 .",
    "_ the following cycle yields the same result as in the previous example : @xmath276 + * for * @xmath277 + @xmath278 + * end *      we first analyse the basic escalator method , based on the definition of matrix closures  .",
    "let @xmath160 be a square matrix .",
    "closures of its main submatrices @xmath279 can be found inductively , starting from @xmath280 , the closure of the first diagonal entry .",
    "generally we represent @xmath281 as @xmath282 assuming that we have found the closure of @xmath279 . in this representation ,",
    "@xmath283 and @xmath284 are columns with @xmath175 entries and @xmath285 is a scalar .",
    "we also represent @xmath286 as @xmath287    using   we obtain that    @xmath288    an algorithm based on   can be written as follows .",
    "[ a : bordering ] escalator method for computing @xmath129    an @xmath153 matrix @xmath160 with entries @xmath289 , + also used to store the final result + and the intermediate results of the computation process .",
    "@xmath290 + * for * @xmath291 + @xmath292 + @xmath293 + @xmath294 + @xmath295 + @xmath296 + @xmath297 + @xmath298 + * end *    in full analogy with its linear algebraic prototype , the algorithm requires @xmath299 operations of addition @xmath6 , @xmath299 operations of multiplication @xmath7 , and @xmath67 operations of taking algebraic closure . the linear - algebraic prototype of the method written above is also called the _ bordering method _ in the literature  @xcite .    alternatively",
    ", we can obtain a solution of @xmath300 as a result of elimination process , whose informal explanation is given below . if @xmath129 is defined as @xmath301 ( including the scalar case ) , then @xmath149 is the least solution of @xmath300 for all @xmath160 and @xmath161 of appropriate sizes . in this case , the solution found by the elimination process given below coincides with @xmath149 .    for matrix @xmath152 and column",
    "vectors @xmath302 and @xmath303 ( restricting without loss of generality to the column vectors ) , the bellman equation @xmath304 can be written as    @xmath305    @xmath306    after expressing @xmath307 in terms of @xmath308 from the first equation and substituting this expression for @xmath307 in all other equations from the second to the @xmath67th we obtain    @xmath309    @xmath310    @xmath311    note that nontrivial entries in both matrices occupy complementary places , so during computations both matrices can be stored in the same square array @xmath312 .",
    "denote its elements by @xmath313 where @xmath175 is the number of eliminated variables .",
    "after @xmath314 eliminations we have    @xmath315    after @xmath67 eliminations we get @xmath316 .",
    "taking as @xmath317 any vector with one coordinate equal to @xmath9 and the rest equal to @xmath8 , we obtain @xmath318 .",
    "we write out the following algorithm based on recursion  .",
    "[ a : eliminate ] gauss - jordan elimination for computing @xmath129 .",
    ": an @xmath153 matrix @xmath160 with entries @xmath289 , + also used to store the final result + and intermediate results of the computation process .",
    "@xmath319 + @xmath320 + * for * @xmath321 + * if * @xmath322 + @xmath323 + * end * + * end * + * for * @xmath321 + * for * @xmath324 + * if * @xmath325 + @xmath326 + * end * + * end * + * for * @xmath324 + * if * @xmath327 + @xmath328 + * end * + * end * + * end *    algorithm  [ a : eliminate ] can be regarded as a `` universal floyd - warshall algorithm '' generalizing the well - known algorithms of warshall and floyd for computing the transitive closure of a graph and all optimal paths on a graph .",
    "see , for instance ,  @xcite for the description of these classical methods of discrete mathematics .",
    "in turn , these methods can be regarded as specifications of algorithm  [ a : eliminate ] to the cases of max - plus and boolean semiring .",
    "algorithm  [ a : eliminate ] is also close to yershov s `` refilling '' method for inverting matrices and solving systems @xmath329 in the classical linear algebra , see  @xcite  chapter  2 for details .",
    "we start by considering the escalator method for finding the solution @xmath330 to   @xmath304 , where @xmath44 and @xmath317 are column vectors .",
    "firstly , we have @xmath331 .",
    "let @xmath332 be the vector found after @xmath333 steps , and let us write    @xmath334    using   we obtain that @xmath335    we have to compute @xmath336 .",
    "in general , we would have to use algorithm  [ a : bordering ] .",
    "next we show that this calculation can be done very efficiently when @xmath160 is symmetric toeplitz .",
    "formally , a matrix @xmath337 is called _ toeplitz _ if there exist scalars @xmath338 such that @xmath339 for all @xmath266 and @xmath262 . informally , toeplitz matrices are such that their entries are constant along any line parallel to the main diagonal ( and along the main diagonal itself ) .",
    "for example ,    @xmath340    is toeplitz .",
    "such matrices are not necessarily symmetric .",
    "however , they are always _ persymmetric _ , that is , symmetric with respect to the inverse diagonal . this property is algebraically expressed as @xmath341 , where @xmath342 $ ] . by @xmath343",
    "we denote the column whose @xmath266th entry is @xmath344 and other entries are @xmath345 .",
    "the property @xmath346 ( where @xmath347 is the @xmath153 identity matrix ) implies that the product of two persymmetric matrices is persymmetric .",
    "hence any degree of a persymmetric matrix is persymmetric , and so is the closure of a persymmetric matrix .",
    "thus , if @xmath160 is persymmetric , then @xmath348    further we deal only with symmetric toeplitz matrices .",
    "consider the equation @xmath349 , where @xmath350 , and @xmath351 is defined by the scalars @xmath352 so that @xmath353 for all @xmath266 and @xmath262 .",
    "this is a generalization of the yule - walker problem  @xcite .",
    "assume that we have obtained the least solution @xmath354 to the system @xmath355 for some @xmath175 such that @xmath356 , where @xmath357 is the main @xmath358 submatrix of @xmath351 .",
    "we write @xmath359 as @xmath360 we also write @xmath361 and @xmath362 as    @xmath363    using  , and the identity @xmath364 , we obtain that    @xmath365    denote @xmath366 .",
    "the following argument shows that @xmath367 can be found recursively if @xmath368 exists .",
    "@xmath369 \\begin{pmatrix } e_{k-1}y^{(k-1)}\\alpha_{k-1}\\oplus y^{(k-1)}\\\\ \\alpha_{k-1 } \\end{pmatrix}\\\\ & = r_0\\oplus r^{(k-1)t}y^{(k-1)}\\oplus ( r^{(k-1)t } e_{k-1 } y^{(k-1)}\\oplus \\end{split}\\ ] ]    @xmath370    existence of @xmath368 is not universal , and this will make us write two versions of our algorithm , the first one involving  , and the second one not involving it .",
    "we will write these two versions in one program and mark the expressions which refer only to the first version or to the second one by the matlab - style comments @xmath371 and @xmath372 , respectively . collecting the expressions for @xmath367 , @xmath373 and @xmath374 we obtain the following recursive expression for @xmath354 :",
    "@xmath375    recursive expression   is a generalized version of the durbin method for the yule - walker problem , see  @xcite algorithm 4.7.1 for a prototype .",
    "[ a : yw ] the yule - walker problem for the bellman equations with symmetric toeplitz matrix .",
    "@xmath376 : scalar , + @xmath377 : @xmath378 vector ;    @xmath379 + @xmath380 + @xmath381 + * for * @xmath382 + @xmath383 + @xmath384 + @xmath385 + @xmath386 + @xmath387 + @xmath388 + * end *    vector @xmath274 .    in the general case",
    ", the algorithm requires @xmath389 operations @xmath6 and @xmath7 each , and just @xmath390 of @xmath6 and @xmath7 if inversions of algebraic closures are allowed ( as usual , just @xmath67 such closures are required in both cases ) .",
    "now we consider the problem of finding @xmath391 where @xmath351 is as above and @xmath392 is arbitrary .",
    "we also introduce the column vectors @xmath354 which solve the yule - walker problem : @xmath393 .",
    "the main idea is to find the expression for @xmath394 involving @xmath332 and @xmath354 .",
    "we write @xmath395 and @xmath396 as @xmath397    making use of the persymmetry of @xmath398 and of the identities @xmath399 and @xmath400 , we specialize expressions   and obtain that    @xmath401    the coefficient @xmath402 can be expressed again as @xmath403 , if the closure @xmath404 is invertible . using this we obtain the following recursive expression :    @xmath405    expressions   and   yield the following generalized version of the levinson algorithm for solving linear symmetric toeplitz systems , see  @xcite algorithm  4.7.2 for a prototype :    [ a : levinson ] bellman system with symmetric toeplitz matrix    @xmath376 : scalar , + @xmath377 : @xmath406 row vector ; + @xmath317 : @xmath407 column vector .",
    "@xmath379;@xmath408 ; + @xmath380 + @xmath381 + * for * @xmath382 + @xmath383 + @xmath384 + @xmath409 + @xmath410 + @xmath411 + @xmath412 + * if * @xmath413 + @xmath385 + @xmath386 + @xmath387 + @xmath388 + * end * + * end *    vector @xmath44 .",
    "in the general case , the algorithm requires @xmath414 operations @xmath6 and @xmath7 each , and just @xmath415 of @xmath6 and @xmath7 if inversions of algebraic closures are allowed ( as usual , just @xmath67 such closures are required in both cases ) .",
    "factorization of a matrix into the product @xmath416 , where @xmath417 and @xmath418 are lower and upper triangular matrices with a unit diagonal , respectively , and @xmath419 is a diagonal matrix , is used for solving matrix equations @xmath420 .",
    "we construct a similar decomposition for the bellman equation @xmath421 .",
    "for the case @xmath420 , the decomposition @xmath416 induces the following decomposition of the initial equation : @xmath422 hence , we have @xmath423    if @xmath160 is invertible . in essence , it is sufficient to find the matrices @xmath417 , @xmath419 and @xmath418 , since the linear system @xmath424 is easily solved by a combination of the forward substitution for @xmath425 , the trivial inversion of a diagonal matrix for @xmath426 , and the back substitution for @xmath126 .    using the ldm - factorization of @xmath424 as a prototype ,",
    "we can write    @xmath427    then @xmath428    a triple @xmath429 consisting of a lower triangular , diagonal , and upper triangular matrices is called an @xmath430-_factorization _ of a matrix @xmath160 if relations   and   are satisfied .",
    "we note that in this case , the principal diagonals of @xmath417 and @xmath418 are zero .",
    "our universal modification of the @xmath430-factorization used in matrix analysis for the equation @xmath424 is similar to the @xmath431-factorization of bellman equation suggested by carr in  @xcite .",
    "if @xmath160 is a symmetric matrix over a semiring with a commutative multiplication , the amount of computations can be halved , since @xmath418 and @xmath417 are mapped into each other under transposition .",
    "we begin with the case of a triangular matrix @xmath432 ( or @xmath433 ) .",
    "then , finding @xmath126 is reduced to the forward ( or back ) substitution .",
    "note that in this case , equation @xmath300 has unique solution , which can be found by the obvious algorithms given below . in these algorithms @xmath161 is a vector ( denoted by @xmath317 ) , however they could be modified to the case when @xmath161 is a matrix of any appropriate size .",
    "we are interested only in the case of strictly lower - triangular , resp .",
    "strictly upper - triangular matrices , when @xmath434 for @xmath156 , resp .",
    "@xmath434 for @xmath155 .",
    "[ lower - triang ] forward substitution .",
    "strictly lower - triangular @xmath153 matrix @xmath268 ; + @xmath407 vector @xmath317 .",
    "@xmath435 + @xmath436 + * end *    vector @xmath274 .",
    "[ upper - triang ] backward substitution .",
    "strictly upper - triangular @xmath153 matrix @xmath66 ; + @xmath407 vector @xmath317 .",
    "@xmath437 + @xmath438 + * end *    vector @xmath274 .",
    "both algorithms require @xmath439 operations @xmath6 and @xmath7 , and no algebraic closures .    after performing a ldm - decomposition",
    "we also need to compute the closure of a diagonal matrix : this is done entrywise .",
    "we now proceed with the algorithm of ldm decomposition itself , that is , computing matrices @xmath417 , @xmath419 and @xmath418 satisfying   and  .",
    "first we give an algorithm , and then we proceed with its explanation .",
    "[ a : ldm ] ldm - decomposition ( version 1 ) .    : an @xmath153 matrix @xmath160 with entries @xmath289 , + also used to store the final result + and intermediate results of the computation process .",
    "@xmath440 + @xmath441 + @xmath442 + @xmath443 + @xmath444 + * end *    the algorithm requires @xmath445 operations @xmath6 and @xmath7 , and @xmath446 operations of algebraic closure .    the strictly triangular matrix @xmath417 is written in the lower triangle , the strictly upper triangular matrix @xmath418 in the upper triangle , and the diagonal matrix @xmath419 on the diagonal of the matrix computed by algorithm  [ a : ldm ] .",
    "we now show that @xmath447 .",
    "our argument is close to that of  @xcite .",
    "we begin by representing , in analogy with the escalator method ,    @xmath448    it can be verified that    @xmath449    @xmath450    as the multiplication on the right hand side leads to expressions fully analogous to  , where + @xmath451 plays the role of @xmath452 . here and in the sequel , @xmath453 denotes the @xmath454 matrix consisting only of zeros , and @xmath455 denotes the identity matrix of size @xmath268 .",
    "this can be also rewritten as    @xmath456    where    @xmath457    @xmath458    @xmath459    @xmath460    @xmath461    here we used in particular that @xmath462 and @xmath463 and hence @xmath464 and @xmath465 .",
    "the first step of algorithm  [ a : ldm ] ( @xmath466 ) computes    @xmath467    which contains all relevant information .",
    "we can now continue with the submatrix @xmath468 of @xmath469 factorizing it as in   and  , and so on .",
    "let us now formally describe the @xmath175th step of this construction , corresponding to the @xmath175th step of algorithm  [ a : ldm ] . on that general step we deal with    @xmath470    where    @xmath471",
    "@xmath472    like on the first step we represent    @xmath473    where    @xmath474    note that we have the following recursion for the entries of @xmath475 : @xmath476 this recursion is immediately seen in algorithm  [ a : ldm ] .",
    "moreover it can be shown by induction that the matrix computed on the @xmath175th step of that algorithm equals @xmath477 in other words , this matrix is composed from @xmath478 , ... , @xmath479 ( in the upper triangle ) , @xmath480 , ... , @xmath481 ( in the lower triangle ) , @xmath482 ( on the diagonal ) , and @xmath483 ( in the south - eastern corner ) .    after assembling and unfolding all expressions for @xmath475 , where @xmath484 , we obtain @xmath485 ( actually , @xmath486 and hence @xmath487 ) .",
    "noticing that @xmath488 and @xmath489 commute for @xmath490 we can rewrite @xmath491 consider the identities @xmath492 the first of these identities is evident . for the other two , observe that @xmath493 for all @xmath175 , hence @xmath494 and @xmath495 .",
    "further , @xmath496 for @xmath497 and @xmath498 for @xmath490 . using these identities",
    "it can be shown that @xmath499 which yields the last two identities of  .",
    "notice that in   we have used the nilpotency of @xmath500 and @xmath501 , which allows to apply  .",
    "it can be seen that the matrices @xmath502 , @xmath503 and @xmath504 are contained in the upper triangle , in the lower triangle and , respectively , on the diagonal of the matrix computed by algorithm  [ a : ldm ] .",
    "these matrices satisfy the ldm decomposition @xmath447 .",
    "this concludes the explanation of algorithm  [ a : ldm ] .    in terms of matrix computations ,",
    "algorithm  [ a : ldm ] is a version of ldm decomposition with outer product .",
    "this algorithm can be reorganized to make it almost identical with  @xcite , algorithm 4.1.1 :    [ a : ldmgvl ] ldm - decomposition ( version 2 ) .",
    "an @xmath153 matrix @xmath160 with entries @xmath289 , + also used to store the final result + and intermediate results of the computation process .",
    "@xmath324 + @xmath505 + * for * @xmath506 @xmath507 + * end * + * for * @xmath508 + @xmath509 + * end * + @xmath510 + * for * @xmath506 + @xmath511 + * end * + @xmath512 + @xmath513 + * end *    this algorithm performs exactly the same operations as algorithm  [ a : ldm ] , computing consecutively one column of the result after another .",
    "namely , in the first half of the main loop it computes the entries @xmath514 for @xmath515 , first under the guise of the entries of @xmath264 and finally in the assignment `` @xmath509 '' . in the second half of the main loop it computes @xmath516 .",
    "the complexity of this algorithm is the same as that of algorithm  [ a : ldm ] .      when matrix @xmath160 is symmetric , that is , @xmath517 for all @xmath518 , it is natural to expect that ldm decomposition must be symmetric too , that is , @xmath519 . indeed , going through the reasoning of the previous section , it can be shown by induction that all intermediate matrices @xmath475 are symmetric , hence @xmath520 for all @xmath175 and @xmath519 .",
    "we now present two versions of symmetric ldm decomposition , corresponding to the two versions of ldm decomposition given in the previous section .",
    "notice that the amount of computations in these algorithms is nearly halved with respect to their full versions . in both cases they require @xmath521 operations @xmath6 and @xmath7(each ) and @xmath446 operations of taking algebraic closure .",
    "[ a : ldl ] symmetric ldm - decomposition ( version 1 ) .",
    "an @xmath153 symmetric matrix @xmath160 with entries @xmath289 , + also used to store the final result + and intermediate results of the computation process .",
    "@xmath440 + @xmath441 + * for * @xmath522 + * for * @xmath523 + @xmath524 + * end * + * end * + @xmath525 + * end *    the strictly triangular matrix @xmath417 is contained in the lower triangle of the result , and the matrix @xmath419 is on the diagonal .",
    "the next version generalizes  @xcite algorithm 4.1.2 . like in the prototype",
    ", the idea is to use the symmetry of @xmath160 precomputing the first @xmath526 entries of @xmath264 inverting the assignment `` @xmath527 '' for @xmath528 .",
    "this is possible since @xmath529 belong to the first @xmath526 columns of the result that have been computed on the previous stages .",
    "[ a : ldlgvl ] symmetric ldm - decomposition + ( version 2 ) .",
    "@xmath160 is an @xmath153 symmetric matrix with entries @xmath289 , + also used to store the final result + and intermediate results of the computation process .",
    "@xmath324 + * for * @xmath508 + @xmath530 + * end * + @xmath531 + @xmath510 + * for * @xmath506 + @xmath511 + * end * + @xmath512 + @xmath513 * end *    note that this version requires invertibility of the closures @xmath532 computed by the algorithm .",
    "in the case of idempotent semiring we have @xmath533 , hence + @xmath534 . when @xmath160 is symmetric we can write @xmath535 where @xmath536 . evidently , this * idempotent cholesky factorization * can be computed by minor modifications of algorithms  [ a : ldl ] and  [ a : ldlgvl ] .",
    "see also  @xcite , algorithm 4.2.2 .",
    "@xmath152 is called a * band matrix * with upper bandwidth @xmath537 and lower bandwidth @xmath205 if @xmath434 for all @xmath538 and all @xmath539 .",
    "a band matrix with @xmath540 is called * tridiagonal*. to generalize a specific ldm decomposition with band matrices , we need to show that the band parameters of the matrices @xmath541 computed in the process of ldm decomposition are not greater than the parameters of @xmath542 .",
    "assume by induction that @xmath543 have the required band parameters , and consider an entry @xmath544 for @xmath539 . if @xmath545 or @xmath546 then @xmath547 , so we can assume @xmath548 and @xmath549 .",
    "in this case @xmath550 , hence @xmath551 and @xmath552 thus we have shown that the lower bandwidth of @xmath475 is not greater than @xmath205 .",
    "it can be shown analogously that its upper bandwidth does not exceed @xmath537 .",
    "we use this to construct the following band version of ldm decomposition , see @xcite algorithm 4.3.1 for a prototype .",
    "[ a : ldmband ] ldm decomposition of a band matrix .",
    "@xmath160 is an @xmath153 band matrix with entries @xmath289 , + lower bandwidth @xmath205 and upper bandwidth @xmath537 + also used to store the final result + and intermediate results of the computation process .",
    "@xmath440 + @xmath441 + * for * @xmath553 + @xmath554 + * end * + * for * @xmath555 + * for * @xmath553 + @xmath326 + * end * + * end * + * for * @xmath555 + @xmath556 + * end * + * end *    when @xmath205 and @xmath537 are fixed and @xmath557 is variable , it can be seen that the algorithm performs approximately @xmath558 operations @xmath7 and @xmath6 each .",
    "_ there are important special kinds of band matrices , for instance , hessenberg and tridiagonal matrices .",
    "hessenberg matrices are defined as band matrices with @xmath559 and @xmath560 , while in the case of tridiagonal matrices @xmath540 .",
    "it is straightforward to write further adaptations of algorithm  [ a : ldmband ] to these cases . _",
    "we are not aware of any truly universal scheme , since the decision when such schemes work and when they should be stopped depends both on the semiring and on the representation of data .",
    "our first scheme is derived from the following iteration process : @xmath561 trying to solve the bellman equation @xmath300 .",
    "iterating expressions   for all @xmath175 up to @xmath66 we obtain @xmath562 thus the result crucially depends on the behaviour of @xmath563 .",
    "the algorithm can be written as follows ( for the case when @xmath161 is a column vector ) .    [ a : jacobi ] jacobi iterations    @xmath153 matrix @xmath160 with entries @xmath289 ; + @xmath407 column vectors @xmath317 and @xmath44    situation@xmath564proceed + * while * situation@xmath565proceed + @xmath566 + situation@xmath564_newsituation _ ( ... ) + * if * situation@xmath565no convergence + * disp*(jacobi iterations did not converge ) + _ exit _ + * end * + * if * situation@xmath565convergence + * disp*(jacobi iterations converged ) + _ exit _ + * end * + * end *    situation , @xmath44 .",
    "next we briefly discuss the behaviour of jacobi iteration scheme over the usual arithmetic with nonnegative real numbers , and over semiring @xmath54 . for simplicity , in both cases we restrict to the case of _ irreducible _ matrix @xmath160 , that is , when the associated digraph is strongly connected .    over the usual arithmetic , it is well known that ( in the irreducible nonnegative case ) the jacobi iterations converge if and only if the greatest eigenvalue of @xmath160 , denoted by @xmath567 , is strictly less than @xmath568 .",
    "this follows from the behaviour of @xmath569 .",
    "in general we can not obtain exact solution of @xmath570 by means of jacobi iterations .    in the case of @xmath54",
    ", the situation is determined by the behaviour of @xmath569 which differs from the case of the usual nonnegative algebra . however , this behaviour can be also analysed in terms of @xmath567 , the greatest eigenvalue in terms of max - plus algebra ( that is , with respect to the max - plus eigenproblem @xmath571 ) .",
    "namely , @xmath572 and hence the iterations converge if @xmath573 .",
    "moreover @xmath574 and hence the iterations yield * exact * solution to bellman equation after a * finite * number of steps . to the contrary , @xmath575 and",
    "hence the iterations diverge if @xmath576 .",
    "see , for instance ,  @xcite for more details .",
    "on the boundary @xmath577 , the powers @xmath578 reach a periodic regime after a finite number of steps . hence @xmath579 also becomes periodic , in general .",
    "if the period of @xmath569 is one , that is , if this sequence stabilizes , then the method converges to a general solution of @xmath304 described as a superposition of @xmath580 and an eigenvector of @xmath160  @xcite .",
    "the vector @xmath580 may dominate , in which case the method converges to @xmath580 as `` expected '' .",
    "however , the period of @xmath579 may be more than one , in which case the jacobi iterations do not yield any solution of @xmath304 .",
    "see  @xcite for more information on the behaviour of max - plus matrix powers and the max - plus spectral theory .    in a more elaborate scheme of gauss - seidel iterations we can also use the previously found coordinates of @xmath581 . in this case matrix @xmath160",
    "is written as @xmath582 where @xmath417 is the strictly lower triangular part of @xmath160 , and @xmath583 is the upper triangular part with the diagonal .",
    "the iterations are written as @xmath584 note that the transformation on the right hand side is unambiguous since @xmath417 is strictly lower triangular and @xmath585 is uniquely defined as @xmath586 ( where @xmath67 is the dimension of @xmath160 ) .",
    "in other words , we just apply the forward substitution .",
    "iterating expressions   for all @xmath175 up to @xmath66 we obtain @xmath587 the right hand side reminds of the formula @xmath588 , see  , so it is natural to expect that these iterations converge to @xmath149 with a good choice of @xmath589 .",
    "the result crucially depends on the behaviour of @xmath590 .",
    "the algorithm can be written as follows ( we assume again that @xmath161 is a column vector ) .    [ a : seidel ] gauss - seidel iterations    @xmath153 matrix @xmath160 with entries @xmath289 ; + @xmath407 column vectors @xmath317 and @xmath44    situation@xmath564proceed + * while * situation@xmath565proceed + * for * @xmath319 + @xmath591 + * end * + * for * @xmath592 + @xmath593 + * end * + situation@xmath564_newsituation _ ( ... ) + * if * situation@xmath565no convergence + * disp*(gauss - seidel iterations did not converge ) + _ exit _ + * end * + * if * situation@xmath565convergence + * disp*(gauss - seidel iterations converged ) + _ exit _ + * end * + * end *    situation , @xmath44 .",
    "it is plausible to expect that the behaviour of gauss - seidel scheme in the case of max - plus algebra and nonnegative linear algebra is analogous to the case of jacobi iterations .",
    "software implementations for universal semiring algorithms can not be as efficient as hardware ones ( with respect to the computation speed ) but they are much more flexible .",
    "program modules can deal with abstract ( and variable ) operations and data types .",
    "concrete values for these operations and data types can be defined by the corresponding input data . in this case",
    "concrete operations and data types are generated by means of additional program modules . for programs written in this manner",
    "it is convenient to use special techniques of the so - called object oriented ( and functional ) design , see , for instance ,  @xcite .",
    "fortunately , powerful tools supporting the object - oriented software design have recently appeared including compilers for real and convenient programming languages ( for instance , @xmath4 and java ) and modern computer algebra systems .",
    "recently , this type of programming technique has been dubbed generic programming ( see , for instance ,  @xcite ) .    _",
    "@xmath4 implementation _ using templates and objective oriented programming , churkin and sergeev  @xcite created a visual @xmath4 application demonstrating how the universal algorithms calculate matrix closures @xmath129 and solve bellman equations @xmath304 in various semirings .",
    "the program can also compute the usual system @xmath329 in the usual arithmetic by transforming it to the `` bellman '' form . before pressing `` solve ''",
    ", the user has to choose a semiring , a problem and an algorithm to use .",
    "then the initial data are written into the matrix ( for the sake of visualization the dimension of a matrix is no more than @xmath594 ) .",
    "the result may appear as a matrix or as a vector depending on the problem to solve .",
    "the object - oriented approach allows to implement various semirings as objects with various definitions of basic operations , while keeping the algorithm code unique and concise .",
    "_ examples of the semirings . _",
    "the choice of semiring determines the object used by the algorithm , that is , the concrete realization of that algorithm .",
    "the following semirings have been realized :    * @xmath595 and @xmath596 : the usual arithmetic over reals ; * @xmath597 and @xmath598 : max - plus arithmetic over @xmath599 ; * @xmath600 and @xmath598 : min - plus arithmetic over @xmath601 ; * @xmath597 and @xmath596 : max - times arithmetic over nonnegative numbers ; * @xmath597 and @xmath602 : max - min arithmetic over a real interval @xmath603 $ ] ( the ends @xmath604 and @xmath317 can be chosen by the user ) ; * @xmath605or and @xmath606and : boolean logic over the two - element set @xmath607 .    _ algorithms .",
    "_ the user can select the following basic methods :    * * gaussian elimination scheme * , including the universal realizations of escalator method ( algorithm  [ a : bordering ] ) , floyd - warshall ( algorithm  [ a : eliminate ] , yershov s algorithm ( based on a prototype from  @xcite ch .",
    "2 ) , and the universal algorithm of rote  @xcite ; * * methods for toeplitz systems * including the universal realizations of durbin s and levinson s schemes ( algorithms  [ a : yw ] and  [ a : levinson ] ) ; * * ldm decomposition * ( algorithm  [ a : ldm ] ) and its adaptations to the symmetric case ( algorithm  [ a : ldl ] ) , band matrices ( algorithm  [ a : ldmband ] ) , hessenberg and tridiagonal matrices . * * iteration schemes * of jacobi and gauss - seidel . as mentioned above , these schemes are not truly universal since the stopping criterion is different for the usual arithmetics and idempotent semirings .",
    "_ types of matrices .",
    "_ the user may choose to work with general matrices , or with a matrix of special structure , for instance , symmetric , symmetric toeplitz , band , hessenberg or tridiagonal .",
    "_ visualization .",
    "_ in the case of idempotent semiring , the matrix can be visualized as a weighted digraph . after performing the calculations ,",
    "the user may wish to find an optimal path between a given pair of nodes , or to display an optimal paths tree .",
    "these problems can be solved using parental links like in the case of the classical floyd - warshall method computing all optimal paths , see , for instance , @xcite . in our case , the mechanism of parental links can be implemented directly in the class describing an idempotent arithmetic .",
    "_ other arithmetics and interval extensions .",
    "_ it is also possible to realize various types of arithmetics as data types and combine this with the semiring selection .",
    "moreover , all implemented semirings can be extended to their interval versions .",
    "such possibilities were not realized in the program of churkin and sergeev  @xcite , being postponed to the next version .",
    "the list of such arithmetics includes integers , and fractional arithmetics with the use of chain fractions and controlled precision .",
    "_ matlab realization .",
    "_ the whole work ( except for visualization tools ) has been duplicated in matlab  @xcite , which also allows for a kind of object - oriented programming .",
    "obviously , the universal algorithms written in matlab are very close to those described in the present paper .",
    "_ future prospects_. high - level tools , such as stl @xcite , possess both obvious advantages and some disadvantages and must be used with caution .",
    "it seems that it is natural to obtain an implementation of the correspondence principle approach to scientific calculations in the form of a powerful software system based on a collection of universal algorithms .",
    "this approach should ensure a working time reduction for programmers and users because of the software unification .",
    "the arbitrary necessary accuracy and safety of numeric calculations can be ensured as well .",
    "the system has to contain several levels ( including programmer and user levels ) and many modules .",
    "roughly speaking , it must be divided into three parts .",
    "the first part contains modules that implement domain modules ( finite representations of basic mathematical objects ) .",
    "the second part implements universal ( invariant ) calculation methods .",
    "the third part contains modules implementing model dependent algorithms .",
    "these modules may be used in user programs written in @xmath608 , java , maple , matlab etc .",
    "the system has to contain the following modules :    * domain modules : * * infinite precision integers ; * * rational numbers ; * * finite precision rational numbers ( see @xcite ) ; * * finite precision complex rational numbers ; * * fixed- and floating - slash rational numbers ; * * complex rational numbers ; * * arbitrary precision floating - point real numbers ; * * arbitrary precision complex numbers ; * * @xmath205-adic numbers ; * * interval numbers ; * * ring of polynomials over different rings ; * * idempotent semirings ; * * interval idempotent semirings ; * * and others . *",
    "algorithms : * * linear algebra ; * * numerical integration ; * * roots of polynomials ; * * spline interpolations and approximations ; * * rational and polynomial interpolations and approximations ; * * special functions calculation ; * * differential equations ; * * optimization and optimal control ; * * idempotent functional analysis ; * * and others .",
    "this software system may be especially useful for designers of algorithms , software engineers , students and mathematicians .",
    "the authors are grateful to the anonymous referees for a number of important corrections in the paper .",
    "g.  l. litvinov and v.  p. maslov ( 1998 ) the correspondence principle for idempotent calculus and some computer applications . in j. gunawardena , editor , idempotency , cambridge univ . press , cambridge ,",
    ". 420443 .",
    "http://www.arxiv.org/abs/math.gm/0101021 .",
    "g.  l. litvinov , v.  p. maslov , a.  ya .",
    "rodionov , and a.  n. sobolevski ( 2011 ) universal algorithms , mathematics of semirings and parallel computations .",
    "lecture notes in computational science and engineering , 75 :  6389 .",
    "http://www.arxiv.org/abs/1005.1252 .",
    "g.  l.  litvinov , a.  ya .",
    "rodionov and a.  v. tchourkin ( 2008 ) approximate rational arithmetics and arbitrary precision computations for universal algorithms .",
    "j. of pure and appl .",
    "math . , 45(2 ) :  193204 .",
    "http://www.arxiv.org/abs/math.na/0101152 .",
    "g.  l. litvinov and a.  n. sobolevski ( 2000 ) exact interval solutions of the discrete bellman equation and polynomial complexity in interval idempotent linear algebra .",
    "doklady mathematics , 62(2 ) :  199201 .",
    "http://www.arxiv.org/abs/math.la/0101041 .",
    "g.  l. litvinov , maslov v.  p , and a.  ya .",
    "rodionov ( 2000 ) a unifying approach to software and hardware design for scientific calculations and idempotent mathematics .",
    "international sophus lie centre , moscow .",
    "http://www.arxiv.org/abs/math.sc/0101069 .",
    "s.  sergeev ( 2011 ) universal algorithms for generalized discrete matrix bellman equations with symmetric toeplitz matrix .",
    "tambov university reports , ser .",
    "natural and technical sciences , 16(6 ) :  1751 - 1758 . http://www.arxiv.org/abs/math/0612309 .",
    "a.  v. tchourkin and s.  n. sergeev ( 2007 ) program demonstrating how universal algorithms solve discrete bellman equation over various semirings . in g.  litvinov , v.  maslov , and s.  sergeev , editors , idempotent and tropical mathematics and problems of mathematical physics ( volume ii ) , moscow .",
    "french - russian laboratory j.v .",
    "http://www.arxiv.org/abs/0709.4119 .",
    "o.  viro ( 2001 ) dequantization of real algebraic geometry on logarithmic paper . in 3rd european congress of mathematics",
    ": barcelona , july 10 - 14 , 2000 .",
    "birkhuser , basel , pp.135 http://www.arxiv.org/abs/math/0005163 ."
  ],
  "abstract_text": [
    "<S> this paper is a survey on universal algorithms for solving the matrix bellman equations over semirings and especially tropical and idempotent semirings . </S>",
    "<S> however , original algorithms are also presented . some applications and software implementations </S>",
    "<S> are discussed . </S>"
  ]
}
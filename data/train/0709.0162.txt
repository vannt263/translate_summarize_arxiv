{
  "article_text": [
    "langevin dynamics is widely used in large - scale simulations of colloids , polymers , and any system requiring a thermostat , either as a physical ingredient of the system or as an expedient in very long simulations to prevent the divergence of the temperature .",
    "this ubiquity of stochastic dynamics in the realm of numerical simulations has motivated a lot of work to design simple , efficient and accurate numerical schemes mimicking the langevin dynamics .",
    "for instance , in a recent paper  @xcite , ricci and ciccotti devised a discrete integration scheme for the langevin dynamics of a set of classical particles .",
    "curiously enough , the resulting algorithm differs in a way ( apparently ) difficult to reconcile with another well - known langevin algorithm , the so - called ermak algorithm  @xcite .",
    "in particular , the ermak algorithm needs two random numbers per degree of freedom for each time step , whereas the ricci - ciccotti algorithm , which can also be called stochastic verlet algorithm , requires just one for an equal claimed accuracy : as the computational effort is obviously different in each case , either there is redundancy in one case , or an incorrect evaluation of the precision of the algorithm in the other case .",
    "one purpose of this paper is to explain where these differences stem from . to this end",
    ", we revisit the techniques based on trotter formulas in the context of stochastic dynamics , and show that when commutators are taken into account correctly up to the desired order , the trotter formula yields the ermak algorithm .    however , we show also that the `` simplified '' algorithms using just one random number per degree of freedom seem actually as good as the correct ermak algorithm , due to a statistical cancellation of the missing term , what the numerical simulations amply confirm .",
    "the second purpose of this paper follows naturally from these developments : the technique based on a trotter expansion can be easily adapted to the description of the dpd dynamics , a stochastic dynamics _",
    " la _ langevin which moreover preserves the momentum , and hence is extremely appealing for applications requiring the stochasticity either as a tool to stabilize the dynamics or as an effective `` heat bath '' in simulations of non - equilibrium stationary states  @xcite . as this dynamics was quite recently introduced , not many algorithms have been proposed for the dpd  @xcite , some of them having been proved flawed ( see for instance the discussion in ref .",
    "we devise here a new dpd algorithm quite simple to implement and which has an efficiency comparable to the shardlow algorithm  @xcite .",
    "the paper is organized as follows : in the next section , we point out the discrepancies which exist between the stochastic verlet and the ermak versions of langevin algorithms . then , in section  [ sec : mathematicalpreamble ] , we explain how to conduct a trotter expansion in our langevin context . concluding this part , we show why two random numbers per step and per degree of freedom are , in principle , required in a simulation .",
    "the langevin dynamics algorithms resulting from our trotter expansion are given in section  [ sec : langevindynamics ] .",
    "in a second time , we apply our developments to the generation of dpd algorithms ( section  [ sec : dissipativeparticledynamics ] ) and discuss their efficiency in section  [ sec : numericaldiscussion ] .",
    "we show in particular that the `` bare '' efficiency of a dpd algorithm must be carefully disconnected from its ability to handle the intrinsic singularity of the dissipation term when two particles cross each other ( a situation likely to happen only in a perfect gas or with particles with soft - core potentials ) . in section  [ sec : numericaldiscussion ] , we also show numerics which endorse as safe the use of stochastic velocity - verlet algorithms , such as the one proposed by ricci and ciccotti , in a langevin simulation .",
    "the langevin dynamics of a single particle with phase space coordinates ( position and momentum ) @xmath0 and @xmath1 reads : @xmath2 where @xmath3 is the external force acting on the particle ( neighboring particles and/or fields ) , @xmath4 a friction coefficient ( homogeneous to a frequency ) , @xmath5 the temperature of the thermostat , , and @xmath6 a white noise with unit variance ( equivalently written as the derivative of a wiener process )  : @xmath7 , @xmath8 ( @xmath9 and @xmath10 refer to the space indices ) .    in one version of ermak scheme  @xcite",
    ", velocities and positions are updated according to the rule : @xmath11 + \\delta{\\bm{p}}^e,\\label{eq : basicermakverlet : p } \\ ] ] where @xmath1 and @xmath0 are the particle s impulsion and position at time  @xmath12 . in the absence of stochastic terms @xmath13 and @xmath14 , and for vanishing friction coefficient @xmath4 , this algorithm reduces to the well - known velocity - verlet algorithm .    by integrating",
    "directly  ( [ eq : basiclangevin ] ) between @xmath15 and @xmath16 , and neglecting terms of order higher than @xmath17 , we obtain the correlations between the two gaussian increments @xmath18 and @xmath13  : @xmath19 \\delta_{\\alpha,\\beta } \\label{eq : correlationermakverlet}\\\\ { \\left\\langle\\delta { \\bm{r}}^{e}_\\alpha\\delta { \\bm{p}}^{e}_\\beta\\right\\rangle } & = & \\frac{kt}{\\gamma}\\bigg[1-e^{-\\gamma\\delta t}\\bigg]^2   \\delta_{\\alpha,\\beta } \\nonumber\\\\ { \\left\\langle\\delta { \\bm{p}}^{e}_\\alpha\\delta { \\bm{p}}^{e}_\\beta\\right\\rangle } & = &   mkt \\bigg[1-e^{2\\gamma \\delta t}\\bigg]\\delta_{\\alpha,\\beta}.\\nonumber \\ ] ] it is worth noting that @xmath20 is of order @xmath21 whereas @xmath22 is of order @xmath23 .",
    "as regards the numerical scheme obtained by ricci and ciccotti  @xcite , @xmath24 it is equivalent to  ( [ eq : basicermakverlet : r ] ) and  ( [ eq : basicermakverlet : p ] ) up to order @xmath17 , except for the random increments @xmath25 and @xmath26 which show slightly different correlations  : @xmath27 in  ( [ eq : ricciciccotti13 ] ) , the increment @xmath25 is proportional to @xmath26 , and the algorithm requires only the generation of a single random number per step . + because both algorithms aim at reaching the same accuracy , or at least the same order in a power expansion in @xmath28 , it is important to understand the difference between the statistics of the random increments . to this end ,",
    "a natural tool is the trotter splitting technique , as it was invoked in ref .  @xcite .",
    "the road to finding efficient brownian numerical algorithms , passes by reformulating this dynamical problem in the language of operators . once expressed in this language , the mathematics provide a number of convenient rules , such as the trotter , or the baker - campbell - hausdorff ( bch ) formulas , to handle these non - commuting operators .",
    "this process can be illustrated on a single particle autonomous equation of motion , with a mass @xmath29 set arbitrarily to  1 , without loss of generality : @xmath30 the resulting dynamics can be subject to a double point of view .",
    "the most usual one consists in following the phase - space trajectory @xmath31 of the particle as a function of the time @xmath12 and the initial condition @xmath32 .",
    "drawing an analogy with fluid mechanics , this corresponds to a kind of lagrangian point of view , where the dynamics consists in a mapping of the phase - space on itself : @xmath33 commonly known as the `` hamiltonian flow '' .",
    "the mapping @xmath34 is a time evolution operator acting on the phase - space coordinates .",
    "this mapping is sometimes loosely symbolized as @xmath35 but this notation can be misleading as @xmath36 acts on the phase space coordinates , and must not be confused with the liouvillian operator introduced below .    the other , dual , point of view consists in focusing on the observables @xmath37 of the phase space , for a fixed reference point @xmath38 .",
    "this approach is essentially similar to the eulerian description of a flow .",
    "for instance , if we consider a probability density function ( pdf ) @xmath37 describing the motion of a particle subject to the dynamics  ( [ eq : deterministic3d ] ) , then the pdf taken at two different times @xmath39 and @xmath12 are connected by the relation  : @xmath40 where @xmath41 is the reciprocal point of @xmath38 by the mapping @xmath34 : @xmath42 moreover , for a stationary dynamics , the inversion of @xmath34 is just a time reversal , leading to @xmath43 . specifying ( [ eq : observabledeterministic3d ] ) to an infinitesimal time step @xmath44 , we obtain the liouvillian dynamics of the observable @xmath37 @xmath45 with @xmath46 , the liouvillian operator .",
    "the partial differential equation  ( [ eq : liouvilliandeterministic ] ) can be integrated with respect to time , and the pdf @xmath37 expressed in terms of its initial condition : @xmath47 the time evolution operator @xmath48 is a well defined mathematical object , belonging to an operator algebra acting on the hilbert space of differentiable functions of phase space , such as @xmath37 .",
    "basically , @xmath48 carries the same amount of information as the hamiltonian flow , and its knowledge amounts to the knowledge of the mapping @xmath34 .",
    "an intuitively appealing choice for @xmath49 is the narrow , bell shaped function of width @xmath50 .",
    "plotting @xmath51 as a function of @xmath52 and @xmath53 for various successive times will show the time evolution of a `` packet '' of independent particles with initial position close to @xmath54 , each one following its own hamiltonian trajectory .",
    "in higher dimensional phase - spaces with deterministic chaos , the packet spreads progressively and eventually occupies all the permitted subspace of positions compatible with conserved quantities ( ergodicity ) .",
    "the @xmath55 limit of this corresponds to an initial condition @xmath56 ; it is easy to verify that @xmath57 , where @xmath0 and @xmath1 are the solutions of the equations of motion with initial condition @xmath32 ; this shows the complete equivalence between the `` coordinate '' and the `` observable '' version of the dynamics .    in our derivation of discrete integration schemes for the langevin dynamics",
    ", we adopt this second point of view , consisting of operators acting on the functions of phase space , and we stress upon the importance of keeping the minus sign when defining the time evolution operator in  ( [ eq : liouvillianexponential ] ) .",
    "provided this is correctly taken into account , many convenient algebraic techniques apply , while getting the same results with the point of view of flows acting on coordinates would simply be awkward .",
    "moreover , this convention resembles the familiar operator calculus of quantum mechanics ( the observable @xmath37 playing the role of wave - function )",
    ". we leave to appendix  [ app : sign ] a simple example showing why working on observables gives better results than working with coordinates .      for a stationary dynamics , the next step is to split the time interval @xmath12 into @xmath58 small steps @xmath16 and write : @xmath59 which simply reduces the dynamics to the iteration of a large number of identical elementary steps , each one representing the dynamics on a time step @xmath16 . finding",
    "a good integration scheme is equivalent to finding a good estimate of @xmath60 , with and . like in many cases ,",
    "the complexity of the dynamics comes from the fact that for two non - commuting operators @xmath61 and @xmath62 , @xmath63 is not @xmath64 , and even though @xmath65 and @xmath66 are known , the exponential of the sum @xmath63 can not be calculated .",
    "to overcome this difficulty , the strategy is to reduce the norm of @xmath61 and @xmath62 until their commutator @xmath67=ab - ba$ ] becomes small enough to apply the baker - campbell - haussdorf ( bch ) formula , stating that : @xmath68+\\frac{1}{12}[a,[a , b ] ] + \\frac{1}{12}[b,[b , a]]+r\\right ) , \\label{eq : bchdirect3}\\end{aligned}\\ ] ] with a remaining @xmath69 consisting of a sum of commutators involving more than four operators @xmath61 or @xmath62 each . in the present case ,",
    "both @xmath61 and @xmath62 scale as @xmath16 , which ensures that for a time step small enough , @xmath69 is just a negligible perturbation term . in practice",
    ", the bch is reversed to take the form @xmath70-\\frac{1}{3}[b,[b , a ] ] + \\frac{1}{6}[a,[a , b]]+r'\\right ) , \\label{eq : bchreverse3 } \\ ] ] and one checks that @xmath71 + \\frac{1}{24}[a,[a , b]]+r''\\right ) , \\label{eq : bchreverse3:2 } \\ ] ] with @xmath72 and @xmath73 of order @xmath74 .",
    "thus , the two following relations hold , up to terms of order @xmath17 .",
    "@xmath75 as recalled in appendix  [ app : vv ] , both splitting are equivalent to the verlet algorithm .",
    "when the dynamics is not stationary , the liouvillian is time - dependent , and the evolution operator can be expressed as a time - ordered , or chronological exponential :    @xmath76    the symbol  t ensures that all the time dependent operators are written from right to left in chronological order .",
    "chronological exponentials must be used as soon as the differential operators @xmath77 and @xmath78 taken at two different times , are found to be non - commuting .",
    "this situation indeed arises when considering the langevin dynamics of equation  ( [ eq : basiclangevin ] ) : @xmath79 the equation for the momentum is modified by a friction coefficient @xmath80 and a random ( or langevin ) force @xmath81 , obeying the usual fluctuation dissipation relation .",
    "straightforwardly , we associate to this stochastic equation a `` liouvillian '' : @xmath82 where the time dependence lies in the random force . by doing so , we implicitly assume a stratonovitch interpretation of the stochastic equation , the only one for which the stochastic equivalent of eq .",
    "( [ eq : liouvilliandeterministic ] ) holds  @xcite .",
    "the handling of @xmath83 shows important differences with the autonomous , time - independent hamiltonian situation .",
    "first , one can not simply replace @xmath84 by an ordinary exponential without possibly introducing an error of order @xmath21 .",
    "second , when splitting the liouvillian into @xmath85 and @xmath86 , the term @xmath62 is of order @xmath23 , due to the presence of the random force .",
    "this entails that the triple commutator @xmath87 $ ] in the bch formula can be of order @xmath17 .",
    "it is essential to either check that this commutator vanishes ( as for the usual langevin dynamics ) , or to keep it in the calculation ( as for instance in the dpd situation ) .",
    "the basic tool for handling the t - exponential is the magnus expansion  @xcite , which in the present case reads : @xmath88\\\\ -\\frac{1}{3 } \\int_{t}^{t+\\delta t}\\!{\\mathrm{d}}s   \\int_t^{\\displaystyle s } { \\mathrm{d}}u \\int_t^{\\displaystyle s } { \\mathrm{d}}v\\ ,   [ { \\hat{\\mathcal l}}(v),[{\\hat{\\mathcal l}}(u),{\\hat{\\mathcal l}}(s)]]\\bigg ) , \\label{eq : texptriplecommutator}\\end{gathered}\\ ] ] we provide in appendix  [ app : magnus ] a simple demonstration of  ( [ eq : texptriplecommutator ] ) .",
    "it is clear that the right hand side reduces to the operator identity for a time independent liouvillian .",
    "using  ( [ eq : texptriplecommutator ] ) , one can replace the chronological exponential by a simple exponential , which can itself be simplified using a bch formula with triple commutators  ( [ eq : bchreverse3 ] ) .",
    "finally , let us notice that rather than dealing directly with the stochastic differential equation ( s.d.e ) , it is also possible to go to the fokker - planck ( fp ) formulation of the stochastic process .",
    "in that case , the dynamics expresses naturally in terms of fokker - planck operators , for which a similar bch decomposition strategy can be done  @xcite , and a numerical scheme can be obtained  @xcite . in the fp approach , there is no time - dependent term in the evolution operator and it is not necessary to consider the time commutators appearing in  ( [ eq : texptriplecommutator ] ) , but any connection with the underlying stochastic noise is lost in the process .",
    "we now focus in detail on  ( [ eq : stochastic1d ] ) .",
    "the evolution operator can be rewritten as @xmath89 with the product of the two last terms given by the identity  ( [ eq : texptriplecommutator ] ) . fortunately in this case , the triple commutators give rise only to terms of order  @xmath90 , which can be neglected as we aim only at a @xmath17 accuracy .",
    "thus , @xmath91 \\right ) .",
    "\\label{eq : decompositionevolution } \\ ] ] integrating by part , we get @xmath92 \\\\",
    "= \\sigma\\left[\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u }    -\\int_t^{t+\\delta t }   { \\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\right ]    \\left(\\frac{1}{m}\\frac{\\partial}{\\partial r }      -\\gamma \\frac{\\partial}{\\partial p}\\right ) .",
    "\\label{eq : contentdoublecommutatorlangevin } \\ ] ] this time - commutator accounts precisely for the difference between the algorithm of ricci and ciccotti and the algorithm of ermak . to support this claim ,",
    "we simply compare up to order @xmath17 , the exact time - evolution operator @xmath93 , and the corresponding simple exponential @xmath94 , in the case of the s.d.e  ( [ eq : basiclangevin ] ) . a direct calculation , in the exact case",
    ", at the order @xmath17 , gives : @xmath95 and is equivalent to applying  ( [ eq : decompositionevolution ] ) , and to ermak .",
    "the simple exponential case @xmath94 amounts to replacing the langevin force by a stepwise averaged quantity , and to redefining the force accordingly : @xmath96 it gives : @xmath97 expression  ( [ eq : averagedsolutionorder2 ] ) is equivalent to the stochastic verlet or ricci and ciccotti result .",
    "expressions  ( [ eq : exactsolutionorder2 ] ) and ( [ eq : averagedsolutionorder2 ] ) differ by a term @xmath98 , which turns out to be equal to the quantity appearing in  ( [ eq : contentdoublecommutatorlangevin ] ) : @xmath99   = \\int_t^{t+\\delta t } \\left(s-\\frac{\\delta t}{2}\\right){\\bm{\\psi}}(s){\\mathrm{d}}s .",
    "\\label{eq : uncorrelatedterm } \\ ] ] we note that , in order to get the correct result by using the usual commutator algebra , it is absolutely necessary to use the correct convention for the liouvillian , _",
    "@xmath48 for the forward dynamics of the observables .",
    "the above equality is obtained by integrating by part the wiener process .",
    "thus , the gaussian increments arising in  ( [ eq : exactsolutionorder2 ] ) can be split in two statistically independent parts : @xmath100 each part having zero mean and correlations : @xmath101 the statistical independence  ( [ eq : ermaknocorrelation ] ) is crucial .",
    "it ensures that the difference between ( [ eq : exactsolutionorder2 ] ) and ( [ eq : averagedsolutionorder2 ] ) , or equivalently the correction term brought by  ( [ eq : contentdoublecommutatorlangevin ] ) contributes only at the order @xmath102 in variance .",
    "the current algorithm being a weak order - two algorithm , this term is not relevant and negligible at this order .",
    "we conclude from this calculation that , when taking properly into account all the terms potentially of order @xmath21 , the algorithm obtained is ermak",
    ". however , ( [ eq : uncorrelatedterm ] )  turns out to be uncorrelated with the dominant contribution of the random force @xmath103 , which in turn guarantees that the correction is no longer relevant for a weak order - two algorithm .",
    "nonetheless , this statement is not obvious , and the conclusion can only be drawn once the corrective terms have been evaluated .",
    "we conclude by giving a pictorial representation of the difference of these two algorithms . from a given noise realization",
    ", the stochastic verlet algorithm gets rid of half of the random numbers that the ermak algorithm uses , and in a sense , throws away an equal amount of information . on the other hand ,",
    "the generation of the @xmath104 may seem futile , as this is not real information which is `` created '' , but just pure randomness .",
    "we believe that the issue of this paradoxical situation is that the generation of @xmath105 indeed makes sense , even though it is not proper information .",
    "to support this claim , we come back to the fokker - planck ( fp ) representation of the stochastic process . in the fp representation ,",
    "one aims at calculating the propagator associated to the elementary time interval : @xmath106 this function is a bell shaped curve , which is close to a gaussian distribution . in the two dimensional space @xmath107 , this function",
    "is centered around the position that would occupy the particle in the absence of noise , and has a `` rice grain '' shape , with a large axis oriented along the @xmath53 axis , parallel to the vector @xmath108 .",
    "this large axis corresponds to the contribution of @xmath109 .",
    "the narrow axis corresponds to the @xmath110 contribution , giving the increment @xmath111 ( fig .",
    "[ fig : ricegrain ] , left ) . by comparison ,",
    "the ricci and ciccotti algorithm , in this representation , reduces to a thin line with no width ( fig .",
    "[ fig : ricegrain ] , right ) .",
    "no matter how the algorithm is designed , it requires two independent random numbers to sample the probability distribution function corresponding to the fokker - planck propagator . in the same way , when dealing with @xmath112 degrees of freedom , the sampling of the conditional probability associated to the propagator requires @xmath113 random numbers .",
    "the relevance of the random numbers @xmath105 depends on whether one is interested in a strong or a weak convergence of the algorithm . were the random force @xmath114 known",
    ", it would make sense to estimate the difference between the numerical solution and the exact solution , and in that case , the ermak scheme would be superior to the stochastic verlet scheme , making it a true strong order 1.5 algorithm .",
    "however , as far as numerical simulations are concerned , we are interested in averaging the observables over many realizations of the noise @xmath114 ( either by running the simulation long enough , or by repeating many times the simulation process ) and this corresponds to the weak convergence concept , where only the difference between the averaged simulated quantities and the averaged exact quantities matters . as the variance of @xmath105 is @xmath102 , as the variance of @xmath115 is only known up to order @xmath17 , and as @xmath105 and @xmath115 are statistically independent , the average contribution of @xmath105 is at best of the same order of magnitude as the uncertainty affecting @xmath115 . not providing real `` information '' , the generation of the numbers @xmath105 just makes the ermak procedure a slightly better sampling of the underlying stochastic dynamics than the other algorithms based on a single random number .",
    "however , the difference is not quantitative : both schemes are of weak order two .",
    "as far as the algorithms based on the fokker - planck approach are concerned , such as the one of serrano  _ et al . _",
    "@xcite , discussed in the dpd section below , the resulting algorithms are also weak order two .",
    "this comes from the fact that the fokker - planck approach assumes an implicit average of the random noise , when writing the fokker - planck evolution operator .",
    "we now specialize the discussion to the langevin dynamics of a fluid , and consider @xmath116 particles with usual pairwise interactions .",
    "the liouvillian reads : @xmath117 . \\ ] ] where @xmath9 refers to the space index . as above , the time ordered exponential",
    "is replaced by a product  : @xmath118 \\right ) ; \\label{eq : rcsimplify}\\nonumber\\\\ & = & \\exp(-a - b)\\cdot\\exp c , \\ ] ] with @xmath119 \\frac{\\partial}{\\partial { \\bm{p}}_{i\\alpha}};\\\\ & = & \\sum_{i=1}^n \\sum_{\\alpha=1}^{3 } \\bigg\\lbrace \\delta t \\left [ { \\bm{f}}_{i\\alpha}(\\{{\\bm{r}}_i\\ } ) -\\gamma { \\bm{p}}_{i\\alpha}({\\bm{r}})\\right ] + \\sigma{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u}\\bigg\\rbrace \\frac{\\partial}{\\partial{\\bm{p}}_{i\\alpha}}. \\ ] ] using the bch formula , we obtain two factorizations  : @xmath120 if we forget the commutator term @xmath121 , we obtain exactly the splitting proposed by ricci and ciccotti , but with the opposite sign convention .",
    "the commutator term is  : @xmath122;\\notag\\\\   & = \\sigma \\sum_{i=1}^n \\sum_{\\alpha=1}^{3 }   \\bigg [ \\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u } \\notag\\\\   & \\hspace{3 cm } -\\int_t^{t+\\delta t } { \\mathrm{d}}s\\ ,    { \\int_{t}^{s}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u}\\bigg ]     \\bigg(\\frac{1}{m}\\frac{\\partial}{\\partial { \\bm{r}}_{i\\alpha } }     -\\gamma\\frac{\\partial}{\\partial { \\bm{p}}_{i\\alpha}}\\bigg ) .    \\label{eq : langevintimecommutator } \\ ] ] the term @xmath123 adds an extra contribution of order @xmath21 to the random gaussian increments . for completeness",
    ", we give below the correct discretization schemes associated to the two splitting  ( [ eq : splitting13 ] ) and  ( [ eq : splitting14 ] ) .",
    "a detailed calculation is provided in appendix  ( [ app : vv ] ) .",
    "the splitting  ( [ eq : splitting13 ] ) leads to @xmath124 the random gaussian increments @xmath13 , @xmath18 appearing in  ( [ eq : splittingabap ] ) and  ( [ eq : splittingabar ] ) can themselves be split in two parts @xmath125 , and @xmath126 .",
    "@xmath127 clearly , @xmath128 and @xmath129 come from the time commutator  ( [ eq : langevintimecommutator ] ) .",
    "it is safe to replace the complex random increments @xmath13 and @xmath18 by their simpler counterpart @xmath26 and @xmath25 without altering the weak order two nature of the algorithm .",
    "the splitting  ( [ eq : splitting14 ] ) leads to another expression : @xmath130 the above algorithm is equivalent to ( [ eq : basicermakverlet : r ] ) , ( [ eq : basicermakverlet : p ] ) and ( [ eq : correlationermakverlet ] ) .",
    "the random gaussian increments are obviously identical at the order @xmath17 considered here .",
    "equations  ( [ eq : splittingabap ] ) , ( [ eq : splittingabar ] ) , ( [ eq : splittingbabp ] ) and ( [ eq : splittingbabr ] ) are the main result of this section .",
    "we believe that the absence of @xmath131 and @xmath132 in ref .",
    "@xcite is due to a time - ordered exponential hastily replaced by an ordinary exponential .",
    "these terms should have been present , and there absence can be traced back to the forward operator @xmath133 appearing in the susuki formula @xmath134 , which , in the presence of the random noise , must acquire some kind of time - dependence , such as @xmath135 . the derivation of the algorithms of ref .",
    "@xcite is incomplete , with a misprint in the result  ( [ eq : ricciciccotti : r]),([eq : ricciciccotti : p ] ) .",
    "we now apply the same strategy to the dissipative particle dynamics  ( dpd ) introduced in ref .",
    "@xcite and discussed in ref .",
    "the phase space dynamics of the dpd is given by a set of stochastic equations : @xmath136 each particle @xmath137 exchanges randomly some momentum with a selected set of neighbors @xmath138 .",
    "this exchange dynamics depends on an arbitrary short range function @xmath139 , and acts along the separation @xmath140 , where @xmath141 stands for @xmath140 , @xmath142 for @xmath143 and the unit vector @xmath144 for @xmath145 . to each pair of particles",
    "is associated a random noise @xmath146 , even though only a fraction of the pairs are truly interacting together at a time , due to the finite range of @xmath147 .",
    "the prefactor @xmath148 is equal to @xmath149 in agreement with the fluctuation dissipation theorem .",
    "note that here , the dissipation coefficient @xmath150 is defined in such a way that the product of @xmath150 and a velocity is a force . in order to stay consistent with the previous section , we introduce also a friction coefficient @xmath151 , homogeneous to a frequency , and such as @xmath152 .",
    "these equations can be rewritten with @xmath112-dimensional vectors and matrices : @xmath153 , @xmath154 , @xmath155 , @xmath156 , @xmath157   ( { \\bm{r}}_i-{\\bm{r}}_j)_{\\alpha } \\right\\rbrace . \\ ] ] the dissipative term @xmath158 can be expressed as the product of a space dependent @xmath159 matrix @xmath160 and the @xmath112-vector momentum @xmath161 .",
    "if @xmath162 refer to the space indices , then the components of the matrix @xmath160 read : @xmath163 it can be checked that the correlations of the noise obey @xmath164 to the s.d.e .",
    "( [ eq : sdedynamics ] ) we associate the liouvillian @xmath165 the main difference , compared with the ordinary langevin dynamics , is that the prefactor of the noise depends explicitely on @xmath166 .",
    "it is known , however , that this multiplicative noise is not dependent of the it or the stratonovitch interpretation of stochastic dynamics  @xcite .",
    "regarding the simple exponential part @xmath167 , we define , as usual @xmath168\\cdot\\partial_{{\\bm{p } } } + \\bigg[\\int_{t}^{t+\\delta t } { \\bm{r}}({\\bm{r}};s){\\mathrm{d}}s\\bigg ]   \\cdot\\partial_{{\\bm{p } } } , \\label{eq : definitionab : dpd}\\end{aligned}\\ ] ] and the @xmath112 vector @xmath169 : @xmath170 . \\ ] ] @xmath61 scales like @xmath16 , @xmath62 scales like @xmath171 , @xmath172 scales like @xmath173 .",
    "one possible splitting is @xmath174\\rbrack -\\frac{1}{2}\\int_t^{t+\\delta t}{\\mathrm{d}}s\\,\\int_{t}^{s}{\\mathrm{d}}u\\ ,   [ { \\hat{\\mathcal l}}(u),{\\hat{\\mathcal l}}(s)]\\\\   -\\frac{1}{3}\\int_t^{t+\\delta t}{\\mathrm{d}}s\\,\\int_{t}^{s}{\\mathrm{d}}u\\,\\int_{t}^{s}{\\mathrm{d}}v\\ , [ { \\hat{\\mathcal l}}(v),[{\\hat{\\mathcal l}}(u),{\\hat{\\mathcal l}}(s)]]\\bigg ) , \\label{eq : splittingdpdbab } \\ ] ] and the other is @xmath175\\rbrack -\\frac{1}{2}\\int_t^{t+\\delta t}{\\mathrm{d}}s\\,\\int_{t}^{s}{\\mathrm{d}}u\\ , [ { \\hat{\\mathcal l}}(u),{\\hat{\\mathcal l}}(s)]\\\\ -\\frac{1}{3}\\int_t^{t+\\delta t}{\\mathrm{d}}s\\,\\int_{t}^{s}{\\mathrm{d}}u\\,\\int_{t}^{s}{\\mathrm{d}}v\\ , [ { \\hat{\\mathcal l}}(v),[{\\hat{\\mathcal l}}(u),{\\hat{\\mathcal l}}(s)]]\\bigg ) .",
    "\\label{eq : splittingdpdaba } \\ ] ] the splitting gives the largest contribution , while the commutators give smaller correcting terms .",
    "the first splitting @xmath176 gives after neglecting terms smaller than @xmath17 ( algorithm `` aba '' ) , @xmath177 ; \\label{eq : splittingdpdaba : r}\\\\ { \\bm{p}}(t+\\delta t ) & = & \\left[\\bm{1}-\\delta t\\,{\\bm{\\gamma}}\\bigg({\\bm{r}}(t )   + \\frac{\\delta t}{2m}{\\bm{p}}(t)\\bigg ) + \\frac{\\delta t^2}{2}{\\bm{\\gamma}}^2\\bigg({\\bm{r}}(t )   + \\frac{\\delta t}{2m}{\\bm{p}}(t)\\bigg)\\right]\\cdot { \\bm{p}}(t ) \\notag\\\\ & &   + \\delta t\\left[\\bm{1}-\\frac{\\delta t}{2}{\\bm{\\gamma}}\\bigg({\\bm{r}}(t )    + \\frac{\\delta t}{2m}{\\bm{p}}(t)\\bigg)\\right ] \\cdot{\\bm{k}}\\bigg({\\bm{r}}(t)+\\frac{\\delta t}{2m}{\\bm{p}}(t);t\\bigg ) , \\label{eq : splittingdpdaba : p } \\ ] ] while @xmath178 gives @xmath179\\cdot{\\bm{p}}(t )   + \\frac{\\delta t^2}{2 } { \\bm{\\gamma}}({\\bm{r}}(t))^2\\cdot{\\bm{p}}(t ) \\nonumber\\\\ & &   + \\frac{\\delta t}{2}\\bigg[{\\bm{k}}(r(t);t ) + { \\bm{k}}(r(t+\\delta t);t)\\bigg ]   -\\frac{\\delta t^2}{2 } { \\bm{\\gamma}}({\\bm{r}}(t))\\cdot { \\bm{k}}({\\bm{r}}(t);t ) .",
    "\\label{eq : splittingdpdbab : p } \\ ] ] we now turn to the double and triple commutator corrections .",
    "the correction @xmath180)$ ] gives terms proportional to , which have been shown to be uncorrelated to the @xmath181}$ ] , of vanishing mean value and of variance @xmath102 .",
    "these terms are the pendant of the corrections in the ermak algorithm , and can be neglected in practice .",
    "after some calculations exposed in appendix  ( [ app : dpd ] ) , it appears that together the correction of the triple commutators is either vanishing for the splitting  ( [ eq : splittingdpdaba ] ) , or equal to @xmath182 for the splitting  ( [ eq : splittingdpdbab ] ) .",
    "a popular choice consists of using a triangular shape for @xmath183 .",
    "@xmath184 this choice ensures that @xmath185 is differentiable everywhere but in @xmath186 , and the corrective term is well defined .",
    "@xmath187 this suggests the final form of our dpd algorithm , corresponding to the splitting  ( [ eq : splittingdpdbab : r ] ) and ( [ eq : splittingdpdbab : p ] ) ( algorithm `` bab '' ) .",
    "@xmath188\\cdot{\\bm{p}}(t )     + \\frac{\\delta t^2}{2}{\\bm{\\gamma}}({\\bm{r}}(t))^2\\cdot{\\bm{p}}(t ) \\notag\\\\ & &   + \\frac{\\delta t}{2}\\bigg[{\\bm{k}}({\\bm{r}}(t);t)+{\\bm{k}}({\\bm{r}}(t+\\delta t);t)\\bigg ]    -\\frac{\\delta t^2}{2 } { \\bm{\\gamma}}({\\bm{r}}(t))\\cdot { \\bm{k}}({\\bm{r}}(t);t)\\notag\\\\ & &   -\\frac{\\sigma^2\\delta t^2}{4 m } \\mathbf{g}_w\\cdot{\\bm{r } } , \\label{eq : algodpdbab : p } \\ ] ] where the last term @xmath189 requires a @xmath190 operator matrix @xmath191 and @xmath192    formula  ( [ eq : splittingdpdaba : r ] ) and  ( [ eq : splittingdpdaba : p ] ) , on the one hand , and  ( [ eq : algodpdbab : r ] ) , ( [ eq : algodpdbab : p ] ) and ( [ eq : babcorrectiveterm ] ) on the other hand , are the main results of this section . in the following section , we give more details on how to implement these formulas in practice .      the bab algorithm resembles the dpd - velocity verlet ( dpd - vv ) algorithm  @xcite .",
    "both use an estimate @xmath193/2 $ ] for the forces , and a similar expression for the position dependent dissipative forces .",
    "positions are updated in an identical way , positions and velocities are updated in the same consecutive order .",
    "however , a noticeable difference concerns the use of the random numbers  : in our case , we use a single random number @xmath194 , while dpd - vv use a combination of @xmath195 and @xmath196 . moreover some terms differ at the order @xmath17 .    starting from a fokker - planck formulation of the stochastic dynamics , the approach by serrano _",
    "et al . _",
    "@xcite gives directly a weak order two algorithm , and by - passes all the complications related to the time - dependent double and triple commutators in the magnus expansion .",
    "although we do not present a demonstration here , it is also possible to derive their algorithm starting from our splitting  ( [ eq : splittingdpdaba ] ) .",
    "one of the steps in the derivation consists in splitting further the exponential of the operator  @xmath62 defined in  ( [ eq : definitionab : dpd ] ) into a product over all pairs of particles .    in an improvement over dpd - vv ,",
    "pagonabarraga _ et al . _",
    "@xcite proposed a self - consistent procedure for computing the velocity dependent friction term .",
    "this makes the so called self - consistent dpd - vv ( sc - dpd - vv ) a reversible algorithm , for which , in the absence of potential forces , the stochastic trajectories can be traced back upon momentum reversal , according to the detailed balance probabilities .",
    "we did not find mention of the reversibility properties of the algorithms of shardlow  s2 and serrano _ et al .",
    "_ , but we believe that , much as the ermak procedure for langevin dynamics , the algorithm of serrano _ et al .",
    "_ stands a good chance to be reversible , because the momentum exchange stochastic dynamics is treated without approximation .",
    "the algorithm s2 of shardlow , which almost reduces to the former in the absence of potential forces , can only be approximately reversible , while retaining the weak order two convergence property .",
    "as far as our algorithms are concerned , the stochastic evolution of the momenta @xmath1 , with fixed positions @xmath0 , corresponds to a multidimensional ornstein - uhlenbeck process , as illustrated by eq .",
    "( [ eq : examplereversible ] ) of appendix  [ app : dpd ] .",
    "reversibility is lost when approximations such as @xmath197 are introduced . as keeping exponentials of matrices is not algorithmically feasible ,",
    "the final form of the algorithms bab and aba are only approximately reversible , up to the expected order of convergence @xmath17 .",
    "we noticed a fundamental difference between the ermak and ricci - ciccotti ( or stochastic verlet ) algorithms , the former being in principle slightly more accurate in simulating the langevin dynamics .",
    "it is interesting to probe numerically whether such an assertion is really detectable . to this end , we considered the simple ornstein - uhlenbeck process : @xmath198 which is exactly solvable",
    ". in particular , we have @xmath199 a way to check the performances of an algorithm is to measure how fast and how accurately it reproduces such a correlator .",
    "thus we define the error associated with a numerical result as @xmath200 ^ 2\\end{aligned}\\ ] ] ( more exactly the discrete version of this formula ) .",
    "@xmath201 is a predefined time kept constant .",
    "this error is a function of the random numbers used to generate @xmath202 , and can be considered as a function of the simulation time @xmath203 , as the average @xmath204 is constructed by accumulation ( running average ) .",
    "were the time step infinitely small , would such a curve decrease toward zero ; actually , it saturates ( with fluctuations ) at a higher value due to the unavoidable discreteness of the simulations . constructed with a single simulation , this measure of the error as",
    "a function of the simulation length is a noisy curve , and it is more relevant to consider the curve obtained by averaging several such errors .",
    "the result of such a procedure is plotted on fig .",
    "[ fig : errors_e_rc ] , for eighty runs of @xmath205 time steps ( full and dashed curves  the light dots show the curves for four subsets of twenty curves to show the dispersion ) .    the chosen time @xmath206 contains the essential part of @xmath207 ( see inset ) ; the time step is large : @xmath208 , large enough to reveal in that situation the clear superiority of the ermak algorithm over the ricci - ciccotti one : for those large time steps , the ermak algorithm mimics a thermal noise which is less colored than ricci - ciccotti s , and hence is a more faithful realization of langevin dynamics . obviously ,",
    "when reducing the time step , the spectrum of the noise is flatter and flatter for both algorithms and the discrepancies disappear : this is shown on the curves in large dots , obtained for a time step @xmath209 and @xmath210 simulation points ( the associated physical time is unchanged ) ; they show that a computational effort a hundred times greater than before leads to a rather modest improvement as far as the ermak algorithm is concerned .",
    "but the ermak algorithm can be useful for situations where large time steps can be used , without compromising a faithful sampling of the underlying hamiltonian dynamics .",
    "we think that these results suggest to always prefer a larger time step with the ermak algorithm to a smaller one with the lightest ( in term of computational cost ) ricci - ciccotti scheme .",
    "two algorithms of similar predicted accuracy are available . in practice , after having tried them both , we found that the algorithm ( [ eq : splittingdpdaba : r],[eq : splittingdpdaba : p ] ) was by far the simplest and the most efficient of the two .",
    "therefore , we devote to this scheme the largest part of our discussion , while briefly mentioning the other at the end of this section .",
    "we chose to refer to it as the `` aba '' algorithm , by reference to the splitting from which it originates .",
    "it reads explicitly :    [ cols=\"^,^,^ , < \" , ]     where we defined @xmath211 .",
    "the @xmath212 are uncorrelated gaussian random variables with zero mean and unit variance .",
    "this algorithm can be made even more efficient by merging the first and last steps during the simulation ( however , the computation of statistical quantities must be performed compulsorily between these steps , otherwise a noticeable bias is introduced ) .",
    "the computational effort per time step is slightly higher than the shardlow algorithm ( eq .",
    "( 9 ) of ref .",
    "@xcite hereafter termed s1 algorithm according to the terminology used in  @xcite ) , as here two computations implying the sums @xmath213 are required , instead of just one for s1 .",
    "this is the price to pay to have a second order algorithm .",
    "actually we measured only an increase of ca .",
    "5% of the time simulation with our algorithm with respect to s1 ( to be efficient , the program must maintain a subdivision of the simulation box and a related list of occupation , or alternatively a neighbor list which already exists anyway for md , such that a loop @xmath213 is fast ) .",
    "when a new algorithm is introduced , it is common practice to rate its performance , and to compare it with the other existing algorithms .",
    "the usual benchmark includes a calculation of the pair distribution function @xmath214 of a noninteracting fluid ( ideal gas ) , a monitoring of the thermalization properties , and a presentation of the self - diffusion data .",
    "the absence of a non trivial but exactly solvable model makes that there is no stringent test available for assessing the ability of an integrator to reproduce faithfully the true dpd dynamics .",
    "previous studies discovered that most dpd algorithms do not predict correctly the flat shape of the @xmath214 characterizing the ideal gas .",
    "instead , some unphysical structure of @xmath214 near the origin is observed , betraying a dynamics with unsatisfactory detailed balance properties .",
    "we present data for both bab and aba algorithms , along with the shardlow  s1 and dpd - vv algorithms ( which are _ a priori _ weak order one algorithm ) .",
    "the scale and axis of our graphs make our data readily comparable with the one presented by nikunen  _ et al .",
    "_  @xcite or serrano  _ et al . _",
    "@xcite . fig .",
    "[ fig : standardgr ] displays the @xmath214 distribution , for the usual weight function @xmath215 , and three increasing values of the time step @xmath216 , @xmath217 , and @xmath208 .",
    "our @xmath214 is very satisfactory for @xmath216 , comparable with dpd - vv but worse than shardlow  s1 for @xmath218 , and definitely worse than its competitors for @xmath208 , a quite large value by the way .",
    "we also plot the bab algorithm deprived of its correcting term , for which the case @xmath216 clearly demonstrates that this correcting term precisely contributes very much to the accuracy of the scheme at small @xmath16 , and supports firmly the validity of our calculation .",
    "[ fig : standardt ] summarizes the thermalization properties .",
    "the left panel of fig .",
    "[ fig : standardt ] shows the simulated kinetic temperature @xmath219 , compared with the value @xmath220 that the thermostat attempts to enforce . in the right panel of fig .",
    "[ fig : standardt ] , we present a semi - logarithmic plot of the difference between the actual simulated temperature and its target value @xmath221 , for the same three time steps @xmath216 , 0.05 and 0.1 .",
    "we draw from these data the same conclusion as for the @xmath214  : both algorithms aba and bab are found inaccurate for @xmath208 , they are comparable with dpd - vv for @xmath218 while standing below shardlow s1 , and finally become as satisfactory as the other algorithms for @xmath216 .",
    "[ fig : interactiongr ] proves that our algorithms predicts correctly the shape of the pair distribution in the presence of interaction , for the `` model  b '' introduced in ref .",
    "@xcite , where an interparticle pair potential equal to @xmath222 ; @xmath223 is present . fig .  [",
    "fig : diffusion ] summarizes the results obtained for the self - diffusion coefficient @xmath224 , in the presence of interactions between particles ( `` model  b '' ) . in the absence of any exact result for this non - trivial situation , we take the self - diffusion value @xmath225 obtained for the smallest time step as a reference , and compare it with the values obtained for larger time step @xmath226 and @xmath227 .",
    "it is also possible to do the same study for an ideal gas , but we found that all the tested algorithms ( dpd - vv , shardlow  s1 and aba ) lead roughly to the same value .",
    "we believe that the data presented here are more discriminant , with a combination of caging effect due to the interactions and correlated diffusion due to the non - local dissipation term .      the ideal gas has been widely used as a benchmark to test dpd integrators , because of the notorious artefacts in @xmath214 from which so many dpd algorithms suffer . we claim that some attention must be paid in that case : for a choice of a weight function with @xmath228 , the dpd dynamics is singular whenever two particles occupy the same position ; therefore , the ideal gas ( the model _ par excellence _ where superposition of particles can occur ) should only be used as a benchmark model for testing dpd algorithms for weight functions such that @xmath229 does not diverge when @xmath230 .",
    "otherwise , what is measured is also the ability of the algorithm to deal with this singularity , whereas the algorithms are always written under the assumption of local differentiability of the functions defining the model .",
    "this point is crucial : a high order numerical scheme may enhance the effect of a singularity and perform worse than its lowest order competitors .",
    "[ fig : regulargr ] demonstrates how efficient a regular weight function is at removing the artefacts in the pair distribution of ideal gases .",
    "it shows the @xmath214 obtained for @xmath231 , while the thermalization properties of @xmath232 are already shown in fig .",
    "[ fig : standardt ] .",
    "the weight function @xmath232 vanishes for @xmath186 , precisely when a pair of particles is colliding , and preventing the sudden reversal of the friction forces associated to this pair .",
    "clearly , the use of @xmath232 for soft core particles generate no artefact in @xmath214 , without reducing the thermalization efficiency of the dpd thermostat .",
    "the comparison between the different algorithms turns now to the advantage of our aba scheme , with a flatter @xmath214 than both dpd - vv and shardlow s1 ( right panel of fig .",
    "[ fig : regulargr ] ) .",
    "first , we would like to emphasize some shortcomings of the above tests , focusing only on static correlators  : from the measurement of @xmath214 , it is not possible to really check how faithful to the true dpd dynamics these algorithms are ; as an extreme illustration of this idea , a ermak - langevin algorithm could be qualified as a good dpd algorithm , if only static quantities are considered .",
    "actually , a genuinely discriminant test of dpd algorithms can be made only in the spirit of the above comparison between ermak and ricci - ciccotti algorithms , that is using as a benchmark a dynamical correlator .",
    "a second question concerns the value of the damping coefficient @xmath4 , which for the sake of the comparison with previously published data , was fixed to a quite large value @xmath233 , and for which an efficient thermalization is achieved at the expense of a `` sluggish''dynamics .",
    "usually , second order algorithms are designed to match smoothly the underlying hamiltonian dynamics in the limit @xmath234 .",
    "thus , for large values of @xmath235 , the putative force of our algorithms is not apparent , compared with simpler order one schemes .",
    "a related question arises  : provided that a numerical scheme samples faithfully the canonical ensemble and conserves well the total momentum , is that of any importance to stick to the actual dpd dynamics or not ?",
    "the answer is certainly yes if one is interested in making connections between numerical results and theoretical developments . in this respect , our second order algorithm is useful , as it matches better hamiltonian and dpd dynamics in the limit @xmath236 , an interesting limit for those who want the dpd only to thermally stabilize a long simulation without perturbing its natural proper dynamics  @xcite .    in our view",
    ", it is still an open question to understand why the algorithm of shardlow and of ref .",
    "@xcite are so efficient in avoiding the artefacts of @xmath214 in fig .",
    "[ fig : standardgr ] .",
    "we simply attribute this to the sequential update of the velocities over all the pairs of particles , rather than doing it all at once , as we propose .",
    "we do not , however , consider fig .",
    "[ fig : standardgr ] as a failure of our algorithms , but much more as a warning message for the dpd users interested in soft core potentials , concerning the inadequacy of the weight function @xmath237 in that case .",
    "simulations with soft core particles should be done with a regular weight such as @xmath238 .",
    "having tried other possible weight functions , such as a parabolic shape @xmath239 , or the quadratic shape @xmath240 , we found that the thermalization and structure properties are respectively close to the results obtained for the singular @xmath147 and regular @xmath232 weight functions , emphasizing the importance of the limit value @xmath241 , as the key feature for reaping the best of our second order scheme .",
    "we demonstrated that a careful use of a trotter splitting for langevin dynamics leads to a discretization scheme equivalent to the algorithm of ermak .",
    "the main difficulty in the procedure comes from the fact that the `` liouvillian '' associated to the langevin dynamics is time dependent , and the contribution of the random noise in the stochastic equation , brings significant changes compared with the case of an ordinary differential equation . as a consequence ,",
    "it is necessary to take into account a commutator term given by  ( [ eq : texptriplecommutator ] ) .",
    "for ordinary langevin dynamics , this corrective term simplifies to  ( [ eq : decompositionevolution ] ) .",
    "this term is responsible for the second independent gaussian increment appearing in the ermak algorithm .    when checking",
    "how accurately these numerical schemes can reproduce a known time - dependent correlation function , we found that keeping both independent random gaussian increments leads to better results for large integration time steps .",
    "however , the benefits of the second random number gets smaller when the integration time step is reduced , and in the small time step limit , where both algorithms share the same accuracy , a single random gaussian increment give satisfactory results .    using the same method , we were able to propose two algorithms for the dissipative particle dynamics ( dpd ) .",
    "one of them , termed `` aba '' , was found to be easy to implement and efficient , and we recommend it as a reasonable alternative for applications .",
    "though less efficient , the other algorithm , termed `` bab '' , deserves to be mentioned as an original and non trivial weak order two algorithm .",
    "we observed that for simulations of soft core particles , the unphysical structure of the pair correlation function @xmath214 is largely a consequence of a non vanishing weight function @xmath147 near @xmath242 .",
    "this artefact almost disappears when the weight function vanishes at the origin , without weakening the efficiency of the dpd thermostat .",
    "it is in this limit only that high order algorithms give their best .",
    "the theoretical developments exposed in this work are poised to provide alternative derivations of some existing algorithms .",
    "unlike the fokker - planck way , our approach offers the possibility to discuss both strong and weak convergence , a fact which extends its scope beyond the realm of md simulations .    the application to dpd revealed a situation of intermediate complexity , standing between the usual additive noise langevin dynamics , and the most general multiplicative noise stochastic equations .",
    "in particular , the treatment of a langevin dynamics with hydrodynamical interactions falls into the same category as dpd , and our discussion will certainly help to improve the design of numerical integration schemes , also in that case .",
    "to convince ourselves of the importance of adopting the right convention when defining the liouvillian , we consider a simple example .",
    "we define the flow  1 as the ordinary differential equation ( o.d.e ) : @xmath243 and the flow  2 as @xmath244 integrating these flows is easy and one finds : @xmath245 and @xmath246 meanwhile , the liouvillians associated to these flows are @xmath247 the commutator of @xmath248 and @xmath249 can be calculated , and its value is @xmath250 = -p\\frac{\\partial}{\\partial x};\\ ] ] we now integrate along the flow  1 for a time interval of @xmath16 and along the flow  2 for a time interval of @xmath251 .",
    "we get the exact result @xmath252 integrating the flows in the reverse order gives a slightly different result @xmath253 we observe that when commuting the flows , the following formula holds @xmath254 with a flow @xmath255 associated to the o.d.e @xmath256 and a liouvillian @xmath257 equal to @xmath258 in other words , @xmath257 is the opposite of the usual commutator , for operators acting on their right hand side : @xmath259.\\ ] ] however , when dealing with the liouvillians , the following formula holds : @xmath260 } e^{-\\delta t{\\hat{\\mathcal l}}_1}e^{-\\delta u{\\hat{\\mathcal l}}_2}\\rho(x , p ) , \\label{eq : commutatorliouvillian } \\ ] ] with , in particular , @xmath261}\\rho(x - p\\delta t , p e^{\\delta u } ) & = \\rho(x - p\\delta t - p\\delta t\\delta u , p e^{\\delta u}).\\end{aligned}\\ ] ]    we conclude that the algebraic formula  ( [ eq : commutatorliouvillian ] ) involves the usual commutator of the differential operators ( as , for instance , in quantum mechanics ) , while the equivalent formula  ( [ eq : commutatorflow ] ) for the flows require a different definition of the commutator .",
    "thus , it is improper to write a flow as an exponential @xmath262 as it would imply @xmath263 } e^{\\delta u{\\hat{\\mathcal l}}_2}e^{\\delta t{\\hat{\\mathcal l}}_1},\\ ] ] unless the operators appearing in the liouvillian are meant to act on their left hand side , such as @xmath264 , @xmath265 .",
    "if , fortunately , in most cases the notation  ( [ eq : impropernotation ] ) does not have serious consequences , it can not be used as soon as commutators are explicitely required in the calculations .",
    "we are now trying to evaluate @xmath266 we split @xmath16 in @xmath58 subintervals @xmath267 and write : @xmath268 then , each chronological exponential is replaced by a usual exponential , and the limit @xmath269 of the product should converge towards a well defined limit .",
    "@xmath270 where @xmath271 is simply @xmath272 thus , the product  ( [ eq : decompositionevolution:2 ] ) can be rewritten as @xmath273 the last exponential can be further reduced by using the bch formula , keeping the triple commutators : @xmath68+\\frac{1}{12}[a,[a , b ] ] + \\frac{1}{12}[b,[b , a]]\\ldots\\right ) \\label{eq : bchdirect3:3 } \\ ] ] using bch again on the right hand side of  ( [ eq : bchdirect3:3 ] ) , we find a reverse formula , exact up to triple commutators , @xmath274-\\frac{1}{3}[a,[a , b ] ] + \\frac{1}{6}[b,[b , a]]\\right)\\exp(a)\\exp(b ) \\label{eq : bchreverse3:3 } \\ ] ] to reduce the last term in  ( [ eq : manyasplitting ] ) , we define the sums @xmath275 and we apply  ( [ eq : bchreverse3:3 ] ) recursively to @xmath276-\\frac{1}{3}[s_n,[s_n , a_n ] ]    + \\frac{1}{6}[a_n,[a_n , s_n]]}\\cdot     e^{s_{n}=a_{n-1}+s_{n-1}}\\cdot e^{a_n } \\nonumber\\\\ & = & e^{-\\frac{1}{2}[s_n , a_n]-\\frac{1}{3}[s_n,[s_n , a_n ] ]    + \\frac{1}{6}[a_n,[a_n , s_n]]}\\nonumber\\\\ & &   \\cdot e^ { -\\frac{1}{2}[s_{n-1},a_{n-1}]-\\frac{1}{3}[s_{n-2},[s_{n-2},a_{n-2 } ] ]    + \\frac{1}{6}[a_{n-2},[a_{n-2},s_{n-2 } ] ] }   \\cdot e^{s_{n-1}}\\cdot e^{a_{n-1}}\\cdot e^{a_{n } } \\nonumber\\\\ & = &   e^{-\\frac{1}{2}\\sum_{i=1}^{n}[s_i , a_i ]    -\\frac{1}{3}\\sum_{i=1}^{n}[s_i,[s_i , a_i ] ]     + \\frac{1}{6}\\sum_{i=1}^{n}[a_i,[a_i , s_i]]+r_n }     \\cdot e^{a_1}\\cdot e^{a_2}\\cdot\\ldots e^{a_{n}}. \\ ] ]    in the large @xmath58 limit , @xmath277 , @xmath278 and @xmath279 , it results that the term @xmath280 $ ] and the remaining term @xmath281 do not contribute .",
    "equation  ( [ eq : manyasplitting ] ) reduces to @xmath282   -\\frac{1}{3}\\sum_{i=1}^{n}[s_i,[s_i , a_i]]\\right),\\ ] ] or , using riemann sums instead , @xmath283 -\\frac{1}{3 } \\int_{0}^{\\delta t } { \\mathrm{d}}s   \\int_0^{\\displaystyle s } { \\mathrm{d}}u \\int_0^{\\displaystyle s } { \\mathrm{d}}v   [ { \\hat{\\mathcal l}}(v),[{\\hat{\\mathcal l}}(u),{\\hat{\\mathcal l}}(s)]]\\right ) .",
    "\\label{eq : texptriplecommutatorb}\\ ] ] when specifying to the langevin dynamics , @xmath284 we obtain @xmath285 = ( \\psi(u){\\mathrm{d}}u{\\mathrm{d}}s\\ , -\\psi(s){\\mathrm{d}}s{\\mathrm{d}}u ) \\left ( \\frac{1}{m}\\frac{\\partial}{\\partial r } -\\gamma \\frac{\\partial}{\\partial p}\\right),\\ ] ] which contributes to a @xmath21 term , while the triple commutator gives only a @xmath90 term and can be disregarded .",
    "finally , @xmath286 & = & \\frac{1}{2 } \\int_0^{\\delta t}\\left(s\\,\\psi(s){\\mathrm{d}}s\\,-{\\mathrm{d}}s\\,{\\int_{0}^{s}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u})\\right)\\left ( \\frac{1}{m}\\frac{\\partial}{\\partial r } -\\gamma \\frac{\\partial}{\\partial p}\\right);\\nonumber\\\\ & = & \\bigg[\\frac{\\delta t}{2 } { \\int_{0}^{\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u } -\\int_0^{\\delta t}{\\mathrm{d}}s\\ ,    { \\int_{0}^{s}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg]\\notag\\\\ & &   \\times \\left ( \\frac{1}{m}\\frac{\\partial}{\\partial r } -\\gamma \\frac{\\partial}{\\partial p}\\right ) , \\ ] ] and the justification of ( [ eq : decompositionevolution ] ) is complete .",
    "let us start with the splitting  ( [ eq : splittingvv:1 ] ) .",
    "each operator acts recursively on the coordinates @xmath293 of @xmath294 .",
    "this leads to the sequence : @xmath295 ,   p-\\delta t f\\bigg(r - p\\frac{\\delta t}{2m}\\bigg )   \\right ) . \\ ] ] the arguments of @xmath49 must be identified to the initial position and impulsion @xmath296 of a trajectory ending at the final position @xmath297 , @xmath298 .",
    "thus , @xmath299 then , equations can be reversed to express @xmath300 as functions of @xmath296 , and in  ( [ eq : val:1 ] ) , @xmath301 can be replaced by @xmath302 .",
    "@xmath303 meanwhile , the splitting  ( [ eq : splittingvv:2 ] ) leads to @xmath304 for the langevin dynamics of one dimensional systems , we use : @xmath305 swith @xmath306 ; @xmath307 \\frac{\\partial}{\\partial p}$ ] . given that @xmath308\\rho(r , p )   = \\rho\\left(r , p e^y + x(r)\\frac{e^y-1}{y } \\right),\\ ] ] we find @xmath309,\\right .",
    "\\nonumber\\\\ & &   \\left .",
    "pe^{\\gamma \\delta t } -\\bigg(\\delta t f(\\tilde{r } ) + \\sigma{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg ) \\frac{e^{\\gamma",
    "\\delta t}-1}{\\gamma \\delta t}\\right ) . \\ ] ] in the above expression , @xmath52 must be identified with @xmath310 , and @xmath53 with @xmath311 .",
    "the resulting function is @xmath312 , where @xmath313 must be replaced with @xmath314 , @xmath315 with @xmath316 , and @xmath313 , @xmath315 given by the above expression , with @xmath317 at the desired level of accuracy .",
    "these relations can be reverted in such a way that @xmath311 and @xmath318 depend explicitely on @xmath316 and @xmath314 .",
    "the result is @xmath319\\frac{1-e^{-\\gamma\\delta t}}{\\gamma\\delta t }   \\nonumber\\\\ r(t+\\delta t ) & = & r(t)+\\frac{\\delta t}{2m}\\bigg(p(t)+p(t+\\delta t)\\bigg ) \\ ] ] finally , the commutator correction simply shifts the previous result by a @xmath21 amount . @xmath320",
    "\\frac{1-e^{-\\gamma\\delta t}}{\\gamma\\delta t}\\nonumber\\\\ & & + \\gamma\\sigma\\bigg[\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u }   -\\int_0^{\\delta t}{\\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg];\\\\ r(t+\\delta t ) & = & r(t)+\\bigg(p(t)+p(t+\\delta t)\\bigg )    \\frac{\\delta t}{2m}\\nonumber\\\\ & & + \\frac{\\sigma}{m}\\bigg[\\int_0^{\\delta t}{\\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u }    -\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg ] .   \\ ] ] alternatively , the other splitting leads to slightly more complex expressions : @xmath321 , \\right .",
    "\\nonumber\\\\ & &    pe^{\\gamma \\delta t }   -\\bigg(\\delta t f(r ) + \\sigma{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg )   e^{\\gamma \\delta t/2 } \\frac{e^{\\gamma \\delta t/2}-1}{\\gamma\\delta t } \\nonumber\\\\ & & \\left",
    ". -\\bigg(\\delta t f(\\tilde{r } ) + \\sigma{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg ) \\frac{e^{\\gamma",
    "\\delta t/2}-1}{\\gamma\\delta t } \\right ) \\ ] ] this finally leads to the algorithm @xmath322;\\\\ r(t+\\delta t ) & = & r(t)+\\frac{\\delta t}{m } \\bigg[p(t)e^{-\\gamma \\delta",
    "t/2}+\\frac{1-e^{-\\gamma\\delta t/2}}{\\gamma\\delta t } \\bigg(\\delta t f(r(t))+\\sigma{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u } \\bigg)\\bigg ] \\nonumber\\\\ & & + \\frac{\\sigma}{m}\\bigg[\\int_0^{\\delta t}{\\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u }    -\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}(u)\\,{\\mathrm{d}}u}\\bigg ] .   \\ ] ] these results generalize straightforwardly to the three dimensional many particles case , by adding the space and particles indices .",
    "for instance @xmath323 \\frac{1-e^{-\\gamma\\delta t}}{\\gamma\\delta t}\\nonumber\\\\ & & + \\gamma\\sigma\\bigg[\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u }   -\\int_0^{\\delta t}{\\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u}\\bigg];\\\\ { \\bm{r}}_{i\\alpha}(t+\\delta t ) & = &    { \\bm{r}}_{i\\alpha}(t)+\\bigg({\\bm{p}}_{i\\alpha}(t)+{\\bm{p}}_{i\\alpha}(t+\\delta t)\\bigg )     \\frac{\\delta t}{2m}\\nonumber\\\\ & & + \\frac{\\sigma}{m}\\bigg[\\int_0^{\\delta t}{\\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u }    -\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u}\\bigg ] .   \\ ] ] corresponds to the splitting  ( [ eq : splitting13 ] ) .",
    "if one expands in powers of @xmath16 up to @xmath17 , the algorithm reads @xmath324 which are eq  ( [ eq : splittingabar ] ) and  ( [ eq : splittingabap ] ) .",
    "alternatively , the splitting  ( [ eq : splitting14 ] ) leads to : @xmath325;\\\\ { \\bm{r}}_{i\\alpha}(t+\\delta t ) & = & { \\bm{r}}_{i\\alpha}(t)+\\frac{\\delta t}{m } \\bigg[{\\bm{p}}_{i\\alpha}(t)e^{-\\gamma \\delta t/2 } + \\frac{1-e^{-\\gamma\\delta t/2}}{\\gamma\\delta t } \\bigg(\\delta t { \\bm{f}}_{i\\alpha}({\\bm{r}}(t))+\\sigma{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u } \\bigg)\\bigg ] \\nonumber\\\\ & & + \\frac{\\sigma}{m}\\bigg[\\int_0^{\\delta t}{\\mathrm{d}}s\\,{\\int_{t}^{s}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u }    -\\frac{\\delta t}{2}{\\int_{t}^{t+\\delta t}\\!{\\bm{\\psi}}_{i\\alpha}(u)\\,{\\mathrm{d}}u}\\bigg ] .   \\ ] ] and finally , @xmath326 which are eq  ( [ eq : splittingbabp ] ) and  ( [ eq : splittingbabr ] ) .",
    "the operators @xmath327 and @xmath328 , with @xmath61 and @xmath62 introduced in  ( [ eq : definitionab : dpd ] ) , act respectively on test functions like @xmath329 the splitting @xmath330 leads to , following manipulations similar to appendix  ( [ app : vv ] ) : @xmath331 which , upon expansion in powers of @xmath16 up to @xmath17 , gives the algorithm  ( [ eq : splittingdpdaba : p ] ) and  ( [ eq : splittingdpdaba : r ] ) .",
    "the second splitting @xmath332 leads to : @xmath333 ; \\\\ { \\bm{p}}(t+\\delta t ) & = & e^{-\\frac{\\delta t}{2}{\\bm{\\gamma}}({\\bm{r}}(t+\\delta t ) ) } e^{-\\frac{\\delta t}{2}{\\bm{\\gamma}}({\\bm{r}}(t ) ) } { \\bm{p}}(t)\\notag\\\\ & & + e^{-\\frac{\\delta t}{2}{\\bm{\\gamma}}({\\bm{r}}(t+\\delta t ) ) } { \\bm{\\gamma}}({\\bm{r}}(t))^{-1}\\bigg(\\bm{1}-e^{-\\frac{\\delta t}{2}{\\bm{\\gamma}}({\\bm{r}}(t))}\\bigg )   \\cdot{\\bm{k}}(r(t);t)\\notag\\\\ & & + { \\bm{\\gamma}}({\\bm{r}}(t+\\delta t))^{-1 } \\bigg(\\bm{1}-e^{-\\frac{\\delta t}{2}{\\bm{\\gamma}}({\\bm{r}}(t+\\delta t))}\\bigg )   \\cdot{\\bm{k}}(r(t+\\delta t);t ) , \\ ] ] which , upon expansion in powers of @xmath16 up to @xmath17 , gives the algorithm  ( [ eq : splittingdpdbab : p ] ) and  ( [ eq : splittingdpdbab : r ] ) .",
    "the correction term @xmath87 $ ] acts only on the impulsions : @xmath334 & = & 2\\frac{\\sigma^2}{m}\\delta t \\sum_{ijkl,\\alpha\\beta }   { \\big[\\int_{t}^{t+\\delta t}\\!\\psi_{ij}(u){\\mathrm{d}}u\\,\\big]}{\\big[\\int_{t}^{t+\\delta t}\\!\\psi_{kl}(u){\\mathrm{d}}u\\,\\big]}\\notag\\\\ & & \\times \\frac{w(r_{ij})}{r_{ij}}(r_{i\\alpha}-r_{j\\alpha } )   \\frac{\\partial}{\\partial r_{i\\alpha } } \\big (    \\frac{w(r_{kl})}{r_{kl}}(r_{k\\beta}-r_{l\\beta})\\big ) \\frac{\\partial}{\\partial p_{k\\beta } } ,   \\label{eq : correctiondeltap1}\\end{aligned}\\ ] ] as a further simplification , we remark that the terms involving two different pairs @xmath335 and @xmath336 are of zero mean , uncorrelated from any @xmath337}$ ] , and of variance @xmath74 . therefore , within a weak order two scheme , we can replace  ( [ eq : correctiondeltap1 ] ) by its average value and the correction term becomes : @xmath338= 2\\frac{\\sigma^2}{m}\\delta t^2   \\sum_{ij,\\alpha\\beta } \\frac{w(r_{ij})}{r_{ij}}(r_{i\\alpha}-r_{j\\alpha } ) \\frac{\\partial}{\\partial r_{i\\alpha } }   \\big(\\frac{w(r_{ij})}{r_{ij}}(r_{i\\beta}-r_{j\\beta})\\big ) \\left(\\frac{\\partial}{\\partial p_{i\\beta } }   -\\frac{\\partial}{\\partial p_{j\\beta}}\\right ) , \\label{eq : dpdbab}\\ ] ] and finally , each impulsion @xmath339 is incremented by an amount @xmath340 where @xmath341 is 12 for the splitting @xmath330 or -24 for the splitting @xmath332 .",
    "the correction @xmath180)$ ] gives terms proportional to , which have been shown to be uncorrelated to the @xmath181}$ ] , of vanishing mean value and of variance @xmath102 .",
    "these terms are the pendant of the corrections in the ermak algorithm , and can be neglected in practice .",
    "the correction term @xmath342)$ ] can be written as @xmath343 }   \\psi_{kl}(s)(s - t){\\mathrm{d}}s\\,+{\\big[\\int_{t}^{s}\\!\\psi_{kl}(u){\\mathrm{d}}u\\,\\big]}\\psi_{ij}(s)(s - t){\\mathrm{d}}s\\notag\\\\ -2{\\mathrm{d}}s { \\big[\\int_{t}^{s}\\!\\psi_{ij}(u){\\mathrm{d}}u\\,\\big ] } { \\big[\\int_{0}^{s}\\!\\psi_{kl}(u){\\mathrm{d}}u\\,\\big]}\\big)\\\\ \\displaystyle\\sum_{\\alpha,\\beta}\\left\\lbrace \\frac{w(r_{ij})}{r_{ij}}(r_{i\\alpha}-r_{j\\alpha } ) \\frac{\\partial}{\\partial r_{i\\alpha } } \\big(\\frac{w(r_{kl})}{r_{kl } } ( r_{k\\beta}-r_{l\\beta})\\big)\\frac{\\partial}{\\partial p_{k\\beta } } \\right\\rbrace .",
    "\\label{eq : correctiondpdtriple}\\end{gathered}\\ ] ] if the pairs @xmath344 and @xmath345 differ , the random increment turns out to be uncorrelated to the @xmath181}$ ] , of variance @xmath74 and therefore can be evacuated from an order two integration scheme .",
    "however , the term corresponding to the same pairs gives an positive @xmath17 contribution ( we use here the stratonovitch interpretation of the stochastic integrals ) .",
    "@xmath346 }   \\psi_{ij}(s)(s - t){\\mathrm{d}}s\\ , -{\\mathrm{d}}s{\\big[\\int_{t}^{s}\\!\\psi_{ij}(u){\\mathrm{d}}u\\,\\big]}^2\\big)\\right\\rangle}\\\\ = \\displaystyle{\\left\\langle \\frac{\\delta t}{2 } { \\big[\\int_{t}^{t+\\delta t}\\!\\psi_{ij}(u){\\mathrm{d}}u\\,\\big]}^2   -\\frac{3}{2}\\int_t^{t+\\delta t}{\\mathrm{d}}s   { \\big[\\int_{t}^{s}\\!\\psi_{ij}(u){\\mathrm{d}}u\\,\\big]}^2\\right\\rangle } = \\frac{-\\delta t^2}{4 } , \\ ] ] while the last term of equation  ( [ eq : correctiondpdtriple ] ) reduces to ( [ eq : dpdbab ] ) , leading to an operator : @xmath347 }   \\psi_{ij}(s)(s - t){\\mathrm{d}}s\\,-{\\mathrm{d}}s { \\big[\\int_{0}^{s}\\!\\psi_{ij}(u){\\mathrm{d}}u\\,\\big]}^2\\bigg)\\right\\rangle}\\\\ \\times\\displaystyle\\sum_{\\alpha,\\beta}\\left\\lbrace \\frac{w(r_{ij})}{r_{ij}}(r_{i\\alpha}-r_{j\\alpha } ) \\frac{\\partial}{\\partial r_{i\\alpha } } \\big(\\frac{w(r_{ij})}{r_{ij } } ( r_{i\\beta}-r_{j\\beta})\\big ) \\bigg(\\frac{\\partial}{\\partial p_{i\\beta}}-\\frac{\\partial}{\\partial    p_{j\\beta}}\\bigg ) \\right\\rbrace ,   \\ ] ] and the corresponding corrective term for the impulsions @xmath339 equals @xmath348 together , the correction of the triple commutators is the sum of @xmath349  ( [ eq : incrementdpdbab ] ) and @xmath350  ( [ eq : incrementdpdtriple ] ) are @xmath351 for a fixed couple of indices @xmath137 and @xmath138 , the differentiation takes the form @xmath352 , with @xmath353{\\bm{r}}_{ij}$ ] .",
    "a further simplification comes , using the identity + @xmath354 , @xmath355 finally , the correction reduces to @xmath356 surprisingly , the term cancels out if @xmath357 , meaning that there is no contribution at all in the case of the splitting @xmath330 , and that the algorithm  ( [ eq : splittingdpdaba : r ] , [ eq : splittingdpdaba : p ] ) is already a genuine weak order two algorithm for dpd .",
    "however , the correction term must be accounted for when the splitting @xmath332 is considered , ending with the weak order two algorithm  ( [ eq : algodpdbab : r ] , [ eq : algodpdbab : p ] , [ eq : babcorrectiveterm ] ) .",
    "10    andrea ricci and giovanni ciccotti .",
    "algorithms for brownian dynamics .",
    ", 101(12):19271931 , june 2003 .",
    "ermak and h.  buckholtz .",
    "numerical integration of the langevin equation : monte - carlo simulation .",
    ", 35:169182 , 1980 .",
    "m.p  allen and d.j .",
    "tildesley . .",
    "oxford science publications , oxford , 1987    thomas soddeman , burkhard dnweg , and kurt kremer .",
    "dissipative particle dynamics : a useful thermostat for equilibrium and nonequilibrium molecular dynamics simulations . , 68:046702 , 2003 .",
    "tony shardlow .",
    "splitting for dissipative particle dynamics .",
    ", 24:12671282 , 2003 .",
    "p.  nikunen , m.  karttunen , and vattulainen i. how would you integrate the equations of motion in dissipative particle dynamics simulations ? , 153:407423 , 2003 .",
    "i.  pagonabarraga , hagen m.h.j . , and d.  frenkel .",
    ", 42:377 , 1998 .",
    "robert d.  groot and patrick b.  warren .",
    "dissipative particle dynamics : bridging the gap between atomistic and mesoscopic simulation , 107(11):44234435 , 1997 .    in ref .",
    "@xcite , the potential force is assumed constant or slowly varying .",
    "the extension of this method to non constant forces is presented in ref .",
    "@xcite , with references to m.p .",
    ", 40:1073 - 1087 , 1980 .",
    ", 47:599 - 601 , 1982 . and w.f .",
    "van gusteren and h.j.c  berendsen . , 45:637 - 647 , 1982 .    in it calculus ,",
    "the differentiation rules are different and involve second derivatives in eq .",
    "( [ eq : liouvilliandeterministic ] ) .",
    "k  burrage and p.m burrage .",
    "high strong order methods for non - commutative stochastic ordinary differential equation systems and the magnus formula . , 133:34 , 1999 .",
    "g.  de  fabritiis , m.  serrano , p  espanol , and p.v .",
    "efficient numerical integrators for stochastic models . , 361(2):429 , 2006 .",
    "m.  serrano , g.  de  fabritiis , p  espanol , and p.v .",
    "coveney . a stochastic trotter integration scheme for dissipative particle dynamics .",
    ", 72:190 , 2006 .",
    "hoogerbrugge and j.m.v.a .",
    "koelman . , 19:155 , 1992 .",
    "hoogerbrugge and j.m.v.a .",
    ", 21:363 , 1993 .",
    "pep espanol and patrick warren . , 30:191 , 1995 .",
    "pep espanol .",
    "hydrodynamics from dissipative particle dynamics . , 52(2):1734 , 1995 .",
    "fig  1 . illustration of the fokker - planck evolution in phase space .",
    "+ fig  2 .",
    "respective efficiencies of the ermak and ricci - ciccotti algorithms .",
    "see text for details .",
    "+ fig  3 .",
    "pair correlation function @xmath214 for the ideal gas and a standard weight function @xmath237 . from left to right , @xmath16 takes the values 0.01 , 0.05 and 0.1 .",
    "the algorithms presented here are aba , bab , bab deprived of its correcting term , shardlow s1 and dpd - vv .",
    "simulations involve 4000 particles , a run length of 60000 time steps , and parameters values @xmath358 , @xmath359 , @xmath360 + fig  4 .",
    "thermalization properties of aba , bab , shardlow s1 , dpd - vv ( singular weight @xmath147 ) , aba and dpd - vv ( regular weight @xmath232 ) . on the left panel : simulated temperatures @xmath219 _ vs _ time step @xmath16 ; on the right panel : a semi - log plot of the difference @xmath361 _ vs _ the time step @xmath16 .",
    "+ fig  5 .",
    "pair correlation function @xmath214 for an interacting fluid , a weight function @xmath237 and a pair interaction potential @xmath222 , with @xmath223 . from left to right , we show the algorithm shardlow s1 , aba and dpd - vv . the full line represents the result for @xmath216 , the dashed line for @xmath226 , and the symbols @xmath362 for @xmath208 .",
    "all three algorithms coincide in the limit @xmath216 .",
    "the aba algorithm is more accurate for @xmath208 than the two others , a feature that might be explained by its order two nature . in the presence of repulsive interaction",
    ", the singularity of @xmath147 has no consequences . + fig  6 .",
    "presentation of the dpd diffusion coefficient @xmath363 for an interacting fluid , for three different values of the time step @xmath16 . left panel : for each algorithm , the curves are normalized by their value at @xmath364 , and only relative variations of @xmath363 are shown , as in ref .",
    "right panel : the bare @xmath363 are shown . depending on the algorithm chosen , the self - diffusion coefficient changes by a proportion of 6% , which is also our estimate of the statistical error affecting our data .",
    "we conclude that the values obtained with @xmath226 are consistent with the reference values obtained with @xmath216 , and that there is no significant difference between these three algorithms , regarding the self - diffusion properties . for completeness",
    ", we calculated the self - diffusion coefficient for the ideal gas , and found that the data obtained for the three algorithms were almost indistinguishable ( all within @xmath365 ) . the self - diffusion coefficient of the ideal gas is close to 0.535 .",
    "the interaction potential reduces only lightly this value , excluding any caging effect or thermal activation . + fig  7 .",
    "pair correlation function @xmath214 for the ideal gas and a weight function . from left",
    "to right , @xmath366 takes the values 0.01 , 0.05 and 0.1 .",
    "the algorithms presented here are aba , shardlow s1 and dpd - vv .",
    "simulations involve 4000 particles , a run length of 60000 time steps , and parameters values @xmath358 , @xmath359 , @xmath360"
  ],
  "abstract_text": [
    "<S> this paper focuses on the temporal discretization of the langevin dynamics , and on different resulting numerical integration schemes . using a method based on the exponentiation of time dependent operators , </S>",
    "<S> we carefully derive a numerical scheme for the langevin dynamics , that we found equivalent to the proposal of ermak and buckholtz , _ </S>",
    "<S> j.comput.phys 35 , p169 ( 1980 ) _ , and not simply to the stochastic version of the velocity - verlet algorithm . however , we checked on numerical simulations that both algorithms give similar results , and share the same `` weak order two '' accuracy . </S>",
    "<S> we then apply the same strategy to derive and test two numerical schemes for the dissipative particle dynamics ( dpd ) . the first one of them was found to compare well , in terms of speed and accuracy , with the best currently available algorithms . </S>"
  ]
}
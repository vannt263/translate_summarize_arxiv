{
  "article_text": [
    "the problem of control by the robots ( crawlers ) that traverse the web and bring web pages to the indexing engine that updates the data base of a web search engine is formulated and analyzed in @xcite .",
    "this problem is formulated in @xcite as the controlled queueing system .",
    "the system has a single server with the exponential service time distribution , finite buffer of capacity @xmath0 there are @xmath1 available robots and each of these robots , when activated , brings pages to the server in a poisson stream at fixed rate .",
    "these @xmath1 stationary poisson processes are mutually independent and independent of service times .",
    "the number of active robots may be modified at any arrival or departure epoch .",
    "when an arrival occurs , the incoming robot is de - activated at once ; the controller may then decide to keep it idle or to activate it .",
    "when a departure occurs the controller may either decide to activate one additional robot , if one is available , or to do nothing ( i.e. the number of active robots is left unchanged ) .    in @xcite ,",
    "the problem of finding a policy that minimizes a weighted sum of the loss rate and starvation probability ( probability of the empty system ) is considered .",
    "it is solved by means of the tools of the markov decision problems theory .    as the possible generalizations of the model , which are certainly worthwhile analyzing ,",
    "the following ones are mentioned in @xcite :    * more general input processes , e.g. , a @xmath2 ( _ markov modulated poisson process _ ) should be considered so as to reflect more accurately `` traveling times '' of robots in the network ; * because of the obsolescence of stored documents issue , the waiting time should be bounded , even if the buffer size is effectively infinite ; * other cost functions could be investigated , for instance , cost functions including response times .    in this paper , we made all the mentioned and some further generalizations .",
    "we assume that , under the fixed number of currently active robots , the arrival process is of the @xmath3 type .",
    "the @xmath3 is a more general process comparing to the @xmath2 and allows delivering of a batch of web pages to be indexed while the @xmath2 assumes that the pages are delivered one - by - one .",
    "it is very typical for a computer system to operate in batch mode .",
    "we assume that the service time distribution is of the @xmath4 ( phase ) type which is much more general comparing to the exponential distribution assumed in @xcite .",
    "the class of phase type distributions is dense in the field of all positive - valued distributions and practically we can deal with any real distribution @xcite .",
    "since web pages can become obsolete , we bound the waiting time stochastically . waiting time of each web page in a buffer is restricted by a random variable having @xmath4 distribution identical and mutually independent for all web pages .",
    "the phase type distribution has been used to model obsolescence times for instance in @xcite .",
    "we suppose that the cost function can have a more general form than in @xcite and include the obsolescence probability and response time .    in the next section",
    "we formulate the model and optimization problem .",
    "section 3 contains the steady - state analysis of the multi - dimensional markov chain which defines dynamics of the system under the fixed values of the parameters defining the strategy of control . in section 4 ,",
    "main performance measures of the system are computed . in section 5 ,",
    "the conditional sojourn time distributions are calculated . in section 6 ,",
    "the case of ordinary arrivals is touched in brief . in section 7 , the theoretical results are illustrated by numerical examples .",
    "in particular , the mathematical model is applied to the performance evaluation and optimization of the robot designed by inria maestro team in the framework of the riam inria - canon research project .",
    "section 8 concludes the paper .",
    "we consider a single server system with the finite buffer of capacity @xmath0 so , the total number of web pages which can stay in the system is restricted by the number @xmath5 web pages are served by a server in order of their arrivals .",
    "service times of web pages are independent identically distributed random variables having @xmath4 distribution with irreducible representation @xmath6 it means the following .",
    "service of a web page is defined as a time until the continuous - time markov chain @xmath7 having the states @xmath8 as the transient and state @xmath9 as absorbing one reaches the absorbing state .",
    "an initial state of the chain is selected in a random way , according to the probability distribution defined by the row - vector @xmath10 , where @xmath11 is the stochastic row vector of dimension @xmath12 .",
    "transitions of the markov chain @xmath13 , are described by the generator @xmath14 where the matrix @xmath15 is a sub - generator and the column vector @xmath16 is defined by @xmath17 and has all non - negative and at least one positive components , @xmath18 is the column vector of dimension @xmath12 consisting of all 1 s .",
    "the average service time @xmath19 is given by @xmath20 for more details about the @xmath4 type distribution , its properties , special cases and applications see @xcite .",
    "web pages can be delivered into the system by @xmath1 available robots .",
    "the number of active robots varies in the set @xmath21 we assume that the process of web pages delivering under @xmath22 active robots is described as follows .",
    "let @xmath23 be an irreducible continuous time markov chain having finite state space @xmath24 .",
    "sojourn time of the chain @xmath25 , in the state @xmath26 has exponential distribution with a parameter @xmath27 .",
    "after this time expires , with probability @xmath28 the chain jumps into the state @xmath29 without generation of web pages and with probability @xmath30 the chain jumps into the state @xmath29 and a batch consisting of @xmath31 web pages is generated , @xmath32 .",
    "the introduced probabilities satisfy conditions : @xmath33    the parameters defining this flow are kept in the square matrices @xmath34 of size @xmath35 defined by their entries : @xmath36@xmath37 denote @xmath38    the matrix @xmath39 is the infinitesimal generator of the process @xmath40 under the fixed number @xmath41 of active robots . the stationary distribution vector @xmath42 of this process satisfies the equations @xmath43 here and in the sequel , @xmath44 is the zero row vector .",
    "the average intensity @xmath45 ( fundamental rate ) of the @xmath3 under the fixed number @xmath41 of active robots is defined by @xmath46 and the intensity @xmath47 of group arrivals is defined by @xmath48 the variance @xmath49 of intervals between group arrivals is calculated as @xmath50 while the correlation coefficient @xmath51 of intervals between successive group arrivals is given by @xmath52    the introduced representation of the arrival process via the matrices @xmath34 unifies several possible interpretations of the process of web pages delivered by the fixed number of active robots :    * the processes of web pages delivering by all robots are independent @xmath3 processes .",
    "let the process of web pages delivering by the @xmath41th robot be the @xmath3 which is governed by the continuous time markov chain @xmath53 having finite state space @xmath54 and defined by the matrices @xmath55 of size @xmath56 see @xcite for more details about the @xmath3 , its properties and special cases .",
    "we denote @xmath57 + let us assume that the robots are arranged in such a way that the first robot is always active , then , when a queue decreases , the second robot can be activated , etc , the @xmath1th robot is the most rare activated .",
    "+ the matrices @xmath34 of size @xmath58 defined by formulae ( 1 ) are expressed via the matrices @xmath59 of size @xmath60 describing the @xmath3s in the following way : @xmath61 @xmath62 here @xmath63 and @xmath64 denote kronecker product and sum of matrices correspondingly ( see , e.g. , @xcite ) , @xmath65 denotes identity matrix of size @xmath66 if the size of the matrix is clear from context the suffix can be omitted .",
    "@xmath67 * the common process of web pages delivered by all robots together is the @xmath3 process directed by the continuous time markov chain @xmath23 having finite state space @xmath24 and defined by the matrices @xmath68 of size @xmath69 some set of thinning probabilities @xmath70 @xmath71 is fixed . when @xmath41 robots are active , procedure of thinning the @xmath3 process with the thinning probability @xmath72 is applied .",
    "it means that an arbitrary arriving batch is accepted with probability @xmath72 and is rejected with the complimentary probability @xmath73 we denote @xmath74 + the matrices @xmath34 defined by formulae ( 1 ) are expressed via the matrices @xmath75 describing the common @xmath3 and via the thinning probability @xmath72 in the following way : @xmath76 * let the process of web pages delivering by robots is described by a @xmath77 the @xmath78 is directed by continuous time markov chain @xmath23 having finite state space @xmath24 .",
    "sojourn time of the chain @xmath25 , in the state @xmath26 has exponential distribution with a parameter @xmath79 . after this time expires , with probability @xmath80 the chain jumps into the state @xmath29 without generation of web pages and with probability @xmath30 the chain jumps into the state @xmath29 and a batch consisting of @xmath81@xmath82 web pages",
    "are delivered by the @xmath41th robot .",
    "the introduced probabilities satisfy conditions : @xmath83 + the matrices @xmath34 defined by formulae ( 1 ) are expressed via the matrices @xmath84 formed by the probabilities @xmath85 and @xmath86 in the following way : @xmath87 * the process of web pages delivery by all robots is the @xmath3 process directed by the continuous time markov chain @xmath23 having finite state space @xmath24 and defined by the transition intensity matrices @xmath88 depending on the number of active robots .",
    "interpretation 3 seems be the most attractive because it assumes that the work of the robots can be dependent , which is quite realistic . because the total amount of web servers from which new pages should be brought is more or less constant , reduction of the number of active robots causes the increase of field in internet , which is scrawled by each robot , and corresponding change of travel time .",
    "so , the @xmath78 looks to be the most realistic model of web pages delivery .",
    "if a batch of delivered web pages meets free server one web page starts the service immediately while the rest moves to the buffer .",
    "if the server is busy at an arrival epoch , all web pages of the batch are placed into the buffer if there is enough free space in the buffer .",
    "if the number of free places in the buffer is less than the number of web pages in the batch , the corresponding number of web pages is lost .",
    "it means that we consider so called partial admission strategy .",
    "the alternative strategies of complete rejection or complete admission can be investigated in analogous way .    for each web page placed into the buffer , the waiting time is restricted by the random variable ( so called obsolescence time ) having @xmath4 distribution with irreducible representation @xmath89 it means the following .",
    "available waiting time of the @xmath90th web page in the buffer is defined as a time until the continuous - time markov chain @xmath91 having the states @xmath92 as the transient and state @xmath9 as absorbing one , reaches the absorbing state .",
    "transition of this process into the absorbing state means that this web page gets out of date ( obsolescence or dashout occurs ) .",
    "an initial state of the chain is selected in a random way , according to the probability distribution defined by the row - vector @xmath93 , where @xmath94 is the stochastic row vector of dimension @xmath95 .",
    "transitions of the markov chain @xmath96 , are described by the generator @xmath97 where the matrix @xmath98 is sub - generator and the column vector @xmath99 is defined by @xmath100 the average time until obsolescence @xmath101 is given by @xmath102    if the obsolescence time expires before a web page is picked - up from the buffer to the server , it is assumed that this web page immediately leaves the buffer and is lost .",
    "the obsolescence times of different web pages are independent of each other and identically distributed .",
    "it is worth to note that the analysis presented below could be drastically simplified if we suggest that the obsolescence time is exponentially distributed .",
    "however , this suggestion rarely holds true in the real world systems because this suggestion means that , with high probability , information obsoletes very quickly .    reasonable class of strategies of control by robots is the class of the threshold strategies defined as follows .",
    "integers @xmath103 are fixed such as @xmath104 if the number @xmath90 of web pages in the system satisfies inequality @xmath105 then @xmath106 robots are active and @xmath107 robots are de - activated , @xmath108    note that the described threshold strategies are popular in literature in controlled queues , see , e.g. , @xcite . for some systems , it is proven that the optimal strategy in the class of all markovian strategies belongs to the class of threshold strategies .",
    "for some other systems such a result is not proven , but the optimal strategy is sought in the class of threshold strategies .",
    "advantage of such strategies is their intuitive justification and relative simplicity of implementation in real - life systems .",
    "numerical examples presented in the paper @xcite for a partial case of our model confirm that the threshold strategies are optimal in the class of all markovian strategies , although authors can not prove this fact .",
    "our system is much more complicated and we also can not prove optimality of the optimal threshold strategy in wider classes of strategies .",
    "we just try to find an optimal threshold strategy and believe that it is optimal or sub - optimal in wider classes as well .",
    "we also mention that the description of the given above threshold strategy suits only for the case when @xmath109 while the numerical examples presented in @xcite address , e.g. , the case @xmath110 and @xmath111 . however ,",
    "if we look at the optimal strategy given by figure 2 in @xcite , we see that the optimal number of the active robots varies between 4 and 14 with 4 switching points where two or three robots are activated or de - activated . because , in contrast to @xcite , we do not assume that each active robot generates a stationary poisson process of arrivals at a fixed rate but we assume that each robot generates a batch markovian arrival process , we see that our strategy suits for the case @xmath112 as well .",
    "we could achieve this formally by allowing non - strict inequalities : @xmath113 in fixing the thresholds .",
    "so , speaking below about a robot we may think about a virtual robot as a group of several available real robots which are activated and de - activated simultaneously .",
    "we will solve the problem of choosing the optimal threshold strategy .",
    "the cost function is assumed to be of the following form : @xmath114 where @xmath115 is the mean number of pages delivered into the system by robots during a unit of time ( fundamental rate of the arrival process ) , @xmath116 is probability of arbitrary page loss due to the buffer overflow , @xmath117 is probability of arbitrary page obsolescence during waiting in a queue , @xmath118 is probability of starvation of the system , @xmath119 is the response time ( average sojourn time of web pages which are not lost or deleted due to obsolescence ) , @xmath120 is the average number of active robots , @xmath121 are the corresponding non - negative cost coefficients .",
    "the values of the cost coefficients can be set up by experts in the domain .",
    "alternatively , the cost coefficients can be viewed as lagrange multipliers in the constrained problem and can be found from the dual problem formulation .",
    "it is clear that if the average number of active robots is increasing then the three first summands in ( 2 ) are increasing while the last summand , charge for starvation of the system , is decreasing .",
    "the last charge is important because starvation means that the indexing machine is idle and so freshness of the data base suffers .",
    "the problem of minimization of the cost criterion ( 2 ) is not trivial . to solve this problem",
    ", we will use so called direct approach . to this end",
    ", we will calculate the stationary distribution of the system state under an arbitrary fixed set of thresholds @xmath122 it will allow us to calculate the main performance measures of the system and the value @xmath123 of the cost criterion as a function @xmath124 problem of finding the optimal set @xmath125 is then easy solved on computer , e.g. , by enumeration .",
    "let some set of thresholds @xmath126 be fixed .",
    "we are interested in the stationary distribution of the process @xmath127 where @xmath128 is the number of web pages in the system at the epoch @xmath129@xmath130 this process is non - markovian . to investigate this process , we will consider the following multi - dimensional continuous time markov chain @xmath131 where @xmath132 is the state of the directing process of arrival process at epoch @xmath129 @xmath133 @xmath134 is the state of the process which directs a service at epoch @xmath129 @xmath135 @xmath136 is the state of the process , which directs a obsolescence of the @xmath90th web page in a queue at epoch @xmath129 @xmath137    we assume that the web pages in the buffer are numerated in order of their arrival into the system .",
    "if a batch of web pages arrives to the system , the accepted web pages are numerated in a uniform random manner .",
    "when a web page is picked up to the service or is deleted from the queue because its admissible waiting time expires , the rest of web pages is immediately enumerated correspondingly .",
    "denote @xmath138 @xmath139 @xmath140@xmath141 because the state space of the the markov chain @xmath142 is finite and due to assumption about irreducibility of the processes defining arrival , service and obsolescence processes , limits ( 3 ) exist .",
    "enumerate the states of the markov chain @xmath142 in the lexicographic order and form the probability row vectors @xmath143 of probabilities corresponding to the state @xmath90 of the first component of the process @xmath144 .",
    "denote also @xmath145 .",
    "let @xmath146 be the infinitesimal generator of the markov chain @xmath147 and @xmath148 be the block of the generator @xmath146 consisting of enumerated in lexicographic order intensities of transition of the markov chain @xmath142 from the states with the value @xmath90 of the component @xmath128 to the states with the value @xmath149 of this component , @xmath150 dimension of the block @xmath148 is defined by @xmath151 where @xmath152@xmath153    _ lemma .",
    "_  non - zero blocks @xmath148 of the infinitesimal generator @xmath146 of the markov chain @xmath154 are defined by @xmath155 @xmath156 @xmath157 @xmath158 @xmath159 here    @xmath160 @xmath161 and the value @xmath162 which corresponds to the number of active robots when @xmath90 web pages stay in the system , is calculated by @xmath163 where the value @xmath164 is defined by relations @xmath165    proof of the lemma is implemented by analyzing the probabilities of transition of the multi - dimensional markov chain @xmath142 under the fixed set of thresholds @xmath126 during an interval of infinitesimal length .",
    "it is rather transparent and is omitted .",
    "it is well - known that the vector @xmath166 of stationary probabilities satisfies the following equilibrium equations @xmath167    dimension of the vector @xmath166 is equal to @xmath168 it can be rather high . for instance , if @xmath169 this dimension is equal to @xmath170 for @xmath171 this equals to 2046 .",
    "so , direct solution of equations ( 4 ) by `` brute force '' can be very time and computer memory demanding .",
    "effective and numerically stable algorithm for computing the blocks @xmath143 of the vector @xmath166 , which exploits a structure of generator @xmath146 and is presented in @xcite , consists of the following steps :    * compute the matrices @xmath172 from the backward recursion @xmath173 @xmath174 * compute the matrices @xmath175 from the backward recursions @xmath176 @xmath177",
    "* compute the matrices @xmath178 by recursion @xmath179 * compute the vector @xmath180 as the unique solution to the following system of linear algebraic equations : @xmath181 * compute the vectors @xmath182 by formula @xmath183    thus , the problem of computing the stationary distribution @xmath184 of the considered queueing system under the arbitrary fixed set of the thresholds @xmath126 can be considered solved .",
    "as the main performance measures of the system we consider the values @xmath185 which appear in cost criterion ( 2 )",
    ".    calculation of the values @xmath186 is the easiest .",
    "_ theorem 1 .",
    "_ probability @xmath118 of the system starvation ( idle state of the indexing machine ) is calculated by @xmath187 average number @xmath120 of active robots is calculated by @xmath188 where probability @xmath189 that @xmath190 robots are active at an arbitrary epoch is computed by @xmath191 _ theorem 2 .",
    "_ probability @xmath116 of an arbitrary web page loss due to the buffer overflow is calculated by @xmath192 where the average intensity @xmath115 of the input flow is computed by @xmath193 proof .",
    "it follows from the formula of total probability that @xmath194 where @xmath195 is probability that there are @xmath90 web pages in the system at an epoch of arrival of a batch consisting of @xmath31 web pages , @xmath196 is probability that arbitrary web page arrives in the batch consisting of @xmath31 web pages , @xmath197 is probability that the arbitrary web page will be accepted into the system conditional that it arrives in the batch consisting of @xmath31 web pages and @xmath90 web pages present in the system at the epoch of arrival .",
    "it can be shown that the listed probabilities are calculated by @xmath198 @xmath199 @xmath200 @xmath201@xmath202 by substituting expressions ( 11 ) - ( 13 ) into formula ( 10 ) we get formulae ( 8) , ( 9 ) .",
    "the theorem is proven .",
    "_ theorem 3 .",
    "_ probability @xmath117 of an arbitrary web page obsolescence is calculated by @xmath203 probability @xmath204 of an arbitrary web page successful service in the system is calculated by @xmath205 the statement of the theorem is clear because the right hand side of ( 14 ) represents the ratio of the obsolescence rate and arrival rate into the system .",
    "the right hand side of ( 15 ) represents the ratio of the rate of successfully served in the system web pages and arrival rate into the system .",
    "let @xmath206 @xmath207 and @xmath208 be distribution functions of sojourn time of an arbitrary web page in the system under study , an arbitrary web page , which will get successful service , and arbitrary web page , which will be deleted from the system due to its obsolescence , and @xmath209 and @xmath210 be the corresponding laplace - stieltjes transforms : @xmath211    _ theorem 4 .",
    "_ laplace - stieltjes transforms @xmath209 and @xmath210 are calculated by @xmath212 @xmath213 @xmath214 where @xmath215 the column vectors @xmath216 are computed by @xmath217 @xmath218 the vectors @xmath219 are computed recursively by @xmath220 @xmath221 @xmath222@xmath223 where @xmath224 @xmath225 is kronecker delta : @xmath226    proof . to prove the theorem",
    ", we use the method of collective marks ( method of catastrophes ) .",
    "we interpret the parameter @xmath227 as an intensity of some imaginary stationary poisson flow of catastrophes .",
    "so , @xmath228 has the meaning of probability that no catastrophe arrives during the sojourn time of an arbitrary web page , @xmath229 is probability that no catastrophe arrives during the sojourn time of an arbitrary web page conditional that this web page will get service successfully , and @xmath230 is probability that no catastrophe arrives during the sojourn time of an arbitrary web page conditional that this web page will be deleted from the system due to its obsolescence .",
    "so , formula ( 16 ) evidently stems from the formula of total probability .",
    "it is obvious that sojourn time of the arbitrary ( tagged ) web page does not depend on the arrival process after the tagged web page arrival epoch .",
    "thus , in analysis we can ignore transitions of the directing process of the arrival process after the epoch of the tagged web page arrival .",
    "formulae ( 17 ) and ( 18 ) also follow from the formula of total probability . here",
    "row vector @xmath231 defines probability of an arbitrary web page arrival at the moment when there are @xmath90 web pages in the system in a batch of size @xmath31 and probability distribution of the directing processes of service and obsolescence at this moment .",
    "column vector @xmath232 defines probability of no catastrophe arrival during the conditional sojourn time of a tagged web page who arrives at the moment when there are @xmath90 web pages in the system in a batch of size @xmath31 under the fixed value of the directing processes of service and obsolescence at the arrival epoch . for @xmath233 condition",
    "is that the tagged web page will get service successfully . for @xmath234 condition",
    "is that the tagged web page will be deleted from the system due to its obsolescence .",
    "relation ( 19 ) is based again on the formula of total probability .",
    "the matrix @xmath235 defines probability distribution of installation , upon the arrival epoch of a tagged web page , of the initial states of the directing process of service ( if @xmath236 , i.e. , the system was empty at the arrival epoch ) and of the directing processes of obsolescence of the web pages , which arrive at the same batch as the tagged web page and are placed in a buffer before the tagged web page , and of this web page . recall that we assume that if the batch consists of @xmath31 web pages then the tagged web page will be the @xmath41th in the batch , @xmath237 with probability @xmath238    the vector @xmath239 defines probability of no catastrophe arrival during the conditional sojourn time of a tagged web page who sees @xmath90 web pages in the system before him in a queue and the corresponding states of the directing processes of service and obsolescence after the moment of arrival .",
    "recurrent formulae ( 20 ) for the vector laplace - stieltjes transforms @xmath240 is clear if we take into account that : ( i ) @xmath241 is the vector laplace - stieltjes transform of the service time distribution , ( ii ) @xmath242 defines probability that no catastrophe arrives during the time interval between the epoch of a tagged web page arrival , at which the number of web pages in a queue before the tagged web page is equal to @xmath90 , and the epoch when the number of web pages in a queue before the tagged web page is decreased to @xmath243 , ( iii ) the matrix @xmath244 defines transition of the directing processes of service and obsolescence of the web pages at the epoch of decreasing .",
    "formulae ( 21 ) for the vector laplace - stieltjes transforms @xmath245 takes into account reasonings ( ii),(iii ) presented above as well as consideration that no catastrophe should arrive until the obsolescence moment of a tagged web page and that @xmath246 web pages can depart from the system until the obsolescence moment .",
    "the theorem is proven .",
    "_ corollary 1 .",
    "_ average sojourn time ( response time ) @xmath247 of an arbitrary web page , average sojourn time @xmath248 of an arbitrary web page who will get successful service , and average sojourn time @xmath249 of an arbitrary web page who will be deleted from the system due to its obsolescence are computed by @xmath250 @xmath251 @xmath252 where the column vectors @xmath253 are computed by @xmath254 the vectors @xmath255 are computed by @xmath256 , i = \\overline{1,k-1},\\ ] ] @xmath257 @xmath258 @xmath259 @xmath260({\\mathcal a}_{i - l})^{-1}(i_{m r^{i - l-1 } } \\otimes \\gamma_0){\\bf e}_m , \\;\\ ] ] @xmath261 proof of corollary evidently follows from the well - known expression for the mean value of a random variable via the derivative of the laplace - stieltjes transform of its distribution function .",
    "note that expressions for higher order moments and variance on sojourn time distribution can be also easily derived based on equations ( 16)-(18 ) .",
    "consider the special case when web pages arrive not in batches , but one - by - one .",
    "it means that @xmath262 in this case the generator @xmath146 of the markov chain @xmath142 is the three block diagonal matrix which in turn means that this chain is a finite space quasi - birth - and - death - process .",
    "thus , in this case the algorithm for solving equilibrium equations ( 4 ) for the vector @xmath166 of stationary probabilities and formulae for some performance measures simplify .",
    "the algorithm has the form    * compute the matrices @xmath172 from the backward recursion @xmath263^{-1}q_{i+1,i},\\;i = k-2,k-3,\\dots,0,\\ ] ] with the terminal condition @xmath264 * compute the matrices @xmath265 by recursion @xmath266^{-1},\\,i=\\overline{1,k}.\\ ] ] * compute the vector @xmath180 as the unique solution to the following system of linear algebraic equations : @xmath267 * compute the vectors @xmath182 by formula @xmath183    formula for loss probability @xmath116 is given by @xmath268 where @xmath269 laplace - stieltjes transforms @xmath270 and @xmath210 are computed by @xmath271 @xmath272 average sojourn times @xmath248 and @xmath249 are computed by @xmath273 @xmath274",
    "to demonstrate feasibility of the developed algorithms for calculating the stationary state distribution of the system under the fixed parameters of the control strategy and calculating the optimal set of these parameters , let us consider numerical examples .",
    "first we suppose that the system can have any number of active robots between one and four at any time moment ( @xmath275 ) and the buffer capacity is equal to @xmath276 ( @xmath111 ) .",
    "we assume that the arrival process is formed according to model  4 from section  2 .",
    "namely , when @xmath277 robots are activated the @xmath3-input is described by the matrices @xmath278 , @xmath279 , @xmath280 , given by      the intensities @xmath282 of the @xmath3 when @xmath277 robots are active , @xmath283 are computed by @xmath284 the coefficients of correlation @xmath285 and the intensities of batches arrival @xmath286 are the following : @xmath287 , @xmath288 , @xmath289 , @xmath290 , @xmath291 , @xmath292 , @xmath293 , @xmath294 .",
    "let the cost coefficients be fixed by @xmath299 , @xmath300 , @xmath301 , @xmath302 , @xmath303 we have chosen the cost coefficients in this way to obtain commensurable optimal values in the optimal solution and non - trivial optimal policy .",
    "note that in this example we fixed the cost coefficients based on some heuristic reasonings or common sense .",
    "in general , the right choice of the cost coefficients is the important and difficult task .",
    "it requires good knowledge of the real world system , which is described by the mathematical model under study , and clear understanding what is the most undesirable for the concrete system ( loss of the delivered web pages , obsolescence of a page , starvation of the system , long waiting in the queue , keeping to many robots be active , etc ) , what is less important .",
    "so , the help of experts is required for the right choice of the cost coefficients .",
    "if such a choice does not seem be possible , some alternative formulation of optimization problem , e.g. , multi - criteria problem or problem with constraints may be considered . in the latter approach",
    "the cost coefficients are lagrange multipliers in the constrained problem and can be found from the dual problem formulation .",
    "let us find the optimal strategy of control by the system under the fixed above values of the system parameters and the cost coefficients .",
    "the thresholds @xmath103 in the problem formulation are fixed such as @xmath304 i.e. , the thresholds can not coincide and the use of all @xmath1 modes of operation ( the number of the mode is characterized by the number of the active robots ) is mandatory .",
    "it is intuitively clear that actually it can happen that the optimal strategy does not need to use some modes of operation at all .",
    "so , to find the optimal strategy , we have to compare the values of the optimal values of the cost criterion when all @xmath1 modes are used , when @xmath305 modes are used while 1 mode is ignored , @xmath306 , two modes are used while @xmath307 modes are ignored , when only one mode is used ( i.e. , the number of the active robots is not varied ) .",
    "let us denote by @xmath308 the value of the cost criterion when exactly @xmath277 robots are always active , @xmath309 the values @xmath308 , @xmath310 are given by @xmath311 , @xmath312 , @xmath313 , @xmath314 .",
    "so , if there is no possibility to control the number of robots , and one has to decide how many robots should permanently work , the best choice is to have permanently three active robots .",
    "next we consider the threshold type strategies for controlling the number of active robots .",
    "table 1 contains the optimal value of the cost criterion for various combinations of the used modes and the optimal threshold strategy for each such a combination ."
  ],
  "abstract_text": [
    "<S> a typical web search engine consists of three principal parts : crawling engine , indexing engine , and searching engine . the present work aims to optimize the performance of the crawling engine . </S>",
    "<S> the crawling engine finds new web pages and updates web pages existing in the database of the web search engine . </S>",
    "<S> the crawling engine has several robots collecting information from the internet . </S>",
    "<S> we first calculate various performance measures of the system ( e.g. , probability of arbitrary page loss due to the buffer overflow , probability of starvation of the system , the average time waiting in the buffer ) . </S>",
    "<S> intuitively , we would like to avoid system starvation and at the same time to minimize the information loss . </S>",
    "<S> we formulate the problem as a multi - criteria optimization problem and attributing a weight to each criterion we solve it in the class of threshold policies . </S>",
    "<S> we consider a very general web page arrival process modeled by batch marked markov arrival process and a very general service time modeled by phase - type distribution . </S>",
    "<S> the model has been applied to the performance evaluation and optimization of the crawler designed by inria maestro team in the framework of the riam inria - canon research project . </S>"
  ]
}
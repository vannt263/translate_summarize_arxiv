{
  "article_text": [
    "the convection - diffusion model can be expressed mathematically , which is a semi linear parabolic partial differential equation .",
    "specially , we consider an initial value system of _ convection - diffusion _ equation in @xmath3 dimension as : @xmath4,\\ ] ] together with the dirichlet boundary conditions : @xmath5,\\ ] ] or neumann boundary conditions : @xmath6.\\ ] ] where @xmath7 is the boundary of computational domain @xmath8 \\times [ c , d]\\subset { \\mathbb{r}}^2 $ ] , @xmath9 $ ] is time interval , and @xmath10 @xmath11 and @xmath12 are known smooth functions , and @xmath13 denote heat or vorticity .",
    "the parameters : @xmath14 and @xmath15 are constant convective velocities while the constants @xmath16 are diffusion coefficients in the direction of @xmath17 and @xmath18 , respectively .",
    "the convection - diffusion models have remarkable applications in various branches of science and engineering , for instance , fluid motion , heat transfer , astrophysics , oceanography , meteorology , semiconductors , hydraulics , pollutant and sediment transport , and chemical engineering . specially , in computational hydraulics and fluid dynamics to model convection - diffusion of quantities such as mass , heat , energy , vorticity @xcite .",
    "many researchers have paid their attention to develop some schemes which could produce accurate , stable and efficient solutions behavior of convection - diffusion problems , see @xcite and the references therein .    in the last years",
    ", the convection - diffusion equation has been solved numerically using various techniques : namely- finite element method @xcite , lattice boltzmann method @xcite , finite - difference scheme and higher - order compact finite difference schemes @xcite . a nine - point high - order compact implicit scheme proposed by noye and tan",
    "@xcite is third - order accurate in space and second - order accurate in time , and has a large zone of stability .",
    "an extension of higher order compact difference techniques for steady - state @xcite to the time - dependent problems have been presented by spotz and carey @xcite , are fourth - order accurate in space and second or lower order accurate in time but conditionally stable .",
    "the fourth - order compact finite difference unconditionally stable scheme due to dehghan and mohebbi @xcite have the accuracy of order @xmath19 .",
    "a family of unconditionally stable finite difference schemes presented in @xcite have the accuracy of order @xmath20 .",
    "the schemes presented in @xcite are based on high - order compact scheme and weighted time discretization , are second or lower order accurate in time and fourth - order accurate in space .",
    "the high - order alternating direction implicit ( adi ) scheme with accuracy of order @xmath21 proposed by karaa and zhang @xcite , is unconditionally stable . a high - order unconditionally stable exponential scheme for unsteady @xmath22d convection - diffusion equation by tian and yua @xcite have the accuracy of order @xmath21 .",
    "a rational high - order compact alternating direction implicit ( adi ) method have been developed for solving @xmath3d unsteady convection - diffusion problems @xcite is unconditionally stable and have the accuracy of order @xmath21 . a unconditionally stable fourth - order compact finite difference approximation for discretizing spatial derivatives and the cubic @xmath23- spline collocation method in time , proposed by mohebbi and dehghan @xcite ,",
    "have the accuracy of order @xmath19 .",
    "an unconditionally stable , semi - discrete based on pade approximation , by ding and zhang @xcite , is fourth - order accurate in space and in time both .",
    "the most of schemes are based on the two - level finite difference approximations with dirichlet conditions , and very few schemes have been developed to solve the convection - diffusion equation with neumann s boundary conditions , see @xcite and references therein . the fourth - order compact finite difference scheme by cao et al .",
    "@xcite is of @xmath24th - order accurate in time and 4th - order in the space .",
    "a high - order alternating direction implicit scheme based on fourth - order pade approximation developed by you @xcite is unconditionally stable with the accuracy of order @xmath21 .",
    "the differential quadrature method ( dqm ) dates back to bellman et al .",
    "@xcite . after the seminal paper of bellman , various test functions have been proposed , among others , spline functions , sinc function , lagrange interpolation polynomials , radial base functions , modified cubic b - splines , see @xcite , etc .",
    "shu and richards @xcite have generalized approach of dqm for numerical simulation of incompressible navier - stokes equation .",
    "the main goal of this paper is to find numerical solution of initial value system of @xmath3d _ convection - diffusion _ equation with both kinds of boundary conditions ( dirichlet boundary conditions and neumann boundary conditions ) , approximated by dqm with new sets of modified cubic b - splines ( modified extended cubic b - splines , modified exponential cubic b - splines , modified trigonometric cubic b - splines ) as base functions , and so called modified trigonometric cubic - b - spline differential quadrature method ( mtb - dqm ) , modified exponential cubic - b - spline differential quadrature method ( mexp - dqm ) and third modified extended cubic - b - spline differential quadrature method ( mecdq ) .",
    "these methods are used to transform the convection diffusion problem into a system of first order odes , in time .",
    "the resulting system of odes can be solved by using various time integration algorithm , among them , we prefer ssp - rk54 scheme @xcite due to its reduce storage space , which results in less accumulation errors .",
    "the accuracy and adaptability of the method is illustrated by three test problems of two dimensional convection diffusion equations .",
    "the rest of the paper is organized into five more sections , which follow this introduction . specifically , section [ sec - metho - decr - tem ] deals with the description of the methods : namely- mtb - dqm , mexp - dqm and mecdq .",
    "section [ sec - impli ] is devoted to the procedure for the implementation of describe above these methods for the system together with the boundary conditions as in and .",
    "section [ sec - stab ] deals with the stability analysis of the methods .",
    "section [ sec - num ] deals with the main goal of the paper is the numerical computation of three test problems .",
    "finally , section [ sec - conclu ] concludes the results .",
    "the differential quadrature method is an approximation to derivatives of a function is the weighted sum of the functional values at certain nodes @xcite .",
    "the weighting coefficients of the derivatives is depend only on grids @xcite . this is the reason for taking the partitions @xmath25 $ ] of the problem domain @xmath26 distributed uniformly as follows : @xmath27 = \\ { ( x_i , y_j)\\in \\omega : h_x = x_{i+1}-x_{i } , h_y = y_{j+1}-y_{j } , i\\in \\delta_x , j\\in \\delta_y\\},\\ ] ] where @xmath28 , and @xmath29 are the discretization steps in both @xmath17 and @xmath18 directions , respectively .",
    "that is , a uniform partition in each @xmath30-direction with the following grid points : @xmath31 @xmath32 let @xmath33 be the generic grid point and @xmath34    the @xmath35-th order derivative of @xmath36 , for @xmath37 , with respect to @xmath30 at @xmath33 for @xmath38 is approximated as follows : @xmath39 where the coefficients @xmath40 and @xmath41 , the time dependent unknown quantities , are termed as the weighting functions of the @xmath35th - order derivative , to be computed using various type of base functions .      the trigonometric cubic b - spline function",
    "@xmath42 at node @xmath43 in @xmath17 direction , read as @xcite : @xmath44 where @xmath45 , @xmath46 .",
    "then the set @xmath47 forms a base over the interval @xmath48 $ ] . setting @xmath49 the values of @xmath50 and its first and second derivatives in the grid point @xmath51 , denoted by @xmath52 , @xmath53 and @xmath54 , respectively , read : @xmath55 the modified trigonometric",
    "cubic b - splines base functions are defined as follows @xcite :    @xmath56    now , the set @xmath57 is the base over @xmath48 $ ] .",
    "the procedure to define modified trigonometric cubic b - splines in @xmath18 direction , is followed analogously .      in order to evaluate the weighting coefficients @xmath60 of first order partial derivative in eq .",
    ", we use the modified trigonometric cubic b - spline @xmath61 , @xmath62 in dq method as base functions . setting @xmath63 and @xmath64 . using mtb - dqm , the approximate values of first order derivative",
    "is obtained as follows : @xmath65 setting @xmath66 $ ] , @xmath67 $ ] , and @xmath68 $ ] . eq . reduced to compact matrix form : @xmath69 the coefficient matrix @xmath70 of order @xmath71 can be read from and as : @xmath72\\ ] ] and the columns of the matrix @xmath73 read as : @xmath74 = \\left [ \\begin{array}{c }      2 a_4\\\\      a_3-a_4\\\\      0 \\\\    \\vdots   \\\\            \\\\    0      \\\\    0",
    "\\\\ \\end{array } \\right ] , \\im'[2 ] = \\left[\\begin{array}{c }       a_4 \\\\      $ 0 $",
    "\\\\       a_3   \\\\       $ 0 $",
    "\\\\     \\vdots   \\\\             \\\\      $ 0 $",
    "\\\\ \\end{array}\\right ] , \\ldots , \\im'[n_x-1 ] =   \\left [ \\begin{array}{c }       $ 0 $      \\\\",
    "\\vdots   \\\\               \\\\       $ 0 $",
    "\\\\       a_4   \\\\       $ 0 $",
    "\\\\        a_3   \\\\ \\end{array } \\right ] , \\mbox { and } \\im'[n_x ] = \\left [ \\begin{array}{c }      $ 0 $ \\\\          \\\\",
    "\\vdots   \\\\          \\\\ $ 0 $      \\\\    2a_4",
    "\\\\   a_3- a_4   \\\\ \\end{array } \\right].\\ ] ]      the exponential cubic b - splines function @xmath75 at node @xmath43 in @xmath17 direction , reads @xcite : @xmath76 where @xmath77 the set @xmath78 forms a base over @xmath48 $ ] . setting the values of @xmath79 and its first and second derivatives at @xmath51 by @xmath80 , @xmath81 and @xmath82 , respectively . then @xmath83 the modified exponential cubic b - splines base functions",
    "are read as :    @xmath84    the set @xmath85 is a base over @xmath48 $ ] . the procedure to define modified trigonometric cubic b - splines in @xmath18 direction ,",
    "is followed analogously .      setting @xmath86 and @xmath87 for all @xmath88 .",
    "using mexp - dqm , the approximate values of the first - order derivative is given by @xmath89 setting @xmath90 $ ] , @xmath67 $ ] , and @xmath91 $ ] , then eq . can be reduced to compact matrix form : @xmath92 let @xmath93 and @xmath94 . using eqns . and , the coefficient matrix @xmath95 of order @xmath71 , read as : @xmath96\\ ] ] and the columns of the matrix @xmath97 read : @xmath98 = \\left [ \\begin{array}{c }      \\omega / h_x\\\\      -\\omega / h_x\\\\      0 \\\\    \\vdots   \\\\            \\\\    0      \\\\    0      \\\\ \\end{array } \\right ] ,",
    "\\beth'[2 ] = \\left[\\begin{array}{c }      \\omega/2h_x \\\\      $ 0 $     \\\\      -\\omega/2h_x   \\\\",
    "$ 0 $    \\\\     \\vdots   \\\\             \\\\      $ 0 $",
    "\\\\ \\end{array}\\right ] , \\ldots , \\beth'[n_x-1 ] =   \\left [ \\begin{array}{c }       $ 0 $      \\\\       \\vdots   \\\\               \\\\       $ 0 $      \\\\      \\omega/2h_x   \\\\       $ 0 $      \\\\",
    "\\\\ \\end{array } \\right ] , \\mbox { and } \\beth'[n_x ] = \\left [ \\begin{array}{c }      $ 0 $ \\\\",
    "\\\\ \\vdots   \\\\          \\\\ $ 0 $      \\\\   \\omega / h_x \\\\ -\\omega / h_x    \\\\ \\end{array } \\right].\\ ] ]      the extended cubic b - splines function @xmath99 , in the @xmath17 direction and at the knots , reads @xcite : @xmath100 where @xmath101 and @xmath102 , and @xmath103 is a free parameter @xcite .",
    "the set @xmath104 forms a base over @xmath48 $ ] .",
    "let @xmath105 and @xmath106 , then the values of @xmath107 and its first and second derivatives in the grid point @xmath51 , denoted by @xmath108 , @xmath109 and @xmath110 , respectively , read :    @xmath111    the modified extended cubic b - splines base functions are defined as follows @xcite :    @xmath112    the set @xmath113 is a base over @xmath48 $ ] .      setting @xmath114 and @xmath115 .",
    "using mecdq method , the approximate values of the first - order derivative is given by @xmath116 setting @xmath117 $ ] , @xmath67 $ ] , and @xmath118 $ ] .",
    "eq . can be re - written in compact matrix form as : @xmath119 using eqns . and",
    ", the matrix @xmath120 of order @xmath71 read as : @xmath121\\ ] ] and the columns of the matrix @xmath122 read : @xmath123 = \\left [ \\begin{array}{c }      -1/h_x\\\\      1/h_x\\\\      0 \\\\",
    "\\vdots   \\\\            \\\\    0",
    "\\\\    0      \\\\ \\end{array } \\right ] , \\phi'[2 ] = \\left[\\begin{array}{c }      -1/2h_x \\\\      $ 0 $     \\\\      1/2h_x   \\\\       $ 0 $",
    "\\\\     \\vdots   \\\\             \\\\      $ 0 $",
    "\\\\ \\end{array}\\right ] , \\ldots , \\phi'[n_x-1 ] =   \\left [ \\begin{array}{c }       $ 0 $      \\\\       \\vdots   \\\\               \\\\       $ 0 $      \\\\      -1/2h_x   \\\\       $ 0 $      \\\\",
    "1/2h_x    \\\\ \\end{array } \\right ] , \\mbox { and } \\phi'[n_x ] = \\left [ \\begin{array}{c }      $ 0 $ \\\\",
    "\\\\ \\vdots   \\\\          \\\\ $ 0 $      \\\\   -1/h_x \\\\ 1/h_x    \\\\",
    "\\end{array } \\right].\\ ] ]    using  thomas algorithm \" the system , and have been solved for the weighting coefficients @xmath124 , for all @xmath125 .    similarly , the weighting coefficients @xmath126 , in either case , can be computed by employing these modified cubic b - splines in the @xmath18 direction .    using @xmath127 and @xmath126 , the weighting coefficients , @xmath128 and @xmath129 ( for @xmath130 )",
    "can be computed using the shu s recursive formulae @xcite :    @xmath131    where @xmath35 denote @xmath35-th order spatial derivative . in particular",
    ", the weighting coefficients @xmath132 of order @xmath3 can be obtained by taking @xmath133 in .",
    "after computing the approximate values of first and second order spatial partial derivatives from one of the above three methods , one can re - write eq as follows :    @xmath134    in case of the dirichlet conditions , the solutions on boundaries can directly read from as : @xmath135.\\ ] ]    on the other hand , if the boundary conditions are neumann or mixed type , then the solutions at the boundary are obtained by using any above methods ( mtb - dqm , mexp - dqm or mecdq method ) on the boundary , which gives a system of two equations . on solving it we get the desired solution on the boundary as follows :    from eq . with @xmath136 and",
    "the neumann boundary conditions at @xmath137 and @xmath138 , we get    @xmath139    in terms of matrix system for @xmath140 , the above equation can be rewritten as @xmath141 \\left [ \\begin{array}{c } u_{1j } \\\\",
    "u_{n_x j } \\\\",
    "\\end{array } \\right ] = \\left [ \\begin{array}{c } s_j^a \\\\ s_j^b \\\\ \\end{array } \\right],\\ ] ] where @xmath142 and @xmath143 .",
    "on solving , for the boundary values @xmath144 and @xmath145 , we get @xmath146    analogously , for the neumann boundary conditions at @xmath147 and @xmath148 , the solutions for the boundary values @xmath149 and @xmath150 can be obtained as : @xmath151 where @xmath152 and @xmath153 .    after implementing the boundary values , eq can be written in compact matrix form as follows : @xmath154 where    1 .",
    "@xmath155 $ ] is the solution vector : + @xmath156 , and @xmath157 represents the initial solution vector .",
    "2 .   @xmath158 $ ] is the vector of order @xmath159 containing the boundary values , i.e. , + @xmath160 3 .",
    "@xmath161 be a square matrix of order @xmath162 given as @xmath163 where @xmath164 and @xmath165 @xmath166 are the block diagonal matrices of the weighting coefficients @xmath58 and @xmath167 , respectively as given below @xmath168 , \\mbox { and }     &   ~ b_r = \\left [      \\begin{array}{cccc }        m_r & o & \\ldots & o \\\\        o & m_r & \\ldots   & o \\\\        \\vdots & \\vdots & \\ddots & \\vdots \\\\        o & o & \\ldots   & m_r \\\\",
    "\\end{array }    \\right ] , \\end{array}\\ ] ] where @xmath169 and @xmath170 are the matrices of order @xmath171 , and the sub - matrix @xmath172 of the block diagonal matrix @xmath173 is given by @xmath174 .",
    "\\end{array}\\ ] ]    finally , we adopted ssp - rk54 scheme @xcite to solve the initial value system as : @xmath175 where @xmath176",
    "the stability of the method mtb - dqm for @xmath3d convection - diffusion equation depends on the stability of the initial value system of odes as defined in .",
    "noticed that whenever the system of odes is unstable , the proposed method for temporal discretization may not converge to the exact solution . moreover , being the exact solution can directly obtained by means of the eigenvalues method , the stability of depends on the eigenvalues of the coefficient matrix @xmath161 @xcite .",
    "in fact , the stability region is the set @xmath177 , where @xmath178 is the stability function and @xmath179 is the eigenvalue of the coefficient matrix @xmath161 . the stability region for ssp - rk54 scheme is depicted in ( * ? ? ?",
    "* fig.1 ) , from which one can clam that for the stability of the system it is sufficient that @xmath180 for each eigenvalue @xmath179 of the coefficient matrix b. hence , the real part of each eigenvalue is necessarily either zero or negative .",
    "it is seen that the eigenvalues of the matrices @xmath181 and @xmath173 @xmath182 have identical nature .",
    "therefore , it is sufficient to compute the eigenvalues , @xmath183 and @xmath184 , of the matrices @xmath185 and @xmath186 for different values of grid sizes @xmath187 . the eigenvalues @xmath183 and @xmath184 for @xmath188 has been depicted in figure [ eq - eignv ] .",
    "analogously , one can compute the eigenvalues @xmath183 and @xmath184 using mecdq method @xcite or mexp - dqm .",
    "it is seen that in either case , @xmath183 and @xmath184 have same nature as in figure [ eq - eignv ] .",
    "further , we can get from figure [ eq - eignv ] that each eigenvalue @xmath179 of the matrix @xmath161 as defined in eq .",
    "is real and negative .",
    "this confirms that the proposed methods produces stable solutions for two dimensional convection - diffusion equations .",
    "this section deals with the main goal , the numerical study of three test problems of the initial value system of convection - diffusion equations with both kinds of the boundary conditions has been done by adopting the methods mtb - dqm , mexp - dqm and mecdq method along with the integration ssp - rk54 scheme .",
    "the accuracy and the efficiency of the methods have been measured in terms of the discrete error norms : namely- average @xmath189 norm ( @xmath190-error norm ) and the maximum error ( @xmath191 error norm ) .",
    "[ ex1 ] consider the initial value system of @xmath3d convection - diffusion equation with @xmath192 , while values of @xmath193 for @xmath194 can be extracted from the exact solution @xmath195 where initial condition is a gaussian pulse with unit hight centered at @xmath196 .",
    "we have computed the numerical solution of problem [ ex1 ] for @xmath197 and different values of @xmath198 .    for @xmath199 ^ 2 $ ] : @xmath200 errors and the rate of convergence ( roc ) @xcite at @xmath201 for different values of @xmath202 ( @xmath203 )",
    "has been reported in table [ tab1.1 ] for @xmath204 .",
    "table [ tab1.1 ] confirms that the proposed solutions obtained by these methods are more accurate , and approaching towards exact solutions .",
    "the behavior of the approximate solution at time @xmath201 taking @xmath205 is depicted in figure [ ex1-fig1.1 ] for @xmath206 and in figure [ ex1-fig1.2 ] for @xmath207 .    for @xmath208 ^ 2 $ ] , time @xmath209 , and grid space step size @xmath210 : the @xmath190 and @xmath200 error norms in the proposed solutions",
    "have been compared with the errors in the solutions by various schemes in @xcite in table [ tab1.2 ] for @xmath211 and in table [ tab1.3 ] for @xmath212 .",
    "the initial solution and mtb - dqm solutions in @xmath213 ^ 2 $ ] with the parameter values @xmath214 have been depicted in figure [ ex1-fig1.3 ] , and similar behavior is seen from the other two methods .",
    "it is evident from the above reports that the proposed results are more accurate as compared to @xcite and approaching towards the exact solutions .",
    "l*8l + @xmath71 & & & & & + & @xmath200 @xmath215 & roc @xmath215 & & @xmath200 @xmath215 & roc @xmath215 & & @xmath200 @xmath215 & roc + 5 & 2.91e-03 & & & 2.91e-03 & & & 1.94e-03 & + 10&6.41e-04 & 2.18 & & 6.42e-04&2.181 & & 4.93e-04 & 1.98 + 20&6.50e-05 & 3.30 & & 6.51e-05&3.303 & & 6.05e-05 & 3.03 + 40&7.19e-06 & 3.18 & & 7.18e-06&3.180 & & 6.91e-06 & 3.13 + 80@xmath216 & 7.22e-07 @xmath217 & 3.31 & @xmath218 & 7.00e-07@xmath217&3.358 & @xmath218 & 6.99e-07 @xmath219&3.31 +   + 5 & 4.93e-04 & & & 4.97e-04 & & & 3.20e-04 & + 10&4.86e-05 & 3.34 & & 4.87e-05 & 3.35 & & 4.39e-05&2.87 + 20&4.70e-06 & 3.37 & & 4.70e-06 & 3.37 & & 4.35e-06&3.34 + 40&4.51e-07 & 3.38 & & 4.46e-07 & 3.40 & & 4.50e-07&3.27 + 80@xmath216&4.58e-08@xmath216 & 3.30 @xmath216 & & 3.49e-08 @xmath216&3.67 & & 4.37e-08@xmath216 & 3.36 +    * 3l schemes & @xmath190 & @xmath200 + p - r - adi @xcite & 3.109e-04 @xmath220 @xmath220 & 7.778e-03 + noye @xmath221 tang @xcite & 1.971e-05 & 6.509e-04 + kalila",
    "@xcite & 1.597e-05 & 4.447e-04 + kara @xmath221 zhang adi @xcite & 9.218e-06 & 2.500e-04 + tang @xmath221 ge adi@xcite & 9.663e-06 & 2.664e-04 + dehghan @xmath221 mohebbi @xcite@xmath220 @xmath220 & 9.431e-06 & 2.477e-04 + mtb - dqm & 8.026e-12 & 4.327e-08 + mexp - dqm(p=0.0001 ) & 7.030e-12 & 4.154e-08 + mecdq ( @xmath222 ) & 4.504e-12 & 3.343e-08 + mcb - dqm ( @xmath223 ) & 8.269e-12 & 4.388e-08 +    * 3l schemes & @xmath190 & @xmath200 + noye @xmath221 tang @xcite & 1.430e-05 & 4.840e-04 + kalila et al.@xcite & 1.590e-05 & 4.480e-04 + dehghan @xmath221 mohebbi @xcite @xmath220 @xmath220 & 9.480e-06 @xmath220 @xmath220 @xmath220 & 2.469e-04 + mtb - dqm & 8.900e-12 & 4.501e-08 + mexp - dqm(p=0.0001 ) & 9.147e-12 & 4.315e-08 + mecdq ( @xmath224 ) & 4.646e-12 & 3.852e-08 + mcb - dqm ( @xmath223 ) & 9.147e-12 & 4.561e-08 +    [ ex2 ] consider the initial value system of @xmath3d convection - diffusion equation with @xmath225 ^ 2 $ ] with @xmath226 , where @xmath227 and the neumann boundary condition @xmath228,\\]]or the dirichlet s conditions can be extracted from the exact solution @xcite : @xmath229    the computation by the proposed methods has been done for different values of @xmath230 and @xmath231 .    for @xmath232 , we take @xmath233 for the solutions at @xmath234 .",
    "the rate of convergence and @xmath190 error norms in the proposed solutions has been compared with that of due to fourth - order compact finite difference scheme @xcite for @xmath235 , in table [ tab2.1 ] .",
    "it is found that the proposed solutions from either method are more accurate in comparison to @xcite , and are in good agreement with the exact solutions . for @xmath236",
    ", we take @xmath237 for the solution at @xmath234 . in table",
    "[ tab2.2 ] , the @xmath190 and @xmath200 error norms are compared with that obtained by fourth - order compact finite difference scheme @xcite for @xmath236 , and @xmath238 .",
    "rate of convergence have been reported in table [ tab2.3 ] . from tables",
    "[ tab2.2 ] and [ tab2.3 ] , we found that the proposed solutions are more accurate as compared to the results in @xcite , while the rate of convergence is linear .",
    "the behavior of solutions is depicted in figure [ ex2-fig2.2 ] and [ ex2-fig2.3 ] with @xmath239 for @xmath240 and @xmath241 , respectively .",
    "for the same parameter , mentioned above , the numerical solution is obtained by using neumann conditions and reported in table [ tab2.4 ] .",
    "the obtained results are in good agreement with the exact solutions , the rate of convergence for @xmath242 is quadratic for each method .    * 2lclcllclcllclcllc + & & & & & & & + @xmath243 & @xmath242 & roc & @xmath190 & roc & & @xmath242 & roc & @xmath190 & roc & & @xmath242 & roc & @xmath190 & roc & & @xmath190 & roc + 0.2 & 4.231e-06 & & 4.969e-10 & & & 1.714e-05 & & 3.584e-09 & & & 4.231e-06 & & 4.999e-10 & & & & + 0.1 & 5.155e-07 & 3.0 & 2.472e-11 & 4.3 & & 5.168e-07 & 5.1 & 2.473e-11 & 7.2 & & 5.153e-07 & 3.0 & 2.478e-11 & 4.3 & & 2.289e-10 & + 0.05 & 5.108e-08 & 3.3 & 9.041e-13 & 4.8 & & 5.105e-08 & 3.3 & 9.044e-13 & 4.8 & & 5.107e-08 & 3.3 & 9.049e-13 & 4.8&&1.621e-11 & 3.82 + 0.025 & 1.147e-08 & 2.2 & 1.922e-14 & 5.6 & & 1.147e-08 & 2.2 & 1.922e-14 & 5.6 & & 1.147e08 & 2.4 & 1.923e-14 & 5.6&&8.652e-13 & 4.23 +   + 0.2 & 7.4031e-06 & & 1.4907e-09 & & & 3.5634e-05 & & 1.5314e-08 & & & 2.0585e-06 & & 6.7290e-11 & & & & + 0.1 & 1.1460e-06 & 2.7 & 1.3103e-10 & 3.5 & & 1.1421e-06 & 5.0 & 1.3148e-10 & 6.9 & & 1.5919e-07 & 3.7 & 1.1624e-12 & 5.9 & & 2.749e-09 & + 0.05 & 1.4578e-07 & 3.0 & 7.5377e-12 & 4.1 & & 1.4582e-07 & 3.0 & 7.5396e-12 & 4.1 & & 1.9012e-08 & 3.1 & 5.4939e-14 & 4.4 & & 2.394e-10 & 3.52 + 0.025 & 1.3902e-08 & 3.4 & 2.7129e-13 & 4.8 & & 1.3904e-08 & 3.4 & 2.7132e-13 & 4.8 & & 6.2220e-09 & 1.6 & 9.0456e-15 & 2.6 & & 1.658e-11 & 3.85 +    * 6l*6l*6l & & & & & & & + @xmath243 & @xmath200 & & @xmath190 & & @xmath200 & & @xmath190 & & @xmath200 & & @xmath190 & & @xmath200 & & @xmath190 + 0.04 @xmath215 & 4.1718e-03@xmath215 & & 1.7833e-03@xmath215 & & 1.7475e-03@xmath215 & & 7.9168e-04 & & 1.2939e-03@xmath215 & & 3.6957e-04 & & 1.1826e-01 @xmath215 & & 4.9331e-03 + 0.02 & 5.2095e-04 & & 6.8410e-05 & & 5.2097e-04 & & 6.8445e-05 & & 6.3735e-04 & & 6.8622e-05 & & 1.5310e-02 & & 4.1351e-04 + 0.01 & 3.2496e-04 & & 2.1508e-05 & & 3.2484e-04 & & 2.1493e-05 & & 2.5394e-04 & & 1.8260e-05 & & 9.4696e-04 & & 2.8405e-05 +    * 5l*5l*5l & + & & & & & + @xmath243 & @xmath242 & roc & @xmath190 & roc & & @xmath242 & roc & @xmath190 & roc & & @xmath242 & roc & @xmath190 & roc + 0.1 & 2.6263e-02 & & 3.6277e-02 & & & 2.6280e-02 & & 3.6670e-02 & & & 2.4464e-02 & & 4.0175e-02 & + 0.05 & 6.8144e-03 & 1.9 & 4.1447e-03 & 3.1 & & 6.8144e-03 & 1.9 & 4.1339e-03 & 3.1 & & 3.3580e-03 & 2.9 & 1.6264e-03 & 4.6 + 0.025 & 1.1634e-03 & 2.6 & 2.7780e-04 & 3.9 & & 1.0719e-03 & 2.7 & 1.9697e-04 & 4.4 & & 8.1776e-04 & 2.0 & 1.0090e-04 & 4.0 + & + & & & & & + 0.01 & 5.0998e-04 & & 3.5191e-03 & & & 5.0738e-04 & & 1.0116e-05 & & & 7.4180e-04 & & 2.5558e-05 & + 0.05 & 1.8776e-04 & 1.4 & 1.8193e-03 & 1.0 & & 1.8776e-04 & 1.4 & 2.9979e-06 & 1.8 & & 2.0972e-04 & 1.8 & 5.1381e-06 & 2.3 + 0.025 & 9.9342e-05 & 0.9 & 9.1372e-04 & 1.0 & & 9.9342e-05 & 0.9 & 7.9462e-07 & 1.9 & & 9.5677e-05 & 1.1 & 8.1188e-07 & 2.7 +    l*4c*5c*5c & + & & & & & + @xmath243 & @xmath242 & roc & @xmath190 & roc & & @xmath242 & roc & @xmath190 & roc & & @xmath242 & roc & @xmath190 & roc + 0.05 & 1.0176e-02 & & 6.7504e-03 & & & 1.0177e-02 & & 6.7513e-03 & & & 9.1549e-03 & & 5.7412e-03 & + 0.025 & 2.2164e-03 & 2.2 & 1.0428e-03 & 2.7 & & 2.2165e-03 & 2.2 & 1.0429e-03 & 2.7 & & 1.9834e-03 & 2.2 & 8.7214e-04 & 2.7 + 0.0125 & 2.9460e-04 & 2.9 & 7.2888e-05 & 3.8 & & 2.9460e-04 & 2.9 & 7.2889e-05 & 3.8 & & 2.5565e-04&3.0 & 5.6518e-05 & 3.9 + & + & & & & & + 0.05 & 1.2070e-01 & & 6.3285e-01 & & & 1.2070e-01 & & 6.3293e-01 & & & 1.0921e-01 & & 6.0454e-01 & + 0.025 & 2.7808e-02 & 2.1 & 6.2302e-02 & 3.3 & & 2.7809e-02 & 2.1 & 6.2304e-02 & 3.3 & & 2.6004e-02 & 2.1 & 5.5004e-02 & 3.5 + 0.0125&6.0348e-03 & 2.2 & 6.4433e-03 & 3.3 & & 6.0348e-03 & 2.2 & 6.4433e-03 & 3.3 & & 5.4733e-03 & 2.2 & 5.5668e-03 & 3.3 + & + & & & & & + 0.05 & 1.4931e-05 & & 5.8044e-08 & & & 1.4932e-05 & & 5.8056e-08 & & & 1.3598e-05 & & 4.8332e-08 & + 0.025 & 3.3009e-06 & 2.2 & 1.0664e-08 & 2.4 & & 3.3009e-06 & 2.2 & 1.0665e-08 & 2.4 & & 2.9824e-06 & 2.2 & 8.7286e-09 & 2.5 + 0.0125 & 4.5947e-07 & 2.8 & 8.0780e-10 & 3.7 & & 4.5947e-07 & 2.8 & 8.0780e-10 & 3.7 & & 3.9840e-07 & 2.9 & 6.0761e-10 & 3.8 + & + & & & & & + 0.05 & 1.7132e-05 & & 6.9905e-08 & & & 1.7132e-05 & & 6.9910e-08 & & & 1.6511e-05 & & 6.5219e-08 & + 0.025 & 3.9931e-06 & 2.1 & 1.4135e-08 & 2.3 & & 3.9932e-06 & 2.1 & 1.4136e-08 & 2.3 & & 3.7892e-06 & 2.1 & 1.2756e-08 & 2.4 + 0.0125 & 8.8931e-07 & 2.2 & 2.7052e-09 & 2.4 & & 8.8931e-07 & 2.2 & 2.7052e-09 & 2.4 & & 8.2511e-07 & 2.2 & 2.3316e-09 & 2.5 +    [ ex3 ] the initial value system of @xmath3d convection - diffusion equation with @xmath244 ^ 2 $ ] and @xmath245 , and @xmath246 where @xmath247 the distribution of the initial solution is depicted in figure [ ex3-fig3.1 ] .",
    "the solutions behavior is obtained for the parameter values : @xmath248 and @xmath249 , and is depicted in figure [ ex3-fig3.2 ] due to mtb - dqm , also we noticed the similar characteristics obtained using mexp - dqm and mecdq method .",
    "the obtained characteristics agreed well as obtained in @xcite .",
    "in this paper , the numerical computations of initial value system of two dimensional _ convection - diffusion _ equations with both kinds of boundary conditions has been done by adopting three methods : modified exponential cubic b - splines dqm , modified trigonometric cubic b - splines dqm , and mecdq method @xcite , which transforms the _ convection - diffusion _ equation into a system of first order ordinary differential equations ( odes ) , in time , which is solved by using ssp - rk54 scheme .",
    "the methods are found stable for two space convection - diffusion equation by employing matrix stability analysis method .",
    "section [ sec - num ] shows that the proposed solutions are more accurate in comparison to the solutions by various existing schemes , and are in good agreement with the exact solutions .",
    "the order of accuracy of the proposed methods for the convection - diffusion problem with dirichlet s boundary conditions is cubic whenever @xmath250 and otherwise it is super linear , in space . on the other hand ,",
    "the order of accuracy of the proposed methods for the convection - diffusion problem with neumann boundary condition is quadratic with respect to @xmath251 error norms , see table [ tab2.4 ] .",
    "huai - huo cao , li - bin liu , yong zhang and sheng - mao fu , a fourth - order method of the convection - diffusion equations with neumann boundary conditions , applied mathematics and computation 217 ( 2011 ) 9133 - 9141 .",
    "hengfei ding and yuxin zhang , a new difference scheme with high accuracy and absolute stability for solving convection - diffusion equations , journal of computational and applied mathematics 230 ( 2009 ) 600 - 606 .",
    "kalita , d.c .",
    "dalal and a.k .",
    "dass , a class of higher order compact schemes for the unsteady two - dimensional convection - diffusion equation with variable convection coefficients , int .",
    "methods fluids 38 ( 2002 ) 1111 - 1131 .",
    "m. zerroukat , k. djidjeli and a. charafi , explicit and implicite messless method for linear advection - diffusion - type partial differential eqations , international journal numerical method in engineering 48 ( 2000 ) 19 - 35 .",
    "g. arora , v. joshi , a computational approach for solution of one dimensional parabolic partial differential equation with application in biological processes , ain shams eng j ( 2016 ) , http://dx.doi.org/10.1016/j.asej.2016.06.013 .",
    "singh , p. kumar , an algorithm based on a new dqm with modified extended cubic b - splines for numerical study of two dimensional hyperbolic telegraph equation , alexandria eng .",
    "j. ( 2016 ) , http://dx.doi.org/10.1016/j.aej.2016.11.009 .",
    "g. arora , rc mittal and b. k. singh , numerical solution of bbm - burger equation with quartic b - spline collocation method , journal of engineering science and technology , special issue 1 , 12/2014 , 104 - 116 .",
    "v. k. srivastava and b. k. singh , a robust finite difference scheme for the numerical solutions of two dimensional time - dependent coupled nonlinear burgers equations , international journal of applied mathematics and mechanics 10(7 ) ( 2014 ) 28 - 39 .",
    "a. korkmaz and h.k .",
    "akmaz , extended b - spline differential quadrature method for nonlinear viscous burgers equation , proceedings of international conference on mathematics and mathematics education , pp 323 - 323 , elazi , turkey 12 - 14 may , 2016 .",
    "muhammad abbas , ahmad abd .",
    "majid , ahmad izani md .",
    "ismail , abdur rashid , the application of cubic trigonometric b - spline to the numerical solution of the hyperbolic problems , applied mathematics and computation 239 ( 2014 ) 74 - 88 .",
    "( left ) of 2d convection - diffusion equation with @xmath238 , @xmath254 for @xmath255 , title=\"fig:\",width=236,height=170 ]   ( left ) of 2d convection - diffusion equation with @xmath238 , @xmath254 for @xmath255 , title=\"fig:\",width=379,height=170 ]         ( left ) of 2d convection - diffusion equation with @xmath238 , @xmath254 for @xmath255 , title=\"fig:\",width=283,height=194 ]   ( left ) of 2d convection - diffusion equation with @xmath238 , @xmath254 for @xmath255 , title=\"fig:\",width=283,height=194 ]    d convection - diffusion equation in example [ ex3 ] at @xmath256 ( left ) and @xmath257 ( right),title=\"fig:\",width=283,height=194 ] d convection - diffusion equation in example [ ex3 ] at @xmath256 ( left ) and @xmath257 ( right),title=\"fig:\",width=283,height=194 ]    d convection - diffusion equation in example [ ex3 ] at @xmath256 ( left ) and @xmath257 ( right),title=\"fig:\",width=283,height=194 ] d convection - diffusion equation in example [ ex3 ] at @xmath256 ( left ) and @xmath257 ( right),title=\"fig:\",width=283,height=194 ]    d convection - diffusion equation in example [ ex3 ] at @xmath256 ( left ) and @xmath257 ( right),title=\"fig:\",width=292,height=194 ] d convection - diffusion equation in example [ ex3 ] at @xmath256 ( left ) and @xmath257 ( right),title=\"fig:\",width=292,height=194 ]"
  ],
  "abstract_text": [
    "<S> this paper deals with the numerical computations of two space dimensional time dependent _ parabolic partial differential equations _ by adopting adopting an optimal five stage fourth - order strong stability preserving runge - kutta ( ssp - rk54 ) scheme for time discretization , and three methods of differential quadrature with different sets of modified b - splines as base functions , for space discretization : namely- @xmath0 mecdqm : ( dqm with modified extended cubic b - splines ) ; @xmath1 mexp - dqm : dqm with modified exponential cubic b - splines , and @xmath2 mtb - dqm : dqm with modified trigonometric cubic b  splines . </S>",
    "<S> specially , we implement these methods on _ convection - diffusion _ equation to convert them into a system of first order ordinary differential equations ( odes ) , in time . </S>",
    "<S> the resulting system of odes can be solved using any time integration method , while we prefer ssp - rk54 scheme . </S>",
    "<S> all the three methods are found stable for two space convection - diffusion equation by employing matrix stability analysis method . </S>",
    "<S> the accuracy and validity of the methods are confirmed by three test problems of two dimensional _ convection - diffusion _ equation , which shows that the proposed approximate solutions by any of the method are in good agreement with the exact solutions .    </S>",
    "<S> convection - diffusion equation , modified trigonometric cubic - b - splines , modified exponential cubic - b - splines , modified extended cubic - b - splines , differential quadrature method , ssp - rk54 scheme , thomas algorithm </S>"
  ]
}
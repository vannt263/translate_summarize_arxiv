{
  "article_text": [
    "among many numerical techniques for condensed matter physics , the monte carlo method is a popular choice when a long correlation length or a small excitation gap is anticipated .",
    "apart from the negative sign difficulty , most of the shortcomings of the quantum monte carlo ( qmc ) method for spin systems have been removed or reduced . in particular , the qmc for finite temperature based on the path - integral representation has been improved considerably during the past decade .",
    "the improvement was achieved mainly by the development of the loop - cluster algorithms@xcite and related methods .",
    "for instance , the critical slowing down was tamed by the loop - cluster algorithms for a broad class of quantum spin systems@xcite .",
    "it was shown@xcite that the typical size of the clusters coincides with the correlation length .",
    "because of this property , an effective update of configurations is possible .",
    "the other slowing down , due to small intervals for discretization of the imaginary time , was completely removed also by the loop - cluster qmc@xcite , which became even more evident by the extension to continuous imaginary time@xcite .",
    "an efficient measurement of some of important off - diagonal quantities was made possible through the improved estimator@xcite .",
    "one of the difficulties that have been left unsolved until recently was the freezing of configurations due to an external field competing with the exchange couplings . in the conventional framework of the loop - cluster algorithms ,",
    "the field term does not affect the graph assignment probabilities .",
    "it is taken into account only in the flipping probabilities of clusters . as a result",
    ", the cluster size does not correspond to the physical correlation length any more .",
    "it was demonstrated@xcite that this difficulty can be removed , in the case of the @xmath2 antiferromagnetic heisenberg model , by introducing two singular points at which the local conservation rule of particle number ( or magnetization ) is violated .",
    "these singular points are called `` worms . ''",
    "this extension of the configuration space makes it possible to take the external field into account in the hopping probability of worms .",
    "another difficulty is large memory requirement due to the split - spin representation@xcite . when one uses the loop algorithm for a spin problem with large @xmath1 , it is customary to replace each spin operator by a sum of @xmath3 pauli matrices .",
    "therefore , for larger @xmath1 , the algorithm consumes more memory . the stochastic series expansion ( sse)@xcite does not have this difficulty , since it works directly on the original spin - configuration space . the sse is based on the high - temperature series expansion of the partition function , rather than the path - integral formulation . however , it was pointed out@xcite that these two apparently different formulations are essentially equivalent in the limit of the infinite order expansion .",
    "the apparent difference was due to the different updating method , rather than the formulations themselves .",
    "quite recently@xcite , syljusen and sandvik introduced the notion of `` directed loops '' and proposed a framework that accommodates all of the above - mentioned ideas , i.e. , the loop updating , the worm updating , and the two formulations . their framework can be compared with kandel and domany s framework @xcite for the loop - cluster algorithms .",
    "in fact , the mathematical formulation of the syljusen - sandvik ( ss ) scheme has a similar structure to kandel and domany s ( see appendix  [ sec : framework ] ) , and the resulting algorithm coincides with the loop - cluster algorithm in some cases . in this sense",
    ", the ss scheme can be viewed as a generalization of the kandel - domany framework .",
    "an algorithm based on the ss scheme is characterized by the scattering probabilities of worms .",
    "although the detailed balance condition imposes a set of equations to be satisfied by these probabilities , there are still a lot of degrees of freedom .",
    "some of the solutions to these detailed balance equations lead to the single - cluster version of the conventional loop - cluster algorithm at zero magnetic field , which are known to be efficient .",
    "however , all the solutions are not necessarily efficient or practical .",
    "there are obviously many bad solutions in which the `` back - tracking '' probability @xcite or `` turning - back '' probability are dominating .",
    "in addition , the straightforward solutions of the heat - bath type do not work either , as we see below in sec .",
    "[ sec : performance ] .",
    "although an efficient solution was discussed@xcite for @xmath2 @xmath0 models , the prescription was not given for general @xmath1 .",
    "similar to the kandel - domany framework , the ss scheme does not give a concrete prescription for obtaining a good solution that leads to an efficient algorithm for specific models . a rule of thumb for obtaining a good solution is to minimize the turning - back probability .",
    "however , even if the turning - back probability is fixed , we still have many degrees of freedom to play with , and the efficiency of the algorithm strongly depends on the choice of the worm - scattering probabilities , as we demonstrate in sec .  [",
    "sec : performance ] .",
    "while this freedom can be quite useful for constructing new types of efficient algorithms , it makes finding a reasonable solution a nontrivial task .    in this paper , we propose a natural extension of existing algorithms that determines a unique set of scattering probabilities of worms .",
    "the resulting algorithm is within the ss scheme and expected to be efficient for a wide class of quantum spin systems .",
    "the algorithm can be obtained by the coarse graining mapping applied to an algorithm in the split - spin representation . in sec .",
    "[ sec : splitspin ] , we first discuss algorithms in the split - spin representation . in sec .",
    "[ sec : coarsegraining ] , we show how we can obtain an algorithm in the original spin representation by coarse - graining the split - spin algorithm . based on this general prescription for the coarse - grained algorithms , we present in sec .  [",
    "sec : xxz ] a complete table of the worm scattering probability for the @xmath0 models with arbitrary @xmath1 . finally , in sec .",
    "[ sec : performance ] , we compare the present algorithm with other algorithms such as the directed loop algorithm with the straightforward heat - bath solution .",
    "it has been pointed out in previous papers@xcite that , in the limit of the infinite order expansion , a monte carlo algorithm based on the series expansion can be reformulated in terms of the language of the path - integral with continuous imaginary time , and vice versa . in what follows , therefore , we describe algorithms in this limit for the sake of simplicity , and use the path - integral language . the translation into the series - expansion language and its modification for a finite order expansion should be straightforward .    a simulation based on the path - integral representation ( or the sse in the infinite order expansion limit )",
    "can be visualized in a @xmath4 - dimensional space - time where @xmath5 is the real - space dimension . at each point in this space - time an integral variable is defined , and it takes on one of the @xmath6 values @xmath7 and @xmath1 . in the case of @xmath2",
    "the variables are one - bit ( or ising ) variables .",
    "accordingly , we consider world lines , which are trajectories of up - spins in this space - time . in the present paper ,",
    "we use the term `` world - line configurations '' to refer to the spin configurations in the space - time for general @xmath1 , although they are not represented by simple lines for @xmath8 .",
    "a monte carlo algorithm is nothing but a procedure by which the world - line configuration is updated so that the limiting probability distribution may coincide with the weight of the configuration , i.e. , the exponential of the action .    in the ss scheme",
    ", we deal with objects defined in the @xmath4- dimensional space - time ( fig.[fig : objects ] ) .",
    "a vertical line of length @xmath9 represents a spin .",
    "kink _ is a point at which the local spin configuration changes .",
    "a particle ( or an up - spin ) jumps from one vertical line to another only at kinks . in models without particle number ( or magnetization )",
    "conservation , a point at which a particle disappears or appears is also a kink .",
    "every kink is located on a _",
    "vertex_. vertices in the ss scheme play a role comparable to that of local graph elements in the conventional loop - cluster algorithms .",
    "in particular , for models in which the magnetization conserves , vertices are represented by short horizontal lines , each connecting two or more neighboring vertical lines .",
    "if a vertex connects two lines , we call such a vertex _ four legged _ since it joins four _ segments _ , where a segment is a part of a vertical line which is delimited by two vertices . a _",
    "worm _ is a kink of a special kind located on a segment @xcite .",
    "a worm can move continuously as the simulation proceeds , while locations of ordinary kinks and vertices are fixed until they are deleted . in the applications discussed in the present paper",
    ", there are only zero or two worms at the same time in the whole system .    for quantum spin systems , one cycle of update in the ss scheme",
    "consists of the following operations on these objects : 1 ) assigning vertices to a given world - line configuration , 2 ) creating a pair of worms , 3 ) letting one of them move along segments and be scattered by vertices until it comes back to the other worm to be annihilated , and 4 ) deleting all the vertices with no kinks on them . in the rest of the present paper ,",
    "we see these operations in more detail .",
    "when a world - line configuration is given , we first assign vertices .",
    "vertices are assigned to every part of the system probabilistically with a density that depends on the local world - line configuration .",
    "in addition , all the kinks are regarded as vertices . after placing all vertices",
    ", we choose a point on a segment at random and create a pair of worms there .",
    "then , one of the worms starts moving .",
    "as a worm passes a point in the space - time , it changes the local spin value there .",
    "when the moving worm encounters a vertex , it may be scattered . the outgoing direction after the scattering is determined stochastically with certain predetermined scattering probabilities . when a moving worm meets the other worm , they annihilate .",
    "therefore , what we have to specify in order to define an algorithm are the density of vertices and the scattering probability of worms .",
    "the ss scheme imposes conditions on these .",
    "the conditions are summarized in appendix  [ sec : framework ] .",
    "when spins in a given model are larger than s=1/2 , it is customary to replace the original spin operators by the sum of @xmath3 pauli spins@xcite , i.e. , @xmath10 where @xmath11 is an @xmath2 spin operator .",
    "the partition function is expressed in terms of these @xmath12 degrees of freedom .",
    "since the original phase space corresponds to the subspace in which @xmath13 holds , we have to project out all the states orthogonal to this subspace to obtain the correct partition function .",
    "this can be done by inserting the projection operator @xmath14 : @xmath15 } )    = { \\rm tr}_{\\{\\sigma_{i\\mu}\\ } } ( p e^{-\\beta h[\\{\\tilde s_i\\}]}).\\ ] ] hereafter , the representation based on @xmath16 degrees of freedom is referred to as the `` original spin representation '' whereas that based on @xmath17 the `` split - spin representation . ''    for many models , it is rather straightforward to obtain an algorithm in the split - spin representation . for example",
    ", we can obtain an algorithm for the @xmath0 models with arbitrary magnitude of spins @xmath1 from that for the corresponding model with @xmath2 , simply by regarding the former as a superposition of many of the latter .",
    "if we do so , we consider @xmath3 vertical lines for each original spin .",
    "accordingly , a point in the space - time is specified by three numbers @xmath18 rather than two @xmath19 .",
    "the coupling between two original spins @xmath16 and @xmath20 is transformed into @xmath21 couplings , each couples @xmath22 and @xmath23 : @xmath24 where @xmath25 , @xmath26 , and @xmath27 is the external field per bond ( e.g. , @xmath28 for the hypercubic lattice where @xmath29 is the external field per site ) . for the vertex assignment",
    ", we apply the procedure for the directed loop algorithm for @xmath2@xcite to every one of @xmath21 combinations of @xmath12 spins .",
    "to be more precise , the density for the vertex between two split spins is the same as that in the directed loop algorithm for @xmath2 with @xmath27 replaced by @xmath30 .",
    "similarly , the worm - scattering probabilities for @xmath2 can be used for split spins with the same modification of @xmath27 .",
    "for the projection operator , we do essentially the same as we usually do in the conventional loop algorithm for @xmath8@xcite . in the present framework , we represent it by special vertices , each located at @xmath31 connecting all the @xmath32 vertical lines on a site @xmath33 . to be specific ,",
    "when a worm moves upwards along the vertical line @xmath34 and hits the point @xmath35 from below , it jumps to @xmath36 and go on upwards . the line to which the worm jumps , @xmath37 , is chosen with equal probability among those on which the local spin state is the same as the spin state right above the incoming worm .",
    "namely , it is chosen among such @xmath38 s that @xmath39 may hold .",
    "one of the drawbacks of the split - spin representation mentioned above is that it may require much more memory than the original spin representation . for example , in the loop algorithm for the @xmath40 models @xcite , we insert graphs that involve all pauli spins on two neighboring sites at the same imaginary time ( fig.[fig : sun ] ) .    in the split - spin representation ,",
    "insertion of a graph of this type creates @xmath41 new segments . since the memory requirement is roughly proportional to the number of segments , a loop algorithm for the @xmath40 model requires memory resources proportional to @xmath42 .",
    "if we can construct an algorithm in the original spin representation , insertion of a graph would create only two new segments .",
    "this leads to a memory requirement smaller by factor @xmath43 than that of the split - spin representation .",
    "another drawback is the lack of portability of the code . in the split - spin representation , there are many kinds of vertices , in principle , depending on the number of legs .",
    "therefore , we have to change the core part of the code to accommodate new kinds of graphs for each model unless we implement all possible sorts of graphs initially , which is impractical . on the other hand , in the coarse - grained representation ,",
    "all the vertices are four - legged ( for models with two - body interactions ) and there are only four different types of scattering of worms .",
    "therefore , the core part of codes for all models are the same except for the densities of vertices and the scattering probabilities of worms . for example , if we have a code based on the ss scheme for the @xmath40 model we can immediately obtain a code for the @xmath44 model simply by changing the arrays of the probability tables .    in order to take full advantage of the ss scheme , therefore",
    ", we have to construct probability tables for algorithms based on the original spin representation rather than the split - spin representation . for this purpose",
    ", we consider a `` coarse - graining '' map and its stochastic inverse . the map is basically disregarding the detailed information of split spins .",
    "the inverse of the map is to choose stochastically one of the split - spin configurations which are transformed by coarse graining into a given original - spin configuration . with these maps and an algorithm in the split - spin representation",
    ", we can construct an algorithm in which we manipulate only original spin degrees of freedom .",
    "to illustrate the idea in more detail , we again take the @xmath0 model with an arbitrary magnitude of spins @xmath1 .",
    "we can define a coarse - graining map from a split - spin world - line configuration @xmath45 into an original spin world - line configuration @xmath46 as @xmath47 where @xmath48 is the value of @xmath49 at the imaginary time @xmath50 , whereas @xmath51 is the sum of them , i.e. , @xmath52 .",
    "similarly , we can define a map for vertices .",
    "since the only interaction is of second order in the spin operators , a vertex of the @xmath0 model has only four legs ( i.e. , connects only two lines ) .",
    "if a vertex connects two lines @xmath34 and @xmath53 , we associate with it a vertex that connects two coarse - grained lines @xmath33 and @xmath54 .",
    "of course , in the latter representation , the information concerning the indices @xmath55 and @xmath38 is missing .    obviously , these mappings are many - to - one mappings",
    ". however , we can define the inverse of this coarse - graining map . in the following ,",
    "we adopt the `` particle '' picture in which an up - spin is regarded as a particle whereas a down - spin a hole . correspondingly , we use particle numbers @xmath56 and @xmath57 , instead of @xmath58 and @xmath48 , to specify local states of spins .",
    "these are related to @xmath58 and @xmath48 by @xmath59 and @xmath60 .",
    "the inverse mapping of a local state is rather simple .",
    "suppose that a model is an @xmath61 model and a local spin state at the point of interest is @xmath62 in the coarse - grained representation .",
    "there are two split - spin states that are mapped to this state , i.e. , @xmath63 and @xmath64 .",
    "both configurations are chosen with the same probability ( i.e. , 1/2 ) since there is no reason to put any bias .",
    "for general @xmath1 , all configurations that satisfy @xmath65 are chosen with the same probability , where @xmath66 is the local state on the coarse - grained line .",
    "the inverse mapping of a vertex can be defined in a similar way . when two space - time points @xmath19 and @xmath67 are connected by a vertex ( with no kink on it ) in the coarse - grained representation , we can map it to a vertex connecting @xmath18 and @xmath68 with some probability .",
    "when @xmath61 , there are four different ways of choosing @xmath55 and @xmath38 that are to be connected . however , the probability for taking one of them is not 1/4 in this case .",
    "this is because the density of vertices depends on the spin states at their legs .",
    "if , for example , the density of vertex between two particles is higher than that between a particle and a hole , a given coarse - grained vertex should be mapped to the former with larger probability than the latter . in other words ,",
    "the probability for associating a coarse - grained vertex with a particular split - spin vertex should be proportional to the density of the latter .",
    "therefore , the probability for associating a coarse - grained vertex between @xmath33 and @xmath54 with a split - spin vertex between @xmath34 and @xmath53 is given by @xmath69 here , @xmath70 is the density of vertices in the split - spin representation where the local spin values are @xmath71 and @xmath72 at the legs of vertices .",
    "the coarse - graining map and its inverse can be used for obtaining the vertex density and the worm - scattering probability in the coarse - grained representation from those in the split - spin representation .",
    "suppose an imaginary - time interval in which the state of two neighboring sites @xmath33 and @xmath54 are specified by @xmath73 and @xmath74 , respectively .",
    "the site @xmath33 consists of @xmath73 particles and @xmath75 ( @xmath76 ) holes whereas the site @xmath54 consists of @xmath74 particles and @xmath77 holes .",
    "then , there are @xmath78 , and @xmath79 possible combinations of @xmath80 , @xmath81 , @xmath82 , and @xmath83 pairs of @xmath12 spins , respectively .",
    "since we assign a vertex with density @xmath84 for each @xmath80 pair , the total density of vertices connecting @xmath80 pairs is @xmath85 .",
    "the densities for other combinations can be obtained in a similar fashion .",
    "thus , the total density of vertices is @xmath86 for two neighboring segments with spin values @xmath73 and @xmath74 .",
    "next , we consider the scattering probability of worms at a vertex with no kink on it .",
    "suppose a spin - lowering worm hits the lower - left leg of the vertex from below in the coarse - grained picture .    in order for this worm to be scattered",
    ", the worm and one of the legs of the vertex must be mapped onto the same line by the inverse map ( fig.[fig : scattering ] ) .",
    "there are two such cases : the case where the spin value is 1 [ fig.[fig : scattering](b ) ] on the legs on the other line and the case where it is 0 [ fig.[fig : scattering](c ) ] . in the first case",
    "there are @xmath74 different choices of the line , whereas we have @xmath77 choices in the second case .",
    "each individual choice in the first case has the weight @xmath84 whereas that in the second case has the weight @xmath87 .",
    "therefore , the probability for choosing the first case is @xmath88 , whereas that for the second case is @xmath89 .",
    "if we choose the first case , the probability with which the worm is scattered in the direction @xmath90 is @xmath91 the worm scattering probability for the second case is given similarly .",
    "all in all , the probability of a spin - lowering worm being scattered into the direction specified by the directed graph @xmath90 ( @xmath92 ) becomes @xmath93 the probability for going through ( @xmath94 ) is simply equal to @xmath95 ( probabilities of the three proper scatterings ) .",
    "the symbol @xmath96 denotes the state where the spin states on the upper - left , upper - right , lower - left , and lower - right legs are @xmath97 , and @xmath74 , respectively , and there is an incoming spin - raising ( @xmath98 ) or spin - lowering ( @xmath99 ) worm on the lower - left leg .",
    "@xmath100 is the probability of the worm being scattered into the direction @xmath90 when the initial state of the vertex is @xmath101 in the split - spin representation .",
    "this probability coincides with that in the @xmath2 case with the replacement @xmath102 .",
    "the scattering probability of a spin - raising worm can be obtained in the same fashion .",
    "the scattering probability at a vertex with a kink is simpler than that for a vertex with no kink on it , because in this case there is at most one type of vertex that may lead to a proper scattering ( diagonal , horizontal , or turning back ) .",
    "for example , suppose a particle jumps from left to right at the kink at the imaginary time @xmath50 , and the spin - lowering worm is approaching the vertex on its lower - left leg .",
    "the local state @xmath101 is given by @xmath103 then , the vertex s lower - left leg must be footed on positive segments [ @xmath104 because otherwise no particle can hop to the neighboring site there .",
    "similarly , the lower - right , upper - left , and upper - right legs must be footed on negative , negative , and positive segments , respectively .",
    "there are @xmath105 such choices of segments , and all the choices are equally probable . among them",
    ", there are @xmath77 choices where the lower - left leg is footed on the segment where the worm is located . therefore , the probability of the worm being located on one of the legs of the vertex is @xmath106 .",
    "then , the scattering probability for @xmath90 s corresponding to proper scatterings [ i.e. , @xmath107 is @xmath108 for spin - lowering worms .",
    "probabilities for spin - raising worms can be obtained similarly .",
    "thus , we have described the way we derive the density of vertices and the scattering probability of worms from an algorithm in the split - spin representation . although our description above may seem to give an actual procedure for coarse - graining mapping and its inverse",
    ", we do not perform these mappings in real simulation .",
    "they are only for deriving the density ( [ generaldensity ] ) and the probabilities ( [ generalscatteringprobability ] ) and ( [ generalscatteringprobabilityii ] ) . in the actual simulation",
    ", we manipulate only coarse - grained variables .    in order to complete the description of the algorithm",
    ", we have to specify the procedure for the pair creation and annihilation of worms .",
    "again , this can be done by the coarse - graining map and its inverse . in the split - spin representation , the pair creation of worms",
    "is done simply by choosing a point @xmath18 in the system with a uniform probability distribution .",
    "if there is a hole at the chosen point [ i.e. , @xmath109 , we create a pair of spin - raising worms there .",
    "if there is a particle instead , we create spin - lowering worms .",
    "when coarse grained , this procedure is mapped to choosing a point from the whole space - time with uniform probability distribution and creating a pair of spin - raising worms with probability @xmath110 or spin - lowering ones with probability @xmath111 , where @xmath73 is the spin state at the chosen point .",
    "the moving worm travels according to the scattering process described above until it comes back to the original position @xmath18 where the other worm waits . when coarse grained , this `` coming - home '' event is mapped to an event in which a worm comes back to @xmath19 .",
    "however , several other split - spin events are mapped to this same coarse - grained event .",
    "namely , there are cases where the moving worm comes to the point corresponding to a different @xmath12 spin , i.e. , @xmath112 with @xmath113 .",
    "worms in this case should not annihilate .",
    "it has to be mapped , therefore , to a `` going - through '' event .",
    "suppose that the worms are spin - lowering ones and that the local value of the coarse - grained spin is @xmath73 ( before the passage of the worm ) .",
    "then , there are @xmath73 cases in total which are mapped to the same coarse - grained state . only one of them leads to the collision of two worms .",
    "therefore , the probability of pair annihilation is @xmath114 and that for going through is @xmath115 . for the same reason",
    ", the probability of annihilation should be @xmath116 if the worms are spin - raising ones .",
    "the whole procedure of one monte carlo sweep ( mcs ) with the algorithm described in this section can be summarized as follows .",
    "step 1 : : :    place vertices at random with the density , @xmath117 ,    that depends on the local spin state , @xmath101 . set    @xmath118 .",
    "step 2 : : :    increase @xmath119 by 1 .",
    "choose a point in the    whole space - time at random , and create two worms there , one is to move    and the other is to stay .",
    "for the moving worm , choose the initial    direction of motion , upward or downward , with the probability 1/2 .",
    "then choose its initial type , spin - lowering or spin - raising , with the    probability @xmath111 or @xmath120 ,    respectively .",
    "step 3 : : :    let the moving worm go until it hits a vertex or comes back to the    original position where the other worm stays .",
    "if it hits a vertex    before it comes back to the original position , go to step 4 .",
    "otherwise , go to step 5 .",
    "step 4 : : :    choose the scattering direction @xmath90 with the    probability @xmath121 , where @xmath101    is the local spin state at the vertex before the worm s arrival .",
    "change the type of the worm as specified by @xmath90 .    then , go back to step 3 .",
    "step 5 : : :    if the moving worm is a spin - lowering one , let it go through the    original point with the probability @xmath115 and go to    step 3",
    ". otherwise let it go through with the probability    @xmath122 and go to step 3 .",
    "if the moving worm    does not go through , let it annihilate with its partner and go to step    6 .",
    "step 6 : : :    if @xmath119 is smaller than    @xmath123 , go back to step 2 . otherwise , erase all    the vertices with no kink and go back to step 1 .",
    "one monte carlo sweep is defined as a process between two successive resets of vertices ( i.e. , two successive passages of step 1 ) .",
    "the number @xmath124 , the number of pair creations of worms during 1 mcs , can be an arbitrary positive integer .",
    "we choose it so that every vertex may be visited by a worm once in average during 1 mcs .",
    "since the @xmath0 models are of particular importance , we summarize the probability of vertices and the scattering probability of worms for the models in table  [ tab : scatteringprobability ] . besides the coupling constants , the scattering probability depends upon the initial configuration of the scatterer ( i.e. , vertex ) , the type of the worm ( `` spin - raising '' or `` spin - lowering '' ) , and the incoming and outgoing direction . because of the mirror image symmetries with respect to the horizontal and vertical axes , scattering probabilities for",
    "any two cases which can be transformed to each other by mirror image transformations should be the same .",
    "therefore , without loss of generality , we assume that the incoming worm is located on the lower - left leg of the vertex . then , the initial states can be categorized into six classes , each specified by the spin states on all the legs and the kind of the incoming worm ( table  [ tab : scatteringprobability ] ) .",
    "there are only a few possible final states for each initial state .",
    "those final states can be specified by the outgoing direction ( @xmath90 ) of the scattered worm ( fig.[fig : finalstates ] ) .",
    "there are four such directions : turning - back , diagonal , horizontal , and straight , as indicated in the top row in fig.[fig : finalstates ] .",
    "the probabilities for scattering in these directions are denoted by @xmath125 and @xmath126 respectively , where @xmath101 is the local state in the coarse - grained spin representation . in table",
    "[ tab : scatteringprobability ] , we present the first three only . the probability for going straight",
    "@xmath127 can be readily obtained by subtracting the other three from unity .",
    "the scattering probability also depends upon the coupling constants , @xmath128 and @xmath129 . from the algorithmic point of view",
    ", the whole parameter space is divided into six regions ( fig.[fig : phasediagram ] ) .    within each one of the six regions ,",
    "the scattering probability is a simple analytic function of the coupling constant , and it is continuous in the whole parameter space .",
    "however , its first derivatives are discontinuous at the boundary between two adjacent regions . in the case of @xmath2 ,",
    "the division is the same as that in the previous paper@xcite .",
    "c|lcccccc @xmath101 & & region i & region ii & region iii & region iv & region v & region vi + @xmath130 & @xmath131 & a & b & b & b & a & c + & @xmath132 & 0 & @xmath133 & 0 & 0 & 0 & @xmath134 + @xmath135 & @xmath136 & @xmath137 & 0 & 0 & 0 & @xmath137 & @xmath138 + & @xmath139 & @xmath140 & @xmath141 & @xmath142 & 0 & 0 & 0 + & @xmath132 & 0 & @xmath143 & @xmath143 & @xmath144 & @xmath145 & @xmath146 + @xmath147 & @xmath136 & @xmath148 & 0 & @xmath149 & @xmath141 & @xmath150 & @xmath151 + & @xmath139 & @xmath152 & @xmath153 & @xmath153 & @xmath153 & @xmath152 & 0 + & @xmath132 & 0 & 0 & 0 & 0 & 0 & 0 + @xmath154 & @xmath136 & @xmath155 & 0 & @xmath155 & @xmath156 & @xmath156 & @xmath156 + & @xmath139 & @xmath157 & @xmath156 & @xmath157 & 0 & 0 & 0 + & @xmath132 & 0 & 0 & 0 & 0 & 0 & 0 + @xmath158 & @xmath136 & @xmath159 & 0 & 0 & 0 & @xmath159 & @xmath160 + & @xmath139 & @xmath161 & @xmath160 & @xmath160 & @xmath160 & @xmath161 & 0 + @xmath162 & & + @xmath163 & & +",
    "it is practically impossible to evaluate the efficiency of the algorithm for all possible combinations of coupling constants , the external field , the magnitude of spins , and the number of dimensions .",
    "therefore , here we only show an example and make a few remarks concerning the efficiency of the algorithm described above .    of particular interest",
    "is the algorithm in region iii , because the primary motivation for developing the algorithms based on the ss scheme is to solves the freezing problem of the conventional loop algorithms in this region . for @xmath2 ,",
    "good performance was demonstrated@xcite in the isotropic case @xmath164 for various values of @xmath29 .",
    "most importantly , no severe freezing was observed at low temperature .    in what follows ,",
    "we show that the present algorithm solve this problem for an arbitrary @xmath1 .",
    "several other directed loop algorithms ( algorithms 1  4 ) in the original spin representation are also examined for comparison with the present algorithm .",
    "algorithms 1  3 are obtained by tuning solutions of the weight equation([weightequation ] ) and the detailed balance([detailedbalance ] ) so that the turning - back probabilities may be minimized .",
    "all of these three algorithms have exactly the same turning - back probabilities .",
    "algorithm 1 is characterized by the vanishing probability for the diagonal scattering when the field is zero [ i.e. , @xmath165 for all @xmath101 ] , whereas it is finite even at @xmath167 in algorithm 2 .",
    "algorithm 3 is a mixture of algorithms 1 and 2 .",
    "the details of these algorithms are given in appendix  [ sec : examples ] .",
    "algorithm 4 , on the other hand , is the heat - bath - type algorithm that can be obtained in the most straightforward way , although this is also a solution of eqs .",
    "( [ weightequation ] ) and ( [ detailedbalance ] ) . in algorithm 4 ,",
    "one of the four possible directions @xmath90 is chosen with the probability proportional to the weight of the final state . to be specific ,",
    "@xmath168 where @xmath101 is the initial state of the vertex and @xmath169 is the final state of the vertex when the worm is scattered into the direction @xmath90 .    in order to check the validity of these algorithms , we first performed simulations for a small one - dimensional system ( @xmath170 ) and compared the results with the exact solution for various set of parameters , @xmath129 , @xmath29 , and @xmath9 .",
    "it turned out that all the algorithms yielded correct results with 1% or less of the statistical error .",
    "the present algorithm and algorithm 1 yielded roughly the same magnitude of error whereas the other three yielded larger errors than the first two .",
    "for a longer chain ( @xmath171 ) , 50 sets of simulations were performed using each algorithm where each set consists of 20000 creations and annihilations of worm pairs .",
    "we can see the performances of five algorithms in fig.[fig : statisticalerror ] .",
    "plotted in fig.[fig : statisticalerror ] is @xmath172 , where @xmath173 is the estimated statistical error of the squared staggered magnetization , @xmath174 is the system size and @xmath175 is the average number of the vertices visited by the worm during its lifetime .",
    "since the scattering process is the most time - consuming part of the code , the total cpu time is roughly proportional to the total number of scattering events of worms , including the `` straight '' scatterings .",
    "therefore , the cpu time is proportional to @xmath175 .",
    "this is why the statistical error should be multiplied by @xmath176 in order to make the comparison fair . in fig.[fig : statisticalerror ] , we can clearly see that the present algorithm performs as well as the best algorithm among the the other four ( i.e. , algorithm 1 ) .",
    "obviously , there is no exponential slowing down for the present algorithm and algorithm 1 , as was the case with syljusen and sandvik s algorithm for @xmath2 .",
    "for a larger system ( @xmath171 ) with zero magnetic field , the results of the present algorithm and algorithm 1 agree with each other , while those of the other algorithms do not ( fig.[fig : systematicerror ] ) .",
    "we consider that the correct result for @xmath171 is the one that is obtained by the present algorithm and algorithm 1 , and that the other algorithms fail to achieve equilibrium within the performed simulation .",
    "we performed similar simulations for various values of @xmath29 ranging from @xmath177 to @xmath178 .",
    "it turned out that the good algorithms ( the present and algorithm 1 ) always perform better than the bad ones ( algorithm 2  4 ) although the difference between them becomes smaller as the field is increased .",
    "we can explain these facts in terms of the compatibility of the clusters with the order parameter .",
    "one of the reasons why the conventional loop algorithm works well even in the vicinity of the critical point is the accordance between the typical cluster size and the correlation length .",
    "this accordance is guaranteed by the two features of the algorithm : ( i ) independent flipping of clusters , and ( ii ) perfect ordering within each cluster .",
    "although the staggered magnetization is not strictly the order parameter in one dimension , this criterion of good performance of loop - cluster algorithms still applies because finite but relatively long - range correlation exists even in one dimension .",
    "it is easy to see that the present algorithm and algorithm 1 satisfy both conditions ( i ) and ( ii ) in the zero - field limit whereas the other algorithms do not satisfy condition ( ii ) regardless of the field .",
    "this is the reason why the former two algorithms perform much better than the latter three in the weak field region .",
    "therefore , we expect that the difference in the efficiency is even more pronounced near real phase transitions such as these in three - dimensional systems .",
    "the results of the five algorithms , all based on the ss scheme , illustrate that it is not trivial in general to obtain the most efficient algorithm among many possible ones and also that the straightforward heat - bath algorithm is rather poor in some important cases .",
    "it should be noted that the coarse - grained algorithm discussed in the present paper satisfies criterion ( ii ) mentioned above for an arbitrary @xmath0 model when the external field is vanishing .",
    "therefore , we consider that the present algorithm performs well for a rather wide class of models in the weak magnetic field region . even for strong magnetic field , we consider that the present algorithm is at least as good as most of the other algorithms based on the ss scheme as we see above .    for the performance of the present algorithm in the regions other than iii , we can not conclude much at the moment .",
    "in the case of @xmath2 , the algorithm in region i is equivalent to the wolff version ( i.e. , the single - loop update version ) of the loop algorithm when the external field is vanishing .",
    "a good performance of the algorithm in this region has been demonstrated in many applications@xcite , as well as for @xmath8 @xcite .",
    "since the turning - back probability is vanishing in the whole region i , we expect good performance of the algorithm not only on the line @xmath167 but also in the whole region i. the algorithm in regions ii and vi , on the other hand , may not be very efficient because of the presence of the relatively large turning - back probability .",
    "it is easy to see that , in the classical limit ( @xmath179 ) at zero external field , the turning - back probability dominates in regions ii and vi , leading to poor performance . for region",
    "vi , this may not be very problematic because in this region ( at least in the classical ising limit ) the conventional loop - cluster algorithm works efficiently . for region",
    "ii , it is not known whether this is a real problem or not .",
    "the algorithm in region iv is reduced to a single - spin - flip metropolis algorithm in the limit of @xmath180 and @xmath181 .",
    "the performance of the metropolis algorithm should be good in this limit , although the region is physically not very interesting .",
    "we have proposed an algorithms based on the syljusen and sandvik scheme by introducing the split - spin representation and the coarse - graining procedure .",
    "the algorithm is a natural extension of the directed loop algorithm for @xmath2 , in that the present algorithm coincides with it for @xmath2 .",
    "in addition , the present algorithm is a natural extension of the conventional loop algorithm , because if the external field is vanishing , the present algorithm can be obtained through coarse graining the conventional split - spin loop algorithm .",
    "compared with the algorithms in the split - spin representation , the coarse - grained algorithm requires much smaller memory , in general .",
    "in particular , when the algorithm consists of vertices with more than four legs , as is generally the case with the loop algorithms for models with high order interaction terms , the memory can be reduced considerably .",
    "the coarse - grained algorithm is also advantageous since the codes based on it can be very easily modified for other models ( we only need to change the arrays of the probability tables ) .    in the case of the @xmath61 heisenberg antiferromagnet in one dimension ,",
    "the algorithm s performance is almost the same as the best algorithm obtained by directly working on the original spin representation .",
    "many other algorithms can also be obtained in the same way .",
    "however , most of them , including the heat - bath algorithm , are much worse than the present one .",
    "existence of algorithm 1 , a good direct solution to eqs .",
    "( [ weightequation ] ) and ( [ detailedbalance ] ) , suggests the existence of similar solutions for an arbitrary @xmath1 .",
    "we have not succeeded in finding a complete set of such solutions , although we believe that such solutions exist .",
    "it would be an interesting future problem to find such solutions for various models .",
    "the coarse - graining procedure presented in this paper applies not only to the @xmath0 spin systems but also to any model for which a directed loop algorithm can be constructed in the split - spin representation .",
    "for example , on - site easy axis or easy plane anisotropy terms may be treated as the couplings between @xmath12 spins on the same site .",
    "another example is the su(n ) model where the split - spin algorithm is known .",
    "the authors are grateful to o.  syljusen , a.  w.  sandvik , and m.  troyer for enlightening comments .",
    "the present work is supported by grants - in - aid for scientific research program ( no .",
    "12740232 and no .",
    "14540361 ) from monkasho , japan .",
    "in general , a directed loop algorithm is characterized by the density of vertices @xmath117 and the scattering probability of worms @xmath121 .",
    "the density @xmath182 is simply given by @xmath183 where the weight @xmath184 is defined as @xmath185 where @xmath186 when @xmath187 is true and @xmath188 otherwise .",
    "the symbol @xmath189 stands for the integer by which the worm changes the spin value , e.g. , @xmath190 for a @xmath191 worm that lowers the spin value by 2 .",
    "the variable @xmath192 is the only free parameter related to the vertex density .    the scattering probability ,",
    "on the other hand , has a lot of freedom .",
    "the algorithm can be explained very clearly by introducing an extended weight @xmath193 that is related to the weight @xmath184 as @xmath194 here , we consider a scattering event in which the initial state of the vertex is @xmath101 and the out going direction of the worm is @xmath90 .",
    "we denote the final state of this event as @xmath169 .",
    "it should be noted that the ` state ' @xmath101 is directed in contrast to the state in the ordinary monte carlo simulation .",
    "we consider the balance between an arbitrary sequence of scatterings and its reverse .",
    "each sequence starts from pair creation of the worms and ends at pair annihilation , the detailed balance condition should be considered between @xmath101 and the reverse of @xmath169 .",
    "therefore , the detailed balance condition is expressed as @xmath195 here , @xmath196 is the reverse of @xmath169 obtained by inverting the direction and changing the type of the worm in @xmath169 , whereas @xmath197 is the inverse of @xmath90 , obtained by inverting the direction of the arrow in @xmath90 .",
    "it is worth mentioning that eqs .",
    "( [ weightequation ] ) and ( [ detailedbalance ] ) are quite similar to the equations that appear in the general formulations of the loop - cluster algorithm@xcite .",
    "the only difference is that here we use directed graphs and directed states whereas only nondirected graphs and states appear in the conventional loop - cluster algorithm .",
    "it is easy to see that in the case of zero magnetic field the extended weight in the present scheme can be made independent of the directions of states and graphs , and all the equations discussed in this appendix coincide with those for conventional loop - cluster algorithms .",
    "once we obtain any set of constant @xmath192 and positive @xmath193 s that satisfy eqs .",
    "( [ weight ] ) , ( [ weightequation ] ) , and ( [ detailedbalance ] ) , we obtain a scattering probability @xmath121 of worms that satisfies the detailed balance condition as @xmath198",
    "in tables [ tab : pmoneweightforafh ] and [ tab : pmtwoweightforafh ] , we show the weight and the extended weight that satisfy eqs .",
    "( [ weight ] ) , ( [ weightequation ] ) , and ( [ detailedbalance ] ) for the @xmath61 antiferromagnetic heisenberg model . the vertex density and the worm - scattering probability can be obtained through eqs .",
    "( [ density ] ) and ( [ scatteringprobability ] ) .",
    "table  [ tab : pmoneweightforafh ] shows the scattering probability for worms that change values of spin by 1 .",
    "the weights contain two free parameters @xmath199 and @xmath200 .",
    "note , however , that the turning - back probability does not depend on the choice of the free parameters .",
    "algorithm 1  3 correspond to the following choices , respectively : @xmath201       in addition to the worms changing spin values by 1 , we can introduce worms that change spin values by an arbitrary amount . for @xmath61",
    ", we can introduce @xmath202 worms . in the examples presented in sec .",
    "[ sec : performance ] , we used both @xmath203 worms and @xmath202 ones .",
    "when a pair of worms are created , the type of worm is chosen with equal probability from all possible ones .",
    "for instance , when the initial spin state is @xmath204 at the point chosen for the pair creation , a @xmath205 or @xmath206 worm is possible .",
    "each one of them is chosen with probability @xmath207 . the extended weight for @xmath202 worms",
    "are listed in table  [ tab : pmtwoweightforafh ] .",
    "in fact , only the @xmath203 worms are necessary for making the algorithm ergodic and for satisfying the detailed balance . although it is likely that the @xmath202 worms are useful for improving the efficiency of the algorithm for more complicated models , we have not encountered such a case yet .",
    "this wording is different from the original one by prokofv _",
    "et al . _ , where the whole path connecting the two discontinuity points is called a worm . in the present paper",
    "we call the discontinuities themselves worms .",
    "therefore , the worms in the present paper should be called the  worm heads \" and the  worm tails \" in the original definition . however , since we did not feel necessity of referring to the `` body '' of the worm , we call both worm heads and worm tails worms in short ."
  ],
  "abstract_text": [
    "<S> recently , syljusen and sandvik proposed a new framework for constructing algorithms of quantum monte carlo simulation . </S>",
    "<S> while it includes new classes of powerful algorithms , it is not straightforward to find an efficient algorithm for a given model . based on their framework , we propose an algorithm that is a natural extension of the conventional loop algorithm with the split - spin representation . </S>",
    "<S> a complete table of the vertex density and the worm - scattering probability is presented for the general @xmath0 model of an arbitrary @xmath1 with a uniform magnetic field . </S>"
  ]
}
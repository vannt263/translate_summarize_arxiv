{
  "article_text": [
    "the frchet metric is used for cyclic process analysis and image processing @xcite . it is stronger than the well - known hausdorff metric @xcite,@xcite , @xcite and therefore is more appropriate in some applications @xcite .",
    "the frchet metric for closed polygonal curves has been studied in a paper @xcite by alt and godau .",
    "they propose an algorithm that determines whether the distance between two closed polygonal curves with @xmath0 and @xmath1 vertices is greater than a given number  @xmath2 .",
    "the complexity of the algorithm is @xmath5 on a random access machine that performs arithmetical operations and computes square roots in constant time .",
    "our paper shows that the computational complexity of the problem is less than @xmath5 and provides an algorithm that takes @xmath3 time to solve the problem .",
    "the exact formulation of the problem is given in section [ definitions ] .",
    "sections [ diagrams ] describes the concepts of the original paper @xcite , which with slight modifications serve as the basis for our paper .",
    "the difference between the proposed and known approaches is specified at the end of section [ diagrams ] .",
    "sections [ achievability]-[resultsection ] describe the proposed approach .",
    "let @xmath6 be a linear space with the euclidean distance @xmath7 .",
    "a closed @xmath0-gonal curve @xmath8 is a pair @xmath9 where @xmath10 is a sequence @xmath11 , @xmath12 , and @xmath13 is a function @xmath14\\rightarrow\\mathbb{r}^k$ ] such that + @xmath15 for @xmath16 and @xmath17 .",
    "a cyclic shift of an interval @xmath14 $ ] by a value @xmath18 $ ] is a function @xmath19 \\rightarrow [ 0,m]$ ] that depends on a parameter @xmath20 such that @xmath21 for @xmath22 and @xmath23 for @xmath24 .    for any number @xmath0 let @xmath25 be the set of all monotonically non - decreasing continuous functions @xmath26\\rightarrow[0,m]$ ] such that @xmath27 .    a function @xmath28\\rightarrow \\mathbb{r}^k$ ]",
    "is called a monotone reparametrization of a closed @xmath0-gonal curve @xmath29 if a function @xmath30 and a number @xmath18 $ ] exist such that @xmath31 for all @xmath32 $ ] .    for given closed",
    "polygonal curves @xmath8 and @xmath33 denote @xmath34 and @xmath35 sets of their reparametrizations .",
    "the frchet distance between closed polygonal curves @xmath8 and @xmath33 is @xmath36    the problem consists in developing an algorithm that determines whether @xmath37 for given closed polygonal curves @xmath8 and @xmath33 and a number  @xmath2 .",
    "the problem s analysis is based on the concept of a free space diagram introduced by alt and godau @xcite in the following way . for two numbers @xmath0 and @xmath1 let us define a rectangle @xmath38 \\times [ 0,n]$ ] with points @xmath39 . for two closed polygonal curves @xmath8 and @xmath33 with @xmath0 and @xmath1 vertices and a number @xmath2 a subset @xmath40 is defined .",
    "let us also define a rectangle @xmath41 with its subset @xmath42 called a free space .",
    "denote @xmath43 , @xmath44 , @xmath45 and @xmath46 the top , bottom , left and right sides of the rectangle @xmath47 .",
    "denote @xmath48 a subset @xmath49 \\times [ j-1,j]$ ] and call it a cell .",
    "[ monotony ] a monotone non - decreasing path ( or simply , a monotone path ) is a connected subset @xmath50 such that @xmath51 for any two points @xmath52 , @xmath53 .",
    "note that this definition allows a monotone path to contain vertical segments .",
    "that is why a condition @xmath51 is used instead of standard form @xmath54 of the definition of a non - decreasing function @xmath55 .",
    "two points @xmath56 and @xmath57 are mutually reachable if and only if a monotone path @xmath58 exists such that @xmath52 , @xmath53 .",
    "a point @xmath59 is reachable from the bottom if it is reachable from at least one point from @xmath44 ; a point @xmath59 is reachable from the top if it is reachable from at least one point of @xmath43",
    ".    denote @xmath60 a set of points reachable from the bottom and @xmath61 a set of points reachable from the top .",
    "let us define two pointer functions @xmath62 $ ] and @xmath63 $ ] .",
    "for @xmath64 the pointer @xmath65 is the maximum value @xmath66 such that @xmath67 is reachable from @xmath68 .",
    "for @xmath69 the pointer @xmath70 is the maximum value @xmath66 such that @xmath67 is reachable from @xmath71 .",
    "for @xmath72 the pointer @xmath73 equals @xmath74 .",
    "figure [ fig1 ] illustrates the introduced concepts and designations . +    ]    .",
    "+ @xmath75 is the rightmost reachable point on @xmath43 from @xmath76 .",
    "+ @xmath77 is the rightmost reachable point on @xmath44 from @xmath78 . ]",
    "we rely on the following lemma proved in the paper @xcite by alt and godau ( see lemma 9 @xcite ) .",
    "[ altfirst ] the distance between closed polygonal curves @xmath8 and @xmath33 is not greater than @xmath2 if and only if there exists a number @xmath79 $ ] , such that the points @xmath80 and @xmath81 are mutually reachable .",
    "the following lemma is similar to lemma 10 @xcite as well as its proof .",
    "[ oursecond ] two points @xmath82 and @xmath83 are mutually reachable if and only if + @xmath84 , @xmath85 , @xmath86 , @xmath87 .    obviously , if @xmath82 and @xmath83 are mutually reachable then @xmath84 , @xmath85 and @xmath86 , @xmath87 .",
    "the reverse implication is also valid , which is illustrated by figure [ fig5 ] .     and",
    "@xmath88    let @xmath89 be a monotone path from @xmath90 to @xmath91 and @xmath92 be a monotone path from @xmath93 to @xmath94 .",
    "both paths are connected subsets that due to conditions @xmath86 , @xmath87 intersect in at least one point @xmath95 .",
    "let us consider a path @xmath58 that consists of a segment of @xmath96 from @xmath93 to @xmath95 and a segment of @xmath97 from @xmath95 to @xmath98 .",
    "the path @xmath58 is monotone , it is contained inside @xmath99 and connects @xmath93 and @xmath98 .    according to lemmas [ altfirst ] and [ oursecond ] testing condition @xmath37",
    "is reduced to finding value @xmath74 that fulfills @xmath100    the pointer functions @xmath101 and @xmath102 are similar to the pointers defined by alt and godau .",
    "however , the pointer function @xmath101 takes values from @xmath43 and function @xmath102 takes values from @xmath44 , while alt and godau consider pointers with values from @xmath103 and with values from @xmath104 .",
    "the alt s and godau s pointers allow to use a divide and conquer type algorithm that merges either vertically or horizontally two diagrams with known pointers and obtains a bigger diagram with pointers for the new diagram .",
    "the pointers can be computed in @xmath105 time for diagrams containing only one cell . by sequentially merging smaller diagrams into bigger ones ,",
    "the pointers for the whole diagram can be obtained in @xmath5 time .    in this paper",
    "we rely on a recurrent relation between pointer values @xmath101 and @xmath102 on cell borders .",
    "it is trivial to compute @xmath101 on @xmath43 and @xmath102 on @xmath44 .",
    "our algorithm does not use the divide and conquer approach but proceeds cell by cell .",
    "it propagates pointers on each cell s borders using the recurrent relation and eventually obtains the values @xmath101 on @xmath44 and @xmath102 on @xmath43 in @xmath106 time .",
    "for each @xmath107 and @xmath108 denote @xmath109 and @xmath110 the top and right borders of a square cell @xmath111 \\times [ j-1,j]$ ] and extend these denotations so that @xmath112 is a bottom border of @xmath113 and @xmath114 is a left border of @xmath115 .",
    "let us designate @xmath116    in order to test ( [ ourdecision ] ) the sets @xmath117 , @xmath118 and functions @xmath101 , @xmath102 have to be expressed with a finite data structure .",
    "it is significant that intersection @xmath119 is convex for each pair @xmath120 @xcite .",
    "it is not difficult to prove that for each pair @xmath120 the intersections @xmath121 , @xmath122 are also convex , so that each of these intersections is a single interval ( line segment ) on the border of @xmath48 .",
    "simple recurrent relations hold for these intervals , so that intervals @xmath121 and @xmath122 can be computed based on @xmath123 and @xmath124 as well as @xmath125 and @xmath126 can be computed based on @xmath127 and @xmath128 .",
    "the algorithm 1 described in @xcite for slightly different purposes is an example of this computation .",
    "each step of the recursion takes constant time , consequently , computing intersections @xmath121 , @xmath122 , @xmath125 and @xmath126 for all @xmath120 takes @xmath106 time .",
    "therefore , from now on it is assumed that these line segments are available .    as for the functions @xmath101 and",
    "@xmath102 they require more detailed analysis .",
    "let us define partial ordering @xmath129 on the set @xmath47 such that @xmath130 if and only if @xmath131 and @xmath132",
    ". on each subset @xmath133 and @xmath134 relation @xmath129 is a complete ordering .",
    "therefore , for each closed subset @xmath135 and for each closed subset @xmath136 a symbol @xmath137 will be used as a designation of such point @xmath138 that @xmath139 for each @xmath140 .",
    "both @xmath102 and @xmath101 are monotone functions of their argument in a sense of the following lemma .",
    "[ mymonotony ] + let @xmath141 .",
    "if @xmath130 then @xmath142 . + let @xmath143 . if @xmath130 then @xmath144 .",
    "let @xmath145 and @xmath146 be two monotone paths that connect @xmath78 with @xmath147 and @xmath76 with @xmath148 respectively .",
    "let us assume that @xmath149 . as figure  [ fig6 ] shows the paths @xmath145 and @xmath146 intersect at some point @xmath150 .",
    "therefore , a monotone path that connects @xmath151 with @xmath147 exists .",
    "this path consists of a segment of @xmath145 from @xmath147 to @xmath150 and a segment of @xmath146 from @xmath150 to @xmath76 .",
    "this means that the point @xmath151 is reachable from a point that is located to the right of the point @xmath148 .",
    "this contradicts with the definition of function @xmath102 .",
    "therefore , the assumption @xmath149 is proved to be wrong and the first statement of the theorem is proved .",
    "the proof of the second statement is similar .    ]    due to convexity of @xmath119 and monotonicity of functions @xmath102 and @xmath101 they satisfy the following recursive relations that will allow to use some sort of dynamic programming for their computation . for @xmath152",
    "it holds that @xmath153 and for @xmath154 @xmath155 relations ( [ recgendown ] ) and ( [ ( recgenup ) ] ) immediately result in the following lemma .",
    "[ constancy ] for each pair @xmath156 , @xmath157 the pointer @xmath102 is constant on @xmath122 and the pointer @xmath101 is constant on @xmath125 .    for each pair of points @xmath158 and @xmath159 the condition @xmath160 in ( [ recgendown ] ) is fulfilled and may be omitted . for each point",
    "@xmath161 a point @xmath162 exists such that @xmath163 .",
    "consequently , this condition in ( [ recgendown ] ) also may be omitted .",
    "relation ( [ recgendown ] ) becomes @xmath164 and @xmath70 does not depend on @xmath74 and @xmath165 , which proves the first statement of the lemma . + for each pair of points @xmath166 and @xmath167 the condition @xmath168 in ( [ ( recgenup ) ] ) is fulfilled and may be omitted .",
    "for each point @xmath169 a point @xmath170 exists such that @xmath171 .",
    "consequently , this condition in ( [ ( recgenup ) ] ) also may be omitted .",
    "relation ( [ ( recgenup ) ] ) becomes @xmath172 which proves the second statement of the lemma",
    ".    now relation ( [ recgendown ] ) can be written in more detail .",
    "0.47     0.47     let @xmath173 be the constant value of the pointer function @xmath102 on @xmath124 for some @xmath120 and @xmath174 = \\left\\{u{\\;\\big\\lvert\\;}(u , j-1 ) \\in g_\\downarrow \\cap b_{ij }   \\right\\}\\ ] ] as it is shown on fig [ figrecursive_tb ] .",
    "+ if @xmath175 then for @xmath152 @xmath176 if @xmath177 then for @xmath178 and for @xmath161    r_(u , j ) = r^ * & @xmath179 , [ recursion2 ] + r_(u , j-1 ) & @xmath180 , [ recursion3 ] + r_(b , j-1 ) & @xmath181 , [ recursion4 ]    @xmath182    similarly , relation ( [ ( recgenup ) ] ) can be specified .",
    "let @xmath173 be the constant value of the pointer function @xmath101 on @xmath127 for some @xmath120 and @xmath174 = \\left\\{v{\\;\\big\\lvert\\;}(i , v ) \\in g^\\uparrow \\cap r_{ij}\\right\\}\\ ] ] as it is shown on fig [ figrecursive_lr ] .",
    "+ if @xmath183 then for @xmath154 @xmath184 if @xmath185 then for @xmath186 and for @xmath187    r^(i-1,v)= r^ * & @xmath188 , [ recursion7 ] + r^(i , v ) & @xmath189 , [ recursion8 ] + r^(i , a ) & @xmath190 , [ recursion9 ]    @xmath191    the following lemma [ quantityofintsimilar ] states that restriction of @xmath101 to @xmath128 is a piecewise constant function .",
    "lemma [ quantityofint ] states that the restriction of @xmath102 to @xmath121 is also piecewise constant with the exception of at most one interval , where it is linear .    for any set",
    "@xmath192 we say that @xmath193 is a partition of @xmath192 if @xmath194 and @xmath195 for each pair @xmath196 , @xmath197 .    [ quantityofintsimilar ] for each @xmath120 a partition @xmath198 of the set @xmath128 to intervals exists such that the function @xmath101 is constant on each interval in @xmath198 ; moreover , @xmath199 .    indeed , either @xmath200 is empty or pointer @xmath101 is constant on @xmath200 and equals @xmath201 .",
    "therefore , @xmath202 consists of no more than one interval .",
    "it follows from recursive relations ( [ recursion6])-([recursion10 ] ) that there are no more than two intervals that belong to @xmath203 and do not belong to @xmath198 .",
    "the first interval comes from ( [ recursion7 ] ) .",
    "the second interval comes from ( [ recursion9 ] ) .",
    "the pointer @xmath204 is constant on each of these two intervals .",
    "therefore , @xmath205 , @xmath206 , and finally @xmath207 .",
    "[ quantityofint ] for each @xmath120 a partition @xmath208 of @xmath121 into intervals exists with the following properties : +  there is no more than one interval @xmath209 such that @xmath210 on @xmath211 ; +  function @xmath102 is constant on all other intervals ; +  moreover , @xmath212 .    by definition ,",
    "@xmath213 for each @xmath214 .",
    "therefore , partition @xmath215 consists of no more than one interval .",
    "it follows from recursive relations ( [ recursion1])-([recursion5 ] ) that there are no more than two intervals that belong to @xmath208 and do not belong to @xmath216 .",
    "the first of them is included according to relation ( [ recursion2 ] ) .",
    "the second interval appears in partition @xmath208 when @xmath217 in relation ( [ recursion4 ] ) .",
    "the function @xmath218 is constant on each of these two intervals .",
    "therefore , @xmath219 , @xmath220 , and finally @xmath221 .",
    "according to lemma [ constancy ] the set @xmath222 and the restriction of a function @xmath101 to this set can be expressed with subsets @xmath223 , @xmath224 , and values @xmath225 of a function @xmath101 on these subsets . according to lemma [ quantityofint ]",
    "the set @xmath226 and the restriction of @xmath102 to this set can be expressed with the sets @xmath227 of intervals @xmath211 and with numbers @xmath228 , where @xmath229 , @xmath224 .",
    "numbers @xmath228 determine the function @xmath102 on @xmath211 so that if @xmath228 is less than the right endpoint of @xmath211 then @xmath230 for all @xmath231",
    ". otherwise , @xmath232 for all @xmath231 .",
    "[ testingofmaininequality ] let @xmath8 and @xmath33 be closed polygonal curves and for each @xmath233 the following data be known : + - the set @xmath234 with pointer @xmath225 ; + - partition @xmath235 of @xmath236 ; + - value @xmath228 for each interval @xmath237 ; + then testing @xmath37 takes @xmath3 time .",
    "according to lemmas [ altfirst ] and [ oursecond ] , inequality @xmath37 is equivalent to the existence of a number @xmath79 $ ] that fulfills ( [ ourdecision ] ) .",
    "such @xmath74 exists if and only if a triple @xmath238 , @xmath237 , @xmath79 $ ] exists that fulfills conditions @xmath239 the condition @xmath240 in ( [ ourdecisionconcretenew ] ) can be replaced with condition @xmath241 independently of whether the pointer @xmath242 takes constant value @xmath228 on @xmath211 or @xmath232 . in both cases ,",
    "condition ( [ ourdecisionconcretenew ] ) is equivalent to @xmath243 or in more detail @xmath244 where @xmath245 and @xmath246 are the left and right endpoints of the interval @xmath211 and @xmath247 and @xmath248 are the horizontal coordinates of the leftmost and the rightmost points of @xmath234 . in turn ,",
    "a triple @xmath238 , @xmath237 , @xmath79 $ ] that satisfies ( [ ourdecisionweekconcrete2 ] ) exists iff a pair @xmath238 , @xmath237 exists that satisfies @xmath249 testing the last inequality takes constant time for any pair @xmath250 . according to lemma [ quantityofint ] the number of intervals tested for each @xmath251 does not exceed @xmath252",
    "therefore , the number of tested pairs @xmath250 is @xmath3 .",
    "the partition of @xmath43 and @xmath44 into intervals that represent @xmath101 and @xmath102 is obtained by two similar independent algorithms called the forward and backwards pass .",
    "both passes consist of @xmath253 steps and in each step compute a pointer function on a border of some cell . from now on we will refer to the pair @xmath254 as the number of the step",
    ".    the forward pass proceeds cell by cell from left to right and from bottom to top and computes pointers @xmath102 on @xmath133 based on pointers @xmath102 on @xmath134 according to ( [ recursion1])-([recursion4 ] ) starting from cell @xmath255 .",
    "the result of the forward pass are the partitions of @xmath256 , @xmath257 , that represent @xmath102 on @xmath43 .",
    "similarly , the backward pass starts from cell @xmath258 and proceeds from right to left and from top to bottom and computes @xmath101 on @xmath134 based on @xmath101 on @xmath133 according to ( [ recursion6])-([recursion9 ] ) .",
    "the result of the backward pass are the constant values @xmath225 of the pointer function @xmath101 on @xmath234 for @xmath257 .    during",
    "the forward pass the function @xmath102 on @xmath121 as the partition @xmath208 of @xmath109 is stored in the following data structure .",
    "the function @xmath102 on each interval @xmath259 is represented by a triple @xmath260 , where @xmath261 and @xmath262 are the endpoints of interval @xmath211 and @xmath228 has the meaning defined right before lemma [ testingofmaininequality ] .",
    "the triples @xmath263 sorted by their endpoints are stored in a double - ended queue ( deque ) with the following operations performing in constant time : +  reading and removing either the leftmost or the rightmost triple ; +  pushing a triple either to the left or to the right end of the deque .",
    "+ for a given number @xmath264 the operations of cutting the deque to the left of @xmath264 and cutting to the right of @xmath264 are defined .",
    "cutting to the left of @xmath264 means removing all triples @xmath263 where @xmath265 from the deque and replacing a triple @xmath263 where @xmath266 with a triple @xmath267 .",
    "cutting to the right of @xmath264 means removing all triples @xmath263 where @xmath268 and replacing a triple @xmath263 where @xmath269 either with a triple @xmath270 if @xmath271 , or with a triple @xmath272 if @xmath273 .",
    "since the triples in the deque are sorted , the time spent on cutting the deque is proportional to the number of triples removed from the deque .",
    "note that each cut of the deque performs only one push to the deque .",
    "the partitions @xmath198 of the sets @xmath274 and functions @xmath101 on @xmath274 are stored in the same data structures .",
    "of course , instead of the leftmost and the rightmost triple there are the lowest and the highest triple .",
    "the forward and the backward passes rely on the sets @xmath122 , @xmath121 , @xmath275 and @xmath276 to be precomputed",
    ". it has been mentioned at the beginning of section [ achievability ] that these sets can be computed in a straightforward way .",
    "the forward pass works with @xmath201 deques @xmath277 , @xmath278 , whose content depends on the number @xmath120 of the step .",
    "the @xmath120-th step starts with the known value @xmath279 of @xmath102 on @xmath280 and with @xmath277 representing @xmath102 on @xmath281 .",
    "the @xmath120-th step updates the deque @xmath277 to represent @xmath102 on @xmath109 and computes the constant value @xmath282 of @xmath102 on @xmath110 .    as it has been shown during the proof of lemma [ quantityofint ] a partition of non - empty set @xmath283 consists of a single interval .",
    "therefore , at the start of the @xmath284-th step the deque @xmath277 is either empty ( if @xmath285 ) or includes a single triple @xmath286 where @xmath287 and @xmath288 are the horizontal coordinates of the leftmost and the rightmost points in @xmath283 .",
    "the pointers @xmath289 are obviously equal to @xmath290 for each non - empty @xmath291 .    when all four sets @xmath122 , @xmath121 , @xmath124 , @xmath123 are non - empty the update of @xmath277 and the computation of @xmath282 is done as follows .",
    "let @xmath174 = \\left\\{u{\\;\\big\\lvert\\;}(u , j-1 ) \\in g_\\downarrow \\cap b_{ij }   \\right\\ } , \\quad [ c , d ] = \\left\\{u{\\;\\big\\lvert\\;}(u , j ) \\in g_\\downarrow \\cap t_{ij }     \\right\\},\\ ] ] 1 . *",
    "if * @xmath292 * then * push @xmath293 to the left end of @xmath277 ; + 2 . cut @xmath277 to the left of @xmath294 ; + 3 . read a triple @xmath295 from the right and save the value @xmath173 ; + 4 . * if * @xmath296 * then * push @xmath297 to the right end of @xmath277 ; + 5 .",
    "cut @xmath277 to right of @xmath298 ; + 6 .",
    "+ the operations 1 , 4 and 6 represent relations ( [ recursion2 ] ) , ( [ recursion4 ] ) and ( [ recursion5 ] ) directly .",
    "the relation ( [ recursion3 ] ) is represented with operations 2 and 4 indirectly in a sense that the uncut part of @xmath277 remains unchanged .",
    "it is not necessary to consider all special cases when some of the sets @xmath122 , @xmath121 , @xmath124 , @xmath123 are empty . in each of these cases the @xmath120-th step",
    "consists of some part of operations 1 - 6 or their slight modifications . since we are mainly interested in the computational complexity of the algorithm , considering the above described complete case is sufficient .",
    "one can see that one step of the forward pass does not perform in constant time due to the cutting of the deque that can take @xmath300 time for the @xmath120-th step .",
    "nevertheless , the complexity of the forward pass is @xmath3 as the following lemma states .",
    "[ complexityforward ] it takes @xmath3 time to complete the forward pass .",
    "the forward pass starts with initializing the deques @xmath277 , @xmath301 , and the pointers @xmath302 , @xmath303 .",
    "evidently , it takes @xmath304 time .",
    "no more than three triples are pushed in deque on each step .",
    "one triple is pushed either with operation 1 or with operation 2 , the second is pushed either with operation 4 or with operation 5 .",
    "the third push is made with operation 3 because the triple that was read and removed from the deque has to be returned to the deque .",
    "therefore , no more than @xmath305 triples are pushed during all steps .",
    "reading and removing triples are fulfilled with operations 2 , 3 and 4 .",
    "number of these operations in @xmath120-th step may differ from number of insertions in this step .",
    "however , the number of readings and removing during the whole forward pass can not exceed the total number of insertions , consequently , can not be greater than @xmath305 .",
    "the backward pass works with @xmath1 deques @xmath306 , @xmath307 , whose content depends on the number @xmath120 of the step .",
    "the @xmath120-th step starts with the known value @xmath282 of the pointer @xmath101 on @xmath127 and with the deque @xmath306 representing @xmath101 on @xmath128 .",
    "the @xmath120-th step updates @xmath306 to represent @xmath101 on @xmath126 and computes the value @xmath308 of the pointer @xmath101 on @xmath125 .    when all four sets @xmath128 , @xmath127 , @xmath126 , @xmath309 are non - empty the update of @xmath306 is done as follows .",
    "let @xmath174 = \\left\\{v{\\;\\big\\lvert\\;}(i , v ) \\in g^\\uparrow \\cap r_{ij }   \\right\\ } , \\quad [ c , d ] = \\left\\{v{\\;\\big\\lvert\\;}(i-1,v ) \\in g^\\uparrow \\cap l_{ij } \\right\\},\\ ] ] 1 . * if * @xmath310 * then * push @xmath311 to the upper end of @xmath306 ; + 2 .",
    "@xmath306 is cut to the up of @xmath298 ; + 3 . read a triple @xmath295 from the lower end and save the value @xmath173 ; + 4 . *",
    "if * @xmath312 * then * push @xmath313 to the lower end of @xmath306 ; ; + 5 . cut @xmath306 down of @xmath294 ; + 6 .",
    "+ the operations 1 , 4 and 6 represent relations ( [ recursion7 ] ) , ( [ recursion9 ] ) and ( [ recursion10 ] ) directly . the relation ( [ recursion8 ] )",
    "is represented with operations 2 and 5 indirectly in a sense that the uncut part of @xmath306 remains unchanged .",
    "[ complexitybackward ] it takes @xmath3 time to complete the backward pass .    the proof is based on the same considerations as the proof of lemma [ complexityforward ] .",
    "let @xmath8 and @xmath33 be closed polygonal curves with @xmath0 and @xmath1 vertices and @xmath315 be the frchet distance between them . testing the inequality @xmath37 takes @xmath3 time .",
    "testing the inequality @xmath37 is reduced to the following computations .",
    "+ computing the sets @xmath316 and @xmath317 , @xmath318 , @xmath319 , is reduced to solving @xmath253 quadratic equations and takes @xmath106 time .",
    "+ computing subsets @xmath320 and @xmath223 , @xmath321 , takes @xmath3 time .",
    "+ due to lemma [ complexityforward ] computing the restrictions of @xmath102 to @xmath320 takes @xmath3 time .",
    "+ due to lemma [ complexitybackward ] computing the restrictions of @xmath101 to @xmath223 takes @xmath3 time .",
    "+ due to lemma [ testingofmaininequality ] testing the inequality @xmath37 based on these data takes @xmath3 time .      helmut alt and michael godau . computing the frchet distance between two polygonal curves . , 5:7591 , 1995 .",
    "jingying chen , maylor k.  h. leung , and yongsheng gao .",
    "noisy logo recognition using line segment hausdorff distance .",
    ", 36(4):943955 , 2003 ."
  ],
  "abstract_text": [
    "<S> the article analyzes similarity of closed polygonal curves with respect to the frchet metric , which is stronger than the well - known hausdorff metric and therefore is more appropriate in some applications . </S>",
    "<S> an algorithm is described that determines whether the frchet distance between two closed polygonal curves with @xmath0 and @xmath1 vertices is less than a given number  @xmath2 . </S>",
    "<S> the algorithm takes @xmath3 time whereas the previously known algorithms take @xmath4 time . </S>"
  ]
}
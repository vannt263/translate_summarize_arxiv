{
  "article_text": [
    "the stochastic block model is one of the oldest and most ubiquitous models for studying clustering and community detection .",
    "it was first introduced by holland et al .",
    "@xcite more than thirty years ago and since then it has received considerable attention within statistics , computer science , statistical physics and information theory .",
    "the model defines a procedure to generate a random graph : first , each of the @xmath0 nodes is independently assigned to one of @xmath1 communities , where @xmath2 is the probability of being assigned to community @xmath3 .",
    "next , edges are sampled independently based on the community assignments : if nodes @xmath4 and @xmath5 belong to communities @xmath3 and @xmath6 respectively , the edge @xmath7 occurs with probability @xmath8 independent of all other edges , where @xmath9 is an @xmath10 symmetric matrix .",
    "the goal is to recover the community structure  either exactly or approximately  from the graph .    since its introduction",
    ", the stochastic block model has served as a testbed for the diverse range of algorithms that have been developed for clustering and community detection , including combinatorial methods @xcite , spectral methods @xcite , mcmc @xcite , semidefinite programs @xcite and belief propagation @xcite .",
    "recently , the stochastic block model has been thrust back into the spotlight , the goal being to establish tight thresholds for when community detection is possible , and to find algorithms that achieve them . towards this end ,",
    "decelle et al .",
    "@xcite made some fascinating conjectures ( which have since been resolved ) in the case of two equal - sized communities with constant average degree , that we describe next .    throughout this paper , we will focus on the two - community case and use @xmath11 and @xmath12 to denote the within - community and between - community connection probabilities respectively .",
    "we will be interested in the sparse setting where @xmath13 .",
    "moreover we set @xmath14 , so that the two communities are roughly equal - sized , and we assume @xmath15 ( although we discuss the case @xmath16 in appendix  [ sec : dissortative ] ) .",
    "we will use @xmath17 to denote the corresponding random graph model .",
    "the setting of parameters above is particularly well - motivated in practice , where a wide variety of networks have been observed @xcite to have average degree that is bounded by a small constant .",
    "it is important to point out that when the average degree is constant , it is impossible to recover the community structure exactly in the stochastic block model because a constant fraction of nodes will be isolated .",
    "instead , our goal is to recover a partition of the nodes into two communities that has non - trivial agreement ( better than random guessing ) with the true communities as @xmath18 , and we refer to this as _ partial recovery_.    @xcite if @xmath19 then partial recovery in @xmath17 is possible , and if @xmath20 then partial recovery is information - theoretically impossible .",
    "this conjecture was based on deep but non - rigorous ideas originating from statistical physics , and was first derived heuristically as a stability criterion for belief propagation .",
    "this threshold also bears a close connection to known thresholds in the broadcast tree model , which is another setting in which to study partial recovery .",
    "we formally define the broadcast tree model in section  [ sec : prelim ] , but it is a stochastic process described by two parameters @xmath21 and @xmath22 .",
    "kesten and stigum @xcite showed that partial recovery is possible if @xmath19 , and much later evans et al .",
    "@xcite showed that it is impossible if @xmath23 .",
    "the connection between the two models is that in the stochastic block model , the local neighborhood of a node resembles the broadcast tree model , and this was another compelling motivation for the conjecture .    in an exciting sequence of developments , mossel , neeman and",
    "sly @xcite proved a lower bound that even distinguishing @xmath17 from an erds  rnyi graph @xmath24 is information - theoretically impossible if @xmath23 , by a careful coupling to the broadcast tree model .",
    "subsequently mossel , neeman and sly @xcite and massouli @xcite independently gave matching algorithms that achieve partial recovery up to this threshold , thus resolving the conjecture !",
    "mossel , neeman and sly @xcite later showed that for some constant @xmath25 , if @xmath26 then belief propagation works and moreover the agreement of the clustering it finds is the best possible .",
    "in fact , many other sorts of threshold phenomena have been found in different parameter regimes .",
    "abbe , bandeira and hall @xcite studied exact recovery in the logarithmic degree setting @xmath27 and showed that it is efficiently possible to recover the two communities exactly if @xmath28 and information - theoretically impossible if @xmath29 .",
    "abbe and sandon @xcite gave a precise characterization of when exact recovery is possible in the general stochastic block model for more than two communities with arbitrary relative sizes and arbitrary connection probabilities .",
    "this abundance of sharp thresholds begs a natural question : how robust are these reconstruction thresholds ?",
    "it is clear that if one substantially changes the distributional model , the thresholds themselves are likely to change .",
    "however there is a subtler issue .",
    "the algorithms that achieve these thresholds may in principle be over - fitting to a particular distributional model .",
    "random graphs are well - known @xcite to have rigid properties , such as sharp laws for the distribution of subgraph counts and a predictable distribution of eigenvalues .",
    "real - world graphs do not have such properties .    in a remarkable paper , blum and spencer",
    "@xcite introduced the semirandom model as an intermediary between average - case and worst - case analysis , to address such issues .",
    "the details of the model vary depending on the particular optimization problem , and since we will focus on clustering we will be most interested in the variant used by feige and kilian @xcite .",
    "the adversary above is called ` monotone ' because it is restricted to making changes that seem to be helpful .",
    "it can only strengthen ties within each community , and break ties between them .. if we had @xmath30 we could define the adversary in the opposite way ( which we analyze in appendix  [ sec : dissortative ] ) . ]",
    "the key is that a monotone adversary can break the sorts of rigid structures that arise in random graphs , such as predictable degree distributions and subgraph counts .",
    "an algorithm that works in a semirandom model can no longer rely on these properties . instead of a graph containing",
    "_ only _ random edges , all we are assured of is that it contains _ some _ random edges .    in this paper",
    ", we use semirandom models as our notion of ` robustness . '",
    "many forms of robustness exist in the literature  for example , the independent work @xcite gives algorithms that are robust to @xmath31 non - monotone changes in addition to monotone changes . with most robustness models , any algorithm will break down after enough errors , and one can compare algorithms based on how many errors they can tolerate . in contrast , semirandom models distinguish between algorithms _",
    "qualitatively _ : as we will see , entire classes of algorithms continue to work under any number of monotone changes , while others do not .",
    "feige and kilian @xcite showed that semidefinite programs for _ exact recovery _ in the stochastic block model continue to work in the semirandom model  in fact they succeed up to the threshold for the random model @xcite .",
    "since then , there have been many further developments including algorithms that work in semirandom models for planted clique @xcite , unique games @xcite , various graph partitioning problems @xcite , correlation clustering @xcite and the general planted partition model for all @xmath3 and @xmath32 for all @xmath33 , with @xmath15 , but the number of communities and their relative sizes are arbitrary constants . ] @xcite ( and in some cases for even more powerful adversaries ) .",
    "a common theme is that if you have a semidefinite program that works in some stochastic setting , then it often extends almost automatically to the semirandom setting .",
    "so are there semidefinite programs that achieve the same sharp partial recovery results as mossel , neeman and sly @xcite and massouli @xcite , and that extend to the semirandom model too ? or is there a genuine gap between what is achievable in the random vs.  the semirandom setting ?      recall that in the semirandom block model , a monotone adversary observes a sample from the stochastic block model and is then allowed to add edges within each community and delete edges that cross between communities .",
    "we will design a particularly simple adversary to prevent an algorithm from utilizing the paths of length two that go from a ` @xmath34 ' node to a ` @xmath35 ' node and back to a ` @xmath34 ' node , where the middle node has degree two .",
    "our adversary will delete any such path it finds ( with some additional technical conditions to locally coordinate these modifications ) , and our main result is that , surprisingly , this simple modification strictly changes the partial recovery threshold .",
    "we will state our bounds in terms of the average degree @xmath36 and ` noise ' @xmath37 , in which case the threshold @xmath38 becomes @xmath39 .",
    "note that this threshold requires @xmath40 .",
    "then :    [ thm : intro - main ] for any @xmath40 , there exists @xmath41 so that @xmath42 and hence partial recovery in the stochastic block model @xmath17 is possible , and yet there is a monotone adversary so that partial recovery in the semirandom model is information - theoretically impossible .",
    "a common tool in the algorithms of mossel , neeman and sly @xcite and of massouli @xcite is the use of non - backtracking walks and spectral bounds for their transition matrices .",
    "our adversary explicitly deletes a significant number of these walks .",
    "this simple modification not only defeats these particular algorithms , but we can show that _ no _ algorithm can achieve partial recovery up to the threshold @xmath43 . to the best of our knowledge ,",
    "this is the first explicit separation between what is possible in the random model vs.  the semirandom model , for _ any _ problem with a monotone adversary .",
    "we show a complementary result , that no monotone adversary can make the problem too much harder .",
    "various semidefinite programs have been designed for partial recovery .",
    "these algorithms work in the constant - degree regime , but are not known to work all the way down to the information - theoretic threshold . in particular , we follow gudon and vershynin @xcite and show that their analysis ( with a simple modification ) works as is for the semirandom model .",
    "this shows that semidefinite programs not only give rise to algorithms that work for the semirandom model in the exact recovery setting , but also for partial recovery too under some fairly general conditions .",
    "[ thm : intro - robust - sdp ] let @xmath36 and @xmath44 .",
    "there is a constant @xmath45 so that if @xmath46 and @xmath47 then partial recovery is possible in the semirandom block model .",
    "moreover it can be solved in polynomial time .",
    "our robustness proof only applies to a particular form of sdp analysis .",
    "given a different proof that the sdp succeeds in the random model for a larger range of parameters @xmath48 than above , there would be no guarantee that the sdp also succeeds in the semirandom model for that range of parameters .",
    "hence we can not formally conclude that it is impossible for the sdp to reach the information - theoretic threshold in the random model , though our results are suggestive in this direction .",
    "we remark that each possible monotone adversary yields a new distribution on planted community detection problems .",
    "hence , we can think of the algorithm in the theorem above as one that performs almost as well as information - theoretically possible across an entire family of distributions , simultaneously .",
    "this is a major advantage to algorithms based on semidefinite programming , and points to an interesting new direction in statistics .",
    "can we move beyond average - case analysis ?",
    "can we find robust , semirandom analogues to some of the classical , average - case thresholds in statistics ?",
    "the above two theorems establish upper and lower bounds for this semirandom threshold , that show that it is genuinely different from the average - case threshold .",
    "the usual notion of a threshold makes sense when we have exact knowledge of the process generating the instances we wish to solve .",
    "but when we lack this knowledge , semirandom models offer an avenue for exploration that can lead to new algorithmic and statistical questions .    along the way to proving our main theorem",
    ", we show a random vs.  semirandom separation for the broadcast tree model too .",
    "we define this model in section  [ sec : prelim ] . in short ,",
    "it is a stochastic process in which each node is given one of two labels and gives birth to @xmath49 nodes of the same label and @xmath50 nodes of the different label , with the goal being to guess the label of the root given the labels of the leaves .",
    "there are many ways we could define a monotone adversary , and we focus on a particularly weak one that is only allowed to cut edges between nodes with different labels .",
    "we call this the cutting adversary , and we prove :    [ thm : intro - treehard ] for any @xmath40 , there exists @xmath41 so that @xmath42 and hence partial recovery in the broadcast tree model is possible , and yet there is a monotone cutting adversary for which partial recovery in the semirandom broadcast tree model is information - theoretically impossible .",
    "furthermore we analyze the recursive majority algorithm and show that it is robust to an even more powerful class of monotone adversaries , which are allowed to entirely control the subtree at a node whose label is different than its parent .",
    "we call this a strong adversary , and we prove :    [ thm : intro - recmaj ] if @xmath51 and @xmath52 then partial recovery in the broadcast tree model is possible , even with respect to a strong monotone adversary , where ` @xmath53 ' is taken as @xmath54 .",
    "these results highlight another well - studied model where the introduction of a monotone adversary strictly changes what is possible .",
    "nevertheless there is an algorithm that succeeds across the entire range of distributions that arise from the action of a monotone adversary , simultaneously .",
    "interestingly , our robustness results can also be seen as a justification for why practitioners use recursive majority at all .",
    "it has been known for some time that recursive majority does not achieve the kesten  stigum bound @xcite  the threshold for reconstruction in the broadcast tree model  although taking the majority vote of the leaves does .",
    "the advantage of recursive majority is that it is robust to very powerful adversaries while majority is not , and this only becomes clear when studying these algorithms through semirandom models !",
    "here we formally define the models we will be interested in , as well as the notion of partial recovery .",
    "recall that @xmath55 denotes the stochastic block model on two communities with @xmath14 so that the communities are roughly equal sized .",
    "we will encode community membership as a _ label _ @xmath56 on each node @xmath5 .",
    "we will also refer to this as a _ spin _",
    ", following the convention in statistical physics .",
    "this numeric representation has the advantage that we can ` add ' spins in order to take the majority vote , and ` multiply ' them to compute the relative spin between a pair of nodes",
    ". we will be interested in the sparse regime @xmath13 where the graph has constant average degree , and we will assume @xmath15 .",
    "next , we formally define partial recovery in the stochastic block model . throughout this paper will will be interested in how our algorithms perform as @xmath0 ( number of nodes ) goes to @xmath57 .",
    "we say that an event holds a.a.s .",
    "( asymptotically almost surely ) if it holds with probability @xmath58 as @xmath59 .",
    "similarly , we say that an event happens for a.a.e .",
    "( asymptotically almost every ) @xmath60 if it holds with probability @xmath61 over a random choice of @xmath60 .",
    "we say that an assignment of @xmath62 spins to the nodes achieves * @xmath63-partial recovery * if at least @xmath64 of these spins match the true spins , or at least @xmath64 match after a global flip of all the spins .",
    "moreover , an algorithm that outputs a vector of spins @xmath65 ( indexed by nodes ) is said to _ achieve partial recovery _ and there exists @xmath66 such that @xmath67 achieves @xmath63-partial recovery a.a.s .",
    "in the limit @xmath59 .    next , we define the broadcast tree model ( which we introduced informally earlier ) . the broadcast tree model is a stochastic process that starts with a single root node @xmath68 at level @xmath69 whose spin @xmath70 is chosen uniformly at random . each node in turn gives birth to @xmath49 same - spin children and @xmath50 opposite - spin children , where @xmath71 is the poisson distribution with expectation @xmath72 .",
    "this process continues until level @xmath73 at which point it stops , and the nodes at level @xmath73 are called the _ leaves_. ( the nodes on level @xmath74 that by chance do not give birth to any children are not considered leaves , even though they are leaves in the graph - theoretic sense . )",
    "an algorithm observes the spins at the leaf nodes and the topology of the tree , and the goal is to recover the root spin :    an algorithm that outputs a spin @xmath75 is said to _ achieve partial recovery _ on the tree if there exists @xmath66 such that @xmath76 with probability at least @xmath63 , as @xmath77 .",
    "the reparameterization in terms of @xmath78 becomes particularly convenient here : each node gives birth to @xmath79 children , so @xmath80 is the average branching factor .",
    "moreover , each child has probability @xmath81 of having spin opposite to that of its parent .",
    "it is known that taking the majority vote of the leaves is optimal in theory , in the sense that it achieves partial recovery for @xmath43 @xcite and that for @xmath82 , partial recovery is information - theoretically impossible @xcite .",
    "this is called the kesten  stigum bound , and it can also be interpreted as a condition on the second - largest eigenvalue of an appropriately defined transition matrix .",
    "there are many other natural variants of the broadcast tree model , that are more general instances of multi - type branching processes . however , even for simple extensions , the precise information - theoretic threshold is still unknown . in the potts model , where nodes are labeled with one of @xmath83 labels , sly @xcite showed that the kesten  stigum bound is not tight , as predicted by mzard and montanari @xcite . and for an asymmetric extension of the binary model above , borgs et al .",
    "@xcite showed that the kesten  stigum bound is tight for some settings of the parameters . in our setting",
    ", this historical context presents a substantial complication because if we apply a monotone adversary to a broadcast tree model and it results in a complex propagation rule , there may not be good tools to prove that partial recovery is impossible .",
    "there is a close connection between the stochastic block model and the broadcast tree model , since the local neighborhood of any vertex in the graph is locally tree - like .",
    "hence , if our goal is to prove a random vs.  semirandom gap for community detection , a natural starting point is to establish such a gap for the broadcast tree model .",
    "it turns out that there is more than one natural way to define a monotone adversary for the broadcast tree model , but it will not be too difficult to establish lower bounds for either of them .",
    "the more difficult task is in finding an adversary that can plausibly be coupled to a corresponding adversary in the stochastic block model , and this will require us to put many sorts of constraints on the type of adversary that we should use to obtain a separation for the broadcast tree model .    in the broadcast tree model , we will work with two notions of a monotone adversary .",
    "one is weak and will be used to show our separation results :    our other adversary is stronger , and we will establish upper bounds against this adversary ( with the recursive majority algorithm ) to give a strong recoverability guarantee :    an upper bound against this latter model amounts to a recovery guarantee without any assumptions as to what happens after a ` mutation ' of labels  for example , a genetic mutation might affect reproductive fitness and change the birth rule for the topology",
    ". other variants of monotone adversaries could also be justified .",
    "[ [ majority - fails ] ] majority fails + + + + + + + + + + + + + +    it is helpful to first see how adversaries in these models might break existing algorithms .",
    "recall that in the broadcast tree model , taking the majority vote of the leaves yields an algorithm that works up to the kesten  stigum bound , and this is optimal since reconstruction is impossible beyond this . in the language of @xmath84 and @xmath85 ,",
    "each node gives birth to @xmath86 nodes of the same label and @xmath87 nodes of the opposite label .",
    "hence in a depth @xmath73 tree we expect @xmath88 leaves , but the total bias of the spins can be recursively computed as @xmath89 . the fact that majority works can be proven by applying the second moment method and comparing the bias to its variance .",
    "however , an overwhelming number of the leaves are on some path that has a flip in the label at some point : we only expect @xmath90 nodes with all - root - spin ancestry , a vanishing proportion as @xmath77 .",
    "the strong monotone adversary has control over all the rest , and can easily break the majority vote .",
    "even the monotone cutting adversary can control the majority vote , by cutting leaves whose spin matches the root but whose parents have the opposite label .",
    "this happens for a constant fraction of the leaf nodes , and this change overwhelms the majority vote .",
    "so majority vote fails against the semirandom model , for _ all _ nontrivial @xmath84 and @xmath85 .",
    "this is an instructive example , but we emphasize that breaking one algorithm does not yield a lower bound .",
    "for example , if the algorithm knew what the adversary were doing , it could potentially infer information about where the adversary has cut edges based on the degree profile , and could use this to guess the label of the root .",
    "[ [ the - problem - of - orientation ] ] the problem of orientation + + + + + + + + + + + + + + + + + + + + + + + + + +    many first attempts at a separation in the broadcast tree model ( which work ! )  rely on knowing the label of the root . however , such adversaries present a major difficulty in coupling them to a corresponding adversary in the graph .",
    "each graph gives rise to many overlapping broadcast trees ( the local neighborhood of each vertex ) and a graph adversary needs to simultaneously make all of these tree reconstruction problems harder .",
    "this means a graph adversary can not focus on trying to hide the spin of a specific tree root ; rather , it should act in a local , orientation - free way that inhibits the propagation of information in all directions .",
    "a promising approach is to look for nodes @xmath5 whose neighbors in @xmath91 all have the opposite label , and cut all of these edges .",
    "such nodes serve only to further inter - connect each community , and cutting their edges would seem to make community detection strictly harder . in the corresponding broadcast tree model",
    ", these nodes @xmath5 represent flips in the label that are entirely corrected back , and deleting them penalizes any sort of over - reliance on distributional flukes in how errors propagate .",
    "for example , majority reconstruction in the tree fully relies on predictable tail events whereby nodes with label different from the root may lead to subtrees voting in the correct direction nonetheless .",
    "[ [ the - problem - of - dependence ] ] the problem of dependence + + + + + + + + + + + + + + + + + + + + + + + + +    now , however , a different sort of problem arises : if we were to naively apply the adversary described above to a broadcast tree , this would introduce complicated distance-@xmath92 dependencies in the distribution of observed spins , as certain diameter-@xmath92 spin patterns are banned in the observed tree ( as they would have been cut ) . in particular , the resulting distribution is no longer a markov random field .",
    "this is not inherently a problem , in that we could still hope to prove stronger lower bounds for such models beyond the kesten  stigum bound .",
    "however , the difficulty is that even for quite simple models on a tree ( e.g.  the potts model @xcite , asymmetric binary channels @xcite ) the threshold is not known , and the lower bound techniques that establish the kesten  stigum bound seem to break down .",
    "an alternative is to specifically look for degree-@xmath92 nodes @xmath5 whose neighbors in @xmath91 have the opposite label , and cut both incident edges .",
    "although there are still issues about making this a markov random field , we can alleviate them by adding a @xmath93-clique potential on each degree-@xmath92 node and its two neighbors .",
    "then after we marginalize out the label of the degree-@xmath92 node , the @xmath93-clique potential becomes a @xmath92-clique potential , and we return to a markov random field over a tree ! in other words , if we ignore the spin on a degree-2 node and treat its two incident edges like a single edge , we return to a well - behaved spin propagation rule .",
    "we are now ready to describe the adversary that we will use to prove theorems  [ thm : intro - main ] and  [ thm : intro - treehard ] .",
    "we only need two additional adjustments beyond the discussion above .",
    "instead of making every possible degree-@xmath92 cutting move as described earlier , we will only cut with probability @xmath94 .",
    "we will tune @xmath94 to ensure that the monotone changes we make do not overshoot and accidentally reveal more information about the underlying communities by cutting in too predictable a fashion .",
    "finally , our adversary adds local restrictions to where and how it cuts , to ensure that the changes it makes do not overlap or interfere with each other ( e.g.  chains of degree-@xmath92 nodes ) .",
    "these details will not be especially relevant until section  [ sec : no - lrc ] , where they simplify the combinatorics of guessing the original precursor graph from the observed graph .",
    "[ dist : graph ]    let @xmath95 be given .",
    "write @xmath80 and @xmath81 .",
    "we sample a ` precursor ' graph @xmath96 , and apply the following adversary :    we can now outline the proof of our main theorem . in order to show that partial recovery is impossible , it suffices to show that it is impossible to reconstruct the relative spin ( same or different ) of two random nodes @xmath4 and @xmath5 , better than random guessing . before applying the adversary , an @xmath97-radius neighborhood @xmath98 around @xmath4",
    "resembles the broadcast tree model rooted at @xmath4 . after the adversary",
    "is applied to the graph , @xmath98 resembles a broadcast tree model with a corresponding cutting adversary applied .",
    "this resemblance will be made precise by the coupling argument of section  [ sec : coupling ] ; there will be some complications in this , and our tree will not be uniformly the same depth but will have a serrated boundary .",
    "we show in section  [ sec : treehard ] that when the cutting adversary is applied to the tree , the tree reconstruction problem ( guess the spin of @xmath4 from the spins on the boundary of @xmath98 ) becomes strictly harder : the average branching factor becomes lower due to sufficient cutting , while the new spin propagation rule resembles classical noisy propagation with at least as much noise ( so long as we marginalize out the spins of nodes ) .",
    "we then apply the proof technique of evans et al .",
    "@xcite to complete the tree lower bound .",
    "the final step in the proof is to show that reconstructing the relative spin of @xmath4 and @xmath5 is at least as hard as reconstructing the spin of @xmath4 given the spins on the boundary of @xmath98 ( which separates @xmath4 and @xmath5 with high probability ) .",
    "this is one of the most technically involved steps in the proof . in the lower bound for the random model @xcite , this step  called `` no long - range correlations ''  was already an involved calculation on a closed - form expression for @xmath99 . in our setting , in order to get a closed - form expression for the conditional probability , we will sum over all the possible precursor graphs @xmath91 that could have yielded the observed graph @xmath100 .",
    "we characterize these precursors in lemma  [ lemma : unsurgery ] , and the main reason for the and nodes in our adversary construction is to simplify this process .",
    "a natural open question is whether one can find the optimal monotone adversary .",
    "for instance , we have not even used the power to add edges within communities .",
    "note however , that our current adversary is delicately constructed in order to make each step of the proof tractable .",
    "it is not too hard to propose alternative adversaries that seem stronger , but it is likely that one of the major steps in the proof ( tree lower bound or no long - range correlations ) will become prohibitively complicated .",
    "recent predictions on the performance of sdp methods @xcite could be suggestive of the true semirandom threshold .",
    "it is well - known that sparse , random graphs are locally tree - like with very few short cycles .",
    "this is the basis of mossel  neeman ",
    "sly s approach in coupling between a local neighborhood of the stochastic block model and the broadcast tree model @xcite .",
    "hence , our first order of business will be to couple a typical neighborhood from our graph distribution ( distribution  [ dist : graph ] ) to the following tree model , against which we can hope to show lower bounds .    given the parameters @xmath101 , generate a tree @xmath102 with spins @xmath103 as follows : [ dist : tree ]    * start with a root vertex @xmath68 , with spin @xmath104 chosen uniformly at random from @xmath105 .",
    "* until a uniform depth @xmath106 ( where the root is considered depth 0 ) , let each vertex @xmath5 give birth to @xmath49 children of the same spin and @xmath50 children of opposite spin .",
    "* apply the graph adversary ( from distribution  [ dist : graph ] ) to this tree ; this involves assigning markings and , and cutting some nodes .",
    "keep only the connected component of the root . *",
    "remove all nodes of depth greater than @xmath73 ( the bottom @xmath93 levels ) . *",
    "remove any node at depth @xmath73 along with its siblings , exposing the parent as a leaf .",
    "the reason we trim @xmath93 levels at the bottom is to ensure that the markings and cuttings in @xmath102 match those in @xmath100 , since these depend on the radius-@xmath93 neighborhood of each node and edge , respectively . removing nodes at level @xmath73",
    "will ensure that the more complicated spin interactions of nodes and their neighbors do not span across the boundary of a tree neighborhood in the graph  we want to cleanly separate out a tree recovery problem .",
    "we use a slightly non - conventional definition of ` leaves ' :    [ def : leaves ] when we refer to the * leaves * of a tree sampled from distribution  [ dist : tree ] we mean the nodes at depth @xmath73 plus any nodes at depth @xmath107 that are revealed during the last step .",
    "nodes at depth @xmath74 that happen to give birth to no children are not considered leaves ; if the root is and gets cut by the adversary so that the tree is a single node , this single node is not considered a leaf .",
    "we can couple the above tree model to neighborhoods of the graph :    [ prop : coupling ] let @xmath95 be given , and let @xmath108 be any vertex of the graph .",
    "let @xmath109 there exists a joint distribution @xmath110 such that the marginals on @xmath111 and @xmath112 match the graph and tree models , respectively , while with probability @xmath58 :    * there exists an isomorphism ( preserving edges , spins , and the markings and ) between the tree @xmath102 and a vertex - subset @xmath98 of @xmath100 , * the tree root corresponds to the vertex @xmath108 in the graph , and the leaves correspond to a vertex set @xmath113 that separates the interior @xmath114 from the rest of the graph @xmath115 .",
    "* we have @xmath116 .    as proven in @xcite",
    ", there exists a coupling between the precursor graph @xmath117 and the precursor tree @xmath118 , such that @xmath119 matches the radius @xmath106 neighborhood @xmath98 of @xmath108 in @xmath91 , which has size @xmath120 ; this fails with probability @xmath53 .",
    "next the adversary assigns vertex markings ( and ) to both models .",
    "the marking of each vertex is deterministic and only depends on the topology of the radius-@xmath93 neighborhood of the vertex .",
    "thus the markings in @xmath91 and @xmath119 match up to radius @xmath73 .",
    "some nodes are _ cuttable _ , i.e.  both their neighbors have opposite spin ; the cuttable nodes in @xmath91 and @xmath119 also match up to radius @xmath73 .",
    "the adversary now cuts the edges incident to a random subset of cuttable vertices ; we can trivially couple the random choices made on @xmath91 with those on @xmath119 up to radius @xmath73 .",
    "we keep only the connected component of the root in @xmath102 ; likewise let us keep only the corresponding vertices in @xmath98 , i.e.  only those still connected to @xmath108 by a path in @xmath98 .",
    "after removing nodes of depth greater than @xmath73 , we have removed the subset of @xmath102 for which the markings and the action of the adversary differ from those in @xmath100 .",
    "thus at this stage , the tree exactly matches the radius @xmath73 neighborhood of @xmath108 in @xmath100 , along the isomorphism given by the coupling from @xcite .",
    "any boundary vertex of this neighborhood must have distance exactly @xmath73 from @xmath108 , thus its corresponding vertex in the tree has depth @xmath73 and is a leaf . passing to the final step of removing leaves in @xmath102 and their siblings ,",
    "we remove their corresponding nodes from @xmath98 ; this does not change the boundary - to - leaves correspondence .",
    "in this section we show that our tree distribution ( distribution  [ dist : tree ] ) evidences a random vs.  semirandom separation in the broadcast tree model .",
    "recall that the goal is to recover the spin of the root from the spins on the leaves , given full knowledge of the tree topology and the node markings ( and ) .",
    "recall the non - conventional definition of ` leaves ' ( definition  [ def : leaves ] ) .",
    "let @xmath121 be the advantage over random guessing , defined such that @xmath122 is the probability that the optimal estimator ( maximum likelihood ) succeeds at the above task .",
    "we will show that our tree model is asymptotically infeasible @xmath123 as @xmath77 ) for a strictly larger range of parameters @xmath124 than that of the corresponding random model .",
    "[ prop : treehard ] for every real number @xmath40 , there exists @xmath41 such that @xmath43 , yet for a tree sampled from distribution  [ dist : tree ] with parameters @xmath125 , @xmath126 and depth @xmath73 , we have @xmath127 as @xmath77 .",
    "recall that the condition @xmath128 is the classical kesten ",
    "stigum bound , which is sufficient to beat random guessing in the random model @xcite .",
    "several decades later , this bound was found to be tight for the random model @xcite .",
    "there remain many open questions regarding the hardness of tree models , and some care was required in crafting an adversary for this problem that keeps the proof of this lower bound tractable .    broadly , the kesten  stigum bound asserts that recoverability depends on the average branching factor ( a contribution from the tree topology ) and the amount of noise ( a contribution from the spin propagation rule ) .",
    "the first step of our proof is to distinguish these in our distribution : we can first generate a tree topology from the appropriate marginal distribution , and then sample spins from the conditional distribution given this tree .",
    "we will show how to view this distribution on spins within the lower bound framework of @xcite .",
    "moreover , the new spin propagation rule is at least as noisy as the original , while our cutting adversary has strictly decreased the average branching factor .",
    "we first re - state our tree model in terms of topology generation followed by spin propagation . instead of letting each node",
    "give birth to @xmath49 same - spin children and @xmath50 opposite - spin children , we can equivalently let each node @xmath5 give birth to @xmath79 children and then independently choose the spin of each child to be the same as @xmath5 with probability @xmath129 and opposite to @xmath5 otherwise .",
    "( the equivalence of these steps is often known as ` poissonization ' . ) here the correspondence between @xmath124 and @xmath78 is as usual : @xmath80 and @xmath81 .",
    "this allows us to first sample the entire tree topology without spins",
    ". then we can add markings ( and ) , since these depend only on the topology .",
    "next , we sample the spins as above , by generating an appropriate independent @xmath105 value @xmath130 on each edge , indicating whether or not a sign flip occurs across that edge .",
    "finally , we cut edges according to the adversary s rule .",
    "given the parameters @xmath101 , generate a tree @xmath102 with spins @xmath103 as follows : [ dist : tree-1 ]    * start with a root vertex @xmath68 . until a uniform depth @xmath106 ,",
    "let each vertex @xmath5 give birth to @xmath79 nodes . * mark nodes as and according to the rules of the graph adversary .",
    "* for each edge @xmath131 , generate an independent flip value @xmath130 which is @xmath132 with probability @xmath129 and @xmath133 otherwise . *",
    "choose the root spin @xmath104 uniformly from @xmath105 .",
    "propagate spins down the tree , letting @xmath134 where @xmath131 is the edge connecting @xmath5 to its parent @xmath4 .",
    "* cut edges according to the adversary s rule , keeping only the connected component of the root . *",
    "trim the bottom of the tree ( according to the last two steps of distribution  [ dist : tree ] ) .",
    "it is clear that this tree distribution ( distribution  [ dist : tree-1 ] ) is identical to the original tree distribution ( distribution  [ dist : tree ] ) .",
    "our next step will be to re - state this model in yet another equivalent way .",
    "the goal now is to sample the final tree topology ( including which edges get cut ) before sampling the spins . consider a node @xmath5 , its parent @xmath4 , and its single child @xmath135 . instead of writing the spin propagation as independent flips @xmath136 and @xmath137 , we will write it as random variables @xmath138 and @xmath139 . here",
    "@xmath138 is equal to 1 if the adversary decides to cut @xmath5 ( and 0 otherwise ) , and @xmath139 is equal to 1 if @xmath140 ( and @xmath133 otherwise ) .",
    "this means if @xmath141 then @xmath138 is 1 with probability @xmath94 ( and 0 otherwise ) ; and if we do not have @xmath141 then @xmath142 .",
    "hence @xmath143 with probability @xmath144 . if @xmath143 then @xmath139 is irrelevant because the adversary will cut @xmath5 from the tree . conditioned on @xmath142 , @xmath139 takes the value @xmath132 with probability @xmath145 and @xmath133 otherwise .",
    "this means that for a ( but not cut ) node @xmath5 , the joint distribution of @xmath146 obeys a propagation rule that is equivalent to putting noise @xmath147 ( instead of @xmath85 ) on edges @xmath7 and @xmath148 , where ( using the definition of @xmath94 ) @xmath149 one can verify that @xmath150 for all @xmath151 . for most nodes in the tree , we are simply going to replace @xmath85 by @xmath147 on the incident edges , which gives the correct joint distribution of @xmath146 but not the correct joint distribution of @xmath152 .",
    "this is acceptable because the distribution of leaf spins ( given the root spin ) is still correct ; for this reason we have made sure that none of the leaves are nodes .",
    "the only time when we actually care about the spin of a node is in the case where the root @xmath68 is . in this case",
    ", the root might be cut by the adversary , yielding a 1-node tree ( with no revealed leaves ) .",
    "otherwise , if the root is but not cut , our spin propagation rule needs to sample the spins of the root s two children ( a node that is not cut must have degree @xmath92 ) from the appropriate joint distribution over @xmath153 ; let @xmath154 denote this distribution , conditioned on @xmath155 .",
    "it will not be important to compute @xmath154 explicitly ( although it is straightforward to do so ) .",
    "we are now ready to state the next tree model .",
    "this model is equivalent to the previous ones in that the joint distribution of the root spin , topology , markings , and leaf spins is the same .",
    "the spins on the nodes ( other than the root ) do not have the same distribution as before , but this is irrelevant to the question of recovering the root from the leaves .    given the parameters @xmath101 ,",
    "generate a tree @xmath102 with spins @xmath103 as follows : [ dist : tree-2 ]    * start with a root vertex @xmath68 . until a uniform depth @xmath106 ,",
    "let each vertex @xmath5 give birth to @xmath79 nodes . * mark nodes as and according to the rules of the graph adversary .",
    "* decide which nodes the adversary should cut : cut each node independently with probability @xmath144 . *",
    "let @xmath156 for edges @xmath131 that are incident to a node , and let @xmath157 for all other edges . * for each edge @xmath131 ,",
    "generate an independent flip value @xmath130 which is @xmath132 with probability @xmath158 and @xmath133 otherwise .",
    "* choose the root spin @xmath104 uniformly from @xmath105 .",
    "if the root is but not isolated : let @xmath159 be its children , draw @xmath160 , and let @xmath161 , @xmath162 .",
    "for all other nodes , propagate spins down the tree as usual , letting @xmath134 where @xmath131 is the edge connecting @xmath5 to its parent @xmath4 . *",
    "trim the bottom of the tree ( according to the last two steps of distribution  [ dist : tree ] ) .",
    "our next step is to further modify this tree model in ways that only make it easier , in the sense that the advantage @xmath163 can only increase .",
    "first , we will address the issue of the complicated propagation rule @xmath154 in the case that the root is .",
    "suppose the root is ( but not cut ) and consider deterministically setting @xmath164 where @xmath159 are the root s two children .",
    "from there , spin propagation continues as usual .",
    "we claim that this new model can only be easier than the original one . to see this , note that the new model can ` simulate ' the original one : upon observing leaf spins drawn from the new model , drawn @xmath165 and then , for each @xmath166 and for each leaf @xmath135 descended from @xmath167 , replace @xmath168 by @xmath169 . for convenience",
    "we will also replace the first level of the tree by deterministic zero - noise propagation in the case where the root is not .",
    "we can similarly argue that the model only gets easier , since one can simulate the old model using the new model by sampling the noise on the first level .",
    "note that we now have a tree model such that once the topology is chosen , the spin - propagation rule is very simple : at each edge @xmath131 , a sign flip occurs independently with some probability @xmath170 .",
    "hardness results for such a tree model were studied by evans et al .",
    ", who established the following bound on the advantage @xmath171 for a fixed tree topology @xmath102 ( @xcite theorem 1.3 ) : @xmath172 and where @xmath173 , and @xmath174 denotes the unique path from the root to leaf @xmath5 . in our case ,",
    "the tree @xmath102 ( including both the tree topology and markings ) is random , so the advantage is @xmath175 $ ] , by the law of total probability . by jensen s inequality ,",
    "@xmath176\\right)^2 \\le \\ee_t[\\delta_t^2 ] \\le \\ee_t\\left [ 2 \\sum_{\\text{leaves } v } \\theta_v^2 \\right ] \\defeq w.\\ ] ] our goal is to show @xmath177 ( as @xmath77 ) , so it is sufficient to show @xmath178 .",
    "any leaf in our tree is at height @xmath179 .",
    "furthermore we have @xmath180 for edges incident to the root and @xmath181 elsewhere .",
    "therefore , for any leaf @xmath5 , we can bound @xmath182 . note that we have not actually used the fact that @xmath147 strictly exceeds @xmath85 ; we will in fact be able to prove our result by leveraging only the decrease in branching factor and not the noise increase .",
    "now we have @xmath183 \\le 2 \\ , \\ee_t[\\text{\\ # leaves } ] ( 1 - 2 \\eps)^{2(r-2)}\\ ] ] and so we need only to bound the expected number of leaves . for @xmath184 ,",
    "level @xmath3 _ denote the set of vertices at distance @xmath3 from the root ( so the root is on level 0 ) .",
    "call levels @xmath185 the _ base _ levels and call levels @xmath186 the _ cutting _ levels .",
    "imagine growing the tree using @xmath79 births as usual , and marking nodes as and as usual .",
    "now allow the adversary to cut vertices as usual , except refuse to cut any node that is not on a cutting level .",
    "note that this can only result in more leaves , and so this new process will give an upper bound on the expected number of leaves in our actual model .",
    "to analyze the new process , suppose we have a node @xmath5 on a base level .",
    "the number of descendants @xmath187 of @xmath5 on the next base level is a random variable whose distribution does not depend on the ancestors of @xmath5 ; this independence is the reason for defining base levels and cutting levels . define @xmath188 by @xmath189 $ ] ; then @xmath190 , since there is some nonzero probability that one of @xmath5 s descendants will be cut at the subsequent cutting level .",
    "the expected number of leaves in the entire tree is now at most @xmath191 , where the factor @xmath192 accounts for the first level and the last @xmath193 levels that are not followed by a base level .",
    "now @xmath194 , which goes to 0 as @xmath77 provided that @xmath195 hence this inequality suffices for impossibility of recovery .    however , @xmath188 depends on the topology of the final tree model , which depends on @xmath84 , @xmath85 , and @xmath94 , so this inequality is slightly more complicated than it looks .",
    "we write @xmath196 to make this dependence explicit ; recall that @xmath94 is a ( continuous ) function of @xmath85 .",
    "we argued above that @xmath197 for all @xmath198 .",
    "in particular , at the critical value @xmath199 for the _ random _ model , we have @xmath200 but @xmath201 is a continuous function of @xmath85 , so if we take @xmath85 to be slightly less than @xmath202 , we must still have @xmath203 , while @xmath128 , as desired .",
    "this completes the proof of theorem  [ thm : intro - treehard ] ( semirandom vs.  random separation on trees ) . in appendix",
    "[ sec : lower - bound - explicit ] , we explicitly compute a lower bound on the separation @xmath204 .",
    "the lower bound of the previous section will form the core of a lower bound for the graph : we have already established that , for a large range of parameters , it is impossible to learn the spin of a node @xmath4 purely from the spins at the boundary @xmath113 of its tree - like local neighborhood .",
    "we will now see why this makes recovery in the graph impossible : there is almost nothing else to learn about @xmath205 from beyond its local neighborhood once we know the spins on @xmath113 .",
    "[ lemma : no - lrc ] let a graph @xmath100 ( including markings and ) and spins @xmath103 be drawn from distribution  [ dist : graph ] .",
    "let @xmath206 , @xmath207 , @xmath208 be a vertex - partition of @xmath100 such that    * @xmath113 separates @xmath209 from @xmath210 in @xmath100 ( no edges between @xmath209 and @xmath210 ) , * @xmath211 , * @xmath113 contains no nodes .",
    "then @xmath212 for asymptotically almost every ( a.a.e . ) @xmath100 and @xmath103 .",
    "here @xmath213 denotes the spins on @xmath209 and @xmath214 denotes the spins on @xmath215 .    to clarify , when we refer to or nodes in @xmath100 we are referring to the original markings that they were assigned in @xmath91 .",
    "for instance , if a node is cut by the adversary , it is still considered in @xmath100 even though it no longer has degree @xmath92 .",
    "recall that the markings ( and ) in @xmath100 are revealed to the reconstruction algorithm .    in lemma  [ lemma : no - lrc ] , we do crucially use that @xmath113 does not contain nodes : if a node in @xmath113 were with spin @xmath132 , and we then revealed that its neighbor in @xmath210 has spin @xmath133 , this would strengthen our belief that the neighbor in @xmath209 has spin @xmath132 , as otherwise the node would have some substantial probability of having been cut , which is observed not to be the case .",
    "so lemma  [ lemma : no - lrc ] would be false if we allowed nodes in @xmath113",
    ".      the proof of lemma  [ lemma : no - lrc ] will require a thorough understanding of the distribution of spins given @xmath100 , which we can only obtain by understanding the possible precursors of @xmath100 under the adversary .",
    "the reason for the and nodes in our adversary construction is to make these precursors well - behaved .",
    "we start with some simple observations .",
    "let @xmath91 be a graph that yields @xmath100 ( with nonzero probability ) by application of the adversary .",
    "[ obs : good ] a node has degree at least @xmath93 in @xmath100 .",
    "a node has at least three non - degree-@xmath92 neighbors in @xmath91 and the adversary will not remove these .",
    "[ obs : create ] the adversary does not create any new degree-@xmath92 nodes .",
    "in other words , if a node has degree @xmath92 in @xmath100 then it has degree @xmath92 in @xmath91 ( with the same two neighbors ) .    in order to create a degree-@xmath92 node @xmath5",
    ", the adversary must cut at least one edge incident to @xmath5 .",
    "this can only happen if @xmath5 is either or .",
    "it can not be because it does not have degree @xmath92 in @xmath91 .",
    "but it also can not be or else it has degree at least 3 in @xmath100 ( by observation  [ obs : good ] ) .",
    "the key property of the /construction is that the adversary can not change whether or not a node has the following ` goodness ' property .",
    "say that a node has the * goodness * property with respect to a graph if at least three of its neighbors do not have degree @xmath92 .",
    "[ lemma : goodness ] the nodes are precisely the nodes that have the goodness property with respect to @xmath100 .    note that this is not tautological because the nodes are defined as the nodes that have the goodness property with respect to @xmath91 , not @xmath100 .",
    "we need to show that the goodness property is invariant under the adversary s action .",
    "first we assume @xmath5 has goodness in @xmath91 and show that it also has goodness in @xmath100 . since @xmath5 has the goodness property in @xmath91 , it has three neighbors @xmath216 in @xmath91 that do not have degree @xmath92 .",
    "each @xmath167 remains connected to @xmath5 in @xmath100 since the adversary only cuts edges that are incident to a degree-@xmath92 node .",
    "furthermore , each @xmath167 does not have degree @xmath92 in @xmath100 because degree-@xmath92 nodes can not be created ( observation  [ obs : create ] ) .",
    "now we show the converse : assume @xmath5 does not have goodness in @xmath91 and show that it still does not have goodness in @xmath100 .",
    "the only way that @xmath5 could obtain goodness is if at least one of its degree-@xmath92 neighbors @xmath4 becomes non - degree-@xmath92 ( while remaining connected to @xmath5 ) .",
    "but this is impossible because whenever the adversary cuts an edge incident to a degree-2 vertex @xmath4 , it causes @xmath4 to become isolated in @xmath100 .",
    "next we state an easy fact about the structure of nodes in @xmath100 .",
    "[ lemma : marked ] the nodes in @xmath100 are precisely the degree-@xmath92 nodes with two neighbors , plus some isolated nodes .",
    "every node in @xmath91 has degree-@xmath92 with two neighbors .",
    "if the node is cut , it becomes isolated in @xmath100 ; otherwise it remains degree-@xmath92 with two neighbors .",
    "conversely , let @xmath5 be degree-@xmath92 in @xmath100 with two neighbors ; we will show @xmath5 is .",
    "since degree-@xmath92 nodes can not be created ( observation  [ obs : create ] ) , @xmath5 has degree-@xmath92 in @xmath91 with the same two neighbors , and is therefore .",
    "now we are ready to characterize the possible precursors @xmath91 of a given @xmath100 .",
    "[ lemma : unsurgery ] suppose we have a graph @xmath100 ( including node markings ) and spins @xmath103 , drawn from distribution  [ dist : graph ] .",
    "the probability that a graph @xmath91 yields @xmath100 under the action of the adversary is zero unless @xmath91 can be obtained from @xmath100 by connecting each isolated node @xmath5 of @xmath100 to exactly two nodes of opposite spin to @xmath5 . in this case , if @xmath100 has @xmath217 isolated nodes and @xmath218 nodes with two opposite - spin neighbors , then @xmath219 where we define @xmath220 in the case @xmath221 .",
    "recall that @xmath94 is the probability with which the adversary cuts each @xmath222 node that has two opposite - spin neighbors .",
    "first suppose @xmath91 can yield @xmath100 via the adversary .",
    "we will show that @xmath91 takes the desired form .",
    "the nodes cut by the adversary are precisely the isolated nodes of @xmath100 .",
    "every such node was originally connected to two opposite - spin nodes in @xmath91 .",
    "therefore @xmath91 can be obtained from @xmath100 by connecting each isolated node to exactly two opposite - spin nodes .",
    "conversely , let @xmath91 be obtained from @xmath100 by connecting each isolated node to exactly two opposite - spin nodes",
    ". the nodes in @xmath100 are ( by lemma  [ lemma : goodness ] ) precisely the nodes that have the goodness property in @xmath100 .",
    "these are also precisely the nodes that have the goodness property in @xmath91 , since the process of connecting each isolated node to two nodes does not change goodness .",
    "consider running the adversary on @xmath91 .",
    "the nodes that it marks will be precisely the nodes in @xmath100 .",
    "also , the nodes that it marks will be precisely the nodes in @xmath100 ; this is clear from lemma  [ lemma : marked ] .",
    "this means the adversary will output @xmath100 iff it chooses to cut the @xmath223 nodes that are isolated in @xmath100 and chooses not to cut the @xmath135 nodes that have two opposite - spin neighbors in @xmath100 .",
    "this happens with probability @xmath224 .",
    "we proceed as follows . in the ordinary stochastic block model ,",
    "given an observed graph , the probability of any set of spins @xmath103 factorizes as a product of pairwise interactions . in our model , by summing over all possible precursors @xmath91 that could have lead to @xmath100 via the adversary , we find the same pairwise interactions together with a further global , combinatorial interaction .",
    "we show that the neighborhood @xmath209 is too small to make a significant impact on this global interaction , while the pairwise interactions between @xmath209 and @xmath210 are weak , so that the only factors relevant to @xmath209 are the pairwise interactions within @xmath225 , which are independent of the spins in @xmath210 .",
    "let @xmath91 denote the graph before the action of the adversary .",
    "then @xmath226 factors into the following potentials on unordered pairs : @xmath227 with @xmath228 ranging over unordered pairs of distinct vertices , where @xmath229 where @xmath230 denotes adjacency in the graph @xmath231 .    to leverage this description ,",
    "let us sum over all possible precursors @xmath91 of @xmath100 under the adversary .",
    "let @xmath232 denote the set of possible precursors @xmath91 of @xmath100 , as described by lemma  [ lemma : unsurgery ] : @xmath91 is obtained from @xmath100 by connecting each of the @xmath223 isolated nodes to exactly two nodes of the opposite spin . @xmath233",
    "the proportionality constant hidden by ` @xmath234 ' depends on @xmath100 but not on @xmath103 .",
    "as @xmath91 is obtained from @xmath100 by replacing @xmath235 opposite - spin non - edges by opposite - spin edges , we have for every @xmath236 , @xmath237 thus none of the terms depend on the precise choice of @xmath91 : @xmath238 where we have dropped the constants that only depend on @xmath100 ( and not @xmath103 ) .",
    "now we compute @xmath239 .",
    "suppose there are @xmath240 isolated nodes of positive spin and @xmath241 of negative spin .",
    "suppose there are @xmath242 nodes of positive spin , and @xmath243 of negative spin .",
    "then the number of possible @xmath91 is @xmath244    we can establish that this global @xmath245 factor only barely depends on the spins of @xmath209 :    [ lemma : binom - ratio ] for a.a.e .",
    "@xmath246 , it holds for all @xmath213 , @xmath247 that @xmath248    the proof proceeds via concentration of measure and taylor expansion , and is deferred to appendix  [ sec : binom - ratio - proof ] .    paraphrasing this lemma , a.a.s .  over @xmath249 , there exists a ` good ' subset of a.a.e .",
    "@xmath250 such that @xmath239 is independent of @xmath213 up to a @xmath251 factor .",
    "let us also require of ` good ' @xmath250 that the census ( sum of spins ) is @xmath252 ; as @xmath210 consists of all but @xmath120 nodes of @xmath100 , it is equivalent to ask for the same concentration over all spins of @xmath100 , and this occurs a.a.s .  by hoeffding .",
    "let @xmath253 be this set of ` good ' @xmath250 values . since @xmath254 a.a.s .",
    "we have for any set @xmath255 ( which will be taken as either @xmath209 or @xmath225 below ) , @xmath256 we include a rigorous proof of this statement in appendix  [ sec : omega - fact - proof ] .",
    "it will be useful to factor the product @xmath257 of classical pairwise interactions into subsets of these interactions as @xmath258 here , for instance , @xmath259 denotes the product of @xmath260 over unordered pairs @xmath228 consisting of one vertex from @xmath215 and one from @xmath210 . the corresponding `` no long - range correlations '' proof in @xcite established that for ` good ' values @xmath254 , @xmath261 for a quantity @xmath262 depending only on @xmath263 and @xmath264 .",
    "their proof of this fact holds verbatim in our setting : it only requires that @xmath265 and that the number of @xmath132 spins in the graph is distributed as @xmath266 .",
    "similarly , we can factor the @xmath267 term as @xmath268 where , for instance , @xmath269 counts the number of nodes in @xmath209 with two opposite - spin neighbors .",
    "this factorization holds as there are no @xmath209@xmath210 edges and no nodes in @xmath113 .",
    "we can now absorb these terms into the @xmath9 terms : define @xmath270 and similarly @xmath271 , and @xmath272 , so that for @xmath254 , @xmath273    at this point we roughly adapt the proof of conditional independence from factorization in a markov random field , following the corresponding proof in @xcite .",
    "we compute that for a.a.e .",
    "@xmath274 , @xmath275 as desired .",
    "we can now assemble all of the pieces to prove our main result .",
    "we first prove that it is impossible to estimate the relative spin of any fixed pair of nodes , in a strictly larger parameter range than for the random model .",
    "the impossibility of partial recovery will then easily follow .",
    "[ prop : rel - spin - hard ] for all @xmath40 , there exists @xmath276 such that @xmath43 , yet given a graph @xmath100 ( including markings / ) from distribution  [ dist : graph ] with parameters @xmath125 , @xmath126 , we have that for any fixed vertices @xmath228 , @xmath277 for a.a.e .",
    "@xmath100 as @xmath59 .    by ` fixed ' vertices @xmath228",
    "we mean that the vertices are fixed before @xmath103 and @xmath100 are chosen ; so by symmetry it does nt matter which @xmath228 pair we fix .",
    "given @xmath84 , choose @xmath85 as in proposition  [ prop : treehard ] ( tree separation ) .",
    "with probability @xmath58 , the tree coupling of proposition  [ prop : coupling ] centered at vertex @xmath4 succeeds . in this case ,",
    "the neighborhood @xmath98 of @xmath4 coupled to the tree is of size @xmath120 , and so with probability @xmath61 , @xmath5 lies outside this neighborhood .",
    "let @xmath113 be the boundary vertices of @xmath98 , i.e.  those vertices in @xmath98 corresponding to the leaves of the tree .",
    "let @xmath209 be the interior @xmath114 , and let @xmath210 be the complement of @xmath98 in @xmath100 .    by the law of total variance , @xmath278.\\ ] ]    with further probability @xmath58 ,",
    "lemma  [ lemma : no - lrc ] ( no long - range correlations ) succeeds , and we have @xmath279 so that @xmath280 but it follows from the coupling in proposition  [ prop : coupling ] ( which includes spins and markings ) that @xmath281 since @xmath77 as @xmath59 , non - reconstruction in the tree model ( proposition  [ prop : treehard ] ) implies that this latter variance converges to @xmath282 : the variance of a @xmath283-valued random variable with expectation @xmath53 is @xmath58 .",
    "so we know that , with probability @xmath58 , a @xmath58 proportion of @xmath214 contribute a value @xmath58 to the expectation in ( [ eq : totvar ] ) .",
    "the remaining @xmath53 proportion of @xmath214 contribute a value bounded in magnitude by @xmath282 , as the variance of a @xmath284-valued variable must be .",
    "it follows that , a.a.s .",
    ", @xmath285 = 1 - o(1),\\ ] ] and the only way that this is possible in the @xmath284-valued distribution @xmath286 is if @xmath287 as desired",
    ".    it will follow immediately from proposition  [ prop : rel - spin - hard ] that it is hard to find a partition that is correlated ( better than random guessing ) with the true one . for",
    "if it was possible to find such a partition then one could also guess the relative spins of @xmath4 and @xmath5 .",
    "we now complete the proof of our main theorem , restating it slightly more precisely .",
    "for any @xmath40 , there exists @xmath276 so that @xmath42 and hence partial recovery in the stochastic block model @xmath17 is possible , and yet against the monotone adversary given in section  [ sec : models ] , for any @xmath288 , no estimator of the spins achieves @xmath63-partial recovery with probability greater than @xmath53 as @xmath59 .",
    "let @xmath289 be some assignment of spins to vertices that achieves @xmath63-partial recovery : @xmath289 agrees with the true spins on at least @xmath64 vertices , possibly after a global spin flip .",
    "consider the relative spins @xmath290 , where @xmath4 and @xmath5 are distinct vertices ; these match the true relative spins on at least @xmath291 ordered pairs of distinct vertices .",
    "if we choose two distinct vertices at random , the chance of correctly estimating their relative spin from @xmath289 is at least @xmath292    suppose for a contradiction that some estimator achieves @xmath63-partial recovery , for some @xmath66 , with probability @xmath293 not converging to @xmath69 as @xmath59 .",
    "when @xmath63-partial recovery succeeds , the process above recovers the relative spin of two random vertices with probability at least @xmath294 , and note @xmath295 .",
    "when partial recovery does not succeed , the process still recovers the relative spin of two random vertices with probability at least @xmath296 , as can be seen by plugging in @xmath297 to ( [ eq : eta ] ) .",
    "it follows that we can recover the relative spin of two random vertices with probability at least @xmath298 $ ] which remains bounded above @xmath299 as @xmath59 , contradicting proposition  [ prop : rel - spin - hard ] .",
    "( proposition  [ prop : rel - spin - hard ] assumes the markings on @xmath100 are known , but clearly the problem is only harder when they are unknown , since an estimator can choose to ignore them . )",
    "we now turn to giving algorithms for partial recovery in the semirandom setting . in the existing literature on _",
    "exact _ recovery , it has been observed that algorithms obtained through semidefinite programming extend almost automatically to semirandom models @xcite , and moreover many of these results match the information - theoretic thresholds for exact recovery .",
    "in contrast , semidefinite programs for partial recovery , such as those of gudon and vershynin @xcite , come within a constant of the threshold but have been unable to close this gap .",
    "in fact gudon and vershynin @xcite developed a general framework for using sdps to solve problems on sparse graphs , including partial recovery for the stochastic block model .",
    "we define a notion of semirandom model for any problem in this framework , generalizing the semirandom model for community detection .",
    "we show that any analysis that follows their framework carries over automatically to this semirandom model .",
    "in particular , after minor modifications , the sdp analyzed in @xcite achieves partial recovery in the semirandom block model , up to within a constant factor of the classical threshold .",
    "semirandom vs.  random gaps offer an explanation for why it seems hard to find semidefinite programs for partial recovery that reach the information - theoretic threshold : the analysis often extends equally well to the semirandom model , where we know the threshold is strictly harder !      in the framework of @xcite , there are several key terms .",
    "the first is a matrix @xmath113 which is usually computed in a simple manner from the adjacency matrix of the observed graph . in our case , we compute @xmath300 , where @xmath301 is the all - ones matrix , @xmath302 is a regularization constant , and @xmath209 is the observed adjacency matrix ( albeit with the non - standard convention that there are ones along the diagonal instead of zeros ) .",
    "the goal is to show that @xmath113  which is a random matrix  is near some fixed reference matrix @xmath73 . in our case",
    "this will be @xmath303 , which is nearly equal to @xmath304 $ ] except on the diagonal .",
    "then , one solves an sdp to maximize @xmath305 over @xmath306 , where @xmath253 is the space of symmetric psd @xmath307 matrices @xmath308 satisfying @xmath309 ( i.e.  the diagonal entries of @xmath308 are at most @xmath282 ) . to have additional constraints , but we will not need this . ]",
    "the goal of the analysis is to show that the sdp outputs some @xmath310 that is close to a `` ground truth '' @xmath311 , which in our case is the @xmath284-valued matrix @xmath312 of true relative spins .",
    "the following result outlines the steps of the analysis .",
    "[ prop : three ] suppose we have @xmath313 such that the following three conditions hold for some value @xmath314 , some function @xmath315 , and some matrix norm @xmath316 :    1 .",
    "@xmath311 is a maximizer of the reference objective @xmath317 over @xmath253 + ( the reference sdp recovers the truth ) , 2 .",
    "@xmath318 + ( the observed objective is close to the reference one in cut norm ) , 3 .   if @xmath306 and @xmath319 , then @xmath320 + ( good solutions to the reference sdp are close to the ground truth ) .",
    "then @xmath321 where @xmath310 is any maximizer of the empirical objective @xmath322 over @xmath253 , and @xmath323 is the grothendieck constant .    here ,",
    "the cut norm ( or @xmath57-to-@xmath282 norm ) of a matrix is defined as @xmath324 the proof of proposition  [ prop : three ] follows from lemma  3.3 in @xcite , and uses grothendieck s inequality .",
    "the partial recovery results of @xcite proceed by verifying the three conditions of proposition  [ prop : three ] for a particular choice of parameters :    [ prop : check - three ] assume @xmath46 .",
    "let @xmath300 with @xmath302 , @xmath325 , and @xmath326 .",
    "conditions ( 13 ) of proposition  [ prop : three ] hold a.a.s .  with @xmath327 , and @xmath328 as the frobenius norm @xmath329 .    concretely , this means that we solve the following sdp :    [ sdp : gv ] maximize @xmath330 subject to @xmath331 and @xmath332 , where @xmath302 .",
    "note that the regularization constant @xmath333 is necessary because if we simply take @xmath334 then condition 1 of proposition  [ prop : three ] fails . in @xcite",
    "they estimate @xmath333 from the empirical average degree , but their arguments also apply to the case where we deterministically take @xmath302 .",
    "( this requires knowledge of the parameters @xmath335 but we will address this issue later . )    in @xcite , condition 1 is shown in lemma  5.1 , and conditions 2 and 3 are implicit in the proof of lemma  5.2 .",
    "these require a technical condition : @xmath336 , which for large @xmath0 simply amounts to @xmath46 . by propositions",
    "[ prop : three ] and [ prop : check - three ] , we now attain the result @xmath337 a.a.s .",
    "it is also shown in @xcite how to translate this to a precise partial recovery result :    [ prop : rounding ] let @xmath326 .",
    "for any @xmath338 , @xmath63-partial recovery succeeds a.a.s .  in the stochastic block model ,",
    "provided that @xmath339 , by taking the signs in the top eigenvector of @xmath310 .",
    "[ cor : random - recovery ] there exists a constant @xmath210 such that @xmath63-partial recovery succeeds a.a.s .  in the stochastic block model as @xmath59",
    "whenever @xmath46 and @xmath340 .",
    "the constant @xmath210 is quite large : @xcite sets @xmath341 , although no attempt is made to optimize this constant .",
    "nevertheless this result is only off by a constant from the threshold , which is @xmath38 .",
    "our random vs.  semirandom separation becomes small as @xmath84 grows , so it remains plausible that semidefinite programs can achieve partial recovery when @xmath342 as @xmath54 .",
    "in fact , sdps are known to distinguish random block model graphs from erds  rnyi graphs in such a range @xcite , and it would be interesting to determine whether this carries through to partial recovery in the semirandom model .",
    "we now turn to a semirandom view of the general gudon ",
    "vershynin framework . in the semirandom block model",
    ", a monotone adversary is allowed to make changes aligned with the ground truth @xmath311 ; more formally , it can add a matrix @xmath343 to the observed adjacency @xmath209 , where @xmath343 is symmetric and has @xmath282 s in some same - spin entries where @xmath209 is @xmath69 , and @xmath133 s in some opposite - spin entries where @xmath209 is @xmath282 .",
    "it is easily verified that @xmath311 maximizes @xmath344 over @xmath253 : every matrix in @xmath253 has entries in @xmath345 $ ] , and @xmath311 has @xmath105 entries that match the sign pattern of @xmath343 .    following this observation , we propose a precise definition of semirandom models for gudon  vershynin problems :    a matrix @xmath343 is a * monotone change * if @xmath311 is a maximizer for @xmath346 over @xmath253 . in the * semirandom model * ,",
    "a preliminary objective @xmath113 is generated from the random model , and then an adversary modifies the objective by any monotone change @xmath343 , yielding an observed matrix @xmath347 .    note that the set of such monotone changes @xmath343 forms a cone , which matches the intuition that semirandom models can make unbounded changes , but only in certain directions aligned with the ground truth .",
    "any analysis following the framework of proposition  [ prop : three ] generalizes in a formal sense to the semirandom model :    [ prop : s ] suppose that @xmath313 satisfy conditions ( 13 ) of proposition  [ prop : three ] for some @xmath348 .",
    "then it remains the case that @xmath349 , where @xmath350 is any maximizer of @xmath351 over @xmath253 , and @xmath343 is any monotone change ( in the sense above ) , which is allowed to depend adversarially on @xmath113 .",
    "it suffices to establish conditions ( 13 ) of proposition  [ prop : three ] with @xmath352 playing the role of @xmath73 and @xmath353 playing the role of @xmath113 :    1 .",
    "as @xmath311 maximizes both @xmath317 and @xmath344 over @xmath253 , it certainly maximizes their sum @xmath354 .",
    "we have @xmath355 , which by hypothesis is at most @xmath314 with high probability .",
    "3 .   suppose that @xmath306 and @xmath356 .",
    "then @xmath357 since @xmath311 is a maximizer of @xmath346 over @xmath253 .",
    "it follows from the original condition ( 3 ) that @xmath320 in the appropriate norm .",
    "we have shown that any _ analysis _ of an sdp following the gudon ",
    "vershynin framework transfers to the semirandom model .",
    "a recovery guarantee for the same sdp by different means would not automatically yield such a guarantee in the semirandom model .",
    "this differs from exact recovery problems , where semirandom guarantees can take the success of the sdp as a black box , and certify that any successful instance remains successful under monotone changes @xcite .",
    "let @xmath209 be sampled from the semirandom block model with parameters @xmath358 .",
    "suppose that we know these parameters , so that we can run sdp  [ sdp : gv ] with the deterministic choice @xmath302 . if @xmath46 and @xmath359 then this sdp achieves @xmath63-partial recovery a.a.s .",
    "( after taking the sign of the top eigenvector of the sdp output @xmath310 ) .",
    "this dependence on parameter knowledge is slightly unwieldy ; on the other hand , estimating the correct regularization parameter @xmath333 from @xmath360 is not immediately easy , since model - specific estimators are precisely the sort of techniques that semirandom models aim to penalize . instead , we show that deterministically taking @xmath361 in place of @xmath333 avoids this dependence",
    ". indeed , the same sdp appears in the exact recovery literature @xcite with deterministic regularization parameter @xmath362 , which is comparatively very large , but comes at the cost of requiring precisely balanced communities .",
    "our approach here is a middle ground that allows for natural @xmath363-scale deviations in the balance of the two communities .",
    "there is nothing special about the value @xmath364 and it can in fact be taken to be anything of order strictly between @xmath365 and @xmath366 .",
    "[ prop : new - sdp ] the gudon  vershynin sdp ( sdp  [ sdp : gv ] ) with regularization parameter @xmath367 achieves @xmath63-partial recovery against the semi - random model a.a.s .",
    "so long as @xmath46 and @xmath359 .    in light of proposition",
    "[ prop : s ] , it is sufficient to show that this sdp works in the random model .",
    "we check the three conditions for @xmath368 where @xmath369 , @xmath370 , and @xmath326 where @xmath302 and @xmath371 .",
    "we will use the fact that the three conditions are satisfied for @xmath313 , and we will achieve nearly the same parameters @xmath372 as in that case .    1 .",
    "we certify that @xmath311 maximizes @xmath373 by sdp duality .",
    "the dual sdp reads @xmath374 where @xmath5 runs over all vertices in the graph . to certify that @xmath311 is optimal",
    ", it suffices by complementary slackness to find @xmath375 such that @xmath376 and @xmath377 . since @xmath378 and @xmath311 are psd , the second condition is equivalent to @xmath379 .",
    "as the columns of @xmath311 are spanned by @xmath103 , this second condition reads @xmath380 ; expanding , @xmath381 where @xmath382 is the set of nodes with the same spin as node @xmath5 , and @xmath383 is the complement of @xmath382 . by hoeffding we have @xmath384 a.a.s .  and so @xmath385 in particular , @xmath386 for all @xmath5 a.a.s .",
    "this choice of @xmath375 guarantees @xmath380 so it remains to show that @xmath376 .",
    "since @xmath380 , it suffices to show that @xmath387 for all @xmath388 .",
    "but note that @xmath389 @xmath390 v \\geq 0,\\ ] ] since @xmath391 a.a.s .  so that both @xmath301 and @xmath392 are psd .",
    "this establishes optimality of @xmath311 .",
    "we have @xmath393 and so this step follows from the corresponding step for @xmath313 .",
    "3 .   suppose that @xmath306 satisfies @xmath394 .",
    "letting @xmath395 we have @xmath396 and @xmath397 .",
    "notice that @xmath398 since both matrices are psd , while @xmath399 a.a.s .  where @xmath400 are the community sizes .",
    "thus , @xmath401 applying condition 3 for @xmath313 , we obtain @xmath402 .    by proposition",
    "[ prop : rounding ] , we obtain partial recovery by rounding the leading eigenvector , under the same conditions as in corollary  [ cor : random - recovery ] , and with the same constant @xmath210 .",
    "this analysis completes the proof of theorem  [ thm : intro - robust - sdp ] from the introduction .",
    "independently , @xcite proved a result on sdp robustness that matches ours .",
    "additionally , they consider robustness to a different adversary that can only add or remove @xmath31 edges but is not required to be monotone .",
    "our methods also extend to this case ( and match their results ) because @xmath31 changes can only change the cut norm by @xmath31 .",
    "here we establish that recursive majority achieves reconstruction in the semirandom broadcast tree model , even with respect to the strong adversary that has total control over entire subtrees .",
    "as one would imagine , in recursive majority the root spin is estimated as the majority vote of its children s estimated spins , which in turn are estimated as the majority vote of their children , and so on down to the known leaf spins . in the random model , this algorithm falls short of the kesten  stigum bound by a factor of @xmath403 as @xmath54 @xcite .",
    "nevertheless , it remains the algorithm of choice in practice for tree reconstruction problems , often by the name of ` parsimony ' @xcite .",
    "it seems that the advantages of recursive majority over majority only become clear when studying these algorithms through semirandom models !    to keep things simple , we will first consider trees in which each non - leaf node has exactly @xmath84 children , matching the setting of @xcite and much of the tree reconstruction literature . at the end , we show how to adapt our proof in a straightforward manner to the case where the number of children of each non - leaf node is a poisson random variable .",
    "[ prop : eps - star ] let @xmath404 be the probability of a majority ` yes ' vote of @xmath84 voters each voting ` yes ' with probability @xmath293 : @xmath405 let @xmath406 be drawn from the strong semirandom model on the regular tree with braching factor @xmath84 , height @xmath73 , and noise @xmath85 .",
    "let @xmath407 be defined by @xmath408 } \\frac{m_k(q)}{q},\\ ] ] and let @xmath409 be the maximizer .",
    "so long as @xmath410 , the recursive majority algorithm correctly recovers the root spin from the topology and leaf spins , with probability at least @xmath411 .",
    "conversely , if @xmath412 , there exists an adversary forcing recursive majority to fail with probability @xmath58 as @xmath77 .",
    "let @xmath406 be drawn from the strong semirandom model , starting with a @xmath84-regular tree of height @xmath73 .",
    "let @xmath413 denote the success probability on such a tree . as a base case , we have @xmath414 .",
    "for each child of the root , the spin matches that of the root with probability @xmath415 , in which case the child will be correctly labeled by recursive majority with probability @xmath416 , by induction .",
    "the other children are under adversary control .",
    "then the number of recovered child labels agreeing with the root label stochastically dominates @xmath417 , for any choice of adversary .",
    "the recovered root label is the majority vote of the recovered child labels , so we obtain that @xmath418 moreover this inequality is exactly tight for a certain adversary , which replaces each replaceable subtree by a path down to a single leaf of spin opposite to the root .",
    "we are interested in the limiting recovery probability @xmath419 ; this is the greatest fixed point in @xmath420 $ ] of the function @xmath421 .",
    "equivalently , @xmath422 is the greatest solution in @xmath423 $ ] of the fixed - point equation @xmath424 .",
    "geometrically , this is the greatest intersection point of the graph of @xmath425 with the line of slope @xmath426 through the origin .    before proceeding ,",
    "it is worth noting the geometry of the graph of @xmath425 . from the definition ,",
    "@xmath425 is monotone on @xmath420 $ ] , with @xmath427 , @xmath428 , and @xmath429 . by expanding the probability mass function of the binomial distribution ,",
    "@xmath425 is a degree @xmath84 polynomial , and thus smooth .",
    "less obviously , @xmath425 is strictly convex on @xmath430 $ ] and strictly concave on @xmath431 $ ] @xcite .",
    "the line of slope @xmath92 ( @xmath432 ) does not intersect the graph of @xmath425 nontrivially , since @xmath433 on @xmath430 $ ] and @xmath434 on @xmath431 $ ] .",
    "the line of slope @xmath282 ( @xmath435 ) certainly intersects the graph of @xmath425 at @xmath362 and @xmath282 .",
    "hence there exists some maximal @xmath436 , at which the line of slope @xmath437 intersects the graph of @xmath425 tangentially at some @xmath409 .",
    "equivalently , we can characterize this slope as the maximum slope of the line defined by the origin and any point on the graph of @xmath425 : @xmath408 } \\frac{m_k(q)}{q}.\\ ] ] by the concavity and convexity properties of @xmath425 , the graph of @xmath425 lies below the line of slope @xmath282 on @xmath438 , and above on @xmath439 .",
    "it follows that @xmath440 .    as we sweep @xmath83 from @xmath409 to @xmath282 , the slope @xmath441 passes continuously from @xmath437 to @xmath282 , granting an intersection @xmath442 satisfying @xmath443 for every @xmath444 $ ] , by the intermediate value theorem .",
    "thus , whenever @xmath445 , recursive majority achieves recovery with probability @xmath446 whenever @xmath412 , the two curves do not intersect on @xmath420 $ ] except at @xmath69 , so the limiting success probability @xmath447 is @xmath69 .",
    "it is interesting that , as the noise @xmath85 varies , we see the success probability jump discontinuously from @xmath448 to zero .",
    "this contrasts with the behavior of recursive majority in the ordinary broadcast tree model , in which the error probability transitions continuously to @xmath362 at a threshold @xcite .    for any fixed @xmath84 , computing the critical value @xmath407 amounts to maximizing the polynomial @xmath449 , or equivalently finding the unique root of its derivative in @xmath450 $ ] .",
    "for example it is easily computed that @xmath451 .",
    "however , we would like some asymptotic understanding of the values @xmath407 as @xmath54 .",
    "the following asymptotic expression holds for @xmath407 as @xmath54 : @xmath452    by the maximality property defining @xmath407 and @xmath409 , we must have @xmath453 from which it follows that @xmath454 thus , as @xmath455 $ ] , we know that @xmath456    in analyzing recursive majority in the random model , mossel @xcite computed this derivative using russo s formula .",
    "let us assume for the moment that @xmath84 is odd ; the even case is similar . then @xmath457",
    "if we evaluate this at @xmath458 , we obtain : @xmath459 in the second - to - last step , we have used the asymptotic identity @xmath460 as @xmath54 , which still holds when @xmath60 depends on @xmath84 so long as @xmath461 .",
    "now for @xmath462 , the derivative @xmath463 tends to @xmath69 as @xmath54 , while for @xmath464 , this tends to @xmath57 as @xmath54 .",
    "thus , writing @xmath465 , we must have @xmath466 .",
    "we immediately obtain a lower bound on @xmath407 : @xmath467 for a matching upper bound , apply hoeffding s inequality for a binomial tail bound , to find @xmath468 and use the maximality of @xmath409 to find @xmath469 so that @xmath470 is an asymptotic upper bound for every @xmath471 , which completes the proof .",
    "note that @xmath472 is the probability of success at the threshold @xmath407 , so this proof also provides some sense of the critical success probability : @xmath473 so we observe a very strong threshold : as we vary @xmath85 , there is a discrete jump from very likely success of recursive majority to almost - sure failure !    this result does not change if we pass back to the poisson - birth tree used throughout the rest of this paper , rather than the @xmath84-regular tree . here",
    "@xmath474 $ ] , which leads to a poisson - averaged derivative , and the same threshold in @xmath83 for when the derivative passes from large to small .",
    "by poissonization , we can also write @xmath475 and the standard chernoff bound for `` poisson races '' yields , for @xmath476 , @xmath477 which is as strong as the hoeffding bound used above .",
    "the results above constitute a proof for theorem  [ thm : intro - recmaj ] : recursive majority achieves recovery against the strong semirandom model , so long as @xmath478 or , rearranging , @xmath479 with asymptotics holding as @xmath54 .",
    "it is interesting to see how the semirandom model can yield recovery results across an entire family of previously studied distributions .",
    "the asymmetric broadcast trees studied in @xcite may be described as markov chains on the tree with transition matrix @xmath480 where the ` asymmetry ' @xmath94 may be positive or negative .",
    "the strong semirandom adversary can simulate these models : starting from the broadcast tree model with noise @xmath481 , an adversary searches the tree top - down for either @xmath132-to-@xmath133 or @xmath133-to-@xmath132 transitions , depending on the sign of @xmath94 , and flips the entire resulting subtree with probability @xmath482 , recursing into subtrees .",
    "thus , the semirandom recovery results above guarantee for free that recursive majority is competitive against all of these models simultaneously , as are all algorithms robust to the strong semirandom model .",
    "by contrast , these models each admit a simple but brittle `` weighted majority '' reconstruction algorithm , where the weighting must be perfectly tuned to the specific model  a tiny deviation in the parameters @xmath483 will cause those census algorithms to fail as @xmath77 .",
    "in revisiting the stochastic block model from the perspective of semirandom models , we showed that there is a tension between establishing sharp thresholds and obtaining algorithms with natural robustness guarantees .",
    "there are many more classical problems in statistics and machine learning where semirandom models could offer a promising way to move beyond average - case analysis and explore issues related to robustness .",
    "in particular , belief propagation is one of the most far - reaching heuristics , but at high ` temperature ' it can result in algorithms such as majority that we have shown are not robust . at low ` temperature ' it leads to more robust algorithms , like recursive majority , that are connected to convex optimization .",
    "can exploring ` temperature ' further lead to interesting , provable tradeoffs between robustness and statistical power that result in a richer understanding of how belief propagation performs in practice ?",
    "the authors would like to thank philippe rigollet and the mit learning theory group for helpful discussion , and roxane sayde for reading a draft of this document .",
    "here we compute an explicit lower bound on the separation @xmath204 between the average branching factor in the random model and that of the six - level - periodic branching rule described at the end of section  [ sec : treehard ] .",
    "we will need to assume @xmath484 .",
    "fix @xmath485 .",
    "we will further modify the six - level - periodic rule by considering a node to be if it has three _ children _ of degree not equal to @xmath92 and we disregard the contribution of the parent to this rule , to simplify the computation ; this only further reduces cutting .    in this one - period tree ,",
    "the ` base ' levels are @xmath69 ( the root ) and @xmath486 ( the leaves ) , and the ` marking ' level is level @xmath93 . in expectation , there are @xmath487 nodes on level @xmath92 .",
    "let us focus on the subtree descending from one of these nodes .",
    "let @xmath488 ; then by poissonization , before cutting , each node @xmath5 on level @xmath92 gives birth to @xmath489 degree-@xmath92 children and @xmath490 degree - not-@xmath92 children .",
    "in particular , @xmath5 is with probability @xmath491 . supposing that this is the case ,",
    "let us see how many leaves get cut . in expectation",
    ", @xmath5 has @xmath492 degree-@xmath92 children on level @xmath93 , each with exactly one child on level @xmath493 , which is with probability @xmath491 . in that case",
    ", it gives rise to @xmath494 \\ , \\ee[\\pois(k ) \\given\\ ; \\ne 1]$ ] leaves , in expectation ; but the level-@xmath93 degree-@xmath92 node and its subtree gets cut with probability @xmath495 .",
    "the expected number of leaves cut in the subtree descending from a level-@xmath69 node is : @xmath496 \\ , \\ee[\\pois(k ) \\given\\ ; \\ne 1 ] ) \\\\ & = k^3 p",
    "\\delta \\eps^2 \\cdot \\prob{\\pois(k(1-p ) ) \\geq 3}^2 \\cdot ( kp + \\ee[\\pois(k(1-p ) ) \\given\\ ; \\geq 3 ] \\ , \\ee[\\pois(k ) \\given\\ ; \\ne 1]).\\end{aligned}\\ ] ]    whenever @xmath484 and @xmath39 , we must have @xmath497 and @xmath498 ( from the definition ( [ eq : delta ] ) of @xmath94 ) . in this range",
    "we have @xmath499 \\ , \\ee[\\pois(k ) \\given\\ ; \\ne 1 ] ) \\defeq \\mathcal{k}(k).\\ ] ] now , choosing any @xmath85 such that @xmath500 the semirandom model will be impossible while the random model is possible .",
    "this concludes our explicit computation of a separation .",
    "we have not made any attempt to optimize it , and that remains an interesting open question for future work .",
    "recall that @xmath223 is the number of isolated nodes in @xmath100 , and @xmath501 is the number of nodes .",
    "let @xmath314 be the number of excess @xmath132 spins among the isolated nodes , i.e.  there are @xmath502 isolated nodes of spin @xmath132 and @xmath503 of spin @xmath133 .",
    "similarly let @xmath504 be the number of excess @xmath132 spins among the nodes .",
    "write @xmath505 and @xmath506 , where @xmath507 denotes the number of excess @xmath132 spins among the isolated nodes of @xmath209 , and likewise for the others",
    ". we will need a number of results on the sizes of these values .",
    "[ lemma : conc ] we have the following results a.a.s .",
    "* @xmath508 , * @xmath509 , * @xmath510 .",
    "the first result is easy : @xmath507 and @xmath511 are bounded above by @xmath263 , which is @xmath120 by assumption .",
    "we will establish the remaining concentration results through the bounded differences method ; however , this bounded difference property will require controlling the maximum degree of a node .",
    "note that a.a.s .",
    "every node of @xmath91 ( and thus @xmath100 ) has degree at most @xmath512 , by a chernoff - and - union argument .",
    "let @xmath513 denote the graph obtained from @xmath91 by simultaneously removing all edges incident to nodes of degree larger than @xmath512 .",
    "note now that the radius-@xmath493 neighborhood of any node in @xmath513 has size at most @xmath514 .",
    "let @xmath515 denote the census ( number of @xmath132 spins minus number of @xmath133 spins ) among those nodes that are ` cuttable ' in @xmath513 , i.e.  nodes @xmath5 that are degree-@xmath92 in @xmath513 , with two opposite - sign ( to @xmath5 ) neighbors that each have at least @xmath93 non - degree-@xmath92 neighbors .",
    "this property of @xmath5 depends only on the radius-@xmath93 neighborhood in @xmath513 .",
    "given any vertex @xmath4 in @xmath91 , if we add or remove any number of edges incident to @xmath4 in @xmath91 , we can only change @xmath515 by at most @xmath514 , as we can only change the ` cuttable ' status of the previous and new radius-@xmath493 neighborhoods of @xmath5 in @xmath513 .",
    "( here we need radius @xmath493 instead of @xmath93 because by changing edges incident to @xmath5 we can push the neighbors of @xmath5 over the @xmath516-degree cutoff . )",
    "this constitutes a bounded differences property for the function @xmath517 .",
    "we now apply the following concentration inequality :    let @xmath518 be a function of a random graph of size @xmath0 with independent edges ( not necessarily identically distributed ) .",
    "suppose that , when we add or remove any number of edges incident to any given vertex @xmath5 , the value of @xmath518 changes by at most @xmath72",
    ". then @xmath519 \\given \\geq \\lambda c \\sqrt{n } } \\leq 2 \\exp(-\\lambda^2/2).\\ ] ]    this result is classical , and is based on applying azuma ",
    "hoeffding to a _",
    "vertex exposure martingale _ ; see for example chapter  7 of @xcite .",
    "note that @xmath520 = 0 $ ] due to spin - reversal symmetry .",
    "it follows that @xmath521 a.a.s .",
    "moreover , @xmath522 a.a.s .",
    ", so that the true census of cuttable nodes in @xmath91 is at most @xmath523 a.a.s .",
    "our adversary turns a subset of these cuttable nodes into isolated nodes , choosing each independently with probability @xmath94 ; applying hoeffding s inequality separately to the @xmath132 and @xmath133 cuttable nodes , we see that the census of isolated nodes in @xmath100 is @xmath524 a.a.s . but this census equals @xmath525 , and @xmath526 , so we have @xmath527 a.a.s .",
    "the same argument applies ( with a strict subset of the technical mess ) to show that @xmath528 , and that @xmath223 and @xmath501 concentrate within @xmath524 of their expectations .",
    "it is also straightforward to see that @xmath529 $ ] and @xmath530 $ ] are @xmath531 ; this amounts to showing that the probability of any vertex being isolated in @xmath100 , or in @xmath100 , is bounded above zero as @xmath59 .",
    "but these two properties are local , depending only on a neighborhood in the graph , so this is clear .",
    "this completes the proof of the concentration results ( lemma  [ lemma : conc ] ) .",
    "now we proceed to the proof of lemma  [ lemma : binom - ratio ] .",
    "we need to show that for a.a.e .",
    "@xmath532 , it holds for all @xmath533 that @xmath534    we will need sufficiently tight asymptotics for powers of binomials in this regime : @xmath535 we now apply these asymptotics to the task at hand : @xmath536 as every non - error term cancels .",
    "the result now follows : if the logarithm of an expression is @xmath53 then the expression itself is @xmath537 .",
    "enumerate all possible values @xmath538 for @xmath539 .",
    "let @xmath540 and let @xmath541 .",
    "we know @xmath542 and @xmath543 for some @xmath544 .",
    "we want to show that for some @xmath545 we have @xmath546 with probability @xmath547 ; here the probability is over @xmath3 drawn proportional to @xmath548 . if @xmath549 is the set of @xmath3 for which @xmath550 , we have @xmath551 .",
    "this means @xmath552 and so @xmath553 . we need @xmath547 and @xmath545 so it suffices to take any @xmath554 such that @xmath555 and @xmath556 , i.e.  @xmath554 goes to 0 slower than @xmath557 does .",
    "throughout this paper , we have assumed @xmath558 ; such block models are often called ` assortative ' . however , everything does carry through equally in the ` dissortative ' case @xmath30 . here",
    "we briefly sketch the relevant changes .",
    "our semirandom models are certainly designed for an assortative model , and are entirely too powerful in the dissortative case  for example , by randomly adding and removing edges appropriately , the current semirandom block model can simulate the erds ",
    "rnyi distribution @xmath559 when starting from any dissortative model , which clearly reveals no community structure . instead",
    ", the semirandom model in the dissortative case should add edges between communities , and remove edges within communities , so that these monotone changes are aligned with the latent structure to be recovered .",
    "similarly , the semirandom tree models are able to cut or replace any subtree that follows a same - spin edge .",
    "this leads to many sign changes throughout the paper .",
    "we can still couple the resulting graph neighborhoods to a tree distribution ; although this tree distribution might look quite different at a glance , it couples perfectly with an assortative tree model , corresponding via @xmath560 , by flipping all spins at odd levels of the tree .",
    "thus we obtain a random vs.  semirandom separation for the dissortative tree model .",
    "our recovery results for recursive majority in section  [ sec : recmaj ] carry through this coupling also , guaranteeing robust recovery by recursive anti - majority in the dissortative tree model .    much of the `` no long - range correlations '' argument of section  [ sec : no - lrc ] carries through unchanged , but precursors @xmath91 of @xmath100 now reconnect isolated nodes with two _ same - spin _ nodes .",
    "hence the new formula for @xmath239 is @xmath561 which still satisfies lemma  [ lemma : binom - ratio ] , by negating each @xmath504 variable everywhere in the proof in appendix  [ sec : binom - ratio - proof ] .",
    "so we also obtain a random vs.  semirandom separation in the dissortative block model .",
    "the sdp upper bounds in section  [ sec : upper - bound ] carry through with very few changes of sign .",
    "one verifies that the unchanged reference objective @xmath303 does maximize @xmath346 where @xmath343 is the matrix form of any semirandom change as redefined above .",
    "a sign does flip in the proof of proposition  [ prop : new - sdp ] : we now have @xmath562 overall we obtain the same guarantees on semirandom partial recovery as in the assortative model , requiring @xmath563 rather than @xmath46 ."
  ],
  "abstract_text": [
    "<S> the stochastic block model is one of the oldest and most ubiquitous models for studying clustering and community detection . in an exciting sequence of developments , motivated by deep but non - rigorous ideas from statistical physics , decelle et al .  </S>",
    "<S> @xcite conjectured a sharp threshold for when community detection is possible in the sparse regime . </S>",
    "<S> mossel , neeman and sly @xcite and massouli @xcite proved the conjecture and gave matching algorithms and lower bounds .    here </S>",
    "<S> we revisit the stochastic block model from the perspective of semirandom models where we allow an adversary to make ` helpful ' changes that strengthen ties within each community and break ties between them . </S>",
    "<S> we show a surprising result that these ` helpful ' changes can shift the information - theoretic threshold , making the community detection problem strictly harder . </S>",
    "<S> we complement this by showing that an algorithm based on semidefinite programming ( which was known to get close to the threshold ) continues to work in the semirandom model ( even for partial recovery ) . </S>",
    "<S> this suggests that algorithms based on semidefinite programming are robust in ways that _ any _ algorithm meeting the information - theoretic threshold can not be .    </S>",
    "<S> these results point to an interesting new direction : can we find robust , semirandom analogues to some of the classical , average - case thresholds in statistics ? we also explore this question in the broadcast tree model , and we show that the viewpoint of semirandom models can help explain why some algorithms are preferred to others in practice , in spite of the gaps in their statistical performance on random models . </S>"
  ]
}
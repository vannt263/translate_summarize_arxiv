{
  "article_text": [
    "digital watermarking concerns those methods about how to hide a special mark into digital multimedia data to solve the problems of legal ownership , integrity and authenticity of the original data @xcite .",
    "the techniques proposed so far can be grouped into two different approaches , depending on whether the watermark is embedded into the least significant bits ( spatial domain approach , @xcite ) or it is embedded attending to the perceptually most significant frequency components of the container image ( frequency domain approach , @xcite ) . usually one tends to apply techniques of the second type , since spatial domain approaches have relatively low information hiding capacity and , what is more important , can be easily erased by lossy image compression .",
    "most of frequency domain approaches use discrete wavelet transform ( dwt ) , discrete fourier transform ( dft ) and discrete cosine transform ( dct ) .",
    "very recently fast hadamard transform ( fht ) has arised as a promising alternative ( see @xcite and @xcite for instance ) .",
    "interested readers in _ hadamard matrices _ ( square matrices consisting in pairwise orthogonal rows ) are referred to @xcite .",
    "no matter the processing speed is , watermarking is usually required to muster three conditions : _ security _ , _ imperceptibility _ and _",
    "robustness_.    security is concerned with embedding a watermark into a piece of content at an untrusted user device without compromising the security of the watermark key , the watermark or the original ( see @xcite for instance ) .",
    "perceptibility measures whether perceptible artifacts on the watermarked image are introduced , that is , if the presence of the watermark in the final image is noticeable .",
    "this magnitude is measured in terms of the _ peak signal to noise ratio _ , or @xmath0 in brief .",
    "it is most easily defined via the _ mean squared error _ ( @xmath1 ) , so that for images with maximum possible pixel value @xmath2 ( i.e. 255 or 1 depending on whether byte or real storing method is adopted ) , @xmath0 is calculated as : @xmath3 here , for two @xmath4 monochrome images @xmath5 and @xmath6 ( where one of the images is considered a noisy approximation of the other ) , @xmath1 is defined as follows:@xmath7    the robustness of a watermark depends on whether it fails to be detected after unintentional or even malicious transformations ( see @xcite for details ) .",
    "it is usually measured in terms of the _ normalized correlation _ ( @xmath8 ) between the extracted watermark image @xmath9 ( presumably modified ) and the original watermark @xmath10 , @xmath11    given a watermarking scheme ,",
    "it may be straightforwardly improved in terms of security , imperceptibility and robustness by simply introducing some pretreatment to the watermark image in order to destroy space relativity ( see @xcite or @xcite for instance ) .",
    "taking the work in @xcite as starting point , in this paper we describe an improved blind ( that is , the original cover image is not needed for extracting the watermark ) watermarking scheme , with the following advantages :    * there is no dependence on the sizes of the watermark and cover images ( in @xcite it is forced to be @xmath12 ) . * the trade - off between imperceptibility and robustness is measured in terms of a parameter @xmath13 .",
    "the greater @xmath13 is , the nearer @xmath8 is to 1 , the smaller @xmath0 is .",
    "accordingly , the smaller @xmath13 is , the smaller @xmath8 is , the greater @xmath0 is . some explanations ( beyond simple computational evidence ! ) will be given in order to justify the optimal value for @xmath13 , depending on the way in which the image is being stored ( real or byte representation ) .",
    "* robustness , security and imperceptibility of the scheme are significantly improved thanks to a pretreatment of the watermark image .",
    "we have designed a genetic algorithm ( in the sequel , ga in brief ) , looking for a permutation of the original watermark which is as uncorrelated as possible to it .",
    "this ga , equipped with a specific crossover operator specially designed for the occasion , beats usual ga equipped with classical crossover operators concerning permutations problems ( such as _ order 1 _ , _ partially mapped _ and _ cycle _ crossovers , or _ edge recombination _ ) .",
    "we organize the paper as follows .",
    "section 1 is devoted to introduce the problem of watermarking , and our proposal .",
    "the ga looking for permuted images of the watermark with low correlation is described in section 2 .",
    "section 3 is devoted to explain the watermarking scheme .",
    "some executions and examples are showed in section 4 .",
    "we include a last section for conclusions and comments .",
    "given an image @xmath14 , we want to find a permuted image @xmath15 of @xmath14 , so that their normalized correlation @xmath16 is as less as possible .",
    "the key problem here is establishing a method for looking for permutations of the watermark as uncorrelated as possible .",
    "since one can not afford to perform an exhaustive search in the full set of permutations , we are dealing with a problem worth of some kind of heuristic solution .",
    "permutation encoded problems are often used to represent scheduling problems and classic combinatorial optimization problems , such as the traveling salesman problem , bin packing or job scheduling , to name some . here",
    ", the goal consists in ( or can be solved by ) arranging some objects in a certain order .",
    "these optimization problems can seldom be solved by using exhaustive searches , due to the large size of the search space .",
    "some kind of heuristic is required instead .",
    "for instance , gas .    in",
    "what follows , we assume that the reader is familiar with the general framework of gas , and their usual elements and characteristics . if necessary , @xcite ( and the references there included ) is a good place to get a general overview of the subject .",
    "the gas which deal with permutations are known as _ ordering gas _ or simply _ order - based gas_.    although gas are widely recognized as powerful and widely applicable optimization methods for string encoded problems , there is no standard ga for manipulating ordered - list representations .",
    "however , several crossover operators and mutations have been suggested in the literature , including _ order crossover _ ( @xmath17 ) , _ partially mapped crossover _ ( @xmath18 ) , _ cycle crossover _ ( @xmath19 ) , _ edge recombination _ ( @xmath20 ) , _ insert mutation _ ( @xmath21 ) , _ swap mutation _ ( @xmath22 ) , _ inversion mutation _ ( @xmath23 ) or _ scramble mutation _",
    "@xmath24 ) , for instance .",
    "the interested reader is referred to @xcite and @xcite for details and further bibliography .",
    "here we use a _ steady - state _",
    "ga , in the sense that three offspring ( two coming from crossover , and one more coming from mutation ) are generated per generation , which will replace the worst adapted individuals at the moment .",
    "this way , we use also _ elitism _ , since we always keep the fittest solution so far .",
    "additionally , we use a `` no duplicates '' policy , in the sense that identical individuals are not allowed to occur in the same generation .    in order to select two individuals for reproduction purposes , we use _",
    "rank - based _ selection , by means of _ linear ranking_. more concretely , assume that the size of the population is @xmath25 . then sort the population in terms of fitness , so that fittest has rank @xmath25 and worst rank @xmath26 .",
    "now fix a factor @xmath27 ( we use @xmath28 in the sequel ) . in this",
    "circumstances , the probability that the @xmath29 individual is selected for reproduction is given by @xmath30 depending on whether the factor @xmath31 is closer to 1 , fitness is accordingly relativized for choosing the individual .",
    "our population consists of 20 individuals , and every run is limited to 50 generations .",
    "the fitness function consists in the normalized correlation ( [ nc ] ) between the permuted image and the original watermark , so that the lesser @xmath8 is , the fitter an individual is .",
    "although defining crossover operators for permutation encoding is a difficult task , nevertheless , we have designed a new crossover operator ( which we denote simply by @xmath32 ) , attending to the characteristics of our problem .    since",
    "our watermark images are binary ( just black ( = 0 ) and white ( = 1 ) pixels ) @xmath33 matrices , we can easily encode them as @xmath34-length binary vectors .",
    "furthermore , we can just save the positions in which 1 ( analogously , 0 ) entries are displayed .",
    "assume that the watermark image consists of @xmath35 white pixels .",
    "then the set of its permuted images is uniquely determined by the set of @xmath35-subsets of @xmath36 .    given two such different @xmath35-subsets @xmath37 and @xmath38 , we select proportionally positions in @xmath37 and @xmath38 attending to their fitness .",
    "assume that @xmath37 has better fitness than @xmath38 .",
    "fix randomly a real number @xmath39 .",
    "then we will get a @xmath40-subset @xmath41 of @xmath37 , and join this subset with a random @xmath42-subset of @xmath43 .",
    "a priori , there is no evidence of which among the crossover operations cited above is more suitable for our purposes .",
    "the comparison in table [ cruces ] suggests that our proposed crossover operation @xmath32 is more successful than traditional ordering crossovers @xmath17 , @xmath18 , @xmath19 and @xmath20 .    due to the binary character of the watermarks",
    ", we have chosen two images with significantly different density of white pixels ( the _ fama _ logo of the university of seville and the common _ stop _ driving signal , see table [ marcas ] ) .",
    "[ marcas ]    ._fama _ and _ stop _ watermarks . [ cols=\"^,^,^ \" , ]     for each of these images , we have performed 10 runs for each crossover and mutation operators , each of which consisted of 50 generations .",
    "the size of every population is fixed in 20 individuals . in the table",
    "below , @xmath44 denotes the best @xmath8 value at generation @xmath45 , @xmath46 denotes the average of @xmath44 values along the 10 runs , and @xmath47 denotes the average of the generation in which fittest @xmath48 was found along the 10 runs .",
    "the optimal values for @xmath8 found so far are written in bold .",
    "they have been obtained performing a ga consisting of our proposed crossover operator @xmath32 and the inverse mutation operator .",
    "[ cruces ] @xmath49    notice that there is no interest in timing considerations here , since this is a preprocessing step in our watermarking scheme .",
    "anyway , it is noticeable that every run is performed in just a few seconds .    from table [ cruces ] above",
    "we conclude that our ga looking for a minimally correlated permuted image is successful , in the sense that normalized correlations of random permuted images ( forming the initial populations ) are always greater than the local optimum found by the ga , no matter the crossover operator has been selected .",
    "moreover , the crossover @xmath32 seems to provide fitter permuted images than usual ordering crossovers .    in the following section we describe a watermarking scheme .",
    "we claim that pretreatment of the original watermark ( so that a minimally correlated permuted image is obtained and used instead ) , improves the watermarking scheme in an obvious way , not only from the security point of view ( no matter one knows the extracting procedure , the extracted watermark will be meaningless ) , but sometimes ( depending on the concrete image , compare tables 4 and 6 below ) also from the point of view of invisibility , without loose of robustness .",
    "grayscale digital images may be stored both in real ( the real values of the pixels moving from 0=black to 1=white ) or byte ( the integer values of the pixels moving from 0=black to 255=white ) encoding .",
    "nevertheless , usually byte encoding is preferred , since not every computational system can support working with real encoding ( and it requires a discretization step ) .",
    "we will work here with byte encoding , unless stated otherwise .",
    "let @xmath50 be the original cover grayscale digital image , encoded as a @xmath51 matrix with integer entries in @xmath52 .",
    "let @xmath53 be the binary watermark , encoded as a @xmath54 matrix with @xmath55 entries .",
    "the embedding procedure may be detailed as follows :    * find a normalized hadamard matrix @xmath56 of size @xmath57 closest to @xmath58 . *",
    "partition the original image @xmath50 into non - overlapped blocks of size @xmath58 .",
    "consider the sub - blocks of size @xmath59 naturally embedded , which we denote by @xmath60 , @xmath61 .",
    "* apply the _ extended _ hadamard transform to @xmath60 , in order to obtain @xmath62 * select two entries @xmath63 and @xmath64 in @xmath65 in the same row ( or column ) , say @xmath66 and @xmath67 for instance . depending on whether the corresponding pixel @xmath45 in @xmath53 is 0 or 1 , force that @xmath68 or @xmath69 accordingly . to this end , fix a value @xmath13 , and take @xmath70 .",
    "then set : * * if @xmath71 and @xmath72 then actualize @xmath73 , @xmath74 . * * if @xmath75 and @xmath76 then actualize @xmath77 , @xmath78 . * the watermarked block @xmath79 is obtained by the inverse transform of ( [ had ] ) , @xmath80    at this point",
    ", we would like to make two major comments :    1 .   taking a deeper insight in the hadamard transform ( [ had ] ) one deduces that a change @xmath81 in @xmath82 translates into a change about @xmath83 in @xmath84 .",
    "hence , in order to get noticeable byte changes , we should take @xmath85 . in the case of real encoded images ,",
    "@xmath13 may be chosen arbitrarily small ( at the risk of decreasing the normalized correlation of the extracted watermark ) .",
    "although the _ hadamard conjecture _ about the existence of these matrices in every order @xmath57 remains open , there are well known families of hadamard matrices filling an infinite amount of sizes @xmath57 ( see @xcite for details , and @xcite for a computer aided generation of hadamard matrices ) .",
    "the extraction procedure is just the inverse procedure of embedding .",
    "let @xmath79 be the @xmath29-block of the watermarked image .",
    "in order to recover the pixel @xmath45 of the watermark one must simply proceed as follows :    * by ( [ had ] ) , form @xmath86 .",
    "* let @xmath63 and @xmath64 be the entries used in the embedding procedure .",
    "if @xmath68 set @xmath71 , and @xmath75 otherwise .",
    "we have used 5 different @xmath87 cover images ( see table 3 ) , and two different @xmath88 watermarks ( see table 1 ) . we have fixed @xmath56 to be the @xmath89 sylvester hadamard matrix , @xmath90    [ cover ]    ccc   &   &   +    table 4 shows the @xmath0 and @xmath8 values obtained for different values of the parameter @xmath13 .",
    "[ resultados ] @xmath91{fama.eps } } & 2.01 & 47.1796&1 & \\includegraphics[width=10mm]{fama.eps } & 40.3194 & 1&\\includegraphics[width=10mm]{fama.eps } & 46.4154 & 1 & \\includegraphics[width=10mm]{fama.eps}\\\\ \\cline{2 - 11 }   & 2 & 47.2432 & 1&\\includegraphics[width=10mm]{fama.eps } & 40.34 & 1 & \\includegraphics[width=10mm]{fama.eps } & 46.4493&1 & \\includegraphics[width=10mm]{fama.eps } \\\\ \\cline{2 - 11 }   & 1.99 & 47.3031 & 0.9976 & \\includegraphics[width=10mm]{lenaus199.eps } & 40.3604 & 0.9989&\\includegraphics[width=10mm]{monous199.eps } & 46.4827 & 0.9982 & \\includegraphics[width=10mm]{barcosus199.eps } \\\\",
    "\\hline \\hline \\multirow{3}{*}{\\includegraphics[width=10mm]{stop.eps } } & 2.01 & 47.256&1 & \\includegraphics[width=10mm]{stop.eps}&40.1841 & 1 & \\includegraphics[width=10mm]{stop.eps } & 46.4054 & 1 & \\includegraphics[width=10mm]{stop.eps}\\\\ \\cline{2 - 11 }   & 2 & 47.2988 & 1 & \\includegraphics[width=10mm]{stop.eps } & 40.2034 & 1 & \\includegraphics[width=10mm]{stop.eps } & 46.431 & 1 & \\includegraphics[width=10mm]{stop.eps}\\\\ \\cline{2 - 11 }   & 1.99 & 47.3414 & 0.9586&\\includegraphics[width=10mm]{lenastop199.eps } & 40.2238 & 0.9676 & \\includegraphics[width=10mm]{monostop199.eps } & 46.457 & 0.9696 & \\includegraphics[width=10mm]{barcosstop199.eps } \\\\",
    "\\hline \\end{array}\\ ] ] + @xmath92{fama.eps } } & 2.01 & 47.256&1 & \\includegraphics[width=10mm]{fama.eps}&38.0736 & 1 & \\includegraphics[width=10mm]{fama.eps}\\\\ \\cline{2 - 8 }   & 2 & 48.5626 & 1 & \\includegraphics[width=10mm]{fama.eps } & 38.1818 & 0.9711 & \\includegraphics[width=10mm]{testlenaus2.eps } \\\\ \\cline{2 - 8 }   & 1.99 & 48.6202 & 0.9982&\\includegraphics[width=10mm]{pimientosus199.eps } & 38.3227 & 0.9191 & \\includegraphics[width=10mm]{testlenaus199.eps }   \\\\",
    "\\hline \\hline \\multirow{3}{*}{\\includegraphics[width=10mm]{stop.eps } } & 2.01 & 48.2392 & 1&\\includegraphics[width=10mm]{stop.eps } & 42.7214&1 & \\includegraphics[width=10mm]{stop.eps } \\\\ \\cline{2 - 8 }   & 2 & 48.3059 & 1&\\includegraphics[width=10mm]{stop.eps } & 43.0388 & 0.6448 & \\includegraphics[width=10mm]{testlenastop2.eps } \\\\ \\cline{2 - 8 }   & 1.99 & 48.3734 & 0.9480&\\includegraphics[width=10mm]{pimientosstop199.eps } & 43.3333 & 0.4993&\\includegraphics[width=10mm]{testlenastop199.eps }   \\\\ \\hline \\end{array}\\ ] ]",
    "table 5 shows that the proposed watermarking scheme is robust under different attacks , such as jpeg compression ( with quality factors 80% and 90% ) , gaussian noise ( of mean 0 and variance 0.001 ) and salt - and - pepper noise ( of density 0.01 ) .",
    "[ ruidos ] @xmath93{fama.eps } } & jpg_{90\\% } & 39.9389 & 0.8758 & \\includegraphics[width=10mm]{lenaus90.eps } & 35.3971 & 0.9057 & \\includegraphics[width=10mm]{monous90.eps } & 38.4282&0.8722 & \\includegraphics[width=10mm]{barcosus90.eps } \\\\ \\cline{2 - 11 }   & jpg_{80\\% } & 38.0837 & 0.7747&\\includegraphics[width=10mm]{lenaus80.eps } & 31.9305 & 0.8313 & \\includegraphics[width=10mm]{monous80.eps}&36.0909 & 0.7859 & \\includegraphics[width=10mm]{barcosus80.eps } \\\\ \\cline{2 - 11 }   & gauss .",
    "& 47.0694 & 0.9969&\\includegraphics[width=10mm]{lenausgauss.eps } & 40.3029 & 0.9978 & \\includegraphics[width=10mm]{monousgauss.eps}&46.304 & 0.9971 & \\includegraphics[width=10mm]{barcosusgauss.eps }   \\\\",
    "\\cline{2 - 11 }   & s.\\ & p. & 25.4416",
    "& 0.9139&\\includegraphics[width=10mm]{lenaussp.eps } & 25.47 & 0.9238 & \\includegraphics[width=10mm]{monoussp.eps } & 25.5055 & 0.9179 & \\includegraphics[width=10mm]{barcosussp.eps }   \\\\",
    "\\hline \\hline \\multirow{4}{*}{\\includegraphics[width=10mm]{stop.eps } } & jpg_{90\\% } & 39.9704 & 0.6477 & \\includegraphics[width=10mm]{lenastop90.eps } & 35.3456 & 0.7294 & \\includegraphics[width=10mm]{monostop90.eps}&38.4404 & 0.6636 & \\includegraphics[width=10mm]{barcosstop90.eps } \\\\ \\cline{2 - 11 }   & jpg_{80\\% } & 38.0843 & 0.4713&\\includegraphics[width=10mm]{lenastop80.eps } & 31.9249 & 0.5663 & \\includegraphics[width=10mm]{monostop80.eps } & 36.0861 & 0.4869 & \\includegraphics[width=10mm]{barcosstop80.eps } \\\\ \\cline{2 - 11 }   & gauss . & 47.1223 & 0.9729 & \\includegraphics[width=10mm]{lenastopgauss.eps } & 40.1736 & 0.9884 & \\includegraphics[width=10mm]{monostopgauss.eps}&46.2867 & 0.9846 & \\includegraphics[width=10mm]{barcosstopgauss.eps } \\\\ \\cline{2 - 11 }   & s.\\ & p. & 25.4419",
    "& 0.7591 & \\includegraphics[width=10mm]{lenastopsp.eps } & 25.4655 & 0.7781 & \\includegraphics[width=10mm]{monostopsp.eps } & 25.5054&0.7620 & \\includegraphics[width=10mm]{barcosstopsp.eps } \\\\",
    "\\hline \\end{array}\\ ] ] + @xmath94{fama.eps } } & jpg_{90\\% } & 38.4336&0.8739 & \\includegraphics[width=10mm]{pimientosus90.eps } & 37.5428 & 0.9698 & \\includegraphics[width=10mm]{testlenaus90.eps } \\\\ \\cline{2 - 8 }   & jpg_{80\\% } & 36.5783 & 0.7764 & \\includegraphics[width=10mm]{pimientosus80.eps } & 36.9454 & 0.8912 & \\includegraphics[width=10mm]{testlenaus80.eps } \\\\ \\cline{2 - 8 }   & gauss . &",
    "48.3526 & 0.9962 & \\includegraphics[width=10mm]{pimientosusgauss.eps } & 38.0697 & 0.9941 &   \\includegraphics[width=10mm]{testlenausgauss.eps } \\\\ \\cline{2 - 8 }   & s.\\ & p. & 25.3601 & 0.9140 &",
    "\\includegraphics[width=10mm]{pimientosussp.eps } & 24.9004&0.9152 &   \\includegraphics[width=10mm]{testlenaussp.eps } \\\\",
    "\\hline \\hline \\multirow{4}{*}{\\includegraphics[width=10mm]{stop.eps } } & jpg_{90\\% } & 38.4118 & 0.6660&\\includegraphics[width=10mm]{pimientosstop90.eps } & 41.3027 & 0.7895 & \\includegraphics[width=10mm]{testlenastop90.eps}\\\\ \\cline{2 - 8 }   & jpg_{80\\% } & 36.5486 & 0.4955 & \\includegraphics[width=10mm]{pimientosstop80.eps } & 39.9323 & 0.4621 & \\includegraphics[width=10mm]{testlenastop80.eps } \\\\ \\cline{2 - 8 }   & gauss . &",
    "48.1107 & 0.9793 & \\includegraphics[width=10mm]{pimientosstopgauss.eps } & 42.7086&0.9650 &   \\includegraphics[width=10mm]{testlenastopgauss.eps } \\\\ \\cline{2 - 8 }   & s.\\ & p. & 25.3589 & 0.7548 &",
    "\\includegraphics[width=10mm]{pimientosstopsp.eps } & 25.0392 & 0.7564 & \\includegraphics[width=10mm]{testlenastopsp.eps }    \\\\",
    "\\hline \\end{array}\\ ] ]    [ nuevopsnr ] @xmath95{fama.eps }   & \\includegraphics[width=10mm]{usga.eps}&47.5041&1 & 40.2723 & 1 & 46.4686 & 1   & 48.7436 & 1 & 43.5181 & 1 \\\\ \\hline \\hline \\includegraphics[width=10mm]{stop.eps } & \\includegraphics[width=10mm]{stopga.eps}&47.2524 & 1&40.4052 & 1   & 46.2693&1 & 48.1666 & 1 & 43.5181&1 \\\\",
    "\\hline \\end{array}\\ ] ]    although the proposed watermarking scheme works fine without any need of pretreatment of the watermark , we want to emphasize that permuting the initial watermark ensures that security and imperceptibility ( and even robustness to a somewhat lesser degree ) are enhanced .",
    "table 6 below shows computational evidence of this fact , when we substitute the original watermark @xmath53 by the permuted images @xmath96 provided by the ga described in the previous section ( those corresponding to the bold entries in table 2 ) .",
    "in this paper we have described a new blind watermarking scheme .",
    "we have shown that pretreatment of the original watermark so that a minimally correlated permuted image is obtained and used instead , improves the watermarking scheme not only from the security point of view , but also from the point of view of imperceptibility , without loose of robustness ( see table 6 ) .",
    "although the problem of finding a minimally correlated permuted image from the given watermark is hard , we have designed an order - based steady - state ga which successfully solve the problem .",
    "it includes a proper crossover operator , specifically developed attending to the particular features of our problem .",
    "this crossover operator has been shown to beat classical order crossover operators experimentally ( see table 2 ) .",
    "a.t.s . ho ,",
    "j. shen , s.h .",
    "tan , a.c .",
    "kot , digital image - in - image watermarking for copyright protection of satellite images using the fast hadamard transform , in : proceedings of the 24th ieee int .",
    "geoscience and remote sensing symposium , toronto , canada , 2002 , pp .",
    "3311 - 3313 .",
    "a. lemma , s. katzenbeisser , m. celik , m. van der veen , secure watermark embedding through partial encryption , in : proceedings iwdw2006 , eds .",
    "y.q . shi and b. jeon ,",
    "lncs 4283 , springer verlag , berlin heidelberg , 2006 , pp .",
    "433 - 445 .",
    "s. voloshynovskiy , f. deguillaume , o. koval , t. pun , robust watermarking with channel state estimation , signal processing , special issue on : security of data hiding technologies , eds .",
    "s. voloshynovskiy , t. pun , j. fridrich , f. prez - gonzlez , n. memon , 83 , 10 , 2003 ."
  ],
  "abstract_text": [
    "<S> a genetic algorithm based robust blind digital watermarking scheme is presented . starting from a binary image ( the original watermark ) , </S>",
    "<S> a genetic algorithm is performed searching for a permutation of this image which is as uncorrelated as possible to the original watermark . </S>",
    "<S> the output of the ga is used as our final watermark , so that both security and robustness in the watermarking process is improved . </S>",
    "<S> now , the original cover image is partitioned into non - overlapped square blocks ( depending on the size of the watermark image ) . </S>",
    "<S> then a ( possibly extended ) hadamard transform is applied to these blocks , so that one bit information from the watermark image is embedded in each block by modifying the relationship of two coefficients in the transformed matrices . the watermarked image is finally obtained by simply performing the inverse ( extended ) hadamard transform on the modified matrices . </S>",
    "<S> the experimental results show that our scheme keeps invisibility , security and robustness more likely than other proposals in the literature , thanks to the ga pretreatment . </S>"
  ]
}
{
  "article_text": [
    "several works ( e.g. , ratinov and roth , 2009 ; cohen and sarawagi , 2004 ) have shown that injecting dictionary matches as features in a sequence tagger results in significant gains in ner performance . however , building these dictionaries requires a huge amount of human effort and it is often difficult to get good coverage for many named entity types .",
    "the problem is more severe when we consider named entity types such as gene , virus and disease , because of the large ( and growing ) number of names in use , the fact that the names are heavily abbreviated and multiple names are used to refer to the same entity @xcite . also , these dictionaries can only be built by domain experts , making the process very expensive .",
    "this paper describes an approach for automatic construction of dictionaries for ner using large amounts of unlabeled data and a small number of seed examples .",
    "our approach consists of two steps .",
    "first , we collect a high recall , low precision list of _ candidate phrases _ from the large unlabeled data collection for every named entity type using simple rules . in the second step , we construct an accurate dictionary of named entities by removing the noisy candidates from the list obtained in the first step .",
    "this is done by learning a classifier using the lower dimensional , real - valued cca @xcite embeddings of the candidate phrases as features and training it using a small number of labeled examples .",
    "the classifier we use is a binary svm which predicts whether a candidate phrase is a named entity or not .",
    "we compare our method to a widely used semi - supervised algorithm based on co - training @xcite .",
    "the dictionaries are first evaluated on virus @xcite and disease @xcite ner by using them directly in dictionary based taggers .",
    "we also give results comparing the dictionaries produced by the two semi - supervised approaches with dictionaries that are compiled manually .",
    "the effectiveness of the dictionaries are also measured by injecting dictionary matches as features in a conditional random field ( crf ) based tagger .",
    "the results indicate that our approach with minimal supervision produces dictionaries that are comparable to dictionaries compiled manually .",
    "finally , we also compare the quality of the candidate phrase embeddings with word embeddings @xcite by adding them as features in a crf based sequence tagger .",
    "we first give background on canonical correlation analysis ( cca ) , and then give background on crfs for the ner problem .      the input to cca consists of @xmath0 paired observations @xmath1 where @xmath2 are the feature representations for the two views of a data point .",
    "cca simultaneously learns projection matrices @xmath3 ( @xmath4 is a small number ) which are used to obtain the lower dimensional representations @xmath5 where @xmath6 .",
    "@xmath7 are chosen to maximize the correlation between @xmath8 and @xmath9 .",
    "consider the setting where we have a label for the data point along with it s two views and either view is sufficient to make accurate predictions . and give strong theoretical guarantees when the lower dimensional embeddings from cca are used for predicting the label of the data point .",
    "this setting is similar to the one considered in co - training @xcite but there is no assumption of independence between the two views of the data point .",
    "also , it is an exact algorithm unlike the algorithm given in . since we are using lower dimensional embeddings of the data point for prediction , we can learn a predictor with fewer labeled examples .",
    "crf based sequence taggers have been used for a number of ner tasks ( e.g. , mccallum and li , 2003 ) and in particular for biomedical ner ( e.g. , mcdonald and pereira , 2005 ; burr settles , 2004 ) because they allow a great deal of flexibility in the features which can be included .",
    "the input to a crf tagger is a sentence ( @xmath10 ) where @xmath11 are words in the sentence .",
    "the output is a sequence of tags @xmath12 where @xmath13 .",
    "@xmath14 is the tag given to the first word in a named entity , @xmath15 is the tag given to all words except the first word in a named entity and @xmath16 is the tag given to all other words .",
    "we used the standard ner baseline features ( e.g. , dhillon et al .",
    ", 2011 ; ratinov and roth , 2009 ) which include :    * current word @xmath17 and its lexical features which include whether the word is capitalized and whether all the characters are capitalized .",
    "prefix and suffixes of the word @xmath17 were also added . * word tokens in window of size two around the current word which include @xmath18 and also the capitalization pattern in the window . *",
    "previous two predictions @xmath19 and @xmath20 .",
    "the effectiveness of the dictionaries are evaluated by adding dictionary matches as features along with the baseline features @xcite in the crf tagger .",
    "we also compared the quality of the candidate phrase embeddings with the word - level embeddings by adding them as features @xcite along with the baseline features in the crf tagger .",
    "this section describes the two steps in our approach : obtaining candidate phrases and classifying them .",
    "we used the full text of 110,369 biomedical publications in the biomed central corpus to get the high recall , low precision list of candidate phrases .",
    "the advantages of using this huge collection of publications are obvious : almost all ( including rare ) named entities related to the biomedical domain will be mentioned and contains more recent developments than a structured resource like wikipedia .",
    "the challenge however is that these publications are unstructured and hence it is a difficult task to construct accurate dictionaries using them with minimal supervision .",
    "the list of virus candidate phrases were obtained by extracting phrases that occur between `` the '' and `` virus '' in the simple pattern `` the ... virus '' during a single pass over the unlabeled document collection .",
    "this noisy list had a lot of virus names such as _ influenza _ , _ human immunodeficiency _ and _ epstein - barr _ along with phrases that are not virus names , like _ mutant _ , _ same _ , _ new _ , and so on .",
    "a similar rule like `` the ... disease '' did not give a good coverage of disease names since it is not the common way of how diseases are mentioned in publications .",
    "so we took a different approach to obtain the noisy list of disease names .",
    "we collected every sentence in the unlabeled data collection that has the word `` disease '' in it and extracted noun phrases following the patterns `` diseases like .... '' , `` diseases such as .... '' , `` diseases including .... '' , `` diagnosed with .... '' , `` patients with .... '' and `` suffering from .... '' .",
    "having found the list of candidate phrases , we now describe how noisy words are filtered out from them .",
    "we gather ( _ spelling _ , _ context _ ) pairs for every instance of a candidate phrase in the unlabeled data collection . _",
    "spelling _ refers to the candidate phrase itself while _ context _ includes three words each to the left and the right of the candidate phrase in the sentence .",
    "the _ spelling _ and the _ context _ of the candidate phrase provide a natural split into two views which multi - view algorithms like co - training and cca can exploit .",
    "the only supervision in our method is to provide a few _ spelling _ seed examples ( 10 in the case of virus , 18 in the case of disease ) , for example , _ human immunodeficiency _ is a virus and _ mutant _ is not a virus .",
    "we use cca described in the previous section to obtain lower dimensional embeddings for the candidate phrases using the ( _ spelling _ , _ context _ ) views . unlike previous works such as and",
    ", we use cca to learn embeddings for candidate phrases instead of all words in the vocabulary so that we do nt miss named entities which have two or more words .",
    "let the number of ( _ spelling _ , _ context _ ) pairs be @xmath0 ( sum of total number of instances of every candidate phrase in the unlabeled data collection ) .",
    "first , we map the _ spelling _ and _ context _ to high - dimensional feature vectors . for the _",
    "spelling _ view , we define a feature for every candidate phrase and also a boolean feature which indicates whether the phrase is capitalized or not . for the _ context _ view",
    ", we use features similar to where a feature for every word in the _ context _ in conjunction with its position is defined .",
    "each of the @xmath0 ( _ spelling _ , _ context _ ) pairs are mapped to a pair of high - dimensional feature vectors to get @xmath0 paired observations @xmath1 with @xmath21 ( @xmath22 are the feature space dimensions of the _ spelling _ and _ context _ view respectively ) . using cca",
    ", we learn the projection matrices @xmath3 ( @xmath23 and @xmath24 ) and obtain _ spelling _ view projections @xmath25 .",
    "the k - dimensional _ spelling _ view projection of any instance of a candidate phrase is used as it s embedding .",
    "the k - dimensional candidate phrase embeddings are used as features to learn a binary svm with the seed _ spelling _ examples given in figure 1 as training data .",
    "the binary svm predicts whether a candidate phrase is a named entity or not . since the value of k is small , a small number of labeled examples are sufficient to train an accurate classifier",
    "the learned svm is used to filter out the noisy phrases from the list of candidate phrases obtained in the previous step .",
    "to summarize , our approach for classifying candidate phrases has the following steps :    * input : @xmath0 ( _ spelling _ , _ context _ ) pairs , _ spelling _ seed examples .",
    "* each of the @xmath0 ( _ spelling _ , _ context _ ) pairs are mapped to a pair of high - dimensional feature vectors to get @xmath0 paired observations @xmath1 with @xmath21 . * using cca , we learn the projection matrices @xmath3 and obtain _ spelling _ view projections @xmath25 . *",
    "the embedding of a candidate phrase is given by the k - dimensional _ spelling _ view projection of any instance of the candidate phrase .",
    "* we learn a binary svm with the candidate phrase embeddings as features and the _ spelling _ seed examples given in figure 1 as training data . using this svm",
    ", we predict whether a candidate phrase is a named entity or not .",
    "we discuss here briefly the dl - cotrain algorithm @xcite which is based on co - training @xcite , to classify candidate phrases .",
    "we compare our approach using cca embeddings with this approach . here , two decision list of rules are learned simultaneously one using the _ spelling _ view and the other using the _ context _ view .",
    "the rules using the _ spelling _ view are of the form : full - string = human immunodeficiency @xmath26 virus , full - string = mutant @xmath26 not_a_virus and so on . in the _ context _ view , we used bigram rules where we considered all possible bigrams using the _ context_. the rules are of two types : one which gives a positive label , for example , full - string = human immunodeficiency @xmath26 virus and the other which gives a negative label , for example , full - string = mutant @xmath26 not_a_virus .",
    "the dl - cotrain algorithm is as follows :    input : ( _ spelling _ , _ context _ ) pairs for every instance of a candidate phrase in the corpus , @xmath27 specifying the number of rules to be added in every iteration , precision threshold @xmath28 , _ spelling _ seed examples .",
    "algorithm :     1 .",
    "initialize the _ spelling _ decision list using the _ spelling _ seed examples given in figure 1 and set @xmath29 .     2 .",
    "label the entire input collection using the learned decision list of _ spelling _ rules .",
    "add @xmath30 new _ context _ rules of each type to the decision list of _ context _ rules using the current labeled data .",
    "the rules are added using the same criterion as given in , i.e. , among the rules whose strength is greater than the precision threshold @xmath28 , the ones which are seen more often with the corresponding label in the input data collection are added .",
    "label the entire input collection using the learned decision list of _ context _ rules .",
    "add @xmath30 new spelling rules of each type to the decision list of _ spelling _ rules using the current labeled data .",
    "the rules are added using the same criterion as in step 3 .",
    "set @xmath31 .",
    "if rules were added in the previous iteration , return to step 2 .",
    "the algorithm is run until no new rules are left to be added .",
    "the _ spelling _ decision list along with its strength @xcite is used to construct the dictionaries .",
    "the phrases present in the _ spelling _ rules which give a positive label and whose strength is greater than the precision threshold , were added to the dictionary of named entities .",
    "we found the parameters m and @xmath28 difficult to tune and they could significantly affect the performance of the algorithm .",
    "we give more details regarding this in the experiments section .",
    "previously , introduced a multi - view , semi - supervised algorithm based on co - training @xcite for collecting names of people , organizations and locations .",
    "this algorithm makes a strong independence assumption about the data and employs many heuristics to greedily optimize an objective function .",
    "this greedy approach also introduces new parameters that are often difficult to tune .    in other works such as and external structured resources like wikipedia",
    "have been used to construct dictionaries . even though these methods are fairly successful they suffer from a number of drawbacks especially in the biomedical domain .",
    "the main drawback of these approaches is that it is very difficult to accurately disambiguate ambiguous entities especially when the entities are abbreviations @xcite .",
    "for example , _ dm _ is the abbreviation for the disease _ diabetes mellitus _ and the disambiguation page for _ dm _ in wikipedia associates it to more than 50 categories since _ dm _ can be expanded to _ doctor of management _ , _ dichroic mirror _ , and so on , each of it belonging to a different category . due to",
    "the rapid growth of wikipedia , the number of entities that have disambiguation pages is growing fast and it is increasingly difficult to retrieve the article we want . also , it is tough to understand these approaches from a theoretical standpoint .    used cca to learn word embeddings and added them as features in a sequence tagger .",
    "they show that cca learns better word embeddings than cw embeddings @xcite , hierarchical log - linear ( hlbl ) embeddings @xcite and embeddings learned from many other techniques for ner and chunking .",
    "unlike pca , a widely used dimensionality reduction technique , cca is invariant to linear transformations of the data .",
    "our approach is motivated by the theoretical result in which is developed in the co - training setting .",
    "we directly use the cca embeddings to predict the label of a data point instead of using them as features in a sequence tagger . also , we learn cca embeddings for candidate phrases instead of all words in the vocabulary since named entities often contain more than one word .",
    "learn a multi - class svm using the cca word embeddings to predict the pos tag of a word type .",
    "we extend this technique to ner by learning a binary svm using the cca embeddings of a high recall , low precision list of candidate phrases to predict whether a candidate phrase is a named entity or not .",
    "in this section , we give experimental results on virus and disease ner .",
    "the noisy lists of both virus and disease names were obtained from the biomed central corpus .",
    "this corpus was also used to get the collection of ( _ spelling _ , _ context _ ) pairs which are the input to the cca procedure and the dl - cotrain algorithm described in the previous section .",
    "we obtained cca embeddings for the @xmath32 most frequently occurring word types in this collection along with every word type present in the training and development data of the virus and the disease ner dataset .",
    "these word embeddings are similar to the ones described in and .",
    "we used the virus annotations in the genia corpus @xcite for our experiments .",
    "the dataset contains 18,546 annotated sentences .",
    "we randomly selected 8,546 sentences for training and the remaining sentences were randomly split equally into development and testing sentences .",
    "the training sentences are used only for experiments with the sequence taggers . previously , tested their hmm - based named entity recognizer on this data . for disease ner",
    ", we used the recent disease corpus @xcite and used the same training , development and test data split given by them .",
    "we used a sentence segmenter to get sentence segmented data and stanford tokenizer to tokenize the data .",
    "similar to , all the different disease categories were flattened into one single category of disease mentions .",
    "the development data was used to tune the hyperparameters and the methods were evaluated on the test data .",
    "[ t ]    [ cols=\"^,^,^,^,^,^,^ \" , ]     first , we compare the dictionaries compiled using different methods by using them directly in a dictionary - based tagger .",
    "this is a simple and informative way to understand the quality of the dictionaries before using them in a crf - tagger .",
    "since these taggers can be trained using a handful of training examples , we can use them to build ner systems even when there are no labeled sentences to train .",
    "the input to a dictionary tagger is a list of named entities and a sentence .",
    "if there is an exact match between a phrase in the input list to the words in the given sentence then it is tagged as a named entity .",
    "all other words are labeled as non - entities .",
    "we evaluated the performance of the following methods for building dictionaries :    * * candidate list * : this dictionary contains all the candidate phrases that were obtained using the method described in section 3.1 .",
    "the noisy list of virus candidates and disease candidates had 3,100 and 60,080 entries respectively . *",
    "* manual * : manually constructed dictionaries , which requires a large amount of human effort , are employed for the task .",
    "we used the list of virus names given in wikipedia .",
    "unfortunately , abbreviations of virus names are not present in this list and we could not find any other more complete list of virus names .",
    "hence , we constructed abbreviations by concatenating the first letters of all the strings in a virus name , for every virus name given in the wikipedia list . + for diseases , we used the list of disease names given in the unified medical language system ( umls ) metathesaurus .",
    "this dictionary has been widely used in disease ner ( e.g. , dogan and lu , 2012 ; leaman et al . , 2010 ) + . * * co - training * : the dictionaries are constructed using the dl - cotrain algorithm described previously .",
    "the parameters used were @xmath33 and @xmath34 as given in .",
    "the phrases present in the _ spelling _ rules which give a positive label and whose strength is greater than the precision threshold , were added to the dictionary of named entities .",
    "+    + in our experiment to construct a dictionary of virus names , the algorithm stopped after just 12 iterations and hence the dictionary had only 390 virus names .",
    "this was because there were no _ spelling _ rules with strength greater than @xmath35 to be added .",
    "we tried varying both the parameters but in all cases , the algorithm did not progress after a few iterations .",
    "we adopted a simple heuristic to increase the coverage of virus names by using the strength of the _ spelling _ rules obtained after the @xmath36 iteration .",
    "all _ spelling _ rules that give a positive label and which has a strength greater than @xmath37 were added to the decision list of _ spelling _ rules .",
    "the phrases present in these rules are added to the dictionary .",
    "we picked the @xmath37 parameter from the set [ 0.1 , 0.2 , 0.3 , 0.4 , 0.5 , 0.6 , 0.7 , 0.8 , 0.9 ] using the development data .",
    "+ the co - training algorithm for constructing the dictionary of disease names ran for close to 50 iterations and hence we obtained better coverage for disease names .",
    "we still used the same heuristic of adding more named entities using the strength of the rule since it performed better . * * cca * : using the cca embeddings of the candidate phrases as features we learned a binary svm to predict whether a candidate phrase is a named entity or not .",
    "we considered using 10 to 30 dimensions of candidate phrase embeddings and the regularizer was picked from the set [ 0.0001 , 0.001 , 0.01 , 0.1 , 1 , 10 , 100 ] .",
    "both the regularizer and the number of dimensions to be used were tuned using the development data .",
    "table 1 gives the results of the dictionary based taggers using the different methods described above .",
    "as expected , when the noisy list of candidate phrases are used as dictionaries the recall of the system is quite high but the precision is very low .",
    "the low precision of the wikipedia virus lists was due to the heuristic used to obtain abbreviations which produced a few noisy abbreviations but this heuristic was crucial to get a high recall .",
    "the list of disease names from umls gives a low recall because the list does not contain many disease abbreviations and composite disease mentions such as _ breast and ovarian cancer_. the presence of ambiguous abbreviations affected the accuracy of this dictionary .",
    "the virus dictionary constructed using the cca embeddings was very accurate and the false positives were mainly due to ambiguous phrases , for example , in the phrase _ hiv replication _ , _ hiv _ which usually refers to the name of a virus is tagged as a rna molecule .",
    "the accuracy of the disease dictionary produced using cca embeddings was mainly affected by noisy abbreviations .",
    "we can see that the dictionaries obtained using cca embeddings perform better than the dictionaries obtained from co - training on both disease and virus ner even after improving the co - training algorithm s coverage using the heuristic described in this section .",
    "it is important to note that the dictionaries constructed using the cca embeddings and a small number of labeled examples performs competitively with dictionaries that are entirely built by domain experts .",
    "these results show that by using the cca based approach we can build ner systems that give reasonable performance even for difficult named entity types with almost no supervision .",
    "we did two sets of experiments using a crf tagger .",
    "in the first experiment , we add dictionary features to the crf tagger while in the second experiment we add the embeddings as features to the crf tagger .",
    "the same baseline model is used in both the experiments whose features are described in section 2.2 .",
    "for both the crf experiments the regularizers from the set [ 0.0001 , 0.001 , 0.01 , 0.1 , 1.0 , 10.0 ] were considered and it was tuned on the development set .          here , we inject dictionary matches as features ( e.g. , ratinov and roth , 2009 ; cohen and sarawagi , 2004 ) in the crf tagger . given a dictionary of named entities , every word in the input sentence",
    "has a dictionary feature associated with it .",
    "when there is an exact match between a phrase in the dictionary with the words in the input sentence , the dictionary feature of the first word in the named entity is set to @xmath14 and the dictionary feature of the remaining words in the named entity is set to @xmath15 .",
    "the dictionary feature of all the other words in the input sentence which are not part of any named entity in the dictionary is set to @xmath16 .",
    "the effectiveness of the dictionaries constructed from various methods are compared by adding dictionary match features to the crf tagger .",
    "these dictionary match features were added along with the baseline features .",
    "figure 2 indicates that the dictionary features in general are helpful to the crf model .",
    "we can see that the dictionaries produced from our approach using cca are much more helpful than the dictionaries produced from co - training especially when there are fewer labeled sentences to train .",
    "similar to the dictionary tagger experiments discussed previously , the dictionaries produced from our approach performs competitively with dictionaries that are entirely built by domain experts .",
    "the quality of the candidate phrase embeddings are compared with word embeddings by adding the embeddings as features in the crf tagger . along with the baseline features , * cca - word * model adds word embeddings as features while the * cca - phrase * model adds candidate phrase embeddings as features . *",
    "cca - word * model is similar to the one used in .",
    "we considered adding 10 , 20 , 30 , 40 and 50 dimensional word embeddings as features for every training data size and the best performing model on the development data was picked for the experiments on the test data . for candidate phrase embeddings we used the same number of dimensions that was used for training the svms to construct the best dictionary .",
    "when candidate phrase embeddings are obtained using cca , we do not have embeddings for words which are not in the list of candidate phrases .",
    "also , a candidate phrase having more than one word has a joint representation , i.e. , the phrase `` human immunodeficiency '' has a lower dimensional representation while the words `` human '' and `` immunodeficiency '' do not have their own lower dimensional representations ( assuming they are not part of the candidate list ) .",
    "to overcome this issue , we used a simple technique to differentiate between candidate phrases and the rest of the words .",
    "let @xmath38 be the highest real valued candidate phrase embedding and the candidate phrase embedding be a @xmath39 dimensional real valued vector .",
    "if a candidate phrase occurs in a sentence , the embeddings of that candidate phrase are added as features to the first word of that candidate phrase .",
    "if the candidate phrase has more than one word , the other words in the candidate phrase are given an embedding of dimension @xmath39 with each dimension having the value @xmath40 .",
    "all the other words are given an embedding of dimension @xmath39 with each dimension having the value @xmath41 .",
    "figure 3 shows that almost always the candidate phrase embeddings help the crf model .",
    "it is also interesting to note that sometimes the word - level embeddings have an adverse affect on the performance of the crf model .",
    "the * cca - phrase * model performs significantly better than the other two models when there are fewer labeled sentences to train and the separation of the candidate phrases from the other words seems to have helped the crf model .",
    "we described an approach for automatic construction of dictionaries for ner using minimal supervision . compared to the previous approaches ,",
    "our method is free from overly - stringent assumptions about the data , uses svd that can be solved exactly and achieves better empirical performance .",
    "our approach which uses a small number of seed examples performs competitively with dictionaries that are compiled manually .",
    "we are grateful to alexander rush , alexandre passos and the anonymous reviewers for their useful feedback .",
    "this work was supported by the intelligence advanced research projects activity ( iarpa ) via department of interior national business center ( doi / nbc ) contract number d11pc20153 . the u.s .",
    "government is authorized to reproduce and distribute reprints for governmental purposes notwithstanding any copyright annotation thereon .",
    "the views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements , either expressed or implied , of iarpa , doi / nbc , or the u.s . government ."
  ],
  "abstract_text": [
    "<S> this paper describes an approach for automatic construction of dictionaries for named entity recognition ( ner ) using large amounts of unlabeled data and a few seed examples . </S>",
    "<S> we use canonical correlation analysis ( cca ) to obtain lower dimensional embeddings ( representations ) for _ candidate phrases _ and classify these phrases using a small number of labeled examples . </S>",
    "<S> our method achieves 16.5% and 11.3% f-1 score improvement over co - training on disease and virus ner respectively . </S>",
    "<S> we also show that by adding candidate phrase embeddings as features in a sequence tagger gives better performance compared to using word embeddings . </S>"
  ]
}
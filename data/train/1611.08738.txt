{
  "article_text": [
    "in the theory of information systems , a _ path - functional dependency _ is a data constraint stating that individuals yielding identical values on application of various sequences of functions must themselves be identical .",
    "for example , in a database of customers , we may wish to impose the condition that no two individuals have the same customer i d : @xmath1 alternatively , we may wish to impose the condition that no two customers have both the same name and postal codes : @xmath2 the formula in   has a single equality on the left - hand side of the implication ; and therefore we speak of the condition it expresses as a _ unary _ path - functional dependency .",
    "by contrast , has a conjunction of two equalities on the left - hand side of the implication ; and we speak of the condition it expresses as a _ binary _ path - functional dependency .",
    "path - functional dependencies were introduced by weddell  @xcite ( see also  @xcite ) , and are of particular interest when combined with data - integrity constraints represented using formulas of some _ description logics _  @xcite . in this connection , toman and weddell  @xcite report various results on the decidability of the satisfiability problem for description logics extended with various forms of path - functional constraints .",
    "the purpose of the present paper is to extend those results to a more general logical setting , namely that of the two - variable guarded fragment with counting quantifiers .",
    "the _ guarded fragment _ of first - order logic , denoted @xmath3 , was introduced by andrka et al @xcite as a generalization of modal logic , in an attempt to explain the latter s good computational behaviour ( see e.g.  @xcite ) .",
    "roughly speaking , @xmath3 is the fragment of first - order logic in which all quantification is relativized ( guarded ) by atoms featuring all variables free in the context of quantification .",
    "thus , for example , in the guarded formula @xmath4 stating that every customer has a last name ( which is of type string ) , the quantifier @xmath5 is relativized by the binary atom @xmath6 .",
    "this fragment has the so - called finite model property : if a @xmath3-formula is satisfied in some structure , it is satisfied in some finite structure .",
    "the problem of determining whether a given @xmath3-formula is satisfiable is 2-@xmath0-complete @xcite , dropping to @xmath0-complete if the number of variables in formulas is less than some fixed limit @xmath7 .",
    "of particular interest in this regard is the case @xmath8 , since this fragment remains @xmath0-complete even when we add so - called _ counting quantifiers _",
    "( ` there exist at most / at least / exactly @xmath9 @xmath10 such that  ' ) .",
    "the resulting logic , denoted @xmath11 , allows us to state , for example , that customers are uniquely identified by their customer identification numbers : @xmath12    the logic @xmath11 lacks the finite model property .",
    "nevertheless , the satisfiability and finite satisfiability problems for this fragment are both decidable , and in fact @xmath0-complete  @xcite .    from a logical point of view , a _",
    "database _ is simply a finite set of ground literals ",
    "atomic statements or negated atomic statements featuring only constants as arguments : @xmath13 we assume that such data are subject to _ constraints _ presented in the form of a logical theory  as it might be , a collection of formulas of @xmath11 , for instance",
    ". those constraints may imply the existence of individuals not mentioned in the database : indeed , since @xmath11 lacks the finite model property , they may consistently imply the existence of infinitely many such individuals .",
    "we denote by @xmath14 the logic that results from adding a database to @xmath11 ; and we denote by @xmath15 the logic that results from adding unary and binary path - functional dependencies to @xmath14 .",
    "( a formal definition is given in sec .",
    "[ sec : preliminaries ] . )",
    "the _ satisfiability problem _ for @xmath15 asks the following : given a database @xmath16 , a @xmath11-formula , @xmath17 and a finite set of unary and binary path - functional dependencies @xmath18 , are the data in @xmath16 consistent with the constraints expressed in @xmath17 and @xmath18 ?",
    "the _ finite satisfiability problem _ for @xmath15 asks the same question , but subject to the assumption of a finite universe .",
    "we show that both of these problems are @xmath0-complete , the same as the corresponding problems for @xmath11 alone .",
    "that is : adding databases and unary or binary path - functional dependencies to @xmath11 does not change the complexity class of the satisfiability and finite satisfiability problems .",
    "our strategy will be to reduce the satisfiability and finite satisfiability problems for @xmath15 to the corresponding problems for @xmath14 , by showing how unary and binary path - functional dependencies can be systematically eliminated .",
    "the case of unary path - functional dependencies is simple , and is dealt with in the preliminary material of sec .",
    "[ sec : preliminaries ] .",
    "binary path - functional dependencies , however , present a greater challenge , and occupy the whole of sections  [ sec : decompositions][sec : gcdk ] . our point of departure here is the familiar observation that models of @xmath11-formulas , when viewed as graphs , can be assumed to contain no ` short ' cycles .",
    "we use this observation to characterize putative violations of binary path - functional dependencies in terms of the occurrence of certain acyclic subgraphs , which can then be forbidden by writing additional @xmath11-formulas .",
    "the remainder of the paper , sections  [ sec : types][sec : main_result ] , is devoted to establishing that the satisfiability and finite satisfiability problems for @xmath14 are both in @xmath0 .",
    "the argument here proceeds by reduction to linear programming feasibility , closely following the proof given in  @xcite that the finite satisfiability of @xmath11 is in @xmath0 .",
    "we show how to modify that proof so as to accommodate the presence of a database .",
    "a _ literal _ is an atomic formula or the negation of an atomic formula ; a literal is _ ground _ if all arguments occurring in it are constants .",
    "if @xmath17 is any formula , the _ length _ of @xmath17 , denoted @xmath19 , is the number of symbols it contains .",
    "in addition to the usual boolean connectives , quantifiers @xmath20 , @xmath21 , and equality predicate , we employ the _ counting quantifiers _",
    "@xmath22 , @xmath23 and @xmath24 ( for all @xmath25 ) .",
    "a _ sentence _ is a formula with no free variables . in most of this paper ,",
    "we consider _ two - variable _ formulas  that is , those whose only variables ( free or bound ) are @xmath10 and @xmath26 .",
    "furthermore , we restrict attention to signatures comprised of individual constants or predicates of arity 1 or 2 ; in particular , function symbols are not allowed .",
    "we call literals involving only symbols from some signature @xmath27 @xmath27-_literals_.    an atomic formula of the form @xmath28 or @xmath29 is called a _",
    "guard_. the guarded two - variable fragment with counting , denoted @xmath11 is the smallest set of formulas satisfying the following conditions :    * unary or binary literals with all arguments in @xmath30 are formulas , with @xmath31 allowed as a binary predicate ; * the set of formulas is closed under boolean combinations ; * if @xmath17 is a @xmath11-formula with at most one free variable and @xmath32 is a variable ( i.e.  either @xmath10 or @xmath26 ) , then @xmath33 and @xmath34 are formulas . * if @xmath17 is a formula , @xmath35 is a guard , @xmath32 is a variable and @xmath36 is a bit - string , then @xmath37 , @xmath38 and @xmath39 are formulas .",
    "we read @xmath40 as ` there exist at least @xmath36 @xmath32 such that @xmath17 ' , and similarly for @xmath23 and @xmath24 .",
    "the formal semantics is as expected . to improve readability",
    ", we write @xmath41 as @xmath42 , and @xmath43 as @xmath44 .",
    "where no confusion results , we equivocate between bit - strings and the integers they represent , it being understood that the size of the expression @xmath24 is approximately @xmath45 ( and not @xmath36 ) .",
    "observe that formulas of the form @xmath46 are not in @xmath11 , because counting quantifiers must be guarded by atoms featuring both variables .",
    "( this is not a gratuitous restriction : adding such formulas to @xmath11 renders the fragment @xmath47-time hard . ) in the sequel , formulas that are obviously logically equivalent to a @xmath11-formula will typically be counted as @xmath11-formulas by courtesy .    a _",
    "database _ is a set @xmath16 of ground ( function - free ) literals .",
    "we call @xmath16 _ consistent _ if it includes no pair of ground literals @xmath48 . where the signature @xmath27 is clear from context , we call @xmath16 _ complete _ if for any ground @xmath27-literal @xmath49 , @xmath50 is inconsistent .",
    "given a database @xmath16 , a _",
    "completion _ for @xmath16 is any complete set @xmath51 of ground ( function - free ) @xmath27-literals .",
    "it is obvious that every consistent database has a consistent completion .",
    "databases are interpreted as sets of atomic formulas in the expected way . for convenience",
    ", we shall employ the unique names assumption throughout : distinct individual constants are interpreted as distinct individuals .",
    "hence , when a particular interpretation is clear from context , we sometimes equivocate between constants and their denotations to streamline the presentation . to further reduce notational clutter , we allow ourselves to treat a database @xmath16 as a single conjunctive formula  i.e .",
    ", writing @xmath16 in place of @xmath52 .",
    "the _ two - variable guarded fragment with counting and databases _ , denoted @xmath14 , is defined exactly as for @xmath11 , except that we have the additional syntax rule    * ground unary or binary literals are formulas .",
    "although @xmath14 allows formulas in which ground literals appear within the scope of quantifiers , in practice , it is much more natural to separate out the ` @xmath11-part ' from the ` database - part ' : thus all @xmath14-formulas encountered in the sequel will have the form @xmath53 , where @xmath17 is a @xmath11-formula , and @xmath16 a database .",
    "notice , however , that , in @xmath14 , it is forbidden to mix variables and individual constants in atoms : thus , for example , @xmath54 is not a @xmath14-formula . if @xmath55 is any structure , we call those elements interpreting an individual constant _ active _ , and we refer to the set of all such elements as the _ active domain _ ( or sometimes , informally , as _ the database _ ) . elements which are not active are called _",
    "passive_.    we assume that any signature @xmath27 features a ( possibly empty ) distinguished subset of binary predicates , which we refer to as _ key predicates_. key predicates are always interpreted as the graphs of irreflexive functions .",
    "that is , if @xmath56 is a key predicate , then in any structure @xmath55 interpreting @xmath56 , @xmath57 and @xmath58 .",
    "( we remark that this formula is in @xmath11 . )",
    "we use the ( possibly subscripted or otherwise decorated ) letters @xmath56 , @xmath59 , @xmath60 to range over key predicates , and we use @xmath61 , @xmath62 , @xmath63 for words over the alphabet of key predicates  i.e . , finite sequences of key predicates .",
    "warning : @xmath64 , @xmath65 etc .  will always be taken to denote whole sequences of key predicates , not the individual elements of some such sequence @xmath61 .",
    "if @xmath55 is a structure , @xmath66 a word @xmath67 over the alphabet of key predicates interpreted by @xmath55 , and @xmath68 , we write @xmath69 to denote the result of successively applying the corresponding functions in @xmath61 to @xmath70 . more formally , @xmath71 where @xmath72 and , for all @xmath73 ( @xmath74 ) , @xmath75 is the unique @xmath76 such that @xmath77 .",
    "a @xmath78-ary _ path - functional dependency _ is an expression @xmath79 \\label{eq : kc}\\ ] ] where , for all @xmath73 ( @xmath80 ) , @xmath81 is a word over the alphabet of key predicates . for any interpretation @xmath55 , we take a the dependency   to be _ satisfied _ in @xmath55 , and write @xmath82 , if , for all @xmath83 ,    @xmath84 for all @xmath73 ( @xmath80 ) implies @xmath85 .    that is to say , @xmath86 is satisfied in @xmath55 if any two elements of @xmath87 which agree on the result of applying each of the function sequences corresponding to the words @xmath64 to @xmath88 are in fact identical . in this paper",
    "we shall consider only unary and binary path - functional dependencies , i.e.  @xmath89 .",
    "the _ two - variable guarded fragment with counting , databases and unary or binary path - functional dependencies _ , denoted @xmath15 , is defined exactly as for @xmath14 , except that we have the additional syntax rule    * all unary and binary path - functional dependencies are formulas .",
    "again , to reduce notational clutter , we treat a set of path - functional dependencies @xmath18 as a single conjunctive formula  i.e . , writing @xmath18 in place of @xmath90 .",
    "although @xmath15 allows formulas in which path - functional dependencies appear within the scope of quantifiers , in practice , it is much more natural to separate out the ` @xmath11-part ' from the database and the path - functional dependencies : thus all @xmath15-formulas encountered in the sequel will have the form @xmath91 , where @xmath17 is a sentence of @xmath11 , @xmath16 is database , and @xmath18 a set of path - functional dependencies .",
    "note that , although key predicates give us the ability to _ express _ functional dependencies , they remain , syntactically speaking , predicates , not function - symbols .",
    "in fact in the logics considered here , there are no function - symbols . in particular the expressions   and   are for expository purposes only : in @xmath15",
    ", we should write , respectively , the unary and binary path - functional dependencies @xmath92 , \\qquad k[\\mathrm{name } , \\mathrm{postcode}~\\mathrm{address}],\\ ] ] where @xmath93 , @xmath94 and @xmath95 are binary ( key ) predicates .    taking key predicates to denote total ( as opposed to partial ) functions represents no essential restriction , as partial functions can always be encoded using total functions interpreted over expanded domains featuring ` dummy ' objects .",
    "the restriction to _ irreflexive _ functions , though not so easily eliminable , is in most cases perfectly natural ( the telephone number of a person is not a person ) , and greatly simplifies much of the ensuing argumentation , obviating the constant need to consider various special cases .",
    "if @xmath96 is any of the languages @xmath11 , @xmath14 or @xmath15 , a sentence @xmath17 of @xmath96 is ( _ finitely _ ) _ satisfiable _ if , for some structure @xmath55 interpreting its signature , @xmath97 .",
    "we define the ( _ finite _ ) _ satisfiability _ problem for any of the logics in the expected way : given a formula @xmath17 of @xmath96 , return y if @xmath17 is ( finitely ) satisfiable ; n otherwise .",
    "it was shown in  @xcite that the satisfiability problem for @xmath11 is @xmath98-complete , and in  @xcite that the finite satisfiability problem for @xmath11 is @xmath98-complete .",
    "in this paper , we show that the same complexity bounds apply to @xmath14 and @xmath15 .",
    "the following lemma assures us that we may confine attention to @xmath15 formulas of the standard form @xmath91 .",
    "[ lma : splitting ] let @xmath99 be a @xmath15 formula .",
    "we can compute , in time bounded as by exponential function of @xmath100 , a set @xmath101 of @xmath15 formulas with the following properties : ( i ) each formula in @xmath101 is bounded in size by a polynomial function of @xmath100 and has the form @xmath91 , where @xmath17 is a @xmath11-formula , @xmath16 a complete database and @xmath18 a set of path - functional dependencies ; ( ii ) @xmath17 is ( finitely ) satisfiable if and only if some member of @xmath101 is .",
    "consider any mapping @xmath102 from the set of path - functional dependencies and ground atoms occurring in @xmath99 to the logical constants @xmath103 , and let @xmath104 .",
    "for every path - functional dependency @xmath86 occurring in @xmath99 , if @xmath105 , add @xmath86 to @xmath18 ; otherwise , add to @xmath16 a sequence of literals ( possibly with fresh individual constants ) encoding a violation of @xmath86 in the obvious way .",
    "let @xmath106 be the result of replacing each path - functional dependency @xmath86 in @xmath99 by @xmath107 .",
    "for every ground atom @xmath35 occurring in @xmath106 , if @xmath108 , add @xmath35 to @xmath16 ; otherwise , add @xmath109 to @xmath16 .",
    "let @xmath17 be the result of replacing each ground atom @xmath35 in @xmath106 by @xmath110 .",
    "let @xmath101 be the set of of all formulas obtained in this way , for all possible mappings @xmath102 .",
    "the logic @xmath11 sometimes surprises us with its expressive power .",
    "the next lemma provides a simple example , that will prove useful in the sequel .",
    "let @xmath111 be an abbreviation for the formula @xmath112 , stating that @xmath10 , @xmath26 and @xmath113 are distinct .",
    "[ lem : rewrite ] let @xmath114 be formulas over @xmath27 , where @xmath115 and @xmath116 @xmath11-formulas . then , we can compute , in polynomial time , @xmath11-formulas @xmath117 and @xmath118 , which are logically equivalent to @xmath119 and @xmath120 respectively .    let @xmath121   \\hspace{-50pt } { \\varphi}_2^\\ast(y ) \\;:=\\ ; \\exists x \\big ( \\alpha(x , y ) \\land \\lnot \\beta(y , x )   \\land \\exists x .\\beta(y , x ) \\big ) \\\\ \\hspace{95pt } \\lor \\ , \\exists x \\big ( \\alpha(x , y ) \\land \\beta(y , x ) \\land \\exists_{\\geq 2 } x .",
    "\\beta(y , x ) \\big).\\end{gathered}\\ ] ]      if @xmath56 is a key predicate , we introduce a new binary predicate @xmath122 , referred to as the _ converse _ of @xmath56 , and subject to the requirement that , for any structure @xmath55 , @xmath123 .",
    "( we remark that this formula is in @xmath11 . )",
    "there is no requirement that @xmath122 be functional , though of course it must be irreflexive .",
    "we refer to any key predicate @xmath56 or its converse @xmath122 as a _ graph predicate_. we use the ( possibly subscripted or otherwise decorated ) letters @xmath124 , @xmath125 , @xmath126 to range over graph predicates . if @xmath127 , we take @xmath128 to denote @xmath56 . in the sequel",
    ", we fix a signature @xmath27 such that , for any key predicate @xmath56 in @xmath27 , @xmath122 is also in @xmath27 .",
    "that is : the set of graph predicates of @xmath27 is closed under converse .",
    "we use letters @xmath129 , @xmath130 , @xmath131 for words over the alphabet of graph predicates ",
    ", finite sequences of graph predicates . if @xmath132 , we write @xmath133 for the word @xmath134 .",
    "let @xmath55 be a structure interpreting @xmath27 over domain @xmath87 , and let @xmath135 be the set of unordered pairs of elements of @xmath87 , given by @xmath136 then @xmath137 is a ( possibly infinite ) graph , and we refer to @xmath138 as the _ graph of _ @xmath55 .",
    "the edges of the graph are essentially the union of the interpretations graph predicates , but with the database totally connected . by a _ cycle _ in @xmath55 , we mean a finite sequence of distinct elements @xmath139 , with @xmath140 , such that , writing @xmath141 , @xmath142 for all @xmath73 ( @xmath143 ) .",
    "the _ length _ of @xmath144 is @xmath145 . a cycle in @xmath55",
    "is said to be _ active _ if all its elements are active ( i.e.  are interpretations of constants ) , _ passive _ if all its elements are passive , and _",
    "mixed _ if it contains both passive and active elements .",
    "we call @xmath55 @xmath145-_quasi - acyclic _ if all passive or mixed cycles in @xmath55 have length greater than @xmath145 .",
    "the following lemma is a kind of pumping lemma for interpretations for the logic @xmath14 .",
    "it states that , if a @xmath14-formula @xmath17 is satisfied in a ( finite ) structure @xmath55 , then @xmath17 is also satisfied in a ( finite ) structure @xmath146 containing no short passive or mixed cycles in @xmath146 .",
    "[ lem : big_cycles ] let @xmath17 be a @xmath14-formula .",
    "suppose @xmath97 , with @xmath147 the set of active elements , and let @xmath148 .",
    "then there exists an @xmath145-quasi - acyclic model @xmath149 such that @xmath150 and @xmath151 .",
    "moreover , if @xmath55 is finite , then we can ensure that @xmath146 is finite .",
    "we remark that the proof of lemma  [ lem : big_cycles ] makes essential use of guardedness .",
    "having discussed the graphs defined by @xmath14-structures , we turn now to configurations of small collections of elements of those structures .",
    "let @xmath55 be a structure interpreting @xmath27 over domain @xmath87 , let @xmath152 ( @xmath153 ) be a word over of the alphabet @xmath87 , and let @xmath154 be a word over the alphabet of graph predicates of @xmath27 .",
    "the pair @xmath155 $ ] is a _ walk _ of _ length _",
    "@xmath145 if , for all @xmath73 ( @xmath143 ) @xmath156 $ ] .",
    "alternatively , we say that @xmath144 is an @xmath129-_walk _ ; and where @xmath129 is clear from context , we speak of _ the walk _",
    "there is no requirement that the @xmath157 all be distinct , though , of course , the irreflexivity of @xmath158 means that @xmath159 ( @xmath143 ) ; however , if the @xmath157 _ are _ all distinct , then we speak of the _ path _ @xmath144",
    ". now let @xmath160 , with @xmath161 be as before .",
    "the pair @xmath162 is a _ tour _ of _ length _",
    "@xmath145 if , for all @xmath73 ( @xmath143 ) @xmath156 $ ] where addition in indices is performed modulo @xmath145 .",
    "again , we speak of @xmath163 as being an @xmath129-_tour _ , etc .",
    "intuitively , we identify the tour @xmath162 with the walk @xmath164 $ ] , starting and ending at @xmath165 .",
    "we allow the case @xmath166 : @xmath167 is a tour , namely , the empty tour starting ( and ending ) at any element @xmath70 .",
    "a path @xmath168 is said to be _ active _ if all its elements are active , _ passive _ if all its elements are passive , and _",
    "mixed _ otherwise ; similarly for ( non - empty ) tours . in the case of the empty tour ,",
    "we count it as being active if we think of it as beginning at an active element , and passive otherwise : this slight informality should cause no confusion in practice .",
    "notice that a tour of length at least 3 in which all elements are distinct is a cycle in @xmath55 .",
    "consider now any walk @xmath169 $ ] in @xmath55 , where @xmath170 .",
    "noting that the @xmath157 are not necessarily distinct , let @xmath171 , and let us say that @xmath70 and @xmath172 in @xmath173 are _ neighbours _ if , for some @xmath73 ( @xmath143 ) , either @xmath174 and @xmath175 , or @xmath176 and @xmath177 .",
    "let @xmath178 be the set of unordered pairs @xmath179 from @xmath173 such that @xmath70 and @xmath172 are neighbours .",
    "then @xmath180 is a graph , which we refer to as the _ locus _ of the walk @xmath169 $ ] .",
    "if @xmath181 is a non - empty tour in @xmath55 beginning at @xmath165 , then we take the locus of @xmath181 to be the locus of the walk @xmath182 $ ] .",
    "thus loci are static records of all the steps taken during a walk or tour , but with information about the order of those steps suppressed .",
    "[ fig : locus ] shows a possible locus of a tour @xmath183 of length 12 ; the element @xmath184 is encountered four times in this tour .",
    "it is easy to see that the locus of a walk ( or tour ) in @xmath55 is a subgraph of the graph of @xmath55 , though of course it will in general not be an induced subgraph .",
    "we call a walk ( or tour ) _ acyclic _ if its locus contains no cycles .",
    "the tour whose locus is depicted in fig .  [ fig : locus ] is acyclic .",
    "it should be obvious that , if @xmath55 is an @xmath145-quasi - acyclic structure , and @xmath181 a passive tour in @xmath55 of length at most @xmath145 , then @xmath181 must be acyclic .",
    "( 0 , 2 ) ; ( 2 , 2 ) ; ( 4 , 2 ) ;    at ( 0,2 ) @xmath165 ; at ( 2,2 ) @xmath185 ; at ( 4,2 ) @xmath186 ; at ( 5.9,2 ) @xmath184 ; at ( 8,4 ) @xmath187 ; at ( 8,0 ) @xmath188 ;    ; ; ;    \\(a ) at ( 6 , 2 ) ; ( b ) at ( 8 , 4 ) ; ( c ) at ( 8 , 0 ) ;    \\(a ) edge node[midway , above left=-2pt ] @xmath189 ( b ) ; ( b ) edge node[midway , below right=-2pt ] @xmath190 ( a ) ;    \\(a ) edge node[midway , above right=-2pt ] @xmath191 ( c ) ; ( c ) edge node[midway , below left=-2pt ] @xmath192 ( a ) ;      with these preliminaries behind us , we turn our attention to the analysis of path - functional dependencies in particular structures .",
    "we start , for simplicity , with the unary case .",
    "let @xmath86 be a unary path - functional dependency @xmath193 $ ] , where @xmath194 .",
    "if @xmath195 , denote the prefix @xmath196 by @xmath81 , and let @xmath197 $ ] ; we call @xmath198 a _ prefix _ of @xmath86 .",
    "it is easily seen that @xmath86 entails each of its prefixes ",
    ", @xmath199 . moreover , the empty unary path - functional dependency , @xmath200 $ ] , is trivially valid .",
    "a set @xmath18 of unary path - functional dependencies is _ prefix - closed _ , if for any @xmath201 , every prefix of @xmath86 is in @xmath18 .",
    "given any set @xmath18 of unary path - functional dependencies , we may  without affecting satisfiability  ensure that it is prefix closed by adding at most linearly many additional unary path - functional dependencies .",
    "suppose now that @xmath86 is violated in some @xmath27-structure @xmath55 , and let @xmath83 be a violating pair for @xmath86 , i.e.  @xmath202 but the @xmath61-walks starting at @xmath70 and @xmath172 end in the same element .",
    "define the sequence of elements @xmath203 where @xmath72 and , for all @xmath73 ( @xmath74 ) , @xmath204 ; and define @xmath205 where @xmath206 and , for all @xmath73 ( @xmath74 ) , @xmath207 . noting that @xmath208 , let @xmath73 be the smallest number @xmath195 such that @xmath209 , i.e. the point at which @xmath144 and @xmath210 converge .",
    "clearly @xmath211 , since @xmath70 and @xmath172 are distinct .",
    "we say that the violation of @xmath86 at @xmath212 is _ critical _ if @xmath213 , i.e.  if @xmath144 and @xmath210 converge only at their last element .",
    "it is then obvious that , if @xmath18 is prefix closed , and some @xmath201 is violated , then some @xmath214 is critically violated .",
    "checking for critical violations of unary path - functional dependencies is simple .",
    "bearing in mind that @xmath200 $ ] is trivial valid , suppose @xmath215 $ ] . for any prefix @xmath216 of @xmath61 ( proper or improper ) ,",
    "let @xmath217 be a fresh unary predicate , and let @xmath218 be the set @xmath11-formulas @xmath219 in the presence of @xmath218 , we may read @xmath220 as stating that @xmath10 is at the end of an @xmath216-walk in @xmath55 . thus , in a model @xmath221 , @xmath215 $ ] has a critical violation just in case the formula @xmath222 is satisfied in @xmath55 .",
    "( in particular , if @xmath86 has a critical violation at @xmath70 , @xmath172 , @xmath223 will be satisfied at the ( common ) final elements of the @xmath61-walks starting at @xmath70 and @xmath172 . ) by lemma  [ lem : rewrite ] , @xmath224 may be equivalently written as a @xmath11-formula @xmath225 .",
    "thus , if @xmath18 is a prefix - closed set of unary path - functional dependencies , a @xmath15-formula @xmath226 is satisfiable over some domain @xmath87 if and only if the @xmath14-formula @xmath227 is satisfiable over the same domain .",
    "this provides a polynomial time reduction from the ( finite ) satisfiability problem for @xmath15 restricted to _",
    "unary _ path - functional dependencies to the corresponding problem for @xmath14 . since we show in the sequel that the latter problem is in @xmath0 , so is the former .",
    "we now turn our attention to the more difficult case of binary path - functional dependencies .",
    "let @xmath86 be a binary path - functional dependency @xmath228 $ ] , where @xmath194",
    ". for all @xmath73 ( @xmath74 ) , denote by @xmath81 , the prefix @xmath229 of @xmath61 , and let @xmath230 $ ] .",
    "we call @xmath198 a _ left - prefix _ of @xmath86 .",
    "thus @xmath86 entails each of its left - prefixes ; moreover , @xmath231 $ ] is trivially valid .",
    "if @xmath18 is a set of binary path - functional dependencies , say that @xmath18 is _ left - prefix - closed _ ,",
    "if for @xmath201 , any left - prefix of @xmath86 is in @xmath18 .",
    "any set @xmath18 of binary path - functional dependencies may  without affecting satisfiability ",
    "be made left - prefix - closed by adding at most linearly many additional binary path - functional dependencies .",
    "we could instead have spoken of right - prefix - closed sets of functional dependencies , defined in the obvious way ; the choice between these notions is completely arbitrary .",
    "suppose now that @xmath232 $ ] is violated in some @xmath27-structure @xmath55 , and let @xmath83 be a violating pair for @xmath228 $ ] , i.e.  @xmath202 but the @xmath61-walks starting at @xmath70 and @xmath172 end in the same element , and moreover the @xmath62-walks starting at @xmath70 and @xmath172 end in the same element .",
    "writing @xmath194 , define the sequence of elements @xmath203 where @xmath72 and , for all @xmath73 ( @xmath74 ) , @xmath204 .",
    "similarly define @xmath205 where @xmath206 and , for all @xmath73 ( @xmath74 ) , @xmath207 .",
    "we call the violation of @xmath86 at @xmath212 _ critical _ if @xmath233 for all @xmath73 ( @xmath74 ) .",
    "it is again obvious that , if @xmath18 is a left - prefix - closed set of binary path - functional dependencies , and some @xmath201 is violated , then some @xmath214 is critically violated .",
    "thus , as with unary path - functional dependencies , so with their binary counterparts , we may confine our attention to critical violations .",
    "the difficulty is that critical violations of binary path - functional dependencies can not be straightforwardly expressed using @xmath11-formulas as in the unary case . to understand the problem ,",
    "consider a binary path - functional dependency @xmath234 $ ] , which has a critical violation at @xmath212 .",
    "writing @xmath194 and @xmath235 , define @xmath236 where @xmath72 and , for all @xmath73 ( @xmath195 ) , @xmath204 , and define @xmath237 where @xmath206 and , for all @xmath73 ( @xmath195 ) , @xmath207 .",
    "thus , @xmath238",
    ". writing @xmath239 , define @xmath240 where @xmath241 and , for all @xmath73 ( @xmath143 ) , @xmath242 ; and define @xmath243 similarly , but starting with @xmath244 .",
    "thus , @xmath245 . referring to fig .",
    "[ fig : violation_critical ] , it follows that @xmath246 is an @xmath247-tour in @xmath55 .",
    "the problem is how to characterize the existence of such tours with only @xmath11-formulas and conditions on the database at our disposal .",
    "let us consider the tour of fig .",
    "[ fig : violation_critical ] more closely . since key predicates are by assumption irreflexive , we know that neighbouring elements in this tour are distinct .",
    "furthermore , since the violation of @xmath86 is by assumption critical , we also know that @xmath248 .",
    "that is , the elements @xmath249 , @xmath250 and @xmath251 are all distinct .",
    "( 0 , 0 ) ; ( 0 , 3 ) ; ( 3 , 0 ) ; ( 3 , 3 ) ;    ( 2 , 3 ) ; ( 3 , 2 ) ;    ( 0 , 2.85 )  ( 0 , .15 ) ; ( .15 , 3 )  ( 1.85 , 3 ) ; ( 2.85 , 0 )  ( .15 , 0 ) ; ( 3 , 0.15 )  ( 3 , 1.85 ) ; ( 2.15 , 3 )  ( 2.85 , 3 ) ; ( 3 , 2.15 )  ( 3 , 2.85 ) ;    at ( 0 , 3 ) @xmath252 ; at ( 3 , 0 ) @xmath253 ; at ( 2 , 3 ) ; at ( 2 , 3 ) @xmath254 ; at ( 3 , 3 ) @xmath255 ; at ( 3 , 2 ) @xmath256 ; at ( 3 , 2 ) ;    at ( 1 , 3 ) @xmath61 ; at ( 1.5 , 0 ) @xmath62 ; at ( 0 , 1.5 ) @xmath62 ; at ( 3 , 1 ) @xmath61 ; at ( 2.5 , 3 ) @xmath56 ; at ( 3 , 2.5 ) @xmath56 ;    we can make this observation  which is fundamental to the entire development of section  [ sec : decompositions ] , [ sec : violations ] and  [ sec : tour_predicates]work for us if we rotate the tour so that it starts at @xmath249 .",
    "write @xmath257 , @xmath258 and @xmath259 , so that @xmath260 and @xmath261 , with @xmath262 , @xmath263 and @xmath264 all distinct .",
    "this yields a tour @xmath265 for some sequence of elements @xmath266 . for brevity",
    ", we shall always write @xmath267 in the sequel to denote the ` rotated ' sequence of graph predicates @xmath268 obtained from the binary path - functional dependency @xmath269 $ ] .",
    "thus , @xmath86 is critically violated in a structure @xmath55 if and only if @xmath55 contains an @xmath267-tour whose first three elements are distinct .",
    "note that the diagram of fig .",
    "[ fig : violation_critical ] depicts an @xmath267-tour , and not its locus .",
    "in particular , there is no assumption that the sequences @xmath144 , @xmath210 , @xmath163 and @xmath243 do not contain repeated elements , and no assumption that they are disjoint .",
    "indeed , we recall lemma  [ lem : big_cycles ] , which allows us to restrict attention to @xmath145-quasi - acyclic structures for various @xmath145 .",
    "if @xmath270 , then all violations of @xmath86 involving only passive elements will yield acyclic @xmath267-tours .",
    "this forms our main line of attack : sections  [ sec : decompositions ] and [ sec : violations ] are concerned with the classification of @xmath267-tours ; section  [ sec : tour_predicates ] uses this classification to encode the non - existence of critical violations using @xmath11-formulas and conditions on the database ; finally , section  [ sec : gcdk ] assembles all these observations to yield a reduction of the ( finite ) satisfiability problem for @xmath15 to the corresponding problem for @xmath14 .",
    "we have seen that critical violations of binary path - functional dependencies in a structure correspond to the existence of certain tours in the graph of that structure .",
    "this section presents the basic tools we require in the sequel for decomposing walks and tours in structures .",
    "none of the reasoning involved goes beyond elementary graph theory .",
    "lemmas  [ lma : spine][lma : retrace ] concern acyclic walks and tours ; lemmas  [ lem : simple_db1][lem : isthmus ] concern tours in @xmath145-quasi - acyclic structures .",
    "let @xmath55 be a structure and @xmath271 $ ] be an acyclic walk in @xmath55 . then",
    ", for some @xmath272 , the sequences @xmath144 and @xmath131 can be decomposed @xmath273 such that : ( i ) the sequences @xmath274 are pairwise disjoint ; ( ii ) for all @xmath275 ( @xmath276 ) , @xmath277 is a tour starting at @xmath278 ; and ( iii ) @xmath279 $ ] is a path in @xmath55 ( fig .",
    "[ fig : backbone ] ) .",
    "[ lma : spine ]    let @xmath170 ( @xmath148 ) .",
    "let @xmath280 and define @xmath281 .",
    "suppose now that @xmath282 and @xmath283 have been defined , with @xmath284 .",
    "if @xmath285 , then let @xmath286 be the largest number @xmath275 ( @xmath287 ) such that @xmath288 , and define @xmath289 and @xmath290 . likewise , define @xmath291 and @xmath292 .",
    "then @xmath293 and @xmath294 is a possibly empty acyclic tour starting at @xmath283 .",
    "when , eventually , @xmath295 , define @xmath296 , @xmath297 and @xmath298 .",
    "the disjointness of the @xmath299 is immediate .",
    "we call the path @xmath300 $ ] in the decomposition of @xmath271 $ ] given by lemma  [ lma : spine ] the _ spine _ of @xmath271 $ ] . where the sequence @xmath131 is of no interest , we simply say that @xmath301 is the _ spine _ of @xmath144 .",
    "( 0 , 0 ) ; ( 2 , 0 ) ; ( 7 , 0 ) ;    ( 0 , 0 ) ; ( 2 , 0 ) ; ( 7 , 0 ) ;    ( 3.6 , 0 )  ( 5.4 , 0 ) ;    ( .15 , 0 )  ( 1.85 , 0 ) ; ( 2.15 , 0 )  ( 3.35 , 0 ) ; ( 5.65 , 0 )  ( 6.85 , 0 ) ;    at ( 0 , 0 ) @xmath302 ;",
    "at ( 2 , 0 ) @xmath303 ; at ( 7 , 0 ) @xmath304 ;    at ( 0 , 1 ) @xmath305 ; at ( 2 , 1 ) @xmath306 ; at ( 7 , 1 ) @xmath307 ;    at ( 1 , 0 )  ; at ( 2.8 , 0 )  ; at ( 6.3 , 0 )  ;    let @xmath55 be a structure and @xmath308 a non - empty acyclic tour in @xmath55 .",
    "let @xmath70 be any element of @xmath144 not equal to @xmath165 , let @xmath73 , @xmath275 ( @xmath309 ) be the smallest and the largest index respectively such that @xmath310 , and let @xmath141",
    ". then @xmath311 .",
    "[ lma : retrace ]    observe first that the words @xmath312 and @xmath313 are non - empty , since @xmath314 ; thus , these words define walks in @xmath55 .",
    "let @xmath210 be the spine of the walk @xmath312 , and let @xmath243 be the spine of the walk @xmath313 .",
    "thus , @xmath210 is a path from @xmath165 to @xmath315 and @xmath243 a path from @xmath316 to @xmath317 .",
    "let @xmath318 be the shortest prefix of @xmath243 that intersects @xmath210 , and let @xmath319 be the suffix of @xmath210 beginning with the element @xmath262 . then , if @xmath320 , @xmath321 is a cycle , contrary to hypothesis .",
    "( see fig .",
    "[ fig : simple - helper ] for an illustration . )",
    "( 0 , 0 ) ; at ( 0 , 0 ) @xmath165 ; ( .15 , .08 )  ( .85 , .08 ) ; ( .15 , -.08 ) ",
    "( .85 , -.08 ) ; ( 1.2 , 0 ) ",
    "( 1.8 , 0 ) ; ( 2 , .08 )  ( 2.7 , .08 ) ; ( 2 , -.08 )  ( 2.7 , -.08 ) ; ( 2.85 , 0 ) ; at ( 2.85 , 0 ) @xmath322 ;    ( 5.45 , 0 ) ; at ( 5.45 , 0 ) @xmath323 ;    ( 5.1 , -1 ) ; at ( 5.1 , -1 ) @xmath316 ; ( 4.95 , -1 )  ( 4.55 , -1 ) ; ( 3.2 , -1 ) ; ( 3.73 , -1 )  ( 3.33 , -1 ) ; ( 4.38 , -1 )  ( 3.76 , -1 ) ; ( 5.38 , -.15 )  ( 5.15 , -.85 ) ; ( 3.13 , -.85 )  ( 2.9 , -.15 ) ;    ( 5.1 , 1 ) ; at ( 5.1 , 1 ) @xmath315 ; ( 4.95 , 1 )  ( 4.55 , 1 ) ; ( 3.2 , 1 ) ; ( 3.73 , 1 )  ( 3.33 , 1 ) ; ( 4.38 , 1 )  ( 3.76 , 1 ) ; ( 5.38 , .15 )  ( 5.15 , .85 ) ; ( 3.13 , .85 )  ( 2.9 , .15 ) ;    the following lemmas concern tours in @xmath145-quasi - acyclic structures .",
    "we start with the observation that , if a tour of length @xmath145 in such a structure exits the database at some point , then it must re - enter at the same point . recall that a mixed tour is one featuring both active and passive elements ; and remember that , in the graph of a structure @xmath55 , the database is totally connected .",
    "[ lem : simple_db1 ] let @xmath55 be an @xmath145-quasi - acyclic structure and @xmath324 a tour in @xmath55",
    ". suppose @xmath73",
    "( @xmath143 ) is such that @xmath325 are all active , but @xmath75 passive .",
    "writing @xmath141 , let @xmath275 be the smallest index @xmath275 ( @xmath326 ) such that @xmath316 is active . then @xmath327 and @xmath328 .    by construction",
    ", @xmath329 is a passive walk from @xmath75 to @xmath330 .",
    "let the spine of this walk be @xmath210 ; note that the sequence @xmath210 is non - empty , and its initial and final elements are , respectively , @xmath75 and @xmath330 .",
    "suppose first that @xmath331 .",
    "since these elements are active , they are joined by an edge in the graph of @xmath55 , whence @xmath332 is a mixed cycle in @xmath55 of length ( at least 3 and ) at most @xmath145 . since @xmath55 is @xmath145-quasi - acyclic",
    "this is a contradiction , whence @xmath333 .",
    "suppose , now that @xmath334 , whence @xmath335 .",
    "then , since @xmath333 , it follows that @xmath336 is a mixed cycle of length ( at least 3 and ) at most @xmath145 .",
    "again , this is a contradiction , whence @xmath328 .",
    "the next lemma is a similar to the last , but with ` enter ' and ` exit ' transposed .",
    "the reasoning is essentially identical .",
    "[ lem : simple_db2 ] let @xmath55 be an @xmath145-quasi - acyclic structure and @xmath324 a tour in @xmath55 .",
    "( @xmath143 ) is such that @xmath325 are all passive , but @xmath75 active . writing @xmath141 , let @xmath275 be the largest index @xmath275 ( @xmath326 ) such that @xmath316 is passive",
    ". then @xmath327 and @xmath328 .",
    "the final two lemmas of this section will play an important role in sec .  [",
    "sec : gcdk ] .",
    "[ lem : isthmus ] let @xmath55 be an @xmath145-quasi - acyclic structure , and @xmath337 a mixed tour in @xmath55 of length @xmath145 , beginning with some passive element @xmath70 .",
    "then @xmath338 can be decomposed as @xmath339 such that , for some active element @xmath172 : ( i ) @xmath340 $ ] is an acyclic walk from @xmath172 to @xmath70 in which @xmath172 occurs exactly once ; ( ii ) @xmath341 $ ] is an acyclic walk from @xmath70 to @xmath172 in which @xmath172 occurs exactly once ; and ( iii ) @xmath342 is a tour beginning at @xmath172 .",
    "write @xmath343 , let @xmath344 be the first active element of @xmath144 , and let @xmath275 ( @xmath345 ) be the greatest index such that @xmath346 . since @xmath70 is passive , @xmath211 .",
    "write @xmath347 , @xmath348 and @xmath349 .",
    "let @xmath130 , @xmath350 and @xmath129 be the corresponding decomposition of @xmath131 .",
    "since @xmath337 is a mixed tour , it is acyclic ; so therefore are the walks @xmath340 $ ] and @xmath341 $ ] which it contains .",
    "[ lem : dbcycle_decomp ] suppose @xmath55 is an @xmath145-quasi - acyclic structure containing a tour , @xmath351 , with @xmath352 , and suppose the initial element of @xmath353 is active .",
    "then there exist decompositions @xmath354 and @xmath355 , such that : ( i ) @xmath356 is an active tour ; ( ii ) each @xmath357 is an acyclic tour beginning at @xmath283 ( @xmath358 ) , and @xmath359 is an acyclic tour beginning at @xmath360 ( fig .",
    "[ fig : dbcycle ] ) .",
    "write @xmath361 , with @xmath165 active . as usual",
    ", let @xmath141 .",
    "let @xmath280 and define @xmath281 .",
    "suppose that @xmath282 and @xmath283 have been defined , with @xmath283 active and @xmath362 .",
    "let @xmath286 be the smallest number @xmath275 ( @xmath287 ) such that @xmath363 is active and distinct from @xmath283 , assuming first that such an element exists .",
    "note that , if @xmath364 , then @xmath365 is passive , whence , by lemma  [ lem : simple_db1 ] , the next active element in the tour @xmath144 after @xmath365 is @xmath366 . by applying this argument repeatedly",
    ", we see that @xmath367 .",
    "define @xmath289 and @xmath290 .",
    "likewise , define @xmath291 and @xmath292 .",
    "thus @xmath368 is a ( possibly empty ) mixed  hence acyclic  tour starting at @xmath283 , and @xmath369 .",
    "now suppose that there is no number @xmath275 ( @xmath287 ) such that @xmath363 is active and distinct from @xmath283 .",
    "set @xmath370 , and define @xmath297 .",
    "likewise , define @xmath371 .",
    "if @xmath372 is non - empty , it leaves the database , and , whenever it does so , it re - enters at the same point , by lemma  [ lem : simple_db1 ] . hence @xmath373 is a ( possibly empty ) mixed  hence acyclic  tour starting at @xmath374 whence @xmath375 .",
    "i / in 1/1,2/2,3/3,4/4,7/m-2,8/m-1    @xmath376 @xmath377 ( @xmath376 , @xmath377 ) ; ( @xmath376 , @xmath377 , i40 ) ;    at ( , ) @xmath378 ;    at ( , ) @xmath379 ;    ( 0 , ) ; ( .02 , + .03 , 40 ) ; at ( .7 , +",
    ".8 ) @xmath380 ; ( -.02 , + .03 , -40 ) ; at ( -.7 , + .8 ) @xmath381 ; at ( 0 , - .45 ) @xmath360 ;    plot[smooth ] ( cos(@xmath376 ) , sin(@xmath376 ) ) ; plot[smooth ] ( ( cos(@xmath376 ) , sin(@xmath376 ) ) ;",
    "we now show how to detect violations of binary path - functional dependencies , using the decompositions of tours developed in the previous section .",
    "recall from section  [ sec : preliminaries ] that a critical violation of a binary path - functional dependency @xmath86 in a structure @xmath55 is identified with an @xmath267-tour whose first three elements are distinct .",
    "such a tour can be decomposed in various ways , depending on which of these three elements belong to the active domain ( i.e. , the database ) .",
    "altogether , we isolate nine configurations of @xmath267-tours , illustrated in fig .  [",
    "fig : tours ] , with the circle representing the database and triangles representing acyclic sub - tours . in section  [ sec : tour_predicates ] , we show how to use @xmath11-formulas together with conditions on the database to rule out each of these configurations , and thus to guarantee that @xmath86 is not critically violated . in the following sequence of lemmas ,",
    "we fix @xmath382 $ ] , where @xmath383 , as usual writing @xmath267 for @xmath384 .",
    "notice that , by construction , @xmath385 .    [ cols=\"^,^,^ \" , ]     [ lem : cond_i ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a passive tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "then there exist decompositions @xmath388 and @xmath389 , such that ( i ) @xmath390 is an acyclic tour in @xmath55 starting at @xmath186 ; ( ii ) @xmath391 is an acyclic tour in @xmath55 starting at @xmath185 ; ( iii ) @xmath392 is an acyclic tour in @xmath55 starting at @xmath165 ; ( iv ) @xmath393 and @xmath394 are true in @xmath55 ( fig .",
    "[ fig : tours](i ) ) .",
    "since @xmath387 is passive , it is acyclic .",
    "write @xmath324 , @xmath395 and @xmath141 ; thus , @xmath396 and @xmath397 .",
    "let @xmath73 be the largest index ( @xmath398 ) such that @xmath399 , let @xmath400 and @xmath401 .",
    "thus , @xmath390 is an acyclic tour starting at @xmath186 . by lemma  [ lma :",
    "retrace ] , @xmath402 ; write @xmath403 .",
    "similarly , let @xmath275 be the largest index ( @xmath404 ) such that @xmath405 , and let @xmath406 and @xmath407 ; thus , @xmath391 is an acyclic tour starting at @xmath185 . by lemma  [ lma :",
    "retrace ] again , @xmath408 ; write @xmath409 .",
    "let @xmath410 and @xmath411 .",
    "this completes the tour ( going back to @xmath165 ) and @xmath392 is acyclic .",
    "[ lem : cond_ii ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "suppose further that @xmath165 is active , but @xmath185 and @xmath186 are passive .",
    "then there exist decompositions @xmath388 and @xmath389 , such that ( i ) @xmath390 is an acyclic tour in @xmath55 starting at @xmath186 ; ( ii ) @xmath391 is an acyclic tour in @xmath55 starting at @xmath185 ; ( iii ) @xmath392 is a tour in @xmath55 starting at @xmath165 ; ( iv ) @xmath393 and @xmath394 are true in @xmath55 ( fig .",
    "[ fig : tours](ii ) ) .",
    "write @xmath324 , @xmath395 and @xmath141 ; thus , @xmath396 and @xmath397 .",
    "let @xmath275 be the smallest index ( @xmath412 ) such that @xmath316 is active .",
    "since @xmath165 is active and @xmath185 passive , it follows by lemma  [ lem : simple_db1 ] that @xmath405 and @xmath413 .",
    "thus , @xmath414 is a passive  and hence acyclic  tour . considering the tour @xmath163 ,",
    "let @xmath73 be the largest index ( @xmath415 ) such that @xmath416 .",
    "by lemma  [ lma : retrace ] , @xmath402 .",
    "let @xmath400 and @xmath401 ; let @xmath406 and @xmath407 ; and let @xmath417 and @xmath418 .",
    "in addition , write @xmath403 and @xmath409 .",
    "thus , @xmath388 and @xmath389 .",
    "moreover , @xmath390 and @xmath391 are acyclic tours , and @xmath392 is a tour .    [",
    "lem : cond_iii ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "suppose further that @xmath186 is active , but @xmath165 and @xmath185 are passive .",
    "then there exist decompositions @xmath388 and @xmath389 , such that ( i ) @xmath390 is a tour in @xmath55 starting at @xmath186 ; ( ii ) @xmath391 is an acyclic tour in @xmath55 starting at @xmath185 ; ( iii ) @xmath392 is an acyclic tour in @xmath55 starting at @xmath165 ; ( iv ) @xmath393 and @xmath394 are true in @xmath55 ( fig .",
    "[ fig : tours](iii ) ) .",
    "analogous to the proof of lemma  [ lem : cond_ii ] .",
    "[ lem : cond_iv ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "suppose further that @xmath185 is active , but @xmath165 and @xmath186 are passive .",
    "then there exist decompositions @xmath388 and @xmath389 , such that ( i ) @xmath390 is an acyclic tour in @xmath55 starting at @xmath186 ; ( ii ) @xmath391 is a tour in @xmath55 starting at @xmath185 ; ( iii ) @xmath392 is an acyclic tour in @xmath55 starting at @xmath165 ; ( iv ) @xmath393 and @xmath394 are true in @xmath55 ( fig .",
    "[ fig : tours](iv ) ) .",
    "analogous to the proof of lemma  [ lem : cond_ii ] .",
    "[ lem : cond_v ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "suppose further that @xmath165 and @xmath185 are active , but @xmath186 is passive",
    ". then there exist decompositions @xmath419 and @xmath420 , such that ( i ) @xmath390 is an acyclic tour in @xmath55 starting at @xmath186 ; ( ii ) @xmath421 a tour in @xmath55 where @xmath422 is a non - empty sequence starting with @xmath185 ; ( iii ) @xmath394 is true in @xmath55 ( fig .",
    "[ fig : tours](v ) ) .",
    "write @xmath324 , @xmath395 and @xmath141 ; thus , @xmath396 and @xmath397 .",
    "let @xmath73 be the smallest index ( @xmath398 ) such that @xmath75 is active .",
    "since @xmath317 is active , @xmath73 exists . by lemma  [ lem : simple_db1 ] ,",
    "@xmath399 and @xmath402 .",
    "let @xmath400 and @xmath423 . by construction",
    ", @xmath390 is a passive  hence acyclic  tour beginning at @xmath186 .",
    "now let @xmath403 , @xmath424 and @xmath425 .",
    "[ lem : cond_vi ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "suppose further that @xmath185 and @xmath186 are active , but @xmath165 is passive .",
    "then there exist decompositions @xmath426 and @xmath420 , such that ( i ) @xmath427 a tour in @xmath55 where @xmath428 is a non - empty sequence starting with @xmath186 ; ( ii ) @xmath429 is an acyclic tour in @xmath55 starting at @xmath165 ; ( iii ) @xmath430 is true in @xmath55 ( fig .",
    "[ fig : tours](vi ) ) .",
    "analogous to the proof of lemma  [ lem : cond_iv ] .",
    "we remark at this point that , if @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour @xmath431 whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct , then it can not be the case that @xmath165 and @xmath186 are active , but @xmath185 passive , as @xmath432 would then form a cycle in the graph of @xmath55 . in the next lemma , all arithmetic performed on indices is assumed to be modulo 3 .",
    "[ lem : cond_vii_viii_ix ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct and all passive .",
    "then there exist decompositions @xmath388 and @xmath389 , such that : ( i ) for all @xmath275 ( @xmath433 ) @xmath434 is a tour in @xmath55 starting at @xmath435 ; ( ii ) two of these tours are acyclic and the third is mixed ; ( iii ) @xmath393 and @xmath394 are true in @xmath55 ( fig .  [",
    "fig : tours](vii)(ix ) ) .",
    "write @xmath324 , @xmath395 and @xmath141 ; thus , @xmath396 and @xmath397 .",
    "let @xmath60 be the smallest index @xmath436 such that @xmath437 is active , and @xmath78 the largest index @xmath438 such that @xmath250 is passive . by lemma  [ lem : simple_db2 ] , @xmath439 , whence @xmath440 is a passive tour .",
    "suppose first that @xmath165 is encountered along the walk @xmath441 , i.e.  there exists @xmath275 ( @xmath442 ) such that @xmath408 ( fig .",
    "[ fig : tours](vii ) ) .",
    "denote by @xmath443 the smallest such value of @xmath275 .",
    "it follows that @xmath444 is a passive tour . repeating the reasoning of lemma  [ lem : cond_i ] ,",
    "let @xmath73 be the largest index ( @xmath445 ) such that @xmath399 , let @xmath400 and @xmath401 .",
    "thus , @xmath390 is a passive  and hence acyclic  tour starting at @xmath186 . by lemma  [ lma :",
    "retrace ] ( applied to @xmath210 ) , @xmath402 ; write @xmath403 .",
    "now let @xmath275 be that the largest index ( @xmath446 ) such that @xmath447 .",
    "let @xmath448 and @xmath449 ; thus , @xmath391 is an acyclic tour starting at @xmath185 . by lemma  [ lma :",
    "retrace ] again , @xmath408 , whence , in fact @xmath450 ; write @xmath451 .",
    "let @xmath452 and @xmath453 ; then , @xmath392 is a mixed tour starting at @xmath165 .",
    "now suppose that @xmath165 is not encountered again along the walk @xmath441 , but @xmath185 is , i.e.  there exists @xmath275 ( @xmath454 ) such that @xmath455 ( fig .  [ fig : tours](viii ) ) .",
    "denote by @xmath443 the smallest such value of @xmath275 .",
    "again , let @xmath73 be the largest index ( @xmath445 ) such that @xmath399 , let @xmath400 and @xmath401 .",
    "thus , @xmath390 is an acyclic tour starting at @xmath186 . by lemma  [ lma :",
    "retrace ] , @xmath402 ; write @xmath403 . since @xmath402 and @xmath456 , we know that @xmath457 is a passive tour .",
    "let @xmath275 be the largest index @xmath458 such that @xmath330 occurs in @xmath210 and @xmath459 .",
    "by lemma  [ lma : retrace ] ( applied to @xmath210 ) , the next element in the tour @xmath210 must be @xmath165 . since",
    ", by assumption , @xmath165 does not occur among @xmath460 , we have @xmath461 . thus , letting @xmath462 and @xmath463",
    ", @xmath391 is a mixed tour starting at @xmath185 .",
    "let @xmath464 .",
    "let @xmath417 and @xmath465 ; thus , @xmath392 is a passive  and hence acyclic  tour starting at @xmath165 .",
    "finally , suppose that neither @xmath165 nor @xmath185 is encountered along the walk @xmath441 ( fig .",
    "[ fig : tours](viii ) ) . since @xmath456 , we know that @xmath466 is a passive  and hence acyclic  tour .",
    "let @xmath73 be the largest index ( @xmath445 ) such that @xmath157 occurs in @xmath210 and @xmath399 .",
    "by lemma  [ lma : retrace ] , the next element in the tour @xmath210 must be @xmath185 . since , by assumption , @xmath185 does not occur among @xmath460 , we have @xmath467 , and hence @xmath402 .",
    "let @xmath400 and @xmath401 .",
    "thus , @xmath390 is a mixed tour starting at @xmath186 .",
    "write @xmath403 . since @xmath402 and @xmath468 , we know that @xmath469 is a passive tour .",
    "let @xmath275 be the largest index @xmath404 such that @xmath405 , let @xmath406 , and let @xmath407 .",
    "by thus , @xmath391 is a passive  and hence acyclic  tour starting at @xmath185 .",
    "lemma  [ lma : retrace ] , @xmath408 ; let @xmath409 .",
    "let @xmath417 , @xmath418 .",
    "thus @xmath392 is a passive  and hence acyclic  tour starting at @xmath165 .",
    "[ lem : cond_x ] suppose @xmath55 is a @xmath386-quasi - acyclic structure containing a mixed tour , @xmath387 , whose first three elements , @xmath165 , @xmath185 and @xmath186 , are distinct .",
    "suppose further that @xmath165 , @xmath185 and @xmath186 are active .",
    "then , writing @xmath470 and @xmath471 , the pair @xmath472 $ ] is a walk in @xmath55 starting at @xmath186 ( fig .",
    "[ fig : tours](x ) ) .    completely trivial .",
    "let us sum up what we have discussed so far .",
    "fix a path - functional dependency @xmath382 $ ] , and let @xmath145 be the length of @xmath267",
    ". any violation of @xmath269 $ ] in a structure @xmath55 can be identified with a @xmath267-tour in @xmath55 whose first three elements are distinct .",
    "thus , when determining the satisfiability of a @xmath15-formula @xmath91 , our goal is to determine whether there exists a model of @xmath53 containing no such tours . indeed , by lemma  [ lem : big_cycles ] , we may confine attention to @xmath145-quasi - acyclic models of @xmath53 .",
    "now suppose @xmath144 is a sequence of elements in some such model suspected of being a @xmath267-tour in @xmath55 whose first three elements are distinct . depending on which ( if any ) of these three initial elements of an @xmath267-tour @xmath144 belong to the database , @xmath144 can be decomposed in different ways , as seen in fig .  [",
    "fig : tours ] .",
    "all these decompositions , except for that of fig .",
    "[ fig : tours](i ) , involve elements of the database .",
    "the configuration of fig .",
    "[ fig : tours](i ) , it turns out , can be ruled out by means of a @xmath11-formula .",
    "in addition , by introducing additional predicates to our original signature , and writing formulas ensuring that these predicates are satisfied by database elements occurring at certain critical points in the various configurations depicted in fig .",
    "[ fig : tours](ii)(ix ) , we can reduce the problem of determining the existence of such violating configurations to a simple database check .",
    "the next section addresses the task of establishing the required interpretations of these additional predicates .",
    "let @xmath473 $ ] be a binary path - functional dependency , and let @xmath474 as above .",
    "in this section , we present three technical devices consisting of sets of @xmath11-formulas denoted , respectively , @xmath475 , @xmath476 and @xmath477 .",
    "the first device enables us to describe acyclic tours in structures , the second to characterize certain sorts of ternary branching structures , and the third to characterize elements connected to each other by a pair of walks forming an acyclic tour . in the next section",
    ", we shall employ these devices to characterize the ten cases depicted in fig .",
    "[ fig : tours ] , and thus to rule out the presence of violations of @xmath86 in a structure using @xmath11-formulas .",
    "we write @xmath478 to indicate that @xmath126 occurs in @xmath267 , and @xmath479 to indicate that @xmath131 is a sub - word ( i.e.  a contiguous sub - sequence ) of @xmath267 .",
    "observe that the number of sub - words of @xmath267 is @xmath480 .",
    "let the signature @xmath481 consist of @xmath27 together with the unary predicates @xmath482 , one for each sub - word @xmath131 of @xmath267 .",
    "the intention is that @xmath482 will be satisfied by an element @xmath70 in certain sorts of structures just in case @xmath70 is the start of an acyclic @xmath131-tour .",
    "accordingly , let @xmath475 be the set consisting of the formula @xmath483 together with all the formulas @xmath484 where @xmath479 is non - empty .",
    "evidently the size of @xmath475 is polynomial in the size of @xmath267 .",
    "[ lem : fan ] suppose @xmath55 is a @xmath27-structure such that @xmath485 .",
    "let @xmath70 be an element of @xmath87 and @xmath131 a sub - word of @xmath267 .",
    "if @xmath486 , then @xmath70 is the start of a @xmath131-tour in @xmath55 ; conversely , if @xmath70 is the start of an acyclic @xmath131-tour in @xmath55 , then @xmath486 .",
    "we prove by induction on the length of @xmath131 that if @xmath486 , then @xmath70 is the start of a @xmath131-tour in @xmath55 . if @xmath487 , then the result is evident ( recall that every single element is the start of an @xmath488-tour ) .",
    "now , if @xmath489 , since @xmath485 , we can write @xmath490 , for some @xmath129 and @xmath130 , such that there exists an @xmath491 with @xmath492 , @xmath493 , @xmath494 , @xmath495 and @xmath496 . thus , by inductive hypothesis , @xmath497 is the start of an @xmath129-tour and @xmath70 is the start of an @xmath130-tour .",
    "clearly , then , @xmath70 is the start of the @xmath131-tour .    for the converse , suppose that @xmath70 is the start of an acyclic @xmath131-tour @xmath144 in @xmath55 .",
    "we prove , by induction on the length of @xmath131 , that @xmath498 .",
    "write @xmath499 and @xmath500 , as usual , letting @xmath141 . if @xmath501 ( i.e.  @xmath502 ) then , since @xmath485 we have @xmath503 . now , suppose that @xmath504 ( i.e.  @xmath148 )",
    ". then @xmath505 . let @xmath275 be the largest index ( @xmath458 ) such that @xmath405 .",
    "by lemma  [ lma : retrace ] , @xmath408 , whence @xmath506 .",
    "write @xmath507 , @xmath508 , @xmath509 and @xmath510 .",
    "thus , @xmath490 , @xmath185 is the start of an acyclic @xmath129-tour , and @xmath165 the start of an acyclic @xmath130-tour . by inductive hypothesis , @xmath511 and @xmath512 . since @xmath485",
    ", we have @xmath498 .",
    "now for our second device , which enables us to identify ternary - branching structures of the kind illustrated in fig .",
    "[ fig : tours](ii ) .",
    "let the signature @xmath513 consist of @xmath481 together with the unary predicates @xmath514 , where @xmath59 , @xmath515 and @xmath516 are letters in @xmath267 , and @xmath517 , @xmath518 are sub - words of @xmath267 .",
    "the intention is that @xmath514 will be satisfied in certain sorts of structures by an element @xmath70 just in case @xmath70 has the configuration exhibited by @xmath165 in fig .",
    "[ fig : tours](ii ) , where @xmath519 .",
    "let @xmath520 be the set of all formulas @xmath521 where @xmath522 , @xmath523 and @xmath524 .",
    "[ lma : branchsem1 ] suppose @xmath55 is a structure such that @xmath525 .",
    "then @xmath526 satisfies @xmath514 if and only if there exist elements @xmath527 such that @xmath165 , @xmath185 , @xmath186 are distinct , @xmath528 , @xmath529 , @xmath530 , @xmath531 , @xmath532 and @xmath533 .    immediate .",
    "we also introduce an additional family of unary predicates @xmath534 , satisfied by elements in configurations such as that of @xmath185 in fig .",
    "[ fig : tours](iv ) , where @xmath519 . to this end",
    ", we define @xmath535 to be the set of formulas @xmath536 where @xmath537 have the same range as for @xmath538 .",
    "[ lma : branchsem2 ] suppose @xmath55 is a structure such that @xmath539",
    ". then @xmath540 satisfies @xmath541 if and only if there exist elements @xmath542 such that @xmath165 , @xmath185 , @xmath186 are distinct , @xmath528 , @xmath529 , @xmath530 , @xmath531 , @xmath543 and @xmath544 .    of course , the formulas in @xmath520 and @xmath535 are not in @xmath11 , as they feature three variables .",
    "however , lemma  [ lem : rewrite ] ensures that they are equivalent to @xmath11-formulas . in the sequel , therefore , we shall treat @xmath520 and @xmath535 as sets of @xmath11-formulas , understanding them to be replaced by their ( harder - to - read ) @xmath11-equivalents .",
    "we write @xmath545 .",
    "our third device enables us to identify elements at the start of structures of the kind illustrated in fig .",
    "[ fig : isthmus ] , whose final elements satisfy a given unary predicate @xmath546 of @xmath513 .    at ( -1 , 0 ) @xmath70 ; at ( 7 , 0 ) @xmath172 ;    ; ; ; ;    ; ; ; ;    ( 7.5 , 0 ) ",
    "( 8.5 , 0 ) ; ( 8.5 , -.35 ) rectangle ( 9.3 , .35 ) ; at ( 8.9 , -.05 ) @xmath546 ;    ( 4.6 , 0 )  ( 5.4 , 0 ) ;    let the signature @xmath547 consist of @xmath513 together with the unary predicates @xmath548 , where @xmath129 and @xmath130 are sub - words of @xmath267 , and @xmath546 is any unary predicate of @xmath513 . (",
    "note that @xmath513 contains predicates of the forms @xmath514 and @xmath534 . )",
    "the intention is that @xmath548 will be satisfied by an element @xmath70 in a certain sorts of structures just in case there exists an element @xmath172 satisfying @xmath546 , as well as an @xmath129-walk from @xmath70 to @xmath172 and an @xmath130-walk from @xmath172 to @xmath70 , which together form acyclic @xmath549-tour .",
    "we refer to such a tour , informally , as an _ isthmus_. accordingly , let @xmath477 be the set of all formulas @xmath550,\\end{gathered}\\ ] ] where @xmath551 , @xmath552 and @xmath546 is a unary predicate of @xmath513 .",
    "again , the sizes of the signature @xmath547 and the set of formulas @xmath477 are polynomially bounded in @xmath553 .",
    "[ lem : isth ] let @xmath554 , @xmath555 and @xmath556 .",
    "suppose @xmath557 .",
    "if @xmath558 , then there exists an element @xmath68 such that @xmath559 , a walk @xmath560 $ ] from @xmath172 to @xmath70 , and a walk @xmath561 $ ] from @xmath70 to @xmath172 .",
    "conversely , if such @xmath70 , @xmath210 , @xmath129 , @xmath562 , @xmath130 exist , with @xmath563 additionally an acyclic tour , then @xmath558 .",
    "suppose that @xmath558 . to construct the required @xmath70 , @xmath210 , @xmath129 , @xmath562 and @xmath130 , we proceed by induction on the length of the combined sequence @xmath549 .",
    "for the case @xmath564 , if @xmath565 , then by lemma  [ lem : fan ] , there exists an @xmath129-tour @xmath210 and a @xmath130-tour @xmath562 , both starting at @xmath172 . now set @xmath85 .",
    "thus , @xmath566 $ ] is a walk from @xmath172 to itself , and @xmath567 $ ] a walk from @xmath70 to itself , as required . for the case @xmath568 , since @xmath569 , we may write @xmath570 and @xmath571 , such that @xmath572 and there exists @xmath573 with @xmath574 , @xmath575 and @xmath576 . by inductive hypothesis , there exist an element @xmath68 and walks @xmath577 $ ] , @xmath578 $ ] , with @xmath579 the first element of @xmath580 , @xmath70 the first element of @xmath581 , and @xmath559 . on the other hand , from lemma  [ lem : fan ] ,",
    "@xmath172 is the start of an @xmath582-tour , say @xmath243 , and of an @xmath583-tour , say @xmath584 .",
    "writing @xmath585 and @xmath586 , we see that @xmath587 is an @xmath129-walk from @xmath172 to @xmath70 , and @xmath588 is an @xmath130-walk from @xmath70 to @xmath172 , as required .",
    "for the converse , suppose that there exist an element @xmath68 and walks @xmath560 $ ] , @xmath561 $ ] , with @xmath172 the first element of @xmath210 and @xmath70 the first element of @xmath562 , such that @xmath563 is an acyclic tour , and @xmath589 .",
    "we again proceed by induction on @xmath590 , supposing that the result holds for sequences of smaller combined length .",
    "write @xmath591 and @xmath592 .",
    "thus , @xmath593 and @xmath594 .",
    "let @xmath73 be the largest index ( @xmath595 ) such that @xmath596 . if @xmath597 , then @xmath85 . in that case",
    ", @xmath70 satisfies @xmath546 ; moreover , @xmath598 and @xmath599 are acyclic tours , and so by lemma  [ lem : fan ] , @xmath172 satisfies @xmath600 and @xmath601 . since @xmath602",
    ", @xmath70 also satisfies @xmath548 .",
    "suppose , then that @xmath603 , so that @xmath604",
    ". then @xmath605 is an acyclic tour starting at @xmath172 .",
    "let @xmath262 be the last element of @xmath606 equal to @xmath607 .",
    "applying lemma  [ lma : retrace ] to @xmath606 , the next element after @xmath262 must be @xmath608 ; and since @xmath609 and by construction @xmath360 does not occur in @xmath610 , we have @xmath611 for some @xmath275 @xmath612 .",
    "thus , @xmath613 . now let @xmath614 , @xmath615 , @xmath616 , @xmath617 ; define the sequences @xmath582 , @xmath618 , @xmath619 , @xmath583 correspondingly .",
    "write @xmath620 , @xmath621 and @xmath622",
    ". then @xmath623 and @xmath624 .",
    "moreover , @xmath625 and @xmath626 are acyclic tours beginning at @xmath172 , @xmath627 $ ] is a walk from @xmath579 to @xmath70 and @xmath628 $ ] a walk from @xmath70 to @xmath579 such that the tour @xmath629 is acyclic . by lemma  [ lma :",
    "retrace ] , @xmath172 satisfies @xmath630 and @xmath631 ; and by inductive hypothesis , @xmath579 satisfies @xmath632 . since @xmath602 , @xmath172 satisfies @xmath548 .",
    "with these tools at our disposal , we may return to the task of reducing the satisfiability and finite satisfiability problems for @xmath15 to the corresponding problems for @xmath14 .",
    "as before , let @xmath473 $ ] be a binary path - functional dependency , and define @xmath474 .",
    "we have observed that @xmath86 is critically violated in a structure @xmath55 if and only if @xmath55 contains an @xmath267-tour @xmath144 whose first three elements are distinct .",
    "furthermore , we have shown that , in such a case , @xmath144 must fall under exactly one of the ten cases depicted in fig .",
    "[ fig : tours ] .",
    "consider first the case illustrated in fig .",
    "[ fig : tours](i ) : @xmath144 is passive . define @xmath633 to be the @xmath11-sentence @xmath634 the following lemma states that we can now rule out such critical violations of @xmath86 by writing the @xmath11-formula @xmath635 .",
    "[ lem : viol_cond_i ] suppose @xmath636 . if @xmath55 is @xmath386-quasi - acyclic , but contains a critical violation of @xmath86 having the form of a passive @xmath267-tour , then @xmath637 .",
    "conversely , if @xmath637 , then @xmath55 contains a critical violation of @xmath86 .",
    "suppose @xmath55 contains a passive @xmath267-tour whose first three elements , @xmath165 , @xmath185 and @xmath186 are distinct .",
    "by lemma  [ lem : cond_i ] , there is a decomposition @xmath638 of @xmath267 and distinct @xmath639 such that @xmath640 , @xmath641 , @xmath642 and @xmath643 all hold , and each @xmath157 ( @xmath644 ) is the start of a @xmath645 tour .",
    "since @xmath55 is @xmath386-quasi - acyclic , these tours must be acyclic . by three applications of lemma  [",
    "lem : fan ] , each @xmath157 satisfies @xmath646 . by lemma  [ lma : branchsem1 ] and construction of @xmath633 , @xmath637 .",
    "suppose , conversely , @xmath637 . by construction of @xmath633 and",
    "lemma  [ lma : branchsem1 ] , there is a decomposition @xmath638 of @xmath267 and three distinct elements @xmath165 , @xmath185 , @xmath186 such that @xmath640 , @xmath641 , @xmath642 , @xmath643 all hold , and each @xmath157 ( @xmath644 ) satisfies @xmath646 . by lemma  [ lem : fan ] , each is @xmath157 the start of a @xmath645 tour .",
    "thus , @xmath165 is the start of an @xmath267-tour in @xmath55 whose first elements are distinct , whence @xmath55 contains a critical violation of @xmath86 .",
    "now consider the case where @xmath431 is as in fig .",
    "[ fig : tours](ii ) : @xmath165 is active , but @xmath185 and @xmath186 are passive .",
    "the following lemma states that we can now rule out such critical violations of @xmath86 by checking some conditions on @xmath16 . note in that , if a database @xmath16 is complete with respect to some signature , and @xmath546 is a predicate in that signature , then , for @xmath647 and @xmath144 a tuple of active elements of @xmath55 of the same arity as @xmath546 , the conditions @xmath648 and @xmath649 are equivalent .",
    "[ lem : viol_cond_ii ] suppose @xmath650 , where @xmath16 is complete with respect to @xmath651 . if @xmath55 is @xmath386-quasi - acyclic , but contains an @xmath267-tour @xmath652 such that @xmath165 , @xmath185 , @xmath186 are distinct with @xmath165 active , but @xmath185 and @xmath186 passive , then there exists a decomposition @xmath653 and a sequence of database elements @xmath654 with @xmath655 , such that:(i ) @xmath656 ; ( ii ) @xmath657 for all @xmath73 ( @xmath658 ) ; and ( iii ) @xmath659 for all @xmath73 ( @xmath660 ) .",
    "conversely , if such a decomposition and sequence of database elements exists , then @xmath55 contains a critical violation of @xmath86 .",
    "suppose @xmath55 contains a @xmath267-tour @xmath652 such that @xmath165 is active , but @xmath185 and @xmath186 are passive . by lemma",
    "[ lem : cond_ii ] there exist decompositions @xmath388 and @xmath389 , such that @xmath661 , @xmath393 , @xmath662 and @xmath394 are all true in @xmath55 and , for all @xmath73 ( @xmath644 ) , @xmath663 is an acyclic tour in @xmath55 starting at @xmath157 . by two applications of lemma  [",
    "lem : fan ] and lemma  [ lma : branchsem1 ] , @xmath664 .",
    "furthermore , by lemma  [ lem : dbcycle_decomp ] , the tour @xmath665 starting at @xmath165 can be further decomposed as @xmath666 such that @xmath356 is an active tour , and each @xmath667 is an acyclic tour beginning at @xmath283 ( @xmath668 ) .",
    "thus , we have @xmath657 for all @xmath73 ( @xmath658 ) . finally ,",
    "by repeated applications of lemma  [ lem : fan ] , we have @xmath659 all @xmath73 ( @xmath660 ) .",
    "conversely , suppose the decomposition @xmath669 and elements @xmath670 exist with the advertised properties .",
    "by lemma  [ lma : branchsem1 ] and two applications of lemma  [ lem : fan ] , @xmath671 is the start of an @xmath672-tour , say @xmath606 , whose first three elements are distinct .",
    "moreover , by lemma  [ lem : fan ] , each @xmath283 ( @xmath660 ) is the start of an @xmath673 tour , say @xmath299 .",
    "concatenating these tours , @xmath165 is the start of a @xmath267-tour , namely @xmath674 , whose first three elements are distinct , whence @xmath55 contains a critical violation of @xmath86 .    violations of @xmath86 having the forms shown in fig .  [",
    "fig : tours](iii)(vi ) can be ruled out in essentially the same way as for fig .",
    "[ fig : tours](ii ) .",
    "consequently , we turn our attention to the case of fig .",
    "[ fig : tours](vii)(ix ) .",
    "[ lem : viol_cond_vii ] suppose @xmath675 , where @xmath16 is complete with respect to @xmath651 . if @xmath55 is @xmath386-quasi - acyclic , but contains a mixed @xmath267-tour @xmath144 whose first three elements are all passive , then there exists a decomposition @xmath676 and a sequence of active elements @xmath654 , with @xmath677 , such that the following hold :    1 .",
    "one of the three conditions 1 .",
    "@xmath678 , @xmath679 2 .",
    "@xmath680 , @xmath681 3 .",
    "@xmath682 , @xmath683 + obtains ; 2 .",
    "@xmath657 for all @xmath73 ( @xmath658 ) ; and 3 .",
    "@xmath684 for all @xmath73 ( @xmath660 ) .",
    "conversely , if any such decomposition and sequence of database elements exists , then @xmath55 contains a critical violation of @xmath86 .",
    "suppose @xmath55 contains a mixed @xmath267-tour @xmath144 whose first three elements are all passive .",
    "by lemma  [ lem : cond_vii_viii_ix ] , there exist decompositions @xmath388 and @xmath389 , such that : ( i ) for all @xmath275 ( @xmath433 ) @xmath434 is a tour in @xmath55 starting at @xmath435 ; ( ii ) two of these tours are acyclic and the third is mixed ; ( iii ) @xmath393 and @xmath394 are true in @xmath55 .",
    "assume , for definiteness , that @xmath685 and @xmath686 are acyclic , and @xmath687 is mixed . by two applications of lemma  [ lem : fan ] and lemma  [ lma : branchsem1 ] , @xmath664 .",
    "now consider the mixed tour @xmath687 , starting at the passive element @xmath165 .",
    "write @xmath688 , the initial element of this tour . by lemma",
    "[ lem : isthmus ] , there exists an element @xmath172 such that we can write @xmath689 and @xmath690 , where @xmath691 is a walk from @xmath172 to @xmath70 , @xmath692 is a walk from @xmath70 to @xmath172 , and @xmath693 is a tour starting at @xmath172 .",
    "write @xmath206 . now applying lemma  [ lem : isth ]",
    ", we see that @xmath694 .",
    "further , applying lemma  [ lem : dbcycle_decomp ] to the tour @xmath693 , we may write @xmath695 and @xmath696 such that @xmath657 for all @xmath73 ( @xmath658 ) , and @xmath667 is an acyclic tour starting at @xmath283 for all @xmath73 ( @xmath660 ) . by repeated applications of lemma  [",
    "lem : fan ] , @xmath659 for all @xmath73 ( @xmath660 ) .",
    "this yields the conditions required in the lemma , with disjunct ( a ) realized in condition ( i ) .",
    "if @xmath686 is mixed , then we obtain disjunct ( b ) , and if @xmath685 is mixed , disjunct ( c ) , by similar arguments .",
    "conversely , suppose that there exists a decomposition as described by the lemma , with disjunct ( a ) realized in condition ( i ) . by ( i)(a ) and",
    "lemma  [ lem : isth ] , there exist an element @xmath68 , a walk @xmath560 $ ] from @xmath360 to @xmath70 , and a walk @xmath697 $ ] from @xmath70 to @xmath360 , such that @xmath698 is an acyclic tour , and @xmath699 .",
    "write @xmath72 , so that , by lemma  [ lma : branchsem1 ] , there exist elements @xmath527 such that @xmath165 , @xmath185 , @xmath186 are distinct , @xmath700 , @xmath701 , @xmath530 , @xmath531 and for @xmath702 , @xmath703 . by lemma  [ lem : fan ] , there is an @xmath645-tour starting at @xmath157 for @xmath702 .",
    "starting at the element @xmath704 , and concatenating these various tours and single steps , we obtain the tour @xmath705 passing through @xmath360 .",
    "note that @xmath360 is the initial element of @xmath210 . from condition ( ii ) and",
    "repeated applications of lemma  [ lem : fan ] , there exists a tour @xmath706 starting at @xmath278 for all @xmath275 ( @xmath707 ) and a tour @xmath708 starting at @xmath360 .",
    "thus , from condition ( iii ) , there exists a tour @xmath709 starting at @xmath360 . inserting the second of these tours into the first at the element @xmath360",
    ", we obtain the tour @xmath710 but this is just an @xmath267-tour whose first three elements , @xmath711 , are distinct , so that @xmath86 has a critical violation .",
    "the disjuncts ( b ) and ( c ) in condition ( i ) are dealt with similarly .",
    "this leaves just the final case of fig .",
    "[ fig : tours ] to cover .",
    "[ lem : viol_cond_x ] suppose @xmath712 .",
    "if @xmath55 is @xmath386-quasi - acyclic , but contains a mixed @xmath267-tour whose three initial elements are all active , then there exist a decomposition @xmath713 and a sequence of active elements @xmath654 with @xmath714 distinct and @xmath677 , such that    1 .",
    "@xmath657 for all @xmath73 ( @xmath715 ) ; and 2 .",
    "@xmath659 for all @xmath73 ( @xmath660 ) .",
    "conversely , if such a decomposition exists , then @xmath55 contains a critical violation of @xmath86 .",
    "easy using by - now familiar reasoning from lemmas  [ lem : dbcycle_decomp ] , [ lem : cond_x ] and  [ lem : fan ] .    lemmas  [ lem : viol_cond_i][lem : viol_cond_x ] yield a reduction from the satisfiability and finite satisfiability problems for @xmath15 to the corresponding problems for @xmath14 . for definiteness ,",
    "we consider satisfiability ; the reduction for finite satisfiability is identical . by lemma",
    "[ lma : splitting ] , we may confine attention to @xmath11-formulas of the form @xmath716 , where @xmath99 is a @xmath11-formula , @xmath717 a database and @xmath18 a set of unary and binary path - functional dependencies .",
    "we may assume that @xmath717 is consistent , since if not , @xmath99 is certainly unsatisfiable .",
    "furthermore , we may suppose that every @xmath201 is binary , since unary path - functional dependencies can be easily eliminated .",
    "let @xmath718 be the conjunction of all the @xmath475 for @xmath201 ; similarly for @xmath719 and @xmath720 .",
    "let @xmath721 be the conjunction of all the formulas @xmath722 , for @xmath201 . finally , let the signature @xmath723 be the union of all the @xmath547 for @xmath201 .",
    "consider each of the exponentially many consistent completions @xmath724 over @xmath723 , in turn .",
    "for each such @xmath16 , check the @xmath14-formula @xmath725 is satisfiable , and that none of the ten types of violations of @xmath86 depicted in fig .",
    "[ fig : tours](ii)(x ) arises , by checking that @xmath16 satisfies the relevant conditions in lemmas  [ lem : viol_cond_ii][lem : viol_cond_x ] .",
    "( note that the truth of formulas @xmath721 rules out violations of @xmath86 of the type depicted in fig .",
    "[ fig : tours](i ) , by lemma  [ lem : viol_cond_i ] . )",
    "if , for some @xmath16 , these checks succeed , we may report that @xmath17 is satisfiable .",
    "otherwise , we may report that it is unsatisfiable .",
    "anticipating theorems  [ thm : main ] and  [ thm : maingeneral ] , stating that the satisfiability and finite satisfiability problems for @xmath14 are in @xmath0 , we have our main result :    [ thm : main_key ] the satisfiability and finite satisfiability problems for @xmath15 are in @xmath0 .",
    "it remains only to establish that the satisfiability and finite satisfiability problems for @xmath14 are in @xmath0 ( theorems  [ thm : main ] and  [ thm : maingeneral ] ) .",
    "the proof given here is a modification of the proof in  @xcite that the finite satisfiability problem for @xmath11 is in @xmath0 .",
    "unfortunately , guarded formulas can not straightforwardly be used to express databases , and the authors know of no natural reduction from ( finite ) @xmath14-satisfiability to ( finite ) @xmath11-satisfiability : the proof , even though its broad outlines are the same , has to be re - written from scratch .",
    "many of the following lemmas are taken ",
    "modulo inessential reformulation  directly from  @xcite .",
    "we begin with a normal - form lemma for @xmath11-formulas .",
    "[ lem : gc2_nf ] let @xmath99 be a @xmath11-formula .",
    "we can compute in time polynomial in @xmath726 , a sentence @xmath727 such that : ( i ) @xmath35 is a quantifier- and equality - free formula in one variable , @xmath10 ; ( ii ) @xmath728 , @xmath9 are positive integers ; ( iii ) @xmath729 is a binary predicate different from @xmath31 ; ( iv ) @xmath730 is a quantifier- and equality - free formula ; ( v ) @xmath731 is a positive integer ; ( vi ) @xmath732 is a quantifier- and equality - free formula ; ( vii ) @xmath17 entails @xmath99 ; and ( viii ) any model of @xmath99 can be expanded to a model of @xmath17 .    in the sequel",
    ", we fix a @xmath14-formula @xmath53 , where @xmath17 is of the form  , and @xmath16 a database , over some signature @xmath27 .",
    "as we are employing the unique names assumption , we continue to write @xmath262 instead of @xmath733 where the interpretation @xmath55 is clear from context . for technical reasons , we assume that @xmath27 contains , for each individual constant @xmath262 , a unary predicate with the same name , and that @xmath16 contains all the formulas @xmath734 and @xmath735 where @xmath262 and @xmath263 are distinct individual constants .",
    "we refer to these unary predicates as _ naming predicates _ and to the formulas added to @xmath16 as _ naming formulas_. note that the addition of naming predicates and formulas requires at most a polynomial increase in the size of @xmath27 and @xmath16 .",
    "we further assume , again for technical reasons , that @xmath27 contains @xmath736 unary predicates not occurring in @xmath17 or @xmath16 .",
    "we refer to these unary predicates as _ spare predicates_. notice that the number of spare predicates is bounded by a polynomial function of @xmath19 .",
    "a @xmath737-_type _ is a maximal consistent set of non - ground , equality - free literals ( over @xmath27 ) with @xmath10 as the only free variable ; a @xmath738-_type _ is a maximal consistent set of non - ground , equality - free literals ( over @xmath27 ) with @xmath10 and @xmath26 as the only free variables . in this article ,",
    "expressions involving equality do not feature in 1- or 2-types : this includes , in particular , formulas of the forms @xmath739 and @xmath740 . on the other hand ,",
    "every individual constant @xmath262 in @xmath27 is also a naming predicate , and literals of the forms @xmath741 and @xmath742 do occur in 1- and 2-types . since @xmath16 is assumed to contain all the naming formulas ,",
    "if @xmath743 , then @xmath262 will be the unique database element of @xmath55 whose 1-type contains the literal @xmath741 .",
    "we use the letters @xmath744 and @xmath745 , possibly with subscripts , to range over 1-  and 2-types respectively .",
    "where convenient , we treat a @xmath78-type ( @xmath746 ) as the conjunction of the formulas constituting it .    for a given structure @xmath55 interpreting @xmath27 and element @xmath68 ,",
    "we denote by @xmath747}}}$ ] the unique 1-type @xmath745 such that @xmath748 . in this case",
    ", we say that @xmath745 is _ realized _ by @xmath70 or that @xmath70 _ realizes _ @xmath745 . if @xmath70 and @xmath172 are distinct elements of @xmath87 , we speak similarly of the 2-type @xmath749}}}$ ] _ realized _ by @xmath70 and @xmath172 .",
    "let @xmath745 be a 2-type ; we denote by @xmath750 the 2-type which is the result of transposing the variables @xmath10 and @xmath26 in @xmath745 .",
    "further , we denote by @xmath751 the result of deleting all literals from @xmath745 involving the variable @xmath26 , and we define @xmath752 .",
    "we are to think of @xmath751 as the ` starting point ' of @xmath745 and of @xmath753 as the ` endpoint ' of @xmath745 . evidently , if @xmath745 is a 2-type , @xmath55 a structure , and @xmath212 distinct elements of @xmath87 such that @xmath749 } } } = \\tau$ ] , then @xmath754 } } } = \\tau^{-1}$ ] , @xmath747 } } } = { \\ensuremath{\\mathrm{tp}_1(\\tau ) } } $ ] and @xmath755 } } } = { \\ensuremath{\\mathrm{tp}_2(\\tau)}}$ ] .    by a _ vector",
    "we understand an @xmath9-dimensional vector over @xmath756 .",
    "we denote the vector @xmath757 of counting subscripts occurring in   by @xmath758 and the @xmath9-dimensional zero vector by @xmath759 .",
    "we use @xmath760 for the pointwise ordering on vectors : @xmath761 if every component of @xmath762 is less than or equal to the corresponding component of @xmath763 , and @xmath764 if @xmath761 and @xmath765 ; similarly for @xmath766 and @xmath767 .",
    "let @xmath768 . the number of vectors @xmath769 such that @xmath770 is evidently bounded by @xmath771 , and thus by an exponential function of @xmath772 .",
    "the following notions make specific reference to our fixed formula @xmath17 given in  .",
    "let @xmath745 be a 2-type over @xmath27 .",
    "we say that @xmath745 is a _ message - type _ if @xmath773 , for some @xmath73 @xmath774 .",
    "for @xmath745 a message - type , if @xmath750 is also a message - type , we say that @xmath745 is _ invertible _ ; otherwise , @xmath745 is _ non - invertible_. finally , if @xmath745 is a 2-type such that neither @xmath745 nor @xmath750 is a message - type , we say that @xmath745 is _",
    "silent_.    let @xmath55 be a structure interpreting @xmath27 .",
    "if @xmath70 , @xmath172 are distinct elements of @xmath87 such that @xmath749 } } } = \\tau$ ] is a message - type , we say , informally , that @xmath70 _ sends a message _",
    "( _ of type @xmath745 _ ) _ to _ @xmath172 .",
    "we call @xmath55 _ chromatic _ if the following are true :    * for all @xmath775 such that @xmath202 and @xmath776}}}$ ] is an invertible message - type , we have @xmath747 } } } \\neq { { \\ensuremath{\\mathrm{tp}_{{\\ensuremath{\\mathfrak{a}}}}[b]}}}$ ] .",
    "* for all pairwise distinct @xmath777 such that @xmath776}}}$ ] and @xmath778}}}$ ] are invertible message - types , we have @xmath747 } } } \\neq { { \\ensuremath{\\mathrm{tp}_{{\\ensuremath{\\mathfrak{a}}}}[c]}}}$ ] .    in other words ,",
    "a structure @xmath55 is chromatic if no element sends an invertible message to an element with the same 1-type as itself , and no element sends invertible messages to two different elements with the same 1-type as each other .",
    "the following lemma shows that for our fixed formula @xmath53 and signature @xmath27 , we may restrict attention to chromatic models .",
    "this lemma relies on the fact that @xmath27 contains the @xmath736 ` spare ' predicates not occurring in @xmath17 or @xmath16 .",
    "if @xmath53 has a model interpreting @xmath27 , then it has a chromatic model interpreting @xmath27 over the same domain .",
    "assume , then , that @xmath55 is a chromatic model of @xmath53 over @xmath27 . by adding to @xmath16 all ground literals over @xmath27 that are true in @xmath55 , we may assume that @xmath16 is complete over @xmath27 .",
    "notice that , for a complete database @xmath16 , all models @xmath16 assign the same 1-type to @xmath262 , and so we may denote this 1-type by @xmath779}}$ ] . if @xmath262 and @xmath263 are distinct individual constants , we define @xmath780}}$ ] analogously .",
    "let @xmath781 be an enumeration of the 1-types over @xmath27 .",
    "it is clear that @xmath782 is a power of 2 , thus @xmath783 is an integer .",
    "we will need to index certain sub - sequences of @xmath784 using bit - strings .",
    "let @xmath488 denote the empty string and define @xmath785 to be the whole sequence .",
    "now suppose @xmath786 has been defined , where @xmath787 is a bit - string of length less than @xmath546 , and @xmath788 is a power of 2 .",
    "we define @xmath789 and @xmath790 to be the first and second halves of @xmath791 , respectively : @xmath792 when @xmath793 , it is clear that @xmath791 corresponds to one exactly 1-type @xmath794 : we sometimes denote this type by @xmath795 . note that , in this case , @xmath787 is the binary representation of the subscript @xmath275 .",
    "we now index ( sequences of ) invertible message - types according to their terminal 1-types using bit - strings as follows .",
    "let @xmath796 be the set of all invertible message - types ( over @xmath27 ) .",
    "fix any 1-type @xmath744 , let @xmath787 be any bit - string with @xmath797 , and define @xmath798 i.e.  @xmath799 is the set of all invertible message - types ` starting ' from an element of 1-type @xmath744 and ` ending ' at an element whose 1-type is in @xmath791 .",
    "notice that each of the sets @xmath799 will usually contain more than one 2-type .",
    "this is true even when @xmath800 , as there are several ways one could ` connect ' an element of 1-type @xmath744 with another element of 1-type @xmath801 .",
    "chromatic _ model , @xmath55 , however , we are guaranteed that no element sends an invertible message - type to an element of the same 1-type and any element @xmath70 of 1-type @xmath744 can send an invertible message to no more than one element @xmath172 of type @xmath802 .",
    "thus , when @xmath800 , there can be at most one element @xmath803 such that @xmath776 } } } \\in { \\ensuremath{\\lambda_{\\pi , { \\ensuremath{\\texttt{s}}}}}}$ ] .",
    "in a similar way , we use bit - strings to index sequences of 2-types that are not invertible message - types . fix any 1-type @xmath744 and let @xmath804 be an enumeration of all 2-types @xmath745 with @xmath805 that are either non - invertible message - types or silent 2-types . in other words , @xmath806 is an enumeration of all 2-types @xmath745 with @xmath805 such that @xmath750 is not a message - type",
    ". it follows , then , that @xmath807 is a power of 2 , thus @xmath808 is an integer .",
    "define @xmath809 .",
    "now suppose @xmath810 has been defined , where @xmath811 is a bit - string of length less than @xmath812 , and @xmath788 is a power of 2 .",
    "we recursively define @xmath813 note that if @xmath814 , then @xmath815 contains a single 2-type @xmath816 , which we often write as @xmath817 for convenience .",
    "in this section , we show how to transform our given @xmath14-formula , @xmath53 , into a system of exponentially many linear inequalities .",
    "the variables in these inequalities represent the frequency with which certain ( local ) configurations are realized in a putative model .",
    "we shall show that this system of inequalities has a non - negative integer solution if and only if @xmath53 is finitely satisfiable .",
    "let @xmath55 be a model of @xmath17 interpreting the signature @xmath27 .",
    "let @xmath68 be an element with @xmath747}}}= \\pi$ ] , and @xmath787 a bit - string of length at most @xmath546 .",
    "define the @xmath787-_spectrum _ of @xmath70 in @xmath55 , denoted @xmath818}}}$ ] , to be the @xmath9-element vector @xmath819 where , for @xmath668 , @xmath820 } } } \\in { \\ensuremath{\\lambda_{\\pi , { \\ensuremath{\\texttt{s}}}}}}\\}|.\\ ] ] likewise , if @xmath811 is a bit - string with @xmath821 , define the @xmath811-_tally _ of @xmath70 , denoted @xmath822}}}$ ] , to be the @xmath9-element vector @xmath823 where , for @xmath668 , @xmath824 } } } \\in { \\ensuremath{m_{\\pi , { \\ensuremath{\\texttt{t}}}}}}\\}|.\\ ] ] informally , @xmath818}}}$ ] records the number of @xmath732-messages ( @xmath668 ) sent by the element @xmath70 , and whose types belong to @xmath799 .",
    "( note that these message - types are all invertible . )",
    "in particular , @xmath825}}}$ ] records the number of invertible @xmath732-messages ( @xmath668 ) sent by the element @xmath70 .",
    "similarly , @xmath822}}}$ ] records the number of @xmath732-messages ( @xmath668 ) sent by the element @xmath70 , and whose types belong to @xmath826 .",
    "( note that these message - types are all non - invertible . )",
    "in particular , @xmath827}}}$ ] records the number of non - invertible @xmath732-messages ( @xmath668 ) sent by the element @xmath70 .",
    "let @xmath787 be any bit - string with @xmath828 and fix a 1-type @xmath744 .",
    "for a given structure @xmath55 , each vector @xmath762 specifies a set of elements of @xmath55 , i.e.  the set of elements of type @xmath744 that have @xmath787-spectrum @xmath762 .",
    "the following lemma encapsulates the observation that this set can also be characterized as the union of sets of elements of type @xmath744 whose @xmath829- and @xmath830-spectra add up to @xmath762 .",
    "the same idea applies to tallies .",
    "[ spec_lem ] let @xmath55 be a finite model of @xmath17 , and let @xmath68 with @xmath747 } } } = \\pi$ ] .",
    "let @xmath787 , @xmath811 be any bit - strings with @xmath828 and @xmath821 .",
    "then , the following equations hold : @xmath831 } } } + { { \\ensuremath{\\mathrm{tl}_{\\epsilon}^{{\\ensuremath{\\mathfrak{a}}}}[a ] } } } & = { \\ensuremath{\\bm{c}}}\\\\    \\label{spec_lem_eq2 }    { { \\ensuremath{\\mathrm{sp}_{{\\ensuremath{\\texttt{s0}}}}^{{\\ensuremath{\\mathfrak{a}}}}[a ] } } } + { { \\ensuremath{\\mathrm{sp}_{{\\ensuremath{\\texttt{s}}}1}^{{\\ensuremath{\\mathfrak{a}}}}[a ] } } } & = { { \\ensuremath{\\mathrm{sp}_{{\\ensuremath{\\texttt{s}}}}^{{\\ensuremath{\\mathfrak{a}}}}[a ] } } } \\\\",
    "\\label{spec_lem_eq3 }    { { \\ensuremath{\\mathrm{tl}_{{\\ensuremath{\\texttt{t0}}}}^{{\\ensuremath{\\mathfrak{a}}}}[a ] } } } + { { \\ensuremath{\\mathrm{tl}_{{\\ensuremath{\\texttt{t1}}}}^{{\\ensuremath{\\mathfrak{a}}}}[a ] } } } & = { { \\ensuremath{\\mathrm{tl}_{{\\ensuremath{\\texttt{t}}}}^{{\\ensuremath{\\mathfrak{a}}}}[a]}}}\\end{aligned}\\ ] ]    equation  ( [ spec_lem_eq1 ] ) is immediate from the definition of spectra and tallies and the normal form in lemma  [ lem : gc2_nf ] . for equation  ( [ spec_lem_eq2 ] ) ,",
    "notice that the set @xmath799 can be partitioned into two subsets @xmath832 and @xmath833 , and this induces a partition of the outgoing message - types from @xmath70 ( @xmath834 ) ; equation  ( [ spec_lem_eq2 ] ) is then evident .",
    "likewise for equation  ( [ spec_lem_eq3 ] ) .",
    "let @xmath745 be any 2-type .",
    "with @xmath745 we associate an @xmath9-dimensional vector @xmath835 , whose @xmath73th component is given by @xmath836 let @xmath55 be a finite model of @xmath17 , @xmath68 , and @xmath811 a bit - string with @xmath814 .",
    "now , consider the ( only ) 2-type @xmath817 in @xmath815 and , if @xmath817 is non - silent , let @xmath728 be the number of messages of type @xmath817 sent by @xmath70 , i.e.  @xmath728 is the number of elements @xmath803 such that @xmath776 } } } = \\mu_{\\pi , { \\ensuremath{\\texttt{t}}}}$ ] .",
    "it is clear , then , that @xmath822 } } } = n \\cdot { \\ensuremath{\\bm{c}}}_{\\mu_{\\pi , { \\ensuremath{\\texttt{t}}}}}$ ] .",
    "on the other hand , if @xmath817 is silent , we have @xmath822 } } } = { \\ensuremath{\\bm{c}}}_{\\mu_{\\pi , { \\ensuremath{\\texttt{t } } } } } = { \\ensuremath{\\bm{0}}}$ ] .",
    "let @xmath787 be a bit - string with @xmath800 , and suppose further that @xmath55 is chromatic . for each element",
    "@xmath68 with 1-type @xmath744 and non - zero @xmath787-spectrum , there is a unique @xmath837 ( depending on @xmath70 ) such that @xmath70 sends a message of type @xmath838 , and hence has @xmath787-spectrum @xmath839 .",
    "[ tmp_lem1 ] let @xmath55 be a chromatic model of @xmath17 , @xmath68 , @xmath744 a 1-type , and @xmath787 a bit - string with @xmath800 . if @xmath747 } } } = \\pi$ ] and @xmath818 } } } = \\lambda$ ] , then there exists @xmath837 with @xmath818 } } } = { \\ensuremath{\\bm{c}}}_\\lambda$ ] such that @xmath70 sends a message of type @xmath838 to some @xmath803 .",
    "conversely , if there exists @xmath837 such that @xmath70 sends a message of type @xmath838 to some @xmath803 , then @xmath747 } } } = \\pi$ ] and @xmath818 } } } = { \\ensuremath{\\bm{c}}}_\\lambda$ ] .",
    "suppose @xmath747 } } } = \\pi$ ] and @xmath818 } } } \\neq { \\ensuremath{\\bm{0}}}$ ] .",
    "as discussed previously , there exists a unique @xmath803 such that @xmath840 } } } \\in { \\ensuremath{\\lambda_{\\pi , { \\ensuremath{\\texttt{s}}}}}}$ ] . clearly , then ,",
    "@xmath818 } } } = { \\ensuremath{\\bm{c}}}_\\lambda$ ] .",
    "conversely , suppose @xmath70 sends a message of type @xmath837 to some element @xmath803 . evidently , then",
    ", @xmath747 } } } = \\pi$ ] and @xmath172 is unique , thus @xmath818 } } } = { \\ensuremath{\\bm{c}}}_\\lambda$ ] .",
    "henceforth , given a structure @xmath55 , we will denote the set of elements in the universe @xmath87 of @xmath55 having 1-type @xmath744 by @xmath841 , that is @xmath842 } } } = \\pi \\}$ ] .",
    "we now proceed to transform the question of whether @xmath53 is finitely satisfiable into the question of whether a certain system of linear equations / inequalities has a solution over @xmath756 .",
    "the solutions of these equations count how often various local configurations appear in a model .",
    "these configurations are :    * realizations of each invertible message - type @xmath838 ; * elements of 1-type @xmath744 having @xmath787-spectrum @xmath769 , for all vectors @xmath770 ; * elements of 1-type @xmath744 having @xmath811-tally @xmath769 , for all vectors @xmath770 ; * elements of 1-type @xmath744 whose @xmath787-spectrum @xmath769 is obtained as the sum of an @xmath829-spectrum @xmath762 and an @xmath830-spectrum @xmath763 , for @xmath843 and for all @xmath787 with @xmath828 ; * elements of 1-type @xmath744 whose @xmath811-tally @xmath769 is obtained as the sum of a @xmath844-tally @xmath762 and a @xmath845-tally @xmath763 , for @xmath843 and for all @xmath811 with @xmath821 .",
    "to each of those configurations we associate a variable which is intended to capture how many times it appears in a model . these variables and the properties that they capture",
    "can be seen in table  [ table : var_meanings ] .",
    "unless specified otherwise , the ranges of the subscripts of these variables are as follows : @xmath744 ranges over all 1-types in @xmath784 , @xmath838 ranges over all invertible message - types , @xmath787 ranges over all bit - strings with @xmath846 , @xmath811 ranges over all bit - strings with @xmath847 , and @xmath848 vary over all vectors @xmath849 .",
    "( similarly for their primed counterparts @xmath850 and @xmath851 . )",
    "that is , we have one variable @xmath852 for each invertible message - type @xmath838 , one variable @xmath853 for each possible combination of @xmath854 , @xmath787 with @xmath846 and @xmath770 , and so on .",
    "| l | variable & intended meaning of its value + @xmath852 & @xmath855 for some @xmath803 ,  @xmath776 } } } = \\lambda \\}|$ ] + @xmath853 & @xmath856 } } } = { \\ensuremath{\\bm{u}}}\\}|$ ] + @xmath857 & @xmath858 } } } = { \\ensuremath{\\bm{u}}}\\}|$ ] + @xmath859 & @xmath860 } } } = { \\ensuremath{\\bm{v}}}$ ] and @xmath861 } } } = { \\ensuremath{\\bm{w}}}$ ] , whenever @xmath862 + @xmath863 & @xmath864 } } } = { \\ensuremath{\\bm{v}}}$ ] and @xmath865 } } } = { \\ensuremath{\\bm{w}}}$ ] , whenever @xmath866 +    we now write a collection of constraints that a given structure @xmath55 has to satisfy for it to be a model of @xmath53 .",
    "for ease of reading , we divide these constraints into four groups : the first three are imposed by the formula @xmath17 , and the fourth , by the database @xmath16 .",
    "let @xmath867 be the following set of constraints , where indices vary over their standard ranges , but with @xmath787 and @xmath811 subject to the additional constraint that @xmath828 and @xmath821 : @xmath868    [ lem : e1 ] let @xmath55 be a finite model of @xmath17 .",
    "the constraints @xmath867 are satisfied when the variables take the values specified in table  [ table : var_meanings ] .    for  , we see from   that every element contributing to the count @xmath869 contributes to @xmath870 , and vice versa . for  , we see from   that every element contributing to the count @xmath853 must contribute to @xmath871 for some pair of vectors @xmath872 , @xmath851 summing to @xmath769 , and vice versa .",
    "the other equations are similar . the inequality   in effect states that @xmath87 is non - empty .    recalling our fixed formula @xmath17 given in  ,",
    "let @xmath745 be any 2-type .",
    "we say that @xmath745 is _ forbidden _ if the following formula is unsatisfiable : @xmath873 evidently , no forbidden 2-type can be realized in any model of @xmath17 .",
    "let @xmath874 be the following set of constraints , where indices vary over their standard ranges , but with @xmath787 and @xmath811 subject to the additional constraint that @xmath800 and @xmath814 : @xmath875    [ lem : e2 ] let @xmath55 be a finite , chromatic model of @xmath17 .",
    "the constraints @xmath874 are satisfied when the variables take the values specified in table  [ table : var_meanings ] .    for  , we observed in lemma  [ tmp_lem1 ] that every element @xmath70 contributing to the count @xmath853 emits exactly one invertible message whose type @xmath838 lies in @xmath799 , and that @xmath876 } } } = { \\ensuremath{\\bm{c}}}_\\lambda$ ] .",
    "the other equations are obvious .",
    "let @xmath877 be the following set of constraints , where indices vary over their standard ranges , but with @xmath811 and @xmath769 subject to the additional constraint that @xmath814 , and @xmath878 : @xmath879 in effect , this inequality states that , if a non - invertible message - type is realized in @xmath55 , then it must have a ` landing - site ' of the appropriate 1-type .",
    "thus , we have :    [ lem : e3 ] let @xmath55 be a finite model of @xmath17 .",
    "the constraints @xmath877 are satisfied when the variables take the values specified in table  [ table : var_meanings ] .",
    "we now turn our attention to the constraints that @xmath16 enforces .",
    "( note that these constraints do not occur at all in  @xcite . )",
    "these constraints feature the spectra and tallies of our database elements .",
    "the difficulty is that , since we do not know how elements in the datadase are related to those outside it in some putative model @xmath55 , these quantities are unknown . moreover , although the number of database elements is bounded by the size of @xmath16 , the number of values @xmath880}}$ ] and @xmath881}}$ ] is exponential in the size of @xmath17 , and thus too large to simply guess in order to obtain the desired @xmath0-complexity bound .",
    "we therefore need to perform this guessing judiciously .",
    "suppose @xmath743 is chromatic : for each constant @xmath882 , let    * @xmath883 be the set of strings @xmath787 of length @xmath546 such that @xmath262 sends an invertible message in @xmath55 to some database element @xmath172 of 1-type @xmath795 ; and * @xmath884 be the set of strings @xmath811 of length @xmath812 such that @xmath262 sends a non - invertible message in @xmath55 of type @xmath885 to some database element .",
    "thus , @xmath883 is the set of indices of ( terminal 1-types of ) invertible messages sent by @xmath262 within the database , and @xmath884 is the set of indices of non - invertible messages sent by @xmath262 within the database . obviously , the cardinalities of both sets are bounded by the size of the database .",
    "if @xmath886 is any bit - string we denote by @xmath887 the set of all proper initial segments of @xmath886 ( thus , @xmath888 , but @xmath889 ) , and we write @xmath890 alternatively , @xmath891 is the set of all proper initial segments of @xmath886 together with their extensions by a single bit . for example , @xmath892 ( the notation is an allusion to the similar notion of c - command in transformational linguistics . ) notice that @xmath893 . now define , for any individual constant @xmath262 , @xmath894 the idea is simple : for an individual constant @xmath262 of type @xmath744 , @xmath895 collects every string @xmath787 of length @xmath546 such that @xmath262 sends an invertible message of type @xmath837 to a database element , together with all of @xmath787 s proper prefixes and the extensions of those proper prefixes by a single bit . notice that @xmath895 is always taken to include the empty string",
    "even if @xmath262 sends no invertible messages to any database element : this stipulation avoids some otherwise tedious special cases .",
    "similarly , @xmath896 collects every string @xmath811 of length @xmath812 such that @xmath262 sends an invertible message of type @xmath897 to a database element , together with all of @xmath811 s proper prefixes and the extensions of those proper prefixes by a single bit ; again , we always add the string @xmath488 .",
    "both of these sets are polynomially bounded in the size of @xmath53 ; we shall need to guess @xmath880}}$ ] only for @xmath898 and @xmath881}}$ ] only for @xmath899 .",
    "we remark that , by construction , for any @xmath787 with @xmath900 , @xmath901 if and only if @xmath902 , and @xmath901 implies @xmath898 ; similarly with @xmath896 .    keeping our chromatic structure @xmath55",
    "fixed for the moment , for any individual constant @xmath262 , with @xmath903 } } = \\pi$ ] , and any @xmath898 , @xmath899 , define : @xmath904 } } } &   \\delta^c_{\\pi,{\\ensuremath{\\texttt{t } } } } & = { { \\ensuremath{\\mathrm{tl}_{{\\ensuremath{\\texttt{t}}}}^{{\\ensuremath{\\mathfrak{a}}}}[c]}}}. \\label{eq : ianseq}\\end{aligned}\\ ] ] that is , @xmath905 is the @xmath787-spectrum in @xmath55 of the database element named @xmath262 , and @xmath906 is its @xmath811-tally . as a special case of  ",
    ", for all bit - strings @xmath787 , @xmath811 with @xmath901 and @xmath907 : + @xmath908    a moment s thought shows that @xmath16 imposes additional constraints on the quantities @xmath905 @xmath906 . for",
    "consider an individual constant @xmath262 and bit - string @xmath787 of length @xmath546 , and suppose there exists an individual constant @xmath263 such that @xmath780 } } = \\lambda \\in \\lambda_{\\pi,{\\ensuremath{\\texttt{s}}}}$ ] .",
    "( since @xmath55 is chromatic , there can be at most one such @xmath263 . )",
    "then @xmath909 } } } = { \\ensuremath{\\bm{c}}}_\\lambda$ ] .",
    "similarly , if , for an individual constant @xmath262 and bit - string @xmath811 of length @xmath812 , where @xmath910 is a non - invertible message - type , there exist @xmath78 individual constants @xmath263 , distinct from @xmath262 , with @xmath780 } } = \\mu_{\\pi,{\\ensuremath{\\texttt{t}}}}$ ] , then , writing @xmath911 for @xmath912 , we have @xmath913 } } } \\geq k \\cdot { \\ensuremath{\\bm{c}}}_{\\mu}$ ] .",
    "as we might say , @xmath16 has to be _ compatible _ with the systems @xmath905 and @xmath906 , in the obvious sense of not requiring that @xmath262 sends more messages than these vectors allow .",
    "we need one further group of constants . for each invertible type @xmath838 ,",
    "let @xmath914 be the number of elements in @xmath16 that send an invertible message of type @xmath838 to another database element .",
    "of course , these numbers can be read directly from @xmath16 .",
    "now let @xmath915 be the following classes of constraints , where @xmath838 varies as usual , @xmath744 ranges over the set of 1-types realized in the database , @xmath262 ranges over the set of individual constants , @xmath787 ranges over the set of strings @xmath787 such that @xmath901 and @xmath811 over the set of strings @xmath811 such that @xmath907 : @xmath916 } } \\\\",
    "\\label{e4_ctmp }   z_{\\pi , \\epsilon , { \\ensuremath{\\bm{u } } } }   \\ : & \\geq   \\ :   1 ,      \\quad \\text{when } { \\ensuremath{\\bm{u}}}= \\delta^c_{\\pi , \\epsilon } \\text { and } \\pi = { \\ensuremath{\\mathrm{tp}_{\\delta}[c ] } } \\\\    \\label{e4_c3 }   \\hat{y}_{\\pi , { \\ensuremath{\\texttt{s } } } , { \\ensuremath{\\bm{v } } } , { \\ensuremath{\\bm{w } } } }    \\ : & \\geq   \\ :   1 ,       \\quad \\text{when } { \\ensuremath{\\bm{v}}}= \\gamma^c_{\\pi , { \\ensuremath{\\texttt{s0 } } } } , \\ , { \\ensuremath{\\bm{w}}}= \\gamma^c_{\\pi , { \\ensuremath{\\texttt{s1 } } } } ,       \\text { and } \\pi = { \\ensuremath{\\mathrm{tp}_{\\delta}[c ] } } \\\\    \\label{e4_c4 }   \\hat{z}_{\\pi , { \\ensuremath{\\texttt{t } } } , { \\ensuremath{\\bm{v } } } , { \\ensuremath{\\bm{w } } } }    \\ : & \\geq   \\ :   1 ,       \\quad \\text{when } { \\ensuremath{\\bm{v}}}= \\delta^c_{\\pi , { \\ensuremath{\\texttt{t0 } } } } , \\ , { \\ensuremath{\\bm{w}}}= \\delta^c_{\\pi , { \\ensuremath{\\texttt{t1 } } } } ,       \\text { and } \\pi = { \\ensuremath{\\mathrm{tp}_{\\delta}[c]}}\\end{aligned}\\ ] ]    [ ortho ] let @xmath55 be a finite model of @xmath917 .",
    "the constraints @xmath915 are satisfied when the variables take the values specified in table  [ table : var_meanings ] .    the constraints  ( [ e4_c1 ] ) , ( [ e4_c2 ] ) and ( [ e4_ctmp ] ) are evident . for ( [ e4_c3 ] ) , let @xmath918 be a constant , with 1-type @xmath919}}$ ] . pick any @xmath787 such that @xmath901 .",
    "( hence , also , @xmath920 . ) by definition , @xmath921 and @xmath922 are the @xmath829- and @xmath830-spectrum ( respectively ) of the ( database ) element @xmath923 .",
    "but then , referring to table  [ table : var_meanings ] , @xmath262 is one of the elements ` recorded ' by the variable @xmath924 , for @xmath925 and @xmath926 .",
    "consequently , @xmath927 , when @xmath925 and @xmath926 .",
    "thus , the constraints  ( [ e4_c3 ] ) are satisfied . similarly for  ( [ e4_c4 ] ) .",
    "let @xmath928 .",
    "note that the size @xmath929 of @xmath930 is bounded above by an exponential function of @xmath772 .",
    "[ lma : orthoplus ] let @xmath17 and @xmath16 be as above .",
    "if @xmath53 is finitely satisfiable , then @xmath930 has a solution over @xmath756",
    ".    lemmas  [ lem : e1][ortho ] .",
    "in the previous section , we established a system of constants @xmath931 , @xmath932 and @xmath914 , satisfying  , and constructed a system @xmath930 of linear equations and inequalities , featuring those constants .",
    "we showed that , if @xmath53 is finitely satisfiable , then the constants can be chosen in such a way that the @xmath931 , @xmath932 are compatible with @xmath16 , and @xmath930 has a solution over @xmath756 . in this section",
    ", we establish a converse result . assuming that the constants @xmath931 , @xmath932 satisfy  , and are compatible with @xmath16 , and by reading off the @xmath914 from @xmath16 as described , we construct , from any solution of @xmath930 over @xmath756 , a finite model of @xmath53 .",
    "our strategy is as follows .",
    "we start with sets of elements @xmath841 of the right cardinality , for each 1-type @xmath744 , and gradually build the message - types that those elements ` want ' to send .",
    "fix some 1-type @xmath744 and let @xmath841 be a set with cardinality @xmath933 think of @xmath841 as the set of elements that ` want ' to have 1-type @xmath744 .",
    "we shall define functions @xmath934 and @xmath935 that give us the spectra and tallies for each element @xmath936 .",
    "think of @xmath937 as the @xmath787-spectrum that @xmath70 ` wants ' to have and @xmath938 as the @xmath811-tally that @xmath70 ` wants ' to have ( when a model is eventually built ) . for those functions to agree with the solutions of the previous system of constraints",
    ", we shall ensure that @xmath939 furthermore , we shall ensure that , for all @xmath936 , @xmath940 finally , for each individual constant @xmath262 , setting @xmath919}}$ ] , we shall ensure the existence of an element @xmath941 such that , for all @xmath898 and all @xmath899 , @xmath942 the idea is that such an element @xmath943 can be used to realize the constant @xmath262 , when a model is eventually built .",
    "[ tech_lem ] suppose that @xmath852 , @xmath853 , @xmath857 , @xmath859 , @xmath863 are ( classes of ) natural numbers satisfying the constraints @xmath930 .",
    "fix any 1-type @xmath854 , and let @xmath841 be a set of cardinality @xmath944 .",
    "then there exists a system of functions on @xmath841 @xmath945 for each bit - string @xmath787 with @xmath846 and @xmath811 with @xmath847 , satisfying the following conditions :            we construct the functions @xmath934 , where @xmath948 by induction on @xmath787 .",
    "suppose @xmath949 ; for each @xmath770 , and for all @xmath950 , set @xmath951 and @xmath952 .",
    "these assignments clearly satisfy ( [ tmp1 ] ) and ( [ tmp2 ] ) , keeping in mind the constraints  ( [ e1_c0 ] ) .",
    "now suppose @xmath919}}$ ] , for some individual constant @xmath262 . by , and setting @xmath769 to be the vector @xmath953 , we have @xmath954",
    ". choose @xmath943 to be any element in @xmath946 .",
    "this immediately secures   for @xmath949 , and given the condition   relating @xmath953 and @xmath955 , also  .",
    "now , assume that @xmath934 ( @xmath956 ) has been defined and satisfies  ( [ tmp1 ] ) and  . for every vector @xmath770 , decompose the set @xmath957 into subsets @xmath958 with cardinality @xmath959 , where @xmath762 , @xmath763 range over all vectors @xmath849 such that @xmath960 .",
    "this is possible from the constraints  ( [ e1_c1 ] ) and equation  ( [ tmp1 ] ) .",
    "set @xmath961 for all @xmath962 .",
    "notice that equation  ( [ tmp4 ] ) holds as required .    to see that @xmath963 and @xmath964 both satisfy equation  ,",
    "note that @xmath965 if and only if , for some vector @xmath851 such that @xmath966 , @xmath967 .",
    "similarly , @xmath968 if and only if , for some vector @xmath872 such that @xmath969 , @xmath970 . that is , @xmath971 with the collections of sets on the respective right - hand sides being pairwise disjoint . by the constraints",
    " , together with the fact that @xmath972 for all @xmath973 , we have : @xmath974 and @xmath964 .",
    "it remains only to secure   for the functions @xmath975 and @xmath964 in the case where @xmath919}}$ ] , for some individual constant @xmath262 , and @xmath829 ( and hence @xmath830 and @xmath787 ) is in @xmath895 . by inductive hypothesis , @xmath976 , i.e. , @xmath977 where @xmath769 is the vector @xmath905 .",
    "let @xmath978 and @xmath979 .",
    "then , by , these vectors satisfy the condition @xmath960 , so that , in the decomposition of @xmath957 , the set @xmath958 will have cardinality @xmath980 .",
    "thus , by  , @xmath981 , so that we may ensure that @xmath943 is contained in this set when we perform the decomposition of @xmath957 .",
    "but then we will have set @xmath982 and @xmath983 , so that   holds with @xmath787 replaced by @xmath829 and @xmath830 .",
    "this completes the induction .",
    "we prove the stronger result that , for all @xmath936 , @xmath275 ( @xmath987 ) and @xmath78 ( @xmath988 ) , @xmath989 using a double induction on @xmath275 and @xmath78 . if @xmath990 , then the left - hand side of   is simply @xmath991 , which is equal to @xmath758 by  .",
    "suppose now that the result holds for the pair @xmath275 , @xmath78 , with @xmath992 .",
    "then @xmath993 this establishes the result for the pair @xmath994 .",
    "an analogous argument using   applies when @xmath995 , completing the induction .",
    "let @xmath852 , @xmath853 , @xmath857 , @xmath859 , @xmath863 be natural numbers satisfying @xmath930 ( with the indices @xmath744 , @xmath787 , @xmath811 , @xmath769 , @xmath762 , @xmath763 varying as usual ) . notice that , for all positive integers @xmath78 , the ( sets of ) natural numbers @xmath996 , @xmath997 , @xmath998 , @xmath999 , @xmath1000 also satisfy @xmath930 .",
    "thus , we may assume that all values in the sought - after solution are greater than or equal to @xmath1001 .",
    "we start by defining the universe @xmath87 of our model @xmath55 .",
    "let @xmath1002 where each set @xmath841 has cardinality @xmath1003 and the sets @xmath841 are pairwise disjoint",
    ". think of @xmath841 as the elements of @xmath87 that ` want ' to have 1-type @xmath744 .",
    "note that @xmath1004 , by the constraint  ( [ e1_c7 ] ) .",
    "let the functions @xmath934 , @xmath935 and elements @xmath943 be as constructed in lemma  [ tech_lem ] .",
    "think of @xmath937 as the @xmath787-spectrum that @xmath70 ` wants ' to have , @xmath938 as the @xmath811-tally that @xmath70 ` wants ' to have , and @xmath943 the database element that ` wants ' to be the denotation of @xmath262 .",
    "we are only interested in the values of these functions when @xmath1005 and @xmath1006 .",
    "fix some such @xmath787 .",
    "decompose each @xmath841 into sets @xmath957 ( with @xmath769 varying ) , for each vector @xmath769 with @xmath1007 . by the constraints",
    "( [ e2_c1 ] ) and equation  ( [ tmp1 ] ) , decompose each of those @xmath957 into pairwise disjoint ( possibly empty ) sets @xmath1008 with @xmath1009 , for all invertible message - types @xmath837 with @xmath1010 .",
    "when performing this decomposition , for each individual constant @xmath262 , if @xmath16 specifies that @xmath262 sends an invertible message of type @xmath838 to some other database element , then make sure that @xmath943 is assigned to the set @xmath1008 : by  ( [ e4_c1 ] ) , this set is at least as numerous as the number of database elements sending a message of type @xmath838 , so that we never run out of elements .",
    "think of @xmath1008 as the set of elements in @xmath841 that ` want ' to send a single invertible message of type @xmath838 .",
    "the above process is repeated for all possible different values of @xmath787 ( with @xmath1005 ) , and each decomposition should be thought of as independent of each other .",
    "analogously , for each @xmath811 with @xmath1006 , @xmath841 is decomposed into pairwise disjoint sets @xmath1011 ( with @xmath769 varying ) ; and , again , those decompositions should be thought of as independent of each other .",
    "based on the above decompositions , we specify for each @xmath936 a ` mosaic piece ' and show how to assemble these pieces into a model of @xmath17",
    ". a mosaic piece is , informally , a collection of the messages that @xmath70 ` wants ' to send .",
    "this collection might contain more than one message of each type ( or zero for that matter ) .",
    "let @xmath936 ; the mosaic piece corresponding to @xmath70 contains :    1 .   a single message labelled @xmath1012 for each bit - string @xmath787 with @xmath1005 if @xmath1013 , where @xmath1012 is the ( unique ) 2-type @xmath838 for which @xmath1014 ; 2 .",
    "@xmath1015 messages labelled @xmath817 for each bit - string @xmath811 with @xmath1006 , where @xmath1015 is the ( unique ) natural number such that @xmath1016 .",
    "note that if @xmath1017 then @xmath1018 , otherwise @xmath1015 exists by the constraints  ( [ e2_c6 ] ) and equation  ( [ tmp2 ] ) .",
    "the mosaic piece corresponding to @xmath70 is depicted in fig .",
    "[ fig : messages ] . here , for legibility",
    ", we have identified the strings @xmath787 of length @xmath546 with the numbers @xmath1019 , and the strings @xmath811 of length @xmath812 for which @xmath912 is a ( non - invertible ) message - type with the numbers @xmath1020 , for suitable @xmath782 , @xmath1021 .",
    "the dashed radial arrows indicate that @xmath70 may or may not send a message of invertible type @xmath1022 ; the solid radial arrows indicate that @xmath70 sends @xmath1023 ( possibly zero ) messages of non - invertible type @xmath912 .",
    "let @xmath68 and define @xmath1034 to be the vector @xmath1035 whose @xmath73th coordinate @xmath1036 records the number of messages in the mosaic piece of @xmath70 containing an outgoing @xmath1037 arrow  i.e .",
    "messages having label @xmath1038 for which @xmath1039 .",
    "clearly ( see fig .",
    "[ fig : messages ] ) , @xmath1040 and , by lemma  [ lem : total_count ] , @xmath1041      * step 1 * ( fixing the 1-types ) for all 1-types @xmath744 and all @xmath936 , set @xmath747 } } } = \\pi$ ] . since 1-types do not contain equality literals such as @xmath739 or @xmath1042 , this is meaningful .",
    "moreover , since the sets @xmath841 are pairwise disjoint , no clashes arise . for",
    "each individual constant @xmath262 , let @xmath1043 . since @xmath16 contains naming formulas @xmath734 and @xmath735 , where @xmath262 and @xmath263 are distinct , it is obvious that the unique names assumption is respected : that is , @xmath1044 for @xmath262 and @xmath263 distinct . therefore , we may , as before , write @xmath262 instead of the more correct @xmath733 , since no confusion arises .",
    "* step 2 * ( fixing the invertible message - types ) we first assign the invertible message - types for all pairs @xmath1045 , where @xmath262 and @xmath263 are distinct individual constants , as dictated by @xmath16 . to see that this is possible , suppose @xmath1046 , where @xmath837 , say . then by lemma  [ tech_lem ]",
    ", @xmath262 will ` want ' to have @xmath787-spectrum @xmath905 , which , by the assumed compatibility of @xmath16 with these constants , implies that @xmath1047 .",
    "that is : the mosaic piece for @xmath262 will send an invertible message of type @xmath838 .",
    "similarly , the mosaic piece for @xmath262 will send an invertible message of type @xmath1048 ; and these two messages may be paired up with each other .",
    "we then put , by the constraints  ( [ e2_c2 ] ) , all other @xmath838-labelled messages and all @xmath1048-labelled messages in one - to - one correspondence , for each invertible message of type @xmath838 .",
    "thus , if @xmath70 sends a @xmath838-labelled message and @xmath172 ` wants to receive it ' ( i.e.  sends a @xmath1048-labelled message ) , we set @xmath776 } } } = \\lambda$ ] . to ensure that each assignment @xmath776}}}$ ] ( @xmath83 ) is valid , we need only check that @xmath70 and @xmath172 are distinct .",
    "but , since @xmath1049 , by the constraints  ( [ e2_c3 ] ) we must have @xmath747 } } } \\neq { { \\ensuremath{\\mathrm{tp}_{{\\ensuremath{\\mathfrak{a}}}}[b]}}}$ ] hence , by construction , @xmath70 and @xmath172 belong to the disjoint sets @xmath1050}}}}$ ] and @xmath1051}}}}$ ] .",
    "moreover , since every element sends at most one invertible message of each type , no conflicts with the present assignment will arise in future assignments .",
    "* step 3 * ( fixing the non - invertible message - types ) start by decomposing each non - empty set @xmath841 into three pairwise disjoint ( possibly empty ) sets @xmath1052 , @xmath1053 and @xmath1054 having at least @xmath1055 elements each , if @xmath1056 , and with the following restriction : if @xmath1057 , for some constant @xmath1058 ( i.e.  @xmath919}}$ ] ) , pick these three sets such that @xmath1059 .",
    "this is possible by our choise of solution of @xmath930 .",
    "let @xmath817 be any non - invertible message type , with @xmath1060 and @xmath1061 being its starting and terminal 1-types .",
    "let @xmath68 be an element that sends @xmath1062 messages of type @xmath817 . clearly , then",
    ", @xmath936 and there is a vector @xmath1063 such that @xmath1064 , hence @xmath1011 is non - empty . as a result , @xmath1065 ) , @xmath1066 is also positive .",
    "this implies that @xmath1067 is non - empty since , clearly , @xmath1068 and hence has been partitioned into three sets @xmath1069 , @xmath1070 and @xmath1071 having at least @xmath1055 elements each .",
    "let us assume for the moment that @xmath70 is not equal to the interpretation of any constant .",
    "we employ the standard ` circular witnessing ' technique of  @xcite .",
    "the non - empty set @xmath841 has been partitioned into @xmath1052 , @xmath1053 and @xmath1054 ; since @xmath936 , let @xmath275 be such that @xmath1072 , @xmath1073 .",
    "now , let @xmath1074 and select @xmath1015 elements @xmath172 from @xmath1075 that have not already been chosen to receive any messages ( invertible or non - invertible ) and set , for each one of those , @xmath776 } } } = \\mu_{\\pi , { \\ensuremath{\\texttt{t}}}}$ ] .",
    "note that there are enough elements in @xmath1075 to choose from , as @xmath70 can send at most @xmath1055 messages ( of invertible or non - invertible type ) .",
    "suppose , on the other hand , @xmath70 is ( the interpretation of ) some constant , say @xmath262 , and that @xmath16 specifies that @xmath262 sends messages of type @xmath911 to @xmath78 other database elements .",
    "then by lemma  [ tech_lem ] , @xmath262 will ` want ' to have @xmath811-spectrum @xmath906 , which , by the assumed compatibility of @xmath16 with these constants , implies that @xmath1076 .",
    "that is : the mosaic piece for @xmath262 will send at least @xmath78 non - invertible messages of type @xmath838 .",
    "now set @xmath1077 } } } = \\mu_{\\pi , { \\ensuremath{\\texttt{t}}}}$ ] for each of the @xmath78 elements as required by @xmath16 , subtract @xmath78 from the value @xmath1015 to take account of the fact that these non - invertible message of type @xmath817 have been dealt with , and proceed as before . since @xmath911 is not an invertible 2-type , we can be sure that it has not already been set during step 2 .",
    "moreover , ` circular witnessing ' ensures that no clashes arise during step 3 .    * step 4 * ( fixing the remaining 2-types ) if @xmath262 and @xmath263 are distinct individual constants for which @xmath1078}}$ ] has not been defined , set @xmath1078 } } = { \\ensuremath{\\mathrm{tp}_{\\delta}[c , d]}}$ ] ; of course , this must a silent type , since all messages sent within the database have been accounted for . taking advantage of guardedness , if @xmath776}}}$ ] has not yet been defined , set it to be the 2-type @xmath1079 \\cup \\",
    "{ \\lnot \\gamma \\mid \\gamma \\text { is a guard - atom not involving } = \\},\\ ] ] where @xmath1080}}}$ ] , @xmath1081}}}$ ] and @xmath1082 $ ] is the result of replacing @xmath10 by @xmath26 in @xmath1083 .",
    "note that , since @xmath1084 are by assumption positive integers , @xmath70 and @xmath172 certainly send some messages and , thus , the constraints  ( [ e2_c4 ] ) and  ( [ e2_c5 ] ) ensure that both @xmath1085 and @xmath1086 are satisfiable .",
    "this completes the definition of @xmath55 and we now show that @xmath1087 . referring to the normal form in lemma  [ lem : gc2_nf ] , notice that none of the above steps violates the conjuncts @xmath1088 furthermore , the conjuncts @xmath1089 are all satisfied taking into account equation  ( [ tmp10 ] ) and the fact that none of the 2-types assigned in step 4 is a message type .",
    "the database @xmath16 is evidently satisfied by the above construction .",
    "now , observe that all the constraints in @xmath930 have the forms @xmath1090 where @xmath10 , @xmath1091 are variables and @xmath262 is a constant .",
    "recall that the size @xmath929 of @xmath930 is exponential in @xmath1092 .",
    "our goal is to find a solution of @xmath930 in @xmath756 .",
    "the following lemma shows that we can transform a system of the above form into an integer programming problem which , in turn , can be regarded as a linear programming problem .",
    "this is important because linear programming is in @xmath1093 , whereas integer programming is in @xmath1094 .",
    "[ papadimitriou ] let @xmath16 , @xmath17 and @xmath930 be as above .",
    "an algorithm exists to determine whether @xmath930 has a solution over @xmath756 in time bounded by a polynomial function of @xmath929 .",
    "let a @xmath14-formula @xmath1095 and @xmath99 be given . by lemma  [ lem : gc2_nf ] , convert @xmath99 to a formula @xmath17 of the form  , and let @xmath27 be the signature of @xmath17 together with additional unary predicates : all the naming predicates for the individual constants in @xmath16 and @xmath736 spare predicates .",
    "if @xmath717 is inconsistent , fail ; otherwise , add all the naming formulas to @xmath717 , and guess a consistent completion @xmath724 .",
    "having fixed @xmath17 , @xmath27 and @xmath16 , compute , for each individual constant @xmath262 , the sets of strings @xmath895 and @xmath896 , and then guess the vectors @xmath1096 , for @xmath898 and @xmath1097 , for @xmath899 . check that these vectors satisfy the conditions   , and that they are consistent with @xmath16 , failing if not .",
    "compute the numbers @xmath914 from @xmath16 . now write the system of equations @xmath930 . determine whether @xmath930 has a solution over @xmath756 . by lemma  [ papadimitriou",
    "] , this can be determined in exponential time .",
    "if @xmath930 has a solution for any of these guesses , then succeed ; otherwise fail . by lemmas  [ ortho ] and  [ antistropho ]",
    ", the above procedure has a successful run ( for some guess ) if and only if @xmath1095 has a finite model .",
    "all guesses involve only a polynomial amount of data , and so may be exhaustively searched in exponential time .",
    "having dealt with the finite satisfiability problem for @xmath11 , we turn now to the corresponding satisfiability problem .",
    "we employ ` extended arithmetic ' , over the set @xmath1098 , where addition and multiplication are extended in the obvious way , i.e.  @xmath1099 , @xmath1100 , for all @xmath1101 , etc .",
    "after all the gruel we have just chomped our way through , theorem  [ thm : maingeneral ] is dessert .",
    "we proceed exactly as in the finite case , except that we seek solutions to @xmath930 over extended arithmetic .",
    "it is evident that , if @xmath762 is a solution of @xmath930 , then so is @xmath1102 .",
    "thus , we may confine attention to solutions over the 2-element set @xmath1103 .",
    "such a system is essentially boolean , so its constraints can be viewed as formulas of propositional logic ; and , with a little care , can be written as horn clauses .",
    "( see @xcite for more details . )",
    "this establishes membership in @xmath0 .",
    "j.  biskup and torsten polle .",
    "decomposition of database classes under path functional dependencies and onto constraints . in _ proc .",
    "foundations of information and knowledge systems , proceedings of first international symposium , ( foiks ) _ , volume 1762 of _ lecture notes in computer science _ , pages 3149 .",
    "springer , 2000 .",
    "diego calvanese .",
    "unrestricted and finite model reasoning in class - based representation formalisms .",
    "phd thesis , dipartimento di informatica e sistemistica , universit di roma la sapienza . in _ in proc . of the 4th int .",
    "conf . on deductive and object - oriented databases ( dood-95 ) , number 1013 in lecture notes in computer science_. citeseer , 1996 .",
    "yevgeny kazakov . a polynomial translation from the two - variable guarded fragment with number restrictions to the guarded fragment . in _ logics in artificial intelligence _ , pages 372384 .",
    "springer , 2004 .",
    "david toman and grant weddell . on path - functional dependencies as first - class citizens in description logicsion between inverse features and path - functional dependencies in description logics . in _ proc .",
    "description logics ( dl ) _ , 2005 .",
    "david toman and grant weddell . on the interaction between inverse features and path - functional dependencies in description logics . in _ proc .",
    "international joint conference on artificial intelligence ( ijcai ) _ , pages 603608 , 2005 ."
  ],
  "abstract_text": [
    "<S> the satisfiability and finite satisfiability problems for the two - variable guarded fragment of first - order logic with counting quantifiers , a database , and path - functional dependencies are both @xmath0-complete . </S>"
  ]
}
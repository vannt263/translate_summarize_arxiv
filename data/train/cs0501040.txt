{
  "article_text": [
    "this note offers a contribution to the study of equational characterizations of the parallel composition operation modulo ( variations on ) the classic notion of bisimulation equivalence  @xcite .",
    "in particular , we provide a finite equational axiomatization of _",
    "split-2 bisimulation equivalence_a notion of bisimulation equivalence based on the assumption that actions have observable beginnings and endings  @xcite  over the recursion , relabelling and restriction free fragment of milner s ccs  @xcite enriched with an auxiliary operator proposed by hennessy in a 1981 preprint entitled _",
    "`` on the relationship between time and interleaving '' _ and its published version  @xcite .",
    "to put this contribution , and its significance , in its research context , we find it appropriate to recall briefly some of the key results in the history of the study of equational axiomatizations of parallel composition in process algebra .",
    "research on equational axiomatizations of behavioural equivalences over process algebras incorporating a notion of parallel composition can be traced at least as far back as the seminal paper  @xcite , where hennessy and milner offered , amongst a wealth of other classic results , a complete equational axiomatization of bisimulation equivalence over the recursion free fragment of ccs .",
    "( see the paper  @xcite for a more detailed historical account highlighting , e.g. , hans beki s early contributions to this field of research . )",
    "the axiomatization given by hennessy and milner in that paper dealt with parallel composition using the so - called _ expansion law_an axiom schema with a countably infinite number of instances that is essentially an equational formulation of the plotkin - style rules describing the operational semantics of parallel composition .",
    "this raised the question of whether the parallel composition operator could be axiomatized in bisimulation semantics by means of a finite collection of equations .",
    "this question was answered positively by bergstra and klop , who gave in  @xcite a finite equational axiomatization of the merge operator in terms of the auxiliary left merge and communication merge operators .",
    "moller clarified the key role played by the expansion law in the axiomatization of parallel composition over ccs by showing in  @xcite that strong bisimulation equivalence is _ not _ finitely based over ccs and pa without the left merge operator .",
    "( the process algebra pa  @xcite contains a parallel composition operator based on pure interleaving without communication and the left merge operator . )",
    "thus auxiliary operators like the ones used by bergstra and klop are indeed necessary to obtain a finite axiomatization of parallel composition .",
    "moreover , moller proved in  @xcite that his negative result holds true for each `` reasonable congruence '' that is included in standard bisimulation equivalence .",
    "in particular , this theorem of moller s applies to split-2 bisimulation equivalence since that equivalence is `` reasonable '' in moller s technical sense .    in his paper",
    "@xcite , hennessy proposed an axiomatization of observation congruence  @xcite ( also known as rooted weak bisimulation equivalence ) and timed congruence ( essentially rooted weak split-2 bisimulation equivalence ) over a ccs - like recursion , relabelling and restriction free process language .",
    "those axiomatizations used an auxiliary operator , denoted @xmath0 by hennessy , that is essentially a combination of bergstra and klop s left and communication merge operators . apart from having soundness problems ( see the reference  @xcite for a general discussion of this problem , and corrected proofs of hennessy s results ) , the proposed axiomatization of observation congruence is _ infinite _ , as it used a variant of the expansion theorem from  @xcite . confirming a conjecture by bergstra and klop in  @xcite , and answering problem  8 in  @xcite , we showed in  @xcite that the language obtained by adding hennessy s merge to ccs does _ not _ afford a finite equational axiomatization modulo bisimulation equivalence .",
    "this is due to the fact that , in strong bisimulation semantics , no finite collection of equations can express the interplay between interleaving and communication that underlies the semantics of hennessy s merge .",
    "technically , this is captured in our proof of the main result in  @xcite by showing that no finite collection of axioms that are valid in bisimulation semantics can prove all of the equations in the following family : @xmath1 in split-2 semantics , however , these equations are not sound , since they express some form of interleaving .",
    "indeed , we prove that , in sharp contrast to the situation in standard bisimulation semantics , the language with hennessy s merge _ can be finitely axiomatized _ modulo split-2 bisimulation equivalence , and its use suffices to yield a finite axiomatization of the parallel composition operation .",
    "this shows that , in contrast to the results offered in  @xcite , `` reasonable congruences '' finer than standard bisimulation equivalence can be finitely axiomatized over ccs using hennessy s merge as the single auxiliary operation ",
    "compare with the non - finite axiomatizability results for these congruences offered in  @xcite .",
    "the paper is organized as follows .",
    "we begin by presenting preliminaries on the language @xmath2the extension of ccs with hennessy s merge operator  and split-2 bisimulation equivalence in sect .",
    "[ sect : hccs ] .",
    "we then offer a finite equational axiom system for split-2 bisimulation equivalence over @xmath2 , and prove that it is sound and complete ( sect .",
    "[ sect : ax ] ) .",
    "this is a companion paper to  @xcite , where the interested readers may find further motivation and more references to related literature .",
    "however , we have striven to make it readable independently of that paper . some familiarity with  @xcite and the basic notions on process algebras and bisimulation",
    "equivalence will be helpful , but is not necessary , in reading this study .",
    "the uninitiated reader is referred to the textbooks  @xcite for extensive motivation and background on process algebras .",
    "precise pointers to material in  @xcite will be given whenever necessary .",
    "the language for processes we shall consider in this paper , henceforth referred to as @xmath2 , is obtained by adding hennessy s merge operator from  @xcite to the recursion , restriction and relabelling free subset of milner s ccs  @xcite .",
    "this language is given by the following grammar :    @xmath3 where @xmath4 ranges over a set of _ actions _",
    "we assume that @xmath5 has the form @xmath6 , where @xmath7 is a given set of _ names _ , @xmath8 is the set of _ complement names _ , and @xmath9 is a distinguished action . following milner  @xcite , the action @xmath9 will result from the synchronized occurrence of the complementary actions @xmath10 and @xmath11 .",
    "we let @xmath12 range over the set of _ visible actions _ @xmath13 . as usual",
    ", we postulate that @xmath14 for each name @xmath15 .",
    "we shall use @xmath16 to range over process terms .",
    "the _ size _ of a term is the number of operation symbols in it . following standard practice in the literature on ccs and related languages , trailing * 0 * s will often be omitted from terms .",
    "the structural operational semantics for the language @xmath2 given by hennessy in sect .",
    "2.1 of  @xcite is based upon the idea that visible actions have a beginning and an ending .",
    "moreover , for each visible action @xmath10 , these distinct events may be observed , and are denoted by @xmath17 and @xmath18 , respectively .",
    "we define @xmath19 in the terminology of  @xcite , this is the set of _ events _ , and we shall use @xmath20 to range over it . as usual , we write @xmath21 for the collection of finite sequences of events .    the operational semantics for the language @xmath2 is given in terms of binary next - state relations @xmath22 , one for each event @xmath23 . as explained in  @xcite , the relations @xmath22 are defined over the set of _ states _",
    "@xmath24 , an extension of @xmath2 obtained by adding new prefixing operations @xmath25 ( @xmath26 ) to the signature for @xmath2 .",
    "more formally , the set of states is given by the following grammar : @xmath27 where @xmath28 ranges over @xmath2 .",
    "intuitively , a state of the form @xmath29 is one in which the execution of action @xmath10 has started , but has not terminated yet .",
    "we shall use @xmath30 to range over the set of states @xmath24 .",
    "@xmath31 @xmath32     @xmath33     @xmath34    [ tab : sos - rules ]    the plotkin style rules for the language @xmath24 are given in table  [ tab : sos - rules ] ; comments on these rules may be found in  ( * ? ? ?",
    "[ def : traces ] for a sequence of events @xmath35 ( @xmath36 ) , and states @xmath37 , we write @xmath38 iff there exists a sequence of transitions @xmath39 if @xmath38 holds for some state @xmath40 , then @xmath41 is a _ trace _ of @xmath42 .",
    "the _ depth _ of a state @xmath42 , written @xmath43 , is the length of the longest trace it affords .    in this paper",
    ", we shall consider the language @xmath2 , and more generally the set of states @xmath24 , modulo split-2 bisimulation equivalence  @xcite .",
    "( the weak variant of this relation is called _",
    "t - observational equivalence _ by hennessy in  @xcite .",
    "later on , this relation has been called _ timed equivalence _ in  @xcite . here",
    "we adopt the terminology introduced by van glabbeek and vaandrager in  @xcite . )",
    "[ def : bisimulation ] _",
    "split-2 bisimulation equivalence _ , denoted by @xmath44 , is the largest symmetric relation over @xmath24 such that whenever @xmath45 and @xmath46 , then there is a transition @xmath47 with @xmath48 .",
    "we shall also sometimes refer to @xmath44 as _",
    "bisimilarity_. if @xmath45 , then we say that @xmath42 and @xmath49 are _ split-2 bisimilar_.    in what follows , we shall mainly be interested in @xmath44 as it applies to the language @xmath2 .",
    "the interested reader is referred to  ( * ? ? ?",
    "2.1 ) for examples of ( in)equivalent terms with respect to @xmath44 . here , we limit ourselves to remarking that @xmath44 is a non - interleaving equivalence .",
    "for example , the reader can easily check that the three terms @xmath50 , @xmath51 and @xmath52 are pairwise inequivalent .",
    "it is well - known that split-2 bisimulation equivalence is indeed an equivalence relation .",
    "moreover , two split-2 bisimulation equivalent states afford the same finite non - empty set of traces , and have therefore the same depth .",
    "the following result can be shown following standard lines ",
    "see , e.g. ,  @xcite .",
    "[ fact : congruence ] split-2 bisimilarity is a congruence over the language @xmath2 .",
    "moreover , for all states @xmath53 , if @xmath54 and @xmath55 , then @xmath56 .",
    "a standard question a process algebraist would ask at this point , and the one that we shall address in the remainder of this paper , is whether split-2 bisimulation equivalence affords a finite equational axiomatization over the language @xmath2 . as we showed in  @xcite , standard bisimulation equivalence is not finitely based over the language @xmath2 . in particular , we argued there that no finite collection of equations over @xmath2 that is sound with respect to bisimulation equivalence can prove all of the equations @xmath57 where @xmath58 denotes * 0 * , @xmath59 denotes @xmath60 , and the terms @xmath61 are defined thus : @xmath62 note , however , that none of the equations @xmath63 holds with respect to @xmath44 .",
    "in fact , for each @xmath64 , the transition @xmath65 can not be matched , modulo @xmath44 , by the term @xmath66 .",
    "indeed , the only state reachable from @xmath66 via an @xmath17-labelled transition is @xmath67 .",
    "this state is not split-2 bisimilar to @xmath68 because it can perform the transition @xmath69 whereas the only initial event @xmath68 can embark in is @xmath18 .",
    "thus the family of equations on which our proof of the main result from  @xcite was based is unsound with respect to split-2 bisimilarity . indeed , as we shall show in what follows , split-2 bisimilarity affords a finite equational axiomatization over the language @xmath2 , assuming that the set of actions @xmath5 is finite .",
    "hence it is possible to finitely axiomatize split-2 bisimilarity over ccs using a single auxiliary binary operation , viz .",
    "hennessy s merge .",
    "let @xmath70 denote the collection of equations in table  [ tab : hccs ] . in those equations the symbols @xmath71 are variables .",
    "equation hm6 is an axiom schema describing one equation per visible action @xmath10 .",
    "note that @xmath70 is finite , if so is @xmath5 .",
    "@xmath72    we write @xmath73 , where @xmath74 are terms in the language @xmath2 that may possibly contain occurrences of variables , if the equation @xmath75 can be proven from those in @xmath70 using the standard rules of equational logic . for example , using axioms a1 , a2 , a4 , m , hm1 , hm2 , hm3 and hm4 , it is possible to derive the equations : @xmath76 that state that , modulo @xmath44 , the language @xmath2 is a commutative monoid with respect to parallel composition with @xmath77 as unit element .",
    "( in light of the provability of ( [ eqn : ass ] ) , we have taken the liberty of omitting parentheses in the second summand of the term at the right - hand side of equation hm6 in table  [ tab : hccs ] . )",
    "moreover , it is easy to see that :    [ fact : nil ] for each @xmath2 term @xmath28 , if @xmath78 , then the equation @xmath79 is provable using a4 , hm4 and m.    all of the equations in the axiom system @xmath70 may be found in the axiomatization of t - observational congruence proposed by hennessy in  @xcite .",
    "however , the abstraction from @xmath9-labelled transitions underlying t - observational congruence renders axiom hm2 above unsound modulo that congruence .",
    "( see the discussion in  ( * ? ? ? * page  854 and sect .",
    "3 ) . ) indeed , to the best of our knowledge , it is yet unknown whether ( t-)observational congruence affords a finite equational axiomatization over ccs , with or without hennessy s merge .    our aim , in the remainder of this note , will be to show that , in the presence of a finite collection of actions @xmath5 , split-2 bisimilarity _ is _ finitely axiomatizable over the language @xmath2 .",
    "this is the import of the following :    [ thm : main - result ] for all @xmath2 terms @xmath74 not containing occurrences of variables , @xmath80 if , and only if , @xmath81 .",
    "we now proceed to prove the above theorem by establishing separately that the axiom system @xmath70 is sound and complete .",
    "[ prop : soundness ] for all @xmath2 terms @xmath74 , if @xmath81 , then @xmath80 .    since @xmath82 is a congruence over the language @xmath2 ( fact  [ fact : congruence ] ) , it suffices only to check that each of the equations in @xmath70 is sound .",
    "the verification is tedious , but not hard , and we omit the details .",
    "[ rem : states ] for later use in the proof of proposition  [ prop : unique - factorization ] , we note that equations ( [ eqn : identity1])([eqn : ass ] ) also hold modulo @xmath44 when the variables @xmath83 are allowed to range over the set of states @xmath24 .",
    "the proof of the completeness of the equations in @xmath70 with respect to @xmath82 follows the general outline of that of  ( * ? ? ?",
    "* theorem  2.1.2 ) . as usual , we rely upon the existence of normal forms for @xmath2 terms . in the remainder of this paper , process terms are considered modulo associativity and commutativity of @xmath84 . in other words",
    ", we do not distinguish @xmath85 and @xmath86 , nor @xmath87 and @xmath88 .",
    "this is justified because , as previously observed , split-2 bisimulation equivalence satisfies axioms a1 , a2 in table  [ tab : hccs ] . in what follows , the symbol @xmath89 will denote equality modulo axioms a1 , a2 .",
    "we use a _ summation _ @xmath90 to denote @xmath91 , where the empty sum represents * 0*.    [ def : nf ] the set @xmath92 of _ normal forms _ is the least subset of @xmath2 such that @xmath93 where @xmath94 are finite index sets , if the following conditions hold :    1 .",
    "the terms @xmath95 ( @xmath96 ) and @xmath97 ( @xmath98 ) are contained in @xmath92 and 2 .",
    "[ tau - closure ] if @xmath99 for some @xmath100 , then @xmath101 for some @xmath98 .",
    "[ prop : nf ] for each @xmath2 term @xmath28 , there is a term @xmath102 such that @xmath103 .",
    "define the relation @xmath104 on @xmath2 terms thus :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath105 if , and only if ,    * @xmath106 or * @xmath107 and the size of @xmath28 is smaller than that of @xmath100 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    note that @xmath104 is a well - founded relation , so we may use @xmath104-induction .",
    "the remainder of the proof consists of a case analysis on the syntactic form of @xmath28 .",
    "we only provide the details for the case @xmath108 .",
    "( the cases @xmath109 , @xmath110 and @xmath111 are trivial ",
    "the last owing to the fact that @xmath112 is an instance of axiom hm3 , and the case @xmath113 follows from the case that is treated in detail using axiom m. )    assume therefore that @xmath108 .",
    "then @xmath114 and the size of @xmath100 is smaller than that of @xmath28 , so @xmath115 .",
    "hence , by the induction hypothesis there exists @xmath116 such that @xmath117 , say @xmath118 by axioms @xmath119 , @xmath120 , @xmath121 and @xmath122 it follows that @xmath123 since @xmath124 for each @xmath96 and @xmath98 , it follows that @xmath125 and hence @xmath126 and @xmath127 . by the induction hypothesis",
    "there are normal forms @xmath128 , @xmath129 such that @xmath130 .",
    "so @xmath70 proves the equation @xmath131 finally , using equation hm6 , it is now a simple matter to add summands to the right - hand side of the above equation in order to meet requirement  [ tau - closure ] in definition  [ def : nf ] .",
    "in fact , let @xmath96 and @xmath132 using a4 , we have that @xmath133 is provable from @xmath70 .",
    "then , using hm6 and the induction hypothesis repeatedly , we can prove the equation @xmath134 using this equation as a rewrite rule from left to right in ( [ eqn : temp ] ) for each @xmath96 produces a term meeting requirement  [ tau - closure ] in definition  [ def : nf ] that is the desired normal form for @xmath135 .",
    "the key to the proof of the promised completeness theorem is an important cancellation result that has its roots in one proven by hennessy for his t - observational equivalence in  @xcite .",
    "[ thm : decomposition ] let @xmath136 be @xmath2 terms , and let @xmath10 be a visible action .",
    "assume that @xmath137 then @xmath138 and @xmath139 .",
    "for the moment , we postpone the proof of this result , and use it to establish the following statement , to the effect that the axiom system @xmath70 is complete with respect to @xmath82 over @xmath2 .",
    "[ thm : completeness ] let @xmath74 be @xmath2 terms such that @xmath80",
    ". then @xmath140 .",
    "by induction on the depth of @xmath28 and @xmath100 .",
    "( recall that , since @xmath141 , the terms @xmath28 and @xmath100 have the same depth . ) in light of proposition  [ prop : nf ] , we may assume without loss of generality that @xmath28 and @xmath100 are contained in @xmath92 .",
    "let @xmath142 we prove that @xmath143 , from which the statement of the theorem follows by symmetry and transitivity . to this end",
    ", we argue that each summand of @xmath100 can be absorbed into @xmath28 using the equations in @xmath70 , i.e. , that    1 .",
    "[ tauabs ] @xmath144 for each @xmath145 , and 2 .",
    "[ actabs ] @xmath146 for each @xmath147 .",
    "we prove these two statements in turn .",
    "* proof of statement  [ tauabs ] .",
    "let @xmath145 . then @xmath148 .",
    "since @xmath138 , there is a term @xmath149 such that @xmath150 and @xmath151 . since @xmath152 , condition  [ tau - closure ] in definition  [ def : nf ] yields that @xmath153 for some @xmath98 . the induction hypothesis together with closure with respect to @xmath9-prefixing now yields that @xmath154 therefore , using a1a3 , we have that @xmath155 which was to be shown . * proof of statement  [ actabs ] .",
    "let @xmath147 .",
    "then @xmath156 .",
    "since @xmath138 , there is a state @xmath42 such that @xmath157 and @xmath158 .",
    "because of the form of @xmath28 , it follows that @xmath159 for some @xmath96 such that @xmath160 . by theorem  [ thm :",
    "decomposition ] , we have that @xmath161 since the depth of all of these terms is smaller than that of @xmath28 , we may apply the induction hypothesis twice to obtain that @xmath162 therefore , using a1a3 and @xmath163 , we have that @xmath164 which was to be shown .",
    "the proof of the theorem is now complete .",
    "to finish the proof of the completeness theorem , and therefore of theorem  [ thm : main - result ] , we are left to show theorem  [ thm : decomposition ] .",
    "our proof of that result relies on a unique decomposition property with respect to parallel composition for states modulo @xmath44 . in order to formulate this decomposition property ,",
    "we shall make use of some notions from  @xcite .",
    "these we now proceed to introduce for the sake of completeness and readability .",
    "[ def : prime ] a state @xmath42 is _ irreducible _ if @xmath165 implies @xmath166 or @xmath167 , for all states @xmath168 .",
    "we say that @xmath42 is _ prime _ if it is irreducible and is not split-2 bisimilar to @xmath77 .    for example",
    ", each state @xmath42 of depth @xmath169 is prime because every state of the form @xmath170 , where @xmath171 and @xmath172 are not split-2 bisimilar to @xmath77 , has depth at least @xmath173 , and thus can not be split-2 bisimilar to @xmath42 .",
    "[ fact : asp - prime ] the state @xmath174 is prime , for each @xmath2 term @xmath28 and action @xmath10 .",
    "since @xmath174 is not split-2 bisimilar to @xmath77 , it suffices only to show that it is irreducible . to this end ,",
    "assume , towards a contradiction , that @xmath175 for some states @xmath176 that are not split-2 bisimilar to @xmath77 .",
    "then , since @xmath177 , we have that @xmath178 and @xmath179 , for some @xmath180 .",
    "but then it follows that @xmath181 whereas the term @xmath174 can not perform two subsequent @xmath18-transitions . we may therefore conclude that such states @xmath171 and @xmath172 can not exist , and hence that the term @xmath174 is irreducible , which was to be shown . the following result is the counterpart for the language @xmath2 of the unique decomposition theorems presented for various languages in , e.g. ,  @xcite .",
    "[ prop : unique - factorization ] each state is split-2 bisimilar to a parallel composition of primes , uniquely determined up to split-2 bisimilarity and the order of the primes .",
    "( we adopt the convention that @xmath77 denotes the empty parallel composition . )",
    "we shall obtain this result as a consequence of a general unique decomposition result , obtained by the fourth author in  @xcite .",
    "let @xmath182}}$ ] denote the set of states modulo split-2 bisimilarity , and , for a state @xmath183 , denote by @xmath184}}$ ] the equivalence class in @xmath182}}$ ] that contains @xmath42 .",
    "by fact  [ fact : congruence ] we can define on @xmath182}}$ ] a binary operation @xmath185 by @xmath186}}{\\ensuremath{\\mathbin{|}}}{\\ensuremath{[t ] } }        = { \\ensuremath{[s{\\ensuremath{\\mathbin{|}}}t ] } }    \\enskip.\\ ] ] by remark  [ rem : states ] , the set @xmath182}}$ ] with the binary operation @xmath185 and the distinguished element @xmath187}}$ ] is a commutative monoid .",
    "next , we define on @xmath182}}$ ] a partial order @xmath188 by @xmath189}}{\\ensuremath{\\mathrel{\\preccurlyeq}}}{\\ensuremath{[s]}}\\    \\text{iff}\\             \\text{there exist $ s''\\in s$ and $ \\sigma\\in e^*$        such that $ s{\\stackrel{\\sigma}{\\longrightarrow}}s''{~{\\underline{\\leftrightarrow}_{\\it 2s}}~}s'$}.\\ ] ] note that @xmath188 is indeed a partial order ( to establish antisymmetry use that transitions decrease depth , and that split-2 bisimilar states have the same depth ) .    for each state @xmath42 , there are a sequence of events @xmath41 and a state @xmath40 such that @xmath190 so @xmath187}}$ ] is the least element of @xmath182}}$ ] with respect to @xmath188 .",
    "furthermore , if @xmath191}}{\\ensuremath{\\mathrel{\\preccurlyeq}}}{\\ensuremath{[s]}}$ ] , then @xmath192 , for some @xmath193 and state @xmath194 .",
    "so , using the sos rules for @xmath24 and fact  [ fact : congruence ] , it follows that @xmath195 and hence @xmath189}}{\\ensuremath{\\mathbin{|}}}{\\ensuremath{[t ] } }         = { \\ensuremath{[s'{\\ensuremath{\\mathbin{|}}}t ] } }         { \\ensuremath{\\mathrel{\\preccurlyeq}}}{\\ensuremath{[s{\\ensuremath{\\mathbin{|}}}t ] } }         = { \\ensuremath{[s]}}{\\ensuremath{\\mathbin{|}}}{\\ensuremath{[t ] } } \\enspace .\\ ] ] thereby , we have now established that @xmath182}}$ ] with @xmath185 , @xmath187}}$ ] and @xmath188 is a positively ordered commutative monoid in the sense of  @xcite .    from the sos rules for @xmath24",
    "it easily follows that this positively ordered commutative monoid is _ precompositional _ ( see  @xcite ) ,",
    "i.e. , that @xmath196}}{\\ensuremath{\\mathrel{\\preccurlyeq}}}{\\ensuremath{[s_1]}}{\\ensuremath{\\mathbin{|}}}{\\ensuremath{[s_2]}}$ ,            then there are              $ { \\ensuremath{[s_1']}}{\\ensuremath{\\mathrel{\\preccurlyeq}}}{\\ensuremath{[s_1]}}$ ,              $ { \\ensuremath{[s_2']}}{\\ensuremath{\\mathrel{\\preccurlyeq}}}{\\ensuremath{[s_2]}}$            s.t.\\              $ { \\ensuremath{[s]}}={\\ensuremath{[s_1']}}{\\ensuremath{\\mathbin{|}}}{\\ensuremath{[s_2']}}$}.\\ ] ] consider the mapping @xmath197}}\\rightarrow\\mathbf{n}$ ] into the positively ordered monoid of natural numbers with addition , @xmath198 and the standard less - than - or - equal relation , defined by @xmath186}}\\mapsto{{\\mathit{depth}}}(s )    \\enskip.\\ ] ] it is straightforward to verify that @xmath199 is a _ stratification _",
    "( see  @xcite ) , i.e. , that    1 .   @xmath200}}{\\ensuremath{\\mathbin{|}}}{\\ensuremath{[t]}}|=|{\\ensuremath{[s]}}|+|{\\ensuremath{[t]}}|$ ] ; and 2 .",
    "if @xmath184}}\\prec{\\ensuremath{[t]}}$ ] , then @xmath200}}|<|{\\ensuremath{[t]}}|$ ] .",
    "we conclude that @xmath182}}$ ] with @xmath185 , @xmath187}}$ ] and @xmath188 is a stratified and precompositional positively ordered commutative monoid , and hence , by theorem  13 in @xcite , it has unique decomposition .",
    "this completes the proof of the proposition . using the above unique decomposition result , we are now in a position to complete the proof of theorem  [ thm : decomposition ] .",
    "thm : decomposition assume that @xmath201 .",
    "using proposition  [ prop : unique - factorization ] , we have that @xmath202 and @xmath203 can be expressed uniquely as parallel compositions of primes .",
    "say that @xmath204 for some @xmath205 and primes @xmath206 ( @xmath207 ) and @xmath97 ( @xmath208 ) in the language @xmath2 .",
    "since @xmath174 and @xmath209 are prime ( fact  [ fact : asp - prime ] ) and @xmath44 is a congruence ( fact  [ fact : congruence ] ) , the unique prime decompositions of @xmath210 and @xmath211 given by proposition  [ prop : unique - factorization ] are @xmath212 respectively . in light of our assumption that @xmath213 , these two prime decompositions coincide by proposition  [ prop : unique - factorization ] .",
    "hence , as for each @xmath208@xmath214 we have that    1 .",
    "@xmath215 , 2 .",
    "@xmath216 and , without loss of generality , 3 .",
    "@xmath217 for each @xmath207 .",
    "it is now immediate to see that @xmath80 and @xmath218 , which was to be shown .",
    "we thank the referees for suggestions that led to improvements in the presentation of the paper . the work reported in this paper",
    "was carried out while luca aceto was on leave at reykjavk university , wan fokkink was at cwi , and anna inglfsdttir was at decode genetics .",
    "they thank these institutions for their hospitality and excellent working conditions .",
    "luca aceto s work was partially supported by the statens naturvidenskabelige forskningsrd ( danish natural science research council ) , project `` the equational logic of parallel processes '' , nr .  21 - 03 - 0342 .",
    "luca aceto . some of my favourite results in classic process algebra . in vladimiro",
    "sassone , editor , _ bulletin of the european association for theoretical computer science _ , volume  81 , pages 89108 .",
    "luca aceto , wan fokkink , anna ingolfsdottir , and bas luttik . with hennessy",
    "s merge has no finite equational axiomatization .",
    "research report rs-03 - 34 , brics , november 2003 . to appear in _ theoretical computer science_.              r.  van glabbeek and f.  vaandrager .",
    "petri net models for algebraic theories of concurrency . in j.  de bakker , a.j .",
    "nijman , and p.c .",
    "treleaven , editors , _ proceedings parle conference , eindhoven , vol .",
    "ii ( parallel languages ) _ , volume 259 of _ lecture notes in computer science _ , pages 224242 .",
    "springer - verlag , 1987 .",
    "bas luttik . a unique decomposition theorem for ordered monoids with applications in process theory . in branislav rovan and peter vojts , editors , _ proceedings of mathematical foundations of computer science 2003 , 28th international symposium , mfcs 2003 , bratislava , slovakia , august 2529 , 2003 _ , volume 2747 of _ lecture notes in computer science _",
    ", pages 562571 .",
    "springer - verlag , 2003 .",
    "f.  moller .",
    "the importance of the left merge operator in process algebras . in m.",
    "paterson , editor , _",
    "proceedings @xmath219 icalp , warwick _ , volume 443 of _ lecture notes in computer science _ , pages 752764 .",
    "springer - verlag , july 1990 .",
    "f.  moller .",
    "the nonexistence of finite axiomatisations for ccs congruences . in",
    "_ proceedings @xmath220 annual symposium on logic in computer science , philadelphia , usa _ , pages 142153 .",
    "ieee computer society press , 1990 .",
    "d.m.r . park .",
    "concurrency and automata on infinite sequences . in p.  deussen , editor , _ @xmath220 gi conference , karlsruhe , germany _ ,",
    "volume 104 of _ lecture notes in computer science _ , pages 167183 .",
    "springer - verlag , 1981 ."
  ],
  "abstract_text": [
    "<S> this note shows that split-2 bisimulation equivalence ( also known as timed equivalence ) affords a finite equational axiomatization over the process algebra obtained by adding an auxiliary operation proposed by hennessy in 1981 to the recursion , relabelling and restriction free fragment of milner s calculus of communicating systems . </S>",
    "<S> thus the addition of a single binary operation , viz .  </S>",
    "<S> hennessy s merge , is sufficient for the finite equational axiomatization of parallel composition modulo this non - interleaving equivalence . </S>",
    "<S> this result is in sharp contrast to a theorem previously obtained by the same authors to the effect that the same language is not finitely based modulo bisimulation equivalence . </S>"
  ]
}
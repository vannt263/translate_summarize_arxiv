{
  "article_text": [
    "over the past two decades , _ fair resource allocation _ problems have received considerable attention in many application areas , including internet congestion control @xcite , rate control in software defined networks @xcite , scheduling in wireless networks @xcite , multi - resource allocation and scheduling in datacenters @xcite , and a variety of applications in operations research , economics , and game theory @xcite . in",
    "most of these applications , positive linear ( packing ) constraints arise as a natural model of the allowable allocations .    in this paper",
    ", we focus on the problem of finding an _ @xmath0-fair _ vector on the set determined by packing constraints @xmath17 where all @xmath18 . is commonly assumed to be a 0 - 1 matrix @xcite , important applications ( such as , e.g. , multi - resource allocation in datacenters ) are modeled by a more general constraint matrix @xmath9 with arbitrary non - negative elements @xcite . ] we refer to this problem as @xmath13fair packing . for a vector of positive weights @xmath19 and @xmath20 , an allocation vector @xmath21 of size @xmath22 is weighted @xmath0-fair , if for any alternative feasible vector @xmath23 : @xmath24 @xcite . for a compact and convex feasible region",
    ", @xmath21 can be equivalently defined as a vector that solves the problem of maximizing @xmath25 @xcite , where : @xmath26 @xmath0-fairness provides a trade - off between efficiency ( sum of allocated resources ) and fairness ( minimum allocated resource ) as a function of @xmath0 : the higher the @xmath0 , the better the fairness guarantees and the lower the efficiency @xcite .",
    "important special cases are proportional fairness ( @xmath5 ) and max - min fairness ( @xmath16 ) . when @xmath27 , we have the  unfair \" case of linear optimization",
    ". distributed algorithms for @xmath13fair packing are of particular interest , as many applications are inherently distributed ( such as , e.g. , network congestion control ) , while in others parallelization is highly desirable due to the large problem size ( as in , e.g. , resource allocation in datacenters ) .",
    "we adopt the model of distributed computation commonly used in the design of packing linear programming ( lp ) algorithms @xcite and which generalizes the model from network congestion control @xcite . in this model",
    ", an agent @xmath28 controls the variable @xmath29 and has information about : ( i ) the @xmath30 column of the @xmath31 constraint matrix @xmath9 , ( ii ) the weight @xmath8 , ( iii ) upper bounds on the global problem parameters @xmath32 , and @xmath33 , where @xmath34 , and @xmath35 , and ( iv ) in each round , the relative slack of each constraint @xmath36 in which @xmath29 takes part .",
    "distributed algorithms for @xmath13fair resource allocations have been most widely studied in the network congestion control literature , using a control - theoretic approach @xcite .",
    "such an approach yields continuous - time algorithms that converge after `` finite '' time ; however , the convergence time of these algorithms as a function of the input size is poorly understood .",
    "some other distributed pseudo - polynomial - time approximation algorithms that can address @xmath0-fair packing are described in table  [ table : prev ] .",
    "these algorithms all have convergence times that are at least linear in the parameters describing the problem .",
    "no previous work has given truly fast ( poly - log iterations ) distributed algorithms for the general case of @xmath0-fair packing . only for the unfair @xmath37 case ( packing lps ) ,",
    "are such algorithms known @xcite .",
    "[ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    _ we provide the first efficient , distributed , and stateless algorithm for weighted @xmath0-fair packing _ , namely , for the problem @xmath38 , where distributed agents update the values of @xmath29 s asynchronously and react only to the current state of the constraints .",
    "we assume that all non - zero entries @xmath39 of matrix @xmath9 satisfy @xmath40 .",
    "considering such a normalized form of the problem is without loss of generality ( see appendix [ appendix : scaling ] in the full version of the paper ) .",
    "the approximation provided by the algorithm , to which we refer as the @xmath12-approximation , is ( i ) @xmath41-multiplicative for @xmath3 , and ( ii ) @xmath42-additive can not be avoided here , as additive approximation is not invariant to the scaling of the objective . ] for @xmath5 , where @xmath43 .",
    "the main results are summarized in the following theorem , where , to unify the statement of the results , we treat @xmath0 as a constant that is either equal to 1 or bounded away from 0 and 1 , and we also loosen the bound in terms of @xmath44 and @xmath33 . for a more detailed statement ,",
    "see theorems [ thm : convergence - alpha<1 ]  [ thm : convergence - alpha>1 ] .",
    "( main result ) for a given weighted @xmath0-fair packing problem @xmath45 , where @xmath46 is given by ( [ eq : f - alpha ] ) , there exists a stateless and distributed algorithm ( @xmath0-fairpsolver ) that computes an @xmath12-approximate solution in @xmath47 rounds .",
    "_ to the best of our knowledge , for any constant approximation parameter @xmath12 , our algorithm is the first distributed algorithm for weighted @xmath0-fair packing problems with a poly - logarithmic convergence time . _",
    "the algorithm is _",
    "stateless _ according to the definition given by awerbuch and khandekar @xcite",
    ": it starts from any initial state , the agents update the variables @xmath29 in a cooperative but uncoordinated manner , reacting only to the current state of the constraints that they observe , and without access to a global clock .",
    "statelessness implies various desirable properties of a distributed algorithm , such as : asynchronous updates , self - stabilization , and incremental and local adjustments @xcite .",
    "we also obtain the following structural results that characterize @xmath13fair packing allocations as a function of the value of @xmath0 :    * we derive a lower bound on the minimum coordinate of the @xmath13fair packing allocation as a function of @xmath0 and the problem parameters ( lemma [ lemma : lower - bound ] ) .",
    "this bound deepens our understanding of how the fairness ( a minimum allocated value ) changes with @xmath0 .",
    "* we prove that for @xmath48 , @xmath13fair packing can be @xmath49approximated by any @xmath11approximation packing lp solver ( lemma [ lemma : lp - close - to - small - alpha - fair ] ) .",
    "this result allows us to focus on the @xmath50 cases .",
    "* we show that for @xmath51 , @xmath13fair allocation is @xmath11approximated by a @xmath52fair allocation returned by our algorithm ( lemmas [ lemma : alpha - close - to-1-below ] and [ lemma : alpha - close - to-1-above ] ) . *",
    "we show that for @xmath53 , the @xmath13fair packing allocation @xmath21 and the max - min fair allocation @xmath54 are @xmath12-close to each other : @xmath55 element - wise .",
    "this result is especially interesting as ( i ) max - min fair packing is not a convex problem , but rather a multi - objective problem ( see , e.g. , @xcite ) and ( ii ) the result yields the first convex relaxation of max - min fair allocation problems with a @xmath56 gap .",
    "we now overview some of the main technical details of @xmath0-fairpsolver . in doing so , we point out connections to the two main bodies of previous work , from packing lps@xcite and network congestion control @xcite .",
    "we also outline the new algorithmic ideas and proofs that were needed to obtain the results .",
    "[ [ the - algorithm - and - kkt - conditions . ] ] the algorithm and kkt conditions .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the algorithm maintains primal and dual feasible solutions and updates each primal variable @xmath29 whenever a karush - kuhn - tucker ( kkt ) condition @xmath57 is not _",
    "approximately _ satisfied . in previous work ,",
    "relevant update rules include : @xcite ( for @xmath58 ) , where the update of each variable @xmath29 is proportional to the difference @xmath59 , and @xcite ( for @xmath37 ) , where each @xmath29 is updated by a multiplicative factor @xmath60 , whenever @xmath57 is not approximately satisfied . for our techniques",
    "( addressing a general @xmath0 ) such rules do not suffice and we introduce the following modifications : ( i ) in the @xmath61 case we use multiplicative updates by factors @xmath62 and @xmath63 , where @xmath64 and ( ii ) we use additional threshold values @xmath65 to make sure that @xmath29 s do not become too small .",
    "these thresholds guarantee that we maintain a feasible solution , but they significantly complicate ( compared to the linear case ) the argument that each step makes a significant progress .    [",
    "[ dual - variables . ] ] dual variables .",
    "+ + + + + + + + + + + + + + +    in @xmath0-fairpsolver , a dual variable @xmath66 is an exponential function of the @xmath67 constraint s relative slack : @xmath68 , where @xmath69 and @xmath70 are functions of global input parameters @xmath71 and @xmath33 . packing lp algorithms @xcite use similar dual variables with @xmath72 .",
    "our work requires choosing @xmath69 to be a function of @xmath73 rather than a constant .",
    "[ [ convergence - argument .",
    "] ] convergence argument .",
    "+ + + + + + + + + + + + + + + + + + + + +    the convergence analysis of @xmath0-fairpsolver relies on the appropriately chosen concave potential function that is bounded below and above for @xmath74 $ ] , @xmath75 , and that increases with every primal update .",
    "the algorithm can also be interpreted as a gradient ascent on a regularized objective function ( the potential function ) , using a generalized entropy regularizer ( see @xcite ) .",
    "a similar potential function was used in many works on packing and covering linear programs , such as , e.g. , in @xcite and ( implicitly ) in @xcite . the lyapunov function from @xcite is also equivalent to this potential function when @xmath68 , @xmath76 .",
    "as in these works , the main idea in the analysis is to show that whenever a solution @xmath23 is not  close \" to the optimal one , the potential function increases substantially .",
    "however , our work requires several new ideas in the convergence proofs , the most notable being _",
    "stationary rounds_. a stationary round is roughly a time when the variables @xmath29 do not change much and are close to the optimum .",
    "poly - logarithmic convergence time is then obtained by showing that : ( i ) there is at most a poly - logarithmic number of non - stationary rounds where the potential function increases additively and the increase is `` large enough '' , and ( ii ) in all the remaining non - stationary rounds , the potential function increases multiplicatively .",
    "our use of stationary rounds is new , as is the use of lagrangian duality and all the arguments that follow .",
    ".comparison among distributed algorithms for @xmath13fair packing . [ cols=\"^,^,^,^\",options=\"header \" , ]     [ table : prev ]    [ [ relationship - to - previous - work . ] ] relationship to previous work .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    very little progress has been made in the design of efficient distributed algorithms for the general class of @xmath0-fair objectives .",
    "classical work on distributed rate control algorithms in the networking literature uses a control - theoretic approach to optimize @xmath0-fair objectives .",
    "while such an approach has been extensively studied and applied to various network settings @xcite , it has never been proven to have polynomial convergence time ( and it is unclear whether such a result can be established ) .",
    "since @xmath0-fair objectives are concave , their optimization over a region determined by linear constraints is solvable in polynomial time in a centralized setting through convex programming ( see , e.g. , @xcite ) .",
    "distributed gradient methods for network utility maximization problems , such as e.g. , @xcite summarized in table [ table : prev ] , can be employed to address the problem of @xmath0-fair packing . however , the convergence times of these algorithms depend on the dual gradient s lipschitz constant to produce good approximations .",
    "while @xcite provide a better dependence on the accuracy @xmath12 than our work , the dependence on the dual gradient s lipschitz constant , in general , leads to at least linear convergence time as a function of @xmath22 , @xmath77 , and @xmath33 .    as mentioned before , some special cases have been addressed , particularly for max - min fairness ( @xmath16 ) and for packing lps ( @xmath27 ) .",
    "relevant work on max - min fairness includes @xcite , but none of these works have poly - logarithmic convergence time .",
    "there is a long history of interesting work on packing lps in both centralized and distributed settings , e.g. , @xcite .",
    "only a few of these works are stateless , including the packing lp algorithm of awerbuch and khandekar @xcite , flow control algorithm of garg and young @xcite , and the algorithm of awerbuch , azar , and khandekar @xcite for the special case of load balancing in bipartite graphs .",
    "additionally , the packing lp algorithm of allen - zhu and orecchia @xcite is `` semi - stateless '' ; the lacking property to make it stateless is that it requires synchronous updates .",
    "the @xmath58 case of @xmath0-fair packing problems is equivalent to the problem of finding an equilibrium allocation in eisenberg - gale markets with leontief utilities ( see @xcite ) .",
    "similar to the aforementioned algorithms , the algorithm from @xcite converges in time linear in @xmath78 but also ( at least ) linear in the input size ( see table 1 ) .    in terms of the techniques , closest to our work",
    "is the work by awerbuch and khandekar @xcite and we now highlight the differences compared to this work . _ some preliminaries _ of the convergence proof follow closely those from @xcite : mainly , lemmas [ lemma : feasibility ] , [ lemma : approx - comp - slack ] , and [ lemma : potential - increase ] use similar arguments as corresponding lemmas in @xcite .",
    "some parts of the lemmas lower - bounding the potential increase in @xmath61 , @xmath5 , and @xmath79 cases ( lemmas [ lemma : potential - increase - alpha<1 ] , [ lemma : potential - increase - proportional ] , and [ lemma : potential - increase - alpha>1 ] ) use similar arguments as @xcite , however , even those parts require additional results due to the existence of lower thresholds @xmath65 .",
    "the similarity ends here , as the main convergence arguments are different than those used in @xcite .",
    "in particular , the convergence argument from @xcite relying on stationary intervals can not be applied in the setting of @xmath13fair objectives .",
    "more details about why this argument can not be applied and where it fails are provided in section [ section : convergence ] .",
    "as already mentioned , we rely on the appropriately chosen definition of a stationary round . to show that in a stationary round a solution @xmath23 is @xmath11approximate , we use lagrangian duality and bound the duality gap through an intricate case analysis .",
    "we remark that such an argument could not have been used in @xcite , since in the packing lp case there is no guarantee that the solution @xmath80 is dual - feasible .",
    "[ [ organization - of - the - paper . ] ] organization of the paper .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    the rest of the paper is organized as follows .",
    "section [ section : prelims ] provides the background .",
    "section [ section : algorithm ] describes the algorithm , and section [ section : convergence ] provides illustrates the convergence analysis and structural results .",
    "section [ section : conclusion ] concludes the paper .",
    "we conclude in section [ section : conclusion ] .",
    "the omitted technical details can be found in the full version of the paper .",
    "[ [ weighted - alpha - fair - packing . ] ] weighted @xmath0-fair packing .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    consider the following optimization problem with positive linear ( packing ) constraints : @xmath81 where @xmath46 is given by ( [ eq : f - alpha ] ) , @xmath82 is the vector of variables , @xmath9 is an @xmath31 matrix with non - negative elements , and @xmath83 is a vector with strictly positive , @xmath84 , then trivially @xmath85 , for all @xmath28 such that @xmath86 . ] elements .",
    "we refer to @xmath87 as the weighted @xmath0-fair packing .",
    "the following definition and lemma introduced by mo and walrand @xcite characterize weighted @xmath0-fair allocations .",
    "in the rest of the paper , we will use the terms weighted @xmath0-fair and @xmath0-fair interchangeably .    _",
    "let @xmath88 be a vector with positive entries and @xmath89 .",
    "a vector @xmath90 is weighted @xmath0-fair , if it is feasible and for any other feasible vector @xmath23 : @xmath91    _ @xcite _ a vector @xmath21 solves @xmath87 for functions @xmath92 if and only if it is weighted @xmath0-fair .",
    "notice in @xmath87 that since @xmath93 , @xmath76 , and the partial derivative of the objective with respect to any of the variables @xmath29 goes to @xmath94 as @xmath95 , the optimal solution must lie in the positive orthant .",
    "moreover , since the objective is strictly concave and maximized over a convex region , the optimal solution is unique and @xmath87 satisfies strong duality ( see , e.g. , @xcite ) .",
    "the same observations are true for the scaled version of the problem denoted by @xmath96 and introduced in the following subsection .",
    "[ [ normalized - form . ] ] normalized form .",
    "+ + + + + + + + + + + + + + + +    we consider the weighted @xmath0-fair packing problem in the normalized form : @xmath97 where @xmath98 , @xmath99 is defined by ( [ eq : f - alpha ] ) , @xmath100 is a vector of positive weights , @xmath82 is the vector of variables , @xmath9 is an @xmath31 matrix with non - negative entries , and @xmath101 is a size-@xmath77 vector of 1 s .",
    "we let @xmath33 denote the maximum element of the constraint matrix @xmath9 , and assume that every entry @xmath39 of @xmath9 is non - negative , and moreover , that @xmath40 whenever @xmath86 .",
    "the maximum weight is denoted by @xmath102 and the minimum weight is denoted by @xmath103 .",
    "the sum of the weights is denoted by @xmath104 and the ratio @xmath105 by @xmath106 .",
    "we remark that considering problem @xmath87 in the normalized form @xmath96 is without loss of generality : any problem @xmath87 can be scaled to this form by ( i ) dividing both sides of each inequality @xmath36 by @xmath107 and ( ii ) working with scaled variables @xmath108 , where @xmath109 .",
    "moreover , such scaling preserves the approximation ( [ appendix : scaling ] ) .",
    "[ [ section : lower - bound - duality - gap ] ] kkt conditions and duality gap + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we will denote the lagrange multipliers for @xmath96 as @xmath110 and refer to them as `` dual variables '' .",
    "the kkt conditions for @xmath96 are ( see appendix [ appendix : primal - dual - duality - gap ] ) : @xmath111 y_i \\geq 0 , \\quad\\forall i\\in\\{1, ...",
    ",m\\ } \\quad & \\text{(dual feasibility)}\\tag{k2}\\label{eq : k2}\\\\[-3pt ] y_i\\cdot\\big({\\mathop{\\textstyle\\sum}}_{j=1}^m a_{ij } x_j - 1\\big ) = 0 , \\quad\\forall i\\in\\{1, ...",
    ",m\\}\\quad & \\text{(complementary slackness)}\\tag{k3}\\label{eq : k3}\\\\[-4pt ] { x_j}^\\alpha{\\mathop{\\textstyle\\sum}}_{i=1}^m y_i a_{ij } = w_j , \\quad \\forall j\\in \\{1, ... ,m\\}\\quad & \\text{(gradient conditions)}\\tag{k4}\\label{eq : k4}\\end{aligned}\\ ] ]    the duality gap for @xmath3 is ( see appendix [ appendix : primal - dual - duality - gap ] ) : @xmath112 where @xmath113 , while for @xmath114 : @xmath115    [ [ model - of - distributed - computation ] ] model of distributed computation + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we adopt the same model of distributed computation as @xcite , described as follows .",
    "we assume that for each @xmath116 , there is an agent controlling the variable @xmath29 .",
    "agent @xmath28 is assumed to have information about the following problem parameters : ( i ) the @xmath30 column of @xmath9 , ( ii ) the weight @xmath8 , and ( iii ) ( an upper bound on ) @xmath32 , and @xmath33 . in each round ,",
    "agent @xmath28 collects the relative slack , agent @xmath28 would need to have information about @xmath117 . ]",
    "@xmath118 of all constraints @xmath36 for which @xmath119 .",
    "we remark that this model of distributed computation is a generalization of the model considered in network congestion control problems @xcite where a variable @xmath29 corresponds to the rate of node @xmath28 , @xmath9 is a 0 - 1 routing matrix , such that @xmath120 if and only if a node @xmath28 sends flow over link @xmath36 , and @xmath10 is the vector of link capacities . under this model ,",
    "the knowledge about the relative slack of each constraint corresponds to each node collecting ( a function of ) congestion on each link that it utilizes .",
    "such a model was used in network utility maximization problems with @xmath0-fair objectives @xcite and general strongly - concave objectives @xcite .",
    "the pseudocode for the @xmath0-fairpsolver algorithm that is run at each node @xmath28 is provided in fig  1 .",
    "the basic intuition is that the algorithm keeps kkt conditions ( [ eq : k1 ] ) and ( [ eq : k2 ] ) satisfied and works towards ( approximately ) satisfying the remaining two kkt conditions ( [ eq : k3 ] ) and ( [ eq : k4 ] ) to minimize the duality gap .",
    "the algorithm can run in the distributed setting described in section [ section : prelims ] . in each round",
    ", an agent @xmath28 updates the value of @xmath29 based on the relative slack of all the constraints in which @xmath28 takes part , as long as the kkt condition ( [ eq : k4 ] ) of agent @xmath28 is not approximately satisfied .",
    "the updates need not be synchronous : we will require that all agents make updates at the same speed , but without access to a global clock .    to allow for self - stabilization and dynamic changes",
    ", the algorithm runs forever at all the agents , which is a standard requirement for self - stabilizing algorithms ( see , e.g. , @xcite ) .",
    "the convergence of the algorithm is measured as the number of rounds between the round in which the algorithm starts from some initial solution and the round in which it reaches an @xmath11approximate solution , assuming that there are no hard reset events or node / constraint insertions / deletions in between .    without loss of generality , we assume that the input parameter @xmath12 that determines the approximation quality satisfies @xmath121 for any @xmath0 , and @xmath122 for @xmath61",
    ". the parameters @xmath123 , @xmath124 , and @xmath125 are set as follows .",
    "for technical reasons ( mainly due to reinforcing dominant multiplicative updates of the variables @xmath29 ) , we set the values of the lower thresholds @xmath65 below the actual lower bound of the optimal solution that we derive in lemma [ lemma : lower - bound ] : @xmath126    we denote @xmath127 , @xmath128 . the constant @xmath69 that multiplies the exponent in the dual variables @xmath66",
    "is chosen as @xmath129 .",
    "because @xmath65 only depends on @xmath8 and on global parameters , we also have @xmath130 , @xmath75 . the parameter @xmath70 that appears in the exponent of the @xmath66 s",
    "is chosen as @xmath131 .",
    "the `` absolute error '' of ( [ eq : k4 ] ) @xmath132 is set to @xmath133 . for @xmath134 ,",
    "we set @xmath135 , where the choice of @xmath136 is described below . for @xmath137 , we set @xmath138 , @xmath139 .",
    "similar to @xcite , we choose the value of @xmath136 so that if we set @xmath140 , in any round the value of each @xmath141 changes by a multiplicative factor of at most @xmath142 .",
    "since the maximum increase over any @xmath29 in each iteration is by a factor @xmath143 , and @xmath23 is feasible in each round ( see lemma [ lemma : feasibility ] ) , we have that @xmath144 , and therefore , the maximum increase in each @xmath66 is by a factor of @xmath145 .",
    "a similar argument holds for the maximum decrease .",
    "hence , we choose @xmath136 so that : @xmath146 and it suffices to set : @xmath147    * remark : * in the @xmath61 cases , since @xmath148 , the maximum decrease in @xmath149 is by a factor @xmath150 , @xmath75 .",
    "in this section , we analyze the convergence time of @xmath0-fairpsolver .",
    "we first state our main theorems and provide some general results that hold for all @xmath2 .",
    "we show that starting from an arbitrary solution , the algorithm reaches a feasible solution within poly - logarithmic ( in the input size ) number of rounds , and maintains a feasible solution forever after . similar to @xcite",
    ", we use a concave potential function that , for feasible @xmath23 , is bounded below and above and increases with any algorithm update .",
    "then , we analyze the convergence time separately for three cases : @xmath61 , @xmath5 , and @xmath79 . with an appropriate definition of a _ stationary round _ for each of the three cases ,",
    "we show that in every stationary round , @xmath23 approximates `` well '' the optimal solution by bounding the duality gap . on the other hand , for any non - stationary round",
    ", we show that the potential increases substantially .",
    "this large increase in the potential then leads to the conclusion that there can not be too many non - stationary rounds , thus bounding the overall convergence time .",
    "then , we sketch the proof of theorem [ thm : convergence - alpha>1 ] ( @xmath79 ) , while we defer the full proofs of the three theorems to the full version of this paper . the main proof idea in all the cases",
    "is as follows . with an appropriate definition of a _ stationary round _ for each of the three cases @xmath61 , @xmath5 , and @xmath79 , we show that in every stationary round , @xmath23 approximates `` well '' the optimal solution by bounding the duality gap . on the other hand , for any non - stationary round",
    ", we show that the potential increases substantially .",
    "this large increase in the potential leads to the conclusion that there can not be too many non - stationary rounds , thus bounding the overall convergence time .",
    "we make a few remarks here .",
    "first , we require that @xmath0 be bounded away from zero .",
    "this requirement is without loss of generality because we show that when @xmath48 , any @xmath11approximation lp provides a @xmath151approximate solution to @xmath96 ( lemma [ lemma : lp - close - to - small - alpha - fair ] ) .",
    "thus , when @xmath48 we can switch to the algorithm of @xcite , and when @xmath50 , the convergence time remains poly - logarithmic in the input size and polynomial in @xmath78 .",
    "second , the assumption that @xmath122 in the @xmath61 case is also without loss of generality , because we show that when @xmath0 is close to 1 ( roughly , @xmath152 ) , we can approximate @xmath96 by switching to the @xmath58 case of the algorithm ( lemma [ lemma : alpha - close - to-1-below ] ) . finally , when @xmath153 , the algorithm achieves an @xmath11approximation in time @xmath154 .",
    "we believe that a polynomial dependence on @xmath0 is difficult to avoid in this setting , because by increasing @xmath0 , the gradient of the @xmath0-fair utilities @xmath155 blows up on the interval @xmath156 : as @xmath0 increases , @xmath157 quickly starts approaching a step function that is equal to @xmath158 on the interval @xmath159 $ ] and equal to 0 on the interval @xmath160 $ ] . to characterize the behavior of @xmath13fair allocations as @xmath0 becomes large ,",
    "we show that when @xmath161 , all the coordinates of the @xmath13fair vector are within a @xmath56 multiplicative factor of the corresponding coordinates of the max - min fair vector ( lemma [ lemma : mmf - alpha - fair ] ) .",
    "finally , we note that the main convergence argument from @xcite that uses an appropriate definition of _ stationary intervals _ does not extend to our setting . the proof from @xcite `` breaks '' in the part that shows that the solution is @xmath11approximate throughout any stationary interval , stated as lemma 3.7 in @xcite .",
    "the proof of lemma 3.7 in @xcite is by contradiction : assuming that the solution is not @xmath11approximate , the proof proceeds by showing that at least one of the variables would increase in each round of the stationary interval , thus eventually making the solution infeasible and contradicting one of the preliminary lemmas . for @xmath162 , unlike the linear objective in @xcite , @xmath0-fair objectives are negative , and the assumption that the solution is not @xmath11approximate does not lead to any conclusive information . for @xmath61 , adapting the proof of lemma 3.7 from @xcite leads to the conclusion that for at least one @xmath28 , in each round @xmath163 of the stationary interval @xmath164 , where @xmath21 is the optimal solution , and @xmath165 is the solution at round @xmath163 . in @xcite , where @xmath37 , this implies that @xmath29 increases in each round of the stationary interval , while in our setting ( @xmath89 ) it is not possible to draw such a conclusion .    [ [ main - results . ] ] main results .",
    "+ + + + + + + + + + + + +    our main results are summarized in the following three theorems .",
    "the objective is denoted by @xmath166 , @xmath165 denotes the solution at the beginning of round @xmath163 , and @xmath21 denotes the optimal solution .",
    "[ thm : convergence - alpha<1 ] ( convergence for @xmath137 ) @xmath0-fairpsolver solves @xmath96 approximately for @xmath137 in time that is polynomial in @xmath167 .",
    "in particular , after at most @xmath168 rounds , there exists at least one round @xmath163 such that @xmath169 .",
    "moreover , the total number of rounds @xmath170 in which @xmath171 is also bounded by ( [ eq : thm - alpha<1-convergence - time ] ) .",
    "[ thm : convergence - alpha=1 ] ( convergence for @xmath5 ) @xmath0-fairpsolver solves @xmath172 approximately in time that is polynomial in @xmath173 .",
    "in particular , after at most @xmath174 rounds , there exists at least one round @xmath163 such that @xmath175 .",
    "moreover , the total number of rounds @xmath170 in which @xmath176 is also bounded by ( [ eq : alpha=1-conv - time - bound ] ) .",
    "[ thm : convergence - alpha>1 ] ( convergence for @xmath79 ) @xmath0-fairpsolver solves @xmath96 approximately for @xmath153 in time that is polynomial in @xmath177 .",
    "in particular , after at most : @xmath178 rounds , there exists at least one round @xmath163 such that @xmath179 .",
    "moreover , the total number of rounds @xmath170 in which @xmath180 is also bounded by ( [ eq : thm - alpha>1-convergence - time ] ) .",
    "proofs of theorem [ thm : convergence - alpha<1 ] and theorem [ thm : convergence - alpha=1 ] are provided in the full version of the paper .",
    "we sketch the proof of theorem [ thm : convergence - alpha>1 ] in section [ section : alpha>1 ] .",
    "[ [ feasibility - and - approximate - complementary - slackness . ] ] feasibility and approximate complementary slackness .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the following three lemmas are preliminaries for the convergence time analysis .",
    "lemma [ lemma : feasibility ] shows that starting from a feasible solution , the algorithm always maintains a feasible solution .",
    "lemma [ lemma : self - stabilization ] shows that any violated constraint becomes feasible within poly - logarithmic number of rounds , and remains feasible forever after .",
    "combined with lemma [ lemma : feasibility ] , lemma [ lemma : self - stabilization ] allows us to focus only on the rounds with feasible solutions @xmath23 .",
    "lemma [ lemma : approx - comp - slack ] shows that after a poly - logarithmic number of rounds , approximate complementary slackness ( kkt condition ( [ eq : k3 ] ) ) holds in an aggregate sense : @xmath181 .",
    "[ lemma : feasibility ] if the algorithm starts from a feasible solution , then the algorithm maintains a feasible solution @xmath23 : @xmath182 , @xmath75 and @xmath144 , @xmath76 , in each round .    by the statement of the lemma ,",
    "the solution is feasible initially . from the way that the algorithm makes updates to the variables",
    "@xmath29 , it is always true that @xmath183 , @xmath75 .",
    "now assume that @xmath23 becomes infeasible in some round , and let @xmath184 denote the ( feasible ) solution before that round , @xmath185 denote the ( infeasible ) solution after the round .",
    "we have : @xmath186 for this to be true , @xmath23 must have increased over at least one coordinate @xmath28 such that @xmath187 .",
    "for such a change to be triggered by the algorithm , it must also be true that : @xmath188 since , by the choice of @xmath138 , this term can increase by a factor of at most @xmath189 , it follows that : @xmath190 this further implies : @xmath191 and since whenever @xmath187 we also have @xmath192 , we get : @xmath193 on the other hand , since @xmath194 , @xmath195 , and @xmath196 : @xmath197 which contradicts ( [ eq : feasibility - less - that - wj ] ) .",
    "[ lemma : self - stabilization ] if for any @xmath36 : @xmath198 , then after at most @xmath199 rounds , it is always true that @xmath200 .",
    "suppose that @xmath198 for some @xmath36 .",
    "then @xmath201 , and for every @xmath29 with @xmath86 : @xmath202 and therefore , none of the variables that appear in @xmath36 increases .",
    "since @xmath198 , there exists at least one @xmath203 with @xmath204 such that @xmath205 . for each such @xmath203 , since @xmath206 : @xmath207 and therefore , @xmath203 decreases ( by a factor @xmath63 ) . as @xmath208 , after at most @xmath209 rounds in which @xmath198 , we must have @xmath210 , and therefore , @xmath200 .    using the same arguments as in the proof of lemma [ lemma : feasibility ] ,",
    "the constraint @xmath36 never gets violated again .",
    "[ lemma : approx - comp - slack ] if the algorithm starts from a feasible solution , then after at most @xmath211 rounds , it is always true that :    1 .",
    "there exists at least one approximately tight constraint : @xmath212 , 2 .",
    "@xmath213 , and 3 .",
    "@xmath214 .",
    "suppose that @xmath215 .",
    "then for each @xmath66 we have : @xmath216 due to lemma [ lemma : feasibility ] , we have that @xmath23 is feasible in every round , which implies that @xmath217 @xmath75 .",
    "this further gives : @xmath218 and , therefore , all variables @xmath29 increase by a factor @xmath143 . from lemma [ lemma : feasibility ] , since the solution always remains feasible , none of the variables can increase to a value larger than 1 .",
    "therefore , after at most @xmath219 rounds , there must exist at least one @xmath36 such that @xmath220 .",
    "if in any round @xmath221 decreases , it can decrease by at most @xmath222 .",
    "therefore , in every subsequent round @xmath223    for the second part of the lemma , let @xmath224 be the set of constraints that are at least  @xmath225-looser \" than the tightest constraint .",
    "then for @xmath226 we have @xmath227 this further gives : @xmath228 moreover , for each @xmath229 we have @xmath230 , since for @xmath229 : @xmath231 therefore : @xmath232 interchanging the order of summation in the last line , we reach the desired inequality .",
    "the proof of the last part of the lemma follows from feasibility : @xmath233 , @xmath76 ( lemma [ lemma : feasibility ] ) , and from @xmath234 .",
    "lemmas analogous to [ lemma : feasibility ] and [ lemma : approx - comp - slack ] also appear in @xcite .",
    "however , the proofs of lemmas [ lemma : feasibility ] and [ lemma : approx - comp - slack ] require new ideas compared to the proofs of the corresponding lemmas in @xcite .",
    "we need to be much more careful in our choice of lower thresholds @xmath65 and constant @xmath69 in the dual variables , particularly by choosing @xmath69 as a function of several variables , rather than as a constant .",
    "the choice of @xmath65 s is also sensitive as smaller @xmath65 s would make the potential function range too large , while larger @xmath65 s would cause more frequent decrease of `` small '' variables . in either case",
    ", the convergence time would increase .",
    "[ [ decrease - of - small - variables . ] ] decrease of small variables .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + +    the following lemma is also needed for the convergence analysis .",
    "it shows that if some variable @xmath29 decreases by less than a multiplicative factor @xmath63 , i.e. , @xmath235 and @xmath29 decreases , then @xmath29 must be part of at least one approximately tight constraint .",
    "this lemma will be used later to show that in any round the increase in the potential due to the decrease of `` small '' variables is dominated by the decrease of `` large '' variables ( i.e. , the variables that decrease by a multiplicative factor @xmath63 ) .",
    "[ lemma : small - x - tight - yi ] consider the rounds that happen after the initial @xmath199 rounds . if in some round there is a variable @xmath235 that decreases",
    ", then in the same round for some @xmath36 with @xmath119 it holds that : @xmath236 and @xmath237 .",
    "suppose that some @xmath235 triggers a decrease over the @xmath30 coordinate .",
    "the first part of the lemma is easy to show , simply by using the argument that at least one term of a summation must be higher than the average , i.e. , there exists at least one @xmath36 with @xmath86 such that : @xmath238    for the second part , as @xmath239 , we have that : @xmath240    since @xmath29 decreases , we have that @xmath241 , and therefore @xmath242 moreover , as @xmath243 , and @xmath244 , it follows that : @xmath245 observe that for @xmath246 : @xmath247 while for @xmath153 , since @xmath248 : @xmath249 where we have used the generalized bernoulli s inequality for @xmath250 @xcite , and then @xmath251 . recalling",
    "that @xmath252 , and combining ( [ eq : y - bound-1 ] ) with ( [ eq : eps-8 - 1 ] ) and ( [ eq : eps-8 - 1 - 2 ] ) : @xmath253 finally , as @xmath254 , it follows that @xmath255 which gives : @xmath256    [ [ potential . ] ] potential .",
    "+ + + + + + + + + +    we use the following potential function to analyze the convergence time : @xmath257 where @xmath258 and @xmath99 is defined by ( [ eq : f - alpha ] ) .",
    "the potential function is strictly concave and its partial derivative with respect to any variable @xmath29 is : @xmath259    the following fact ( given in a similar form in @xcite ) , which follows directly from the taylor series representation of concave functions , will be useful for the potential increase analysis :    [ fact : taylor ] for a differentiable concave function @xmath260 and any two points @xmath261 : @xmath262    using fact [ fact : taylor ] and ( [ eq : potential - derivatives ] ) , we show the following lemma :    [ lemma : potential - increase ] starting with a feasible solution and throughout the course of the algorithm , the potential function @xmath263 never decreases . letting @xmath184 and @xmath185 denote the values of @xmath23 before and after a round update , respectively ,",
    "the potential function increase is lower - bounded as : @xmath264    since @xmath265 is concave , using fact [ fact : taylor ] and ( [ eq : potential - derivatives ] ) it follows that : @xmath266 if @xmath267 , then the term in the summation ( [ eq : potential - increase - before - bounds ] ) corresponding to the change in @xmath29 is equal to zero , and @xmath29 has no contribution to the sum in ( [ eq : potential - increase - before - bounds ] ) .    if @xmath268 , then , as @xmath29 increases over the observed round , it must be @xmath269 . by the choice of the parameters , @xmath270 , and",
    "therefore @xmath271 it follows that @xmath272 , and therefore @xmath273    finally , if @xmath274 , then it must be @xmath275 . by the choice of the parameters , @xmath276 , implying @xmath277 we get that @xmath278 , and therefore @xmath279 completing the proof .      the outline of the proof is as follows .",
    "we first derive a lower bound on the potential increase ( lemma [ lemma : potential - increase - alpha<1 ] ) , which will motivate the definition of a stationary round .",
    "then , for the appropriate definition of a stationary round we will first show that in any stationary round , solution is @xmath49approximate .",
    "then , to complete the proof , we will show in any non - stationary round there is a sufficiently large increase in the potential function , which , combined with the bounds on the potential value will yield the result .",
    "the following lemma lower - bounds the increase in the potential function in any round of the algorithm .",
    "[ lemma : potential - increase - alpha<1 ] if @xmath61 and @xmath280 , @xmath184 , @xmath281 and @xmath282 , @xmath185 , @xmath283 denote the values of @xmath265 , @xmath23 , and @xmath80 before and after a round , respectively , and @xmath284 , then if @xmath184 is feasible :    1 .   @xmath285",
    "@xmath286 ; 3 .",
    "@xmath287 .",
    "@xmath288 + * proof of 1 .",
    "* observe that for @xmath289 , @xmath290 . from the proof of lemma [ lemma : potential - increase ]",
    ", we have that : @xmath291 the proof that @xmath292 is implied by the proof of part 3 of this lemma ( see below ) . for each @xmath289",
    ", we have that : @xmath293 therefore : @xmath294    * proof of 2 .",
    "* let @xmath295 denote the set of @xmath28 s such that @xmath29 increases in the current round . then , recalling that for @xmath296 @xmath297 and that from the choice of parameters @xmath298 : @xmath299 since @xmath296 , @xmath300 , it follows that @xmath301 observing that for any @xmath302 we have that @xmath303 , we get : @xmath304    * proof of 3 .",
    "* let @xmath305 denote the set of @xmath28 s such that @xmath29 decreases in the current round . in this case",
    "not all the @xmath29 s with @xmath289 decrease by a multiplicative factor @xmath63 , since for @xmath289 : @xmath306 .",
    "we will first lower - bound the potential increase over @xmath29 s that decrease multiplicatively : @xmath307 , so that @xmath308 .",
    "recall that for @xmath289 : @xmath309 and @xmath310 .",
    "it follows that : @xmath311 next , we prove that the potential increase due to decrease of @xmath29 such that @xmath312 is dominated by the potential increase due to @xmath203 s that decrease multiplicatively by the factor @xmath63",
    ".    choose any @xmath29 such that @xmath312 , and let @xmath313 .",
    "from lemma [ lemma : small - x - tight - yi ] , there exists at least one @xmath36 with @xmath86 , such that : @xmath314 @xmath315 from ( [ eq : x - tight - constraint ] ) , there exists at least one @xmath316 such that @xmath317 and @xmath318 since @xmath319 $ ] and @xmath320 , using ( [ eq : large - xp ] ) , we have that @xmath321 . recalling ( [ eq : yi - lower - bound - zj ] ) : @xmath322 recalling that @xmath323 , it further follows that : @xmath324 because @xmath325 and @xmath326 , it follows that @xmath327 .",
    "therefore : @xmath328    as @xmath61 , we have that @xmath329 , and @xmath330 .",
    "similar to ( [ eq : yi - lower - bound - zj ] ) , we can lower - bound @xmath66 as : @xmath331 then , recalling @xmath332 , and using ( [ eq : yi - lower - bound - zj-2 ] ) , it is simple to show that : @xmath333 as @xmath334 and @xmath335 , it immediately follows from ( [ eq : alpha<1small - var - inc - cond1 ] ) that @xmath336 decreases by a factor @xmath63 .    in the rest of the proof",
    "we show that ( [ eq : alpha<1small - var - inc - cond1 ] ) and ( [ eq : alpha<1small - var - inc - cond2 ] ) imply that the increase in the potential due to the decrease of variable @xmath336 dominates the increase in the potential due to the decrease of variable @xmath29 by at least a factor @xmath22 .",
    "this result then further implies that the increase in the potential due to the decrease of variable @xmath336 dominates the increase in the potential due to the decrease of _ all _ small @xmath203 s that appear in the constraint @xmath36 ( @xmath203 s are such that @xmath204 , @xmath337 , and @xmath338 )",
    ".    consider the following two cases : @xmath339 and @xmath340 .",
    "* case 1 : @xmath339*. then , using ( [ eq : alpha<1small - var - inc - cond1 ] ) : @xmath341 * case 2 : @xmath340*. then , using ( [ eq : alpha<1small - var - inc - cond2 ] ) : @xmath342    combining ( [ eq : alpha<1-dominant - inc-1 ] ) and ( [ eq : alpha<1-dominant - inc-2 ] ) with ( [ eq : pot - increase - bound - multiplicative ] ) , it follows that : @xmath343 finally , since for @xmath344 : @xmath345 : @xmath346 completing the proof .    parts 2 and 3 of lemma @xcite appear in a somewhat similar form in @xcite",
    ". however , part 3 requires significant additional results for bounding the potential change due to decrease of small @xmath29 s ( i.e. , @xmath29 s that are smaller than @xmath347 ) that were not needed in @xcite .",
    "the rest of the results in this paper are new .",
    "consider the following definition of a stationary round :    [ def : alpha<1-stationary - round ] ( stationary round . )",
    "let @xmath284 .",
    "a round is stationary if it happens after the initial @xmath348 rounds , where @xmath349 and @xmath350 , and both of the following two conditions hold :    1 .",
    "@xmath351 , and 2 .",
    "@xmath352 .    in the rest of the proof",
    ", we first show that in any stationary round , we have an @xmath49approximate solution , while in any non - stationary round , the potential function increases substantially .",
    "we first prove the following lemma , which we will then be used in bounding the duality gap .",
    "[ lemma : alpha<1-lower - bound - xi - j ] after the initial @xmath348 rounds , where @xmath349 and @xmath350 , in each round of the algorithm : @xmath353 , @xmath75 .",
    "suppose without loss of generality that the algorithm starts with a feasible solution .",
    "this assumption is w.l.o.g . because , from lemma [ lemma : self - stabilization ] , after at most @xmath354 rounds the algorithm reaches a feasible solution , and from lemma [ lemma : feasibility ] , once the algorithm reaches a feasible solution , it always maintains a feasible solution .",
    "choose any @xmath28 .",
    "using the same argument as in the proof of lemma [ lemma : feasibility ] , after at most @xmath355 rounds , there exists at least one round in which @xmath356 ( otherwise @xmath357 , which is a contradiction ) .",
    "observe that in any round for which @xmath358 , @xmath29 increases by a factor @xmath359 .",
    "therefore , the maximum number of consecutive rounds in which @xmath360 is at most @xmath355 , otherwise @xmath29 would increase to a value larger than 1 , making @xmath23 infeasible , which is a contradiction due to lemma [ lemma : feasibility ] .",
    "the maximum amount by which @xmath361 can decrease in any round is bounded by a factor @xmath362 .",
    "therefore , using the generalized bernoulli s inequality , it follows that in any round : @xmath363    a simple corollary of lemma [ lemma : alpha<1-lower - bound - xi - j ] is that :    [ cor : alpha<1-lower - comp ] after the initial @xmath348 rounds , where @xmath349 and @xmath350 , in each round of the algorithm : @xmath364 .    from lemma [ lemma : alpha<1-lower - bound - xi - j ] , after the initial @xmath348 rounds , it always holds @xmath365 , @xmath75 . multiplying both sides of the inequality by @xmath366 , @xmath75 and summing over @xmath28 ,",
    "the result follows .",
    "recall that @xmath367 denotes the primal objective .",
    "the following lemma states that any stationary round holds an @xmath368-approximate solution .",
    "[ lemma : alpha<1-stationary - round ] in any stationary round : @xmath369 , where @xmath21 is the optimal solution to @xmath370 .",
    "since , by definition , a stationary round can only happen after the initial @xmath348 rounds , we have that @xmath23 in that round is feasible , and also from lemma [ lemma : approx - comp - slack ] : @xmath371 .",
    "therefore , recalling eq .",
    "( [ eq : duality - gap - alpha ] ) for the duality gap and denoting @xmath372 , we have that : @xmath373    from lemma [ lemma : alpha<1-lower - bound - xi - j ] , @xmath374 , @xmath75 .",
    "partition the indices of all the variables as follows : @xmath375 then , using ( [ eq : alpha<1-duality - gap - bound ] ) : @xmath376 where : @xmath377 and @xmath378 the rest of the proof follows by upper - bounding @xmath379 and @xmath380 .",
    "* bounding @xmath379 . * observing that @xmath75 : @xmath381 , we can write @xmath379 as : @xmath382 denote @xmath383 . it is simple to verify that @xmath384 is a convex function . since @xmath385 , @xmath386",
    ", it follows that @xmath387 . now : @xmath388 if @xmath389 , then as @xmath390 , it follows that @xmath391 .",
    "therefore : @xmath392 if @xmath393 , then ( using generalized bernoulli s inequality and @xmath394 ) : @xmath395 on the other hand : @xmath396 combining ( [ eq : alpha<1-r-1])([eq : alpha<1-r-3 ] ) with ( [ eq : alpha<1-g-1 ] ) : @xmath397    * bounding @xmath380 .",
    "* because the round is stationary and @xmath398 , we have that : @xmath399 . using the second part of the stationary round definition and that @xmath400 ( follows from lemma [ lemma : alpha<1-lower - bound - xi - j ] ) : @xmath401 above",
    ", first inequality follows from @xmath402 ( part 2 of the stationary round definition ) and corollary [ cor : alpha<1-lower - comp ] .",
    "second inequality follows by breaking the left summation into two summations : those with @xmath403 and those with @xmath404 .",
    "the third inequality follows from @xmath405 and part 1 of the stationary round definition .",
    "observe that as @xmath406 , we have that @xmath407 . using ( [ eq : alpha<1-xjy - bound ] )",
    ", it follows that : @xmath408    finally , combining ( [ eq : alpha<1-g-1 - 1 ] ) and ( [ eq : alpha<1-g-2 ] ) : @xmath409    theorem [ thm : convergence - alpha<1 ] from lemma [ lemma : alpha<1-stationary - round ] , in any stationary round : @xmath410 .",
    "therefore , to prove the theorem , it suffices to show that there are at most @xmath411 non - stationary rounds in total , where @xmath412 , because we can always run the algorithm for @xmath413 to get an @xmath11approximation , and this would only affect the constant in the convergence time .    to bound the number of non - stationary rounds",
    ", we will show that the potential increases by a `` large enough '' multiplicative value in all the non - stationary rounds in which the potential is not too `` small '' .",
    "for the non - stationary rounds in which the value of the potential is `` small '' , we show that the potential increases by a large enough value so that there can be only few such rounds .    in the rest of the proof",
    ", we assume that the initial @xmath414 rounds have passed , so that @xmath23 is feasible , and the statement of lemma [ lemma : approx - comp - slack ] holds . this does not affect the overall bound on the convergence time , as @xmath415    to bound the minimum and the maximum values of the potential @xmath265 , we will bound @xmath416 and @xmath417 . recall that",
    "@xmath418 .",
    "since @xmath419 , @xmath23 is always feasible , and @xmath217 , @xmath75 , we have that : @xmath420 and @xmath421 thus , we have : @xmath422 and @xmath423    recall from lemma [ lemma : potential - increase ] that the potential never decreases .",
    "we consider the following three cases for the value of the potential :    * case 1 : @xmath424*. since in this case @xmath425 , we have that @xmath426 . from lemma [ lemma : approx - comp - slack ] , @xmath427 , thus implying : @xmath428 as @xmath429 and @xmath325 . combining part 3 of lemma [ lemma : potential - increase - alpha<1 ] and ( [ eq : alpha<1-neg - phi - inc ] ) , the potential increases by at least",
    ": @xmath430 since the potential never decreases , there can be at most @xmath431 case 1 rounds .",
    "* case 2 : @xmath432 . * from lemma [ lemma : approx - comp - slack ]",
    ", there exists at least one @xmath36 such that @xmath433 . since @xmath434 @xmath435 , it is also true that @xmath436 , and as @xmath437 and @xmath429 , it follows that @xmath438 . from ( [ eq :",
    "alpha<1-p - alpha - bound ] ) , we also have @xmath439 . therefore : @xmath440 if @xmath441 , then @xmath442 from lemma [ lemma : approx - comp - slack ] , @xmath443 from the third part of lemma [ lemma : potential - increase - alpha<1 ] , the potential increases additively by at least @xmath444 and , therefore , @xmath445 after at most @xmath446 rounds .",
    "* case 3 : @xmath447 . * in this case , @xmath448 . if the round is stationary , then from lemma [ lemma : alpha<1-stationary - round ] , @xmath369 .",
    "if the round is not stationary , then from definition [ def : alpha<1-stationary - round ] , either :    1 .",
    "@xmath449 , or 2 .",
    "@xmath450 .",
    "if the former is true , then using the first part of lemma [ lemma : potential - increase - alpha<1 ] , the potential increases by at least @xmath451 . if the latter is true , from the third part of lemma [ lemma : potential - increase - alpha<1 ] , the potential increases by at least @xmath451 .",
    "it follows that there are at most @xmath452 non - stationary case 3 rounds .    combining the three cases with the bound on @xmath453 ( [ eq : tau1+tau0-bound ] )",
    ", the total convergence time is at most : @xmath454 rounds , as claimed .",
    "the proof outline for the convergence of @xmath0-fairpsolver in the @xmath5 case is as follows .",
    "first , we show that in any round it can not be the case that only `` small '' @xmath29 s ( i.e. , @xmath29 s that are smaller than @xmath347 ) decrease .",
    "in fact , we show that the increase in the potential due to updates of `` small '' variables is dominated by the increase in the potential due to those variables that decrease multiplicatively by a factor @xmath455 ( lemmas [ lemma : mul - increase - prop ] and [ lemma : potential - increase - proportional ] ) .",
    "we then define a stationary round and show that : ( i ) in any non - stationary round the potential increases significantly , and ( ii ) in any stationary round , the solution @xmath23 at the beginning of the round provides an additive @xmath456approximation to the optimum objective value .",
    "[ lemma : mul - increase - prop ] starting with a feasible solution , in any round of the algorithm :    1 .",
    "2 .   @xmath458 .",
    "fix any round , and let @xmath459 and @xmath460 denote the values of @xmath461 at the beginning and at the end of the round , respectively . if for all @xmath289 @xmath462 , there is nothing to prove .",
    "suppose that there exists some @xmath463 that decreases .",
    "then from lemma [ lemma : small - x - tight - yi ] there exists at least one @xmath464 such that @xmath86 , and :    * @xmath465 , and * @xmath466 .    since @xmath465 , there exists at least one @xmath316 such that @xmath332 . recalling that @xmath467 :    @xmath468",
    "since @xmath29 decreases , it must be @xmath469 . using ( [ eq : alpha=1-n - times - inc ] ) : @xmath470 and , therefore , @xmath336 decreases as well .",
    "moreover , since ( [ eq : alpha=1-n - times - inc ] ) implies @xmath471 the proof of the first part of the lemma follows .",
    "the second part follows from ( [ eq : alpha=1-n - times - inc ] ) as well , since : @xmath472 which , given that @xmath29 was chosen arbitrarily , implies : @xmath473    [ lemma : potential - increase - proportional ] let @xmath459 and @xmath460 denote the values of @xmath461 at the beginning and at the end of any fixed round , respectively . if @xmath184 is feasible , then the potential increase in the round is at least :    1 .",
    "[ item : prop-1 ] @xmath474 ; 2 .",
    "[ item : prop-2 ] @xmath475 .",
    "[ item : prop-3 ] @xmath476 .",
    "@xmath288 + * proof of [ item : prop-1 ] : * recall that : @xmath477 let @xmath478 , @xmath479 .    if @xmath296 , then @xmath300 and @xmath480 .",
    "since from the choice of parameters @xmath481 increases by at most a factor of @xmath189 , it follows that : @xmath482 , which gives @xmath483 .",
    "therefore : @xmath484    * proof of [ item : prop-2 ] : * the proof is equivalent to the proof of the second part of lemma [ lemma : potential - increase - alpha<1 ] and is omitted .",
    "* proof of [ item : prop-3 ] : * using that for @xmath289 we have that @xmath485 and @xmath486 , we can lower bound the increase in the potential as : @xmath487 now consider @xmath488 such that @xmath489 . from the proof of lemma [ lemma : mul - increase - prop ] , for each such @xmath203 there exists a constraint @xmath36 and a variable @xmath490 with @xmath491 such that @xmath204 , @xmath492 , @xmath493 , and @xmath494 . if @xmath495 then @xmath496 on the other hand , if @xmath497 , then : @xmath498 it follows from ( [ eq : delta - phi - j - in - s- ] ) that : @xmath499 finally , since for @xmath344 we have that @xmath500 : @xmath501    consider the following definition of a stationary round :    [ def : alpha=1-stat - round ] a round is stationary if it happens after the initial @xmath348 rounds , where @xmath502 , @xmath503 and if both of the following conditions hold :    * @xmath504 ; * @xmath505 .",
    "we first show that in any non - stationary round there is a sufficient progress towards the @xmath11approximate solution .",
    "[ lemma : non - stat - round - alpha=1 ] in any non - stationary round the potential function increases by at least @xmath506 .",
    "a round is non - stationary if either of the two conditions from definition [ def : alpha=1-stat - round ] does not hold . if the first condition does not hold , then from the first part of lemma [ lemma : potential - increase - proportional ] , the potential increases by @xmath506 . if the second condition does not hold , then from either the second or the third part of lemma [ lemma : potential - increase - proportional ] the potential increases by at least @xmath507 .    before proving that in every non - stationary round",
    ", the solution is @xmath49approximate , we will need the following intermediary lemma .",
    "[ lemma : cond - lower - bound ] starting with a feasible solution and after at most @xmath211 rounds , in any round of the algorithm : @xmath508    first , we claim that after the algorithm reaches a feasible solution it takes at most @xmath509 additional rounds for each agent @xmath28 to reach a round in which @xmath510 .",
    "suppose not , and pick any agent @xmath511 for which in each of the @xmath509 rounds following the first round that holds a feasible solution : @xmath512 .",
    "then @xmath203 increases in each of the rounds and after @xmath513 rounds we have @xmath514 .",
    "therefore , after at most @xmath515 rounds the solution becomes infeasible , which is a contradiction ( due to lemma [ lemma : feasibility ] ) .",
    "now choose any @xmath29 and observe @xmath516 over the rounds that happen after the first @xmath509 rounds .",
    "the maximum number of consecutive rounds for which @xmath517 is @xmath518 , otherwise we would have @xmath357 , a contradiction .",
    "since in any round , due to the choice of the algorithm parameters , @xmath481 decreases by at most a factor of @xmath519 , the minimum value that @xmath481 can take is at least @xmath520 , thus completing the proof .",
    "now we are ready to prove that a solution in a stationary round is @xmath49approximate .",
    "[ lemma : alpha=1-stat - round ] in any stationary round : @xmath521 , where @xmath21 is the optimal solution .    since",
    ", due to definition [ def : alpha=1-stat - round ] , a stationary round can only happen after the initial @xmath348 rounds , we have that in any stationary round the solution is feasible ( lemmas [ lemma : feasibility ] and [ lemma : self - stabilization ] ) and approximate complementary slackness ( lemma [ lemma : approx - comp - slack ] ) holds .    recall the expression ( [ eq : duality - gap - proportional])for the duality gap : @xmath522 from the second part of lemma [ lemma : approx - comp - slack ] : @xmath523 therefore : @xmath524 since the round is stationary , we have that @xmath525 , which gives : @xmath526 let @xmath527 .",
    "the remaining part of the proof is to bound @xmath528 . for @xmath529",
    ", we have that @xmath530 . to bound the remaining terms",
    ", we will use lemma [ lemma : cond - lower - bound ] and the bound of the sum of the weights @xmath8 for which @xmath531 ( that is , @xmath532 ) .",
    "it follows that : @xmath533 combining ( [ eq : alpha=1-duality - gap - bound ] ) and ( [ eq : bound - on - ln - terms ] ) , and recalling that @xmath534 , the result follows .",
    "theorem [ thm : convergence - alpha=1 ] consider the values of the potential in the rounds following the initial @xmath348 rounds , where @xmath502 , @xmath503 ( so that the solution @xmath23 is feasible in each round and the approximate complementary slackness holds ) .",
    "observe that @xmath535 .",
    "we start by bounding the minimum and the maximum values that the potential can take .",
    "recall ( from lemma [ lemma : potential - increase ] ) that the potential never decreases .    due to lemma",
    "[ lemma : feasibility ] , @xmath536 $ ] , @xmath75 , and therefore we can bound the two summations in the potential as : @xmath537 @xmath538 @xmath539 and @xmath540    from ( [ eq : alpha=1-pot - lbound-1 ] ) and ( [ eq : alpha=1-pot - lbound-2 ] ) : @xmath541    on the other hand , from ( [ eq : alpha=1-pot - ubound-1 ] ) and ( [ eq : alpha=1-pot - ubound-2 ] ) : @xmath542    consider the following two cases :    * case 1 : @xmath543 . * then @xmath544 and @xmath545 . from the third part of lemma [ lemma : approx - comp - slack ] , we have that @xmath546 . thus using the part [ item : prop-2 ] of lemma [ lemma : potential - increase - proportional ]",
    ", we get that the potential increases by @xmath547 finally , since @xmath548 , there can be at most @xmath549 case 1 rounds .",
    "* case 2 : @xmath550 . * then @xmath551 . from lemma [ lemma : alpha=1-stat - round ] ,",
    "if a round is stationary , then @xmath552 .",
    "if a round is non - stationary , from lemma [ lemma : non - stat - round - alpha=1 ] , the potential increases ( additively ) by at least @xmath506",
    ". therefore , the maximum number of non - stationary rounds is at most : @xmath553 combining the results for the case 1 and case 2 , the theorem follows by invoking @xmath0-fairpsolver for the approximation parameter @xmath554 .      the outline of the proof of theorem [ thm : convergence - alpha>1 ] is as follows .",
    "first , we show that in any round of the algorithm the variables that decrease by a multiplicative factor @xmath63 dominate the potential increase due to _ all the variables _ that decrease ( lemma [ lemma : alpha>1-mul - increase - over - s- ] ) .",
    "this result is then used in lemma [ lemma : potential - increase - alpha>1 ] to show the appropriate lower bound on the potential increase .",
    "observe that for @xmath153 the objective function @xmath166 , and , consequently , the potential function @xmath263 is negative for any feasible @xmath23 . to yield a poly - logarithmic convergence time in @xmath555 , and @xmath33 , the idea is to show that the negative potential @xmath556 decreases by some multiplicative factor whenever @xmath23 is not a `` good '' approximation to @xmath21  the optimal solution to @xmath96 .",
    "this idea , combined with the fact that the potential never decreases ( and therefore @xmath556 never increases ) and with upper and lower bounds on the potential then leads to the desired convergence time .",
    "[ lemma : alpha>1-mul - increase - over - s- ] in any round of the algorithm in which the solution @xmath184 at the beginning of the round is feasible : @xmath557 and @xmath558    if @xmath462 , @xmath75 , there is nothing to prove , so assume that there exists at least one @xmath28 with @xmath559 .",
    "the proof proceeds as follows .",
    "first , we show that for each @xmath28 for which @xmath29 decreases by a factor less than @xmath560 there exists at least one @xmath336 that appears in at least one constraint @xmath36 in which @xmath29 appears and decreases by a factor @xmath560 .",
    "we then proceed to show that @xmath336 is in fact such that @xmath561 and @xmath562 this will then imply that the terms @xmath563 and @xmath564 dominate _ the sum _ of all the terms corresponding to @xmath29 s with @xmath86 and @xmath565 , thus completing the proof .",
    "from lemma [ lemma : small - x - tight - yi ] , for each @xmath289 with @xmath566 there exists at least one constraint @xmath36 such that :    * @xmath567 , and * @xmath568",
    ".    therefore , there exists at least one @xmath336 with @xmath317 such that @xmath569 , which further gives @xmath570 , where the last inequality follows from @xmath571 and @xmath79 . combining the inequality for @xmath572 with the inequality for @xmath573 above :    @xmath574    using the generalized bernoulli s inequality : @xmath575 and @xmath576 @xcite , and recalling that @xmath577 , @xmath578 , we further get : @xmath579 which further implies : @xmath580 as @xmath581 .",
    "since @xmath29 decreases , @xmath582 , and therefore @xmath336 decreases as well .    using similar arguments , as @xmath569 and recalling that @xmath583 :    @xmath584    as @xmath585 and @xmath586 ( since @xmath587 $ ] ) .",
    "from ( [ eq : slackness - n - dominance ] ) , it follows that @xmath588 which further implies the first part of the lemma .",
    "for the second part , consider the following two cases :    * case 1 : * @xmath589 .",
    "then : @xmath590 implying the second part of the lemma .    * case 2 : * @xmath591 .",
    "then : @xmath592 thus implying the second part of the lemma and completing the proof .",
    "the following lemma lower - bounds the increase in the potential , in each round .",
    "[ lemma : potential - increase - alpha>1 ] let @xmath184 and @xmath185 denote the values of @xmath23 before and after any fixed round , respectively , and let @xmath593 , @xmath594 .",
    "the potential increase in the round is lower bounded as :    1 .",
    "@xmath595 ; 2 .",
    "@xmath596 ; 3 .",
    "@xmath597 .",
    "@xmath288 + * proof of 1 . * from lemma [ lemma : potential - increase ] : @xmath598 let @xmath599 . from the proof of lemma [ lemma : potential - increase ] ,",
    "if @xmath268 , then @xmath600 , as @xmath601 . if @xmath602 , then @xmath603 , which implies @xmath604 , and thus @xmath605 .",
    "therefore : @xmath606 , which further gives : @xmath607 if @xmath296 , then @xmath300 , and therefore @xmath608 .    similarly ,",
    "if @xmath289 and @xmath462 , then @xmath609 , and therefore @xmath610 .",
    "using part 1 of lemma [ lemma : alpha>1-mul - increase - over - s- ] : @xmath611    * proof of 2 : * consider @xmath289 such that @xmath462 .",
    "then @xmath609 , @xmath612 , and using lemma [ lemma : potential - increase ] : @xmath613 using the second part of lemma [ lemma : alpha>1-mul - increase - over - s- ] and the fact that for @xmath614 : @xmath615 , we get the desired result : @xmath616    * proof of 3 : * the proof is equivalent to the proof of lemma [ lemma : potential - increase - alpha<1 ] , part 2 , and is omitted for brevity .",
    "consider the following definition of a stationary round :    [ def : stationary - round ] ( stationary round . )",
    "a round is stationary , if both :    1 .",
    "@xmath617 , and 2 .",
    "@xmath618    hold , where @xmath593 , @xmath594 . otherwise , the round is non - stationary .",
    "the following two technical propositions are used in lemma [ lemma : alpha>1-stationary - near - opt ] for bounding the duality gap in stationary rounds .",
    "[ prop : alpha>1-duality - gap ] after the initial the initial @xmath348 rounds , where @xmath502 , @xmath503 , it is always true that @xmath619 , where @xmath620 .",
    "recall from ( [ eq : duality - gap - alpha ] ) that the duality gap for @xmath461 in @xmath96 is given as : @xmath621 from lemma [ lemma : approx - comp - slack ] , after at most initial @xmath622 rounds : @xmath623 and letting @xmath113 , we get : @xmath624    [ prop : alpha>1-r - bound ] let @xmath625 , where @xmath113 . if @xmath153 and @xmath626 @xmath627 , then @xmath628 .",
    "observe the first and the second derivative of @xmath629 : @xmath630 as @xmath631 , @xmath384 is convex for @xmath79 , and therefore : @xmath632 we have that : @xmath633 on the other hand : @xmath634 completing the proof .",
    "the following lemma states that in any stationary round current solution is an @xmath635-approximate solution .",
    "[ lemma : alpha>1-stationary - near - opt ] in any stationary round that happens after the initial the initial @xmath348 rounds , where @xmath502 , @xmath503 , we have that @xmath636 , where @xmath21 is the optimal solution to @xmath96 and @xmath23 is the solution at the beginning of the round .",
    "observe that for any @xmath637 ( by the definition of @xmath295 and @xmath305 ) we have that @xmath638 , which is equivalent to : @xmath639    using stationarity and ( [ eq : tight - stationary - xk ] ) : @xmath640 since @xmath641 , using ( [ eq : bound - on - all - wj - xj ] ) : @xmath642 and therefore : @xmath643 as @xmath644 and @xmath325 .    as @xmath645 , from proposition [ prop : alpha>1-duality - gap ] : @xmath646 from proposition [ prop : alpha>1-r - bound ] : @xmath647    observe @xmath648 .",
    "since @xmath79 , each @xmath649 , and therefore : @xmath650 now , from stationarity @xmath651 and using ( [ eq : tight - active - objective - part ] ) we get : @xmath652 finally , combining ( [ eq : approx - for - passive - x ] ) and ( [ eq : approx - for - active - x ] ) : @xmath653    the following two lemmas are used for lower - bounding the potential increase in non - stationary rounds .",
    "[ lemma : alpha>1-large - sum - yi ] consider any non - stationary round that happens after the initial @xmath348 rounds , where @xmath502 , @xmath503 .",
    "let @xmath184 and @xmath185 denote the values of @xmath23 before and after the round update .",
    "if @xmath654 , then @xmath655 .    observe that as @xmath654 , @xmath656 where the last inequality follows from lemma [ lemma : approx - comp - slack ] .    since the round is not stationary , we have that either :    1 .",
    "@xmath657 , or 2 .",
    "@xmath658 .    * case 1 : @xmath657 . *",
    "if : @xmath659 then @xmath660 and , from the first part of lemma [ lemma : potential - increase - alpha>1 ] , the potential increase is lower bounded as : @xmath661 on the other hand , if : @xmath662 then , from the second part of lemma [ lemma : potential - increase - alpha>1 ] : @xmath663    * case 2 : @xmath658 . * then , using the third part of lemma [ lemma : potential - increase - alpha>1 ] : @xmath664 where in the second line we have used that @xmath665 .",
    "this can be shown using the generalized bernoulli s inequality and @xmath666 as follows : @xmath667    [ lemma : alpha>1-mul - inc - non - stat ] consider any non - stationary round that happens after the initial @xmath348 rounds , where @xmath502 , @xmath503 .",
    "let @xmath184 and @xmath185 denote the values of @xmath23 before and after the round update .",
    "if @xmath668 , then @xmath669 .    observe that as @xmath668 , @xmath670    from the definition of a stationary round , we have either of the following two cases :    * case 1 : * @xmath671 . from the first part of lemma [ lemma : potential - increase - alpha>1 ] ,",
    "the increase in the potential is : @xmath672 . as @xmath673 ,",
    "the increase in the potential is at least : @xmath674    * case 2 : * @xmath675 . using part 3 of lemma [ lemma : potential - increase - alpha>1 ] ,",
    "the increase in the potential is then @xmath676 .",
    "therefore , using that @xmath665 as in the proof of lemma [ lemma : alpha>1-large - sum - yi ] : @xmath677    theorem [ thm : convergence - alpha>1 ] we will bound the total number of non - stationary rounds that happen after the initial @xmath348 rounds , where @xmath502 , @xmath503 .",
    "the total convergence time is then at most the sum of @xmath622 rounds and the number of non - stationary rounds that happen after the initial @xmath348 rounds , since , from lemma [ lemma : alpha>1-stationary - near - opt ] , in any stationary round : @xmath678 .",
    "consider the non - stationary rounds that happen after the initial @xmath348 rounds .",
    "as @xmath74 $ ] , @xmath75 , it is simple to show that : @xmath679 and @xmath680    recall that @xmath681 and that the potential @xmath263 never decreases",
    ".    there can be two cases of non - stationary rounds : those in which @xmath682 dominates in the absolute value of the potential , and those in which @xmath683 dominates in the absolute value of the potential .",
    "we bound the total number of the non - stationary rounds in such cases as follows .",
    "* case 1 : @xmath684 . * from ( [ eq : alpha>1-palpha - bounds ] ) and ( [ eq : alpha>1-sum - yi - bounds ] ) , in any such round , the negative potential is bounded as : @xmath685 moreover , from lemma [ lemma : alpha>1-large - sum - yi ] , in each case 1 non - stationary round , the potential increases by at least @xmath686 .",
    "it immediately follows that there can be at most : @xmath687 case 1 non - stationary rounds , as @xmath688 .",
    "* case 2 : @xmath689 . * from ( [ eq : alpha>1-palpha - bounds ] ) and ( [ eq : alpha>1-sum - yi - bounds ] ) , in any such round , the negative potential is bounded as : @xmath690 moreover , from lemma [ lemma : alpha>1-mul - increase - over - s- ] , in each such non - stationary round the potential increases by at least @xmath691",
    ". therefore , there can be at most : @xmath692 case 2 non - stationary rounds .",
    "the total number of initial @xmath622 rounds can be bounded as : @xmath693    combining ( [ eq : alpha>1-conv - bound-1 ] ) , ( [ eq : alpha>1-conv - bound-2 ] ) , and ( [ eq : alpha>1-conv - bound-3 ] ) , the total convergence time is at most : @xmath694    finally , running @xmath0-fairpsolver for the approximation parameter @xmath695 , we get that in any stationary round @xmath696 , while the total number of non - stationary rounds is at most : @xmath697      in this section , we outline the main ideas of the proof of theorem [ thm : convergence - alpha>1 ] , while the technical details are omitted and are instead provided in the full version of the paper .",
    "first , we show that in any round of the algorithm the variables that decrease by a multiplicative factor @xmath63 dominate the potential increase due to _ all the variables _ that decrease ( see lemma 4.21 in the full paper ) .",
    "this result is then used in lemma [ lemma : potential - increase - alpha>1 ] to show the following lower bound on the potential increase :    [ lemma : potential - increase - alpha>1 ] let @xmath184 and @xmath185 denote the values of @xmath23 before and after any fixed round , respectively , and let @xmath593 , @xmath594 . the potential increase in the round",
    "is lower bounded as :    1 .",
    "@xmath595 ; 2 .",
    "@xmath596 ; 3 .",
    "@xmath597 .",
    "observe that for @xmath153 the objective function @xmath166 , and , consequently , the potential function @xmath263 is negative for any feasible @xmath23 . to yield a poly - logarithmic convergence time in @xmath555 , and @xmath33 ,",
    "the idea is to show that the negative potential @xmath556 decreases by some multiplicative factor whenever @xmath23 is not a `` good '' approximation to @xmath21  the optimal solution to @xmath96 .",
    "this idea , combined with the fact that the potential never decreases ( and therefore @xmath556 never increases ) and with upper and lower bounds on the potential then leads to the desired convergence time . consider the following definition of a stationary round :    [ def : stationary - round ] ( stationary round . )",
    "a round is stationary , if both :    1 .",
    "@xmath698 , and 2 .",
    "@xmath618    hold , where @xmath593 , @xmath594 .",
    "otherwise , the round is non - stationary .",
    "recall the expression for the negative potential : @xmath699 . then , using lemma [ lemma : potential - increase - alpha>1 ] , it suffices to show that in a non - stationary round the decrease in the negative potential @xmath556 is a multiplicative factor of the larger of the two terms @xmath700 and @xmath417 . the last part of the proof is to show that the solution @xmath23 that corresponds to any stationary round is close to the optimal solution .",
    "this part is done by appropriately upper - bounding the duality gap . denoting by @xmath701 the set of coordinates @xmath28 for which @xmath29 either increases or decreases in the observed stationary round and using definition [ def : stationary - round ] ,",
    "we show that the terms @xmath702 contribute to the duality gap by no more than @xmath703 .",
    "the terms corresponding to @xmath704 are bounded recalling ( from @xmath0-fairpsolver ) that for such terms @xmath705 .      [",
    "[ lower - bound - on - the - minimum - allocated - value . ] ] lower bound on the minimum allocated value .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    recall ( from section [ section : prelims ] ) that the optimal solution @xmath21 to @xmath96 must lie in the positive orthant .",
    "we show in lemma [ lemma : lower - bound ] that not only does @xmath21 lie in the positive orthant , but the minimum element of @xmath21 can be bounded below as a function of the problem parameters .",
    "this lemma motivates the choice of parameters @xmath65 in @xmath0-fairpsolver ( section [ section : algorithm ] ) .",
    "[ lemma : lower - bound ] let @xmath706 be the optimal solution to @xmath96 .",
    "then @xmath627 :    * @xmath707 , if @xmath708 , * @xmath709 , if @xmath79 ,    where @xmath710 is the indicator function of the expression @xmath711 , i.e. , 1 if @xmath711 holds , and 0 otherwise . ] is the number of non - zero elements in the @xmath712 row of the constraint matrix @xmath9 , and @xmath713 .",
    "fix @xmath0 .",
    "let : @xmath714    for the purpose of contradiction , suppose that @xmath706 is the optimal solution to @xmath96 , and @xmath715 for some fixed @xmath116 .    to establish the desired result , we will need to introduce additional notation .",
    "we first break the set of ( the indices of ) constraints of the form @xmath716 in which variable @xmath29 appears with a non - zero coefficient into two sets , @xmath717 and @xmath718 :    * let @xmath717 denote the set of the constraints from @xmath96 that are not tight at the given optimal solution @xmath21 , and are such that @xmath719 for @xmath720 .",
    "let @xmath721 denote the slack of the constraint @xmath720 .",
    "* let @xmath718 denote the set of tight constraints from @xmath96 that are such that @xmath722 for @xmath723 .",
    "observe that since @xmath21 is assumed to be optimal , @xmath724 .",
    "let @xmath725 . notice that by increasing @xmath29 to @xmath726 none of the constraints from @xmath717 can be violated ( although all the constraints in @xmath718 will ; we deal with these violations in what follows ) .    in each constraint @xmath723 , there must exist at least one variable @xmath203 such that @xmath727 , because @xmath728 , as each @xmath723 is tight , and @xmath729 select one such @xmath203 in each constraint @xmath723 , and denote by @xmath730 the set of indices of selected variables . observe that @xmath731 ( @xmath732 ) , since an @xmath203 can appear in more than one constraint .    for each @xmath733 ,",
    "let @xmath734 denote the constraints in which @xmath203 is selected , and let @xmath735 if we increase @xmath29 by @xmath736 and decrease @xmath203 by @xmath737 @xmath738 , each of the constraints @xmath723 will be satisfied since , from ( [ eq : epsilon - choice ] ) and from the fact that only one @xmath203 gets selected per constraint @xmath723 , @xmath739 .",
    "therefore , to construct an alternative feasible solution @xmath740 , we set @xmath741 , @xmath742 for @xmath733 , and @xmath743 for all the remaining coordinates @xmath744 .",
    "since @xmath28 is the only coordinate over which @xmath23 gets increased in @xmath740 , all the constraints @xmath745 are satisfied . for @xmath740 to be feasible , we must have in addition that @xmath746 for @xmath733 . we show that @xmath747 as follows : @xmath748 where the second line follows from @xmath749 , and the last line follows from the choice of @xmath203 .    the last part of the proof is to show that @xmath750 , which contradicts the initial assumption that @xmath21 is optimal , by the definition of @xmath0-fairness from section [ section : prelims ] .",
    "we have that : @xmath751 consider one term from the summation ( [ eq : sum - ind - terms ] ) . from the choice of @xmath737 s , we know that for each @xmath737 there exist @xmath723 such that @xmath752 , and at the same time ( by the choice of @xmath203 ) we have @xmath753 , so that @xmath754    * case 1 .",
    "* suppose first that @xmath755 .",
    "then @xmath756 , as @xmath757 .",
    "plugging into ( [ eq : xk - general ] ) , we have : @xmath758    by the initial assumption , @xmath759 , and therefore @xmath760 since it must be @xmath761 ( @xmath762 ) . from ( [ eq : xk ] ) and ( [ eq : xj ] )",
    ", we get that every term in the summation ( [ eq : sum - ind - terms ] ) is strictly positive , which implies : @xmath763 and therefore @xmath21 is not optimal .    * case 2 .",
    "* now suppose that @xmath79 . then @xmath764 therefore : @xmath765 as @xmath761 , and @xmath766 ( since for any @xmath767 : @xmath768 ) .",
    "finally , from ( [ eq : xk - general ] ) and ( [ eq : xj - alpha1 ] ) we get that every term in the summation ( [ eq : sum - ind - terms ] ) is positive , which yields a contradiction .    [",
    "[ asymptotics - of - alpha - fair - allocations ] ] asymptotics of @xmath13fair allocations + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the following lemma states that for sufficiently small ( but not too small ) @xmath0 , the values of the linear and the @xmath13fair objectives at their respective optimal solutions are approximately the same .",
    "this statement will then lead to a conclusion that to @xmath11approximately solve an @xmath13fair packing problem for a very small @xmath0 , one can always use an @xmath11approximation packing lp algorithm .",
    "[ lemma : lp - close - to - small - alpha - fair ] let @xmath370 be an @xmath13fair packing problem with optimal solution @xmath21 , and @xmath769 be the lp with the same constraints and the same weights @xmath19 as @xmath370 and an optimal solution @xmath54 . then if @xmath48 , we have that @xmath770 , where @xmath771 $ ] .",
    "the proof outline is as follows .",
    "first , we show that the @xmath13fair objective @xmath772 can be upper - bounded by a linear objective as @xmath773 .",
    "then , to complete the proof , we use the optimality of @xmath54 for the lp : @xmath774 ( @xmath775 from the first part of the proof ) .",
    "let @xmath776 .",
    "consider the case when @xmath777 .",
    "solving @xmath777 for @xmath29 , we get that it should be @xmath778    choose @xmath0 so that @xmath779 , which is equivalent to @xmath780",
    ". then to have @xmath777 , it suffices to have @xmath781 , because ( i ) @xmath782 $ ] for @xmath783 $ ] , where @xmath711 is the base of the natural logarithm , and ( ii ) @xmath779 by the choice of @xmath0 .",
    "now , as @xmath780 , summing over @xmath28 such that @xmath784 we have : @xmath785 now we bound the rest of the terms in @xmath772 , i.e. , we consider @xmath786 .",
    "observe that since @xmath787 for @xmath788 is a feasible solution to @xmath370 and @xmath21 is the optimal solution to @xmath370 , we have that @xmath789 , which gives : @xmath790 therefore : @xmath791 combining ( [ eq : large - coord - approx ] ) and ( [ eq : small - coord - approx ] ) , we now get : @xmath792 finally , since @xmath54 optimally solves @xmath769 ( which has the same constraints and weights as @xmath370 ) , we have that @xmath21 is feasible for @xmath769 , and using ( [ eq : alpha - lp ] ) and optimality of @xmath54 , it follows that : @xmath793 as claimed .    observing that for any @xmath794 , @xmath795 ( since",
    ", due to the scaling , @xmath796 $ ] ) , a simple corollary of lemma [ lemma : lp - close - to - small - alpha - fair ] is that an @xmath11approximation @xmath797 to @xmath769 ( @xmath798 ) is also an @xmath49approximation to @xmath370 , for @xmath48 .",
    "thus , to find an @xmath11approximate solution for @xmath48 , the packing lp algorithm of @xcite can be run , which means that there is a stateless distributed algorithm that converges in poly(@xmath799 ) time for @xmath0 arbitrarily close to zero .",
    "the following two lemmas show that when @xmath0 is sufficiently close to 1 , @xmath370 can be @xmath11approximated by @xmath11approximately solving @xmath172 with the same constraints and weights .",
    "[ lemma : alpha - close - to-1-below ] let @xmath23 be an @xmath11approximate solution to a 1-fair packing problem @xmath172 returned by @xmath0-fairpsolver .",
    "then , for any @xmath800 , where @xmath349 , @xmath23 is also a @xmath801approximate solution to @xmath96 , where the only difference between @xmath172 and @xmath96 is in the value of @xmath0 in the objective .",
    "suppose that @xmath23 is a solution in some stationary round , provided by @xmath0-fairpsolver run for @xmath5 .",
    "fix that round .",
    "it is clear that if @xmath23 is feasible in @xmath172 , it is also feasible in @xmath96 , since all the constraints in @xmath172 and @xmath96 are the same by the initial assumption .",
    "all that is required for a dual solution @xmath80 to be feasible is that @xmath802 , for all @xmath36 , and therefore @xmath803 is a feasible dual solution for @xmath96 .",
    "the rest of the proof follows by bounding the duality gap @xmath804 .",
    "recall from ( [ eq : duality - gap - alpha ] ) that : @xmath805    since @xmath23 is a solution from a stationary round , from the second part of the definition of a stationary round ( definition [ def : alpha=1-stat - round ] ) , we have that : @xmath806 further , from lemma [ lemma : approx - comp - slack ] : @xmath807    next , we show that : @xmath808 rearranging the terms and taking logarithms of both sides in ( [ eq : alpha - below=1-all - x - large ] ) , we obtain the equivalent inequality @xmath809 .",
    "recall from @xmath0-fairpsolver that in every ( except for , maybe , the first ) round @xmath810 .",
    "as @xmath811 , it therefore suffices to show that @xmath812 .",
    "but from the statement of the lemma , @xmath813 , completing the proof of ( [ eq : alpha - below=1-all - x - large ] ) .    combining ( [ eq : alpha - below-1-acs ] ) and ( [ eq : alpha - below=1-all - x - large ] ) , we get that : @xmath814 where the second inequality follows from @xmath815 , @xmath816 .    using ( [ eq : alpha - below-1-bnd-1 ] ) , we can bound the duality gap ( eq .",
    "( [ eq : duality - gap - alpha - recap ] ) ) as : @xmath817 to complete the proof , recall from lemma [ lemma : cond - lower - bound ] that in any round of the algorithm , for all @xmath28 : @xmath818 . as @xmath137 and",
    "@xmath819 $ ] , @xmath75 , it holds that @xmath820 , @xmath75 , and therefore : @xmath821 finally , recalling that @xmath822 , and combining ( [ eq : alpha - below-1-bnd-2 ] ) with ( [ eq : duality - gap - alpha - betterbound ] ) , we get : @xmath823 where the third inequality follows from @xmath824 , and the fourth inequality follows from @xmath825 and @xmath826 .",
    "[ lemma : alpha - close - to-1-above ] let @xmath23 be an @xmath11approximate solution to a 1-fair packing problem @xmath172 returned by @xmath0-fairpsolver .",
    "then , for any @xmath827 $ ] , where @xmath349 , @xmath23 is also a @xmath801approximate solution to @xmath96 , where the only difference between @xmath172 and @xmath96 is in the value of @xmath0 in the objective .",
    "similar to the proof of lemma [ lemma : alpha - close - to-1-below ] , we will fix an @xmath23 from some stationary round of @xmath0-fairpsolver run on @xmath172 , and argue that the same @xmath23 @xmath801approximates @xmath96 by bounding the duality gap @xmath828 , although we will need to use a different set of inequalities since now @xmath153 .",
    "similar to the proof of lemma [ lemma : alpha - close - to-1-below ] , as @xmath23 is ( primal-)feasible for @xmath172 , @xmath23 and @xmath803 are primal- and dual - feasible for @xmath96 .    by the same token as in the proof of lemma [ lemma : alpha - close - to-1-below ] : @xmath829 as @xmath153 and @xmath830 $ ] , @xmath75 , we have that @xmath831 , @xmath75 , and therefore : @xmath832 therefore , we can write for the duality gap : @xmath833 notice that , as @xmath834 , the objective for @xmath96 , @xmath835 , is now negative .    using",
    "the same arguments as in the proof of lemma [ lemma : alpha - close - to-1-below ] , it is straightforward to show that @xmath836 , @xmath75 . from lemma [ lemma :",
    "cond - lower - bound ] , we have that @xmath837 , @xmath75 , and therefore : @xmath838 recalling that @xmath839 ( by the statement of the lemma ) and using ( [ eq : alpha - above-1-bnd-2 ] ) , we have : @xmath840 finally , plugging ( [ eq : alpha - above-1-bnd-3 ] ) into ( [ eq : alpha - above-1-duality - gap ] ) , we have : @xmath841 where the equality follows from @xmath644 , and the last inequality follows from @xmath842 .    finally , we consider the asymptotics of @xmath13fair allocations , as @xmath0 becomes large .",
    "this result complements the result from @xcite that states that @xmath13fair allocations approach the max - min fair one as @xmath843 by showing how fast the max - min fair allocation is reached as a function of @xmath844 , and @xmath33 .",
    "first , for completeness , we provide the definition of max - min fairness .",
    "( max - min fairness @xcite . )",
    "[ def : max - min - fairness ] let @xmath845 be a compact and convex set .",
    "a vector @xmath846 is max - min fair on @xmath847 if for any vector @xmath848 it holds that : if for some @xmath116 @xmath849 , then there exists @xmath850 such that @xmath851 and @xmath852 .    on a compact and convex set @xmath853 ,",
    "the max - min fair vector is unique ( see , e.g. , @xcite ) .",
    "the following lemma shows that for @xmath854 , the @xmath13fair vector and the max - min fair vector are @xmath11close to each other .",
    "notice that because of a very large gradient of @xmath166 as @xmath0 becomes large , the max - min fair solution provides only an @xmath855approximation to @xmath96 .",
    "[ lemma : mmf - alpha - fair ] let @xmath21 be the optimal solution to @xmath856 , @xmath54 be the max - min fair solution for the convex and compact set determined by the constraints from @xmath96 . then if @xmath857 , we have that :    1 .",
    "@xmath858 , i.e. , @xmath54 is an @xmath859approximate solution to @xmath96 , and 2 .",
    "@xmath860 , for all @xmath861 .",
    "suppose that , starting with @xmath54 , we want to construct a solution @xmath797 that is feasible in @xmath96 and is such that @xmath862 .",
    "then we need to increase at least one coordinate @xmath28 of @xmath54 .",
    "suppose that we increase a coordinate @xmath28 by a factor @xmath863 , so that @xmath864 .",
    "since @xmath54 is the max - min fair vector , to keep @xmath797 feasible , the increase over the @xmath865 coordinate must be at the expense of decreasing some other coordinates @xmath511 that satisfy @xmath866 .",
    "we will assume that whenever we decrease the coordinates to keep the solution feasible , we keep the solution pareto optimal ( i.e. , we decrease the selected coordinates by a minimum amount ) .",
    "using fact [ fact : taylor ] , we have : @xmath867    now , suppose that we want to further increase the @xmath865 coordinate by some small @xmath868 .",
    "call that new solution @xmath869 . then",
    ", the total amount by which other coordinates must decrease to keep the solution feasible is at least @xmath870 , since the feasible region is determined by packing constraints and it must be @xmath871 , where @xmath872 , @xmath435 .",
    "moreover , since @xmath54 is max - min fair , each coordinate @xmath511 that gets decreased must satisfy @xmath866 .",
    "it follows that : @xmath873 the last inequality can be verified by solving the inequality @xmath874 for @xmath0 , and verifying that it is implied by the initial assumption that @xmath854 .",
    "therefore , the maximum amount by which any coordinate of @xmath54 can be increased to improve the value of the objective @xmath875 is by a multiplicative factor of at most @xmath41 .",
    "since we can construct @xmath21 , the optimal solution to @xmath96 , starting with @xmath54 and by choosing a set of coordinates @xmath28 that we want to increase and by only decreasing coordinates @xmath511 such that @xmath866 whenever coordinate @xmath28 is increased , it follows that @xmath876 , @xmath75 .",
    "moreover , from ( [ eq : mmf - part-1 ] ) and ( [ eq : mmf - part-2 ] ) : @xmath877 and we can conclude that : @xmath878 which means that @xmath54 is an @xmath859approximate solution to @xmath96 .",
    "now consider the coordinates we need to decrease when we construct a solution @xmath797 from @xmath54 , such that @xmath862 .",
    "suppose that to increase some other coordinates , a coordinate @xmath511 is decreased by a factor @xmath879 : @xmath880 . as @xmath54 is max - min fair , only coordinates larger than @xmath881 can increase at the expense of decreasing @xmath881 .",
    "suppose now that we decrease the @xmath882 coordinate further by some small @xmath868 .",
    "call that solution @xmath869",
    ". then the maximum number of other coordinates @xmath28 that can further increase is @xmath883 .",
    "moreover , each coordinate @xmath28 that gets increased satisfies @xmath884 , and can be increased by at most @xmath885 .",
    "using fact [ fact : taylor ] , it follows that : @xmath886 where the last inequality follows from @xmath887 , which is implied by the initial assumption that @xmath161 .",
    "therefore , using ( [ eq : mmf - part-5 ] ) , the @xmath882 coordinate can decrease by at most a multiplicative factor @xmath879 . using similar arguments as for increasing the coordinates",
    ", it follows that @xmath888 , @xmath75 .",
    "we presented an efficient stateless distributed algorithm for the class of @xmath0-fair packing problems . to the best of our knowledge ,",
    "this is the first algorithm with poly - logarithmic convergence time in the input size .  additionally , we obtained results that characterize the fairness and asymptotic behavior of allocations in weighted @xmath13fair packing problems that may be of independent interest .",
    "an interesting open problem is to determine the class of objective functions for which the presented techniques yield fast and stateless distributed algorithms , together with a unified convergence analysis .",
    "this problem is especially important in light of the fact that @xmath0-fair objectives are not lipschitz continuous , do not have a lipschitz gradient , and their dual gradient s lipschitz constant scales at least linearly with @xmath22 and @xmath33 .",
    "therefore , the properties typically used in fast first - order methods are lacking @xcite . finally , for applications of @xmath0-fair packing that do not require uncoordinated updates",
    ", it seems plausible that the dependence on @xmath78 in the convergence bound can be improved from @xmath889 to @xmath890 by relaxing the requirement for asynchronous updates , similarly as was done in @xcite over @xcite .",
    "we thank nikhil devanur for pointing out the equivalence of the @xmath0-fair packing for @xmath5 and the problem of finding an equilibrium allocation in eisenberg - gale markets with leontief utilities .",
    "let the @xmath0-fair allocation problem be given in the form : @xmath891    @xmath19 is an @xmath892length vector of positive weights , @xmath23 is the vector of variables , @xmath9 is an @xmath893 constraint matrix , and @xmath10 is an @xmath894length vector with positive entries .",
    "denote @xmath895 .",
    "it is not hard to see that the assumption @xmath896 @xmath76 is without loss of generality , since for @xmath897 we can always divide both sides of the inequality by @xmath107 and obtain 1 on the right - hand side , since for ( non - trivial ) packing problems @xmath898 .",
    "therefore , we can assume that the input problem has constraints of the form @xmath899 , although it may not necessarily be the case that @xmath40 @xmath900 .",
    "the remaining transformation that is performed on the input problem is : @xmath901 where @xmath902    the problem @xmath87 after the scaling becomes :    @xmath903    @xmath904    @xmath905     + as @xmath906 is a positive constant .",
    "recall that @xmath0-fairpsolver returns an approximate solution to @xmath907 , and observe that @xmath23 is feasible for @xmath87 if and only if @xmath908 is feasible for @xmath96 .",
    "choose the dual variables ( lagrange multipliers ) for the original problem @xmath87 as : @xmath909 and notice that @xmath910 it is clear that @xmath66 s are feasible dual solutions , since the only requirement for the duals is non - negativity .",
    "recall ( from ( [ eq : duality - gap - alpha ] ) ) that the duality gap for a given primal- and dual - feasible @xmath23 and @xmath80 is given as : @xmath911 since @xmath58 , we have that @xmath912 for all @xmath36 , and using ( [ eq : condition - equality ] ) , it follows that @xmath913 since we demonstrate an additive approximation for the proportional fairness via the duality gap : @xmath914 , the same additive approximation follows for the original ( non - scaled ) problem .      for @xmath915 , we show that the algorithm achieves a multiplicative approximation for the scaled problem .",
    "in particular , we show that after the algorithm converges we have that : @xmath916 , where @xmath917 is the optimal solution , @xmath908 is the solution returned by the algorithm , and @xmath918 is a constant .",
    "observe that since @xmath919 , we have that @xmath920 and @xmath921 . therefore : @xmath922",
    "the lagrangian for this problem can be written as : @xmath925 where @xmath926 are lagrange multipliers , and @xmath927 are slack variables . the dual to this problem is : @xmath928 where @xmath929 . to maximize @xmath930 ,",
    "we first differentiate with respect to @xmath29 , @xmath116 : @xmath931 which gives : @xmath932 plugging this back into the expression for @xmath930 , and noticing that , since @xmath933 @xmath934 , @xmath930 is maximized for @xmath935 , we get that : @xmath936 since @xmath937 @xmath938 , and @xmath939 .",
    "let @xmath940 denote the primal objective .",
    "the duality gap for any pair of primal - feasible @xmath23 and dual - feasible ( nonnegative ) @xmath80 is given by : @xmath941 since the primal problem maximizes a concave function over a polytope , the strong duality holds @xcite , and therefore @xmath942 for any pair of primal - feasible @xmath23 and dual - feasible @xmath80 , with equality if and only if @xmath23 and @xmath80 are primal- and dual- optimal , respectively ."
  ],
  "abstract_text": [
    "<S> over the past two decades , fair resource allocation problems have received considerable attention in a variety of application areas . however , _ little progress has been made in the design of distributed algorithms with convergence guarantees for general and commonly used @xmath0-fair allocations_. in this paper , we study weighted @xmath0-fair packing problems , that is , the problems of maximizing the objective functions ( i ) @xmath1 when @xmath2 , @xmath3 and ( ii ) @xmath4 when @xmath5 , over linear constraints @xmath6 , @xmath7 , where @xmath8 are positive weights and @xmath9 and @xmath10 are non - negative . </S>",
    "<S> we consider the distributed computation model that was used for packing linear programs and network utility maximization problems . under this model , </S>",
    "<S> _ we provide a distributed algorithm for general @xmath0 _ that converges to an @xmath11approximate solution in time ( number of distributed iterations ) that has an inverse polynomial dependence on the approximation parameter @xmath12 and poly - logarithmic dependence on the problem size . </S>",
    "<S> _ this is the first distributed algorithm for weighted @xmath13fair packing with poly - logarithmic convergence in the input size . _ </S>",
    "<S> the algorithm uses simple local update rules and is stateless ( namely , it allows asynchronous updates , is self - stabilizing , and allows incremental and local adjustments ) . </S>",
    "<S> we also obtain a number of structural results that characterize @xmath13fair allocations as the value of @xmath0 is varied . </S>",
    "<S> these results deepen our understanding of fairness guarantees in @xmath13fair packing allocations , and also provide insight into the behavior of @xmath13fair allocations in the asymptotic cases @xmath14 , @xmath15 , and @xmath16 . </S>"
  ]
}
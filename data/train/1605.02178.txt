{
  "article_text": [
    "the bilateral filter was proposed by tomasi and maduchi @xcite as a non - linear extension of the classical gaussian filter .",
    "it is an instance of an edge - preserving filter that can simultaneously smooth homogenous regions and preserve sharp edges .",
    "we refer the reader to @xcite for a detailed survey of the working of the filter and its various applications .    before proceeding further , we set up the necessary notation and terminology .",
    "consider an image @xmath3 , where @xmath4 is some finite rectangular domain of @xmath5 ; we extend the image outside @xmath4 using symmetry , if required .",
    "consider the gaussian _ kernels _ @xmath6 and @xmath7 given by @xmath8 the former is called the spatial kernel and the latter is called the range kernel @xcite .",
    "the output of the gaussian bilateral filter is the image @xmath9 : i \\rightarrow \\mathbb{r}$ ] given by @xmath10(i ) = \\frac{\\sum_{j\\in \\omega } g_{\\sigma_s}(j ) \\",
    "g_{\\sigma_r } ( f(i - j ) - f(i ) ) f(i - j)}{\\sum_{j\\in \\omega } g_{\\sigma_s}(j ) \\   g_{\\sigma_r } ( f(i - j ) - f(i))}.   \\label{bf}\\ ] ] in practice , the domain of the spatial kernel @xmath11 is set to be @xmath12 \\times [ -w , w]$ ] , where @xmath13 @xcite .",
    "it is clear that the direct computation of requires @xmath0 operations per pixel . in general ,",
    "the direct implementation is slow for practical settings of @xmath1 @xcite . to overcome this ,",
    "researchers have come up with several fast algorithms ; e.g. , see @xcite .",
    "we refer the interested reader to @xcite for a survey of fast algorithms .",
    "the fast algorithms in @xcite are particularly relevant to the present work .",
    "the authors here approximate the gaussian range kernel using polynomial and trigonometric functions respectively , and demonstrate how the resulting filter can be decomposed into a series of spatial gaussian filtering .",
    "the degree ( or order ) of the spatial filtering is used to control the filtering accuracy ; the larger the degree , the better is the accuracy . on the other hand , since the gaussian filter can be implemented using @xmath2 operations per pixel ( e.g. , using separability and recursion @xcite ) , the overall approximation has @xmath2 complexity with respect to @xmath1 as a result . here and henceforth , by filtering accuracy",
    ", we will refer to the quality of the filtering in relation to that can be obtained using a given approximation .",
    "more recently , a novel approach was proposed in @xcite , where the author propose to approximate the range kernel using the so - called gauss - polynomials . similar to @xcite , the gauss - polynomial approximation allows one to decompose the bilateral filter into a series of gaussian filtering .",
    "in particular , it was demonstrated in @xcite that the gauss - polynomial approximation offers better accuracy compared to the polynomial approximation @xcite , and is more amenable to hardware implementation in contrast to the trigonometric approximations @xcite .    as will be demonstrated shortly ,",
    "it turns out that the gauss - polynomial approximation can result in low - accuracy filtering for images with lot of sharp edges , unless the degree of the polynomial is very high ( the run - time , however , scales with the degree ) .",
    "we trace the source of this problem to the taylor polynomials used in @xcite to approximate the exponential function over an interval . in particular ,",
    "while a taylor polynomial of fixed degree provides good approximation near the origin , the approximation tends to degrade as one moves away from the origin . in other words ,",
    "the error incurred by the approximation is not evenly distributed over the interval .",
    "as is well - known , this problem can be fixed by replacing the taylor polynomial with a chebyshev polynomial of the same degree . indeed",
    ", the chebyshev polynomials have the property that they balance out the error over the whole interval @xcite .",
    "we demonstrate that the filtering accuracy can indeed be increased ( often substantially ) by replacing the taylor polynomial with a chebyshev polynomial of the same degree .",
    "while the resulting algorithm structurally resembles the one in @xcite , the filtering now is shown to be much more accurate for images with sharp edges .",
    "importantly , the run - time of the proposed algorithm is almost identical to that of the algorithm in @xcite , and we retain the advantage of using polynomials that is advantageous for hardware implementations .",
    "the rest of the paper is organized as follows .",
    "we recall the gauss - polynomial approximation proposed in @xcite and the resulting fast algorithm in section [ sec : fbf ] .",
    "we next propose the gauss - chebyshev approximation in section [ sec : gca ] .",
    "we present some simulation results obtained using the proposed fast algorithm in section [ sec : sim ] , before concluding the paper .",
    "the proposed fast algorithm is an extension of the algorithm in @xcite .",
    "we now review the main ideas behind the fast algorithm in @xcite .",
    "the author here proceeds by factoring the range kernel @xmath14 in , where @xmath15 and @xmath16 , as follows : @xmath17 the variables @xmath18 and @xmath19 take on values in some intensity range @xmath20 $ ] .",
    "for example , @xmath21 and @xmath22 for a 8-bit grayscale image .",
    "the proposal in @xcite is to use taylor polynomials to approximate the third exponential term in ; the advantage of doing so will be evident shortly .",
    "in particular , setting @xmath23 , the following taylor approximation is considered @xmath24 the key observation in this context is that there is nothing special about taylor polynomials , and that any arbitrary polynomial could be used .",
    "of course , the advantage with taylor polynomials is that the coefficients have a particularly simple expression .",
    "continuing with our observation , we consider a general polynomial approximation @xmath25 where @xmath26 is the _ degree _ of the polynomial . substituting in , we arrive at the following approximation of : @xmath27 being the product of two gaussians and a polynomial , was referred to as the _ gauss - polynomial _ approximation in @xcite .",
    "we substitute into , and compute the numerator and the denominator of the resulting approximation . recalling that @xmath15 and @xmath16 , the numerator is given by @xmath28 next , for @xmath29",
    ", we construct the images @xmath30 and @xmath31 given by @xmath32 we then consider the output of the gaussian filtering @xmath33 of each @xmath34 , given by @xmath35 by exchanging the order of the summations , and after some manipulation , we can write as @xmath36 , where @xmath37 in an identical manner , we can approximate the denominator using @xmath38 , where @xmath39 in other words , the approximation of obtained using the kernel approximation in is given by @xmath40}(i ) = \\frac{p(i)}{q(i)}.\\ ] ] as remarked in @xcite , using the range approximation in , we have effectively transferred the non - linearity of the bilateral filter to the intermediate images in , which are obtained from the input image using simple pointwise transforms . the computational edge that we get from the above manipulation",
    "is that the filtering in can be computed using @xmath2 operations per pixel for any arbitrary @xmath1 @xcite .",
    "the overall cost of computing is therefore @xmath2 per pixel with respect to @xmath1 . on the other hand , the complexity is @xmath41 with respect to @xmath26 , since we are required to compute the @xmath42 images @xmath43 in and . needless to say ,",
    "we can obtain better approximation ( and hence better accuracy ) by increasing @xmath26 , but at the expense of the run - time .",
    "in this section , we present the so - called _ gauss - chebyshev _ approximation in which we use the chebyshev approximation of @xmath44 .",
    "this essentially amounts to computing the coefficients @xmath45 in .",
    "the motivation behind this choice comes from the well - known fact in approximation theory that , for a fixed degree , the chebyshev approximation outperforms the taylor approximation @xcite .",
    "in fact , taylor polynomials can be fairly poor to approximate a function , except perhaps on very small intervals .",
    "the ideal choice would have been the so - called _ minimax polynomial _ that minimizes the maximum absolute error ( @xmath46 error ) .",
    "however , finding such a polynomial is computationally expensive , and hence it is a common practice to settle for a near - minimax approximation such as that obtained using chebyshev polynomials @xcite .",
    "we now present some basic facts about chebyshev polynomials before turning to the proposed gauss - chebyshev approximation .",
    "the chebyshev polynomials @xmath47 are defined over the interval @xmath48 $ ] .",
    "they are given by the formula @xcite @xmath49.\\ ] ] the lowest - order polynomials are explicitly given by : @xmath50 , and so on .",
    "the higher - order polynomials can be computed using the recurrence @xmath51 this follows from definition .",
    "let @xmath52 be the coefficient of @xmath53 in @xmath54 , so that @xmath55 notice that induces a recursion on the coefficients @xmath56 .",
    "this can be used to compute @xmath56 in an efficient and stable manner @xcite .",
    "the coefficients can also be computed offline and stored in a look - up table .",
    "it follows from that @xmath54 has @xmath57 zeros over the interval @xmath58 $ ] , given by @xmath59 \\qquad ( k = 1,2,\\ldots , l).\\ ] ] the chebyshev polynomials satisfy a type of `` discrete '' orthogonality relationship @xcite in that @xmath60    a given function @xmath61 $ ] can be approximated in terms of chebyshev polynomials using the linear expansion @xmath62 where @xmath63 are the coefficients of the expansion .",
    "note that the function on the right is a polynomial of degree @xmath26 .",
    "a particularly simple means of fixing the coefficients is to sample @xmath64 at the zeros @xmath65 of @xmath66 .",
    "then , by exploiting the orthogonality relationship in , we get @xmath67 the approximation in obtained using is very close to the minimax approximation of @xmath64 @xcite .",
    "+      the present idea is to approximate the exponential function ( third factor ) in using chebyshev polynomials . in particular",
    ", we use the chebyshev approximation in for the polynomial in .",
    "this choice is motivated using a numerical example in figure [ comparison ] , where we compare the approximations achieved using taylor and chebyshev polynomials of the same degree .",
    ".jpg we see that the taylor polynomial tends to perform poorly as one moves away from the origin . on the other hand ,",
    "the chebyshev counterpart works well over the entire interval .",
    "there are , however , some details that we must pay attention prior to applying the approximation . as mentioned earlier , the expansion in is valid only for @xmath68 $ ] . in the present case ,",
    "the target function is @xmath69 , where @xmath23 .",
    "recall that @xmath15 and @xmath16 , which take values in the intensity range @xmath20 $ ] . since the chebyshev polynomials are defined on a symmetric domain , we first apply the following centering : @xmath70 where @xmath71 .",
    "let @xmath72 .",
    "one can verify that @xmath73 $ ] for all @xmath74 and @xmath75 .",
    "thus , we are required to approximate @xmath64 over the interval @xmath76 $ ] .",
    "to do so , we consider the following rescaled version of : @xmath77 for this expansion , formula becomes @xmath78 plugging into , we obtain @xmath79    in summary , the sequence of operations for computing using the gauss - chebyshev approximation , which we will henceforth refer to as the gauss - chebyshev filter ( gcf ) , is as follows :    * center the image using . *",
    "compute @xmath80}$ ] using the chebyshev approximation in .",
    "this is done using the fast algorithm in section [ sec : fbf ] . *",
    "undo the centering : @xmath81 }   = \\widehat{\\mathcal{b}[g ] } + t_c$ ] .",
    "we first present a couple of representative results in figures [ fig : tau100 ] and [ fig : vary_tau ] to demonstrate that the gauss - chebyshev approximation is indeed better that the gauss - polynomial approximation .",
    "indeed , the gauss - chebyshev approximation of the translated kernels are more accurate , particularly for large @xmath19 .",
    ".mse as a function of the degree @xmath26 when @xmath82 and @xmath83 .",
    "the checker image @xcite was used for the experiment . [ cols=\"^,^,^,^,^,^,^,^\",options=\"header \" , ]     [ tab : tp ]    further visual results are provided in figures [ testpat ] and [ barbara ] . notice in figure [ testpat ] that the gcf filtering is significantly better than some of the existing fast algorithms . on",
    "the other hand , gpf and gcf have almost identical performance for the barbara image in figure [ barbara ] .",
    "this is not surprising given that this image has far less sharp edges compared to the other images .",
    "+    finally , we compare the run times and the accuracy of various fast algorithms and report the results in table [ tab : tp ] .",
    "we see that the accuracy of gcf is substantially better that that offered by some of the existing fast algorithms , while its run - time is comparable . in general ,",
    "notice that the run - time of gcf is few orders smaller than that of the direct implementation of .",
    "+   +     +",
    "we proposed a fast algorithm for gaussian bilateral filtering based on the gauss - chebyshev approximation .",
    "in particular , we demonstrated that the algorithm is comparable with the gpf algorithm @xcite in terms of run - time , but performs significantly better on images that have lot of sharp edges .",
    "we note that the gpf algorithm was already shown in @xcite to be superior to existing fast algorithms for natural images , such as the barbara image in figure [ barbara ]",
    ". the proposed algorithm can be particularly useful for regularizing depth maps arising in stereo reconstruction , which exhibits sharp transitions .",
    "for example , it was demonstrated in @xcite that a local aggregation of the similarity score using bilateral weights significantly improves the disparity estimation .",
    "d. elliott , d. f. paget , g. m. phillips and p. j. taylor , `` error of truncated chebyshev series and other minimax polynomial approximations , '' _ journal of approximation theory _ ,",
    "49 - 57 , 1987 .",
    "n. brisebarre and m. joldes , `` chebyshev interpolation polynomial - based tools for rigorous computing , '' _ proc .",
    "international symposium on symbolic and algebraic computation , acm _ , pp .",
    "147 - 154 , new york , 2010 ."
  ],
  "abstract_text": [
    "<S> the bilateral filter is an edge - preserving smoother that has diverse applications in image processing , computer vision , computer graphics , and computational photography . </S>",
    "<S> the filter uses a spatial kernel along with a range kernel to perform edge - preserving smoothing . in this paper </S>",
    "<S> , we consider the gaussian bilateral filter where both the kernels are gaussian . </S>",
    "<S> a direct implementation of the gaussian bilateral filter requires @xmath0 operations per pixel , where @xmath1 is the standard deviation of the spatial gaussian . </S>",
    "<S> in fact , it is well - known that the direct implementation is slow in practice . </S>",
    "<S> we present an approximation of the gaussian bilateral filter , whereby we can cut down the number of operations to @xmath2 per pixel for any arbitrary @xmath1 , and yet achieve very high - quality filtering that is almost indistinguishable from the output of the original filter . </S>",
    "<S> we demonstrate that the proposed approximation is few orders faster in practice compared to the direct implementation . </S>",
    "<S> we also demonstrate that the approximation is competitive with existing fast algorithms in terms of speed and accuracy .    fast algorithm , bilateral filter , gaussian kernel , chebyshev polynomial , minimax approximation . </S>"
  ]
}
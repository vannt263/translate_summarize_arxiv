{
  "article_text": [
    "the classical _ secretary problem _ considers the situation that an employer wants to hire the best secretary from @xmath0 candidates that come one by one in a uniformly random order  @xcite . immediately after interviewing a candidate , the employer has to make an irrevocable decision of whether accepting this candidate or not .",
    "the goal of the employer is to maximize the probability of hiring the best one among these candidates .",
    "it is well known that the optimal solution is in a phase style : the employer firstly interviews @xmath9 candidates without selecting anyone , then , he / she chooses the first candidate who is better than all previous ones .",
    "this protocol hires the best candidate with probability @xmath10 and it is optimal  @xcite .",
    "this problem captures many scenarios for example , the employer may hire the candidate before a more suitable interviewee arrives , the seller may sell the item without knowing the future buyer who offers higher price , the company may accept an order without the knowledge that the future task is more urgent .",
    "this problem has been studied extensively in many fields , such as decision theory  @xcite , game theory  @xcite and theory of computation  @xcite , etc .",
    "the classical secretary problem has many generalizations .",
    "a natural kind of generalizations is to relax the requirement that only selecting the best one and instead , allow the employer hiring multiple candidates .",
    "kleinberg  @xcite considered that the employer selects multiple candidates with the objective to maximize the expectation of the total _",
    "values _ of selected persons , and he proposed the first protocol whose expected competitive ratio tends to @xmath5 when the number of choices goes to infinity .",
    "buchbinder et al .",
    "@xcite revealed an important relationship between the secretary problem and linear programming , which turns out to be a powerful method to construct optimal ( randomized ) protocols for many variants of secretary problems .",
    "those variants include the so called @xmath2-choice @xmath3-best problem that the employer wants to hire @xmath2 candidates from the best @xmath3 candidates of all .",
    "for the @xmath2-choice @xmath3-best problem , they construct a randomized optimal algorithm based on the optimal solution of corresponding linear program .",
    "another important variant is proposed by feldman et al .",
    "they were the first to introduce the parallel model . in their work , the candidates are divided into several queues to be interviewed by different interviewers .",
    "they studied two interesting settings : the quotas are pre - allocated and the quotas are shared by all interviewers . for these settings , they designed algorithms and analyzed the competitive ratios based on the random time arrival model @xcite .",
    "chan et al . @xcite",
    "combined the results of buchbinder et al .",
    "@xcite with the random time arrival model @xcite and considered infinite candidates . under their model , they constructed a @xmath11-threshold algorithm for @xmath2-choice @xmath3-best problem .",
    "they also showed that their infinite model can be used to capture the asymptotic behavior of the finite model . in this work ,",
    "we focus on the shared parallel model introduced by feldman et al .",
    "all the algorithms and analysis are based on the classical discrete and finite model .",
    "the parallel model can characterize many important situations where resource is limited or low latency is required .",
    "a typical case is the emergency diagnosis in hospital . to shorten the waiting time ,",
    "patients are diagnosed by ordinary doctors in parallel .",
    "the serious patients are selected to be diagnosed by the expert doctors , since the experts are not enough and they can only deal with limited number of patients .",
    "our main result is an optimal deterministic protocol , which we call _ adaptive observation - selection protocol _",
    ", for the _ shared @xmath1-queue @xmath2-choice @xmath3-best secretary problem _",
    "( abbreviated as _ shared @xmath12 problem _ ) . in this problem , @xmath0 candidates are assigned to @xmath1 queues and interviewed in parallel . all queues _",
    "share _ the @xmath2 quotas .",
    "besides , there is a set of weights @xmath13 where @xmath14 stands for how important the @xmath15-th rank is .",
    "the employer wants to maximize the expectation of the summation of the weight associated with the selected secretaries . to design an optimal protocol ,",
    "we generalize the linear program technique introduced by buchbinder et al . @xcite . to design an optimal protocol",
    ", we generalize the linear program technique introduced by buchbinder et al .",
    "@xcite . based on the optimal solution of lp model",
    ", one can design a randomized optimal algorithm .",
    "however , it is time consuming to solve the lp ( the lp has @xmath16 variables ) and the randomized algorithm is unpractical to apply .",
    "besides , although this lp model has been adopted in many work , its structure hasnt been well studied in general . with digging into its structure",
    ", we develop a nearly linear time algorithm to solve the lp within @xmath17 time .",
    "more importantly , our protocol is deterministic .",
    "it is also simple and efficient . after we show that this is not the case by providing a simple deterministic counterpart for shared @xmath12 problem .",
    "the key observation we use is that , besides the close relationship between the protocol of secretary problem and the feasible solution of linear program , the structure of the optimal solution reveals the essences of such problem , and actually points out the way to design a clean and simple deterministic protocol .",
    "our protocol can be extended to solve other extensions , as their lp models have the similar structure essentially . among those extensions , the optimal protocol for _ exclusive @xmath1-queue @xmath2-choice @xmath3-best secretary problem",
    "_ addresses an open problem in the work of feldman et al .",
    "@xcite .",
    "our protocol is a nature extension of the well known @xmath10-protocol of the classical problem . in the @xmath10-protocol ,",
    "the employer can treat the first @xmath9 candidates as an _ observation phase _ and set the best candidate in this phase to be a criteria . in the second phase ,",
    "the employer makes decision based on this criteria . in our problem , it is natural to extend the above idea to multiple phases in each queue and the criteria may change in different phases .",
    "actually , the similar intuition has been used in many previous works , not only the secretary problem @xcite , but also some other online problems such as online auction @xcite and online matching @xcite .",
    "this intuition seems straightforward , but it is hard to explain why it works . in this work , we theoretically prove that this intuition indicates the right way and can lead to optimality in our case .",
    "another contribution is that we provide theoretical analysis for the competitive ratio of non - weighted cases of our problem . for the _ @xmath18 case _",
    ", we provide a lower bound @xmath19 and some numerical results .",
    "for the _ shared @xmath20 case _ , we show that the optimal competitive ratio is approximately 0.372 which is better than 0.356 that obtained by feldman et al .",
    "@xcite .",
    "* more related work *  besides those results mentioned above , there are lots of works that are closely related to this one .",
    "ajtai et al .",
    "@xcite have considered the @xmath3-best problem with the goal to minimize the expectation of the sum of the ranks ( or powers of ranks ) of the accepted objects . in the _ matroid secretary problem _",
    "@xcite , it introduces some combinatorial restrictions ( called matroid restriction ) to limit the possible set of selected secretaries .",
    "another kind of combinatorial restriction is the knapsack constraints  @xcite .",
    "they combined the online knapsack problem and the idea of random order in secretary problem .",
    "another branch of works consider the value of selected secretaries .",
    "it is no longer the summation of values of each selected one , but will be a submodular function among them  @xcite . besides , feldman et al .",
    "@xcite considered the secretary problem from another interesting view .",
    "they assumed all of the candidates come to the interview at a random time instead of a random order .",
    "some works talked about the case that only partial order between candidates are known for the employer  @xcite .",
    "there are also some works considering the secretary problem from the view of online auction  @xcite . in these works ,",
    "one seller wants to sell one of more identical items to @xmath0 buyers , and the buyers will come to the market at different time and may leave after sometime .",
    "the goal of the seller is to maximize his / her expected revenue as well as the concern of truthfulness .",
    "in this section we formally define the shared @xmath12 problem . given positive integers @xmath21 and @xmath0 with @xmath22 , suppose the employers want to hire @xmath2 secretaries from @xmath0 candidates that come one by one in a uniformly random order .",
    "there are @xmath1 interviewers . due to practical reason , like time limitation",
    ", they do the interview in parallel .",
    "all candidates are divided into @xmath1 queues , that is , the @xmath23-th person is assigned to the queue numbered @xmath24 ( @xmath25 ) .",
    "the employers then interview those candidates simultaneously .",
    "all the @xmath2 quotas are shared by the @xmath1 queues .",
    "that means in each queue , the employers can hire a candidate if the total number of hired persons is less than @xmath2 .",
    "the only information shared among @xmath1 queues is the number of the candidates already hired .",
    "thus the employer in each queue only knows the relative order about those candidates already interviewed in his / her own queue but has no idea about those unseen ones and persons in other queues . after interviewing each candidate",
    ", the employer should make an irrevocable decision about whether employ this candidate or not .",
    "for the sake of fairness , we make a reasonable assumption that the duration of the interviewing for each candidate is uniform and fixed .",
    "this ensures the interview in each queue is carried out in the same pace .",
    "when employers in several queues want to hire the candidate in their own queues at the same time , to break the tie , the queues with smaller number have higher priority .",
    "besides , we suppose the employers only value the best @xmath3 candidates and assign different weights to every one of the @xmath3 candidates and those weights satisfies @xmath26 where the @xmath14 stands for the importance of the @xmath15-th best candidate in the employer s view .",
    "candidates not in best @xmath3 can be considered have a weight 0 .",
    "the object function is to maximize the expectation of the summation of the weight of selected candidates .",
    "this is the so called _ shared @xmath1-queue @xmath2-choice @xmath3-best secretary problem _ , and we abbreviate it as _ shared @xmath12 problem _ for convenience .",
    "in this section , we first characterize the shared @xmath12 problem  by a linear program and then construct a deterministic protocol for the shared @xmath12 problem .",
    "we will talk about the relationship between the linear program and our protocol , and finally use the idea of primal and dual to show our protocol is optimal .",
    "we use a linear program to characterize the shared @xmath12 problem   and provide its dual program .",
    "this approach was introduced by buchbinder et al .",
    "@xcite to model the @xmath2-choice @xmath3-best problem .",
    "we are the first to generalize it to the shared @xmath12 problem .    * primal program for the shared @xmath12 problem *   without loss of generality , we assume @xmath0 is a multiple of @xmath1 .",
    "let @xmath27 stand for the @xmath23-th candidate in @xmath28-th queue and @xmath29 stand for the probability that @xmath27 is selected as the @xmath30-th one given that he / she is the @xmath15-th best person up to now in @xmath28-th queue .",
    "when the @xmath31 and the weights are given , we know the offline optimal solution is @xmath32 . we denote it as @xmath33 .",
    "then we can model the shared @xmath12 problem  as follow .",
    "@xmath34    we briefly explain this program .",
    "as we can see , @xmath27 will be selected in @xmath30-th round only if there are exact @xmath35 candidates are selected _ before _",
    "@xmath27 . consequently , according to the definition of @xmath29 , it is clear that @xmath29 must be less than the probability that @xmath35 candidates are selected .",
    "thus we have the following inequality .",
    "@xmath36    note that when @xmath37 , the constraint actually is @xmath38 however , for the convenience of description , we add a set of dummy variables @xmath39 , and set @xmath40 while others to be 0 .",
    "this makes @xmath41 so that the lp has a uniform constraint for all @xmath42 .",
    "consider the object function .",
    "let @xmath43 stand for the random variable of the summation of weights of the selected candidates .",
    "then , we have @xmath44 thus , the competitive ratio is @xmath45 .",
    "it is just our objective function .    for further analysis",
    ", we provide several definitions about the primal program .",
    "we call the constraint @xmath46 for @xmath47 , the _ crucial constraint _ for @xmath29 .    given a feasible solution of the primal program , if there are @xmath48 points @xmath49 satisfy @xmath50 for all @xmath51 , @xmath42 , @xmath52",
    ", we call this feasible solution _ @xmath53-solution _ of the primal program , and @xmath54 is the crucial position for @xmath55 .",
    "note that , in a @xmath53-solution , only when @xmath56 , we consider the crucial constraint for the @xmath29 is _ tight _ , otherwise , the crucial constraint is _ slack _ , even though the constraint may be tight actually , that s @xmath57 * dual program *  suppose @xmath58 .",
    "we have the dual program : @xmath59    in this program , we add a set of dummy variables @xmath60 and set them to be 0 for brief . respectively",
    ", we can define the _ crucial constraint _ and _ crucial position _ for the @xmath61 and the _ @xmath53-solution _ for this dual program .",
    "@xmath62 : @xmath48 crucial positions , initially 1 + @xmath63 : initially 0 +    the protocol consists of two parts .",
    "the first part ( algorithm [ sec3:alg : sep ] ) takes @xmath2 , @xmath3 , @xmath1 and @xmath0 as inputs and outputs @xmath48 positions \\{@xmath64}. we will show some properties about these positions later .",
    "the preprocessing part actually solves the dual program as defined in section [ sec : name : lpmodel ] .",
    "but it is more efficient than the ordinary lp solver .",
    "it is easy to check if we calculate the value of @xmath61 in line 7 carefully , the time complexity of the algorithm is @xmath17 .    the second part ( algorithm [ sec3:alg : aosp ] ) takes the output of preprocessing part as input and does the interview on @xmath1 queues simultaneously . for each queue , this protocol consist of @xmath2 rounds .",
    "when @xmath30 ( @xmath65 ) persons were selected from all queues , the protocol will enter the @xmath66-th round immediately . in each round , the protocol divided candidates in each queue into @xmath67 phases .",
    "for each queue , in the @xmath15-th ( @xmath52 ) phase , that s from @xmath68-th candidate to @xmath69-th candidate , the protocol selects the @xmath70-th best person of previous @xmath71 phases in this queue as criteria , and just hires the first one that better than this criteria .",
    "candidates in each queue come up one by one .",
    "for each candidate , the employers check the number of candidates selected to determine the current round , and then query the current phase based on the position of current candidate , and finally make decision by comparing with criteria of this phase .",
    "the protocol will terminate when all candidates were interviewed or @xmath2 candidates are selected . in the protocol , we define a _ global _ order which is consistent with the problem definition . using @xmath27 to stand for the @xmath23-th candidate of @xmath28-th queue .",
    "we say @xmath72 comes _ before _",
    "@xmath27 if @xmath73 or @xmath74 and @xmath75 .    [ sec3:alg : aosp ]    let @xmath76 to be @xmath77 +      in the rest of this work , we use @xmath78 to stand for the value of @xmath79 obtained from the preprocessing part for @xmath80 .",
    "these two notations @xmath61 and @xmath78 should be clearly distinguished .",
    "the former is a variable in the dual program , while the latter is a value we get from the preprocessing part .      for the clarity of the proof",
    ", we distill some fundamental results in this part . the proposition [ sec3:prop : bik ] talks about two properties of @xmath81 defined in the dual program , and the lemma [ sec3:prop : iqjk ] , [ sec3:prop : jgeq ] reveal some important properties of the preprocessing part .",
    "the lemma [ sec3:prop : recurrence ] considers a recurrence pattern .",
    "this recurrence can be used to explore the structure of the constraints of the dual program .",
    "[ sec3:prop : bik ]    _ * a. * _ according to the definition of @xmath81 , we have @xmath82 let @xmath83 .",
    "we only need to prove @xmath84 is non - positive as the rest part of above expression is always positive .",
    "the sign of @xmath85 is determined by the part @xmath86 which is increasing when @xmath15 increases .",
    "when @xmath87 , @xmath88 due to @xmath89 .",
    "let @xmath90 stand for the maximum @xmath15 that makes @xmath91 .",
    "that s to say , we have @xmath92 because @xmath93 , so we have @xmath94 , and @xmath95 .",
    "thus @xmath96 let @xmath97 , then it is sufficient to prove @xmath98 .",
    "next , we prove @xmath99    fix @xmath100 , and we use induction on @xmath3 to prove it .",
    "the basis case is @xmath101 .",
    "we have @xmath102 , which satisfies the equation [ equ ] .",
    "suppose equation  [ equ ] is held for @xmath103 .",
    "we have @xmath104 so the equation [ equ ] is true and we have @xmath98 .",
    "consequently , it is true that @xmath105 . _ * b. * _ let the left part subtract the right part and we get @xmath106 firstly , we show the following equation @xmath107    we use induction on @xmath3 to prove it .",
    "the basis is the case when @xmath108 : both the left part and the right part of equation [ equ1 ] are @xmath109 .",
    "so the equation [ equ1 ] is held for @xmath108 .",
    "then , for general @xmath110 , we assume that the equation  [ equ1 ] is held for @xmath111 .",
    "we have @xmath112 thus , by induction , the equation  [ equ1 ] is held .",
    "let @xmath85 stand for @xmath113 , then the sign of @xmath85 depends on the sign of @xmath114 which is decreasing as @xmath15 increases .",
    "let @xmath115 stand for the maximum @xmath15 such that @xmath85 is non - negative .",
    "it means that @xmath116 as @xmath14 is non - increasing with @xmath15 goes up , we have @xmath117 thus , we finish the proof .    [",
    "sec3:prop : iqjk ]    note that the several proofs including this one heavily depend on a _ key observation _ that @xmath118 is always true according to the preprocessing part , and the left side and right side must be equal if @xmath119 .",
    "in the preprocessing part , @xmath120 records the crucial position that the value of @xmath78 transforms from positive to zero . that is to say @xmath121 while @xmath122 .    when @xmath119 , according to the key observation mentioned above , we have @xmath123 the last inequality is due to proposition  [ sec3:prop : bik].b .",
    "thus , we have @xmath124 .",
    "when @xmath125 , it is obvious that @xmath126 as the preprocessing part always assigns a non - negative value to @xmath127 .",
    "so , @xmath128 is always no less than @xmath129 .",
    "this implies @xmath130 .",
    "[ sec3:prop : jgeq ]    according to lemma [ sec3:prop : iqjk ] , we have @xmath131 .",
    "it is clear that @xmath132 when @xmath133 , as @xmath134 may be equal to 0 , we have @xmath135 @xmath136 then we can get @xmath137 from equation [ sec3:temp : eq1 ] and [ sec3:temp : eq2 ] and the condition that @xmath138 , we have @xmath139 .",
    "this lemma is certainly true when @xmath140 .",
    "[ sec3:prop : recurrence ]    let @xmath141 , thus @xmath142 .",
    "the @xmath143 can be divided into @xmath144 segments .",
    "the @xmath23-th segment is when @xmath145 .",
    "we use induction on @xmath23 to show the lemma is held on every segment .",
    "firstly , we consider the @xmath144-th segment , that s when @xmath146 . in this segment ,",
    "the value of @xmath147 is fixed to be @xmath144 .",
    "thus the recursion can be rewritten as @xmath148 from the view of @xmath149 , @xmath144 can be considered as a constant integer . there has @xmath150 finally , we get @xmath151 note that the coefficient of @xmath152 is negative and that of @xmath153 is positive , so in this interval , that s in the @xmath144-th segment , the lemma is true .",
    "we define a sequence @xmath154 , and @xmath155 satisfies @xmath156 through the same procedure for the analysis of @xmath157 , we can conclude that @xmath158 have the same property decribed in this lemma .",
    "we say @xmath158 is compatible .",
    "using induction , we suppose from @xmath159-th segment to @xmath144-th segment , that s @xmath160 , this lemma is true and all @xmath161 , @xmath162 , are compatible .",
    "our target is to show for @xmath23-th segment , that s when @xmath145 , this lemma still held and @xmath155 is compatible too .",
    "let @xmath163 . from the equation",
    "@xmath164 we can obtain that @xmath165 the value of @xmath166 will decrease when decreasing @xmath152 or increasing values in @xmath167 because these operations will make @xmath168 increase .",
    "then , when @xmath145 , we have @xmath169 comparing equation [ sec3:equ : tempfori ] and equation [ sec3:equ : genei ] , we find they are of the same form as @xmath166 can be considered as a constant . using the same method as when @xmath170 , we get the conclusion that @xmath143 will increase when values in @xmath167 increase or @xmath166 decreases .",
    "taking the relationship between @xmath166 , @xmath167 and @xmath152 into consideration , we know the lemma is held for @xmath23-th segment , that s @xmath171 .",
    "besides , it is easy to show @xmath155 still keeps compatible using the same method as when @xmath172 . using induction , we finish the proof .",
    "the main idea of the proof is described as follow .",
    "firstly we show the fact that the adaptive observation - selection protocol can be mapped to a feasible @xmath53-solution of the primal program ( lemma [ sec3:lemm : algtoprimal ] ) while the @xmath173 obtained from the preprocessing part is corresponding to a feasible @xmath53-solution of the dual program ( lemma [ sec3:lemm:01ofdual ] ) .",
    "then , we argue that these two feasible @xmath53-solutions satisfy the _ theorem of complementary slackness _ ( theorem [ sec3:theo : optimality ] ) .",
    "thus both the solutions are optimal respectively .",
    "this means our protocol is optimal .",
    "[ sec3:lemm : algtoprimal ]    as mentioned before , we use @xmath27 to stand for the @xmath23-th candidate in @xmath28-th queue , and we say @xmath174 is before @xmath27 if @xmath175 or @xmath176 and @xmath177 . besides , we use @xmath178 to stand for the event that @xmath27 is selected in the @xmath30-th round ( that s the @xmath30-th one selected in all queue ) given that he / she is the @xmath15-th best from @xmath5 to @xmath23 in queue @xmath28 by the protocol . that s , @xmath179 .",
    "according to the adaptive observation - selection protocol , when @xmath180 , we know @xmath181 , however , when @xmath182 , @xmath27 must be selected given he / she is the @xmath15-th best up to now .",
    "thus the event @xmath178 happens is reduced to exact @xmath35 persons were hired in all queues before @xmath27 .",
    "denote @xmath183 as the event that there are at least @xmath30 persons selected before person @xmath27 in all queue and @xmath184 as the event that @xmath27 was selected in @xmath30-th round .",
    "thus we have @xmath185 on the other hand , we have @xmath186 combining above results , we get @xmath187 this is the definition of the @xmath53-problem , and we can see @xmath120 is the crucial position for @xmath29 .    the multiple queues contribute lots of complexity to the dual program . before the proof of lemma [ sec3:lemm:01ofdual ] , we provide a closely relative proposition to simplify the lp model .",
    "[ sec3:prop : qqueuesto1 ] the crucial constraint in the dual program @xmath188 is equivalent to the inequality @xmath189 with the relationship @xmath190 where @xmath191 .    this proposition is obtained by merging the @xmath1 queues into a single queue according to the order candidates come , that s a sequence as @xmath192 as we can see , the relationship between @xmath193 and @xmath61 is a bijection .",
    "all properties mentioned before for @xmath61 are still held for @xmath193 .",
    "the relationship between the preprocessing part and the dual program is the essential and most complicate part in this work .",
    "as the dual program is extremely complex , insight on the structure should be raised .",
    "the proof relies heavily on the properties of the preprocessing part and the dual program revealed in preparation part .",
    "[ sec3:lemm:01ofdual ]    at first , we prove that the @xmath78 is a feasible solution . from the preprocessing part , it is easy to show that the @xmath78 satisfies the non - negative constraint .",
    "when @xmath119 , we know the crucial constraint for @xmath61 is tight .",
    "when keeping tight makes @xmath194 , setting it to zero will still satisfy the crucial constraints and make the crucial constraint of @xmath61 slack .",
    "so , the @xmath78 satisfies the crucial constraint .",
    "thus we just need to show that @xmath78 has @xmath53 property .",
    "considering the proposition [ sec3:prop : qqueuesto1 ] .",
    "let @xmath195 where @xmath196 , and use @xmath197 stand for @xmath147 for concision . if we can show that there is a @xmath198 make @xmath199 satisfy @xmath200 for all @xmath30 and @xmath15 , it is sufficient to get the conclusion that @xmath78 satisfies the @xmath53 property",
    ". we complete this proof by induction on @xmath30 .",
    "the hypotheses of the induction are , for any @xmath30 , @xmath42 ,    1 .",
    "@xmath201 for @xmath202 ; 2 .",
    "there is a @xmath198 that makes @xmath199 satisfy equation [ sec3:equ : yt01 ] for all @xmath52 .",
    "the basis is when @xmath203 .",
    "the hypothesis 1 , @xmath204 , is held for any @xmath205 as @xmath206 is set to 0 .",
    "the hypothesis 2 can be shown based on hypothesis 1 . according to preprocessing part ,",
    "when @xmath207 , we have the equation @xmath208 multiplying @xmath197 on both sides , we get @xmath209 considering the right part of above equation .",
    "when @xmath149 is going down , the first term , @xmath210 , is non - increasing due to the proposition [ sec3:prop : bik].a , while the second term is non - decreasing because @xmath211 .",
    "thus , the right part totally is monotone and non - increasing when @xmath149 goes down",
    ". let @xmath149 keep going down , once @xmath212 is set to zero , for all @xmath213 , @xmath214 will be set to zero by preprocessing part , because the left part must be non - positive .",
    "that s to say , there must be a @xmath215 that makes @xmath216 satisfy the equation [ sec3:equ : yt01 ] .",
    "the @xmath215 is at least 1 .",
    "note that the procedure to show hypothesis 2 is independent on the value @xmath2 or @xmath15 , that s to say , this proof works for any @xmath30 .",
    "so we have the following fact .",
    "[ sec3:fact : temp1 ] for any @xmath30 , @xmath42 , if the hypothesis 1 is held for all @xmath15 , @xmath52 , the hypothesis 2 is held too .",
    "now we begin the induction part , and assume the hypothesis 1 and 2 are held from @xmath217 to @xmath2 for any @xmath149 and @xmath15 .",
    "the target is to show the hypotheses are also held for @xmath30 .",
    "note that due to fact [ sec3:fact : temp1 ] , we just need to show hypothesis 1 is held .    to show the hypothesis 1",
    "is held for @xmath30 , we use induction on @xmath15 and the basis is the case @xmath218 , that s to show @xmath219 for all @xmath149 .",
    "as we can see , for large enough @xmath149 ( at most @xmath220 ) , both @xmath221 and @xmath222 are greater than 0 . by lemma [ sec3:prop : iqjk ] ,",
    "@xmath223 and @xmath193 are greater than zero for @xmath52",
    ". then we have @xmath224 for @xmath52 .",
    "let @xmath225 and @xmath226 . add up the both sides of equation [ sec3:equ : temp16 ] and equation [ sec3:equ : temp17 ] for all @xmath52 respectively",
    ", we get @xmath227 it is not hard to see the above equations [ sec3:temp3:1 ] and [ sec3:temp3:2 ] satisfy the recursion described in lemma [ sec3:prop : recurrence ] .",
    "thus we have @xmath228 because of @xmath229 according to the induction hypothesis @xmath230 for @xmath231 . on the other hand , through manipulation on equations [ sec3:equ : temp16 ] to [ sec3:temp3:2 ] , we have @xmath232 then , we know @xmath233 is held when @xmath234 .",
    "recall that @xmath223 , @xmath52 , has the @xmath53 property due to the hypothesis .",
    "when @xmath235 , that s for @xmath236 , @xmath219 is held too , because @xmath221 is always set to be non - negative by the preprocessing part .",
    "thus we finish the proof for the basis @xmath218 .    then , we show for a general @xmath15 , @xmath237 is held given that @xmath238 for @xmath239 by induction .",
    "denote the largest @xmath149 that makes @xmath240 equal to 0 as @xmath241 . if @xmath242 , for @xmath243 , we have @xmath244 .",
    "so @xmath237 due to lemma [ sec3:prop : jgeq ] . because @xmath245 has the @xmath53 property , @xmath246 for @xmath247 .",
    "this is sufficient to show @xmath237 for all @xmath149 .    otherwise ,",
    "if @xmath248 , we just consider the interval @xmath249 , because when @xmath250 , we can using lemma [ sec3:prop : jgeq ] to get the conclusion like previous paragraph .",
    "suppose @xmath251 is the largest @xmath149 that satisfies @xmath252 and @xmath253 .    from now ,",
    "consider @xmath254 . in the interval",
    ", we have @xmath255 and @xmath256 . besides , for @xmath239 , @xmath257 as @xmath258 according to lemma [ sec3:prop : iqjk ] and @xmath259 due to hypothesis @xmath238 . for @xmath260",
    ", we have @xmath261 as @xmath262 .",
    "we can suppose @xmath263 and if we can show @xmath264 under this assumption , then , the assumption must be true according to the property of preprocessing part .",
    "let @xmath265 and @xmath266 the above equations [ sec3:tempd:1 ] and [ sec3:tempd:2 ] are obtained due to the fact that the constraints for @xmath267 and @xmath268 , that s to say , they satisfy the equation [ sec3:equ : temp16 ] .",
    "we can see @xmath269 due to @xmath237 by the induction hypothesis .",
    "apply @xmath270 and @xmath271 into equation [ sec3:equ : temp22 ] and [ sec3:equ : temp23 ] , we have @xmath272 by adding up @xmath273 and @xmath274 for @xmath100 from 1 to @xmath15 from equation [ sec3:temp1:1 ] and [ sec3:temp1:2 ] , we can obtain @xmath275 compare above two equations with lemma [ sec3:prop : recurrence ] , we can get @xmath276 .",
    "thus @xmath277 then , our assumption is true and we get the result @xmath237 we want .    next , we show that there does nt exist such a @xmath251 , which means at least when @xmath278 we have @xmath279 .",
    "if such @xmath251 exists , that s @xmath280 , we have @xmath281 the third line is obtained from proposition [ sec3:prop : bik ] and the fact @xmath237 for @xmath282 .",
    "it is a contradiction with @xmath280 . up to now",
    ", we showed that for @xmath283 , @xmath237 is true . when @xmath247 this is necessarily true for @xmath284 .",
    "thus , using induction on @xmath15 , we can show that for @xmath285 , @xmath237 .",
    "that s to say , the hypothesis 1 for a general @xmath30 is held . according to the fact [ sec3:fact : temp1 ]",
    ", hypothesis 2 is also held .",
    "then , @xmath199 has the @xmath53 property for @xmath52 .",
    "we finish the induction part of this lemma for general @xmath30 .",
    "finally , using induction on @xmath30 , we finish this proof of equation [ sec3:equ : yt01 ] .",
    "that s the @xmath199 has the @xmath53 property . according to proposition [ sec3:prop : qqueuesto1 ]",
    ", @xmath78 also has the @xmath53 property and thus finish this lemma .",
    "besides we have @xmath286 from @xmath287 for @xmath288 , we can get respective @xmath289 where @xmath290 .",
    "this also means @xmath291 .",
    "the crucial positions play a key role in the protocol , and up to now , some properties of them have been revealed .",
    "we summarize those properties here .",
    "for @xmath292 we have @xmath293 and @xmath294    employing the complementary slackness theorem , we can show the our protocol is optimal .",
    "[ sec3:theo : optimality ]    using @xmath295 , to stand for the @xmath53-solution of the primal program that can be mapped to the adaptive observation - selection protocol .",
    "this means we have @xmath296 for @xmath297 .",
    "note that in above equation , we use a set of dummy values @xmath39 for convenience as mentioned in the definition of the primal program . on the other hand",
    ", we have @xmath298 for @xmath297 .    using @xmath299 and @xmath300 to stand for the value of slackness variables of @xmath301 and @xmath78",
    ". then we have @xmath302 and @xmath303 for all @xmath304 .",
    "this is because when @xmath305 , both @xmath301 and @xmath78 equal to 0 ; when @xmath306 , both @xmath307 and @xmath300 equal to 0 due to the crucial constraints of @xmath29 and @xmath61 are tight . through the theorem of complementary slackness",
    ", we know the two @xmath53-solutions are optimal for their respective program .",
    "thus , the adaptive observation - selection protocol is optimal for the shared @xmath12 problem .",
    "our optimal protocol is based on the essential structure of the lp model .",
    "several variants can be characterized by lp model with similar structure . thus our optimal protocol can be extended to solve these related variants .",
    "it is obvious that we can obtain an optimal protocol for weighted @xmath2-choice @xmath3-best secretary problem when @xmath1 is set to be 1 .",
    "based on the @xmath2-choice @xmath3-best problem , we consider another variant : the employer just interviews the first @xmath308 candidates , @xmath309 , due to time or resource limitation .",
    "other settings keep unchanged .",
    "we call this problem _ fractional @xmath2-choice @xmath3-best secretary problem_. we can characterize this problem by a lp program called @xmath310 as follow : @xmath311 note that , like the lp [ sec3:equ : lpprimal ] , we add some dummy variables @xmath312 , @xmath313 and @xmath52 , and set @xmath314 so that the constraints of this @xmath310 has a uniform form",
    ".    the @xmath310 has the same structure with the lp [ sec3:equ : lpprimal ] , and all the properties used to show the optimality of the adaptive observation - selection protocol are still held .",
    "thus , our protocol can be easily generalized to solve this problem . in the shared @xmath12 problem ,",
    "all interviewers _ share _ the @xmath2 quotas .",
    "another case is that a fixed quota is preallocated to each queue , that s to say , in any queue @xmath28 , the employer can only hire at most @xmath315 candidates where @xmath316 .",
    "besides , we suppose there are @xmath317 candidates in queue @xmath28 so that @xmath318 . other settings , except the synchronous requirement , keep unchanged compared to the shared @xmath12 problem .",
    "this is the problem which is called _",
    "exclusive @xmath1-queue @xmath2-choice @xmath3-best secretary problem _  ( abbreviated as exclusive @xmath12 problem ) .",
    "feldman et al . @xcite",
    "have considered the non - weighted version of the exclusive @xmath12 problem  with the condition @xmath319 .",
    "actually , for each queue of the exclusive @xmath12 problem , since what we care about is the expectation and the candidates information and quotas can not be shared , how employer selects candidate has _ no influence _ on other queues .",
    "so , it is an independent fractional weighted @xmath315-choice @xmath3-best secretary problem with @xmath320 in each queue .",
    "then , running the modified adaptive observation - selection protocol on each queue is an optimal protocol for exclusive @xmath12 problem .",
    "let @xmath321 stand for the competitive ratio of adaptive observation - selection protocol .",
    "for the general case , @xmath321 is complicated to analyze either from the view of protocol or the dual program . in this section ,",
    "we provide analysis about two typical cases : the @xmath18 case and the @xmath20 case .",
    "both the cases we deal with are the uniformly weighted ( or non - weighted ) versions of shared @xmath12 problem , i.e. @xmath322 . the first one we study is the @xmath18 case that selecting @xmath5 candidate among the top @xmath3 of @xmath0 candidates with just one queue .",
    "it is also called @xmath3-best problem .",
    "suppose @xmath323 and @xmath324 are real numbers that satisfy @xmath325 .",
    "consider the algorithm [ sec4:alg : simp ] .",
    "[ sec4:alg : simp ]    the first @xmath326 candidates , just interview but do nt select anyone +    as our adaptive observation - selection protocol is optimal , the performance of this algorithm [ sec4:alg : simp ] is a lower bound of our protocol .",
    "we get the following lower bound of @xmath327 based on the analysis of this three - phase algorithm .",
    "we have the following theorem .",
    "[ sec4:theo : ratiok ]    for the concision of the proof , we suppose both @xmath328 and @xmath329 are integers without loss of generality",
    ".    define the range from @xmath330-th candidate to @xmath331-th candidate as _ phase 1 _ and the range from @xmath329-th candidate to @xmath0-th candidate as _ phase 2_. let @xmath332 , @xmath52 , stand for the @xmath15-th best candidate and @xmath333 stand for the event that the @xmath332 is selected by the algorithm . more specifically ,",
    "denote @xmath334 , @xmath335 , as event that @xmath332 is selected in phase @xmath30 when he / she is the @xmath100-th best up to now .",
    "suppose @xmath332 is selected is phase @xmath5 .",
    "his / her position is @xmath23 with probability @xmath336 .",
    "@xmath332 must be the _ best _",
    "candidate for @xmath5 to @xmath23 .",
    "that s to say the best candidate from position @xmath5 to @xmath337 must come before @xmath328 , which happens with probability @xmath338 . besides all candidates that better than @xmath332 must come after @xmath23 .",
    "the probability of this event is @xmath339 . to sum up , we have @xmath340    when selected in phase 2 , the @xmath332 can be the best or the second best up to now .",
    "then , similar to in phase 1 , @xmath341 @xmath342 in above formula means the probability that the second best candidate from position @xmath5 to @xmath337 must come before @xmath329 .",
    "when @xmath343 happens , it means there is exact one candidate that better than @xmath332 comes before position @xmath328 and the second best candidate from 1 to @xmath337 comes before @xmath344 .",
    "so , there has @xmath345 in the first line of above equation , @xmath346 means all possible ways to choose @xmath337 candidates that there is exact @xmath5 candidate better than @xmath332 .",
    "we define the ratio of algorithm [ sec4:alg : simp ] as @xmath347",
    ". then we have @xmath348 we calculate its value separately as follow .",
    "@xmath349    @xmath350    @xmath351    then the @xmath347 can be estimated .",
    "when @xmath0 is large enough and @xmath352 , we have @xmath353 define @xmath354 , and let @xmath355 , and @xmath356 , we get @xmath357 on the other hand , @xmath358 thus , we can conclude that @xmath359 when @xmath360 are large enough and @xmath361 .",
    "finally , we have @xmath362 .",
    "the adaptive observation - selection protocol performs much better in fact .",
    "table [ sec4:table:1 ] is the result of numerical experiment for small @xmath3 .",
    "as we can see , @xmath327 goes to 1 sharply .",
    "but it is too complex to analyze when there are @xmath67 phases .",
    ".the value of @xmath327 when @xmath363[sec4:table:1 ] [ cols=\"^,^,^,^,^,^,^,^,^,^ \" , ]     another case is when @xmath364 .",
    "the main idea is to calculate the optimal @xmath53-solution of the dual program based on the preprocessing part .",
    "this analysis is almost accurate when @xmath0 is large enough .",
    "we have the following result .",
    "[ sec4:theo : theoforttt ]    the main idea of the proof is calculate the optimal solution of the dual program according to preprocessing part .",
    "the method is based on the proof of lemma [ sec3:lemm:01ofdual ] .    in this proof",
    ", we employ a set of real numbers @xmath365 that satisfy @xmath366 .",
    "note that @xmath367 is independent on @xmath28 because @xmath368 . as what we concern is the value of @xmath367",
    ", we can consider that @xmath369 is equal to @xmath370 in the following proof as @xmath0 is large enough .",
    "we define @xmath371 and @xmath372 . without loss of generality ,",
    "we suppose @xmath0 is even .",
    "when the @xmath373 , we know @xmath374 for above equations , add up @xmath375 , we get @xmath376 applying @xmath377 to above equation , we can get @xmath378 on the other hand , we have @xmath379 . thus we can easily get the follow recursion about @xmath377 .",
    "@xmath380 solving this recursion we have @xmath381 .",
    "when @xmath382 , @xmath383 .",
    "now we want to know the value of @xmath384 . when the constraint is tight we have @xmath385 considering the property of @xmath386 .",
    "there are @xmath387 when @xmath388 , we can consider @xmath389 without loss much of accuracy of @xmath384 .",
    "then , we have @xmath390 solving above equation we get @xmath391 .    when @xmath392 , we know @xmath393 , thus @xmath394 .",
    "similar to equation [ sec : app : temp37 ] , following equation can be obtained @xmath395 similarly , the following recursion is held in this interval @xmath396 when @xmath397 , solving this recursion we get @xmath398 .",
    "again , solving @xmath399 we can get the value of @xmath400 accurate enough . that the @xmath400 satisfies @xmath401",
    "we can get @xmath402 .",
    "the procedure to calculate @xmath403 and @xmath404 is the same but more complex and tedious .",
    "we simply list the main result here .",
    "@xmath405 besides , @xmath406 satisfy @xmath407 finally , we get @xmath408 and @xmath409 .",
    "in this paper , we deal with a generalization of secretary problem in the parallel setting , the shared @xmath1-queue @xmath2-choice @xmath3-best secretary problem , and provide a deterministic optimal protocol .",
    "this protocol can be applied to a series of relevant variants while keeps optimal .",
    "in addition , we provide some analytical results for two typical cases : the 1-queue 1-choice @xmath3-best case and the shared 2-queue 2-choice 2-best case",
    ". there are several interesting open problems .",
    "the first one is making a tighter analysis of the competitive ratio for shared @xmath1-queue @xmath2-choice @xmath3-best secretary problem .",
    "for the @xmath5-queue @xmath5-choice @xmath3-best case , we conjecture that the competitive ratio has the form of @xmath410 for some negligible function @xmath411 . for the general case",
    ", there is no notable result up to now and lots of work remain to be done .",
    "another interesting aspect is to know whether the technique in this paper can be used to find deterministic protocol for other variations such as matroid secretary problem , submodular secretary problem , knapsack secretary problem etc ."
  ],
  "abstract_text": [
    "<S> the classical secretary problem investigates the question of how to hire the best secretary from @xmath0 candidates who come in a uniformly random order . in this work </S>",
    "<S> we investigate a parallel generalizations of this problem introduced by feldman and tennenholtz @xcite . </S>",
    "<S> we call it _ shared @xmath1-queue @xmath2-choice @xmath3-best secretary problem_. in this problem , @xmath0 candidates are evenly distributed into @xmath1 queues , and instead of hiring the best one , the employer wants to hire @xmath2 candidates among the best @xmath3 persons . </S>",
    "<S> the @xmath2 quotas are _ shared _ by all queues . </S>",
    "<S> this problem is a generalized version of @xmath2-choice @xmath3-best problem which has been extensively studied and it has more practical value as it characterizes the parallel situation .    </S>",
    "<S> although a few of works have been done about this generalization , to the best of our knowledge , no optimal deterministic protocol was known with general @xmath1 queues . in this paper </S>",
    "<S> , we provide an optimal deterministic protocol for this problem . </S>",
    "<S> the protocol is in the same style of the @xmath4-solution for the classical secretary problem , but with multiple phases and adaptive criteria . </S>",
    "<S> our protocol is very simple and efficient , and we show that several generalizations , such as the _ fractional @xmath2-choice @xmath3-best secretary problem _ and _ exclusive @xmath1-queue @xmath2-choice @xmath3-best secretary problem _ , can be solved optimally by this protocol with slight modification and the latter one solves an open problem of feldman and tennenholtz @xcite . </S>",
    "<S> in addition , we provide theoretical analysis for two typical cases , including the @xmath5-queue @xmath5-choice @xmath3-best problem and the shared @xmath6-queue @xmath6-choice @xmath6-best problem . for the former , </S>",
    "<S> we prove a lower bound @xmath7 of the competitive ratio . </S>",
    "<S> for the latter , we show the optimal competitive ratio is @xmath8 while previously the best known result is 0.356 @xcite . </S>"
  ]
}
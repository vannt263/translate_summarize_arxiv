{
  "article_text": [
    "let @xmath0 \\times { \\mathbf r}{\\mathbin\\to}{\\mathbf r}$ ] be a continuous function and consider the initial value problem @xmath1 . \\end{aligned}\\ ] ] a well - known sufficient condition ( see the beginning of [ section : question ] for a proof sketch ) for this equation to have a unique solution @xmath2 { \\mathbin\\to}{\\mathbf r}$ ] is that @xmath3 be _ lipschitz continuous _",
    "( in its second argument ) , i.e. , @xmath4 , \\ y _ 0 , y _ 1 \\in { \\mathbf r}\\ ] ] for some constant @xmath5 independent of @xmath6 , @xmath7 and @xmath8 .",
    "we are interested in the computational complexity of the solution  @xmath9 under this condition .    our model of computation of real functions , which will be reviewed in [ section : computable analysis",
    "] , is adopted from computable analysis and is thus consistent with the conventional notion of computability .",
    "we formulate our main result in [ section : question ] : the solution  @xmath9 of the above equation can be polynomial - space complete , even if @xmath3 is polynomial - time computable .",
    "this was open since @xcite .",
    "the essential part of the proof is given in [ section : main proof ] , where we construct a certain family of real functions that can be used as building blocks for the desired @xmath3 and @xmath9 .",
    "the main idea is to regard the differential equation with the lipschitz condition as a polynomial - space computation tableau with some restrictions . in [ section : variants ] , we state a few variants of the main theorem , two of which solve the problems about volterra integral equations posed by @xcite .",
    "these variants are also proved using the same building blocks , as shown in [ section : proofs ] .",
    "[ section : related ] discusses related results and open problems .",
    "the study of mathematical analysis from the viewpoint of computability is called _ computable analysis _ ; @xcite and @xcite are good introductions to the field .",
    "we review the basic definitions briefly here , refining them for our complexity consideration where necessary .",
    "the computability notion for real functions equivalent to ours dates back at least to @xcite .",
    "polynomial - time computability of real functions was introduced by @xcite using oracle machines , and is equivalent , at least in our context , to the one defined by the type - two machine and the signed digit representation ( chapter  7 of @xcite ) .",
    "since real numbers can not be encoded into strings , we encode them into functions from strings to strings .",
    "we say that a real number  @xmath8 is _ represented _ by a string function  @xmath10 if for any @xmath11 , the string @xmath12 is the binary notation ( with a sign bit at the beginning ) of either @xmath13 or @xmath14 , where @xmath15 and @xmath16 mean rounding down and up to the nearest integer , respectively . in effect , @xmath12 gives an approximation of @xmath8 with precision  @xmath17 by a multiple of @xmath17 .",
    "we also say that @xmath10 is a _ name _ of @xmath8 .",
    "computation of real functions is realized by _",
    "oracle turing machines _",
    "( henceforth just _ machines _ ) working on such names  @xmath10 .",
    "in addition to the input , output and work tapes , the machine has a query tape and can consult an external oracle  @xmath10 by entering a distinguished state ; the string  @xmath18 which is on the query tape at this moment is then replaced by @xmath19 in one step .",
    "we write @xmath20 for the string - to - string function computed by machine  @xmath21 with oracle  @xmath10 .",
    "[ definition : polynomial - time computable ] a machine  @xmath21 _ computes _ a function @xmath22 { \\mathbin\\to}{\\mathbf r}$ ] if for any @xmath23 $ ] and any name @xmath10 of it , @xmath20 is a name of @xmath24 .",
    "thus , computation of a real function @xmath25 is a turing reduction of ( a name of ) @xmath24 to @xmath8 ( [ figure : machine ] , left ) .    , the machine should output an approximation of @xmath24 with given precision  @xmath17 by consulting the oracle for approximations of @xmath8 with any precision  @xmath26 it desires ( left ) .",
    "an alternative picture ( right ) is that the machine converts any stream of improving approximations of @xmath8 to a stream of improving approximations of @xmath24 .",
    ", title=\"fig : \" ] , the machine should output an approximation of @xmath24 with given precision  @xmath17 by consulting the oracle for approximations of @xmath8 with any precision  @xmath26 it desires ( left ) .",
    "an alternative picture ( right ) is that the machine converts any stream of improving approximations of @xmath8 to a stream of improving approximations of @xmath24 .",
    ", title=\"fig : \" ]    a little thought shows that it can equivalently be visualized as a turing machine that , given on the input tape an infinite sequence of approximations of @xmath8 , writes approximations of @xmath24 endlessly on the one - way output tape   ( [ figure : machine ] , right ) .",
    "a machine runs in _ polynomial time _ if there is a polynomial @xmath27 such that , for any input string  @xmath28 , it halts within @xmath29 steps regardless of the oracle . a real function is ( _ polynomial - time _ ) _ computable _ if some machine ( that runs in polynomial time ) computes it .    when writing an approximation of @xmath24 with precision @xmath17 , the machine knows @xmath8 only to some finite precision @xmath26 .",
    "hence , all computable functions are continuous .",
    "if the machine runs in polynomial time , then this @xmath30 is bounded polynomially in @xmath31 .",
    "hence , all polynomial - time computable functions  @xmath25 have a polynomial _ modulus of continuity _ ( [ figure : modulus ] ) : there is a polynomial @xmath32 such that @xmath33 for all @xmath34 , @xmath35 $ ] and @xmath11 with @xmath36 ( note that in our setting it makes sense to put @xmath32 in the exponent , deviating from some authors terminology where a modulus of continuity means a function that takes an upper bound on @xmath37 to that on @xmath38 ) .",
    "in fact , it is not hard to see that polynomial - time computability can be characterized by this plus the assertion that @xmath25 can be approximated at rationals :    . ]",
    "[ lemma : polynomial modulus ] a function  @xmath39 { \\mathbin\\to}{\\mathbf r}$ ] is polynomial - time computable if and only if it has a polynomial modulus of continuity and there is a polynomial - time computable function @xmath40 \\cap { \\mathbf q } ) \\times \\{0\\ } ^ * { \\mathbin\\to}{\\mathbf q}$ ] such that @xmath41 \\cap { \\mathbf q } , \\",
    "n \\in { \\mathbf n},\\ ] ] where rational numbers are encoded in a reasonable way ( e.g. , using fractions whose numerator and denominator are integers written in binary ) .",
    "many familiar continuous functions are computable .",
    "for example , it is easy to see that the sine function restricted to @xmath42 $ ] is polynomial - time computable , because an approximation of @xmath43 to precision @xmath17 can be found by approximating the sum of polynomially many ( in @xmath31 ) initial terms , since this series converges fast enough on @xmath42 $ ] .    the above definition can be straightforwardly extended to functions on compact intervals other than @xmath42 $ ] and on @xmath44-dimensional rectangles ( by considering machines taking @xmath44 oracles ) .",
    "also , polynomial - space , exponential - time and exponential - space computability is defined analogously to polynomial - time computability , where by `` exponential '' we mean @xmath45 ( and not @xmath46 ) . here",
    ", we count the query tape in when defining space complexity .",
    "the definition in section  7.2.1 of @xcite states to the contrary , but his subsequent theorems build on the definition that does charge the query tape ( on the other hand , his argument in chapter  4 that the query tape should not be counted in discussing logarithmic space is correct ) .",
    "we now introduce terminology to state our main results which say that certain real functions are `` hard '' to compute .",
    "we regard a language  @xmath47 as a set of strings or as a @xmath48-valued function interchangeably , so that @xmath49 means @xmath50 .",
    "we write @xmath51 , @xmath52 , @xmath53 , @xmath54 , @xmath55 for the standard classes of languages and @xmath56 for the function class ; see @xcite .",
    "[ definition : completeness ] a function  @xmath47 ( over strings ) is said to _ reduce _ to a real function @xmath2 { \\mathbin\\to}{\\mathbf r}$ ] if the following holds for some polynomial - time computable functions @xmath57 , @xmath58 , @xmath59 : let @xmath28 be a string , and suppose that the function taking string  @xmath18 to @xmath60 is a name of a real number @xmath23 $ ] .",
    "then @xmath61 for any name  @xmath62 of @xmath24 ( [ figure : typetworeduction ] ) .",
    "reduces to @xmath9 via @xmath57 , @xmath58 and @xmath59 .",
    "this means that , using a hypothetical machine  @xmath21 computing @xmath9 ( in the sense of [ definition : polynomial - time computable ] ) as a black box , we can compute @xmath47 in polynomial time in the way depicted above . ]    for a complexity class  @xmath63 , we say that a real function is",
    "_ @xmath63-hard _ if all problems in @xmath63 reduce to it .",
    "a real function is _ polynomial - space _",
    "_ exponential - space _ ) _ complete _ if it is polynomial - space ( resp .",
    "exponential - space ) computable and @xmath53-hard ( resp .",
    "@xmath55-hard ) .",
    "the above definitions of reduction and completeness can be viewed as a special case of those by @xcite , and are also consistent with definition  2.2 of @xcite .",
    "now we return to the differential equation  [ equation : problem ] .",
    "the fact that [ equation : lipschitz ] guarantees a unique solution is known as ( a variant of ) the picard ",
    "lindelf ( or cauchy  lipschitz ) theorem , and can be proved as follows .",
    "let @xmath64 be the set of all continuous real functions on @xmath42 $ ] .",
    "a solution of [ equation : problem ] is a fixed point of the operator @xmath65 defined by @xmath66.\\end{aligned}\\ ] ] the existence and uniqueness of this fixed point follow from the contraction principle ( banach fixed point theorem ) , because a simple calculation shows that , for the metric  @xmath44 on @xmath64 given by @xmath67 } \\exp ( -2 z t ) \\lvert h _ 0 ( t ) - h _ 1 ( t ) \\rvert    $ ] , we have @xmath68 .",
    "we assume the following , and ask how complex @xmath9 can be :    * @xmath0 \\times { \\mathbf r}{\\mathbin\\to}{\\mathbf r}$ ] and @xmath2 { \\mathbin\\to}{\\mathbf r}$ ] satisfy [ equation : problem ] , @xmath3 satisfies [ equation : lipschitz ] , and @xmath3 is polynomial - time computable .    strictly speaking , we have defined polynomial - time computability only for functions on a compact rectangle .",
    "what we mean here is that the restriction of @xmath3 to @xmath42 \\times [ \\min h , \\max h]$ ] , say , is polynomial - time computable .",
    "equivalently , we could write @xmath0 \\times [ -1 , 1 ] \\to { \\mathbf r}$ ] and add the clause `` the values of @xmath9 stays within @xmath69 $ ] '' to ; this does not essentially change our result , because we can always make @xmath9 stay within @xmath69 $ ] by scaling @xmath3 and @xmath9 down by a constant factor , which does not affect polynomial - time computability .",
    "there is a way to extend [ definition : polynomial - time computable ] to functions with unbounded domain , as in @xcite or pp.5758 of @xcite , but we choose our simpler definition .    as @xcite points out by analyzing the euler method , implies that @xmath9 is polynomial - space computable . from this",
    "it follows ( lemma  2.2 of @xcite ) that if @xmath70 , then implies that @xmath9 is polynomial - time computable .",
    "we will prove a lower bound that matches this upper bound :    [ theorem : main ] there are functions @xmath3 and @xmath9 satisfying   such that @xmath9 is @xmath53-hard ( and thus polynomial - space complete ) .    [",
    "corollary : answer to ko ] @xmath70 if and only if always implies that @xmath9 is polynomial - time computable .",
    "this solves the main problem left open in @xcite .",
    "he had proved there a partial result essentially stating that [ theorem : main ] holds true if the lipschitz condition  [ equation : lipschitz ] in the assumption   is replaced by a weaker condition .",
    "we remark that the special case of the equation  [ equation : problem ] where @xmath3 ignores its second argument reduces to integration , whose complexity is summarized as follows in the style similar to [ theorem : main ] and [ corollary : answer to ko ] .",
    "there are a polynomial - time computable function @xmath0 { \\mathbin\\to}{\\mathbf r}$ ] and a @xmath56-hard function @xmath2 { \\mathbin\\to}{\\mathbf r}$ ] such that @xmath71 .",
    "\\end{aligned}\\ ] ]    @xmath72 if and only if for all polynomial - time computable @xmath0 { \\mathbin\\to}{\\mathbf r}$ ] , the function @xmath9 defined by [ equation : integration ] is polynomial - time computable .",
    "the relation to the counting class is not surprising : as is apparent from friedman s proof , the intuition behind this result is that approximating the integral is to _ count _ the number of grid points below the graph of @xmath3 .",
    "this bound of @xmath73 has been the best known lower bound also for our differential equation . [",
    "theorem : main ] improves this to @xmath53 .",
    "we present the proof backwards , reducing [ theorem : main ] to [ lemma : main ] and then reducing [ lemma : main ] to [ lemma : discrete ] . in [ subsection : building blocks ] , we state [ lemma : main ] asserting the existence of a certain family of pairs of functions @xmath74 and @xmath75 , from which the functions @xmath3 and @xmath9 in [ theorem : main ] can be constructed .",
    "[ subsection : discrete ivp and the lipschitz condition ] shows that [ lemma : main ] follows from [ lemma : discrete ] , which asserts the @xmath53-completeness of a discrete version of the initial value problem . this discrete problem is like a @xmath53 computation tableau , but with a certain restriction similar to the lipschitz condition .",
    "[ subsection : discrete ivp is hard ] then completes the proof by showing [ lemma : discrete ] .      to state",
    "[ lemma : main ] , we need to extend the definition of computation in [ subsection : computability ] to _ families _ of real functions indexed by strings  @xmath28 .",
    "this is done in the natural way , by giving @xmath28 as another string input to the machine .",
    "for example , a family  @xmath74 of functions @xmath76 \\times [ -1 , 1 ] { \\mathbin\\to}{\\mathbf r}$ ] is computed by a machine  @xmath21 if for any names @xmath10 and @xmath77 of @xmath23 $ ] and @xmath78 $ ] , the function that takes string  @xmath79 to @xmath80 is a name of @xmath81 . note that in this case , claiming that @xmath21 runs in polynomial time means that it halts in time polynomial in @xmath82 .",
    "[ lemma : main ] let @xmath83 and let @xmath84 be a polynomial .",
    "then there exist a polynomial @xmath85 and families of functions @xmath86 \\times [ -1 , 1 ] { \\mathbin\\to}{\\mathbf r}$ ] and @xmath87 { \\mathbin\\to}{\\mathbf r}$ ] indexed by binary strings  @xmath28 such that the family @xmath74 is polynomial - time computable and for each @xmath28 we have    1 .",
    "[ enumi : range ] @xmath88 $ ] for all @xmath23 $ ] ; 2 .",
    "[ enumi : boundary ] @xmath89 for all @xmath78 $ ] ; 3 .",
    "[ enumi : equation ] @xmath90 and @xmath91 for all @xmath23 $ ] ; 4 .",
    "[ enumi : lipschitz ] @xmath92 for any @xmath93 $ ] and @xmath94    $ ] ; 5 .",
    "[ enumi : output ] @xmath95 .",
    "we thus have a family of functions @xmath96 that each give an initial value problem whose solution  @xmath97 encodes @xmath98 in its final value @xmath99 .    using this family ,",
    "the functions @xmath3 and @xmath9 in [ theorem : main ] will be constructed roughly as follows .",
    "divide @xmath100 into infinitely many subintervals @xmath101 $ ] , one for each @xmath28 , with midpoints  @xmath102 .",
    "we put a pair of scaled copies of @xmath96 onto @xmath103 $ ] and @xmath104 $ ] as shown in [ figure : patchwork ] so that the membership of @xmath28 in @xmath47 can be determined by looking at @xmath105 .",
    ", we assign interval @xmath101 $ ] to each string  @xmath28 and put there a pair of reduced copies of @xmath96 . the value @xmath105 at the midpoint will be positive if and only if @xmath50 .",
    "]    scaling down @xmath96 horizontally increases its lipschitz constant , and the resulting @xmath3 needs to have a lipschitz constant independent of @xmath28 ; this is why we had to claim in [ enumi : lipschitz ] that the @xmath96 originally have small constant @xmath106 .",
    "details are routine and are relegated to [ section : proofs ] along with the proofs of two other theorems which will be stated in [ section : variants ] and which will also follow from [ lemma : main ] .",
    "a first attempt to prove [ lemma : main ] would be as follows .",
    "consider a polynomial - space turing machine that decides whether a given string  @xmath28 belongs to @xmath47 .",
    "its configuration at each time can be encoded into a nonnegative integer less than @xmath107 , where @xmath64 is a polynomial .",
    "there is a simple rule that maps @xmath28 ( the input ) , @xmath59 ( time ) and @xmath44 ( the current configuration ) to a number @xmath108 ( the next configuration ) such that the recurrence @xmath109 leads to @xmath110 for some polynomial @xmath111 .",
    "now this situation looks similar to the one in [ lemma : main ] : starting at @xmath112 , the value of @xmath113 ( or @xmath97 ) changes over time according to a simpler function @xmath114 ( or @xmath96 ) , to reach a value eventually that indicates the answer @xmath98 .",
    "thus we are tempted to simulate the `` discrete initial value problem ''  [ equation : naive discrete ivp ] by embedding each value  @xmath115 as real number  @xmath116 ( [ figure : attempt ] ) .     at each time",
    "@xmath59 into the value @xmath117 at time @xmath118 .",
    "]    the obstacle to this attempt is that the differential equation [ enumi : equation ] in [ lemma : main ] can not express all discrete recurrences of form  [ equation : naive discrete ivp ] : continuous trajectories can not branch or cross one another ; besides , we have the lipschitz condition  [ enumi : lipschitz ] that puts restriction on how strong the feedback of @xmath9 to itself can be .",
    "we thus need to restrict the discrete problem  [ equation : naive discrete ivp ] so that it can be simulated by the continuous version .    to do so ,",
    "let us reflect on what the lipschitz condition  [ enumi : lipschitz ] means .",
    "a rough calculation shows that if two trajectories differ by @xmath119 at time @xmath8 , then they can differ at time @xmath120 by at most @xmath121 .",
    "thus , the gap can only widen ( or narrow ) by a factor of @xmath122 during each time interval of length @xmath123 .",
    "in other words , the feedback caused by equation  [ enumi : equation ] is so weak that each digit of @xmath97 can only affect far lower digits of @xmath97 in the next step .",
    "now we define a discrete problem that reflects this restriction .",
    "let @xmath124 and @xmath111 be polynomials and let @xmath125 \\times [ 2 ^{q ( \\lvert u \\rvert ) } ] \\times [ 4 ]   { \\mathbin\\to}\\{-1 , 0 , 1\\ } ,   \\\\   \\label{equation : discrete ivp type 2 }   h _ u   &    { \\colon}[p ( \\lvert u \\rvert ) + 1 ] \\times [ 2 ^{q ( \\lvert u \\rvert ) } + 1 ]    { \\mathbin\\to}[4 ] , \\end{aligned}\\ ] ] where we write @xmath126 = \\{0 , \\dots , n - 1\\}$ ] for @xmath127 .",
    "our restricted discrete initial value problem is as follows : @xmath128 thus , @xmath115 of [ equation : naive discrete ivp ] is now divided into polynomially many ( in @xmath129 ) components @xmath130 , ",
    ", @xmath131 ; compare figures [ figure : attempt ] ( bottom ) and [ figure : discrete_ivp ] .",
    "[equation : discrete ivp main ] . each cell",
    "@xmath115 in [ figure : attempt ] is now divided into @xmath130 , ",
    ", @xmath131 ; the increment from @xmath132 to @xmath133 is computed by @xmath114 using the upper left cell @xmath134 . ]",
    "we have added the restriction that @xmath114 sees only the component @xmath134 , which in [ figure : discrete_ivp ] means the upper left of the current cell .",
    "the following lemma states that , despite this restriction , we still have @xmath53-completeness .",
    "note that making @xmath114 completely oblivious to its last argument would be an overkill , because then @xmath113 would just add up the values of @xmath114 , resulting in the complexity merely of @xmath56 .",
    "[ lemma : discrete ] let @xmath83 . then there are polynomials @xmath124 , @xmath111 and families",
    "@xmath135 , @xmath136 satisfying [ equation : discrete ivp type 1][equation : discrete ivp main ] such that @xmath135 is polynomial - time computable and @xmath137 for each string  @xmath28 .    before proving this , we will reduce [ lemma : main ] to [ lemma : discrete ] by simulating the new system [ equation : discrete ivp type 1][equation : discrete ivp main ] by the differential equation . using @xmath114 and @xmath113 of [ lemma : discrete ]",
    ", we will construct @xmath96 and @xmath97 of [ lemma : main ] such that @xmath138 for each @xmath59 , where @xmath77 is a big number .",
    "thus , each column in [ figure : discrete_ivp ] will be encoded into one real number so that upper / lower cells in the column correspond to upper / lower bits of the real number .",
    "thanks to the restriction that @xmath114 sees only the upper row , the differential equation @xmath139 only needs to cause a weak feedback on @xmath97 where each bit of the value of @xmath97 affects only much lower bits of its next value .",
    "this keeps @xmath96 lipschitz continuous .",
    "now we fill in the details .",
    "proof of [ lemma : main ] let @xmath124 , @xmath111 , @xmath135 , @xmath136 be as in [ lemma : discrete ] .",
    "by `` dividing each unit time into @xmath140 steps , '' we may assume that for each @xmath59 , there is at most one @xmath141 such that @xmath142 for some @xmath143 .",
    "write @xmath144 for this unique  @xmath141 ( define @xmath144 arbitrarily if there is no such @xmath141 ) .",
    "we may further assume that @xmath145 thus , not only does the bottom right corner of [ figure : discrete_ivp ] equal @xmath98 , as stated already in [ lemma : discrete ] , but we also claim that the other cells in the rightmost column are all @xmath112 .",
    "this can be achieved by doubling the time frame and extending @xmath146 symmetrically so that in the second half it cancels out what it has done .",
    "precisely , we extend @xmath114 by @xmath147 for @xmath148 \\times [ 2 ^{q ( \\lvert u \\rvert ) } ] \\times [ 4 ]    $ ] , and @xmath113 by @xmath149 for @xmath150 \\times [ 2 ^{q ( \\lvert u \\rvert ) } + 1]$ ] , and then add @xmath151 to @xmath152 .",
    "it is easy to verify that the equations [ equation : discrete ivp init ] and [ equation : discrete ivp main ] are still satisfied .",
    "now , assuming [ equation : discrete ivp final value ] , we construct the families @xmath74 and @xmath75 of [ lemma : main ] . for each string @xmath28 and",
    "each @xmath153 \\times [ -1 , 1]$ ] , let @xmath154 , @xmath155 $ ] , @xmath156 , @xmath157 $ ] be such that @xmath158 and @xmath159 , and define @xmath160    \\displaystyle       \\frac{3 - 4 \\eta}{2 }       g _ u \\biggl (         t ,         \\frac{y}{b ^{j _ u ( t ) } }        \\biggr )     +       \\frac{4 \\eta - 1}{2 }       g _ u \\biggl (         t ,         \\frac{y + 1}{b ^{j _ u ( t ) } }        \\biggr )   &    \\displaystyle    \\text{if }",
    "\\     \\eta \\geq \\frac 1 4 ,   \\end{cases } \\\\",
    "\\label{equation : 0802100220 }    h _ u ( t ) &   =      \\frac{1 - \\cos ( \\theta \\pi)}{2 }      \\cdot      \\frac{g _ u \\bigl ( j _ u ( t ) , t , h _ u ( j _ u ( t ) , t ) \\bigr ) }           { b ^{j _ u ( t ) + 1 } }    +     \\sum _ { i = 0 } ^{p ( \\lvert u \\rvert ) } \\frac{h _ u",
    "( i , t)}{b ^i } , \\end{aligned}\\ ] ] where @xmath161 .",
    "note that the second branch of [ equation : 0802100213 ] says that when @xmath162 $ ] , we define @xmath81 by interpolating between the nearest two @xmath163 at which @xmath96 is already defined by the first branch .",
    "equation [ equation : 0802100220 ] says that , when @xmath164 ( i.e. , @xmath8 is a multiple of @xmath123 ) , the value @xmath165 is the real number that encodes the @xmath59th column of [ figure : discrete_ivp ] ; as @xmath166 goes from @xmath112 to @xmath151 , it moves to the next value along a cosine curve , whose slope , as we will see below , matches the sine function in the first branch of [ equation : 0802100213 ] .",
    "it is easy to verify that the definition is consistent ; in particular , we use [ equation : discrete ivp main ] to show that [ equation : 0802100220 ] stays the same for the two choices of @xmath167 when @xmath8 is a multiple of @xmath123 .",
    "conditions [ enumi : range ] and [ enumi : boundary ] of [ lemma : main ] are easy to verify .",
    "we have [ enumi : output ] with @xmath168 , since @xmath169 by [ equation : 0802100220 ] and [ equation : discrete ivp final value ] .",
    "checking the polynomial - time computability of @xmath74 is also routine , using [ lemma : polynomial modulus ] .    to see [ enumi : equation ] , observe that in the right - hand side of [ equation : 0802100220 ] ,    * the absolute value of the first term is bounded by @xmath170 , * the summands corresponding to @xmath171 are multiples of @xmath172 , and * the summands corresponding to @xmath173 are nonnegative numbers , each bounded by @xmath174 , and thus altogether by @xmath175 .",
    "hence , we can write @xmath176 for some @xmath177 $ ] , where @xmath178 since @xmath77 is a multiple of @xmath179 , we have @xmath180 . substituting these @xmath143 and @xmath181 into ( the first branch of ) [ equation : 0802100213 ] , we get @xmath182 this equals @xmath183 calculated from [ equation : 0802100220 ] .    for the lipschitz condition [ enumi : lipschitz ] , note that since the value of @xmath114 in the first branch of [ equation : 0802100213 ] is in @xmath184 , the difference between the two values of @xmath96 in the second branch is bounded by @xmath185 .",
    "thus , the slope of @xmath96 along the second argument is at most @xmath186 by our choice of @xmath77 .",
    "it remains to prove [ lemma : discrete ] . at first sight , our system [ equation : discrete ivp type 1][equation : discrete ivp main ] ( [ figure : discrete_ivp ] ) looks too weak to simulate a polynomial - space computation :",
    "although we have polynomial amount of memory ( rows ) and exponential amount of time ( columns ) , the `` chains of dependence '' of values must run from top to bottom and thus are polynomially bounded in length .",
    "thus , we give up embedding a general @xmath53 computation into [ figure : discrete_ivp ] .",
    "instead , we embed another @xmath53-complete problem , @xmath187 ( quantified boolean formulas , see @xcite where it is called qsat ) , which asks for the truth value of the given formula @xmath28 of form @xmath188 where @xmath62 is a boolean formula and @xmath189 for each @xmath190 ,  , @xmath30 .",
    "the truth value of [ equation : qbf ] is obtained by evaluating a binary tree of depth @xmath30 whose @xmath191 leaves each correspond to an assignment to @xmath192 and whose internal nodes at level  @xmath141 are labeled @xmath193 .",
    "this is roughly why it can be simulated by the tableau in [ figure : discrete_ivp ] despite the restriction that the dependence of values must run from top to bottom .",
    "we give a formal proof and then an example ( [ figure : qbf_encoding_example ] ) .",
    "proof of [ lemma : discrete ] we may assume that @xmath194 .",
    "we will construct the polynomials @xmath124 , @xmath111 and families @xmath135 and @xmath136 in [ lemma : discrete ] .",
    "let @xmath28 be of form [ equation : qbf ] . for each @xmath195 ,  ,",
    "@xmath30 and @xmath196 bits @xmath197 ,  , @xmath198 , we write @xmath199 for the truth value ( @xmath151 for true ) of the subformula @xmath200 , so that @xmath201 and @xmath202 . we regard quantifiers as functions from @xmath203 to @xmath48 : @xmath204 ( the values @xmath205 and @xmath206 do not matter ) .",
    "these correspond to the meaning of the quantifiers : @xmath207 ( resp .",
    "@xmath208 ) means that the subsequent formula is satisfied by @xmath209 ( resp .",
    "@xmath151 or @xmath209 ) of the two possible assignments to @xmath210 .",
    "thus , @xmath211 for each @xmath195 ,  , @xmath212 .",
    "for @xmath213 bits @xmath214 ,  , @xmath215 , we write @xmath216 for the number @xmath217 .    to define @xmath114 , let @xmath218 where @xmath219 denotes the exclusive or ; let @xmath220 for other @xmath59 ( that is , when @xmath59 is not an odd multiple of @xmath221 ) .",
    "define @xmath113 from @xmath114 by [ equation : discrete ivp init ] and [ equation : discrete ivp main ] .",
    "we prove by induction on @xmath195 , ",
    ", @xmath30 that @xmath222 for all @xmath59 , as we mentioned earlier , and that @xmath223 for all @xmath58 of form @xmath224 ( it is immediate from the definition of @xmath114 that @xmath225 for other @xmath58 ) .",
    "once we have proved this , the case @xmath226 yields @xmath227 , and hence @xmath228 . since @xmath229 , we can add dummy rows and columns so that @xmath230 for some polynomials @xmath124 and @xmath111 , as required .",
    "the claims for @xmath195 follow immediately from [ equation : discrete ivp init ] and [ equation : 0802100302 ] .",
    "now suppose [ equation : induction hypothesis ] as the induction hypothesis and fix @xmath231 .",
    "let @xmath232 .",
    "by [ equation : discrete ivp init ] and [ equation : discrete ivp main ] , we have @xmath233 since the assumption [ equation : induction hypothesis ] implies that flipping the two bits @xmath234 and @xmath235 of any @xmath236 reverses the sign of @xmath237 , most of the nonzero summands in [ equation : carry ] cancel out .",
    "the only terms that can survive are those that correspond to @xmath238 and @xmath239 .",
    "this proves @xmath240 .    when @xmath241 , both of these terms survive , so that @xmath242 therefore , @xmath243 by [ equation : quantifier step ] .",
    "thus , @xmath244 by [ equation : 0802100302 ] , completing the induction step .",
    "[equation : discrete ivp main ] corresponding to the formula @xmath245 .",
    "we follow the convention in [ figure : discrete_ivp ] ( but omit the top cells @xmath130 which are always @xmath112 ) : the cells contain @xmath134 , and the signed number above the cell @xmath132 indicates the increment @xmath246 ( which is @xmath112 when omitted ) . the increments @xmath247 for the top row",
    "are determined by the truth values of @xmath248 for various assignments to @xmath249 . ]",
    "[ figure : qbf_encoding_example ] shows the table when @xmath28 be the formula @xmath250 .",
    "the values @xmath247 encode ( redundantly ) the truth table of the matrix @xmath248 ( first branch of [ equation : 0802100302 ] ) .",
    "for example , @xmath251 ( resp .",
    "@xmath112 ) for @xmath252 ( resp .",
    "@xmath253 ) because @xmath254 ( resp .",
    "@xmath255 ) makes @xmath248 true ( resp .",
    "false ) . also observe that @xmath256 returns to @xmath112 every eight cells . as a result , the cell @xmath257 ( resp .",
    "@xmath258 ) represents the fact that when @xmath259 is false ( resp .",
    "true ) , @xmath248 is satisfied by one ( resp .",
    "two ) of the assignments to @xmath260 .",
    "now look at the next row .",
    "the second branch of [ equation : 0802100302 ] says that for odd multiples @xmath59 of @xmath179 , the values @xmath261 are @xmath262 or @xmath112 according to whether the upper left cell has a @xmath209 or not .",
    "thus , they encode the smaller truth table for the subformula @xmath263 under each assignment to @xmath259 . as a result , the cell @xmath264 indicates that this subformula is satisfied by one of the assignments to @xmath259 , which causes the last row to get incremented at @xmath265 .",
    "observe that the final cell @xmath266 has a @xmath151 , exactly because @xmath28 is true .",
    "@xcite discusses another version of the question which relates the complexity of the value  @xmath267 , rather than the function  @xmath9 , to that of tally languages ( subsets of @xmath268 ) .",
    "[ definition : completeness ] extends straightforwardly to machines taking @xmath44 oracles . in particular",
    ", the case @xmath269 means that a language  @xmath47 is said to reduce to a real number  @xmath8 if there are polynomial - time computable functions @xmath57 and @xmath58 such that @xmath270 for any string  @xmath28 and any name  @xmath10 of @xmath8 .",
    "now we can state :    [ theorem : main 2 ] for any tally language @xmath83 , there are functions @xmath3 and @xmath9 satisfying such that @xmath47 reduces to @xmath267 .",
    "this can be proved by arranging the building blocks @xmath96 from [ lemma : main ] , as we did for [ theorem : main ] , but in a different way .",
    "see [ subsection : proof of theorem main 2 ] for details .    as a corollary to [ theorem : main 2 ] , all tally languages of @xmath53 are in @xmath51 if implies that @xmath267 is polynomial - time computable .",
    "this improves on theorem  4 of @xcite , which showed the same thing with the lipschitz condition replaced by a weaker condition .",
    "@xcite later studied the complexity of _ volterra integral equations of the second kind _",
    "@xmath271,\\ ] ] where function @xmath9 is to be solved from given @xmath25 and @xmath3 . as before",
    ", we suppose that @xmath25 and @xmath3 are polynomial - time computable and ask how complex @xmath9 can be .    if @xmath3 is lipschitz continuous ( in its last argument ) , @xmath9 is polynomial - space computable by picard s iteration method ( section  3 of @xcite ) . on",
    "the other hand , the best lower bound ( in the sense analogous to the `` if '' direction of [ corollary : answer to ko ] ) has been @xmath73 .",
    "one of the two open problems in @xcite was to close this gap .",
    "our [ theorem : main ] has solved it , because the initial value problem  [ equation : problem ] is the special case of [ equation : volterra second ] where @xmath25 is constantly zero and @xmath3 ignores its first argument :    there are functions @xmath39 { \\mathbin\\to}{\\mathbf r}$ ] and @xmath0 \\times [ 0 , 1 ] \\times { \\mathbf r}{\\mathbin\\to}{\\mathbf r}$ ] such that @xmath3 is lipschitz continuous ( in its last argument ) , @xmath25 and @xmath3 are both polynomial - time computable , and the ( unique ) solution of [ equation : volterra second ] is polynomial - space complete .",
    "the other problem was about the following weak version of the lipschitz condition  [ equation : lipschitz ] : @xmath272 , \\",
    "y _ 0 , y _ 1 \\in { \\mathbf r},\\ ] ] where @xmath273 is a polynomial . assuming with [ equation : lipschitz ] replaced by [ equation : local lipschitz ] , how complex can @xmath9 be , provided it has a polynomial modulus of continuity ?",
    "@xcite asked this question for the volterra equation  [ equation : volterra second ] ( in which case the @xmath3 in [ equation : local lipschitz ] takes one more argument ) , and showed that @xmath9 is exponential - space computable and can be @xmath54-hard .",
    "his second open problem was to close this gap .",
    "the motivation for this problem comes from _ volterra integral equations of the first kind _ , a class of equations that are considered harder to solve than  [ equation : volterra second ] . a common approach",
    "to solve them is to convert the equation into the form  [ equation : volterra second ]",
    ". this conversion does not preserve lipschitz continuity  [ equation : lipschitz ] ; the new equation merely satisfies [ equation : local lipschitz ] .",
    "see @xcite for details .",
    "the following theorem settles this problem ( see [ subsection : proof of theorem main exp ] for a proof , again using [ lemma : main ] ) .",
    "in fact , we have @xmath55-completeness even for the simple differential equation  [ equation : problem ] :    [ theorem : main exp ] there are functions @xmath3 and @xmath9 satisfying   with [ equation : lipschitz ] replaced with [ equation : local lipschitz ] such that @xmath9 has a polynomial modulus of continuity and yet is @xmath55-hard .    note , however , that this theorem says nothing directly about the complexity of volterra equations of the first kind .",
    "it merely addresses the complexity of a class of equations that may arise in a particular approach to solving them .",
    "we give the details of the proofs of theorems [ theorem : main ] , [ theorem : main 2 ] and [ theorem : main exp ] from [ lemma : main ] .",
    "the rough ideas are explained in [ subsection : building blocks ] .",
    "let @xmath47 be a @xmath53-complete language .",
    "use [ lemma : main ] for @xmath274 to obtain polynomial  @xmath275 and families @xmath74 , @xmath75 .",
    "since @xmath74 is polynomial - time computable , there is a polynomial @xmath276 satisfying @xmath277 . for each binary string",
    "@xmath28 , let @xmath278 , @xmath279 and @xmath280 where @xmath281 is @xmath28 read as an integer in binary notation .",
    "this divides @xmath100 into intervals @xmath101 $ ] indexed by @xmath282 .",
    "define @xmath283 for each @xmath23 $ ] and @xmath284 , where @xmath285 .",
    "let @xmath286 for each @xmath284 .",
    "these define @xmath3 and @xmath9 `` seamlessly '' by [ enumi : boundary ] .",
    "we show that @xmath3 and @xmath9 satisfy .",
    "we begin with equation  [ equation : problem ] .",
    "it is easy to see that @xmath287 and @xmath288 .",
    "since any number in @xmath100 can be written in the form @xmath289 for some @xmath28 and @xmath23 $ ] , we have [ equation : problem ] by @xmath290 where equalities are by [ equation : flow ] , [ enumi : equation ] , [ equation : vector ] , [ equation : flow ] , respectively .",
    "the lipschitz condition  [ equation : lipschitz ] is satisfied with @xmath291 by [ enumi : lipschitz ] and our choice of @xmath292 . to see that @xmath3 is polynomial - time computable , we use ( the obvious two - dimensional version of )",
    "[ lemma : polynomial modulus ] .",
    "when asked for a @xmath17-approximation of @xmath293 for rational numbers @xmath59 and @xmath143 , the machine can find @xmath28 , @xmath294 , @xmath8 , @xmath163 with @xmath295 in polynomial time .",
    "since [ equation : vector ] lies in @xmath296 $ ] , the machine can safely answer @xmath112 if @xmath297 .",
    "otherwise it can answer by computing @xmath298 with precision @xmath17 , which can be done in time polynomial in @xmath299 by the polynomial - time computability of @xmath74 .",
    "we have thus proved . since @xmath300 by [ equation : flow ] and [ enumi : output ]",
    ", the problem  @xmath47 reduces to @xmath9 .",
    "more precisely , the functions @xmath57 , @xmath58 , @xmath59 in [ definition : completeness ] can be given by @xmath301 since @xmath47 is @xmath53-complete , so is @xmath9 .",
    "we will construct @xmath3 and @xmath9 satisfying such that the tally language @xmath83 reduces to @xmath267 .",
    "apply [ lemma : main ] to @xmath302 to obtain the polynomial  @xmath275 and the families @xmath74 , @xmath75 . as we did for [ theorem : main ] , we are going to divide @xmath100 into countably many intervals @xmath303 $ ] and put there some copies of the block @xmath304 of [ lemma : main ] ; but this time , we do not put the mirror reflection to bring @xmath9 back to @xmath112 ( [ figure : patchwork value ] ) .",
    "the values @xmath99 pile up , so that we can recover any of them by looking at @xmath267 .    .",
    "the blocks @xmath304 are now stacked vertically so that the tally language  @xmath47 can be recovered from @xmath267 . ]",
    "since @xmath74 is polynomial - time computable , there is a monotone polynomial @xmath305 satisfying @xmath306 for each @xmath307 .",
    "let @xmath308 and define @xmath309 for each @xmath310 , @xmath23 $ ] , @xmath78 $ ] and @xmath311 , where @xmath312 .",
    "complete the definition by @xmath313 and @xmath314 by [ equation : right end ] , the language  @xmath47 reduces to @xmath267 .",
    "we show that these @xmath3 and @xmath9 satisfy .",
    "well - definedness and lipschitz continuity of @xmath3 follow from [ enumi : boundary ] and [ enumi : lipschitz ] of [ lemma : main ] , similarly to the proof of [ theorem : main ] .",
    "polynomial - time computability also follows from that of @xmath74 again . since all terms under the summation symbol in [ equation : vert ] are divisible by @xmath315 , substituting [ equation : vert ] into the second argument of [ equation : goal ] yields @xmath316 where the second and third equalities are by [ enumi : equation ] and [ equation : vert ] , respectively . this and @xmath317 yield [ equation : problem ] .",
    "we have proved .",
    "is similar to [ figure : patchwork ] , but this time we put an `` amplifier '' in the middle .",
    "then @xmath318 if and only if @xmath319 is positive , and in this case it is only polynomially small in @xmath320 . ]    let @xmath83 be the set of triples @xmath321 such that @xmath21 encodes a turing machine that , on string input  @xmath210 , uses at most @xmath322 tape cells and accepts .",
    "for each triple @xmath323 , let @xmath324 . with a suitable encoding",
    ", we have @xmath325 .",
    "it is easy to see that @xmath326 is @xmath55-complete .",
    "the desired @xmath3 and @xmath9 such that @xmath327 reduces to @xmath9 will be constructed as follows . as we did for [ theorem : main ] , we divide @xmath100 into infinitely many intervals @xmath328 $ ] with midpoints @xmath329 , and put there the functions @xmath330 of [ lemma : main ] to compute whether @xmath331 , which is equivalent to @xmath332 .",
    "but this time , the outcome @xmath333 is exponentially small in @xmath320 ( even when it is positive ) , so we need `` amplifiers '' to make the value @xmath319 visibly large ( [ figure : patchwork exp ] ) .",
    "because we use stronger and stronger amplifiers as @xmath334 , the function  @xmath3 will not satisfy the full lipschitz condition  [ equation : lipschitz ] , but it still satisfies the weaker condition  [ equation : local lipschitz ] .",
    "now we fill in the details",
    ". apply [ lemma : main ] to @xmath335 ( and the above @xmath47 ) to obtain the polynomial  @xmath275 and families @xmath74 , @xmath75 .",
    "since @xmath74 is polynomial - time computable , there is a polynomial @xmath276 satisfying @xmath336 .",
    "we may assume that @xmath337 is strictly increasing in @xmath307 and that @xmath338 for all @xmath307 .",
    "for each binary string  @xmath339 , let @xmath340 , @xmath341 and @xmath342 where @xmath343 is @xmath339 read as an integer in binary notation .",
    "this divides @xmath100 into intervals @xmath328 $ ] of length @xmath344 indexed by @xmath345 .",
    "define @xmath346 for each @xmath23 $ ] and @xmath163 , @xmath347 , where @xmath348 .",
    "let @xmath349 for each @xmath347 .",
    "this defines @xmath3 and @xmath9 seamlessly by [ enumi : boundary ] .",
    "recall the idea explained in [ figure : patchwork exp ] : the equations [ equation : vector exp ] and [ equation : flow exp ] are analogous to [ equation : vector ] and [ equation : flow ] in the proof of the main theorem , and [ equation : magnifier vector exp ] and [ equation : magnifier flow exp ] stand for the magnifier .",
    "we show that @xmath3 and @xmath9 satisfy with [ equation : lipschitz ] replaced by [ equation : local lipschitz ] .    for the equation  [ equation : problem ] , it is again easy to see that @xmath287 and @xmath288 .",
    "numbers in @xmath100 can be written either as @xmath350 or as @xmath351 , and for them the equation follows respectively by @xmath352 where we used [ equation : flow exp ] , [ enumi : equation ] , [ equation : vector exp ] , [ equation : flow exp ] , [ equation : magnifier flow exp ] , [ equation : magnifier vector exp ] , [ equation : magnifier flow exp ] for each equality .",
    "the condition  [ equation : local lipschitz ] is satisfied with @xmath353 , where @xmath322 is any polynomial such that @xmath354 . for if @xmath355 $ ] or @xmath356 $ ] for some @xmath339 , then by [ enumi : lipschitz ] and [ equation : vector exp ] , we have @xmath357 if @xmath358 $ ] for some @xmath339 , then by [ equation : magnifier vector exp ] we have @xmath359    to see that @xmath3 is polynomial - time computable , we use the characterization in ( the obvious two - dimensional generalization of ) [ lemma : polynomial modulus ] .",
    "suppose we are asked for an approximation of @xmath293 to precision  @xmath17 for some @xmath360 \\cap { \\mathbf q}$ ] and @xmath361 \\cap { \\mathbf q}$ ] .",
    "we first find a string @xmath339 and @xmath23 \\cap { \\mathbf q}$ ] such that @xmath59 can be written as @xmath350 or as @xmath351 . in the latter case , it is easy to compute the desired approximation using [ equation : magnifier vector exp ] . in the former case ,",
    "we use [ equation : vector exp ] as follows :    * if @xmath362 , we can safely answer @xmath112 , because the value [ equation : vector exp ] is in @xmath363    $ ] by @xmath364 .",
    "* otherwise , we compute @xmath365 , where @xmath366 , and then get the desired approximation of [ equation : vector exp ] by computing @xmath367 to an appropriate precision .",
    "this can be done , by the polynomial - time computability of @xmath74 , in time polynomial in @xmath31 and @xmath368 .",
    "but this is in fact polynomial in @xmath31 , since @xmath369 .",
    "we have thus proved with [ equation : lipschitz ] replaced by [ equation : local lipschitz ] . since [ equation : magnifier flow exp ] yields @xmath370 the language @xmath327 reduces to @xmath9 .",
    "since @xmath327 is @xmath55-complete , @xmath9 is @xmath55-hard .",
    "finally , we claim that @xmath9 has a polynomial modulus of continuity .",
    "precisely , we show that @xmath371 whenever @xmath310 and @xmath372 .    *",
    "if @xmath373 , then @xmath374 $ ] for some @xmath339 of length @xmath375 , so @xmath376 by [ equation : flow exp ] , [ equation : magnifier flow exp ] and [ enumi : range ] . applying the same argument to @xmath377 , we obtain @xmath378 .",
    "thus , @xmath379 .",
    "* if @xmath380 , then each point @xmath381 $ ] belongs to @xmath328 $ ] for some @xmath339 of length @xmath382 .",
    "if @xmath355 \\cup [ a ^+ _ w , l ^+ _ w]$ ] , then @xmath383 by the first line of [ equation : derivative exp ] ; otherwise , @xmath384 by the first line of [ equation : magnifier derivative exp ] .",
    "we thus have @xmath385 , and hence @xmath386 .",
    "[ table : results on initial value problems ] summarizes what is known about the computability and complexity of the initial value problem  [ equation : problem ] in our sense .",
    "computability of other aspects of the solution is discussed by @xcite , @xcite and @xcite . @xcite",
    "give a domain - theoretic account for the problem .            a reasonable criticism about the results in [ table : results on initial value problems ]",
    "is that they deal with the complexity of each single solution  @xmath9 , whereas the practical concern for numerical analysts would be the complexity of the _ operator _ that `` computes @xmath9 from @xmath3 . '' for computability ,",
    "such constructive formulation is possible through a suitable representation of the function space ( see chapter  6 of @xcite ) . for complexity , formulation of constructive results",
    "requires some more ideas , and is undertaken in a recent work of @xcite .",
    "38 [ 1]#1 [ 1]`#1 ` [ 1 ] -2.1pt o. aberth ( 1971 ) .",
    "the failure in computable analysis of a classical existence theorem for differential equations . _",
    "proceedings of the american mathematical society _ * 30 * , 151156 .",
    "v. brattka , p. hertling & k. weihrauch ( 2008 ) .",
    "a tutorial on computable analysis . in _ new computational paradigms : changing conceptions of what is computable _ ,",
    "cooper , b. lwe & a. sorbi , editors , 425491 .",
    "springer .",
    "a. edalat & d. pattinson ( 2004 ) . a domain theoretic account of picard s theorem . in _ proceedings of the 31st international colloquium on automata , languages and programming _ , volume 3142 of _ lecture notes in computer science _ , 494505 .",
    "graa , j. buescu & m.l .",
    "campagnolo ( 2008 ) .",
    "boundedness of the domain of definition is undecidable for polynomial odes . in _ proceedings of the fourth international conference on computability and complexity in analysis _ ,",
    "volume 202 of _ electronic notes in theoretical computer science _ , 4957 ."
  ],
  "abstract_text": [
    "<S> in answer to ko s question raised in 1983 , we show that an initial value problem given by a polynomial - time computable , lipschitz continuous function can have a polynomial - space complete solution . </S>",
    "<S> the key insight is simple : the lipschitz condition means that the feedback in the differential equation is weak . </S>",
    "<S> we define a class of polynomial - space computation tableaux with equally weak feedback , and show that they are still polynomial - space complete . </S>",
    "<S> the same technique also settles ko s two later questions on volterra integral equations .    </S>",
    "<S> * keywords : * computable analysis ; computational complexity ; initial value problem ; lipschitz condition ; ordinary differential equations ; picard  lindelf theorem ; polynomial space . </S>"
  ]
}
{
  "article_text": [
    "the quadratic assignment problem ( qap ) is one of the reputed np - hard combinatorial optimization problems .",
    "the qap has been introduced by koopmans and beckmann ( 1957 ) .",
    "it can be defined as a problem to allocate a facility set to a location set with mutual distances among the locations and mutual flow among the facilities .",
    "the objective is to assign each facility to a location such that the total cost is minimized . specifically , given two @xmath0 matrices @xmath1 and @xmath2 as input , such that all the elements are real , and let @xmath3 be flow among facility @xmath4 and facility @xmath5 , @xmath6 be the distance among the location @xmath7 and location @xmath8 .",
    "also , let @xmath9 be the number of facilities and locations , where @xmath10 .",
    "the formulation of the qap can be defined as follows ( koopmans and beckmann 1957 ) : @xmath11 where , @xmath12 is defined as a permutation set of @xmath9 locations .",
    "each individual product @xmath13 , computes the cost of assigning facility @xmath4 to location @xmath14 and facility @xmath5 to location @xmath15 .",
    "it should be noted that , one facility can be assigned to only one location , and one location can be assigned to only one facility in a solution ( m. zhao et al .",
    "2008 ; rainer et al .",
    "1998 ) .",
    "knowles and corne ( 2002 ) introduced another qap version , that is multiobjective qap ( mqap ) . in this case , the mqap has multiple flow matrices and a distance matrix .",
    "the mqap is more commonly used where one facility should be assigned to one location with respect to the multiple flow matrices and with a distance matrix such that flow matrices are different from each other .",
    "so , the mqap can be modeled as follows : @xmath16 where , @xmath17 in this formula , the @xmath18 indicates @xmath19 flow between facility @xmath4 and facility @xmath5 , and @xmath20 is number of objectives . other definitions in qap work here .",
    "bacteria foraging optimization ( bfo ) is one of the bio - inspired optimization algorithms that was developed to make a bridge between microbiology and engineering .",
    "the bfo algorithm imitates some characteristics of bacteria foraging such as chemotactic , reproduction , and quorum sensing .",
    "the bfo was introduced by kevin m. passino ( 2002 ) , and it consists of four steps namely : 1 ) chemotactic , 2 ) swarm , 3 ) reproduction , 4 ) elimination and dispersal which is a space to solve complicated optimization problems ( see section 3 ) .",
    "genetic algorithm is one of the powerful algorithm for solving the combinatorial optimization problem .",
    "ga imitates the process of evolution on an optimization problem .",
    "each feasible solution of a problem is behaved as an individual solution with corresponding fitness function value .",
    "ga keeps a population of feasible solutions in which the selection operator will maintain the fittest individuals .",
    "there is a structured randomized information exchange between two individuals to give rise to better individuals called crossover operator .",
    "the mutation operator is a process of adding diversity to the population by randomly changing some genes .",
    "the ga repeatedly applies these processes until the population converges ( gamal abd el - nasser a. said et al 2014 ) .",
    "chunguo wu , na zhang , jingqing jiang , jinhui yang , and yanchun liang ( 2007 ) have proposed a novel approach to solve job shop scheduling benchmark problem by using bacteria foraging algorithm . chunguo wu et al . have described bfo is a evolutionary computation algorithm which is based on the foraging behavior of ecoli bacteria , and it is a random search algorithm .",
    "the main aim of bfo algorithm is to eliminate those bacteria which have weak foraging methods and maintaining those bacteria which have breakthrough foraging methods to maximize energy per unit time .",
    "s. subramanian and s. padma ( 2011 ) have described that it is used to minimize cost and improve efficiency in parallel by using multiobjective bfo optimization .",
    "jing dang et al .",
    "( 2008 ) have described bfo algorithm as a biologically inspired computation technique such that each bacterium contacts with other bacteria by sending signals . in the process",
    ", bacteria move to the next step to collect nutrient if previous factors have been satisfied . during the lifetime of a bacterium",
    ", it undergoes different stages such as chemotactic , reproduction and elimination dispersal .",
    "the bfo algorithm has been implemented to solve various real world problems . in this paper ,",
    "the author suggested that the bfo could be used to solve difficult engineering design problems .    in the rest of this paper , an introduction of the bfo algorithm and the multiobjective bfo ( mobfo ) algorithm",
    "will be presented in section 3 . in section 4",
    ", a new approach using bfo algorithm for the solution of single and multiobjective qap will proposed . in section 5 ,",
    "experimental results of several methods will be compared with the proposed method .",
    "the results show that the proposed method outperforms other algorithms .",
    "the bacterial foraging optimization algorithm is one of the nature - inspired optimization algorithms , which inspired from bio mimicry of ecoli bacteria .",
    "the bfo introduced by kevin m. passino ( 2002 ) , is to eliminate those bacteria which have weak foraging methods and maintaining those bacteria which have breakthrough foraging methods to maximize energy obtained per unit time . in the process",
    ", each bacterium communicates with other bacteria by sending signals , in which bacteria move to the next step to collect nutrient if previous factors have been satisfied .",
    "the basis bfo includes of four principle parts : 1 ) chemotactic , 2 ) swarming , 3 ) reproduction , and 4 ) elimination and dispersal ( s. das et al .",
    "2009 ) .      in biological point of view",
    ", the chemotactic process is movement of bacteria for gathering food .",
    "the ecoli bacterium is able to move in two diverse ways , swimming and tumbling . in the swimming way",
    ", the bacterium swims in same direction to search for food , and in the tumbling way , it changes the direction to another direction .",
    "assume @xmath21 shows the current position in @xmath22 bacterium , @xmath23 chemotactic step , @xmath24 reproduction step , and @xmath25 elimination and dispersal event , the position of bacterium in the next chemotactic step by tumbling is as follows ( s. das et al .",
    "2009 ) : @xmath26 where , @xmath27 shows the size of the step taken in the random direction specified by the tumble for @xmath22 bacterium , @xmath28 indicates a vector in the random direction in population size whose elements lie in [ -1 , 1 ] , and @xmath29 shows transposed randomize vector of direction @xmath28 .",
    "in this part , more healthy bacteria attempt to attract other bacteria and collect them in a point to get the solution more quickly . essentially , the swarm is a behavior that wants to recruit and group bacteria to move as concentric pattern with high bacterial density .",
    "the mathematical formula of swarm behavior is defined as follows ( kevin m. passino 2002 ) : @xmath30+\\\\ \\sum_{i=1}^s\\big[-h_{repellent}exp\\big(-w_{repellent}\\sum_{m=1}^p(\\theta_m-\\theta_m^i)^2\\big)\\big]\\end{gathered}\\ ] ] where , @xmath31 shows fitness function cost . in every step",
    "it should be added to the main cost ( to be minimized ) .",
    "@xmath32 shows how far a bacterium is from the fittest bacterium .",
    "the @xmath33 is the total number of bacteria , @xmath34 is the number of variables to be optimized in each bacterium , @xmath35 is the position of the p - dimensional search space , where @xmath36,@xmath37,@xmath38 , @xmath39 and @xmath40 are diversity coefficients .",
    "after chemotactic and swarming periods , some bacteria have enough nutrient and some others are unsuccessful at searching for nutrient . in reproduction part , those bacteria which have enough nutrient will reproduce and others are eliminated . to this end",
    ", the health status of each bacterium is calculated as the sum of the step fitness during its life as follows : @xmath41 values obtained by @xmath42 for each individual of the population ( bacteria ) are sorted in ascending order . the first half of the bacteria ( @xmath43 ) are duplicated and replaced to the second half that have less health status value .",
    "so , individuals with lower health status value has more chance to survive .",
    "this process not only will keep the population constant , but also the healthier bacteria continue to next generation .      during this step ,",
    "the population may eventually change their positions when density of bacteria being high in a small area and the temperature of this area being increased along with that .",
    "thus , the algorithm kills bacteria at high temperature . in this case",
    ", the elimination and dispersal event relocates the bacteria to different environments to avoid to bacteria death , and avoid locally optimal solution .",
    "in the bfo algorithm bacteria attempt to find concentrated nutrients avoid noxious substrates . in this case , there is just one objective which exploring the search .",
    "instead multiobjective bacterial foraging optimization ( mobfo ) is inspired for solution of multiobjective optimization problems .",
    "the main aim of such problems is to find all values which are possibly satisfied to all fitness functions .",
    "since different decision makers have different ideas about fitness functions , it is not easy to choose a single solution for multiobjective optimization problems without interaction with the decision makers .",
    "thus , the mobfo shows a set of pareto optimal solutions to decision makers .",
    "the main target of multiobjective optimization problems is to obtain a nondominated front which is close to the true pareto front .",
    "thereafter , the mobfo with integration between health sorting approach and pareto dominance mechanism to solve multiobjective problems is proposed ( b.k .",
    "panigrahi et al .",
    "the new optimization algorithm based on mobfo is given .",
    "bacteria foraging algorithm is one of the bio - inspired algorithms which can solve the qap . since , the qap is a nonlinear problem , most probably reasonable solutions can be achieved with deterministic algorithms ( p.ji et al .",
    "2006 ) .",
    "the reason that bfo has been chosen to solve qap problems is because both of them are geometrically relevant to find the solutions .",
    "moreover , the bfo is representation an optimization algorithm that can avoid locally optimal solutions in the elimination and dispersal step and leads to global optimal .",
    "so , many times np - hard problems like qap that are stopped by local optima needs to be solved with optimization algorithms like bfo .    in this paper , bfo and mobfo",
    "have been used for the solution of qap and mqap , respectively .",
    "the chemotactic step is the updating part of bfo in which we have plugged in some of ga ( k. deb et al . 2002 ) operators such as crossover and mutation .",
    "the crossover operator transfers the parents chromosome to the next generation and makes solution to avoid local minimum optima . on the other hand ,",
    "the mutation operator creates new positions of increase diversity .",
    "in addition , tabu search ( fred glover 1990 ) is plugged in to elimination and dispersal part along with bacteria split i.e. this will lead algorithm escape from local optima . in this section",
    ", we will explain ga operators and tabu search in detail .",
    "there are two concepts to optimize , single objective and multiobjective .",
    "first of all , the definition of each will present .",
    "then the corresponding algorithm for the solution of problems in different concepts will explain .      in the case of single objective",
    "qap the aim is to find one compatible solution in which the cost between facilities and locations is minimized .",
    "consequently , the proposed bfo with mutation operators in the updating part along with tabu search algorithm in elimination and dispersal can found reasonable solutions .",
    "the modified bfo algorithm has three main steps : 1 ) chemotatic , 2 ) reproduction , and 3 ) elimination and dispersal .",
    "as we mentioned above , the mutation operator modifies current solution in the updating part of algorithm ( step 2 , chemotactic ) .",
    "we used three different kinds of mutation methods , separately , in this algorithm ; swap mutation ( banzhaf , w 1990 ) , which is one of the simplest mutation methods ; @xmath44 mutation ( p. larran et al . 1999 ) ; and inversion mutation ( fogel , d. b 1990 ) .",
    "results indicates bfo is more adaptable with the swap mutation method .    in swap mutation , two locations in the solution",
    "will be selected randomly , and will be exchanged . in @xmath44 mutation method ,",
    "given solution size @xmath45 divided into 3 blocks and will act like swap mutation , i.e. two blocks will be chosen randomly and exchanged . and , in inversion mutation , two random numbers in the solution size will be generated and the corresponding range of these random numbers will be inverted to new solution .      tabu search ( ts ) ( tabitha james et al .",
    "2009 ) is a kind of local search algorithm which mostly applies to np - hard problems .",
    "ts is a procedure that searches locally and periodically through solution space to improve the solution @xmath46 to the solution @xmath47 in the neighborhood of @xmath46 .",
    "the difference of ts with other local search algorithm is based on the tabu list , that is a special short term memory .",
    "this memory is included the previously visited solutions that stores some of the attributes of solutions .",
    "thus , it gives no permission to revisited the solutions and avoid the local optima solution . during the local search",
    "only those moves that are not in the tabu list will be examined , and if it produces a better solution , then the tabu list will be overridden with new solution .",
    "since qap is defined as np - problem , then we use ts as a local search algorithm after the elimination and dispersal part to optimize the final solutions and avoid the local optima .",
    "+ figure 2 demonstrate the proposed single objective bfo in 10 steps . in step 1 and 2 , the variables are initialized and a set of random permutation numbers with @xmath34 size will be generated for each of the bacteria . in step 3 ,",
    "a given qap problem is computed for the whole population of bacteria using equation ( 1 ) , and the minimum cost through the whole population will be sorted as best so far .",
    "after that , the bfo algorithm gets started by the chemotactic part .",
    "the chemotactic step is one of the modified parts of the bfo algorithm in this work .",
    "thus , mutation operators have been used each time in order to recreate a new population and recalculate the cost of assignment .",
    "again , the minimum cost through whole population will be compared with the old solution and if it is smaller than that , then it will be replaced with the best so far , otherwise the algorithm continues with the old solution .    in the reproduction step ,",
    "the entire population costs that are obtained from previous step will be sorted in ascending order and the first half of population are replaced with the second half . for more convenience the number of bacteria ( population ) have been set as even number , such that in duplicating time both parts are same , and the population stays constant .",
    "@xmath48 is a probability of eliminate and disperse the bacteria from a location to another location .",
    "kevin m. passino ( 2002 ) , used 0.25 in original algorithm , and here we leave it unchanged and set the probability to 0.25 .",
    "so , each time a random number will be generated between 0 and 1 , and if that is less than or equal to @xmath48 , then elimination and dispersal part starts , otherwise the algorithm will continue with current bacteria .    in step 10 ,",
    "ts algorithm is applied on the best so far solutions and the algorithm will try to optimize locally . finally , the new solutions will compare with the best so far solutions , and whichever are better will set to as best so far solutions .      in the case of multiobjectives",
    "qap ( mqap ) the aim is to find a set of nondominated solutions in which the cost between facilities and locations is minimized .",
    "the modified bfo , by using one of the mutation methods that we mentioned in previous section and a crossover operator ( see next section ) , finds a nondominated set of solutions . in order to minimize the cost of nondominated set , a multiobjective version of ts algorithm",
    "was applied to the elimination and dispersal step .",
    "the proposed mobfo algorithm has three main steps : 1 ) chemotatic , 2 ) reproduction , and 3 ) elimination and dispersal .",
    "intuitively we are able to say that the solution @xmath49 is better than solution @xmath50 in multiobjective optimization if and only if solution @xmath49 dominates solution @xmath50 .",
    "thus , the domination method made it possible to compare different solutions in the multiobjective criteria .",
    "to this end , the population is sorted by using the well known fast nondominated sort ( k. deb et al .",
    "shortly , for each individual @xmath4 , an integer value keeping the number of solutions which dominate @xmath4 is established , and a set @xmath51 with the individuals dominated by the individual @xmath4 is computed . with these variables , each individual",
    "is allocated a rank which represents the front .",
    "thus , the pareto front has rank 0 .",
    "those individuals dominated individuals of the pareto front have rank 1 .",
    "together , the individuals dominated only by individuals of rank @xmath52 have rank @xmath53 .",
    "note , the solutions with rank 0 are the best ones in this approach .",
    "ll variables & setting + number of bacteria per generation @xmath54 & 50 + chemotactic steps @xmath55 & 10 + reproduction steps @xmath56 & 4 + elimination and dispersal steps @xmath57 & 10 + probability for elimination and dispersal @xmath58 & 0.25 + number of the runs ( era ) & 10 +    lllllll problems & & + & proposed bfo & original bfo &    [ cols=\"^ \" , ]      + kc10 - 2fl-1rl & real - like & 10 & 2 + kc10 - 2fl-2rl & real - like & 10 & 2 + kc10 - 2fl-3rl & real - like & 10 & 2 + kc10 - 2fl-4rl & real - like & 10 & 2 + kc10 - 2fl-5rl & real - like & 10 & 2 + kc20 - 2fl-1rl & real - like & 20 & 2 + kc20 - 2fl-2rl & real - like & 20 & 2 + kc10 - 2fl-1uni & uniform & 10 & 2 + kc10 - 2fl-2uni & uniform & 10 & 2 + kc10 - 2fl-3uni & uniform & 10 & 2 + kc20 - 2fl-1uni & uniform & 20 & 2 + kc20 - 2fl-2uni & uniform & 20 & 2 +    llllll test name & mgrasp / mh & fuzzy pso & nsga - ii & original mbfo & proposed mobfo + kc10 - 2fl-1rl & 6.0364e+04 & 0 & 0 & 3.6304e+04 & 0 + kc10 - 2fl-2rl & 7.7505e+04 & 0 & 0 & 0 & 0 + kc10 - 2fl-3rl & 6.5790e+04 & 0 & 0 & 2.0828e+04 & 0 + kc10 - 2fl-4rl & 1.0145e+04 & 0 & 0 & 2.2742e+03 & 0 + kc10 - 2fl-5rl & 3.7627e+04 & & 0 & 0 7.8350e+04 & 0 + kc20 - 2fl-1rl & 1.0004e+06 & - & 8.6505e+04 & 3.3506e+05 & 1.4131e+03 + kc20 - 2fl-2rl & 5.2403e+06 & - & 2.5075e+06 & 4.8649e+06 & 1.4435e+06 + kc10 - 2fl-1uni & 2.3550e+03 & 0 & 0 & 6.2979e+03 & 0 + kc10 - 2fl-2uni & 8.5809e+03 & 0 & 0 & 0 & 0 + kc10 - 2fl-3uni & 462.0308 & 0 & 0 & 427.8507 & 0 + kc20 - 2fl-1uni & 1.4341e+04 & - & 3.0844e+03 & 1.1162e+04 & 699.2820 + kc20 - 2fl-2uni & 5.3530e+05 & - & 5.2399e+05 & 8.5236e+05 & 3.4735e+05 +      the crossover is one of the main operators of ga .",
    "this operator exchanges some elements in two parents and create a new solution ( offspring ) . essentially , crossover is a completely random operator that transfers the information from parents to offspring .",
    "so far , many kinds of crossover are available for different purposes , here we selected one of very famous one .",
    "the uniform like crossover ( ulx )",
    "operator was introduced by tate and smith ( 1995 ) , and mostly applies on permutation , based solutions .",
    "crossover combines two permutation @xmath59 and @xmath60 of size @xmath34 and creates a new solution .",
    "similarly , ulx crossover compares the elements in @xmath59 and @xmath60 and copies the equal elements to the solution .",
    "after that , one of the @xmath59 and @xmath60 is selected randomly , and the first element of that transfers to the first location in the solution . then , for the second location second element of another permutation will be transferred .",
    "if the transferred element repeated twice , it has not to be transferred , instead this element will be replaced from same location of another permutation .",
    "if again the element is repeated , a random number of size @xmath34 will generated and replaced to the solution .",
    "figure 3 demonstrates the proposed mobfo algorithm .",
    "similarly , mobfo has 10 steps like bfo algorithm , but instead of one solution this algorithm attempts to find a set of nondominated solutions .",
    "thus , all steps are as same as bfo , where @xmath61 is another variable that is initialized for the number of objectives , and ulx crossover is plugged in to the chemotactic part in order to update every two bacteria to create a new solution .",
    "ultimately , a set of nondominated solution using the raking mechanism algorithm will be collected in each iteration .",
    "in addition to that , multiobjective ts is plugged in to the elimination and dispersal part in order to apply local search on the current nondominated set of solutions and optimize them .",
    "problems from the well known qaplib ( rainer e. burkhard et al .",
    "1991 ) are used here to evaluate the performance of the algorithm .",
    "the experimental environment is p4 pc machine with 1 gb memory ; operating system is windows 7 ; developing software is matlab 2010a .",
    "we tested our bfo on 14 instances in qaplib .",
    "the results were compared with original bfo and best known so far solutions that are available in qaplib . also , standard deviation ( sd ) of the our bfo and results obtained for p. ji et al ( 2006 ) and z. drezner ( 2003 ) were compared .",
    "table 1 shows the algorithm settings that were tested .",
    "table 2 demonstrates the results of single objective instances .",
    "it can be found that our bfo performed better than original bfo in terms of optimal results .",
    "and our bfo performed better than z. drezner ( 2003 ) and p. ji et al ( 2006 ) when the problem size is not large .",
    "however , in some large instances when the size is 32 and 50 our bfo performed as good as z. drezner ( 2003 ) and p. ji et al ( 2006 ) .",
    "we used a set of 12 benchmark mqap instances to test the performance of mobfo .",
    "table 3 shows instances were created by knowles , j.d . and corne , d.w .",
    "( 2002 ) and are available at http://www.cs.bham.ac.uk/@xmath62jdk / mqap/. the experimental environment and developing software were keep as same as bfo .",
    "we compared our mobfo to original multiobjective bfo and to three state - of - the - art evolutionary multiobjective algorithms - mgrasp / mh , fuzzy pso , nsga - ii . in nsga - ii the nondominated solutions found so far have priority to survive in the population . the diversity of these nondominated solutions is maintained by estimating their density . in fuzzy pso scheme , the representations of the position and velocity of the particles in the conventional pso is extended form the real vectors to fuzzy matrices . in mgrasp",
    "/ mh , elitist - based greedy randomized construction , cooperation between solutions , and weighted - vector adaptations were used to accelerate convergence and diversify the search .    the generational distance ( gd ) values found by five algorithms",
    "are summarized in table 4 .",
    "it is evident that our mobfo clearly outperform the other three algorithms on all test instances .",
    "clearly , mgrasp / mh and original mbfo show the worst performance in the terms of minimizing gd .",
    "the main reason for original mbfo and nsga - ii might be the lack of local research to improve offspring solutions in these two algorithms . and",
    "the main for mgrasp / mh might be the construction of starting solutions copies parts or components from elite solutions .",
    "the pareto front of the nondominated sets found by all five algorithms after 10 times run on the four two - objectives instances are plotted in figures 4 - 7 .",
    "it can be observed from fig .",
    "4 that our mobfo and nsga - ii algorithm find almost the same set of nondominated set and better than other three algorithms on instance kc10 - 2fl-1rl .",
    "the results in fig .",
    "5 shows that our mobfo , fuzzy pso , and nsga - ii clearly perform better than original mbfo and mgrasp / mh on kc10 - 2fl-1uni .",
    "figs . 6 and 7",
    "show that our mobfo not only find more pareto front solutions , but also the results are more converge than other approaches .",
    "since qap is an np - hard problem , its solution can not be achieved in reasonable time .",
    "therefore , this is one of the reasons that scientists try to find an adaptive combinatorial optimization algorithm to tackle this problem .",
    "bacteria foraging algorithm is one of the well known combinatorial optimization algorithms which can be used to find compatible solutions .",
    "we modified bfo algorithm for the solution of qap and mqap .",
    "the proposed algorithm is based on bacteria foraging optimization which were developed in two extents : single objective optimization and multiobjective optimization . for this purpose , two genetic algorithm updating mechanisms , crossover and mutation , were used to update the solutions .",
    "we also used tabu search algorithm to improve the nondominated solutions locally . in the single objective optimization , the proposed algorithm attempts to find best solution , but on the other hand , multiobjective optimization algorithm tries to find a set of nondominated solutions .",
    "therefore , in the multiobjective case , dominance technique were applied to find the pareto front of nondominated solutions .",
    "the proposed algorithm results show that bfo and mobfo can solve the qap and mqap problems better than compared algorithms .",
    "also , results show that ga operators help our bfo and mobfo to update the solutions and move towards the best ones .",
    "table 2 show the results of the single objective problems using our bfo that are as same as optimal solutions .",
    "the performance of pareto fronts that have been achieved for the mqap problems ( figs . 4 - 7 ) show that our mobfo algorithm outperform than other approaches in this contexts .",
    "conflict of interest : author s. parvandeh declares that he has no conflict of interest . author a. nveren declares that he has no conflict of interest .",
    "author b. c. white declares that he has no conflict of interest .",
    "author m. boroumand declares that he has no conflict of interest .",
    "author p. soltani declares that she has no conflict of interest .    ethical approval : all procedures performed in studies involving human participants were in accordance with the ethical standards of the institutional and/or national research committee and with the 1964 helsinki declaration and its later amendments or comparable ethical standards .    ethical approval : this article does not contain any studies with animals performed by any of the authors .",
    "informed consent : informed consent was obtained from all individual participants included in the study .",
    "alfonsas miseviius , bronislovas kilda ( 2005 ) comparison of crossover operators for the quadratic assignment problem .",
    "information technology and control , vol.34 , no.2 .",
    "panigrahi , v. r. pandi , r. sharma , das , s. das ( 2011 ) multi objective bacteria foraging algorithm for electrical load dispatch problem , department of electrical engineering , iit , delhi , india , b.k .",
    "panigrahi et al .",
    "/ energy conversion and management 52 13341342 .",
    "( science direct )    chunguo wu , na zhang , jingqing jiang , jinhui yang , and yanchun liang ( 2007 ) improved bacterial foraging algorithms and their applications to job shop scheduling problems .",
    "international journal of programming languages and applications ( ijpla ) , vol.2 , no.4      fogel , d. b ( 1990 ) a parallel processing approach to a multiple traveling salesman problem using evolutionary programming .",
    "proceedings of the fourth annual symposium on parallel processing .",
    "fullerton , california , pp .",
    "318326 .",
    "gamal abd el - nasser a. said , abeer m. mahmoud , and el - sayed m. el - horbaty ( 2014 ) a comparative study of meta - heuristic algorithms for solving quadratic assignment problem .",
    "international journal of advanced computer science and applications ( ijacsa ) , vol . 5 , no .",
    "1 .    g.naresh , m.ramalinga raju and s.v.l.narasimham ( 2011 ) bacterial foraging algorithm for the robust design of multimachine power system stabilizer . international conference on signal , image processing and applications .",
    "ipcsit vol.21 , iacsit press , singapore .",
    "jing dang , anthony brabazon , michael oneill , and david edition ( 2008 ) option model calibration using a bacterial foraging optimization algorithm .",
    "lecture notes in computer science , volume 4974 , pp 113 - 122 .",
    "knowles , j. d. and corne , d. w. ( 2002 ) instance generators and test suites for the multiobjective quadratic assignment problem .",
    "evolutionary multi criterion optimization ( emo 2003 ) second international conference , faro , portugal , april 2003 , proceedings , pp 295 - 310 .",
    "m. zhao , a. abraham , c. grosan and h. liu ( 2008 ) a fuzzy particle swarm approach to multi objective quadratic assignment problems .",
    "second asia international conference on modelling & simulation 978 - 0 - 7695 - 3136 - 6/08 .",
    "doi 10.1109/ams.169 .",
    "ji yongzhong wu haozhao liu ( 2006 ) a solution method for the quadratic assignment problem ( qap ) .",
    "the sixth international symposium on operations research and its applications ( isora06 ) .",
    "orsc & aporc , pp .",
    "106117 .    p.",
    "larran aga , c.m.h .",
    "kuijpers , r.h .",
    "murga , i. inza and s. dizdarevic ( 1999 ) genetic algorithms for the travelling salesman problem : a review of representations and operators , artificial intelligence review 13 : 129170 .",
    "richard o. day , mark p. kleeman , gary b. lamont ( 2003 ) solving the multi - objective quadratic assignment problem using a fast messy genetic algorithm . dept . of electr . & comput .",
    ", air force inst . of technol .",
    ", wright - patterson afb , oh , usa 01/2004 .",
    "doi:10.1109/cec , volume : 4 .",
    "r. vijay ( 2012 ) intelligent bacterial foraging optimization technique to economic load dispatch problem .",
    "international journal of soft computing & engineering ( ijsce ) .",
    "issn : 2231 - 2307 , volume 2 , issue 2 ."
  ],
  "abstract_text": [
    "<S> the bacterial foraging optimization ( bfo ) is one of the metaheuristics algorithms that most widely used to solve optimization problems . </S>",
    "<S> the bfo is imitated from the behavior of the foraging bacteria group such as ecoli . </S>",
    "<S> the main aim of algorithm is to eliminate those bacteria that have weak foraging methods and maintaining those bacteria that have strong foraging methods . in this extent , </S>",
    "<S> each bacterium communicates with other bacteria by sending signals such that bacterium change the position in the next step if prior factors have been satisfied . </S>",
    "<S> in fact , the process of algorithm allows bacteria to follow up nutrients toward the optimal . in this paper , the bfo </S>",
    "<S> is used for the solutions of quadratic assignment problem ( qap ) , and multiobjective qap ( mqap ) by using updating mechanisms including mutation , crossover , and a local search .    </S>",
    "<S> example.eps gsave newpath 20 20 moveto 20 220 lineto 220 220 lineto 220 20 lineto closepath 2 setlinewidth gsave .4 setgray fill grestore stroke grestore </S>"
  ]
}
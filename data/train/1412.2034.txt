{
  "article_text": [
    "imagine a network of pipes that must be periodically cleaned of a regenerating contaminant , say algae . in",
    "_ cleaning _ such a network , there is an initial configuration of brushes on vertices , and every vertex and edge is initially regarded as _",
    "dirty_. a vertex is ready to be cleaned if it has at least as many brushes as incident dirty edges .",
    "when a vertex is cleaned , it sends one brush along each incident dirty edge ; these edges are now said to be _",
    "clean_. ( no brush ever traverses a clean edge . )",
    "the vertex is also deemed clean .",
    "excess brushes remain on the clean vertex and take no further part in the process .",
    "( in fact , for our purposes in this paper , we may think about clean vertices as if they were removed from the graph . )",
    "the goal is to clean all vertices ( and hence also all edges ) of the graph using as few brushes as possible .",
    "the minimum number of brushes needed to clean a graph @xmath0 is the _ brush number _ of @xmath0 , denoted @xmath6 .",
    "figure  [ fig : ex1 ] illustrates the cleaning process for a graph @xmath0 where there are initially @xmath7 brushes at vertex @xmath8 .",
    "the solid edges indicate dirty edges while the dotted edges indicate clean edges .",
    "for example , the process starts with vertex @xmath8 being cleaned , sending a brush to each of vertices @xmath9 and @xmath10 .",
    "@xmath11{fig.jpg}\\ ] ] [ fig : ex1 ]    this model , which was introduced in  @xcite , is tightly connected to the concept of _ minimum total imbalance _ of a graph , which is used in graph drawing theory .",
    "the cleaning process has been well studied , especially on random graphs  @xcite .",
    "( see also  @xcite for algorithmic aspects , @xcite for a related model of cleaning with brooms , @xcite for a variant with no edge capacity restrictions , @xcite for a variant in which vertices can send out no more than @xmath12 brushes , and  @xcite for a combinatorial game . )",
    "owing to inspiration from chip - firing processes  @xcite , brushes disperse from an individual vertex in unison , provided that their vertex meets the criteria to be cleaned .",
    "models in which multiple vertices may be cleaned simultaneously are called _ parallel cleaning models _ ; see  @xcite for more details .",
    "in contrast , _ sequential cleaning models _ mandate that vertices get cleaned one at a time .",
    "the variant considered in  @xcite and the one we consider in this paper are sequential in nature .",
    "the _ brushing game _ that we introduce in this paper is a two - player game played on a graph @xmath0 .",
    "initially , every vertex and edge is dirty and there are no brushes on any vertices .",
    "the players , max and min , alternate turns ; on each turn , a player adds one brush to a vertex of his or her choosing .    when a vertex accumulates at least as many brushes as it has dirty neighbors , it _ fires _ , sending one brush to each dirty neighbor .",
    "all edges incident to this vertex become clean , and the vertex itself becomes clean .",
    "this may in turn make other vertices ready to fire , so the process continues until we obtain a stable configuration .",
    "( it is known that the sequence in which vertices fire does not affect the distribution of brushes on dirty vertices ",
    "see below for more details . )",
    "the game ends when all vertices ( and so all edges as well ) are clean .",
    "max aims to maximize the number of brushes played before this point , while min aims to minimize it .",
    "when min starts and both players play optimally , the length of the game on @xmath0 is the _ game brush number _ of @xmath0 , denoted @xmath1 ; we use @xmath13 to denote the variant of the game in which max plays first .",
    "( we sometimes refer to the former as the `` min - start game '' and the latter as the `` max - start game '' . )",
    "a _ turn _ of the game is the placement of a single brush ; a _ round _ is a pair of consecutive turns , one by each player .",
    "the game brush number follows in the same spirit as the game matching number  @xcite , game chromatic number  @xcite , game domination number  @xcite , toppling number  @xcite , etc .",
    ", in which players with conflicting objectives together make choices that produce a feasible solution to some optimization problem .",
    "the general area can be called _ competitive optimization_.    throughout this paper , we consider only finite , simple , undirected graphs .",
    "for background on graph theory , the reader is directed to  @xcite .",
    "let us start with the following convenient bound proved in section  [ sec : pre ] .",
    "[ thm : at_most_one ] always @xmath14 .",
    "theorem  [ thm : at_most_one ] is best possible .",
    "for the star @xmath15 , we have @xmath16 and @xmath17 ; in particular , we have @xmath18 and @xmath19 . on the other hand , for @xmath20 we have @xmath21 and @xmath22 .",
    "( we remark without proof that the graph @xmath23 obtained by taking @xmath24 triangles and identifying a single vertex of each has @xmath25 and @xmath26 ; this yields another family  with unbounded brush number  witnessing sharpness of the bound .",
    "we leave the rather tedious details to the reader . )    for the remainder of the paper , we will be concerned primarily with the asymptotics of @xmath27 over various families of graphs .",
    "hence the difference between @xmath27 and @xmath28 is unimportant ; we use whichever is most convenient ( but prefer @xmath27 in general ) .",
    "because the game produces a feasible solution to the original problem , the value of the game parameter is bounded by that of the original optimization parameter .",
    "[ prop : trivial_bounds ] always @xmath29 and @xmath30 .    these bounds ,",
    "though elementary , are best possible in a strong sense :    [ thm : a ] for every rational number @xmath31 in @xmath32 , there exists a graph @xmath0 such that @xmath33    we next turn our attention to complete graphs .",
    "our next main result ( proved in section  [ sec : complete ] ) provides the asymptotic behavior of the game brush number for @xmath34 .",
    "[ thm : complete ] @xmath35    finally , we move to random graphs .",
    "the _ random graph _ @xmath3 consists of the probability space @xmath36 , where @xmath37 is the set of all graphs with vertex set @xmath38 , @xmath39 is the family of all subsets of @xmath37 , and for every @xmath40 , @xmath41 this space may be viewed as the set of outcomes of @xmath42 independent coin flips , one for each pair @xmath43 of vertices , where the probability of success ( that is , adding edge @xmath44 ) is @xmath45 note that @xmath46 may ( and usually does ) tend to zero as @xmath47 tends to infinity .",
    "all asymptotics throughout are as @xmath48 ( we emphasize that the notations @xmath49 and @xmath50 refer to functions of @xmath47 , not necessarily positive , whose growth is bounded ) .",
    "we say that an event in a probability space holds _ asymptotically almost surely _ ( or _ a.a.s .",
    "_ ) if the probability that it holds tends to @xmath51 as @xmath47 goes to infinity .",
    "our main result here is the following :    [ thm : random_brushing ] for @xmath52 and @xmath53 , a.a.s .",
    "@xmath54    the result is proved in section  [ sec : random ] .",
    "a _ configuration _ of a graph @xmath0 is an assignment of some nonnegative integer number of brushes to each vertex of @xmath0 ; we represent a configuration by a map @xmath55 .",
    "given a configuration @xmath56 of @xmath0 , we may _",
    "clean _ those vertices @xmath57 having at least as many brushes as dirty neighbors ; cleaning @xmath57 moves one brush from @xmath57 to each dirty neighbor .",
    "the process of cleaning a vertex @xmath57 is also referred to as _ firing _",
    "we say that @xmath0 can be _ cleaned by _ the configuration @xmath56 when some list of vertex cleanings , starting from @xmath56 , results in every vertex of @xmath0 being cleaned .",
    "given configurations @xmath56 and @xmath58 of a graph @xmath0 , we say that @xmath56 _ dominates _",
    "@xmath58 provided that @xmath59 for all @xmath60 .",
    "the following well - known facts will be of use :    [ obs : basic ] for any graph @xmath0 ,    1 .",
    "let @xmath56 and @xmath58 be configurations of @xmath0 such that @xmath56 dominates @xmath58 .",
    "if @xmath0 can be cleaned by @xmath58 , then it can also be cleaned by @xmath56 .",
    "2 .   if @xmath0 can be cleaned by @xmath56 , then every maximal list of vertex firings ( starting from @xmath56 ) cleans all vertices of @xmath0 .",
    "fact ( 2 ) above implies that in the brushing game , it is the multiset of brushes placed that determines whether the game has ended ; the order of moves is irrelevant .",
    "we also need the following result from  @xcite .",
    "[ thm : odd_degree ] the brush number of any graph is at least half the number of vertices of odd degree .    the idea behind theorem  [ thm : odd_degree ] is that during the course of the brushing process , each individual brush traces out a path in the graph , called a _",
    "brush path_. since every edge in the graph gets traversed by one and only one brush , the brush paths are edge - disjoint and cover the edges of the graph .",
    "thus every vertex of odd degree must serve as the beginning or end of at least one brush path , so the number of brush paths  and hence the number of brushes  must be at least half the number of vertices of odd degree .",
    "now we are ready to prove theorem  [ thm : at_most_one ] .",
    "we obtain the theorem as a simple consequence of a more general lemma . given a configuration @xmath56 of graph @xmath0 , let @xmath61 and @xmath62 denote the lengths of the min - start and max - start games , respectively , when we begin the game with initial configuration @xmath56 and both players play optimally .",
    "[ lem : domination ] let @xmath56 and @xmath58 be configurations of a graph @xmath0 . if @xmath56 dominates @xmath58 , then @xmath63 and @xmath64 .",
    "moreover , @xmath65 and @xmath66 .",
    "we prove @xmath63 and @xmath65 ; the proofs of the other inequalities are nearly identical .",
    "consider two games : the _ @xmath56-game _ , in which we have initial configuration @xmath56 , and the _ @xmath58-game _ , in which we have initial configuration @xmath58 .",
    "intuitively , the additional brushes initially present in the @xmath56-game can not lengthen the game .",
    "however , for a formal proof , more care is needed : these extra brushes could cause some vertices to fire earlier in the @xmath56-game , which could invalidate some of min s desired moves .",
    "we give a strategy for min in the @xmath56-game .",
    "min plays the @xmath56-game and @xmath58-game simultaneously ; the @xmath56-game is the `` real '' game in which both players play , while the @xmath58-game is `` imagined '' by min to guide her play in the @xmath56-game . at all times",
    ", we denote by @xmath67 the current configuration of the @xmath56-game and by @xmath68 the current configuration of the @xmath58-game .",
    "min aims to ensure that the @xmath56-game finishes no later than the @xmath58-game .",
    "we maintain the invariant that @xmath69 for each vertex @xmath57 that is dirty in both games , where @xmath70 and @xmath71 denote the number of clean neighbors of @xmath57 in the @xmath56-game and in the @xmath58-game , respectively . as a consequence of this invariant , it is straightforward to see ( say , by induction on the number of turns elapsed in the game ) that every dirty vertex in the @xmath56-game is also dirty in the @xmath58-game",
    "; consequently , we also have @xmath72 . cleaning a neighbor of @xmath57 in the @xmath56-game ( resp .",
    "@xmath58-game ) does not change @xmath73 ( resp .",
    "@xmath74 ) , so the invariant is maintained when vertices fire .",
    "thus , when verifying the invariant in the analysis below , we need not concern ourselves with vertex cleaning .",
    "the invariant clearly holds initially .",
    "subsequently , on max s turns , max plays in the @xmath56-game and min imagines the same move in the @xmath58-game .",
    "( note that every valid move in the @xmath56-game is valid also in the @xmath58-game , since for every vertex @xmath57 that is clean in the @xmath56-game , we have @xmath75 . )",
    "this clearly maintains the invariant . on min s",
    "turns , min chooses some optimal move in the @xmath58-game ; suppose she adds a brush to vertex @xmath57 .",
    "if this move is valid in the @xmath56-game , then min plays the same move there , which maintains the invariant .",
    "otherwise , min plays any valid move in the @xmath56-game .",
    "( if there are no valid moves in the @xmath56-game , then the @xmath56-game has ended before the @xmath58-game , as desired . ) in this case , @xmath57 must have been clean in the @xmath56-game but dirty in the @xmath58-game , so @xmath57 itself has no bearing on the invariant ; indeed , when we consider only those vertices that are dirty in both games , the invariant is clearly maintained .",
    "min follows an optimal strategy for the @xmath58-game , so that game lasts for at most @xmath76 turns .",
    "since every clean vertex in the @xmath58-game is also clean in the @xmath56-game , the @xmath56-game finishes no later than the @xmath58-game .",
    "consequently @xmath63 , as claimed .",
    "finally , to prove @xmath65 , we observe that min could apply the following strategy : starting from configuration @xmath58 , iteratively add brushes to dirty vertices @xmath57 with fewer than @xmath77 brushes , until no such vertices remain .",
    "this requires at most @xmath78 turns by min ( and hence an equal number of turns by max ) .",
    "the resulting configuration dominates @xmath56 , so from this point , min can end the game in at most @xmath61 additional turns .",
    "lemma  [ lem : domination ] formalizes the intuition that extra brushes can not hinder min nor help max .",
    "this yields a quick proof of theorem  [ thm : at_most_one ] :    let max play an optimal first move in the max - start game , and denote the resulting configuration by @xmath56 .",
    "the remainder of the game can be viewed as a min - start game with initial configuration @xmath56 .",
    "thus by lemma  [ lem : domination ] , @xmath79 .",
    "similarly , let min play an optimal first move in the min - start game , and denote the resulting configuration by @xmath58 .",
    "this time , lemma  [ lem : domination ] yields @xmath80 .",
    "this completes the proof .",
    "recall from proposition  [ prop : trivial_bounds ] that always @xmath29 and @xmath30 , because min can use her first @xmath6 turns to play brushes in some configuration realizing @xmath6 .",
    "thus always @xmath81 .",
    "it is natural to ask whether the set of all such ratios , over all connected graphs @xmath0 , is dense in @xmath32 .",
    "the constructions we use to answer this question make use of combs and sunlets .",
    "the _ @xmath47-comb _ @xmath82 and _ @xmath47-sunlet _ @xmath83 are the graphs obtained from @xmath84 and from @xmath85 , respectively , by attaching one pendant leaf to each vertex .    [",
    "lem : ratio ] fix @xmath86 , all at least 2 .",
    "let @xmath0 be the disjoint union of @xmath87 . furthermore ,",
    "suppose that , in each component of @xmath0 , the two vertices of degree 2 contain one brush each , while all other vertices are empty .",
    "if we play the brushing game from this initial configuration , then the number of turns needed to clean @xmath0 is @xmath88 , regardless of which player moves first .",
    "let @xmath89 .",
    "we begin with the lower bound .",
    "the graph @xmath0 can be obtained from @xmath90 by placing one brush on each of @xmath91 appropriately - chosen pendant leaves and their neighbors , then allowing these vertices to fire .",
    "( here we are supposing for convenience that clean vertices are deleted from the graph ; we may do so because clean vertices no longer affect the game . ) since @xmath90 contains @xmath92 vertices of odd degree , theorem  [ thm : odd_degree ] yields @xmath93 .",
    "since @xmath94 brushes have already been placed , the number of additional brushes needed to clean @xmath0 is at least @xmath95 ; this establishes the desired bound .    for the upper bound",
    ", we give a strategy for min .",
    "we use induction on @xmath47 .",
    "when @xmath96 the claim is clear , so suppose @xmath20 .",
    "if min plays first , then she plays on any vertex of degree 2 .",
    "if the component in which she played was isomorphic to @xmath97 , then the entire component gets cleaned , and only @xmath98 components remain . by the induction hypothesis ,",
    "the number of additional turns needed is @xmath99 , which simplifies to @xmath100 , and the desired bound follows . if instead the component was isomorphic to @xmath101 for @xmath102 , then only the vertex at which min played and its pendant leaf fire , leaving a component isomorphic to @xmath103 with the desired initial configuration .",
    "the induction hypothesis again shows that the game lasts @xmath100 more turns , and the desired bound again follows .",
    "if instead max plays first , then he has four options : he may play on a vertex of degree 2 , on a pendant leaf attached to a vertex of degree 2 , on a vertex of degree 3 , or on a pendant leaf attached to a vertex of degree 3 . in the first two cases ,",
    "the desired bound follows as before .",
    "otherwise , let @xmath57 be the vertex at which max plays .",
    "if @xmath57 has degree 3 , then min plays at its pendant leaf ; if @xmath57 is itself a pendant leaf , then min plays at its neighbor . in either case , @xmath57 and its neighbor both fire , leaving a new graph @xmath104 of the specified form ;",
    "let @xmath105 be the number of and @xmath106 the total number of vertices in the component combs in @xmath104 .",
    "of the two vertices cleaned , let @xmath107 be the one with degree 3 .",
    "if @xmath107 has two neighbors of degree 2 , then @xmath108 and @xmath109 ; the number of turns needed to clean @xmath104 is @xmath110 , which simplifies to @xmath111 .",
    "if instead @xmath107 has one neighbor of degree 2 , then @xmath112 and @xmath113 , so again the number of turns needed to clean @xmath104 is @xmath111 .",
    "finally , if @xmath107 has no neighbors of degree 2 , then @xmath114 and @xmath115 , so once again the number of turns needed to clean @xmath104 is @xmath111 . in any case , the total length of the game on @xmath0 is @xmath116 , which simplifies to @xmath95 , as claimed .",
    "we are now ready to prove theorem  [ thm : a ] .    for positive integers @xmath12 and @xmath47 , with @xmath117 ,",
    "let @xmath118 be obtained from @xmath83 by choosing any @xmath12 consecutive pendant edges and subdividing each one @xmath47 times .",
    "we show that by choosing @xmath47 and @xmath12 appropriately , we can make the ratio @xmath119 take on any rational value in @xmath120 . since @xmath118 has @xmath121 vertices of odd degree , theorem  [ thm : odd_degree ] yields @xmath122 .",
    "conversely , it is easy to see that @xmath47 brushes suffice to clean @xmath118 : place one brush on each of @xmath123 leaves , and one brush on the neighbor of one of these vertices .",
    "thus , @xmath124 . we claim that @xmath125 , from which it would follow that whenever @xmath126 , we have @xmath127 .    to show that @xmath128 , we give a strategy for max .",
    "call the pendant paths of length @xmath47 _",
    "threads_. the @xmath12 threads , between them , contain @xmath129 vertices of odd degree .",
    "hence at least @xmath12 brush paths are needed to cover the threads , so at least @xmath12 brushes are needed to clean them . on each of his first",
    "@xmath130 turns , max places a brush on any vertex of degree 2 that does not already have a brush .",
    "these brushes are `` useless '' to min , in the following sense",
    ". let @xmath57 be some vertex of degree 2 that contains a brush .",
    "min could clean @xmath57 by adding another brush , but even had no brush been present , min could have achieved the same result by placing a brush on the endpoint of @xmath57 s thread . likewise ,",
    "if @xmath57 fires due to a neighbor s cleaning , then @xmath57 would have fired even without the original brush .",
    "hence , during his first @xmath130 turns , max does not contribute to the cleaning of any thread , so at least one thread must remain for him to play in ; since @xmath117 , such a thread must also contain at least one vertex with no brush .",
    "finally , considering brush paths shows that at least @xmath47 brushes are needed to clean @xmath118 .",
    "as noted above , the brushes played on max s first @xmath130 turns do not aid in this cleaning , so in total the game lasts for at least @xmath131 turns .    for the upper bound , we give a strategy for min . while there are still threads with dirty vertices , min places a brush on some such thread s leaf , cleaning the whole thread",
    "this takes at most @xmath12 rounds .",
    "since we seek an upper bound , we may ignore the brushes placed by max during this time ; by lemma  [ lem : domination ] , doing so can not shorten the length of the game . at this point",
    ", the graph consists of an @xmath132-sunlet in which one edge has been subdivided @xmath12 times , and in which each vertex of degree 2 contains one brush .",
    "if it is min s turn , then she plays on a vertex of degree 2 .",
    "this causes all vertices of degree 2 to fire , and produces a copy of @xmath133 having the initial configuration described in lemma  [ lem : ratio ] . since at most @xmath129 brushes",
    "have already been played , and lemma  [ lem : ratio ] states that the remainder of the game lasts exactly @xmath134 turns , the length of the game is at most @xmath135 , as desired .",
    "likewise , we obtain the same bound if it is max s turn , and he chooses to play on a vertex of degree 2 .",
    "if it is max s turn and he chooses to play on a leaf , then min plays on its neighbor ; if max chooses to play on a vertex of degree 3 , then min plays on its pendant leaf . in either case",
    ", we have a graph of the form specified in lemma  [ lem : ratio ] , except that one component contains the subdivided edge .",
    "we claim that these extra vertices do not affect anything , in the sense that the game still lasts for @xmath134 more turns .",
    "the vertices on the subdivided edge can be cleaned one of two ways : either by cleaning one of the incident vertices of degree 3 , or by placing an extra brush directly on one of the vertices of degree 2 . in both cases , once one of the vertices fires , the rest follow . in the former case , the subdivided edge had no impact on the game . in the latter case ,",
    "the resulting graph has exactly the form required by lemma  [ lem : ratio ] ; in cleaning the subdivided edge , one turn has been spent , and the number of components has increased by 1 .",
    "either way , the strategies given in lemma  [ lem : ratio ] still apply , and still show that @xmath134 more turns are needed .",
    "hence the length of the game is at most @xmath136 , as claimed .",
    "this completes the proof .",
    "we next turn our attention to complete graphs . to simplify the presentation of our main result ,",
    "we first present both players optimal strategies , we next analyze the performance of these strategies , and we save the proof of optimality for last .",
    "we give two strategies , one for max and one for min .",
    "* the _ balanced strategy _ for max : on each turn , max adds a brush to the dirty vertex having the fewest brushes . *",
    "the _ greedy strategy _ for min : min selects the dirty vertex having the most brushes , adds brushes to that vertex until it gets cleaned , and repeats .",
    "as we will show later , these strategies yield a nash equilibrium  that is , the balanced strategy is an optimal response to the greedy strategy , and vice - versa .",
    "hence the game brush number of @xmath34 is precisely the length of the game when the strategies are employed against each other .",
    "while there is no simple formula for @xmath137 , we can use differential equations to determine the asymptotics .",
    "[ lem : complete_de ] consider the brushing game on @xmath34 .",
    "when max uses the balanced strategy and min uses the greedy strategy , the game ends in @xmath138 turns .",
    "since we are concerned only with the asymptotics of @xmath137 , we simplify the analysis by modeling the brushing game ( a discrete process ) using differential equations ( a continuous model ) .",
    "our model uses two parameters : @xmath107 , representing the number of vertices cleaned so far , and @xmath139 , representing the number of brushes placed .",
    "consider the state of the game immediately after some vertex fires ( and suppose the game has not yet finished ) .",
    "we analyze the length of the `` phase '' leading up to the next firing . with @xmath107 vertices",
    "cleaned , each remaining vertex must accumulate @xmath140 brushes before firing .",
    "the strategies employed by both players ensure that no brushes have been `` left behind '' on clean vertices and that each of the @xmath141 remaining dirty vertices has the same number of brushes ( up to a difference of 1 ) .",
    "hence , each dirty vertex has @xmath142 brushes .",
    "thus , min must place another @xmath143 brushes before the next vertex fires ; since max also plays , @xmath144 brushes are introduced in this phase .    in order to investigate the asymptotic behavior of the game , we normalize both parameters .",
    "that is , we let @xmath145 and @xmath146 , and obtain the following differential equation : @xmath147 solving this differential equation yields @xmath148 .",
    "the game ends during phase @xmath149 , where @xmath150 is such that @xmath151 .",
    "solving for @xmath150 yields @xmath152 and @xmath153 .",
    "hence the number of brushes played throughout the game is @xmath154 , which completes the proof .",
    "we now show that the strategies analyzed in lemma  [ lem : complete_de ] are optimal for both players . in this analysis ,",
    "we focus on the number of brushes placed directly on each vertex ( as opposed to those obtained from clean neighbors ) .",
    "moreover , we `` sort '' the vertices by the numbers of brushes played , in non - increasing order : always @xmath155 denotes the vertex having received the most brushes , @xmath156 the vertex having received the next most , and so on . by the symmetry of @xmath34",
    ", we may suppose that moves are always played so as to avoid re - indexing of the vertices .",
    "for example , if @xmath157 and @xmath158 have received the same number of brushes , then placing a brush on @xmath158 would force re - indexing : the old @xmath157 becomes the new @xmath158 , and the old @xmath158 becomes the new @xmath157 .",
    "however , we may just as well suppose that the brush was placed directly on @xmath157 , since this produces an equivalent configuration .",
    "using these conventions , in the course of the game on @xmath34 , we clean @xmath155 first , then @xmath156 , and so on . for @xmath159 , vertex @xmath157 receives @xmath160 brushes from earlier neighbors , and needs @xmath161 brushes to fire .",
    "hence @xmath157 fires when and only when the following two conditions have been met : first , vertices @xmath162 are already clean ; second , at least @xmath163 brushes have been played on @xmath157 .",
    "thus the game ends when and only when @xmath163 brushes have been played on @xmath157 for all @xmath164 in @xmath165 . viewing this condition graphically yields a `` triangle '' of brushes that must be placed before the game ends ( see figure  [ fig : critical_triangle ] ) .",
    "we refer to this triangle as the _ critical triangle _ , to brushes placed within the triangle as _ in - brushes _ , and to brushes placed outside as _ out - brushes_. since the number of in - brushes played throughout the game",
    "is fixed , max aims to force many out - brushes to be played , while min aims to prevent this .    .",
    "( in - brushes are shaded . ) ]    now we are ready to prove theorem  [ thm : complete ] .",
    "since the upper bound and lower bound use substantially different arguments , we split the proof into two parts .",
    "we begin with the lower bound , the simpler of the two .    [ lem : thm_complete_lower ] @xmath166    we show that when max uses the balanced strategy , min s optimal response is to play the greedy strategy ; consequently , by lemma  [ lem : complete_de ] , max can enforce the claimed lower bound by using the balanced strategy .",
    "we compare two games . in the _ real game _ , min uses any fixed strategy , while in the _ ideal game _ , she uses the greedy strategy ; in both games , max uses the balanced strategy .",
    "we claim that the ideal game finishes no later than the real game , which would establish optimality of min s greedy strategy . before proving this ,",
    "we make two straightforward observations .",
    "first , since max uses the balanced strategy , he never triggers any vertex firings , except possibly on the last turn of the game .",
    "second , for the real game , we may without loss of generality impose one constraint on min s strategy : we may suppose that min never plays out - brushes , since doing so is clearly suboptimal .",
    "these observations together imply that in both games , no clean vertex contains any out - brushes , until the final turn of the game ( when all the vertices that have accumulated out - brushes fire simultaneously ) .",
    "we play both games simultaneously . for a vertex @xmath57 ,",
    "let @xmath77 and @xmath167 denote the number of brushes played on @xmath57 in the ideal game and in the real game , respectively .",
    "( that is , @xmath77 denotes the number of times a player has played at @xmath57 during the ideal game , and does not take into account brushes sent to @xmath57 via firing . )",
    "since we `` sort '' the vertices , we may suppose @xmath168 and @xmath169 whenever @xmath170 . intuitively , we aim to show that at all times , more brushes have been played on the `` first few '' vertices in the ideal game than in the real game . for @xmath171 $ ] ,",
    "define @xmath172    we claim that after each turn , we have @xmath173 for all @xmath174 .",
    "we proceed by induction on the number of turns elapsed .",
    "initially , we have @xmath175 for all @xmath12 , so the invariant trivially holds .",
    "it suffices to show that the invariant is maintained after each turn .",
    "first consider one of max s turns ; suppose he plays on vertex @xmath157 in the ideal game and on vertex @xmath176 in the real game .",
    "both @xmath101 and @xmath177 remain unchanged for @xmath178 , and both quantities increase by exactly 1 for @xmath179 . hence we need only consider values of @xmath12 between @xmath164 and @xmath180 ( including @xmath164 , but not @xmath180 ) .",
    "if @xmath181 , then clearly @xmath173 for @xmath182 .",
    "suppose instead that @xmath183 .",
    "since no clean vertex contains any out - brushes , it follows that if vertices @xmath184 are all clean in the ideal game , then the number of brushes on these vertices is as large as possible , and hence @xmath173 .",
    "suppose instead that @xmath185 is dirty in the ideal game .",
    "since max uses the balanced strategy , vertices @xmath186 must all have @xmath187 brushes after max s move in the ideal game , and vertices @xmath188 must all have @xmath189 . similarly , in the real game , vertices @xmath190 all have @xmath191 brushes .",
    "as argued above , @xmath192 .",
    "hence @xmath193 , where @xmath194 is the total number of brushes played .",
    "since @xmath195 counts the number of brushes played on vertices @xmath196 , we have @xmath197 ; likewise , @xmath198 .",
    "thus @xmath199 hence @xmath200 , or equivalently , @xmath201 .",
    "but now , @xmath202 hence the invariant is maintained on max s turns .",
    "now consider one of min s turns ; say she plays on vertex @xmath157 in the ideal game and on vertex @xmath176 in the real game .",
    "clearly we still have @xmath173 for @xmath203 , so suppose @xmath204",
    ". since min uses the greedy strategy in the ideal game , all vertices preceding @xmath157 must already be clean . as argued above",
    ", no clean vertices accumulate out - brushes ( in either game ) until the game ends , hence @xmath205",
    "so the invariant holds for all @xmath12 .    finally , we observe that the ideal game always has at least as many clean vertices as the real game : if vertices @xmath206 are clean in the real game , then @xmath207 so these vertices are clean in the ideal game as well .",
    "it follows that the ideal game finishes no later than the real game , which completes the proof .",
    "our proof of the upper bound of theorem  [ thm : complete ] is more technical . for this proof ,",
    "we consider a generalization of the original game . in our abstraction of the brushing game on @xmath34",
    ", players alternately place brushes on a game board , with the game ending once the `` critical triangle '' is full . in particular , the board we have been considering has @xmath47 columns , and the critical triangle has height @xmath123 . to prove the upper bound",
    ", we consider the family of games @xmath208 .",
    "each such game is similar to the original , except that the game board has `` width '' @xmath209 , the critical triangle has height @xmath210 , and the game begins with @xmath211 consecutive turns by max .",
    "formally , in @xmath208 , min and max place brushes in columns of the game board ( indexed @xmath212 ) .",
    "the game begins with @xmath211 consecutive turns by max ; after this point , the players alternate turns . as before , we say that column @xmath164 _ fires _ once the number of brushes in that column is at least @xmath213 and all lesser - indexed columns have already fired .",
    "neither player may play brushes in any column that has fired , and we require that at all times , column @xmath164 has at least as many brushes as column @xmath180 whenever @xmath170 .",
    "the game ends once all columns have fired .",
    "( as in the original game , this is equivalent to saying that the `` critical triangle '' with height @xmath210 and `` slope '' @xmath214 has been filled with brushes . )",
    "note that @xmath215 is equivalent to the original brushing game on @xmath34 .",
    "our overall strategy in upper - bounding @xmath137 is as follows . as in the proof of the lower bound , we play two games , the `` real game '' and the `` ideal game '' .",
    "we play some number of turns in both games , and then view the remainders of the games as `` sub - games '' isomorphic to @xmath208 for appropriate choices of @xmath209 , @xmath210 , and @xmath211 .",
    "we then use induction to relate the lengths of the two sub - games . in what follows",
    ", we write `` @xmath216 '' to refer to the length of @xmath208 when min uses the greedy strategy and max plays optimally .",
    "[ lem : thm_complete_upper ] @xmath217    it suffices to show that when min uses the greedy strategy , max s optimal response is to play the balanced strategy ; consequently , by lemma  [ lem : complete_de ] , min can enforce the claimed upper bound by using the greedy strategy . in fact , we prove a stronger claim : for any natural numbers @xmath218 , and @xmath211 with @xmath219 , the balanced strategy is optimal for max in @xmath208 , given that min uses the greedy strategy .",
    "the original claim then follows by taking @xmath220 , @xmath221 , and @xmath222 .",
    "we prove this stronger claim through induction on @xmath209 ; when @xmath223 , the claim is clear by inspection .    consider @xmath208 .",
    "as before , we compare two instances of the game . in the _ real game _ , max uses any fixed strategy , while in the _ ideal game _ , he uses the balanced strategy . in both games",
    ", min uses the greedy strategy .",
    "we claim that the ideal game finishes no sooner than the real game , which would establish optimality of max s balanced strategy .",
    "if max is forced to fill the critical triangle within his initial @xmath211 turns , then it is straightforward to see that the balanced strategy maximizes the length of the game , so we may suppose the game continues past max s initial turns .",
    "suppose vertex @xmath155 fires in round @xmath31 of the ideal game , and consider the state of both games after @xmath31 rounds .",
    "at this point , @xmath155 must have fired in the real game as well , since the balanced strategy minimizes the number of brushes placed on @xmath155 by max .",
    "let @xmath224 ; in both games , exactly @xmath225 brushes have been played on vertices @xmath226 .",
    "note that in the ideal game , all @xmath225 of these brushes were played by max , in accordance with the balanced strategy .",
    "consequently , if the real game has not finished after round @xmath31 , then the ideal game also can not have finished and , moreover , @xmath156 can not have fired .",
    "if in fact both games have finished after @xmath31 rounds then the claim holds , so suppose otherwise .",
    "suppose first that vertex @xmath156 has not yet fired in the real game .",
    "we may view the remainder of the real game as an instance of the brushing game on a playfield of width @xmath227 and height @xmath228 , in which some turns have already been played by both players . since @xmath225 brushes have been played so far in this game , the number of turns remaining is at most @xmath229 ; that is , we obtain an upper bound on the length of the game by pretending that max chose the locations of all of these brushes .",
    "we may likewise view the remainder of the ideal game as an instance of the brushing game on a playfield of width @xmath227 and height @xmath228 .",
    "however , this time , all brushes already present actually were played by max ; moreover , they were played in accordance with the balanced strategy which , by the induction hypothesis , is optimal for @xmath230 .",
    "thus the number of turns remaining in the ideal game is exactly @xmath229 , so the ideal game lasts at least as long as the real game , as claimed .",
    "now suppose instead that after @xmath31 rounds , vertices @xmath184 have all fired in the real game , for some @xmath231 .",
    "if @xmath232 , then the real game is complete and the claim follows , so suppose otherwise .",
    "this time , we can not necessarily view the remainder of the real game as an instance of @xmath233 for some @xmath234 , since it might be that more than @xmath228 brushes were played on @xmath156 ( which would be impossible in such a game ) .",
    "instead , we consider only columns @xmath235 .",
    "let @xmath107 denote the total number of brushes played in columns @xmath236 ; the number played in columns @xmath235 is thus @xmath237 .",
    "since vertex @xmath238 has not yet fired , fewer than @xmath239 brushes have been played on @xmath240 .",
    "hence we may view the remainder of the real game as a sub - game on a playfield of width @xmath241 and height @xmath239 , in which @xmath237 moves have already been played .",
    "let @xmath242 and @xmath243 denote the number of turns remaining in the real game and the ideal game , respectively .",
    "we aim to show that @xmath244 , from which the claim would follow .",
    "we begin by upper - bounding @xmath242 .",
    "just as above , we may pretend that all @xmath237 moves in this sub - game were played by max . by the induction hypothesis",
    ", we may suppose that these moves were all played in accordance with the balanced strategy .",
    "let @xmath245 and let @xmath246 ; in the sub - game , the first @xmath247 rows have all been filled , and @xmath248 brushes have been added to row @xmath249 .",
    "thus , we have @xmath250 , where @xmath251 .",
    "next , let us analyze @xmath243 .",
    "in the ideal game , exactly @xmath225 brushes have been played in columns @xmath252 , all of which were placed by max in accordance with the balanced strategy .",
    "let @xmath253 , and let @xmath254 .",
    "viewing the remainder of the ideal game as a sub - game on a playfield of width @xmath227 and height @xmath255 , we see that @xmath256 , where @xmath257 .    for the sake of comparing the two games , we claim that @xmath258 .",
    "this is straightforward : there are @xmath259 brushes in rows @xmath249 and higher of columns @xmath236 in the real game ; if these brushes had instead been played according to the balanced strategy , then they would have completed an additional @xmath260 full rows , and might also have completed a row that was already partially full .",
    "thus @xmath261 where the second inequality uses the observation that no more than @xmath262 brushes can be played in column 2 of the real game ( hence @xmath263 ) and the final inequality uses the assumption that @xmath264 .",
    "it now follows that @xmath265    as argued above , we have @xmath256 and @xmath250 ; recall that we aim to show that @xmath244 . toward this end ,",
    "first note that adding @xmath130 additional columns to the latter game can not decrease the length : min uses the greedy strategy and hence never plays in the new columns , and their presence only provides max with additional options .",
    "that is , @xmath266 .",
    "next , we adjust the height of this game . by the induction hypothesis , the greedy strategy is optimal for max in @xmath267 for all @xmath234 , hence @xmath268 since the first @xmath269 greedy moves in the latter game fill the first @xmath270 rows , which yields a configuration equivalent to the former game . letting @xmath271",
    "now yields @xmath272 finally , it is easily seen that @xmath273 : the left side of the equation counts the number of turns remaining in the game after an initial @xmath274 greedy moves by max , while the right side counts the number of turns remaining after @xmath275 greedy moves , and the presence of the additional @xmath276 chips can not lengthen the remainder of the game .",
    "hence @xmath277 , which completes the proof .",
    "theorem  [ thm : complete ] now follows from lemmas  [ lem : thm_complete_lower ] and  [ lem : thm_complete_upper ] .",
    "we next seek to establish a connection between the brushing game on the complete graph and the game on the random graph . as an intermediate step ,",
    "we introduce a fractional variant of the brushing game . given @xmath278 , the _",
    "fractional brushing game _ on a graph @xmath0 is played similarly to the ordinary brushing game , but with different vertex cleaning rules . in the fractional game ,",
    "a vertex @xmath57 fires when the number of brushes on @xmath57 is at least @xmath279 times the number of dirty neighbors ; when @xmath57 fires , it sends @xmath279 brushes to each dirty neighbor .",
    "since @xmath279 may be any real number , vertices need not contain whole numbers of brushes ( although each player still places exactly one brush on a single vertex on each turn ) . when min plays first and both players play optimally , we denote the length of the game by @xmath280 .",
    "we aim to show that the ordinary and fractional brushing games are closely related . before making this claim precise",
    ", we must introduce one more game .",
    "given positive integers @xmath12 and @xmath47 , the _ @xmath12-chip - stacking game _ is a game played by two players , with the following rules .",
    "there are @xmath47 piles of chips , each initially empty .",
    "the players alternate turns . on each of his turns , player 1",
    "adds @xmath12 chips to some piles ; he may divide his chips among the piles however he wants . on each of her turns ,",
    "player 2 selects one pile and removes at most @xmath12 chips from that pile .",
    "player 1 s goal is to maximize the number of chips in any single pile , while player 2 aims to minimize the size of the largest pile .",
    "one natural strategy for player 2 is the _ greedy strategy _",
    ": on each turn , remove as many chips as possible from the largest pile .      to aid in the analysis , at each point in the game , we imagine infinitely many smaller games . index the piles @xmath282 , and let @xmath283 denote the number of chips in pile @xmath164 .",
    "we define the `` level zero '' game to be the original ( or `` full '' ) game . for every positive integer @xmath284",
    ", we define the `` level @xmath284 '' game to be the game in which pile @xmath164 has @xmath285 chips ; see figure  [ fig : chip_stacking ] .",
    "note that when player 2 plays according to the greedy strategy in the full game , it is as if she applies the greedy strategy to _ all _ games simultaneously .      if @xmath287 , then the game is trivial , and it is clear that the pile never contains more than @xmath12 chips .",
    "suppose instead that @xmath288 , and suppose that @xmath289 or more chips are present before one of player 1 s turns . on player 1 s turn ,",
    "the total number of chips increases by @xmath12 ( to at least @xmath290 ) ; the largest pile must now have at least @xmath12 chips , so on player 2 s ensuing turn , the total number of chips decreases by @xmath12 .",
    "consequently , at no time can there be more than @xmath291 chips in play ; thus , at no time are there more than @xmath292 piles with @xmath293 or more chips .",
    "hence the number of nonempty piles in the level 1 game never exceeds @xmath294 . since @xmath288",
    ", we have @xmath295 consequently , the level 1 game behaves as the full game , except that there are at most @xmath296 nonempty piles , and player 1 has less freedom in choosing his moves , since he may not be able to add chips directly to an empty pile .",
    "thus , the same reasoning shows that there are never more than @xmath297 nonempty piles in the level 2 game and , in general , no more than @xmath298 nonempty piles in the level @xmath284 game . in particular , taking @xmath299",
    ", it follows that there are never any nonempty piles in the level @xmath300 game , from which the desired conclusion follows .",
    "initially , we assume that @xmath303 is always integral . after proving the theorem under this additional assumption ,",
    "we briefly explain the modifications needed to extend the argument to all values of @xmath279 .",
    "we bound @xmath280 both above and below in terms of @xmath1 .",
    "for the lower bound we give a strategy for max , and for the upper bound we give a strategy for min . since these strategies are quite similar , we present them simultaneously",
    ". denote the players by `` a '' and `` b '' ( where a and b could represent either one of min or max ) . player a imagines an instance of the ordinary game on @xmath0 and uses an optimal strategy in that game to guide his or her play in the fractional game .",
    "the games proceed simultaneously , except that for every round played in the fractional game , @xmath303 rounds are played in the ordinary game . to simplify the analysis ,",
    "we introduce a third player , the oracle . at various points ,",
    "the oracle will `` pause '' the games and add extra brushes to various vertices , in an attempt to `` synchronize '' the games by ensuring that all clean vertices in the fractional game are also clean in the ordinary game , and vice - versa .    before presenting the strategies",
    ", we introduce some additional notation . for a vertex @xmath57 ,",
    "let @xmath304 ( resp .",
    "@xmath305 ) denote the number of brushes played on @xmath57 by a in the ordinary game ( resp .",
    "fractional game ) ; define @xmath306 and @xmath307 similarly .",
    "discrepancy for a _ at a vertex @xmath57 is defined by @xmath308 ; likewise , the _ discrepancy for b _ is defined by @xmath309 .",
    "player a plays as follows . by theorem",
    "[ thm : at_most_one ] , we may assume without affecting the asymptotics that b plays first ( in both games ) , so each round of the fractional game consists of a move by b followed by a move by a. after b plays in the fractional game , a imagines @xmath303 moves by b in the ordinary game ; for each move , the imagined b plays on some dirty vertex @xmath57 minimizing @xmath310 .",
    "player a responds to each imagined move in turn , according to some optimal strategy for the ordinary game .",
    "now a plays , in the fractional game , on some dirty vertex @xmath57 maximizing @xmath311 .",
    "finally , if any vertices are clean in the fractional game but not in the ordinary game , then the oracle adds brushes to these vertices in the ordinary game in order to clean them .",
    "( note that to clean these vertices , it suffices to add at most @xmath312 brushes to every such vertex @xmath57 . ) likewise , if any vertices are clean in the ordinary game but not in the fractional game , then the oracle adds brushes in the fractional game to clean them .",
    "( this time , the oracle must add at most @xmath313 brushes to each such vertex @xmath57 . )",
    "the oracle repeats these steps until every vertex that is clean in one game is clean in one game is also clean in the other .",
    "we claim that for every vertex @xmath57 , at all points during the game , @xmath314 . to see this , we interpret a s moves in the two games as plays in the @xmath12-chip - stacking game , where @xmath315 .",
    "each vertex corresponds to a pile in the chip - stacking game ; the number of chips in the pile is @xmath316 .",
    "a s moves in the ordinary game correspond to player 1 s moves in the chip - stacking game , while a s moves in the fractional game correspond to player 2 s moves in the chip - stacking game .",
    "note that a plays greedily in the fractional game , hence player 2 plays greedily in the chip - stacking game .",
    "the correspondence between the games is not perfect , since it might be that a vertex is clean in one game but not the other ; in particular , player a might be unable to play , in the fractional game , on a vertex of maximum discrepancy .",
    "however , the oracle ensures that every vertex that is clean in the ordinary game soon becomes clean in the fractional game ( and vice - versa ) , so the discrepancy at a clean vertex can no longer increase .",
    "vertices that are clean in both games no longer have any influence on the brushing game , and as such these piles `` disappear '' from the chip - stacking game , which clearly can not aid player 1 in creating large piles . by lemma  [ lem : chip_stacking ] , no pile in the chip - stacking game ever contains more than @xmath317 chips ,",
    "hence always @xmath318 .",
    "a similar argument shows that @xmath319 for all vertices @xmath57 .",
    "we now bound the length of the fractional game .",
    "let @xmath320 and @xmath321 denote the lengths of the ordinary and fractional games , respectively , and let @xmath322 and @xmath323 denote the numbers of brushes added by the oracle to the ordinary and fractional games , respectively . as argued above",
    ", when the oracle adds brushes to a vertex @xmath57 in the ordinary game , it adds at most @xmath324 .",
    "furthermore , once the oracle adds brushes to a vertex @xmath57 , that vertex becomes clean in both games , so @xmath311 and @xmath310 cease to change ; hence it suffices to analyze the discrepancies at the end of the game .",
    "we now have @xmath325 where the third inequality uses the fact that @xmath326 . by lemma  [ lem :",
    "domination ] , the oracle s intervention changes the length of the ordinary game by only @xmath327 turns .",
    "likewise , @xmath328 , so the oracle s interference changes the length of the fractional game by only @xmath329 turns .    to conclude the proof ,",
    "suppose a is actually min .",
    "since min follows an optimal strategy for the ordinary game ( putting aside the oracle s interference ) , we have @xmath330 . likewise , since max follows an optimal strategy for the fractional game , we have @xmath331 .",
    "the oracle ensures that the two games finish within one round of each other , hence @xmath332 hence @xmath333 , which establishes the claimed upper bound on @xmath280 .",
    "finally , suppose a is max .",
    "this time , max follows an optimal strategy for the ordinary game , so @xmath334 .",
    "similarly , @xmath335 . combining these observations , we have @xmath336 hence @xmath337 .",
    "this establishes the lower bound , and completes the proof under the assumption that @xmath303 is integral .    for general @xmath279",
    ", we have two cases to consider . if @xmath338 , then extending the result is straightforward .",
    "let @xmath339 , and let @xmath340 .",
    "now @xmath341 , and it is not hard to see that @xmath342 however , @xmath343 ; likewise , @xmath344 .",
    "hence @xmath345 , as claimed .",
    "if instead @xmath279 does not tend to 0 , then more care is needed . in the argument above",
    ", after every round in the fractional game , we played @xmath303 rounds in the ordinary game ; when @xmath303 is not an integer , we can not do this . instead , after round @xmath164 in the fractional game , we play @xmath346 rounds in the ordinary game .",
    "the effects of this change on the remainder of the proof are mostly unremarkable , with the exception of the appeal to lemma  [ lem : chip_stacking ] .",
    "it now happens that in some rounds of the chip - stacking game , player 1 adds and player 2 removes @xmath347 chips , while in other rounds , player 1 adds and player 2 removes @xmath348 .",
    "it is not difficult to adapt the arguments in lemma  [ lem : chip_stacking ] to this more general setting ; since @xmath279 does not tend to 0 , both @xmath347 and @xmath348 are bounded , so just as before , no pile ever contains more than @xmath349 chips .",
    "[ thm : chernoff ] let @xmath352 be a random variable that can be expressed as a sum @xmath353 of independent random indicator variables @xmath354 , where @xmath354 is a bernoulli random variable with @xmath355 } = p_i$ ] ( the @xmath356 need not be equal ) . for @xmath357 , @xmath358 } + t \\right ] } & \\le & \\exp \\left ( - \\frac { t^2}{2({\\mathbb{e } \\left [ x \\right ] } + t/3 ) } \\right ) \\quad \\text { and}\\\\ { \\mathrm{pr}\\left [ x \\le { \\mathbb{e } \\left [ x \\right ] } - t \\right ] } & \\le & \\exp \\left ( - \\frac { t^2}{2{\\mathbb{e } \\left [ x \\right ] } } \\right).\\end{aligned}\\ ] ] in particular , if @xmath359 , then @xmath360}| \\ge { \\varepsilon}{\\mathbb{e } \\left [ x \\right ] } \\right ] } & \\le & 2 \\exp \\left ( - \\frac { { \\varepsilon}^2 { \\mathbb{e } \\left [ x \\right ] } } { 3 } \\right).\\end{aligned}\\ ] ]      the second equality in the theorem statement follows from theorem  [ thm : complete ] and corollary  [ cor : fractional_complete ] , so it suffices to prove the first .",
    "let @xmath0 be any graph on @xmath47 vertices . to obtain an upper bound for @xmath1",
    ", we provide a strategy for min that mimics her optimal strategy for the fractional game on @xmath34 ; this gives an upper bound on @xmath1 in terms of @xmath361 .",
    "max plays his moves in the _ real _ game on @xmath0 , but min interprets them as moves in the _ imaginary _ fractional game on @xmath34 .",
    "min plays according to an optimal strategy in the imaginary game , then makes the same move in the real game .",
    "our hope is that the two games behave very similarly for @xmath53 .    as in the proof of theorem  [ thm : fractional ]",
    ", we introduce an _ oracle _ to enforce synchronization between the games .",
    "the oracle can , at any time , clean a vertex in either game by adding extra brushes as if `` by magic '' .",
    "suppose some vertex fires in the real game but not in the imaginary one .",
    "when this happens , the oracle cleans this vertex in the imaginary game . since this can not increase the length of the imaginary game , and since we seek an upper bound on @xmath1 , we may suppose for convenience that this interference never occurs .",
    "now suppose instead that some vertex @xmath57 fires in the imaginary game but not in the real one . in this case ,",
    "we `` pause '' the imaginary game and have min play on @xmath57 in the real game until it gets cleaned , at which point we `` resume '' the imaginary game . note that even though max also continues to play in the real game , we need not worry about where these extra brushes get placed , since they can not decrease the length of the real game .",
    "( for convenience , we pretend that they were not placed at all , although max s turns do still count toward the length of the game . )    to obtain an upper bound on the length of the real game , we must bound how long the imaginary game may be `` paused '' .",
    "let @xmath362 be the cleaning sequence produced during the game , that is , the order in which the vertices fire . consider the state of the game when only vertices @xmath162 are clean . in the imaginary game , @xmath157 received @xmath363 brushes from earlier neighbors and needs a total of @xmath364 to fire . in the real game , it received @xmath365 brushes and needs @xmath366 . if min pauses the game to clean @xmath157 , then it must be that , compared to the imaginary game , @xmath157 either received fewer brushes or needs more to fire ( or both ) .",
    "even if max does not help clean @xmath157 , the game pauses for at most @xmath367 rounds , where @xmath368 hence the length of the game is at most @xmath369 , where @xmath370 of course we do not know , in advance , the cleaning sequence @xmath371 .",
    "however , we still obtain the following upper bound : @xmath372    a similar argument yields a lower bound on @xmath1 .",
    "we still provide a strategy for min , but this time , she uses an optimal strategy for the real game on @xmath0 to guide her play in the imaginary ( fractional ) game on @xmath34 .",
    "if a vertex fires in the imaginary game but not in the real one , then the oracle cleans that vertex by providing extra brushes in the real game .",
    "if a vertex @xmath57 fires in the real game but not in the imaginary one , then we pause the imaginary game , and min plays on @xmath57 until it fires .",
    "when the game pauses , it is because in the real game , either more brushes were received or fewer are needed ( or both ) as compared to in the imaginary game . using symmetry and the notation introduced above ,",
    "we obtain @xmath373 , where @xmath374 is the reverse of @xmath371 . as a result",
    ", we get @xmath375 it follows that @xmath376    now let @xmath53 , let @xmath377 , and let @xmath378 ( note that @xmath379 tends to infinity as @xmath380 ) . to complete the proof , it suffices to show that a.a.s .",
    "we can easily bound the second summation in the definition of @xmath382 using the chernoff bound .",
    "fix a vertex @xmath157 .",
    "clearly @xmath383 } = p(n-1 ) = d$ ] , so it follows immediately from the chernoff bound ( theorem  [ thm : chernoff ] ) that @xmath384 } \\le 2 \\exp \\left ( - \\frac { { \\varepsilon}^2 d}{3 } \\right ) = 2n^{-2},\\ ] ] for @xmath385 .",
    "hence by the union bound , a.a.s .  for all @xmath386 we have @xmath387 .",
    "as a consequence , a.a.s.@xmath388    estimating the first summation in the definition of @xmath382 is slightly more complicated , since we must consider all possible cleaning sequences @xmath371 . first , observe that the partial sum containing only the first @xmath389 terms can be bounded ( deterministically , for any @xmath371 ) as follows : @xmath390    now fix some cleaning sequence @xmath371 and some @xmath164 exceeding @xmath389 . clearly , @xmath391 } = p(i-1)$ ] .",
    "let @xmath392 .",
    "we call vertex @xmath157 _ bad _ if @xmath391 } - \\deg^-_{\\pi}(v_i ) > { \\varepsilon}{\\mathbb{e } \\left [ \\deg^-_{\\pi}(v_i ) \\right ] } $ ] . applying the chernoff bound again , the probability that @xmath157 is bad is at most @xmath393 the important observation is that the events @xmath394 are mutually independent , so the probability that there are at least @xmath389 bad vertices is at most @xmath395 hence , by the union bound , a.a.s .  for all possible cleaning sequences @xmath371",
    "there are at most @xmath389 bad vertices .",
    "it follows that a.a.s .",
    "the first summation in the definition of @xmath382 can be bounded as follows : @xmath396 this completes the proof ."
  ],
  "abstract_text": [
    "<S> we study a two - person game based on the well - studied brushing process on graphs . players min and max alternately place brushes on the vertices of a graph . </S>",
    "<S> when a vertex accumulates at least as many brushes as its degree , it sends one brush to each neighbor and is removed from the graph ; this may in turn induce the removal of other vertices . </S>",
    "<S> the game ends once all vertices have been removed . </S>",
    "<S> min seeks to minimize the number of brushes played during the game , while max seeks to maximize it . </S>",
    "<S> when both players play optimally , the length of the game is the _ game brush number _ of the graph @xmath0 , denoted @xmath1 .    by considering strategies for both players and modelling the evolution of the game with differential equations , we provide an asymptotic value for the game brush number of the complete graph ; </S>",
    "<S> namely , we show that @xmath2 using a fractional version of the game , we couple the game brush numbers of complete graphs and the binomial random graph @xmath3 . it is shown that for @xmath4 asymptotically almost surely @xmath5 . </S>",
    "<S> finally , we study the relationship between the game brush number and the ( original ) brush number . </S>"
  ]
}
{
  "article_text": [
    "investigation of two - dimensional fluid mixing by topological techniques is rapidly gaining popularity  @xcite .",
    "topological perspectives on mixing either involve studying braiding motion of the stirring apparatus itself  @xcite , or the diagnosis of mixing by analyzing braiding of orbits of the flow @xcite .",
    "the quantity that is usually of interest is the topological entropy of the braid  @xcite , which serves as a lower bound for the topological entropy of the flow .",
    "the topological entropy of the flow is related to the exponential growth rate of material lines  @xcite , which has long been a favorite measure of mixing quality , though it is by no means the only one  @xcite . in many cases",
    "the braid entropy is quite a sharp bound on the flow entropy  @xcite , which is one reason why analyzing braids is useful .",
    "another reason is that experimental particle trajectory data can be found easily by particle image velocimetry , but it is usually very difficult to measure entropies directly from material stretching or by computing lyapunov exponents .",
    "there are many techniques for calculating braid topological entropies , or lower bounds on them , including train - tracks  @xcite , the burau representation of the braid group  @xcite , and others @xcite",
    ". where braiding of periodic ( or aperiodic ) orbits is used to analyze a flow one needs to interpret braids that have a both a large number of strands and a large number of generators . in this scenario exact methods based on train - tracks quickly become prohibitively expensive computationally , and methods based on the burau matrix representation of the braid group usually give very poor lower bounds . recently",
    ", however , moussafir described a fast method for calculating the entropy of a braid to an arbitrary precision @xcite .",
    "this method is based on a dynnikov coordinate representation of a lamination  @xcite . in this paper",
    "we show how to extend moussafir s technique to braids on the torus .",
    "we are motivated by the fact that many interesting dynamical systems are defined in periodic ( cylindrical or annular ) or biperiodic ( toroidal ) spatial domains .",
    "for instance , the alternating sine flow  @xcite can be analyzed from a topological perspective using this approach .",
    "figure  [ fig : bsd ] shows the setting for the dynamical system under study",
    ".     punctures .",
    "( a ) any motion of the punctures ( up to homotopy ) can be written as a braid word consisting of a string of @xmath0 , @xmath1 and @xmath2 motions and their inverses .",
    "( b ) it is convenient to define the additional operation  @xmath3 , the clockwise exchange of the last and first punctures . ]",
    "we consider a flow on a torus , so that the domain is periodic in both directions .",
    "we identify  @xmath4 distinguished points that we call punctures .",
    "we then consider motions that move the punctures in such a way that they always return to their initial configuration , possibly having been permuted amongst themselves .",
    "the three types of motions that we consider are illustrated in figure  [ fig : bsd](a ) ; they are    1 .",
    "@xmath0 , the clockwise interchange of the @xmath5th and @xmath6th puncture ; 2 .",
    "@xmath1 , the @xmath5th puncture making a full tour around the vertical periodic direction ; 3 .",
    "@xmath2 , the @xmath5th puncture making a full tour around the horizontal periodic direction .    the inverse of any of these motions is obtained by reversing its direction .",
    "the elementary motions  @xmath7 are generators of the braid group on  @xmath4 strands on the torus  @xcite . recognizing the periodicity of the domain",
    ", we also define an additional operation @xmath3 to be the clockwise interchange of the  @xmath4th puncture with the first puncture . to be precise ,",
    "we mean here the first puncture in the ` copy ' of the domain above and to the right of the @xmath4th puncture , as pictured in figure  [ fig : bsd](b ) , so that both periodic boundaries are crossed in performing @xmath3 . defining @xmath3 in this way keeps both periodic directions on an equal footing , and is also convenient in what follows as it is related to a translational symmetry for the punctures .    a sequence of generators , such as @xmath8 , is called a braid word , and we use the convention that the elementary motions in a braid word occur from left to right , so that  @xmath9 occurs first in our example . by _",
    "planar braid _ we mean a braid word that can be written using only generators from the set  @xmath10 , and their inverses .",
    "a planar braid is equivalent to a braid on the plane with @xmath4 punctures . in other words ,",
    "a planar braid does not take advantage of the periodic directions . by _ cylinder braid _ ( or annular braid ) we mean a braid word that can be written using only generators from either the set  @xmath11 or  @xmath12 , and their inverses .",
    "in other words , a cylinder braid takes advantage of one periodic direction , but not the other .",
    "finally , a _",
    "torus braid _ is a braid word that is neither a planar braid nor a cylinder braid . in this paper",
    "we will derive a general method for torus braids , which includes planar and cylinder braids as special cases .",
    "the description of our method here is intended to be accessible to dynamicists and requires no specialist understanding of braid groups .",
    "the paper is divided as follows . in the following section",
    "we describe how laminations ( equivalence classes of simple closed curves ) can be encoded by triangulation of the flow domain .",
    "section  [ sec : deformation ] , the heart of the paper , gives the details of how this encoding evolves under fundamental braiding actions or motions .",
    "several examples are given in section  [ sec : examples ] to illustrate and verify the method . in section",
    "[ sec : entropy ] we show how to compute the topological entropy from evolution of laminations , and demonstrate the rapid convergence .",
    "we also look at braiding in the sine flow as an example application .",
    "we summarize our work in section  [ sec : discussion ] and discuss some features and possibilities for further study .",
    "we wish to calculate a lower bound on how rapidly material lines are stretched in a continuous - time flow based on the motion of a finite number of punctures , or a finite set of periodic orbits .",
    "our approach , inspired by the method of moussafir  @xcite , is to study the stretching and folding of laminations .",
    "a lamination is an equivalence class ( under homotopy ) of simple closed curves that are not homotopic to any part of the boundary ( treating the punctures as boundaries ) , and can not be continuously shrunk to a point .",
    "for example , a loop that encloses at least two punctures belongs to a lamination .",
    "we usually represent a lamination by drawing one loop in the equivalence class .",
    "an example of a lamination on our doubly - periodic toroidal domain is shown in figure  [ fig : puzzle](a ) .        in order to calculate how a given lamination is transformed under the action of the braid ,",
    "it is necessary to have a way of encoding the lamination , and a method for evolving this encoding under the action of the braid . an elegant way of encoding the lamination is by triangulating the entire domain and counting the number of crossings the lamination makes with the edges of the triangulation . the number of crossings for our example lamination is shown in figure  [ fig : puzzle](b ) .",
    "note that there are infinitely many different ways the domain can be triangulated , so in this paper we choose a triangulation that is most convenient for studying the action of braiding motions .",
    "the notation we use for counting crossings is illustrated in figure  [ fig : triangulation ] .",
    "for @xmath4 punctures the resulting encoding @xmath13 contains @xmath14 crossing numbers .     punctures . the domain is divided into @xmath15 triangles @xmath16 and @xmath17 .",
    "two copies of the domain are shown one above the other for clarity .",
    "the @xmath14 numbers @xmath18 , @xmath19 and @xmath20 are used to count how many crossings a lamination makes with each edge of the triangulation .",
    "the lamination is assumed to be pulled tight , which means that when the curve enters a triangle it must leave through a different edge to the one it entered by .",
    "note that this triangulation is not unique , but is chosen for convenience in the calculations that follow . ]    to ensure that each homotopic lamination produces the same set of crossings we insist that the lamination is first pulled tight , which means that no loops are allowed where the lamination enters and leaves a triangle by the same edge . under the pulled - tight assumption ,",
    "the set of crossing numbers uniquely identifies the lamination .",
    "the reason for this is that the path of the lamination can be determined uniquely in each triangle , and therefore the global solution is found to be unique by patching the triangles together .",
    "the unconvinced reader is invited to attempt to find any other solution for the given crossing numbers that is not homotopic to the lamination shown in figure  [ fig : puzzle ] .",
    "( where  @xmath21 is  @xmath16 or  @xmath17 from figure  [ fig : triangulation ] ) can be completely reconstructed from the set of crossing numbers @xmath22 . to construct the solution ,",
    "each triangle is solved separately , and the triangles are patched together in the obvious way . the solution in a single triangle is illustrated . equation determines the number of curves that must pass directly between each pair of edges . up to homotopy , there is only one way to draw these curves without crossings . ]    to draw the lamination from the set of crossing numbers we explain the solution procedure for each triangle .",
    "consider the triangle  @xmath21 depicted in figure  [ fig : triangle ] , where  @xmath21 is  @xmath16 or  @xmath17 from figure  [ fig : triangulation ] .",
    "the crossing numbers with each of the three edges are @xmath23 , @xmath24 and @xmath25 . in our notation ,",
    "any part of the lamination passing between edges @xmath23 and @xmath24 is counted by @xmath26 , and , likewise , @xmath27 counts lines passing between @xmath23 and @xmath25 and @xmath28 counts lines between @xmath24 and @xmath25 . since we assume",
    "the lamination is pulled tight at all times , there can not be any lines that enter and leave by the same edge , so @xmath29 counts all the lines . a simple bit of bookkeeping shows we must have @xmath30 , @xmath31 and @xmath32 , which gives @xmath33 given @xmath28 , @xmath27 and @xmath26 , there is then only one way to draw the lines without them crossing each other .",
    "the @xmath28 , @xmath27 and @xmath26 lines are highlighted using different dash patterns for the example in figure  [ fig : triangle ] .",
    "the numbers given by are crucial to the arguments that follow .",
    "in this section we describe the effect of braiding operations on a lamination . we start with a lamination that is pulled tight , and we record the initial set of crossing numbers @xmath22 .",
    "all we have to do now is to determine how these numbers are updated under the action of each braid operation .    to calculate the new set of crossings we simply determine the number of crossings with the _ preimage _ of each edge .",
    "we denote the preimage of edge @xmath34 by @xmath35 , which is a curve that becomes @xmath34 ( up to homotopy ) after the braid operation .",
    "our argument is that the number of crossings of @xmath35 before the braid operation has to be equal to the number of crossings with @xmath34 afterwards",
    ". this must be the case , as the only way the number of crossings could change is if the end of a loop were to cross through the edge as it is deformed from @xmath35 to @xmath34  but by the pulled - tight assumption any such loop would have to be wrapped around a puncture , and by construction no punctures pass through the edge as it deforms from @xmath35 to @xmath34 .",
    "it will turn out that we only have to consider explicitly the braid group operations @xmath1 , @xmath36 @xmath37 and @xmath0 , @xmath38 @xmath39 .",
    "we then determine the effect of other independent group elements @xmath2 and @xmath40 by invoking group presentation rules and the operation @xmath3 ( see figure  [ fig : bsd](b ) ) .",
    "this is explained in detail in section  [ sec : xingtaui ] for those not familiar with the braid group presentation . for convenience",
    "we assume in what follows that indices are treated ` modulo ' @xmath4 , so that the puncture to the right of puncture @xmath4 is puncture @xmath41 .      for the braid operation @xmath1 ,",
    "we need only consider edges incident on the @xmath5th puncture , since the number of crossings with other edges will remain unchanged .",
    "the relevant preimages are shown in figure  [ fig : rho ] as dashed lines .    .",
    "only edges that are incident with the moving puncture can have a change in crossing number .",
    "for @xmath43 the five edges are @xmath44 , @xmath45 , @xmath46 , @xmath47 and @xmath48 . in this example",
    "@xmath44 and @xmath47 are the exact preimages of @xmath45 and @xmath46 , respectively .",
    "the edge @xmath48 is the preimage of itself , so in fact its crossing number will not change under @xmath43 .",
    "the preimages of @xmath44 and @xmath47 are not edges in the triangulation , so more work is required to determine how many crossings are made , as shown in figure  [ fig : rhopuzzle ] . ]",
    "many of the preimages are other edges ( e.g.  @xmath49 is the preimage @xmath50 ) , so the number of crossings is already known .",
    "this is not a coincidence : the triangulation was chosen for this property .",
    "all curves entering @xmath44 and @xmath48 must cross @xmath51 ( by the pulled - tight assumption ) , unless they loop directly from @xmath44 to @xmath48 ( shown dotted ) .",
    "the number of these loops is exactly @xmath52 .",
    "hence the number of preimage crossings is @xmath53 .",
    "note that curves that cross over the preimage and immediately back again are automatically discounted , so that the pulled - tight assumption still holds for the updated set of crossing numbers . ]",
    "the two preimages @xmath54 and @xmath55 require a little more attention . in figure",
    "[ fig : rhopuzzle ] we illustrate that the number of crossings @xmath54 can be calculated by a simple bookkeeping argument .",
    "the number of crossings @xmath55 can be deduced in a similar way .",
    "the update rules for all the edges considered are @xmath56      we can work out the update rule for @xmath36 by noting the @xmath58-rotational symmetry of the triangulation about a puncture and relabelling the variables in the rules given above .",
    "the update rules for affected crossing numbers are @xmath59      .",
    "the dashed lines show the preimages of all edges whose crossing number may change .",
    "edge @xmath44 is its own preimage , but all other preimages require some bookkeeping .",
    "figure  [ fig : sigmapuzzle ] illustrates how to compute the crossings with @xmath61 and @xmath62 .",
    "computation of @xmath63 is done as in figure  [ fig : rhopuzzle ] .",
    "preimages @xmath64 and @xmath65 are handled in the same way as @xmath61 and @xmath62 , by invoking rotational symmetry .",
    "the difficult preimage problems are @xmath66 and @xmath67 , as these preimages cross through seven triangles ; the solution is described in section  [ sec : xingsigmai ] . ]",
    "the same ideas can be used to determine the updated crossing numbers following a @xmath0 operation . however , since there are two moving punctures , more edges are affected , and the preimages are therefore more complicated .",
    "an example of a preimage diagram for @xmath68 is shown in figure  [ fig : sigma ] .",
    "in general , for @xmath0 the affected crossing numbers are @xmath49 , @xmath69 , @xmath70 , @xmath71 , @xmath72 , @xmath73 , @xmath74 and @xmath75 .",
    "this includes the operation @xmath3 which switches the first and last punctures across the periodic boundaries ( see figure  [ fig : bsd](b ) ) ; we shall require this operation in sections  [ sec : xingtaui][sec : xingtauii ] to find the update rules for @xmath2 and @xmath40 .",
    "the edge @xmath18 is its own preimage , and the number of crossings with @xmath55 is determined using the quadrilateral trick illustrated in figure  [ fig : rhopuzzle ] .",
    "the number of crossings with @xmath54 , @xmath50 , @xmath76 and @xmath77 can be found by extending the quadrilateral solution over three and four triangles , as illustrated in figure  [ fig : sigmapuzzle ] .    .",
    "in a similar way to in figure  [ fig : rhopuzzle ] , the number of crossings with preimage @xmath61 is given by the number of curves crossing @xmath78 and @xmath44 , minus twice the number of loops directly between @xmath78 and @xmath44 .",
    "the number of such loops is exactly @xmath79 .",
    "hence @xmath80 .",
    "the preimage problem for @xmath62 is similar , but involves four triangles and hence a minimum of four numbers , so that @xmath81 . ]    the two remaining crossing numbers to find are @xmath82 and @xmath83 . since these preimages pass through a total of seven triangles it is non - trivial to determine the number of crossings directly .",
    "instead we employ a trick and deduce @xmath82 and @xmath83 by invoking the quadrilateral solution again with the _ updated _ crossing numbers .",
    "we introduce temporary edges @xmath84 and @xmath85 directly between punctures @xmath86 and @xmath87 and between @xmath5 and @xmath88 , as shown in figure  [ fig : sigmapuzzle2 ] .",
    "the preimage of @xmath84 is @xmath69 , and the preimage of @xmath85 is @xmath74 .",
    "since @xmath54 , @xmath50 , @xmath84 , @xmath89 , @xmath55 , @xmath85 , @xmath76 and @xmath77 are known , @xmath82 and @xmath83 can be deduced easily .",
    "and @xmath83 are difficult to determine directly from the old set of crossing numbers .",
    "however they may be calculated using the quadrilateral solution shown in figure  [ fig : rhopuzzle ] from the already updated crossing numbers . ]",
    "the collected update rules for the affected crossing numbers are @xmath90      since the triangulation does not have a reflection symmetry about a vertical line through the midpoint of two punctures , it is not possible to deduce the update rules for @xmath38 by a relabelling in the rules for @xmath0 .",
    "an example of a preimage diagram for @xmath92 is shown in figure  [ fig : sigmai ] .",
    "the preimage curve @xmath55 is the most complicated yet , as it passes through ten triangles .",
    "however the crossing number of all these preimages can be calculated as before using the techniques illustrated in figures [ fig : rhopuzzle ] , [ fig : sigmapuzzle ] and [ fig : sigmapuzzle2 ] .    .",
    "note that due to asymmetry the preimage problems are slightly different to those for @xmath68 . ]    the update rules for the affected crossing numbers are @xmath93      in sections  [ sec : xingrhoi][sec : xingsigmaii ] we showed how to update the set of crossing numbers @xmath22 for the braid operations @xmath1 , @xmath36 , @xmath0 and @xmath38 . to complete the set of update rules for any braid we must give the corresponding rules for @xmath2 and @xmath40 . in performing @xmath2 the @xmath5th",
    "puncture moves once around the torus in the horizontal direction ( see figure  [ fig : bsd ] ) . in doing",
    "so it passes through many edges in our triangulation , so it is difficult to draw the preimages and to derive the number of crossings directly .     is achieved using a sequence of @xmath95 operations , including the operation @xmath96 ( see figure  [ fig : bsd ] ) , followed by a single @xmath97 .",
    "this is described in more detail in the text . ]",
    "however , we can deduce the update rules for @xmath2 and @xmath40 by appealing to group properties that relate @xmath0 , @xmath1 and @xmath2 . in figure",
    "[ fig : tau ] we illustrate how @xmath98 is achieved through a sequence of @xmath38 ( including @xmath96 defined in figure  [ fig : bsd](b ) ) followed by one @xmath97 . the other @xmath2 and @xmath40",
    "are produced in a similar manner .",
    "a computational recipe for each  @xmath2 operation is given in this section , and  @xmath40 in the following section .",
    "to calculate the updated set of crossing numbers @xmath22 for @xmath2 do the following :    1 .",
    "use equation to perform , in turn , @xmath99 , @xmath100 , @xmath101 , @xmath102 and @xmath103 .",
    "treat the indices ` modulo ' @xmath4 , so that @xmath96 follows @xmath104 .",
    "2 .   relabel @xmath105 , @xmath106 and @xmath107 .",
    "this leaves all punctures except the @xmath5th one in the correct position .",
    "3 .   use equation to perform @xmath36 .      to calculate the updated set of crossing numbers @xmath22 for @xmath40 invert the operation of section  [ sec : xingtaui ] as follows :",
    "1 .   use equation to perform @xmath1 .",
    "2 .   relabel @xmath109 , @xmath110 and @xmath111 .",
    "this leaves the punctures in the wrong position , but the next sequence corrects everything  3 .",
    "use equation to perform , in turn , @xmath112 , @xmath113 , @xmath101 , @xmath114 and @xmath115 . treat the indices ` modulo ' @xmath4 , so that @xmath116 follows @xmath3 .",
    "to illustrate the use of the update rules given in section  [ sec : deformation ] we show how a lamination is deformed under some simple previously studied braids .",
    "we have implemented the update rules in a short c++ program , using the gnu multiple precision library to allow the number of crossings to grow arbitrarily large whilst maintaining exact arithmetic .",
    "we also have a matlab script to draw the lamination , one triangle at a time , using the procedure described in section [ sec : encoding ] .",
    "this was used to produce all the figures in this section . in each case",
    "our initial lamination is a closed loop that passes between the first two punctures , with @xmath117 and all other @xmath18 , @xmath19 and @xmath20 set to zero ( see the upper - left frame in figure  [ fig : sigma1 ] ) .    .",
    "this results in linear growth in the number of crossings , and zero entropy.,title=\"fig : \" ] .",
    "this results in linear growth in the number of crossings , and zero entropy.,title=\"fig : \" ]    .",
    "this results in linear growth in the number of crossings , and zero entropy.,title=\"fig : \" ] .",
    "this results in linear growth in the number of crossings , and zero entropy.,title=\"fig : \" ]    .",
    "this results in linear growth in the number of crossings , and zero entropy.,title=\"fig : \" ] .",
    "this results in linear growth in the number of crossings , and zero entropy.,title=\"fig : \" ]    figure  [ fig : sigma1 ] shows the roll up of the lamination under the repeated action of the planar braid @xmath116 with three punctures . in this case",
    "it is clear that the third puncture is redundant .",
    "this braid has zero entropy and is very poor at stirring as it results in linear growth of material lines .",
    "note that even though coils form around the pair of moving punctures there is always exactly one crossing of the lamination from one copy of the domain to the copy above .",
    "this is because there was exactly one crossing in the initial lamination and this is only a planar braid , so it can not create any further crossings under the pulled - tight assumption .    .",
    "this braid also has zero topological entropy , but the illustration is provided to verify the correctness of the procedure for performing @xmath118 using a combination of @xmath119 and @xmath120.,title=\"fig : \" ] .",
    "this braid also has zero topological entropy , but the illustration is provided to verify the correctness of the procedure for performing @xmath118 using a combination of @xmath119 and @xmath120.,title=\"fig : \" ]    .",
    "this braid also has zero topological entropy , but the illustration is provided to verify the correctness of the procedure for performing @xmath118 using a combination of @xmath119 and @xmath120.,title=\"fig : \" ] .",
    "this braid also has zero topological entropy , but the illustration is provided to verify the correctness of the procedure for performing @xmath118 using a combination of @xmath119 and @xmath120.,title=\"fig : \" ]    .",
    "this braid also has zero topological entropy , but the illustration is provided to verify the correctness of the procedure for performing @xmath118 using a combination of @xmath119 and @xmath120.,title=\"fig : \" ] .",
    "this braid also has zero topological entropy , but the illustration is provided to verify the correctness of the procedure for performing @xmath118 using a combination of @xmath119 and @xmath120.,title=\"fig : \" ]    figure  [ fig : tau2 ] shows the result of repeating @xmath121 with three punctures . in this simple",
    "braid the second puncture moves in a straight line to the left , but catching the lamination on the puncture exactly once .",
    "the illustration is provided to validate the method described in sections  [ sec : xingtaui][sec : xingtauii ] for performing @xmath118 operations using a combination of @xmath119 and @xmath120 motions .    .",
    "this braid is proved to have highest topological entropy per braid letter for a planar braid  @xcite.,title=\"fig : \" ] .",
    "this braid is proved to have highest topological entropy per braid letter for a planar braid  @xcite.,title=\"fig : \" ]    .",
    "this braid is proved to have highest topological entropy per braid letter for a planar braid  @xcite.,title=\"fig : \" ] .",
    "this braid is proved to have highest topological entropy per braid letter for a planar braid  @xcite.,title=\"fig : \" ]    .",
    "this braid is proved to have highest topological entropy per braid letter for a planar braid  @xcite.,title=\"fig : \" ] .",
    "this braid is proved to have highest topological entropy per braid letter for a planar braid  @xcite.,title=\"fig : \" ]    the planar pigtail braid @xmath122 with three punctures is illustrated in figure  [ fig : golden ]  @xcite .",
    "this braid is pseudo - anosov and has a growth rate per braid letter of @xmath123 , which is the golden ratio .",
    "this ` golden braid ' has been proved to have the highest topological entropy per braid letter for a planar braid @xcite .",
    "figure  [ fig : silver ] illustrates a related cylinder braid @xmath124 with four punctures .",
    "this is similar to the pigtail braid but wrapped around a cylinder so that the first and last punctures are allowed to exchange places .",
    "the cylinder braid @xmath125 with _ two _ punctures has a growth rate per braid letter given by the silver ratio of @xmath126 , and this can be proved to be the optimum per braid letter over all cylinder braids .",
    "( the proof follows that of dalessandro  @xcite using a matrix representation for the cylinder braid group . )",
    "the silver braid entropy is almost fifty percent higher than the golden braid entropy , showing that periodic boundary conditions can be exploited to enhance chaos .",
    "the extra stretching is clearly visible by comparing figures  [ fig : golden ] and [ fig : silver ] .    .",
    "note that the lamination becomes visibly dense more quickly than for the golden braid in figure  [ fig : golden].,title=\"fig : \" ] .",
    "note that the lamination becomes visibly dense more quickly than for the golden braid in figure  [ fig : golden].,title=\"fig : \" ]    .",
    "note that the lamination becomes visibly dense more quickly than for the golden braid in figure  [ fig : golden].,title=\"fig : \" ] .",
    "note that the lamination becomes visibly dense more quickly than for the golden braid in figure  [ fig : golden].,title=\"fig : \" ]    .",
    "note that the lamination becomes visibly dense more quickly than for the golden braid in figure  [ fig : golden].,title=\"fig : \" ] .",
    "note that the lamination becomes visibly dense more quickly than for the golden braid in figure  [ fig : golden].,title=\"fig : \" ]    a final validation of our encoding and update rules is given by checking that any lamination is unchanged when it is subjected to the identity braid .",
    "for the braid group on the torus , one way of writing the identity using @xmath119 , @xmath120 and @xmath118 is @xmath127 which is taken from the group presentation written down by birman  @xcite . in figure",
    "[ fig : identity ] the evolution of our test lamination is shown using this braid , and it is unchanged , as required .    . the initial lamination ( not shown )",
    "is the vertical line between the first two punctures .",
    "the images show , in order , the lamination after @xmath104 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath127 .",
    "the final lamination is the same as the initial lamination , as required.,title=\"fig : \" ] .",
    "the initial lamination ( not shown ) is the vertical line between the first two punctures .",
    "the images show , in order , the lamination after @xmath104 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath127 .",
    "the final lamination is the same as the initial lamination , as required.,title=\"fig : \" ]    .",
    "the initial lamination ( not shown ) is the vertical line between the first two punctures .",
    "the images show , in order , the lamination after @xmath104 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath127 .",
    "the final lamination is the same as the initial lamination , as required.,title=\"fig : \" ] .",
    "the initial lamination ( not shown ) is the vertical line between the first two punctures .",
    "the images show , in order , the lamination after @xmath104 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath127 .",
    "the final lamination is the same as the initial lamination , as required.,title=\"fig : \" ]    .",
    "the initial lamination ( not shown ) is the vertical line between the first two punctures .",
    "the images show , in order , the lamination after @xmath104 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath127 .",
    "the final lamination is the same as the initial lamination , as required.,title=\"fig : \" ] .",
    "the initial lamination ( not shown ) is the vertical line between the first two punctures .",
    "the images show , in order , the lamination after @xmath104 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath127 .",
    "the final lamination is the same as the initial lamination , as required.,title=\"fig : \" ]",
    "having completed the description of the dynamical system for deformation of a lamination , we now discuss how the topological entropy of a braid is related to evolution of a lamination .",
    "the results of moussafir  @xcite for the punctured sphere apply here : for an appropriate lamination , the growth rate of the total number of crossings between the lamination and triangulation converges to the topological entropy the braid  @xmath132 .",
    "thus , asymptotically we have the estimate @xmath133 where the starred variables are the updated crossing numbers described in section  [ sec : deformation ] .",
    "convergence of @xmath132 to the exact braid entropy @xmath134 appears to be exponential ( provided the braid has a pseudo - anosov component ) , and so in practice very few iterations are required to obtain @xmath134 to double precision .",
    "finite - order braids , which have zero topological entropy are detected easily by checking for sub - exponential convergence of @xmath132 .",
    "as an example , the exact topological entropy of the four - strand braid @xmath135 ( see the previous section and figure  [ fig : silver ] ) is known to be twice the logarithm of the silver ratio @xmath136 . in table",
    "[ tab : growth ] we show how the total crossing number and the entropy estimate @xmath132 given by evolve under the first few iterations of the braid ( using the initial lamination described in section  [ sec : examples ] ) .",
    "double precision accuracy of the entropy , which is sufficient for most purposes , is reached after about 20 iterations .",
    ".convergence of the entropy estimate @xmath132 in towards the exact topological entropy @xmath137 for the silver braid @xmath135 .",
    "convergence appears to be exponential for a pseudo - anosov braid , with approximately one extra digit per iteration  @xcite . [",
    "cols=\">,>,>,>,>,>,>\",options=\"header \" , ]     braids quite naturally arise when considering periodic trajectories of points in a two - dimensional flow . for a spatially - periodic flow",
    "the space - time plot of these trajectories is typically a cylinder or a torus braid , and the entropy of this braid provides a rigorous lower bound on the topological entropy of the flow  @xcite .",
    "finn et al .",
    "@xcite derived such a lower bound for the sine flow using thurston s ` iterate and guess ' method to construct the train - track for the braid formed by a set of periodic orbits .",
    "we will now describe how the same result can be found using our lamination approach .",
    "the sine flow is a time - periodic alternating shear - flow defined on the unit torus .",
    "the period is  @xmath138 , with the velocity field given by @xmath139 for @xmath140 and @xmath141 for , with  @xmath142 marking time .",
    "this simple flow has been well studied because the parameter range @xmath143 gives rich dynamics that vary from complete integrability to almost global chaos ( with few visible islands in a poincar section ) .",
    "since the flow is piecewise steady it is easy to construct a map to track the motion of points from one period to the next .",
    "consequently , the entropy of the flow for a given @xmath138 can be found quickly and simply by direct numerical simulation of line stretching .",
    "once the entropy of the flow is known , it is instructive to see what prediction of the entropy is given by considering the braiding of a finite number of particle orbits .    for general @xmath138",
    "it is difficult to locate unstable periodic orbits due to the highly chaotic nature of the sine mapping ; however , for the special parameter @xmath144 it is quite easy to spot some of the low order orbits . in particular , four period - two orbits are given by @xmath145 , @xmath146 , @xmath147 , and @xmath148 .",
    "the first pair of orbits is depicted in figure  [ fig : sineflow_orbits](a ) , the second pair in figure  [ fig : sineflow_orbits](b ) .",
    "the points associated with the first pair of periodic orbits do not move in the second half - period , while those associated with the second pair do not move in the first half - period .    .",
    "( a ) @xmath145 and @xmath146 ; ( b ) @xmath147 and @xmath148 . ]    .",
    "the braid word is @xmath149 .",
    "this braid has been shown to have an exact entropy of @xmath150 using train - tracks  @xcite .",
    "the entropy estimate using the growth of laminations agrees to every decimal place calculated . ]",
    "now we must determine the braid formed by the eight trajectories forming these four periodic orbits .",
    "we first disambiguate the order of the periodic points by displacing them slightly along the  @xmath23 axis , as shown in figure  [ fig : sineflow ]",
    ". then we encode the trajectories in terms of braid group generators , deforming as needed .",
    "deforming is necessary since usually the trajectory does not map directly onto a generator , and some intermediate operations must be insterted .",
    "for instance , in the second snapshot in figure  [ fig : sineflow ] the generators @xmath151 are used to return the point to the leftmost position after a @xmath152 operation . after a full period , the resulting braid word is @xmath153 . using equation ( [ eq : estimate ] )",
    "we find the entropy of the braid converges to @xmath150 , which agrees with an alternative calculation using train - tracks  @xcite .",
    "the entropy lower bound given by the braid accounts for @xmath154 of the flow entropy of approximately @xmath155 .",
    "since it is difficult to find any exact periodic orbits for general @xmath138 it is natural to ask whether the entropy can be found by considering the braiding of any selection of trajectories .",
    "since point motions in the sine flow are piecewise horizontal and vertical , and , for the purposes of braiding , can be performed sequentially , it is very easy and computationally fast to calculate all the @xmath119 , @xmath120 and @xmath118 operations that occur during each half - period of the flow , for an arbitrary number of points .",
    "for the first half - period , where all motions are horizontal , we record a @xmath119 operation for each change in order of the particle @xmath23 coordinates .",
    "the sign of each crossing is determined by the difference in @xmath24 coordinates for the two points that cross .",
    "special attention is required when a point crosses the periodic boundary . crossing leftwards over @xmath156",
    "is achieved by @xmath157 ; this moves the leftmost point one copy of the domain to the left , and then , through a sequence of @xmath119 operations , moves the point to position @xmath4 and undoes all the undesired crossings with the other points .",
    "similarly , when the rightmost point crosses over @xmath158 the string @xmath159 is assigned .",
    "the computation is simpler during the second half - period : all point motions are vertical , so no @xmath119 motions occur .",
    "if the @xmath5th point in the @xmath23 direction crosses downwards through @xmath160 this is labelled @xmath1 .",
    "likewise , an upwards crossing of @xmath161 is assigned @xmath36 .     towards the exact entropy @xmath134 as the number of trajectories @xmath4 in the braid is increased . for large @xmath4 the error appears to decrease according to a power law . for smaller @xmath138 the convergence",
    "is hindered by many of the points being inside periodic islands.,width=377 ]    to estimate the entropy of the flow we evolve a lamination according to the braid that results from the point motions . since the points are not periodic , the growth per iteration continues to vary , but the average value of the growth always converges .",
    "the initial points are chosen at random throughout the domain , and can either live in a chaotic region or in a periodic island .",
    "hence the predicted entropy for a given number of points may depend on the initial positions . to allow for this",
    "we use an estimate @xmath162 obtained by averaging over many realizations with different initial points .    in figure  [",
    "fig : sineentropy ] we show how the braid entropy @xmath163 converges towards the flow entropy @xmath134 as the number of trajectories in the braid is increased . for the four different values of @xmath138 we have considered , convergence appears to be as a power law for large @xmath4 .",
    "although we are unable to prove that the exact entropy is reached in the limit as @xmath164 we would expect this since in this limit the braid will contain perfect information about the flow . for small values of @xmath138 ( such as @xmath165 in figure  [",
    "fig : sineentropy ] ) the flow contains large islands of regularity which do not contribute greatly to line stretching . in this regime",
    "@xmath4 has to become relatively large before there are enough points exploring and encoding the dynamics in the small chaotic region .",
    "owing to the efficiency with which the braid is determined and analyzed , we are able to consider much larger times and number of points @xmath4 than has been considered in previous articles  @xcite . another point worth noting",
    "is that for @xmath144 , the mean entropy estimate @xmath166 with @xmath167 eight points is much worse than the estimate of @xmath168 found by using the set of eight judiciously chosen periodic points considered earlier .",
    "this highlights the important role of low order periodic orbits in determining much of the nature of the flow .",
    "we have derived a dynamical system to compute the evolution of a lamination ( equivalence class of simple closed curves ) under the braiding of an arbitrary number of punctures on the torus .",
    "the method is essentially a modification of the dynnikov coordinate approach employed by moussafir  @xcite , but we use a triangulation encoding that has favorable properties for studying torus braids .",
    "naturally , our method also works for the special cases of cylinder and planar braids .",
    "however , in the planar case our dynamical system still has  @xmath14 variables , more than the   required by moussafir , so there is clearly some redundancy in this case .",
    "also , the triangulation of our domain is not unique , so we expect that the details of our method are not unique",
    ". however our triangulation seems to be the best choice for simplifying the arithmetic .    for completeness",
    "we point out that our dynamical system does not work directly for   punctures because in equation ( [ eq : sigmaup ] ) and ( [ eq : sigmaiup ] ) this would mean that the indices   and   refer to the same quantities .",
    "there is nothing difficult about the case @xmath169 though , and in principle one could write down the corrected update rules for  .",
    "alternatively , a lazy but convenient workaround is to include a redundant third puncture , glued to one of the other two , so that it is slaved to its motion . at a little more computational expense",
    "this allows one computer code to handle all values of  .",
    "the case @xmath170 is trivial .    by using similar arguments to moussafir  @xcite",
    ", it can be shown that as the number of iterations tends to infinity the logarithm of the number of lamination crossings grows at the rate of the braid topological entropy .",
    "though the number of crossings grows exponentially fast , our numerical implementation of the dynamical system uses a large integer arithmetic library to allow calculation of the entropy to arbitrary precision .",
    "convergence appears to be exponentially fast , with approximately one digit of accuracy gained per iteration for the braids we have considered .    in practice ,",
    "if only a few digits of accuracy are required then double precision floating - point arithmetic for the crossing numbers is adequate and can speed up code significantly .",
    "a caveat with using floating - point arithmetic is that is destroys reversibility . in general by performing a long braid followed by its inverse the initial lamination will not be recovered due to exponential growth of small roundoff errors .",
    "this is akin to irreversibility due to numerical diffusion in trajectory computations in a chaotic stokes flow .",
    "however , since the dynamical system itself is exact , the only errors are due to roundoff and not to discretization , so even with double precision the dynamical system is surprisingly reversible .",
    "if finite precision is not acceptable , our method is easily adapted to find exact entropies .",
    "this can be done by shortcircuiting the minimum functions in the update rules ( [ eq : rhoup])([eq : sigmaiup ] ) . under repeated application of a braid",
    ", the dynamical system quickly converges to a periodic pattern where it is known in advance which number will be taken for each minimum . with this knowledge",
    "each call to the min function can be replaced by the correct variable and then a linear system can be written down for the crossing numbers .",
    "the logarithm of the modulus of the largest eigenvalue will give the exact entropy .",
    "this work was motivated by the study of two - dimensional fluid mixing via the braiding motion of fluid particle trajectories  @xcite . in this",
    "setting we have derived an efficient tool that allows practical analysis of large braids . outside of this particular application",
    "it is natural to ask whether the method can be generalized for the braid group on surfaces of higher genus , as considered by birman  @xcite .",
    "since any surface can be triangulated , in principle our method could be extended to higher genus .",
    "the problem anticipated with generalizing the approach is that it is more difficult to visualize the preimage problems on a surface with many holes , and also it is not clear in general how to exploit group properties to gain a complete set of crossing update rules ."
  ],
  "abstract_text": [
    "<S> a fast method is presented for computing the topological entropy of braids on the torus . </S>",
    "<S> this work is motivated by the need to analyze large braids when studying two - dimensional flows via the braiding of a large number of particle trajectories . </S>",
    "<S> our approach is a generalization of moussafir s technique for braids on the sphere . </S>",
    "<S> previous methods for computing topological entropies include the bestvina  </S>",
    "<S> handel train - track algorithm and matrix representations of the braid group . </S>",
    "<S> however , the bestvina  handel algorithm quickly becomes computationally intractable for large braid words , and matrix methods give only lower bounds , which are often poor for large braids . </S>",
    "<S> our method is computationally fast and appears to give exponential convergence towards the exact entropy . as an illustration </S>",
    "<S> we apply our approach to the braiding of both periodic and aperiodic trajectories in the sine flow . </S>",
    "<S> the efficiency of the method allows us to explore how much extra information about flow entropy is encoded in the braid as the number of trajectories becomes large .    </S>",
    "<S> topological entropy , braid groups    37b40 , 37m25 , 20f36 </S>"
  ]
}
{
  "article_text": [
    "the large hadron collider ( lhc ) at cern provides an opportunity to scan parton densities in the proton over a wide domain of parton kinematics .",
    "this allows for detailed studies of dynamical effects taking place during evolutions of partons .",
    "an example of the dynamical phenomena which is particularly interesting in hadronic processes is saturation of gluon density @xcite . at high energies the dominant contribution to evolution of system of partons comes from splittings of gluons and",
    "this leads to rapid growth of the gluon density and , as a consequence , to fast rise of corresponding cross sections .",
    "the unitarity constraints suggest that eventually the growth of the gluon density should slow down due to possible effects of fusion of the gluons , leading to its saturation . and indeed , there is a growing evidence that the saturation occurs in high - energy hadron collision processes @xcite .",
    "the physics of the saturation at an inclusive level is described within the perturbative qcd by @xcite , and at an exclusive level by the equations proposed in @xcite . the standard approach in search of the saturation with the jimwlk / bk evolution equation is to solve the equation that provides the gluon density , and then to convolute the solutions with appropriate matrix elements which specify the final states .",
    "this approach has some limitations , since it does not allow for the full simulation of a scattering event , as is for example modelled by monte carlo event generators @xcite .",
    "the monte carlo event generators allow for exact treatment of kinematical effects , storing information on emitted partons , etc",
    ". the particularly useful method of performing monte carlo simulation is based on a markov chain ( random walk ) approach @xcite . in this approach ,",
    "the evolution process occurs over evolution ` time ' which could be , for example , an energy scale .",
    "such an evolution can be interpreted as a markovian probabilistic process .",
    "the main advantage of this approach is that one performs the full monte carlo simulation in a forward process , without the need to pretabulate the solution of the considered equation . in the so - called backward evolution method ,",
    "first the appropriate equation is solved and the corresponding parton density is pretabulated , and then the actual monte carlo evolution ( random walk ) is performed backward in a ` time ' variable to simulate the scattering process with a probability distribution given by the respective parton density .",
    "the application of the markov chain monte carlo ( mcmc ) algorithm is , however , not straightforward for equations which model the saturation effects , since it works only for the linear evolution equations . to our best knowledge ,",
    "such an algorithm has not been , so far , applied to the non - linear evolution equations .    in the present paper",
    "we develop a method which allows to perform the mcmc - based solution of the non - linear equation .",
    "we apply this method to the bk equation .",
    "the key idea is to apply a well - convergent method for solving the non - linear integral equation and to combine it with a monte carlo algorithm designed for solving the linear integral equations .",
    "we have found that particularly well - suited for this purpose is the newton ",
    "kantorovich method @xcite .",
    "it relies on representing the non - linear integral equation as a system of the linear equations ( see eq .",
    "( [ eq : bk - nk1-intro])([eq : bk - nk3-intro ] ) ) , to which the mcmc algorithm can be applied . the whole procedure can be done in iterative manner and it does not require one to provide the solution of the considered equation in advance .",
    "furthermore , it can be used for solving the exclusive saturation equations , as proposed in @xcite , and even more complicated and higher - dimensional non - linear integral equations , for which other numerical methods are unfeasible ( inefficient , ustable , etc . ) .",
    "this might also be a first step in constructing the monte carlo event generator for modelling the saturation effects in the fully exclusive way .",
    "the paper is organized as follows . in section",
    "2 we introduce the newton ",
    "kantorovich method for the bk equation . in section  3",
    "we describe the markov chain monte carlo algorithm . in section 4",
    "we combine the newton ",
    "kantorovich method with the monte carlo algorithm to provide the solution of the bk equation .",
    "we also compare our solution with the one provided by the bksolver package @xcite .",
    "let us consider the leading - order in @xmath4 balitsky  kovchegov ( bk ) equation for the weizcker ",
    "williams gluon density : @xmath5 \\\\ & -\\frac{\\bar{\\alpha}_s}{\\pi r^2}\\int_{x}^{1}\\frac{d z}{z}\\,\\phi^2(x / z , k^2 ) , \\end{aligned } \\label{eq : bk1}\\ ] ] where @xmath6 is a driving term , @xmath7 ( in our calculations we use @xmath8 ) , @xmath9 is the transverse gluon momentum , @xmath0 is the fraction of the longitudinal proton momentum carried by the gluon , and hereinafter we set @xmath10 .",
    "first , we perform the following change of variables : @xmath11 and simplify the notation by skipping exponents of arguments of the above functions , i.e. @xmath12 , etc . , to obtain : @xmath13 \\\\ & -\\bar{\\alpha}_s \\int_{0}^{y}dt\\,\\phi^2(t , k^2 ) . \\end{aligned } \\label{eq : bk2}\\ ] ] introducing a dimensionful constant @xmath14 , the dimensional integration variable @xmath15 can be replaced by @xmath16 , for which we have @xmath17 . introducing also @xmath18",
    ", we get @xmath19 \\\\ & -\\bar{\\alpha}_s \\int_{0}^{y}dt\\,\\phi^2(t,{\\kappa } ) , \\end{aligned } \\label{eq : bk3}\\ ] ] where the notation is again simplified : we use @xmath20 instead of @xmath21 in arguments of @xmath22 and @xmath23 , and drop the dependence on the scale @xmath14 , which is obviously hidden in both functions .",
    "this is the two - dimesional non - linear integral equation of the form : @xmath24 with the kernel @xmath25 \\\\ &",
    "-\\bar{\\alpha}_s\\ , \\delta(\\lambda-\\kappa)\\ , \\phi^2(t,{\\lambda } ) \\label{eq : bkkern } \\end{aligned}\\ ] ]    one can linearize the above equation by expanding the kernel @xmath26 in the taylor series with respect to @xmath27 about some @xmath28 and retaining only the first two terms : @xmath29\\\\ & + \\mathcal{o}\\left(\\left[\\phi(t,\\lambda)-\\bar{\\phi}(t,\\lambda)\\right]^2\\right ) . \\end{aligned } \\label{eq : taylorseries}\\ ] ]    introducing the function @xmath30 and assuming @xmath31 , we can replace eq .",
    "( [ eq : bk3 ] ) with the following set of equations : @xmath32 where the partial derivative @xmath33 of the kernel @xmath34 with respect to @xmath27 reads @xmath35 \\\\ & -2\\bar{\\alpha}_s\\ , \\delta(\\lambda-\\kappa)\\ , \\bar{\\phi}(t,{\\lambda } ) .",
    "\\end{aligned } \\label{eq : bkkernp}\\ ] ]    the above set of equations can be solved by iteration , which leads to the newton ",
    "kantorovich form of the bk equation : @xmath36 as one can see , instead of the single non - linear integral equation ( [ eq : nleq ] ) we have now the iterative series of the linear integral equations ( [ eq : bk - nk2 ] ) , associated with the auxiliary integrals of eq .  ( [ eq : bk - nk3 ] ) .",
    "this can be solved by the standard iteration ( successive approximation ) method .",
    "the two - dimesional integrations can be performed directly with the standard numerical quadratures or , alternatively , one may expand the integrands in series of the chebyshev polynomials , at least in one integration variable .",
    "the main advantage of the above decomposition is that the integral equation ( [ eq : bk - nk2 ] ) is linear , and thus one can try to solve it by using the mcmc algorithm .",
    "our goal in this section is to construct a mcmc solution of eq .",
    "( [ eq : bk - nk2 ] ) which is the volterra  fredholm linear integral equation of the second kind",
    ". we can write immediately its iterative solution : @xmath37\\psi_{n-1}(t_m,\\lambda_m ) . \\end{aligned } \\label{eq : vfeit - sol}\\ ] ] since the integration limits do not depend on the variable @xmath20 , there is no ordering in the integration variable @xmath38 and at any step it can take an arbitrary value . due to the ordering in the integration variable @xmath39 , it will play a role of the evolution time in the corresponding mcmc algorithm .",
    "we propose the following mcmc algorithm :    1 .",
    "start a random walk ( markov chain ) from the point @xmath40 .",
    "2 .   being at the point @xmath41 : * generate a random step in the @xmath39-direction @xmath42 according to some probability density function ( pdf ) @xmath43 , with the normalisation contidion @xmath44 * for a given value @xmath45 , generate a random step in the @xmath38 direction : @xmath46 according to some pdf @xmath47 , with the normalisation condition @xmath48 where @xmath49 is the pdf of the variable @xmath50 depending on the parameter @xmath51 ( if it does not depend on this parameter , then @xmath50 can be generated completely independently of @xmath51 ) . +",
    "both @xmath52 and @xmath53 may , in general , depend also on @xmath54 and @xmath55 , i.e. the distribution of the step size @xmath56 may differ from step to step .",
    "3 .   stop the random walk when some @xmath57 jumps beyond the lower @xmath39-integral limit , i.e. @xmath58 following the sequence @xmath59 .",
    "4 .   to each trajectory",
    "@xmath60 assign the von neumann  ulam weight @xcite : @xmath61 where @xmath62 is the probalility of a single jump beyond @xmath63 from the point @xmath39 .",
    "+ instead of the von neumann  ulam weight one may use the wasow weight @xcite : @xmath64 5 .   repeat the above steps @xmath65 times and compute the mcmc estimate of @xmath66 as well as its statistical error ( standard deviation ) : @xmath67 ^ 2}. \\end{aligned } \\label{eq : vf - estmc}\\ ] ]    where @xmath68 is the trajectory weight ( of eq .",
    "( [ eq : weights ] ) or eq .",
    "( [ eq : vf - wasowrv ] ) ) computed in the @xmath69th repetition of the above steps 14 .",
    "one can prove that expectation values of the weights @xmath70 of eqs .",
    "( [ eq : weights ] ) and ( [ eq : vf - wasowrv ] ) satisfy the equation ( [ eq : bk - nk2 ] ) . the most straightforward way to do",
    "this is to first obtain general expressions for contributions to the weights coming from the trajectory of the length @xmath71 , and then , based on that , construct the corresponding expectation values .",
    "in this section we present an implementation of the mcmc algorithm .",
    "we perform computations on a 2-dimensional lattice of points  in the rapidity @xmath72 and in the dimensionless variable @xmath20 , corresponding to the transverse momentum @xmath73 .",
    "the results presented here correspond to the lattice with @xmath74 points in @xmath72 distributed linearly from @xmath75 to @xmath76 , and @xmath77 points in @xmath20 linearly spread in the range @xmath78 $ ] .",
    "the @xmath73 dimension is introduced to the problem through the constant @xmath14 which shows up in the driving term @xmath79 : @xmath80 in our computations we have used @xmath81gev@xmath82 .    in eq .",
    "( [ eq : bk3 ] ) one can see that the integration over @xmath38 goes to infinity . in order to perform numerical calculations we need to introduce a certain cut - off .",
    "the driving term of eq .",
    "( [ eq : drivingterm ] ) as well as the solution of the bk equation vanish for large @xmath73 , thus introducing the upper cut - off on @xmath20 does not affect the solution considerably .    for the pdfs @xmath43 and @xmath83 we use the exponential distributions :",
    "@xmath84 and thus the random variables @xmath85 and @xmath55 can be generated as follows : @xmath86 where @xmath87 and @xmath88 are the random variables uniformly distributed between @xmath89 and @xmath90 , i.e. @xmath91 .",
    "this choice does its job in the case of the above bk equation , however one can improve the convergence of the mcmc method by using the pdfs that are better adjusted to the problem .",
    "ideally , the product of these pdfs should be as close as possible to the kernel @xmath92 , so that all the weights @xmath93 in eq .",
    "( [ eq : weights ] ) be close to @xmath90 .",
    "in fact our choice of the pdfs seems to be good enough as we have reached a sufficient precision generating only @xmath94 trajectories for each iteration of eq .",
    "( [ eq : bk - nk2 ] ) .",
    "the results presented here correspond to @xmath95 iterations of the set of equations ( [ eq : bk - nk1])([eq : bk - nk3 ] ) . without special optimisations it took only about @xmath96 minutes of cpu time to generate all the results on a 2.2  ghz intel pentium dual - core processor with the gnu / linux operating system using only one cpu core .",
    "as stated in the previous section , one can use either the von neumann  ulam or the wasow weights in the mcmc procedure .",
    "our implementation of the mcmc algorithm has been tested with both of them , giving the same results ( differences not visible in the plots like the one presented below ) .    in fig .",
    "[ mc ] we show the results of the numerical solution of the bk equation .",
    "one can see the profile plots of our mcmc solutions together with the reference solutions obtained with bksolver .",
    "the latter program evolves the solution of the bk equation in rapidity based on the differential version of the equation .",
    "we have run bksolver with the same parameter ranges as stated above and required the same number of points in the output lattice .",
    "the plots presented here have been then obtained using two - dimensional bilinear interpolation .    in fig .",
    "[ mc](a ) we present the solutions in the @xmath73-profile for three different rapidity values : @xmath97 . for each of them the results from our mcmc algorithm and from bksolver are shown . in the lower part of the plot one can see the relative difference between the mcmc solution and the reference bksolver one . as one can see ,",
    "these two solutions agree at the level below @xmath98 . similarly , fig .",
    "[ mc](b ) contains three @xmath72-profiles , each for different @xmath73 values : @xmath99gev .",
    "the results from both the mcmc implementation and bksolver are shown as well as their relative difference .",
    "the agreement between the two solutions is again below @xmath98 .",
    "one might have realized that the results in fig .",
    "[ mc ] are shown in the narrower rapidity and @xmath73 ranges than given at the beginning of this section .",
    "we have simply skipped some points on the lattice boundaries where the agreement between the two methods is slightly worse .",
    "it is caused by such factors as the interpolation errors and/or the finite number of the lattice points , rather than by a problem of the mcmc algorithm itself .",
    "small fluctuations of the relative differences in both plots ( a ) and ( b ) are due to finite numbers of points in the lattices and approximations of the interpolation procedure .",
    "generally , with these results we have proved that the mcmc algorithm is applicable for solving the bk equation and , indeed , it gives good numerical results .",
    "in this paper we have developed a general method to solve the two - dimensional non - linear integral equation via monte carlo techniques .",
    "our method relies on combining the robust newton ",
    "kantorovich procedure for solving the non - linear integral equations with the markov chain monte carlo algorithm .",
    "the method is powerful and can be applied to solving complicated , high - dimensional non - linear integral equations , where the traditional methods become inefficient .",
    "it can also open a window to construction of a monte carlo event generator based on the non - linear integral equations , which will allow to study saturation effects in the fully exclusive processes .",
    "we have applied the mcmc algorithm to the bk equation and compared the results with the ones obtained by using the traditional methods , i.e.  the solution of the bk equation as an integro - differential equation , implemented in the bksolver package .",
    "the agreement within @xmath100 have been found .",
    "the presented mcmc algorithm is general , and thus it can also be applied to the exclusive form of the bk @xcite and kgbjs @xcite evolution equations .",
    "this we leave , however , for the future studies .",
    "we would like to thank dawid toton for useful discussions .",
    "this research has been partially supported by fundacja nauki polskiej ( fnp ) with the grant homing plus/2012 - 2/6 : ",
    "matrix elements and exclusive parton densities for large hadron collider \" and by the polish national science centre grant dec-2012/04/m / st2/00240 .",
    "y.  v.  kovchegov , phys .",
    "d * 60 * ( 1999 ) 034008 .",
    "j.  jalilian - marian , a.  kovner , a.  leonidov and h.  weigert , nucl .",
    "b * 504 * ( 1997 ) 415 [ hep - ph/9701284 ] .",
    "j.  jalilian - marian , a.  kovner , a.  leonidov and h.  weigert , phys .",
    "d * 59 * ( 1998 ) 014014 [ hep - ph/9706377 ] .",
    "a.  kovner , j.  g.  milhano and h.  weigert , phys .",
    "d * 62 * ( 2000 ) 114005 [ hep - ph/0004014 ] .",
    "e.  iancu , a.  leonidov and l.  d.  mclerran , nucl .",
    "phys .  a * 692 * ( 2001 ) 583 [ hep - ph/0011241 ] .",
    "k.  kutak , k.  golec - biernat , s.  jadach and m.  skrzypek , jhep * 1202 * ( 2012 ) 117 [ arxiv:1111.6928 [ hep - ph ] ] .",
    "k.  kutak , arxiv:1206.1223 [ hep - ph ] .",
    "t.  sjostrand , s.  mrenna and p.  z.  skands , jhep * 0605 * ( 2006 ) 026 [ hep - ph/0603175 ] .",
    "m.  bahr , s.  gieseke , m.  a.  gigg , d.  grellscheid , k.  hamilton , o.  latunde - dada , s.  platzer and p.  richardson _ et al .",
    "_ , eur .",
    "j.  c * 58 * ( 2008 ) 639 [ arxiv:0803.0883 [ hep - ph ] ] . h.  jung , s.  baranov , m.  deak , a.  grebenyuk , f.  hautmann , m.  hentschinski , a.  knutsson and m.  kramer _ et al .",
    "_ , eur .",
    "j.  c * 70 * ( 2010 ) 1237 [ arxiv:1008.0152 [ hep - ph ] ] .",
    "h.  kharraziha and l.  lonnblad , jhep * 9803 * ( 1998 ) 006 [ hep - ph/9709424 ] .",
    "j.  r.  andersen , l.  lonnblad and j.  m.  smillie , jhep * 1107 * ( 2011 ) 110 [ arxiv:1104.1316 [ hep - ph ] ] .      c.  flensburg , g.  gustafson and l.  lonnblad , jhep * 1108 * ( 2011 ) 103 [ arxiv:1103.4321 [ hep - ph ] ] .",
    "a.  polyanin , a.  manzhirov , `` handbook of mathematics for engineers and scientists '' , chapman and hall / crc , 1st edition , november 27 , 2006 ; isbn-13 : 978 - 1584885023 ."
  ],
  "abstract_text": [
    "<S> we propose a new method for monte carlo solution of non - linear integral equations by combining the newton  </S>",
    "<S> kantorovich method for solving non - linear equations with the markov chain monte carlo ( mcmc ) method for solving linear equations . </S>",
    "<S> the newton  kantorovich method allows to express the non - linear equation as a system of the linear equations which then can be treated by the mcmc ( random walk ) algorithm . </S>",
    "<S> we apply this method to the balitsky  </S>",
    "<S> kovchegov ( bk ) equation describing evolution of gluon density at low @xmath0 . </S>",
    "<S> results of numerical computations show that the mcmc method is both precise and efficient . </S>",
    "<S> the presented algorithm may be particularly suited for solving more complicated and higher - dimensional non - linear integral equation , for which traditional methods become unfeasible .    </S>",
    "<S> keywords : lhc , qcd , bk equation , gluon density , non - linear integral equation , newton  kantorovich method , markov chain monte carlo .    </S>",
    "<S> * ifjpan - iv-2013 - 10 *     * markov chain mote carlo solution of bk equation + through newton  </S>",
    "<S> kantorovich method *     krzysztof boek@xmath1 , krzysztof kutak@xmath2 and wiesaw paczek@xmath3    1.5 cm    * ifjpan - iv-2013 - 10 * </S>"
  ]
}
{
  "article_text": [
    "consider a binary sequence @xmath0 where each @xmath1 .",
    "the _ off - peak autocorrelations _ of @xmath2 are defined as @xmath3 and the _ energy _ of @xmath2 as @xmath4 the _ low - autocorrelation binary sequence _ ( labs )",
    "problem is to assign values to the @xmath5 such that @xmath6 is minimized .",
    "a common measure of sequence quality is the _ merit factor _ @xmath7 .",
    "theoretical considerations @xcite give an upper bound on @xmath8 of approximately 12.32 as @xmath9 , and empirical curve fitting on known optimal sequences @xcite yields an estimate of @xmath10 for large @xmath11 .",
    "this problem has many practical applications in communications engineering , and is of theoretical interest to physicists because it models 1-dimensional systems of ising - spins .",
    "labs has also generated interest among researchers from other fields who are interested in hard optimisation problems , and is problem number 5 in the csplib benchmark library @xcite , a web - based collection of constraint problems ( though it has no constraints ) .",
    "analytical methods have been used to construct optimal sequences for certain values of @xmath11 ( see @xcite for example ) but for the general case search is necessary .",
    "two possibilities are _ complete _ and _ incomplete _ search .",
    "complete search usually involves the enumeration of possibilities by backtracking .",
    "@xcite used exhaustive enumeration to find optimal sequences for @xmath12 .",
    "@xcite used a complete enumeration method with an accelerated function evaluation to compute exact solutions for @xmath13 .",
    "@xcite enumerated optimal sequences for @xmath14 using complete search augmented with two techniques to reduce the size of the search tree : _ branch - and - bound _ and _ symmetry breaking_. symmetry breaking , sometimes called _ symmetry exclusion _ , exploits the fact that sequences occur in equivalence classes of size 8 ( see section [ sym ] ) .",
    "however , even with these enhancements , complete search is unlikely to scale up to large sequences , and it is conjectured that for @xmath15 progress will be made through mathematical insight rather than computer power @xcite .",
    "the only other complete approach we know of is a recent quadratic programming model @xcite which turned out to be much slower than mertens method .",
    "it was only used to solve instances up to @xmath16 by which time it took tens of thousands of seconds , whereas mertens method took a few seconds on an older machine .",
    "when complete search becomes impractical it is common to resort to incomplete methods such as simulated annealing , evolutionary algorithms , neural networks , ant colonies or greedy algorithms , which are often able to solve much larger instances .",
    "unfortunately they perform quite poorly on some problems , and finding optimal labs solutions seemed for several years to be an example .",
    "the cause was considered to be the search space , whose cost function @xmath17 has a very irregular structure with isolated minima @xcite .",
    "however , more recent approaches show that metaheuristics can find optimal sequences efficiently . examples of metaheuristic methods applied to labs are simulated annealing @xcite , evolutionary search @xcite , tabu search @xcite , memetic algorithms @xcite , local search @xcite , and local search hybridised with relaxation @xcite .    in this paper",
    "we find several ways of improving branch - and - bound for labs , show that the new algorithm has improved scalability , and establish new optimality results for skew - symmetric sequences .",
    "the method is described in section [ method ] and results are presented in section [ results ] .",
    "first we describe mertens branch - and - bound method @xcite , then introduce our improvements .      in order to minimize the minimum energy @xmath18 of a partial sequence @xmath19",
    ", the relaxation @xmath20 can be used as a lower bound @xmath21 . because @xmath22 is still expensive to calculate ,",
    "mertens method uses a cheap lower bound @xmath23 based on an arbitrary completion of the current partial sequence .",
    "define a product @xmath24 to be _ computable _ if @xmath5 and @xmath25 are both assigned in the current partial sequence @xmath19 .",
    "let @xmath26 be the sum of its computable products and @xmath27 the number of its uncomputable products .",
    "a lower bound @xmath28 for each @xmath29 is calculated by finding the energy of the completed sequence then subtracting @xmath30 , because negating an element can not reduce @xmath29 by more than 2 . on finding a sequence with energy @xmath17 the search can proceed with upper bound @xmath31 because it is known that these sequences have energies differing by multiples of 4 @xcite .",
    "a refinement exploits the fact that the sum of an odd number of @xmath32 values has absolute value at least 1 .",
    "@xmath28 is refined to @xmath33 where @xmath34 .",
    "then @xmath35 is a lower bound for @xmath36 .",
    "symmetry occurs in labs because the energy of a sequence is unaffected if the sequence is reversed , if all its values are negated , or if oddly numbered values are negated : combining these three operations in all possible ways gives 8 equivalent sequences .",
    "if we can avoid exploring more than 1 sequence from each class we might reduce search effort by a factor approaching 8 , and mertens method achieves this by fixing the values of several of the outermost variables .",
    "the branching heuristic is chosen to facilitate symmetry breaking : variables are assigned outermost first , that is @xmath37 ( actually they are treated as pairs @xmath38 , @xmath39 , @xmath40 ) .      in mertens method",
    "the value of @xmath28 depends on the arbitrary completion of the sequence , and its greatest possible value occurs when arbitrarily completing the sequence transforms each uncomputable product to @xmath41 in which case @xmath42 .",
    "but we can always achieve this value by reasoning as follows .",
    "to the known sum @xmath26 of computable products we add @xmath27 uncomputable products .",
    "if @xmath43 then the worst case is that each uncomputable product is @xmath41 , while if @xmath44 the worst case is that each uncomputable product is 1 ( if @xmath45 then @xmath46 ) , so we can use @xmath42 .",
    "this idea was previously used in a hybrid local search algorithm @xcite .",
    "@xmath27 is the number of uncomputable products , but we can ignore some of these products because they can be predicted to cancel each other out .",
    "suppose we have two products @xmath47 and @xmath48 where @xmath49 have been assigned different values , but @xmath50 has not yet been assigned .",
    "whichever value @xmath50 takes the two products will have different values , so we can subtract 2 from @xmath27 without knowing the value of @xmath50 ( of course we must remember not to repeat this subtraction later in the search when @xmath50 is assigned a value ) .",
    "we shall refer to this as a _",
    "cancellation_.    cancellations occur if we use the same branching heuristic as mertens .",
    "suppose we have just assigned @xmath5 and we compute some @xmath28 , where @xmath51 , @xmath52 , @xmath53 is unassigned , @xmath54 is assigned , and @xmath55 .",
    "then we have a cancellation between products @xmath56 and @xmath57 .",
    "similarly if @xmath58 , @xmath59 , @xmath60 is unassigned , @xmath61 is assigned , and @xmath62 , then we have a cancellation between products @xmath63 and @xmath64 .",
    "if we instead ordered variables ( @xmath65 ) then no cancellations would occur , so mertens branching heuristic turns out to be ideal for cancellations as well as for symmetry breaking .",
    "we can also increase the value of @xmath66 in some cases .",
    "again consider two uncomputable products @xmath47 and @xmath48 where @xmath49 have been assigned values but @xmath50 has not .",
    "this time suppose @xmath49 take the _ same _ value so that no cancellation occurs .",
    "then the two uncomputable products will sum to either 2 or @xmath67 .",
    "we shall refer to this as a _",
    "reinforcement_. again if we use mertens branching heuristic reinforcements will often occur , and we exploit them as follows . if all uncomputable products occur either in cancellation or reinforcement pairs then @xmath27 is an even number .",
    "now suppose that @xmath26 is also an even number , and that @xmath68 .",
    "then @xmath69 is even but must be of the form @xmath70 for some integer @xmath71 so we can set @xmath72",
    ".      our final improvement does not tighten the relaxation but leads to faster convergence .",
    "mertens method presumably assigned each variable first to 1 then to @xmath41 or vice - versa , because this is standard practice and no special value ordering was mentioned in @xcite . in experiments we found that almost any other value ordering , including a randomised ordering , led more quickly to lower - energy sequences .",
    "we found best results by basing the value ordering on a known large sequence with low energy , as follows .    for each variable",
    "we choose a fixed value that will always be tried first during search : we shall refer to the vector of these values as a _",
    "template_. the template is based on a low - energy sequence found by local search so this is a simple way of exploiting local search results in branch - and - bound . to construct a template , for odd @xmath11 we take the middle @xmath11 values from the sequence    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 12112111211222b2221111111112224542 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    which has length 67 , energy 241 and merit factor 9.31 , while for even @xmath11 we take the middle @xmath11 values from the sequence    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 11111111141147232123251412112221212 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    which has length 68 , energy 250 and merit factor 9.25 .",
    "these two sequences were chosen because they have high merit factors and are longer than any sequences we need in this paper .",
    "they are shown in _ run - length notation _ in which each number indicates the number of consecutive elements with the same value .",
    "for example the sequence ( @xmath73 , @xmath73 , @xmath41 , @xmath73 , @xmath41 , @xmath41 , @xmath41 , @xmath41 , @xmath73 ) would be written 21141 : whether the sequence begins with @xmath73 or @xmath41 is irrelevant because of symmetry . for runs of length greater than 9 upper - case letters",
    "are used : a=10 , b=11 and so on .",
    "the motivation behind this idea is that each correlation @xmath29 for the new sequence takes all its terms from @xmath29 in the larger sequence .",
    "while this does not guarantee optimality it should lead to a low initial energy . in experiments",
    "this does indeed occur , and using a template greatly speeds up convergence to optimality .",
    "for example the graph in figure [ conv ] shows the runs for @xmath74 with and without the use of a template .",
    "the use of a template results in much earlier low - energy sequences .",
    "it also results in far fewer distinct energies , which might aid future parallelisation by reducing communication between processes : 307 energies without a template and 17 with .",
    "the effect on runtime is significant in many cases .",
    "for example with @xmath74 the method without a template ( but with all other improvements ) takes 920 seconds to find an optimal sequence and a further 288 seconds to prove optimality , whereas with a template it takes 15 seconds to find an optimal sequence and a further 816 seconds to prove optimality .",
    "we break almost all symmetries in a similar way to mertens , but taking the template into account via a standard technique from constraint programming .",
    "if we were using a constraint model we could break all symmetries by adding 7 _ lex - leader constraints _",
    "@xcite to ensure that any sequence is the lexicographically - least in its class .",
    "for example to exploit the symmetry that results from reversing a sequence and negating its values we would add a constraint @xmath75 however , it is known that symmetry breaking can have a deleterious effect on search if it conflicts with the search heuristics : that is , if the excluded solutions are those that would have been found earliest without symmetry breaking . to avoid this conflict we ensure that the template is the lexicographically - least among all possible variable assignments , by adjusting the lex - leaders . for example",
    "the above lex - leader becomes @xmath76 where @xmath77 and @xmath78 is template value @xmath79 ( @xmath80 ) . to reduce runtime overhead",
    "we do not use the lex - leaders at every search tree node .",
    "instead we check that they are satisfied only at even - numbered depths down to a depth of @xmath81 , which is sufficient to break most symmetry with low overhead .",
    "we can adapt our method to find only _ skew - symmetric _ sequences , which is the most common _ sieve _ for restricting search to a useful subset of all sequences @xcite .",
    "the skew - symmetric sequences have odd length with @xmath82 for some @xmath83 , and satisfy @xmath84 this roughly halves the number of independent variables in the problem , which greatly reduces the search space .",
    "such sequences often have good merit factors because @xmath85 for all odd @xmath86 .",
    "( note that skew - symmetry is a property of a single sequence , and should not be confused with the 8-fold symmetry between sequences described above . )",
    "optimal skew - symmetric sequences have been enumerated using branch - and - bound for @xmath87 by @xcite and for @xmath88 by @xcite , and good solutions for larger @xmath11 have been found using metaheuristics @xcite .    to adapt our branch - and - bound method to skew - symmetric sequences we need three modifications .",
    "firstly we ensure that no assignment violates skew - symmetry . secondly on finding a sequence with energy @xmath17 we can use a new upper bound @xmath89 .",
    "thirdly we need a longer template that is also skew - symmetric , and we use a known sequence with @xmath90 :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 11331111311332321211561311512 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    ( only the first 60 values are represented here as the rest can be deduced by skew - symmetry ) which has energy 835 and merit factor 8.48 .",
    "mertens tested the scalability of the branch - and - bound method by counting the number of recursive calls needed to find an optimal sequence and prove it optimal , using results for @xmath91 then curve - fitting ( h. bauke , personal communication ) and found that it needed @xmath92 calls . performing the same experiment we find improved scalability of @xmath93 calls , or @xmath94 seconds of wall clock time , using a c implementation of our method executed on a 2.8 ghz pentium 4 with 512 mb ram .",
    "we hope to use this method to find new optimal sequences in the future , but to do this we need a parallel implementation : since publishing @xcite mertens and bauke have found provably optimal sequences up to @xmath95 using a cluster of 160 processors . by extrapolation",
    "we do not expect a speedup of 160 to occur until @xmath96 so for the present parallelism trumps our improvements .",
    "but our new method should give good results when implemented on a cluster and we hope to try this in future work .",
    "however , we can use our method to find new results for skew - symmetric sequences , which to the best of our knowledge have not been attacked using highly parallel hardware .",
    "in experiments we found no new skew - symmetric sequences , but confirmed the optimality of several published sequences previously found by metaheuristics .",
    "table [ skewres ] shows the merit factors and execution times .",
    "results for @xmath87 can be found in @xcite , and because @xcite may not be easy to obtain we mention that the optimal merit factor for skew - symmetric sequences of length @xmath97 is 7.66 .",
    "the merit factor 8.25 for @xmath98 is optimal though @xcite incorrectly gives it as 9.25 .",
    "rrr @xmath11 & @xmath99 & seconds + 75 & 8.25 & 3,655 + 77 & 8.28 & 9,140 + 79 & 7.67 & 17,889 + 81 & 8.20 & 28,321 + 83 & 9.14 & 35,666 + 85 & 8.17 & 74,994 + 87 & 8.39 & 143,147 + 89 & 8.18 & 285,326 +    there might be further possible improvements to the labs branch - and - bound algorithm . if we expand the energy expression we obtain a quartic polynomial which in principle allows more cancellations .",
    "consider terms @xmath100 and @xmath101 . if @xmath102 are assigned and if @xmath103 then the two terms cancel out whatever the value of @xmath104 .",
    "furthermore , if only @xmath105 are assigned and @xmath106 the terms cancel out whatever the values of @xmath107 . and",
    "if only @xmath108 are assigned and @xmath109 then the two terms cancel out whatever the values of @xmath110 .",
    "the difficulty lies in exploiting these additional cancellations efficiently , which is an interesting possibility for future research .",
    "brglez , f. , li , x. y. , stallman , m. f. , & militzer , b. ( 2003 ) .",
    "reliable cost prediction for finding optimal solutions to labs problem : evolutionary and alternative algorithms . _ fifth international workshop on frontiers in evolutionary algorithms _ , cary , nc , usa .",
    "gallardo , j. e. , cotta , c. , & fernandez , a. j. ( 2007 ) .",
    "a memetic algorithm for the low autocorrelation binary sequence problem .",
    "_ proceedings of the 9th annual conference on genetic and evolutionary computation _ pp . 12261233 .",
    "halim , s. , yap , r. , & halim , f. ( 2008 ) engineering stochastic local search for the low autocorrelation binary sequence problem . _",
    "principles and practice of constraint programming , lecture notes in computer science _ 5202:640645 ."
  ],
  "abstract_text": [
    "<S> the low autocorrelation binary sequence problem has applications in telecommunications , is of theoretical interest to physicists , and has inspired work by many optimisation researchers because of its difficulty . for many years </S>",
    "<S> it was considered unsuitable for solution by metaheuristics because of its search space topology , but in recent years metaheuristics have found long high - quality sequences . </S>",
    "<S> however , complete search has not progressed since a parallel branch - and - bound method of 1996 . in this paper </S>",
    "<S> we find four ways of improving branch - and - bound , leading to a tighter relaxation , faster convergence to optimality and better scalability . </S>",
    "<S> we also extend known optimality results for skew - symmetric sequences from length 73 to 89 . </S>"
  ]
}
{
  "article_text": [
    "we consider the problem of designing an efficient deterministic algorithm for factoring a univariate polynomial , with coefficients taken from a finite field .",
    "the problem reduces in polynomial time to the problem of factoring a monic , square - free and completely splitting polynomial @xmath0 with coefficients in a prime field @xmath1 ( see @xcite , @xcite ) .",
    "although there are efficient polynomial time randomized algorithms for factoring @xmath0 ( @xcite , @xcite , @xcite , @xcite ) , as yet there is no deterministic polynomial time algorithm even under the assumption of the extended riemann hypothesis ( erh ) . in this paper we will assume that erh is true and @xmath2 are the @xmath3 distinct roots of the input polynomial @xmath4 , @xmath5    in 2001 , gao @xcite gave a deterministic factoring algorithm that fails to find nontrivial factors of @xmath4 in polynomial time , if @xmath4 belongs to a restricted class of polynomials , namely _ square balanced polynomials_. motivated by the work of gao @xcite , we have defined a proper subclass of square balanced polynomials , namely _ cross balanced polynomials _",
    ", such that polynomials that are not cross balanced , can be factored deterministically in polynomial time , under the assumption of the erh .",
    "our contribution can be summarized as follows .",
    "let @xmath4 be a monic , square - free and completely splitting polynomial in @xmath6 $ ] with @xmath3 roots @xmath7 .",
    "our factoring algorithm uses an arbitrary ( but deterministically chosen ) collection of @xmath8 ( @xmath9 ) small degree auxiliary polynomials @xmath10 , and from each @xmath11 @xmath12 and @xmath4 it implicitly constructs a simple @xmath3-vertex digraph @xmath13 such that , ( for @xmath14 ) @xmath13 is a subgraph ( not necessarily a proper subgraph ) of @xmath15",
    ". a proper factor of @xmath4 is efficiently retrieved if any one of the graphs is either not regular , or is regular with in degree and out degree of every vertex less than a chosen constant @xmath16 .",
    "this condition of regularity of all the @xmath17 graphs imposes a _ tight symmetry condition _ on the roots of @xmath4 , and we point out that this may be exploited to improve the worst case time complexity of the best known deterministic algorithms .",
    "further , we show that if the polynomials @xmath11 @xmath12 are randomly chosen then the symmetry breaks with high probability and our algorithm works in randomized polynomial time .",
    "we call the checking of this symmetry condition a _ balance test_.    we now present a little more details .",
    "define the sets @xmath18 for @xmath19 as , @xmath20 where @xmath21 is the square root algorithm described in @xcite ( see section [ subsec : gaoalgo ] ) .",
    "the polynomial @xmath4 is called a _ square balanced polynomial _ ( as in @xcite ) if @xmath22 . for @xmath23 , define polynomial @xmath24 as , @xmath25 where @xmath26 is an arbitrary but deterministically chosen polynomial with degree bounded by @xmath27 .",
    "further , @xmath28 for @xmath29 , and @xmath30 is taken to be @xmath4",
    "i.e. @xmath31 . assume that , for a given @xmath8 , for every @xmath32 , @xmath33 , polynomial @xmath34 , where @xmath35 is a square - free and square balanced polynomial and @xmath36 .",
    "later , we show that , if @xmath24 is not of the above form then a proper factor of @xmath4 can be retrieved efficiently . for each polynomial @xmath24 , @xmath33 , define the sets @xmath37 for @xmath19 as , @xmath38",
    "further , define the sets @xmath39 iteratively over @xmath32 as , @xmath40 for @xmath41 , let @xmath13 be a directed graph with @xmath3 vertices @xmath42 , such that there is an edge from @xmath43 to @xmath44 if and only if @xmath45 . note that",
    ", @xmath13 is a subgraph of @xmath15 for @xmath46 .",
    "denote the in degree and out degree of a vertex @xmath43 by @xmath47 and @xmath48 , respectively .",
    "we say that the graph @xmath13 is _ regular _ ( or _ @xmath49-regular _ ) if @xmath50 .",
    "call @xmath49 as the _ regularity _ of @xmath13 .",
    "the following theorem is proved in this paper .",
    "[ thm : crossbalance ] polynomial @xmath4 can be factored into nontrivial factors in time @xmath51 if @xmath13 is not regular for some @xmath32 , @xmath33 .",
    "further , if @xmath52 are all regular and for at least @xmath53 of the graphs we have @xmath54 @xmath55 , then @xmath4 can be factored in @xmath56 time .",
    "note that , @xmath57 is regular if and only if @xmath4 is square balanced , as @xmath58 , for @xmath19 and @xmath57 is in fact a regular tournament .",
    "+ suppose @xmath59 splits as @xmath60 in the quotient ring @xmath61}{(f)}$ ] where @xmath62 .",
    "our algorithm iteratively tests graphs @xmath63 so on , to check if any one of them is not regular .",
    "if at the @xmath64 iteration graph @xmath13 turns out to be not regular , then a proper factor of @xmath4 is obtained in polynomial time . however ,",
    "if @xmath13 is regular , then the algorithm returns a nontrivial monic factor @xmath65 of @xmath66 with degree equal to the regularity of @xmath13 .",
    "moreover , @xmath65 is also a factor of ( although may be equal to ) @xmath67 , the factor obtained at the @xmath68 iteration , and it can be ensured that if @xmath65 is a proper factor of @xmath67 ( which happens iff @xmath54 ) then @xmath69 .",
    "thus , if the graphs repeatedly turn out to be regular ( which in itself is a stringent condition ) and for at least @xmath53 times it happen that @xmath54 , for @xmath46 , then we obtain a nontrivial linear factor @xmath70 of @xmath66 .",
    "the element @xmath71 defines a nontrivial _ endomorphism _ in the ring @xmath72 , and by using a result from @xcite ( lemma @xmath73 in @xcite ) we can find a proper factor of @xmath4 in polynomial time .",
    "further , if for only @xmath74 times we get @xmath54 @xmath75 for some @xmath76 , @xmath77 , then we obtain a nontrivial factor @xmath70 of @xmath66 with degree at most @xmath78 . now",
    "if we apply evdokimov s algorithm ( @xcite ) on @xmath70 ( instead of @xmath66 ) , we can get a proper factor of @xmath4 in time @xmath79 ( @xmath80 and @xmath81 are constants ) . for most polynomials @xmath82 ( i.e. at least about @xmath83 ) and this gives an improvement over the time complexity of @xmath84 in @xcite ( @xmath80 , @xmath81 are the same constants ) .    assuming @xmath85 , all the best known deterministic algorithms ( e.g. @xcite , @xcite ) use computations in rings with large dimensions over @xmath1 to get smaller degree factors of @xmath66 .",
    "unlike these approaches , the balance test is an attempt to exploit an asymmetry among the roots of the input polynomial to obtain smaller degree factors of @xmath66 without carrying out computations in rings with large dimensions over @xmath1 .",
    "this attribute of our approach yields a better time complexity for most polynomials in a way as discussed in the previous paragraph .",
    "it is sufficient to choose the auxiliary polynomials @xmath86 , @xmath46 , in such a way that the graphs , if regular , are not all the same for too long , if their regularities are large .",
    "an efficient and deterministic construction of such auxiliary polynomials will immediately imply that factorization of univariate polynomials over finite fields can be done in deterministic polynomial time under erh .",
    "in this paper we assume that the auxiliary polynomials are arbitrary but deterministically chosen polynomials with degree bounded by @xmath27 .",
    "for example , one possibility is to choose @xmath87 for @xmath33 .",
    "( in fact , gao @xcite used this choice of auxiliary polynomials to define a restricted class of square balanced polynomials called _ super square balanced polynomials_. ) we show that , if random choices of auxiliary polynomials are allowed then our algorithm works in randomized polynomial time . for the graphs to be all regular and equal",
    ", the roots of @xmath4 must satisfy a tight symmetry condition ( given by equal sizes of all the sets @xmath88 , for @xmath19 and @xmath33 ) and it is only then that our algorithm fails to factor @xmath4 .",
    "a polynomial @xmath4 is called _",
    "@xmath17-cross balanced _ , for @xmath89 ,",
    "if for every @xmath32 , @xmath33 , polynomial @xmath34 , where @xmath35 is a square - free , square balanced polynomial with @xmath36 , and graph @xmath13 is regular .",
    "it follows from the definition that , @xmath90-cross balanced polynomials form the class of square balanced polynomials .",
    "let @xmath8 be some fixed polynomial in @xmath3 and @xmath91 .",
    "a polynomial @xmath4 is called _ cross balanced _ if it is @xmath17-cross balanced and regularity of graph @xmath92 is greater than a fixed constant @xmath16 . from theorem [ thm : crossbalance ] and @xcite it follows that , polynomials that are not cross balanced can be factored deterministically in polynomial time .",
    "assume that @xmath4 is a monic , square - free and completely splitting polynomial over @xmath1 and @xmath61}{(f)}$ ] is the quotient ring consisting of all polynomials modulo @xmath4 .",
    "elements @xmath93 of the ring @xmath72 are called the _ primitive idempotents _ of @xmath72 if , @xmath94 and for @xmath95 , @xmath96 if @xmath97 and @xmath98 otherwise . by chinese remaindering theorem ,",
    "@xmath99 ( @xmath3 times ) , such that every element in @xmath72 can be uniquely represented by an @xmath3-tuple of elements in @xmath1 . addition and multiplication between two elements in @xmath72 can viewed as componentwise addition and multiplication of the @xmath3-tuples .",
    "any element @xmath100 can be equated as , @xmath101 where @xmath102 .",
    "let @xmath70 be a polynomial in @xmath103 $ ] given by , @xmath104 then @xmath70 can be alternatively represented as , @xmath105 \\text { for $ 1 \\leq j \\leq n$}.\\ ] ] the usefulness of this representation is that , operations on polynomials in @xmath103 $ ] ( multiplication , gcd etc . ) can be viewed as componentwise operations on polynomials in @xmath106 $ ] .",
    "consider an element @xmath107 where @xmath102 , @xmath19 .",
    "the element @xmath108 defines a linear transformation on the vector space @xmath72 ( over @xmath1 ) , mapping an element @xmath109 to @xmath110 .",
    "the characteristic polynomial of @xmath108 ( viewed as a linear transformation ) is independent of the choice of basis and is equal to @xmath111 in order to construct @xmath112 one can use @xmath113 as the basis in @xmath72 and form the matrix @xmath114 where @xmath115 , @xmath116 , @xmath95 . then @xmath112 can be constructed by evaluating @xmath117 at @xmath3 distinct values of @xmath118 and solving for the @xmath3 coefficients of @xmath112 using linear algebra .",
    "the process takes only polynomial time . the notion of",
    "characteristic polynomial extends even to higher dimensional algebras over @xmath1 .",
    "let @xmath119 and @xmath120 be two polynomials in @xmath103 $ ] , where @xmath121 $ ] for @xmath19 .",
    "then , _ gcd _ of @xmath122 and @xmath4 is defined as , @xmath123 we note that , the concept of _ gcd _ of polynomials does not make sense in general over any arbitrary algebra .",
    "however , the fact that @xmath72 is a _ completely splitting semisimple algebra _ over @xmath1 allows us to work component - wise over @xmath1 and this makes the notion of _ gcd _ meaningful in the context .",
    "the following lemma was shown by gao @xcite .",
    "@xcite given two polynomials @xmath124 $ ] , @xmath125 can be computed in time polynomial in the degrees of the polynomials , @xmath3 and @xmath91 .",
    "let @xmath61}{(f ) } = f_p[x]$ ] where @xmath62 and suppose that @xmath59 splits in @xmath72 as , @xmath126 .",
    "define quotient ring @xmath127 as , @xmath128}{(f ' ) } = r[y]$ ] where @xmath129 .",
    "@xmath127 is an elementary algebra over @xmath1 with dimension @xmath130 .",
    "gao @xcite described an algorithm @xmath21 for taking square root of an element in @xmath127 . if @xmath131 where @xmath132 and @xmath133 is odd , and @xmath134 is a primitive @xmath135-th root of unity , then @xmath21 has the following properties :    1 .",
    "let @xmath136 be primitive idempotents in @xmath127 and @xmath137 where @xmath102 .",
    "then , @xmath138 .",
    "2 .   let @xmath139 where @xmath140 with @xmath141 and @xmath142",
    ". then @xmath143 iff @xmath144 .    when @xmath145 , @xmath146 and property @xmath147 implies that @xmath143 for @xmath148 iff @xmath149 is a quadratic residue in @xmath1 .",
    "[ alg : squarebalance ] @xcite + input : a polynomial @xmath150 $ ] .",
    "+ output : a proper factor of @xmath4 or output that ",
    "@xmath4 is square balanced \" .",
    "form @xmath151 , @xmath152 , @xmath72 , @xmath127 as before .",
    "compute @xmath153 .",
    "compute the characteristic polynomial @xmath154 of @xmath155 over @xmath72 .",
    "decompose @xmath154 as @xmath156 , where @xmath49 is the largest possible .",
    "if @xmath157 is a zero divisor in @xmath72 then find a proper factor of @xmath4 , otherwise output that ",
    "@xmath4 is square balanced \" .",
    "it was shown in @xcite that algorithm [ alg : squarebalance ] fails to find a proper factor of @xmath4 if and only if @xmath4 is square balanced .",
    "moreover , it follows from the analysis in @xcite ( see theorem @xmath158 in @xcite ) that , when @xmath4 is square balanced the polynomial @xmath159 takes the form , @xmath160\\chi_i}\\ ] ] where @xmath161 and @xmath162 for all @xmath163 , @xmath19 .",
    "in this section , we describe our algorithm for factoring polynomial @xmath4 .",
    "we show that the algorithm fails to factor @xmath4 in @xmath56 time if and only if @xmath4 is @xmath17-cross balanced and regularity of @xmath92 is greater than @xmath16 .",
    "the algorithm involves @xmath17 polynomials , @xmath164 , where polynomial @xmath24 , @xmath46 , is defined as , @xmath165 where @xmath26 is an arbitrary but deterministically fixed polynomial with degree bounded by @xmath27 and @xmath28 for @xmath29 .",
    "the polynomial @xmath24 can be constructed in polynomial time by considering the element @xmath166 in @xmath61}{(f ) } = f_p[x]$ ] , where @xmath62 , and then computing its characteristic polynomial over @xmath1 .",
    "[ lem : propfact ] if @xmath24 is not of the form @xmath167 , where @xmath168 is a square - free , square balanced polynomial and @xmath36 , then a proper factor of @xmath4 can be retrieved in polynomial time .    by definition ,",
    "define the sets @xmath170 , for @xmath19 , as @xmath171 .",
    "consider the following _ gcd _ in the ring @xmath103 $ ] , @xmath172 \\chi_i}\\ ] ] the leading coefficient of @xmath70 is a zero - divisor in @xmath72 , unless @xmath173 ( say ) .",
    "therefore , we can assume that , @xmath174 if polynomial @xmath168 ( obtained by square - freeing @xmath24 ) is not square balanced then a proper factor @xmath175 of @xmath168 is returned by algorithm [ alg : squarebalance ] .",
    "but then , @xmath176 is a proper factor of @xmath4 .",
    "algorithm [ alg : squarebalance ] works with @xmath177 as the input polynomial where @xmath178 s are distinct and @xmath179 , and returns a polynomial @xmath180 such that , @xmath181 \\chi_j^{(l)}}\\ ] ] where @xmath182 s are the primitive idempotents of the ring @xmath183}{(\\tilde{f_l})}$ ] , @xmath184 and @xmath185 for @xmath186 .",
    "assume that @xmath187 and @xmath3 is odd , as even degree polynomials can be factored in polynomial time .",
    "in the following algorithm , parameter @xmath17 is taken to be a fixed polynomial in @xmath3 and @xmath91 and @xmath16 is a fixed constant .",
    "[ alg : crossbalance ] cross balance + input : a polynomial @xmath150 $ ] of odd degree @xmath3 .",
    "+ output : a proper factor of @xmath4 or  failure \" .",
    "* choose @xmath188 distinct polynomials @xmath189 with degree greater than unity and bounded by a polynomial in @xmath3 and @xmath190 .",
    "( we can use any arbitrary , efficient mechanism to deterministically choose the polynomials . )",
    "take @xmath31 . * * for @xmath191 to @xmath17 do * 1 .",
    "( _ construct polynomial @xmath24 _ ) compute the characteristic polynomial , @xmath192 , of element @xmath193 , over @xmath1 . then @xmath194 .",
    "( _ check if @xmath4 can be factored _ ) check if @xmath24 is of the form @xmath167 , where @xmath168 is a square - free , square balanced polynomial and @xmath36 . if not , then find a proper factor of @xmath4 as in lemma [ lem : propfact ] .",
    "( _ obtain the required polynomial from algorithm @xmath90 _ ) else , @xmath168 is square balanced and algorithm [ alg : squarebalance ] returns a polynomial @xmath195 ( as in equation [ eqn : polyh ] ) , where @xmath196 and @xmath197 for @xmath198 .",
    "( _ change to a common ring so that gcd is feasible _ ) each @xmath197 is a polynomial @xmath199 $ ] of degree less than @xmath200 .",
    "compute @xmath201 as , @xmath202 , for @xmath198 , and construct the polynomial @xmath203 $ ] .",
    "( _ construct graph @xmath13 implicitly _ ) if @xmath191 then assign @xmath204 $ ] and continue the loop with the next value of @xmath32 .",
    "else , construct the polynomial @xmath205 by replacing @xmath118 by @xmath86 in @xmath180 and compute @xmath65 as , @xmath206.\\ ] ] 8 .",
    "( _ check if @xmath13 is a null graph _ ) let @xmath207 , where @xmath208 is the degree of @xmath65 and @xmath209 for @xmath210 . if @xmath211 then make @xmath212 and continue the loop with the next value of @xmath32 .",
    "( _ check if out degrees are equal _ ) else , @xmath213 .",
    "if @xmath214 is a zero divisor in @xmath72 , construct a proper factor of @xmath4 from @xmath214 and stop . 11 .",
    "( _ factor if out degrees are small _ ) else , if @xmath215 then use evdokimov s algorithm @xcite on @xmath65 to find a proper factor of @xmath4 in @xmath27 time .",
    "( _ obtain the values of a nice polynomial at multiple points _ ) if @xmath216 , evaluate @xmath217 $ ] at @xmath218 distinct points @xmath219 taken from @xmath1 .",
    "find the characteristic polynomials of elements @xmath220 over @xmath1 as @xmath221 $ ] , respectively .",
    "collect the terms @xmath222 for @xmath223 .",
    "( _ construct the nice polynomial from the values _ ) construct the polynomial @xmath224 $ ] such that @xmath225 for @xmath223 .",
    "solve for @xmath226 , @xmath223 , using linear algebra .",
    "( _ check if in degrees are equal _ ) for @xmath227 , if @xmath228 divides @xmath229 then compute @xmath230 $ ] .",
    "if a proper factor of @xmath4 is found , stop .",
    "else , continue with the next value of @xmath32 .",
    "+ + * endfor * * if a proper factor of @xmath4 is _ not _ found in the above _ for _ loop , return  failure \" .",
    "[ thm : mainthm ] algorithm [ alg : crossbalance ] fails to find a proper factor @xmath4 in @xmath56 time if and only if @xmath4 is @xmath17-cross balanced and regularity of graph @xmath92 is greater than @xmath16 .",
    "we show that , algorithm [ alg : crossbalance ] fails to find a proper factor of @xmath4 at the @xmath64 iteration of the loop iff @xmath4 is @xmath32-cross balanced and regularity of @xmath13 is greater than @xmath16 .",
    "recall the definitions of the sets @xmath37 and @xmath88 , @xmath19 , from section [ sec : intro ] .",
    "the set @xmath37 is defined as , @xmath38 and set @xmath88 is defined iteratively over @xmath32 as , @xmath231 graph @xmath13 , with @xmath3 vertices @xmath42 , has an edge from @xmath43 to @xmath44 iff @xmath45 .",
    "algorithm [ alg : crossbalance ] fails at the first iteration @xmath232 if and only if @xmath4 is square balanced . in this case ,",
    "@xmath233 , the polynomial @xmath234 is , @xmath235 \\chi_i}\\ ] ] and @xmath57 is regular with in degree and out degree of a vertex @xmath43 equal to @xmath236 .",
    "thus , polynomial @xmath4 is @xmath90-cross balanced and @xmath237 .",
    "if algorithm [ alg : crossbalance ] fails at the @xmath64 iteration , then we can assume that the polynomials @xmath238 are square free and square balanced ( by lemma [ lem : propfact ] ) .",
    "suppose that , algorithm [ alg : crossbalance ] fails at the @xmath64 iteration .",
    "then , @xmath177 is square free and square balanced , and algorithm [ alg : squarebalance ] returns the polynomial @xmath239 $ ] such that , @xmath240 \\chi_j^{(l)}}\\ ] ] where @xmath182 s are the primitive idempotents of the ring @xmath183}{(\\tilde{f_l})}$ ] and , @xmath184 let , @xmath241 , where @xmath196 and @xmath197 for @xmath198 .",
    "each @xmath197 is a polynomial @xmath199 $ ] with degree less than @xmath200 and",
    "if @xmath242 for @xmath243 , then by chinese remaindering theorem ( and assuming the correspondence between @xmath182 and the factor @xmath244 of @xmath168 ) we get , @xmath245$}\\\\ \\rightarrow \\alpha_u(p_l(x ) ) & = & q(p_l(x))(p_l(x ) - p_l(\\xi_{s_j } ) ) + a_{uj } \\\\ \\rightarrow \\alpha_u(p_l(x ) ) & = &   a_{uj } \\mod ( x - \\xi ) \\text{\\hspace{0.1 in } for every $ \\xi \\in \\{\\xi_1 , \\ldots , \\xi_n \\}$ such that $ p_l(\\xi ) = p_l(\\xi_{s_j})$ } \\end{aligned}\\ ] ] suppose that , for a given @xmath163 ( @xmath19 ) , @xmath246 ( @xmath247 ) is a unique index such that , @xmath248 . then , the polynomial @xmath249 has the following _ direct sum ( or canonical ) _ representation in the ring @xmath72 , @xmath250 this implies that the polynomial @xmath203 $ ] has the _ canonical _ representation , @xmath251 \\chi_i}\\ ] ] inductively , assume that @xmath252 has the form , @xmath253 \\chi_i}\\ ] ] then , @xmath254 \\chi_i } \\text{\\hspace{0.1 in } ( as $ r \\in \\tilde{\\delta}_{j(i)}^{(l ) } \\leftrightarrow s_r \\in   \\delta_i^{(l)}$ ) } \\end{aligned}\\ ] ] therefore , @xmath255 \\chi_i } \\\\ & = & \\beta_{t ' } y^{t ' } + \\ldots + \\beta_0 \\text{\\hspace{0.1 in } ( say)}\\end{aligned}\\ ] ] where @xmath256 and @xmath209 for @xmath257 .",
    "the element @xmath214 is not a zero divisor in @xmath72 if and only if @xmath258 . if @xmath215 then a factor of @xmath4 can be retrieved from @xmath65 in polynomial time using already known methods ( @xcite ) .",
    "the condition @xmath259 for all @xmath260 , makes the _ out _ degree of every vertex in @xmath13 equal to @xmath208 .",
    "however , this may not necessarily imply that the _ in _ degree of every vertex in @xmath13 is also @xmath208 .",
    "checking for identical _ in _ degrees of the vertices of @xmath13 is handled in steps @xmath261 of the algorithm .",
    "consider evaluating the polynomial @xmath65 at a point @xmath262 .",
    "@xmath263 \\chi_i } \\in r\\ ] ] the characteristic polynomial of @xmath264 over @xmath1 is , @xmath265 where @xmath266 is the _ in _ degree of vertex @xmath44 in @xmath13",
    ". let @xmath267 $ ] be a polynomial of degree @xmath268 , such that , @xmath269 for @xmath268 distinct points @xmath270 taken from @xmath1 .",
    "since we have assumed that @xmath271 , we can solve for the coefficients @xmath272 using any @xmath268 distinct points from @xmath1 .",
    "then , @xmath273 if @xmath274 for some @xmath275 , then there is an @xmath276 such that @xmath228 divides @xmath229 and @xmath277 yields a nontrivial factor of @xmath0 .",
    "this shows that the graph @xmath13 is regular if the algorithm fails at the @xmath64 step .",
    "since @xmath278 equals the regularity of @xmath13 , hence if the latter quantity is less than @xmath16 then we can apply evdokimov s algorithm @xcite on @xmath65 and get a non trivial factor of @xmath4 in polynomial time .",
    "let @xmath279 ( @xmath33 ) be a digraph with @xmath3 vertices @xmath42 such that there is an edge from @xmath43 to @xmath44 iff @xmath280 .",
    "then , graph @xmath281 or @xmath282 ( if @xmath283 , where @xmath284 is the null graph with @xmath3 vertices but no edge ) . here",
    "@xmath285 denotes the edge intersection of graphs defined on the same set of vertices .",
    "algorithm [ alg : crossbalance ] fails to find a proper factor of @xmath4 in polynomial time if and only if there exists an @xmath286 such that @xmath13 is @xmath49-regular ( @xmath287 ) and @xmath288 or @xmath284 for all @xmath275 , @xmath289 .",
    "it is therefore important to choose the polynomials @xmath290 in such a way that very quickly we get a graph @xmath291 with @xmath292 or @xmath284 .",
    "we say that a polynomial @xmath11 is good if either @xmath279 is not regular or @xmath54 @xmath55 .",
    "we show that , only a few good polynomials are required .",
    "[ lem : fewgoodpoly ] algorithm [ alg : crossbalance ] ( with a slight modification ) requires at most @xmath53 good auxiliary polynomials to find a proper factor of @xmath4 .",
    "consider the following modification of algorithm [ alg : crossbalance ] . at step @xmath293 of algorithm [ alg : crossbalance ] , for @xmath23 , take @xmath65 to be either @xmath294 or @xmath295 , whichever has the smaller nonzero degree .",
    "accordingly , we modify the definition of graph @xmath13 .",
    "define the set @xmath296 @xmath297 as , @xmath298 and modify the definition of the sets @xmath88 @xmath297 as , @xmath299 as before , an edge @xmath300 is present in @xmath13 iff @xmath45 .",
    "this modification ensures that , if @xmath301 has an invertible leading coefficient ( i.e if @xmath65 is monic ) then the degree of @xmath65 is at most half the degree of @xmath67 .",
    "hence , for every good choice of polynomial @xmath11 if @xmath15 and @xmath13 are @xmath302-regular and @xmath303-regular , respectively , then @xmath304 .",
    "therefore , at most @xmath53 good choices of polynomials @xmath11 are required by the algorithm .",
    "theorem [ thm : crossbalance ] follows as a corollary to theorem [ thm : mainthm ] and lemma [ lem : fewgoodpoly ] . as already pointed out in section [ sec : intro ] ,",
    "if only @xmath74 good auxiliary polynomials are available for some @xmath76 , @xmath77 , then we obtain a nontrivial factor @xmath70 of @xmath66 with degree at most @xmath78 .",
    "if we apply evdokimov s algorithm on @xmath70 instead of @xmath66 , then the maximum dimension of the rings considered is bounded by @xmath305 instead of @xmath306 ( as is the case in @xcite ) .",
    "+ in the following discussion we briefly analyze the performance of algorithm [ alg : crossbalance ] based on uniform random choices of the auxiliary polynomials @xmath26 ( @xmath46 ) .",
    "the proofs are omitted .",
    "[ lem : probbound1 ] if @xmath145 and @xmath307 then about @xmath308 fraction of all completely splitting , square - free polynomials of degree @xmath3 are square balanced .",
    "if @xmath145 , @xmath309 and @xmath86 is a uniformly randomly chosen polynomial of degree @xmath310 then the probability that @xmath24 is either not square - free or is a square - free and square balanced polynomial is upper bounded by @xmath308 .",
    "it follows that , for @xmath145 and @xmath309 , if the auxiliary polynomials @xmath11 s are uniformly randomly chosen then algorithm [ alg : crossbalance ] works in randomized polynomial time",
    ". however , the arguments used in the proof of lemma [ lem : probbound1 ] do not immediately apply to the case @xmath311 .",
    "therefore , we resort to a more straightforward analysis , although in the process we get a slightly weaker probability bound .",
    "[ lem : probbound2 ] if @xmath13 @xmath312 is regular and @xmath313 $ ] is a uniformly randomly chosen polynomial of degree @xmath314 then @xmath315 with probability at least @xmath316 .",
    "thus , if polynomials @xmath86 , @xmath317 , are randomly chosen , then the probability that @xmath4 is not factored by algorithm [ alg : crossbalance ] within @xmath53 iterations is less than @xmath318 .",
    "in this paper , we have extended the square balance test by gao @xcite and showed a direction towards improving the time complexity of the best previously known deterministic factoring algorithms . using certain auxiliary polynomials , our algorithm attempts to exploit an inherent asymmetry among the roots of the input polynomial @xmath4 in order to efficiently find a proper factor .",
    "the advantage of using auxiliary polynomials is that , unlike @xcite , it avoids the need to carry out computations in rings with large dimensions , thereby saving overall computation time to a significant extent . motivated by the stringent symmetry requirement from the roots of @xmath4",
    ", we pose the following question :    * is it possible to construct good auxiliary polynomials in deterministic polynomial time ?",
    "an affirmative answer to the question will immediately imply that factoring polynomials over finite fields can be done in deterministic polynomial time under erh .",
    "the author would like to thank manindra agrawal and piyush kurur for many insightful discussions that helped in improving the result .",
    "the suggestions from anonymous referees have significantly improved the presentation of this paper .",
    "the author is thankful to them ."
  ],
  "abstract_text": [
    "<S> we study the problem of factoring univariate polynomials over finite fields . under the assumption of the extended riemann hypothesis ( erh ) , </S>",
    "<S> gao @xcite designed a polynomial time algorithm that fails to factor only if the input polynomial satisfies a strong symmetry property , namely _ </S>",
    "<S> square balance_. in this paper , we propose an extension of gao s algorithm that fails only under an even stronger symmetry property . </S>",
    "<S> we also show that our property can be used to improve the time complexity of best deterministic algorithms on most input polynomials . </S>",
    "<S> the property also yields a new randomized polynomial time algorithm .    </S>",
    "<S> chandan saha </S>"
  ]
}
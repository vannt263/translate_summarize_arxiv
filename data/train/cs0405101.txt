{
  "article_text": [
    "boolean functions play an important role in various formal methods for specification , verification and analysis of software systems . in program analysis ,",
    "boolean functions are often used to approximate properties of the set of states encountered at a given program point .",
    "for example , a conjunction @xmath2 could specify that variables @xmath3 and @xmath4 satisfy some property whenever control reaches a given program point . a boolean function @xmath5 could specify that if @xmath6 is satisfied at a program point ( perhaps depending on the unknown inputs to the program ) then also @xmath7 is satisfied .",
    "a disjunction @xmath8 could arise as a consequence of a branch in the control where @xmath6 and @xmath7 approximate properties of the ` then ` and ` else ` branches respectively .    for program analysis using boolean functions , we often consider the _ positive _ boolean functions , @xmath1 .",
    "namely , those for which @xmath9 ( denoting @xmath10 and @xmath11 by @xmath12 and @xmath13 respectively ) .",
    "this restriction is natural as , due to the element of approximation , the result of an analysis is not a `` _ _ yes / no _ _ '' answer , but rather a `` _ _ yes / maybe not _ _ '' answer . in this case",
    "there is no `` negative '' information .",
    "sophisticated @xmath1-based analyzers implemented using binary decision diagrams @xcite have been shown @xcite to give good experimental results with regards to precision as well as the efficiency of the analyzers .",
    "however , scalability is a problem and inputs ( programs ) for which the analysis requires an exponential number of iterations or exponentially large data structures are encountered @xcite .    the domain",
    ", @xmath0 , of definite boolean functions is a subdomain of @xmath1 .",
    "these are the positive functions whose sets of models are closed under intersection .",
    "the domain @xmath0 is less expressive than @xmath1 .",
    "for example , the formula @xmath14 is not in @xmath0 .",
    "however , @xmath0-based analyzers can be implemented using less complex data structures and can be faster than @xmath1-based analyzers . for goal dependent groundness analyses ( where a description of the inputs to the program being analyzed is given ) @xmath0 has been shown to provide a reasonable tradeoff between efficiency and precision @xcite .",
    "the work described in @xcite illustrates a series of pathological inputs for @xmath1-based groundness analysis . that paper defines a predicate @xmath15 using @xmath16 clauses and illustrates that its @xmath1-based groundness analysis requires @xmath17 iterations",
    "however , given that the size of the program ( the total number of arguments ) , is quadratic in @xmath16 ( @xmath18 ) , the number of iterations is sub - exponential in the size of the input ( @xmath17 or @xmath19 ) .",
    "it has been suggested that @xmath0 analyses might provide better scalability properties than @xmath1 due to the restriction to functions whose models are closed under intersection .",
    "this note makes two contributions :    1 .",
    "it demonstrates that the worst - case behavior of a @xmath0-based analysis is ( at least ) as bad as that described in @xcite for @xmath1-based analyses ; and 2 .",
    "it demonstrates that the worst - case behavior of a @xmath1-based analysis is exponential in the size of the input .",
    "we have not succeeded to demonstrate a worst - case analysis for @xmath0 for which the number of iterations is exponential in the size of the input , nor to prove that @xmath0-based groundness analysis has sub - exponential worst - case behaviour .",
    "this remains an open problem .",
    "consider an @xmath16-ary boolean function @xmath20 .",
    "a model @xmath21 of @xmath20 can be viewed as a sequence @xmath22 of zero s and one s such that @xmath23 . for the sake of our construction",
    ", we order @xmath16-ary models according to their value as @xmath16-digit binary numbers .",
    "so a model @xmath24 is smaller or equal to a model @xmath25 if and only if the binary number corresponding to @xmath24 is less or equal to the binary number corresponding to @xmath25 .",
    "the intersection of models is defined as usual so that @xmath26 where @xmath27 if and only if @xmath28 .",
    "let us first comment on the series of programs which demonstrates the potential worst - case behavior of a @xmath1-based groundness analysis @xcite .",
    "the analysis of the predicate @xmath29 enumerates the models of the ( constant ) @xmath16-ary boolean function @xmath13 ( @xmath11 ) in reverse order .",
    "starting from the initial approximation ( which has no models ) , each consecutive approximation is a function which has one new model that was not in the previous iteration .",
    "for example , when @xmath30 , the models accumulate in the following order : @xmath31 and the @xmath1-based analysis totals 8 iterations .",
    "in contrast the corresponding @xmath0-based analysis totals 4 iterations because at each iteration the current set of models is closed under intersection .",
    "so for example , in the third iteration , the set @xmath32 is closed to give @xmath33 .",
    "we now construct a series of programs which demonstrates the potential worst - case behavior of a @xmath0-based groundness analysis .",
    "this construction is based on the following observation :    [ prop1 ] let @xmath21 be an @xmath16-ary model . then the set of @xmath16-ary models smaller or equal to @xmath21 is closed under intersection .",
    "the result follows from the following observation : if @xmath24 and @xmath25 are @xmath16-ary models , then @xmath34 is no larger than @xmath24 ( and no larger than @xmath25 ) .",
    "this is because @xmath34 is obtained from @xmath24 ( or from @xmath25 ) by changing some one s to zero s .",
    "a consequence of proposition [ prop1 ] is that the domain of definite boolean functions over @xmath16 variables contains a chain of length @xmath35 . to demonstrate such a chain",
    "consider an enumeration @xmath36 of the @xmath16-ary models according to their binary ordering ( so @xmath37 and @xmath38 ) .",
    "observe that @xmath39 is the @xmath16-ary binary representation of @xmath40 .",
    "define a sequence @xmath41 as follows : let @xmath42 be the boolean function with the empty set of models and for @xmath43 define @xmath44 to be the boolean function whose models are @xmath45 .",
    "> from the construction it is clear that @xmath46 forms a chain .",
    "moreover , the elements of @xmath46 are in @xmath0 : they are positive because they have @xmath47 as a model ; and from proposition [ prop1 ] , it follows that they are closed under intersection .",
    "the chain @xmath46 is of length @xmath48 because , for @xmath49 @xmath44 has exactly one model more than @xmath50 .",
    "this is the setting for our construction .",
    "the ( @xmath0-based ) groundness analysis of the following predicate `` @xmath51 '' iterates through the chain @xmath46 .",
    "the arguments typeset in boldface highlight the case for @xmath52 .",
    "the program size is quadratic in @xmath16 and consists of a single predicate of arity @xmath16 with @xmath53 binary clauses .",
    "the analysis of the program can be viewed as counting from zero to @xmath54 in its arguments .",
    "# 1 @xmath55",
    "the @xmath0- and @xmath1-based groundness analyses of the predicate @xmath51 program in the series given in this note involve an exponential number of iterations and compute an @xmath16-ary boolean function .",
    "the same is true for the @xmath1-based analysis of the series given in @xcite .",
    "however , it is important to note that complexity is typically expressed in terms of the size of the input to a problem and that the size of the program defining @xmath51 in both series is quadratic in @xmath16 ( @xmath18 ) .",
    "hence , formally speaking , we have shown that both @xmath0 and @xmath1-based groundness analyses may potentially involve a number of iterations which is @xmath19 .",
    "this is bad enough , but sub - exponential .    for @xmath1",
    ", we can strengthen the result .",
    "the following program is of size linear in @xmath16 ( @xmath56 ) and its @xmath1-based groundness analysis requires @xmath54 iterations .",
    "@xmath57 \\begin{array}{llcll } s(c~ , x_1 , \\ldots , x_1 , & x_1 , c~ , \\ldots ,   c~ ) .\\\\",
    "s(w , a_1 , \\ldots , a_{n-1 } , & w , b_1 , \\ldots , b_{n-1 } ) & \\leftarrow &           s(a_1,\\ldots , a_n , & b_1,\\ldots , b_n).\\\\ \\end{array } \\end{array}\\ ] ]    intuitively , the @xmath58 arguments of the predicate @xmath59 represent two @xmath16-digit binary numbers ( the first is the successor of the second ) so that the @xmath16 recursive clauses from the program in section [ s2 ] can be simulated by two clauses for @xmath59 .",
    "the base case of @xmath59 corresponds to the last recursive clause .",
    "however , the analysis of @xmath59 does not follow an exponential chain so we still need the predicate @xmath51 to get the worst - case behaviour .",
    "this approach does not work for @xmath0 because the result in @xmath1 for @xmath59 is not closed under intersection .",
    "we have demonstrated a @xmath60 worst case complexity for @xmath1 and at least @xmath19 for @xmath0 ( where @xmath61 is the size of the program ) . it remains to be determined",
    "if the worst case for @xmath0 is really as bad as that for @xmath1 or perhaps @xmath0 has better worst - case behaviour .",
    "howe , j.  m. , & king , a. ( 2000 ) . implementing groundness analysis with definite boolean functions .",
    "smolka , g. ( ed ) , _",
    "european symposium on programming_. lecture notes in computer science , vol .",
    "springer - verlag .",
    "king , andy , smaus , jan - georg , & hill , pat .",
    "( 1999 ) . quotienting share for dependency analysis .",
    "swierstra , doaitse ( ed ) , _",
    "european symposium on programming_. lecture notes in computer science , vol .",
    "springer - verlag ."
  ],
  "abstract_text": [
    "<S> this note illustrates theoretical worst - case scenarios for groundness analyses obtained through abstract interpretation over the abstract domains of _ definite _ ( @xmath0 ) and _ positive _ ( @xmath1 ) boolean functions . for @xmath0 , an example </S>",
    "<S> is given for which any @xmath0-based abstract interpretation for groundness analysis follows a chain which is exponential in the number of argument positions as well as in the number of clauses but sub - exponential in the size of the program . </S>",
    "<S> for @xmath1 , we strengthen a previous result by illustrating an example for which any @xmath1-based abstract interpretation for groundness analysis follows a chain which is exponential in the size of the program . it remains an open problem to determine if the worst case for @xmath0 is really as bad as that for @xmath1 . </S>"
  ]
}
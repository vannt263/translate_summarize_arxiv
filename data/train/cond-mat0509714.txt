{
  "article_text": [
    "a well - known long standing problem in combinatorics and statistical mechanics is to find the generating function for self - avoiding polygons ( or walks ) on a two - dimensional lattice .",
    "the models are of tremendous inherent interest as well as serving as simple models of polymers and vesicles @xcite . despite strenuous effort over the past 50 years or",
    "so this problem has not been solved on any regular two dimensional lattice . however , there are many simplifications of this problem that are solvable @xcite , but all the simpler models impose an effective directedness or other constraint that reduces the problem , in essence , to a one - dimensional problem .    one particular class of exactly solved polygon models are those with a convexity constraint ( see figure  [ fig : poly ] ) . on the square lattice",
    "a polygon is said to be _ convex _ if it is convex with respect to both vertical and horizontal lines , i.e. , any vertical line will intersect the polygon at zero or two horizontal edges while similarly any horizontal line will intersect the polygon at zero or two vertical edges .",
    "alternatively a convex polygon is a sap of a length equal to the perimeter of its minimal bounding rectangle .",
    "if we further demand that the polygon must include the vertices in some of the corners of the minimal bounding rectangle we can define a further five polygon models as illustrated in figure  [ fig : poly ] .",
    "the full perimeter and area generating functions are known for all these models @xcite . also of great interest",
    "is the mean - square radius of gyration , @xmath1 , which measures the typical size of a polygon with perimeter @xmath2 . in this paper",
    "we report on work leading to conjectured exact solutions for the generating functions associated with the mean - square radius of gyration for the class of convex polygons .",
    "examples of the types of convex polygons we consider in this paper . ]    an _",
    "@xmath2-step self - avoiding walk _",
    "@xmath3 is a sequence of _ distinct _ vertices @xmath4 such that each vertex is a nearest neighbour of it predecessor .",
    "saws are considered distinct up to translations of the starting point @xmath5 .",
    "a self - avoiding polygon of length @xmath2 is an @xmath6-step saw such that @xmath5 and @xmath7 are nearest neighbours and a closed loop can be formed by inserting a single additional step joining the two end - points .",
    "we shall use the symbol @xmath8 to mean the set of all saps of perimeter length @xmath2 .",
    "generally saps are considered distinct up to a translation , so if there are @xmath9 saps of length @xmath2 there are @xmath10 walks ( the factor of two arising since the walk can go in two directions ) .",
    "one expects in general that @xmath11 , where @xmath12 is the so - called connective constant while @xmath13 is a critical exponent . in our cases @xmath12 and @xmath13 are known from the exact solutions for the perimeter generating functions    @xmath14    where we took into account that polygons on the square lattice have even length .",
    "the generating functions thus have a singularity at the critical point @xmath15 with critical exponent @xmath16 .",
    "the function @xmath17 is analytic at @xmath18 .",
    "note that both @xmath12 and @xmath13 are model dependent .",
    "the mean - square radius of gyration of @xmath2-step polygons is defined by ,    @xmath19    where we expect that @xmath20 .",
    "it is advantageous to look at the quantity @xmath21 , which is an integer , and in particular we shall study the associated generating function @xmath22 where we again used that @xmath23 is non - zero only when @xmath2 is even .",
    "the values for the critical exponents are known exactly , though non - rigorously , for self - avoiding polygons due to the work by nienhuis @xcite , @xmath24 and @xmath25 . as we shall demonstrate later",
    ", the exponent @xmath13 takes on several different values for the convex polygons studied in this paper , but the exponent @xmath0 in all cases .",
    "in the next section we briefly describe the algorithm used to calculate @xmath23 and in the following section we list the various perimeter generating functions .",
    "the first terms in the series for the polygon generating function are calculated using transfer matrix techniques to count the number of polygons spanning rectangles @xmath26 edges wide and @xmath27 edges long .",
    "the transfer matrix technique involves drawing a line through the rectangle intersecting a set of edges . for each configuration of occupied or empty edges along the intersection",
    "we maintain a ( perimeter ) generating function for partial polygons cutting the intersection in that particular pattern .",
    "due to the convexity constraint a vertical line will intersect the polygon exactly twice .",
    "the upper edge of the convex polygon performs a directed walk taking steps to the right and up until it reaches the top of the rectangle where it turns and then performs a directed walk with steps to the right and down .",
    "likewise the lower edge performs a directed walk with right and down steps until it hits the bottom of the rectangle where it turns and takes only right and up steps .",
    "a convex polygon is formed once the two walks meet . in order to specify a configuration we just need to know the positions of the edges and whether or not the top and bottom of the rectangle has been touched .",
    "all the possible configurations can then be encoded by four @xmath28-matrices , one matrix for each possibility of touched borders .",
    "as the vertical boundary line is moved one step forwards the matrices are updated to allow for all the legal moves of the edge - walks ( the walks must be directed as described above and never cross ) .",
    "the updating involves simple double sums over the indices .",
    "this approach was used by guttmann and enting @xcite and is very efficient . however , in one iteration many steps can be inserted and this makes the calculation of the contributions to the radius of gyration somewhat cumbersome . we find it more convenient to use an algorithm in which the convex polygons in a given rectangle are enumerated by moving the intersection so as to add one vertex at a time .",
    "the method we used to enumerate convex polygons on the square lattice is a specialisation of the method originally devised by enting @xcite for the enumeration of self - avoiding polygons .",
    "as noted earlier , convex polygons can be viewed as saps with a number of steps equal to the perimeter of the minimal bounding rectangle .",
    "so we could simply take our previous algorithm @xcite , which we generalised in order to calculate the radius of gyration , and only extract the terms counting convex polygons .",
    "due to the convexity constraint we were able to simplify the algorithm somewhat and make it more efficient .",
    "however , the algorithm is still quite similar to the sap enumeration algorithm so we wo nt describe it further . suffice to say that the method for calculating the radius of gyration coefficients @xmath23 has been described in @xcite .    using this algorithm we quickly ( a few hours of cpu time ) calculated the radius of gyration of the polygon models of figure  [ fig : poly ] to length @xmath29 , giving us 56 terms in the half - perimeter series .",
    "the first few terms @xmath9 and @xmath23 are listed in table  [ tab : coeff ] .",
    "the full series for the generating functions studied in this paper can be obtained by sending a request to the author or via the web at http://www.ms.unimelb.edu.au/ iwan/.    rrr|rr|rr & & & + @xmath2 & @xmath9 & @xmath23 & @xmath9 & @xmath23 & @xmath9 & @xmath23 + 4 & 1 & 8 & 1 & 8 & 1 & 8 + 6 & 2 & 66 & 2 & 66 & 2 & 66 + 8 & 7 & 600 & 6 & 522 & 5 & 444 + 10 & 28 & 5164 & 20 & 3772 & 14 & 2710 + 12 & 120 & 41768 & 70 & 25138 & 42 & 15512 + 14 & 528 & 317584 & 252 & 157212 & 132 & 84756 + 16 & 2344 & 2280792 & 924 & 935140 & 429 & 446952 + 18 & 10416 & 15573120 & 3432 & 5343160 & 1430 & 2291718 + 20 & 46160 & 101743312 & 12870 & 29541450 & 4862 & 11485760 + 22 & 203680 & 639664960 & 48620 & 158920172 & 16796 & 56486716 + 24 & 894312 & 3889101336 & 184756 & 835390460 & 58786 & 273405288 + 26 & 3907056 & 22961959168 & 705432 & 4305416136 & 208012 & 1305401916 + 28 & 16986352 & 132118984560 & 2704156 & 21812985652 & 742900 & 6159651344 + 30 & 73512288 & 743046249664 & 10400600 & 108875244952 & 2674440 & 28766573800 + 32 & 316786960 & 4095077270128 & 40116600 & 536326527048 & 9694845 & 133128274320 + 34 & 1359763168 & 22163717040384 & 155117520 & 2611304032624 & 35357670 & 611143639110 + 36 & 5815457184 & 118021533366432 & 601080390 & 12582098181466 & 129644790 & 2785335811920 + 38 & 24788842304 & 619313064407680 & 2333606220 & 60058408242252 & 477638700 & 12612104460780 + 40 & 105340982248 & 3206924122635928 & 9075135300 & 284257070075212 & 1767263190 & 56773091159400 + & & & + @xmath2 & @xmath9 & @xmath23 & @xmath9 & @xmath23 & @xmath9 & @xmath23 + 4 & 1 & 8 & 1 & 8 & 1 & 8 + 6 & 2 & 66 & 2 & 66 & 2 & 66 + 8 & 5 & 444 & 4 & 366 & 3 & 288 + 10 & 13 & 2541 & 8 & 1640 & 4 & 900 + 12 & 34 & 12840 & 16 & 6404 & 5 & 2280 + 14 & 89 & 59113 & 32 & 22696 & 6 & 4998 + 16 & 233 & 253600 & 64 & 74832 & 7 & 9856 + 18 & 610 & 1029802 & 128 & 233312 & 8 & 17928 + 20 & 1597 & 4002112 & 256 & 695680 & 9 & 30600 + 22 & 4181 & 15005189 & 512 & 2000128 & 10 & 49610 + 24 & 10946 & 54603436 & 1024 & 5578752 & 11 & 77088 + 26 & 28657 & 193743969 & 2048 & 15166464 & 12 & 115596 + 28 & 75025 & 672725072 & 4096 & 40336384 & 13 & 168168 + 30 & 196418 & 2292470170 & 8192 & 105256960 & 14 & 238350 + 32 & 514229 & 7685026612 & 16384 & 270135296 & 15 & 330240 + 34 & 1346269 & 25392243845 & 32768 & 683188224 & 16 & 448528 + 36 & 3524578 & 82826447752 & 65536 & 1705443328 & 17 & 598536 + 38 & 9227465 & 267077278409 & 131072 & 4207935488 & 18 & 786258 + 40 & 24157817 & 852322922488 & 262144 & 10274078720 & 19 & 1018400 +",
    "in this section we use the series for @xmath23 to find ( numerically ) the exact perimeter generating functions for the radius of gyration of convex polygons .",
    "the perimeter generating function for convex polygons was first obtained by delest and viennot @xcite using the method of algebraic languages and later by several other authors using different methods @xcite :    @xmath30    from this we see that the critical point @xmath31 ( and thus @xmath32 ) while the critical exponent @xmath33 ( and thus @xmath34 ) , corresponding to the dominant double pole at @xmath18 .",
    "in addition there is a sub - dominant square root correction .",
    "informed by this result it is natural to assume that the generation function for the mean - squared radius of gyration has a similar form .",
    "that is we assume that @xmath35/(1 - 4x)^{\\gamma}$ ] , where @xmath17 and @xmath36 are polynomials . using the method of differential approximants",
    "@xcite we easily established that @xmath37 .",
    "next we wrote a simple maple routine to find such a solution , that is we solve for the unknown coefficients @xmath38 and @xmath39 of @xmath17 and @xmath36 .",
    "we simply form the series expansion for @xmath40 $ ] , match the series coefficients to those of @xmath41 and solve the resulting set of linear equations in the coefficient @xmath38 and @xmath39 . in this fashion",
    "we found a solution with polynomials of degree 10 requiring no more than 22 unknown coefficients .",
    "since we have more than 50 known terms @xmath42 there are at least 30 unused series coefficients which serve as strong checks on the correctness of our solution .",
    "the generating function for the mean - squared radius of gyration of convex polygons is :    @xmath43    from this we see that the critical exponent @xmath44 and thus @xmath0 .",
    "this should be compared to the result for self - avoiding polygons @xmath45 @xcite .",
    "physically , there is a simple argument for @xmath0 .",
    "convex polygons are relevant to the description of vesicles in the _ inflated _ regime , where they are space - filling , and since the radius of gyration measures a typical size of a polygon @xmath1 is proportional to a typical area and hence @xmath0 for convex polygons .",
    "the value @xmath45 means that saps are much more ramified .",
    "directed and convex polygons was considered by lin and chang @xcite .",
    "they calculated the full anisotropic generating function for directed and convex polygons . in the isotropic case which we consider here their result reduces to the very simple form    @xmath46",
    "so we have @xmath31 while @xmath47 and thus @xmath48 . as for the convex case",
    "we start by looking for a solution to @xmath49 of the same form , that is @xmath50 , with @xmath51 determined from differential approximants .",
    "however we were not successful at first , so next we tried a solution of the same form as for convex polygons and found that    @xmath52    so in this case we find the critical exponent @xmath53 and thus as before @xmath0 .",
    "the model of staircase polygons is very well - known and much studied , dating back at least to the work by plya @xcite who showed that @xmath54 for @xmath55 .",
    "this result was obtained by delest and viennot @xcite in the more elegant form @xmath56 , where @xmath57 are the famous and ubiquitous catalan numbers .",
    "consequently the generating function is    @xmath58    and @xmath31 , while @xmath59 and thus @xmath60 . as per the previous cases",
    "we quite readily find the radius of gyration generation function    @xmath61    and we see that @xmath62 and once again @xmath0 .",
    "stack polygons were also considered by lin and chang @xcite and their result for the generating function is    @xmath63    the critical point is now given by the zero of @xmath64 namely @xmath65 and the critical exponent is @xmath66 or @xmath67 . in this case",
    "the radius of gyration generation function is of the same form and again we have @xmath0 . explicitly we find that    @xmath68    the generating function for ferrers diagrams is trivial in that these polygons are simply formed from a directed walk with @xmath69 right or up steps , extended at the starting point with a horizontal step and at the end - point with a vertical step , and then closed by straight lines to form a polygon with @xmath70 steps .",
    "it immediately follows that the generating function is    @xmath71    and we have @xmath72 and @xmath67 .",
    "the radius of gyration generation function is of the same form and with @xmath0 ,    @xmath73    rectangular polygons are obviously the simplest case and the generating function is simply    @xmath74    so that @xmath75 and @xmath34 .",
    "the radius of gyration generating function is found to be    @xmath76    and again we have @xmath0 .    now that these results for the radius of gyration of convex polygons are known from the numerical work presented here it should be easier to prove them rigorously .",
    "we gratefully acknowledge financial support from the australian research council ."
  ],
  "abstract_text": [
    "<S> we have derived long series expansions for the perimeter generating functions of the radius of gyration of various polygons with a convexity constraint . using the series we numerically find simple ( algebraic ) exact solutions for the generating functions . in all cases the size exponent @xmath0 . </S>"
  ]
}
{
  "article_text": [
    "complex dynamic systems , exhibiting emergent dynamics , often arise in the form of graphs ( or networks ) : the internet , social networks , chemical and biochemical reaction networks , communication networks and more @xcite . in a social network , for example , the individuals are represented by nodes ( or vertices ) , while the relations among them are represented by the edges connecting these nodes .",
    "one type of network dynamics arises in cases where the network topology ( connectivity ) is static , but the _ state _ of each vertex is a variable that evolves in time ( in part due to interactions with the states of connected vertices ) .",
    "such problems are said to exhibit  dynamics _ on _ networks \" .",
    "a different type of network dynamics ( on which we focus here ) arises when the _ existence _ or the _ strength _ of connections between the vertices constitute the variables that evolve in time .",
    "these problems are said to exhibit  dynamics _ of _ networks \" .",
    "these two types of dynamics are not , of course , mutually exclusive ; clearly we can have dynamical problems involving dynamics both _ on _ and _ of _ networks .",
    "the evolutionary network problems we will refer to in this work will be exclusively of the second type of dynamics mentioned above : dynamics _ of _ networks , where the network structure is the state that changes over time",
    ". we will restrict ourselves to networks with unweighted edges , that are either present or absent ; we will not study edges of continuously variable strength here , even though our methods can be adapted to function in such situations also ( in fact , with appropriate modifications , in any type of network evolution problem ) .    in our networks of choice",
    "the detailed graph representation constantly changes over time according to some specified rules : edges ( and/or nodes ) are added or deleted . although these fine - scale ,  node level \" , microscopic details of the graph are changing in time , coherence often emerges at a macroscopic level . at such a coarse - grained , system scale ,",
    "the ( expected ) structure is often seen to evolve smoothly in time : it may eventually become stationary or may possibly oscillate between a number of states .",
    "we will use a coarse - grained , macroscopic view to study graph dynamics , treating the coarse temporal evolution as a dynamical system .    reduced descriptions of high - dimensional dynamical systems ( in our case , of large graphs )",
    "are possible predominantly due to two mechanisms : ( a ) _ decoupling _ of the evolution of a set of variables and/or ( b ) _ separation of time scales _ between evolution of different groups of variables . in the former ( much simpler ) case ,",
    "the few uncoupled variables evolve _ independently _ of other variations in the system and hence a reduced closed description can be written in terms of just these variables . in the latter ( more interesting ) case ,",
    "characteristic time scales of evolution of a few variables ( called the  slow \" variables ) of the system are much longer than the time scales of evolution of the remaining  fast \" variables . after a short evolution time",
    "the fast variables will then often become _ slaved to the slow variables _ , i.e. , the evolution of the fast variables becomes ( in the long term ) solely determined by the evolution of the slow variables .",
    "the long - term dynamics of the system can therefore in principle be approximated by equations written only in terms of the slow variables , the ",
    "coarse variables \" of the system . note also that , depending on the time scales of interest , it may be possible to close the system ( write closed form evolution equations ) at different levels of detail . to use the established tools and techniques of dynamical systems ( e.g. bifurcation and stability computations ) , however , one must explicitly derive the evolution equations describing the coarse variable dynamics .",
    "we are interested in cases where such coarse evolution equations _ conceptually exist _ , yet they are not available in closed form . in such cases , it has been shown that it may be possible to _ circumvent _ their explicit derivation using equation - free techniques @xcite .",
    "these techniques are based on short bursts of appropriately designed computational experiments with the detailed ,  fine scale \" network dynamic evolution model , and on the knowledge of the appropriate _ coarse observables _ :",
    "the variables in terms of which reduced closed coarse equations could _ in principle _ be written . using traditional numerical algorithms as the basis for the design of computational experiments , and exploiting algorithms that translate between coarse variable values ( relevant network statistics ) and actual realizations of networks with these statistics , equation - free approaches may significantly accelerate the computer - assisted study of network dynamics . in recent work , we have applied equation - free techniques to illustrative examples of several different types : molecular dynamics @xcite , collective animal behavior @xcite , cell population dynamics @xcite and also dynamical models on static networks @xcite . here , we demonstrate the use of equation - free techniques on an illustrative graph evolution problem , and test our results against explicitly derived coarse equations . a crucial prerequisite for equation - free modeling",
    "is the knowledge of a good set of _ coarse variables _ - the collective network features that can be used to predict its ( expected ) coarse evolution , the variables in terms of which the coarse model would close .",
    "while a large graph is an intrinsically high dimensional object and difficult to visualize , its complicated structure can be probed by measuring statistical properties of the graph .",
    "such statistical properties of graphs are often good candidate coarse variables .",
    "commonly used statistical properties for describing a graph include the average degree , the degree distribution , the clustering coefficient , and the distributions of shortest path lengths .",
    "@xcite . as we will see below , even after a good set of such coarse variables has been selected , an important requirement for using our equation - free algorithms is the ability to routinely construct graphs exhibiting prescribed values of these properties .",
    "it is clearly trivial to construct a graph with a given number of nodes and edges ; yet it is quite non - trivial to construct realizations of graphs with , say , a prescribed distribution of shortest path lengths .",
    "these issues will be discussed and illustrated through a simple model example in the remainder of the paper as follows : the model behavior is discussed briefly in section  [ sec : model ] .",
    "we describe our coarse - graining approach in section  [ sec : cg ] . for our simple example",
    ", it so happens that several theoretical results can be explicitly obtained ( and used for validation of the computer - assisted approach ) .",
    "these will be discussed in sections  [ sec : theory ] and [ sec : addres ] .",
    "we will conclude with a brief summary and a discussion of the scope of the approach , its strengths and shortcomings , and of certain ( in our opinion ) important open research directions .",
    "we consider a simple , illustrative model of stochastic network evolution .",
    "let the graph at any discrete time , @xmath0 be denoted by @xmath1 .",
    "the subscript @xmath2 denotes the number of nodes in the network .",
    "the rules governing the dynamics at each iteration can be described as follows :    1 .",
    "select a pair of nodes at random and connect them together by an edge if they are not already connected to each other .",
    "2 .   with probability @xmath3 ,",
    "remove an edge chosen uniformly at random .",
    "( @xmath3 stands for _ removal probability_. )    we performed numerical simulations using these detailed , node - level ,  microscopic \" rules ( using @xmath4 ) on graphs with @xmath5 nodes and observed the evolution of several statistical graph properties over time . in these preliminary numerical experiments ,",
    "the initial conditions were either empty graphs or erds - rnyi random graphs with a specified value of edge probability , @xmath6 ( of which empty graphs are a special case , corresponding to @xmath7 ) .",
    "it is interesting to consider the evolution of graph properties starting from an ensemble of initial conditions : erds - rnyi graphs with the same edge probability @xmath6 .",
    "fig.[fig : dd ] shows the evolution of one such property of interest : the degree distribution of the ( nodes of the ) graphs , obtained statistically from a @xmath8-copy sample .",
    "( the degree of a node in a network is the number of edges connected to the node . )",
    "the figure demonstrates that the degree distribution can be thought of as a function ( ignoring , for the sake of simplicity , the discrete nature of the degree ) that appears to evolve smoothly over time .",
    "thus , the degree distribution can serve as a potential _ coarse observable _ of the system ; one must , however , carefully investigate whether it is a good candidate for coarse variable .",
    "the ( apparently ) smooth evolution of degree distribution according to the model with @xmath9 . , scaledwidth=50.0% ]     evolution of ( a ) degree distribution and ( b ) triangle distribution , for two distinct ensembles of graphs .",
    "the solid ( blue ) curves represent the case where the initial graphs are chosen to be erds - rnyi graphs with @xmath10 .",
    "the plots corresponding to this case are denoted by the labels , @xmath11 , @xmath12 and @xmath13 at times @xmath14 , @xmath15 and @xmath16 respectively .",
    "note that one time unit in the plot corresponds to @xmath5 iterations of the model .",
    "the dotted ( red ) curves represent the case where the initial graphs were created to match the degree distribution of the initial graphs of the previous erds - rnyi case through the havel - hakimi algorithm . the plots corresponding to this second case",
    "are denoted by the labels , @xmath17 , @xmath18 and @xmath19 at times @xmath14 , @xmath15 and @xmath16 respectively .",
    ", scaledwidth=63.0% ]    in particular , one must test whether it is possible to obtain a description of the long - term evolution of this observable that is _ closed _ - that would imply that an accurate reduced model of the system evolution can , at least in principle , be derived .",
    "in other words , if one had measurements of the chosen set of coarse variables ( observables ) at particular time , that information alone should , in principle , be enough to predict future states of the system ( in terms of these variables ) .",
    "we reiterate that , depending on the time scales of interest , different useful reduced models of the same system , i.e. closures at different levels of coarse description , may be possible to obtain .",
    "we then proceeded to test whether the degree distribution constitutes a good choice of coarse observable .",
    "for this purpose we constructed initial graphs with identical degree distributions but _ different higher order information _",
    "( triangle statistics , for instance ) , evolved the graphs using our model rules and compared their evolutions in time .",
    "figures [ fig : sla](a ) and [ fig : sla](b ) show the evolution of degree distributions and of clustering coefficient distributions starting from graphs with identical degree distributions , but distinct distributions of clustering coefficients .",
    "( the clustering coefficient of a node is the ratio of the number of triangles attached to the node divided by the maximum possible number , given its degree . )",
    "the solid ( blue ) curves represent the case where the initial graph is an erds - rnyi graph ( @xmath10 ) .",
    "the dotted ( red ) curves corresponds to the case where the initial graphs were created to match the degree distribution of erds - rnyi graphs with @xmath10 ; this was done by sampling @xmath5 numbers ( degrees ) from the required degree distribution and using the havel - hakimi @xcite algorithm to construct a graph with the sampled sequence of degrees .",
    "the havel - hakimi algorithm consists of three iterated steps :    1 .",
    "sort the vertices by their degrees ( @xmath20 ) in non - increasing order ; 2 .",
    "select the first vertex ( @xmath21 ) and connect it to the next @xmath21 vertices ; and 3 .   decrease the value of @xmath21 by @xmath21 ( it is now 0 ) and the value of the @xmath21 successive degrees by 1 .    as an illustration ,",
    "consider the sorted list of residual degrees of the vertices ( residual degree is the degree of a vertex minus the number of assigned edges for the same vertex at any given point in the algorithm ) @xmath22 once we connect the first vertex with the next @xmath21 vertices , the residual degree sequence is @xmath23 after sorting , the sequence becomes @xmath24 these steps are repeated until we get a sequence of zeros , implying that the graph with the desired degree sequence has been achieved . for both our test cases",
    ", we thus have the same initial degree distribution .",
    "however , since the graphs themselves are different , properties like clustering coefficients will differ between them , at least initially .",
    "the model was evolved using @xmath8 copies to obtain smooth distribution functions .",
    "the figures show that the evolution of degree distribution is similar in both cases .",
    "although the initial clustering coefficient distributions are very different for the two cases , they _ quickly _ ( within a few time steps , compared to the time scale of evolution of the degree distribution ) converge visually to the same function and subsequently coevolve .",
    "this suggests that the clustering coefficient distribution ( and possibly other higher order information ) may become quickly _ slaved _ to the evolution of the degree distribution : triangle statistics ( and so also clustering coefficients ) evolve at a much faster rate , and quickly reach a distribution that appears to depend only on the comparatively slowly evolving degree distribution .",
    "these results encourage us to attempt to find a coarse - grained reduction of the system using a discretization of the degree distribution as the coarse variable(s ) .",
    "we propose a computer - assisted coarse - graining approach the equation - free ( ef ) framework @xcite to develop and implement a reduced description of the system , using the degree distribution as the coarse observable . in this approach ,",
    "short bursts of simulations at the  microscopic \" ( individual node ) level are used to estimate information ( such as time - derivatives ) pertaining to the coarse variables .",
    "this is accomplished by defining operators that allow us to translate between coarse observables and consistent detailed , fine realizations .",
    "the transformation from coarse to fine variables is called the _ lifting _ operator ( @xmath25 ) , while the reverse is called the _ restriction _ operator .",
    "if we denote the microscopic evolution operator by @xmath26 , the macroscopic evolution operator can be defined as @xmath27    as an illustration , we implemented _ coarse projective integration _ @xcite using the equation - free approach and the degree distribution as the coarse variable . in coarse projective integration ,",
    "the system is integrated forward in time using occasional short bursts of detailed , microscopic simulations at the level of individual nodes , and the results are used to estimate time derivatives at the level of the degree distribution . in the following discussion ,",
    "time units are taken to comprise @xmath5 iterations of the model .",
    "we used erds - rnyi random graphs ( @xmath10 ) as the initial conditions and repeatedly performed the following operations :    1 .",
    "* simulation * : the model is executed initially for @xmath15 time steps ( in each time step , we perform @xmath5 iterations of the rules of the model ) .",
    "* restriction * : the graph degree distributions , @xmath28 , are observed from simulations periodically ( at intervals of @xmath29 time steps ) .",
    "we stored the degree distribution at discrete values @xmath30 , where @xmath31 .",
    "the distribution may also be discretized using a smaller number of points and interpolated at intermediate values ( we will discuss the possibility of alternative , more parsimonious representations below ) .",
    "in fact , our plots of degree distributions are smooth interpolations from this @xmath8 discrete value representation .",
    "* projection forward in time * : the time - series of the coarse variables over the final segment of the simulation ( in our case , the last @xmath32 observed discretized degree distributions ) are used to predict the new values of the coarse variables at a future time ( in our case , @xmath15 time steps down the line ) .",
    "this is done on the basis of established numerical integration schemes ( in our case , simple forward euler ) . for the simple model differential equation @xmath33",
    ", the forward euler scheme would read @xmath34 the difference in our case is that the time derivative ( @xmath35 above ) does not come form a closed formula , but is instead estimated from the recorded recent time series segments . in our computations , this time - derivative estimation and projection in time is performed as follows : given the last @xmath32 observed discretized degree distributions , the associated @xmath32 _ cumulative _ distribution functions are found , and the degrees , @xmath36 , corresponding to uniformly distributed percentile points , @xmath37 , @xmath38 , such that @xmath39 thus , the pairs of points @xmath40 constitute discrete approximations of the cumulative degree distributions .",
    "the values of these percentile degrees , @xmath36 , observed at the last @xmath32 time steps , are the variables we actually projected forward in time , estimating the time derivative of the corresponding forward euler scheme by fitting a straight line , and extrapolating it for @xmath15 further time steps . when projecting the discretized version of cumulative distributions , one should take care to retain monotonicity of the predicted ( projected ) distributions@xcite . in our simulations",
    "we did not encounter such a numerical problem , possibly because ( a ) we used several copies to get smoothened degree distributions , and ( b ) the projection times were relatively short .",
    "* lifting * : to restart the simulation , the predicted discretized distribution must be transformed into consistent graph realizations .",
    "we accomplish this by using the havel - hakimi algorithm ; we may have to sample the projected degree distribution until we draw a graphical sequence of degrees .",
    "( a _ graphical _ sequence is a sequence on non - negative integers that is realizable as a degree sequence of a graph . )",
    "checking if a sequence is graphical is performed as a part of the havel - hakimi algorithm : if the algorithm terminates successfully , the sequence is graphical ; otherwise , it is not .",
    "in the latter case another sequence is sampled until a graphical one is found .",
    "once we have these graphs , the procedure repeats : we continue simulations for @xmath15 more time steps as in stage @xmath41 , keep the last @xmath32 observations , and so on .",
    "coarse projective integration ( cpi ) with the degree distribution as the coarse variable .",
    "results from cpi are plotted as ( blue ) thin lines every @xmath29 time steps during simulations , while results from direct simulation are plotted as ( red ) thick lines every @xmath16 time steps for comparison .",
    "note that one time unit in the plot corresponds to @xmath5 iterations of the model .",
    ", scaledwidth=72.0% ]    the results of coarse - projective integration are shown as ( blue ) thin lines in fig .  [",
    "fig : cpi ] ( note that degree distributions are plotted only when we collect simulation data , and not when we jump in time ) . the results from direct integration of the full model are plotted ( red , thick lines ) every @xmath16 time steps for comparison ; the evolution of the degree distribution predicted by our coarse projective integration clearly coincides with the full detailed simulation .",
    "decay of the degree distribution close to steady state : evolution of the difference between the instantaneous degree distribution @xmath28 and the steady state degree distribution @xmath42 . ,",
    "scaledwidth=50.0% ]     the first two pca components of the ensemble of vectors @xmath43 shown in fig .",
    "[ fig : app ] are plotted as ( blue ) dotted lines .",
    "these components were found to be well - approximated by the analytical expressions @xmath44 ( first component , left ) and @xmath45 ( second component , right ) , plotted as ( red ) solid lines for reference .",
    ", scaledwidth=60.0% ]    we studied the rate of ( temporal ) convergence of discretized degree distribution as a given sample network evolution approaches steady ( stationary ) state .",
    "[ fig : app ] shows the evolution of the difference between the instantaneous degree distribution @xmath28 close to the steady state and the steady state degree distribution @xmath42 itself .",
    "we used pca to evaluate the first few principal components of the time sequence ( @xmath43 ) .",
    "the first two singular values were found to be @xmath46 and @xmath47 respectively .",
    "the vectors corresponding to these first two singular values are plotted as ( blue ) dots in fig .",
    "[ fig : appev ] .",
    "these eigenvectors represent directions along which the decay of the degree distribution , from the given randomly chosen initial condition to the steady state , is the slowest .",
    "we found that the principal components were qualitatively similar for a wide variety of choices of initial graphs .",
    "for the specific example shown in the figure , the two principal components were found to be well - approximated by the analytical expressions @xmath44 and @xmath45 , which are plotted as ( red ) solid lines in the same figure .",
    "the relevance of the qualitative form of these principal components will be discussed later in section  [ sec : addres ] .",
    "in addition to coarse projective integration , we also performed coarse fixed point computations .",
    "instead of finding the ( discretized ) stationary degree distribution ( coarse fixed point of the evolution ) through direct simulation , one can also obtain it by solving the equation @xmath48 where @xmath49 is the coarse time - stepper over @xmath50 time steps .",
    "we find the roots of @xmath51 using a damped newton - krylov gmres iteration scheme @xcite .",
    "the standard newton algorithm updates the value of @xmath28 by @xmath52 , where @xmath53 satisfying @xmath54\\delta\\mu(d ) = -f(\\mu_n(d)).$ ] since @xmath55 is not explicitly available ( but can be evaluated through the coarse time - stepper ) , its jacobian can not be obtained by analytical differentiation ; in the krylov - based approach the action of this jacobian on known vectors ( its matrix - vector products ) are estimated through numerical directional derivatives .",
    "thus , linear ( and through them , nonlinear ) equations are solved through iterative _ matrix - free _ computations ; these methods are naturally suitable for equation - free computation , where explicit jacobians are not available in closed form .",
    "there are a couple of points worth mentioning about the use of this general methodology in the case where the unknowns solved for constitute a ( discretized ) distribution function @xmath28 : ( a ) the @xmath28 vectors that arise should be non - negative and ( b ) they should integrate to @xmath41 . at every iteration of the root - finding algorithm , these two properties should be preserved .",
    "these conditions on @xmath28 can be stated as conditions on @xmath53 : @xmath56 and @xmath53 should integrate to @xmath14 .",
    "we satisfy the first condition by using a _ damped _ newton - krylov method .",
    "the correction term @xmath53 is scaled by a constant to ensure non - negativity of the result : @xmath57 for @xmath58 sufficiently small .",
    "the second condition is guaranteed by the structure of the _ krylov _ method itself .",
    "when solving @xmath54\\delta\\mu(d ) = -f(\\mu_n(d))$ ] using a krylov method , the solution @xmath59 lies in the space spanned by @xmath60\\cdot f(\\mu_n(d ) ) , ... , [ df(\\mu_n(d))]^m\\cdot f(\\mu_n(d))\\}$ ] for some finite @xmath61 . because each of the spanning vectors has integral @xmath14 , the update term @xmath59 ( and hence @xmath62 , for any constant @xmath58 ) also has integral @xmath14 .",
    "the convergence of this procedure can be shown by plotting @xmath63 at every iteration as in fig .",
    "[ fig : nr ] .",
    "convergence of the newton - gmres iterations in steady state computations : the norm of the function to be solved for via newton - gmres is plotted against the iteration number . , scaledwidth=45.0% ]    coarse projective integration and coarse - fixed point algorithms are only two illustrations of equation - free computation : even though explicit coarse - grained evolution equations are not available , the assumption that they _ in principle _ exist helps solve the coarse - grained model through appropriately designed short bursts of detailed simulation ( also through lifting and restriction ) .",
    "many additional computational tasks ( e.g. coarse continuation and bifurcation computations , coarse eigencomputations , coarse controller design and even optimization ) also become possible in this framework @xcite .",
    "our computations so far provide numerical corroboration of the possibility of coarse - graining our network evolution model : a reduced model appears to close ( accurately enough to be usefully predictive ) in terms of only the ( discretized ) degree distribution . in",
    "what follows , we will provide certain theoretical results to support our choice of coarse variables and provide some intuition about the overall coarse - graining approach .",
    "in this section we discuss theoretical results that corroborate the observed separation of time scales between the evolution of our coarse variables ( the discretized degree distribution ) and higher order information about the evolving graph statistics ( e.g. the distribution of triangles ) .",
    "such information would support our ability to usefully close a coarse - grained model at the level of degree distributions .    for this simple graph evolution model , theoretical results for the evolution of edge density and vertex degrees",
    "can be easily derived using basic notions of probability ; this was one of the reasons for choosing this model as our illustration .",
    "in general , for obtaining such results ( including results for the evolution of triangles and more ) , one makes use of the notion of dense graph limits , which will be outlined later . recall that our model graphs evolve in discrete time steps according to the rules given in section [ sec : model ] .",
    "@xmath1 denotes the graph in @xmath2 nodes at any discrete iteration , @xmath64 @xmath65 is the entry in the corresponding adjacency matrix representing the edge between nodes @xmath66 and @xmath67 .",
    "let @xmath68 represent the set of edges in the graph .",
    "we denote by @xmath69 the number of edges in the graph at a given discrete time , @xmath70 .",
    "let @xmath71 be the _ edge density _ of the graph , @xmath1 at time @xmath70 : @xmath72 note that the evolution of @xmath73 is itself a markov chain , and that it is decoupled from the other variables : @xmath74    in order to study the evolution of @xmath71 , we introduce the continuous time variable @xmath75 and let @xmath76 , so that @xmath77 corresponds to @xmath78 with @xmath79 .",
    "let @xmath80 .",
    "it follows from , , that we have @xmath81 letting our process evolve for @xmath82 steps ( i.e.  @xmath83 ) , we obtain @xmath84 since the variance of @xmath85 in the above formulas is much smaller than its expected value if @xmath86 , we can replace @xmath87 by @xmath88 in without causing significant error .",
    "this leads to the deterministic equation @xmath89 for @xmath90 , the limit @xmath91 as @xmath92 , corresponding to .",
    "thus @xmath93 and @xmath94 .",
    "coarse projective integration ( cpi ) of the edge density evolution : results obtained from cpi using edge density as the coarse variable are plotted as blue dots ( see text for details ) . the trajectory obtained from full direct simulation ( red solid line )",
    "is plotted for reference . one time unit in this plot corresponds to @xmath5 iterations of the model .",
    ", scaledwidth=45.0% ]    from , it is clear that the evolution of edge density @xmath90 is _ truly decoupled from _ the evolution of other quantities - one does not need the higher order statistics of the graph to get slaved to it over a short time period on a sort of _ slow manifold _ for the reduced model to close . as mentioned earlier , this represents one type of conditions for which reduced descriptions of the system become possible . in section  [ sec : cg ]",
    "we computationally implemented a reduced model using the entire degree distribution as the coarse observable(s ) .",
    "represents an even more reduced description that meaningfully closes in terms of edge density .",
    "similar to the degree distribution case , we implement _ coarse - projective integration _ using now only edge density as the coarse variable .",
    "the single scalar value of the edge density was observed and recorded during brief bursts of direct simulation ; the time horizons for direct simulation and subsequent projection forward in time were again chosen to be @xmath15 time steps each . the lifting operation in this case involves creating graphs with a given value of edge density .",
    "our particular implementation of this created graphs where every edge was selected to be present with a probability equal to the edge density .",
    "the results of coarse projective integration with the empty graph as initial condition , shown as ( blue ) dots in fig .",
    "[ fig : cpi1 ] , agrees visually with the evolution of edge density as observed from direct simulations , shown as a ( red ) solid line .",
    "this corroborates the closure of a reduced description in terms of edge density only .",
    "we now proceed to derive results supporting our previous observation of closure of a reduced description at the more detailed ( less coarse ) level of degree distribution .",
    "consider the time evolution of the degree of a node @xmath95 $ ] , i.e. the number of other vertices @xmath66 is connected to .",
    "the order of magnitude of the degree of @xmath66 is @xmath2 .",
    "define a normed degree , @xmath96 , of a vertex @xmath66 at scaled time @xmath50 as @xmath97 we omit the @xmath66-dependence from the @xmath96 notation for the sake of simplicity .",
    "following a derivation similar to the one used in section [ ss : edgeden ] , we obtain : @xmath98    now is of smaller order than if @xmath99 , so that we may replace @xmath96 by @xmath100 . by analogy with the argument of subsection [ ss : edgeden ]",
    "we see that @xmath101 as @xmath92 , where @xmath102 solves the ode @xmath103    substituting the explicit formula into and using the formula for the solution of inhomogenous linear odes , we obtain an explicit solution for @xmath102 : @xmath104 clearly , @xmath105 .",
    "note that the evolution of the degree of a given vertex depends both on its current degree and the current edge density of the graph as a whole . yet",
    ", if the degree distribution of a graph is given , the edge density of the graph also follows from it .",
    "this clearly supports our observation that the system closes at the level described in section  [ sec : cg ] : in terms of the degree distribution .",
    "approximate differential equations were derived so far to describe the evolution of ( expected values of ) the normed degree and of the edge density of graphs .",
    "the next step is to explore the dynamics and influence of higher order information , like triangles . in order to derive similar results for statistics of triangles , we take advantage of concepts from the theory of convergent dense graph sequences , of which a rigorous and formal introduction can be found in @xcite .",
    "let @xmath1 denote the adjacency matrices of our evolving graphs , and let the individual entry representing the existence of an edge between nodes @xmath95 $ ] and @xmath106 $ ] at time @xmath70 be denoted by @xmath65 .",
    "the notion of dense graph limits will be useful for describing the time evolution of the statistical properties of @xmath1 when @xmath99 .",
    "the limit object of a convergent graph sequence is a so - called _ graphon _",
    "@xmath107 , where @xmath108 ^ 2 \\to [ 0,1]$ ] is a measurable ( but not necessarily continuous ) function with the properties @xmath109 and @xmath110 .",
    "assume that for each @xmath111 we have a graph @xmath112 with vertex set @xmath113 $ ] .",
    "we now informally define the notion of convergence of the sequence @xmath112 to @xmath107 , i.e.  @xmath114 .",
    "one might heuristically imagine the adjacency matrix of @xmath112 as a black - and - white television screen ( a white pixel at position @xmath115 represents an edge between vertices @xmath66 and @xmath67 ) ; a convergent graph sequence becomes then a sequence of tv sets showing the same picture at higher and higher resolution .",
    "the limiting graphon @xmath107 will then be the picture seen on the `` perfect tv '' where each point",
    "@xmath116 ^ 2 $ ] is a `` pixel of infinitesimal size '' ; the local density of black / white pixels will then give us the impression of shades of grey .",
    "for the precise definition of the so - called cut - distance @xmath117 between a finite graph and a graphon , see ( * ? ? ?",
    "* ; * ? ? ?",
    "* section 4 ) .",
    "note that by ( * ? ? ?",
    "* theorem 6.13 ) every graphon @xmath107 arises as a limit for a convergent graph sequence @xmath112 .    clearly",
    ", there exist many adjacency matrices corresponding to different labelings of the nodes of the same graph , and in the definition of @xmath114 we are allowed to relabel the vertices of @xmath112 ( i.e.  to rearrange the pixels our tv set ) .",
    "correspondingly , we are allowed to relabel @xmath118 $ ] using measure - preserving transformations in order to obtain equivalent forms of the graphon @xmath107 ( see ( * ? ? ? * section 3.1 ) ) . for the purposes of the present paper , accounting for rearrangements is not required .",
    "if @xmath51 is the adjacency matrix of a small graph on @xmath119 nodes , then we define the homomorphism density @xmath120 by @xmath121 \\to [ n ] } \\ !",
    "\\ind \\left [ \\forall   i , j \\in [ k ] \\ ! : \\ !",
    "f(i , j ) \\ ! \\leq \\ !",
    "g_n(\\varphi(i ) , \\varphi(j ) ) \\right],\\end{aligned}\\ ] ] where we sum over all possible injective functions @xmath122 from @xmath123 $ ] to @xmath113 $ ] .",
    "@xmath51 is our _ test graph _ and @xmath120 the homomorphism density of @xmath51 in @xmath112 .",
    "we define the homomorphism density of @xmath51 in @xmath107 by @xmath124 denote by @xmath125 the complete graph on @xmath119 vertices ; for example , @xmath126 is an edge and @xmath127 is a triangle .",
    "erasing an edge from a triangle gives a  cherry \" , a simple graph with three vertices and two edges .",
    "now , denote by @xmath128 the edge density of @xmath112 .",
    "it follows from ( * ? ? ?",
    "* section 6.2 ) that @xmath114 implies @xmath129 : @xmath130 it is the ability to write such equations that makes working with graphons useful for our purposes .",
    "once the graphon is identified , one can approximate the density of any test graph @xmath51 in @xmath112 , @xmath86 using expressions similar to equations , , .",
    "if we consider a convergent graph sequence @xmath131 , where @xmath132 is a graph on @xmath2 vertices , and for each @xmath2 we run our markov process @xmath1 with initial state @xmath133 , then @xmath134 where @xmath135 is the solution of the following ode : @xmath136 the heuristic derivation of this formula is based on @xmath137 where @xmath138 , @xmath79 , @xmath139 , @xmath140 .",
    "note that @xmath141 .",
    "@xmath142    this results in .    by substituting the explicit formula into and using the integral formula for the solution of inhomogenous linear odes",
    ", we obtain an explicit solution for @xmath135 : @xmath143 we have @xmath144 .",
    "thus for @xmath145 the graphon becomes almost constant with value @xmath146 ; shows that the stationary state of our graph dynamics looks like an erds - rnyi graph with edge density @xmath146 .",
    "in addition , implies that an initially constant graphon will remain constant at future times .",
    "thus , the family of erds - rnyi graphs is _ an invariant set _ of the dynamics of system .",
    "note that , given the explicit formula for @xmath135 we may obtain an explicit formula for the density of triangles and cherries in @xmath1 using and .",
    "differential equations for describing the evolution of triangles and cherry densities at time @xmath50 can be found directly by differentiating those equations .",
    "recalling we have @xmath147 differentiating with respect to time and using the graphon evolution result of , we get @xmath148    an ode describing the time evolution of the density of triangles ( in terms of the edge density and the cherry density ) can be similarly derived : @xmath149      now that we have equations describing the statistics of degrees , cherries and triangles , we can find out the rates at which these quantities converge to their steady ( stationary ) states .",
    "a function @xmath150 converges to another function @xmath151 at rate @xmath152 if @xmath153 in order to establish this , it is enough to prove that @xmath154    from we can directly see that the edge densities of our graphs converge to the steady state value of @xmath146 at a rate @xmath155 .",
    "this can also be shown by using to write the following equation : @xmath156    we now show that the normed degree @xmath102 of a vertex converges to @xmath90 at a faster rate . from ,",
    "we obtain    @xmath157    thus @xmath158 in this case .",
    "note that @xmath159 also follows from the explicit formula .",
    "for example , if @xmath4 then @xmath160    from , we similarly obtain that for any @xmath161 $ ] the function @xmath135 converges to @xmath90 at a rate @xmath159 .    if the graphon @xmath162 evolves according to and @xmath163 then @xmath90 solves .",
    "if we let @xmath164 for any @xmath165 $ ] then @xmath166 also solves .",
    "thus , the set of constant graphons is invariant under the dynamics .",
    "we now show evidence that this  invariant manifold \" is actually attracting : @xmath167 this implies that @xmath168 converges to @xmath169 at rate @xmath170 . if @xmath4 then @xmath171 for this case .",
    "thus , if we evolve graphs that already possess the steady state values of their edge density , their cherries will converge to their steady state value twice as fast as the rate at which normed degrees evolve to their corresponding steady state .",
    "we now consider triangle density evolution .",
    "let @xmath172 and @xmath173 be two distinct graphons with the same values of edge and cherry densities : @xmath174 if we let @xmath175 and @xmath176 evolve according to the dynamics with initial states @xmath172 and @xmath173 , respectively , then by and we have @xmath177 for all @xmath178 .",
    "the fact that the density of edges and cherries coincide for @xmath175 and @xmath176  helps \" the densities of triangles in @xmath175 and @xmath176 to converge to each other even more rapidly : @xmath179 thus the rate of convergence of the relative triangle density is @xmath180 : for @xmath4 this works out to be @xmath181 . this result , in particular , explains why we observed an apparent slaving of the triangles , as discussed in in fig .",
    "[ fig : sla ] . the ( blue ) solid and ( red ) dotted curves there showed the evolution of two graphs with the same degree distribution .",
    "graphs with the same degree sequence also have the same number of edges and cherries , which implies . the number of triangles in these two graphs ( corresponding to the two cases in fig.[fig : sla ] ) converge to each other three times as fast as the rate at which the degree distributions ultimately evolve",
    ".     evolution of the logarithms of quantities related to ( a ) degree , ( b ) cherries and ( c ) triangles .",
    "the initial conditions for the three cases are explained in the text .",
    "snd denotes the sum of squares of the normed sequence of degrees of all the @xmath8 nodes .",
    "@xmath182 denotes the number of cherries in the graph . @xmath183 and @xmath184 denote the number of triangles in two graph evolutions starting with an erds - rnyi random graph with @xmath185 and a graph created using the havel - hakimi algorithm respectively , both with the same degree distribution .",
    "note that one time unit in this plot corresponds to @xmath186 iterations of the model .",
    "slopes of the three lines are @xmath187 , @xmath188 and @xmath189 respectively , which are in close agreement with theoretical results of @xmath190 , @xmath191 and @xmath192 respectively . ,",
    "scaledwidth=90.0% ]    we now estimate convergence rates from direct simulation results , confirming the validity of our approach and approximations _ even _ for relatively small systems : in these results @xmath5 nodes and we simulate the model using a value of @xmath193 for the parameter @xmath3 . figure [ fig : conv ] shows how information about degrees , cherries and triangles converge to their corresponding steady ( stationary ) states .",
    "note that , in all these cases , the time @xmath50 is scaled so that one time unit comprises @xmath194 iterations of the model .",
    "logarithms of quantities ( defined in the caption of the figure ) related to these statistics are plotted in the y - axis versus time . for producing the first two plots ( corresponding to degrees and cherries ) ,",
    "the initial graphs were created by first sampling from a normal degree distribution with mean @xmath15 and standard deviation of @xmath41 . for comparison ,",
    "the steady state graphs have a degree distribution whose mean and standard deviation were evaluated to be @xmath195 and @xmath196 respectively .",
    "thus , the initial graphs have the same mean degree ( and hence the same edge density ) as the steady state graphs , but differ from these steady state graphs in their actual detailed degree distribution .",
    "since the graphs are initialized with the steady state edge density , this edge density remains close to its steady state value at all times . from and , the convergence rates for the quantities in the first two figures are expected to be @xmath15 and @xmath16 respectively .",
    "this successfully matches the numerical convergence rates ( the absolute values of the slopes of evolutions ) of the terms related to degrees and cherries in the figure : they are seen to be @xmath197 and @xmath198 respectively . for the third plot ,",
    "containing information about triangles , we simulate the model _ from two different initial graphs _ with the same degree distribution _ but different number of triangles_. the first simulation is initialized with an erds - rnyi random graph with @xmath185 . for the second case , we created initial graphs using the havel - hakimi algorithm , using the degree sequence of the first case as input . since graphs with the same degree sequence also have the same number of edges and cherries , is satisfied . hence from , we expect a convergence rate of @xmath181 for the _ relative _ number of triangles _ between these two graphs _ , which successfully matches the numerically computed value of @xmath199 .",
    "thus , although the theoretical results are in principle accurate only at the limit of very large graphs , all the numerical values we computed using graphs with only @xmath8 nodes are remarkably close to the limiting theoretical values .",
    "in the previous section we approximated the evolution of the normed degree through a _ deterministic _ ode , arguing for the relative smallness of the order of magnitude of the variance of what is really a stochastic process . in order",
    "to now describe the evolution of the stochastic process @xmath96 at a finer level , we approximate it by a stochastic differential equation ( sde ) rather than an ode : @xmath200 where @xmath162 now denotes the standard brownian motion . to rationalize the choice of such an approximation , we observe that the solution of satisfies and and that the @xmath96 defined by satisfies @xmath201 , i.e.  the trajectory of @xmath96 is very close to being continuous .",
    "one can then suggest that it is appropriate ( and even natural ) to use the brownian motion in as a driving function .",
    "for rigorous results validating the sde approximation of discrete stochastic processes , see @xcite .",
    "we are interested in the fluctuations of @xmath96 around its expected value @xmath202 .",
    "using we can see that @xmath203 approximately solves the ode @xmath204 if we define @xmath205 then by and @xmath206 solves the sde @xmath207 if @xmath2 is big enough , then @xmath208 and @xmath209 , so we may use the deterministic @xmath90 and @xmath102 in the right - hand side sde of @xmath206 without causing much error .    since @xmath90 and @xmath102 are known and explicit ( c.f .  , ) , is a linear sde , i.e. an ornstein - uhlenbeck process with time - dependent drift and diffusion coefficient . from this",
    ", it follows that @xmath206 can be approximated by a gaussian process with mean @xmath14 and an explicit formula for the variance at time @xmath50 .",
    "if we let @xmath210 then @xmath211 and @xmath212 , so becomes @xmath213 an ou process .",
    "the variance of the stationary distribution of this markov process can be expressed using the drift and diffusion coefficients and it is normally distributed : @xmath214 now @xmath215 , from which we get : @xmath216    it is worth noting that similar results can be derived for the edge density by defining @xmath217 .",
    "@xmath218 solves the sde @xmath219 this is analogous to .",
    "if we let @xmath210 then @xmath220 , so becomes the following ou process : @xmath221      if we consider the sde and denote the probability density function of @xmath206 by @xmath222 , then @xmath222 solves the fokker - planck ( or kolmogorov - forward ) equation : @xmath223 a simple argument is that , when @xmath86 , the trajectories of the evolving degrees of vertices @xmath66 and @xmath67 show little correlation , since the source of randomness for the degree evolution for distinct vertices is almost disjoint : they have at most one edge in common .",
    "it then follows that observations of the time evolution of the empirical degree distribution histograms ( for the entire graph ) may be well approximated by solutions of the fokker - planck equation ( for the degree probability density of a single node ) .",
    "solving the eigenvalue - eigenfunction problem corresponding to the differential operator on the right - hand side of gives rise to the hermite differential equation , whose eigenfunctions are the hermite functions",
    ". in particular , the first three eigenvalues and eigenfunctions are @xmath224    * @xmath225 is ( a constant times ) the density function of which is also the stationary solution of .",
    "* @xmath226 represents the direction along which the decay of a generic initial distribution @xmath227 to @xmath228 is the slowest : @xmath229 * @xmath230 represents the direction along which the decay of @xmath227 to @xmath228 is the slowest , if @xmath227 is a generic _ even _ function of @xmath231 .",
    "these formulas corroborate the plots in fig .  [",
    "fig : appev ] , even though the assumptions made in order to derive the theoretical results are valid only at the limit of very large graphs .",
    "it is interesting to note that the leading principal components of the decay of the empirical degree distribution histograms to steady state , which we found to be well approximated by the functions @xmath44 and @xmath45 , can also be very well matched to the fokker - planck eigenfunctions @xmath226 and @xmath230 by shifting and rescaling coordinates .",
    "in this paper , we have demonstrated a computational framework for coarse - graining evolutionary problems involving networks .",
    "we illustrated our methodology using a specific model with simple , random evolution rules .",
    "the proposed methodology applies , in principle , to _ any _ network evolutionary model with an inherent separation of time scales between the evolutions of a few important coarse variables , and the remaining slaved variables ( observables ) . for our illustrative model",
    ", we were able to analytically derive certain theoretical results , justifying our choice of coarse variables and quantifying the observed time scale separation .",
    "we used the notion of dense graph limits to formulate some of our arguments for successful computational coarse - graining .",
    "it is conceivable that some of the theoretical tools used here might be useful in deriving insights in other dynamic network models .",
    "we emphasize , however , that for the right problems our coarse - graining procedure will work irrespective of whether one is able to analytically derive such supporting theoretical results .",
    "the generality of the approach raises other important general questions in the area of complex networks .",
    "we mentioned earlier that a critical step is the identification of suitable coarse variables .",
    "there are at least two open questions that need to be addressed in that regard :    1 .",
    "how does one find the appropriate coarse variables for a given model ? 2 .",
    "once suitable coarse variables are identified , how does one solve the problem of constructing networks with prescribed values of the chosen variables ?    the second question is more concrete , and hence , we will address it first .",
    "for certain specific properties , there exist well - known algorithms to construct graphs with specified values of those properties .",
    "for instance , for constructing networks with a given degree distribution , we repeatedly used the havel - hakimi algorithm @xcite .",
    "alternative approaches to construct graphs with a specified degree distribution include , among others , the configuration model @xcite , the chung - lu model @xcite , and a sequential importance sampling algorithm @xcite .",
    "beyond the degree distribution , there are only a few properties for which standard approaches have been established for constructing graphs with specified values of those properties .",
    "for example , algorithms that create graphs with the following properties can be found in the literature : given degree - degree distribution @xcite , given degree distribution _ and _ average clustering coefficient @xcite , and given degree distribution _ and _ degree dependent clustering @xcite .",
    "for other properties ( or combinations of properties ) , more generalized mathematical programming approaches ( e.g. @xcite ) could potentially be used to solve the network generation problem .",
    "the first question , however , requires more new ideas . for the example presented here",
    ", coarse - graining was originally based on computational model observations , and preceded the derivation of theoretical results . in general , the motivation for good coarse variables can come from standard heuristics , intuition about the model under consideration or observations of evolution of statistical quantities of the model .",
    "however , smart use of data mining tools such as diffusion maps @xcite might provide answers in a more generic sense .",
    "this would require the definition of a useful metric quantifying the distance between nearby graphs ( see e.g. @xcite ) .",
    "automatic data mining to extract good coarse variables from model observations is , in some sense , a holy grail of model reduction methods .",
    "this work was partially supported by dtra ( hdtra1 - 07 - 1 - 0005 ) and by the us doe ( de - sc0002097 ) .",
    "parts of this work are contained in the ph.d .",
    "thesis of k.a.b . ;",
    "it is a pleasure for i.g.k . to acknowledge several discussions with professor l. lovasz , and to thank him for bringing us together with b.r .",
    "j. blitzstein and p. diaconis ,  a sequential importance sampling algorithm for generating random graphs with prescribed degrees , \" technical report , 2006 .",
    "available from : http://www.people.fas.harvard.edu/~blitz/blitzsteindiaconisgraphalgorithm.pdf .",
    "l.  chen , p.  g. debenedetti , c.  w. gear and i.  g. kevrekidis , _ from molecular dynamics to coarse self - similar solutions : a simple example using equation - free computation _",
    ", j. non - newton fluid , * 120 * ( 2004 ) , 215223 ,                      i.  g. kevrekidis , c.  w. gear , j.  m. hyman , p.  g. kevrekidis , o. runborg and c. theodoropoulos , _ equation - free , coarse - grained multiscale computation : enabling microscopic simulators to perform system - level analysis _ ,",
    ", * 1 * ( 2003 ) , 715762 .        s. lafon and a. b. lee , _ diffusion maps and coarse - graining : a unified framework for dimensionality reduction , graph partitioning and data set parameterization _ , ieee t. pattern anal . , * 28 * ( 2006 ) , 13931403 .            s. j. moon , b.  nabet , n.  e. leonard , s.  a. levin and i.  g.  kevrekidis , _ heterogeneous animal group models and their group - level alignment dynamics : an equation - free approach _ , j. theor .",
    "biol . , * 246 * ( 2007 ) , 100112 .",
    "r. toivonen , l. kovanen , m. kivel , j. onnela , j. saramki and k. kaski , _ a comparative study of social network models : network evolution models and nodal attribute models _ , soc .",
    "networks , * 31 * ( 2009 ) , 240254 .        here , we discuss an alternative method of projection in time : for each of the three simulated discrete cumulative distributions ( defined by @xmath232 $ ] ) , the median degree @xmath233 ( i.e. , @xmath36 which corresponds to @xmath234 ) is evaluated and the shifted cumulative distribution @xmath235 $ ] is computed .",
    "thus , we have the new vector @xmath236 at each of the three time steps .",
    "pca ( principal component analysis ) is then used to find the first two normalized principal components , @xmath237 and @xmath238 , of this ensemble of three vectors .",
    "the coefficients of the projection of our three @xmath236 vectors along these first two principal components are then computed - we denote them by @xmath239 and @xmath240 respectively .",
    "the median degree ( @xmath233 ) and these two coefficients ( @xmath239 and @xmath240 ) are then ( independently ) projected forward ( in a coarse projective forward euler step ) through the linear extrapolation described above . from these three projected values , the predicted discretized degree distribution @xmath28 at the projected time ( @xmath15 time steps down the line ) can be constructed ."
  ],
  "abstract_text": [
    "<S> we propose and illustrate an approach to coarse - graining the dynamics of evolving networks ( networks whose connectivity changes dynamically ) . </S>",
    "<S> the approach is based on the equation - free framework : short bursts of detailed network evolution simulations are coupled with lifting and restriction operators that translate between actual network realizations and their ( appropriately chosen ) coarse observables . </S>",
    "<S> this framework is used here to accelerate temporal simulations ( through coarse projective integration ) , and to implement coarse - grained fixed point algorithms ( through matrix - free newton - krylov gmres ) . </S>",
    "<S> the approach is illustrated through a simple network evolution example , for which analytical approximations to the coarse - grained dynamics can be independently obtained , so as to validate the computational results . </S>",
    "<S> the scope and applicability of the approach , as well as the issue of selection of good coarse observables are discussed .    </S>",
    "<S> = 9999 = 9999 </S>"
  ]
}
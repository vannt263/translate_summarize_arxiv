{
  "article_text": [
    "single - radio multi - channel ( sr - mc ) wireless ad hoc networks ( wanets ) have gained significant attentions in the past few years because of their great promise of low cost , high throughput and spectral efficiency . by using multiple orthogonal channels in single radio",
    ", we can enhance spatial reuse @xcite , alleviate jamming attack @xcite , and enable dynamic access to the scarce spectrum resource @xcite .",
    "several typical multi - channel macs @xcite are proposed to fully utilize the single - radio multi - channel capability .",
    "broadcast is a fundamental operation in wireless networks for routing discovery , information dissemination , and so on .",
    "here we focus on the minimum latency broadcast scheduling operation , where broadcast latency is defined as the end - to - end latency by which all nodes in the network receive the broadcast message from source node .",
    "such concern is very important in various applications such as military communications , disaster relief and rescue operations .    for some sr - mc networks",
    "@xcite , broadcast packets can be delivered in a dedicated control channel ( dcc ) .",
    "however , the dcc can be a bottleneck , vulnerable to jamming attack @xcite , and even unavailable @xcite .",
    "therefore , in this paper , we consider sr - mc wanets without the dcc . given no dcc , the solutions to mlbs problem in single - channel wanets @xcite can not work directly , because single transmission can not reach all the neighboring nodes if the radios of neighboring nodes are tuned to different channels .",
    "in other words , it may cost multiple transmissions to deliver a message to all its neighbors .",
    "this property is similar to the _ partial broadcast property _ in duty - cycled wanets @xcite .",
    "however , parallel transmissions can still happen in different nodes within several channels at the same time ( we refer this property as _ multi - partial broadcast property _ ) , which is not allowed in duty - cycled networks .",
    "hence , solutions from duty - cycled networks can not achieve best performance , and can be further optimized . on the other hand , compared with solutions for mr - mc wanets @xcite",
    ", single - radio mode does not allow a node to transmit simultaneously in several channels , resulting in less parallel transmission opportunities .",
    "therefore , _ multi - partial broadcast property _ brings a new challenge for designing efficient , collision - free broadcast protocols .    in this paper",
    ", we investigate the minimum latency broadcast scheduling ( mlbs ) problem in sr - mc wanets .",
    "we first show such problem is np - hard , and then design efficient algorithms with performance guarantees . to solve the problem",
    ", we construct a shortest - path tree ( spt ) , and schedule the transmissions layer by layer . by utilizing the _ multi - partial broadcast property _",
    ", we can schedule the cross - layer and same - layer transmissions with polynomial - time complexity .",
    "our main contributions are summarized as follows :    * we show that a basic transmission scheduling ( bts ) algorithm with approximation ratio of 4k+12 can be obtained by modifying existing approaches properly , where @xmath1 is the number of available orthogonal channels . * we present an enhanced transmission scheduling ( ets ) algorithm by utilizing the parallel transmission opportunities , which has an improved approximation ratio of @xmath2 .",
    "the performance is evaluated through extensive simulations .",
    "the rest of the paper is organized as follows .",
    "section [ rw ] gives the related work .",
    "network model and problem statement are presented in section [ pre ] .",
    "we first propose bts in section [ bts ] , and give ets in section [ ets ] .",
    "then we validate our result by simulations in section [ eval ] .",
    "section [ con ] concludes our paper .",
    "channel assignment in sr - mc wanets is the most related works to ours . in general , there are three kinds of channel assignment approaches : _ fixed _ , _ semi - dynamic _ and _ dynamic_. in fixed channel assignment method , nodes are assigned fixed channels for permanent use , and radios do not change the operating frequency . in _ semi - dynamic _ approaches , though the assigned reception channel is fixed , nodes can still change their transmission channel to communicate with neighbors that have different reception channels . in dynamic approaches",
    ", nodes are not assigned static channels , and can switch their channel dynamically according to a pre - defined rule , e.g. , quorum sequences @xcite . moreover ,",
    "some works consider channel assignment and other problems jointly , e.g. , minimizing interference @xcite , fast data dissemination @xcite .",
    "in contrast , here we consider the minimum latency broadcast scheduling problem after channel assignment , and assume _ semi - dynamic _ strategy .",
    "collision - free minimum latency broadcast scheduling is well studied in single - channel wanets .",
    "gandhi et al .",
    "@xcite show mlbs problem in udgs is np - hard .",
    "recently , huang et al .",
    "@xcite gives an algorithm with approximation ratio of @xmath3 .",
    "for duty - cycle wanets , hong et al .",
    "@xcite shows mlbs to be np - hard too , and present an algorithm with approximation ratio @xmath4 where @xmath5 is the length of one scheduling period .",
    "our sr - mc scenario has the multi - channel dimension , which is not considered in single - channel and duty - cycled wanets .",
    "qadir et al .",
    "@xcite propose several algorithms for minimum latency broadcasting in mr - mc , multi - rate wireless meshes .",
    "however , the proposed algorithms depend on the multi - radio capability ( i.e. , multi - connection links ) , and all heuristic algorithms are evaluated by simulations without theoretical analysis . to the best of our knowledge , @xcite is the only paper to consider minimal latency broadcast directly in multi - channel cognitive radio networks , which is very close to us .",
    "the key difference is that we allow channel switch while @xcite assumes not .",
    "moreover , @xcite shows the closeness of their solution to the optimal solution through simulations .",
    "instead , we give two algorithms with performance guarantees .",
    "the sr - mc wanets can be modeled as a unit disk graph ( udg ) @xmath6 , where @xmath7 is the set of nodes ( @xmath8 ) , and @xmath9 is the set of links .",
    "an edge @xmath10 iff . @xmath11 and @xmath12 is within each other s communication range .",
    "we also assume that the time is slotted .",
    "each time slot is equal length , and long enough for one packet transmission and reception .",
    "moreover , the slot boundary is almost aligned , which can be achieved by local synchronization protocols .",
    "we further assume that reception is error - free if no collision happens , which is quite accurate because control packets are often well protected by physical layer , e.g. , minimum data rate 6 mbps in ieee 802.11 a / g standard .",
    "both synchronization and error - free assumptions are widely adopted by previous works @xcite .",
    "the sr - mc wanets have a total of @xmath1 orthogonal channels denoted by @xmath13 , and each node is equipped with only one radio",
    ". the radio interface can be set on any channel to transmit or listen , but not simultaneously .",
    "the reception channel is chosen randomly from @xmath14 during network initialization , which can be defined using a channel assignment function @xmath15 . for @xmath16 , @xmath17 where @xmath18 .",
    "neighboring nodes may have different reception channels . in order to enable connectivity , we assume that transmission nodes can switch their channels to set up connections . note that in @xmath19 , the edge definition depends on topology instead of channel since we allow channel switch .",
    "we also assume that the neighbors reception channels are known beforehand , which is often achieved during neighbor discovery .      here",
    "we consider the single - source broadcast problem .",
    "suppose the source node is @xmath20 , and the broadcast task completes when all the other nodes receive messages sent from @xmath20 .",
    "assume @xmath20 starts the broadcast operation at time - slot @xmath21 .",
    "then we formulate the mlbs problem ( decision version ) in sr - mc wanets as follows ( mlbs - srmc ) : _ given a udg @xmath22 with channel assignment function @xmath15 , and positive integer @xmath23 , is there an assignment of time slots and transmission channels to nodes @xmath16 , such that the broadcast scheduling is collision - free and the schedule length is no more than @xmath23 ? _",
    "the mlbs - srmc problem is np - hard .",
    "we prove this theorem using restriction technique @xcite .",
    "if we restrict function @xmath15 to map to one single channel , our problem is exactly the mlbs problem in single - channel wanets , which is np - hard @xcite .",
    "hence mlbs - srmc problem is np - hard .",
    "our objective can be interpreted as finding a broadcast schedule @xmath24 , where @xmath25 , @xmath26 , is the set of transmitting instances at time slot @xmath27 , i.e. @xmath28 . at time slot @xmath21 , only @xmath20 can transmit .",
    "after @xmath23 time slots , all nodes in @xmath7 receive messages from @xmath20 .",
    "our problem can be converted to minimize @xmath23 .",
    "note that if we set the cost of each edge one unit , we can construct a shortest - path tree ( spt ) rooted @xmath20 .",
    "then the lower bound for broadcast is the depth of spt denoted by @xmath29 , i.e. , @xmath30 .",
    "let @xmath31 be an undirected udg .",
    "the subgraph of @xmath32 induced by a subset @xmath33 of @xmath7 is denoted by @xmath34 $ ] .",
    "the @xmath1-th power of @xmath32 , denoted by @xmath35 , is a graph over @xmath7 in which there is an edge between two nodes @xmath11 and @xmath12 if and only if their distance is @xmath32 is at most @xmath1 .",
    "the minimum degree of g is denoted by @xmath36 .",
    "the inductility of @xmath32 is defined by @xmath37)$ ] .",
    "@xmath38 for udg @xcite .",
    "it s well - known that the node coloring of @xmath32 induced by a smallest - degree - last ordering uses at most @xmath39 colors @xcite .",
    "an independent set ( is ) of a graph @xmath32 is a set of vertices in @xmath32 that no two of which are adjacent .",
    "a maximal independent set of @xmath32 is not a subset of any other @xmath40 of @xmath32 .",
    "each node in @xmath7 can be adjacent to at most five nodes in any is of @xmath41@xcite , and can have at most nineteen two - hop neighbors in any is of @xmath19 @xcite .",
    "8.8cmc|p7 cm symbol & definition + @xmath1 & number of available orthogonal channels in @xmath19 + @xmath42 & neighboring set of nodes @xmath11 in @xmath19 + @xmath43 & shortest - path tree rooted @xmath20 in @xmath19 + @xmath29 & depth of @xmath43 + @xmath44 & nodes of layer @xmath27 in @xmath43 + @xmath45 & nodes using channel @xmath46 in @xmath43 + @xmath47 & nodes of layer @xmath27 using channel @xmath46 in @xmath43 , @xmath48 + @xmath49 & maximal independent set ( dominators ) of @xmath47 + @xmath50 & set of parent nodes of set @xmath51 in @xmath43 + @xmath52 & parent nodes ( connectors ) of @xmath49 which are selected greedy + @xmath53 & broadcast tree constructed by algorithm [ broadcast ] , including nodes @xmath7 , edges @xmath9 and cover function @xmath14 +",
    "in this section , we give an algorithm basic transmission scheduling ( bts ) for minimum latency broadcast scheduling problem in udgs , which is a simple extension to existing approaches @xcite .",
    "the main notations used in this paper are summarized in table  [ terminology ] .",
    "let @xmath44 be nodes of layer @xmath27 in @xmath43 , @xmath54 , @xmath45 be nodes using channel @xmath46 in @xmath32 , @xmath55 , and @xmath47 be nodes in layer @xmath27 using channel @xmath46 ( @xmath56 ) .",
    "then , bts can find a maximal independent set @xmath49 for each @xmath47 by adding eligible nodes sequentially .",
    "let @xmath50 be the set of parent nodes of @xmath51 in @xmath43 .",
    "note that nodes in @xmath57 are not guaranteed to be in reception channel @xmath46 .",
    "the key idea of bts is to schedule collision - free transmissions layer by layer , and channel by channel .",
    "take layer @xmath27 for example , bts consists of two steps :    1 .",
    "@xmath58 sequentially for @xmath59 ; 2 .",
    "@xmath60 simultaneously for @xmath61 ;    we call @xmath62 as layer-@xmath27 _ dominators _ , and @xmath63 as layer-@xmath27",
    "_ connectors_. for step 1 ) , we schedule transmissions channel by channel to avoid _ same - node _ collision , which means a node can be a parent of nodes in @xmath64 and nodes in @xmath65 ( @xmath66 ) . then we use ditance2-coloring of @xmath57 to achieve collision - free scheduling to cover @xmath67 .",
    "distance-2 coloring method is widely used to schedule collision - free transmission to avoid _ cross - node _ collision , which means , if two nodes within two hops transmit at the same slot , there is a collision in common neighbors . for step 2 ) , we also schedule collision - free transmissions in different channels simultaneously using distance2-coloring of @xmath49 .",
    "the details are shown in algorithm [ a1 ] .",
    "it is easy to verify that the time complexity of bts is @xmath68 .",
    "[ a1 ]    @xmath69 spt tree in @xmath32 rooted @xmath20 ; @xmath70 depth of @xmath43 @xmath71 nodes at level @xmath27 in @xmath43 , @xmath72 @xmath73 and @xmath74 , @xmath75 @xmath76 return @xmath23 , @xmath77      then we give a theorem that proves the correctness of bts and shows the upper bound of the latency given by bts .",
    "[ bts ] algorithm bts is correct , and provides a collision - free broadcast scheduling with latency at most @xmath78 .    for algorithm bts , the transmissions are scheduled layer by layer . the transmissions in layer @xmath79 do not start until layer @xmath27 ends .",
    "we consider layer @xmath27 ( @xmath80 ) .",
    "assume nodes in @xmath44 are not covered , and nodes in @xmath81 are covered .",
    "for step 1 ) , we color @xmath57 in layer @xmath82 front - to - end by distance2-coloring , it is collision - free and can cover @xmath49 .",
    "furthermore , transmissions in different channel are sequential",
    ". thus we can avoid _ same - node _ collisions .",
    "after that , nodes in @xmath49 are covered . for step 2 ) , because @xmath49 is the maximal independent set of @xmath47 , which is a dominating set of @xmath47 , the smallest - degree - last distance2-coloring of @xmath49 guarantees that collision - free transmissions of @xmath49 can cover @xmath47 .",
    "also , the parallel transmissions in different channel are collision - free . then all nodes in @xmath44 are covered .",
    "thus algorithm bts is correct and collision - free .",
    "we analyze the broadcast latency for layer @xmath27 .",
    "the cross - layer transmissions from layer @xmath82 to @xmath27 are channel by channel .",
    "hence we can consider a single channel @xmath46 , and then multiple @xmath1 .",
    "note that @xmath49 is still an independent set in udg .",
    "hence a node @xmath11 in @xmath57 can have at most four neighbors in @xmath49 , because @xmath11 has a parent in layer @xmath83 in @xmath43 , which is independent of nodes in @xmath49 .",
    "then the distance2-coloring of @xmath57 uses at most four colors .",
    "otherwise , if a node @xmath84 has the five color , it means @xmath11 shares five neighbors with nodes in @xmath85 , i.e. , connecting five neighbors in @xmath67 , which contradicts .",
    "hence four time slots are enough for single - channel cross - layer transmission . for transmissions from @xmath67 to @xmath47 , because @xmath49 is a maximal independent set , the smallest - degree - last ordering distance2-coloring of @xmath49 uses at most 12 colors @xcite . since the same layer transmission can be in parallel , we do not need to multiple @xmath1 .",
    "hence , twelve time slots are enough .",
    "given that our analysis applies from layer @xmath21 to layer @xmath29 , the overall broadcast latency is at most @xmath78 .",
    "in other words , bts algorithm has approximation ratio of @xmath0 .",
    "in this section , we present an enhanced algorithm ets , which has approximation ratio of @xmath2 .",
    "we notice that bts uses sequential channel transmissions in cross - layer , which is too conservative .",
    "also , the strict constraint that the next layer can not start transmissions before last layer ends can not utilize the natural no - collision of multi - channel transmissions .",
    "based on these two observations , we propose ets .",
    "ets is a broadcast tree based algorithm .",
    "if @xmath11 is the parent of @xmath86 , @xmath11 is responsible for transmitting packets to @xmath86 collision - free .",
    "the formal description of constructing broadcast tree is shown in algorithm [ broadcast ] .",
    "as stated in bts , we have _ connectors _ to connect _",
    "dominators_. ets differs from bts mainly in the selection of _",
    "bts simply selects @xmath57 as _ connectors _ , and schedules transmissions in separate channel to avoid _ same - node _ collision .",
    "ets selects _",
    "connectors _ greedy , i.e. , selecting parent nodes to cover maximal uncovered _ connectors_. note that here we select nodes from @xmath44 .",
    "all selected nodes to cover @xmath87 are recorded in @xmath88 . for _ dominators _ @xmath49 to cover @xmath47 , it is similar .",
    "[ broadcast ]    @xmath89 ; @xmath90 return @xmath91    the broadcast scheduling is shown in algorithm [ scheduling ] . though we still find available transmission slot channel by channel and layer by layer , we break the layered transmission constraint . in other words ,",
    "layer @xmath79 can start before layer @xmath27 ends only if nodes in layer @xmath79 do not bring collisions to already scheduling .",
    "let step 1 ) be @xmath58 , and step 2 ) be @xmath92 note that for step 1 ) and 2 ) transmissions , we have @xmath52 and @xmath49 recorded respectively .",
    "hence , we first select tx node @xmath11 from @xmath52 ( @xmath49 ) sequentially , and then select the minimum time @xmath93 larger than reception time to satisfy no - collision constraints : ( 1 ) @xmath11 does not bring collisions to already scheduled transmissions in common neighbors ; ( 2 ) @xmath11 can not transmit at the same slot that it has been assigned to other channels .",
    "the collision slots are recorded in @xmath94 .",
    "after scheduling all nodes in @xmath7 , we can find the maximal transmission time @xmath23 . from algorithm [ broadcast ] and [ scheduling ]",
    ", we can find that time complexity of ets is also @xmath68 .",
    "@xmath95 @xmath96 for @xmath97 , @xmath75 return @xmath23 , @xmath77      we first give a lemma about the correctness of ets .",
    "[ correctness ] algorithm ets is correct and provides a collision - free broadcast scheduling .",
    "ets uses no - collision rule to select transmission slot , so it must be collision - free .",
    "we only need to prove ets provides a broadcast scheduling .",
    "assume all nodes in @xmath98 ( @xmath99 ) are covered now .",
    "we show that after transmission of @xmath88 and @xmath87 ( @xmath75 ) , all nodes in @xmath100 are covered . for any node @xmath101",
    ", @xmath11 must belong to a particular set @xmath102 . if @xmath103 , it is covered by @xmath88 . if @xmath104 , it must be covered by @xmath87 . because nodes in @xmath88 transmit before nodes in @xmath87 , nodes in @xmath100 are fully covered .",
    "the proof is complete .",
    "let @xmath105 be the time that all tx nodes in @xmath44 finish their transmissions , @xmath72 .",
    "we can give following lemmas .",
    "[ dominators ] let @xmath106 . for any @xmath107 , @xmath108 where @xmath109 , @xmath75 .",
    "note that @xmath11 must be in some @xmath49 , since we select @xmath49 by channel @xmath46 .",
    "in other words , @xmath110 for @xmath66 . given any channel @xmath46 , for any node @xmath109 , @xmath111 , because @xmath112 . note that all interfering nodes of @xmath11 are also in @xmath49 .",
    "let @xmath113 denote the set of nodes consisting of an independent set within two hops from any node @xmath11 .",
    "@xmath114 for udgs @xcite .",
    "in other words , for any @xmath109 , the maximal number of interfering nodes is 19 , because @xmath49 is an independent set of @xmath32 .",
    "hence , @xmath115 . because our argument is for any channel , this completes the proof of lemma [ dominators ] .",
    "[ connectors ] let @xmath116 . for any @xmath117 , @xmath118 where @xmath119 , @xmath75 .    for ets ,",
    "@xmath11 is dominated by some node in @xmath120 . due to lemma [ dominators ] , @xmath121 .",
    "let @xmath94 be the set of interfering slots .",
    "@xmath122 must be less than the number of interfering nodes . for @xmath11 ,",
    "the collision includes _ cross - node _",
    "collision @xmath123 and _ same - node _ collision @xmath124 .",
    "assume @xmath119 .",
    "@xmath11 is responsible for transmitting packets to @xmath87 .",
    "hence , @xmath125 .",
    "because @xmath11 can connect at most five neighbors in independent set of udgs , and @xmath11 has a parent in layer @xmath82 in @xmath43 , @xmath126 .",
    "it is trivial that @xmath127 since we only have @xmath1 channels .",
    "though u can be in @xmath128 ( @xmath129 ) , this constraint holds for @xmath130 . because @xmath119 for @xmath131 selects transmission slots greedy",
    ", we only need to consider the maximal constraint for all channels .",
    "therefore , @xmath132 . the proof is accomplished .    combining lemma [ correctness ] and [ connectors ]",
    ", we can have a theorem .",
    "[ ets ] algorithm ets is correct , and provides a collision - free broadcast scheduling with approximation ratio of @xmath133 .",
    "for source @xmath20 , it needs at most @xmath1 time slot , i.e. @xmath134 .",
    "nodes in @xmath135 transmit , and then nodes in @xmath136 transmit ( @xmath137 ) .",
    "finally , nodes in @xmath138 transmit , and at most 20 time slots are enough .",
    "hence , the overall latency is at most @xmath139 .",
    "thus , the approximation ratio is @xmath2 .",
    "in this section , we run simulations to study the performance of ets .",
    "since there is no directly applicable algorithms in sr - mc wanets , we use bts as benchmark .",
    "the metric is broadcast latency . to show the optimal result",
    ", we also plot the lower bound of broadcast latency using the depth of @xmath43 .",
    "we consider the impact of number of nodes @xmath140 and number of orthogonal channels @xmath1 . to increase the depth of constructed @xmath43 , we vary the network area with respect to @xmath140 . for example , when @xmath141 , the area size is @xmath142 @xmath143 .",
    "all nodes are randomly deployed in corresponding areas , and their reception channels are randomly choosen from @xmath14 .",
    "we run the simulation 10 times , and show the average results . for each time",
    ", we generate a new topology and channel assignment .",
    "first we evaluate the impact of @xmath140 , which ranges from @xmath144 to @xmath145 with step @xmath144 .",
    "simulation results with different @xmath146 are shown in figure [ fig1 ] .",
    "it is obvious that ets performs better than bts .",
    "more importantly , the performance of ets is close to the lower bound , which demonstrates the gain of parallel multi - channel transmissions .",
    "furthermore , when @xmath1 becomes larger , the broadcast latency also raises due to the more nodes in each channel set , but the linear tendency keeps .",
    "note that , for approximation ratio , the performance of both algorithms are much smaller than theoretical results . it can be explained that our theoretical analysis considers the worst case , but probably we are not in the worst case .",
    "then we study the impact of @xmath1 , which is set from 5 to 30 with step 5 .",
    "simulation results with @xmath147 are shown in figure [ fig2 ] .",
    "the performance of ets is still better than bts , and close to the lower bound due to the same reason mentioned above .",
    "note that the scale of y - axis in figure 2(a ) is smaller . here",
    ", the depth of @xmath43 keeps almost constant since @xmath140 does not change ( i.e. , network size does not change ) .",
    "however , for bts , the broadcast latency grows sub - linearly with respect to @xmath1 .",
    "intuitively , with larger @xmath1 and same @xmath140 , though the number of sequential transmissions raise linearly with respect to @xmath1 , the transmissions in each channel reduce since nodes in each channel are less . for figure [ fig1 ] with larger @xmath140 and constant @xmath1 , transmissions in single - channel increase , but",
    "the number of sequential channel transmissions is the same .",
    "it can explain the linear and sub - linear phenomenon in figure [ fig1 ] and [ fig2 ] .",
    "figure [ var ] shows the variance of approximation ratio for different deployments .",
    "we can find that the variance is small .",
    "here we take @xmath148 , @xmath149 for example .",
    "the results for other parameters are similar .",
    "as we can predicate , different topology and different reception channels make the result almost stable .    for bts ,",
    "the broadcast latency increases almost linearly with @xmath140 , since nodes in each layer of @xmath43 increase almost linearly corresponding to @xmath140 , and cross - layer transmissions are scheduled sequentially .    note that as @xmath1 increases , the broadcast latency and approximation ratio of bts also increases accordingly , while ets keeps almost constant .",
    "it is easy to understand because we use sequential channel transmissions to avoid _ same - node _ collision in cross - layer .",
    "the cost is higher when @xmath1 is larger .",
    "both results show that ets outperforms bts in different scenarios .    in our simulations",
    ", we compare our bts and ets algorithms with a modified existing greedy algorithm ( ga ) proposed by @xcite .",
    "the greedy algorithm first constructs a bfs tree .",
    "after that , ga runs in layers and selects a tx instance ( including node and channel ) @xmath150 which covers the maximum number of uncovered nodes in each layer .",
    "ga also calculates the rank of each node . for a node ,",
    "a high rank means it is responsible for relaying packets further .",
    "in this paper , we consider the minimum latency broadcast scheduling problem in sr - mc wanets .",
    "we first identify the challenge and opportunity in such networks . to solve the np - hard problem",
    ", we give an algorithm bts with approximation ratio of @xmath151 , which is modified from classical algorithms .",
    "then we propose an algorithm ets with approximation ratio of and @xmath2 .",
    "both have time complexity @xmath68 .",
    "the simulation results show ets improves the performance over bts significantly , and come close to the lower bound . in the future ,",
    "we want to complete our works by considering distributed algorithms , and finding algorithms for broadcast scheduling under _ dynamic _ channel assignment strategy .",
    "the future work includes :    * distributed algorithms and performance bound . * channel - hopping based algorithms .    1    g. zhou , c. huang , t. yan , t. he , j.a .",
    "stankovic , and t.f .",
    "abdelzaher , `` mmsn : multi - frequency media access control for wireless sensor networks '' , in proc .",
    "infocom , 2006 .",
    "w. xu , w. trappe , y. zhang , and t. wood , `` the feasibility of launching and detecting jamming attacks in wireless networks '' , in proc .",
    "mobihoc , 2005 , pp.46 - 57 .",
    "akyildiz , w. lee , and k.r .",
    "chowdhury , `` crahns : cognitive radio ad hoc networks '' , presented at ad hoc networks , 2009 , pp.810 - 836 .",
    "e. aryafar , o. gurewitz , and e.w .",
    "knightly , `` distance-1 constrained channel assignment in single radio wireless mesh networks '' , in proc .",
    "infocom , 2008 , pp.762 - 770 .",
    "r. maheshwari , h. gupta , and s.r .",
    "das , `` multichannel mac protocols for wireless networks '' , in proc .",
    "secon , 2006 , pp.393 - 401 .",
    "k. bian , j.m .",
    "park , and r. chen , `` a quorum - based framework for establishing control channels in dynamic spectrum access networks '' , in proc .",
    "mobicom , 2009 , pp.25 - 36 .",
    "r. vedantham , s. kakumanu , s. lakshmanan , and r. sivakumar .",
    "`` component based channel assignment in single radio , multi - channel ad hoc networks '' , in proc .",
    "mobicom , 2006 , pp.378 - 389 .",
    "d. starobinski and w. xiao , `` asymptotically optimal data dissemination in multichannel wireless sensor networks : single radios suffice '' , presented at ieee / acm trans .",
    "netw . , 2010 , pp.695 - 707 .",
    "r. gandhi , a. mishra , and s. parthasarathy , `` minimizing broadcast latency and redundancy in ad hoc networks '' , presented at ieee / acm trans .",
    "netw . , 2008 , pp.840 - 851 .",
    "huang , p. wan , x. jia , h. du , and w. shang , `` minimum - latency broadcast scheduling in wireless ad hoc networks '' , in proc .",
    "infocom , 2007 , pp.733 - 739 .",
    "r. gandhi , y. kim , s. lee , j. ryu , and p. wan , `` approximation algorithms for data broadcast in wireless networks '' , accepted by ieee trans . on mobile computing .",
    "j. hong , j. cao , w. li , s. lu , and d. chen , `` sleeping schedule - aware minimum latency broadcast in wireless ad hoc networks '' , in proc .",
    "icc , 2009 , pp.1 - 5 .",
    "b. tang , b. ye , j. hong , k. you , and s. lu , `` distributed low redundancy broadcast for uncoordinated duty - cycled wanets '' , in proc .",
    "globecom , 2011 , pp.1 - 5 .",
    "j. qadir , c.t .",
    "chou , a. misra , and j.g .",
    "lim , `` minimum latency broadcasting in multiradio , multichannel , multirate wireless meshes '' , presented at ieee trans .",
    "comput . , 2009 , pp.1510 - 1523 .",
    "arachchige , s. venkatesan , r. chandrasekaran , and n. mittal , `` minimal time broadcasting in cognitive radio networks '' , in proc .",
    "icdcn , 2011 , pp.364 - 375 .",
    "d. w. matula and l. l. beck , `` smallest - last ordering and clustering and graph coloring algorithms '' , j. acm , vol .",
    "417 - 427 , 1983 .",
    "garey and d.s .",
    "johnson , `` computers and intractability : a guide to the theory of np - completeness '' , 1979 .",
    "this heuristic algorithm is proposed by @xcite , which has no theoretical analysis . here , we list it for comparison .",
    "note that for our scenario , we not only decide which node to transmit , but also select which channel .",
    "we name it tx instance @xmath152 which means node @xmath11 transmits in channel @xmath46 .",
    "the algorithm can be summarized as follows :    1 .",
    "construct a bfs tree layered @xmath153 to @xmath154 ; 2 .   from layer @xmath154 to @xmath153",
    ", calculate the rank of each node as @xmath155 , where @xmath12 is the nodes covered by @xmath11 , i.e. , @xmath156 ; 3 .   from layer @xmath153 to @xmath157 , construct the broadcast tree by greedy selecting tx instances covering the maximum number of nodes .",
    "for example , for layer @xmath158 and @xmath159 , select a tx instance < @xmath160 > to cover the maximum number of uncovered nodes , where @xmath11 is in layer @xmath158 , and @xmath161 ; 4 .   from layer @xmath153 to @xmath157 , schedule",
    "the selected tx instances without collision , i.e. , at each time slot , schedule the tx instances s = @xmath162<@xmath163>@xmath164 , where @xmath165 are covered , has maximal rank and <",
    "@xmath163 > does not induce collision .",
    "@xmath22 , @xmath15 , @xmath20 , and @xmath14 @xmath23 , @xmath51 @xmath166 bfs tree in @xmath32 with root @xmath20 @xmath167 the depth of @xmath168 @xmath71 set of all nodes at level @xmath27 in @xmath168 , @xmath169 @xmath170 @xmath171 @xmath172 + //",
    "construct broadcast tree @xmath173",
    "@xmath174 @xmath175 @xmath176 node in @xmath177 with maximum @xmath178 @xmath179 @xmath180 @xmath181 @xmath179 @xmath182 @xmath183 @xmath179 @xmath184 @xmath185 @xmath186 @xmath187 @xmath188 + //",
    "scheduling for broadcast @xmath76 @xmath189 @xmath190 @xmath191 @xmath192 @xmath193 @xmath194 and @xmath195 and @xmath196 @xmath197 @xmath198 @xmath199 @xmath200 @xmath201 @xmath193 @xmath194 and @xmath195 and @xmath196    @xmath22 , @xmath15 , @xmath20 , and @xmath14 @xmath23 , @xmath51 @xmath166 bfs tree in @xmath32 with root @xmath20 @xmath167 the depth of @xmath168 @xmath202 + //",
    "construct broadcast tree @xmath203 set of all nodes at level @xmath27 in @xmath168 , @xmath169 @xmath204 set of all nodes at level @xmath27 using channel @xmath46 in @xmath168 , @xmath169 , @xmath75 @xmath205 @xmath206 @xmath207 @xmath208 @xmath209 + //",
    "calculate transmission time @xmath210 @xmath211 @xmath212 @xmath213 @xmath210 @xmath211 @xmath212 + //",
    "scheduling for broadcast @xmath76 @xmath214 @xmath215 @xmath216 @xmath215    @xmath22 , @xmath15 , @xmath20 , and @xmath14 @xmath23 , @xmath51 @xmath166 bfs tree in @xmath32 with root @xmath20 @xmath167 the depth of @xmath168 @xmath71 set of all nodes at level @xmath27 in @xmath168 , @xmath169 @xmath170 ; @xmath171 + //",
    "construct broadcast tree @xmath173 @xmath174 ; @xmath175 @xmath176 node @xmath11 in @xmath177 with maximum @xmath217 @xmath218 @xmath183 @xmath179 @xmath184 @xmath186 @xmath219<@xmath220>@xmath164 @xmath188 + //",
    "scheduling for broadcast @xmath76 ; @xmath189 @xmath190 @xmath191 @xmath193 @xmath221 | < @xmath222 > @xmath223 and @xmath196 @xmath198 @xmath199 @xmath201 where @xmath224 @xmath193 @xmath221 | < @xmath222 > @xmath223 and and @xmath196 + // function : check collisions @xmath225<@xmath220>@xmath226 @xmath227 @xmath228 +      //",
    "construct broadcast tree @xmath204 set of all nodes at level @xmath27 using channel @xmath46 in @xmath168 , @xmath169 , @xmath75 @xmath206 @xmath207 @xmath209 + //",
    "scheduling for broadcast @xmath76 @xmath210 @xmath230 @xmath212"
  ],
  "abstract_text": [
    "<S> we study the minimum latency broadcast scheduling ( mlbs ) problem in single - radio multi - channel ( sr - mc ) wireless ad - hoc networks ( wanets ) , which are modeled by unit disk graphs . </S>",
    "<S> nodes with this capability have their fixed reception channels , but can switch their transmission channels to communicate with their neighbors . </S>",
    "<S> the single - radio and multi - channel model prevents existing algorithms for single - channel networks achieving good performance . </S>",
    "<S> first , the common assumption that one transmission reaches all the neighboring nodes does not hold naturally . </S>",
    "<S> second , the multi - channel dimension provides new opportunities to schedule the broadcast transmissions in parallel . </S>",
    "<S> we show mlbs problem in sr - mc wanets is np - hard , and present a benchmark algorithm : basic transmission scheduling ( bts ) , which has approximation ratio of @xmath0 . here </S>",
    "<S> @xmath1 is the number of orthogonal channels in sr - mc wanets . </S>",
    "<S> then we propose an enhanced transmission scheduling ( ets ) algorithm , improving the approximation ratio to @xmath2 . </S>",
    "<S> simulation results show that ets achieves better performance over bts , and the performance of ets approaches the lower bound . </S>"
  ]
}
{
  "article_text": [
    "morphological computation ( mc ) , in the context of embodied ( artificial ) intelligence , refers to processes which are conducted by the body ( and environment ) that otherwise would have to be performed by the brain @xcite .",
    "a nice example of mc is given by wootton  @xcite ( see p.  188 ) , who describes how `` active muscular forces can not entirely control the wing shape in flight .",
    "they can only interact dynamically with the aerodynamic and inertial forces that the wings experience and with the wing s own elasticity ; the instantaneous results of these interactions are _ essentially _ determined by the architecture of the wing itself [  ] ''    mc is relevant in the study of biological and robotic systems . in robotics , a quantification of mc can be used e.g.  as part of a reward function in a reinforcement learning setting to encourage the outsourcing of computation to the morphology , thereby enabling complex behaviors that result from comparably simple controllers .",
    "the relationship of embodiment and controller complexity has been recently studied in  @xcite .",
    "mc measures can also be used to evaluate the robot s morphology during the design process . for biological systems ,",
    "energy efficiency is important and an evolutionary advantage .",
    "exploiting the embodiment can lead to more energy efficient behaviors , and hence , mc may be a driving force in evolution .    in biological systems ,",
    "movements are typically generated by muscles .",
    "several simulation studies have shown that the muscles typical non - linear contraction dynamics can be exploited in movement generation with very simple control strategies  @xcite .",
    "muscles improve movement stability in comparison to torque driven models  @xcite or simplified linearized muscle models ( for an overview see  @xcite ) .",
    "muscles also reduce the influence of the controller on the actual kinematics ( they can act as a low - pass filter ) .",
    "this means that the hopping kinematics of the system is more pre - determined with non - linear muscle characteristics than with simplified linear muscle characteristics  @xcite . and",
    "finally , in hopping movements , muscles reduce the control effort ( amount of information required to control the movement ) by a factor of approximately 20 in comparison to a dc - motor driven movement  @xcite .",
    "in view of these results we expect that mc plays an important role in the control of muscle driven movement . to study this quantitatively , a suitable measure for mc is required .",
    "there are several approaches to formalize mc  @xcite . in our previous work",
    "we have focused on an agent - centric perspective of measuring mc  @xcite and we have applied an information decomposition of the sensorimotor loop to measure and better understand mc  @xcite . both publications used a binary toy world model to evaluate the measures . with this toy model , it was possible to show that these measures capture the conceptual idea of mc and , in consequence , that they are candidates to measure mc in more complex and more realistic systems .",
    "the goal of this publication is to evaluate two measures of mc on biologically realistic hopping models . with this , we want to demonstrate their applicability in non - trivial , realistic scenarios . based on our previous findings ( see above ) , we hypothesize that mc is higher in hopping movements driven by a non - linear muscle compared to those driven by a simplified linear muscle or a dc - motor , for the following reason .",
    "our experiments show that a state - dependent analysis of mc for the different models leads to insights , which can not be gained from the averaged measures alone .",
    "furthermore , we provide detailed instructions , including matlab^^ code , on how to apply these measures to robotic systems and to computer simulations . with this , we hope to provide a tool for the evaluation of mc in a large variety of applications .",
    "the quantifications of mc require a formal representation of the sensorimotor loop ( see fig .  [",
    "fig : sml ] ) , which is introduced in the next section as far as it is required to understand the remainder of this work . for further information ,",
    "the reader is referred to  @xcite .",
    "the conceptual idea of the sensorimotor loop is similar to the basic control loop systematics , which is the basis of robotics and also of computer simulations of human movement . in our understanding ,",
    "a cognitive system consists of a brain or controller , which sends signals to the system s actuators , thereby affecting the system s environment .",
    "we prefer to capture the body and environment in a single random variable named _",
    "world_. this is consistent with other concepts of agent - environment distinctions .",
    "an example for such a distinction can be found in the context of reinforcement learning , where the environment ( world ) is everything that can not be changed arbitrarily by the agent @xcite .",
    "a more thorough discussion of the brain - body - environment distinction can be found in @xcite and a more recent discussion can be found in @xcite .",
    "a brief example of a world , based on a robot simulation , is given below .",
    "the loop is closed as the system acquires information about its internal state ( e.g.  current pose ) and its world through its sensors .    for simplicity",
    ", we only discuss the sensorimotor loop for reactive systems .",
    "this is plausible , because behaviors which exploit the embodiment ( e.g.  walking , swimming , flying ) are typically reactive .",
    "this leaves us with three ( stochastic ) processes @xmath0 , @xmath1 , and @xmath2 , @xmath3 that constitute the sensorimotor loop ( see fig .  [",
    "fig : sml ] ) , which take values @xmath4 , @xmath5 , and @xmath6 , in the sensor , actuator , and world state spaces ( their respective domains will be clear from the context ) . the directed edges ( see fig .",
    "[ fig : sml ] ) reflect causal dependencies between these random variables .",
    "we consider time to be discrete , i.e. , @xmath7 and are interested in what happens in a single time step .",
    "therefore , we use the following notation . random variables without any time index refer to some fixed time @xmath8 and primed variables to time @xmath9 , i.e. , the two variables @xmath10 , @xmath11 refer to @xmath0 and @xmath12 .    ,",
    "scaledwidth=45.0% ]    starting with the initial distribution over world states , denoted by @xmath13 , the sensorimotor loop for reactive systems is given by three conditional probability distributions , @xmath14 , @xmath15 , @xmath16 , also referred to as kernels .",
    "the sensor kernel , which determines how the agent perceives the world , is denoted by @xmath17 , the agent s controller or policy is denoted by @xmath18 , and finally , the world dynamics kernel is denoted by @xmath19 .    to understand the function of the world dynamics kernel",
    "@xmath19 it is useful to think of a robotic simulation . in this scenario ,",
    "the world state @xmath20 is the state of the simulator at a given time step , which includes the pose of all objects , their velocities , applied forces , etc .",
    "the actuator state @xmath21 is the value that the controller passes on to the physics engine prior to the next physics update .",
    "hence , the world dynamics kernel @xmath19 is closely related to the forward model that is known in the context of robotics and biomechanics .",
    "based on this notation , we can now formulate quantifications of mc in the next section .",
    "in the introduction , we stated that mc relates to the computation that the body ( and environment ) performs that otherwise would have to be conducted by the controller ( or brain ) .",
    "this means that we want to measure the extent to which the system s behavior is the result of the world dynamics ( i.e. , the body s internal dynamics and it s interaction with its world ) and how much of the behavior is determined by the policy @xmath16 ( see fig .",
    "[ fig : sml ] ) .    in our previous publication",
    "@xcite we have defined two concepts to quantify mc , from which the two measures below are taken and derived .      the first quantification , that is used in this work , was introduced in @xcite .",
    "the idea behind it can be summarized in the following way .",
    "the world dynamics kernel @xmath19 captures the influence of the actuator signal @xmath21 and the previous world state @xmath20 on the next world state @xmath23 .",
    "a complete lack of mc would mean that the behavior of the system is entirely determined by the system s controller , and hence , by the actuator state @xmath21 . in this case , the world dynamics kernel reduces to @xmath24 .",
    "every difference from this assumption means that the previous world state @xmath20 had an influence , and hence , information about @xmath20 changes the distribution over the next world states @xmath23 .",
    "the discrepancy of these two distributions can be measured with the average of the kullback - leibler divergence @xmath25 , which is also known as the conditional mutual information @xmath26 .",
    "this distance is formally given by ( see also alg .",
    "[ alg : mc_w ] in app .",
    "[ app : algorithms ] ) @xmath27      the second quantification follows concept one of @xcite .",
    "the assumption that underlies this concept is that , for a given behavior , mc decreases with an increasing effect of the action @xmath21 on the next world state @xmath23 .",
    "the corresponding measure @xmath29 can not be used in systems with deterministic policy , because for these systems @xmath30 ( see app .",
    "[ app : zero ] ) . therefore , for this publication , we require an adaptation that operates on world states and is applicable to deterministic systems .    the new measure compares the complexity of the behavior with the complexity of the controller .",
    "the complexity of the behavior can be measured by the mutual information of consecutive world states , @xmath31 , and the complexity of the controller can be measured by the mutual information of sensor and actuator states , @xmath32 , for the following reason .",
    "the mutual information of two random variables can also be written as difference of entropies : @xmath33 which , applied to our setting , means that the mutual information @xmath31 is high , if we have a high entropy over world states @xmath23 ( first term ) that are highly predicable ( second term ) .",
    "summarized , this means that the mutual information @xmath31 is high if the system shows a diverse but non - random behavior .",
    "obviously , this is what we would like to see in an embodied system .",
    "on the other hand , a system with high mc should produce a complex behavior based on a controller with low complexity .",
    "hence , we want to reduce the mutual information @xmath32 , because this either means that the policy has a low diversity in its output ( low entropy over actuator states @xmath34 ) or that there is only a very low correlation between sensor states @xmath10 and actuator states @xmath21 ( high conditional entropy @xmath35 ) .",
    "therefore , we define the second measure as the difference of these two terms , which is ( see also alg .",
    "[ alg : mc_mi ] in sec .",
    "[ app : algorithms ] ) @xmath36 for deterministic systems , as those studied in this work , the two measures are closely related . in particular",
    ", it holds that @xmath37 ( see app .",
    "[ app : relation ] ) . the inequality @xmath38 may not be satisfied always , because discretization can introduce stochasticity .    note that in the case of a passive observer , i.e. , a system that observes the world but in which there is no causal dependency between the action and the next world state ( i.e. , missing connection between @xmath21 and @xmath23 in fig .",
    "[ fig : sml ] ) , the controller complexity @xmath32 in eq .",
    "( 2 ) will reduce the amount of mc measured by @xmath28 , although the actuator state does not influence the world dynamics .",
    "this might be perceived as a potential shortcoming . in the context discussed in this paper ,",
    "e.g.  data recorded from biological or robotic systems , we think that this will not be an issue .",
    "the next section introduces the hopping models on which the two measures are evaluated .",
    "in a reduced model , hopping motions can be described by a one - dimensional differential equation  @xcite : @xmath39 where the point mass @xmath40{kg}$ ] represents the total mass of the hopper which is accelerated by the gravitational force ( @xmath41{m / s^{2}}$ ] ) in negative @xmath42-direction .",
    "an opposing leg force @xmath43 in positive @xmath42-direction can act only during ground contact ( @xmath44{m}$ ] ) .",
    "hopping motions are then characterized by alternating flight and stance phases . for this manuscript , we investigated three different models for the leg force .",
    "all models have in common , that the leg force depends on a control signal @xmath45 and the system state @xmath46 , @xmath47 : @xmath48 , meaning , that the force modulation partially depends on the controller output @xmath45 and partially on the dynamic characteristics , or material properties of the actuator .",
    "the control parameters of all three models were adjusted to generate the same periodic hopping height of @xmath49{m}$ ] .",
    "all models were implemented in matlab^^ simulink^^ ( ver2014b ) and solved with ode45 dormand - prince solver with absolute and relative tolerances of @xmath50 .",
    "the models were solved and integrated in time for @xmath51{s}$ ] and model output was generated at @xmath52{khz}$ ] sampling frequency .     and the actuator control signal is the neural muscle stimulation @xmath53 . in case of the dc - motor model , the sensor signals are the position and velocity of the mass , and the actuator control signal is the motor armature voltage @xmath54 . ]",
    "a biological muscle generates its active force in muscle fibers whose contraction dynamics are well studied .",
    "it was found that the contraction dynamics are qualitatively and quantitatively ( with some normalizations ) very similar across muscles of all sizes and across many species . in the musfib model ,",
    "the leg force is modeled to incorporate the active muscle fibers contraction dynamics .",
    "the model has been motivated and described in detail elsewhere @xcite . in a nutshell ,",
    "the material properties of the muscle fibers are characterized by two terms modulating the leg force @xmath55 the first term @xmath56 represents the muscle activity .",
    "the activity depends on the neural stimulation of the muscle @xmath57 and is governed by biochemical processes modeled as a first - order ode called activation dynamics @xmath58 with the time constant @xmath59{ms}$ ] . the second term in eq .",
    "( 4 ) @xmath60 considers the force - length and force - velocity relation of biological muscle fibers .",
    "it is a function of the system state , i.e. , the muscle length @xmath61 and muscle contraction velocity @xmath62 during ground contact @xmath63 and constant @xmath64 @xmath65 during flight @xmath66 :    @xmath67 & f_{\\max}\\cdot\\exp\\left(-c\\left\\lvert      \\frac{l_{m}-l_{\\text{opt}}}{l_{\\text{opt}}w}\\right\\lvert ^{3}\\right)\\\\ & \\times\\begin{cases } \\frac{\\dot{l}_{m,\\text{max}}+\\dot{l}_{m}}{\\dot{l}_{m,\\text{max}}-k\\dot{l}_{m } } & \\dot{l}_{m}>0\\\\ n+(n-1)\\frac{\\dot{l}_{m,\\text{max}}-\\dot{l}_{m}}{-7.56k\\dot{l}_{m}-\\dot{l}_{m,\\text{max } } } & \\dot{l}_{m}\\leq0 \\end{cases}\\,\\,\\,.\\end{aligned}\\eqno{(6)}\\ ] ] here we use a maximum isometric muscle force @xmath68{kn}$ ] , an optimal muscle length @xmath69{m}$ ] , force - length parameters @xmath70{m}$ ] and @xmath71 , and force - velocity parameters @xmath72{ms^{-1}}$ ] , @xmath73 , and @xmath74  @xcite .    in this model ,",
    "periodic hopping is generated with a controller representing a mono - synaptic force - feedback .",
    "the neural muscle stimulation @xmath75 is based on the time delayed ( @xmath76{ms}$ ] ) muscle fiber force @xmath77 .",
    "the feedback gain is @xmath78 and the stimulation at touch down @xmath79 .",
    "this model neither considers leg geometry nor tendon elasticity and is therefore the simplest hopping model with muscle - fiber - like contraction dynamics .",
    "the model output was the world state @xmath80 , the sensor state @xmath81 , and the actuator control command @xmath82 .",
    "for this model , these are the values that the random variables @xmath20 , @xmath10 , and @xmath21 take at each time step .      this model differs from the model musfib only in the representation of the force - length - velocity relation , i.e. , @xmath83 ( see eq .  ( 6 ) ) .",
    "more precisely , the force - length relation is neglected and the force - velocity relation is approximated linearly @xmath84 with @xmath85{m / s}$ ] .",
    "feedback gain @xmath86 and stimulation at touch down @xmath87 were chosen to achieve the same hopping height as the musfib model .",
    "an approach to mimic biological movement in a technical system ( robot ) is to track recorded kinematic trajectories with electric motors and a pd - control approach .",
    "the dcmot model implements this approach ( slightly modified from @xcite ) .",
    "the leg force generated by the dc - motor was modeled as @xmath88 where @xmath89{nm / a}$ ] is the motor constant , @xmath90 the current through the motor windings , @xmath91 the ratio of an ideal gear translating the rotational torque @xmath92 and movement @xmath93 of the motor to the translational leg force and movement required for hopping .",
    "the electrical characteristics of the motor can be modeled as    @xmath94 where @xmath95{v}\\le u_{dc}\\le\\unit[48]{v}$ ] is the armature voltage ( control signal ) , @xmath96{\\omega}$ ] the resistance , and @xmath97{mh}$ ] the inductance of the motor windings .",
    "the motor parameters were taken from a commercially available dc - motor commonly used in robotics applications ( maxon ec - max 40 , nominal torque @xmath98{nm}$ ] ) .",
    "as this relatively small motor would not be able to lift the same mass , the body mass was adapted to guarantee comparable accelerations @xmath99{kg}.\\label{eq : m_dc } \\eqno{(11)}\\ ] ]    the recorded kinematic trajectory @xmath100 and @xmath101 during ground contact was taken from the periodic hopping trajectory of the musfib model .",
    "this trajectory was enforced with a pd - controller @xmath102 with feedback gains @xmath103{v / m}$ ] and @xmath104{vs / m}$ ] .",
    "this model is the simplest implementation of negative feedback control that allows to enforce a desired hopping trajectory on a technical system .",
    "the model output was the world state @xmath80 , the sensor state @xmath105 , and the actuator control command @xmath106 .",
    "this section discusses the experiments that were conducted with the hopping models and the preprocessing of the data .",
    "algorithms for the calculations are provided in the appendix ( sec .",
    "[ app : algorithms ] ) and implemented matlab^^ code can be downloaded from http://github.com/kzahedi/mc/ ( commit c332c18 , 30 .  nov .",
    "a ` c++ ` implementation is available at http://github.com / kzahedi / entropy/.    at this stage , the measures operate on discrete state spaces ( see eqs .",
    "( 1)(3 ) and algs .",
    "[ alg : mc_w]-[alg : mc_mi ] ) .",
    "hence , the data was discretised in the following way . to ensure the comparability of the results , the domain ( range of values ) for each variable ( e.g.  the position @xmath42 ) was calculated over all hopping models . then",
    ", the data of each variable was discretised into 300 values ( bins ) .",
    "the algorithm for the discretisation is described in alg .",
    "different binning resolutions were evaluated and the most stable results were found for more than 100 bins . finding the optimal binning resolution is a problem of itself and beyond the scope of this work . in practice , however , a reasonable binning can be found by increasing the binning until further increase has little influence on the outcome of the measures .",
    "the possible range of actuator values are different for the motor and muscle models . for the muscle models , the values are in the unit interval , i.e. , @xmath107 $ ] , whereas the values for the motor can have higher values ( see above ) .",
    "hence , to ensure comparability , we normalized the actions of the motor to the unit interval before they were discretized .",
    "the hopping models are deterministic , which means that only a few hopping cycles are necessary to estimate the required probability distributions",
    ". to ensure comparability of the results , we parameterized the hopping models to achieve the same hopping height .",
    "tab .  [ tab : results_on_data ] shows the value of the two mc measures for the three hopping models .",
    ".numerical results on the hopping models for @xmath22 ( see eq .",
    "( 1 ) ) and @xmath28 ( see eq .",
    "( 2 ) ) . [ cols=\"<,^,^,^\",options=\"header \" , ]     compared to the musfib model ,",
    "the two other models result in significantly lower measurement of mc ( @xmath108 less ) .",
    "this result complements previous findings showing that the minimum information required to generate hopping is reduced by the material properties of the non - linear muscle fibers compared to the dc - motor driven model  @xcite .",
    "this also confirms previous findings that the non - linear contraction dynamics reduces the influence of the controller on the actual hopping kinematics in comparison to a linearized muscle model @xcite . to better understand the differences of the models",
    ", we plotted the state - dependent mc ( see alg .",
    "[ alg : sd_mc_w ] ) .",
    "[ fig : cmp ] shows the values of @xmath109 for each state of the models during two hopping cycles .",
    "we chose to discuss @xmath109 only , because the plots of @xmath109 and @xmath28 are very similar , and hence , a discussion of the state - dependent @xmath28 will not provide any additional insights .",
    "the plots for all models and the entire data are shown in fig .",
    "[ fig : information_dynamics ] .",
    "the orange line shows the state - dependent mc for the linear muscle model ( muslin ) , and finally , the blue line shows the values for the non - linear muscle model ( musfib ) .",
    "the green line shows the state - dependent mc for the motor model ( dcmot ) . in the figure",
    ", the lower lines show the position @xmath42 of the center of mass over time .",
    "the dcmot model is parameterized to follow the trajectory of the musfib model ( see eq .",
    "( 12 ) ) , which is why the blue and green position plots coincide . the original data is shown in fig .",
    "[ fig : information_dynamics ]",
    ". there are basically three phases , which need to be distinguished ( indicated by the vertical lines ) .",
    "first , the flight phase , during which the hopper does not touch the ground ( position plots are above the red line ) , second , the deceleration phase , which occurs after landing ( position is below the red line but still declining ) , and finally , the acceleration phase , in which the position is below the red line but increasing .",
    "the first observation is that mc is equal for all models during most of the flight phase ( position above the red line ) and that it seems to be proportional to the velocity of the systems . during flight , the behavior of the system",
    "is governed only by the interaction of the body ( mass , velocity ) and the environment ( gravity ) and not by the actuator models .",
    "this explains why the values coincide for the three models .    for all models",
    ", mc drops as soon as the systems touch the ground .",
    "dcmot and muslin reach their highest values only during the flight phase , which can be expected at least from a motor model that is not designed to exploit mc .",
    "the graphs also reveal that the muslin model shows slightly higher mc around mid - stance phase , compared to the dcmot model . for the non - linear muscle model ,",
    "the behavior is different . shortly after touching the ground ,",
    "the system shows a strong decline of mc , which is followed by a strong incline during the deceleration with the muscle .",
    "contrary to the other two models , the non - linear muscle model musfib shows the highest values when the muscle is contracted the most ( until mid - stance ) .",
    "this is an interesting result , as it shows that the non - linear muscle is capable of showing more mc while the muscle is operating , compared to the flight phase , in which the behavior is only determined by the interaction of the body and environment .",
    "this work presented two different quantifications of mc including algorithms and matlab^^ code to use them .",
    "we demonstrated their applicability in experiments with non - trivial , biologically realistic hopping models and discussed the importance of a state - based analysis of morphological computation .",
    "the first quantification , @xmath22 , measures mc as the conditional mutual information of the world and actuator states .",
    "morphological computation is the additional information that the previous world state @xmath20 provides about the next world state @xmath23 , given that the current actuator state @xmath21 is known .",
    "the second quantification , @xmath28 , compares the behavior and controller complexity to determine the amount of mc .",
    "the numerical results of the two quantifications confirm our hypothesis that the musfib model should show significantly higher mc , compared to the two other models ( muslin , dcmot ) .",
    "we also showed that a state - dependent analysis of mc leads to additional insights . here",
    "we see that the non - linear muscle model is capable of showing significantly more morphological computation in the stance phase , compared to the flight phase , during which the behavior is only determined by the interaction of the body and environment .",
    "this shows that morphological computation is not only behavior- , but also state - dependent .",
    "future work will include the analysis of additional behaviors , such as walking and running , for which we expect , based on the findings of this work , to see a more morphological computation of the non - linear muscle model musfib .",
    "this section presents the algorithms in pseudo - code .",
    "the matlab^^ code that was used for this publication can be downloaded from http://github.com/kzahedi/mc/ ( commit c332c18 , 30 .",
    "a ` c++ ` implementation is available at http://github.com / kzahedi / entropy/.    note that we use a compressed notion in alg .  25 , in which @xmath110 and @xmath111 .",
    "in the case where @xmath19 , @xmath17 , and @xmath18 are deterministic , the conditional entropy @xmath113 vanishes .",
    "it follows that @xmath114",
    "from the following equality @xmath115 we can derive @xmath116 for deterministic systems the conditional entropies @xmath117 .",
    "we show this exemplarily for @xmath35 .",
    "if the action @xmath21 is a function of the sensor state @xmath10 , then @xmath118 is either one or zero , because there is exactly one actuator value for every sensor state .",
    "hence , @xmath119 .",
    "the equality @xmath120 is not hold in tab .",
    "[ tab : results_on_data ] , because the discretization introduces stochasticity , and hence , the conditional entropies are only approximately zero , i.e. , @xmath121",
    "this work was partly funded by the dfg priority program autonomous learning ( dfg - spp 1527 ) .",
    "the dc - motor model is based on a simulink model provided by roger aarenstrup ( http://in.mathworks.com/matlabcentral/fileexchange/11829-dc-motor-model ) .            k.  ghazi - zahedi and j.  rauh . quantifying morphological computation based on an information decomposition of the sensorimotor loop . in _ proceedings of the 13th european conference on artificial life ( ecal 2015 )",
    ", pages 7077 , july 2015 .",
    "d.  f.  b. haeufle , s.  grimmer , k .-",
    "kalveram , and a.  seyfarth .",
    "integration of intrinsic muscle properties , feed - forward and feedback signals for generating and stabilizing hopping .",
    ", 9(72):14581469 , 07 2012 .",
    "a.  s. klyubin , d.  polani , and c.  l. nehaniv .",
    "organization of the information flow in the perception - action loop of evolved agents . in _",
    "evolvable hardware , 2004 . proceedings .",
    "2004 nasa / dod conference on _ , pages 177180 , 2004 ."
  ],
  "abstract_text": [
    "<S> in the context of embodied artificial intelligence , morphological computation refers to processes which are conducted by the body ( and environment ) that otherwise would have to be performed by the brain . </S>",
    "<S> exploiting environmental and morphological properties is an important feature of embodied systems . </S>",
    "<S> the main reason is that it allows to significantly reduce the controller complexity . </S>",
    "<S> an important aspect of morphological computation is that it can not be assigned to an embodied system per se , but that it is , as we show , behavior- and state - dependent . in this work , </S>",
    "<S> we evaluate two different measures of morphological computation that can be applied in robotic systems and in computer simulations of biological movement . as an example </S>",
    "<S> , these measures were evaluated on muscle and dc - motor driven hopping models . </S>",
    "<S> we show that a state - dependent analysis of the hopping behaviors provides additional insights that can not be gained from the averaged measures alone . </S>",
    "<S> this work includes algorithms and computer code for the measures . </S>"
  ]
}
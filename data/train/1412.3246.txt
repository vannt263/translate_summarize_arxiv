{
  "article_text": [
    "the aim of this paper is to show that a lot of complexity theory can be formalized in low fragments of arithmetic like cook s theory @xmath0 .",
    "our motivation is to demonstrate the power of bounded arithmetic as a counterpart to the unprovability results we already have or want to obtain , and generally to find out how complexity theory behaves in different worlds of bounded arithmetic .",
    "concerning the unprovability results , pich @xcite proves that under certain hardness assumptions the theory @xmath2 , the true universal first - order theory in the language containing names for all uniform @xmath3 algorithms , can not prove polynomial circuit lower bounds on sat formalized naturally by a sentence @xmath4 .",
    "in fact , that result generalizes basically to any theory weaker than @xmath0 in terms of provably total functions .",
    "the question whether @xmath0 proves @xmath4 remains open even if we allow standard complexity - theoretic hardness assumptions , see the discussion in section [ lll ] .",
    "generally , it would be interesting to arrive at a complexity - theoretic statement , not necessarily circuit lower bounds , whose provability in @xmath0 unexpectedly contradicts some other natural hypothesis . to understand better what are plausible candidates for such statements it might help us to investigate the theorems which are provable in low fragments of arithmetic .    in the present paper",
    "we will describe the formalization of just a few results ; however , this should suffice to illustrate the power of the respective theories .",
    "actually , many classical theorems from complexity theory have been already formalized in bounded arithmetic . in the table closing this section we list some representative examples .",
    "it should be understood that any of the formalized results is accompanied by a lot of other theorems that are formalizable in a similar fashion .",
    "in fact , some of the formalizations are so evident that they are used without a proof as a folklore .",
    "this is the case of cook - levin s theorem whose formalization we nevertheless describe for expository reasons in section [ pv ] as it gives us the opportunity to introduce some notions . for more details concerning the list",
    "see section [ pre ] .",
    "the main original contribution of this paper is a formalization of the exponential pcp theorem in the theory @xmath5 and the pcp theorem in the theory @xmath0 .",
    "perhaps the most challenging part here was to formalize properties of the @xmath1-graphs needed to derive the pcp theorem .",
    "these are usually obtained using algebraic techniques involving norms over real vector spaces coming all the way down to the fundamental theorem of algebra etc . in order to avoid formalization of this machinery ( and it is not clear whether this could be done ) we employ certain approximations to derive slightly weaker properties of the @xmath1-graphs in the theory @xmath0 which , however , suffice to derive the pcp theorem in @xmath0 .    as the exponential pcp theorem follows trivially from the pcp theorem ,",
    "the exponential version is actually also provable in @xmath0 .",
    "the @xmath0 proof of the pcp theorem uses ( among many other tools ) the exponential pcp theorem but scaled down to constant size instances so that to prove the scaled down version we need to reason only about sets of constant size . on the other hand , in @xmath5 we perform the standard proof of the exponential pcp theorem directly by formalizing a reasoning with p - time definable sets .",
    "hence , the @xmath5 proof shows different techniques to be available in low fragments of arithmetic .",
    "the paper is organized as follows . in section [ lll ]",
    "we describe general properties of our formalizations and define theories of bounded arithmetic in which these formalizations take place . in section [ pre ]",
    "we discuss theorems that have been already formalized in bounded arithmetic as well as the new ones obtained in this paper .",
    "section [ pv ] illustrates a formalization of the cook - levin theorem in @xmath0 . in section [ epcp ]",
    "we prove the exponential pcp theorem in @xmath5 .",
    "section [ rest ] formalizes pseudorandom constructions in @xmath0 which are then used in section [ npcp ] to formalize the pcp theorem in @xmath0 .",
    "[ cols=\"<,<,^\",options=\"header \" , ]     the theories are listed from the weakest to the strongest one .",
    "the usual language of arithmetic contains well known symbols : @xmath6 . to encode reasoning about computations",
    "it is helpful to consider also symbols @xmath7 and @xmath8 with the intended meaning  the whole part of @xmath9 \" ,  the length of the binary representation of @xmath10 \" , and @xmath11 .",
    "the language @xmath12 containing all these symbols was used by buss @xcite to define the theory @xmath13 ( see below ) .",
    "all theories we will work with , a subset of theories collectively known as bounded arithmetic , contain @xmath12 as a part of their language .",
    "the defining properties of symbols from @xmath12 are captured by a set of basic axioms denoted as basic which we will not spell out , cf .",
    "krajek @xcite .",
    "a quantifier is sharply bounded if it has the form @xmath14 or @xmath15 where @xmath16 is a term not containing @xmath10 .",
    "a quantifier is bounded if it is existential bounded : @xmath17 for @xmath10 not occuring in @xmath16 , or universal bounded : @xmath18 for @xmath10 not occuring in @xmath16 . by @xmath19 ( = @xmath20 )",
    "we denote the set of all formulas in the language @xmath12 with all quantifiers sharply bounded . for @xmath21 ,",
    "the sets @xmath22 and @xmath23 are the smallest sets satisfying    @xmath24 @xmath25    @xmath26 @xmath22 and @xmath23 are closed under @xmath27 and sharply bounded quantification    @xmath28 @xmath22 is closed under bounded existential quantification    @xmath29 @xmath23 is closed under bounded universal quantification    @xmath30 the negation of a @xmath22-formula is @xmath23    @xmath31 the negation of a @xmath23-formula is @xmath22 .    in words ,",
    "the complexity of bounded formulas in language @xmath12 ( formulas with all quantifiers bounded ) is defined by counting the number of alternations of bounded quantifiers , ignoring the sharply bounded ones . for @xmath32 , @xmath33 denotes @xmath34 .",
    "an example of a bounded arithmetic theory is the theory @xmath13 introduced by buss @xcite .",
    "the language of @xmath13 is @xmath12 and its axioms consist of basic and @xmath35-pind scheme which is the following kind of polynomial induction for @xmath35-formulas @xmath36 : @xmath37 buss @xcite showed that whenever @xmath13 proves a formula of the form @xmath38 for @xmath35-formula @xmath36 , then there is a p - time ( i.e. polynomial time ) function @xmath39 such that @xmath40 holds for all @xmath10 .",
    "theories of bounded arithmetic generally can not prove the totality of functions with superpolynomial growth of length .",
    "this follows from a theorem of parikh @xcite .",
    "in particular , @xmath41 is unprovable .",
    "consequently , if we want to prove in bounded arithmetic a statement of the form  for all @xmath42 , there is an @xmath43-size circuit ( encoded by a binary string of some number , i.e. @xmath44 ) s.t .",
    "... \" we need to quantify the exponent @xmath45 outside of the respective theory .",
    "that is , in such cases instead of proving @xmath46 we prove @xmath47    informally speaking , only the  feasible part \" of the theorem is provable inside the theory .    in our formalizations numbers",
    "encode binary strings in a natural way .",
    "we then follow the convention that inputs of circuits , algorithms or functions are represented by binary strings .",
    "for example , when talking about @xmath43-size circuit lower bounds the number of inputs of @xmath43-size circuits is the length of some number , i.e @xmath48 .",
    "however , it does not necessarily follow that @xmath49 is smaller , say , @xmath50 . to indicate sizes of objects inside our theories we employ the shorthand notation @xmath51 and @xmath52 .    on the contrary , for example razborov @xcite considered ( second - order ) formalizations of circuit lower bounds ( corresponding in first - order logic to the formalization ) where p - size ( i.e. polynomial size ) circuits with @xmath49 inputs were required to satisfy @xmath53 .",
    "thus , in his formalization , truth tables of functions computed by p - size circuits are encoded by binary strings .",
    "the respective theory is much stronger with respect to such formalization ; it is as if it could manipulate with exponentially big objects .",
    "formalizing known theorems is then easier and proving unprovability results is on the other hand formally much harder .",
    "similarly , in propositional proof complexity there are candidate hard tautologies for strong proof systems like extended frege which express circuit lower bounds on sat ( and other functions ) , see formulas @xmath54 in razborov @xcite or @xmath55 in krajek @xcite . using a standard translation into first - order logic they again correspond to the formalization where truth tables of sat are encoded by binary strings . therefore , by the known relation between propositional proof systems and bounded arithmetics , the hardness of such formulas for extended frege would imply a conditional unprovability of superpolynomial circuit lower bounds on sat in @xmath0 formalized in such a way that the theory @xmath0 would be exponentially stronger than it is with respect to the formalization of circuit lower bounds @xmath4 considered in pich @xcite .",
    "the formalization @xmath4 follows the convention of our current paper .    however , the fact advocated here , that a lot of complexity theory is formalizable in theories like @xmath0 , suggests that it might be also hard to obtain the unprovability of @xmath4 in @xmath0 .",
    "actually , the unprovability of @xmath4 in @xmath0 would imply that there is no provable witnessing of errors of p - time algorithms claiming to solve sat which is itself ( interesting and ) a reason to expect hardness of such unprovability result , see pich @xcite .",
    "@xmath0 introduced in krajek - pudlk - takeuti @xcite is a conservative extension of an equational theory @xmath56 introduced by cook @xcite .",
    "the language of @xmath56 and @xmath0 consists of symbols for all p - time algorithms given by cobham s characterization of p - time functions , cf .",
    "in particular , it contains @xmath12 . by a slight abuse of the notation",
    "we denote the language of @xmath0 and @xmath56 also @xmath56 .",
    "a @xmath56-formula is a first - order formula in the language @xmath56 .",
    "the hierarchy of @xmath57- and @xmath58-formulas is defined similarly to @xmath59 and @xmath60 ( in first - order logic with equality ) but in the language of @xmath56 .",
    "in @xmath56 we can define p - time concepts and prove their basic properties .",
    "more precisely , every p - time function can be straightforwardly defined as a @xmath56-function .",
    "therefore , in the theory @xmath0 , which is a universal first - order theory , we can reason about p - time concepts .",
    "we can interpret provability in @xmath0 as capturing the idea of what can be demonstrated when our reasoning is restricted to manipulation of p - time objects .",
    "however , strictly speaking , this description would also fit the theory @xmath13 which in addition uses np - concepts in induction .",
    "anyway , it is a natural question which properties of p - time concepts are provable using only such p - time reasoning .",
    "it can be shown that @xmath0 proves @xmath61-induction , cf .",
    "krajek @xcite .",
    "that is , for any @xmath61-formula @xmath36 , @xmath0 proves @xmath62    in @xmath56 we can speak about formulas , circuits , turing machines and other similar notions which can be encoded using finite sequences of numbers .",
    "these are encodable in @xmath56 in a well - behaved way so that basic operations on sequences like concatenation are definable by terms , i.e. by functions in the language . for more details",
    "see krajek @xcite where the function @xmath63 which extracts the @xmath64th element from a sequence @xmath65 is shown to be @xmath66-definable in @xmath13 but the definition is given by a p - time predicate so it can be written as an open @xmath56-formula .",
    "all @xmath56-functions have well - behaved @xmath66-definitions in @xmath13 .",
    "hence , @xmath13 can be seen as an extension of @xmath0 , cf .",
    "buss @xcite .",
    "moreover , buss s witnessing theorem @xcite implies that @xmath13 is @xmath67-conservative over @xmath0 .",
    "this means that when proving a @xmath67 statement in @xmath0 we can actually use @xmath13 .",
    "in particular , we will use an induction scheme denoted as @xmath68-llind which is provable in @xmath13 and says that for any @xmath69-formula @xmath36 the following holds , @xmath70    in proposition [ cst ] , we will also use an induction scheme which we denote @xmath68-lpind .",
    "it is a weaker form of @xmath68-pind , cf .",
    "krajek @xcite , so it is derivable in @xmath13 .",
    "@xmath68-lpind says that for any @xmath69-formula @xmath36 the following implication holds : @xmath71\\rightarrow a(a^{||b||})\\ ] ]      to reason about probabilistic p - time concepts we will use an extension of @xmath0 in which jebek @xcite developed a well - behaved notion of probability based on an approximate counting .    in this section , we recall a part of his work which we will use to formalize the exponential pcp theorem .",
    "the dual ( or surjective ) pigeonhole principle for @xmath39 , written as @xmath72 , is the universal closure of the formula @xmath73 for a set of functions @xmath74 , @xmath75 .    the theory @xmath5 is defined as @xmath76 where @xmath56 stands for the set of @xmath56-functions .",
    "when a number @xmath77 is used in a context which asks for a set it is assumed to represent the integer interval @xmath78 , e.g. @xmath79 means that all elements of @xmath80 are less than @xmath77 . if @xmath79 , @xmath81 , then @xmath82 and @xmath83 .",
    "we will often work with rational numbers which are assumed to be represented by pairs of integers in the natural way . by",
    "a definable set we mean a collection of numbers satisfying some formula , possibly with parameters .",
    "let @xmath84 , @xmath85 be a circuit and @xmath86 definable sets.we write @xmath87 if @xmath88 $ ] , i.e. @xmath89 . the following definitions are taken from jebek @xcite .",
    "let @xmath90 be definable sets , and @xmath91 .",
    "we say that the size of @xmath80 is approximately less than the size of @xmath92 with error @xmath93 , written as @xmath94 , if there exists a circuit @xmath95 , and @xmath96 such that @xmath97 the sets @xmath80 and @xmath92 have approximately the same size with error @xmath93 , written as @xmath98 , if @xmath94 and @xmath99 .",
    "a number @xmath100 identified with the interval @xmath101 , so @xmath102 means that the size of @xmath80 is at most @xmath100 with error @xmath93 .",
    "let @xmath103 be a definable set and @xmath104 .",
    "we define @xmath105\\preceq_{\\epsilon}p\\ \\ \\",
    "x\\cap t\\preceq_{\\epsilon } pt\\ ] ] and similarly for @xmath106 .",
    "the definition of @xmath107 is an unbounded @xmath108-formula so it can not be used freely in bounded induction .",
    "this problem was solved by jebek @xcite by working in a suitable conservative extension of @xmath5 .",
    "let @xmath109 be a truth - table of a boolean function with @xmath45 inputs ( @xmath39 is encoded as a string of @xmath110 bits , hence @xmath111 ) .",
    "we say that @xmath39 is ( worst - case ) @xmath93-hard , written as @xmath112 if no circuit @xmath113 of size @xmath114 computes @xmath39 .",
    "the function @xmath39 is average - case @xmath93-hard , written as @xmath115 , if for no circuit @xmath113 of size @xmath116 : @xmath117    for every constant @xmath118 there exists a constant @xmath119 such that @xmath5 proves : for every @xmath111 such that @xmath120 , there exist average - case @xmath93-hard functions @xmath109 .",
    "@xmath0 can be relativized to @xmath121 .",
    "the new function symbol @xmath122 is then allowed in the inductive clauses for introduction of new function symbols .",
    "this means that the language of @xmath121 , denoted also @xmath123 , contains symbols for all p - time oracle algorithms .",
    "the theory @xmath124 is an extension of the theory @xmath125 by the axioms    1 .",
    "@xmath126 is a truth - table of a boolean function in @xmath127 variables 2 .",
    "@xmath128 3 .   @xmath129    where @xmath119 is the constant from the previous lemma .",
    "[ sec ] @xmath124 is a conservative extension of @xmath5 .",
    "moreover , there is a @xmath123-function @xmath130 such that @xmath124 proves : if @xmath131 is definable by a circuit @xmath113 , then @xmath132 where @xmath133    we will abuse the notation and write @xmath134 instead of @xmath135 .    if @xmath103 is defined by a circuit and @xmath136 , we put @xmath105_{\\epsilon}:=\\frac{1}{t } size(x\\cap t,\\epsilon)\\ ] ]    jebek @xcite showed that these definitions are well - behaved :    ( in @xmath0)[lem ] let @xmath137 be definable sets and @xmath138",
    ". then    1 .",
    "@xmath139 2 .",
    "@xmath140 3 .",
    "@xmath141    ( in @xmath5)[really ]    1 .",
    "let @xmath90 be definable by circuits , @xmath142 , @xmath143 .",
    "@xmath144 2 .",
    "@xmath145 2 .",
    "let @xmath146 and @xmath147 be definable by circuits , @xmath148 and @xmath149 for every @xmath150 , where @xmath151 .",
    "then for any @xmath152 @xmath153 3 .",
    "( chernoff s bound ) let @xmath154 and @xmath155 .",
    "then @xmath156 for some constant @xmath119 , where @xmath65 is treated as a sequence of @xmath157 numbers less than @xmath158 and @xmath159 is its @xmath64-th member .",
    "many classical theorems from complexity theory have been already formalized in bounded arithmetic . in the following sections we present some representative examples from different areas of complexity theory .",
    "the last section describes the formalizations that are obtained in this paper .      actually , formalization of some theorems is a folklore used without a proof .",
    "for example , cook - krajek @xcite mention that np - completeness of sat can be formalized in @xmath0 .    1 .   for every @xmath35-formula @xmath160 ,",
    "there is a @xmath56-function @xmath161 such that @xmath162 where @xmath163 is an open @xmath56-formula which holds iff truth assignment @xmath164 satisfies propositional formula @xmath165 .",
    "2 .   for each @xmath45",
    "we have a @xmath56-function @xmath39 such that @xmath0 proves : for any @xmath166 , @xmath167 where @xmath168 is an open @xmath56-formula which holds iff @xmath65 is an accepting computation of turing machine @xmath169 on input @xmath170 ( so we are slightly abusing the notation as @xmath169 is actually a free variable in the formula @xmath168 ) and @xmath171 is the length of @xmath169 s code .",
    "note that formulations @xmath172 and @xmath173 are essentially equivalent since the formula @xmath174 is @xmath35 and any @xmath35-formula @xmath160 is equivalent in @xmath0 to a formula @xmath175 for some @xmath45 and @xmath169 . in @xmath173",
    "we have in addition also an explicit bound on @xmath164 .    for expository reasons we present a proof of @xmath173 in section [ pv ] .",
    "the main application of approximate counting in @xmath5 is in the formalization of probabilistic algorithms in @xmath5 and complexity classes like bpp and am .",
    "jebek s formalizations involve many other results we will not state explicitly like `` promise bpp @xmath176",
    "p / poly '' ( lemma 3.10 in jebek @xcite ) , rabin - miller algorithm ( example 3.2.10 in jebek @xcite ) but also principles like stirling s bound on binomial coefficients .",
    "( in @xmath5 ) a @xmath56-function @xmath177 and a @xmath56-predicate @xmath36 define a bpp language if for each @xmath10 either @xmath178\\preceq_0 1/4 $ ] or @xmath179\\preceq_0 1/4 $ ]",
    ".    let @xmath36 be a @xmath56-predicate and @xmath177 a @xmath56-function .",
    "there are @xmath180-formulas @xmath181 and @xmath182-formulas @xmath183 such that @xmath5 proves @xmath184\\preceq_0 1/4\\rightarrow \\pi^+(x)\\rightarrow \\sigma^+(x)\\rightarrow pr_{w < r(x)}[\\neg a(x , w)]\\preceq_0 1/3\\ ] ] @xmath185\\preceq_0 1/4\\rightarrow \\pi^-(x)\\rightarrow \\sigma^-(x)\\rightarrow pr_{w < r(x)}[a(x , w)]\\preceq_0 1/3\\ ] ] in particular , any definable @xmath186 language is in @xmath187 .    in @xcite jebek formalized cai s @xcite result stating that @xmath188 in the theory @xmath189 . the complexity class @xmath190 consists of languages for which there exists a p - time predicate @xmath191 such that @xmath192 @xmath193 where @xmath194 are implicitly bounded by a polynomial in @xmath195 .",
    "the theory @xmath196 is defined as @xmath13 but with induction for @xmath35-formulas , @xmath197 denotes functions computable in polynomial time relative to np , and @xmath198 is a set of axioms @xmath199 for @xmath197-functions @xmath200 .",
    "note that @xmath201 follows from @xmath72 .",
    "( in @xmath189 ) the complexity class @xmath190 is contained in @xmath202 .",
    "that is , for each p - time relation @xmath191 defining a language @xmath203 , there exists @xmath202-predicate @xmath204 definable in @xmath189 such that the same theory proves @xmath205 .      in ( * ?",
    "* section 15.2 ) krajek proves parity @xmath206 in the theory @xmath207 .",
    "by @xmath208 he denotes the set of axioms @xmath209 for every @xmath0-function symbol @xmath161 where @xmath39 may have other arguments besides @xmath10 and they are treated as parameters in the axioms .",
    "it is known that @xmath208 and @xmath210 are equivalent over @xmath13 .",
    "further , the theory @xmath76 is @xmath67-conservative over @xmath211 ( noted in jebek @xcite as a corollary of earlier results ) .",
    "let @xmath212 be arbitrary constants .",
    "then the theory @xmath207 proves that for any sufficiently large @xmath213 there are no depth @xmath214 circuits of size @xmath215 computing @xmath216 .    in @xcite razborov",
    "developes a logical formalism supporting his feeling that @xmath13 is the right theory to capture that part of reasoning in boolean complexity which led to actual lower bounds for explicitly given boolean functions .",
    "he formalizes lower bounds for constant - depth circuits over the standard basis , lower bounds for monotone circuits , lower bounds for constant - depth circuits with mod-@xmath217 gates , and lower bounds for monotone formulas based on communication complexity .",
    "importantly , his formalizations presented in second - order logic correspond in first - order logic to the formalization where the number of inputs of circuits in the respective theorems is in @xmath218 .",
    "this makes it more suitable for encoding into the propositional setting but it also makes the formalization results formally weaker .",
    "jebek @xcite formalized the equivalence of public - coin and private - coin interactive protocols in the theory @xmath219 .",
    "this is illustrated on the example of the isomorphism problem : given two structures @xmath220 and @xmath221 ( as tables ) of the same signature , determine whether @xmath222 .",
    "( in @xmath223 ) a pair @xmath224 where @xmath225 is a @xmath35-formula , and @xmath177 is a @xmath56-function , defines an @xmath226 language if for each @xmath10 either @xmath227\\preceq^1_0 1/4 $ ] or @xmath228\\preceq^1_0 1/4 $ ] where @xmath229 denotes @xmath230 relativized with a @xmath35-complete oracle .",
    "( in @xmath223 ) graph nonisomorphism is in am .",
    "recently , dai tri man le @xcite formalized goldreich - levin s theorem in @xmath5 .",
    "( in @xmath5 ) let @xmath231 be a function computed by a circuit of size @xmath16 , and suppose that there exists a circuit @xmath113 of size @xmath100 such that @xmath232_{\\epsilon}\\geq \\frac{1}{2}+\\frac{1}{p(n)}\\ ] ] if @xmath233 is sufficiently small , then there is a circuit @xmath234 of size at most @xmath235 and @xmath236 such that @xmath237_{\\epsilon}\\geq \\frac{1}{4p(n)}-\\frac{15\\epsilon}{2}\\ ] ]      in @xcite , buss , koodziejczyk and zdanowski derived toda s theorem in an extension of the theory @xmath223 .",
    "for a fixed prime @xmath238 , they denote by @xmath239 for @xmath240 $ ] quantifiers counting mod @xmath241 .",
    "the intended meaning of @xmath242 is that the number of values @xmath243 for which @xmath36 is true is congruent to @xmath45 mod @xmath241 .",
    "see @xcite for the explicit list of axioms defining @xmath239 .",
    "a @xmath244 formula is a formula which is either atomic , or of the form @xmath242 where @xmath36 is sharply bounded .",
    "@xmath245 is the set of formulas obtained as the closure of @xmath244 formulas under boolean connectives @xmath246 and under sharply bounded quantifiers . for @xmath247 , the strict formula sets @xmath248 are defined in the usual way by counting the number of alternations of bounded quantifiers .",
    "@xmath249 is the theory axiomatized by the axioms for @xmath0 symbols , the @xmath239 axioms for sharply bounded formulas @xmath250 , and @xmath251-ind .",
    "@xmath252 where @xmath253 means functions that can be computed in polynomial time relative to @xmath254 .",
    "@xmath255 denotes formulas formed from bounded existential , universal , and @xmath256 quantifiers .    in @xmath257 , we say that a language is in @xmath258 if there exists @xmath0 functions @xmath39 and @xmath259 such that for all @xmath10 , @xmath260\\preceq_0 1/4\\ ] ] @xmath261\\preceq_0 1/4\\ ] ] where @xmath262 is the set of propositional formulas @xmath263 such that the number of satisfying assignments of @xmath263 is congruent to @xmath64 mod @xmath241 for some prime @xmath241 .",
    "@xmath257 proves that any @xmath255 formula defines a property in bp@xmath264p .",
    "the approximate counting developed in @xmath5 relies on a formalization of the derandomization result by nisan and wigderson @xcite .",
    "( in @xmath5 ) a definable randomized algorithm is given by a pair of @xmath56-functions @xmath265 such that    @xmath266\\preceq_0 1/2 $ ]    where @xmath267 is a special symbol signaling a rejecting computation .",
    "the special symbol @xmath267 could be avoided but it is useful for denoting a `` failure - state '' of probabilistic algorithms .",
    "it can be used when the input random string does not encode the expected structure , say a graph or a formula .",
    "let @xmath268 be a randomized algorithm that is definable in @xmath269 .",
    "then there are @xmath56-functions @xmath270 and @xmath271 such that @xmath124 proves @xmath272 @xmath273    jebek @xcite formalized also impagliazzo - wigderson s @xcite derandomization which draws the same conclusion assuming only worst - case hardness .",
    "this turned out to be much harder than the nisan - wigderson construction mainly because list decoding of error - correcting codes used in the construction requires several algebraic tools concerning finite fields .",
    "let @xmath268 be a randomized algorithm that is definable in @xmath269 , and let @xmath274",
    ". then there are @xmath56-functions @xmath270 and @xmath271 such that @xmath275 proves @xmath272 @xmath273 here , @xmath275 is defined as an extension of @xmath276 , i.e. relativized @xmath13 , by the following axioms :    1 .",
    "@xmath277 2 .",
    "@xmath278    for a standard constant @xmath119 .",
    "we add to the list of formalized results mentioned in previous sections formalizations of the exponential pcp theorem , the pcp theorem , and certain pseudorandom constructions involving the so called @xmath1-graphs which are needed in the proof of the pcp theorem .",
    "the exponential pcp theorem was proved in arora - safra @xcite , and the pcp theorem is originally from arora - safra @xcite and arora et.al .",
    "@xcite . in @xcite dinur gave a simpler proof of the pcp theorem which we will formalize .",
    "[ dal ] ( in @xmath5 ) let @xmath279 be constants , @xmath280 for @xmath213 .",
    "further , let @xmath281 ( represent random bits ) , @xmath282 be a @xmath283-size circuit with @xmath157 inputs where @xmath157 might differ from @xmath49 , and @xmath284 be a @xmath285-time algorithm .",
    "denote by @xmath286 the output of @xmath284 on input @xmath10 and with access to @xmath282 specified by ( random bits ) @xmath65 as follows .",
    "@xmath284 computes @xmath282 on at most @xmath214 different inputs : first , it produces strings @xmath287 where each @xmath288 , then it computes @xmath289 and finally computes its output which is either 1 or 0 .",
    "we formulate the exponential pcp theorem in @xmath5 as follows .",
    "for an explanation and a discussion concerning the choice of the formulation see section [ epcp ] .",
    "[ theorems : exp ] there are constants @xmath290 and a @xmath285-time algorithm @xmath284 ( given as a @xmath56-function ) computing as in definition [ dal ] such that @xmath5 proves that for any @xmath291 , @xmath213 : @xmath292 @xmath293\\preceq_0 1/2\\ ] ]    we also formalize pseudorandom constructions involving the @xmath1-graphs in @xmath0 but leave the presentation of these results to section [ rest ] as it would require introducing too many definitions now .    in order to formalize the pcp theorem",
    "we use the notion of probability @xmath294 on spaces of polynomial size @xmath295 for @xmath213 which is assumed to be defined in a natural way using an exact counting of sets of polynomial size which is also assumed to be defined in @xmath0 in a standard way .",
    "the notion of probability @xmath294 should not be confused with the definition of @xmath294 in @xmath5 .",
    "we formulate ( the more important implication of ) the pcp theorem in @xmath0 as follows .",
    "[ dall](in @xmath0 ) let @xmath296 be constants , @xmath297 , @xmath298 , and be @xmath284 be a @xmath285-time algorithm .",
    "denote by @xmath286 the output of @xmath284 on input @xmath10 and with access to @xmath282 specified by @xmath65 as follows .",
    "@xmath284 uses at most @xmath299 random bits @xmath65 and makes at most @xmath214 nonadaptive queries to locations of @xmath282 , i.e. @xmath284 can read bits @xmath300 for @xmath301 produced by @xmath284 . then it computes its outputs , 1 or 0 .",
    "in definition [ dall ] we abuse the notation and use the shortcut @xmath286 in different meaning than in definition [ dal ] .",
    "this should not lead into confusion .",
    "there are constants @xmath302 and a @xmath285-time algorithm @xmath284 ( given as a @xmath56-function ) computing as in definition [ dall ] such that @xmath0 proves that for any @xmath303 : @xmath304 @xmath305\\leq 1/2\\ ] ]    note that the exponential pcp theorem follows from the pcp theorem .",
    "hence , the exponential version is also provable in @xmath0 .",
    "the @xmath0 proof of the pcp theorem uses ( among many other tools ) the exponential pcp theorem but scaled down to constant size instances so that to prove the scaled down version we need to reason only about sets of constant size . on the other hand , in @xmath5",
    "we perform a reasoning with p - time definable sets .",
    "hence , the @xmath5 proof shows different tools to be available in low fragments of arithmetic .",
    "this section serves mainly as an illustration of some techniques available in @xmath0 which we later use freely in our arguments .",
    "( the cook - levin theorem in @xmath0 ) for each @xmath45 , we have a @xmath56-function @xmath39 such that @xmath0 proves : for any @xmath166 , @xmath306 where @xmath168 is an open @xmath56-formula which holds iff @xmath65 is an accepting computation of turing machine @xmath169 on input @xmath170 , and @xmath171 is the length of @xmath169 s code .    first , we show that for some @xmath56-function @xmath39 , @xmath0 proves ( @xmath267 ) : @xmath307 the turing machine @xmath169 is represented as a binary string encoding a tuple @xmath308 where @xmath309 is the set of states , @xmath310 is the set of tape symbols , @xmath311 is the initial state , @xmath312 is the set of accepting states , and @xmath313 is the transition function .",
    "we assume that the open @xmath56-formulas @xmath168 and @xmath314 are already constructed in a well - behaved way .",
    "the propositional formula @xmath315 will be built from atoms @xmath316 with intended interpretation ",
    "tape cell @xmath64 of @xmath169 contains symbol @xmath317 at step @xmath100 \" , atoms @xmath318 for  @xmath169 s head is at tape cell @xmath64 at step @xmath100 \" , and atoms @xmath319 for  @xmath169 is in state @xmath217 at step @xmath100 \" .",
    "these atoms are assumed to be encoded in a standard way .    given @xmath166 we define @xmath315 gradually by introducing more and more complex functions .",
    "this is supposed to illustrate the way in which @xmath0 introduces new functions .",
    "let us start with a definition of function @xmath320 mapping @xmath321 to a conjunction of @xmath322 atoms representing first @xmath322 bits of binary string @xmath10 : @xmath323    where @xmath324 is a code of the conjunction of propositional formulas encoded in @xmath36 and @xmath325 .",
    "next , put @xmath326 .",
    "then , define @xmath327)='f_{ins}(m , x)\\wedge g'$ ] where @xmath95 is a conjunction of formulas @xmath328 for all @xmath329 and @xmath330 such that @xmath331,[t',l'',m']\\leq [ t , l , m]$ ] .",
    "this guarantees that cell @xmath332 contains only one symbol at step @xmath333 .",
    "@xmath334))&:={}'f_{symb}(m , x,[t , l , m])\\wedge    ( t_{t',l',m'}\\rightarrow \\neg t_{t',l'',m'})\\ ' \\cr & \\qquad\\mbox{if}\\ l'\\neq l''\\wedge [ t',l',m'],[t',l'',m']\\leq [ t , l , m]\\ \\mbox{,}\\ i\\in \\{0,1\\ }    } \\ ] ]    similarly , define @xmath335)$ ] by extending @xmath327)$ ] with    1 .",
    "@xmath336 for @xmath337 ( @xmath169 can not be in two different states at step @xmath338 ) 2 .",
    "@xmath339 for @xmath337 ( head can not be in two different positions at step @xmath338 ) 3 .",
    "@xmath340 for @xmath329 and @xmath341    further , in this way introduce function @xmath342 capturing @xmath169 s transition function @xmath343 . @xmath344)\\wedge\\cr",
    "& \\qquad(h_{j , c}\\wedge q_{q , c}\\wedge t_{j,\\sigma , c}\\rightarrow \\bigvee_{(q,\\sigma , q',\\sigma',d)\\in \\rho } ( h_{j+d , c+1}\\wedge q_{q',c+1}\\wedge t_{j,\\sigma',c+1 } ) '    } \\ ] ] finally , @xmath345 .",
    "this defines a @xmath56-function @xmath39 . to see that ( @xmath267 ) holds , given @xmath346 , we define @xmath164 assigning 0 or 1 to atoms of the formula @xmath315 as follows :    1 .",
    "@xmath347 iff @xmath348 for @xmath349 and @xmath350 .",
    "2 .   @xmath351 iff @xmath65 says that tape cell @xmath317 of @xmath169 at step @xmath16 contains @xmath64 3 .",
    "@xmath352 iff @xmath65 says that at step @xmath119 head is in position @xmath317 4 .",
    "@xmath353 iff @xmath65 contains @xmath169 in state @xmath177 at step @xmath16    informally , if @xmath65 indeed encodes an accepting computation of turing machine @xmath169 on input @xmath170 , then the previous definition produces @xmath164 which satisfies all conjuncts in formula @xmath315 because these are copying the conditions from the definition of @xmath168 .",
    "therefore , we can conclude that @xmath354 in the theory @xmath0 .",
    "analogously , @xmath355 .",
    "the exponential pcp theorem was proved in arora - safra @xcite .",
    "we formalize it in the theory @xmath5 basically following the presentation in arora - barak @xcite .",
    "however , there is a crucial change : we can not use the fourier transformation to derive the linearity test because it would require manipulations with exponentially big objects and it is not clear whether this could be done ( for example , using a representation by circuits ) .",
    "instead , we formalize the so called majority correction argument as it is presented in moshkovitz @xcite . other parts of the proof work without much change .",
    "it is essential that all sets used to express probabilities are definable by p - size circuits so that @xmath5 can work with them and the proof itself does not use more than basic operations on these sets which are available in @xmath5 .    recall definition [ dal ] introducing the predicate @xmath286 .",
    "the algorithm @xmath284 will represent the so called verifier of probabilistically checkable proofs @xmath282 .",
    "the verifier is usually defined so that @xmath282 is allowed to be any string of arbitrary length and @xmath284 has an oracular access to @xmath282 , it can ask for any bit of @xmath282 . then , for a language @xmath12 , @xmath356 standardly means that there is a p - time algorithm @xmath284 such that :    * if @xmath357 , then there is a string @xmath282 ( proof ) such that @xmath284 with input @xmath10 of length @xmath49 and @xmath295 random bits asks for at most @xmath358 bits of @xmath282 and accepts ( with probability 1 ) ; * if @xmath359 , then for any @xmath282 , @xmath284 with input @xmath10 of length @xmath49 and @xmath295 random bits asks for at most @xmath358 bits of @xmath282 and accepts with probability @xmath360 .",
    "the exponential pcp theorem says that @xmath361 .",
    "as the verifier uses @xmath295 random bits , the proof @xmath282 can be seen as a string of size @xmath362 . in our formalization , @xmath213 so bounded arithmetic can not encode the exponentially big proofs by binary strings . in order to be able to speak about them",
    "we represent such proofs by p - size circuits .",
    "more precisely , for a @xmath283-size circuit @xmath282 with @xmath157 inputs and @xmath363 , @xmath364 is the @xmath10-th bit of the proof represented by @xmath282 .",
    "hence , the condition 1 . ) in our formulation of the exponential pcp theorem will look formally stronger but it follows trivially from the standard proof . in condition 2 . )",
    "our @xmath284 will recognize errors only in proofs that are represented by @xmath283-size circuits",
    ". we can interpret it as if the proofs that are not represented by such circuits were automatically rejected .",
    "alternatively , we could also represent proofs by oracles which would maybe better reflect the nature of the exponential pcp theorem .",
    "however , then we would need to perform the formalization in the theory @xmath5 extended by such oracles .    as the np - completeness of sat is provable in @xmath0",
    "it is sufficient to show in @xmath5 that sat @xmath365",
    ". this should justify theorem [ theorems : exp ] as the right formulation of the exponential pcp theorem in @xmath5 .",
    "( of theorem [ theorems : exp ] ) for any @xmath291 , the algorithm @xmath284 firstly reduces sat instance @xmath10 to a set of quadratic equations : it obtains 3sat formula equivalent to @xmath10 by introducing new variable for each gate of the formula encoded in @xmath10 and clauses representing the gate . for each clause of the form",
    "@xmath366 it produces two equations @xmath367 and @xmath368 where @xmath164 is a new variable .",
    "analogously for other possible clauses , if some @xmath369 occurs in the clause negatively , @xmath370 in the resulting equations is replaced by @xmath369 . in this way",
    "@xmath284 produces a set of quadratic equations which is solvable in @xmath371 if and only if @xmath10 is satisfiable .",
    "more precisely , there is @xmath372 such that if @xmath10 encodes a propositional formula with @xmath373 variables it can be efficiently mapped to a set of @xmath374 quadratic equations on @xmath375 variables @xmath376 ( w.l.o.g .",
    "@xmath377 ) .",
    "the set of equations can be represented by an @xmath378 matrix @xmath36 and a string @xmath379 satisfying : @xmath380 @xmath381 where @xmath382 and @xmath383 is a vector of bits @xmath384 $ ] ordered lexicographically .    the algorithm @xmath284 will interpret @xmath283-size circuits @xmath282 with @xmath385 inputs @xmath386 where @xmath387 , as circuits allowing us to access functions @xmath388 and @xmath389 for some @xmath382 in the following way , @xmath390 and @xmath391 . here , @xmath392 .",
    "similarly for @xmath393 .",
    "@xmath394 stands for `` walsh - hadamard '' .    for any @xmath395 ,",
    "the algorithm @xmath284 with @xmath215 random bits @xmath396 for @xmath397 , where @xmath398 is a constant , @xmath399 , @xmath400 and with access to an @xmath283-size circuit @xmath282 accepts if and only if for each @xmath397 , @xmath282 passes the following tests    * `` linearity '' : @xmath401 and @xmath402 * `` @xmath403 encodes @xmath383 '' : @xmath404 * `` @xmath403 encodes a satisfying assignment '' : @xmath405 for @xmath165 representing the sum @xmath406 where @xmath407 is the lefthand - side of the @xmath64-th equation in @xmath408    here , @xmath409 , @xmath410 and similarly @xmath411 .    for any @xmath291 ,",
    "if @xmath412 then there is @xmath382 solving the corresponding equations @xmath408 . thus there is a @xmath283-size circuit @xmath282 with @xmath413 inputs given by @xmath414 and @xmath415 which passes all the tests : for any @xmath65 , the linearity is clearly satisfied by the definition .",
    "further :    @xmath416    @xmath417    and as @xmath408 also @xmath418 .",
    "now we will show that the algorithm @xmath284 recognizes incorrect proofs with high probability .",
    "the argument relies on the test of linearity which we prove in section [ ct ] .",
    "[ lin ] let @xmath93 be sufficiently small , @xmath136 and let @xmath39 be a function on @xmath419 inputs represented by a circuit such that for each linear function @xmath271 with @xmath420 inputs,@xmath421_{\\epsilon } < p\\ ] ] then @xmath422_{\\epsilon}\\preceq_{11\\epsilon+13\\epsilon^2 + 2\\epsilon^3 } max\\{29/32,1/2+p/2\\}$ ] .",
    "( we abuse the notation and use @xmath39 also in place of circuits representing @xmath39 .",
    "note that @xmath271 is represented by @xmath420 coefficients . )",
    "let @xmath423 and @xmath39 be a function on @xmath419 inputs represented by a circuit such that there is a linear function @xmath424 which satisfies @xmath425_{\\epsilon}\\geq 1-s$ ]",
    ". then for each @xmath426 ,    @xmath427_{\\epsilon}\\succeq_{6\\epsilon } 1 - 2s$ ] .",
    "( of the claim ) by the assumption and proposition [ really ] 1.i ) , for @xmath426 , + @xmath428 and @xmath429 which implies @xmath430 . by linearity of @xmath424 , for any @xmath426 , @xmath431 .",
    "thus , @xmath432_{\\epsilon}\\succeq_{6\\epsilon } 1 - 2s$ ] , which proves the claim .",
    "assume that @xmath433 , so @xmath434 and let @xmath282 be arbitrary circuit of size @xmath283 .",
    "further , let @xmath93 be sufficiently small , @xmath136 and denote by @xmath435 , @xmath286 with @xmath436 , i.e. @xmath284 performing only one round of testing .",
    "if for each linear function @xmath437 , @xmath438_{\\epsilon}<31/32 $ ] or for each linear function @xmath424 , @xmath439_{\\epsilon}<31/32 $ ] , then by the test of linearity , we have @xmath440_{\\epsilon}\\preceq_{13\\epsilon+13\\epsilon^2 + 2\\epsilon^3 } 63/64 $ ] . otherwise , there are linear functions @xmath437 , @xmath424 such that by local decoding , for each @xmath441 , it holds @xmath442_{\\epsilon}\\succeq_{6\\epsilon } 15/16 $ ] where @xmath443 and for each @xmath444 , @xmath445_{\\epsilon}\\succeq_{6\\epsilon } 15/16 $ ] where @xmath446 .",
    "we need to show that even in the latter situation verifier @xmath284 accepts with small probabilty . for this , we distinguish two cases : 1 . @xmath447 , i.e. @xmath448 ; 2 .",
    "@xmath449 . here , by the linearity of @xmath424",
    ", we have @xmath450 for some @xmath259 and @xmath451 .    [ guu ]",
    "if @xmath447 , then @xmath452\\succeq_{2\\epsilon } 1/4 $ ]    let @xmath453 be matrices such that @xmath454 and @xmath455 .    if @xmath456 , then @xmath457 as witnessed by the following circuit : let @xmath458 be a position where @xmath459 and @xmath460 differ . consider the circuit mapping @xmath461 from @xmath462 to @xmath463 where @xmath464 is obtained from @xmath461 by erasing its @xmath317th bit @xmath465 . for each @xmath466 ,",
    "let @xmath467 be such that @xmath468 and @xmath469 and let @xmath470 be such that @xmath471 and @xmath472 .",
    "then , for each @xmath473 , @xmath474 or @xmath475 is in @xmath476 .",
    "furthermore , if @xmath456 , we similarly observe that @xmath477 for each @xmath478 .",
    "hence , by proposition [ really ] @xmath479 , @xmath480 .",
    "this proves the claim .",
    "suppose now that @xmath447 . as @xmath481 is a subset of @xmath482 which is @xmath483 by claim [ guu ]",
    ", we can conclude that @xmath484_{\\epsilon}\\preceq_{2\\epsilon } pr_{r_1,r_2}[g'(r_1\\otimes r_2)=f'(r_1)f'(r_2)]_{\\epsilon}\\preceq_{28\\epsilon } 15/16.\\ ] ]    it remains to consider the case that @xmath449 .",
    "for each @xmath485 , @xmath486 as it is witnessed by the following circuit .",
    "let @xmath317 be the first such that @xmath487 .",
    "the circuit maps each @xmath488 to @xmath489 where @xmath490 is obtained from @xmath177 by erasing its @xmath317th bit @xmath491 . for each @xmath492 , let @xmath493 be such that @xmath494 and @xmath495 and let @xmath496 be such that @xmath497 and @xmath498 . then , for each @xmath492 , @xmath499 or otherwise @xmath500 and hence @xmath501 .",
    "furthermore , assuming @xmath449 , @xmath502 is a subset of @xmath503 thus , @xmath440_{\\epsilon}\\preceq_{2\\epsilon } pr_r[g'(z)=\\sigma_i r_ib_i]_{\\epsilon}\\preceq_{10\\epsilon } 9/16 $ ] .    in all cases ,",
    "@xmath504_{\\epsilon}\\preceq_{28\\epsilon } 63/64 $ ] so @xmath505    therofore , for sufficiently big constant @xmath398 , chernoff s bound from proposition [ really ] with @xmath506 and sufficiently small @xmath93 implies that @xmath507\\preceq_0 1/2 $ ] .    to conclude the proof of the exponential pcp theorem in @xmath5 it thus remains to derive the test of linearity .      in this section",
    "we prove proposition [ lin ] in the theory @xmath5 .",
    "we can not use the fourier transformation argument directly as in arora - barak @xcite which would require to prove the existence of exponentially long fourier expansions ( and it is not clear if this could be managed , for example , using a representation by p - size circuits ) .",
    "instead we formalize the so called majority correction argument .",
    "our presentation is a minor modification of moshkovitz @xcite .",
    "let @xmath274 be sufficiently small and @xmath136 .",
    "define @xmath508 by @xmath509_{\\epsilon}\\geq 1/2\\ ] ]    therefore , for any @xmath510 , @xmath511_{\\epsilon}\\geq 1/2 $ ] .",
    "hence , @xmath512 is the majority value of the expression @xmath513 for possible @xmath164 s .",
    "we will now derive three claims that can be combined into a proof of proposition [ lin ] .",
    "[ cl : b - one ] @xmath514_{\\epsilon}\\succeq_{8\\epsilon+13\\epsilon^2 + 2\\epsilon^3 } \\frac{1}{2 } pr_{x}[f(x)\\neq g_{\\epsilon}(x)]_{\\epsilon}$ ]    this holds trivially if @xmath515 .",
    "otherwise , define sets @xmath516 then , @xmath517_{\\epsilon}\\cr \\geq { } & size(t\\cap ( g\\times 2^n)\\cap 2^{2n},\\epsilon)/2^{2n}\\cr = { } & \\frac{size((g\\cap 2^n)\\times 2^n,\\epsilon)}{2^{2n}}\\cdot \\frac{size(t\\cap ( g\\times 2^n)\\cap 2^{2n},\\epsilon)}{size((g\\cap    2^n)\\times 2^n,\\epsilon ) }   } \\ ] ] by proposition [ lem ] iii ) , @xmath518 , so the first fraction in the expression above is @xmath519_{\\epsilon}$ ] .",
    "further , for each @xmath520 , @xmath521 and in particular , @xmath522 .",
    "hence , by proposition [ really ] 2 . ,",
    "@xmath523 , and @xmath524 applying now proposition [ lem ] iii ) we obtain claim [ cl : b - one ] .",
    "[ cl : b - two ] if @xmath514_{\\epsilon}<\\frac{3}{32}$ ] , then @xmath525 , @xmath526 .",
    "fix @xmath510 and define @xmath527 then , @xmath528_{\\epsilon}= pr_{y , z}[\\left < y , z\\right>\\in a\\cup b]_{\\epsilon}$ ] .    by [ really ] 1.ii ) , @xmath529 . thus , @xmath530_{\\epsilon}\\approx_{4\\epsilon } pr_{y , z}[\\left < y , z\\right>\\in a]+pr_{y , z}[\\left < y , z\\right>\\in b]$ ] .",
    "next , let @xmath531 .",
    "using proposition [ lem ] iii ) twice , @xmath532 is @xmath533 .",
    "therefore , @xmath534\\approx_{3\\epsilon } p_x^2 $ ] .    as by proposition [ really ] 1.i ) , @xmath535 is @xmath536 , we analogously obtain @xmath537\\approx_{9\\epsilon } ( 1-p_x)^2 $ ]",
    ". therefore , @xmath538\\approx_{17\\epsilon } p_x^2+(1-p_x)^2 $ ] .",
    "define now , @xmath539 then , @xmath540 and by proposition [ lem ] i ) we have @xmath541 .    by proposition [ really ] 1.ii ) , @xmath542 , so @xmath543 .",
    "moreover , by the assumption , @xmath544_{\\epsilon}<3/32 $ ] and similarly , @xmath545_{\\epsilon } < 3/32 $ ]",
    ". therefore , @xmath546_{\\epsilon}\\succeq_{5\\epsilon}13/16\\ ] ] this shows that @xmath547 and @xmath548 . as @xmath521",
    ", @xmath549 would imply @xmath550 contradicting dual weak pigeonhole principle .",
    "hence , claim [ cl : b - two ] follows .",
    "[ cl : b - three ] if @xmath551_{\\epsilon}<3/32 $ ] , then @xmath552 is linear .    by claim [ cl : b - two ] , @xmath553 , @xmath554_{\\epsilon}&\\preceq_{3\\epsilon } 1/4\\cr pr_z[g_{\\epsilon}(y)\\neq f(y+z)+f(z)]_{\\epsilon}&\\preceq_{3\\epsilon } 1/4\\cr pr_z[g_{\\epsilon}(x+y)\\neq f(y+z)+f(z+x)]_{\\epsilon}&\\preceq_{3\\epsilon } 1/4 } \\ ] ] therefore , @xmath555_{\\epsilon}\\succeq_{16\\epsilon } 1/4   } \\ ] ] the last estimation implies that if @xmath93 is sufficiently small , there exists @xmath556 ( and we can efficiently find it ) such that @xmath557 which shows that @xmath558 and proves claim [ cl : b - three ]",
    ".    we can now derive proposition [ lin ] .",
    "assume that for each linear function @xmath271 we have @xmath559_{\\epsilon}<p$ ] . by claim [ cl :",
    "b - three ] , @xmath551_{\\epsilon}\\geq 3/32 $ ] or @xmath552 is linear .",
    "this means that either @xmath422_{\\epsilon}\\preceq_{3\\epsilon}29/32 $ ] or @xmath560<p$ ] . in the latter case , @xmath561\\succeq_{3\\epsilon}1-p$ ] and by claim [ cl : b - one ] , + @xmath422_{\\epsilon}\\preceq_{11\\epsilon+13\\epsilon^2 + 2\\epsilon^3 } 1/2+p/2 $ ] .",
    "in order to derive the pcp theorem in @xmath0 we will need to prove in the theory @xmath0 the existence and some properties of the @xmath1-graphs ( see their definition below ) .",
    "while the construction itself is very combinatorial , its analysis uses algebraic techniques , e.g. properties of eigenvectors , which we do not know how to formalizable in @xmath0 .",
    "using an equivalent combinatorial definition of the @xmath1-graphs it is possible to derive their existence and main properties by only combinatorial tools .",
    "however , we need it for the algebraic equivalent and the implication producing the algebraic @xmath1-graphs from the combinatorial @xmath1-graphs is one of those which seem to require the algebraic techniques we are trying to avoid .",
    "therefore , we will employ an approximation of some algebraic tools which will allows us to derive slightly weaker results about the algebraic @xmath1-graphs that are , however , sufficient to derive the pcp theorem .",
    "for the history of the field leading to the results presented in this section see arora - barak ( * ? ? ?",
    "* chapter 21 ) .      in @xmath0",
    "we say that a graph @xmath95 is @xmath214-regular if each vertex appears in exactly @xmath214 edges .",
    "we allow @xmath95 to have multiple edges and self - loops .",
    "the random - walk @xmath562 matrix @xmath36 of a @xmath214-regular graph @xmath95 with @xmath49 vertices consists of elements @xmath563 being the number of edges between the @xmath64-th and the @xmath317-th vertex in @xmath95 divided by @xmath214 .",
    "all our graphs will be undirected , hence , their random - walk matrices will be symmetric .",
    "for any @xmath45 and a graph @xmath95 with @xmath49 vertices , we denote by @xmath564 the graph with @xmath49 vertices which has an edge between the @xmath64th and the @xmath317th vertex for each @xmath45 step path between the @xmath64th and the @xmath317th vertex in @xmath95 .",
    "we would like to define now the second largest eigenvalue of @xmath95 denoted as @xmath565 .",
    "the parameter @xmath565 corresponds to a certain expansion property of @xmath95 ( see proposition [ expans ] ) and normally it is defined as the maximum value of @xmath566 over all vectors @xmath10 in @xmath49-dimensional real vector space such that @xmath567 and @xmath568 . here , @xmath569 and @xmath36 is the random - walk matrix of graph @xmath95 with @xmath49 vertices . in @xmath0",
    "we will approximate this definition using a sufficiently dense net of rational numbers .",
    "the theory @xmath0 proves that each @xmath10 is the value of an expression of the form @xmath570 for @xmath571 which is encoded in a natural way . in @xmath0",
    "we write that @xmath572 if @xmath573 and each @xmath369 is @xmath574 or @xmath575 for @xmath576\\cup \\{0\\ } , b\\in [ m]=\\{1, ... ,m\\}$ ] where @xmath577 are represented by products of such expressions @xmath578 .",
    "these products are also encoded in a natural way . in such cases",
    "we might write @xmath579 to specify that @xmath77 is represented by a product of @xmath119 and @xmath214 where @xmath580 might be products of other expressions of the form @xmath581 .",
    "let @xmath12 be a sufficiently big constant , then @xmath582 is a function which given nonnegative @xmath583 , @xmath584 , produces @xmath585 such that @xmath586 where we ignore the difference between @xmath587 and the value of the expression it encodes .",
    "moreover , @xmath582 satisfies the following : if input @xmath177 is a fraction of the form @xmath588 where @xmath580 are sums @xmath589 with @xmath571 ( and @xmath590 might be products of such sums ) , then @xmath591 which is illustrating the representation of the number encoded in @xmath587 . the representation of @xmath592 guarantees that @xmath582 does not need to perform factorization .",
    "the function @xmath582 is essentially the usual algorithm approximating square root by a digit - by - digit search .",
    "we will assume that @xmath582 works as follows : given @xmath583 , it first finds out maximal @xmath593 $ ] such that the current representation of @xmath177 is @xmath594 for some @xmath595 $ ] , and then by a digit - by - digit search it finds the first @xmath596 $ ] such that @xmath587 which is @xmath597 satisfies @xmath598 . to get such @xmath119 we want to satisfy @xmath599 .",
    "thus @xmath600 .",
    "the value @xmath119 is then produced by a p - time algorithm approximating @xmath601 so it is unique and its existence is provable in @xmath0 .",
    "for @xmath572 , put @xmath602 where the input @xmath603 is computed so that if each @xmath604 for some common @xmath580 , then @xmath605 is represented as @xmath606 for some @xmath590 . by the definition , if @xmath572 , @xmath607 , then @xmath608 and using @xmath609 , @xmath610 . note that @xmath127 might be a fraction",
    "so we assume that @xmath611 is rearranged appropriately .",
    "however , by @xmath612 we always mean @xmath613 where @xmath614 for @xmath615 . the @xmath49-dimensional unite vector is defined as @xmath616 .",
    "the parameter @xmath565 is defined as the maximum value of @xmath566 over all possible vectors @xmath617 such that @xmath567 and @xmath618 . here",
    "again , the vector @xmath619 ( with elements of length @xmath295 ) is computed so that if each @xmath604 for some common @xmath580 , then @xmath620 for some @xmath621 .",
    "we will not need to prove @xmath622 in @xmath0 but we will work with formulas of the form @xmath623 which are @xmath68 . to see this note that in @xmath623 we universally quantify over all @xmath10 s in @xmath624 . for each @xmath317 , there are @xmath625 ways how to represent @xmath626 $ ] as a product of @xmath317 numbers so this is a universal quantification over @xmath627 @xmath10 s .",
    "for each such @xmath10 , predicates @xmath567 and @xmath628 are computable in time @xmath629 .",
    "a @xmath214-regular graph @xmath95 with @xmath49 vertices is @xmath1-graph if @xmath630 .",
    "we will often use cauchy - schwarz inequality in @xmath0 which can be obtained in the standard way .",
    "( cauchy - schwarz inequality in @xmath0 ) for every @xmath631 and @xmath632 , @xmath633 and therefore , if @xmath213 ( and thus @xmath127 exists ) , also @xmath634 .",
    "if @xmath635 , the inequality holds . otherwise , let @xmath636 .",
    "then , @xmath637",
    ". therefore , @xmath638 .    in peano",
    "arithmetic , regular graphs @xmath95",
    "satisfy @xmath639 but in @xmath0 we will have just @xmath640 for any rational @xmath274 .",
    "fortunately , this is enough to derive the pcp theorem in @xmath0 .",
    "[ eps ] for any @xmath214 and any rational @xmath641 , @xmath0 proves that for any @xmath214-regular graph @xmath95 with @xmath213 vertices , @xmath642 .    as the statement",
    "we want to prove is @xmath67 , by @xmath67-conservativity of @xmath13 over @xmath0 , we can work in the theory @xmath13 .",
    "let @xmath36 be the random - walk matrix of @xmath95 .",
    "we want to show that @xmath643 . using cauchy - schwarz inequality , for every @xmath617 such that @xmath567 , @xmath644 as @xmath645 , we have @xmath646 and + @xmath647 where @xmath648 is the random - walk matrix of @xmath649 , so also @xmath650 and @xmath651 .",
    "this shows that @xmath652 where @xmath653 is a sufficiently big constant depending only on @xmath93 and the universal quantifier before @xmath36 goes only over random - walk matrices of @xmath214-regular graphs with @xmath49 vertices .",
    "note also that @xmath654 might be irrational but we can assume that it is approximated with a sufficiently small constant error so that the predicate @xmath655 is @xmath68 .",
    "then , by @xmath68-llind ( available in @xmath13 ) , we have @xmath656 which is @xmath657 by the choice of @xmath653 and therefore @xmath658",
    ".    we can now prove that the @xmath1-graphs satisfy a useful expansion property .",
    "the term @xmath659 occuring in its formulation is an error resulting from our approximations in @xmath0 .",
    "( in @xmath0)[expans ] if @xmath95 is @xmath1-graph with @xmath213 vertices @xmath660 and edges @xmath661 , then for every @xmath662 , @xmath663 where @xmath664 denotes the set of edges @xmath665 with @xmath666 .",
    "it suffices to show : @xmath667 let @xmath668 be the following vector : @xmath669 if @xmath670 and @xmath671 if @xmath672 . put @xmath673 for the random - walk matrix @xmath36 of @xmath95 .",
    "then , + @xmath674 . as @xmath36 s rows and columns",
    "sum up to one , we have also @xmath675 further , @xmath676 and @xmath677 so @xmath678 . by cauchy - schwarz inequality , @xmath679 .",
    "therefore , @xmath680 it remains to observe that @xmath681    in the following proposition we use the notion of probability @xmath294 on sets of polynomial size @xmath295 for @xmath213 .",
    "we assume that this is defined in @xmath0 in a natural way using an exact counting of sets of polynomial size @xmath682 which is also definable in @xmath0 in a usual way .",
    "this should not be confused with the definition of @xmath294 in @xmath5 .",
    "[ ecc ] for any @xmath683 , @xmath0 proves that for each @xmath1-graph @xmath95 with @xmath213 vertices @xmath660 , for any @xmath684 , @xmath685\\leq \\frac{|s|}{|v|}(\\frac{|s|}{|v|}+2\\lambda^l)\\ ] ] where @xmath686 denotes the set of all edges in @xmath687 .    for empty @xmath688",
    "the statement holds .",
    "otherwise put @xmath689 . if @xmath618 , then @xmath690 for the random - walk matrix @xmath36 of @xmath95 . as @xmath691 is the random - walk matrix of @xmath692-regular graph @xmath687 , @xmath693 and @xmath694 for @xmath668 . by the choice of @xmath695 ,",
    "this does not exceed the range @xmath696 and we can apply @xmath697 to obtain @xmath698 for any @xmath668 with @xmath618 .",
    "now , use the inequality from the proof of proposition [ expans ] : @xmath699 then , @xmath700=\\frac{1}{|v|}\\sigma^{|s|}_{m=1}(1-pr[j\\notin s|i = i_m])$ ] is @xmath701      sometimes we will need to use an assumption which has the form `` @xmath702 for @xmath617 '' even for @xmath10 s exceeding the range fixed by @xmath703 .",
    "we will now prove a simple approximation lemma which allows this in some cases .",
    "it illustrates a type of approximation which we use more often .",
    "the matrix @xmath36 in its formulation will not need to represent a random - walk matrix . in our applications",
    "@xmath36 will be a result of certain operations on random - walk matrices .",
    "[ flow](in @xmath0 ) let @xmath36 be an @xmath562 matrix of elements from @xmath704 , for @xmath213 .",
    "further , let @xmath705 .",
    "if @xmath706 for any @xmath617 , then for any @xmath572 , @xmath707    for @xmath572 and @xmath705 , define @xmath708 in the same way as @xmath127 but with @xmath582 redefined so that @xmath709 .",
    "it suffices now to approximate @xmath710 by @xmath711 with @xmath712 such that @xmath713 .",
    "then ,    @xmath714    @xmath715    the approximation : for each @xmath64 , @xmath716 so we can find @xmath717 ( i.e. @xmath0 can prove its existence ) such that @xmath718",
    ". then @xmath719 and for each @xmath720 , @xmath721 .",
    "hence , @xmath722 . as @xmath723",
    ", we can conclude @xmath724    using a similar approximation , we will derive one more useful lemma .    for any @xmath562 matrix @xmath36 with elements from @xmath725 , we say that @xmath726 iff for every @xmath617 , @xmath727 .",
    "[ myreorder ] for any @xmath728 and @xmath729 , @xmath0 proves the following .",
    "let @xmath36 be a random - walk matrix of a @xmath214-regular graph @xmath95 with @xmath213 vertices such that @xmath730 .",
    "let @xmath731 be @xmath562 matrix such that @xmath732 for every @xmath733 .",
    "then , @xmath734 for some @xmath113 with @xmath735    define @xmath736 @xmath737 .",
    "we want to prove that for any @xmath738 , @xmath739 .",
    "decompose @xmath10 as @xmath740 for some @xmath741 where @xmath742 .",
    "similarly as in proposition [ flow ] , approximate @xmath743 by vector @xmath119 with @xmath712 so that @xmath744 and @xmath745 .",
    "this time we can do it without the absolute value because all elements of @xmath36 are positive .",
    "note also that for @xmath729 the range of @xmath746 does not exceed @xmath703 .    since @xmath747 and @xmath748",
    ", we have @xmath749 . as @xmath750 , @xmath751 and @xmath752 . using @xmath753 and @xmath754 , we obtain ,    @xmath755    @xmath756      the explicit construction of the @xmath1-graphs needs two graph products , the tensor product and the replacement product , which we describe in this and the next section .",
    "more details about the tensor product and the replacement product can be found in ( * ? ? ?",
    "* section 21.3.3 ) resp .",
    "* section 21.3.4 ) .",
    "( in @xmath0 ) if @xmath757 is the @xmath562 random - walk matrix of @xmath214-degree graph @xmath95 and @xmath758 is the @xmath759 random - walk matrix of @xmath760-degree graph @xmath761 , then the random - walk matrix of @xmath762 , denoted as @xmath763 is the @xmath764 matrix that in the @xmath765th row and the @xmath766th column has the value @xmath767 .",
    "this means that @xmath762 has a cluster of @xmath768 vertices for every vertex in @xmath95 .",
    "if @xmath458 is an edge in @xmath95 and @xmath769 is an edge in @xmath761 , then there is an edge between the @xmath770-th vertex in the cluster corresponding to @xmath64 and the @xmath771-th vertex in the cluster corresponding to @xmath317 .",
    "therefore , @xmath762 has degree @xmath772 and @xmath773 vertices .",
    "we can see matrix @xmath763 as consisting of blocks of the form @xmath774 , that is , intuitively , @xmath763 is matrix @xmath36 with elements multiplied by copies of @xmath775 .    in peano arithmetic ,",
    "@xmath776 for regular graphs @xmath777 .",
    "the standard derivation of this bound uses the existence of an orthogonal basis of eigenvectors for symmetric matrices which uses the fundamental theorem of algebra ( applied to determinant of matrix @xmath778 consisting of exponentially many terms ) .",
    "we do not know how to formalize this in @xmath0 .",
    "instead , we will derive a weaker bound which is sufficient for our purposes .",
    "note first a simple consequence of cauchy - schwarz inequality .    ( in @xmath0 ) for every two @xmath562 matrices @xmath779 and @xmath572 where @xmath213 , we have @xmath780 .    @xmath781    @xmath782    and so @xmath780 .",
    "[ tens ] @xmath0 proves that if @xmath95 is a @xmath214-regular graph with @xmath213 vertices and @xmath761 is a @xmath760-regular graph with @xmath783 vertices such that @xmath784 , @xmath730 and @xmath785 , then @xmath786 ( note that @xmath0 does not need to know that @xmath639 or @xmath787 . )    let @xmath36 be the random - walk matrix of @xmath95 of the form @xmath562 and @xmath775 be the random - walk matrix of @xmath761 of the form @xmath759 . by proposition [ myreorder ] @xmath788 for some @xmath113 with @xmath735 and @xmath562 all @xmath789 matrix @xmath790 .",
    "similarly , @xmath791 for some @xmath234 with @xmath792 and @xmath759 all @xmath793 matrix @xmath794 .",
    "as tensor product satisfies @xmath795 and @xmath796 , for any @xmath797 we have ( @xmath267 ) :    @xmath798    @xmath799    if @xmath568 , then @xmath800 . if @xmath617 , @xmath801 where we used @xmath802 which follows from cauchy - schwarz inequality . therefore , @xmath803 and similarly @xmath804 .    if @xmath805 or @xmath806 , we can trivially upper bound the term corresponding to @xmath807 resp .",
    "@xmath808 in @xmath609 by 0 . in all cases ,",
    "to finish the proof it suffices to show that for any @xmath562 matrix @xmath809 , @xmath759 matrix @xmath810 such that @xmath811 , for any @xmath797 with @xmath567 , @xmath812 holds .    for any @xmath813 and @xmath814 $ ] define @xmath815 so that for each @xmath816 $ ] , @xmath817 then , @xmath818}||ax^i||^2 $ ] and as by proposition [ flow ] for each @xmath64 , + @xmath819 } ( x^i_j)^2 + 1/(ln'))((1 + 1/l)(1 + 2/l)+1/l)$ ] , we have , @xmath820}\\sigma_{j\\in [ n]}(x^i_j)^2)(1 + 6/l)\\ ] ] since also @xmath821 , for each @xmath816 $ ] , @xmath822}(\\sigma_{k\\in \\{n'(j-1)+1, ...",
    ",n'j\\}}b_{i,(k - n'(j-1))}x_k)^2\\leq ( \\frac{1}{ln}+\\sigma_{k\\in \\{n'(j-1)+1, ... ,n'j\\}}(x_k)^2)(1+\\frac{6}{l})\\ ] ] therefore , if @xmath567 , then @xmath823 , and @xmath812 .",
    "if @xmath95 is an @xmath49-vertex @xmath214-degree graph , we can give a number from 1 to @xmath214 to each neighbor of each vertex and then the rotation map @xmath824\\times [ d]\\mapsto [ n]\\times [ d]$ ] maps a pair @xmath825 to @xmath826 where @xmath259 is the @xmath64-th neighbor of @xmath827 and @xmath827 is the @xmath317-th neighbor of @xmath259 . using this rotation map",
    ", we define the replacement product .",
    "let @xmath777 be graphs such that @xmath95 has @xmath49 vertices and degree @xmath284 , and @xmath761 has @xmath284 vertices and degree @xmath214 .",
    "further , let @xmath828 denote the random - walk matrices of @xmath95 and @xmath761 respectively , and @xmath829 be the permutation matrix corresponding to the rotation map of @xmath95 which means that @xmath829 is an @xmath830 matrix whose @xmath458th column is all zeroes except a single 1 in the @xmath769 position where @xmath831",
    ". then the replacement product of @xmath95 and @xmath761 , denoted @xmath832 , is the graph with the random - walk matrix @xmath833 where @xmath834 is @xmath562 0 - 1 matrix with 1 s only on the diagonal .",
    "this means that @xmath832 has a copy of @xmath761 for every vertex in @xmath95 and if @xmath458 is an edge in @xmath95 then there are @xmath214 parallel edges between the @xmath770-th vertex in the copy of @xmath761 corresponding to @xmath64 and the @xmath771 vertex in the copy of @xmath761 corresponding to @xmath317 where @xmath770 is the index of @xmath317 as neighbor of @xmath64 and @xmath771 is the index of @xmath64 as neighbor of @xmath317 in @xmath95 .",
    "therefore , @xmath832 has degree @xmath835 and @xmath836 vertices .",
    "( in @xmath0)[repl ] let @xmath837 .",
    "suppose @xmath95 is a @xmath284-degree graph with @xmath213 vertices and @xmath761 is a @xmath214-degree graph with @xmath284 vertices . if @xmath838 and @xmath839 for @xmath213 , rational @xmath93 and rational @xmath840 $ ] , then @xmath841    in proposition [ repl ] , peano arithmetic could prove @xmath842 following the argument in arora - barak @xcite . in @xcite",
    "this is derived using the equation @xmath843 which uses the existence of an orthogonal basis of eigenvectors for symmetric matrices .",
    "again , in @xmath0 we prove just a weaker bound for @xmath844 ( i.e. not for the product @xmath845 but its power ) which is sufficient for our purposes .",
    "let @xmath36 resp .",
    "@xmath325 be the random - walk matrix of graph @xmath95 with @xmath49 vertices resp .",
    "graph @xmath846 with @xmath284 vertices and @xmath829 be the permutation matrix corresponding to the rotation map of @xmath95 . by definition , @xmath847 and @xmath848 by proposition [ myreorder ] , @xmath849 for some @xmath113 with @xmath735 and @xmath850 all @xmath851 matrix @xmath731 .",
    "therefore , @xmath852 since @xmath735 and @xmath853 , for any @xmath10 with @xmath854 , we have @xmath855 as in the proof of proposition [ tens ] .",
    "similarly , @xmath856 .",
    "if a matrix @xmath36 satisfies @xmath857 for @xmath854 , then for any @xmath325 and @xmath10 , @xmath858 . consequently , @xmath859 .    as @xmath860 , this shows that for any @xmath861 and @xmath840 $ ] , @xmath862 further , for any @xmath863 and @xmath840 $ ] , @xmath864 hence , @xmath865 , and using an analogous argument as above we can bound @xmath866 . for any @xmath867 ,",
    "@xmath868 observe that @xmath869 because @xmath870 is the random - walk matrix of a graph with the number of edges between its nodes @xmath458 and @xmath769 being the number of @xmath45 s in @xmath871 $ ] for which there is @xmath872 such that @xmath873 .",
    "that is , @xmath874 then , by proposition [ tens ] , for any @xmath863 such that @xmath875 ( and so @xmath876 ) we have : @xmath877 which completes the proof .      finally , we are ready to construct the @xmath1-graphs in the theory @xmath0 , see arora - barak ( * ? ? ?",
    "* chapter 21 ) for the history of the result .",
    "however , we will do it just for @xmath49 s of the form @xmath878 where @xmath119 is a constant and @xmath111 .",
    "it is possible to extend the construction to any @xmath49 ( cf .",
    "@xcite ) but at least a straightforward application of the extension requires algebraic techniques which we are avoiding .",
    "more specifically , it uses a converse of proposition [ expans ] which in turn uses facts about eigenvectors derived from the fundamental theorem of algebra . nevertheless , the weaker construction is sufficient to derive the pcp theorem in @xmath0 .",
    "[ cst ] for any rational @xmath879 there are @xmath880 and @xmath12 ( the constant from the definition of @xmath565 ) such that @xmath0 proves that for each @xmath111 and @xmath881 there is a @xmath882-regular graph @xmath883 with @xmath49 vertices and @xmath884 .    for @xmath879 ,",
    "let @xmath885 be such that @xmath886 and @xmath887 be a sufficiently big constant .",
    "then , define @xmath888-graphs in @xmath0 as follows .",
    "let @xmath846 be a @xmath889-graph where @xmath214 is a sufficiently big constant so that such a graph exists .",
    "let @xmath221 be a @xmath890-graph and @xmath891 be a @xmath892-graph .",
    "these graphs can be found by brute force , cf .",
    "more precisely , as our @xmath846 take the graph @xmath846 from the proof of theorem 21.19 in @xcite and as our @xmath893 take @xmath894 for @xmath893 from the same proof in @xcite .    \\2 . for @xmath895 with @xmath896 , define @xmath897    note that for given @xmath895 , @xmath898 is produced by a specific p - time computation which exists provably in @xmath0 .    for every @xmath895",
    ", @xmath898 is a @xmath899-graph .",
    "the claim is proved by @xmath69-lpind induction . as graphs",
    "@xmath898 are constructed by a p - time function , the statement we want to obtain is @xmath67 .",
    "hence , by @xmath67-conservativity of @xmath13 over @xmath0 , we can work in the theory @xmath13 ( which proves @xmath69-lpind ) .    for @xmath900",
    ", @xmath0 can verify the claim directly .",
    "for @xmath895 with @xmath901 , let @xmath902 be the number of vertices of @xmath898 . if @xmath903 and @xmath904 , then @xmath905 .",
    "considering the degree , if @xmath906 has degree @xmath882 , then @xmath907 has degree @xmath908 , @xmath909 has degree @xmath835 and @xmath898 has degree @xmath882 .    the eigenvalue analysis : if @xmath910 ( which is a @xmath69-formula ) , then assuming @xmath12 is sufficiently big , @xmath911 and by proposition [ tens ] @xmath912 .",
    "hence , by proposition [ repl ] , @xmath913 the conclusion @xmath914 is a consequence of the fact that the assumption @xmath697 implies @xmath915 ( where @xmath12 is quantified after @xmath880 so the term @xmath916 can be made arbitrarily small ) . to see that the implication holds , note that similarly as in the proof of proposition [ ecc ]",
    ", @xmath697 implies that for any @xmath917 with @xmath618 , we have @xmath918 where @xmath919 is the random - walk matrix of @xmath920 . we need a similar bound even for @xmath921 .",
    "fortunately , if @xmath922 , @xmath923 , we can again approximate @xmath10 by vector @xmath924 : for each @xmath64 , @xmath925 ( otherwise @xmath926 ) so we can find @xmath927 such that @xmath928 and @xmath929 .",
    "the values @xmath717 are produced provably in @xmath0 by a p - time algorithm which choses @xmath930 satisfying @xmath931 , then finds the smallest @xmath932 such that @xmath933 and puts @xmath934 .",
    "the chosen @xmath119 satisfies @xmath935 and @xmath936 . since also @xmath937",
    ", we have @xmath938 and @xmath939 thus , @xmath940 .    note that in the previous proposition , @xmath214 does not depend on @xmath12 and @xmath941 can be chosen arbitrarily big .",
    "the pcp theorem obtained in arora - safra @xcite and arora et.al .",
    "@xcite ( see arora - barak ( * ? ? ?",
    "* chapter 22 ) for the history of the theorem ) is a strengthening of the exponential pcp theorem in which the verifier @xmath284 uses only @xmath942 random bits . using these random bits , @xmath284 asks for at most @xmath358 bits of the given proof @xmath282 .",
    "hence , @xmath282 can be seen as a string of size @xmath295 . in particular , it can be represented by a binary string in our formalization .",
    "we will follow dinur s @xcite simplified proof of the pcp theorem as it is presented in arora - barak @xcite .",
    "this will go rather smoothly ( once we have a suitable formalization of the @xmath1-graphs ) because the proof is combinatorial and it needs to count only sets of polynomial size .",
    "these are subsets of @xmath943 where @xmath213 for which we assume to have exact counting in @xmath0 defined in a natural way .",
    "recall the verifier @xmath286 from definition [ dall ] . in the standard definition",
    ", @xmath282 would be allowed to be a string of arbitrary length and @xmath284 would have an oracular access to @xmath282 , it could ask for any bit of @xmath282 . then , for a language @xmath12 , @xmath944 standardly means that there is a p - time algorithm @xmath284 such that :    1 .   if @xmath357 , then there is a string @xmath282 such that @xmath284 with input @xmath10 of length @xmath49 and @xmath942 random bits asks for at most @xmath358 bits of @xmath282 and accepts ( with probability 1 ) ; 2 .   if @xmath359 , then for any @xmath282 , @xmath284 with input @xmath10 of length @xmath49 and @xmath942 random bits asks for at most @xmath358 bits of @xmath282 and accepts with probability @xmath360 .",
    "the pcp theorem says that @xmath945 . in our formalization",
    ", proofs @xmath282 will be represented by p - size strings , hence , the statement of the pcp theorem is modified accordingly . as in the case of the exponential pcp theorem",
    ", we could alternatively represent proofs @xmath282 by oracles which would maybe better reflect the nature of the pcp theorem but then we would need to formalize the pcp theorem in a theory extended by such oracles .    in this section we use the notion of probability @xmath294 on spaces of polynomial size @xmath295 which is assumed to be defined in a natural way using the exact counting of sets of polynomial size in @xmath0 .",
    "this should not be confused with the definition of @xmath294 in @xmath5 .",
    "first we formalize the easier implication of the pcp theorem : @xmath946 .",
    "let @xmath947 be arbitrary constants , then @xmath0 proves that for any @xmath285-time algorithm @xmath284 there exists @xmath948-time algorithm @xmath169 such that for each @xmath291 : @xmath949 @xmath950\\leq 1/2\\rightarrow \\forall y\\in\\{0,1\\}^{dn^c}\\ m(x , y)=0\\ ] ]    given a @xmath285-time algorithm @xmath284 , define the algorithm @xmath169 as follows .",
    "@xmath169 accepts @xmath321 if and only if @xmath951 with @xmath952 s in @xmath953 and for all the @xmath952 s the algorithm @xmath284 on input @xmath10 , random bits @xmath64 and with access to @xmath282 which results in @xmath214 bits @xmath952 accepts .",
    "suppose there is @xmath954 such that for each @xmath955 , @xmath284 on input @xmath10 with bits @xmath956 obtained from @xmath214-times accessing @xmath282 accepts .",
    "then for @xmath957 with @xmath958 we have that for each @xmath959 the algorithm @xmath284 on input @xmath10 and with access to @xmath282 which results in @xmath214 bits @xmath952 accepts",
    ". therefore , @xmath960",
    ".    now assume that for any @xmath298 , @xmath961\\preceq_0 1/2 $ ] .",
    "then for any @xmath957 with @xmath952 s in @xmath953 there is @xmath952 such that @xmath284 on @xmath10 , random bits @xmath64 , and with access to @xmath282 resulting in @xmath952 rejects .",
    "otherwise , for some @xmath298 we have @xmath962 contradicting the assumption . hence , @xmath963 .",
    "as the np - completeness of sat is provable in @xmath0 , the important implication of the pcp theorem , @xmath946 , can be stated in @xmath0 as theorem [ pcp ] .",
    "[ pcp ] there are constants @xmath302 and a @xmath285-time algorithm @xmath284 ( given as a pv - function ) computing as in definition [ dall ] such that @xmath0 proves that for any @xmath213 and @xmath291 , @xmath213 :    @xmath964 @xmath965\\leq 1/2\\ ] ]    the proof is summarized at the end of this section .",
    "it is a sequence of certain reductions between the so called csp instances ( csp stands for constraint satisfaction problem ) so we need to start with a reformulation of theorem [ pcp ] in terms of these reductions .",
    "let @xmath966 be constants , and @xmath84 .",
    "a @xmath967 instance @xmath263 is a collection of circuits @xmath968 ( called constraints ) mapping @xmath969^n$ ] to @xmath970 .",
    "each @xmath971 is encoded by a binary string , it has @xmath49 inputs which are taking values that are bit strings in @xmath972 but depends on at most @xmath217 of them : for every @xmath973 $ ] there exist @xmath974 $ ] and @xmath975 such that @xmath976 for every @xmath977^n$ ] .",
    "we say that @xmath217 is the arity of @xmath263 .",
    "by @xmath978 instance we mean a @xmath978 instance with binary alphabet .",
    "an assignment @xmath977^n$ ] satisfies @xmath971 if @xmath979 , and instance @xmath263 is satisfiable if @xmath980^n}\\frac{\\sigma^m_{i=1}\\phi_i(u)}{m}=1 $ ] .",
    "we will not need to prove the totality of the function @xmath981 in @xmath0 .",
    "it will be sufficient for us to work with formulas of the form @xmath982 which are @xmath68 .",
    "let @xmath983 be arbitrary constants .",
    "a p - time function @xmath39 ( given as a pv - function ) mapping @xmath967 instances to @xmath984 instances , abbreviated as @xmath985 , is a @xmath986-reduction ( short for complete linear - blowup reduction ) if for every @xmath967 instance @xmath263 :    * completeness : if @xmath263 is satisfiable then so is @xmath987 .",
    "* linear blowup : if there are @xmath157 constraints in @xmath263 , then @xmath987 has at most @xmath988 constraints and alphabet @xmath989 , where @xmath113 can depend on @xmath217 ( but not on @xmath157 or the number of variables in @xmath263 ) .    for a constant @xmath45 ,",
    "a function @xmath39 is @xmath990-reduction if it is a @xmath986-reduction computable in time @xmath285 .",
    "theorem [ pcp ] then follows from the following proposition .",
    "[ cc ] there are constants @xmath991 and a @xmath986-reduction @xmath992 such that @xmath0 proves that for every @xmath993 instance @xmath263 , every @xmath994 , @xmath995    ( of theorem [ pcp ] from proposition [ cc ] ) the statement we want to derive is a @xmath67-formula .",
    "hence , we can work in the theory @xmath13 .",
    "as @xmath996 , @xmath993 is a generalization of 3sat and by the np - completeness of 3sat ( derived similarly as the np - completeness of sat ) , for some @xmath872 , there is a @xmath283-time function @xmath270 mapping propositional formulas to @xmath993 instances such that for every @xmath213 and @xmath280 , @xmath997 and @xmath998 where @xmath999 is the number of constraints in @xmath1000 . applying proposition [ cc ] we obtain a @xmath285-time function @xmath1001 for some constant @xmath45 such that @xmath1002 here , we used @xmath68-llind ( available in @xmath13 ) for @xmath68-formulas @xmath1003 where @xmath1004 .",
    "therefore , for some constants @xmath1005 , and an algorithm @xmath1006 which given any formula @xmath10 and proof @xmath282 accepts if and only if @xmath282 encodes a satisfying assignment to randomly chosen constraint in @xmath1007 we have : @xmath1008&\\leq 1-\\epsilon_0 } \\ ] ] the gap can be amplified to 1/2 by choosing sufficiently many ( but constant number of ) constraints in @xmath1007 and accepting if and only if @xmath282 encodes satisfying assignments to all of them .",
    "this requires chernoff s bound but only over sets of polynomial size for which we have exact counting in @xmath0 .",
    "proposition [ cc ] is an immediate consequence of the following two statements .",
    "the first one provides us a @xmath986-reduction producing csp instances which increase the gap between 0 and the minimal number of unsatisfied constraints .",
    "however , the alphabet of the resulting instances increases too .",
    "the second statement takes it back to binary while losing just a factor of 3 in the gap .",
    "[ cc1 ] for every @xmath1009 there are @xmath1010 and a @xmath986-reduction @xmath1011 such that @xmath0 proves that for every @xmath978 instance @xmath263 and for every @xmath994 @xmath1012    [ cc2 ] there is @xmath214 such that for any @xmath460 there is a @xmath986-reduction @xmath1013 such that @xmath0 proves that for every @xmath1014 instance @xmath263 , and for each @xmath93 @xmath1015    proposition [ cc ] can be obtained from previous two propositions by taking @xmath1016 in proposition [ cc1 ] and @xmath1017 for @xmath214 from proposition [ cc2 ] .",
    "we firstly derive proposition [ cc2 ] using the following application of the exponential pcp theorem which is scaled down so that we need to reason only about sets of constant size .",
    "[ prox ] there are constants @xmath1018 and an algorithm @xmath284 such that for every @xmath100 , @xmath0 proves : given any @xmath100-size circuit @xmath113 with @xmath1019 inputs , @xmath284 runs in time @xmath1020 , examines @xmath1021 bits in the provided strings and    1 .",
    "if @xmath1022 for @xmath1023 , there is a string @xmath1024 of size @xmath1025 such that @xmath1026 2 .",
    "for bit strings @xmath1027 where @xmath1028 , @xmath1029 , if @xmath1030\\geq 1/2\\ ] ] then @xmath1031\\geq 0.99\\ \\mbox{and}\\     pr_{w<2^{n_1}}[(\\pi_2)_w = wh(u_2)(w)]\\geq 0.99\\ ] ] for some @xmath1032 such that @xmath1022 .",
    "( of proposition [ cc2 ] from proposition [ prox ] ) the @xmath986-reduction @xmath270 works as follows . let @xmath263 be a @xmath1014 instance with constraints @xmath1033 on variables @xmath1034 which are taking values that are in @xmath972 . each constraint @xmath1035 is a circuit applied to the bit strings representing @xmath1036 . without loss of generality",
    "@xmath1037 is an upper bound on the size of this circuit .",
    "given such @xmath263 , @xmath270 replaces each variable @xmath1038 by a sequence @xmath1039 of @xmath460 binary variables ( @xmath1040 is long enough to represent @xmath1041 ) .",
    "then , for each constraint @xmath1035 it applies proposition [ prox ] where @xmath1035 is the circuit whose assignment is being verified .",
    "the resulting @xmath1020-time algorithm @xmath284 can be represented as a @xmath1042-size @xmath1043 instance @xmath1044 where @xmath1045 play the role of @xmath1046 and @xmath1025 new binary variables @xmath1047 play the role of @xmath1024 .",
    "the arity @xmath214 of @xmath1048 is the number of bits @xmath284 reads in the proof which is a fixed constant independent of @xmath460 and @xmath93 .",
    "the instance @xmath1048 contains one constraint for each possible random string in @xmath284 , so the fraction of its satisfied constraints is the acceptance probability of @xmath284 .",
    "the @xmath986-reduction @xmath270 thus maps @xmath1014 instances @xmath263 to @xmath1043 instances @xmath1049 where each @xmath1035 is replaced by a @xmath1043 instance @xmath1048 . as @xmath1042 is a constant independent of @xmath157 and @xmath49 ,",
    "linear blowup is preserved .    if @xmath263 is satisfiable ,",
    "then by property 1 in proposition [ prox ] so is @xmath1049 .",
    "we want to show that if some assignment satisfies more than @xmath1050 fraction of the constraints in @xmath1049 , then we can construct an assignment for @xmath263 satisfying more then @xmath1051 fraction of its constraints : for each @xmath64 , if @xmath1040 is 0.99-close to some linear function @xmath1052 , i.e. @xmath1053\\geq 0.99 $ ] , then use ( the determined ) @xmath1054 as the assignment for @xmath1038 , and otherwise use arbitrary string .",
    "the algorithm is p - time because the size of each @xmath1040 is constant .",
    "if the decodings @xmath1055 of @xmath1045 do not satisfy @xmath1035 , then by property 2 in proposition [ prox ] at least half of constraints in @xmath1056 is not satisfied .",
    "hence , the fraction of unsatisfied constraints in @xmath263 is @xmath1057 .",
    "( of proposition [ prox ] ) @xmath0 can prove the statement from proposition [ prox ] simply by examining all possible cases of which there is a constant number .",
    "hence , the provability of the statement follows from it being true .",
    "nevertheless , we present also the standard proof itself .",
    "the algorithm @xmath284 firstly reduces the problem of satisfiability of the given circuit @xmath113 with @xmath100 wires ( inputs are considered as wires in the circuit ) to the question of solvability of a set of quadratic equations with @xmath1058 variables similarly as in the proof of the exponential pcp theorem . @xmath284",
    "expects @xmath1024 to contain linear functions @xmath200 which are @xmath1059 and @xmath1060 respectively for @xmath1061 satisfying the set of quadratic equations and checks these functions as in the exponential pcp theorem .",
    "moreover , @xmath284 checks that @xmath1062 and @xmath1063 are 0.99-close to some linear functions .",
    "that is , if @xmath284 accepts @xmath1027 with probability @xmath1064 , it is because the set of quadratic equations is satisfiable and @xmath1065\\geq 0.99 $ ] , @xmath1066\\geq 0.99 $ ] for some @xmath1032 .",
    "finally , @xmath284 checks that @xmath1046 encode strings whose concatenation is the same as the first @xmath1019 bits of the string encoded by @xmath39 ( without loss of generality the first @xmath1019 bits encode satisfying assignement for @xmath113 ) by performing the following concatenation test :    pick random @xmath1067 and denote by @xmath1068 the string whose first @xmath420 bits are @xmath10 , the next @xmath420 bits are @xmath164 and the remaining bits are all 0 .",
    "accept if and only if @xmath1069 .",
    "the algorithm @xmath284 runs in time @xmath1020 and examines @xmath1021 bits in @xmath1027 for some constants @xmath1070 .",
    "it satisfies the first property from proposition [ prox ] .",
    "moreover , assuming that @xmath1071 and @xmath165 is the string encoded by a linear function @xmath39 , the concatenation test rejects with probability 1/2 if @xmath1072 differs from the first @xmath1019 bits of @xmath165 .",
    "hence , if @xmath284 accepts @xmath1073 with probability @xmath1064 , it is because @xmath1046 are 0.99-close to linear functions encoding @xmath1074 such that @xmath1022 .    in the rest of this section",
    "we derive proposition [ cc1 ] . to do this",
    ", we will need two facts about probability :    [ stat ]    \\1 .",
    "let @xmath16 be a square and @xmath1075 be the binomial distribution over @xmath16 fair coins , i.e. @xmath1076=t!/((t - k)!k!)2^{-t}$ ] .",
    "then for @xmath1077 and any @xmath1078 such that @xmath1079 , @xmath0 proves : @xmath1080-pr[s_{t+(-1)^i\\lfloor\\delta\\sqrt{t}\\rfloor}=k]|\\leq 20\\delta\\ ] ]    \\2 . for any @xmath45 ,",
    "@xmath0 proves that for each @xmath213 , if @xmath660 is a nonnegative random variable defined on a sample space of size @xmath43 , then @xmath1081\\geq e[v]^2/e[v^2]$ ] .",
    "the first part of proposition [ stat ] is an estimation of a so called statistical distance of two binomial distributions which is known to hold ( see @xcite page 469 ) and as all its parameters are quantified outside of the theory @xmath0 , it is trivially provable by an explicit `` brute force '' enumeration .    the second part is obtained from a simple expansion : @xmath1082)^2=(e[x\\cdot 1_{x>0}])^2\\leq e[x^2 ] e[(1_{x>0})^2]=e[x^2]pr[x>0]\\ ] ] where we used a form of cauchy - schwarz inequality @xmath1083 ^ 2\\leq e[x^2]e[y^2]$ ] which can be derived in the same way as our cauchy - schwarz inequality from section [ rest ] but with @xmath1084 $ ] .",
    "the proof of proposition [ cc1 ] is divided into two parts .",
    "the first part shows how to reduce any @xmath978 instance into a @xmath1014 instance which is nice ( in a sense defined below ) and the second part gives us a cl - reduction from nice instances which amplifies the gap as it is required in proposition [ cc1 ] .",
    "( in @xmath0 )    1 .",
    "let @xmath263 be a @xmath1014 instance mapping @xmath969^n$ ] to @xmath970 .",
    "the constraint graph of @xmath263 is the graph @xmath95 with vertex set @xmath1085 $ ] where for every constraint @xmath263 depending on the variables @xmath1086 , the graph @xmath95 has the edge @xmath458 .",
    "@xmath95 is allowed to have parallel edges and self - loops .",
    "then @xmath95 is @xmath214-regular for some constant @xmath214 independent of @xmath460 , and at every node , at least half the edges incident to it are self - loops . 2 .",
    "a @xmath967 instance @xmath263 is nice if @xmath1087 and the constraint graph of @xmath263 denoted @xmath95 satisfies @xmath1088 .",
    "the reduction into nice instances which we need is a consequence of the following three propositions .",
    "[ n1 ] there is a constant @xmath45 such that for every @xmath217 there is a @xmath990-reduction @xmath1089 such that @xmath0 proves that for any @xmath978 instance @xmath263 and any @xmath93 @xmath1090    the @xmath990 reduction works as follows .",
    "given @xmath978 instance @xmath263 over @xmath49 variables @xmath1034 with @xmath157 constraints , it produces @xmath1091 instance @xmath1049 over the variables @xmath1034 , @xmath1092 such that for each @xmath971 in @xmath263 depending on the variables @xmath1093 , @xmath1049 contains @xmath217 constraints @xmath1094 where @xmath1095 is true iff @xmath952 encodes an assignment to @xmath1093 satisfying @xmath971 and @xmath1096 agrees with the assignment @xmath952 .    the number of constraints in @xmath1049 is @xmath1097 and if @xmath1049 is satisfiable , then so is @xmath1049 .",
    "suppose that @xmath1098 and let @xmath1099 be any assignment to @xmath1049 . by the assumtion , there is a set @xmath1100 $ ] of size @xmath1101 such that all constraints @xmath1102 are violated by @xmath1034 .",
    "then , for any @xmath670 there is @xmath1103 $ ] such that @xmath1104 is violated .",
    "[ n2 ] there are constants @xmath1105 such that for every @xmath460 there is a @xmath990-reduction @xmath1106 such that @xmath0 proves that for any @xmath1014 instance @xmath263 , and any @xmath93 @xmath1107 and the constraint graph of @xmath1108 is @xmath214-regular .    by proposition [ cst ] and proposition [ expans ]",
    "there are constants @xmath1109 such that for each @xmath1110 , there is a @xmath214-regular graph @xmath1111 which for any @xmath1112 satisfies @xmath1113 .",
    "in particular , for each @xmath460 and @xmath1114 , @xmath1115 , we have ( @xmath267 ) : @xmath1116",
    ".    the @xmath990-reduction @xmath270 works as follows .",
    "let @xmath263 be a @xmath1014 instance .",
    "first , erase variables in @xmath263 that do not appear in any constraint .",
    "suppose next that @xmath1117 is a variable that appears in @xmath1118 constraints .",
    "put @xmath1119 for the smallest natural @xmath16 such that @xmath1120 .",
    "replace @xmath1117 by @xmath119 variables @xmath1121 so that in each constraint @xmath1117 originally appeared in we have different @xmath1122 ( different @xmath119 s might be needed for each @xmath1117 ) .",
    "add a constraint requiring that @xmath1123 for every edge @xmath1124 in the graph @xmath1125 .",
    "do this for every variable in @xmath263 until each variable appears in @xmath1126 constraints , @xmath214 equality constraints and one original constraint resp . a null constraint that always accepts which is added if necessary .",
    "denote the resulting @xmath1014 instance as @xmath1049 ( @xmath1127 ) .    if @xmath263 has @xmath157 constraints , @xmath1049 has @xmath1128 constraints ( @xmath157",
    "original constraints , @xmath1129 null constraints and @xmath1130 `` @xmath1123 '' constraints ) .",
    "if @xmath263 is satisfiable , then so is @xmath1049 .",
    "suppose that @xmath1098 and let @xmath164 be any assignment to @xmath1049 .",
    "consider then the plurality assignment @xmath259 to @xmath263 s variables : @xmath1038 gets the most likely value that is claimed for it by @xmath1131 .",
    "define @xmath1132 to be the number of @xmath1133 s that disagree with the plurality value of @xmath1038 .    if @xmath1134 , then by ( @xmath267 ) there are @xmath1135 equality constraints violated in @xmath1049 .",
    "suppose that @xmath1136 .",
    "since @xmath1098 , there are @xmath1101 constraints in @xmath263 violated by @xmath259 .",
    "all of these constraints are also present in @xmath1049 . if more than @xmath1137 of them were assigned a different value by @xmath164 than by @xmath259 , then @xmath1138 .",
    "thus @xmath164 violates @xmath1139 constraints in @xmath1049 .",
    "note that all the sets we counted had polynomial size so we had exact counting for them in @xmath0 .",
    "[ n3 ] there are constants @xmath1140 such that for any @xmath1141 there is a @xmath990-reduction @xmath1106 such that @xmath0 proves that for any @xmath1014 instance @xmath263 with @xmath760-regular constraint graph for @xmath1142 and for any @xmath93 , @xmath1143 moreover , the constraint graph @xmath95 of @xmath1108 is @xmath1144-regular with at least half the edges coming out of each vertex being self - loops and @xmath1088 .    by proposition [ cst ]",
    "there are constants @xmath1109 such that for each @xmath1145 where @xmath1146 , there is a @xmath214-regular graph @xmath1111 in @xmath0 with @xmath1147 .",
    "the @xmath990-reduction @xmath270 works as follows .",
    "let @xmath263 be a @xmath1014-instance with @xmath49 variables , @xmath157 constraints , and @xmath760-regular constraint graph @xmath761 for @xmath1148 .",
    "without loss of generality @xmath1149 . otherwise , @xmath263 contains variables that are not in any constraint so @xmath1150 and @xmath263 is empty .",
    "add new vertices and self - loops to @xmath761 so that it becomes @xmath214-regular with @xmath1145 vertices for the smallest @xmath1151 .",
    "for each of these new vertices add new variables and for the new self - loops add null constraints that always accept . then add null constraints for every edge in the graph @xmath1111 .",
    "finally , add @xmath835 null constraints forming self - loops for each vertex in @xmath1111 .",
    "the resulting instance @xmath1049(=@xmath1108 ) has @xmath1144-regular constraint graph with @xmath1152 constraints , and at least half the edges coming out of each vertex being self - loops . assuming @xmath1153 , there are @xmath1154 violated constraints in @xmath1049 .",
    "let @xmath95 be @xmath1049 s constraint graph and @xmath36 its random - walk matrix .",
    "then @xmath1155 for @xmath113 the random - walk matrix of @xmath1111 and @xmath325 the random walk matrix of a @xmath1156-regular graph . in section [ sec : tens ] , we observed that for any @xmath572 , @xmath1157 and by proposition [ eps ] , for any @xmath1158 , @xmath1159 .",
    "thus , assuming @xmath1078 is sufficiently small and @xmath12 sufficiently big , @xmath1160 .",
    "note that the constant @xmath214 from proposition [ n3 ] can be chosen so that it is bigger than the constant @xmath214 from proposition [ n2 ] . therefore",
    ", propositions [ n1 ] , [ n2 ] and [ n3 ] show that there are constants @xmath1140 such that for any @xmath217 ( and @xmath1161 ) there is a @xmath990-reduction @xmath1089 such that @xmath0 proves that @xmath270 maps any @xmath978 instance into an instance which is nice with the constraint graph being @xmath214-regular while the fraction of violated constraints is reduced by a factor at most @xmath1162 .",
    "this shows that to derive proposition @xmath1163 it suffices to prove the following powering proposition :    [ pprop ] there is @xmath45 such that for any @xmath1164 and sufficiently big square @xmath1165 there is an algorithm @xmath36 with properties described below such that @xmath0 proves that for any nice @xmath1014 instance @xmath1049 with @xmath49 variables with @xmath213 the algorithm @xmath36 produces a @xmath1166 instance @xmath1167 such that :    1 .",
    "@xmath1168 , where @xmath214 is the degree of @xmath1049 s constraint graph .",
    "the instance @xmath1167 has @xmath1169 constraints .",
    "if @xmath1049 is satisfiable , then so is @xmath1167 .",
    "3 .   for every @xmath1170 , @xmath1171 4 .",
    "the formula @xmath1167 is produced from @xmath1049 ( by @xmath36 ) in time @xmath1172 .",
    "( it might be helpful to the reader to consult the proof we present here in conjunction with the exposition from ( * ? ? ? * lemma 22.9 ) where some concepts are explained with additional details . )",
    "let @xmath1049 be a @xmath1014 instance with @xmath49 variables @xmath1034 and @xmath1173 constraints and let @xmath95 denote the constraint graph of @xmath1049 .    the formula @xmath1167 will have @xmath49 variables @xmath1174 over an alphabet of size @xmath1175 .",
    "a value of a variable @xmath952 is a @xmath1176-tuple of values in @xmath1177 and we will think of it as giving a value @xmath1178 in @xmath1177 to every variable @xmath1179 in @xmath1049 where @xmath317 can be reached from @xmath64 using a path of @xmath1180 steps in @xmath95 . since @xmath95 is @xmath214-regular the number of such nodes is @xmath1181 .    for every path @xmath1182 in @xmath95 we will have a constraint @xmath256 in @xmath1167 depending on variables @xmath1183 and @xmath1184 which outputs 0 if and only if there is some @xmath1185 $ ] such that    \\1 .",
    "@xmath1186 can be reached from @xmath1187 using a path of @xmath1180 steps in @xmath95    \\2 .",
    "@xmath1188 can be reached from @xmath1189 using a path of @xmath1190 steps n @xmath95    \\3 . @xmath1191",
    "violate the constraint in @xmath1049 depending on @xmath1192 and @xmath1193    the @xmath1166 instance @xmath1167 can be produced in time @xmath1172 and has @xmath1169 constraints .",
    "any assignment @xmath1034 satisfying @xmath1049 induces an assignment @xmath1174 satisfying @xmath1167 : each @xmath952 encodes values @xmath1179 for @xmath317 s that can be reached from @xmath64 by @xmath1180 steps in @xmath95 .",
    "therefore , it remains to show that for @xmath1170 , @xmath1194 .",
    "every assignment @xmath164 for @xmath1167 induces the so called plurality assignment @xmath259 for @xmath1049 : @xmath1038 gets the value @xmath1195 which is the most likely value @xmath1196 for @xmath1197 s where @xmath45 is obtained by taking a @xmath16-step random walk from @xmath64 in @xmath95",
    ". if more than one value is most likely , take the lexicographically first one .",
    "suppose that @xmath1198 , then there is a set @xmath268 of @xmath1199 constraints violated by the plurality assignment .",
    "pick a random path @xmath1182 in @xmath95 .",
    "for @xmath1200 we say that the edge @xmath1201 in @xmath241 is truthful if @xmath1202 and @xmath1203 .",
    "let @xmath1204 and denote by @xmath660 the number of edges in @xmath1205 that are truthful and in @xmath268 .",
    "that is , @xmath660 is a nonnegative random variable defined on a sample space of size @xmath295 .",
    "if there is at least one such edge , the corresponding constraint in @xmath1167 is unsatisfied so we want to show that @xmath1206\\geq \\epsilon\\sqrt{t}/(10 ^ 6dw^5)$ ] .    for each edge @xmath885 of @xmath95 and each @xmath1207 , @xmath1208=1/m$ ]",
    ", i.e. each edge has the same probability to be the @xmath317-th edge in @xmath241 .    for any edge @xmath885 of @xmath95 and any @xmath1209 , @xmath1210\\geq 1/(2w^2)\\ ] ]    to prove the claim , let @xmath1187 be the endpoint of a random walk @xmath1211 of length @xmath317 out of @xmath1186 and @xmath1189 be the endpoint of a random walk @xmath1212 of length @xmath1213 out of @xmath1188 .",
    "we need to show that @xmath1214pr_{p_2}[y_{i_{2t+2}}(u_{i_{j+1}})=\\sigma y(u_{i_{j+1}})]\\geq 1/(2w^2)\\ ] ] since half of the edges incident to each vertex are self - loops , we can see an @xmath720-step random walk from a vertex @xmath64 as follows :    1 .",
    "throw @xmath720 fair coins and let @xmath1215 denote the number of  heads \" ; 2 .",
    "take @xmath1215 non - self - loop steps along the graph .",
    "denote by @xmath1216 the length of a path @xmath241 not counting self - loops .",
    "then , @xmath1217 & = \\sigma_l pr[s_j = l]pr_{p_1}[l(p_1)=l\\wedge y_{i_1}(u_{i_j})=\\sigma y(u_{i_j})]\\cr & \\geq \\sigma_lpr[s_t = l]pr_{p_1}[l(p_1)=l\\wedge y_{i_1}(u_{i_j})=\\sigma y(u_{i_j})]-20\\delta\\cr & \\geq 1/w-20\\delta } \\ ] ] where the first inequality results from proposition  [ stat ] , while the last inequality follows from the definition of the plurality assignment which implies that for @xmath1218 , @xmath1219\\geq 1/w$ ]",
    ". similarly we obtain @xmath1220\\geq ( 1/w-20\\delta).\\ ] ] this proves our claim .",
    "the claim implies @xmath1221\\geq |f|/(m2w^2)$ ] for any @xmath317 from @xmath1222 . without a loss of generality , @xmath1223 is @xmath1224 .",
    "thus by linearity of expectation ,",
    "@xmath1225\\geq \\epsilon\\lceil\\delta\\sqrt{t}\\rceil /(2w^2)\\ ] ] by proposition [ stat ] 2",
    ". , @xmath1081\\geq e[v]^2/e[v^2]$ ] , so to conclude the proof it suffices to show that @xmath1226\\leq 50d\\epsilon\\lceil\\delta\\sqrt{t}\\rceil$ ] .",
    "denote by @xmath1227 the number of edges in @xmath1205 that are in @xmath268 . for any @xmath317 from @xmath1222",
    "put @xmath1228 iff @xmath1229 .",
    "further , let @xmath688 be the set of vertices contained in an edge from @xmath268 . then , assuming that the constant @xmath12 from our definition of @xmath565 satisfies @xmath1230 and @xmath1231 , @xmath1232 & \\leq e[v'^2]\\cr & = e[\\sigma_{j , j'}i_ji_{j'}]\\cr & = e[\\sigma_j i^2_j]+e[\\sigma_{j\\neq j'}i_ji_{j'}]\\cr & = \\epsilon\\lceil\\delta\\sqrt{t}\\rceil+2\\sigma_{j < j'}pr_p[(i_j , i_{j+1})\\in f\\wedge ( i_{j'},i_{j'+1})\\in f ] \\cr   & \\leq \\epsilon\\lceil\\delta\\sqrt{t}\\rceil+2\\sigma_{j < j'}pr_{(i_j , i_{j'})\\in g^{j'-j}}[i_j\\in s\\wedge i_{j'}\\in s]\\cr & \\leq   \\epsilon\\lceil\\delta\\sqrt{t}\\rceil+2\\sigma_{j < j'}\\epsilon d(\\epsilon d+2\\cdot 0.9^{j'-j } ) \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\   \\mbox{by\\ proposition\\ \\ref{ecc}}\\cr & \\leq \\epsilon\\lceil\\delta\\sqrt{t}\\rceil+2\\epsilon^2d^2\\lceil\\delta",
    "\\sqrt{t}\\rceil^2 + 40\\epsilon d\\lceil\\delta\\sqrt{t}\\rceil\\leq 50\\epsilon d\\lceil\\delta\\sqrt{t}\\rceil \\ \\ \\ \\ \\ \\ \\mbox{using \\ } \\epsilon < 1/(d\\sqrt{t})\\rlap{\\hbox to 24 pt{\\hfill\\qed } } } \\ ] ]    this concludes our formalization of the pcp theorem in the theory @xmath0 .",
    "it can be briefly summarized as follows . in theorem [ pcp ] we formulated the pcp theorem as a @xmath67-formula .",
    "thus , by @xmath67-conservativity of @xmath13 over @xmath0 we could afford to work instead in the theory @xmath13 .",
    "specifically , we used @xmath68-llind induction available in @xmath13 to show that the pcp theorem is a consequence of a statement about csp instances , proposition [ cc ] .",
    "then we observed that the csp formulation of the pcp theorem is a collorary of two propositions , gap amplification [ cc1 ] and alphabet reduction [ cc2 ] .",
    "the latter one was an application of the exponential pcp theorem in a scaled - down setting where we needed to count only sets of constant size , hence it was provable already in @xmath0 .",
    "the gap amplification was a consequence of a cl - reduction into nice csp instances and powering proposition [ pprop ] .",
    "the reduction to nice instances used the @xmath1-graphs which we constructed in section [ rest ] .",
    "section [ rest ] contained the most challenging part where we needed to employ certain approximating tools to reason about algebraic definitions of pseudorandom constructions in @xmath0 . in the remaining part of the proof of the pcp theorem , including the powering proposition",
    ", we were mainly verifying step by step that the reasoning used in the standard proof does not exceed the possibilities of the theory @xmath0 .",
    "i would like to thank jan krajek for many constructive discussions during the development of the paper and sam buss for detailed comments and suggestions which improved the quality of the manuscript .",
    "i would also like to thank neil thapen , pavel pudlk and emil jebek for comments and suggestions during its seminar presentation .",
    "this research was supported by grants ga uk 5732/2014 and svv-2014 - 260107 .",
    "pich j. ; circuit lower bounds in bounded arithmetics , annals of pure and applied logic , 166(1 ) , 2015 .",
    "razborov a.a . ; bounded arithmetic and lower bounds in boolean complexity , feasible mathematics ii , pp .",
    "344 - 386 , 1995 ."
  ],
  "abstract_text": [
    "<S> we present several known formalizations of theorems from computational complexity in bounded arithmetic and formalize the pcp theorem in the theory @xmath0 ( no formalization of this theorem was known ) . </S>",
    "<S> this includes a formalization of the existence and of some properties of the @xmath1-graphs in @xmath0 . </S>"
  ]
}
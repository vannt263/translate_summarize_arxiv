{
  "article_text": [
    "1 : :    m.a .",
    "nielsen and i.l .",
    "chuang , _ quantum computation and quantum    information_. cambridge university press , 2000 . 2 : :    a.k .",
    "ekert , `` quantum cryptography based on bell s theorem . ''",
    "lett . , * 67 , * 661 - 663 ( 1991 ) .",
    "3 : :    s. kak , `` quantum key distribution using three basis states . ''",
    "pramana , * 54 , * 709 - 713 ( 2000 ) ; also quant - ph/9902038 .",
    "4 : :    a. poppe _",
    "et al _ , `` practical quantum key distribution with    polarization entangled photons . ''",
    "quant - ph/0404115 .",
    "5 : :    k. svozil , `` the interlock protocol can not save quantum cryptography    from man - in - the - middle attacks . ''",
    "quant - ph/0501062 ."
  ],
  "abstract_text": [
    "<S> we present a three - stage quantum cryptographic protocol based on public key cryptography in which each party uses its own secret key . unlike the bb84 protocol , where the qubits are transmitted in only one direction and classical information exchanged thereafter , </S>",
    "<S> the communication in the proposed protocol remains quantum in each stage . </S>",
    "<S> a related system of key distribution is also described .    </S>",
    "<S> psfig # 1      this paper presents a quantum protocol based on public key cryptogrpahy for secure transmission of data over a public channel . </S>",
    "<S> the security of the protocol derives from the fact that alice and bob each use secret keys in the multiple exchange of the qubit .    unlike the bb84 protocol [ 1 ] and its many variants ( e.g. [ 2]-[4 ] ) , where the qubits are transmitted in only one direction and classical information exchanged thereafter , </S>",
    "<S> the communication in the proposed protocol remains quantum in each stage . in the bb84 protocol , </S>",
    "<S> each transmitted qubit is in one of four different states ; in the proposed protocol , the transmitted qubit can be in any arbitrary state .      </S>",
    "<S> consider the arrangement of figure 1 to transfer state @xmath0 from alice to bob . </S>",
    "<S> the state @xmath0 is one of two orthogonal states , such as @xmath1 and @xmath2 , or @xmath3 and @xmath4 , or @xmath5 and @xmath6 . </S>",
    "<S> the orthogonal states of @xmath0 represent @xmath7 and @xmath8 by prior mutual agreement of the parties , and this is the data or the cryptographic key being transmitted over the public channel .    </S>",
    "<S> alice and bob apply secret transformations @xmath9 and @xmath10 which are commutative , i.e. , @xmath11 . </S>",
    "<S> an example of this would be @xmath12 and @xmath13 , each of which is the rotation operator :    @xmath14 $ ]    the sequence of operations in the protocol is as follows :    1 .   </S>",
    "<S> alice applies the transformation @xmath9 on @xmath0 and sends the qubit to bob . </S>",
    "<S> 2 .   bob applies @xmath10 on the received qubit @xmath15 and sends it back to alice . </S>",
    "<S> 3 .   </S>",
    "<S> alice applies @xmath16 on the received qubit , converting it to @xmath17 , and forwards it to bob . </S>",
    "<S> 4 .   </S>",
    "<S> bob applies @xmath18 on the qubit , converting it to @xmath0 .    at the end of the sequence , </S>",
    "<S> the state @xmath0 , which was chosen by alice and transmitted over a public channel , has reached bob .    </S>",
    "<S> eve , the eavesdropper , can not obtain any information by intercepting the transmitted qubits , although she could disrupt the exchange by replacing the transmitted qubits by her own . </S>",
    "<S> this can be detected by    * appending parity bits , and/or * appending previously chosen bit sequences , which could be the destination and sending addresses or their hashed values , or some other mutually agreed sequence .    </S>",
    "<S> since the @xmath19 transformations can be changed as frequently as one pleases , eve can not obtain any statistical clues to their nature by intercepting the qubits .      </S>",
    "<S> a related key distribution protocol is given in figure 2 . </S>",
    "<S> unlike the previous case , @xmath0 is a fixed public state ( say @xmath20 or @xmath21 ) . </S>",
    "<S> the objective is to generate a key that is a function of the transformations involved , which is not chosen in advance by either party . </S>",
    "<S> the protocol consists of two stages :    1 .   </S>",
    "<S> alice and bob use secret transformations , @xmath9 and @xmath10 , on the known state @xmath0 , and exchange these qubits . </S>",
    "<S> 2 .   </S>",
    "<S> they again apply the same transformations on the received qubits , thereby each getting @xmath22 , since @xmath11 . </S>",
    "<S> it is assumed that neither alice or bob will measure the received qubits , and will use them as the input to a quantum register .    in a variant of this scheme , </S>",
    "<S> two copies of the unknown state @xmath0 may be supplied to alice and bob by a key registration authority .      </S>",
    "<S> the three - stage protocol provides perfect security in the exchange of data over a public channel under the assumptions that a separate classical protocol ensures the identity of the two parties , and errors ( deliberate or random ) are detected by means of parity check and confirming that a known bit sequence that was appended to the bits has arrived correctly .    </S>",
    "<S> since the proposed protocol does not use classical communication , it is immune to the man - in - the - middle attack on the classical communication channel which bb84 type quantum cryptography protocols suffers from [ 5 ] . on the other hand , implementation of this protocol </S>",
    "<S> may be harder because the qubits get exchanged multiple times . </S>"
  ]
}
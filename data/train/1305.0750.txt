{
  "article_text": [
    "label placement is an important problem in cartography and , more generally , information visualization .",
    "features such as points , lines , and regions in maps , diagrams , and technical drawings often have to be labeled so that users understand better what they see .",
    "even very restricted versions of the label - placement problem are np - hard  @xcite , which explains why labeling a map manually is a tedious task that has been estimated to take 50% of total map production time  @xcite .",
    "the acm computational geometry impact task force report  @xcite identified label placement as an important research area . the point - labeling problem in particular",
    "has received considerable attention , from practitioners and theoreticians alike .",
    "the latter have proposed approximation algorithms for various objectives ( label number versus label size ) , label shapes ( such as axis - parallel rectangles or disks ) , and label - placement models ( so - called fixed - position models versus slider models ) .",
    "the traditional label - placement models for point labeling require that a label is placed such that a point on its boundary coincides with the point to be labeled , the _ site_. this can make it impossible to label all sites with labels of sufficient size if some sites are very close together .",
    "for this reason , freeman et al .",
    "@xcite and zoraster @xcite advocated the use of _ leaders _ , ( usually short ) line segments that connect sites to labels . in order to ensure that the background image or map remains visible even in the presence of large labels , bekos et al .",
    "@xcite took a more radical approach .",
    "they introduced models and algorithms for _ boundary labeling _",
    ", where all labels are placed beyond the boundary of the map and are connected to the sites by straight - line or rectilinear leaders ( see fig .",
    "[ fig : example ] ) .",
    ".42     .425     +    .32    [ [ sub : definition ] ] problem statement .",
    "+ + + + + + + + + + + + + + + + + +    following bekos et al .",
    "@xcite we define the boundary labeling problem as follows .",
    "we are given an axis - parallel rectangle @xmath2\\times[0,h]$ ] , which is called the _ enclosing rectangle _",
    ", a set  @xmath3 of  @xmath0 points @xmath4 , called _ sites _ , within the rectangle  @xmath1 , and a set  @xmath5 of  @xmath6 axis - parallel rectangles @xmath7 of equal size , called",
    "_ labels_. the labels lie in the complement of  @xmath1 and touch the boundary of  @xmath1 .",
    "no two labels overlap .",
    "we denote an instance of the problem by the triplet  @xmath8 .",
    "solution _ of a problem instance is a set of  @xmath9 curves  @xmath10 in the interior of  @xmath1 , called _ leaders _",
    ", that connect sites to labels such that the leaders    induce a matching between the labels and ( a subset of ) the sites ,    touch the associated labels on the boundary of  @xmath1 .",
    "following previous work , we do not define labels as the text associated with the sites , but as the empty rectangles into which that text will be placed ( during a post - processing step ) .",
    "this approach is justified by our assumption that all label rectangles have the same size .",
    "a solution is _ planar _ if the leaders do not intersect .",
    "we call an instance _ solvable _ if a planar solution exists . note that we do not prescribe which site connects to which label .",
    "the endpoint of a curve at a label is called a _ port_. we distinguish two versions of the boundary labeling problem : either the position of the ports on the boundary of  @xmath1 is fixed and part of the input , or the ports _ slide _ , i.e. , their exact location is not prescribed .",
    "we restrict our solutions to _",
    "@xmath11-leaders _ , that is , starting at a site , the first line segment of a leader is parallel ( @xmath12 ) to the side of  @xmath1 touching the label it leads to , and the second line segment is orthogonal ( @xmath13 ) to that side ; see fig .",
    "[ sfg : po ] .",
    "[ sfg : opo ] shows a labeling with so - called _",
    "@xmath14-leaders _ , which were investigated by bekos et al .",
    "bekos et al .",
    "16 ) observed that not every instance admits a planar solution with @xmath11-leaders in which all sites are labeled ( even if @xmath15 ) .",
    "[ [ previous - and - related - work . ] ] previous and related work .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + +    for  @xmath11-labeling , bekos et al .",
    "@xcite gave a simple quadratic - time algorithm for the one - sided case that , in a first pass , produces a labeling of minimum total leader length by matching sites and ports from bottom to top . in a second pass , their algorithm removes all intersections without increasing the total leader length .",
    "this result was improved by benkert et al .",
    "@xcite who gave an  @xmath16-time algorithm for the same objective function and an  @xmath17-time algorithm for a very general class of objective functions , including , for example , bend minimization .",
    "they extend the latter result to the two - sided case ( with labels on opposite sides of  @xmath1 ) , resulting in an  @xmath18-time algorithm .",
    "for the special case of leader - length minimization , bekos et al .",
    "@xcite gave a simple dynamic program running in @xmath19 time .",
    "all these algorithms work both for fixed and sliding ports .",
    "leaders that contain a diagonal part have been studied by benkert et al .",
    "@xcite and by bekos et al .",
    "recently , nllenburg et al .",
    "@xcite have investigated a dynamic scenario for the one - sided case , gemsa et al .",
    "@xcite have used multi - layer boundary labeling to label panorama images , and fink et al .  @xcite have boundary labeled focus regions , for example , in interactive on - line maps .",
    "lin et al .",
    "@xcite consider boundary labeling where more than one site may be labeled by the same label .",
    "lin  @xcite and bekos et al .",
    "@xcite study hyperleaders that connect each label to a set of sites .    at its core",
    ", the boundary labeling problem asks for a non - intersecting perfect ( or maximum ) matching on a bipartite graph .",
    "note that an instance may have a planar solution , although all of its leader - length minimal matchings have crossings .",
    "in fact , the ratio between a length - minimal solution and a length - minimal crossing - free matching can be arbitrarily bad ; see fig .  [",
    "fig : crossmatching ] .",
    "when connecting points and sites with straight - line segments , the minimum euclidean matching is necessarily crossing - free . for this case",
    "an @xmath20-time @xmath21-space algorithm exists  @xcite .",
    "we can make the ratio between the length - minimal matching and the length - minimal crossing - free matching arbitrarily small . ]",
    "boundary labeling can also be seen as a graph - drawing problem where the class of graphs to be drawn is restricted to matchings .",
    "the restriction concerning the positions of the graph vertices ( that is , sites and ports ) has been studied for less restricted graph classes under the name _ point - set embeddability ( pse ) _ , usually following the straight - line drawing convention for edges  @xcite . for polygonal edges , bastert and fekete  @xcite proved that pse with minimum number of bends or minimum total edge length is np - hard , even when the graph is a matching . for minimizing the total edge length and the same graph class , liebling et al .",
    "@xcite introduced heuristics and chan et al .",
    "@xcite presented approximation algorithms .",
    "chan et al .  also considered paths and general planar graphs .",
    "pse has also been combined with the ortho - geodesic drawing convention  @xcite , which generalizes  @xmath11-labeling by allowing edges to have more than one bend .",
    "the case where the mapping between ports and sites is given has been studied in vlsi layout @xcite .",
    "[ [ our - contribution . ] ] our contribution .",
    "+ + + + + + + + + + + + + + + + +    in the first part of the paper , we investigate the problem two - sided boundary labeling with adjacent sides where all labels lie on two _ adjacent _ sides of  @xmath1 , without loss of generality , on the top and right side .",
    "note that point data often comes in a coordinate system ; then it is natural to have labels on adjacent sides ( for example , opposite the coordinate axes ) .",
    "we argue that this problem is more difficult than the case where labels lie on opposite sides , which has been studied before : with labels on opposite sides , ( a )  there is always a solution where all sites are labeled ( if @xmath22 ) and ( b )  a feasible solution can be obtained by considering two instances of the one - sided case .",
    "we present an algorithm that , given an instance with  @xmath0 labels and  @xmath0 sites , decides whether a planar solution exists where all sites are labeled and , if yes , it computes a layout of the leaders ( see section  [ sec : two - sided - algorithm ] ) .",
    "our algorithm uses dynamic programming to `` guess '' a partition of the sites into the two sets that are connected to the leaders on the top side and on the right side .",
    "the algorithm runs in  @xmath19 time and uses  @xmath23 space .",
    "we study several extensions of our main result ( see section  [ sec : two - sided - extensions ] ) .",
    "first , we show that our approach for fixed ports can also be made to work for sliding ports .",
    "second , we solve the label - number maximization problem ( in @xmath24 time using @xmath25 space ) .",
    "this is interesting if the position of the sites and labels does not allow for a perfect matching or if there are more sites than labels .",
    "finally , we present a modification of our algorithm that minimizes the leader length ( in  @xmath26 time and  @xmath27 space ) .    in the second part of the paper , we investigate the problems three - sided boundary labeling and four - sided boundary labeling where the labels may lie on three or even all four sides of  @xmath1 , respectively . to that end",
    "we generalize the concept of partitioning the sites labeled by leaders of different sides . in this way we obtain subinstances that we can solve using the algorithm for the two - sided case .",
    "we obtain an algorithm solving the four - sided case in @xmath28 time and  @xmath23 space and an algorithm solving the three - sided case in @xmath25 time and  @xmath23 space . except for the leader - length minimization",
    ", all extensions presented previously extend to the three- and four - sided case , of course with a corresponding impact on the running  time .",
    "[ [ notation . ] ] notation .",
    "+ + + + + + + + +    we call the labels that lie on the right ( left / top / bottom ) side of @xmath1 _ right ( left / top / bottom ) labels_. the _ type _ of a label refers to the side of  @xmath1 on which it is located .",
    "the _ type _ of a leader ( or a site ) is simply the type of its label .",
    "we assume that no two sites lie on the same horizontal or vertical line , and no site lies on a horizontal or vertical line through a port or an edge of a label .    for a solution  @xmath29 of a boundary labeling problem , we define several measures that will be used to compare different solutions .",
    "we denote the total length of all leaders in  @xmath29 by  @xmath30 .",
    "moreover , we denote by  @xmath31 the total length of all horizontal segments of leaders that connect a left or right label to a site .",
    "similarly , we denote by  @xmath32 the total length of the vertical segments of leaders that connect top or bottom labels to sites .",
    "note that generally ,  @xmath33 .",
    "we denote the ( uniquely defined ) leader connecting a site  @xmath12 to a port  @xmath34 of a label  @xmath35 by  @xmath36 .",
    "we denote the bend of the leader  @xmath36 by  @xmath37 . in the case of fixed ports ,",
    "we identify ports with labels and simply write  @xmath38 and  @xmath39 , respectively .",
    "in this section , we attack the two - sided boundary labeling problem with adjacent sides by presenting a series of structural results of increasing strength . we assume that the labels are located on the top and right sides of  @xmath1 . for simplicity",
    ", we assume that we have fixed ports . by identifying the ports with their labels , we use  @xmath5 to denote the set of ports of all labels . for sliding ports , we can simply fix all ports to the bottom - left corner of their corresponding labels .",
    "first we show that a planar two - sided solution admits a transformation sustaining planarity such that the result of the transformation can be split it into two one - sided solutions by constructing an @xmath40-monotone , rectilinear curve from the top - right to the bottom - left corner of  @xmath1 ; see fig .",
    "[ fig : xysep ] .",
    "afterwards , we provide a necessary and sufficient criterion to decide whether there exists a planar solution for a given separation .",
    "this will form the basis of our dynamic programming algorithm , which we present in section  [ sec : two - sided - algorithm ] .",
    "[ lem : boxlemma ] consider a solution  @xmath41 for  @xmath8 and let  @xmath42 be sites of the same type .",
    "let  @xmath43 be the set of labels of the sites in  @xmath44 .",
    "let  @xmath45 be a rectangle that contains all bends of the leaders of  @xmath44 . if the leaders of  @xmath46 do not intersect  @xmath47 , then we can rematch  @xmath44 and  @xmath48 such that the resulting solution  @xmath49 has the following properties :    all intersections in  @xmath47 are removed ,    there are no new intersections of leaders outside of  @xmath47 ,    @xmath50 , @xmath51 , and    @xmath52 .    without loss of generality",
    ", we assume that  @xmath44 contains top sites ; the other cases are symmetric .",
    "we first prove that , no matter how we change the assignment between  @xmath44 and  @xmath48 , new intersection points can arise only in  @xmath47 .",
    "this enables us to construct the required solution .",
    "[ clm : boxclaim ] let  @xmath53 and  @xmath54 such that  @xmath35 labels  @xmath12 and  @xmath55 labels  @xmath56 . changing the matching by rerouting  @xmath12 to  @xmath55 and  @xmath56 to  @xmath35",
    "does not introduce new intersections outside of  @xmath47 .",
    "let  @xmath57 be the rectangle spanned by  @xmath39 and  @xmath58 .",
    "when rerouting , we replace  @xmath59 restricted to the boundary of  @xmath60 by its complement with respect to the boundary of  @xmath60 ; see fig .",
    "[ fig : boxclaim ] for an example .",
    "thus , any changes concerning the leaders occur only in  @xmath60 .",
    "the statement of the claim follows .    .",
    "rerouting  @xmath38 and  @xmath61 to  @xmath62 and @xmath63 changes leaders only on the boundary of  @xmath60 , title=\"fig : \" ] . rerouting  @xmath38 and  @xmath61 to  @xmath62 and @xmath63 changes leaders only on the boundary of  @xmath60 , title=\"fig : \" ]",
    "[ fig : boxclaim ]    since any rerouting can be seen as a sequence of pairwise reroutings , the above claim shows that we can rematch  @xmath48 and  @xmath44 arbitrarily without running the risk of creating new conflicts outside of  @xmath47 . to resolve the conflicts inside  @xmath47 , we use the length - minimization algorithm for one - sided boundary labeling by benkert et al .",
    "@xcite , with the sites and ports outside  @xmath47 projected onto the boundary of  @xmath47 .",
    "thus , we obtain a solution  @xmath64 satisfying properties  ( i)(iv ) .",
    "[ def : xysep ] we call an @xmath40-monotone , rectilinear curve connecting the top - right to the bottom - left corner of  @xmath1 an _ @xmath40-separating curve_. we say that a planar solution to two - sided boundary labeling with adjacent sides is _ @xmath40-separated _ if and only if there exists an @xmath40-separating curve  @xmath65 such that    the sites that are connected to the top side and all their leaders lie on or above  @xmath65    the sites that are connected to the right side and all their leaders lie below  @xmath65 .",
    "it is not hard to see that a planar solution is not @xmath40-separated if there exists a site  @xmath12 that is labeled to the right side and a site  @xmath66 that is labeled to the top side with  @xmath67 and @xmath68 .",
    "there are exactly four patterns in a possible planar solution that satisfy this condition ; see fig .  [",
    "fig : patterns ] . in lemma",
    "[ lem : xysep ] , we show that these patterns are the only ones that can violate @xmath40-separability",
    ".    -separated . ]    .23 -separated.,title=\"fig : \" ]    .23 -separated.,title=\"fig : \" ]    .23 -separated.,title=\"fig : \" ]    .23 -separated.,title=\"fig : \" ]    [ lem : xysep ] a planar solution is @xmath40-separated if and only if it does not contain any of the patterns p1p4 in fig .",
    "[ fig : patterns ] .",
    "obviously , the planar solution is not @xmath40-separated if one of these patterns occurs .",
    "let us assume that none of these patterns exists .",
    "we construct an @xmath40-monotone curve  @xmath65 from the top - right corner of  @xmath1 to its bottom - left corner .",
    "we move to the left whenever possible , and down only when we reach the @xmath69-coordinate of a site  @xmath12 that is connected to the top , or when we reach the @xmath69-coordinate of a port of a top label , labeling a site  @xmath12 . if we have to move down , we move down as far as necessary to avoid the corresponding leader , namely down to the @xmath70-coordinate of  @xmath12 . finally , when we reach the left boundary of  @xmath1 , we move down to the bottom - left corner of  @xmath1 . if @xmath65 is free of crossings , then we have found an @xmath40-separating curve .",
    "( for an example , see curve  @xmath65 in fig .",
    "[ fig : xysep ] . )",
    "assume for a contradiction , that a crossing arises during the construction , and consider the topmost such crossing .",
    "note that , by the construction of  @xmath65 , crossings can only occur with leaders that connect a site  @xmath12 to a right port  @xmath71 .",
    "we distinguish two cases , based on whether the crossing occurs on a horizontal or a vertical segment of the curve  @xmath65 .",
    "if  @xmath65 is crossed on a vertical segment , then this segment belongs to a leader connecting a site  @xmath66 to a top port  @xmath34 , and we have reached the @xmath69-coordinate of either the port or the site . had we , however , reached the @xmath69-coordinate of the port , this would imply a crossing between  @xmath72 and  @xmath73 .",
    "thus , we have reached the @xmath69-coordinate of  @xmath66 .",
    "this means that  @xmath12 lies to the left of and above  @xmath66 , and we have found one of the patterns   and  ; see fig .",
    "[ fig : patterns ] .",
    "if  @xmath65 is crossed on a horizontal segment , then  @xmath12 must lie above  @xmath71 .",
    "otherwise , there would be another crossing of  @xmath65 with the same leader , which is above the current one .",
    "this would contradict the choice of the topmost crossing .",
    "consider the previous segment of  @xmath65 , which is responsible for reaching the @xmath70-coordinate of the current segment .",
    "this vertical segment belongs to a leader connecting a site  @xmath66 to a top port  @xmath34 . since leaders do not cross , @xmath66 is to the right of  @xmath12 , and the crossing on  @xmath65 implies that  @xmath66 is below  @xmath12 .",
    "we have found one of the patterns   and  ; see fig .",
    "[ fig : patterns ] .",
    "observe that patterns   and   can be transformed into patterns   and  , respectively , by mirroring the instance diagonally .",
    "next , we prove constructively that , by rerouting pairs of leaders , any planar solution can be transformed into an @xmath40-separated planar solution .",
    "[ prop : solut ] if there exists a planar solution  @xmath74 to two - sided boundary labeling with adjacent sides , then there exists an @xmath40-separated planar solution @xmath64 with  @xmath75 , @xmath76 , and @xmath77 .",
    "let  @xmath74 be a planar solution of minimum total leader length .",
    "we show that @xmath29 is @xmath40-separated .",
    "assume , for the sake of contradiction , that  @xmath29 is not @xmath40-separated .",
    "then , by lemma  [ lem : xysep ] , @xmath29 contains one of the patterns  . without loss of generality , we can assume that the pattern is of type   or  . otherwise , we mirror the instance diagonally .",
    "consider all patterns  @xmath78 in @xmath74 of type   or   such that @xmath12 is a right site ( with port  @xmath71 ) and  @xmath66 is a top site ( with port  @xmath34 ) . among all such patterns ,",
    "consider the ones where  @xmath12 is rightmost and among these pick one where  @xmath66 is bottommost .",
    "let  @xmath79 be the rectangle spanned by  @xmath12 and  @xmath34 ; see fig .",
    "[ fig : eliminate ] .. let  @xmath80 be the rectangle spanned by  @xmath81 and  @xmath12 . let  @xmath82 be the rectangle spanned by  @xmath66 and  @xmath71 .",
    "let  @xmath83 be the rectangle spanned by  @xmath66 and  @xmath84 .",
    "then we claim the following :    sites in the interiors of  @xmath79 and  @xmath80 are connected to the top .",
    "sites in the interiors of  @xmath82 and  @xmath83 are connected to the right .",
    "property  ( i ) is due to the choice of  @xmath12 as the rightmost site involved in such a pattern .",
    "similarly , property  ( ii ) is due to the choice of  @xmath66 as the bottommost site that forms a pattern with  @xmath12 .",
    "this settles our claim .",
    "our goal is to change the labeling by rerouting  @xmath12 to  @xmath34 and  @xmath66 to  @xmath71 , which decreases the total leader length , but may introduce crossings .",
    "we then use lemma  [ lem : boxlemma ] to remove the crossings without increasing the total leader length .",
    "let  @xmath85 be the labeling obtained from  @xmath74 by rerouting  @xmath12 to  @xmath34 and  @xmath66 to  @xmath71 .",
    "we have  @xmath86 and  @xmath87 .",
    "moreover ,  @xmath88 , as at least twice the vertical distance between  @xmath12 and  @xmath66 is saved ; see fig .  [",
    "fig : eliminate ] . since the original labeling was planar , crossings may only arise on the horizontal segment of  @xmath36 and on the vertical segment of  @xmath89 .",
    ".48 = @xmath90 / right@xmath91=@xmath92 ) of the sites inside rectangles  @xmath79 , @xmath80 , @xmath82 , and  @xmath83.,title=\"fig : \" ]    .48 = @xmath90 / right@xmath91=@xmath92 ) of the sites inside rectangles  @xmath79 , @xmath80 , @xmath82 , and  @xmath83.,title=\"fig : \" ]    by properties ( i ) and ( ii ) , all leaders that cross the new leader  @xmath36 have their bends inside  @xmath80 , and all leaders that cross the new leader  @xmath89 have their bends inside  @xmath83 .",
    "thus , we can apply lemma  [ lem : boxlemma ] to the rectangles  @xmath80 and  @xmath83 to resolve all new crossings .",
    "the resulting solution  @xmath64 is planar and has length less than  @xmath93 .",
    "this is a contradiction to the choice of  @xmath74 .",
    ".32   is satisfied by  @xmath12 . )",
    "the horizontal segments of  @xmath65 partition the strips  @xmath94 . )  constructing a planar labeling from a sequence of valid rectangles.,title=\"fig : \" ]    .32   is satisfied by  @xmath12 . )  the horizontal segments of  @xmath65 partition the strips  @xmath94 . )  constructing a planar labeling from a sequence of valid rectangles.,title=\"fig : \" ]    .32   is satisfied by  @xmath12 . )  the horizontal segments of  @xmath65 partition the strips  @xmath94 . )  constructing a planar labeling from a sequence of valid rectangles.,title=\"fig : \" ]    since every solvable instance of two - sided boundary labeling with adjacent sides admits an @xmath40-separated planar solution , it suffices to search for such a solution .",
    "moreover , an @xmath40-separated planar solution that minimizes the total leader length is a solution of minimum length . in lemma  [ lem :",
    "condit ] we provide a necessary and sufficient criterion to decide whether , for a given @xmath40-monotone curve  @xmath65 , there is a planar solution that is separated by  @xmath65 .",
    "we denote the region of  @xmath1 above  @xmath65 by  @xmath95 and the region of  @xmath1 below  @xmath65 by  @xmath96 .",
    "we do not include @xmath65 in either @xmath95 or  @xmath96 , so these regions are open at  @xmath65 .",
    "for any point  @xmath12 , we define the rectangle  @xmath97 , spanned by the top - right corner of  @xmath1 and  @xmath12 .",
    "we define  @xmath97 such that it is closed but does _ not _ contain its top - left corner . in particular , we consider the port of a top label as contained in  @xmath97 , only if it is not the upper left corner .",
    "a rectangle  @xmath97 is _ valid _ if the number of sites of  @xmath98 above  @xmath65 that belong to  @xmath97 is at least as large as the number of ports on the top side of  @xmath97 .",
    "the central idea is that the sites of  @xmath98 inside a valid rectangle  @xmath97 can be connected to labels on the top side of the valid rectangle by leaders that are completely contained inside the rectangle .",
    "we are now ready to present the _ strip condition_.    the _ horizontal strip condition _ of the point  @xmath99 is satisfied if there exists a point  @xmath100 with  @xmath101 and  @xmath102 such that  @xmath103 is valid .    without loss of generality",
    "we may assume that the curve  @xmath65 is rectilinear .",
    "we observe that for the horizontal strip condition , it is sufficient to consider the horizontal segments of  @xmath65 .",
    "those horizontal segments induce a partition of  @xmath1 into horizontal strips , which give the condition its name .",
    "we now prove that , for a given @xmath40-monotone curve  @xmath65 connecting the top - right corner to the bottom - left corner of  @xmath1 , there exists a planar solution in  @xmath95 for the top labels if and only if all points of  @xmath65 satisfy the strip condition .",
    "[ lem : condit ] let  @xmath65 be an @xmath40-monotone curve from the top - right corner of  @xmath1 to the bottom - left corner of  @xmath1 .",
    "let  @xmath104 be the sites that are in  @xmath95 .",
    "there is a planar solution that uses all top labels of  @xmath1 to label sites in  @xmath44 in such a way that all leaders are in  @xmath95 if and only if each each point of  @xmath65 satisfies the strip condition .    for the proof we call a region  @xmath105 _ balanced _ if it contains the same number of sites as it contains ports .",
    "to show that the conditions are necessary , let  @xmath74 be a planar solution for which all top leaders are above  @xmath65 . consider point  @xmath99 . if @xmath106 for all sites  @xmath107 , rectangle  @xmath103 with @xmath108 is clearly valid , and thus the strip condition for  @xmath66 is satisfied .",
    "hence , assume that there is a site  @xmath109 with  @xmath110 that is labeled by a top label ; see fig .",
    "[ fig : strips : onesided : case1 ] .",
    "then , the vertical segment of this leader crosses the horizontal line  @xmath111 through  @xmath66",
    ". let  @xmath12 denote the rightmost such crossing of a leader of a site in  @xmath44 with  @xmath111 .",
    "we claim that  @xmath103 is valid . to see this , observe that all sites of  @xmath44 top - right of  @xmath12 are contained in  @xmath103 . since no leader may cross the vertical segments defining  @xmath12 , the number of sites in  @xmath112 is balanced , i.e. , @xmath103 is valid .",
    "conversely , we show that if the conditions are satisfied , then a corresponding planar solution exists . for each horizontal segment of",
    "@xmath65 consider the horizontal line through the segment .",
    "we denote the part of these lines within  @xmath1 by  @xmath113 , respectively , and let  @xmath114 be the top side of  @xmath1 .",
    "the line segments  @xmath113 partition  @xmath95 into  @xmath115 strips , which we denote by  @xmath116 from top to bottom , such that strip  @xmath117 is bounded by  @xmath118 from below for  @xmath119 ; see fig .",
    "[ fig : strips : onesided : case2 ] . additionally , we define  @xmath120 to be the empty strip that coincides with  @xmath114 .",
    "let  @xmath121 be the last strip that contains sites of  @xmath44 .",
    "for  @xmath122 , let  @xmath123 denote the rightmost point of  @xmath124 such that  @xmath125 is valid .",
    "such a point exists since the leftmost point of  @xmath126 satisfies the strip condition .",
    "we define  @xmath127 to be the point on  @xmath128 , whose @xmath69-coordinate is  @xmath129 . note that  @xmath130 is a valid rectangle , as , by definition , it completely contains some valid rectangle  @xmath131 with  @xmath132 . also by definition the sequence formed by the points  @xmath127 has decreasing  @xmath69-coordinates ,",
    "i.e. , the @xmath130 grow to the left ; see fig .  [",
    "fig : strips : onesided : case3 ] .",
    "we prove inductively that , for each  @xmath133 , there is a planar labeling  @xmath134 that matches the labels on the top side of  @xmath130 to points contained in  @xmath130 , in such a way that there exists an  @xmath40-monotone curve  @xmath135 from the top - left to the bottom - right corner of  @xmath130 that separates the labeled sites from the unlabeled sites without intersecting any leaders .",
    "then  @xmath136 is the required labeling .    for  @xmath137 ,",
    "@xmath138 is a planar solution .",
    "consider a strip  @xmath117 with  @xmath139 ; see fig .",
    "[ fig : strips : onesided : case3 ] . by the induction hypothesis",
    ", we have a curve  @xmath140 and a planar labeling  @xmath141 , which matches the labels on the top side of  @xmath142 to the sites in  @xmath142 above  @xmath140 . to extend it to a planar solution  @xmath134",
    ", we additionally need to match the remaining labels on the top side of  @xmath130 and construct a corresponding curve  @xmath135 .",
    "let  @xmath143 denote the set of unlabeled sites in  @xmath130 . by the validity of  @xmath130 ,",
    "this number is at least as large as the number of unused ports at the top side of  @xmath130 .",
    "we match these ports from left to right to the topmost sites of  @xmath143 ; the result is the required planar labeling  @xmath134 .",
    "the ordering ensures that no two of the new leaders cross .",
    "moreover , no leader crosses the curve  @xmath140 , and hence such leaders can not cross leaders in  @xmath141 .",
    "it remains to construct the curve  @xmath135 . for this , we start at the top - left corner of  @xmath130 and move down vertically , until we have passed all labeled sites .",
    "we then move right until we either hit  @xmath140 or the right side of  @xmath1 . in the former case",
    ", we follow  @xmath140 until we arrive at the right side of  @xmath1 . finally , we move down until we arrive at the bottom - right corner of  @xmath130 .",
    "note that all labeled sites are above  @xmath135 , unlabeled sites are below  @xmath135 , and no leader is crossed by  @xmath135 .",
    "this is true since we first move below the new leaders and then follow the previous curve  @xmath140 .    a symmetric strip condition ( with vertical strips )",
    "can be obtained for the right region  @xmath96 of a partitioned instance .",
    "the characterization is completely symmetric .    in the following",
    "we observe two properties of the strip condition .",
    "the first observation states that the horizontal strip condition at  @xmath144 is independent of the exact shape of the curve between the top - right corner  @xmath71 of @xmath1 and  @xmath144 , as long as the number of sites above the curve remains the same .",
    "this is crucial for using dynamic programming to test the existence of a suitable curve .",
    "the second observation states that the horizontal strip condition can only be violated when the curve passes the @xmath69-coordinate of a top site .",
    "this enables us to discretize the problem .",
    "[ obs : stripnumber ] the horizontal strip condition for a point  @xmath99 depends only on the number of sites in  @xmath145 above  @xmath65 , in the following sense : let  @xmath65 and  @xmath146 be two @xmath40-monotone curves from  @xmath71 to  @xmath66 with  @xmath147 sites in  @xmath145 above  @xmath65 and  @xmath146 , respectively .",
    "then , @xmath66 satisfies the strip condition for  @xmath65 if and only if it satisfies the strip condition for  @xmath146 .",
    "[ obs : stripwalk ] let  @xmath148 such that there is no top site  @xmath35 with  @xmath149 .",
    "then , @xmath66 satisfies the horizontal strip condition for  @xmath65 if and only if  @xmath150 satisfies the horizontal strip condition for  @xmath65 .",
    "symmetric statements hold for the vertical strip condition . in the following ,",
    "we say that a point  @xmath144 on a curve  @xmath65 satisfies the _ strip condition _ if it satisfies both the horizontal and the vertical strip condition .",
    "how can we find an @xmath40-monotone curve  @xmath65 that satisfies the strip conditions ?",
    "for that purpose we only consider @xmath40-monotone curves contained in some graph @xmath151 that is dual to the rectangular grid induced by the sites and ports of the given instance .",
    "note that this is not a restriction since all leaders are contained in the grid induced by the sites and ports .",
    "thus , every @xmath40-monotone curve that does not intersect the leaders can be transformed into an equivalent @xmath40-monotone curve that lies on  @xmath151 .    when traversing an edge  @xmath152 of  @xmath151 , we pass the @xmath69- or @xmath70-coordinate of exactly one entity of our instance ; either a site ( _ site event _ ) or a port ( _ port event _ ) .",
    "when passing a site , the position of the site relative to  @xmath152 ( above / below @xmath152 or right / left of @xmath152 ) decides whether the site is connected to the top or to the right side .",
    "clearly , there is an exponential number of possible @xmath40-monotone traversals through the grid . in the following ,",
    "we describe a dynamic program that finds an @xmath40-separating curve in  @xmath17 time .",
    "let  @xmath153  and  @xmath154 be the numbers of ports on the right and top side of  @xmath1 , respectively .",
    "also , let @xmath155 and @xmath156 , then the grid  @xmath151 has size  @xmath157 .",
    "we define the grid points as @xmath158 , @xmath159 , @xmath160 with  @xmath161 being the bottom - left and  @xmath162 being the top - right corner of  @xmath1 .",
    "finally , let  @xmath163 and  @xmath164 .     and",
    "@xmath165 defined by grid point  @xmath166 . ]    for each grid point  @xmath166 that is neither on the topmost row nor on the rightmost column , we define four boxes  @xmath167 and  @xmath165 as follows ; see fig .  [",
    "fig : fourboxes ] for an illustration .",
    "@xmath168    @xmath169    @xmath170    @xmath171    we define a table  @xmath172 $ ] that assigns to each grid position  @xmath166 and number of points  @xmath147 and  @xmath173 a boolean value .",
    "we define  @xmath174 $ ] to be @xmath175 if and only if there exists an @xmath40-monotone curve  @xmath65 satisfying the following conditions .",
    "curve  @xmath65 starts at  @xmath71 and ends at  @xmath158 .    inside the rectangle spanned by  @xmath71 and  @xmath158 , there are  @xmath147 sites of  @xmath98 above  @xmath65 and  @xmath173 sites of  @xmath98 below  @xmath65 .    for each grid point on  @xmath65 , the strip condition holds .    these conditions together with proposition  [ prop : solut ] and lemma  [ lem : condit ]",
    "imply that the instance admits a planar solution if and only if @xmath176={\\ensuremath\\mathtt{true}}$ ] for some @xmath147 and  @xmath173 .",
    "we define a boolean function  @xmath177 $ ] that is true if and only if the strip condition at  @xmath166 is satisfied for some @xmath40-monotone curve  @xmath65 ( and thus by observation  [ obs : stripnumber ] for all such curves ) from  @xmath71 to  @xmath158 with  @xmath147 sites above and  @xmath173 sites below  @xmath65 .",
    "the following lemma gives a recurrence for  @xmath178 , which is essentially a disjunction of two values , each of which is determined by distinguishing three cases .",
    "[ lem : recurrence ] for @xmath179 and  @xmath180 , it holds that @xmath181={\\ensuremath\\mathtt{true}}$ ] . for @xmath182",
    "$ ] and @xmath183 $ ] , it holds that    [ cols=\"^ , < \" , ]     we show equivalence of the two terms .",
    "let  @xmath65 be an @xmath40-monotone curve from  @xmath71 to  @xmath166 .",
    "let  @xmath152 be the last segment of  @xmath65 and let  @xmath184 .",
    "since  @xmath65 is @xmath40-monotone , @xmath146 ends either at the grid point @xmath185 or at @xmath186 . without loss of generality , we assume that  @xmath146 ends at  @xmath185 .",
    "we show that  @xmath172={\\ensuremath\\mathtt{true}}$ ] if and only if the first term of the right hand side is @xmath175 .",
    "analogous arguments apply for  @xmath146 ending at  @xmath186 and the second term .",
    "note that , by construction , property ( i ) is satisfied for  @xmath65 and  @xmath146 .",
    "we distinguish cases based on whether the traversal along the segment  @xmath152 from  @xmath185 to  @xmath166 is a port event or a site event .",
    "* case 1 : * traversal of  @xmath152 is a port event . since  @xmath152 passes a port ,",
    "all sites that lie in the rectangle spanned by  @xmath71 and  @xmath158 also lie in the rectangle spanned by  @xmath71 and  @xmath187 .",
    "thus , the numbers  @xmath147 and  @xmath173 of such sites above and below  @xmath65 is the same as the numbers of sites above and below  @xmath146 , respectively .",
    "hence , property ( ii ) holds for  @xmath65 if and only if it holds for  @xmath146 .",
    "because  @xmath146 is a subset of  @xmath65 , the strip condition holds for every point of  @xmath65 if and only if it holds for every point of  @xmath146 and for  @xmath166 .",
    "thus , property ( iii ) is satisfied for  @xmath65 if and only if it is satisfied for  @xmath146 and @xmath177={\\ensuremath\\mathtt{true}}$ ] .",
    "* case 2 : * traversal of  @xmath152 passes a site  @xmath12 . for property ( iii ) , observe that , since the traversal of  @xmath152 is a site event , the strip conditions for  @xmath166 and  @xmath185 are equivalent by observation  [ obs : stripwalk ] .",
    "for property ( ii ) , note that , except for  @xmath12 , the sites that lie in the rectangle spanned by  @xmath71 and  @xmath158 also lie in the rectangle spanned by  @xmath71 and  @xmath187 .",
    "if  @xmath12 lies above  @xmath152 , there are  @xmath147 sites above and  @xmath173 sites below  @xmath65 if and only if there are  @xmath188 sites above and  @xmath173 sites below  @xmath146 , respectively .",
    "symmetrically , if  @xmath12 lies below  @xmath152 , there are  @xmath147 sites above and  @xmath173 sites below  @xmath65 if and only if there are  @xmath147 sites above and  @xmath189 sites below  @xmath146 , respectively . in either case",
    ", @xmath65 satisfies condition ( ii ) if and only if  @xmath146 does .",
    "clearly , the recurrence from lemma  [ lem : recurrence ] can be used to compute  @xmath178 in polynomial time via dynamic programming .",
    "note that it suffices to store  @xmath147 , as the number of sites below the curve  @xmath65 can directly be derived from  @xmath147 and all sites that are contained in the rectangle spanned by  @xmath71 and  @xmath158 .",
    "thus , in the following we work with  @xmath190 $ ] .",
    "the running time crucially relies on the number of strip conditions that need to be checked .",
    "we show that after a @xmath19 preprocessing phase , such queries can be answered in  @xmath191 time .",
    "to implement the test of the strip conditions , we use a table  @xmath192 , which stores in  @xmath193 $ ] how large a deficit of sites to the right can be compensated by sites above and to the left of  @xmath158 .",
    "that is ,  @xmath193 $ ] is the maximum value  @xmath115 such that there exists a rectangle  @xmath194}$ ] with lower right corner  @xmath158 whose top side is bounded by the top side of  @xmath1 , and that contains  @xmath115 more sites in its interior , than it has ports on its top side .",
    "once we have computed this matrix , it is possible to query the strip condition in the dynamic program that computes  @xmath178 in  @xmath191 time as follows : assume we have an entry  @xmath190 $ ] , and we wish to check its strip condition .",
    "consider a curve  @xmath65 from  @xmath71 to  @xmath158 such that  @xmath147 sites are above  @xmath65 .",
    "the strip condition is satisfied if and only if  @xmath195 $ ] is at least as large as the number of top ports to the right of  @xmath158 .",
    "this is true if the rectangle spanned by the lower left corner of  @xmath194}$ ] and  @xmath71 contains at least  @xmath195 $ ] sites , which is an upper bound on the number of ports on the top side of that rectangle .",
    "we now show how to compute  @xmath192 in  @xmath19 time .",
    "we compute each row separately , starting from the left side .",
    "we initialize  @xmath196 = 0 $ ] for  @xmath197 , since in the final column , no deficit can be compensated .",
    "the matrix  @xmath82 can be filled by a horizontal sweep .",
    "the entry  @xmath193 $ ] can be derived from the already computed entry  @xmath198 $ ] . if the step from  @xmath199 to  @xmath200 is a site event , the amount of the deficit we can compensate increases by  1 . if it is a port event the amount of the deficit we can compensate decreases by  1",
    ". moreover , the compensation potential never goes below  0 .",
    "we obtain @xmath201= \\begin{cases }    b_{\\mathrm{t}}[s-1,t ] + 1 & \\text{if step is site event } , \\\\",
    "\\max\\{b_{\\mathrm{t}}[s-1,t ] - 1,0\\ } & \\text{if step is port event}. \\\\ \\end{cases}\\ ] ] the table can be clearly filled out in @xmath19 time .",
    "a similar matrix  @xmath202 can be computed for the vertical strips .",
    "altogether , this yields an algorithm for two - sided boundary labeling with adjacent sides that runs in  @xmath17 time and uses  @xmath17 space .",
    "however , the entries of each row and column of  @xmath178 depend only on the previous row and column , which allows us to reduce the storage requirement to  @xmath19 . using hirschberg s algorithm  @xcite",
    ", we can still backtrack the dynamic program and find a solution corresponding to an entry in the last cell in the same running time .",
    "we have the following theorem .",
    "[ thm : two - sided - correct ] two - sided boundary labeling with adjacent sides can be solved in  @xmath17 time using  @xmath19 space .",
    "our next goal is to improve the performance of our algorithm by reducing the number of dimensions of the table  @xmath178 by  1 .",
    "as a first step , we show that for any search position  @xmath203 , the set of all  @xmath147 with  @xmath204 = { \\ensuremath\\mathtt{true}}$ ] is an interval .",
    "[ lem : interval ] let  @xmath204 = t[{\\mathbf}c , u ' ] = { \\ensuremath\\mathtt{true}}$ ] with  @xmath205",
    ". then  @xmath206 = { \\ensuremath\\mathtt{true}}$ ] for  @xmath207 .",
    "let  @xmath65 be a curve corresponding to the entry  @xmath204 $ ] .",
    "that is  @xmath65 connects  @xmath71 to  @xmath208 such that any point on  @xmath65 satisfies the strip condition .",
    "similarly , let  @xmath146 be a curve corresponding to  @xmath209 $ ] ; see fig .",
    "[ fig : storage_improvement ] .",
    "since  @xmath147 and  @xmath210 differ , there is a rightmost site  @xmath12 , such that  @xmath12 is below  @xmath65 and above  @xmath146 .",
    "let  @xmath211 and  @xmath212 be the grid points of  @xmath65 and  @xmath146 that are immediately to the left of  @xmath12 .",
    "note that  @xmath211 is above  @xmath212 since  @xmath65 is above  @xmath12 and  @xmath146 is below it .",
    "consider the curve  @xmath213 that starts at  @xmath71 and follows  @xmath65 until  @xmath211 , then moves down vertically to  @xmath212 , and from there follows  @xmath146 to  @xmath12 .",
    "obviously  @xmath213 is an @xmath40-monotone curve , and it has above it the same sites as  @xmath146 , except for  @xmath12 , which is below it .",
    "thus there are  @xmath214 sites above  @xmath213 in the rectangle spanned by  @xmath12 and  @xmath71 .",
    "if all points of  @xmath213 satisfy the strip condition , then this implies  @xmath215 = { \\ensuremath\\mathtt{true}}$ ] .",
    "we show that indeed the strip condition is satisfied for any point on  @xmath213 .",
    "let  @xmath216 be the subcurve of @xmath213 that connects @xmath71 to @xmath211 , let @xmath217 be the segment @xmath218 and let  @xmath219 be the subcurve of  @xmath213 that connects @xmath212 to @xmath208 .",
    "since @xmath216 is also a subcurve of  @xmath65 and it starts at @xmath71 , it directly follows that any point of  @xmath216 satisfies the strip condition . for the points on  @xmath217 we can argue as follows . since  @xmath217 lies below  @xmath65 and any point of @xmath65 satisfies",
    "the horizontal strip condition , any point of  @xmath217 must satisfy the horizontal strip condition .",
    "analogously , because @xmath217 lies above  @xmath146 and any point of @xmath146 satisfies the vertical strip condition , each point of @xmath217 must satisfy the vertical strip condition .",
    "finally , since  @xmath219 is a subcurve of @xmath146 , any point of @xmath146 satisfies the strip condition and any point of @xmath216 and @xmath217 satisfies the strip condition , it directly follows that any point of @xmath219 satisfies the strip condition .    using lemma  [ lem : interval ]",
    ", we can reduce the dimension of the table  @xmath178 by  1 .",
    "it suffices to store at each entry  @xmath220 $ ] the boundaries of the @xmath147-interval .",
    "this reduces the amount of storage to  @xmath19 without increasing the running time . using hirschberg s algorithm ,",
    "the storage for  @xmath178 even decreases to  @xmath23 .",
    "tables  @xmath192 and  @xmath202 still have size  @xmath19 , however .",
    "our next goal is to reduce the running time to  @xmath19 .",
    "an entry in  @xmath193 $ ] tells us which deficits can be compensated .",
    "this can also be interpreted as a lower bound on the number of sites a curve from  @xmath71 to  @xmath158 must have above it , in order to satisfy the horizontal strip condition .",
    "namely , let  @xmath221 denote the number of ports on the top side of the rectangle spanned by  @xmath158 and  @xmath71",
    ". then  @xmath222 $ ] is equivalent to satisfying the horizontal strip condition for the strip directly above  @xmath158 .",
    "similarly , the corresponding entry  @xmath223 $ ] gives a lower bound on the number of sites below such a curve , which in turn , together with the number of sites contained in the rectangle spanned by  @xmath158 and  @xmath71 implies an _ upper bound _ on the number of sites above the curve .",
    "thus ,  @xmath192 ,  @xmath202 , and the information on how many sites , top ports and right ports are in the rectangle spanned by  @xmath158 and  @xmath71 together imply a lower and an upper bound , and thus an interval of  @xmath147-values , for which the horizontal and vertical strip conditions at  @xmath158 is satisfied .",
    "hence the program can simply intersect this interval with the union of the intervals obtained from  @xmath224 $ ] , where  @xmath225 has exactly one non - zero entry , which is  1 .",
    "consequently , the amount of work per entry of  @xmath178 is still  @xmath191 .",
    "note that by lemma  [ lem : interval ] the result of this computation is again an interval .",
    "next , we would like to reduce the storage using hirschberg s algorithm  @xcite , which immediately reduces the storage requirement of  @xmath178 to  @xmath23 .",
    "we would like to reduce the storage requirement for  @xmath192 and  @xmath202 by using hirschberg s algorithm as well . however ,    how about memory ?",
    "hirschberg s algorithm  @xcite immediately reduces the storage requirement of  @xmath178 to  @xmath23 .",
    "can we do the same for  @xmath192 and  @xmath202 ?",
    "the problem we run into is that  @xmath192 is computed from left to right and  @xmath202 from bottom to top , which is the opposite to  @xmath178 , which we compute from top - right to bottom - left .",
    "we can fix this problem by running the dynamic programs for computing  @xmath192 and  @xmath202 backwards , by precomputing the entries of  @xmath192 and  @xmath202 on the top and right side , and then running the updates backwards .",
    "this allows us to use hirschberg s algorithm , and the algorithms can run in a synchronized manner , such that at each point in time the required data is available , using only  @xmath23 space .",
    "a new issue appears : the update  @xmath193 = \\max \\{b_{\\mathrm{t}}[s-1,t ] - 1,0\\}$ ] is not easily reversible . when running the dynamic program backwards it is not clear , whether  @xmath193 = 0 $ ] implies  @xmath198 = 0 $ ] or  @xmath198 = 1 $ ] at a port step .    to remedy this issue , consider a fixed column  @xmath200 of the table corresponding to a port event , and consider the circumstances under which  @xmath198 - 1 = -1 $ ] , i.e. ,  @xmath198 = 0 $ ]",
    "this implies that , for any rectangle  @xmath47 with lower right corner  @xmath226 whose top side is contained in the top side of  @xmath1 , there are at most as many sites in  @xmath47 as there are ports in the top side of  @xmath47 .",
    "assume that this is the case for some fixed value  @xmath227 , i.e. ,  @xmath228 $ ] .",
    "since the possible rectangles for an entry  @xmath198 $ ] with  @xmath229 contain at most as many sites as the ones for  @xmath228 $ ] , this implies  @xmath228 = b_{\\mathrm{t}}[s-1,t ] = 0 $ ] for all  @xmath230 .",
    "if on the other hand ,  @xmath227 is such that  @xmath228 > 0 $ ] , then the rectangles corresponding to  @xmath198 $ ] for  @xmath231 contain at least as many sites as the ones for  @xmath228 $ ] , and we have  @xmath198 \\ge b_{\\mathrm{t}}[s-1,t_0]$ ] for  @xmath232 . thus , there is a single gap  @xmath227 , such that for all  @xmath230 we have  @xmath198 = 0 $ ] and for  @xmath233 , we have  @xmath198 > 0 $ ] ; see fig .",
    "[ fig : gap_rectangle ] . storing this gap for each column  @xmath200 that is a port event allows to efficiently reverse the dynamic program . note that storing one value per column only incurs  @xmath23 space overhead .",
    "of course , the same approach works for the dynamic program computing  @xmath202 .",
    "we have shown the following theorem .",
    "[ thm : efficient - twosided - labeling ] two - sided boundary labeling with adjacent sides can be solved in  @xmath19 time using  @xmath23 space .",
    "the techniques we used to obtain theorem  [ thm : efficient - twosided - labeling ] can be applied to solve a variety of different extensions of the two - sided labeling problem with adjacent sides .",
    "we now show how to    generalize to sliding ports instead of fixed ports ,    maximize the number of labeled sites , and    minimize the total leader length in a planar solution .    ]    ]    ]      first , observe that proposition  [ prop : solut ] , which guarantees the existence of an @xmath40-separated planar solution , also holds for sliding ports .",
    "the same proofs apply by conceptually fixing the ports of a given planar solution when applying the rerouting operations .",
    "the following lemma shows that , without loss of generality , we can simply fix all ports at the bottom - left corner of their corresponding labels .",
    "this immediately solves the problem .",
    "[ lem : sliding ] if there exists an @xmath40-separated planar solution  @xmath74 for the two - sided boundary labeling problem with adjacent sides and sliding ports , then there also exists an @xmath40-separated planar solution  @xmath64 in which the ports are fixed at the bottom left corners of the labels .",
    "we show how to transform  @xmath74 into  @xmath64 .",
    "let  @xmath65 be the @xmath40-monotone curve that separates the top leaders from the right leaders of  @xmath74 .",
    "we move the ports induced by  @xmath74 to the bottom - left corner of their corresponding labels such that the assignment between labels and sites remains ; see  fig.[fig : sliding - ports ] .",
    "obviously , the bends of the leaders connected to the right side only move downwards .",
    "thus , the leaders lie entirely below  @xmath65 .",
    "symmetrically , the bends of the leaders connected to the top side only move to the left and thus these leaders lie entirely above  @xmath65 .",
    "consequently , only conflicts between the same type of leaders can arise .",
    "consider the topmost intersection of two leaders  @xmath38 and  @xmath61 connected to the right side and assume that  @xmath12 lies to the left of  @xmath56 .",
    "let  @xmath47 be the rectangle that is spanned by the bends of  @xmath38 and  @xmath61 .",
    "due to moving the ports downwards , the leaders lie entirely below  @xmath65 and the bend of  @xmath61 must lie below  @xmath38 .",
    "hence ,  @xmath47 lies completely in  @xmath96 . in order to resolve the conflict",
    ", we reroute  @xmath12 to  @xmath55 and  @xmath56 to  @xmath35 using the bottom - left corners of  @xmath35 and  @xmath55 as ports .",
    "obviously , the leaders only change on  @xmath234 .",
    "therefore , new conflicts can only arise on the left and bottom sides of  @xmath47 .",
    "in particular , only the leader of  @xmath55 can be involved in new conflicts , while the leader of  @xmath35 is free of any conflict .",
    "thus , after finitely many such steps we have resolved all conflicts , from top to bottom .",
    "symmetric arguments apply for the leaders connected to the top side .",
    "[ thm : twosided - sliding - ports - labeling ] two - sided boundary labeling with adjacent sides and sliding ports can be solved in  @xmath19 time using  @xmath23 space .",
    "so far our algorithm only returns a leader layout if there is a planar solution that matches each label to a site . as bekos",
    "16 ) observed , this need not always be the case , so it becomes important to be able to maximize the number of labels connected to sites in a planar solution .",
    "we achieve this by removing labels from a given instance and using our algorithm to decide whether a crossing - free solution exists .",
    "lemma  [ lem : sliding ] shows that we can move top ports to the left and right ports to the bottom without making a solvable instance unsolvable .",
    "thus , it suffices to remove the rightmost top labels and the topmost right labels .",
    "let  @xmath115 be the number of labels we want to use with  @xmath235 of them being top labels and  @xmath236 right labels , so that  @xmath237 .",
    "for a given  @xmath115 , we can decide whether a crossing - free solution that uses exactly  @xmath115 labels exists by removing the  @xmath238 rightmost top labels and the  @xmath239 topmost right labels for any possible  @xmath235 and  @xmath236 .",
    "we therefore start with  @xmath240 and  @xmath241 .",
    "we keep decreasing  @xmath235 and increasing  @xmath236 by  1 , until a crossing - free solution is found or  @xmath242 . in the latter case ,",
    "no crossing - free solution that uses exactly  @xmath115 labels exists . with this approach",
    "we can use binary search to find the maximum  @xmath115 , using our algorithm up to  @xmath115 times per step .",
    "since  @xmath243 , this yields an algorithm for two - sided boundary labeling with adjacent sides that maximizes the number of labeled sites that runs in  @xmath244 time and uses  @xmath23 space .",
    "two - sided boundary labeling with adjacent sides can be solved in @xmath244 time using  @xmath23 space such that the number of labeled sites is maximized .",
    "recall that , by proposition  [ prop : solut ] , there always exists a length - minimal planar solution that is @xmath40-separated . to obtain a length - minimal planar solution",
    ", we mainly change the table  @xmath178 used by the dynamic program given in section  [ sec : two - sided - algorithm ] .",
    "let  @xmath65 be an @xmath40-monotone curve  @xmath65 that starts at  @xmath71 and ends at  @xmath158 .",
    "we assign to every table entry the length of the leaders that are connected to the ports in the rectangle  @xmath47 spanned by  @xmath71 and  @xmath158 .",
    "if there are more sites than top ports in  @xmath47 above  @xmath65 , we have to connect some of these sites to ports that lie to the left of  @xmath47 .",
    "the vertical lengths of their leaders , however , are fixed .",
    "we imagine a dummy top port at the left border of  @xmath47 and connect all unlabeled sites to this port .",
    "when traversing the grid horizontally , this dummy port moves to the left . in order to update the total length of the leaders in  @xmath47 , we only have to keep track of the number of unlabeled sites and increase the horizontal length of their leaders .",
    "the sites in  @xmath47 below  @xmath65 are handled analogously .",
    "if there are more top ports than sites in  @xmath47 above  @xmath65 , we have to connect these ports to sites that lie to the left of  @xmath47 . in order to remember",
    "which sites are already labeled , we store the _ top front _ as the rectangle with top - right corner  @xmath71 that includes all sites that are already connected to a top port inside  @xmath47 , and the _ right front _ as the rectangle with top - right corner  @xmath71 that includes all sites that are already connected to a right port inside  @xmath47 .",
    "let  @xmath245 be the bottom - left point of the top front for a given @xmath40-monotone curve  @xmath65 that starts at  @xmath71 and ends at  @xmath158 .",
    "similarly , let  @xmath246 be the right front for  @xmath65 .",
    "we define @xmath247=(l , g_{\\mathrm{t}},g_{\\mathrm{r}})$ ] if there exists an @xmath40-monotone curve  @xmath65 and leaders inside @xmath248 such that the following conditions hold , otherwise it contains  @xmath249 .",
    "curve  @xmath65 starts at the top - right corner  @xmath71 of  @xmath1 and ends at  @xmath158 .",
    "inside the rectangle  @xmath47 spanned by  @xmath71 and  @xmath158 , there are  @xmath147 sites of  @xmath98 above  @xmath65 .    for each strip in the two regions  @xmath95 and  @xmath96 defined by  @xmath65 the strip condition holds .",
    "the sites in  @xmath250 are connected to the ports on the border of  @xmath250 such that the induced solution is planar , length - minimal , the sites above  @xmath65 or in  @xmath251 are only connected to top ports , and the sites below  @xmath65 or in  @xmath252 are only connected to right ports .    there are  @xmath253 unlabeled top sites and  @xmath254 unlabeled right sites in  @xmath47 .",
    "note that  @xmath253 and  @xmath254 depend on  @xmath200 ,  @xmath34 ,  @xmath147 and can be precomputed , but to make the algorithm more intuitive , we update these values on - line and store them in  @xmath178 .",
    "we first describe how to handle the top front while traversing the grid .",
    "initially ,  @xmath255 .",
    "as long as we have more top sites than top ports in  @xmath47 , we can connect all ports to sites and thus can maintain  @xmath255 .",
    "once we have exactly the same number of top ports and top sites in  @xmath47 and we encounter a port event for a top port , we have to check the strip condition and find the rightmost point  @xmath251 with  @xmath256 such that the rectangle   @xmath257 spanned by  @xmath251 and  @xmath71 is valid . by storing  @xmath251",
    ", we know that all ports to the right of  @xmath258 are already connected to a site , all sites to the top - right of  @xmath251 are already connected to a port , and all top sites to the bottom - left of  @xmath251 have to be connected to a port that lies to the left of  @xmath258 .",
    "thus , we do not have to check new strip conditions until  @xmath259 .",
    "we handle  @xmath252 similarly .",
    "we now look at the length of the top leaders , the length of the right leaders can be handled similarly .",
    "note that by moving from  @xmath34 to  @xmath260 , the length of the top leaders does not change .",
    "if  @xmath261 , we imagine an additional port at  @xmath258 that can be connected to  @xmath253 top sites .",
    "when moving from  @xmath200 to  @xmath199 , we add @xmath262 to  @xmath263 .",
    "when we calculate a new value  @xmath251 by checking the strip condition , we can immediately connect all top sites inside the top front to top ports , and add the corresponding leader length to  @xmath263 .",
    "thus , we only encounter site events for sites that are a ) inside @xmath264 or b ) have to be connected to a top port that lies to the left of  @xmath258 . in case",
    "a ) we do not change  @xmath263 , in case b ) we connect the site to the imaginary port , add the length of the corresponding leader to  @xmath263 and increase  @xmath253 by 1 .",
    "when we encounter a port event , if the port lies inside  @xmath264 , we do not change  @xmath263 , otherwise we can connect any of the unlabeled sites to this port .",
    "we add the horizontal distance between  @xmath265 and the port to  @xmath263 and decrease  @xmath253 by 1 .",
    "note that by choosing any unlabeled site , the resulting solution may not be planar .",
    "however , because the bends of all unconnected sites will be above  @xmath65 , we can use lemma  [ lem : boxlemma ] to remove the crossings without changing the total leader length .    since the matrix now has four additional fields , the running time and storage",
    "is increased by a factor of @xmath266 over the algorithm from theorem  [ thm : two - sided - correct ] .",
    "additionally , we need  @xmath267 time to check the strip condition and to compute a length - minimal solution for the sites and ports inside  @xmath264 and  @xmath268 .    two - sided boundary labeling with adjacent sides can be solved in @xmath269 time using  @xmath27 space such that the total leader length is minimized .    using an appropriate data structure to precompute the fronts",
    ", it may be possible to decrease the running time slightly .",
    "in this section , we also allow labels on the bottom and the left side of  @xmath1 . in order to solve an instance of the three- and four - sided case , we adapt the techniques we developed for the two - sided case .",
    "we assume that the ports are fixed and the number of labels and sites is equal . in section  [ sec : four - sided - solutions ] we first analyze the structure of planar solutions obtaining a result similar to proposition  [ prop : solut ] .",
    "in sections  [ sec : algorithm - three - sided - case ] and  [ sec : algorithm - four - sided - case ] , we present algorithms for the three- and four - sided cases .",
    "similar to our approach to two - sided boundary labeling , we pursue the idea that if there exists a planar solution , then we can also find a planar solution such that there are four @xmath40-monotone curves connecting the four corners of  @xmath1 to a common point  @xmath13 , and such that these curves separate the leaders of the different label types from each other ; see fig .  [",
    "fig : partitions ] .    , @xmath217 , @xmath219 and @xmath270 meeting at the point @xmath13 partition the rectangle into four regions .",
    "]    to that end , we first show that leaders of left and right labels can be separated vertically and leaders of top and bottom labels can be separated horizontally .",
    "afterwards , we apply the result of lemma  [ lem : xysep ] in order to resolve the remaining overlaps , e.g. , between top and right leaders .",
    "[ def : xsep ] a planar solution for the four - sided boundary labeling problem is    _ @xmath69-separated _ if there exists a vertical line  @xmath35 such that the sites that are labeled to the left side are to the left of  @xmath35 and the sites that are labeled to the right side are to the right of  @xmath35 , and    _ @xmath70-separated _ if there exists a horizontal line  @xmath35 such that the sites that are labeled to the top side are above  @xmath35 and the sites that are labeled to the bottom side are below  @xmath35 .    .30     .30     .30     .30     .30     .45 ,  @xmath82 and  @xmath65 ; see fig .",
    "[ fig : horizonal_overlap ] . )",
    "@xmath82 is empty , while  @xmath79 is only intersected by right leaders and  @xmath65 is only intersected by left leaders . )",
    "@xmath82 is intersected by top and bottom leaders . )",
    "@xmath82 is intersected by top and bottom leaders such that there is a horizontal line ( dashed ) separating both types . )",
    "@xmath79 is intersected by right and bottom leaders .",
    ", title=\"fig : \" ]    .45 ,  @xmath82 and  @xmath65 ; see fig .",
    "[ fig : horizonal_overlap ] . )",
    "@xmath82 is empty , while  @xmath79 is only intersected by right leaders and  @xmath65 is only intersected by left leaders . )",
    "@xmath82 is intersected by top and bottom leaders . )",
    "@xmath82 is intersected by top and bottom leaders such that there is a horizontal line ( dashed ) separating both types . )",
    "@xmath79 is intersected by right and bottom leaders .",
    ", title=\"fig : \" ]    .45 ,  @xmath82 and  @xmath65 ; see fig .",
    "[ fig : horizonal_overlap ] . )",
    "@xmath82 is empty , while  @xmath79 is only intersected by right leaders and  @xmath65 is only intersected by left leaders . )",
    "@xmath82 is intersected by top and bottom leaders . )",
    "@xmath82 is intersected by top and bottom leaders such that there is a horizontal line ( dashed ) separating both types . )",
    "@xmath79 is intersected by right and bottom leaders .",
    ", title=\"fig : \" ]    .45 ,  @xmath82 and  @xmath65 ; see fig .",
    "[ fig : horizonal_overlap ] . )",
    "@xmath82 is empty , while  @xmath79 is only intersected by right leaders and  @xmath65 is only intersected by left leaders . )",
    "@xmath82 is intersected by top and bottom leaders . )",
    "@xmath82 is intersected by top and bottom leaders such that there is a horizontal line ( dashed ) separating both types . )",
    "@xmath79 is intersected by right and bottom leaders .",
    ", title=\"fig : \" ]    the following lemma proves that we can always find a planar solution that is both  @xmath69-separated and  @xmath70-separated , if a solution exists .",
    "[ lem : xsep ] if there exists a planar solution  @xmath74 for the four - sided boundary labeling problem , then there exists a planar solution  @xmath64 that is both @xmath69-separated and  @xmath70-separated , and such that  @xmath76 and  @xmath271 .",
    "we show that if  @xmath74 is not @xmath69-separated , then we can decrease either  @xmath31 or  @xmath32 without increasing the other .",
    "a symmetric argument works for instances that are not @xmath70-separated .",
    "this implies the statement of the lemma .",
    "assume that  @xmath74 is not @xmath69-separated .",
    "then there exist sites  @xmath12 and  @xmath66 with  @xmath272 , such that  @xmath12 is labeled by a right port  @xmath71 , and  @xmath66 is labeled by a left port  @xmath35 .",
    "we choose  @xmath12 and  @xmath66 as a closest pair in the sense that the horizontal segments of their leaders have minimum vertical distance among all such pairs . without loss of generality ,",
    "assume that the horizontal segment of  @xmath72 is above  the horizontal segment of  @xmath273 , otherwise we mirror the instance vertically .",
    "we now describe possible reroutings to reduce  @xmath31 without increasing  @xmath32 .",
    "let  @xmath274 denote the vertical strip bounded by vertical lines through  @xmath12 and  @xmath66 , and consider the horizontal lines through  @xmath84 , @xmath12 , @xmath66 , and  @xmath275 .",
    "these lines cut out three bounded rectangles from  @xmath274 ; see fig .",
    "[ fig : horizonal_overlap ] .",
    "if the topmost of these rectangles is below  @xmath72 , we denote it by  @xmath79 , otherwise we set  @xmath276 .",
    "symmetrically , if the bottommost of these rectangles is above  @xmath273 , we denote it by  @xmath65 , otherwise we set  @xmath277 .",
    "the middle rectangle is denoted by  @xmath82 .",
    "due to the choice of  @xmath12 and  @xmath66 with minimum vertical distance , and the planarity of  @xmath74 , these rectangles satisfy the following properties .",
    "all leaders that intersect  @xmath79 are either right or bottom leaders .",
    "all leaders that intersect  @xmath82 are either top or bottom leaders .",
    "all leaders that intersect  @xmath65 are either left or top leaders .",
    "we now distinguish cases based on which types of leaders intersect these rectangles .",
    "we show that in each case we can find a new planar solution that decreases at least one of  @xmath31 and  @xmath32 without increasing the other one .",
    "* case 1 : * all leaders intersecting  @xmath79 are connected to the right , all leaders intersecting  @xmath65 are connected to the left , and  @xmath82 is not intersected by any leaders ; see fig .  [",
    "fig : resolve_overlap:1 ] .",
    "we reroute  @xmath12 to  @xmath35 and  @xmath66 to  @xmath71 , which decreases  @xmath31 without increasing  @xmath32 .",
    "this may create crossings , but they all lie either on the right side of  @xmath79 or on the left side of  @xmath65 .",
    "after the rerouting , all leaders ( including the new ones ) that intersect  @xmath79 are right leaders and have their bend in  @xmath79 .",
    "a symmetric statement holds for  @xmath65 .",
    "we can thus apply lemma  [ lem : boxlemma ] twice to obtain a planar solution without increasing  @xmath31 or  @xmath32 .    * case 2 : * all leaders intersecting  @xmath79 are connected to the right , all leaders intersecting  @xmath65 are connected to the left , but  @xmath82 is intersected by some leaders ; see fig .",
    "[ fig : resolve_overlap:2a ] . note that this case can only occur if  @xmath12 lies above  @xmath66 , as otherwise the sites labeled by these leaders would contradict the minimality of  @xmath12 and  @xmath66 .    in a first step ,",
    "we `` sort '' the leaders intersecting  @xmath82 vertically as follows .",
    "let  @xmath278 and  @xmath279 be the lowest top and highest bottom leader that intersects  @xmath82 , respectively .",
    "let  @xmath280 be the set of top leaders that intersect the rectangle spanned by  @xmath281 and the top - right corner of  @xmath82 .",
    "symmetrically ,  @xmath83 is the set of bottom leaders that intersect the rectangle spanned by  @xmath282 and the bottom - left corner of  @xmath82 .",
    "also , let  @xmath283 be the rectangle spanned by  @xmath281 and  @xmath12 , and let  @xmath284 be the rectangle spanned by  @xmath282 and  @xmath66 .",
    "note that the only leaders that intersect  @xmath283 or  @xmath284 are top and bottom leaders ; left or right leaders would contradict the minimality of  @xmath12 and  @xmath66 .",
    "moreover , any such leader is contained in either  @xmath280 or  @xmath83 .",
    "denote by  @xmath44 the sites labeled by the leaders in  @xmath285 .",
    "we reroute the leaders in  @xmath285 arbitrarily such that the  @xmath286 topmost sites of  @xmath44 are labeled by top labels , and the remaining  @xmath287 points on the bottom are connected to the bottom side .",
    "denote the resulting set of leaders by  @xmath288 ( top leaders ) and  @xmath289 ( bottom leaders ) .",
    "note that this rerouting does not increase  @xmath31 and  @xmath32 , and it may in fact decrease  @xmath32 .",
    "next , we deal with any crossings that may have resulted from the reordering .",
    "note that we have only reordered leaders with bends in either  @xmath283 or  @xmath284 , thus new intersection may only arise in the interior of these rectangles ( by claim 1 of lemma  [ lem : boxlemma ] ) .",
    "consider the rectangle  @xmath290 spanned by the bend of the lowest leader in  @xmath288 and  @xmath12 .",
    "due to the rerouting , we have that the lower left corner of  @xmath290 is contained in  @xmath283 , and thus we have  @xmath291 .",
    "thus , leaders that intersect  @xmath290 are either top or bottom leaders . however , the lowest top leader in  @xmath288 lies above the highest bottom leader in  @xmath292 , which implies that no bottom leader intersects  @xmath290 .",
    "we can thus apply lemma  [ lem : boxlemma ] to remove any intersection in  @xmath290 .",
    "a symmetric argument holds for  @xmath293 .",
    "this yields a planar solution without increasing  @xmath31 or  @xmath32 .",
    "figure  [ fig : resolve_overlap:2b ] illustrates the structure of such a solution  @xmath85 .",
    "if in  @xmath85 no leader intersects  @xmath82 , we proceed as in case  1 .",
    "hence , assume that there is a leader intersecting  @xmath82 and , without loss of generality , it is a top leader ( otherwise we rotate the instance by  180@xmath294 ) .",
    "note that such a leader labels a site that lies to the right of  @xmath12 .",
    "let  @xmath56 be the topmost such site that is connected to the top and lies to the right of  @xmath12 .",
    "let  @xmath295 denote the port of the label of  @xmath56 .",
    "we reroute  @xmath71 to  @xmath56 and  @xmath295 to  @xmath12 ; see fig .  [",
    "fig : resolve_overlap:2b ] .",
    "this strictly decreases both  @xmath296 and  @xmath297 .",
    "crossings may arise only on the vertical segment of  @xmath298 and the horizontal segment of  @xmath299 .",
    "crossings on  @xmath298 may only occur with leaders that intersect  @xmath79 .",
    "then , by assumption of case  2 , all leaders involved in these crossings are right leaders having their bends inside  @xmath79 .",
    "we use lemma  [ lem : boxlemma ] to remove the crossings .",
    "the crossings on  @xmath299 lie inside the rectangle  @xmath60 spanned by  @xmath300 and  @xmath12 .",
    "a bottom leader may not cross  @xmath60 due to the ordering of the leaders intersecting  @xmath82 .",
    "a left leader intersecting  @xmath60 would have intersected  @xmath301 before the rerouting , and finally , a right leader intersecting  @xmath60 would contradict the minimality of  @xmath12 and  @xmath66 .",
    "therefore , all leaders intersecting  @xmath60 are top leaders .",
    "moreover , all leaders intersecting  @xmath60 have their bend in  @xmath60 , otherwise they would have intersected  @xmath301 before the rerouting .",
    "again , we apply lemma  [ lem : boxlemma ] to remove all crossings , and obtain a planar solution .",
    "overall , we have reduced  @xmath31 and  @xmath32 .",
    "* case 3 : * the rectangle  @xmath79 is intersected by a bottom leader or  @xmath65 is intersected by a top leader ; see fig .",
    "[ fig : resolve_overlap:3 ] . without loss of generality",
    ", we assume that  @xmath79 is intersected by a bottom leader , otherwise we rotate the instance by  @xmath302 .",
    "let  @xmath303 denote the topmost bottom leader intersecting  @xmath79 .",
    "then  @xmath303 labels a site  @xmath56 inside  @xmath79 .",
    "let  @xmath304 be the corresponding port on the bottom side .",
    "we reroute  @xmath56 to  @xmath71 and  @xmath12 to  @xmath304 ; see fig .",
    "[ fig : resolve_overlap:3 ] . observe that this decreases  @xmath31 and  @xmath32 , but may introduce crossings .",
    "all crossings lie on either the vertical segment of  @xmath298 or the horizontal segment of  @xmath305 .",
    "we again use lemma  [ lem : boxlemma ] to remove the crossings as follows .",
    "let  @xmath47 denote the rectangle spanned by  @xmath84 and  @xmath56 . by the choice of  @xmath56 , all leaders intersecting  @xmath47 are right leaders .",
    "as they do not cross  @xmath72 , their bends are contained in  @xmath47 as well .",
    "lemma  [ lem : boxlemma ] can be applied . for the crossings on",
    "@xmath305 consider the rectangle  @xmath60 spanned by  @xmath56 and  @xmath306 .",
    "the top side is open , such that  @xmath60 does not contain  @xmath56 .",
    "all leaders that intersect  @xmath60 are bottom leaders .",
    "top leaders would have crossed  @xmath72 , left leaders would contradict the minimality of  @xmath12 and  @xmath66 , and right leaders would have crossed  @xmath307 .",
    "moreover , all these leaders have their bends inside  @xmath60 by the choice of  @xmath56 as the highest site connected to the bottom",
    ". again lemma  [ lem : boxlemma ] applied to  @xmath60 removes the remaining crossings , and in total we have reduced  @xmath31 and  @xmath32 .",
    "this lemma shows that , when searching for a planar solution of the labeling problem , we can restrict ourselves to solutions that are @xmath69-separated and  @xmath70-separated .",
    "let  @xmath74 denote such a solution , and let  @xmath308 and  @xmath309 be the lines separating the sites labeled by left and right labels , and the ones labeled by top and bottom labels , respectively .",
    "let  @xmath310 denote the intersection of  @xmath308 and  @xmath309 , called _",
    "center point_. let  @xmath311 denote the corners of  @xmath1 , named in counterclockwise ordering , and such that  @xmath312 is the top - right corner .",
    "consider the rectangles that are spanned by  @xmath13 and  @xmath313 for  @xmath314 .",
    "each of them contains only two types of leaders .",
    "for example , the top - right rectangle contains only top and right leaders .",
    "an  @xmath69- and  @xmath70-separated planar solution is _ partitioned _ if , for each rectangle spanned by  @xmath13 and one of the corners  @xmath313 of  @xmath1 , there exists an @xmath40-monotone curve  @xmath135 from  @xmath313 to  @xmath13 that separates the two different types of leaders contained in that rectangle ; see fig .",
    "[ fig : partitions ] .",
    "our next step is to show that a planar solution can be transformed into a partitioned solution without increasing  @xmath31 and  @xmath32 .",
    "[ prop : partitioned ] if there exists a planar solution  @xmath41 for four - sided boundary labeling , then there exists a partitioned solution  @xmath49 .    by lemma  [ lem : xsep ]",
    ", we can assume that  @xmath74 is @xmath69- and  @xmath70-separated .",
    "let  @xmath13 be the center point as defined above and let  @xmath308 be the vertical line through  @xmath13 .",
    "we show how to ensure that the area  @xmath47 of @xmath1 right of @xmath308 admits an @xmath40-monotone curve from the top - right corner of  @xmath1 to @xmath13 that separates the top leaders from the right leaders inside @xmath47 .",
    "the remaining cases are symmetric .",
    "essentially , we proceed as in the proof of proposition  [ prop : solut ] to remove obstructions of types  ( )  ( ) ; see fig .",
    "[ fig : patterns ] .",
    "we note that in the rerouting , we only shorten vertical segments of top leaders and right segments of right leaders ; hence the solution remains  @xmath69- and  @xmath70-separated .",
    "moreover , in each step we decrease both @xmath31 and @xmath32 . hence , after finitely many steps all patterns between top and right leaders have been removed without creating new patterns with other types of leaders .",
    "after all patterns have been removed , an @xmath40-monotone curve connecting the top - right corner of  @xmath1 to  @xmath13 , separating the top labels from the right labels , can be found as in the proof of lemma  [ lem : xysep ] .      in the three sided case , we assume that the ports of the given instance  @xmath315 are located on three sides of  @xmath1 ; without loss of generality , on the left , top and right side of  @xmath1 .",
    "basically , we solve a three - sided instance by splitting the instance into two two - sided @xmath5-shaped instances that can be solved independently ; see fig .",
    "[ fig : three - sided : sketch ] .",
    ".45 -shaped instances  @xmath316 and  @xmath317 .",
    "the instances are induced by the grid point  @xmath200 of @xmath151 and are balanced . ) illustration of the proof for lemma  [ lem : three - sided ] .",
    "assuming that the grid point @xmath200 of @xmath151 , the balanced instances  @xmath316 and  @xmath317 , and the curves  @xmath65 and  @xmath146 are given , a planar solution for the whole instance can be constructed.,title=\"fig : \" ]    .45 -shaped instances  @xmath316 and  @xmath317 .",
    "the instances are induced by the grid point  @xmath200 of @xmath151 and are balanced . ) illustration of the proof for lemma  [ lem : three - sided ] .",
    "assuming that the grid point @xmath200 of @xmath151 , the balanced instances  @xmath316 and  @xmath317 , and the curves  @xmath65 and  @xmath146 are given , a planar solution for the whole instance can be constructed.,title=\"fig : \" ]    let  @xmath151 be the dual of the grid that is induced by the sites and ports of the given instance .",
    "the idea is that each grid point  @xmath200 of  @xmath151 induces two two - sided @xmath5-shaped instances with some useful properties .",
    "we will show that there is a planar solution for  @xmath315 if and only if there is a grid point @xmath200 of @xmath151 such that its induced two - sided instances both have planar solutions .",
    "thus , considering all  @xmath19 grid points of  @xmath151 the problem reduces to solve those @xmath5-shaped instances of the two - sided case . by means of a simple adaption of the dynamic program presented in section  [ sec : two - sided - algorithm ]",
    "we solve these instances in  @xmath19 time achieving  @xmath25 running time in total .    in the following we call horizontal and vertical lines through grid points of @xmath151 _ horizontal _ and _ vertical grid lines _ ,",
    "we now define the two two - sided @xmath5-shaped instances  @xmath318 and  @xmath319 of a grid point  @xmath200 of  @xmath151 formally . to that end , let  @xmath320 be the rectangle that is spanned by the top - right corner of  @xmath1 and  @xmath200 , and let  @xmath321 be the rectangle that is spanned by a point  @xmath12 on the horizontal grid line  @xmath111 through  @xmath200 and the bottom - right corner of  @xmath1 ; see fig .",
    "[ fig : three - sided : sketch ] . the instance  @xmath322 contains all sites and ports in  @xmath323 and  @xmath324 contains all sites and ports in  @xmath325 .",
    "we say that  @xmath322 and  @xmath324 are _ balanced _ if all right ports lie in  @xmath323 , all left ports lie in  @xmath326 and  @xmath323",
    "contains the same number of sites as it contains ports .",
    "since the number of ports and sites in  @xmath315 is equal , this directly implies that  @xmath327 contains the same number of sites as it contains ports .",
    "in particular , the choice of balanced instances  @xmath322 and  @xmath324 for a grid point  @xmath200 of  @xmath151 is unique with respect to the contained sites and ports ; only the location of  @xmath12 might differ .",
    "we can therefore write  @xmath318 and  @xmath319 for balanced instances and @xmath320 and @xmath328 for their defining rectangles .",
    "for any solution of  @xmath318 and any solution of  @xmath319 , we require that all leaders are completely contained in  @xmath329 and in  @xmath330 , respectively .",
    "the next lemma states that a three - sided instance @xmath315 has a planar solution if and only if it can be partitioned into two two - sided @xmath5-shaped instances that have planar solutions . to that end let @xmath331 denote the horizontal grid line through @xmath200 .",
    "figure  [ fig : three - sided ] illustrates the lemma .    [ lem : three - sided ] there is a planar solution  @xmath74 for a three - sided instance  @xmath315 if and only if there is a grid point @xmath200 of  @xmath151 with balanced instances  @xmath318 and  @xmath319 over rectangles  @xmath332 , an @xmath40-monotone curve  @xmath65 from the top - right corner to the bottom - left corner of  @xmath1 and an @xmath40-monotone curve  @xmath146 from the top - left corner to the bottom - right corner of  @xmath1 such that    each point on  @xmath65 satisfies the strip condition with respect to the ports and sites in  @xmath318 ,    @xmath65 contains the top - left corner of  @xmath328 and the intersection of @xmath331 with the left segment of  @xmath1 ,    each point on  @xmath146 satisfies the strip condition with respect to the ports and sites in  @xmath319 ,    @xmath146 contains the top - left corner of  @xmath328 and the intersection of @xmath331 with the right segment of  @xmath1 ,    first , assume that @xmath200 , @xmath316 , @xmath317 , @xmath332 , @xmath65 and  @xmath146 exist as required ; see fig .",
    "[ fig : three - sided : first - direction ] . the curve  @xmath65 partitions  @xmath1 into two regions ; we denote the region above  @xmath65 by  @xmath333 and the region below  @xmath65 by  @xmath334 . by lemma  [ lem :",
    "condit ] , there is a planar solution  @xmath335 for the sites and ports in  @xmath333 such that all leaders of  @xmath335 lie in  @xmath333 .",
    "since  @xmath65 contains the top - left corner of  @xmath328 and does not cross  @xmath331 until it reaches the intersection point of  @xmath331 with the left segment of  @xmath1 , we know that all leaders of @xmath335 are contained in  @xmath329 .",
    "analogously , there is a planar solution  @xmath336 for the sites and ports in  @xmath334 such that all leaders of  @xmath336 lie in  @xmath334 .",
    "consequently , we can combine  @xmath335 and  @xmath336 into a planar solution  @xmath337 for the sites an ports in  @xmath318 .",
    "using symmetric arguments , we obtain a planar solution  @xmath338 for  @xmath319 .",
    "as  @xmath318 and  @xmath319 are defined over complementary areas , the solutions  @xmath337 and  @xmath339 can be combined into a planar solution of  @xmath315 .",
    "it is assumed that the partitioned planar solution  @xmath74 for the three - sided instance is given . ) by proposition  [ prop : partitioned ] we can assume that  @xmath74 is partitioned by the curves  @xmath216 and  @xmath217 .",
    "the extremal top leader  @xmath340 induces the site  @xmath200 and the extremal right leader  @xmath341 induces the line  @xmath212 . )",
    "based on @xmath216 , @xmath217 , @xmath111 and  @xmath212 , the curves  @xmath65 and  @xmath146 can be constructed such that they do not cross any leader of  @xmath74 .",
    ", title=\"fig : \" ]    .45 .",
    "it is assumed that the partitioned planar solution  @xmath74 for the three - sided instance is given . ) by proposition  [ prop : partitioned ] we can assume that  @xmath74 is partitioned by the curves  @xmath216 and  @xmath217 .",
    "the extremal top leader  @xmath340 induces the site  @xmath200 and the extremal right leader  @xmath341 induces the line  @xmath212 . )",
    "based on @xmath216 , @xmath217 , @xmath111 and  @xmath212 , the curves  @xmath65 and  @xmath146 can be constructed such that they do not cross any leader of  @xmath74 .",
    ", title=\"fig : \" ]    assume that there is a planar solution  @xmath74 for a three - sided instance  @xmath315 ; see fig .  [ fig : three - sided2 ] .",
    "first , note that we can imagine an instance of three - sided boundary labeling as a degenerated instance of four - sided boundary labeling with no bottom ports .",
    "thus , proposition  [ prop : partitioned ] also holds for the three - sided case , when assuming that the four @xmath40-monotone curves partitioning the solution meet on the bottom segment of  @xmath1 .",
    "hence , without loss of generality , we assume that  @xmath74 is also partitioned by four @xmath40-monotone curves @xmath216 , @xmath217 , @xmath219 and  @xmath270 . in particular ,",
    "let  @xmath216 denote the curve that starts at the top - right corner of  @xmath1 and let  @xmath217 denote the curve that starts at the top - left corner of  @xmath1 ; see fig .",
    "[ fig : three - sided : partitioned ] .",
    "the curves  @xmath219 and  @xmath270 are completely contained in the bottom side of  @xmath1 and can therefore be omitted .",
    "we first show how to construct the grid point  @xmath200 and the instances  @xmath316 and  @xmath317 such that they are balanced .",
    "afterwards , we explain how to obtain  @xmath65 and  @xmath146 from  @xmath216 and  @xmath217 , respectively . finally , we prove that each point on @xmath65 and @xmath146 satisfies the strip condition with respect to @xmath318 and @xmath319 , respectively .",
    "let  @xmath340 be the top leader in  @xmath74 with the longest vertical segment of all top leaders in  @xmath74 . in case",
    "the site of  @xmath340 lies to the right of  @xmath342 , let  @xmath211 be the rightmost vertical grid line that lies to the left of  @xmath340 , and otherwise if the site of  @xmath340 lies to the left of  @xmath342 , let @xmath211 be the leftmost vertical grid line that lies to the right of  @xmath340 .",
    "furthermore , let  @xmath111 be the topmost horizontal grid line that lies below  @xmath342 ; see fig .",
    "[ fig : three - sided : partitioned ] . due to the choice of  @xmath111 and  @xmath211",
    "all top leaders lie above  @xmath111 and none of them intersects  @xmath111 or  @xmath211 .",
    "furthermore , no right or left leader of  @xmath74 intersects @xmath211 above  @xmath111 .",
    "the desired grid point @xmath200 is then the intersection point of @xmath111 and @xmath211 .",
    "now , let  @xmath341 be the right leader in  @xmath74 with longest horizontal segment among all right leaders in  @xmath74 and let  @xmath212 be the rightmost vertical grid line that lies to the left of  @xmath343 .",
    "note that @xmath212 can not be intersected by a left or a right leader , because both leader types are  @xmath69-separated .",
    "we define  @xmath320 to be the rectangle that is spanned by the top - right corner of  @xmath1 and @xmath200 .",
    "also , we define  @xmath328 to be the rectangle spanned by the bottom - right corner of  @xmath1 and the intersection point of @xmath212 and @xmath111 .",
    "the instance  @xmath316 is defined by  @xmath344 and the instance  @xmath317 by  @xmath345 .",
    "we show that  @xmath318 and  @xmath319 are balanced . to that end , we prove that a leader of  @xmath74 is either completely contained in  @xmath329 or in  @xmath346 , that  @xmath329 contains only right and top leaders , and that  @xmath347 contains only left and top leaders .    due to the choice of  @xmath212",
    ", all right leaders lie to the right of @xmath212 .",
    "moreover , all right leaders whose site or port lies above  @xmath111 , must lie to the right of  @xmath211 , because by definition of  @xmath211 no right leader intersects @xmath211 above  @xmath111 , and because otherwise @xmath216 could not be an @xmath40-monotone curve separating right and top leaders .",
    "thus , all right leaders lie in  @xmath329 .",
    "for left leaders we can argue similarly .",
    "since left and right leaders of  @xmath74 are @xmath69-separated , all left leaders lie to the left of @xmath212 .",
    "all left leaders whose site or port lies above  @xmath111 , must lie to the left of @xmath211 , because by definition of  @xmath211 no left leader intersects  @xmath211 above  @xmath111 , and because otherwise  @xmath217 could not be an  @xmath40-monotone curve separating left from top leaders .",
    "thus , all left leaders lie in  @xmath348 .",
    "finally , consider the top leaders in  @xmath74 . by definition of  @xmath111 and  @xmath211 , none of the top leaders",
    "intersects @xmath111 or @xmath211 .",
    "in particular all top leaders lie above @xmath111 and can not intersect  @xmath328 .",
    "consequently , each top leader is either contained in @xmath320 or in @xmath330 .",
    "this concludes the argument that  @xmath316 and  @xmath317 are balanced .",
    "we are left with the construction of the curves  @xmath65 and @xmath146 ; see fig .",
    "[ fig : three - sided : curves ] .",
    "the curve  @xmath65 is derived from  @xmath216 as follows .",
    "starting at the top - right corner of  @xmath1 , the curve  @xmath65 coincides with  @xmath216 until  @xmath216 intersects  @xmath111 or  @xmath212 above  @xmath111 .",
    "if @xmath65 intersects  @xmath212 above  @xmath111 , it follows  @xmath212 downwards until it hits  @xmath111 .",
    "then , in both cases , it follows  @xmath111 until  @xmath111 intersects the left segment of  @xmath1 .",
    "finally ,  @xmath65 follows the left segment of  @xmath1 to the bottom - left corner of  @xmath1 .",
    "the curve  @xmath146 is constructed symmetrically .    by construction",
    ",  @xmath65 contains the top - left corner of  @xmath328 and the intersection point of  @xmath111 with the left segment of  @xmath1 .",
    "symmetrically ,  @xmath146 contains the top - left corner of  @xmath328 and the intersection point of  @xmath111 with the right segment of  @xmath1 .",
    "we finally show that each point on  @xmath65 satisfies the strip condition with respect to the sites and ports in  @xmath316 . using symmetric arguments",
    "we can prove the analogous statement for  @xmath146 and  @xmath319 .    by the previous reasoning , we know that each leader of  @xmath74 either lies completely inside or completely outside of  @xmath349 .",
    "each leader that lies in  @xmath329 is either a top or a right leader and does not intersect  @xmath65 .",
    "otherwise , if such a leader intersected  @xmath65 , it would also intersect  @xmath216 or the segment  @xmath69 of  @xmath212 that is contained in  @xmath65 . in particular ,  @xmath69 can not be intersected by any leader because it lies to the left of all right leaders and below  @xmath216 .",
    "thus , the leaders in  @xmath349 form a planar solution for  @xmath316 without intersecting  @xmath65 .",
    "hence , the claim directly follows from lemma  [ lem : condit ] .     and",
    "@xmath317 for the grid point  @xmath200 .",
    "however , by lemma  [ lem : three - sided ] there must be another grid point  @xmath34 with balanced instances  @xmath350 and  @xmath351 if the instance has a planar solution . ]",
    "our approach now works as follows . for each grid point",
    "@xmath200 of  @xmath151 we compute the instances  @xmath316 and  @xmath317 such that they are balanced .",
    "then , by lemma  [ lem : three - sided ] , we can apply our algorithm presented in section  [ sec : two - sided - algorithm ] in order to solve  @xmath316 and  @xmath317 independently . to that end",
    ", we slightly adapt the dynamic program such that it only considers curves satisfying the properties required by lemma  [ lem : three - sided ] .",
    "if both instances can be solved , we combine these solutions into one solution and return that solution as the final result .",
    "otherwise , we continue with the next grid point of  @xmath151 .",
    "if all grid points of  @xmath151 have been explored without finding a planar solution , the algorithm decides that there is no planar solution .",
    "note that it may happen that , for a grid point @xmath200 , there are no balanced instances  @xmath316 and  @xmath317 ; for an example see fig .",
    "[ fig : three - sided : no - balanced - instances ] .",
    "however , in that case , if  @xmath315 has a solution , we also know by lemma  [ lem : three - sided ] that there is another grid point  @xmath34 such that for  @xmath34 we find balanced instances . hence , we can refrain from considering  @xmath200 .",
    "creating the two instances  @xmath316 and  @xmath317 for a grid point  @xmath200 takes linear time , if we assume that the sites are sorted by their @xmath69-coordinates . by theorem  [ thm : efficient - twosided - labeling ] we then need  @xmath19 time and  @xmath23 space to solve  @xmath316 and  @xmath317 .",
    "consequently , we need  @xmath19 time and  @xmath23 space to process a single grid point  @xmath200 . since we consider  @xmath19 grid points , the following theorem follows .",
    "[ thm : efficient - threesided - labeling ] three - sided boundary labeling can be solved in  @xmath352 time using  @xmath23 space .",
    "note that , except for the length minimization , our approach for the three - sided case also carries over to the extensions from section  [ sec : two - sided - extensions ] , because we only solve subinstances of  two - sided boundary labeling with adjacent sides .",
    "in particular with corresponding impact on the running time we can soften the restriction that the number of labels and sites is equal .",
    "in this section , we consider the case that the ports lie on all four sides of  @xmath1 .",
    "the main idea is to seek a partitioned solution , which exists by proposition  [ prop : partitioned ] . for a given partitioned solution  @xmath74",
    ", we call a leader _ extremal _ if all other leaders of the same type in  @xmath74 have shorter orthogonal segments ; recall that the _ orthogonal _ segment of a @xmath11-leader is the segment connecting the bend to the port .",
    "the algorithm consists of two steps .",
    "first , we explore all choices of ( non - overlapping ) extremal leaders  @xmath353 and  @xmath341 for the left and the right side of  @xmath1 , respectively , plus a horizontal line  @xmath111 that separates the top leaders and the bottom leaders .",
    "this information splits the instance into two independent three - sided instances ; see fig .",
    "[ fig : separation - four - sided ]",
    ". there are , however , two crucial differences from a usual three - sided instance . first , one side of the instance is not a straight - line segment but an @xmath69-monotone orthogonal curve  @xmath65 that is defined by  @xmath354 and  @xmath111 .",
    "second , the extremal positions of  @xmath353 and  @xmath341 imply a separation of the points that are labeled from the left and the right side .",
    "let  @xmath355 be the three - sided instance above  @xmath65 and let  @xmath356 be the three - sided instance below  @xmath65 .",
    "the algorithm solves  @xmath355 and  @xmath356 independently from each other .",
    "if for at least one of the two instances there is no solution , the algorithm continues with the next choice of  @xmath353 , @xmath341 and  @xmath111 .",
    "otherwise , it combines the planar solutions of  @xmath355 and  @xmath356 into one planar solution and returns this solution . in case that all choices of  @xmath353 , @xmath341 and  @xmath111 have been explored without finding a solution",
    ", the algorithm returns that there is no planar solution .",
    "we next describe how to solve the three - sided instance  @xmath355 .",
    "a symmetric approach can be applied to  @xmath356 .",
    "the algorithm explores all choices of the extremal leader  @xmath278 for the top side of  @xmath1 .",
    "this extremal leader partitions the instance into two two - sided subinstances  @xmath357 and  @xmath358 as follows .",
    "let  @xmath359 be the rectangle that is spanned by  @xmath342 and the top - right corner of  @xmath1 ; see fig .",
    "[ fig : separation - four - sided : areas ] .",
    "analogously , let  @xmath360 be the rectangle that is spanned by  @xmath342 and the top - left corner of  @xmath1 .",
    "analogously , for  @xmath341 we define the area  @xmath361 to be the rectangle that is spanned by  @xmath343 and the top - right corner of  @xmath1 , and  @xmath362 to be the rectangle spanned by  @xmath343 and the bottom - right corner of  @xmath1 . for the leader",
    "@xmath353 we define  @xmath363 to be the rectangle spanned by  @xmath364 and the bottom - left corner of  @xmath1 , and  @xmath365 to be the rectangle spanned by  @xmath364 and the top - left corner of  @xmath1 .",
    "we assume that the port  @xmath12 of  @xmath340 is only contained in that area  @xmath366 that also contains the site of  @xmath340 .",
    "we make analogous assumptions for  @xmath353 and  @xmath341 .",
    "the instance  @xmath357 consists of all ports and sites in  @xmath367 , and  @xmath358 consists of all ports and sites in  @xmath368 ; see fig .",
    "[ fig : four - sided - instances ] .",
    "we solve  @xmath357 and  @xmath358 independently from each other using the dynamic program introduced in section  [ sec : two - sided - algorithm ] for each instance .",
    "however , we enforce that it only considers @xmath40-monotone curves that exclude top leaders crossing the horizontal line through  @xmath342 , left leaders crossing the vertical line through  @xmath364 and right leaders crossing the vertical line through  @xmath343 .",
    "if for at least one of the two instances there is no solution , the algorithm continues to explore the next choice of  @xmath278 .",
    "otherwise , it combines the solutions of  @xmath357 and  @xmath358 into one solution and returns the result as the solution of  @xmath355 . in case that all choices of @xmath278 have been explored without finding a solution",
    ", the algorithm returns that there is no solution for the given three - sided instance .",
    "the following lemma shows that the algorithm is correct .    .30 , the left leader @xmath341 and the horizontal line @xmath111 split the instance into two three - sided instances @xmath355 and @xmath356 . )",
    "sketch of the areas @xmath360 , @xmath359 , @xmath361 , @xmath362 , @xmath365 and @xmath363 . )",
    "the leaders @xmath353 , @xmath341 and @xmath340 split the three - sided instance into two two - sided instances.,title=\"fig : \" ]    .30 , the left leader @xmath341 and the horizontal line @xmath111 split the instance into two three - sided instances @xmath355 and @xmath356 . )",
    "sketch of the areas @xmath360 , @xmath359 , @xmath361 , @xmath362 , @xmath365 and @xmath363 . )",
    "the leaders @xmath353 , @xmath341 and @xmath340 split the three - sided instance into two two - sided instances.,title=\"fig : \" ]    .30 , the left leader @xmath341 and the horizontal line @xmath111 split the instance into two three - sided instances @xmath355 and @xmath356 . )",
    "sketch of the areas @xmath360 , @xmath359 , @xmath361 , @xmath362 , @xmath365 and @xmath363 . )",
    "the leaders @xmath353 , @xmath341 and @xmath340 split the three - sided instance into two two - sided instances.,title=\"fig : \" ]    given an instance  @xmath315 of four - sided boundary labeling , the following two statements are true .",
    "if there is no planar solution for  @xmath315 , the algorithm states this .",
    "if there is a planar solution for  @xmath315 , the algorithm returns such a solution .    in case",
    "the algorithm returns a solution , it has been constructed from planar solutions of disjoint instances of two - sided boundary labeling with adjacent sides . as the union of these two - sided instances contains all sites and ports of  @xmath315 , the algorithm returns a planar solution of  @xmath315 , which shows the first statement .",
    "conversely , assume that  @xmath315 has a planar solution  @xmath74 . by proposition  [ prop :",
    "partitioned ] , we may assume that  @xmath74 is partitioned .",
    "in particular , let  @xmath278 , @xmath353 , @xmath279 and  @xmath341 be the extremal leaders in  @xmath369 of the top , left , bottom and right side of  @xmath1 , respectively , and let  @xmath111 be a horizontal line that separates the top leaders from the bottom leaders .    obviously ,  @xmath353 ,  @xmath341 and  @xmath111 split the instance into two three - sided instances  @xmath355 and  @xmath356 . as the algorithm systematically explores all choices of extremal right leaders , extremal left leaders and horizontal lines partitioning the set of sites , it must find  @xmath353 ,  @xmath341 and a horizontal line  @xmath370 that separates the same sets of sites as  @xmath111 .",
    "thus ,  @xmath355 and  @xmath356 are considered by the algorithm .",
    "let  @xmath355 be the instance above the curve defined by  @xmath353 , @xmath341 and  @xmath370 , and let  @xmath356 be the instance below that curve .",
    "we now show that the algorithm finds a planar solution for  @xmath355 .",
    "symmetric arguments hold for  @xmath356 .",
    "as the algorithm explores all choices of extremal top leaders in  @xmath355 , it also considers  @xmath278 to be the extremal top leader .",
    "this leader partitions the area of  @xmath355 into the two disjoint areas  @xmath371 and  @xmath372 ; see fig .",
    "[ fig : separation - four - sided ] .",
    "it directly follows from the extremal choice of  @xmath341 , @xmath278 and  @xmath353 that there is no leader in  @xmath74 that intersects both  @xmath333 to  @xmath334 .",
    "in particular , no left leader intersects  @xmath333 and no right leader intersects  @xmath334 .",
    "thus ,  @xmath333 and  @xmath334 split  @xmath74 into independent planar solutions  @xmath335 and  @xmath336 of two two - sided instances  @xmath357 and  @xmath358 induced by  @xmath333 and  @xmath334 , respectively .",
    "note that the algorithm considers the same two - sided instances independently from each other . as  @xmath357 has a solution , namely  @xmath335",
    ", we know that the dynamic program finds a solution  @xmath373 for  @xmath357 . in particular , all leaders of  @xmath373 lie in  @xmath333 .    applying symmetric arguments for  @xmath358 ,",
    "the algorithm yields a planar solution  @xmath374 that stays in  @xmath334 .",
    "consequently , combining  @xmath373 and  @xmath374 into one solution yields a planar solution  @xmath375 for  @xmath355 .",
    "analogously , we obtain a planar solution  @xmath376 for  @xmath356 . obviously , due to the separation by  @xmath353 ,  @xmath341 and  @xmath370 , the union of  @xmath375 and  @xmath376 is also planar , which is the overall solution returned by the algorithm .",
    "this proves the second statement of the lemma .",
    "let us analyze the running time of the algorithm .",
    "obviously , there are  @xmath24 possible combinations of left and right extremal leaders and a horizontal line separating the top and bottom - labeled sites . for each combination , we independently solve two three - sided instances .",
    "for such a three - sided instance , we consider @xmath19 choices for the extremal leader @xmath340 and independently solve two independent two - sided instances with theorem  [ thm : efficient - twosided - labeling ] in @xmath19 time .",
    "this implies that solving one three - sided instances takes @xmath25 time .",
    "thus , the overall running time is  @xmath28 .",
    "the following theorem summarizes this result .",
    "[ thm : efficient - foursided - labeling ] four - sided boundary labeling can be solved in  @xmath377 time using  @xmath23 space .",
    "note that , except for the length minimization , our approach for the four - sided case also carries over to the extensions from section  [ sec : two - sided - extensions ] , because we only solve subinstances of  two - sided boundary labeling with adjacent sides .",
    "in particular with corresponding impact on the running time we can soften the restriction that the number of labels and sites is equal .",
    "in this paper , we have studied the problem of testing whether an instance of two - sided boundary labeling with adjacent sides admits a planar solution .",
    "we have given the first efficient algorithm for this problem , running in  @xmath19 time .",
    "our algorithm can also be used to solve a variety of different extensions of the problem .",
    "we have shown how to generalize to sliding ports instead of fixed ports without increasing the running time and how to maximize the number of labeled sites such that the solution is planar in  @xmath244 time .",
    "we further have given an extension to the algorithm that minimizes the total leader length in  @xmath269 time .",
    "with some additional work , our approach can also be used to solve three - sided and four - sided boundary labeling in polynomial time .",
    "we have introduced an algorithm solving the three - sided case in  @xmath25 time and the four - sided case in  @xmath377 time . also , except for the length minimization , all extensions carry over .",
    "it remains open whether a minimum length solution of three - sided and four - sided boundary labeling can be computed in polynomial time .",
    "m.  a. bekos , s.  cornelsen , m.  fink , s.  hong , m.  kaufmann , m.  nllenburg , i.  rutter , and a.  symvonis .",
    "many - to - one boundary labeling with backbones . in s.",
    "wismath and a.  wolff , editors , _ proc .",
    "graph drawing ( gd13 ) _ , volume 8242 of _ lect .",
    "notes comput .",
    "_ , pages 244255 .",
    "springer - verlag , 2013 .",
    "t.  m. chan , h .- f .",
    "hoffmann , s.  kiazyk , and a.  lubiw .",
    "minimum length embedding of planar graphs at fixed vertex locations . in s.  k. wismath and a.  wolff , editors ,",
    "graph drawing ( gd13 ) _ , volume 8242 of _ lect .",
    "notes comput .",
    "_ , pages 376387 .",
    "springer - verlag , 2013 .",
    "b.  chazelle and 36 co - authors . the computational geometry impact task force report . in b.",
    "chazelle , j.  e. goodman , and r.  pollack , editors , _ advances in discrete and computational geometry _ , volume 223 , pages 407463 .",
    "american mathematical society , providence , ri , 1999 .",
    "b.  katz , m.  krug , i.  rutter , and a.  wolff .",
    "manhattan - geodesic embedding of planar graphs . in d.",
    "eppstein and e.  r. gansner , editors , _ proc .",
    "graph drawing ( gd09 ) _ , volume 5849 of _ lect .",
    "notes comput .",
    "_ , pages 207218 .",
    "springer - verlag , 2010 ."
  ],
  "abstract_text": [
    "<S> in the _ boundary labeling _ problem , we are given a set of  @xmath0 points , referred to as _ sites _ , inside an axis - parallel rectangle  @xmath1 , and a set of  @xmath0 pairwise disjoint rectangular labels that are attached to  @xmath1 from the outside . </S>",
    "<S> the task is to connect the sites to the labels by non - intersecting rectilinear paths , so - called _ leaders _ , with at most one bend .    in this paper , we study the _ multi - sided boundary labeling _ </S>",
    "<S> problem , with labels lying on at least two sides of the enclosing rectangle . </S>",
    "<S> we present a polynomial - time algorithm that computes a crossing - free leader layout if one exists . </S>",
    "<S> so far , such an algorithm has only been known for the cases in which labels lie on one side or on two opposite sides of  @xmath1 ( here a crossing - free solution always exists ) . </S>",
    "<S> the case where labels may lie on adjacent sides is more difficult . </S>",
    "<S> we present efficient algorithms for testing the existence of a crossing - free leader layout that labels all sites and also for maximizing the number of labeled sites in a crossing - free leader layout . for two - sided boundary labeling with adjacent sides , </S>",
    "<S> we further show how to minimize the total leader length in a crossing - free layout . </S>"
  ]
}
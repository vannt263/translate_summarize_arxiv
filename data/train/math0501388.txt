{
  "article_text": [
    "while the algorithmic complexity of many fundamental problems in algebraic geometry remains unknown , important recent advances have revealed that algebraic geometry and algorithmic complexity are closely and subtly intertwined .",
    "for instance , consider the problem of deciding whether a complex algebraic set  specified as the zero set of a collection of multivariate polynomials  is empty or not .",
    "this is the * complex feasibility problem * , @xmath12 , and we denote its restriction to any family @xmath13 of polynomial systems by @xmath14 . + * note : * the complexity classes we are about to mention are reviewed briefly in section [ sec : alg ] ( see @xcite for an excellent introductory account ) .    before seminal work of pascal koiran @xcite , the only connection known between @xmath12 and the @xmath11 problem was that @xmath12 is @xmath15-hard , i.e. , a polynomial time algorithm for @xmath12 would imply @xmath16 .",
    "( the @xmath17 problem is the most famous open problem from theoretical computer science and has a vast literature ( see , e.g. , @xcite and the references in @xcite ) . )",
    "however , @xmath15-hardness tells us little about what complexity class @xmath12 actually belongs to , or how quickly we can anticipate solving a given instance of @xmath12 . koiran s paper @xcite was the first to show that the truth of the * generalized riemann hypothesis ( grh ) * yields the implication @xmath18 , and @xcite later showed that this implication could still hold even under certain failures of grh .",
    "furthermore , the underlying algorithms are entirely different from the usual techniques of commutative algebra ( e.g. , grbner bases and resultants ) and thus breathe new life into an old problem .    here",
    "we present algorithms revealing new non - trivial families @xmath13 of multivariate polynomial systems where the implication @xmath19 holds * unconditionally*. we also present several examples indicating that the algorithms yielding our main results may be quite practical . in the coming sections , we will detail some of the intricacies behind making such algorithms free from unproved number - theoretic hypotheses .",
    "we begin by stating a number - theoretic hypothesis that is demonstrably weaker than grh .",
    "we use @xmath20 for the positive integers .",
    "there is an absolute constant @xmath21 such that for any @xmath22 with @xmath23 , the set@xmath24 contains at least @xmath25 primes .",
    "assumptions even stronger than aph are routinely used , and widely believed , in the cryptology and algorithmic number theory communities ( see , e.g. , @xcite ) . in particular , while aph is implied by grh for the number fields @xmath26 , where @xmath27 denotes a primitive @xmath28 root of unity , aph can still hold under certain failures of the latter hypotheses , e.g. , the presence of infinitely many zeroes off the critical line @xcite .",
    "[ thm : plai ] suppose @xmath29 $ ] , @xmath30 , and@xmath31 . let @xmath32 denote the following problem : decide whether the system of equations @xmath33 has a solution in @xmath34",
    ". also let the * input size * of the preceding polynomial system be @xmath35 , where @xmath36 , and let @xmath37 denote the restriction of @xmath32 to univariate polynomials",
    ". then    1 .",
    "@xmath38 , assuming aph .",
    "2 .   unconditionally",
    ", @xmath39 and @xmath37 is already @xmath15-hard .",
    "3 .   when restricted to * fixed * @xmath40 * and * @xmath41 , @xmath42 unconditionally .",
    "in particular , @xmath43 unconditionally .",
    "our notion of input size is quite natural : to put it roughly , @xmath44 measures the amount of ink ( or memory ) one must use to record the monomial term expansion of @xmath45 .",
    "note that the degree of a polynomial can be exponential in its input size if the polynomial is sparse , e.g. , @xmath46 .",
    "( we employ the usual computer science notations @xmath47 and @xmath48 to respectively denote upper and lower bounds that are asymptotically true up to a multiplicative constant .",
    "when both conditions hold , then one writes @xmath49 . )",
    "thus , in the miraculous event that @xmath16 , our algorithm yielding assertion ( 2 ) above has complexity * polynomial * in the bit - sizes of the @xmath50 and the * logarithms * of the @xmath51  a property * not * present in any earlier algorithm for @xmath37 .",
    "alternatively , theorem [ thm : plai ] tells us that we can try to prove @xmath52 by showing that @xmath53 , thus giving another opportunity for algebraic geometry tools for the @xmath11 problem ( see also @xcite for a different approach via geometric invariant theory ) .",
    "indeed , should one eventually prove * unconditionally * that @xmath32 lies in the polynomial hierarchy then it would be more profitable to proceed with an attempt to prove @xmath54 rather than @xmath53 ( since @xmath32 is at least as hard a problem as @xmath37 ) .",
    "[ ex : first ] suppose we would like to know if @xmath55 vanishes at some @xmath28 root of unity , where @xmath56 , the @xmath57 are integers of absolute value bounded above by @xmath58 , and @xmath59 are positive integers .",
    "the classical resultant for two polynomials in one variable ( see , e.g. , @xcite ) then tells us that @xmath45 vanishes at an @xmath28 root of unity iff the determinant of a highly structured @xmath60 matrix vanishes .",
    "such a matrix is a special case of what is known as a * quasi - toeplitz * matrix .",
    "the best general algorithms for evaluating such determinants yields a randomized bit complexity upper bound of @xmath61 , for some absolute constant @xmath62 @xcite .",
    "( grbner bases , being far more general than what we need , yield a deterministic complexity upper bound no better than @xmath63 bit operations ( see , e.g. , @xcite ) . )",
    "more directly , one could also compute the gcd of @xmath45 and @xmath64 , but this still leads to a deterministic bit complexity upper bound no better than @xmath65 ( see , e.g. , ( * ? ? ?",
    "solving even this special case of @xmath37 within @xmath66 bit operations for some @xmath67 is thus still an open problem . @xmath68",
    "while the @xmath15-hardness of @xmath37 was derived earlier by david a.  plaisted @xcite in a different context , our complexity upper bounds are new : the best previous upper bounds were @xmath9 @xcite ( unconditionally ) , @xmath69 @xcite , or @xmath70 @xcite ( under successively stronger unproved number - theoretic hypotheses , all stronger than aph ) , following from much more general results .",
    "it is also interesting to note that @xmath37 is the same as detecting the vanishing of so - called * cyclic resultants * , which arise in dynamical systems and knot theory @xcite .",
    "let us now motivate and clarify our use of the term `` torsion point '' by showing how our results can also be viewed in the context of * lang s conjecture * from diophantine geometry ( see , e.g. , ( * ? ? ?",
    "6.3 , pp .",
    "3738 ) ) .    throughout this paper",
    ", we will let @xmath71 and @xmath72 , where it is understood that @xmath73 , @xmath74 , and @xmath75 . also , given @xmath76 , we let @xmath77 denote the subgroup of @xmath78 satisfying @xmath79 .",
    "we call any point of @xmath6 with each coordinate a root of unity a * torsion point*. finally , for any @xmath80 $ ] , @xmath81 denotes the zero set of @xmath82 in @xmath34 . @xmath68    the subgroup @xmath77 is sometimes known in algebraic geometry as a , and the set @xmath83",
    "is usually called a * translated * subtorus .",
    "the distribution of torsion points and subtori on algebraic sets happens to be quite special : a given algebraic set will have all its torsion points contained in a subset that is a finite union of subtori , each translated by a torsion point .",
    "this follows from a famous result of laurent @xcite which was conjectured earlier by chabauty @xcite .",
    "explicit bounds on how many torsion points can lie in an algebraic set have been given by ruppert in certain cases @xcite , and bombieri and zannieri in far greater generality @xcite .",
    "given these deep results , one may suspect that @xmath14 can be sped up when the underlying family @xmath13 is restricted to problems involving torsions points .",
    "our two main theorems show that this is indeed the case .",
    "in particular , theorem [ thm : torsion ] below complements theorem [ thm : plai ] by examining when an algebraic set contains an entire subgroup worth of torsion points , as opposed to a single torsion point .",
    "please note that theorem [ thm : torsion ] does * not * depend on any unproved hypotheses .",
    "[ thm : torsion ] following the notation above , for any @xmath84 , @xmath76 and @xmath85 $ ] with @xmath86 ranging over @xmath87 , let @xmath88 denote the problem of deciding whether + @xmath89 .",
    "+ then , measuring the underlying input size * instead * as + @xmath90 , + we have :    1 .",
    "@xmath91 , and the restriction of @xmath88 to @xmath4 is already @xmath8-hard .",
    "2 .   for * fixed",
    "* @xmath40 , @xmath92 , and @xmath93 , we have @xmath94",
    ".    in particular , @xmath95 .",
    "assertions ( 1 ) and ( 2 ) of theorem [ thm : torsion ] , in the special case @xmath4 , were derived earlier respectively in @xcite and theorem 2 of the first arxiv version of @xcite , but with no reference to tori .",
    "note in particular that our first notion of size for @xmath96 can be exponential in @xmath97 ( e.g. , take @xmath98 for all @xmath99 ) , so theorem [ thm : torsion ] uses a much more compact notion of input size than theorem [ thm : plai ] .",
    "theorems [ thm : plai ] and [ thm : torsion ] can thus be viewed as first steps toward an algorithmic counterpart to laurent s theorem . in particular , having derived nearly tight lower and upper complexity bounds , our results allow us to efficiently detect the presence of subtori . determining the actual * exceptional locus *",
    " i.e. , the precise finite union of translated subtori containing all the torsion points in a given algebraic set  remains an open problem .",
    "laurent s theorem has since been extended to algebraic groups more general than @xmath6  semi - abelian varieties  by mcquillan @xcite , thus solving the aforementioned lang conjecture ( * ? ? ?",
    "* conj .  6.3 , pg .",
    "for instance , a very special case of mcquillan s more general result is the faltings - mordell theorem .",
    "a very special case of the latter result is the fact that an algebraic curve of genus @xmath100 , say , defined as the zero set of a bivariate polynomial with rational coefficients , has at most finitely many rational points .",
    "the existence of algorithmic counterparts to these more general results is thus a tantalizing possibility .",
    "an implementable algorithm for finding torsion points on jacobians of algebraic curves of genus @xmath100 has already been detailed by bjorn poonen @xcite , and the complexity appears ( but has not yet been proved ) to be polynomial - time for * fixed * genus @xcite .",
    "such a complexity bound , if proved for the sparse encoding , would form an intriguing analogue to the polynomiality of @xmath32 for * fixed * @xmath40 and @xmath101 .    in closing this introduction ,",
    "let us point out that our improved complexity bounds appear to hinge on the highly refined structure of the galois groups underlying our equations : cyclic .",
    "in particular , whereas complex feasibility for an input system @xmath102 is ( conjecturally ) solvable by checking the density of primes @xmath103 for which the mod @xmath103 reduction of @xmath102 has a root mod @xmath103 @xcite , our algorithms instead use a * single * well - chosen @xmath103 .",
    "it is therefore appropriate to formulate the following conjecture , based on an observation of rachel pries @xcite :    suppose @xmath13 is the family of polynomial systems @xmath102 such that @xmath104 is finite and the galois group of @xmath102 over @xmath105 is dihedral or bicyclic .",
    "then the restriction of @xmath12 to @xmath13 lies in @xmath106 unconditionally .",
    "while the algorithm underlying the general case of theorem [ thm : plai ] is simpler than that of theorem [ thm : torsion ] , the key ideas flow more clearly if we begin with the latter theorem .",
    "so we review some key ideas in one variable in section [ sec : ex ] , and then prove theorem [ thm : torsion ] in section [ sec : alg ] below .",
    "we finally prove theorem [ thm : plai ] across sections [ sec : new ] and [ sec : comp ] , and briefly discuss some limits to possible improvements in section [ sec : final ] .",
    "as mentioned before , our main results improve upon koiran s earlier algorithms for @xmath12 @xcite by relaxing , or removing entirely , his assumption of grh for certain input families .",
    "our success in the setting of torsion points and subtori can hopefully be extended to situations where the underlying galois groups are more complicated , and membership in the polynomial hierarchy was possible only under stronger assumptions @xcite .",
    "we also point out that the work of david alan plaisted @xcite  which focussed on polynomials in one variable  was a central inspiration behind this paper .",
    "our results extend @xcite to multivariate polynomials and subtori , and suggest the broader context of computational arithmetic geometry @xcite .",
    "one should also remember earlier work of grigoriev , karpinski , and odlyzko @xcite , where it was shown that one can decide if one sparse univariate polynomial divides another , within @xmath8 , assuming grh .",
    "our theorem [ thm : torsion ] can be viewed as an unconditional extension of their result to certain multivariate binomial ideals .",
    "needless to say , the results of @xcite contain those of @xcite as special cases , but the more general results still depend on unproved number - theoretic hypotheses .",
    "finally , we point out that as this paper was being completed , the author found the paper @xcite during a mathscinet search . in this paper , the authors present a * polynomial - time * algorithm ( found by their referee ( * ? ? ?",
    "* thm .  3 and algor .",
    "a , pp .  959962 ; acknowledgements ) ) for deciding whether a sparse univariate polynomial of degree @xmath107 is divisible by the @xmath2 cyclotomic polynomial for an input integer @xmath108 * whose factorization is known*. ( david a.  plaisted claimed such a result 20 years before @xcite , but without a proof ( * ? ? ?",
    "* top of page 132 ) . ) as a consequence , they prove that for a * fixed number of monomial terms * , one can restrict to @xmath108 with prime factors bounded above by a constant , and thus one obtains a bona fide polynomial time algorithm since such integers can be factored in polynomial time .",
    "an analogous speed - up for the restriction of @xmath37 to a fixed number of monomial terms appears to remain unknown .",
    "the techniques of @xcite are quite similar to those of @xcite , with two exceptions : ( 1 ) @xcite makes no use of certificates in finite fields and ( 2 ) @xcite makes clever use of a result of conway and jones @xcite stating in essence that polynomials vanishing at a primitive @xmath2 root of unity can not be `` too sparse '' as a function of @xmath108 .",
    "our techniques complement the results of @xcite by showing that their main problem lies in the polynomial hierarchy unconditionally , even when the number of monomial terms varies and the factorization of @xmath108 is unknown .",
    "this follows directly from our proof of theorem [ thm : torsion ] , which also extends their context to subtori in higher dimensions .",
    "for any ring @xmath109 we will let @xmath110 denote the group of multiplicatively invertible elements of @xmath109 . also , a * primitive * @xmath28 root of unity is a complex number @xmath111 such that @xmath112 and [ @xmath113 .",
    "the @xmath28 * cyclotomic polynomial * , @xmath114 $ ] , is then the minimal polynomial for the primitive @xmath28 roots of unity .",
    "@xmath68    [ ex:91 ] specializing example [ ex : first ] from the introduction , note that the following assertions are equivalent : ( 1 ) @xmath45 vanishes at an @xmath28 root of unity , ( 2 ) @xmath45 vanishes at a * primitive * @xmath2 root of unity for some @xmath115 , ( 3 ) @xmath116 for some @xmath115 . for",
    "the sake of illustration , let us assume @xmath117 and take @xmath118 .",
    "since @xmath119 for all @xmath120 ( see , e.g. , ( * ? ? ?",
    "* ch .  6 ) ) , it is then easy to see that @xmath45 vanishes at a primitive @xmath121 root of unity @xmath122 .",
    "the latter condition is in turn equivalent to the truth of + ( @xmath123)@xmath124 + for all @xmath125 . @xmath68    our main algorithmic tricks",
    " when specialized to the example above  are ( a ) reducing the last check over all @xmath125 to a single well chosen @xmath126 and ( b ) working over a finite field instead of @xmath127 $ ] . in particular , assuming @xmath128 is prime , it follows easily from fermat s little theorem that @xmath129 @xmath130 for all @xmath131 .",
    "the multivariate lemma below will later help us derive that the * converse * holds as well , provided @xmath126 is large enough .",
    "[ lemma : div ] for any polynomials @xmath132 $ ] ( expressed as sums of monomial terms ) , let @xmath133 denote the sum of the absolute values of the coefficients of @xmath134 , and",
    "let @xmath135 for all @xmath136 . then @xmath137 . also , if @xmath138 is a prime satisfying @xmath139 ; and @xmath140 for all @xmath141 , then @xmath134 is identically @xmath142 .",
    "one should recall * schwartz s lemma * @xcite , which asserts that for any field @xmath143 , and any finite subset @xmath144 , a polynomial @xmath145 $ ] that is not identically zero vanishes at @xmath146 points of @xmath147 . applying this result would , however , yield a weaker version of the second part of our lemma by requiring a larger @xmath138 ( @xmath148 ) .",
    "nevertheless , the proof below is quite reminiscent of the proof of schwartz s lemma . @xmath68    * proof of lemma [ lemma : div ] : * writing @xmath149 for all @xmath99 , observe that + @xmath150 + @xmath151 .",
    "+ so the first portion is proved .",
    "we now proceed by induction on @xmath40 : if @xmath4 then @xmath152 for all @xmath153 , since @xmath154 and a ( not identically zero ) polynomial of degree @xmath155 can have at most @xmath156 roots in @xmath157 . since @xmath158 , we thus have @xmath159 , and our base case is complete .    to conclude ,",
    "assume that the second portion of our lemma holds for some fixed @xmath160 .",
    "let us then temporarily consider @xmath134 as a polynomial in @xmath161 with coefficients in @xmath162 $ ] .",
    "let @xmath163 denote the coefficient of @xmath164 .",
    "fixing any values for @xmath165 , observe that just as in the last paragraph , @xmath134 can vanish at no more than @xmath166 values of @xmath167 . since @xmath168",
    "we then obtain @xmath169 for all @xmath170 .",
    "since @xmath171 for all @xmath136 , and since the @xmath57 have exponents no larger than @xmath172 , our induction hypothesis then implies that @xmath173 are identically @xmath142 , and thus @xmath134 is indeed identically @xmath142 .",
    "@xmath174    that we can pick a * small * @xmath126 with @xmath175 prime is guaranteed by a classic theorem of linnik .",
    "the least prime of the form @xmath176 , where @xmath120 and @xmath177 are relatively prime integers and @xmath178 , does not exceed @xmath179 for some absolute constant @xmath180 . @xmath174",
    "the best current unconditional estimate for @xmath180 is @xmath181 , assuming @xmath120 is sufficiently large @xcite .",
    "it is also known that the truth of grh implies that we can take @xmath182 for any @xmath183 , but of course valid only for @xmath184 , with @xmath185 an increasing function of @xmath186 ( * ? ? ?",
    "* thm .  8.5.8 , pg .",
    "[ a number - theoretic speed - up ] [ ex : biguni ] let us consider    @xmath187    which has degree @xmath188 and exactly @xmath189 monomial terms , and suppose we d like to verify whether @xmath45 vanishes at some @xmath190 root of unity . to illustrate our approach via cyclotomic polynomials ,",
    "let us first see if @xmath45 vanishes at a * primitive * @xmath121 root of unity . as observed earlier , when @xmath191 is prime , we have that @xmath192 for all @xmath193 . so condition ( @xmath123 ) implies a certain congruence holds .",
    "however , the reduction goes the other way as well : lemma [ lemma : div ] ( applied to the * mod @xmath194 reduction * of @xmath195 ) tells us that the * converse * to the preceding implication holds , provided @xmath138 is prime , @xmath196 , and @xmath197 .    in particular",
    ", @xmath198 is prime .",
    "so to check whether @xmath45 vanishes at a primitive @xmath121 root of unity , we need only check whether @xmath199 since @xmath200 yields @xmath201 for the product polynomial above , we thus have certification that @xmath45 does * not * vanish at any primitive @xmath121 root of unity .",
    "similar calculations for * small * choices of @xmath126 and @xmath202 then suffice to show that @xmath45 does not vanish at any primitive @xmath2 root of unity for any other @xmath203 either .",
    "( excluding the easy case @xmath204 and the case @xmath118 we just did , there are exactly @xmath205 other such cases . )",
    "thus , we can at last certify that @xmath45 does not vanish at * any * @xmath190 root of unity . @xmath68",
    "it is easily checked that the number of bit operations for the calculations of example [ ex : biguni ] ( including the work for the additional @xmath205 cases of @xmath203 ) lies in the lower hundreds of thousands .",
    "( this is via standard mod @xmath40 arithmetic ( see , e.g. , ( * ? ? ?",
    "* ch .  5 ) ) , with * no * use of fft multiplication . )",
    "more concretely , the finite field certificate check above took but a fraction of a second . on the other hand ,",
    "computing the gcd of @xmath206 and the @xmath45 above took 37 minutes and 38.9 seconds.@xmath207 we analyze the underlying asymptotic complexity in greater depth in the next section , where we also formalize our algorithm for @xmath88 .",
    "let us recall the following informal descriptions of some famous complexity classes .",
    "a completely rigourous and detailed description of the classes below can be found in the excellent reference @xcite .",
    "our underlying computational model is the classical turing model . for concreteness",
    ", it is not unrealistic to simply imagine that we are working with a laptop computer , equipped with infinite memory , flawless hardware , and a flawless operating system : classical theorems from complexity theory allow one to define the complexity classes below in a machine - independent manner .",
    "( we omit these more formal definitions for brevity ) .",
    "in particular , we can identify `` time '' or `` work '' with how long our laptop computer takes to solve a given problem , and `` input size '' can simply be identified with the number of bytes in some corresponding input file .    *   the family of decision problems which can be done within time polynomial in the input size .",
    "*   the family of decision problems admitting randomized algorithms that terminate in polynomial - time to give an answer which is correct with probability at least by any constant strictly greater than @xmath208 and still obtain the same family of problems . ]",
    "@xmath209 . *",
    "the family of decision problems where a `` yes '' answer can be * verified * within time polynomial in the input size . *",
    "the family of decision problems where a `` no '' answer can be * verified * within time polynomial in the input size .",
    "*   the family of decision problems solvable by a @xmath210 algorithm which has been augmented with exactly * one * use of an oracle in @xmath15 . *",
    "the family of decision problems where a `` yes '' answer can be certified by using an @xmath15-oracle a number of times polynomial in the input size . *   the family of decision problems solvable within time polynomial in the input size , with as many calls to an @xmath3 oracle as allowed by the time bound .",
    "*   the family of decision problems solvable within time polynomial in the input size , provided a number of processors exponential in the input size is allowed . *",
    "the family of decision problems solvable within time exponential in the input size .    the inclusions + @xmath211 + and + @xmath212 , + are fundamental in complexity theory @xcite , and the properness of every explicitly stated inclusion above turns out to be a major open problem ( as of late 2007 ) .",
    "for instance , while we know that @xmath213 , the inclusion @xmath214 is not even known to be proper .",
    "the first @xmath215 complexity classes in the list above lie in a family known as the * polynomial hierarchy*. it is known that @xmath16 implies that the polynomial hierarchy * collapses * , which in particular yields the equalities @xmath216 ( * ? ? ?",
    "this standard fact will be used later .",
    "the structure of our main algorithms depends on a useful number - theoretic lemma stated below . in what follows",
    ", @xmath217 denotes the @xmath218 standard basis vector of whatever finite - dimensional module we are working in .    for any @xmath219",
    "$ ] , let @xmath220 $ ] denote the polynomial obtained by reducing all exponent vectors in the monomial term expansion of @xmath134 modulo the additive subgroup @xmath221 of @xmath222 and collecting terms .",
    "@xmath68    note that computing @xmath223 is nothing more than repeatedly applying the substitution @xmath224 ( for all monomial terms and @xmath225 ) , and simplifying , until one obtains a polynomial with degree @xmath226 with respect to @xmath227 for all @xmath225 .",
    "note also that any coefficient of @xmath223 is a sum of coefficients of @xmath134 .",
    "[ prop : bits ] for any @xmath228 $ ] , let @xmath229 denote the number of monomial terms of @xmath230 for all @xmath99 .",
    "then @xmath231 , and the monomial term expansion of @xmath232 can be computed within + @xmath233 + bit operations .",
    "* proof : * the first portion follows directly from the definition of @xmath234 and @xmath223 .    to prove the second portion , note that computing @xmath235 consists simply of reducing the coordinates of the exponent vectors modulo integers of size no larger than @xmath236 , and then summing up coefficients of monomial terms .",
    "so via basic fast finite field arithmetic ( e.g. , ( * ? ? ?",
    "* table 3.1 , pg .",
    "43 ) ) , this can be done within @xmath237 bit operations .",
    "next , note that to compute @xmath232 , we can use the recurrence @xmath238 , @xmath239 , and stop at @xmath240 . defining @xmath241 to be the maximum bit - length of any coefficient of @xmath235 , the number of bit operations to compute @xmath242",
    "is then easily seen to be @xmath243 .",
    "( the @xmath244 notation indicates that additional factors polynomial in @xmath245 and @xmath246 are omitted . ) this bound is obtained by first computing @xmath247 by simply multiplying all monomials of @xmath248 with all monomials of @xmath248 ( using fast arithmetic along the way ) , collecting terms , and then reducing the exponents as in the definition of @xmath249 .",
    "continuing inductively , our complexity bound follows directly , keeping in mind that @xmath250 .",
    "@xmath174    [ lemma : final ] following the notation above , suppose @xmath219 $ ] , @xmath251 , @xmath252 , @xmath253 , and assume @xmath126 is a positive integer such that @xmath254 is prime .",
    "then + @xmath255    * proof : * let @xmath256 denote the ideal @xmath257 $ ] . observe that the primary decomposition of @xmath256 is clearly @xmath258 , and each ideal in the preceding intersection is prime .",
    "@xmath256 is thus a radical ideal in @xmath259 $ ] .",
    "now let @xmath260 $ ] . before proving our desired equivalence we will need the fact that the ideal @xmath261 of @xmath262 $ ] is radical as well .",
    "so let us conclude this necessary digression as follows :    suppose @xmath263 for some @xmath264 $ ] and @xmath265 .",
    "since @xmath256 is radical and @xmath266 , we then clearly obtain the existence of @xmath267 $ ] with + @xmath268 .",
    "+ letting @xmath269 denote the galois group of the coefficients of the @xmath50 over @xmath105 , let us define @xmath270 for all @xmath225 . observe then that @xmath271 also equals @xmath272 , and thus lies in @xmath261 as well by galois invariance .",
    "so @xmath261 is radical .",
    "returning to our main proof , we now see that : + ( a ) @xmath273 , and + ( b ) @xmath274 is a @xmath105-vector space basis for@xmath275/i$ ] . + in particular , @xmath276 iff @xmath223 is identically zero .",
    "so it suffices to prove that @xmath223 is identically zero @xmath277 for all @xmath278 .",
    "let @xmath279 .    *",
    "( @xmath280 ) : * by ( b ) , @xmath223 identically zero @xmath281 , and thus @xmath282 .",
    "since @xmath254 is prime , fermat s little theorem implies @xmath283 for all @xmath284 , so + @xmath285 mod @xmath138 , for all @xmath278 .",
    "+ ( remember that we have defined @xmath120 so that @xmath286 for all @xmath225 . )    * ( @xmath287 ) : * by ( b ) , @xmath288 for any @xmath219 $ ] .",
    "so we must then have + @xmath289 .",
    "+ we therefore obtain that @xmath290 for all @xmath291 for all @xmath278 , via another application of fermat s little theorem .",
    "now note that @xmath292 and + @xmath293 + for all @xmath225 .",
    "furthermore , @xmath294 for all @xmath295 .",
    "so lemma [ lemma : div ] immediately implies that @xmath223 is identically @xmath142 .",
    "@xmath174    we now state our first main algorithm .",
    "+ [ algor : subtorus]*input : * polynomials @xmath85 $ ] with @xmath296 , positive integers @xmath297 , and a suitable value for the constant @xmath180 from linnik s theorem . + * output : * a true declaration of whether + @xmath298 .    *",
    "description : *    1 .",
    "replace each @xmath299 by @xmath300 ( following the notation above ) .",
    "2 .    let @xmath301 and @xmath302 , where @xmath107 is + @xmath303 .",
    "nondeterministically , decide whether there is a @xmath125 with @xmath304 and @xmath254 prime , a @xmath305 , and an @xmath306 , such that @xmath307 4 .",
    "if the desired @xmath308 from step 2 exists then stop and output `` no '' . otherwise , stop and output `` yes '' .",
    "@xmath68    the adverb `` nondeterministically '' can be interpreted in two ways : the simplest is to just ignore the word and employ brute - force search .",
    "this leads to an algorithm which is dramatically simpler and easier to implement than resultants or grbner bases .",
    "all of our examples were handled this simple way , and the respective timings were already competitive with the latter techniques ( cf .",
    "examples [ ex : first ] , [ ex:91 ] , [ ex : biguni ] , and [ ex : multi ] ) .",
    "alternatively , one can observe that step 2 is equivalent to deciding the truth of a quantified boolean sentence of the form @xmath309 , with @xmath310 computable in time polynomial in the size of our initial input .",
    "this is clarified in our proof of theorem [ thm : torsion ] below .    before starting our proof",
    ", we will need a lemma on integral matrices to quantify certain monomial changes of variables .",
    "[ dfn : hermite ] let @xmath311 denote the set of @xmath312 matrices with all entries integral , and let @xmath313 denote the set of all matrices in @xmath314 with determinant @xmath315 ( the set of * unimodular * matrices ) .",
    "recall that any @xmath312 matrix @xmath316 $ ] with @xmath317 for all @xmath318 is called * upper triangular*. then , given any @xmath319 , we call an identity of the form @xmath320 , with @xmath321\\!\\in\\!{\\mathbb{z}}^{n\\times n}$ ] upper triangular and @xmath322 , a * hermite factorization * of @xmath120 . also , if we have the following conditions in addition :    1 .",
    "@xmath323 for all @xmath324 .",
    "[ 1]for all @xmath136 , if @xmath99 is the smallest @xmath325 such that @xmath326 then @xmath327 for all @xmath328",
    ".    then we call @xmath329 * hermite normal form * of @xmath120 .",
    "@xmath68    a * smith * factorization is a more refined factorization of the form @xmath330 with @xmath322 , @xmath331 , and @xmath332 diagonal . in particular , if @xmath333 $ ] and we require additionally that @xmath334 and @xmath335 for all @xmath336 ( setting @xmath337 ) , then such a factorization for @xmath120 is unique and is called * the * smith factorization .    [ lemma : unimod ] @xcite for any @xmath338\\!\\in\\!{\\mathbb{z}}^{n\\times n}$ ] , the hermite and smith factorizations of @xmath339 can be computed within @xmath340 bit operations . furthermore , the entries of all matrices in these factorizations have bit size @xmath341 .",
    "@xmath174    * proof of theorem [ thm : torsion ] : * define @xmath342 and let us first reduce to the special case where @xmath343 for all @xmath136 : let @xmath120 be the matrix whose columns are @xmath93 and define @xmath344 .",
    "an elementary calculation then reveals that if we have the smith factorization @xmath345 $ ] ( with @xmath332 having exactly @xmath202 nonzero entries ) , then @xmath346 , upon setting @xmath347 . via lemma",
    "[ lemma : unimod ] , we see that this change of variables can be found within @xmath10 and the increase in our input size is polynomial in @xmath348 .",
    "so let us assume henceforth that @xmath349 ( and let @xmath350 ) for all @xmath351 and set @xmath352 .",
    "the equivalence of @xmath353 and @xmath52 follows immediately from our earlier remarks on the polynomial hierarchy ( * ? ? ?",
    "17.9 ) , assuming we indeed have @xmath91 .",
    "so let us proceed with proving assertions ( 1 ) and ( 2 ) .",
    "* assertion ( 1 ) : * the @xmath8-hardness of the @xmath4 restriction of @xmath88  stated equivalently as a problem involving sparse polynomial division  is essentially ( * ? ? ?",
    "so we need only show that @xmath91 for general @xmath40 and , thanks to our preceding reductions , this can be done by proving that algorithm [ algor : subtorus ] is correct and runs within @xmath8 .",
    "correctness follows immediately from lemma [ lemma : final ] applied to the polynomials from @xmath354 .    to analyze the complexity of algorithm",
    "[ algor : subtorus ] , first note that steps 0 and 1 can clearly be done in polynomial time and step 3 takes essentially constant time .",
    "so it suffices to focus on the complexity of step 2 .",
    "let us then observe that for any @xmath355 , we can verify ( @xmath356 ) in polynomial - time : by basic finite field arithmetic ( see , e.g. , ( * ? ? ?",
    "* ch .  5 ) ) , we can clearly decide within @xmath10 whether any @xmath299 vanishes at a given point in @xmath357 using a number of bit operations polynomial in @xmath358 , and we then simply multiply the appropriate @xmath299 . in total , checking @xmath359 at any given point in @xmath357 requires a number of bit operations at worst @xmath360 times a polynomial in @xmath361 $ ] .",
    "+ now observe that @xmath362 , which is clearly linear in our input size .",
    "note also that the integer @xmath363 from algorithm [ algor : subtorus ] ( which by definition is no larger than @xmath120 ) is clearly an upper bound on the @xmath364-norms of the polynomials from ( @xmath365 ) , @xmath366 , ( @xmath367 ) .",
    "so any instance of inequality ( @xmath356 ) can clearly be checked in @xmath10 .",
    "now note that verifying @xmath368 is indeed prime can be done in time polynomial in @xmath369 ( which is in turn polynomial in our input size ) : one can either use the succinct primality certificates of pratt @xcite , or the deterministic polynomial - time primality testing algorithm from @xcite .",
    "so step 2 is nothing more than verifying the truth of the following quantified sentence : + [ 1]@xmath370 $ ] .",
    "+ @xmath0 contains the subtorus @xmath371 iff the preceding sentence is * false*. so via our preceding observations , the truth of the sentence being quantified can be verified in @xmath10 , and our algorithm thus runs in @xmath8 .    * assertion ( 2 ) : * suppose @xmath40 , @xmath92 , @xmath41 are fixed",
    ". then , by proposition [ prop : bits ] ( with @xmath372 constant ) , we can decide @xmath88 in @xmath10 simply by reducing the exponents modulo suitable integers and doing a brute - force check of the congruence condition given by lemma [ lemma : final ] .",
    "@xmath174    [ ex : trouble ] while it is tempting to propose a variant of algorithm [ algor : subtorus ] to detect * translated * subtori , here is an example showing that at least one naive extension breaks down quickly : suppose @xmath373 is prime ( we can take @xmath374 and arbitrary large by linnik s theorem ) , @xmath375 with @xmath376 and @xmath377 ; and we want to see if @xmath134 vanishes at * half * of every @xmath2 root of unity . since this happens iff @xmath378 vanishes at every @xmath2 root of unity , we could try to mimic algorithm [ algor : subtorus ] by checking whether @xmath379 for all @xmath193 .",
    "this is indeed so , since @xmath380 .",
    "however , @xmath381 for @xmath382 any @xmath2 root of unity .",
    "with some modifications , algorithm [ algor : subtorus ]  which we used to detect subtori  can be used to efficiently find torsion points in the univariate case .",
    "+ [ algor : torsion1 ] * input : * polynomials @xmath383 $ ] and a positive integer @xmath108 . + * output : * a true declaration of whether @xmath384 contains a point @xmath382 with @xmath385 .    *",
    "description : *    1 .   using algorithm [ algor : subtorus ]",
    ", nondeterministically decide whether there is a @xmath386 with @xmath387 where + @xmath388 .",
    "2 .   if the desired @xmath389 from step 1 exists then stop and output `` yes '' .",
    "+ otherwise , stop and output `` no '' .",
    "@xmath68    just as in our last algorithm , the adverb `` nondeterministically '' can be interpreted in two ways : first , one can simply employ brute - force search , and this strategy is dramatically simpler and easier to implement than resultants or grbner bases .",
    "all of our examples were handled in this simple way , and the respective timings were already competitive with the latter techniques ( cf .",
    "examples [ ex : first ] , [ ex:91 ] , [ ex : biguni ] , and [ ex : multi ] ) .",
    "alternatively , one can observe that step 1 is equivalent to deciding the truth of a quantified boolean sentence of the form @xmath390 , with @xmath310 computable in time polynomial in the size of our initial input .",
    "this type of sentence forms one of the definitions of the complexity class @xmath3 .",
    "* proof of assertion ( 2 ) of theorem [ thm : plai ] : * the @xmath15-hardness of @xmath37 is already implicit in the proof of ( * ? ? ? * thm .",
    "5.1 ) , so we need only show that @xmath39 . to do the latter",
    ", we will prove the correctness of algorithm [ algor : torsion1 ] and that it indeed runs within @xmath3 .",
    "the correctness of algorithm [ algor : torsion1 ] follows immediately from step 1 and the correctness of algorithm [ algor : subtorus ] .",
    "in particular , it is clear that @xmath50 vanishes at a primitive @xmath391 root of unity ( indeed , at * all * primitive @xmath391 roots of unity ) iff @xmath392 .    recalling that we ve already proved that algorithm [ algor : subtorus ] runs in @xmath8 in the last section , step 1",
    "thus consists of a single existential quantifier calling a @xmath8 algorithm .",
    "in particular , verifying that a putative @xmath389 satisfies @xmath386 can clearly be done in @xmath10 , and thus algorithm [ algor : torsion1 ] runs in @xmath3 .",
    "@xmath174    one can show that the number of possible @xmath389 dividing @xmath108 in step ( 1 ) of algorithm [ algor : torsion1 ] is @xmath393 ( for any @xmath183 ) , @xmath394 for a fraction of integers approaching @xmath364 as @xmath395 ( for any @xmath183 ) , and @xmath396 on average .",
    "this follows easily from earlier estimates on the number of divisors of an integer ( see , e.g. , @xcite and the references therein ) . practically speaking",
    ", this means that the main complexity bottleneck in algorithm [ algor : torsion1 ] is the efficient detection of cyclotomic factors .",
    "@xmath68    before moving to the higher - dimensional case of @xmath32 , let us point out that the product trick underlying algorithm [ algor : torsion1 ] does not naively extend to @xmath397 .",
    "[ ex : ref ] since @xmath398 for any primitive third root of unity @xmath399 , we see that @xmath400 vanishes at a point with coordinates third roots of unity .",
    "can we derive a ( polynomial - time certifiable ) criterion to detect this , in the spirit of lemma [ lemma : div ] or step 1 of algorithm [ algor : torsion1 ] ?    as an initial attempt , one could first consider the product + @xmath401 + ( based on mimicking the use of @xmath402 in algorithm [ algor : torsion1 ] ) and see if it lies in the ideal @xmath403 .",
    "the preceding product , unfortunately , fails this criterion .    on the other hand ,",
    "the larger product + @xmath404 + * does * lie in the ideal @xmath403 .",
    "however , the most obvious extension of the latter product results in a certificate which can have exponentially many factors in general .",
    "@xmath68    while the latter idea does not obviously yield an efficient higher - dimensional extension of algorithm [ algor : torsion1 ] , it does enable one to prove the correctness of a * different * ( and efficient ) higher - dimensional extension of algorithm [ algor : torsion1 ] .",
    "this we now detail .",
    "let us first state an important quantitative result , which follows directly from the effective arithmetic nullstellensatz of krick , pardo , and sombra @xcite .",
    "[ thm : neg ] suppose @xmath405 $ ] , @xmath41 are positive integers , @xmath406 , @xmath407 , and @xmath408 is one plus the maximum of the absolute value of the log of any coefficient of any @xmath50",
    ". then @xmath409 has * no * complex roots iff there are polynomials @xmath410 $ ] , and a positive integer @xmath411 , with + ( @xmath412 )   @xmath413 + identically , and    1 .",
    "@xmath414 2 .",
    "@xmath415 @xmath174    since @xmath411 has no more than @xmath416 prime factors , it is clear that the identity ( @xmath412 ) persists  with a * nonzero * right - hand side  even after reduction modulo a prime , for all but finitely many primes .",
    "this in turn easily implies that lacking torsion points ( for fixed degree ) is a property that persists as one passes from @xmath417 to most finite fields , and the number of exceptions is no more than one plus the right - hand side of inequality ( 2 ) above .",
    "the following lemma shows how * possessing * torsion points persists as one passes from @xmath417 to certain special finite fields .",
    "[ lemma : pos ] following the notation of theorem [ thm : neg ] , suppose @xmath418 has a complex root .",
    "then the mod @xmath138 reduction of the preceding system has a root in @xmath357 for any @xmath138 with @xmath419 and @xmath138 prime .",
    "* proof : * letting @xmath420 , note that @xmath104 has a torsion point of the specified type iff @xmath104 contains a point @xmath421 with @xmath422 a primitive @xmath423 root of unity , for some positive integers @xmath424 with @xmath425 for all @xmath136 .",
    "note then that the polynomial + @xmath426 + must satisfy @xmath427 for all @xmath136 , where @xmath428 is the polynomial defined in step 1 of algorithm [ algor : torsion1 ] .",
    "now suppose @xmath429 is prime .",
    "then , via the ( @xmath430 ) portion of lemma [ lemma : final ] ( which , visible from its proof , does * not * require any assumptions on the coefficient size ) , we must have @xmath431 identically zero on @xmath432 .",
    "since the roots of @xmath433 are a proper subset of @xmath432 , and since @xmath434 has no zero divisors , we must have that for all @xmath136 , some factor of @xmath435 must have a root in @xmath432 .",
    "so we are done .",
    "our final algorithm is actually the simplest of the three algorithms of this paper .",
    "+ [ algor : torsion ] * input : * polynomials @xmath29 $ ] , positive integers @xmath436 , and a suitable value for the constant @xmath21 from aph . + * output : * a declaration of whether @xmath384 contains a point @xmath437 with @xmath438 for all @xmath136 , meaningful and correct with probability @xmath439 .    *",
    "description : *    1 .",
    "let @xmath407 , @xmath440 , and let @xmath408 be one plus the maximum of the log of the absolute value of any coefficient of any @xmath50 .",
    "2 .   via recursive",
    "squaring , find the smallest @xmath256 , @xmath143 , and @xmath441 such that @xmath442 , @xmath443 and @xmath444 .",
    "3 .   pick no more than @xmath256 random @xmath445 until one either has @xmath446 prime , or @xmath256 such numbers that are all composite . in the latter case ,",
    "stop and output `` i have failed .",
    "please forgive me . '' .",
    "nondeterministically , decide whether the mod @xmath138 reduction of + @xmath418 + has a root in @xmath447 . 5 .",
    "if there is such a solution then stop and output `` yes '' . otherwise , stop and output `` no '' .",
    "@xmath68    we are now ready to conclude the proof of theorem [ thm : plai ] .",
    "* conclusion of proof of theorem [ thm : plai ] : * the equivalence of @xmath53 and @xmath52 follows immediately from our earlier remarks on the polynomial hierarchy ( * ? ? ?",
    "17.9 ) , assuming we indeed have @xmath39 .",
    "the latter is contained in assertion ( 2 ) , which we already proved in the last section .",
    "so let us proceed with proving assertions ( 1 ) and ( 3 ) .",
    "* proof of assertion ( 1 ) : * it clearly suffices to show that algorithm [ algor : torsion ] is correct and runs within @xmath70 .",
    "let @xmath406 .",
    "correctness follows easily from theorem [ thm : neg ] and lemma [ lemma : pos ] .",
    "in particular , observe that @xmath143  the size of our sample space of numbers congruent to @xmath364 mod @xmath120  is just large enough so that aph implies @xmath448 contains at least @xmath449 primes .",
    "( this follows easily from the basic implication @xmath450 . )",
    "notice also that if @xmath102 does * not * vanish at any torsion point of interest , then the mod @xmath138 reduction of @xmath102 * does * vanish at a torsion point of interest for at most @xmath441 primes @xmath138 , thanks to theorem [ thm : neg ] .",
    "so the probability of a false `` yes '' answer is @xmath451 .",
    "furthermore , by a routine binomial probability estimate , using the inequality @xmath452 for @xmath453 , we obtain that the probability of drawing @xmath256 composite integers is @xmath451 . in other words , with probability @xmath439 , algorithm [ algor : torsion ] gives the right answer .",
    "to conclude , we need only observe that the seemingly large constants nevertheless yield low complexity .",
    "in particular , observe that the number of random bits necessary to do our random sampling is @xmath454^{c+1}\\right)$ ] and the number of bit operations we must do is near - linear in @xmath455 ( via fast finite field arithmetic ( * ? ? ?",
    "* ch .  5 ) ) .",
    "it is then easily checked that @xmath456 and @xmath457 ( and thus @xmath256 ) are polynomial in our input size , so our algorithm is nothing more than a @xmath210 algorithm , followed by a * single * call to an @xmath15-oracle .",
    "this is exactly the definition of an @xmath70 algorithm @xcite , so we are done .",
    "* proof of assertion ( 3 ) : * let us fix @xmath40 and @xmath297 , and recall the notation of algorithm [ algor : torsion1 ] and the proof of lemma [ lemma : pos ] . as observed in the proof of lemma [ lemma : pos ] , @xmath102 has a torsion point as specified iff there are positive integers @xmath424 with @xmath458 for all @xmath99 , such that for all @xmath136 , the complex zero set of + @xmath459 + contains @xmath460 . by lemma [ lemma : div ] , since the number of factors and possible @xmath40-tuples @xmath461 is constant , the preceding check can be done in @xmath10 .",
    "@xmath174    [ ex : multi ] consider the bivariate polynomial system @xmath462 where @xmath45 and @xmath134 are respectively +    @xmath463 + @xmath464 + @xmath465 + and + @xmath466 , + which respectively have degrees @xmath467 and @xmath468 , and numbers of monomial terms @xmath469 and @xmath470 .",
    "we would like to determine whether @xmath102 vanishes at a point @xmath471 where both @xmath382 and @xmath472 are @xmath473 roots of unity .",
    "algorithm [ algor : torsion ] tells us we can do so , with a controllably small error probability , by finding a random prime @xmath138 of the form @xmath474 and checking if the mod @xmath138 reduction of @xmath102 has a root in @xmath475 . taking @xmath476 yields the prime @xmath477 , and proceeding with this choice we see that the pair @xmath478 is just such a root .",
    "this indicates that @xmath102 may indeed vanish at a pair of @xmath473 roots of unity , and running algorithm [ algor : torsion ] @xmath479 times would allow us to decide this with an error probability @xmath480 by taking the answer that occupies the majority .",
    "( this example in fact vanishes at all @xmath471 with @xmath382 and @xmath472 * primitive * @xmath481 roots of unity so , since @xmath482 , our putative answer is correct . )",
    "one could instead try to compute a grbner basis for the ideal@xmath483 .",
    "the resulting basis will then be @xmath484 iff @xmath102 does * not * vanish at any pair of @xmath473 roots of unity .",
    "trying one of the best grbner basis engines ( singular , version 3 - 0 - 2 ) , we are immediately thwarted : the maximum allowed exponent size is @xmath485 . trying three smaller examples with respective total degrees @xmath486 and @xmath487 ( and respective numbers of monomial terms @xmath488 and @xmath489 ) resulted in `` out of memory '' errors within about @xmath490 minutes in all cases .    on the other hand , while a brute - force implementation of algorithm [ algor : torsion ] can run slowly , the corresponding maple implementation has no memory problems for our examples here .",
    "we close this paper by observing a possible speed - up to our last algorithm : one could instead simply attempt to nondeterministically guess a * small * number of suitable primes ( instead of randomly sampling a large set ) , and then check nondeterministically whether one has torsion points modulo these primes . in particular ,",
    "if the number of such `` guessed '' primes is polynomial in the input size , then it can be proved via the techniques of this paper that such an approach would yield @xmath491 .",
    "however , it is not clear how to prove that a small enough number of primes can be used . in particular",
    ", our final example shows that one definitely needs to use at least @xmath492 primes , already for one variable .    taking + @xmath493 + and @xmath494",
    ", it can be checked via maple 9.5 ( within 2 hours , 13 minutes , and 42.63 seconds ) that @xmath45 does * not * vanish at any @xmath2 root of unity .",
    "one would prefer to do this check modulo an intelligently chosen prime of the form @xmath495 instead . however , there are exceptional primes which , using this approach , would cause one to falsely declare that @xmath45 * does * vanish at a @xmath2 root of unity . in this case",
    "it easily checked that the exceptional primes are exactly the divisors of the resultant of @xmath45 and @xmath496 , which ( up to sign ) is +    [ 1]@xmath497 + and factors as +   [ 1]@xmath498 .",
    "+ in particular , we see that the @xmath499 and @xmath500 prime factors above are both congruent to @xmath364 mod @xmath501 , and could thus lead to false `` yes '' answers .",
    "@xmath68    it is interesting to note that pascal koiran has already given some evidence that it may be hard to prove that the more general problem @xmath12 is @xmath15-complete .",
    "his evidence is based on the fact that @xmath12 contains a hard circuit - theoretic problem ( * ? ? ?",
    "* sec .  6 ) .",
    "however , such a reduction does not appear to be known for @xmath32 , so there may be more hope that @xmath491 than @xmath502 .",
    "this paper began while the author was attending the pims workshop on resolution of singularities , factorization of birational mappings , and toroidal geometry ( december 1116 , 2004 , banff , canada ) .",
    "the author thanks the organizers ( dan abramovich , ed bierstone , dale cutkosky , kenji matsuki , pierre milman , and jaroslaw wlodarczyk ) for their kind invitation .",
    "this paper was then presented at mega 2005 ( porto conte , alghero , sardinia , italy , june 1 , 2005 ) , and completed at sandia national laboratories .",
    "so the author thanks patrizia gianni , tomas recio , carlo traverso , mark danny rintoul iii , philippe pebay , and david thompson for their generous invitations and wonderful choice of settings .",
    "special thanks go to matt baker for reading the arxiv version of my paper the day it was posted and then pointing out the reference @xcite .",
    "thanks also to jeff achter , eric bach , alex buium ( who pointed out the reference @xcite ) , petros drineas , sidney w.  graham , bjorn poonen , rachel pries , and igor shparlinski for some nice conversations and/or e - mail exchanges .",
    "i also thank an anonymous referee for pointing out example [ ex : ref ] , thus spotting an error in an earlier version of theorem [ thm : plai ] .",
    "bihan , frederic ; rojas , j.  maurice ; and stella , casey e. , _",
    "`` first steps in algorithmic real fewnomial theory , '' _ submitted for publication .",
    "downloadable from http://www.math.tamu.edu/~rojas/list2.html .",
    "garey , michael r.  and johnson , david s. , _ computers and intractability : a guide to the theory of np - completeness , _ a series of books in the mathematical sciences , w.  h.  freeman and co. , san francisco , calif . ,",
    "1979 .",
    "grigoriev , dima yu . ; karpinski , marek ; odlyzko , andrew , _",
    "`` short proofs for nondivisibility of sparse polynomials under the extended riemann hypothesis , '' _ fund .",
    "* 28 * ( 1996 ) , no .  34 , pp .",
    "297301 .",
    "hallgren , sean , _ `` fast quantum algorithms for computing the unit group and class group of a number field , '' _ stoc05 : proceedings of the 37th annual acm symposium on theory of computing , pp .  468474 , acm , new york , 2005 .",
    "iliopoulos , costas s. , _  worst case complexity bounds on algorithms for computing the canonical structure of finite abelian groups and the hermite and smith normal forms of an integer matrix , \" _ siam journal on computing , 18 ( 1989 ) , no .  4 , pp .",
    "658669 .",
    "koiran , pascal , _",
    "`` hilbert s nullstellensatz is in the polynomial hierarchy , '' _ dimacs technical report 96 - 27 , july 1996 .",
    "( this preprint considerably improves the published version which appeared journal of complexity * 12 * ( 1996 ) , no .  4 , pp .",
    "273286 . )",
    "koiran , pascal , _",
    "`` randomized and deterministic algorithms for the dimension of algebraic varieties , '' _ proceedings of the 38@xmath505 annual ieee computer society conference on foundations of computer science ( focs ) , oct .  2022 , 1997 , acm press .",
    "lakshman , yagati n. , _  a single exponential bound on the complexity of computing grbner bases of zero - dimensional ideals , \" _ effective methods in algebraic geometry ( castiglioncello , 1990 ) , pp .  227234 , progr .",
    ", 94 , birkhuser boston , boston , ma , 1991 .",
    "mihailescu , preda , _ `` fast generation of provable primes using search in arithmetic progressions , '' _ advances in cryptology  crypto 94 ( santa barbara , ca , 1994 ) , pp.282293 , lecture notes in comput .",
    ", 839 , springer , berlin , 1994 .",
    "rojas , j.  maurice , _",
    "`` computational arithmetic geometry i : diophantine sentences nearly within the polynomial hierarchy , '' _ invited paper , journal of computer and system sciences , vol .",
    "62 , no .  2 ,",
    "march 2001 , pp ."
  ],
  "abstract_text": [
    "<S> suppose @xmath0 is the complex zero set of a finite collection of polynomials in @xmath1 $ ] . </S>",
    "<S> we show that deciding whether @xmath0 contains a point all of whose coordinates are @xmath2 roots of unity can be done within @xmath3 ( relative to the sparse encoding ) , under a plausible assumption on primes in arithmetic progression . in particular , our hypothesis can still hold even under certain failures of the generalized riemann hypothesis , such as the presence of siegel - landau zeroes . furthermore , we give a similar * unconditional * complexity upper bound for @xmath4 . </S>",
    "<S> finally , letting @xmath5 be any algebraic subgroup of @xmath6 we show that deciding @xmath7{$\\stackrel { ? } { \\supseteq}$}}}\\ ; t$ ] is @xmath8-complete ( relative to an even more efficient encoding ) , unconditionally . </S>",
    "<S> we thus obtain new non - trivial families of multivariate polynomial systems where deciding the existence of complex roots can be done unconditionally in the * polynomial hierarchy *  a family of complexity classes lying between @xmath9 and @xmath10 , intimately connected with the @xmath11 problem . </S>",
    "<S> we also discuss a connection to laurent s solution of chabauty s conjecture from arithmetic geometry . </S>"
  ]
}
{
  "article_text": [
    "the ability to characterize soft materials on the micro / nano - scale has significant implications to several areas in science ranging from fundamental studies in polymer physics @xcite to applied bio - engineering  @xcite , where understanding nanoscale behavior and evolution is essential .",
    "dynamic afm imaging @xcite is a very effective technique to interrogate surface topography of soft samples @xcite , particularly for live biological samples in their physiologically friendly liquid environment @xcite .",
    "dynamic atomic force microscopy ( dafm ) or intermittent contact mode afm utilizes a micro - cantilever fixed - free beam to interrogate samples .",
    "the cantilever base is driven by a piezo - actuator to oscillate , causing the free tip to tap ( i.e. , come into intermittent contact with the sample ) .",
    "the oscillation amplitude and phase with respect to the cantilever base are measured and the amplitude is maintained around a set - point value via feedback control . the measured phase and amplitude data",
    "are then utilized to construct the sample topography and also related to the material properties of the sample @xcite .",
    "[ ht ]     although by using dynamic - mode imaging , the detrimental sliding force on the sample has been largely reduced , the applied normal ( tapping ) force can still be large and result in not only imaging distortion , but more seriously , sample deformation and damage that can completely modify the sample @xcite .",
    "large normal force , however , is needed in dynamic - mode afm imaging to ensure imaging quality ( i.e. , high signal to noise ratio ) .",
    "the requirement of rapid scanning ( high - speed ) imaging of specimens further exacerbates these problems  @xcite . _",
    "the challenge in tackling these hurdles lies in the need to maintain a small tip - sample interaction force during the scanning process_. therefore , as a key first step to tackle this challenge , estimating the tip - sample interaction force  accurately and in real - time ",
    "is essential .",
    "current methods for tip - sample force inversion generally require significant post - processing time and are , thus , incapable of addressing sample deformation and destruction in real - time  @xcite .",
    "off - line inverse problems have been formulated to estimate tip - sample interaction forces using conjugate gradient optimization @xcite with limited success .",
    "the availability of newer computing methods , such as general purpose graphical processing unit computing , opens up the possibility of near real - time inversion .",
    "this paper focuses on formulating and implementing a parallel computational framework for fast inversion of tip - sample forces by using the hardware and software capabilities of gpu s and compute unified device architecture ( cuda ) , respectively .",
    "to the authors best knowledge , this is the first time that near real - time ( sub - second ) inversion of tip - sample forces has been showcased .",
    "other contributions include : 1 ) formulating the problem of estimating the tip - sample interaction force as an inverse problem posed as an unconstrained optimization problem ; 2 ) developing an ultra - fast predictive model for afm dynamics based on parallel algorithms implemented on gpus ; 3 ) applying gradient - free optimization techniques to quickly find a solution to the optimization problem ; and 4 ) showcasing a hierarchy of models for inversion .    in section .",
    "2 we formulate the problem definition and pose the direct and inverse problems . section .",
    "3 details the computational developments and algorithms along with some timing and complexity studies . in section .  4 we showcase the fast inversion framework on several examples of increasing complexity .",
    "the physics of the sensing process demonstrates the difficulty in extracting the tip - sample interactions from the measured deflection data .",
    "a schematic of the afm sensing process is shown in fig .",
    "[ afm_eq ] .",
    "[ ht ]     an ac input voltage ( @xmath0 ) , usually a sinusoidal wave is sent to a piezoelectric actuator attached to the base of the cantilever ( see fig .  [ afm_diagram ] ) , resulting in the oscillation of the base of the cantilever , @xmath1 .",
    "then as the vibrating tip is brought into intermittent contact with the sample , the tip - sample interaction force ( @xmath2 ) is induced , which in - turn , results in the change of the oscillation ( or vibration ) pattern at the cantilever tip , @xmath3 .",
    "the tip deflection is measured using an optical sensing scheme .",
    "we approach the problem of extracting the tip - sample interaction force @xmath2 in two stages first solve the forward dynamics problem of calculating cantilever deflections given a tip - sample interaction force and subsequently solving associated inverse problem of calculating interaction forces given a cantilever deflection .",
    "the forward problem quantifies the relationship between the cantilever base displacement @xmath1 and the tip sample interaction @xmath2 with the tip deflection @xmath4 .",
    "we model the cantilever dynamics by using euler - bernoulli ( eb ) beam theory .",
    "the choice is driven by the following rational : ( a ) the eb model provides a more accurate description of afm cantilever dynamics than the conventional simple harmonic oscillator model @xcite ; ( b ) from an inverse problem standpoint the eb model is computationally more tractable then finite element formulations @xcite , with minimal loss in fidelity  @xcite ; and ( c ) all assumptions made in eb beam theory is satisfied by an afm cantilever @xcite .    by the eb theory ,",
    "the cantilever dynamics is modeled as @xcite : @xmath5 where @xmath6 is the relative cantilever displacement with respect to the cantilever base ; @xmath7 , @xmath8 , @xmath9 are the young s modulus , moment of inertia , and mass per unit length , respectively ; @xmath10 is the viscous damping coefficient ; @xmath11 is the interaction force , and @xmath12 is the cantilever base displacement . it is a standard practice to convert this pde into a set of ordinary differential equations ( ode ) @xcite by solving the free vibration eigenvalue problem and utilizing the orthogonality of the modal / eigen functions , @xmath13 .",
    "the odes are solved for @xmath14 to compute the cantilever deflection @xmath15 .",
    "this results in a coupled set of odes for the coefficients of the modal functions ,    @xmath16    where @xmath17 are the corresponding modal resonance frequencies , @xmath18 , is defined as the inner product of a and b over the length of the cantilever , @xmath19 and @xmath20 . solving eq .",
    "( 2 ) and hence the original beam dynamics equation  ( 1 ) to obtain the cantilever displacement u(x , t ) requires that the tip - sample interaction force to be known .",
    "tip - sample interactions are usually parametrized to account for different types of forces .",
    "the simplest tip - sample interaction is an elastic response that can be modeled by hooke s law @xcite : + @xmath21 where @xmath22 is the distance the cantilever tip has pressed into the sample ( h is the datum ) , and @xmath23 is the local stiffness of the sample .",
    "more complex materials respond in a visco - elastic manner , dissipating some of the energy of the tip - sample interaction @xcite .",
    "this response is modeled using a spring - damper system given by : @xmath24 where @xmath25 is the viscous damping constant .",
    "more complex models can include hertzian contact and van der waals forces  @xcite . in summery ,",
    "the definition of the forward problem is as follows : _ * fp : * given the cantilever properties , ( @xmath26 ) , the cantilever base displacement @xmath1 , and the parametrized tip - sample interaction force,(eqns .  [ spring ] or [ spring_damper ] ) , calculate the cantilever deflection @xmath4_.      the inverse problem is defined as follows : _ * ip : * given the cantilever properties , ( @xmath26 ) , the measured cantilever tip deflection @xmath4 , and the given cantilever base displacement @xmath27 , calculate the parametrized tip - sample interaction @xmath2 .",
    "_ one approach to solving the inverse problem is to convert it into an unconstrained optimization problem through the minimization of a chosen cost functional @xmath28 that minimizes the difference between @xmath4 and @xmath29 .",
    "an appropriate choice of the cost functional @xmath28 acts as a metric that quantifies the mismatch between a guess value of the tip - sample interaction and the true tip - sample interaction .",
    "the choice of the cost functional plays a significant part in the accuracy and efficiency of the inversion process .",
    "the proper choice of the cost functional ensures reasonable speed of calculation and a smooth phase space .",
    "extensive computational experiments suggested the use of the following cost functional : @xmath30 ^ 2 dt \\label{j_l2}\\end{aligned}\\ ] ] where @xmath31 is the experimentally measured tip deflection .",
    "@xmath6 is the calculated tip deflection for given the tip - sample interaction @xmath32 ( i.e. , by solving the forward problem * fp * ) .",
    "the unconstrained optimization problem is posed as follows : _ given cantilever properties ( @xmath26 ) , cantilever base movement @xmath1 , and the experimental cantilever tip deflection ( @xmath4 ) , find the parametrized tip - sample interaction @xmath33 such that @xmath34 for any @xmath32 , where @xmath35 is defined in eqn .",
    "[ j_l2 ] . _",
    "this section details the computational framework for solving the direct and inverse problems formulated in the previous section .",
    "a key challenge is the necessity of very fast force - inversion for real time dafm imaging of soft samples to be possible . posing the direct problem as a set of ode s and the force inversion as an unconstrained optimization problem over these odes allows to leverage the computational advantages provided by gpus .",
    "the rational for using gpu s is guided by the following reasons : ( 1 ) ability to construct a large set of forward problems in parallel ; ( 2 ) faster analysis given faster memory accesses compared to cpus ; ( 3 ) gpu compute architecture is well suited for problems with minimal parallel dependencies ; and ( 4 ) gpu compute architecture is well suited for problems where the computation - to - memory - access ratio is larger than one . a brief description of gpu hardware and cuda software concepts utilized in the developed framework follows .",
    "utilizing gpu s for computation is different than on cpu s .",
    "gpu s require a large number of threads of execution that are processed in parallel to be efficient .",
    "in contrast , cpu s are generally more efficient with few threads . *",
    "memory : * gpus ( running cuda ) have very large computation capability compared to the speed at which they can access memory .",
    "gpu s hide this memory latency by performing computation and memory grabs simultaneously .",
    "while sets of threads ( called warps ) are waiting for their data from memory , other warps get computed .",
    "the availability of hierarchies of memory allows significant room for designing algorithms to optimize memory access , thus enhancing speed .",
    "we briefly describe the memory modes that are used in the current formulation ; _ global , shared , texture , and constant_.    1 .",
    "global memory is the main memory storage on gpu and is the slowest to access requiring hundreds of clock cycles .",
    "global memory is retrieved in groups of bytes for warps based on the requirements of the threads .",
    "warps can only grab memory that is in sequential order .",
    "2 .   shared memory is a very fast , small block of memory ( 16 kb on compute capability 1.3 and below , up to 48 kb for compute capability 2.0 ) which is accessible only within each block of threads .",
    "texture memory is a cached global memory .",
    "constant memory can only be assigned by the cpu and is a cached read - only memory .    given the finite memory resources and speed , memory management is critical as most gpu algorithms are limited by their memory throughput @xcite . *",
    "computation : * through the use of cuda architecture and programming tools , the management and control of gpu computation and data parallelism is possible . in cuda",
    ", threads are organized into blocks which are executed on the same streaming multi - processor ( smp ) .",
    "each gpu only has a finite number of smps and as a result can only computer a finite number of blocks at the same time .",
    "smps execute threads in groups ( or warps ) .",
    "warps are chosen to be processed based on the availability of the requested memory resources .",
    "thus , optimally choosing threads and threads per block can significantly enhance memory access and performance . *",
    "communication : * any data dependency between threads requires special considerations . shared memory is the best method of dealing with any data dependencies .",
    "this means that inter - thread communication is best handled within each block .",
    "communication between blocks can occur through a global sync between all gpu and cpu threads but is very inefficient . through the use of good parallel programming practices ,",
    "the shared memory can be used efficiently to communicate between threads .",
    "we utilize cuda programming to implement both the forward and inverse problems on gpu s . _",
    "our approach takes advantage of the gpu compute structure by designing an algorithm which minimizes data dependency between threads , maximizes the number of computations per global memory access , and minimizes cpu / gpu data communication . _",
    "the optimization problem approach allows for minimal data dependency through the solving of many forward problems , that are independently solved on multiple threads on the gpu .",
    "fast calculations of solutions to eqn .",
    "[ eb_ode ] are achieved through a cuda based high - order ode solver .",
    "the three key stages in solving the forward problem ( fp ) are : initialization , including memory set - up and modal function calculation ; calculation of modal coefficients via high - order ode solvers ; and using modal functions and modal coefficients to calculate displacements .",
    "[ [ computational - issues ] ] computational issues + + + + + + + + + + + + + + + + + + + +    a newton root solver and simpson integration modules are used to solve for the modal resonance frequency ( @xmath17 ) and normalization factor ( to make the modal functions orthogonal ) , respectively . calculating the modal functions using the hyperbolic trigonometric form generally presented in texts @xcite causes over - flow errors for higher modes .",
    "we recast the calculation to the following equivalent exponential form to enable accurate calculation without overflow : @xmath36 @xmath37 where @xmath38 is the @xmath39 solution of @xmath40 and @xmath41 .",
    "note that @xmath42 grows very quickly with increasing mode order @xmath43 , making eqn .",
    "[ eb_ode ] a stiff ode .",
    "we utilize an explicit @xmath44 order runge - kutta ( rk ) method to solve the odes .. second or third order methods have not been tested and could be a possible method of reducing calculation time if they converge . ]",
    "explicit schemes were tested because they are efficient and the rk fourth order method converged in the range of time steps typical for afm experiments .",
    "[ h ]     [ [ memory - allocation ] ] memory allocation + + + + + + + + + + + + + + + + +    solutions of the forward problem are obtained by calculating the modal functions ( @xmath13 ) and the modal coefficients ( @xmath14 ) .",
    "the modal functions remain invariant and thus only need to be calculated once .",
    "we calculate and store the modal functions serially as part of the initialization process .",
    "two parallel strategies are implemented to assist in solving eq .",
    "[ eb_ode ] for @xmath45 : _ parallel prefix for force inner products and direct parallelism across modes_. moreover , assuming that the force is variable separable ( into spatial and temporal components ) , the spatial component of the force can be determined during initialization .",
    "this allows converting the computation of integrals involved on the rhs of eqn .",
    "[ eb_ode ] to a one time calculation .",
    "pre - calculating force integrals leaves implementing a framework with parallelism across modes .",
    "every modal coefficient ode solve is handled by a unique thread .",
    "thus , two dimensional blocks of threads are set - up as @xmath46 , where @xmath47 is the number of modes and @xmath48 is the number of forward problem solutions per block , as shown in fig .",
    "[ forward_parallel_alg ] .",
    "for example , on compute capability 1.3 gpus , using eight modes , the current parallel framework can run up to 64 problems per block .",
    "we next analyze the memory complexity of the framework .",
    "this elucidates the rational for deploying the various data structures in the available memory hierarchies .",
    "the major memory needs are as follows :    * the cantilever parameters , @xmath26 . since the cantilever parameters are assigned as part of the initialization process and require little memory , they are a good choice for constant memory .",
    "* parameters of the tip - sample interaction .",
    "this requires @xmath49 bytes for each parameter , thus requiring @xmath50 bytes for @xmath51 simultaneous forward problem solutions using the visco - elastic model eqn .",
    "[ spring_damper ] .",
    "interaction parameters are left in the global memory since they have to be optimized in the inverse problem . *",
    "modal coefficients @xmath14 require @xmath52 bytes , where @xmath47 is the number of modes used .",
    "the output deflection points require @xmath53 bytes , where @xmath54 is the number of deflection points computed .",
    "usually deflections at three points on the afm cantilever are measured ( @xmath55 ) .",
    "the modal coefficients and deflection points are stored in shared memory because of the constant updating during the forward solve .    [",
    "[ complexity - analysis ] ] complexity analysis + + + + + + + + + + + + + + + + + + +    for the forward problem , the main calculations affecting runtime complexity are the force integral calculations and the ode solve .",
    "the runtime complexity for the serial forward problem is @xmath56m)$ ] , where @xmath47 is the number of modes , @xmath57 is the number of time steps and @xmath58 is the number of spatial points used to compute the force integral .",
    "however , assuming variable separation of the forces reduces serial runtime complexity to @xmath59 . by deploying across @xmath47 threads on a gpu , the parallel runtime complexity is @xmath60 .",
    "[ ht ]       in addition to the gpu based implementation discussed in the preceding section , we also implemented a cpu based version of the ode solver for comparison .",
    "the validity of the results of both implementations are ensured by comparing with analytical solutions that are obtained using a sinusoidal base movement and constant forces  @xcite(see appendix a ) .",
    "[ ht ]    we discuss runtime trends and accuracy details in this subsection .",
    "each forward problem is run for 1000 time steps ( unless otherwise stated ) using time - step , @xmath61 .",
    "a maximum of eight modes are used .",
    "eight modes can satisfactorily track the cantilever evolution ( with an error of @xmath62 ) .",
    "error is defined as @xmath63 , where @xmath64 is the true value and @xmath65 is computed . in testing convergence , the l2 error of various modes are compared to the solution obtained using eight modes .",
    "[ serialconvergence ] shows the plot of error versus number of modes . for this simple case ,",
    "four modes are sufficient for resolving a sinusoidal deflection .",
    "while considering runtime complexity three parameters are most dominant ; number of modes , number of points used to describe modal functions , and number of time points .",
    "we analyze all three of them independently , first for the cpu based implementation and subsequently for the gpu based implementation .",
    "runtime as a function of the number of modes is shown in fig .",
    "[ serialmodesvruntime ] with the number of time points fixed at 1000 ( note that 8 modes take 0.482 seconds ) .",
    "[ serialnumtimepointsvruntime ] plots runtime as a function of the number of time points .",
    "when seeking real - time inversions , runtime must be of the order of few hundred milliseconds .",
    "these runtime analyses show that calculation times using cpus are too slow to solve the inverse problem in real time .",
    "[ ht ]     in contrast to the cpu results , the gpu based results are very promising .",
    "with the goal of solving several hundreds of forward problems to solve one inverse problem , we utilize two metrics to illustrate the capabilities of the gpu based framework : ( a ) runtime of individual forward solves ; ( b ) the number of forward solves which can be calculated in parallel . both metrics depend on multiple factors : number of time steps ( @xmath57 ) , number of modes ( @xmath47 ) , number of solutions per block ( @xmath48 ) , and total number of forward problem solutions ( @xmath51 ) .",
    "a nvidia quadro fx 5800 gpu is used which limits the number of blocks that can run in parallel to 30 ( 2 blocks per streaming multiprocessor(smp ) , 15 smp s ) . beyond this , with all smps filled , the blocks have to wait for an open smp .",
    "this can be clearly seen in fig .",
    "[ blockvruntime ] where the runtime jumps after 30 and 60 blocks .",
    "[ ht ]    fixing the number of blocks ( @xmath66 ) to 30 and modes ( @xmath47 ) to 8 , runtime is analyzed by varying the number of time steps and number of solutions per block .",
    "[ spbvruntime ] show the effect of @xmath48 on runtime . as the number of solutions per block increases , the runtime increases in a non - linear way .",
    "32 solutions per block most efficiency utilize gpu resources giving forward solves with 100 millisecond runtime . furthermore ,",
    "as @xmath48 increases beyond 32 , the solutions per second gain is small while 32 solutions only requires half of the shared memory .",
    "[ numtimepointsvruntime ] shows that increasing @xmath57 causes a linear increase in runtime ( as predicted by the complexity analysis in the previous section ) .",
    "by appropriately choosing the number of solutions per block to ensure proper memory allocation , the runtime for a single forward solve on the gpu took @xmath67 seconds .",
    "_ this is a speed - up of 32 over the cpu framework . _ more importantly , the gpu based framework can execute several forwards solves simultaneously . *",
    "960 forward solves are computed in 0.0151 seconds , translating to an effective speed - up of 30000*. effective speed - up is the direct comparison between our cpu ( single - core ) performance and gpu performance .",
    "the choice of the optimization algorithm is driven by the following constraints :    1 .",
    "the gpu based forward solver implementation is able to compute several forward solution in parallel . 2 .",
    "the parametrization of the cost function @xmath28 may be high dimensional .",
    "furthermore , the landscape of @xmath28 may be non - smooth , necessitating a gradient free method .",
    "4 .   the existence of multiple local minima that have to be discarded .",
    "a gradient - free , global search algorithm that satisfies these constraints is the particle swarm optimization ( pso ) @xcite .",
    "pso finds the global minima by starting with a large population of candidate solutions ( or particles ) , and moving these particles around in the search - space according to certain rules over the particle position and velocity .",
    "each particle is influenced by its local best known position and the best known positions in the search - space , which are updated at every iteration as better positions are found by other particles .",
    "generally , particle locations and velocities are chosen using a uniform distribution in the search space  @xcite .",
    "the update of velocity uses the following equation : @xmath68 where @xmath69 is the velocity at iteration @xmath43 , @xmath70 , @xmath71 , and @xmath72 are weighting factors , @xmath73 and @xmath74 are random numbers , @xmath75 and @xmath76 are the local and global bests respectfully , and @xmath77 is the position of the particle at iteration @xmath43 .",
    "recent theoretical results suggest that an appropriate choice of the the parameters guarantee convergence  @xcite .",
    "we utilize an optimized gpu based implementation of the pso algorithm  @xcite .",
    "this section discusses a hierarchy of increasingly complex inverse problems .",
    "we start with the simpler problem of extracting the base vibration characteristics given tip deflections in section .",
    "this problem also explores the choice of the search space parameters and their effect on runtime . the next two subsections deal with real time inversions of elastic and visco - elastic tip - sample interactions , respectively .",
    "experimental tip deflection data was computed by forcing the base to vibrate to a simple sinusoidal driven signal : @xmath78 where @xmath79 is the amplitude and @xmath80 is the frequency of cantilever base vibration .",
    "the experimental tip deflection was obtained by setting @xmath81 and @xmath82 .",
    "this experimental tip deflection  subsequently used to drive the inverse problem  is obtained using the cpu based serial framework , thus resolving the issue of inverse crime @xcite .",
    "we analyze the performance of the inversion framework by starting with a one dimensional search space for the amplitude of base vibrations and fixing @xmath82 .",
    "we provide physically meaningful bounds on the amplitude , @xmath83 $ ] and set @xmath84 .",
    "the number of time steps was chosen to provide a sufficient number of data points per oscillation period given the typical time - step used .",
    "[ parvgen1d ] shows that the mean and variance of the number of generation for convergence shrinks as the number of particles used in the pso increases .",
    "faster convergence is expected since the density of the particles in the search space is increasing .",
    "given that the framework produces a generation about every 16 milliseconds , _ the mean convergence time for the 1d case is just over 48 milliseconds for 512 particles_.    [ ht ]    we next investigate the affect of search space size on the performance of the inversion framework , as shown in fig .",
    "[ searchspacevgen1d ] . in general , as the particle density in the search space decreases , the mean number of generations required for convergence increases . for the case of the largest search space ( @xmath85 $ ] ) the mean number of generation of 6.8767 corresponds to a runtime of around 112 milliseconds .",
    "_ this suggests that a tight bound on the unknown force parameters can significantly decrease inversion times . _    the affect of convergence cutoff on convergence is shown in fig .",
    "[ accvgen1d ] .",
    "the general trend of increasing accuracy requirements raises the mean number of generations required for convergence . to achieve an error of 0.001 requires an average of 7.99 generations ( taking 128 milliseconds ) verses the 48 milliseconds required for achieving a relative error of 0.01 .",
    "the effect of @xmath57 on mean generations was also tested .",
    "the number of time steps was varied from 1,000 to 10,000 and did not show any effect on the result .",
    "[ ht ]    we next tested the inversion framework by using a 2d search space ( making both @xmath79 and @xmath80 unknown ) .",
    "[ searchspacevgen2d ] shows a similar trend to the 1d case where the mean number of generations required for convergence increases as the search space increases . with a search space of 1000 hz , 19.0458 generation on average",
    "is required for convergence resulting in a compute time of about 320 milliseconds . to explore frequency dependent properties ,",
    "the afm can be driven by a chirp base vibration .",
    "this linearly varies the frequency of base oscillation with time : @xmath86t),\\end{aligned}\\ ] ] where @xmath87 is defined as the frequency gain parameter .",
    "we utilize the inversion framework to extract the parameters of this chirp signal .",
    "matching a chirp base movement requires exploring a 3d search space for @xmath88 .",
    "the experimental tip deflection was obtained by setting @xmath89 , @xmath90 and @xmath91 . using a search space of @xmath92\\times [ 7,500~hz , 12,500~hz ] \\times [ 19,000,000~\\frac{hz}{sec } , 21,000,000~\\frac{hz}{sec}]$ ] ,",
    "the framework extracts correct values of @xmath88 in 14.9 generations corresponding to a runtime of about 240 milliseconds .",
    "[ ht ]    a simple yet extensively used model for tip - sample interaction is one that assumes an elastic response of the soft sample . extracting spatial variation in elasticity is important for a variety of applications in addition to non - destructive scanning of the sample ( e.g. , tumors have higher stiffness that normal cells ; as collagen dehydrates there is a change in elasticity  @xcite ) .",
    "we utilize a hooke s law based parametrization for the elastic response of the sample .",
    "the modelling of the tip - sample interaction as a spring is in - line with most afm experimental force calculation models .",
    "this model has the following form : @xmath93 where @xmath94 is the distance the cantilever tip has pressed into the sample and k is the tip - sample spring constant . with the base movement parameters known , only two tip - sample force parameters are unknown , the cantilever - sample separation and sample spring constant .",
    "cantilever - sample separation is defined as distance from the cantilever s neutral axis to the sample .",
    "the experimental tip deflection was created using the following parameters : @xmath95 and @xmath96 , where @xmath97 is the cantilever - sample separation and @xmath23 is the sample spring constant .",
    "these parameters were chosen to mimic results found in @xcite .",
    "calculating the force parameters for a spring sample is computationally complex due to the non - convex nature of the phase space as shown in fig .",
    "[ searchspacespring ] , and results in more calculation time being required shown in fig .",
    "[ springconverge ] .",
    "[ searchspacespring ] shows that several combinations of @xmath23 and @xmath97 produce similar values , creating a symmetrical valley near the basin of the global minima .",
    "the resulting valley of similar combinations is expected because both @xmath23 and @xmath97 only affect the amplitude of vibration and not the phase . using a cutoff convergence threshold of @xmath98 results in a 5% error in calculating @xmath23 and @xmath97 resulting in a mean convergence of about 18 generations , resulting in an average runtime of 288 milliseconds .",
    "[ ht ]      we increase the complexity of the tip - sample interaction parametrization by next assuming a visco - elastic response of the sample .",
    "understanding the visco - elastic variations is particularly important in understanding aspects of polymer physics@xcite .",
    "a kelvin - voigt parametrization is extensively used to model visco - elastic tip - sample interactions @xcite .",
    "this is essentially a spring damper system : @xmath99 where @xmath25 is the viscous damping coefficient .",
    "we assume that the sample separation for the afm cantilever neutral axis is known .",
    "this inversion consists of estimating two material properties .",
    "the experimental tip deflections were obtained by using the following parameters : @xmath95 , @xmath96 , and @xmath100 . using a search space of @xmath101 \\times",
    "[ 0~ \\frac{ns}{m } , 2~ \\frac{ns}{m}]$ ] the convergence profile with increasing number of generations of the pso scheme is shown in fig .",
    "[ springdampconverge ] .    the phase space for inverting the visco - elastic tip - sample interaction is highly corrugated and has multiple local minima as shown in fig .",
    "[ searchspacespringdamp ] .",
    "the shape of search space clearly demonstrates the need for gradient free optimization methods .",
    "the large number of local minima is due to the phase change caused by the damping force .",
    "the average runtime for inversion ( with 16 generations ) was 256 milliseconds .",
    "the atomic force microscope ( afm ) is a versatile , high - resolution scanning tool used to characterize topography and material properties of a large variety of specimens .",
    "its applicability to characterize soft specimens like tissue and gels is currently constrained by the inability to appropriately control tip - sample interaction forces .",
    "a major bottleneck to control tip - sample interaction is the ability to extract these tip - sample forces in real time from the deflection signal .",
    "this paper illustrates a first approach to a near real - time framework for tip - sample force inversion .",
    "we utilize the hardware advantages and parallel capabilities of gpus to develop a fast inversion strategy .",
    "a fast , parallel forward solver is developed that shows a 30000 fold speed - up over a comparable cpu implementation , resulting in milli - second calculation times .",
    "posing the inverse problem as an unconstrained optimization problem allows us to integrate a gpu based gradient - free global particle swarm optimization framework with the forward solver .",
    "we illustrated the framework on three classes of tip - sample interaction inversions .",
    "each of these inversions is performed in sub - second timings showing potential for on - line integration with the afm .",
    "extensions of this work include ( a ) integrating with afm hardware for deployment ; ( b ) investigating more complex tip - sample parametrization that account for adhesion and van der walls forces ; and ( c ) perform nano - composition mapping of soft tissue .    we envision that the developments presented here will find applicability in a broad spectrum of areas that require soft - imaging as well as nano - composition imaging . these range from nano - material synthesis and design for emerging applications such as solar cell and micro - scale energy devices ; interrogating cellular and sub - cellular interactions ; investigating the optoelectronic properties of organic electronic devices to understanding reaction initiation in high energy density materials ( hedm ) .",
    "in particular , this framework should open the door to interrogate various bio - chemical interaction forces ( hydrophobic interaction force ) of live cell for understanding fundamental biology mechanisms such as the cell fusion process .",
    "b.g . was supported in part by nsf phy-0941576 , and nsf ccf-0917202 .",
    "the authors would like to thank the high - performance ( gpu ) computing resources at isu .",
    "[ cols=\"^,^\",options=\"header \" , ]",
    "the deflection of the cantilever then is represented as : @xmath102 where @xmath103 represents a set of orthogonal modal shape functions which are computed by solving the homogeneous eigenvalue problem @xcite and @xmath104 are corresponding modal coefficients . in order to determine the modal coefficients , we define an inner product as : @xmath105 where @xmath80 and @xmath87 are functions .",
    "testing and implementation of the proposed framework occurred on a gpu mini - cluster consisting of two dell precision t7500 workstations .",
    "each node is equipped with 12 gb of ddr3 ram , 500 gb of 10k rpm hard drives and 2 intel xeon 2 ghz quad - core cpus .",
    "the main computational power comes from 4 gpus donated to us by nvidia : each node is accelerated with 2 nvidia quadro fx 5800 .",
    "one such card provides 240 cores , 4 gb of ram with 102 gb / s bandwidth and is cuda compatible ( with 1.3 compute capability ) .",
    "the nodes are connected via dedicated gbit ethernet .",
    "l. g. m. beekmans , m. a. hempenius , and g. j. vancso , `` morphological development of melt crystallized poly(propylene oxide ) by in situ afm : formation of banded spherulites , '' _",
    "european polymer journal _ , vol .",
    "893 - 903 , 2004 . selected papers from the 3rd international conference on scanning probe microscopy of polymers .",
    "j. hahm and s. j. sibener , `` time - resolved atomic force microscopy imaging studies of asymmetric ps - b - pmma ultrathin films : dislocation and disclination transformations , defect mobility , and evolution of nanoscale morphology , '' _ the journal of chemical physics _ , vol .",
    "114 , no . 10 , pp . 4730 - 4740 , 2001 .",
    "p. k. hansma , j. p. cleveland , m. radmache , d. a. walters , p. e. hillner , m. bezanilla , m. fritz , d. vie , h. g. hansma , c. b. prater , j. massie , l. fukunaga , j. gurley , and v. elings , `` tapping mode atomic force microscopy in liquids , '' _ applied physics letters _ , vol .",
    "1738 - 1740 , 1994 .",
    "p. parot , y. f. dufre , p. hinterdorfer , c. l. grimellec , d. navajas , j.- l. pellequer , and s. scheuring , `` past , present and future of atomic force microscopy in life sciences and medicine , '' _ journal of molecular recognition _ , vol .",
    "418 - 431 , 2007 .",
    "r. garcia and a. san paulo , `` attractive and repulsive tip - sample interaction regimes in tapping - mode atomic force microscopy , '' _ physical review b _ , vol .",
    "4961 - 4967 , issn . 1550 - 235x , 1999 .      c. a. v. eysden and j. e. sader , `` frequency response of cantilever beams immersed in viscous fluids with applications to the atomic force microscope : arbitrary mode order , '' _ journal of applied physics _ , vol",
    ". 101 , pp .",
    "044908 - 044918 , 2007 .",
    "chang , c .- m .",
    "lin , j .- f .",
    "lee , and s .- l .",
    "lin , `` determination of damping force between atomic force microscope tips and sample using an inverse methodology,''__physics letters a _ _ , vol .",
    "343 , no . 1 - 3 , pp .",
    "79 - 84 , 2005 .",
    "t. rodriguez and r. garcia , `` tip motion in amplitude modulation ( tapping - mode ) atomic - force microscopy : comparison between continuous and point - mass models , '' _ applied physics letters _",
    "80 , num . 9 , 2002 .",
    "j. w. m. chon , p. mulvaney , and j. sader , `` experimental validation of theoretical models for the frequency response of atomic force microscope cantilever beams immersed in fluids , '' _ journal of applied physics _",
    "87 , no . 8 , pg .",
    "3978 - 3988 , 2000 .",
    "m. jiang , y.p .",
    "luo , and s.y .",
    "yang , `` stochastic convergence analysis and parameter selection of the standard particle swarm optimization algorithm , '' _ information processing letters _ , 102 , pp . 8 - 16 ,",
    "2007 .",
    "r. garcia , c.j.gomez , n.f.martinez , s. patil , c. dietz , and r. magerie , `` identification of nanoscale dissipation processes by dynamic atomic force microscopy , '' _ physics review letters _ , vol .",
    "97 , issue 1 , 2006 ."
  ],
  "abstract_text": [
    "<S> the atomic force microscope ( afm ) is a versatile , high - resolution tool used to characterize the topography and material properties of a large variety of specimens at nano - scale . </S>",
    "<S> the interaction of the micro - cantilever tip with the specimen causes cantilever deflections that are measured by an optical sensing mechanism and subsequently utilized to construct the sample topography . </S>",
    "<S> recent years have seen increased interest in using the afm to characterize soft specimens like gels and live cells . </S>",
    "<S> this remains challenging due to the complex and competing nature of tip - sample interaction forces  large tip - sample interaction force is necessary to achieve good signal - to - noise ratios ; however , large force tends to deform and destroy soft samples . in situ estimation of the local tip - sample interaction force </S>",
    "<S> is needed to control the afm cantilever motion and prevent destruction of soft samples while maintaining a good signal - to - noise ratio . </S>",
    "<S> this necessitates the ability to rapidly estimate the tip - sample forces from the cantilever deflection during operation .    </S>",
    "<S> this paper proposes a first approach to a near real - time framework for tip - sample force inversion . </S>",
    "<S> we pose the inverse problem of extracting the tip - sample force as an unconstrained optimization problem . a fast , </S>",
    "<S> parallel forward solver is developed by utilizing graphical processing units ( gpu ) . </S>",
    "<S> this forward solver shows an effective 30000 fold speed - up over a comparable cpu implementation , resulting in milli - second calculation times . </S>",
    "<S> the forward solver is coupled with a gpu based particle - swarm optimization implementation . </S>",
    "<S> we illustrate the framework on three classes of tip - sample interaction inversions . </S>",
    "<S> each of these inversions is performed in sub - second timings , showing potential for integration with on - line afm imaging and material characterization </S>",
    "<S> .    atomic force microscope , tip - sample interaction , graphics processing unit , nano - scale imaging of soft biological sample , inverse problem , particle swarm optimization </S>"
  ]
}
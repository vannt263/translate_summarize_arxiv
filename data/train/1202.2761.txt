{
  "article_text": [
    "the forward tracking detector ( ftd ) covers the region between the beam - cones and the central tpc of the international large detector ( ild ) @xcite .",
    "each half consists of 2 silicon pixel disks and 5 double - sided si micro - strip disks , fig .",
    "[ fig : ftd ] . tracks in that region are reconstructed within ild s software framework ` marlin ` @xcite . up to now",
    "this has been achieved by an older version of track search ( ` silicontracking ` ) , together with a track fit of legacy fortran code which has recently been replaced by the new kalman filter toolkit ` kaltest ` @xcite .",
    "however , it is no longer adequate in terms of maintainability , flexibility and performance .",
    "our goal is to develop a state - of - the - art standalone forward tracking package to process the hits on the ftd , in order to efficiently find and precisely reconstruct the genuine tracks .",
    "it is called ` forwardtracking ` , and its methods are , in the order as they are used :    * a * cellular automaton * for finding track candidates from the detected hits ; * a * kalman filter * for fitting the track candidates and getting a quality feedback ; * a * hopfield neural network * for getting the best subset of the track candidates collected so far .",
    "in information theory , a cellular automaton is a set of discrete entities called `` cells '' , which have discrete states and change those states  in discrete iterations  depending on their `` environment '' .",
    "e.g. , biological cells are discrete because they always consist of an integer number , and are assigned discrete states like `` living '' or `` dead '' .",
    "maybe the most famous application of a cellular automaton is _ j.h .",
    "`` game of life '' . besides simulating cells or population growth , the cellular automaton can as well be used as a tool for pattern recognition @xcite . while it is hard to define `` pattern '' exactly , what we might say is that a pattern follows some well - defined rules .",
    "a cellular automaton is based on rules , too : the rules on how to change the states of its cells .",
    "thus , by implementing rules in such a way that they resemble the rules of a pattern being searched for , the cellular automaton can be used to find cells that form that specific pattern .      in track search ,",
    "the pattern which is to be found is that of a trajectory belonging to a charged particle moving in a stationary magnetic field . in case of a homogeneous field and neglecting material effects ( multiple scattering and energy loss ) , this trajectory is a helix with its axis parallel to the field @xcite .",
    "moreover , our task is simplified by the geometry of the ftd being approximately planes perpendicular to the helix axis .    in order to explain the method of the cellular automaton , for a clearer picture let s reduce the problem to 2d , and imagine a hypothetical detector of 4 layers as in fig .  [",
    "fig : detector ] .",
    "the half - cross on the left indicates the centre of the beam interaction profile which is used as an additional `` hit '' for track search ; this is valid for most tracks , since they originate from near that point  either directly , or as the decay of a short - lived particle .            at the core of any cellular automaton",
    "are the cells . in track search ,",
    "the cells are defined as the connection of two ( or more , see later ) hits between adjacent layers , usually called a `` segment '' .",
    "the first step is to build all the segments we are going to work with .",
    "however , connecting all the hits between adjacent layers , i.e.  building every possible segment , is unnecessary and combinatorially expensive .",
    "fortunately we have some idea , supported by simulation , how the tracks we are looking for are expected to behave .",
    "our strategy is to throw away as much fake data as possible with fast test criteria early ; the lesser data we retain , the more elaborate but time consuming tests can we apply later .",
    "of course we have to make sure that those early fast test criteria are justified by a careful analysis of representative samples of realistically simulated tracks .",
    "for this example we apply as a very simple criterion the distance between two hits : if too far apart they will not get connected . after connecting only those hits between adjacent layers",
    "whose distance is less than a given cut - off value , we arrive at fig .  [",
    "fig : rphi_step1 ] : the lines connecting the hits are the segments we will further work with .",
    "the cells of a cellular automaton have states . for track search ,",
    "the state is expressed as an integer value . at start - up , all segments are given an initial state value 0 ( indicated by black in fig .",
    "[ fig : rphi_step1 ] ) .",
    "the cellular automaton will change those states by the following rule : in each iteration , it checks all segments for `` neighbours ''  if a segment has at least one neighbour , its state gets augmented by 1 ; otherwise , its state stays the same .",
    "a `` neighbour '' is defined as an segment if    * it shares a hit with the current segment , and * has the same state as the current segment , and * fulfills some test criteria ( representative for the track we are looking for ) .",
    "criterion in this example is the angle between the segment and its candidate neighbour : a small angle ( close to a straight line @xmath0 big helix radius , high @xmath1 ) is `` pass '' , whereas a big angle ( a pronounced kink @xmath0 small helix radius , low @xmath1 ) is `` fail . ''",
    "r0.5        after the first iteration we get fig .",
    "[ fig : rphi_step2 ] : the segments in yellow are those which have been raised to state 1 . note that the innermost segments ( the ones connected to the beam interaction point ) all stay at state 0 , because they do nt have inward segments sharing their pseudo hit , thus no neighbours have been possible for them .",
    "the cellular automaton continues iterating until no changes happen anymore .",
    "eventually we arrive at fig .",
    "[ fig : rphi_step2_3 ] : there are segments of state 0 ( black ) , state 1 ( yellow ) , state 2 ( red ) , and state 3 ( purple ) .",
    "let s label our @xmath2 detector layers from @xmath3 ( the innermost ) to @xmath4 ( the outermost ) , and call a segment to be `` from layer @xmath5 '' if it connects hits between the layers @xmath5 and @xmath6 .",
    "now , if we take any outermost segment ( i.e.  one from layer 3 ) of state 3 , it is guaranteed to be linked in a chain to a segment of state 2 from layer 2 , to a segment of state 1 from layer 1 , and to a segment of state 0 from the interaction point .",
    "thus , it is linked all the way through , which is the behaviour expected for the path of a genuine track .    on the other hand , any outermost segment ( i.e.  one from layer 3 ) which does nt have state 3",
    "is linked all the way through , and consequently gets thrown away . in general , all segments which have not attained their highest possible state  which is exactly identical to the label of their `` from '' layer as defined above  will be erased .",
    "after the clean - up we finally arrive at fig .",
    "[ fig : rphi_step3 ] : quite a number of possible segments have been erased , and we are left with few candidate paths . in a realistic scenario , particularly with background hits , such data reduction would become even much more pronounced ; this notwithstanding , the number of candidate paths might still be too high .",
    "therefore , the cellular automaton method shown so far can be further improved by augmenting the 2-hit segments to longer 3-hit segments .",
    "this allows for refined test criteria of stronger power , albeit also demands increased processing time .",
    "the methods sketched above are implemented in the ` forwardtracking ` package .",
    "results for realistic physics events in the full ftd setup are shown in figs .",
    "[ fig:1figsa ]  [ fig:2figsc ] . here , additional to the genuine hits ,",
    "random salt - and - pepper hits have been distributed over the disks in order to also simulate some background .",
    "the cellular automaton is performed twice : first with 2-hit segments , and thereafter with longer 3-hit segments and refined test criteria .",
    "the states of the segments are indicated by color and thickness : the more reddish and thicker a segment is , the higher is its state . for details ,",
    "r.  glattauer _",
    "s talk at this conference .",
    "the kalman filter is a well - known and widely used technique for track fitting @xcite . estimating the track parameters is useful at a late stage of track search , as it gives knowledge about the quality of the track .",
    "a common test criterion is the upper - tail @xmath7 probability of the fit : if it is very low , the track is most likely not a genuine one .",
    "however , a bit of caution is needed , because tracks might not behave as they ideally should .",
    "e.g. , the mistaken addition of a wrong hit that made sense , or a charged pion decay that generates a small kink , may pass the cellular automaton stage , but will get excluded for its bad @xmath7 probability .",
    "this is known as the `` outlier problem '' .",
    "the candidate paths left over by the cellular automaton are subjected to the kalman filter , and tested against a given cut - off value for their @xmath7 probability .",
    "technically , the kalman filter is called via the interface ` marlintrk ` of the framework @xcite , providing the fitter toolkit : ` kaltest ` ( core package doing the actual fitting ) and ` kaldet ` ( implementing detector geometry and materials ) @xcite .",
    "thus , their possible replacement by some other fitter toolkit would be transparent to ` forwardtracking ` .",
    "after cuts based on the kalman filter @xmath7 probability we have gathered track candidates with sufficient quality . however , before saving them , we have to make sure that those tracks are compatible , i.e.  do not share hits . looking again at our 2d toy detector , we find 4 tracks remaining ( fig .",
    "[ fig : rphi_tracks_in_conflict ] ) .",
    "the blue track does not share hits with any other , and can therefore be finally saved .",
    "but the three red ones share hits  they are in conflict ; thus we have to take a decision about which ones to keep and which to discard",
    ".    a straightforward approach would keep the track with the best @xmath8 probability ( or another useful quality indicator ) and discard all tracks in conflict with it .",
    "a situation might arise , however , where several tracks are entangled in a complicated way , and choosing the best quality indicator leads to the loss of other good tracks .",
    "our aim is to find a subset that contains as many compatible tracks as possible , and has a sum of quality indicators as high as possible as well .",
    "as shown in  @xcite one can come close to such an `` optimal subset '' by using a so - called hopfield neural network ( hnn )  @xcite .",
    "the hnn is a dynamic system , composed of `` neurons '' which interact with each other . in our specific application",
    "the neurons represent the tracks .",
    "two tracks ( neurons ) can be either compatible or incompatible , i.e.  do nt share hits or do so , respectively .",
    "the state of a neuron is a number between 0 and 1 , where a higher value represents a larger probability of the neuron to be included in the final selection .    the evolution of the network proceeds in discrete iterations . in every iteration the state of each neuron",
    "is recomputed by an `` activation function '' depending on the states of the other neurons .",
    "the connections ( weights ) between the neurons are set up in such a way that compatible neurons reinforce each other , and incompatible ones suppress each other .",
    "the quality indicator of the track is used in the activation threshold , such that neurons corresponding to higher quality tracks are activated more easily .",
    "there are two problems that may arise in the evolution of such a dynamic system .",
    "first , it could be stalled in an infinite loop : the states of all neurons oscillating back and forth between two configurations .",
    "this problem can be avoided by asynchronous updating , i.e.  updating the neurons one at a time and preferably in random order .",
    "the second problem is the presence of local minima , i.e.  convergence to a suboptimal configuration .",
    "this can be mitigated , if not totally avoided , by `` annealing '' : the activation function now depends on a temperature parameter which is cooled down in every iteration .",
    "the network starts up with all neurons having as their state a small random value ( e.g.  between 0 and 0.1 ) . in every iteration",
    "the states change their values ; the network is considered to be stable as soon as these changes are sufficiently small ( below a user defined cut - off value ) .",
    "once this is attained , neurons with a state value above a certain threshold ( e.g.  0.75 ) are considered as active and enter the best subset .",
    "the performance of the hnn depends on several parameters which have to be tuned for the concrete application in order to give the best results . in our example",
    "this results in two of the conflicting red tracks surviving and one being deleted ( fig .",
    "[ fig : rphi_step6 ] ) .",
    "close to the beam interaction point electron - positron pairs are copiously produced by beamstrahlung , prominently in the forward direction .",
    "those which escape the beam - cones affect the innermost detectors , i.e.  vertex detector and inner ftd disks .",
    "a rough estimate @xcite gives 10.4 ( 6.1 ) background hits per bunch crossing on disk 1 ( 2 ) .",
    "these are si pixel detectors @xcite with their readout integrating over many bunch crossings at 369 ns .",
    "a first guess about the final specifications expects a readout frame of 100 bunch crossings , resulting in the order of @xmath9  background hits per event on each of the inner ftd disks 1 and 2 .",
    "the outer ftd disks 3  7 are double - sided si micro - strip detectors @xcite .",
    "the strips on either side are oriented to form a stereo angle ; this allows for 2d measurements , but also introduces artefact ghost hits . for a stereo angle of @xmath10 , @xmath11 genuine hits will cause up to @xmath12 ghosts . in this scenario ,",
    "a dense jet of e.g.  10 tracks yields 90 ghosts on each disk , and on 3 disks yields @xmath13 triplets , only @xmath9 of which are not caused by ghosts ; this would be a combinatorial disaster for the cellular automaton and must be avoided .",
    "for this reason the present design of the micro - strip disks uses a shallow stereo angle , thus effectively `` pushing out '' most of the artefact ghost hits beyond the sensitive area of the disks and so avoiding to be included in the track search .",
    "a new software processor ( ` forwardtracking ` ) has been developed for a stand - alone track search in the forward region of ild , covered by the silicon forward tracking detector ftd .",
    "methods used are a cellular automaton , a kalman filter , and a hopfield neural network .",
    "it is part of a major revision of ild s software framework ` marlin ` , and has successfully been tested and shown superior performance w.r.t .  the old software .",
    "future developments are planned to include a tpc supported track search in the `` intermediate region '' between barrel and forward , efficient outlier handling by a deterministic annealing filter ( daf ) @xcite , and a precision track fit for electrons  which suffer energy loss by bremsstrahlung  by a gaussian sum filter ( gsf ) @xcite .",
    "the authors wish to thank _ steven aplin , jan engels _ and _ frank gaede _ ( desy , hamburg ) for their support with the integration into the ild framework .    99",
    "_ ild concept group : _ the international large detector  letter of intent , desy 2009 - 87 / fnal + pub-09 - 682-e / kek 2009 - 6 ( rev . feb .",
    "2010 ) , isbn 978 - 3 - 935702 - 42 - 3 ilc software portal at desy , ` http://ilcsoft.desy.de/portal/ ` _",
    "k.  fujii : _ extended kalman filter , ` http://www-jlc.kek.jp/subg/offl/kaltest/ ` _",
    "et  al . : nuclear instruments and methods a * 489 * , 389 ( 2002 ) , + _",
    "et  al . : nuclear instruments and methods a * 490 * , 546 ( 2002 )",
    "_ m. krammer , w. mitaroff : _ tracking detectors , in `` handbook of particle detection and imaging '' , + vol .",
    "265  295 , springer , berlin - heidelberg 2012 , isbn 978 - 3 - 642 - 13270 - 4 _ r. frhwirth : _ nuclear instruments and methods a * 262 * , 444 ( 1987 ) _ a. strandlie , r. frhwirth : _ reviews of modern physics * 82 * , 1419 ( 2010 ) _",
    "r.  frhwirth : _ computer physics communications * 78 * , 23 ( 1993 ) _",
    "y.  shrivastava _ et  al .",
    ": ieee transactions on neural networks * 3 * , 951 ( 1992 ) _ w. adam _ at al . :",
    "journal of physics g * 31 * , n9 ( 2005 ) _ m. valentan : _ ` http://linearcollider.hephy.at/talks/08_silc_santander/mv_ild_fwdoptim.pdf `"
  ],
  "abstract_text": [
    "<S> the reconstruction software for ild is currently subject to a major revision , aiming at improving its accuracy , speed , efficiency and maintainability in time for the upcoming dbd report . </S>",
    "<S> this requires replacing old code by novel methods for track search and fit , together with modern standards for interfaces and tools .    </S>",
    "<S> track reconstruction in the `` forward region '' , defined by the silicon forward tracking detector ( ftd ) , relies heavily on a powerful stand - alone track search . </S>",
    "<S> the new software makes use of a cellular automaton , a kalman filter , and a hopfield neural network . </S>",
    "<S> we give an overview of the project , its methods and merits . </S>"
  ]
}
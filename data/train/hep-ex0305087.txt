{
  "article_text": [
    "the software projects for high energy physics experiments are international with often several hundreds programmers from institutions world - wide involved .",
    "the coordination of distributed software development is an important factor of success .",
    "the automated nightly builds become a major component in collaborative software organization and management . in multi - person , multi - platform environment they provide a fast feedback to developers on new code submissions and facilitate collective work on different or same parts of software .",
    "nicos  @xcite was originally created for the atlas experiment  @xcite and evolved in a versatile nightly builds system .",
    "it operates on unix - like platforms and works with known release management tools , such as scram  @xcite and cmt  @xcite .",
    "the nicos nightly builds become a media in which advanced programmers perform code development and make this development more effective and high - quality .",
    "currently the nicos tool is also used in the lhc computing grid project  @xcite .",
    "the task of nicos is to provide a nightly build system that    * works with known software release tools , * provides options for version management and number of releases in a cycle , * performs testing of the newly built software , * informs programmers about results with dynamic web pages and personal e - mails .    the design strategy is based on a goal to make the system flexible , portable , stable , and easy to use .    flexibility is attained by organizing nicos in a modular way so that each module is responsible for a certain step and independently described in the nicos configuration file . the modular structure allows to create the nightly builds framework that allows to plug in build , test , validation and other external tools . for the task of software management nicos",
    "relies on external release tools  @xcite .",
    "nicos is based on perl scripts that makes possible porting to unix and windows systems .",
    "nicos creates web pages that can be viewed with major web browsers , such as netscape , internet explorer , and opera .",
    "the nicos system include the peer process that controls the execution of modules .",
    "it detects problems and makes an attempt to rerun failed modules .",
    "this feature allows to compensate for temporary technical problems and achieve maximum stability of the nightly builds .",
    "nicos is easy to use for both administrators and software developers .",
    "the nicos project configuration is stored in one unique text file named nicos_cache .",
    "the versions of packages for the nightly builds can be specified in the nicos database files or supplied by an external tool .",
    "a fast feedback to developers is one of the most important goals of nightly builds .",
    "nicos automatically posts the information about the progress of nightly builds , identifies problems , and creates the web pages with build results .",
    "the authors of failed packages can receive automatic e - mail notifications if desired .",
    "nicos organization is shown in figure  [ organiz ]",
    ". the main process , nicos controller , can be run at scheduled times by system tools , such as cron .",
    "it runs the nicos job modules and directs the status information to the nicos project web page . if desired , the previous nightly release is preserved and new release is built in a separate area .",
    "the number of releases in a cycle is determined by the nicos administrator .",
    "nicos supports multi - platform builds ( starting version 0.2 ) sharing code sources .",
    "the main build process checks out code and triggers the start of builds on other platforms .    in case of failure",
    "the nicos controller tries to make a restart from the point of failure . if the nicos job runs overtime ( typically more than 24 hours ) it is automatically destroyed .",
    "there are eight major modules in the nicos job .",
    "they are able to serve as the interfaces to external tools , such as cvs , test , and release management tools .",
    "* nicos configuration . at this step",
    "the project parameters are read from the nicos_cache file .",
    "* release tool setup .",
    "the release tool ( such as scram , cmt ) is setup with commands specified in nicos_cache . * code checkout from the cvs repository specified in nicos_cache .",
    "the packages tags are retrieved from the nicos database file or supplied by an external tool . * project setup . at this step",
    "the project setup commands can be specified .",
    "* project build .",
    "the release tool should insert separators between the packages builds outputs with the packages names .",
    "the unique string from the separators should be specified for this step .",
    "after the build nicos cuts out and writes the logfiles with the build outputs for individual packages to the log area of the project . * unit tests and integrated tests .",
    "the test tools , such as oval  @xcite or cppunit  @xcite are plugged in , as desired .",
    "the outputs are forwarded to the testlog area of the project .",
    "* error analysis . in the build output nicos searches for critical patterns indicating make problems , such as no rule to make target or symbol referencing errors. for tests , success is determined by the value returned by test tools . *",
    "creation of the web pages with the summary of build results and e - mail notification about problems .",
    "the progress and results of nicos builds are reflected on the dynamically created web pages . its structure is shown in figure  [ web ] .",
    "the nicos project web page shows the major parameters , such as project area , compiler options , and list of releases available for supported platforms . for building releases",
    ", the currently performed step is displayed .",
    "the nicos project web page contains links to the pages with detailed results for individual releases and pages showing the nicos database and configuration parameters .",
    "optionally the collection of php scripts , `` nicos webmaster '' , can be used for handling the administration of nicos over the www ( available in 0.2 version of nicos ) .",
    "this tool can modify the project configuration ( `` project configurator '' ) and nicos database of package versions ( `` version administrator '' ) .",
    "in addition it is possible to schedule or stop builds from the job controller page .",
    "the configuration parameters for the nicos job is collected in the xml - like nicos_cache files .",
    "the steps of building process is associated with its markup tag .",
    "every tag consist of a tag name , sometimes followed by an optional list of tag attributes that are placed between brackets ( @xmath0 and @xmath1 ) .",
    "the markup tag is followed by the commands , including environment definitions , needed to be executed at the step .",
    "the example of a markup tag below is for the step of build .",
    "the attribute defines the directory name ( relative to the project area ) where the build should be performed .",
    "the tag is followed by command scram b that builds a scram based project .    ....",
    "< project build dir = src >       scram b ....    nicos checks out versions of packages as specified in the nicos database file .",
    "each line of this text file contains the name of package , tag of package , and e - mail addresses of the developers separated by spaces .",
    "the exact tag of package or option for tag calculation can be indicated .",
    "the options include the selection of recent submission , recent tagged submission , recent version in the `` official '' format : -[0 - 9][0 - 9]-[0 - 9][0 - 9]-[0 - 9][0 - 9 ] .",
    "the nicos database file can be indicated in nicos_cache or dynamically created by a plug - in script .",
    "the latter option is useful for large collaborations where special version management tools are used  @xcite .",
    "the 0.1 version of nicos is available since march 2003 and provides basic functionalities .",
    "new 0.2 version ( scheduled for september 2003 ) will contain important improvements ( e.g. multi - platform support ) and additions such as the php script collection for administration over the www .",
    "the long term plans center around improving simplicity of use and portability ( including the support of nicos for windows os ) .",
    "nicos ( nightly control system ) is currently successfully used by several software projects at cern ( e.g. atlas , lcg ) .",
    "the nicos features such as the instantaneous error analysis , dynamic informative web pages , and e - mail notifications about problems are proved to be useful for collaborative software organization and management . as experience gains",
    ", nicos undergoes continuous improvements and evolutions ."
  ],
  "abstract_text": [
    "<S> nicos , nightly control system , is a flexible tool for coordination of software development in large - scale projects . </S>",
    "<S> it manages the multi - platform nightly builds based on the recent versions of software packages , tries to compensate for technical failures , tests the newly built software , identifies possible problems , and makes results immediately available to developers spread over different institutions and countries . </S>",
    "<S> the nicos nightly build services ensure that new software submissions are consistent and provide expected results . </S>",
    "<S> the nicos tool was developed to coordinate the efforts of more than 100 developers from 34 countries for the atlas project at cern and can be easily adapted for other large software projects . </S>"
  ]
}
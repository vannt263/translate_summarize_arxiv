{
  "article_text": [
    "this paper presents an algorithm which approximates a _ hidden markov model _ ( hmm ) by a _ finite - state transducer _ ( fst ) .",
    "we describe one application , namely part - of - speech tagging .",
    "other potential applications may be found in areas where both hmms and finite - state technology are applied , such as speech recognition , etc .",
    "the algorithm has been fully implemented .",
    "an hmm used for tagging encodes , like a transducer , a relation between two languages .",
    "one language contains sequences of ambiguity classes obtained by looking up in a lexicon all words of a sentence .",
    "the other language contains sequences of tags obtained by statistically disambiguating the class sequences . from the outside",
    ", an hmm tagger behaves like a sequential transducer that deterministically maps every class sequence to a tag sequence , e.g. : @xmath0 ~[adj , noun ] ~[adj , noun ] ~ ...... ~[end ] } }   { \\tt{{\\rule{5mm}{0mm}}det{\\rule{11mm}{0mm}}adj{\\rule{11mm}{0mm}}noun{\\rule{3mm}{0 mm } } ~ ...... {\\rule{2mm}{0mm}}end } }    \\label{e - ctot}\\ ] ] + the main advantage of transforming an hmm is that the resulting transducer can be handled by finite state calculus . among others",
    ", it can be composed with transducers that encode :    * correction rules for the most frequent tagging errors which are automatically generated ( brill , 1992 ; roche and schabes , 1995 ) or manually written ( chanod and tapanainen , 1995 ) , in order to significantly improve tagging accuracy .",
    "these rules may include long - distance dependencies not handled by hmm taggers , and can conveniently be expressed by the replace operator ( kaplan and kay , 1994 ; karttunen , 1995 ; kempe and karttunen , 1996 ) . * further steps of text analysis , e.g. light parsing or extraction of noun phrases or other phrases ( at - mokhtar and chanod , 1997 ) .",
    "these compositions enable complex text analysis to be performed by a single transducer .",
    "the speed of tagging by an fst is up to six times higher than with the original hmm .",
    "the motivation for deriving the fst from an hmm is that the hmm can be trained and converted with little manual effort .",
    "an hmm transducer builds on the data ( probability matrices ) of the underlying hmm .",
    "the accuracy of this data has an impact on the tagging accuracy of both the hmm itself and the derived transducer .",
    "the training of the hmm can be done on either a tagged or untagged corpus , and is not a topic of this paper since it is exhaustively described in the literature ( bahl and mercer , 1976 ; church , 1988 ) .",
    "an hmm can be identically represented by a weighted fst in a straightforward way .",
    "we are , however , interested in non - weighted transducers .",
    "this section presents a method that approximates a ( first order ) hidden markov model ( hmm ) by a finite - state transducer ( fst ) , called _ b - type _ approximation .",
    "regular expression operators used in this section are explained in the annex .",
    "looking up , in a lexicon , the word sequence of a sentence produces a unique sequence of ambiguity classes . tagging the sentence by means of a ( first order )",
    "hmm consists of finding the most probable tag sequence @xmath1 given this class sequence @xmath2 ( eq .  [ e - ctot ] , fig .",
    "[ f - bseq - b ] ) .",
    "the joint probability of the sequences @xmath2 and @xmath1 can be estimated by : @xmath3      the determination of a tag of a particular word can not be made separately from the other tags .",
    "tags can influence each other over a long distance via transition probabilities .    in this approach",
    ", an ambiguity class is disambiguated with respect to a context .",
    "a context consists of a sequence of ambiguity classes limited at both ends by some selected tag ] . for the left context of length @xmath4 we use the term _ look - back _ , and for the right context of length @xmath5",
    "we use the term _ look - ahead_.    ]    in figure [ f - bseq - b ] , the tag @xmath6 can be selected from the class @xmath7 because it is between two selected tags@xmath8 which are @xmath9 at a look - back distance of @xmath10 and @xmath11 at a look - ahead distance of @xmath12 . actually , the two selected tags @xmath9 and @xmath11 allow not only the disambiguation of the class @xmath7 but of all classes inbetween , i.e. @xmath13 , @xmath7 and @xmath14 .",
    "we approximate the tagging of a whole sentence by tagging subsequences with selected tags at both ends ( fig .",
    "[ f - bseq - b ] ) , and then overlapping them . the most probable paths in the tag space of a sentence , i.e. valid paths according to this approach , can be found as sketched in figure [ f - bpath - val ] .    a valid path consists of an ordered set of overlapping sequences in which each member overlaps with its neighbour except for the first or last tag .",
    "there can be more than one valid path in the tag space of a sentence ( fig .",
    "[ f - bpath - val ] ) .",
    "sets of sequences that do not overlap in such a way are incompatible according to this model , and do not constitute valid paths ( fig .",
    "[ f - bpath - inval ] ) .      given a length @xmath4 of look - back and a length @xmath5 of look - ahead",
    ", we generate for every class @xmath15 , every look - back sequence @xmath16 , and every look - ahead sequence @xmath17 , a b - type sequence@xmath8 : @xmath18    for example : @xmath19   \\ ; [ adj , noun , verb ]   \\ ; [ noun , verb ]   \\ ; verb } } \\label{e - bseq - exm0}\\ ] ]    each such _ original b - type sequence _ ( eq .  [ e - origbseq],[e - bseq - exm0 ] ; fig .",
    "[ f - bseq - c ] ) is disambiguated based on a first order hmm . here",
    "we use the viterbi algorithm ( viterbi , 1967 ; rabiner , 1990 ) for efficiency .    ]    for an original b - type sequence , the joint probability of its class sequence @xmath2 with its tag sequence @xmath1 ( fig .",
    "[ f - bseq - c ] ) , can be estimated by : @xmath20   \\ , \\cdot \\ , a ( t_{\\alpha } | t_{\\alpha-1 } )    \\label{e - pr - bseq}\\end{aligned}\\ ] ]    at every position in the look - back sequence and in the look - ahead sequence , a boundary # may occur , i.e. a sentence beginning or end .",
    "no look - back ( @xmath21 ) or no look - ahead ( @xmath22 ) is also allowed . the above probability estimation ( eq .  [ e - pr - bseq ] )",
    "can then be expressed more generally ( fig .",
    "[ f - bseq - c ] ) as : @xmath23    with @xmath24 being @xmath25    with @xmath26 being @xmath27    and with @xmath28 being @xmath29    when the most likely tag sequence is found for an original b - type sequence , the class @xmath15 in the middle position ( eq .  [ e - origbseq ] ) is associated with its most likely tag @xmath30 .",
    "we formulate constraints for the other tags @xmath31 and @xmath32 and classes @xmath33 and @xmath34 of the original b - type sequence .",
    "thus we obtain a _ tagged b - type sequence _  ] : @xmath35    stating that @xmath30 is the most probable tag in the class @xmath15 if it is preceded by @xmath36 and followed by @xmath37 .    in expression [ e - tgdbseq ] the subscripts",
    "@xmath5 denote the position of the tag or class in the b - type sequence , and the superscripts @xmath38 and @xmath39 express constraints for preceding and following tags and classes which are part of other b - type sequences . in the example@xmath40 : @xmath41 \\req b1}{\\rule{35mm}{0mm}}\\nonumber\\\\ \\scalebox{0.9 1}{\\tt [ adj , noun , verb ] \\symp adj }   { \\rule{20mm}{0 mm } }   \\nonumber \\\\ { \\rule{30mm}{0 mm } } \\scalebox{0.9 1}{\\tt [ noun , verb ] \\req a1   \\;\\ ; verb \\req a2 }    \\label{e - bseq - exm1}\\end{aligned}\\ ] ]    adj is the most likely tag in the class if it is preceded by the tag conj two positions back ( b2 ) , by the class one position back ( b1 ) , and followed by the class one position ahead ( a1 ) and by the tag verb two positions ahead ( a2 ) .",
    "boundaries are denoted by a particular symbol # and can occur at the edge of the look - back and look - ahead sequence : @xmath42    for example : @xmath43 \\req b1}{\\rule{35mm}{0mm}}\\nonumber \\\\",
    "\\scalebox{0.9 1}{\\tt [ adj , noun , verb ] \\symp adj }    { \\rule{20mm}{0 mm } } \\nonumber \\\\ { \\rule{30mm}{0 mm } } \\scalebox{0.9 1}{\\tt [ noun , verb ] \\req a1   \\;\\ ; verb \\req a2 }    \\label{e - bseq - exm2}\\end{aligned}\\ ] ]    @xmath41 \\req b1}{\\rule{35mm}{0mm}}\\nonumber\\\\     \\scalebox{0.9 1}{\\tt [ adj , noun , verb ] \\symp noun }   { \\rule{18mm}{0 mm } } \\nonumber \\\\ { \\rule{30mm}{0 mm } } \\scalebox{0.9 1}{\\tt \\ # \\req a1 } { \\rule{18mm}{0mm}}\\enspace    \\label{e - bseq - exm3}\\end{aligned}\\ ] ]    note that look - back of length @xmath4 and look - ahead of length @xmath5 also include all sequences shorter than @xmath4 or @xmath5 , respectively , that are limited by # .    for a given length @xmath4 of",
    "look - back and a length @xmath5 of look - ahead , we generate every possible original b - type sequence ( eq .",
    "[ e - origbseq ] ) , disambiguate it statistically ( eq .  [ e - pr - bseq]-[e - prend ] ) , and encode the tagged b - type sequence @xmath44 ( eq .  [ e - tgdbseq ] ) as an fst .",
    "all sequences @xmath44 are then unioned @xmath45    and we generate a preliminary tagger model @xmath46 @xmath47\\ ; \\kleenestar    \\label{e - bprime}\\ ] ]    where all sequences @xmath44 can occur in any order and number ( including zero times ) because no constraints have yet been applied .",
    "to ensure a correct concatenation of sequences @xmath44 , we have to make sure that every @xmath44 is preceded and followed by other @xmath44 according to what is encoded in the look - back and look - ahead constraints .",
    "e.g. the sequence in example ( [ e - bseq - exm2 ] ) must be preceded by a sentence beginning , # , and the class and followed by the class and the tag verb .",
    "we create constraints for preceding and following tags , classes and sentence boundaries . for the look - back , a particular tag @xmath48 or class @xmath49 is required for a particular distance of @xmath50 , by@xmath40 : @xmath51\\kleenestar\\ ;        [ { \\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t \\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t]\\;\\kleenestar ] \\ntimes{\\scalebox{0.6 1}{(-\\delta\\!-\\!1)}}\\ , ]     \\ ; t_i^{\\scalebox{0.6 0.8}{b ( -\\delta)}}\\ ; ? \\;\\kleenestar\\ , ] { \\rule{8mm}{0 mm } }    \\label{e - tagconsb }   \\\\ { \\rule{0mm}{7 mm } } r^{\\delta } ( c_j ) & { \\rule{-5mm}{0 mm } } = & { \\rule{-5mm}{0 mm } }   \\xnot[\\ ,    \\xnot[\\ , ?",
    "\\kleenestar\\ ; c_j\\ ;        [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}c]\\kleenestar\\ ;        [ { \\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}c \\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}c]\\;\\kleenestar ] \\ntimes{\\scalebox{0.6 1}{(-\\delta\\!-\\!1)}}\\ , ]     \\ ; c_j^{\\scalebox{0.6 0.8}{b ( -\\delta)}}\\ ; ? \\;\\kleenestar\\ , ]    \\label{e - classconsb }   \\\\ { \\rule{0mm}{6 mm } }   & \\enspace & { \\rule{32mm}{0 mm } } { \\rm for } { \\rule{4mm}{0 mm } } \\delta \\le -1 \\nonumber\\end{aligned}\\ ] ]    with @xmath52 and @xmath53 being the union of all tags and all classes respectively .",
    "a sentence beginning , # , is required for a particular look - back distance of @xmath54 , on the side of the tags , by : @xmath55\\kleenestar\\ ;          [ { \\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t \\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t]\\;\\kleenestar ] \\ntimes{\\scalebox{0.6 1}{(-\\delta\\!-\\!1)}}\\ , ]     \\ ; \\#^{\\scalebox{0.6 0.8}{b ( -\\delta)}}\\ ; ? \\;\\kleenestar\\ , ] { \\rule{10mm}{0 mm } }    \\label{e - bndconsb }   \\\\ { \\rule{0mm}{6 mm } }   & \\enspace & { \\rule{30mm}{0 mm } } { \\rm for } { \\rule{4mm}{0 mm } } \\delta \\le -1 \\nonumber\\end{aligned}\\ ] ]    in the case of look - ahead we require for a particular distance of @xmath56 , a particular tag @xmath48 or class @xmath49 or a sentence end , # , on the side of the tags , in a similar way by : @xmath57\\kleenestar\\ ;           [ { \\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t \\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t]\\;\\kleenestar ] \\ntimes{\\scalebox{0.6 1}{(\\delta-1 ) } }       \\ ; t_i\\ ; ? \\;\\kleenestar\\ , ] \\",
    ", ] { \\rule{10mm}{0 mm } }    \\label{e - tagconsa }   \\\\ { \\rule{0mm}{7 mm } } r^{\\delta } ( c_j ) & { \\rule{-5mm}{0 mm } } = & { \\rule{-5mm}{0 mm } }    \\xnot[\\ ; ?",
    "\\kleenestar\\ ; c_j^{\\scalebox{0.6 0.8}{a\\delta}}\\ ;      \\xnot[\\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}c]\\kleenestar\\ ;           [ { \\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}c \\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}c]\\;\\kleenestar ] \\ntimes{\\scalebox{0.6 1}{(\\delta-1 ) } }       \\ ; c_j\\ ; ? \\;\\kleenestar\\ , ] \\ , ]    \\label{e - classconsa }   \\\\ { \\rule{0mm}{7 mm } } r^{\\delta } ( \\ # ) & { \\rule{-5mm}{0 mm } } = & { \\rule{-5mm}{0 mm } }    \\xnot[\\ ; ? \\kleenestar\\ ; \\#^{\\scalebox{0.6 0.8}{a\\delta}}\\ ;      \\xnot[\\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t]\\kleenestar\\ ;           [ { \\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t \\ ; [ \\bs\\!{\\rule{-2mm}{0mm}\\enspace^{\\cup}\\rule{-0.5mm}{0mm}}t]\\;\\kleenestar ] \\ntimes{\\scalebox{0.6 1}{(\\delta-1 ) } }       \\ , ] \\ , ]    \\label{e - bndconsa }   \\\\ { \\rule{0mm}{6 mm } }   & \\enspace & { \\rule{31mm}{0 mm } } { \\rm for } { \\rule{4mm}{0 mm } } \\delta \\ge 1 \\nonumber\\end{aligned}\\ ] ]    all tags @xmath48 are required for the look - back only at the distance of @xmath58 and for the look - ahead only at the distance of @xmath59 .",
    "all classes @xmath49 are required for distances of @xmath60 $ ] and @xmath61 $ ] .",
    "sentence boundaries , # , are required for distances of @xmath62 $ ] and @xmath63 $ ] .",
    "we create the intersection @xmath64 of all tag constraints , the intersection @xmath65 of all class constraints , and the intersection @xmath66 of all sentence boundary constraints : @xmath67   \\\\",
    "\\scriptstyle   \\delta \\ ; \\in \\ ; \\ { -\\beta , \\alpha \\ }                        \\end{array } }          { \\rule{-5mm}{0 mm } } r^{\\delta } ( t_i )    \\label{e - tagconsi }   \\\\ { \\rule{0mm}{7 mm } } r_c & = & { \\rule{-10mm}{0 mm } }       \\bigcap\\limits_{\\begin{array}{c }           \\scriptstyle      j    \\ ; \\in \\ ;     [ 1 , m ]   \\\\           \\scriptstyle   \\delta \\ ; \\in \\ ; [ -\\beta+1,-1 ] \\cup [ 1,\\alpha-1 ]                       \\end{array } }          { \\rule{-10mm}{0 mm } } r^{\\delta } ( c_j )    \\label{e - classconsi }   \\\\ { \\rule{0mm}{7 mm } } r_\\ # & = & { \\rule{-7mm}{0 mm } }       \\bigcap\\limits_{\\begin{array}{c }           \\scriptstyle   \\delta \\ ; \\in \\ ; [ -\\beta,-1 ] \\cup [ 1,\\alpha ]                       \\end{array } }          { \\rule{-6mm}{0 mm } } r^{\\delta } ( \\ # )    \\label{e - bndconsi}\\end{aligned}\\ ] ]    all constraints are enforced by composition with the preliminary tagger model @xmath46 ( eq .",
    "[ e - bprime ] ) .",
    "the class constraint @xmath65 is composed on the upper side of @xmath46 which is the side of the classes ( eq .  [ e - tgdbseq ] ) , and both the tag constraint @xmath64 and the boundary constraint could alternatively be computed for and composed on the side of the classes .",
    "the transducer which encodes @xmath66 would then , however , be bigger because the number of classes is bigger than the number of tags . ]",
    "@xmath66 are composed on the lower side of @xmath46 , which is the side of the tags@xmath40 : @xmath68    having ensured correct concatenation , we delete all symbols @xmath69 that have served to constrain tags , classes or boundaries , using @xmath70 : @xmath71   \\cup      \\left [ \\bigcup\\limits_{j,\\delta } c_j^\\delta \\right ]   \\cup      \\left [ \\bigcup\\limits_{\\delta } \\#^\\delta \\right ]    \\label{e - requnion }   \\\\ d_r & = &       { \\rule{4mm}{0 mm } } r \\repl [ \\ ; ]    \\label{e - reqdel}\\end{aligned}\\ ] ]    by composing by composition .",
    "we rather traverse the network , and overwrite every symbol @xmath69 with the empty string symbol @xmath72 . in the following determinization of the network ,",
    "all @xmath72 are eliminated . ]",
    "@xmath73 ( eq .  [ e - bfin ] ) on the lower side with @xmath70 and on the upper side with the inverted relation @xmath74 , we obtain the final tagger model @xmath75 : @xmath76    we call the model a _ b - type model _ , the corresponding fst a _ b - type transducer _ , and the whole algorithm leading from the hmm to the transducer , a _ b - type approximation _ of an hmm .",
    "there are two groups of b - type transducers with different properties : fsts without look - back and/or without look - ahead ( @xmath77 ) and fsts with both look - back and look - ahead ( @xmath78 ) .",
    "both accept any sequence of ambiguity classes .",
    "b - type fsts with @xmath77 are always sequential .",
    "they map a class sequence that corresponds to the word sequence of a sentence , always to exactly one tag sequence .",
    "their tagging accuracy and similarity with the underlying hmm increases with growing @xmath79 .",
    "a b - type fst with @xmath21 and @xmath22 is equivalent to an _ n0-type _ fst , and with @xmath80 and @xmath22 it is equivalent to an _ n1-type _ fst ( kempe , 1997 ) .",
    "b - type fsts with @xmath78 are in general not sequential . for a class sequence",
    "they deliver a set of different tag sequences , which means that the tagging results are ambiguous .",
    "this set is never empty , and the most probable tag sequence according to the underlying hmm is always in this set .",
    "the longer the look - back distance @xmath4 and the look - ahead distance @xmath5 are , the larger the fst and the smaller the set of resulting tag sequences . for sufficiently large @xmath81",
    ", this set may contain always only one tag sequence . in this case",
    "the fst is equivalent to the underlying hmm . for reasons of size",
    "however , this fst may not be computable for particular hmms ( sec .",
    "[ s - tests ] ) .",
    "the implemented tagger requires three transducers which represent a lexicon , a guesser and an approximation of an hmm mentioned above .",
    "both the lexicon and guesser are sequential , i.e. deterministic on the input side .",
    "they both unambiguously map a surface form of any word that they accept to the corresponding ambiguity class ( fig .",
    "[ f_tgrexm ] , col .  1 and  2 ) :",
    "first of all , the word is looked for in the lexicon .",
    "if this fails , it is looked for in the guesser . if this equally fails , it gets the label which denotes the ambiguity class of unknown words .",
    "tag probabilities in this class are approximated by tags of words that appear only once in the training corpus .",
    "as soon as an input token gets labeled with the tag class of sentence end symbols ( fig .",
    "[ f_tgrexm ] : ) , the tagger stops reading words from the input . at this point , the tagger has read and stored the words of a whole sentence ( fig .",
    "[ f_tgrexm ] , col .  1 ) and generated the corresponding sequence of classes ( fig .",
    "[ f_tgrexm ] , col .  2 ) .",
    "the class sequence is now mapped to a tag sequence ( fig .",
    "[ f_tgrexm ] , col .",
    "3 ) using the hmm transducer .",
    "a b - type fst is not sequential in general ( sec .",
    "[ ss - bprops ] ) , so to obtain a unique tagging result , the finite - state tagger can be run in a special mode , where only the first result found is retained , and the tagger does not look for other results . since paths through an fst have no particular order , the result retained is random .",
    "the tagger outputs the stored word and tag sequence of the sentence , and continues in the same way with the remaining sentences of the corpus .    ....     the             [ at ]             at     share           [ nn , vb ]          nn     of              [ in ]             in      ...",
    "...             ...     tripled         [ vbd , vbn ]        vbd     within          [ in , rb ]          in     that            [ cs , dt , wps ]      dt     span            [ nn , vb , vbd ]      nn     of              [ in ]             in     time            [ nn , vb ]          nn     .               [ sent ]           sent ....    the tagger can be run in a statistical mode where the number of tag sequences found per sentence is counted .",
    "these numbers give an overview of the degree of non - sequentiality of the concerned b - type transducer ( sec .",
    "[ ss - bprops ] ) .",
    "@xmath82 + @xmath83 +    @xmath84 + @xmath85{12mm}{\\spc{2mm}97.06 \\spc{2mm}99.98 } }               & tagging accuracy of 97.06 \\% , \\newline                  and agreement of fst with hmm tagging results of 99.98 \\%                   \\rule[-2mm]{0mm}{3 mm } \\\\",
    "\\vspc{5mm}~~\\fbox{\\parbox[t]{12mm}{\\rule[-2mm]{0mm}{4mm}\\hfill\\nac } }               & transducer could not be computed , for reasons of size .",
    "\\rule[-4mm]{0mm}{5 mm } \\\\",
    "\\hline \\end{tabular}$ ] +",
    "this section compares different fsts with each other and with the original hmm .",
    "as expected , the fsts perform tagging faster than the hmm .",
    "since all fsts are approximations of hmms , they show lower tagging accuracy than the hmms . in the case of fsts with @xmath86 and @xmath87",
    ", this difference in accuracy is negligible .",
    "improvement in accuracy can be expected since these fsts can be composed with fsts encoding correction rules for frequent errors ( sec . [ s - intro ] )",
    ".    for all tests below an english corpus , lexicon and guesser were used , which were originally annotated with 74 different tags .",
    "we automatically recoded the tags in order to reduce their number , i.e. in some cases more than one of the original tags were recoded into one and the same new tag .",
    "we applied different recodings , thus obtaining english corpora , lexicons and guessers with reduced tag sets of 45 , 36 , 27 , 18 and 9 tags respectively .",
    "fsts with @xmath88 and @xmath87 and with @xmath80 and @xmath89 were equivalent , in all cases where they could be computed .",
    "table [ t_size ] compares different fsts for a tag set of 36 tags .",
    "the b - type fst with no look - back and no look - ahead which is equivalent to an n0-type fst ( kempe , 1997 ) , shows the lowest tagging accuracy ( b - fst  ( @xmath90 ) : 87.21  % ) .",
    "it is also the smallest transducer ( 1 state and 181 arcs , as many as tag classes ) and can be created faster than the other fsts ( 6 sec . ) .",
    "the highest accuracy is obtained with a b - type fst with @xmath88 and @xmath87 ( b - fst  ( @xmath91 ) : 97.34  % ) and with an _ s - type _ fst ( kempe , 1997 ) trained on 1  000  000 words ( s+n1-fst  ( 1 m ,  f1 ) : 97.33  % ) .",
    "in these two cases the difference in accuracy with respect to the underlying hmm ( 97.35  % ) is negligible . in this particular test",
    ", the s - type fst comes out ahead because it is considerably smaller than the b - type fst .",
    "the size of a b - type fst increases with the size of the tag set and with the length of look - back plus look - ahead , @xmath81 .",
    "accuracy improves with growing @xmath81 .",
    "b - type fsts may produce ambiguous tagging results ( sec .",
    "[ ss - bprops ] ) .",
    "in such instances only the first result was retained ( sec .",
    "[ s - tagger ] ) .",
    "table [ t_accuracy ] shows the tagging accuracy and the agreement of the tagging results with the results of the underlying hmm for different fsts and tag sets of different sizes .    to get results that are almost equivalent to those of an hmm ,",
    "a b - type fst needs at least a look - back of @xmath88 and a look - ahead of @xmath87 or vice versa . for reasons of size , this kind of fst",
    "could only be computed for tag sets with 36 tags or less . a b - type fst with @xmath92 and @xmath87",
    "could only be computed for the tag set with 9 tags .",
    "this fst gave exactly the same tagging results as the underlying hmm .",
    "+ table [ t_numres ] illustrates which of the b - type fsts are sequential , i.e. always produce exactly one tagging result , and which of the fsts are non - sequential .",
    "for all tag sets , the fsts with no look - back ( @xmath21 ) and/or no look - ahead ( @xmath22 ) behaved sequentially . here",
    "100  % of the tagged sentences had only one result .",
    "most of the other fsts ( @xmath78 ) behaved non - sequentially .",
    "for example , in the case of 27 tags with @xmath80 and @xmath87 ,   90.08  % of the tagged sentences had one result , 9.46  % had two results , 0.23  % had tree results , etc .",
    "non - sequentiality decreases with growing look - back and look - ahead , @xmath81 , and should completely disappear with sufficiently large @xmath81 .",
    "such b - type fsts can , however , only be computed for small tag sets . we could compute this kind of fst only for the case of 9 tags with @xmath92 and @xmath87 .",
    "the set of alternative tag sequences for a sentence , produced by a b - type fst with @xmath78 , always contains the tag sequence that corresponds with the result of the underlying hmm .",
    "0.7 mm    @xmath93 + @xmath94 +",
    "the algorithm presented in this paper describes the construction of a finite - state transducer ( fst ) that approximates the behaviour of a hidden markov model ( hmm ) in part - of - speech tagging .",
    "the algorithm , called b - type approximation , uses look - back and look - ahead of freely selectable length .",
    "the size of the fsts grows with both the size of the tag set and the length of the look - back plus look - ahead .",
    "therefore , to keep the fst at a computable size , an increase in the length of the look - back or look - ahead , requires a reduction of the number of tags . in the case of small tag sets ( e.g. 36 tags ) , the look - back and",
    "look - ahead can be sufficiently large to obtain an fst that is almost equivalent to the original hmm .",
    "in some tests s - type fsts ( kempe , 1997 ) and b - type fsts reached equal tagging accuracy . in these cases",
    "s - type fsts are smaller because they encode the most frequent ambiguity class sequences of a training corpus very accurately and all other sequences less accurately .",
    "b - type fsts encode all sequences with the same accuracy . therefore , a can reach equivalence with the original hmm , but an s - type fst can not .",
    "the algorithms of both conversion and tagging are fully implemented .",
    "the main advantage of transforming an hmm is that the resulting fst can be handled by finite state calculus and thus be directly composed with other fsts .",
    "the tagging speed of the fsts is up to six times higher than the speed of the original hmm .",
    "* future research * will include the composition of hmm transducers with , among others :    * fsts that encode correction rules for the most frequent tagging errors in order to significantly improve tagging accuracy ( above the accuracy of the underlying hmm ) .",
    "these rules can either be extracted automatically from a corpus ( brill , 1992 ) or written manually ( chanod and tapanainen , 1995 ) . * fsts for light parsing , phrase extraction and other text analysis ( at - mokhtar and chanod , 1997 ) .",
    "an hmm transducer can be composed with one or more of these fsts in order to perform complex text analysis by a single fst .",
    "[ [ anx - regex ] ]    below , a and b designate symbols , a and b designate languages , and r and q designate relations between two languages . more details on the following operators and pointers to finite - state literature can be found in + http://www.xrce.xerox.com/research/mltt/fst +    [ cols= \" < , < \" , ]",
    "i am grateful to all colleagues who helped me , particularly to lauri karttunen ( xrce grenoble ) for extensive discussion , and to julian kupiec ( xerox parc ) for sending me information on his own related work .",
    "many thanks to irene maxwell for correcting various versions of the paper .",
    "at - mokhtar , salah and chanod , jean - pierre ( 1997 ) . incremental finite - state parsing . in the _ proceedings of the 5th conference of applied natural language processing ( anlp ) .",
    "_ acl , pp .",
    "washington , dc , usa .",
    "chanod , jean - pierre and tapanainen , pasi ( 1995 ) .",
    "tagging french - comparing a statistical and a constraint based method . in the _ proceedings of the 7th conference of the eacl _ , pp .",
    "149 - 156 . acl .",
    "dublin , ireland .",
    "cmp - lg/9503003          kempe , andr and karttunen , lauri ( 1996 ) .",
    "parallel replacement in finite state calculus . in the _ proceedings of the 16th international conference on computational linguistics _ , pp .",
    "622 - 627 .",
    "copenhagen , denmark .",
    "cmp - lg/9607007    kempe , andr ( 1997 ) .",
    "finite state transducers approximating hidden markov models . in the _ proceedings of the 35th annual meeting of the association for computational linguistics _ ,",
    "460 - 467 .",
    "madrid , spain .",
    "cmp - lg/9707006    rabiner , lawrence r. ( 1990 ) .",
    "a tutorial on hidden markov models and selected applications in speech recognition . in _ readings in speech recognition _ ( eds .",
    "a. waibel , k.f .",
    "morgan kaufmann publishers , inc .",
    "san mateo , ca ."
  ],
  "abstract_text": [
    "<S> this paper describes the conversion of a hidden markov model into a finite state transducer that closely approximates the behavior of the stochastic model . in some cases the transducer is equivalent to the hmm </S>",
    "<S> this conversion is especially advantageous for part - of - speech tagging because the resulting transducer can be composed with other transducers that encode correction rules for the most frequent tagging errors . </S>",
    "<S> the speed of tagging is also improved . </S>",
    "<S> the described methods have been implemented and successfully tested . </S>"
  ]
}
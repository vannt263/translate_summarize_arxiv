{
  "article_text": [
    "nonlinear partial differential equations ( pdes ) , with multiple scales and/or high contrast in media properties , represent a class of problems with many relevant engineering and scientific applications in porous media . solving these equations using iterative methods , such as newton iterations ,",
    "requires updating the numerical solution of a large system of equations at each iteration using the previous iterate results . due to the extensive computational requirements resulting from the disparity of scales and nonlinearity ,",
    "computing fine - grid solutions becomes prohibitively expensive .",
    "moreover , these type of problems often involve coefficients that exhibit high - contrast and heterogeneous distributions .",
    "for example , when modeling subsurface flows the underlying permeability field is often represented as a high- contrast coefficient in the pressure equation .",
    "this complicates the simulation of a large number of configurations for design purposes . as such , we develop simplified reduced - order models to speed up simulations of nonlinear flows in porous media within a prescribed accuracy . in this paper , we present a coupled approach for solving nonlinear pdes that combines local and global model - reduction techniques and the discrete empirical interpolation method ( deim ) .",
    "proper orthogonal decomposition ( pod ) is one of the best known global model - reduction methods .",
    "the main purpose of this technique is to reduce the dimension of the dynamical system by projecting the high - dimensional system into a lower - dimensional manifold using a set of orthonormal basis functions ( pod modes ) constructed from a sequence of snapshots  @xcite .",
    "in addition to order reduction , this technique constitutes a powerful mode decomposition technique for extracting the most energetic structures from a linear or nonlinear dynamical process  @xcite .",
    "coarse - grid computational models are often preferred because of the computational cost of solving the systems arising in the approximation of the nonlinear flow equation on the fine grid .",
    "some accurate reduced - order methods have been introduced and used in various applications , such as galerkin multiscale finite elements ( e.g. ,  @xcite ) , mixed multiscale finite element methods ( e.g. ,  @xcite ) , the multiscale finite volume method ( see , e.g. ,  @xcite ) , and mortar multiscale methods ( see e.g. ,  @xcite ) , where mary wheeler and her collaborators have made significant contributions .",
    "the main idea of the these methods is to construct coarse basis functions that approximate the solution on a coarse grid .",
    "multiscale methods can be considered as local model reduction techniques that approximate the solution on a coarse grid for arbitrary coarse- level inputs . in this paper",
    "we apply the enriched coarse space construction from the generalized multiscale finite element method ( gmsfem ) as an effective tool for local model reduction  @xcite .",
    "the combining of the aforementioned local and global model - reduction schemes has been used for linear problem  @xcite .",
    "a significant reduction in the computational complexity when solving linear parabolic pde in  @xcite has been achieved by combining the concepts of ( gmsfem ) and ( pod ) and/or dynamic mode decomposition ( dmd ) . in  @xcite",
    ", balanced truncation is used to perform global model reduction and is efficiently combined with the local model reduction tools introduced in  @xcite .",
    "more recently , local and global multiscale methods are combined to derive reduced - order models for nonlinear flows in high - contrast porous media .",
    "in  @xcite , the proposed multiscale empirical interpolation method for solving nonlinear multiscale pdes uses gmsfem to represent the coarse - scale solution . to avoid performing fine - grid computations , the discrete empirical interpolation method introduced in  @xcite",
    "was used to approximate the nonlinear functions at selected points in each coarse region and then a multiscale proper orthogonal decomposition technique is used to find an appropriate interpolation vector .",
    "although , the numerical results presented in  @xcite proved the applicability of the presented method , the reduction is limited by the full cost of the evaluation of the projected nonlinear function . when dealing with reduced - order models of nonlinear systems obtained by projecting the governing equations onto a subspace spanned by the pod modes , the evaluation of the projected nonlinear term is costly since it depends on the full dimension of the original system .    in this paper ,",
    "our main contribution is to circumvent this issue by employing deim to approximate the nonlinear functions locally ( at selected points in each coarse region ) at the offline stage and globally ( at selected points in the domain ) at the online stage . for this reason",
    ", we refer to our method as global - local nonlinear approach .",
    "the numerical results presented in this paper show that the proposed method enables significant reduction in the computational cost associated with constructing projection - based reduced - order models .",
    "in addition to the model reduction , the proposed approach allows us to improve the reduced - order solutions in different ways .",
    "for instance , increasing the number of local and global points used at the offline and online stages , respectively , leads to better approximation ( see example  [ ex2 ] ) .",
    "also , using several offline parameter inputs ( example  [ ex3 ] ) improves the reduced - order solutions .",
    "the remainder of the paper is organized as follows . in section  [ sec : preliminaries ]",
    "we introduce and describe the model problem , the discrete empirical interpolation method , and generalized multiscale finite element method .",
    "the presented global - local deim approach is then discussed in section  [ sec : globallocal ] .",
    "numerical results are presented in section  [ sec : num ] and conclusions in  [ sec : conc ] .",
    "we consider a time - dependent nonlinear flow governed by the following parabolic partial differential equation @xmath0 with some boundary conditions .",
    "the variable @xmath1 denotes the pressure , @xmath2 is a bounded domain , @xmath3 is a forcing term , and in our case the permeability field represented by @xmath4 is a nonlinear function . here , @xmath5 is the time derivative and @xmath6 represents a parameter .",
    "we approximate with the discrete empirical interpolation method ( deim )  @xcite local and global nonlinear functions .",
    "deim is based on approximating a nonlinear function by means of an interpolatory projection of a few selected snapshots of the function .",
    "the idea is to represent a function over the domain while using empirical snapshots and information in some locations ( or components ) .",
    "we briefly review deim as presented in  @xcite .",
    "let @xmath7 denotes a nonlinear function where @xmath8 . here",
    ", in general , @xmath9 can be different from @xmath10 . in a reduced - order modeling",
    ", @xmath11 has a reduced representation @xmath12 where @xmath13 .",
    "this leads us to look for an approximation of @xmath14 at a reduced cost . to perform a reduced order approximation of @xmath14 , we first define a reduced dimensional space for @xmath14 .",
    "that is , we would like to find @xmath15 basis vectors ( where @xmath15 is much smaller than @xmath10 ) , @xmath16 , ... , @xmath17 , such that we can write @xmath18 where @xmath19 .",
    "the goal of deim is to find @xmath20 using only a few rows of  . in general",
    ", one can define @xmath20 s using @xmath15 rows of   and invert a reduced system to compute @xmath20 . this can be formalized using the matrix @xmath21 @xmath22 \\in \\mathbb{r}^{n\\times    m},\\ ] ] where @xmath23^t\\in \\mathbb{r}^{n}$ ] is the @xmath24 column of the identity matrix @xmath25 for @xmath26 .",
    "multiplying equation   by @xmath27 and assuming that the matrix @xmath28 is nonsingular , we obtain @xmath29    to summarize , approximating the nonlinear function @xmath30 , as given by equation  , requires the following :    * computing the projection basis @xmath31 ; * identifying the indices @xmath32    to determine the projection basis @xmath33 , we collect function evaluations in an @xmath34 matrix @xmath35 $ ] and employ pod to select the most energetic modes .",
    "this selection uses the eigenvalue decomposition of the square matrix @xmath36 ( left singular values ) and form the important modes using the dominant eigenvalues .",
    "these modes are used as the projection basis in the approximation given by equation  . in equation  ,",
    "the term @xmath37 is computed once and stored .",
    "the @xmath20 is computed using the values of the function @xmath14 at @xmath15 points with the indices @xmath38 identified using the following deim algorithm .",
    "+    r l deim & algorithm  @xcite : +     + * input * : & the projection basis matrix @xmath39 obtained by applying pod on a sequence + & of @xmath9 function evaluations . + * output * : & the interpolation indices @xmath40 +   + & 1 : set @xmath41 = \\max\\{|\\psi_1|\\}$ ] + & 2 : set @xmath42 $ ] , @xmath43 $ ] , and @xmath44 + & 3 : for @xmath45 do + &  - solve @xmath46 for some @xmath47 . + &  - compute @xmath48 + &  - compute @xmath49 = \\max\\{|r|\\}$ ] + &  - set @xmath50 $ ] , @xmath51 $ ] , and @xmath52 + &  end for +   +     +   + the computational saving is due to the resulting fewer evaluations of @xmath14 .",
    "this shows the advantage of using deim algorithm in our proposed reduction method .",
    "however , applying the deim algorithm to reduce the computational cost of the nonlinear function requires additional computations in the offline stage , which will be discussed in section  [ sec : gl ] .",
    "note that these algorithms are successful if the nonlinear functions admit low dimensional approximations .",
    "below we summarize the offline / online computational procedure in the following steps :    * offline computations : * * 1.0 .",
    "generation coarse grid . * * 1.1 .",
    "construction of snapshot space used to compute the offline space . * * 1.2 .",
    "construction of a low dimensional space by performing dimension reduction in the space of local snapshots . * online computations : * * 2.1 . for each input parameter set , compute multiscale basis functions . * * 2.2 .",
    "solution of a coarse - grid problem for given forcing term and boundary conditions .    in the offline computation , we first construct a snapshot space @xmath53 .",
    "constructing the snapshot space may involve solving various local problems for different choices of input parameters or different fine - grid representations of the solution in each coarse region .",
    "we denote each snapshot vector ( listing the solution at each node in the domain ) using a single index and create the following matrix @xmath54,\\ ] ] where @xmath55 denotes the snapshots and @xmath56 denotes the total number of functions to keep in the local snapshot matrix construction .    in order to construct an offline space @xmath57 , we reduce the dimension of the snapshot space using an auxiliary spectral decomposition .",
    "the main objective is to use the offline space to efficiently ( and accurately ) construct a set of multiscale basis functions to be used in the online stage .",
    "more precisely , we build a snapshot subspace that can approximate with sufficient accuracy any element of the original snapshot space .",
    "the quality of the approximation is determined in the sense defined via auxiliary bilinear forms . at the offline stage ,",
    "the bilinear forms are chosen to be _",
    "parameter - independent _ ( through nonlinearity ) , such that there is no need to reconstruct the offline space for each @xmath58 value , where @xmath58 is assumed to be a parameter that represents @xmath59 and @xmath60 in @xmath61 . to construct the offline space",
    ", we use the average of the parameters over the coarse region @xmath62 in @xmath63 while keeping the spatial variations .",
    "that is , @xmath58 represents both the average of @xmath59 and @xmath6 .",
    "we consider the following eigenvalue problem in the space of snapshots , @xmath64 where @xmath65 =    \\int_{\\omega_i } \\overline{\\kappa}(x , \\nu ) \\nabla",
    "\\phi_m^{\\text{snap } }    \\cdot \\nabla \\phi_n^{\\text{snap } } = \\phi_{\\text{snap}}^t \\overline{a } \\phi_{\\text{snap}},\\\\    \\displaystyle s^{\\text{off } } & = [ s^{\\text{off}}_{mn } ] =    \\int_{\\omega_i } \\overline{\\widetilde{\\kappa}}(x , \\nu )    \\phi_m^{\\text{snap } } \\phi_n^{\\text{snap } } = \\phi_{\\text{snap}}^t    \\overline{s } \\phi_{\\text{snap}}.   \\end{aligned}\\ ] ] the coefficients @xmath66 and @xmath67 are parameter - averaged coefficients ( see  @xcite ) .",
    "the @xmath68 denotes a fine - scale matrix , except that parameter - averaged coefficients are used in its construction .",
    "the fine - scale stiffness matrix @xmath69 is constructed by integrating only on @xmath62 @xmath70 = \\int_{\\omega_i } \\kappa(x , u , \\mu )     \\nabla \\phi_m^{\\text{snap } } \\cdot \\nabla \\phi_n^{\\text{snap}}.     \\label{eq : a }   \\end{aligned}\\ ] ] to generate the offline space , we then choose the smallest @xmath71 eigenvalues from equation   and form the corresponding eigenvectors in the respective space of snapshots by setting @xmath72 ( for @xmath73 ) , where @xmath74 are the coordinates of the vector @xmath75 .",
    "we then create the offline matrices @xmath76\\ ] ] to be used in the online space construction .",
    "the online coarse space is used within the finite element framework to solve the original global problem , where continuous galerkin multiscale basis functions are used to compute the global solution .",
    "in particular , we seek a subspace of the respective offline space such that it can approximate well any element of the offline space in an appropriate metric . at the online stage ,",
    "the bilinear forms are chosen to be _",
    "parameter dependent_. the following eigenvalue problems are posed in the reduced offline space : @xmath77 where @xmath78 =    \\int_{\\omega_i } \\kappa(x , \\nu ) \\nabla \\phi_m^{\\text{off } } \\cdot    \\nabla \\phi_n^{\\text{off } } = \\phi_{\\text{off}}^t a(\\nu )    \\phi_{\\text{off}},\\ ] ]    @xmath79 =    \\int_{\\omega_i } \\widetilde{\\kappa}(x , \\nu )   \\phi_m^{\\text{off } }     \\phi_n^{\\text{off } } = \\phi_{\\text{off}}^t s(\\nu )    \\phi_{\\text{off}},}\\ ] ]    and @xmath80 and @xmath81 are now parameter dependent . to generate the online space",
    ", we then choose the smallest @xmath82 eigenvalues from and form the corresponding eigenvectors in the offline space by setting @xmath83 ( for @xmath84 ) , where @xmath85 are the coordinates of the vector @xmath86 .",
    "if @xmath87 , then one can use the parameter - independent case of gmsfem . in this case , there is no need to construct an online space ( i.e. , the online space is the same as the offline space ) . from now on ,",
    "we denote the online space basis functions by @xmath88 .",
    "the finite element discretization of   yields a system of ordinary differential equations given by @xmath89 where @xmath90 is the vector collecting the pressure values at all nodes in the local domain and @xmath91 is the right - hand - side vector obtained by discretization . using the offline basis functions ,",
    "we can write ( in discrete form ) @xmath92 this results in @xmath93 where we have @xmath94&=\\int_\\omega \\kappa_q \\nabla \\phi^0_i    \\cdot \\nabla \\phi^0_j , \\;\\;\\ ; \\mbox{m}:=[\\mbox{m}_{ij}]=\\int_\\omega    \\phi^0_i \\phi^0_j\\ ; ,    \\;\\;\\ ;",
    "\\mbox{h}:=[\\mbox{h}_{i}]=\\int_\\omega   \\phi^0_i h \\ ; , \\\\",
    "\\lambda_1^q(\\mbox{u},\\mu ) & = \\mbox{diag}\\left (                 \\begin{array}{cccc }                   b_q(u_1,\\mu ) & b_q(u_2,\\mu ) & \\cdots &                   b_q(u_{n_f},\\mu ) \\\\                 \\end{array }               \\right),\\end{aligned}\\ ] ] and @xmath95 are piecewise linear basis functions defined on a fine triangulation of @xmath2 .",
    "employing the backward euler scheme for the time marching process , we obtain @xmath96 where @xmath97 is the time - step size and the superscript @xmath10 refers to the temporal level of the solution .",
    "the residue is defined as : @xmath98 with derivative ( jacobian ) @xmath99 where @xmath100 and @xmath101 is the multi - variate gradient operator defined as @xmath102_{ij}=\\partial { r}_i/\\partial { u}_j$ ] .",
    "the scheme involves , at each time step , the following iterations @xmath103 where the initial guess is @xmath104 and @xmath105 is the iteration counter .",
    "the above iterations are repeatedly applied until @xmath106 is less than a specific tolerance .    in our simulations",
    ", we use @xmath107 in   as our focus is on localized multiscale interpolation of nonlinear functionals that arise in discretization of multiscale pdes . with this choice , we do not need to compute the online multiscale space ( i.e. , the online space is the same as the offline space ) .",
    "we use the solution expansion ( i.e. , @xmath108 ) and employ the multiscale framework to obtain a set of @xmath109 ordinary differential equations that constitute a reduced - order model ; that is , @xmath110 thus , the original problem with @xmath111 degrees of freedom is reduced to a dynamical system with @xmath109 dimensions where @xmath112 .",
    "the nonlinear term @xmath113 in the reduced - order model , given by equation ( [ rom11 ] ) , has a computational complexity that depends on the dimension of the full system @xmath111 .",
    "as such , solving the reduced system still requires extensive computational resources and time . to reduce this computational requirement , we use multiscale deim as described in the previous section . to solve the reduced system",
    ", we employ the backward euler scheme ; that is , @xmath114 where @xmath115 , @xmath116 , and @xmath117 .",
    "we let @xmath118 with derivative @xmath119 the scheme involves , at each time step , the following iterations @xmath120 where the initial guess is @xmath121 .",
    "the above iterations are repeated until @xmath122 is less than a specific tolerance .",
    "furthermore , we use multiscale deim to approximate the nonlinear functions that appear in the residual @xmath123 and the jacobian @xmath124 to reduce the number of function evaluations .      we denote the offline parameters by @xmath125 which include samples of the right - hand side @xmath126 denoted by @xmath127 , samples of @xmath6 denoted by @xmath128 , and samples of initial conditions denoted by @xmath129 . similarly , the online parameter set is denoted by @xmath130 and includes the online source term @xmath131 , the online @xmath6 ( @xmath132 ) , and the online initial conditions @xmath133 .",
    "we follow a global - local nonlinear model reduction approach that includes the following steps :    * * offline stage * + the offline stage includes the following steps : * * consider the offline parameters set @xmath134 . * * use @xmath135 to define the fine - scale stiffness and mass matrices , source terms and multiscale basis functions . * * compute the local snapshots of the nonlinear functions and use deim algorithm , as described in the previous section , to set the local deim basis functions and local deim points ( @xmath136 ) . * * generate snapshots of the coarse - grid solutions using local deim . * * record @xmath137 instantaneous solutions ( usually referred as snapshots ) using coarse - grid approximations from the above step and collect them in a snapshot matrix as : @xmath138 where @xmath137 is the number of snapshots and @xmath109 is the size of the column vectors @xmath139 . * * compute the pod modes and use these modes to approximate the solution field on the coarse grid .",
    "as such , we assume an expansion in terms of the modes @xmath140 ; that is , we let @xmath141 or in a matrix form @xmath142 where @xmath143 . * * online stage * + the online stage includes the following steps : * * given online @xmath144 * * use the solution expansion given by   and project the governing equation of the coarse - scale problem onto the space formed by the modes to obtain a set of @xmath145 ordinary differential equations that constitute a reduced - order model ; that is , @xmath146 * * employ newton s method to solve the above reduced system .",
    "the newton scheme involves at each time step the following iteration .",
    "we need to solve the linear system @xmath147 where @xmath148 then @xmath149 thus , the original problem with @xmath111 degrees of freedom is reduced to a dynamical system with @xmath145 dimensions where @xmath150 .",
    "* * use global deim to approximate the nonlinear functions that appear in the residual and jacobian . to do so",
    ", we write the nonlinear function @xmath151 in equation   as @xmath152 where @xmath153 $ ] is the matrix of the global deim basis functions @xmath154 .",
    "these functions are constructed using the snapshots of the nonlinear function @xmath155 computed offline and employ the pod technique to select the most energetic modes ( see section  [ sec : deim ] ) .",
    "the coefficient vector @xmath156 is computed using the values of the function @xmath157 at @xmath158 global points .",
    "* * use the solution expansion given by   in terms of pod modes to approximate the coarse - scale solution and then use the operator matrix @xmath159 to downscale the approximate solution and evaluate the flow field on the fine grid .",
    "in this section , we use representative numerical examples to illustrate the applicability of the proposed global - local nonlinear model reduction approach for solving nonlinear multiscale partial differential equations . before presenting the individual examples",
    ", we describe the computational domain used in constructing the gmsfem basis functions .",
    "this computation is performed during the offline stage .",
    "we discretize with linear finite elements a nonlinear pde posed on the computational domain @xmath160\\times[0,1]$ ] . for constructing the coarse grid , we divide @xmath161\\times[0,1]$ ] into @xmath162 squares .",
    "each square is divided further into @xmath163 squares each of which is divided into two triangles .",
    "thus , the mesh size is @xmath164 for the fine mesh and @xmath165 for the coarse one .",
    "the fine - scale finite element vectors introduced in this section are defined on this fine grid .",
    "the fine - grid representation of a coarse - scale vector @xmath166 is given by @xmath167 , which is a fine - grid vector .    in the following numerical examples , we consider   with specified boundary and initial conditions , where the permeability coefficient and the forcing term are given by    @xmath168  and  @xmath169 .    here , @xmath170 represents the permeability field with high - conductivity channels as shown in figure  [ perm1 ] and @xmath171 is defined later for each example .",
    "we use the gmsfem along with the newton method to discretize  .",
    "furthermore , we employ the local multiscale deim in the offline stage and the global multiscale deim in the online stage to approximate the nonlinear functions that arise in the residual and the jacobian .",
    "permeability field that model high conductivity channels within a homogeneous domain .",
    "the minimum ( background ) conductivity is taken to be @xmath172 , and the high conductivity ( gray regions ) with value of @xmath173,scaledwidth=47.0% ]    using the fine - scale stiffness matrix @xmath174 that corresponds to  , as defined in  , we introduce the relative energy error as @xmath175 moreover , we define @xmath176 to be the solution of the problem @xmath177 to use it in the following examples as our initial guess . in the following ,",
    "we show :    * in the first example , we compare the approximate solution of the reduced system obtained by applying the global - local approach against the solution of the original system with full dimension ( @xmath111 ) and show the reduction we achieve in terms of the computational cost . * in the second example , we show the variations of the error as we increase the number of local deim points , @xmath136 , and global deim points , @xmath178 for one selection of the parameter @xmath6 . * in the third example , we show the effect of using several offline parameters to improve the reduced - order solutions . as such ,",
    "we use two offline values of the parameter @xmath6 and solve an online problem for a different value of @xmath6 . * in the fourth example , we use two offline values of @xmath6 and show the variations of the errors as we increase the number of local and global points .",
    "* random values of the parameter @xmath6 with a probability distribution are used in the fifth example .",
    "we demonstrate the applicability of our approach in this setup .",
    "[ ex1 ] we consider   along with the following offline and online parameters @xmath179 + @xmath180 where the nonlinear function @xmath181 is defined as @xmath182 . here",
    ", the source term does not need to be fixed for the method to work as we see below .",
    "we employ gmsfem for the spatial discretization and the backward euler method for time advancing as described in section [ sec : newton ] .",
    "furthermore , we follow the steps given in section [ sec : gl ] using three deim points ( @xmath183 ) per coarse region to approximate @xmath181 in the offline stage . after generating the snapshots of the coarse - grid solutions using local deim , we compute the multiscale pod modes that are used in the online problem .",
    "we use @xmath184 in the online stage to approximate @xmath181 globally and then use the generated pod modes to approximate the coarse - scale solution . in figure",
    "[ sol ] , we compare the approximate solution obtained from the global - local nonlinear model reduction approach with the solution of the original system without using the deim technique to approximate the nonlinear function . a good approximation is observed in this figure , which demonstrates the capability of global - local nonlinear model reduction to reproduce accurately the fully resolved solution of a nonlinear pde .",
    "we have also considered a permeability field that is obtained by rotating the permeability field @xmath170 in figure  [ perm1 ] such that the three long channels are in the vertical direction .",
    "our numerical results show similar accuracy and computational cost compared to the previous case ( see figure  [ perm1 ] ) . in general , we expect non - homogeneous boundary conditions to affect the numerical results .",
    "the approximate solution shown in figure  [ approxsol ] is obtained using only two pod modes . as expected , increasing the number of pod modes used in the online stage yields a better approximation .",
    "that is , the error decreases as we increase the number of pod modes used as shown in figure  [ pod ] .",
    "the error using two pod modes decreases slightly from @xmath185 ( at steady state ) to @xmath186 when using three pod modes .",
    "the decreasing trend is steeper when considering more pod modes .",
    "for instance , the use of @xmath187 modes yields an error of @xmath188 .",
    "variations of the solution error with the number of pod modes.,scaledwidth=47.0% ]    in order to illustrate the computational savings , we compute the time for solving the system of ordinary differential equations given in   with and without using the proposed method .",
    "we denote the time for solving the full system by @xmath189 and the time for solving the reduced system using global - local nonlinear model reduction by @xmath190 .",
    "then , the percentage of the simulation time is given by @xmath191 we compute @xmath192 with respect to different number of deim points and pod modes and present the results in tables  [ tabl1a ] and  [ tabl1b ] , respectively .",
    "in table  [ tabl1a ] , the first column shows the number of local deim points ( @xmath136 ) , the second column represents the number of global deim points ( @xmath178 ) , and the third column illustrates the percentage of the simulation time . here",
    "two pod modes are used . as @xmath136 and/or @xmath178 increase ,",
    "the percentage decreases accordingly . for example",
    ", @xmath192 decreases from @xmath193 to @xmath194 by increasing @xmath178 from two to three , and to @xmath195 by increasing both @xmath136 and @xmath178 from two to three .",
    "decreasing @xmath192 means that @xmath190 , time for solving the reduced system , decreases as we increase the number of deim points .",
    "therefore , increasing the number of local and global deim points may speed up the simulation in addition to improving the accuracy as we see in the next example . in table",
    "[ tabl1b ] , the numbers of pod modes used for the global reduction are listed in the first column and the corresponding values of @xmath192 are shown in the second column . in this case",
    ", we keep the number of local and global deim points constant and equal to two and three , respectively .",
    "now , increasing the number of pod modes inversely affects the simulation speed - up . that is , increasing the number of pod modes increases the value of @xmath192 which means @xmath190 is increasing and hence the speed - up of our simulation is decreasing .",
    "for example , @xmath192 increases from @xmath194 when we use two pod modes to @xmath196 with three pod modes and keeps increasing as we increase the number of pod modes to be @xmath197 with five pod modes .",
    "although , increasing the number of pod modes slows down the simulation , it improves the accuracy of the approximate solution ( see figure  [ pod ] ) .",
    "however , the following examples show the capability in terms of the accuracy of this method when using two pod modes for the global reduction .    .",
    "variation of the percentage of the simulation time corresponding to different number of local and global deim points .",
    "here we use two pod modes . [ cols=\"^,^,^\",options=\"header \" , ]     [ ex2 ] in this example , we use different numbers of local and global deim points , @xmath198 and @xmath199 , to investigate how these numbers affect the error . as in example",
    "[ ex1 ] , we consider @xmath200 and the following offline and online parameters : @xmath179 + @xmath201    in figure [ 2a ] , we plot the transient variations of the error while using different numbers of global deim points for a fixed number of local deim points equal to one . increasing the number of global deim points from one to three results in a decrease in the error from @xmath202 to @xmath203 ( at steady state )",
    ". further increases in the number of global deim points does not yield any improvement in the total error .",
    "this is due to the dominance of the local error .",
    "figure [ 2b ] shows the decreasing trend of the error as we increase the number of local deim points . in figure",
    "[ 2c ] , we show the variations of the error with increasing the number of both local and global deim points . increasing",
    "the number of deim points enables smaller error and then improves the solution accuracy .",
    "these examples show that the number of local and global deim points need to be chosen carefully to balance the local and global errors .",
    "+      [ ex3 ] in this example , we define the nonlinear function as @xmath204 and use @xmath205 and @xmath206 , separately , in the offline problem to compute pod modes and deim points .",
    "we then combine these to use the total number of pod modes in the online problem with a different online value of @xmath6 ( @xmath207 ) . in this example",
    "we keep the number of local and global deim points constant and equal to three ( i.e. , @xmath208 ) .",
    "furthermore , we use different online initial conditions and source term .",
    "the following system parameters are considered .",
    "@xmath209 + @xmath210    transient variations of the error ( using different offline values of the parameter @xmath6).,title=\"fig:\",scaledwidth=47.0%][21 ]    we show in figure [ diffmu1 ] that the error decreases when combining two cases that correspond to different values of offline @xmath6 .",
    "for instance , the error when considering only one offline case is about @xmath211 and it goes down to @xmath202 when combining two cases with two different values of offline @xmath6 . hence , using multiple parameter values in the offline stage improves the method s accuracy independently of the online parameters .    [ ex4 ] next , we consider the following parameters @xmath212 + @xmath213    and the nonlinear function @xmath214 . in this case , we use two offline values of @xmath6 while considering different numbers of local and global deim points .",
    "the effect of the number of local and global deim points on the error between the reference and approximate solutions when combining two cases that correspond to two different values of @xmath6 is shown in figure [ ex3a ] .",
    "similar trends to those of example [ ex2 ] are observed .",
    "increasing both local and global deim points improves the approximation to the solution .",
    "for instance , the error reduces from about @xmath202 when using a local and a global deim point to @xmath215 when using three local and global deim points . the error reduction in this case ( when we use two offline @xmath6 ) is bigger than the one we obtained when only using one offline @xmath6 value where the error decreased from @xmath202 to @xmath216 ( see figure [ 2c ] ) .",
    "we conclude that using two offline @xmath6 values and increasing number of local and global deim points yields a better approximation .",
    "therefore , choosing the number of local and global deim points and the offline parameter values are the main factors to achieve high accuracy in the proposed method .",
    "[ ex5 ]    in this example we consider the case with random values of the parameter @xmath6 that has a normal distribution with the mean @xmath217 and variance @xmath218 . as in example",
    "[ ex3 ] , we use different values of the offline parameter @xmath219 , and compute the pod and deim modes .",
    "further , we combine these modes to get the global pod and deim modes that we use in the online problem . in the online problem , we take uncorrelated random values of @xmath132 drawn from the above probability distribution .",
    "we rapidly compute the approximate solution and evaluate the relative error corresponding to each value of @xmath132 . comparing",
    "the mean solutions of the fully - resolved model and the reduced model demonstrates the capability of the proposed method when random values of the parameter is employed in the nonlinear functional .",
    "furthermore , we observe a good accuracy as shown from the error plotting in figure [ meanerror ] .",
    "mean error of approximating the solution by using global - local multiscale approach with random values of the online parameter @xmath6.,scaledwidth=47.0% ]",
    "in this work , we present a global - local nonlinear model reduction approach to reduce the computational cost for solving high - contrast nonlinear parabolic pdes .",
    "this is achieved through two main stages ; offline and online . in the offline step ,",
    "we use the generalized multiscale finite element method ( gmsfem ) to represent the coarse - grid solutions through applying the local discrete empirical interpolation method ( deim ) to approximate the nonlinear functions that arise in the residual and jacobian . using the snapshots of the coarse - grid solutions",
    ", we compute the proper orthogonal decomposition ( pod ) modes . in the online step ,",
    "we project the governing equation on the space spanned by the pod modes and use the global deim to approximate the nonlinear functions .",
    "although one can perform global model reduction independently of gmsfem , the computations of the global modes can be very expensive .",
    "combining both local and global mode reduction methods along with applying deim to inexpensively compute the nonlinear function can allow a substantial speed - up .",
    "we demonstrate the effectiveness of the proposed global - local nonlinear model reduction method on several examples of nonlinear multiscale pdes that are solved using a fully - implicit time marching schemes .",
    "the results show the great potential of the proposed approach to reproduce the flow field with good accuracy while reducing significantly the size of the original problem . increasing the number of the local and global modes to improve the accuracy of the approximate solution",
    "is examined .",
    "furthermore , the robustness of proposed model reduction approach with respect to variations in initial conditions , permeability fields , nonlinear - function s parameters , and forcing terms is demonstrated .",
    "aarnes , j. ( 2004 ) . on the use of a mixed multiscale finite element method for greater flexibility and increased speed or improved accuracy in reservoir simulation . , 2:421439 .",
    "deane , a.  e. , kevrekidis , i.  g. , karniadakis , g.  e. , and orszag , s.  a. ( 1991 ) .",
    "low - dimensional models for complex geometry flows : application to grooved channels and circular cylinder . , 3(10):23372354 ."
  ],
  "abstract_text": [
    "<S> in this paper , we combine discrete empirical interpolation techniques , global mode decomposition methods , and local multiscale methods , such as the generalized multiscale finite element method ( gmsfem ) , to reduce the computational complexity associated with nonlinear flows in highly - heterogeneous porous media . to solve the nonlinear governing equations </S>",
    "<S> , we employ the gmsfem to represent the solution on a coarse grid with multiscale basis functions and apply proper orthogonal decomposition on a coarse grid . </S>",
    "<S> computing the gmsfem solution involves calculating the residual and the jacobian on the fine grid . as such , we use local and global empirical interpolation concepts to circumvent performing these computations on the fine grid . </S>",
    "<S> the resulting reduced - order approach enables a significant reduction in the flow problem size while accurately capturing the behavior of fully - resolved solutions . </S>",
    "<S> we consider several numerical examples of nonlinear multiscale partial differential equations that are numerically integrated using fully- implicit time marching schemes to demonstrate the capability of the proposed model reduction approach to speed up simulations of nonlinear flows in high - contrast porous media .    </S>",
    "<S> generalized multiscale finite element method , nonlinear pdes , heterogeneous porous media , discrete empirical interpolation , proper orthogonal decomposition . </S>"
  ]
}
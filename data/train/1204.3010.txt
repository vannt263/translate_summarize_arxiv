{
  "article_text": [
    "the topological and dynamical aspects of complex networks have been the focus of intensive research during the last years @xcite .",
    "an open and unsolved problem in network and computer science is the following question : how to cover a network with the fewest possible number of boxes of a given size @xcite ? in a complex network , a box size can be defined in terms of the chemical distance , @xmath1 , which corresponds to the number of edges on the shortest path between two nodes .",
    "this means that every node is less than @xmath1 edges away from another node in the same box .",
    "here we use the burning approach for the box covering problem @xcite , thus the boxes are defined for a central node or edge . instead of calculating the distance between every pair of nodes in a box , the maximal distance to the central node or edge @xmath2",
    "this distance can then be related to the size of the box @xmath3 for a central node and @xmath4 for a central edge .",
    "the maximal chemical distance within a box of a given size @xmath5 is @xmath6 for a central node and @xmath7 for a central edge .",
    "although this problem can be simply stated , its solution is known to be np - hard @xcite .",
    "it can be also mapped to a graph coloring problem in computer science @xcite and has important applications , e.g. , the calculation of fractal dimensions of complex networks @xcite or the identification of the most influential spreaders in networks @xcite . here",
    "we introduce an efficient algorithm for fractal networks which is capable to determine the minimum number of boxes for a given parameter @xmath1 or @xmath2 .",
    "moreover , we compare it for two benchmark networks with a standard algorithm used to approximately obtain the minimal number of boxes . in principle , the optimal solution should be identified by testing exhaustively all possible solutions . nevertheless , for practical purposes , this approach is unfeasible , since the solution space with its @xmath8 solutions is too large .",
    "present algorithms like maximum - excluded - mass - burning @xcite and merging algorithms @xcite are based on the sequential addition of the box with the highest score , e.g. , the score is proportional to the number of covered nodes , and the boxes with the highest score are sequentially included .",
    "other algorithms are based on simulated annealing @xcite , but without the guarantee of finding the optimal solution .",
    "even greedy algorithms end up with a similar number of boxes as the algorithms mentioned before @xcite .",
    "the greedy algorithm sequentially includes a node to a present box , if all other nodes in this box are within the chemical distance @xmath1 and if there is no such box , a new box with the new node is created .",
    "it is therefore believed that the results are close to the optimal result , although the real optimal solution is unknown .",
    "+ this paper is organized as follows . in section",
    "ii , we introduce the algorithm and then explain the main difference between the present state of the art algorithm and our optimal algorithm for a given distance @xmath2 . in section iii , results for two benchmark networks are presented and the improvement in performance of our algorithm is quantitatively shown . finally , in section iv , we present conclusions and perspectives for future work .",
    "we use two slightly different algorithms for the calculation of the optimal box covering solution , one for odd values of @xmath1 and another for even values @xmath1 . to get the results for an odd value ,",
    "the following rules are applied : +    1 .   create all possible boxes : for every node @xmath9 create a box @xmath10 containing all nodes that are at most @xmath11 edges away .",
    "node @xmath9 is called center of the box . an example is shown in fig . [ fig:1]a .",
    "2 .   remove unnecessary boxes : search and remove all boxes @xmath10 which are fully contained in another box @xmath12 ( see fig . [",
    "fig:1]b ) .",
    "3 .   remove unnecessary nodes : for every node @xmath9 , check all the boxes containing @xmath9 : @xmath13 .",
    "if another node @xmath14 is contained in all of these boxes , remove it from _ all _ boxes ( see fig .",
    "[ fig:1]c ) .",
    "4 .   remove pairs of unnecessary twin boxes : find two nodes @xmath15 which are both in exactly two boxes of size two : @xmath16 , @xmath17 and @xmath18 , @xmath19 . if @xmath20 and @xmath21 , then @xmath22 and @xmath23 can be removed . if @xmath24 and @xmath25 , then @xmath22 and @xmath26 can be removed .",
    "an example for this rule is shown in fig .",
    "[ fig:5 ] .",
    "note that such twin boxes also appear for @xmath27 due to the removal of unnecessary nodes .",
    "search for boxes that must be contained in the solution : add all boxes @xmath10 to the solution , which have a node @xmath9 only present in this box .",
    "remove all nodes @xmath14 covered by @xmath10 from other boxes .",
    "iterate a : repeat 2 - 5 until there is no node which is covered by a single box and is not part of the solution .",
    "system split : identify if the remaining network can be divided into subnetworks , such that all boxes in a subnetwork contain only nodes of this subnetwork .",
    "then these subnetworks can be processed independent from each other .",
    "system split : find the node which is in the smallest number of boxes @xmath28 , each of these boxes covers another set of nodes @xmath10 .",
    "if there is more than one node fulfilling this criterion , chose the node which is covered by the largest boxes .",
    "then the algorithm is divided into @xmath28 sub - algorithms , which can be independently calculated in parallel . by removing from each of the @xmath28 sub - algorithm another set of nodes @xmath10 ,",
    "all possible solutions are considered .",
    "an example for the splitting is shown in fig .",
    "[ fig:6 ] .",
    "since we want to identify only one optimal solution , we do not need to calculate the results of all sub - algorithms .",
    "as soon as one of the sub - algorithms identifies an optimal solution , we can skip the calculation of the others . furthermore , the calculation of a sub - algorithm can be skipped , if the minimal number of required additional boxes reaches the number of the , so far , best solution of a parallel sub - algorithm .",
    "iterate b : repeat 2 - 8 until no nodes are uncovered .",
    "identify the best solution : chose the solution with the lowest number of boxes .",
    "this solution is optimal for a given @xmath2 .",
    "+    to get the results for an even value of @xmath1 the first step is slightly different :    1 .   create all possible boxes : for every _ edge _ @xmath9 create a box @xmath10 containing all nodes that are at most @xmath29 _ nodes _ away .",
    "_ edge _ @xmath9 is called center of the box .",
    "all other steps are the same as for the odd case .",
    "note that the calculation for odd values scales with the number of nodes of the network @xmath30 and with the number of edges @xmath31 for even values .",
    "instead of sequentially including boxes , the idea of our algorithm is to remove all non - optimal boxes from the solution space ending up with a final , optimal solution . to reduce the huge solution space ,",
    "our box covering algorithm uses two basic ingredients : 1 ) unnecessary boxes from the solution space are discarded and the boxes which definitively belong to the solution are kept .",
    "2 ) unnecessary nodes from the network are discarded .",
    "these two steps reduce the solution space of a wide range of network types significantly , specially if they are applied in alternation as the removal of a box can lead to the removal of nodes and other boxes and vice - versa .",
    "nevertheless these two steps do not necessarily lead to the optimal solution , thus the solution space has to be split into several possible sub - solution spaces . in each of these sub - solutions",
    "the first two steps are repeated .",
    "note that the splitting does not reduce the number of possible solutions , thus only the first two steps reduce the solution space and in the worst case , the algorithm must calculate the entire solution space .",
    "in any case , for many complex networks iterating these three steps significantly reduces the solution space to a few solutions from which the optimal box covering can be obtained .",
    "+ the remaining question is how to judge whether a box or node is necessary or unnecessary . on the one hand",
    "a box is unnecessary if all nodes of a box are also part of another box .",
    "this box can be removed , because the other box covers at least the same nodes and often additional nodes . on the other hand",
    "a box is necessary if a node is exclusively covered by this single box .",
    "this box has to belong to the solution , since only if the box is part of the solution , the node is covered .",
    "+ in contrast , nodes can easily be identified as unnecessary .",
    "for example all nodes of a box , which is part of the solution , can be removed from all other boxes , since they are already covered .",
    "additionally , if a node shares all boxes with another node , the other node can be removed , since the second node is always covered , if the first node is covered .",
    "these few rules are in principle sufficient to get the optimal solution , since our algorithm starts with _ all _ @xmath8 or @xmath32 ( for central edges ) possible solutions and discards unnecessary and includes necessary boxes .",
    "+ although we only calculate results for undirected , unweighted networks , the algorithm can easily be extended to directed and weighted networks . in both cases",
    "only the initial step , the creation of boxes , is different . for directed networks",
    ", the box around a central node contains all nodes which are reachable with respect to the direction , while for weighted networks , the distance is the sum of the edge weights between the nodes .",
    "+    next we show that our algorithm can also identify optimal solutions for large networks .",
    "therefore , we have applied it to two different benchmark networks , namely the _ e. coli _ network @xcite , with 2859 proteins and 6890 interactions between them , and the www network @xcite .",
    "we compare the results for the minimal box number @xmath33 of our algorithm for different values of box sizes @xmath1 with the results of the greedy graph coloring algorithm * ? ? ?",
    "* , as displayed in fig .",
    "[ fig : cellular ] .",
    "while the absolute improvement is rather small , the relative improvement is up to @xmath34 larger for @xmath35 .",
    "if the network is fractal , it should obey the relation , @xmath36 where @xmath37 is the fractal dimension .",
    "interestingly , it seems that the fractal dimension @xmath38 from the greedy algorithm and @xmath39 from our optimal algorithm of the network is nearly unaffected by the choice of the algorithm . note that for @xmath40 , due to the fact that the boxes are calculated based on the definition of a central node or edge , we have one more box .",
    "the simplest case where such difference occurs is in a chain of four connecting nodes ( 1 - 2 , 2 - 3 , 3 - 4 , 4 - 1 ) .",
    "all nodes have the chemical distances of two to each other ( @xmath41 ) , however it is not possible to draw a box around a node with radius one ( @xmath42 ) , which contains all nodes .",
    "+    the second example is the www network , containing 325729 nodes and 1090108 edges .",
    "as in the previous case , our algorithm outperforms the state of the art algorithm , but yields similar fractal behavior , as shown in fig .",
    "[ fig : www ] . for intermediate box sizes",
    "@xmath43 , we have a large improvement since up to @xmath0 and up to @xmath44 fewer boxes are needed .",
    "for @xmath45 we have two box more , like in the _ e. coli _ network case due to the two definitions of the box covering problem , while for larger @xmath1 both algorithm give similar results .",
    "interestingly , it seems that the improvement for even distances @xmath1 ( for central edges ) is significantly larger than for odd distances @xmath1 ( for central nodes ) .",
    "[ fig : www1 ] we show the influence of the sequence of adding nodes to the boxes on the results of the greedy algorithm . while the results of fig .",
    "[ fig : www ] are the minimal values obtained from 50 independent starting sequences , we calculated 1500 realizations for a single box size @xmath46 .",
    "the difference between the improvement is with @xmath47 and @xmath48 rather small .",
    "the gap between the optimal solution and the greedy algorithm is too large , thus for practical purposes , the greedy algorithm will never find the optimal solution for this box size .",
    "+ the results for these two benchmark networks demonstrate that our algorithm is more effective than the state of the art algorithms .",
    "nevertheless , due to the rapid decay of the number of boxes for larger box sizes , the fractal dimension of the two benchmark networks is only slightly different when using the optimal box - covering algorithm in comparison with other algorithms .",
    "in closing , we have presented a box - covering algorithm , which outperforms the known previous ones .",
    "we have also compared our algorithm with the state of the art methods for different benchmark networks and detected substantial improvements .",
    "moreover the obtained solutions are optimal as a result of the algorithm design , if the box size is defined as the maximal distance @xmath2 to the central node or edge .",
    "for example , our approach can be useful for designing optimal commercial distribution networks , where the shops are the nodes , the storage facilities the box centers and the radius is related to the boundary conditions , like transportation cost or time .",
    "we acknowledge financial support from the eth competence center coping with crises in complex socio - economic systems ( ccss ) through eth research grant ch1 - 01 - 08 - 2 and by the swiss national science foundation under contract 200021 126853 .",
    "we also thank the brazilian agencies cnpq , capes , funcap and the inst - sc for financial support .",
    "18 d. watts and s. strogatz , _ nature ( london)_*393 * 440 ( 1998 ) .",
    "r. albert , h. jeong and a .-",
    "barabsi , _ nature _ * 401 * 130 ( 1999 ) . m. bartheemy and l. a. n. amaral , _ phys .",
    "rev . lett._*82 * 5180 ( 1999 ) .",
    "a.l . lloyd and r.m .",
    "may , _ science _ * 292 * , 1316 - 1317 ( 2001 ) .",
    "r. cohen , s. havlin , and d. ben - avraham , _ phys .",
    "rev . lett._*91 * 247901 ( 2003 ) .",
    "m. barthelemy , a. barrat , r. pastor - satorras , and a. vespignani , _ phys .",
    "lett . _ * 92 * , 178701 ( 2004 ) .",
    "gonzlez , p.g .",
    "lind , h.j .",
    "herrmann , _ phys .",
    "rev . lett._*96 * 088702 ( 2006 ) .",
    "l.k . gallos , c. song , s. havlin , h.a .",
    "makse , _ proc .",
    "acad . sci._*104 * 7746 ( 2007 ) .",
    "moreira , j.s .",
    "andrade jr . , h.j . herrmann and j.o .",
    "indekeu , _ phys .",
    "rev . lett._*102 * 018701 ( 2009 ) .",
    "h. hooyberghs , b. van schaeybroeck , a.a .",
    "moreira , j.s .",
    "andrade jr . , h.j . herrmann and j.o .",
    "indekeu , _ phys .",
    "rev . e_*81 * 011102 ( 2010 ) .",
    "g. li , s.d.s .",
    "reis , a.a .",
    "moreira , s. havlin , h.e .",
    "stanley and j.s .",
    "andrade jr . , _ phys .",
    "rev . lett._*104 * 018701 ( 2010 ) . h.j .",
    "herrmann , c.m .",
    "schneider , a.a .",
    "moreira , j.s .",
    "andrade jr . and",
    "s. havlin , _ j. stat .",
    "* p01027 * ( 2011 ) .",
    "schneider , a.a .",
    "moreira , j.s .",
    "andrade jr .",
    ", s. havlin and h.j .",
    "herrmann , _ proc .",
    "acad . sci._*108 * 3838 ( 2011 ) .",
    "schneider , t. mihaljev , s. havlin , h.j .",
    "herrmann , _ phys .",
    "rev . e_*84 * 061911 ( 2011 ) .",
    "a. vespignani , _ nature physics_*8 * 32 ( 2012 ) .",
    "peitgen , h. jrgens and d. saupe , chaos and fractals : new frontiers of science ( springer)(1993 ) .",
    "j. feder , fractals ( plenum press ) ( 1988 ) .",
    "a. bunde and s. havlin ( eds . ) , fractals in science ( berlin : springer - verlag ) ( 1995 ) .",
    "jensen and b. toft ( eds . ) , graph coloring problems ( new york : wiley - interscience ) ( 1995 ) t.h .",
    "cormen , c.e .",
    "leiserson , r.l .",
    "rivest and c. stein , introduction to algorithms ( mit press ) ( 2001 ) .",
    "c. song , s. havlin and h.a .",
    "makse , _ nature _ * 433 * 392 - 395 ( 2005 ) .",
    "c. song , l.k .",
    "gallos , s. havlin and h.a .",
    "makse , _ j. stat .",
    "mech . _ * 03006 * ( 2007 ) .",
    "garey and d.s .",
    "johnson , computers and intractability ; a guide to the theory of np - completeness ( new york : w.h .",
    "freeman ) ( 1979 ) s.h .",
    "yook , f. radicchi and h. meyer - ortmanns,_phys .",
    "e _ * 72 * 045105 ( 2005 ) .",
    "g. palla , i. dernyi , i. farkas and t. vicsek _ nature _ * 435 * 814 ( 2005 ) .",
    "zhao , h.j .",
    "yang and b. wang , _ phys .",
    "rev . e_*72 * 046119 ( 2005 ) .",
    "c. song , s. havlin and h.a .",
    "makse , _ nature physics _ * 2 * 275 - 281 ( 2006 ) .",
    "goh , g. salvi , b. kahng and d. kim , _ phys .",
    "lett . _ * 96 * 018701 ( 2006 ) .",
    "a.a . moreira , d.r .",
    "paula , r.n .",
    "costa filho and j.s .",
    "andrade jr . , _ phys .",
    "e _ * 73 * 065101 ( 2006 ) .",
    "m. kitsak , l. k. gallos , s. havlin , f. liljeros , l. muchnik , h. e. stanley , h.a .",
    "makse , _ nature physics _",
    "* 6 * 888 - 893 ( 2010 ) .",
    "m. locci , g. concas , r. tonelli and i. turna , _ wseas trans .",
    "_ * 7 * 371 - 380 ( 2010 ) .",
    "zhou , z.q .",
    "jiang and d. sornette , _ physica a _ * 375 * 741 - 752 ( 2007 ) . http://lev.ccny.cuny.edu/@xmath49hmakse/methods/methods.html ."
  ],
  "abstract_text": [
    "<S> the self - similarity of complex networks is typically investigated through computational algorithms the primary task of which is to cover the structure with a minimal number of boxes . here </S>",
    "<S> we introduce a box - covering algorithm that not only outperforms previous ones , but also finds optimal solutions . </S>",
    "<S> for the two benchmark cases tested , namely , the _ e. coli _ and the www networks , our results show that the improvement can be rather substantial , reaching up to @xmath0 in the case of the www network . </S>"
  ]
}
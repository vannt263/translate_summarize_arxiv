{
  "article_text": [
    "series , measurements of some quantity taken over time , are measured and analyzed across the scientific disciplines , including human heart beats in medicine , cosmic rays in astrophysics , rates of inflation in economics , air temperatures in climate science , and sets of ordinary differential equations in mathematics .",
    "the problem of extracting useful information from time series has similarly been treated in a variety of ways , including an analysis of the distribution , correlation structures , measures of entropy or complexity , stationarity estimates , fits to various linear and nonlinear time - series models , and quantities derived from the physical nonlinear time - series analysis literature . however , this broad range of scientific methods for understanding the properties and dynamics of time series has received less attention in the temporal data mining literature , which treats large databases of time series , typically with the aim of either clustering or classifying the data @xcite . instead",
    ", the problem of time - series clustering and classification has conventionally been addressed by defining a distance metric between time series that involves comparing the sequential values directly . using an extensive database of algorithms for measuring thousands of different time - series properties ( developed in previous work @xcite ) , here",
    "we show that general feature - based representations of time series can be used to tackle classification problems in time - series data mining .",
    "the approach is clearly important for many applications across the quantitative sciences where unprecedented amounts of data are being generated and stored , and also for applications in industry ( e.g. , classifying anomalies on a production line ) , finance ( e.g. , characterizing share price fluctuations ) , business ( e.g. , detecting fraudulent credit card transactions ) , surveillance ( e.g. , analyzing various sensor recordings ) , and medicine ( e.g. , diagnosing heart beat recordings ) .",
    "two main challenges of time - series classification are typically : ( i ) selecting an appropriate _ representation _ of the time series , and ( ii ) selecting a suitable measure of dissimilarity or _ distance _ between time series @xcite . the literature on representations and distance measures for time - series clustering and classification is extensive @xcite .",
    "perhaps the most straightforward representation of a time series is its time - domain form , then distances between time series relate to differences between the time - ordered measurements themselves .",
    "when short time series encode meaningful patterns that need to be compared , new time series can be classified by matching them to similar instances of time series with a known classification .",
    "this type of problem has traditionally been the focus of the time series data mining community @xcite , and we refer to this approach as _ instance - based _ classification . an alternative approach involves representing time series using a set of derived properties , or features , and thereby transforming the temporal problem to a static one @xcite .",
    "a very simple example involves representing a time series using just its mean and variance , thereby transforming time - series objects of any length into short vectors that encapsulate these two properties .",
    "here we introduce an automated method for producing such _ feature - based _ representations of time series using a large database of time - series features .",
    "we note that not all methods fit neatly into these two categories of instance - based and feature - based classification .",
    "for example , time - series shapelets @xcite classify new time series according to the minimum distance of particular time - series subsequences ( or ` shapelets ' ) to that time series .",
    "although this method uses distances calculated in the time - domain as a basis for classification ( not features ) , new time series do not need to be compared to a large number of training instances ( as in instance - based classification ) . in this paper",
    "we focus on a comparison between instance - based classification and our feature - based classifiers .",
    "feature - based representations of time series are used across science , but are typically applied to longer time series corresponding to streams of data ( such as extended medical or speech recordings ) rather than the short pattern - like time series typically studied in temporal data mining . nevertheless , some feature - based representations of shorter time series have been explored previously : for example , nanopoulos et al . used the mean , standard deviation , skewness , and kurtosis of the time series and its successive increments to represent and classify control chart patterns @xcite , mrchen used features derived from wavelet and fourier transforms of a range of time - series datasets to classify them @xcite , wang et al .",
    "introduced a set of thirteen features that contains measures of trend , seasonality , periodicity , serial correlation , skewness , kurtosis , chaos , nonlinearity , and self - similarity to represent time series @xcite , an approach that has since been extended to multivariate time series @xcite , and deng et al .",
    "used measures of mean , spread , and trend in local time - series intervals to classify different types of time series @xcite .",
    "as with the choice of representations and distance metrics for time series , features for time - series classification problems are usually selected manually by a researcher for a given dataset .",
    "however , it is not obvious that the features selected by a given researcher will be the best features with which to distinguish the known data classes  perhaps simpler alternatives exist with better classification performance ?",
    "furthermore , for many applications , the mechanisms underlying the data are not well understood , making it difficult to develop a well - motivated set of features for classification .    in this work ,",
    "we automate the selection of features for time - series classification by computing thousands of features from across the scientific time - series analysis literature and then selecting those with the best performance .",
    "the classifier is thus selected according to the structure of the data rather than the methodological preference of the researcher , with different features selected for different types of problems : e.g. , we might discover that the variance of time series distinguishes classes for one type of problem , but their entropy may be important for another .",
    "the process is completely data - driven and does not require any knowledge of the dynamical mechanisms underlying the time series or how they were measured .",
    "we describe our method as ` highly comparative ' @xcite and draw an analogy to the dna microarray , which compares large numbers of gene expression profiles simultaneously to determine those genes that are most predictive of a target condition ; here , we compare thousands of features to determine those that are most suited to a given time - series classification task . as well as producing useful classifiers , the features selected in this way highlight the types of properties that are informative of the class structure in the dataset and hence can provide new understanding .",
    "central to our approach is the ability to represent time series using a large and diverse set of their measured properties . in this section ,",
    "we describe how this representation is constructed and how it forms a basis for classification . in sec .",
    "[ sec : dm_data ] , the datasets analyzed in this work are introduced .",
    "the feature - vector representation of time series is then discussed in sec .",
    "[ sec : dm_feature_vector ] , and the methodology used to perform feature selection and classification is described in sec .  [",
    "sec : dm_feature_selection ] .",
    "the twenty datasets analyzed in this work are obtained from _ the ucr time series classification / clustering homepage _ @xcite .",
    "all datasets are of labeled , univariate time series and all time series in each dataset have the same length .",
    "note that this resource has since ( late in 2011 ) been updated to include an additional twenty - five datasets @xcite , which are not analyzed here .",
    "the datasets ( which are listed in tab .",
    "[ tab : cfnresults ] and described in more detail in supplementary table  i ) , span a range of : ( i ) time - series lengths , @xmath0 , from @xmath1 60 for the synthetic control dataset , to @xmath1 637 samples for lightning ( two ) ; ( ii ) dataset sizes , from a number of training ( @xmath2 ) and test ( @xmath3 ) time series of @xmath4 28 and @xmath5 28 for coffee , to @xmath4 1000 and @xmath5 6164 for wafer ; and ( iii ) number of classes , @xmath6 , from @xmath7 2 for gun point , to @xmath7 50 for 50 words .",
    "the datasets are derived from a broad range of systems : including measurements of a vacuum - chamber sensor during the etch process of silicon wafer manufacture ( wafer @xcite ) , spectrograms of different types of lightning strikes ( lightning @xcite ) , the shapes of swedish leaves ( swedish leaf @xcite ) , and yoga poses ( yoga @xcite ) .",
    "all the data is used exactly as obtained from the _ ucr _ source @xcite , without any preprocessing and using the specified partitions of each dataset into training and test portions .",
    "the sensitivity of our results to different such partitions is compared for all datasets in supplementary table ii ; test set classification rates are mostly similar to those for the given partitions .",
    "we present only results for the specified partitions throughout the main text to aid comparison with other studies .",
    "feature - based representations of time series are constructed using an extensive database of over 9000 time - series analysis operations developed in previous work @xcite .",
    "the operations quantify a wide range of time - series properties , including basic statistics of the distribution of time - series values ( e.g. , location , spread , gaussianity , outlier properties ) , linear correlations ( e.g. , autocorrelations , features of the power spectrum ) , stationarity ( e.g. , statav , sliding window measures , prediction errors ) , information theoretic and entropy / complexity measures ( e.g. , auto - mutual information , approximate entropy , lempel - ziv complexity ) , methods from the physical nonlinear time - series analysis literature ( e.g. , correlation dimension , lyapunov exponent estimates , surrogate data analysis ) , linear and nonlinear model fits [ e.g. , goodness of fit estimates and parameter values from autoregressive moving average ( arma ) , gaussian process , and generalized autoregressive conditional heteroskedasticity ( garch ) models ] , and others ( e.g. , wavelet methods , properties of networks derived from time series , etc . )",
    "all of these different types of analysis methods are encoded algorithmically as operations .",
    "each operation , @xmath8 , is an algorithm that takes a time series , @xmath9 , as input , and outputs a single real number , i.e. , @xmath10 .",
    "we refer to the output of an operation as a ` feature ' throughout this work .",
    "all calculations are performed using matlab 2011a ( a product of the mathworks , natick , ma ) .",
    "although we use over 9000 operations , many groups of operations result from using different input parameters to the same type of time - series method ( e.g. , autocorrelations at different time lags ) , making the number of conceptually - distinct operations significantly smaller : approximately 1000 according to one estimate @xcite .",
    "the matlab code for all the operations used in this work can be explored and downloaded at www.comp-engine.org/timeseries .",
    "differences between instance - based time - series classification , where distances are calculated between the ordered values of the time series , and feature - based time - series classification , which learns a classifier using a set of features extracted from the time series , are illustrated in fig .",
    "[ fig : method_illustration ] . although the simplest ` lock step ' distance measure @xcite is depicted in fig .",
    "[ fig : method_illustration]a , more complex choices , such as dynamic time warping ( dtw ) @xcite , can accommodate unaligned patterns in the time series , for example @xcite .",
    "the method proposed here is depicted in fig .",
    "[ fig : method_illustration]b , and involves representing time series as extensive feature vectors , @xmath11 , which can be used as a basis for selecting a reduced number of informative features , @xmath12 , for classification .",
    "although we focus on classification in this work , we note that dimensionality reduction techniques , such as principal components analysis , can be applied to the full feature vector , @xmath11 , which can yield meaningful lower - dimensional representations of time - series datasets that can be used for clustering , as demonstrated in previous work @xcite , and illustrated briefly for the swedish leaf dataset in supplementary fig .  1 .    in some rare cases",
    ", an operation may output a ` special value ' , such as an infinity or imaginary number , or it may not be appropriate to apply it to a given time series , e.g. , when a time series is too short , or when a positive - only distribution is being fit to data that is not positive .",
    "indeed , many of the operations used here were designed to measure complex structure in long time - series recordings , such as the physical nonlinear time - series analysis literature and some information theoretic measures , that require many thousands of points to produce a robust estimate of that feature , rather than the short time - series patterns of 100s of points or less analyzed here . in this work , we filtered out all operations that produced any special values on a dataset prior to performing any analysis . after removing these operations",
    ", between 6220 and 7684 valid operations remained for the datasets studied here .",
    "feature selection is used to select a reduced set of features , @xmath13 , from a large initial set of thousands , @xmath14 , with the aim of producing such a set , @xmath15 , that best contributes to distinguishing a known classification of the time series .",
    "many methods have been developed for performing feature selection @xcite , including the _ lasso _ @xcite and recursive feature elimination @xcite . in this work",
    "we use a simple and interpretable method : greedy forward feature selection , which grows a set of important features incrementally by optimizing the linear classification rate on the training data @xcite . although better performance could be achieved using more complex feature selection and classification methods , we value transparency over sophistication to demonstrate our approach here .",
    "the greedy forward feature selection algorithm is as follows : ( i ) using a given classifier , the classification rates of all individual features , @xmath16 , are calculated and the feature with the highest classification rate is selected as the first feature in the reduced set , @xmath17 .",
    "( ii ) the classification rates of all features in combination with @xmath17 are calculated and the feature that , in combination with @xmath17 , produces a classifier with the highest classification rate is chosen next as @xmath18 .",
    "( iii ) the procedure is repeated , choosing the operation that provides the greatest improvement in classification rate at each iteration until a termination criterion is reached , yielding a reduced set of @xmath19 features : @xmath20 . for iterations at which multiple features produce equally good classification rates , one of them is selected at random .",
    "feature selection is terminated at the point at which the improvement in the training set classification rate upon adding an additional feature drops below 3% , or when the training set misclassification rate drops to 0% ( after which no further improvement is possible ) .",
    "our results are not highly sensitive to setting this threshold at 3% ; this sensitivity is examined in supplementary fig .",
    "3 . to determine the classification rate of each feature ( or combination of features ) , we use a linear discriminant classifier , implemented using the * classify * function from matlab s statistics toolbox , which fits a multivariate normal density to each class using a pooled estimate of covariance . because the linear discriminant is so simple , over - fitting to the training set is not problematic , and we found that using 10-fold cross validation within the training set produced similar overall results .",
    "cross validation can also be difficult to apply to some datasets studied here , which can have as few as a single training example for a given class . for datasets with more than two classes , linear classification boundaries are constructed between all pairs of classes and new time series are classified by evaluating all classification rules and then assigning the new time series to the class with the most ` votes ' from this procedure .",
    "the performance of our linear feature - based classifier is compared to three different instance - based classifiers , which are labeled as : ( i ) ` euclidean 1-nn ' , a 1-nn classifier using the euclidean distance , ( ii ) ` dtw 1-nn ' , a 1-nn classifier using a dynamic time warping distance , and ( iii ) ` dtw 1-nn ( best warping window , @xmath21 ) ' , a 1-nn classifier using a dynamic time warping distance with a warping window learned using the sakoe - chiba band ( cf .",
    "these results were obtained from _ the ucr time series classification / clustering homepage _ @xcite .",
    "results using a 1-nn classifier with euclidean distances were verified by us and were consistent with the ucr source @xcite .",
    "in this section , we demonstrate our highly comparative , feature - based approach to time - series classification . in sec .  [",
    "sec : particular_datasets ] we illustrate the method using selected datasets , in sec .  [ sec : all_results ] we compare the results to instance - based classification methods across all twenty datasets , and in sec .  [ sec : computational_issues ] we discuss the computational complexity of our method .      for some datasets",
    ", we found that the first selected feature ( i.e. , @xmath17 , the feature with the lowest linear misclassification rate on the training data ) distinguished the labeled classes with high accuracy , corresponding to vast dimensionality reduction : from representing time series using all @xmath0 measured points , to just a single extracted feature .",
    "examples are shown in fig .",
    "[ fig:1feat ] for the trace and wafer datasets .",
    "the trace dataset contains four classes of transients relevant to the monitoring and control of industrial processes @xcite .",
    "there are 25 features in our database that can classify the training set without error , one of which is a time - reversal asymmetry statistic , @xmath22 , where @xmath23 is defined as @xmath24 where @xmath25 are the values of the time series , @xmath26 is the time lag ( @xmath27 for this feature ) , and averages , @xmath28 , are performed across the time series @xcite .",
    "this operation with @xmath27 produces distributions for the four classes of the trace dataset as shown in figs .",
    "[ fig:1feat]a and b for the training and test sets , respectively .",
    "simple thresholds on this feature , learned using a linear classifier , allow new time series to be classified by evaluating eq .  .",
    "in this way , the test set of trace is classified with 99% accuracy , producing similar performance as dtw ( which classifies the test set without error ) but using just a single feature , and circumventing the need to compute distances between pairs of time series .",
    "a second example is shown in figs .",
    "[ fig:1feat]c and [ fig:1feat]d for the wafer dataset , which contains measurements of various sensors during the processing of silicon wafers for semiconductor fabrication that are either ` normal ' or ` abnormal ' @xcite . as can be seen from the annotations in figs .",
    "[ fig:1feat]c and [ fig:1feat]d , each class of time series in this dataset is quite heterogenous .",
    "however , the single feature selected for this dataset simply counts the frequency of the pattern ` decrease - increase - decrease - increase ' in successive pairs of samples of a time series , expressed as a proportion of the time - series length .",
    "a simple threshold learned on this feature classifies the test set with an accuracy of 99.98% , slightly higher than the best instance - based result of 99.5% for euclidean 1-nn , but much more efficiently : using a single extracted feature rather than comparing all 152 samples of each time series to find matches in the training set .",
    "feature - based classifiers constructed for most time - series datasets studied here combine multiple features .",
    "an example is shown in fig .",
    "[ fig : syntheticcontrolsupervised ] for the synthetic control dataset , which contains six classes of noisy control chart patterns , each with distinctive dynamical properties : ( i ) ` normal ' ( dark green ) , ( ii ) ` cyclic ' ( orange ) , ( iii ) ` increasing trend ' ( blue ) , ( iv ) ` decreasing trend ' ( pink ) , ( v ) ` upward shift ' ( light green ) , ( vi ) ` downward shift ' ( yellow ) @xcite . in statistical process control , it is important to distinguish these patterns to detect potential problems with an observed process . as shown in fig .",
    "[ fig : syntheticcontrolsupervised]a for greedy forward feature selection , the misclassification rate in both the training and test sets drops sharply when a second feature is added to the classifier , but plateaus as subsequent features are added .",
    "the dataset is plotted in the space of these first two selected features , @xmath29 , in fig .",
    "[ fig : syntheticcontrolsupervised]b .",
    "the first feature , @xmath17 , is named * ph_forcepotential_sine_10_004_10_median * , and is plotted on the horizontal axis of fig .",
    "[ fig : syntheticcontrolsupervised]b .",
    "this feature behaves in a way that is analogous to performing a cumulative sum through time of the @xmath30-scored time series ( the cumulative sum , @xmath31 , is defined as @xmath32 ) , and then returning its median ( i.e. , the median of @xmath31 for @xmath33 ) .",
    "this feature takes high values for time series that have a decreasing trend ( the cumulative sum of the @xmath30-scored time series initially increases and then decreases back to zero ) , moderate values for time series that are approximately mean - stationary ( the cumulative sum of the @xmath30-scored time series oscillates about zero ) , and low values for time series that have an increasing trend ( the cumulative sum of the @xmath30-scored time series initially decreases and then increases back to zero ) . as shown in fig .",
    "[ fig : syntheticcontrolsupervised]b , this feature on its own distinguishes most of the classes well , but confuses the two classes without an underlying trend : the uncorrelated random number series , ` normal ' ( green ) , and the noisy oscillatory time series , ` cyclic ' ( orange ) .",
    "the second selected feature , @xmath18 , named * sp_basic_pgram_hamm_power_q90mel * , is on the vertical axis of fig .",
    "[ fig : syntheticcontrolsupervised]b and measures the mel - frequency at which the cumulative power spectrum ( obtained as a periodogram using a hamming window ) reaches 90% of its maximum value , as @xmath34 . ] .",
    "this feature gives low values to the cyclic time series ( orange ) that have more low - frequency power , and high values to the uncorrelated time series ( dark green ) .",
    "even though this feature alone exhibits poor classification performance ( a misclassification rate of 52.3% on the test data ) , it compensates for the weakness of the first feature , which confuses these two classes .",
    "these two features are selected automatically and thus complement one another in a way that facilitates accurate classification of this dataset .",
    "although dtw is more accurate at classifying this dataset ( cf .",
    "[ fig : syntheticcontrolsupervised]a ) , this example demonstrates how selected features can provide an understanding of how the classifier uses interpretable time - series properties to distinguish the classes of a dataset ( see supplementary fig .  2 for an additional example using the two patterns dataset ) .",
    "furthermore , our results follow dimensionality reduction from 60-sample time series down to two simple extracted features , allowing the classifier to be applied efficiently to massive databases and to very long time series ( cf .",
    "[ sec : computational_issues ] ) .    for many datasets , such as the six - class osu leaf dataset @xcite ,",
    "the classification accuracy is improved by including more than two features , as shown in fig .",
    "[ fig : osuleaf ] .",
    "the classification rates of all three 1-nn instance - based classifiers ( horizontal lines labeled in fig .",
    "[ fig : osuleaf ] ) are exceeded by the linear feature - based classifier with just two features .",
    "the classification performance improves further when more features are added , down to a test set misclassification rate of just 9% with eleven features ( the test set classification rate plateaus as more features are added while the training set classification rate slowly improves , indicating a modest level of over - fitting beyond this point ) .",
    "the improvement in training - set misclassification rate from adding an additional feature drops below 3% after selecting five features , yielding a test set misclassification rate of 16.5% ( shown boxed in fig .",
    "[ fig : osuleaf ] ) , outperforming all instance - based classifiers by a large margin despite dimensionality reduction from 427-sample time series to five extracted features .      having",
    "provided some intuition for our method using specific datasets as examples , we now present results for all twenty time - series datasets from _ the ucr time series classification / clustering homepage _ ( as of mid-2011 ) @xcite . for these datasets of short patterns",
    "whose values through time can be used as the basis of computing a meaningful measure of distance between them , dtw has been shown to set a high benchmark for classification performance @xcite . however , as shown above , it is possible for feature - based classifiers to outperform instance - based classifiers despite orders of magnitude of dimensionality reduction .",
    "results for all datasets are shown in table  [ tab : cfnresults ] , including test set misclassification rates for three instance - based classifiers and for our linear feature - based classifier .",
    "the final two columns of table  [ tab : cfnresults ] demonstrate extensive dimensionality reduction using features for all datasets , using an average of @xmath35 3.2 features to represent time series containing an average of @xmath36 282.1 samples . a direct comparison of 1-nn dtw with our linear feature - based classifier",
    "is shown in fig .",
    "[ fig : compare_performance ] for all datasets .",
    "both methods yield broadly similar classification results for most datasets , but some datasets exhibit large improvements in classification rate using one method over the other .",
    "note that results showing the variation across different training / test partitions ( retaining training / test proportions ) are shown in supplementary table  ii for euclidean 1-nn and our linear feature - based classifier ; results are mostly similar as shown here for fixed partitions . across all datasets ,",
    "a wide range of time - series features were selected for classification , including measures of autocorrelation and automutual information , motifs in symbolized versions of time series , spectral properties , entropies , measures of stationarity , outlier properties , scaling behavior , and others .",
    "names of all features selected for each dataset , along with their matlab code names , are provided in supplementary table  iii .    [ cols=\"^,^,^,^,^,^,^ \" , ]     [ tab : cfnresults ]    as with all approaches to classification ,",
    "a feature - based approach is better suited to some datasets than others @xcite .",
    "indeed , we found that feature - based classifiers outperform instance - based alternatives on a number of datasets , and sometimes by a large margin .",
    "for example , in the ecg dataset , the feature - based classifier yields a test set misclassification rate of 1.0% using just a single extracted feature , whereas the best instance - based classifiers ( euclidean 1-nn and dtw 1-nn using the best warping window ) have a misclassification rate of 12.0% . in the coffee dataset , the test set is classified without error using a single extracted feature , whereas the best instance - based classifiers ( both using dtw ) have a misclassification rate of 17.9% . in other cases , instance - based approaches ( including even the straightforward euclidean 1-nn classifier ) performed better .",
    "for example , the 50 words dataset has a large number of classes ( fifty ) and a large heterogeneity in training set size ( from as low as 1 to 52 training examples in a given class ) , for which matching to a nearest neighbor using instance - based methods outperforms the linear feature - based classifier .",
    "the face ( four ) dataset also has relatively few , quite heterogenous , and class - unbalanced training examples , making it difficult to select features that best capture the class differences ; instance - based methods also outperform our feature - based approach on this dataset . the ability of dtw to adapt on a pairwise basis to match each test time series to a similar training time series can be particularly powerful mechanism for some datasets , and is unavailable to a static , feature - based classifier , which does not have access to the training data once the classifier has been trained .",
    "this mechanism is seen to be particularly important for the lightning ( seven ) dataset , which contains heterogenous classes with unaligned patterns  dtw performs well here ( misclassification rate of 27.2% ) , while 1-nn euclidean distance and feature - based classifiers perform worse , with misclassification rates exceeding 40% .",
    "our feature - based classifiers are trained to optimize the classification rate in the training set , and thus assume similar class proportions in the test set , which is often not the case ; by simply matching instances of time series to the training set , discrepancies between class ratios in training and test sets are less problematic for instance - based classification .",
    "this may be a contributing factor to the poor performance of feature - based classification for the 50 words , lightning ( seven ) , face ( four ) and face ( all ) datasets .",
    "a feature - based representation also struggles when only a small number of heterogenous training examples are available , as with the 50 words , lightning ( seven ) , and cbf datasets . in this case",
    "it can be difficult to select features that represent differences within a class as ` the same ' , and simultaneously capture differences between classes as ` different ' .",
    "although we demonstrate improved performance on the adiac dataset , with a misclassification rate of 35.5% , this remains high .",
    "we note that the properties of this dataset provide multiple challenges for our method , that may also contribute to its difficulty with instance - based approaches , including a small number and large variation in the number of examples in the training set ( between 5 and 15 examples per class ) , a negative correlation between training set size and test set size ( where our method assumes the same class proportions in the test set ) , and a large number of classes ( 37 ) , which are relatively heterogenous within a given class , and visually quite similar between classes .    despite some of the challenges of feature - based classification ,",
    "representing time series using extracted features brings additional benefits , including vast dimensionality reduction and , perhaps most importantly , interpretable insights into the differences between the labeled classes ( as demonstrated in sec .",
    "[ sec : particular_datasets ] ) .",
    "this ability to learn about the properties and mechanisms underlying class differences in the time series in some sense corresponds to the ` ultimate goal of knowledge discovery ' @xcite , and provides a strong motivation for pursuing a feature - based representation of time - series datasets where appropriate .      in this section , the computational effort required to classify time series using extracted features",
    "is compared to that of instance - based approaches . calculating the euclidean distance between two time series",
    "has a time complexity of @xmath37 , where @xmath0 is the length of each time series ( which must be constant ) .",
    "the distance calculation for dynamic time warping ( dtw ) has a time complexity of @xmath38 in general , or @xmath39 using a warping window , where @xmath40 is the warping window size @xcite . classifying a new time series using a 1-nn classifier and sequential search ( i.e. , sequentially calculating distances between a new time series and all time series in the training set ) therefore has a time complexity of @xmath41 for euclidean distances and either @xmath42 or @xmath43 for dtw , where @xmath2 is the number of time series in the training set @xcite . although the amortized time complexity of the distance calculation can be improved using lower bounds @xcite , and",
    "speedups can be obtained using indexing @xcite or time - domain dimensionality reduction @xcite , the need to calculate many distances between pairs of time series is fundamental to instance - based classification , such that scaling with the time - series length , @xmath0 , and the size of the training set , @xmath2 , is inevitable .",
    "while the use of shapelets @xcite addresses some of these issues , here we avoid comparisons in the time domain completely and instead classify time series using a static representation in terms of extracted features .",
    "time - domain classification can therefore become computationally prohibitive for long time series and/or very large datasets .",
    "in contrast to instance - based classifiers , the bulk of the computational burden for our feature - based method is associated with learning a classification rule on the training data , which involves the computation of thousands of features for each training time series , which can be lengthy . however , this is a one - off computational cost : once the classifier has been trained , new time series are classified quickly and independent of the training data . for most cases in this work ,",
    "selected features correspond to simple algorithms with a time complexity that scales linearly with the time series length , as @xmath37 .",
    "the classification of a new time series then involves simply computing @xmath44 features , and then evaluating the linear classification rule . hence , if all features have time complexities that scale as @xmath37 , the total time complexity of classifying a new time series scales as @xmath45 if the features are calculated serially ( we note , of course , that calculating each of the @xmath44 features can be trivially distributed ) .",
    "this result is independent of the size of the training dataset and , importantly , the classification process does not require any training data to be loaded into memory , which can be a major limitation for instance - based classification of large datasets .",
    "having outlined the computational steps involved in feature - based classification , we now describe the actual time taken to perform classification using specific examples .",
    "first we show that even though the methods used in this work were applied to relatively short time series ( of lengths between 60 and 637 samples ) , they are also applicable to time series that are orders of magnitude longer ( indeed many operations are tailored to capturing complex dynamics in long time - series recordings ) . for example , the features selected for the trace and wafer datasets shown in fig .",
    "[ fig:1feat ] were applied to time series of different lengths , as plotted in fig .",
    "[ fig : timescaling ] .",
    "note that the following is for demonstration purposes only : these algorithms were implemented directly in matlab and run on a normal desktop pc with no attempt to optimize performance .",
    "the figure shows that both of these operations have a time complexity that scales approximately linearly with the time - series length , as @xmath37 .",
    "feature - based classification is evidently applicable to time series that are many orders of magnitude longer than short time - series patterns ( as demonstrated in previous work @xcite)in this case a 100000-sample time series is converted to a single feature : either @xmath22 , or the decrease - increase - decrease - increase motif frequency , in under 5ms . note that although simple @xmath37 operations tended to be selected for many of the datasets studied in this work , other more sophisticated operations ( those based on nonlinear model fits , for example ) have computational time complexities that scale nonlinearly with the time - series length , @xmath0 .",
    "the time complexity of any particular classifier thus depends on the features selected in general ( however , in future computational constraints could be placed on the set of features searched across , e.g. , restricting the search to features that scaled linearly as @xmath37 , as discussed in sec  [ sec : discussion ] ) .",
    "next we outline the sequence of calculations involved in classifying the wafer dataset as a case study .",
    "we emphasize that in this paper , we are not concerned with optimizing the one - off cost of training a classifier and simply calculated the full set of 9288 features on each training dataset , despite high levels of redundancy in this set of features @xcite and the inclusion of thousands of nonlinear methods designed for long streams of time - series data . in future , calculating a reduced set ( of say 50 features ) could reduce the training computation times reported here by orders of magnitude .",
    "the calculation of this full set of 9288 features on a ( 152-sample ) time series from the wafer dataset took an average of approximately 31s . performing these calculations serially for this very large training set with @xmath4 1000 , this amounts to a total calculation time of 8.6 hours .",
    "this is the longest training time of any dataset studied here due to a large number of training examples ; other datasets had as few as 24 training examples , with a total training time under 15min .",
    "furthermore , all calculations are independent of one another and can be trivially distributed ; for example , with as many nodes as training time series , the total computation is the same as for a single time series , @xmath4630s in this case ( or , furthermore , with as many nodes as time series / operation pairs , the total computation time is equal to that of the slowest single operation operating on any single time series , reducing the computation time further ) . for the wafer dataset ,",
    "feature selection took 6s , which produced a ( training set ) misclassification rate of 0% and terminated the feature selection process .",
    "although just a single feature was selected here , more features are selected in general , which take @xmath46 610s per feature to select .",
    "it then took a total of 32.5s to load all 6164 test time series into memory , a total of 0.1s to calculate the selected feature and evaluate the linear classification rule on all time series on a basic desktop pc . the result",
    "classified 6163 of the 6164 , or 99.98% , of the test time series correctly .",
    "in summary , the bulk of the computational burden of our highly comparative feature - based classification involves the calculation of thousands of features on the training data ( which could be heavily optimized in future work ) .",
    "although instance - based methods match new time series to training instances and do not require such computational effort to train , the investment involved in training a feature - based classification rule allows new time series to be classified rapidly and independent of the training data .",
    "the classification of a new time series simply involves extracting feature(s ) and evaluating a linear classification rule , which is very fast ( @xmath47 3@xmath4810@xmath49s per time series for the wafer example above ) , and limited by the loading of data into memory ( @xmath47 5@xmath4810@xmath50s per time series for the wafer dataset ) . in general , calculation times will depend on the time - series length , @xmath0 , the number of features selected during the feature selection process , @xmath44 , and the computational time complexity of those selected features .",
    "performing feature - based classification in this way is thus suited to applications that value fast , real - time classification of new time series and can accommodate the relatively lengthy training process ( or where sufficient distributed computational power is available to speed up the training process ) .",
    "there are clear applications to industry , where measured time series need to be checked in real time on a production line , for quality control , or the rapid classification of large quantities of medical samples , for example .",
    "in summary , we have introduced a highly comparative method for learning feature - based classifiers for time series .",
    "our main contributions are as follows : + ( i ) previous attempts at feature - based time - series classification in the data mining literature have reported small sets of ( @xmath4610 or fewer ) manually selected or generic time - series features . here , for the first time , we apply a diverse set of thousands of time - series features and introduce a method that compares across these features to construct feature - based classifiers automatically .",
    "+ ( ii ) features selected for the datasets studied here included measures of outlier properties , entropy measures , local motif frequencies , and autocorrelation - based statistics .",
    "these features provide interpretable insights into the properties of time series that differ between labeled classes of a dataset .",
    "+ ( iii ) of the twenty ucr time - series datasets studied here , feature - based classifiers used an average of 3.2 features compared to an average time - series length of 282.1 samples , representing two orders of magnitude of dimensionality reduction .",
    "+ ( iv ) despite dramatic dimensionality reduction and an inability to compare and match similar patterns through time , our feature - based representations of time series produced good classification performance that was in many cases superior to dtw , and in some cases by a large margin .",
    "+ ( v ) unlike instance - based classification , the training of a feature - based classifier incurs a significant computational expense .",
    "however , this one - off cost allows new time series to be classified extremely rapidly and independent of the training set .",
    "furthermore , there is much scope for optimizing this training cost in future by exploiting redundancy in our massive feature set .    to introduce the highly comparative approach ,",
    "we have favored the interpretability of feature selection and classification methods over their sophistication .",
    "feature selection was achieved using greedy forward selection , and classification was done using linear discriminant classifiers .",
    "many more sophisticated feature selection @xcite and classification @xcite methods exist ( e.g. , that allow for more robust and/or nonlinear classification boundaries ) and should improve the classification results presented here .",
    "this flexibility to incorporate a large and growing literature of sophisticated classifiers operating on feature vectors , including decision trees and support vector machines or even @xmath51-nn applied in a feature space , is a key benefit of our approach @xcite .",
    "considering combinations of features that are not necessarily the result of a greedy selection process ( e.g. , classifiers that combine features with poor individual performance have been shown to be very powerful on some datasets @xcite ) , should also improve classification performance .",
    "however , we note that complex classifiers may be prone to over - fitting the training data and thus may require cross - validation on the training data to reduce the in - sample bias . however , cross - validation is problematic for some of the datasets examined here that have small numbers of training examples ( as low as just a single training example for a class in the 50 words dataset ) .",
    "we used the total classification rate as a cost function for greedy forward feature selection to aid comparison to other studies , even though many datasets have unequal numbers of time series in each class and different class proportions in the training and test sets , thus focusing the performance of classifiers towards those classes containing the greatest number of time series . in future ,",
    "more subtle cost functions could be investigated , that optimize the mean classification rate across classes , for example , rather than the total number of correct classifications . in summary ,",
    "the simple classification and feature selection methods used here were chosen to demonstrate our approach as clearly as possible and produce easily - interpretable results ; more sophisticated methods could be investigated in future to optimize classification accuracies for real applications . because we used thousands of features developed across many different scientific disciplines ,",
    "many sets of features are highly correlated to one another @xcite .",
    "greedy forward feature selection chooses features incrementally based on their ability to increase classification performance , so if a feature is selected at the first iteration , a highly correlated feature is unlikely to increase the classification rate further .",
    "thus , the non - independence of features does not affect our ability to build successful feature - based classifiers in this way .",
    "however , strong dependencies between operations can mean that features selected using different partitions of the data into training and testing portions can be different ( or even for the same partition when two or more features yield the same classification rate and are selected at random ) . for homogenous datasets ,",
    "features that differ for different data partitions are typically slight variants of one another ; for example , the second feature selected for the synthetic control dataset ( cf .",
    "[ sec : particular_datasets ] ) is a summary of the power spectrum for some partitions and an autocorrelation - based measure for others  both features measure aspects of the linear correlation present in the time series and thus contribute a similar understanding of the time series properties that are important for classification .",
    "the selection of either feature yields similar performance on the unseen data partition .",
    "we also note that this redundancy in the feature set could be exploited in future to produce a powerful reduced set of approximately independent , computationally inexpensive , and interpretable features with which to learn feature - based classifiers for time series .",
    "future work could also focus on adding new types of features found to be useful for time - series classification ( or comparing them to our implementation of existing methods , cf .",
    "@xcite ) , as our ability to construct useful feature - based time - series classifiers is limited by those features contained in our library of features , which is currently comprehensive but far from exhaustive .",
    "together , these refinements of the feature set could dramatically speed up the computation times reported here , improve the interpretability of selected features , and increase classification performance .",
    "many features in our database are designed for long , stationary streams of recorded data and yet here we apply them to short and often non - stationary time series . for example , estimating the correlation dimension of a time - delay embedded time series requires extremely long and precise recordings of a system @xcite . although the output of a correlation dimension estimate on a 60-sample time series will not be a robust nor meaningful estimate of the correlation dimension , it is nevertheless the result of an algorithm operating on a time series and may still contain some useful information about its structure .",
    "regardless of the conventional meaning of a time - series analysis method therefore , our approach judges features according to their demonstrated usefulness in classifying a dataset .",
    "appropriate care must therefore be taken in the interpretation of features should they prove to be useful for classifying a given dataset . although feature - based and instance - based approaches to time - series classification have been presented as opposing methodologies here , future work could link them together . for example , batista et al .",
    "@xcite used a simple new feature claimed to resemble ` complexity ' , to rescale conventional euclidean distances calculated between time series , demonstrating an improvement in classification accuracy .",
    "rather than using this specific , manually - selected feature , our highly comparative approach could be used to find informative but computationally inexpensive features to optimally rescale traditional euclidean distances .",
    "in 1993 , timmer et al .",
    "@xcite wrote : `` the crucial problem is not the classificator function ( linear or nonlinear ) , but the selection of well - discriminating features .",
    "in addition , the features should contribute to an understanding [ ... ] . '' in this work , we applied an unprecedented diversity of scientific time - series analysis methods to a set of classification problems in the temporal data mining literature and showed that successful classifiers can be produced in a way that contributes an understanding of the differences in properties between the labeled classes of time series .",
    "although the datasets studied here are well suited to instance - based classification , we showed that a highly comparative method for constructing feature - based representations of time series can yield competitive classifiers despite vast dimensionality reduction .",
    "relevant features and classification rules are learned automatically from the labeled structure in the dataset , without requiring any domain knowledge about how the data were generated or measured , allowing classifiers to adapt to the data , rather than attempting to develop classifiers that work ` best ' on generic datasets .",
    "although the computation of thousands of features can be intensive ( if not distributed ) , once the features have been selected and the classification rule has been learned , the classification of new time series is rapid and can outperform instance - based classification .",
    "the approach can be applied straightforwardly to time series of variable length , and to time series that are many orders of magnitude longer than those studied here .",
    "perhaps most importantly , the results provide an understanding of the key differences in properties between different classes of time series , insights that can guide further scientific investigation .",
    "the code for generating the features used in this work is freely available at http://www.comp - engine.org / timeseries/.",
    "the authors would like to thank sumeet agarwal for helpful feedback on the manuscript .",
    "b.  d. fulcher , m.  a. little , and n.  s. jones , `` highly comparative time - series analysis : the empirical structure of time series and their methods , '' _ j. roy .",
    "soc . interface _ ,",
    "10 , no .",
    "83 , p. 20130048",
    ", 2013 .",
    "x.  wang , a.  mueen , h.  ding , g.  trajcevski , p.  scheuermann , and e.  keogh , `` experimental comparison of representation methods and distance measures for time series data , '' _ data min .",
    "_ , 2012 .",
    "l.  ye and e.  keogh , `` time series shapelets : a new primitive for data mining , '' in _ proc .",
    "15th acm sigkdd intl conf . knowledge discovery and data mining_.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 2009 , pp . 947956 .",
    "a.  nanopoulos , r.  alcock , and y.  manolopoulos , _ information processing and technology_.1em plus 0.5em minus 0.4emcommack , ny , usa : nova science publishers , inc . , 2001 , ch .",
    "feature - based classification of time - series data , pp . 4961 .",
    "x.  wang , a.  wirth , and l.  wang , `` structure - based statistical features and multivariate time series clustering , '' in _",
    "ieee intl conf .",
    "data mining_.1em plus 0.5em minus 0.4emieee computer society , 2007 , pp .",
    "351360 .",
    "d.  eads , d.  hill , s.  davis , s.  perkins , j.  ma , r.  porter , and j.  theiler , `` genetic algorithms and support vector machines for time series classification , '' in _ applications and science of neural networks , fuzzy systems , and evolutionary computation v _ , b.  bosacchi , d.  b. fogel , and j.  c. bezdek , eds .",
    "4787 , seattle , wa , usa , 2002 , pp .",
    "7485 .",
    "l.  wei and e.  keogh , `` semi - supervised time series classification , '' in _ proc . of the 12th acm sigkdd intl conf .",
    "knowledge discovery and data mining _ , vol .",
    "20 , no .  23 , new york , ny , usa , 2006 , pp . 748753",
    ".          i.  guyon , c.  aliferis , and a.  elisseeff , _ computational methods of feature selection data mining and knowledge discovery series_.1em plus 0.5em minus 0.4emboca raton , london , new york : chapman and hall / crc , 2007 , ch .",
    "causal feature selection , pp .",
    "6385 .",
    "d.  roverso , `` multivariate temporal classification by windowed wavelet decomposition and recurrent neural networks , '' in _",
    "3rd ans intl topical meeting on nuclear plant instrumentation , control and human - machine interface _ , vol .  20 , washington , dc , usa , 2000 .          x.  xi , e.  keogh , c.  shelton , l.  wei , and c.  a. ratanamahatana , `` fast time series classification using numerosity reduction , '' in _ proc .",
    "23rd intl conf .",
    "machine learning_.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 2006 , pp .",
    "10331040 .",
    "t.  rakthanmanon , b.  campana , a.  mueen , g.  batista , b.  westover , q.  zhu , j.  zakaria , and e.  keogh , `` searching and mining trillions of time series subsequences under dynamic time warping , '' in _ proc .",
    "18th acm sigkdd intl conf .",
    "knowledge discovery and data mining _ , ser .",
    "kdd 12.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 2012 , pp . 262270 .",
    "h.  ding , g.  trajcevski , p.  scheuermann , x.  wang , and e.  keogh , `` querying and mining of time series data : experimental comparison of representations and distance measures , '' _ proc .",
    "vldb endowment _ , 2008 .",
    "j.  shieh and e.  keogh , `` @xmath52sax : indexing and mining terabyte sized time series , '' in _ proc .",
    "14th acm sigkdd intl conf . knowledge discovery and data mining_.1em plus 0.5em minus 0.4emacm , 2008 , pp ."
  ],
  "abstract_text": [
    "<S> a highly comparative , feature - based approach to time series classification is introduced that uses an extensive database of algorithms to extract thousands of interpretable features from time series . </S>",
    "<S> these features are derived from across the scientific time - series analysis literature , and include summaries of time series in terms of their correlation structure , distribution , entropy , stationarity , scaling properties , and fits to a range of time - series models . </S>",
    "<S> after computing thousands of features for each time series in a training set , those that are most informative of the class structure are selected using greedy forward feature selection with a linear classifier . </S>",
    "<S> the resulting feature - based classifiers automatically learn the differences between classes using a reduced number of time - series properties , and circumvent the need to calculate distances between time series . representing time series in this way results in orders of magnitude of dimensionality reduction , allowing the method to perform well on very large datasets containing long time series or time series of different lengths . for </S>",
    "<S> many of the datasets studied , classification performance exceeded that of conventional instance - based classifiers , including one nearest neighbor classifiers using euclidean distances and dynamic time warping and , most importantly , the features selected provide an understanding of the properties of the dataset , insight that can guide further scientific investigation .    </S>",
    "<S> fulcher and jones : highly comparative , feature - based time - series classification    time - series analysis , classification , data mining </S>"
  ]
}
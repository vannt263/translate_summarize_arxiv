{
  "article_text": [
    "in predicate logic and in _ deduction modulo theory _ @xcite , a model is defined by a set @xmath1 , the _ domain _ of the model , a set @xmath2 of _ truth values _ , and a function , parametrized by a valuation @xmath3 , mapping each term @xmath4 to an element @xmath5 of @xmath1 , and each proposition @xmath6 to an element @xmath7 of @xmath2 .    in the usual definition of the notion of model ,",
    "the set @xmath2 is a two - element set @xmath8 , but this notion can be extended to a notion of _ many - valued model _ , where @xmath2 is an arbitrary boolean algebra , a heyting algebra , a pre - boolean algebra @xcite , or a pre - heyting algebra @xcite .",
    "boolean algebras permit to introduce intermediate truth values for propositions that are neither provable nor disprovable , heyting algebras permit to consider models where the excluded middle is not necessarily valid , that is models of constructive predicate logic , and pre - boolean and pre - heyting algebras , where the order @xmath9 is replaced by a pre - order relation , permit to distinguish a notion of weak equivalence : for all valuations @xmath3 , ( @xmath10 and @xmath11 ) , from a notion of strong equivalence : for all valuations @xmath3 , @xmath12 .",
    "the first corresponds to the provability of @xmath13 and the second to the _ congruence _ defining the _ computational equality _ in deduction modulo theory @xcite , also known as _ definitional equality _ in constructive type theory @xcite .    in a model valued in a boolean algebra , a heyting algebra , a pre - boolean algebra , or a pre - heyting algebra ,",
    "a proposition @xmath6 is _ valid _ when it is weakly equivalent to the proposition @xmath14 , that is when for all valuations @xmath3 , @xmath15 , and this condition boils down to @xmath16 in boolean and heyting algebras .",
    "a congruence @xmath17 defined on propositions is _ valid _ when for all @xmath6 and @xmath18 such that @xmath19 , @xmath6 and @xmath18 are strongly equivalent , that is for all valuations @xmath3 , @xmath20 .",
    "note that the relation @xmath9 is used in the definition of the validity of a proposition , but not in the definition of the validity of a congruence .",
    "proof - reduction terminates in deduction modulo a theory defined by a set of axioms @xmath21 and a congruence @xmath17 , if this theory has a model valued in the pre - heyting algebra of reducibility candidates @xcite . as a consequence ,",
    "proof - reduction terminates if the theory is _ super - consistent _ , that is if for all pre - heyting algebras @xmath2 , it has a model valued in @xmath2 .    for the termination of proof - reduction , the congruence matters , but",
    "the axioms do not .",
    "thus , the pre - order relation @xmath9 is immaterial in the algebra of reducibility candidates and it is possible to define it as the trivial relation such that @xmath22 for all @xmath23 and @xmath24 , which is a pre - order , but not an order .",
    "such a pre - heyting algebra is said to be _",
    "trivial_. as the pre - order is degenerated , all the conditions defining pre - heyting algebras , such as @xmath25 , @xmath26 , etc .",
    "are always satisfied in a trivial pre - heyting algebra , and a trivial pre - heyting algebra is just a set equipped with arbitrary operations @xmath27 , @xmath28 , etc .",
    "thus , in order to prove that proof - reduction terminates in deduction modulo a theory defined by a set of axioms @xmath21 and a congruence @xmath17 , it is sufficient to prove that for all trivial pre - heyting algebras @xmath2 , the theory has a model valued in @xmath2 .      in deduction modulo theory , like in predicate logic , terms , propositions , and proofs belong to three distinct languages .",
    "but , it is also possible to consider a single language , such as the @xmath29-calculus modulo theory @xcite , which is implemented in the dedukti system @xcite , or martin - lf s logical framework @xcite , and express terms , propositions , and proofs , in this language .",
    "for instance , in deduction modulo theory , @xmath30 is a term , @xmath31 is a proposition and @xmath32 is a proof of this proposition . in the @xmath29-calculus modulo theory ,",
    "all these expressions are terms of the calculus .",
    "only their types differ : @xmath30 has type @xmath33 , @xmath34 has type @xmath35 and @xmath36 has type @xmath31 .",
    "the goal of this paper is to define a notion of model for the @xmath29-calculus modulo theory , define a notion of super - consistent theory and prove that proof - reduction terminates in the @xmath29-calculus modulo a super - consistent theory .",
    "we shall this way prove the termination of proof - reduction in two theories in the @xmath0-calculus modulo theory : an embedding of simple type theory @xcite and an embedding of the calculus of constructions @xcite in the @xmath0-calculus modulo theory .      extending the notion of model to many - sorted predicate",
    "logic requires to consider not just one domain @xmath1 , but a family of domains @xmath37 indexed by the sorts of the theory , for instance , in a model of simple type theory , the family of domains is indexed by simple types . then , to each term @xmath4 of sort @xmath38 is associated an element @xmath5 of @xmath37 and to each proposition @xmath6 an element @xmath7 of @xmath39 .    in the @xmath40-calculus modulo theory , the sorts also are just terms of the calculus .",
    "thus , we shall define a model of the @xmath0-calculus modulo theory by a family of sets @xmath41 indexed by the terms of the calculus and a function mapping each term @xmath4 of type @xmath6 to an object @xmath5 of @xmath42 . as propositions",
    "are just some terms of type @xmath35 , we shall require that @xmath43 , so that if @xmath6 is a proposition , then @xmath7 is an element of @xmath2 .      in deduction modulo theory ,",
    "it is possible to define a congruence with a set of rewrite rules that does not terminate , without affecting the termination of proof - reduction .",
    "for instance , consider the trivial set of rewrite rules @xmath44 containing only the rule @xmath45 .",
    "obviously , the congruence defined by this set of rewrite rules is the identity and proofs modulo this theory are just proofs is pure predicate logic .",
    "thus , proof - reduction in deduction modulo this theory terminates .",
    "this means that in the @xmath0-calculus modulo this theory , the @xmath46-reduction terminates .",
    "but the @xmath47-reduction does not terminate , as the @xmath48-reduction alone does not terminate .",
    "thus , in this paper , we shall restrict to prove the termination of @xmath46-reduction , not @xmath49-reduction .",
    "in some cases the termination of the @xmath49-reduction is a simple corollary of the termination of the @xmath46-reduction . in some others",
    "it is not .",
    "the syntax of the @xmath0-calculus is @xmath50    as usual , we write @xmath51 for @xmath52 when @xmath53 does not occur in @xmath18 .    the @xmath54-equivalence relation is defined as usual and terms are identified modulo @xmath54-equivalence .    the relation @xmath46 ( one step @xmath46-reduction at the root ) is defined as usual .    as usual ,",
    "if @xmath55 is a relation on terms , we write @xmath56 for the subterm extension of @xmath55 , @xmath57 for the transitive closure of the relation @xmath56 , @xmath58 for its reflexive - transitive closure , and @xmath59 for its reflexive - symmetric - transitive closure",
    ".    the typing rules of the @xmath0-calculus are @xmath60~\\mbox{well - formed } }          { \\mbox{\\bf empty}}\\ ] ] @xmath61 @xmath62 @xmath63 @xmath64 @xmath65 @xmath66 @xmath67 where in each rule @xmath38 is either @xmath35 or @xmath68 .",
    "it can be proved that types are preserved by @xmath46-reduction , that @xmath46-reduction is confluent and strongly terminating and that each term has a unique type modulo @xmath46-equivalence @xcite .",
    "a term @xmath4 is said to be an _ object _ in a context @xmath69 , if @xmath4 has a type @xmath6 , and @xmath6 has type @xmath35 .",
    "recall that if @xmath70 , @xmath69 , and @xmath71 are contexts , a substitution @xmath72 , binding the variables declared in @xmath69 , is said to be _ of type @xmath73 in @xmath70 _",
    "if for all @xmath53 declared of type @xmath74 in @xmath69 , we have @xmath75 . in this case , if @xmath76 , then @xmath77 .",
    "rewrite rule _ is a quadruple @xmath78 where @xmath69 is a context and @xmath79 , @xmath55 , and @xmath74 are @xmath46-normal terms .",
    "such a rule is said to be _ well - typed _ in the context @xmath70 if , in the @xmath29-calculus , the context @xmath80 is well - formed and the terms @xmath79 and @xmath55 have type @xmath74 in this context .    if @xmath70 is a context , @xmath81 is a rewrite rule well - typed in @xmath70 and @xmath72 is a substitution of type @xmath82 in @xmath70 then the terms @xmath83 and @xmath84 both have type @xmath85 in the context @xmath86 .",
    "the relation @xmath44 ( one step @xmath44-reduction at the root ) is defined by : @xmath87 is there exists a rewrite rule @xmath88 and a substitution @xmath72 such that @xmath89 and @xmath90 .",
    "the relation @xmath49 ( one step @xmath91-reduction at the root ) is the union of @xmath46 and @xmath48 .",
    "a _ theory _ is a pair formed with a context @xmath70 , well - formed in the @xmath0-calculus and a set of rewrite rules @xmath44 , well - typed in @xmath70 in the @xmath0-calculus .",
    "the variables declared in @xmath70 are called _ constants _ rather than variables .",
    "they replace the sorts , the function symbols , the predicate symbols , and also the axioms of predicate logic .",
    "the _ @xmath0-calculus modulo @xmath92 _ is the extension of the @xmath0-calculus obtained modifying the * declaration * and * variable * rules to allow the use of constants as well as variables @xmath93 @xmath94 and by replacing the relation @xmath95 by @xmath96 in the * conversion * rule @xmath97",
    "in @xcite , we have given a presentation of simple type theory in deduction modulo theory .",
    "this presentation can easily be adapted to the @xmath0-calculus modulo theory .",
    "@xmath98 @xmath99 @xmath100 @xmath101 @xmath102 for a finite number of simple types @xmath6 , where _ simple types _ are inductively defined by    * @xmath103 and @xmath104 are simple types , * if @xmath6 and @xmath18 are simple types , then @xmath51 is a simple type .",
    "@xmath105 @xmath106      in @xcite , we have introduced an embedding of the calculus of constructions @xcite in the @xmath0-calculus modulo theory .",
    "@xmath107 @xmath108 @xmath109 @xmath110 @xmath111 @xmath112 @xmath113 @xmath114 @xmath115    @xmath116 @xmath117 @xmath118 @xmath119 @xmath120",
    "the notion of @xmath121-algebra is an adaptation to the @xmath0-calculus of the notion of ( trivial ) pre - heyting algebra .",
    "a @xmath121-algebra is formed with    * a set @xmath2 , * an element @xmath122 of @xmath18 , * a subset @xmath123 of @xmath124 , * a function @xmath125 from @xmath126 to @xmath2 .",
    "if @xmath127 and @xmath128 are two elements of @xmath2 , we write @xmath129 for @xmath130 .    a @xmath121-algebra is _ full _ if @xmath131 , that is if @xmath125 is defined for all subsets of @xmath2 .",
    "a @xmath121-algebra is _ ordered _ if it is equipped with an order relation @xmath132 such that the operation @xmath125 is left anti - monotonous and right monotonous with respect to @xmath132 , that is    * if @xmath133 , then for all @xmath134 @xmath135 , * if @xmath136 , then for all @xmath53 @xmath137 , where @xmath136 is defined as : for all @xmath138 in @xmath134 , there exists a @xmath139 in @xmath74 such that @xmath140 .    it is _ complete _ if every subset of @xmath2 has a least upper bound for the relation @xmath132 .",
    "let @xmath141 be a full @xmath121-algebra .",
    "family of domains valued in @xmath2 _ is a family @xmath142 indexed by terms of @xmath0-calculus modulo theory , such that @xmath143 .",
    "let @xmath142 be a family of domains .",
    "let @xmath144 be a well - formed context .",
    "@xmath69-valuation onto @xmath1 _ is a function mapping every variable @xmath145 to an element of @xmath146 .    a _ model _",
    "is a function mapping each pair formed with a term @xmath4 of type @xmath6 in a context @xmath69 and each @xmath69-valuation onto @xmath1 @xmath3 to a element @xmath5 of @xmath147 , such that @xmath148 , @xmath149 , and @xmath150 .",
    "a theory @xmath92 is said to be _",
    "valid _ in a model @xmath1 if for all @xmath6 and @xmath18 such that @xmath151 , we have @xmath152 and @xmath153 .    a theory @xmath92 , is said to be _ super - consistent _ if for every full , ordered and complete @xmath121-algebra @xmath2 , there exists a model @xmath1 valued in @xmath2 such that @xmath154 is valid in @xmath1 .    to define the notion of validity of a type ( axiom ) declared in @xmath70 , we should , in supplement , add a pre - order relation @xmath9 on @xmath2 , with some compatibility conditions between @xmath122 , @xmath123 , @xmath125 , @xmath132 and @xmath9 , so that the validity of a type @xmath6 can be defined as @xmath155 . as our main focus in this paper is proof termination",
    ", we leave this for future work and we implicitly consider that all types are valid in all models .",
    "let @xmath156 be a full @xmath121-algebra and @xmath157 be an arbitrary one - element set .",
    "we define a family of set @xmath142 indexed by terms of the @xmath0-calculus modulo theory as follows .",
    "* @xmath158 , * @xmath159 , * @xmath160 , * @xmath161 , * @xmath162 is the set of functions @xmath163 from @xmath164 to @xmath165 , except if @xmath166 , in which case @xmath167 .",
    "[ lem1 ] if @xmath4 does not contain any occurrence of @xmath68 , @xmath35 , or @xmath104 then @xmath168 .",
    "_ by induction on the structure of @xmath4",
    ".    [ lem2 ] if @xmath169 does not contain any occurrence of @xmath68 , @xmath35 , or @xmath104 , then @xmath170 .",
    "_ by induction on the structure of @xmath4 . if @xmath171 then , by lemma [ lem1 ] , @xmath172 .",
    "if @xmath4 is @xmath68 , @xmath35 , @xmath103 , @xmath104 , @xmath173 , @xmath174 , @xmath175 , or a variable different from @xmath53 , then @xmath53 does not occur in @xmath4 .",
    "if @xmath4 is an application , an abstraction , or a product , we use the induction hypothesis .    if @xmath176 then @xmath177 .    _ proof",
    "_ if @xmath178 , then @xmath179 is an object and it does not contain any occurrence of @xmath68 , @xmath35 , or @xmath104 . by lemma [ lem2 ] , @xmath180 .",
    "then , as for all @xmath181 , @xmath182 , and if @xmath166 , then @xmath167 , we have @xmath183 and @xmath184 .    we prove , by induction on @xmath4 , that if @xmath185 then @xmath177 and we conclude with a simple induction on the structure of the derivation of @xmath176 .",
    "let @xmath4 be a term of type @xmath6 in a context @xmath69 or that is equal to @xmath68 .",
    "let @xmath3 be a @xmath69-valuation onto @xmath1 .",
    "the element @xmath5 of @xmath147 is defined as follows .",
    "* @xmath186 , * @xmath187 , * @xmath188 is the function mapping @xmath189 in @xmath164 to @xmath190 , except if for all @xmath189 in @xmath164 @xmath191 , in which case @xmath192 , * @xmath193 , except if @xmath194 , in which case @xmath195 , * @xmath150 , * @xmath196 is the identity on @xmath2 , * @xmath197 is the function mapping @xmath127 and @xmath128 in @xmath2 to @xmath129 , * @xmath198 is the function mapping the function @xmath163 from @xmath164 to @xmath2 to the element of @xmath2 @xmath199 .",
    "@xmath200    _ proof .",
    "_ by induction over the structure of @xmath4 .    if @xmath176 then @xmath201 .    _ proof .",
    "_ if @xmath178 , then let @xmath202 be the type of @xmath203 , if @xmath166 then @xmath204 .",
    ".    then @xmath206 and @xmath207 .",
    "we prove , by induction on @xmath4 , that if @xmath185 then @xmath208 and we conclude with a simple induction on the structure of the derivation of @xmath176 .      in the model of simple type theory",
    ", we had @xmath168 for all objects @xmath4 .",
    "this allowed to define @xmath209 and @xmath210 as @xmath41 and validate @xmath46-reduction trivially . in the model built in this section",
    ", we need to take @xmath211 although @xmath212 is an object , as @xmath213 .",
    "thus , we need to define @xmath214 as a function . this leads to define first another family of domains @xmath215 and parametrize the definition of @xmath41 itself by a valuation onto @xmath216 .",
    "let @xmath156 be a full @xmath121-algebra and @xmath157 be an arbitrary one - element set .",
    "let @xmath217 be a set containing @xmath2 and @xmath157 , and closed by function space and arbitrary unions .",
    "the existence of such a set can be proved with the replacement scheme .",
    "we define a family @xmath215 indexed by terms of the @xmath0-calculus modulo theory as follows .",
    "* @xmath218 , * @xmath219 is the set of functions @xmath163 from @xmath220 to @xmath221 , except if @xmath222 , in which case @xmath223 .",
    "* @xmath224 , * @xmath225 , * @xmath226",
    ".    [ lem1ccn ] if @xmath4 does not contain any occurrence of @xmath68 , @xmath35 , or @xmath227 , then @xmath228 .",
    "_ by induction on the structure of @xmath4",
    ".    [ lem2ccn ] if @xmath169 does not contain any occurrence of @xmath68 , @xmath35 , or @xmath227 , then @xmath229 .",
    "_ by induction on the structure of @xmath4 .",
    "if @xmath171 then , by lemma [ lem1ccn ] , @xmath230 .",
    "if @xmath4 is @xmath68 , @xmath35 , @xmath227 , @xmath231 , @xmath212 , @xmath232 , @xmath233 , @xmath234 , @xmath235 , @xmath236 , @xmath237 , or a variable different from @xmath53 , then @xmath53 does not occur in @xmath4 . if @xmath4 is an application , an abstraction , or a product , we use the induction hypothesis .",
    "if @xmath176 then @xmath238 .    _ proof .",
    "_ if @xmath178 , then @xmath179 is an object and it does not contain any occurrence of @xmath68 , @xmath35 , or @xmath227 . by lemma [ lem2ccn ] , @xmath239 .",
    "we have @xmath240 .    then , as for all @xmath181 , @xmath241 , and if @xmath222 , then @xmath223 , we have @xmath242 .    we prove , by induction on @xmath4 , that if @xmath185 then @xmath238 and we conclude with a simple induction on the structure of the derivation of @xmath176 .",
    "we define a family @xmath243 indexed by terms of the @xmath0-calculus modulo theory and @xmath69-valuations onto @xmath216 , in such a way that if @xmath4 has type @xmath6 in @xmath69 , then @xmath244 is an element of @xmath245 .",
    "* @xmath246 , * @xmath247 is the identity on @xmath217 , * @xmath248 is the function from @xmath157 to @xmath217 mapping @xmath249 to @xmath157 , * @xmath250 , * @xmath251 is the function mapping @xmath189 in @xmath220 to @xmath252 , except if for all @xmath189 in @xmath220 , @xmath253 in which case @xmath254 , * @xmath255 , except if @xmath256 in which case @xmath257 , * @xmath258 is the set of functions from @xmath164 to @xmath259 , except if @xmath260 in which case @xmath261 , * @xmath262 , * @xmath263 is the function mapping @xmath249 and @xmath264 from @xmath157 to @xmath217 to the set of functions from @xmath157 to @xmath265 , * @xmath266 is the function mapping @xmath267 in @xmath217 and @xmath264 from @xmath157 to @xmath217 to the set of functions from @xmath267 to @xmath265 .",
    "@xmath268    _ proof .",
    "_ by induction on the structure of @xmath4 .    if @xmath176 then @xmath269 .    _ proof . _",
    "the term @xmath270 reduces to @xmath271 .",
    "let @xmath202 be the type of @xmath203 .",
    "both terms @xmath270 and @xmath271 have type @xmath272 . if @xmath222 , then @xmath273 , otherwise @xmath274 .",
    "we have @xmath275 .",
    "we have @xmath276 is the set of functions from @xmath277 to @xmath278 .",
    "and @xmath279 is the set of functions from @xmath280 to @xmath281 , that is the set of functions from @xmath277 to @xmath282 that is the set of functions from @xmath277 to @xmath278 as well .",
    "we have @xmath283 is the set of functions from @xmath157 to @xmath278 .",
    "and @xmath284 is the set of functions from @xmath285 to @xmath286 , that is the set of functions from @xmath157 to @xmath282 that is the set of functions from @xmath157 to @xmath278 as well .",
    "we have @xmath287 and as @xmath288 , we have @xmath289 as well .",
    "we prove , by induction on @xmath4 , that if @xmath185 then @xmath269 and we conclude with a simple induction on the structure of the derivation of @xmath176 .    from now on ,",
    "consider a fixed valuation onto @xmath216 @xmath290 and write @xmath147 for @xmath291 .",
    "let @xmath4 be a term of type @xmath6 in a context @xmath69 or that is equal to @xmath68 .",
    "let @xmath3 be a @xmath69-valuation onto @xmath1 .",
    "the element @xmath5 of @xmath147 is defined as follows .",
    "* @xmath292 , * @xmath187 , * @xmath188 is the function mapping @xmath189 in @xmath164 to @xmath190 , except if for all @xmath189 in @xmath164 @xmath293 , in which case @xmath192 , ( note that @xmath294 is in @xmath165 , that is @xmath295 , hence it is in @xmath296 ) , * @xmath193 , except if @xmath194 , in which case @xmath195 , * @xmath150 , * @xmath297 is the identity on @xmath2 , * @xmath298 is the function mapping an element @xmath23 in @xmath2 and a function @xmath163 from some set @xmath134 in @xmath217 to @xmath2 to the element @xmath299 of @xmath2 .",
    "@xmath200    _ proof .",
    "_ by induction over the structure of @xmath4 .    if @xmath176 then @xmath201 .    _ proof",
    "_ if @xmath300 , then let @xmath23 be the type of @xmath203 , if @xmath301 then @xmath302 , otherwise @xmath303 .",
    "we have @xmath304 .    if @xmath305 , then @xmath306 .    if @xmath307 , then @xmath308 .",
    "we prove , by induction on @xmath4 , that if @xmath185 then @xmath208 and we conclude with a simple induction on the structure of the derivation of @xmath176 .",
    "we now prove that proof - reduction terminates in the @xmath0-calculus modulo a super - consistent theory such as simple type theory or the calculus of constructions .",
    "we use here the notion of _ reducibility candidate _ introduced by girard @xcite . our definition ,",
    "however , follows that of parigot @xcite .",
    "the set @xmath122 is defined as the set of strongly terminating terms .",
    "let @xmath23 be a set of terms and @xmath134 be a set of sets of terms .",
    "the set @xmath309 is defined as the set of strongly terminating terms @xmath4 such that if @xmath310 then for all @xmath311 in @xmath23 , and for all @xmath202 in @xmath134 , @xmath312 .",
    "the main property of the operation @xmath125 is expressed by the following lemma .",
    "[ application0 ] let @xmath23 be a set of terms and @xmath134 be a set of sets of terms , @xmath313 , @xmath314 , and @xmath169 be terms such that @xmath315 , @xmath316 , and @xmath317 , @xmath318 and @xmath319 be natural numbers such that @xmath318 is the maximum length of a reduction sequence issued from @xmath313 , and @xmath314 is the maximum length of a reduction sequence issued from @xmath314 , and @xmath202 be an element of @xmath134 .",
    "then , @xmath320 .",
    "_ by induction on @xmath321 . if the reduction is at the root of the term , then @xmath313 has the form @xmath322 and @xmath323 . by the definition of @xmath309 ,",
    "otherwise , the reduction takes place in @xmath313 or in @xmath314 , and we we apply the induction hypothesis .    _",
    "candidates _ are inductively defined by the three rules    * the set @xmath122 of all strongly terminating terms is a candidate , * if @xmath23 is a candidate and @xmath134 is a set of candidates , then @xmath309 is a candidate , * if @xmath134 is a set of candidates , then @xmath324 is a candidate .",
    "we write @xmath325 for the set of all candidates .",
    "the @xmath121-algebra @xmath326 is full , it is ordered by the subset relation and complete for this order .",
    "if @xmath23 is a candidate , then all the elements of @xmath23 strongly terminate .    _ proof .",
    "_ by induction on the construction of @xmath23",
    ".    [ varpi ] if @xmath23 is a candidate and @xmath53 is a variable , then @xmath327 .",
    "_ by induction on the construction of @xmath23 .    [ closurepi ] if @xmath23 is a candidate , @xmath328 , and @xmath329 , then @xmath330",
    "_ by induction on the construction of @xmath23 .    if @xmath331 , then as @xmath4 is an element of @xmath23 , it strongly terminates , thus @xmath203 strongly terminates , and @xmath330 .",
    "if @xmath332 , then as @xmath4 is an element of @xmath23 , it strongly terminates , thus @xmath203 strongly terminates .",
    "if moreover @xmath333 , then @xmath334 , and for all @xmath169 in @xmath202 , and for all @xmath217 in @xmath134 , @xmath335 .",
    "thus , @xmath330 .    if @xmath336 , then for all @xmath337 , @xmath338 and by induction hypothesis @xmath339 .",
    "thus , @xmath330 .",
    "[ application ] let @xmath23 be a candidate and @xmath134 be a set of candidates , @xmath313 and @xmath314 such that @xmath315 and @xmath316 , and @xmath202 be an element of @xmath134 . then @xmath340 .    _ proof . _ as @xmath315 and and @xmath316 , @xmath313 and @xmath314 strongly terminate .",
    "let @xmath318 be the maximum length of a reduction sequence issued from @xmath313 and @xmath319 be the maximum length of a reduction sequence issued from @xmath314 .",
    "by lemma [ application0 ] , all the one step reducts of @xmath341 are in @xmath202 .    to conclude that @xmath341 itself is in @xmath202 , we prove , by induction on the construction of @xmath202 , that if @xmath202 is a candidate and all the one - step reducts of the term @xmath341 are in @xmath202 , then @xmath341 is in @xmath202 .    * if @xmath342 , then as all the one - step reducts of the term @xmath341 strongly terminate , the term @xmath341 strongly terminates , and @xmath340 . *",
    "if @xmath343 , then as all the one - step reducts of the term @xmath341 strongly terminate , the term @xmath341 strongly terminates .",
    "if moreover @xmath344 , then let @xmath345 be a reduction sequence from @xmath341 to @xmath346 . as @xmath341 is an application and @xmath346 is not , @xmath347 .",
    "thus , @xmath348",
    ". we have @xmath349 and @xmath350 , thus for all @xmath127 in @xmath23 and @xmath351 in @xmath134 , @xmath352 .",
    "thus , @xmath353 . * if @xmath354 , then for all @xmath337 , all the one step reducts of @xmath341 are in @xmath355 , and , by induction hypothesis @xmath356 .",
    "thus , @xmath340 .",
    "consider a super - consistent theory @xmath92 .",
    "we want to prove that @xmath46-reduction terminates in the @xmath0-calculus modulo this theory , while @xmath49-reduction may or may not terminate .",
    "as this theory is super - consistent , it has a model @xmath1 valued in the @xmath121-algebra @xmath326 .",
    "consider this model .",
    "if a term @xmath4 has type @xmath18 in some context @xmath69 , then @xmath18 has type @xmath35 in @xmath69 , @xmath18 has type @xmath68 in @xmath69 , or @xmath357 .",
    "thus , @xmath358 is an element of @xmath359 , @xmath358 is an element of @xmath360 , or @xmath361 . in all these cases @xmath358 is a candidate .",
    "let @xmath144 be a context , @xmath3 be a @xmath69-valuation onto @xmath1 , @xmath362 be a substitution mapping every @xmath145 to an element of @xmath363 and @xmath4 a term of type @xmath18 in @xmath69",
    ". then @xmath364 .",
    "_ by induction on the structure of @xmath4 .",
    "* if @xmath365 , then @xmath357 , @xmath361 and @xmath366 .",
    "* if @xmath171 is a variable , then by definition of @xmath362 , @xmath367 .",
    "* if @xmath368 , then @xmath369 or @xmath357 , and @xmath361 , @xmath370 and @xmath371 or @xmath372 , by induction hypothesis @xmath373 , that is @xmath374 strongly terminates and @xmath375 or @xmath376 , that is @xmath377 strongly terminates .",
    "thus , @xmath378 strongly terminates also and it is an element of @xmath379 . * if @xmath380 where @xmath169 has type @xmath202 .",
    "then @xmath381 and @xmath382 is the set of terms @xmath38 such that @xmath38 strongly terminates and if @xmath38 reduces to @xmath383 then for all @xmath384 in @xmath385 and all @xmath267 in @xmath164 , @xmath386 is an element of @xmath387 .",
    "+ we have @xmath388 , consider a reduction sequence issued from this term .",
    "this sequence can only reduce the terms @xmath374 and @xmath389 . by induction hypothesis",
    ", the term @xmath374 is an element of @xmath390 and the term @xmath389 is an element of @xmath391 , thus the reduction sequence is finite .",
    "+ furthermore , every reduct of @xmath392 has the form @xmath393 where @xmath24 is a reduct of @xmath374 and @xmath181 is a reduct of @xmath389 .",
    "let @xmath127 be any term of @xmath385 , and @xmath267 be any element of @xmath164 , the term @xmath394 can be obtained by reduction from @xmath395 . by induction hypothesis , the term @xmath395 is an element of @xmath387 .",
    "hence , by lemma [ closurepi ] the term @xmath394 is an element of @xmath396 .",
    "therefore , the term @xmath397 is an element of @xmath358 . *",
    "if the term @xmath4 has the form @xmath398 then @xmath399 is a term of type @xmath400 , @xmath401 a term of type @xmath23 and @xmath402 .",
    "we have @xmath403 , and by induction hypothesis @xmath404 and @xmath405 . by lemma",
    "[ application ] , @xmath406 .",
    "let @xmath69 be a context and @xmath4 be a term well - typed in @xmath69 .",
    "then @xmath4 strongly terminates .",
    "_ let @xmath18 be the type of @xmath4 in @xmath69 , let @xmath3 be any @xmath69-valuation onto @xmath1 , @xmath362 be the substitution mapping every @xmath145 to itself . note that , by lemma [ varpi ] , this variable is an element of @xmath363 . then @xmath407 .",
    "hence it strongly terminates .",
    "in the context @xmath408 there is no term of type @xmath409 .",
    "_ assume there exists a term @xmath4 of type @xmath409 in the context @xmath408 and let @xmath203 be its @xmath46-normal form .",
    "the term @xmath203 would have the form @xmath410 for some constant or variable @xmath264 .",
    "a case analysis shows that no constant or variable can yield a term of type @xmath409 .",
    "a similar argument applies to the @xmath0-calculus modulo the calculus of constructions with the context @xmath411 and the type @xmath412 .",
    "we finally prove the termination of the @xmath49-reduction for simple type theory and for the calculus of constructions . the rules @xmath44 of simple type theory are @xmath105 @xmath106 this set @xmath44 of rewrite rules terminates , as each reduction step reduces the number of symbols @xmath174 and @xmath175 in the term .",
    "then , @xmath44-reduction can create @xmath46-redices , but only @xmath46-redices on the form @xmath413 where @xmath139 is a variable .",
    "thus , any term can be ( weakly ) @xmath49-reduced by @xmath46-reducing it first , then @xmath44-reducing it , then @xmath46-reducing the trivial @xmath46-redices created by the @xmath44-reduction .",
    "d. cousineau and g. dowek , embedding pure type systems in the lambda - pi - calculus modulo , s. ronchi della rocca , _ typed lambda calculi and applications _ , lecture notes in computer science 4583 , springer - verlag , 2007 , pp .",
    "102 - 117 ."
  ],
  "abstract_text": [
    "<S> we define a notion of model for the @xmath0-calculus modulo theory , a notion of super - consistent theory , and prove that proof - reduction terminates in the @xmath0-calculus modulo a super - consistent theory . </S>",
    "<S> we prove this way the termination of proof - reduction in two theories in the @xmath0-calculus modulo theory , and their consistency : an embedding of simple type theory and an embedding of the calculus of constructions . </S>"
  ]
}
{
  "article_text": [
    "an intriguing feature of language is the zipf s law @xcite , also known as power law or pareto s law @xcite . in the zipf analysis , one calculate the frequencies of each word in an english text , and sort all the frequencies in rank - order , from the largest to the smallest .",
    "if we plot these frequencies against their rank - order in a log - log figure , then it will show a nearly straight line , with a slope @xmath0 @xcite .",
    "so the relation of frequency and corresponding rank - order can be approximated by a power law form , @xmath1 , @xmath2 for frequency , @xmath3 for rank , and @xmath4 , usually negative , is referenced as zipf exponent .",
    "some researches have used an extended form @xmath5 @xcite .",
    "the constant @xmath6 , however , does not have a substantial physical meaning .",
    "@xcite showed that instead of a power law , many different data in rank laws can be very well fitted by the integrand of a beta function .",
    "zipf analysis were also extended to many other systems@xcite , such as city sizes @xcite , dna base pair sequences @xcite , and distribution of firm sizes @xcite .",
    "many information carriers , such as language , program code , and dna , can be considered as a symbol sequence .",
    "english text can be regarded as word sequences or letter sequences , where words are distinguished by some letters separated by space or punctuation .",
    "chinese text can be perceived as chinese character sequences , computer binary file as binary sequences , and dna as atgc sequences .",
    "it s well known that statistics on single symbol of these sequences show no power law except for english text as word sequence @xcite .",
    "for example , statistics on 26 letters in an english novel , on chinese characters in a chinese novel , or on the 4 symbols atgc in a dna sequence , show no power law .",
    "words are not easily separated in some languages as they are separated with spaces in english corpus .",
    "for example , in chinese , compound words composing two or more chinese characters could be created if they are semantically meaningful @xcite .",
    "also in other sequences , e.g. , noncoding regions of dna sequences , it is not easy to distinguish words @xcite .",
    "literature reported that statistics on _ n_-tuples in these symbol sequences show zipf s law @xcite .",
    "let s use an example to demonstrate the statistic method .",
    "given an english letter sequence , `` abbccc '' , its length is 6 .",
    "then we get 5 2-tuples : `` ab '' , `` bb '' , `` bc '' , `` cc '' , `` cc '' .",
    "there are 4 unique 2-tuples here : `` ab '' , `` bb '' , `` bc '' , `` cc '' , with frequencies 1 , 1 , 1 , 2 respectively . formally , given a symbol sequence @xmath7",
    ", its length is @xmath8 .",
    "then we get @xmath9 _ n_-tuples , imaging a window with width @xmath10 slide from the beginning to the end .",
    "we can perform frequency statistics on these _ n_-tuples .",
    "if the statistic results show power law , then we call it _ n - tuple power law_. the phrase _ n_-tuple used in @xcite is also called _ n_-gram in @xcite . we inherit _ n_-tuple in this paper .",
    "@xcite reported that _",
    "n_-tuples of dna ( noncoding regions ) as atgc base pair sequence demonstrates a zipf feature .",
    "this feature also exists in _",
    "n_-tuples of english text as letter sequence , and computer binary executable file as 0 , 1 sequence . in that paper , _",
    "n_-tuple zipf analyses were performed on dna with @xmath11 through 8 , and on english text with @xmath11 through 5 , and @xmath12 on computer binary executable file .",
    "@xcite also claimed that noncoding sequences bear more resemblance to a nature language than the coding sequences .",
    "@xcite argued , however , to detect such linguistic feature , zipf analysis should be applied with caution , since it can not distinguish language from power - law noise , e.g. , @xmath13 noise .",
    "@xcite give a detailed report that _",
    "n_-tuple power law exists in english text as word or letter sequence , and in chinese text from 1-tuple to 5-tuple .",
    "however , our statistics show that _",
    "n_-tuple power law exists for a much larger @xmath10 and in ranges different from @xcite . for human dna (",
    "note that we do not distinguish coding and noncoding regions ) , when @xmath14 , statistics show a better power law . for english text ,",
    "a better power law shows when @xmath15 .",
    "@xcite also reported that the zipf exponent @xmath4 is almost the same for different @xmath10 , which is found to be increasing @xcite .",
    "our statistics also show an increasing zipf exponent with @xmath10 increases . in section  [ sec3 ] we ll give an estimate equation for the range of @xmath10 , based on our model .",
    "@xcite proposed markov process to analyze the _",
    "n_-tuple where the sequence is simplified to contain only two different symbols , 0 , and 1 .",
    "conditional probability was calculated and gave results roughly similar to the one observed for long - range correlated sequences .",
    "@xcite gives the rank - frequency distribution of _",
    "n_-tuples based on the assumption that the rank - frequency distribution of single symbols follows zipf s law .",
    "simon proposed a preferential selection model to explain the power law distribution in numerous examples with this property found at that age @xcite .",
    "however , simon s model can not explain the _",
    "n_-tuple zipf feature .",
    "this paper will follow simon s idea and set up a model to explain the _",
    "n_-tuple zipf feature .    in section  [ sec2 ]",
    ", we will give our statistics on english corpus , chinese corpus , dna , computer program coding source code , and computer executable binary file .",
    "we ll show that for a random sequence , a zipf s law does not exist . in section  [ sec3 ] , we ll propose a model to explain the _",
    "n_-tuple power law .",
    "later , we ll give an estimation equation for the zipf exponent .",
    "we draw conclusions in section 4 .",
    "@xcite mentioned that short horizontal line segments appeared at the bottom of a zipf plot interfere with the statistics , and proposed that the last one or two of these line segments be discarded and the rest of them be represented by their center point respectively .",
    "here we adopt a similar method : for all the line segments , we preserve the right - most point and discard the rest .",
    "this is a much easier way to eliminate the interference .",
    "we do the traditional zipf plot and then we perform a linear fit on the log - log plot .",
    "the slope is the zipf exponent ( negative ) , and the square of correlation coefficient @xmath16 $ ] represents how well the fit is , with 1 a perfect straight line and 0 not a line at all .",
    "we say it s a power law if @xmath17 is close to 1 ( typically when @xmath18 ) .",
    "we perform statistics on english corpus , chinese corpus , dna , computer program coding source code , and computer executable binary file .",
    "we also perform statistics on dna as 01 sequence with at=0 and gc=1 , music pieces as music note sequence , and actor sequence in drama .",
    "we show here only statistics on english corpus , and dna sequence .",
    "the rest of the statistical results are presented in supplement material @xcite . because almost all _",
    "n_-tuples appear only one or two times when @xmath10 is too large , we only perform statistics for relatively not too large @xmath10",
    ". note that it s quite time consuming to perform _",
    "n_-tuple statistics on large data sets , e.g. human dna .",
    "state to the art technique is needed .",
    "some programming techniques we used is represented in @xcite .",
    "[ fig1 ] and fig .",
    "[ fig2 ] are the zipf analyses of english corpus of dickens 15 novels as letter sequence and dna atgc sequence of human y chromosome from @xcite . for dickens novels ,",
    "when @xmath15 , it is already a well fit to a power law . for y chromosome ,",
    "however , it is when @xmath14 .     _",
    "n_-tuple zipf analysis of 15 novels of dickens as english letter sequence .",
    "( a ) the frequency - rank statistics on _ n_-tuples for @xmath19 .",
    "( b ) @xmath17 of linear fit against @xmath10 .",
    "we can see that _",
    "n_-tuple zipf analyses show power law for @xmath15 .",
    "( c ) slope of linear fit against @xmath10 .",
    "we can see that the slope tends to zero . ]     _ n_-tuple zipf analysis of y chromosome of human being as atgc sequence . source : ncbi human genome resources @xcite .",
    "( a ) the frequency - rank statistics on _ n_-tuples for @xmath20 .",
    "( b ) @xmath17 of linear fit against @xmath10 .",
    "we can see that _",
    "n_-tuple zipf analyses show power law for @xmath14 .",
    "( c ) slope of linear fit against @xmath10 .",
    "we can see that the slope tends to zero as in fig .",
    "[ fig1 ] . ]",
    "we can see from fig .",
    "[ fig1](c ) and fig .",
    "[ fig2](c ) that the slope ( the zipf exponent ) tends to zero with @xmath10 increasing .",
    "we find that this is the case in all our statistics @xcite . in section  [ sec3 ]",
    "we ll try to explain this feature based on our model .",
    "it should be noticed that _",
    "n_-tuple power law does not exist in random sequence .",
    "we generate a random atgc sequence , the length of the sequence and the numbers of a , t , g , and c are the same as the real y chromosome from the above source . in fact , such a sequence is a shuffle of the original one .",
    "[ fig3 ] is an _",
    "n_-tuple zipf analysis on such a shuffled sequence .",
    "we can see in fig .",
    "[ fig3](b ) that the _ n_-tuple curves are not linear when @xmath21 because @xmath17 is low .",
    "although when @xmath22 , the curve is linear and @xmath17 is high ( close to 1 ) , this is not evident for a power law .",
    "the reason is due to the fact that , in our statistic method , when @xmath22 , there are only a few points on the curve , exactly speaking , 8 points for @xmath23 , and 2 points for @xmath24 , in which case the @xmath17 of linear fit needs to be exact 1 .     _",
    "n_-tuple zipf analysis of a random ( shuffled ) atgc sequence .",
    "( a ) the frequency - rank statistics on _ n_-tuples for @xmath25 .",
    "( b ) @xmath17 of linear fit against @xmath10 .",
    "we can see that @xmath17 is close to 1 for @xmath22 .",
    "this is , however , not an evidence for a power law .",
    "the reason is that almost all _ n_-tuples appear only a few times when @xmath22 .",
    "for example , all _",
    "n_-tuples appear only one or two times for @xmath24 , so there are only two points on the curve . in this case , @xmath17 of linear fit needs to be exact 1 according to our statistic method . as mentioned in section  [ sec2.1 ] , these should be discarded .",
    "for the rest part @xmath21 , it s not power law because @xmath17 is way too low .",
    "compare ( b ) with fig .",
    "[ fig2](b ) , the difference is clear : in fig .",
    "[ fig2](b ) , for the whole range between @xmath26 to 80 , @xmath17 is close to 1 which indicates power law . ]    we can give an explanation of why _",
    "n_-tuple power law does not exist in random sequence .",
    "given a random atgc sequence , suppose each element in the sequence is an independent and identically distributed random variable , and the probability for atgc is @xmath27 respectively .",
    "then the probability that two elements at two given loci are the same is @xmath28 , @xmath29 .",
    "n_-tuples are the same means elements on every corresponding loci are the same , so the probability is @xmath30 .",
    "@xmath30 tends to 0 exponentially with @xmath10 increases .",
    "that s why almost all _",
    "n_-tuples appear only a few times when @xmath22 in fig .",
    "when @xmath10 is relatively small , the probability of each unique _ n_-tuple could be easily calculated with @xmath31 , showing no way of being a power law .",
    "simon s model is a preferential selection model @xcite .",
    "it can be simply described as : randomly select a element from current sequence and attach it to the end of the sequence repeatedly .",
    "a formal description is as follows : at each step a new element is attached to the end of current symbol sequence .",
    "the newly attached element follows two rules :    rule 1 ( new unique symbol rule ) . : :    there is a constant probability @xmath32 that the newly    attached element is a new unique symbol that never appeared .",
    "rule 2 ( preferential selection rule ) .",
    ": :    else the newly attached element is randomly selected from the current    sequence .    from these two rules",
    ", simon proved that power law will appear and the slope ( zipf exponent ) is @xmath33 .",
    "note that although simon s model is still valid when @xmath32 is very close to 0 or 1 , it is not easy to observe a power law at this circumstance due to the fact that the sequence length needs to be very large to exhibit any meaningful feature .",
    "we ve performed _",
    "n_-tuple zipf analysis on simon s model generated sequence , and found that _",
    "n_-tuple power law does not exist .",
    "the plot is similar to fig .",
    "so , we need a new model that can compromise _ n_-tuple power law .",
    "our model is a consecutive subsequence preferential selection model inspired by simon s model .",
    "it can be simply described as a randomly copy and paste process : randomly select a random consecutive subsequence from current sequence and attach it to the end repeatedly .",
    "a formal description is as following :    1 .   given 4 parameters : the length @xmath34 of initial symbol sequence , the number @xmath35 of unique symbols , the discrete distribution @xmath36 which generates random positive integers , and the maximum length @xmath37 of symbol sequence .",
    "2 .   generate an initial symbol sequence , in which each element is randomly selected from @xmath35 unique symbols .",
    "suppose the current sequence is @xmath38 , and the length is @xmath8 .",
    "generate a random integer @xmath39 , which has a uniform distribution in @xmath40 $ ] , as the start point of subsequence .",
    "generate a random length @xmath41 , which has a distribution @xmath36 , as the length of subsequence .",
    "if @xmath42 , go to step 3 ; else , repeat this step .",
    "( this is to make sure the randomly selected subsequence is inside @xmath38 ) 4 .",
    "suppose @xmath43 is the randomly selected subsequence in @xmath38 , starting from @xmath39 with length @xmath41 .",
    "@xmath43 is copied and attached to the end of @xmath38 and assign @xmath38 as the new sequence . update the length of @xmath38 : @xmath44 .",
    "5 .   if @xmath45 , stop ; else , go to step 2 .    fig .",
    "[ fig4 ] is an _",
    "n_-tuple zipf analysis on this model generated sequence .",
    "parameters of the model are tuned to real dna as in fig .",
    "we can see that _",
    "n_-tuple power law does exist in our model and it well replicates the dna zipf analysis as in fig .  [ fig2 ] .     _",
    "n_-tuple zipf analysis of our model generated data .",
    "two related parameters of our model are set up according to real human y chromosome as in fig .",
    "[ fig2 ] : @xmath46 , @xmath47 .",
    "@xmath48 , @xmath36 is exponential distribution with pdf ( probability distribution function ) @xmath49 ( use the integer part of generated random numbers ) .",
    "( a ) the frequency - rank statistics on _ n_-tuples for @xmath20 .",
    "( b ) @xmath17 of linear fit against @xmath10 .",
    "we can see that _",
    "n_-tuple zipf analyses show power law for @xmath14 .",
    "( c ) slope of linear fit against @xmath10 .",
    "we can see that the slope tends to zero .",
    "these are the same as in real dna data shown in fig .",
    "[ fig2 ] . ]",
    "let s begin with an example .",
    "suppose the current sequence is @xmath50 , length 8 .",
    "there are 6 3-tuples : @xmath51 , @xmath52 , @xmath53 , @xmath54 .",
    "randomly select a subsequence from @xmath38 , say , starting at 3 with length 4 , that is @xmath55 .",
    "copy and attach @xmath43 to the end of @xmath38 , now @xmath56 , length 12 .",
    "there are 10 3-tuples now : @xmath57 are the same , and @xmath58 , @xmath59 , @xmath60 , @xmath61 are newly formed .",
    "we can see that @xmath62 , @xmath63 . as of @xmath64 or @xmath65",
    ", it s unknown if it equals to any of @xmath57 .",
    "if it s not , then a new unique 3-tuple is introduced .",
    "[ fig5 ] shows this whole process .     a demonstration of our model .",
    "@xmath55 is randomly selected , copied and attached to the end . ]",
    "now we can give a formal description .",
    "suppose the current sequence is @xmath66 , length @xmath8 .",
    "let s consider _",
    "n_-tuples , there are @xmath9 _ n_-tuples : @xmath67 , @xmath68 , @xmath53 , @xmath69 .",
    "a subsequence @xmath70 is randomly selected from @xmath38 , starting at @xmath39 with length @xmath41 , and is copied and attached to the end of @xmath38 .",
    "now @xmath71 , length @xmath72",
    ". there are @xmath73 _",
    "n_-tuples now : @xmath74 are the same , @xmath75 are newly formed .",
    "the number of these newly formed is @xmath41 .",
    "these newly formed can be divided into two cases , _ case in _ and _ case out _ as fig .",
    "[ fig5 ] shows .",
    ": :    if @xmath76 , among these newly formed @xmath41    _ n_-tuples , the last @xmath77 _ n_-tuples fall inside of    @xmath43 , and equal to    @xmath78 respectively .",
    "suppose    @xmath79 is the probability that a newly formed _",
    "n_-tuples    belongs to this case .",
    ": :    if @xmath76 , among these newly formed @xmath41    _ n_-tuples , the first @xmath80 _ n_-tuples fall ( partly )    outside of @xmath43 . if @xmath81 , all the newly    formed @xmath41 _ n_-tuples fall ( partly ) outside of    @xmath43 .",
    "it s unknown whether these newly formed _",
    "n_-tuples    equal to any of @xmath74 .",
    "if it s    not , then a new unique _",
    "n_-tuple is introduced .",
    "unfortunately , we are unable to give a strict analysis for _ case out_. therefore we give the following assumption .",
    "assumption 1 .",
    ": :    the probability that an element in _ case out _ is a duplicated one is    very small and can be neglected when @xmath10 is large .",
    "this assumption is necessary for the following discussion .",
    "one may doubt the reasonableness of this assumption .",
    "well , the most convincible evidence could be that our theoretical equation based on this assumption fit the model well , see section  [ sec3.4 ] and section  [ sec3.5 ] .",
    "the fact that the number of all possible _",
    "n_-tuples increases exponentially with @xmath10 increases also favors this assumption , see section  [ sec3.5 ] .",
    "we hope that future work can give a strict analysis for this assumption .",
    "starting from this assumption , if we perceive @xmath82 in our model as the symbols in simon s model , _ case in _ is equivalent to the preferential selection rule in simon s model ( rule 2 ) , and _ case out _ can correspond to the new unique symbol rule in simon s model ( rule 1 ) .",
    "now we can utilize the proof of simon s model and prove the existence of _",
    "n_-tuple power law in our model .",
    "we can also calculate zipf exponent . in the next section ,",
    "we show that the calculated zipf exponent corresponds well to the model .",
    "this demonstrates the validity of this assumption .",
    "now we give an estimate for the slope ( zipf exponent ) of our model .",
    "consider @xmath79 .",
    "given that the pdf of the distribution @xmath36 is @xmath83 . according to step 2 in section  [ sec3.2 ] , we need to repeatedly generate random integer @xmath41 by distribution @xmath36 until @xmath42 .",
    "however , we suppose that the generated random integer @xmath41 always satisfies @xmath42 . this is reasonable because this is almost the case for any pdf when @xmath8 is large",
    ". furthermore , assume that the expectation corresponding to the distribution @xmath36 exists .    now , according to _ case in _ , we have @xmath84 or in the integral form @xmath85 we use @xmath79 to estimate the slope ( zipf exponent ) . according to _ assumption 1 _ and simon s model , @xmath86 .",
    "so we have @xmath87    eq .",
    "( [ eq1 ] ) is got with no requirement for the detailed form of the distribution function .",
    "the deduction only requires the existence of the expectation .",
    "[ fig6 ] is a comparison of eq .",
    "( [ eq1 ] ) and actual simulation result of our model .",
    "we can see that when @xmath10 is large ( @xmath14 ) , eq .",
    "( [ eq1 ] ) gives the same result as our model gives .",
    "this demonstrates the validity of _ assumption 1_.     compare eq .",
    "( [ eq1 ] ) with model simulation result as in fig .",
    "[ fig4](c ) .",
    "the parameters are the same as in fig .",
    "we can see that eq .",
    "( [ eq1 ] ) fits the model well when @xmath10 is large ( @xmath14 ) , which indicate the validity of _ assumption 1_. ]    we now compute the limit of eq .",
    "( [ eq1 ] ) .",
    "because @xmath83 is the pdf of distribution @xmath36 which generates random positive integers , @xmath88 is absolute convergent , so @xmath89 . according to the assumption that the expectation corresponding to @xmath36 exists , @xmath90 is absolute convergent , so @xmath91 .",
    "note that @xmath92 , so @xmath93 . from these",
    ", we can extract the numerator of eq .",
    "( [ eq1 ] ) to 3 parts and have @xmath94    secondly , let s see the derivative of eq .",
    "( [ eq1 ] ) .",
    "notice that the numerator is an integral depending on parameters , we have @xmath95 hence @xmath96    the fact that the limit of the slope is zero , and the derivative is greater or equal to zero explains why all the slopes in our statistics and simulations are monotonically increasing and tend to zero when @xmath10 is large .",
    "notice that when @xmath10 is small , the slopes in our statistics and simulations are irregular .",
    "this is because _ assumption 1 _ is not satisfied .",
    "we found from the statistics and the simulation of our model that _",
    "n_-tuple power law does nt exist when @xmath10 is small .",
    "we need an estimation of the threshold of @xmath10 that _ n_-tuple power law appears when @xmath10 is greater than the threshold .",
    "following notations in the above sections , there are only @xmath97 possible unique _ n_-tuples . because @xmath32 is the probability that a newly generated _",
    "n_-tuple is a new one that has never appeared before , the expected number of unique _",
    "n_-tuples in the sequence @xmath38 with length @xmath8 is @xmath8 .",
    "so we have @xmath98 , i.e. @xmath99    we can easily infer the followings .    for",
    "any given @xmath10 , we can have a sufficiently large @xmath8 so that eq .",
    "( [ eq2 ] ) fails to hold . intuitively , for a given @xmath35 and a given @xmath10 , when the sequence length increases , the probability that a newly generated _",
    "n_-tuple did not occur before is decreasing , instead of being approximately a constant .",
    "this is going to be further addressed in the conclusion section .",
    "for any given @xmath8 , we can have a sufficiently small @xmath10 that eq .",
    "( [ eq2 ] ) fails to hold ; in other words , @xmath10 need to be sufficiently large so that eq .",
    "( [ eq2 ] ) can hold .",
    "therefore , we use eq .",
    "( [ eq2 ] ) to estimate the threshold of @xmath10 . in all the data we analyze in this paper",
    ", @xmath8 is very large and @xmath32 is not close to zero , so we have a simpler estimation form @xmath100    let s compare eq .",
    "( [ eq3 ] ) with actual statistic results . in fig .",
    "[ fig1 ] , we perform statistics on 15 novels of dickens , as english letter sequence . there are totally 17211736 letters , and 26 possible unique letters ( a - z ) , @xmath101 .",
    "we can see in fig .",
    "[ fig1 ] that _",
    "n_-tuple power law exists for about @xmath15 . in fig .",
    "[ fig2 ] , the dna sequence length is 25652954 , with 4 possible unique symbols ( atgc ) , @xmath102 , and we can see that _",
    "n_-tuple power law exists for about @xmath14 .",
    "this is an interesting result .",
    "it reveals the relation between power law and diversity . as mentioned above , in order to show power law , the number of unique elements in a sequence should not be too small or too large , i.e. a proper diversity should be maintained .",
    "a subtle problem should arouse some attention here .",
    "if simon s model is a sufficient and necessary condition for a power law curve , then violating the above inequality means violating simon s model hence there is no power law .",
    "unfortunately , simon s model is only a sufficient condition for power law , not a necessary one .",
    "this means this section is not a strict theoretical deduction .",
    "we hope future work can improve this .",
    "there are 4 parameters in our model , as mentioned in section  [ sec3.2 ] , the initial length @xmath34 , the number @xmath35 of unique symbols , the discrete distribution @xmath36 , and the maximum length @xmath37 .",
    "it s obvious that our model requires @xmath103 and @xmath104 .",
    "we did some sensitivity analyses and find that our model is not sensitive to @xmath34 , @xmath35 and @xmath37 . while other parameters remain the same , we test different values for these 3 parameters , for example , @xmath48 , @xmath105 , @xmath46 , @xmath106 , @xmath107 , @xmath108 , etc . , and find that _",
    "n_-tuple power law always exist in the simulations , with only the threshold of @xmath10 varies a little according to the discussions of the above section .    however , there are certain requirements for the distribution @xmath36 . as mentioned in section  [ sec3.1 ] ,",
    "in order to observe a power law distribution , the probability @xmath32 that a new unique element is introduced , should not be very close to 0 . according to eq .",
    "( [ eq1 ] ) , this requires that @xmath109 is not very close to 0 when @xmath10 is large , i.e. @xmath110 is not very close to 0 when @xmath10 is large . such a distribution can be a distribution corresponding to a large expectation ( e.g. an exponential distribution with expectation 50 as in fig .",
    "[ fig4 ] ) , a distribution that has a fat tail , or even a degenerate distribution that has only one large value .",
    "the number of each atgc in dna sequence is not the same .",
    "we calculated the entropy of human dna atgc data @xcite .",
    "the entropy is defined as @xmath111 , where @xmath112 is the portion of atgc in the sequence , @xmath113 .",
    "the entropy ranges from 1.959566 for chromosome 4 to 1.999227 for chromosome 19 with an average of 1.97733 and a standard deviation of 0.01084 .",
    "this stylized fact is reproduced with our model .",
    "atgc in our model initially follows uniform distribution .",
    "we calculate the entropy for 1000 simulation runs of our model , with the same parameters for that in fig .",
    "we find that after the growth process , the entropy of our model ranges from 1.74984 to 1.99991 with an average of 1.98894 and a standard deviation of 0.01652 .",
    "the symmetry breaking process is due to the selection at the early steps .",
    "we do a lot of _ n_-tuple zipf analyses to a very large @xmath10 in a wide variety of real data ranging covering english corpus , chinese corpus , computer program source code and binary file , music , and atgc sequence from human dna ( see supplement material @xcite ) .",
    "these analyses showed the trend that when @xmath10 increases to a certain value , there exists a power law for sure and the slope tends to zero .",
    "we also showed that there is no _ n_-tuple power law for random data by reshuffling the dna data .",
    "we perceive this _ n_-tuple scaling law feature in a variety of information carriers as that a meaningful `` motif '' in information translational carrier in each field needs a certain length of symbols to express a relatively complete `` sentence '' , hence a motif has a specific characteristic sequence length .    instead of modeling this _ n_-tuple power law feature in a 1-bit markov process",
    "@xcite , we set up a model to explain the _",
    "n_-tuple power law feature .",
    "the model is a simple copy and paste process , inspired by simon s model .",
    "the model is tuned to dna data and it showed its effectiveness in reproducing the _ n_-tuple power law feature .",
    "we hope this model could help to figure out how language and dna are generated .",
    "based on _ assumption 1 _ that _ case out _ are almost all new unique _ n_-tuples , we also calculated the zipf exponent and proved that it tends to zero , the same trend as real data shows .",
    "however , we hope future work can give a strict analysis for _ case out _ and _ assumption 1_. moreover , when the length of the sequence increases with our growth mechanism , the probability that _ case out _ is a new element decreases .",
    "@xcite discussed simon s model under this circumstance .",
    "we should point out here that real data have some aspects that this model does not always well address .",
    "we do a lot of analyses base on dna data .",
    "we do not calibrate this model to other data sources due to the consideration that analysis based on dna data already gives the main results of this model .",
    "calibrate this model to other data sources , which is quite time consuming , may not show something new .",
    "there are other features in empirical data .",
    "for example , in english corpus as letter sequences and chinese modern corpus as chinese character sequences , the arrival of a given symbol is a poisson process , while this is not the case for english corpus as word sequences , chinese ancient corpus and dna sequence .",
    "this model generated sequences , however , are always poisson processes ( see supplement material @xcite ) .",
    "we also find that long range correlation , which is found in noncoding region of real dna @xcite , does not exist in this model generated sequences ."
  ],
  "abstract_text": [
    "<S> _ n_-tuple power law widely exists in language , computer program code , dna and music . after a vast amount of zipf analyses of _ n_-tuple power law from empirical data , </S>",
    "<S> we propose a model to explain the _ </S>",
    "<S> n_-tuple power law feature existed in these information translational carriers . </S>",
    "<S> our model is a preferential selection approach inspired by simon s model which explained scaling law of single symbol in a sequence zipf analysis . </S>",
    "<S> the kernel mechanism is neat and simple in our model . </S>",
    "<S> it can be simply described as a randomly copy and paste process , that is , randomly select a random segment from current sequence and attach it to the end repeatedly . </S>",
    "<S> the simulation of our model shows that _ n_-tuple power law exists in model generated data . </S>",
    "<S> furthermore , two estimation equations : the zipf exponent and the minimal length of _ n_-tuple for power law appears all correspond to empirical data well </S>",
    "<S> . our model can also reproduce the symmetry breaking process of atgc number differences in dna data . </S>"
  ]
}
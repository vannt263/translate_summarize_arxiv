{
  "article_text": [
    "the intended semantics for intuitionistic logic is the brouwer - heyting - kolmogorov ( bhk ) interpretation , which holds that a proposition is true if proved .",
    "the systems of intuitionistic epistemic logic , the @xmath0  family introduced in @xcite , extend intuitionistic logic with an epistemic operator and interpret it in a manner reflecting the bhk semantics .",
    "the fundamental assumption concerning knowledge interpreted intuitionistically is that knowledge is the product of verification , where a verification is understood to be a justification sufficient to warrant a claim to knowledge which is not necessarily a strict proof .    in @xcite",
    "the notion of verification was treated intuitively . here",
    "we show that verification can also be given an arithmetical interpretation , thereby showing that the notion of verification assumed in an intuitionistic interpretation of knowledge has an exact model .    following gdel @xcite it is well known that intuitionistic logic can be embedded into the classical modal logic @xmath1  regarded as a provability logic .",
    "artemov @xcite formulated the logic of proofs , @xmath2 , and showed that @xmath1  in turn can be interpreted in @xmath2 , and that @xmath2  has an arithmetical interpretation as a calculus of explicit proofs in peano arithmetic @xmath3 .",
    ", the calculus of which is the modal logic , see @xcite . ]",
    "accordingly this makes precise the bhk semantics for intuitionistic logic .",
    "intuitionistic logic , then , can be regarded as an implicit logic of proofs , and its extension with an epistemic / verification operator in the systems @xmath4  and @xmath0  ( given in [ sec : iel ] ) can be regarded as logics of implicit proofs , verification and their interaction .",
    "this is of interest for a number of reasons .",
    "it shows that the notion of verification on which intuitionistic epistemic logic is based is coherent and can be made concrete , and does so in a manner consonant with the intended bhk interpretation of the epistemic operator .",
    "further , given intuitionistic logic s importance in computer science as well as the need for a constructive theory of knowledge , finding a precise provability model for verification and intuitionistic epistemic logic ( see [ sec : arithmetic - semantics ] ) is well - motivated .",
    "according to the bhk semantics a proposition , @xmath5 , is true if there is a proof of it and false if the assumption that there is a proof of @xmath5 yields a contradiction .",
    "this is extended to complex propositions by the following clauses :    * a proof of @xmath6 consists in a proof of @xmath5 and a proof of @xmath7 ; * a proof of @xmath8 consists in giving either a proof of @xmath5 or a proof of @xmath7 ; * a proof of @xmath9 consists in a construction which given a proof of @xmath5 returns a proof of @xmath7 ; * @xmath10 is an abbreviation for @xmath11 , and @xmath12 is a proposition that has no proof .",
    "the salient property of verification - based justification , in the context of the bhk semantics , is that it follows from intuitionistic truth , hence @xmath13 is valid on a bhk reading . since any proof is a verification , the intuitionistic truth of a proposition yields that the proposition is verified .    by similar reasoning the converse principle @xmath14",
    "is not valid on a bhk reading .",
    "a verification need not be , or yield a method for obtaining , a proof , hence does not guarantee the intuitionistic truth of a proposition .",
    "reflection expresses the factivity of knowledge in a classical language , intuitionistically factivity is expressed by @xmath15    the basic system of intuitionistic epistemic logic , incorporating minimal assumptions about the nature of verification , is the system @xmath4 .",
    "@xmath4  can be seen as the system formalising intuitionistic belief .",
    "the list of axioms and rules of @xmath4  consists of :    1 .",
    "axioms of propositional intuitionistic logic .",
    "2 .   @xmath16 3 .",
    "@xmath17    modus ponens .",
    "it is consistent with @xmath4  that false propositions can be verified .",
    "it is desirable , however , that false propositions not be verifiable ; to be a logic of knowledge the logic should reflect the truth condition on knowledge , i.e.  factivity  that it is not possible to know falsehoods .",
    "the system @xmath0  incorporates the truth condition and hence can be viewed as an intuitionistic logic of knowledge .",
    "the list of axioms and rules for @xmath0  are those for @xmath4  with the additional axiom :    1 .",
    "@xmath18 .    given [ ax : coref ] the idea that it is not possible to know a falsehood can be equivalently expressed by @xmath19 . ,",
    "@xmath20 or @xmath21 , all are equivalent to [ ax : tcond ] given [ ax : coref ] , see @xcite . ] for the following we will use this form of the truth condition in place of [ ax : tcond ] .",
    "kripke models were defined for both systems , and soundness and completeness shown with respect to them , see @xcite .",
    "the well known gdel translation yields a faithful embedding of the intuitionistic propositional calculus , @xmath22 , into the classical modal logic @xmath1 . by extending @xmath1  with a verification modality @xmath23",
    ", the embedding can be extended to @xmath4  and @xmath0 , and shown to remain faithful , see @xcite .",
    "@xmath24  is the basic logic of provability and verification .",
    "[ df : s4vmaxioms ] the list of axioms and rules of @xmath24  consists of :    1 .   the axioms of @xmath1  for @xmath25 .",
    "2 .   @xmath26 3 .",
    "@xmath27    1 .",
    "modus ponens 2 .",
    "@xmath25-necessitation @xmath28@xmath29    as with @xmath0  we add the further condition that verifications should be consistent .",
    "@xmath30  is @xmath24  with the additional axiom :  with @xmath31 instead of @xmath32 .",
    "the weaker axiom presented here is sufficient for the embedding ; one can readily check that the gdel translation of @xmath33 , @xmath34 , is derivable in @xmath30  as formulated here .",
    "the weaker axiom allows for a uniform arithmetical interpretation of verification . ]",
    "@xmath35 .",
    "kripke models for each system were outlined in @xcite and the systems shown to be sound and complete with respect to them .    for @xmath4  and",
    "@xmath0  their embedding into @xmath24  and @xmath30  respectively , is faithful . for an @xmath4  or @xmath0  formula @xmath36 , @xmath37 is the translation of @xmath36 according to the rule    _ box every sub - formula _    into the language of @xmath24  or @xmath30  respectively .",
    "[ thm : embedding ] the gdel translation faithfully embeds @xmath4and @xmath0  into @xmath24and @xmath30 , respectively : @xmath38    see @xcite .",
    "gdel @xcite suggested that the modal logic @xmath1  be considered as a provability calculus .",
    "this was given a precise interpretation by artemov , see @xcite , who showed that explicit proofs in peano arithmetic , @xmath3 , was the model of provability which @xmath1  described .",
    "the explicit counter - part of @xmath1  is the logic of proofs @xmath2  in which each @xmath25 in @xmath1  is replaced by a term denoting an explicit proof .",
    "since intuitionistic logic embeds into @xmath1  the intended bhk semantics for @xmath22  as an implicit calculus of proofs is given an explicit formulation in @xmath2 , and hence an arithmetical semantics .",
    "here we show that this arithmetical interpretation can be further extended to the logic of proofs augmented with a verification modality , providing @xmath24  and @xmath30 , and therefore @xmath4  and @xmath0  with an arithmetical semantics .",
    "similarly to the foundational picture regarding the relation between @xmath22 , @xmath1  and @xmath2  ( see @xcite ) we have that    @xmath39    the basic system of explicit proofs and verifications @xmath40  is defined thus :    [ df : lpvlanguage ]    the language of @xmath40  consists of :    1 .   the language of classical propositional logic ; 2 .   a verification operator @xmath23 ; 3 .",
    "_ proof variables _ , denoted by @xmath41 ; 4 .",
    "_ proof constants _ , denoted by @xmath42 ; 5 .",
    "_ operations on proof terms _ , building complex proof terms from simpler ones of three types : 1 .   binary operation @xmath43 called _ application _ ; 2 .   binary operation @xmath44 called _ plus _ ; 3 .",
    "unary operation @xmath45 called _ proof checker _ ; 6 .",
    "_ proof terms _ : any proof variable or constant is a proof term ; if @xmath46 and @xmath47 are proof terms so are @xmath48 , @xmath49 and @xmath50 . 7 .",
    "_ formulas _ : a propositional letter @xmath51 is a formula ; if @xmath5 and @xmath7 are formulas then so",
    "are @xmath10 , @xmath6 , @xmath8 , @xmath9 , @xmath52 , @xmath53 .    formulas of the type @xmath53 are read as `` _ _ @xmath46 is a proof @xmath5 _ _ '' .",
    "[ df : lpvmaxioms ] the list of axioms and rules of @xmath40  consists of :    1 .   axioms of propositional classical logic .",
    "2 .   @xmath54 3 .",
    "@xmath55 4 .",
    "@xmath56 5 .",
    "@xmath57 , @xmath58 6 .",
    "@xmath26 7 .",
    "@xmath59    1 .",
    "modus ponens 2 .",
    "axiom necessitation : @xmath60@xmath61where @xmath5 is any axiom and @xmath62 is some proof constant .",
    "[ df : lpvaxioms ] the system @xmath63  is @xmath40  with the additional axiom :    1 .",
    "@xmath64    a _ constant specification _ ,",
    "@xmath65 , is a set @xmath66 of formulas such that each @xmath67 is an axiom from the lists above , and each @xmath68 is a proof constant .",
    "this set is generated by each use of the constant necessitation rule in an @xmath40  or @xmath63  proof .",
    "the axiom necessitation rule can be replaced with a ` ready made ' constant specification which is added to @xmath40  or @xmath63  as a set of extra axioms .",
    "for such a @xmath65  let @xmath69 and @xmath70 mean @xmath40  and @xmath63 , respectively , minus the axiom necessitation rule plus the members of @xmath65  as additional axioms .    a proof term , @xmath46 ,",
    "is called a _ ground term _ if it contains no proof variables , but is built only from proof constants and operations on those constants .",
    "@xmath40  and @xmath63  are able to internalise their own proofs , that is if @xmath71 then for some term @xmath72 @xmath73 see @xcite . as a consequence @xmath40  and @xmath63  have the constructive necessitation rule : for some ground proof term @xmath46 ,    @xmath74 @xmath75    this yields in turn :    [ cor : v - nec ] @xmath23-necessitation @xmath28@xmath76is derivable in @xmath40  and @xmath63",
    ".    assume @xmath77 , then by constructive necessitation @xmath78 for some ground proof term @xmath46 , hence by [ exax : interaction ] @xmath79 .",
    "note that the deduction theorem holds for both @xmath40  and @xmath63 .",
    "we give an arithmetical interpretation of @xmath40  and @xmath63  by specifying a translation of the formulas of @xmath40  and @xmath63  into the language of peano arithmetic , @xmath3 .",
    "we assume that a coding of the syntax of @xmath3  is given .",
    "@xmath80 denotes a natural number and @xmath81 the corresponding numeral .",
    "@xmath82 denotes the numeral of the gdel number of a formula @xmath36 . for readability",
    "we suppress the overline for numerals and corner quotes for the gdel number of formulas , and trust that the appropriate number or numeral , as context requires , can be recovered .",
    "[ df : prf ] a _ normal proof predicate _ is a provably @xmath83 formula @xmath84 such that for every arithmetical sentence @xmath36 the following holds :    1 .",
    "@xmath85 2 .",
    "a proof proves only a finite number of things ; i.e.  for every @xmath86 the set @xmath87 is finite .",
    "is the set of theorems proved by the proof @xmath86 . ]",
    "proofs can be joined into longer proofs ; i.e.  for any @xmath86 and @xmath88 there is an @xmath80 s.t .",
    "@xmath89 .",
    "an example of a numerical relation that satisfies the definition of @xmath84 is the standard proof predicate @xmath90 the meaning of which is    _ `` x is the gdel number of a derivation of a formula with the gdel number y '' . _",
    "[ thm : prffunctions ] for every normal proof predicate @xmath84 there exist recursive functions @xmath91 , @xmath92 and @xmath93 such that for any arithmetical formulas @xmath36 and @xmath94 and all natural numbers @xmath86 and @xmath80 the following formulas hold :    1 .",
    "@xmath95 2 .",
    "@xmath96 ,   @xmath97 3 .",
    "@xmath98    see @xcite .",
    "[ df : ver ] a _ verification predicate _ is a provably @xmath99 formula @xmath100 satisfying the following properties , for arithmetical formulas @xmath36 and @xmath94 :    1 .",
    "@xmath101 2 .   for each _",
    "n _ , @xmath102 .    these are properties which a natural notion of verification satisfies .",
    "let @xmath103 be the standard provability predicate , is a proof of @xmath36 if @xmath36 occurs somewhere in @xmath51 .",
    "] and @xmath104 be the statement which expresses that @xmath3  is consistent , i.e.  @xmath105 .",
    "@xmath106 correspondingly is @xmath107 .",
    "[ ex : vermeaning ]  the following are examples of a verification predicate @xmath100 :    1 .",
    "`` provability in @xmath3 '' , i.e.  @xmath108 ; for a formula @xmath36 @xmath109 is @xmath110 .",
    "2 .   `` provability in @xmath3  + ( @xmath3 ) '' i.e.  @xmath111 ; one example of a formula for which @xmath100 holds in this sense is just the formula @xmath104 .",
    "such verification is capable of verifying propositions not provable in @xmath3 .",
    "`` provability in @xmath3  + @xmath112(@xmath3 ) '' i.e.  @xmath113 ; an example of a verifiable formula which is not provable in @xmath3 , is the formula @xmath106 .",
    "such verification is capable of verifying false propositions .",
    "@xmath114 , i.e.  @xmath115 ; that is for any formula @xmath36 @xmath116 , hence any @xmath36 is verified .",
    "@xmath117 .",
    "assume @xmath118 , then by [ df : prf ] there is an @xmath80 such that @xmath119 is true , hence @xmath120 , and by [ df : ver ] part 2 @xmath121 .",
    "we now define an interpretation of the language of @xmath40  into the language of peano arithmetic .",
    "an arithmetical interpretation takes a formula of @xmath40  and returns a formula of peano arithmetic ; we show the soundness of such an interpretation , if @xmath36 is valid in @xmath40  then for any arithmetical interpretation @xmath122 @xmath123 is valid in @xmath3 .  or @xmath30 . ]",
    "[ df : lparithmeticintr ] an _ arithmetical interpretation _ for @xmath40  has the following items :    * a normal proof predicate , @xmath124 , with the functions ( @xmath125 ) , ( @xmath125 ) and ( @xmath126 ) as in [ df : prf ] and [ thm : prffunctions ] ; * a verification predicate , @xmath127 , satisfying the conditions in [ df : ver ] ; * an evaluation of propositional letters by sentences of @xmath3 ; * an evaluation of proof variables and constants by natural numbers .",
    "an arithmetical interpretation is given inductively by the following clauses :    @xmath128    @xmath129    let @xmath130 be a set of @xmath40  formulas , then @xmath131 is the set of all @xmath123 s such that @xmath132 . for a constant specification , @xmath133 , a _",
    "@xmath133-interpretation _ is an such that all formulas from @xmath134 are true .",
    "an @xmath40  formula is _ valid _ if @xmath123 is true under all interpretations @xmath122 .",
    "@xmath36 is _ provably valid _",
    "if @xmath135 under all interpretations @xmath122 . similarly , @xmath36 is _ valid under constant specification @xmath133 _",
    "if @xmath123 is true under all @xmath133-interpretations , and @xmath36 is _ provably valid under constant specification @xmath133 _ if @xmath135 under any @xmath133-interpretation @xmath122 .",
    "[ thm : arithmetic - sound - lpvm ] for any with a verification predicate as in [ df : ver ] any @xmath40-@xmath65  theorem , @xmath36 , is provably valid under constant specification @xmath133 : @xmath136    by induction on derivations in @xmath40 . the cases of the @xmath2  axioms are proved in @xcite .",
    "@xmath137^ * \\equiv { \\ensuremath{\\mathsf{ver}}}(f { \\rightarrow}g ) { \\rightarrow}({\\ensuremath{\\mathsf{ver}}}(f ) { \\rightarrow}{\\ensuremath{\\mathsf{ver}}}(g)).\\ ] ]    but @xmath101 by [ df : ver ] .",
    "@xmath138^ * \\equiv { \\ensuremath{\\mathsf{prf}}}(t^ * , f^ * ) { \\rightarrow}{\\ensuremath{\\mathsf{ver}}}(f^*).\\ ] ]    likewise @xmath139 holds by [ df : ver ] .",
    "this arithmetical interpretation can be extended to @xmath63 .",
    "everything is as above except to [ df : ver ] we add the following item :    [ df : verlpv ]    1 .   for any",
    "n _ , @xmath140    13 of [ ex : vermeaning ] remain examples of a verification predicate which also satisfies the above consistency property . in each case",
    "respectively @xmath141 is    1 .",
    "@xmath107 2 .",
    "@xmath142 , i.e.  @xmath143 3 .",
    "@xmath144 , i.e.  @xmath145 .",
    "all of these are false in the standard model of @xmath3 , and hence not provable in @xmath3 , hence for each @xmath80 @xmath146 .",
    "@xmath147 , is not an example of a verification predicate for @xmath63  in the sense of [ df : verlpv ] : @xmath141 would be provable in @xmath3 , and hence there would be an @xmath80 for which @xmath148 holds , which contradicts [ df : verlpv ] .",
    "[ thm : arithmetic - sound - lpv ] for any with a verification predicate as in [ df : verlpv ] , if @xmath36 is an @xmath63-@xmath65  theorem then it is provably valid under constant specification @xmath133 : @xmath149    add to the proof of [ thm : arithmetic - sound - lpvm ] the following case :    3[@xmath150 @xmath151^ * \\equiv \\neg { \\ensuremath{\\mathsf{prf}}}(n , { \\ensuremath{\\mathsf{ver}}}(\\bot)).\\ ] ]    @xmath146 holds by [ df : verlpv ] .",
    "we give a sequent formulation of @xmath24  and @xmath30 .",
    "we will denote the sequent formulations by @xmath152 , @xmath153  respectively .",
    "a sequent is a figure , @xmath154 , in which @xmath155 are multi - sets of formulas .",
    "[ df : sivvmg ]    the axioms for the system @xmath152  are :    [ [ axioms ] ] axioms + + + + + +    [ cols= \" < , < , < , < , < \" , ]     [ [ interaction - rule ] ] interaction - rule + + + + + + + + + + + + + + + +    l    [ df : sivvg ]    the system @xmath153  is the system @xmath152  with the additional axiom :    [ [ weak - inconsistency - elimination ] ] weak inconsistency elimination + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    l    soundness can be shown by induction on the rules of @xmath152  and @xmath153 .",
    "completeness and cut - elimination can be shown in a manner similar to that of @xcite .",
    "here we show that each @xmath25 in an @xmath24  or @xmath30  theorem can be replaced with a proof term so that the result is a theorem of @xmath40  or @xmath63 , and hence that @xmath4  and @xmath0  each have a proof interpretation . the converse , that for each @xmath40  or @xmath63  theorem if all the proof terms are replaced with @xmath25 s the result is a theorem of @xmath24  or @xmath30  also holds .",
    "the _ forgetful projection _ , @xmath156 of an @xmath40  or @xmath63  formula is the result of replacing each proof term in @xmath36 with a @xmath25 .",
    "@xmath157 respectively .    by induction on @xmath24  derivations .",
    "the forgetful projections of [ exax : application , exax : plus , exax : posintsp , exax : ref , exax : interaction ] are @xmath158 , @xmath159 , @xmath160 , @xmath161 and @xmath162 respectively , which are all provable in @xmath24 .",
    "the forgetful projection of @xmath163 is @xmath32 which is provable in @xmath30 .",
    "the rules are obvious .",
    "a _ realisation _ , @xmath164 , of an @xmath24  or @xmath30  formula @xmath36 is the result of substituting a proof term for each @xmath25 in @xmath36 , such that if @xmath165 then @xmath166 respectively .",
    "occurrences of @xmath25 in @xmath36 in @xmath167 , @xmath168 , @xmath169 , @xmath170 , @xmath171 , @xmath172 and @xmath173 have the same polarity as the occurrence of @xmath25 in @xmath36 .",
    "occurrences of @xmath25 in @xmath36 from @xmath174 , @xmath175 and @xmath176 have the polarity opposite to that of the occurrence of @xmath25 in @xmath36 .",
    "a realisation @xmath177 is called _ normal _ if all negative occurrences of @xmath25 are realised by proof variables .    the informal reading of the @xmath1  provability modality @xmath25 is existential , @xmath178 means ` there is a proof of @xmath36 ' ( as opposed to the kripke semantic reading which is universal , i.e.  ` @xmath36 holds in all accessible states ' )",
    ", normal realisations are the ones which capture this existential meaning , see @xcite .",
    "the realisation theorem , [ thm : sivvmrealisation ] , shows that if a formula @xmath36 is a theorem of @xmath24  then there is a substitution of proof terms for every @xmath25 occurring in @xmath36 such that the result is a theorem of @xmath40 .",
    "this means that every @xmath25 in @xmath24  can be thought of as standing for a ( possibly complex ) proof term in @xmath40 , and hence , by [ thm : arithmetic - sound - lpvm ] , implicitly represents a specific proof in @xmath3 .",
    "the proof of the realisation theorem consists in a procedure by which such a proof term can be built , see @xcite .",
    "given a ( cut - free ) proof in @xmath152  we show how to assign proof terms to each of the @xmath25 s occurring in the @xmath152  proof so that each sequent in the proof corresponds to a formula provable in @xmath40 ; this is done by constructing a hilbert - style @xmath40  proof for the formula corresponding to each sequent , so as to yield the desired realisation .",
    "occurrences of @xmath25 in an @xmath152  derivation can be divided up into _ families _ of related occurrences .",
    "occurrences of @xmath25 are related if they occur in related formulas of premises and conclusions of rules .",
    "a family of related occurrences is given by the transitive closure of such a relation .",
    "a family is called _ essential _ if it contains at least one occurrence of @xmath25 which is introduced by the @xmath179 rule .",
    "a family is called _ positive ( respectively negative ) _ if it consists of positive ( respectively negative ) occurrences of @xmath25 .",
    "it is important to note that the rules of @xmath152  preserve the polarities of @xmath25 .",
    "any @xmath25 introduced by @xmath179 is positive , while @xmath25 s introduced by @xmath180 and the interaction rule are negative .",
    "[ thm : sivvmrealisation ] if @xmath181 then @xmath182 for some normal realisation  @xmath177 .",
    "if @xmath183 then there exists a cut - free sequent proof , @xmath184 , of the sequent @xmath185 . the realisation procedure described below ( following @xcite ) describes how to construct a normal realisation @xmath177 for any sequent in @xmath184 .",
    "* step 1 . * in every negative family and non - essential positive family replace each occurrence of @xmath186 by @xmath187 for a fresh proof variable @xmath126 .",
    "* step 2 . * pick an essential family , @xmath188 , and enumerate all of the occurrences of the rule @xmath179 which introduce @xmath25 s in this family .",
    "let @xmath189 be the number of such introductions .",
    "replace all @xmath25 s of family @xmath188 by the proof term @xmath190 where @xmath191 does not already appear as the result of a realisation .",
    "each @xmath191 is called a _ provisional _ variable which will later be replaced with a proof term .",
    "after this step has been completed for all families of @xmath25 there are no @xmath25 s left in @xmath184 .    * step 3 .",
    "* this proceeds by induction on the depth of a node in @xmath184 . for each sequent in @xmath184",
    "we show how to construct an @xmath40  formula , @xmath164 , corresponding to that sequent , such that @xmath182 .",
    "the realisation of a sequent @xmath192 is an @xmath40  formula , @xmath193 , of the following form : @xmath194 the @xmath195 s and @xmath196 s denote realisations already performed .",
    "let @xmath197 stand for conjunctions of formulas and @xmath198 for disjunctions of formulas ; @xmath199 prefixed with a @xmath23 stands for conjunctions of @xmath23ed formulas , i.e.  @xmath200 .",
    "similarly @xmath201 stands for @xmath202 .",
    "the cases realising the rules involving the propositional connectives and @xmath25 are shown in @xcite .",
    "@xcite describes a modification of the procedure which gives only a polynomial increase . ]",
    "( including how to replace provisional variables with terms ) .",
    "let us check the rules involving @xmath23 .",
    "@xmath203    now @xmath204 , hence by the induction hypothesis the realisation of the premise of the rule , @xmath205 , is provable in @xmath40 , and hence : @xmath206    @xmath207    since @xmath208 is provable in @xmath40  we have that @xmath209 by the induction hypothesis the realisation of the formula corresponding to the premise of the rule , @xmath210 , is provable , and hence : @xmath211    * step 4 . * after applying the above three steps each @xmath212 has been translated into the language of @xmath40 , and been shown to be derivable in @xmath40 .",
    "hence for the formula corresponding to the root sequent , @xmath213 , we have that @xmath214 since @xmath215 @xmath216    hence if @xmath181 there is a normal realisation @xmath177 such that @xmath182 .",
    "[ thm : sivvrealisation ] if @xmath217 then @xmath218 for some normal realisation  @xmath177 .",
    "we simply add the following case to step 3 of [ thm : sivvmrealisation ] .",
    "the rest is the same .",
    "3[sequent @xmath219 is the conclusion of the weak inconsistency elimination : @xmath220 @xmath221    @xmath222 , since @xmath223 , hence by the induction hypothesis the realisation of the premise of the rule , @xmath224 , is provable in @xmath63 , and hence : @xmath225    we are finally in a position to show that the systems of intuitionistic epistemic logic , @xmath4  and @xmath0 , do indeed have an arithmetical interpretation .    [ df : prfrealisable ] a formula of @xmath4  or @xmath0  is called _ proof realisable _ if @xmath226 is @xmath40 , respectively @xmath63 , valid under some normal realisation @xmath177 .",
    "it follows that @xmath4  and @xmath0  are sound with respect to proof realisability .",
    "[ thm : prfrealisable ] if @xmath227 then @xmath36 is proof realisable .    by [ thm : embedding ] if @xmath228 then @xmath229 , respectively , and by [ thm : sivvmrealisation ] and [ thm : sivvrealisation ] if @xmath229 then @xmath230 respectively .    by [ thm :",
    "arithmetic - sound - lpvm , thm : arithmetic - sound - lpv ] @xmath40  and @xmath63  are sound with respect to their arithmetical interpretation , and hence by [ thm : prfrealisable ] so are @xmath4  and @xmath0 .",
    "intuitionistic epistemic logic has an arithmetical interpretation , hence an interpretation in keeping with its intended bhk reading .",
    "naturally verification in peano arithmetic , as outlined above , is not the only interpretation of verification for which the principles of intuitionistic epistemic logic are valid .",
    "@xmath4  and @xmath0  may be interpreted as logics of the interaction between conclusive and non - conclusive evidence , e.g.  mathematical proof vs.  experimental confirmation , or observation vs.  testimony .",
    "the question about exact interpretations for other intuitive readings of these logics is left for further investigation ."
  ],
  "abstract_text": [
    "<S> intuitionistic epistemic logic introduces an epistemic operator , which reflects the intended bhk semantics of intuitionism , to intuitionistic logic . </S>",
    "<S> the fundamental assumption concerning intuitionistic knowledge and belief is that it is the product of verification . </S>",
    "<S> the bhk interpretation of intuitionistic logic has a precise formulation in the logic of proofs and its arithmetical semantics . </S>",
    "<S> we show here that this interpretation can be extended to the notion of verification upon which intuitionistic knowledge is based , thereby providing the systems of intuitionistic epistemic logic extended by an epistemic operator based on verification with an arithmetical semantics too . </S>"
  ]
}
{
  "article_text": [
    "in this paper we study vehicle routing algorithms for a novel model of urban transportation system , which involves blending customer - driven vehicles with a taxi service .",
    "our proposed car - share system is an example of a mobility - on - demand ( mod ) system , and aims at providing urban dwellers with the tailored service of a private automobile , while utilizing limited urban land more efficiently ( e.g. , by minimizing the automobiles that sit unused ) @xcite . in our system ,",
    "a customer arrives at one of many designated stations and is transported to any other designated station , either by driving themselves , or by being driven by an employed driver .",
    "the system allows for one way trips , so that customers do not have to return to the same stations from which they picked up their vehicles . in a typical one way car - share system (",
    "e.g. car2go ) it has been observed empirically  @xcite , and shown analytically  @xcite , that vehicles become unbalanced , accumulating at popular destinations and becoming depleted at less popular ones .",
    "our proposed system addresses this problem by employing rebalancing drivers to drive vehicles from the popular destinations to the unpopular destinations .",
    "however , with this approach the rebalancing drivers themselves become unbalanced , and hence we need to `` rebalance the rebalancers '' by letting them travel back to the popular destinations with a customer . in such a trip , the rebalancing driver operates the vehicle as a taxi , driving the customer to their desired destination .",
    "the system is illustrated in fig .",
    "[ fig : load_balancing ] .",
    "the main difficulty in such a system , and the focus of this paper , is how to determine the rebalancing trips and the taxi trips in order to minimize wasted trips , while providing the best possible customer experience .",
    "specifically , the contribution of this paper is twofold : we study routing algorithms for the mod system illustrated in fig .",
    "[ fig : load_balancing ] that ( 1 ) minimize the number of rebalancing vehicles traveling in the network , ( 2 ) minimize the number of drivers needed , and ( 3 ) ensure that the number of waiting customers remains bounded .",
    "second , leveraging our analysis , we determine the relation between the minimum number of drivers needed and the minimum number of vehicles needed to ensure stability in the system ; these relations would provide a system designer with essential structural insights to develop business models .",
    "interestingly , our simulations suggest that , in euclidean network topologies , one would need between 1/3 and 1/4 as many drivers as vehicles , and that this fraction decreases to about 1/5 if one allows up to 3 - 4 drivers to take a trip with a customer .",
    "this paper builds upon the previous work of the authors in designing optimal rebalancing policies for mod systems leveraging _ autonomous operation _ of the vehicles  @xcite , i.e. , without the need of human drivers . on the contrary ,",
    "the system proposed in this paper would use technology that is available today ( i.e. , by employing human drivers instead of autonomous cars ) , and our finding are readily applicable to _ existing _ one - way car - share systems , which already employ drivers to rebalance cars using heuristic methods  @xcite .",
    "furthermore , by comparing the results in this paper with those in @xcite , one can quantitatively assess the relative benefits of `` hi - tech '' autonomous mod systems versus `` low - tech '' driver - based mod systems .",
    "the problem addressed in this paper has also many characteristics in common with the well - known dynamic traffic assignment ( dta ) problem @xcite . the key difference between rebalancing in mod systems and",
    "the dta problem is that in the former the optimization is over the empty vehicle trips ( i.e. , the rebalancing trips ) rather than the passenger carrying trips .",
    "the rest of the paper is structured as follows . in section  [ sec : model ]",
    "we present a model for our system with customers , vehicles , and drivers represented as a continuous fluid , and we formally state the problem of rebalancing the vehicles and the drivers . in section  [ sec : properties ] we ( i ) study the well - posedness of the model and characterize its set of equilibria ; ( ii ) determine the minimum number of vehicles and drivers needed to meet the customer demand ; and ( iii ) show that with rebalancing vehicles and drivers the system is indeed locally stable ( i.e. , stable within a neighborhood of the nominal conditions ) . in section",
    "[ sec : opt_reb ] we show how to optimally route the rebalancing vehicles and drivers so that stability ( in terms of boundedness of the number of waiting customers ) is ensured while minimizing the number of rebalancing vehicles traveling in the network and the number of rebalancing drivers needed ; remarkably , these two objectives are aligned , and one can find the optimal rebalancing strategy by solving two decoupled linear programs . in section  [ sec :",
    "sim ] we study the relation between the minimum number of drivers needed and the minimum number of vehicles needed .",
    "finally , in section  [ sec : conc ] we give conclusions and discuss future research directions .",
    ".description of notation for station @xmath0 [ cols=\"^,<\",options=\"header \" , ]",
    "in our prior work  @xcite we proposed a fluid model for mobility - on - demand systems and formulated a policy to optimally rebalance vehicles assuming that they could operate autonomously . in this paper",
    "we consider rebalancing the vehicles through the use of dedicated personnel that are employed to drive the vehicles . in this section",
    "we extend the fluid model in  @xcite to capture the later scenario .",
    "* basic model : * the model in @xcite can be formalized as follows .",
    "consider a set of @xmath1 stations , @xmath2 , defined over an extended geographical area ( see figure  [ fig : load_balancing ] ) .",
    "since the model is a fluid approximation , the number of customers , vehicles , and drivers are represented by real numbers .",
    "customers arrive at station @xmath0 at a constant rate @xmath3 .",
    "the number of customers at station @xmath0 at time @xmath4 is @xmath5 , and the number of vehicles waiting idle at station @xmath0 at time @xmath4 is @xmath6 .",
    "the total number of vehicles in the system is @xmath7 .",
    "the fraction of customers at station @xmath0 whose destination is station @xmath8 is @xmath9 ( where @xmath10 , @xmath11 , and @xmath12 ) .",
    "the travel time from station @xmath0 to station @xmath8 is @xmath13 .",
    "when there are both customers and vehicles at station @xmath0 ( i.e. , @xmath14 and @xmath15 ) , then the rate at which customers ( and hence vehicles ) leave station @xmath0 is @xmath16 ; when , instead , @xmath17 but @xmath18 the departure rate is @xmath19 . a necessary condition for the total number of customers at station @xmath0 to remain bounded is that @xmath20 ; we will assume @xmath21 throughout the paper ( the case @xmath22 can be addressed with techniques similar to the ones introduced in this paper and is omitted ) .    from  @xcite",
    ", we showed that a station is in need of rebalancing if @xmath23 .",
    "this can be easily understood by noting that @xmath19 is the rate at which vehicles leave station @xmath0 , while @xmath24 is the rate at which vehicles arrive at station @xmath0 . in what follows",
    "we assume that @xmath25 and thus each station is in need of rebalancing .",
    "we comment further on this assumption in remark  [ rem : balanced_stations ] .    * rebalancing vehicles : * in order to rebalance the number of vehicles @xmath26 at each station , vehicles without customers will be driven between stations using hired human drivers .",
    "the number of drivers waiting at station @xmath0 is @xmath27 and the total number of drivers in the system is @xmath28 . in order to send a vehicle without a customer on a rebalancing trip from station @xmath0 to station @xmath8",
    ", there must be a driver present at station @xmath0 .",
    "we let @xmath29 denote the rate at which we send vehicles from station @xmath0 to station @xmath8 when vehicles and drivers are available at station @xmath0",
    ". the total rate at which station @xmath0 sends vehicles without customers is @xmath30 , where @xmath31 .",
    "we let @xmath32 denote the matrix with entries given by @xmath33 .",
    "these trips are shown in figure  [ fig : load_balancing ] as vehicles with red dots in them .    * rebalancing drivers : * finally , we must rebalance the drivers in the network , as they will tend to accumulate at some stations and become depleted at others .",
    "this is done as follows .",
    "if a driver would like to make a trip from station @xmath0 to station @xmath8 , it can drive a car _ for _ a customer on a trip from @xmath0 to @xmath8 , thereby acting as a taxi driver for that trip .",
    "this allows the driver to make the journey from station @xmath0 to station @xmath8 by `` hitching a ride '' on a passenger - carrying trip , but without negatively affecting the customer experience .",
    "we quantify this using two sets of variables .",
    "the variables @xmath34 give the rate at which drivers are sent from station @xmath0 to station @xmath8 when there are idle drivers available at station @xmath0 .",
    "we let @xmath35 denote the matrix with entries given by @xmath36 and assume @xmath37 .",
    "the quantities @xmath38 $ ] give the fraction of customers making the trip from station @xmath0 to @xmath8 that would be willing to use the taxi mode of service on their trip .",
    "the remaining fraction of customers @xmath39 would prefer to drive themselves on their trip .",
    "thus , @xmath40 imposes a constraint on the largest value of @xmath36 . in what follows",
    "we assume that the @xmath40 are such that there are enough customer trips available to rebalance the drivers .",
    "in proposition  [ prop : feas_exist ] we give a necessary and sufficient condition on the @xmath40 such that this is true .",
    "these trips are shown in figure  [ fig : load_balancing ] as vehicles with red and yellow dots in them .",
    "the notation is summarized in table  [ tab : parameters ] .",
    "we are now ready to write the differential equations governing the evolution of the number of vehicles , customers , and drivers at each station . in order to write the expressions more compactly",
    ", we introduce the following notation : @xmath41 ( in other words , @xmath42 denotes the number of vehicles that _ were _ present at station @xmath8 , specifically @xmath43 time units _ prior _ to the current time . )",
    "then , we can write the customer dynamics at station @xmath0 as @xmath44 defining the heaviside function as @xmath45 the customer dynamics can be written as @xmath46    the rate of change of vehicles at station @xmath0 can be written as the sum of four components :    1 .",
    "the rate at which customer - carrying vehicles depart station @xmath0 : @xmath47 which can be written more compactly as @xmath48 2 .   the rate at which customer - carrying vehicles arrive at station @xmath0 : @xmath49 3 .",
    "the rate at which vehicles without a customer ( rebalancing vehicles ) depart station @xmath0 , given by @xmath50 ; 4 .",
    "the rate at which vehicles without a customer ( rebalancing vehicles ) arrive at station @xmath0 , given by @xmath51 .",
    "thus , the vehicle dynamics can be written as @xmath52    finally , the dynamics for the drivers contains four components .",
    "the first two components are identical to those of the rebalancing vehicles , given by 3 ) and 4 ) above .",
    "( this is due to the fact that each rebalancing vehicle contains a driver ) .",
    "the third component is the rate at which rebalancing drivers depart station @xmath0 ( by driving customer carrying vehicles ) : @xmath53 .",
    "the fourth term is the rate at which rebalancing drivers arrive at station @xmath0 with a customer : @xmath54 . since drivers rebalance by driving vehicles on customer trips , we have from the customer dynamics @xmath55 that @xmath56 however , we will consider fixed values of @xmath36 , and since @xmath21 , we simply need to enforce the more stringent constraint @xmath57 .",
    "therefore , the @xmath58 dynamics can be written as @xmath59    putting everything together , we can write a set of nonlinear , time - delay differential equations describing the evolution of customers and vehicles in the system as @xmath60 where @xmath61 ; the initial conditions satisfy @xmath62 , @xmath63 for @xmath64 , @xmath65 with @xmath66 for at least one @xmath67 ,",
    "@xmath68 with @xmath69 for at least one @xmath67 , and @xmath70 and @xmath71 . the optimization variables @xmath32 and @xmath35 are constrained as follows : @xmath72    the problem we wish to solve is as follows : find an _",
    "optimal _ vehicle rebalancing assignment @xmath32 and driver rebalancing assignment @xmath35 that simultaneously    1 .",
    "minimizes the number of rebalancing vehicles traveling in the network , 2 .   minimizes the number of drivers needed , _ and _ 3 .",
    "ensures that the number of waiting customers remains bounded .    note",
    "that this is a multi - objective optimization , and thus it is not clear that one can both minimize the number of rebalancing vehicles in the network and the number of drivers needed .",
    "however , it will turn out that these two objectives are aligned , and one can find an assignment @xmath73 that minimizes both objectives .",
    "in this section we first discuss the well - posedness of model by showing two important properties , namely existence of solutions and invariance of the number of vehicles and rebalancing drivers along system trajectories .",
    "then , we characterize the equilibria , we determine the minimum number of vehicles and drivers to ensure their existence , and we give a necessary and sufficient condition on the  user s preference \" @xmath40 such that there are enough customer trips available to rebalance the drivers .",
    "finally , we show that rebalancing vehicles and drivers give rise to equilibria that are locally ( i.e. , within a neighborhood of the nominal conditions ) stable .",
    "the fluid model   is nonlinear , time - delayed , and the right - hand side is discontinuous . due to the discontinuity , we need to analyze the model within the framework of filippov solutions ( see , e.g. , @xcite ) .",
    "the following proposition verifies that the fluid model is well - posed .",
    "[ thrm : inv ] for the fluid model  , the following hold :    1 .   for every initial condition ,",
    "there exist continuous functions @xmath74 , @xmath75 , and @xmath76 @xmath77 , satisfying the differential equations   in the filippov sense .",
    "the total number of vehicles and rebalancing drivers is invariant for @xmath78 and is equal , respectively , to @xmath79 and @xmath80 .    to prove the first claim",
    ", it can be checked that all assumptions of theorem ii-1 in  @xcite for the existence of filippov solutions to time - delay differential equations with discontinuous right - hand side are satisfied , and the claim follows .    as for the second claim , the proof of the invariance of",
    "the number of vehicles is virtually identical to the one of proposition 3.1 in @xcite and is omitted in the interest of brevity .",
    "we prove next the invariance of the number of rebalancing drivers .",
    "let @xmath81 , where @xmath78 , be the number of rebalancing drivers in - transit from station @xmath0 to station @xmath8 ( i.e. , the rebalancing drivers for which the last station visited is @xmath0 and the next station they will visit is @xmath8 ) . clearly , @xmath82 .",
    "now , the total number @xmath83 of rebalancing drivers in the system at time @xmath61 is given , by definition , by @xmath84 .",
    "the number of in - transit rebalancing drivers at time @xmath4 is given by the integral over the last @xmath85 time units ( i.e. , the time to get from station @xmath0 to station @xmath8 ) of the rebalancing driver departure _ rate _ from station @xmath0 to station @xmath8 .",
    "such departure rate is the sum of the departure rate of rebalancing vehicles ( since each rebalancing vehicle contains a rebalancing driver ) and of the departure rate of rebalancing drivers that drive customer - carrying vehicles ; hence , one can express @xmath81 as @xmath86 by applying the leibniz integral rule , one can write @xmath87 therefore , one immediately obtains , for @xmath78 , @xmath88    this proves the claim .",
    "the following result characterizes the equilibria of model  .",
    "recall that no station is exactly balanced , and thus @xmath23 , for all @xmath89 .",
    "[ cor : gen ] let @xmath90 be the set of assignments @xmath73 that verify the equations @xmath91 for each @xmath67 , where @xmath92 .",
    "moreover , let @xmath93 if @xmath94 , then no equilibrium exists . if @xmath95 , there are two cases :    1 .   if @xmath96 and @xmath97 , then the set of equilibria is@xmath98 where @xmath99 and @xmath100 .",
    "2 .   if @xmath101 or @xmath102 , then no equilibrium exists .    to prove the theorem , we set @xmath103 , @xmath104 , and @xmath105 for all @xmath77 . from the @xmath103 equations we obtain @xmath106 since @xmath107 , the above equations have a solution only if @xmath108 setting @xmath104 , combined with and the fact that in equilibrium @xmath109 and @xmath110 is a positive constant , we obtain @xmath111 where @xmath112 .",
    "finally , setting @xmath113 , combined with the fact that @xmath114 in equilibrium , we obtain @xmath115    now , consider any station @xmath0 , and note that by assumption we have @xmath116 . if @xmath117 then from   we see that @xmath118 in equilibrium . alternatively ,",
    "if @xmath119 , then from   we see that @xmath120 . therefore , in equilibrium @xmath118 .",
    "we have shown that all equilibria are of the form @xmath109 , @xmath114 , and @xmath120 , for each @xmath121 .",
    "a necessary condition for the existence of equilibria is that the rebalancing assignments @xmath32 and @xmath35 can be chosen such that they lie in the set @xmath122 of assignments that verify @xmath123 for each @xmath124 . if @xmath125 , then no equilibrium exists and the first claim is proven .",
    "assume now that @xmath95 and assume that @xmath96 and @xmath126 .",
    "we need to show that @xmath109 , @xmath127 , and @xmath118 for all @xmath77 are indeed valid equilibria .",
    "the necessary conditions in equations   and   are clearly satisfied and thus we simply need to verify that the number of vehicles and drivers are sufficient to support the equilibrium configuration .",
    "but , we showed in  @xcite that @xmath128 is exactly the equilibrium number of vehicles in transit .",
    "similarly , from equation we can verify that @xmath129 is the equilibrium number of drivers in transit .",
    "this , together with the invariance result in theorem [ thrm : inv ] , shows the second claim .",
    "finally , we can show that if @xmath130 but @xmath101 or @xmath131 , then no equilibrium exists , by arguing that in this case there is not a sufficient number of vehicles and/or drivers to support the equilibrium .",
    "[ rem : balanced_stations ] we have assumed that @xmath132 for each station @xmath0 .",
    "this assumption removes the pathological case that a station is perfectly balanced and does not need any rebalancing effort . in the case",
    "that @xmath133 for a station , then @xmath134 becomes a valid equilibrium .",
    "due to space constraints we have omitted a full treatment of the @xmath133 case in this presentation .",
    "one question remains ; does there always exist an assignment @xmath135 that satisfies the constraints @xmath136 , and @xmath137 for each @xmath138 ?",
    "we call such an assignment _ feasible_. it is straightforward to verify that a feasible assignment for @xmath32 always exists , since the variables are constrained only to be non - negative  @xcite . the @xmath35 variables , however , are bounded from above ( that is , they have finite capacities ) , and thus it is not clear whether there exists a feasible @xmath35 assignment .",
    "the following result gives a standard condition for the existence of a feasible assignment ( see , for example  @xcite and a consequence of this condition .",
    "[ prop : feas_exist ] a feasible assignment @xmath73 exists if and only if , @xmath139 where @xmath140 . as a consequence , if @xmath141 for all @xmath142 , then a feasible assignment always exists .",
    "the condition   is a standard condition for the existence of a feasible solution in a minimum cost flow problem  @xcite .",
    "now we show that if @xmath143 for all @xmath144 , then   is satisfied .",
    "take any subset @xmath145 and let us show that @xmath146 from the definition of @xmath147 , the left - hand side of the above expression can be written as @xmath148 this proves the feasibility when @xmath149 for all @xmath150 .      in this section",
    "we investigate the ( local ) _ stability _ of the equilibria of our model .",
    "we consider the following notion of local stability .",
    "let @xmath151 and assume @xmath96 and @xmath152 ( this is a necessary and sufficient condition to have equilibria , see theorem  [ cor : gen ] ) .",
    "we say that the ( non - empty ) set of equilibria @xmath153 is locally asymptotically stable if for any equilibrium @xmath154 there exists a neighborhood @xmath155 such that every evolution of model starting at @xmath156 has a limit which belongs to the equilibrium set .",
    "in other words , @xmath157 . the next theorem characterizes stability .",
    "[ thrm : loc_stability ] let @xmath158 be a feasible assignment , and assume @xmath96 and @xmath152 ; then , the set of equilibria @xmath159 is locally asymptotically stable .",
    "consider an equilibrium @xmath160 ( note that @xmath161 by theorem [ cor : gen ] ) .",
    "we now prove that every evolution of model starting at @xmath162 has a limit which belongs to the equilibrium set .",
    "the claim of the theorem will then be an easy consequence of this statement .",
    "we start by observing the following fact .",
    "assume that @xmath163 and @xmath164 for all @xmath165 $ ] , then at time @xmath4 the differential equations read @xmath166 , for all @xmath77 ; recalling that , by theorem [ cor : gen ] , it must hold @xmath167 , one can write @xmath168 also , since by theorem [ cor : gen ] , it must hold - @xmath169 , one can write @xmath170    since @xmath171 for all @xmath172 $ ] , and since @xmath173 for all @xmath77 , we conclude that no @xmath26 and @xmath174 can reach the value @xmath175 _ before _ the corresponding number of customers @xmath176 has reached the value @xmath175 .",
    "however , once @xmath176 reaches the value @xmath175 ( after a time interval @xmath177 ) , the time derivative @xmath178 is larger than or equal to zero .",
    "this implies that when the initial conditions satisfy , then @xmath18 and @xmath179 for all @xmath180 .",
    "since @xmath18 and @xmath179 for all @xmath180 , and since this implies that @xmath166 for all @xmath181 and @xmath78 , we conclude that all @xmath176 will be equal to zero for all @xmath182 .",
    "then , for @xmath183 the differential equations become : @xmath184 , @xmath185 , @xmath186 .    collecting the results obtained so far",
    ", we have that @xmath187 for all @xmath67 . moreover , since @xmath188 and @xmath189 for all @xmath190 , the limits @xmath191 and @xmath192 exist .",
    "finally , one has @xmath193 . since @xmath173",
    ", we conclude that @xmath194 .",
    "also , @xmath189 for all @xmath4 , hence @xmath195 .",
    "thus any solution with initial conditions has a limit which belongs to @xmath196 ( the properties @xmath197 and @xmath198 are guaranteed by the invariance property in proposition  [ thrm : inv ] and the assumptions @xmath199 and @xmath200 ) .",
    "let @xmath201 , and let @xmath202 .",
    "then , from simple a geometric argument and from the definitions of @xmath203 and @xmath204 , it follows that if one chooses @xmath205 , then any solution of model with initial conditions satisfying has a limit which belongs to the equilibrium set .",
    "this concludes the proof .",
    "our objective is to find a rebalancing assignment @xmath73 that simultaneously minimizes the number of rebalancing vehicles traveling in the network and the number of rebalancing drivers needed , while ensuring the existence of ( locally ) stable equilibria for model . from the previous section , we already know that the set of assignments ensuring the existence of stable equilibria is @xmath206 ( provided that the total number of vehicles @xmath207 and drivers @xmath208 is large enough ) .",
    "the time - average number of rebalancing vehicles traveling in the network is simply given by @xmath209 . note that in minimizing this quantity we are also minimizing the lower bound on the necessary number of vehicles @xmath128 .",
    "the time - average number of drivers in the network is given by @xmath210 .",
    "note that in minimizing this quantity we are minimizing the lower bound on the necessary number of drivers @xmath129 .",
    "combining the two objectives with the existence of stable equilibria constraints in   and  ) , we obtain the following optimization : @xmath211 where @xmath212 , and the optimization variables are @xmath33 and @xmath36 , where @xmath213 . the constraints ensure that the optimization is over the set @xmath206 . note , however , that this optimization can be decoupled into an optimization over @xmath32 and an optimization over @xmath35 .",
    "both optimizations are minimum cost flow problems  @xcite .",
    "the @xmath32 optimization is identical to that presented in  @xcite : @xmath214 the @xmath35 optimization then looks as follows : @xmath215 the @xmath32 optimization is an uncapacitated minimum cost flow problem and thus is always feasible . in proposition",
    "[ prop : feas_exist ] we give conditions on the @xmath40 fractions in order for the @xmath35 optimization to be feasible .",
    "the rebalancing policy is then given by solving the two minimum cost flow problems to obtain solutions @xmath216 and @xmath217 .",
    "we then send empty rebalancing vehicles ( along with drivers ) from station @xmath0 to station @xmath8 at a rate of @xmath218 ( when vehicles and drivers are available at station @xmath0 ) .",
    "in addition , we send drivers on customer - carrying vehicles from @xmath0 to @xmath8 at a rate of @xmath219 ( when customers and vehicles are available at station @xmath0 ) .",
    "1em     in this section we study the relation between the minimum number of drivers needed for stability @xmath129 and the minimum number of vehicles needed @xmath128 from theorem  [ cor : gen ] .",
    "to evaluate these quantities , we need to generate sample data consisting of arrival rates @xmath19 at each station @xmath0 , customer destination probabilities @xmath9 , travel times between stations @xmath85 , and the fraction of customers @xmath40 traveling from @xmath0 to @xmath8 that are willing to be driven by a driver .",
    "we generate this data as follows : we uniformly randomly place @xmath1 stations in a @xmath220 environment , and calculate the travel times @xmath85 as the euclidean distance between stations .",
    "we uniformly randomly generate the arrival rates @xmath19 on the interval @xmath221 $ ] arrivals per time unit .",
    "similarly we uniformly randomly generate the destination probabilities @xmath9 such that they are nonnegative and @xmath222 for each station @xmath0 .",
    "finally , we assume that @xmath141 for each pair of stations in order to avoid issues with feasibility .",
    "to solve the optimizations in section  [ sec : opt_reb ] for the optimal assignment @xmath223 , we use the freely available sedumi ( self - dual - minimization ) toolbox .    figure  [ fig : vehicles_and_drivers ] shows results for numbers of stations ranging from @xmath224 up to @xmath225 . for each number of stations we generate @xmath226 random problem instances of the form described above .",
    "the thick line in each plot shows the mean over the @xmath226 trials while the thin dashed lines show the maximum and minimum values .",
    "the left figure shows how @xmath227 and @xmath228 vary with the number of stations .",
    "the middle figure shows the ratio @xmath229 as a function of the number of stations .",
    "we can see that we need between @xmath230 and @xmath231 as many drivers as we do vehicles .",
    "the right figure shows the ratio between the minimum number of rebalancing vehicles in transit and the number of drivers .",
    "this gives a measure of the fraction of drivers that are driving rebalancing vehicles ( versus rebalancing themselves ) .",
    "it is interesting to note that this ratio is quite low , reaching approximation @xmath232 for @xmath225 stations .",
    "one way to increase the fraction of drivers performing vehicle rebalancing is to allow multiple drivers to take a trip with a customer .",
    "this allows drivers to take more efficient routes back to stations that are in need of drivers . in our model",
    "it corresponds to setting @xmath233 .",
    "this is explored in figure  [ fig : fij_exp ] where we range @xmath40 from @xmath234 to @xmath235 for @xmath226 problem instances on @xmath236 stations .",
    "we can see that as we increase @xmath40 from @xmath234 to @xmath235 , the number of drivers decreases from approximately @xmath237 to @xmath238 , and the fraction of drivers performing vehicle rebalancing increases from under @xmath231 to nearly  @xmath239 .",
    "in this paper we studied the problem of rebalancing the rebalancers in a mobility - on - demand system , which blends customer - driven vehicles with a taxi service . for a fluid model of the system",
    ", we showed that the optimal rebalancing policy can be found as the solution of two linear programs .",
    "also , we showed that in euclidean network topologies one would need between 1/3 and 1/4 as many drivers as vehicles , and that this fraction decreases to about 1/5 if one allows up to 3 - 4 drivers to take a trip with a customer .",
    "these results could have an immediate impact on existing one - way car - sharing systems such as car2go . for future work",
    "we plan to analyze a stochastic queueing model and study the time - varying case whereby the system s parameters change periodically ( thus modeling the day / night variations ) .",
    "also , we plan to develop real - time rebalancing policies that do not require any a priori information , and to enrich our model by including uncertainty in the travel times , time windows for the customers , and capacity constraints for the roads . finally , we are interested in using dynamic pricing to provide incentives for customers to perform rebalancing trips themselves .",
    "this research was supported by the future urban mobility project of the singapore - mit alliance for research and technology ( smart ) center , with funding from singapore s national research foundation ; and by the office of naval research [ grant number n000140911051 ] .",
    "w.  j. mitchell , c.  e. borroni - bird , and l.  d. burns , _ http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=12044[reinventing the automobile : personal urban mobility for the 21st century]_.1em plus 0.5em minus 0.4emcambridge , ma : the mit press , 2010",
    ".          d.  k. merchant and g.  l. nemhauser , `` http://transci.journal.informs.org/cgi/content/abstract/12/3/200[optimality conditions for a dynamic traffic assignment model ] , '' _ transportation science _ , vol .",
    "12 , no .  3 , pp .",
    "200207 , 1978 .",
    "a.  k. ziliaskopoulos , `` http://transci.journal.informs.org/cgi/content/abstract/34/1/37[a linear programming model for the single destination system optimum dynamic traffic assignment problem ] , '' _ transportation science _ , vol .",
    "34 , no .  1 ,",
    "3749 , 2000 .",
    "s.  peeta and a.  ziliaskopoulos , `` http://dx.doi.org/10.1023/a:1012827724856[foundations of dynamic traffic assignment : the past , the present and the future ] , '' _ networks and spatial economics _ ,",
    "vol .  1 , pp . 233265 , 2001 .",
    "a.  f. filippov , _ differential equations with discontinuous righthand sides _ , ser . mathematics and its applications.1em plus 0.5em minus",
    "0.4emdordrecht , the netherlands : kluwer academic publishers , 1988 , vol .  18",
    ".    g.  haddad , `` http://www.springerlink.com/content/8nh6157v05013685/[monotone trajectories of differential inclusions and functional differential inclusions with memory ] , '' _ israel journal of mathematics _",
    "39 , no . 1 - 2 , pp . 83  100 , 1981"
  ],
  "abstract_text": [
    "<S> in this paper we study rebalancing strategies for a mobility - on - demand urban transportation system blending customer - driven vehicles with a taxi service . in our system , </S>",
    "<S> a customer arrives at one of many designated stations and is transported to any other designated station , either by driving themselves , or by being driven by an employed driver . </S>",
    "<S> the system allows for one - way trips , so that customers do not have to return to their origin . </S>",
    "<S> when some origins and destinations are more popular than others , vehicles will become unbalanced , accumulating at some stations and becoming depleted at others . </S>",
    "<S> this problem is addressed by employing rebalancing drivers to drive vehicles from the popular destinations to the unpopular destinations . however , with this approach the rebalancing drivers themselves become unbalanced , and we need to `` rebalance the rebalancers '' by letting them travel back to the popular destinations with a customer . </S>",
    "<S> accordingly , in this paper we study how to optimally route the rebalancing vehicles and drivers so that stability ( in terms of boundedness of the number of waiting customers ) is ensured while minimizing the number of rebalancing vehicles traveling in the network and the number of rebalancing drivers needed ; surprisingly , these two objectives are aligned , and one can find the optimal rebalancing strategy by solving two decoupled linear programs . leveraging our analysis , we determine the minimum number of drivers and minimum number of vehicles needed to ensure stability in the system . </S>",
    "<S> interestingly , our simulations suggest that , in euclidean network topologies , one would need between 1/3 and 1/4 as many drivers as vehicles . </S>"
  ]
}
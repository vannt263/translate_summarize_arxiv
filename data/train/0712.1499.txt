{
  "article_text": [
    "the authors gratefully acknowledge support by the engineering and physical sciences research council ( epsrc ) under grant number ep / d03809x/1 .",
    "klaus aehlig and helmut schwichtenberg . a syntactical analysis of non - size - increasing polynomial time computation . in _ proceedings of the fifteenth ieee symposium on logic in computer science ( lics 00 )",
    "_ , pages 84  91 , june 2000 .",
    "arnold beckmann .",
    "generalised dynamic ordinals  universal measures for implicit computational complexity . in _",
    "logic colloquium 02 _ , volume  27 of _ lect .",
    "notes log .",
    "_ , pages 4874 .",
    "assoc . symbol .",
    "logic , la jolla , ca , 2006 .",
    "wilfried buchholz .",
    "explaining gentzen s consistency proof within infinitary proof theory . in _",
    "computational logic and proof theory ( vienna , 1997 ) _ , volume 1289 of _ lecture notes in comput .",
    "_ , pages 417 .",
    "springer , berlin , 1997 .",
    "samuel  r. buss . bounded arithmetic and constant depth frege proofs . in _ complexity of computations and proofs",
    "_ , volume  13 of _ quad . mat .",
    "_ , pages 153174 .",
    ", seconda univ .",
    "napoli , caserta , 2004 .",
    "g.  kreisel , g.e .",
    "mints , and s.g .",
    "simpson . the use of abstract language in elementary metamathematics : some pedagogic examples . in r.",
    "parikh , editor , _ logic colloquium _ ,",
    "volume 453 of _ lecture notes in mathematics _ ,",
    "pages 38131 .",
    "springer , 1975 .",
    "grigori  e. mints .",
    "finite investigations of transfinite derivations . , 10:548596 , 1978 . translated from :",
    "lomi 49 ( 1975 ) . cited after grigori mints .",
    "_ selected papers in proof theory_.studies in proof theory .",
    "bibliopolis , 1992 .",
    "j.  paris and a.  wilkie .",
    "counting problems in bounded arithmetic . in a.",
    "dold and b.  eckmann , editors , _ methods in mathematical logic ( proceedings caracas 1983 ) _ , number 1130 in lecture notes in mathematics , pages 317340 .",
    "springer , 1985 .",
    "william  w. tait .",
    "normal derivability in classical logic . in j.",
    "barwise , editor , _ the syntax and semantics of infinitatry languages _ , number  72 in lecture notes in mathematics , pages 204236 .",
    "springer , 1968 ."
  ],
  "abstract_text": [
    "<S> we investigate the complexity of cut - reduction on proof notations , in particular identifying situations where cut - reduction operates feasibly , i.e. , sub - exponential , on proof notations . </S>",
    "<S> we then apply the machinery to characterise definable search problem in bounded arithmetic .    to explain our results with an example , let @xmath0 denote mints continuous cut - reduction operator which reduces the complexity of all cuts of a propositional derivation @xmath1 by one level </S>",
    "<S> . we will show that if all sub - proofs of @xmath1 can be denoted with notations of size @xmath2 , and the height of @xmath1 is @xmath3 , then sub - proofs of the derivation @xmath0 can be denoted by notations of size @xmath4 . together with the observation that determining the last inference of a denoted derivation as well as determining notations for immediate sub - derivations is easy ( i.e. , polynomial time computable ) </S>",
    "<S> , we can apply this result to re - obtain that the @xmath5-definable functions of the bounded arithmetic theory @xmath6 are in the @xmath7-th level of the polynomial time hierarchy of functions @xmath8 .    </S>",
    "<S> introduction and related work since gentzen s invention of the `` logik kalkl '' lk and the proof of his `` hauptsatz '' @xcite , cut - elimination has been studied in many papers on proof theory . </S>",
    "<S> mints invention of continuous normalisation @xcite isolates operational aspects of normalisation , that is the manipulations on ( infinitary ) propositional derivations . </S>",
    "<S> these operational aspects are described independently of the system s proof theoretic complexity , but at the expense of introducing the void logical rule of _ repetition _ to balance derivation trees . </S>",
    "<S> @xmath9 note that this rule is both logically valid and preserves the sub - formula property , which in particular means that it does not harm computational tasks related to derivations as long as it does not occur too often .    </S>",
    "<S> it is well - known that , using @xmath10 , the cut - elimination operator becomes a primitive recursive function which is continuous w.r.t .  </S>",
    "<S> the standard metric on infinitary trees : the normalisation procedure requires only as much information of the input as it produces output , using @xmath10 as the last inference rule of the normal derivation , if the result can not immediately be determined ( `` please wait '' ) .    in fact , associating some of the repetition rules with computation steps bounds for the simply - typed lambda calculus can be obtained that bound the sum of the number of computation steps and the size of the output  @xcite , strengthening earlier results by beckmann  @xcite . </S>",
    "<S> using schtte s </S>",
    "<S> @xmath11-rule  @xcite this method can also be applied to gdel s  @xcite system @xmath12 .    in this report , we will re - examine this situation . </S>",
    "<S> we will show that the cut - reduction operator can be understood as a polynomial time operation natural way , see observation  [ observation : feasiblecutreduction ] . </S>",
    "<S> we will work with proof notations which give implicit descriptions of ( infinite ) propositional proofs : a proof notation system will be a set which is equipped with some functions , most importantly two which compute the following tasks :    * given a notation @xmath3 , compute the last inference @xmath13 in the denoted proof . </S>",
    "<S> * given a notation @xmath3 and a number @xmath14 , compute a notation @xmath15 $ ] for the @xmath7-th immediate sub - derivation of the derivation denoted by @xmath3 .    </S>",
    "<S> implicit proof notations given in this way uniquely determine a propositional derivation tree , by exploring the derivation tree from its root and determining the inference at each node of the tree . the cut - reduction operator will be defined on such implicitly described derivation trees . for this , we build on buchholz technical very smooth approach to notation systems for continuous cut - elimination  @xcite . </S>",
    "<S> our main result of the first part of the report in particular implies the following statement , as can be seen from corollary  [ cor:2-k-1-bound - for - e - k - d ] . </S>",
    "<S> let @xmath16 denote the @xmath17-fold iteration of exponentiation @xmath18 .    </S>",
    "<S> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ let @xmath1 be some propositional derivation , and assume that all sub - proofs of @xmath1 can be denoted with notations of size bounded by @xmath2 , and that the height of @xmath1 is @xmath3 . then , all sub - proofs of the derivation obtained from @xmath1 by reducing the complexity of cut - formulae by @xmath19 can be denoted by notations of size bounded by @xmathobserve that the size of notations is exponential only in the height of the original derivation . in the second part of this report </S>",
    "<S> we will identify situations occurring in proof - theoretical investigations of bounded arithmetic where this height is bounded by an iterated logarithm of some global size parameter , making these sizes feasible .    </S>",
    "<S> bounded arithmetic has been introduced by buss @xcite as theories of arithmetic with a strong connection to computational complexity . for sake of simplicity of this introduction </S>",
    "<S> , we will concentrate only on the bounded arithmetic theories @xmath6 by buss @xcite . </S>",
    "<S> these theories are given as first order theories of arithmetic in a language which suitably extends that of peano arithmetic where induction is restricted in two ways . </S>",
    "<S> first , logarithmic induction is considered which only inducts over a logarithmic part of the universe of discourse . </S>",
    "<S> @xmath21 here , @xmath22 denotes the length of the binary representation of the natural number  @xmath23 , which defines a kind of logarithm on natural numbers . </S>",
    "<S> second , the properties which can be inducted on , must be described by a suitably restricted ( `` bounded '' ) formula . </S>",
    "<S> the class of formulae used here are the @xmath5-formulae which exactly characterise @xmath24 , that is , properties of the @xmath7-th level of the polynomial time hierarchy of predicates . </S>",
    "<S> the theory s @xmath6 main ingredients are the instances of logarithmic induction for @xmath5 formulae .    </S>",
    "<S> let a ( multi-)function @xmath25 be called @xmath26-definable in @xmath6 , if its graph can be expressed by a @xmath26-formula @xmath27 , such that the totality of @xmath25 , which renders as @xmath28 , is provable from the @xmath6-axioms in first - order logic . </S>",
    "<S> the main results characterising definable ( multi- ) functions in bounded arithmetic are the following .    </S>",
    "<S> * buss @xcite has characterised the @xmath5-definable functions of @xmath6 as @xmath29 , the @xmath7-th level of the polynomial time hierarchy of functions . </S>",
    "<S> * krajek@xcite has characterised the @xmath30-definable multi - functions of @xmath31 as the class @xmath32 $ ] of multi - functions which can be computed in polynomial time using a witness oracle from @xmath24 , where the number of oracle queries is restricted to @xmath33 many ( @xmath17 being the length of the input ) . </S>",
    "<S> * buss and krajek@xcite have characterised the @xmath34-definable multi - functions of @xmath6 as projections of solutions to problems from @xmath35 , which is the class of polynomial local search problems relativised to @xmath36-oracles .    </S>",
    "<S> we will re - obtain all these definability characterisations by one unifying method using the results from the first part of this report in the following way . </S>",
    "<S> first , we will define a suitable notation system @xmath37for propositional derivations which are obtained by translating bounded arithmetic proofs . </S>",
    "<S> the propositional translation used here is well - known in proof - theoretic investigations ; the translation has been described by tait  @xcite , and later was independently discovered by paris and wilkie  @xcite . in the bounded - arithmetic world </S>",
    "<S> it is known as the _ paris - wilkie translation . </S>",
    "<S> _    applying the machinery from the first part we obtain a notation system @xmath38of cut - elimination for @xmath37 . </S>",
    "<S> @xmath38will have the property that its implicit descriptions , most notably the functions @xmath13 and @xmath15 $ ] mentioned above , will be polynomial time computable .    </S>",
    "<S> this allows us to formulate a general local search problem on @xmath38which is suitable to characterise definable multi - functions for bounded arithmetic . </S>",
    "<S> assume that @xmath28 , describing the totality of some multi - function , is provable in some bounded arithmetic theory . </S>",
    "<S> fix a particularly nice formal proof @xmath39 of this . given @xmath40 </S>",
    "<S> we want to describe a procedure which finds some @xmath41 such that @xmath42 holds . </S>",
    "<S> invert the proof @xmath39 of @xmath28 to a proof of @xmath43 where @xmath23 is fresh a variable , then substitute @xmath44 for all occurrences of @xmath23 . </S>",
    "<S> this yields a proof of @xmath45 . adding an appropriate number of cut - reduction operators we obtain a proof with all cut - formulae of ( at most ) the same logical complexity as @xmath27 . </S>",
    "<S> it should be noted that a notation @xmath46 for this proof can be computed in time polynomial in @xmath47 .    </S>",
    "<S> the general local search problem which finds a witness for @xmath48 can now be characterised as follows . </S>",
    "<S> its instance is given by @xmath47 . </S>",
    "<S> the set of solutions are those notations of a suitable size , which denote a derivation having the property that the derived sequent is equivalent to @xmath49 where all @xmath50 are `` simple enough '' and false . </S>",
    "<S> an initial solution is given by @xmath46 . </S>",
    "<S> a neighbour to a solution @xmath3 is a solution which denotes an immediate sub - derivation of the derivation denoted by @xmath3 , if this exists , and @xmath3 otherwise . </S>",
    "<S> the cost of a notation is the height of the denoted derivation . </S>",
    "<S> the search task is to find a notation in the set of solutions which is a fixpoint of the neighbourhood function . </S>",
    "<S> obviously , a solution to the search task must exist . </S>",
    "<S> in fact , any solution of minimal cost has this property . </S>",
    "<S> now consider any solution to the search problem . </S>",
    "<S> it must have the property , that none of the immediate sub - derivations is in the solution space . </S>",
    "<S> this can only happen if the last inference derives @xmath48 from a true statement @xmath42 for some @xmath51 . </S>",
    "<S> thus @xmath41 is a witness to @xmath48 , and we can output @xmath41 as a solution to our original witnessing problem .    depending on the complexity of logarithmic induction present in the bounded arithmetic theory we started with , and the level of definability , </S>",
    "<S> we obtain local search problems defined by functions of some level of the polynomial time hierarchy , and different bounds to the cost function . </S>",
    "<S> for example , if we start with the @xmath5-definable functions of @xmath6 , we obtain a local search problem defined by properties in @xmath8 , where the cost function is bounded by @xmath52 . </S>",
    "<S> thus , by following the canonical path through the search problem which starts at the initial value and iterates the neighbourhood function , we obtain a path of polynomial length , which describes a procedure in @xmath8 to compute a witness .    other research related to our investigations is a paper by buss @xcite which also makes use of the paris - wilkie translation to obtain witnessing results by giving uniform descriptions of translated proofs . </S>",
    "<S> however , buss approach does not explicitely involve cut - elimination . </S>",
    "<S> dynamic ordinal analysis @xcite characterises the heights of propositional proof trees obtained via the paris - wilkie translation and cut - reduction . </S>",
    "<S> therefore , it is not surprising that the bounds obtained by dynamic ordinal analysis coincide with the bounds on cost functions we are exploiting here .    </S>",
    "<S> the potential of our approach to the characterisations of definable search problems via notation systems is that it may lead to characterisations of so far uncharacterised definable search problems , most notably the @xmath53-definable search problems in @xmath6 for @xmath54 .    </S>",
    "<S> proof systems    let @xmath55 be a set . </S>",
    "<S> the set of all subsets of @xmath55 will be denoted by @xmath56 , the set of all finite subsets of @xmath55 will be denoted by @xmath57 .    </S>",
    "<S> let @xmath58 be a set ( of _ formulae _ ) , @xmath59 a binary relation on @xmath58 ( _ identity between formulae _ ) , and @xmath60 a function ( _ rank _ ) . </S>",
    "<S> a _ </S>",
    "<S> sequent _ over @xmath61 is a finite subset of @xmath58 . </S>",
    "<S> we use @xmath62 as syntactic variables to denote sequents . </S>",
    "<S> with @xmath63 we denote the set @xmath64 .    </S>",
    "<S> we usually write @xmath65 for @xmath66 and @xmath67 for @xmath68 , etc . </S>",
    "<S> we always write @xmath69 instead of @xmath70 .    </S>",
    "<S> we repeat standard buchholz notation for proof systems  @xcite .    </S>",
    "<S> a _ proof system @xmath71 over @xmath61 _ is given by    * a set of formal expressions called _ inference symbols _ </S>",
    "<S> ( syntactic variable @xmath72 ) ; * for each inference symbol @xmath72 an ordinal @xmath73 , a sequent @xmath74 and a family of sequents @xmath75 .    </S>",
    "<S> proof systems may have inference symbols of the form @xmath76 for @xmath77 ; these are called `` cut inference symbols '' and their use will ( in definition  [ def : quasi - derivations ] ) be measured by the @xmath78-cut rank .    by writing </S>",
    "<S> we declare @xmath72 as an inference symbol with @xmath79 , @xmath80 , @xmath81 . if @xmath82 we write instead of .    </S>",
    "<S> [ def : quasi - derivations ] if @xmath72 is an inference symbol of @xmath71 , and @xmath83 is a sequence of @xmath71-quasi derivations , then @xmath84 is an _ @xmath71-quasi derivation _ with @xmath85    the infinitary proof system    </S>",
    "<S> let @xmath86 be the set of ( symbols for ) connectives for infinitary logic . </S>",
    "<S> their arity is given by @xmath87 and @xmath88 . </S>",
    "<S> we define a negation of the connectives according to the de morgan laws : @xmath89 , @xmath90 , @xmath91 , and @xmath92 .    </S>",
    "<S> the set of all infinitary formulae @xmath93 together with their rank is inductively defined by the clause : if @xmath94 and @xmath95 for @xmath96 then @xmath97 and @xmath98 .    </S>",
    "<S> * notation * + we denote @xmath99 by @xmath100 and @xmath101 by @xmath102 .    @xmath103 denotes the operation on @xmath93 which computes negation according to the de morgan rules , i.e. @xmath104    the set of all infinitary formulae of finite rank is denoted with @xmath105 . </S>",
    "<S> the identity between @xmath105-formulae is the `` true '' set - theoretic equality .    </S>",
    "<S> [ def : infinitary_proof_system ] the _ infinitary proof system @xmath106 _ is the proof system over @xmath107 which is given by the following set of inference symbols : +   + for @xmath108 + for @xmath109 and @xmath110 + for @xmath111 +    the </S>",
    "<S> _ @xmath106-derivations _ are the @xmath106-quasi derivations .    with a @xmath106-derivation @xmath112 we can associate a function from @xmath113 to @xmath106 by letting @xmath114 and @xmath115    notation system for infinitary formulae    [ def : notationsystemforformulas ] a _ notation system for ( infinitary ) formulae _ </S>",
    "<S> is a set @xmath116 of `` formulae '' , together with four functions @xmath117 , @xmath118\\colon{\\ensuremath{\\mathcal{f}}\\xspace}\\times\\nn\\to{\\ensuremath{\\mathcal{f}}\\xspace}$ ] , @xmath119 , and @xmath120 called `` outermost connective '' , `` sub - formula '' , `` negation '' and `` rank '' , and a relation @xmath121 called `` intensional equality '' , such that @xmath122 , @xmath123=\\neg(f[n])$ ] , @xmath124 , @xmath125)<{{\\mathop{{\\mathcal{c}}\\mbox{-\\textup{rk}}}}}(f)$ ] for @xmath126 , and @xmath127 implies @xmath128 , @xmath129{\\approx}g[n]$ ] , @xmath130 and @xmath131 .    </S>",
    "<S> it should be noted that if @xmath116 is a notation system for formulae , then so is @xmath132 in the obvious way ; moreover , in @xmath132 the intensional equality is true equality in the quotient . </S>",
    "<S> the reason why we nevertheless explicitly consider an ( intensional ) equality relation is that we are interested in the computational complexity of notation systems and therefore prefer to take notations as the strings that arise naturally , rather than working on the quotient . </S>",
    "<S> note that the latter would require us to compute canonical representations anyway and so would just push the problem to a different place .    </S>",
    "<S> it should also be noted that the intensional equality is truly intensional . </S>",
    "<S> two formulae are only equal , if they are given to us as being equal </S>",
    "<S> . the obvious extensional equality would be the largest bisimulation , that is , the largest relation @xmath133 satisfying @xmath134\\sim g[n]\\land { { \\mathop{{\\mathcal{c}}\\mbox{-\\textup{rk}}}}}(f)={{\\mathop{{\\mathcal{c}}\\mbox{-\\textup{rk}}}}}(g ) \\land \\neg f\\sim\\neg g$ ] . </S>",
    "<S> however , as most extensional concepts , the largest bisimulation is undecidable in almost all interesting cases and therefore not suited for an investigation of effective notations .    </S>",
    "<S> let @xmath135,\\operatorname{rk},{\\approx})$ ] be a notation system for infinitary formulae . </S>",
    "<S> the _ interpretation @xmath136\\!]_\\infty}}$ ] of @xmath137 _ is inductively defined as @xmath138\\!]_\\infty } } = \\operatorname{tp}(f)({{[\\![f[\\iota]]\\!]_\\infty}})_{\\iota<|\\operatorname{tp}(f)|}\\ ] ]    [ obs : ieval - fla ] the following properties hold .    </S>",
    "<S> 1 .   @xmath139\\!]_\\infty}}={{[\\![g]\\!]_\\infty}}$ ] , 2 .   </S>",
    "<S> @xmath140\\!]_\\infty}}={{[\\![g]\\!]_\\infty}}$ ] .    </S>",
    "<S> semiformal proof systems    let @xmath135,\\operatorname{rk},{\\approx})$ ] be a notation system for infinitary formulae .    </S>",
    "<S> [ def : semiformal_proof_systems ] the _ semiformal proof system @xmath141 over @xmath116 _ is the proof system over @xmath116 which is given by the following set of inference symbols : + for @xmath142 with @xmath143 + for @xmath144 with @xmath145 + for @xmath144 with @xmath146 and @xmath14 + for @xmath144 with @xmath147 +    * abbreviations * + for @xmath148 let denote .    </S>",
    "<S> the _ @xmath141-derivations _ are the @xmath141-quasi derivations .    later in our applications </S>",
    "<S> , we will be concerned only with derivations of finite height , for which we can formulate slightly sharper upper bounds on cut - reduction than in the general ( infinite ) case ( @xmath149 versus @xmath150 ) . </S>",
    "<S> thus , from now on we will restrict attention to derivations of finite height only .    </S>",
    "<S> [ def : turnstile ] let @xmath151 denote that @xmath1 is an @xmath141-derivation with @xmath152 , @xmath153 , and @xmath154 .    </S>",
    "<S> the _ interpretation @xmath155\\!]_\\infty}}$ ] of a @xmath141-derivation @xmath112 _ is defined as @xmath156\\!]_\\infty } } : = { { [ \\![{\\mathcal{i}}]\\!]_\\infty } } ( { { [ \\![d_\\iota]\\!]_\\infty}})_{\\iota<|{\\mathcal{i}}|}\\ ] ] where @xmath157\\!]_\\infty}}$ ] is defined by @xmath158\\!]_\\infty } } & : = { \\mathrm{ax}}\\\\ { { [ \\![{{\\textstyle\\bigwedge}}_a]\\!]_\\infty } } & : = { { \\textstyle\\bigwedge}}_{{[\\![a]\\!]_\\infty } } \\\\ { { [ \\![{{\\textstyle\\bigvee}}^i_a]\\!]_\\infty } } & : = { { \\textstyle\\bigvee}}^i_{{[\\![a]\\!]_\\infty } } \\\\ { { [ \\![{\\mathrm{cut}}_c]\\!]_\\infty } } & : = { \\mathrm{cut}}_{{[\\![c]\\!]_\\infty } } \\\\ { { [ \\![{\\mathrm{rep}}]\\!]_\\infty } } & : = { \\mathrm{rep}}\\end{aligned}\\ ] ]    @xmath159\\!]_\\infty}})\\subseteq{{[\\![{\\gamma}(d)]\\!]_\\infty}}$ ]    induction on @xmath1 . </S>",
    "<S> the `` @xmath160 '' , instead of the expected `` @xmath161 '' is due to the fact , that only formulae are removed from the conclusion that are intensionally equal ; compare also observation  [ obs : ieval - fla ] .    </S>",
    "<S> cut elimination for semiformal systems    let @xmath135,\\operatorname{rk},{\\approx})$ ] be a notation system for infinitary formulae , and @xmath141 the semiformal proof system over @xmath116 . </S>",
    "<S> we define mints continuous cut - reduction operator @xcite following the description given by buchholz @xcite . </S>",
    "<S> the only modification is our explicit use of intensional equality .    </S>",
    "<S> [ th : i - operator ] let @xmath144 with @xmath145 , and @xmath162 be given . </S>",
    "<S> we define an operator @xmath163 such that:@xmath164 @xmath165@xmath166 $ ] .    </S>",
    "<S> w.l.o.g .  </S>",
    "<S> we may assume that @xmath167 .    </S>",
    "<S> * case 1 . </S>",
    "<S> * @xmath168 . </S>",
    "<S> then @xmath169 is a derivation as required .    * case 2 . </S>",
    "<S> * @xmath170 . </S>",
    "<S> then @xmath171 is a derivation as required .    </S>",
    "<S> [ th : r - operator ] let @xmath144 with @xmath147 be given . </S>",
    "<S> we define an operator @xmath172 such that:@xmath173 @xmath174@xmath175 @xmath174@xmath176 @xmath165@xmath177 .    </S>",
    "<S> w.l.o.g .  </S>",
    "<S> we may assume that @xmath178 . </S>",
    "<S> let @xmath179 .    </S>",
    "<S> * case 1 . </S>",
    "<S> * @xmath180 </S>",
    "<S> . then @xmath181 and @xmath182 with @xmath183 for all @xmath184 . </S>",
    "<S> by induction hypothesis we obtain @xmath185 for @xmath184 . </S>",
    "<S> hence @xmath186 is a derivation as required .    </S>",
    "<S> * case 2 . * @xmath187 . </S>",
    "<S> then @xmath188 , because otherwise there is some @xmath189 with @xmath190 , but this is not satisfied by any of the inference symbols of the semiformal system @xmath141 . </S>",
    "<S> hence @xmath145 . </S>",
    "<S> we obtain that @xmath191 for some @xmath192 and @xmath193 , and @xmath194 $ ] with @xmath195 . by induction hypothesis </S>",
    "<S> we obtain @xmath196 $ ] . </S>",
    "<S> the inversion theorem shows @xmath197 $ ] . </S>",
    "<S> now @xmath198)<{{\\mathop{{\\mathcal{c}}\\mbox{-\\textup{rk}}}}}(c)\\le m$ ] , hence @xmath199}({\\mathbb{i}}^k_c(d_0),{\\mathbb{r}}_{c}({d}_0,{d}_1(0)))\\ ] ] is a derivation as required .    </S>",
    "<S> [ th : e - operator ] we define an operator @xmath200 such that : + @xmath201 @xmath165 @xmath202 .    w.l.o.g .  </S>",
    "<S> we may assume that @xmath203 .    </S>",
    "<S> * case 1 . </S>",
    "<S> * @xmath204 </S>",
    "<S> . then @xmath176 and @xmath205 and @xmath206 with @xmath207 . </S>",
    "<S> by induction hypothesis we obtain @xmath208 and @xmath209 .    </S>",
    "<S> * case 1.1 . </S>",
    "<S> * @xmath147 , then by the last theorem @xmath210 , and @xmath211 is a derivation as required .    </S>",
    "<S> * case 1.2 . </S>",
    "<S> * @xmath212 , then @xmath213 . </S>",
    "<S> continue as before .    </S>",
    "<S> * case 2 . </S>",
    "<S> * @xmath214 . </S>",
    "<S> then @xmath215 is as required .    immediately from the definition we note that the operators @xmath216 , @xmath217 , and @xmath200 only inspects the last inference symbol of a derivation to obtain the last inference symbol of the transformed derivation . </S>",
    "<S> it should be noted that this continuity would not be possible without the repetition rule .    </S>",
    "<S> notations for derivations and cut - elimination    let @xmath116 be a notation system for formulae , and @xmath141 the semiformal proof system over @xmath116 from definition  [ def : semiformal_proof_systems ] .    </S>",
    "<S> [ def : notation - for - proof - system ] a _ notation system for @xmath141 _ is a set @xmath218 of _ notations _ and functions @xmath219 , @xmath118\\colon{\\ensuremath{\\mathcal{h}}\\xspace}\\times\\nn\\to{\\ensuremath{\\mathcal{h}}\\xspace}$ ] , @xmath220 , @xmath221 , and @xmath222 called _ denoted last inference _ , _ denoted sub - derivation _ , _ denoted end - sequent _ , _ denoted cut - rank _ , _ denoted height _ and _ size _ , such that @xmath223)\\le{{\\mathop{{\\mathcal{c}}\\mbox{-\\textup{crk}}}}}(h)$ ] , @xmath224 implies @xmath225 , @xmath226)<\\operatorname{o}(h)$ ] for @xmath227 , and the following local faithfulness property holds for @xmath228 : @xmath229)\\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h ) ) } ) \\big ) \\subseteq { { { \\approx}}{\\gamma}(h ) } \\enspace.\\ ] ]    [ prop : cons - faithfull ] @xmath230)\\subseteq { { { \\approx}}\\big({\\gamma}(h)\\cup{\\delta}_j(\\operatorname{tp}(h))\\big)}\\ ] ]    let @xmath231,\\operatorname{o},\\sz{\\cdot})$ ] be a notation system for @xmath141 . </S>",
    "<S> the _ interpretation @xmath232\\!]}}$ ] of @xmath228 _ is inductively defined as the following @xmath141-derivation : @xmath233\\ ! ] } } : = \\operatorname{tp}(h ) ( { { [ \\![h[n]]\\!]}})_{n<|\\operatorname{tp}(h)|}\\ ] ]    [ observ : formal - semiformal ] for @xmath228 we have @xmath234\\ ! ] } } ) & = \\operatorname{tp}(h )   \\\\    { { [ \\![h]\\!]}}(\\iota ) & = { { [ \\![h[\\iota]]\\ ! ] } }   \\quad\\text { for } \\iota<|\\operatorname{tp}(h)| \\\\    { \\gamma}({{[\\![h]\\ ! ] } } ) & \\subseteq { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ]    we now extend a notation system @xmath218 for @xmath141 to notation system for cut - elimination on @xmath218 , by adding notations for the operators @xmath216 , @xmath217 and @xmath200 from the previous section .    </S>",
    "<S> the _ notation system @xmath235 for cut - elimination on @xmath218 _ is given by the set of terms @xmath235 which are inductively defined by    * @xmath236 , * @xmath237 , @xmath144 with @xmath145 , @xmath162 @xmath165@xmath238 , * @xmath239 , @xmath144 with @xmath147 @xmath165@xmath240 , * @xmath237 @xmath165@xmath241 ,    where @xmath242 are new symbols , and functions @xmath243 , @xmath118\\colon{\\ensuremath{\\mathcal{c}\\mathcal{h}}\\xspace}\\times\\nn\\to{\\ensuremath{\\mathcal{c}\\mathcal{h}}\\xspace}$ ] , @xmath244 , @xmath245 , @xmath246 and @xmath247 defined by recursion on the build - up of @xmath237 :    * if @xmath228 then all functions are inherited from @xmath218 . * @xmath248 : let @xmath249\\}\\cup({\\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\}})$ ] , @xmath250 , @xmath251 , and @xmath252 . </S>",
    "<S> + * case 1 . </S>",
    "<S> * @xmath253 . </S>",
    "<S> then let @xmath254 , and @xmath255:=\\i^k_c h_0[k]$ ] . </S>",
    "<S> + * case 2 . </S>",
    "<S> * otherwise , let @xmath256 , and @xmath15:=\\i^k_c h_0[i]$ ] . </S>",
    "<S> * @xmath257 : let @xmath258 . </S>",
    "<S> we define @xmath259 , @xmath260 , @xmath261 , and @xmath262 . </S>",
    "<S> + * case 1 . </S>",
    "<S> * @xmath180 : then let @xmath263 , and @xmath15:=\\r_{c } h_0 h_1[i]$ ] . + </S>",
    "<S> * case 2 . </S>",
    "<S> * otherwise , @xmath188 , because if not there would be some @xmath189 with @xmath190 , but this is not satisfied by any of the inference symbols of the semiformal system @xmath141 . </S>",
    "<S> hence @xmath145 . </S>",
    "<S> thus @xmath191 for some @xmath192 and @xmath193 . </S>",
    "<S> then let @xmath264}$ ] and @xmath255:=\\i^k_c h_0 $ ] , @xmath265:=\\r_{c } h_0 h_1[0]$ ] . </S>",
    "<S> * @xmath266 : let @xmath267 , @xmath268 , @xmath269 , and @xmath252 . + </S>",
    "<S> * case 1 . </S>",
    "<S> * @xmath270 : then let @xmath254 and + let @xmath255:=\\r_{c}\\e h_0[0]\\e h_0[1]$ ] if @xmath147 , + let @xmath255:=\\r_{\\neg c}\\e h_0[1]\\e h_0[0]$ ] if @xmath212 . + * case 2 . </S>",
    "<S> * otherwise , let @xmath256 , and @xmath15:=\\e h_0[i]$ ] .    </S>",
    "<S> the just defined system is a notation system for @xmath141 in the sense of definition  [ def : notation - for - proof - system ] . to prove this we have to show that @xmath271)<\\operatorname{o}(h )   \\qquad\\text{for}\\qquad n<|\\operatorname{tp}(h)|\\ ] ] and that the local faithfulness property for @xmath272 holds . </S>",
    "<S> we start by proving by induction on the build - up of @xmath237 .    if @xmath228 then is inherited from @xmath218 . if @xmath248 then @xmath273=\\i^k_c h_0[n']$ ] for some @xmath274 and is immediate by induction hypothesis .    </S>",
    "<S> now let us consider the case @xmath275 . if @xmath273=\\r_ch_0h_1[n']$ ] for some @xmath274 then is immediate by induction hypothesis . </S>",
    "<S> the other case is that @xmath255=\\i^k_ch_0 $ ] for some @xmath19 . </S>",
    "<S> we compute @xmath276 ) = \\operatorname{o}(\\i^k_ch_0 ) = \\operatorname{o}(h_0 ) < \\operatorname{o}(h_0)+\\operatorname{o}(h_1 ) = \\operatorname{o}(h)\\ ] ] since @xmath277 .    </S>",
    "<S> finally , let us consider the case @xmath266 . </S>",
    "<S> if @xmath273=\\e h_0[n]$ ] then is immediate by induction hypothesis . otherwise , we are in the case @xmath255=\\r_c(\\e h_0[i])(\\e h_0[j])$ ] for some @xmath278 . by induction hypothesis </S>",
    "<S> we obtain that @xmath279)\\le\\operatorname{o}(h_0)-1 $ ] and @xmath280)\\le\\operatorname{o}(h_0)-1 $ ] . </S>",
    "<S> hence @xmath281)(\\e h_0[j ] ) )    & = \\operatorname{o}(\\e h_0[i])+\\operatorname{o}(\\e h_0[j ] )    = 2^{\\operatorname{o}(h_0[i])}-1 + 2^{\\operatorname{o}(h_0[j])}-1 \\\\    & < 2\\cdot2^{\\operatorname{o}(h_0)-1}-1    = 2^{\\operatorname{o}(h_0)}-1 = \\operatorname{o}(h)\\end{aligned}\\ ] ]    we now turn to the local faithfulness property of @xmath272 which we also prove by induction on the build - up of @xmath237 . </S>",
    "<S> we abbreviate @xmath282)\\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h ) ) } ) \\big ) \\enspace,\\ ] ] then we have to show @xmath283 .    * </S>",
    "<S> if @xmath228 then the local faithfulness property is inherited from @xmath218 . * if @xmath248 , then @xmath249\\}\\cup({\\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\}})$ ] . + </S>",
    "<S> * case 1 . </S>",
    "<S> * @xmath253 . </S>",
    "<S> then @xmath284 ) \\subseteq * ( h_0)\\cup{{{\\approx}}\\{c[k]\\}}$ ] hence @xmath285 ) \\\\   & = \\{c[k]\\}\\cup\\big ( { \\gamma}(h_0[k ] ) \\setminus{{{\\approx}}\\{c\\}}\\big ) \\\\   & \\subseteq      \\{c[k]\\}\\cup\\big ( * ( h_0 ) \\setminus{{{\\approx}}\\{c\\}}\\big ) \\\\   & \\stackrel{i.h.}{\\subseteq }      \\{c[k]\\}\\cup\\big ( { { { \\approx}}{\\gamma}(h_0 ) } \\setminus{{{\\approx}}\\{c\\}}\\big )    \\quad\\subseteq\\quad { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ] + * case 2 . * </S>",
    "<S> otherwise , we compute @xmath286)\\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h_0))}\\big ) \\\\   & =     { \\delta}(\\operatorname{tp}(h_0))\\cup \\bigcup_{\\iota<|\\operatorname{tp}(h_0)|}\\big (       \\big[\\{c[k]\\}\\cup\\big({\\gamma}(h_0[\\iota])\\setminus{{{\\approx}}\\{c\\}}\\big)\\big ]             \\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h_0 ) ) }   \\big ) \\\\   & \\subseteq     \\{c[k]\\}\\cup\\big (       \\big[{\\delta}(\\operatorname{tp}(h_0))\\cup \\bigcup_{\\iota<|\\operatorname{tp}(h_0)| }         \\big ( { \\gamma}(h_0[\\iota])\\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h_0 ) ) } \\big ) \\big ]       \\setminus{{{\\approx}}\\{c\\}}\\big ) \\\\   & =     \\{c[k]\\}\\cup\\big (       * ( h_0 )       \\setminus{{{\\approx}}\\{c\\}}\\big ) \\\\   & \\stackrel{i.h.}{\\subseteq }     \\{c[k]\\}\\cup\\big (       { { { \\approx}}{\\gamma}(h_0 ) }       \\setminus{{{\\approx}}\\{c\\}}\\big )    \\quad\\subseteq\\quad { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ] * @xmath257 : let @xmath258 . </S>",
    "<S> we have @xmath259 . + * case 1 . * </S>",
    "<S> @xmath180 : we compute @xmath287)\\setminus{{{\\approx}}{\\delta}_\\iota({\\mathcal{i}})}\\big ) \\\\   & =     { \\delta}({\\mathcal{i}})\\cup \\bigcup_{\\iota<|{\\mathcal{i}}|}\\big (       \\big[{\\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } }            \\cup { \\gamma}(h_1[\\iota])\\setminus{{{\\approx}}\\{\\neg c\\}}\\big ]             \\setminus{{{\\approx}}{\\delta}_\\iota({\\mathcal{i } } ) }   \\big ) \\\\   & \\subseteq     { \\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } } \\cup \\big (       \\big[{\\delta}({\\mathcal{i}})\\cup \\bigcup_{\\iota<|{\\mathcal{i}}| }         \\big ( { \\gamma}(h_1[\\iota])\\setminus{{{\\approx}}{\\delta}_\\iota({\\mathcal{i } } ) } \\big ) \\big ]       \\setminus{{{\\approx}}\\{\\neg c\\}}\\big ) \\\\   & =     { \\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } } \\ \\cup\\         * ( h_1 )       \\setminus{{{\\approx}}\\{\\neg c\\ } } \\\\   & \\stackrel{i.h.}{\\subseteq }     { \\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } } \\ </S>",
    "<S> \\cup\\        { { { \\approx}}{\\gamma}(h_1 ) }       \\setminus{{{\\approx}}\\{\\neg c\\ } }    \\quad\\subseteq\\quad { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ] + * case 2 . * otherwise , we compute @xmath288\\ } } \\ </S>",
    "<S> \\cup\\           { \\gamma}(\\r_c h_0 h_1[0])\\setminus{{{\\approx}}\\{\\neg c[k]\\ } } \\\\   & = \\big(\\{c[k]\\}\\cup\\big({\\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } }       \\big)\\setminus{{{\\approx}}\\{c[k]\\ } } \\\\   & \\quad \\cup      \\big({\\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } }            \\cup { \\gamma}(h_1[0])\\setminus{{{\\approx}}\\{\\neg c\\ } }       \\big)\\setminus{{{\\approx}}\\{\\neg c[k]\\ } } \\\\   & \\subseteq      { \\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } } \\ \\cup\\        \\big ( { \\gamma}(h_1[0])\\setminus{{{\\approx}}\\{\\neg c[k]\\ } } \\big )         \\setminus{{{\\approx}}\\{\\neg c\\ } } \\\\   & \\subseteq      { \\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } } </S>",
    "<S> \\ \\cup\\          * ( h_1 )         \\setminus{{{\\approx}}\\{\\neg c\\ } } \\\\   & \\stackrel{i.h.}{\\subseteq }     { \\gamma}(h_0)\\setminus{{{\\approx}}\\{c\\ } } \\ </S>",
    "<S> \\cup\\        { { { \\approx}}{\\gamma}(h_1 ) }       \\setminus{{{\\approx}}\\{\\neg c\\ } }   \\quad\\subseteq\\quad { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ] * @xmath266 : then @xmath267 . + * case 1 . * </S>",
    "<S> @xmath270 : assume @xmath147 , then @xmath289)\\setminus{{{\\approx}}\\{c\\ } }   \\ \\cup\\       { \\gamma}(\\e h_0[1])\\setminus{{{\\approx}}\\{\\neg c\\ } } \\\\   & = { \\gamma}(h_0[0])\\setminus{{{\\approx}}\\{c\\ } }   \\ </S>",
    "<S> \\cup\\       { \\gamma}(h_0[1])\\setminus{{{\\approx}}\\{\\neg c\\ } } \\\\   & = * ( h_0 )   \\quad\\stackrel{i.h.}{\\subseteq}\\quad { { { \\approx}}{\\gamma}(h_0 ) }   \\quad\\subseteq\\quad { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ] the case that @xmath212 runs similar . + * case 2 . * otherwise , we compute @xmath290)\\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h_0))}\\big ) \\\\   & = { \\delta}(\\operatorname{tp}(h_0))\\cup\\bigcup_{\\iota<|\\operatorname{tp}(h_0)| }       \\big({\\gamma}(h_0[\\iota])\\setminus{{{\\approx}}{\\delta}_\\iota(\\operatorname{tp}(h_0))}\\big ) \\\\   & = * ( h_0 )    \\quad\\stackrel{i.h.}{\\subseteq}\\quad { { { \\approx}}{\\gamma}(h_0 ) }   \\quad=\\quad { { { \\approx}}{\\gamma}(h)}\\end{aligned}\\ ] ]    for the computation of @xmath272 , the cut - elimination operators @xmath291 , @xmath292 and @xmath293 behave like the following inference symbols :    [ cols= \" < , < , < \" , ]     </S>",
    "<S> let @xmath235 be the notation system for cut - elimination on @xmath218 . </S>",
    "<S> the _ interpretation @xmath232\\!]}}$ ] _ is extended inductively from @xmath218 to @xmath235 by defining @xmath294\\ ! ] } } & = { \\mathbb{i}}^k_c({{[\\![h]\\ ! ] } } )   \\\\    { { [ \\![\\r_c h_0h_1]\\ ! ] } } & = { \\mathbb{r}}_c({{[\\![h_0]\\!]}},{{[\\![h_1]\\ ! ] } } )   \\\\    { { [ \\![\\e h]\\ ! ] } } & = { \\mathbb{e}}({{[\\![h]\\ ! ] } } )   .\\end{aligned}\\ ] ]    for @xmath237 we have @xmath234\\ ! ] } } ) & = \\operatorname{tp}(h )   \\\\    { { [ \\![h]\\!]}}(\\iota ) & = { { [ \\![h[\\iota]]\\ ! ] } }   \\quad\\text { for } \\iota<|\\operatorname{tp}(h)| \\\\    { { \\mathop{{\\mathcal{c}}\\mbox{-\\textup{crk}}}}}({{[\\![h]\\ ! ] } } ) & \\le { { \\mathop{{\\mathcal{c}}\\mbox{-\\textup{crk}}}}}(h)\\end{aligned}\\ ] ]    by induction on the build - up of @xmath237 . </S>",
    "<S> if @xmath228 then the assertion is inherited from @xmath218 and observation  [ observ : formal - semiformal ] . </S>",
    "<S> the remaining cases follow from theorems  [ th : i - operator ] , [ th : r - operator ] and  [ th : e - operator ] .    an abstract notion of notation    we are now interested in studying the size needed by the notations for sub - derivations of derivations obtained by the cut - elimination operator . to avoid losing the simple idea in a blurb of notation , </S>",
    "<S> we abstract our problem to a simple term - rewriting system .    an _ abstract system of proof notations _ is a set @xmath295 of `` derivations '' , together with two functions @xmath296 , called `` size '' and `` height '' , and a relation @xmath297 called `` reduction to a sub - derivation '' , such that @xmath298 implies @xmath299 .    </S>",
    "<S> [ obs : abstraction - of - notation - system ] let @xmath116 be a notation system for formulae and @xmath141 the semiformal proof system over @xmath116 . </S>",
    "<S> a notation system @xmath231,\\operatorname{o},\\sz{\\cdot})$ ] for @xmath141 gives rise to an abstract system of proof notations by letting @xmath300 and defining @xmath298 iff there exists an @xmath301 with @xmath302 $ ] .    </S>",
    "<S> if @xmath295 is an abstract system of proof notations , then @xmath303 , the `` cut elimination closure '' , is the abstract notation system extending @xmath295 that is inductively defined by @xmath304 where @xmath293 , @xmath305 , @xmath306 are new symbols .    </S>",
    "<S> we have to show that whenever @xmath298 for @xmath307 then @xmath308 . </S>",
    "<S> we show this by induction following the inductive definition of the @xmath309 relation in @xmath303 . </S>",
    "<S> if @xmath298 holds in @xmath303 because it already holds in @xmath295 then @xmath310 is inherited from @xmath295 . </S>",
    "<S> the cases @xmath311 , @xmath312 and @xmath313 are immediate by induction hypothesis .    for the remaining cases we argue as follows . in case </S>",
    "<S> @xmath314 we calculate @xmath315 , since @xmath316 .    in the case @xmath317 </S>",
    "<S> thanks to @xmath298 and @xmath318 we have @xmath319 and @xmath320 . </S>",
    "<S> so , we calculate @xmath321 .    </S>",
    "<S> let @xmath116 be a notation system for formulae , @xmath141 the semiformal proof system over @xmath116 , @xmath218 a notation system for @xmath141 , @xmath235 the notation system for cut - elimination on @xmath218 with denoted height @xmath322 and size @xmath323 , and let @xmath295 be the abstract system of proof notations associated with @xmath218 according to observation  [ obs : abstraction - of - notation - system ] .    </S>",
    "<S> [ def : abstraction ] the abstraction @xmath324 of @xmath237 is obtained by dropping all sub- and superscripts . </S>",
    "<S> it can be defined by induction on the build - up of @xmath237 :    * @xmath325 , * @xmath326 , * @xmath327 , * @xmath328 .    </S>",
    "<S> we denote the set of abstractions for @xmath237 by @xmath329 .    </S>",
    "<S> [ obs : abstraction ] the set of abstractions @xmath329 for @xmath235 is a subsystem of the cut - elimination closure @xmath330 of @xmath218 in the following sense : let @xmath309 denote the reduction to sub - derivation relation of @xmath330 , and define a reduction to sub - derivation relation @xmath331 of @xmath329 in the obvious way by @xmath332 iff there exists an @xmath227 with @xmath333 $ ] </S>",
    "<S> . then @xmath334 and @xmath335 .    </S>",
    "<S> size bounds[sec : bounds ]    we now prove a bound on the size of ( abstract ) notations for cut - elimination . by induction on the build up of @xmath303 we assign every element a measure that bounds the size of all derivations reachable from it via iterated use of the @xmath309-relation . </S>",
    "<S> a small problem arises in the base case ; if @xmath298 in @xmath303 because this holds in @xmath295 we have no means of bounding @xmath336 in terms of @xmath337 . </S>",
    "<S> so we use the usual trick  @xcite when a global measure is needed and assign each element @xmath1 of @xmath303 not a natural number but a monotone function @xmath338 such that @xmath339 for all @xmath340 whenever @xmath341 is a global bound on the size of all elements in @xmath295 .    </S>",
    "<S> an abstract system @xmath295 of proof notations is called @xmath2-bounded ( for @xmath341 ) , if for all @xmath342 it is the case that @xmath343 .    </S>",
    "<S> if @xmath295 is an abstract system of proof notations and @xmath342 , then by @xmath344 we denote the set @xmath345 considered an abstract system of proof notation with the structure induced by @xmath295 . here </S>",
    "<S> @xmath346 denotes the reflexive transitive closure of @xmath309 .    for @xmath295 </S>",
    "<S> an abstract system of proof notations and @xmath342 we say that @xmath1 is @xmath2-bounded if @xmath347 is .    </S>",
    "<S> by @xmath348 we denote the set of all monotone functions from @xmath349 to @xmath349 .    for @xmath295 </S>",
    "<S> an abstract system of proof notations we define , a `` size function '' @xmath350 for every @xmath351 by induction on the inductive definition of @xmath303 as follows .    * for @xmath342 we set @xmath352 . </S>",
    "<S> * @xmath353 * @xmath354 * @xmath355    the monotonicity of the defined function @xmath338 is immediately seen from the definition and the induction hypothesis .    </S>",
    "<S> [ prop : szf - bounds - sz ] if @xmath295 is @xmath2-bounded then for every @xmath351 we have @xmath356 .    by induction on the inductive definition of @xmath303 .    </S>",
    "<S> if @xmath342 then @xmath357 , since @xmath295 is @xmath2-bounded . </S>",
    "<S> we calculate @xmath358 , where we used that @xmath359 by induction hypothesis . </S>",
    "<S> also , @xmath360 , using the induction hypothesis for @xmath361 . finally , @xmath362 , where for the first inequality we used that @xmath363 , and for the second inequality we used the induction hypothesis .    </S>",
    "<S> [ th : main ] if @xmath295 is @xmath2-bounded , @xmath351 and @xmath298 , then @xmath364 .    </S>",
    "<S> induction on the inductive definition of the relation @xmath298 in @xmath303 .    if @xmath298 because it holds in @xmath295 then @xmath365 .    </S>",
    "<S> if @xmath311 thanks to @xmath298 then @xmath366 , where the inequality is due to the induction hypothesis .    if @xmath367 thanks to @xmath298 and @xmath318 we argue as follows @xmath368 where for the first inequality we used proposition  [ prop : szf - bounds - sz ] , for the second the induction hypothesis , for the third that , since @xmath298 and @xmath318 , both @xmath369 and @xmath370 are bounded by @xmath371 .    </S>",
    "<S> if @xmath372 thanks to @xmath298 then @xmath373 .    if @xmath374 thanks to @xmath375 , then @xmath376 where for the inequality we used the induction hypothesis .    if @xmath377 then @xmath378 .    </S>",
    "<S> now we draw the desired consequences of our main theorem by putting things together .    </S>",
    "<S> [ lem : bd - tr - cl ] if @xmath295 is @xmath2-bounded , and @xmath351 then @xmath379 is @xmath380-bounded .    </S>",
    "<S> we first show by induction on the inductive definition of the reflexive transitive closure that for every @xmath381 we have @xmath382 . </S>",
    "<S> the case @xmath383 is trivial and if @xmath384 then @xmath385 by induction hypothesis and @xmath386 by theorem  [ th : main ] .    </S>",
    "<S> now , by proposition  [ prop : szf - bounds - sz ] we know that @xmath387 for @xmath388 . </S>",
    "<S> so , with the previous claim , for @xmath389 we get @xmath390 , which is the claim .    </S>",
    "<S> [ cor : size - bound - ed - eed ] if @xmath342 is @xmath2-bounded then @xmath391 is @xmath392-bounded and @xmath393 is @xmath394-bounded .    </S>",
    "<S> let @xmath342 be @xmath2-bounded and @xmath395 . </S>",
    "<S> first we observe that @xmath396 for any @xmath397 . </S>",
    "<S> so we can assume without loss of generality that @xmath295 is @xmath398-bounded .    </S>",
    "<S> lemma  [ lem : bd - tr - cl ] now gives us that @xmath391 is @xmath399-bounded and @xmath400 is @xmath401-bounded . </S>",
    "<S> we calculate @xmath402 and @xmath403 .    </S>",
    "<S> even though the above corollary covers all the case usually needed in practise , it is interesting to consider the general case . </S>",
    "<S> recall that iterated exponentiation @xmath16 is defined inductively by setting @xmath404 and @xmath405 . </S>",
    "<S> an easy induction shows that the height @xmath406 of the @xmath17-times cut - reduced derivation @xmath1 is bounded by @xmath407 .    </S>",
    "<S> [ lem:2-k-1-bound - for - e - k - d ] @xmath408 for all @xmath409 , @xmath410 and @xmath411 .    </S>",
    "<S> induction on @xmath17 . for the case </S>",
    "<S> @xmath412 we compute @xmath413 .    for @xmath414 </S>",
    "<S> we compute @xmath415 . for @xmath416 and @xmath417 </S>",
    "<S> we directly compute that this is bounded by @xmath418 . </S>",
    "<S> for @xmath419 we compute @xmath420 .    </S>",
    "<S> now assume that the claim holds for @xmath421 . </S>",
    "<S> we then compute @xmath422    as an immediate corollary we obtain    [ cor:2-k-1-bound - for - e - k - d ] if @xmath342 is @xmath2-bounded of height @xmath423 for @xmath410 and @xmath424 , then @xmath425 is @xmath426-bounded for all @xmath427 .    in corollary  </S>",
    "<S> [ cor:2-k-1-bound - for - e - k - d ] one should note that the tower of exponentiations has height only @xmath428 . </S>",
    "<S> hence there is one exponentiation less than the height of the denoted proof .    </S>",
    "<S> we conclude this section by remarking that the cut - elimination operator can be viewed as a polynomial time computable operation . </S>",
    "<S> assume we modify the size function on @xmath303 to @xmath429 by changing all @xmath430 to @xmath429 and defining for the last case    * @xmath431    then we obtain as before for @xmath295 @xmath2-bounded , @xmath351 and @xmath192 , that @xmath432 , and @xmath298 implies @xmath433 . </S>",
    "<S> hence , for @xmath342 , @xmath295 @xmath2-bounded , and @xmath434 , we obtain @xmath435 . from this </S>",
    "<S> we can conclude the following observation : let @xmath436 : = f[i_1]\\dots[i_k]$ ] .    </S>",
    "<S> [ observation : feasiblecutreduction ] the cut - reduction operator for infinitary propositional logic is a polynomial time operation in the following sense .    let @xmath116 and @xmath218 be some notation systems for infinitary formulae and the semiformal system @xmath141 . </S>",
    "<S> assume that @xmath116 and @xmath218 are polynomial time computable , and that in addition also the functions @xmath437\\end{aligned}\\ ] ] and @xmath438\\end{aligned}\\ ] ] are polynomial time computable </S>",
    "<S> .    then , @xmath439and the function @xmath440\\end{aligned}\\ ] ] are polynomial time computable .    </S>",
    "<S> bounded arithmetic[sec : bounded - arithmetic ]    our proof - theoretic investigations are very much independent of the exact choice of the language . </S>",
    "<S> therefore , we will be very liberal and allow symbols for all ptime functions .    _ </S>",
    "<S> the language @xmath441 of bounded arithmetic _ contains as non - logical symbols @xmath442 for the binary relation `` equality '' and `` less than or equal '' , and a symbol for each ptime function . </S>",
    "<S> in particular , it includes a constant @xmath443 for @xmath444 whose interpretation in the standard model @xmath349 is @xmath445 , unary function symbols @xmath446 and @xmath447 which have their standard interpretation given by @xmath448 and @xmath449 where @xmath17 is the length of the binary representation of @xmath450 , and the binary function symbols @xmath451 and @xmath452 whose standard interpretation are minimisation and @xmath453 where @xmath17 and @xmath454 are the lengths of the binary representations of @xmath450 resp .  </S>",
    "<S> @xmath455 . </S>",
    "<S> we will often write @xmath456 instead of @xmath457 , and @xmath458 for @xmath459 .    _ atomic formulae _ are of the form @xmath460 or @xmath461 where @xmath2 and @xmath462 are terms . </S>",
    "<S> _ literals _ are expressions of the form @xmath463 or @xmath464 where @xmath463 is an atomic formula . </S>",
    "<S> formulas are build up from literals by means of @xmath465 , @xmath466 , @xmath467 , @xmath468 . </S>",
    "<S> the _ negation @xmath469 for a formula @xmath470 _ is defined via de morgan s laws . </S>",
    "<S> negation extends to sets of formulae in the usual way by applying it to their members individually .    </S>",
    "<S> let @xmath78 be a set of @xmath441-formulae ( think of @xmath5 ) , and @xmath463 an @xmath441-formula . </S>",
    "<S> we define the _ @xmath78-rank of @xmath463 , _ denoted @xmath69 , by induction on the build - up of @xmath463 :    * if @xmath471 , let @xmath472 . * </S>",
    "<S> if @xmath473 or @xmath474 , let @xmath475 . * if @xmath476 or @xmath477 , let @xmath478 .    </S>",
    "<S> we will use the following standard abbreviations .    </S>",
    "<S> the expression @xmath479 denotes the expression @xmath480 . </S>",
    "<S> the expression @xmath481 denotes @xmath482 . </S>",
    "<S> bounded quantifiers are introduced as follows : @xmath483 denotes @xmath484 , @xmath485 denotes @xmath486 , @xmath487 denotes @xmath488 , @xmath489 denotes @xmath490 , where @xmath23 may not occur in @xmath462 .    </S>",
    "<S> the set @xmath491 of bounded @xmath492-formulae is the set of @xmath492-formulae consisting of literals and closed under @xmath465 , @xmath466 , @xmath493 , @xmath494 .    </S>",
    "<S> we now define a restricted ( also called `` strict '' ) delineation of bounded formulae .    </S>",
    "<S> the set @xmath495 is the subset of bounded @xmath492-formulae whose elements are of the form @xmath496 with @xmath497 and @xmath498 being of the corresponding alternating quantifier shape , and @xmath463 being quantifier free .    as axioms we allow all disjunctions of literals , i.e. , all disjunctions @xmath463 of literals such that @xmath463 is true in @xmath349 under any assignment . </S>",
    "<S> let us denote this set of axioms by @xmath499 .    </S>",
    "<S> we will base the definition of bounded arithmetic theories on a somewhat stronger normal form of induction . </S>",
    "<S> let @xmath500 denote the @xmath454-fold iteration of the function symbol @xmath446 .    </S>",
    "<S> let @xmath501 denote the expression @xmath502 the set @xmath503 consists of all expressions of the form @xmath504 with @xmath505 , @xmath506 a variable and @xmath462 an @xmath492-term .    </S>",
    "<S> this restricted form of induction implies the usual form , because the following can be proven from @xmath499alone . </S>",
    "<S> @xmath507    notation system for bounded arithmetic formulae    let @xmath508be the set of closed formulae in @xmath509 . </S>",
    "<S> we define the outermost connective function on @xmath508by @xmath510 and the sub - formula function on @xmath511 by @xmath512 : = \\begin{cases }      a & a \\text { literal } \\\\      </S>",
    "<S> a_{\\min(n,1 ) } & a \\text { is of the form } a_0{\\mathrel{\\:\\land\\:}}a_1                   \\text { or } a_0{\\mathrel{\\:\\lor\\:}}a_1 \\\\      b_x({\\underline}n ) & a \\text { is of the form } ( \\forall x)b                  \\text { or } ( \\exists x)b   \\enspace .    \\end{cases}\\ ] ] the rank and negation functions for the notation system are those defined for @xmath492 .    </S>",
    "<S> we did nt have much choice on how to render @xmath491 into a notation system for formulae . </S>",
    "<S> nevertheless , the above definition already shows that we have to work with a non - trivial intensional equality . </S>",
    "<S> the reason is that , even though in the process of the propositional translation we can make sure that we only have closed formulae , this still is not enough ; we do have other closed terms than just the canonical ones .    </S>",
    "<S> consider , for example , an arithmetical derivation ending in @xmath513 where @xmath25 is some function symbol . in the propositional translation we have to provide some witness @xmath7 for the @xmath514-inference . </S>",
    "<S> the `` obvious '' choice seems to take @xmath515 . but this would require a derivation of @xmath516=b({\\underline}{f^\\nn   ( 0)})$ ] . </S>",
    "<S> the translation of the sub - derivation , on the other hand , gives us a derivation of @xmath517 . </S>",
    "<S> so , in order to make this a correct inference in the propositional translation , he have to consider @xmath517 and @xmath518 as intensionally equal . </S>",
    "<S> note that both formulae are extensionally equal .    </S>",
    "<S> we will now define an intensional equality which provides the above described identification . for @xmath462 a closed term its numerical value @xmath519 </S>",
    "<S> is defined in the obvious way . </S>",
    "<S> let @xmath520 denote the rewriting relation obtained from @xmath521 for example , @xmath522 let @xmath523 denote the reflexive , symmetric and transitive closure of @xmath520 .    </S>",
    "<S> the just defined system consisting of @xmath508 , @xmath524 , @xmath118 $ ] , @xmath103 , @xmath525 and @xmath523 forms a notation system for formulae in the sense of definition  [ def : notationsystemforformulas ] .    </S>",
    "<S> it is an open problem what the complexity of @xmath523 is ( assuming a usual feasible arithmetisation of syntax ) . </S>",
    "<S> however , if the depth of expressions is restricted , and the number of function symbols representing polynomial time functions is also restricted to a finite subset , then the relation @xmath523 is polynomial time decidable . </S>",
    "<S> i.e. , let @xmath526 denote the restriction of @xmath523 to expressions of depth @xmath527 in which at most the first @xmath19 function symbols occur . </S>",
    "<S> then , for each @xmath19 , the relation @xmath526 is a polynomial time predicate .    from now on </S>",
    "<S> , we will assume that @xmath508implicitly contains such a constant @xmath19 without explicitly mentioning it . </S>",
    "<S> all formulae and terms used in @xmath508are thus assumed to obey the abovementioned restriction on occurrences of function symbols and depth . </S>",
    "<S> we will come back to this restriction at relevant places . </S>",
    "<S> the next observation already makes use of this assumption .    </S>",
    "<S> all relations and functions in @xmath508are polynomial time computable .    under the just fixed convention , the relation @xmath523 is actually @xmath526 for some @xmath19 .    </S>",
    "<S> let @xmath528denote the semiformal proof system over @xmath508according to definition  [ def : semiformal_proof_systems ] .    </S>",
    "<S> a notation system for @xmath528    the _ finitary proof system @xmath529 _ is the proof system over @xmath530 which is given by the following set of inference symbols . </S>",
    "<S> +    @ll@ + & + & + & +    according to definition  [ def : quasi - derivations ] , a @xmath529-quasi derivation @xmath3 is equipped with functions @xmath531 denoting the endsequent of @xmath3 , @xmath532 denoting the height of @xmath3 , and @xmath533 denoting the size of @xmath3 .    in our finitary proof system </S>",
    "<S> schtte s @xmath11-rule  @xcite is replaced by rules with eigenvariable conditions . </S>",
    "<S> of course , the precise name of the eigenvariable does not matter , as long as it _ is _ an eigenvariable . for this reason , </S>",
    "<S> we think of the inference symbols @xmath534 , @xmath535 , and @xmath536 in @xmath529-quasi derivations as binding the variable @xmath537 in the respective sub - derivations . </S>",
    "<S> fortunately , we do nt have to make this intuition precise , as we will always substitute only closed ( arithmetical ) terms into @xmath529-derivations and therefore no renaming of bound variables will be necessary ; hence we do nt have to define what this renaming would mean . </S>",
    "<S> note , however , that the details of definition  [ def : bastarderivation ] of @xmath529-derivations and definition  [ def : subst - bastar ] of substitution become obvious with this intuition on mind .    </S>",
    "<S> [ def : bastarderivation ] for @xmath538 a finite list of disjoint variables and @xmath539 a @xmath529-quasi - derivation we inductively define the relation @xmath540 that @xmath1 is a @xmath529-derivation with free variables among @xmath538 as follows .    * if @xmath541 and @xmath542 for some @xmath543 , and @xmath544 then @xmath545 . * if @xmath546 and @xmath547 then @xmath548 . * if @xmath546 , @xmath549 and @xmath550 then @xmath551 . * if @xmath552 then @xmath553 , * if @xmath546 , @xmath549 and @xmath554 with @xmath555 then @xmath556 . * </S>",
    "<S> if @xmath546 and @xmath557 with @xmath558 then @xmath545 .    a @xmath529-derivation is a @xmath529-quasi derivation @xmath3 such that for some @xmath538 it holds @xmath559 . </S>",
    "<S> we call a @xmath529-derivation @xmath3 _ closed _ , if @xmath560 .    if @xmath559 then @xmath561 . </S>",
    "<S> in particular @xmath562 for closed @xmath3 .    </S>",
    "<S> trivial induction on the inductive definition of @xmath559 .    </S>",
    "<S> [ def : subst - bastar ] for @xmath3 a @xmath529-derivation , @xmath537 a variable and @xmath462 a closed term of bounded arithmetic we define the substitution @xmath563 inductively by setting @xmath564 to be @xmath565 if @xmath72 is not of the form @xmath534 , @xmath535 , or @xmath536 with the same variable @xmath537 , and @xmath566 otherwise .    substitution for inference symbols is defined by setting @xmath567    we now show the substitution property for @xmath529-derivations . </S>",
    "<S> the formulation of lemma  [ lem : bastar - subst ] might look a bit strange with `` @xmath160 '' instead of the more familiar equality . </S>",
    "<S> the reason is , that a substitution may make formulae equal which are not equal without the substitution .    </S>",
    "<S> recalling however definition  [ def : turnstile ] , we note that derivations @xmath3 in fact prove every superset of @xmath531 . of course </S>",
    "<S> , an easy consequence of lemma  [ lem : bastar - subst ] is that if @xmath568 then @xmath569 .    </S>",
    "<S> [ lem : bastar - subst ] assume @xmath559 and let @xmath537 be a variable and @xmath462 a closed term , then @xmath570 and moreover @xmath571 .    </S>",
    "<S> we argue by induction on the build - up of @xmath3 .    in the cases where no substitution occurs ( as @xmath572 with @xmath72 of the form @xmath534 , @xmath535 , or @xmath536 with the same variable @xmath537 ) both claims are trivial .    otherwise </S>",
    "<S> , by induction hypothesis , we know that the sub - derivations are @xmath529-derivations with the correct set of free variables ; since substitution is also carried out in the inference symbols , the @xmath537 in the variable conditions for @xmath76 and @xmath573 will also disappear due to the substitution . </S>",
    "<S> the eigenvariable condition @xmath574 will follow once we have shown the second claim .    for the second claim we compute by induction hypothesis @xmath575 hence @xmath576 this finishes the proof .    </S>",
    "<S> we will now define the ingredients for a notation system for @xmath528 , which forms the embedding of @xmath577into @xmath528 .    </S>",
    "<S> let @xmath37be the set of closed @xmath577-derivations .    for each @xmath578 </S>",
    "<S> we define the denoted last inference @xmath13 as follows : let @xmath579 , @xmath580    for each @xmath578 and @xmath581 we define the denoted sub - derivation @xmath582 $ ] as follows : let @xmath579 . if @xmath583 let @xmath582 : = { \\mathrm{ax}}_{0=0}$ ] . </S>",
    "<S> otherwise , assume @xmath584 and define @xmath585 : = \\begin{cases } h_{\\min(j,1 ) }    & \\text{if } { \\mathcal{i}}={{\\textstyle\\bigwedge}}_{a_0{\\mathrel{\\:\\land\\:}}a_1 }   \\\\ h_0    & \\text{if } { \\mathcal{i}}={{\\textstyle\\bigvee}}^k_{a_0{\\mathrel{\\:\\lor\\:}}a_1 } \\\\ h_0({\\underline}j / y )    & \\text{if } { \\mathcal{i}}={{\\textstyle\\bigwedge}}^y_{(\\forall x)a }   \\\\ </S>",
    "<S> h_0    & \\text{if } { \\mathcal{i}}={{\\textstyle\\bigvee}}^t_{(\\exists x)a }    \\\\ { \\mathrm{ind}}^{y,0,|t|^\\nn}_{f}h_0    & \\text{if } { \\mathcal{i}}={\\mathrm{ind}}^{y , t}_{f }   \\\\ </S>",
    "<S> h_0({\\underline}n / y )    & \\text{if } { \\mathcal{i}}={\\mathrm{ind}}^{y , n,0}_{f }   \\\\ { \\mathrm{ind}}^{y , n , i}_{f}h_0    & \\text{if } { \\mathcal{i}}={\\mathrm{ind}}^{y , n , i+1}_{f } \\text { and } j=0    \\\\ { \\mathrm{ind}}^{y , n+2^i , i}_{f}h_0    & \\text{if } { \\mathcal{i}}={\\mathrm{ind}}^{y , n , i+1}_{f } \\text { and } j=1    \\\\ h_j    & \\text{if } { \\mathcal{i}}={\\mathrm{cut}}_c \\end{cases}\\ ] ]    the denoted end - sequent function on @xmath586 is given by @xmath272 computed according to definition  [ def : quasi - derivations ] . </S>",
    "<S> the size function @xmath323 on @xmath586 is given by @xmath587 .    </S>",
    "<S> to define the denoted height function we need some analysis yielding an upper bound to the log of the lengths of inductions which may occur during the embedding ( we take the log as this bounds the height of the derivation tree which embeds the application of induction ) . </S>",
    "<S> let us first assume @xmath454 is such an upper bound , and let us define the denoted height @xmath588 of @xmath3 relative to @xmath454 : for a @xmath529-derivation @xmath579 we define @xmath589 observe that @xmath590 ( in particular , @xmath591 ) .    to fill the gap of providing a suitable upper bound function of @xmath577-derivations we first need to fix monotone bounding terms for any term in @xmath492 .      for a term @xmath462 </S>",
    "<S> we define a term @xmath592 which represents a monotone function with the following property : if @xmath593 then @xmath594 let @xmath595 be a fixed list of free variables . </S>",
    "<S> we fix for each function symbol @xmath25 of arity @xmath17 a _ monotone bounding term _ </S>",
    "<S> @xmath596 with @xmath597 . e.g. , assume that we have fixed for each function symbol @xmath25 in our language a number @xmath598 such that @xmath599 holds . </S>",
    "<S> we then can define @xmath600 as the only exception we demand that @xmath601 .    </S>",
    "<S> now , let @xmath462 be a term . </S>",
    "<S> if @xmath462 is a closed term , let @xmath602 . </S>",
    "<S> if @xmath603 is not a closed term , let @xmath604 .      for @xmath578 , the bounding term @xmath605 is intended to bound any variable which occurs during the embedding of @xmath3 , and the term @xmath606 is intended to bound the length of any induction which occurs during the embedding of @xmath3 .    </S>",
    "<S> let @xmath579 be in @xmath37 .. we define @xmath607 \\operatorname{ibd}(h)&:= \\begin{cases } \\operatorname{ibd}(h_0({\\underline}{\\operatorname{bd}(t)}/y ) ) & \\text { if } { \\mathcal{i}}={{\\textstyle\\bigwedge}}^y_{(\\forall x\\le t)a }   \\\\ \\max(\\operatorname{ibd}(h_0({\\underline}{2^{|\\operatorname{bd}(t)|}}/y)),2^{|\\operatorname{bd}(t)| } ) & \\text { if } { \\mathcal{i}}={\\mathrm{ind}}^{y , t}_f   \\\\ </S>",
    "<S> \\max(\\operatorname{ibd}(h_0({\\underline}{n+2^i}/y)),2^i ) & \\text { if } { \\mathcal{i}}= { \\mathrm{ind}}^{y , n , i}_f   \\\\ \\max(\\operatorname{ibd}(h_0),\\dots,\\operatorname{ibd}(h_{n-1 } ) ) & \\text { otherwise . } \\end{cases }   \\end{aligned}\\ ] ]    now we can define the denoted height function @xmath608 for @xmath578 .    </S>",
    "<S> the just defined system consisting of @xmath37 , @xmath524 , @xmath118 $ ] , @xmath272 , @xmath609 and @xmath446 forms a notation system for @xmath528 in the sense of definition  [ def : notation - for - proof - system ] .    </S>",
    "<S> first , we observe that @xmath609 satisfies the following monotonicity property : @xmath610 we also observe the following substitution property by inspection : @xmath611    we prove the following slightly more general assertion : @xmath612)<\\operatorname{o}_m(h)\\ ] ] then the assertion of the theorem follows using the monotonicity property , as @xmath613)\\le\\operatorname{ibd}(h)$ ] .    </S>",
    "<S> the proof of is by induction on the build - up of @xmath3 . </S>",
    "<S> let @xmath579 .    </S>",
    "<S> first assume that @xmath15=h_j(t / y)$ ] . </S>",
    "<S> the definition of @xmath614 immediately shows that in this case @xmath615 . </S>",
    "<S> the substitution property shows that @xmath616 . hence @xmath617 )   </S>",
    "<S> \\enspace.\\ ] ]    the remaining cases are the following ones :    if @xmath618 , then @xmath255={\\mathrm{ind}}^{y,0,|t|}_{f } h_0 $ ] . as @xmath619 </S>",
    "<S> we obtain @xmath620)=\\operatorname{o}_m(h_0)+|t|+1<\\operatorname{o}_m(h_0)+m+1=\\operatorname{o}_m(h ) \\enspace.\\ ] ]    if @xmath621 , then @xmath15= { \\mathrm{ind}}^{y , n',k}_{f } h_0 $ ] for some @xmath274 hence @xmath622)=\\operatorname{o}_m(h_0)+k+1<\\operatorname{o}_m(h_0)+k+2=\\operatorname{o}_m(h ) \\enspace.\\ ] ]    thus , assertion is proven . </S>",
    "<S> the theorem follows using the next proposition which shows the local faithfulness property of the denoted end - sequent function @xmath272 .    </S>",
    "<S> @xmath272 satisfies the local faithfulness property : let @xmath623 , then @xmath229)\\setminus{{{\\mathrel{{\\approx}_\\nn}}}{\\delta}_\\iota(\\operatorname{tp}(h ) ) } ) \\big ) \\subseteq { { { \\mathrel{{\\approx}_\\nn}}}{\\gamma}(h ) } \\enspace.\\ ] ]    let @xmath624 . </S>",
    "<S> we abbreviate @xmath282)\\setminus{{{\\mathrel{{\\approx}_\\nn}}}{\\delta}_\\iota(\\operatorname{tp}(h ) ) } ) \\big ) \\enspace.\\ ] ]    * case 1 . </S>",
    "<S> * @xmath625 : let @xmath463 be the `` least '' true literal in @xmath626 , then @xmath627    * case 2 . * @xmath628 for @xmath629 : @xmath630 , @xmath255=h_0 $ ] and @xmath631=a_0 $ ] , and @xmath632=h_1 $ ] and @xmath633=a_1 $ ] for @xmath634 , hence @xmath635    * case 3 . * @xmath636    * case 4 . * @xmath637 : @xmath638 , and @xmath632=h_0({\\underline}\\iota / y)$ ] and @xmath639=a({\\underline}\\iota / x)$ ] for @xmath640 hence @xmath641 @xmath642 : uses eigenvariable condition .    </S>",
    "<S> * case 5 . </S>",
    "<S> * @xmath643 : @xmath644 and @xmath255=h_0 $ ] , hence @xmath645    * case 6 . * </S>",
    "<S> @xmath646 : @xmath647 and @xmath255={\\mathrm{ind}}^{y,0,|t^\\nn|}_{f}h_0 $ ] , hence @xmath648    * case 7 . * @xmath649 : @xmath647 and @xmath255=h_0({\\underline}n / y)$ ] , hence @xmath650 @xmath651 uses eigenvariable condition .    </S>",
    "<S> * case 8 . </S>",
    "<S> * @xmath652 : @xmath653 , @xmath255={\\mathrm{ind}}^{y , n , i}_{f}h_0 $ ] , and @xmath265={\\mathrm{ind}}^{y , n+2^i , i}_{f}h_0 $ ] , hence ( abbreviating @xmath654 ) @xmath655    * case 9 . * </S>",
    "<S> @xmath656 : @xmath224 and @xmath632=h_\\iota$ ] for @xmath657 , hence @xmath658    the following relations and functions are polynomial time computable : the finitary proof system @xmath529 , the set of @xmath529-quasi derivations and the functions @xmath659 , @xmath660 , and @xmath661 denoting the endsequent , the height and the size for a @xmath529-quasi derivation @xmath3 ; the bounding term @xmath662 for terms @xmath462 occurring in @xmath663 and the relations @xmath664 and @xmath665 on @xmath666 ; the set @xmath586 and the functions @xmath667 , @xmath668 $ ] , @xmath659 , @xmath669 and @xmath670 .    </S>",
    "<S> for bounding terms we use our assumption that a fixed ( finite ) number of function symbols and term depth is only allowed , which implies that terms can only denote a fixed finite number of different polynomial time computable functions . </S>",
    "<S> that @xmath664 is polynomial time computable is clear as the computation of @xmath605 computes a monotone increasing sequence of values by successively applying one of the finitely many polynomial time computable functions , and once the bound @xmath454 is exceeded during this process we can already output _ </S>",
    "<S> no_.    as the function @xmath605 in general may not be polynomially bounded , we can not conclude in general that @xmath671 is polynomial time computable . </S>",
    "<S> however , the function @xmath672 is polynomial time computable and will be sufficient in our applications .    </S>",
    "<S> computational content of proofs    let us start by describing the idea for computing witnesses using proof trees . </S>",
    "<S> assume we have a ba proof of an existential formula @xmath673 and we want to compute a @xmath19 such that @xmath674 is true  in case we are interested in definable functions , such a situation is obtained from a proof of @xmath28 by inverting the universal quantifier to some @xmath675 . </S>",
    "<S> assume further , we have applied some proof theoretical transformations to obtain a @xmath676 derivation @xmath677 of @xmath673 with @xmath678 for some set of formulae @xmath78 ( the choice of @xmath78 depends on the level of definability we are interested in ) . </S>",
    "<S> then we can define a path through @xmath677 , represented by sub - derivations @xmath679 with    * @xmath680 for some @xmath681 * @xmath682 where all formulae @xmath683 are false and satisfy @xmath684 .    as @xmath677 is well - founded </S>",
    "<S> , such a path must be finite , i.e.  ends with some @xmath685 say . </S>",
    "<S> in this situation we must have that @xmath686 and that @xmath674 is true . </S>",
    "<S> hence we can output @xmath19 .    </S>",
    "<S> such a path can be viewed as the canonical path to the following local search problem : let @xmath687 be a set of possible solutions , which is a subset of @xmath676 containing only those @xmath688 which satisfy that @xmath689 where all formulae @xmath690 are false and satisfy @xmath684 . </S>",
    "<S> furthermore , assume @xmath691 and that @xmath687 is closed under the following neighbourhood function @xmath692 which is defined by case distinction on the shape of @xmath693 for @xmath694 :    * @xmath695 can not occur as all atomic formulae in @xmath696 are false . </S>",
    "<S> * @xmath697 , then @xmath698 must be false , hence some of @xmath699 must be false . </S>",
    "<S> let @xmath700 if @xmath701 is false , and @xmath702 otherwise . </S>",
    "<S> * @xmath703 , then @xmath704 must be false , hence both @xmath699 must be false . </S>",
    "<S> let @xmath700 . </S>",
    "<S> * @xmath705 . as @xmath706 is false </S>",
    "<S> there is some @xmath7 such that @xmath707 is false . </S>",
    "<S> let @xmath708 . </S>",
    "<S> * @xmath709 . </S>",
    "<S> if @xmath710 is different from @xmath673 then @xmath710 must be false ; let @xmath711 . </S>",
    "<S> otherwise , let @xmath712 in case @xmath674 is false , and @xmath713 in case it is true ( in which case we found a true solution to the original search problem ) . </S>",
    "<S> * @xmath714 . </S>",
    "<S> if @xmath470 is false let @xmath700 , otherwise let @xmath715 .    </S>",
    "<S> the idea in the following will be to use proof notations from @xmath586 to denote this search problem . this way we will obtain characterisations of the definable functions of bounded arithmetic theories .    </S>",
    "<S> the level of proof theoretic reduction will be adjusted in such a way that occurring formulae which have to be decided fall exactly in the computational class under consideration . </S>",
    "<S> so our main concern in order for this strategy to be meaningful is to find feasible upper bounds for the length of such reduction sequences and for the complexity of derivation notations occurring in them .      </S>",
    "<S> in order to handle the complexity of @xmath577proof notations occurring in the set of possible solutions , we need some notions describing key complexity properties of them which we will provide first .    </S>",
    "<S> although @xmath716 for any @xmath463 starting with a @xmath717 , and thus we can denote infinitely many direct sub - formulae by @xmath718 $ ] for all @xmath675 , only finitely many carry non - trivial information , because all quantifiers ( and in particular this outermost @xmath717 ) are bounded . </S>",
    "<S> the next definition makes this formal by assigning first to each closed formula in @xmath663 , then to each inference symbol in @xmath676 , and finally to each proof notation in @xmath719 , its range .    </S>",
    "<S> let @xmath463 be a formula in @xmath508 . </S>",
    "<S> we define _ the range of @xmath463 , _ denoted @xmath720 , by @xmath721    let @xmath72 be an inference symbol of @xmath528 . </S>",
    "<S> we define _ the range of @xmath72 , _ denoted @xmath722 , by @xmath723    for @xmath724 we define @xmath725    we extend the definition of bounding terms @xmath605 and @xmath726 from @xmath586 to @xmath719 in the following way by induction on the build - up of @xmath724 :    * if @xmath578 then the definition of @xmath605 and @xmath726 are inherited from the definition of @xmath727 resp .  </S>",
    "<S> @xmath726 on @xmath37 . * if @xmath248 then @xmath728 * @xmath729 , @xmath730 . * </S>",
    "<S> @xmath731 , @xmath732 .    </S>",
    "<S> [ lem : bd ] let @xmath724 .    1 .   if @xmath733 then @xmath734)\\le\\operatorname{bd}(h)$ ] and @xmath735)\\le\\operatorname{ibd}(h)$ ] . </S>",
    "<S> 2 .   if @xmath736 then @xmath737 .    for @xmath738 </S>",
    "<S> we define _ the set of decorations of @xmath3 , @xmath739 , _ by induction on the build - up of @xmath3 . </S>",
    "<S> let @xmath579 . </S>",
    "<S> we define @xmath740 where @xmath741    we have @xmath742 .    </S>",
    "<S> let @xmath743 be the set of all @xmath724 which have the property that all occurrences of @xmath291 in @xmath3 satisfy @xmath744 .    </S>",
    "<S> let @xmath745 be a finite set of formulae in @xmath746 , and let @xmath51 be a size parameter . </S>",
    "<S> with @xmath747 we denote the set of formulae which result from formulae in @xmath745 by substituting free variables by constants from @xmath748 .    </S>",
    "<S> [ lem : deco ] let @xmath749 and @xmath750 such that @xmath751 , and @xmath745 is closed under negation and taking sub - formulae . </S>",
    "<S> let @xmath752 and @xmath537 be a variable .    1 .   if @xmath753 and @xmath754 , then @xmath755\\in\\phi_k$ ] . </S>",
    "<S> 2 .   if @xmath753 then @xmath756 . </S>",
    "<S> 3 .   @xmath757 ( subscript @xmath605 needed e.g.  for @xmath758 ) . </S>",
    "<S> 4 .   if @xmath733 then @xmath759)\\subseteq\\phi_{\\operatorname{bd}(h)}$ ] .    for 4 . , consider the case that @xmath760 , @xmath761 and @xmath762 , i.e.  @xmath255=\\i^k_c h_0 $ ] . by 3 .  </S>",
    "<S> we have @xmath763 , hence @xmath764 </S>",
    "<S> . also @xmath765 by lemma  [ lem : bd ] , 2 . </S>",
    "<S> hence , @xmath766\\in\\phi_{\\operatorname{bd}(h)}$ ] by 1 . </S>",
    "<S> now we compute @xmath767 ) = \\{c[k]\\}\\cup\\operatorname{deco}(h_0 ) \\subseteq      \\phi_{\\operatorname{bd}(h)}\\cup\\phi = \\phi_{\\operatorname{bd}(h ) } \\enspace.\\ ] ]    for @xmath724 we have that the cardinality of @xmath531 is bounded above by @xmath768 .    </S>",
    "<S> let the cardinality of a set @xmath55 be denoted by @xmath769 . </S>",
    "<S> we observe that @xmath770 for any @xmath771 . </S>",
    "<S> thus we can compute for @xmath772 @xmath773      we identify the notation system @xmath586 for @xmath676 with the abstract system of proof notations associated with it according to observation  [ obs : abstraction - of - notation - system ] . for @xmath341 a size parameter </S>",
    "<S> we define @xmath774 then @xmath775 is an @xmath2-bounded , abstract system of proof notations , because we observe that @xmath578 and @xmath776 implies @xmath777 .    remember that @xmath324 for @xmath724 denotes the abstraction of @xmath3 which allows us to view @xmath719 as a subsystem of @xmath778 ( see definition  [ def : abstraction ] and observation  [ obs : abstraction ] ) .    for @xmath724 </S>",
    "<S> we define @xmath779 .    theorem  [ th : main ] now reads as follows :    [ cor : main ] if @xmath780 and @xmath776 , then @xmath781 .    </S>",
    "<S> [ def : local - search ] we define a local search problem @xmath782 parameterised by    * a finite set of bounded formulae @xmath783 , * a _ `` complexity class '' @xmath78 _ given as a polynomial time computable set of @xmath441-formulae ( usually @xmath784 for some @xmath7 ) , * a _ size parameter @xmath341 , _ * an _ initial value function @xmath785 , _ where @xmath786 is presented in the form @xmath787 for some @xmath529-derivation @xmath3 , * a formula @xmath788 with @xmath789 ,    such that , for @xmath444 ,    * @xmath790 , * @xmath791 , * @xmath792 , * @xmath793 , * @xmath794 ,    in the following way :    * the set of _ possible solutions @xmath795 _ is given as the set of those @xmath796 which satisfy : 1 .   </S>",
    "<S> @xmath797 for some @xmath798 such that all @xmath799 are closed and false , 2 .   </S>",
    "<S> @xmath800 , 3 .   </S>",
    "<S> @xmath801 , 4 .   </S>",
    "<S> @xmath802 , 5 .   </S>",
    "<S> @xmath803 and @xmath804 , 6 .   </S>",
    "<S> @xmath805 ; * the _ initial value function _ is given by @xmath806 ; * the _ cost function _ is defined as @xmath807 ; and * the _ neighbourhood function _ is given by @xmath808 & \\text{if } \\operatorname{tp}(h)={{\\textstyle\\bigwedge}}_c , j<\\operatorname{rng}(c )          \\text { and } c[j]\\text { false}\\enspace,\\\\ h[0 ] & \\text{if } \\operatorname{tp}(h)={{\\textstyle\\bigvee}}^i_c \\text { and } c\\neq(\\exists y){\\varphi}({\\underline}a , y ) \\\\       & \\text { or } \\operatorname{tp}(h)={{\\textstyle\\bigvee}}^i_{(\\exists y){\\varphi}({\\underline}a , y ) }          \\text { and } { \\varphi}({\\underline}a,{\\underline}i)\\text { false } \\enspace , \\\\ </S>",
    "<S> h[0 ] & \\text{if } \\operatorname{tp}(h)={\\mathrm{cut}}_c \\text { and } c\\text { false } \\enspace , \\\\ h[1 ] & \\text{if } \\operatorname{tp}(h)={\\mathrm{cut}}_c \\text { and } c\\text { true } \\enspace , \\\\ </S>",
    "<S> h[0 ] & \\text{if } \\operatorname{tp}(h)={\\mathrm{rep}}\\enspace , \\\\ h & \\text{otherwise } \\enspace . \\end{cases}\\ ] ]    ( observe that the just defined neighbourhood function is a multi - function due to case @xmath809 . )    </S>",
    "<S> first observe that the initial value is indeed a possible solution , @xmath810 .    </S>",
    "<S> let @xmath811 , @xmath812 . </S>",
    "<S> then we show    1 .   </S>",
    "<S> @xmath813 implies @xmath776 and @xmath814 , 2 .   </S>",
    "<S> @xmath815 .    </S>",
    "<S> for @xmath816 the assertions are obvious . </S>",
    "<S> so let us assume @xmath813 . </S>",
    "<S> then @xmath817 $ ] for some @xmath733 by construction . </S>",
    "<S> hence , the first claim is obvious .    for the second claim , </S>",
    "<S> we consider i)vi ) of the definition of @xmath815 : ii ) is clear ; iii ) is obvious ; for iv ) observe that @xmath776 , thus @xmath818 by corollary  [ cor : main ] ; for v ) observe that @xmath733 implies @xmath819 and @xmath820 by lemma  [ lem : bd ] ; for vi ) observe that @xmath733 implies @xmath821 by lemma  [ lem : deco ] , 2 . , because @xmath803 . </S>",
    "<S> and finally for i ) we first observe that the first condition that @xmath822 is a subset of @xmath823 consisting only of closed formulae , is satisfied , as @xmath800 . </S>",
    "<S> for the second condition of i ) let @xmath824 . </S>",
    "<S> we have by proposition  [ prop : cons - faithfull ] that @xmath230)\\subseteq { { { \\mathrel{{\\approx}_\\nn}}}\\big({\\gamma}(h)\\cup{\\delta}_j({\\mathcal{i}})\\big)}\\ ] ] thus it is enough to show that @xmath825 is false </S>",
    "<S> .    * @xmath826 : @xmath827\\}$ ] and @xmath755 $ ] false by construction . * </S>",
    "<S> @xmath828 : then @xmath762 . if @xmath829 , then @xmath830\\}$ ] . </S>",
    "<S> now @xmath470 is false by i ) of @xmath811 , hence @xmath831 $ ] must be false as well . </S>",
    "<S> otherwise , @xmath832 , and @xmath833 false by construction . </S>",
    "<S> * @xmath656 : if @xmath762 , then @xmath834 and @xmath470 false by construction . </S>",
    "<S> otherwise , @xmath835 , then @xmath836 and @xmath469 false by construction . * </S>",
    "<S> @xmath837 : then @xmath762 and @xmath838 and nothing is to show .    </S>",
    "<S> @xmath839 , @xmath840 , and @xmath841 $ ] .    </S>",
    "<S> first observe that the functions @xmath842 , @xmath843 , @xmath844 , @xmath845 , @xmath846 , and @xmath847 are polynomial time computable .    </S>",
    "<S> furthermore , the relations @xmath848 , @xmath800 , @xmath664 , @xmath665 and @xmath849 are polynomial time computable , and once @xmath665 is established we also can compute @xmath850 and then @xmath671 in polynomial time . hence @xmath851    also , the functions @xmath13 and @xmath15 $ ] are polynomial time computable on @xmath719 , which shows @xmath841 $ ] .    for @xmath839 observe that @xmath852 , hence condition @xmath811 , i ) , is a property in @xmath853 .    [ </S>",
    "<S> prop : properties - l ]    1 .   </S>",
    "<S> @xmath854 implies @xmath855 with @xmath833 true . </S>",
    "<S> thus , the local search problem @xmath782 defines a multi - function by mapping @xmath450 to @xmath7 ( this is called the computed multi - function ) . </S>",
    "<S> 2 .   the search problem @xmath782 in general defines a search problem in @xmath856 , assuming that we turn the neighbourhood ( multi-)function into a real function , which can easily be achieved by using an intermediate @xmath856 search problem which looks for the smallest witness for the case @xmath857 . then @xmath858 . </S>",
    "<S> 3 .   assume @xmath859 . </S>",
    "<S> then the canonical path through @xmath782 , which starts at @xmath786 and leads to a local minimum , is of polynomial length with terms of polynomial size , thus the computed multi - function is in @xmath860 $ ] .      </S>",
    "<S> let @xmath862 and assume that @xmath863 with @xmath864 , @xmath865 . </S>",
    "<S> by partial cut - elimination we obtain some @xmath577-derivation @xmath3 such that    * @xmath866 , * @xmath867 , * @xmath868 , and * @xmath869 .    </S>",
    "<S> we define a search problem by stating its parameters :    * @xmath870 is a finite set of formulae in @xmath746 , * as the `` complexity class '' we take @xmath871 , * for the size parameter we choose @xmath872 , * the initial value function is given by @xmath873 , * the formula is as given , @xmath43 .    </S>",
    "<S> this defines a local search problem according to definition  [ def : local - search ] , because    * @xmath874 , * as @xmath875 we have @xmath876 , hence @xmath877 * @xmath794 by lemma  [ lem : deco ] , 1 .    as @xmath878 , proposition  [ prop : properties - l ] , 3 . </S>",
    "<S> , shows that the computed multi - function of this search problem is in @xmath879 $ ] , which coincides with the description given by krajek@xcite .      </S>",
    "<S> let @xmath880 and assume that @xmath881 with @xmath864 , @xmath865 . </S>",
    "<S> by partial cut - elimination we obtain some @xmath577-derivation @xmath3 such that    * @xmath866 , * @xmath867 , * @xmath882 , and * @xmath869 .    </S>",
    "<S> we define a search problem by stating its parameters :    * @xmath870 is a finite set of formulae in @xmath746 , * as the `` complexity class '' we take @xmath871 , * for the size parameter we choose @xmath872 , * the initial value function is given by @xmath883 , * the formula is as given , @xmath43 .    </S>",
    "<S> this defines a local search problem according to definition  [ def : local - search ] , because    * @xmath790 , * @xmath884 , * @xmath885 , * as @xmath876 we have @xmath886 * @xmath794 .    as @xmath859 , proposition  [ prop : properties - l ] , 3 . </S>",
    "<S> , shows that the computed multi - function of this search problem is in @xmath887={\\mathrm{fp}}^{{\\ensuremath{{\\sigma}^{\\mathrm{b}}_{i-1}}\\xspace}}[{\\text{wit}}]$ ] .    </S>",
    "<S> but this immediately implies that the i - definable functions of @xmath6 are in @xmath8 , because a witness query to @xmath888 can be replaced by @xmath889 many usual ( non - witness ) queries to @xmath890 using a divide and conquer strategy . </S>",
    "<S> this characterisation coincides with the one given by buss @xcite .      </S>",
    "<S> let @xmath880 and assume that @xmath892 with @xmath864 , @xmath865 . </S>",
    "<S> by partial cut - elimination we obtain some @xmath577-derivation @xmath3 such that    * @xmath866 , * @xmath867 , * @xmath893 , and * @xmath869 .    </S>",
    "<S> we define a search problem by stating its parameters :    * @xmath870 is a finite set of formulae in @xmath746 , * as the `` complexity class '' we take @xmath871 , * for the size parameter we choose @xmath872 , * the initial value function is given by @xmath894 , * the formula is as given , @xmath43 .    </S>",
    "<S> this defines a local search problem according to definition  [ def : local - search ] , because    * @xmath790 , * @xmath884 , * @xmath895 , * as @xmath876 we have @xmath896 * @xmath794 .    by proposition  [ prop : properties - l ] , 2 . </S>",
    "<S> , this defines a search problem in @xmath897 . </S>",
    "<S> this coincides with the description given by buss and krajek@xcite .      </S>",
    "<S> let @xmath900 , @xmath901 , and assume that @xmath902 with @xmath903 , @xmath904 . </S>",
    "<S> by partial cut - elimination we obtain some @xmath577-derivation @xmath3 such that    * @xmath866 , * @xmath867 , * @xmath905 , and * @xmath906 .    </S>",
    "<S> we define a search problem by stating its parameters :    * @xmath870 is a finite set of formulae in @xmath746 , * as the `` complexity class '' we take @xmath907 , * for the size parameter we choose @xmath872 , * the initial value function is given by @xmath908 , * the formula is as given , @xmath43 .    </S>",
    "<S> this defines a local search problem according to definition  [ def : local - search ] , because    * @xmath790 , * @xmath909 , * @xmath910 , * as @xmath876 we have @xmath911 * @xmath794 by lemma  [ lem : deco ] , 1 .    as @xmath878 , proposition  [ prop : properties - l ] , 3 . </S>",
    "<S> , shows that the computed multi - function of this search problem is in @xmath912 $ ] , which coincides with the description given by pollett  @xcite . </S>"
  ]
}
{
  "article_text": [
    "propositional satisfiability ( sat ) solvers based on _ conflict - driven clause learning ( cdcl ) _  @xcite implement a combination of the dpll algorithm  @xcite and propositional _ resolution _",
    "@xcite to derive _ learned clauses _ from a cnf to be solved .",
    "cdcl has been extended to solve _ quantified boolean formulas ( qbfs ) _",
    "@xcite , resulting in the _ qcdcl _ approach  @xcite .",
    "the logic of qbfs allows for explicit universal and existential quantification of propositional variables . as a consequence ,",
    "the satisfiability problem of qbfs is pspace - complete .",
    "in contrast to sat solving , where cdcl is the dominant solving paradigm in practice , qcdcl is complemented by _ variable expansion",
    "_  @xcite .",
    "this approach successively eliminates variables from a qbf until it reduces to either true or false .",
    "many modern solvers ( e.g.  @xcite ) implement expansion by _ counter - example guided abstraction refinement ( cegar ) _  @xcite .    the _ q - resolution calculus ( qres ) _",
    "@xcite is a qbf proof system that underlies qcdcl in a way that is analogous to propositional resolution in cdcl .",
    "the empty clause is derivable from a pcnf @xmath0 by qresiff @xmath0 is unsatisfiable . according to qbf proof complexity",
    ", there is an exponential separation between the sizes of proofs that variable expansion and q - resolution can produce for certain qbfs  @xcite .",
    "this theoretical result suggests to combine such orthogonal proof systems in qbf solvers to leverage their individual strengths .    as a first step towards a solver framework that allows for the combination of qbf proof systems in a systematic way",
    ", we present version  6.0 of the qcdcl solver .",
    "in contrast to traditional qcdcl based on qres  @xcite , implements a variant of qcdcl that relies on a generalization of qres .",
    "this generalization is due to a set of new axioms added to qres  @xcite . in practice , derivations made by the added axioms in qcdcl are based on _ arbitrary _ qbf proof systems . as a consequence , when applying proof systems that are orthogonal to q - resolution , the generalization of qresvia the new axioms enables qcdcl as implemented in to potentially produce exponentially shorter proofs than traditional qcdcl .",
    "we report on experiments where we compare to state of the art qbf solvers .",
    "experimental results demonstrate the effectiveness of generalized qresin qcdcl .",
    "additionally , we briefly summarize the evolution of since the first version  0.1  @xcite .",
    "we relate the features that were added to the different versions of over time to the enhanced variant of qcdcl implemented in .",
    "a qbf @xmath1 in _ prenex conjunctive normal form ( pcnf ) _ consists of a _ quantifier prefix _ @xmath2 and a cnf @xmath3 not containing tautological clauses .",
    "the cnf @xmath3 is defined over the propositional variables @xmath4 that appear in @xmath5 .",
    "the variable sets @xmath6 are pairwise disjoint and @xmath7 for @xmath8 .",
    "qbfs @xmath1 in _ prenex disjunctive normal form ( pdnf ) _ are defined analogously to pcnfs , where @xmath3 is a dnf consisting of _",
    "cubes_. a cube is a conjunction of literals .",
    "the _ quantifier _ @xmath9 of a literal @xmath10 is @xmath11 if the variable @xmath12 of @xmath10 appears in @xmath6 .",
    "if @xmath13 and @xmath14 , then @xmath15 iff @xmath16 .    an _ assignment _ @xmath17 maps variables of a qbf @xmath18 to truth values _ true _ ( @xmath19 ) and",
    "( @xmath20 ) .",
    "we represent @xmath21 as a set of literals such that if a variable @xmath22 is assigned _ true _ ( _ false _ ) then @xmath23 with @xmath24 ( @xmath25 ) , where @xmath26 is the negation of @xmath22 .",
    "further , @xmath27 for any @xmath28 with @xmath29 .    the pcnf @xmath0 _ under assignment _",
    "@xmath17 , written as @xmath30 $ ] , is the pcnf obtained from @xmath0 in which for all @xmath31 , all clauses containing @xmath10 are removed , all occurrences of @xmath32 are deleted , and @xmath12 is removed from the prefix .",
    "if the cnf of @xmath30 $ ] is empty ( respectively , contains the empty clause @xmath33 ) , then it is satisfied ( falsified ) by @xmath17 and @xmath17 is a _ satisfying _ ( _ falsifying _ ) assignment , written as @xmath30 = \\top$ ] ( @xmath30 = \\bot$ ] ) .",
    "pdnf @xmath0 under an assignment @xmath17 _ and an _ empty cube _ are defined in a way dual to pcnfs and empty clauses .",
    "a qbf @xmath18 with @xmath34 ( @xmath35 ) is satisfiable iff , for @xmath36 , @xmath37 $ ] or ( and ) @xmath38 $ ] is satisfiable .",
    "two qbfs @xmath0 and @xmath39 are _ satisfiability - equivalent _ ( @xmath40 ) , iff @xmath0 is satisfiable whenever @xmath39 is satisfiable .",
    "in the following , we present the variant of qcdcl implemented in that relies on a generalization of the q - resolution calculus ( qres )  @xcite .",
    "we illustrate the workflow of that variant by fig .",
    "[ fig : qcdcl : enhanced ] .    in general , qcdcl is based on the successive generation of assignments that guide the application of the inference rules of qresto derive _ learned clauses _ and _ cubes _ ( called _ constraints _ ) from a given input pcnf @xmath41 . learned",
    "cubes are dual to clauses .",
    "while learned clauses represent assignments that falsify the cnf @xmath3 of @xmath42 , learned cubes represent assignments that satisfy @xmath3 .",
    "the empty cube is derivable from a pcnf @xmath0 by qresiff @xmath0 is satisfiable .",
    "we introduce the rules of qresto the extent necessary to illustrate the differences between traditional qcdcl and the variant implemented in .",
    "a qcdcl solver maintains a pcnf @xmath43 ( pdnf @xmath44 ) consisting of a cnf @xmath45 ( dnf @xmath46 ) of learned clauses ( cubes ) .",
    "the clauses in @xmath47 are added conjunctively to @xmath0 to obtain the formula @xmath48 , and the cubes in @xmath49 are added disjunctively to @xmath0 to obtain @xmath50 .",
    "it holds that @xmath51 and @xmath52 .",
    "initially the current assignment @xmath17 , the pcnf @xmath47 , and pdnf @xmath49 are empty .",
    "we use the notation @xmath53 , @xmath54 , and @xmath55 for both clauses and cubes .        during _ propagation",
    "_ , the formulas @xmath56 and @xmath57 are first simplified under the current assignment @xmath17 by computing @xmath58 $ ] and @xmath59 $ ] . then _ universal _ and _ existential reduction _ is applied to @xmath58 $ ] and to @xmath59 $ ] based on the following inference rule .",
    "let @xmath60 be a pcnf .",
    "universal ( existential ) reduction of clauses ( cubes ) by rule  [ rule_red ] eliminates trailing universal ( existential ) literals from a clause ( cube ) with respect to the linear quantifier ordering in the prefix of the pcnf @xmath0 .",
    "we write @xmath62 ( @xmath63 ) to denote the clause ( cube ) @xmath54 resulting from clause ( cube ) @xmath53 by fully reducing universal ( existential ) literals .",
    "let @xmath64 and @xmath65 denote the formulas obtained by applying universal ( existential ) reduction to all the clauses ( cubes ) in @xmath58 $ ] ( @xmath59 $ ] ) until saturation .",
    "new assignments are generated by _ unit literal detection _ with respect to @xmath64 and @xmath65 . if a pcnf ( pdnf ) @xmath0 contains a _",
    "unit clause ( cube ) _",
    "@xmath66 , where @xmath67 ( @xmath68 ) , then literal @xmath10 is _ unit _ and @xmath69 $ ] where @xmath70 ( @xmath71 ) .",
    "assignment @xmath17 is extended by assignments @xmath72 derived from unit clauses ( cubes ) in @xmath64 ( @xmath65 ) . for every unit clause ( cube ) @xmath73 ( @xmath74 ) with @xmath75 , the corresponding assignment @xmath76 ( @xmath77 ) is recorded .    after propagation , in _ conflict",
    "/ solution detection _",
    "it is checked whether @xmath64 is unsatisfiable or whether @xmath65 is satisfiable ( only one of the two cases can occur ) . to this end",
    ", _ incomplete _ methods are applied . in traditional qcdcl , for example",
    ", it is syntactically checked whether @xmath78 or whether @xmath79 , i.e. , whether the current assignment @xmath17 is falsifying or satisfying . in , we extend these incomplete checks by applications of _ arbitrary _ qbf decision procedures ( proof systems ) that are applied in a _ resource bounded _ way .",
    "if neither @xmath64 is found unsatisfiable nor @xmath65 is found satisfiable by the incomplete satisfiability checks , then in _ decision making _",
    "@xmath17 is extended by heuristically assigning some _ decision variable _",
    "@xmath22 from the leftmost quantifier block of @xmath30 $ ] ( @xmath80 where @xmath81 ) , and propagation continues .",
    "assignments generated by decision making and propagation are called _ qcdcl assignments_.",
    "if @xmath64 ( @xmath65 ) is found unsatisfiable ( satisfiable ) in conflict / solution detection then a learned clause ( cube ) is derived using qresdepending on the incomplete satisfiability checks . in traditional qcdcl",
    ", conflict / solution detection relies only on falsifying or satisfying assignments . if @xmath82 then @xmath64 contains an empty clause @xmath83 such that there is a clause @xmath84 with @xmath85)$ ] .",
    "clause @xmath53 is the _ falsified clause _ with respect to assignment @xmath17 .",
    "if @xmath53 appears in the given pcnf @xmath0 then in traditional qresit is derived trivially by the following axiom .",
    "[ def_trad_clause_axiom ] let @xmath60 be a pcnf .",
    "@xmath86    if @xmath87 but @xmath79 then either ( 1 ) @xmath65 contains an empty learned cube @xmath83 in @xmath65 such that there is a cube @xmath88 with @xmath89)$ ] , or ( 2 ) @xmath17 is a satisfying assignment that satisfies all clauses in @xmath65 . for case",
    "( 2 ) , a cube @xmath53 is derived by the following axiom of traditional qres ( in either case ( 1 ) or ( 2 ) cube @xmath53 is the _ satisfied cube _ with respect to @xmath17 ) .",
    "[ def_trad_cube_axiom ] let @xmath60 be a pcnf .",
    "@xmath90 = \\top$ ,   and $ c = ( \\bigwedge_{l \\in a } l)$ is a cube \\end{minipage } \\end{aligned}\\ ] ]    supports the application of _ arbitrary _ ( incomplete ) qbf decision procedures ( proof systems ) in conflict / solution detection and thus generalizes the syntactic checks for falsifying and satisfying assignments in traditional qcdcl .    to check the satisfiability of @xmath65 , in we apply a dynamic variant of _ blocked clause elimination ( qbce ) _  @xcite .",
    "this approach was introduced in version  5.0 of .",
    "qbce has been introduced as a preprocessing technique to eliminate redundant _ blocked clauses _",
    "@xcite from a pcnf . if all clauses in @xmath65 are satisfied under @xmath17 or identified as blocked , then @xmath65 is determined satisfiable . in our implementation applications of qbce are tightly integrated in the propagation phase via efficient data structures",
    "clauses that are blocked are temporarily considered as removed from the formula .",
    "hence such clauses can not be used to detect unit clauses or empty clauses during propagation .",
    "in addition to dynamic qbce , we implemented incomplete qbf satisfiability checks based on propositional abstractions of @xmath64 and @xmath65  @xcite , which are solved using an integrated sat solver .",
    "these abstractions are constructed by treating universally quantified literals in the given pcnf @xmath0 in a special way .",
    "propositional abstractions and sat solving leverage the benefits of techniques like _ trivial truth _ and _ trivial falsity _ presented already in early search - based qbf solvers  @xcite . additionally , the power of _ qu - resolution _  @xcite , which is exponentially stronger than q - resolution  @xcite but has not been applied systematically in qcdcl , is harnessed to a certain extent ( cf .",
    "example  3 in  @xcite ) .    as a simple way of applying a qbf decision procedure that is incomplete by its nature we integrated the preprocessor in .",
    "although preprocessing primarily aims at simplifying a formula within a restricted amount of time , certain formulas might already be solved by preprocessing ( cf .",
    "@xcite ) . among several techniques , applies bounded expansion of universally quantified variables  @xcite .",
    "hence by integrating in qcdcl we in fact integrate expansion , a qbf proof system that is orthogonal to q - resolution     if @xmath64 ( @xmath65 ) is found unsatisfiable ( satisfiable ) by an incomplete decision procedure but , unlike above , @xmath17 is neither falsifying nor satisfying , then a clause ( cube ) is derived by the following _ generalized _ axioms of qres .",
    "these axioms are added to qresand applied in addition to the traditional axioms  [ rule_cl_init ] and  [ rule_cu_init ] .",
    "[ def_gen_axioms ] let @xmath60 be a pcnf .",
    "$ is unsatisfiable , \\\\ and $ c = ( \\bigvee_{l \\in a } \\bar l)$ is a clause \\end{minipage } \\end{aligned}\\ ] ]    @xmath92 $ is satisfiable , \\\\ and $ c = ( \\bigwedge_{l \\in a } l)$ is a cube \\end{minipage } \\end{aligned}\\ ] ]    note that the generalized axioms allow to derive clauses and cubes that can not be derived by the traditional axioms  [ rule_cl_init ] and  [ rule_gen_cu_init ] in general .",
    "this is due to the application of arbitrary qbf decision procedures ( proof systems ) for satisfiability checking in conflict / solution detection or in the side conditions of the axioms , respectively . in the side conditions the satisfiability of the pcnf",
    "@xmath30 $ ] is checked , in contrast to formulas @xmath64 and @xmath65 as in conflict / solution detection .",
    "this is possible since @xmath93 $ ] and @xmath94 $ ] .",
    "the clause ( cube ) @xmath53 derived by applying the generalized clause axiom  [ rule_gen_cl_init ] ( [ rule_gen_cu_init ] ) is the _ falsified clause ( satisfied cube ) _ with respect to @xmath17 .    during _ clause ( cube ) learning _ , a new _ learned clause ( cube ) _",
    "@xmath95 is derived by qres .",
    "the falsified clause ( satisfied cube ) @xmath53 is the start clause ( cube ) of a derivation of @xmath95 .",
    "given @xmath17 , clauses ( cubes ) which became unit during propagation are systematically resolved based on the following _ q - resolution _ rule .",
    "let @xmath60 be a pcnf .",
    "@xmath96    rule  [ rule_res ] does not allow the resolvent @xmath97 to be a tautological clause ( contradictory cube ) and requires existential ( universal ) variables as pivots @xmath98 .",
    "in general , learning produces a nonempty clause ( cube ) @xmath99 , which is added to the pcnf @xmath47 ( pdnf @xmath49 ) of learned clauses ( cubes ) , and hence also to @xmath56 ( @xmath57 ) .    during _ backtracking _ , a certain subassignment @xmath100 is retracted such that @xmath95 becomes unit in propagation .",
    "@xmath95 is called an _ asserting _ clause ( cube )  @xcite .",
    "qcdcl terminates ( `` unsat '' or `` sat '' in fig .",
    "[ fig : qcdcl : enhanced ] ) by deriving the empty learned clause ( cube ) @xmath101 . a _ clause ( cube ) resolution proof _ of the unsatisfiability ( satisfiability ) of @xmath0",
    "can be obtained from the derivations of the learned clauses ( cubes ) up to the empty clause ( cube ) .",
    "note that by applying the generalized axioms using a complete qbf decision procedure , the empty assignment @xmath17 , and an unlimited amount of time , the empty clause ( cube ) can be derived right away from any given unsatisfiable ( satisfiable ) pcnf @xmath0 .",
    "however , to limit the time spent on the satisfiability checks , _ in practice _ it is crucial to apply incomplete procedures .",
    "furthermore , even with incomplete decision procedures that check satisfiability in polynomial time , the costs of frequent checks may outweigh the benefits .",
    "hence in , satisfiability checks for applications of the generalized axioms are scheduled depending on their observed run time .",
    "if these checks turn out to be too costly , then instead the traditional axioms are used .",
    "we briefly summarize the general features of that have been incorporated since its initial version  0.1  @xcite .",
    "most features were described in related publications .",
    "additionally , we comment on the compatibility of the features with the implementation of qreswith generalized axioms ( fig .  [ fig : qcdcl : enhanced ] ) in .    [ [ dependency - schemes . ] ] * dependency schemes . *",
    "+ + + + + + + + + + + + + + + + + + + + +    since the initial version  0.1 , has been equipped with the _ standard dependency scheme _",
    "@xcite to relax the linear quantifier ordering in the prefix of a given pcnf @xmath0 .",
    "in general , _ dependency schemes _",
    "@xcite are used to compute _ dependency relations _",
    "@xmath102 , which are binary relations over the set of variables in @xmath0 . if @xmath103 for two variables @xmath22 and @xmath104 then the ordering of @xmath22 and @xmath104 in @xmath0 can safely be swapped . otherwise , if @xmath105 then @xmath104 is considered to depend on @xmath22 .",
    "the integration of dependency schemes in qcdcl results in the following reduction rule , which is added to qresand implemented in .",
    "let @xmath60 be a pcnf and @xmath102 be a dependency relation computed using a dependency scheme .",
    "@xmath106    rule  [ rule_dep_red ] generalizes the traditional reduction rule  [ rule_red ] by the use of dependency relation instead of the linear ordering of variables ( @xmath107 ) in the prefix of pcnf @xmath0 . this way",
    ", it might be possible to reduce literals by rule  [ rule_dep_red ] which can not be reduced by rule  [ rule_red ] .",
    "the soundness of qreswith rule  [ rule_dep_red ] has been proved for a dependency relation that is even more general ( and thus allows for additional reductions ) than the one implemented in  @xcite .",
    "the generalized axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] of qresimplemented in are naturally compatible with rule  [ rule_dep_red ] .",
    "[ [ long - distance - resolution . ] ] * long - distance resolution . *",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    the q - resolution rule  [ rule_res ]  @xcite explicitly disallows to generate clauses ( cubes ) that are tautological ( contradictory ) .",
    "this restriction is relaxed under certain side conditions in _ long - distance ( ld ) q - resolution _",
    "ldq - resolution was first implemented in the qcdcl solver  @xcite and was incorporated in version  3.0 of .",
    "compared to qreswith traditional q - resolution  [ rule_res ]  @xcite , qreswith ldq - resolution is exponentially more powerful in terms of proof sizes  @xcite .",
    "the generalized axioms  [ rule_gen_cl_init ] and  [ rule_gen_cu_init ] implemented in are not only compatible with the ldq - resolution rule , but with _ any _ variants of q - resolution ( cf .",
    "recently , the soundness of the combination of ldq - resolution of clauses and dependency schemes in qreshas been proved  @xcite , leaving the soundness of cube resolutions as an open problem .",
    "therefore , the combination of ldq - resolution and dependency schemes is not supported in .",
    "[ [ incremental - solving . ] ] * incremental solving . * + + + + + + + + + + + + + + + + + + + + + +    since version  3.0 , has been equipped with an api in c and java for incremental solving of sequences @xmath108 of syntactically related pcnfs @xmath109  @xcite .",
    "incremental solving aims at reusing the clauses and cubes that were learned when solving pcnf @xmath109 when it comes to solve the pcnfs @xmath110 with @xmath111 .",
    "the api of allows to modify the pcnfs in @xmath112 by manipulating the quantifier prefix and adding or removing sets of clauses in a stack - based way . since version 4.0",
    ", it is possible to add or remove sets of clauses arbitrarily  @xcite . at any time when solving @xmath113 , the soundness property of qcdcl ( section  [ sec : qcdcl ] ) that @xmath51 and @xmath52 , where @xmath114 , must hold . to guarantee that property",
    "when using the generalized axioms for incremental solving , currently only applies the generalized cube axiom  [ rule_gen_cu_init ] with dynamic qbce used to check satisfiability of @xmath65 in conflict / solution detection ( fig .",
    "[ fig : qcdcl : enhanced ] ) .",
    "although this configuration restricts the power of the generalized axioms , it has improved incremental solving in the context of qbf - based conformant planning  @xcite . as it is unclear how to use dependency schemes effectively in incremental solving ,",
    "their application is disabled in .",
    "[ [ generation - of - proofs - and - certificates . ] ] * generation of proofs and certificates . *",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    qcdcl solvers can produce _ clause ( cube ) resolution proofs _ of the unsatisfiability ( satisfiability ) of pcnfs as a byproduct of clause ( cube ) learning . since version  1.0  @xcite , is capable of producing proofs without employing dependency schemes by rule  [ rule_dep_red ] .",
    "given a proof @xmath115 of a pcnf @xmath0 , a _ certificate _ of @xmath0 can be extracted from @xmath115 by inspecting the reduction steps by rule  [ rule_red ] in @xmath115  @xcite . a certificate of an unsatisfiable ( satisfiable ) pcnf @xmath0 is given by a set of herbrand ( skolem ) functions which represent the universal ( existential ) variables in @xmath0 .",
    "applications of the generalized axioms in qcdcl in general impose considerable restrictions on the certificate extraction process .",
    "the workflow  @xcite to extract a certificate from @xmath115 was originally presented for traditional qresproofs .",
    "if proof @xmath115 contains clauses ( cubes ) derived by rule  [ rule_gen_cl_init ] ( rule  [ rule_gen_cu_init ] ) , then @xmath115 may lack information needed to extract correct certificates . as a result , does not support cube resolution proof generation combined with the generalized cube axiom  [ rule_gen_cu_init ] .",
    "however , it supports clause resolution proof generation with the generalized clause axiom  [ rule_gen_cl_init ] provided that only propositional abstractions and sat solving are used for satisfiability checking in the side condition of this axiom .",
    "we compare variants of to solvers which showed top performance in qbfeval16  @xcite . as benchmarks we consider all 825 instances from the pcnf track , both in original form ( table  [ fig : exp:825:instances : noprepro ] ) and preprocessed by version 37 ( table  [ fig : exp:825:instances : prepro ] ) .",
    "we take preprocessing into account as it might have a positive impact on certain solvers while a negative on others  @xcite . unless stated otherwise , all experiments reported were run on an amd opteron 6238 processor ( 2.6 ghz ) under 64-bit ubuntu linux 12.04 with time and memory limits of 1800 seconds and seven gb .",
    "exceeding the memory limit is counted as a time out .    .like",
    "table  [ fig : exp:825:instances : noprepro ] but instances were preprocessed using . preprocessing time is not included in the total wall clock time .",
    "354 instances were solved already by . [ cols=\"<,^,^,^,^\",options=\"header \" , ]     to assess the impact of the generalized axioms [ rule_gen_cl_init ] and [ rule_gen_cu_init ] on the performance , we consider using both [ rule_gen_cl_init ] and [ rule_gen_cu_init ] ( variant in the tables ) , without [ rule_gen_cl_init ] ( ) , without [ rule_gen_cu_init ] ( ) , and using no generalized axioms at all ( )",
    ".    on original instances ( table  [ fig : exp:825:instances : noprepro ] ) , clearly outperforms the variants , , and with restricted or without application of the generalized axioms , respectively .",
    "variant without axiom [ rule_gen_cl_init ] outperforms variant without [ rule_gen_cu_init ] .",
    "we attribute this effect to the fact that applications of the cube axiom [ rule_gen_cu_init ] in are based on dynamic qbce ( among other techniques ) .",
    "dynamic qbce on its own has a considerable impact on the performance .",
    "compared to , disabling only dynamic qbce in variant reduces the number of solved instances from 461 to 398 .",
    "overall , the best performing variant ranks fourth and lags behind  @xcite ,  @xcite , and  @xcite by more than 100 solved instances .    on preprocessed instances ( table  [ fig : exp:825:instances : prepro ] ) ,",
    "we make similar observations regarding the impact of the generalized axioms like in table  [ fig : exp:825:instances : noprepro ]",
    ". however , variant without the clause axiom [ rule_gen_cl_init ] outperforms .",
    "preprocessing may blur the structure of an instance .",
    "we conjecture that , in contrast to original instances , this blurring hinders the success of the incomplete qbf decision procedures in , where applications of the generalized axioms are based on in practice . in general",
    "the performance difference in terms of solved instances between the variants of is smaller than on original instances .",
    "the rankings of the solvers  @xcite ,  @xcite , and  @xcite are improved substantially by preprocessing , whereas those of and become worse .",
    "the best variant ranks fourth behind , , and .",
    "however , the lag to the solver ranked third is only 16 instances compared to 117 instances with respect to in table  [ fig : exp:825:instances : noprepro ] .",
    "all variants of reported apply dependency - aware reduction by rule [ rule_dep_red ] .",
    "variant is the same as ( including generalized axioms ) but uses the traditional reduction rule  [ rule_red ] based on the linear quantifier ordering of pcnfs . on both original and preprocessed instances outperforms , which illustrates the benefits of dependency schemes in qcdcl .",
    "variant differs from in the use of ldq - resolution in learning instead of traditional q - resolution by rule  [ rule_res ] .",
    "we observe mixed results with ldq - resolution . on original instances",
    "outperforms whereas on preprocessed ones outperforms .",
    "we presented the qcdcl solver which implements a variant of qcdcl that is based on a generalization of the q - resolution calculus ( qres ) .",
    "the generalization is achieved by equipping qreswith generalized clause and cube axioms to be used for clause and cube learning  @xcite .",
    "the generalized axioms can be regarded as interfaces for the integration of arbitrary qbf proof systems in qres , and hence in qcdcl .",
    "the integration of qbf proof systems orthogonal to q - resolution , such as variable expansion , enables qcdcl to potentially produce proofs that are exponentially shorter than proofs produced by traditional qcdcl .",
    "this way , the state of the art in qcdcl solving can be further advanced . a related open problem is the lack of qcdcl to exploit the full power of q - resolution  @xcite .",
    "the workflow of qcdcl with generalized axioms is not tailored towards but can be implemented in any qcdcl solver .",
    "furthermore , it is compatible with dependency schemes  @xcite and any q - resolution variants  @xcite , which offers possibilities for further improvements .",
    "experimental results with several variants of showed considerable performance gains due to the application of generalized axioms . however , frequent applications of generalized axioms are hindered by computationally expensive qbf satisfiability checks in the side conditions of the axioms .",
    "to limit the run time overhead caused by these satisfiability checks , in practice axiom applications must be carefully scheduled .",
    "a suitable trade off must be found between the time spent on checking the side conditions and the benefits drawn from successful axiom applications . in this respect , there is room for improvements in fine tuning to the pcnfs to be solved .",
    "furthermore , our implementation is extensible in that any ( incomplete ) qbf decision procedure can be applied to satisfiability checking in the side conditions . a tight integration of these decision procedures in the qcdcl workflow , like with dynamic blocked clause elimination ( qbce ) in , might allow to further reduce their overhead .",
    "pulina , l. : the ninth qbf solvers evaluation - preliminary report . in : proceedings of the 4th international workshop on quantified boolean formulas qbf 2016 .",
    "ceur workshop proceedings , vol . 1719 , pp .",
    "ceur-ws.org ( 2016 )"
  ],
  "abstract_text": [
    "<S> we present the latest version 6.0 of the _ quantified boolean formula ( qbf ) _ solver , which is based on _ qcdcl_. qcdcl is an extension of the _ conflict - driven clause learning ( cdcl ) _ paradigm implemented in state of the art propositional satisfiability ( sat ) solvers . </S>",
    "<S> the _ q - resolution calculus ( qres ) _ is a qbf proof system which underlies qcdcl . </S>",
    "<S> qcdcl solvers can produce qresproofs of qbfs in _ prenex conjunctive normal form ( pcnf ) _ as a byproduct of the solving process . </S>",
    "<S> in contrast to traditional qcdcl based on qres , implements a variant of qcdcl which is based on a generalization of qres . </S>",
    "<S> this generalization is due to a set of additional axioms and leaves the original q - resolution rules unchanged . </S>",
    "<S> the generalization of qresenables qcdcl to potentially produce exponentially shorter proofs than traditional qcdcl . </S>",
    "<S> we present an overview of the features implemented in and report on experimental results which demonstrate the effectiveness of generalized qresin qcdcl . </S>"
  ]
}
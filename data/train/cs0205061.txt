{
  "article_text": [
    "the carrier of genetic information in the nature , the dna molecule , has very peculiar structure .",
    "this is a spiral - staircase shaped object , whose steps are made from pairs selected from among only four other kinds of molecules .",
    "those are : cytosine ( c ) , guanine ( g ) , adenine ( a ) and thymine ( t ) .",
    "there are only two correct kinds of those pairs , not @xmath0 , as one might naively suspect .",
    "namely , the cytosine always forms a pair with guanine ( ) , and adenine `` likes '' thymine ( ) .",
    "so , if the sequence in a part of dna molecule is something like @xmath1 then the other half of dna s double helix has the structure @xmath2 such a redundancy has not yet been exploited by genetic algorithms , at least the present author failed to find in available literature anything similar in conjunction with this class of optimization algorithms ( or any other class  ) .    in this paper we will show , that the idea of doubled ( or duplicated ) genetic information may be very useful in fine - tuning of genetic algorithms and in formulating the stopping criteria , which are quite general , independent of the problem under study .",
    "many elements of existing genetic algorithms are straightforward computer implementations of the natural evolutionary phenomena .",
    "we have an evolving population , usually fixed in size , in which individuals mate , have offspring and are mutated .",
    "all those processes are driven by one or more random number generators , that is by purely stochastic forces , and , additionally , by the darwinian rule of _ survival of the fittest .",
    "_    it is well known that the crossover processes alone can not guarantee finding the optimal region in a search space , at least when the population is small . without mutations , the _ premature convergence _ is then almost certain , thus revealing the inability of the algorithm to find the desired solution .",
    "the mutations cause rapid changes of location in the search space thus making possible to reach an explore the regions , which are at all not accessible without them .",
    "the majority of researchers and practitioners prefer rather low rate of mutations .",
    "this is because the very frequent mutations turn the genetic algorithm into generic monte carlo procedure , which is to be avoided , since we hope that some kind of intelligence will lead us _ much _",
    "faster to the desired solution than completely blind trials .",
    "suppose , for simplicity , that the smallest part of the chromosome , called here gene , consists of only a single bit .",
    "let this bit has initial value of @xmath3 .",
    "the mutation process is then nothing else than negating ( flipping ) this bit .",
    "the question we want to examine now is :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ what will be the state of this bit after @xmath4 generations ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    let the probability of bit flip per generation is equal to @xmath5",
    ". we can write @xmath6 where @xmath4 numerates consecutive generations and the number in parenthesis means the state of the bit in question . taking into account that for any @xmath4 @xmath7 we can rewrite the first row of relation ( [ master_eq ] ) as @xmath8 p + p_{k}(1)\\cdot ( 1-p)\\\\      & = & p_{k}(1 ) \\left(1 - 2 p\\right ) + p\\end{aligned}\\ ] ] or , in shorter form @xmath9 where @xmath10 is the probability that the examined bit is in the state @xmath11 after @xmath12 generations .",
    "the recurrence formula ( [ recur ] ) seems very similar to the construction of a simple random number generator , so one might expect that it produces chaotic sequences of numbers .",
    "surprisingly ( ? ) this is not the case , as we shall see .",
    "consider the behavior of @xmath13 when @xmath14 .",
    "it is easy to see , that for @xmath15 ( no mutations ) the sequence @xmath13 is constant ( and thus convergent ) ; it remains at whatever initial state  in our case @xmath3 .",
    "the other limiting case , @xmath16 , is also easy : now the recurrence relation ( [ recur ] ) simplifies to @xmath17 and our bit permanently oscillates between two possible states @xmath18  there is no convergence . for all other cases , i.e. @xmath19 , the sequence ( [ recur ] ) is always convergent and we have @xmath20 we skip the easy proof .",
    "it is interesting , however , that the convergence has oscillatory character when @xmath21 , while for @xmath22 the sequence @xmath13 grows monotonically .",
    "there is no chaotic behavior .",
    "the case @xmath23 is special again : it produces constant sequence @xmath24 .",
    "it is widely believed , that the mutations are essentially wrong thing for any individual .",
    "they usually damage the genetic material , sometimes to the extent which makes further existence of the individual impossible .",
    "it only rarely happens that the mutated individual is better fitted to its environment than the average one in a given population . on the other hand",
    "not all mutations are lethal . in the well known penna @xcite , @xcite model of biological evolution , for example",
    ", the subsequent mutations are accumulated in every chromosome .",
    "the older the chromosome , the more mutations it carries and finally dies either after single lethal mutation or due to the accumulation of many less damaging defects ( we do not discuss here the so called verhulst factor describing the decrease of the population size due to overcrowding and thus the limited accesss to necessary resources by any single individual ) . if no replication occurs , then the entire population is eventually extinct .",
    "by contrast , the `` small '' changes in the genotypes are silently transmitted to the offspring chromosomes .    in the nature , however , an error correcting capability is at work .",
    "the double helix structure of the dna strand limits the proliferation of defective genes .",
    "the two parts of dna ( and rna as well ) are not independent , but complementary . after unzipping , just before the replication , only one strand of dna contains the distorted genetic information , while the other sequence is correct . therefore only @xmath25% of offspring dna helices will be damaged .",
    "the idea is to use in genetic algorithms the chromosomes , which are `` doubled '' , i.e. which consist of regular , well known part ( `` visible '' ) and the other ( `` invisible '' ) parallel structure , of identical length , which is initially the exact negation of the first part , as below : @xmath26 we do not mark any gene boundaries here .",
    "a single gene may consist of one or more bits ; the lengths of consecutive genes need not to be equal to each other .",
    "the chromosome becomes mutated when at least one of its bits is flipped .    the genetic material , representing trial solution of the original problem , is placed in the visible part .",
    "every mutation is reflected in the state of this very part , the invisible part being completely insensitive to mutations .",
    "quite contrary , the crossover operation is performed on both parts , mixing independently two visible and two invisible parts of the involved chromosomes , at the same crossover point(s ) .",
    "it is easy to see , that the crossover operation alone , no matter one- or multipoint , will never destroy the complementarity of the visible and invisible part of any chromosome .",
    "of course , the fitness factor will always be computed for the visible part only .",
    "now the process of aging of the population , generation after generation , may be tracked by looking at the invisible part of every chromosome .",
    "we can easily count all the bits in the entire population , which were changed by mutations  it is enough to compare the visible and invisible parts of all chromosomes and count the bits , which are identical in both parts .",
    "of course , the even number of mutations applied to the same bit will go unnoticed .",
    "this is sometimes called _",
    "backward evolution_. from the earlier considerations , and assuming that the mutation probability @xmath5 per bit and per generation is small ( more precisely @xmath22 , as is always the case ) , we can conclude that the fraction of ( effectively ) mutated bits in the entire population will be an increasing function of time .",
    "the stochastic limit for this fraction is equal to @xmath27 .",
    "the value of @xmath23 uniquely separates the genetic algorithms from monte carlo type of optimization .",
    "for @xmath28 the fraction of mutated bits initially increases linearly with the number of generations .",
    "this observation does not take into account directly neither the structure of the individual chromosome ( number of genes or bits it consists of ) nor the number of chromosomes in the population .",
    "such information is hidden in the value of parameter @xmath5  probability of a particular bit being flipped during a  single cycle of simulation ( single epoch ) .",
    "thus the the number of generations to reach @xmath25% of flipped bits may be roughly estimated as @xmath29 . in practice ,",
    "as the performed simulations show , the fraction of effectively mutated bits reaches the value of @xmath27  for the first time  after roughly @xmath30 to @xmath31 times greater number of epochs .",
    "the exact analytical formula for @xmath13 as a function of @xmath4 is neither easy to obtain nor very informative . for any @xmath4",
    ", @xmath13 is a polynomial of order @xmath4 in variable @xmath5 .",
    "the graph of @xmath13 vs. @xmath4 , however , shows striking similarity to the graph of the expression : @xmath32\\ ] ] this is only an observation based on several evolutionary processes , guessed rather than formally derived .",
    "anyway , utilizing this approximation , we can say that after @xmath33 epochs the population is mature and gradually looses its innovative forces , and after @xmath34 epochs it becomes old and practically useless .",
    "it is time then to switch to other locally searching routine to improve further the optimal set of unknown parameters , if appropriate .",
    "the formula ( [ result ] ) is the main result of this paper .",
    "it sets the _",
    "limit for the number of necessary generations .    in conclusion ,",
    "during calculations we should monitor the behavior of the fraction of mutated bits .",
    "* when this variable reaches the value of * @xmath27 , * then we may say that every second bit in the population was flipped at least once .",
    "this is the other way of saying that the search space has been explored quite thoroughly and no significant improvement of the fitness should be expected*.    if the fitness of all chromosomes was the same , i.e. there was no evolutionary pressure of any kind , then after @xmath35 generations the search space would be covered quite uniformly , although irregularly , with trial points .",
    "further sampling would only make finer the already existing irregular grid of trial points . when there _ is _ a preference for better fitted chromosomes , then after @xmath33 generations all interesting regions , or at least their neighborhoods , should have already been found .",
    "observing the values of the fitness function alone , either as an average for the population or for the best individual only , may be _ very _ misleading .    considering",
    "the efficiency of the algorithm , understood as the number of generations necessary to find the optimal fitness , we can see that it is inversely proportional to @xmath5 . for every practical purpose the condition @xmath36 ( average number of bits flipped in the whole population during one epoch is equal to one ) sets the lowest sensible limit for @xmath5 .",
    "@xmath37 is the total number of bits in the population ( in its visible part ) . of course",
    ", higher values of @xmath5 will speed up the evolutionary search .",
    "_    certainly not .",
    "it gives the reasonable estimate of the number of generations needed in fairly regular cases .",
    "the genotype space with only one well fitted chromosome and all other equally bad is an evident exception . what can be done in such cases",
    "is to increase the number of bits assigned to every continuous unknown ( kind of _ oversampling _ ) , for the price of increased computational effort , of course , since this approach is equivalent to the use of finer grid of points in the search space . to purely combinatorial problems ( only integer and/or logical unknowns )",
    "our estimate should be of similar value .",
    "as an example let us take the data from @xcite . here",
    "the population consisted of 30 chromosomes , @xmath38 bits long each . and @xmath5 was set equal to @xmath39 .",
    "according to ( [ min - mut ] ) , @xmath5 should be set as at least @xmath40  while the quoted mutation rate was @xmath41 times higher than that number .",
    "the population should become mature after some @xmath42 generations and the evolutionary search should be terminated after @xmath43 generations at the latest . in  fact , the author of @xcite reports that satisfactory results were achieved after @xmath44@xmath45 generations ( every run was limited to @xmath38 generations ) .",
    "the search space had only @xmath46 points , so this example may be considered small and not representative .",
    "nevertheless , no more than only @xmath47 evaluations of the fitness factor were enough to reach valuable conclusions .",
    "we must be aware , that the search space , no matter how large , is always _ discrete _ and finite for this class of optimization algorithms .",
    "it may be considered as a random graph , in which every chromosome is a vertex ( we are not interested in the edges ) .",
    "this graph is by no means random , but clearly exhibits the _ small world property _ , i.e. the average ( hamming ) distance between its vertices scales as the logarithm of their number .",
    "indeed , @xmath48-bit chromosomes are points in @xmath49 element universe .",
    "the maximum distance between any two chromosomes is equal to @xmath48 , so the average distance must never exceed this number .",
    "incidentally @xmath50 .",
    "this fact alone explains why genetic algorithms are fairly insensitive with respect to the number of unknowns . on the other hand ,",
    "speaking of the neighboring points in the search space makes sense , especially when we think of _ nearest neighbors_. it is therefore intuitively appealing that we should be able to find a ( hopefully small ) subset of points in the search space with the property that _ any _ point is distant from this set no more than @xmath11 unit  something similar to the backbone or spanning tree known from the graph theory . in case @xmath51 it is easy to check that exactly two points , namely @xmath52 and @xmath53 , are enough to form such a subset with requested property . evaluating fitness for each member of this subset should be nearly equivalent to the exhaustive ( `` brute force '' ) search , since then , for arbitrarily chosen point in the search space either this point itself or one of its nearest neighbors was visited and evaluated during evolutionary process .",
    "unfortunately , today we do nt know how to find such a set in general case ; we do nt even know what is its cardinality  hopefully much lower than that of original search space .",
    "it is certain , however , that the solution of this problem need not to be unique .",
    "-bit chromosomes .",
    "the universe consists of just @xmath54 elements : @xmath55 , @xmath56 , @xmath57 and @xmath58 .",
    "there are two subsets with desired property : @xmath59 and @xmath60 . ]",
    "perhaps the genetic algorithm is the best available tool for approximate construction of such subsets ?",
    "using `` doubled '' chromosomes we successfully mimic the double helix structure of dna .",
    "the cost is moderate : we need to double the storage for the population . counting the flipped bits",
    "is performed only once per generation , so this cost should be negligible in comparison with evaluations of fitness function . instead of the true implementation of the `` double helix '' , one can use the simplified formula ( [ result ] ) as a stopping criterion . direct observation of the fraction of effectively mutated bits will signal the end of calculations usually much earlier .",
    "this work was done as part of author s statutory activity in institute of physics , polish academy of sciences .",
    "grzegorz dudek , _ zastosowanie algorytmu genetycznego do selekcji symptomw w badaniach diagnostycznych _ ( in polish , _ genetic algorithm for selection of symptoms in diagnostic research _ ) , proceedings of iii domestic conference on evolutionary algorithms and global optimization , potok zoty ( poland ) , may 2528 1999 , p.  99"
  ],
  "abstract_text": [
    "<S> over a quarter of century after the invention of genetic algorithms and miriads of their modifications , as well as successful implementations , we are still lacking many essential details of thorough analysis of it s inner working . </S>",
    "<S> one of such fundamental questions is _ how many generations do we need to solve the optimization problem ? _ this paper tries to answer this question , albeit in a fuzzy way , making use of the double helix concept . as a byproduct </S>",
    "<S> we gain better understanding of the ways , in which the genetic algorithm may be fine tuned .    </S>",
    "<S> genetic algorithms , aging , double helix , efficiency , stopping criteria , fine tuning , small world property </S>"
  ]
}
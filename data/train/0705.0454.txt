{
  "article_text": [
    "clustering is a technique that is widely used to improve the performances of conventional database management systems ( dbmss ) .",
    "clustering means storing related objects close together on secondary storage so that when one object is accessed from disk , all its related objects are also brought into memory .",
    "then access to these related objects is a main memory access that is much faster than a disk access . with the arrival of object - oriented databases ( oodbs ) , existing clustering algorithms ( mainly in the field of relational databases )",
    "had to be adapted to the additional semantics ( such as inheritance , etc . )",
    "introduced by the object - oriented data models .",
    "it appeared that a good object clustering was critical to the performance of oodbs @xcite .",
    "the aim of this paper is to propose a methodology in order to compare the performance of the different clustering strategies that can be implemented in oodbs .",
    "several methods can be used to evaluate the performances of a dbms .",
    "benchmarks generally propose a standard database and a series of operations that run on this database .",
    "thus , performance measurement directly depends on the reactions of the tested dbms .",
    "several benchmarks have been specifically designed for object - oriented databases , like the synthetic benchmark @xcite , the hypermodel benchmark ( @xcite , @xcite ) , the oo1 benchmark @xcite or the club-0 benchmark @xcite .",
    "however , some oodb designers or clustering algorithm authors prefer to use simulation ( @xcite , @xcite , @xcite ) , because simulation allows to specifically measure performance improvements due to one or another clustering policy .",
    "@xcite proposes a dual performance evaluation method , performing simulations that use the database introduced by the club-0 benchmark .",
    "one last way to determine the advantages of a given clustering method is mathematical analysis as it is performed by @xcite .",
    "this approach is however limited because the obtained results are qualitative rather than quantitative and sharp performance criteria can not be extracted .",
    "the aim of the approach we suggest to use is to propose a modelling methodology that allows to compare oodbs performances , and especially clustering strategies performances .",
    "modelling may lead either to simulation or to the application of exact analytical methods whenever possible .",
    "we applied our methodology to three object - oriented clustering algorithms that are representative of the current research in the field of oodbs : cactis @xcite , ck @xcite and orion ( @xcite , @xcite ) .",
    "the main advantage of our approach opposed to the use of benchmarks is that it allows , by providing a common environment , to specifically compare clustering algorithms , in a way that is totally independent of any environment associated with the dbmss that implement the clustering algorithms we intend to compare .",
    "for instance , physical storage methods and buffering strategies also influence the dbms global performance .",
    "furthermore , our approach also allows to a priori study the behaviour of algorithms ( like ck ) that are not implemented in any dbms .",
    "thus we can compare their performances to those of already implemented algorithms .",
    "this paper is organised as follows .",
    "we start by presenting the modelling methodology we used .",
    "section  3 is dedicated to our study : we apply our modelling methodology to obtain a knowledge model and an action model .",
    "then we present in section  4 the three studied clustering algorithms .",
    "the simulation results are given in section  5 .",
    "we end this paper with a conclusion and a brief discussion about future research directions .",
    "oodbs are complex systems . modelling their behaviour",
    "may as well be a complex task .",
    "this is the reason why we propose an approach dedicated to the study of such systems .",
    "this modelling approach carry out a model according to an iterative process @xcite .",
    "this process is divided into four phases :    * _ phase 1 : _ analysis and formalizing of data , this system specification leads to the design of the _ knowledge model _ ; it is a crucial step in the modelling process ; * _ phase 2 : _ translation of the knowledge model into an _ action model _ using a formalism allowing its exploitation to provide performance criteria ; * _ phase 3 : _ exploitation of the action model to provide performance criteria ; * _ phase 4 : _ results interpretation and decisions about actions to perform on the system .    the analysis approach of a system in order to model it is performed through several steps :    * decomposition of the system to identify the different levels ; * decomposition of the system into three subsystems ; * _ logical subsystem _ specification ; * _ physical subsystem _ specification ; * _ decision subsystem _ specification ; * specification of the communications between the three subsystems .",
    "_ note : _ the system analysis must be iterative so that the same level of detail is achieved for all the subsystems .",
    "we present in this section the application of the methodology we introduced in the previous section to the domain of object - oriented databases .",
    "though we focus on the efficiency of clustering strategies , we do not make any reference in this section to any precise clustering algorithm .",
    "we need to describe in our model the execution of transactions on an object - oriented database .",
    "we assimilated those transactions to flows running through a system and thus designed a knowledge model using the sadt actigrams formalism .",
    "the domain analysis has been described by an entity - relationship ( e / r ) model .",
    "the logical subsystem specifies what are the flows that run through the system . in the case of dbmss , these flows are transactions flows .",
    "the transactions are described on two levels : first , their type and then the steps of their execution .",
    "the hypermodel benchmark ( @xcite , @xcite ) provides 20 different types of transactions . from those 20",
    ", we have isolated and used 15 types of transactions .    *",
    "_ name lookup : _ retrieve a randomly selected object . *",
    "_ range lookup : _ fetch all the instances of a given class such that a given attribute value is in a given range . *",
    "_ group lookup : _ given a randomly selected starting object , fetch all its descendant versions ( group lookup along versions ) , all its component objects ( group lookup along configuration ) or all its equivalent objects ( group lookup along equivalencies ) . * _ reference lookup : _ it is a `` reverse '' group lookup .",
    "given a randomly selected starting object , fetch either all its ancestor versions ( reference lookup along versions ) or its composite object ( reference lookup along configurations ) .",
    "* _ sequential scan : _ fetch all the instances of a given class . * _ closure traversal : _ given a randomly selected starting object , follow one of the three structural relationships ( i.e. , version , configuration or equivalence ) to a certain predefined depth ; fetch the resulting object ; the followed relationship can be either always the same ( closure traversal along versions , configurations or equivalencies ) or randomly selected ( random closure traversal ) .",
    "the different steps in the execution of the transactions include the following operations :    * select an object to access , * access to the page number of the disk page containing an object , * read or write a page on disk ( i.e. , perform an i / o ) , * access to the attributes of an object , * update an attribute value , * place an object in a disk page .",
    "the physical resources that make up the physical subsystem are divided into two categories : _ active resources _ that perform some task and _ passive resources _ that do not directly participate into any treatment but are used by the active resources to perform their operations ( table  [ res ] ) .",
    ".active and passive resources [ cols=\"^,^,^,^ \" , ]      we first translated our knowledge model in a generic action model . after being validated , the generic action model has been instanced for each tested clustering algorithm .    to implement our action model ( in this case , a simulation model )",
    ", we used the qnap2 ( queuing network analysis package 2@xmath0 generation ) software , version  9.0 .",
    "we selected this simulation language for several reasons :    * qnap2 is a validated simulation tool ; * qnap2 allows the use of an object - oriented approach ( since version 6.0 ) ; * qnap2 s algorithmic language ( derived from pascal ) allows a relatively easy implementation of such complex algorithms as clustering algorithms .    our actual qnap2 model s main frame",
    "is presented in fig .",
    "[ model ] .",
    "cactis @xcite is an object - oriented , multi - user dbms developed at the university of colorado .",
    "it is designed to support applications that require rich data modelling capabilities and the ability to specify functionally - defined data .",
    "the cactis clustering algorithm is designed to place objects that are frequently referenced together into the same block ( i.e. , page , i.e. , i / o unit ) on secondary storage . in order to improve the locality of data references , data is clustered on the basis of usage patterns .",
    "a count of the total number of times each object in the database is accessed is kept , as well as the number of times each relationship between objects in the process of attribute evaluation or marking out - of - date is crossed .",
    "then , the database is periodically reorganised on the basis of this information",
    ". the database is packed into blocks using a greedy algorithm .",
    "_ note : _ this clustering algorithm is also implemented in the zeitgeist system @xcite .",
    "orion ( @xcite , @xcite ) is a series of next - generation database systems that have been prototyped at mcc ( microelectronics computer technology corp . ) as vehicles for research into the next - generation database architecture and into the integration of programming languages and databases .",
    "orion has been designed for artificial intelligence ( ai ) , computer - aided design and manufacturing ( cad / cam ) and office information system ( ios ) applications .",
    "orion supports only a simple clustering scheme .",
    "instances of the same class are clustered in the same physical segment ( i.e. , a number of blocks or pages ) .",
    "each class is associated with one single segment .",
    "composite objects may also be clustered in multi - classes segments .",
    "user assistance is required to determine which classes should share the segment .",
    "the user can dynamically issue a cluster message containing a `` listofclassnames '' argument specifying the classes that are to be placed in the same segment .",
    "[ [ ck ] ] ck ~~    the ck @xcite algorithm ( from its authors names : chang and katz ) is defined in the cad / cam context .",
    "it is not yet implemented in any oodb .",
    "the ck algorithm is based on a particular inheritance link called instance - to - instance and inter - objects access frequencies ( given by the user at data type creation time ) for each kind of structural relationship ( i.e. , versions , configurations and equivalencies ) .",
    "these access frequencies and a computation of the costs of instance - to - instance inherited attributes give the page where a new object has to be placed .",
    "@xcite the concept of instance - to - instance inheritance is an extension of the classical inheritance relationship ( the is - a relationship ) .",
    "instance - to - instance inheritance not only transfers the existence of attributes from one object to another ( like type inheritance ) , but moreover the values of these attributes . for example , instance - to - instance inheritance is important in computer - aided design databases , since a new version tends to resemble its immediate ancestor .",
    "it is useful if a new version can inherit its attributes values , and more importantly its constraints , from its ancestor .",
    "due to a lack of space , we present in this section only a few simulation results concerning the effects of the database size on the performances . database size directly influence dbmss performances , and in particular clustering algorithms performances . in this series of simulations",
    ", we varied the database initial size , i.e. , the database size before simulation ( before new instances are created ) .",
    "mean response time for each clustering algorithm is given by fig .",
    "[ resp ] shows indeed that cactis is better than orion ( 2.5 times better ) .",
    "the ck algorithm performances are far greater that those of cactis and orion ( they are 1,100 times better that those of cactis ) .",
    "this big difference in scale explains why the results concerning ck do not appear clearly on the graph .",
    "= 10.5 cm    these results can be explained by looking at the mean number of i / os ( both transactions i / os and clustering i / o overhead ) function of the database initial size ( figs .",
    "[ strans ] and [ clust ] ) .",
    "transactions i / os giving an idea of how well a clustering algorithm places the objects , we can deduce from fig .",
    "[ strans ] that objects are better clustered by ck and cactis than by orion ( 2.2 times better for cactis ) .",
    "cactis even appears to be slightly better ( 1.3 times ) than ck .",
    "= 10.5 cm    the fact that cactis seems to cluster objects better than ck but shows worse overall performances can be explained by looking at fig .",
    "[ clust ] .",
    "it shows that clustering overhead is 7,000 times greater for cactis than for ck ( clustering overhead for orion being 1.4 times greater than for cactis ) .",
    "= 10.5 cm    such an outstanding performance is due to the true dynamic nature of ck , which is called only at object creation time and only accesses the object to cluster related objects , and not to the whole database as cactis and orion .",
    "variations in clustering overhead come from variations in the number of created objects .    in terms of disk space",
    ", we expected the more sophisticated algorithm to use more space .",
    "actually , the more a clustering algorithm is complex ( i.e. , the more it clusters object according to precise rules ) , the less a large number of objects are likely to share the same physical space ( either page or segment ) .",
    "the mean number of disk pages used ( fig .",
    "[ pages ] ) , as expected , is higher for the more complex algorithms , i.e. , ck needs 1.7 times as many pages as cactis and cactis needs 2.8 times as many pages as orion , for which number of pages increases linearly .",
    "it is clear from our simulation experiments that the ck algorithm outperforms both cactis and orion in terms of overall performance .",
    "the results we obtained showed that this is due to both a good clustering capability and to the dynamic conception of the algorithm that allow an extremely low clustering overhead .",
    "such a good behaviour is achieved because the ck algorithm is activated only at object creation time and only accesses the few objects that are related to the newly created object .",
    "therefore , transactions are never blocked very long during clustering , as they are when the cactis or the orion algorithm is used .",
    "( the cactis and orion algorithms have to access all the objects in the database , even several times in the case of orion , to reorganise the database ; and transactions can not be run when a reorganisation occurs . )",
    "ck good clustering capability is based on the users hints that specify the inter - objects access frequencies for each structural relationship and thus allows to cluster together objects that are likely to be accessed together .",
    "our simulations showed too that cactis had also a good clustering capability .",
    "this is due to the use of statistics ( i.e. , objects access frequencies and relationships use frequencies ) that allow to cluster together objects that are actually accessed together .",
    "though , the cactis algorithm is still completely outperformed by the ck algorithm .",
    "this is because , when using cactis , clustering overhead increases very quickly with the number of objects , thus annihilating any gain achieved from good clustering capability .",
    "however , we have to keep in mind that this algorithm has been designed to run when the database is idle so that reclustering does not alter the database performance . hence ,",
    "if clustering overhead was not taken into account , the cactis algorithm should perform about as well as ck algorithm as long as the statistics used during the last reorganisation are pertinent . in terms of disk space",
    ", the orion algorithm seems the less greedy algorithm .",
    "then the cactis algorithm follows , using almost half the number of disk pages needed by ck to cluster the database . however , when reorganising the database , the cactis and orion algorithms need to build a new set of pages before deleting the former .",
    "thus they require about twice as much space as our graphs show .",
    "hence , cactis and ck are almost equivalent , orion remaining the less greedy algorithm in terms of disk space .",
    "we have presented in this paper a methodology allowing the design of a tool enabling the a priori study or a posteriori comparison of the performances of clustering algorithms .",
    "this tool may be re - used since it is very easy to instance our generic action model with other clustering policies than those we chose to study .",
    "this tool may also be modified .",
    "it is particularly interesting in future developments to take into account buffering management strategies because it is mostly the use of both clustering and buffering techniques rather than clustering techniques alone that are found in the literature when speaking of performance improvement .",
    "our modelling methodology itself may also be re - used to model either another environment , or to build models designed to test the performances of other components of an oodb , or even to a priori model the global behaviour of a dbms in order to determine some management strategies to use .",
    "j. banerjee , h .-",
    "chou , j.f .",
    "garza , w. kim , d. woelk , n. ballou , h .- j .",
    "kim : data model issues for object - oriented applications .",
    "acm transactions on office information systems , vol . 5 , no .",
    "1 , january 1987    a.j .",
    "berre , t.l .",
    "anderson : the hypermodel benchmark for evaluating object - oriented databases . in `` object - oriented databases with applications to case , networks and vlsi cad '' , edited by r. gupta and e. horowitz , prentice hall series in data and knowledge base systems , 1991          e.e .",
    "chang , r.h .",
    "katz : exploiting inheritance and structure semantics for effective clustering and buffering in an object - oriented dbms .",
    "acm sigmod international conference on management of data , portland , oregon , june 1989        s. ford , j. joseph , d.e .",
    "langworthy , d.f .",
    "lively , g. pathak , e.r .",
    "perez , r.w .",
    "peterson , d.m .",
    "sparacin , s.m .",
    "thatte , d.l .",
    "wells , s. agarwala : zeitgeist : database support for object - oriented programming .",
    "2nd international workshop on object - oriented database systems , bad mnster am stein - ebernburg , frg , september 1988"
  ],
  "abstract_text": [
    "<S> it is widely acknowledged that good object clustering is critical to the performance of object - oriented databases . </S>",
    "<S> however , object clustering always involves some kind of overhead for the system . </S>",
    "<S> the aim of this paper is to propose a modelling methodology in order to evaluate the performances of different clustering policies . </S>",
    "<S> this methodology has been used to compare the performances of three clustering algorithms found in the literature ( cactis , ck and orion ) that we considered representative of the current research in the field of object clustering . </S>",
    "<S> the actual performance evaluation was performed using simulation . </S>",
    "<S> simulation experiments we performed showed that the cactis algorithm is better than the orion algorithm and that the ck algorithm totally outperforms both other algorithms in terms of response time and clustering overhead .    _ </S>",
    "<S> keywords : _ clustering , computer systems performance evaluation methodology , object - oriented databases , simulation .    </S>"
  ]
}
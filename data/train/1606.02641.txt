{
  "article_text": [
    "given a set of taxa ( a group of related biological species ) , the goal of phylogeny reconstruction is to build a tree which best represents the course of evolution for this set over time .",
    "the leaves of the tree are labeled with the given , extant taxa .",
    "internal nodes correspond to hypothesized , extinct taxa .",
    "there are numerous phylogeny reconstruction approaches @xcite .",
    "one approach of interest is building unrooted , resolved ( or binary ) trees from quartets , where a quartet is an unrooted tree on 4 leaves .",
    "we note that for a given set of 4 leaves there are 3 quartets topologies .",
    "the input is a set of ( possibly weighted ) quartets , and the goal is to build a tree which would agree with the maximum number of input quartets ( maximum weighted sum , correspondingly ) @xcite .",
    "it is known that this problem is computationally hard @xcite .",
    "various combinatorial problems related to quartets have also been studied extensively . in this paper , we are especially interested in the _ quartet distance _",
    "problem @xcite .",
    "let @xmath5 be two resolved ( binary ) trees on the same set of @xmath0 labeled leaves .",
    "every set of the same 4 leaves induces two quartets , one in @xmath6 and the other in @xmath7 .",
    "the topologies of the two quartets could either agree or disagree .",
    "the quartet distance between @xmath5 is the number of disagreeing quartets .",
    "we note that there are efficient algorithms to compute the quartet distance of two trees .",
    "the most efficient one , by brodal , fagerberg , and pedersen , runs in @xmath8 time @xcite .",
    "bandelt and dress @xcite conjectured that the maximum quartet distance between any two resolved ( binary ) trees on @xmath0 leaves is at most @xmath9 .",
    "taking two binary trees @xmath5 on the same set of @xmath0 leaves , and assigning labels to the leaves at random , the probability that any quartet will agree equals exactly @xmath10 .",
    "this implies that the expected value of the quartet distance is exactly @xmath11 .",
    "alon , snir , and yuster @xcite showed that the random labeling method implies the existence of trees with quartet distance strictly greater than @xmath11 .",
    "they also proved a @xmath12 asymptotic upper bound on the quartet distance .",
    "finally , using the technique of flag algebra , alon , naves , and sudakov @xcite have shown a @xmath13 upper bound on the normalized quartet distance ( for large enough number of leaves , @xmath0 ) .",
    "no explicit construction attaining the @xmath11 lower bound asymptotically is known .",
    "we consider complete binary trees on @xmath2 leaves , labeled by @xmath3 long bit sequences .",
    "ordering the leaves in one tree by the prefix order , and in the other tree by the suffix order , we show that the resulting quartet distance is @xmath14 , and furthermore , the distance exceeds the @xmath15 bound for all @xmath0 .",
    "denote by @xmath16 the complete binary tree with leaves labeled by @xmath17 and ordered by prefix order , and by @xmath18 the complete binary tree on the same set of leaves , ordered by suffix order .",
    "consider an ordered 4-tuple of distinct binary sequences @xmath19 , @xmath20 ( these are the labels of leaves in our two trees ) . for",
    "every pair of indices @xmath21 , let @xmath22 be the event `` the common prefix of @xmath23 is not shorter than the other five common prefixes '' .",
    "likewise , we define the event @xmath24 , referring to suffixes . for sake of brevity",
    ", we will use @xmath25 to denote @xmath26 @xmath24 , correspondingly .",
    "there are some obvious relations among the @xmath27 or the @xmath28 .",
    "for example @xmath29 , @xmath30 , @xmath31 are mutually exclusive . more generally , any pair @xmath32 , @xmath33 sharing exactly one subscript ( @xmath34 or @xmath35 ) is mutually exclusive .",
    "note , however , that _",
    "e.g. _ @xmath29 and @xmath36 are _ not _ mutually exclusive .",
    "clearly , the number of ordered binary sequences satisfying @xmath25 is the same for all choices of indices @xmath37 .    to determine the quartet distance between our two trees",
    ", we will exactly compute the number of length @xmath3 sequences satisfying various combinations of these events , such as @xmath38 , @xmath39 , @xmath40 , and @xmath41 .",
    "these , in turn , will enable the derivation of the exact and asymptotic quartet distance between the `` suffix order '' and the `` prefix order '' binary sequences trees , using a simple inclusion - exclusion argument .",
    "for each event we will count the number of four tuples of different _ ordered _ sequences , @xmath42 satisfying it , using simple properties of prefixes and suffixes of @xmath3 bit long binary sequences .",
    "the lengths of common prefixes and suffixes of any pair of binary sequences remains invariant by xoring the sequences to any one sequence ( namely computing the bit - wise xor of the sequences ) . by xoring the four sequences to @xmath43",
    ", we can thus assume without loss of generality that @xmath43 is the all @xmath44 sequence , while @xmath45 are three uniformly distributed sequences that are non zero and distinct .",
    "let us denote the length of the longest common prefix of @xmath47 by @xmath48 , and the length of the longest common suffix of @xmath49 by @xmath50 .",
    "for @xmath29 , @xmath51 should hold , and for @xmath52 , @xmath53 should hold .",
    "we treat separately the following three cases :    1 .",
    "@xmath54 ( the @xmath55 long prefix plus one bit buffer zone , and the @xmath56 long suffix plus one bit buffer zone , do not overlap ) .",
    "note that since @xmath57 , the value @xmath55 is bounded by @xmath58 .",
    "2 .   @xmath59 3 .",
    "@xmath60    we start by analyzing case ( 1 ) .",
    "there is no overlap between the @xmath61 long prefixes and the @xmath62 long suffixes .",
    "this will enable us to analyze the number of possible prefixes and possible suffixes for @xmath45 separately , thereby facilitatating the counting .",
    "let us start with the prefixes .",
    "given that @xmath63 , as the longest common prefix of @xmath47 is of length @xmath55 , the @xmath61 long prefix of @xmath64 must be @xmath65 . the @xmath61 long prefix of @xmath66 must differ from both @xmath67 and @xmath65 for the event @xmath29 to hold .",
    "thus , there are @xmath68 possibilities for choosing the @xmath61 long prefix of @xmath66 . by a similar argument",
    ", there are @xmath69 possibilities for choosing the @xmath61 long prefix of @xmath70 .",
    "so , given that @xmath63 , the number of possibilities for choosing the @xmath61 long prefixes of @xmath45 is @xmath71 .",
    "let us now turn to the suffixes .",
    "let @xmath72 denote the @xmath62 long suffix of @xmath66 .",
    "this determines uniquely the @xmath62 long suffix of @xmath70 , which equals @xmath73 .",
    "for @xmath52 to hold , both should differ from the @xmath62 long suffix of @xmath43 , which equals @xmath74 .",
    "in particular , the @xmath62 long suffix of @xmath66 must differ from both @xmath74 and @xmath75 .",
    "this leaves @xmath76 possibilities for choosing the @xmath62 long suffix of @xmath66 , and then @xmath77 possibilities for choosing the @xmath62 long suffix of @xmath64 .",
    "so , given that @xmath63 , the number of possibilities for choosing the @xmath62 long suffixes of @xmath45 is @xmath78 .",
    "finally , each of @xmath45 has @xmath79 `` free bits '' in the middle , not overlapping neither the prefix nor the suffix .",
    "these can vary over all possibilities , independently of each other .",
    "the total number of possibilities for the free bits of the three sequences is thus @xmath80 , and the total number of possibilities for all of @xmath45 , given that @xmath63 , is @xmath81 summing over @xmath55 and @xmath56 in the relevant range , we get @xmath82 + employing a symbolic algebra package ( specifically , maple ) to this sum , we get @xmath83 this is the number of ordered quartets with @xmath63 , satisfying case ( 1 ) of @xmath46 .",
    "+ let us turn to case ( 2 ) , where @xmath84 , which means that the @xmath55 bits long prefix and the @xmath56 bits long suffix do not overlap , and have one `` buffer bit '' , which separates them . for the event @xmath52 to occur and",
    "the longest common suffix of @xmath66 , @xmath70 to be of length @xmath56 , the @xmath56 bits long suffix of @xmath66 must differ from the @xmath56 bits long suffixes of both @xmath43 and @xmath64 .",
    "given @xmath85 , and @xmath55 being the length of the longest common prefix of @xmath86 , the @xmath61 bits long prefix of @xmath64 is @xmath87 .",
    "since @xmath84 , the last bit of the @xmath61 bits long prefix of @xmath64 is also the first bit of its @xmath62 bits long suffix .",
    "so this suffix differs from the @xmath62 bits long suffix of @xmath43 ( which equals @xmath74 ) .",
    "there are @xmath88 possible settings of the @xmath56 rightmost bits of @xmath64 .",
    "we treat separately the case ( a ) where these bits are @xmath89 , and the case ( b ) where they differ from @xmath89 . in case ( a )",
    ", neither @xmath75 nor @xmath74 can serve as the @xmath62 bits suffix of @xmath66 , but any other sequence can .",
    "there are @xmath90 such possibilities .",
    "given the @xmath62 bits suffix of @xmath66 , the @xmath62 bits suffix of @xmath70 is completely determined ( it differs from @xmath66 in the buffer zone bit , and agrees with it in the other @xmath56 bits ) .",
    "the @xmath55 bits long prefix of @xmath66 and of @xmath70 could be any two sequences , other than @xmath91 .",
    "so in case ( a ) the overall number of possibilities for @xmath45 is @xmath92    in case ( b ) , there are @xmath93 possibilities for the @xmath56 bits long suffix of @xmath64 . the @xmath56 rightmost bits of @xmath66 must differ from both the @xmath56 rightmost bits of @xmath64 , and from @xmath89 . thus , there are @xmath94 possibilities for the @xmath56 bits long suffix of @xmath66 , and @xmath95 possibilities for the buffer zone bit of @xmath66 .",
    "overall , this leaves @xmath96 possibilities for the @xmath62 bits suffix of @xmath66 , which completely determine the @xmath62 bits suffix of @xmath70 . like case ( a ) , the @xmath55 bits long prefix of @xmath66 and of @xmath70 have @xmath97 possibilities each .",
    "so in case ( b ) the overall number of possibilities for @xmath45 , for a given value of @xmath56 and @xmath55 , is @xmath98    summing the numbers in cases ( a ) and ( b ) , we get @xmath99 in case ( 2 ) @xmath84 , so @xmath100 . furthermore , @xmath101 , so @xmath56 is in the range @xmath102 .",
    "summing over all values of @xmath56 , we get that the number of ordered quartets with @xmath63 , satisfying case ( 2 ) of @xmath46 , equals + @xmath103    we will now turn to case ( 3 ) , where @xmath104 , so there is no buffer bit between the @xmath55 bits long prefix and the @xmath56 bits long suffix , and if @xmath105 , they even overlap . again",
    ", we assume that @xmath106 , thus the @xmath107 leftmost bits of @xmath64 are @xmath87 .",
    "we then have @xmath108 ways to choose @xmath64 s suffix .",
    "since @xmath109 , it is guaranteed that even if @xmath43 and @xmath64 shared @xmath110 suffix bits , their common suffix wo nt be longer than @xmath56 .",
    "now , given @xmath43 and @xmath64 , we want to determine the number of possibilities for @xmath66 and @xmath70 .",
    "note that the @xmath111 bit of @xmath66 and @xmath70 must differ ( otherwise the length of the common suffix would be greater than @xmath56 .",
    "consider the @xmath112 bits of @xmath113 , where the @xmath55 long prefix and @xmath56 long suffix overlap ( if @xmath114 , this overlap is empty ) .",
    "these bits are part of the @xmath56 long suffix , shared by @xmath66 and @xmath70 .",
    "let us consider the 2 following sub cases :    1 .",
    "the @xmath112 bits of @xmath113 equal @xmath115 .",
    "+ in this case , the @xmath116 rightmost bits of of @xmath113 must differ from the @xmath116 rightmost bits of @xmath43 ( which are all @xmath44 ) and of @xmath64 ( which are not all @xmath44 ) .",
    "the number of possibilities is thus @xmath117 .",
    "suppose , without loss of generality , that the @xmath111 bit of @xmath66 equals @xmath44 .",
    "the @xmath111 long prefix of @xmath66 must differ from @xmath118 ( otherwise it would share an @xmath55 long prefix with both @xmath43 and @xmath64 )",
    ". there are @xmath119 possibilities for this prefix .",
    "there is no such restrictions on the @xmath111 bit long prefix of @xmath70 , so there are @xmath120 possibilities for it .",
    "overall , the number of possible sequences in case ( i ) is @xmath121 , where the leading @xmath95 accounts for the cases where either the @xmath111 bit of @xmath66 or that bit of @xmath70 equals @xmath44 .",
    "the @xmath112 bits of @xmath113 differ from @xmath115 .",
    "+ there are @xmath122 ways to determine these @xmath112 bits of @xmath113 .",
    "and there are @xmath123 ways to determine the @xmath116 bit long suffix of @xmath113 .",
    "suppose , without loss of generality , that the @xmath111 bit of @xmath66 equals @xmath44 .",
    "there are no additional restrictions on the @xmath111 long prefix of @xmath66 , so there are @xmath120 possibilities for this prefix .",
    "there are exactly that many possibilities for the @xmath111 long prefix of @xmath70 .",
    "overall , the number of possible sequences in case ( ii ) is @xmath124 , where the leading @xmath95 accounts for the cases where either the @xmath111 bit of @xmath66 or that bit of @xmath70 equals @xmath44 .",
    "summing up cases ( i , ii ) , we get that the number of possibilities for @xmath45 equals @xmath125 summing over values of @xmath56 and @xmath55 , satisfying @xmath126 , we get    @xmath127    summing the contributions from cases ( 1 ) , ( 2 ) , and ( 3 ) , we conclude that the number of ordered quartets with @xmath63 in @xmath128 equals @xmath129 note that the @xmath130 terms were cancelled .",
    "we denote the length of the longest common prefix of @xmath47 by @xmath131 , and the length of the longest common suffix of @xmath47 by @xmath132 . for @xmath29 , @xmath51 should hold , and for @xmath133 , @xmath53 should hold .",
    "note that in this case , the locations of the longest common suffix and the longest common prefix can not intersect .",
    "we treat separately the following two cases :    1 .",
    "@xmath54 ( the @xmath55 long prefix plus one bit buffer zone , and the @xmath56 long suffix plus one bit buffer zone , do not overlap ) .",
    "since @xmath57 , @xmath55 is bounded by @xmath58 .",
    "2 .   @xmath59 .",
    "note that @xmath134 must hold , for otherwise we would have @xmath135 .",
    "given that @xmath43 is @xmath136 , it is then clear that @xmath64 s @xmath61 long prefix is @xmath87 and its @xmath62 long suffix is @xmath137 .",
    "+ in case ( 1 ) , @xmath138 , and @xmath64 has the form @xmath139 where @xmath140 .",
    "@xmath141 can be chosen with no constrains from @xmath142 , so there are @xmath143 ways to choose @xmath141 .",
    "there are @xmath144 ways to choose the @xmath61 long prefix of @xmath66 ( it must differ from the @xmath61 long prefix of @xmath43 and @xmath64 ) , and @xmath69 ways to choose the @xmath61 long prefix of @xmath70 ( it must differ from the @xmath61 long prefixes of @xmath43 , @xmath64 , and @xmath66 ) . in a similar manner , there are @xmath90 ways to choose the @xmath62 long suffix of @xmath66 , and @xmath77 ways to choose the @xmath62 long suffix of @xmath70 .",
    "finally , the remaining @xmath145 bits of the buffer zone in each of @xmath113 can be chosen freely .",
    "all by all , the number of possibilities of case ( 1 ) for given values of @xmath55 and @xmath56 is @xmath146 we remark that this expression is the same as the one derived for case ( 1 ) of @xmath46 .    in case ( 2 ) , @xmath147 , and @xmath64 has the form @xmath148 , so it is completely determined . unlike case ( 1 ) , the @xmath61 long prefix and @xmath62 long suffix overlap , which makes the treatment slightly more involved .",
    "we therefore partition case ( 2 ) into two subcases : ( i ) @xmath66 and @xmath70 s common suffix length is shorter than @xmath56 , and ( ii ) @xmath66 and @xmath70 s common suffix length is exactly @xmath56 . for case ( i ) we can still choose @xmath66 and @xmath70 s prefixes as we have done in ( 1 ) , namely there are @xmath149 ways to choose them . given the @xmath61 long suffixes , both @xmath66 and @xmath70 still got @xmath150 bits that are not yet determined . since the length of their shared suffix is shorter than @xmath56 , the two choices must be different from each other , and from @xmath89 .",
    "so there are @xmath151 ways to choose the remaining @xmath56 bits .",
    "all by all , the number of possibilities in subcase ( i ) is @xmath152 possibilities .    for subcase ( ii ) , @xmath66 and @xmath70 s @xmath56 long suffixes are the same , but the @xmath153th bits ( from the right ) are different .",
    "the @xmath62 long suffixes must be different from both @xmath74 and @xmath75 .",
    "this leaves @xmath90 choices for @xmath66 s @xmath62 long suffix , and determines @xmath70 s @xmath62 long suffix .",
    "now the @xmath55 long prefixes of both can be chosen freely , as long as they both are not @xmath154 .",
    "so there are @xmath155 ways to choose the prefixes for @xmath66 and @xmath70 . in subcase ( 2)(ii )",
    "there are @xmath156 possibilities .",
    "all by all , the number of possibilities in case ( 2 ) for given values of @xmath55 and @xmath56 is @xmath157 substituting @xmath158 , we get @xmath159    we now sum over the relevant values of @xmath55 and @xmath56 . for case ( 1 ) , we have @xmath160 while in case ( 2 ) , the number of quartets is @xmath161 summing up the expressions for ( 1 ) and ( 2 ) , the number of ordered quartets with @xmath63 in @xmath162 is @xmath163 note that the @xmath164 terms were again cancelled .",
    "we denote the length of the longest common prefix of @xmath47 by @xmath131 , and the length of the longest common suffix of @xmath47 by @xmath166 . for @xmath29 , @xmath51 should hold , and for @xmath133 , @xmath53 should hold .",
    "note that in this case , the locations of the longest common suffix and the longest common prefix can not intersect .",
    "we treat separately the following two cases :    1 .",
    "@xmath54 ( the @xmath55 long prefix plus one bit buffer zone , and the @xmath56 long suffixes plus one bit buffer zone , do not overlap ) .",
    "since @xmath57 , @xmath55 is bounded by @xmath58 .",
    "2 .   @xmath59 .",
    "note that @xmath134 must hold , for otherwise we would have @xmath135 . for case",
    "( 1 ) , by following an argument very similar to case ( 1 ) of @xmath39 , we get that the number of ordered quartets is @xmath167 summing over all values of @xmath55 and @xmath56 , we get @xmath168    for case ( 2 ) , given that @xmath43 is @xmath136 , we have @xmath169 . the @xmath61 prefix of @xmath66 must differ from @xmath67 and from @xmath65 , thus there are @xmath144 possibilities .",
    "since the longest common prefix of @xmath49 is also of length @xmath55 , the @xmath61 long prefix of @xmath66 determines the @xmath61 long prefix of @xmath70 .",
    "the @xmath56 long suffix of @xmath66 and of @xmath70 must differ from @xmath89 .",
    "there are no further constraints , and in particular these two suffixes can be the same , as the next bit of @xmath66 already differs from that of @xmath70 .",
    "the number of possibilities for the @xmath56 long suffix of @xmath66 and of @xmath70 is thus @xmath170 .",
    "substituting @xmath158 , the number of ordered quartets in case ( 2 ) is @xmath171 summing over all values of @xmath55 , we get @xmath172 adding the two expressions together , we conclude that number of ordered quartets with @xmath63 in @xmath173 equals @xmath174      we denote the length of the longest common prefix of @xmath47 by @xmath131 , and the length of the longest common suffix of @xmath47 by @xmath166 .",
    "like before , @xmath101 , and we treat separately the following two cases :    1 .",
    "@xmath54 ( the @xmath55 long prefix plus one bit buffer zone , and the @xmath56 long suffix plus one bit buffer zone , do not overlap ) .",
    "since @xmath57 , @xmath55 is bounded by @xmath58 .",
    "2 .   @xmath59 .    in case",
    "( 1 ) , it is ( now ) easy to see that the number of ordered quartets is @xmath176 summing over all values of @xmath55 and @xmath56 , we get @xmath177 while in case ( 2 ) , the number of possibilities is @xmath178 summing over all values of @xmath55 , we get @xmath179 summing the expressions for case ( 1 ) and case ( 2 ) , we conclude that overall , the number of ordered quartets with @xmath63 satisfying @xmath175 is @xmath180",
    "consider the event @xmath181 a simple manipulation yields @xmath182 by the inclusion exclusion principle @xmath183 substituting the expressions we derived for the various subsets , we conclude that the number of ordered quartets with @xmath63 in @xmath184 equals @xmath185 removing the @xmath63 restriction , the number of ordered quartets in @xmath184 equals @xmath186 we now introduce two related sets , @xmath187 and @xmath188 : @xmath189 clearly @xmath190 are mutually exclusive and @xmath190 have the same number of ordered quartets .",
    "therefore @xmath191 we observe that the union @xmath192 contains exactly those ordered quartets on @xmath193 that agree in both prefix and suffix trees .",
    "so far , we counted ordered quartets . in the quartet distance problem , we are interested in _ unordered _ quartets and not in ordered ones . there are @xmath194 permutations over a set of 4 distinct elements , @xmath195 .",
    "we will show that for any set @xmath195 , either the suffix and the prefix tree agree for all the ordered 4-tuples corresponding to these 24 permutations , ( namely the ordered event @xmath192 , is satisfied ) , or there is no agreement for any of the permutations .",
    "this statement implies that the number of unordered quartets where the two trees agree is exactly this number for the ordered case , divided by 24 .",
    "we will show that @xmath184 is invariant under exactly 8 permutations of ordered @xmath196-tuples .",
    "a different set of 8 permutations maps ordered @xmath196-tuples that satisfy @xmath184 to different orders where the @xmath196-tuple satisfies @xmath187 , and yet another 8 permutations map ordered @xmath196-tuples that satisfy @xmath184 to different orders satisfying @xmath188 .",
    "suppose the ordered pair @xmath19 satisfies @xmath184 , namely @xmath197 membership in @xmath184 is invariant under each of the following 3 permutations and their compositions : transposing @xmath86 ; transposing @xmath113 ; replacing @xmath86 by @xmath113 .",
    "these 3 permutations generate a subgroup of size @xmath198 .",
    "starting with an ordered quartet @xmath19 in @xmath184 , and transposing @xmath64 with @xmath66 , the new ordered quartet @xmath199 is now in @xmath187 . by first applying one of the 8 permutations keeping @xmath19 in @xmath184 , and then this transposition",
    ", we conclude that there is a coset of 8 permutations , moving an ordered quartet from @xmath184 to @xmath187 .",
    "a similar argument holds regarding moving from @xmath184 to @xmath188 , employing the transposition of @xmath64 with @xmath70 .",
    "clearly , the same argument is applicable if we start with an ordered quartet that satisfies @xmath187 or @xmath188 .",
    "we conclude that if an the prefix and suffix trees agree on one ordered quartet , then they will agree on all 24 permutations of it . dividing the number of ordered permutations on @xmath3-bit strings where this event occurs by @xmath200",
    ", we conclude that the number of _ unordered _ permutations that agree equals @xmath201 the number of unordered quartets equals @xmath202    thus the quartet distance between the two trees equals @xmath203 @xmath204 @xmath205    the ratio , or _ normalized _ quartet distance for the suffix and prefix trees on @xmath2 leaves equals @xmath206    it is easy to see that this ratio indeed converges to @xmath207 as @xmath208 .",
    "what is not so obvious is that this ratio is a monotonically decreasing function of @xmath3 . for small values of @xmath3",
    "we get the following distances and ratios . for these values",
    "( and many others we tested numerically ) the ratio indeed decreases monotonically with growing values of @xmath3 .",
    "@xmath209 to prove the above mentioned monotonicity , we show that the ratio for @xmath2 is larger than the ratio for @xmath210 .",
    "the proof involves somewhat tedious yet elementary arithmetic manipulations .",
    "let @xmath211 denote the ratio ( number of disagreeing unordered quartets , divided by the total number of unordered quartets ) for the prefix and suffix trees with @xmath2 leaves . then @xmath212 @xmath213 to show that @xmath214 , we first compute @xmath215 and then take the derivative of this expression with respect to the ( real ) variable @xmath3 .",
    "the result ( obtained using maple ) equals @xmath216 it is easy to see that for @xmath217 , the derivative is negative , as following : the first term in the first line , @xmath218 , dominates the third term in the same line .",
    "the difference @xmath219 is negative for all @xmath220 . for @xmath217 , the second term in the second line , @xmath221 ,",
    "dominates the third term in the same line , @xmath222 .",
    "each of the three terms containing @xmath223 ( fourth line ) is dominated by a term containing @xmath224 ( third line ) with a minus sign . finally , for ( integer )",
    "values of @xmath3 in the range @xmath225 , direct computation verifies that @xmath226 .",
    "it will be interesting to extend these results to values of @xmath0 that are not exact power of @xmath95",
    ". it will also be interesting to prove or refute the conjecture that for large enough @xmath3 , the largest quartet distance on trees with @xmath2 leaves is obtained by the suffix and prefix trees .",
    "thanks to stefan grnewald for helpful discussions , which motivated this work .",
    "ple was supported in part by hungarian nsf grant k116769 .",
    "part of this work was done when ple visited bc , supported by an exchange program of the hungarian and israeli academies of science .",
    "bc was supported a grant from the blavatnik computer science research fund .",
    "99 n. alon , h. naves , and b. sudakov , `` on the maximum quartet distance between pyhlogenetic tress '' , siam j. discrete math . , vol .",
    "2 , pp . 718735 , 2016 . n. alon , s. snir , and r. yuster , `` on the compatibility of quartet trees '' , siam j. discrete math .",
    "3 , pp . 14931507 , 2014 .",
    "bandelt and a. dress , `` reconstructing the shape of a tree from observed dissimilarity data '' , advances in applied mathematics , volume 7 , issue 3 , pp . 309343 , 1986 .",
    "a. ben - dor , b. chor , d. graur , r. ophir , d. pelleg , `` constructing phylogenies from quartets : elucidation of eutherian superordinal relationships . ''",
    "journal of computational biology 5(3 ) , pp . 377390 , 1998 . v. berry , t. jiang , p. kearney , m. li , and t. wareham , `` quartet cleaning : improved algorithms and simulations '' , in algorithms esa 99 , springer , berlin , pp .",
    "313324 , 1999 .",
    "brodal , r. fagerberg , and c.n.s .",
    "pedersen , `` computing the quartet distance between evolutionary trees in time o(n log",
    "n ) '' , algorithmica , 38 , pp . 377395 , 2004 . , g. estabrook , f. mcmorris , and c. meacham , `` comparison of undirected phylogenetic trees based on subtrees of four evolutionary units '' , syst .",
    "biol . , 34 , pp .",
    "193?200 , 1985 . c. semple and m. steel , `` phylogenetics '' , oxford lecture series in mathematics and its applications , 2003 . s. snir and s. rao , `` quartets maxcut : a divide and conquer quartets algorithm '' , ieee / acm trans .",
    ", 7 , pp . 714718 , 2010 . m. steel , `` the complexity of reconstructing trees from qualitative characters and subtrees '' , journal of classification , vol .",
    "1 , pp . 91116 , 1992 . k. strimmer and a. von haeseler , `` quartet puzzling : a quartet maximum - likelihood method for reconstructing tree topologies '' , mol .",
    "964969 , 1996 ."
  ],
  "abstract_text": [
    "<S> given two binary trees on @xmath0 labeled leaves , the _ quartet distance _ between the trees is the number of disagreeing quartets . by permuting the leaves at random , </S>",
    "<S> the expected quartets distance between the two trees is @xmath1 . </S>",
    "<S> however , no explicit construction reaching this bound asymptotically was known .    </S>",
    "<S> we consider complete binary trees on @xmath2 leaves , labeled by @xmath3 long bit sequences . </S>",
    "<S> ordering the leaves in one tree by the prefix order , and in the other tree by the suffix order , we show that the resulting quartet distance is @xmath4 , and it always exceeds the @xmath1 bound . </S>"
  ]
}
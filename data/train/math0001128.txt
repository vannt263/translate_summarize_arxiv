{
  "article_text": [
    "_ tree - width _ , measuring the similarity of a graph with a tree , has turned out a to be an important notion both in structural graph theory and in the theory of graph algorithms .",
    "it is well known that planar graphs may have arbitrarily large tree - width . however , for every fixed @xmath5 the class of planar graphs of diameter at most @xmath5 has bounded tree - width . in other words ,",
    "the tree - width of a planar graph can be bounded by a function of the diameter of the graph .",
    "this makes it possible to decompose planar graps into families of graphs of small tree - width in an orderly way .",
    "such decompositions of planar graphs , better known under the name _ outerplanar decompositions _ , have been explored in various algorithmic settings @xcite .",
    "the main ideas go back to a fundamental article of baker @xcite on approximation algorithms on planar graphs .",
    "the _ local tree - width _ of a graph @xmath0 is the function @xmath1 that associates with every @xmath2 the maximal tree - width of an @xmath3-neighborhood in @xmath4 .",
    "more formally , we define the _ @xmath3-neighborhood _ @xmath6 of a vertex @xmath7 to be the set of all @xmath8 of distance at most @xmath3 from @xmath9 , and we let @xmath10 denote the subgraph induced by @xmath4 on @xmath6 .",
    "then , denoting the tree - width of a graph @xmath11 by @xmath12 , we let @xmath13 we are mainly interested in classes of graphs of _ bounded local tree - width _ , that is , classes @xmath14 for which there is a function @xmath15 such that for all @xmath16 and @xmath2 we have @xmath17 .",
    "the class of planar graphs is an example .",
    "it has been observed by eppstein @xcite that if a class @xmath14 is closed under taking minors and has bounded local tree - width ( eppstein calls this the `` diameter - treewidth property '' ) , then the graphs in @xmath14 admit a decomposition into graphs of small tree - width in the style of the outerplanar decomposition of planar graphs , and the planar - graph algorithms based on this decomposition generalize to graphs in @xmath14 .",
    "eppstein gave a nice characterization of such classes ; he proved that a minor closed class @xmath14 of graphs has bounded local tree - width if , and only if , it does not contain all apex graphs .",
    "the main graph - theoretic result of this paper , theorem [ theo : minorclosed ] , can be phrased as follows : let @xmath14 be a minor closed class of graphs that does not contain all graphs .",
    "then all graphs in @xmath14 can be decomposed into a tree of graphs that , after removing a bounded number of vertices , have bounded local tree - width .",
    "( of course the converse is also true , but trivial : if @xmath14 is a minor closed class of graphs such that every graph in @xmath14 admits such a decomposition , then @xmath14 is not the class of all graphs . )",
    "the proof of this result is based on a deep structural characterization of graphs with excluded minors due to robertson and seymour @xcite .",
    "we defer the precise technical statement of our decomposition theorem to section  [ sec : minclosed ] and turn to its applications now . in this paper",
    ", we focus on approximation algorithms . but let me mention that the theorem can also be used to re - prove a result of alon , seymour , and thomas @xcite that graphs @xmath4 with an excluded minor have tree - width @xmath18 ( see section  [ sec : ast ] ) .",
    "actually , the main result of alon , seymour , and thomas s article is a separator theorem for graphs with an excluded minor , generalizing a well - known separator theorem due to lipton and tarjan @xcite for planar graphs .",
    "these separator theorems have numerous algorithmic applications , among them a polynomial time approximation scheme ( ptas ) for the  problem on planar graphs @xcite and , more generally , classes of graphs with an excluded minor @xcite .",
    "a different approach to approximation algorithms on planar graphs is baker s @xcite technique based on the outerplanar decomposition",
    ". it does not only give another ptas for , but also for other problems , such as , to which the technique based on the separator theorem does not apply .",
    "we can use our decomposition theorem to extend baker s approach to arbitrary classes of graphs with an excluded minor .",
    "our purpose here is to explain the technique and not to give an extensive list of problems to which it applies .",
    "we show in detail how to get a ptas for  on classes of graphs with an excluded minor and then explain how this ptas has to be modified to solve the problems  and",
    ". it should be no problem for the reader to apply the same technique to other optimization problems .",
    "the paper is organized as follows : in section  [ sec : prel ] we fix our terminology and recall a few basic facts about tree - decompositions of graphs . local tree - width is introduced in section  [ sec : ltw ] . in section  [ sec : minclosed ] , we prove our decomposition theorem for classes of graphs with an excluded minor .",
    "approximation algorithms are discussed in section  [ sec : aa ] , and in section  [ sec : appl ] we briefly explain two other applications of the decomposition theorem .",
    "the vertex set of a graph @xmath4 is denoted by @xmath19 , the edge set by @xmath20 .",
    "graphs are always assumed to be finite , simple , and undirected .",
    "we write @xmath21 to denote that there is an edge from @xmath9 to @xmath22 . for a subset @xmath23 , we let @xmath24 denote the induced subgraph of @xmath4 with vertex set @xmath25 . we let",
    "@xmath26 . for graphs",
    "@xmath4 and @xmath11 , we let @xmath27 . we often omit superscripts",
    "@xmath28 if @xmath4 is clear from the context .    @xmath29 denotes the complete graph with @xmath30 vertices , and for an arbitrary set @xmath25 , @xmath31 denotes the complete graph with vertex set @xmath25 .",
    "a vertex set @xmath23 in a graph @xmath4 is a _ clique _ if @xmath32 .",
    "the _ clique number _ @xmath33 of a graph @xmath4 is the maximal size of a clique in @xmath4 . for a class @xmath14 of graphs ,",
    "we let @xmath34 be the maximum of the clique numbers of all graphs in @xmath14 , or @xmath35 , if this maximum does not exist .",
    "note that if @xmath14 is closed under taking subgraphs and is not the class of all graphs , then @xmath34 is finite .",
    "a _ minor _ of a graph @xmath4 is a graph @xmath11 that can be obtained from a subgraph of @xmath4 by contracting edges ; we write @xmath36 to denote that @xmath11 is a minor of @xmath4 .",
    "note that @xmath36 if , and only if , there is a mapping @xmath37 such that @xmath38 is a connected subgraph of @xmath4 for all @xmath39 , @xmath40 for @xmath41 , and for every edge @xmath42 there exists an edge @xmath43 such that @xmath44 .",
    "we say that the mapping @xmath45 _ witnesses _ @xmath36 and write @xmath46 .",
    "a class @xmath14 is _ minor closed _ if , and only if , for all @xmath16 and @xmath36 we have @xmath47 .",
    "we call @xmath14 non - trivial if it is not the class of all graphs",
    ".    a class @xmath14 is _ @xmath11-free _ if @xmath48 for all @xmath16 .",
    "we then call @xmath11 an _ excluded minor _ for @xmath49 . note that a class @xmath14 of graphs has an excluded minor if , and only if , there is an @xmath50 such that @xmath14 is @xmath29-free . furthermore , this is equivalent to saying that @xmath14 is contained in some non - trivial minor closed class of graphs .",
    "robertson and seymour s @xcite _ graph minor theorem _ states that for every minor closed class @xmath14 of graphs there is a finite set @xmath51 of graphs such that @xmath52 for a nice introduction to graph minor theory we refer the reader to the last chapter of @xcite , a recent survey is @xcite .    [ ss : treedec ] in this paper , we assume trees to be directed from the root to the leaves . if @xmath53 we call @xmath54 a _ child _ of @xmath55 and @xmath55 the _ parent _ of @xmath54 .",
    "the root of a tree @xmath56 is always denoted by @xmath57 .    a _ tree - decomposition _ of a graph @xmath4 is a pair @xmath58 , where @xmath56 is a tree and @xmath59 a family of subsets of @xmath19 such that @xmath60 and for every @xmath61 the set @xmath62 is connected .",
    "the sets @xmath63 are called the _ blocks _ of the decomposition .",
    "the _ width _ of @xmath64 is the number @xmath65 .",
    "the _ tree - width _ of @xmath4 , denoted by @xmath66 , is the minimal width of a tree - decomposition of @xmath4 .",
    "the following lemma collects a few simple and well - known facts about tree - decompositions :    [ lem : treedec ]    1 .",
    "let @xmath64 be a tree - decomposition of a graph @xmath4 and @xmath23 a clique .",
    "then there is a @xmath67 such that @xmath68 .",
    "2 .   let @xmath69 be graphs such that @xmath70 is a clique in both @xmath4 and @xmath11",
    ". then @xmath71 .",
    "3 .   let @xmath4 be a graph and @xmath23 .",
    "then @xmath72 .",
    "4 .   let @xmath69 be graphs such that @xmath36",
    ". then @xmath73 .",
    "throughout this paper , for a tree - decomposition @xmath64 and @xmath74 with parent @xmath75 we let @xmath76 .",
    "we let @xmath77 .",
    "the _ adhesion _ of @xmath64 is the number @xmath78 the _ torso _ of @xmath64 at @xmath67 is the subgraph @xmath79:=\\langle b_t\\rangle^g\\cup k_{a_t}\\cup\\bigcup_{u\\text { child of } t}k_{a_u},\\ ] ] or equivalently , the subgraph with vertex set @xmath63 in which two vertices are adjacent if , and only if , either they are adjacent in @xmath4 or they both belong to a block @xmath80 , where @xmath81 .",
    "@xmath64 is a tree - decomposition of @xmath4 _ over _ a class @xmath82 of graphs if all its torsos belong to @xmath82 .",
    "note that the adhesion of a tree - decomposition over @xmath82 is bounded by @xmath83 .",
    "actually , it can be easily seen that if a graph has a tree - decomposition over a minor - closed class @xmath82 then it has a tree - decomposition over @xmath82 of adhesion at most @xmath84 .",
    "a _ path - decomposition _ of a graph @xmath4 is a tree decomposition where the underlying tree is a path .",
    "of course we can always assume that the path @xmath85 of a path decomposition @xmath86 has vertex set @xmath87 , for some @xmath88 , and that the vertices occur on @xmath85 in their natural order ( that is , we have @xmath89 for @xmath90 ) .",
    "[ attachlem ] let @xmath69 be graphs and @xmath91 a path - decomposition of @xmath11 of width @xmath92 .",
    "let @xmath93 be a path in @xmath4 such that @xmath94 for @xmath95 and @xmath96 .",
    "then @xmath97    let @xmath98 be a tree - decomposition of @xmath4 .",
    "then @xmath99 with @xmath100 is a tree - decomposition of @xmath101 .",
    "the distance @xmath102 between two vertices @xmath103 of a graph @xmath4 is the length of the shortest path in @xmath4 from @xmath104 to @xmath105 . for @xmath106 and @xmath107",
    "we define the _ @xmath3-neighborhood _ around @xmath104 to be @xmath108 .    1 .",
    "the _ local tree - width _ of a graph @xmath4 is the function @xmath109 defined by @xmath110 2 .",
    "a class @xmath14 of graphs has _ bounded local tree - width _ if there is a function @xmath111 such that @xmath112 for all @xmath16 , @xmath2 .",
    "+ @xmath14 has _ linear local tree - width _ if there is a @xmath113 such that @xmath114 for all @xmath16 , @xmath2 .",
    "let @xmath4 be a graph of tree - width at most @xmath92 .",
    "then @xmath115 for all @xmath2 .",
    "let @xmath4 be a graph of valence at most @xmath116 , for an @xmath117 .",
    "then @xmath118 for all @xmath2 .",
    "the planar graph algorithms due to baker and others that we mentioned in the introduction are based on the following result :    propositionbodlaender @xcite the class of planar graphs has linear local tree - width .",
    "more precisely , for every planar graph @xmath4 and @xmath119 we have @xmath120 .    in this paper , a _ surface _ is a compact connected 2-manifold with ( possibly empty ) boundary .",
    "the ( orientable or non - orientable ) _ genus _ of a surface @xmath121 is denoted by @xmath122 .",
    "an _ embedding _ of a graph @xmath4 in a surface @xmath121 is a mapping @xmath123 that associates distinct points of @xmath121 with the vertices of @xmath4 and internally disjoint simple curves in @xmath121 with the edges of @xmath4 in such a way that a vertex @xmath9 is incident with an edge @xmath124 if , and only if , @xmath125 is an endpoint of @xmath126 .",
    "propositioneppstein @xcite[ltw - emb ]",
    "let @xmath121 be a surface .",
    "then the class of all graphs embeddable in @xmath121 has linear local tree - width .",
    "more precisely , there is a constant @xmath127 such that for all graphs @xmath4 embeddable in @xmath121 and for all @xmath128 we have @xmath129 .    in the next subsection , we prove an extension of proposition [ ltw - emb ] that forms the bases of our decomposition theorem for graphs with excluded minors .",
    "but before we do so , let me state another result due to eppstein that characterizes the minor closed classes of graphs of bounded local tree - width .",
    "an _ apex graph _ is a graph @xmath4 that has a vertex @xmath61 such that @xmath130 is planar .",
    "theoremeppstein @xcite let @xmath14 be a minor - closed class of graphs .",
    "then @xmath14 has bounded local tree - width if , and only if , @xmath14 does not contain all apex graphs .",
    "it is an interesting open problem whether there is a minor closed class of graphs of bounded local tree - width that does not have linear ( or polynomially bounded ) local tree - width .",
    "let @xmath121 be a surface with non - empty boundary .",
    "the boundary of @xmath121 consists of finitely many connected components @xmath131 , each of which is homeomorphic to the cycle @xmath132 .",
    "we now define a graph @xmath4 to be _ almost embeddable _ in @xmath121 .",
    "roughly , this means that we can obtain @xmath4 from a graph @xmath133 embedded in @xmath121 by attaching at most @xmath134 graphs of path - width at most @xmath134 to @xmath133 along the boundary cycles @xmath131 in an orderly way .",
    "this notion plays an important role in the structure theory of graphs with excluded minors , to be outlined in the next subsection .",
    "[ almostembeddable ] let @xmath121 be a surface with boundary cycles @xmath131 .",
    "a graph @xmath4 is _ almost embeddable _ in @xmath121 if there are ( possibly empty ) subgraphs @xmath135 of @xmath4 such that    * @xmath136 , * @xmath133 has an embedding @xmath123 in @xmath121 , * @xmath137 are pairwise disjoint , * for @xmath138 , @xmath139 has a path decomposition @xmath140 of width at most @xmath134 , * for @xmath138 there are vertices @xmath141 such that @xmath142 for @xmath143 and @xmath144 , * for @xmath138 , we have @xmath145 , and the points @xmath146 appear on @xmath147 in this order ( either if we walk clockwise or anti - clockwise ) .    [ ltwalmostemb ]",
    "let @xmath121 be a surface .",
    "then the class of all graphs almost embeddable in @xmath121 has linear local tree - width .",
    "let @xmath4 be a graph that is almost embeddable in @xmath121 .",
    "we use the notation of definition [ almostembeddable ] .",
    "let @xmath148 be the graph obtained from @xmath133 by adding new vertices @xmath149 , and edges @xmath150 , @xmath151 , and @xmath152 , for @xmath138 , @xmath143 ( see figure [ zifig ] ) . clearly , @xmath148 is still embeddable in @xmath121 .",
    "for @xmath138 we let @xmath153 .     to @xmath148,height=113 ]    let @xmath154 such that for every graph @xmath4 embedabble in @xmath121 and every @xmath2 we have @xmath155 ( such a @xmath156 exists by theorem [ ltw - emb ] ) .",
    "for @xmath2 we let @xmath157 and , for @xmath158 , we let @xmath159 .",
    "then @xmath160 is a linear function for every @xmath161 .",
    "by induction on @xmath162 we shall prove that for every @xmath163 and @xmath164 we have @xmath165 for @xmath166 , this is immediate .",
    "so we assume that @xmath167 and that we have proved for @xmath168 .    for all @xmath169",
    ", we either have @xmath170 , or @xmath171 , or @xmath172 .    if @xmath173 then @xmath174 .    if @xmath175 and @xmath176 , then @xmath177 . by the construction of @xmath148 ,",
    "this implies @xmath178 and thus @xmath179 .    by lemma [ attachlem ] and the induction hypothesis we get @xmath180    if @xmath181 , then @xmath182 .",
    "thus by lemma [ attachlem ] and the induction hypothesis we have @xmath183    note that the local tree - width of a graph is not minor - monotone ( that is , @xmath36 does not imply @xmath184 for all @xmath3 ) .",
    "however , we do have @xmath185    [ ltwminalmostemb ] let @xmath121 be a surface .",
    "then the class of all minors of graphs almost embeddable in @xmath121 has linear local tree - width .",
    "recall the proof of proposition [ ltwalmostemb ] .",
    "we use the same notation here .",
    "suppose @xmath186 is a minor of @xmath4 .",
    "we can assume that @xmath186 is a subgraph of a graph @xmath187 obtained from @xmath4 only by contracting edges .",
    "because of we can even assume that @xmath188 .",
    "let @xmath189 .",
    "contracting edges with at least one endpoint not in @xmath25 is unproblematic , because the resulting graph is still almost embeddable in @xmath121 .",
    "so we can further assume that @xmath186 is obtained from @xmath4 by contracting edges @xmath190 , @xmath191 , @xmath192 with both endpoints in @xmath25 .",
    "let @xmath193 ( the graph obtained from @xmath4 by adding the vertices @xmath194 and corresponding edges as in figure [ zifig ] ) .",
    "let @xmath195 be the graph obtained from @xmath11 by contracting @xmath196 , and let @xmath197 witness these edge contractions .",
    "the key observation is that for all @xmath198 and @xmath199 we have @xmath200 ( no matter how large @xmath30 is ) . to see this ,",
    "let @xmath201 be a shortest path from @xmath104 to @xmath105 in @xmath195 .",
    "let @xmath85 be a path from @xmath54 to @xmath9 in @xmath11 such that @xmath201 is obtained from @xmath85 by contracting the edges @xmath202 .",
    "let us call such an edge an @xmath203-edge if it connects a vertex in @xmath204 with a vertex in @xmath205 .",
    "suppose that @xmath206 .",
    "for @xmath138 , let @xmath207 and @xmath208 , where @xmath209 , be the first and last vertex from @xmath204 on @xmath85 . if @xmath210 we replace the interval @xmath211 in @xmath85 by @xmath212 .",
    "doing this for @xmath138 we obtain a new path @xmath213 from @xmath54 to @xmath9 in @xmath11 .",
    "this path @xmath213 contains no at most @xmath214 edges that are not on @xmath85 and no @xmath215-edges .",
    "furthermore , for @xmath216 the number of @xmath203-edges on @xmath213 is at most @xmath217 . because assume that @xmath213 contains at least @xmath134 such edges .",
    "then there would be a `` cycle '' @xmath218 such that for @xmath219 , @xmath213 contains an @xmath220-edge .",
    "however , this cycle would have been removed while transforming @xmath85 to @xmath213 .",
    "hence @xmath221 , which proves .",
    "implies that for all @xmath128 , @xmath222 , and @xmath223 we have @xmath224 to see this , let @xmath225 .",
    "then for all @xmath226 , by we have @xmath227 .",
    "thus @xmath228 .",
    "therefore the restriction of @xmath45 to @xmath229 witnesses @xmath230 .",
    "this proves .    by",
    "and we get @xmath231 .",
    "the statement of the lemma follows .",
    "the following deep structure theorem for @xmath29-free graphs plays a central role in the proof of the graph minor theorem . for a surface @xmath121 and @xmath232",
    "we let @xmath233 be the class of all graphs @xmath4 such that there is an @xmath23 with @xmath234 such that @xmath235 is almost embeddable in @xmath121 .",
    "theoremrobertson and seymour @xcite[gm16 ] for every @xmath236 there exist @xmath232 and surfaces @xmath237 such that all @xmath29-free graphs have a tree - decomposition over @xmath238 .",
    "further details concerning this theorem can be found in @xcite .    for @xmath239",
    "we let @xmath240 note that @xmath241 is minor closed and that @xmath242 .",
    "thus a tree - decomposition over @xmath241 has adhesion at most @xmath243 .",
    "[ theo : minorclosed ] let @xmath14 be a class of graphs with an excluded minor",
    ". then there exist @xmath244 such that all @xmath16 have a tree - decomposition over @xmath241 .",
    "this follows immediately from theorem [ gm16 ] and proposition [ ltwminalmostemb ] .    for algorithmic applications we have in mind , theorem [ theo : minorclosed ] alone",
    "is not enough ; we also have to compute a tree - decomposition of a given graph over @xmath241 .",
    "fortunately , robertson and seymour have proved another deep result that helps us with this task :    theoremrobertson and seymour @xcite[gm13 ] every minor closed class of has a polynomial time membership test .",
    "[ treedeclem ] let @xmath14 be a minor closed class of graphs .",
    "then there is a polynomial time algorithm that computes , given a graph @xmath4 , a tree - decomposition of @xmath4 over @xmath14 , or rejects @xmath4 if no such tree - decomposition exists .",
    "note that the class @xmath245 of all graphs that have a tree - decomposition over @xmath14 is minor closed .",
    "thus by theorem [ gm13 ] we have polynomial time membership tests for both @xmath14 and @xmath245 .    without loss of generality",
    ", we can assume that @xmath14 is not the class of all graphs .",
    "thus the clique number @xmath246 is finite .",
    "recall that every tree - decomposition over @xmath14 has adhesion at most @xmath247 .",
    "our algorithm uses the following observation to recursively construct a tree - decomposition of the input graph @xmathxmath248 if , and only if , @xmath16 or there is a set @xmath23 such that @xmath249 , @xmath250 has at least two connected components , and for all components @xmath251 of @xmath235 we have @xmath252 .",
we omit the details .",
    "in particular , we are going to apply this result to the minor closed classes @xmath241 .",
    "[ optprob ] an _ np - optimization problem _ is a tuple @xmath253 , consisting of a polynomial time decidable set @xmath254 of _ instances _ , a mapping @xmath121 that associates a non - empty set @xmath255 of _ solutions _ with each @xmath256 such that the binary relation @xmath257 is polynomial time computable and there is a @xmath258 such that for all @xmath256 , @xmath259 we have @xmath260 , a polynomial time computable _ cost _ ( or _ value _ ) function @xmath261 , and a _ goal _ @xmath262 .",
    "given an @xmath256 , we want to find a @xmath259 such that @xmath263    let @xmath256 and @xmath264 .",
    "a solution @xmath259 for @xmath104 is _",
    "@xmath265-close _ if @xmath266 a _ polynomial time approximation scheme ( ptas ) _ for @xmath253 is a uniform family @xmath267 of approximation algorithms , where @xmath268 is a polynomial time algorithm that , given an @xmath256 , computes an @xmath265-close solution for @xmath104 in polynomial time .",
    "uniformity means that there is an algorithm that , given @xmath265 , computes @xmath268 .    for graph @xmath4 , a vertex @xmath61 , and integers",
    "@xmath269 we let @xmath270:=\\{w\\in v^g\\mid i\\le d^g(v , w)\\le j\\}.\\ ] ] to keep the notation uniform , we are actually going to write @xmath271 $ ] for arbitrary @xmath272 , with the understanding that @xmath271:=\\emptyset$ ] for @xmath273 and @xmath271:=l_v^g[0,j]$ ] for @xmath274 .",
    "[ lem : level ] let @xmath154 .",
    "then for all @xmath275 , @xmath61 , and @xmath272 with @xmath276 we have @xmath277\\rangle\\big)\\le\\lambda\\cdot(j - i+1)$ ] .    first note that @xmath278\\subseteq l_{v}^g[0,j]=n_j^g(v)$ ] , thus the claim holds for @xmath279 . for @xmath280 , consider the minor @xmath11 of @xmath4 obtained by contracting the connected subgraph @xmath281\\rangle$ ] to a single vertex @xmath282 .",
    "then we have @xmath283\\subseteq n_{j - i+1}^{h}(v')$ ] , and the claim follows .",
    "instances of  are graphs @xmath4 , solutions are sets @xmath23 such that for every edge @xmath21 either @xmath284 or @xmath285 ( such sets @xmath25 are called _ vertex covers _ ) , the cost function is defined by @xmath286 , and the goal is @xmath287 .",
    "lemma@xcite[lem : als ] for every @xmath288 , the restriction of to instances of tree - width at most @xmath92 is solvable in linear time .",
    "[ theo : minvc ] let @xmath14 be a class of graphs with an excluded minor .",
    "then the restriction of  to instances in @xmath14 has a ptas .    applying theorem [ theo : minorclosed ] , we choose @xmath244 such that every @xmath16 has a tree - decomposition over @xmath289 .",
    "let @xmath264 ; we shall describe a polynomial time algorithm that , given a graph @xmath16 , computes an @xmath265-close solution for  on @xmath4 .",
    "uniformity will be clear from our description .",
    "let @xmath290 and note that @xmath291 .    in a first step ,",
    "let us prove that the restriction of  to instances in @xmath292 has a ptas .",
    "let @xmath275 and @xmath61 arbitrary .",
    "for @xmath293 and @xmath294 we let @xmath295 $ ] . by lemma [ lem : level ] , @xmath296 .    for @xmath293 , @xmath294 let @xmath297 be a minimal vertex cover of @xmath298 .",
    "we let @xmath299 .",
    "then @xmath300 is a vertex cover of @xmath4 .",
    "let @xmath301 be a minimal vertex cover for @xmath4 .",
    "we have @xmath302 , because @xmath303 is also a vertex cover of @xmath298 .",
    "hence @xmath304 the last inequality follows from the fact that every @xmath61 is contained in at most @xmath305 ( successive ) sets @xmath306",
    ".    choose @xmath307 such that @xmath308 .",
    "then @xmath309 since the @xmath297 can be computed in polynomial time by lemma [ lem : als ] , @xmath310 can also be computed in polynomial time .    in a second step ,",
    "we show how to extend this approximation algorithm to classes @xmath289 for @xmath239 .",
    "let @xmath311 and @xmath312 such that @xmath313 and @xmath314 .",
    "the following extension of lemma [ lem : als ] can be proved by standard dynamic programming techniques ( cf .",
    "@xcite ) :    [ lem : als2 ] for every @xmath315 , the following problem can be solved in linear time : given a graph @xmath4 , a subset @xmath312 such that @xmath316 , and a subset @xmath317 , compute a set @xmath318 of minimal order such that @xmath319 is a vertex cover of @xmath4 , if such a set exists , or reject otherwise .    for every @xmath317 we shall compute an @xmath320 such that either @xmath321 is a vertex cover of @xmath4 and @xmath322 or @xmath323 if no such @xmath324 exists . using lemma [ lem : als2 ] instead of lemma",
    "[ lem : als ] , we can do this analogously to the first step .",
    "then we choose a @xmath325 such that @xmath326 is minimal . here",
    "we define @xmath327 for all @xmath328 and @xmath329 .",
    "then clearly @xmath330 is an @xmath265-close solution for  on @xmath4 .",
    "moreover , since @xmath331 , there are at most @xmath332 sets @xmath317 , so @xmath330 can be computed in polynomial time ( remember that @xmath333 is a constant only depending on the class @xmath14 ) .    in the third step , we extend our ptas to graphs that have a tree - decomposition over @xmath241 , i.e.  to all graphs in @xmath14 .",
    "so let @xmath4 be such a graph .",
    "we first compute a tree - decomposition @xmath64 of @xmath4 over @xmath241 .",
    "remember that by lemma [ treedeclem ] , this is possible in polynomial time .",
    "recall that @xmath57 denotes the root of @xmath56 and that , for every @xmath67 with parent @xmath54 , we let @xmath334 . for every @xmath67 , we let @xmath335 be the subtree of @xmath56 with root @xmath55 , that is , the subtree with vertex set @xmath336 . we let",
    "@xmath337 .",
    "inductively from the leaves to the root , for every node @xmath67 and for every @xmath338 we compute an @xmath339 such that either @xmath340 is a vertex cover of @xmath341 and @xmath342 or @xmath343 if no such vertex set exists .",
    "since a tree - decomposition over @xmath241 has adhesion at most @xmath243 we have @xmath344 , thus for every @xmath67 we have to compute at most @xmath345 sets @xmath346 . for the root @xmath57 we have @xmath347 ,",
    "so @xmath348 is an @xmath265-close solution for  on @xmath4 .",
    "suppose that @xmath67 and that for every child @xmath349 of @xmath56 we have already computed the family @xmath350 .",
    "let @xmath351 such that @xmath313 and @xmath352\\setminus u\\in\\mathcal l(\\lambda)$ ] .",
    "let @xmath353 and let @xmath354 .",
    "let @xmath355 be a vertex set of minimal order such that @xmath356 is a vertex cover of @xmath341 , or @xmath357 if no such vertex set exists .",
    "we show how to compute an @xmath358 such that @xmath359 is a vertex cover of @xmath360 and @xmath361 , if @xmath362 , or @xmath363 otherwise .",
    "then for every @xmath338 we choose a @xmath354 such that @xmath364 with minimal @xmath365 ( among all @xmath366 ) and let @xmath367 .",
    "note that , since @xmath331 , for every @xmath368 we have to compute at most @xmath332 sets @xmath369 to determine @xmath346 .",
    "so let us fix a @xmath354 ; we show how to compute @xmath369 in polynomial time .",
    "if @xmath370 we let @xmath371 .",
    "otherwise , we choose an arbitrary @xmath372 . for @xmath373 and @xmath294",
    "we let @xmath374\\setminus    w}[(j-1)k+i , jk+i]$ ] .",
    "then @xmath296 . for @xmath293 and",
    "every child @xmath349 of @xmath55 there is at least one @xmath294 such that @xmath375 , because @xmath376 induces a clique in @xmath352 $ ] .",
    "let @xmath377 be the least such @xmath378 and @xmath379 .",
    "for every @xmath380 we let @xmath381 we compute an @xmath382 with minimal @xmath383 such that @xmath384 is a vertex cover of @xmath385 if such a vertex cover exists , and @xmath386 otherwise .",
    "the usual dynamic programming techniques on graphs of bounded tree - width show that each @xmath297 can be computed in linear time if the numbers @xmath387 for the children @xmath349 of @xmath55 are given ( cf .",
    "lemmas [ lem : als ] and [ lem : als2 ] and @xcite ) .",
    "it is important here that every @xmath388 is a clique in @xmath389 and thus by lemma [ lem : treedec](1 ) completely contained in a block of every tree - decomposition of @xmath389 .",
    "we let @xmath390 and @xmath391 .",
    "then @xmath392 is a vertex cover of @xmath341 , if such a vertex cover exists , and @xmath393 otherwise .",
    "we choose an @xmath394 , such that @xmath395 and let @xmath396 .",
    "then @xmath369 can be computed in polynomial time .",
    "recall that @xmath397 is a vertex set of minimal order such that @xmath398 is a vertex cover of @xmath341 , if such a vertex cover exists , and @xmath399 otherwise .",
    "it remains to prove that @xmath400 .",
    "recall that for every child @xmath349 of @xmath55 we have @xmath401 our construction of the @xmath297 and @xmath402 guarantees that for @xmath403 we have @xmath404    then @xmath405 this implies @xmath406 .",
    "instances of  are graphs @xmath4 , solutions are sets @xmath407 such that for every @xmath408 there is a @xmath285 such that @xmath21 ( such sets @xmath25 are called _ dominating sets _ ) , the cost function is defined by @xmath286 , and the goal is @xmath287 .",
    "let @xmath14 be a class of graphs with an excluded minor .",
    "then the restriction of  to instances in @xmath14 has a ptas .",
    "we proceed very similarly to the proof of theorem [ theo : minvc ] , the analogous result for .",
    "let @xmath244 such that every graph in @xmath14 has a tree - decomposition over @xmath241 .",
    "let @xmath264 and @xmath409 .",
    "again , in the first step we consider the restriction of the problem to input graphs from @xmath292 .",
    "given such a graph @xmath4 , we choose an arbitrary @xmath61 . for @xmath293 and @xmath294 we let @xmath410 $ ] .",
    "then @xmath411 .",
    "note that @xmath306 and @xmath412 overlap in two consecutive rows , which is different from the proof of theorem [ theo : minvc ] .",
    "the _ interior _ of @xmath306 is the set @xmath413 $ ] .    for @xmath414",
    "we let @xmath382 be a vertex set of minimal order with the following property :    * for every @xmath415 there is a @xmath416 such that @xmath417 .",
    "then for @xmath293 the set @xmath418 is a dominating set of @xmath4 .",
    "let @xmath419 be such that @xmath308 .",
    "computing @xmath310 amounts to solving a variant of  on instances of tree - width at most @xmath420 ; using the usual dynamic programming techniques , this can be done in linear time .    since for every dominating set @xmath25 of @xmath4",
    "the set @xmath421 has property @xmath422 we have @xmath423 . using this",
    ", we can argue as in the proof of theorem [ theo : minvc ] to show that @xmath310 is an @xmath265-close solution .",
    "adapting the second and third step of the proof of theorem [ theo : minvc ] , it is straightforward to extend this algorithm to arbitrary input graphs in @xmath14 .",
    "instances of  are graphs @xmath4 , solutions are sets @xmath23 such that for all @xmath424 we have @xmath425 ( such sets @xmath25 are called _ independent sets _ ) , the cost function is defined by @xmath286 , and the goal is @xmath426 .",
    "let @xmath14 be a class of graphs with an excluded minor .",
    "then the restriction of  to instances in @xmath14 has a ptas .",
    "again we proceed similarly to the proof of theorem [ theo : minvc ] .",
    "let @xmath244 such that every graph in @xmath14 has a tree - decomposition over @xmath241 .",
    "let @xmath264 and @xmath290 .",
    "we describe how to treat input graphs in @xmath292 . following the lines of the proof of theorem [ theo : minvc ] ,",
    "the extension to arbitrary @xmath16 is straightforward .",
    "let @xmath275 and @xmath61 .",
    "for @xmath293 and @xmath294 we let @xmath427 $ ] . then @xmath428 .",
    "note that there are no edges between @xmath306 and @xmath412 .    for @xmath414",
    "we let @xmath297 be a maximal independent set of @xmath298 .",
    "then @xmath429 is an independent set of @xmath4 .",
    "let @xmath430 such that @xmath431 .",
    "since the restriction of  to graphs of bounded tree - width is solvable in linear time , such an @xmath432 can be computed in linear time .",
    "let @xmath433 be a maximum independent set of @xmath4 . then for @xmath293 ,",
    "@xmath294 we have @xmath434 which implies that @xmath435 .",
    "our approach can be used to find polynomial time approximation schemes for the restrictions of a number of other problems to classes of graphs with excluded minors , in particular for the other problems considered by baker @xcite .",
    "i leave it to the reader to work out the details .",
    "[ sec : ast ] we re - prove a theorem of alon , seymour , and thomas @xcite that the tree - width of a @xmath29-free graph @xmath4 is @xmath18 .",
    "this is joint work with reinhard diestel and daniela khn .",
    "let @xmath154 and @xmath275",
    ". then @xmath436 .",
    "let @xmath61 arbitrary and , for @xmath162 , @xmath437 .",
    "let @xmath419 be maximal such that @xmath438 is non - empty .",
    "we subdivide @xmath439 into intervals @xmath440 such that for @xmath441 we have    * @xmath442 for all @xmath443 , * @xmath444 for all @xmath445 .",
    "then @xmath446 and @xmath447 ( because the length of @xmath448 is at most @xmath449 ) .",
    "we can glue the decompositions together by adding to every block of a tree - decomposition of @xmath448 the last level of the previous @xmath450 and the first level of the next @xmath451 and obtain @xmath452 .",
    "let @xmath244 and @xmath453",
    ". then @xmath454 .",
    "let @xmath4 be @xmath29-free",
    ". then @xmath455 .    in @xcite",
    "we give another algorithmic application of theorem [ theo : minorclosed ] .",
    "we show that for every class @xmath14 of graphs with an excluded minor there is a constant @xmath456 such that for every property of graphs that is definable in first order logic there is an @xmath457-algorithm deciding whether a given graph @xmath16 has this property .",
    "for example , this implies that for every class @xmath14 with an excluded minor there is a constant @xmath127 such that for every graph @xmath11 there is an @xmath457-algorithm testing whether a given graph @xmath16 has a subgraph isomorphic to @xmath11 .",
    "we have never specified the exponents and coefficients of the polynomials bounding the running times of our algorithms ; they seem to be enormous .",
    "so our algorithms are only of theoretical interest .",
    "the first important step towards improving the algorithms would be a practically applicable algorithm for computing tree - decompositions of graphs of small tree - width .",
    "on the graph theoretic side , it would probably help to prove theorem [ theo : minorclosed ] directly without using robertson s and seymour s theorem [ gm16 ] .",
    "the traveling salesman problem is another optimization problem that has a ptas on planar graphs @xcite",
    ". it would be interesting to see if this problem has a ptas on class of graphs with an excluded minor .",
    "s.  arora , m.  grigni , d.  karger , ph .",
    "klein , and a.  woloszyn . a polynomial - time approximation scheme for weighted planar graph  tsp . in _ proceedings of the ninth annual acm - siam symposium on discrete algorithms _ , pages 3341 , 1998 .",
    "-algorithms for graphs with small treewidth . in j.",
    "van leeuwen , editor , _ proceedings of the 14th international workshop on graph theoretic concepts in computer science wg88 _ , volume 344 of _ lecture notes in computer science _ ,",
    "pages 110 .",
    "springer - verlag , 1988 .",
    "m.  frick and m.  grohe .",
    "deciding first - order properties of locally tree - decomposable graphs . in _ proceedings of the 26th international colloquium on automata , languages and programming _ , lecture notes in computer science .",
    "springer - verlag , 1999 .",
    "m.  grigni , e.  koutsoupias , and ch.h .",
    "an approximation scheme for planar graph tsp . in _ proceedings of the 36th annual ieee symposium on foundations of computer science _",
    ", pages 640645 , 1995 ."
  ],
  "abstract_text": [
    "<S> the _ local tree - width _ of a graph @xmath0 is the function @xmath1 that associates with every @xmath2 the maximal tree - width of an @xmath3-neighborhood in @xmath4 . </S>",
    "<S> our main graph theoretic result is a decomposition theorem for graphs with excluded minors that essentially says that such graphs can be decomposed into trees of graphs of bounded local tree - width .    as an application of this theorem </S>",
    "<S> , we show that a number of combinatorial optimization problems , such as , , and  have a polynomial time approximation scheme when restricted to a class of graphs with an excluded minor . </S>"
  ]
}
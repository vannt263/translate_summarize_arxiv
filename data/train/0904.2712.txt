{
  "article_text": [
    "the _ maximum independent set _ problem ( mis ) , to find a maximum set of vertices in a graph such that there is no edge between any two vertices in the set , is one of the basic np - hard optimization problems and has been well studied in the literature , in particular in the line of research on worst - case analysis of algorithms for np - hard optimization problems . in 1977 ,",
    "tarjan and trojanowski  @xcite published the first algorithm for this problem , which runs in @xmath8 time and polynomial space .",
    "later , the running time was improved to @xmath9 by jian  @xcite .",
    "robson  @xcite obtained an @xmath10-time polynomial - space algorithm and an @xmath11-time exponential - space algorithm . in a technical report",
    "@xcite , robson also claimed better running times .",
    "recently , fomin et al .",
    "@xcite got a simple @xmath12-time polynomial - space algorithm by using the  measure and conquer \" method .",
    "there is also a considerable amount of contributions to the maximum independent set problem in sparse graphs , especially in degree-@xmath2 graphs  @xcite,@xcite,@xcite,@xcite .",
    "we summarize the results on low - degree graphs as well as general graphs in table  [ table1 ] .",
    "[ table1 ]    .exact algorithms for the maximum independent set problem [ cols=\"<,<,<,<\",options=\"header \" , ]     in the literature , there are several methods of designing algorithms for finding maximum independent sets in graphs .",
    "one method is to find a minimum vertex cover ( a set of vertices such that each edge in the graph has at least one endpoint in the set ) , and then to get a maximum independent set by taking all the remaining vertices , such as the algorithms presented in  @xcite,@xcite . in this kind of algorithms ,",
    "the dominating part of the running time is the running time for finding a minimum vertex cover .",
    "another method is based on the search tree method .",
    "we will use a branch - and - reduce paradigm .",
    "we choose a parameter , such as the number of vertices or edges or others , as a measure of the size of the problem .",
    "when the parameter is zero or a negative number , the problem can be solved in polynomial time .",
    "we branch on the current graph @xmath13 into serval graphs @xmath14 , @xmath15 , @xmath16 such that the parameter @xmath17 of graph @xmath18 is less than the parameter @xmath19 of graph @xmath13 ( @xmath20 ) , and a maximum independent set in @xmath13 can be found in polynomial time if a maximum independent set in each of the @xmath21 graphs @xmath14 , @xmath15 , @xmath16 is known . by this method",
    ", we can build up a search tree , and the exponential part of the running time of the algorithm is corresponding to the size of the search tree .",
    "the running time analysis leads to a linear recurrence for each node in the search tree that can be solved by using standard techniques .",
    "let @xmath22 denote the worst - case size of the search tree when the parameter of graph @xmath13 is @xmath19 , then we get recurrence relation @xmath23 . solving the recurrence",
    ", we get @xmath24^r$ ] , where @xmath25 is the largest root of the function @xmath26 . as for the measure ( the parameter @xmath19 )",
    ", a natural one is the number of vertices or edges in the graph .",
    "most previous algorithms for the maximum independent set problem are analyzed by using the number of vertices as a measure  @xcite,@xcite,@xcite,@xcite .",
    "the number of edges is considered in beigel s algorithm  @xcite .",
    "there are also some other measures .",
    "xiao et al .",
    "@xcite used the number of degree-@xmath2 vertices as a measure to analyze algorithms and got an @xmath27-time algorithm for mis in degree-@xmath2 graphs . unfortunately , that paper was published in chinese .",
    "recently , razgon  @xcite also got an @xmath27-time algorithm for mis in degree-@xmath2 graphs by measuring the number of degree-@xmath2 vertices .",
    "but the two algorithms are totally different .",
    "frer  @xcite designed an algorithm for mis in degree-@xmath2 graphs by tackling @xmath28 , where @xmath29 is the number of edges and @xmath1 the number of vertices . based upon a refined branching with respect to frer s algorithm , bourgeois et al .",
    "@xcite got the current best algorithm for mis in degree-@xmath2 graphs with running time @xmath3 . in this paper",
    ", we still use the number of degree-@xmath2 vertices as a measure to analyze our algorithm . based on two new branching rules , _ branching on a bottle _ and _ branching on a @xmath7-cycle _ , we design an even faster algorithm for mis in degree-@xmath2 graphs , which runs in @xmath0 time .",
    "our algorithm is simple and does not contain many branching rules . furthermore , it can be used to solve the _",
    "@xmath5-vertex cover _ problem ( to decide if the graph has a vertex cover of size @xmath5 ) in degree-@xmath2 graphs in @xmath4 time , which improves the previously known result of @xmath6 by chen et al .",
    "we shall try to be consistent in using the following notation .",
    "the number of vertices in a graph will be denoted by @xmath1 and the number of degree-@xmath2 vertices ( vertices of degree @xmath30 will also be counted with a weight ) by @xmath19 . for a vertex @xmath31 in a graph",
    ", @xmath32 is the degree of @xmath31 , @xmath33 the set of all neighbors of @xmath31 , @xmath34=n(v)\\cup\\{v\\}$ ] the set of vertices with distance at most @xmath35 from @xmath31 , and @xmath36 the set of vertices with distance exactly @xmath37 from @xmath31 .",
    "we say edge @xmath38 is incident on a vertex set @xmath39 , if at least one endpoint of @xmath38 is in @xmath39 . in our algorithm , when we remove a set of vertices , we also remove all the edges that are incident on it . throughout the paper we use a modified @xmath40 notation that suppresses all polynomially bounded factors . for two functions @xmath41 and @xmath42 , we write @xmath43 if @xmath44 , where @xmath45 is a polynomial .",
    "our algorithms are based on the branch - and - reduce paradigm .",
    "we will first apply some reduction rules to reduce the size of instances of the problem .",
    "then we apply some branching rules to branch on the graph by including some vertices in the independent set or excluding some vertices from the independent set . in each branch",
    ", we will get a maximum independent set problem in a graph with a smaller measure .",
    "next , we introduce the reduction rules and branching rules that will be used in our algorithms .",
    "there are several standard preprocesses to reduce the size of instances of the problem . _ folding a degree-@xmath35 or degree-@xmath37 vertex _ and _ removing a dominated vertex _",
    "are frequently used rules . besides these reduction rules",
    ", we still need to reduce some other local structures called _",
    "@xmath37-@xmath2 structure _ , _",
    "@xmath2-@xmath2 structure _ and _",
    "@xmath2-@xmath7 structure_.    * folding a degree-1 vertex * + _ folding a degree-1 vertex @xmath31 means removing @xmath31 and @xmath46 from the graph , where @xmath46 is the unique neighbor of @xmath31 . _    * folding a degree-2 vertex * + _ folding a degree-@xmath37 vertex @xmath31 ( with two neighbors @xmath46 and @xmath47 ) means + @xmath48 removing @xmath31 , @xmath46 and @xmath47 from the graph , when @xmath46 and @xmath47 are adjacent .",
    "+ @xmath49 removing @xmath31 , @xmath46 and @xmath47 from the graph and introducing a new vertex @xmath50 that is adjacent to all neighbors of @xmath46 and @xmath47 in @xmath13 @xmath51except the removed vertex @xmath52 , when @xmath46 and @xmath47 are nonadjacent .",
    "_    please refer to for an illustration of the operation in case @xmath49 of folding a degree-@xmath37 vertex .",
    "let @xmath53 denote the size of a maximum independent set of graph @xmath13 and @xmath54 the graph after folding a degree-@xmath35 or degree-@xmath37 vertex @xmath31 .",
    "then we have the following lemma .    the correctness of folding a degree-@xmath35 or degree-@xmath37 vertex has been discussed in many pervious papers .",
    "in fact , general folding rules are known in the literature , which can deal with a vertex of degree @xmath55 or a set of independent vertices  @xcite,@xcite . in this paper",
    ", we still need to fold the following three local structures called @xmath37-@xmath2 structure , @xmath2-@xmath2 structure and @xmath2-@xmath7 structure .",
    "let @xmath46 and @xmath31 be two independent degree-@xmath2 vertices , if they have three common neighbors @xmath56 and @xmath57 , then we say that the five vertices compose a _",
    "@xmath37-@xmath2 structure _ ( see ) , and denote it by @xmath58-@xmath59 .",
    "let @xmath31 be a degree-@xmath2 vertex , and @xmath46 and @xmath47 two adjacent vertices of degree @xmath55 .",
    "if @xmath60 , then we say that the six vertices @xmath61 compose a",
    "_ @xmath2-@xmath2 structure _ ( see ) , and denote it by @xmath62-@xmath59 .",
    "let @xmath63 and @xmath47 be three independent vertices of degree @xmath55 , if they have exact four neighbors @xmath64 and @xmath65 , then we say that the seven vertices compose a _ @xmath2-@xmath7 structure _ , and denote it by @xmath66-@xmath67 .",
    "* folding a @xmath37-@xmath2 structure , @xmath2-@xmath2 structure or @xmath2-@xmath7 structure * + _ let @xmath68-@xmath69 be a @xmath37-@xmath2 structure or @xmath2-@xmath2 structure or @xmath2-@xmath7 structure .",
    "folding @xmath68-@xmath69 means + @xmath48 removing @xmath70 from the graph , when @xmath69 is not an independent set .",
    "+ @xmath49 removing @xmath70 from the graph and introducing a new vertex @xmath50 that is adjacent to all neighbors of vertices in @xmath69 @xmath51except the removed vertices@xmath71 , when @xmath69 is an independent set .",
    "_    a degree-@xmath37 vertex can be regarded as a @xmath35-@xmath37 structure according to our definitions .",
    "in fact , a degree-@xmath37 vertex , @xmath37-@xmath2 structure and @xmath2-@xmath7 structure are special cases described in lemma @xmath72 in @xcite .",
    "the @xmath2-@xmath2 structure is for the first time being introduced .",
    "the correctness of folding an @xmath68-@xmath69 structure ( a @xmath35-@xmath37 structure , @xmath37-@xmath2 structure , @xmath2-@xmath2 structure or @xmath2-@xmath7 structure ) follows from this observation : when @xmath69 is not an independent set , there is a maximum independent set that contains @xmath68 ( or two independent vertices in @xmath68 , when @xmath68-@xmath69 is a @xmath2-@xmath2 structure ) .",
    "when @xmath69 is an independent set , there is a maximum independent set that contains either @xmath69 or @xmath68 ( or two independent vertices in @xmath68 , when @xmath68-@xmath69 is a @xmath2-@xmath2 structure ) .",
    "we ignore the detailed proof here .",
    "* dominance * + _ if there are two vertices @xmath31 and @xmath46 such that @xmath73\\subseteq n[v]$ ] , we say @xmath46 dominates @xmath31 .",
    "_      next we introduce two branching techniques , _ branching on a bottle _ and _ branching on a @xmath7-cycle _ , which are simple and obvious , but can avoid tedious branching rules in the description of the algorithms .",
    "let @xmath74 be a degree-@xmath2 vertex , and @xmath75 the three neighbors of @xmath74 .",
    "if two neighbors of @xmath74 , say @xmath57 and @xmath65 , are adjacent , then we say that the four vertices compose a _ bottle _ and denote it by @xmath76-@xmath74-@xmath77 .    based on , we get the following branching rule .    *",
    "branching on a bottle * + _ branching on a bottle @xmath76-@xmath74-@xmath77 means branching by either including @xmath74 in the independent set or including @xmath76 in the independent set .",
    "_    * note .",
    "* in fact , we can fold a bottle by using the general folding rule mentioned in  @xcite ( also in  @xcite ) , but this folding rule is helpless for our analysis , especially when the three neighbors of the degree-@xmath2 vertex are high - degree vertices .",
    "let @xmath64 and @xmath65 be four vertices in graph @xmath13 , if @xmath13 has four edges @xmath78 , @xmath79 , @xmath80 and @xmath81 , then we say that @xmath82 is a _",
    "@xmath7-cycle _ in @xmath13 .    based on",
    ", we get the following branching rule .    *",
    "branching on a @xmath7-cycle * + _ branching on a @xmath7-cycle @xmath82 means branching by either excluding @xmath74 and @xmath57 from the independent set or excluding @xmath76 and @xmath65 from the independent set . _",
    "our algorithm for the maximum independent set problem is described in figure  [ mis3 ] .",
    "it works as follows .",
    "if the graph has a component of at most @xmath83 vertices , we find a maximum independent set in this component directly ( * step  @xmath35 * ) .",
    "if the graph has a degree-@xmath35 or degree-@xmath37 vertex , we fold it in * step  @xmath37*. if the graph has a dominated vertex , we remove it in * step  @xmath2*. if the graph has a @xmath37-@xmath2 structure or @xmath2-@xmath2 structure or @xmath2-@xmath7 structure , we fold it in * step  @xmath7 * and * step  @xmath84*. when the graph can not be reduced , we apply our branching rules .",
    "if there is a bottle , we branch on a bottle ( * step  @xmath85 * ) .",
    "else if there is a @xmath7-cycle , we branch on a @xmath7-cycle ( * step  @xmath86 * ) .",
    "else in * step  @xmath87 * , we greedily select a vertex of maximum degree and branch on it by including it in the independent set or excluding it from the independent set .",
    "to analyze the time complexity of our algorithm , we will consider recurrence relations related to parameter @xmath19 , the number of degree-@xmath2 vertices ( vertices of degree @xmath30 will also be counted with a weight ) in the corresponding graph .",
    "when @xmath89 , the graph has only degree-@xmath90 , degree-@xmath35 and degree-@xmath37 vertices and the maximum independent set problem can be solved in linear time .",
    "we use @xmath22 to denote the worst - case size of the search tree in our algorithm when the parameter of the graph is @xmath19 . in our algorithm",
    ", it is possible to create a vertex of degree @xmath30 when folding .",
    "we will regard a degree-@xmath65 ( @xmath91 ) vertex as a combination of @xmath92 degree-@xmath2 vertices and count @xmath92 in parameter @xmath19 .",
    "then when a degree-@xmath65 vertex is removed , parameter @xmath19 will be reduced by @xmath92 . when an edge incident on a degree-@xmath65 vertex is removed , parameter @xmath19 will be reduced by @xmath35 . in the remaining of the paper , when we say a graph has @xmath93 degree-@xmath2 vertices",
    ", it does not mean that the graph really has exactly @xmath93 vertices of degree @xmath2 .",
    "in fact , all the vertices of degree @xmath55 are counted .",
    "next , we analyze how much @xmath19 can be reduced in each step of our algorithm .    among all the cases in our algorithm , the worst running time corresponds to recurrence relation . since @xmath94 satisfies , we get",
    "given a graph @xmath13 and a parameter @xmath5 , the _",
    "@xmath5-vertex cover _ problem is to decide if @xmath13 has a vertex cover of size at most @xmath5 .",
    "the @xmath5-vertex cover problem is one of the most extensively studied problems in the area of parameterized algorithms . in this section ,",
    "we show that the @xmath5-vertex cover problem can be solved in @xmath4 time , which improves the previously known result of @xmath6 by chen _",
    "_  @xcite .",
    "nemhauser and trotter  @xcite proved the following theorem :    our simple algorithm works as follows .",
    "given an instance @xmath95 of the @xmath5-vertex cover problem in degree-@xmath2 graphs , we first use nemhauser and trotter s algorithm to construct @xmath96 and @xmath97 .",
    "if @xmath98 , then @xmath13 does not have a vertex cover of size at most @xmath5 .",
    "else we use our algorithm presented in section  [ alg ] to find a maximum independent set @xmath99 in @xmath100 in @xmath101 time .",
    "then @xmath102 is a minimum vertex cover of @xmath13 . if @xmath103 , then @xmath13 does not have a vertex cover of size at most @xmath5 .",
    "else @xmath102 is satisfied vertex cover .",
    "in this paper , we have presented a simple @xmath0-time algorithm for the minimum independent set problem in degree-@xmath2 graphs and a simple @xmath4-time algorithm for the @xmath5-vertex cover problem in degree-@xmath2 graphs .",
    "both algorithms improve previously known algorithms .    unlike most previous algorithms ,",
    "our algorithms do not contain many branching rules .",
    "we use two new branching techniques , called branching on a bottle and branching on a @xmath7-cycle , to avoid tedious examinations of the local structures .",
    "in fact , new branching rules catch the structural properties of small cycles in graphs , which make our algorithms simple and practical .",
    "it is easy to see that many previous algorithms can apply these two new branching rules to simplify the description and analysis .",
    "our algorithm for the maximum independent set problem is analyzed by measuring the number of degree-@xmath2 vertices .",
    "we have checked that our algorithm @xmath104 can also be analyzed by measuring parameter @xmath105 to get the same running time bound , where @xmath29 is the number of edges , @xmath1 the number of vertices , and @xmath106 the number of tree components in the graph .",
    "readers may note that the algorithms presented by frer  @xcite and bourgeois _ et al . _",
    "@xcite are analyzed by measuring @xmath28 .",
    "in fact , their algorithms also need to consider the tree components created in the graphs and they have a separate section to analyze them .",
    "we guess that considering the tree components in the parameter may lead to a clearer analysis .",
    "chen , j. , kanj , i.a .",
    ", xia , g. : labeled search trees and amortized analysis : improved upper bounds for np - hard problems .",
    "algorithmica * 43*(4 ) ( 2005 ) 245273 a preliminary version appeared in isaac 2003 .",
    "bourgeois , n. , escoffier , b. , paschos , v.t .",
    ": an @xmath110 exact algorithm for max independe6nt set in sparse graphs . in grohe , m. , niedermeier , r. ,",
    "volume 5018 of lecture notes in computer science . , springer ( 2008 ) 5565      frer , m. : a faster algorithm for finding maximum independent sets in sparse graphs . in correa , j.r .",
    ", hevia , a. , kiwi , m.a .",
    "volume 3887 of lecture notes in computer science . , springer ( 2006 ) 491501    razgon , i. : a faster solving of the maximum independent set problem for graphs with maximal degree 3 . in broersma , h. , dantchev , s.s . , 0002 , m.j .",
    ", szeider , s. , eds . : acid .",
    "volume  7 of texts in algorithmics .",
    ", king s college , london ( 2006 ) 131142"
  ],
  "abstract_text": [
    "<S> we present an @xmath0-time algorithm for finding a maximum independent set in an @xmath1-vertex graph with degree bounded by @xmath2 , which improves the previously known algorithm of running time @xmath3 by bourgeois , escoffier and paschos [ iwpec 2008 ] . </S>",
    "<S> we also present an @xmath4-time algorithm to decide if a graph with degree bounded by @xmath2 has a vertex cover of size @xmath5 , which improves the previously known algorithm of running time @xmath6 by chen , kanj and xia [ isaac 2003 ] .    </S>",
    "<S> two new branching techniques , _ branching on a bottle _ and _ branching on a @xmath7-cycle _ , are introduced , which help us to design simple and fast algorithms for the maximum independent set and minimum vertex cover problems and avoid tedious branching rules .    </S>",
    "<S> * key words . </S>",
    "<S> *  graph algorithm , independent set , vertex cover , sparse graph </S>"
  ]
}
{
  "article_text": [
    "the calculation of the distribution of eigenvalues of very large matrices is a central problem in quantum physics .",
    "this distribution determines the thermodynamic properties of the system ( see below ) .",
    "it is directly related to the single - particle density of states ( dos ) or green s function . in a one - particle",
    "( e.g. , one - electron ) description knowledge of the dos suffices to compute the transport properties  @xcite .",
    "the most direct method to compute the dos , i.e. all the eigenvalues , is to diagonalize the matrix @xmath1 representing the hamiltonian of the system .",
    "this approach has two obvious limitations : the number of operations increases as the third power of the dimension @xmath2 of @xmath1 and , perhaps most importantly , the amount of memory required by state - of - the - art algorithms grows as @xmath3  @xcite .",
    "this scaling behavior limits the application of this approach to matrices of dimension @xmath4 , which is too small for many problems of interest .",
    "what is needed are methods that scale linearly with @xmath2 .",
    "there has been considerable interest in developing `` fast '' ( i.e. @xmath5 ) algorithms to compute the dos and other similar quantities .",
    "one such algorithm and an application of it to electron motion in disordered alloy models was given by alben et al .",
    "@xcite . in this approach",
    "the dos is obtained by solving the time - dependent schrdinger equation ( tdse ) of a particle moving on a lattice , followed by a fourier transform of the retarded green s function  @xcite .",
    "using the unconditionally stable split - step fast fourier transform ( fft ) method to solve the tdse , it was shown that the eigenvalue spectrum of a particle moving in continuum space can be computed in the same manner  @xcite .",
    "fast algorithms of this kind proved useful to study various aspects of localization of waves  @xcite and other one - particle problems  @xcite .",
    "application of these ideas to quantum many - body systems triggered further development of flexible and efficient methods to solve the tdse . based on suzuki s product formula approach ,",
    "an unconditionally stable algorithm was developed and used to compute the time - evolution of two - dimensional s=1/2 heisenberg - like models  @xcite .",
    "results for the dos of matrices of dimension @xmath6 where reported  @xcite",
    ". a potentially interesting feature of these fast algorithms is that they may run very efficiently on a quantum computer  @xcite .",
    "a common feature of these fast algorithms is that they solve the tdse for a sample of randomly chosen initial states . the efficiency of this approach as a whole relies on the hypothesis ( suggested by the central limit theorem ) that satisfactory accuracy can be achieved by using a small sample of initial states .",
    "experience not only shows that this hypothesis is correct , it strongly suggests that for a fixed sample size the statistical error on physical quantities such as the energy and specific heat decreases with the dimension @xmath2 of the hilbert space  @xcite .    in view of the general applicability of these fast algorithms to a wide variety of quantum problems",
    "it seems warranted to analyze in detail their properties and the peculiar @xmath2 dependence in particular . in sections  [ sec : theory ] and  [ sec : realtime ] we recapitulate the essence of the approach .",
    "we present a rigorous estimate for the mean square error ( variance ) on the trace of a matrix . in section  [ sec : imagtime ] we describe the imaginary - time version of the method .",
    "the statistical analysis of the numerical data is discussed in section  [ sec : errors ] .",
    "section  [ sec : exact ] describes the model systems that are used in our numerical experiments .",
    "the algorithm used to solve the tdse is reviewed in section  [ sec : timestep ] . in section  [ sec : bounds ] we derive rigorous bounds on the accuracy with which all eigenvalues can be determined and demonstrate that this accuracy decreases linearly with the time over which the tdse is solved .",
    "the results of our numerical calculations are presented in section  [ sec : results ] and our conclusions are given in section  [ sec : conclusions ] .",
    "the trace of a matrix @xmath7 acting on a @xmath2-dimensional hilbert - space spanned by an orthonormal set of states @xmath8 is given by @xmath9 note that according to  ( [ eq : trdef ] ) we have @xmath10 .",
    "if @xmath2 is very large one might think of approximating eq .",
    "( [ eq : trdef ] ) by sampling over a subset of @xmath11 ( @xmath12)``important '' basis vectors .",
    "the problem with this approach is that the notion `` important '' may be very model - dependent .",
    "therefore it is better to sample in a different manner .",
    "we construct a random vector @xmath13 by choosing @xmath2 complex random numbers , @xmath14 , with mean @xmath15 , for @xmath16 , so @xmath17 and calculate @xmath18 if we now sample over @xmath19 realizations of the random vectors @xmath20 and calculate the average , we obtain @xmath21 assuming that there is no correlation between the random numbers in different realizations and that the random numbers @xmath22 and @xmath23 are drawn from an even and symmetric ( both with respect to each variable ) probability distribution ( see appendix  [ app : expect ] for more details ) , we have @xmath24 where @xmath25 denotes the expectation value with respect to the probability distribution used to generate the @xmath26 s . in the r.h.s of  ( [ eq : diaglimit ] ) the subscripts of @xmath26",
    "have been dropped to indicate that the expectation value does not depend on @xmath27 or @xmath28 .",
    "it follows immediately that @xmath29 showing that we can compute the trace of @xmath30 by sampling over random states @xmath31 , provided there is an efficient algorithm to calculate @xmath32 ( see section  [ sec : timestep ] ) .    according to the central limit theorem , for a large but finite @xmath33",
    "we have @xmath34 meaning that the statistical error on the trace vanishes like @xmath35 , which is not surprising .",
    "what is surprising is that one can prove a much stronger result as follows .",
    "let us first normalize the @xmath26 s so that , for all @xmath28 , @xmath36 this innocent looking step has far reaching consequences . first we note that the normalization renders the method exact in ( the rather trivial ) case that the matrix @xmath30 is proportional to the unit matrix .",
    "the price we pay for this is that for fixed @xmath28 , the @xmath26 are now correlated but that does not cause problems ( see appendix  [ app : expect ] ) .",
    "second it follows that @xmath37 .",
    "obviously the error can be written as @xmath38 where @xmath39 is a traceless ( due to eq .",
    "( [ eq : annorm ] ) ) hermitian matrix of random numbers .",
    "we put @xmath40 and compute @xmath41 . the result for the general case can be found in appendix  [ app : expect ] . for a uniform distribution of the @xmath26 s on the hyper - sphere defined by @xmath42 the expression simplifies considerably and we find @xmath43 an exact expression for the variance in terms of the sample size @xmath19 , the dimension @xmath2 of the matrix @xmath30 and the ( unknown ) constants @xmath44 and @xmath45 .    invoking a generalization of markov s inequality  @xcite @xmath46 where @xmath47 denotes the probability for the statement @xmath48 to be true .",
    "we find that the probability that @xmath49 exceeds a fraction @xmath50 of @xmath51 is bounded by @xmath52 or , in other words , the relative statistical error @xmath53 on the estimator of the trace of @xmath30 is given by @xmath54 if @xmath55 .",
    "we see that @xmath56 if @xmath30 is proportional to a unit matrix . from  ( [ eq : eadef ] )",
    "it follows that , in general , we may expect @xmath53 to vanish with the square root of @xmath57 .",
    "the prefactor is a measure for the relative spread of the eigenvalues of @xmath30 and is obviously model dependent .",
    "the dependence of @xmath53 on @xmath19 , @xmath2 and the spectrum of @xmath30 is corroborated by the numerical results presented below .",
    "it is also of interest to examine the effect of _ not _ normalizing the @xmath26 s .",
    "a calculation similar to the one that lead to the above results yields @xmath58 clearly this bound is less sharp and does not vanish if @xmath30 is proportional to a unit matrix .",
    "the distribution of eigenvalues or density of states ( dos ) of a quantum system is defined as @xmath59 where @xmath1 is the hamiltonian of the system and @xmath27 runs over all the eigenvalues of @xmath1 .",
    "the dos contains all the physical information about the equilibrium properties of the system .",
    "for instance the partition function , the energy , and the heat capacity are given by @xmath60 respectively . here",
    "@xmath61 and @xmath62 is boltzmann s constant ( we put @xmath63 and @xmath64 from now on ) .    as explained above the trace in the integral  ( [ eq : dos ] )",
    "can be estimated by sampling over random vectors .",
    "for the statistical error analysis discussed below it is convenient to define a dos - per - sample by @xmath65 where the subscript @xmath28 labels the particular realization of the random state @xmath66 .",
    "the dos is then given by @xmath67    schematically the algorithm to compute @xmath68 consists of the following steps :    1 .",
    "generate a random state @xmath69 , set @xmath70 .",
    "2 .   copy this state to @xmath71 .",
    "3 .   calculate @xmath72 and store the result .",
    "4 .   solve the tdse for a small time step @xmath73 , replacing @xmath71 by @xmath74 ( see section  [ sec : timestep ] for model specific details ) .",
    "repeat @xmath75 times from step 3",
    "perform a fourier transform on the tabulated result and store @xmath68 .    in practice",
    "the fourier transform in eq .",
    "( [ eq : dos ] ) is performed by the fast fourier transform ( fft ) .",
    "we use a gaussian window to account for the finite time @xmath76 used in the numerical time - integration of the tdse .",
    "the number of time step @xmath75 determines the accuracy with which the eigenvalues can be computed . in section  [ sec : bounds ] we prove that this systematic error in the eigenvalues vanishes as @xmath77 .    since for any reasonable physical system ( or finite matrix ) the smallest eigenvalue @xmath78 is finite , for all practical purposes @xmath79 for @xmath80 .",
    "the value of @xmath81 is easily determined by examination of the bottom of spectrum . to compute @xmath82 , @xmath83 , or @xmath84 we simply replace the interval @xmath85 $ ] by @xmath86 $ ] .",
    "the real - time approach has the advantage that it yields information on all eigenvalues and can be used to compute both dynamic and static properties without suffering from numerical instabilities .",
    "however for the computation of the thermodynamic properties , the imaginary - time version is more efficient .",
    "we will use the imaginary - time method as an independent check on the results obtained by the real - time algorithm .    repeating the steps that lead to eq .",
    "( [ eq : z ] ) we find @xmath87 with similar expressions for @xmath83 and @xmath84 .",
    "furthermore we have @xmath88 assuming @xmath1 is hermitian .",
    "therefore we only need to propagate the random state for an imaginary time @xmath89 instead of @xmath90 .",
    "furthermore we do not need to perform an fft . disregarding these minor differences ,",
    "the algorithm is the same as in the real - time case with @xmath73 replaced by @xmath91 .",
    "estimating the statistical error on the partition function @xmath82 is easy because it depends linearly on the trace of the ( imaginary ) time evolution operator .",
    "however the error on @xmath83 and @xmath84 depends on this trace in a more complicated manner and this fact has to be taken into account .",
    "first we define @xmath92 for the real - time method and @xmath93 for the imaginary - time method .    for each value of @xmath90",
    "we generate the data @xmath94 , @xmath95 , and @xmath96 , for @xmath97 .",
    "for both cases we have @xmath98 where @xmath99 .",
    "the standard deviations on @xmath100 , @xmath101 , and @xmath102 are given by @xmath103 where @xmath104 denotes the variance on the data @xmath105 .",
    "however the sets of data @xmath94 , @xmath95 and @xmath96 are correlated since they are calculated from the same set @xmath106 .",
    "these correlations in the data are accounted for by calculating the covariance matrix @xmath107 ( @xmath108 ) the elements of which are given by @xmath109 , where @xmath110 , @xmath111 , and @xmath112 are a shorthand for @xmath94 , @xmath95 , and @xmath96 respectively .",
    "the estimates for the errors in @xmath82 , @xmath83 and @xmath84 are given by @xmath113 where @xmath114 and and @xmath115 .",
    "the most direct way to assess the validity of the approach described above is to carry out numerical experiments on exactly solvable models . in this paper",
    "we consider three different exactly solvable models , two spin-1/2 chains and a mean - field spin-1/2 model .",
    "the former have a complicated spectrum , the latter has a highly degenerate eigenvalue distribution .",
    "these spin models differ from those studied elsewhere  @xcite in that they belong to the class of integrable systems .",
    "open spin chains of @xmath117 sites described by the hamiltonian @xmath118 where @xmath119 , @xmath120 , and @xmath121 denote the pauli matrices and @xmath122 , @xmath123 and @xmath124 are model parameters , can be solved exactly .",
    "they can be reduced to diagonal form by means of the jordan - wigner transformation  @xcite .",
    "we have @xmath125 + h l,\\end{aligned}\\ ] ] where @xmath126 and @xmath127 are spin - less fermion operators and @xmath128 are @xmath129 matrices . by further canonical transformation",
    "this hamiltonian can be written as @xmath130 where @xmath131 is the number operator of state @xmath132 and the @xmath133 s are given by the solution of the eigenvalue equation @xmath134 in the general case this eigenvalue problem of the @xmath129 hermitian matrix @xmath135 is most easily solved numerically . in the present paper",
    "we confine ourselves to two limiting cases : the xy model ( @xmath136 ) and the ising model in a transverse field ( @xmath137 ) .",
    "the hamiltonian of the mean - field model reads @xmath138 and can be rewritten as @xmath139 with @xmath140 the single spin-@xmath141 hamiltonian has eigenvalues @xmath142 with degeneracy @xmath143 this rather trivial model serves as a test for the case of highly degenerate eigenvalues .",
    "for the approach outlined in sections  [ sec : realtime ] and  [ sec : imagtime ] to be of practical use it is necessary that the matrix elements of the exponential of @xmath1 can be calculated efficiently .",
    "the purpose of this section is to describe how this can be done .",
    "the general form of the hamiltonians of the models we study is @xmath144 where the first sum runs over all pairs @xmath145 of spins , @xmath146 ( @xmath147 ) denotes the @xmath148-th component of the spin-1/2 operator representing the @xmath149-th spin . for both methods",
    ", we have to calculate the evolution of a random state , i.e. @xmath150 or @xmath151 for the real and imaginary time method respectively .",
    "we will discuss the real - time case only , the imaginary - time problem can be solved in the same manner .    using the semi - group property @xmath152 we can write @xmath153 where @xmath154",
    ". then the main step is to replace @xmath155 by a symmetrized product - formula approximation  @xcite . for the case at hand",
    "it is expedient to take @xmath156 where @xmath157 other decompositions  @xcite work equally well but are somewhat less efficient for the cases at hand . in the real - time approach @xmath158 is unitary and hence the method is unconditionally stable  @xcite ( also the imaginary - time method can be made unconditionally stable ) .",
    "it can be shown that @xmath159 ( @xmath160 a constant )  @xcite , implying that the algorithm is correct to second order in the time step @xmath73  @xcite .",
    "usually it is not difficult to choose @xmath73 so small that for all practical purposes the results obtained can be considered as being `` exact '' .",
    "moreover , if necessary , @xmath158 can be used as a building block to construct higher - order algorithms  @xcite . in appendix",
    "[ app : bounds ] we will derive bounds on the error in the eigenvalues when they are calculated using a symmetric product formula .    as basis states @xmath161 we take the direct product of the eigenvectors of the @xmath162 ( i.e. spin - up @xmath163 and spin - down @xmath164 ) .",
    "in this basis , @xmath165 changes the input state by altering the phase of each of the basis vectors .",
    "as @xmath166 is a sum of pair interactions it is trivial to rewrite this operation as a direct product of 4x4 diagonal matrices ( containing the interaction - controlled phase shifts ) and 4x4 unit matrices . still working in the same representation",
    ", the action of @xmath167 can be written in a similar manner but the matrices that contain the interaction - controlled phase - shift have to be replaced by non - diagonal matrices . although this does not present a real problem it is more efficient and systematic to proceed as follows .",
    "let us denote by @xmath168(@xmath169 ) the rotation by @xmath170 of each spin about the @xmath171(@xmath172)-axis .",
    "as @xmath173 it is clear that the action of @xmath167 can be computed by applying to each spin , the inverse of @xmath168 followed by an interaction - controlled phase - shift and @xmath168 itself .",
    "the prime in  ( [ last ] ) indicates that @xmath174 and @xmath175 in @xmath166 have to be replaced by @xmath176 and @xmath177 respectively .",
    "a similar procedure is used to compute the action of @xmath178 .",
    "we only have to replace @xmath168 by @xmath169 .",
    "first we consider the problem of how to choose the number of time steps @xmath75 to obtain the dos with acceptable accuracy .",
    "according to the nyquist sampling theorem employing a sampling interval @xmath179 is sufficient to cover the full range of eigenvalues . on the other hand",
    "the time step also determines the accuracy of the approximation @xmath158 .",
    "let us call the maximum value of @xmath73 which gives satisfactory accuracy @xmath180 ( for the imaginary - time method , this is the only parameter ) .",
    "for the examples treated here @xmath181 , implying that we have to use more steps to solve the tdse than we actually use to compute the fft .",
    "eigenvalues that differ less than @xmath182 can not be identified properly .",
    "however since @xmath183 we only have to extend the length of the calculation by a factor of two to increase the resolution by the same factor .    at first glance the above reasoning may seem to be a little optimistic .",
    "it apparently overlooks the fact that if we integrate the tdse over longer and longer times the error on the wave function also increases ( although it remains bounded because of the unconditional stability of the product formula algorithm ) .",
    "in fact it has been shown that in general  @xcite    @xmath184    where @xmath154 , suggesting that the loss in accuracy on the wave function may well compensate for the gain in resolution that we get by using more data in the fourier transform .",
    "fortunately this argument does not apply when we want to determine the eigenvalues as we now show . as before we will discuss the real - time algorithm only because the same reasoning ( but different mathematical proofs ) holds for the imaginary - time case .",
    "consider the time - step operator ( 52 ) .",
    "using the fact that any unitary matrix can be written as the matrix exponential of a hermitian matrix we can write    @xmath185    it is clear that in practice the real - time method yields the spectrum of @xmath186 , not the one of @xmath1 .",
    "therefore the relevant question is : how much do the spectra of @xmath186 and @xmath1 differ ? in appendix b we give a rigorous proof that the difference between the eigenvalues of @xmath186 and @xmath1 vanishes as @xmath187 . in other words",
    "the value of @xmath188 ( or @xmath154 ) has no effect whatsoever on the accuracy with which the spectrum can be determined .",
    "therefore the final conclusion is that the error in the eigenvalues vanishes as @xmath189 where @xmath75 is the number of data points used in the fourier transform of @xmath190 .",
    "in all our calculations we take @xmath191 and @xmath192 , except for the ising model in a transverse field , where we take @xmath193 . the random numbers @xmath26",
    "are generated such that the conditions eqs .",
    "( [ eq : cnreq1 ] ) and  ( [ eq : cnreq2 ] ) are satisfied .",
    "we use two different techniques to generate these random numbers :    1 .",
    "a uniform random number generator produces @xmath194 and @xmath195 with @xmath196 .",
    "we then normalize the vector ( see eq .",
    "( [ eq : annorm ] ) ) .",
    "the @xmath26 s are obtained from a two - variable ( real and imaginary part ) gaussian random number generator and the resulting vector is normalized .",
    "both methods satisfy the basic requirements eqs .",
    "( [ eq : cnreq1 ] ) and  ( [ eq : cnreq2 ] ) but because the first samples points out of a @xmath197-dimensional hypercube and subsequently projects the vector onto a sphere , the points are not distributed uniformly over the surface of the unit hyper - sphere .",
    "the second method is known to generate numbers which are distributed uniformly over the hyper - surface . although the first method does not satisfy all the mathematical conditions that lead to the error  ( [ eq : eadef ] ) , our numerical experiments with both generators give identical results , within statistical errors of course .",
    "also , within the statistical errors , the results from the imaginary and real - time algorithm are the same .",
    "therefore we only show some representative results as obtained from the real - time algorithm .    in fig .",
    "[ fig : dos ] we show a typical result for the dos @xmath198 of the xy model , the ising model in a transverse field and the mean - field model , all with @xmath199 spins and using @xmath200 samples . because of the very high degeneracy we plotted the dos for the mean - field model on a logarithmic scale .    in fig .",
    "[ fig : dzreal ] we show the relative error @xmath201 based on eq .",
    "( [ eq : dzdef ] ) for the three models of various size , as obtained from the simulation ( symbols ) . for these figures we used the imaginary - time algorithm , because then the statistical error can be related to @xmath53 directly ( see eq .",
    "( [ eq : eadef ] ) with @xmath202 ) . the theoretical results ( lines ) for the error estimate , obtained by a direct exact numerical evaluation of  ( [ eq : eadef ] )",
    "are shown too .",
    "we conclude that for all systems , lattice sizes and temperatures there is very good agreement between numerical experiment and theory .",
    "results for the energy @xmath83 and specific heat @xmath84 are presented in fig .",
    "[ fig : xyreal ] ( xy model ) , [ fig : isreal ] ( ising model in a transverse field ) , and [ fig : mfreal ] ( mean - field model ) .",
    "the solid lines represent the exact result for the case shown .",
    "simulation data as obtained from @xmath203 and @xmath200 samples are represented by symbols , the estimates of the statistical error by error bars .",
    "we see that the data are in excellent agreement with the exact results and equally important , the estimate for the error captures the deviation from the exact result very well .",
    "we also see that in general the error decreases with the system size .",
    "both the imaginary and real - time method seem to work very well , yielding accurate results for the energy and specific heat of quantum spin systems with modest amounts of computational effort .",
    "the theoretical analysis presented in this paper gives a solid justification of the remarkable efficiency of the real - time equation - of - motion method for computing the distribution of all eigenvalues of very large matrices .",
    "the real - time method can be used whenever the more conventional , lanczos - like , sparse - matrix techniques can be applied : memory and cpu requirements for each iteration ( time - step ) are roughly the same ( depending on the actual implementation ) for both approaches .    we do not recommend using the real - time method if one is interested in the smallest ( or largest ) eigenvalue only .",
    "then the lanczos method is computationally more efficient because it needs less iterations ( time - steps ) than the real - time approach .",
    "however if one needs information about all eigenvalues and direct diagonalization is not possible ( because of memory / cpu - time ) there is as yet no alternative to the real - time method .",
    "the matrices used in this example ( up to @xmath204 ) are not representative in this respect : the real - time method has been used to compute the distribution of eigenvalues for matrices of dimension @xmath205  @xcite .    once the eigenvalue distribution is known the thermodynamic quantities directly follow .",
    "however if one is interested in the accurate determination of the temperature dependence of thermodynamic ( and static correlation functions ) properties but not in the eigenvalue distribution itself , the imaginary - time method is by far the most efficient method to compute these quantities .",
    "for instance the calculation of the thermodynamic properties for @xmath206 of a 15-site spin-1/2 system ( i.e. implicitly solving the full @xmath204 eigenvalue problem ) takes 1410 seconds per sample on a mobile pentium iii 500 mhz system .",
    "finally we remark that although we used quantum - spin models to illustrate various aspects , there is nothing in the real or imaginary - time method that is specific to the models used .",
    "the only requirement for these methods to be useful in practice is that the matrix is sparse and ( very ) large .",
    "support from the dutch `` stichting nationale computer faciliteiten ( ncf ) '' and the dutch `` stichting voor fundamenteel onderzoek der materie ( fom ) '' is gratefully acknowledged .",
    "in this appendix we calculate the expectation value of the error squared , as defined in section  [ sec : theory ] . by definition",
    "we have @xmath207 where @xmath28 and @xmath208 label the realization of the random numbers @xmath209 .",
    "first we assume that different realizations @xmath210 are independent implying that @xmath211 second we assume that the random numbers are drawn from a probability distribution that is an even function of each variable @xmath212 and symmetric under interchange of any two variables @xmath213 for all @xmath214 .",
    "this is most easily done by drawing individual numbers from the same even probability distribution i.e. @xmath215 where @xmath216 . normalizing the vector @xmath217 such that @xmath218 ( for @xmath97 ) does not affect the basic requirements  ( [ eq : cnreq1 ] ) and  ( [ eq : cnreq2 ] ) .    making use of the above properties of @xmath219",
    "we find that @xmath220 where in the last equality we omitted the subscripts of @xmath221 to indicate that the expectation value does not depend on @xmath188 or @xmath28 .",
    "an expectation value of a product of two @xmath222 s and two @xmath223 s can be written as @xmath224 furthermore for @xmath225 we have @xmath226 by symmetry @xmath227 does not depend on @xmath188 , @xmath27 or @xmath28 and the same holds for @xmath228 .",
    "the fact that the vector @xmath229 is normalized yields the identities @xmath230 and @xmath231 where @xmath223 and @xmath232 refer to two different complex random variables .",
    "therefore we have @xmath233 and @xmath234 substitution into  ( [ eq : fourpoint ] ) yields @xmath235 and the final result for the variance reads @xmath236    an expression for the fourth moment @xmath237 can not be derived from general properties of the probability distribution or normalization of random vector .",
    "we can only make progress by specifying the former explicitly . as an example we take a probability distribution such that for each realization @xmath28 the random numbers @xmath22 and @xmath23 are distributed uniformly over the surface of a @xmath197-dimensional sphere of radius @xmath238 .",
    "this probability distribution can be written as @xmath239 where we omitted the subscript @xmath28 because it is irrelevant for what follows .",
    "the even moments of @xmath240 are defined by @xmath241 it is expedient to introduce an auxiliary integration variable @xmath168 by @xmath242 we can perform the integration over @xmath168 last and regard  ( [ eq : xmoment ] ) as the @xmath243-th moment of the variable @xmath168 with respect to the probability distribution @xmath244 the calculation of @xmath245 amounts to computing integrals of the form @xmath246 changing to spherical coordinates we have @xmath247 yielding @xmath248 the moments @xmath249 are given by @xmath250 and the values of interest to us are @xmath251 where the first two results provide some check on the procedure used .",
    "substituting  ( [ eq : isomoments ] ) into  ( [ eq : generalerror ] ) yields @xmath252",
    "here we prove that the difference between the eigenvalues of the hermitian matrix @xmath253 and those obtained from the approximate time - evolution @xmath254 ( @xmath255 ) is bounded by @xmath187 . in the following we assume",
    "@xmath30 and @xmath256 are hermitian matrices and take @xmath73 a real , non - negative number .",
    "we start with the imaginary - time case .",
    "we define the difference @xmath257 by @xmath258 e^{\\nu b }   \\nonumber   \\\\ & + e^{\\nu a/2 } [ a,[a , b ] ] e^{-\\nu a/2 } \\ } e^{\\lambda a/2 } e^{(\\tau-\\lambda ) ( a+b)},\\end{aligned}\\ ] ] a well - known result @xcite .",
    "we have  @xcite @xmath259 e^{\\nu b } e^{\\lambda a/2 } e^{(\\tau-\\lambda ) ( a+b ) } \\right|\\right| \\nonumber \\\\ & + \\frac{1}{4 } \\left|\\left| \\int_0^\\tau d \\lambda \\int_0^\\lambda d \\mu \\int_0^\\mu d \\nu e^{\\lambda a/2 } e^{\\lambda b } e^{\\nu a/2 } [ a,[a , b ] ] e^{(\\lambda-\\nu ) a/2 } e^{(\\tau-\\lambda ) ( a+b ) } \\right|\\right| \\nonumber \\\\ \\leq & \\frac{1}{4 }   \\int_0^{\\tau } d \\lambda \\int_0^\\lambda d \\mu \\int_0^\\mu d \\nu e^{\\lambda ||a||/2 } e^{(\\lambda-\\nu ) ||b|| } || [ 2 b,[a , b ] ] ||e^{\\nu ||b|| } e^{\\lambda ||a||/2 } e^{(\\tau-\\lambda ) ( ||a||+||b|| ) } \\nonumber \\\\ & + \\frac{1}{4 } \\int_0^{\\tau } d \\lambda \\int_0^\\lambda d \\mu \\int_0^\\mu d \\nu e^{\\lambda ||a||/2 } e^{\\lambda ||b|| } e^{\\nu ||a||/2 } ||[a,[a , b]]|| e^{(\\lambda-\\nu ) ||a||/2 } e^{(\\tau-\\lambda ) ( ||a||+||b|| ) } \\nonumber \\\\ & =    \\frac{1}{24 } \\tau^3 e^{\\tau ( ||a||+||b|| ) } \\left(||[a,[a , b]]||   + || [ 2 b,[a , b ] ] ||\\right),\\end{aligned}\\ ] ] and @xmath260 e^{\\nu b } e^{\\lambda a/2 } e^{(-\\tau-\\lambda ) ( a+b ) } \\right|\\right| \\nonumber \\\\ & + \\frac{1}{4 } \\left|\\left| \\int_0^{-\\tau } d",
    "\\lambda \\int_0^\\lambda d \\mu \\int_0^\\mu d \\nu e^{\\lambda a/2 } e^{\\lambda b } e^{\\nu a/2 } [ a,[a , b ] ] e^{(\\lambda-\\nu ) a/2 } e^{(-\\tau-\\lambda ) ( a+b ) } \\right|\\right| \\nonumber \\\\ = & \\frac{1}{4 } \\left|\\left| \\int_0^\\tau d \\lambda \\int_0^{\\lambda } d \\mu \\int_0^{\\mu } d \\nu e^{-\\lambda a/2 } e^{(-\\lambda+\\nu ) b }   [ 2 b,[a , b ] ] e^{-\\nu b } e^{-\\lambda a/2 } e^{(-\\tau+\\lambda ) ( a+b ) } \\right|\\right| \\nonumber \\\\ & + \\frac{1}{4 } \\left|\\left| \\int_0^\\tau d \\lambda \\int_0^{\\lambda } d \\mu \\int_0^{\\mu } d \\nu e^{-\\lambda a/2 } e^{-\\lambda b } e^{-\\nu a/2 } [ a,[a , b ] ] e^{(-\\lambda+\\nu ) a/2 } e^{(-\\tau+\\lambda ) ( a+b ) } \\right|\\right| \\nonumber \\\\ \\leq & \\frac{1}{4 }   \\int_0^{\\tau } d \\lambda \\int_0^\\lambda d \\mu \\int_0^\\mu d \\nu e^{\\lambda ||a||/2 } e^{(\\lambda-\\nu ) ||b|| } || [ 2 b,[a , b ] ] ||e^{\\nu ||b|| } e^{\\lambda ||a||/2 } e^{(\\tau-\\lambda ) ( ||a||+||b|| ) } \\nonumber \\\\ & + \\frac{1}{4 } \\int_0^{\\tau } d \\lambda \\int_0^\\lambda d \\mu \\int_0^\\mu d \\nu e^{\\lambda ||a||/2 } e^{\\lambda ||b|| } e^{\\nu ||a||/2 } ||[a,[a , b]]|| e^{(\\lambda-\\nu ) ||a||/2 } e^{(\\tau-\\lambda ) ( ||a||+||b|| ) } \\nonumber \\\\ = & \\frac{1}{24 } \\tau^3 e^{\\tau ( ||a||+||b|| ) } \\left(||[a,[a , b]]||   + || [ 2 b,[a , b ] ] ||\\right).\\end{aligned}\\ ] ] hence the bound in @xmath257 does not depend on the sign of @xmath73 so that we can write @xmath261 where @xmath262|| + || [ 2 b,[a , b ] ] ||.\\end{aligned}\\ ] ] for real @xmath73 we have @xmath263 where @xmath264 is hermitian .",
    "clearly we have @xmath265 we already have an upperbound on @xmath257 and now want to use this knowledge to put an upperbound on the difference in eigenvalues of @xmath264 and @xmath253 . in general , for two hermitian matrices @xmath266 and @xmath267 with eigenvalues @xmath268 and @xmath269 respectively , both sets sorted in non - decreasing order , we have  @xcite latexmath:[\\[\\begin{aligned }   \\label{eq : eigendiff }    eigenvalues of @xmath253 and @xmath264 by @xmath271 and @xmath272 respectively , combining eq .",
    "( [ eq : rnorm ] ) and  ( [ eq : eigendiff ] ) yields @xmath273 to find an upperbound on @xmath274 we first assume that @xmath275 and take @xmath276 .",
    "it follows from ( b9 ) that @xmath277 for @xmath278 , @xmath279 and we have @xmath280 .",
    "hence we find @xmath281 an upperbound on the difference in the eigenvalues between @xmath264 and @xmath253 can equally well be derived by considering the inverse of the exact and approximate time - evolution operator  ( [ eq : approx1 ] ) .",
    "this is useful for the case @xmath282 : instead of using ( b7 ) we start from @xmath283 ( @xmath276 ) .",
    "note that the set of eigenvalues of a matrix and its inverse are the same and that the matrices we are considering here , i.e. matrix exponentials , are nonsingular .",
    "making use of eq .",
    "( [ eq : rnorm ] ) for @xmath284 gives @xmath285 and proceeding as before we find @xmath286 putting the two cases together we finally have @xmath287 clearly ( b14 ) proves that the differences in the eigenvalues of @xmath253 and @xmath264 vanish as @xmath187 .",
    "we now consider the case of the real - time algorithm ( @xmath288 ) . for hermitian matrices",
    "@xmath30 and @xmath256 the matrix exponentials are unitary matrices and hence their norm equals one .",
    "this simplifies the derivation of the upperbound on @xmath289 .",
    "one finds  @xcite @xmath290 where @xmath291 denotes the euclidean norm of the matrix @xmath30  @xcite . in general the eigenvalues of a unitary matrix",
    "are complex valued and therefore the strategy adopted above to use the bound on @xmath257 to set a bound on the difference of the eigenvalues no longer works .",
    "instead we invoke the wielandt - hoffman theorem  @xcite :    _ if @xmath266 and @xmath267 are normal matrices with eigenvalues @xmath292 and @xmath293 respectively , then there exists a suitable rearrangement ( a permutation @xmath294 of the numbers @xmath295 ) of the eigenvalues so that @xmath296 _",
    "let @xmath266 and @xmath267 denote the exact and approximate real - time evolution operators respectively .",
    "the eigenvalues of @xmath253 and @xmath297 are @xmath271 and @xmath272 respectively .",
    "all the @xmath298 s and @xmath272 s are real numbers . according to the wielandt - hoffman theorem @xmath299 where @xmath300 , @xmath294 being the permutation such that inequality  ( [ eq : ineq1 ] ) is satisfied .",
    "we see that eq .",
    "( [ eq : ineq1 ] ) only depends on @xmath301 and @xmath302 , but so does the dos ( see eq .",
    "( [ eq : dos ] ) ) .",
    "since the inequality ( b17 ) and the dos only depend on these `` angles '' modulo @xmath303 , there is no loss of generality if we make the choice @xmath304 rewriting the sum in ( b17 ) we have @xmath305 as we have @xmath306 the restriction eq .",
    "( [ eq : diffrange ] ) allows us to write @xmath307 implying latexmath:[\\[\\begin{aligned }   \\label{eq : realbound }      finally we note that both upperbounds  ( [ eq : realbound ] ) and  ( [ eq : imagbound ] ) hold for arbitrary hermitian matrices @xmath30 and @xmath256 and are therefore rather weak . except for the fact that they provide a sound theoretical justification for the real and imaginary - time method , they are of little practical value ."
  ],
  "abstract_text": [
    "<S> a theoretical analysis is given of the equation of motion method , due to alben et al . </S>",
    "<S> , to compute the eigenvalue distribution ( density of states ) of very large matrices . </S>",
    "<S> the salient feature of this method is that for matrices of the kind encountered in quantum physics the memory and cpu requirements of this method scale linearly with the dimension of the matrix . </S>",
    "<S> we derive a rigorous estimate of the statistical error , supporting earlier observations that the computational efficiency of this approach increases with matrix size . </S>",
    "<S> we use this method and an imaginary - time version of it to compute the energy and the specific heat of three different , exactly solvable , spin-1/2 models and compare with the exact results to study the dependence of the statistical errors on sample and matrix size .    </S>",
    "<S> # 1#1 # 1 # 1 # 1#2 # 1 # 2 # 1@xmath0 # 1    # 1_#1 _ # 1 # 1e(#1 ) </S>"
  ]
}
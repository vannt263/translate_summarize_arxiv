{
  "article_text": [
    "this paper is motivated by the requirement for a poisson solver for cylindrical domains .",
    "such a solver is a basic element in solving a range of physical problems and accurate methods have been developed for cartesian  @xcite and cylindrical  @xcite domains .",
    "an issue which arises in solving the problem in a cylindrical coordinate system is the singularity which arises at the axis due to the form of the differential operator . a recent paper by pataki and greengard  @xcite introduces a green s function solver for the poisson equation , which avoids problems with this singularity , and automatically imposes a radiation boundary condition , by using an integral formulation for the solution .",
    "the method which pataki and greengard  @xcite develop is based on fourier transforms in the axial and azimuthal coordinate , followed by the solution of a modified bessel equation in the radial coordinate .",
    "they test the accuracy of their method on an axisymmetric problem with monotonic decay in radius , and show its application to an asymmetric problem .",
    "a problem which arises in their algorithm is that the integration technique used does not work well for large azimuthal orders , i.e.  meshes dense in angle , or for large axial wavenumbers , i.e.  meshes dense in the axial coordinate , due to the poor scaling of the modified bessel functions which appear in the green s function for the problem .",
    "this motivated an attempt to find a robust method for solving the modified bessel equation , which would work for large wavenumbers and azimuthal orders .",
    "the method developed , which is described in the rest of this paper , is based on the discrete hankel transform ( dht ) , tabulated integrals , and recursions for the modified bessel functions .",
    "the poisson equation in cylindrical coordinates is : @xmath0 where @xmath1 are cylindrical coordinates , @xmath2 is the solution and @xmath3 is some forcing term . with the problem defined on nodes regularly spaced in @xmath4 and @xmath5 , this equation can be solved  @xcite by using the fft to fourier transform @xmath2 and @xmath3 in @xmath4 and @xmath5 to yield a set of modified bessel equations : @xmath6 where @xmath7 is the azimuthal order and @xmath8 the axial wavenumber , with @xmath9 and @xmath10 the fourier transformed solution and forcing term respectively . after solving equation  [ equ : problem ] for each value of @xmath7 and @xmath8 ,",
    "@xmath11 can be inverse fourier transformed to yield the solution @xmath12 .",
    "pataki and greengard  @xcite give a method for solving this modified bessel equation , subject to a radiation boundary condition at some outer radius @xmath13 .",
    "this is done using the green s function for the modified bessel equation with the solution written : @xmath14 the green s function @xmath15 is : @xmath16 where @xmath17 and @xmath18 are the modified bessel functions of the first and second kind respectively .",
    "the first of these , @xmath19 , grows exponentially , while @xmath20 decays exponentially , but has @xmath21 behavior at the origin , leading to some numerical problems caused by the scaling of the green s function . in practice ,",
    "the solution is computed as : @xmath22 where the radial domain is divided at radii @xmath23 which are used to set reference values of the modified bessel functions .",
    "the product @xmath24 , and the ratio @xmath25 , are thus well - scaled avoiding problems in computation , as long as @xmath26 is not too large .",
    "pataki  @xcite reports that the integration is performed using a dyadic grid , and that by scaling the modified bessel functions as they are computed , the method works well for @xmath27 , corresponding to  80 points in the azimuthal mesh .    for many applications ,",
    "it is desirable to use a denser mesh than this and so a different approach was sought for the solution of equation  [ equ : problem ] .",
    "the natural transform technique for problems in polar coordinates is the discrete hankel transform ( dht ) , which expands a function as a series of ordinary bessel functions @xmath28 . for a function @xmath29 , @xmath30 : @xmath31 where @xmath32 and @xmath33 denotes the @xmath34 coefficient of the expansion of @xmath3 .",
    "if the dht of @xmath35 is available , the solution of equation  [ equ : problem ] can be immediately written : @xmath36 the integrals required in equation  [ equ : dht : solution ] are given in standard tables  @xcite :    [ equ : quad : ij ] @xmath37 \\frac{r}{\\alpha^{2}+\\kappa^{2}},\\\\      \\int_{0}^{r } k_{n}(\\kappa s ) j_{n}(\\alpha s)s\\,{\\mathrm{d}}s      & =      \\left [        \\left (          \\frac{\\alpha}{\\kappa }        \\right)^{n }        +        \\alpha r j_{n+1}(\\alpha r)k_{n}(\\kappa",
    "r ) -         \\kappa r k_{n+1}(\\kappa r)j_{n}(\\alpha r )       \\right]\\frac{1}{\\alpha^{2}+\\kappa^{2 } }     \\end{aligned}\\ ] ]    which gives a solution for the problem in terms of the dht coefficients @xmath38 and @xmath8 . as written , this solution is correct , but not numerically useful , due to the poor scaling of the modified bessel functions , especially for large values of @xmath8 and/or @xmath7 .",
    "it must be rewritten in order to avoid numerical difficulties .",
    "in order to avoid numerical difficulties caused by poor scaling of the modified bessel function , equations  [ equ : quad : ij ] are rewritten and used to give the convolution of the green s function with the ordinary bessel function as :    [ equ : numerical : ijk ] @xmath39      \\nonumber\\\\      & -\\kappa r      \\frac{i_{n}(\\kappa r)k_{n}(\\kappa r)j_{n}(\\alpha r)}{\\alpha^{2}+\\kappa^{2 } }      \\left [        \\frac{i_{n+1}(\\kappa r)}{i_{n}(\\kappa r ) }        +        \\frac{k_{n+1}(\\kappa r)}{k_{n}(\\kappa r ) }      \\right],\\quad r\\neq 0,\\\\      & = \\frac{1}{\\alpha^{2}+\\kappa^{2}},\\quad r = 0,\\ , n=0,\\\\      & = 0 , \\quad r = 0,\\ , n\\neq 0 .",
    "\\end{aligned}\\ ] ]    written in this form , the modified bessel functions appear only as ratios @xmath40 and @xmath41 or as the products @xmath42 and @xmath43 .",
    "the ratios can be computed directly using standard functional relations , while the products are calculated using the same ratios combined with modified bessel functions of order zero , which can be computed accurately and stably .",
    "implementation of the solution technique thus requires two elements , a method for the calculation of ratios of modified bessel functions , and a method for computing the dht . in practice",
    ", the input will not be defined on the nodes of the dht , so an interpolation scheme will also be required .",
    "the method has been coded making use of the gnu scientific library ( gsl )  @xcite , which provides functions for the computation of scaled versions of the modified bessel functions , directly returning @xmath44 $ ] and @xmath45 $ ] .",
    "the algorithm has been designed to use these scaled functions , to avoid problems of underflow and overflow",
    ".      the ratios of modified bessel functions can be computed using standard functional relations  @xcite :    [ equ : relations : ik ] @xmath46    using an approach similar to that of amos  @xcite , who writes the ratios of successive functions as :    [ equ : ratios : ik ] @xmath47    the recursion for @xmath48 is stable for descending @xmath7 while that for @xmath41 is stable for increasing @xmath7 .",
    "the recursion for @xmath41 is seeded with @xmath49 , computed using the scaled form of @xmath50 and @xmath51 .",
    "the recursion for @xmath48 is seeded using olver s asymptotic formula  @xcite for modified bessel functions of large order , as recommended by amos  @xcite , starting at order equal to the larger of @xmath52 and  32 .",
    "the asymptotic expansion is given by : @xmath53 while for small arguments , @xmath54 , the series expansion of @xmath17 is used  @xcite .    given a sequence of ratios of modified bessel functions , the products in equation  [ equ : numerical : ijk ] can be computed as : @xmath55    \\left [      k_{0}(\\kappa r){\\mathrm{e}}^{\\kappa r }    \\right ]    \\prod_{i=0}^{n-1 }    \\left [      \\frac{i_{i+1}(\\kappa r)}{i_{i}(\\kappa r ) }    \\right ]    \\left [      \\frac{k_{i+1}(\\kappa r)}{k_{i}(\\kappa r ) }    \\right],\\end{aligned}\\ ] ] and @xmath56    \\left [      k_{0}(\\kappa r){\\mathrm{e}}^{\\kappa r }    \\right ]    \\prod_{i=0}^{n-1 }    a    \\left [      \\frac{i_{i+1}(\\kappa r)}{i_{i}(\\kappa r ) }    \\right ]    \\left [      \\frac{k_{i+1}(\\kappa r)}{k_{i}(\\kappa r ) }    \\right],\\\\    a & = { \\mathrm{e}}^{\\kappa(r - r)/n},\\nonumber\\end{aligned}\\ ] ] where terms of the form @xmath44 $ ] and @xmath45 $ ] are computed directly using the scaled form of the modified bessel functions .",
    "the ratios of successive modified bessel functions are well scaled and multiplying them in pairs as in the products of equations  [ equ : product : ik ] and  [ equ : product : ikr ] avoids underflow and overflow problems .",
    "the coefficients of the dht are computed using the method of lemoine  @xcite .",
    "this is essentially a quadrature rule based on the zeros of the ordinary bessel function of order @xmath7 , @xmath57 .",
    "the function to be transformed is specified at these zeros @xmath58 , @xmath59 , @xmath60 , and the dht is given by a matrix multiplication of the vector of input data @xmath61 with the matrix entries given by : @xmath62 in the calculations presented here , the gsl implementation  @xcite of lemoine s method was used , but with a modification to compute the zeros of @xmath57 using the @xmath63 algorithm of glaser et .",
    "al  @xcite .    in order to compute the dht ,",
    "the input must be specified at the zeros of the bessel function .",
    "if only one order @xmath7 is of interest , this presents no difficulties , but if the solution is to be found for multiple values of @xmath7 , as in solving a poisson equation , for example , an interpolation scheme is required to transfer the input from the problem mesh onto the dht nodes , in particular because the zeros are not the same for different orders of bessel function .",
    "given that an interpolation scheme will almost always be needed , the approach used by pataki and greengard  @xcite has been adopted . the domain @xmath30 is divided into @xmath64 blocks , @xmath65 , @xmath66 .",
    "each block is discretized with @xmath67 points , given by the chebyshev nodes of the second kind : @xmath68 evaluation of @xmath35 within each block is performed using barycentric lagrangian interpolation  @xcite .",
    "since equation  [ equ : numerical : ijk ] can be computed directly at arbitrary values of @xmath69 , the solution is generated on the input nodes , with no requirement for interpolation from the dht nodes .",
    "given the elements described above , the solution algorithm can be summarized as follows . for a given order @xmath7 , wavenumber @xmath8 and input @xmath35 , @xmath30 :    1 .",
    "generate , if necessary , the dht matrix and corresponding nodes @xmath70 ; 2 .   if necessary , interpolate @xmath35 onto the nodes @xmath70 ; 3 .",
    "perform the dht to yield @xmath38 ; 4 .",
    "evaluate equation  [ equ : dht : solution ] at the input nodes using equations  [ equ : numerical : ijk ] .",
    "the solution method is tested using a function which can be varied to examine the performance of the algorithm with regard to potential sources of error .",
    "the main sources of error in the algorithm arise from the interpolation schemes and aliasing .",
    "these errors arise in both the direct method , where the input is specified on the dht nodes , and when the input must be interpolated from another mesh onto these points .",
    "interpolation errors arise when the interpolation scheme is unable to accurately resolve the function which is being interpolated .",
    "this can occur because the interpolation method proper does not have the required properties to give a well - converged estimate of the underlying function , or because the interpolation nodes are not dense enough to take advantage of an otherwise good interpolation method . in this sense , ` interpolation scheme ' refers both to the explicitly stated polynomial interpolation method used to transfer data from the input mesh to the dht nodes , and to the interpolation which is performed implicitly in the quadrature scheme of the dht .",
    "the second source of error is aliasing , when the point distribution is not dense enough to capture the spatial frequencies present in the input .",
    "this can happen in the dht , if the analytically defined input has wavenumbers @xmath71 with @xmath72 , so that the expansion of equation  [ equ : dht ] does not contain the full set of radial wavenumbers @xmath71 present in the input .",
    "clearly , it can also happen in the chebyshev interpolation scheme if the node density is not high enough , even if the dht would otherwise contain enough nodes to capture the full behavior of the input .",
    ", @xmath73 , @xmath74    in order to assess the performance of the algorithm against these criteria , the test function : @xmath75 has been adopted . by varying the parameters @xmath76 and @xmath77 , the function can be varied from monotonically decaying , as in pataki and greengard s test  @xcite , to oscillatory , figure  [ fig : test : func ] .",
    "the @xmath78 term is required for validity of the solution and introducing the terms in @xmath79 scales the amplitude of the cosine on its maximum , so that the maximum amplitude of @xmath9 is one , reducing errors caused by very large values of @xmath78 .    in testing the algorithm , @xmath80 , @xmath81 , and @xmath82 .",
    "the parameters varied were @xmath64 the number of blocks in @xmath69 , @xmath83 the number of dht nodes , @xmath77 the frequency of @xmath9 and @xmath8 .",
    "the order @xmath7 was tested up to  64 , with @xmath84 in the evaluation of @xmath85 .",
    "tests were conducted for direct solution on the dht grid , to evaluate the performance of the underlying method , and with interpolation from the chebyshev nodes .",
    "the error measure is the @xmath86 norm : @xmath87 where @xmath88 is the computed solution . for clarity , errors greater than  1 have been set to  1 on the plots .      [",
    "cols=\"^,^ \" , ]     finally , figure  [ fig : solution : time ] shows the computational time for the two approaches .",
    "the left hand plot shows the time required for direct solution on the dht nodes , as a function of @xmath83 .",
    "since the dht is implemented as a matrix multiplication , the solution time is expected to scale as @xmath89 and , indeed , the curve fit to the data points shows a computation time @xmath90 . in solving on a different set of nodes , such as the chebyshev points used here ,",
    "the number of input nodes @xmath91 will be greater than @xmath83 , for reasonable interpolation accuracy . in this case",
    ", the computation time can be expected to scale as @xmath92 , i.e. proportional to the number of nodes and to the number of dht coefficients used in computing the solution at each node .",
    "this estimate is borne out by the right hand plot in figure  [ fig : solution : time ] where the fits to the computation time have an exponent equal to  1 , to three significant figures , and the slopes of the lines are proportional to @xmath83 .",
    "a method for the solution of a modified bessel equation which arises in the solution of poisson s equation in cylindrical geometries has been presented , based on the hankel transform .",
    "numerical testing has shown the method to be accurate over a wide range of wave numbers and orders .",
    "we conclude that for a proper choice of mesh densities and hankel transform order , the method can achieve machine precision accuracy , for oscillatory and decaying solutions .",
    "a sample implementation of the algorithm , written in c , is available from the author .",
    "i am grateful to andras pataki , courant institute , new york university , for helpful discussions on the implementation of his green s function poisson solver ."
  ],
  "abstract_text": [
    "<S> a green s function based solver for the modified bessel equation has been developed with the primary motivation of solving the poisson equation in cylindrical geometries . </S>",
    "<S> the method is implemented using a discrete hankel transform and a green s function based on the modified bessel functions of the first and second kind . </S>",
    "<S> the computation of these bessel functions has been implemented to avoid scaling problems due to their exponential and singular behavior , allowing the method to be used for large order problems , as would arise in solving the poisson equation with a dense azimuthal grid . </S>",
    "<S> the method has been tested on monotonically decaying and oscillatory inputs , checking for errors due to interpolation and/or aliasing . </S>",
    "<S> the error has been found to reach machine precision and to have computational time linearly proportional to the number of nodes . </S>"
  ]
}
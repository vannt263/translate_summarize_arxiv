{
  "article_text": [
    "here we address the ` classical ' cryptographic problem , i.e. protection of transmitted and stored data from divulgence and distortion .",
    "such problem frequently arise when data creation or / and data usage are disjoint in time or / and space . there",
    "exist many approaches to this problem in modern cryptography , which can be divided into three main groups in accordance with their key primitives , i.e. , unkeyed , symmetryc - key and public - key encodings , see  @xcite .    in the present work we propose a new generic encoding procedure based on the aperiodic point sets , called quasicrystals in the physics literature and model sets in the mathematics literature  @xcite . generally speaking",
    ", such an algorithm is a symmetric stream cipher endowed with strict aperiodicity ( no periodic subsets ) and everywhere discontinuous properties .",
    "the paper starts by preliminaries and general encoding idea , which is followed by the precise statement of pertinent mathematical ingredients , sections ii and iii . in section  [ sec_image_coding ] applications of the proposed cipher to encoding of bitmap pictures",
    "are presented and discussed .",
    "the advantages of the approach are in the speed of computation and a straightforward possibility of extending the method to encryption of 3 and higher dimensional data .",
    "possible range of private keys and some other applications of quasicrystals are discussed in conclusions .",
    "we call cut - and - project quasicrystal a discrete deterministic aperiodic point set @xmath7 , in a finite - dimensional real euclidean space . in many ways",
    "such quasicrystals resemble lattices in all but the translation symmetry .",
    "sometimes they are even called aperiodic lattices or aperiodic crystals . in this work",
    "we make use of two remarkable properties of the quasicrystals : ( i ) no periodic subsets of any kind are contained in a quasicrystal , and ( ii ) the discontinuity of the ` star map ' between a quasicrystal @xmath7 and its ` acceptance window ' @xmath8",
    ".    general idea of the proposed approach is to take given digital data , set a one - to - one correspondence between information bites and integer numbers @xmath9 , and then to map points of @xmath9 on a quasicrystal fragment @xmath7 ( see the first two lines of  fig .",
    "[ fig_shema ] ) . at this stage",
    "the data is mapped to the quasicrystal points .",
    "it is followed by the application of the star map to the quasicrystal points ( see the second and the third lines of  fig .",
    "[ fig_shema ] ) , which is a crucial step of the encryption . as a result",
    ", we get the quasicrystal points , carrying our data , ` tossed up ' in the acceptance window @xmath8 .",
    "it remains to map the content of @xmath8 on a desirable lattice for the output ( see the last two lines of fig .",
    "[ fig_shema ] ) .",
    "decryption proceeds in the opposite direction .",
    "the set of private keys in our encryption method is infinite and is discussed in conclusions .",
    "in addition , one may choose to use any common substitution scheme .",
    "generation of quasicrystal points is very flexible .",
    "it can either be done as a single stream or split into several blocks . moreover , calculation of the points of each block is easily amenable to parallel computing .    using quasicrystals ,",
    "all calculations can be carried out in integers . that guarantees absolute accuracy of coding and decoding procedures , assures the stability of the algorithm .",
    "theoretical background of the work can be found in  @xcite .",
    "our aim is to consider two - dimensional data .",
    "we start with a choice of two straight lines @xmath10 and @xmath11 on a  square lattice @xmath12 ( see fig .",
    "[ fig_cut - project ] ) ,        where @xmath13 and @xmath14 are two irrational numbers to be specified later .",
    "the simplest choice is @xmath15 and @xmath16 .",
    "one of the lines , say @xmath17 , plays the role of the quasicrystal space onto which a ` cut ' of the lattice @xmath12 is projected . in the other direction @xmath18",
    ", we choose a finite interval @xmath8 .",
    "point of the lattice @xmath12 becomes a  point of the quasicrystal , after projection on @xmath17 , provided its projection on @xmath18 falls within @xmath8 , i.e. it is within the ` cut ' .",
    "we denote by @xmath19 $ ] all the real numbers of the form @xmath20 , with integers @xmath21 and @xmath22 .",
    "the _ star map _ between a quasicrystal point @xmath20 and the point @xmath23 of @xmath8 is given by @xmath24 $ & $ \\longrightarrow$&$\\z[\\tau']$,\\\\ $ ( a+b\\tau)$&$\\mapsto$ & $ ( a+b\\tau')$,\\qquad $ a , b\\in\\z$. \\end{tabular}\\end{gathered}\\ ] ]    there is an unlimited number of choices of the irrational pairs to use in our construction .",
    "for example , one may choose as @xmath13 and @xmath14 the solutions of the two infinite series of the quadratic equations @xmath25 and @xmath26 .",
    "the one - dimensional _ quasicrystal _ or _ cut and project set _",
    "@xmath27 is described as follows ,    let @xmath8 be a finite interval and @xmath13 , @xmath14 be irrational numbers , then @xmath28 where @xmath8 is called the _ acceptance window _ of @xmath27 .",
    "let us underline , that @xmath27 defined here is an infinite , uniformly dense , and uniformly discrete point set , while its window @xmath8 is a finite interval densely covered by the star map of the points of @xmath27 .    from the definition of @xmath27 a number of properties of @xmath27 can be shown  @xcite . in particular , the aperiodicity , discontinuity of the star map and the existence of only two or three different distances between adjacent points of @xmath27 .",
    "more precisely , we recall the following theorems .",
    "let @xmath8 be a semi - closed interval .",
    "for every @xmath27 there exist positive numbers @xmath29 $ ] , such that the distances between adjacent points in @xmath27 take values in @xmath30 .",
    "the distances depend only on @xmath31 and length of the acceptance window .",
    "more can be said about the distances between adjacent points , namely @xmath32 \\{\\delta_1,\\ \\delta_2\\},\\\\ \\text{when}\\quad \\delta_1^\\star-\\delta_2^\\star=|\\omega| .",
    "\\end{array } \\right.\\end{gathered}\\ ] ]    one has a general scaling property of quasicrystals :    for every irrational numbers @xmath31 , @xmath33 and a bounded interval @xmath8 , there exist @xmath34 , @xmath35 , @xmath36 and @xmath37 ( satisfying @xmath38 ) , such that @xmath39    moreover , the distances between adjacent points in @xmath40 are equal to @xmath41 , @xmath42 , @xmath43 , when @xmath44 and to @xmath41 , @xmath42 , when @xmath45 .    finally we underline that the 1-dimensional quasicrystal @xmath27 is an infinite discrete aperiodic set of points uniquely determined by the choice of @xmath13 , @xmath14 and of acceptance window @xmath46 , where @xmath47 and @xmath48 are any real numbers . due to the theorem  2 , without loss of generality",
    ", we can consider @xmath49 , @xmath50 , @xmath51 and @xmath52 $ ] .    in higher dimensions , it is adequate for our purposes to take for the quasicrystals a straightforward concatenation of one - dimensional ones in pairwise orthogonal directions .",
    "first let us introduce two specific examples of one - dimensional quasicrystals @xmath27 .",
    "take @xmath53 , @xmath54 , the two roots of the quadratic equation @xmath55 .",
    "then @xmath56 , @xmath57 .",
    "choosing @xmath58 , @xmath59 the conditions of theorem  2 are satisfied : @xmath60 and @xmath61 .    due to theorem  2 ,",
    "the distances between adjacent points of the quasicrystal @xmath62 are @xmath63 , @xmath64 and @xmath65 .    as the seed point of the quasicrystal @xmath62",
    ", we can choose any point @xmath66 , such that @xmath67 .",
    "for our example we put @xmath68 .    unlike definition 1 , which is not constructive , here we have the information for fast generation of quasicrystal points .",
    "we can move right or left from the seed point by adding or subtracting one - by - one of the distances @xmath69 , @xmath70 or @xmath71 .",
    "suppose we have already established , that @xmath72 is a point of @xmath62 , i.e. @xmath73 .",
    "the point adjacent to @xmath72 from the right is one of the three @xmath74    in order to decide which one is the case , we verify one - by - one the inclusions @xmath75 , @xmath76 or @xmath77 .",
    "the first confirmed inclusion determines the new quasicrystal point .",
    "in such a way the following two subsets of the quasicrystal @xmath62 were obtained @xmath78    here the second line of each example contains the corresponding sequence of distances between quasicrystal points .",
    "the two quasicrystals differ by the sequence in which the three distances @xmath69 , @xmath70 and @xmath71 were tried in the construction .",
    "the first case is was shown as the second line on fig .",
    "[ fig_shema ] .",
    "next quasicrystal @xmath27 is built using the irrationalities @xmath79 , @xmath80 , roots of the quadratic equation @xmath81 .",
    "the conditions of theorem  2 are again satisfied:@xmath82 and @xmath83 . putting @xmath84",
    ", there are only two distances @xmath63 and @xmath64 between adjacent points of the quasicrystal @xmath85 .",
    "using the zero point as the seed point , we obtain the cut and project set @xmath86    it may happen that some point @xmath87 is arbitrary close to an end point of @xmath8",
    ". then it would be a time demanding computational task to decide whether @xmath88 or @xmath89 .",
    "such a difficulty is simply avoided by disqualifying from our consideration any point @xmath87 which comes closer to the boundary of @xmath8 than the distance @xmath90 agreed in advance .",
    "the real numbers of the form @xmath91 can be understood as given by two integer components @xmath92 . since",
    "our operations are only addition or subtraction , the arithmetics of such numbers is elementary introduced .",
    "consequently all transformations are performed with absolute precision .    the transformations between the original and encrypted data go through the several stages .",
    "at each stage we need only the  previous point .",
    "therefore we have only minimal requirements to ram .",
    "in this section fragments of quasicrystal point sets are used for encryption / decryption of 2-dimensional digital data .    assuming that the data is given on the rectangular grid containing final number @xmath93 , @xmath94 of points in each direction",
    ", we deal with final fragments @xmath95 , @xmath96 of the quasicrystal @xmath97 .",
    "number of points in each fragment is given by digital data size @xmath98 .",
    "= -1 each @xmath99 is an interval on real axis in mutually orthogonal directions .",
    "they can be chosen for both fragments independently .",
    "our main tool is the one - to - one map ( star map ) between the finite point sets @xmath100 and its image in @xmath99 @xmath101    note , that roles of @xmath100 and its image in @xmath99 can be interchanged , because the fragments @xmath100 are finite sets of  points .",
    "fast generation of @xmath100 was described in previous section .",
    "it requires that one is given the values of @xmath93 , @xmath94 , @xmath102 , @xmath103 and @xmath99 , and two seed points of @xmath100 , @xmath96 .",
    "suppose one is given a bitmap picture @xmath104 , sampled on the points @xmath105 of a fragment @xmath106 of a rectangular lattice .",
    "then we treat independently each coordinate of the data using one fragment of the quasicrystal as illustrated in fig .",
    "[ fig_shema ] .      * construction of two different 1-dimensional quasicrystals @xmath107 and @xmath108 of sizes @xmath93 and @xmath94 appropriate for the given data @xmath104 .",
    "( each fragment , as well as its acceptance window  interval can be situated anywhere on the corresponding real axes . ) * matching one - by - one the sequence of coordinates @xmath72 with points of @xmath107 , similarly matching the coordinates @xmath109 with points of @xmath108 .",
    "( in this way @xmath72 becomes point @xmath110 of the @xmath107 and @xmath109 becomes point @xmath111 of the @xmath108 , where @xmath112 , @xmath113 , @xmath114 , @xmath115 are integers . ) * the main step of the encoding is the star map of @xmath116 into the corresponding window @xmath117 @xmath118 ( the sequence of the original data coordinates is dramatically changed due to the discontinuity of the star map . ) * it remains to map the points of encrypted quasicrystal fragments , which are now in @xmath119 and @xmath120 , to a sequence of integers along @xmath72 and @xmath109 directions .",
    "the present algorithm permutes the data points without changing the value of the data at each point .",
    "it is straightforward to consider the possible values of the data function as another discrete point set and to apply the same algorithm to it .",
    "effectively we are thus dealing with a three - dimensional problem , where the data function takes only two values at 3-dimensional points .",
    "all the maps we have used in the encryption algorithm are one - to - one , therefore they can be used in the inverse order for the decryption . for the same reason , nothing prevent us from iterative using our algorithm .    in certain types of data",
    "the encryption algorithm leaves residue of the orthogonal directions , see fig .",
    "it can be avoided in a many different ways .",
    "one of them was mentioned above , when the problem was viewed as a three - dimensional one . another possibility is illustrated on fig .",
    "the two - dimensional data is taken as an ordered one - dimensional sequence ( modification 2 ) .",
    "the particularly fast possibility is to introduce the additional cyclic permutations of the points ( modification 1 ) , see fig .",
    "[ fig0]d .    : a  initial image ; b  main algorithm ; c  second modification ; d  first modification ]    the computation time of our algorithms is compared in table  1 .",
    "computations were carried out by pentium m processor 1.70 ghz with 1 gb ram . as the test image we took the 512x512-pixel 8 bit grayscale picture lenna ( see figs .",
    "[ fig3 ] and  [ fig4 ] ) .",
    "but the second modification was tested on 200x200-pixel 8 bit grayscale picture lenna ( fig .",
    "note , that the program does not cut the images into blocks for processing .",
    "table  1 .",
    "program working time .    [ cols=\"^,^,^,^ \" , ]     program realizing these algorithms can be freely downloaded from _ http://132.204.90.210/maryna/ _ and listing of the main coding algorithm is adduced in appendix  [ app_program ] .",
    "in the paper one of the simplest versions of the quasicrystal - based symmetric cipher is described . even in this form",
    "it appears adequate for many applications .",
    "its complicated key is described below .",
    "it is based on strongly aperiodic sets , includes everywhere discontinuous ` star map ' , and it is absolutely stable , since it operates with integer numbers only .",
    "similarly , damaging a few data points does not affect the rest of the encryption / decryption process .",
    "furthermore coordinates of the data can be divided into several non - overlapping intervals , then contents of all intervals could be encrypted in parallel .",
    "application of the algorithm requires that the following variables ( cryptovariables of the private key ) are fixed @xmath121 @xmath13 and @xmath14 are irrational numbers , solutions of one of equations of the two infinite series of the quadratic equations , @xmath122 or @xmath123 , @xmath124 ;    @xmath21 and @xmath22 are integers , fixing a seed point of the quasicrystal ;    @xmath47 and @xmath48 are arbitrary real numbers , fixing the position of the acceptance window @xmath8 ;    @xmath125 takes values \\{`+ ' , ` - ' } , defining direction of quasicrystal construction relative to the seed point ;    @xmath126 sequence of distances of adjacent points during quasicrystal generation ;    @xmath90 is the maximal distance from the end points of @xmath8 at which the star map points are still considered ;    @xmath127 is the positive integer number specifying number of iterations of the certain quasicrystal cipher .",
    "more elaborate encryption system can be built by exploiting properties of 1 or 2-dimensional quasicrystals . using the present algorithm in several iterations",
    ", one may choose new quasicrystal for each iteration , or new position of the quasicrystal fragment , or different size , position of the acceptance window , etc .",
    "rich scaling properties of the quasicrystal could be involved into encryption scheme  @xcite .",
    "genuinely two - dimensional quasicrystals can be used for the encryption , some examples of the possibilities are found in  @xcite .",
    "the number of distinct quasicrystals of this kind is unlimited .",
    "one can easily build one - dimensional quasicrystal by projecting cuts of n - dimensional latices on the direction of the quasicrystal .",
    "intriguing appears to be the possibility to read the initial lattice data as an ordered stream of points and map them into single one - dimensional quasicrystal , perform the star map and reorder transform points into encrypted data .",
    "there are also other applications of the quasicrystals e.g. for generation of random numbers  @xcite , even some cryptographic ones  @xcite .",
    "one of us ( m.n . ) is grateful for the hospitality extended to her at the center de recherche mathmatique , universit de montral during the work on this project .",
    "we are grateful for partial support of the work by the natural science and engineering research council of canada , mitacs , lockheet martin of canada and mind research institute of california .    99    l. chen ,",
    "r. moody and j. patera , non - crystallographic root systems",
    ". quasicrystals and discrete geometry ( toronto , on , 1995 ) , 135178 , _ fields inst .",
    "_ , * 10 * , amer .",
    "soc . , providence , ri , 1998 .    w. diffie and m. hellman , new directions in cryptography , _ ieee transactions on information theory _ , * it-22 * ( 1976 ) , 644654 .",
    "gazeau , z.  masakova and e.  pelantova , nested quasicrystalline discretisations of the line , _ physics and number theory _ * 10 * ( 2006 ) , 79131 .",
    "o. goldreich , foundations of cryptography , v.1 : basic tools , cambridge university press , 2001 .",
    "guimond , z.  masakova and e.  pelantova , combinatorial properties of infinite words associated with cut - and - project sequences ,",
    "_ j. theor .",
    "nombres bordeaux _ * 15 * ( 2003 ) , 697725 .",
    "guimond , jan patera and jiri patera , statistics and implementation of aperiodic pseudorandom number generators , _ applied numerical mathematics _ * 46 * ( 2003 ) , 295318 .",
    "z. masakova , j. patera and e. pelantova , inflation centres of the cut and project quasicrystals , _ j.  phys .",
    "a _  * 31 * ( 1998 ) , 14431453 .",
    "z. masakova , j. patera and e. pelantova , minimal distances in quasicrystals ,",
    "_ j.  phys .  a _",
    "* 31 * ( 1998 ) , 15391552 .    a.j .",
    "menezes , p.c .",
    "van oorschot and s.a .",
    "vanstone , handbook of applied cryptography , crc press , 2001 .",
    "r. moody and j. patera , quasicrystals and icosians , _ j.  phys .  a _ * 26 * ( 1993 ) , 28292853 .    z. maskov , j. patera , e. pelantov , aperiodic encryption method , us patent , september  14 , 2004,us6,792,108  b1    j. patera and m. nesterenko , quasicrystals in cryptography , _ e. kranakis , e. haroutunian and e. shahbazian , editors , aspects of network and information security , proceedings of nato advanced studies institute on network security and intrusion detection , held in nork , yerevan , armenia , october 01 - 12 _ , 2006 , ios press , 2007 , to appear .",
    "realization of the main algorithm on delphi 6.0 :    unit unit1 ;    interface    uses    windows , messages , sysutils , variants , classes , graphics , controls , forms ,    dialogs , stdctrls ;    type    tnode = record    a  : integer ;    b  : integer ;    rs , rb  : real ;    ns , nb  : integer ;    end ;    tsequence = record    n  : integer ;    nodes  : array of tnode ;    a , b  : integer ;    s  : string ;    end ;    tform1 = class(tform )    button1  : tbutton ;    button2 : tbutton ;    procedure button1click(sender : tobject ) ;    procedure formcreate(sender : tobject ) ;    procedure button2click(sender : tobject ) ;    private     private declarations    public     public declarations    end ;    var    form1  : tform1 ;    roots , rootb  : real ;    implementation    function calcsmall ( a , b : real ) : real ;    begin    calcsmall : = a + b * roots ;    end ;    function calcbig ( a , b : real ) : real ;    begin       a : = a + 1 ;    b : = - b ;    calcbig : = calcsmall ( a , b ) ;    calcbig : = a + b * rootb ;    end ;    function checkshort ( a , b : integer ; var node : tnode ; dir : integer ) : boolean ;    var tempb : real ;    res : boolean ;    begin    a : = a - dir ;    b : = b + dir ;    tempb : = calcbig ( a , b ) ;    res : = ( ( tempb @xmath128 0 ) and ( tempb @xmath128 2 ) ) ;    if res then begin    node.a : = a ;    node.b : = b ;    node.rb : = tempb ;    end ;    checkshort : = res ;    end ; //checkshort ( a , b : integer ; var node : tnode ; dir : integer ) : boolean ;    function checkmedium ( a , b : integer ; var node : tnode ; dir : integer ) : boolean ;    var tempb : real ;    res : boolean ;    begin    a : = a + dir ;    tempb : = calcbig ( a , b ) ;    res : = ( ( tempb @xmath129 0 ) and ( tempb @xmath128 2 ) ) ;    if res then begin    node.a : = a ;    node.b : = b ;    node.rb : = tempb ;    end ;    checkmedium : = res ;    end ; //checkmedium ( a , b : integer ; var node : tnode ; dir : integer ) : boolean ;    function checklong ( a , b : integer ; var node : tnode ; dir : integer ) : boolean ;    var tempb : real ;    res : boolean ;    begin    b : = b + dir ;    tempb : = calcbig ( a , b ) ;    res : = ( ( tempb @xmath129 0 ) and ( tempb @xmath128 2 ) ) ;    if res then begin    node.a : = a ;    node.b : = b ;    node.rb : = tempb ;    end ;    checklong : = res ;    end ; //checklong ( a , b : integer ; var node : tnode ; dir : integer ) : boolean ;    function fillsequence ( var seq : tsequence ; a , b , n , dir : integer ) : string ;    var res  : string ;    aprev , bprev  : integer ;    i  : integer ;    begin    res : =  ;    seq.n : = n ;    seq.a : = a ;    seq.b : = b ;    setlength ( seq.nodes , n ) ;    seq.nodes[0].a : = a ;    seq.nodes[0].b : = b ;    seq.nodes[0].rb : = calcbig ( a , b ) ;    seq.nodes[0].rs : = calcsmall ( a , b ) ;    seq.nodes[0].ns : = 0 ;    for i : = 1 to n - 1 do begin    aprev : = seq.nodes [ i-1].a ;    bprev : = seq.nodes [ i-1].b ;    seq.nodes [ i].ns : = i ;    if dir = 1 then begin    if checkshort ( aprev , bprev , seq.nodes [ i ] , dir ) then    res : = res + s    else if checkmedium ( aprev , bprev , seq.nodes [ i ] , dir ) then    res : = res + m    else if checklong ( aprev , bprev ,",
    "seq.nodes [ i ] , dir ) then    res : = res + l    end else if checklong ( aprev , bprev ,",
    "seq.nodes [ i ] , dir ) then    res : = res + l    else if checkmedium ( aprev , bprev ,",
    "seq.nodes [ i ] , dir ) then    res : = res + m    else if checkshort ( aprev , bprev , seq.nodes [ i ] , dir ) then    res : = res + s ;    seq.nodes[i].rs : = calcsmall ( seq.nodes[i].a , seq.nodes[i].b ) ;    end ;    seq.s : = res ;    fillsequence : = res ;    end ; //fillsequence ( var seq : tsequence ; a , b , n , dir : integer ) : string ;    procedure savesequence ( seq : tsequence ; fname : string ) ;    var f : textfile ;    var i : integer ;    begin    assignfile ( f , fname ) ;    rewrite ( f ) ;    writeln ( f , seq.n, :  , seq.s ) ;    for i:= 0 to seq.n - 1 do    writeln ( f , seq.nodes[i].ns ,  ,  , seq.nodes[i].nb ,  ,  , seq.nodes[i].a ,  ,  , seq.nodes[i].b ,  ,  , seq.nodes[i].rs ,  ,  ,  seq.nodes[i].rb ) ;    flush ( f ) ;    closefile ( f ) ;    end ; //savesequence ( seq : tsequence ; fname : string ) ;    procedure sortsequence ( var seq : tsequence ; dir : integer ) ;    var node  : tnode ;    i , j  : integer ;    flag  : integer ;    begin    for i : = seq.n-2 downto 0 do    for j:= 0 to i do begin    flag : = 0 ;    if dir = 1 then begin    if seq.nodes[j].rb @xmath129 seq.nodes[j + 1].rb then    flag : = 1 ;    end else    if seq.nodes[j].rs @xmath129 seq.nodes[j + 1].rs then    flag : = 1 ;    if flag = 1 then begin    node : = seq.nodes[j + 1 ] ;    seq.nodes[j + 1 ] : = seq.nodes[j ] ;    seq.nodes[j ] : = node ;    end ;    end ;    if dir = 1 then    for i : = 0 to seq.n do    seq.nodes[i].nb : = i ;    end ; //sortesequence ( var seq : tsequence ; dir : integer )    procedure codeimg ( dir : integer ) ;    var fname1 , fname2  : string ;    bitmap1 , bitmap2  : tbitmap ;    seqx , seqy  : tsequence ;    i , j  : integer ;    curwidth , curheight : integer ;    strx , stry  : string ;    begin    if dir = 1 then begin    fname1 : = in.bmp ;    fname2 : = out.bmp ;    end else begin    fname1 : = out.bmp ;    fname2 : = back.bmp ;    end ;    bitmap1 : = tbitmap.create ;    bitmap1.loadfromfile ( fname1 ) ;    bitmap2 : = tbitmap.create ;    curwidth : = bitmap1.width ;    curheight : = bitmap1.height ;    bitmap2.width : = curwidth ;    bitmap2.height : = curheight ;    strx : = fillsequence ( seqx , 1 , 0 , curwidth , 1 ) ;    stry : = fillsequence ( seqy , 1 , 0 , curheight , 1 ) ;    sortsequence ( seqx , 1 ) ;    sortsequence ( seqy , 1 ) ;    for i:= 0 to curwidth - 1 do    for j:= 0 to curheight - 1 do    if dir = 1 then    bitmap2.canvas.pixels [ i , j ] : = bitmap1.canvas.pixels [ seqx.nodes [ i].ns , seqy.nodes [ j].ns ]    else    bitmap2.canvas.pixels [ seqx.nodes [ i].ns , seqy.nodes [ j].ns ] : = bitmap1.canvas.pixels [ i , j ] ;    bitmap2.savetofile ( fname2 ) ;    bitmap1.free ;    bitmap2.free ;    if dir = 1 then begin    sortsequence ( seqx , -1 ) ;    sortsequence ( seqy , -1 ) ;    savesequence ( seqx , x.txt ) ;    savesequence ( seqy , y.txt ) ;    end ;    end ; //codeimg ( dir : integer )    procedure tform1.button1click(sender : tobject ) ;    begin    button1.enabled : = false ;    button2.enabled : = false ;    codeimg ( 1 ) ;    button1.enabled : = true ;    button2.enabled : = true ;    end ;    procedure tform1.formcreate(sender : tobject ) ;    begin    roots : = ( 1 + sqrt ( 5 ) ) / 2 ;    rootb : = ( 1 - sqrt ( 5 ) ) / 2 ;    end ;    procedure tform1.button2click(sender : tobject ) ;    begin    button1.enabled : = false ;    button2.enabled : = false ;    codeimg ( -1 ) ;    button1.enabled : = true ;    button2.enabled : = true ;    end ;    end .",
    "in this section we will show several examples of the application of the main algorithm , its modification 1 , and modification 2 , as well as its iterations several times .",
    "let us emphasize that the data was encrypted as a single block .",
    "computing time is ranging between two seconds ( one iteration ) and nine seconds ( five iterations ) for the main algorithm ."
  ],
  "abstract_text": [
    "<S> a symmetric encryption method based on properties of quasicrystals is proposed . </S>",
    "<S> the advantages of the cipher are strict aperiodicity and everywhere discontinuous property as well as the speed of computation , simplicity of implementation and a straightforward possibility of extending the method to encryption of higher dimensional data .    * </S>",
    "<S> new families of cryptographic systems *    * maryna nesterenko  @xmath0 , jiri patera  @xmath1 and dmytro zhavrotskyi  @xmath2 *    @xmath1  centre de recherches mathmatiques , universit de montral , 6128 , succursale centre - ville , + @xmath3  montral , qc , h3c3j7 , canada + @xmath3  e - mail : patera@crm.umontreal.ca    @xmath4  institute of mathematics of nas of ukraine , 3 tereshchenkivska str . , kyiv-4 , 01601 ukraine + @xmath5  e - mail : maryna@imath.kiev.ua    @xmath2  interzvyazok , 15 novokostyantynivska str . </S>",
    "<S> , kyiv , 04080 , ukraine + @xmath6  e - mail : dima_zh@isv.com.ua </S>"
  ]
}
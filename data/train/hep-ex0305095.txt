{
  "article_text": [
    "event displays are indispensable tools for analysis in high energy physics experiments .",
    "they help to understand the physics of a recorded interaction , to diagnose the apparatus , to make the detector geometry imaginable and to illustrate the whole matter to general audiences . for these rather heterogeneous requirements",
    ", the application must be versatile and offer both 2-dimensional ( 2d ) and 3-dimensional ( 3d ) representations .",
    "on the other hand , in today s large collaborations distributed environments , it should be possible to obtain event displays regardless of the question whether the workstation is on site or somewhere else in the world .",
    "this is in general a challenge , since displaying events requires access to the experiment s event store and geometry constants .    in the zeus experiment ,",
    "new requirements have emerged with the installation of new detector components , in particular the silicon micro - vertex detector ( mvd ) and the forward straw tube tracker ( stt ) , which require more elaborate 3-dimensional visualizations than the previous tool provided .    in the following ,",
    "we describe the _ zevis _ program suite ( zevis standing for * ze*us * vis*ualization ) , which is a distributed application designed to meet the above challenges .",
    "the design of the new event display is governed by two key criteria which are detailed in the following .",
    "the system should consist of a highly portable light - weight client , capable of running on many different platforms with the host residing on - site or somewhere in the internet , and a server application which lives on a stationary host in direct contact with the event store .",
    "the term `` light - weight '' implies that the client should be independent of the huge legacy libraries making up the main reconstruction and analysis code . the server application ,",
    "on the other hand , should incorporate standard analysis tools .",
    "the connection protocol between client and server should be standardized and likely not to be stopped by firewalls .",
    "perspective 3-dimensional views with hidden lines and hidden surface removal are very useful for understanding detector geometry , and provide attractive pictures for public relation purposes ( fig .  [ fig : detector-3d ] ) . analyzing the event itself is often less successful in this mode , since the geometry tends to obscure the tracks and hits .",
    "( left ) and @xmath0 planes ( right).,width=302 ]     ( left ) and @xmath1 ( right).,width=302 ]    standard projections in the straight - forward sense , e.g. along the beam line or transverse to it , present detector and event in such a way that coordinates could be measured , and every item is in principle visible ( fig .  [",
    "fig : straightprojection ] ) .",
    "however , straight - forward projections can be very complex to look at in a multi - component detector , and do not go all too well with the cylindrical geometry of many colliding - beam experiments .",
    "very favourable for physics analysis are _ layered projections _ , which make use of filled areas to show geometry and event but arrange them in suitable layers such that all relevant information is visible ( fig .",
    "[ fig : layered ] ) .",
    "an excellent review on how to design useful projections for cylindrical detector designs has been given in  @xcite .",
    "the ideal system should integrate all three viewing variants .",
    "the root system  @xcite was chosen as underlying graphics , gui and persistency package , since it provides drawing capabilities both for 2-dimensional graphics primitives as well as 3-dimensional graphics in wireframe mode and with hidden lines and surface removal .",
    "the zevis package is structured such that the client application depends only on one common library , which contains the geometry and event classes .",
    "other libraries contain the classes to build the geometry and event in root format from the zeus internal data model , and the server application which will be discussed later .",
    "the data structures are designed using the builtin root containers , in particular the _ tclonesarray_. the geometry , which normally needs to be loaded only once per session , is designed such that it can be drawn quickly without further modification , hence the data structures are all directly derived from root geometry classes which are able to draw themselves .",
    "the present size of the geometry file is about 450  kb .    for the event ,",
    "compact size is important since a typical event display session will involve access to many events .",
    "the data content is therefore strongly reflecting the event information in the official zeus mini - dst format , with about 30  kb / evt .        in layered projections ,",
    "each geometry object acquires a 2-dimensional shape which can be different in each projection , e.g. the drift chamber outline is a circle in @xmath2 view while it becomes two rectangles in the @xmath1 view .",
    "coordinate is defined by the proton beam direction , @xmath3 and @xmath4 are transverse to it .",
    "@xmath5 , signed according to azimuthal region . ]",
    "the parallel implementation of 3-dimensional and 2-dimensional representations is achieved by overloading the _ paint ( ) _ member function in the derived geometry classes .",
    "a fish - eye view introduces a nonlinear transformation of radius and @xmath6 coordinate in the layered @xmath2 and @xmath1 projections , with the aim to enable simultaneous inspection of inner ( e.g. micro - vertex detector ) and outer tracking components ( muon system ) within the same picture .",
    "it is implemented by overloading the _ tview::wctondc _ member function of root .",
    "the central server provides the access to the geometry and event data for the client program which may be running somewhere in the internet .",
    "it provides the following functionalities :    * detector geometry service * single event service * download of event files * access to online events * access to _ events of the week _ scan results ( see explanation below )      the internal structure of the zevis server is shown in fig .",
    "[ fig : serverinternal ] .",
    "the server is based on a normal apache application  @xcite which has been extended by a root module and php4 . on the client side ,",
    "requests to the server are handled by the _ twebfile _ class embedded in root which has been slightly extended to allow for passing of parameters and version qualifiers .",
    "the server operates its own cache , where a copy of each created event file is kept for some time .",
    "a repeated request from a client will be satisfied with the cached result of an identical earlier request if it still exists .",
    "different components of the server provide the functionality described above .",
    "the detector geometry is normally requested by the client automatically on startup .",
    "the geometry resides statically on the server , and is subject to version control .",
    "each client binary has the schema version it is based upon compiled in , and requests the geometry explicitly in the required version .",
    "the server keeps the geometry in several currently supported schema versions , which have been generated offline .",
    "particular care has been invested to provide a prompt return of single events .",
    "the client requests a single event specified by run number and event number , and a server application named _ dispatcher _ passes it to a pre - initialized _ event agent _ , which uses the tag database  @xcite to obtain the whereabouts of the event , retrieves it from the event store and converts it into root format on - the - fly .",
    "the dispatcher then returns the event to the client .",
    "the event agent is based on a normal zeus analysis application and has access to all standard analysis code .",
    "it also uses the normal i / o layers of all zeus applications , which initiate automatically staging of a tape file if it should become necessary through the _ dcache _  @xcite .",
    "since the initialization phase would introduce a sizeable latency , event agents are always pre - initialized and work in daemon fashion . as an individual process",
    "could be kept busy for some time if e.g. a file needs to be staged , several event agents are operated in parallel .",
    "similar as with the geometry , the server supports several schema versions for event information .",
    "typically , ten event agents are working in parallel for each supported schema . besides run number and event number ,",
    "the client can specify cuts on physical quantities of the event , which the server evaluates as a query on the tag database .",
    "thus , the client is able to select e.g. only dis events in a certain kinematical range , or only diffractive events with @xmath7 candidates in the muon channel , etc .      in the download service ,",
    "the client specifies the name of an event file in the event store in one of several formats , which the server converts into root format on the fly .",
    "also raw data files can be requested , which the server passes through an on - demand reconstruction .    during data taking ,",
    "the zeus online system splits random events off the stream with a typical frequency of 0.1  hz .",
    "these events are passed through an automatic reconstruction on a dedicated machine , converted to root and placed within the web area of the server . in online mode",
    ", the client retrieves the latest online event periodically ( this has become a standard data quality control measure in the zeus control room ) .",
    "in regular running mode , teams of specialists scan preselected zeus events visually and produce a selection named _ events of the week_. the client application can retrieve this selection file directly from the server , which is also a useful mode for public relation purposes .      the present event display server hardware is a dual processor pc with intel xeon 2.2  ghz cpu and a fast ide raid controller with 240  gb of disk space , connected by a gigabit ethernet interface .            the performance of the server under varying load conditions has been investigated systematically .",
    "figure  [ fig : server1 ] shows the histogrammed response time of non - identical events requested in random order , with the server cache deactivated .",
    "the response time is measured on the server and includes access to the tag database and event store , event analysis and conversion to root format , but not the network transfer to the client ( which is almost negligible for 30  kb event size on a normal local area network which can easily transfer several mb / s ) .",
    "the average response time is less than 2s , and will be even shorter when the event happens to be in the cache .",
    "there are no significant tails in the distribution .",
    "figure  [ fig : server2 ] shows the behaviour under an artificial stress test . while the response time increases with increasing concurrency of demands , it is still below 4s with nine simultaneous requests . with up to four requests in parallel , hardly",
    "any degradation of performance is noticeable .",
    "this stress test is however of rather artificial nature , since during normal operation , concurrency of requests has hardly been observed at all .",
    "the general layout of the gui is shown in fig .  [",
    "fig : gui ] .",
    "the largest item is the event display canvas which consists of two pads containing two selectable views of the event , and the header . above the canvas ,",
    "four radio buttons allow selection of the event retrieval mode , where the choice can be made between single event request , file download , local and online modes . on the left side of the display canvas ,",
    "three register cards contain toggles for the display of individual detector components and the corresponding event information , and permit steering of the event retrieval , which will be discussed in more detail below .",
    "the bottom edge of the frame shows the general status on the left , and a description of the object currently below the mouse pointer ( in this case a track reconstructed in the drift chamber ) .",
    "the right side of the display canvas features buttons for zoom functions , and a slider to adjust the zoom factor .",
    "a set of pull - down menus gives access to less frequently used options .",
    "the mouse buttons can be used to pick displayed objects and inspect their properties , in extension of a builtin root feature .",
    "the context menu also allows changing between the view modes .",
    "the steering panel for single event requests is shown in fig .",
    "[ fig : eventselect ] .",
    "the minimal specification consists of run and event number .",
    "optionally , a query on event tag variables can be entered in three fields , whereupon the server returns the first event satisfying the query with an event number equal or greater than the one specified . at the top",
    ", arrow - marked buttons allow navigation to the next or previous event . in presence of a query , the server will provide the next or previous event within the scope of the query .        a different panel ( fig .",
    "[ fig : download ] ) is used for requesting complete files from the server in various formats .",
    "the file name can be chosen with a file browser panel if the event store inventory is visible from the host on which the client is running .",
    "figure  [ fig : download ] also shows the graphical event directory tree , which allows to move directly to any event in the downloaded file .",
    "the gui for the online mode is shown is fig .",
    "[ fig : onlineevt ] . in this mode",
    ", the client periodically requests the latest online event from the server ( here every 20 seconds ) .",
    "a very typical event display for daily work is shown in fig .",
    "[ fig : xyandrz ] .",
    "it shows layered projections in @xmath2 ( left ) and @xmath1 ( right ) .",
    "the calorimeter energies are represented by the size of the shapes within the cell images , and are summed over all corresponding cells in @xmath6 in case of the @xmath2 view , and azimuth @xmath8 in case of the @xmath1 view .",
    "the fish - eye view allows simultaneous inspection of the inner mvd tracking layers together with the outer components ( fig .",
    "[ fig : fisheye ] ) .",
    "the fish - eye transformation blows up the inner part of the detector , it is available in both @xmath2 and @xmath1 projections .",
    "the micro - vertex detector benefits particularly from the capability to display 2-dimensional and 3-dimensional views together .",
    "figure  [ fig : mvdhits ] shows the mvd simultaneously in @xmath2 projection and at an arbitrary spatial viewing angle .",
    "special modes enable display of the raw hit information , as illustrated in fig .",
    "[ fig : rawhits ] in case of the central drift chamber .",
    "a display of a cosmic muon event with track segments in the muon chambers is shown in fig .",
    "[ fig : muonhits ] .    three - dimensional views with hidden lines and surface removal are possible through the special viewers _",
    "x3d _ and _ opengl _ which are integrated in view .",
    "figure  [ fig : detector-3d ] has been obtained using opengl . with these modes ,",
    "live rotations are possible , and a suitable hardware acceleration , as available in the graphics adapters of most contemporary pcs , provides instantaneous response .",
    "we have developed and deployed a client - server event display for the zeus experiment , which is based on the root framework .",
    "its main features are a portable , lightweight client , smooth integration of 2-dimensional and 3-dimensional views and an ergonomic graphical user interface .",
    "the performance of the server is excellent and leaves plenty of reserves for future increase in usage .",
    "it is a pleasure to thank the zeus detector and physics groups for their help and many useful suggestions about the most efficent implementation of detector geometry and event data , and the root team for help and advice in connection with root , as well as for providing the system in the first place .",
    "we would also like to thank our summer students aleksandra adametz , valentin sipica and ildar tamendarov for their contributions to the program ."
  ],
  "abstract_text": [
    "<S> a new event visualization tool for the zeus experiment is nearing completion , which will provide the functionality required by the new detector components implemented during the recently achieved hera luminosity upgrade . the new design is centered around a client - server concept , which allows to obtain random access to the zeus central event store as well as to events taken online via the http protocol , even from remote locations . </S>",
    "<S> the client is a lightweight c++ application , and the root system is used as underlying toolkit . </S>",
    "<S> particular attention has been given to a smooth integration of 3-dimensional and layered 2-dimensional visualizations . </S>",
    "<S> the functionality of server and client application with its graphical user interface are presented . </S>"
  ]
}
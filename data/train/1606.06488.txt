{
  "article_text": [
    "cartographic maps are an important tool for exploring , analyzing and communicating data in their geographic context .",
    "effective maps show their main information as prominently as possible .",
    "map elements that are not relevant to the map s purpose are abstracted or fully omitted . in _",
    "schematic maps _ , the abstraction is taken to `` extreme '' levels , representing complex geographic elements with only a few line segments .",
    "in addition to highlighting the main aspects of the map , they are useful to avoid an `` illusion of accuracy '' @xcite which may arise when showing data on a detailed map : the schematic appearance acts as a visual cue of distortion , imprecision or uncertainty .",
    "however , the low complexity must be balanced with recognizability .",
    "correct topological relations and resemblance hence play a key role in schematization .",
    "schematic maps also tend to be stylized by constraining the permitted geometry .",
    "orientations of line segments are often restricted to a small set @xmath4 , so called _",
    "@xmath4-oriented schematization_. the prototypical example is a schematic transit map ( e.g. the london tube map ) , in which all segments are horizontal , vertical or a @xmath5-degree diagonal .",
    "to be schematized ( switzerland ) .",
    "( b ) a @xmath4-oriented ( rectilinear ) graph @xmath2 is placed on @xmath1 .",
    "( c ) a _ simple _ polygon @xmath0 with its boundary constrained to @xmath2 that resembles @xmath1 .",
    "( d ) shape @xmath0 is a @xmath4-oriented schematization of the input . ]",
    "a central problem in schematization is the following : given a simple polygon @xmath1 , compute a simple @xmath4-oriented polygon @xmath0 with low complexity and high resemblance to @xmath1 .",
    "typically , one is constrained to optimize the other .",
    "formalizing `` high resemblance '' requires the use of similarity measures , each having its own benefits and weaknesses @xcite . in this paper",
    "we investigate a discretized approach to schematization . to this end",
    "we overlay a @xmath4-oriented plane graph @xmath2 on @xmath1 , and require the boundary of @xmath0 to coincide with a simple cycle in @xmath2 ( fig .",
    "[ fig : idea ] ) .",
    "though it restricts the solution space , this approach also offers some benefits .",
    "* the graph can easily model a variety of constraints , possibly varying over the map , or mixing with other types of geometry , such as circular arcs .",
    "* discretization promotes the use of collinear edges and provides a uniformity of edge lengths .",
    "this provides a stronger sense of schematization and a more coherent `` look and feel '' when schematizing multiple shapes . *",
    "combined with the simplicity constraint , the graph enforces a minimal width for narrow strips in @xmath1 , avoiding an undesired visual collapse ( see fig .  [ fig : exaggeration ] ) .",
    "finally , discretization may be necessary due to the intended use of the schematic shape .",
    "examples include computing tile - based cartograms @xcite and deciding for a grid map @xcite on a connected set of cells that resemble the complete region .",
    "these use cases require us to bound not ( only ) the bends of the result , but the number or total size of the enclosed faces .",
    "this is also relevant in the context of area - preserving schematization @xcite .",
    "exaggerates the narrow strip .",
    "computed using techniques described in @xcite .",
    "( b ) result of algorithm by buchin  et al .",
    "@xcite contains a visual collapse . ]",
    "we consider two discretized approaches , as outlined below .",
    "note that we focus on grid graphs ( plane graphs with horizontal and vertical edges only ) without constraining the complexity of the result .",
    "refer to section  [ sec : prelims ] for precise definitions used in this paper .",
    "the first approach aims to find a simple cycle in @xmath2 , quantifying resemblance via the frchet distance ( @xmath6 ) .",
    "this leads us to the problem statement below .",
    "[ prob : smm ] let @xmath2 be a partial grid graph , let @xmath1 be a simple polygon and let @xmath7 . decide whether a simple cycle @xmath3 in @xmath2 exists such that @xmath8 .    in section  [ sec : proof ]",
    "we prove that this problem is np - complete .",
    "this proof has implications on several variants of this problem ( section  [ sec : corollaries ] ) .",
    "in particular , no reasonable approximation algorithm exists , unless p@xmath9np .    with the second approach we use the symmetric difference ( @xmath10 ) to quantify resemblance .",
    "we now consider the full polygon rather than only its boundary , and look for a connected face set in @xmath2 instead of a cycle .",
    "this leads to the following problem :    [ prob : cfs ] let @xmath2 be a full grid graph , let @xmath1 be a simple polygon and let @xmath11 . decide whether a connected face set @xmath0 in @xmath2 exists such that @xmath12 .    in spite of the symmetric difference being insensitive to matching different parts between polygons",
    ", we prove that this is again an np - complete problem in section  [ sec : cfs ] .",
    "this result is independent of whether we allow holes in the resulting polygon .",
    "moreover , the proof readily implies hardness for regular tilings using triangles or hexagons .",
    "* schematization . * line and network schematization ( e.g. transit maps ) have received significant attention in the algorithmic literature , e.g. @xcite .",
    "recently , schematization of geographic regions has gained increasing attention , e.g. @xcite .",
    "our discretized approach is similar in nature to the octilinear schematization technique of cicerone and cermignani  @xcite , though simplicity is of no concern in their work .",
    "as mentioned in the introduction , the discretized approach offers conceptual advantages over the existing nondiscretized methods .",
    "map matching has various applications in geographic information systems , such as finding a driven route based on a road network and a sequence of gps positions . without its simplicity constraint ,",
    "it has been studied extensively with various criteria of resemblance , e.g. @xcite .",
    "alt  et al .",
    "@xcite describe an algorithm that solves nonsimple map matching under the frchet distance in @xmath13 time where @xmath14 is the complexity of @xmath1 and @xmath15 the complexity of @xmath2 .",
    "though `` u - turns '' can be avoided , no general simplicity guarantees are possible .",
    "similarly , the decision problem for the weak frchet distance can be solved in @xmath16 time  @xcite .",
    "the _ simple _ map matching problem on the other hand has received little attention , although it stands to reason that for many applications a nonselfintersecting result is desired , if the input curve is simple .",
    "a full grid graph always admits a solution with hausdorff distance at most @xmath17 and frchet distance at most @xmath18 , where @xmath19 parametrizes a realistic input model @xcite .",
    "wylie and zhu  @xcite prove independently that simple map matching under the _ discrete _ frchet distance is np - hard , however , without requiring a simple input curve .",
    "a stronger result  with a simple input curve  follows directly from our proofs .",
    "sherette and wenk @xcite show that it is np - hard to find a simple curve with bounded frchet distance on a 2d surface with holes or in 3d , but again without requiring a simple input curve . in its dual form ,",
    "connected face selection is a specialization of the known np - hard maximum - weight - connected - subgraph problem @xcite in which a ( planar ) graph must be partitioned into two disjoint components , @xmath0 and @xmath20 , such that @xmath0 is connected and has maximal total weight .",
    "our results readily imply that this dual problem remains np - hard even on a full grid graph if all weights are nonnegative and the size of @xmath0 is given ; this is independent of whether we constrain @xmath20 to be connected .",
    "it is also related to the well - studied graph cuts , though focus there lies minimizing the number of cut edges connecting @xmath0 and @xmath20 ( e.g. @xcite ) .",
    "vertex weights have been included only as part of the optimization criterion ( e.g. @xcite ) , the other part still being the number of cut edges .",
    "the number of cut edges is not correlated to the complexity of the eventual shape : we can not use this as a trade - off between complexity and resemblance . also , these approaches tend not to require that a partition is connected , and focus on ensuring a certain balance between the two partition sizes . partitioning an unweighted nonplanar graph into connected components that each contain prescribed vertices is known to be np - hard @xcite",
    ".      * polygons . *",
    "a polygon @xmath1 is defined by a cyclic sequence of vertices in @xmath21 .",
    "each pair of consecutive vertices is connected by a line segment ( an edge ) .",
    "a polygon is _ simple _ if no two edges intersect , except at common vertices .",
    "we use @xmath22 to refer to the area of polygon @xmath1 .",
    "the _ complexity _ of a polygon is its number of edges .",
    "we use @xmath23 to refer to the boundary of @xmath1 .",
    "unless mentioned otherwise , polygons are assumed to be simple throughout this paper .",
    "a straight - line graph @xmath24 is defined by a set of vertices @xmath25 in @xmath21 and edges @xmath26 connecting pairs of vertices using line segments .",
    "the graph is _ plane _ if no two edges intersect , except at common vertices . the _ complexity _ of a plane graph is its number of edges .",
    "we call a plane graph a _ ( partial ) grid graph _ if all of its vertices have integer coordinates , and all edges are either horizontal or vertical , having length at least @xmath27",
    "full _ grid graph is a maximal grid graph ( in terms of both vertices and edges ) within some rectangular region ; all edges have length @xmath27 .",
    "a full grid graph represents a tiling of unit squares .",
    "unless mentioned otherwise , graphs are assumed to be plane in this paper .",
    "a _ cycle _ in a graph is a sequence of vertices such that every consecutive pair as well as the first and last vertex in the sequence are connected via an edge .",
    "a cycle is _ simple _ if the sequence does not contain a vertex more than once .",
    "a simple cycle in a plane graph corresponds to ( the boundary of ) a simple polygon .",
    "the _ bends _ of a cycle are the vertices at which the interior angle is not equal to @xmath28 , that is , those that form corners in the polygon it represents .",
    "complexity _ of a cycle is its number of bends .",
    "the frchet distance quantifies the ( dis)similarity between two geometric shapes : a high frchet distance indicates a low similarity .",
    "we define @xmath29 as the continuous function that maps the unit circle onto the boundary of @xmath1 .",
    "let @xmath30 denote the set of all orientation - preserving homeomorphisms on @xmath31 . using @xmath32 to denote the euclidean distance , the frchet distance between two polygons is defined as @xmath33    maximal empty regions of a graph ( i.e. , not containing a vertex in its interior )",
    "are referred to as _ faces_. one face , the outer face , is infinite ; all other faces have bounded area .",
    "faces are said to be adjacent if they share at least one edge .",
    "the dual @xmath34 of graph @xmath2 is defined by a vertex set containing a dual vertex for every face and two dual vertices are connected via a dual edge if the corresponding faces are adjacent .",
    "a face set in @xmath2 is said to be _ connected _ if the corresponding induced subgraph of @xmath34 is connected .",
    "we call a face set _ simply connected _ if the complement of the face set is also connected .",
    "a simply connected face set corresponds to a simple polygon ; a ( nonsimply ) connected face set may have holes .",
    "the symmetric difference between two polygons @xmath1 and @xmath35 is defined as the area covered by precisely one of the polygons .",
    "that is , the symmetric difference is @xmath36 if @xmath37 is composed of pairwise disjoint regions @xmath38 ( e.g. a face set ) , then we may decompose the above formula into @xmath39 .",
    "in this section we consider problem  [ prob : smm ] , simple map matching .",
    "we prove that this problem is np - complete , as formalized in the following theorem .",
    "[ thm : main ] let @xmath2 be a partial grid graph , let @xmath1 be a simple polygon and let @xmath7 .",
    "it is np - complete to decide whether @xmath2 contains a simple cycle @xmath3 with @xmath8 .",
    "the problem is in np since the frchet distance can be computed in polynomial time @xcite and it is straightforward to check simplicity . in this section",
    "we prove that the problem is also np - hard .",
    "we conclude this section by considering the implications of this result on variants of this problem .",
    "we assume @xmath40 in the remainder of this section .",
    "de berg and khosravi  @xcite prove that _ planar monotone 3sat _ is np - complete .",
    "that is , decide whether a 3cnf formula @xmath41 is satisfiable , given the following constraints ( fig .",
    "[ fig : planar3sat](a ) ) :    * clauses are either positive ( only unnegated literals ) or negative ( only negated literals ) ; * a planar embedding for @xmath41 is given , representing variables and clauses as disjoint rectangles ; * variables lie on a single horizontal line ; * positive clauses lie above the variables , negative clauses below ; * links connecting clauses to the variables of their literals are strictly vertical .        .",
    "gray polygons represent gadgets , interact ingvia shared boundaries .",
    "the red lines connect the various gadgets to obtain a simple polygon . ]    for our reduction we construct a simple map matching instance  a partial grid graph @xmath2 and a polygon @xmath1such that @xmath2 contains a simple cycle @xmath3 with @xmath42 if and only if formula @xmath41 is satisfiable .",
    "we use three types of gadgets to represent the variables , clauses and links of @xmath41 : _ variable gadgets _ , _ clause gadgets _ , and",
    "_ propagation gadgets_. our clause gadgets have small fixed dimensions and hence can not be stretched horizontally .",
    "a single bend for the two `` outer '' edges of a clause is sufficient to ensure this ( see fig .  [",
    "fig : planar3sat](b ) ) . in the upcoming sections we first design the gadgets in isolation before completing the proof using the gadgets .",
    "an overview of the eventual result of this construction is given in fig .",
    "[ fig : constructionoverview ] .",
    "each gadget specifies a _ local graph _ ( a part of @xmath2 ) and a _ local curve _ ( a part of @xmath1 ) .",
    "the gadgets interact via vertices and edges shared by their local graphs .",
    "there is no interaction based on the local curve : it is used only to force choices in using edges of the local graph .",
    "if a cycle exists in the complete graph , a _ local path _ in the local graph must have a frchet distance of at most @xmath27 to the local curve .",
    "the local path `` claims '' its vertices and edges : these can no longer be used by another gadget .",
    "this results in _ pressure _ on the other gadget to use a different path .",
    "a gadget has a number of pressure _ ports_. a port corresponds to a sequence of edges in the local graph that may be shared with another gadget .",
    "a port may _ receive _ pressure , indicating that the shared edges and vertices may not be used in the gadget .",
    "similarly , it may _ give _ pressure , indicating that the shared edges and vertices may not be used by any adjacent gadget .",
    "all interaction between gadgets goes via these ports .",
    "the local curves must be joined carefully to ensure that @xmath1 is simple . to this end",
    ", each gadget has two curve _ gates _ that correspond to the endpoints of the local curve .",
    "later , we show how to connect these gates to create a single simple polygon @xmath1 . in the following paragraphs",
    "we describe the three gadgets .",
    "in particular , we take note of the _ specification _ of each gadget : its behavior in terms of its ports ; a bounding polygon that contains the local graph and local curve ; the placement of its two gates and its ports .",
    "these specifications capture all necessary aspects to complete the reduction in section  [ ssec : proof ] . here",
    "we focus on positive clauses ( i.e. , above the variables ) and their edges .",
    "gadgets below are defined analogously , by mirroring vertically .",
    "we present specifications and constructions mostly visually , using the following encoding scheme .",
    "the bounding polygon is given with a black outline ; the ports are represented with thick green lines ; the gates are represented with red dots .",
    "the local graph is given with thick light - blue lines ; the local curve is a red line .",
    "we indicate various local paths using dark - blue lines ; ports that give pressure for a local path are indicated with an outward arrow .",
    "all elements are visualized on an integer grid ( thin gray lines ) , to show that we indeed construct a partial grid graph .",
    "all coordinates are an integer multiple of a half : all vertices are placed on vertices of the grid , exactly halfway an edge or exactly in the center of a cell .    a clause gadget is illustrated in fig .",
    "[ fig : clause_gadget ] .",
    "it has fixed dimensions ; the figure precisely indicates its specification as well as its construction . the gadget admits a local path",
    "only if one of its ports does _ not _ receive pressure .",
    "any local path causes pressure on at least one port ; for each port there is a path that causes pressure only on that port .",
    "the lack of external pressure on a port indicates that the value of the corresponding variable satisfies the clause . there is no local path that avoids all three ports :",
    "if all ports receive pressure , none of the variables satisfies the clause and the gadget does not admit a local path .",
    "the specification and construction of a variable gadget depend on the number of literals .",
    "let @xmath43 denote the maximum of the number of positive and the number of negative literals of the variable .",
    "we assume that @xmath44 : otherwise , it does not occur in any clause .",
    "its bounding polygon , gates and ports are illustrated in fig .",
    "[ fig : var_placement ] for @xmath45 . for higher values of @xmath43",
    ", we increase the width by @xmath46 , to ensure a port of width @xmath47 and a distance of @xmath48 in between ports .",
    "the gadget admits exactly two local paths : `` _ _ true _ _ '' and `` _ _ false _ _ '' .",
    "ports for positive literals ( top side ) give pressure only with the _ false _ path .",
    "ports for negative literals ( bottom side ) give pressure only with the _ true _ path .",
    "in other words , a port gives pressure if the variable does _ not _ satisfy the corresponding clause .    .",
    "the right two figures indicate the two local paths , for @xmath49 . ]    a propagation gadget ( shown in fig .",
    "[ fig : prop_gadget ] ) connects a port of a variable gadget to a port of a clause gadget .",
    "the bounding polygon is a corridor of width @xmath50 with at most one bend : if the link in formula @xmath41 has a bend , then the gadget also has a bend .",
    "the corridor can have any integer height @xmath51 greater than @xmath52 .",
    "if it has a bend , the corridor spans any integer width @xmath53 at least @xmath48 .",
    "the two ports and gates of the gadget are placed as indicated .",
    "the local graph and curve are constructed such that it admits only two local paths ; each puts pressure on exactly one port .",
    "the gadget does not admit a path if both ports receive pressure .",
    "if one port receives pressure , the other must give pressure : it propagates pressure .",
    "we are now ready to construct graph @xmath2 and polygon @xmath1 based on formula @xmath41 . fig .",
    "[ fig : constructionoverview ] illustrates this construction .",
    "first , we place all variable gadgets next to one another , in the order determined by @xmath41 , with a distance of @xmath47 in between consecutive variables .    using the @xmath54-coordinates in the embedding of @xmath41",
    ", we sort the positive clauses to define a _ positive order _ @xmath55 .",
    "we place the gadget for clause @xmath56 at a distance @xmath57 above the variables .",
    "analogously , we use a _ negative order _ to place the negative clauses below the variables .",
    "horizontally , the clause gadgets are placed such that the bottom port lines up with the appropriate port on the variable gadget of the middle literal .    finally , we place a propagation gadget for each link in @xmath41 to connect the clause and variable gadgets . by placement of the clauses ,",
    "any propagation gadget has height at least @xmath52 and a link without a bend can be represented by a propagation gadget without any bends .",
    "as ports are at least distance @xmath48 apart , the width of a propagation gadget with a bend exceeds @xmath48 .",
    "a propagation gadget does not overlap other gadgets : the placement of clauses would then imply that the provided embedding for @xmath41 is not planar .    we have composed the various gadgets in polynomial time",
    "however , we do not yet have a simple polygon .",
    "we must `` stitch '' the local curves together ( in any order ) to create polygon @xmath1 . to this end",
    "we first define three subcurves : @xmath58 for the variable gadgets ; @xmath59 for the positive clause gadgets and their propagation gadgets ; and @xmath60 for the negative clause gadgets and their propagation gadgets .",
    "below is a detailed description of how these are constructed .",
    "[ fig : constructionoverview ] visually illustrates the result .    for @xmath58",
    "we first define point @xmath61 and @xmath62 at distance @xmath50 outward from the leftmost and rightmost variable gadget respectively , both at the height of the gates .",
    "we connect @xmath61 to the left gate of the leftmost variable , connect the matching gates of consecutive variables , and then connect the right gate of the rightmost variable to @xmath62 .",
    "subcurve @xmath59 is constructed by defining a points @xmath63 and @xmath64 , similarly as for @xmath58 , but at the height of the `` positive '' propagation gadgets ; @xmath63 is placed at distance @xmath48 instead .",
    "analogous to @xmath58 , we first create the straight traversal from @xmath63 to @xmath64 through all positive propagation gadgets .",
    "we then include each positive clause in this subcurve , right before it `` enters '' the propagation gadget for its leftmost literal .",
    "this is done by going up starting at distance @xmath65 before this gadget to two above the top side of the clause gadget , and then connecting to its right gate .",
    "we go back from its left gate , and go down at distance @xmath27 before the propagation gadget .",
    "now , @xmath59 traverses all positive clauses and their propagation gadgets .",
    "subcurve @xmath60 is constructed analogous to @xmath59 , though @xmath63 is placed again at distance @xmath50 .    by placement of the gadgets , these subcurves are simple polygonal curves between their respective endpoints ( @xmath66 and @xmath67 ) and do not intersect each other . to obtain a single simple polygon , we must now connect the endpoints of the three subcurves .",
    "we connect @xmath62 to @xmath64 and @xmath61 to @xmath68 using vertical segments .",
    "we connect @xmath69 to @xmath63 , by routing an edge at distance @xmath47 below the lowest negative clause .",
    "we now have a simple polygon @xmath1 ; we define @xmath2 as the union of all local graphs and the parts of @xmath1 not contained in a gadget .",
    "we now have constructed graph @xmath2 and polygon @xmath1 .",
    "we must argue that the complexity is polynomial and that @xmath41 is satisfiable if and only if a simple cycle @xmath3 exists in @xmath2 with @xmath42 .",
    "let @xmath15 denote the number of variables , and @xmath14 the number of clauses in @xmath41 .",
    "the width of the construction is at most @xmath70 where @xmath71 is the number of occurrences of the @xmath72^th^ variable . as @xmath73 ,",
    "the width of the construction is @xmath74 .",
    "the height of the construction is at most @xmath75 , where @xmath76 is the number of positive clauses and @xmath77 the number of negative clauses ; since @xmath78 , the height is @xmath79 . as all coordinates are required to be an integer multiple of a half , this implies a polynomial bound on the complexity of @xmath2 and @xmath1 .",
    "assume that @xmath41 is satisfiable and consider some satisfying assignment .",
    "we argue the existence of a simple cycle @xmath3 . for each variable gadget",
    "we choose either the `` true '' or `` false '' local path , matching the assigned truth value .",
    "this gives pressure on a number of propagation gadgets : we choose the only remaining local path for these , causing pressure on the corresponding clauses .",
    "for the other propagation gadgets , we choose the path such that it gives pressure at the variable and may receive pressure at the clause . since the truth values of the variables originate from a satisfying assignment , at most two ports of any clause receive pressure .",
    "hence , the clause admits a local path as well .",
    "we concatenate the local paths with the paths that are used to stitch together the local curves to obtain a simple cycle @xmath3 . by construction @xmath80",
    "is at most @xmath27 .    now , assume that @xmath2 contains a simple cycle @xmath3 with @xmath42 . by construction ,",
    "cycle @xmath3 traverses all gadgets and contains exactly one local path for each gadget .",
    "this local path ends at the gates of the gadget and the frchet distance between this local path and the local curve is at most @xmath27 . for a variable",
    ", this local path corresponds to either the true or false state .",
    "this directly yields the truth values of the variables .",
    "each clause gadget also has a local path and hence one or more of its ports give pressure . since the propagation gadgets have a local path , the pressure from the clauses results in pressure on a variable gadget .",
    "this pressure ensures that a variable that receives pressure from a clause is in a state satisfying the clause .",
    "hence , the truth values found from the variables yield a satisfying assignment for formula @xmath41 .",
    "this concludes the proof for theorem  [ thm : main ] , showing that simple map matching is indeed np - complete .",
    "this result and its construction have a number of implications , as discussed below .      * approximation . * with the np - hardness result above , we may want to turn to approximation algorithms .",
    "however , a simple argument shows that approximation is also np - hard .",
    "[ cor : noapprox ] let @xmath2 be a partial grid graph of complexity @xmath14 and let @xmath1 be a simple polygon of complexity @xmath15 .",
    "it is np - hard to approximate the minimal @xmath80 of any simple cycle @xmath3 in @xmath2 within any factor of @xmath81 where @xmath82 is a polynomial in @xmath15 and @xmath14 .    for an unsatisfiable formula",
    "the minimal frchet distance of a simple cycle in the constructed graph is significantly larger than @xmath27 .",
    "suppose that this minimal frchet distance is strictly greater than @xmath83 .",
    "any @xmath83-approximation algorithm for simple map matching is able to decide satisfiability of planar monotone 3sat formulas .",
    "thus , unless p@xmath9np , no @xmath83-approximation algorithm can have polynomial execution time .    to determine the exact value of @xmath83",
    ", we wish to determine at which value a local path becomes admissible that does not correspond to the desired behavior of the construction .",
    "this occurs at @xmath84 : the clause gadget breaks , admitting a local path that does not pass through any of the ports .",
    "however , it is straightforward to lengthen the gadgets to increase the value of @xmath83 . this does not increase the combinatorial complexity of @xmath2 and @xmath1 , thus maintaining a polynomial - size instance .",
    "the construction now spans an area @xmath85 by @xmath86 , where @xmath87 and @xmath88 are the number of variables and clauses in formula @xmath41 .",
    "thus , we require @xmath89 to encode the coordinates in polynomial space .",
    "r0.3     * counting bends . * for schematization",
    "we do not wish to just find some cycle in @xmath2 , but also optimize or bound its complexity , measured in the number of bends .",
    "if @xmath2 is a partial grid graph ( corresponding to rectilinear schematization ) , any bend is either a left or right turn .",
    "every rectilinear polygon has a certain _ bend profile _ :",
    "the sequence of left and right bends in counterclockwise order along its boundary .",
    "the bend profile gives no information about edge lengths : seemingly different polygons have the same bend profile ( see fig .  [",
    "fig : turnprofile ] ) . unfortunately , even with a given bend profile , the problem remains np - complete .",
    "however , in this reduction the bend profile has length proportional to the complexity of the formula .",
    "it does not prove that no fixed - parameter - tractable ( fpt ) algorithm exists .",
    "[ cor : nobends ] let @xmath2 be a partial grid graph , let @xmath1 be a simple polygon , let @xmath7 and let @xmath90 be a bend profile .",
    "it is np - complete to decide whether @xmath2 contains a simple cycle @xmath3 that adheres to @xmath90 with @xmath8 .    in all constructions , the bends made by the various local paths are identical .",
    "we can easily derive a bend profile that must lead to a simple cycle , if the formula is satisfiable .",
    "* area preservation .",
    "* suppose we want an area - preserving solution , i.e. , the area of cycle @xmath3 must be equal to that of @xmath1 .",
    "a simple argument proves that our reduction can be extended to prove that this more constrained problem is also np - complete .",
    "[ cor : smm - area ] let @xmath2 be a partial grid graph , let @xmath1 be a simple polygon and let @xmath7 .",
    "it is np - complete to decide whether @xmath2 contains a simple cycle @xmath3 with @xmath8 and @xmath91 .",
    "[ fig : constructionoverview_complement ] at the end of the paper shows an overview of the modified construction .",
    "the key observation is that the original construction is duplicated , but inside and outside the polygon have been inverted .",
    "this is achieved by connecting the endpoints of the subcurves @xmath92 , @xmath93 and @xmath94 , slightly differently , i.e. , with those of the duplicate .",
    "any solution @xmath3 coincides with @xmath1 outside the gadgets : only the local paths change the area of @xmath3 .",
    "hence , any change in area resulting from a local path in one of the gadgets in the one copy can be counteracted by choosing the exact same local path in the other copy .",
    "* variants . *",
    "finally , there are a number of variants of the problem that can be proven to be np - complete via the same construction . as strict monotonicity in the homeomorphism",
    "is not crucial for the reduction , the problem under the _ weak _ frchet distance is also np - complete .",
    "the clause gadget admits an extra local path , one that still exhibits the desired behavior .",
    "the problem is also np - complete under the _ discrete _ ( weak ) frchet distance , as we may sample the graph and polygon appropriately .",
    "not every grid location needs a vertex , preserving the inapproximability result of corollary  [ cor : noapprox ] . as all interaction between gadgets",
    "is based on edges , it is also np - complete to determine the existence of an `` edge - simple '' cycle that uses each edge at most once ( but vertices may be used more than once ) .",
    "it is not essential in any of the above ( except for area preservation ) for @xmath1 to be a closed curve : the same construction works for open curves , and thus these variants are np - hard as well .",
    "with the negative results using the frchet distance , we now consider the symmetric difference via problem  [ prob : cfs ] , connected face selection .",
    "we prove that this problem is also np - complete , even on a full grid graph , as captured in the following theorem .",
    "[ thm : cfs ] let @xmath2 be a full grid graph , let @xmath1 be a simple polygon and let @xmath11 .",
    "it is np - complete to decide whether @xmath2 contains a connected face set @xmath0 with @xmath12 .",
    "the problem is obviously in np , since the symmetric difference and connectedness can be straightforwardly verified in polynomial time .",
    "here we show that it is also np - hard .",
    "we conclude this section with some implications of this result",
    ".      * rectilinear steiner tree . *",
    "the rectilinear steiner tree problem is formulated as follows : given a set @xmath95 of @xmath15 points in @xmath21 , is there a tree @xmath90 of total edge length at most @xmath96 that connects all points in @xmath95 , using only horizontal and vertical line segments ? vertices of @xmath90 are not restricted to @xmath95 .",
    "this problem was proven np - complete by garey and johnson  @xcite .",
    "hanan  @xcite showed that an optimal result must be contained in graph @xmath97 corresponding to the arrangement of horizontal and vertical lines through each point in @xmath95 ( see fig .  [",
    "fig : cfs_sketch](a ) ) .",
    "subsequently , this was called the _ hanan grid _ ( e.g. @xcite ) .",
    "we call a vertex of @xmath97 a _ node _ if it corresponds to a point in @xmath95 and a _ junction _ otherwise .",
    "as the problem is scale invariant , we assume @xmath98 .",
    "all edges in @xmath97 must be shorter than @xmath27 : otherwise , the answer is trivial  no such tree exists .",
    "( dark points ) .",
    "( b ) @xmath2 consists of unit square cells : node - cells are colored black , junction - cells white , edge - cells gray ; face - cells are hatched .",
    "( c ) `` skeleton '' @xmath99 for polygon @xmath1 .",
    "( d ) sketch of polygon @xmath1 constructed on top @xmath2 . ; light blue areas indicate flexible parts in the construction that represent edge lengths . ]",
    "we must transform point set @xmath95 into a full grid graph @xmath2 , a polygon @xmath1 and a value @xmath11 .",
    "we construct @xmath2 such that each _ cell _ ( face of @xmath2 ) corresponds to a vertex ( _ node - cell _ or _ junction - cell _ ) , an edge ( _ edge - cell _ ) , or a bounded face ( _ face - cell _ ) of @xmath97 ; see fig .",
    "[ fig : cfs_sketch](b ) .",
    "we then construct polygon @xmath1 by defining a part of the polygon inside all cells , except for the face - cells : @xmath1 does not overlap these . to structure @xmath1",
    "we use a _ skeleton _",
    "@xmath99 , a tree spanning the non - face - cells in the dual of @xmath2 ( fig .",
    "[ fig : cfs_sketch](c ) ) .",
    "recall that the symmetric difference between @xmath1 and a face set @xmath100 may be computed as @xmath101 .",
    "as @xmath102 , we define the _ weight _ of a cell @xmath83 in @xmath2 as @xmath103 . hence , the symmetric difference is @xmath104 .",
    "we set the desired weight @xmath105 for cell @xmath83 to :    * if @xmath83 is a node - cell ; * if @xmath83 is a junction - cell ; * if @xmath83 is an edge - cell , where @xmath106 is the length of the corresponding edge @xmath107 in @xmath97 ; * if @xmath83 is a face - cell .",
    "given a desired weight @xmath105 for cell @xmath83 , the area of overlap @xmath108 is @xmath109 .",
    "every cell has @xmath108 area of @xmath1 inside ; @xmath22 equals @xmath110 .",
    "we call @xmath111 the _ local polygon _ of @xmath83 .",
    "we set @xmath112 .",
    "that is , the sum of weights is at most @xmath113 .",
    "this can be achieved only if the face set contains all node - cells and no face - cell .",
    "we design every cell such that the desired weight is achieved . for a face - cell , this is trivial : @xmath114 , hence @xmath115 and we keep @xmath1 disjoint from this cell . for all other cells @xmath1 to cover some fraction of its interior , as dictated by @xmath108 .",
    "skeleton @xmath99 dictates how to connect the local polygons ; we ensure that at least the middle @xmath116 of the shared edge ( the _ connector _ ) is covered .",
    "a local polygon should never touch the corners of its cell .",
    "node- and junction - cells may have up to four neighbors in @xmath99 . covering the four connectors is done with a cross shape , covering @xmath117th of the cell s area . by thickening this cross",
    ", we can straightforwardly support @xmath108 with @xmath118 , ensuring not to touch the corners or edges shared with cells that are not adjacent in @xmath99 .",
    "a node - cell has weight @xmath119 ; @xmath120 .",
    "a junction - cell has weight @xmath121 ; @xmath122 . hence ,",
    "both can be represented ( see fig .  [",
    "fig : cfs_design](a  b ) ) .",
    "an edge - cell has weight @xmath123 and thus should cope with weights between zero and a half ; @xmath108 lies between @xmath124 and @xmath125 .",
    "any edge - cell has degree @xmath27 or @xmath47 in @xmath99 ; if it has degree @xmath47 , the neighboring cells are on opposite sides .",
    "hence , @xmath126 can be trivially handled by creating a rectangular shape that touches exactly the necessary connectors .",
    "@xmath122 is dealt with by widening this rectangle within the cell ; any intermediate weight is handled by interpolating between these two .",
    "this is illustrated in fig .",
    "[ fig : cfs_design](c ) .     by @xmath1 .",
    "( b ) junction - cells are covered for @xmath127 by @xmath1 .",
    "( c ) between @xmath116 ( dark blue ) and @xmath127 ( dark and light blue ) of edge - cells are covered by @xmath1 . ]",
    "we now have graph @xmath2 , polygon @xmath1 and a value for @xmath128 .",
    "we must prove that the reduction is polynomial and that @xmath95 has a rectilinear steiner tree of length at most @xmath27 , if and only if there is a connected face set @xmath0 in @xmath2 such that @xmath12 .",
    "the former is trivial by observing that : @xmath1 has @xmath129 complexity in each of the @xmath130 cells ; computing tree @xmath90 for guiding the construction of @xmath1 can be done with for example a simple breadth - first search .",
    "suppose we have a rectilinear steiner tree @xmath90 of length at most @xmath27 in the hanan grid .",
    "we construct a face set @xmath0 as the union of all cells corresponding to vertices and edges in @xmath90 . by definition of @xmath90 , this must contain all node - cells and can not contain face - cells . as junction - cells",
    "have no weight , the total weight of @xmath0 is @xmath131 where @xmath132 is the cell of @xmath2 corresponding to edge @xmath107 . by assumption @xmath133 : the total weight is at most @xmath113 .",
    "thus , the symmetric difference for @xmath0 is at most @xmath134 .",
    "suppose we have a connected face set @xmath0 in @xmath2 such that @xmath12 .",
    "the total weight is thus @xmath135 .",
    "since face - cells have weight @xmath27 and only node - cells have negative weight , being @xmath119 , this can be achieved only if @xmath0 contains all node - cells and no face - cells .",
    "in particular , the sum of the weights over all edge - cells is at most @xmath125 .",
    "thus , the subgraph of @xmath97 described by the selected cells must be connected , contain all nodes of @xmath95 , and have total length at most @xmath27 .",
    "if this subgraph is not a tree , we can make it a tree , by leaving out edges ( further reducing the total length ) , until the subgraph is a tree .      *",
    "simply connected .",
    "* the same reduction works for a _ simply _ connected face set , as steiner tree @xmath90 can not contain cycles and a simply connected face set in @xmath2 readily implies a tree .",
    "let @xmath2 be a full grid graph , let @xmath1 be a simple polygon and let @xmath11 .",
    "it is np - complete to decide whether @xmath2 contains a simply connected face set @xmath0 with @xmath12 .",
    "the face set obtained from a steiner tree must be simply connected , since @xmath90 can not contain cycles .",
    "in addition , a simply connected face set in @xmath2 ( that does not contain a face - cell ) directly describes a tree",
    ".    * area preservation . * with an area - preservation constraint the problem remains np - complete .",
    "we only sketch an argument ; full proof can be found in appendix  [ app : cfs - impl ] .",
    "this readily implies that variants prescribing the number of faces or total area via a parameter are also np - hard .",
    "[ cor : cfs - area ] let @xmath2 be a full grid graph , let @xmath1 be a simple polygon and let @xmath11 .",
    "it is np - complete to decide whether @xmath2 contains a ( simply ) connected face set @xmath0 with @xmath12 and @xmath136 .",
    "we assume for simplicity that no points in @xmath95 share an @xmath137- or @xmath54-coordinate : @xmath97 is then exactly an @xmath138 grid .",
    "the number of cells we need to represent a steiner tree spanning @xmath95 is at least @xmath139 and at most @xmath140 .",
    "thus , we need @xmath141 , as to allow sufficiently many cells to be selected in the original construction .    to achieve the necessary area for @xmath1 , we are going to add more cells to the construction , each with @xmath122 and thus @xmath142 .",
    "we add @xmath143 such cells . due to their weight",
    ", their presence in or absence from face set @xmath0 has no effect on the symmetric difference .",
    "we need the new cells to not interfere with the original construction .",
    "therefore , they should be adjacent only with one of the node - cells on the boundary of the construction .",
    "thus we also add @xmath144 cells weight @xmath114 to separate the new cells from the original cells .",
    "[ fig : cfs_sketcharea ] illustrates an overview of this extended construction and its new skeleton .",
    "note that the newly added cells have the same weights as the original junction - cells and face - cells ; the construction of @xmath1 thus extends straightforwardly .",
    "if we are given some connected face set ( that now uses a fixed number of cells ) that has sufficiently low symmetric difference , we still know that it must span all the node - cells and thus encode a rectilinear steiner tree of sufficiently low length .    to transform a rectilinear steiner tree @xmath90 to a connected face set , we must argue that we can always select the correct number of cells .",
    "first , let us bound the size of @xmath22 .",
    "since edges have @xmath108 in between @xmath124 and @xmath125 , it is easy to derive that the total area @xmath145 of the original construction satisfies @xmath146 ; this simplifies to @xmath147 .",
    "the new cells add @xmath148 area .",
    "thus , @xmath149 is bounded by the interval @xmath150 $ ] . hence , the number of cells we need to select is more than @xmath151 and strictly less than the number of newly added cells with @xmath142",
    ". therefore , we simply apply the original transformation , but use the new cells as `` overflow '' for any cells in excess of those needed to represent @xmath90 .",
    "the above assumes that the eventual area of @xmath1 is an integer ; since it depends on the edge lengths in @xmath97 , it likely is not .",
    "this can be remedied by either assuming we are allowed to round the area of @xmath1 , or by letting @xmath1 extend slightly into the outer face to make it integer .",
    "note that the weight of the outer face is always infinite for a bounded @xmath1 .",
    "alternatively , we can use any weight for node - cells , strictly in between @xmath125 and @xmath27 .",
    "more general graph classes ( e.g. plane graphs ) are also np - hard ; this is readily implied by theorem  [ thm : cfs ] .",
    "finally , the problem remains np - complete for graphs representing hexagonal and triangular tilings ( by combining two triangles into one slanted square ) .",
    "schematic maps are an important tool to visualize data with a geographic component .",
    "we studied discretized approaches to their construction , by restricting solutions to a plane graph @xmath2 .",
    "this promotes alignment and uniformity of edge lengths and avoids the risk of visual collapse .",
    "we considered two variants : _ simple map matching _ using the frchet distance and _ connected face selection _ using the symmetric difference .",
    "unfortunately , both turn out to be np - complete ; the former is even np - hard to approximate .",
    "the proofs readily imply that a number of variants are np - hard as well , even with an area - preservation constraint .",
    "it remains open whether ( general ) simple map matching is fixed - parameter tractable .",
    "moreover , there is quite a gap between the graph necessary for the reduction and the graphs that would be useful in the context of schematization ( e.g. full grid graphs , triangular tilings ) .",
    "are such instances solvable in polynomial time ? for connected face selection , we know hardness on such constructed graphs , but it remains open whether approximation or fpt algorithms are possible . in both methods the reduction needs rather convoluted polygons , very unlike the geographic regions that we want to schematize : do realistic input assumptions help to obtain efficient algorithms ?",
    "recently , bouts  et al .",
    "@xcite have show that any full grid graph admits a simple cycle with frchet distance bounded using a realistic input model , called narrowness .",
    "however , this does not readily preclude the decision problem from being np - hard , even for polygons that have bounded narrowness .",
    "the frchet distance is a bottleneck measure and thus results obtained via simple map matching may locally deviate more than necessary , even when minimizing the number of bends . buchin  et al .",
    "@xcite introduced `` locally correct frchet matchings '' to counteract this flaw with the frchet distance .",
    "can we extend this concept to simple map matching ?",
    "the author would like to thank : bettina speckmann and her applied geometric algorithms group , kevin buchin , bart jansen , arthur van goethem , marc van kreveld and aidan slingsby for inspiring discussions on the topic of this paper ; gerhard woeginger for pointing out the exponential bound in corollary  [ cor : noapprox ] .",
    "the author was partially supported by the netherlands organisation for scientific research project 639.023.208 and marie skodowska - curie action msca - h2020-if-2014 656741 .                                                                    c.  wenk ,",
    "r.  salas & d.  pfoser . addressing the need for map - matching speed : localizing global curve - matching algorithms . in _ proc .",
    "conf . on sci . & stat .",
    "database management _ ,",
    "pages 379388 , 2006 ."
  ],
  "abstract_text": [
    "<S> to produce cartographic maps , simplification is typically used to reduce complexity of the map to a legible level . with schematic maps , </S>",
    "<S> however , this simplification is pushed far beyond the legibility threshold and is instead constrained by functional need and resemblance . moreover , </S>",
    "<S> stylistic geometry is often used to convey the schematic nature of the map . in this paper </S>",
    "<S> we explore discretized approaches to computing a schematic shape @xmath0 for a simple polygon @xmath1 . </S>",
    "<S> we do so by overlaying a plane graph @xmath2 on @xmath1 as the solution space for the schematic shape . </S>",
    "<S> topological constraints imply that @xmath0 should describe a simple polygon . </S>",
    "<S> we investigate two approaches , _ simple map matching _ and _ connected face selection _ , based on commonly used similarity metrics .    with the former , @xmath0 is a simple cycle @xmath3 in @xmath2 and we quantify resemblance via the frchet distance . </S>",
    "<S> we prove that it is np - hard to compute a cycle that approximates the minimal frchet distance over all simple cycles in a plane graph @xmath2 . </S>",
    "<S> this result holds even if @xmath2 is a partial grid graph , if area preservation is required and if we assume a given sequence of turns is specified .    with the latter </S>",
    "<S> , @xmath0 is a connected face set in @xmath2 , quantifying resemblance via the symmetric difference . </S>",
    "<S> though the symmetric difference seems a less strict measure , we prove that it is np - hard to compute the optimal face set . </S>",
    "<S> this result holds even if @xmath2 is full grid graph or a triangular or hexagonal tiling , and if area preservation is required . </S>",
    "<S> moreover , it is independent of whether we allow the set of faces to have holes or not . </S>"
  ]
}
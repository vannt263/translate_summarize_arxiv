{
  "article_text": [
    "knot theorists have long been interested in _ regular projections _ of knots , in which all singular points of the projection are _ regular _ crossing points ; specifically , there are two strands of the knot which cross each other . in @xcite , adams introduces the concept of a triple crossing knot projection , in which every singular point of the projection is a triple crossing , a singular point at which three strands cross each other so that each strand bisects the crossing . in his paper",
    ", adams extends this idea to a _ multi - crossing _ , as defined below :    a _ multi - crossing _ of multiplicity @xmath2 , also called an _ @xmath2-crossing _ , is a singular point at which @xmath2 strands cross each other so that each strand passes straight through the crossing , thus bisecting the crossing .",
    "an @xmath2-crossing projection of a knot is a projection in which the only singular points are @xmath2-crossings .    in @xcite , adams , shinjo , and tanaka",
    "investigate _ complementary regions _ of regular reduced knot projections .",
    "a complementary region in this sense is an extension of the graph theoretic concept ; a regular reduced knot projection can be viewed as a planar @xmath3-valent graph . projecting that graph on a sphere partitions the sphere into various faces , called complementary regions .",
    "we can identify these faces by the number of edges around each face , saying that a face with @xmath7 sides around the edge is an @xmath7-gon .",
    "this paper will further extend the concept of complementary regions to @xmath2-crossing projections of knots .",
    "an @xmath2-crossing projection can be seen as a planar @xmath8-valent graph , which will similarly partition a sphere into faces , which we call complementary regions .",
    "a strictly increasing sequence of integers @xmath9 is _ realized _ by a knot @xmath10 if @xmath10 has some projection @xmath11 so that the complementary regions of @xmath11 are @xmath12-gons for some @xmath13 .",
    "such a sequence is _",
    "universal for @xmath2-crossing projections _ if every knot has some @xmath2-crossing projection which realizes the sequence .",
    "the paper will rely heavily on the following fact :    let @xmath11 be an @xmath2-crossing knot projection .",
    "then there exists a choice of crossing data that makes @xmath11 the trivial knot .    pick a point of @xmath11 and an orientation .",
    "beginning at @xmath11 , follow the knot along the orientation . consider a crossing .",
    "choose the first strand that passes through the crossing to be the top most strand , choose the second strand that passes through the crossing to be the second highest strand of the crossing , and continue until the final pass through the crossing .",
    "do this for each crossing .",
    "this yields a trivial knot .",
    "this paper will prove the following theorem :    for all @xmath6 , the sequence @xmath14 is universal for @xmath2-crossing knot projections .",
    "the proof of this is broken into several steps .",
    "section 2 will prove this case for @xmath15-crossing projections .",
    "section 3 will generalize the results of section 2 and prove this case for @xmath16-crossing projections , for all @xmath17 .",
    "section 4 will further generalize to @xmath18 and @xmath19-crossing projections where @xmath20 , and section 5 will prove the case for @xmath3-crossing projections .",
    "notice that the complementary regions of a knot projection do not depend on the crossing data of the knot .",
    "thus this paper will frequently represent knots without explicit crossing data .",
    "consider the knot projection of figure [ fig:3template ] .",
    "it realizes the sequence @xmath21 and has a hexagonal central region tiled by equilateral triangles .",
    "we will show that for any size of central hexagon , there exists a knot projection of this form .",
    "[ 3template ] for any @xmath22 , there exists a @xmath15-crossing knot projection which has a hexagonal central area tiled by equilateral triangles , with @xmath2 triangles along each edge of the hexagon , and which realizes the sequence ( 1 , 3 ) .",
    "consider a hexagon composed entirely of equilateral triangles with @xmath2 triangles along each edge of the triangle . to ensure that each vertex is a 3-crossing ,",
    "let three strands emerge outside each corner of the hexagon , and let two strands emerge from the hexagon at each point where two triangles meet along the edge of the hexagon .",
    "we call these strands _ tail edges_. thus , there are @xmath23 tail edges around the edge of the hexagon .",
    "consider the upper - right corner of the hexagon .",
    "label the clockwise - most tail edge @xmath24 .",
    "continue clockwise around the edge of the hexagon , labeling the strands @xmath25 , as in figure [ fig : generaltemplate ] .    on the exterior of the hexagon",
    ", we attach according to the rules : @xmath26 for all @xmath27 . across the hexagon",
    ", we get the following relations : @xmath28 for odd values of @xmath29 , we get the following relations : @xmath30 for @xmath31 . for odd values of @xmath32",
    ", we get the following relations : @xmath33 for @xmath34 .",
    "this gives us relations for all values of @xmath35 and @xmath36 .",
    "choose an orientation .",
    "following a strand , we obtain the sequence of table [ table:3crossingsequence ] .",
    "notice that the first line consists of all @xmath37 , the second line consists of all @xmath38 @xmath39 @xmath40 , @xmath41 , and the last line consists of all @xmath42 @xmath43 @xmath44 @xmath45 .",
    "since this sequence therefore contains all exterior loops and all straight lines through the hexagon , this is a single strand that covers the entire projection , so the projection is a knot .    given this knot projection , we can choose orderings on the strands at each crossing so that the knot is the unknot .",
    "we will call an unknot of this type of projection a _ 3-crossing template knot_. notice that all 3-crossing template knots are composed of three monogons and many triangles .",
    "the sequence @xmath14 is universal for all 3-crossing knots .",
    "[ thm:3crossing ]    given a knot @xmath10 , consider a regular polygonal projection @xmath11 of @xmath10 so that all the line segments composing the knot are horizontal or vertical lines .",
    "lay @xmath11 on a square grid .",
    "we may scale @xmath11 and the grid as necessary to ensure that the intersections and corners of @xmath11 lie in the center of a grid square ; we may further ensure that there are at least two consecutive squares in a single row of our grid such that @xmath11 intersects them as only a single horizontal strand in both squares .",
    "transpose the knot to the left by half a square and down by half a square , and bisect the squares of this grid by parallel diagonal lines with negative slope , creating a triangular grid .",
    "note that each corner and intersection of @xmath46 is located on a lower left triangle .",
    "shear this grid and knot @xmath47 to the right to obtain an equilateral triangle grid on which @xmath11 is overlaid .",
    "thus , given a sufficiently large template knot , we can lay a regular projection of our knot over the template knot so that the corners and intersections of the knot occur on alternating triangles in the template knot .",
    "there are four types of triangles that can occur in this process : ( a ) a corner of the original knot , ( b ) two uncrossing strands of the original knot ( this occurs up and to the right of a crossing of the original knot ) , ( c ) a crossing of the original knot , and ( d ) a single strand of the original knot .",
    "these are depicted in figure [ fig : knotontemplate ] .",
    "0.3    0.3    0.3    0.3    since triangles of type [ fig : trianglewithcorner ] may be removed by a reidemeister ii move , we need not consider triangles of this type .",
    "take a copy of @xmath11 and lay it next to @xmath11 closely enough that all the edges emerge from the same side of a triangle as the first knot , but change the crossing data in the copy so that it is the trivial knot .",
    "we will call this trivial copy the _ doubling knot _ , and we will call our first knot the _",
    "original knot_. pick a triangle and perform a reidemeister ii move so that the intersections with the doubling knot and the original knot occur precisely at the intersection of the original knot and the template knot .",
    "this turns these intersections into 3-crossings . at a crossing of our original knot with itself ,",
    "perform a reidemeister ii move as in the figure [ fig : trianglewithdoubledcrossing ] .",
    "this produces three types of triangles , as shown in figure [ fig : doubledknot ] .",
    "0.3    0.3    0.3    there is only one case which produces a 5-gon .",
    "this can be altered using the method shown in figure [ fig : fixingthe5gon ] .",
    "0.3    0.3    now notice that the method of reidemeister ii may require the doubling knot to traverse the original knot twice before rejoining with itself .",
    "this is impossible , though , as we show now .",
    "bicolor the triangles of the template .",
    "choose an orientation on the original knot and pick a point on the doubling knot .",
    "we may assume this point is left of the original knot , when following the orientation , and in a black triangle .",
    "at each intersection of the original knot with itself or the template knot , the doubling knot switches to the opposite side . in a triangle with a crossing ,",
    "the doubling knot starts to the left , switches to the right , and then returns to the left of the original knot before exiting the triangle .",
    "thus , at each crossing of the original knot with the template , the doubling switches from left to right when exiting a black triangle , and from right to left when exiting a white triangle .",
    "thus the doubling knot must return to its starting position .",
    "now we need only compose the original knot with the template and with the doubling knot . compose the original knot with the doubling knot in the manner depicted in figure [ fig : compositionwithdouble ] , and compose the original knot with the template knot in the manner depicted in figure [ fig : compositionwithtemplate ] .    0.3    0.3    0.3    0.3    0.3    0.3    0.3    notice that we need at least two consecutive triangles as in figure [",
    "fig : trianglewithsinglestranddoubled ] .",
    "however , this is guaranteed by the requirement that the square grid be fine enough to contain two consecutive squares in a row that contain only single horizontal strands .",
    "this section will prove that all @xmath48-crossing projections realize the sequence @xmath5 , for all @xmath49 .",
    "this proof relies on the following method , which we will call the _ doubling method_. this method is a generalization of the doubling used in the above proof .",
    "given an @xmath2-crossing knot projection @xmath11 , take a copy @xmath46 of @xmath11 with crossing data changed so that @xmath46 is trivial . lay @xmath46 directly on top of @xmath11 , and perturb @xmath46 slightly so that @xmath46 touches @xmath11 only at crossing points , and @xmath46 travels straight through the crossing .",
    "if there are an even number of crossings in @xmath11 or if @xmath2 is even , this yields a @xmath50-crossing link projection of @xmath11 and a trivial knot .",
    "if there are an odd number of crossings in @xmath11 and @xmath2 is odd , this yields a @xmath50-crossing projection of @xmath11 , since this will cause @xmath46 and @xmath11 to be composed .",
    "we can use this method to obtain a @xmath48-crossing template knot , as shown in figure [ fig:3ntemplate ] .",
    "[ lem:3ntemplate ] there exists a @xmath48-crossing knot projection with arbitrarily large central hexagonal region tiled by equilateral triangles bounded by bigons , which realizes the sequence @xmath51 .",
    "take a template knot .",
    "notice that if there are @xmath7 triangles along a side of the hexagon , then there are @xmath52 crossings , which is an odd number of crossings . using the doubling method , we obtain a @xmath53-crossing projection of the trivial knot .",
    "iterate this process by applying the doubling method to the original template knot so that each doubling knot does not touch the other doubling knots except at crossing points of the original template knot .",
    "this gives a @xmath54-crossing projection of the trivial knot . repeating this yields the desired @xmath48-crossing knot projection for any value of @xmath2 .",
    "we will call a knot projection of this type , with crossing data selected to make it the trivial knot , a _ @xmath48-crossing template knot_. we will also use the move displayed in figure [ fig : looptrick ] , which we call the _ loop trick_. this takes two strands and introduces a trivial @xmath2-crossings between the two strands .",
    "the loop trick will be used to replace @xmath55-gons with faces with less numbers of sides .",
    "0.3    0.3    0.3    [ thm:3ncrossing ] the sequence @xmath5 is universal for @xmath48-crossing projections .    given a knot @xmath10 .",
    "begin with a @xmath48-crossing template knot @xmath56 as constructed in lemma [ lem:3ntemplate ] .",
    "lay a rectilinear projection @xmath11 of @xmath10 on the template as in the @xmath15-crossing case .",
    "double this knot .",
    "take a trivial copy of @xmath11 , named @xmath46 , and lay it on top of @xmath11 .",
    "perturb @xmath46 slightly so that it crosses @xmath11 only at intersections of @xmath11 and @xmath56 .",
    "the only cases in which @xmath11 crosses itself are in triangles of type [ fig : trianglewithcrossing ] .",
    "perturb @xmath46 as in figure [ fig : trianglewithdoubledcrossing ] .",
    "notice this adds one to the multiplicity of each intersection of @xmath11 with @xmath56 .",
    "repeat this doubling until the multiplicity of each such crossing is @xmath48 .    after this process",
    ", there are three types of triangles , as above .",
    "there is one case of a @xmath55-gon , which can be fixed using the loop trick .",
    "this yields a link projection of several trivial doubling knots , the original knot , and the trivial template knot .",
    "compose @xmath11 and the doubling knots as shown in figure [ fig : compositionwithdouble ] , and compose @xmath11 with @xmath56 as before , shown in figure [ fig : compositionwithtemplate ] .",
    "again , we can size @xmath11 and @xmath56 appropriately so that there are enough triangles as in figure [ fig : trianglewithsinglestranddoubled ] that this is possible .",
    "consider a @xmath48-crossing template knot with an odd number of triangles along each edge of the central hexagonal region . add a loop of the type in figure [ fig : leftloops ] to each crossing in the top row and alternating rows , and a loop of the type in figure [ fig : rightloops ] to the crossings in the other rows .",
    "notice that these loops are not the same as the type in the loop trick .",
    "this gives a @xmath18-crossing knot with a central hexagonal region tiled by triangles with an extra loop and bigons .",
    "further , this knot realizes the sequence @xmath14 .",
    "choose crossing data so that this knot is trivial .",
    "we will call this knot the _ @xmath18-crossing template knot_.    0.3    0.3",
    "we will use this template knot to prove that the sequence @xmath5 is universal for @xmath18- and @xmath19-crossing knots .    [ 3ncrossing ]",
    "the sequence @xmath5 is universal for all @xmath18-crossing knot projections .",
    "given a knot @xmath10 , take a polygonal projection @xmath11 as above and lay it on top of a @xmath18-crossing template knot @xmath56 so that all the horizontal strands of @xmath11 lie on rows of the kind highlighted in figure [ fig:3n2templatecolored ] .",
    "double this projection as in the proof of theorem [ thm:3ncrossing ] so that all the crossings have multiplicity @xmath59 .",
    "this gives the four types of triangles shown in figure [ fig:3n2triangles ] .",
    "each of these triangles yields a @xmath55-gon , which can be fixed with the loop trick as shown in figure [ fig:3n25gonsfixed ] .    0.3    0.3    0.3    0.3    0.3    0.3    0.3    0.3    we need only compose @xmath11 with the doubling knots and @xmath11 with @xmath56 .",
    "we compose as for the @xmath16-crossing case .",
    "we now want to consider the @xmath19-crossing case .",
    "but we can do a very similar trick to show that @xmath5 is universal for this situation ; begin with a @xmath18-crossing template knot , and add another loop to each of the intersections as in figure [ fig:3n4template ] .",
    "this gives a @xmath19-crossing template knot which realizes the sequence @xmath5 .",
    "the sequence @xmath5 is universal for all @xmath18-crossing knot projections .",
    "use the @xmath19-crossing template knot @xmath56 . lay a polygonal projection @xmath11 on top of @xmath56 as above .",
    "double @xmath11 as above with enough copies so that each crossing has multiplicity @xmath60 .",
    "this gives the same four types of triangles , which can be fixed the same way .",
    "compose as in the @xmath48-crossing case .",
    "we now need only prove that the sequence is universal for @xmath3-crossing projections .",
    "this will require a different template knot , but the method will be analogous to the above proofs .    consider the knot projection of figure [ fig:4templateex ] .",
    "notice that this is a 4-crossing diagram which realizes the sequence @xmath14 .",
    "further , it has a central rectangular region tiled by squares bounded by bigons .",
    "we want to show that for any @xmath61 rectangle where @xmath2 is even , there exists a knot projection of this form .",
    "[ lemma:4template ] for @xmath2 an even integer , there exists a 4-crossing knot projection which has an @xmath61 rectangular central region , tiled as in figure [ fig:4templateex ] , and which realizes the sequence @xmath14 .",
    "consider an @xmath61 grid as in figure [ fig:4generaltemplate ] , where @xmath2 is even .",
    "since we want each crossing to be a quadruple crossing , we have four tail edges at the corners of our grid , and two tail edges at each crossing along the edges of the central rectangle .",
    "notice that there are @xmath62 tail edges .",
    "consider the upper right corner .",
    "label the second most counterclockwise strand @xmath24 .",
    "continuing counterclockwise around the rectangular region , label the strands @xmath63 , as in figure [ fig:4generaltemplate ] .",
    "for all @xmath64 , connect the tail edges by the rule @xmath65 across the rectangle , we get the following relations . @xmath66b \\\\          ( 2i+2)b \\leftrightarrow [ 2(n - i)+1]a      \\end{aligned}\\ ] ] for @xmath67 .",
    "notice that this does not include @xmath68 or @xmath69 , since these connect with @xmath70 and @xmath71 respectively , according to the relationship @xmath72 for all values of @xmath71 and @xmath70 , we have : @xmath73b ' \\\\          ( 2i+1)b ' \\leftrightarrow [ 2(n - i)+2]a '      \\end{aligned}\\ ] ] for @xmath74 .",
    "equivalently , we can say that : @xmath75b ' \\\\",
    "2ib ' \\leftrightarrow [ 2(n - i)+3 ] a '      \\end{aligned}\\ ] ] for @xmath76 .",
    "this gives us every relation between all values of @xmath77 and @xmath70 .",
    "define an orientation that travels from @xmath78 to @xmath79 . then following the strand",
    ", we get the sequence of tail edges along the knot shown in table [ table:4crossingsequence ] .",
    "this sequence hits every tail edge of the rectangle .",
    "since the interior paths from tail edge to tail edge cover all strands across the rectangle , this projection is a knot .",
    "pick orderings on the strands so that this knot is the unknot . we will call an unknot of this type a _ @xmath3-crossing template knot_.    [ thm:4crossing ] the sequence @xmath14 is universal for @xmath3-crossing knots .",
    "given a 4-crossing knot @xmath10 , consider a regular projection @xmath11 of @xmath10 .",
    "take a polygonal projection @xmath46 of @xmath10 such that all the edges of @xmath46 are either vertical or horizontal .",
    "size @xmath46 so that given a square grid , all the corner and crossings of @xmath46 occur at the center of a grid square .",
    "then we can lay @xmath46 on the rectangular grid of our template knot in the same manner as above .",
    "there are three types of squares that can occur in this process , up to rotation : ( a ) a corner of the original knot , ( b ) a single strand of the original knot , or ( c ) a crossing of the original knot .",
    "these are depicted in figure [ fig:4knotontemplate ] .",
    ".3    .3    .3    take a trivial copy @xmath46 of the original knot",
    ". lay it on top of the original knot , and perturb it slightly so that it crosses @xmath11 only at crossing points .",
    "double @xmath11 with a second trivial copy @xmath80 in the same manner , so that all crossings have multiplicity four .",
    "now there are three types of squares that can occur : ( a ) a doubled corner of the original knot , ( b ) a doubled single strand of the original knot , and ( c ) a doubled crossing of the original knot , as depicted in figure [ fig:4knotontemplatedoubled ] .",
    ".3    .3    .3    there is only one case of a 5-gon .",
    "this can be replaced with monogons , bigons , and triangles using the method shown in figure [ fig:4fixingthe5gon ] .    0.3    0.3    now either @xmath46 and @xmath80 will become composed with each other in the process of the reidemeister ii move perturbations , or they will remain separate . if they become composed with each other",
    ", we need only compose the doubling knot with the template knot and the doubling knot with the original knot . if not , we must compose a doubling knot with the original knot and each doubling knot with the template knot . compose the original knot with a doubling knot as in figure [ fig:4composewithdouble ] ( note that we may need to do this twice ) , and compose the doubling knot with the template knot as in figure [ fig:4composewithtemplate ] .",
    "notice that we need one square as in figure [ fig:4squarewithsinglestranddoubled ] and one bigon to accomplish this .",
    "this can be accomplished by choosing a fine enough grid .    0.3    0.3    0.3    0.3    0.3    this proof concludes the proof of the main theorem .",
    "from this we can immediately see that @xmath14 is universal for link projections as well .",
    "we need only compose the template knot with one link component and each link component with its respective doubling knots ."
  ],
  "abstract_text": [
    "<S> an increasing sequence of integers is said to be _ </S>",
    "<S> universal _ for knots if every knot has a reduced regular projection on the sphere such that the number of edges of each complementary face of the projection comes from the given sequence . </S>",
    "<S> adams , shinjo , and tanaka have , in a work , shown that @xmath0 and @xmath1 ( where @xmath2 is a positive integer greater than @xmath3 ) , among others , are universal . in a forthcoming paper , adams introduces the notion of a multi - crossing projection of a knot . an _ @xmath2-crossing projection _ is a projection of a knot in which each crossing has @xmath2 strands , rather than @xmath4 strands as in a regular projection . </S>",
    "<S> we then extend the notion of universality to such knots . </S>",
    "<S> these results allow us to prove that @xmath5 is a universal sequence for both @xmath2-crossing knot projections , for all @xmath6 . </S>",
    "<S> adams further proves that all knots have an @xmath2-crossing projection for all positive @xmath2 . </S>",
    "<S> another proof of this fact is included in this paper . </S>",
    "<S> this is achieved by constructing @xmath2-crossing template knots , which enable us to construct multi - crossing projections with crossings of any multiplicity . </S>"
  ]
}
{
  "article_text": [
    "thompson s groups @xmath0 and @xmath3 have been studied from many perspectives .",
    "both groups can be understood as groups of locally orientation - preserving piecewise - linear maps of the unit interval . in the case of @xmath0 ,",
    "these maps are homeomorphisms , and in the case of @xmath3 the maps are right - continuous bijections . in both cases the breakpoints and discontinuities",
    "are restricted to be dyadic rational numbers , and the slopes , when defined , are powers of 2 .",
    "both groups can also be understood by means of rooted binary tree pair diagrams  order - preserving in the case of @xmath0 .",
    "cannon , floyd and parry @xcite give an excellent introduction to these groups and several approaches to understanding their properties .",
    "a rooted binary tree is a finite tree where every node has valence 3 except the root , which has valence two , and the leaves , which have valence one .",
    "we draw such trees with the root on top and the nodes descending from it to the leaves along the bottom .",
    "the two nodes immediately below a node are its _",
    "children_. a node and its two children form a _ caret_. a caret whose two children are leaves is called an _ exposed caret_. we number the leaves of a rooted binary tree with @xmath4 carets and @xmath5 leaves from @xmath6 to @xmath4 in any order , although we frequently choose to number the leaves of a rooted tree in order from left to right .    a _ tree pair diagram _ is a triple @xmath7 , where @xmath8 and @xmath9 are two binary trees with the same number of leaves @xmath4 , and @xmath10 is a permutation in @xmath11 . a reduction can be performed in a diagram if both leaf numbers of an exposed caret in @xmath8 are mapped by @xmath10 to the two leaf numbers of an exposed caret in @xmath9 . in cases where a reduction is possible , we can replace the exposed caret with a leaf and renumber leaves to give an equivalent representative with a new permutation in @xmath12 .",
    "a tree pair diagram is _ reduced _ if no reductions are possible .",
    "the set of binary tree pair diagrams thus admits an equivalence relation , whose classes consist of those diagrams which have a common reduced representative , with such reduced representatives being unique . in figure [ fig : velem ] a reduced diagram is depicted , where the leaf numbering describes the permutation .",
    "the elements of @xmath3 which are actually in @xmath0 are precisely those elements for which the permutation is the identity .",
    "composition in @xmath3 can be understood by means of these binary tree diagrams . if two elements in @xmath3 are given by their representative diagrams @xmath7 and @xmath13 ,",
    "their composition can be found by finding two tree diagrams in the corresponding equivalence classes , @xmath14 and @xmath15 , such that @xmath16 .",
    "when this is achieved , the product element is represented by the diagram @xmath17 .",
    "[ fig : velem],title=\"fig:\",width=288 ] +    brin @xcite and dehornoy @xcite describe braided thompson s group @xmath18 , incorporating braids into tree pair diagrams .",
    "the permutation @xmath10 in a triple for an element of @xmath3 is replaced by a braid , giving the notion of a _ braided tree diagram_. a braided tree diagram is then a triple @xmath19 , where the two trees have the same number of leaves @xmath4 , and @xmath20 is a braid in @xmath4 strands .",
    "reductions can still be performed if two exposed carets are joined by two parallel strands . in figure",
    "[ fig : bvelem ] an element of @xmath18 is depicted .",
    "we now draw the rooted tree @xmath8 with the root at the top , and the tree @xmath9 below with the root at the bottom , and then draw the braid between the leaves of the two trees as indicated .",
    ", one of the preimages of the element drawn in figure [ fig : velem ] under the map @xmath21.[fig : bvelem],title=\"fig:\",width=144 ] +    in @xcite , brin also describes a  larger \" group @xmath22 as a group of braided forest diagrams having all but finitely many of the forests trivial .",
    "not only does @xmath22 naturally contain @xmath18 as the subgroup of forest diagrams where all trees are trivial except the first pair , but @xmath22 also sits inside @xmath18 as the subgroup of braided tree diagrams where the rightmost strand is always unbraided .",
    "we begin this paper by providing finite and infinite presentations of @xmath18 which contain the presentations provided by brin in @xcite as subpresentations .",
    "next , we describe subgroups @xmath1 of @xmath18 and @xmath2 of @xmath22 . just as @xmath0 is the subgroup of @xmath3 of order - preserving right continuous bijections of @xmath3 , the groups @xmath1 and @xmath2 are the subgroups of order - preserving elements of the braided versions of @xmath3 .",
    "the order is preserved by using generators which come from @xmath0 and generators which involve pure braids .",
    "we describe normal forms for elements in these subgroups and obtain infinite and finite presentations for these groups .",
    "dehornoy @xcite calls this pure braid subgroup @xmath23 , the group of pure parenthesized braids .",
    "in @xcite , an infinite presentation for @xmath22 is given .",
    "the generators in this presentation are the generators in the standard infinite presentation for thompson s group @xmath0 , as well as the generators for @xmath24 . here",
    "@xmath24 is considered as a direct limit of the groups @xmath25 , where @xmath25 is included in @xmath26 via adding one strand at the right .",
    "now @xmath22 sits naturally as a subgroup of @xmath18 ; it is isomorphic to the subgroup of all elements represented by braided tree diagrams in which the rightmost strand is unbraided . although presentations for @xmath18 , both finite and infinite , are given in @xcite , they are not related in a simple way to the presentation for @xmath22 . instead",
    ", we give a presentation for @xmath18 which contains brin s presentation for @xmath22 as a subpresentation .",
    "first , we define the set of generators .",
    "any element of @xmath18 can be represented by a braided tree diagram @xmath27 where both @xmath8 and @xmath9 have @xmath4 leaves and @xmath28 is a braid in @xmath25 .",
    "a single tree can be thought of as a _ positive _ element of thompson s group @xmath0 , when we take it as being paired with an _ all - right _ tree , which is a tree whose carets are all right children of their parent carets .",
    "these positive elements correspond to elements which are positive words in @xmath0 with respect to the infinite generating set @xmath29 the correspondence between tree pair diagrams and normal forms with respect to the infinite generating set is given by the process of exponents of leaves , as described by cannon , floyd and parry @xcite and fordham @xcite .",
    "all - right trees have all leaf exponents zero , and thus the normal forms for tree pair diagrams which involve one all - right tree will be purely negative or purely positive .",
    "we will denote by @xmath30 the all - right tree which has @xmath4 leaves .",
    "we can factor an element @xmath19 into three pieces , using all - right trees of the appropriate number of leaves , in a manner similar to that done for elements of thompson s group @xmath31 by burillo , cleary , stein and taback @xcite .",
    "the resulting three elements in this factorization are @xmath32 and the product of the elements represented by these three diagrams yields the original group element . in general , these three tree pair diagrams will not be reduced ; in order for each of them to have the same number of carets , we may need to take unreduced representatives for as many as two of the three terms . by enlarging trees in this manner ,",
    "it is clear that every element of @xmath18 can be factored this way .",
    "hence , we can always think of an element of @xmath18 as if it were composed of two elements of thompson s group @xmath0 , one positive and one negative , and one braid .",
    "it makes sense then to consider , as a set of generators of @xmath18 , the set of generators for @xmath0 and the set of generators for the braid groups , interpreted as braided tree pair diagrams between all - right trees .",
    "the infinite set of generators for @xmath0 consists of the elements @xmath33 with @xmath34 .",
    "figure [ fig : x2 ] shows @xmath35 in both tree pair diagram form and in braided tree form .",
    "these generators from @xmath0 are enough to produce the two elements @xmath36 and @xmath37 in @xmath18 .     of @xmath0 , in standard and in braided form.[fig :",
    "x2],title=\"fig:\",width=288 ] +    we can consider the element @xmath38 as an element in the appropriate braid group @xmath25 . now",
    "this copy of @xmath25 is generated by @xmath39 transpositions , the @xmath40 of which braids strand @xmath41 over strand @xmath42 .",
    "we do not , however , need to include all of these as generators .",
    "the generators which do not involve braiding the last two strands can be obtained from the generators of @xmath43 by splitting the last strand .",
    "for this reason we must consider two sets of generating braids , one which leaves the rightmost strand unbraided and one which does not .",
    "we define @xmath44 to be the element represented by the braided tree diagram @xmath45 , where @xmath46 is the braid on @xmath47 strands which crosses strand @xmath41 over strand @xmath42 .",
    "similarly , @xmath48 is the element represented by the diagram @xmath49 , where @xmath50 is the braid on @xmath42 strands which crosses strand @xmath41 over stand @xmath42 .",
    "then the set @xmath51 generates the copy of @xmath25 containing all elements of @xmath18 represented by diagrams of the form @xmath52 .",
    "notice that the @xmath33 together with the @xmath44 generate the copy of @xmath22 inside @xmath18 , and they correspond to brin s generators .",
    "we have shown :    [ bvgens ] the elements @xmath33 , for @xmath53 , @xmath44 for @xmath54 , and @xmath48 for @xmath54 form a set of generators for @xmath18 .",
    "there are three types of natural relations among these generators .",
    "first , there are the generators involving only the generators of @xmath0 , namely @xmath55 for @xmath56 .",
    "these are the generators for the standard presentation for @xmath0 .",
    "next , we expect to need generators for each copy of @xmath25 . these yield four types of relations :    * @xmath57 , for @xmath58 * @xmath59 * @xmath60 , for @xmath61 * @xmath62 .    finally , there are relations governing the interactions between the generators for @xmath0 and the generators for the braid groups @xmath25 .",
    "* @xmath63 , for @xmath64 * @xmath65 * @xmath66,for @xmath67 * @xmath68 * @xmath69 , for @xmath70 * @xmath71 * @xmath72 .    in preparation for showing that the relations above give a presentation , we first introduce a special class of words in the generators .",
    "we would like to identify those words in the generators which could be identified easily with a triple of diagrams in @xmath18 .",
    "as noted earlier , any element of @xmath18 can be represented by a triple of braided tree diagrams of the form @xmath73 .",
    "such a triple leads easily to a word in the generators as follows .",
    "the group element represented by the first diagram is a positive element @xmath74 of @xmath75 , and may be expressed uniquely as a word of the form @xmath76 , where @xmath77 and @xmath78 for all @xmath79 .",
    "similarly , the group element @xmath80 represented by the third diagram can be uniquely expressed as a word of the form @xmath81 , where @xmath82 and @xmath83 for all @xmath79 .",
    "now the group element represented by the middle diagram may be represented as some word in the generators @xmath84,@xmath85 , and their inverses . for convenience , we will call any word in this set of generators and their inverses _ a word in the @xmath25 generators_. note that if such a word contains no @xmath86 generators , it can be considered a word in the @xmath25 generators for many values of @xmath4 .",
    "notice that the minimum number of carets required in the trees for tree pair diagrams representing @xmath74 and @xmath87 respectively , is at most @xmath39 .",
    "the concatenation of the three words described above yield a word which can not serve as a normal form , since we have not specified preferred arrangements of the @xmath88 s and @xmath86 and furthermore , there are many different triples of tree pair diagrams representing any element . however , these words are nice in that any word of the above special form can be easily translated into a triple of diagrams , and we find them to be useful tools .    given a word @xmath89 , denote by @xmath90 the number of carets in the reduced binary tree diagram representing it . here is the algebraic description of blocks , which are these words which come from a single triple of diagrams .",
    "a word in the generators @xmath91 is called a block if it is of the form @xmath92 where    * @xmath93 is of the form @xmath76 , where @xmath77 and @xmath78 for all @xmath79 .",
    "* @xmath94 is of the form @xmath95 , where @xmath96 and @xmath83 for all @xmath79 , and by @xmath97 we mean the word @xmath98 .",
    "* let @xmath99 .",
    "then there exists an integer @xmath4 , @xmath100 , such that @xmath101 is a word in the @xmath25 generators .",
    "then we have the following lemma :    [ blockid ] a block @xmath92 is the identity in @xmath18 if and only if @xmath93 and @xmath94 are the same word , and @xmath101 is the identity in the copy of the braid group @xmath25 generated by @xmath102 and @xmath103 where @xmath104 .",
    "the lemma follows directly from the fact that any word which is a block @xmath92 can be represented by a braided tree diagram @xmath27 where @xmath93 is represented by @xmath105 , @xmath101 is represented by @xmath38 , and @xmath97 is represented by @xmath106 , and from any such triple of diagrams a block can be read off , unique up to the choice of the word in @xmath25 expressing @xmath28 . since the identity in @xmath18",
    "can be represented by the diagram consisting of the tree with only one vertex , and the trivial braid on one strand , all other diagrams representing the identity result from splitting strands , and will always have two identical trees with the trivial braid .",
    "but such diagrams translate into blocks of the form described in the lemma .",
    "we will use these blocks to prove :    [ bvinfpres ] the group @xmath18 admits a presentation with generators :    * @xmath33 , for @xmath53 , * @xmath44 , for @xmath54 , * @xmath48 , for @xmath54 .    and relators    * @xmath107 * @xmath108 * @xmath109 * @xmath110 * @xmath111 .",
    "* @xmath112 * @xmath65 * @xmath113 * @xmath68 * @xmath114 * @xmath115 * @xmath72 .",
    "this presentation appears without proof in j. belk s thesis @xcite .",
    "let @xmath116 be the abstract group given by the presentation above .",
    "we map @xmath116 to @xmath18 via @xmath117 by sending each generator to the element of @xmath18 with the same name .",
    "all relations in the presentation hold in @xmath18 , so @xmath117 is a well - defined homomorphism .",
    "proposition [ bvgens ] shows that the map is surjective , so it remains only to show that @xmath117 is injective . to show this",
    ", we must show that any word in the generators which maps to the identity in @xmath18 is already the identity in @xmath116 .",
    "now by lemma [ blockid ] , this is true if the word in question happens to be a block .",
    "so we are done once we show that the relations in @xmath116 are sufficient to transform any word into a block .",
    "but since any generator is itself a block , an arbitrary word of length @xmath118 is trivially the product of @xmath118 blocks .",
    "so to show @xmath117 is injective it is sufficient to prove that a word in @xmath116 which is the product of two blocks can be rewritten , using the relations in @xmath116 , as a single block .",
    "we first prove a series of 3 preliminary lemmas , from which we will deduce this fact in lemma [ 2blockstoone ] , which will complete the proof of the theorem .",
    "our first lemma permits us to push the @xmath119 generators to the left or right of the braid generators , which helps move a word toward block form .",
    "[ push ] if @xmath120 is a word in the @xmath25 generators , and @xmath121 , then @xmath122 is equivalent in @xmath116 to either @xmath123 or @xmath124 , where @xmath124 is a word in the @xmath26 generators , and @xmath125 .",
    "similarly , under the same conditions on all indices , a word @xmath126 may be replaced by either @xmath127 or @xmath124 .",
    "we describe first how to push @xmath128 past the @xmath88 and @xmath86 generators . pushing past @xmath88 type generators",
    "is always possible , but in order to push past @xmath86 s we must carefully keep track of the index of the @xmath129 as it moves along . using the relations of type c , we may replace @xmath130 by @xmath131 , where @xmath132 is a word in the @xmath88 generators and their inverses of length one or two .",
    "furthermore , the maximum index appearing in @xmath132 is @xmath133 . now",
    "the index @xmath134 can , in general , be either @xmath135 , or @xmath136 .",
    "however , it only increases to @xmath136 in the case where @xmath137 also .",
    "so since the initial index @xmath41 satisfies @xmath121 and @xmath138 , even a series of such replacements results in the presence of @xmath139 with @xmath125 .",
    "this is important , since relations @xmath140 and @xmath141 allow replacement of @xmath142 by @xmath143 , and relations @xmath144 allow us to replace @xmath145 by @xmath146 if @xmath147 .",
    "hence , @xmath148 can be replaced by either @xmath149 or simply @xmath124 as claimed .",
    "the argument for @xmath126 is similar .",
    "next we prove a lemma showing that a word in the @xmath25 generators can always be pumped up to a word in the @xmath26 generators at the expense of tacking on an @xmath150 generator .    [ pumping ]",
    "let @xmath120 be a word in the @xmath25 generators . then using the relators in @xmath116 ,",
    "@xmath120 may be replaced by either @xmath124 or @xmath151 where @xmath121 and @xmath124 is a word in the @xmath26 generators .",
    "similarly , @xmath120 may also be replaced by either @xmath124 or @xmath152 where @xmath124 is a word in the @xmath26 generators .",
    "consider the leftmost occurrence of @xmath85 in the word @xmath120 , that is , @xmath153 , where @xmath93 has only @xmath88 generators .",
    "using relations @xmath140 or @xmath141 depending on the exponent of @xmath85 , replace @xmath120 by @xmath154 , and then apply lemma [ push ] to @xmath155 to replace it with either @xmath156 or @xmath157 with @xmath121 and where @xmath157 is a word in the @xmath26 generators .",
    "then the desired @xmath124 is @xmath158 .",
    "similarly , working from the right , @xmath120 can be replaced by either @xmath159 or @xmath124 .",
    "the two previous lemmas will now be used to show that the relators allow us to transform the product of two blocks to a new product of two blocks where the combined length of the middle two of the 6 subwords involved is reduced .",
    "[ squish ] let @xmath160 and @xmath161 be two blocks .",
    "then the relations in @xmath116 allow us to replace the word @xmath162 by @xmath163 , the product of two blocks @xmath164 and @xmath165 , where @xmath166 .",
    "let @xmath167 and @xmath168 be the first letters in @xmath94 and @xmath169 . if they are the same , we can delete the pair @xmath170 and we are done .",
    "if not , suppose @xmath171 ( if @xmath172 a similar argument works , truncating @xmath173 and absorbing @xmath168 into @xmath120 ) .",
    "let @xmath174 , @xmath175 , and let @xmath176 be @xmath94 with @xmath167 deleted .",
    "now we use the relations ( a ) to replace @xmath177 by @xmath178 . note that @xmath179 and @xmath169 have the same length , but @xmath180 , since each index in @xmath169 is increased by @xmath181 as @xmath182 moves past it ( see theorem 3 of @xcite ) .",
    "next , suppose @xmath183 is a word in @xmath184 and @xmath185 with @xmath186 .",
    "then @xmath187 and @xmath188 , so @xmath189 .",
    "we must replace @xmath190 by @xmath191 so that @xmath192 is a block .",
    "we will consider two cases .",
    "_ case 1 : _ if @xmath193 , we use lemma [ push ] to replace @xmath194 by @xmath195 with @xmath121 and @xmath196 a word in @xmath197 and @xmath185 .",
    "then @xmath198 can be rewritten using relations ( a ) as a word @xmath199 so that @xmath200 is a positive word in the generators of @xmath0 with increasing indices from left to right .",
    "then it again follows from @xcite that @xmath201 .",
    "hence @xmath202 , since @xmath203 and @xmath204 , and this implies that @xmath205 is a block as desired .",
    "_ case 2 : _ if @xmath206 , it is necessary to first use lemma [ pumping ] to replace @xmath183 by either @xmath207 or @xmath208 where @xmath121 . if @xmath128 is present , we use relations ( a ) to replace @xmath198 by @xmath209 , and we see that @xmath210 . we continue applying lemma [ pumping ] and absorbing any resulting @xmath128 letters into the @xmath211 part of the word in this manner , and after @xmath212 repetitions we have replaced @xmath213 by @xmath214 , where @xmath207 a word in the @xmath215 generators , and @xmath216 is a word in the @xmath33 with indices increasing from left to right with @xmath217 . now just as before we can apply lemma [ push ] to replace @xmath214 by @xmath218 where @xmath219 , and @xmath196 is a word in the @xmath220 generators . when we use relations ( a ) to replace @xmath221 by @xmath222 , @xmath223 .",
    "but since @xmath224 and @xmath225 , @xmath226 , and hence @xmath227 is a block .",
    "now we are in a position to prove the final lemma which completes the proof of theorem [ bvinfpres ] .",
    "[ 2blockstoone ] the product of two blocks may be rewritten , using the relations of @xmath116 , as a single block .",
    "let @xmath160 and @xmath161 be two blocks .",
    "we apply lemma [ squish ] , at most @xmath228 times , to replace @xmath162 by @xmath229 where @xmath230 is a word in the @xmath25 generators , @xmath196 is a word in the @xmath231 generators , @xmath232 , and @xmath233 . if @xmath234 , declaring @xmath235 , @xmath236 , and @xmath237 shows that @xmath238 is a block .",
    "if not , say @xmath239 , we apply lemma [ pumping ] @xmath240 times to replace @xmath196 by a word @xmath207 , a word in the @xmath25 generators , followed by some new @xmath129 generators , so that @xmath191 has been replaced by @xmath241 where @xmath242 for @xmath243 . now",
    "so inductively , we have that @xmath245 , and hence declaring @xmath235 , @xmath246 , and @xmath247 , shows that @xmath248 is a block .",
    "of course , if @xmath249 , a similar argument works , pumping up indices in @xmath230 instead .",
    "we remark that an infinite presentation of thompson s group @xmath3 is easily obtained from the presentation for @xmath18 by adding two more infinite families of relators , @xmath250 and @xmath251 for all @xmath41 .",
    "it is common for these type of infinite presentations for thompson - type groups to reduce to finite presentations . for example , in @xcite an inductive argument is spelled out which obtains the standard two generator - two relator presentation for @xmath0 from the standard infinite presentation .",
    "brin uses similar arguments to obtain finite presentations for @xmath18 and @xmath22 from his infinite ones . in a similar manner ,",
    "the infinite presentation for @xmath18 in the previous section reduces to a finite presentation with 4 generators and only 18 relators , an improvement over the presentation in @xcite , which has 4 generators and 26 relators .",
    "[ finitebv ] the group @xmath18 admits a finite presentation with generators @xmath252 and relators    * @xmath253 , @xmath254 * @xmath255 , @xmath256 , @xmath257 , @xmath258 * @xmath259 , @xmath260 * @xmath261 , @xmath262 * @xmath263 , @xmath264 * @xmath265 , @xmath266 * @xmath267 * @xmath268 * @xmath269 * @xmath270    where the letters in the relators not in the set of 4 generators are defined inductively by @xmath271 for @xmath272 , @xmath273 for @xmath54 , and @xmath274 for @xmath54 .    that the two ( a ) relators yield inductively all ( a ) relators in the infinite presentation is a standard argument , given in @xcite .",
    "notice that the relators ( c2 ) and ( d3 ) in the infinite presentation are precisely the relations used to inductively define the higher index generators in the infinite presentation .",
    "now a straightforward induction yields the ( c1 ) relators in the infinite presentation from the ( c1 ) relators , then the ( c3 ) relators from the ( c3 ) relators , and so on , in the order the groups of relators are listed in the finite presentation above . as an example , we spell out the induction for the ( b3 ) relators .",
    "so suppose we have ( b3 ) , or @xmath269 .",
    "then suppose inductively that we have established @xmath275 for @xmath276 , where @xmath277 .",
    "then @xmath278 using the relator defining @xmath279 .",
    "now we can move the @xmath280 to the right , first using the ( c1 ) relators , then the inductive hypothesis , and finally the ( b1 ) relators , and then use the defining relation for @xmath279 in the other direction , to obtain the relator @xmath281 . therefore , by induction , @xmath281 for all @xmath282 .",
    "now suppose that we have @xmath283 for @xmath284 , @xmath285 , and @xmath286 .",
    "then it follows that @xmath287 for @xmath288 .",
    "we replace @xmath289 in the word @xmath290 by @xmath291 , and then moves the @xmath292 to the left , first using the inductive hypothesis to obtain @xmath293 , then using the ( d1 ) relators to obtain @xmath294 , and finally using the inductive hypothesis again to obtain @xmath295 . now use ( d1 ) relators",
    "to move @xmath296 left , to obtain @xmath297 .",
    "but now the rightmost four letters can be replaced by @xmath289 using the defining relation for @xmath289 in reverse , showing that @xmath287 .",
    "hence , by induction , all ( b3 ) relators hold .    for the corresponding finite presentation for @xmath3",
    ", we note that the relations @xmath251 and @xmath250 for @xmath298 can be deduced inductively from the two relations @xmath299 , using the ( c2 ) and ( c3 ) relators in the case of @xmath44 , and the ( d2 ) and ( d3 ) relators for @xmath48 .",
    "this yields a presentation for @xmath3 with 4 generators and 20 relators , not quite as efficient as the presentation in @xcite with 14 relators .",
    "the pure braid groups @xmath301 are the groups of braids where the @xmath41th strand is braided with the other strands but returns to the @xmath41th position .",
    "there are several possible ways to construct analogous subgroups of @xmath18 .",
    "one way is by considering the standard short exact sequences for the braid groups , involving the pure braid groups and the permutation groups . for each @xmath4",
    ", we have : @xmath302 which maps a braid to its permutation , and whose kernel is the pure braid group @xmath301 .",
    "this family of maps @xmath303 collectively induces a map @xmath304 defined by @xmath305 , where we use the appropriate @xmath303 for the number of leaves in either tree .",
    "let @xmath306 .",
    "by definition , a diagram @xmath19 represents an element in @xmath300 if it maps to the identity in @xmath3 , that is , if @xmath307 , and if @xmath308 .",
    "hence , @xmath300 is the subgroup of @xmath18 which consists of those elements which admit a representative @xmath309 on which the two trees are the same and the braid is pure .",
    "if an element admits one representative where the two trees are equal , then every representative will have the trees being equal .",
    "so @xmath300 is a subgroup , because the product of such two elements also has representatives where the two trees are equal .",
    "note that it is crucial in this construction that the braid is a pure braid .",
    "the main result concerning the group @xmath300 is the following .",
    "[ pbvnotfp ] the group @xmath300 is not finitely generated .",
    "_ given two elements of @xmath300 by their diagrams @xmath309 and @xmath310 , their product always admits a representative diagram @xmath311 , where @xmath312 is the _ least common multiple _ of @xmath313 and @xmath31 that is , the minimal tree which contains both @xmath313 and @xmath31 as subtrees .",
    "hence , if @xmath300 were to be generated by a finite set @xmath314 , for @xmath315 , every tree in @xmath300 would admit a representative whose tree would be the least common multiple of the @xmath316 .",
    "there are elements whose smallest representatives are of increasing size and thus @xmath300 can not be finitely generated .",
    "from the map @xmath21 defined above , since @xmath0 is the subgroup of @xmath3 of those elements whose permutation is the identity , we can define the group @xmath317 .",
    "the group @xmath1 is the subgroup of @xmath18 of those elements which admit a representative @xmath318 , where @xmath319 is a pure braid .",
    "note the contrast with @xmath300 , since here the two trees are not necessarily equal .",
    "in fact , @xmath300 is a subgroup of @xmath1 , and observing the restriction to @xmath1 of the map @xmath21 above , it is easy to see that @xmath300 is also the kernel of @xmath320 .",
    "thus the diagram below is commutative :    @xmath321    the main goal of the remainder of this paper is to prove that @xmath1 is finitely presented and to find both finite and infinite presentations .",
    "finding generators for @xmath1 is not difficult . just as for @xmath18 , an element of @xmath1",
    "is given by a triple @xmath318 , where this time @xmath319 is a pure braid .",
    "again , we factor the element into three pieces @xmath322 where the individual diagrams may not be reduced . hence , we can always think of an element of @xmath1 as if it were composed of two elements of thompson s group @xmath0 , one positive and one negative , and one pure braid .",
    "again , just as for @xmath18 , we take as a set of generators of @xmath1 , the set of generators for @xmath0 and the set of generators for the pure braid groups , interpreted as braided tree pair diagrams between all - right trees .",
    "we consider the element @xmath323 as an element of the appropriate group @xmath301 of pure braids . to generate these groups",
    "@xmath301 we would like to use the braids @xmath324 , for @xmath325 , which wrap the @xmath41-th strand around the @xmath326-th one .",
    "see hansen @xcite for details of these generating sets .",
    "the process of obtaining the generators of @xmath1 from the generators @xmath324 of @xmath301 is the same than the process specified above for @xmath18 from the standard braid generators .",
    "we will denote by @xmath327 the element @xmath328 , and by @xmath329 the element @xmath330 . as in @xmath18 ,",
    "the differences between these two families of generators are whether or not the last strand is involved in the braiding .",
    "figure [ fig : a13 ] shows an example of the two generators of @xmath1 corresponding to a generator @xmath324 .     in @xmath331 , with its corresponding generators @xmath332 and @xmath333 in @xmath1 .",
    "[ fig : a13],title=\"fig:\",width=288 ] +    the proof of the following proposition is analogous to the proof of proposition [ bvgens ] .",
    "[ gens ] the elements @xmath33 , for @xmath34 , @xmath327 , for @xmath334 , and @xmath329 , for @xmath334 , form a set of generators of @xmath1 .    in the next theorem",
    "we will give a presentation for the group @xmath1 .",
    "the relators are going to be divided into four families .",
    "the family ( a ) is obtained from the relators of @xmath0 .",
    "the family ( b ) is obtained from the presentation of the pure braid group :    * @xmath335 * @xmath336 * @xmath337 * @xmath338    obtained from @xcite .",
    "the family ( d ) reflects the interactions between generators of @xmath0 and pure braids . in @xcite",
    ", brin constructs these relators using the structure of zappa - szp product of the monoid associated to @xmath22 .",
    "this construction is not possible here because the presentations for the groups @xmath339 are not monoid presentations .",
    "in fact , the monoid of pure positive braids is not finitely generated as shown by burillo , gutierrez , krsti and nitecki .",
    "@xcite .",
    "the family ( c ) of relators is given by the special way that the pure braid groups are embedded into each other inside @xmath1 .",
    "to embed @xmath301 into @xmath340 we split the last strand in two .",
    "if the last strand is not braided , this does not affect the element , but if the last strand takes part in the actual braiding , then these elements in @xmath301 change when embedded in @xmath340 . when a generator @xmath329 has its last strand split , now the @xmath41-th strand wraps around two strands ( the @xmath326-th and the @xmath341-th ) , and the element is now a product of two generators .",
    "the group @xmath1 admits a presentation with generators :    * @xmath33 , for @xmath34 , * @xmath327 , for @xmath334 , * @xmath329 , for @xmath334    and relators :    * @xmath342 * @xmath343 * @xmath344 * @xmath345 * @xmath346 * @xmath347 * @xmath348 * @xmath349 * @xmath350 * @xmath351 * @xmath352 * @xmath353 * @xmath354 * @xmath355 * @xmath356 * @xmath357 * @xmath358 * @xmath359 * @xmath360    _ proof .",
    "_ as in the proof of theorem [ bvinfpres ] , we consider the algebraic and the geometric group , establish a homomorphism between them , which is well - defined and surjective .",
    "for instance , one needs to check geometrically the relators to see it is well defined .",
    "see figure [ fig : relator ] for an example .",
    "after this , it only remains to check the injectivity of the map .     and",
    "the following steps are the multiplication processes which transform it into @xmath361[fig : relator],title=\"fig:\",width=480 ] +    to prove that the homomorphism is injective , we consider an element of @xmath116 , given as a word @xmath362 , and imagine that it is mapped to the identity in @xmath116 .",
    "we need to prove that it is consequence of the relators listed above .    as a first step",
    ", we can see that the relators ( d1 ) to ( d9 ) and ( a ) can be used to transform any such word into the product of three words , @xmath363 we can arrange this in such a way that the words @xmath93 and @xmath94 contain only generators @xmath33 and not their inverses .    this special expression is then particularly useful for studying the element , because it corresponds easily to the representative @xmath318 .",
    "we will use now the following lemma whose proof is analogous to the proof of lemma [ blockid ] :    a triple @xmath318 in @xmath1 represents the identity element if and only if the braid @xmath319 is the trivial braid and the element @xmath364 represents the identity in @xmath0 .    with this lemma , we can assume now that the two words @xmath365 and @xmath101 map to the identity , and we must prove that they are consequence of the relators .",
    "the word @xmath366 lies in the subgroup isomorphic to @xmath0 .",
    "so if it is the identity , it is consequence of the relators ( a ) .",
    "the word @xmath101 is a product of some @xmath367 and @xmath368 generators .",
    "we would like to consider this word inside some @xmath301 , for a fixed @xmath4 .",
    "the image in @xmath1 of @xmath329 has @xmath326 strands , and the image of @xmath327 has @xmath133 strands .",
    "so the appropriate @xmath4 to use is the maximum of the following set : @xmath369 if we have a @xmath329 with @xmath370 , we use the relators ( c ) to increase the second index of that @xmath329 to @xmath4 .",
    "this way , the only generators involved are @xmath327 , for @xmath371 , and @xmath372 , for @xmath373 , which generate a copy of @xmath301 inside @xmath1 .",
    "so , we can use the relators ( c ) to have our word expressed in this small set of generators and assume that it is a word in @xmath301 .",
    "so if the word is the identity , it is consequence of the relators of @xmath301 . but these relators correspond to the relators ( b1 ) to ( b8 ) .",
    "as is common in the groups of the thompson family , the infinite presentations are interesting and useful because of their symmetry and associated normal forms , but often it turns out that there are finite presentations from which the infinitely many generators and relations can be constructed and deduced . in this section , we construct a finite presentation for @xmath1 .",
    "thompson s group @xmath0 admits a finite presentation which is merely the first two generators @xmath374 and @xmath375 and the first two non - trivial relations .",
    "we construct @xmath376 from @xmath374 and @xmath375 as @xmath377 and from the two first two non - trivial relations we can deduce all of the relations in ( a ) above .",
    "this is the first building block for our finite presentation .    in a similar way we can construct all generators @xmath327 from a few ones .",
    "the generators needed are @xmath378 , @xmath332 , @xmath379 , @xmath380 .",
    "the idea is that conjugating a braid with @xmath381 has the effect of splitting the @xmath382 strand , so from these four generators and the generators for @xmath0 , we can construct any generator @xmath327 by the process of splitting as many strands as necessary to produce the strands before the @xmath41-th and between the @xmath41-th and @xmath326-th .",
    "this process is as follows :    * given @xmath383 , with @xmath384 , we use the relators ( d3 ) to decrease the distance between @xmath41 and @xmath326 until 2 : @xmath385 if @xmath386 then this process brings any generator @xmath387 down to @xmath332 . for any other value of @xmath41 it reduces to @xmath388 .",
    "* we reduce the generators @xmath389 with @xmath390 to @xmath380 with relators of type ( d1 ) : @xmath391 * and finally , we reduce generators of type @xmath392 to @xmath379 by again using ( d1 ) : @xmath393    the generators @xmath368 are constructed in exactly the same way , where we replace @xmath367 by @xmath368 , and with the same constraints on indices .    to see which relators to include in the finite presentation ,",
    "we see which can be used to get the full families .",
    "we consider the relators ( d ) first and we will use those to help with the other families .    in each of the relators of ( d1 ) , there are three strands which are important : the strands labelled @xmath41 , @xmath326 and @xmath118 .",
    "the idea is that between those , we only need to have one strand , because by splitting it , we can get to any number of strands in that position .",
    "thus , we can get all of the relators ( d1 ) from the following    * @xmath394 * @xmath395 * @xmath396 * @xmath397 * @xmath398 * @xmath399 * @xmath400 * @xmath401    every relator of the type ( d1 ) is a consequence of the definitions above and of these eight relators . as an example",
    ", we will show the relator @xmath402 . if @xmath403 , the relator is ( d1.1 ) above .",
    "if @xmath404 , then we use the definitions : @xmath405 and using ( d1.3 ) we get to @xmath406 which is @xmath407 finally equal to @xmath408    all the other relators of type ( d ) are very similar to this case , and we leave the details to the reader as they are straightforward but tedious .",
    "the families of relators ( d1 ) and ( d3 ) are especially important , because they are used to split or combine adjacent strands which are not involved in the braiding .",
    "any two adjacent strands which are not braided can be joined using a relator from one of these families .",
    "this is useful for the families ( b1 ) to ( b9 ) .",
    "for instance , the relators ( b1 ) show that two braids @xmath327 and @xmath409 commute if @xmath410 .",
    "this relation only involves the strands @xmath411 , @xmath412 , @xmath41 and @xmath326 .",
    "if there are strands in between , they are uninvolved in the braiding .",
    "if there is more than one strand , we can apply the conjugating relations ( d1 ) or ( d3 ) to bring the relators down to a simple one where there is just one strand between .",
    "for instance , we show the relator @xmath413 in figure [ fig : a1456 ] .    .",
    "the commutativity is apparent .",
    "[ fig : a1456],title=\"fig:\",width=144 ] +    we see that the two strands between the first and the fourth are straight .",
    "it is clear they can be obtained by splitting a single strand from an analogous relator whose braided strands are 1 , 3 , 4 and 5 .",
    "a conjugation then by @xmath375 brings it down , according to the definitions above .",
    "now we have that @xmath414 which is of the type ( d3 ) , and @xmath415 which is of the type ( d1 ) .",
    "so the relator is a consequence of the relator @xmath416 using only ( d1 ) and ( d3 ) relators . in this way",
    "we see that the only relators that we need to construct all the relators in ( b1 ) are those that have either zero or one strand at the beginning , or between the @xmath41 , @xmath326 , @xmath411 , and @xmath412-th strands .",
    "these are :    * @xmath417 * @xmath418 * @xmath419 * @xmath420 * @xmath421 * @xmath422 * @xmath423 * @xmath424 * @xmath425 * @xmath426 * @xmath427 * @xmath428 * @xmath429 * @xmath430 * @xmath431 * @xmath432    the other families , including the ones which involve @xmath368 generators , are completely analogous .",
    "we are left only with the family ( c ) .",
    "the relators are all of the type @xmath433 , with @xmath64 . as before ,",
    "it is clear that if @xmath434 , we can conjugate by @xmath374 to get a relator with lower indices .",
    "so only ones with @xmath386 or @xmath403 are needed .",
    "again we see that all are consequences of a fundamental finite set of relations :    * @xmath435 * @xmath436 * @xmath437 * @xmath438 * @xmath439 * @xmath440    for example , we see that @xmath441 if @xmath442 .",
    "and the cases for @xmath403 are exactly similar .",
    "hence , we have proved the following theorem :    [ bffp]the group @xmath1 is finitely presented    the finite presentation for @xmath1 is the following :    generators : @xmath374 , @xmath375 , @xmath378 , @xmath332 , @xmath379 , @xmath380 , @xmath443 , @xmath333 , @xmath444 , @xmath445    relators :    * @xmath446 * @xmath447 , for @xmath448 * @xmath449 , for @xmath450 * @xmath451 , for @xmath452 * @xmath453 , for @xmath454 * @xmath455 , for @xmath448 * @xmath456 , for @xmath450 * @xmath457 , for @xmath452 * @xmath458 , for @xmath454 * @xmath433 , for @xmath459 * @xmath460 , for @xmath461 * @xmath462 , for @xmath463 * @xmath464 , for @xmath465 * @xmath466 , for @xmath467 * @xmath468 , for @xmath469 * @xmath470 , for @xmath461 * @xmath471 , for @xmath463 * @xmath472 , for @xmath465 * @xmath473 , for @xmath467    this gives a total of 10 generators and 192 relators .",
    "in the previous section we constructed a presentation of @xmath1 . brin @xcite described both @xmath18 and @xmath22 .",
    "brin describes the group @xmath22 via a zappa - szp product of @xmath0 and @xmath474 , and describes @xmath18 as a subgroup of @xmath22 .",
    "the group @xmath22 is the group of braided forest diagrams , where all but finitely many of the forests are trivial , and the group @xmath18 is the subgroup of @xmath22 where all of the trees in the forest pairs are trivial except the first pair , which have the same number of leaves . not only is @xmath18 a subgroup of @xmath22 , but also @xmath22 is a subgroup of @xmath18 , as described by brin @xcite . we take the standard identification of the real line with the unit interval which is compatible with the relevant dyadic subdivisions which sends the interval @xmath475 $ ] of @xmath476 with the interval @xmath477 $ ] and then we see that @xmath22 is the subgroup of @xmath18 in which the last strand is not braided with any other strands .",
    "similarly , we have the group @xmath2 which can either be regarded as the supergroup of @xmath1 of pure braided forest diagrams , or as a subgroup of @xmath1 where the braiding does not involve the last strand .    here",
    ", we easily describe the subgroup @xmath2 of @xmath1 by omitting the generators and relations from @xmath1 which involve braiding the last strand .",
    "so we obtain presentations for @xmath2 which are sub - presentations of the infinite and finite presentations for @xmath1 given in the earlier sections above .",
    "_ the proof is similar to the case for @xmath1 .",
    "here we note that @xmath2 is exactly the subgroup where the last strand is not braided with any previous strands , and by omitting the @xmath368 generators we guarantee that the last strand is not braided .",
    "an argument similar to the earlier one for @xmath1 shows that these generate @xmath2 .    to find relators for a presentation of @xmath2 we use the same sets of generators and relators as for @xmath1 , deleting the generators in the @xmath368 family and deleting all relations which include any of the @xmath329 .",
    "_ proof._using the interpretation of the geometric group @xmath2 as the subgroup of @xmath1 where braiding never involves the last strand , the same proof used in the section 5 to establish the presentation for @xmath1 goes through in this situation .",
    "the only difference is that since we have no @xmath368 generators , once we rearrange the word to have all @xmath367 generators in the middle , they are already generators for one copy of the pure braids on @xmath4 strands with the rightmost strand unbraided , so there is no need for the step using relators of type ( c ) .",
    "note that the group @xmath2 will also be finitely presented .",
    "the arguments needed to see this are similar to those for @xmath1 .",
    "the finite presentation for @xmath2 can be easily obtained from the finite presentation for @xmath1 by deleting all generators @xmath329 and the relations where they appear ."
  ],
  "abstract_text": [
    "<S> we describe pure braided versions of thompson s group @xmath0 . these groups , @xmath1 and @xmath2 , are subgroups of the braided versions of thompson s group @xmath3 , introduced by brin and dehornoy . unlike @xmath3 , elements of @xmath0 are order - preserving self - maps of the interval and we use pure braids together with elements of @xmath0 thus preserving order . </S>",
    "<S> we define these groups and give normal forms for elements and describe infinite and finite presentations of these groups . </S>"
  ]
}
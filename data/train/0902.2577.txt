{
  "article_text": [
    "neural networks field , continuous - time hopfield neural networks @xcite has been an important focus of research area since early 1980s whose applications vary from combinatorial optimization ( e.g. @xcite , @xcite among many others ) including traveling salesman problem ( e.g. @xcite , @xcite among others ) to image restoration ( e.g. @xcite ) , from various control engineering optimization problems including in robotics ( e.g. @xcite among others ) to associative memory systems ( e.g. @xcite , @xcite among others ) , etc . for a tutorial and further references about hopfield",
    "nn , see e.g. @xcite , @xcite , @xcite .",
    "on the other hand , in the cellular radio systems literature , power control has been intensively studied as an essential mechanism for high - capacity cellular networks . in this paper",
    ", we construct a bridge between two different areas , hopfield - like neural networks and fully distributed power control algorithms , whose scope of interest , motivations and settings are completely different .",
    "transmitter power control is essential for high - capacity cellular radio systems @xcite , @xcite , etc .",
    "power control ( pc ) problem has drawn much attention since zander s works on centralized @xcite and distributed @xcite _ cir balancing_. carrier - to - interference+noise ratio ( cir ) balancing was further investigated by grandhi _",
    "@xcite , @xcite . in @xcite , foschini and miljanic considered a more general and realistic model , in which a positive receiver noise and a respective target sir were taken into account .",
    "the foschini and miljanic s distributed algorithm ( fma ) was shown to converge either synchronously @xcite or asynchronously @xcite to a fixed point of a _",
    "feasible _ system . based on the fma , grandhi _ et al .",
    "_ @xcite suggested _ distributed constrained power control _",
    "( dcpc ) algorithm , in which a transmission upper limit was considered .",
    "some papers focus on convergence speed of the pc operation e.g. @xcite , @xcite , @xcite , , @xcite .",
    "it would be very difficult to prepare a complete list of all the works on the power control due to the huge amount of papers published in the area .",
    "starting from the differential equation form of the sigmoid dpca in @xcite and @xcite and relaxing the constraints on the positiveness and strict assumptions on the spectral radius of the link gain matrix , we establish a bridge from sgmdpca to the hopfield - like neural networks ( nns ) .",
    "the proposed approach yields a sigmoid basis sir - balancing nn which exhibits similar features as hopfield nn does .",
    "our investigations show that 1 ) the proposed sgm``sir''nn includes both sgmdpca algorithm and hopfield nn as special cases .",
    "2 ) the sgmsirnn exhibits features which are generally attributed to hofield - like recurrent nn .",
    "3 ) estalishing an analogy to the sgmdpca , the proposed network as well as the hopfield network keeps the fictitious sir at a target level .",
    "the paper is organized as follows : the hopfield network and pc problem are investigated in the same framework in [ section : model ] .",
    "section [ sgmcirnn ] presents the proposed network .",
    "simulation results are presented in section [ section : simuresults ] followed by concluding remarks in section [ section : conclusions ] .",
    "we start with the standard definition of signal - to - interferende+noise - ratio ( sir ) in a cellular radio system , in which @xmath0 mobiles share the same channel ( e.g. @xcite , @xcite ) .",
    "@xmath1    where @xmath2 is the transmission power of mobile @xmath3 , @xmath4 is the link gain from mobile @xmath5 to base @xmath3 involving path loss , shadowing , multi - path fading ( as well as the spreading / processing gain in case of cdma transmission @xcite , etc ) , and @xmath6 is the receiver noise at base station @xmath3 .    without loss of generality , eq.([eq : cir ] ) considers the uplink case ( from mobile to base ) and assume that mobile @xmath3 is assigned to base @xmath3 at that instant .",
    "so , the aim of power control is to determine the transmit power for every mobile which keep its sir ( i.e. , @xmath7 ) at a target value @xmath8 .",
    "defining @xmath9_{ij } = \\gamma_{i}^{tgt } a_{ij } / a_{ii}$ ] and @xmath10 and @xmath11 , one may obtain the eq .",
    "( [ eq : cir ] ) in matrix form as follows at the solution , i.e. when @xmath12 .",
    "@xmath13    where @xmath14 is the power vector , @xmath15 is the normalized link gain matrix and @xmath16 is the noise vector .",
    "considering the link gain matix @xmath17 ( i.e. , all entries are strictly positive ) , if the matrix @xmath18 is nonsingular and all its eigenvalues are strictly positive , then the positivity condition ( i.e. , the solution @xmath19 ) is met because then @xmath20 .",
    "zander s work and all other works in the same line assumes that the spectral radius of matrix @xmath15 is smaller than 1 .",
    "this is a sufficient condition for a unique positive solution .",
    "( for proof , see e.g. theorem 3.7 in @xcite ) .",
    "the spectral radius of matrix @xmath15 ( @xmath21 ) is defined as @xmath22 where @xmath23 are eigenvalues of @xmath15 . in many works which is in the same line as zander s",
    ", it s assumed that there is a network admission algorithm which assures that the spectral radius of the normalized link gain matrix @xmath24 is less than 1 .    in the power control design ,",
    "the link gain matrix and transmit power are all positive . in what follows",
    ", we relax the positivity and radial spectral raduis conditions with the intend of having multiple equilibrium points to store a set of prototype vectors and then proceed to hopfield - like neural networks .    multiplying the eq .",
    "( [ eq : cir ] ) with @xmath25 from both sides gives    @xmath26    let s define the following fictitious `` signal to interference ratio ( sir ) '' ( @xmath27 ) by rewriting the eq.([eq : ciratgt ] ) with neural network terminology :    @xmath28    where @xmath27 is the defined fictitious `` sir '' , @xmath29 is the state of the @xmath3th neuron , @xmath30 is the feedback coefficient from its state to its input layer , @xmath31 is the weight from the output of the @xmath5th neuron to the input of the @xmath5th neuron .    from eq.([eq :",
    "cira ] ) , we define the following error signal @xmath32    @xmath33    the norm of the error signal vector @xmath34^t$ ] can also be used as a performance index . in the second part of this work in @xcite",
    ", @xmath35 norm of @xmath36 is examined in discrete time , and is shown to converge to @xmath37 under some reasonable conditions both synchronously and asynchronously .",
    "prototype vectors are defined as those @xmath38 s which make @xmath39 in eq.([eq : cira ] ) .",
    "so , from eq.([eq : cira ] ) and ( [ eq : cira_altrntf ] ) , the prototype vectors make the error signal zero , i.e. , @xmath40 given that @xmath41 and @xmath42 .",
    "[ fig : cirhop].a shows the network corresponding to the differential equation form of the sigmoid dpca in @xcite and @xcite .",
    "the design problem in @xcite and @xcite is to device a stable dynamic multiple input multiple output ( mimo ) network with the unique solution of @xmath43 to be achieved as fast as possible .",
    "note that the unique solution balances the sirs of every mobile in its setting .",
    "our paper extends the analysis to the multiple equilibrium points cases as follows : in this paper , we examine    \\a ) the case where the states ( transmit powers ) are not bounded , ( which is not a practical assumption in the power control algorithm ) .",
    "this case corresponds to fig.[fig : cirhop].a and is examined in the rest of this section .",
    "\\b ) the cases where the states ( transmit powers ) are upper and lower bounded ( inspired by the fact that the transmit power in the power control is lower and upper bounded in practise ) .",
    "these cases are examined in section [ sgmcirnn ] , which correspond to the networks in fig.[fig : cirhop].c in all these cases , we examine if the corresponding mimo systems exhibit similar features as traditional continuous hopfield network does .    writing the differential equation of the network in fig.[fig : cirhop].a in matrix form gives    @xmath44    where @xmath45 shows the derivative of @xmath38 with respect to time , i.e. , @xmath46 , and @xmath47 represents the sigmoid function and    @xmath48 \\quad \\quad { \\mathbf w } = \\left [ \\begin{array}{c c c c } 0   &    w_{12 }    & \\ldots   &   w_{1n } \\\\ w_{21 }      &    0 & \\ldots   &   w_{2n } \\\\",
    "\\vdots &      & \\ddots   &   \\vdots \\\\ w_{n1 }     &    w_{n2 }    & \\ldots   &   0 \\end{array } \\right ] \\quad \\quad { \\mathbf b } = \\left [ \\begin{array}{c } b_1 \\\\ b_2 \\\\ \\vdots \\\\ b_n \\end{array } \\right]\\ ] ]    in eq.([eq : mata_w_b ] ) , @xmath49 shows the self - state - feedback matrix , @xmath50 with zero diagonal shows the inter - neurons connection weight matrix , and @xmath51 is a threshold vector . in ( [ eq : diff_dpca ] ) , the sigmoid function is @xmath52 , where @xmath53 is called the slope of @xmath47 , which is equal to its derivative with respect to its argument at origin 0 .",
    "it s well known that desigining the weight matrix @xmath50 as a symmetric one yields that all eigenvalues are real , which we assume throughout the paper due to the simplicity and brevity of its analysis .",
    "_ proposition 1 : _    the network in eq .",
    "( [ eq : diff_dpca ] )    \\a ) has unique equilibrium point and is globally stable if all the eigenvalues of matrix @xmath54 are strictly negative , i.e. .",
    "@xmath55 where @xmath23 are the eigenvalues of ( @xmath56 ) .",
    "b ) is unstable in the sense that at least one @xmath57 goes to infinity , if at least one of the eigenvalues of matrix ( @xmath58 ) is strictly positive , i.e. there exists a @xmath59 .",
    "\\c ) has infinite number of equlibrium points in the unbounded input space and finite number of equilibrium points in a limited specified input space like a hybercube , if the matrix @xmath60 is a negative semidefinite matrix ( i.e. , there exists only zero and negative eigenvalues of @xmath60 ) .",
    "so , by properly designing matrices @xmath61 for a specified input space like a hybercube , a set of prototype vectors could be stored on the equilibrium points .",
    "\\a ) in what follows , we present a lyapunov function for providing a sufficient condition for the stability of the network in ( [ eq : diff_dpca ] ) .",
    "a lyapunov function candidate for ( [ eq : diff_dpca ] ) is :    @xmath62    where the matrix ( @xmath58 ) is a negative definite matrix which assures that the lyapunov function in ( [ eq : lyapdpca ] ) is lower bounded .",
    "the derivative of the lyapunov function with respect to time gives    @xmath63    from eq.([eq : diff_dpca ] ) and ( [ eq : lyapdpca_a ] )    @xmath64    where @xmath65 shows the inverse of the sigmoid function @xmath47 .",
    "since sigmoid function is an odd function and is zero if and only if its argument is zero , we obtain from ( [ eq : lyapdpca_b ] )    @xmath66    it s well known that all the eigenvalues of a negative definite matrix is strictly negative and is nonsingular ( see e.g. @xcite ) .",
    "this implies that there is a unique solution for eq.([eq : diff_dpca ] ) , i.e. , @xmath67 .",
    "this observation together with the lyapunov function analysis above ( eq .",
    "( [ eq : lyapdpca ] ) and ( [ eq : lyapdpca_c ] ) , proves part a.    \\b ) the stability of the system eq.([eq : diff_dpca ] ) depends only on the matrix @xmath60 , and not on the vector @xmath68 : let the system be stable and let @xmath69 be the equilibrium point of eq.([eq : diff_dpca ] ) , i.e. , @xmath70 . defining @xmath71 , and replacing it in eq.([eq : diff_dpca ] )",
    "yields    @xmath72    as the state vector @xmath73 approaches to the @xmath74 in eq.([eq : diff_dpca ] ) , the @xmath75 approaches to the origin @xmath76 in eq.([eq : diff_dpca_bar ] ) . on the other hand , if the network in eq.([eq : diff_dpca ] ) is unstable , then the network ( [ eq : diff_dpca_bar ] ) is also unstable , which shows that the stability of the system ( [ eq : diff_dpca ] ) does not depend on the vector @xmath68 . in brief , from stability point of view , it would be enough to examine only the matrix @xmath60 , and not @xmath77 in eq.([eq : diff_dpca ] ) .",
    "if the matrix @xmath60 has a positive eigenvalue , then taking the initial state as the corresponding eigenvector , shown as @xmath78 , i.e. , @xmath79 gives    @xmath80    where @xmath81 shows the positive eigenvalue and @xmath47 is the sigmoid function .    since @xmath82 is an odd function , eq.([eq : lemma1_partb ] ) is unstable with @xmath59 simply because then the sign of the @xmath83 is the same as the sign of @xmath84 in eq.([eq : lemma1_partb ] ) , which proves part b.    \\c ) let s assume that the matrix ( @xmath85 ) is a negative semidefinite matrix , and let s choose the same lyapunov function candidate as in eq .",
    "( [ eq : lyapdpca ] ) , i.e. , @xmath86 . then , the lyapunov function is lower bounded . following the steps in part a above yields    @xmath87    which indicates that @xmath88    the equilibrium points of network in eq.([eq : diff_dpca ] ) , which corresponds to fig .",
    "[ fig : cirhop].a , satisfies the following linear equation :    @xmath89   - \\left [ \\begin{array}{c c c c } 0   &   w_{12 }    & \\ldots   &   w_{1n }",
    "\\\\ w_{21 }      &    0 & \\ldots   &   w_{2n } \\\\ \\vdots &      & \\ddots   &   \\vdots \\\\ w_{n1 }     &    w_{n2 }    & \\ldots   &   0 \\end{array } \\right ] \\big ) \\left [ \\begin{array}{c } x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_n \\end{array } \\right ] = \\left [ \\begin{array}{c } b_1 \\\\ b_2 \\\\ \\vdots \\\\ b_n \\end{array } \\right]\\ ] ]    on the other hand , writing the eq .",
    "( [ eq : cira ] ) in matrix form gives    @xmath90   - \\left [ \\begin{array}{c c c c } % 0   &    \\tilde{w}_{12 }    & \\ldots   &   \\tilde{w}_{1n } \\\\   0   &   w_{12 } & \\ldots   &   w_{1n } \\\\",
    "% \\tilde{w}_{21 }      &    0 & \\ldots   &   \\tilde{w}_{2n } \\\\",
    "w_{21 }      &    0 & \\ldots   &   w_{2n } \\\\ \\vdots &      & \\ddots   &   \\vdots \\\\ w_{n1 }     &   w_{n2 }    & \\ldots   &   0 \\end{array } \\right ] \\big ) \\left [ \\begin{array}{c } x_1 \\\\ x_2 \\\\ \\vdots \\\\ x_n \\end{array } \\right ] = \\left [ \\begin{array}{c } % \\tilde{b}_1 \\\\   b_1",
    "\\\\   b_2 \\\\ \\vdots \\\\",
    "b_n \\end{array } \\right]\\ ] ]    note that in eq.([eq : matsirbalancing1 ] ) the matrix @xmath91 and @xmath92 are constant and only matrix @xmath93 varies as any of the @xmath94 changes because then all @xmath95 s j=1 , ... , n , change according to eq.([eq : cira ] ) .",
    "comparing eq.([eq : matsirbalancing1 ] ) and eq.([eq : matsirbalancing2 ] ) , we choose @xmath96 without loss of generality and for the sake of brevity .",
    "the equilibrium points of the network in ( [ eq : matsirbalancing2 ] ) and those of the network of eq.([eq : matsirbalancing1 ] ) with @xmath97 are equal",
    ".    clearly , if we think of the whole input space , then there are infinite number of equlibrium points due to the singularity of matrix ( @xmath85 ) in ( [ eq : matsirbalancing2 ] ) . however ,",
    "if we think of a certain input subspace assuming that the prototype vectors are in the corners of a hybercube as in the case of many practical applications , and the initial states are within the hybercube , then there is a finite number of equlilibrium points within the hybercube .    in the anaysis above",
    ", we examined the network with no bound on the states , and show that the network is stable in the case of multiple equilibrium points in a bounded hybercube when there exists both zero and negative eigenvalues .",
    "however , in multiple equilibrium case , the simulation results suggest that its performance is quite poor especially when the dimension increases . instead , in what follows , we investigate networks with lower and upper bounded states ( similar as in the power control case where the maximum transmit power is lower and upper bounded in practice ) .",
    "finally , we end up with a sigmoid based `` sir''-balancing network which exhibit similar properties as traditional hopfield neural networks does .",
    "in the power control formulation in section [ section : model ] , it was assumed that either there is no constraints on the maximum transmit power ( which is an impractical assumption ) or the existing unique solution is within the minimum and maximum transmit power constraints . in this section , by lower and upper bounding the system states of the proposed networks and relaxing the positivity condition , we present a sigmoid based sir - balancing networks which exhibits similar features as hopfield nn does .    in practice , in power control the positive transmit power can not be arbitarily small and large .",
    "so , writing eq.([eq : cir ] ) with the minimum and maximum power constraints gives    @xmath98    where @xmath99 and @xmath100 is the minimum and maximum transmit powers .",
    "the sir model in ( [ eq : cirwithmaxtxp ] ) can be further written in a more generalized equation as follows    @xmath101    where @xmath102 represents the modeling of lower and upper bounding the transmit power and of any other effects e.g. power amplifier , etc .",
    "for example , @xmath103 or corresponding piecewise linear function @xmath104 yields eq.([eq : cirwithmaxtxp ] ) .    by relaxing the positivity conditions in the power control problem in ( [ eq : cirfx ] ) and using sigmoid as the bounding function to the states of the proposed network",
    ", we define the following fictitious `` sir '' :    @xmath105    where @xmath82 represents the sigmoid function",
    ". using sigmoid function in ( [ eq : cird ] ) will allow us to design hopfield - like networks , which includes the traditional hopfield network as a special case , as will be seen in the following subsection .    implementing the above - mentioned upper and lower bounds into the network in fig.[fig : cirhop].a ( which was originally suggested in @xcite and @xcite for the power control problem ) results in the following equation @xmath106",
    "let s define the following error signal for the network eq.([eq : diffsgmnn_v1 ] )    @xmath107    writing ( [ eq : diffsgmnn_e_signal_elementwise ] ) in matrix form gives    @xmath108    from eq .",
    "( [ eq : diffsgmnn_v1 ] ) and ( [ eq : diffsgmnn_e_signal ] ) , @xmath109 , which shows @xmath110 if and only if @xmath37 due to the chosen sigmoid function @xmath47 .",
    "so , if @xmath111 given that @xmath41 and @xmath42 in eq.([eq : diffsgmnn_e_signal_elementwise ] ) , then , from eq.([eq : cird ] ) and ( [ eq : diffsgmnn_e_signal_elementwise ] ) , @xmath112 .    _ proposition 2 : _    if @xmath113 is symmetric and @xmath114 is a negative semi - definite matrix , the network in ( [ eq : diffsgmnn_v1 ] ) is stable , and the error vector @xmath36 in ( [ eq : diffsgmnn_e_signal ] ) goes to zero .",
    "[ pr : sgmsirnn_lyap_v1 ]    let s examine the following lyapunov function candidate for the network eq.([eq : diffsgmnn_v1 ] )    @xmath115    where @xmath116 represents the sigmoid function .",
    "note that the lyapunov function in ( [ eq : lyapsgmcir_v1 ] ) is lower bounded for any @xmath117 since matrix @xmath54 is negative semi - definite matrix .",
    "next , we examine the derivative of the lyapunov function with respect to time    @xmath118    from eq.([eq : diffsgmnn_v1 ] ) , @xmath119 . using that in ( [ eq : lyapsgmcir_v1_a ] ) gives",
    "@xmath120 \\left [ \\begin{array}{c } \\frac{df_2}{dx_1 } \\dot{x}_1 \\\\ \\vdots \\\\ \\frac{df_2}{dx_n } \\dot{x}_n   \\end{array } \\right]\\ ] ]    and    @xmath121    since the inverse function of the sigmoid function is an odd function , @xmath122 , and is zero if and only if its argument is zero , and @xmath123 in the work regime , we obtain    @xmath124    from eq.([eq : diffsgmnn_v1 ] ) and eq.([eq : diffsgmnn_e_signal ] ) , @xmath125 . since @xmath47 is an increasing odd function and",
    "is zero only at origin 0 , @xmath126 if and only if @xmath127 .",
    "this observation together with eq.([eq : lyapsgmcir_v1_c ] ) completes the proof .    in what follows",
    ", we examine the evolution of an energy function that gives an insight into the evolution of the error vector that is defined as the argument of the function @xmath128 in a further generalized network . as an attempt to better examine the roles of the diagonal matrix @xmath49 and matrix @xmath50 onto the network dynamic behaviour , let us consider possibly a different function for matrix @xmath49 , denoted as @xmath129 , in eq.([eq : diffsgmnn_v1 ] ) as follows :    @xmath130    where @xmath47 , @xmath116 are sigmoid functions with possibly different ( positive ) slopes , and @xmath129 indicates the function implemented to @xmath49 .",
    "so , the corresponding error vector is defined as    @xmath131    let s define the energy function for the error vector in ( [ eq : appn_e ] ) as follows    @xmath132    the derivative of the energy function with respect to time gives    @xmath133 \\left [ \\begin{array}{c } \\frac{\\delta f_1}{\\delta e_1 }    [ -a_{11 } \\frac{\\delta f_3}{\\delta x_1 } + \\sum_{j = 1 , j \\neq 1}^{n } w_{1j } \\frac{\\delta f_2}{\\delta x_j } \\dot{x}_j ] \\\\",
    "\\frac{\\delta f_1}{\\delta e_2 }    [ -a_{22 } \\frac{\\delta f_3}{\\delta x_2 } + \\sum_{j = 1 , j \\neq 2}^{n } w_{2j } \\frac{\\delta f_2}{\\delta x_j } \\dot{x}_j ] \\\\",
    "\\vdots \\\\",
    "\\frac{\\delta f_1}{\\delta e_n }    [ -a_{nn } \\frac{\\delta f_3}{\\delta x_n } + \\sum_{j = 1 , j \\neq 2}^{n } w_{nj } \\frac{\\delta f_2}{\\delta x_j } \\dot{x}_j ]",
    "\\\\ \\end{array } \\right ]   \\\\      &   =   &   \\dot { { \\mathbf x } } ^t { \\mathbf j } \\dot { { \\mathbf x } } \\end{aligned}\\ ] ]    where matrix @xmath134 is equal to    @xmath135\\ ] ]    where @xmath136 .",
    "if matrix @xmath134 in eq.([eq : appn_jacobianmtrx ] ) is negative definite , then the error vector in ( [ eq : appn_e ] ) goes to zero due to eq.([eq : appn_lyap ] ) and ( [ eq : appn_lyap_der ] ) .    from eq.([eq :",
    "appn_jacobianmtrx ] ) , we observe that    \\a ) @xmath137 is seen in every element of raw @xmath3 .",
    "so , it has no effect on the negative definiteness of matrix @xmath134 .",
    "b ) @xmath138 takes place in all non - diagonal elements , and not in the diagonal elements . from the characteristics of the derivative of the sigmoid function , @xmath139 whenever @xmath29 is close to or in the saturation regime",
    "this assures that the energy function decreases because @xmath140 in ( [ eq : appn_lyap_der ] ) , whenever all the @xmath29 s are in a saturation regime , provided that @xmath141 .",
    "\\c ) @xmath142 is seen on the diagonal elements only .",
    "so , taking the observations in a and b into account , if @xmath129 is chosen a unity function , i.e. , @xmath143 , then the @xmath141 for the saturation regime , which assures that @xmath140 for any @xmath117 in the saturation regime .    in the following subsection",
    ", we show that choosing @xmath129 as a unity function results a network which exhibits similar features as traditional hopfield network does .      from the observations a , b and c above , we choose @xmath129 a unity function , i.e. , @xmath143 . in a smililar way as in ( [ eq : cird ] )",
    ", we define the following `` sir '' :    @xmath144    where @xmath116 is a sigmoid function and all other parameters are defined as in eq.([eq : cird ] ) .",
    "so , the only difference is that the self - state - feedback is directly from its state in eq.([eq : circ ] ) as contrast to its function output in eq.([eq : cird ] ) .",
    "the resulting network is presented in fig.[fig : cirhop].c .    from fig.[fig",
    ": cirhop].c ,    @xmath145    we will call the network in eq.([eq : diffsgmnn_d ] ) as sgm``sir''nn ( sigmoid `` sir''-balancing neural network ) .",
    "let s define the following error signal for the network eq.([eq : diffsgmnn_d ] )    @xmath146    writing ( [ eq : diffsgmnn_e_signal_elementwise_v2 ] ) in matrix form gives    @xmath147    from eq .",
    "( [ eq : diffsgmnn_d ] ) and ( [ eq : diffsgmnn_e_signal_v2 ] ) , @xmath148 .",
    "so , if @xmath111 given that @xmath41 and @xmath42 , then , from eq.([eq : circ ] ) and ( [ eq : diffsgmnn_e_signal_elementwise_v2 ] ) , @xmath149 .",
    "the sgmsirnn in eq.([eq : diffsgmnn_d ] ) includes both the sigmoid power control algorithm in @xcite , which is shown in eq.([eq : diff_dpca ] ) , and the traditional hopfield nn as special cases .",
    "( taking @xmath150 as unity function results in sigmoid power control algorithm and taking @xmath151 as unity function results in hopfield network ) .",
    "_ proposition 3 : _    the sgm``sir''nn in eq.([eq : diffsgmnn_d ] ) converges to @xmath152 if    @xmath153    let s choose the lyapunov function candidate as in ( [ eq : appn_lyap ] ) for the network eq.([eq : diffsgmnn_d ] ) as follows    @xmath154    where @xmath36 is defined in eq.([eq : diffsgmnn_e_signal_elementwise_v2 ] ) .",
    "following the steps from ( [ eq : appn_lyap_der ] ) to ( [ eq : appn_jacobianmtrx ] ) , and taking the observations a to c into account , it s seen that if    @xmath155    which completes the proof , since @xmath156 from eq .",
    "( [ eq : diffsgmnn_d ] ) and ( [ eq : diffsgmnn_e_signal_v2 ] ) .",
    "the analysis above is for a diagonally dominant matrix case . in what follows ,",
    "we examine for any positive @xmath157 and symmetric @xmath158 case .",
    "_ proposition 4 : _    for the sgm``sir''nn in eq.([eq : diffsgmnn_d ] ) with symmetric @xmath158 , and positive diagonal matrix @xmath157 , the defined error vector in ( [ eq : diffsgmnn_e_signal_elementwise_v2 ] ) as well as the state vector @xmath159 stay within a bounded space for any time @xmath160 .",
    "[ pr : sgmsirnn_almostlyapunov ]    let s choose the same energy function in eq.([eq : diagdominant_lyap ] ) .",
    "following the steps from eq.([eq : appn_lyap_der ] ) to ( [ eq : appn_jacobianmtrx ] ) , and taking the observations a , b and c into account , we see that : the @xmath139 for any @xmath29 which is close to or in the saturation regime due to the characteristics of the derivative of the sigmoid function .",
    "this assures that the energy function decreases in any saturation regime because @xmath140 in ( [ eq : appn_lyap_der ] ) for any @xmath159 in saturation .",
    "therefore , the norm of ( [ eq : diffsgmnn_e_signal_v2 ] ) do not go to infinity and stay within a bounded space .",
    "this implies that the @xmath159 also stays within a bounded space from ( [ eq : diffsgmnn_e_signal_v2 ] ) .",
    "we show in proposition 4 that the @xmath159 stay within a bounded space for any time @xmath160 .",
    "since the number of all possible in - saturation state combinations is finite , which is equal to @xmath161 , one may expect that either the network might show a sort of an oscilatory behaviour which would never converge to @xmath162 or the network will eventually converge to an equilibrium point within a finite time , say @xmath163 , satisfying @xmath164 . in what follows",
    "we show that the latter one is correct , i.e. , the network converges to @xmath162 .",
    "_ proposition 5 : _    the sgmsirnn in eq.([eq : diffsgmnn_d ] ) with symmetric matrix * w * and positive diagonal matrix @xmath157 minimizes the following energy function ( lyapunov function ) in ( [ eq : lyapunovhop ] ) and exhibits similar features as traditional hopfield network does . the error vector @xmath36 in ( [ eq : diffsgmnn_e_signal_v2 ] ) goes to zero .",
    "@xmath165    where @xmath166 and @xmath167 represents the inverse of the sigmoid function.[multiblock footnote omitted ]    [ pr : sgmsirnn_lyap1 ]    taking the derivative of the energy function ( lyapunov function candidate ) in ( [ eq : lyapunovhop ] ) with respect to time gives    @xmath168    since @xmath169 , we obtain    @xmath170 \\frac { d{\\mathbf f}_2 } { dt }   \\label{eq : lyapunovcirnn_2}\\end{aligned}\\ ] ]    in ( [ eq : lyapunovcirnn_1 ] ) , @xmath171 is used . from eq.([eq : diffsgmnn_d ] ) and ( [ eq : lyapunovcirnn_2 ] )    @xmath172^t \\frac { d{\\mathbf f}_2 } { dt}\\ ] ]    and finally    @xmath173    since sigmoid @xmath174 is an increasing odd function , and @xmath123 in the work regime ,    @xmath175    eq .",
    "( [ eq : lyapsgmnn_v2 ] ) shows that the lyapunov function decreases at all points other than the equilibrium points and does not change only at the equilibrium points where the error vector @xmath36 in ( [ eq : diffsgmnn_e_signal_v2 ] ) is zero vector , because @xmath176 where @xmath47 is sigmoid function .",
    "this completes the proof .",
    "_ corollary 1 : _    note that in the lyapunov function analysis above , there is no assumption on the eigenvalues of the matrix @xmath177 , and the diagonal matrix @xmath178 .",
    "the only assumption is that @xmath177 is symmetric and @xmath178 is positive .",
    "so , from the lyapunov analysis above for symmetric @xmath113 and positive @xmath179 , we conclude that    1 .",
    "the sgmsirnn does not show oscilatory behaviour .",
    "( this is because the energy function of the sgmsirnn - v1 decreases at all points other than the equilibrium points and does not change only at the equilibrium points ) .",
    "the states for any initial condition converge to one of the equilibrium points depending on the initial contition .",
    "if in the converged eqiulibrium point , @xmath180 , then it corresponds to a prototype vector .",
    "all equilibrium points are potential attractors .",
    "equavalantly , all the attractors are stationary points of @xmath181 .    note that the features above are also attributed to the traditional hopfield nn in @xcite .",
    "taking @xmath151 as unity function results in hopfield nn .    from ( [ eq : diffsgmnn_d ] ) , the equilibrium points of the sgm``sir''nn are the same as those of corresponding hopfield nn .",
    "however , the basins of the attractors of the proposed sgm``sir''nn are , in general , different than those of the hopfield nn , as will be seen from the simulation results in section [ section : simuresults ] .",
    "there are various ways for determining the weight matrix of the hopfield networks : gradient - descent supervised learning ( e.g. @xcite ) , solving linear inequalities ( e.g. @xcite , @xcite among others ) , hebb learning rule @xcite , @xcite etc .",
    "how to design cinr - sgmnn is out of the scope of this paper .",
    "the methods used for traditional hopfied nn can also be used for the sgm``cir''nn .",
    "as far as the simulation results in section [ section : simuresults ] are concerned , for the sake of simplicity and brevity , we assume that the desired prototype vectors are orthogonal and we use the following design procedure for matrices @xmath179 , @xmath113 and @xmath182 , which is based on hebb learning ( @xcite ) :    _ outer products based network design : _    let s assume that @xmath183 desired orthogonal prototype vectors , @xmath184 , are chosen form @xmath185 .    step 1 : calculate the sum of outer products of the prototype vectors ( hebb rule , @xcite )    @xmath186    step 2 : determine the diagonal matrix @xmath187 and @xmath188 as follows :    @xmath189    where @xmath190 is a real number and    @xmath191    where @xmath192 shows the entries of matrix @xmath193 , @xmath0 is the dimension of the vector @xmath194 and @xmath183 is the number of the prototype vectors ( @xmath195 ) . in eq.([eq : afromhebb ] ) , @xmath196 from ( [ eq : hebbqd ] ) since @xmath197 is from @xmath185 .",
    "it s observed that @xmath198 gives relatively good performance , however , by examining the nonlinear state equations in eq.([eq : diffsgmnn_d ] ) , it can be seen that the proposed network sgm``sir''nn contains the prototype vectors at their equilibrium points for a relatively large interval of @xmath190 thanks to the bounding effect of the sigmoid function .",
    "another choice of @xmath190 in ( [ eq : afromhebb ] ) is @xmath199 which yields @xmath200 . in what follows",
    "we show that this choice also assures that @xmath201 are the equilibrium points of the networks .    from ( [ eq : hebbqd])-([eq : wfromhebb ] )    @xmath202 = -(n - l ) \\mathbf { i } +       \\sum_{s=1}^{l } \\mathbf { d } _",
    "s   \\mathbf { d } _ s^t - l   \\mathbf { i } \\ ] ]    where @xmath203 represents the identity matrix .",
    "since @xmath204 , then @xmath205 . using ( [ eq : hebbdpca ] ) and the orthogonality properties of the set @xmath206 gives    @xmath207 \\mathbf { d } _",
    "-(n - l ) \\mathbf { d } _ s   + ( n - l ) \\mathbf { d } _ s   = \\mathbf { 0 } \\ ] ]    so , the prototype vectors @xmath208 correspond to equilibrium points .",
    "in this section , we present two examples , one with 8 neurons and one with 16 neurons .",
    "the weight matrices are designed by the outer products - based design above .",
    "traditional hopfield network is used a reference network .",
    "the continuous hopfield network @xcite is    @xmath209    where @xmath210 , @xmath211 , @xmath68 and @xmath116 is defined as in eq.([eq : diffsgmnn_d ] ) .",
    "_ example 1 : _    in this example , there are 8 neurons",
    ". the desired prototype vectors are    @xmath212\\ ] ]    the weight matrices @xmath213 and @xmath214 , and the threshold vector @xmath215 are obtained as follows by using the outer - products - based design presented in section [ sgmcirnnfx_v2 ] and the slopes of sigmoid functions @xmath47 and @xmath116 are set to @xmath216 and @xmath217 respectively , and @xmath190 is chosen as -1 .",
    "@xmath218 ,    \\quad \\quad { \\mathbf b } = { \\mathbf 0}\\ ] ]    where @xmath219 shows the identity matrix of dimension @xmath0 by @xmath0 .",
    "the figure [ fig : cirhop_ex1_percentage ] shows the percentages of correctly recovered desired patterns for all possible initial conditions @xmath220 , in the proposed sgm``sir''nn as compared to traditional hopfield network .",
    "let @xmath221 show the number of prototype vectors and @xmath222 , ( such that @xmath223 ) , represent the combination @xmath224 , which is equal to @xmath225 , where @xmath226 shows factorial . in our simulation ,",
    "the prototype vectors are from @xmath227 as seen above . for initial conditions",
    ", we alter the sign of @xmath228 states where @xmath228=0 , 1 , 2 , 3 and 4 , which means the initial condition is within @xmath228-hamming distance from the corresponding prototype vector .",
    "so , the total number of different possible combinations for the initial conditions for this example is 24 , 84 and 168 for 1 , 2 and 3-hamming distance cases respectively , which could be calculated by @xmath229 , where @xmath230 and @xmath231 1 , 2 and 3 .",
    "as seen from figure [ fig : cirhop_ex1_percentage ] , the performance of the proposed network sgm``sir''nn is the same as that of the continuous hopfield network for 1-hamming distance case ( @xmath232 for both networks ) and is slightly and noticeably higher than that of the hopfield network for 2 and 3-hamming distance cases respectively .",
    "however , it s known that the performance of hopfield network may highly depend on the weight matrices . for example",
    ", it s observed that for @xmath233 , the performance of hopfield network is slightly better than the proposed network for the same weights @xmath50 and @xmath49 .",
    "so , our test simulation results suggest that the proposed network sgmsirnn and the hopfield network , in general , gives comparable performances in many cases . to investigate",
    "when either one ourperforms the other one would be an interesting future research item .",
    "_ example 2 : _",
    "the desired prototype vectors are    @xmath234\\ ] ]    the weight matrices @xmath210 and @xmath211 and threshold vector @xmath68 is obtained as follows by using the outer products based design as explained above . for matrix @xmath210 , @xmath190 is chosen as -2 .",
    "the other network paramaters are chosen as in example 1 : @xmath216 , @xmath217 .",
    "@xmath235 ,    \\nonumber \\\\ { \\mathbf b } & = & { \\mathbf 0 } \\end{aligned}\\ ] ]    the figure [ fig : cirhop_ex2_percentage ] shows the percentages of correctly recovered desired patterns for all possible initial conditions @xmath236 , in the proposed sgm``sir''nn as compared to traditional hopfield network .",
    "the total number of different possible combinations for the initial conditions for this example is 64 , 480 and 2240 and 7280 for 1 , 2 , 3 and 4-hamming distance cases respectively , which could be calculated by @xmath237 , where @xmath238 and @xmath231 1 , 2 , 3 and 4 .",
    "as seen from figure [ fig : cirhop_ex2_percentage ] the performance of the proposed network d - sgm``sir''nn is the same as that of hopfield network for 1 , 2 and 3-hamming distance cases ( @xmath232 for both networks ) .",
    "the hopfield network network gave slightly better performance than the proposed network for 4-hamming distance case .",
    "in this paper , starting from the power control algorithm in @xcite , we present a sigmoid - based `` signal - to - interference ratio , ( sir ) '' balancing dynamic network , called sgmsirnn , which includes both the sigmoid power control algorithm ( sgmdpca ) and the hopfield neural networks , two different areas whose scope of interest , motivations and settings are completely different .",
    "the stability of the sgm``sir''nn is examined by the proposed lyapunov functions .",
    "starting from the differential equation form of the sigmoid dpca in @xcite and @xcite and relaxing the strick restrictions and assumptions on the positiveness and spectral radius of the link gain matrix , we establish a link from sgmdpca to the hopfield - like nns .",
    "the proposed approach yields a sigmoid basis sir - balancing nn which exhibits similar features as hopfield nn does .",
    "computer simulations show the effectiveness of the proposed network as compared to traditional hopfield network .",
    "our investigations show that 1 ) the proposed sgmsirnn includes both sgmdpca algorithm and hopfield nn as special cases .",
    "2 ) the sgmsirnn exhibits features which are generally attributed to hofield - like recurrent nn .",
    "3 ) estalishing an analogy to the sgmdpca , the proposed network as well as the hopfield network keeps the fictitious sir at a target level .    as a continuation of this work",
    ", we examine the proposed network in discrete time and compare it to discrete hopfield networks in @xcite .",
    "in what follows , we will show the sigmoid function ( @xmath239 ) has the global lipschitz constant @xmath240 .",
    "since @xmath241 is a differentiable function , we can apply the mean value theorem    @xmath242   \\nonumber\\end{aligned}\\ ] ]    the derivative of @xmath82 is @xmath243 whose maximum is at the point @xmath244 , i.e. , @xmath245 .",
    "so we obtain the following inequality    latexmath:[\\[\\label{eq : atkafadan }     where @xmath240 is the global lipschitz constant of the sigmoid function .",
    "this work was supported in part by academy of finland and research foundation ( tukisti ) of helsinki university of technology , finland .",
    "j. van den berg , `` the most general framework of continuous hopfield neural networks '' , proc .",
    ". workshop on of neural networks for identification , control , robotics , and signal / image processing , pp . 92 - 100 , 21 - 23 aug ."
  ],
  "abstract_text": [
    "<S> continuous - time hopfield network has been an important focus of research area since 1980s whose applications vary from image restoration to combinatorial optimization from control engineering to associative memory systems . on the other hand , in wireless communications systems literature , </S>",
    "<S> power control has been intensively studied as an essential mechanism for increasing the system performance . a fully distributed power control algorithm ( dpca ) , called sigmoid dpca , </S>",
    "<S> is presented by uykan in @xcite and @xcite , which is obtained by discretizing the continuous - time system . in this paper , we present a sigmoid - based `` signal - to - interference ratio , ( sir ) '' balancing dynamic networks , called sgmsirnn , which includes both the sigmoid power control algorithm ( sgmdpca ) and the hopfield neural networks , two different areas whose scope of interest , motivations and settings are completely different . </S>",
    "<S> it s shown that the sgmsirnn exhibits features which are generally attributed to hopfield networks . </S>",
    "<S> computer simulations show the effectiveness of the proposed network as compared to traditional hopfield network .    </S>",
    "<S> continuous time hopfield network , distributed sigmoid power control algorithms . </S>"
  ]
}
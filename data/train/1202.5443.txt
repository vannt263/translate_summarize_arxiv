{
  "article_text": [
    "divided differences can be viewed as a discrete analogue of derivatives and are commonly used in approximation theory , see @xcite for a survey .",
    "recently , the second author and lyche established two univariate chain rules for divided differences @xcite , both of which can be viewed as analogous to fa di bruno s formula for differentiating composite functions @xcite .",
    "one of these formulas was simultaneously discovered by wang and xu @xcite . in a follow - up preprint ,",
    "the other chain rule was generalized to the composition of vector - valued functions of several variables @xcite , yielding a formula analogous to a multivariate version of fa di bruno s formula @xcite .    in @xcite ,",
    "the univariate chain rule was applied to find a formula for divided differences of the inverse of a function . in theorem",
    "[ thm : main ] , the main theorem of this paper , we use the multivariate chain rule to prove a similar formula for divided differences of implicitly defined functions .",
    "equation [ eq : inverse ] shows that the formula for divided differences of inverse functions in @xcite follows as a special case .",
    "more precisely , let @xmath1 be a function that is defined implicitly by a function @xmath4 via @xmath5 and @xmath6 , for every @xmath2 in an open interval @xmath7 .",
    "then the main theorem states that for any @xmath8 we can express @xmath9y$ ] as a sum of terms involving the divided differences @xmath10g$ ] , with @xmath11 .    in section [ sec :",
    "divideddifferences ] , we define these divided differences and explain our notation . in section [ sec : recursiveformula ] , we apply the multivariate chain rule to derive a formula that recursively expresses divided differences of @xmath1 in terms of divided differences of @xmath3 and lower order divided differences of @xmath1 .",
    "finally , in section [ sec : formula ] , we solve this recursive formula to obtain a formula that expresses divided differences of @xmath1 solely in terms of divided differences of @xmath3 .",
    "we end the section with applying the main theorem in some special cases .",
    "let @xmath9f$ ] denote the _ divided difference _ of a function @xmath12 at the points @xmath13 , with @xmath14 .",
    "if all inequalities are strict , this notion is recursively defined by @xmath15f : = f(x_0)$ ] and @xmath16f =    \\frac{[x_1,\\ldots , x_n]f - [ x_0,\\ldots , x_{n-1}]f}{x_n - x_0 }    \\qquad \\textup{if}~n>0.\\ ] ] if some of the @xmath17 coincide , we define @xmath18f$ ] as the limit of this formula when the distances between these @xmath17 become arbitrary small , provided @xmath19 is sufficiently smooth there . in particular ,",
    "when @xmath20 , one can show that @xmath9f = f^{(n)}(x_0 ) / n!$ ] . for given @xmath21 satisfying @xmath22 , we shall sometimes shorten notation to @xmath23f : = [ x_{i_0},x_{i_1},\\ldots x_{i_k}]f.\\ ] ]    the above definitions generalize to bivariate divided differences as follows .",
    "let @xmath24 be defined on some @xmath25-dimensional interval @xmath26 suppose we are given @xmath27 and points @xmath28 satisfying @xmath29 and @xmath30 satisfying @xmath31 .",
    "the cartesian product @xmath32 defines a rectangular grid of points in @xmath33 .",
    "the _ ( bivariate ) divided difference _ of @xmath19 at this grid , denoted by @xmath34f,\\ ] ] can be defined recursively as follows .",
    "if @xmath35 , the grid consists of only one point @xmath36 , and we define @xmath37f : = f(x_0,y_0)$ ] as the value of @xmath19 at this point . in case @xmath38 , we can define ( [ eq : bivdd ] ) as @xmath39f - [ x_0 , \\ldots , x_{m-1 } ; y_0 , \\ldots , y_n ] f}{x_m - x_0},\\ ] ] or if @xmath40 , as @xmath41f - [ x_0 , \\ldots , x_m ; y_0 , \\ldots , y_{n-1 } ] f}{y_n - y_0}.\\ ] ] if both @xmath42 and @xmath43 the divided difference ( [ eq : bivdd ] ) is uniquely defined by either recursion formula .    as for univariate divided differences , we can let some of the points coalesce by taking limits , as long as @xmath19 is sufficiently smooth .",
    "in particular when @xmath44 and @xmath45 , this legitimates the notation @xmath46f     : = \\frac{1}{m!n ! } \\frac{\\partial^{m+n } f }        { \\partial x^m \\partial y^n } ( x_0,y_0).\\ ] ]    similarly to equation [ eq : divdiff - short1 ] , we shall more often than not shorten the notation for bivariate divided differences to @xmath47f : = [ x_{i_0},x_{i_1},\\ldots , x_{i_s};y_{j_0},y_{j_1},\\ldots , y_{j_t}]f.\\ ] ]",
    "let @xmath1 be a function implicitly defined by @xmath48 as in section [ sec : introduction ] .",
    "the first step in expressing divided differences of @xmath1 in terms of those of @xmath3 is to express those of @xmath3 in terms of those of @xmath1 .",
    "this link is provided by a special case of the the multivariate chain rule of @xcite .",
    "let @xmath49 be a composition of sufficiently smooth functions @xmath50 and @xmath3 . in this case",
    ", the formula of @xcite for @xmath51 is @xmath52(g\\circ \\ff ) =       \\sum_{k=1}^n\\ \\sum_{0=i_0<i_1<\\cdots < i_k = n}\\ \\sum_{s=0}^k\\ ] ] @xmath53g\\ ] ] @xmath54\\phi            \\prod_{l = s+1}^k [ x_{i_{l-1}},x_{i_{l-1 } + 1 } , \\ldots , x_{i_l}]\\psi.\\ ] ] now we choose @xmath55 to be the graph of a function @xmath1 , i.e. , @xmath56",
    ". then the divided differences of @xmath57 of order greater than one are zero , implying that the summand is zero unless @xmath58 ; below this condition is realized by restricting the third sum in equation [ eq : smultivariatechainrule ] to integers @xmath59 that satisfy @xmath60 . since additionally divided differences of @xmath57 of order one are one , we obtain @xmath61g\\big(\\cdot , y(\\cdot)\\big ) =   \\sum_{k=1}^n\\ \\sum_{0=i_0<i_1<\\cdots < i_k = n}\\ \\sum_{\\substack{s = 0 \\\\s = i_s - i_0}}^k\\ ] ] @xmath62 g      \\prod_{l = s+1}^k [ x_{i_{l-1}},x_{i_{l-1}+1},\\ldots , x_{i_l}]y,\\ ] ] where @xmath63 for @xmath64 . for example , when @xmath65 this formula becomes @xmath66g\\big(\\cdot , y(\\cdot)\\big ) =   [ x_0 ; y_0 , y_1]g\\ , [ x_0,x_1]y + [ x_0 , x_1 ; y_1]g,\\ ] ] and when @xmath67 , @xmath68g\\big(\\cdot , y(\\cdot)\\big ) = & \\   [ x_0;y_0,y_2]g\\ , [ x_0,x_1,x_2]y \\\\ & + [ x_0;y_0,y_1,y_2]g\\ ,   [ x_0,x_1]y\\ , [ x_1,x_2]y   \\\\ & + [ x_0 , x_1 ; y_1 , y_2]g\\ , [ x_1,x_2]y              \\\\ & + [ x_0 , x_1 , x_2 ; y_2]g.\\\\\\end{aligned}\\ ] ]    in case @xmath1 is implicitly defined by @xmath48 , the left hand side of equation [ eq : cr1 ] is zero . in the case",
    "@xmath65 , therefore , we see that @xmath69y = - \\frac{[01;1]g}{[0;01]g},\\ ] ] where we now used the shorthand notation from equations [ eq : divdiff - short1 ] and [ eq : divdiff - short2 ] . for @xmath70 , the highest order divided difference of @xmath1 present in the right hand side of equation [ eq : cr1 ] appears in the term @xmath71g\\ , [ 01\\cdots n]y$ ] . moving this term to the left hand side and dividing by @xmath72g$ ] ,",
    "one finds a formula that expresses @xmath73y$ ] recursively in terms of lower order divided differences of @xmath1 and divided differences of @xmath3 , @xmath74y =   - \\sum_{k = 2}^n\\ \\sum_{0 = i_0 < \\cdots <",
    "i_k = n}\\ \\sum_{\\substack{s = 0\\\\s = i_s - i_0}}^k\\ ] ] @xmath75g}{[0;0n]g}\\!\\prod_{l = s + 1}^k [ i_{l-1 } ( i_{l-1 } + 1)\\cdots i_l]y.\\ ] ]    we shall now simplify equation [ eq : recursionformulaa ] . by equation [ eq : recursionformulaz ] , the first order divided differences of @xmath1 appearing in the product of equation [ eq : recursionformulaa ] can be expressed as quotients of divided differences of @xmath3 .",
    "to separate , for every sequence @xmath76 appearing in equation [ eq : recursionformulaa ] , the divided differences of @xmath3 from those of @xmath1 , we define an expression involving only divided differences of @xmath3 , @xmath77g}{[i_0 ; i_0 i_k]g } \\prod_{\\substack{l = s + 1\\\\ i_l - i_{l-1 } = 1}}^k \\left ( - \\frac { [ i_{l-1 } i_l ; i_l]g}{[i_{l-1 } ; i_{l-1 } i_l]g } \\right).\\ ] ] note that if a sequence @xmath78 starts with precisely @xmath59 consecutive integers , the expression @xmath79 will comprise @xmath59 terms . for instance , @xmath80g}{[0;03]g}\\fg{2}{3 } , \\\\ \\{013\\}g = & \\frac{[0;013]g}{[0;03]g}\\fg{0}{1 } - \\frac{[01;13]g}{[0;03]g } , \\\\",
    "\\{012\\}g = &   - \\frac{[0;012]g}{[0;02]g}\\fg{0}{1}\\fg{1}{2 } + \\frac{[01;12]g}{[0;02]g}\\fg{1}{2 } - \\frac{[012;2]g}{[0;02]g } .\\end{aligned}\\ ] ]    the remaining divided differences @xmath81y$ ] in the product of equation [ eq : recursionformulaa ] are those with @xmath82 , and each of these comes after any @xmath59 satisfying @xmath60 .",
    "we might therefore as well start the product of these remaining divided differences at @xmath83 instead of at @xmath84 , which has the advantage of making it independent of @xmath59 .",
    "equation [ eq : recursionformulaa ] can thus be rewritten as @xmath85y = \\sum_{k = 2}^n \\sum_{0 = i_0 < \\cdots < i_k = n } \\{i_0\\cdots i_k\\}g \\prod_{\\substack{l=1\\\\ i_l - i_{l-1 } \\geq 2}}^k [ i_{l-1}\\cdots i_l]y.\\ ] ] for @xmath86 this expression amounts to @xmath87y = & \\ , \\{012\\}g,\\label{eq : rec2}\\\\   [ 0123]y = & \\ , \\{0123\\}g + \\{023\\}g\\ , [ 012]y + \\{013\\}g\\ , [ 123]y,\\label{eq : rec3}\\\\ [ 01234]y = & \\ , \\{01234\\}g + \\{0134\\}g\\ , [ 123]y + \\{034\\}g\\ , [ 0123]y \\label{eq : rec4}\\\\           + & \\ , \\{0124\\}g\\ , [ 234]y + \\{0234\\}g\\ , [ 012]y + \\{014\\}g\\ , [ 1234]y\\notag\\\\           + & \\ , \\{024\\}g\\ , [ 012]y\\ , [ 234]y . \\notag\\end{aligned}\\ ] ]",
    "in this section we shall solve the recursive formula from equation [ eq : recursionformulab ] . repeatedly applying equation [ eq : recursionformulab ] to itself yields @xmath88y = \\ , & \\{012\\}g,\\\\\\label{eq : mainexamples2 }   [ 0123]y = \\ , & \\{0123\\}g + \\{023\\}g\\,\\{012\\}g + \\{013\\}g\\,\\{123\\}g,\\\\\\label{eq : mainexamples3 } [ 01234]y = \\ , & \\{01234\\}g + \\{0134\\}g\\,\\{123\\}g + \\{034\\}g\\,\\{013\\}g\\,\\{123\\}g \\\\\\notag           + \\ , & \\{034\\}g\\,\\{0123\\}g + \\{034\\}g\\,\\{023\\}g\\,\\{012\\}g + \\{0124\\}g\\,\\{234\\}g   \\\\\\notag           + \\ , & \\{0234\\}g\\,\\{012\\}g + \\{014\\}g\\,\\{134\\}g\\,\\{123\\}g + \\{014\\}g\\,\\{1234\\}g   \\\\\\notag           + \\ , & \\{014\\}g\\,\\{124\\}g\\,\\{234\\}g + \\{024\\}g\\,\\{012\\}g\\,\\{234\\}g.\\end{aligned}\\ ] ] examining these examples , one finds that each term in the right hand sides of the above formulas corresponds to a partition of a convex polygon in a manner we shall now make precise .    with a sequence of labels",
    "@xmath89 we associate the ordered vertices of a convex polygon .",
    "a _ partition of a convex polygon _ is the result of connecting any pairs of nonadjacent vertices with straight lines , none of which intersect . we refer to these straight lines as the _ inner edges _ of the partition .",
    "we denote the set of all such partitions of a polygon with vertices @xmath89 by @xmath90 .",
    "every partition @xmath91 is described by its set @xmath92 of ( oriented ) faces .",
    "each face @xmath93 is defined by some increasing sequence of vertices @xmath94 of the polygon , i.e. , @xmath95 .",
    "we denote the set of edges in @xmath96 by @xmath97 .",
    "let @xmath1 be a function implicitly defined by @xmath48 and @xmath98 @xmath99 be as in section [ sec : introduction ] .",
    "equations [ eq : mainexamples1][eq : mainexamples3 ] suggest the following theorem .",
    "[ thm : main ] for @xmath1 and @xmath3 defined as above and sufficiently smooth and for @xmath70 , @xmath100y = \\sum_{\\pi\\in \\ppp(0,\\ldots , n)}\\ \\prod_{(v_0,\\ldots , v_r)\\in f(\\pi ) } \\{v_0\\cdots v_r\\}g,\\ ] ] where @xmath101 is defined by equation [ eq : curlybrackets ] .",
    "before we proceed with the proof of this theorem , we make some remarks .",
    "for @xmath102 this theorem reduces to the statements of equations to prove theorem [ thm : main ] , our plan is to use equation [ eq : recursionformulab ] recursively to express @xmath73y$ ] solely in terms of divided differences of @xmath3 .",
    "we have found it helpful to assign some visual meaning to equation [ eq : recursionformulab ] .",
    "every sequence @xmath103 that appears in equation [ eq : recursionformulab ] induces a partition @xmath104 whose set of faces comprises an _ inner face _ @xmath76 and _ outer faces _",
    "@xmath105 for every @xmath106 with @xmath107 .",
    "we denote by @xmath108 the set of all partitions of the disjoint union of these outer faces .",
    "an example of such a sequence @xmath109 , together with its inner face , outer faces , and partition set @xmath108 is given in figure [ fig : inner - outer ] .",
    "we shall now associate divided differences to these geometric objects . to each outer face",
    "@xmath105 we associate the divided difference @xmath110y$ ] , and to each inner face @xmath76 we associate the expression @xmath79 . for any sequence @xmath109 that appears in the sum of equation [ eq : recursionformulab ] , the corresponding inner face therefore represents that part of equation [ eq : recursionformulab ] that can be written solely in terms of divided differences of @xmath3 , while the outer faces represent the part that is still expressed as a divided difference of @xmath1 .    , the sequence @xmath111 gives rise to the two outer faces @xmath112 and @xmath113 , which are drawn shaded in the figure .",
    "the set @xmath114 contains in this case just @xmath115 partition , namely the union of the unique partitions @xmath116 and @xmath117 of the outer faces . ]    repeatedly applying equation [ eq : recursionformulab ] yields a recursion tree , in which each node represents a product of divided difference expressions associated to inner and outer faces .",
    "these recursion trees are depicted in figure [ fig : recursiontrees ] for @xmath118 .",
    "equation [ eq : recursionformulab ] roughly states that the expression of any nonleaf vertex is equal to the sum of the expressions of its descendants .",
    ", the figure depicts the recursion trees obtained by repeatedly applying equation [ eq : recursionformulab ] .",
    "the top levels of these recursion trees correspond to equations [ eq : rec2][eq : rec4].,title=\"fig : \" ] , the figure depicts the recursion trees obtained by repeatedly applying equation [ eq : recursionformulab ] .",
    "the top levels of these recursion trees correspond to equations [ eq : rec2][eq : rec4].,title=\"fig : \" ]    this theorem is a generalization of theorem 1 in @xcite , and the proofs are analogous .",
    "we prove the formula by induction on the order @xmath119 of the divided difference of @xmath1 .    by the above discussion",
    ", the formula holds for @xmath118 . for @xmath120 ,",
    "assume the formula holds for all smaller @xmath119 .",
    "consider the recursive formula from equation [ eq : recursionformulab ] .",
    "for every sequence @xmath109 that appears in this equation , the corresponding outer faces have fewer vertices than the full polygon . by the induction hypothesis",
    ", we can therefore replace each divided difference @xmath121y$ ] appearing in the product of equation [ eq : recursionformulab ] by an expression involving only divided differences of @xmath3 .",
    "as before , let @xmath108 denote the set of all partitions of the disjoint union of the outer faces induced by @xmath109 .",
    "then , by the induction hypothesis , the product in equation [ eq : recursionformulab ] is equal to @xmath122 for a given inner face @xmath109 , the set @xmath114 can be identified with @xmath123 by the bijection @xmath124 . substituting",
    "the above expression into equation [ eq : recursionformulab ] then yields @xmath125y = & \\sum_{\\substack{\\textup{inner faces}\\\\\\ii=(i_0,\\ldots , i_k ) } } \\{i_0\\cdots i_k\\}g \\sum_{\\pi\\in \\ppp_\\ii}\\ \\prod_{(v_0,\\ldots , v_r)\\in f(\\pi ) } \\{v_0\\cdots v_r\\}g \\\\ = & \\sum_{\\substack{\\textup{inner faces}\\\\\\ii=(i_0,\\ldots , i_k)}}\\ \\sum_{\\substack{\\pi\\in \\ppp(0,\\ldots , n)\\\\\\ii\\in f(\\pi)}}\\ \\prod_{(v_0,\\ldots , v_r)\\in f(\\pi ) } \\{v_0\\cdots v_r\\}g \\\\ = & \\sum_{\\pi\\in \\ppp(0,\\ldots , n)}\\ \\prod_{(v_0,\\ldots , v_r)\\in f(\\pi ) } \\{v_0\\cdots v_r\\}g.\\qedhere\\end{aligned}\\ ] ]    intuitively , this proof can be expressed in terms of the recursion tree as follows . as remarked in the previous section , equation [ eq : recursionformulab ]",
    "states that the expression of any nonleaf vertex is equal to the sum of the expressions of its descendants . by induction , the expression @xmath73y$ ] of the root vertex",
    "is therefore equal to the sum of the expressions of the leaves , which , by construction , correspond to partitions of the full polygon .",
    "[ ex : maintheorem ] let us apply theorem [ thm : main ] to find a simple expression for divided differences of the function @xmath126 defined on the interval @xmath127 .",
    "this function is implicitly defined by the polynomial @xmath128 . for any knots @xmath129",
    "satisfying @xmath130 and corresponding function values @xmath131 , one finds @xmath132 g = x_a + x_b , \\qquad    [ x_a , x_b , x_c ; y_d]g = 1,\\ ] ] @xmath133 g = y_b + y_c , \\qquad \\ [ x_a ; y_b , y_c , y_d]g = 1,\\ ] ] and all other divided differences of @xmath3 of nonzero order are zero .",
    "in particular , every divided difference of @xmath3 of total order at least three is zero , which means that the sum in equation [ eq : main ] will only be over _ triangulations _",
    "( i.e. , partitions in which all faces are triangles ) . for a polygon with vertices @xmath89 , exercise 6.19a of @xcite states that the number of such triangulations is given by the catalan number @xmath134    consider , for a given triangulation @xmath91 , a face @xmath135 from the product in equation [ eq : main ] . as",
    "any divided difference of the form @xmath136g$ ] is zero for this @xmath3 , equation [ eq : curlybrackets ] expresses @xmath137 as a sum of at most two terms .",
    "there are four cases .",
    "@xmath138 & a , b , c~\\text{consecutive};\\\\ \\displaystyle \\frac { 1}{y_a + y_c}\\cdot\\frac{x_a + x_b}{y_a + y_b } & \\text{only}~a , b~\\text{consecutive};\\\\ \\displaystyle \\frac { 1}{y_a + y_c}\\cdot\\frac{x_b + x_c}{y_b + y_c } & \\text{only}~b , c~\\text{consecutive};\\\\ \\displaystyle \\frac{-1}{y_a + y_c } & \\text{otherwise}. \\end{array}\\right.\\ ] ] for example , when @xmath139 , our convex polygon is a quadrilateral , which admits @xmath140 triangulations @xmath141 and @xmath142 with sets of faces @xmath143 one finds @xmath144\\sqrt{1-x^2 } = \\{012\\}g\\ , \\{023\\}g + \\{013\\}g\\,\\{123\\}g = \\ ] ] @xmath145 \\cdot \\frac{x_2 + x_3}{y_2 + y_3 } + \\ ] ] @xmath146 \\cdot \\frac{x_0 + x_1}{y_0 + y_1}.\\ \\!\\\\ ] ]    next we show that theorem [ thm : main ] is a generalization of theorem 1 of @xcite , which gives a similar formula for inverse functions . to see this , we apply theorem [ thm : main ] to a function @xmath1 implicitly defined by a function @xmath147 . referring to equation [ eq : curlybrackets ]",
    ", we need to compute @xmath148g$ ] for this choice of @xmath3 and various indices @xmath21 and @xmath149 .",
    "applying the recursive definition of bivariate divided differences , one obtains @xmath150x \\hfill = &   \\left\\ { \\begin{array}{ll } x_{i_0 } & \\textup{if}~s = 0 , s = k;\\\\ 1 & \\textup{if}~s = 1 , s = k;\\\\   0 & \\textup{otherwise } , \\end{array } \\right .",
    "\\\\   [ i_0\\cdots i_s;i_s\\cdots i_k]h(y ) = & \\left\\ { \\begin{array}{ll } [ i_s\\cdots i_k]h & \\textup{if}~s = 0;\\\\ 0 & \\textup{otherwise}. \\end{array } \\right.\\end{aligned}\\ ] ]    consider a face @xmath151 of a given partition @xmath152 in equation [ eq : main ] . since @xmath153 , the divided difference @xmath154\\big(x - h(y)\\big)$ ] is zero for @xmath155 . using this , equation [ eq : curlybrackets ] expresses @xmath101 as a single term @xmath156g}{[v_0;v_0v_r]g } \\prod_{\\substack{l=1\\\\v_l - v_{l-1 } = 1}}^r \\left(-\\frac{[v_{l-1}v_l;v_l]g}{[v_{l-1};v_{l-1}v_l]g } \\right ) \\\\",
    "= & -\\frac{[v_0\\cdots v_r]h}{[v_0v_r]h }          \\prod_{\\substack{l=1\\\\v_l - v_{l-1 } = 1}}^r \\frac{1}{[v_{l-1}v_l]h}.\\end{aligned}\\ ] ] taking the product over all faces in the partition @xmath96 , the denominators of the factors in the above equation correspond to the edges of the partition , while the numerators correspond to the faces of the partition . as there is a minus sign for each face in the partition , we arrive at the formula",
    "@xmath157y = \\sum_{\\pi\\in \\ppp(0,\\ldots , n ) } ( -1)^{\\#f(\\pi ) } \\frac{\\displaystyle \\prod_{(v_0,v_1,\\ldots , v_r)\\in f(\\pi ) } [ v_0v_1\\cdots v_r]h}{\\displaystyle \\prod_{(v_0,v_1)\\in e(\\pi ) } [ v_0 v_1]h},\\ ] ] which appears as equation 11 in @xcite .",
    "note that the inverse of the algebraic function @xmath158 in example [ ex : maintheorem ] is again an algebraic function .",
    "equation [ eq : inverse ] would therefore not have been of much help to find a simple expression for divided differences of @xmath1 .",
    "in fact , example [ ex : maintheorem ] can be thought of as one of the simplest examples for which theorem [ thm : main ] improves on equation [ eq : inverse ] , as it concerns a polynomial @xmath3 with bidegree as low as ( 2,2 ) .    in this example",
    "we shall derive a quotient rule for divided differences .",
    "that is , we shall find a formula that expresses divided differences of the quotient @xmath159 in terms of divided differences of @xmath160 and of @xmath161 .",
    "let @xmath162 .",
    "then , in equation [ eq : curlybrackets ] , @xmath163 g =   \\left\\ { \\begin{array}{rl } y_{i_s}[i_0\\cdots i_s]q - [ i_0\\cdots i_s]p & \\textup{if}~s = k;\\\\ \\,[i_0\\cdots i_s]q & \\textup{if}~s = k-1;\\\\ 0 & \\textup{otherwise}. \\end{array } \\right.\\ ] ]    in equation [ eq : main ] , therefore , the only partitions with a nonzero contribution are those whose faces have all their vertices consecutive , except possibly the final one . in particular , the inner face with vertices @xmath164 should either be the full polygon , or should have a unique inner edge @xmath165 . by induction , it follows that the partitions with a nonzero contribution to equation [ eq : main ] are precisely those for which all inner edges end at @xmath119 .",
    "these partitions correspond to subsets @xmath166 , including the empty set , by associating with any such @xmath167 the partition with inner edges @xmath168 .",
    "equation [ eq : main ] becomes @xmath169\\frac{p}{q } = \\ , & \\{0\\cdots n\\}g + \\\\\\notag                \\ , & \\sum_{r=1}^{n-2}\\ \\sum_{k=1}^r\\ \\sum_{0 = i_0 < i_1 < \\cdots < i_k = r } \\{r\\cdots n\\}g\\ \\prod_{j=1}^k \\{i_{j-1}\\cdots i_j n\\}g,\\end{aligned}\\ ] ] where the dots represent consecutive nodes and an empty product is understood to be one .",
    "a long but straightforward calculation involving equations [ eq : curlybrackets ] , [ eq : quotient1 ] , and [ eq : quotient2 ] yields @xmath170 \\frac{p}{q } = \\ , & \\frac{[0\\cdots n]p}{q_0 } + \\\\   \\ , & \\sum_{r=1}^n \\frac{[r\\cdots n]p}{q_r }   \\sum_{k=1}^r ( -1)^k \\!\\!\\sum_{0 = i_0 < i_1 < \\cdots < i_k = r}\\ \\prod_{j=1}^k \\frac{[i_{j-1}\\cdots i_j]q}{q_{i_{j-1}}},\\end{aligned}\\ ] ] where @xmath171 for @xmath172 .",
    "alternatively , this equation can be found by applying a univariate chain rule to the composition @xmath173 , as described in section 4 of @xcite .",
    "finally , we note that taking the limit @xmath174 in equations [ eq : recursionformulaz ] , [ eq : curlybrackets ] , [ eq : mainexamples1 ] , and [ eq : mainexamples2 ] yields @xmath175 where we introduced the shorthand @xmath176 these formulas agree with the examples given in @xcite , ( * ? ? ?",
    "* page 153 ) and with a formula stated as equation 7 in @xcite .",
    "we wish to thank paul kettler , whose keen eye for detail provided us with many valuable comments on a draft of this paper ."
  ],
  "abstract_text": [
    "<S> under general conditions , the equation @xmath0 implicitly defines @xmath1 locally as a function of @xmath2 . in this article </S>",
    "<S> , we express divided differences of @xmath1 in terms of bivariate divided differences of @xmath3 , generalizing a recent result on divided differences of inverse functions . </S>"
  ]
}
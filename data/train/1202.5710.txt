{
  "article_text": [
    "this paper examines sparse grid quadrature on weighted tensor products of reproducing kernel hilbert spaces ( rkhs ) on the unit sphere @xmath1 as per our previous paper on sparse grid quadrature on the torus @xcite , the empirical rates of convergence of the quadrature rules constructed here are compared to the theory of wasilkowski and woniakowski  @xcite .",
    "the setting is the same as that used by kuo and sloan  @xcite , and hesse , kuo and sloan  @xcite to examine quasi - monte carlo ( qmc ) quadrature on products of the sphere @xmath2 but here we examine quadrature with arbitrary weights .",
    "as noted in our previous paper @xcite , rates of convergence and criteria for strong tractability of quadrature with arbitrary weights are known in the case of weighted korobov spaces on the unit torus @xcite . as far as we know , this paper is the first to examine the analogous questions for quadrature with arbitrary weights on the corresponding spaces on products of spheres .",
    "the algorithms we examine are an adaptation of the algorithm used in our previous paper @xcite , and an adaptation of the wtp algorithm of wasilkowski and woniakowski  @xcite .",
    "we examine these algorithms theoretically , giving bounds for the asymptotic convergence rate of quadrature error in the worst case .",
    "we also examine the algorithms empirically , via a small number of numerical examples .",
    "arbitrary weight quadrature on products of spheres is interesting , not just for purely theoretical reasons , such as comparison with the results for equal weight quadrature , but also for practical reasons .",
    "integration over products of the unit sphere is equivalent to multiple integration over the unit sphere .",
    "such multiple integrals can be approximated in a number of ways , including monte carlo methods .",
    "applications of tensor product spaces on spheres and approximate integration over products of spheres include quantum mechanics @xcite , and transport and multiple scattering problems in various topic areas , including acoustics @xcite , optical scattering problems @xcite , and neutron transport problems @xcite .    one prototypical problem to be solved is scattering by a sequence of spheres .",
    "this can be modelled using a multiple integral of a function on the product of the spheres .",
    "the decay in the weights of successive spheres could model the decreasing influence of scattering on each successive sphere , as opposed to just cutting off the calculation after an arbitrary number of scatterings .",
    "the remainder of this paper is organized as follows .",
    "section 2 describes our weighted tensor product space setting in detail .",
    "section 3 describes the optimization problem involved in dimension adaptive sparse grid quadrature .",
    "section 4 introduces the dimension adaptive ( da ) algorithm and shows that it is optimal in a certain sense .",
    "section 5 analyses a version of the wtp algorithm of wasilkowski and woniakowski , and compares its theoretical rate of convergence with that the da algorithm .",
    "section 6 contains numerical results , comparing the two algorithms , and showing how the da algorithm performs as the dimension is increased .",
    "the general setting used in our previous paper @xcite applies equally well here .",
    "we repeat it here , with corrections .",
    "let @xmath3 be a compact manifold with probability measure @xmath4 it follows that the constant function @xmath5 with @xmath6 for all @xmath7 is integrable and @xmath8 then let @xmath9 be a hilbert space of functions @xmath10 with inner product @xmath11 , and kernel @xmath12 with the following properties .    1 .   for every @xmath7 the function @xmath13 , given by @xmath14 satisfies @xmath15 2 .",
    "every @xmath16 is integrable and @xmath17    we recognize @xmath9 as a reproducing kernel hilbert space ( rkhs ) . in this framework , quadrature rules @xmath18",
    "defined by @xmath19 are continuous linear functionals and @xmath20 with @xmath21    we will assume that the quadrature points @xmath22 are given .",
    "an optimal choice of weights @xmath23 minimizes the worst case quadrature error @xmath24 , which is given by the norm @xmath25 the optimal @xmath26 is thus defined as @xmath27 the weights of an optimal quadrature rule are thus obtained by solving a linear system of equations with a matrix whose elements are the values of the reproducing kernel @xmath28 the right - hand side of these equations is a vector with elements all equal to one .    we now describe a special reproducing kernel hilbert space @xmath29 of functions on @xmath30 the space @xmath29 has a kernel @xmath31 satisfying  , but instead of  , this special space satisfies @xmath32 thus the function @xmath33 is not an element of this special space .",
    "we now extend @xmath29 into the space @xmath34 which consists of all functions of the form @xmath35 , where @xmath36 , and @xmath37 with the norm @xmath38 defined by @xmath39 it is easily verified that @xmath40 is an rkhs with reproducing kernel @xmath41 where @xmath31 is the reproducing kernel of @xmath42 in particular , the space @xmath40 with kernel @xmath43 satisfies both properties   and  .    for functions on the domain @xmath44",
    "we consider the tensor product space @xmath45 where @xmath46 this is an rkhs of functions on @xmath44 with reproducing kernel @xmath47 where @xmath48 are the components of @xmath49 moreover , one has @xmath50 where @xmath51 is the product measure , @xmath52 is the scalar product on the tensor product space @xmath53 and @xmath33 is the constant function on @xmath44 with value @xmath54 .",
    "the specific setting for this paper is that of kuo and sloan  @xcite , with @xmath55 .",
    "we now describe this setting .",
    "we take our domain @xmath56 to be the unit sphere @xmath57 , and consider the real space @xmath58 .",
    "we use a basis of real spherical harmonics @xmath59 @xmath60 @xmath61 for @xmath62 we expand @xmath63 in the fourier series @xmath64    for a positive weight @xmath65 , we define the rkhs @xmath66 kuo and sloan @xcite show that the reproducing kernel of @xmath67 is @xmath68 , \\\\",
    "a_r(z )   & : =   \\sum_{\\ell=1}^{\\infty } \\frac{2\\ell+1}{\\big(\\ell(\\ell+1)\\big)^{r } } p_{\\ell } ( z),\\end{aligned}\\ ] ] where @xmath69 is",
    "the legendre polynomial of degree @xmath70 convergence of @xmath71 needs @xmath72    for @xmath73 we now define the tensor product space @xmath74 this is a weighted rkhs on @xmath75 with reproducing kernel @xmath76    kuo and sloan @xcite studied equal weight ( qmc ) quadrature on the space @xmath77 , and found that it is strongly tractable if and only if @xmath78 as @xmath79 hesse , kuo and sloan @xcite constructed sequences of qmc rules on this space , and proved that their worst case error converges at least as quickly as the monte carlo error rate of @xmath80 where @xmath81 is the cost of the quadrature rule in terms of the number of points .",
    "the work of hickernell and woniakowski  @xcite , and sloan and woniakowski  @xcite , on the weighted korobov space of periodic functions on the unit cube , and the work of wasilkowski and woniakowski  @xcite on wtp quadrature on non - periodic functions on the unit cube , suggests bounds on the worst case error for our case of quadrature with arbitrary weights on the space @xmath77 .",
    "we might expect quadrature with arbitrary weights on this space to be strongly tractable if and only if @xmath78 as @xmath82 and , in the case of exponentially decreasing weights , as studied here , we might therefore expect the optimal worst - case error to have an upper bound of order @xmath83 and a lower bound of order @xmath84 for @xmath72    our analysis below shows that these expectations for quadrature with arbitrary weights on @xmath77 can be met , and specifically , that our algorithm satisfies the upper bound suggested here .",
    "we first describe the optimization problem in the general rkhs setting , as given in section  [ hl - section - setting ] .",
    "we assume that a sequence of quadrature points @xmath85 and a sequence of positive integers @xmath86 are given and are the same for all spaces @xmath87 the quadrature rules for @xmath40 are then defined as some element of @xmath88 we denote the optimal rule in @xmath89 by @xmath90 now define the pair - wise orthogonal spaces @xmath91 by @xmath92 and by the orthogonal decomposition @xmath93 using the fact that the @xmath94 are optimal , one can see that @xmath95 and @xmath96 note that one has @xmath97 this is the fundamental reason why one needs the admissibility condition discussed in later this section .",
    "we use the notation @xmath98 , treating elements of @xmath99 as indices , with a partial order such that for @xmath100 , @xmath101 if and only if @xmath102 for all components .    for a index @xmath103",
    "let @xmath104 denote the _ down - set _ of @xmath105 defined by @xmath106 @xcite .",
    "subsets of @xmath99 are partially ordered by set inclusion . for a subset @xmath107 let @xmath108 denote the down - set of @xmath109 defined by @xmath110",
    "then @xmath108 is the smallest set @xmath111 such that if @xmath112 and @xmath113 then @xmath114 .",
    "thus @xmath115    a sparse grid quadrature rule is then of the form @xmath116 for some index set @xmath117 from the orthogonal decomposition @xmath118 one derives the multidimensional orthogonal decomposition @xmath119 one can then show that an optimal @xmath120 is obtained as @xmath121 thus both @xmath122 and @xmath123 are obtained in terms of the down - set @xmath124 effectively restricting the choice of the set @xmath125 to index sets which are also down - sets .",
    "this leads us to defining the concept of an _ optimal _ index set .",
    "an optimal index set is one which minimizes the error for a given cost , or minimizes the cost for a given error . here , the cost is the number of quadrature points , which is the dimension of @xmath122 .",
    "we now make this definition precise .",
    "we first define @xmath126 and @xmath127 for the remainder of this section , we use @xmath128 to denote the required upper bound on quadrature error .",
    "the optimization problem then uses the following definitions .",
    "[ hl - def - nu - p ] for index @xmath129 , define @xmath130    due to the properties of @xmath131 and @xmath132 @xmath133 and @xmath134 satisfy @xmath135    we now consider the following optimization problem , posed as a minimization problem on the variable @xmath136 .    [ hl - prob-0 ] @xmath137 for some @xmath138 , where @xmath133 and @xmath134 satisfy .",
    "in other words , given a required upper bound @xmath139 on the quadrature error , the problem is to find the subset @xmath136 with the smallest cost @xmath140 , satisfying the constraint @xmath141 .",
    "optimization problem  [ hl - prob-0 ] can have multiple solutions , since for @xmath142 if @xmath143 and both @xmath144 and @xmath145 then both @xmath125 and @xmath146 are solutions to optimization problem  [ hl - prob-0 ] . the following problem breaks this tie .",
    "[ hl - prob - alt - dcks ] @xmath147    the solution of optimization problem  [ hl - prob - alt - dcks ] satisfies an admissibility condition .",
    "[ hl - lemma - dcks - adm ] if @xmath125 is a solution of optimization problem  [ hl - prob - alt - dcks ] , then @xmath148    let @xmath149 , where @xmath125 is a solution of optimization problem  [ hl - prob - alt - dcks ] , and therefore of optimization problem  [ hl - prob-0 ] .",
    "then @xmath150 and thus @xmath146 satisfies the constraints of optimization problem  [ hl - prob-0 ] , since @xmath151 .",
    "therefore @xmath146 is also a solution of optimization problem  [ hl - prob-0 ] , since @xmath152 . if @xmath153 it follows from @xmath154 that @xmath155 and so @xmath125 can not be optimal",
    ". therefore @xmath156 .    in view of the admissibility condition",
    ", we reformulate optimization problem  [ hl - prob - alt - dcks ] as :    [ hl - prob - dcks ] @xmath157 for some @xmath138 , where @xmath133 and @xmath134 satisfy .",
    "as pointed out by ( e.g. ) griebel and knapek @xcite , some sparse grid problems can be formulated and solved as knapsack problems .",
    "the resulting solution is optimal in terms of estimated profit for a given `` weight '' .",
    "we call optimization problem  [ hl - prob - dcks ] a _ down - set - constrained _ binary knapsack problem .",
    "each item in the knapsack is a product difference rule .",
    "the profit for each item is just the squared norm of a product difference rule , and this can be calculated precisely .",
    "the `` weight '' of each item is the number of extra points the product difference rule contributes to the overall quadrature rule , assuming that the admissibility condition applies .",
    "the relationships between optimization problem  [ hl - prob - dcks ] and other more well - known knapsack problems are described in more detail in section  [ hl - section - optimality ] .",
    "the dimension adaptive ( da ) algorithm to choose the set @xmath125 for @xmath158 , described in @xcite is quite general , and applies equally well to the case here , where @xmath56 is @xmath0 . for the sake of completeness",
    ", we repeat the algorithm here , with a slight change in notation , as algorithm [ hl - alg - dimadapt ] .    @xmath159 @xmath160    this is a greedy algorithm for optimization problem  [ hl - prob - dcks ]",
    ".    under certain conditions on @xmath133 and @xmath134 , algorithm  [ hl - alg - dimadapt ] solves optimization problem  [ hl - prob - dcks ] . to see this ,",
    "consider _ monotonicity _ with respect to the lattice partial ordering of @xmath99 .",
    "[ hl - def - monotonicity ] the function @xmath161 is _ monotonically decreasing _ if @xmath162 implies that @xmath163 .",
    "if @xmath162 implies that @xmath164 , then @xmath161 is _ strictly decreasing_. the definitions of `` monotonically increasing '' and `` strictly increasing '' are similar .    using definition  [ hl - def - monotonicity ] , the following theorem holds .",
    "[ hl - theorem - alg - dimadapt ] if @xmath161 is strictly decreasing and @xmath165 is monotonically increasing , then algorithm  [ hl - alg - dimadapt ] yields a quadrature rule @xmath166 and index set @xmath125 such that @xmath125 solves the down - set - constrained knapsack optimization problem  [ hl - prob - dcks ] , for @xmath167 .",
    "the proof of theorem  [ hl - theorem - alg - dimadapt ] presented below proceeds in these stages .    1 .",
    "we introduce a related binary knapsack problem , and show that if @xmath125 is a solution of the binary knapsack problem , and @xmath125 is also a down - set , then @xmath125 is a solution of optimization problem  [ hl - prob - dcks ] .",
    "we define the efficiency @xmath168 , describe a greedy algorithm for the binary knapsack problem ( algorithm  [ hl - alg - greedy - ks ] below ) , and show that if the efficiency is strictly decreasing , then each set @xmath125 produced by the greedy algorithm is a solution of the binary knapsack problem , and @xmath125 is also a down - set , and is therefore also a solution of optimization problem  [ hl - prob - dcks ] .",
    "we show that if the efficiency is strictly decreasing , then algorithm  [ hl - alg - greedy - ks ] produces the same sequence of sets as algorithm  [ hl - alg - dimadapt ] .",
    "a binary ( 0/1 ) knapsack problem @xcite related to the optimization problem  [ hl - prob - dcks ] is :    [ hl - prob - ks ] @xmath169 for some @xmath138 , where @xmath133 and @xmath134 satisfy .",
    "usually a binary knapsack problem is posed as a maximization problem , where the selection is from a finite set of items .",
    "here we have a minimization problem and a countably infinite set .",
    "a finite minimization problem can always be posed as an equivalent maximization problem @xcite . in the case of problem  [ hl - prob - ks ]",
    "this can not be done , because the quantity to be maximized ( the sum of the costs of the elements not in the knapsack ) would be infinite .",
    "instead , we must deal directly with the minimization form .",
    "we now formulate a converse of lemma  [ hl - lemma - dcks - adm ] .",
    "[ hl - lemma - ks - adm ] if @xmath125 is a solution of the optimization problem  [ hl - prob - ks ] , and @xmath125 also satisfies the admissibility condition @xmath170 then @xmath125 is a solution of optimization problem  [ hl - prob - dcks ] .",
    "@xmath125 satisfies the admissibility condition @xmath171 and consequently @xmath145 .",
    "it follows that @xmath125 satisfies the constraints of optimization problem  [ hl - prob - dcks ] and thus minimizes @xmath134 under these constraints , i.e. , is a solution of optimization problem  [ hl - prob - dcks ] .",
    "this justifies our calling optimization problem  [ hl - prob - dcks ] a down - set - constrained knapsack problem .",
    "if , in optimization problem  [ hl - prob - ks ] we identify each set @xmath172 with its _ indicator function _",
    "@xmath173 where @xmath174 if and only if @xmath175 we obtain a more usual formulation of the binary knapsack problem :    [ hl - prob - ks-0 - 1 ]    @xmath176    for some @xmath138 , where @xmath133 and @xmath134 satisfy .",
    "solving the binary knapsack problem is hard in general , but for certain values of the constraint @xmath177 , a greedy algorithm yields the solution .",
    "these values are exactly the values for which the solution of the binary knapsack problem equals the solution of the _ continuous _ knapsack problem , which uses the same objective function @xmath133 as optimization problem  [ hl - prob - ks-0 - 1 ] , and relaxes the constraints @xmath178 to @xmath179.$ ] dantzig @xcite gives a graphical proof of this for the classical binary knapsack problem  the finite maximization problem .",
    "martello and toth ( * ? ? ?",
    "* theorem 2.1 , p. 16 ) give an explicit solution for the continous problem , and a more formal proof .    the greedy algorithm for optimization problem  [ hl - prob - ks ]",
    "is based on the _ efficiency _ @xmath180 the algorithms generates the initial values of an enumeration @xmath181 of @xmath182 @xmath183 satisfying @xmath184 the algorithm recursively generates @xmath185 from @xmath186 until for some @xmath187 the condition @xmath188 holds , where @xmath189    the greedy algorithm is therefore as follows .",
    "@xmath159 @xmath160    this algorithm has the following properties .",
    "[ hl - lemma - greedy - ks ] for any @xmath138 , algorithm  [ hl - alg - greedy - ks ] terminates for some @xmath190    for each @xmath191 , the set generated by algorithm  [ hl - alg - greedy - ks ] , @xmath185 is the solution to optimization problem  [ hl - prob - ks ] for @xmath192    the algorithm terminates because @xmath181 is an enumeration of @xmath193 and therefore @xmath194 since @xmath195 but @xmath196    when @xmath197 the constraints of optimization problem  [ hl - prob - ks ] are satisfied .",
    "furthermore , as the method used the largest @xmath198 , the objective function @xmath133 is minimised for optimization problem  [ hl - prob - ks ] .",
    "a more detailed proof can be constructed along the lines of the proof of theorem 2.1 of martello and toth @xcite .",
    "the construction of the enumeration used in algorithm  [ hl - alg - greedy - ks ] requires sorting an infinite sequence and is thus not feasible in general , but , in the case where @xmath134 is strictly decreasing and @xmath133 is monotonically increasing , the enumeration can be done recursively in finite time .    here and",
    "in the following we say that @xmath199 is a _ minimal element _ of a subset of @xmath99 if there are no elements @xmath200 in that subset .",
    "the minimum is thus with respect to the lattice defined by the partial order in @xmath99 .",
    "[ hl - lemma - greedy - down - set ] if @xmath134 is strictly decreasing and @xmath133 is monotonically increasing , at each step @xmath201 of algorithm  [ hl - alg - greedy - ks ] , the index @xmath181 produced by the algorithm is a minimal element of the set @xmath202 . also @xmath203 and",
    "therefore @xmath185 is a down - set .    if @xmath134 is strictly decreasing and @xmath133 is monotonically increasing , then @xmath204 is monotonically decreasing . by construction , @xmath205 so the enumeration must have @xmath206 .",
    "it follows that @xmath207    for @xmath201 , since @xmath181 is an enumeration of @xmath182 no element occurs twice , and so @xmath208 .",
    "any later element @xmath209 in the enumeration can not be smaller than @xmath210 so @xmath181 is a minimal element of @xmath211 . since all elements smaller than @xmath181 occur earlier in the enumeration , we must have @xmath212 therefore , if @xmath213 is a down - set , then so is @xmath214 since @xmath215 by induction , @xmath185 is always a down - set .",
    "[ hl - corr - greedy - solves - dcks ] for each @xmath191 , the set generated by algorithm  [ hl - alg - greedy - ks ] , @xmath185 is the solution to optimization problem  [ hl - prob - dcks ] for @xmath192    this is an immediate consequence of lemmas  [ hl - lemma - ks - adm ] , [ hl - lemma - greedy - ks ] and [ hl - lemma - greedy - down - set ] .",
    "the set @xmath216 of minimal elements of @xmath217 is finite .",
    "one can thus find @xmath218 with largest @xmath198 in this set .",
    "this is how algorithm  [ hl - alg - dimadapt ] finds the index @xmath219 even in the case where the efficiency @xmath220 is not strictly decreasing .    in the case where @xmath204 is strictly decreasing",
    ", we have the following result .",
    "[ hl - lemma - same ] if the efficiency @xmath220 is strictly decreasing , then algorithm  [ hl - alg - greedy - ks ] produces the same sequence of sets @xmath125 as algorithm  [ hl - alg - dimadapt ] .    from the proof of lemma  [ hl - lemma - greedy - down - set ]",
    ", we have that if @xmath204 is strictly decreasing , then for @xmath201 , @xmath181 as per algorithm  [ hl - alg - greedy - ks ] is always the element of @xmath216 which maximizes @xmath221 this is exactly @xmath219 as per algorithm  [ hl - alg - dimadapt ] . for both algorithms , @xmath222",
    "all the pieces are now in place for the main proof of this section .",
    "theorem  [ hl - theorem - alg - dimadapt ] from lemma  [ hl - lemma - greedy - down - set ] we see that if the efficiency @xmath204 is strictly decreasing , then each set @xmath125 produced by the greedy algorithm ( algorithm  [ hl - alg - greedy - ks ] ) is a solution of optimization problem  [ hl - prob - dcks ] . from lemma  [ hl - lemma - same ]",
    "we see that if the efficiency @xmath204 is strictly decreasing , then algorithm  [ hl - alg - greedy - ks ] produces the same sequence of sets @xmath125 as algorithm  [ hl - alg - dimadapt ] .",
    "if @xmath134 is strictly decreasing and @xmath133 is monotonically increasing , then since @xmath223 then @xmath204 is strictly decreasing . therefore each set @xmath125 in the sequence produced by algorithm  [ hl - alg - dimadapt ] is a solution of optimization problem  [ hl - prob - dcks ] .",
    "it remains to show how to construct the set of minimal elements of @xmath217 .",
    "we define @xmath224 the _ forward neighbourhood _ of @xmath225 @xcite as @xmath226 that is , @xmath227 is the set of minimal elements of @xmath228    let @xmath229 be the standard basis of @xmath230 . to construct @xmath216 ,",
    "start with @xmath231 .",
    "then given @xmath232 and @xmath233 one obtains @xmath234    note that @xmath235 as the minimal elements of @xmath217 are either elements of @xmath232 ( but not @xmath236 ) or elements of @xmath237 we see that this set is equal to @xmath216 .",
    "we will now describe a second variant of wtp quadrature , @xmath238 on @xmath239 identical to the sequence of quadrature rules @xmath240 described in section  [ hl - section - problem ] above , except that the order in which the incremental rules are added to this second variant is essentially the order used by wasilkowski and woniakowski  ( * ? ? ? * section 5 ) .",
    "this variant uses criteria similar to those used by wasilkowski and woniakowski ( * ? ? ?",
    "* theorem 3 ) , but adapted to our setting .",
    "these criteria are @xmath241{wasw99 } ) , and } ( j+1)\\ d^{j \\rho } & \\leqslant 1 , \\quad \\text{for all}\\ j \\geqslant 1 , \\label{hl - eq - new-36 } \\intertext{(corresponding to wasil\\-kowski and wo{\\'z}nia\\-kowski \\cite[(36)]{wasw99 } ) , \\newline for some $ d \\in ( 0,1)$ and some positive $ c$ and $ \\rho$. } \\notag\\end{aligned}\\ ] ]    as a consequence of  , we have @xmath242    let @xmath243 @xmath244 be a sequence of positive numbers .",
    "in contrast to wasilkowski and woniakowski  ( * ? ? ?",
    "* section 5 ) , we do not stipulate that @xmath245 define @xmath246    we therefore have @xmath247 as @xmath248 we order the incremental rules in order of non - decreasing @xmath249 for each index @xmath250 , creating an order on the indices @xmath251 .",
    "we adjust @xmath252 so that this order agrees with the lattice partial ordering of the indices .",
    "we now define @xmath253 and define the quadrature rule @xmath254 to obtain a quadrature error of at most @xmath128 , we set @xmath255 finally , we define @xmath256    we can now present our version of wasilkowski and woniakowski s main theorem on the error and cost of wtp quadrature  ( * ? ? ?",
    "* theorem  3 ) .",
    "[ hl - theorem - new-3 ] let @xmath257 assume that a sequence of quadrature points @xmath258 and a sequence of positive integers @xmath86 are given such that the corresponding optimal weight quadrature rules @xmath259 satisfy and for some @xmath260 and some positive @xmath261 and @xmath262 .",
    "then the quadrature rule @xmath263 defined by   has worst - case quadrature error @xmath264 and its cost ( in number of quadrature points ) is bounded by @xmath265 where @xmath266 @xmath267 by @xmath268 , we mean @xmath269    wasilkowski and woniakowski s proof , with @xmath270 applies directly to our theorem  [ hl - theorem - new-3 ] , once the change in @xmath271 is taken into account .",
    "corollary 1 of wasilkowski and woniakowski @xcite presents a simpler bound for the cost of their wtp algorithm , and their simplification also applies here .",
    "[ hl - cor-1 ] for every positive @xmath272 there exists a positive @xmath273 such that the cost of the quadrature rule @xmath263 defined by   is bounded by @xmath274    for exponentially decreasing dimension weights @xmath275 , theorem  4 of wasilkowski and woniakowski  @xcite shows that the @xmath238 rules are strongly polynomial .",
    "our sequence of rules @xmath240 is more efficient than @xmath276 in the sense that @xmath240 is based on the optimal solution of the corresponding down - set - constrained continuous knapsack problem , as explained in section  [ hl - section - optimality ] . as a direct consequence of theorem  [ hl - theorem - new-3 ] and corollary  [ hl - cor-1 ]",
    ", we therefore have the following result .",
    "[ hl - theorem - da - bounds ] let @xmath257 assume that a sequence of quadrature points @xmath258 and a sequence of positive integers @xmath86 are given such that the corresponding optimal weight quadrature rules @xmath259 satisfy and for some @xmath260 and some positive @xmath261 and @xmath262 .",
    "let @xmath277 be the index set and corresponding quadrature rule generated by iteration @xmath278 of algorithm  [ hl - alg - dimadapt ] , based on the rules @xmath279 for sufficiently small error @xmath280 .",
    "then the quadrature rule @xmath281 has worst - case quadrature error @xmath282 and its cost @xmath283 is bounded by @xmath284 where @xmath285 is defined as per theorem  [ hl - theorem - new-3 ] . as a consequence , for every positive @xmath272 there exists a positive @xmath273 such that the cost of the quadrature rule @xmath281 is bounded by @xmath286",
    "with the estimates given by our analysis in hand , we now compare these to our numerical results .    since our underlying domain @xmath56 is @xmath0 rather than @xmath287 we need to change some of the details of the algorithm in comparison to the algorithm used for the torus @xcite .",
    "specifically , we need a sequence of rules on a single sphere , which yields `` good enough '' worst case quadrature error with optimal weights .",
    "our choice of points for our numerical examples is a sequence of point sets , consisting of unions of spherical designs with increasing numbers of points , and non - decreasing strengths .",
    "for the unit sphere @xmath2 a spherical design @xcite of strength @xmath278 and cardinality @xmath288 is a set of @xmath288 points @xmath289 such that the equal weight quadrature rule @xmath290 is exact for all spherical polynomials @xmath134 of total degree at most @xmath278 .",
    "one difference between the constructions for @xmath291 and @xmath0 is that the nesting of spherical designs is not efficient .",
    "the union of two spherical designs of strengths @xmath292 and @xmath293 is in general , a spherical design whose strength is the _ minimum _ of @xmath292 and @xmath293 . in the case of our numerical examples ,",
    "the first design of strength 0 is a single point .",
    "the next design of strength 1 consists of two antipodal points , so nesting is possible in this case .",
    "after this , the resulting unions of spherical designs , in general , have strength no greater than 1 .    for the numerical examples ,",
    "a combination of ( approximate ) extremal ( _ e _ ) and low cardinality ( _ l _ ) spherical designs are used , according to table [ hl - table - da - designs ] .",
    "these approximate spherical designs were all provided by womersley @xcite .",
    "@xmath294    if we let @xmath295 the cardinality of @xmath296 and let @xmath297 be the strength of @xmath298 , then , for the sequence of spherical designs chosen for our numerical examples , the extremal spherical designs have @xmath299 and the low cardinality spherical designs have @xmath300 or @xmath301 , and in all cases @xmath302 it is not yet known a sequence of spherical designs satisfying this lower bound on strength can be extended indefinitely , but there is rigorous computational proof for @xmath297 up to 100 @xcite .",
    "also , it is now known that an infinite sequence of spherical designs exists with the required asymptotic order of strength , that is , there is a sequence of spherical designs of cardinality @xmath303 @xcite but the proof is not constructive and the corresponding implied constant is still unknown .",
    "we now turn to estimates for rules on a single sphere , in order to use them with theorem [ hl - theorem - new-3 ] . on a single unit sphere ,",
    "our sparse grid quadrature rule is an optimal weight rule @xmath304 based on an increasing union of spherical designs , @xmath305 .",
    "its worst case error is therefore smaller than that of the optimal weight rule @xmath306 based on @xmath296 the largest spherical design contained in the union , which is , in turn no greater than the worst case error of the equal weight rule @xmath307 based on @xmath296 with weights @xmath308 , @xmath309    according to hesse , kuo and sloan ( * ? ? ?",
    "* theorem 4 ) , for @xmath310 , we have the bound @xmath311 for some @xmath312    for general @xmath313 as per kuo and sloan @xcite , we have @xmath314    for the sequence of spherical designs chosen for our numerical examples , we also have @xmath315 we therefore have @xmath316 for some @xmath317    recall that @xmath318 for @xmath319 , since @xmath320 is orthogonal to @xmath321 .",
    "therefore @xmath322 since @xmath323 , using we obtain @xmath324 this , in turn implies that @xmath325 where @xmath326    all the approximate spherical designs listed in table  [ hl - table - da - designs ] have one point in common , the `` north pole '' @xmath327 therefore , in our numerical examples , the number of points @xmath328 satisfies @xmath329 since @xmath330 we have @xmath331 and so @xmath332 for @xmath333 also , our numerical examples obtain a value for @xmath334 of approximately 1.453 . in view of , and the preceding argument , criteria and hold with @xmath335 @xmath336 as above , and @xmath337    our numerical examples use @xmath338 and @xmath339 , for @xmath340 , @xmath341 , and  @xmath342 , to see how our rules  @xmath240 and  @xmath238 behave as the decay of the dimension weights is varied . for the @xmath238 rules , we use @xmath343 with @xmath261 and @xmath344 defined as above .    for the da and ww weighted tensor product algorithms , each program run uses @xmath338 ; @xmath340 , @xmath341 , or  @xmath342 ; a particular dimension  @xmath345 , from @xmath346 to  @xmath347 ; a particular maximum @xmath54-norm for indices , typically  @xmath348 ; and a particular maximum number of points , up to  @xmath349 .",
    "the numerical results are potentially affected by three problems .",
    "first , if @xmath65  is close to zero , and the number of points is large , then the matrix used to compute the weights becomes ill - conditioned , and the weights may become inaccurate . in this case ,",
    "a least squares solution is used to obtain a best approximation to the weights .",
    "second , if the current squared error is close to zero , and the squared norm for the current index is close to machine epsilon , then severe cancellation may occur .",
    "third , the sequence of spherical designs used in our numerical examples is finite , so it is quite possible that our algorithm generates an index corresponding to a spherical design which is not included in our finite set . in these last two cases , the calculation of the quadrature rule is terminated .    figure  [ hl - figure-0 - 5-hl - vs - ww ] displays the typical convergence behaviour of the da and ww rules for the cases examined .",
    "the particular case shown is that of  @xmath350 , @xmath338 , @xmath351 .",
    "the number of points used varies from @xmath352 to  @xmath349 .",
    "the cost axis is horizontal and the error axis is vertical , to match the figures shown in the torus paper @xcite .",
    "the curve in figure  [ hl - figure-0 - 5-hl - vs - ww ] labelled `` ww bound '' is actually the minimum of the bounds given by theorem  [ hl - theorem - new-3 ] , as the parameter @xmath353 is varied over a finite number of values between 0 and 1 .",
    "in general , the da algorithm has a cost no greater than that of the ww algorithm .",
    "both are bounded by the ww bound of theorem  [ hl - theorem - new-3 ] .",
    "the ww cost bound itself has an asymptotic rate of convergence of @xmath354 for all of our cases . in other words , the asymptotic bound has quadrature error of order @xmath355 .",
    "judging from figure  [ hl - figure-0 - 5-hl - vs - ww ] , the rates of convergence of both algorithms appear consistent with that of the bound , but the asymptotic rate is not achieved by either algorithm or by the bound itself , for the number of quadrature points displayed in the plot .",
    "table[x = cost , y = error ] serrwtpcull-3-04-0.5-clean.dat ; table[x = cost , y = error ] serrwtpwwcull-3-04-0.5-clean.dat ; table[x = cost , y = error ] wwminlogcost-3-04-0.5-clean.dat ;    for @xmath356 , figure  [ hl - figure-0 - 1 - 1 - 2 - 4 - 8 - 16 ] shows how the convergence rate of the error of the da quadrature rules varies with dimension  @xmath345 , for @xmath346 , @xmath357 , @xmath358 , @xmath359 , and  @xmath347 .",
    "the curve for @xmath346 appears consistent with the asymptotic error rate @xmath360 .",
    "the cases @xmath361 and @xmath362 are almost indistinguishable on this figure .",
    "this is an example of the convergence in dimension .",
    "table[x = cost , y = error ] serrwtpcull-3-01-0.1-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-02-0.1-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-04-0.1-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-08-0.1-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-16-0.1-clean.dat ;    figure  [ hl - figure-0 - 9 - 1 - 2 - 4 - 8 - 16 ] shows the equivalent results for the da quadrature rules for @xmath363 .",
    "the curve for @xmath346 again appears consistent with the asymptotic error rate @xmath360 , but as @xmath345  increases to  @xmath347 , the initial rate of convergence to zero of the error becomes much slower than that for @xmath356 .",
    "this behaviour is expected , given the ww bound .",
    "table[x = cost , y = error ] serrwtpcull-3-01-0.9-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-02-0.9-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-04-0.9-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-08-0.9-clean.dat ; table[x = cost , y = error ] serrwtpcull-3-16-0.9-clean.dat ;",
    "thanks to rob womersley for the spherical designs , and to gary froyland for discussions on precedence - constrained knapsack problems .",
    "the hospitality of the hausdorff research institute for mathematics ( him ) in bonn is much appreciated . the support of the australian research council under its centre of excellence program is gratefully acknowledged ."
  ],
  "abstract_text": [
    "<S> this paper examines sparse grid quadrature on weighted tensor products ( wtp ) of reproducing kernel hilbert spaces on products of the unit sphere @xmath0 . </S>",
    "<S> we describe a wtp quadrature algorithm based on an algorithm of hegland  @xcite , and also formulate a version of wasilkowski and woniakowski s wtp algorithm  @xcite , here called the ww algorithm . </S>",
    "<S> we prove that our algorithm is optimal and therefore lower in cost than the ww algorithm , and therefore both algorithms have the optimal asymptotic rate of convergence given by theorem  3 of wasilkowski and woniakowski  @xcite . </S>",
    "<S> even so , the initial rate of convergence can be very slow , if the dimension weights decay slowly enough . </S>"
  ]
}
{
  "article_text": [
    "partial parsing , often referred to as _ chunking _ , is used as a pre - processing step before deep analysis or as shallow processing for applications like information retrieval , messsage extraction and text summarization .",
    "chunking concentrates on constructs that can be recognized with a high degree of certainty . for several applications ,",
    "this type of information with high accuracy is more valuable than deep analysis with lower accuracy .",
    "we will present a new approach to partial parsing that uses markov models .",
    "the presented models are extensions of the part - of - speech tagging technique and are capable of emitting structure .",
    "they utilize context - free grammar rules and add left - to - right transitional context information .",
    "this type of model is used to facilitate the syntactic annotation of the negra corpus of german newspaper texts @xcite .",
    "part - of - speech tagging is the assignment of syntactic categories ( tags ) to words that occur in the processed text . among others , this task is efficiently solved with markov models .",
    "states of a markov model represent syntactic categories ( or tuples of syntactic categories ) , and outputs represent words and punctuation ( * ? ? ?",
    "* ; * ? ? ?",
    "* and others ) .",
    "this technique of statistical part - of - speech tagging operates very successfully , and usually accuracy rates between 96 and 97% are reported for new , unseen text",
    ".    showed that the technique of statistical tagging can be shifted to the next level of syntactic processing and is capable of assigning grammatical functions .",
    "these are functions like _ subject _ , _ direct object _ , _ head _ , etc .",
    "they mark the function of a child node within its parent phrase .    ' '' ''    0=0 by 5 mm    _ ` a large amount of money and work was raised by the involved organizations ' _    ' '' ''    figure [ fig : examplesent ] shows an example sentence and its structure .",
    "the terminal sequence is complemented by tags ( stuttgart - tbingen - tagset , thielen and schiller , 1995 ) .",
    "non - terminal nodes are labeled with phrase categories , edges are labeled with grammatical functions ( negra tagset ) .    in this paper , we will show that markov models are not restricted to the labeling task ( i.e. , the assignment of part - of - speech labels , phrase labels , or labels for grammatical functions ) , but are also capable of generating structural elements .",
    "we will use cascades of markov models . starting with the part - of - speech layer , each layer of the resulting structure",
    "is represented by its own markov model .",
    "a lower layer passes its output as input to the next higher layer .",
    "the output of a layer can be ambiguous and it is complemented by a probability distribution for the alternatives .",
    "this type of parsing is inspired by finite state cascades which are presented by several authors .",
    "cass @xcite is a partial parser that recognizes non - recursive basic phrases ( chunks ) with finite state transducers .",
    "each transducer emits a single best analysis ( a longest match ) that serves as input for the transducer at the next higher level .",
    "cass needs a special grammar for which rules are manually coded .",
    "each layer creates a particular subset of phrase types .",
    "fastus @xcite is heavily based on pattern matching .",
    "each pattern is associated with one or more trigger words .",
    "it uses a series of non - deterministic finite - state transducers to build chunks ; the output of one transducer is passed as input to the next transducer .",
    "@xcite uses the fix point of a finite - state transducer .",
    "the transducer is iteratively applied to its own output until it remains identical to the input .",
    "the method is successfully used for efficient processing with large grammars .",
    "@xcite present an approach to chunking based on a mixture of finite state and context - free techniques .",
    "they use np rules of a pruned treebank grammar . for processing ,",
    "each point of a text is matched against the treebank rules and the longest match is chosen .",
    "cascades of automata and transducers can also be found in speech processing , see e.g.  @xcite .",
    "contrary to finite - state transducers , cascaded markov models exploit probabilities when processing layers of a syntactic structure .",
    "they do not generate longest matches but most - probable sequences .",
    "furthermore , a higher layer sees different alternatives and their probabilities for the same span .",
    "it can choose a lower ranked alternative if it fits better into the context of the higher layer .",
    "an additional advantage is that cascaded markov models do not need a `` stratified '' grammar ( i.e. , each layer encodes a disjoint subset of phrases )",
    ". instead the system can be immediately trained on existing treebank data .",
    "the rest of this paper is structured as follows .",
    "section [ sec : coding ] addresses the encoding of parsing processes as markov models .",
    "section [ sec : cascaded ] presents cascaded markov models .",
    "section [ sec : experiment ] reports on the evaluation of cascaded markov models using treebank data .",
    "finally , section [ sec : conclusion ] will give conclusions .",
    "' '' ''    ' '' ''    when encoding a part - of - speech tagger as a markov model , states represent syntactic categories and outputs represent words .",
    "contextual probabilities of tags are encoded as transition probabilities of tags , and lexical probabilities of the markov model are encoded as output probabilities of words in states .",
    "we introduce a modification to this encoding .",
    "states additionally may represent non - terminal categories ( phrases ) .",
    "these new states emit partial parse trees ( cf .",
    "figure [ fig : mm - level1 ] ) . this can be seen as collapsing a sequence of terminals into one non - terminal .",
    "transitions into and out of the new states are performed in the same way as for words and parts - of - speech .",
    "transitional probabilities for this new type of markov models can be estimated from annotated data in a way very similar to estimating probabilities for a part - of - speech tagger .",
    "the only difference is that sequences of terminals may be replaced by one non - terminal .",
    "lexical probabilities need a new estimation method .",
    "we use probabilities of context - free partial parse trees .",
    "thus , the lexical probability of the state np in figure [ fig : mm - level1 ] is determined by @xmath0 note that the last three probabilities are the same as for the part - of - speech model .",
    "the basic idea of cascaded markov models is to construct the parse tree layer by layer , first structures of depth one , then structures of depth two , and so forth . for each layer",
    ", a markov model determines the best set of phrases .",
    "these phrases are used as input for the next layer , which adds one more layer .",
    "phrase hypotheses at each layer are generated according to stochastic context - free grammar rules ( the outputs of the markov model ) and subsequently filtered from left to right by markov models .    ' '' ''    ' '' ''    figure [ fig : modelv ] gives an overview of the parsing model .",
    "starting with part - of - speech tagging , new phrases are created at higher layers and filtered by markov models operating from left to right .",
    "the processing example in figure [ fig : modelv ] only shows the best hypothesis at each layer .",
    "but there are alternative phrase hypotheses and we need to determine the best one during the parsing process .",
    "all rules of the generated context - free grammar with right sides that are compatible with part of the sequence are added to the search space .",
    "figure [ fig : cmm - level1 ] shows an example for hypotheses at the first layer when processing the sentence of figure [ fig : examplesent ] .",
    "each bar represents one hypothesis .",
    "the position of the bar indicates the covered words .",
    "it is labeled with the type of the hypothetical phrase , an index in the upper left corner for later reference , the negative logarithm of the probability that this phrase generates the terminal yield ( i.e. , the smaller the better ; probabilities for part - of - speech tags are omitted for clarity ) .",
    "this part is very similar to chart entries of a chart parser .",
    "all phrases that are newly introduced at this layer are marked with an asterisk ( * ) .",
    "they are produced according to context - free rules , based on the elements passed from the next lower layer .",
    "the layer below layer 1 is the part - of - speech layer .",
    "the hypotheses form a lattice , with the word boundaries being states and the phrases being edges .",
    "selecting the best hypothesis means to find the best path from node 0 to the last node ( node 14 in the example ) .",
    "the best path can be efficiently found with the viterbi algorithm @xcite , which runs in time linear to the length of the word sequence .",
    "having this view of finding the best hypothesis , processing of a layer is similar to word lattice processing in speech recognition ( cf .",
    "samuelsson , 1997 ) .",
    "two types of probabilities are important when searching for the best path in a lattice .",
    "first , these are probabilities of the hypotheses ( phrases ) generating the underlying terminal nodes ( words ) .",
    "they are calculated according to a stochastic context - free grammar and given in figure [ fig : cmm - level1 ] .",
    "the second type are context probabilities , i.e. , the probability that some type of phrase follows or precedes another .",
    "the two types of probabilities coincide with lexical and contextual probabilities of a markov model , respectively .    according to a trigram model ( generated from a corpus ) , the path in figure [ fig : cmm - level1 ] that is marked grey is the best path in the lattice .",
    "its probability is composed of    @xmath1 @xmath2 start and end of the path are indicated by a dollar sign ( $ ) .",
    "this path is very close to the correct structure for layer 1 .",
    "the cnp and pp are correctly recognized .",
    "additionally , the best path correctly predicts that appr , vafin and vvpp should not be attached in layer 1 .",
    "the only error is the np _ ein enormer posten_. although this is on its own a perfect np , it is not complete because the pp _ an arbeit und geld _ is missing .",
    "art , adja and nn should be left unattached in this layer in order to be able to create the correct structure at higher layers .",
    "the presented markov models act as _ filters_. the probability of a connected structure is determined only based on a stochastic context - free grammar .",
    "the joint probabilities of unconnected partial structures are determined by additionally using markov models . while building the structure bottom up , parses that are unlikely according to the markov models are pruned .    ' '' ''",
    "= = = = = = = =    # 1#2 [ lb ] < 5pt,-7 mm > at # 1 0 # 1#2 [ lb ] <",
    "5pt,-10 mm > at # 1 0    # 1#2#3#4#5#6#7#8 [ lt ] <",
    ".6mm,4.4 mm > at # 2 # 3 [ lb ] < 2mm,1.5 mm > at # 2 # 3 corners at # 2 # 3 and # 4 # 5 # 1#2#3#4#5#6#7#8 [ lt ] < .6mm,4.4 mm > at # 2 # 3 [ lb ] <",
    "2mm,1.5 mm > at # 2 # 3 corners at # 2 # 3 and # 4 # 5 # 1#2#3#4#5#6#7#8 [ lt ] < .6mm,4.4 mm > at # 2 # 3 [ lb ] < 3mm,1.5 mm > at # 2 # 3 [ rb ] < -1mm,1.5 mm > at # 4 # 3 corners at # 2 # 3 and # 4 # 5 # 1#2#3#4#5#6#7#8 [ lt ] < .6mm,4.4 mm > at # 2 # 3 [ lb ] <",
    "3mm,1.5 mm > at # 2 # 3 [ rb ] <",
    "-1mm,1.5 mm > at # 4 # 3 corners at # 2 # 3 and # 4 # 5    units < mm , mm > x from 0 to 14 , y from 0 to 7 bottom ticks numbered from 0 to 14 by 1 / left / [ r ] < -2mm,0 mm > at 0 3.5 = .4pt    ' '' ''      the standard viterbi algorithm is modified in order to process markov models operating on lattices . in part - of - speech tagging , each hypothesis ( a tag ) spans exactly one word .",
    "now , a hypothesis can span an arbitrary number of words , and the same span can be covered by an arbitrary number of alternative word or phrase hypotheses .",
    "using terms of a markov model , a state is allowed to _ emit a context - free partial parse tree _ , starting with the represented non - terminal symbol , yielding part of the sequence of words .",
    "this is in contrast to standard markov models .",
    "there , states emit atomic symbols .",
    "note that an edge in the lattice is represented by a state in the corresponding markov model .",
    "figure [ fig : mm - level1 ] shows the part of the markov model that represents the best path in the lattice of figure [ fig : cmm - level1 ] .",
    "the equations of the viterbi algorithm are adapted to process a language model operating on a lattice . instead of the words ,",
    "the gaps between the words are enumerated ( see figure [ fig : cmm - level1 ] ) , and an edge between two states can span one or more words , such that an edge is represented by a triple @xmath3 , starting at time @xmath4 , ending at time @xmath5 and representing state @xmath6 .",
    "we introduce accumulators @xmath7 that collect the maximum probability of state @xmath6 covering words from position @xmath4 to @xmath5 .",
    "we use @xmath8 to denote the probability of the deriviation emitted by state @xmath6 having a terminal yield that spans positions @xmath9 to @xmath10 .",
    "these are needed here as part of the accumulators @xmath11 .",
    "initialization : @xmath12 recursion : @xmath13 @xmath14 .",
    "+ termination : @xmath15 additionally , it is necessary to keep track of the elements in the lattice that maximized each @xmath7 . when reaching time @xmath16 , we get the best last element in the lattice @xmath17 setting @xmath18 , we collect the arguments @xmath19 that maximized equation [ eq : vit - lattice ] by walking backwards in time : @xmath20          \\",
    "\\argmax\\limits_{\\langle                  t'',t_i^m , q'\\rangle \\in \\mbox{lattice } }                  \\delta_{t'',t_i^m}(q ' )     p(q_{i}^m|q ' )                   \\delta_{t_i^m , t_{i-1}^m}(q_i ) \\end{array}\\ ] ] for @xmath21 , until we reach @xmath22 .",
    "now , @xmath23 is the best sequence of phrase hypotheses ( read backwards ) .",
    "the process can move on to layer 2 after the first layer is computed .",
    "the results of the first layer are taken as the base and all context - free rules that apply to the base are retrieved .",
    "these again form a lattice and we can calculate the best path for layer 2 .",
    "the markov model for layer 1 operates on the output of the markov model for part - of - speech tagging , the model for layer 2 operates on the output of layer 1 , and so on .",
    "hence the name of the processing model : cascaded markov models .    very often , it is not sufficient to calculate just the best sequences of words / tags / phrases .",
    "this may result in an error leading to subsequent errors at higher layers .",
    "therefore , we not only calculate the best sequence but several top ranked sequences .",
    "the number of the passed hypotheses depends on a pre - defined threshold @xmath24 .",
    "we select all hypotheses with probabilities @xmath25 .",
    "these are passed to the next layer together with their probabilities .      ' '' ''    [ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     ' '' ''    transitional parameters for cascaded markov models are estimated separately for each layer .",
    "output parameters are the same for all layers , they are taken from the stochastic context - free grammar that is read off the treebank .",
    "training on annotated data is straight forward .",
    "first , we number the layers , starting with 0 for the part - of - speech layer .",
    "subsequently , information for the different layers is collected .",
    "each sentence in the corpus represents one training sequence for each layer .",
    "this sequence consists of the tags or phrases at that layer .",
    "if a span is not covered by a phrase at a particular layer , we take the elements of the highest layer below the actual layer .",
    "figure [ fig : training ] shows the training sequences for layers 0  4 generated from the sentence in figure [ fig : examplesent ] . each sentence gives rise to one training sequence for each layer .",
    "contextual parameter estimation is done in analogy to models for part - of - speech tagging , and the same smoothing techniques can be applied .",
    "we use a linear interpolation of uni- , bi- , and trigram models .",
    "a stochastic context - free grammar is read off the corpus . the rules derived from the annotated sentence in figure [ fig : examplesent ]",
    "are also shown in figure [ fig : training ] .",
    "the grammar is used to estimate output parameters for all markov models , i.e. , they are the same for all layers .",
    "we could estimate probabilities for rules separately for each layer , but this would worsen the sparse data problem .",
    "this section reports on results of experiments with cascaded markov models .",
    "we evaluate chunking precision and recall , i.e. , the recognition of kernel nps and pps .",
    "these exclude prenominal adverbs and postnominal pps and relative clauses , but include all other prenominal modifiers , which can be fairly complex adjective phrases in german .",
    "figure [ fig : compnp ] shows an example of a complex np and the output of the parsing process .    ' '' ''    _ ` the dismissal of the federation from several areas that was intended by the government ' _    ' '' ''    ' '' ''    * negra corpus : chunking results * units < 10mm,0.76 mm > x from 1 to 9 , y from 60 to 100 bottom ticks numbered from 1 to 9 by 1 / left ticks numbered from 60 to 100 by 10 / = .4pt breadth < 0pt > from 1 70 to 9 70 breadth < 0pt > from 1 80 to 9 80 breadth < 0pt > from 1 90 to 9 90 breadth < 0pt > from 1 100 to 9 100 [ r ] < -9mm,0 mm > at 1 80 [ lt ] < 5mm,-2.7 mm > at 9 60 [ t ] <",
    "0mm,-8.5 mm > at 1 60 [ t ] < 0mm,-8.5 mm > at 2 60 [ t ] <",
    "0mm,-8.5 mm > at 3 60 [ t ] <",
    "0mm,-8.5 mm > at 4 60 [ t ] <",
    "0mm,-8.5 mm > at 5 60 [ t ] <",
    "0mm,-8.5 mm > at 6 60 [ t ] <",
    "0mm,-8.5 mm > at 7 60 [ t ] < 0mm,-8.5 mm > at 8 60 [ t ] <",
    "0mm,-8.5 mm > at 9 60 [ lt ] < 5mm,-8 mm > at 9 60 [ lb ] < 5mm,0 mm > at 9 60    (    ' '' ''    )    1 72.55 2 92.54 3 98.09 4 99.58 5 99.88 6 99.95 7 99.98 8 100.00 9 100.00 /    (    ' '' ''    ) 1.194 58 2 74.73 3 80.79 4 82.84 5 83.97 6 84.40 7 84.71 8 84.74 9 84.75 / at 2 74.73 3 80.79 4 82.84 5 83.97 6 84.40 7 84.71 8 84.74 9 84.75 /    (    ' '' ''    )",
    "1 91.35 2 90.40 3 89.51 4 89.03 5 88.71 6 88.46 7 88.34 8 88.29 9 88.27 / at 1 91.35 2 90.40 3 89.51 4 89.03 5 88.71 6 88.46 7 88.34 8 88.29 9 88.27 /    ' '' ''    for our experiments , we use the negra corpus @xcite .",
    "it consists of german newspaper texts ( frankfurter rundschau ) that are annotated with predicate - argument structures .",
    "we extracted all structures for nps , pps , aps , avps ( i.e. , we mainly excluded sentences , vps and coordinations ) .",
    "the version of the corpus used contains 17,000 sentences ( 300,000 tokens ) .",
    "the corpus was divided into training part ( 90% ) and test part ( 10% ) .",
    "experiments were repeated 10 times , results were averaged .",
    "cross - evaluation was done in order to obtain more reliable performance estimates than by just one test run . of",
    "the process is a sequence of words ( into sentences ) , output are part - of - speech tags and structures like the one indicated in figure [ fig : compnp ] .",
    "figure [ fig : negra - parse ] presents results of the chunking task using cascaded markov models for different numbers of layers .",
    "percentages are slightly below those presented by @xcite .",
    "but they started with correctly tagged data , so our task is harder since it includes the process of part - of - speech tagging .",
    "recall increases with the number of layers .",
    "it ranges from 54.0% for 1 layer to 84.8% for 9 layers .",
    "this could be expected , because the number of layers determines the number of phrases that can be parsed by the model .",
    "the additional line for `` topline recall '' indicates the percentage of phrases that can be parsed by cascaded markov models with the given number of layers .",
    "all nodes that belong to higher layers can not be recognized .",
    "precision slightly decreases with the number of layers .",
    "it ranges from 91.4% for 1 layer to 88.3% for 9 layers .",
    "the @xmath26-score is a weighted combination of recall @xmath27 and precision @xmath28 and defined as follows : @xmath29 @xmath30 is a parameter encoding the importance of recall and precision . using an equal weight for both ( @xmath31 ) , the maximum @xmath26-score is reached for 7 layers ( @xmath3286.5% ) .",
    "the part - of - speech tagging accuracy slightly increases with the number of markov model layers ( bottom line in figure [ fig : negra - parse ] ) .",
    "this can be explained by top - down decisions of cascaded markov models .",
    "a model at a higher layer can select a tag with a lower probability if this increases the probability at that layer .",
    "thereby some errors made at lower layers can be corrected .",
    "this leads to the increase of up to 0.3% in accuracy .",
    "results for chunking penn treebank data were previously presented by several authors @xcite .",
    "these are not directly comparable to our results , because they processed a different language and generated only one layer of structure ( the chunk boundaries ) , while our algorithm also generates the internal structure of chunks . but",
    "generally , cascaded markov models can be reduced to generating just one layer and can be trained on penn treebank data .",
    "we have presented a new parsing model for shallow processing .",
    "the model parses by representing each layer of the resulting structure as a separate markov model .",
    "states represent categories of words and phrases , outputs consist of partial parse trees . starting with the layer for part - of - speech tags ,",
    "the output of lower layers is passed as input to higher layers .",
    "this type of model is restricted to a fixed maximum number of layers in the parsed structure , since the number of markov models is determined before parsing .",
    "while the effects of these restrictions on the parsing of sentences and vps are still to be investigated , we obtain excellent results for the chunking task , i.e. , the recognition of kernel nps and pps",
    ".    it will be interesting to see in future work if cascaded markov models can be extended to parsing sentences and vps .",
    "the average number of layers per sentence in the negra corpus is only 5 ; 99.9% of all sentences have 10 or less layers , thus a very limited number of markov models would be sufficient",
    ".    cascaded markov models add left - to - right context - information to context - free parsing .",
    "contextualization _ is orthogonal to another important trend in language processing : _",
    "lexicalization_. we expect that the combination of these techniques results in improved models .",
    "we presented the generation of parameters from annotated corpora and used linear interpolation for smoothing .",
    "while we do not expect improvements by re - estimation on raw data , other smoothing methods may result in better accuracies , e.g. the maximum entropy framework .",
    "yet , the high complexity of maximum entropy parameter estimation requires careful pre - selection of relevant linguistic features .",
    "the presented markov models act as filters .",
    "the probability of the resulting structure is determined only based on a stochastic context - free grammar . while building the structure bottom up , parses that are unlikely according to the markov models are pruned .",
    "we think that a combined probability measure would improve the model .",
    "for this , a mathematically motivated combination needs to be determined .",
    "i would like to thank hans uszkoreit , yves , wojciech skut , and matthew crocker for fruitful discussions and valuable comments on the work presented here .",
    "and i am grateful to sabine kramp for proof - reading this paper",
    ".            shlomo argamon , ido dagan , and yuval krymolowski . 1998 . a memory - based approach to learning shallow natural language patterns . in _ proceedings of the 17th international conference on computational linguistics coling - acl-98 ) _ , montreal , canada .",
    "thorsten brants , wojciech skut , and brigitte krenn .",
    "tagging grammatical functions . in _ proceedings of the conference on empirical methods in natural language processing emnlp-97 _ , providence ,",
    "ri , usa .    claire cardie and david pierce .",
    "error - driven pruning of treebank grammars for base noun phrase identification . in _ proceedings of the 17th international conference on computational linguistics coling - acl-98 ) _ , montreal , canada .",
    "kenneth  ward church .",
    "1988 . a stochastic parts program and noun phrase parser for unrestricted text . in _ proceedings of the second conference on applied natural language processing anlp-88",
    "_ , pages 136143 , austin , texas , usa .",
    "fernando pereira , michael riley , and richard sproat .",
    "1994 . weighted rational transductions and their application to human language processing . in _ proceedings of the workshop on human language technology _",
    ", san francisco , ca .",
    "morgan kaufmann .",
    "emmanuel roche .",
    "two parsing algorithms by means of finite state transducers . in _ proceedings of the 15th international conference on computational linguistics",
    "coling-94 _ , pages 431435 , kyoto , japan .",
    "christer samuelsson .",
    "1997 . extending @xmath33-gram tagging to word graphs . in _ proceedings of the 2nd international conference on recent advances in natural language processing ranlp-97 _ , tzigov chark , bulgaria .",
    "wojciech skut , brigitte krenn , thorsten brants , and hans uszkoreit . 1997 .",
    "an annotation scheme for free word order languages . in _ proceedings of the fifth conference on applied natural language processing anlp-97 _ ,",
    "washington , dc ."
  ],
  "abstract_text": [
    "<S> this paper presents a new approach to partial parsing of context - free structures . </S>",
    "<S> the approach is based on markov models . each layer of the resulting structure </S>",
    "<S> is represented by its own markov model , and output of a lower layer is passed as input to the next higher layer . </S>",
    "<S> an empirical evaluation of the method yields very good results for np / pp chunking of german newspaper texts . </S>"
  ]
}
{
  "article_text": [
    "enterprises are highly connected to partners and even competitors as part of value chains consisting of business processes . the business document exchange is actually implemented by complex , underlying networks of application and middleware systems , called integration networks . to remain competitive enterprises have to adapt their business processes in a timely and flexible manner , which requires visibility and control over the integration network .",
    "however , currently information is locked into systems of an enterprise .",
    "to overcome this situation , a new discipline , called network mining ( nm ) , strives to discover and extract raw data hidden within heterogeneous systems in complex enterprise landscapes @xcite .",
    "the raw data implicitly contains information about the integration network , i.e. middleware and application . from that",
    ", our system reconstructs integration networks . for the system user , the resulting linked real - world data describing the `` as - is '' network",
    "can then be captured in e.g. network - centric bpmn models @xcite .    a generalized view of such a network is shown in fig .",
    "[ fig : integrationnetwork_all ] .",
    "when looking at an enterprise landscape , the systems within the integration network can be classified into different categories based on the integration content and the role they play .",
    "the classification provides insight into the capabilities and complexity of the network and allows to manage business processes , contextualized visualization and operation on the network .",
    "these categories span from applications with embedded integration or even mediation capabilities , like proxies , enterprise services , composite applications or applications with service adaptation ( categories i+ii ) , over standalone enterprise service bus ( esb ) or middleware instances with flexible pipeline processing , e.g. mapping , routing and connectivity for legacy systems ( category iii+iv ) , to business to business ( b2b ) gateways for cross - enterprise document exchange ( categories v+vi ) and system management solutions , which allow to operate these systems , their software and lifecycle ( category vii ) .",
    "in this paper we present an approach to model and reconstruct integration networks from discovered raw data using logic programming , more precisely standard datalog with recursion and stratified negation .",
    "we describe how information in form of nm raw data can be represented independent of their original domain in a network integration model ( nim ) and how user facts can be added .",
    "we have chosen datalog to represent this model , which we use to develop datalog programs ( i.e. a finite set of datalog rules ) that express the network .",
    "that means identifying entity equivalences , computing edges and semantic references as well as dealing with user input .",
    "we validated our approach on simulated integration network data and report our experience with the network inference datalog system in real - world enterprise networks as well as possible extensions .    in section [ sec : motivation ]",
    "we describe the problem domain and state on design principles and decisions in section [ sec : design ] .",
    "section [ sec : naim ] defines the nim and section [ sec : inia ] introduces the inference algorithm .",
    "section [ sec : results ] shows experimental results and states on experiences .",
    "section [ sec : relatedwork ] concludes with related work , before we draw conclusions and outline future research in section [ sec : outlook ] .",
    "our premise is that relevant data for computing integration networks is hidden in enterprise system landscapes .",
    "however , for that it has to be discovered by nm from mostly disjoint domains in different formats with different meaning @xcite .",
    "the integration networks derived from the discovered information consist of nodes and edges on different abstraction levels .",
    "the basic entities of the integration network are logical systems ( e.g. tenants , applications , integration middleware ) and message flows , which are either direct connectivity or mediated communication/ integration .",
    "the actual information about these entities as well as their semantics are discovered by network mining ( nm ) systems @xcite . however , the discovered raw data is domain - specific and needs to be translated into a domain independent model for network inference , while preserving its semantics .",
    "the definition of a network integration model ( nim ) is the basis for applying network inference algorithms .",
    "since the raw data comes from disjoint domains , in different formats with different semantics , inference algorithms have to deal with possibly duplicate , fragmented , uncertain or incorrect information while computing the network .",
    "[ fig : challenges ] schematically shows some of these challenges .",
    "for instance , entity equivalences have to be identified and handled .",
    "direct and transitive edges have to be calculated and semantic relations between nodes have to be inferred . fig .",
    "[ fig : challenges_1 ] shows systems @xmath0 and @xmath1 discovered from domain @xmath2 exchanging messages over middleware system @xmath3 , and systems @xmath4 and @xmath5 discovered from domain @xmath6 exchanging messages over middleware system @xmath7 . here , @xmath1 and @xmath5 denote the same system , as well as @xmath3 and @xmath4 are equivalent . based on the inferred equivalences ,",
    "the nodes are partitioned as equivalence relations @xmath8 , i.e. @xmath9 and @xmath10 , and the edges are computed accordingly ( see fig .",
    "[ fig : challenges_2 ] ) . systems or applications run on physical hosts , e.g. @xmath11 from discovery domain @xmath12 . the relationships between systems and hosts are not considered as edges but semantic references within the network .",
    "hosts build the bridge to the related domain of system management networks , which are addressed by @xcite . a new host @xmath13 is added to the network as user knowledge on which @xmath4 runs .",
    "when merging systems @xmath3 and @xmath4 the semantic relation is preserved .",
    "@xmath14{\\label{fig : challenges_1}\\includegraphics[width=0.5\\textwidth]{challenges_3.png } } \\subfigure[schematic view of reconstructed network]{\\label{fig : challenges_2}\\includegraphics[width=0.5\\textwidth]{challenges_4.png } } & \\end{array}$ ]",
    "the major design decisions taken were about finding a representation for an integration model and a language to express inference algorithms .",
    "we needed to select ( 1 ) an approach , which does not require to modify the system when changing the inference programs or the integration model , ( 2 ) a well - understood representation for information suitable for the inference approach , and ( 3 ) a sufficiently powerful inference technique , simple enough to be used by our customers and partners to define their own inference programs .",
    "the necessity of ( 1 ) is derived from developing the inference programs in the early prototypes .",
    "the domain of the data and the scope of inference evolved - and it will continue to do so as more data sources are integrated and inference is refined .",
    "hence the lifecycle of the data model and of the inference programs needs to be decoupled from that of the system .",
    "since system landscapes and business networks for large enterprises are very complex and many implementations need customer - specific modifications or extensions both ( 2 ) and ( 3 ) are required . as the relational model is a foundation for most business applications and is thus well - understood by customers , it is a natural choice for ( 2 ) . consequently , we initially considered sql and its imperative extensions to express inference programs .",
    "however , as network analysis and inference are expressed more naturally using recursive rules we moved towards logic programming languages like prolog or datalog , choosing datalog for its simpler semantics .",
    "the model for representing integration networks as virtual `` as - is '' enterprise landscape covers a representative intersection of entities from the enterprise integration middleware space @xcite .",
    "although this domain has many aspects , which are even differently treated in different system implementations , we identified a common , core meta - model , which we call network integration model ( nim ) .",
    "the basic nim entities relevant for the inference are introduced subsequently , while more entities might be explained later where necessary .",
    "the base premise for defining an integration meta - model is to represent the actual physical hosts in the enterprise landscape as first class entities and then find the interfaces provided or called by them during message - based communication . since most of the communication actually addresses logical entities like applications or tenants , called systems , running on the physical hosts , a _ system _ is considered a node of the network .",
    "that means , systems represent ( business ) application and integration logic . for the communication with other systems via messages the _ messageflow _ represents edges in the network .",
    "technically , messages are exchanged over interfaces , _ interface _ , and channels , containing e.g. service bindings and operations , which we represent as _ incomingconfiguration _ and _ outgoingconfiguration_. the inbound and outbound configurations are considered separate entities , since they carry important information about the message flows , thus helping to reconstruct the network s edges .",
    "this notion can also be found in a common graph traversal algebra to set custom processors or actions when entering or leaving a node @xcite .",
    "[ fig : sample_business_trading_network ] shows the basic nim entities and their relations .",
    "the algorithm for computing integration networks consists of multiple steps , which have been identified for a parallel analysis allowing it to scale across large datasets of nm raw data .",
    "since the information is represented in the nim , the inference mechanism is independent of the specific integration and system domains . as discussed in section [ sec : motivation ] , unique systems and hosts are identified by equivalence algorithms and semantic links between hosts and systems are computed ( step 1 ) .",
    "based on that , incoming and outgoing configurations are identified ( step 2 ) and then used to reconstruct message flows through building separate call graphs ( steps 3,4 ) which are merged afterwards ( step 5 ) . then message flows are linked with application and integration content ( step 6 ) and user knowledge is integrated . with user knowledge , the quality of the inference mechanism can be improved and information complemented or enriched . within the inference programs ,",
    "all user knowledge literals end with the `` user '' postfix , while discovered knowledge ends with `` disc '' ( i.e. edb relation ) .",
    "to formalize the network reconstruction , a logic programming approach is used , in which the algorithms are described by datalog rules and the discovered raw data is a set of datalog facts according to nim .",
    "the different processes of adding newly discovered information and removing outdated is continuous . for that , each piece of discovered information is annotated with a timestamp .",
    "however , instead of removing outdated information that is referenced by higher layer information models as in @xcite , it is kept and marked outdated until it is not referenced anymore .",
    "_ step 1 : identify unique hosts and systems _ to identify hosts and systems uniquely through building equivalence classes , the single instances have to be identified . while hosts can be identified by e.g. host name , ip - address , the systems have no universally applicable identification scheme , thus they are usually identified using context dependent identifiers .",
    "for instance , the set of host identifiers can be an ip - address , the dns name , and a host name .",
    "this information mainly comes from different , disjoint instances of system management software , mostly from it service management @xcite and virtualization systems @xcite .",
    "all identifiers are contained in the equivalence class and any reference to one of them identifies the host .",
    "while these equivalence classes are not stable over time , it is quite likely that at least one of the elements of an equivalence class does not change if another one changes , thus making the identification more robust . that way , identity can be maintained over long periods of time in the presence of constant but gradual change .",
    "the raw facts from nm are @xmath15 and @xmath16 , which relate a @xmath17 or @xmath18 to an addressable uri .",
    "relations like @xmath19 and @xmath20 connect two host or system identifiers , e.g. which refer to the same physical host or logical system .",
    "the semantic relation + @xmath21 connects a system to the host that it runs on . for simplicity ,",
    "homogenous clusters of machines are also considered as one host .    ....",
    "same_sys(?sys_id1 , ?",
    "sys_id2 ) : -       same_sys_disc(?sys_id1 , ?",
    "sys_id2 ) .",
    "same_sys(?sys_id1 , ?",
    "sys_id2 ) : -       same_sys(?sys_id1 , ?",
    "sys_id3 ) ,       same_sys(?sys_id3 , ?",
    "sys_id2 ) .",
    "same_host(?host_id1 , ?",
    "host_id2 ) : -       runs_on_disc(?sys_id1 , ?",
    "host_id1 ) ,       runs_on_disc(?sys_id2 , ?",
    "host_id2 ) ,       same_sys(?sys_id1 , ?",
    "sys_id2 ) . ....    based on that",
    ", rules for e.g. @xmath22 and @xmath23 are used to infer equivalence classes that allow to write rules that exploit the information about system landscapes . for instance , more than one system can run on one physical host , but one system can not run on more than one host , listing [ listing : samehost ] .    _",
    "step 2 : determine incoming and outgoing calls _ in current middleware route configurations , the senders of incoming calls to the system can be registered but are mostly unknown . on the other hand , components like the file adapter and",
    "the apple push notification service ( apns ) always contain the sender system @xcite .",
    "however , for outgoing calls from the sender system , e.g. via http , soap , receiver or outgoing call configurations are needed to initiate the message flow to the receiver .",
    "this results in an outgoing and incoming call graph depicted in fig . [",
    "fig : outincallgraph ] .",
    "the @xmath24 and @xmath25 facts relate a _",
    "sys_id _ to a @xmath26 of an incoming configuration or an outgoing configuration for the identified system .",
    "@xmath27{\\label{fig : outincallgraph}\\includegraphics[width=0.35\\textwidth]{step2.png } } \\subfigure[call graph extension]{\\label{fig : extcallgraph}\\includegraphics[width=0.65\\textwidth]{step3.png } } & \\end{array}$ ]    _ step 3 : determine message flows based on outgoing calls _ since outgoing calls are made to a particular endpoint , the corresponding call configurations contain an identifier for the receiving host or system .",
    "these identifiers can then be matched against the identifiers that were determined in step 1 .",
    "if no identifiers are available , these call configurations are processed in step 4 . to relate outgoing call configurations to receiver systems @xmath28 relates a @xmath26 to an outgoing configuration to a @xmath18 that identifies a receiving system or similarily @xmath29 for hosts .    ....",
    "msg_flow(?sys_id_snd , ?",
    "sys_id_recv ) : -       outgoing_disc(?sys_id_snd , ?",
    "rconf ) ,       recv_disc(?rconf , ?",
    "sys_id_recv ) .",
    "....    .... msg_flow_host(?host_id_send , ?",
    "host_id_recv ) : -       runs_on_disc(?sys_id_snd , ?",
    "host_id_send ) ,       outgoing_disc(?sys_id_snd , ?",
    "rconf ) ,       recv_host_disc(?rconf , ?",
    "host_id_recv ) .",
    "....    then @xmath30 rules determine the message flows between systems ( listing [ listing : messageflow ] ) and + @xmath31 between hosts ( listing [ listing : messageflowhost ] ) .",
    "that results into a an extension of the call graph shown in fig .",
    "[ fig : extcallgraph ] , in which @xmath32 represents a system connected to other systems via incoming and outgoing configurations .",
    "_ step 4 : determine message flows based on incoming calls _ similar to the previous step , incoming call configurations are identified . for that , @xmath33 + @xmath34 facts are related via uri to incoming configurations .",
    "again , this results in an extension of the call graph .",
    "_ step 5 : merge call graphs for a system _ so far unique hosts and systems are identified and message flows are determined for a single system .",
    "now , the identified incoming and outgoing call configurations from different systems are matched .",
    "this is done by matching compatible protocols , message types , etc .",
    "after new message flows are identified , the call graph is extended by the merged information ( see fig . [",
    "fig : mergedgraph ] ) . in case",
    "some incoming or outgoing call configurations do not match to already identified call configurations , they are kept in the model as `` unlinked '' configurations for matching new configurations .",
    "_ step 6 : link message flows to application and integration content _ the outgoing and incoming call configurations with hosts and systems result in a view of the network .",
    "however , these message flows only conclude communication between hosts and systems .",
    "the outgoing and incoming call configurations also have a link to application and integration content deployed and running on the systems .",
    "this content refers to the particular process or integration steps that trigger outgoing calls or receive incoming calls . in other words , process models",
    "@xcite and middleware routes @xcite , i.e. integration flow ( iflow ) or integration process , give insight into the details within systems and hosts and could be used to correlate operational data to trace messages through middleware systems .    ....",
    "iflow(?sys_id_snd , ?",
    "sys_id_recv , ?",
    "sys_id_mw , ?",
    "uri ) : -       msg_flow_disc(?sys_id_snd , ?",
    "sys_id_mw , ?",
    "uri ) ,       msg_flow_disc(?sys_id_mw , ?",
    "sys_id_recv , ?",
    "uri ) . ....    for instance",
    ", the iflow @xmath35 relates senders to receivers through a middleware system , which can be calculated e.g. through the rule in listing [ listing : integrationflow ] .",
    "for the evaluation of our approach , we used our datalog system , which is a basic datalog implementation in java / osgi based on @xcite , that allows to evaluate recursive rules and supports basic data types , comparisons and expressions in datalog rules .",
    "the raw data comes from our network mining prototype , which discovers information in our testbed and transforms it to nim datalog facts .",
    "the testbed consists of two middleware systems , i.e. _ hxp _ and _ h73 _ , of different releases for mediated communication , and have embedded idoc and webservice capabilities for direct communication and a system landscape directory ( sld ) for system management information .",
    "this setup contains real - world conditions which we found in our customer landscapes , e.g. cross - middleware inference , combination of embedded and mediated communication , fragmented information registered in different domains .",
    "the results of the experiments are shown , e.g. for systems and message flows in _ hxp _ in table [ tab : results_hxp_nodes ] , [ tab : results_hxp_edges ] and for _ h73 _ in table [ tab : results_h73_nodes ] , [ tab : results_h73_edges ] .",
    "the tables show two aspects of the system , namely the discovery and the inference quality . for the inference ,",
    "the entries for systems and message flows as well as top - level connections are important .",
    "the discovery is mainly depicted by attribute entries for the network entities and show minor gaps in the discovery process .",
    ", e.g. in the category `` correct system attributes '' ( see table [ tab : results_hxp_nodes ] ) .    [ cols=\"<,<,<\",options=\"header \" , ]     due to good results in our testbed , we applied the system to real - world customer landscapes as shown in fig .",
    "[ fig : sample_landscape ] .",
    "this real - world validation was very successful on both counts .",
    "firstly , it proved that the auto - discovery and inference is indeed feasible and resulted in highly reliable results .",
    "secondly , our system would be quite helpful in the everyday work of an integration architect , consultant or integration developer , since it gives an overview of the complete integration network which is currently not possible within the integration middleware tools .",
    "the system reduces the effort to document integration scenarios substantially , in particularly by a foreseen export of network details into pdf or office format .",
    "that helps to answer specific questions about the network , which are currently still impossible ( or difficult ) to achieve .",
    "for example , when combining configuration and runtime data it is possible to find connections that are not used any longer or were seldom used in a given period of time . hence , one of the customers plan an upgrade project and with such a system a substantial migration time and effort will be saved .",
    "our approach for integration network represention and inference is based on datalog , which is a well - researched topic @xcite that had its revival recently due to good parallelization capabilities , latest through the work of hellerstein et al .",
    "even in the enterprise analytics domain , datalog was recently applied , mainly through work of @xcite .",
    "however , these approaches address non - network inference domains for which they define extensions .    in terms of the meta - model for integration network , @xcite represents closest known related work , in which a path algebra is defined that is used to traverse arbitrary graphs .",
    "similarly we define nodes and edges with inbound and outbound connectors , however different in terms of meaning and usage .    for nm systems in general ,",
    "related work is conducted in the area of process mining ( pm ) initiated by @xcite , which sits between computational intelligence and data mining .",
    "it has similar requirements for data discovery , conformance and enhancement with respect to nm @xcite , but does not work with network models and inference .",
    "pm exclusively strives to derive bpm models from process logs .",
    "hence pm complements nm in the area of business process discovery .",
    "gaining insight into the network of physical and virtual nodes within enterprises is only addressed by the _ host _ entity in nim , since it is not primarily relevant for visualizing and operating integration networks .",
    "this domain is mainly addressed by the it service management @xcite and virtualization community @xcite , which could be considered when introducing physical entities to our meta - model .",
    "the linked ( web ) data research shares similar approaches and methodologies , which have so far neglected linked data within enterprises and mainly focused on rdf - based approaches @xcite .",
    "applications of datalog in the area of linked data @xcite and semantic web @xcite show that it is used in the inference domain , however not used for network inference .",
    "in this paper we introduce a new domain for information discovery , machine learning , and network reconstruction , for which we defined a modeling and inference approach to reconstruct integration networks from nm raw data using datalog .",
    "the network model developed specifically for the connectivity and integration domains and covers an intersection of the relevant entities , which we derived through the analysis of several middleware systems on the market .",
    "we encoded the discovered raw data as datalog facts to create a domain independent knowledge base and applied rule - based inference representing a multi - step network inference approach .",
    "we validated our approach on a simulated integration network and reported our experiments on applying our system to real - world enterprise networks .",
    "the evaluation shows good results with respect to the challenges like equivalence class determination , flow- and cross - middleware network reconstruction as introduced in section [ sec : motivation ] .",
    "although the network structure could be reconstructed very well , the discovery range should be improved to attach more integration details to the attributes of the network entity instances .",
    "future work will be conducted in several areas , among them the improvement of the discovery range , the inference of business process models from nm data and the correlation to integration networks as well as extensions to standard datalog to improve the current implementation .",
    "for instance , the efficient compilation of datalog programs to current hardware @xcite , distributed systems @xcite or pruning with chr @xcite could guarantee more efficient datalog processing .",
    "since not all facts have the same certainty , we will also look into probabilistic extensions of datalog like @xcite , which could help to express different levels of certainty with respect to network model instances .",
    "the work conducted in @xcite will be considered for time aspects , which could help to prune large , outdated networks from system landscapes with historical data .",
    "campagna , d. , sarna - starosta , b. , schrijvers , t. : approximating constraint propagation in datalog .",
    "11th international colloquium on implementation of constraint logic programming systems ( ciclops ) , lexington , ky , 2011 .                                              van den broeck , g. , thon , i. , van otterlo , m. , de raedt , l. : dtproblog : a decision - theoretic probabilistic prolog .",
    "proceedings of the aaai conference on artificial intelligence ( aaai 2010 ) , atlanta , 2010 ."
  ],
  "abstract_text": [
    "<S> the discovery , representation and reconstruction of ( technical ) integration networks from network mining ( nm ) raw data is a difficult problem for enterprises . </S>",
    "<S> this is due to large and complex it landscapes within and across enterprise boundaries , heterogeneous technology stacks , and fragmented data . to remain competitive , visibility into the enterprise and partner it networks on different , interrelated abstraction levels </S>",
    "<S> is desirable .    </S>",
    "<S> we present an approach to represent and reconstruct the integration networks from nm raw data using logic programming based on first - order logic . </S>",
    "<S> the raw data expressed as integration network model is represented as facts , on which rules are applied to reconstruct the network . </S>",
    "<S> we have built a system that is used to apply this approach to real - world enterprise landscapes and we report on our experience with this system .    , integration networks , knowledge representation , logic programming , network inference , network mining </S>"
  ]
}
{
  "article_text": [
    "in 1900 , tait made a few famous conjectures in knot theory @xcite , one of which states that reduced alternating diagrams have minimal link crossing number , that is , if a link @xmath1 admits a projection diagram @xmath0 that is reduced and alternating , then the number of crossings in @xmath0 is the minimum number of crossings over all projections of @xmath1 .",
    "this conjecture remained open for nearly a century until the great discovery of the jones polynomial @xcite .",
    "an important property of the jones polynomial is that its span ( namely the difference between the highest power and the lowest power in the polynomial ) is always less than or equal to the number of crossings in the knot diagram used for its calculation .",
    "using this property , kauffman ( 1987 , @xcite ) , murasugi ( 1987 , @xcite ) and thistlethwaite ( 1987 , @xcite ) independently proved this conjecture by establishing an equality between the span of the jones polynomial of a reduced alternating link diagram and the number of crossings in the diagram .",
    "this is one of the greatest applications of the jones polynomial .",
    "this paper deals with a different link invariant , namely the _",
    "braid index _ of an oriented link ( all links in this paper are oriented links hence from now on we will only use the term links ) .",
    "it is well known that any link can be represented by the closure of a braid .",
    "the minimum number of strands needed in a braid whose closure represents a given link is called the braid index of the link . in the case of braid index ,",
    "the homfly polynomial ( a polynomial of two variables @xmath6 and @xmath4 that generalizes the jones polynomial @xcite ) plays a role similar to that of the jones polynomial to the minimal crossing number . in  @xcite",
    ", h.  morton showed that the number of seifert circles of a link @xmath1 is bounded from below by @xmath4-span@xmath7 ( which is called the morton - frank - williams inequality , or mfw inequality for short ) . combining this with a result due to yamada which states that the braid index of an oriented link @xmath1 equals the minimum number of seifert circles of all link diagrams of @xmath1  @xcite",
    ", it follows that the braid index of @xmath1 is bounded from below by @xmath4-span@xmath7 . in analogy to the crossing number conjecture for a reduced alternating link diagram , it would be natural for one to hope that equality in the mfw inequality would hold for reduced alternating links .",
    "this was indeed conjectured by murasugi in @xcite .",
    "this conjecture turned out to be false and counter examples are plentiful .",
    "the simplest knot that serves as a counter example is @xmath8 : its minimum diagram has 4 seifert circles but its @xmath4-span is only 4 ( so @xmath4-span@xmath9 ) . in fact",
    "the braid index of @xmath8 is also 3 , not 4 .",
    "subsequent research then focused on identifying specific link classes for which the equality in the mfw inequality holds .",
    "examples include the closed positive braids with a full twist ( in particular the torus links )  @xcite , the 2-bridge links and fibered alternating links  @xcite , and a new class of links discussed in a more recent paper @xcite . for more readings on related topics",
    ", interested readers can refer to @xcite .",
    "the main result of this paper is the complete characterization of those reduced alternating links for which the numbers of seifert circles in their corresponding link diagrams equal to their braid indices . more specifically , let @xmath0 be a reduced alternating link diagram of a link @xmath1 , define a simple and edge weighted graph , called the _ seifert graph _ and denoted by @xmath3 , as follows .",
    "every seifert circle corresponds to a vertex in @xmath3 .",
    "two vertices in @xmath3 are connected by an edge if ( and only if ) the two corresponding seifert circles in @xmath0 share crossings .",
    "the weight of an edge in @xmath3 is the number of crossings between the two seifert circles corresponding to the two vertices in @xmath3 .",
    "our main result is stated in terms of @xmath3 in a very simple way :    [ main ] let @xmath1 be a link with a reduced alternating diagram @xmath0 , then the braid index of @xmath1 equals the number of seifert circles in @xmath0 if and only if @xmath3 is free of edges of weight one .",
    "the proof of the theorem contains two parts . in the easier part ,",
    "we show that if the link diagram @xmath0 of a link @xmath1 contains an edge of weight one , then the braid index of @xmath1 is less than the number of seifert circles in @xmath0 . in this proof @xmath0 does not have to be reduced nor alternating . in the harder part of the proof ,",
    "we show that if @xmath0 is reduced , alternating and @xmath3 is free of edges of weight one , then the equality in the mfw inequality holds hence the number of seifert circles in @xmath0 equals the braid index of @xmath1 .    this paper is structured as follows . in section  [ s2 ] , we introduce the homfly polynomial and the resolving trees . in section  [ s3 ]",
    ", we introduce an important new concept called the _ intermediate seifert circles _",
    "( is circles for short ) and the decomposition of a link diagram into the is circles . in section  [ s4 ]",
    ", we introduce another important concept called the _",
    "castle_. this is actually a structure that exists within any link diagram and it is similar to a braid locally . based on the castle structure , we then develop two algorithms that will provide us two special resolving trees which will play a crucial role in proving our main theorem . the proof of our main theorem is given in section  [ s5 ] .",
    "we end the paper with some remarks and observations in section  [ s6 ] .",
    "for the sake of convenience , from this point on , when we talk about a link diagram @xmath0 , it is with the understanding that it is the link diagram of some link @xmath1 . since we will be talking about the link invariant such as braid index and the homfly polynomial , it is safe for us to use @xmath0 as a link without mentioning @xmath1 .",
    "let @xmath10 , @xmath11 , and @xmath12 be oriented link diagrams of a link @xmath1 that coincide except at a small neighborhood of a crossing where the diagrams are presented as in figure  [ fig : cross ] .",
    "we say the crossing presented in @xmath10 has a _ positive _ sign and the crossing presented in @xmath11 has a _ negative _ sign .",
    "the following result appears in  @xcite .",
    "[ ho ] there is a unique function that maps each oriented link diagram @xmath0 to a two - variable laurent polynomial with integer coefficients @xmath13 such that    1 .   if @xmath14 and @xmath15 are ambient isotopic , then @xmath16 .",
    "2 .   @xmath17 .",
    "3 .   if @xmath0 is an unknot , then @xmath18 .",
    "( @xmath11 ) is positive ( negative ) and is assigned @xmath19 ( @xmath20 ) in the calculation of the writhe of the link diagram . ]",
    "the laurent polynomial @xmath13 is called the _ homfly polynomial _ of the oriented link @xmath0 .",
    "the second condition in the proposition is called the _ skein relation _ of the homfly polynomial . with conditions ( 2 ) and ( 3 ) above",
    ", one can easily show that if @xmath0 is a trivial link with @xmath21 connected components , then @xmath22 ( by applying these two conditions repeatedly to a simple closed curve with @xmath23 twists in its projection ) . for our purposes",
    ", we will actually be using the following two equivalent forms of the skein relation : @xmath24    a rooted and edge - weighted binary tree @xmath25 is called a _ resolving tree _ of an oriented link diagram @xmath0 ( for the homfly polynomial ) if the following conditions hold .",
    "first , every vertex of @xmath25 corresponds to an oriented link diagram .",
    "second , the root vertex of @xmath25 corresponds to the original link diagram @xmath0 .",
    "third , each leaf vertex of @xmath25 corresponds to a trivial link .",
    "fourth , if we direct @xmath25 using the directions of the paths from the root vertex to the leaf vertices , then under this direction any internal vertex has exactly two children vertices and the corresponding link diagrams of these three vertices are identical except at one crossing and they are related by one of the two possible relations at that crossing as shown in figure  [ fig : rtree ] , where the edges are weighted and the directions of the edges coincide with the direction of @xmath25 .    ) and ( [ skein2 ] ) to the edges connecting an internal vertex to the two vertices that it precedes in the resolving tree . ]    if @xmath0 admits a resolving tree @xmath25 , then one can easily show that @xmath13 is a summation in which each leaf vertex of @xmath25 contributes exactly one term in the following way .",
    "let @xmath26 be the trivial link corresponding to a leaf vertex in @xmath25 and let @xmath27 be the unique path from the root @xmath0 to the leaf vertex @xmath26 . then the contribution of the leaf vertex is simply @xmath28 multiplied by the weights of the edges in @xmath27 , where @xmath29 is the number of components in @xmath26 .",
    "let @xmath30 be the writhe of @xmath26 , @xmath29 be the number of components in @xmath31 , @xmath32 be the number of smoothed crossings ( in @xmath0 in order to obtain @xmath26 ) and @xmath33 be the number of smoothed crossings that are negative .",
    "as shown in figure  [ fig : rtree ] , the degree of @xmath4 in the weight of an edge is exactly the change of writhe from the starting vertex of the edge ( remember that it is directed from the root to the leaf ) to the ending vertex of the edge , whereas a @xmath6 term in the weight of the edge indicates that the ending vertex is obtained from the starting vertex by a crossing smoothing and a negative sign in the weight indicates that the smoothed crossing is a negative crossing .",
    "it follows that the total contribution of @xmath26 in @xmath13 is    @xmath34    hence @xmath35    it follows that the highest and lowest @xmath4-power terms that @xmath26 contributes to @xmath13 are @xmath36 and @xmath37 respectively .",
    "it is well known that resolving trees exist for any given oriented link diagram @xmath0 .",
    "we will describe two algorithms for constructing resolving trees with some special properties that we need at the end of section [ s4 ] .",
    "for the purpose of this section , there is no need for us to specify the over and under passes at crossings in a link diagram @xmath0 .",
    "thus in this section @xmath0 is treated as a collection of oriented plane closed curves that may intersect each other and may have self intersections , with the intersection points being the crossings in the link diagram .",
    "so we will be using the term  crossing \" and  intersection \" interchangeably .",
    "_ let @xmath0 be a link diagram and @xmath38 be its seifert circle decomposition .",
    "we construct a graph @xmath3 from @xmath38 by identifying each seifert circle in @xmath38 as a vertex of @xmath3 . if there exist @xmath39 crossings between two seifert circles @xmath40 and @xmath41 in @xmath38 , then the two corresponding vertices ( also named by @xmath40 and @xmath41 ) are connected by an edge with weight @xmath42 .",
    "otherwise there will be no edges between the two vertices .",
    "the edge - weighted ( simple ) graph @xmath3 is called the _ seifert graph _ of @xmath0 .",
    "_    _ let @xmath0 be a link diagram .",
    "a simple closed curve obtained from @xmath0 by smoothing some vertices in @xmath0 is called an _ intermediate seifert circle _ ( which we will call an is circle for short ) . a decomposition of @xmath0 into a collection of is circles",
    "is called an _ is decomposition _ of @xmath0 . _",
    "note : the is circles may be linked to each other , but keep in mind that in this section we are treating them as plane curves ( that may intersect each other ) .    [ loop ] _ let @xmath0 be a link diagram . for a given point @xmath43 on @xmath0 that is not on a crossing ,",
    "consider the component of @xmath0 that contains @xmath43 .",
    "let us travel along this component starting from @xmath43 following the orientation of the component .",
    "as we travel we ignore the crossings that we encounter the first time .",
    "eventually we will arrive at the first crossing that we have already visited ( which is in fact the first crossing involving strands of this component ) . smoothing this crossing results in two curves : the part that we had traveled between the two visits to this crossing , which is an is circle since it does not contain crossings in itself and it does not contain @xmath43 , and the other part that still contains @xmath43 ( which is now a new component in the new link diagram obtained after smoothing the loop crossing ) .",
    "we call this crossing a _ loop crossing _",
    "( since the is circle obtained after smoothing it is  loop like \" ) . for the new link component containing @xmath43 ( obtained after smoothing the loop crossing ) , we will start from @xmath43 and continue this process and obtain new is circles .",
    "this process ends when the new link component containing @xmath43 is itself an is circle hence traveling along it will not create any new loop crossings .",
    "thus , by smoothing the loop crossings defined ( encountered ) this way , we can decompose the component of @xmath0 that contains @xmath43 into a collection of is circles . by choosing a point on each component of @xmath0 and repeat the above process , we obtain an is circle decomposition of @xmath0 . _     on @xmath0 .",
    "@xmath44 , @xmath45 and @xmath46 are the loop crossings obtained in that order . in this case",
    "@xmath0 is decomposed into four is circles @xmath47 , @xmath40 , @xmath41 and @xmath48 as shown . ]    [ re_loop ] _ the loop crossings ( hence the corresponding is circles obtained by smoothing them ) on a link component are uniquely determined by @xmath43",
    ". see figure [ fig : loop ] for an example .",
    "however , a different choice of @xmath43 may result in different loop crossings and different is circle decompositions of @xmath0 , and certainly there are other ways to obtain different is circle decompositions of @xmath0 . _",
    "[ re_loop2 ] _ if two is circles cross each other then they do so an even number of times",
    ". smoothing one crossing between two is circles combines them into a closed curve with self crossings ( hence not an is circle ) . more generally , if two oriented , closed plane curves ( possibly with self crossings ) intersect each other transversely ( not at their self crossing points ) , they must intersect each other an even number of times . smoothing only one such crossing",
    "will merge the two closed curves into one and turn the other crossings between them into self crossings , and smoothing any two such crossings will result in two new closed curves . on the other hand ,",
    "smoothing one self crossing in a closed curve will split it into two closed curves , and smoothing two self crossings in a closed curve may result in one or three closed curves . in general ,",
    "smoothing an odd number of self crossings in a closed curve may result in one or more closed curves , but smoothing an even number of self crossings will result in at least two closed curves .",
    "_    [ new_lemma2 ] let @xmath49 be any is decomposition of @xmath0 and @xmath50 be an is decomposition of @xmath0 obtained by smoothing some crossings in @xmath49 , then the number of is circles in @xmath49 is less than or equal to the number of is circles in @xmath50 . in particular , the number of is circles in @xmath49 is less than or equal to the number of seifert circles in @xmath0 .    let @xmath51 be the set of crossings smoothed in @xmath49 in obtaining @xmath50 .",
    "since @xmath50 is uniquely determined by the set @xmath51 , it does not matter in what order we smooth the crossings in it .",
    "notice that the observation above applies to the is circles in @xmath49 .",
    "if @xmath49 contains two is circles with two crossings between them and the crossings are in @xmath51 , we will smooth them and will obtain two closed curves .",
    "together with the other is circles in @xmath49 we obtain a new set of closed curves .",
    "if in the set we find two closed curves with two crossings between them and the crossings are in @xmath51 , we will smooth them and continue this process .",
    "when this process ends , we arrive at a set @xmath52 of closed curves such that if two closed curves in @xmath52 intersect each other , then at most one of these crossings is in @xmath51 .",
    "furthermore , the number of closed curves in @xmath52 is greater than or equal to the number of is circles in @xmath49 .",
    "now we will smooth the self crossings in the closed curves in @xmath52 that are in @xmath51 . at the end of this , we arrive at a new collection @xmath53 of closed curves with the following properties : ( 1 ) the number of closed curves in @xmath53 is bigger than or equal to the number of is circles in @xmath49 ; ( 2 ) no closed curve in @xmath53 contains any self crossing that is in @xmath51 ; ( 3 ) if two closed curves in @xmath53 intersect each other , then at most one of the crossings can be in @xmath51 .",
    "we now claim that no two closed curves in @xmath53 can have crossings in @xmath51 .",
    "if this is not the case , then by ( 3 ) above , we can smooth these crossings one at a time . when we smooth the last one , we will be merging two closed curves into one and turn some crossings ( not in @xmath51 ) into self crossing of the resulting closed curve .",
    "this is not possible , since after we smooth this last crossing in @xmath51 , we arrive at @xmath50 which contain only is circles ( and they do not have self crossings ) .",
    "this means we do not have any crossings in @xmath51 left in @xmath53 .",
    "hence @xmath53 is in fact @xmath50 already and can not contain self crossings .",
    "the conclusion now follows by ( 1 ) above .",
    "replacing @xmath50 by the seifert circle decomposition of @xmath0 yields the last statement of the lemma .    in an",
    "is decomposition of @xmath0 , notice that if an is circle @xmath54 has no crossings with any other is circles , then it is itself a seifert circle .",
    "if @xmath54 has crossings with other is circles , then these crossings divide @xmath54 into arcs . as we travel along @xmath54",
    ", we travel along these arcs , say @xmath55 , @xmath56 , ... , @xmath57 in that order and @xmath58 belongs to seifert circle @xmath59 ( @xmath60 ) , and obtain a closed walk @xmath61 in @xmath3 .",
    "we call this closed walk the _",
    "seifert circle walk _ of @xmath54 .",
    "similarly we can define the seifert circle walk of a closed curve @xmath54 that corresponds to the projection of a component of @xmath0 obtained by smoothing some crossings in @xmath0 .    from this point on",
    ", we will be using figures that contain seifert circles to provide examples and to explain our ideas in the proofs . to avoid possible confusion ,",
    "let us point out how to read our drawings .",
    "although we always draw the seifert circles as closed curves ( mainly for the sake of convenience ) , when we reconstruct the original link diagram from them , it is important to remember that parts of the seifert circles are not on the diagram as shown in figure [ figure_extra ] .",
    "[ lemma4 ] if an is decomposition @xmath62 of @xmath0 contains an is circle @xmath54 whose seifert circle walk contains a cycle of @xmath3 , then the number of is circles in @xmath62 is strictly less than @xmath21 , the number of seifert circles in @xmath0 .",
    "let @xmath63 be a cycle contained in the seifert circle walk of @xmath54 and choose a crossing @xmath64 between @xmath59 and @xmath65 that is in the crossing set of @xmath62 ( @xmath66 is the crossing between @xmath67 and @xmath40 ) .",
    "the existence of @xmath68 is guaranteed by the seifert circle walk of @xmath54 .",
    "consider the is decomposition @xmath69 obtained from @xmath62 by smoothing all crossings in @xmath62 except @xmath70 , @xmath71 , ... ,",
    "@xmath66 , which contain two is circles as illustrated in figure [ figure2 ] and all seifert circles of @xmath0 ( not shown in the figure ) other than @xmath40 , @xmath41 , ... , @xmath67 .",
    "that is , if @xmath21 is the number of seifert circles of @xmath0 , then the number of is circles in @xmath69 is at most @xmath72 since @xmath73 .",
    "the result now follows from lemma [ new_lemma2 ] .",
    "in this section , we describe a structure called a _ castle _ , which is like a braid in a local sense , and show that such structure exists in any link diagram .",
    "we then use this structure to develop two algorithms that will produce two special resolving trees for any given link diagram .",
    "the castle structure as well as these resolving trees will provide us the necessary tools in proving our main result of this paper .",
    "_ let @xmath0 be a link diagram .",
    "consider three seifert circles @xmath40 , @xmath41 and @xmath48 in @xmath3 as shown in figure [ trap ] . notice that @xmath48 is bounded within the topological disk created by arcs of @xmath40 , @xmath41 and the two crossings as shown in the figure , and that @xmath48 is connected to @xmath41 , but not to @xmath40 ( it can not be connected to @xmath40 due to orientation restriction ) .",
    "we say that @xmath48 is _ trapped _ by @xmath40 and @xmath41 .",
    "similarly , @xmath74 is trapped by @xmath41 and @xmath48 as shown in figure [ trap ] .",
    "_     is trapped by @xmath40 and @xmath41 and @xmath74 is trapped by @xmath41 and @xmath48 . ]",
    "it is apparent from the definition that if @xmath40 traps @xmath48 , then @xmath48 can not trap @xmath40 , in fact @xmath48 , or any seifert circle bounded within @xmath48 , can not trap any seifert circle outside the disk bounded by @xmath48 , @xmath41 and the two crossings as shown in figure [ trap ] .",
    "_ seifert circles as illustrated in the left of figure [ concentric ] are said to form a _ concentric chain _ , seifert circles as illustrated in the right of figure [ concentric ] ( from @xmath40 to @xmath75 ) are said to form a _ general concentric chain_. notice that between two concentric seifert circles we may have other seifert circles such as @xmath76 shown in the right of figure [ concentric ] .",
    "_        let @xmath0 be a link diagram .",
    "consider a seifert circle @xmath54 of @xmath0 that is inner - most , that is , @xmath54 does not bound any other seifert circles inside it .",
    "choose a starting point on @xmath54 away from the places where crossings are placed on @xmath54 .",
    "following the orientation of @xmath54 , we are able to order the crossings along @xmath54 as shown in figure [ castle ] , where a clockwise orientation is illustrated and for the purpose of illustration the part of @xmath54 from the first to the last crossing is drawn in a horizontal manner bounded between the starting point @xmath77 and ending point @xmath78 marked on it .",
    "we call this segment of @xmath54 the ground ( 0-th ) floor ( of the _ castle _ that is to be defined next ) .",
    "we now describe the procedure to build a structure on top of the ground floor that we call a _",
    "castle_. if @xmath54 is connected to another seifert circle @xmath40 in @xmath3 , then there exists crossings between @xmath54 and @xmath40 between @xmath77 and @xmath78 and they can be ordered by the orientation of @xmath40 ( which is the same as that of @xmath54 ) .",
    "let @xmath79 and @xmath80 be two points immediately before the first crossing and after the last crossing ( so no other crossings are between @xmath44 and the first crossing , and between @xmath80 and the last crossing ) . the segment of @xmath40 between @xmath44 and @xmath80",
    "is then called a _ floor of level 1_. if @xmath40 has no crossings with other seifert circles on this floor , then this floor terminates ( for example if there is only one crossing between @xmath54 and @xmath40 then this floor will terminate ) . if @xmath40 shares crossings with another seifert circle @xmath41 on this floor ( which must be between @xmath44 and @xmath80 ) , then we can define a second floor in a similar manner .",
    "we call the crossings between two floors _ ladders _ as we can only go up or down from a floor to the next through these crossings",
    ". this process is repeated until we reach a floor that terminates , meaning there are either no other floors on top or there are no ladders to reach the floor above .",
    "the castle is the structure that contains all possible floors ( and ladders between them ) constructed this way .",
    "notice that there may be more than one separate floor on top of any given floor . if @xmath81 is a top floor , @xmath82 the floor below it , @xmath83 the floor below @xmath82 , and so on , then the collection of floors @xmath84 , @xmath85 , ... ,",
    "@xmath81 , including all crossings among them , is called a _",
    "tower_. notice that the seifert circles corresponding to the floors in a tower form a general concentric seifert circle chain hence the height of a tower ( the number of floors in it ) is bounded above by the number of seifert circles in @xmath0 .",
    "finally , between two adjacent floors we may have trapped seifert circles that may or may not be part of the castle as shown in figure [ castle ] .",
    "however if there exist other floors between two adjacent floors , the seifert circle corresponding to the top floor will not share any crossings with the seifert circles with floors between these two floors due to their opposite orientations .    .",
    "]    [ lemma_trapfree ] for any link diagram @xmath0 , there exists an inner most seifert circle @xmath54 such that a castle built on it contains no trapped seifert circles .    start with any inner most seifert circle @xmath47 and build a castle on it .",
    "if it contains no trapped seifert circles , we are done .",
    "if not , let @xmath86 be a seifert circle trapped between floors @xmath87 and @xmath88 ( with @xmath89 and @xmath90 being their corresponding seifert circles ) .",
    "choose an inner most seifert circle that is contained inside @xmath86 ( use @xmath86 itself if it does not contain any seifert circle within it ) and build a castle on it .",
    "this castle is bounded away from either @xmath87 or @xmath88 depending on the orientation of the new base seifert circle . since the base seifert circle is contained in @xmath86 ,",
    "if the new castle is not contained within @xmath86 entirely , then @xmath86 will contribute a floor to the new castle .",
    "in fact , the curves in the new castle can only exit the region between @xmath87 and @xmath88 that traps @xmath86 through either @xmath87 ( if @xmath86 shares crossings with @xmath87 ) or @xmath88 ( if @xmath86 shares crossings with @xmath88 ) , but not both .",
    "it follows that the new castle is completed contained within the towers that contain @xmath87 and @xmath88 .",
    "if the castle built on this new seifert circle again contains trapped seifert circles , we will repeat this process .",
    "since this process starts with new trapped seifert circles that are bounded within the previous castles , the process will end after finitely many steps and we reach a castle without trapped seifert circles .",
    "we now define two algorithms used to derive two special resolving trees for link diagrams .",
    "these resolving trees will play a key role in proving our main result in the next section .",
    "first let us describe the general approach to obtain a resolving tree .",
    "we think of a resolving tree as graph of a branching process : at each internal vertex we take a crossing of the current link diagram , and branch on smoothing or flipping the crossing .",
    "we are growing our resolving tree by adding two children at a time to a vertex that was a leaf up until that point . in order to maintain some control over this process",
    ", we select a starting point @xmath44 on a component in @xmath0 , and start traversing the component from @xmath44 , and consider branching on the crossings as we encounter them during this traversing process . a crossing",
    "is called _ descending _ if during this process we encounter it first through its overpass , otherwise it is called _",
    "ascending_. a _ descending operation _ keeps a descending crossing unchanged ( no branching happens when we encounter the crossing ) and branches on an ascending crossing by flipping or smoothing it .",
    "an _ ascending operation _ does just the opposite : it keeps an ascending crossing unchanged and branches on a descending crossing by flipping or smoothing it .",
    "we will divide the construction process of our resolving tree into several _",
    "phases_. in a given phase we will apply one and only one of the two operations ( ascending or descending ) at all crossings encountered in that phase .",
    "the first phase starts from the selection of the starting point @xmath44 , continues as we traverse and branch at crossings and ends when we return to the starting point @xmath44 . at the end of the first phase",
    ", we have a rooted binary tree in which each leaf node @xmath91 is a link diagram obtained from @xmath0 by flipping and smoothing some crossings in it with the following properties : ( 1 ) all crossings ( of @xmath0 ) flipped and smoothed ( in obtaining @xmath91 ) are along the component containing the starting point @xmath44 ; ( 2 ) the component of @xmath91 containing @xmath44 is a trivial knot itself and is not linked with the other components of @xmath91 ( due to the fact that we applied one and only one of the descending or the ascending operations ) .",
    "thus we can remove this component from further consideration and proceed as if it was not present any more .",
    "we can now select a new starting point to start the second phase , and so on .",
    "the leaf vertices of the final tree will be unlinked unknots and we arrive at a resolving tree .",
    "notice that in different phases we can apply either the descending or the ascending operations .",
    "now , we will define two specific algorithms by choosing the starting point at the beginning of each phase and assigning the appropriate descending / ascending operation for that phase .",
    "algorithm p : the starting point at the beginning of each phase is chosen to be the starting point of the ground floor of a castle free of trapped seifert circles . if the seifert circle providing the ground floor is clockwise , the descending operation is applied , otherwise the ascending operation is applied throughout the entire phase .",
    "algorithm n : exchange the descending and ascending operations in algorithm p.    it is important to note that unlike the approaches used in our previous work @xcite , both the descending and ascending operations are used in the same algorithm , depending on the starting point !    following the notations used in our earlier work @xcite , we will use @xmath92 and @xmath93 to denote the resolving trees obtained by applying algorithms p and n respectively , and use @xmath94 and @xmath95 to denote the set of leaf vertices of @xmath92 and @xmath93 respectively .",
    "in this section we will prove our main result theorem [ main ] .",
    "we will begin with some preparations .",
    "let @xmath26 be a leaf vertex in either @xmath92 or @xmath93 . since each component of @xmath26 is obtained with a fixed starting point , the loop crossings ( if they exist ) of the component are uniquely determined . since the components are stacked over each other by the way they are obtained , the sum of the crossing signs between different components is zero .",
    "if we smooth the loop crossings , the resulting is circles are also stacked over each other so the sum of the crossing signs between these different is circles is also zero .",
    "it follows that @xmath30 , the writhe of @xmath26 , equals the sum of the signs of the loop crossings .",
    "say @xmath26 contains @xmath96 components and the @xmath97-th component contains @xmath98 loop crossings .",
    "smoothing the loop crossings of the @xmath97-th component results in @xmath99 is circles , so smoothing all loop crossings of @xmath26 results in @xmath100 is circles . by lemma",
    "[ new_lemma2 ] , we have @xmath101 where @xmath21 is the number of seifert circles in @xmath0 .",
    "since @xmath30 equals the sum of the signs at the loop crossings of its components , we have @xmath102 .",
    "it follows that @xmath103 and @xmath104 by ( [ apower1 ] ) and ( [ apower2 ] ) , where @xmath105 and @xmath106 are maximum and minimum powers of @xmath4 in @xmath13 .",
    "furthermore , if @xmath107 contains a negative loop crossing , then @xmath30 is strictly less than the total number of loop crossings in @xmath26 and we will have @xmath108 . similarly , if @xmath109 contains a positive loop crossing , then @xmath110 .",
    "we have proven the following lemma .",
    "[ component_path ] let @xmath105 and @xmath106 be the maximum and minimum powers of @xmath4 in @xmath13 , then @xmath103 and @xmath104 .",
    "if a component of @xmath107 contains a negative loop crossing , then @xmath108 .",
    "similarly , if a component of @xmath111 contains a positive loop crossing , then @xmath110 .",
    "for any given component @xmath112 of a leaf vertex in either @xmath92 or @xmath93 , as we travel along it from its starting point ( the starting point on the ground floor of the castle ) , we will eventually exit the castle for the first time through the end point of some floor .",
    "the arc of @xmath112 from its starting point to this exiting point is called the _ maximum path _ of @xmath112 .",
    "if the ending point @xmath112 is the end point on the ground floor , it means that @xmath112 is completely contained within the castle and the base seifert circle .",
    "notice that a maximum path consists of only three kind of line segments : ladders going up or down ( these are parts of crossings ) , and straight line segments parallel to the ground floor . in the case that the base seifert circle has clockwise orientation , the ladders going up or down are both from left to right .",
    "furthermore , on either side of a segment of the maximum path that is parallel to the ground floor , there are no crossings ( if there were crossings previously there in the original diagram , they are smoothed in the process of obtaining @xmath112 ) .",
    "this means that if we travel along a strand of the link diagram from a point outside the castle following its orientation , in order to enter a floor below this maximum path , it is necessary for the strand to pass through the path through a ladder from the left in the case of clockwise orientation for the base seifert circle or from the right in the case of counter clockwise orientation for the base seifert circle .",
    "[ lemma_loopfree ] if @xmath107 contains a maximum path that does not end on the ground floor , then the maximum @xmath4 power in the contribution of @xmath26 to @xmath13 is smaller than @xmath113 .",
    "similarly , if any component of @xmath114 contains a maximum path that does not end on the ground floor , then the minimum @xmath4 power in the contribution of @xmath115 to @xmath13 is larger than @xmath116 .",
    "consider the case of @xmath117 first .",
    "assume @xmath112 is the first component of @xmath26 that contains such a maximum path .",
    "notice that a component that is bounded within the castle and its base seifert circle contains no loop crossings .",
    "so the components before @xmath112 are all is circles of @xmath0 .",
    "say there are @xmath42 components before @xmath112 , then by lemma [ lemma4 ] , there are at most @xmath118 seifert circles in @xmath119 where @xmath21 is the number of seifert circles in @xmath0 and @xmath119 is the link diagram obtained from @xmath0 after the first @xmath42 components are removed from it , since seifert circles in @xmath119 are is circles of @xmath0 . let @xmath47 be the base seifert circle on which the castle used to derive @xmath112 is built .        without loss of generality",
    ", we may assume that @xmath47 has clockwise orientation .",
    "let @xmath87 ( of level @xmath120 ) be the floor where the maximum path of @xmath112 exits from its end point and let @xmath121 be the tower that houses the maximum path . if @xmath112 is to get back to @xmath122 within @xmath121 , it will have to cross the maximum path from the left side as shown in figure [ tower ] ( case 1 marked in the graph ) , where the maximum path is drawn in double lines , creating a negative loop crossing ( since in this case we are applying a descending algorithm ) .",
    "hence @xmath108 by lemma [ component_path ] and it follows that the @xmath4-degree of the contribution of @xmath26 to @xmath13 is less than @xmath113 by ( [ apower1 ] ) .",
    "if @xmath112 does not go back to the base floor within @xmath121 , then it has to do so through another tower @xmath123 .",
    "let @xmath124 be the highest common floor @xmath121 and @xmath123 share , it is necessary that @xmath125 and it is also necessary that @xmath112 enters @xmath123 at a floor @xmath126 with floor level @xmath127 .",
    "so a part of @xmath112 runs from @xmath59 ( the seifert circle corresponding to @xmath124 ) , then @xmath65 , ... , then @xmath128 ( the seifert circle corresponding to @xmath129 , the @xmath130-th floor in @xmath123 ) , and finally back to @xmath59 .",
    "that is , the seifert circle walk of @xmath112 is a closed walk of the form @xmath131 where @xmath132 , and a closed walk of this form contains a cycle in @xmath133 . by lemma [ lemma4 ] ,",
    "the total number of is circles obtained by smoothing all loop crossings in @xmath112 and in the components in @xmath26 after @xmath112 , is less than the total number of seifert circles in @xmath119 ( which is at most @xmath118 , since there are @xmath42 is circles of @xmath0 before @xmath112 ) .",
    "it follows that the total number of components in @xmath26 plus the total number of loop crossings in them is less than @xmath21 , so @xmath108 again , and the maximum @xmath4 power in the contribution of @xmath26 to @xmath13 is also less than @xmath113 .",
    "the case of @xmath114 is similar and is left to our reader .",
    "lemma [ lemma_loopfree ] leads to the following two corollaries .",
    "[ corollary1 ] if the contribution of @xmath107 to @xmath13 contains an @xmath134 term , then each component of @xmath26 is an is circle of @xmath0 . similarly ,",
    "if the contribution of @xmath111 to @xmath13 contains an @xmath135 term , then each component of @xmath115 is also an is circle of @xmath0 .",
    "this is direct from the proof of lemma [ lemma_loopfree ] , since every such component has a maximum path ending at the end point of the ground floor , so the component contains no loop crossings .",
    "the following result provides the proof for the only if part of theorem [ main ] .",
    "we feel that it is significant enough on its own so we state it as a theorem .",
    "notice that it implies the inequality in the mfw inequality is strict : @xmath4-span@xmath136 .",
    "[ main2 ] let @xmath0 be a link diagram of a link @xmath1 such that @xmath3 contains an edge of weight one ( @xmath1 and @xmath0 need not be alternating ) and @xmath21 be the number of seifert circles in @xmath0 , then we have @xmath137 .",
    "let @xmath86 and @xmath138 be two seifert circles sharing only one crossing between them . if @xmath138 shares no crossings with any other seifert circles , then the crossing between @xmath86 and @xmath138 is nugatory and the statement of the theorem holds .",
    "so assume that this is not the case and let @xmath40 , @xmath41 , ...",
    ", @xmath59 be the other seifert circles sharing crossings with @xmath138 .",
    "the orientations of @xmath40 , @xmath41 , ... , @xmath59 are the same as that of @xmath86 and there are no crossings between any two of them . a case of @xmath139 is shown in figure [ circle_reduction ] .",
    "we will reroute the overpass at the crossing between @xmath86 and @xmath138 along @xmath40 , @xmath41 , ... , @xmath59 as shown in figure [ circle_reduction ] ( keeping the strand over the crossings we encounter ) .",
    "rerouting the overpass this way will only create new crossings over some crossings between the @xmath89 s and its neighbors other than @xmath138 .",
    "the effect of this rerouted strand to the seifert circle decomposition structure locally is shown in figure [ local_effect ] , which does not change the seifert circles @xmath40 , @xmath41 , ... ,",
    "@xmath59 , but the weights of the edges connecting to the vertices corresponding to them in @xmath140 ( where @xmath119 is the new link diagram after the rerouting ) may have changed from those of in @xmath3 .",
    "see figure [ graph_change ]",
    ".         changed after the rerouting . ]    at the end , we arrive at a new link diagram @xmath119 that is equivalent to @xmath0 , but with one less seifert circle .",
    "the result then follows since the number of seifert circles in @xmath119 is an upper bound of the braid index of @xmath119 , hence @xmath0 .",
    "if @xmath0 is a reduced alternating link diagram and @xmath3 contains no edges of weight one , then for any pair of seifert circles in @xmath0 that are adjacent in @xmath3 , they share at least two crossings and these crossings are of the same signs ( in fact all crossings on one side of any seifert circle of @xmath0 are of the same sign ) .",
    "let @xmath141 be the total number of positive crossings in @xmath0 , @xmath142 be the number of pairs of seifert circles in @xmath0 that share positive crossings , and let @xmath143 be the total number of negative crossings in @xmath0 , @xmath144 be the number of pairs of seifert circles in @xmath0 that share negative crossings .",
    "we are now ready to prove our main theorem .",
    "_ proof of theorem  [ main ] . _  @xmath145 \" if the braid index of @xmath0 is @xmath21 then @xmath3 is free of edges of weight 1 by theorem [ main2 ] .    ",
    "@xmath146 \" we will prove this in two steps .",
    "in the first step , we construct a specific leaf vertex in @xmath107 whose contribution to @xmath13 contains a term of the form @xmath147 , where @xmath148 and @xmath149 . similarly we construct a specific leaf vertex in @xmath111 whose contribution to @xmath13 contains a term of the form @xmath150 , where @xmath151 and @xmath152 . in the second step we show that if a leaf vertex @xmath153 makes a contribution to the @xmath134 term in @xmath13 , then @xmath154 .",
    "similarly , if a leaf vertex @xmath155 makes a contribution to the @xmath135 term in @xmath13 , then @xmath156 .    combining the results of the these two steps will then lead to the conclusion of the theorem since the result from the second step implies that @xmath157 and @xmath158 .",
    "so @xmath159 is the maximum power of @xmath6 in the coefficient of the @xmath134 term in @xmath13 and @xmath160 is the maximum power of @xmath6 in the coefficient of the @xmath135 term in @xmath13 .",
    "furthermore , these maximum powers can only be contributed from @xmath153 and @xmath155 that are obtained by smoothing all positive crossings of @xmath0 and all negative crossings of @xmath0 except two between each pair of seifert circles sharing negative crossings in the case of @xmath161 , and by smoothing all negative crossings of @xmath0 and all positive crossings of @xmath0 except two between each pair of seifert circles sharing positive crossings in the case of @xmath162 .",
    "apparently any such @xmath161 , @xmath162 will make exactly the same contributions to @xmath13 as that of @xmath26 and @xmath115 .",
    "thus @xmath163 and @xmath164 .",
    "so @xmath165 and @xmath166-span@xmath167 and the theorem follows .",
    "choose a castle that is free of trapped seifert circles .",
    "let @xmath47 be the base seifert circle of the castle with starting point @xmath43 and ending point @xmath168 on its floor .",
    "let us travel along @xmath0 starting at @xmath43 .",
    "the crossings between @xmath47 and its adjacent seifert circles are all positive .",
    "if @xmath47 is clockwise , then we need to apply the descending rule .",
    "we will encounter the first crossing from its under strand .",
    "we will stay with the component obtained by smoothing this crossing .",
    "so we are still traveling on @xmath47 after this crossing is smoothed .",
    "we then encounter the next crossing from its under strand and we can again smooth this crossing . repeating this process , we arrive the first component of @xmath26 by smoothing all the crossings between @xmath47 and its adjacent neighbors .",
    "if @xmath47 is counter clockwise then we will be applying the ascending rule and we can also obtain a component of @xmath26 by smoothing all crossings along @xmath47 .",
    "it is apparent that after we remove this new component from the diagram , the resulting new diagram is still alternating and has @xmath23 seifert circles left .",
    "the crossings between @xmath47 and its adjacent seifert circles are all negative . if @xmath47 is clockwise , then we need to apply the descending rule .",
    "let @xmath40 be the first seifert circle with which @xmath47 shares a crossing as we travel along @xmath47 from @xmath43 .",
    "in this case we encounter the first crossing from its over strand .",
    "therefore we have no choice but to keep this crossing .",
    "this moves us to @xmath40 . keeping in mind that by the given condition @xmath47 and @xmath40 share at least two crossings and all crossings between @xmath40 and @xmath47 are on the floor of @xmath40 above @xmath84 , as we travel on @xmath85 toward the last crossing between @xmath40 and @xmath47 , we encounter each crossing from an under strand as one can check .",
    "so we can smooth all crossings we encounter ( either between @xmath40 and @xmath47 or between @xmath85 and @xmath169 before we reach the last crossing between @xmath40 and @xmath47 .",
    "we then flip the last crossing to return to @xmath47 .",
    "if @xmath47 is adjacent to more seifert circles , we repeat the same procedure .",
    "finally we return to the ending point of @xmath84 and back to the starting point .",
    "see figure [ negativecase ] for an illustration , where a case of two floors on top of @xmath84 is shown .        since smoothing crossings does not change the alternating nature of a diagram , removing this newly created component",
    "will keep the resulting diagram alternating as one can easily see from figure [ negativecase ] .",
    "in fact , the new diagram is equivalent to the one obtained by smoothing all crossings encountered by the maximum path of the new component ( with the new component removed ) .",
    "so it contains @xmath23 seifert circles . if @xmath47 is counter clockwise , the above argument is the same after we replace the descending algorithm by the ascending algorithm .",
    "so in both cases we created a component and the remaining new diagram is still alternating and contains one less seifert circle than before .",
    "thus this process can be repeated , at the end we obtain @xmath26 , which contains @xmath21 components ( each one is an is circle ) . and by the way @xmath26 is obtained , all positive crossings have been smoothed , and between any pair of seifert circles that share negative crossings , all but two crossings are smoothed .",
    "@xmath115 is obtained in a similar manner in which all negative crossings are smoothed , and between any pair of seifert circles that share positive crossings , all but two crossings are smoothed .",
    "this finishes step 1 .",
    "consider a leaf vertex @xmath153 that makes a contribution to the @xmath134 term in @xmath13 . by lemma [ lemma_loopfree ] , the maximum path of each component of @xmath161 is bounded within its defining castle .",
    "let @xmath170 be the first component of @xmath161 .",
    "consider a horizontal segment of the maximum path that represents a local maximum .",
    "we leave it to our reader to verify that we will never encounter a negative crossing to the left side of @xmath170 , and all crossings to the right of @xmath170 are positive and are smoothed . thus , for a given pair of seifert circles in @xmath0 that share negative crossings , if @xmath170 crosses from one to the other , then at least two crossings between them",
    "are not smoothed .",
    "if @xmath170 does not cross from one to the other , then removing @xmath170 may change parts of these two seifert circles but will not affect the crossings between these two seifert circles . the same argument",
    "can then be applied to the next component @xmath171 , and so on .",
    "it follows that for each pair of seifert circles sharing negative crossings , at least two crossings can not be smoothed in @xmath161 .",
    "that is , @xmath172 .",
    "similarly , we have @xmath173 .",
    "an immediate consequence of theorem [ main ] is that if @xmath0 is a reduced alternating link diagram and @xmath3 is free of cycles ( a tree in the case that link is non - splittable ) , then the braid index of @xmath0 is the number of seifert circles in @xmath0 since an edge of weight one corresponds to a nugatory crossing in @xmath0 which do not exist when @xmath0 is reduced . from the point view of a seifert graph , one can compare the previously known results to our result .",
    "for example , in @xcite , murasugi showed that if a reduced alternating link diagram is a star product of elementary torus links ( namely torus links of the form @xmath174 with @xmath175 ) , then the braid index of the link equals the number of seifert circles in the diagram .",
    "links obtained this way include reduced alternating closed braids , for which we gave an alternative proof in @xcite .",
    "the seifert graph of such a link diagram is a single path .    for two seifert circles of a link diagram @xmath0 sharing one single crossing , call them a _",
    "mergeable pair _ since the operation used in the proof of theorem [ main2 ] merges them into one seifert circle .",
    "two mergeable pairs are said to have distance @xmath42 if the shortest path in @xmath3 from any vertex corresponding to a seifert circle in one mergeable pair to that a vertex corresponding to a seifert circle in the other mergeable pair contains @xmath42 edges .",
    "since the operation in the proof of theorem [ main2 ] used to combine a mergeable pair of seifert circles does not affect the mergeable pairs that are of a distance @xmath175 away , this operation can be applied to these  far away mergeable pairs \" , which gives us the following more general result about a link diagram that is not necessarily alternating .    [ main3 ] if a link diagram @xmath0 contains @xmath176 mergeable pairs such that each pair is of a distance at least 2 from the rest , then the braid index of @xmath0 is at most @xmath177 , where @xmath21 is the number of seifert circles of @xmath0 .",
    "[ co_main3 ] if a link diagram @xmath0 contains @xmath176 mergeable pairs such that each pair is of a distance at least 2 from the rest , then @xmath4-span@xmath178 for the @xmath4-span of @xmath13 where @xmath21 is the number of seifert circles of @xmath0 .",
    "in particular , if the equality holds , then the braid index of @xmath0 is equal to @xmath177 .    of course",
    ", a natural next step would be identify those alternating links whose reduced alternating diagrams contain edges of weight one in their seifert graphs , for which the equality in the above generalized mfw inequality holds .",
    "the research of the second author was partially supported by a grant from the simons foundation ( # 245153 to gbor hetyei ) ."
  ],
  "abstract_text": [
    "<S> it is well known that the minimum crossing number of an alternating link equals the number of crossings in any reduced alternating link diagram of the link . </S>",
    "<S> this remarkable result is an application of the jones polynomial . in the case of the braid index of an alternating link </S>",
    "<S> , murasugi had conjectured that the number of seifert circles in a reduced alternating diagram of the link equals the braid index of the link . </S>",
    "<S> this conjecture turned out to be false . in this paper </S>",
    "<S> we prove the next best thing that one could hope for : we characterize exactly those alternating links for which their braid indices equal to the numbers of seifert circles in their corresponding reduced alternating link diagrams . more specifically , we prove that if @xmath0 is a reduced alternating link diagram of an alternating link @xmath1 , then @xmath2 , the braid index of @xmath1 , equals the number of seifert circles in @xmath0 if and only if @xmath3 contains no edges of weight one . here </S>",
    "<S> @xmath3 , called the seifert graph of @xmath0 , is an edge weighted simple graph obtained from @xmath0 by identifying each seifert circle of @xmath0 as a vertex of @xmath3 such that two vertices in @xmath3 are connected by an edge if and only if the two corresponding seifert circles share crossings between them in @xmath0 and that the weight of the edge is the number of crossings between the two seifert circles . this result </S>",
    "<S> is partly based on the well known mfw inequality , which states that the @xmath4-span of the homfly polynomial of @xmath1 is a lower bound of @xmath5 , as well as a result due to yamada , which states that the minimum number of seifert circles over all link diagrams of @xmath1 equals @xmath2 . </S>"
  ]
}
{
  "article_text": [
    "fast , high bandwidth , circuit switching telecommunications systems such as atm and telephone networks often employ a limited path - selection algorithm in order to fully utilize the network resources while minimizing routing overhead .",
    "typically , between each pair of nodes in the network there is a dedicated bandwidth for communication , namely , no more than a certain fixed number of calls can be simultaneously active between each pair of nodes .",
    "this dedicated bandwidth is chosen in order to satisfy the demand for communication between these stations .",
    "only when this bandwidth is exhausted the admission control protocol tries to find an alternative route through intermediate nodes . to minimize overhead and routing delays , the protocol checks just a small number of alternative routes ;",
    "if there are no free connections available on any of these alternatives , then the call or communication request is rejected .",
    "implementations that use this technique include the dynamic alternate routing ( dar ) algorithm used by british telecom  @xcite , and at&t s dynamic nonhierarchical routing ( dnhr ) algorithm  @xcite .",
    "a common feature in these ( and other ) currently implemented protocols is the sequential examination of alternative routes . only when the algorithm examines a route and finds it can not be used an alternative one is examined .",
    "the criteria for when a route can or should be used , and the method in which the alternative route is selected have been the subject of extensive research , in particular , in the context of british telecom s dar algorithm  @xcite ; see kelly  @xcite for an extensive survey .",
    "dynamic routing can be viewed as a special case of the on - line load balancing problem , where the load ( incoming calls or requests ) may be assigned to one or more servers ( network links ) , and jobs ( communication requests ) can be scheduled only on specific subsets ( paths ) of the set of servers , as defined by the network topology . in this paper",
    "we study the impact of replacing the sequential searches of the routing algorithm by a version of the _ balanced allocation principle_. the basic idea is as follows : instead of sequentially choosing alternative options ( in our case , paths ) until a desirable one is found , in the balanced - allocation regime the algorithm randomly chooses and examines a number of possible options , and assigns the job at hand to the option which appears to be the best at the time of the assignment .",
    "a number of papers have demonstrated the advantage of the application of the balanced allocation - principle  @xcite for standard load balancing problems , where jobs require only one server and can be executed by any server in the system .",
    "this research has shown that balanced allocations usually produce a very substantial improvement in performance , at the cost of a small increase in overhead : since several alternatives are examined even when the first alternative would have been satisfactory , the complexity of the routing algorithm is increased .",
    "but , as has been shown before and as we also demonstrate in the present context , examining even a very small number of alternative ( thus increasing overhead by a very small amount ) can offer great performance improvements .",
    "the idea of employing the balanced allocation principle to the problem of dynamic network routing as described in this paper was first explored in  @xcite . in this context",
    "the goal is to reduce system congestion and minimize the blocking probability , that is , the probability that a call request is rejected . the main difficulty in applying and analyzing the balanced allocation principle in a network setting is in handling the dependencies imposed by the topology of the network .",
    "the preliminary results in  @xcite show that the advantage of balanced allocations is so significant that it holds even in the presence of a set of dependencies .",
    "the performance of a routing protocol can be analyzed in a static ( finite , discrete time ) or in a dynamic ( infinite , continuous time ) setting .",
    "the static case has been extensively studied in  @xcite , extending and strengthening the results in  @xcite . in this paper",
    "we consider the continuous - time case .",
    "the analysis of the continuous - time case suggested in  @xcite was based on applying kurtz s density - dependent jump markov chain technique , following the supermarket model analysis in  @xcite .",
    "however , since the argument there is incomplete  @xcite , we present here a different analysis .",
    "our results concern the long - term behavior of large networks employing a routing protocol based on the balanced allocations principle .",
    "the main tools we employ are a lyapunov drift criterion used to establish the existence of a stationary distribution for the bdar routing protocol , and a continuous - time extension of the technique in  @xcite , used to analyze the stationary behavior of a network .",
    "balanced allocations have also been studied in the context of _ queueing _ networks , where analogous results ( under different asymptotic regimes than the ones in this paper ) are obtained in  @xcite , among others .      in the types of networks considered in this paper , a logical link or `` bandwidth '' is reserved between each pair of stations , and an alternative route is only used when this logical link has already been exhausted .",
    "we model such a network as the complete graph @xmath0 with @xmath1 vertices ( stations ) and @xmath2 edges ( links ) .",
    "the input to the system is a sequence of call requests , which are assumed to arrive at poisson times : new calls onto each link ( i.e. , between each pair of nodes ) arrive according to a poisson process with rate @xmath3 , all arrival streams being independent .",
    "similarly , the duration of a call is independent of all arrival times all other call durations , and it is exponentially distributed with mean @xmath4 .    the routing algorithm has to process the calls on - line , that is , the @xmath5-th request is either assigned a path or rejected before the algorithm receives the ( @xmath6)-th request . once",
    "a call is assigned to a path , that path can not be changed throughout the duration of the call .",
    "we assume that each edge has a capacity of @xmath7 calls , where half of this capacity is reserved for direct links ( namely it will only be used for call requests between these two nodes ) , and the other half is reserved for being used as part of an alternative route between two stations .    as in most of our results we consider large networks with a number @xmath8 of nodes growing to infinity",
    ", we will also assume that the capacity parameter @xmath9 may vary with @xmath8 .",
    "specifically , we assume that @xmath10 is nondecreasing in @xmath8 , and we also allow the possibility @xmath11 .",
    "the goal in designing an efficient routing protocol is to assign routes to the maximum possible number of call requests without violating the capacity constraints on the edges .",
    "we will compare the performance of the following two protocols :    the _",
    "@xmath12-dynamic alternative routing ( dar ) algorithm _ works as follows .",
    "when a new call request arrives , it tries to route the call through the direct ( one - link ) path .",
    "if there is no available bandwidth on the direct path , then the algorithm sequentially chooses alternative routes of length two and assigns the call to the first available path .",
    "up to @xmath12 such choices are made , and they are made at random . if no possible path is found , then the request is rejected .",
    "@xmath12-balanced dynamic alternative routing ( bdar ) algorithm _ also assigns a new call request to the direct path if there is available bandwidth . if not",
    ", then the algorithm chooses @xmath12 length - two alternative paths at random , and compares the maximum load among them ( where the load of such a path is taken to be the maximum load of the two links on that path ) .",
    "then the call is assigned to the path with the minimum load .",
    "as before , if there is no path with free bandwidth among these @xmath12 choices , then the call is rejected .",
    "the model described so far , together with one of the two protocols above , induces a continuous - time stochastic process describing the behavior of the network .",
    "as we show below , this system ( for fixed @xmath8 ) converges to a stationary regime exponentially fast . for our purposes ,",
    "the main performance measure is the minimum required bandwidth that ensures that , under the stationary distribution of the network , the blocking probability ( i.e. , the probability that a new call is rejected ) is appropriately small .    in this paper",
    "our main goal is to compare the performance of the dar algorithm with that of bdar .",
    "it is clear that bdar s performance is dominated by its performance on alternative ( length - two ) routes .",
    "therefore , in order to simplify the analysis , we consider a variant of bdar , called bdar * , which ignores the direct links and services each call only via an alternative route , making use only of the  @xmath9 alternative connections of each edge .",
    "in other words , we assume that each edge has capacity  @xmath9 and all of it is dedicated to alternative routes .",
    "we show that even though the bdar * policy ignores the direct links , it has superior performance compared to dar .",
    "the following result illustrates this superiority by exhibiting explicit asymptotic bounds on their bandwidth requirements .",
    "it follows from the results in theorems  [ thm : bdar_bounded ] and  [ thm : dar_bounded ] .",
    "assume that all the edges have a capacity of @xmath7 links .    under the dar policy ,",
    "edge capacity @xmath13 is necessary to ensure that a new call is not lost with high probability .    on the other hand",
    "if we perform the bdar * policy ( thus ignoring the  @xmath9 direct links ) , edge capacity @xmath14 suffices to ensure that a new call is not lost with high probability .    in the above result and throughout the paper",
    ", we say that a limiting statement holds `` with high probability '' ( abbreviated `` whp . '' ) if it holds with probability that is at least @xmath15 for some constant @xmath16 .",
    "for example , when we say that a random variable `` @xmath17 whp . ''",
    "we mean that there are positive constants @xmath18 and @xmath19 such that @xmath20 for all @xmath8 large enough .",
    "similarly , @xmath21 whp . means that there is a @xmath16 such that , for all @xmath22 , @xmath23 for all @xmath8 large enough .",
    "note that the result of theorem  1 is exactly analogous to that obtained in  @xcite in the discrete - time case .",
    "this section presents the main contribution of this paper , a steady state analysis of the performance of the bdar * routing algorithm .",
    "the network is a complete graph with @xmath8 nodes and @xmath24 undirected edges .",
    "new calls arrive at poisson times with rate @xmath3 and their durations are exponentially distributed with mean @xmath4 , as described earlier .",
    "as it turns out , an important parameter in the analysis of the network load is the ratio @xmath25 .",
    "we first analyze the maximum load on edges when the algorithm is used on a network with unbounded edge capacity , corresponding to @xmath26 .",
    "this model induces a continuous time markov process @xmath27 , where @xmath28 , and each @xmath29 denotes the load , at time @xmath5 , of the @xmath30th link in the network . as we show next , this markov process has a stationary distribution @xmath31 to which it converges exponentially fast , regardless of the initial state of the network .",
    "we then prove a high probability bound on the maximum load on any edge in the system under this stationary distribution .",
    "since we are only interested in the load of the alternative paths on the edges , each state of this markov process corresponds to the load on edges from a collection of length - two paths .",
    "we say that a vector @xmath32 is a _ legal state _ if it corresponds to the load on the @xmath33 edges from a collection ( possibly empty ) of length - two paths .",
    "the natural state space @xmath34 for our process @xmath35 is then taken to be @xmath36 the process @xmath35 evolves on @xmath34 according to the model described above .",
    "this evolution is formalized by the transition semigroup @xmath37 of @xmath35 , where @xmath38 is simply the probability that @xmath35 is in state @xmath39 at time @xmath5 given that it was in state @xmath40 at time zero , @xmath41 .",
    "our first result shows that @xmath35 has a stationary ( or invariant ) distribution to which it converges exponentially fast .",
    "it is stated in terms of the `` lyapunov function '' @xmath42 which is defined as 1+(total number of active calls in state @xmath40 ) : @xmath43    [ thm : unbounded ] assume that the bdar * algorithm is used on a network with @xmath8 nodes , each of which has infinite capacity .",
    "then the induced markov process @xmath35 has an invariant distribution @xmath31 , and , moreover , for any initial state @xmath44 , the distribution of @xmath45 converges to @xmath31 exponentially fast , namely there is a constant @xmath46 , such that @xmath47    our proof uses the lyapunov drift criterion for the exponential ergodicity of a continuous time markov processes  @xcite .",
    "to state our main tool we recall a few definitions , adapted to our case of countable state space .    the _ generator _",
    "@xmath48 of the process @xmath49 is a linear operator on functions @xmath50 defined by @xmath51 whenever the above limit exists for all @xmath52 the _ explosion time _ of @xmath49 is defined as @xmath53 where @xmath54 ( @xmath55 are the jump times of the markov process ) .",
    "we say @xmath35 is _ nonexplosive _ if @xmath56 for any starting state  @xmath40 .",
    "the following theorem follows from the more general results in  @xcite , specialized to the case of a continuous - time markov process with a countable state space .    _",
    "@xcite _ suppose a markov process evolving on a countable state space that is nonexplosive , irreducible ( with respect to the counting measure on @xmath34 ) and aperiodic .",
    "if there exists a finite set @xmath57 , constants @xmath58 , @xmath59 and a function @xmath60 , such that , @xmath61 then the process is positive recurrent with some invariant probability measure @xmath62 , and there exist constants @xmath46 , @xmath63 such that @xmath64    it is easy to verify that the process is @xmath65-irreducible and aperiodic , with the maximal aperiodicity measure @xmath65 being the counting measure on @xmath34 .",
    "are @xmath66-small and @xmath67 for all @xmath68 so that in fact @xmath35 is irreducible and strongly aperiodic . ]",
    "also the process is nonexplosive since the number of new calls in a given interval has a poisson distribution with a finite mean , therefore the probability of infinite number of transition in a finite interval is 0 .    to show that the drift criterion ( [ eq : drift ] ) can satisfied",
    ", we use the lyapunov function @xmath42=1+(total number of active calls in state @xmath40 ) defined in ( [ eq : v ] ) above .    in order to compute @xmath69",
    "we notice that when a new call enters the system , it increases the loads of two edges by 1 , hence the value of @xmath70 by 1 , and when a call terminates the value of @xmath70 decreases by 1 .",
    "therefore , new calls are generated with rate @xmath71 and calls are terminated at a rate @xmath72 .",
    "the probability that in a time interval  @xmath73 there are 2 or more new calls or terminations of calls is  @xmath74 .",
    "we mean that @xmath75 is @xmath74 if @xmath76 . in the rest of the text @xmath77 has the usual meaning .",
    "] using these observations we can compute @xmath69 : @xmath78    to analyze the drift condition we distinguish between the following two cases :    * @xmath79 : @xmath80 * @xmath81 ( @xmath40 is in the complement of @xmath18 ) : @xmath82    thus , the drift condition holds for @xmath83 and @xmath84 .",
    "having shown the existence of an invariant limiting distribution @xmath31 , we now analyze the maximum load on the edges under this distribution .",
    "consider a network with  @xmath8 nodes , and let @xmath31 be the invariant distribution of the induced markov process under the bdar * policy with unbounded edge capacity . under @xmath31 , the maximum number of calls in any edge",
    "is bounded whp . by @xmath85    in order to compute the maximum edge load under the stationary distribution , we start observing the system at some time point and study its transient behavior ; we then use the results to deduce the properties of the invariant distribution .",
    "in particular , we show that there exists a constant @xmath86 , such that for any state of the system at time @xmath87 that has sufficiently large probability , whp . at time",
    "@xmath88 the maximum number of calls on any edge is @xmath89    the high level idea is the following : we partition the time @xmath90 into @xmath91 periods of length @xmath92 .",
    "roughly , we argue that at the end of the @xmath30-th period , whp .",
    ", for each node , the number of incident edges with load greater than  @xmath30 is at most  @xmath93 .",
    "the @xmath93 decrease doubly exponentially , so at the end of the last period we will be able to deduce that there are no edges with load more than @xmath94 whp .",
    "the challenge is to handle the dependencies , as the number of calls during some period depends on the number of calls of the previous periods .",
    "we now proceed with the details .",
    "suppose that a call routed at time @xmath5 is assigned to edges @xmath95 and @xmath96 .",
    "the _ height _ of that call at edge @xmath95 is 1 plus @xmath97 .",
    "we define the following random variables :    * @xmath98 : number of edges incident to node @xmath99 with load at least @xmath30 at time @xmath5 .",
    "* @xmath100 : number of calls at edges incident to @xmath99 with height greater or equal to @xmath30 at time @xmath5 .",
    "trivially we have @xmath101 .",
    "we define the sequence of values @xmath102 which decreases doubly exponentially : @xmath103{2\\rho\\cdot 4^d}$}\\\\ \\alpha_i&=\\frac{2\\rho\\cdot 4^d\\cdot a_{i-1}^d}{(n-1)^{d-1}}&\\text{for $ i>0 $ and     $ \\alpha_{i-1}\\ge\\sqrt[d]{\\frac1{\\rho}n^{d-1}\\ln n}$,}\\\\ \\alpha_{i^*}&=25\\ln n&\\text{$i^*$ is the smallest $ i$ for which     $ a_{i-1}<\\sqrt[d]{\\frac1{\\rho}n^{d-1}\\ln n}$}\\\\ \\alpha_{i^*+1}&=10\\end{aligned}\\ ] ]    solving the recurrence we get for @xmath104 , @xmath105{2\\rho\\cdot4^d } } \\cdot\\left[\\frac{\\sqrt[d-1]{2\\rho\\cdot4^d}}{\\kappa}\\right]^{d^i}(n-1)\\\\ & = \\frac1{\\sqrt[d-1]{2\\rho\\cdot4^d}}\\cdot\\frac{n-1}{e^{d^i } } \\end{split } \\ ] ] and for the @xmath106 @xmath107{\\frac1{\\rho}n^{d-1}\\ln n}\\ ] ] which gives @xmath108 next we define @xmath109 and an increasing sequence of points in time : let @xmath110 and for @xmath111 , @xmath112 , so that the end of the last period , @xmath113 , is the current time  @xmath88 .",
    "let @xmath114 denote the event `` at time @xmath115 there are at most @xmath116 calls in the system , '' and let @xmath117 : m_{\\ge i}^v(t)\\le2a_i\\}.\\ ] ]    we will show by induction that for @xmath118 @xmath119    for the base case ( @xmath120 ) , conditioning on @xmath114 , the expected number of calls for a particular node  @xmath99 is @xmath121 , since each existing call has probability @xmath122 to have  @xmath99 as an endpoint .",
    "hence , by using the chernoff bound @xmath123 where @xmath124 and  @xmath19 can be any positive constant .",
    "therefore @xmath125    for the induction step we assume that @xmath126    let  @xmath127 denote the event `` a new call is generated with  @xmath99 as an endpoint , '' and call  @xmath128 the other endpoint and  @xmath129 the intermediate node of the alternative path . we have @xmath130 notice that for @xmath131 we have @xmath132    we now define @xmath133 and prove lemmas  [ lem : go - down ] and  [ lem : stay - down ] , that allow us to conclude that @xmath134 .",
    "[ lem : go - down ] under the inductive hypothesis @xmath135    consider the time interval @xmath136 $ ] and recall that @xmath137 .",
    "first notice that since the duration of each call follows an exponential distribution with parameter @xmath138 , the probability that a call that is already in the system at time  @xmath139 will remain until the end of the interval  @xmath140 is @xmath141 . hence all these calls will end before the end of the interval with exponentially high probability . to analyze the number of the remaining calls that were created during the period we make use of lemma  [ lem : newcalls ] which completes the proof of the lemma .",
    "[ lem : newcalls ] consider a period of length @xmath142 and a given node  @xmath99 .",
    "conditioning on @xmath143 , the number of new calls that increased @xmath144 when they were generated , and remained until the end of the period is less than @xmath93 , with probability at least @xmath145 .",
    "each node has @xmath146 incident links in each of which new calls are generated with rate  @xmath3 .",
    "conditioning on having a new request on  @xmath99 , @xmath144 is increased with probability at most  @xmath147 . therefore the number of calls at time  @xmath140 is stochastically dominated by that formed by a process that generates new calls with rate  @xmath148 which have a duration exponentially distributed with parameter  @xmath138 .",
    "this process is the same as the infinite server poisson queue  @xcite in which the number of calls at the end of the period is distributed according to a poisson distribution with rate @xmath149 where @xmath150 so the rate is at most @xmath151 .",
    "we now distinguish the following two cases :    * for @xmath152 , by using equation  [ eq : boundqi ] we get that the expected number of calls at the end of the period is at most @xmath153 and by applying a chernoff bound for the poisson distribution , we get that the probability that the number of calls is higher than @xmath154 is bounded by @xmath155 for @xmath156 we have from the definition of @xmath93 @xmath157 while for @xmath158 we get @xmath159 * for @xmath160 , using equation  [ eq : qdef ] we get that the expected number of calls at the end of the period is at most @xmath161 and we get the high probability result with the chernoff bound .    [ lem : stay - down ] under the inductive hypothesis @xmath162    we have : @xmath163:\\\\ & \\qquad\\qquad m_{\\ge i}^v(t_a)=\\alpha_i , m_{\\ge   i}^v(t_b)=2\\alpha_i , m_{\\ge i}^v(t)\\ge     \\alpha_i\\,\\forall t\\in[t_a , t_b]\\,\\big|\\,c_{i-1},e)\\\\ & \\le\\frac   n{\\pr(f_i\\,|\\,c_{i-1},e)}\\int_{t_a = t_i}^t\\int_{t_b = t_a}^t\\pr(m_{\\ge   i}^v(t_a)=\\alpha_i,\\\\ & \\qquad\\qquad m_{\\ge i}^v(t_b)=2\\alpha_i , m_{\\ge i}^v(t)\\ge     \\alpha_i\\,\\forall t\\in[t_a , t_b]\\,\\big|\\,c_{i-1},e)\\ \\mathrm{d}t_b\\   \\mathrm{d}t_a\\\\ & \\le\\frac   n{\\pr(f_i\\,|\\,c_{i-1},e)}\\int_{t_a = t_i}^t\\int_{t_b = t_a}^t\\pr(m_{\\ge   i}^v(t_a)=\\alpha_i,\\\\     & \\qquad\\qquad m_{\\ge i}^v(t_b)=2\\alpha_i\\,\\big|\\,m_{\\ge i}^v(t)\\ge     \\alpha_i\\,\\forall t\\in[t_a , t_b],c_{i-1},e)\\",
    "\\mathrm{d}t_b\\ \\mathrm{d}t_a \\end{split}\\ ] ] the probability inside the integrals is the probability that the new calls generated during the interval @xmath164 $ ] , increased @xmath144 , and remained until the end of the interval , are at least @xmath93 . by applying lemma  [ lem : newcalls ] , we get that this probability is at most @xmath165 .",
    "hence @xmath166 since @xmath86 .",
    "having proven the two lemmas we can now show that @xmath167 : @xmath168    we have therefore shown that the event @xmath169 holds whp . until the end of @xmath90 , which means that for every node @xmath99 , after the ( @xmath170)-th period , there will be no more than @xmath171 incident edges with load more than @xmath170 .",
    "we will now bound the probability that in the next interval ( @xmath172 $ ] , the last interval of @xmath90 ) there will be an incident edge of @xmath99 with load more than @xmath173 , conditioning on the event @xmath169 .",
    "for this to happen , we must have at least 2 new calls to be routed using one of the 10 high - loaded edges .",
    "the probability that two specific new calls use these edges is at most @xmath174 since @xmath175 .",
    "the expected number of calls with @xmath99 as an endpoint is @xmath176 , since @xmath177 links are connected to @xmath99 in each of which new calls are generated with rate  @xmath3 , while the total length of the interval is  @xmath8 .",
    "this implies that whp .",
    "there will be @xmath178 new calls in the whole period .",
    "combining this fact with equation  [ eq : lastcalls ] and summing for all the nodes we conclude that at the end of period  @xmath90 there will be no edges with load more than @xmath173 whp .",
    "we now consider the stationary distribution @xmath31 , and show that under it @xmath179=1-o(1).\\ ] ] where @xmath180 denotes the maximum number of calls on any edge .",
    "let @xmath181 be the state of the system at time @xmath88 , and consider the following partitioning of the state space of the underlying markov process :    * @xmath182 : states in which the total number of calls in the system is at most @xmath116 , and the maximum load is at most @xmath183 .",
    "* @xmath184 : states in which the total number of calls in the system is at most @xmath116 , and the maximum load is at least @xmath185 . *",
    "@xmath186 : states in which the total number of calls in the system is more than @xmath116 .",
    "we have shown that @xmath187 and we can easily show that @xmath188 moreover in the stationary distribution the number of calls in the system has a poisson distribution with parameter @xmath33 . hence by using the chernoff bound @xmath189 then we have @xmath190 the second term is @xmath191 , while for the first one @xmath192 therefore @xmath193 which implies that @xmath194 and completes the proof of the theorem .      in this section",
    "we use the analysis of the bdar * algorithm for unbounded capacities to compute the bandwidth requirement @xmath9  ( @xmath195 ) that ensures that a new call is not lost whp .",
    "[ thm : bdar_bounded ] assume that all the edges have capacity  @xmath9 circuits which can be a function of  @xmath8 .",
    "then if we perform the bdar * policy , edge capacity @xmath196 ensures that a new call is not lost whp .",
    "the result for finite  @xmath9 follows from the proof of theorem  [ thm : unbounded ] which concerns unbounded capacity .",
    "since the markov process is finite and aperiodic there exists a stationary distribution .",
    "moreover , the analysis for the unbounded case still holds for finite  @xmath9 as long as @xmath197 .",
    "a new call will be rejected if all the  @xmath12 choices select one of the edges with load @xmath198 . with probability at least @xmath199 , for each node , the number of incident edges with load at least @xmath170 is at most @xmath200 .",
    "therefore the probability for a call to be rejected is no more than @xmath201 since @xmath171 .",
    "to demonstrate the advantage of the balanced - allocation method we prove here a lower bound on the maximum channel load when requests are routed using the dar algorithm .",
    "this bound shows an exponential gap between the capacity required by the balanced - allocation algorithm and the capacity required by the standard dar algorithm for the same stream of inputs .",
    "again we consider a complete network on @xmath8 nodes and @xmath202 edges .",
    "requests for connections between a given pair arrive according to a poisson process with rate @xmath3 , the duration of a connection has an exponential distribution with expectation @xmath4 .",
    "[ thm : dar_bounded ] assume that all the edges have capacity  @xmath7 circuits which can be a function of  @xmath8 . then if we perform the dar policy , edge capacity @xmath13 is necessary to ensure that a new call is not lost whp .",
    "recall that the edges have capacities  @xmath7 , capacity @xmath9 is used for direct connections , and the remaining capacity @xmath9 is used for alternative routes .",
    "we will compute a lower bound on the probability @xmath203 , that a request arriving at an arbitrary time @xmath5 is rejected .",
    "we consider first the probability @xmath204 that the new call is not routed through the direct link .",
    "the process of routing calls through the direct link is similar to serving customers in an @xmath205 loss system ( poisson arrival , exponential service time , @xmath9 servers , up to @xmath9 customers in the system ) . applying erlang s loss formula ( e.g. ,  @xcite ) , @xmath206",
    "we will now estimate the probability  @xmath207 that a request which was generated at time  @xmath5 on edge  @xmath208 and failed to use the direct link  @xmath208 , fails to be routed by an alternative path ( i.e. , all the  @xmath12 attempts to find a non - saturated alternative path do not succeed ) . to give a lower bound to the failure probability",
    ", we consider a modified system that up to time  @xmath5 behaves differently from the real one by rejecting more calls than the real one .",
    "specifically , whenever the direct link is saturated it tries _ only one _ alternative path and if any of the edges of the path are saturated the call is rejected .",
    "thus , clearly more calls are lost in the modified system and therefore fewer calls will exist at time  @xmath5 .",
    "notice though that from time  @xmath5 the system behaves in the regular way according to the dar algorithm .    in order to estimate the probability  @xmath207",
    ", we will try to lower bound the probability that at time  @xmath5 all the  @xmath12 alternative paths selected as candidates to serve the request have a saturated ( as far as the bandwidth for alternative routes is concerned ) edge , which is lower bounded by the probability that all the  @xmath12 edges selected have the corresponding edge  @xmath209 saturated ( see figure  [ fig : dar ] ) . for this",
    "we consider the system at some prior time @xmath210 , for some  @xmath88 that we will fix later .",
    "if some edge  @xmath209 at that time point is saturated with  @xmath9 calls , then the probability that all these calls remain in  @xmath209 until time  @xmath5 equals @xmath211    assume now that edges  @xmath209 and  @xmath212 are not saturated at time  @xmath210 , and let @xmath213 be the edge that joins them .",
    "we will try to compute the probability  @xmath214 that a request is generated during  @xmath88 by @xmath213 , routed through the alternative path  @xmath215 , and remained until time  @xmath5 . to simplify the argument",
    ", we ignore any already existing calls from @xmath213 routed through that path  we are allowed to do that as these calls only increase the usage of  @xmath209 and  @xmath212 .      1",
    ".   all the direct connections of  @xmath213 are occupied at time  @xmath210 with probability  @xmath204 .",
    "the time of a new event from edge  @xmath213 ( either a new call or a termination of an existing call ) is exponentially distributed with parameter @xmath216 . hence the probability of the first new event taking place in the period  @xmath88 equals @xmath217 3 .",
    "conditioning that there is such a new event , the probability that it is a new call ( which will have to use an alternative path if all the direct links are occupied ) is @xmath218 4 .",
    "the probability that this call is served by the path  @xmath215 is @xmath219 .",
    "the probability that the call remains in the system until time  @xmath5 is at least  @xmath220 .",
    "taking all these facts into account , we deduce that the probability that at time  @xmath5 we have a call from the edge  @xmath213 in  @xmath209 and  @xmath212 is at least @xmath221 where we have selected @xmath222 and hence @xmath223 for large enough  @xmath8 .",
    "for each edge  @xmath209 there are @xmath224 potential sources  @xmath213 that are mutually independent .",
    "notice however that if an edge  @xmath225 is saturated then a diverted call from edge  @xmath226 that selected the path  @xmath227 will be rejected and not contribute to the increase of the load of  @xmath209 .",
    "we perform the above counting as long as there are at least @xmath228 non - saturated edges  @xmath212 .",
    "then the probability that an edge  @xmath209 is saturated at time  @xmath5 is the minimum of @xmath229 and @xmath230 and that minimum is always equal to @xmath231 .",
    "notice that a trivial upper bound for @xmath214 is @xmath232 so @xmath233    let us now compute the probability  @xmath207 .",
    "there are at least @xmath228 edges  @xmath209 whose probability of being saturated is at least  @xmath231 , hence the probability that all the  @xmath12 alternative paths selected contain one of the saturated edges  @xmath209 is lower bounded by @xmath234 where the extra term @xmath235 is needed to avoid dependences between the different edges  @xmath209 . substituting the value for @xmath214 we get @xmath236                    r.  j. gibbens , p.  j. hunt , and f.  p. kelly .",
    "bistability in communication networks . in g.",
    "r. grimmet and d.  j.  a. welsh , editors , _ disorder in physical systems _ , pages 113128 .",
    "oxford univ . press , new york , 1990 .                    s.  p. meyn and r.  tweedie .",
    "a survey of foster - lyapunov techniques for general state space markov processes . in _ proceedings of the workshop on stochastic stability and stochastic stabilization , metz , france , june 1993_. springer - verlag , 1994 .",
    "m.  mitzenmacher . on the analysis of randomized load balancing schemes . in _ proceedings of the 9th annual acm symposium on parallel algorithms and architectures _ ,",
    "pages 292301 , newport , rhode island , june 2225 , 1997 .",
    "sigact / sigarch and eatcs .",
    "extended abstract ."
  ],
  "abstract_text": [
    "<S> we compare the long - term , steady - state performance of a variant of the standard _ dynamic alternative routing ( dar ) _ technique commonly used in telephone and atm networks , to the performance of a path - selection algorithm based on the `` balanced - allocation '' principle  @xcite ; we refer to this new algorithm as the _ balanced dynamic alternative routing ( bdar ) _ algorithm . </S>",
    "<S> while dar checks alternative routes sequentially until available bandwidth is found , the bdar algorithm compares and chooses the best among a small number of alternatives .    </S>",
    "<S> we show that , at the expense of a minor increase in routing overhead , the bdar algorithm gives a substantial improvement in network performance , in terms both of network congestion and of bandwidth requirement . </S>"
  ]
}
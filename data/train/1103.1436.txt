{
  "article_text": [
    "we assume throughout the paper that @xmath2 is a field of characteristic distinct from @xmath3 .",
    "let @xmath5 be a lie algebra over @xmath2 .",
    "a non - zero element @xmath6 is called _ extremal _ if @xmath7 \\in k x$ ] for all @xmath8 . if @xmath9 is extremal , the existence of a linear map @xmath10 such that @xmath7 = f_x(y)x$ ] for all @xmath8 immediately follows from linearity of @xmath11 $ ] . if for some extremal element @xmath6 this linear map @xmath12 is identically @xmath13 , we call @xmath9 a _ sandwich_.    extremal elements were originally introduced by chernousov @xcite in his proof of the hasse principle for @xmath14 . zelmanov and kostrikin proved that , for every @xmath15 , the universal lie algebra @xmath16 generated by a finite number of sandwich elements @xmath17 is finite - dimensional @xcite",
    ". cohen , steinbach , ushirobira , and wales generalized this result and proved that a lie algebra generated by a finite number of extremal elements is finite dimensional .",
    "moreover , they give an explicit lower bound on the number of extremal elements required to generate each of the classical lie algebras @xcite .",
    "recently , in t panhuis , postma , and the author gave explicit presentations for lie algebras of type @xmath18 , @xmath19 , @xmath20 , and @xmath21 , by means of minimal sets of extremal generators @xcite .    moreover , draisma and in t panhuis considered finite graphs and corresponding algebraic varieties whose points parametrize lie algebras generated by extremal elements .",
    "they proved in particular that if the graph is a simply laced dynkin diagram of affine type , all points in an open dense subset of the affine variety parametrize lie algebras isomorphic to the simple chevalley lie algebra corresponding to the associated dynkin diagram of finite type @xcite .",
    "looking at these lie algebras from a different point of view , cohen , ivanyos , and the author proved that if @xmath5 is a lie algebra over a field @xmath2 ( of characteristic distinct from @xmath3 and @xmath22 ) that has an extremal element that is not a sandwich , then @xmath5 is generated by extremal elements , with one exception in characteristic @xmath0 @xcite .",
    "the strong connection between extremal elements and geometries is further investigated in two papers by cohen and ivanyos @xcite , and in the ph.d .",
    "theses by postma @xcite and in t panhuis @xcite .",
    "we follow the setup of @xcite and @xcite .",
    "assume that @xmath1 is a connected undirected finite graph with @xmath15 vertices , without loops or multiple bonds , and that @xmath2 is a field of characteristic distinct from @xmath3 .",
    "we let @xmath23 be the vertex set of @xmath1 and denote adjacency of two vertices @xmath24 by @xmath25 .",
    "we denote by @xmath26 ( often abbreviated to @xmath27 ) the quotient of the free lie algebra over @xmath2 generated by @xmath23 modulo the relations @xmath28 = 0 \\mbox { for all } x , y\\in \\pi\\mbox { with } x \\not\\sim y.\\ ] ] often , we write elements of @xmath27 as linear combinations of _ monomials _ @xmath29]}$ ] , where @xmath30 .",
    "the _ length _ of such a monomial is said to be @xmath31 , and we often abbreviate such a monomial to @xmath32}$ ] .",
    "note that @xmath27 inherits the natural @xmath33-grading from the free lie algebra generated by @xmath23 ; homogeneous elements of @xmath27 are linear combinations of monomials of equal length .",
    "we write @xmath34 for the space of all @xmath2-linear functions @xmath35 . for every @xmath36 ,",
    "also written @xmath37 , we denote by @xmath38 ( often abbreviated to @xmath39 ) the quotient of @xmath26 by the ideal @xmath40 generated by the infinitely many elements @xmath41 - f_x(y)x \\mbox { for } x \\in \\pi \\mbox { and } y \\in { \\mathcal f}.\\ ] ]    by construction @xmath39 is a lie algebra generated by @xmath42 extremal elements , the extremal generators corresponding to the vertices of @xmath1 and commuting whenever they are not adjacent .",
    "the element @xmath43 is a parameter expressing the extremality of @xmath44 .    in the lie algebra @xmath45",
    "the elements of @xmath23 map to sandwich elements . by @xcite",
    "this lie algebra is finite - dimensional ; for general @xmath36 we have @xmath46 by ( * ? ? ?",
    "* lemma 4.3 ) .",
    "it is therefore natural to focus on the lie algebras @xmath39 of maximal possible dimension , i.e. ,  those of dimension @xmath47 .",
    "we define the set @xmath48 the parameter space for all maximal - dimensional lie algebras of the form @xmath39 .",
    "[ ex_twogen ] consider the case where @xmath1 consists of two vertices @xmath9 , @xmath49 , connected by an edge .",
    "then for every @xmath50 the lie algebra @xmath39 is spanned by @xmath51 \\}$ ] since @xmath7 = f_x(y ) x$ ] ( where @xmath52 ) , and similarly @xmath53 = -f_y(x ) y$ ] .",
    "consequently , @xmath22-dimensional lie algebras generated by a distinguished pair of extremal generators are parametrized by the single value @xmath57 . as mentioned before , if @xmath60 then @xmath39 is the heisenberg algebra .",
    "it is straightforward to verify that those lie algebras where @xmath61 are mutually isomorphic and isomorphic to the split simple lie algebra of type @xmath62 . the parameter space @xmath4 defined above , then , is the affine line , and all lie algebras corresponding to the nonzero points on the line are mutually isomorphic .",
    "the following theorem asserts that the two generator case is exemplary : @xmath4 always carries the structure of an affine algebraic variety .",
    "[ thm_kvariety_struct ] the set @xmath4 is naturally the set of @xmath2-rational points of an affine variety of finite type defined over @xmath2 .",
    "this variety can be described as follows .",
    "fix any finite - dimensional subspace @xmath63 of @xmath27 consisting of homogeneous elements such that @xmath64 .",
    "then the restriction map @xmath65 maps @xmath4 injectively onto the set of @xmath2-rational points of a closed subvariety of @xmath66 .",
    "this yields a @xmath2-variety structure of @xmath4 which is independent of the choice of @xmath63 .",
    "we give an example of an embedding of @xmath4 as mentioned in theorem [ thm_kvariety_struct ] .",
    "recall that we showed @xmath4 to be the affine line ; we may take @xmath67\\}$ ] . then",
    ", for @xmath68 we have @xmath69 ) ) , ( f_y(x ) , f_y(y ) , f_y([x , y])),\\ ] ] and if we again identify elements @xmath68 with @xmath52 we find @xmath70 .",
    "we have now introduced enough background to be able to state our main results .",
    "[ thm_537_xtriv ] let @xmath1 be the complete graph on @xmath0 vertices , @xmath2 a field of characteristic not @xmath3 , and , as above , the set @xmath4 the parameter space for all maximal - dimensional lie algebras of the form @xmath38 .",
    "then @xmath71 .",
    "the following corollary immediately follows from this theorem and ( * ? ? ?",
    "* lemma 4.2 ) ( and section [ sec_comp_results ] with regards to the dimensions mentioned ) .    [ cor_537_nilp ]",
    "suppose @xmath5 is a lie algebra generated by @xmath0 extremal elements over the field @xmath2 , where @xmath72 . if @xmath5 is of maximal dimension among such lie algebras ( i.e. ,  @xmath73 if @xmath74 and @xmath75 if @xmath76 ) then @xmath5 is nilpotent .",
    "looking at results for other cases shows why this result is interesting .",
    "for example , if @xmath1 is the complete graph on on @xmath3 , @xmath22 , or @xmath77 vertices , then @xmath4 is nontrivial .",
    "moreover , for almost all @xmath68 , @xmath39 is a simple lie algebra of type @xmath62 , @xmath78 , and @xmath79 , respectively ( see @xcite and section [ sec_comp_results ] of this paper ) .",
    "moreover , there are infinite families of graphs @xmath1 , for example the affine dynkin diagrams , where @xmath39 is almost always a simple lie algebra of classical type ( see @xcite ) . in short",
    ": this is the first nontrivial case encountered where @xmath4 is a point .",
    "note that the fact that @xmath4 is a point means that the extremality of the generators and the maximal - dimensionality assumption force all generators to be sandwiches , and therefore force @xmath5 to be nilpotent .",
    "we mention one more result .",
    "[ thm_all_x_affine ] let @xmath1 be a connected undirected finite graph with at most @xmath0 vertices , without loops or multiple bonds , @xmath2 a field of characteristic not @xmath3 , and , as above , the set @xmath4 the parameter space for all maximal - dimensional lie algebras of the form @xmath38 .",
    "then @xmath4 is isomorphic to a finite - dimensional affine space over @xmath2 .",
    "the dimension of @xmath4 is given in tables [ tab_comp_results23 ]  [ tab_comp_results5 ] .",
    "this theorem provides a partial answer to one of the questions posed in ( * ? ? ?",
    "* section 5.2 ) , namely , `` is @xmath4 always an affine space ? '' .",
    "similarly , the results discussed in section [ sec_comp_results ] suggest that in the cases we considered one of the other questions posed , `` is there always a generic lie algebra ? '' can be answered affirmatively .      in section [ sec_extr_props ]",
    "we present a number of known results on these lie algebras and their elements that we need for our proofs and calculations . in section [ sec_fsets ]",
    "we introduce @xmath55-sets , a concept we need in order to be able to calculate with the affine algebraic variety @xmath4 that parametrizes the lie algebras we are interested in . in section [ sec_algs ]",
    "we discuss the algorithms we developed and implemented in magma to obtain the computation results presented in section [ sec_comp_results ] .",
    "finally , in section [ sec_conclusion ] we briefly reflect on our results and possible future research .",
    "there is a number of properties of the functions @xmath12 introduced earlier that we should discuss .",
    "the following result is an important tool in our computations .",
    "[ thm_csuw_bil_f ] suppose that @xmath5 is a lie algebra over @xmath2 generated by extremal elements .",
    "there is a unique bilinear symmetric form @xmath82 such that , for each extremal element @xmath6 , the linear form @xmath12 coincides with @xmath83 .",
    "this form is associative , in the sense that @xmath84 ) = f([x , y],z)$ ] for all @xmath85 .",
    "this theorem implies a number of identities in the values of @xmath55 , as presented in the following lemma .",
    "we use these relations extensively in our computer calculations .",
    "[ lem_ttr_f ] let @xmath86 , let @xmath87 , and let @xmath88 . then the following equalities hold :    1 .",
    "[ itm_lem_ttr_fx_cx][itm_lem_ttr_f_first ] @xmath60 whenever @xmath89 or @xmath90 , 2 .",
    "[ itm_lem_ttr_fx_y ] @xmath91 , 3 .",
    "[ itm_lem_ttr_fx_cxm ] @xmath92 ) = 0 $ ] whenever @xmath89 or @xmath90 , 4 .",
    "[ itm_lem_ttr_fx_ym ] @xmath92 ) = -f_y(x , m)$ ] , 5 .",
    "[ itm_lem_ttr_fx_yzx ] @xmath93 ) = f_x(y)f_x(z)$ ] , 6 .",
    "[ itm_lem_ttr_fx_yxm ] @xmath94 ) = -f_x(y)f_x(m)$ ] , 7 .",
    "[ itm_lem_ttr_fx_yzm ] @xmath95 ) = f_z([y,[x , m ] ] ) - f_z([x,[y , m]])$ ] , 8 .",
    "[ itm_lem_ttr_f_rev][itm_lem_ttr_f_last ] @xmath96 ] } ) =       ( -1)^{l-1 } f_{y_l}({[y_{l-1},[y_{l-2},\\ldots,[y_2,[y_1,x]]]]})$ ] .",
    "[ itm_lem_ttr_fx_cx ] follows from the observation that @xmath7 = 0 $ ] whenever @xmath89 or @xmath90 .",
    "[ itm_lem_ttr_fx_y ] follows immediately from the symmetry of @xmath55 in theorem [ thm_csuw_bil_f ] : @xmath97 .",
    "[ itm_lem_ttr_fx_cxm ] and [ itm_lem_ttr_fx_ym ] follow similarly from its associativity : @xmath92 ) = f(x , [ y , m ] ) = f([x , y ] , m)$ ] , which is equal to @xmath13 for case [ itm_lem_ttr_fx_cxm ] and reduces to @xmath98 , m ) = -f(y , [ x , m ] ) = -f_y([x , m])$ ] in the case of [ itm_lem_ttr_fx_ym ] . for [ itm_lem_ttr_fx_yzx ] , observe @xmath93 ) = f(x,[y,[z , x ] ] ) = -f(y,[x,[z , x ] ] ) = f(y , f_x(z)x ) = f_x(z)f(y , x ) = f_x(z)f_x(y)$ ] by associativity and bilinearity of @xmath55 ; [ itm_lem_ttr_fx_yxm ] follows similarly .",
    "[ itm_lem_ttr_fx_yzm ] follows from the jacobi identity and associativity : @xmath95 ) = f(x,[y,[z , m ] ] ) = -f([x , y],[m , z ] ) = -f([[x , y ] , m ] , z ) =   -f_z([[x , y],m ] ) = -f_z([x,[y , m ] ] ) + f_z([y,[x , m]])$ ] .",
    "finally , to see [ itm_lem_ttr_f_rev ] simply apply associativity of @xmath55 and anti - symmetry of lie algebras @xmath99 times .",
    "our goal in the research described here was to find more information on the structure of the variety @xmath4 describing the parameter space , and of @xmath39 for various @xmath68 . in order to achieve this goal",
    ", we have to compute a multiplication table for @xmath39 .",
    "there are two ways to approach this problem : either pick an @xmath68 in advance and compute a multiplication table for @xmath39 , or compute a general multiplication table , i.e. ,  one that has entries in the coordinate ring of @xmath4 .",
    "the latter approach , which we have chosen to pursue , has two important advantages : firstly , we only need to compute the multiplication table once , and can afterwards easily instantiate it for particular @xmath68 . secondly , by insisting that @xmath39 be a lie algebra and of maximal dimension we obtain information about the structure of @xmath4 .    in this example",
    "we would automatically recover the relation @xmath91 via the jacobi identity on @xmath49 , @xmath9 , and @xmath59 $ ] : @xmath100 ] + [ x,[[x , y],y ] ] + [ [ x , y],[y , x ] ] = f_x(y)[y , x ] + f_y(x)[x , y ] + 0,\\ ] ] and @xmath101 ) = 0 $ ] via evaluating @xmath102]$ ] from the inside out : @xmath103)x = [ x,[x,[x , y ] ] ] = [ x , f_x(y ) x ] = f_x(y ) [ x , x ] = 0,\\ ] ] so that @xmath101 ) = 0 $ ] since the fact that @xmath39 is of maximal dimension implies that @xmath104 .    to aid in the description of our algorithms we introduce the concept of _",
    "@xmath55-sets_. for the remainder of this section fix a graph @xmath1 and a field @xmath2 , and let @xmath105 be a set of monomials of @xmath26 that project to a monomial @xmath2-basis of @xmath45 ( which exists by ( * ? ?",
    "* lemma 3.1 ) ) .",
    "furthermore , let @xmath106 be some subset of @xmath107 , and let @xmath108 be the rank @xmath109 multivariate polynomial ring @xmath110 $ ] with variables @xmath111 .",
    "furthermore , let @xmath112 , @xmath113 be a map from @xmath107 into this polynomial ring .",
    "we call such a pair @xmath114 an",
    "_ @xmath55-set of size @xmath109_.    moreover , if @xmath115 is such that for all @xmath68 we have , under the evaluation @xmath116 for @xmath117 , @xmath118 then we call @xmath114 a _ sufficient @xmath55-set_.    finally , suppose @xmath114 is an @xmath55-set where we require , to exclude trivialities , that @xmath119 for all @xmath117 .",
    "we construct , for an arbitrary @xmath120 , an element @xmath121 of @xmath122 as follows .",
    "take , for every @xmath123 , the value @xmath124 to be @xmath125 evaluated in @xmath126 , that is , @xmath127 .",
    "this defines a map @xmath128 .",
    "note that @xmath129 is always a lie algebra , but not always one of maximal dimension . if , however , @xmath129 is a lie algebra of dimension @xmath47 for all @xmath120 , then we call @xmath114 a _",
    "free @xmath55-set_.    for example , @xmath130 is trivially a sufficient @xmath55-set .",
    "it is , however , in general not a free @xmath55-set . on the other hand",
    ", @xmath131 forms a free @xmath55-set , but in general not a sufficient one .",
    "recall @xmath132 and @xmath51 \\}$ ] , so that @xmath133 ) , ( y , x ) , ( y , y ) , ( y,[x , y ] ) \\}$ ] . then @xmath134 is a ( trivial ) sufficient @xmath55-set of size @xmath135 . in order for @xmath39 to be a lie algebra of maximal dimension @xmath22 we must have @xmath136 ) = f_y(y ) = f_y([x , y ] ) = 0 $ ] , and we have seen before that @xmath58 must be equal to @xmath57 .",
    "this means that @xmath114 is not a free @xmath55-set , since @xmath137 is not a lie algebra if @xmath138 .",
    "however , if we take @xmath139 , @xmath140 , and @xmath141 ) = r_y(y ) = r_y(x , y ) = 0 $ ] , then @xmath114 is a sufficient @xmath55-set of size @xmath142 , and by checking the jacobi identity for @xmath39 we find that it is a free sufficient @xmath55-set .    [ lem_free_fset_implies_affine_space ] if @xmath106 is a free sufficient @xmath55-set then @xmath143",
    ".    recall from above the map @xmath144 . by the assumption that @xmath106 is free , we have @xmath145 .",
    "the assumption that @xmath106 is sufficient guarantees that @xmath4 is not a proper subset of @xmath146 , so that @xmath147 is a bijection between @xmath148 and @xmath4 .",
    "we remark that a priori it is possible for @xmath4 to be an affine space while no free sufficient @xmath55-set exists .",
    "however , we have not yet encountered such a case ( see also the discussion in section [ sec_conclusion ] ) .",
    "in this section we describe the algorithms used to obtain the results in section [ sec_comp_results ] . for the computational results in this paper",
    "we have developed an algorithm that , given a graph @xmath1 and a field @xmath2 , computes the variety @xmath4 and the multiplication table of @xmath39 for any @xmath68 .",
    "these algorithms were implemented in the magma computer algebra system @xcite .",
    "the algorithm may be broken up into four distinct parts , of which the third ( multiplicationtable ) and the fourth ( minimizefset ) are the most time - consuming .      computebasiscomputing a basiscomp_basis * in : * a field @xmath2 and a graph @xmath1 , with @xmath149 . + * out : * a set of monomial elements of @xmath27 . + * begin * +    * let * @xmath150 be the free associative algebra with generators @xmath23 , +    * let * @xmath151 be the linear map defined by @xmath152 for @xmath44 and + @xmath153 \\mapsto",
    "\\mu(b)\\mu(c ) - \\mu(c)\\mu(b)$ ] for @xmath154 , +    * let * @xmath155 and @xmath156 , +    * let * @xmath157 ) \\mid x , y \\in \\pi , x \\not\\sim y \\rangle$ ] , +    * while * @xmath158 * do * + _ //update the ideal representing extremality of elements of @xmath23 _",
    "+    * let * @xmath159 ) \\mid x \\in \\pi , b \\in b ' \\rangle$ ] , + _ //find",
    "new elements that are not linear combinations of existing basis elements _ +    * let * @xmath160 , @xmath161 , @xmath162 , +    * for each * @xmath163 * do * +    * let * @xmath164)$ ] , +    * if * @xmath165 * then * +    * let * @xmath166 $ ] , @xmath167 $ ] , +    * let * @xmath168 , @xmath169 +    * end if * , +    * end for * , +    * end while * , +    * return * @xmath105 . + * end *    in this section we describe how we compute , strictly speaking , a set of monomial elements of @xmath26 that projects to a basis of @xmath39 for any @xmath68 . however , because in particular such a basis projects to a basis @xmath45 that consists of monomials , we will often call such a basis `` a monomial basis of @xmath45 '' in the remainder .    a sketch of the algorithm computebasis is given as algorithm [ alg_comp_basis ] .",
    "we initialize @xmath105 with the set @xmath23 of generators of @xmath26 , so that @xmath105 contains a basis for all monomials of length @xmath142 .",
    "we then iteratively extend a basis for monomials up to length @xmath31 to a basis for monomials up to length @xmath170 by forming all products @xmath171 $ ] , where @xmath44 and @xmath172 a monomial of length @xmath31 , and testing whether this product can be written in previously found basis elements .",
    "once we have arrived at a length for which no new basis elements are found , we are finished .",
    "note that while we return elements of @xmath27 , all nontrivial computations take place inside the free associative algebra @xmath150 on the sandwich generators of a lie algebra @xmath173 ( which will be identical to @xmath45 ) . in order to connect the two algebras we introduce the map @xmath174 in line @xmath3 , that maps elements of @xmath27 to elements of @xmath150 . in the course of the algorithm , we are also constructing an ideal @xmath175 of @xmath150 such that the adjoint representation @xmath176 factors through @xmath177 . here",
    "@xmath175 describes the fact that the generators are sandwich elements ; @xmath175 should be viewed as the analog in @xmath150 of the ideal @xmath178 of @xmath27 ( cf .",
    "section [ sec_prelim_mainres ] ) .",
    "this construction is what allows us to include @xmath179 in @xmath175 in line @xmath77 of the algorithm , since @xmath180 if @xmath9 is a sandwich .",
    "note finally that in order to be able to compute in @xmath181 ( as required in line @xmath182 of algorithm [ alg_comp_basis ] ) we have to repeatedly compute a grbner basis of @xmath175 but , fortunately , since the elements of @xmath175 are all homogeneous a truncated grbner basis is sufficient ( and sufficiently efficient in the cases we are interested in ) .",
    "[ lem_alg_compute_basis ] the algorithm computebasis returns a set @xmath105 of monomials in @xmath27 , and @xmath105 projects to a basis of @xmath39 for any @xmath68 .",
    "moreover , all elements of @xmath105 are either of the form @xmath9 ( @xmath44 ) or of the form @xmath183 $ ] ( @xmath44 , @xmath123 ) .",
    "the fact that @xmath105 consists of monomials , and that these monomials are of the stated form , is immediate from the algorithm ( note the construction of new elements of @xmath105 in line @xmath184 ) . moreover , because our @xmath68 are such that @xmath185 , a homogeneous basis for @xmath45 is a homogeneous basis for @xmath39 ( cf .",
    "* lemma 3.1 ) . ) .      initialfsetfinding an initial @xmath55-setinit_fset * in : * a field @xmath2 and a graph @xmath1 , with @xmath149 , and a monomial basis @xmath105 of @xmath45 .",
    "+ * out : * a sufficient @xmath55-set @xmath114 . +",
    "* begin * +    * let * @xmath186 , +    * for * @xmath187 , @xmath188 * do * +    * if * @xmath189 can be expressed in @xmath190 using lemma [ lem_ttr_f][itm_lem_ttr_f_first ]  [ itm_lem_ttr_f_last ] * then * +    * set * @xmath191 to be the corresponding expression , where @xmath192 is replaced by @xmath193 +    * else * +    * set * @xmath194 , +    * set * @xmath119 +    * end if * +    * end for * +    * return * @xmath114 . +",
    "* end *    the computation of the multiplication table , described in section [ sec_alg_comp_mt ] , will take place over the ring @xmath108 for some sufficient @xmath55-set @xmath114 . in this section",
    "we describe initialfset , the procedure for initialisation of @xmath108 , as presented in algorithm [ alg_init_fset ] .",
    "note that the @xmath55-set returned by this algorithm is a sufficient @xmath55-set , but in general not a free @xmath55-set .",
    "we fix in advance an ( arbitrary ) total ordering on the elements of @xmath23 , and a total ordering on @xmath105 respecting the natural order by monomial length , i.e. ,  @xmath195 whenever @xmath196 .",
    "these extend to a total ordering of @xmath107 by @xmath197 whenever @xmath195 , or @xmath198 and @xmath199 .",
    "the main for loop in algorithm [ alg_init_fset ] traverses @xmath107 in ascending order ; this is the ordering meant by `` @xmath200 '' in line @xmath22 as well .",
    "initialfset uses the relations in lemma [ lem_ttr_f ] as reduction steps : @xmath201 is interpreted as `` @xmath202 may be reduced to @xmath105 '' .",
    "[ lem_alg_initial_fset ] the algorithm initialfset returns a sufficient @xmath55-set .    observe that the relations in lemma [ lem_ttr_f ] all must hold if @xmath39 is to be a lie algebra of dimension @xmath45 ; this immediately implies sufficiency . finally , observe that all reductions thus obtained are polynomial , so that indeed @xmath203 defined in line @xmath77 of algorithm [ alg_init_fset ] is an element of @xmath108 .",
    "monomialtobasisexpressing a monomial as a linear combination of basis elementsmonomial_to_basis * in : * a field @xmath2 and a graph @xmath1 , with @xmath149 , a monomial basis @xmath105 of @xmath45 , + a sufficient @xmath55-set @xmath114 , a partially defined multiplication table @xmath204 , + and a monomial @xmath205}$ ] . + * out : * @xmath206 such that @xmath207 , or * fail*. + * begin * +    * if * @xmath208 can be written as a linear combination @xmath209 of basis elements , + by iteratively computing @xmath210}$ ] for @xmath211 using @xmath204 * then * +    * return * @xmath126 .",
    "+    * else if * @xmath212 in @xmath1 * then * +    * return * @xmath213 .",
    "+    * else if * @xmath214 for some @xmath215 * then * + _ / * use @xmath7 = f_x(y ) x$ ] * / _ +    * let * @xmath216 , @xmath217}$ ] , +    * let * @xmath218 , +    * let * @xmath126 such that @xmath219}$ ] ( using @xmath204 ) , +    * return * @xmath220 .",
    "+    * else if * @xmath221 for some @xmath222 * then * + _ / * use @xmath223 ] = f_x([y , z ] ) x - f_x(z)[x , y ] - f_x(y)[x , z]$ ] * / _ +    * let * @xmath216 , @xmath224 , @xmath225}$ ] , +    * let * @xmath226 ) \\in r_{\\mathbf{f}}$ ] , +    * let * @xmath227 , +    * let * @xmath228 , +    * let * @xmath229 such that @xmath230}$ ] ( using @xmath204 ) , +    * let * @xmath231 such that @xmath232]]}$ ] ( using @xmath204 ) , +    * let * @xmath233 such that @xmath234]]}$ ] ( using @xmath204 ) , +    * return * @xmath235 .",
    "+    * else * +    * return fail * +    * end if*. + * end *    monomialrelationsfinding monomial relationsmonomial_relations * in : * a field @xmath2 and a graph @xmath1 , with @xmath149 , a monomial basis @xmath105 of @xmath45 , + a sufficient @xmath55-set @xmath114 , a partially defined multiplication table @xmath204 , + a set @xmath236 of monomials of length @xmath31 currently under consideration , + an integer @xmath237 , and a monomial @xmath205 } \\in { \\mathcal m}$ ] . + * out : * a set @xmath238 of elements @xmath239 such that @xmath240 . + * begin * +    * let * @xmath241 , + _ / * by the jacobi identity * / _ +    * write * @xmath242}$ ] as a sum @xmath243 of @xmath244 monomials using equation ( [ eqn_jac_from_start ] ) , +    * find * @xmath239 such that @xmath245 ] } = \\sum_{b \\in b } a_b b + \\sum_{u \\in",
    "{ \\mathcal m } } a_u u$ ] , + using monomialtobasis to obtain the entries indexed by @xmath105 , +    * let * @xmath246 , + _ / * using lemma [ lem_eqn_sxnxm ] * / _ +    * for * @xmath247 such that @xmath248 , @xmath249 , and @xmath250 * do * +    * write * @xmath208 as a sum @xmath243 of @xmath251 monomials using lemma [ lem_eqn_sxnxm ] , +    * find * @xmath239 such that @xmath252 , using + for the entries indexed by @xmath105 , +    * let * @xmath246 +    * end for * , +    * return * @xmath238 .",
    "+ * end *    computemultiplicationtablecomputing a multiplication tablecompute_mt * in : * a field @xmath2 and a graph @xmath1 , with @xmath149 , a monomial basis @xmath105 of @xmath45 , + and a sufficient @xmath55-set @xmath114 . + * out : * a partial multiplication table @xmath204 , where @xmath253 . + * begin * +    * let * @xmath254 , +    * for * @xmath255 * do * + _ / * consider monomials of length @xmath31 * / _ +    * let * @xmath256 \\mid x \\in \\pi , b \\in b \\mbox { such that } |b|=l\\}$ ] , +    * let * @xmath257 be the empty @xmath258 matrix , +    * let * @xmath259 be the empty @xmath260 matrix , +    * let * @xmath261 , +    * while * @xmath262 * do * +    * for * @xmath263 * do * + _ / * find relations for @xmath208 * / _ +    * if * @xmath264 monomialtobasis(@xmath208 ) @xmath265 * fail * * then * +    * append * @xmath266 to @xmath257 , * append * @xmath126 to @xmath259 +    * else * +    * let * @xmath267 monomialrelations@xmath268 , +    * for each * @xmath269 * append * @xmath270 to @xmath257 , * append * @xmath271 to @xmath259 +    * end if * , +    * end for * , +    * let * @xmath272 , +    * end while * , + _",
    "/ * read the result * / _ +    * for * @xmath273 \\in { \\mathcal m}$ ] * do * +    * let * @xmath274 , where @xmath275 is such that @xmath276 , +    * let * @xmath277 * for * @xmath187 +    * end for * +    * end for * , +    * return * @xmath204 . + * end *    the third part of the algorithm is multiplicationtable , where part of a multiplication table for @xmath39 is computed .",
    "let @xmath114 be a sufficient @xmath55-set ( such as the one produced by initialfset ) , and let @xmath23 be the set of generating extremal elements and @xmath105 be a monomial basis of @xmath45 as before .",
    "we seek to compute @xmath278 such that , for @xmath279 , for specialisation to any @xmath68 , we have @xmath280 = \\sum_{c \\in b } { a^{{\\mathbf{f}}}_{xbc}}c.\\ ] ] we will call such a set @xmath204 a _ multiplication table of @xmath39_.    note that this is a multiplication table over @xmath108 ; for @xmath68 it specializes to a multiplication table for the lie algebra @xmath39 over @xmath2 upon evaluation @xmath116 for @xmath117 . first , observe that once we have computed @xmath281 for all @xmath44 and all @xmath123 every monomial @xmath282 $ ] can easily be written as a linear combination of basis elements by using @xmath204 to multiply `` from the inside out '' . secondly , observe that then similarly for any @xmath283 we can use the jacobi identity to write @xmath153 $ ] as a linear combination of monomials , and then apply the same trick ( it would of course in general yield an exponential number of terms ) .",
    "therefore we restrict to computing the @xmath204 for @xmath44 , @xmath123 .",
    "we present sketches of the algorithms used as algorithms [ alg_monomial_to_basis ] , [ alg_monomial_relations ] , and [ alg_compute_mt ] , where [ alg_compute_mt ] is the main function .",
    "we clarify some of the notation : firstly , we consider elements of @xmath284 as vectors indexed by elements of @xmath105 , as for example in lines @xmath285 , @xmath286@xmath287 of algorithm [ alg_monomial_to_basis ] .",
    "these vectors may of course be multiplied by elements of @xmath108 , as in lines @xmath182 ,",
    "@xmath288@xmath289 of that algorithm .",
    "the same notation is used for elements of @xmath290 and @xmath291 .",
    "secondly , we write @xmath266 for the vector with @xmath13 everywhere except for the position indexed by @xmath208 ( cf .",
    "line @xmath292 of algorithm [ alg_compute_mt ] ) , and @xmath293 for the restriction of the vector @xmath294 to a subset @xmath295 of its index set .    to clarify the monomial rewriting in line @xmath135 of algorithm [ alg_monomial_relations ] , we state the following lemma .",
    "[ lem_eqn_sxnxm ] let @xmath205}$ ] be a monomial of length @xmath31 , such that @xmath248 for some @xmath296 such that @xmath297 .",
    "then @xmath208 may be rewritten as a sum of @xmath22 monomials of length less than @xmath31 and @xmath298 monomials of length equal to @xmath31 .    for brevity and ease of reading",
    "we will prove the following easier lemma , of which the above is a straightforward generalisation .",
    "let @xmath205}$ ] be a monomial of length @xmath31 , such that @xmath299 for some @xmath300 such that @xmath301 .",
    "then @xmath208 may be rewritten as a sum of @xmath22 monomials of length less than @xmath31 and @xmath302 monomials of length equal to @xmath31 .",
    "moreover , it follows immediately from the jacobi identity that @xmath305 ] = - [ [ x_2 , x_1 ] , [ x_3 , \\ldots , x_l ] ] + [ x_2 , [ x_1 , [ x_3 , \\ldots , x_l]]]\\end{aligned}\\ ] ]",
    "[ lem_alg_compute_mt ] if multiplicationtable returns a multiplication table @xmath204 then , for any @xmath68 , these @xmath204 specialize to a multiplication table for the lie algebra @xmath39 upon evaluation @xmath116 for @xmath117 .    recall that , as described at the start of section [ sec_alg_comp_mt ] , the structure constants @xmath204 for @xmath315 follow immediately from those where @xmath44 and @xmath316 .",
    "we will consequently assume that @xmath204 is known for @xmath315 .",
    "observe that in algorithm [ alg_compute_mt ] the products are computed by ascending length , and for each length @xmath31 two matrices @xmath257 and @xmath259 are computed . throughout the algorithm the rows of @xmath257 and @xmath259 contain linear relations between elements of @xmath236 and elements of @xmath105 , i.e. ,  the @xmath317-th row of @xmath257 must be equal to the @xmath317-th row of @xmath259 .",
    "to see that these relations are true , observe that those gained from monomialtobasis ( algorithm [ alg_monomial_to_basis ] ) are true by induction on the length of @xmath208 ( if returned in line @xmath3 ) , by definition of extremality ( if returned in line @xmath182 ) , or by the first premet identity equation [ eqn_premet1 ] ( if returned in line @xmath318 ) . similarly , those gained from monomialrelations ( algorithm [ alg_monomial_relations ] ) are true by the jacobi identity ( those produced in line @xmath22 ) or by lemma [ lem_eqn_sxnxm ] ( those produced in line @xmath285 ) .    also , because we traverse the products of basis elements by ascending length ,",
    "the elements of @xmath284 required in lines @xmath285 and @xmath286@xmath287 of algorithm [ alg_monomial_to_basis ] are guaranteed to be easily deduced from the entries of @xmath204 computed earlier .",
    "finally , correctness of the @xmath281 computed by solving the system of linear equations represented by @xmath257 and @xmath259 in line @xmath318@xmath319 of algorithm [ alg_compute_mt ] follows from bilinearity of the lie algebra multiplication .",
    "we remark that we can not give an estimate of the number of relations we have to produce ( i.e. ,  the number of times we call monomialrelations and the value of @xmath320 ) before @xmath257 is of full rank . in practice , however , we find that @xmath320 does generally not exceed @xmath3 .",
    "in particular , this implies that termination of computemultiplicationtable is not guaranteed  but by lemma [ lem_alg_compute_mt ] correctness upon termination is .      minimizefsetfinding a minimal sufficient @xmath55-setminimize_fset * in : * a field @xmath2 and a graph @xmath1 , with @xmath149 , a monomial basis @xmath105 of @xmath45 , + a sufficient @xmath55-set @xmath114 , and a multiplication table @xmath204 . + * out : * an updated @xmath55-set @xmath114 of smaller size , and updated multiplication table . + * begin * + _ / * collect relations between elements of @xmath106 * / _ +    * let * @xmath321 - f_y(c)y \\mid ( y , c ) \\in { \\mathbf{f}}\\}$ ] , +    * let * @xmath322 + [ b,[c , a ] ] + [ a,[b , c ] ] \\mid a , b , c \\in b \\}$ ] , + _ / * reduce size of @xmath106 using @xmath323 * / _ +    * do * +    * for each * non - zero coefficient @xmath324 of each element @xmath325 * do * +    * find * @xmath326 , and @xmath327 such that @xmath111 occurs only in the linear term @xmath328 of @xmath329 +    * or continue * if no such element exists , +    * set * @xmath330 , +    * replace * @xmath111 by @xmath203 in @xmath323 , +    * replace * @xmath111 by @xmath203 in @xmath204 , +    * set * @xmath331 +    * end for * +    * until * @xmath106 is unchanged , +    * return * @xmath332 . + * end *    after the multiplication table has been computed , we try to minimize the size of the @xmath55-set .",
    "this procedure is called minimizefset and presented here as algorithm [ alg_minimize_fset ] .",
    "the procedure is straightforward : we find a set of relations @xmath323 between the @xmath111 by requiring that the jacobi identity holds and that for all @xmath188 , @xmath187 we have @xmath333 = f_y(c ) y$ ] , and we subsequently use those relations to find nontrivial @xmath203 and remove @xmath327 from @xmath106 .",
    "once the algorithm finishes , we apparently could not find any new linear relations .",
    "this does not necessarily mean that the @xmath55-set @xmath114 returned is free .",
    "however , if it happens to be the case that @xmath334 upon exiting , then @xmath114 is indeed a free sufficient @xmath55-set since then the jacobi identity apparently holds .",
    "for all the cases we have tested , the @xmath55-set returned was in fact free .",
    "observe that in this algorithm only division by elements of @xmath335 is taking place ( cf .",
    "lines @xmath0@xmath135 of algorithm [ alg_minimize_fset ] ) and not by other elements of @xmath108 , so that all these calculations take place in multivariate polynomial rings @xmath108 over @xmath2 .",
    "while it is a priori conceivable that division by elements of @xmath336 would be necessary to reduce the size of the @xmath55-set ( and thus that our algorithm would return a non - free @xmath55-set ) , we have not observed such a case in practice .",
    "we remark that a rather more sophisticated alternative to algorithm [ alg_minimize_fset ] has been implemented .",
    "for example , we execute a similar algorithm in the course of the computation of the multiplication table ( rather than only after the fact ) , we alternate between collecting a relatively small number relations and reducing the size of @xmath106 ( rather than do them in succession ) , and in line @xmath0 of algorithm [ alg_minimize_fset ] we give preference to @xmath337 such that the pair @xmath327 is large in the ordering on @xmath107 introduced in section [ sec_alg_init_fset ] .",
    "[ lem_alg_minimize_fset ] if @xmath334 upon exiting of the algorithm minimizefset , then @xmath4 is isomorphic to the affine space @xmath338 .",
    "this follows immediately from lemma [ lem_free_fset_implies_affine_space ] .",
    "cclccl    \\(a ) +    &    .computational results ( 2 or 3 generators ) [ cols=\"^ \" , ]     &    ll @xmath4 : & @xmath339 + @xmath340 : & @xmath341 + @xmath342 : & + runtime : & 2s +    we present the results of applying the algorithms described in section [ sec_algs ] in tables [ tab_comp_results23 ]  [ tab_comp_results5 ] . for each connected",
    "undirected finite graph @xmath1 with @xmath15 vertices , @xmath343 , without loops or multiple bonds , we state the dimension of the variety @xmath4 , the dimension of @xmath45 , the generic dimension and isomorphism type of @xmath342 , and the cpu time taken ( on a @xmath3 ghz amd opteron ) to execute the steps described in section [ sec_algs ] .",
    "recall that we claim the results presented in tables [ tab_comp_results23 ]  [ tab_comp_results5 ] to be valid for any field @xmath2 of characteristic distinct from @xmath3 . to establish this ,",
    "we have performed the following calculations for every graph @xmath1 occurring in the results .",
    "first we calculate a basis of the equivalent lie ring over @xmath344 using a procedure similar to the one described in ( * ? ? ?",
    "* section 3 ) .",
    "this gives us a set @xmath345 of primes for which the monomial basis computed in algorithm [ alg_comp_basis ] would differ from the characteristic @xmath13 case .",
    "then we execute the algorithms described in section [ sec_algs ] for @xmath346 , and in algorithm [ alg_minimize_fset ] we store in the set @xmath347 the prime components of the denominator of the @xmath348 we divide by .",
    "subsequently , we perform the computation with @xmath349 for @xmath350 ; fortunately this last task is easily done in parallel . only in one case",
    "did we find a different result : for @xmath351 the case where @xmath352 is of dimension @xmath353 ( rather than @xmath354 ) .",
    "the result that @xmath71 remains valid , however .",
    "we emphasize that in each of the cases considered we found a free @xmath55-set , and consequently prove that @xmath4 is an affine space ( cf .",
    "lemma [ lem_free_fset_implies_affine_space ] ) .",
    "moreover , we keep track of the reductions and relations used to turn the trivial sufficient @xmath55-set into a free sufficient @xmath55-set , so that we obtain a certificate for the correctness of these results . unfortunately , however , such certificates are far too long to reproduce here .    before turning to some of the results ,",
    "let us elaborate on a particular piece of data , namely the isomorphism type of @xmath342 .",
    "for a number of special @xmath1 ( namely the dynkin diagrams of affine type ) it has been shown that the lie algebra @xmath39 is isomorphic to a fixed lie algebra @xmath5 for @xmath55 in an open dense subset of @xmath4 ( * ? ? ?",
    "* theorem 22 ) .",
    "a similar result is proved in ( * ? ? ?",
    "* section 7 ) for the four infinite families there considered .",
    "we investigate this property in our cases as follows .",
    "firstly , we carry out all the computations described in the previous section over @xmath355 . recall that in all cases we found a free @xmath55-set @xmath114 ; we let @xmath356 , so that @xmath357 . now take some finite field @xmath358 , whose characteristic @xmath359 is distinct from @xmath3 and such that no multiples of @xmath359 occur in denominators in the multiplication table @xmath204 ( in our examples the multiplication table always turns out to be integral , so any finite field of characteristic distinct from @xmath3 works )",
    ". then take @xmath126 uniformly random in @xmath360 and let @xmath361 , where we interpret the multiplication table @xmath204 over @xmath362 and @xmath147 is evaluation as described in section [ sec_fsets ] .",
    "this gives us a lie algebra @xmath5 defined over @xmath358 , for which it is straightforward for magma to compute the isomorphism type of @xmath342 .",
    "we repeated this process a number of times over various finite fields ( e.g. ,  @xmath363 , @xmath364 ) and stored the results  in each case finding the same dimension and isomorphism type of @xmath342 in the vast majority of cases .",
    "we remark that we have not distinguished between split and twisted forms of lie algebras of the same cartan type .",
    "the following results are particularly worth pointing out ( we refer to the case presented in table i(x ) simply as case [ ix ] ) .    1",
    ".   [ 1c ] , [ 2c ] , [ 3a ] , and [ 3h ] agree with cases proved in @xcite ; 2 .",
    "[ 2b ] , [ 2d ] , [ 3f ] , and [ 3j ] agree with cases proved in @xcite ; 3 .",
    "[ 3n][3q ] are the four cases with @xmath0 vertices and @xmath22 commuting edges .",
    "where one might expect a structural similarity , [ 3n ] is the odd one out both in terms of dimension ( @xmath365 vs @xmath366 ) and type ( a large radical vs simple of type @xmath367 ) ; 4 .",
    "similarly , [ 3r ] and [ 3s ] are the two cases with @xmath0 vertices and @xmath3 commuting edges . again , despite the difference in @xmath47 being only @xmath142 , their isomorphism types are very different ; 5 .   in our computations",
    ", we have not encountered a lie algebra of type @xmath14 . even though case",
    "[ 3 t ] is of dimension @xmath368 , the biggest simple component we found there was of type @xmath367 .",
    "it has been proved that @xmath14 can be generated by @xmath0 extremal elements ( * ? ? ?",
    "* theorem 8.2 ) , but apparently not in the manner considered in this paper : @xmath14 is not a subquotient of any maximal - dimensional lie algebra generated by @xmath0 extremal elements plus commutation relations , for then it would have to occur either in [ 3 t ] , where it does not , or in [ 3u ] , where it can not for such a lie algebra is always nilpotent . on the other hand ,",
    "@xmath14 can be generated in this manner by @xmath182 extremal elements ( * ? ? ?",
    "* theorem 22 )",
    "[ 3u ] is the case of largest dimension among the @xmath0 generators ; it is also the only case where @xmath4 is a point and consequently only one lie algebra occurs , and that it is a nilpotent lie algebra ( cf .",
    "* lemma 4.2 ) ) .",
    "these theorems follow immediately from the correctness of our algorithm , as proved in lemmas [ lem_alg_compute_basis ] , [ lem_alg_initial_fset ] , [ lem_alg_compute_mt ] , and [ lem_alg_minimize_fset ] , and the computational results presented in section [ sec_comp_results ] .    in theorem [ thm_537_xtriv ] and corollary [ cor_537_nilp ] we prove that if @xmath1 is the complete graph on @xmath0 vertices , then @xmath71 and the only lie algebra that occurs is nilpotent .",
    "this of course leads to the question whether this pattern continues : `` for @xmath1 the complete graph on @xmath15 vertices ( @xmath369 ) , is @xmath4 a point ? '' .",
    "unfortunately , this question is not feasible using our software ( experiments show that for @xmath370 already @xmath371 ) .",
    "another approach would be to consider relations between the variety for @xmath1 and the varieties for subgraphs @xmath372 .",
    "this problem is the subject of ongoing research .",
    "secondly , as mentioned earlier , two questions were posed in ( * ? ? ?",
    "* section 5.2 ) : `` is @xmath4 always an affine space ? '' , and `` is there always a generic lie algebra ? '' .",
    "although the authors of that paper expect the answers to both questions to be negative , we have found no counterexamples . moreover , since these questions can be answered affirmatively for both a number of infinite series of sparse graphs ( as studied in @xcite ) and a number of dense graphs ( as studied here ) , we would not dispose of these conjectures too easily .",
    "the author would like to thank arjeh cohen and jan draisma for numerous fruitful discussions on this topic , willem de graaf for his help in computing several lie rings , and the anonymous reviewers for their very thorough evaluation and their invaluable comments .",
    "zelmanov and a.i .",
    "kostrikin . a theorem on sandwich algebras . , 183:106111 , 225 , 1990 .",
    "translated in proc .",
    "steklov inst .",
    "1991 * , no .  4 , 121126 , galois theory , rings , algebraic groups and their applications ( russian )"
  ],
  "abstract_text": [
    "<S> we give an overview of some properties of lie algebras generated by at most @xmath0 extremal elements . </S>",
    "<S> in particular , for any finite graph @xmath1 and any field @xmath2 of characteristic not @xmath3 , we consider an algebraic variety @xmath4 over @xmath2 whose @xmath2-points parametrize lie algebras generated by extremal elements . here </S>",
    "<S> the generators correspond to the vertices of the graph , and we prescribe commutation relations corresponding to the nonedges of @xmath1 .    we show that , for all connected undirected finite graphs on at most @xmath0 vertices , @xmath4 is a finite - dimensional affine space . </S>",
    "<S> furthermore , we show that for maximal - dimensional lie algebras generated by @xmath0 extremal elements , @xmath4 is a single point . </S>",
    "<S> the latter result implies that the bilinear map describing extremality must be identically zero , so that all extremal elements are sandwich elements and the only lie algebra of this dimension that occurs is nilpotent .    </S>",
    "<S> these results were obtained by extensive computations with the magma computational algebra system . </S>",
    "<S> the algorithms developed can be applied to arbitrary @xmath1 ( i.e. ,  without restriction on the number of vertices ) , and may be of independent interest . </S>"
  ]
}
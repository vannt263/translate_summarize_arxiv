{
  "article_text": [
    "simulations of nano scale liquid systems can provide insight into many naturally - occurring phenomena , such as the action of proteins that mediate water transport across biological cell membranes  @xcite .",
    "they may also facilitate the design of future nano devices and materials ( e.g.  high - throughput , highly selective filters or lab - on - a - chip components ) .",
    "the dynamics of these very small systems are dominated by surface interactions , due to their large surface area to volume ratios",
    ". however , these surface effects are often too complex and material - dependent to be treated by simple phenomenological parameters @xcite or by adding ` equivalent ' fluxes at the boundary @xcite .",
    "direct simulation of the fluid using molecular dynamics ( md ) presents an opportunity to model these phenomena with minimal simplifying assumptions .",
    "some md fluid dynamics simulations have been reported  @xcite , but md is prohibitively computationally costly for simulations of systems beyond a few tens of nanometers in size .",
    "fortunately , the molecular detail of the full flow - field that md simulations provide is often unnecessary ; in liquids , beyond 510 molecular diameters ( @xmath0 for water ) from a solid surface the continuum - fluid approximation is valid and the navier - stokes equations with bulk fluid properties may be used @xcite .",
    "hybrid simulations have been proposed  @xcite to simultaneously take advantage of the accuracy and detail provided by md in the regions that require it , and the computational speed of continuum mechanics in the regions where it is applicable .",
    "an example application of this technique is shown schematically in figure  [ figure_postsandnanochannel ] , where a complex molecule is being electrokinetically transported into a nanochannel for separation and identification@xcite . only the complex molecule ,",
    "its immediately surrounding solvent molecules , and selected near - wall regions require an md treatment ; the remainder of the fluid ( comprising the vast majority of the volume ) may be simulated by continuum mechanics .",
    "a hybrid simulation would allow the effect of different complex molecules , solvent electrolyte composition , channel geometry , surface coatings and electric field strengths to be analysed , at a realistic computational cost .    in order to produce a useful , general simulation tool for hybrid simulations ,",
    "the md component must be able to model complex geometrical domains .",
    "this capability does not exist in currently available md codes : domains are simple shapes , usually with periodic boundaries .",
    "the most important , computationally demanding , and difficult aspect of any md simulation is the calculation of intermolecular forces .",
    "this paper describes an algorithm that is capable of calculating pair force interactions in arbitrary , unstructured mesh geometries that have been parallelised for distributed computing by spatial decomposition .",
    "the conventional method of md force evaluation in distributed parallel computation is to use the cells algorithm to build ` neighbour lists ' for interacting pairs with the ` replicated molecule ' method of providing interactions across periodic boundaries and interprocessor boundaries , where the system has been spatially partitioned  @xcite .    the spatial location of molecules in md is dynamic , and hence not deducible from the data structure that contains them .",
    "a neighbour list defines which pairs of molecules are within a certain distance of each other , and as such need to interact via intermolecular forces .",
    "_ neighbour lists are unsuitable _ when considering systems of arbitrary geometry , that may have been divided into irregular and complex mesh segments using standard mesh partitioning techniques ( see , for example , figure  [ figure_testmolconfig_complex_bw ] ) for two reasons :    1 .",
    "* interprocessor molecule transfers : * a molecule may cross an interprocessor boundary at any point in time ( even part of the way through a timestep ) , at which point it should be deleted from the processor it was on and an equivalent molecule created on the processor on the other side of the boundary . given that neighbour lists are constructed as lists of array indices , references or pointers to the molecule s location in a data structure , deleting a molecule would invalidate this location and require searching to remove all mentions of it .",
    "likewise , creating a molecule would require the appropriate new pair interactions to be identified .",
    "clearly this is not practical .",
    "it is conventional to allow molecules to ` stray ' outside of the domain controlled by a processor and carry out interprocessor transfers ( deletions and creations ) during the next neighbour list rebuild .",
    "this is only possible when the spatial region associated with a processor can be simply defined by a function relating a position in space to a particular cell on a particular processor ( i.e. a uniform , structured mesh , representing a simple domain ) . in a geometry where the space in question is defined by a collection of individual cells of arbitrary shape ,",
    "this is not possible .",
    "for example the location the molecule has ` strayed ' to may be on the other side of a solid wall on the neighbour processor , or across another interprocessor boundary . for the molecule to end up unambiguously in the correct place",
    ", interprocessor transfers must happen as molecules cross a face .",
    "* spatially resolved flow properties : * md simulations used for flow studies must be able to spatially resolve fluid mechanic and thermodynamic fields .",
    "this is achieved by accumulating and averaging measurements of the properties of molecules in individual cells of the same mesh that defines the geometry .",
    "if a molecule is allowed to stray outside of the domain controlled by a processor , as above , then it would not be unambiguous and automatic which cell s measurement the molecule should contribute to .",
    "while both of these problems could be mitigated by , for example , working out which cell a molecule outside the domain should be in on another processor and sending its information , doing so would result in an inelegant and inflexible arrangement with each additional simulation feature ( i.e.  a different measured variable or class of intermolecular potential ) requiring special treatment .",
    "we have , therefore , developed a new algorithm which is of comparable computational cost to neighbour lists , but designed to be powerful and generic for simulation in arbitrary geometries .",
    "as will be shown , neighbour lists also have some unfavourable features that could be improved upon .",
    "when parallelising an md calculation , the spatial domain of the simulation is decomposed and each processor is given responsibility for a single region  @xcite .",
    "molecules are , of course , able to cross the boundaries between these regions and therefore need to be communicated from one processor to the next",
    ". processors also communicate when carrying out intermolecular force calculations , in which molecules close to processor boundaries need to be replicated on their neighbours to provide interactions .",
    "this process is illustrated in figure  [ figure_referredmolecules ] .",
    "periodic boundaries also require information about molecules that are not adjacent physically in the domain ( see figure  [ figure_referredmoleculesperiodic ] ) , these required interactions can also be constructed by creating copies of molecules outside the boundary .",
    "it is possible to handle processor and periodic boundaries in exactly the same way , since they have the same underlying objective : molecules near to the edge of a region need to be copied either between processors or to other locations on the same processor at every timestep to provide interactions .",
    "this is a useful feature because decomposing a mesh for parallelisation will often turn a periodic boundary into a processor boundary .",
    "the issue is how to efficiently identify which molecules need to be copied , and to which location , because this set continually changes as the molecules move .",
    "the new arbitrary interacting cells algorithm ( aica ) we propose here is an extension of the conventional cells algorithm ( cca ) @xcite . in the cca ,",
    "a simple ( usually cuboid ) simulation domain is subdivided into equally sized cells . for computational and theoretical reasons",
    ", intermolecular potentials do not extend to infinity ; they are assigned a cut - off radius , @xmath1 , beyond which they are set to zero .",
    "the minimum dimension of the cca cells must be greater than @xmath1 , so that all molecules in a particular cell interact with all other molecules in their own cell and with those in their nearest neighbour cells ( i.e.  those they share a face , edge or vertex with  26 in 3d ) .",
    "aica uses the same type of mesh as would be used in computational fluid dynamics ( cfd ) to define the geometry of a region .",
    "_ there are no restrictions on cell size , shape or connectivity .",
    "_ each cell has a unique list of other cells that it is to interact with , this list is known as the direct interaction list ( dil ) for the cell in question ( ciq ) .",
    "it is constructed by searching the mesh to create a set of cells that have at least one vertex within a distance of @xmath1 from any of the vertices of the ciq , see figure  [ figure_interactingcellidentification ] .",
    "the dils are established prior to the start of simulation and are valid throughout because the spatial relationship of the cells is fixed , whereas the set of molecules they contain is dynamic . in a similar way to the cca , at every timestep",
    "a molecule in a particular cell calculates its interactions with the other molecules in that cell and consults the cell s dil to find which other cells contain molecules it should interact with .",
    "information is required to be maintained stating which cell a molecule is in  this is straightforward and computationally cheap .",
    "the construction of the dils and accessing molecules is done in such a way as to not double - count interactions , similarly to the cca .",
    "for example , if cells a and b need to interact , cell b will be on cell a s dil , but cell a will not be on cell b s dil .",
    "when a molecule in cell a interacts with one in cell b the molecule in cell b will receive the inverse of the force vector calculated to be added to the molecule in cell a , because the pair forces are reciprocal , i.e.  @xmath2 .",
    "it is possible in rare cases for small errors to be caused by this algorithm : small slices of volume in cells may not be identified for interaction ( see figure  [ figure_errorsintwistedmeshes ] ) .",
    "the errors introduced will be slight because the relative volume not accounted for will be very small : in figure  [ figure_errorsintwistedmeshes ] , only when molecules are in both the indicated regions of each cell will either miss out on an interaction , and the intermolecular potential will be small at this distance . a small guard distance could be added to @xmath1 when constructing the dil to reduce this error . this is less of a problem in good quality meshes , e.g.  hexahedral rather than tetrahedral cells .      replicated molecule parallelisation and periodic boundaries are handled in the same way using _ referred cells _ ( see figure  [ figure_interactingcellidentification ] ) and _ referred molecules_.    referred molecule : : :    a copy of a real molecule that has been placed in a region outside a    periodic or processor boundary in order to provide the correct    intermolecular interaction with molecules inside the domain .",
    "a    referred molecule holds only its own position and i d    ( i.e.  identification of which type of molecule it is for heterogenous    simulations ) .",
    "referred molecules are created and discarded at each    timestep , and do not report any information back to their source    molecules . therefore if molecule _",
    "j _ on processor 1 needs to interact    with molecule _",
    "k _ on processor 2 , a separate referred molecule will be    created on each processor .",
    "referred cell : : :    referred cells define a region of space and hold a collection of    referred molecules .",
    "each referred cell knows    +    * which real cell in the mesh ( on which processor ) is its source ;    * the required transformation to refer the positions and orientations    of the real molecules in the source cell to the referred location ( see    below for the details of how cells and molecules are referred ) ;    * the positions of all of its own vertices .",
    "these are the positions of    the vertices of the source cell which have been transformed by the    same referring transform as the referred molecules it contains ;    * which real cells are in range of this particular referred cell and    hence require intermolecular interactions to be calculated .",
    "this is    constructed once at the start of the simulation in the same way as the    dil for real - real cell interactions  the vertices of the real cells    in the portion of mesh on the same processor as the referred cell are    searched , those with at least one vertex in range of any vertex of the    referred cell are found .",
    "a spatial transformation is required to refer a cell across a periodic or processor boundary .",
    "figure  [ figure_cellreferringtransform ] shows the most general case of a cell being referred across a separated , non - parallel boundary , where ,    [ cols= \" > , < \" , ]     all cell combinations have been created once , i.e.  when @xmath3 , @xmath4 would produce the 21 combination , which is already identified as 12 .",
    "this non double counting procedure means that some cells will have few or no other cells in their dil , however , as long as the correct cell pair is created in one of the cell s dil , this is not an issue .",
    "it is also designed so that a cell does not end up on its own dil , the interactions between molecules in the same cell are handled separately .      _ coupled patches _ are the basis of periodic and interprocessor communication for creating referred cells .",
    "patches , in general , are a collection of cell faces representing a mesh boundary of some description  they may provide solid surfaces , inlets , outlets , symmetry planes , periodic planes , or interprocessor connections . coupled patches provide two surfaces ; whatever exits one enters the other and vice versa .",
    "two types are used in aica :    * _ periodic patches _ on a single processor are arranged into two halves , each half representing one of the coupled periodic surfaces . when a molecule crosses a face on one surface , it is wrapped around to the corresponding position on the corresponding face on the other surface .",
    "* _ processor patches _ provide links between portions of the mesh on different processors , one half of the patch is on each processor . when a molecule crosses a face on one surface , it is moved to the corresponding position on the corresponding face on the other surface , on the other processor . decomposing a mesh for parallelisation will often require a periodic patch to be changed to a processor patch",
    "the surfaces of coupled patches may have any relative orientation , and may be spatially separated as long as the face pairs on each surface correspond to each other .",
    "this allows them to also be used as a ` recycling ' surface in a flow simulation  whatever exits from an outlet is reintroduced at an inlet , with the option of scaling the molecule s properties , e.g.  temperature and pressure .      in the decomposed portion of the mesh on each processor",
    ", each processor and periodic patch should be split into segments , such that :    * faces on a processor that were internal to the mesh prior to decomposition end up on a segment ; * faces on a processor patch that were on separate periodic patches on the undecomposed mesh end up on different segments .",
    "these segments are further split such that faces that were on different halves of the periodic patch on the undecomposed mesh end up on different segments ; * faces on different halves of a periodic patch end up on different segments .",
    "each segment must produce a single vector / tensor transformation pair ( see section  [ text_cellpositionreferringtransformations ] ) which will be applied to all cells referred across it .      for each patch segment",
    ":    1 .   find all real and existing referred cells in range ( with at least one vertex within a distance of @xmath5 ) of at least one vertex of the faces comprising the patch segment .",
    "2 .   refer or re - refer this set of cells across the boundary defined by the patch segment using its transformation , see section  [ text_cellpositionreferringtransformations ] . in the case of a segment of periodic boundary , this creates new referred cells on the same processor . for a segment of a processor patch ,",
    "these cells are communicated to , and created on the neighbouring processor . before creating any new referred cell a check",
    "is carried out to ensure that it is not * a duplicate referred cell , one that has been created already by being referred across a different segment ; * a referred cell trying to be duplicated on top of a real cell , i.e. a cell being referred back on top of itself . + if the proposed cell for referral would create a duplicate of an existing referred cell , or end up on top of a real cell , then it is not created . to be a duplicate , the source processor , source cell and the vector part of the transformation ( see section  [ text_cellpositionreferringtransformations ] )",
    "must be the same for the two cells ( note , the vector part of transformation for a real cell is zero by definition ) .",
    "a single run of these steps will usually not produce all of the required referred cells .",
    "they are repeated until no processor adds a referred cell in a complete evaluation of all segments , meaning all possible interactions are accounted for . in iterations after the first , in step 1 it is enough to only search for referred cells in range of the faces on the patch segment , because the real cells will not have changed , and would all be duplicates .",
    "the final configuration of referred cells does not depend on the order of patch segment evaluation .",
    "appendix  [ text_exampleconstructionofreferredcells ] contains an example of the results of the cell referring process .",
    "figures [ figure_parallelgridpolyhedra1step_bw ] and [ figure_parallelgridpolyhedra2step_bw ] show the start and end points of the cell referring operation on a mesh that has been decomposed to run in parallel .",
    "the example is in 2d for clarity but the process is exactly the same in 3d .    in this example",
    "the number of referred cells created far exceeds the number of real cells , which would lead to much costly interprocessor communication .",
    "this is because the mesh has been made deliberately small relative to @xmath5 to demonstrate as many features of the algorithm as possible and to be practical to understand . in realistic systems",
    ", the mesh portions would be significantly bigger than @xmath5 and the referred cells would form a relatively thin ` skin ' around each portion .",
    "decomposition of the mesh should preferably be carried out to minimise the number of cells that need to be referred , and to ensure that the vast majority of the intermolecular interactions happen between real - real molecule pairs ; in this way the communication cost is minimised .              .",
    "some of those molecules may be on a periodic image of the system , and as such , in implementation terms , will reside on the other side of the domain .",
    "serial calculations in simple geometries typically use the minimum image convention  @xcite , but this is not suitable for parallelisation.,width=272 ]     that interact with the ciq ( dark ) are shaded in grey .",
    "the required referred cells are hatched in alternate directions according to which boundary they have been referred across .",
    "realistic systems would be significantly larger compared to @xmath1 than shown here.,width=264 ]     drawn from the indicated vertex on cell a intersects a face of cell b , therefore , molecules near this vertex should interact with molecules in the shaded region .",
    "similarly , an arc of radius @xmath1 drawn from the indicated face on cell b encompasses the small shaded region of cell a. the cell searching algorithm will not , however , identify cells a and b as needing to interact because none of their vertices lie within @xmath1 of each other.,width=264 ]             on each processor . a circle of radius @xmath5 drawn from any vertex of a real cell",
    "would be fully encompassed by other real or referred cells , thereby providing all molecules in that cell with the appropriate intermolecular interactions , either across a periodic boundary or from another processor .",
    "note that many cells are referred several times ; for example , the source cell marked with @xmath6 on processor 2 is referred to processors 0 and 1 twice on each.,width=529 ]"
  ],
  "abstract_text": [
    "<S> a new algorithm for calculating intermolecular pair forces in molecular dynamics ( md ) simulations on a distributed parallel computer is presented . the arbitrary interacting cells algorithm ( aica ) </S>",
    "<S> is designed to operate on geometrical domains defined by an unstructured , arbitrary polyhedral mesh , which has been spatially decomposed into irregular portions for parallelisation . </S>",
    "<S> it is intended for nano scale fluid mechanics simulation by md in complex geometries , and to provide the md component of a hybrid md / continuum simulation . </S>",
    "<S> aica has been implemented in the open - source computational toolbox openfoam , and verified against a published md code .    </S>",
    "<S> and    molecular dynamics , nano fluidics , hybrid simulation , intermolecular force calculation , parallel computing    31.15.qg , 47.11.mn </S>"
  ]
}
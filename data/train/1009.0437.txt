{
  "article_text": [
    "clebsch - gordan coefficients ( cgcs ) arise when decomposing the tensor product @xmath0 of the representation spaces of two irreducible representations ( _ irreps _ ) @xmath1 and @xmath2 of some group into a direct sum @xmath3 of irreducible representation spaces .",
    "they describe the corresponding basis transformation from a tensor product basis @xmath4 to a basis @xmath5 which explicitly accomplishes this decomposition .",
    "cgcs are familiar to physicists in the context of angular momentum coupling , in which the direct product of two irreps of the 2 group is decomposed into a direct sum of irreps .",
    "3 clebsch - gordan coefficients arise , for example , in the context of quantum chromodynamics , while n cgcs , for general @xmath6 , appear in the construction of unifying theories whose symmetries contain the @xmath7 standard model as a subgroup@xcite .",
    "n cgcs are also useful for the numerical treatment of models with n symmetry , where they arise when exploiting the wigner - eckart theorem to simplify the calculation of matrix elements of the hamiltonian .",
    "such a situation arises , for example , in the numerical treatment of n - symmetric quantum impurity models using the numerical renormalization group @xcite .",
    "such models can be mapped onto n - symmetric , half - infinite quantum chains , with hopping strengths that decrease exponentially along the chain .",
    "the hamiltonian is diagonalized numerically in an iterative fashion , requiring the explicit calculation of matrix elements of the hamiltonian of subchains of increasing length .",
    "the efficiency of this process can be increased dramatically by exploiting the wigner - eckart theorem , which requires knowledge of the relevant clebsch - gordan coefficients .",
    "( details of how to implement n symmetries within the context of the numerical renormalization group will be published elsewhere . ) similarly , tremendous gains in efficiency would result from developing n - symmetric implementations of the density matrix renormalization group for treating generic quantum chain models @xcite , or generalizations of this approach for treating two - dimensional tensor network models @xcite .    for explicit calculations with models having n symmetry , explicit tables of n clebsch - gordan coefficients are needed .",
    "their calculation is a problem of applied representation theory of lie groups that has been solved , in principle , long ago @xcite .",
    "for example , for 2 racah@xcite has found an explicit formula that gives the cgcs for the direct product decomposition of two arbitrary irreps @xmath1 and @xmath2 . for n ,",
    "explicit cgc formulas exist for certain special cases , e.g.  where @xmath2 is the defining representation @xcite",
    ". moreover , symbolic packages such as the program `` lie '' @xcite also allow the computation of certain cgcs , but rather have been conceived as a general - purpose software for manipulating lie algebras than a high - speed implementation for calculating cgcs .",
    "however , for the general case no explicit cgc formulas are known that would constitute a generalization of racah s results to arbitrary @xmath6 , @xmath1 and @xmath2 .",
    "the present paper describes a numerical solution to this problem , by presenting an elementary but efficient algorithm ( and a computer implementation thereof ) for producing explicit tables of cgcs arising in the direct product decomposition of two arbitrary n irreps , for arbitrary @xmath6 .",
    "( since n and n have the same cgcs , our algorithm also applies to the latter , but for definiteness we shall usually refer only to the former . ) our work is addressed at a readership of physicists .",
    "our algorithm uses only elementary facts from n representation theory , which we introduce and summarize as needed , presuming only knowledge of 2 representation theory at a level conveyed in standard quantum mechanics textbooks .",
    "previous attempts at formulating an algorithm for calculating n cgcs are either not sufficiently general for our purposes@xcite , or require mathematical methods@xcite much more advanced than ours , far beyond the scope of a standard physics education .",
    "we begin in sec .",
    "[ sec : definecgc ] by formulating the problem to be solved in rather general terms . to set the scene for its solution , sections  [ sec : su2 ] to [ sec : raising - lowering ] summarize the various elements of n representation theory ( without proofs , since this is all textbook material ) .",
    "first , in sec .",
    "[ sec : su2 ] we review the calculation of 2 cgcs using a strategy that can readily be generalized to the case of n. then we proceed to n representation theory and review in sections [ sec : algebra ] to [ sec : raising - lowering ] a scheme , due to gelfand and tsetlin ( gt ) @xcite , for labeling the generators of the corresponding lie algebra n , its irreps and the states in each irrep .",
    "the gt - scheme is convenient for our purposes since it yields explicit matrix representations for any n irrep ( eqs .",
    "( [ eq : jmelement ] ) and ( [ eq : jpelement ] ) below ) . with these in hand",
    ", we are finally in a position to formulate , in sections [ sec : decompose ] to [ sec : algorithm ] , our novel algorithm for computing n cgcs : it is simply a suitably generalized version of the 2 strategy of sec .  [ sec : su2 ] .",
    "the main text is supplemented by several technical appendices .",
    "[ app : young ] reviews the relation between the gt - patterns used in the text and young tableaux , with which physicists are perhaps somewhat more familiar .",
    "[ app : littlewood - richardson ] deals with the littlewood - richardson rule for determining which irreps @xmath8 occur in the decomposition @xmath9 .",
    "[ app : map ] describes two algorithms , needed for indexing purposes , which map the labels of irreps and of carrier states , respectively , onto natural numbers .",
    "finally , app . [ app : source ] , which is available in electronic form@xcite , gives the source code for our computer implementation , written in c++ .",
    "as a service to potential users , we have set up a web site@xcite containing an interactive `` cgc - generator '' .",
    "it allows visitors to perform a number of tasks on input data of their own choice , such as finding all irreps @xmath10 occuring in the decomposition of @xmath11 , or finding the complete set of cgcs arising in the decomposition of @xmath11 .",
    "to fix notation , let us state the problem we wish to solve for a general matrix lie group @xmath12 .",
    "( in subsequent sections , we restrict attention to @xmath12 = n or n. ) let @xmath1 be an irrep label that distinguishes different irreps of @xmath12 of n , and @xmath13 the dimension of irrep @xmath1 .",
    "let @xmath14 denote the carrier space for @xmath1 , spanned by @xmath13 carrier states @xmath15 , where the label @xmath16 will be understood to specify both the irrep @xmath1 and a particular state in its carrier space .",
    "( this will be made explicit in subsequent sections . )",
    "note that , throughout this paper , we adopt the viewpoint of quantum mechanics , where we consider only representations on _ complex _ vector spaces .",
    "besides , a state is to be understood as a one - dimensional subspace , not a vector .",
    "however , we pick a representative vector @xmath15 of each such subspace and subsequently treat a state as a vector .",
    "we assume the inner product of two such normalized vectors @xmath15 and @xmath17 to be given by @xmath18 unless noted otherwise .    the action of a group element @xmath19 can be represented on @xmath20 as a linear transformation @xmath21 where the @xmath22 are @xmath23 dimensional unitary matrices respecting the group structure @xmath24 .",
    "now consider the direct product of two carrier spaces , @xmath25 , of dimension @xmath26 .",
    "we are interested in its decomposition into a direct sum of carrier spaces @xmath8 of irreps @xmath10 , @xmath27 here the integer @xmath28 , called the _ outer multiplicity _ of @xmath10 , specifies the number of times the irrep @xmath10 occurs in this decomposition , and for a given @xmath10 , the outer multiplicity index @xmath29 distinguishes multiple occurrences of @xmath10 .",
    "correspondingly , let @xmath30 be a basis for the direct sum decomposition , i.e.@xmath31 .",
    "carrier space dimensions add up according to @xmath32 .    the decomposition ( [ eq : directproductdecomposition ] ) implies that a basis transformation @xmath33 can be found from the direct product basis to the direct sum basis which block - diagonalizes the matrix representations of all group elements ( ref .  , p.  100 ) :    [ eq : blockdiagonalize ] @xmath34 where each @xmath35 is a shorthand for a certain @xmath36 .",
    "since @xmath12 is a matrix lie group ( n or n ) , it is convenient to work with its associated lie algebra @xmath37 ( n or n ) .",
    "it is obtained by considering the infinitesimal action of @xmath12 on @xmath38 , i.e.  by taking derivatives of the group at the identity .",
    "this derivative acts on the direct product of two group representations according to the product rule , so that the basis transformation @xmath33 could equally be defined by the property that it block - diagonalizes the algebra representation : @xmath39    when projected to the subspace @xmath40 ( denote the corresponding projector by @xmath41 ) , the action of the algebra in the direct product representation can thus be written as @xmath42 concretely , the basis transformation @xmath33 can be expressed in the form @xmath43 where the @xmath44 are the clebsch - gordan - coefficients of present interest .",
    "they are understood to be defined only for @xmath45 , and express the carrier states of @xmath40 in terms of linear combinations of product basis states from @xmath0 .",
    "the cgcs encode so - called _ selection rules _ , in that @xmath46 only for a limited number of combinations of @xmath16 , @xmath47 and @xmath48 .",
    "since the cgcs are the entries of the unitary matrix @xmath33 , they satisfy the following orthonormality conditions :    [ eq : cgc - orthonormal ] @xmath49    actually , the @xmath44 can always be chosen to be real , and we shall do so throughout .",
    "the goal of the present work is to present ( and implement on a computer ) an efficient algorithm for @xmath50 = n or n which , for any specified @xmath6 and any specified irrep labels @xmath1 and @xmath2 , produces explicit tables of all cgcs arising in the direct product decomposition .",
    "before considering the general n case , we first review a method for calculating 2 cgcs . while there are various ways to accomplish this task , the particular approach presented below illustrates the general strategy to be used for n in later sections .",
    "the discussion is structured as follows : first , we recall the lie algebra associated with 2 , then its irreducible representations , then move on to product representation decompositions , and finally set up equations specifying the cgcs .    the lie algebra associated with 2 , denoted by 2 ,",
    "consists of all real linear combinations of three basis elements , @xmath51 , @xmath52 , and @xmath53 , obeying the commutation relation @xmath54 = ij_z$ ] ( plus cyclic permutations of the indices ) .",
    "however , it will be more convenient to deal with complex linear combinations of these , which constitute the algebra 2 . as a basis for the latter ,",
    "it is common to choose three elements , @xmath55 , @xmath56 , and @xmath53 , obeying the following commutation relations :    [ eq : sl2-commutators ] @xmath57 & = \\pm j_\\pm , \\\\ [ j_+ , j_- ] & = 2 j_z.\\end{aligned}\\ ] ]    each 2 irrep , and correspondingly , each 2 irrep , can be uniquely ( up to an isomorphism ) identified by a nonnegative half - integer , @xmath58 .",
    "the carrier space @xmath20 of such an irrep has an orthonormal basis where the states , denoted by @xmath59 , are labeled by a half - integer , @xmath60 , such that the action of @xmath53 and @xmath61 is given by    @xmath62    .",
    "arrows show the action of @xmath61 on the state @xmath63 . ]",
    "the @xmath53-eigenvalue @xmath64 will be called the @xmath65-_weight _ of the state @xmath59 ( in anticipation of similar nomenclature to be used for n below ) .",
    "the action of @xmath61 can be visualized in a so - called _ weight diagram _ , which represents each carrier state @xmath59 by a mark on an axis at the corresponding @xmath64-value .",
    "for example , the carrier space of @xmath66 is shown in fig .",
    "[ fig : su2 ] . in anticipation of the generalization to n",
    ", we label basis states from now on by a composite index @xmath67 , which includes both the irrep label @xmath1 and the basis index @xmath64 .",
    "each carrier space @xmath38 contains a unique ( up to normalization ) _ highest - weight state _ , @xmath68 , defined by the property that @xmath69 for 2 , it carries the labels @xmath70 .    in the direct product decomposition of two 2 irreps @xmath1 and @xmath2 , the outer multiplicity @xmath71 in the notation of eq .",
    "is given by : @xmath72 since @xmath73 for 2 , we shall , throughout this section , omit the index @xmath74 appearing in eq .  .",
    "in particular , eq .   now takes the form @xmath75 where the cgcs @xmath76 satisfy the selection rule : @xmath77 it reflects the fact that @xmath78 , @xmath15 and @xmath17 are eigenstates of @xmath79 , @xmath80 and @xmath81 , respectively , where the superscripts on @xmath53 indicate which carrier space the respective operators act on .    to obtain the cgcs for given @xmath1 and @xmath2 explicitly",
    ", we consider each @xmath10 for which @xmath82 separately .",
    "let us make the following ansatz for the expansion of @xmath68 in terms of product basis states : @xmath83 where @xmath84 are the cgcs of @xmath68 , and the sum runs only over values of @xmath64 and @xmath85 that satisfy the selection rule .",
    "inserting into , we obtain @xmath86 after evaluating the action of the raising operators on @xmath87 using eq .   and",
    "requiring the coefficients in front of each state @xmath87 to vanish independently , we obtain a homogeneous linear system of equations .",
    "we solve for @xmath84 and fix a solution by the normalization condition   and by requiring @xmath88 to be real and positive for the largest value of @xmath64 for which @xmath88 is nonzero .",
    "the cgcs of lower - weight states ( i.e.  states other than the highest - weight state ) are found by noting that @xmath89 ( @xmath90 is a normalization constant . ) the right - hand side of this equation is fully known from eq .  .",
    "by rewriting it into the form of eq .  ,",
    "the desired @xmath76 can readily be identified .    for given @xmath10 , @xmath1 and @xmath2",
    "it is possible to write eq .   as a recursion relation relating cgcs with different  @xmath91  @xcite .",
    "moreover , for 2 , there exists a closed formula for @xmath76@xcite .",
    "nevertheless , for present purposes , the approach presented here is the most convenient as its key steps can readily be generalized to calculate n clebsch - gordan coefficients .",
    "the differences in comparison to 2 will lie in    the more complex structure of raising and lowering operators ,    the labeling schemes for irreps and states , and    the method for finding the irreps occurring in a product representation decomposition ,    all of which we tackle in the following sections .",
    "instead of working with the group n itself , it will be more convenient for our purposes to consider its associated lie algebra , n ( * ? ? ?",
    "the latter consists of all traceless anti - hermitian @xmath92 matrices , while the ordinary commutator serves as its lie bracket .",
    "most results obtained for representations of n carry over to n one - to - one , with the elements of the lie algebra representing the generators of the lie group . notably , the clebsch - gordan coefficients of their representations are identical .",
    "we begin by specifying a basis for the n algebra , in order to illustrate its structure .",
    "let @xmath93 be the single - entry matrices , i.e.@xmath94 . a possible choice of basis is given by the matrices @xmath95 and @xmath96 for @xmath97 , and @xmath98 for @xmath99 .",
    "n is spanned by _",
    "real _ linear combinations of these matrices .",
    "just as for 2 and 2 , however , it will be convenient to work with a basis for n. to this end , define for @xmath100 the _ complex _ linear combinations ,    @xmath101    which satisfy , for each @xmath102 , the familiar 2 commutation relations of eq .",
    ":    @xmath103 & =   \\pm j_\\pm^{(l ) }   , \\\\",
    "\\label{eq : pmcomm } \\left [ j_+^{(l ) } , j_-^{(l ) } \\right ] & =   2j_z^{(l ) } . \\end{aligned}\\ ] ]    the @xmath104 matrices @xmath105 form a maximal set of mutually commuting matrices , @xmath106 = 0 $ ] ( thus , the @xmath107 span the cartan subalgebra of n ) .",
    "thus , none of the @xmath108 commutes with all elements of this set , or with all other @xmath109 operators .",
    "the matrices @xmath105 and @xmath108 are not anti - hermitian and thus do not belong to n , but rather to n. however , it is sufficient to restrict our attention to @xmath108 because , from these , we can recover an anti - hermitian basis using    @xmath110 \\ldots ] \\quad\\text{for}\\quad p > q \\;,\\ ] ]    @xmath111 \\ldots ] \\quad\\text{for}\\quad p < q \\;.\\ ] ]    in other words , once we know representations for all @xmath108 on a given carrier space , the representations of all other elements of both the algebras n and n are also known . for definiteness , we shall refer to n below , although the constructions apply equally to n.",
    "the n basis defined in the preceding section has a feature that makes it particularly convenient for our purposes : if one also adopts a specific labeling scheme , devised by gelfand and tsetlin ( gt ) @xcite , for labeling n irreps and the basis states of their carrier spaces , these basis states are simultaneous eigenstates of all the matrices @xmath105 , and explicit formulas exist for the matrix elements of the @xmath108 with respect to these basis states .",
    "the next three sections are devoted to summarizing the gt labeling scheme without dwelling on its mathematical roots  the mere knowledge of its rules is sufficient for our purposes .",
    "( the relation of the gt - scheme labeling scheme to a frequently - used alternative but equivalent labeling scheme , employing young diagrams and young tableaux , is summarized , for convenience , in appendix  [ app : young ] . )",
    "up to equivalent representations , each n irrep can be identified uniquely by a sequence of @xmath6 integers @xcite , @xmath112 or @xmath113 in short , fulfilling @xmath114 for @xmath115 .",
    "we shall call such a sequence an _ irrep weight _ or _",
    "i - weight _ , in short .",
    "the second index , @xmath6 , identifies the algebra , n ; the reasons for displaying this index explicitly will become clear below .",
    "two i - weights @xmath1 and @xmath2 for which all components differ only by a @xmath116-independent constant , i.e.  @xmath117 with @xmath118 , designate the _ same _ n irrep .",
    "this fact can be used to bring any i - weight into a `` normalized '' form having @xmath119 , which will be assumed below , unless otherwise specified .",
    "gt exploited the fact that the carrier space of any n irrep splits into disjoint carrier spaces of @xmath120 irreps to devise a labelling scheme with a very convenient property : it yields a remarkably simple rule for enumerating which @xmath120 irreps occur in the decomposition of @xmath113 , namely all those with i - weights @xmath121 that satisfy the condition @xmath122 for @xmath115 .",
    "note that , here , it is crucial _ not _ to set @xmath123 so that we can distinguish between multiple occurrences of the same @xmath120 irrep .",
    "recursively , the carrier spaces of @xmath120 irreps give rise to @xmath124 irreps and so on , down to 1 , the carrier spaces of which are one - dimensional .",
    "this sequence of decompositions can be exploited to label the basis states @xmath15 of a given n irrep @xmath125 using so - called _ gelfand - tsetlin patterns _ ( gt - patterns ) . these are triangular arrangements of integers , to be denoted by @xmath126 , with the structure @xmath127 i.e.  the first index labels diagonals from left to right , and the second index labels rows from bottom to top .",
    "the top row contains the i - weight @xmath128 that specifies the irrep , and the entries of lower rows are subject to the so - called _ betweenness condition _",
    ", @xmath129 the dimension of an irrep @xmath125 is equal to the number of valid gt - patterns having @xmath1 as their top row .",
    "there exists a convenient formula for this number : @xmath130 note that the 2 basis state conventionally labeled as @xmath131 corresponds to the gt - pattern @xmath132 , and the above formula reduces to @xmath133 .    to obtain a complete description of n irreps , we need to specify how the lie algebra n acts on states labeled by gelfand - tsetlin patterns .",
    "the following two sections are devoted to this task , section  [ sec : weights ] with @xmath105 and section  [ sec : raising - lowering ] dealing with @xmath108 .",
    "a very convenient property of the gt - labeling scheme is that every state @xmath15 is a simultaneous eigenstate of all @xmath105 generators , @xmath134 with eigenvalues @xmath135 where the _ row sum _ @xmath136 denotes the sum over all entries of row @xmath102 of gt - pattern @xmath16 ( @xmath137 by convention ) .",
    "we shall call the sequence of @xmath104 @xmath105 eigenvalues the _ @xmath65-weight _ of the state @xmath15 , and denote it by @xmath138 .",
    "the _ @xmath65-weight _ of @xmath15 is a straightforward generalization of the quantum number @xmath64 in quantum angular momentum .",
    "as will be elaborated below , the notion of weights of states is useful for elucidating the structure of carrier spaces of n irreps , and in particular for visualizing the action of raising and lowering operators .",
    "the above way of introducing weights is , however , not unique",
    ". we shall often find it convenient to employ an alternative definition of the weight of states , which has the convenient property that it always yields nonnegative _ integer _",
    "elements ( in contrast to @xmath139 ) . this alternative weight , to be called _ pattern weight _ or _ p - weight _ , and denoted by @xmath140 , is defined to be a sequence of @xmath6 integers , @xmath141 , where @xmath142 is the difference between summing up rows @xmath102 and @xmath143 of the gt - pattern @xmath16 .",
    "note that the number of _ independent _ elements of @xmath140 is the same as that of @xmath144 , namely @xmath104 , since the @xmath145 satisfy the relation @xmath146 .",
    "the two types of weights are directly related to each other : via eq .",
    ", we obtain @xmath147 . for definiteness , we will mostly refer to p - weights below ( noting here that most statements involving p - weights can be translated into equivalent statements involving @xmath65-weights ) .    at this point , the first of several fundamental differences between 2 and",
    "n with @xmath148 appears .",
    "while for 2 , there always exists exactly one state with a given p - weight , this is not the case for n in general ; for @xmath148 , several linearly independent states in the carrier space can have the same p - weight .",
    "indeed , two states have the same p - weight , @xmath149 , if and only if they have the same set of row sums ( @xmath150 for @xmath100 ) ( i.e.  they differ only in the way in which the `` weight '' of the row sums is distributed among the entries of each row ) . for a given p - weight @xmath151 , the number of states @xmath15 having the same p - weight , @xmath152 ,",
    "is called the _ inner multiplicity _ of that p - weight , to be denoted by @xmath153 .",
    "consequently , p - weights or @xmath65-weights are not suited for uniquely labeling states of a carrier space ( which is why gt - patterns are used for this purpose ) .",
    "@xmath65-weights nevertheless do provide a convenient way to visualize the carrier space of an n irrep . to this end , consider @xmath154 as a vector in @xmath155-dimensional space and , for each state , mark the endpoint of its weight vector in an @xmath155-dimensional lattice .",
    "the resulting diagram is called a _",
    "weight diagram_. for the 2 irrep @xmath156 , weight diagrams consist of a coordinate axis with markings at @xmath157 ( see fig .  [",
    "fig : su2 ] ) ; for 3 , weight diagrams are two - dimensional ( see fig .  [",
    "fig : su3 ] ) ; for @xmath158 , weight diagrams can not be readily drawn on paper because the corresponding lattices have more than two dimensions .",
    "note that , in fig .",
    "[ fig : su3 ] , the @xmath65-weight @xmath159 has inner multiplicity two , since the two states @xmath160 and @xmath161 have the same row sums .    .",
    "each dot represents a @xmath65-weight ; we also indicate the gt - patterns of the corresponding states .",
    "the double circle around @xmath162 indicates that there are two states with this weight .",
    "the solid and dashed arrows represent the action of @xmath163 and @xmath164 , respectively .",
    "( @xmath165 could be represented by arrows pointing in directions opposite to those of @xmath166 . )",
    "note that both @xmath163 acting on @xmath167 and @xmath164 acting on @xmath168 produce linear combinations of @xmath160 and @xmath161 , albeit different ones .",
    "( in the literature it is not uncommon to choose a different 3 basis that renders this weight diagram more symmetric . ) ]",
    "weight diagrams are also very convenient for visualizing the action of the raising and lowering operators @xmath108 .",
    "the action of @xmath108 on a given state @xmath15 produces a linear combination of all states of the form @xmath169 with arbitrary @xmath116 , where this notation implies element - wise addition and subtraction of the single - entry pattern @xmath170 having @xmath171 at position @xmath172 and zeros elsewhere , @xmath173 ( note that @xmath170 on its own is not a valid gt - pattern . ) thus the resulting patterns differ from @xmath16 only in row @xmath102 .",
    "all states @xmath174 that are generated in this fashion have the same row sums , @xmath65-weights , and p - weights ( independent of @xmath116 ) ,    [ eq : weight - shift ] @xmath175    unless states with this weight do not exist , in which case the result vanishes .    the weight - shifting action of lowering operators is illustrated in fig .",
    "[ fig : su3 ] for the weight diagram of the 3 irrep @xmath176 .",
    "since the weight diagram is two - dimensional , there are two lowering operators , @xmath163 and @xmath164 , which shift in different directions ( indicated by solid / dashed lines ) .",
    "( @xmath165 produces a shift in the opposite direction of @xmath166 . ) note that there are two different `` paths '' to reach the @xmath65-weight ( 0,0 ) from the @xmath65-weight @xmath177 , namely via either @xmath178 or @xmath179 .",
    "since @xmath163 and @xmath164 do not commute , these paths are inequivalent ; indeed , they produce two different linear combinations of the two states with @xmath65-weight @xmath162 . more generally , the fact that inner multiplicities larger than 1 arise for n representations with @xmath180 is a direct consequence of the fact that there are , in general , several different ways of reaching one state from another via a chain of raising and lowering operators , and that these ways are not equivalent , because @xmath108 and @xmath109 do not commute for @xmath181 .",
    "very conveniently , closed expressions have been found by gelfand and tsetlin @xcite for the matrix elements of all raising and lowering operators with respect to the basis of gt - patterns .",
    "explicitly , the only nonzero matrix elements of @xmath166 are given , for any @xmath182 , by @xcite : @xmath183 these matrix elements are real and nonnegative , and the right - hand side vanishes if @xmath184 is not a valid pattern . as @xmath165 is the hermitian transpose of @xmath166 , we can obtain its nonzero matrix elements by taking the complex conjugate of the preceding formula and replacing @xmath15 by @xmath185 : @xmath186 these formulae generalize eq .   to n.",
    "each irrep has a unique state @xmath187 , called its _ highest - weight state _ , that is annihilated by all @xmath104 raising operators @xmath188 since @xmath187 is a unique state , the inner multiplicity of its p - weight @xmath189 is one , and the irrep can be identified by specifying @xmath189 .",
    "our labeling scheme indeed exploits this fact : the i - weight of an irrep is equal to the p - weight of its highest - weight state @xmath187 , i.e.  @xmath190 .",
    "conveniently , the gt - pattern @xmath191 has the highest possible entries fulfilling eq .",
    ", i.e.  @xmath192 for @xmath193 ( all entries on the @xmath116-th diagonal are equal to @xmath194 ) .",
    "this concludes our exposition of those elements of n representation theory in the gt - scheme that are needed in this work . in the following sections we discuss the decomposition of direct product representations and the calculation of the associated cgcs .",
    "the specific details of the strategy described below are , to the best of our knowledge , original .",
    "the product of two irreps , say @xmath11 , is , in general , reducible to a sum of irreps ( eq .  ) .",
    "while it is well - known for 2 which irreps occur in such a decomposition ( see eq .  ) , the corresponding result for n relies on a relatively simple but hard to prove method based on the _ littlewood - richardson rule _  @xcite .",
    "this method involves writing down all possible gt - patterns for the irrep @xmath1 and using each of these to construct , starting from @xmath2 , a new irrep @xmath10 .",
    "as the outcome of this method is the same when interchanging @xmath1 and @xmath2 , it is preferable to take the irrep with the smaller dimension of the two as @xmath1 .    for given irreps @xmath113 and @xmath195 , and a particular gt - pattern @xmath126 associated with @xmath1 , let us introduce some auxiliary notation . for @xmath196 and @xmath197 , we set @xmath198 ( where @xmath199 if @xmath200 , for ease of notation ) and @xmath201 ( note that here , @xmath202 carries a prime , while @xmath203 does not ) . then , the irrep @xmath204 occurs in the decomposition of @xmath11 if and only if @xmath205 ( we emphasize that this condition must hold for _ each _ value of @xmath116 and @xmath102 . ) by checking whether holds for all gt - patterns associated with @xmath1 , all @xmath10 in the decomposition of @xmath11 can be identified .",
    "there exists a more efficient way to validate eq .   than to check each value of @xmath116 and @xmath102 independently .",
    "for a given gt - pattern @xmath126 associated with @xmath1 , proceed as follows :    1 .",
    "initialize @xmath206 by the i - weight of @xmath2 .",
    "2 .   step through the pattern @xmath16 along the diagonals from top to bottom and from left to right , i.e.  in the order @xmath207 , @xmath208 , @xmath209 , @xmath210 , @xmath211 , @xmath212 , @xmath209 , @xmath213 , @xmath209 , @xmath214 .",
    "3 .   at each position ,",
    "say @xmath215 , replace @xmath216 by @xmath217 .",
    "if @xmath218 , check whether @xmath219 .",
    "if this condition is violated , discard this gt - pattern , construct the next one , and commence again from step  1 .",
    "if we reach the end of the pattern @xmath16 , the current value of @xmath220 specifies the weight of an irrep @xmath10 that occurs in the decomposition of @xmath11 .    for @xmath221 , this procedure in general can produce several occurrences of the same irrep @xmath10 . the number of such occurrences , denoted by @xmath222 in eq .",
    ", is the outer multiplicity of @xmath10 .",
    "( for 2 , the outer multiplicity is either 0 or 1 . )",
    "let us illustrate this procudure by an example ( individual steps are shown in table  [ tab : decompose ] ) :    @xmath223    ( for the second line , we adopted ",
    "i - weights with @xmath224 . ) to check that the dimensions are correct , use eq . to verify the dimensions of the irreps in this equation are @xmath225 , respectively .",
    ".application of the littlewood - richardson rule according to the steps of section  [ sec : decompose ] , for the decomposition of @xmath226 . [",
    "cols=\"^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     we adopt throughout the convention for an i - weight @xmath113 that @xmath119 ( sec .",
    "[ sec : gelfand ] ) .    for i - weights we choose the following ordering rule : the `` smaller '' of two i - weights is taken to be the one with the smaller first element ; in case of a tie , compare the second element , and so on .",
    "formally , given two i - weights @xmath1 and @xmath2 , we assign the order @xmath227 table  [ tab : first - few - su4 ] shows the first few i - weights of 4 , arranged in increasing order .    using this ordering rule , all possible",
    "n i - weights can be arranged in a list of increasing order and uniquely labeled by a nonnegative integer , say @xmath228 , giving its position in this list , @xmath229 to determine @xmath228 for a given i - weight @xmath1 , we simply count the number of smaller weights @xmath2 : this number is given by the number ( say @xmath230 ) of all weights @xmath2 with @xmath231 , plus the number of all @xmath2 with @xmath232 but @xmath233 ( say @xmath234 ) , etc .",
    "thus , @xmath235 where @xmath236 is the number of weights @xmath2 whose first @xmath237 entries are the same as those of @xmath1 ( @xmath238 for all @xmath239 ) , while the @xmath116-th entry is arbitrary but smaller than that of @xmath1 ( @xmath240 ) , and the remaining entries arbitrary ( but subject to @xmath2 being a valid i - weight , with @xmath241 ) . the nontrivial",
    "( though constrained ) entries of @xmath2 , namely @xmath242 , can be viewed as an i - weight @xmath243 of length @xmath244 , whose entries @xmath245 ( for @xmath246 ) satisfy @xmath247 @xmath236 thus is the number of allowed weights @xmath248 that satisfy ( [ eq : rules - for - tildem ] ) .    to calculate @xmath236 , we note that it is equal to the number of ways to draw or `` strike out '' , from the set of integers @xmath249 , an ordered subset @xmath250 of @xmath251 integers , @xmath252 ( see fig .  [",
    "fig : countingpk ] ) , since there is a one - to - one correspondence between the set of all possible such strike - outs and the set of all i - weights @xmath248 satisfying ( [ eq : rules - for - tildem ] ) : for a given struck - out set @xmath253 , with @xmath254 , set @xmath255 equal to the number of non - struck - out integers smaller than @xmath256 ( i.e.  @xmath257 ) .",
    "for example , the weight @xmath248 that is largest ( w.r.t .  to the ordering rule ( [ eq : orderings ] ) ) , namely having all elements equal to @xmath258 , is obtained by choosing the struck - out integers @xmath259 to be as large as possible ( see fig .",
    "[ fig : countingpk2 ] ) .",
    "thus , we have @xmath260 and , consequently , @xmath261      in analogy to the ordering we have defined on i - weights , we introduce an ordering on the set of gelfand - tsetlin patterns of a given irrep ( i.e.  given top row of the pattern ) .",
    "let @xmath126 and @xmath262 ( where @xmath263 ) denote two patterns with @xmath264 for @xmath265 .",
    "we define a row - by - row ordering of indices ( see table  [ tab : index - order ] ) , increasing from left to right within a row , and from top row to bottom row , i.e.  @xmath266 if @xmath267 and @xmath268 , or if @xmath269 .",
    "we then define @xmath270 if and only if for the smallest index for which @xmath271 , we have @xmath272 .",
    "an example of this ordering is given in table  [ tab : gt - ordering ] .",
    "we map each gelfand - tsetlin pattern @xmath16 to a nonnegative integer @xmath273 by counting the number of smaller gelfand - tsetlin patterns , i.e. @xmath274 this number can be determined by generating the pattern ( say @xmath275 ) located directly preceding @xmath16 in the ordered list of patterns , then the pattern preceding @xmath276 , and so on , until we arrive at the beginning of this list . to construct the predecessor of the pattern @xmath16 , we start by finding the largest index @xmath277 whose entry @xmath278 can be decreased without violating the betweenness condition , rewritten here as @xmath279 with respect to smaller indices while disregarding it with respect to larger indices ( i.e.  without violating the second inequality , but disregarding the first ) . thus , @xmath280 is the index for which @xmath281 for all @xmath282 but @xmath283 .",
    "we then decrease @xmath278 by one and reset the entries of all larger indices to the maximal values that satisfy the new betweenness condition . concretely : @xmath284 the number @xmath273 is , of course , the number of times we can repeat the process of constructing a preceding pattern .",
    "this procedure maps the lowest - weight and highest - weight states of an irrep @xmath1 to the numbers 1 and dim@xmath285 , respectively .",
    "below , we provide a c++ implementation of our algorithm , consisting of four fundamental classes :              1 .",
    "create two objects ` clebsch::weight s ` and ` clebsch::weight sprime ` , representing the irreps @xmath1 and @xmath2 .",
    "2 .   create the object ` decomp ` as ` clebsch::decomposition decomp(s , sprime ) ` ; this generates the irreps @xmath10 that occur in the decomposition of @xmath286 according to the littlewood - richardson rule .",
    "( its output can be read out , if desired , as follows : read out the total number of irreps @xmath10 by calling ` decomp.size ( ) ` .",
    "read out the @xmath156-th one of these ( with @xmath287 ` decomp.size ( ) ` ) by creating an object ` clebsch::weight sdoubleprime(decomp(j ) ) ` .",
    "read out its outer multiplicity by calling ` decomp.multiplicity(sdoubleprime ) ` . )",
    "pick one of these irreps ` sdoubleprime ` and create the object ` c ` as ` clebsch::coefficients c(sdoubleprime , s , sprime ) ` ; this generates all cgcs @xmath288 needed for constructing the irrep @xmath10 , with multiplicity index @xmath74 , from @xmath1 and @xmath2 .",
    "the clebsch - gordan coefficient @xmath288 is then read out as ` c(alpha , qdoubleprime , q , qprime ) ` , where ` alpha ` indexes the outer multiplicity of @xmath10 , and ` q ` , ` qprime ` , and ` qdoubleprime ` are the pattern indices of @xmath16 , @xmath47 and @xmath48 .",
    "other common applications involve the translation between an i - weight @xmath1 and its index @xmath228 , or between a gt - pattern @xmath16 and its index @xmath273 . to obtain the i - weight index @xmath228 from the object ` clebsch::weight s ` , call ` s.index ( ) ` , and to obtain the pattern index @xmath273 from the object ` clebsch::pattern m ` , call ` m.index ( ) ` .",
    "conversely , to construct an i - weight @xmath125 from a given irrep index @xmath289 , create the object ` clebsch::weight s(n , p ) ` , and read out the elements @xmath194 as ` s(k ) ` .",
    "similarly , to construct a pattern @xmath126 in irrep @xmath1 from a given pattern index @xmath290 , create the object ` clebsch::pattern m(s , q ) ` , and read out the elements @xmath215 as ` m(k , l ) ` .",
    "finally , to find the dimension @xmath13 of the irrep @xmath1 , create the object ` clebsch::weight s ` and call ` s.dimension ( ) ` .",
    "all of these applications are elaborated in the sample routine @xmath291 at the end of the source code ( starting around line 1000 ) .",
    "they are also implemented in the interactive cgc - generator available at http://homepages.physik.uni - muenchen.de/~vondelft / papers / clebschgordan/.                            to compile , type ` g++ clebsch.cpp -llapack -lblas ` on linux , or ` g++ clebsch.cpp -framework veclib ` on mac  os  x. on other operating systems , make sure that lapack is included in the linking process . to achieve that , you may have to modify the declaration of the funtions ` dgesvd ` and ` dgels ` .",
    "i.  m.  gelfand and m.  l.  tsetlin , _ matrix elements for the unitary group _ , dokl .",
    "nauk  sssr  * 71 * , 825 and 1017 ( 1950 ) . reprinted in i.  m.  gelfand , r.  .a .",
    "minlos , and z.  ya .",
    "shapiro , _ representations of the rotation and lorentz group _ ( pergamon , new york , 1963 ) .    app .",
    "d contains the source code of a computer implementation of our algorithm , made available as supplementary material at http://homepages.physik.uni-muenchen.de/~vondelft/papers/clebschgordan/clebschgordan.cpp ."
  ],
  "abstract_text": [
    "<S> we present an algorithm for the explicit numerical calculation of n and n clebsch - gordan coefficients , based on the _ gelfand - tsetlin pattern _ calculus . </S>",
    "<S> our algorithm is well suited for numerical implementation ; we include a computer code in an appendix . </S>",
    "<S> our exposition presumes only familiarity with the representation theory of 2 . </S>"
  ]
}
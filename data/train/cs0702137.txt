{
  "article_text": [
    "recall that a tree automaton @xmath0 is a tuple @xmath1 where : @xmath2 is set of states , @xmath3 - set of final states , @xmath4 - set of transition rules and @xmath5 is set of operation symbols .",
    "+ tree automata work ( run ) over trees ( terms ) , composed with operation symbols from @xmath5 and variables from @xmath6 an automaton assigns to the vertices of tree some states according to the transition rules from @xmath7 a tree is recognized by an automaton if it assigns to the root of the tree some final state from @xmath8 in section 2 we give the basic definitions and facts from universal algebra ( see @xcite ) and trees ( see @xcite ) . in section 3 the concept of essential inputs and essential subtrees for a term and an automaton",
    "is introduced .",
    "an subtree @xmath9 of @xmath10 is essential for the tree @xmath10 and an automaton @xmath0 iff there are two runs of @xmath0 over @xmath10 whose initial states are different on the inputs belonging to @xmath9 only , and the resulting states of these runs are different .",
    "a generalization of essential subtrees is the concept of separable sets of subtrees .",
    "let @xmath11 be any finite set , the elements of which are called @xmath12 let @xmath13 be a mapping into the non negative integers ; for @xmath14 the number @xmath15 will denote the _ arity _ of the operation symbol @xmath16 the pair @xmath17 is called _ type _ or _",
    "signature_. if it is obvious what the set @xmath11 is , we will write `` @xmath18 '' . the set of symbols of arity @xmath19 is denoted by @xmath20 elements of arity @xmath21 respectively are called _",
    "constants(nullary ) , unary, ... ,@xmath19-ary _ symbols .",
    "we assume that @xmath22    [ d2 ] let @xmath23 be a set of variables with @xmath24 the set @xmath25 of _ @xmath26ary terms  of  type _",
    "@xmath27 with  variables  from  @xmath28 is defined as the smallest set for which : + @xmath29  @xmath30 and + @xmath31  @xmath32 and + @xmath33  if @xmath34 and @xmath35 then @xmath36    by @xmath37 we denote the following set @xmath38 where @xmath39 + let @xmath10 be a term . by @xmath40 the set of all variables from @xmath41 which occur in @xmath10 is denoted .",
    "the elements of @xmath40 are called _ input variables ( inputs ) _ for @xmath10 .",
    "+ if @xmath42 and @xmath43 then the term denoted by @xmath44 is obtained by substituting in @xmath45 simultaneously for every @xmath46 + if @xmath47 , one may then write @xmath48 in the more explicit form @xmath49 + any subset @xmath50 of @xmath51 is called _ term - language _ or _ tree - language . _",
    "+ if @xmath52 then @xmath37 consists of so called _ ground terms _ , which can be viewed as usual terms after replacing in them the all variables with some nullary operation symbols .",
    "+ let @xmath10 be a term of type @xmath53 the @xmath54 of @xmath10 is defined inductively : if @xmath55 then @xmath56 and if @xmath57 then + @xmath58 + let @xmath59 be the set of natural numbers and @xmath60 be the set of finite strings over @xmath61 the set @xmath60 is naturally ordered by @xmath62  is a prefix of @xmath63 the empty string in @xmath60 we will denote by @xmath64 + a term @xmath65 can also be defined as a partial function @xmath66 with domain @xmath67 satisfying the following properties : + @xmath29@xmath68 and @xmath69 is prefix - closed ; + @xmath31for each @xmath70 , if @xmath71 @xmath72 then @xmath73 + @xmath33for each @xmath70 , if @xmath74 then @xmath75 + the elements of @xmath69 are called _ positions . _",
    "+ a _ subterm ( subtree ) _",
    "@xmath76 of a term @xmath77 at position @xmath78 is the tree with @xmath79 + the set of all subtrees of @xmath10 is denoted by @xmath80 + we denote by @xmath81 the subterm ordering , i.e. we write @xmath82 if there is a position @xmath83 such that @xmath84 and one says that @xmath10 is a subterm of @xmath85 we write @xmath86 if @xmath82 and @xmath87 + clearly , @xmath88 if and only if @xmath89 + a chain of subterms @xmath90 is called _ strong _ if for all @xmath91 there does not exist any term @xmath92 such that @xmath93    [ le1 ] a chain @xmath94 is strong if and only if @xmath95 and there are integers @xmath96 such that @xmath97 for each @xmath98    [ def11 ] let @xmath99 the positions @xmath100 and @xmath101 are called _ independent _ if @xmath102    if @xmath103 are the subtrees corresponding to the positions @xmath104 i.e. @xmath105 and @xmath106 which are independent then the subtrees @xmath107 and @xmath108 are called _ independent _ , too .",
    "+ the set @xmath109 consists of all positions @xmath110 which are independent on @xmath111 .",
    "analogously , the set @xmath112 consists of all subtrees @xmath113 which are independent on @xmath107 .",
    "a set of strings over the set of natural numbers @xmath114 is called : + @xmath29 iff @xmath115 and @xmath116 imply @xmath117 + @xmath31 iff @xmath118 and @xmath119 imply @xmath120    [ l2 ] for each @xmath121 the set @xmath122 is prefix determined w.r.t .",
    "@xmath123    let @xmath70 and @xmath124 hence @xmath125 clearly if @xmath126 and @xmath127 then @xmath128 from @xmath129 it follows that @xmath130 i.e. @xmath131    [ examp1 ] let us illustrate all these notion by the following tree : + @xmath132 drown on figure [ f1 ] .",
    "the set of positions of this tree is @xmath133 @xmath134 + 2 .",
    "the set of independent positions on the position @xmath135 is : @xmath136 + 3 .",
    "the set of independent subtrees on the tree @xmath137 is : @xmath138     +",
    "[ d5 ] a _ finite tree automaton _ is a tuple @xmath139 where :",
    "+ - @xmath2 is a finite set of states ; + - @xmath140 is a set of final states ; + - @xmath4 is a set of transition rules i.e. if @xmath141 where @xmath142 are mappings @xmath143 and @xmath144 for @xmath145    we will suppose that @xmath0 is complete i.e. the @xmath4 s are total functions on their domains .",
    "+ let @xmath146 be a set of input variables .",
    "@xmath147 denotes the set of all functions ( evaluations ) @xmath148 + let @xmath149 @xmath150 and @xmath151 by @xmath152 the term @xmath153 will be denoted .",
    "+ so , each assignment @xmath150 can be extended to a mapping defined on the set @xmath51 of all terms .",
    "+ let @xmath154 the automaton @xmath155 runs over @xmath10 and @xmath156 it starts at leaves of @xmath10 and moves downwards , associating along a run a resulting state with each subterm inductively : + if @xmath157 then the automaton associates with @xmath10 the state @xmath158 with @xmath159 + if @xmath160 then the automaton associates with @xmath10 the state @xmath161 + if @xmath162 and the states @xmath163 are associated with the subterms(subtrees ) @xmath164 then with @xmath10 the automaton @xmath0 associates the state @xmath165 with @xmath166 + the automaton runs over ground terms and each assignment from @xmath167 transforms any tree as a ground term .",
    "+ a term @xmath168 is accepted by a tree automaton @xmath139 if there exists an assignment @xmath169 such that when running over @xmath10 and @xmath169 the automaton @xmath0 associates with @xmath10 a final state @xmath170 + when @xmath0 associates the state @xmath171 with a subterm @xmath172 we will write @xmath173 + if @xmath174 then @xmath175 is resulting tree obtained from @xmath10 under applying all possible transition rules from @xmath176 over the tree @xmath177 + let @xmath65 be a term and @xmath0 be a tree automaton which accepts @xmath178 in this case one says that @xmath0 _ recognizes _ @xmath10 or @xmath10 is _ recognizable _ by @xmath179 the set of all by @xmath0 recognizable terms is called _ tree - language _ recognized by @xmath179    [ d6 ] let @xmath65 and let @xmath180 be an automaton .",
    "a subtree @xmath181 is called _ essential _ for the pair @xmath182 if there exist two assignments @xmath183 such that @xmath184 with @xmath185 i.e. @xmath186 stops in different states when running over @xmath10 with @xmath187 and with @xmath188    the set of all essential subtrees for the pair @xmath182 is denoted by @xmath189 + the subtrees from @xmath190 are called _ fictive _ for @xmath191 + a position @xmath70 is called _ essential _ for @xmath192 if @xmath193 @xmath194 is the set of all essential positions of @xmath178 + analogously , the positions from @xmath195 are called _ fictive _ for @xmath191 + the set of essential input variables is denoted by @xmath196 .",
    "it is studied in @xcite .",
    "+ the essential variables for discrete functions are considered in @xcite .",
    "essential input variables and separable sets for terms in the concept of universal algebra are considered in @xcite .",
    "[ examp2 ] let us consider the automaton defined as follows : + @xmath197 where @xmath198 with @xmath199 @xmath200 and @xmath4 is defined by the equations @xmath201",
    "@xmath202  @xmath203 if @xmath204 and @xmath205 otherwise ; @xmath206 if @xmath207 and @xmath208 otherwise . + let us check whether the subtree @xmath209 is essential for @xmath210 its set of independent subtrees is prefix determined by the positions @xmath211 and @xmath212 the set of inputs of these subtrees is @xmath213 all possible assignments for our checking are sixteen ( ? ) .",
    "we will calculate the automaton s work only for two of these assignments @xmath214 and @xmath215 we obtain the following equations : @xmath216 @xmath217 and @xmath218 @xmath219 analogously we have @xmath220 @xmath221 @xmath222 and @xmath223 @xmath224 @xmath225 + in the same way we obtain + @xmath226 @xmath227 and + @xmath228 @xmath229 + in the same way it can be checked that for all pairs of assignments with equal values on @xmath230 the automaton will stop in the same states . hence @xmath231 is not essential subtree for @xmath210 +",
    "now , let us check whether @xmath232 is essential .",
    "consider the following assignments : @xmath233 and @xmath234 it is easy to see that @xmath235 and @xmath236 + so , we obtain @xmath237 and @xmath238 thus @xmath232 is essential for @xmath210 + finally it can be checked that for each possible assignment @xmath239 it holds @xmath240 + this equation implies that the resulting states when @xmath0 running over @xmath10 are fully determined by the corresponding states when running over the tree @xmath241 with the graph given on figure [ f2 ] .",
    "we have to prove that if @xmath244 then each subtree @xmath245 with @xmath246 is essential for @xmath182 .",
    "let @xmath247 be two assignments , such that @xmath248 with @xmath249 and @xmath250 let @xmath251 be a prefix of @xmath78 i.e. @xmath252 + at first , suppose @xmath253 then @xmath254 because of @xmath255 + secondly , let us suppose @xmath256 from @xmath257 it follows that @xmath258 consider the assignments @xmath259 and @xmath260 defined as follows @xmath261 for all @xmath262 @xmath263 and @xmath264 for all @xmath265 + clearly @xmath266 and @xmath267 from ( [ eq111 ] ) we have @xmath268 hence @xmath269 this contradicts to @xmath270          suppose that @xmath279 and @xmath280 if we suppose that @xmath281 then we obtain @xmath282 which is a contradiction .",
    "+ two sets of subtrees @xmath283 and @xmath284 are called _ independent _ ( @xmath285 ) if for each @xmath286 and for each @xmath287 the inclusions @xmath288 and @xmath289 are held .",
    "[ d13 ] let @xmath65 and @xmath0 be an automaton .",
    "a set @xmath290 is called _ separable _ for @xmath10 and @xmath0 w.r.t . a set @xmath291  @xmath285 if there is an assignment @xmath169 on @xmath292 such that @xmath293    the set of all separable sets of subtrees for @xmath10 and @xmath0 w.r.t .",
    "@xmath284 will be denoted by @xmath294 when @xmath283 is separable for @xmath10 and @xmath0 w.r.t .",
    "@xmath295 where @xmath296 then the set @xmath283 is called _ separable _ for @xmath10 and @xmath0 and the set of such @xmath283 will be denoted by @xmath297 + when a set of essential subtrees is not separable , it will be called _",
    "inseparable_. + it is not difficult to see that if  @xmath298 then @xmath299      suppose there is a subtree @xmath92 of @xmath10 with @xmath305 then there are two assignments @xmath275 such that @xmath306 with @xmath307 + now , @xmath303 implies that @xmath308 on the other side by ( [ e1 ] ) and ( [ e3 ] ) we obtain @xmath309 which contradicts to ( [ e2 ] ) .",
    "let @xmath314 by @xmath315 it follows that there are two assignments @xmath275 such that @xmath316 with @xmath317 + at first , if @xmath318 then the chain @xmath319 is strong and the theorem is proved in this case .",
    "+ secondly , let us assume @xmath320 .",
    "suppose that @xmath321 for all @xmath322 this implies that @xmath323 let us calculate again @xmath324 and @xmath325 so , we have + @xmath326 this is a contradiction .",
    "hence there exists a subterm @xmath327 of @xmath10 such that @xmath328 let us set @xmath329 clearly @xmath330 is a strong chain .",
    "we can repeat this procedure for @xmath331 instead of @xmath10 and we shell get a subterm @xmath332 of @xmath331 such that @xmath333 is a strong chain and @xmath334 this process can be continued until we obtain a term @xmath107 with @xmath335 and @xmath336 obviously if we set @xmath337 then @xmath338 is a strong chain with @xmath339    10 s. burris , h. p. sankappanavar , _ a course in universal algebra _ , the millennium edition , 2000 h. comon , m. dauchet , r. gilleron , f. jacquemard , d. lugiez , s. tison , m. tommasi,_tree automata , techniques and applications , _ 1999 , http://www.grappa.univ-lille3.fr/tata/ k. chimev , _ separable sets of arguments of functions _ , mta sztaki tanulmanyok , 180/1986 , 173 pp .",
    "k.denecke , d.lau , r.pschel , d.schweigert _ hyperidentities , hyperequational classes and clone congruences , _ general algebra 7 , verlag hlder - pichler - tempsky , wien 1991 , verlag b.g .",
    "teubner stuttgart , pp.97 - 118 f. gcseg , m. steinby , _ tree automata _ , akadmiai kiad , budapest 1984    i.g.rosenberg,_ber die funktionale vollstndigkeit in den mehrwertigen logiken .",
    "ces.akad . ved , 80(1970 ) , 3 - 93 a. salomaa,_on essential variables of functions , especially in the algebra of logic _ ,",
    ", ser.a,333(1963 ) , 1 - 11 sl.shtrakov ,  k.denecke , _ essential variables and separable sets in universal algebra _ , taylor & francis , multiple - valued logic , an international journal , vol . 8 , no.2,2002 , 165 - 182 . sl .",
    "shtrakov , _ tree automata and essential input variables _ , contributions to general algebra 13 , verlag johannes heyn , klagenfurt , 2001,pp.309 - 320 ."
  ],
  "abstract_text": [
    "<S> terms considered as trees are very useful tools for presentation and manipulation of different data structures in computer science and information technology . any work of the computer over the trees , for instance as graphical user interface ( menus of the different windows ) , xml - documents , definitions and description of hierarchial objects in c++ or java programming etc . can be considered as runs of an automaton ( the given computer ) over these trees . </S>",
    "<S> often the automaton loses much time to work over a tree spending it in some useless checking of nonessential information . </S>",
    "<S> usually it means that some inputs or some subtrees of the given tree are fictive for this automaton . </S>",
    "<S> the studying of fictive and essential subtrees of a tree with respect to an automaton is main aim of the article . </S>",
    "<S> we introduce essential subtrees for terms ( trees ) and tree automata . </S>",
    "<S> there are some results concerning independent sets of subtrees and separable sets for a tree and an automaton .    _ </S>",
    "<S> ams , subject classification _ : 03d05 , 68q70 , 03d15 , 06b25 + _ key words and phrases _ : tree , tree automata , essential input , essential subtree . </S>"
  ]
}
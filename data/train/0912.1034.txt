{
  "article_text": [
    "the _ state complexity of a regular language _",
    "@xmath0 is the number of states in the minimal deterministic finite automaton ( dfa ) recognizing @xmath0 .",
    "the _ state complexity of an operation _",
    "@xmath2 ( or @xmath3 ) in a subclass @xmath4 of regular languages is the maximal state complexity of the language @xmath2 ( or @xmath3 ) , when @xmath5 and @xmath0 range over all languages in @xmath4 . for a detailed discussion of general issues of state complexity",
    "see  @xcite and the reference lists in those papers . in 1994",
    "the complexity of concatenation , star , left and right quotients , reversal , intersection and union in regular languages were examined in detail in  @xcite .",
    "the complexity of operations was also considered in several subclasses of regular languages : finite  @xcite , unary  @xcite , prefix - free  @xcite and suffix - free  @xcite , and ideal languages  @xcite .",
    "these studies show that the complexity can be significantly lower in a subclass than in the general case . here",
    "we examine state complexity in the classes of prefix- , suffix- , factor- , and subword - closed regular languages .",
    "there are several reasons for considering closed languages .",
    "they appear often in theoretical computer science .",
    "subword - closed languages were studied in 1969  @xcite , and also in 1973  @xcite .",
    "suffix - closed languages were considered in 1974  @xcite , and later in  @xcite .",
    "factor - closed languages , also called _ factorial _ , have received some attention , for example , in  @xcite .",
    "subword - closed languages were studied in  @xcite .",
    "prefix - closed languages play a role in predictable semiautomata  @xcite .",
    "all four classes of closed languages were examined in  @xcite , and decision problems for closed languages were studied in  @xcite .",
    "a language is a _ left ideal _",
    "( respectively , _",
    "right , two - sided _ , _ all - sided ideal _ ) if @xmath6 , ( respectively , @xmath7 , @xmath8 and @xmath9 ) , where @xmath10 is the shuffle of @xmath11 with @xmath0 ) . closed languages are related to ideal languages as follows  @xcite : for every non - empty @xmath0 , @xmath0 is a right ( left , two - sided , all - sided ) ideal , if and only if @xmath12 is a prefix(suffix , factor , subword)-closed language .",
    "closed languages are defined by binary relations `` is a prefix of '' ( respectively ,  is a suffix of \" , `` is a factor of '' , `` is a subword of '' )  @xcite , and are special cases of convex languages  @xcite .",
    "the fact that the four classes of closed languages are related to each other permits us to obtain many complexity results using similar methods .",
    "if @xmath13 is a non - empty finite _ alphabet _ , then @xmath14 is the free monoid generated by  @xmath13 .",
    "a _ word _ is any element of @xmath14 , and @xmath15 is the",
    "_ empty word_. the length of a word @xmath16 is @xmath17 .",
    "a _ language _ over @xmath13 is any subset of @xmath14 .",
    "the cardinality of a set is denoted by @xmath18 .",
    "if @xmath19 for some @xmath20 , then @xmath21 is a _ prefix _ of @xmath1 , @xmath22 is a _ suffix _ of @xmath1 , and @xmath23 is a _ factor _ of @xmath1 . if @xmath24 , where @xmath25 , and @xmath26 , then @xmath27 is a _ subword _ of @xmath1 .",
    "a  language @xmath0 is _ prefix - closed _ if @xmath28 implies that every prefix of @xmath1 is also in  @xmath0 . in the same way",
    ", we define _",
    "suffix- _ , _ factor- _ , and _ subword - closed _ languages .",
    "a language is _ closed _ if it is prefix- , suffix- , factor- , or subword - closed .",
    "the following set operations are defined on languages : _ complement _ ( @xmath29 ) , _ union _ ( @xmath30 ) , _ intersection _ ( @xmath31 ) , _ difference _ ( @xmath32 ) , and _ symmetric difference _ ( @xmath33 ) .",
    "a general _ boolean operation _ with two arguments is denoted by @xmath34 .",
    "we also define the _ product _ , usually called _ concatenation _ or _ catenation _ , ( @xmath35 ) , ( kleene ) _ star _ ( @xmath36 ) , and _ positive closure _ ( @xmath37 ) .",
    "the _ reverse _",
    "@xmath38 of a word @xmath39 is defined as follows : @xmath40 , and @xmath41 .",
    "the _ reverse _ of a language @xmath0 is denoted by @xmath42 and is defined as @xmath43 .",
    "_ regular languages _ over @xmath13 are languages that can be obtained from the _ set of basic languages _",
    "@xmath44 , using a finite number of operations of union , product and star .",
    "such languages are usually denoted by regular expressions .",
    "if @xmath45 is a regular expression , then @xmath46 is the language denoted by that expression .",
    "for example , @xmath47 denotes @xmath48 .",
    "we usually do not distinguish notationally between regular languages and regular expressions ; the meaning is clear from the context .    a _ deterministic finite automaton _ ( dfa )",
    "is a tuple @xmath49 , where @xmath50 is a set of _ states _ , @xmath13 is the _ alphabet _ , @xmath51 is the _ transition function _",
    ", @xmath52 is the _ initial state _ , and @xmath53 is the set of _ final _ or _ accepting states_. a _ nondeterministic finite automaton _ ( nfa ) is a tuple @xmath54 , where @xmath50 , @xmath13 and @xmath53 are as in a dfa , @xmath55 is the _ transition function _ and @xmath56 is the _ set of initial states_. if @xmath57 also allows @xmath15 , , @xmath58 , we call @xmath59 an _ @xmath15-nfa_.    our approach to quotient complexity follows closely that of  @xcite . since state complexity is a property of a language ,",
    "it is more appropriately defined in language - theoretic terms .",
    "the _ left quotient _ , or simply _ quotient , _ of a language @xmath0 by a word @xmath1 is the language @xmath60 .",
    "the _ quotient complexity _ of @xmath0 is the number of distinct quotients of @xmath0 , and is denoted by @xmath61 .",
    "quotients of regular languages  @xcite can be computed as follows : first , the _ @xmath15-function _",
    "@xmath62 of a regular language @xmath0 is @xmath63 if @xmath64 and @xmath65 if @xmath66 .",
    "the quotient by a letter @xmath67 is computed by structural induction : @xmath68 if @xmath69 or @xmath70 and @xmath71 , and @xmath72 if @xmath73 ; @xmath74 .",
    "the quotient by a word @xmath39 is computed by induction on the length of @xmath1 : @xmath75 if @xmath76 ; @xmath77 .",
    "a quotient @xmath78 is _ accepting _ if @xmath79 ; otherwise it is _",
    "rejecting_.    the _ quotient automaton _ of a regular language @xmath0 is @xmath80 , where @xmath81 , @xmath82 , @xmath83 , and @xmath84 .",
    "this is the minimal dfa accepting @xmath0 ; hence quotient complexity of @xmath0 is equal to the state complexity of @xmath0 .",
    "however , there are some advantages to using quotients  @xcite .",
    "if a language @xmath0 has the empty quotient , we say that @xmath0 _ has _",
    "@xmath85 .    to simplify the notation",
    ", we write @xmath86 as @xmath87 .",
    "whenever convenient , the following formulas are used to establish upper bounds on quotient complexity :    [ prop ] if @xmath5 and @xmath0 are regular languages , then @xmath88 @xmath89 @xmath90",
    "we now turn to the closure of languages under binary relations .",
    "all the relations that we study in this paper are partial orders .",
    "let @xmath91 be a partial order on @xmath14 ; the _ @xmath91-closure _ of a language @xmath0 is the language @xmath92 .",
    "we use @xmath93 for the relations `` is a prefix of '' , `` is a suffix of '' , `` is a factor of '' , `` is a subword of '' , respectively .",
    "suppose @xmath0 is an arbitrary regular language of complexity @xmath94 . if @xmath95 then @xmath96 or @xmath97 , and each closure is @xmath0 .",
    "we show that the worst - case complexity for prefix - closure is @xmath94 , for suffix - closure it is @xmath98 , and for factor - closure it is @xmath99 .",
    "these bounds are tight for binary languages .",
    "subword - closure of languages was previously studied by okhotin  @xcite under the name `` scattered subwords '' , but tight upper bounds were not established .",
    "our next theorem solves this problem .",
    "[ thm : closure ] let @xmath0 be a regular language with @xmath100 .",
    "let @xmath101 be the prefix - closure , suffix - closure , factor - closure , and subword - closure of @xmath0 , respectively",
    ". then + 1 .",
    "@xmath103 if @xmath0 does not have @xmath85 , and @xmath104 otherwise .",
    "+ the last bound is tight if @xmath107 ; the other bounds are tight if @xmath108 .    \\1 . given a language @xmath0 recognized by dfa @xmath109 , to get the dfa for its prefix - closure @xmath110",
    ", we need only make each non - empty state accepting .",
    "hence @xmath111 . for tightness , consider the language @xmath112 .",
    "we have @xmath113 and @xmath114 .",
    "having a quotient automaton of a language @xmath0 , we can construct an nfa for its suffix - closure by making each non - empty state initial .",
    "the equivalent dfa has at most @xmath98 states if @xmath0 does not have the empty quotient ( the empty set of states can not be reached ) , and at most @xmath99 states otherwise . to prove tightness ,",
    "consider the language @xmath0 defined by the quotient automaton shown in fig .",
    "[ fig : suffix1 ] . construct an nfa for the suffix - closure of @xmath0 , by making all states initial .",
    "let us show that the corresponding subset automaton has @xmath98 reachable and pairwise inequivalent states .     which does not have @xmath85 . ]",
    "we prove reachability by induction on the size of subsets .",
    "the basis , @xmath115 , holds true since @xmath116 is the initial state .",
    "assume that each set of size @xmath117 is reachable , and let @xmath118 be a set of size @xmath119 .",
    "if @xmath118 contains state @xmath120 but does not contain state @xmath121 , then it can be reached from the set @xmath122 of size @xmath117 by @xmath123 .",
    "if @xmath118 contains both @xmath120 and @xmath121 , then there is a state @xmath124 such that @xmath125 and @xmath126 .",
    "then @xmath118 can be reached from @xmath127 by @xmath128 .",
    "the latter set contains @xmath120 and does not contain @xmath121 , and so is reachable .",
    "if a non - empty @xmath118 does not contain @xmath120 , then it can be reached from @xmath129 , which contains @xmath120 , by @xmath130 .    to prove inequivalence notice that the word @xmath131 is accepted by the nfa only from state @xmath124 for all @xmath132 .",
    "it turns out that all the states in the subset automaton are pairwise inequivalent .",
    "now consider the case where a language has @xmath85 .",
    "let @xmath0 be the language defined by the quotient automaton shown in fig .",
    "[ fig : suffix2 ] .",
    "we first remove state @xmath133 and all transitions going to this state , and then construct an nfa as above .",
    "the proof of reachability of all non - empty subsets of @xmath134 is the same as in the previous case .",
    "the empty set can be reached from @xmath135 by @xmath123 . for inequivalence",
    ", @xmath136 is accepted only from @xmath120 , and @xmath137 only from @xmath124 for @xmath138 .     which has @xmath85 .",
    "suppose we have the quotient automaton of a language @xmath0 .",
    "to find an nfa for the factor closure @xmath139 , we make all non - empty states of the quotient automaton both accepting and initial and delete the empty state .",
    "hence the bound is @xmath99 .",
    "the language @xmath0 defined by quotient automaton shown in fig .  [ fig : suffix2 ] meets the bound .",
    "\\4 . to get an @xmath15-nfa for the subword - closure @xmath140 from the quotient automaton of @xmath0",
    ", we remove the empty state ( if there is no empty state , then @xmath141 ) , and add an @xmath15-transition from state @xmath142 to state @xmath143 whenever there is a transition from @xmath142 to @xmath143 in the quotient automaton . since the initial state can reach every non - empty state through @xmath15-transitions , no other subset containing the initial state can be reached .",
    "hence there are at most @xmath144 reachable subsets .    to prove tightness , if @xmath145 , let @xmath146 ; then @xmath147 meets the bound .",
    "if @xmath148 , let @xmath149 , and @xmath150 thus the language @xmath0 consists of all words over @xmath13 , in which the first letter occurs exactly once .",
    "let @xmath5 be the subword - closure of @xmath0 . then @xmath151 at least one letter is missing in @xmath152 .",
    "for each boolean vector @xmath153 , define the word @xmath154 , in which @xmath155 if @xmath156 and @xmath157 if @xmath158 .",
    "now consider the word @xmath15 , and each word @xmath159 .",
    "let us show that all quotients of @xmath5 by these @xmath144 words are distinct . for each binary vector @xmath123 , we have @xmath160 .",
    "let @xmath123 and @xmath161 be two different vectors with @xmath156 and @xmath162 .",
    "then we have @xmath163 .",
    "thus all quotients are distinct , and so @xmath164 .",
    "now we study the quotient complexity of operations on closed languages . for regular languages ,",
    "the following bounds are known  @xcite : @xmath165 for boolean operations , @xmath166 for product , @xmath167 for star , and @xmath168 for reversal .",
    "the bounds for closed languages are smaller in most cases .",
    "we also show that the bounds are tight , usually for a fixed alphabet .",
    "the bounds for boolean operations and reversal follow from the results on ideal languages  @xcite .",
    "[ thm : boolean ] if @xmath5 and @xmath0 are prefix - closed ( or factor - closed or subword - closed ) with @xmath169 and @xmath170 , then + 1 .",
    "@xmath171 , + 2 .",
    "@xmath172 , + 3 .",
    "@xmath173 , + for suffix - closed languages , @xmath174 .",
    "all bounds are tight if @xmath175 .",
    "recall that the complement of a prefix - closed ( respectively , suffix- , or subword - closed ) language is a right ( respectively , left , two - sided , all - sided ) ideal .",
    "we get all the results using de morgan s laws and the results from  @xcite .",
    "[ rem : prod ] if @xmath0 is prefix - closed , then either @xmath97 or @xmath0 has @xmath85 as a quotient .",
    "moreover , each quotient of @xmath0 is either accepting or @xmath85 .",
    "[ rem : suffix ] for a suffix - closed language @xmath0 , if @xmath22 is a suffix of @xmath1 then @xmath176 .",
    "in particular , @xmath177 for each word @xmath1 in @xmath14 .",
    "[ thm : product ] let @xmath5 and @xmath0 be closed languages with @xmath169 and @xmath170 , and let @xmath117 be the number of accepting quotients of @xmath5 . if @xmath178 or @xmath95 , then @xmath179",
    ". otherwise , + 1 .",
    "if @xmath5 and @xmath0 are prefix - closed , then @xmath180 .",
    "if @xmath5 and @xmath0 are suffix - closed , then @xmath181 .",
    "if @xmath5 and @xmath0 are both factor- or both subword - closed , then @xmath182 .",
    "+ all bounds are tight if @xmath183 .",
    "if @xmath178 , then @xmath184 or @xmath185 , and so @xmath186 or , since @xmath66 , @xmath187 .",
    "thus @xmath179 .",
    "the case of @xmath95 is similar .",
    "now let @xmath188 .",
    "if @xmath5 and @xmath0 are prefix - closed , then @xmath189 , and , by remark  [ rem : prod ] , both languages have @xmath85 as a quotient . the quotient @xmath190 is given by equation  ( [ eq : prod ] ) . if @xmath191 is accepting , then @xmath0 is always in the union , and there are @xmath192 non - empty subsets of non - empty quotients of @xmath0 that can be added .",
    "since there are @xmath193 accepting quotients of @xmath5 , there are @xmath194 such quotients of @xmath195 .",
    "if @xmath191 is rejecting , then @xmath99 subsets of non - empty quotients of @xmath0 can be added .",
    "altogether , @xmath196 .    for tightness , consider prefix - closed languages @xmath5 and @xmath0 defined by the quotient automata of fig .",
    "[ fig : product_prefix ] ( if @xmath145 , then @xmath197 ) .     and @xmath0 .",
    "]    construct an @xmath15-nfa for the language @xmath195 from these quotient automata by adding an @xmath15-transition from states @xmath198 to state @xmath120 .",
    "the initial state of the nfa is @xmath52 , and the accepting states are @xmath199 .",
    "let us show that there are @xmath200 reachable and pairwise inequivalent states in the corresponding subset automaton .",
    "state @xmath201 is the initial state , and each state @xmath202 , where @xmath203 , can be reached from state @xmath204 by word @xmath205 . for each subset @xmath118 of @xmath134 containing state @xmath120 , each state @xmath206 with @xmath207 can be reached from state @xmath208 by @xmath209 . if a non - empty set @xmath118 does not contain state @xmath120 , then state @xmath210 can be reached from state @xmath211 , which contains state @xmath120 , by @xmath130 .",
    "state @xmath212 can be reached from state @xmath213 by @xmath123 .    to prove inequivalence , notice that the word @xmath214 is accepted by the quotient automaton for @xmath0 only from state @xmath120 , and the word @xmath215 only from state @xmath124 ( @xmath216 ) .",
    "it turns out that two different states @xmath210 and @xmath217 are inequivalent .",
    "it follows that states @xmath218 and @xmath219 are inequivalent as well .",
    "states @xmath218 and @xmath220 with @xmath221 can be distinguished by @xmath222 .",
    "hence the subset automaton has @xmath200 reachable and pairwise inequivalent states , and so @xmath223 .",
    "\\2 . if @xmath5 and @xmath0 are suffix - closed , then , by remark  [ rem : suffix ] , for each word @xmath1 we have @xmath224 for some suffix @xmath23 of @xmath1 .",
    "if @xmath191 is a rejecting quotient , there are at most @xmath225 such quotients . if @xmath191 is accepting , then @xmath226 , and since @xmath227 , we have @xmath228",
    ". there are at most @xmath117 such quotients .",
    "therefore there are at most @xmath229 quotients in total .    to prove tightness , let @xmath5 and @xmath0 be ternary suffix - closed languages defined by quotient automata shown in fig .",
    "[ fig : product_suffix ] .     and @xmath0 .",
    "]    consider the words @xmath230 , and @xmath231 with @xmath207 and @xmath232 .",
    "let us show that all quotients of @xmath195 by these words are distinct .",
    "let @xmath233 , and let @xmath234 and @xmath235 . if @xmath236 , take @xmath237 .",
    "then @xmath238 is in @xmath195 , while @xmath239 is not , and so @xmath240 . if @xmath241 and @xmath242 , take @xmath243 .",
    "we again have @xmath240 .",
    "thus the language @xmath195 has at least @xmath244 distinct quotients , and so @xmath245 .",
    "notice that , if the quotients @xmath246 with @xmath247 are accepting , then the resulting product has quotient complexity @xmath229 .",
    "\\3 . it suffices to derive the bound for factor - closed languages , since every subword - closed language is also factor - closed . since factor - closed languages are suffix - closed , @xmath181 .",
    "the language @xmath5 has at most one rejecting quotient , because it is prefix - closed .",
    "thus , @xmath248 and @xmath182 .    for tightness ,",
    "consider binary subword - closed languages @xmath249 and @xmath250 is not a subword of @xmath251 with @xmath169 and @xmath170 .",
    "consider the word @xmath252 .",
    "this word is not in the product @xmath195 . however , removing any non - empty subword from @xmath1 results in a word in @xmath195 .",
    "therefore , @xmath253 .",
    "[ thm : star ] let @xmath0 be a closed language with @xmath100 .",
    "+ 1 . if @xmath0 is prefix - closed , then @xmath254 .",
    "if @xmath0 is suffix - closed , then @xmath255 if @xmath256 and @xmath257 if @xmath258 .",
    "+ 3 . if @xmath0 is factor- or subword - closed , then @xmath259 .",
    "+ if @xmath260 , then @xmath259 .",
    "all bounds are tight if @xmath261 .    \\1 . for every non - empty word @xmath1 , the quotient @xmath262 is given by equation  ( [ eq : star ] ) .",
    "if @xmath0 is prefix - closed , then so is @xmath263 and @xmath262 .",
    "thus , if @xmath262 is non - empty , then it must contain the empty word . hence @xmath264 .",
    "since the empty quotient of @xmath0 and @xmath0 itself are always contained in every non - empty quotient of @xmath263 , there are at most @xmath192 non - empty quotients of @xmath263 .",
    "since there is at most one empty quotient , there are at most @xmath144 quotients in total .",
    "the quotient @xmath265 has already been counted , since @xmath0 is closed and @xmath66 implies @xmath266 , which has the form of equation  ( [ eq : star ] ) .",
    "if @xmath95 and @xmath145 , the bound 2 is met by @xmath96 and @xmath267 , respectively .",
    "now let @xmath268 and let @xmath0 be the prefix - closed language defined by the quotient automaton shown in fig .",
    "[ fig : star_prefix ] ; transitions not depicted in the figure go to state @xmath133 .    .",
    "]    ; [ fig : star_prefix ]    construct an @xmath15-nfa for @xmath263 by removing state @xmath133 and adding an @xmath15-transition from all the remaining states to the initial state . let us show that @xmath144 states are reachable and pairwise inequivalent in the corresponding subset automaton .",
    "we first prove that each subset of @xmath134 containing state 0 is reachable .",
    "the proof is by induction on the size of the subsets .",
    "the basis , @xmath269 , holds true since @xmath135 is the initial state of the subset automaton .",
    "assume that each set of size @xmath117 containing state 0 is reachable , and let @xmath270 , where @xmath271 , be a set of size @xmath272 .",
    "then @xmath118 can be reached from the set @xmath273 of size @xmath117 by @xmath205 .",
    "since the latter set is reachable by the induction hypothesis , the set @xmath118 is reachable as well .",
    "the empty set can be reached from @xmath135 by @xmath123 , and we have @xmath144 reachable states .    to prove inequivalence of these states notice that the word @xmath274 is accepted by the nfa only from state @xmath121 , and each word @xmath275 ( @xmath276 ) , only from state @xmath124 .",
    "it follows that all the states in the subset automaton are pairwise inequivalent .",
    "\\2 . for a non - empty suffix - closed language @xmath0 , the quotient @xmath265 is @xmath277 , which is of the same form as the quotients by a non - empty word @xmath1 given by equation  ( [ eq : star ] ) , @xmath278 , where the @xmath279 are suffixes of @xmath1 , and @xmath280 is the shortest . by remark  [ rem : suffix ] , if @xmath22 is a suffix of @xmath1 , then @xmath176 .",
    "thus the quotient becomes @xmath281 .",
    "there are at most @xmath94 such quotients .",
    "if @xmath258 for a non - empty suffix - closed language @xmath0 , then there must be two words @xmath282 in @xmath0 such that @xmath283 .",
    "hence @xmath284 , and so @xmath285 . however , since @xmath286 and @xmath263 is suffix - closed , we have @xmath287 , and so @xmath288 .",
    "it turns out that @xmath257 .    for @xmath95 , @xmath96 and for @xmath145",
    ", @xmath267 meet the bound 2",
    ". let @xmath148 .",
    "if @xmath289 , then @xmath0 is suffix - closed , @xmath170 , and @xmath290 . if @xmath291 , then @xmath0 is suffix - closed , @xmath170 , @xmath292 , and @xmath293 .",
    "\\3 . if each letter in @xmath13 appears in some word of a factor - closed language @xmath0 , then @xmath294 and @xmath295 .",
    "otherwise , @xmath296 .",
    "the bound is met by subword - closed language @xmath297 .    since the operation of reversal commutes with complementation",
    ", we have the following results on ideal languages from  @xcite :    [ thm : reversal ] let @xmath0 be a closed language with @xmath100 .",
    "+ 1 . if @xmath0 is prefix - closed , then @xmath298 .",
    "the bound is tight if @xmath108 .",
    "if @xmath0 is suffix - closed , then @xmath299 .",
    "the bound is tight if @xmath183 .",
    "if @xmath0 is factor - closed , then @xmath300 .",
    "the bound is tight if @xmath183 .",
    "if @xmath0 is subword - closed , then @xmath300 .",
    "the bound is tight if @xmath301 .",
    "+ if @xmath260 , then @xmath302 .",
    "* unary languages : * unary closed languages have special properties because the product of unary languages is commutative .",
    "the classes of prefix - closed , suffix - closed , factor - closed , and subword - closed unary languages all coincide . if a unary closed language @xmath0 is finite , then either it is empty and has @xmath260 , or has the form @xmath303 , for some @xmath304 , and has @xmath170 . if @xmath0 is infinite , then @xmath147 , and @xmath260 .",
    "the bounds for unary languages are given in tables  [ tab : bool ] and  [ tab : gen ] on page  .",
    "a theorem of kuratowski  @xcite states that , given a topological space , at most 14 distinct sets can be produced by repeatedly applying the operations of closure and complement to a given set .",
    "a closure operation on a set @xmath118 is an operation @xmath305 satisfying the following conditions for any subsets @xmath306 of @xmath118 : ( 1 )  @xmath307 , ( 2 ) @xmath308 implies @xmath309 , ( 3 ) @xmath310 .",
    "kuratowski s theorem was studied in the setting of formal languages in  @xcite .",
    "positive closure and kleene closure ( star ) are both closure operations .",
    "it was shown in  @xcite that at most 10 distinct languages can be produced by repeatedly applying the operations of positive closure and complement to a given language , and at most 14 distinct languages can be produced with kleene closure instead of positive closure .",
    "we consider here the case where the given language is closed and regular , and give upper bounds for the complexity of the resulting languages . here we denote the complement of a language @xmath0 by @xmath311 .",
    "moreover , the positive closure of the complement of @xmath0 is denoted by @xmath312 ,    we begin with positive closure .",
    "let @xmath0 be a @xmath91-closed language not equal to @xmath14 .",
    "then @xmath311 is an ideal , and @xmath313 .",
    "in addition , @xmath314 is also @xmath91-closed , so @xmath315 .",
    "hence there are at most 4 distinct languages that can be produced with positive closure and complementation .",
    "[ thm : positive ] the worst - case complexities in every 4-element algebra generated by a closed language @xmath0 with @xmath170 under positive closure and complement are : @xmath316 , @xmath317 , where @xmath318 is : @xmath144 for prefix - closed languages , @xmath133 for suffix - closed languages , and @xmath319 for factor- and subword - closed languages . there exist closed languages that meet these bounds .",
    "since @xmath320 for a non - empty closed language we have @xmath321 , and the upper bounds @xmath318 follow from our results on the quotient complexity of star operation ; in the case of suffix - closed languages , to get a 4-element algebra we need @xmath258 .",
    "all the languages that we have used in theorem  [ thm : star ] to prove tighness can be used as examples meeting the bound @xmath318 .",
    "the case of kleene closure is similar .",
    "let be a @xmath91-closed language such that @xmath322 .",
    "then @xmath311 is an ideal and @xmath311 does not contain @xmath15 .",
    "thus @xmath323 and @xmath324 , which gives at most four languages thus far .",
    "now @xmath325 , and @xmath263 is also @xmath91-closed . by the previous reasoning",
    ", we have at most four additional languages , giving a total of eight languages as the upper bound .",
    "the 8-element algebras are of the form @xmath326    [ thm : kleene ] the worst - case complexities in every 8-element algebra generated by a closed language @xmath0 with @xmath170 under kleene closure and complement are : @xmath316 , @xmath327 , @xmath328 , @xmath329 , where @xmath318 is : @xmath144 for prefix - closed languages , @xmath133 for suffix - closed languages , and @xmath319 for factor - and subword - closed languages , moreover , there exist closed languages that meet these bounds .    since @xmath330 and @xmath331 we have @xmath332 and @xmath333",
    ". in the case of suffix - closed languages , since @xmath0 must be distinct from @xmath263 , we have @xmath334 by theorem  [ thm : star ] .",
    "let @xmath0 be the prefix - closed language defined by the quotient automaton in fig .",
    "[ fig : star_prefix ] on page  ; then @xmath0 meets the upper bound on star .",
    "add a loop with a new letter @xmath335 in each state and denote the resulting language by @xmath5 .",
    "then @xmath5 is a prefix - closed language with @xmath336 and @xmath337 .",
    "next we have @xmath338 and @xmath339 .",
    "let @xmath340 .",
    "then @xmath0 is a suffix - closed language with @xmath170 and @xmath341 .",
    "next , @xmath293 , and @xmath342 .",
    "let @xmath343 .",
    "then @xmath0 is a subword - closed language with @xmath170 and @xmath341 .",
    "next @xmath344 , and so @xmath296 and @xmath345 .",
    "tables  [ tab : bool ] and  [ tab : gen ] summarize our complexity results .",
    "the complexities for regular languages are from  @xcite , except those for difference and symmetric difference , which are from  @xcite .",
    "the bounds for boolean operations and reversal of closed languages are direct consequences of the results in  @xcite . in table",
    "[ tab : gen ] , @xmath117 is the number of accepting quotients of @xmath5 .          00",
    "[ * * * biblio ] languages convex with respect to binary relations , and their closure properties .",
    "acta cybernet . , to appear a unique decomposition theorem for factorial languages .",
    "internat .",
    "j.   algebra comput .",
    "15 , 149160 ( 2005 ) derivatives of regular expressions .",
    "j.  acm 11 , 481494 ( 1964 ) quotient complexity of regular languages . in : pighizzini , g. , truthe , b. ( eds . ) dcfs 2009 , pp . 2542 .",
    "otto - von - guericke - universitt , magdeburg , germany ( 2009 ) http://arxiv.org/abs/0907.4547 closures in formal languages and kuratowski s theorem . in : diekert ,",
    "v. , nowotka , d. ( eds . ) dlt 2009 .",
    "lncs , vol . 5583 , pp .",
    "springer , heidelberg ( 2009 ) quotient complexity of ideal languages . in : latin 2010 , to appear .",
    "full paper at http://arxiv.org/abs/0908.2083 predictable semiautomata .",
    "410 , 32363249 ( 2009 ) decision procedures for convex languages . in : dediu ,",
    "a. , ionescu , a. , martin - vide , c. ( eds . ) lata 2009 .",
    "lncs , vol . 5457 , pp .",
    "247 - 258 .",
    "springer , heidelberg ( 2009 ) a note on multiple - entry finite automata .",
    "j.  comput .",
    "system sci .",
    "12 , 350351 ( 1976 ) multiple - entry finite automata .",
    "j.  comput .",
    "system sci .",
    "9 , 119 ( 1974 ) on free monoids partially ordered by embedding .",
    "j. combin .",
    "theory 6 , 9498 ( 1969 ) state complexity of basic operations on suffix - free regular languages .",
    "410 , 25372548 ( 2009 ) operational state complexity of prefix - free regular languages . in : automata , formal languages , and related topics ,",
    "university of szeged , hungary ( 2009 ) on the state complexity of k - entry deterministic finite automata .",
    "6 , 453 - 466 ( 2001 ) sur lopration @xmath348 de lanalysis situs .",
    "math . 3 , 182199 ( 1922 ) some combinatorial properties of factorial languages .",
    "in : capocelli , r. ( ed . ) sequences , pp .",
    "springer ( 1990 ) on the state complexity of scattered subwords and superwords .",
    "turku centre for computer science technical report no .  849 ( 2007 )",
    "unary language operations , state complexity and jacobsthal s function .",
    "13 , 145 - 159 ( 2002 ) on the state complexity of reversals of regular languages",
    ". theoret .",
    "320 , 315329 ( 2004 ) convex languages . in : nivat , m. ( ed . )",
    "automata , languages and programming , pp . 481492 .",
    "north - holland ( 1973 ) some remarks on multiple - entry finite automata .",
    "j.  comput .",
    "system sci .",
    "18 , 304306 ( 1979 ) state complexity of regular languages .",
    "j.   autom .",
    "6 , 221234 ( 2001 )"
  ],
  "abstract_text": [
    "<S> [ * * * abstr ]    a language @xmath0 is prefix - closed if , whenever a word @xmath1 is in  @xmath0 , then every prefix of @xmath1 is also in @xmath0 . </S>",
    "<S> we define suffix- , factor- , and subword - closed languages in the same way , where by subword we mean subsequence . </S>",
    "<S> we study the quotient complexity ( usually called state complexity ) of operations on prefix- , suffix- , factor- , and subword - closed languages . </S>",
    "<S> we find tight upper bounds on the complexity of the prefix- , suffix- , factor- , and subword - closure of arbitrary languages , and on the complexity of boolean operations , concatenation , star and reversal in each of the four classes of closed languages . </S>",
    "<S> we show that repeated application of positive closure and complement to a closed language results in at most four distinct languages , while kleene closure and complement gives at most eight languages .    </S>",
    "<S> * keywords : * automaton , closed , factor , language , prefix , quotient , state complexity , subword , suffix , regular operation , upper bound </S>"
  ]
}
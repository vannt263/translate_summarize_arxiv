{
  "article_text": [
    "in this paper we deal with the problem of interpolating a ( usually ) large number of multivariate scattered data points lying in convex domains or , more precisely , in convex hulls @xmath0 , for any @xmath1 . in general , this problem is considered in literature supposing to interpolate data points which are situated in suitable or simple domains such as hypercubes or hyperrectangles ( see e.g. @xcite ) .",
    "thus we construct a numerical algorithm which can efficiently be used for scattered data interpolation in @xmath3 . to organize the points in a multivariate space",
    ", we make use of a space - partitioning data structure known as",
    "_ @xmath2-tree _",
    "( see @xcite ) .",
    "this code is designed to numerically approximate data points by the partition of unity method , a global interpolation scheme which is combined with local radial basis function ( rbf ) approximants and compactly supported weight functions ( see @xcite ) .",
    "a detailed design of this algorithm as well as an analysis of its complexity is considered .    moreover , we observe that the implemented code is completely automatic and any choice depending on the space dimension has suitably been studied so that this algorithm can work for any dimension .",
    "numerical experiments show the performances of the interpolation algorithm on various sets of halton data points contained in @xmath0 , for @xmath4 . here",
    ", @xmath3 is any convex domain like a 2d polygon ( e.g. , a triangle or a hexagon ) or a 3d polyhedron ( e.g. , a pyramid or a cylinder ) .",
    "note that this algorithm for convex hulls extends our previous works on the topic @xcite .",
    "the paper is organized as follows . in section [ pu - rbf ]",
    "we give a general presentation of the partition of unity interpolation combined with local radial basis functions , reporting some theoretical results . in section [ alg ]",
    ", we describe the algorithm for convex hulls and analyze its complexity . in section [ num_res ] , in order to show accuracy and efficiency of the interpolation algorithm , we report numerical experiments considering various sets of scattered data points contained in 2d and 3d convex domains .",
    "finally , section [ concl ] refers to conclusions and future work .",
    "let @xmath5 be a set of distinct data points , arbitrarily distributed in a domain @xmath0 , @xmath6 , with an associated set @xmath7 of data values or function values , which are obtained by sampling some ( unknown ) function @xmath8 at the data points , i.e. , @xmath9 , @xmath10 .",
    "the basic idea of the partition of unity method is to start with a partition of the open and bounded domain @xmath0 into @xmath11 subdomains @xmath12 such that @xmath13 with some mild overlap among the subdomains .",
    "associated with these subdomains we choose a partition of unity , i.e. a family of compactly supported , non - negative , continuous functions @xmath14 with @xmath15 such that @xmath16 the global approximant thus assumes the following form @xmath17 for each subdomain @xmath12 we define a local rbf interpolant @xmath18 of the form @xmath19 where @xmath20 is the euclidean distance , @xmath21 is called _ radial basis function _ , and @xmath22 indicates the number of data points in @xmath12 . moreover , @xmath23 satisfies the interpolation conditions @xmath24 in particular , we observe that if the local approximants satisfy the interpolation conditions , then the global approximant also interpolates at @xmath25 , i.e. @xmath26 , for @xmath27 .    solving the @xmath28-th interpolation problem leads to a system of linear equations of the form @xmath29 where entries of the interpolation matrix @xmath30 are @xmath31 @xmath32^t$ ] and @xmath33^t$ ] .",
    "now , we give the following definition ( see @xcite ) .",
    "let @xmath0 be a bounded set .",
    "let @xmath34 be an open and bounded covering of @xmath3 .",
    "this means that all @xmath12 are open and bounded and that @xmath3 is contained in their union .",
    "a family of nonnegative functions @xmath35 with @xmath36 is called a @xmath37-stable partition of unity with respect to the covering @xmath38 if    1 .",
    "@xmath39 ; 2 .",
    "@xmath40 on @xmath3 ; 3 .",
    "for every @xmath41 with @xmath42 there exists a constant @xmath43 such that @xmath44 where @xmath45 .    in accordance with the statements in @xcite we require some additional regularity assumptions on the _ covering _ @xmath38 .",
    "[ defpr ] suppose that @xmath46 is bounded and @xmath47 are given .",
    "an open and bounded covering @xmath38 is called regular for @xmath48 if the following properties are satisfied :    * for each @xmath49 , the number of subdomains @xmath12 with @xmath50 is bounded by a global constant @xmath51 ; * each subdomain @xmath12 satisfies an interior cone condition @xcite ; * the local fill distances @xmath52 , where @xmath53 , are uniformly bounded by the global fill distance @xmath54 , i.e. @xmath55    after defining the space @xmath56 of all functions @xmath57 whose derivatives of order @xmath58 satisfy @xmath59 for @xmath60 , we consider the following convergence result ( see , e.g. , @xcite ) .",
    "let @xmath46 be open and bounded and suppose that @xmath61 @xmath62 .",
    "let @xmath63 be a strictly positive definite function .",
    "let @xmath38 be a regular covering for @xmath64 and let @xmath35 be @xmath37-stable for @xmath38 .",
    "then the error between @xmath65 , where @xmath66 is the native space of @xmath67 , and its partition of unity interpolant ( [ pui ] ) can be bounded by @xmath68 for all @xmath49 and all @xmath69 .",
    "if we compare this result with the global error estimates ( see e.g. @xcite ) , we can see that the partition of unity preserves the local approximation order for the global fit .",
    "this means that we can efficiently compute large rbf interpolants by solving small rbf interpolation problems and then glue them together with the global partition of unity @xmath35 . in other words ,",
    "the partition of unity approach is a simple and effective technique to decompose a large problem into many small problems while at the same time ensuring that the accuracy obtained for the local fits is carried over to the global one .",
    "in this section we present an algorithm for multivariate interpolation of scattered data sets lying in a convex domain ( or convex hull ) @xmath0 , for any @xmath1 .",
    "this code is based on a global partition of unity interpolant using local rbf interpolants and compactly supported weight functions . to organize the points in a multivariate space",
    ", we build an efficient space - partitioning data structure as the _ kd - trees _ , because this enables us to efficiently answer a query , known as _ range search _ ( see @xcite ) .",
    "in fact , we need to solve the following computational issue :    * _ given a set @xmath70 of points @xmath71 and a subdomain @xmath12 , find all points situated in that subdomain , i.e. @xmath72 .",
    "_    note that the subdomain @xmath12 denotes a generic region , so the index @xmath28 is here fixed . for simplicity , all details of this algorithm concern a generic convex hull @xmath73^n$ ] , but its generalization is obviously possible and straightforward .",
    "input : @xmath74 , space dimension ; @xmath75 , number of data ; @xmath76 , set of data points ; @xmath77 , set of data values .",
    "output : @xmath78 , set of approximated values .",
    "the set @xmath79 of data points and the set @xmath80 of data values are loaded .",
    "after computing the number @xmath11 of subdomain points , a set @xmath81 of subdomain points is constructed^n$ ] .",
    "they are then automatically reduced taking only those in @xmath3 by the ` inhull ` matlab function .",
    "such points are the centres of partition of unity subdomains . ] .",
    "note that the number @xmath11 depends on both the data point number @xmath75 and the space dimension @xmath74 ; furthermore , it is suitably chosen assuming that the ratio @xmath82 .",
    "the number @xmath83 of evaluation points is computed and a set @xmath84 of evaluation points is generated .",
    "stage 4 . for each subdomain point @xmath85 , @xmath86 ,",
    "a local spherical subdomain is constructed , whose radius is @xmath87 where @xmath88 is the number of subdomain points initially generated on @xmath89^n$ ] .",
    "the @xmath2-tree data structures are built for the set @xmath79 of data points and the set @xmath90 of evaluation points .",
    "stage 6 . for each subdomain @xmath12 , @xmath86 ,",
    "the range query problem is considered , adopting the related searching procedure which consists of the following two steps :    1 .",
    "find all data points ( i.e. the set @xmath91 ) belonging to the subdomain @xmath12 and construct a local interpolation rbf matrix by @xmath91 , where @xmath22 denotes the point number of @xmath91 .",
    "2 .   determine all evaluation points ( i.e. the set @xmath92 ) belonging to the subdomain @xmath12 and build a local evaluation rbf matrix by @xmath92 , where @xmath93 is the point number of @xmath92 .",
    "stage 7 . a local rbf interpolant @xmath23 and a weight function @xmath14 , @xmath86 , is computed for each evaluation point .",
    "stage 8 . the global fit ( [ pui ] ) is applied , accumulating all the @xmath23 and @xmath14 .    in this algorithm for convex domains",
    "the local interpolants are computed by using compactly supported rbfs as the wendland functions . however , this approach is completely automatic and turns out to be very flexible , since different choices of local approximants , either globally or compactly supported , are allowed .",
    "the algorithm is based on the construction of @xmath2-tree data structures .",
    "they enable us to efficiently determine all data points belonging to each subdomain @xmath12 , @xmath86 , so that we can compute local rbf interpolants to be used in the partition of unity scheme .",
    "then , assuming that the covering @xmath38 is regular and local and the set @xmath79 of data points is quasi - uniform , we analyze the complexity of this interpolation algorithm .    in ` stages 1 - 4 `",
    "we have a sort of preprocessing phase where we automatically load all data sets and define the parameters concerning data , subdomain and evaluation points . to construct an algorithm which efficiently works in a generic space dimension @xmath74 , we require that the subdomain number @xmath11 is proportional to the data point number @xmath75 , taking @xmath82 .    in ` stage 5 `",
    "we build the @xmath2-trees , which needs @xmath94 time and @xmath95 space for @xmath75 data points and @xmath96 time and @xmath97 space for @xmath83 evaluation points .",
    "then , in ` stage 6 ` we make use of the range search procedure for each subdomain @xmath12 , @xmath86 , whose running times are @xmath98 and @xmath99 , respectively ( see @xcite ) .",
    "since the number of centres in each subdomain @xmath12 is bounded by a constant ( see definition [ defpr ] ) , we need @xmath100 space and time for each subdomain to solve the local rbf interpolation problems . in fact , in order to obtain the local rbf interpolants",
    ", we have to solve @xmath11 linear systems of ( relatively ) small sizes , i.e. @xmath101 , with @xmath102 , thus requiring a constant running time @xmath103 , @xmath86 , for each subdomain .",
    "besides reporting the points in each subdomain in @xmath100 , as the number @xmath11 of subdomains @xmath12 is bounded by @xmath104 , this leads to @xmath104 space and time for solving all of them .",
    "thus , in ` stage 7 ` and ` 8 ` we have to add up a constant number of local rbf interpolants to get the value of the global fit . this can be computed in @xmath100 time .",
    "in this section we present some numerical experiments we made to test our procedures implemented in matlab environment .",
    "all the tests have been carried out on a intel core i7 - 4500u 1.8 ghz processor . in our results",
    "we report errors and cpu times obtained by running the algorithm on a few scattered data sets , which are located in a convex hull @xmath73^n$ ] , for @xmath105 . as interpolation points ,",
    "we take uniformly random halton data points .",
    "they are generated by using the program ` haltonseq.m ` , available at @xcite , and then suitably reduced to @xmath3 .",
    "we observe that this code for convex domains is completely automatic and , though we here focus only on bivariate and trivariate interpolation , it might also be used in higher dimensions .    in order to point out accuracy of this algorithm , we compute on a reduced grid of @xmath83 evaluation points depends on the convex domain @xmath3 ; at first , we construct a uniform grid of @xmath106 points , and then we automatically reduce them taking only those in @xmath3 through the ` inhull ` matlab function . ] maximum absolute error ( mae ) and root mean square error ( rmse ) , whose formulas are @xmath107 and @xmath108    moreover , we report results obtained by using as basis the wendland @xmath109 function , i.e. , @xmath110 where @xmath111 is a _ shape parameter _ , @xmath112 is the euclidean distance , and @xmath113 denotes the truncated power function .",
    "we remark that this rbf is compactly supported ( i.e. , its support is @xmath114 $ ] ) and strictly positive definite in @xmath115 for @xmath116 ( see @xcite ) .",
    "note that here it is used as both a basis function and a localizing function of shepard s weight @xmath14 in the global fit .",
    "in this subsection we focus on bivariate interpolation , analyzing performances of our algorithm for convex hulls and showing the numerical results obtained by considering five sets of halton data points .",
    "these tests are carried out considering different convex domains , i.e. , a triangle , a disk and a hexagon ( see figure [ fig_1 ] ) .",
    "-.85 cm   -.85 cm     in the various experiments we investigate accuracy of the interpolation algorithm taking the data values by the well - known 2d franke s test function @xmath117    after showing in figure [ fig_1_rmse ] the stable behavior of rmses by varying the value of @xmath118 $ ] , for each of convex domains we report maes and rmses taking @xmath119 as shape parameter of the wendland @xmath109 function . then , since we are also concerned to point out the efficiency of the algorithm , in tables [ tab_1][tab_3 ] we show cpu times computed in seconds .",
    ". left : triangle ; center : disk ; right : hexagon.,title=\"fig:\",height=128 ] -0.85 cm . left : triangle ; center : disk ; right : hexagon.,title=\"fig:\",height=128 ] -0.85 cm . left : triangle ; center : disk ; right : hexagon.,title=\"fig:\",height=128 ]    .errors and cpu times ( in seconds ) for triangle using @xmath119 . [ cols=\"^,^,^,^ \" , ]     [ tab_6 ]",
    "in this paper we presented a new algorithm for multivariate interpolation of scattered data sets lying in convex domains ( or hulls ) @xmath0 , for any @xmath1 .",
    "it is based on the partition of unity interpolation using local rbf interpolants and compactly supported weight functions .",
    "to partition the points in @xmath3 , we used a kd - tree data structure efficiently answering the range search query .",
    "as future work , we expect to build new data structures for partitioning data in convex hulls using efficient cell - based searching procedures .",
    "the new code should allow us to further reduce cpu times , making it suitable and applicable in several fields of applied mathematics and scientific computing .",
    "wendland , h. : fast evaluation of radial basis functions : methods based on partition of unity . in : chui ,",
    "c.k . , et al .",
    "( eds . ) , approximation theory x : wavelets , splines , and applications , vanderbilt univ . press , nashville , tn , pp .",
    "473483 ( 2002 )"
  ],
  "abstract_text": [
    "<S> in this paper we present a new algorithm for multivariate interpolation of scattered data sets lying in convex domains @xmath0 , for any @xmath1 . to organize the points in a multidimensional space , </S>",
    "<S> we build a @xmath2-tree space - partitioning data structure , which is used to efficiently apply a partition of unity interpolant . </S>",
    "<S> this global scheme is combined with local radial basis function approximants and compactly supported weight functions . a detailed description of the algorithm for convex domains and a complexity analysis of the computational procedures are also considered . </S>",
    "<S> several numerical experiments show the performances of the interpolation algorithm on various sets of halton data points contained in @xmath3 , where @xmath3 can be any convex domain like a 2d polygon or a 3d polyhedron .    </S>",
    "<S> approximation , multivariate algorithms , partition of unity methods , scattered data . </S>"
  ]
}
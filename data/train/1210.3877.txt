{
  "article_text": [
    "the smallest superpolyomino problem restricted to one dimension yields the well - known _ smallest supersting problem _ : given a set of strings ( i.e. @xmath2 polyominoes ) , find the smallest string containing each string in the set as a substring .",
    "this problem is known to be -hard and admits a simple greedy 3-approximation  @xcite .",
    "the approximation algorithm leads to a straightfoward @xmath3-approximation algorithm  @xcite for the minimum - size context - free grammar encoding a string , known as the _ smallest grammar problem_.    in attempting to extend this idea to solve a higher - dimensional version of the smallest grammar problem , we consider the problem of finding the smallest superpolyomino for a given set of input polyominoes .",
    "we show that an approximation algorithm for the smallest grammar problem in two dimensions is unlikely to exist by proving that the smallest superpolyomino problem is not approximable within any @xmath0-factor for any @xmath1 .",
    "moreover , this result remains true when constrained to sets of polyominoes using only two colors .",
    "we also show that the problem remains -hard even when constrained to sets of polyominoes using a single color . in this case , geometry alone is responsible for the problem difficulty , as the one - dimensional version can be solved in linear time with a single pass .    for the inapproximability result , we use a reduction from chromatic number of an arbitrary graph . given a graph @xmath4 , the reduction uses polyominoes each representing a vertex in @xmath5 , with two polyominoes able to compactly stack atop each other if and only if the two corresponding vertices are independent in @xmath6 . forming a smallest superpolyomino then is equivalent to finding a minimum coloring of the vertices of @xmath5 , i.e. @xmath6 s chromatic number , shown to be -hard to approximate within any @xmath7-factor by zuckerman  @xcite .    for the one - color case ,",
    "a reduction from set cover is used .",
    "a small polyomino is created for each element of the universe , and a single large polyomino encoding the sets is used as a base for the final superpolyomino .",
    "each element polyomino fits inside the set polyomino at locations corresponding to sets containing the element , with the exception of a single missing cell .",
    "a small superpolyomino then is obtained by placing the element polyominoes at a small number of locations inside the set polyomino , equivalent to covering the universe with a small number of sets .",
    "a polyomino @xmath8 is defined by a connected set of points on the square lattice ( called _ cells _ ) containing @xmath9 , and a coloring @xmath10 mapping the cells of @xmath11 to a set of colors @xmath12 , e.g. cell @xmath13 is red , cell @xmath14 is gray , etc . as shorthand ,",
    "we denote the color of the cell @xmath15 as @xmath16 , and @xmath17 as the number of cells in @xmath11 , i.e. the _ size _ of @xmath11 .",
    "a _ translation _ of @xmath11 is a polyomino @xmath18 and coordinate offset @xmath19 such that @xmath20 and @xmath21 .",
    "two polyominoes @xmath22 and @xmath23 at some translation @xmath19 are _ compatible _ if for each @xmath24 , either @xmath25 or @xmath26 is empty or @xmath27 .",
    "similarly , a polyomino @xmath8 is a _",
    "superpolyomino _ of @xmath28 if there exists a translation @xmath19 of @xmath29 such that for each @xmath24 , either @xmath30 or @xmath31 , i.e. there is a translation of @xmath29 such that @xmath29 is compatible with @xmath11 and lies entirely in @xmath11 .",
    "given a graph @xmath4 , each vertex @xmath32 is converted into a polyomino @xmath23 that encodes @xmath33 and the neighbors of @xmath33 in @xmath6 ( see figure  [ fig : reduction - ex ] ) .",
    "each @xmath34 is a rectangular @xmath35 polyomino with up to @xmath36 single squares removed and lower - left corner at @xmath9 .",
    "the four corners of all @xmath34 have a common set of four colors : green , blue , purple , and orange .",
    "cells at locations @xmath37 are colored black if @xmath38 , @xmath39 if @xmath40 , or are empty locations if @xmath41 is not @xmath33 or a neighbor of @xmath33 .",
    "all remaining cells have a common gray color .",
    "consider how two polyominoes @xmath42 and @xmath34 can overlap depending upon the relationship of @xmath43 and @xmath33 . because of the four distinct corner colors , @xmath42 and @xmath34 can only overlap when these four locations in @xmath34 are translated to the same locations in @xmath42 . in this translation ,",
    "the cells at location @xmath44 in @xmath42 and @xmath34 are compatible exactly when @xmath45 , i.e. @xmath43 and @xmath33 are not neighbors .",
    "all other cells are colored gray and are thus compatible .",
    "the superpolyomino formed by a pair of compatible @xmath42 and @xmath34 in this translation has the common set of four colored corner cells and many gray cells , and has two black cells and a number of red cells corresponding to the combined neighborhoods of @xmath43 and @xmath33 .",
    "then by induction , any set of polyominoes can overlap if and only if they form an independent set .",
    "moreover , if they overlap , they overlap using a set of translations in which the four corners of all polyominoes are placed at four common locations .    because the polyominoes can only overlap in this constrained way",
    ", any superpolyomino of the polyominoes @xmath46 consists of a number of _ decks _ of superimposed polyominoes corresponding to independent sets of vertices in @xmath6 arranged disjointly to form a single connected polyomino ( see figure  [ fig : reduction - soln - ex ] ) .",
    "recall that each @xmath34 is a @xmath35 rectangle with @xmath47 cells colored black , red , or are not present .",
    "the size of @xmath34 is then between @xmath48 and @xmath49 depending upon the number of neighbors of @xmath33 , and each deck of polyominoes also has size in this range .    [",
    "lem : deck - to - coloring ] for a graph @xmath4 , there exists a superpolyomino of size at most @xmath50 for polyominoes @xmath46 if and only if the vertices of @xmath5 can be @xmath51-colored .    first , consider extreme sizes of superpolyominoes consisting of @xmath51 and @xmath52 decks . for any @xmath5 and @xmath51 with @xmath53 : @xmath54 that is , the size of any superpolyomino of @xmath52 decks is smaller than the size of any superpolyomino of @xmath51 decks .",
    "we now prove both implications of the lemma .",
    "first , assume the superpolyomino of size at most @xmath50 exists .",
    "then the superpolyomino must consist of at most @xmath51 decks .",
    "each deck is the superposition of a set of polyominoes forming an independent set , so @xmath6 can be @xmath51-colored .",
    "next , assume that @xmath6 can be @xmath51-colored .",
    "then the polyominoes @xmath46 can be translated to form @xmath51 decks , one for each color , each with size at most @xmath49 .",
    "placing these decks adjacent to each other yields a superpolyomino of size at most @xmath50 .",
    "@xmath55    note that only @xmath47 cells of each @xmath34 are distinct and depend on @xmath33 , while the other @xmath56 cells are identical for all @xmath34 .",
    "the extra cells are needed for the first inequality in lemma  [ lem : deck - to - coloring ] , and they effectively `` drown out '' variation in the size of each deck due to missing cells .",
    "[ thm : ssp - inapprox ] the smallest superpolyomino problem is -hard to approximate within a factor of @xmath57 for any @xmath1 .    consider the smallest superpolyomino problem for the polyominoes generated from a graph @xmath4 with chromatic number @xmath51 .",
    "there are @xmath47 of these polyominoes , each of size @xmath58 , so the polyominoes have total size @xmath59 . by lemma  [ lem :",
    "deck - to - coloring ] , a superpolyomino of size between @xmath60 and @xmath61 exists if and only if there exists a @xmath62-coloring of @xmath6 . then by zuckerman  @xcite , finding a superpolyomino such that @xmath63 is -hard .",
    "the result of theorem  [ thm : ssp - inapprox ] also holds when constrainted to sets of polyominoes using at most two colors by converting each cell into a unique @xmath64 _ macrocell _ ( seen in figure  [ fig : bicolor - adaption ] ) .",
    "the cells on the boundary of the macrocell are colored black and the interior cells are colored gray , except for the three cells @xmath65 , @xmath66 , and @xmath67 .",
    "these cells are used to encode a binary value between 0 and 7 corresponding to the color of the cell in the original polyomino , with gray indicating a 0 and black a 1 .        because all polyominoes are simply scaled by a factor of @xmath68 , following the proof of lemma  [ lem : deck - to - coloring ] gives a similar result , but with a superpolyomino size of @xmath69 instead of @xmath50 .",
    "because each polyomino still has size @xmath58 , the same inapproximability ratio as theorem  [ thm : ssp - inapprox ] holds :      we now consider the smallest superpolyomino problem for one - color polyomino sets .",
    "a reduction from set cover is done using families of polyominoes as seen in figures  [ fig : monocolor - polyomino ] and  [ fig : monocolor - reduction ] . given a universe @xmath70 and set of sets",
    "@xmath71 with @xmath72 , two types of polyominoes are created .",
    "first , a set of _ element polyominoes _ @xmath73 is created ,",
    "each consisting of a @xmath74 _ base _ , a @xmath75 _ flagpole _ , and a @xmath2 _ flag_. the lower - left corner of the three components for polyomino @xmath76 are placed at @xmath9 , @xmath77 , and @xmath78 , respectively .",
    "second , a _ set polyomino _ @xmath79 is created , consisting of a set of _ punctured bases _",
    "( a base with cell @xmath80 missing ) arranged horizontally and attached by single cells , each with a flagpole and some number of flags ( called a _ set gadget _ ) .",
    "each flagpole corresponds to a set @xmath81 , with flags placed at location @xmath82 for @xmath83 .",
    "consider forming a superpolyomino of the set polyomino @xmath79 and some element polyomino @xmath84 corresponding to an element @xmath85 .",
    "define a translation of @xmath84 that places the lower - left corner of its base at the lower - left corner of a punctured base of @xmath79 as an _ alignment _ of the bases . aligning the base of @xmath84 with a punctured base of @xmath79 corresponding to a set containing @xmath76 results in a superpolyomino of size @xmath86 .",
    "if the base of @xmath11 is not aligned with a punctured base of @xmath79 , then the resulting superpolyomino is at least as large as some superpolymino of @xmath79 and _ all _ element polyominoes :    [ lem : no - align - has - big - cost ] any superpolyomino of the set polyomino @xmath79 and some element polyomino @xmath84 in which the base of @xmath84 is not aligned with the punctured base of a set gadget not corresponding to a set containing has size at least @xmath87 .    first , if the base of @xmath84 is aligned with the punctured base of a set gadget that does not correspond to a set containing @xmath76 , then the cells of the flag of @xmath84 do not overlap with the cells of @xmath79 .",
    "the flag has @xmath88 cells , and so the superpolyomino has at least @xmath89 .",
    "next , if the base of @xmath84 is _ not _ aligned with any punctured base in @xmath79 , then it must be horizontally or vertically misaligned ( or both ) .",
    "if the base is horizontally misaligned , then some column that does not contain any punctured base of @xmath79 contains cells from the base of @xmath84 . such a column then must contain at least @xmath90 cells of @xmath84 and at most 1 cell of @xmath79 , so the superpolyomino has size at least @xmath89 .    if the base is not horizontally misaligned but is vertically misaligned , then some row containing a row of the base of @xmath11 has at most 1 cell of @xmath79 . this row is either : 1 . a row entirely below or above the set gadget @xmath11",
    "is aligned with or 2 . a row that contains a cell of the flagpole but no flag . in either case ,",
    "the superpolyomino has at least @xmath90 cells of @xmath11 and at most 1 cell of @xmath79 , so the superpolyomino has size at least @xmath89 .",
    "intuitively , lemma  [ lem : no - align - has - big - cost ] implies that `` playing by the rules '' and aligning the base of each element polyomino with some punctured base of the set polyomino @xmath79 is always better than `` cheating '' by not aligning some element polyomino with any punctured base .",
    "so finding a minimum superpolyomino is equivalent to deciding which punctured base each element polyomino s base should be aligned with , with a unit cost for each punctured base `` patched '' by an element polyomino s aligned base ( see figure  [ fig : monocolor - reduction - soln ] ) .        by lemma  [ lem :",
    "no - align - has - big - cost ] , the smallest superpolyomino of any set of polyominoes generated by the reduction is one resulting from aligning the base of each element polyomino @xmath84 base with the punctured base of a set gadget of @xmath79 corresponding to a set containing @xmath76 .",
    "so a superpolyomino of size @xmath92 exists if any only if there exists a set cover of size @xmath51 .",
    "set cover is known and loved by many , and is also -hard",
    "@xcite .    4 a. blum , t. jiang , m. li , j. tromp , m. yannakakis , linear approximation of shortest superstrings , _ journal of the acm _ , 41(4 )  ( 1994 ) , 630647 .",
    "m. charikar , e. lehman , a. lehman , d. liu , r. panigrahy , m. prabhakaran , a. sahai , a. shelat , the smallest grammar problem , _ ieee transactions on information theory _ , 51(7 )  ( 2005 ) , 25542576 .",
    "r. m. karp , reducibility among combinatorial problems , _ complexity of computer computations _ , plenum ,",
    "new york , 1972 , 85103 .",
    "d. zuckerman , linear degree extractors and the inapproximability of max clique and chromatic number , _ theory of computation _ , 3  ( 2007 ) , 103128 ."
  ],
  "abstract_text": [
    "<S> we consider the _ smallest superpolyomino problem _ : given a set of colored polyominoes , find the smallest polyomino containing each input polyomino as a subshape . </S>",
    "<S> this problem is shown to be -hard , even when restricted to a set of polyominoes using a single common color . moreover , for sets of polyominoes using two or more colors , the problem is shown to be -hard to approximate within a @xmath0-factor for any @xmath1 . </S>"
  ]
}
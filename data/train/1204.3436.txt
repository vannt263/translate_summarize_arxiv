{
  "article_text": [
    "over several decades of use in diverse scientific and engineering fields , evolutionary optimization has acquired a reputation for being a kind of universal acid  a general purpose approach that routinely procures useful solutions to optimization problems with rugged , dynamic , and stochastic cost functions over search spaces consisting of strings , vectors , trees , and instances of other kinds of data structures @xcite .",
    "remarkably , the means by which evolutionary algorithms work is still the subject of much debate .",
    "an abiding mystery of the field is the widely observed utility of genetic algorithms with uniform crossover @xcite .",
    "the use of uniform crossover @xcite in genetic algorithms causes genetic loci to be unlinked , i.e. recombine freely .",
    "it is generally acknowledged that the adaptive capacity of genetic algorithms with this kind of crossover can not be explained within the rubric of the _ building block hypothesis _ , the reigning explanation for adaptation in genetic algorithms with strong linkage between loci @xcite .",
    "yet , no alternate , scientifically rigorous explanation for adaptation in genetic algorithms with uniform crossover ( ugas ) has been proposed . the _ hyperclimbing hypothesis _ , presented in this paper , addresses this gap .",
    "this hypothesis holds that ugas perform adaptation by implicitly and efficiently implementing a global search heuristic called _",
    "if the hyperclimbing hypothesis is sound , then the uga is in good company .",
    "hyperclimbing belongs to a class of heuristics that perform _ global decimation_. global decimation , it turns out , is the state of the art approach to solving large , hard instances of sat @xcite .",
    "conventional global decimation strategies  e.g .",
    "survey propagation @xcite , belief propagation , warning propagation @xcite  use message passing algorithms to obtain statistical information about the space being searched .",
    "this information is then used to fix the values of one , or a small number , of search space attributes , effectively reducing the size of the search space .",
    "the decimation strategy is then recursively applied to the smaller search space .",
    "and so on .",
    "survey propagation , perhaps the best known global decimation strategy , has been used along with _ walksat _",
    "@xcite to solve instances of sat with upwards of a million variables .",
    "the hyperclimbing hypothesis holds that in practice , ugas also perform adaptation by decimating the search spaces to which they are applied . unlike conventional decimation strategies , however , a uga obtains statistical information about the search space _ implicitly _ , by means other than message passing .",
    "the rest of this paper is organized as follows : section [ hyperclimbingexplained ] provides an informal description of the hyperclimbing heuristic .",
    "a more formal description appears in section a of the online appendix .",
    "section [ proofofconcept ] , presents proof of concept , i.e. it describes a stochastic fitness function on which a uga behaves as described in the hyperclimbing hypothesis . exploiting certain symmetries inherent within uniform crossover and a containing class of fitness functions",
    ", we argue that the adaptive capacity of a uga scales extraordinarily well as the size of the search space increases .",
    "we follow up with experimental tests that validate this conclusion .",
    "one way for the hyperclimbing hypothesis to gain credibility is by inspiring modifications to the genetic algorithm that improve performance .",
    "section [ validation ] presents the results of experiments that show that a simple tweak called _ clamping _ , inspired by the hyperclimbing hypothesis , dramatically improves the performance of a genetic algorithm on large , randomly generated instances of max-3sat , and the sherrington kirkpatric spin glasses problem . while not conclusive , this validation does lend considerable support to the hyperclimbing hypothesis .",
    "we conclude in section [ conclusion ] with a brief discussion of the generalizability of the hyperclimbing hypothesis and its ramifications for evolutionary computation and evolutionary biology .",
    "for a sketch of the workings of a hyperclimbing heuristic , consider a search space @xmath0 , and a ( possibly stochastic ) fitness function that maps points in @xmath1 to real values .",
    "let us define the _ order _ of a schema partition @xcite to simply be the order of the schemata that comprise the partition . clearly then",
    ", schema partitions of lower order are coarser than schema partitions of higher order .",
    "the _ effect _ of a schema partition is defined to be the variance of the expected fitness of the constituent schemata under sampling from the uniform distribution over each schema .",
    "so for example , the effect of the schema partition @xmath2 is @xmath3 where the operator @xmath4 gives the expected fitness of a schema under sampling from the uniform distribution .",
    "a hyperclimbing heuristic starts by sampling from the uniform distribution over the entire search space .",
    "it subsequently identifies a coarse schema partition with a non - zero effect , and limits future sampling to a schema in this partition with above average expected fitness . in other words the hyperclimbing heuristic fixes the defining bits @xcite of this schema in the population .",
    "this schema constitutes a new ( smaller ) search space to which the hyperclimbing heuristic is recursively applied .",
    "crucially , the act of fixing defining bits in a population has the potential to  generate \" a detectable non - zero effect in a schema partition that previously had a negligible effect .",
    "for example , the schema partition @xmath5 can have a negligible effect , while the schema partition @xmath6 has a detectable non - zero effect",
    ". a more formal description of the hyperclimbing heuristic can be found in appendix [ formaldescription ] .    at each step in its progression , hyperclimbing is sensitive , not to the fitness value of any individual point , but to the sampling means of relatively coarse schemata .",
    "this heuristic is , therefore , _",
    "natively _ able to tackle optimization problems with stochastic cost functions .",
    "considering the intuitive simplicity of hyperclimbing , this heuristic has almost certainly been toyed with by other researchers in the general field of discrete optimization . in all likelihood",
    "it was set aside each time because of the seemingly high cost of implementation for all but the smallest of search spaces or the coarsest of schema partitions .",
    "given a search space comprised by @xmath7 binary variables , there are @xmath8 schema partitions of order @xmath9 .",
    "for any fixed value of @xmath9 , @xmath10 @xcite .",
    "the exciting finding presented in this paper is that ugas can implement hyperclimbing cheaply for large values of @xmath7 , and values of @xmath9 that are small , but greater than one .",
    "we introduce a parameterized stochastic fitness function , called a _ staircase function _ , and provide experimental evidence that a uga can perform hyperclimbing on a particular parameterization of this function .",
    "then , using symmetry arguments , we conclude that the running time and the number of fitness queries required to achieve equivalent results scale surprisingly well with changes to key parameters .",
    "an experimental test validates this conclusion .",
    "a staircase function descriptor is a 6-tuple @xmath11 where @xmath12 , @xmath9 and @xmath7 are positive integers such that @xmath13 , @xmath14 is a positive real number , and @xmath15 and @xmath16 are matrices with @xmath12 rows and @xmath9 columns such that the values of @xmath16 are binary digits , and the elements of @xmath15 are distinct integers in @xmath17 $ ] .",
    "@xmath18    for any positive integer @xmath7 , let @xmath17 $ ] denote the set @xmath19 , and let @xmath20 denote the set of binary strings of length @xmath7 .",
    "given any @xmath21-tuple , @xmath22 , of integers in @xmath17 $ ] , and any binary string @xmath23 , let @xmath24 denote the string @xmath25 such that for any @xmath26 $ ] , @xmath27 . for any @xmath28 matrix @xmath29 , and any @xmath30 $ ] , let @xmath31 denote the @xmath32-tuple that is the @xmath33 row of @xmath29 .",
    "let @xmath34 denote the normal distribution with mean @xmath35 and variance @xmath36 .",
    "then the function , @xmath37 , described by the staircase function descriptor @xmath38 is the stochastic function over the set of binary strings of length @xmath7 given by algorithm [ staircasealg ] .",
    "the parameters @xmath39 , and @xmath7 are called the _ height , order , increment _ and _ span _ , respectively , of @xmath37 . for any @xmath40",
    "$ ] , we define _ step _ @xmath41 of @xmath37 to be the schema @xmath42 , and define _ stage _",
    "@xmath41 of @xmath37 to be the schema @xmath43 .",
    "a step of the staircase function is said to have been _ climbed _ when future sampling of the search space is largely limited to that step . just as it is hard to climb higher steps of a physical staircase without climbing lower steps first , it is computationally expensive to identify higher steps of a staircase function without identifying lower steps first ( theorem 1 , appendix [ proofs ] ) . in this regard ,",
    "it is possible that staircase functions capture a feature that is widespread within the fitness functions resulting from the representational choices of ga users .",
    "the difficulty of climbing step @xmath40 $ ] _ given _ stage @xmath44 , however , is non - increasing with respect to @xmath41 ( corollary 1 , appendix [ proofs ] ) .",
    "readers seeking to ways to visualize staircase functions are refered to appendix [ visualizing ] .",
    "the pseudocode for the uga used in this paper is given in algorithm [ sgapseudo ] .",
    "the free parameters of the uga are @xmath45 ( the size of the population ) , @xmath46 ( the per bit mutation probability ) , and evaluate - fitness ( the fitness function ) .",
    "once these parameters are fixed , the uga is fully specified .",
    "the specification of a fitness function implicitly determines the length of the chromosomes , @xmath7 .",
    "two points deserve further elaboration :    1 .",
    "the function sus - selection takes a population of size @xmath45 , and a corresponding set of fitness values as inputs .",
    "it returns a set of @xmath45 parents drawn by fitness proportionate _",
    "stochastic universal sampling _ ( sus ) .",
    "instead of selecting @xmath45 parents by spinning a roulette wheel with one pointer @xmath45 times , stochastic universal sampling selects @xmath45 parents by spinning a roulette wheel with @xmath45 equally spaced pointers just once . selecting parents this way",
    "has been shown to reduce sampling error @xcite .",
    "when selection is fitness proportionate , an increase in the average fitness of the population causes a decrease in selection pressure .",
    "the uga in algorithm [ sgapseudo ] combats this effect by using sigma scaling ( * ? ? ?",
    "* p 167 ) to adjust the fitness values returned by evaluate - fitness . these adjusted fitness values , not the raw ones , are used when selecting parents .",
    "let @xmath47 denote the raw fitness of some chromosome @xmath22 in some generation @xmath48 , and let @xmath49 and @xmath50 denote the mean and standard deviation of the raw fitness values in generation @xmath48 respectively .",
    "then the _ adjusted fitness _ of @xmath22 in generation @xmath48 is given by @xmath51 where , if @xmath52 then @xmath53 , otherwise , @xmath54 the use of sigma scaling also entails that negative fitness values are handled appropriately .    .",
    "@xmath55 initialize - population(@xmath45,@xmath7 )      let @xmath37 be a staircase function with descriptor @xmath56 , we say that @xmath37 is _ basic _ if @xmath57 , @xmath58 , ( i.e. if @xmath15 is the matrix of integers from 1 to @xmath59 laid out row - wise ) , and @xmath16 is a matrix of ones . if @xmath37 is known to be basic , then the last three elements of the descriptor of @xmath37 are fully determinable from the first three , and its descriptor can be shortened to @xmath60 . given some staircase function @xmath37 with descriptor @xmath56",
    ", we define the _ basic form _ of @xmath37 to be the ( basic ) staircase function with descriptor @xmath60 .",
    "let @xmath61 be the basic staircase function with descriptor @xmath62 , and let @xmath63 denote the uga defined in section [ matandmet ] with a population size of 500 , and a per bit mutation probability of 0.003 ( i.e , @xmath64 ) .",
    "figure [ crosstype=0performance]a shows that @xmath63 is capable of robust adaptation when applied to @xmath61 ( we denote the resulting algorithm by @xmath65 ) .",
    "figure [ crosstype=0performance]c shows that under the action of @xmath63 , the first four steps of @xmath61 go to fixation in ascending order . when a step gets fixed , future sampling will largely be confined to that step  in effect , the hyperplane associated with the step has been climbed .",
    "note that the uga does not need to  fully \" climb a step before it begins climbing the subsequent step ( figure [ crosstype=0performance]c ) .    .",
    "formal models of sgas with finite populations and non - trivial fitness functions @xcite , are notoriously unwieldy @xcite , which is why most theoretical analyses of sgas assume an infinite population @xcite . unfortunately , since the running time and the number of fitness evaluations required by such models is always infinite , their use precludes the identification of computational efficiencies of the sga . in the present case",
    ", we circumvent the difficulty of formally analyzing finite population sgas by exploiting some simple symmetries introduced through our definition of staircase functions , and through our use of a crossover operator with no _",
    "positional bias_. the absence of positional bias in uniform crossover was highlighted by eshelman et al .",
    "essentially , permuting the bits of all strings in each generation using some permutation @xmath66 before crossover , and permuting the bits back using @xmath67 after crossover has no effect on the dynamics of a uga .",
    "another way to elucidate this symmetry is by noting that any homologous crossover operator can be modeled as a string of binary random variables . only in the case of uniform crossover , however , are these random variables all independent and identically distributed .",
    "it is easily seen that loci that are not part of any step of a staircase function are immaterial during fitness evaluation .",
    "the absence of positional bias in uniform crossover entails that such loci can also be ignored during recombination . effectively ,",
    "then , these loci can be ",
    "spliced out \" without affecting the expected average fitness of the population in any generation .",
    "this , and other observations of this type lead to the conclusion below .",
    "let @xmath68 be some uga .",
    "for any staircase function @xmath37 , and any @xmath69 $ ] , let @xmath70 denote the probability that the frequency of _ stage _ @xmath41 of @xmath37 in generation @xmath48 of @xmath71 is @xmath22 .",
    "let @xmath72 be the basic form of @xmath37 .",
    "then , by appreciating the symmetries between the ugas @xmath73 and @xmath71 one can conclude the following :    for any generation @xmath48 , any @xmath40 $ ] , and any @xmath69 $ ] , @xmath74    this conclusion straightforwardly entails that to raise the average fitness of a population to some attainable value ,    1 .",
    "the expected number of generations required is _ constant _ with respect to the span of a staircase function 2 .",
    "the running time required scales _ linearly _ with the span of a staircase function 3 .   the running time and the number of generations",
    "are unaffected by the last two elements of the descriptor of a staircase function    let @xmath37 be some staircase function with basic form @xmath61 ( defined in section [ perfof u ] ) .",
    "then , given the above , the application of @xmath63 to @xmath37 should , discounting deviations due to sampling , produce results identical to those shown in figures [ crosstype=0performance]a and [ crosstype=0performance]c .",
    "we validated this  corollary \" by applying @xmath63 to the staircase function @xmath75 with descriptor @xmath76 where @xmath15 and @xmath16 were randomly generated .",
    "the results are shown in figures [ crosstype=0performance]b and [ crosstype=0performance]d .",
    "note that gross changes to the matrices @xmath15 and @xmath16 , and an increase in the span of the staircase function by two orders of magnitude did not produce any statistically significant changes .",
    "it is hard to think of another algorithm with better scaling properties on this non - trivial class of fitness functions .",
    "let us pause to consider a curious aspect of the behavior of @xmath65 .",
    "figure 1 shows that the growth rate of the average fitness of the population of @xmath65 decreases as evolution proceeds , and the average fitness of the population plateaus at a level that falls significantly short of the maximum expected average population fitness of 15 . as discussed in the previous section , the difficulty of climbing step @xmath41 given stage @xmath44 is non - increasing with respect to @xmath41 .",
    "so , given that @xmath63 successfully identifies the first step of @xmath61 , why does it fail to identify all remaining steps ? to understand why , consider some binary string that belongs to the @xmath33 stage of @xmath61 .",
    "since the mutation rate of @xmath63 is 0.003 , the probability that this binary string will still belong to stage @xmath41 _ after _ mutation is @xmath77 .",
    "this entails that as @xmath41 increases , @xmath65 is less able to  hold \" a population within stage @xmath41 . in light of this observation , one can infer that as @xmath41 increases the sensitivity of @xmath63 to the conditional fitness signal of step @xmath78 given stage @xmath44 will decrease .",
    "this loss in sensitivity explains the decrease in the growth rate of the average fitness of @xmath65 .",
    "we call the  wastage \" of fitness queries described here _",
    "mutational drag_.    to curb mutational drag in ugas , we conceived of a very simple tweak called _",
    "this tweak relies on parameters @xmath79 $ ] , @xmath80 $ ] , and the positive integer @xmath81 . if the _",
    "one - frequency _ or the _ zero - frequency _ of some locus ( i.e. the frequency of the bit 1 or the frequency of the bit 0 , respectively , at that locus ) at the beginning of some generation is greater than @xmath82 , then the locus is flagged .",
    "once flagged , a locus remains flagged as long as the one - frequency or the zero - frequency of the locus is greater than @xmath83 at the beginning of each subsequent generation .",
    "if a flagged locus in some generation @xmath48 has remained constantly flagged for the last @xmath81 generations , then the locus is considered to have passed our fixation test , and is not mutated in generation @xmath48 .",
    "this tweak is called clamping because it is expected that in the absence of mutation , a locus that has passed our fixation test will quickly go to strict fixation , i.e. the one - frequency , or the zero - frequency of the locus will get  clamped \" at one for the remainder of the run .",
    "let @xmath84 denote a uga that uses the clamping mechanism described above and is identical to the uga @xmath63 in every other way .",
    "the clamping mechanism used by @xmath84 is parameterized as follows : @xmath85 , @xmath86 , @xmath87 .",
    "the performance of @xmath88 is displayed in figure [ staircaseclamping]a .",
    "figure [ staircaseclamping]b shows the number of loci that the clamping mechanism left unmutated in each generation .",
    "these two figures show that the clamping mechanism effectively allowed @xmath84 to climb all the stages of @xmath61 .",
    "if the hyperclimbing hypothesis is accurate , then mutational drag is likely to be an issue when ugas are applied to other problems , especially large instances that require the use of long chromosomes . in such cases , the use of clamping should improve performance .",
    "we now present the results of experiments where the use of clamping clearly improves the performance of a uga on large instances of max-3sat and the sherrington kirkpatrik spin glasses problem .",
    "max-@xmath21sat @xcite is one of the most extensively studied combinatorial optimization problems .",
    "an instance of this problem consists of @xmath32 boolean variables , and @xmath89 clauses .",
    "the _ literals _ of the instance are the @xmath32 variables and their negations .",
    "each clause is a disjunction of @xmath21 of the total possible @xmath90 literals .",
    "given some max-@xmath21sat instance , the value of a particular setting of the @xmath32 variables is simply the number of the @xmath89 clauses that evaluate to @xmath91 . in a _ uniform random _",
    "max-@xmath21sat problem , the clauses are generated by picking each literal at random ( with replacement ) from amongst the @xmath90 literals",
    ". generated clauses containing multiple copies of a variable , and ones containing a variable and its negation , are discarded and replaced .",
    "let @xmath92 denote the uga defined in section [ matandmet ] with a population size of 200 ( @xmath93 ) and a per bit mutation probability of 0.01 ( i.e. , @xmath94 ) .",
    "we applied @xmath92 to a randomly generated instance of the uniform random 3sat problem , denoted @xmath95 , with 1000 binary variables and 4000 clauses .",
    "variable assignments were straightforwardly encoded , with each bit in a chromosome representing the value of a single variable .",
    "the fitness of a chromosome was simply the number of clauses satisfied under the variable assignment represented .",
    "figure [ performancemaxsat]a shows the average fitness of the population of @xmath96 over 7000 generations .",
    "note that the growth in the maximum and average fitness of the population tapered off by generation 1000 .",
    "the uga @xmath92 was applied to @xmath95 once again ; this time , however , the clamping mechanism described above was activated in generation 2000 .",
    "the resulting uga is denoted @xmath97 .",
    "the clamping parameters used were as follows : @xmath85 , @xmath98 , @xmath99 .",
    "the average fitness of the population of @xmath97 over 7000 generations is shown in figure [ performancemaxsat]b , and the number of loci that the clamping mechanism left unmutated in each generation is shown in figure [ performancemaxsat]c .",
    "once again , the growth in the maximum and average fitness of the population tapered off by generation 1000 .",
    "however , the maximum and average fitness began to grow once again starting at generation 2200 .",
    "this growth coincides with the commencement of the clamping of loci ( compare figures [ performancemaxsat]b and [ performancemaxsat]c ) .",
    "a sherrington kirkpatrick spin glasses system is a set of coupling constants @xmath100 , with @xmath101 .",
    "given a configuration of  spins \" @xmath102 , where each spin is a value in @xmath103 , the  energy \" of the system is given by @xmath104 .",
    "the goal is to find a spin configuration that minimizes energy . by defining the fitness of some spin configuration @xmath105 to be @xmath106 we remain true to the conventional goal in genetic algorithmics of maximizing fitness .",
    "the coupling constants in @xmath107 can either be drawn from the set @xmath108 , or from the gaussian distribution @xmath109 .",
    "following pelikan et al .",
    "@xcite , we used coupling constants drawn from @xmath109 .",
    "each chromosome in the evolving population straightforwardly represented a spin configuration , with the bits 1 and 0 denoting the spins @xmath110 and @xmath111 respectively matrix @xmath112 representing a population of @xmath32 spin configurations , each of size @xmath7 , the energies of the spin configurations can be expressed compactly as @xmath113 where @xmath107 is an @xmath114 upper triangular matrix containing the coupling constants of the sk system . ] .",
    "the ugas @xmath92 and @xmath115 ( described in the previous subsection ) were applied to a randomly generated sherrington kirkpatrik spin glasses system over 1000 spins , denoted @xmath116 .",
    "the results obtain ( figures [ performancemaxsat]d , [ performancemaxsat]e , and [ performancemaxsat]f ) were similar to the results described in the previous subsection .",
    "it should be said that clamping by itself does not cause decimation .",
    "it merely enforces strict decimation once a high degree of decimation has already occurred along some dimension . in other words , clamping can be viewed as a decimation  lock - in \" mechanism as opposed to a decimation enforcing mechanism .",
    "thus , the occurrence of clamping shown in figure [ performancemaxsat ] entails the occurrence of decimation .",
    "the effectiveness of clamping demonstrated above lends considerable support to the hyperclimbing hypothesis",
    ". more support of this kind can be found in the work of huifang and mo @xcite where the use of clamping improved the performance of a uga on a completely different problem ( optimizing the weights of a quantum neural network ) .",
    "a fair portion of the scientific usefulness of these experiments is attributable to the utter simplicity of clamping .",
    "reasoning within the rubric of the hypercling hypothesis , it not difficult to think of adjustments to the uga that are more effective , but also more complex . from an engineering standpoint",
    "the additional complexity would indeed be warranted . from a scientific perspective , however , the additional complexity is a liability because it might introduce suspicion that the adjustments work for reasons other than the one offered here .",
    "simple genetic algorithms with uniform crossover ( ugas ) perform adaptation by implicitly exploiting one or more features common to the fitness distributions arising in practice . two key questions are i ) what type of features ? and",
    "ii ) how are these features exploited by the uga ( i.e. what heuristic does the uga implicitly implement ) ?",
    "the hyperclimbing hypothesis is the first scientific theory to venture answers to these questions . in doing",
    "so it challenges two commonly held views about the conditions necessary for a genetic algorithm to be effective : first , that the fitness distribution must have a building block structure @xcite .",
    "second , that a genetic algorithm will be ineffective unless it makes use of a  linkage learning \" mechanism @xcite .",
    "support for the hyperclimbing hypothesis was presented in the proof of concept and validation sections of this article .",
    "additional support for this hypothesis can be found in i ) the weakness of the assumptions undergirding this hypothesis ( compared to the building block hypothesis , the hyperclimbing hypothesis rests on weaker assumptions about the distribution of fitness over the search space ; see @xcite ) , ii ) the computational efficiencies of the uga rigorously identified in an earlier work ( * ? ? ?",
    "* chapter 3 ) , and iii ) the utility of clamping reported by huifang and mo @xcite .    if the hyperclimbing heuristic is sound , then the idea of a landscape @xcite is not very useful for intuiting the behavior of ugas .",
    "far more useful is the notion of a _",
    "hyperscape_. landscapes and hyperscapes are both just ways of conceptualizing fitness functions geometrically . whereas landscapes draw one s attention to the interplay between the fitness function and the neighborhood structure of individual points , hyperscapes are about the _ statistical _ fitness properties of individual hyperplanes , and the  spatial \" relationships between hyperplanes ",
    "lower order hyperplanes can _ contain _ higher order hyperplanes , hyperplanes can _ intersect _ each other , and disjoint hyperplanes belonging to the same hyperplane partition can be regarded as _",
    "parallel_. the use of hyperscapes for intuiting ga dynamics originated with holland @xcite and was popularized by goldberg @xcite .",
    "useful as it may be as an explanation for adaptation in ugas , the ultimate value of the hyperclimbing hypothesis may lie in its _ generalizability_. in a previous work @xcite , the notion of a unit of inheritance ",
    "i.e . a gene ",
    "was used to generalize this hypothesis to account for adaptation in simple genetic algorithms with strong linkage between chromosomal loci .",
    "it may be possible for the hyperclimbing hypothesis to be generalized further to account for adaptation in other kinds of evolutionary algorithms , in general , such algorithms may perform adaptation by efficiently identifying and progressively fixing above average  aspects\"_units of selection _ in evolutionary biology speak  of the chromosomes under evolution . the precise nature of the unit of selection in each case would need to be determined .    if the hyperclimbing hypothesis and its generalizations are sound we would finally have a _ unified _ explanation for adaptation in evolutionary algorithms .",
    "fundamental advances in the invention , application , and further analysis of these algorithms can be expected to follow .",
    "the field of global optimization would be an immediate beneficiary . in turn , a range of fields , including machine learning , drug discovery , and operations research stand to benefit .",
    "take machine learning for instance .",
    "machine learning problems that can be tackled today are , in large part , ones that are reducible _ in practice _ to convex optimization problems @xcite .",
    "the identification of an intuitive , efficiently implementable , general purpose meta - heuristic for optimization over rugged , dynamic , and stochastic cost functions promises to significantly extend the reach of this field .",
    "finally , we briefly touch on the interdisciplinary contribution that the hyperclimbing hypothesis makes to a longstanding debate about the units of selection in _ _",
    "populations @xcite .",
    "the material presented in the proof of concept section of this paper , and especially the material in chapter 3 of an earlier work @xcite suggest that the most basic unit of selection is , not the individual gene as is commonly thought , but a small _ set _ of genes .",
    "chapter 3 of the earlier work @xcite demonstrates conclusively that as a unit of selection , the latter is not always reducible to instances of the former . in other words",
    ", it gives the lie to the common refrain in population genetics that multi - gene interactions can be ignored when studying adaptation in biological populations because  additive effects are the basis for selection \" @xcite .",
    "introducing new terminology and notation where necessary , we present a formal description of the hyperclimbing heuristic .",
    "for any positive integer @xmath7 , let @xmath17 $ ] denote the set @xmath19 , and let @xmath20 denote the set of all binary strings of length @xmath7 .",
    "for any binary string @xmath117 , let @xmath118 denote the @xmath33 bit of @xmath117 .",
    "we define the _ schema partition model set of @xmath7 _ , denoted @xmath119 , to be the power set of @xmath17 $ ] , and define the _ schema model set of @xmath7 _ , denoted @xmath120 , to be the set @xmath121 . let @xmath122 and @xmath123 be the set of all schemata and schema partitions @xcite , respectively , of the set @xmath20 . given some schema @xmath124 , let @xmath125 denote the set @xmath126\\,|\\ , \\forall x , y\\in\\gamma , x_i = y_i\\}$ ] .",
    "we define a _ schema modeling function _ @xmath127 as follows : for any @xmath128 , @xmath129 maps @xmath130 to the function @xmath131 such that for any @xmath132 and any @xmath133 , @xmath134 .",
    "we define a _ schema partition modeling function _ @xmath135 as follows : for any @xmath136 , @xmath137 , where @xmath138 . as @xmath139 for all @xmath140 ,",
    "the schema partition modeling function is well defined .",
    "it is easily seen that @xmath141 and @xmath142 are both bijective . for any schema model @xmath143",
    ", we denote @xmath144 by @xmath145 .",
    "likewise , for any schema partition model @xmath146 we denote @xmath147 by @xmath148 .",
    "going in the forward direction , for any schema @xmath128 , we denote @xmath149 by @xmath150 .",
    "likewise , for any schema partition @xmath136 , we denote @xmath151 by @xmath152 .",
    "we drop the @xmath7 when going in this direction , because its value in each case is ascertainable from the operand . for any schema partition @xmath153 , and any schema @xmath138 , the _ order _ of @xmath153 , and the _ order _ of @xmath130 is @xmath154 .    for any two schema partitions",
    "@xmath155 , we say that @xmath156 and @xmath157 are _ orthogonal _ if the models of @xmath156 and @xmath157 are disjoint ( i.e. , @xmath158 ) .",
    "let @xmath156 and @xmath157 be orthogonal schema partitions in @xmath123 , and let @xmath159 and @xmath160 be two schemata .",
    "then the concatenation @xmath161 denotes the schema partition @xmath162 , and the concatenation @xmath163 denotes the schema @xmath164 such that for any @xmath165 , @xmath166 , and for any @xmath167 , @xmath168 . since @xmath169 and @xmath170 are disjoint , @xmath163 is well defined .",
    "let @xmath156 and @xmath157 be orthogonal schema partitions , and let @xmath159 be some schema .",
    "then @xmath171 denotes the set @xmath172 .",
    "given some ( possibly stochastic ) fitness function @xmath37 over the set @xmath20 , and some schema @xmath128 , we define the fitness of @xmath130 , denoted @xmath173 , to be a random variable that gives the fitness value of a binary string drawn from the uniform distribution over @xmath130 . for any schema partition @xmath174 , we define the _ effect _ of @xmath153 , denoted @xmath175 $ ] , to be the variance of the expected fitness values of the schemata of @xmath153 . in other words , @xmath176=2^{-|\\langle\\gamma\\rangle|}\\sum_{\\gamma\\in\\gamma}\\left(\\textbf{e}\\pmb[f^{(f)}_\\gamma\\pmb]-2^{-|\\langle\\gamma\\rangle|}\\sum_{\\xi\\in\\gamma}\\textbf{e}\\pmb[f^{(f)}_\\xi\\pmb]\\right)^2\\ ] ]    let @xmath177 be schema partitions such that @xmath178 .",
    "it is easily seen that @xmath179\\leq\\textbf{effect } \\pmb[\\gamma_2\\pmb ] $ ] . with equality if and only if @xmath180 for all schemata @xmath159 and @xmath160 such that @xmath181 .",
    "this condition is unlikely to arise in practice ; therefore , for all practical purposes , the effect of a given schema partition decreases as the partition becomes coarser .",
    "the schema partition @xmath182\\,\\rrbracket_\\ell$ ] has the maximum effect .",
    "let @xmath153 and @xmath183 be two orthogonal schema partitions , and let @xmath138 be some schema .",
    "we define the conditional effect of @xmath183 _ given _",
    "@xmath130 , denoted @xmath184 $ ] , as follows : @xmath185=2^{-|\\langle\\psi\\rangle|}\\sum_{\\psi\\in\\psi}\\left(\\textbf{e}\\pmb[f^{(f)}_{\\gamma\\psi}\\pmb]-2^{-|\\langle\\psi\\rangle|}\\sum_{\\xi\\in\\psi}\\textbf{e}\\pmb[f^{(f)}_{\\gamma\\xi}\\pmb]\\right)^2\\ ] ]    a hyperclimbing heuristic works by evaluating the fitness of samples drawn initially from the uniform distribution over the search space .",
    "it finds a coarse schema partition @xmath153 with a non - zero effect , and limits future sampling to some schema @xmath130 of this partition whose average sampling fitness is greater then the mean of the average sampling fitness values of the schemata in @xmath153 . by limiting future sampling in this way",
    ", the heuristic raises the expected fitness of all future samples .",
    "the heuristic limits future sampling to some schema by fixing the defining bits @xcite of that schema in all future samples .",
    "the unfixed loci constitute a new ( smaller ) search space to which the hyperclimbing heuristic is then recursively applied .",
    "crucially , coarse schema partitions orthogonal to @xmath153 that have undetectable _ unconditional _ effects , may have detectable effects when conditioned by @xmath130 .",
    "the stages of a staircase function can be visualized as a progression of nested _ _ hyperplanes _ _ , with hyperplanes of higher order and higher expected fitness nested within hyperplanes of lower order and lower expected fitness . by choosing an appropriate scheme for mapping a high - dimensional hypercube onto a two dimensional plot , it becomes possible to visualize this progression of hyperplanes in two dimensions ( appendix _ [ visualizing ] _ ) .",
    "a _ refractal addressing system _ is a tuple @xmath186 , where @xmath89 and @xmath32 are positive integers , and @xmath187 and @xmath188 are matrices with @xmath89 rows and @xmath32 columns such that the elements in @xmath187 and @xmath188 are distinct positive integers from the set @xmath189 $ ] , such that for any @xmath190 $ ] , @xmath21 is in @xmath191 is not in @xmath188 ( i.e. the elements of @xmath189 $ ] are evenly split between @xmath187 and @xmath188 ) .",
    "the refractal addressing system @xmath192 determines how the set @xmath193 gets mapped onto a @xmath194 grid of pixels . for any bitstring @xmath195 the @xmath196-address ( a tuple of two values , each between 1 and @xmath197 ) of the pixel representing @xmath117 is given by algorithm [ fractaladdressing ] .",
    "* example : * let @xmath198 be the descriptor of a staircase function @xmath37 , such that @xmath199\\ ] ] let @xmath200 be a refractal addressing system such that @xmath201 , @xmath202 , @xmath203 , and @xmath204",
    ". a _ _ refractal plot _ _ of @xmath37 is shown in figure [ ladderfunctionvis]a .",
    "this image was generated by querying @xmath37 with every bitstring in @xmath205 , and plotting the resulting fitness value of each chromosome as a greyscale pixel at the chromosome s refractal address under the addressing system @xmath206 .",
    "the fitness values returned by @xmath37 have been scaled to use the full range of possible greyscale shades .",
    "lighter shades signify greater fitness .",
    "the four stages of @xmath37 can easily be discerned .",
    "suppose we generate another refractal plot of @xmath37 using the same addressing system @xmath206 , but a different random number generator seed ; because @xmath37 is stochastic , the greyscale value of any pixel in the resulting plot will then most likely differ from that of its homolog in the plot shown in figure [ ladderfunctionvis]a . nevertheless , our ability to discern the stages of @xmath37 would not be affected .",
    "in the same vein , note that when specifying @xmath206 , we have not specified the values of the last two rows of @xmath187 and @xmath188 ; given the definition of @xmath37 it is easily seen that these values are immaterial to the discernment of its  staircase structure \" .",
    "@xmath207 @xmath208 @xmath209    on the other hand , the values of the first two rows of @xmath187 and @xmath188 are highly relevant to the discernment of this structure .",
    "figure [ ladderfunctionvis]b shows a refractal plot of @xmath37 that was obtained using a refractal addressing system @xmath210 such that @xmath211 , @xmath212 , @xmath213 , and @xmath214 .",
    "nothing remotely resembling a staircase is visible in this plot .",
    "the lesson here is that the discernment of the fitness staircase inherent within a staircase function depends critically on how one ` looks ' at this function . in determining the ` right ' way to look at @xmath37",
    "we have used information about the descriptor of @xmath37 , specifically the values of @xmath215 , and @xmath15 .",
    "this information will not be available to an algorithm which only has query access to @xmath37 .",
    "even if one knows the right way to look at a staircase function , the discernment of the fitness staircase inherent within this function can still be made difficult by a low value of the increment parameter .",
    "figure [ fractalplot2 ] lets us visualize the decrease in the salience of the fitness staircase of @xmath37 that accompanies a decrease in the increment parameter of this staircase function . in general , a decrease in the increment results in a decrease in the ` contrast ' between the stages of that function , and an increase the amount of computation required to discern these stages .",
    "let @xmath7 be some positive integer . given some ( possibly stochastic ) fitness function @xmath37 over the set @xmath20 , and some schema @xmath216 we define the _ fitness signal _ of @xmath130 , denoted @xmath217 , to be @xmath218-\\textbf{e}\\pmb[f^{(f)}_{\\mathfrak{b_\\ell}}\\pmb]$ ] .",
    "let @xmath219 and @xmath220 be schemata in two orthogonal schema partitions .",
    "we define the _ conditional fitness signal of _ @xmath221 _ given _",
    "@xmath222 , denoted @xmath223 , to be the difference between the fitness signal of @xmath163 and the fitness signal of @xmath222 , i.e. @xmath224 .",
    "given some staircase function @xmath37 we denote the @xmath33 step of @xmath37 by @xmath225 and denote the @xmath33 stage of @xmath37 by @xmath226 .",
    "let @xmath37 be a staircase function with descriptor @xmath11 .",
    "for any integer @xmath40 $ ] , the fitness signal of @xmath225 is one measure of the difficulty of  directly \" identifying step @xmath41 ( i.e. , the difficulty of determining step @xmath41 without first determining any of the preceding steps @xmath227 ) .",
    "likewise , for any integers @xmath228 in @xmath229 $ ] such that @xmath230 , the conditional fitness signal of step @xmath41 given stage @xmath231 is one measure of the difficulty of  directly \" identifying step @xmath41 given stage @xmath231 ( i.e. the difficulty of determining @xmath225 given @xmath232 without first determining any of the intermediate steps @xmath233 .    for any @xmath40 $ ] , by theorem 1 ( see below ) , the unconditional fitness signal of step @xmath41 is @xmath234 this value decreases exponentially with @xmath41 and @xmath9 .",
    "it is reasonable , therefore , to suspect that the direct identification of step @xmath41 of @xmath37 quickly becomes infeasible with increases in @xmath41 and @xmath9 .",
    "consider , however , that by corollary 1 , for any @xmath235 , the _ conditional _ fitness signal of step @xmath41 _ given _ stage @xmath236 is @xmath14 , a _",
    "constant _ with respect to @xmath41 .",
    "therefore , if some algorithm can identify the first step of @xmath37 , one should be able to use it to indirectly identify all remaining steps in time and fitness queries that scale linearly with the height of @xmath37 .",
    "the proof of the claim follows by induction on @xmath41 .",
    "the base case , when @xmath239 is easily seen to be true from the definition of a staircase function . for any @xmath240",
    ", we assume that the hypothesis holds for @xmath241 , and prove that it holds for @xmath242 .",
    "for any @xmath243 $ ] , let @xmath244 denote the schema partition containing step @xmath41 .",
    "the fitness signal of stage @xmath245 is given by @xmath246 @xmath247 where the first term of the right hand side of the above expression follows from the inductive hypothesis , and the second term follows from the definition of a staircase function .",
    "manipulation of this expression yields @xmath248 which , upon further manipulation , yields @xmath249 .",
    "this completes the proof of the claim . to prove the lemma",
    ", we must prove that @xmath22 is zero . by claim [ fgh ] , the fitness signal of the first stage is @xmath250 . by the definition of a staircase function then,@xmath251 which reduces to @xmath252 clearly , @xmath22 is zero .",
    "@xmath253              the proof of the claim follows by induction on @xmath41 .",
    "the proof for the base case @xmath259 is as follows : @xmath260 for any @xmath261 $ ] we assume that the hypothesis holds for @xmath241 , and prove that it holds for @xmath262 .",
    "@xmath263 @xmath264 @xmath265 @xmath266 where the first and last equalities follow from the definition of a staircase function . using lemma 1 and the inductive hypothesis ,",
    "the right hand side of this expression can be seen to equal @xmath267 which , upon manipulation , yields @xmath268 .    for a proof of the theorem ,",
    "observe that step 1 and stage 1 are the same schema .",
    "so , by lemma 1 , @xmath269 .",
    "thus , the theorem holds for @xmath270 . for any @xmath235 , @xmath271 @xmath272 where the last equality follows from the definition of a staircase function . using lemma 1 and claim [ sfgs ] , the right hand side of this equality",
    "can be seen to equal @xmath273 @xmath274"
  ],
  "abstract_text": [
    "<S> the _ hyperclimbing hypothesis _ is a hypothetical explanation for adaptation in genetic algorithms with uniform crossover ( ugas ) . </S>",
    "<S> hyperclimbing is an intuitive , general - purpose , non - local search heuristic applicable to discrete product spaces with rugged or stochastic cost functions . the strength of this heuristic lies in its insusceptibility to local optima when the cost function is deterministic , and its tolerance for noise when the cost function is stochastic . </S>",
    "<S> hyperclimbing works by decimating a search space , i.e. by iteratively fixing the values of small numbers of variables . </S>",
    "<S> the hyperclimbing hypothesis holds that ugas work by implementing _ </S>",
    "<S> efficient _ hyperclimbing . </S>",
    "<S> proof of concept for this hypothesis comes from the use of a novel analytic technique involving the exploitation of algorithmic symmetry . </S>",
    "<S> we have also obtained experimental results that show that a simple tweak inspired by the hyperclimbing hypothesis dramatically improves the performance of a uga on large , random instances of max-3sat and the sherrington kirkpatrick spin glasses problem . </S>"
  ]
}
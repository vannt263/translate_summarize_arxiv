{
  "article_text": [
    "hoare logic is an axiomatic system of proving programs correct @xcite , which has had a significant impact upon the methods of both designing and verifying programs @xcite .",
    "hoare logic for the set @xmath5 of while - programs with the first - order logical language @xmath6 and the first - order specification @xmath7 is denoted by @xmath8 .",
    "of special interest is the completeness of hoare logic over nonstandard models .",
    "the approach of using nonstandard models @xcite in investigating floyd - hoare logic was started in @xcite , and pursued , refined by many authors since then , e.g. , csirmaz @xcite , andreka et.al @xcite , hortal - gonzlez et.al @xcite , and pasztor @xcite .",
    "( for an extensive literature , see e.g. the references in @xcite . )",
    "it s noteworthy that the hungary semantics in @xcite is defined over a particular class of infinite sequences of vectors of numbers that should satisfy the induction axioms for all formulas , and floyd logic is logically complete w.r.t .",
    "this semantics .",
    "in addition , according to the floyd - hoare principle @xcite , which states that the semantics of a programming language can be formally specified by the axioms and inference rules for proving the correctness of programs written in this language , an axiomatic semantics of while - programs has been suggested by bergstra and tucker @xcite for which hoare logic is logically complete .",
    "observe that the hungary semantics and axiomatic semantics are so general that they are absent either from mathematical elegance or from practical usefulness .",
    "it would be interesting , from a new perspective , to exhibit a not only mathematically elegant but also practically useful nonstandard semantics . in what follows ,",
    "unless otherwise stated , let @xmath6 be the logical language of peano arithmetic @xmath1 , and let @xmath0 be the standard model of @xmath1 .",
    "the definability theorem ( * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* chapter 16 ) says that a function in @xmath0 is computable ( or equivalently @xmath0-computable @xcite ) iff it is @xmath2-definable in @xmath0 ( i.e. , the graph relation of this function is @xmath2 ) , which means that a computable function should be  simple \" .",
    "the proof of this theorem only considers a finite computation in @xmath0 , which can be encoded as a natural number in a uniform way . in nonstandard models @xmath4 of @xmath1 @xcite , a while - program",
    "@xmath3 produces a ( pseudo-@xmath4-computable ) function @xmath9 .",
    "intuitively we hope that @xmath10 is simple in @xmath4 , that is , @xmath2-definable in @xmath4 .",
    "however , it is hopeless , because for the while - program @xmath11 , @xmath10 is not @xmath2-definable , since the domain of @xmath10 is @xmath12 , the standard part of @xmath4 , which is not arithmetical by robinson s overspill lemma ( * ? ? ? * ; * ? ? ?",
    "* ; * ? ? ?",
    "* lemma 25.8 ) .",
    "the problem consists in the interpretation of while - programs in @xmath4 , where the termination uses the finiteness in @xmath0 ( i.e. the usual finiteness ) , which is not the finiteness in @xmath4 .",
    "we shall introduce the concept of @xmath4-finiteness for the finiteness in @xmath4 and show that every @xmath4-finite sequence of vectors of numbers of @xmath4 can be coded uniformly as a number of @xmath4 .",
    "then a new interpretation of while - programs @xmath3 in all models @xmath4 of @xmath1 such that the termination of @xmath3 uses @xmath4-finiteness will be given ( the new input - output relation of @xmath3 in @xmath4 is denoted by @xmath13 in order to distinguish from the standard one @xmath14 ) .",
    "it will be shown that @xmath13 produces a simple function @xmath15 in @xmath4 .",
    "on the other hand , there exists a @xmath2-formula @xmath16 , dependent on @xmath3 but independent of any model of @xmath1 , that defines an ( abstract ) function @xmath17 in @xmath1 , i.e. , @xmath18 .",
    "( actually the formula @xmath19 can be chosen as one defining the @xmath0-computable function @xmath20 produced by @xmath3 in @xmath0 . )",
    "it will be found that the interpretation of @xmath21 in @xmath4 coincides with @xmath22 , for every @xmath23 .",
    "to illustrates this , the following commutative diagram is shown .",
    "+    thus , the new interpretation of while - programs extend @xmath0-computability from @xmath0 to nonstandard models of @xmath1 with the uniform @xmath2-definability . we can now define @xmath4-computability to be the computability induced by the new semantics of while - programs in @xmath4 . in subsection [ comparison_with_the_standard_semantics ] , the new semantics of while - programs",
    "is compared with the standard semantics ; and example [ example_for_two_semantics ] shows that @xmath24 @xmath25 @xmath26 @xmath27 is the unique sequence of vectors of @xmath4 computable by @xmath11 with the input @xmath28 for the new semantics ( i.e. , @xmath29 ) .",
    "we shall define , based on the new semantics of while - programs , a new semantics of hoare logic in nonstandard models of @xmath1 .",
    "it will be proved that for any @xmath30 , the standard axiom system of @xmath8 is sound and complete w.r.t . the new semantics .",
    "it will be established , in @xmath1 , that the hungary semantics and axiomatic semantics coincide with the new semantics of while - programs , and that the axiom system of floyd logic is essentially the same as that of hoare logic . moreover",
    ", the reduction from @xmath8 to @xmath31 with @xmath32 follows from the new completeness theorem of @xmath8 , and the usefulness of the nonstandard semantics in hoare logic is discussed .",
    "finally , a detailed and thorough discussion of the completeness issues on hoare logic is given .",
    "the rest of this paper is structured as follows : some preliminary results are presented in section 2 ; the concept of @xmath4-finiteness is introduced in section 3 ; the definition of the new semantics of while - programs , and comparison with the standard and hungary semantics are given in section 4 ; the soundness and completeness of @xmath8 w.r.t .",
    "the new semantics , reduction from @xmath8 to @xmath31 , and comparison with floyd logic are shown in section 5 ; the comparison with axiomatic semantics , and usefulness of nonstandard semantics in hoare logic are shown in section 6 ; remarks on the completeness issues of hoare logic are given in section 7 ; section 8 concludes the paper .",
    "first some notations are introduced : in syntax , we write @xmath33 to denote the negation , conjunction , disjunction , conditional , biconditional connectives and the universal , existential quantifiers ; in semantics , we write @xmath34 to denote the corresponding connectives and quantifiers .",
    "let @xmath6 be the logical language of @xmath1 with the signature @xmath35 . for simplicity",
    ", the sum of @xmath36 with itself @xmath37 times is abbreviated as @xmath37 .",
    "we use @xmath37 to denote both a closed term and a natural number , and use @xmath4 to denote both a model and its domain , which will be clear from the context .",
    "the formula @xmath38 stands for the result of simultaneously substituting @xmath39 for free occurrences of @xmath40 in @xmath41 ; and @xmath38 will be denoted @xmath42 if the default variable @xmath40 is obvious .",
    "the denotation of a term @xmath39 at an assignment @xmath43 ( for all the first order variables ) over a model @xmath4 of @xmath6 , denoted @xmath44 , receives the standard meaning .",
    "the satisfaction of a formula @xmath45 at an assignment @xmath43 over a model @xmath4 of @xmath6 , denoted @xmath46 , is defined as usual ; the satisfaction of @xmath41 in @xmath4 , denoted @xmath47 , is defined such that for any assignment @xmath43 over @xmath4 , @xmath48 ; the satisfaction of a theory @xmath7 in @xmath4 , denoted @xmath49 , is defined such that for any @xmath50 , @xmath47 ; the satisfaction of @xmath41 in a theory @xmath7 , denoted @xmath51 , is defined such that for any @xmath49 , @xmath47 . and",
    "the derivation of a formula @xmath45 from a theory @xmath7 , denoted @xmath52 , is defined as usual .",
    "the set of all theorems of @xmath7 , denoted @xmath53 , is defined to be @xmath54 . from peano",
    "s axioms , one can deduce the induction axiom scheme @xmath55 , the bounded induction scheme @xmath56 and the least - number principle @xmath57 , where @xmath58 .",
    "gdel s completeness theorem implies that for any @xmath7 , @xmath52 iff @xmath51 .",
    "the proof of this theorem shows that for any @xmath59 and any @xmath45 , if @xmath60 then there is a countable model @xmath4 of @xmath6 such that @xmath49 and @xmath61 .",
    "this means that @xmath51 is equivalent to saying that for any countable @xmath49 , @xmath47 ( the implication from left to right is trivial ; for the opposite direction , assume that @xmath62 , by gdel s completeness theorem @xmath63 , then there exists a countable @xmath49 such that @xmath64 , a contradiction ) , so in this paper only the countable models will be considered .",
    "let @xmath65 be the set consisting of all natural numbers together with all pairs @xmath66 where @xmath67 is a rational number and @xmath68 an integer .",
    "let @xmath69 be the order on @xmath65 in which the natural numbers come first , in their usual order , and the pairs afterward , ordered as follows : @xmath70 iff @xmath71 in the usual order on rational numbers , or @xmath72 and @xmath73 in the usual order on integers .",
    "[ subsection ]    [ order_relation_in_nonstandard_models ] the order relation on any countable nonstandard model of @xmath1 is isomorphic to the ordering @xmath69 of @xmath65 .    by a @xmath74-formula ( or alternatively rudimentary formula ) of @xmath6",
    "we mean a formula built up from atomic formulas using only negation , conjunction , disjunction , and bounded quantifications @xmath75 and @xmath76 , where @xmath39 is a term of @xmath6 ( possibly involving free variables ) .",
    "( conditionals and biconditionals are allowed , too , since these officially are just abbreviations for certain constructions involving negation , conjunction , and disjunction .",
    "so are the bounded quantifiers @xmath77 and @xmath78 , since these are equivalent to @xmath79 and @xmath80 . ) by a @xmath2-formula ( or alternatively @xmath81-rudimentary formula ) we mean a formula of form @xmath82 where @xmath83 is a @xmath74-formula .",
    "it holds , in @xmath1 , that every generalized @xmath2-formula , obtainable from @xmath74-formulas by conjunction , disjunction , bounded quantifications , and unbounded existential quantification , is logically equivalent to a @xmath2-formula .",
    "( the equivalence in @xmath0 is shown in ( * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* proposition 16.10 ) , and similarly for nonstandard models . )",
    "[ subsection ]    [ basic_functions ] the following definitions ( cf .",
    "* p54 ) , ( * ? ? ?",
    "* p42 ) ) are thought of as taking place in @xmath1 .",
    "+ ( a ) @xmath84(the integer part of @xmath40 divided by @xmath85 ) is the two - place function @xmath86 ( b ) @xmath87(the remainder on dividing @xmath40 by @xmath85 ) is given by @xmath88 ( c ) @xmath89 is defined by @xmath90 ( d ) @xmath91 = the unique @xmath85 s.t . @xmath92 .",
    "the pairing function and unpairing functions in ( * ? ? ? * p45 ) build a one - to - one correspondence between the set of ordered pairs of natural numbers and the set of natural numbers , and similarly for nonstandard models of @xmath1 .",
    "we formulate this by the following .",
    "[ basic_functions]definition    let @xmath93 and let @xmath94 .",
    "we define @xmath95 , @xmath96 and @xmath97 by @xmath98    [ basic_functions]lemma    [ basic_properties_of_extended_pairing_functions ] @xmath1 proves that    \\(a ) @xmath99 ;    \\(b ) @xmath100 ;    \\(c ) @xmath101 .",
    "notice that @xmath102 is called extended pairing function and @xmath96 , @xmath97 extended unpairing functions , each of which extends the classical counterpart from @xmath0 to nonstandard models of @xmath1 . for notational convenience , @xmath103",
    "is denoted by @xmath104 .",
    "the extended pairing and unpairing functions can be generalized to @xmath37-tuples ( for each @xmath105 ) by setting @xmath106 and @xmath107 .",
    "[ basic_functions]definition    [ extended_beta_function ] define @xmath108 to be @xmath109    such a function @xmath108 is usually called g@xmath110del s @xmath111-function , but in the present context we obviously prefer the more suggestive term extended @xmath111-function .",
    "it s easy to check ,",
    "using definition [ extended_beta_function ] , that for every @xmath23 and every @xmath112 , there exists @xmath113 such that @xmath114 . by the chinese remainder theorem , @xmath108",
    "can be used to code every finite sequence of natural numbers by choosing a suitable ( but not unique ) value for @xmath40 : for every finite sequence @xmath115 of natural numbers , there exists a natural number @xmath116 such that @xmath117 for all @xmath118 ( * ? ? ?",
    "* theorem 2.4 ) .",
    "the following lemma formalizes this inside @xmath1 .",
    "[ basic_functions]lemma    [ basic_properties_of_extended_beta_function ] @xmath1 proves that    \\(a ) @xmath119 ;    \\(b ) @xmath120 .    by lemma [ basic_properties_of_extended_beta_function ] , using mathematical induction , it follows that    [ basic_functions]lemma    [ godel_lemma ] let @xmath23 , and let @xmath105 with @xmath121 , @xmath122 , @xmath123 , @xmath124 .",
    "then there exists @xmath112 such that @xmath125 for all @xmath126 .",
    "note that these extended coding functions are all definable in @xmath1 by @xmath74-formulas of @xmath6 .",
    "based on the first - order logical language @xmath6 , together with the program constructs ( @xmath127 , @xmath128 , @xmath129 , @xmath130 , @xmath131 , @xmath132 , @xmath133 , @xmath134 , @xmath135 ) , a while - program @xmath3 is defined by @xmath136 , where an expression @xmath137 is defined by @xmath138 , and a boolean expression @xmath139 is defined by @xmath140 .",
    "the set of all such while - programs is denoted @xmath5 . without further declaration , for a while - program @xmath141 , the vector @xmath142 of all @xmath37 program variables @xmath143 @xmath144 @xmath26 @xmath145 occurring in @xmath3",
    "will be denoted by @xmath146 ; the vector @xmath147 of @xmath37 numbers @xmath148 @xmath149 @xmath26 @xmath150 will be denoted by @xmath151 ; the connectives will be assumed to distribute over the components of the vectors ( for instance , @xmath152 means @xmath148",
    "@xmath149 @xmath26 @xmath150 , @xmath153 means @xmath154 , and @xmath155 means @xmath156 ) . for an assignment @xmath43 over a model @xmath4 of @xmath6 ,",
    "let @xmath157 be the vector of elements of @xmath4 assigned to @xmath146 at @xmath43 , and let @xmath158 be an assignment as @xmath43 except that @xmath159 .",
    "for every @xmath141 and every model @xmath4 of @xmath6 , the standard input - output relation @xmath14 of @xmath3 in @xmath4 is a binary relation on the set of assignments over @xmath4 inductively defined as follows :    * @xmath160 @xmath161 @xmath162 ; * @xmath163 @xmath161 @xmath164 , where @xmath165 @xmath161 @xmath166 @xmath167 @xmath168 ; * @xmath169 @xmath161 @xmath170 @xmath167 @xmath171 @xmath172 @xmath173 @xmath167 @xmath174 ; * @xmath175 @xmath161 @xmath176 , @xmath177 @xmath178 @xmath167 @xmath179 @xmath167 @xmath180 @xmath167 @xmath181 @xmath167 @xmath182 .    given @xmath141 and a model @xmath4 of @xmath6 , @xmath14 produces a vectorial function @xmath183 such that for any @xmath184 , @xmath185 . given a model @xmath4 of @xmath6 and an asserted program @xmath186 , @xmath186 is satisfied at @xmath4 w.r.t .",
    "the standard semantics , denoted @xmath187 , iff for any assignment @xmath43 over @xmath4 , @xmath188 .",
    "given a theory @xmath7 and an asserted program @xmath186 , @xmath186 is satisfied at @xmath31 w.r.t .",
    "the standard semantics , denoted by @xmath189 , iff for any @xmath49 , @xmath190 .",
    "hoare logic @xmath8 for the set @xmath5 of while - programs with the first - order logical language @xmath6 and the first - order specification @xmath7 has the standard axioms and inference rules ( * ? ? ?",
    "* section 2 ) : let @xmath191 , and let @xmath192 @xmath193 @xmath194 @xmath195 .",
    "\\(1 ) assignment axiom scheme : for @xmath137 an expression of @xmath6 and @xmath40 a variable of @xmath6 , the asserted program @xmath196 is an axiom .",
    "\\(2 ) composition rule : @xmath197",
    "\\(3 ) conditional rule : @xmath198    \\(4 ) iteration rule : @xmath199    \\(5 ) consequence rule : @xmath200    and , in connection with ( 5 ) ,    \\(6 ) specification axiom : each theorem of @xmath31 is an axiom .    we write @xmath201 to denote that the asserted program @xmath186 is provable from @xmath8 . by the logical completeness of @xmath8 w.r.t .",
    "the standard semantics is meant that for any asserted program @xmath186 , @xmath201 iff @xmath189 .",
    "to begin with , the notion of pseudo-@xmath4-finiteness is introduced .",
    "[ section ]    let @xmath23 .",
    "a sequence of numbers of @xmath4 is pseudo-@xmath4-finite if it is indexed by an initial segment of @xmath4 .",
    "that is , every sequence of numbers @xmath202 with @xmath113 is pseudo-@xmath4-finite .",
    "the sequences as defined above behave like finite sequences as far as the underlying model is concerned , but they may be infinite sequences when viewed from the outside world : let @xmath203 be nonstandard ; the pseudo-@xmath4-finite sequence of numbers @xmath204 , @xmath36 , @xmath123 , @xmath205 is infinite .",
    "in particular , every pseudo-@xmath0-finite ( or equivalently finite ) sequence of natural numbers can be coded as a natural number by extended @xmath111-function . however",
    ", this property does nt hold for nonstandard models .",
    "[ definition_of_pseudo_m_finiteness]proposition    [ pseudo_@xmath4_finite_is_uncodified ] every countable nonstandard model @xmath4 of @xmath1 has a pseudo-@xmath4-finite sequence of numbers that ca nt be coded as a number by extended @xmath111-function .",
    "let @xmath113 be nonstandard .",
    "we consider the set @xmath206",
    "@xmath207 @xmath208 @xmath209 @xmath210 , @xmath211 , @xmath123 , @xmath212 @xmath213 @xmath214 for each @xmath215 , @xmath216 or @xmath36 @xmath217 of pseudo-@xmath4-finite sequences of numbers of @xmath4 .",
    "it s obvious that @xmath206 is uncountable .",
    "however , @xmath4 has only a countable number of elements used as codes .",
    "this means that one of elements of @xmath206 ca nt be coded as a number of @xmath4 by extended @xmath111-function .",
    "[ definition_of_pseudo_m_finiteness]definition    [ definition_of_m_finiteness ] let @xmath23 . a pseudo-@xmath4-finite sequence @xmath218",
    ", @xmath219 , @xmath123 , @xmath220 of vectors of numbers of @xmath4 is @xmath4-finite if there exist @xmath221 ( the arguments @xmath146 , @xmath85 could be dummy ) and @xmath152 such that for all @xmath222 smaller than or equal to @xmath205 there is a unique @xmath223 satisfying @xmath224 , and this @xmath225 happens to be @xmath226 , in symbols @xmath227 .    for the sequence @xmath228 , @xmath229 , @xmath123 , @xmath230 with @xmath105 , by lemmas [ basic_properties_of_extended_pairing_functions ] and [ godel_lemma ]",
    ", there exist @xmath231 and @xmath232 such that @xmath233 . for the sequence @xmath204 , @xmath36 , @xmath123 , @xmath205 with @xmath203 being nonstandard , there exist @xmath234 and @xmath232 such that @xmath235 .",
    "observe from the above that the concept of finiteness is equal to that of @xmath0-finiteness ( in symbols , finiteness @xmath207 @xmath0-finiteness ) and , for any nonstandard @xmath23 , the concept of finiteness is strictly less than that of @xmath4-finiteness ( in symbols , finiteness @xmath209 @xmath4-finiteness ) .",
    "the following theorem shows that for any @xmath23 , every @xmath4-finite sequence of vectors of numbers of @xmath4 can be coded as a number of @xmath4 by extended coding functions .",
    "[ definition_of_pseudo_m_finiteness]theorem    [ code_generated_by_formulas ] let @xmath236 and @xmath237 .",
    "then we have @xmath238    fix @xmath239 .",
    "it suffices to prove that @xmath240 by induction on @xmath85 in the formula @xmath241 .",
    "suppose that @xmath242 for @xmath243 .",
    "then there exists a unique @xmath223 such that @xmath244 . using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ]",
    ", there is @xmath112 such that @xmath245 .",
    "it follows that @xmath246 .",
    "thus we have @xmath247    as the induction hypothesis , suppose @xmath248 for any @xmath249",
    ". then we consider the case for @xmath250 .",
    "assume that @xmath251 .",
    "that is , there exists a unique sequence @xmath252 such that @xmath253 . by the induction hypothesis there",
    "exists @xmath112 such that @xmath254 .",
    "that is , @xmath255 .",
    "using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] , there exists @xmath256 such that @xmath257 and hence we have @xmath258 , so it follows that @xmath259    it s noteworthy , in definition [ definition_of_m_finiteness ] , that the uniqueness condition @xmath260 in the assertion @xmath227 is extremely important : let @xmath261 ; each element @xmath262 of @xmath206 , as defined in the proof of proposition [ pseudo_@xmath4_finite_is_uncodified ] , satisfies the property @xmath263 for arbitrary @xmath152 ; yet there exists such an element that ca nt be coded as a number of @xmath4 .    defining @xmath264 by @xmath231 , it s easy to see that every pseudo-@xmath4-finite sequence of vectors of numbers of @xmath4 coded as a number of @xmath4 by extended coding functions is @xmath4-finite .",
    "hence the concept of @xmath4-finiteness captures precisely what can be coded in @xmath4 by extended coding functions ; so it could be taken as an ideal extension to the usual concept of finiteness .",
    "we can say , in the sense of the above , that theorem [ code_generated_by_formulas ] extends gdel s lemma ( cf .",
    "lemma [ godel_lemma ] ) into a general setting .",
    "[ subsection ]    [ x_semantics_of_while_programs ] let @xmath23 , and @xmath141 with program variables @xmath265 .",
    "the new input - output relation @xmath13 for @xmath3 on the set of assignments over @xmath4 , and the formula @xmath16 for @xmath3 , where @xmath266 is disjoint from @xmath146 , are defined inductively in ( a ) and ( b ) as follows :    assignment : @xmath267 .",
    "\\(a ) @xmath268 @xmath161 @xmath269 = @xmath270 .",
    "\\(b ) @xmath271 .",
    "composition : @xmath272 .",
    "\\(a ) @xmath268 @xmath161 @xmath273 .",
    "\\(b ) @xmath274 .",
    "conditional : @xmath275 .",
    "\\(a ) @xmath268 @xmath161 @xmath170 @xmath167 @xmath276 @xmath172 @xmath173 @xmath167 @xmath277 .",
    "\\(b ) @xmath278 .",
    "iteration : @xmath279 .",
    "we define the formula @xmath280 by @xmath281    \\(a ) @xmath268 @xmath161 @xmath282 @xmath283 @xmath284 @xmath285 @xmath26 @xmath286 @xmath287 @xmath288 @xmath167 @xmath289 @xmath167 @xmath290 @xmath291 @xmath292 @xmath293 @xmath167 @xmath294 @xmath295 @xmath167 @xmath296 @xmath167 @xmath297 @xmath298 $ ] .",
    "\\(b ) we first let @xmath299 then set @xmath300 and finally define @xmath301    note that , in definition [ x_semantics_of_while_programs ] , the definitions of @xmath13 and @xmath19 proceed simultaneously by induction on @xmath3 , in that for the iteration case , @xmath302 is constructed from @xmath303 , and the definition of @xmath13 refers to @xmath302 ; for the role of @xmath302 , we shall show in claim [ computable_sequence_generated_by_formulas ] that any sequence @xmath284 @xmath285 @xmath26 @xmath304 of vectors of numbers of @xmath4 such that @xmath288 is @xmath4-finite .",
    "note also that a particular @xmath4-finite sequence of vectors of numbers of @xmath4 is adopted here rather than the more natural one , that is the sequence @xmath284 @xmath285 @xmath26 @xmath304 such that @xmath305 with @xmath306 , because it has not been proved or disproved that the latter can be coded as a number of @xmath4 by extended coding functions .",
    "( if such a sequence satisfies the induction axioms for all formulas , then it is @xmath4-finite ; for more details , cf . definition [ definition_of_m_continuous_sequences ] and theorem [ m_continuous_computation_sequence_is_codified ] . )",
    "[ x_semantics_of_while_programs]proposition    for every @xmath141 , it is the case that in @xmath1 , @xmath19 and @xmath307 are logically equivalent to a @xmath2-formula .",
    "let @xmath141 .",
    "it s easy to check , by induction on @xmath3 , that @xmath19 and @xmath307 are generalized @xmath2-formulas , so , in @xmath1 , each is logically equivalent to a @xmath2-formula .",
    "[ x_semantics_of_while_programs]definition    [ m_computable_functions ] for every @xmath141 and every @xmath23 , @xmath15 is defined such that for any @xmath184 , @xmath308 .",
    "[ x_semantics_of_while_programs]theorem    [ arithmetical_definability_of_m_computable_functions ] for every @xmath141 and every @xmath23 , @xmath15 is a function such that for any @xmath184 , @xmath309 iff @xmath310 .    to prove the theorem , by definition [ m_computable_functions ] , it suffices to prove that , for every @xmath141 and every @xmath23 , @xmath268 iff @xmath311 in ( a ) , and @xmath312 in ( b ) .",
    "fix @xmath23 .",
    "the argument proceeds by induction on @xmath3 .",
    "assignment : @xmath267 .",
    "\\(a ) consider @xmath268 as follows : by the definition of @xmath13 , it is equivalent to @xmath313 @xmath167 @xmath290 @xmath314 , @xmath315 @xmath316 ; then it is equivalent to @xmath317 @xmath167 @xmath290 @xmath318 , @xmath315 @xmath316 ; by the definition of @xmath19 , it is equivalent to @xmath311 .",
    "\\(b ) it s trivial that @xmath312 .",
    "composition : @xmath272 .",
    "\\(a ) consider @xmath268 as follows : by the definition of @xmath13 , it is equivalent to @xmath273 ; by the definition of @xmath319 , it is equivalent to @xmath320 @xmath287 @xmath321 @xmath167 @xmath322 @xmath298 $ ] ; by the induction hypothesis , it is equivalent to @xmath282 @xmath323 @xmath287 @xmath324 @xmath167 @xmath325 @xmath298 $ ] ; by the definition of @xmath19 , it is equivalent to @xmath311 .",
    "\\(b ) applying the induction hypothesis to @xmath326 ( resp .",
    "@xmath327 ) yields @xmath328 ( resp .",
    "@xmath329 ) . by the definition of @xmath19",
    ", we have that @xmath312 .",
    "conditional : @xmath275 .",
    "\\(a ) consider @xmath268 as follows : by the definition of @xmath13 , it is equivalent to @xmath170 @xmath167 @xmath276 @xmath172 @xmath173 @xmath167 @xmath277 ; by the induction hypothesis , it is equivalent to @xmath330 @xmath167 @xmath331 @xmath172 @xmath332 @xmath167 @xmath333 ; by the definition of @xmath19 , it is equivalent to @xmath311 .",
    "\\(b ) similar to the composition case .",
    "iteration : @xmath279 .",
    "we begin with    [ x_semantics_of_while_programs]claim    [ computable_sequence_generated_by_formulas ] let @xmath334 @xmath285 @xmath26 @xmath335 with @xmath336 . then it is the case that    ( 1 ) : :    @xmath337 ; ( 2 ) : :    @xmath338 .",
    "the proof of claim [ computable_sequence_generated_by_formulas ] is shown as follows :    proof of ( 1 ) . by the premise",
    ", it suffices to prove the uniqueness of @xmath225 in @xmath339 .",
    "suppose @xmath340 by the induction hypothesis we have @xmath341 , then by induction on @xmath342 up to @xmath222 we can see that @xmath343 and hence in particular @xmath344 , so it follows that @xmath345 .",
    "proof of ( 2 ) .",
    "immediate from ( 1 ) and theorem [ code_generated_by_formulas ] .",
    "we next give the main proof of this case :    \\(a ) consider @xmath268 as follows : by the definition of @xmath13 , it is equivalent to @xmath282 @xmath283 @xmath284 @xmath285 @xmath26 @xmath286 @xmath287 @xmath346 @xmath167 @xmath289 @xmath167 @xmath290 @xmath291 @xmath292 @xmath293 @xmath167 @xmath294 @xmath295 @xmath167 @xmath296 @xmath167 @xmath297 @xmath298 $ ] ; by the induction hypothesis , it is equivalent to @xmath282 @xmath283 @xmath284 @xmath285 @xmath26 @xmath286 @xmath287 @xmath346 @xmath167 @xmath289 @xmath167 @xmath347 @xmath167 @xmath296 @xmath167 @xmath348 @xmath298 $ ] ; using claim [ computable_sequence_generated_by_formulas ] , it is equivalent to @xmath282 @xmath349 @xmath287 @xmath350 @xmath167 @xmath351 @xmath167 @xmath352 @xmath167 @xmath353 @xmath298 $ ] ; by the definition of @xmath19 , it is equivalent to @xmath354 .",
    "\\(b ) suppose @xmath355 with @xmath356",
    ". then we have to prove that @xmath357 . by the supposition , together with the definition of @xmath358 , there exist @xmath359 such that @xmath360 and @xmath361 to prove @xmath357 , by ( 1 ) and ( 2 ) , it is enough to prove that @xmath362 and @xmath363 . by the order relation of @xmath4 ( cf .",
    "lemma [ order_relation_in_nonstandard_models ] ) , it follows that @xmath364 or @xmath365 . without loss of generality ,",
    "let @xmath364 . by ( 1 ) and ( 2 )",
    ", we have that @xmath366 .",
    "suppose @xmath367 and @xmath368 , then by the induction hypothesis we immediately have @xmath369 and hence by ( 1 ) , ( 2 ) it follows that @xmath370 , so we can see @xmath371 by induction on @xmath222 up to @xmath205 .",
    "suppose for a contradiction that @xmath372 .",
    "this , together with ( 2 ) , implies @xmath373 . from ( 1 ) , we immediately have @xmath374 .",
    "this , together with the fact @xmath375 , implies @xmath376 , a contradiction .",
    "thus we have @xmath362 and finally it follows that @xmath363 .",
    "note that in the proof of theorem [ arithmetical_definability_of_m_computable_functions ] , the proof for that @xmath268 iff @xmath311 , and the proof for that @xmath312 proceed simultaneously by induction on @xmath3 , in that for the iteration case , the proof for that @xmath268 iff @xmath311 employs claim [ computable_sequence_generated_by_formulas ] , whose proof uses the induction hypothesis @xmath341 .",
    "let @xmath279 and @xmath23 .",
    "the x - semantics of while - programs ( cf . definition [ x_semantics_of_while_programs ] ) shows that every run @xmath284",
    "@xmath285 @xmath26 @xmath304 of @xmath3 in @xmath4 should satisfy the constraint @xmath377 . by claim [ computable_sequence_generated_by_formulas ] , on giving the input @xmath228 , this run will be uniquely determined by the constraint .",
    "thus the natural way to decide whether a given sequence @xmath284 @xmath285 @xmath26 @xmath286 ( typically given by a formula with the argument @xmath228 ) is a run of @xmath3 is to prove @xmath377 by induction on @xmath222 up to @xmath205 in the formula @xmath378 using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] .",
    "[ x_semantics_of_while_programs]proposition    [ code_recursively_generated_label ] let @xmath379 and @xmath23 with @xmath380 .",
    "then for any @xmath239 , we have that either @xmath381 or @xmath382    fix @xmath239 .",
    "suppose that ( 3 ) does nt hold .",
    "then we have to prove ( 4 ) . by the supposition ,",
    "we have that @xmath383 . using the least number principle ( cf .",
    "the preliminaries ) , there exists @xmath113 such that @xmath384 and @xmath385 then @xmath386 , otherwise contradicting ( 5 ) using lemma [ basic_properties_of_extended_beta_function ] , and hence by ( 6 ) there exists @xmath112 such that @xmath387 . to prove ( 4 ) , it suffices to prove @xmath388 . assume for a contradiction that @xmath389 .",
    "then there exists @xmath223 such that @xmath390 , using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] there exists @xmath256 such that @xmath391 , hence @xmath392 , a contradiction to ( 5 ) , and so ( 4 ) holds .",
    "[ x_semantics_of_while_programs]corollary    [ computational_power_for_the_nonstandard_semantics ] let @xmath23 , @xmath43 be an assignment over @xmath4 , and @xmath393 with @xmath394 .",
    "then either of the following two cases holds .",
    "( 1 ) : :    @xmath290 @xmath113 ,    @xmath282 @xmath284    @xmath285 @xmath26    @xmath286 @xmath287    @xmath346    @xmath167 @xmath289 @xmath167    @xmath290 @xmath291    @xmath294    @xmath298 $ ] ; ( 2 ) : :    @xmath282 @xmath283 @xmath284    @xmath285 @xmath26    @xmath286 @xmath287    @xmath346    @xmath167 @xmath289 @xmath167    @xmath290 @xmath291    @xmath395    @xmath167 @xmath396    @xmath223    @xmath397    @xmath298 $ ] .    by proposition [ code_recursively_generated_label ] , the definition of @xmath398 ( cf . definition [ x_semantics_of_while_programs ] ) , and the fact that for any @xmath141 and any @xmath23 , @xmath268 iff @xmath311 , and @xmath312 ( cf .",
    "theorem [ arithmetical_definability_of_m_computable_functions ] ) .",
    "observe from corollary [ computational_power_for_the_nonstandard_semantics ] that in definition [ x_semantics_of_while_programs ] , for the iteration case , the definition of @xmath13 , though restricted , can still exhaust the sequences of vectors of numbers of @xmath4 computable by @xmath399 that we are concerned with .",
    "[ x_semantics_of_while_programs]proposition    [ induction_of_m_finiteness ] let @xmath400 and @xmath394",
    ". then it is the case that    ( i ) : :    @xmath401 ; ( ii ) : :    @xmath402 .",
    "\\(i ) consider @xmath403 as follows : by the definition of @xmath398 , it is equivalent to saying that there exists @xmath112 such that @xmath404 ; using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] , it is equivalent to @xmath405 .",
    "\\(ii ) consider @xmath406 as follows . by the definition of @xmath398 , it is equivalent to saying that there exists @xmath112 such that @xmath407 . using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] , it is equivalent to saying that there exist @xmath408 such that @xmath407 and @xmath409 .",
    "using claim [ computable_sequence_generated_by_formulas ] ( @xmath410 .",
    "let @xmath411 .",
    "@xmath412 is the unique value of @xmath413 ) , it is equivalent to saying that there exists @xmath256 such that @xmath414 . by the definition of @xmath398 , it is equivalent to @xmath415 .",
    "[ x_semantics_of_while_programs]corollary    [ induction_of_loop_programs ] let @xmath416 , and @xmath3 @xmath417 @xmath133 @xmath139 @xmath134 @xmath399 @xmath135 with @xmath394 .",
    "then it is the case that    \\(i ) @xmath418 ;    \\(ii ) @xmath419 .    by proposition [ induction_of_m_finiteness ] , together with the definitions of @xmath398 and @xmath420 ( cf .",
    "definition [ x_semantics_of_while_programs ] ) .      in this subsection , the connections between the standard semantics and x - semantics of",
    "while - programs are built : to illustrate the similarity and difference of the two semantics , an example is shown ; for the general relationship of the two semantics , two propositions are given ; the reasons why the standard semantics is `` complex '' in logic are discussed .",
    "[ subsection ]    [ example_for_two_semantics ] let @xmath11 . for every @xmath421 , @xmath422 = @xmath423 = @xmath27 . for every nonstandard @xmath23 , and every @xmath424 , @xmath425 if @xmath40 is a standard number of @xmath4 , and @xmath10 is undefined for @xmath426 otherwise ; in contrast , @xmath29 .    fix @xmath427 . the value of @xmath10 for the input @xmath426 is easy to calculate .",
    "it remains to show that @xmath29 .",
    "let @xmath428 . to prove @xmath29 , by x - semantics of while - programs ( cf .",
    "definition [ x_semantics_of_while_programs ] ) , it suffices to prove that @xmath429 by induction on @xmath85 up to @xmath40 in the formula @xmath430 . using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ]",
    ", we have @xmath431 , so it follows that @xmath432 .",
    "suppose @xmath433 and @xmath434 .",
    "by definition of @xmath398 , there exists @xmath112 such that @xmath435 . using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] , there is @xmath256 such that @xmath436 , so @xmath437 follows .",
    "[ example_for_two_semantics]proposition    [ comparison_of_two_semantics_over_n ] for every @xmath141 , @xmath438 .",
    "let @xmath141 . to prove @xmath438 , by theorem [ arithmetical_definability_of_m_computable_functions ]",
    ", it suffices to prove that @xmath439 iff @xmath440 , which is easy for the reader to verify .    [ example_for_two_semantics]proposition    [ comparison_of_two_semantics_over_m ]",
    "let @xmath23 be nonstandard .",
    "for every @xmath141 , @xmath441 . moreover , for particular choices of @xmath3 , both @xmath442 and @xmath443 are able to hold .",
    "let @xmath141 .",
    "the proof for @xmath441 proceeds by induction on @xmath3 : the cases for assignment , composition and conditional are easy ; for the iteration case , by theorem [ arithmetical_definability_of_m_computable_functions ] , it suffices to prove that @xmath444 @xmath445 @xmath446 ; this is the case due to corollary [ induction_of_loop_programs ] .",
    "moreover , for @xmath447 , we have that @xmath442 ; for @xmath3 as defined in example [ example_for_two_semantics ] , we can see that @xmath443 .",
    "perhaps the most significant difference between the two semantics is that the x - semantics in nonstandard models is `` simple '' ( or equivalently @xmath2-definable ) while the standard semantics in nonstandard models is not always so .",
    "it appears that robinson s overspill lemma , which says that the finiteness in @xmath0 ( defined by @xmath448 ) is not arithmetical , leads to this .",
    "actually , the finiteness in @xmath0 is not defined in first - order logic : introducing more first - order ingredients into @xmath1 is of no help .",
    "[ example_for_two_semantics]theorem    [ standard_numbers_is_not_definable_in_first_order_logic ] the set of standard numbers is not defined in first - order logic .",
    "suppose that @xmath31 is any first - order consistent extension of @xmath1 .",
    "then we have to prove that the set of standard numbers is not defined in @xmath31 .",
    "assume for a contradiction that there exists @xmath449 in the language of @xmath31 that defines the set of standard numbers in all models of @xmath31 .",
    "as in the existence proof of nonstandard models of arithmetic , add a constant @xmath450 to the language of @xmath31 and apply the compactness theorem ( * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* theorem 12.15 ) to the theory @xmath451 to conclude that it has a model .",
    "the denotation of @xmath450 in any such model will be a nonstandard element , contradicting the assumption .      by a labeled program",
    "we understand a finite sequence of commands of the type @xmath452 ( @xmath453 is the label , and @xmath454 is either an assignment statement @xmath455 or a conditional goto statement @xmath456 , where @xmath137 , @xmath139 are defined as for while - programs , and @xmath457 ) , in which no two members have the same label .",
    "formally , a labeled program @xmath458 can be written as @xmath458 @xmath207 @xmath459 , where @xmath460 .",
    "let @xmath23 .",
    "a trace of @xmath458 in @xmath4 is a sequence @xmath461 indexed by the elements of @xmath4 such that @xmath462 is a vector of numbers of @xmath4 assigned to the program variables of @xmath458 ( including the control variable @xmath463 used to denote the labels ) , and @xmath464 is a run of @xmath458 ; @xmath458 is said to halt at @xmath465 if @xmath466 and @xmath467 .",
    "( for more details , the reader refers to @xcite . )",
    "[ subsection ]    [ definition_of_continuous_sequences ] let @xmath23 .",
    "the sequence @xmath468 in @xmath4 is continuous if it satisfies the induction axiom scheme , that is , for any @xmath469 , @xmath470    by a continuous trace of @xmath458 in @xmath4 we understand a trace @xmath468 of @xmath458 which is continuous .",
    "the semantics of labeled programs over continuous traces is called the hungary semantics .    note",
    "that a continuous sequence in @xmath4 is @xmath4-infinite , which means that it is indexed by all elements of @xmath4 , so it might not be coded as a number by extended coding functions ( consider , e.g. , the sequence @xmath471 ) . as",
    "while - programs are structured ( by contrast labeled programs are unstructured ) , this definition of continuous sequences ( cf .",
    "definition [ definition_of_continuous_sequences ] ) is not appropriate for building the continuous semantics of while - programs . in the present context ,",
    "we prefer to adopt the following definition of continuous sequences .",
    "[ definition_of_continuous_sequences]definition    [ definition_of_m_continuous_sequences ] let @xmath203 .",
    "a pseudo-@xmath4-finite sequence @xmath218 , @xmath219 , @xmath123 , @xmath220 of vectors of numbers of @xmath4 is @xmath4-continuous if it satisfies the induction axiom scheme , that is , for any @xmath472 and any @xmath239 , @xmath473    it is inessential that the parameters @xmath146 , @xmath85 in @xmath474 are explicit in definition [ definition_of_m_continuous_sequences ] , yet not in definition [ definition_of_continuous_sequences ] . in particular",
    ", every finite sequence of vectors of natural numbers is @xmath0-continuous .",
    "[ definition_of_continuous_sequences]proposition    [ m_continuous_is_uncodified ] every countable nonstandard model @xmath4 of @xmath1 has an @xmath4-continuous sequence of numbers that can not be coded as a number by extended @xmath111-function .",
    "let @xmath113 be nonstandard .",
    "consider the set @xmath206",
    "@xmath207 @xmath208 @xmath209 @xmath210 , @xmath211 , @xmath123 , @xmath212 @xmath213 : @xmath475 , @xmath476 , and for each @xmath477 , @xmath216 or @xmath36 @xmath217 .",
    "it s easy to check that each element of @xmath206 is @xmath4-continuous .",
    "note that @xmath206 is uncountable .",
    "however , @xmath4 has only countably many elements used as codes .",
    "this means that one of elements of @xmath206 ca nt be coded as a number of @xmath4 by extended @xmath111-function .",
    "[ definition_of_continuous_sequences]proposition    [ m_finiteness_is_m_continuous ] let @xmath23 .",
    "every @xmath4-finite sequence @xmath218 , @xmath219 , @xmath123 , @xmath220 of vectors of numbers of @xmath4 is @xmath4-continuous",
    ".    follows from the definition of @xmath4-finiteness ( cf .",
    "definition [ definition_of_m_finiteness ] ) and the induction axiom scheme of @xmath1 .",
    "observe from theorem [ code_generated_by_formulas ] and propositions [ m_continuous_is_uncodified ] , [ m_finiteness_is_m_continuous ] that the concept of @xmath4-finiteness is strictly less than that of @xmath4-continuousness ( in symbols , @xmath4-finiteness @xmath209 @xmath4-continuousness ) .    in order to distinguish from the known semantics of while - programs , for the continuous semantics of while - programs",
    ", we use @xmath478 to denote the input - output relation of @xmath141 in @xmath23 . for any @xmath141 and any @xmath23 , @xmath478 is defined as in the standard semantics except for the iteration case :    @xmath479 @xmath161 @xmath282 an @xmath4-continuous sequence @xmath228 , @xmath123 , @xmath335 @xmath287 @xmath289 @xmath167 @xmath179 @xmath167 @xmath480 @xmath167 @xmath181 @xmath167 @xmath297 @xmath298 $ ] .",
    "it s not difficult to prove the equivalence of the hungary semantics to the continuous semantics of while - programs : the equivalence in @xmath0 is shown in ( * ? ? ?",
    "* section 3 - 3.1 ) ; and similarly for nonstandard models . to show the equivalence of the hungary semantics to the x - semantics of while - programs",
    ", it suffices to show the equivalence of the continuous semantics to the x - semantics .",
    "[ definition_of_continuous_sequences]theorem    [ m_continuous_computation_sequence_is_codified ] let @xmath23 and @xmath481 with @xmath482 .",
    "every @xmath4-continuous sequence @xmath483 of vectors of numbers of @xmath4 with @xmath484 can be coded as a number of @xmath4 by extended coding functions .",
    "let @xmath485 .",
    "using lemmas [ basic_properties_of_extended_pairing_functions ] and [ basic_properties_of_extended_beta_function ] , it s easy to see that @xmath486 . since the sequence @xmath483 is @xmath4-continuous , we have that @xmath487",
    ". then it follows that @xmath488 .",
    "it s easy to prove , similar to the proof of claim [ computable_sequence_generated_by_formulas ] ( 1 ) , that @xmath489 .",
    "then we have @xmath490 . by theorem",
    "[ code_generated_by_formulas ] , it follows that @xmath483 can be coded as a number of @xmath4 by extended coding functions .",
    "note that , in theorem [ m_continuous_computation_sequence_is_codified ] , the premise @xmath482 is essential for the conclusion to hold .",
    "let @xmath491 .",
    "let @xmath206 be as defined in the proof of proposition [ m_continuous_is_uncodified ] .",
    "it s trivial that each element @xmath262 of @xmath206 satisfies @xmath484 .",
    "however , one of elements of @xmath206 ca nt be coded as a number of @xmath4 by extended coding functions .",
    "[ definition_of_continuous_sequences]theorem    for every @xmath141 and every @xmath23 , @xmath492 .",
    "let @xmath141 and let @xmath23 .",
    "the proof of @xmath492 proceeds by induction on @xmath3 .",
    "the cases for assignment , composition and conditional are easy . for the iteration case ,",
    "let @xmath279 with @xmath394 . to prove @xmath492",
    ", it suffices to prove that @xmath493 and @xmath494 . by claim [ computable_sequence_generated_by_formulas ] , together with proposition [ m_finiteness_is_m_continuous ] , it s easy to see that @xmath493 . to prove @xmath494 , by theorem [ arithmetical_definability_of_m_computable_functions ] , it suffices to prove that @xmath495 @xmath445 @xmath446 .",
    "suppose that @xmath495 .",
    "then we have to prove that @xmath446 . by the definition of @xmath478",
    ", we have that @xmath282 an @xmath4-continuous sequence @xmath228 , @xmath123 , @xmath335 @xmath287 @xmath289 @xmath167 @xmath179 @xmath167 @xmath480 @xmath167 @xmath181 @xmath167 @xmath297 @xmath298 $ ] . by the induction hypothesis , together with theorem [ arithmetical_definability_of_m_computable_functions ] , it follows that @xmath496 @xmath161 @xmath497 .",
    "then we have that @xmath282 an @xmath4-continuous sequence @xmath228 , @xmath123 , @xmath335 @xmath287 @xmath289 @xmath167 @xmath498 @xmath167 @xmath499 @xmath167 @xmath296 @xmath167 @xmath353 @xmath298 $ ] . by theorem [ m_continuous_computation_sequence_is_codified ] , together with the fact @xmath500 ( cf .",
    "theorem [ arithmetical_definability_of_m_computable_functions ] ) , we have that @xmath282 @xmath349 @xmath287 @xmath350 @xmath167 @xmath351 @xmath167 @xmath352 @xmath167 @xmath353 @xmath298 $ ] . by the definition of @xmath358",
    ", it follows that @xmath446 .    summarizing the above results , we conclude that the x - semantics of while - programs is equivalent to the hungary semantics .",
    "moreover , the use of @xmath4-finiteness in the definition of the nonstandard semantics has an advantage over the use of @xmath4-continuousness : @xmath4-finiteness enables us to construct a @xmath2-formula to uniquely determine the sequence of computation , whereas in the hungary semantics , we have to verify whether a sequence satisfies the induction axioms for all formulas .",
    "[ subsection ]    [ satisfiability_of_asserted_programs_in_models ] given a model @xmath23 and an asserted program @xmath186 , @xmath186 is satisfied at @xmath4 w.r.t .",
    "the x - semantics , denoted @xmath501 iff for every assignment @xmath43 over @xmath4 , @xmath502    [ satisfiability_of_asserted_programs_in_models]definition    [ satisfiability_of_asserted_programs_in_theories ] given a theory @xmath503 and an asserted program @xmath186 , @xmath186 is satisfied at @xmath31 w.r.t .",
    "the x - semantics , denoted @xmath504 iff for every model @xmath49 , @xmath505    [ satisfiability_of_asserted_programs_in_models]definition    [ definition_of_strongest_postconditions ] let @xmath506 , @xmath141 and @xmath23 .",
    "the strongest postcondition @xmath507 of @xmath3 relative to @xmath508 w.r.t .",
    "the x - semantics on the set @xmath509 of assignments over @xmath4 is defined by @xmath510 the formal strongest postcondition @xmath511 of @xmath3 relative to @xmath508 is defined by @xmath512    [ satisfiability_of_asserted_programs_in_models]lemma    [ strongest_postcondition ] let @xmath506 , @xmath141 and @xmath23 .",
    "it is the case that    \\(i ) @xmath513 @xmath161 @xmath514 ;    \\(ii ) @xmath515 ;    \\(iii ) @xmath516 @xmath161 @xmath517 .",
    "immediate from theorem [ arithmetical_definability_of_m_computable_functions ] .",
    "[ satisfiability_of_asserted_programs_in_models]definition    [ definition_of_loop_invariants ] let @xmath518 , @xmath393 and @xmath23 .",
    "the loop invariant @xmath519 of @xmath3 relative to @xmath508 w.r.t .",
    "the x - semantics on the set @xmath509 of assignments over @xmath4 is defined by @xmath520 the formal loop invariant @xmath521 of @xmath3 relative to @xmath508 is defined by @xmath522    [ satisfiability_of_asserted_programs_in_models]lemma    [ loop_invariant ] let @xmath518 , @xmath393 and @xmath23 .",
    "it is the case that    \\(i ) @xmath523 @xmath161 @xmath524 ;    \\(ii ) @xmath525 ;    \\(iii ) @xmath526 ;    \\(iv ) @xmath516 @xmath161 @xmath527",
    ".    follows from theorem [ arithmetical_definability_of_m_computable_functions ] and corollary [ induction_of_loop_programs ] .",
    "[ satisfiability_of_asserted_programs_in_models]definition    given a theory @xmath503 , @xmath8 is sound and complete w.r.t .",
    "the x - semantics iff for any @xmath528 and any @xmath141 , @xmath529    we are now positioned to state the main theorem of this paper .",
    "[ satisfiability_of_asserted_programs_in_models]theorem    [ soundness_and_completeness_theorem ] let @xmath30 .",
    "then the hoare logic @xmath8 is sound and complete w.r.t .",
    "the x - semantics .",
    "that is , for any @xmath528 and any @xmath141 , @xmath529    let @xmath528 and @xmath141 .",
    "the proof of this theorem is partitioned into two parts : the `` only if '' part ( @xmath445 ) and the `` if '' part ( @xmath410 ) .",
    "suppose that @xmath531 .",
    "then we have to prove that @xmath532 .",
    "the argument proceeds by induction on the length of the proof of @xmath533 in @xmath8 , where the last step is divided into the following cases .",
    "assignment axiom scheme : @xmath534 and @xmath531 . by the assignment axiom scheme ,",
    "we have that @xmath535 .",
    "this together with the x - semantics of @xmath3 ( cf . definition [ x_semantics_of_while_programs ] ) gives that @xmath532 .",
    "composition rule : @xmath536 and @xmath537 . by the composition rule",
    ", there exists @xmath538 such that @xmath539 and @xmath540 . by the induction hypothesis",
    ", it follows that @xmath541 and @xmath542 . by the x - semantics of @xmath3 ( cf .",
    "definition [ x_semantics_of_while_programs ] ) , we have @xmath532 .",
    "conditional rule : @xmath543 and @xmath544 . by the conditional rule",
    ", we have that @xmath545 and @xmath546 . by the induction hypothesis",
    ", it follows that @xmath547 and @xmath548 . by the x - semantics of @xmath3 ( cf .",
    "definition [ x_semantics_of_while_programs ] ) , we have @xmath532 .",
    "iteration rule : @xmath549 and @xmath544 . by the iteration rule",
    ", we have that @xmath550 and @xmath551 . by the induction hypothesis",
    ", it follows that @xmath552 .",
    "let @xmath49 . by theorem [ arithmetical_definability_of_m_computable_functions",
    "] , we have that @xmath553 . assuming that @xmath554 , by the x - semantics of @xmath3 ( cf .",
    "definition [ x_semantics_of_while_programs ] ) and theorem [ arithmetical_definability_of_m_computable_functions ] there exist @xmath283 @xmath555 @xmath285 @xmath26 @xmath556 @xmath557 @xmath4 with @xmath558 such that @xmath559 , then by induction on @xmath222 up to @xmath205 it s easy to see @xmath560 and hence we have @xmath561 , so @xmath562 .",
    "then @xmath563 . by theorem [ arithmetical_definability_of_m_computable_functions ] , it follows that @xmath564 .",
    "since @xmath49 is arbitrary , we have that @xmath532 .",
    "consequence rule : @xmath544 . by the consequence rule",
    ", there exist @xmath565 such that @xmath566 , @xmath567 and @xmath568 . by soundness of first - order logic",
    ", we have @xmath569 and @xmath570 . by the induction hypothesis",
    ", it follows that @xmath571 .",
    "then we have @xmath532 .",
    "suppose that @xmath532 .",
    "then we have to prove that @xmath531 .",
    "the argument is by induction on the structure of @xmath3 .    assignment : @xmath267 .",
    "suppose that @xmath532 . by the x - semantics of @xmath3 ( cf .",
    "definition [ x_semantics_of_while_programs ] ) , we have that @xmath573 . by completeness of first - order logic",
    ", it follows that @xmath574 . by the assignment axiom scheme",
    ", we have @xmath575 . by the consequence rule",
    ", it follows that @xmath544 .",
    "composition : @xmath536 .",
    "suppose that @xmath532 . by the strongest postcondition lemma ( cf .",
    "lemma [ strongest_postcondition ] ) , we have that @xmath576 and @xmath577 .",
    "applying the induction hypothesis to @xmath326 and @xmath327 yields @xmath578 and @xmath579 . by the composition rule",
    ", it follows that @xmath544 .",
    "conditional : @xmath543 .",
    "suppose that @xmath532 . by the x - semantics of @xmath3 ( cf .",
    "definition [ x_semantics_of_while_programs ] ) , we have that @xmath547 and @xmath580 . by the induction hypothesis applied to @xmath326 and @xmath327 , it follows that @xmath545 and @xmath581 . by the conditional rule",
    ", we have @xmath544 .",
    "iteration : @xmath549 .",
    "suppose that @xmath582 . by the loop invariant lemma ( cf .",
    "lemma [ loop_invariant ] ) , it follows that @xmath583 , @xmath584 and @xmath585 . by completeness of first - order logic ,",
    "we have that @xmath586 and @xmath587 . applying the induction hypothesis to @xmath399 yields @xmath588 . by the iteration rule , it follows that @xmath589 . by the consequence rule ,",
    "we have that @xmath544 .",
    "this completes the proof .",
    "the reduction from @xmath8 to @xmath31 with @xmath30 has been established by bergstra and tucker as the main theorem in @xcite , and is shown as follows .",
    "[ subsection ]    [ bergstra_theorem ] given an assertion @xmath506 and program @xmath141 one can effectively calculate an assertion @xmath590 such that    \\(1 ) @xmath591 defines the strongest postcondition of @xmath3 relative to @xmath508 on the set of states over @xmath0 ;    \\(2 ) @xmath592 ;    and , for any refinement @xmath31 of peano arithmetic , including @xmath1 itself ,    \\(3 ) @xmath201 if and only if @xmath593 .    in theorem [ bergstra_theorem",
    "] , statement ( 1 ) explains the meaning of @xmath591 in @xmath0 ; statement ( 2 ) is a preliminary result for statement ( 3 ) , and it can be taken as a special case of ( 3 ) with @xmath591 in place of @xmath67 ; ( 3 ) is the core , and it establishes the reduction from @xmath8 to @xmath31 by using @xmath591 .",
    "the main results having been developed in this paper can be used to derive the above theorem :    by theorem [ arithmetical_definability_of_m_computable_functions ] and proposition [ comparison_of_two_semantics_over_n ] , it follows that for any @xmath594 , @xmath595 iff @xmath596 .",
    "the formal strongest postcondition @xmath591 , here , can be defined by @xmath597",
    ". then statement ( 1 ) of theorem [ bergstra_theorem ] follows . to prove theorem [ bergstra_theorem ] , it remains to prove statement ( 3 ) .",
    "let @xmath30 , @xmath528 , and @xmath141 .",
    "consider @xmath201 as follows : by theorem [ soundness_and_completeness_theorem ] , it is equivalent to @xmath598 ; by theorem [ arithmetical_definability_of_m_computable_functions ] , it is equivalent to @xmath599 ; by definition of @xmath591 , it is equivalent to @xmath600 ; by soundness and completeness of first - order logic , it is equivalent to @xmath593 .    observing the axiom system of @xmath8",
    ", we remark that the crucial and perhaps the most difficult step of finding a proof of @xmath186 in @xmath8 is to guess the corresponding intermediate assertions when applying the composition and iteration rules . as lemmas [ strongest_postcondition ] , [ loop_invariant ] and the proof of theorem [ soundness_and_completeness_theorem ] show , the intermediate assertions involved in this proof can be easily constructed , and their roles in guaranteeing the correctness of theorem [ bergstra_theorem ] are implicit .",
    "the real strength of theorem [ bergstra_theorem ] is due to the fact that it provides us a readily - operating means to deciding whether @xmath186 is provable in @xmath8 : one simply needs to decide whether @xmath601 is provable in @xmath31 .",
    "this subsection is considered as a continuation to subsection [ comparison_with_the_hungary_semantics ] .",
    "the following definitions concerning floyd logic come from ( * ? ? ?",
    "* p165 - 166 ) .",
    "let @xmath30 , @xmath49 , @xmath602 and @xmath603 .    the dynamic formula @xmath604 is said to be valid in @xmath4 w.r.t .",
    "continuous traces if ( @xmath605 ) below holds .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( @xmath605 ) for any continuous trace @xmath606 of @xmath458 in @xmath4 and for any @xmath607 implies @xmath608.$ ] _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    @xmath609 denotes that @xmath604 is valid in @xmath4 w.r.t continuous traces ; @xmath610 denotes that for every @xmath49 , @xmath609 .",
    "the floyd logic serves to derive statements @xmath611 from @xmath31 .",
    "the set @xmath612 of labels of @xmath458 is defined as follows : @xmath613 a floyd derivation of @xmath604 from @xmath31 consists of : a mapping @xmath614 together with the classical first - order derivations listed in ( i)-(iv ) below . notation : when @xmath615 we write @xmath616 instead of @xmath617 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\(i ) a derivation : @xmath618 .",
    "\\(ii ) to each command @xmath619 occurring in @xmath458 , a derivation : @xmath620 .",
    "\\(iii ) to each command @xmath621 occurring in @xmath458 , two derivations : @xmath622 and @xmath623 .",
    "\\(iv ) to each @xmath624 , a derivation : @xmath625 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    now the existence of a floyd derivation of @xmath604 from @xmath31 is denoted by @xmath626 .",
    "the soundness and completeness of floyd logic relative to @xmath31 has been established by h.  andrka , et.al .",
    ", as the main theorem in @xcite , and is shown as follows .",
    "[ subsection ]    [ soundness_and_completeness_of_floyd_hoare_logic ] let @xmath32 .",
    "for every labeled program @xmath458 , and every @xmath627 , it is the case that @xmath626 iff @xmath628 .    to build the relationship of hoare logic with floyd logic , we remark that for each @xmath141 , there is a labeled program @xmath458 such that the x - semantics of @xmath3 is equivalent to the semantics of @xmath458 in @xmath1 , and vice versa .",
    "[ soundness_and_completeness_of_floyd_hoare_logic]theorem    [ relationship_of_hoare_logic_with _ floyd_hoare_logic ] let @xmath32 .",
    "for every @xmath141 , every labeled program @xmath458 , and every @xmath629 , if the x - semantics of @xmath3 is equivalent to the semantics of @xmath458 in @xmath1 , then it is the case that @xmath630 iff @xmath631 .",
    "immediate from theorems [ soundness_and_completeness_theorem ] and [ soundness_and_completeness_of_floyd_hoare_logic ] .",
    "intuitively hoare logic can be thought of as a special first - order multi - modal logic with programs viewed as modalities ; and the axiom system of floyd logic looks more like a first - order logical system .",
    "although these two axiom systems appear different , they are essentially the same first - order logical system , as theorems [ relationship_of_hoare_logic_with _ floyd_hoare_logic ] and [ bergstra_theorem ] show .",
    "the axiomatic semantics of while - programs is a relational semantics determined by hoare logic .",
    "the following definition is as in ( * ? ? ? *",
    "p303 ) except that the side effects on non - program variables are explicitly ruled out .",
    "[ subsection ]    [ definition_of_axiomatic_semantics ] let @xmath632 be a first - order logical language , let @xmath633 be the set of while - programs based on @xmath632 , and let @xmath31 be a first - order theory of @xmath632 . for any @xmath634 with program variables @xmath146 , the axiomatic semantics @xmath635 of @xmath3 in a model @xmath4 of @xmath31 is a binary relation on the set @xmath509 of assignments over @xmath4 defined as follows : @xmath636    observe from the above definition that @xmath635 is the maximal input - output relation for @xmath3 over @xmath4 such that @xmath8 is sound in @xmath4 with respect to all the specifications of @xmath3 .",
    "although this definition of axiomatic semantics appears mathematically elegant , it is too abstract , and the general properties of its are not always nice , e.g. nondeterminism .",
    "( for more details , the reader refers to @xcite . )",
    "surprisingly , when restricting the first - order theory @xmath31 to @xmath32 , the axiomatic semantics is exactly what we pursue in this paper .",
    "[ definition_of_axiomatic_semantics]theorem    let @xmath32 .",
    "for every @xmath49 , and every @xmath141 , @xmath637 .",
    "let @xmath49 , let @xmath509 be the set of assignments over @xmath4 , and let @xmath141 with program variables @xmath146 . to prove @xmath637",
    ", it suffices to prove that @xmath638 and @xmath639 .",
    "let @xmath641 . by definition [ x_semantics_of_while_programs ] ,",
    "it s easy to see that @xmath642 . to prove @xmath643 , by definition [ definition_of_axiomatic_semantics ]",
    ", it suffices to prove that @xmath644 .",
    "let @xmath528 and @xmath645 with @xmath201 and @xmath646 .",
    "it remains to show that @xmath647 . by soundness of @xmath8 w.r.t .",
    "the x - semantics ( cf . theorem [ soundness_and_completeness_theorem ] ) , it follows that @xmath648 .",
    "then we have @xmath649 . from the premise @xmath641 , by definition [ x_semantics_of_while_programs ]",
    ", it follows that @xmath650 . since @xmath646 , we have that @xmath647 .    @xmath651 .",
    "let @xmath643 .",
    "let @xmath652 , @xmath653 , and @xmath654 , where @xmath655 is disjoint from @xmath146 .",
    "then we have @xmath656 . by theorem [ arithmetical_definability_of_m_computable_functions ] , it follows that @xmath598 . using completeness of @xmath8 w.r.t .",
    "the x - semantics ( cf . theorem [ soundness_and_completeness_theorem ] ) , we have that @xmath201 . by definitions of @xmath43 and @xmath508",
    ", we have that @xmath646 . by the definition of @xmath635 ( cf",
    ". definition [ definition_of_axiomatic_semantics ] ) , it follows that @xmath642 and @xmath647 . by definitions of @xmath43 and @xmath67 , we have @xmath657 . by theorem [ arithmetical_definability_of_m_computable_functions ] , it follows that @xmath658 .",
    "observe from the foregoing theorem that the axiomatic semantics of while - programs on every model of @xmath31 with @xmath30 is independent of the choice of @xmath31 .",
    "it has been justified by the uniqueness theorem ( * ? ? ?",
    "* p304 ) that in a general setting , the axiomatic semantics of while - programs on a structure @xmath4 of a first - order theory @xmath31 is independent of the choice of @xmath31 .",
    "we can now say that for any @xmath23 , the axiomatic semantics of while - programs on @xmath4 coincides with the x - semantics of while - programs on @xmath4 .",
    "properties of nonstandard models are sometimes very useful to decide whether a hoare s triple is provable , especially when such a triple is true in the standard model .",
    "let @xmath32 , @xmath659 , and @xmath141 .",
    "suppose that @xmath660 ( or equivalently @xmath661 ) and @xmath662 .",
    "then , by theorem [ soundness_and_completeness_theorem ] , there should be a nonstandard @xmath49 such that @xmath663 .",
    "this means that the x - semantics of while - programs in @xmath4 could be useful in deciding whether @xmath186 is provable in @xmath8 . to show the usefulness of nonstandard semantics in hoare logic ,",
    "the following example is illustrated .",
    "[ subsection ]    [ incompleteness_of_hl ] let @xmath11 , let @xmath664 such that @xmath665 , and let @xmath666 such that @xmath667 for each @xmath105 and @xmath668 ( there always exists such a @xmath41 for any such @xmath31 ) .",
    "it is the case that @xmath669 but @xmath670 .",
    "theorem [ incompleteness_of_hl ] shows the incompleteness of @xmath8 with @xmath664 and @xmath665 w.r.t .",
    "the standard semantics . the original proof of theorem [ incompleteness_of_hl ] in ( * ? ? ?",
    "* the proof of theorem 4.3 ) exploits the proof concept of @xmath8 to derive a contradiction , yet it seems to be cumbersome . using the x - semantics of while - programs , a concise proof of theorem [ incompleteness_of_hl ] is shown below .",
    "let @xmath3 , @xmath31 and @xmath671 be as defined in theorem [ incompleteness_of_hl ] .",
    "it s trivial that @xmath669 .",
    "thus it remains to prove @xmath670 .",
    "since @xmath672 , by theorem [ soundness_and_completeness_theorem ] , it suffices to prove that for some nonstandard @xmath49 , @xmath673 . by the definition of @xmath671 , together with completeness of first - order logic , it follows that there exists a nonstandard @xmath49 such that @xmath674 .",
    "let @xmath4 be such a model .",
    "by example [ example_for_two_semantics ] , we have that for any @xmath424 , @xmath29",
    ". then @xmath673 follows .",
    "the most popular completeness form we have known for hoare logic is the relative completeness ( for a complete knowledge of relative completeness , the reader refers to the distinguished survey article @xcitelet @xmath632 be a first - order logical language , and let @xmath4 be a model of @xmath632 .",
    "hoare logic is complete for while - programs relative to @xmath4 iff for all asserted programs @xmath675 , if @xmath676 , then @xmath677 , where @xmath678 and @xmath679 denote the satisfaction and derivation relations of hoare logic .",
cook @xcite considered the relative completeness of hoare logic with the expressiveness condition ( for the incompleteness due to inexpressiveness , and the completeness with inexpressiveness , the reader refers to @xcite and @xcite respectivelylet @xmath632 and @xmath4 be as defined above . if @xmath632 is expressive for while - programs relative to @xmath4 ( i.e. , for all assertions @xmath680 and all while - programs @xmath681 based on @xmath632 , there exists an assertion @xmath682 that defines the strongest postcondition of @xmath681 relative to @xmath508 on the set of assignments over @xmath4 ) , then hoare logic is complete for while - programs relative to @xmathunfortunately , there are only two kinds of expressive structures for while - programs w.r.t .",
    "the standard semantics : the standard model @xmath0 and finite structures @xcite .",
    "in contrast , as theorem [ arithmetical_definability_of_m_computable_functions ] and lemmas [ strongest_postcondition ] , [ loop_invariant ] imply , @xmath6 is expressive for while - programs w.r.t .",
    "the x - semantics relative to every model of @xmath1 , so the new semantics of hoare logic extends the applicability of cook s completeness theorem from @xmath0 to nonstandard models of @xmath1 . except for the paucity of expressive structures ,",
    "the relative completeness of hoare logic has a theoretical weakness that we ca nt come to terms with : for each expressive structure @xmath4 it has to pick out the complete theory @xmath683 as the specification axioms to derive the whole set of true asserted programs in @xmath4 .",
    "consider for example the case @xmath684 .",
    "let @xmath664 with @xmath665 .",
    "then there exists a sentence @xmath506 such that @xmath685 and @xmath686 .",
    "it s easy to see that @xmath687 ( or equivalently @xmath688 ) and @xmath689 ( by the choice of @xmath508 and completeness of first - order logic , there exists @xmath49 such that @xmath690 ; then we have @xmath691 ; by completeness of @xmath8 w.r.t .",
    "the x - semantics , it follows that @xmath689 ) . from the above analysis",
    ", we achieve that @xmath692 is the only extension @xmath31 of @xmath1 such that @xmath8 is complete relative to @xmath0 w.r.t .",
    "both the standard semantics and the x - semantics .",
    "however , by gdel s incompleteness theorem , @xmath692 is not recursively enumerable ( even not arithmetical ( * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* lemma 17.3 ) ) , which means that it is far beyond the power of any mechanical device to enumerate the elements of @xmath692 . to fix up this drawback ,",
    "we have studied the completeness issues of hoare logic relative to @xmath0 by restricting assertions to subclasses of arithmetical formulas @xcite ( and by restricting inputs to @xmath0 @xcite ) : arithmetical extensions of @xmath1 suffice to act as the assertion theory , and the lower the level of the assertions in the arithmetical hierarchy the lower the level of the required assertion theory is .    historically , logical completeness of the first - order hoare logic , which as an important completeness form stems from completeness of first - order logic , was studied extensivelylet @xmath632 be a first - order logical language , and let @xmath31 be a first - order theory of @xmath632 .",
    "hoare logic is complete for while - programs relative to @xmath31 iff for all asserted programs @xmath675 , if @xmath693 , then @xmath694 , where @xmath693 denotes that for any @xmath49 , @xmath676 .",
bergstra and tucker @xcite have pointed out that @xmath692 is the unique extension @xmath31 of @xmath1 for which @xmath8 is logically complete w.r.t . the standard semantics .",
    "( the incompleteness of @xmath8 with @xmath664 and @xmath665 w.r.t .",
    "the standard semantics has been shown in theorem [ incompleteness_of_hl ] . ) to remedy this unsatisfying completeness result , we have investigated the logical completeness of hoare logic with inputs over the standard model @xcite : a particular extension @xmath695 of @xmath1 suffices to prove all valid hoare s triples requiring that the input has a standard value ; moreover @xmath695 is shown to be minimal with the property . to see the essential difference of the completeness theorem of bergstra and tucker from that presented in this paper",
    ", we remark that the only factor leading to the difference is the semantics .",
    "let @xmath664 with @xmath665 . by propositions [ comparison_of_two_semantics_over_n ] and [ comparison_of_two_semantics_over_m ] , for any @xmath49 , and any @xmath141 , we have that @xmath14 is a ( sometimes proper ) subset of @xmath13 . by the semantics of hoare logic",
    ", it follows that @xmath696 is properly contained in @xmath697 .",
    "as is shown in subsection [ comparison_with_the_axiomatic_semantics ] , the x - semantics of while - programs is an axiomatic semantics , which means that for any @xmath23 and any @xmath141 , @xmath13 is the maximal input - output relation for @xmath3 over @xmath4 such that @xmath8 is sound in @xmath4 with respect to all the specifications of @xmath3 ( in contrast , @xmath14 is not always maximal in this sense ) .",
    "hence among all the semantics of while - programs that make @xmath8 sound in every model of @xmath31 ( including the standard semantics ) , the axiomatic semantics makes the set @xmath696 be minimal and naturally coincide with the set @xmath698 .",
    "furthermore , bergstra and tucker established the logical completeness of hoare logic based on the axiomatic semantics in a general setting @xcite .",
    "the hungary school @xcite provides an alternative approach to characterizing the maximal semantics of programs for which floyd logic is sound , i.e. the hungary semantics , and shows that floyd logic is logically complete w.r.t .",
    "this semantics . in subsections [ comparison_with_the_hungary_semantics ] and [ comparison_with_floyd_hoare_logic ] , a detailed comparison of this technique with that presented in this paper has been given .",
    "csirmaz @xcite , and hortal - gonzlez et.al .",
    "@xcite extended this technique into a general situation .",
    "for the relationship of the general floyd logic with weak second order logic , the reader refers to the literature @xcite .",
    "moreover , andrka et.al .",
    "@xcite , and pasztor @xcite used many - sorted logic ( i.e. henkin semantics @xcite ) to define floyd - hoare logic , thus obtaining the completeness of floyd - hoare logic immediately from that of many - sorted logic .",
    "kozen and tiuryn @xcite viewed hoare logic as a special propositional modal logic by abstracting assertions and programs to propositional symbols , and gained the completeness of this propositional hoare logic .",
    "in this paper , for nonstandard models @xmath4 of @xmath1 , we have introduced the concept of @xmath4-finiteness as the desired finiteness as far as @xmath4 is concerned ; we have exhibited an explicit axiomatic semantics for while - programs in nonstandard models of @xmath1 , and proven that it coincides with the hungary semantics ; based on this semantics , we have defined a new semantics of hoare logic , and shown the soundness and completeness of its axiom system w.r.t .",
    "the new semantics ; various comparisons have shown that our approach is not only mathematically elegant , but also practically useful .",
    "the authors would like to thank the 973 program of china ( grant no .",
    "2014cb340701 ) , the national natural science foundation of china ( grant nos .",
    "61672504 and 61472474 ) , and the cas - safea international partnership program for creative research teams for the financial support .",
    "the authors would also like to thank the anonymous referees for their valuable suggestions and comments that helped improving this paper .",
    "g.  mirkowska , a.  salwicki , algorithmic logic , springer , 1987 .",
    "d.  harel , d.  kozen , j.  tiuryn , dynamic logic , mit press , 2000 . j.  c.  reynolds , separation logic : a logic for shared mutable data structures , lics ( 2002 ) 55 - 74 .",
    "h.  andreka , j.  van benthem , n.  bezhanishvili , i.  nemiti , changing a semantics : opportunism or courage ? in : the life and work of leon henkin , essays on his contributions , studies in universal logic , springer - verlag , 2014 , 307 - 337 ."
  ],
  "abstract_text": [
    "<S> the nonstandard approach to program semantics has successfully resolved the completeness problem of floyd - hoare logic . </S>",
    "<S> the known versions of nonstandard semantics , the hungary semantics and axiomatic semantics , are so general that they are absent either from mathematical elegance or from practical usefulness . </S>",
    "<S> the aim of this paper is to exhibit a not only mathematically elegant but also practically useful nonstandard semantics . </S>",
    "<S> a basic property of computable functions in the standard model @xmath0 of peano arithmetic @xmath1 is @xmath2-definability . </S>",
    "<S> however , the functions induced by the standard interpretation of while - programs @xmath3 in nonstandard models @xmath4 of @xmath1 are not always arithmetical . </S>",
    "<S> the problem consists in that the standard termination of @xmath3 in @xmath4 uses the finiteness in @xmath0 , which is not the finiteness in @xmath4 . to this end </S>",
    "<S> , we shall give a new interpretation of @xmath3 in @xmath4 such that the termination of @xmath3 uses @xmath4-finiteness , and the functions produced by @xmath3 in all models of @xmath1 have the uniform @xmath2-definability . </S>",
    "<S> then we define , based on the new semantics of while - programs , a new semantics of hoare logic in nonstandard models of @xmath1 , and show that the standard axiom system of hoare logic is sound and complete w.r.t . the new semantics </S>",
    "<S> . it will be established , in @xmath1 , that the hungary semantics and axiomatic semantics coincide with the new semantics of while - programs . </S>",
    "<S> moreover , various comparisons with the previous results , usefulness of the nonstandard semantics , and remarks on the completeness issues are presented .    </S>",
    "<S> * keywords : * hoare logic , peano arithmetic , nonstandard models , nonstandard semantics , logical completeness </S>"
  ]
}
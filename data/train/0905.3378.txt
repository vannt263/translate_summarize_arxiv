{
  "article_text": [
    "the common conception of the world wide web is that of a large - scale , distributed file repository @xcite .",
    "the typical files found on the world wide web are hyper - text markup language ( html ) documents and other media such as image , video , and audio files .",
    "the `` world wide '' aspect of the world wide web pertains to the fact that all of these files have an accessible location that is denoted by a uniform resource locator ( url ) @xcite ; a url denotes what physical machine is hosting the file ( i.e.  what domain name / ip address ) , where in that physical machine the file is located ( i.e.  what directory ) , and finally , which protocol to use to retrieve that file from that machine ( e.g.  http , ftp , etc . ) .",
    "the `` web '' aspect of the world wide web pertains to the fact that a file ( typically an html document ) can make reference ( typically an href citation ) to another file . in this way ,",
    "a file on machine @xmath0 can link to a file on machine @xmath1 and in doing so , a network / graph / web of files emerges .",
    "the ingenuity of the world wide web is that it combines remote file access protocols and hypermedia and as such , has fostered a revolution in the way in which information is disseminated and retrieved  in an open , distributed manner . from this relatively simple foundation ,",
    "a rich variety of uses emerges : from the homepage , to the blog , to the online store .",
    "the world wide web is primarily for human consumption .",
    "while html documents are structured according to a machine understandable syntax , the content of the documents are written in human readable / writable language ( i.e.  natural human language ) .",
    "it is only through computationally expensive and relatively inaccurate text analysis algorithms that a machine can determine the meaning of such documents . for this reason ,",
    "computationally inexpensive keyword extraction and keyword - based search engines are the most prevalent means by which the world wide web is machine processed .",
    "however , the human - readable world wide web is evolving to support a machine - readable web of data . the emerging web of data utilizes the same referencing paradigm as the world wide web , but instead of being focused primarily on urls and files , it is focused on uniform resource identifiers ( uri ) @xcite and data . the `` data '' aspect of the web of data pertains to the fact that a uri can denote anything that can be assigned an identifier : a physical entity , a virtual entity , an abstract concept , etc .",
    "the `` web '' aspect of the web of data pertains to the fact that identified resource can be related to other resources by means of the resource description framework ( rdf ) . among other things",
    ", rdf is an abstract data model that specifies the syntactic rules by which resources are connected . if @xmath2 is the set of all uris , @xmath1 the set of all blank or anonymous nodes , and @xmath3 the set of all literals , then the web of data is defined as @xmath4 a single statement ( or triple ) in @xmath5 is denoted @xmath6 , where @xmath7 is called the subject , @xmath8 the predicate , and @xmath9 the object . on the web of data    _",
`` [ any man or machine can ] start with one data source and then move through a potentially endless web of data sources connected by rdf links .",
    "just as the traditional document web can be crawled by following hypertext links , the web of data can be crawled by following rdf links .",
    "working on the crawled data , search engines can provide sophisticated query capabilities , similar to those provided by conventional relational databases . because the query results themselves are structured data , not just links to html pages , they can be immediately processed , thus enabling a new class of applications based on the web of data . '' @xciteas a data model , rdf can conveniently represent commonly used data structures . from the knowledge representation and reasoning perspective , rdf provides the means to make assertions about the world and infer new statements given existing statements . from the network / graph analysis perspective , rdf supports the representation of various network data structures . from the programming and systems engineering perspective , rdf can be used to encode objects , instructions , stacks , etc .",
    "the web of data , with its general - purpose data model and supporting technological infrastructure , provides various computing models a shared , global , distributed space .",
    "unfortunately , this general - purpose , multi - model vision was not the original intention of the designers of rdf .",
    "rdf was created for the domain of knowledge representation and reasoning .",
    "moreover , it caters to a particular monotonic subset of this domain @xcite .",
    "rdf is not generally understood as supporting different computing models . however , if the web of data is to be used as just that , a `` web of data '' , then it is up to the applications leveraging this data to interpret what that data means and what it can be used for .",
    "the uri address space is an address space .",
    "it is analogous , in many ways , to the address space that exists in the local memory of the physical machines that support the representation of the web of data . with physical memory ,",
    "information is contained at an address . for a 64-bit machine ,",
    "that information is a 64-bit word .",
    "that 64-bit word can be interpreted as a literal primitive ( e.g.  a byte , an integer , a floating point value ) or yet another 64-bit address ( i.e.  a pointer ) .",
    "this is how address locations denote data and link to each other , respectively . on the web of data ,",
    "a uri is simply an address as it does not contain content .",
    "it is through rdf that a uri address has content .",
    "for instance , with rdf , a uri can reference a literal ( i.e.  xsd : byte , xsd : integer , xsd : float ) or another uri .",
    "thus , rdf , as a data model , has many similarities to typical local memory .",
    "however , the benefit of uris and rdf is that they create an inherently distributed and theoretically infinite space .",
    "thus , the web of data can be interpreted as a large - scale , distributed memory structure .",
    "what is encoded and processed in that memory structure should not be dictated at the level of rdf , but instead dictated by the domains that leverage this medium for various application scenarios .",
    "the web of data should be realized as an application agnostic memory structure that supports a rich variety of uses : from semantic web reasoning , to giant global graph analysis , to web of process execution .",
    "the intention of this article is to create a conceptual splinter that separates rdf from its legacy use as a logic language and demonstrate that it is more generally applicable when realized as only a data model . in this way ,",
    "rdf as the foundational standard for the web of data makes the web of data useful to anyone wishing to represent information and compute in a global , distributed space .",
    "three specific interpretations of the web of data are presented in order to elucidate the many ways in which the web of data is currently being used . moreover , within these different presentations , various standards and technologies are discussed .",
    "these presentations are provided as summaries , not full descriptions . in short ,",
    "this article is more of a survey of a very large and multi - domained landscape .",
    "the three interpretations that will be discussed are enumerated below .    1 .   the web of data as a knowledge base ( see  [ sec : knowledge - base ] ) . *",
    "the semantic web is an interpretation of the web of data .",
    "* rdf is the means by which a model of a world is created .",
    "* there are many types of logic : logics of truth and logics of thought .",
    "* scalable solutions exist for reasoning on the web of data .",
    "2 .   the web of data as a multi - relational network ( see  [ sec : multi - relational ] ) . *",
    "the giant global graph is an interpretation of the web of data .",
    "* rdf is the means by which vertices are connected together by labeled edges . *",
    "single - relational network analysis algorithms can be applied to multi - relational networks .",
    "* scalable solutions exist for network analysis on the web of data .",
    "3 .   the web of data as an object repository ( see  [ sec : object - repository ] ) . *",
    "the web of process is an interpretation of the web of data .",
    "* rdf is the means by which objects are represented and related to other objects .",
    "* an object s representation can include both its fields and its methods .",
    "* scalable solutions exist for object - oriented computing on the web of data .",
    "the landscape presented in this article is by no means complete and only provides a glimpse into these different areas .",
    "moreover , within each of these three presented interpretations , applications and use - cases are not provided .",
    "what is provided is a presentation of common computing models that have been mapped to the web of data in order to take unique advantage of the web as a computing infrastructure .",
    "the web of data can be interpreted as a distributed knowledge base  a semantic web . a knowledge base is composed of a set of statements about some `` world '' .",
    "these statements are written in some language .",
    "inference rules designed for that language can be used to derive new statements from existing statements . in other words ,",
    "inference rules can be used to make explicit what is implicit .",
    "this process is called reasoning .",
    "the semantic web initiative is primarily concerned with this interpretation of the web of data .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ `` for the semantic web to function , computers must have access to structured collections of information and sets of inference rules that they can use to conduct automated reasoning . ''",
    "@xcite _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    currently , the semantic web interpretation of the web of data forces strict semantics on rdf .",
    "that is , rdf is not simply a data model , but a logic language . as a data model ,",
    "it specifies how a statement @xmath10 is constructed ( i.e.  @xmath11 ) . as a logic language is species specific language constructs and semantics",
    " a way of interpreting what statements mean .",
    "because rdf was developed in concert with requirements provided by the knowledge representation and reasoning domain , rdf and the semantic web have been very strongly aligned for many years .",
    "this is perhaps the largest conceptual stronghold that exists as various w3c documents make this point explicit .",
`` rdf is an assertional logic , in which each triple expresses a simple proposition .",
    "this imposes a fairly strict monotonic discipline on the language , so that it can not express closed - world assumptions , local default preferences , and several other commonly used non - monotonic constructs . ''",
    "@xcite _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    rdf is monotonic in that any asserted statement @xmath12 can not be made `` false '' by future assertions .",
    "in other words , the truth - value of a statement , once stated , does not change .",
    "rdf makes use of the open - world assumption in that if a statement is not asserted , this does not entail that it is `` false '' .",
    "the open - world assumption is contrasted to the closed - world assumption found in many systems , where the lack of data is usually interpreted as that data being `` false '' .    from this semantic foundation , extended semantics for rdf have been defined .",
    "the two most prevalent language extensions are the rdf schema ( rdfs ) @xcite and the web ontology language ( owl ) @xcite .",
    "it is perhaps this stack of standards that forms the most common conception of what the semantic web is .",
    "however , if the semantic web is to be just that , a `` semantic web '' , then there should be a way to represent other languages with different semantics .",
    "if rdf is forced to be a monotonic , open - world language , then this immediately pigeonholes what can be represented on the semantic web .",
    "if rdf is interpreted strictly as a data model , devoid of semantics , then any other knowledge representation language can be represented in rdf and thus , contribute to the semantic web .",
    "this section will discuss three logic languages : rdfs , owl , and the non - axiomatic logic ( nal ) @xcite .",
    "rdfs and owl are generally understood in the semantic web community as these are the primary logic languages used . however , nal is a multi - valent , non - monotonic language that , if to be implemented in the semantic web , requires that rdf be interpreted as a data model , not as a logic language .",
    "moreover , nal is an attractive language for the semantic web because its reasoning process is inherently distributed , can handle conflicting inconsistent data , and was designed on the assumption of insufficient knowledge and computing resources .",
    "rdfs is a simple language with a small set of inference rules @xcite . in rdf , resources ( e.g.  uris and blank nodes ) maintain properties ( i.e.  rdf : property ) .",
    "these properties are used to relate resources to other resources and literals . in rdfs , classes and properties can be formally defined .",
    "class definitions organize resources into abstract categories .",
    "property definitions specify the way in which these resources are related to one another .",
    "for example , it is possible to state there exist people and dogs ( i.e.  classes ) and people have dogs as pets ( i.e.  a property ) .",
    "this is represented in rdfs in figure [ fig : rdfs - example ] .",
    "an rdfs ontology that states that a person has a dog as a pet.,scaledwidth=65.0% ]    rdfs inference rules are used to derive new statements given existing statements that use the rdfs langauge .",
    "rdfs inference rules make use of statements with the following uris :    * rdfs : class : denotes a class as opposed to an instance . * rdf : property : denotes a property / role .",
    "* rdfs : domain : denotes what a property projects from .",
    "* rdfs : range : denotes what a property projects to . *",
    "rdf : type : denotes that an instance is a type of class .",
    "* rdfs : subclassof : denotes that a class is a subclass of another . *",
    "rdfs : subpropertyof : denotes that a property is a sub - property of another .",
    "* rdfs : resource : denotes a generic resource .",
    "* rdfs : datatype : denotes a literal primitive class .",
    "* rdfs : literal : denotes a generic literal class .",
    "rdfs supports two general types of inference : subsumption and realization .",
    "subsumption determines which classes are a subclass of another .",
    "the rdfs inference rules that support subsumption are @xmath13 @xmath14 @xmath15 and finally , @xmath16 thus , if both    .... ( lanl : chihuahua , rdfs : subclassof , lanl : dog ) ( lanl : dog , rdfs : subclassof , lanl : mammal ) ....    are asserted , then it can be inferred that    .... ( lanl : chihuahua , rdfs : subclassof , lanl : mammal ) .",
    "....    next , realization is used to determine if a resource is an instance of a class .",
    "the rdfs inference rules that support realization are @xmath17 @xmath18 @xmath19 @xmath20 @xmath21 and finally , @xmath22 thus if , along with the statements in figure [ fig : rdfs - example ] ,    .... ( lanl : marko , lanl : pet , lanl : fluffy ) ....    is asserted , then it can be inferred that    .... ( lanl : marko , rdf : type , lanl : person ) ( lanl : fluffy , rdf : type , lanl : dog ) . ....",
    "given a knowledge base containing statements , these inference rules continue to execute until they no longer produce novel statements .",
    "it is the purpose of an rdfs reasoner to efficiently execute these rules .",
    "there are two primary ways in which inference rules are executed : at insert time and at query time . with respect to insert time , if a statement is inserted ( i.e.  asserted ) into the knowledge base , then the rdfs inference rules execute to determine what is entailed by this new statement .",
    "these newly entailed statements are then inserted in the knowledge base and the process continues . while this approach ensures fast query times ( as all entailments are guaranteed to exist at query time ) , it greatly increases the number of statements generated .",
    "for instance , given a deep class hierarchy , if a resource is a type of one of the leaf classes , then it asserted that it is a type of all the super classes of that leaf class . in order to alleviate the issue of `` statement bloat , '' inference",
    "can instead occur at query time .",
    "when a query is executed , the reasoner determines what other implicit statements should be returned with the query .",
    "the benefits and drawbacks of each approach are benchmarked , like much of computing , according to space vs. time .",
    "owl is a more complicated language which extends rdfs by providing more expressive constructs for defining classes @xcite .",
    "moreover , beyond subsumption and realization , owl provides inference rules to determine class and instance equivalence .",
    "there are many owl specific inference rules . in order to give the flavor of owl , without going into the many specifics ,",
    "this subsection will only present some examples of the more commonly used constructs .",
    "for a fine , in depth review of owl , please refer to @xcite .",
    "perhaps the most widely used language uri in owl is owl : restriction . in rdfs",
    ", a property can only have a domain and a range . in owl",
    ", a class can apply the following restrictions to a property :    * owl : cardinality * owl : mincardinality * owl : maxcardinality * owl : hasvalue * owl : allvaluesfrom * owl : somevaluesfrom    cardinality restrictions are used to determine equivalence and inconsistency .",
    "for example , in an owl ontology , it is possible to state that a country can only have one president .",
    "this is expressed in owl as diagrammed in figure [ fig : country - owl ] .",
    "the _ : 1234 resource is a blank node that denotes a restriction on the country class s lanl : president property .",
    "an owl ontology that states that the president of a country is a person and there can be at most one president for a country.,scaledwidth=60.0% ]    next , if usa : barack and usa : obama are both asserted to be the president of the united states with the statements    .... ( usa : barack , lanl : president , usa : united_states ) ( usa : obama , lanl : president , usa : united_states ) , ....    then it can be inferred ( according to owl rules ) that these resources are equivalent .",
    "this equivalence relationship is made possible because the maximum cardinality of the lanl : president property of a country is @xmath23 .",
    "therefore , if there are `` two '' people that are president , then they must be the same person .",
    "this is made explicit when the reasoner asserts the statements    .... ( usa : barack , owl : sameas , usa : obama ) ( usa : obama , owl : sameas , usa : barack ) .",
    "....    next , if lanl : herbertv is asserted to be different from usa : barack ( which , from previous , was asserted to be the same as usa : obama ) and lanl : herbertv is also asserted to be the president of the united states , then an inconsistency is detected . thus , given the ontology asserted in figure [ fig : country - owl ] and the previous assertions , asserting    .... ( lanl : herbertv , owl : differentfrom , usa : barack ) ( lanl : herbertv , lanl : president , usa : united_states ) ....    causes an inconsistency .",
    "this inconsistency is due to the fact that a country can only have one president and lanl : herbertv is not usa : barack .",
    "two other useful language uris for properties in owl are    * owl : symmetricproperty * owl : transitiveproperty    in short , if @xmath24 is symmetric , then if @xmath25 is asserted , then @xmath26 can be inferred .",
    "next , if the property @xmath24 is transitive , then if @xmath27 and @xmath25 are asserted then , @xmath28 can be inferred .",
    "there are various reasoners that exist for the owl language .",
    "a popular owl reasoner is pellet @xcite .",
    "the purpose of pellet is to execute the owl rules given existing statements in the knowledge base . for many large - scale knowledge base applications ( i.e.  triple- or quad - stores ) ,",
    "the application provides its own reasoner .",
    "popular knowledge bases that make use of the owl language are owlim @xcite , oracle spatial @xcite , and allegrograph @xcite .",
    "it is noted that due to the complexity ( in terms of implementation and running times ) , many knowledge base reasoners only execute subsets of the owl language .",
    "for instance , allegrograph s reasoner is called rdfs++ as it implements all of the rdfs rules and only some of the owl rules . however , it is also noted that racerpro @xcite can be used with allegrograph to accomplish complete owl reasoning .",
    "finally , opensesame @xcite can be used for rdfs reasoning . because opensesame is both a knowledge base and an api , knowledge base applications that implement the opensesame interfaces can automatically leverage the opensesame rdfs reasoner ; though there may be speed issues as the reasoner is not natively designed for that knowledge base application .      if rdf is strictly considered a monotonic , open - world logic language , then the semantic web is solidified as an open - world , monotonic logic environment . if reasoning is restricted to the legacy semantics of rdf",
    ", then it will become more difficult to reason on the semantic web as it grows in size and as more inconsistent knowledge is introduced . with the number of statements of the semantic web",
    ", computational hurdles are met when reasoning with rdfs and owl . with inconsistent statements on the semantic web ,",
    "it is difficult to reason as inconsistencies are not handled gracefully in rdfs or owl . in general , sound and complete reasoning",
    "will not be feasible as the semantic web continues to grow . in order to meet these challenges , the large knowledge collider project ( larkc )",
    "is focused on developing a reasoning platform to handle incomplete and inconsistent data @xcite .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",
`` researchers have developed methods for reasoning in rather small , closed , trustworthy , consistent , and static domains .",
    "they usually provide a small set of axioms and facts .",
    "[ owl ] reasoners can deal with @xmath29 axioms ( concept definitions ) , but they scale poorly for large instance sets . [ ... ] there is a deep mismatch between reasoning on a web scale and efficient reasoning algorithms over restricted subsets of first - order logic .",
    "this is rooted in underlying assumptions of current systems for computational logic : small set of axioms , small number of facts , completeness of inference , correctness of inference rules and consistency , and static domains . ''",
    "@xcitethere is a need for practical methods to reason on the semantic web .",
    "one promising logic was founded on the assumption of insufficient knowledge and resources .",
    "this logic is called the non - axiomatic logic ( nal ) @xcite .",
    "unfortunately for the semantic web as it is now , nal breaks the assumptions of rdf semantics as nal is multi - valent , non - monotonic , and makes use of statements with a subject - predicate form .",
    "however , if rdf is considered simply a data model , then it is possible to represent nal statements and make use of its efficient , distributed reasoning system .",
    "again , for the massive - scale , inconsistent world of the semantic web , sound and complete approaches are simply becoming more unreasonable .",
    "there are currently 8 nal languages .",
    "each language , from nal-0 to nal-8 , builds on the constructs of the previous in order to support more complex statements .",
    "the following list itemizes the various languages and what can be expressed in each .",
    "* nal-0 : binary inheritance .",
    "* nal-1 : inference rules .",
    "* nal-2 : sets and variants of inheritance . * nal-3 : intersections and differences * nal-4 : products , images , and ordinary relations .",
    "* nal-5 : statement reification .",
    "* nal-6 : variables .",
    "* nal-7 : temporal statements . * nal-8 : procedural statements .",
    "every nal language is based on a simple inheritance relationship .",
    "for example , in nal-0 , which assumes all statements are binary , @xmath30 states that marko ( subject ) inherits ( @xmath31 ) from person ( predicate ) .",
    "given that all subjects and predicates are joined by inheritance , there is no need to represent the copula when formally representing a statement . , property @xmath32 , and instance - property @xmath33 inheritance .",
    "however , these @xmath34 types of inheritance can also be represented using the basic @xmath31 inheritance .",
    "moreover , the rdf representation presented can support the explicit representation of other inheritance relationships if desired . ] .",
    "if rdf , as a data model , is to represent nal , then one possible representation for the above statement is    .... ( lanl : marko , lanl:1234 , lanl : person ) , ....    where lanl:1234 serves as a statement pointer .",
    "this pointer could be , for example , a 128-bit universally unique identifier ( uuid ) @xcite .",
    "it is important to maintain a statement pointer as beyond nal-0 , statements are not simply `` true '' or `` false '' .",
    "a statement s truth is not defined by its existence , but instead by extra numeric metadata associated with the statement .",
    "nal maintains an`` experience - grounded semantics [ where ] the truth value of a judgment indicates the degree to which the judgment is supported by the system s experience .",
    "defined in this way , truth value is system - dependent and time - dependent .",
    "different systems may have conflicting opinions , due to their different experiences . ''",
    "@xcitea statement has a particular truth value associated with it that is defined as the frequency of supporting evidence ( denoted @xmath35 $ ] ) and the confidence in the stability of that frequency ( denoted @xmath36 $ ] ) . for example , beyond nal-0 , the statement `` marko is a person '' is not `` 100% true '' simply because it exists . instead , every time that aspects of marko coincide with aspects of person , then @xmath37 increases .",
    "likewise , every time aspects of marko do not coincide with aspects of person , @xmath37 decreases .",
    "is modulated by both the system s `` external '' experiences and `` internal '' reasoning  both create new evidence .",
    "see @xcite for an in depth explanation .",
    "] thus , nal is non - monotonic as its statement evidence can increase and decrease . to demonstrate @xmath37 and @xmath38 , the above `` marko is a person '' statement can be represented in nal-1 as @xmath39 where , for the sake of this example , @xmath40 and @xmath41 . in an rdf representation , this can be denoted    .... ( lanl : marko , lanl:1234 , lanl : person ) ( lanl:1234 , nal : frequency , \" 0.9\"^^xsd : float ) ( lanl:1234 , nal : confidence , \" 0.8\"^^xsd : float ) , ....    where the lanl:1234 serves as a statement pointer allowing nal s nal : frequency and nal : confidence constructs to reference the inheritance statement .",
    "nal-4 supports statements that are more analogous to the subject - object - predicate form of rdf .",
    "if marko is denoted by the uri lanl : marko , alberto by the uri ucla : apepe , and friendship by the uri lanl : friend , then in nal-4 , the statement `` alberto is a friend of marko '' is denoted in rdf as    .... ( ucla : apepe , lanl : friend , lanl : marko ) .",
    "....    in nal-4 this is represented as @xmath42 where @xmath43 and @xmath44 are provided for the sake of the example .",
    "this statement states that the set @xmath45 inherits the property of friendship to a certain degree and stability as defined by @xmath37 and @xmath38 , respectively .",
    "the rdf representation of this nal-4 construct can be denoted    .... ( lanl:2345 , nal:_1 , ucla : pepe ) ( lanl:2345 , nal:_2 , lanl : marko ) ( lanl:2345 , lanl:3456 , lanl : friend ) ( lanl:3456 , nal : frequency , \" 0.8\"^^xsd : float ) ( lanl:3456 , nal : confidence , \" 0.5\"^^xsd : float ) . ....    in the triples above",
    ", lanl:2345 serves as an set and thus , this set inherits from friendship .",
    "that is , alberto and marko inherit the property of friendship .",
`` in traditional logic , a ` valid ' or ` sound ' inference rule is one that never derives a _ false _ conclusion ( that is , it will be contradicted by the future experience of the system ) from _ true _ premises @xcite . [ in nal ] , a ` valid conclusion ' is one that is most consistent with the evidence in the past experience , and a ` valid inference rule ' is one whose conclusions are supported by the premises used to derive them . ''",
    "@xcitegiven that nal is predicated on insufficient knowledge , there is no guarantee that reasoning will produce `` true '' knowledge with respect to the world that the statements are modeling as only a subset of that world is ever known .",
    "however , this does not mean that nal reasoning is random , instead , it is consistent with respect to what the system knows .",
    "in other words`` the traditional definition of validity of inference rules  that is to get true conclusions from true premises  no longer makes sense in [ nal ] . with insufficient knowledge and resources , even if the premises are true with respect to the past experience of the system there is no way to get infallible predictions about the future experience of the system even though the premises themselves may be challenged by new evidence . ''",
    "@xcitethe inference rules in nal are all syllogistic in that they are based on statements sharing similar terms ( i.e.  uris ) @xcite .",
    "the typical inference rule in nal has the following form @xmath46 where @xmath47 and @xmath48 are statements that share a common term .",
    "there are four standard syllogisms used in nal reasoning .",
    "these are enumerated below .    1 .",
    "deduction : @xmath49 .",
    "induction : @xmath50 .",
    "3 .   abduction : @xmath51 .",
    "exemplification : @xmath52 .",
    "two other important inference rule not discussed here are choice ( i.e.  what to do with contradictory evidence ) and revision ( i.e.  how to update existing evidence with new evidence ) .",
    "each of the inference rules have a different formulas for deriving @xmath53 from @xmath54 and @xmath55 .",
    "component is revised according to the revision rule .",
    "revision is not discussed in this article . ]",
    "these formulas are enumerated below .",
    "1 .   deduction : @xmath56 and @xmath57 .",
    "induction : @xmath58 and @xmath59 .",
    "3 .   abduction : @xmath60 and @xmath61 .",
    "exemplification : @xmath62 and @xmath63 .",
    "the variable @xmath64 is a system specific parameter used in the determination of confidence .    to demonstrate deduction ,",
    "suppose the two statements @xmath65 @xmath66 given these two statements and the inference rule for deduction , it is possible to infer @xmath67 next suppose the statement @xmath68 given the existing statements , induction , and a @xmath69 , it is possible to infer @xmath70 thus , while the system is not confident , according to all that the system knows , marko is a type of dog .",
    "this is because there are aspects of marko that coincide with aspects of dog ",
    "they are both mammals . however , future evidence , such as fur , four legs , sloppy tongue , etc . will be further evidence that marko and dog do not coincide and thus , the @xmath37 of @xmath71 will decrease .",
    "the significance of nal reasoning is that all inference is based on local areas of the knowledge base .",
    "that is , all inference requires only two degrees of separation from the resource being inferred on .",
    "moreover , reasoning is constrained by available computational resources , not by a requirement for logical completeness . because of these two properties , the implemented reasoning system is inherently distributed and when computational resources are not available , the system does not break , it simply yields less conclusions . for the semantic web , it may be best to adopt a logic that is better able to take advantage of its size and inconsistency . with a reasoner that is distributable and functions under variable computational resources , and by making use of a language that is non - monotonic and supports degrees of `` truth '' , nal may serve as a more practical logic for the semantic web .",
    "however , this is only possible if the rdf data model is separated from the rdf semantics and nal s subject - predicate form can be legally represented .",
    "there are many other language constructs in nal that are not discussed here . for an in depth review of nal",
    ", please refer to the _ defacto _ reference at @xcite .",
    "moreover , for a fine discussion of the difference between logics of truth ( i.e.  mathematical logic  modern predicate logic ) and logics of thought ( i.e.  cognitive logic ",
    "nal ) , see @xcite .",
    "the web of data can be interpreted as a distributed multi - relational network  a giant global graph .",
    "a mutli - relational network denotes a set of vertices ( i.e.  nodes ) that are connected to one another by set of labeled edges ( i.e.  typed links ) . in the graph and network theory community",
    ", the multi - relational network is less prevalent .",
    "the more commonly used network data structure is the single - relational network , where all edges are of the same type and thus , there is no need to label edges .",
    "unfortunately , most network algorithms have been developed for the single - relational network data structure .",
    "however , it is possible to port all known single - relational network algorithms over to the multi - relational domain . in doing so , it is possible to leverage these algorithms on the giant global graph .",
    "the purpose of this section is to    1 .",
    "formalize the single - relational network ( see  [ sec : single - relational - networks ] ) , 2 .   formalize the multi - relational network",
    "( see  [ sec : multi - relational - networks ] ) , 3 .",
    "present a collection of common single - relational network algorithms ( see  [ sec : single - relational - algorithms ] ) , and then finally , 4 .",
    "present a method for porting all known single - relational network algorithms over to the multi - relational domain ( see  [ sec : multi - relational - algorithms ] ) .",
    "network algorithms are useful in many respects and have been generally applied to analysis and querying .",
    "if the network models an aspect of the world , then network analysis techniques can be used to elucidate general structural properties of the network and thus , the world .",
    "moreover , network query algorithms have been developed for searching and ranking .",
    "when these algorithms can be effectively and efficiently applied to the giant global graph , the giant global graph can serve as a medium for network analysis and query .",
    "the single - relational network represents a set of vertices that are related to one another by a homogenous set of edges . for instance , in a single - relational coauthorship network , all vertices denote authors and all edges denote a coauthoring relationship .",
    "coauthorship exists between two authors if they have both written an article together .",
    "moreover , coauthorship is symmetric  if person @xmath72 coauthored with person @xmath24 , then person @xmath24 has coauthored with person @xmath72 . in general , these types of symmetric networks are known as undirected , single - relational networks and can be denoted @xmath73 where @xmath74 is the set of vertices and @xmath75 is the set of undirected edges .",
    "the edge @xmath76 states that vertex @xmath77 and @xmath78 are connected to each other .",
    "figure [ fig : undirected ] diagrams an undirected coauthorship edge between two author vertices .",
    "an undirected edge between two authors in an undirected single - relational network.,scaledwidth=70.0% ]    single - relational networks can also be directed .",
    "for instance , in a single - relational citation network , the set of vertices denote articles and the set of edges denote citations between the articles . in this scenario ,",
    "the edges are not symmetric as one article citing another does not imply that the cited article cites the citing article .",
    "directed single - relational networks can be denoted @xmath79 where @xmath80 states that vertex @xmath77 is connected to vertex @xmath78 .",
    "figure [ fig : directed ] diagrams a directed citation edge between two article vertices .     a directed edge between two articles in a directed single - relational network.,scaledwidth=70.0% ]    both undirected and directed single - relational networks have a convenient matrix representation .",
    "this matrix is known as an adjacency matrix and is denoted @xmath81 where @xmath82 . if @xmath83 , then vertex @xmath77 is adjacent ( i.e.  connected ) to vertex @xmath78 .",
    "it is important to note that there exists an information - preserving , bijective mapping between the set - theoretic and matrix representations of a network . throughout the remainder of this section , depending on the algorithm presented ,",
    "one or the other form of a network is used . finally , note",
    "that the remainder of this section is primarily concerned with directed networks as a directed network can model an undirected network . in other words , the undirected edge @xmath84 can be represented as the two directed edges @xmath85 and @xmath86 .      the multi - relational network is a more complicated structure that can be used to represent multiple types of relationships between vertices .",
    "for instance , it is possible to not only represent researchers , but also their articles in a network of edges that represent authorship , citation , etc .",
    "a directed multi - relational network can be denoted @xmath87 where @xmath88 is a family of edge sets such that any @xmath89 is a set of edges with a particular meaning ( e.g.  authorship , citation , etc . ) .",
    "a multi - relational network can be interpreted as a collection of single - relational networks that all share the same vertex set .",
    "another representation of a multi - relational network is similar to the one commonly employed to define an rdf graph .",
    "this representation is denoted @xmath90 where @xmath91 is the set of edge labels . in this representation",
    "if @xmath92 and @xmath93 , then the triple @xmath94 states that vertex @xmath77 is connected to vertex @xmath78 by the relationship type @xmath95 .",
    "figure [ fig : multi - relational ] diagrams multiple relationship types between scholars and articles in a multi - relational network .",
    "multiple types of edges between articles and scholars in a directed multi - relational network.,scaledwidth=70.0% ]    like the single - relational network and its accompanying adjacency matrix , the multi - relational network has a convenient @xmath34-way tensor representation .",
    "this @xmath34-way tensor is denoted @xmath96 this representation can be interpreted as a collection of adjacency matrix  slices \" , where each slice is a particular edge type . in other words , if @xmath97 , then @xmath98 . like the relationship between the set - theoretic and matrix forms of a single - relational network , @xmath99 , @xmath100 , and @xmath101",
    "can all be mapped onto one another without loss of information .",
    "each representation will be used depending on the usefulness of its form with respect to the idea being expressed .    on the giant global graph",
    ", rdf serves as the specification for graphing resources .",
    "vertices are denoted by uris , blank nodes , and literals and the edge labels are denoted by uris .",
    "multi - relational network algorithms can be used to exploit the giant global graph . however , there are few algorithms dedicated specifically to multi - relational networks .",
    "most network algorithms have been designed for single - relational networks .",
    "the remainder of this section will discuss some of the more popular single - relational network algorithms and then present a method for porting these algorithms ( as well as other single - relational network algorithms ) over to the multi - relational domain .",
    "this section concludes with a distributable and scalable method for executing network algorithms on the giant global graph .",
    "the design and study of graph and network algorithms is conducted primarily by mathematicians ( graph theory ) @xcite , physicists and computer scientists ( network theory ) @xcite , and social scientists ( social network analysis ) @xcite .",
    "many of the algorithms developed in these domains can be used together and form the general - purpose  toolkit \" for researchers doing network analysis and for engineers developing network - based services .",
    "the following itemized list presents a collection of the single - relational network algorithms that will be reviewed in this subsection .",
    "as denoted with its name in the itemization , each algorithm can be used to identify properties of vertices , paths , or the network .",
    "vertex metrics assign a real value to a vertex .",
    "path metrics assign a real value to a path . and finally , network metrics assign a real value to the network as a whole .",
    "* shortest path : path metric (  [ sec : shortpath ] ) * eccentricity : vertex metric (  [ sec : ecenraddiam ] ) * radius : network metric (  [ sec : ecenraddiam ] ) * diameter : network metric (  [ sec : ecenraddiam ] ) * closeness : vertex metric (  [ sec : closebetween ] ) * betweenness : vertex metric (  [ sec : closebetween ] ) * stationary probability distribution : vertex metric (  [ sec : stationary ] ) * pagerank : vertex metric (  [ sec : pagerank ] ) * spreading activation : vertex metric (  [ sec : spread ] ) * assortative mixing : network metric (  [ sec : assortativity ] )    a simple intuitive approach to determine the appropriate algorithm to use for an application scenario is presented in @xcite . in short ,",
    "various factors come into play when selecting a network algorithm such as the topological features of the network ( e.g.  its connectivity and its size ) , the computational requirements of the algorithms ( e.g.  its complexity ) , the type of results that are desired ( e.g.  personalized or global ) , and the meaning of the algorithm s result ( e.g.  geodesic - based , flow - based , etc . )",
    ". the following sections will point out which features describe the presented algorithms .      the shortest path metric is the foundation of all other geodesic metrics .",
    "the other geodesic metrics discussed are eccentricity , radius , diameter , closeness , and betweenness .",
    "a shortest path is defined for any two vertices @xmath92 such that the sink vertex @xmath78 is reachable from the source vertex @xmath77 .",
    "if @xmath78 is unreachable from @xmath77 , then the shortest path between @xmath77 and @xmath78 is undefined .",
    "thus , for geodesic metrics , it is important to only considered strongly connected networks , or strongly connected components of a network . to any @xmath78 ) . ]",
    "the shortest path between any two vertices @xmath77 and @xmath78 in a single - relational network is the smallest of the set of all paths between @xmath77 and @xmath78 . if @xmath102 is a function that takes two vertices and returns the set of all paths",
    "@xmath103 where for any @xmath104 , @xmath105 , then the length of the shortest path between @xmath77 and @xmath78 is @xmath106 , where @xmath107 returns the smallest value of its domain .",
    "the shortest path function is denoted @xmath108 with the function rule @xmath109    there are many algorithms to determine the shortest path between vertices in a network .",
    "dijkstra s method is perhaps the most popular as it is the typical algorithm taught in introductory algorithms classes @xcite .",
    "however , if the network is unweighted , then a simple breadth - first search is a more efficient way to determine the shortest path between @xmath77 and @xmath78 . starting from @xmath77",
    "a `` fan - out '' search for @xmath78 is executed where at each time step , adjacent vertices are traversed to .",
    "the first path that reaches @xmath78 is the shortest path from @xmath77 to @xmath78 .",
    "the radius and diameter of a network require the determination of the eccentricity of every vertex in @xmath74 .",
    "the eccentricity of a vertex @xmath77 is the largest shortest path between @xmath77 and all other vertices in @xmath74 such that the eccentricity function @xmath110 has the rule @xmath111 where @xmath112 returns the largest value of its domain @xcite .",
    "the eccentricity metric calculates @xmath113 shortest paths of a particular vertex .    the radius of the network is the minimum eccentricity of all vertices in @xmath74 @xcite . the function @xmath114 has the rule @xmath115    finally , the diameter of a network is the maximum eccentricity of the vertices in @xmath74 @xcite .",
    "the function @xmath116 has the rule @xmath117    the diameter of a network is , in some cases , telling of the growth properties of the network ( i.e.  the general principle by which new vertices and edges are added ) .",
    "for instance , if the network is randomly generated ( edges are randomly assigned between vertices ) , then the diameter of the network is much larger then if the network is generated according to a more `` natural growth '' function such as a preferential attachment model , where highly connected vertices tend to get more edges ( colloquially captured by the phrase `` the rich get richer '' ) @xcite .",
    "thus , in general , natural networks tend to have a much smaller diameter .",
    "this was evinced by an empirical study of the world wide web citation network , where the diameter of the network was concluded to be only @xmath118 @xcite .",
    "closeness and betweenness centrality are popular network metrics for determining the `` centralness '' of a vertex and have been used in sociology @xcite , bioinformatics @xcite , and bibliometrics @xcite .",
    "centrality is a loose term that describes the intuitive notion that some vertices are more connected / integral / central / influential within the network than others .",
    "closeness centrality is one such centrality measure and is defined as the mean shortest path between some vertex @xmath77 and all the other vertices in @xmath74 @xcite .",
    "the function @xmath119 has the rule @xmath120    betweenness centrality is defined for a vertex in @xmath74 @xcite .",
    "the betweenness of @xmath121 is the number of shortest paths that exist between all vertices @xmath122 that have @xmath77 in their path divided by the total number of shortest paths between @xmath78 and @xmath95 , where @xmath123 . if @xmath124 is the function that returns the set of shortest paths between any two vertices @xmath78 and @xmath95 such that @xmath125 and @xmath126 is the set of shortest paths between two vertices @xmath78 and @xmath95 that have @xmath77 in the path , where @xmath127 then the betweenness function @xmath128 has the rule @xmath129    there are many variations to the standard representations presented above . for a more in depth review on these metrics ,",
    "see @xcite and @xcite .",
    "finally , centrality is not restricted only to geodesic metrics .",
    "the next three algorithms are centrality metrics based on random walks or `` flows '' through a network .",
    "a markov chain is used to model the states of a system and the probability of transition between states @xcite .",
    "a markov chain is best represented by a probabilistic , single - relational network where the states are vertices , the edges are transitions , and the edge weights denote the probability of transition . a probabilistic",
    ", single - relational network can be denoted @xmath130\\right)\\ ] ] where @xmath131 is a function that maps each edge in @xmath75 to a probability value .",
    "the outgoing edges of any vertex form a probability distribution that sums to @xmath132 . in this section ,",
    "all outgoing probabilities from a particular vertex are assumed to be equal .",
    "thus , @xmath133 , where @xmath134 is the set of vertices adjacent to @xmath77 .",
    "a random walker is a useful way to visualize the transitioning between vertices .",
    "a random walker is a discrete element that exists at a particular @xmath121 at a particular point in time @xmath135 .",
    "if the vertex at time @xmath136 is @xmath77 then the next vertex at time @xmath137 will be one of the vertices adjacent to @xmath77 in @xmath138 . in this manner",
    ", the random walker makes a probabilistic jump to a new vertex at every time step .",
    "as time @xmath136 goes to infinity a unique stationary probability distribution emerges if and only if the network is aperiodic and strongly connected .",
    "the stationary probability distribution expresses the probability that the random walker will be at a particular vertex in the network . in matrix form",
    ", the stationary probability distribution is represented by a row vector @xmath139^{|v|}$ ] , where @xmath140 is the probability that the random walker is at @xmath77 and @xmath141 .",
    "if the network is represented by the row - stochastic adjacency matrix @xmath142 and if the network is aperiodic and strongly connected , then there exists some @xmath143 such that @xmath144 .",
    "thus , the stationary probability distribution is the primary eigenvector of @xmath145 .",
    "the primary eigenvector of a network is useful in ranking its vertices as those vertices that are more central are those that have a higher probability in @xmath143 .",
    "thus , intuitively , where the random walker is likely to be is a indicator of how central the vertex is . however , if the network is not strongly connected ( very likely for most natural networks ) , then a stationary probability distribution does not exist .",
    "pagerank makes use of the random walker model previously presented @xcite .",
    "however , in pagerank , the random walker does not simply traverse the single - relational network by moving between adjacent vertices , but instead has a probability of jumping , or `` teleporting '' , to some random vertex in the network . in some instances",
    ", the random walker will follow an outgoing edge from its current vertex location .",
    "in other instances , the random walker will jump to some other random vertex in the network that is not necessarily adjacent to it .",
    "the benefit of this model is that it ensures that the network is strongly connected and aperiodic and thus , there exists a stationary probability distribution . in order to calculate pagerank , two networks are used .",
    "the standard single - relational network is represented as the row - stochastic adjacency matrix @xmath146 any @xmath121 where @xmath147 is called a  rank - sink \" .",
    "rank - sinks ensure that the network is not strongly connected . to rectify this connectivity problem , all vertices that are",
    "rank - sinks are connected to every other vertex with probability @xmath148 .",
    "next , for teleportation , a fully connected network is created that is denoted @xmath149 .",
    "the random walker will choose to use @xmath145 or @xmath150 at time step @xmath136 as its transition network depending on the probability value @xmath151 $ ] , where in practice , @xmath152 .",
    "this means that 85% of the time the random walker will use the edges in @xmath145 to traverse , and the other 15% of the time , the random walker will use the edges in @xmath150 .",
    "the @xmath153-biased union of the networks @xmath145 and @xmath150 guarantees that the random walker is traversing an strongly connected and aperiodic network .",
    "the random walker s traversal network can be expressed by the matrix @xmath154    the pagerank row vector @xmath139^{|v|}$ ] has the property @xmath155 .",
    "thus , the pagerank vector is the primary eigenvector of the modified single - relational network .",
    "moreover , @xmath143 is the stationary probability distribution of @xmath156 . from a certain perspective",
    ", the primary contribution of the pagerank algorithm is not in the way it is calculated , but in how the network is modified to support a convergence to a stationary probability distribution .",
    "pagerank has been popularized by the google search engine and has been used as a ranking algorithm in various domains .",
    "relative to the geodesic centrality algorithms presented previous , pagerank is a more efficient way to determine a centrality score for all vertices in a network .",
    "however , calculating the stationary probability distribution of a network is not cheap and for large networks , can not be accomplished in real - time .",
    "local rank algorithms are more useful for real - time results in large - scale networks such as the giant global graph .",
    "both the stationary probability distribution and pagerank are global rank metrics .",
    "that is , they rank all vertices relative to all vertices and as such , require a full network perspective .",
    "however , for many applications , a local rank metric is desired .",
    "local rank metrics rank a subset of vertices relative to some set of source vertices .",
    "local rank metrics have the benefit of being faster to compute and being relative to a particular area of the network . for large - scale networks ,",
    "local rank metrics are generally more practical for real - time queries .",
    "perhaps the most popular local rank metric is spreading activation . spreading activation is a network analysis technique that was inspired by the spreading activation potential found in biological neural networks @xcite .",
    "this algorithm ( and its many variants ) has been used extensively in semantic network reasoning and recommender systems .",
    "the purpose of the algorithm is to expose , in a computationally efficient manner , those vertices which are closest ( in terms of a flow distance ) to a particular set of vertices .",
    "for example , given @xmath157 , if there exists many short recurrent paths between vertex @xmath77 and vertex @xmath78 and not so between @xmath77 and @xmath95 , then it can be assumed that vertex @xmath77 is more `` similar '' to vertex @xmath78 than @xmath95 .",
    "thus , the returned ranking will rank @xmath78 higher than @xmath95 relative to @xmath77 . in order to calculate this distance , `` energy ''",
    "is assigned to vertex @xmath77 .",
    "let @xmath158^{|v|}$ ] denote the energy vector , where at the first time step all energy is at @xmath77 such that @xmath159 .",
    "the energy vector is propagated over @xmath145 for @xmath160 number of steps by the equation @xmath161 . moreover , at every time step , @xmath72 is decayed some amount by @xmath162 $ ] . at the end of the process",
    ", the vertex that had the most energy flow through it ( as recorded by @xmath163 ) is considered the vertex that is most related to vertex @xmath77 .",
    "algorithm [ alg : spread ] presents this spreading activation algorithm .",
    "the resultant @xmath143 provides a ranking of all vertices at most @xmath164 steps away from @xmath77 .    a class of algorithms known as `` priors '' algorithms perform computations similar to the local rank spreading activation algorithm , but do so using a stationary probability distribution @xcite .",
    "much like the pagerank algorithm distorts the original network , priors algorithms distort the local neighborhood of the graph and require at every time step , with some probability , that all random walkers return to their source vertex .",
    "the long run behavior of such systems yield a ranking biased towards ( or relative to ) the source vertices and thus , can be characterized as local rank metrics .",
    "the final single - relational network algorithm discussed is assortative mixing .",
    "assortative mixing is a network metric that determines if a network is assortative ( colloquially captured by the phrase  birds of a feather flock together \" ) , disassortative ( colloquially captured by the phrase  opposites attract \" ) , or uncorrelated .",
    "an assortative mixing algorithm returns values in @xmath165 $ ] , where @xmath23 is assortative , @xmath166 is disassortative , and @xmath167 is uncorrelated . given a collection of vertices and metadata about each vertex , it is possible to determine the assortative mixing of the network .",
    "there are two assortative mixing algorithms : one for scalar or numeric metadata ( e.g.  age , weight , etc . ) and one for nominal or categorical metadata ( e.g.  occupation , sex , etc . ) . in general ,",
    "an assortative mixing algorithm can be used to answer questions such as :    * do friends in a social network tend to be the same age ? * do colleagues in a coauthorship network tend to be from the same university ? * do relatives in a kinship network tend to like the same foods ?",
    "note that to calculate the assortative mixing of a network , vertices must have metadata properties .",
    "the typical single - relational network @xmath168 does not capture this information .",
    "therefore , assume some other data structure that stores metadata about each vertex .",
    "the original publication defining the assortative mixing metric for scalar properties used the parametric pearson correlation of two vectors @xcite . or",
    "kendall @xmath10 may be the more useful correlation coefficient .",
    "] one vector is the scalar value of the vertex property for the vertices on the tail of all edges .",
    "the other vector is the scalar value of the vertex property for the vertices on the head of all the edges .",
    "thus , the length of both vectors is @xmath169 ( i.e.  the total number of edges in the network ) .",
    "formally , the pearson correlation - based assortativity is defined as @xmath170\\left[|e| \\sum_i k^2_i -\\left(\\sum_i k_i\\right)^2\\right]}},\\ ] ] where @xmath171 is the scalar value of the vertex on the tail of edge @xmath77 , and @xmath172 is the scalar value of the vertex on the head of edge @xmath77 . for nominal metadata ,",
    "the equation @xmath173 yields a value in @xmath165 $ ] as well , where @xmath174 is the number of edges in the network that have property value @xmath8 on both ends , @xmath175 is the number of edges in the network that have property value @xmath8 on their tail vertex , and @xmath176 is the number of edges that have property value @xmath8 on their head vertex @xcite .",
    "all the aforementioned algorithms are intended for single - relational networks .",
    "however , it is possible to map these algorithms over to the multi - relational domain and thus , apply them to the giant global graph . in the most simple form , it is possible to ignore edge labels and simply treat all edges in a multi - relational network as being equal .",
    "this method , of course , does not take advantage of the rich structured data that multi - relational networks offer .",
    "if only a particular single - relational slice of the multi - relational network is desired ( e.g.  a citation network , lanl : cites ) , then this single - relational component can be isolated and subjected the previously presented single - relational network algorithms .",
    "however , if a multi - relational network is to be generally useful , then a method that takes advantage of the various types of edges in the network is desired .",
    "the methods presented next define abstract / implicit paths through a network . by doing so",
    ", a multi - relational network can be redefined as a `` semantically rich '' single - relational network .",
    "for example , in figure [ fig : multi - relational ] , there does not exist lanl : authorcites edges ( i.e.  if person @xmath77 wrote an article that cites the article of person @xmath78 , then it is true that @xmath77 lanl : authorcites @xmath78 ) . however",
    ", this edge can be automatically generated by making use of the lanl : authored and lanl : cites edges . in this way , a breadth - first search or a random walk can use these automatically generated , semantically rich edges . by using generated edges ,",
    "it is possible to treat a multi - type subset of the multi - relational network as a single - relational network .",
    "a path algebra is presented to map a multi - relational network to a single - relational network in order to expose the multi - relational network to single - relational network algorithms .",
    "the multi - relational path algebra summarized is discussed at length in @xcite . in short ,",
    "the path algebra manipulates a multi - relational tensor , @xmath177 , in order to derive a semantically - rich , weighted single - relational adjacency matrix , @xmath178 .",
    "uses of the algebra can be generally defined as @xmath179 where @xmath180 is the path operation defined .",
    "there are two primary operations used in the path algebra : traverse and filter .",
    "the traverse operation is denoted @xmath181 and uses standard matrix multiplication as its function rule .",
    "traverse is used to `` walk '' the multi - relational network .",
    "the idea behind traverse is first described using a single - relational network example .",
    "if a single - relational adjacency matrix is raised to the second power ( i.e.  multiplied with itself ) then the resultant matrix denotes how many paths of length @xmath182 exist between vertices @xcite .",
    "that is , @xmath183 ( i.e.  @xmath184 ) denotes how many paths of length @xmath182 go from vertex @xmath77 to vertex @xmath78 . in general , for any power @xmath8 , @xmath185 this property can be applied to a multi - relational tensor .",
    "if @xmath186 and @xmath187 are multiplied together then the result adjacency matrix denotes the number of paths of type @xmath188 that exist between vertices .",
    "for example , if @xmath186 is the coauthorship adjacency matrix , then the adjacency matrix @xmath189 denotes how many coauthorship paths exist between vertices , where @xmath190 transposes the matrix ( i.e.  inverts the edge directionality ) .",
    "in other words if marko ( vertex @xmath77 ) and johan ( vertex @xmath78 ) have written @xmath118 papers together , then @xmath191 . however , given that the identity element @xmath192 may be greater than @xmath167 ( i.e.  a person has coauthored with themselves ) , it is important to remove all such reflexive coauthoring paths back to the original author . in order to do this ,",
    "the filter operation is used .",
    "given the identify matrix @xmath193 and the all @xmath23 matrix @xmath194 , @xmath195 yields a true coauthorship adjacency matrix , where @xmath196 is the entry - wise hadamard matrix multiplication operation @xcite .",
    "hadamard matrix multiplication is defined as @xmath197 .\\ ] ] in this example , the hadamard entry - wise multiplication operation applies an `` identify filter '' to @xmath198 that removes all paths back to the source vertices ( i.e.  back to the identity vertices ) as it sets @xmath199 .",
    "this example demonstrates that a multi - relational network can be mapped to a semantically - rich , single - relational network . in the original multi - relational network",
    ", there exists no coauthoring relationship .",
    "however , this relation exists implicitly by means of traversing and filtering particular paths .",
    "the benefit of the summarized path algebra is that is can express various abstract paths through a multi - relational tensor in an algebraic form .",
    "thus , given the theorems of the algebra , it is possible to simplify expressions in order to derive more computationally efficient paths for deriving the same information .",
    "the primary drawback of the algebra is that it is a matrix algebra that globally operates on adjacency matrix slices of the multi - relational tensor @xmath101 . given that size of the giant global graph , it is not practical to execute global matrix operations .",
    "however , these path expressions can be used as an abstract path that a discrete `` walker '' can take when traversing local areas of the graph .",
    "this idea is presented next .",
    "previously , both the stationary probability distribution , pagerank , and spreading activation were defined as matrix operations .",
    "however , it is possible to represent these algorithms using discrete random walkers .",
    "in fact , in many cases , this is the more natural representation both in terms of intelligibility and scalability . for many ,",
    "it is more intuitive to think of these algorithms as being executed by a discrete random walker moving from vertex to vertex recording the number of times it has traversed each vertex . in terms of scalability , all of these algorithms can be approximated by using less walkers and thus , less computational resources .",
    "moreover , when represented as a swarm of discrete walkers , the algorithm is inherently distributed as a walker is only aware of its current vertex and those vertices adjacent to it .    for multi - relational networks",
    ", this same principle applies .",
    "however , instead of randomly choosing an adjacent vertex to traverse to , the walker chooses a vertex that is dependent upon an abstract path description defined for the walker .",
    "walkers of this form are called grammar - based random walkers @xcite .",
    "a path for a walker can be defined using any language such as the path algebra presented previous or sparql @xcite .",
    "the following examples are provided in sparql as it is the _ defacto _ query language for the web of data .",
    "given the coauthorship path description @xmath200 it is possible to denote this as a local walker computation in sparql as    .... select ?",
    "dest where {    @ lanl : authored ? x .    ?",
    "dest lanl : authored ? x .    filter ( @ ! = ?",
    "dest )     } ....    where the symbol @ denotes the current location of the walker ( i.e.  a parameter to the query ) and ?",
    "dest is a collection of potential locations for the walker to move to ( i.e.  the return set of the query ) .",
    "it is important to note that the path algebra expression performs a global computation while the sparql query representation distributes the computation to the individual vertices ( and thus , individual walkers ) . given the set of resources that bind to ?",
    "dest , the walker selects a single resource from that set and traverses to it . at which point , @",
    "is updated to that selected resource value .",
    "this process continues indefinitely and , in the long run behavior , the walker s location probability over @xmath74 denotes the stationary distribution of the walker in the giant global graph according to the abstract coauthorship path description .",
    "the sparql query redefines what is meant by an adjacent vertex by allowing longer paths to be represented as single edges .",
    "again , this is why it is stated that such mechanisms yield semantically rich , single - relational networks .    in the previous coauthorship example ,",
    "the grammar walker , at every vertex it encounters , executes the same sparql query to locate `` adjacent '' vertices . in more complex grammars , it is possible to chain together sparql queries into a graph of expressions such that the walker moves not only through the giant global graph , but also through a web of sparql queries .",
    "each sparql query defines a different abstract edge to be traversed .",
    "this idea is diagrammed in figure [ fig : grammar - walk ] , where the grammar walker `` walks '' both the grammar and the giant global graph .",
    "a grammar walker maintains its state in the giant global graph ( its current vertex location ) and its state in the grammar ( its current grammar location  sparql query ) . after executing its current sparql query",
    ", the walker moves to a new vertex in the giant global graph as well as to a new grammar location in the grammar.,scaledwidth=67.5% ]    to demonstrate a multiple sparql query grammar , a pagerank coauthorship grammar is defined using two queries .",
    "the first query was defined above and the second query is    .... select ?",
    "dest where {    ?",
    "dest rdf : type lanl : person } ....    this rule serves as the `` teleportation '' function utilized in pagerank to ensure a strongly connected network .",
    "thus , if there is a @xmath153 probability that the first query will be executed and a @xmath201 probability that the second rule will be executed , then coauthorship pagerank in the giant global graph is computed . of course , the second rule can be computationally expensive , but it serves to elucidate the idea . ) will halt the process .",
    "thus , in such cases , when the process halts , the second query should be executed . at which point , rank sinks are alleviated and pagerank is calculated . ]",
    "it is noted that the stationary probability distribution and the pagerank of the giant global graph can be very expensive to compute if the grammar does not reduce the traverse space to some small subset of the full giant global graph . in many cases ,",
    "grammar walkers are more useful for calculating semantically meaningful spreading activations . in this form",
    ", the giant global graph can be searched efficiently from a set of seed resources and a set of walkers that do not iterate indefinitely , but instead , for some finite number of steps .",
    "the geodesic algorithms previously defined in  [ sec : single - relational - algorithms ] can be executed in an analogous fashion using grammar - based geodesic walkers @xcite .",
    "the difference between a geodesic walker and a random walker is that the geodesic walker creates a `` clone '' walker each time it is adjacent to multiple vertices .",
    "this is contrasted to the random walker , where the random walker randomly chooses a single adjacent vertex .",
    "this cloning process implements a breadth - first search .",
    "it is noted that geodesic algorithms have high algorithmic complexity and thus , unless the grammar can be defined such that only a small subset of the giant global graph is traversed , then such algorithms should be avoided . in general , the computational requirements of the algorithms in single - relational networks also apply to multi - relational networks . however , in multi - relational networks , given that adjacency is determined through queries , multi - relational versions of these algorithms are more costly .",
    "given that the giant global graph will soon grow to become the largest network instantiation in existence , being aware of such computational requirements is a necessary .",
    "finally , a major concern with the web of data as it is right now is that data is pulled to a machine for processing .",
    "that is , by resolving an http - based uri , an rdf subgraph is returned to the retrieving machine .",
    "this is the method advocated by the linked data community @xcite .",
    "thus , walking the giant global graph requires pulling large amounts of data over the wire . for large network traversals , instead of moving the data to the process , it may be better to move the process to the data . by discretizing the process ( e.g.  using walkers ) it is possible to migrate walkers between the various servers that support the giant global graph .",
    "these ideas are being further developed in future work .",
    "the web of data can be interpreted as a distributed object repository  a web of process .",
    "an object , from the perspective of object - oriented programming , is defined as a discrete entity that maintains    * fields : properties associated with the object .",
    "these may be pointers to literal primitives such as characters , integers , etc . or pointers to other objects .",
    "* methods : behaviors associated with the object .",
    "these are the instructions that an object executes in order to change its state and the state of the objects it references .",
    "objects are abstractly defined in source code .",
    "source code is written in a human readable / writeable language .",
    "an example person class defined in the java language is presented below .",
    "this particular class has two fields ( i.e.  age and friends ) and one method ( i.e.  makefriend ) .",
    "....    public class person {      int age ;      collection < person > friends ;           public void makefriend(person p ) {        this.friends.add(p ) ;      }       } ....    there is an important distinction between a class and an object .",
    "a class is an abstract description of an object .",
    "classes are written in source code .",
    "object s are created during the run - time of the executed code and embody the properties of their abstract class . in this way , objects instantiate ( or realize ) classes . before objects can be created , a class described in source code",
    "must be compiled so that the machine can more efficiently process the code .",
    "in other words , the underlying machine has a very specific instruction set ( or language ) that it uses .",
    "it is the role of the compiler to translate source code into machine - readable instructions .",
    "instructions can be represented in the native language of the hardware processor ( i.e.  according to its instruction set ) or it can be represented in an intermediate language that can be processed by a virtual machine ( i.e.  software that simulates the behavior of a hardware machine ) . if a virtual machine language is used , it is ultimately the role of the virtual machine to translate the instructions it is processing into the instruction set used by the underlying hardware machine .",
    "however , the computing stack does not end there .",
    "it is ultimately up to the `` laws of physics '' to alter the state of the hardware machine .",
    "as the hardware machine changes states , its alters the state of all the layers of abstractions built atop it .",
    "object - oriented programming is perhaps the most widely used software development paradigm and is part of the general knowledge of most computer scientists and engineers .",
    "examples of the more popular object - oriented languages include c++ , java , and python .",
    "some of the benefits of object - oriented programming are itemized below .",
    "* abstraction : representing a problem intuitively as a set of interacting objects . *",
    "encapsulation : methods and fields are `` bundled '' with particular objects . *",
    "inheritance : subclasses inherit the fields and methods of their parent classes .    in general , as systems scale",
    ", the management of large bodies of code is made easier through the use of object - oriented programming .",
    "there exist many similarities between the rdfs and owl semantic web ontology languages discussed in ",
    "[ sec : knowledge - base ] and the typical object - oriented programming languages previously mentioned .",
    "for example , in the ontology languages , there exist the notion of classes , their instances ( i.e.  objects ) , and instance properties ( i.e.  fields ) . however , the biggest differentiator is that objects in object - oriented environments maintain methods .",
    "the only computations that occur in rdfs and owl are through the inference rules of the logic they implement and as such are not specific to particular classes .",
    "even if rules are implemented for particular classes ( for example , in swrl @xcite ) , such rule languages are not typically turing - complete @xcite and thus , do not support general - purpose computing .    in order to bring general - purpose , object - oriented computing to the web of data ,",
    "various object - oriented languages have been developed that represent their classes and their objects in rdf .",
    "much like rule languages such as swrl have an rdf encoding , these object - oriented languages do as well .",
    "however , they are general - purpose imperative languages that can be used to perform any type of computation . moreover , they are object - oriented so that they have the benefits associated with object - oriented systems itemized previously .",
    "when human readable - writeable source code written in an rdf programming language is compiled , it is compiled into rdf . by explicitly encoding methods in rdf  their instruction - level data  the web of data",
    "is transformed into a web of process .",
    "the remainder of this section will discuss three computing models on the web of process :    1 .",
    "partial object repository : where typical object - oriented languages utilize the web of process to store object field data , not class descriptions and methods . 2 .",
    "full object repository : where rdf - based object - oriented languages encode classes , object fields , and object methods in rdf .",
    "3 .   virtual machine repository : where rdf - based classes , objects , and virtual machines are represented in the web of process .",
    "the web of process can be used as a partial object repository . in this sense , objects represented in the web of process only maintain their fields , not their methods .",
    "it is the purpose of some application represented external to the web of process to store and retrieve object data from the web of process . in many ways ,",
    "this model is analogous to a `` black board '' tuple - space @xcite . by converting the data that is encoded in the web of process to an object instance",
    ", the web of process serves as a database for populating the objects of an application .",
    "it is the role of this application to provide a mapping from the rdf encoded object to its object representation in the application ( and vice versa for storage ) .",
    "a simple mapping is that a uri can denote a pointer to a particular object .",
    "the predicates of the statements that have the uri as a subject are seen as the field names .",
    "the objects of those statements are the values of those fields .",
    "for example , given the person class previously defined , an instance in rdf can be represented as    .... ( lanl:1234 , rdf : type , lanl : person ) ( lanl:1234 , lanl : age , \" 29\"^^xsd : int ) ( lanl:1234 , lanl : friend , lanl:2345 ) ( lanl:1234 , lanl : friend , lanl:3456 ) ( lanl:1234 , lanl : friend , lanl:4567 ) , ....    where lanl:1234 represents the person object and the lanl : friend properties points to three different person instances .",
    "this simple mapping can be useful for many types of applications .",
    "however , it is important to note that there exists a mismatch between the semantics of rdf , rdfs , and owl and typical object - oriented languages . in order to align both languages it is possible either to 1 . )",
    "ignore rdf / rdfs / owl semantics and interpret rdf as simply a data model for representing an object or 2 . ) make use of complicated mechanisms to ensure that the external object - oriented environment is faithful to such semantics @xcite .",
    "various rdf - to - object mappers exists .",
    "examples include schemagen , elmo , and activerdf @xcite .",
    "rdf - to - object mappers usually provide support to 1 . )",
    "automatically generate class definitions in the non - rdf language , 2 . )",
    "automatically populate these objects using rdf data , and 3 . ) automatically write these objects to the web of process . with rdf - to - object mapping ,",
    "what is preserved in the web of process is the description of the data contained in an object ( i.e.  its fields ) , not an explicit representation of the object s process information ( i.e.  its methods ) .",
    "however , there exists rdf object - oriented programming languages that represent methods and their underlying instructions in rdf .",
    "the following object - oriented languages compile human readable / writeable source code into rdf : adenine @xcite , adenosine , fabl @xcite , and neno @xcite .",
    "the compilation process creates a full rdf representation of the classes defined .",
    "the instantiated objects of these classes are also represented in rdf .",
    "thus , the object fields and their methods are stored in the web of process .",
    "each aforementioned rdf programming language has an accompanying virtual machine .",
    "it is the role of the respective virtual machine to query the web of process for objects , execute their methods , and store any changes to the objects back into the web of process .    given that these languages are designed specifically for an rdf environment and in many cases , make use of the semantics defined for rdfs and owl , the object - oriented nature of these languages tend to be different than typical languages such as c++ and java .",
    "multiple inheritance , properties as classes , methods as classes , unique sparql - based language constructs , etc . can be found in these languages . to demonstrate methods as classes and unique sparql - based language constructs ,",
    "two examples are provided from adenosine and neno , respectively .",
    "in adenosine , methods are declared irrespective of a class and can be assigned to classes as needed .    ....",
    "( lanl : makefriend , rdf : type , std : method ) ( lanl : makefriend , std : onclass , lanl : person ) ( lanl : makefriend , std : onclass , lanl : dog ) . ....",
    "next , in neno , it is possible to make use of the inverse query capabilities of sparql .",
    "the neno statement    .... rpi : josh.lanl : friend.lanl : age ; ....    is typical in many object - oriented languages : the age of the friends of josh .",
    "however , the statement    .... rpi : josh .. lanl : friend.lanl : age ; ....    is not .",
    "this statement makes use of `` dot dot '' notation and is called inverse field referencing .",
    "this particular example returns the age of all the people that are friends with josh .",
    "that is , it determines all the lanl : person objects that are a lanl : friend of lanl : josh and then returns the xsd : int of their lanl : age .",
    "this expression resolves to the sparql query    .... select ?",
    "y where {    ?",
    "x < lanl : friend > < rpi : josh > .    ?",
    "x < lanl : age > ? y } . ....    in rdf programming languages , there does not exist the impedance mismatch that occurs when integrating typical object - oriented languages with the web of process .",
    "moreover , such languages can leverage many of the standards and technologies associated with the web of data in general . in typical object - oriented languages ,",
    "the local memory serves as the object storage environment .",
    "in rdf object - oriented languages , the web of process serves this purpose .",
    "an interesting consequence of this model is that because compiled classes and instantiated objects are stored in the web of process , rdf software can easily reference other rdf software in the web of process . instead of pointers being @xmath202- or @xmath203-bit addresses in local memory , pointers are uris .",
    "in this medium , the web of process is a shared memory structure by which all the world s software and data can be represented , interlinked , and executed`` the formalization of computation within rdf allows active content to be integrated seamlessly into rdf repositories , and provides a programming environment which simplifies the manipulation of rdf when compared to use of a conventional language via an api . ''",
    "@xcitea collection of the previously mentioned benefits of rdf programming are itemized below .    * the language and rdf are strongly aligned : there is a more direct mapping of the language constructs and the underlying rdf representation . *",
    "compile time type checking : rdf apis will not guarantee the validity of an rdf object at compile time . * unique language constructs : web of data technology and standards are more easily adopted into rdf programming languages . *",
    "reflection : language reflection is made easier because everything is represented in rdf .",
    "* reuse : software can reference other software by means of uris .",
    "there are many issues with this model that are not discussed here .",
    "for example , issues surrounding security , data integrity , and computational resource consumption make themselves immediately apparent .",
    "many of these issues are discussed , to varying degrees of detail , in the publications describing these languages .      in the virtual machine repository model , the web of process is made to behave like a general - purpose computer . in this model , software ,",
    "data , and virtual machines are all encoded in the web of process .",
    "the fhat rdf virtual machine ( rvm ) is a virtual machine that is represented in rdf @xcite .",
    "the fhat rvm has an architecture that is similar to other high - level virtual machines such as the java virtual machine ( jvm ) .",
    "for example , it maintains a program counter ( e.g.  a pointer to the current instruction being executed ) , various stacks ( e.g.  operand stack , return stack , etc . ) , variable frames ( e.g.  memory for declared variables ) , etc .",
    "however , while the fhat rvm is represented in the web of process , it does not have the ability to alter its state without the support of some external process .",
    "an external process that has a reference to a fhat rvm can alter it by moving its program location through a collection of instructions , by updating its stacks , by altering the objects in its heap , etc .",
    "again , the web of process ( and more generally , the web of data ) is simply a data structure . while it can represent process information , it is up to machines external to the web of process to manipulate it and thus , alter its state .    in this computing model ,",
    "a full computational stack is represented in the web of process .",
    "computing , at this level , is agnostic to the physical machines that support its representation .",
    "the lowest - levels of access are uris and their rdf relations .",
    "there is no pointer to physical memory , disks , network cards , video cards , etc .",
    "such rdf software and rvms exist completely in an abstract uri and rdf address space  in the web of process . in this way , if an external process that is executing an rvm stops , the rvm simply `` freezes '' at its current instruction location .",
    "the state of the rvm halts .",
    "any other process with a reference to that rvm can continue to execute it .",
    "similarly , an rvm represented on one physical machine can compute an object represented on another physical machine .",
    "however , for the sake of efficiency , given that rdf subgraphs can be easily downloaded by a physical machine , the rvms can be migrated between data stores ",
    "the process is moved to the data , not the data to the process .",
    "many issues surrounding security , data integrity , and computational resource consumption are discussed in @xcite .",
    "currently there exists the concept , the consequences , and a prototype of an rvm .",
    "future work in this area will hope to transform the web of process ( and more generally , the web of data ) into massive - scale , distributed , general - purpose computer .",
    "a uri can denote anything .",
    "it can denote a term , a vertex , an instruction .",
    "however , by itself , a single uri is not descriptive .",
    "when a uri is interpreted within the context of other uris and literals , it takes on a richer meaning and is more generally useful .",
    "rdf is the means of creating this context .",
    "both the uri and rdf form the foundational standards of the web of data . from the perspective of the domain of knowledge representation and reasoning ,",
    "the web of data is a distributed knowledge base  a semantic web . in this interpretation , according to which ever logic is used , existing knowledge can be used to infer new knowledge .",
    "from the perspective of the domain of network analysis , the web of data is a distributed multi - relational network  a giant global graph . in this interpretation ,",
    "network algorithms provide structural statistics and can support network - based information retrieval systems . from the perspective of the domain of object - oriented programming ,",
    "the web of data is a distribute object repository  a web of process . in this interpretation",
    ", a complete computing environment exists that yields a general - purpose , web - based , distributed computer . for",
    "other domains , other interpretations of the web of data can exist .",
    "ultimately , the web of data can serve as a general - purpose medium for storing and relating all the world s data .",
    "as such , machines can usher in a new era of global - scale data management and processing .",
    "joshua shinavier of the rensselaer polytechnic institute and joe geldart of the university of durham both contributed through thoughtful discussions and review of the article .",
    "christian bizer , tom heath , kingsley idehen , and tim berners - lee .",
    "linked data on the web . in _ proceedings of the international world",
    "wide web conference _ , linked data workshop , beijing , china , april 2008 .",
    "johan bollen , herbert van de sompel , and marko  a. rodriguez . towards usage - based impact metrics : first results from the mesur project . in _ proceedings of the joint conference on digital libraries _ , pages 231240 , new york , ny , 2008 .",
    "ieee / acm .",
    "jeen broekstra , arjohn kampman , and frank van harmelen .",
    "sesame : a generic architecture for storing and querying rdf . in _ proceedings of the international semantic web conference _ , sardinia , italy , june 2002 .",
    "dieter fensel , frank van harmelen , bo  andersson , paul brennan , hamish cunningham , emanuele  della valle , florian fischer , zhisheng huang , atanas kiryakov , tony  kyung il  lee , lael school , volker tresp , stefan wesner , michael witbrock , and ning zhong . towards larkc : a platform for web - scale reasoning . in _ proceedings of the ieee international conference on semantic computing _ ,",
    "los alamitos , ca , 2008 .",
    "ieee .",
    "ian horrocks , peter  f. patel - schneider , harold boley , said tabet , benjamin grosof , and mike dean . : a semantic web rule language combining owl and ruleml .",
    "technical report , world wide web consortium , may 2004 .",
    "atanas kiryakov , damyan ognyanov , and dimitar manov .",
    " a pragmatic semantic repository for owl . in _ international workshop on scalable semantic web knowledge base systems _ , volume lncs 3807 , pages 182192 , new york , ny , november 2005 .",
    "spring - verlag .",
    "dirk koschtzki , katharina  anna lehmann , dagmar tenfelde - podehl , and oliver zlotowski . ,",
    "volume 3418 of _ lecture notes in computer science _ , chapter advanced centrality concepts , pages 83111 .",
    "spring - verlag , 2004 .",
    "bijan parsia and evren sirin .",
    "ellet : an owl dl reasoner . in _ proceedings of the international semantic web conference _ ,",
    "volume 3298 of _ lecture notes in computer science _ , hiroshima , japan ,",
    "november 2004 .",
    "springer - verlag .",
    "hai  h. wang , natasha noy , alan rector , mark musen , timothy redmond , daniel rubin , samson tu , tania tudorache , nick drummond , matthew horridge , and julian sedenberg .",
    "frames and owl side by side . in _ 10th international protg conference _ , budapest ,",
    "hungary , july 2007 .",
    "scott white and padhraic smyth .",
    "algorithms for estimating relative importance in networks . in _ proceedings of the international conference on knowledge discovery and data mining _ , pages 266275 , new york , ny , 2003 .",
    "acm press ."
  ],
  "abstract_text": [
    "<S> the emerging web of data utilizes the web infrastructure to represent and interrelate data </S>",
    "<S> . the foundational standards of the web of data include the uniform resource identifier ( uri ) and the resource description framework ( rdf ) . </S>",
    "<S> uris are used to identify resources and rdf is used to relate resources . while rdf has been posited as a logic language designed specifically for knowledge representation and reasoning , it is more generally useful if it can conveniently support other models of computing . in order to realize the web of data as a general - purpose medium for storing and processing the world s data , it is necessary to separate rdf from its logic language legacy and frame it simply as a data model . </S>",
    "<S> moreover , there is significant advantage in seeing the semantic web as a particular interpretation of the web of data that is focused specifically on knowledge representation and reasoning . by doing so </S>",
    "<S> , other interpretations of the web of data are exposed that realize rdf in different capacities and in support of different computing models .    </S>",
    "<S> = 1 </S>"
  ]
}
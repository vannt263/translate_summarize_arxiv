{
  "article_text": [
    "it is increasingly clear that traditional connection - based networking architectures are ill suited for the prevailing user demands for network content  @xcite .",
    "emerging information - centric networking ( icn ) architectures aim to remedy this fundamental mismatch so as to dramatically improve the efficiency of content dissemination over the internet .",
    "in particular , named data networking ( ndn )  @xcite , or content - centric networking ( ccn)@xcite , is a proposed network architecture for the internet that replaces the traditional client - server communication model with one based on the identity of data or content .    content delivery in ndn is accomplished using _ interest packets _ and _ data packets _ , along with specific data structures in nodes such as the _ forwarding information base ( fib ) _ , the _ pending interest table ( pit ) _ , and the _ content store _ ( cache ) .",
    "communication is initiated by a data consumer or requester sending a request for the data using an _ interest packet_. interest packets are forwarded along routes determined by the fib at each node .",
    "repeated requests for the same object can be suppressed at each node according to its pit .",
    "the _ data packet _ is subsequently transmitted back along the path taken by the corresponding interest packet , as recorded by the pit at each node .",
    "a node may optionally cache the data objects contained in the received data packets in its local _",
    "content store_. consequently , a request for a data object can be fulfilled not only by the content source but also by any node with a copy of that object in its cache .",
    "please see  @xcite for details .",
    "ndn seeks to optimally utilize both bandwidth and storage for efficient content distribution , which highlights the need for joint design of traffic engineering and caching strategies , in order to optimize network performance . to address this fundamental problem , in our previous work @xcite",
    ", we propose the _ vip framework _ for the design of high performing ndn networks . within this vip framework",
    ", we develop joint dynamic forwarding , caching and congestion control algorithms operating on virtual interest packets ( vips ) to maximize network utility subject to network stability in the virtual plane , using lyapunov drift techniques@xcite .",
    "then , using the resulting flow rates and queue lengths of the vips in the virtual plane , we develop the corresponding joint dynamic algorithms in the actual plane , which have been shown to achieve superior performance in terms of network throughput , user utility , user delay , and cache hit rates , relative to several baseline policies .    while the vip algorithms in @xcite exhibit excellent performance",
    ", they are primarily focused on maximizing network throughput and do not explicitly consider user delay . in this paper",
    ", we aim to further improve the delay performance of the existing vip algorithms in @xcite by leveraging vip information beyond one hop .",
    "there are several potential challenges in pursuing this .",
    "first , it is not clear how one should improve the delay performance of the existing vip algorithms by jointly modifying forwarding , caching and congestion control in a tractable manner .",
    "second , it is not clear how to maintain the desired throughput optimality and utility - delay tradeoff of the existing vip algorithms when the lyapunov - drift - based control structure is modified for improving the delay performance .    in the following , we shall address the above questions and challenges .",
    "we first develop a new class of enhanced distributed forwarding and caching algorithms operating on vips to stabilize network in the virtual plane .",
    "we then extend the algorithm to include congestion control , thus achieving a favorable utility - delay tradeoff .",
    "these enhanced vip algorithms reduce the delay of the existing vip algorithms by 1 ) exploiting the margin between the vip arrival rate vector and the boundary of the vip network stability region , and 2 ) making use of vip information beyond one hop in a simple and flexible manner . generalizing lyapunov drift techniques",
    ", we demonstrate the throughput optimality and characterize the utility - delay tradeoff of the enhanced vip algorithms .",
    "these enhanced vip algorithms generalize the vip algorithms in @xcite in the sense that they maintain network stability and maximize network utility while improving delay performance .",
    "in addition , these enhanced vip algorithms ( designed for ndn networks ) extend the enhanced dynamic backpressure algorithms in @xcite ( designed for traditional source - destination networks ) in the sense that they incorporate caching into the joint design of dynamic forwarding ( routing ) and congestion control .",
    "numerical experiments demonstrate the superior performance of the resulting enhanced algorithms for handling interest packets and data packets within the actual plane , in terms of low network delay and high network utility .",
    "although there is now a rapidly growing literature in icn , the problem of optimal joint forwarding and caching for content - oriented networks remains challenging . in @xcite ,",
    "the authors demonstrate the gains of joint forwarding and caching in icns .",
    "in @xcite , a potential - based forwarding scheme with random caching is proposed for icns .",
    "the results in  @xcite are heuristic in the sense that it remains unknown how to choose proper potential values to ensure good performance . in @xcite ,",
    "the authors propose throughput - optimal one - hop routing and caching to support the maximum number of requests in a single - hop content distribution network ( cdn ) setting . in @xcite , assuming the path between any two nodes is predetermined , the authors consider single - path routing ( equivalently cache node selection ) and caching to minimize link utilization for a general multi - hop content - oriented network .",
    "the benefits of selective caching based on the concept of betweenness centrality , relative to ubiquitous caching , are shown in  @xcite . in  @xcite ,",
    "cooperative caching schemes have been heuristically designed without being jointly optimized with forwarding strategies . finally",
    ", adaptive multi - path forwarding in ndn has been examined in  @xcite , but has not been jointly optimized with caching strategies .",
    "we consider the same network model as in @xcite , which we describe for completeness .",
    "consider a connected multi - hop ( wireline ) network modeled by a directed graph @xmath0 , where @xmath1 and @xmath2 denote the sets of @xmath3 nodes and @xmath4 directed links , respectively .",
    "assume that @xmath5 whenever @xmath6 .",
    "let @xmath7 be the transmission capacity ( in bits / second ) of link @xmath6 .",
    "let @xmath8 be the cache size ( in bits ) at node @xmath9 .",
    "assume that content in the network are identified as _",
    "data objects _ , each consisting of multiple data chunks .",
    "content delivery in ndn operates at the level of data chunks .",
    "that is , each interest packet requests a particular data chunk , and a matching data packet consists of the requested data chunk , the data chunk name , and a signature .",
    "a request for a data object consists of a sequence of interest packets which request all the data chunks of the object .",
    "we consider a set @xmath10 of @xmath11 data objects , which may be determined by the amount of control state that the network is able to maintain , and may include only the most popular data objects in the network , typically responsible for most of the network congestion@xcite . for simplicity , we assume that all data objects have the same size @xmath12 ( in bits ) .",
    "the results in the paper can be extended to the more general case where object sizes differ .",
    "we consider the scenario where @xmath13 for all @xmath14 .",
    "thus , no node can cache all data objects . for each data object @xmath15 , assume that there is a unique node @xmath16 which serves as the content source for the object .",
    "interest packets for chunks of a given data object can enter the network at any node , and exit the network upon being satisfied by matching data packets at the content source for the object , or at the nodes which decide to cache the object .",
    "we adopt the vip framework proposed in @xcite . in the following ,",
    "we briefly introduce the vip framework to facilitate the discussion of the algorithms developed in later sections .",
    "please refer to @xcite for the details on the motivation and utility of this framework . as illustrated in fig .",
    "[ fig : planes ] , the vip framework relies on virtual interest packets ( vips ) , which capture the _ measured demand _ for the respective data objects in the network , and represent content popularity which is empirically measured , rather than being given a priori .",
    "the vip framework employs a _ virtual _ control plane operating on vips _ at the data object level _ , and an _ actual _ plane handling interest packets and data packets _ at the data chunk level_. the virtual plane facilitates the design of distributed control algorithms operating on vips , aimed at yielding desirable performance in terms of network metrics of concern , by taking advantage of local information on network demand ( as represented by the vip counts ) . the flow rates and queue lengths of the vips resulting from the control algorithm in the virtual plane",
    "are then used to specify the control algorithms in the actual plane @xcite .",
    "we now specify the dynamics of the vips within the virtual plane .",
    "consider time slots of length 1 ( without loss of generality ) indexed by @xmath17 .",
    "specifically , time slot @xmath18 refers to the time interval @xmath19 . within the virtual plane",
    ", each node @xmath20 maintains a separate vip queue for each data object @xmath15 .",
    "note that no data is contained in these vips .",
    "thus , the vip queue size for each node @xmath21 and data object @xmath22 at the beginning of slot @xmath18 is represented by a _ counter _",
    "@xmath23 . an exogenous request for data object @xmath22",
    "is considered to have arrived at node @xmath21 if the interest packet requesting the starting chunk of data object @xmath22 has arrived at node @xmath21 .",
    "let @xmath24 be the number of exogenous data object request arrivals at node @xmath21 for object @xmath22 during slot @xmath18 .",
    "for every arriving request for data object @xmath22 at node @xmath21 , a corresponding vip for object @xmath22 is generated at @xmath21 .",
    "the long - term exogenous vip arrival rate at node @xmath21 for object @xmath22 is @xmath25 let @xmath26 be the allocated transmission rate of vips for data object @xmath22 over link @xmath27 during time slot @xmath18 .",
    "note that a single message between node @xmath28 and node @xmath29 can summarize all the vip transmissions during each slot .",
    "data packets for the requested data object must travel on the reverse path taken by the interest packets .",
    "thus , in determining the transmission of the vips , we consider the link capacities on the reverse path as follows : @xmath30 where @xmath31 is the capacity of  reverse \" link @xmath32 and @xmath33 is the set of @xmath34 links which are allowed to transmit the vips of object @xmath22 .",
    "let @xmath35 .    in the virtual plane",
    ", we may assume that at each slot @xmath18 , each node @xmath9 can gain access to any data object @xmath15 for which there is interest at @xmath21 , and potentially cache the object locally .",
    "let @xmath36 represent the caching state for object @xmath22 at node @xmath21 during slot @xmath18 , where @xmath37 if object @xmath22 is cached at node @xmath21 during slot @xmath18 , and @xmath38 otherwise .",
    "note that even if @xmath37 , the content store at node @xmath21 can satisfy only a limited number of vips during one time slot .",
    "this is because there is a maximum rate @xmath39 ( in objects per slot ) at which node @xmath21 can produce copies of cached object @xmath22 @xcite .",
    "initially , all vip counters are set to 0 , i.e. , @xmath40 .",
    "the time evolution of the vip count at node @xmath21 for object @xmath22 is as follows :    @xmath41    where @xmath42 . furthermore , @xmath43 for all @xmath44 if @xmath45 . the detailed explanation of can be found in @xcite .",
    "physically , the vip count can be interpreted as a _",
    "potential_. for any data object , there is a downward  gradient \" from entry points of the data object requests to the content source and caching nodes .",
    "the _ vip network stability region _",
    "@xmath46 is the closure of the set of all vip arrival rates @xmath47 for which there exists some feasible ( i.e. , satisfying  - and the cache size limits @xmath48 ) joint forwarding and caching policy which can guarantee that all vip queues are stable @xcite . assume ( i ) the vip arrival processes @xmath49 are mutually independent with respect to @xmath21 and @xmath22 ; ( ii ) for all @xmath50 and @xmath51 , @xmath52 are i.i.d . with respect to @xmath18 ; and ( iii ) for all @xmath21 and @xmath22 , @xmath53 for all @xmath18 . under these assumptions ,",
    "theorem  1 in @xcite characterizes the vip stability region in the virtual plane ( or equivalently the interest packet stability region in the actual plane when there is no collapsing or suppression at the pits ) .",
    "note that the theoretical results in this paper also hold under these assumptions .    in the following , with the aim of improving the delay performance of the vip algorithms in @xcite , we focus on developing a new class of enhanced vip algorithms within the virtual plane of the vip framework , for the cases where @xmath54 and @xmath55 in sections  [ sec : forwarding - caching - vip ] and [ sec : congestion - vip ] , respectively .",
    "in this section , we consider the case where @xmath56 , and develop a new class of enhanced joint dynamic forwarding and caching algorithms , within the virtual plane of the vip framework .",
    "the vip algorithm , i.e. , algorithm  1 in @xcite , focuses primarily on maximizing network throughput , and uses one - hop vip count differences for forwarding and on per - node vip counts for caching .",
    "this leads to a simple distributed implementation . on the other hand , by incorporating vip count information beyond one hop in a tractable manner , one can potentially improve the delay performance of the vip algorithm while retaining the desirable throughput optimality and distributed implementation . toward this end",
    ", we consider a general nonnegative vip count - dependent bias function for each node @xmath57 and object @xmath58 @xcite : @xmath59 here , @xmath60 represents the vip counts at a particular time slot and @xmath61 $ ] is the weight associated with vip count @xmath62 at node @xmath21 for object @xmath22 , representing the relative importance of @xmath62 in the bias at node @xmath21 for object @xmath22 .",
    "the parameter @xmath63 is designed to guarantee network stability and will be discussed below in theorem  [ thm : thpt - opt ] and theorem  [ thm : flow - control ] .",
    "we can treat @xmath64 as a normalized version of @xmath62 . while the bias function in is generally written as a function of the global vip counts",
    ", one can choose the bias function to depend only on the local vip counts within one hop @xcite .",
    "for example , as in @xcite , we can choose the minimum next - hop vip count bias function , i.e. , @xmath65 where @xmath66 .",
    "each specific choice of a bias function @xmath67 corresponds to one enhanced vip algorithm , and the number of vip counts contributing to the bias function determines the implementation complexity of the corresponding enhanced vip algorithm .",
    "the form of the bias function is carefully chosen to stabilize the network or maximize the network utility , while at the same time offering a high degree of flexibility in choosing specific enhanced vip algorithms with manageable complexity , distributed implementation , and significantly better delay performance@xcite .",
    "we now present a new class of enhanced joint dynamic forwarding and caching algorithms for vips in the virtual plane by incorporating the general vip count - dependent bias function in into algorithm  1 in @xcite .    at the beginning of each slot @xmath18 , observe the vip counts @xmath68 and perform forwarding and caching in the virtual plane as follows .",
    "* forwarding * : for each data object @xmath15 and each link @xmath69 , choose @xmath70 where @xmath71 , @xmath72 , and @xmath73 .",
    "here , @xmath74 is the enhanced backpressure weight of object @xmath22 on link @xmath27 at slot @xmath18 , and @xmath75 is the data object which maximizes the enhanced backpressure weight on link @xmath27 at time @xmath18 .    *",
    "caching * : at each node @xmath76 , choose @xmath77 to @xmath78 here , @xmath79 represents the enhanced caching weight of object @xmath22 at node @xmath21 .",
    "based on the forwarding and caching in and , the vip count is updated according to . for simplicity",
    ", we use the same bias function for forwarding and caching . in general , the bias functions for forwarding and caching",
    "can be different .",
    "[ alg : vip ]    [ connection to the algorithms in @xcite and @xcite ] algorithm  [ alg : vip ] ( designed for ndn networks ) extends the enhanced dynamic backpressure algorithms in @xcite ( designed for traditional source - destination networks ) in the sense that it incorporates caching into the joint design of dynamic forwarding and congestion control .",
    "algorithm  [ alg : vip ] also generalizes algorithm  1 in @xcite in the sense that it maintains network stability while improving delay performance by incorporating vip information beyond one hop .    at each slot @xmath18 and for each link",
    "@xmath27 , the enhanced backpressure - based forwarding algorithm allocates the entire normalized  reverse \" link capacity @xmath80 to transmit the vips for the data object @xmath75 which maximizes the enhanced backpressure @xmath81 .",
    "the enhanced max - weight caching algorithm implements the optimal solution to the max - weight knapsack problem in , i.e. , allocate cache space at node @xmath21 to the @xmath82 objects with the largest enhanced caching weights @xmath79 .",
    "the enhanced forwarding and caching algorithm maximally balances out the vip counts by joint forwarding and caching , to prevent congestion building up in any part of the network , thereby reducing delay .",
    "it is important to note that with local vip count - bias functions , such as the minimum next - hop vip count bias function in , both the enhanced backpressure - based forwarding algorithm and the enhanced max - weight caching algorithm are _",
    "distributed_. following the complexity analysis in @xcite , we know that the enhanced vip algorithm in algorithm  [ alg : vip ] with the minimum next - hop vip bias function in has the same order of implementation complexity as algorithm  1 in @xcite ( without any bias functions ) . in general , for ease of implementation , one should intelligently choose the vip counts which contribute to the bias function , leading to enhanced vip algorithms with distributed implementation and good delay performance .",
    "we now show that algorithm  [ alg : vip ] adaptively stabilizes all vip queues for any @xmath83 , without knowing @xmath84 .",
    "[ generalized throughput optimality ] given @xmath85 such that @xmath86 , there exist @xmath87 such that @xmath88 , and @xmath89 such that @xmath90",
    ". then , the network of vip queues under algorithm [ alg : vip ] satisfies    @xmath91\\leq \\frac{n b}{\\beta_z}\\label{eqn : enhanced - dbp - vb}\\end{aligned}\\ ] ]    where @xmath92 , @xmath93 with @xmath94 , @xmath95 , @xmath96 , and @xmath97.[thm : thpt - opt ]    similar to theorem  1 in @xcite , theorem  [ thm : thpt - opt ] should be interpreted as follows . when it is given that @xmath98 is bounded away from the boundary of @xmath46 by at least @xmath99 , i.e. , @xmath100",
    ", one can choose a _ finite _ @xmath101 such that @xmath102 .",
    "in this case , algorithm  [ alg : vip ] can improve the delay performance of algorithm  1 in @xcite ( which will be demonstrated numerically in section  [ sec : simulations ] ) while maintaining a generalized notion of throughput optimality , by exploiting the margin @xmath99 to incorporate vip counts beyond one - hop @xcite .",
    "when it is only known that @xmath103 and no extra margin is given ( @xmath104 ) , then by theorem  [ thm : thpt - opt ] , @xmath105 must be chosen to be infinity for all @xmath57 and @xmath58 ( i.e. , @xmath106 ) . in this case , algorithm  [ alg : vip ] reduces to algorithm  1 in @xcite , and theorem  [ thm : thpt - opt ] reduces to theorem  2 in @xcite . theorem  [ thm : thpt - opt ]",
    "can be seen as the generalization of the throughput optimal results in theorem  1 of @xcite and theorem  2 of @xcite .",
    "the vip forwarding and caching algorithm first described in  @xcite were extended to incorporate congestion control in  @xcite . here , we develop a new class of enhanced algorithms which generalize the enhanced forwarding and caching algorithm ( algorithm 1 ) described above to incorporate congestion control .",
    "even with throughput optimal forwarding and caching , excessively large request rates ( @xmath107 ) can overwhelm a ndn network with limited resources .",
    "when @xmath107 , newly arriving interest packets ( equivalently vips ) first enter transport - layer storage reservoirs before being admitted to network - layer queues .",
    "let @xmath108 and @xmath109 denote the transport layer vip buffer size and vip count for object @xmath22 at node @xmath21 at the beginning of slot @xmath18 , respectively .",
    "let @xmath110 denote the amount of vips admitted to the network layer vip queue of object @xmath22 at node @xmath21 from the transport layer vip queue at slot @xmath18 .",
    "assume @xmath111 , where @xmath112 is a positive constant which limits the burstiness of the admitted vips to the network layer .",
    "we have the following time evolutions of the transport and network layer vip counts@xcite :    @xmath113      the goal of congestion control is to support a portion of the vips which maximize the sum utility when @xmath114 . let @xmath115 be the utility function associated with the vips admitted into the network layer for object @xmath22 at node @xmath21 .",
    "assume @xmath115 is non - decreasing , concave , continuously differentiable and non - negative .",
    "define a @xmath116-optimal admitted vip rate@xcite : @xmath117 where @xmath118 , @xmath119 and @xmath120 . due to the non - decreasing property of the utility functions , the maximum sum utility over all @xmath116",
    "is achieved at @xmath121 when @xmath122 .",
    "we now develop a new class of enhanced joint congestion control , forwarding and caching algorithms that yield a throughput vector which can be arbitrarily close to the optimal solution @xmath121 .",
    "we introduce auxiliary variables @xmath123 and the virtual vip count @xmath124 for all @xmath57 and @xmath58 .",
    "set @xmath125 for all @xmath126 and @xmath58 .    _",
    "( enhanced congestion control , forwarding and caching ) _ at the beginning of each slot @xmath18 , observe the vip counts @xmath127 and @xmath128 , and perform the following congestion control , forwarding and caching in the virtual plane as follows .",
    "is the same as that in @xcite and algorithm  3 in @xcite .",
    "the difference lies in the forwarding and caching part .",
    "we describe the congestion control part here for the purpose of completeness . ]    * congestion control * : for each node @xmath21 and object @xmath22 , choose the admitted vip count at slot @xmath18 , which also serves as the output rate of the corresponding virtual queue : @xmath129 then , choose the auxiliary variable , which serves as the input rate to the corresponding virtual queue : @xmath130 where @xmath131 is a control parameter which affects the utility - delay tradeoff of the algorithm .",
    "based on the chosen @xmath132 and @xmath133 , the transport layer vip count is updated according to and the virtual vip count is updated according to : @xmath134    * forwarding and caching * : same as algorithm [ alg : vip ] . the network layer vip count is updated according to .[alg : flow - dbp ]      we now show that by tuning control parameter @xmath131 , algorithm  [ alg : flow - dbp ] adaptively achieves a utility - delay tradeoff for vip queues , for any @xmath135 , without knowing @xmath84 .",
    "in addition , algorithm  [ alg : flow - dbp ] yields a throughput vector which can be arbitrarily close to @xmath121 by letting @xmath136 .    for an arbitrary vip arrival rate @xmath98 and for any control parameter @xmath131 , given @xmath137",
    ", there exist @xmath138 such that @xmath139 , and @xmath101 such that @xmath140",
    ". then , the network of vip queues under algorithm [ alg : flow - dbp ] satisfies    @xmath141\\leq \\frac{2n\\hat b+wg_{\\max}}{2\\hat \\beta_z } \\label{eqn : enhanced - flow - dbp - u}\\\\ & \\liminf_{t\\to\\infty}\\sum_{n\\in \\mathcal n , k\\in \\mathcal k } g^k_n\\left(\\overline \\alpha^k_n(t)\\right)\\geq \\sum_{n\\in \\mathcal n , k\\in \\mathcal k } g^{k}_n\\left ( \\overline \\alpha^{k*}_n\\left(\\boldsymbol \\epsilon_z\\right)\\right)-\\frac{2n\\hat b}{w } \\label{eqn : enhanced - flow - dbp - g}\\end{aligned}\\ ] ]    where @xmath142 and @xmath143 with @xmath144 , @xmath145 , @xmath146 $ ] .",
    "[ thm : flow - control ]    similar to theorem  2 in @xcite , theorem  [ thm : flow - control ] should be interpreted as follows .",
    "when @xmath147 , one can choose a _ finite _ @xmath148 such that @xmath149 .",
    "in this case , algorithm  [ alg : flow - dbp ] can improve the utility - delay tradeoff of algorithm  3 in @xcite ( which will be demonstrated numerically in section  [ sec : simulations ] ) , by exploiting the margin @xmath150 to incorporate vip counts beyond one - hop @xcite .",
    "when @xmath104 , i.e. , no margin is given , @xmath105 is chosen to be infinity for all @xmath57 and @xmath58 ( i.e. , @xmath106 ) . in this case , algorithm  [ alg : flow - dbp ] reduces to algorithm  3 in @xcite , and theorem  [ thm : flow - control ] reduces to theorem  3 in @xcite . theorem  [ thm : flow - control ] can be seen as the generalization of the utility - delay tradeoff results in theorem  2 of @xcite and theorem  3 of @xcite .",
    "based on the enhanced vip algorithms in algorithm  [ alg : vip ] and algorithm  [ alg : flow - dbp ] operating on vips in the virtual plane , we can develop the corresponding algorithms for handling interest packets and data packets in the actual plane using a mapping similar to that in @xcite .",
    "we omit the details due to the page limitation . in this section ,",
    "we first compare the delay performance of the enhanced vip algorithm for the actual plane resulting from algorithm  [ alg : vip ] ( using the minimum next - hop bias function in with @xmath151 ) , denoted by evip , with the vip algorithm for the actual plane resulting from algorithm  1 in @xcite , denoted by vip , as well as with six other baseline algorithms .",
    "in particular , these baseline algorithms use popular caching algorithms ( lfu , lce - unif , lce - lru , lcd - lru , and lce - bias ) in conjunction with shortest path forwarding and a potential - based forwarding algorithm . the detailed descriptions of these baseline algorithms can be found in @xcite .",
    "we then compare the utility - delay tradeoff of the enhanced vip algorithm for the actual plane resulting from algorithm  [ alg : flow - dbp ] ( using the minimum next - hop bias function in with @xmath151 ) , also denoted by evip , with the vip algorithm for the actual plane resulting from algorithm  3 in @xcite , also denoted by vip , with some abuse of notation . to our knowledge",
    ", there are no other congestion control algorithms for ndn networks which can easily control the tradeoff between utility and delay . in evaluating delay and utility - delay tradeoff , as in @xcite",
    ", we also consider the constant shortest path bias versions of evip and vip , with @xmath152 being the per - link cost .",
    "experimental scenarios are carried on two network topologies : the geant topology and the dtelekom topology , as shown in fig .",
    "[ fig : topo ] . in the two topologies ,",
    "object requests can be generated by any node , and the content source for each data object is independently and uniformly distributed among all nodes . at each node requesting data , object requests arrive according to a poisson process with an overall rate @xmath153 ( in requests / node / slot ) . each arriving request requests data object @xmath22 ( independently ) with probability @xmath154 , where @xmath155 follows a ( normalized ) zipf distribution with parameter 0.75 .",
    "we choose @xmath156 , @xmath157 mb / slot , @xmath158 gb , @xmath159 mb , the interest packet size is 125b , and the data packet size is 50 kb .",
    "each simulation generates requests for @xmath160 time slots .",
    "each curve is obtained by averaging over 10 simulation runs .",
    "the delay for an interest packet request is the difference ( in time slots ) between the fulfillment time ( i.e. , time of arrival of the requested data packet ) and the creation time of the interest packet request .",
    "we use the total delay for all the interest packets generated over @xmath160 time slots as the delay measure .",
    "we consider @xmath161-utility function with @xmath162 , i.e. , @xmath163 , and use the sum utility over all nodes and all objects as the utility measure .",
    "[ fig : delay ] illustrates the delay performance .",
    "we can observe that the vip algorithms in @xcite and the proposed enhanced vip algorithms achieve much better delay performance than the six baseline schemes , especially in dtelekom .",
    "in addition , the proposed enhanced vip algorithms significantly improve the delay performance of the vip algorithms ( e.g. , about @xmath164 at @xmath165 in geant and @xmath166 at @xmath167 in dtelekom ) .",
    "[ fig : tradeoff ] illiterates the utility - delay tradeoff .",
    "we can observe that the proposed enhanced vip algorithms achieve significantly better utility - delay tradeoff than the vip algorithms in @xcite . in summary ,",
    "the proposed enhanced vip algorithms improve the delay performance of the vip algorithms in @xcite by intelligently exploiting the vip counts beyond one hop for forwarding , caching and congestion control .",
    "in this paper , we develop a new class of enhanced distributed forwarding , caching and congestion control algorithms within the vip framework , which adaptively stabilize the network and maximize network utility , while improving delay performance .",
    "we prove the throughput optimality and characterize the utility - delay tradeoff of the enhanced vip algorithms in the virtual plane .",
    "numerical experiments demonstrate the superior performance of the resulting algorithms for handling interest packets and data packets in the actual plane , in terms of low network delay and high network utility , relative to a number of baseline alternatives .",
    "10 [ 1]#1 url@samestyle [ 2]#2 [ 2]l@#1=l@#1#2    l.  zhang , d.  estrin , j.  burke , v.  jacobson , j.  thornton , d.  k. smetters , b.  zhang , g.  tsudik , kc  claffy , d.  krioukov , d.  massey , c.  papadopoulos , t.  abdelzaher , l.  wang , p.  crowley , and e.  yeh , `` named data networking ( ndn ) project , '' oct .",
    "v.  jacobson , d.  k. smetters , j.  d. thornton , m.  f. plass , n.  h. briggs , and r.  l. braynard , `` networking named content , '' in _ proceedings of the 5th international conference on emerging networking experiments and technologies _ , ser .",
    "conext 09.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 2009 , pp .",
    "[ online ] .",
    "available : http://doi.acm.org/10.1145/1658939.1658941    e.  yeh , t.  ho , y.  cui , m.  burd , r.  liu , and d.  leong , `` vip : a framework for joint dynamic forwarding and caching in named data networks , '' in _ proceedings of the 1st international conference on information - centric networking _ , ser .",
    "icn 14.1em plus 0.5em minus 0.4emnew york , ny , usa : acm , 2014 , pp . 117126 .",
    "[ online ] .",
    "available : http://doi.acm.org/10.1145/2660129.2660151    e.  m. yeh , t.  ho , y.  cui , r.  liu , m.  burd , and d.  leong , `` forwarding , caching and congestion control in named data networks , '' _ corr _ , vol .",
    "abs/1310.5569 , 2013 .",
    "[ online ] .",
    "available : http://arxiv.org/abs/1310.5569    y.  cui , e.  m. yeh , and r.  liu , `` enhancing the delay performance of dynamic backpressure algorithms , '' _ ieee / acm transactions on networking _ , vol .",
    "pp , no .",
    "99 , pp . 114 , 2015 .",
    "g.  rossini and d.  rossi , `` coupling caching and forwarding : benefits , analysis , and implementation , '' in _ proceedings of the 1st international conference on information - centric networking _ , ser .",
    "icn 14 , 2014 , pp .",
    "127136 .",
    "s.  eum , k.  nakauchi , m.  murata , y.  shoji , and n.  nishinaga , `` catt : potential based routing with content caching for icn , '' in _ proceedings of sigcomm 2012 icn _ , helsinki , finland , aug .",
    "2012 , pp . 4954 .",
    "m.  m. amble , p.  parag , s.  shakkottai , and l.  ying , `` content - aware caching and traffic management in content distribution networks , '' in _ proceedings of ieee infocom 2011 _ , shanghai , china , apr .",
    "2011 , pp . 28582866 .",
    "h.  xie , g.  shi , and p.  wang , `` tecc : towards collaborative in - network caching guided by traffic engineering , '' in _ proceedings of ieee infocom 2012:mini - conference _ ,",
    "orlando , florida , usa , mar .",
    "2012 , pp . 25462550 .",
    "w.  chai , d.  he , l.  psaras , and g.  pavlou , `` cache `` less for more '' in information - centric networks , '' in _ proceedings of the 11th international ifip tc 6 conference on networking - volume part i _ , ser .",
    "ifip12.1em plus 0.5em minus 0.4emberlin , heidelberg : springer - verlag , 2012 , pp . 2740 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1007/978-3-642-30045-5_3    z.  ming , m.  xu , and d.  wang , `` age - based cooperative caching in information - centric networks , '' in _ computer communications workshops ( infocom wkshps ) , 2012 ieee conference on _ , march 2012 , pp .",
    "268273 .    c.  yi , a.  afanasyev , l.  wang , b.  zhang , and l.  zhang , `` adaptive forwarding in named data networking , '' _ sigcomm comput .",
    "_ , vol .",
    "42 , no .  3 , pp . 6267 , jun",
    "[ online ] .",
    "available : http://doi.acm.org/10.1145/2317307.2317319    l.  georgiadis , m.  j. neely , and l.  tassiulas , `` resource allocation and cross - layer control in wireless networks , '' _ foundations and trends in networking _",
    ", vol .  1 , no .  1 ,",
    "1144 , 2006 .",
    "define the quadratic lyapunov function @xmath168 . the lyapunov drift at slot @xmath18",
    "is given by @xmath169 $ ] .",
    "first , we calculate @xmath170 . taking square on both sides of",
    ", we have @xmath171 @xmath172 summing over all @xmath173 , we have @xmath174 where ( a ) is due to the following : @xmath175",
    "@xmath176 @xmath177 and ( b ) is due to the following : @xmath178 taking conditional expectations on both sides of , we have @xmath179\\nonumber\\\\ & -2\\mathbb e\\left[\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\big(v^k_n(t)+f_n^k(t)\\big)r_n s_n^k(t)|\\mathbf v(t)\\right]\\nonumber\\\\ & + 2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\frac{v_n^k(t)}{z_n^k}\\left(c_{\\max}l^k+nr_{\\max}\\right)\\nonumber\\\\ \\stackrel{(c)}{\\leq}&2n b+2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}v^k_n(t)\\lambda^k_n\\nonumber\\\\ & -2\\mathbb e\\bigg[\\sum_{(a , b)\\in \\mathcal l}\\sum_{k\\in \\mathcal k } \\tilde{\\mu}^k_{ab}(t)\\bigg((v^k_a(t)+f_a^k(t ) ) \\nonumber\\\\ & -(v^k_b(t)+f_b^k(t))\\bigg)|\\mathbf v(t)\\bigg]\\nonumber\\\\ & -2\\mathbb e\\left[\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\big(v^k_n(t)+f_n^k(t)\\big)r_n\\tilde{s}_n^k(t)|\\mathbf v(t)\\right]\\nonumber\\end{aligned}\\ ] ] @xmath180 \\nonumber \\\\ & + 2\\mathbb e\\bigg[\\sum_{(a , b)\\in \\mathcal l}\\sum_{k\\in \\mathcal k } \\tilde{\\mu}^k_{ab}(t)\\left(f_b^k(t)-f_a^k(t)\\right)|\\mathbf v(t)\\bigg]\\nonumber\\\\ & -2\\mathbb e\\left[\\sum_{n\\in \\mathcal n , k\\in \\mathcal k } f_n^k(t)r_n\\tilde{s}_n^k(t)|\\mathbf v(t)\\right]\\nonumber\\\\ & + 2\\sum_{n\\in \\mathcal   n , k \\in \\mathcal k}\\frac{v_n^k(t)}{z_n^k}\\big(c_{\\max}l^k+nr_{max}\\big)\\label{eqn : proof_ineq0}\\end{aligned}\\ ] ] where ( c ) is due to the fact that algorithm [ alg : vip ] minimizes the r.h.s . of ( c ) over all feasible @xmath181 and @xmath182 . and @xmath183 denote the actions of algorithm [ alg : vip ] . ] since @xmath184 , according to the proof of theorem  1 in @xcite , there exists a stationary randomized forwarding and caching policy that makes decisions independent of @xmath127 such that @xmath185\\nonumber\\\\ = & \\lambda^k_n+\\epsilon^k_n+\\delta_n^k\\label{eqn : proof_ineq1}\\end{aligned}\\ ] ] on the other hand , similar to , we can show @xmath186\\nonumber\\\\ \\leq&\\sum_{n\\in \\mathcal n ,",
    "k\\in \\mathcal k}v_n^k(t)\\frac{c_{\\max}l^k}{z_n^k}\\label{eqn : proof - fb - fa}\\end{aligned}\\ ] ] by , and @xmath187 for all @xmath21 and @xmath22 , we have @xmath188 . by lemma 4.1 of @xcite , we complete the proof .",
    "define the lyapunov function @xmath189 , where @xmath190 .",
    "the lyapunov drift at slot @xmath18 is @xmath191 $ ] .",
    "first , we calculate @xmath192 . similar to appendix a ,",
    "taking square on both sides of , we have @xmath193 in addition , taking square on both sides of , we have @xmath194 therefore , similarly , we have @xmath195 taking conditional expectations and subtracting @xmath196\\ ] ] from both sides of , we have @xmath197\\nonumber\\\\   \\stackrel{(a)}{\\leq } & 2n\\hat b-2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\left(y^k_n(t)-v^k_n(t)\\right)\\mathbb e\\left[\\tilde \\alpha^k_n(t)|\\boldsymbol \\theta(t)\\right]\\nonumber\\\\ & -\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\mathbb e\\left[wg^k_n\\left ( \\tilde \\gamma^k_n(t)\\right)-2y_n^k(t)\\tilde \\gamma^k_n(t)|\\boldsymbol \\theta(t)\\right]\\nonumber\\\\ &   - 2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}v^k_n(t)\\nonumber\\\\ & \\times\\mathbb e\\left[\\left(\\sum_{b\\in \\mathcal n}\\tilde{\\mu}^k_{nb}(t)-\\sum_{a\\in \\mathcal n}\\tilde{\\mu}^k_{an}(t)+r_n\\tilde{s}_n^k(t)\\right)|\\boldsymbol \\theta(t)\\right ] \\nonumber \\\\ & + 2\\sum_{(a , b)\\in \\mathcal l}\\sum_{k\\in \\mathcal k}\\mathbb e\\left[\\left(\\tilde{\\mu}_{ab}(t ) \\big(f_b^k(\\mathbf v(t))- f_a^k(\\mathbf v(t))\\big)|\\boldsymbol \\theta(t)\\right)\\right ] \\nonumber\\\\ & -2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\mathbb e\\left[f_n^k(\\mathbf v(t))r_n\\tilde{s_n}_n^k(t)|\\boldsymbol \\theta(t)\\right ] \\nonumber\\\\ \\leq & 2n\\hat b-2\\sum_{n\\in \\mathcal",
    "n , k\\in \\mathcal k}\\left(y^k_n(t)-v^k_n(t)\\right)\\mathbb e\\left[\\tilde \\alpha^k_n(t)|\\boldsymbol \\theta(t)\\right]\\nonumber\\\\ & -\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\mathbb e\\left[wg^k_n\\left ( \\tilde \\gamma^k_n(t)\\right)-2y_n^k(t)\\tilde \\gamma^k_n(t)|\\boldsymbol \\theta(t)\\right]\\nonumber\\\\ &   - 2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}v^k_n(t)\\nonumber\\\\ & \\times\\mathbb e\\left[\\left(\\sum_{b\\in \\mathcal n}\\tilde{\\mu}^k_{nb}(t)-\\sum_{a\\in \\mathcal n}\\tilde{\\mu}^k_{an}(t)+r_n\\tilde{s}_n^k(t)\\right)|\\boldsymbol \\theta(t)\\right ] \\nonumber \\\\ & + 2\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}\\frac{v_n^k(t)}{z_n^k}(2r_{max}l^k+nr_{max } ) \\label{eqn : proof_ineq0-flow}\\end{aligned}\\ ] ] where ( a ) is due to the fact that algorithm [ alg : flow - dbp ] minimizes the r.h.s . of ( b ) over all possible alternative @xmath198 , @xmath199 , @xmath200 , and @xmath201 .",
    ", @xmath133 , @xmath202 and @xmath203 denote the actions of algorithm [ alg : flow - dbp ] . ]",
    "it is not difficult to construct alternative random policies that choose @xmath198 , @xmath199 , @xmath200 and @xmath201 such that @xmath204=\\overline \\alpha^{k*}_n(\\boldsymbol \\epsilon+\\boldsymbol \\delta)\\label{eqn : rand - r}\\\\ & \\tilde \\gamma^k_n(t)=\\overline \\alpha^{k*}_n(\\boldsymbol \\epsilon+\\boldsymbol \\delta)\\label{eqn : rand - gamma}\\\\ & \\mathbb e\\left[\\left(\\sum_{b\\in \\mathcal n}\\tilde{\\mu}^k_{nb}(t)-\\sum_{a\\in \\mathcal n}\\tilde{\\mu}^k_{an}(t)+r_n\\tilde{s}_n^k(t)\\right)|\\boldsymbol \\theta(t)\\right]\\nonumber\\\\ = & \\overline \\alpha^{k*}_n(\\boldsymbol \\epsilon+\\boldsymbol \\delta)+\\epsilon^k_n + \\delta_n^k\\label{eqn : rand - mu}\\end{aligned}\\ ] ] where @xmath205 is the target @xmath206-optimal admitted rate given by . with probability @xmath207 and @xmath208 with probability @xmath209 . ]",
    "follows from the same arguments leading to  .",
    "thus , by , and , from , we obtain @xmath210\\nonumber\\\\   \\leq &   2n\\hat b-2\\min_{n\\in \\mathcal",
    "n , k\\in \\mathcal k}\\left\\{\\epsilon^k_n+\\delta_n^k -\\frac{2c_{\\max}l^k+nr_{\\max}}{z_n^k}\\right\\ } \\nonumber\\\\   & \\times\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}v_n^k(t)-w\\sum_{n\\in \\mathcal n , k\\in \\mathcal k}g^k_n\\left(\\overline \\alpha^{k*}_n(\\boldsymbol \\epsilon + \\boldsymbol \\delta)\\right)\\nonumber\\end{aligned}\\ ] ] applying theorem 5.4 of @xcite , we have @xmath211   \\nonumber\\\\ \\leq & \\frac{2n\\hat b+wg_{\\max } } { 2\\min_{n\\in",
    "\\mathcal n , k\\in \\mathcal k}\\left\\{\\epsilon^k_n+\\delta_n^k -\\frac{2c_{\\max}l^k+nr_{\\max}}{z_n^k}\\right\\}}\\label{eqn : proof - enhanced - flow - dbp - u}\\\\ & \\liminf_{t\\to\\infty}\\sum_{n\\in \\mathcal n , k\\in \\mathcal k } g^k_n\\left(\\overline \\gamma^k_n(t)\\right)\\nonumber\\\\    \\geq & \\sum_{n\\in \\mathcal n , k\\in \\mathcal k } g^k_n\\left ( \\overline \\alpha^{k*}_n\\left(\\boldsymbol \\epsilon+\\boldsymbol \\delta\\right)\\right)-\\frac{2n\\hat b}{w}\\label{eqn : proof - enhanced - flow - dbp - g}\\end{aligned}\\ ] ] as in @xcite , we optimize the r.h.s . of and over all possible @xmath212 .",
    "thus , we can show and @xmath213 where @xmath214 $ ] .",
    "it is easy to prove @xmath215 by showing the stability of the virtual queues .",
    "thus , we can show based on . we complete the proof ."
  ],
  "abstract_text": [
    "<S> emerging information - centric networking ( icn ) architectures seek to optimally utilize both bandwidth and storage for efficient content distribution over the network . </S>",
    "<S> the virtual interest packet ( vip ) framework has been proposed to enable joint design of forwarding , caching , and congestion control strategies within the named data networking ( ndn ) architecture . </S>",
    "<S> while the existing vip algorithms exhibit good performance , they are primarily focused on maximizing network throughput and utility , and do not explicitly consider user delay . in this paper , we develop a new class of enhanced algorithms for joint dynamic forwarding , caching and congestion control within the vip framework . </S>",
    "<S> these enhanced vip algorithms adaptively stabilize the network and maximize network utility , while improving the delay performance by intelligently making use of vip information beyond one hop . </S>",
    "<S> generalizing lyapunov drift techniques , we prove the throughput optimality and characterize the utility - delay tradeoff of the enhanced vip algorithms . </S>",
    "<S> numerical experiments demonstrate the superior performance of the resulting enhanced algorithms for handling interest packets and data packets within the actual plane , in terms of low network delay and high network utility . </S>"
  ]
}
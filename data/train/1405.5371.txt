{
  "article_text": [
    "scheduling under uncertainty is an important and extensively studied area of operations research and discrete optimization .",
    "the importance of this research direction results from the fact that in many real - world problems the precise values of parameters in scheduling models are not known in advance .",
    "thus , instead of possessing the exact values of the parameters , decision makers have rather a set of all their possible realizations , called a _",
    "scenario set_. in some cases an additional information with this scenario set is available .",
    "if a probability distribution in the scenario set is known , then _ stochastic approach _ can be used , which typically consists in minimizing the expected solution cost ( see , e.g.  @xcite ) .",
    "the unknown probability distribution can be upper bounded by a _ possibility distribution _ , which leads to _ possibilistic _ ( fuzzy ) scheduling problems ( see , e.g  @xcite ) . finally ,",
    "if no additional information with scenario set is provided , then _",
    "robust approach _ is usually used ( see , e.g.  @xcite ) . in the robust optimization , we seek a solution minimizing a cost in the worst case , which usually leads to applying the _ minmax _ or _",
    "minmax regret _",
    "criterion for choosing a solution .",
    "the robust approach to decision making is often regarded as too conservative or pessimistic .",
    "it follows from the fact , that the minmax criterion takes only the worst - case scenarios into account , ignoring the information connected with the remaining scenarios .",
    "this criterion also assumes that decision makers are very risk averse , which is not always true .",
    "these drawbacks of the minmax criterion are well known in decision theory , and a detailed discussion on this topic can be found , for example , in  @xcite . in this paper",
    "we will assume that a scenario set associated with scheduling problem is specified by enumerating all possible scenarios .",
    "such a representation of scenario sets is called a _ discrete uncertainty representation _ and has been described , for instance , in  @xcite .",
    "our goal is to generalize the minmax approach to scheduling problems under uncertainty by using the _ ordered weighted averaging _ aggregation operator ( owa for short ) introduced by yager in  @xcite . the owa operator is widely applied to aggregate criteria in multiobjective decision problems ( see , e.g. ,  @xcite ) but it can also be applied to choose a solution under the discrete uncertainty representation by identifying scenarios with objectives in a natural way .",
    "the owa operator generalizes the classical criteria used in decision making under uncertainty such as the maximum , minimum , average , median , or hurwicz criterion  @xcite .",
    "so , by using owa we can extend the minmax approach , typically used in the robust optimization .",
    "furthermore , the weights used in the owa operator allows us to model various attitudes of decision makers towards a risk .",
    "since we generalize the minmax approach to single machine scheduling problems under the discrete uncertainty representation , let us briefly recall the known results in this area ( see also  @xcite for a survey ) .",
    "the minmax version of the single machine scheduling problem with the total flow time criterion has been studied in  @xcite , where it has been shown that the problem is np - hard even for two processing time scenarios and strongly np - hard when the number of processing time scenarios is a part of the input ( the unbounded case ) .",
    "a generalization of this problem , with the weighted sum of completion times criterion , has been recently discussed in  @xcite where , in particular , several inapproximability results for that problem have been established .",
    "we will describe these results in more detail later in this paper . in  @xcite the minmax version of the single machine scheduling problem with the maximum weighted tardiness criterion",
    "has been discussed , where it has been shown that some special cases of the problem are polynomially solvable . in this paper , we generalize and extend the algorithms proposed in  @xcite . in  @xcite the minmax version of the single machine scheduling problem with the number of late jobs criterion has been investigated .",
    "it has been shown in  @xcite that the problem is np - hard for deterministic due dates and two processing time scenarios . on the other hand , it has been shown in  @xcite that the problem with unit processing times and the number of due date scenarios being a part of the input is strongly np - hard and hard to approximate within a factor less than  2 . in a more general version of this problem the weighted sum of late jobs is minimized .",
    "this problem is known to be np - hard for two weight scenarios  @xcite , strongly np - hard and hard to approximate within any constant factor if the number of weight scenarios is a part of the input  @xcite .",
    "this paper is organized as follows .",
    "section  [ sec1 ] presents a formulation of the general problem under consideration as well as some its special cases .",
    "the next two sections discuss two basic single machine scheduling problems .",
    "namely , section  [ sec2 ] explores the problem with the maximum weighted tardiness cost function and section  [ sec3 ] investigates the problem in which the cost function is the weighted sum of completion times .",
    "we show that both problems have various computational properties which depend on the weight distribution in the owa operator . for some weight distributions the problems are polynomially solvable , while for other ones they become strongly np - hard and are also hard to approximate .",
    "let @xmath0 be a set of jobs which must be processed on a single machine . for simplicity of notations",
    ", we will identify job @xmath1 with its index  @xmath2 .",
    "the set of jobs may be partially ordered by some precedence constraints .",
    "the notation @xmath3 means that processing of job @xmath2 can not start before processing of job @xmath4 is completed ( job @xmath2 is called a _",
    "successor _ of job @xmath4 ) . for each job",
    "@xmath2 the following parameters may be specified : a nonnegative _ processing time _",
    "@xmath5 , a nonnegative _ due date _ @xmath6 and a nonnegative _ weight _ @xmath7 .",
    "the due date @xmath6 expresses a desired completion time of @xmath2 and the weight @xmath7 expresses the importance of job  @xmath2 relative to the other jobs in the system . in all scheduling models discussed in this paper",
    "we assume that all the jobs are ready for processing at time  0 , in other words , each job has a release date equal to  0 .",
    "we also assume that each job must be processed without any interruptions , so we consider only nonpreemptive models . under these assumptions",
    "we can define a _ schedule _ @xmath8 as a feasible permutation of the jobs , in which the precedence constraints among the jobs are preserved .",
    "the set of all feasible schedules will be denoted by  @xmath9 .",
    "let us denote by @xmath10 the completion time of job @xmath2 in schedule @xmath8 .",
    "we will use @xmath11 to denote a cost of schedule @xmath8 .",
    "the value of @xmath11 depends on job completion times and may also depend on job due dates or weights . in this paper",
    "we will investigate two basic scheduling problems , in which the cost function is the maximum weighted tardiness , i.e. @xmath12^+$ ] ( we use the notation @xmath13^+=\\max\\{0,x\\}$ ] ) and the weighted sum of completion times , i.e. @xmath14 . in the deterministic case",
    ", we wish to find a feasible schedule which minimizes the cost @xmath11 , that is : @xmath15    we now study a situation in which some or all problem parameters are ill - known .",
    "let  @xmath16 be a vector of the problem parameters which may occur .",
    "the vector @xmath16 is called a _",
    "scenario_. we will use @xmath17 , @xmath18 and @xmath19 to denote the processing time , due date , and weight of job @xmath2 under scenario @xmath16 . a parameter is deterministic ( precisely known ) if its value is the same under each scenario .",
    "let a _ scenario set _",
    "@xmath20 contain all possible scenarios , where @xmath21 . in this paper",
    ", we distinguish the _ bounded case _ , where  @xmath22 is bounded by a constant and the _ unbounded case _ , where  @xmath22 is a part of the input .",
    "now , the completion time of job  @xmath2 in @xmath8 and the cost of  @xmath8 depend on scenario @xmath23 and will be denoted by  @xmath24 and @xmath25 , respectively .",
    "since scenario set @xmath26 contains more than one scenario , an additional criterion is required to choose a reasonable solution . in this paper",
    "we suggest to use the _ ordered weighted averaging _ aggregation operator ( owa for short ) proposed by yager in  @xcite .",
    "we now describe this criterion .",
    "let @xmath27 be a vector of real numbers .",
    "let us introduce a vector of weights @xmath28 such that @xmath29 $ ] for all @xmath30 $ ] ( @xmath31 $ ] stands for the set @xmath32 ) and @xmath33 .",
    "let @xmath34 be a permutation of @xmath31 $ ] such that @xmath35 .",
    "the owa operator is defined as follows : @xmath36 } v_i f_{\\sigma(i)}.\\ ] ] the owa operator has several natural properties which follow directly from its definition ( see , e.g.  @xcite ) . since it is a _",
    "convex combination _ of the cost functions , @xmath37 .",
    "it is also _ monotonic _ ,",
    "i.e. if @xmath38 for all @xmath30 $ ] , then @xmath39 , _ idempotent _ , i.e. if @xmath40 , then @xmath41 and _ symmetric _ , i.e. its value does not depend on the order of the values @xmath42 , @xmath30 $ ] .",
    "the owa operator generalizes some important criteria used in decision making under uncertainty . if @xmath43 and @xmath44 for @xmath45 , then owa becomes the maximum . if @xmath46 and @xmath44 for @xmath47 , then owa becomes the minimum . in general , if @xmath48 and @xmath44 for @xmath30\\setminus\\{k\\}$ ] , then owa is the @xmath49th largest element among @xmath50 .",
    "in particular , when @xmath51 , the @xmath49th element is the median . if @xmath52 for all @xmath30 $ ] , i.e. when the weights are _ uniform _ , then owa is the average ( or the laplace criterion ) . finally ,",
    "if @xmath53 and @xmath54 for some fixed @xmath55 $ ] and @xmath44 for the remaining weights , then we get the hurwicz pessimism - optimism criterion .",
    "we now use the owa operator to aggregate the costs of a given schedule @xmath8 under scenarios in  @xmath26 .",
    "let us define @xmath56 } v_i f(\\pi , s_{\\sigma(i)}),\\ ] ] where @xmath34 is a permutation of @xmath31 $ ] such that @xmath57 . in this paper",
    "we examine the following optimization problem : @xmath58 we will also investigate the special cases of the problem , which are listed in table  [ tabsc ] .",
    ".special cases of min - owa  @xmath59 .",
    "[ cols=\"<,<\",options=\"header \" , ]     we now show that there is an assignment to the variables which satisfies at most  @xmath60 clauses if and only if there is a schedule  @xmath8 such that @xmath61 .",
    "assume that there is an assignment @xmath62 , @xmath63 $ ] , that satisfies at most  @xmath60 clauses .",
    "according to this assignment we build a schedule  @xmath8 as follows .",
    "we first process @xmath64 jobs @xmath65 , @xmath66 , which correspond to false literals  @xmath67 , @xmath68 $ ] , in any order and then the rest @xmath64 jobs that correspond to true literals  @xmath67 , @xmath68 $ ] , in any order . choose a clause @xmath69 which is not satisfied .",
    "it is easy to check that the cost of the schedule  @xmath8 under scenario @xmath70 is  0 .",
    "consequently , there are at most  @xmath60 scenarios under which the cost of  @xmath8 is positive and , according to the definition of the weights in the owa operator , we get @xmath61 .",
    "suppose now that there is a schedule  @xmath8 such that @xmath61 .",
    "we construct an assignment to the variables by setting @xmath71 if @xmath72 appears before @xmath73 in @xmath8 and @xmath74 otherwise . since @xmath61 , the cost of  @xmath8 must be  0 under at least @xmath75 scenarios .",
    "if the cost of @xmath8 is  0 under scenario  @xmath70 corresponding to the clause @xmath76 , then the assignment does not satisfy @xmath76 .",
    "hence , there is at least @xmath75 clauses that are not satisfied and , consequently , at most @xmath60 satisfiable clauses .",
    "min - median  @xmath77 is strongly np - hard and not at all approximable unless p = np .",
    "the proof is similar to the proof of theorem  [ thm1 ] and consists in adding some additional scenarios to an instance of problem constructed in theorem  [ thmcc ] .      in this section",
    "we show several approximation algorithms for min - owa  @xmath78 .",
    "we will explore the case in which the weights in the owa criterion are nonincreasing , i.e. @xmath79 .",
    "we will then apply the obtained results to the hurwicz criterion .",
    "observe , that the case with nondecreasing weights , i.e. @xmath80 , is not at all approximable ( see the proof of theorem  [ thmcc ] ) .",
    "we first recall a well known property ( see , e.g.  @xcite ) which states that each problem with uncertain processing times and deterministic weights can be transformed into an equivalent problem with uncertain weights and deterministic processing times ( and vice versa ) .",
    "this transformation is cost preserving and works as follows . under each scenario",
    "@xmath81 , @xmath82 $ ] , we invert the role of processing times and weights obtaining scenario @xmath83 . the new scenario set @xmath84 contains scenario @xmath83 for each @xmath82 $ ] .",
    "we also invert the precedence constraints , i.e. if @xmath3 in the original problem , then @xmath85 in the new one .",
    "it can be easily shown that the cost of schedule @xmath8 under @xmath16 is equal to the cost of the inverted schedule @xmath86 under @xmath87 .",
    "consequently @xmath88 under @xmath26 equals @xmath89 under @xmath84 .",
    "notice that if the processing times are deterministic in the original problem , then the weights become deterministic in the new one ( and vice versa ) .",
    "let @xmath90 be the largest ( smallest ) weight ( processing time ) in the input instance .",
    "we first consider the case then both processing times an weights can be uncertain . we prove the following result :    if @xmath91 and the deterministic @xmath78 problem is polynomially solvable , then min - owa  @xmath78 is approximable within @xmath92 .",
    "let @xmath93 } p_j(s_i)$ ] , @xmath94 , @xmath95 } c_j(\\pi , s_i)$ ] , and @xmath96 .",
    "let @xmath97 minimize @xmath98 .",
    "of course , @xmath99 can be computed in polynomial time provided that the deterministic counterpart of the problem is polynomially solvable .",
    "let @xmath34 be a sequence of @xmath31 $ ] such that @xmath100 .",
    "it holds @xmath101 } v_i\\sum_{j\\in j } w_j(s_{\\sigma(i)})c_j(\\hat{\\pi},s_{\\sigma(i)})\\leq\\sum_{j\\in j } \\sum_{i\\in [ k ] } v_iw_j(s_{\\sigma(i)})\\hat{c}_j(\\hat{\\pi})= \\\\      & \\displaystyle=\\sum_{j\\in j}\\hat{c}_j(\\hat{\\pi } ) \\sum_{i\\in [ k ] } v_iw_j(s_{\\sigma(i)})\\leq \\sum_{j \\in j } \\hat{w}_j \\hat{c}_j(\\hat{\\pi})=\\hat{f}(\\hat{\\pi } ) ,      \\end{array}\\ ] ] where the inequality @xmath102 } v_i w_j(s_{\\sigma(i)})$ ] follows from the assumption that @xmath91 .",
    "we also get for any @xmath103 @xmath104 } c_j(\\pi , s_i)\\leq \\frac{w_{\\max}}{w_{\\min}}\\sum_{j\\in j}\\sum_{i\\in[k]}w_j(s_i)c_j(\\pi , s_i)= \\\\      & \\displaystyle=\\frac{w_{\\max}}{w_{\\min}}\\sum_{i\\in[k]}\\sum_{j\\in j}w_j(s_i)c_j(\\pi , s_i ) ,      \\end{array}\\ ] ] where the second inequality follows from the fact that @xmath105 for each @xmath106 , @xmath82 $ ] . again , from the assumption that @xmath91 we have @xmath107}\\sum_{j\\in j}w_j(s_i)c_j(\\pi , s_i)\\leq { \\rm owa}(\\pi).\\ ] ] from  ( [ cappr0 ] ) , ( [ cappr1 ] ) and ( [ cappr2 ] ) we get @xmath108 since the role of job processing times and weights can be inverted we also get @xmath109 and the theorem follows .    in  @xcite a 2-approximation algorithm for min - max  @xmath78 has been recently proposed , provided that either job processing times or job weights are deterministic ( they do not vary among scenarios ) . in this section",
    "we will show that this algorithm can be extended to min - owa  @xmath110 under the additional assumption that the weights in the owa operator are nonincreasing , i.e. @xmath91 . the idea of the approximation algorithm is to design a mixed integer programming formulation for the problem , solve its linear relaxation and construct an approximate schedule based on the optimal solution to this relaxation .",
    "assume now that job processing times are deterministic and equal to @xmath5 under each scenario @xmath81 , @xmath82 $ ] .",
    "let @xmath111 , @xmath112 $ ] , be binary variables such that @xmath113 if job @xmath4 is processed before job @xmath2 in a schedule constructed .",
    "the vectors of all feasible job completion times @xmath114 can be described by the following system of constraints  @xcite : @xmath115 let us denote by @xmath116 the relaxation of @xmath117 , in which the constraints @xmath111 are replaced with @xmath118 .",
    "it has been proved in  @xcite ( see also  @xcite ) that each vector @xmath114 that satisfies @xmath116 also satisfies the following inequalities : @xmath119    in order to build a mip formulation for the problem , we will use the idea of a deviation model introduced in  @xcite .",
    "let @xmath34 be a permutation of @xmath31 $ ] such that @xmath120 and let @xmath121 be the cumulative cost of schedule @xmath8 .",
    "define @xmath122 for @xmath123 and @xmath124 .",
    "an easy verification shows that @xmath125    given @xmath8 , the value of @xmath126 can be obtained by solving the following linear programming problem : @xmath127 \\\\                  & u_{i } \\geq f(\\pi , s_i ) & i\\in[k ] \\\\                  & u_i \\geq 0 & i\\in [ k]\\\\                  & r\\geq 0          \\end{array}\\ ] ]    consider the following linear programming problem : @xmath128 \\\\                  & \\sum_{i=1}^k \\alpha_i \\geq ( k - k)\\\\                  & \\alpha_i , \\beta_i \\geq 0 & i\\in [ k ]          \\end{array}\\ ] ] it is easy to see that an optimal solution to  ( [ mipc1 ] ) can be obtained by setting @xmath129 and @xmath130 for @xmath131 , @xmath132 and @xmath133 for @xmath134 , where @xmath34 is such that @xmath120 .",
    "this gives us the maximum objective function value equal to @xmath126 . to complete the proof it is enough to observe that  ( [ mipc0 ] ) is the dual linear program to  ( [ mipc1 ] ) .",
    "if @xmath135 , then @xmath136 and  ( [ ccc2 ] ) , ( [ mipc00 ] ) , ( [ mipc0 ] ) lead to the following mixed integer programming formulation for the problem : @xmath137 \\\\                  & u_{ik } \\geq \\sum_{j\\in j } c_j w_j(s_i ) & i , k\\in[k ] \\\\                  & u_{ik } \\geq 0 & i , k\\in[k]\\\\                  & r_k\\geq 0 & k\\in[k ] \\\\          \\end{array}\\ ] ]    in order to construct the approximation algorithm we will also need the following easy observation :    [ lemowa1 ] let @xmath138 and @xmath139 be two nonnegative real vectors such that @xmath140 for some constant @xmath141 .",
    "then , @xmath142 for each @xmath143 .    from the monotonicity of the owa operator and the assumption @xmath141",
    ", it follows that @xmath144 .",
    "the approximation algorithm works as follows .",
    "we first solve the linear relaxation of  ( [ mipc2 ] ) in which @xmath117 is replaced with @xmath116 .",
    "clearly , this relaxation can be solved in polynomial time .",
    "let @xmath145 be the relaxed optimal job completion times and @xmath146 be the optimal value of the relaxation .",
    "it holds @xmath147 .",
    "we now relabel the jobs so that @xmath148 and form schedule @xmath149 .",
    "since the vector @xmath150 satisfies @xmath116 it must also satisfy  ( [ schin ] ) . hence , by setting @xmath151 , we get @xmath152 since @xmath153 for each @xmath154 , we get @xmath155 and , finally @xmath156 for each @xmath106  this reasoning is the same as in  @xcite . for each scenario",
    "@xmath81 , @xmath82 $ ] , it holds @xmath157 , and observation  [ lemowa1 ] implies @xmath158 since @xmath146 is a lower bound on the value of an optimal solution , @xmath8 is a 2-approximate schedule .",
    "let us summarize the obtained result .",
    "[ thmcappr1 ] if @xmath159 , and job processing times ( or weights ) are deterministic , then min - owa  @xmath78 is approximable within  2 .",
    "we now use theorem  [ thmcappr1 ] to prove the following result :    min - hurwicz  @xmath78 is approximable within  2 , if job processing times ( or weights ) are deterministic .",
    "assume that job processing times are deterministic ( the reasoning for deterministic processing times is the same ) .",
    "the problem with the hurwicz criterion can be rewritten as follows : @xmath160 } h_k(\\pi),\\ ] ] where @xmath161 } \\sum_{j\\in j } w_j(s_i)c_j(\\pi ) + ( 1-\\alpha ) \\sum_{j\\in j } w_j(s_k)c_j(\\pi)=\\ ] ] @xmath162}(\\alpha \\sum_{j\\in j } w_j(s_i)c_j(\\pi ) + ( 1-\\alpha ) \\sum_{j\\in j } w_j(s_k)c_j(\\pi))=\\max_{i\\in [ k ] } \\sum_{j\\in j } \\hat{w}_j(s_i)c_j(\\pi),\\ ] ] where @xmath163 .",
    "hence the problem reduces to solving @xmath22 auxiliary min - max  @xmath78 problems .",
    "since min - max  @xmath78 is approximable within  2 ( see  @xcite , or theorem  [ thmcappr1 ] ) , the theorem follows .",
    "in this paper we have proposed a new approach to scheduling problems with uncertain parameters .",
    "the key idea is to use the owa operator to aggregate all possible values of the schedule cost .",
    "the weights in owa allows decision makers to take their attitude towards a risk into account . in consequence ,",
    "the main advantage of the proposed approach is to weaken the very conservative minmax criterion , traditionally used in robust optimization .",
    "apart from proposing a general framework , we have discussed the computational properties of two basic single machine scheduling problems .",
    "we have shown that they have various computational and approximation properties , which make their analysis very challenging .",
    "however , there is still a number of open problems regarding the considered cases . for the problem with the maximum weighted tardiness criterion",
    "we do not know if the problem is weakly np - hard when the number of scenarios is constant ( the bounded case )",
    ". it may be also the case that the pseudopolynomial algorithm designed for a fixed @xmath22 can be converted into a polynomial one by using a similar idea as for the hurwicz criterion .",
    "we also do not know if the problem with the average criterion admits an approximation algorithm with a constant worst - case ratio ( we only know that it is approximable within @xmath22 and not approximable within a ratio less than 7/6 ) .",
    "for the problem with the weighted sum of completion times criterion the complexity of @xmath164 with uncertain processing times and weights is open .",
    "the framework proposed in this paper can also be applied to other scheduling problems , for example to the single machine scheduling problem with the sum of late jobs criterion ( the minmax version of this problem was discussed in  @xcite ) ."
  ],
  "abstract_text": [
    "<S> in this paper a class of single machine scheduling problems is discussed . </S>",
    "<S> it is assumed that job parameters , such as processing times , due dates , or weights are uncertain and their values are specified in the form of a discrete scenario set . </S>",
    "<S> the ordered weighted averaging ( owa ) aggregation operator is used to choose an optimal schedule . </S>",
    "<S> the owa operator generalizes traditional criteria used in decision making under uncertainty , such as the maximum , average , median or hurwicz criterion . </S>",
    "<S> it also allows us to extend the robust approach to scheduling by taking into account various attitudes of decision makers towards a risk . in this paper a general framework for solving single machine scheduling problems with the owa criterion is proposed and some positive and negative computational results for two basic single machine scheduling problems are provided .    </S>",
    "<S> scheduling , single machine , robust optimization , owa criterion </S>"
  ]
}
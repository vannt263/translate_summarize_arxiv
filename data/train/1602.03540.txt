{
  "article_text": [
    "angluin _ et al . _",
    "@xcite proposed a distributed computation model called _",
    "population protocols_. it is a minimal model that aims at modeling large sensor networks with resource - limited anonymous mobile agents .",
    "the mobility of the agents is assumed to be unpredictable ( but has to respect some fair scheduler ) and pairs of agents can exchange state information when they are close together .",
    "the population protocol model is also considered as a computational model , in particular computing predicates : given some input configuration , the agents have to decide whether it satisfies the predicate .",
    "the population of agents has to eventually stabilize to a configuration in which every agent is in an accepting state or a rejecting one .",
    "this should not depend on the size of the population , i.e for any size of input configuration .    the seminal work of angluin _ et al .",
    "@xcite proved that predicates computed by population protocols are precisely first - order formula in presburger arithmetic ( equivalent to a semilinear set ) .",
    "subsets definable in this way are rather restricted , as multiplication for example is not expressible in presburger arithmetic .",
    "several variants of the original model have been studied in order to strengthen the population protocol model with additional realistic and implementable assumptions , in order to improve the computational power .",
    "this includes natural restrictions like modifying the assumptions between agent s interactions ( one - way communications @xcite , particular interaction graphs @xcite ) .",
    "this also includes the probabilistic population protocol model that makes a random scheduling assumption for interactions  @xcite .",
    "also fault tolerance have been taken account for population protocols @xcite , including the self - stabilizing solutions @xcite .",
    "we refer to @xcite for a survey .    among many variants of population protocols ,",
    "the _ passively mobile ( logarithmic space ) machine model _ introduced by chatzigiannakis _",
    "@xcite generalizes the population protocol model where finite state agents are replaced by agents that correspond to arbitrary turing machines with @xmath4 space per - agent , where @xmath5 is the number of agents",
    ". an exact characterization @xcite of computable predicates is given : this model can compute all symmetric predicates in @xmath6 as long as @xmath7 .",
    "_ establish that the model with a space in agent in @xmath8 is equivalent to population protocols , i.e. to the case @xmath9 . in parallel , _",
    "community protocols _ introduced by guerraoui and ruppert  @xcite are closer to the original population protocol model , assuming _ a priori _ agents with individual very restricted computational capabilities . in this model",
    ", each agent has a unique identifier and can only store @xmath10 other agent identifiers , and only identifiers from agents that it met .",
    "guerraoui and ruppert  @xcite using results about the so - called storage modification machines @xcite , proved that such protocols simulate turing machines : predicates computed by this model with @xmath5 agents are precisely the predicates in @xmath11 .",
    "this work aims at obtaining a whole landscape that covers and extends already known results about _ community protocol _ models and population protocols carrying turing machines on limited space .",
    "first , we drop the hypothesis of unique identifiers . that is to say",
    ", agents may have homonyms .",
    "we obtain a hierarchy that goes from the case of no identifier ( i.e. population protocol model ) to the case of unique identifiers ( i.e. community protocol model ) . in what follows",
    ", @xmath12 denotes the number of distinct available identifiers on a population with @xmath5 agents .",
    "notice that the idea of having less identifiers than agents , that is to say of having `` homonyms '' , has already been considered in other contexts or with not closely related problematics @xcite .",
    "second , our results also extend the _",
    "passively mobile machine model_. in particular , chatzigiannakis _ et al . _",
    "@xcite solved the cases @xmath8 ( equivalent to population protocols ) and @xmath13 ( equivalent to turing machines ) .",
    "we provide a characterization for the case @xmath14 : the model is equivalent to @xmath15 ( see table [ tab : chatzigiannakis ] ) .    to sum up , tables  [ tab : guerraoui ] and  [ tab : chatzigiannakis ] summarize our results .",
    "@xmath16 ( respectively : @xmath17 ) is the set of @xmath18-symmetric . ] ( resp .",
    "also stable under the permutation of the input multisets ) languages recognized by non deterministic turing machines on space @xmath19 .",
    ".homonym population protocols with @xmath5 agents and @xmath12 distinct identifiers . [ cols=\"^,^\",options=\"header \" , ]     as soon as an agent in input @xmath20 realizes its identifier is smaller or equal to its @xmath21 , it adds @xmath22 to its state if possible ( otherwise , it waits an occasion to add it to another agent ) .    by fairness , all agents will determine at some point if their identifier is greater or smaller to half the highest one , and then the leader will be able to compute the right output .",
    "we now show how previous constructions improve the results about the passively mobile protocol model @xcite .",
    "this section treats the case where @xmath23 in the passively mobile protocol model .",
    "table [ tab : chatzigiannakis ] gives a summary of this hierarchy .",
    "@xmath24 corresponds to the class of languages recognized by passively mobile agents using space @xmath25 .",
    "[ th : grec ] @xmath26 .",
    "@xmath27 .    the idea of this proof is quite simple : let @xmath28 . we can notice that @xmath29 ( as the space of computation is the same and symmetric is equivalent to be a single multiset ) . from theorem [ th : main ]",
    ", there is a population protocol computing m. we will simulate it . with space @xmath30 , we can simulate a population protocol with @xmath31 identifiers .",
    "indeed , we adapt a bit the counting protocol . at the beginning , each agent has identifier @xmath32 in order to create @xmath33 identifiers .",
    "when two agents with the same identifier  meet , if each one contains the integer @xmath34 , then the first switch its integer to @xmath32 and , the other increases its own identifier .    we then just need to simulate the behavior of each agent as if they have started with their created identifier .",
    "it requires a space of size @xmath35 plus some constant , which is enough .",
    "@xmath36 : the proof is similar to the one of theorem [ th : olivier ] : it is a question of accessibility in the graph of the configurations .",
    "we need to compute the number of possible configurations denoted by @xmath37 .",
    "for each agent , there are @xmath38 possible states and 4 tapes of length @xmath39 for some @xmath40 .",
    "hence , there are @xmath41 possible states for each agent .",
    "now @xmath42    for each possible state , there are at most @xmath5 agents sharing it .",
    "hence , @xmath43 .",
    "the accessibility can be computed by a machine in space complexity @xmath44 , which means a space @xmath45 for some @xmath46 .    with a similar proof",
    ", we can get the following result that gives a good clue for the gap between @xmath47 and @xmath33 :    let @xmath18 such that @xmath48 and @xmath49 . @xmath50",
    "from the model given by guerraoui and ruppert @xcite , we introduced a hierarchy according to the number of distinct identifiers in the population :    * the existence of identifiers is useless with a constant number of the identifiers . * homonym population protocols with @xmath51 identifiers",
    "can exactly recognize any language in @xmath52 . *",
    "homonym population protocols with @xmath53 identifiers have same power that homonym population protocols with @xmath5 identifiers .",
    "it remains an open and natural question : is the knowledge of consecutive values of two identifiers crucial or not ?",
    "our guess is that this knowledge is essential to compute the size of the population .",
    "protocols without this assumption have not been found yet .",
    "chatzigiannakis _ et al . _",
    "@xcite started a hierarchy over protocols depending on how much space of computation each agent has .",
    "the paper left an open question on the gap between @xmath54 and @xmath3 .",
    "we provided an answer , by proving that with @xmath55 space , exactly @xmath56 is computed .",
    "however , it remains the gap between @xmath30 and @xmath3 , where we currently just have the following bounds :"
  ],
  "abstract_text": [
    "<S> the population protocol model was introduced by angluin _ et al . _ as a model of passively mobile anonymous finite - state agents . </S>",
    "<S> this model computes a predicate on the multiset of their inputs via interactions by pairs . </S>",
    "<S> the original population protocol model has been proved to compute only semi - linear predicates and has been recently extended in various ways .    in the community protocol model by guerraoui and ruppert , agents have unique identifiers but may only store a finite number of the identifiers they already heard about . </S>",
    "<S> the community protocol model provides the power of a turing machine with a @xmath0 space . </S>",
    "<S> we consider variations on the two above models and we obtain a whole landscape that covers and extends already known results .    </S>",
    "<S> namely , by considering the case of homonyms , that is to say the case when several agents may share the same identifier , we provide a hierarchy that goes from the case of no identifier ( population protocol model ) to the case of unique identifiers ( community protocol model ) . </S>",
    "<S> we obtain in particular that any turing machine on space @xmath1 can be simulated with at least @xmath1 identifiers , a result filling a gap left open in all previous studies .    </S>",
    "<S> our results also extend and revisit in particular the hierarchy provided by chatzigiannakis _ </S>",
    "<S> et al . _ on population protocols carrying turing machines on limited space , solving the problem of the gap left by this work between per - agent space @xmath2 ( proved to be equivalent to population protocols ) and @xmath3 ( proved to be equivalent to turing machines ) . </S>"
  ]
}
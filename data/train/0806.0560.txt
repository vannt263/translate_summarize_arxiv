{
  "article_text": [
    "the pursuit of science pushes not only the boundaries of knowledge , but also the limits of technology used to acquire and analyze data from which new knowledge can be distilled . in this sense software systems for scientific analysis are never truly complete ,",
    "so it is crucial that they be extensible .",
    "this enables scientists to incorporate custom , experimental codes into the system and drive it in directions not yet supported , or perhaps even envisioned , by its creators .",
    "a corollary is that the mechanisms for and results of the customization should be made as simple , powerful , and general as possible , freeing the practitioner to concentrate more on algorithmic or scientific concerns and less on the plumbing details of a given computational platform .",
    "this paper compares the extent to which two open - source spectral analysis applications actively used in astronomy , xspec  @xcite and isis  @xcite , meet these general criteria .",
    "the features of both systems are broadly surveyed , with contrasts drawn from a series of examples representative of astronomy in practice .",
    "a heavy emphasis is placed upon the roles of interpreted arrays , and the capability to quickly generate and numerically manipulate them as powerful enablers of analysis .",
    "the emergent theme is that numerical and architectural discontinuities between the internals of xspec  and its controlling tcl  interpreter , referred to in the large as the black box problem , limit its full exploitation for scientific tasks that are within the reach of more configurable interactive analysis systems .",
    "we demonstrate the strong modularity and extensible scriptability of isis and suggest that such open and highly configurable systems offer deeper and wider promise for meeting the needs of exploratory scientific analysis .",
    "the latest major versions of isis  and xspec , 1.4.x and 12.x respectively , were used in our study .",
    "while xspec  11 remains in wide use ( the first public , non - beta release of xspec  12 was circa 2005 ) , it is more difficult to extend with a variety of custom models and so in terms of extensibility would compare less favorably than does xspec  12 .",
    "guiding our endeavor will be the sense of what a typically motivated scientist can achieve in each system with reasonable effort .",
    "on the premise that a strong programmer can eventually replicate virtually any result using nearly any combination of languages or tools , we are not concerned with what might in principle be achieved _ from _ either xspec  or isis but rather what can be demonstrated _ within _ each . by avoiding hypotheticals we aim to transform a potentially open - ended debate into a tractable , concrete discussion . towards this end",
    "we define _ working within an application _ to mean the execution of commands , or portions thereof , which only access or modify the code or data within the applications addressable memory . in this scheme , for example , issuing an operating system call from isis  to spawn an external visualization tool would not be  working in isis , \" however enlarging its address space by importing a shared object module , say to smooth an image in memory , would be .",
    "we recognize the utility of integrating complementary but distinct programs into a single logical entity .",
    "building on trust in known tools , it is a sensible scheme for managing complexity , fostering reuse , and balancing deadlines with goals .",
    "cooperating applications can , with sufficient effort , be made to appear as seamless as a single program .",
    "one should not , however , equate the act of    * dumping internal state to disk files , spawning a series of tools to read this state and create temporary data products along the way , then loading these new data back into the parent application    with the ability to    * invoke a function to operate upon a data structure , with both resident in memory .",
    "in this paper we will argue that the latter offers greater immediacy of use , as well as significantly more algorithmic , data , and visualization flexibility .",
    "it also addresses real scalability concerns [ scalability ] as datasets increase in size or tasks increase in time complexity .",
    "a stark example of this is given in @xcite , which discusses the methods employed to analyze the megasecond observation of cassiopeia a @xcite by the chandra x - ray observatory in 2004 , which yielded the first ever map of electron acceleration in a supernova remnant @xcite .",
    "over 9 million pha spectra were extracted from over 300 million events , with hundreds of thousands of spectral fits performed in isis to yield arc - second resolution spatial maps of plasma temperatures , line emission , and doppler velocities .",
    "custom modules were developed to manage the multi - gigabyte files involved and distribute the spectral extractions and fits across a network of workstations using the parallel virtual machine @xcite .",
    "based upon the time required to extract a single spectrum from these enormous datasets , with the standard chandra dmextract tool in ciao ( ca .",
    "version 3.2 ) , the authors extrapolated that the spectral extractions alone would have required nearly 10 years had a tool - based approach been taken .",
    "in contrast , each run through the entire pvm - based analysis sequence required less than 12 days to complete .",
    "xspec  and isis  have been primarily concerned with fitting models to 1d spectra : a theoretical model of photon counts is calculated , convolved with an instrument response , and compared to the actual photon counts observed by the detector , using a given fit statistic ( typically @xmath0 ) .",
    "each provides mechanisms for indexed loading and management of data ( observed counts , instrument responses , et cetera ) , as well as the capacity to visually inspect , using pgplot  to construct a variety of 2d plots , the data , models , residuals , fit statistics , and so forth . while initially targeted for x - ray analysis , both xspec  and isishave been utilized in multiple wavebands .",
    "the primary authors of xspec  and isis  are practicing astronomers with active publication records in the domains served by their applications .",
    "both applications are thus subject to continuous , rapid , and rigorous scientific vetting .",
    "isis  and xspec  update cycles are measured in terms of days and weeks , which can be beneficial for users under time constraints before their proprietary data go public .",
    "xspec  is the tool most widely used in x - ray astronomy for spectral fitting ; with a legacy spanning more than two decades and hundreds of citations , its value to the scientific community is beyond question .",
    "xspec  bundles more than 50 theoretical models , each of which may also be used by external programs simply by linking to its libraries .",
    "the core set of models may be extended with either precomputed file - based table models or compiled codes .",
    "the bulk of compiled xspec  models are coded in fortran , however as part of a significant redesign effort support for custom c and c++ models was recently added ( ca .",
    "xspec  was also one of the earliest astronomical applications to adopt a widely - used , general - purpose scripting language for interactive use and batch control ; the incorporation of tcl , introduced in version 10 and stabilized in version 11 , provided programmability and a clear path to graphical interfaces with the tk widget set .    isis  was conceived to support analysis of high - resolution chandra x - ray gratings spectra , then quickly grew into a general - purpose analysis system .",
    "isis  is essentially a superset of xspec , combining all of its models ( though they are not required for isis  operation ) and more with the s - langscripting language @xcite , whose mathematical performance rivals both commercial packages such as matlab @xcite or idl @xcite as well as the numerical extensions for popular open source languages ( * ? ? ?",
    "*  [ numerics ] ) .    as with xspec",
    ", users may define custom models in compiled code , external tables , or as a string specifying simple arithmetic combinations of existing models , but isis  takes it further by also allowing models to be interpreted s - lang  functions ; this supports rapid prototyping and , because of the high - performance of s - lang  numerics (  [ numerics ] ) , need not sacrifice speed for the convenience of using an interpreter .",
    "xspec  does not support the use of tcl  procedures as models .",
    "the chief means of controlling xspec  and isis  interactively is by textual prompt , with both providing vi and emacs key bindings through gnu readline , as well as filename completion and persistent command history .",
    "xspec  accepts commands entered in abbreviated form , such as mo for model , but does not auto - complete tcl  command or variable names from partial input .",
    "isis  provides strong auto - completion facilities , allowing any s - lang  function or variable name to be identified from minimal partial input .",
    "in addition to the command prompt , optional packages providing graphical interfaces , such as the gtk - based vwhere  (  [ vwhere ] ) or the saods9 @xcite image display module (  [ ds9 ] ) , have been publicly available and utilized within isis  for several years .",
    "graphical extensions for xspec  have been discussed in the literature @xcite and online , but , other than wholly external tools like fv  @xcite , none seem publicly available for use within xspec  proper .",
    "the xspec  prompt presents an appealingly simple , _ everything - is - a - command _ interface , and fosters ease of use by offering brief , germane command names , assuming sensible defaults , and in some cases transparently combining multiple operations into one : e.g. loading both data and background files with a single command . a typical",
    "command is shorter and requires less punctuation in xspec , although the auto - completion capability of isis  can compensate for its relative verbosity . in short",
    ", xspec  makes it easy to perform many common spectral analysis tasks .",
    "the isis  prompt was designed to be a proxy s - lang  interpreter ( fig . [ arch ] ) , making isis  programmable and extensible since inception .",
    "its _ everything - is - a - function _ philosophy permeates the implementation and user experience , providing , at the cost of a steeper initial learning curve , considerable flexibility and power .",
    "consider for illustration the astrophysical plasma emission database ( aped ) of @xcite . because isis  provides programmatic access to virtually all of aped , curves like those of fig .",
    "[ ionfrac ] , showing the ionization fractions at 25 temperatures for fe xvii through xxi , can be created with just a few statements    ....       temperature = 10.0^[6.0:7.2:0.05 ] ;       foreach ion ( [ 17 , 18 , 19 , 20 , 21 ] ) {          fraction = ion_frac(fe , ion , temperature ) ;          oplot ( temperature , fraction ) ;       } ....    either directly from the isis  prompt or within analysis scripts . the importance to x - ray analysis of this sort of facile manipulation of atomic data",
    "is heavily underscored in @xcite .",
    "it is not clear how a similar ad - hoc query of aped could be formulated in xspec , nor how the results of such might be used within it for further analysis .",
    "one problem is that the use of aped in xspec  is highly constrained , due to it being hidden , e.g. , within the internals of the apec model and identify commands .",
    "another obstacle is that high - level plotting in xspec  is not generic : the plot and iplot commands are also opaque , in that they take their vectors from internal state representing the current data or model under inspection . intimately tied to the semantics of 1d spectral analysis",
    ", these commands may not be used until after a dataset has been loaded .",
    "while isis  contains similar visualization commands specifically tailored to spectral analysis , the oplot function shown above is part of a family of routines which allows one to create arbitrary image , scatter , histogram , and contour [ over]plots from arbitrary data , independently of the current spectra being analyzed .",
    "this makes exploratory coding and visualization like    ....            isis >   x = [ pi/2 : 2*pi : pi/100 ]            isis >   plot(x , cos(x ) )            isis >   oplot(x , sin(x ) ) ....    as natural in isis as it is in other interactive analysis systems such as idl or pyraf @xcite . in xspec",
    "such dynamic creation of interpreted arrays and direct mathematical manipulation and visualization of them is more difficult , involving a melange of tcl  code , xspec  commands , intermediate files , and low - level qdp / plt directives .",
    "the issue is not that interpreted numeric arrays can not be utilized in xspec , because the tcl  extensions blt and nap ( see next section ) make this possible ; nor does the problem lie with pgplot , since it provides more capabilities than xspec  currently exploits .",
    "rather , it is the xspecarchitecture which does not connect the two in a    straightforward manner , leaving the user little choice but to look elsewhere for open - ended numerics and visualization .",
    "this opacity and disconnectedness is evident in other functional areas of xspec , notably the manner in which data are input & managed (  [ input ] ) and how custom models are specified (  [ custom - models ] ) .        echoing similar criticisms levied upon graphical interfaces when compared to command lines @xcite , we collectively refer to these issues as the black box problem : by hiding complexity to make common tasks easy , uncommon or novel tasks can be made difficult or impossible .",
    "the ease of use that has been a hallmark of xspec  written by astronomers to do things astronomers need , in a way natural to them  has served the community well . a challenge , though , is that as instruments and the data collected from them grow in size and complexity , causing us to consider new questions and possibly develop new techniques to answer them , the black box problem  can engender _ you may only !",
    "_ patterns of analysis , rather than foster rapid , ad hoc explorations of _ what if ? _ scenarios .",
    "more modular , configurable , and open implementations @xcite can help resolve this tension , allowing applications to rapidly evolve to suit specific user needs while freeing their primary authors of the burden of coding and maintaining such enhancements themselves .",
    "compact multidimensional numerics are a major basis for the popularity of commercial toolsets such as idl or matlab .",
    "the innate capability of s - lang  in this regard was a primary motivator for its adoption in isis , and endows it with analytic expressiveness and scripting performance not equaled in xspec .    as indicated in the earlier code fragments ,",
    "complex mathematical abstractions may be stated concisely in s - lang , without regard to whether they will operate upon scalars , vectors , multidimensional arrays , or some combination of each , and are computed with performance on par with commercial software ( e.g. , as in fig .",
    "[ idl - plot ] ) . in this section",
    "we discuss the more involved example of fig .",
    "[ orbmodel ] , consisting of an orbital model implemented in pure s - langand taken  as is \" from an mit research effort the model was fit to a coarsely binned lightcurve ( providing an example of how isis  can model non - spectroscopic data directly from in - memory s - langarrays , as discussed in  [ input ] ) , and represents a steady amplitude curve interrupted by an eclipse with a quadratic ingress and egress , with low - level emission during the eclipse also modeled by a quadratic function . @xcite .    as a means of assessing the numerics and extensibility of xspec  we attempted to translate this model into tcl ; for completeness we also made perl and python translations , since these languages are actively employed by astronomers in systems like pdl and pyraf and so are useful contrasts for gauging the numerical capabilities of s - lang .",
    "because neither tcl  , perl , nor python are intrinsically vectorized we used numerical extension modules for each conversion : blt & nap for tcl , pdl for perl , and numeric , numarray , & numpy for python .",
    "the python and perl conversions were straightforward , with python being the somewhat easier of the two ; we did not complete the conversion to tcl , however , largely because neither blt nor nap provided a clear equivalent to the where command or a means of using the results of such for array slicing .",
    "this model would therefore need to be recoded in a compiled language before it could be used in xspec . a plot of the performance of perl 5.8.4 and python 2.4 implementations of this model , divided by the corresponding s - lang  2.0.7 performance , is given in fig .",
    "[ orbmodel - plot ] .",
    "the testing methodology behind figs .",
    "[ idl - plot ] and [ orbmodel - plot ] is described in @xcite , along with memory statistics and additional tests showing similar performance trends .",
    "briefly , the datapoints in each curve are the mean times of 1000 invocations of the model on a given grid size ( 31 in all , from 1 to 1e6 bins ) ; all codes were compiled using gcc 3.3 with -o3 optimization , and executed on a dual athlon ( 1.8ghz ) machine running debian 3.1 .",
    "although not a comprehensive series of benchmarks , these results hint that the numerical engine of isis  is among the strongest available . high performance scripting means that rapid development techniques  irrespective of language  can be applied to a broad scope of analysis problems , allowing the writing of compiled code to gradually become a last resort instead of the primary avenue of attack .",
    "s - lang  bears a strong resemblance to c and idl , arguably the most popular        scripting language used by astronomers , and in fact we and colleagues have converted numerous idl and matlab scripts to s - lang  for use in isis with relative ease .",
    "as we found with the orbital model , converting such scripts to tcl  for use in xspec  would pose a considerable challenge : although the primary interface of xspec  is a scriptable interpreter in which multidimensional arrays may be created and mathematically manipulated  with the aid of the blt or nap  the results of such can not be straightforwardly utilized for spectroscopy .",
    "the fact that the internal data tables of xspec  are not exposed for direct population from the tcl  interpreter is another instance of the black box problem ; data may only be read from fits files , and only via the data command or its integral mission - specific variant spidata . there is no documented provision by which interpreted arrays may be used , for instance , to specify observed counts or responses .    reflecting a fundamental difference in approach ,",
    "xspec  is more static than isis , taking the position that extensive data preparation happens outside the application .",
    "an advantage of this approach is self - documentation : well - written tools record the path along which a fits file travels as history keywords in its header .",
    "a drawback is the underlying implication that input data need little massaging during interactive analysis ; when the need for such data manipulation arises , the solution typically involves dumping xspec  state to disk files , and/or running ftools or other programs to generate new file products , then reloading these data back into xspec .",
    "this _ files - only _ data management paradigm can lead to slower performance and more cumbersome analytics (  [ scalability ] ,  [ vwhere ] ) . it can also be an evolutionary disadvantage , i.e. by potentially limiting the pool of individuals able or willing to contribute new i / o codes to xspec . as exemplified by the implementation of the spidata command",
    ", endowing xspec  with the ability to directly read additional file or mission formats requires detailed mastery of its internals .",
    "this means general - purpose code generators like swig  @xcite or slirp  @xcite can not be leveraged to automate the wrapping of i / o libraries and simplify the use of new formats in xspec . to foster the widest possible use , by design",
    "such wrapper generators know nothing about the applications in which the bindings they create will be used .",
    "they emit code targeted to the scope of a scripting language , rather than application - specific c++ methods like spi_data::read ( ) which is suitable only for internal xspec  use .",
    "isis  aims for a more dynamic and configurable approach to data management .",
    "in addition to supporting file - based input in the manner of xspec , but with ascii in addition to fits , isis  also permits most facets of the modeling process to be specified directly from interpreted s - lang  arrays in memory , including the theoretical and observed counts , arf , rmf , and background .    the problem of augmenting spectroscopy with data in foreign formats is thus reduced from having to master xspec  internals to merely being able to create s - lang  arrays from such files .",
    "this is within the reach of end users , not just application authors , particularly because automatic code generators can then be employed to simplify the creation of scriptable wrappers for the relevant i / o libraries .",
    "as an example of how these considerations can matter in practical use , consider the hdf5 file format and i / o library @xcite . while fits is the standard format for archiving and distributing astrophysical observations , hdf5 has become the defacto standard for storing astrophysical simulations such as those generated by flash @xcite .",
    "having the ability to easily compare and contrast observations with simulations , e.g. , using simulation output as source model input , could foster more sophisticated analyses .",
    "we have explored such questions in isis as part of the hydra project , using slirp   to generate the slh5 module for reading and writing hdf5 data directly to and from in - memory s - langarrays .",
    "the resulting objects may be sliced with s - lang  array manipulators or mathematically transformed in arbitrary ways (  [ numerics ] ) before further analysis , such as being treated as fit data or model data , or passed to 2d plotting or 3d volumetric routines for visualization .",
    "this module also obviates the need for a conversion tool to migrate data from hdf5 to fits for spectroscopy .",
    "this spirit of imposing fewer constraints on how its internal tables may be populated or manipulated leads to more flexible and mathematically diverse analysis .",
    "for example , consider the problem of grouping data to ensure an adequate signal to noise ratio is obtained for each detector channel . with xspec  data",
    "are grouped prior to input , usually with the grppha tool . the assigned grouping persists for the life of the loaded dataset , and may only be changed by re - running grppha outside of xspec , deleting the original dataset in xspec , and reloading it with the new grouping . with isis",
    "spectra may be dynamically rebinned in memory using the functions rebin_data ( ) , group_data ( ) , or variants  with the associated dataset remaining intact .",
    "isis  also provides options not available in the xspec  grppha paradigm , such as grouping by signal to noise ratio , or allowing datasets to be combined directly in memory , bringing to bear the full numerical power discussed in  [ numerics ] and  [ beyond1d ] , instead of shelling out to run tools such as mathpha , marfrmf , or addrmf  an approach of more limited mathematical generality .",
    "isis  also supports combining non - linear ( e.g. piled - up ) data , which in general can not be done with tools because of the model evaluation involved .",
    "in  [ numerics ] we detailed how the performance of s - lang  couples with the ability of isis  to use purely interpreted models to provide an alternative to the traditional method of using compiled codes as custom spectral models .",
    "this significant feature , not available to xspec  users since it does not permit tcl  procedures to be used as models , can encourage rapid experimentation with short , highly analytic codes .",
    "these brief , self - contained scripts are easily exchanged among users , as they may be loaded immediately into isis from any directory .",
    "this is in contrast to code that must be compiled into a shareable object then accessed from fixed locations and in conjunction with external description files , such as $ local_model_directory and lmodel.dat are respectively used in xspec .",
    "moving to the realm of compiled models , while version 12 of xspec  provides many improvements over version 11notably support for c and c++ , double precision numerics , and the initpackage  automated model wrapping command  a number of limitations persist .",
    "to begin , using local models at all means one must first build xspec  from source .",
    "although heasoft generally builds well , this can still be daunting , and is unnecessary with isis  as both interpreted and compiled user models may be used from a binary installation .",
    "next , model components in xspec  must be designated as having a specific form , e.g. additive , multiplicative , convolution , etc .",
    "this too is unnecessary in isis , as it places no restriction upon the computational form of a model  any conceivable mathematical function may be used .    as xspec  has been the defacto standard for so long , it is also easy for spectral model developers to code expressly for xspec , by relying too heavily upon its internal functions ( such as udmget for memory allocation or xwrite for message output ) when crafting models . when xspec  was the only x - ray spectral modeling tool available this was not a concern , but today it makes reusing models in other environments more difficult . for example , pulling the pexriv model out of xspec  11 , which remains widely used , required    ....",
    "-lxspec -lxspec_lfn -lxspec -lwcs            -lxanlib -lreadline -lcfitsio -lpgplot            -lcurses -ltermcap ....    on the link line , plus the introduction of a  dummy \" function to resolve an unused symbol name @xcite . standing out here is the recursive use of -lxspec , and the need for auxiliary terminal management and plotting libraries that provide no numerical or physics contribution to the model .",
    "although this situation is improved in xspec  12 , these show that it is not enough to simply make source code available to the public : _ orthogonality _ is an important aspect of open and flexible software . to promote external reusability ,",
    "code must also be _ separable _ into logically distinct units free of unwanted dependencies .",
    "these are core implementation principles of isis(fig . [ arch ] ) .",
    "while initpackage  does help automate the use of custom models in xspec  12 , it is not a generic , application - neutral wrapper generator in the style of slirp  or swig .",
    "the result is that custom modeling can not be scripted in xspec  with the same level of flexibility as in isis .",
    "for example , initpackage  does not expose the routines it wraps to the top - level tcl  interpreter , but rather makes them accessible only through the the xspec + model command .",
    "not being able to call models directly from tcl  means the convenience of an interpreter can not be leveraged when testing and using the models .",
    "this can be easy to overlook , because many model writers devise their own nominal tests in whatever compiled language they used to write the model .",
    "however , it would be valuable for both writers and users of models if they could craft tcl  commands or scripts to exercise them ( in a more powerful and streamlined manner than the multiplexing tclout command , or faking a dataset ) or pass their output to other features in the application for further numerical processing .",
    "consider fortran common blocks , for instance , and the xspec  warmabs model in particular : after evaluation the ewout block in this model contains a list of the strongest lines , sorted by element and ion .",
    "wrapping warmabs with slirpmakes the content of this and every other common block in the model accessible to isis  as s - lang  variables .",
    "this provides scientists another means of accessing the internals of a code , without needing to master the internals of the application for which that code was initially written .",
    "in addition , initpackage  wraps only the outermost interface routine of a model : if the spectrum returned by a model is actually computed in several steps by calling additional routines , those lower level routines are not exposed by initpackage  for use in xspec  outside the model evaluation . as an example of how exposing the low level routines could be useful , we consider the pshock and vpshock models .",
    "internally , both rely upon the lower - level ionseqs ( ) routine to calculate nonequilibrium ionization ionic concentrations . in response to a collaborator ( ji 2007 , priv .",
    "comm . ) who wished to obtain these ionic concentrations independently , we used slirp  to wrap ionseq.f in a matter of only minutes , which allowed ionseqs ( ) to be called directly from a s - lang  script in isis .",
    "the jet model of @xcite provides another good example .",
    "the output spectrum is summed from 4 individual components ( disk , comptonization , synchrotron , and synchrotron self - comptonization spectra ) , each computed by distinct routines within a single fortran source file . to analyze or visualize the independent contribution of each component",
    "it is necessary to isolate each from the total flux . to achieve this",
    "the model can be executed in different modes , one of which will execute write statements to output component contributions to disk files as they are computed .",
    "because our slirp  wrapper for this jet model makes every routine within the fortran file visible to the top - level s - lang  interpreter , not just the outermost model routine , the component fluxes can in principle now be accessed by making the relevant routine calls , or accessing the associated common blocks , directly from isis . to our knowledge",
    "the only way to achieve a similar result in xspec  would be to wrap the code twice , once with initpackage  to make the custom model routine visible to the model command , and again as a tcl  extension module to expose the remaining routines to the tcl  interpreter .",
    "tools like ftcl or critcl can simplify bindings generation in the latter case , but not automate it to the level that slirp  does ; it is also unclear whether they support a range of features seen in general scientific codes , such as common blocks , string and multidimensional arrays , or complex datatypes .",
    "using initpackage  for models which call external libraries can also be problematic .",
    "for example , collaborators are extending the above jet model with codes that call gnu scientific library routines , but initpackage  documents no mechanism by which the gsl can be linked in at build time .",
    "following compiler convention , this is achieved with slirp  by specifying -lgsl on the command line .",
    "finally , functions wrapped by slirp  can be automatically vectorized , allowing them to operate over entire arrays in a single call , and at the speed of compiled c code instead of using slower , interpreted looping constructs .",
    "vectorized wrappers can also be tuned for parallelization with openmp @xcite , allowing scientists to take better advantage of their multicore machines during isis  analysis . to our knowledge",
    "autogenerated vector parallel wrappers are currently unique to slirp , and therefore inaccessible in xspec .",
    "parallel computing is not new , but to this day few astronomers employ parallelism for standard problems in data analysis . to provide a quantitative sense of this assertion relative to x - ray spectroscopy @xcite , we performed the following full text searches on all published papers indexed in the ads @xcite by september of 2005 .    .published references to parallelism and xspec , as indexed in ads through 2005 .",
    "[ cols=\"^,^\",options=\"header \" , ]     extra keywords were included with pvm and mpi ( the message passing interface , @xcite ) so as to cull false matches ( e.g. with the max planck institute ) . queries in ads on other modeling tools , or with other search engines such as google , all yielded similar trends : astronomers and astrophysicists have employed parallel computing , but mainly for highly customized , large - scale problems in simulation , image processing , or data reduction .",
    "even though a majority of papers published in observational astronomy over recent decades result from fitting models within established software systems , virtually no one is employing parallelism to do so , especially in the interactive context .",
    "as discussed in @xcite and earlier in  [ scalability ] , for several years pvm has been used in isis to apply pools of machines to coarse - grained calculations that do not fit within the compute space of one workstation .",
    "consider relativistic kerr disk models , for example .",
    "historically , implementors have opted to use precomputed tables to gain speed at the expense of limiting flexibility in searching parameter space . however , by recognizing that contributions from individual radii may be computed independently the model has been parallelized in isis  to avoid this tradeoff ( a. young , priv .",
    "* ) . likewise , the aforementioned jet model can be expensive to compute , particularly when calculating error bars : generating 90% confidence limits for 12 free parameters , at the very coarse tolerance of 0.5 , required 4 days on a single 2.66 ghz intel core 2 duo processor . to increase performance we assigned the confidence limit search to 12 intel xeon 3.4ghz processors within a pvm .",
    "this reduced the runtime at 0.5 tolerance to under 24 hours , a greater than 75% speedup ; it also allowed us to discern finer features in parameter space by increasing the tolerance resolution by a factor of 500 , to 0.001 , while keeping the overall runtime to 50 hours , or approximately half of the serial runtime at 0.5 resolution .",
    "temperature mapping is another problem that was straightforward to parallelize with isis .",
    "for instance , @xcite provides a map of heating in the intracluster medium of perseus , computed from 10,000 spectral extractions and fits on 20 + cpus in just several hours .",
    "additional efforts have also led to improvements in related areas of research , such as pvm_xstar , a parallelizing wrapper for xstar which has made it feasible for us to probe thousands of photoionized gas physical scenarios in the time it has previously taken to compute only a handful of such models ( noble & ji , in prep . ) .    at the other end of the architectural scale",
    ", we have also shown that isis  can make transparent use of openmp to exploit shared memory multiprocessors @xcite .",
    "this is especially relevant in light of the emergence of multicore architectures : soon most astronomers will have parallel computers on their desktops , but few astronomy applications are poised to take advantage of them .",
    "analysis systems which do not embrace parallelism can process at most the workload of only 1 cpu , resulting in a dramatic @xmath1 underutilization of resources as more cpu cores are added .",
    "however , astronomers are well versed in scripting , particularly with very high - level , array - oriented numerical packages like idl , pdl , and s - lang , to name a few .",
    "they combine easy manipulation of mathematical structures of arbitrary dimension with most of the performance of compiled code , with the latter due largely to moving array traversals from the interpreted layer into lower - level code like this c fragment    ....          case slang_times :               for ( n = 0 ; n < na ; n++ )                   c[n ] = a[n ] * b[n ] ; ....    which provides vectorized multiplication in s - lang .",
    "this suggests that much of the strength and appeal of numerical scripting stems from relatively simple loops over regular structures , making them ripe for automatic parallelization .",
    "this pattern was exploited in slirp  and s - lang  to effect the openmp parallelizations described in @xcite .",
    "we believe that isis  is the only general purpose spectroscopy system in which such a range of parallelism  from single processors on multiple machines to multiple processors on single machines  has been demonstrated . in both cases speedups",
    "were obtained without exposing parallelism at the isis  application level .",
    "for instance , the same serial implementations of spectroscopic models have been used for both single- and multi - processor execution .",
    "this minimizes two traditional barriers to the use of parallelism by non - specialists : learning how to program for concurrency and recasting sequential algorithms in parallel form .",
    "we believe these considerations are important because the emerging ubiquity of multicore architectures , combined with the ever - growing size of datasets and analysis complexity , makes the regular use of parallelism in astronomy not a question of _ if _ it will occur , but rather one of merely _ when_.",
    "data from modern telescopes are getting larger and more detailed , with the use of multiple datasets from multiple missions becoming commonplace . making sense of",
    "it all often requires techniques more sophisticated than traditional plots or images .",
    "canned data reduction threads , while an important piece of the puzzle , can only go so far .",
    "data openness and architectural modularity ( fig .",
    "[ arch ] ) make it easy to push isis  beyond its original mission of 1d spectroscopy to address this broader set of analysis problems . as we illustrate here , it has become unnecessary to use entirely separate applications ( as ximage , xselect , or xronos are used alongside xspec ) or be constrained by a strictly _ file @xmath2 tool @xmath2 file _  model , in order to supplement spectral modeling with , for example , advanced filtering , imaging , or timing analysis .",
    "for each of the examples shown here it is not clear how a similar result might be obtained so directly within xspec .",
    "the optional sitar module endows isis with timing analysis capability , obviating the need to use a separate timing application such as xronos . the power spectrum in fig .",
    "[ timing ] was generated entirely in isis : the data were read , the ffts were performed and averaged , the power spectrum was logarithmically binned over fourier frequency , the constant + two lorentzians model was fit , and the results plotted , operating directly upon arrays in memory , all without ever leaving the program .",
    "many excellent imaging tools are available to astronomers , but it is        impossible for any one of them to do everything . here",
    "again , the extensibility and modularity of the isis  paradigm helps avoid the fate of  doing nothing \" while waiting for the implementation of new features desired in one s work . in such cases",
    "it can be expedient to craft new modules which add missing features , or make certain functionality more easy to incorporate into modeling and analysis .",
    "for example , consider fig .",
    "[ ngc7714 ] , drawn from chandra observation 4800 of interacting galaxy pair ngc7714 , and the following series of commands :    ....      isis > require(\"ds9 \" )      isis > require(\"gsl \" )      isis > image = ds9_get_array ( )      isis > hist = sum(image , 0 )      isis > range = [ 440:680 ]      isis > hplot(range-1 , range , hist[range ] )      isis > xa = [ 440:680:4 ] ; ya = hist[xa ]      isis > smoothed = interp_cspline(range , xa , ya )      isis > oplot(range , smoothed ) ....",
    "first the saods9 and gnu scientific library extension modules @xcite are loaded ; we show this explicitly for didactic purposes , but isis  can be configured to load either module automatically when the given functions are invoked .",
    "the 1024@xmath31024 image is then retrieved directly into a properly byteswapped 2d s - lang  pixel array , using an xpa @xcite binary transfer instead of intermediate file i / o .",
    "this image is collapsed along its x axis using the native s - lang   sum function , to create an intensity histogram plot .",
    "the gsl cubic spline function is then called to smooth the brightest portion of the intensity histogram , interpolating over every fourth point therein , and finally we overplot the result ( dotted red line ) .",
    "although the task here is relatively straightforward , it again shows how open - ended analysis objectives can be achieved by weaving existing tools together in new ways , using an array - based interpreter as the thread .",
    "ds9 is extended beyond its essential role as a qualitative display tool and into the realm of quantitative analysis , while the isis  user is able to exploit the imaging capabilities of ds9 within interactive or scripted analysis .",
    "+      another example is evt2img , a simple guilet which combines the histogram and gtk modules to provide an interactive mechanism for creating 3-color images directly from event lists .",
    "images are created in evt2img  by defining 3 energy band filters , binning the events selected by each filter with the hist2d function , and overlaying the resulting red , green , and blue monochrome images within a gtk display window . as shown in fig .",
    "[ evt2img ] , a useful feature of evt2img  is its ability to plot the energy spectrum as a 1d histogram in order to tune the color band filters in real time , simply by adjusting the individual red , green , and blue sliders . for interactive exploration",
    "this method is faster and more intuitive than the traditional _ file @xmath2 tool",
    "@xmath2 file _",
    "approach , and produces no temporary file litter while experimenting with color assignment filters .",
    "evt2img may be run standalone from the operating system prompt or as a function in isis , and in the latter case allows event data to be input directly from in - memory interpreted arrays in addition to traditional event files .",
    "the hydra project at mit provides a wealth of more sophisticated examples of how advanced imaging can be tied more directly to numerical modeling and analysis in isis . under the auspices of the nasa aisrp program , a broad suite of 2d and 3d fitting , geometry , and visualization routines",
    "have been developed , e.g. to do forward folding and comparison of models with 2d event - based data sets .",
    "these are described in detail online , but are briefly illustrated here in the context of an analysis of cavities in hydra a , using the chandra observation 4969 .",
    "a model is defined by combining traditional spectral components ( e.g. mekal and powerlaw ) with 3d geometric components ( e.g. an agn modeled as a sphere ) .",
    "the fitting is performed directly in isis , as is the generation of the residual , data , and model images , and 2d and 3d model component projections ( fig .",
    "[ e2d ] ) .     +            astrophysical observation and simulation are in the midst of a transition beyond 1d spectra and 2d images , and into the realm of three - dimensional phenomena .",
    "a number of astronomy software tools exist which enable visualization of so - called 3d data cubes , but a problem shared by many of them is that they are limited to displaying one 2d slice at a time , optionally in series as an animation .",
    "here we consider a 99 spectra data cube generated by cubism from spitzer observation 3310 of cassiopeia a , with dimensions ra , dec , and @xmath4 . to identify where emission is strongest in the spatial and wavelength domains ,",
    "the entire fits datacube can be passed directly to volview  ( fig .",
    "[ spitzer - volume ] )    ....    isis > require(\"volview \" )    isis > cube = fits_read_image(\"casa_ll1_s12.fits \" )    isis > volview(cube ) ....    this visualization makes it instantly clear that the clumpy regions correspond to bright emission at fairly specific wavelengths . the volview  guilet is our interface to the volpack rendering library @xcite , which , although somewhat dated , is small , has no external dependencies , requires no special hardware , and is very fast .",
    "the shear - warp factorization algorithm in volpack has been generally recognized as the fastest rendering technique available @xcite , a crucial factor for interactive analysis .",
    "in contrast to high - end tools like paraview and visit , volview provides a simple , low buy - in path to volume rendering and is actively used in the hydra project ..      having the ability to cut , visualize , and correlate data , in complex ways and from multiple missions , is invaluable to analysis .",
    "this exploratory process ultimately seeks to derive sets of constraints _ * c * _ = \\{@xmath5 } upon input data _ * d * _ by iterating through a series of models , comparisons to data , and refinements of assumptions and model parameters . because its analytic process does not encompass whole - array numerics (  [ numerics ] ,  [ input ] ) , an iteration of this cycle in xspec  can involve dumping application state to disk , followed by the execution of multiple tools such as fselect or fcalcto transform or cut file data , possibly fv  or ximage to visualize filtered data subsets , and xspec  to incorporate the results back into analysis .",
    "this process creates temporary file litter products which can quickly become difficult to manage , and requires slow disk i / o passes over files when applying each unique set of filter constraints .",
    "other limiting factors are that it restricts the scope of exploration to data expressed in the fits file format , and that tcl - based i / o in tools like fv  does not scale well to datasets containing millions of events .",
    "[ vwhere ] in contrast , vwhere  @xcite , a graphical extension of the s - lang   where array slicing function , unifies the constraint cycle by enabling each phase to be performed within a single application",
    ". the result can be an intuitive , faster , and more powerful alternative to file - based data mining . by supporting the use of interpreted s - lang  arrays isis  & vwhere",
    "make it easy to combine data from multiple sources and formats , not just fits files , and examine them in natural ways , as well as foster scalability .",
    "vwhere  has been used to simultaneously mine hundreds of observations from multiple telescopes , e.g. for evidence of transitions between the soft and hard states of cygnus x-1 @xcite , correlate model parameters with fit results  directly in memory from dozens of fits  for scores of observations , and quickly corroborate colleague results @xcite .",
    "filtering in vwhere  amounts to manipulating regions of interest on plots generated from s - lang  arrays ( fig .",
    "[ vwhere1 ] ) , with no syntax required and the effects upon any combination of vectors automatically visualized for inspection ( fig .",
    "[ vwhere2 ] ) .",
    "this approach reveals data correlations that can be difficult and time - consuming to ferret out with tool - based techniques .",
    "new data vectors may be created on the fly and with no additional i / o overhead , using anything from simple arithmetic combinations of existing vectors to any mathematical transformation that can be specified in s - langor imported from external c , c++ , or fortran  codes .",
    "in contrast , file - based filtering tools require the use of syntax which may conflict in subtle ways from package to package . specifying mathematical operations to such tools , e.g. , in the form of quoted unix shell syntax , can be tedious and cumbersome , and does not approach the expressive power ( consider recursion , for example ) or performance of isis  numerics . as an illustration ,",
    "consider the use of calculator tools for the discriminant computation in  [ numerics ] : the 1-million element s - lang  array datapoint in fig .",
    "[ idl - plot ] corresponds to a runtime of ca .",
    "0.15 seconds :    ....     isis >   a = [ 1:1e6 + 1 ] ;   b = 3*a ; c = 2*a     isis > tic ; d = sqrt(b^2 - 4*a*c ) ; toc     0.151172 ....    using tools to perform similar operations upon files    ....     fcalc in out d \" sqrt(b^2 - 4*a*c ) \"     ftcalc in out d \" sqrt(b^2 - 4*a*c ) \"     dmtcalc in out expression=\"d = sqrt(b^2 - 4*a*c ) \" ....    ( from a locally compiled -o2 distribution of heasoft 6.1 and a ciao3.3 binary distribution , respectively ) was consistently 1 to 2 orders of magnitude slower : roughly 1.8 sec for fcalc , 2.3 sec for ftcalc and 70 sec for dmtcalc .",
    "if we include the time to write    ....     isis >   s = struct{a , b , c } ; s.a = a ; s.b = b ; s.c = c     isis >   fits_write_binary_table(\"in\",\"arrays\",s ) ....    the arrays to disk and then read them back in    ....     isis >   d = fits_read_table(\"out\").d ....    the performance penalty of the tool approach is even greater . moreover , the output product of each tool is not directly useful : to be visually inspected or used in further analysis , for instance , it first needs to be loaded into another program ( e.g. fv , or xspec ) , incurring additional i / o and application overheads that are not seen in isis  because its result arrays may be immediately manipulated or passed to subsequent computations .",
    "shared memory can , in principle , mitigate the disk i / o cost , but in this case it did not help : instructing ftcalc to write to shmem://h1 consistently resulted in runtimes of nearly 3 minutes , while the ciao dmtcalc tool would not permit the creation of a shared memory fits table .",
    "even if shared memory were faster than files in this case , the point raised earlier in  [ input ] still remains , namely that xspec  documents no clear provision though which such generic data arrays may be utilized in analysis .",
    "it must also be noted that few , if any , file - based transformation tools are extensible . if we wished to use a hypergeometric function in vwhere  it is as simple as loading the gsl module with ` require(\"gsl \" ) ` and calling the relevant function .",
    "if the mathematical operations required for their research are not supported , tool users would have to either make an enhancement request and wait or create their own solution .",
    "we have been refining the approach to analysis espoused in this paper for much of the past decade . during that time ,",
    "one of the more persistent concerns we have privately encountered is that it can lead to diminished reproducibility , particularly in contrast to the _ file @xmath2 tool @xmath2 file_model .",
    "reproducibility is a cornerstone of science , and remains a topic of debate in wider circles @xcite , but is not treated in depth within the astronomy literature .",
    "we do not attempt to fill that gap here .",
    "rather , we aim only to address the perception that configurable , interpreter - based methods compromise reproducibility relative to file - based tool methods , and hope that this may contribute to a more complete treatment of reproducibility elsewhere .",
    "central to reproducibility is the recording of history .",
    "many tools assist that process by annotating modified files with fits history keywords .",
    "this is of clear utility , especially when tracing pipelines and other well - defined data reduction procedures . for open - ended analysis , however , we do not believe it is superior to the forms of history recorded by full - fledged analysis applications .",
    "consider what is being captured in history records written by tools : each keystroke of the command used to invoke the tool .",
    "this capability is not unique to tools .",
    "xspec  and isis  record keystroke history by virtue of their gnu readline command recall , editing , and logging capabilities , as do many other systems .",
    "focusing on keystrokes alone , though , obscures a larger point : regardless of whether one prefers logs or header keywords , indiscriminately long lists of commands typed are of little value without some sense of their relevance to publishable results .    in the end",
    "what matters most is that results may be regenerated so that conclusions may be plausibly confirmed by others , rather than having every bump or wrong turn along the way reproduced in high fidelity .",
    "scripts , the logical endpoint of our interpreter - based approach to analysis , confer this conceptual prioritization by making explicit the data and algorithms of greatest significance .",
    "such scripts arise in tool - based analysis as well , only they tend to be expressed in system - oriented languages like bourne shell or perl , rather than intrinsically whole - array numeric languages like s - lang  or idl",
    ". it can be argued , then , that scripts lead to higher forms of duplicability than fits history records alone .",
    "they are also easier to annotate with additional commentary .",
    "we therefore conclude that that tool- and interpreter - based approaches to analysis are approximately equivalent in the degree to which they facilitate reproducibility .",
    "care must be still taken when ",
    "feature creep \" introduces incompatibilities that make the use of older scripts problematic with newer software versions , so it is important that version information be recorded and that older software remains accessible on the internet .",
    "progress in science can be measured by our ability to pose increasingly advanced , open - ended questions and address them with flexible techniques of commensurate sophistication . since the age of newton , one implication of this is that scientists must also practice mathematics , and since the age of turing it has also meant they must practice programming .    in this paper",
    "we have compared two open - source spectral analysis applications , xspec  and isis , in an attempt to gauge how their scientific and mathematical reach may be extended with custom programming .",
    "contrasts between the two have been drawn from the context of current research efforts utilizing high performance computation , numerical modeling , atomic physics , visualization , automated code generation , and data management .",
    "we have demonstrated how these have led to the incorporation of new analytic techniques in isis , in ways that are either unexplored or problematic for the current xspec  architecture and its associated _ file @xmath2 tool @xmath2 file _  model of analysis .",
    "xspec  has been of tremendous value to the x - ray community , continues to be actively developed , and has a strong history of community enhancement via local models ( and to some extent , tcl / tk scripts ) .",
    "however , we have argued that the top - level simplicity of the xspec  interface , long and rightfully one of the pillars of its appeal , can shroud much of its internal computational and data handling mechanisms .",
    "this in turn can render xspec  less adaptable  by the typical user  for evolving research needs .",
    "commands which operate as black - boxed common denominators of analysis , and permitting only file - based data input , may not be enough to probe some of the more computationally challenging problems facing astronomers .",
    "we conclude that analysis applications such as isis , endowed with interpreted whole - array numerical capabilities and an open , modular , and scriptable architecture designed expressly for high configurability , are more favorably equipped to support ad - hoc research needs while not appreciably compromising reproducibility .",
    "originally envisioned as a tool for chandra gratings spectroscopy , isis  has heavily influenced the development of additional chandra analysis software , while also receiving nasa aisrp funding to continue its evolution within the aforementioned hydra project .",
    "although some of the isis  capabilities we ve emphasized do exist in other astronomy software , we are unaware of any publications demonstrating how similar breadths of flexibility and computational power have been collected under the umbrella of a single open - source analysis application and brought to bear on published research in spectral analysis and x - ray astronomy in the manner discussed here .",
    "we would like to thank daniel dewey , jrn wilms , and our mit colleagues for reviewing drafts of the paper , as well as tracey delaney for supplying the spitzer 3d spectral cubes of casa .",
    "we are grateful to our anonymous referee for constructive criticism , and to nasa for funding this work through the aisrp grant nng06ge58 g .",
    ", m.  d. , white , r.  l. , and greenfield , p. ( 2001 ) . .",
    "in harnden , jr . , f.  r. , primini , f.  a. , and payne , h.  e. , editors , _ astronomical data analysis software and systems x _ , volume 238 of _ astronomical society of the pacific conference series _ , pages 59+ .                    , u. , laming , j.  m. , badenes , c. , berendse , f. , blondin , j. , cioffi , d. , delaney , t. , dewey , d. , fesen , r. , flanagan , k.  a. , fryer , c.  l. , ghavamian , p. , hughes , j.  p. , morse , j.  a. , plucinsky , p.  p. , petre , r. , pohl , m. , rudnick , l. , sankrit , r. , slane , p.  o. , smith , r.  k. , vink , j. , and warren , j.  s. ( 2004 ) . .",
    ", 615:l117l120 .    , j.  m. , jennings , d.  g. , mcglynn , t.  a. , bonnell , j.  t. , gliba , g.  w. , ruggiero , n.  g. , and serlemitsos , t.  a. ( 1994 ) . .",
    "in crabtree , d.  r. , hanisch , r.  j. , and barnes , j. , editors , _ asp conf . ser . 61 : astronomical data analysis software and systems iii _ , pages 71+ .",
    ", m.  j. , karakashian , t. , grant , c.  s. , eichhorn , g. , murray , s.  s. , watson , j.  m. , ossorio , p.  g. , and stoner , j.  l. ( 1993 ) . .",
    "in hanisch , r.  j. , brissenden , r.  j.  v. , and barnes , j. , editors , _ astronomical data analysis software and systems ii _ , volume  52 of _ astronomical society of the pacific conference series _ , pages 132+ .",
    "lacroute , p. and levoy , m. ( 1994 ) .",
    "fast volume rendering using a shear - warp factorization of the viewing transformation . in _",
    "siggraph 94 : proceedings of the 21st annual conference on computer graphics and interactive techniques _ , pages 451458 , new york , ny , usa . acm press .",
    "meiner , m. , huang , j. , bartz , d. , mueller , k. , and crawfis , r. ( 2000 ) . a practical evaluation of popular volume rendering algorithms . in _",
    "vvs 00 : proceedings of the 2000 ieee symposium on volume visualization _ , pages 8190 , new york ,",
    "ny , usa . acm press .        , m.  s. , houck , j.  c. , davis , j.  e. , young , a. , and nowak , m. ( 2006 ) . .",
    "in gabriel , c. , arviset , c. , ponz , d. , and enrique , s. , editors , _ asp conf . ser . 351 : astronomical data analysis software and systems xv _ , pages 481+ .            ,",
    "f. , noble , m. , and the cxc science data systems group ( 2005 ) . .",
    "in shopbell , p. , britton , m. , and ebert , r. , editors , _ asp conf . ser . 347 : astronomical data analysis software and systems xiv _ , pages 17+ ."
  ],
  "abstract_text": [
    "<S> we present a quantitative comparison between software features of the defacto standard x - ray spectral analysis tool , xspec and isis the interactive spectral interpretation system . </S>",
    "<S> our emphasis is on customized analysis , with isis  offered as a strong example of configurable software . while noting that xspec  has been of immense value to astronomers , and that its scientific core is moderately extensible  most commonly via the inclusion of user contributed  local models \" we identify a series of limitations with its use beyond conventional spectral modeling . </S>",
    "<S> we argue that from the viewpoint of the astronomical user , the xspecinternal structure presents a black box problem , with many of its important features hidden from the top - level interface , thus discouraging user customization . </S>",
    "<S> drawing from examples in custom modeling , numerical analysis , parallel computation , visualization , data management , and automated code generation , we show how a numerically scriptable , modular , and extensible analysis platform such as isis  facilitates many forms of advanced astrophysical inquiry . </S>"
  ]
}
{
  "article_text": [
    "the following sections detail the specifics of the code used to make the zeemanfit  magnetic - field - strength calculations , including :                    the code is currently written in idl , using readfits and writefits to ingest spectral data and output the zeemanfit results . the primary foundation for the choice of idl is the use of mpfitfun as the routine used for fitting a line - profile to each image pixel of spectral data .",
    "any translation out of idl would need to begin with either a new fit - finder routine chosen in the new language , or setting up the new - language - code to take mpfitfun as an external idl routine .                                                                    at the command line",
    ", the call returns a structure - array of results for each image pixel .",
    "the default call settings return enough information to call the solis_vsm_zeemanfit_plot ( ) function to return line - profiles to plot up the line - fit to the spectral data of a given pixel .",
    "set the /terse flag to return only the primary results of the zeeman fitting ( still slightly more ( rmsfit ) than is written to the output fits file ) .",
    "set the /verbose flag to return enough information to diagnose the results relative to the initial fit - guesses .",
    "be sure to set the /vfit flag if you want the results to include the longitudinal field strength computed from the fit to the stokes - v spectra , and the /writefile flag to actually write the results to a file rather than _ only _ returning them into resultarray ( below ) at the command line . /quiet turns off printed warnings and progress - markers , and several other keyword values allow for variations on , primarily , the constraints used in fitting the stokes - i spectra , such as ogauss , which takes a vector of 1s and/or 0s setting specific lines in the fit to be fit only as gaussian s ( or not ) .    for standard pipeline computing ,",
    "at least * two * input files must be specified : the stokes - i spec - cube file is taken as the primary input ; pfile specifies the regular level-2 output file , which contains a frame for the level-2 corrected continuum image ; and vfile specifies the stokes - v spec - cube , which must be supplied to run /vfit and _ can _ be used for selecting pixels and guessing input profiles if pfile is not specified , though the results will vary measurably from those produced using pfile . see  [ code_io ] for more detail on the input / output and on using level-0.5 scan - line files rather than the level-1.5 spec - cubes .",
    "the name of the output fits file is derived from the name of the first spectra - input file and header information . to add a suffix of additional information to the output - file name , use the outsfx keyword . to add a prefix and/or specify a directory path into which the output file should be placed , use the outprfx keyword .      ....",
    "resultarray = solis_vsm_zeemanfit ( ' data / k4v9t130207t171846_i.fts.gz ' , $          pfile='data / k4v92130207t171846.fts.gz ' , $          outprfx='resultsstoragedirectory/ ' , $          /writefile , /terse ,",
    "/quiet ) ....    * solis_vsm_zeemanfit_darkpixels : * this function is contained within the source - code file solis_vsm_zeemanfit.pro .",
    "it is used to select all pixels across the image ( using the level-2 corrected continuum - intensity image ) that are dark enough ( and on - disk enough ) to qualify as sunspot pixels that should be zeeman - fit ( even if stokes - v selection and fitting are not viable ) .",
    "it takes in a level-2 fits file , reading in the continuum - intensity frame as well as the parameters used to model the limb - darkened quiet - sun intensity .",
    "it computes the limb - darkened intensity , @xmath8 , using the equation : @xmath9^{n/2 } }       \\ , ,       \\label{eq_limbdark}\\ ] ] where @xmath10 is the pixel s distance from the designated disk center , and @xmath11 , @xmath12 , and each of the @xmath13 s are the limb - darkening fit parameters read in from the pfile header .",
    "it then compares the limb - darkened - fit to the continuum - intensity data and selects those pixels which are :      passing back their @xmath14 value for use by the zeemanfit code . +",
    "* solis_vsm_zeemanfit_stokesvpick : * this function is contained within the source - code file solis_vsm_zeemanfit.pro .",
    "it is used to select pixels across the image ( using the stokes - v - spectra peak - pixel values and locations ) that show a strong signal in polarized light consistent with a decently strong local - magnetic - field ( longitudinal ) .",
    "this selection is used to indicate pixels for which the stokes - v spectra may be zeeman - fit , or to select all pixels for zeeman - fitting ( stokes - i and stokes - v ) in the case where an appropriate level-2 pfile is not available to run solis_vsm_zeemanfit_darkpixels ( ) . for further details on the pixel - selection methods , see  [ code_sorting ] . + * solis_vsm_zeemanfit_recipe : * this function is contained within the source - code file solis_vsm_zeemanfit.pro .",
    "it takes in the user - flagged choices and spectral - data profiles for a given image pixel and computes the profile fit(s ) and magnetic - field strength for that pixel .",
    "it returns a data structure that by default contains the values for the primary results , as well as the parameters used to define the fit(s ) .",
    "( see  [ code_fit ] for specifics on the different fit scenarios . )",
    "if the pixel has been flagged as _ not _ zeemanfit - viable , zeroes are returned for the magnetic - field - strength values and , if the /dispercalc keyword is flagged , the stokes - i profile is fit with only four lines by calling the solis_vsm_zeemanfit_outfit_6302v ( ) function so that the dispersion for that pixel may be calculated from the separation of the two telluric o@xmath2 lines .",
    "if the pixel _ is _ flagged as zeemanfit - viable , the stokes - v ( if /vfit is flagged ) and stokes - i spectra are fit separately by calling solis_vsm_zeemanfit_vfit_6302v ( ) and solis_vsm_zeemanfit_ifit_6302v ( ) . if /dispercalc is flagged , the dispersion is then calculated from the stokes - i positions of the two telluric o@xmath2 lines , otherwise the dispersion is taken as set for a given camera ( see  [ code_disper ] for details ) .",
    "lastly the magnetic - field strength is calculated from the separation of the two 6302.5  @xmath0-component lines ( see  [ code_calc ] for details ) .",
    "if either ( a ) the computed field - strength is @xmath15  gauss , or ( b ) the computed 1-sigma error is @xmath16  gauss , the values are clipped out and returned as zeroes ( though the line - fit parameters are returned to the command - line intact for potential investigation ) . +",
    "* solis_vsm_zeemanfit_fitrange : * this function is contained within the source - code file solis_vsm_zeemanfit.pro .",
    "it is called from solis_vsm_zeemanfit_recipe ( ) ( if fitrange has not already been externally set by the user ) , taking in an individual stokes - i profile to return a vector of the first and last pixel indices defining the range of spectral - data pixels that should be passed to mpfitfun ( ) for the profile fit(s ) .",
    "if the above conditions are met , _ fitrange ( ) is able to return bounds defined by the blue - side and red - side peaks in the continuum of the profile ( there - by avoiding transmission drop - off regions ) , but that on the blue side exclude the presence of an additional ( usually present in the 6302l spectra ) telluric feature not accounted for in the zeeman - model fit",
    ".    please see ",
    "[ code_fit ] for a figure presenting an example map of _ fitrange()-selected bounds , and  [ code_fit_i ] for a figure presenting an example comparison of 6302v versus 6302l spectral profiles . +",
    "* solis_vsm_zeemanfit_vfit_6302v : * this function returns the fit parameters to a stokes - v profile .",
    "it takes in the profile data ; sets up guesses for the fit , evaluating the minimum / maximum positions of the first and last halves of the v - spectra - profile for line - center guesses ; and calls to do the actual work of fitting multiple ( 4 ) line profiles to the stokes - v data .",
    "[ code_fit_v ] for further details . +",
    "* solis_vsm_zeemanfit_ifit_6302v : * this function returns the fit parameters to a stokes - i profile under the assumption that the two 6302  fe lines are split into triplets .",
    "it takes in the profile data ; sets up guesses for the fit , using _",
    "zeemanfit_floodmin ( ) to initialize guesses for the primary line - center positions , and guessing the @xmath4-@xmath0 component separations based on a continuum - intensity first - estimate of the magnetic - field strength (  [ code_tripletpos ] ) .",
    "it then calls _",
    "zeemanfit_multvoigtfit ( ) to do the actual work of fitting multiple ( 8) line profiles to the stokes - i data .",
    "[ code_fit_i ] for further details . +",
    "* solis_vsm_zeemanfit_handler_i_6302v : * this function is contained within the source - code file solis_vsm_zeemanfit_ifit_6302v.pro .",
    "it can be passed to _",
    "zeemanfit_multvoigtfit ( ) and used as a go - between function between mpfitfun ( ) and _ zeemanfit_multvoigt ( ) , allowing mpfitfun ( ) to vary the * separation * between the 6302.5  @xmath0- and @xmath4-components , even though the solis_vsm_zeemanfit_multvoigt ( ) function requires the line - center * positions * of each component .",
    "the @xmath18 and @xmath19 parameters are used ( rather than setting an inequality statement in the parinfo[x0].tied parameter ) to constrain the three 6302.5  triplet lines to remain in the wavelength order specified .",
    "it also allows the error in the magnetic - field - strength calculation to depend on only the error in the @xmath0-@xmath4 separation _ if _ the two separations are mirrored ( see  [ code_tripletpos ] ) , rather than on the error in both relevant line - center positions . +",
    "* solis_vsm_zeemanfit_handler_i_6302v_ampcap : * this function is contained within the source - code file solis_vsm_zeemanfit_ifit_6302v.pro",
    ". it can be passed to _",
    "zeemanfit_multvoigtfit ( ) and used as a go - between function between mpfitfun ( ) and _ zeemanfit_multvoigt ( ) .",
    "this handler function serves the same functionality as _ zeemanfit_handler_i_6302v ( ) with the addition of constraining the two 6302.5  @xmath0-component amplitudes to be less than or equal to the @xmath4-component amplitude ( so that mpfitfun ( ) varies an amplitude - scaling - parameter for each @xmath0-component within the range of 0.0 to 1.0 ) .",
    "+ * solis_vsm_zeemanfit_outfit_6302v : * this function returns the fit parameters to a stokes - i profile under the assumption that the two 6302  fe lines are * not * split into triplets .",
    "it takes in the data profile ; sets up guesses for the fit , using _",
    "zeemanfit_floodmin ( ) to pick a guess for each of the line - center positions ; then calls to do the actual work of fitting multiple ( 4 ) line profiles to the stokes - i data .",
    "it is used to find the separation of the two telluric o@xmath2 lines to calculate local dispersion ( if requested ) in the cases of quiet - sun spectra . see  [ code_fit_out ] for further details . +",
    "* solis_vsm_zeemanfit_multvoigt : * this function takes in a vector of independent values plus a parameter array of voigt - profile line parameters for multiple lines , and returns the calculated line profile .",
    "the function assumes that the last row of the parameter array contains coefficients for a polynomial background continuum .",
    "it takes in voigt - profile parameters for each row of the parameter - array in the order : amplitude , line - center position , gauss - width @xmath0 , lorentz - width @xmath21 .",
    "if either of the two width parameters are set to zero , it calculates the profile for that line using a pure gaussian or pure lorentzian profile , as appropriate .",
    "the preferred format for the parameter - array is an actual * array * , however , mpfitfun ( ) requires a * vector * of parameters , therefore _",
    "multvoigt ( ) * will * take a vector of parameters under the assumption that an additional final element has been added specifying the * order * of the background polynomial ( @xmath22 ) and that the number of elements allotted per line component corresponds to the maximum of 4-voigt - parameters vs. @xmath23-of - the - polynomial .    flagging the keyword components =",
    "components will return an additional array of line - profile values corresponding to each continuum+spectral - line component of the full profile .",
    "+ * solis_vsm_zeemanfit_multvoigtfit : * this function does all of the work of formatting passed - in multiple voigt - profile ",
    "parameter guesses , accounting for everything necessary to implement all of the bells and whistles and requirements of fitting them , and converting them into the format used by mpfitfun ( ) .    using the parinfo_add = parinfo_add keyword",
    ", it can take in a structure - array of pre - set constraints for running mpfitfun ( ) .",
    "however , * it * creates the appropriate parinfo - structure - vector to be passed to mpfitfun ( ) that is set up for running a multiple - voigt - profiles  plus  polynomial - background ",
    "fit to the data using the model in the _",
    "zeemanfit_multvoigt ( ) function .",
    "it also reformats the parameter-(guess)-array into a parameter vector so that mpfitfun ( ) can handle it properly , then converts it back into an array to return as the results to the user call .",
    "it calls _ zeemanfit_indexstring ( ) to convert any specific parameter indexes named in the parinfo_add[].tied values to their corresponding vector specifications .      in order to allow mpfitfun ( ) to run its fit on alternative parameters to those explicitly accepted by the _",
    "zeemanfit_multvoigt ( ) function , using the handler keyword , _",
    "zeemanfit_multvoigtfit ( ) can take in the name of a handler function to pass to mpfitfun ( ) in lieu of _",
    "zeemanfit_multvoigt ( ) * if * the handler function conforms to the following properties :    1 .",
    "conforms to the mpfitfun ( ) function requirements of returning a line - profile vector to a call statement that looks like : + ....           lineprofile = h_function(x_vector , param_vector )            .... + ( assuming that param_vector is formatted appropriate to mpfitfun ( ) but passing along to _",
    "zeemanfit_multvoigt ( ) the type of param_vector that * it * expects , i.e. , handling the passed parameters . ) 2 .   alternatively , returns an mpfitun()-suitable converted parinfo - structure - vector + ( e.g. , parinfo[@xmath24.value @xmath25 parinfo[@xmath18].value ) to a call statement if the /parinfo_convert flag is set : + ....        parinfo_vector = h_function(0 , parinfo_vector , /parinfo_convert )            .... 3 .",
    "alternatively , returns a reverse - converted parameter - vector ( e.g. , @xmath27 ) to a call statement if the /rconvert flag is set : + ....          param_vector = h_function(0 , param_vector , /rconvert )            ....    this function ( _ zeemanfit_multvoigtfit ( ) ) will also return perror , bestnorm , and dof as calculated by mpfitfun ( ) if those keywords are set in the call . +",
    "* solis_vsm_zeemanfit_indexstring : * this function is contained within the source - code file solis_vsm_zeemanfit_multvoigtfit.pro .",
    "it takes in a string variable potentially containing an array designation , e.g. , p[5,2] , + a vector of array dimensions , and returns a string containing the vector - translated designation , e.g. , p[17]. + this function is used by both solis_vsm_zeemanfit_ifit_6302v ( ) and solis_vsm_zeemanfit_outfit_6302v ( ) to locate a specified number of data - profile minimums within a specified data - range ( i.e. , to find the four primary minima corresponding to the two solar fe lines and two telluric o@xmath2 lines ) .",
    "this minimum finder works by evaluating the number of data _ ranges _ that fall below some specified floodline value .",
    "it begins with a floodline set to the minimum value of the input data , then moves upward in increments ( the number of which is optionally adjustable ) toward the data maximum until the number of minima pools matches the number of minima requested .",
    "it returns -1 if this criterion is not met . in order to avoid returning local minima due only to background noise",
    ", a minimum gap value may be set specifying the required pixel distance between minima pools .",
    "however , this function is still best used only with relatively smoothly varying data .",
    "note that a search - data - range must be specified in order to avoid returning data - boundary positions where the transmission may drop toward zero . + this function is used by solis_vsm_zeemanfit ( ) to take in and sort the input data files .",
    "it returns spec - cubes of the the stokes - i and stokes - v ( if available ) spectral data , as well as a continuum - intensity frame to write to the output file if an appropriate pfile has been specified .",
    "there are currently a number of different data - input configuration options .",
    "see  [ code_io ] for more details .",
    "+ this function is called by solis_vsm_zeemanfit ( ) to create an appropriate fits header for the fits output file .",
    "it consults solis_vsm_fitsinfo ( ) for frame specifications to describe the appropriate frames output in accordance with the spectrally - derived - quantities data - product file specifications . + * solis_vsm_zeemanfit_outname ( ) : * this function is called by solis_vsm_zeemanfit ( ) and uses the primary input filename and header to define an output filename that corresponds to the current solis file - naming conventions . +",
    "* solis_vsm_zeemanfit_plots : * this function is largely independent of the rest of the solis_vsm_zeemanfit code .",
    "it takes in a data structure like those returned by solis_vsm_zeemanfit_recipe ( ) ( fit - results for a single image pixel ) , retrieves the spectral - profile used to calculate the fit , calls solis_vsm_zeemanfit_multvoigt ( ) to evaluate the fit parameters , and returns an array containing : the wavelength axis , the data profile , the fit profile , the fit - continuum profile , and the fit - continuum+line profile for each of the fit lines .",
    "+          the code is optimized for using the distortion - corrected spec - cube file(s ) along with the pfile =- designated corresponding level-2 standard - output file ( e.g. , a level-2 quicklook file ) .",
    "the pfile is used to supply an image frame of the continuum intensity and , when present , is the preferred ( pipeline ) method for selecting which pixels should be zeemanfit . a level-1 pfile may be supplied when calculating the zeemanfit results of assembled scan - line files , but it will not be used to select pixels , only included as a helpful - reference frame with the output fits file . if the primary input is a stokes - i spec - cube file and /vfit is not flagged then one of either vfile or an appropriate pfile * must * be supplied in order to run image - pixel selection ( pfile is preferred for default pipeline operation ) . to run with /vfit , vfile is mandatory , while pfile remains preferred for pixel selection .    using the keywords xmin , xmax , ymin , ymax will tell the code to run its calculations on an area - scan - style region of the image . using xmin or ymin by themselves",
    "will tell the code to run on a single image row or image column only .",
    "alternatively , if using scan - line files as input , xmin and xmax function as described , but ymax is disabled , and ymin should be used to specify the row - designation ( in idl 0-indexed coordinates ) of the first input scan - line file .",
    "an output fits file is only written if the /writefile keyword is flagged . using the outprfx keyword ,",
    "the call can specify a directory into which the output fits files should be written ( and/or a prefix to add to the beginning of the output filename ) .",
    "the names for the output files and their headers are tailored to the standard - pipeline processing and naming scheme ; be careful to use the outsfx keyword if running multiple calculations ( resulting in hopefully multiple output files ) on the same data set .",
    "if the flag /vfit is set , then the output file will include frames for the stokes - v calculated ( longitudinal ) magnetic - field strength and corresponding 1-sigma errors . if the /dispercalc flag is set , then the output file will include frames for the calculated - per - image - pixel dispersion in  / pixel and the associated _ relative _ 1-sigma dispersion error ( in % ) .",
    "the code allows for two methods to select which image - pixels should be zeeman - fit to return calculated magnetic - field strengths and errors . the default selection method ( in solis_vsm_zeemanfit_darkpixels ( ) )",
    "uses the corresponding level-2-corrected continuum intensity image to select image pixels that are noticeably darker than the background quiet sun . the secondary method ( in solis_vsm_zeemanfit_stokesvpick ( ) ) examines the stokes - v spectral profile for evidence of strong magnetic fields .",
    "the appropriate pixel - selection method is called from and the results sorted within the main - level code solis_vsm_zeemanfit ( ) .",
    "using solis_vsm_zeemanfit_darkpixels ( ) to select image pixels that are dark in the continuum is the preferred , default selection method because it is both more contained to the most - active regions of interest than the solis_vsm_zeemanfit_stokesvpick ( ) selections and indiscriminate to local field orientation .",
    "solis_vsm_zeemanfit_darkpixels ( ) uses the level-2-corrected continuum - intensity image paired with the 6-term polynomial , limb - darkening - model fit to the intensity profile to select pixels that are substantially darker than those of the quiet surroundings , as demonstrated in figure  [ fig_limbfitfinder ] .              in the case",
    "when an observation is taken under somewhat cloudy conditions , the level-2 continuum - intensity image can not be perfectly normalized , leaving light or dark bands where scan lines were strongly affected by clouds . in this case , selecting pixels - to - fit purely by their darkness relative to the limb - darkening - fit profile will include a large number of quiet - sun pixels , producing cloud - streak artifacts in the final zeemanfit magnetogram .",
    "therefore , solis_vsm_zeemanfit_darkpixels ( ) also uses the level-2 cloud - transparency frame to screen out pixels associated with cloudy scanlines .",
    "pixels are de - selected if the corresponding cloud - transparency is less than 0.9 .",
    "while this threshold may seem high , one should note that :      \\b ) zeemanfit is decidedly sensitive to the initial guess for the local magnetic - field - strength ( as discussed in  [ code_tripletpos ] ) , which the default operation of the code estimates directly from the relative - pixel - darkness outputted by solis_vsm_zeemanfit_darkpixels ( ) .",
    "therefore , if the estimated relative - pixel - darkness is not trustworthy due to an overly - cloudy scan - line observation , the computed zeemanfit - stokes - i magnetic - field strength will be likewise inconsistent with the nominal calculation .    if the level-2 continuum intensity image is not available , either because it was not supplied or because the zeemanfit code is being applied to scan - line spectra that have not been positionally configured to match to level-2 data , then pixels are selected to be fit using solis_vsm_zeemanfit_stokesvpick ( ) . under this method ,",
    "image pixels are selected using two straight - forward criteria :    1 .   the peak minimum _ and _ maximum values of the stokes - v profile must be @xmath28 counts ( @xmath29 counts in the case of 6302l spectra ) , indicating that there is a substantial amount of polarized light at that pixel .",
    "the separation of the min / max peaks for either the 6301.5  or 6302.5  lines must be @xmath30 pixels ( indicating a reasonably high ( longitudinal ) magnetic - field strength ) .    while the stokes - v method provides a natural and efficient method for pixels - to - fit and line - center selection ,",
    "the stokes - v profile is not a uniformly reliable method to locate pixels of high magnetic - field strength .",
    "figure  [ fig_notpickedprofiles ]      presents stokes - i and -v profiles for pixels in an active region that were ( blue ) and were not ( red ) selected for zeeman - fitting using the stokes - v selection method . because this active region is near the solar limb , the magnetic - field is more likely to be transverse , presenting a weak stokes - v signal for many strong - magnetic - field pixels .",
    "further , even well - on - disk umbrae can have trouble with _ stokesvpick ( ) if they are very dark , thereby naturally limiting the number of counts for those spectra .",
    "this issue can be seen in the map in figure  [ fig_6302lstokesvpickmap ]            there are three separate line - fit cases considered by this code : zeeman - triplet - fit to the stokes - i spectra , zeeman - fit to the stokes - v spectra , and non - zeeman - fit to the stokes - i spectra .",
    "these fits are orchestrated by the functions solis_vsm_zeemanfit_ifit_6302v ( ) , solis_vsm_zeemanfit_vfit_6302v ( ) , and solis_vsm_zeemanfit_outfit_6302v ( ) , respectively .",
    "the default settings for these fit - scenarios were chosen during testing of the code to provide the most robust and efficient fit performance . those settings and",
    "the reasoning behind them are detailed in the sub - sections that follow .",
    "unless otherwise specified at the command line , the range of data - pixels used in each fit is determined on a per - image - pixel basis by a call to solis_vsm_zeemanfit_fitrange ( ) using that pixel s stokes - i profile . in an older version of the code ( prover2a = 1.1 ) ,",
    "the fit - range was hardcoded as [ 15:105 ] ( out of a total [ 0:127 ] spectral data pixels ) .",
    "that range was chosen to conform to currently tested 6302v data , but was later found to be inappropriate for 6302l data .",
    "now , as can be seen in figure  [ fig_6302lbluefitrange ] ,        the range of data pixels passed to mpfitfun ( ) does vary considerably across different regions .",
    "however , this variation was found to be beneficial for the 6302l processing to allow for the best overall stability of the fits .        :",
    "orange dashes ) for all of the 6302  fe - triplet lines except for the 1 gaussian ( @xmath31 : pink dashes ) fit to the 6302.5-@xmath4-component , and 2 lorentzians ( @xmath31 : blue dashes ) for the telluric o@xmath2 lines .",
    "the black dash - dot lines plot the fit components .",
    "the green dashes denote the range - bounds of the fit data ; note that this example fit was run while the code was in development , when the data range was hardcoded to [ 15:110 ] . ]                    the separation parameters between the @xmath4 and @xmath0-component line - center positions ( the @xmath32 parameters ) ( for the 6302.5  line ) are restricted to positive values only , defined such that this constraint maintains the wavelength ordering : @xmath33 .",
    "the amplitudes of the 6302.5  @xmath0-components are fit as some fraction , @xmath34 , each of the @xmath4-component amplitude , and each @xmath35-fit - value is constrained to the limits @xmath36 so that neither @xmath0-component amplitude will be fit larger than the @xmath4-component amplitude . this amplitude restriction is used when reasonable , and is lifted in any cases where the initial guess for the @xmath4-amplitude is less than either or both of the guessed @xmath0-amplitudes .",
    "the initial input for the continuum - polynomial coefficients comes from a straight - line fit to the highest points in each half of the input data - profile .",
    "the initial guesses for the line amplitudes are measured from this straight line down to the data - value at the guessed line - center positions .",
    "the initial - guesses for the line - center positions of the two telluric o@xmath2 lines and the two fe @xmath4-component lines are determined first by a call to solis_vsm_zeemanfit_floodmin ( ) , which locates profile data ranges for four data - minimum pools and returns the minimum - value pixel location and range - center location for each pool .",
    "the data - minimum positions are used for the two o@xmath2 lines , and the pool - center position is used for the 6301.5 @xmath4-component line . for the 6302.5 @xmath4-component position , the code first redefines the data - pool boundary to be at a level that is halfway between the local data - minimum value and the lowest of the two local - data - peak values between the fe - triplet set and the telluric o@xmath2 lines on either side .",
    "this level tends to be well centered around the lines composing this fe - triplet set , and it is the center of _ this _ pool that is used to guess the position of the 6302.5 @xmath4-component line .    in earlier versions of the code ,",
    "the data - minimum positions were used to guess the positions for all four of the above lines . however , this was changed when the code was modified to accommodate the processing of 6302l spectra , for which , as shown in figure  [ fig_evershedspectra ] ,    -component for the 6302l profile appears to be suppressed relative to that seen in the 6302v profile .",
    "the sunspot region sampled is the area most clearly effected by issues relating to the evershed effect ( see  [ code_tripletpos ] ) . ]      next , determining appropriate guesses for the four @xmath0-component line - center positions is much trickier , and our selection of the most appropriate method is the subject of  [ code_tripletpos ] . the default method in the pipeline is to use the level-2-corrected continuum - intensity value .",
    "this value is compared to the level-2 fit for the quiet - sun limb - darkened continuum profile to make an observational - studies - based estimate of the local magnetic - field - strength and therefore of the appropriate zeeman - triplet line - separation .",
    "( see section  [ code_calc ] for details on the appropriate line - separation  to  field - strength conversion equations . )",
    "the guesses for the gaussian - widths - values ( @xmath0 ) for the triplet lines are set at a fraction of the line - center separations .",
    "for all lines that use it , the guesses for the lorentzian - width - values ( @xmath21 ) are set to 1.0 pixel .",
    "basic results of using this model can be seen in figure  [ fig_imagestokesimap ] .",
    "the * background polynomial of order 2 * was chosen as being likely sufficient to account for the background continuum and unlikely to introduce ugly artifacts into the line fits .",
    "however , the time has not been taken to determine whether a lower - order background might be equally sufficient or even superior .",
    "all of the lines used to fit the stokes - i zeemanfit profiles are required to be * in absorption * because all of the features expected to appear in these spectra are absorption features .",
    "however , particularly at low continuum intensities , the blue half of the spectra are sometimes fairly bumpy , leading to occasional in - emission fits when positive line amplitudes were previously allowed ( prover2b = 1.1 ) .",
    "an early - development version of the code required that the positions of the two 6302.5 @xmath0-components be mirrored about the @xmath4-component ( that @xmath37 ) . requiring this mirroring allowed for a small reduction in parameter space that is physically reasonable given the zeeman - splitting mechanism and",
    "was found to produce less noisy results .",
    "however , as is discussed in detail in  [ code_tripletpos ] , this mirroring was discarded in order to avoid certain artifacts occurring near the solar limb .",
    "the constraint that says 6302.5  triplets that show the capacity for it should be fit * requiring the @xmath4-component amplitude to be larger * than either of the @xmath0-component amplitudes is a slippery one .",
    "if the observations contained no scattered light , the amplitude of the @xmath4-component would depend on the amount of both unpolarized and linearly polarized light , and could be small .",
    "however , testing suggested that including this constraint helps to produce less noisy @xmath38-strength maps , and apparently more robust fit computations .",
    "furthermore , a significant amount of scattered light * is * expected to be present in the data ( particularly in the dark umbral centers where the field alignment is most liable to present longitudinal ) .",
    "please compare the results from figure  [ fig_imagestokesimap ] with those in figure  [ fig_imagenotampcapped ] ,          finally , the single most important constraint for acquiring usable stokes - i @xmath38-calculations is that the 6302.5  * @xmath4-component line be fit as a gaussian only * , not as a voigt .",
    "figure  [ fig_imagestokesi6gauss ]    -component ) : the calculated magnetic - field strength ( a ) , the rms of the fit - line to the spectral - data profile ( b ) , and the 1-sigma error calculated due to the uncertainty in the fit line separations ( c ) . ]    presents the results of running the stokes - i fit using all voigts for the solar triplet lines . while the rms of the fit itself can appear relatively low and lovely with this method ( panel b ) , the uncertainty on the @xmath0-component line positions is actually very high , resulting in a large uncertainty in the @xmath38-calculation ( panel c ) .",
    "most notably , though , the structure of the magnetic - field strength across the dark umbral regions is implausible , with reported umbral field strengths often dipping across sun - spot centers , rather than peaking ( panel a ) .",
    "compare that result to that of figure  [ fig_imagestokesimap ] , where the @xmath4-component - as - a - gaussian constraint has been instituted .",
    "the results toward the penumbral regions are noisier than might be preferred ( but this method of fitting to stokes - i is chosen for being most robust in the strong - field cases ) , but the field - strength ",
    "profile morphologies agree with the morphology suggested by the continuum image ( figure  [ fig_iactive ] ) ,                              the initial guesses for the positions and amplitudes of the four fit lines are taken from the min / max positions and values in each half of the data profile , and the guess for the background constant is entered as 0 . as with the stokes - i zeeman - fit , the guesses for the gaussian widths ( @xmath0 ) are set to a fraction of the separations between each of the min / max peak pairs .",
    "though gaussians do not fit the stokes - v line profiles as well as voigts do , the choice was made to fit using only gaussians for the sake of both speed and robustness .",
    "running the code using voigts tended , for several hundred pixels across the map , to max out the number of iterations run by mpfitfun ( ) ( using either the default maxiter=200 , or maxiter=400 ) . switching to gaussians not only reduces the number of fit parameters , it also drastically cuts down the number of pixels that run maximum iterations ( to only a handful across the whole map , default maxiter ) .",
    "also , running the fit with voigts produces noticeably larger uncertainty in the line - center positions around some of the penumbral edges , where the stokes - v counts are not as strong .",
    "see figure  [ fig_vfit_gaussvvoigt ] for a comparison of map results produced by stokes - v fits using voigts versus gaussians .",
    "one note : running the stokes - v fit with gaussians does tend to produce roughly 4% larger stokes - v @xmath38-values than does running the fit with voigts , whatever that ultimately means .        :",
    "orange dashes ) for the 6302  fe lines and 2 lorentzians ( @xmath31 : blue dashes ) for the telluric o@xmath2 lines .",
    "the black dash - dot lines plot the fit components .",
    "the green dashes denote the range - bounds of the fit data . ]                as during the zeeman stokes - i fit (  [ code_fit_i ] ) , the initial input for the polynomial coefficients comes from a straight - line fit to the two highest points in each half of the data - profile ; and the guessed line amplitudes are measured from this straight line down to the data - value at the guessed line - center positions .          as with the stokes",
    "- i zeeman - fit , the * polynomial order 2 * was chosen as being likely sufficient to account for the background continuum and unlikely to introduce ugly artifacts into the line fits .",
    "however , the time has not been taken to determine whether a lower - order background might be equally sufficient or even superior .      *",
    "voigts * were chosen to fit the * solar fe lines * because they could be .",
    "for the vast majority of cases , gaussians would probably do a perfectly acceptable job , considering that the positions of the telluric lines are the only results of interest when running this fit .",
    "however , it is possible that the results would be less robust if this fit code , using gaussians for the solar lines , were run on an image pixel that * ought * to be zeeman - triplet - fit but was nt due to any issues with the pixel - selection criteria ( see  [ code_sorting ] ) .",
    "this non - zeeman fit is used only to calculate the dispersion for those pixels not fit as high - field - strength zeeman - triplet profiles ( and only if the /dispercalc keyword is flagged ) . for further details concerning the dispersion choices , calculations , and results ,",
    "see  [ code_disper ] .",
    "the separation of the triplet - model @xmath0-component lines is the parameter of greatest importance to the zeemanfit results ( see  [ code_calc ] ) and must be handled with a great deal of care in order to ensure that both the code and the results remain :      this is fairly straight - forward when running a fit on the stokes - v profile .",
    "as long as the polarized signal is strong enough to be both well above the noise and minimally affected by more complex structure , the @xmath0-component line - center positions should be resolved to match fairly closely with the four min / max profile peaks in each half of the stokes - v profile .",
    "however , in the stokes - i profile , the @xmath0-component line - centers do not have profile minimums with which to directly correspond , and , so far , four separate techniques have been tested for providing a guess as to the stokes - i @xmath0-component positions to solis_vsm_zeemanfit_multvoigtfit ( ) and mpfitfun ( ) .",
    "these techniques and our concluding choices are discussed below , along with the pros and cons of requiring the fit 6302.5 @xmath0-component positions to be mirrored about the @xmath4-component .",
    "ultimately , we have chosen a default operation that uses the relative continuum intensity to make a guess of the magnetic - field strength and therefore of the @xmath0-component line separation , and to _ not _ require that the fit @xmath0-component positions be mirrored about the fit @xmath4-component position .    because it is both readily available and affected directly by properties of the local magnetic field , the first technique tried for guessing the stokes -",
    "i @xmath0-component positions was to use the same input positions as for the stokes - v fit , the four min / max peaks of each half of the v - profile , as depicted in figure  [ fig_vminmax ] .",
    "non - standard operation of the code using /vguess does still allow for this use of the stokes - v profiles in guessing the stokes - i triplet - lines center positions , and is the necessary mode of operation if the code is computing fits for level-0.5 spectra that do not have corresponding level-2-corrected continuum - intensity values readily available with which to guess the separation . however , there are two primary drawbacks to using this /vguess method .    1 .   even in regions of strong total magnetic field ,",
    "the stokes - v signal is not always strong enough for this guess method to be employed . particularly near the solar limb",
    ", strongly transverse fields may mean a weak or non - existent polarized signal , disallowing results to be computed for many pixels across , particularly , the dark umbral regions of a sunspot .",
    "2 .   even where the polarized signal is perfectly clear and strong",
    ", it does not directly correlate to the _ total _ magnetic - field strength being sought in a fit to the stokes - i profile .",
    "the stokes - v peak separation depends on one component of the magnetic - field , and using it to guess the stokes - i @xmath0-component separation leads to random inconsistencies in how the stokes - i - fit calculations proceed . as outlined below , the stokes - i results are sensitive to the initially guessed separation .",
    "next , a simplistic method is to merely make a fixed - width guess for the @xmath0-component line separation applied to every stokes - i profile where necessary .",
    "this was initially done to try to fill in missing regions of stokes - i results left blank by the stokes - v - guess method , and an example of this can be seen in figure  [ fig_darkspotdiscontinuity ] .        if we had no other recourse for guessing the @xmath0-component line positions , guessing this 4-pixel separation for every computation ( and _ not _ using any other guess method for some pixels ) would be a viable method .",
    "it meets the consistency requirement easily , and at this separation the code running on the vsm-6302-vector data is reasonably robust ( though note that this has only been tested while 6302.5 @xmath0-component mirroring was required . )",
    "it has problems with the outer penumbral regions , but these regions are of significantly less interest than the umbral centers .",
    "the results of the zeemanfit - computations are quite sensitive to the initially guessed separation ( to the initial guess of the magnetic - field strength ) .",
    "if the initial guess is high , the outputted result tends to be high , and if the initial guess is substantially higher than physical reality , the computation becomes unstable .",
    "we could keep our guess everywhere very modest , but then results computed for umbral centers are often well below their physical values .",
    "we need a guess method that is not constant , but is directly and consistently tied to the observations .",
    "therefore , two other guess methods were tested .",
    "one used an algorithm called solis_vsm_zeemanfit_fwhm ( ) to input the profile - minimum location returned from solis_vsm_zeemanfit_floodmin ( ) corresponding to the guessed @xmath4-component position and return a point to either side corresponding to the half - maximum ( minimum really since these are absorption features ) positions of that region of the spectral profile .",
    "the other method takes in the background - relative continuum intensity value for that image pixel and uses that value to estimate the local magnetic - field strength and therefore the @xmath0-@xmath4 line - center separation for the stokes - i profile , following the equation suggested by jack harvey : @xmath40 where @xmath8 is the limb - darkened , background intensity computed in equation  [ eq_limbdark ] .",
    "( see  [ code_calc ] for the equations converting between line - separation and magnetic - field strength .",
    "the dispersion used in making this estimate is always the dispersion - value assigned to the camera ( rockwell or sarnoff ) on which the data were taken . )",
    "the _ fwhm ( ) method provides a very consistent treatment of the data and requires nothing outside of the stokes - i profile itself to proceed .",
    "unfortunately , it is not well suited to providing @xmath0-position guesses in the case that the @xmath0-component - absorption is on the same order or stronger than the @xmath4-component absorption , and it is subject to provide over - estimates in the cases when the line - set is strongly influenced by broadening mechanisms outside the zeeman effect .",
    "one such case appears to be the effect of spatial averaging of fine structure from the evershed effect , noticed primarily in the computed results for strong sunspots near the solar limb ( though exactly which sunspots and how close to the limb appears to be fairly variable , and possibly dependent on data quality ) .",
    "false - high - field artifacts probably related to this effect ( they always appear on the sun - center - ward side of a sunspot ) seem to be linked primarily to an asymmetry that appears in the observed positioning of the @xmath0-component line - centers relative to the @xmath4-component center .",
    "therefore , the effect is exacerbated by requiring that the profile - fit mirror the positions of the @xmath0-components about the @xmath4-component line center .",
    "( remember , the @xmath0-component _ amplitudes _ remain unconstrained relative to each other , and therefore the fit might return results where one component amplitude is quite small compared to the other . )",
    "-component line - center positions .",
    "bottom panels guess the separation based on the level-2 corrected image - pixel continuum intensity ( shown in the center panel ) .",
    "left panels require 6302.5 @xmath0-positions be mirrored about the @xmath4-center position .",
    "right panels were run with this mirroring requirement turned off . *",
    "bottom set : * the corresponding computed 1-sigma errors . ]    for four fit - computation scenarios , i.e. , varying both the guess - method used to estimate the @xmath0-component line - center positions and whether or not the fit requires the 6302.5 @xmath0-positions to be mirrored about the @xmath4-center position . from these plots ( mirroring : left versus no - mirroring : right ) , the advantages and disadvantages of mirroring become clear . requiring mirrored positions",
    "removes one ( of many ) parameters from the list of those that need to be fit , and the results tend to be more stable .",
    "further , for observations primarily affected by the the zeeman effect , such a condition is reasonably physical .",
    "_ however _ , the artifact related to the evershed effect is clearly present under the mirroring condition in those sunspots so influenced , and furthermore , the _ error _ reported in the regions of this artifact is quite low , leading one to suspect that under these conditions the mirroring requirement over - constrains the fit , leading to a narrow best - fit space that is never - the - less unrealistic .    however , the higher degree of instability that results when the mirroring condition is turned off is a non - negligible problem , as can be seen by the number of missing pixel results in the pipeline - selected default fit in the lower - righthand panels .",
    "this fit is more stable than the half - maximum - guessing counterpart ( top - right ) , but these pixels have still been clipped out of the results due to very high 1-sigma error ( @xmath41 1000 gauss ) and/or excessively high computed  field - strength values ( @xmath41 5000 gauss ) .",
    "in fact , the intensity estimate for the magnetic - field strength ( equation  [ eq_iguess ] ) usually underestimates the total strength , as can be seen in the figure  [ fig_iscatter ]        scatter plot of computed strength versus guessed strength .",
    "increasing the estimate of the scattered - light contribution in the observations would make a better match between input - guess and output results .",
    "however , running zeemanfit on several days of observations with a higher guess estimate resulted in a higher degree of instability , which , in the case of one sunspot , severely reduced the number of pixel - results reported in the umbral center .",
    "therefore , the default fit parameters we have chosen to operate under represent a compromise necessitated by using a parameter - intensive , brute - force technique on of - order-90-pixels worth of spectral data per profile .",
    "the wavelength - per - pixel dispersion , used in the calculation of the magnetic - field - strength , can come from either of two sources , detailed below .",
    "it can be specified by the code according to the camera the data was taken on (  [ code_disper_camera ] ) , or it can be computed separately at each pixel location via the separation of the two telluric o@xmath2 lines (  [ code_disper_calc ] ) .",
    "default operation of the code assumes that the camera dispersion is known and is supplied by the code according to the camera used to gather the ingested data .              for an error value on the sarnoff data , the code supplies an error estimate of 1.3% that we made by inspection of the stokes - i - calculated dispersion ( see   [ code_disper_calc ] ) returned for a number of scan - lines of 6302v data taken on aug .  2 , 2010 .",
    "in figure  [ fig_comparedispercalc ] ,      compare the dispersion calculated for that day to the dispersion calculated for several scan - lines of jan .  13 , 2013 data .",
    "the august 2010 data reports a noticeably larger spread in the calculated dispersion , and we ve chosen 1.3% relative error as a likely upper - limit .",
    "note that the dispersion value is probably better well known than this , but this is the error - value the code is using right now .",
    "no rockwell data has yet been processed by this code , therefore the estimated error on the dispersion for rockwell data is currently set to 0.74% .",
    "this is taken purely from lorraine s observation that some of the reprocessing code uses a hard - wired , `` default '' dispersion - value of 0.0271  / pixel , while the database , used mostly by older code , lists 0.0273  / pixel for the rockwell camera .",
    "when running the code , one may choose to set the keyword flag /dispercalc .",
    "if so , the magnetic field - strength is calculated using the dispersion value calculated from the zeeman - fit to the stokes - i profile ( solis_vsm_zeemanfit_ifit_6302v ( ) ) , * plus * all of the non - zeeman - selected pixels also have a ( simplified ) fit run on their stokes - i profiles ( solis_vsm_zeemanfit_outfit_6302v ( ) ) so that the dispersion values and errors may be returned for every solar - disk  image pixel .",
    "one * important note * , then , is that the calculated dispersion values presented across a given scan line or image are coming ( randomly , as far as the distribution of active regions is random ) from calculations using two different stokes - i fitting schemes ( see figure  [ fig_dispermap ] ) . the dispersion is assumed to be constant across the spectral frame .",
    "it is calculated using the positions of the two in - frame telluric o@xmath2 lines as : @xmath42 where @xmath43 is the dispersion in  / pixel , @xmath44 and @xmath45 are the line - center positions for the telluric lines returned from the fit to the stokes - i profile , and for this data range @xmath46 and @xmath47 according to the pierce - breckenridge atlas ( ftp://nsokp.nso.edu/pub/atlas/linelist/ ) .",
    "the 1-sigma relative error on the above - calculated dispersion is calculated as : @xmath48 where @xmath49 , @xmath50 , and @xmath51 are the 1-sigma uncertainties on the dispersion , and the o@xmath52 and o@xmath53 line - center positions , respectively .",
    "see  [ code_calc ] for comments regarding the acquisition of the @xmath54-values from mpfitfun ( ) , though this is not as convoluted for the telluric o@xmath2 line positions as it is for the zeeman - fit stokes - i 6302.5 - triplet positions .",
    "an example of the dispersion calculated across a scan line is presented in figure  [ fig_1disperror ] .",
    "one important note is that the o@xmath2 lines are not well resolved by this data .",
    "therefore , the dispersion value calculated according to their fit separations is likely noisier than any real dispersion variation .      once the line profiles have been fit , and the pixel dispersion either chosen or calculated , the magnetic - field - strength can be calculated ( for regular - zeeman - split lines ) from the formula : @xmath55 where , @xmath38 is the magnetic - field strength ( in gauss ) , @xmath56 is the lande factor appropriate to the particular zeeman - triplet , @xmath57 is the center wavelength of the principal line ( in cm ) , and @xmath58 is the center wavelength of one of the zeeman - triplet @xmath0-component lines ( in cm ) .    because we assume a constant dispersion value across the full ( 128-pixel ) spectral image , and because we may or may not be using a fit - symmetry about the @xmath57 component , the implementation in the code becomes : @xmath59 where @xmath43 is the dispersion in  / pixel , and @xmath60 and @xmath61 are the line - center pixel - positions of the right and left zeeman - fit@xmath0-line components , respectively . also , for the 6302.5  fe line , the lande factor @xmath62 ( and @xmath63 ) .",
    "if the above equation is applied to the @xmath0-component - line positions derived from the fit to the stokes - i profile , then the computed @xmath38-value should represent the * total * magnetic - field strength .",
    "however , if the equation is applied to the line - peak positions derived from the fit to the stokes - v profile , then @xmath38 should be a calculation of the * longitudinal * magnetic - field - strength only .      1 .",
    "the 6301.5  line is zeeman - anomalous ; physically , it s not as simple as a triplet .",
    "2 .   the fitting code does not impose any constraints that would make the 6301.5  `` triplet '' lines behave at all like a zeeman triplet .",
    "they are allowed to vary nearly entirely unconstrained to fit the data profile in whatever way seems best . not infrequently ,",
    "they wind up in a different wavelength order than the one originally specified , i.e. , the @xmath4-component can wind up situated outside rather than between the two @xmath0-components .",
    "presents an example of calculated stokes - i and -v @xmath38-values and errors for one pixel row across an active region . note that uncertainty in the stokes - i result increases toward the edges of the sunspots , in keeping with this zeeman - fit method , which is aimed at fitting results in the high - magnetic - field - strength regions where the splitting is nice and broad .",
    "the 1-sigma error calculated for the reported @xmath38-values takes into account the uncertainty on both the dispersion and the fit line - center positions . in general , it is given by : @xmath65 where @xmath66 , @xmath49 , @xmath67 , and @xmath68 are the 1-sigma error estimates on the magnetic - field strength , dispersion , and right- and left-@xmath0-component separations from @xmath69 , respectively ; in units of gauss ,  / pixel , and pixels , respectively .",
    "@xmath70 is the coefficient of constants given in equation  [ eq_bcalc ] : @xmath71 .",
    "the above equation is used to calculate error for the stokes - v - calculated magnetic - field strengths , as well as for the stokes - i strengths in the default processing where the @xmath31-mirroring has been turned off so that all of the line - center positions are allowed to freely vary .",
    "however , optional operation of the code ( using the smirror keyword ) _ does _ allow the stokes - i 6302.5 positions to be mirrored ( the separations from @xmath69 and the two @xmath72 s are forced to be equivalent ) .",
    "therefore , the equation of the error in that instance becomes : @xmath73    because the data - profile values passed into mpfitfun ( ) do not have particular error values associated with each data - point , mpfitfun ( ) does not return a reliable 1-sigma estimate of the error on the fit parameters .",
    "however , according to the documentation in mpfitfun ( ) , _ \" if _ you can assume that the true reduced chi - squared value is unity [ ... ]  then the estimated parameter uncertainties can be computed by scaling perror by the measured chi - squared value \" :        note also that , while _ zeemanfit_multgaussfit ( ) does return a parameter array containing the @xmath60 and @xmath61 parameters , for the zeeman - fit to the stokes - i profiles , mpfitfun ( ) itself varies @xmath75 , and @xmath76 in the specific cases of the two 6302.5  @xmath0-component line - centers . therefore , the 1-sigma values passed back for those two parameters correspond to these later quantities in the stokes - i calculations .",
    "comparison of field strengths derived by this code with observations from bill livingston ( 1.5 micron near - infrared ) , hinode ( high spatial resolution in fe i 6302.5a ) , and hmi / sdo ( fe i 6173.3   ) indicate a good agreement with this method . a detailed description of this comparison will be published in a separate paper .",
    "* rockwell processing : * the zeemanfit code has not been tested on any rockwell - era data",
    ". there are at least a couple of issues to consider / fix if at some point the code will be applied to rockwell data or to any future data acquired on a different camera .",
    "* spectral - data pixel values : * the _ fitrange ( ) algorithm uses a number of hard - coded values to account for things like the size of the input - spectrum data vector and very roughly where certain features are expected to lie on that data profile . for processing using a different camera , those pixel values may need to be tailored to the camera or some other method selected for specifying those ranges .",
    "also , in solis_vsm_zeemanfit_ifit_6302v.pro , pixel - index 70 is used as a midway mark for a backup call to _ floodmin ( ) ; again , this may need to be modified or per - camera tailored .",
    "* dispersion : * the camera - set dispersion fixed into the code for data taken with the rockwell camera is 0.0271 / pixel , the value currently being used in the reprocessing code .",
    "however , lorraine callahan has noted that the value in the database is 0.0273 / pixel .",
    "therefore , fairly arbitrarily , the relative - error on this dispersion value that we have coded in is this 0.74% difference .",
    "however , we have not had a chance to run this code in dispersion - calculation mode ( or any other ) on any rockwell data ( if there are any rockwell spectra around to try it on ) , so these choices remain pretty random at the moment and should be verified before any zeemanfit reprocessing of rockwell data is implemented .        + for a couple of examples",
    ". 2 .   solis_vsm_zeemanfit_outfit_6302v ( )",
    "uses a fairly random threshold value to * decide if the image - pixel in question is off - limb * and therefore not to fit the profile for a dispersion calculation ( when running /dispercalc ) .",
    "since the standard is now to supply the corresponding level-2 file for reference , the limb - darkened fit value for the solar radius could be supplied as a better measure .",
    "3 .   solis_vsm_zeemanfit_multvoigt ( )",
    "computes a * lorentzian - only or gaussian - only profile if the corresponding opposite width - parameter ( @xmath0 or @xmath21 ) * is set to zero .",
    "however , the limits suggest that , for one of these , the appropriate constraint is in approaching infinity ( 1/infinity = 0 ) . can this be revised into a more useful / appropriate constraint or parameter definition in order to keep the fit from jumping between profile definitions if mpfitfun ( ) decides to sample @xmath0 or @xmath77 ? 4 .",
    "the code still * does not run very fast*. should maxiter in mpfitfun ( ) be set to something smaller than the default 200 ? should the code be parallelized , taking advantage of the fact that all of the heavy lifting is done on a per - output - pixel  in - isolation basis ? 5 .   _ stokesvpick ( ) is not used in general , but could still be necessary if someone wanted to try the zeemanfit code out on some area scans .",
    "however , * _ stokesvpick ( ) relies on hard - coded counts thresholds * ( different for 6302v versus 6302l spectra ) as one of the criteria for selecting high - field - strength stokes - v spectra .",
    "it would probably be advantageous to replace these hard - coded thresholds with some comparison ratio between the peak stokes - v counts versus the maximum stokes - i `` continuum '' counts for a given pixel - set of spectra ."
  ],
  "abstract_text": [
    "<S> the purpose of the zeemanfit code is to provide a straight - forward , easily checked measure of the total magnetic - field strength in the high - strength umbral regions of the solar disk . in the highest - strength regions , the zeeman splitting of the 6302 </S>",
    "<S> fe line becomes wide enough for the triplet nature of the line to be visible by eye in non - polarized light . </S>",
    "<S> therefore , a three - line fit to the spectra should , in principle , provide a fairly robust measure of the total magnetic - field strength .    </S>",
    "<S> the code uses the level-1.5 spec - cube data of the solis - vsm 6302-vector observations ( specifically the stokes - i and stokes - v components ) to fit the line profiles at each appropriate pixel and calculate the magnetic - field - strength from the line - center separation of the two fit 6302.5 @xmath0-components . </S>",
    "<S> the 6301.5  fe line is also present and fit in the vsm 6302-vector data , but it is an anomalous - zeeman line with a weaker response to magnetic fields . </S>",
    "<S> therefore , no magnetic - field measure is derived from this portion of the spectral fit .        ' '' ''    ' '' ''    technical report no . </S>",
    "<S> * nso / nisp-2013 - 02 * + @xmath1    [ [ data ] ]    the base data ingested by the zeemanfit code consists of the cleaned , level-0.5 or level 1.5 vsm 6302v ( and 6302l for prover2 = 1.2 ) spectral data ( stokes - i and stokes - v components only ) , such as that shown in figure  [ fig_05data ] .        while the code will function using only level-0.5 scanline data , optimally it takes in level-1.5 distortion - corrected spec - cube data , along with level-2-processed continuum data , which is used to aid in sorting pixels to be zeeman - fit (  [ code_sorting ] ) and to provide initial guesses for the stokes - i line - center - positions to the mpfitfun ( ) fitting routine (  [ code_tripletpos ] ) . by using level-1.5/2-processed data , </S>",
    "<S> the code is able to produce the most accurate results for a more complete set of active - region pixels across the solar disk and to output those results in the clearest format , including a frame of the continuum image as a reference .    in either case , </S>",
    "<S> the bulk processing of the code is on a per - output - pixel basis , seeing only a single set of stokes - i ( and stokes - v if that fit is so desired ) profiles , such as those depicted in figure  [ fig_profiledata ] .        </S>",
    "<S> the vsm-6302-vector spectra include two zeeman - sensitive solar fe lines at 6301.5 and 6302.5 , as well as two telluric o@xmath2 lines at 6302.0 and 6302.8 . while the 6301.5 - fe - line is an anomalous - zeeman line , the 6302.5 - line is not , and the triplet nature of the line can be perceived in stokes - i in high - field - strength penumbral and umbral regions . in regions with a strong longitudinal field , </S>",
    "<S> the stokes - v profile shows clear signals corresponding to the @xmath0-components of the triplet lines .    </S>",
    "<S> the calculation of the magnetic - field strength using the zeemanfit code is as simple as it can be (  [ code_calc ] ) , relying on only the line - center separation of the two 6302.5-@xmath0-component lines fit to the profile . </S>",
    "<S> figure  [ fig_tiledresults ]    , 2013 . ]    depicts the resultant output for one zoomed - in region of one data image , while figure  [ fig_continuumdata ]     and the january 11@xmath3 , 2013 data . ]    </S>",
    "<S> shows a continuum - reference map of that region . </S>",
    "<S> the computed output in this example includes :    1 .   the total magnetic - field strength calculated from the fit to the stokes - i profile . </S>",
    "<S> 2 .   </S>",
    "<S> the stokes - i 1-@xmath0 error propagated from the fit - uncertainty in the line - center positions . </S>",
    "<S> 3 .   </S>",
    "<S> the longitudinal magnetic - field strength calculated from the fit to the stokes - v profile . </S>",
    "<S> 4 .   the stokes - v 1-@xmath0 error propagated from the fit - uncertainty in the line - center positions .    note that not all of the pixels fit in stokes - i have corresponding measurements from stokes - v . </S>",
    "<S> this is primarily because the stokes - v signal may become too weak to fit in the presence of a strongly transverse magnetic field . </S>",
    "<S> the results of fitting the stokes - v profiles are not standard - pipleline data products .    for the standard products , one feature of the zeemanfit stokes </S>",
    "<S> - i calculation is that it is designed around the greatest ease of fitting the highest - field - strength pixels . </S>",
    "<S> therefore , the uncertainties in the stokes - i measurements tend to be higher in the lower - strength outer regions of the penumbrae .    </S>",
    "<S> also outside of standard pipeline data production , if the flag /dispercalc is set when the zeemanfit routine is called , then the dispersion is calculated on a per - output - pixel basis for _ all _ output pixels using the fit positions of the two telluric o@xmath2 lines ( see  [ code_disper ] ) , and two more frames are added to the output fits file , one containing the calculated dispersion in  / pixel , the other containing the relative 1-@xmath0 error in % on the dispersion measurement propagated from the uncertainty in the fit line - center positions of the telluric lines . </S>",
    "<S> this option does add significantly to the processing time , as all on - disk pixel - spectra must be fit in order to report the measured dispersion across the entire image .    </S>",
    "<S> [ [ versions ] ]    the earliest zeemanfit results output by the solis pipeline ( 6302v results only ) have header - keyword values prover2a = 1.1 and prover2b = 1.1. the following adjustments affecting the 6302v - zeemanfit processing have since been implemented for :    1 .   the use of the * solis_vsm_zeemanfit_fitrange ( ) * function has replaced the previously hard - coded values of fitrange = [ 15,105 ] . </S>",
    "<S> these boundaries ( inclusive ) define the range of spectral - data pixels that are passed to mpfitfun ( ) to fit the 6302 input profiles . </S>",
    "<S> see  [ code_layout ] for further information about solis_vsm_zeemanfit_fitrange ( ) . </S>",
    "<S> 2 .   * </S>",
    "<S> the method used to guess the fe @xmath4-component line - center positions * for the stokes - i zeeman - fit has been modified to better account for possible variations in particularly the symmetry / asymmetry of the zeeman - triplet profiles . see  [ code_fit_i ] for details . </S>",
    "<S> 3 .   </S>",
    "<S> limits have been imposed such that now _ </S>",
    "<S> none _ of the line profiles used in the stokes - i zeeman - fit may be defined in emission ; * now all stokes - i zeemanfit line - amplitudes must be less than zero*. previously , the three lines used to fit the 6301.5 zeeman - broadened line - set had no constraints on any of their line parameters . </S>",
    "<S> see  </S>",
    "<S> [ code_fit_i ] for details of the stokes - i zeemanfit setup .    </S>",
    "<S> these changes were implemented into the code in the order they have been listed here . for changes 1 and 2 , </S>",
    "<S> figures  [ fig_comparenowfitrange ] and figure  [ fig_comparenowcenterpools ]        -component positions . </S>",
    "<S> ( both runs compared here had _ </S>",
    "<S> fitrange ( ) already implemented . ) </S>",
    "<S> these plots are for runs using the same observation as in figure  [ fig_comparenowfitrange ] , and the top and bottom rows of plots follow the same conventions as in figure  [ fig_comparenowfitrange ] . ]    provide a comparison of before and after zeemanfit results using a 6302v observation taken on august 2 , 2011 . </S>",
    "<S> note that for the bottom row of plots in figure  [ fig_comparenowcenterpools ] ( the change to using centerpools @xmath4-position guessing ) , each sunspot group shows a small cluster of points ( above the line for the near - limb spot and below the line for the others ) with a spread in results along one axis and positioned at @xmath5 gauss on the other . for these , </S>",
    "<S> the below - line clusters likely represent improved fit stability for those points , whereas the above - line cluster likely represents some cases of increased instability . </S>",
    "<S> zeemanfit is , unfortunately , fairly sensitive to the input initial conditions , as detailed throughout  [ code ] . </S>"
  ]
}
{
  "article_text": [
    "_ all the functions considered in this article are real valued functions of the real variable and all the polynomials have real coefficients . _ after an initial _ range reduction _",
    "step  @xcite , the problem of evaluating a function @xmath3 in a large domain on a computer system is reduced to the problem of evaluating a possibly different function @xmath4 in a small domain , that is generally of the form @xmath5 $ ] , where @xmath6 is a small nonnegative real .",
    "polynomial approximations are among the most frequently chosen ways of performing this last approximation",
    ".    two kinds of polynomial approximations are used : the approximations that minimize the `` average error , '' called _ least squares approximations _ , and the approximations that minimize the worst - case error , called _ least maximum approximations _ , or _",
    "minimax approximations_. in both cases , we want to minimize a distance @xmath7 , where @xmath8 is a polynomial of a given degree .",
    "for least squares approximations , that distance is :    @xmath9 } = \\left(\\int_{0}^{a}w(x)\\left(f(x)-p(x)\\right)^2 dx\\right)^{1/2},\\ ] ]    where @xmath10 is a continuous _ weight function _ , that can be used to select parts of @xmath5 $ ] where we want the approximation to be more accurate . for minimax approximations ,",
    "the distance is :    @xmath11 } = \\max_{0 \\leq x \\leq a } |p(x)-f(x)|.\\ ] ]    the least squares approximations are computed by a projection method using orthogonal polynomials .",
    "minimax approximations are computed using an algorithm due to remez  @xcite .",
    "see  @xcite for recent presentations of elementary function algorithms .    in this paper , we are concerned with minimax approximations .",
    "our approximations will be used in finite - precision arithmetic .",
    "hence , the computed polynomial coefficients are usually rounded : the coefficient @xmath12 of the minimax approximation    @xmath13    is rounded to , say , the nearest multiple of @xmath14 . by doing that",
    ", we obtain a slightly different polynomial approximation @xmath15 . but",
    "_ we have no guarantee that @xmath15 is the best minimax approximation to @xmath4 among the polynomials whose degree @xmath0 coefficient is a multiple of @xmath14 . _ the aim of this paper is to give a way of finding this `` best truncated approximation '' .",
    "we have two goals in mind :    * rather low precision ( say , around @xmath16 bits ) , hardware - oriented , for specific - purpose implementations . in such cases , to minimize multiplier sizes ( which increases speed and saves silicon area ) , the values of @xmath1 , for @xmath17 , should be very small .",
    "the degrees of the polynomial approximations are low .",
    "typical recent examples are given in  @xcite .",
    "roughly speaking , what matters here is to reduce the cost ( in terms of delay and area ) without making the accuracy unacceptable ; * single - precision or double - precision , software - oriented , general - purpose implementations for implementation on current microprocessors .",
    "using table - driven methods , such as the ones suggested by tang  @xcite , the degree of the polynomial approximations can be made rather low .",
    "roughly speaking , what matters in that case is to get very high accuracy , without making the cost ( in terms of delay and memory ) unacceptable .",
    "the outline of the paper is the following .",
    "we give an account of chebyshev polynomials and some of their properties in section [ seccheb ] .",
    "then , in section [ secget ] , we provide a general method that finds the `` best truncated approximation '' of a function @xmath4 over a compact interval @xmath5 $ ] .",
    "we finish with two examples .",
    "our method is implemented in maple programs that can be downloaded from http://www.ens-lyon.fr/ nbriseba / trunc.html .",
    "we plan to prepare a c version of these programs which should be much faster .",
    "the chebyshev polynomials can be defined either by the recurrence relation    @xmath18    or by    @xmath19    the first chebyshev polynomials are listed below .",
    "@xmath20    an example of chebyshev polynomial ( @xmath21 ) is plotted in fig .",
    "[ t7plot ] .",
    "these polynomials play a central role in approximation theory . among their many properties",
    ", the following ones will be useful in the sequel of this paper .",
    "a presentation of the chebyshev polynomials can be found in  @xcite and especially in @xcite .    for @xmath22",
    ", we have @xmath23    hence , @xmath24 has degree @xmath25 and its leading coefficient is @xmath26 .",
    "it has @xmath25 real roots , all strictly between @xmath27 and @xmath28 .",
    "[ extrematn ] there are exactly @xmath29 values @xmath30 such that @xmath31 which satisfy @xmath32 } |t_n(x)| \\quad \\forall i , \\ ,",
    "i = 0 , \\ldots , \\ , n.\\ ] ] that is , the maximum absolute value of @xmath24 is attained at the @xmath33 s , and the sign of @xmath24 alternates at these points .",
    "we recall that a _ monic _",
    "polynomial is a polynomial whose leading coefficient is @xmath28 .",
    "[ monic ] let @xmath34 , @xmath35 .",
    "the monic degree-@xmath25 polynomial having the smallest @xmath36}$ ] norm in @xmath37 $ ] is @xmath38    the central result in polynomial approximation theory is the following theorem , due to chebyshev .",
    "[ chebyshev_theorem ] let @xmath34 , @xmath35 .",
    "the polynomial @xmath8 is the minimax approximation of degree @xmath39 to a continuous function @xmath4 on @xmath37 $ ] if and only if there exist at least @xmath40 values @xmath41 such that : @xmath42 = \\pm     throughout the paper , we will make frequent use of the polynomials @xmath43    the first polynomials @xmath44 are given below .",
    "we have ( see ( * ? ? ?",
    "3 ) for example ) @xmath45 , hence all the coefficients of @xmath44 are nonzero integers .",
    "@xmath46    [ smallest - i ] let @xmath47 , define @xmath48 let @xmath49 be an integer , @xmath50 , the polynomial @xmath51 has the smallest @xmath52}$ ] norm in @xmath5 $ ] among the polynomials of degree at most @xmath25 with a degree-@xmath49 coefficient equal to @xmath28 .",
    "that norm is @xmath53 .",
    "moreover , when @xmath54 or @xmath55 , this polynomial is the only one having this property .    proving this theorem first requires the following results .",
    "[ muntz ] let @xmath56 be an increasing sequence of nonnegative integers and @xmath57,\\ ] ] then either @xmath58 or @xmath59 has at most @xmath25 zeros in @xmath60 .    * proof . * by induction on @xmath25 . for @xmath61 ,",
    "it is straightforward .",
    "now we assume that the property is true until the rank @xmath25 .",
    "let @xmath62 $ ] with @xmath63 and @xmath64 .",
    "assume that @xmath59 has at least @xmath40 zeros in @xmath60 .",
    "then @xmath65 has at least @xmath40 zeros in @xmath60 .",
    "thus , the nonzero polynomial @xmath66 has , from rolle s theorem , at least @xmath29 zeros in @xmath60 , which contradicts the induction hypothesis .",
    "@xmath67    [ cormuntz ]",
    "let @xmath49 be an integer , @xmath68 , and @xmath69.\\ ] ] if @xmath59 has at least @xmath25 zeros in @xmath70 and at most a simple zero in @xmath71 , then @xmath58 .",
    "* proof . * if @xmath72 , then @xmath59 has at least @xmath25 zeros in @xmath60 , hence @xmath58 from proposition [ muntz ] .",
    "suppose now that @xmath73",
    ". we can rewrite @xmath59 as @xmath74 . as @xmath59 has at least @xmath75 zeros in @xmath60 , it must yet vanish identically from proposition [ muntz ] .",
    "@xmath67    * proof of theorem  [ smallest - i]*. we give the proof in the case @xmath76 ( the general case is a straightforward generalization ) .",
    "the case @xmath77 is straightforward .",
    "denote @xmath78 . from property [ extrematn",
    "] , there exist @xmath79 such that    @xmath80 } =   a_k^{-1 } ( -1)^{n - i}.\\ ] ]    now , we assume @xmath55 .",
    "this part of the proof follows step by step the proof of theorem 2.1 in @xcite .",
    "let @xmath81 $ ] satisfy @xmath82 } \\leq |a_k^{-1}|$ ] .",
    "we suppose that @xmath83 .",
    "then the polynomial @xmath84 has the form @xmath85 and is not identically zero",
    ".    hence there exist @xmath0 and @xmath86 , @xmath87 , such that @xmath88 , @xmath89 and @xmath90 , @xmath91 ( otherwise , the nonzero polynomial @xmath59 would have at least @xmath25 distinct roots in @xmath92 $ ] which would contradict corollary [ cormuntz ] ) .",
    "let @xmath93 such that @xmath94 then sgn @xmath95 sgn @xmath96 sgn @xmath97 .",
    "let @xmath98 such that @xmath94 , @xmath99 , @xmath100 : @xmath59 has at least @xmath101 zeros in @xmath102 $ ] .",
    "we distinguish two cases :    * if @xmath98 is even , we have sgn @xmath103 sgn @xmath104 and thus , @xmath59 must have an even number of zeros ( counted with multiplicity ) in @xmath102 $ ] . *",
    "if @xmath98 is odd , we have sgn @xmath105 sgn @xmath104 and thus , @xmath59 must have an odd number of zeros ( counted with multiplicity ) in @xmath106 $ ] .    in both cases , we conclude that @xmath59 has at least @xmath98 zeros in @xmath107 $ ] .",
    "then @xmath59 has at least @xmath108 zeros in @xmath109 $ ] .",
    "finally , @xmath59 has not less than @xmath110 zeros in @xmath92 $ ] ( @xmath59 has at least @xmath0 zeros in @xmath111 and at least @xmath112 zeros in @xmath113 $ ] ) .",
    "note that we also obtained that @xmath59 has no less than @xmath75 zeros in @xmath114 $ ] . as @xmath59 is nonzero , this contradicts corollary  [ cormuntz ] .    to end , we assume @xmath115 and @xmath116 . let @xmath117 $ ] satisfy @xmath118 } < |a_0^{-1}|$ ] . then the polynomial @xmath119 has the form @xmath120 and is not identically zero .",
    "this polynomial changes sign between any two consecutive extrema of @xmath121 , hence it has at least @xmath25 zeros in @xmath122 .",
    "as it cancels also at @xmath71 , we deduce that @xmath59 vanishes identically , which is the contradiction desired .",
    "when @xmath115 and @xmath116 , it is not possible to prove unicity : for example , let @xmath123 , @xmath124 , @xmath125 , the polynomials @xmath126 with @xmath127 $ ] have all a @xmath128}$ ] norm equal to @xmath28 .",
    "let @xmath129 , let @xmath4 be a function defined on @xmath5 $ ] and @xmath130 , @xmath131 ,  , @xmath132 be @xmath29 integers .",
    "define @xmath133}$ ] as the set of the polynomials of degree less than or equal to @xmath25 whose degree-@xmath0 coefficient is a multiple of @xmath14 for all @xmath0 between @xmath71 and @xmath25 ( we will call these polynomials `` truncated polynomials '' ) .",
    "let @xmath8 be the minimax approximation to @xmath4 on @xmath5 $ ] .",
    "define @xmath15 as the polynomial whose degree-@xmath0 coefficient is obtained by rounding the degree-@xmath0 coefficient of @xmath8 to the nearest multiple of @xmath14 ( with an arbitrary choice in case of a tie ) for @xmath134 : @xmath15 is an element of @xmath135}$ ] .    also define @xmath136 and @xmath137 as    @xmath138}\\ ,   \\mbox { and } \\",
    ", \\hat{\\epsilon } = ||f - \\hat{p}||_{\\infty,[0,a]}.\\ ] ]    we assume that @xmath139 .",
    "let @xmath140 $ ] , we are looking for a truncated polynomial @xmath141}$ ] such that    @xmath142 } = \\min_{q \\in { \\cal p}_n^{[m_0,m_1,\\ldots{},m_n ] } } ||f - q||_{\\infty,[0,a]}\\ ] ]    and    @xmath143 , this problem has a solution since @xmath15 satisfies .",
    "it should be noticed that , in that case , @xmath144 is not necessarily equal to @xmath15 . in the following ,",
    "we compute bounds on the coefficients of a polynomial @xmath145}$ ] such that if @xmath146 is not within these bounds , then @xmath147 } > \\epsilon + \\lambda \\hat{\\epsilon}.\\ ] ]    knowing these bounds will allow an exhaustive searching of @xmath144 . to do that , consider a polynomial @xmath146 whose degree-@xmath0 coefficient is @xmath148 , with @xmath149 .",
    "let us see how close can @xmath146 be to @xmath8 .",
    "we have    @xmath150    hence , @xmath151}$ ] is minimum implies that @xmath152}\\ ] ] is minimum .",
    "hence , we have to find the polynomial of degree @xmath25 , with fixed degree-@xmath0 coefficient , whose norm is smallest .",
    "this is given by theorem  [ smallest - i ] .",
    "therefore , we have @xmath153 } \\geq \\frac{1}{|\\beta_i|},\\ ] ] where @xmath154 is the nonzero degree-@xmath0 coefficient of @xmath155 .",
    "therefore , we must have    @xmath156 } \\geq \\frac{\\delta_i}{|\\beta_i|}.\\ ] ]    now , if a polynomial is at a distance greater than @xmath157 from @xmath8 , it can not be @xmath144 since @xmath158 } \\geq || q -   p ||_{\\infty,[0,a ] } -    there exists @xmath0 , @xmath159 , such that @xmath160 then @xmath161 and therefore @xmath162 .",
    "hence , the degree-@xmath0 coefficient of @xmath144 necessarily lies in the interval @xmath163 $ ] .",
    "thus we have    @xmath164    since @xmath165 is a rational integer : we have @xmath166 possible values for the integer @xmath167 .",
    "this means that we have @xmath168 polynomials candidates .",
    "if this amount is small enough , we search for @xmath169 by computing the norms @xmath170}$ ] , @xmath146 running among the possible polynomials .",
    "otherwise , we need an additional step to decrease the number of candidates . hence , we give now a method for this purpose .",
    "condition means @xmath171 for all @xmath172 $ ] .",
    "in particular , we have @xmath173 i.e. , since @xmath174 is an integer , @xmath175 the @xmath29 inequations given by define a polytope to which the numerators ( i.e. the @xmath176 ) belong .",
    "the idea is to try to make this polytope smaller in order to reduce our final exhaustive search .",
    "we do that thanks to inequations considered for a certain number ( chosen by the user ) of values of @xmath172 $ ] .",
    "once we got a small enough polytope , we start our exhaustive search using libraries ( such as polylib @xcite and cloog @xcite ) specially designed for scanning efficiently the integer points of polytopes and producing only the corresponding loops in our program of exhaustive search .",
    "cloog implements the quiller et al .",
    "algorithm @xcite .",
    "we implemented in maple a weakened version of the process described in the previous section . by this , we mean that in the step of refinement of the polytope , we only determine its vertices using the simplex method instead of scanning its integer points .",
    "the program first computes the bounds obtained from chebyshev polynomials and then , if these bounds are too large , computes the vertices of the polytope obtained from inequations and inequations considered for @xmath177 where @xmath178 is an integer parameter chosen by the user , @xmath0 an integer , @xmath179 and @xmath180 is a rational number `` close '' and less than or equal to @xmath6 .    [",
    "[ cosine - function - in-0pi4-with - a - degree-3-polynomial ] ] cosine function in @xmath181 $ ] with a degree-@xmath182 polynomial ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    in @xmath181 $ ] , the distance between the cosine function and its best degree-@xmath182 minimax approximation is @xmath183 .",
    "this means that such an approximation is not good enough for single - precision implementation of the cosine function .",
    "it can be of interest for some special - purpose implementations . in this example , the bounds given by the first step ( associated to chebyshev polynomials ) are good enough to avoid the use of the polytope refinement .",
    "degree 0 : 4 possible values between 2047/2048 and            4097/4096 degree 1 : 22 possible values between -3/512 and            15/1024 degree 2 : 5 possible values between -9/16 and            -1/2 degree 3 : 1 possible values between 1/16 and            1/16 440 polynomials need be checked              [ [ exponential - function - in-0log112048-with - a - degree-3-polynomial ] ] exponential function in @xmath187 $ ] with a degree-@xmath182 polynomial ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    in @xmath187 $ ] , the distance between the exponential function and its best degree-@xmath182 minimax approximation is around @xmath188 , which should be sufficient for a faithfully rounded double precision implementation provided there is much care in the polynomial evaluation .",
    "the bounds given to get @xmath144 using the first step are too large ( there are 18523896 polynomials to test ) .",
    "hence , we must use the polytope refinement .",
    "degree 0 : 6 possible values between 18014398509481983/18014398509481984            and 72057594037927937/72057594037927936 degree 1 : 109 possible values between 35184372088821/35184372088832            and 35184372088929/35184372088832 degree 2 : 146 possible values between 4294967117/8589934592            and 2147483631/4294967296 degree 3 : 194 possible values between 699173/4194304            and 1398539/8388608 18523896 polynomials need be checked      degree 0 : 2 possible values between 72057594037927935/72057594037927936            and 1 degree 1 : 27 possible values between 35184372088857/35184372088832            and 35184372088883/35184372088832 degree 2 : 32 possible values between 536870897/1073741824            and 4294967207/8589934592 degree 3 : 44 possible values between 1398421/8388608            and 21851/131072 76032 polynomials need be checked                                  j.a .",
    "pineiro , j.d .",
    "bruguera , and j .-",
    "faithful powering computation using table look - up and a fused accumulation tree . in burgess and ciminiera , editors , _ proc .",
    "of the 15th ieee symposium on computer arithmetic ( arith-15)_. ieee computer society press , 2001 .",
    "t.  p. tang .",
    "table lookup algorithms for elementary functions and their error analysis . in p.",
    "kornerup and d.  w. matula , editors , _ proceedings of the 10th ieee symposium on computer arithmetic _ , pages 232236 , grenoble , france , june 1991 .",
    "ieee computer society press , los alamitos , ca .",
    "b.  wei , j.  cao and j.  cheng .",
    "high - performance architectures for elementary function generation . in burgess and ciminiera , editors ,",
    "_ proc . of the 15th ieee symposium on computer arithmetic ( arith-15)_. ieee computer society press , 2001 ."
  ],
  "abstract_text": [
    "<S> when implementing regular enough functions ( e.g. , elementary or special functions ) on a computing system , we frequently use polynomial approximations . in most cases , the polynomial that best </S>",
    "<S> approximates ( for a given distance and in a given interval ) a function has coefficients that are not exactly representable with a finite number of bits . and yet , the polynomial approximations that are actually implemented do have coefficients that are represented with a finite - and sometimes small - number of bits : this is due to the finiteness of the floating - point representations ( for software implementations ) , and to the need to have small , hence fast and/or inexpensive , multipliers ( for hardware implementations ) . </S>",
    "<S> we then have to consider polynomial approximations for which the degree-@xmath0 coefficient has at most @xmath1 fractional bits ( in other words , it is a rational number with denominator @xmath2 ) . </S>",
    "<S> we provide a general method for finding the best polynomial approximation under this constraint . </S>",
    "<S> then , we suggest refinements than can be used to accelerate our method . </S>"
  ]
}
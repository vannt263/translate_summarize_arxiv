{
  "article_text": [
    "model checking @xcite is a formal verification technique which allows for desired behavioral properties of a given system to be verified on the basis of a suitable model of the system through systematic inspection of all states of the model .",
    "it is widely used in the design and analysis of computer systems @xcite .",
    "although it has been rapidly gaining in importance in recent years , classical model checking can not deal with verification of those systems ( e.g.,concurrent systems ) dealing with uncertainty information .",
    "such as , the development of most large and complex systems is inevitably involved with lots of uncertainty and inconsistency information .    in order to handle the systematic verification with uncertain information in probability , hart and sharir @xcite in 1986 applied probability theory to model checking in which the uncertainty is modeled by probability measures .",
    "baier and katoen @xcite systematically introduced the principle and method of model checking based on probability measures and related applications with markov chain models for probabilistic systems .",
    "for the past few years , there were even more applications on probability model checking in verifying properties of systems with uncertain information ( see e.g. @xcite ) .",
    "on the other hand , zadeh proposed the theory of fuzzy sets in 1965 @xcite , and possibility measures @xcite are a development of classical measures as a branch of the theory of fuzzy sets from then . as a comparison ,",
    "possibility measures ( more general , fuzzy measures ) focus on non - additive situation , while probability measures are used for additive situation .",
    "most problems in real situations are complicated and non - additive . as a matter of fact , fuzziness seems to pervade most human perception and thinking processes as noted by zadeh , especially , modeling human - centered systems , including biomedical systems ( @xcite ) , criminal trial systems , decision making systems(@xcite ) , linguistic quantifiers ( @xcite ) , and knowledge base ( @xcite ) .",
    "therefore , it is necessary to study the theory and its applications of model checking on non - deterministic systems of non - additive measure , especially , fuzzy measure . in this respect ,",
    "li and li @xcite introduced model checking of linear - time properties in which the uncertainty is modeled by possibility measures and initiated the model checking based on possibility measures .",
    "xue , lei and li @xcite defined computation tree logic based on possibility measures , which is called possibilistic computation tree logic ( poctl , in short ) .",
    "although we have studied the quantitative and qualitative properties of poctl in @xcite , there are many important issues that still have not been addressed .",
    "the first important problem is the expressiveness of poctl : whether any ctl formulae can be expressed by poctl or vise versa . as we know",
    ", probabilistic ctl and ctl are not comparable with each other ( @xcite ) .",
    "this allows probabilistic ctl to be used to do model checking of real - world problems , which can not be tackled by classical ctl model checking .",
    "the surprising result of this paper is that ctl is a proper subclass of poctl .",
    "the second problem is looking for the method to solve poctl model - checking problems .",
    "as we know , there are effective algorithms and automated tools to solve ctl model - checking problems .",
    "as we just mentioned , ctl is a proper subclass of poctl , it is nontrivial to study whether there are effective algorithms to solve the poctl model - checking problems",
    ". we shall give complete study to the above two problems in this paper .",
    "the content of this paper is arranged as follows . in section 2",
    "we recall the notion of possibilistic kripke structures , the related possibility measures induced by the possibilistic kripke structures , and the main notions of poctl introduced in @xcite . in section 3",
    ", the equivalence of poctl formulae and ctl formulae is investigated , and the differences between poctl formulae and ctl formulae are discussed . an important result ,",
    "ctl is a proper subclass of poctl , is obtained .",
    "section 3 also presents qualitative properties of repeated reachability and persistence .",
    "the poctl model checking approach is presented in section 4 , and an illustrative example is given in section 5 .",
    "the paper ends with conclusion section .",
    "transition systems or kripke structures are key models for model checking . corresponding to possibilistic model checking",
    ", we have the notion of possibilistic kripke structures , which is defined as follows .",
    "@xcite[de : pkripke ] a possibilistic kripke structure is a tuple @xmath0 , where    \\(1 ) @xmath1 is a countable , nonempty set of states ;    \\(2 ) @xmath2 $ ] is the transition possibility distribution such that for all states @xmath3 , @xmath4 ;    \\(3 ) @xmath5 $ ] is the initial distribution , such that @xmath6 ;    \\(4 ) @xmath7 is a set of atomic propositions ;    \\(5 ) @xmath8 is a labeling function that labels a state @xmath3 with those atomic propositions in @xmath7 that are supposed to hold in @xmath3 .    furthermore , if the set @xmath1 and @xmath7 are finite sets , then @xmath0 is called a finite possibilistic kripke structure .",
    "\\(1 ) in definition [ de : pkripke ] , we require the transition possibility distribution and initial distribution are normal , i.e. , @xmath9 and @xmath10 , where we use @xmath11 or @xmath12 to represent the least upper bound ( or supremum ) or the largest lower bound ( or infimum ) of the subset @xmath13 $ ] , respectively .",
    "these conditions are corresponding to the transition probability distribution and probability initial distribution in probabilistic kripke structure or markov chain ( @xcite ) , where the supremum operation is replaced by the sum operation .",
    "they are the main differences between possibilistic kripke structure and probabilistic kripke structure .",
    "in fact , in fuzzy uncertainty , the order instead of the additivity is one of the most important factors to be considered .",
    "\\(2 ) the transition possibility distribution @xmath14 $ ] can also be represented by a fuzzy matrix . for convenience , this fuzzy matrix is also written as @xmath15 , i.e. , @xmath16 and @xmath15 is also called the ( fuzzy ) transition matrix of @xmath17 . in @xcite , we also used the symbol @xmath18 to represent transition matrix .",
    "for the fuzzy matrix @xmath15 , its transitive closure is denoted by @xmath19 . when @xmath1 is finite , and if @xmath1 has @xmath20 elements , i.e. , @xmath21 , then @xmath22 @xcite , where @xmath23 for any positive integer number @xmath24 . here",
    ", we use the symbol @xmath25 to represent the max - min composition operation of fuzzy matrixes . recall that the max - min composition operation of fuzzy matrices is similar to ordinary matrix multiplication operation ,",
    "that is , let ordinary multiplication and addition operations of real numbers be replaced by minimum and maximum operations of real numbers ( @xcite ) .",
    "for a possibilistic kripke structure @xmath0 , using @xmath19 , we can get another possibilistic kripke structure @xmath26 .",
    "\\(3 ) the authors in @xcite also used the notion of fuzzy possibilistic kripke structures as the models of qualitative possibilistic logic qfl , which is formally defined as a structure @xmath27 where @xmath28 is a nonempty set of worlds , @xmath29 maps @xmath30 into the truth value set @xmath31 , and @xmath32 is a normalized positive fuzzy subset of @xmath28 , i.e. , a mapping @xmath33 $ ] such that @xmath34 for each @xmath35 and @xmath36 .",
    "obviously , the notion of fuzzy possibilistic kripke structure just defined is not equivalent to our notion of possibilistic kripke structures .",
    "since our notion of possibilistic kripke structures is obvious a generalization of classical kripke structures ( see @xcite ) into fuzzy cases and a possibilistic version of ( discrete - time ) markov chains as defined in definition 10.1 in @xcite .",
    "so we still use the name of possibilistic kripke structures here , but it has no connection with that defined in @xcite .",
    "the much more related notion is ( discrete - time ) fuzzy markov chains @xcite or ( discrete - time ) possibilistic markov chains ( @xcite ) or possibilistic markov processes ( @xcite ) which are used to model certain fuzzy systems .",
    "the only difference between possibilistic kripke structures and fuzzy ( or possibilistic ) markov chains lies in that there is no labeling function in the definition of fuzzy ( or possibilistic ) markov chains . in @xcite ,",
    "possibilistic markov chains are used to model the evolution of updating problem in a knowledge base that describes the state of evolving system .",
    "uncertainty comes from incomplete knowledge about the knowledge base , `` one may only have some idea about what is / are the most plausible state(s ) of the system , among possible one''(@xcite ) .",
    "this type of incomplete knowledge was described in terms of possibility distribution in @xcite , the degree of transition possibility distribution denotes the plausible degree of the next state .",
    "this provides us a sort of justification for degrees of transitions in possibilistic kripke structures .",
    "the states @xmath3 with @xmath37 are considered as the initial states . for state @xmath3 and @xmath38 ,",
    "let @xmath39 denote the possibility of moving from @xmath3 to some state @xmath40 in a single step , that is , @xmath41    paths in possibilistic kripke structure @xmath17 are infinite paths in the underlying digraph .",
    "they are defined as infinite state sequences @xmath42 such that @xmath43 for all @xmath44 .",
    "let @xmath45 denote the set of all paths in @xmath17 , and @xmath46 denote the set of finite path fragments @xmath47 where @xmath48 and @xmath43 for @xmath49 .",
    "let @xmath50 ( @xmath51 if @xmath17 is understood ) denote the set of all paths in @xmath17 that start in state @xmath3 .",
    "similarly , @xmath52 ( @xmath53 if @xmath17 is understood ) denotes the set of finite path fragments @xmath47 such that @xmath54 .",
    "the set of direct successors ( called @xmath55 ) and direct predecessors ( named @xmath56 ) are defined as follows : @xmath57    given a possibilistic kripke structure @xmath17 , the cylinder set of @xmath58 is defined as ( @xcite ) @xmath59 where @xmath60 is a finite prefix of @xmath61 .",
    "then as shown in @xcite , @xmath62 is the algebra generated by @xmath63 on @xmath45 .",
    "that is to say , @xmath62 is the unique subalgebra of @xmath64 which is closed under unions and intersections containing @xmath65 .",
    "[ def : possibility measure ] @xcite for a possibilistic kripke structure @xmath17 , a function @xmath66 $ ] is defined as follows : @xmath67 for any @xmath68 furthermore , we define @xmath69 for any @xmath70 , then , we have a well - defined function @xmath71,\\ ] ] @xmath72 is called the possibility measure over @xmath62 as it has the properties stated in theorem [ th : possibility measure ] .",
    "if @xmath17 is clear from the context , then @xmath17 is omitted and we simply write @xmath73 for @xmath72 .",
    "[ th : possibility measure ] @xcite @xmath73 is a possibility measure on @xmath62 , i.e. , @xmath73 satisfies the following conditions :    \\(1 ) @xmath74 , @xmath75 ;    \\(2 ) @xmath76 for any @xmath77 , @xmath44 .",
    "[ th : possibility on cyl ] @xcite let @xmath17 be a possibilistic finite kripke structure .",
    "then the possibility measure of the cylinder sets is given by @xmath78 when @xmath79 and @xmath80 .",
    "[ re : m - s ] ( 1 ) for paths starting in a certain ( possibly noninitial ) state @xmath3 , the same construction is applied to the possibilistic kripke structure @xmath81 that results from @xmath17 by letting @xmath3 be the unique initial state .",
    "formally , for @xmath0 and state @xmath3 , @xmath81 is defined by @xmath82 , where @xmath3 denotes an initial distribution with only one initial state @xmath3 .",
    "\\(2 ) for a probabilistic kripke structure @xmath17 , by the intension property of probability measures , the induced probability measure ( @xcite ) , which is defined on the @xmath83-algebra of @xmath64 generated by cylinder sets , is uniquely determined by its definition on cylinder sets . on the other hand , by the extensional property of possibility measures , the induced possibility measure in eq .",
    "( [ eq : possibility measure ] ) is uniquely determined by its definition on single paths as shown in eq.([eq : possibility measure - path ] ) .",
    "the method to define probability measure on a probabilistic kripke structure can not be applied to that of possibility measure on possibilistic kripke structure , and vice versa . for more comparisons of possibility measures and probability measures ,",
    "we refer to @xcite and references therein .",
    "@xcite ( syntax of poctl ) _ poctl state formulae _ over the set @xmath7 of atomic propositions are formed according to the following grammar :    @xmath84    where @xmath85 , @xmath86 is a poctl path formula and @xmath87 $ ] is an interval with rational bounds .    _",
    "poctl path formulae _ are formed according to the following grammar :    @xmath88    where @xmath89 , @xmath90 , and @xmath91 are state formulae and @xmath92 .",
    "[ def : semantics of poctl]@xcite ( semantics of poctl ) let @xmath85 be an atomic proposition , @xmath0 be a possibilistic kripke structure , state @xmath93 , @xmath94 , @xmath95 be poctl state formulae , and @xmath86 be a poctl path formula .",
    "_ the satisfaction relation @xmath96 _ is defined _ for state formulae _ by @xmath97    for path @xmath32 , _ the satisfaction relation @xmath96 for path formulae _ is defined by @xmath98\\models\\phi;\\\\ \\pi\\models\\phi\\sqcup\\psi   & { \\rm iff } \\",
    "\\exists k\\geq0,\\pi[k]\\models\\psi \\ { \\rm and}\\   \\pi[i]\\models\\phi { \\rm \\",
    "for\\ all } \\",
    "0\\leq i\\leq k-1;\\\\ \\pi \\models \\phi\\sqcup^{\\leq n}\\psi & { \\rm iff } \\ \\exists 0\\leq k\\leq n , ( \\pi[k]\\models \\psi\\wedge(\\forall 0\\leq i < k),\\pi[i]\\models \\phi)).\\end{aligned}\\ ] ] where if @xmath99 , then @xmath100=s_k$ ] for any @xmath101 .",
    "in particular , the path formulae @xmath102 ( `` eventually '' ) and @xmath103 ( `` always '' ) have the semantics @xmath104 @xmath105 alternatively , @xmath106 .    @xcite ( syntax of qualitative poctl ) _ state formulae in the qualitative fragment of poctl _ ( over @xmath7 ) are formed according to the following grammar :    @xmath107    where @xmath85 , @xmath86 is a path formula formed according to the following grammar :    @xmath108    where @xmath89 , @xmath90 and @xmath91 are state formulae .    as a subclass of poctl",
    ", the semantics of qualitative poctl can be defined as that of poctl .",
    "since we shall compare the expressiveness of poctl and ctl , let us recall the definition of ctl .",
    "@xcite(syntax of ctl ) state formulae in the fragment of ctl ( over @xmath7 ) are formed according to the following grammar :    @xmath109    where @xmath85 , @xmath86 is a path formula formed according to the following grammar :    @xmath108    where @xmath89 , @xmath90 and @xmath91 are state formulae .",
    "[ def : semantics of ctl]@xcite ( semantics of ctl ) let @xmath85 be an atomic proposition , @xmath0 be a kripke structure without terminal state ( i.e. , @xmath110 , @xmath111 , @xmath112 ) , state @xmath93 , @xmath94 , @xmath95 be ctl state formulae , and @xmath86 be a ctl path formula .",
    "the satisfaction relation @xmath96 is defined for state formulae by @xmath113    for path @xmath32 , the satisfaction relation @xmath96 for path formulae is defined by @xmath114\\models\\varphi;\\\\ \\pi\\models\\phi\\sqcup\\psi   & { \\rm iff } \\",
    "\\exists k\\geq0,\\pi[k]\\models\\psi \\ { \\rm and}\\   \\pi[i]\\models\\phi { \\rm \\",
    "for\\ all } \\ 0\\leq i\\leq k-1.\\end{aligned}\\ ] ]    [ re : problems ] since we use the poctl formula @xmath115 to denote the possibility measure of the paths satisfying @xmath86 , i.e. , @xmath116 iff @xmath117 , poctl is a possibility measure extension of classical ctl . both the possibilistic and probabilistic ctl",
    "solve certain uncertainty of errors or other stochastic behaviors occurring in various real - world applications .",
    "as shown in @xcite , probabilistic ctl and ctl are not comparable with respect to their expressiveness .",
    "this allows probabilistic ctl to be used to solve the model - checking problems of real - world applications , which can not be tackled by classical model - checking algorithms . with regard to expressiveness of poctl",
    ", there was no further results on the comparisons between possibilistic ctl and classical ctl .",
    "we did not know whether poctl can express ctl or vise versa .",
    "we shall study the expressiveness of poctl in the next section and discuss poctl model checking then .",
    "in this section , we study how to define the equivalence between poctl formulae and ctl formulae .",
    "we intend to discuss the equivalence of poctl formulae and ctl formulae and resolve the problem whether any poctl formula can be expressed by a ctl formula or not .    in this section",
    ", we always assume that @xmath17 is a finite possibilistic kripke structure .",
    "[ def : satisfaction set ] for a possibilistic kripke structure @xmath17 with state space @xmath1 , if @xmath94 is a state formula , let @xmath118 , or briefly @xmath119 , denote @xmath120 .",
    "[ def : equivalence of poctl ] poctl formulae @xmath94 and @xmath95 are called equivalent , denoted @xmath121 , if @xmath122 for all finite possibilistic kripke structures @xmath17 over @xmath7 .",
    "[ def : equivalence of poctl and ctl ] a poctl formula @xmath94 is equivalent to a ctl formula @xmath95 , denoted @xmath121 , if @xmath123 for any finite possibilistic kripke structure @xmath0 , where @xmath124 is defined by @xmath125 iff @xmath126 , and @xmath127 iff @xmath37 . obviously , @xmath128 , wo we use the same symbol @xmath51 to denote @xmath50 and @xmath129 in the following .",
    "[ re : equivalence of poctl and ctl ] definition [ def : equivalence of poctl and ctl ] is a key notion , analogous to the one for probabilistic ctl .",
    "there are other ways to define an equivalence between ctl and poctl formulae .",
    "we shall give some discussion of this topic in section 3.4 .",
    "[ th : negation ] let @xmath130 $ ] be a rational number , @xmath86 an arbitrary poctl path formula , then , we have @xmath131    for any",
    "@xmath130 $ ] , for any possibilistic kripke structure @xmath17 with state space @xmath1 , we have @xmath132 the last equality follows from the fact @xmath133 for any poctl state formula @xmath94",
    ". therefore , @xmath134 .",
    "dual to theorem [ th : negation ] , we have @xmath135 for any rational number @xmath130 $ ] and path formula @xmath86 .",
    "then it is easy to prove that @xmath136 although the qualitative fragment of poctl state formulae only allows possibility bounds of the form @xmath137 and @xmath138 , bounds of the form @xmath139 and @xmath140 are also definable as @xmath141      [ th : exists ] let @xmath86 be any ctl path formula .",
    "then , we have @xmath142    let @xmath17 be a finite possibilistic kripke structure , then we have @xmath143 , and @xmath144",
    ".    assume @xmath145 , then , state @xmath3 satisfies @xmath146 , and it follows that @xmath147 , i.e. , @xmath148 .",
    "therefore , @xmath149 .",
    "conversely , if @xmath150 , then @xmath151 .",
    "since @xmath17 is finite and @xmath152 , it follows that @xmath153 , and thus @xmath154 .",
    "therefore , @xmath155 .",
    "this shows that @xmath156 .",
    "the above shows that @xmath157 .",
    "therefore , we have the required equality .    to show the further relationship between ctl and poctl , we need the existential normal form of ctl formulae .",
    "[ def : enf]@xcite for @xmath85 , the set of ctl state formulae in existential normal form ( enf , in short ) is given by    @xmath158 .",
    "[ th : enf]@xcite for each ctl formulae there exists an equivalent ctl formulae in enf .",
    "[ th : forall ] for any ctl formula , there exists an equivalent qualitative poctl formula .    by theorem [ th : enf ] , each ctl formula can be transformed into an equivalent formula in enf .",
    "then , by theorem [ th : exists ] , each ctl formula in enf is equivalent to a qualitative poctl formula . combining theorem [ th : enf ] and theorem [ th : exists ]",
    ", it follows that each ctl formula is equivalent to a qualitative poctl formula .",
    "theorem [ th : forall ] shows that ctl is a subclass of poctl .",
    "we concretely write some equivalent formulae as follows , most of which do not hold in probabilistic ctl as declared in @xcite .",
    "[ pro : exists ] for any ctl formulae @xmath94 and @xmath95 , we have    \\(1 ) @xmath159 ,    \\(2 ) @xmath160 ,    \\(3 ) @xmath161 , and    \\(4 ) @xmath162 .    [ pro : forall ] for any ctl formulae @xmath94 and @xmath95 , we have    \\(1 ) @xmath163 ,    \\(2 ) @xmath164 ,    \\(3 ) @xmath165 , and    \\(4 ) @xmath166",
    ".    the above propositions may not hold in infinite possibilistic kripke structure .",
    "we give a counterexample for proposition [ pro : forall ] ( 3 ) .",
    "assume proposition [ pro : forall ] ( 3 ) holds in any infinite possibilistic kripke structure @xmath17 for @xmath167 , that is @xmath168 such that state @xmath3 fulfills both the formula @xmath169 and @xmath170 or none of them .",
    "fig.1 gives an infinite possibilistic kripke structure @xmath0 , in which states are represented by nodes and transitions by labeled edges .",
    "state names are depicted inside the ovals .",
    "initial states are indicated by having an incoming arrow without source .",
    "we can see that @xmath171 . for this @xmath17 , we have @xmath172 , and it follows that @xmath173 .",
    "but @xmath174 , i.e. , @xmath175 .",
    "this contradicts the assumption that @xmath176 .",
    "an infinite possibilistic kripke structure @xmath17 .",
    "[ th : proper ] there is no ctl formula that is equivalent to @xmath177 .",
    "assume that there is a ctl formula @xmath94 such that @xmath178 .",
    "consider the following two finite possibilistic kripke structures @xmath179 and @xmath180 , see fig.2 and fig.3 . by a simple calculation",
    ", we have @xmath181 in @xmath179 .",
    "however , @xmath182 in @xmath180 .",
    "state @xmath183 satisfies @xmath177 in @xmath179 , while @xmath183 does not satisfy @xmath177 in @xmath180 .",
    "hence , @xmath184 , but @xmath185 .",
    "this implies that @xmath186 since @xmath94 is a ctl state formulae , and @xmath187 , we have @xmath188 by the assumption @xmath178 , it follows that @xmath189 for any finite possibilistic kripke structure @xmath17",
    ". then we have @xmath190 eq.[eq : not ] and eq.[eq : equal ] shows a contradiction , which proves that there is no ctl formula that is equivalent to @xmath177 .     a finite possibilistic kripke structure @xmath191 .     a finite possibilistic kripke structure @xmath192 .    combining theorem [ th : forall ] and theorem [ th : proper ]",
    ", it follows that ctl is a proper subclass of poctl .",
    "poctl is completely different from probabilistic ctl .",
    "in fact , probabilistic ctl and ctl can not be comparable with each other ( whereas , for finite probabilistic kripke structure , the qualitative fragment of probabilistic ctl can be embedded into ctl and thus a proper subclass of poctl ) . using similar arguments",
    ", we can show that the following theorems also hold in finite possibilistic kripke structures .",
    "there is no ctl formula that is equivalent to @xmath193 .",
    "there is no ctl formula that is equivalent to @xmath194 .",
    "there is no ctl formula that is equivalent to @xmath195 .",
    "this subsection will show that qualitative properties for events such as repeated reachability - a certain set of states being visited repeated , and persistence - only a certain set of states being visited from the moment on , can be described by poctl formulae . and",
    "we will show that some properties that can not be expressed in ctl can be expressed in the qualitative fragment of poctl .    for ctl , universal repeated reachability properties ( @xcite )",
    "can be formalized by the combination of the modalities @xmath196 and @xmath197 : @xmath198 for finite possibilistic kripke structures , a similar result holds for the qualitative fragment of poctl .",
    "[ th : repeated reachability ] let @xmath17 be a finite possibilistic kripke structure , and @xmath3 a state of @xmath17 . then , we have    @xmath199 iff @xmath200 .    since @xmath199 if and only if @xmath201 , and @xmath202 iff @xmath203 for any @xmath152 , it follows that @xmath204 .",
    "for any @xmath205 , let @xmath206 , then @xmath207 for any @xmath208 , where @xmath209 .",
    "it follows that @xmath210 .",
    "noting that @xmath211 , and thus ,    @xmath212 .",
    "assume that @xmath200 .",
    "as @xmath213 and @xmath17 is finite , there exists a path @xmath214 satisfying @xmath215 .",
    "let @xmath216 .",
    "since @xmath214 , we have @xmath217\\models\\lozenge a$ ] for any @xmath218 , where @xmath217=s_js_{j+1}\\cdots$ ] . as @xmath219)\\geq po^{m_s}(\\pi)$ ] and @xmath215 , it follows that @xmath219)=1 $ ] for any @xmath218 .",
    "note that @xmath219)\\leq po(s_j\\models \\lozenge a)$ ] , we have @xmath220 for any @xmath218 .",
    "therefore , we have @xmath221 .",
    "hence , @xmath199 .    according to the above proof",
    ", we have :    @xmath199 iff @xmath200 .    in a similar way , by the analysis of the possibility of the evens such as repeated reachability and persistence with more than @xmath222 and equal to @xmath223 , we can show that the following theorems hold in finite possibilistic kripke structures for atomic events .",
    "[ th : exists repeated reachability ] let @xmath17 be a finite possibilistic kripke structure , and @xmath3 a state of @xmath17 .",
    "then , we have    @xmath224 iff @xmath225 .",
    "recall that universal persistence properties can not be expressed in ctl ( @xcite ) . for finite possibilistic kripke structures",
    ", poctl allows specifying persistence properties with possibility @xmath223 .",
    "this is stated by the following theorem .",
    "[ repeated persistence ] let @xmath17 be a finite possibilistic kripke structure , and @xmath3 a state of @xmath17 .",
    "then , we have    @xmath226 iff @xmath227 .",
    "[ th : exists repeated persistence ] let @xmath17 be a finite possibilistic kripke structure , and @xmath3 a state of @xmath17 . then , we have    @xmath228 iff @xmath229 .      as mentioned in remark [ re : equivalence of poctl and ctl ] , the definition of the equivalence of poctl and ctl formulae is not unique .",
    "definition [ def : equivalence of poctl and ctl ] is an analogous version of the related definition of probabilistic ctl and ctl formulae",
    ". we will give another way to define the equivalence of poctl and ctl formulae in the following manner .",
    "[ de : alternative equivalence of poctl and ctl ] for a finite possibilistic kripke structure @xmath230 and @xmath231 $ ] , let @xmath232 , where @xmath233 iff @xmath234 , and @xmath235 iff @xmath236 .",
    "poctl formula @xmath94 is @xmath237-equivalent to ctl formula @xmath95 , denoted by @xmath238 , if @xmath239 for any finite possibilistic kripke structure @xmath17 .",
    "we shall give some properties of poctl using the definition of @xmath237-equivalence of poctl and ctl formulae for @xmath231 $ ] .",
    "the proofs are very similar to those in section 3.2 .",
    "[ pro : exists ] let @xmath86 be any ctl path formula and @xmath231 $ ] . then",
    ", we have @xmath240    [ pro : alternative equivalence ] for any ctl formula and @xmath231 $ ] , there exists an @xmath237-equivalent poctl formula .    [ pro : alternative exists 1 ] for any ctl formulae @xmath94 and @xmath95 , let @xmath231 $ ] , we have    \\(1 ) @xmath241 ,    \\(2 ) @xmath242 ,    \\(3 ) @xmath243 , and    \\(4 ) @xmath244 .    [",
    "pro : alternative forall ] for any ctl formulae @xmath94 and @xmath95 , let @xmath231 $ ] , we have    \\(1 ) @xmath245 ,    \\(2 ) @xmath246 ,    \\(3 ) @xmath247 , and    \\(4 ) @xmath248 .    [",
    "pro : alternative proper ] for any @xmath231 $ ] , there is no ctl formula that is @xmath249-equivalent to @xmath177",
    ".    the @xmath237-equivalence of poctl and ctl formulae might be useful in the approximation of poctl formulae using ctl formulae .",
    "this would allow a graded approach to establish a level cut to decide e.g. when a transition with value @xmath237 can be considered as existing or not .",
    "the general notion of @xmath237-equivalence would be a very general approach such that the notions of equivalence ( actually @xmath250equivalence ) and 1-equivalence would come out as a limit case and particular case respectively .",
    "however , intuitively , 1-equivalence is too strong to define the equivalence of poctl and ctl formulae in the senses as explained below . by 1-equivalence ,",
    "the possibility of a certain `` event '' is larger than 0 does not imply that the `` event '' exists .",
    "for example , in fig.3 , intuitively , @xmath251 . however , by a simple calculation , we have @xmath252 .",
    "it follows that @xmath253 , hence , @xmath254 .",
    "furthermore , intuitively , 1-equivalence is too strong for universal quantifier @xmath255 . by proposition [ pro : alternative forall ]",
    ", the universal `` event '' means that the possibility of the negation of the `` event '' is less than 1 .",
    "there are `` events '' such that the possibility of the negation of the `` events '' is less than 1 but there exist some paths that violate the `` events ''",
    ". we shall give some analysis in the illustrative example in section 5 .",
    "similar to classical and probabilistic ctl model - checking problems , the poctl model - checking problem can be stated as follows :    for a given finite possibilistic kripke structure @xmath17 , state @xmath3 in @xmath17 , and poctl state formula @xmath94 , decide whether @xmath256 .",
    "we write @xmath257 for this poctl model - checking problem .    as shown in the above section",
    ", poctl is more expressible than ctl .",
    "there are some poctl model - checking problems that can not be tackled by classical ctl model - checking algorithm .",
    "we shall present some methods to tackle poctl model - checking problems in this section .",
    "the technique of poctl model checking is very similar to those of classical and probabilistic ctl model checking .",
    "the difference lies in the operations involving in the processing of model checking .    to determine whether @xmath256",
    ", we need to compute the satisfaction set @xmath119 .",
    "this is done recursively using a bottom - up traversal of the parse tree of @xmath94 with time complexity @xmath258 , where @xmath259 denotes the number of subformulae of @xmath94 ( see the definition of @xmath259 in section 6.4.3 in @xcite ) . as for ctl model checking ,",
    "the nodes of the parse tree represent the subformulae of @xmath94 .",
    "for each node of the parse tree , which represents a subformula @xmath95 of @xmath94 , the set @xmath260 is calculated .",
    "if @xmath95 is propositional logic formula , @xmath260 can be computed in exactly the same way as for ctl .",
    "the left part is the treatment of subformulae of the form @xmath261 . since @xmath262 to calculate @xmath260 , we need to compute the possibility @xmath263 for any state @xmath3 .",
    "there are three ways to construct path formula @xmath86 , i.e. , @xmath264 , @xmath265 or @xmath266 for some state formulae @xmath94 and @xmath95 and @xmath267    for @xmath264 , the next - step operator , the following equality holds :    @xmath268    where @xmath15 is the transition matrix of @xmath17 . in the matrix - vector notation",
    "we thus have that the ( column ) vector @xmath269 can be computed by multiplying @xmath15 with the characteristic vector for @xmath260 , i.e. , ( column ) bit vector @xmath270 where @xmath271 if and only if @xmath272 .",
    "write @xmath273 , then we have @xmath274 it follows that , checking the next - step operator thus reduces to a single matrix - vector multiplication .    to calculate the possibility @xmath263 for until formulae @xmath265 or @xmath266 .",
    "let @xmath275 and @xmath276 , by its definition , we have @xmath277 @xmath278 where @xmath279\\in b$ ] and for any @xmath280 , @xmath281 and @xmath282\\in b$ ] and for any @xmath280 , @xmath281    we posed a least fixed point characterization to calculate @xmath283 in @xcite . in the following , we shall give a direct method to calculate @xmath284 and @xmath283 , which is completely different from the method used in probabilistic ctl model checking for until operator , where a linear equation system needs to be solved with more time complexity .",
    "as done in @xcite , let @xmath285 be a partition of @xmath1 such that ,    \\(1 ) @xmath286 ;    \\(2 ) @xmath287 ;    \\(3 ) @xmath288 .    the above partition of @xmath1 always exists . for example , we can take @xmath289 , @xmath290 and @xmath291 .",
    "note that the technique and notations used here have been adopted from probabilistic ctl model checking @xcite .",
    "for all state @xmath3 , write @xmath292 if @xmath293 , we have @xmath294 ; if @xmath295 , @xmath296 ; if @xmath297 , we can get a fuzzy matrix @xmath298 by letting @xmath299 whenever @xmath300 and @xmath222 otherwise .",
    "the left is to give a method to calculate @xmath301 .    by the definition of @xmath302",
    ", we have @xmath303 hence , @xmath304    write @xmath305 for the ( row ) characteristic vector for the singleton @xmath306 , i.e. , @xmath307 if @xmath308 and @xmath309 if @xmath310 ; @xmath311 for the ( column ) characteristic vector for @xmath312 , i.e. , @xmath313",
    "if @xmath314 and @xmath222 otherwise . by a simple calculation , we have @xmath315 for any @xmath24 .",
    "it follows that @xmath316 if we write @xmath317 , where @xmath318 is the identity matrix , i.e. , @xmath319 and @xmath222 otherwise , then @xmath320    hence , if we write @xmath321 as the characteristic matrix for @xmath322 in @xmath1 , i.e. , @xmath323 for @xmath324 and @xmath222 otherwise , then we have @xmath325 to calculate @xmath301 , it is sufficient to perform matrix multiplication at most @xmath326 times . observe that , if @xmath327 , then @xmath328 , which is denoted by @xmath329 . then @xmath329 is the reflexive and transitive closure of the fuzzy matrix @xmath330 . in this case",
    ", we have @xmath331 in particular , we have @xmath332    in summary , we have @xmath333    in particular , if @xmath327 , we have @xmath334    in the calculation of @xmath335 , we only need to perform ( fuzzy ) matrix multiplication at most @xmath336 times .",
    "it follows that the time complexity of poctl model checking of a finite possibilistic kripke structure @xmath17 and a poctl formula @xmath94 can be presented as follows .",
    "[ th : time of poctl ] ( time complexity of poctl model checking ) for a finite possibilistic kripke structure @xmath17 , state @xmath3 in @xmath17 , and a poctl formula @xmath94 , the poctl model - checking problem @xmath257 can be determined in time @xmath337 , where @xmath259 denotes the number of subformulae of @xmath94 .",
    "we now give an example to illustrate the poctl model - checking approach presented in this paper .",
    "the same example is used in @xcite to illustrate the application of model checking of linear - time properties based on possibility measures . note",
    "that this is a demonstrative rather than a case study aimed at showing the scalability of our approach .",
    "suppose that there is an animal with a new disease .",
    "for the new disease , the doctor has no complete knowledge about it , but he ( or she ) believes by experience that the drug ribavirin may be useful for the treating the disease .    for simplicity , it is assumed that the doctor considers roughly the animal s condition to be three states , say , `` poor '' , `` fair '' and `` excellent '' . it is vague when the animal s condition is said to be `` poor '' , `` fair '' and `` excellent '' .",
    "the doctor will use the fuzzy set ( called fuzzy state in the following ) over states `` poor '' , `` fair '' and `` excellent '' to describe the animal condition ( see @xcite for more explanations ) .",
    "therefore , when a possibilistic kripke structure is used to model the treatment processes of the animal , a fuzzy state is naturally denoted as a three - dimensional vector @xmath338 $ ] , which is represented as the possibility distribution of the animal s condition over states `` poor '' , `` fair '' and `` excellent '' .",
    "similarly , it is imprecise to say that at what point exactly the animal has changed from one state to another state after a drug treatment ( i.e. , event ) , because the drug event occurring may lead a state to fuzzy state `` poor '' , `` fair '' and `` excellent '' . therefore , the treatment process is modeled by a possibilistic kripke structure , in which a transition possibility distribution is represented by a @xmath339 matrix .",
    "suppose that the treatment process of the animal is modeled by the following possibilistic kripke structure @xmath0 , where @xmath340 , @xmath341 ,    @xmath342 , @xmath343 ,    and @xmath344 for any @xmath93 .    the structure @xmath17 is presented in fig.4 , and the corresponding @xmath345 is presented in fig.5 , where we use the symbols @xmath346 to represent the states or the atomic propositions `` poor '' , `` fair '' and `` excellent '' respectively .",
    "the possibilistic kripke structure @xmath17 for the treatment process of the animal .",
    "the corresponding @xmath345 of @xmath17 in fig.4 .    by a simple calculation",
    ", we have    @xmath347 .",
    "some calculations are presented as follows in detail .",
    "\\(1 ) let us calculate @xmath348 . in this case ,",
    "let us take @xmath349 , @xmath350 , and @xmath351 .",
    "it follows that , @xmath352 , and then @xmath353 . by eq.[eq : until ] , we have @xmath354 hence , @xmath355 .",
    "it means that the animal will be recovered after one week treatment with possibility @xmath223 .",
    "\\(2 ) since @xmath356 in this case , we take @xmath349 , @xmath357 and @xmath358 .",
    "hence , @xmath359 .",
    "\\(3 ) we have @xmath360 .",
    "the reason is as follows . by proposition",
    "[ pro : forall](3 ) , we have @xmath361 let us calculate @xmath362 , where @xmath363 : @xmath364 hence , @xmath365 , i.e. , @xmath360 .    since @xmath366 , and @xmath367",
    ", it follows that @xmath368 if we adopt 1-equivalence .",
    "this is too strong , since we still have the event @xmath369 ( with possibility 0.2 ) and the event @xmath370 ( with possibility 0.5 ) , and the above two events ( may occur ) violate the property @xmath371 .",
    "\\(2 ) and ( 3 ) show that @xmath372 does not hold in poctl .",
    "\\(4 ) let @xmath363 , @xmath373 , by theorem [ th : repeated reachability ] , we have @xmath374 it has been shown that @xmath375 in @xcite . then we know that @xmath376    \\(5 ) since @xmath377 , where @xmath363 .",
    "it follows that @xmath378 .",
    "this paper is a continuation of previous work in the papers @xcite , where ltl model checking based on possibility measures and possibilistic ctl were introduced .",
    "we further studied the expressiveness of poctl and poctl model cheking in this paper , which was not considered in @xcite .",
    "the main contribution of this paper is as follows .",
    "we showed that ( qualitative ) poctl is more powerful than ctl with respect to their expressiveness .",
    "in particular , we have shown that any ctl formula is equivalent to a qualitative poctl formula . some basic poctl formulae that are not equivalent to any ctl formulae were also given .",
    "some qualitative repeated reachability and persistence properties were expressed using poctl formulae .",
    "the poctl model checking problem was discussed in detail .",
    "the method of poctl model checking were given and its time complexity was analyzed .",
    "this is the first step of poctl model checking .",
    "there are many things that can be done based on this .    as we know , there are many industrial model checkers related to ctl model checking , including smv ( @xcite ) and nusmv .",
    "since ctl is a proper subclass of poctl , it is necessary to set up some model checker corresponding to poctl model checking . the equivalence and abstraction technique corresponding to poctl model checking are also necessary to be investigated in the future work .    of course",
    ", the research directions related to possibilistic ltl model checking posed in @xcite can also be applied to poctl model checking .",
    "we list three of them as follows .",
    "* we use max - min composition of fuzzy relations in this paper .",
    "there are other forms of composition of fuzzy relations , such as max - product composition which are useful for the applications of fuzzy sets .",
    "then the related work using other composition instead of max - min composition can be done in the future .",
    "* we use the normal possibility distributions in this paper ( see conditions ( 2 ) and ( 3 ) in the definition of possibilistic kripke structure ) . how to deal with those possibilistic kripke structures which do not satisfy conditions ( 2 ) and ( 3 ) is another future direction to study . * in the definition of possibilistic kripke structures , the labeling function @xmath379 is crisp , there is no vagueness at all here .",
    "this restriction is too strict .",
    "how to dealt with the possibilistic kripke structures with uncertainty labeling function in poctl is still another issue needed to be discussed further .",
    "although we can transform a possibilistic kripke structure with uncertainty labeling function into a possibilistic kripke structure with classical labeling function as noted in @xcite , a direct method using possibilistic kripke structures with uncertainty labeling functions still deserves study .",
    "the authors would like to thank the anonymous referees for helping them refine the ideas presented in this paper and improve the clarity of the presentation .",
    "the authors would also like to express their special thanks to dr .",
    "licong cui at case western reserve university for detailed suggestions that improved the paper s quality .",
    "e.clarke , e. emerson , a.sistla , _ automatic verification of finite - state concurrent systems using temporal logic specifications _ ,",
    "acm transactions on programming languages and systems , 8(2)(1986 ) 244 - 263 .",
    "h. janssen , g. de cooman and e.e .",
    "kerre , _ first results for a mathematical theory of possibilistic markov processes _ , in : proceedings of ipmu96 , vol .",
    "iii ( information processing and management of uncertainty in knowledge - based systems ) , granada , spain ( 1996 ) pp .",
    "1425- 1431 ."
  ],
  "abstract_text": [
    "<S> in order to deal with the systematic verification with uncertain infromation in possibility theory , li and li @xcite introduced model checking of linear - time properties in which the uncertainty is modeled by possibility measures . </S>",
    "<S> xue , lei and li @xcite defined computation tree logic ( ctl ) based on possibility measures , which is called possibilistic ctl ( poctl ) . </S>",
    "<S> this paper is a continuation of the above work . </S>",
    "<S> first , we study the expressiveness of poctl . unlike probabilistic ctl </S>",
    "<S> , it is shown that poctl ( in particular , qualitative poctl ) is more powerful than ctl with respect to their expressiveness . </S>",
    "<S> the equivalent expressions of basic ctl formulae using qualitative poctl formulae are presented in detail . </S>",
    "<S> some poctl formulae that can not be expressed by any ctl formulae are presented . in particular , some qualitative properties of repeated reachability and persistence are expressed using poctl formulae . </S>",
    "<S> next , adapting ctl model - checking algorithm , a method to solve the poctl model - checking problem and its time complexity are discussed in detail . finally , an example is given to illustrate the poctl model - checking method .    </S>",
    "<S> computation tree logic ; possibilistic kripke structure ; possibility measure ; qualitative property ; quantitative property . </S>"
  ]
}
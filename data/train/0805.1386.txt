{
  "article_text": [
    "with the growing use of digital means of storing , communicating , accessing , and manipulating mathematical knowledge , it becomes important to develop appropriate formal languages for the representation of such knowledge .",
    "but the scope of `` mathematical knowledge '' is broad , and the meaning of the word `` appropriate '' will vary according to the application . at the extremes ,",
    "there are competing desiderata :    * at the _ foundational level _ , one wants a small and simple syntax , and a precise specification of its semantics .",
    "in particular , one wants a specification as to which inferences are valid .",
    "* at the _ human level _ , one wants to have mathematical languages that are as easy to read and understand as ordinary mathematical texts , yet also admit a precise interpretation to the foundational level .",
    "for ordinary working mathematicians , the foundational interpretation is largely irrelevant , but some sort of formal semantics is necessary if the information encoded in mathematical texts is to be used and manipulated at the formal level . of course , one solution is simply to pair each informal mathematical assertion with a formal translation , but then there is the problem of obtaining the formal translations and ensuring that they match the intention of the informal text . as a result , it is more promising to use semi - structured languages that integrate features of both the foundational and human levels",
    ". this results in a smooth spectrum of languages in between the two extremes . at intermediate `` expert user '' levels ,",
    "one may want a language whose structure is close to that of the underlying foundational framework , yet is as humanly readable as possible .    to complicate matters ,",
    "there are features of mathematical knowledge that are not captured at the level of assertions : mathematical language is used to communicate definitions , theorems , proofs , algorithms , and problems , among other things . at the level of a mathematical theory , language is also used to communicate relationships between these different types of data .",
    "the formal information that is relevant will vary depending on the application one has in mind , be it database access and search , theorem proving , formal verification , etc .    here",
    "we will be primarily concerned with mathematical assertions as they are used to state definitions and theorems .",
    "if one is looking for a foundational framework that is robust enough to subsume those used by most systems of mkm , it is hard to beat the language of set theory : we know of no foundational system other than quine s new foundations that can not be interpreted in the language of set theory in such a way that inferences are reduced to inferences in zermelo - fraenkel set theory with the axiom of choice ( @xmath0 ) , or some plausible extension ( say , with large universes of sets ) . to be clear , we are not denying the importance of other frameworks for more specific purposes .",
    "for example , the theory of real closed fields is appropriate to representing many constraint problems , and constructive frameworks are better suited to certain forms of algorithmic reasoning .",
    "it is also important to find ways of sharing the additional information that comes with the use of these more restricted frameworks .",
    "we are simply singling out set theory as a unifying framework for expressing what assertions in the various local frameworks have in common .",
    "we extend the foundational framework in two ways .",
    "first , we allow for explicit definitions of new predicates and functions on the universe of sets . and , second , we allow function symbols to denote functions that are only partially defined , using a logic of partial terms . we call the resulting formal system @xmath1 . as we observe in section  [ dzfc : section ] , this system is easily shown to be conservative over @xmath0 .",
    "we argue that these extensions are _ not _ just a matter of syntactic sugar , but , rather , are essential to adequate representation of the mathematical data : there is a difference between assertions using defined terms and their expanded versions , and , in mathematical terms , @xmath2 really is an undefined quantity .",
    "thus @xmath1 is our proposal for a foundational language and its semantics .",
    "our main goal here is to show that the distance between this foundational level and ordinary mathematical text is not as far as is commonly supposed , by presenting a syntactically - sugared version of set theory , @xmath3 , that is simultaneously close to both . on the one hand ,",
    "we show that our language is easily parsed and translated to @xmath1 . on the other hand , by automatically replacing symbolic expressions with user - provided natural language equivalents ,",
    "we obtain output that is humanly readable , and , although not exactly literary , recognizably faithful to the original mathematical texts .",
    "we support this last claim with examples from suppes s _ axiomatic set theory _ @xcite and munkres s _ topology _ @xcite . in each case",
    ", we present our formal input with both @xmath1 and our natural language translations . indeed ,",
    "the appendices to kieffer  @xcite provide a corpus of 341 definitions , taken from chapters 26 of suppes and sections 1238 of munkres .",
    "examples of the natural language translations can be found in appendix b , below .",
    "these examples show that @xmath3 offers a promising target semantics for mathematical markup languages , like omdoc @xcite .    to illustrate the utility of @xmath3 , we describe two pieces of software that take advantage of both the formal structure of the definitions and their proximity to the informal text .",
    "first , we describe statistical studies of the complexity of definitions in our corpus , measured in various ways .",
    "our analysis shows , not surprisingly , that expanding definitions to the pure language of set theory yields formulas that are huge . perhaps more surprisingly , quantifier complexity of definitions remains remarkably low , even when they are expanded to @xmath1 .",
    "we also describe software that makes it possible to explore definitional dependencies , expanding and compressing nodes via a graphical interface . to be sure ,",
    "data like this can be mined from contemporary formal verification efforts.tptp/mptpchallenge/ ] but mathematical developments are often changed significantly in the process of formalization ; what distinguishes the data presented here is the extent to which it faithfully represents the informal texts it is supposed to model .",
    "our `` user - friendly '' version of set theory is based on friedman  @xcite ; see also an earlier version in friedman  @xcite .",
    "most of the work described here , including the implementation of the parser , the entering of the data from suppes s and munkres s books , and associated software , constitute kieffer s ms thesis  @xcite , written under avigad s supervision .",
    "the thesis and code described here , as well as additional samples of the natural language translations , can be found via avigad s web page .",
    "it is widely acknowledged that zermelo - fraenkel axiomatic set theory with the axiom of choice , @xmath0 , is robust enough to accommodate ordinary mathematical arguments in a straightforward way .",
    "the most notable exceptions are category - theoretic arguments which rely on the existence of large universes with suitable closure properties ; but these can be formalized in extensions of @xmath0 with suitable large cardinal axioms , or by restricting the closure properties of the universes in question .    in this section ,",
    "we describe a conservative extension @xmath1 of @xmath0 .",
    "this theory incorporates two features that allow for a more direct and natural mathematical modeling :    * it accommodates partially defined functions , and hence undefined terms ; and * it allows the introduction of new function and predicate symbols to stand for explicitly defined functions and predicates .",
    "we describe each of these extensions , in turn .",
    "to start with , @xmath1 is based on a free logic , with a special predicate @xmath4 .",
    "this is usually written @xmath5 , and can be read `` @xmath6 is defined '' or `` @xmath6 denotes . ''",
    "the axioms governing the terms are presented as the `` logic of partial terms '' in beeson @xcite , @xmath7 logic in troesltra and schwichtenberg @xcite ; see also the very helpful explanation and overview in feferman  @xcite .",
    "the basic idea is that variables in the language range over objects in the intended domain ( in our case , sets ) , but , as function symbols may denote partial functions , some terms fail to denote .",
    "so , for example , the axioms for universal instantiation are given by @xmath8 .",
    "the basic relation symbols of @xmath0 , which we take to be @xmath9 and @xmath10 , are assumed only to hold between terms that denote ; thus we have axioms @xmath11 and @xmath12 .",
    "partial equality @xmath13 is defined as usual by the axiom @xmath14 .",
    "next , the syntax of ordinary set theory is extended to include definition descriptions , _  la _ russell .",
    "formally , for each formula @xmath15 , the expression @xmath16 is a term whose free variables are just those of @xmath17 , other than @xmath18 .",
    "these terms are governed by the axioms @xmath19 thus in @xmath1 one can show that @xmath16 is defined if and only if there is a unique @xmath20 satisfying @xmath21 , in which case , @xmath16 is equal to that @xmath20 .",
    "finally , one is allowed to introduce new function symbols and relation symbols to abbreviate formulas and terms .",
    "that is , for each formula @xmath22 , one can introduce a new function symbol @xmath23 with the axiom @xmath24 and for every formula @xmath25 one can introduce a new relation symbol @xmath26 with the axiom @xmath27 it is not hard to show that adding the usual axioms of set theory to this framework yields a conservative extension :    @xmath1 is a conservative extension of @xmath0 .",
    "the proof amounts to an interpretation of partial functions and elimination of definitions that is by now standard ; details can be found in @xcite .",
    "note , however , that the usual method of eliminating defined function symbols and relation symbols by replacing them by their definiens can result in an exponential increase in length .",
    "we now describe a more flexible language , _ practical set theory _ , or @xmath3 , designed by friedman .",
    "this language has two key features :    * the language incorporates a healthy amount of syntactic sugar , making it possible to express ordinary mathematical definitions and assertions in a natural way . *",
    "the language is easily and efficiently translatable to @xmath1 .    in this section",
    "we describe some of the features of @xmath3 and the translation to @xmath1 . a full and precise specification of the @xmath3 and its @xmath1 semantics can be found in @xcite , where it was called the _ language of proofless text _ , or @xmath28 .",
    "the claims of naturality will be supported with examples in the next section and in appendix b.    the starting point for @xmath3 is the usual syntax of first - order logic .",
    "we adopt conventions to distinguish between variables , defined functions , and relations ; application of a defined relation @xmath29 to terms @xmath30 is written with square brackets @xmath31 $ ] , while application of a defined function @xmath32 is written with parentheses , @xmath33 . the usual language of first - order logic is augmented with a significant amount of `` syntactic sugar , '' to make the expression of mathematical notions as convenient as possible .",
    "these include the following .    _ function application for sets . _",
    "any term may be used as though it were a function , of any arity ( including `` infix '' ) . for example , one may quantify a variable @xmath34 , and then proceed to use it as though it were a function . in @xmath3 , @xmath35 denotes the unique @xmath36 such that the ordered pair @xmath37 is in @xmath34 , assuming there is such @xmath36 .",
    "the following definition of the unary predicate fcn therefore asserts that @xmath34 is a function if it is a set of ordered pairs @xmath37 in which no @xmath18 occurs more than once as the first component of a pair .    ' '' ''",
    "definition fs.2.58 : 1-ary relation @xmath38 .",
    "@xmath39 \\leftrightarrow f = \\lbrace",
    "{ \\left\\langle x , y \\right\\rangle } : f(x ) = y \\rbrace $ ] .    ' '' ''    _ finite sets and tuples .",
    "_ in the previous example , we saw a finite tuple ; namely , the ordered pair @xmath40 .",
    "tuples of any finite length are terms in @xmath3 .",
    "a finite set can be denoted by simply listing all of its elements .",
    "for example , in defining the wiener - kuratowski ordered pair , we may use the term @xmath41 .    _",
    "set - builder notation .",
    "_ the example above illustrates the use of set - builder notation . in @xmath3 , the term",
    "@xmath42 denotes the set of all values of @xmath43 , where the variables @xmath44 occurring in @xmath6 range over tuples satisfying @xmath45 .",
    "note that this involves an essential use of partiality ; for example , in the intended semantics , the term @xmath46 is undefined .",
    "suppose we wish to define @xmath47 to be the set of all @xmath35 such that @xmath48 .",
    "the expression @xmath49 is not what we want , because @xmath34 on the right - hand side is taken to be a bound variable ranging over the universe of sets .",
    "instead , @xmath3 has us write @xmath50 to indicate that the expression depends on a fixed value of @xmath34 .    _ defined function symbols .",
    "_ we use an exclamation mark in place of russell s @xmath51 as a definite description operator .",
    "it is used in the next example , where we define an infix function , @xmath52 , for addition on the rational numbers .",
    "every infix function is given a _ precedence _",
    "number , for use in determining order of operations .    ' '' ''    definition fs.5.25 : infix function @xmath53 .",
    "@xmath54    @xmath55 .",
    "precedence 40 .    ' '' ''    a definition may be composed of any number of `` if ... then ... '' clauses , and may end with one `` otherwise ... '' clause , which allows definition by cases , as in the example below . in this example",
    "the ` otherwise ' clause introduces a condition under which the function is undefined .",
    "for this we use the predicate @xmath56 , and this allows for the definition of partial functions .    ' '' ''    definition fs.2.3 : 1-ary function @xmath57 . if @xmath58 $ ] then @xmath59 .",
    "otherwise @xmath60 .    ' '' ''    _ defined relation symbols . _ as with functions , we may define infix relations , as in the definition of @xmath61 on the rational numbers , below .    ' '' ''",
    "definition fs.5.24 : infix relation @xmath62 .",
    "@xmath63 .    ' '' ''    _ lambda notation . _",
    "@xmath3 includes a lambda operator which can be used to bind variables and thereby denote functions . in the example",
    "below , we define a binary function called cartespow ( for `` cartesian power '' ) . this function maps a pair of sets @xmath64 , @xmath65 to the set @xmath66 ; i.e. , a product of @xmath65-many copies of @xmath64 .",
    "the definition relies on a previously defined function , cartesprod ( for `` cartesian product '' ) , a binary function taking a map @xmath34 and a set @xmath67 to the product over @xmath68 of the sets @xmath69 .",
    "the definition of cartespow uses lambda abstraction to define the constant function @xmath70 on the fly , to serve as the first argument to cartesprod .    ' '' ''",
    "definition munktop.19.2.5 : 2-ary function @xmath71 .",
    "@xmath72 .    ' '' ''",
    "_ infix relation chains .",
    "_ infix relations may be chained together in the usual way , as with the @xmath73 relation in the example below .    ' '' ''    definition munktop.13.3.a.basis : 0-ary function @xmath74 .",
    "@xmath75 .    ' '' ''    _ bounded quantifiers .",
    "_ quantified variables and variables used in set - builder notation may be bounded by any infix relation , as in the example above .",
    "the translation from @xmath3 to @xmath1 is not difficult .",
    "since our grammar for @xmath3 is not ll , we used the accent compiler - compiler , which implements earley s algorithm .",
    "the latter can parse any context - free grammar in cubic time , and runs in quadratic time when the grammar is unambiguous @xcite .",
    "appendix a contains a number of examples of @xmath3 definitions , together with their translations to @xmath1 . in each case",
    ", we present the @xmath1 input , a latex representation of that input generated by the parser , and the translation to @xmath1 . a much larger corpus of examples  183 definitions from suppes s _ axiomatic set theory _ @xcite and 148 definitions from munkres s _ topology _ @xcite  can be found in @xcite . in practice , the translation took at most a few seconds to process a file containing a dozen large definitions . comparing the ( latex ) @xmath1 output with the ( latex version of the ) @xmath3 input yields a factor of about @xmath76 , which is to say , the @xmath1 translations are actually slightly shorter .",
    "the examples of @xmath3 input in the last section are readable , but not attractive .",
    "it is hard to remember meaning of symbols `` br '' or `` topsp '' ; it would help to have phrases like `` is a binary relation '' or `` is a topological space . '' in fact , even for logical connectives like @xmath77 , natural language equivalents like `` and '' are generally easier to read .",
    "in an ordinary mathematical language text , however , words are not always favored over symbols .",
    "for example , defined functions are usually given symbols : @xmath78 instead of `` the greatest common divisor of @xmath18 and @xmath20 . '' binary relations like @xmath10 and @xmath61 are usually preferred to `` equal to '' and `` less than . '' on the other hand , unary relations often represent concepts that are expanded to words , as shown by the examples above .    in light of these observations , we chose to output natural language equivalents for the connectives , and allow the user to input natural language equivalents for defined symbols .",
    "for example , with the entry    ....",
    "topsp:2@    reln:$(#^0,#^1)$ is a % e?topological space%ee?@    negn:$(#^0,#^1)$ is not a topological space@    plur:%$(#^0,#^1)$% are topological spaces@    nplu:%$(#^0,#^1)$% are not topological spaces@@ ....    the user can specify the natural language that should be used in place of the topsp relation",
    ".    in some cases , either symbols or a natural language equivalent can be used , as in @xmath79 or `` the set of @xmath80 such that  . ''",
    "it is usually awkward to have natural language occur as a subterm of a symbolic expression ; for example , consider `` @xmath81 . ''",
    "thus we incorporate a monotonicity rule : once a subterm of a term has been expanded to natural language , natural language versions are favored from then on .",
    "this choice yields , for example , @xmath82 , but also `` the set of @xmath18 in @xmath83 such that @xmath84 and @xmath18 is even . ''",
    "accordingly , the user supplies two clauses for a defined function or relation for which symbols are preferred over words :    .... \\wp:1@    symb:$\\wp(#^0)$@    word : the power set of # 0@@ ....    whereas if words are the desired default then just one clause is needed :    .... stdrealtop:0@    word : the standard topology on $ \\mathbb{r}$@@ ....    appendix b provides examples of natural language output .",
    "we emphasize that these were generated directly from the @xmath3 input , using the additional natural language data , supplied by the user , described above . although the definitions are not exactly literary , they are surprisingly readable , and close to ordinary mathematical text .",
    "it is certainly the case that additional heuristics could be used to render the output more attractive , and additional markup from the user would result in improvements . in other words , there is a lot more that can be done along these lines ; our claim here is only that @xmath3 offers an auspicious start .",
    "among the benefits of having a database of definitions is the ability to explore those definitions interactively .",
    "we designed two simple programs with which to demonstrate some of the possibilities .        with a second program we gathered statistics on these graphs .",
    "associated to each definition is the dag of all definitions on which it depends ; by the _ size _ of this dag we mean the number of vertices , and by the _ depth _ of this dag we mean the length of its longest directed path .",
    "table 1 shows the maximum and mean values for all definitions in our database .         _ length data .",
    "_ as was expected , there is rapid blowup in the size of definitions when they are expanded . in collecting our data we set a maximum of @xmath85 before we stopped counting , and",
    "this maximum was often reached .    in particular , since the development of the real numbers taken from suppes @xcite involves such deep definition trees , any definition mentioning the real numbers will have enormous expanded length .",
    "for example , the definition of the basis for the standard topology on the reals ( see section [ pst_section ] ) is just 303 symbols long after initial translation into @xmath1 , but blows up to over @xmath85 symbols after expansion .",
    "john harrison .",
    "light : a tutorial introduction . in mandayam srivas and albert camilleri ,",
    "editors , _ proceedings of the first international conference on formal methods in computer - aided design _ , pages 265269 , 1996 .",
    "makarius wenzel .",
    "isabelle / isar  a generic framework for human - readable proof documents . , 10(23 ) , 2007 .",
    "from insight to proof  festschrift in honour of andrzej trybulec , edited by r. matuszewski and a. zalewska ."
  ],
  "abstract_text": [
    "<S> we argue that the language of zermelo fraenkel set theory with definitions and partial functions provides the most promising bedrock semantics for communicating and sharing mathematical knowledge . we then describe a syntactic sugaring of that language that provides a way of writing remarkably readable assertions without straying far from the set - theoretic semantics . </S>",
    "<S> we illustrate with some examples of formalized textbook definitions from elementary set theory and point - set topology . </S>",
    "<S> we also present statistics concerning the complexity of these definitions , under various complexity measures . </S>"
  ]
}
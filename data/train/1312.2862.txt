{
  "article_text": [
    "it is an interesting and important problem to understand which curves on a surface bound an immersed subsurface .",
    "this paper addresses a question in this area primarily motivated by stable commutator length ( @xmath0 ) and quasimorphisms , and in this introduction , we provide some background .",
    "however , the main theorems are concerned only with immersions , so the reader can safely skim the portions of this introduction concerned with @xmath0 and retain a logically complete ( though less colorful ! ) picture . for a more thorough @xmath0 background , especially as it relates to quasimorphisms and immersions , see  @xcite and  @xcite .",
    "recall that an _ orbifold _ is a space locally modeled on euclidean space modulo finite groups of isometries .",
    "see @xcite for background . in this paper , we will be concerned only with good orbifolds with a hyperbolic structure . by a",
    "_ hyperbolic orbifold _",
    "@xmath1 , we mean an orientable orbifold which arises as the quotient of hyperbolic space @xmath2 by a finitely generated discrete subgroup @xmath3 such that @xmath4 acts properly on @xmath2 and @xmath5 is finite - volume .",
    "thus , @xmath2 is the universal orbifold cover of @xmath1 , and @xmath4 is identified with @xmath6 .",
    "we will use this notation throughout the paper .",
    "geometrically , a hyperbolic orbifold is a hyperbolic surface with finitely many cone points and cusps",
    ". we will be interested in how the hyperbolic structure can inform topological properties of @xmath1 , so it is useful to also have a topological picture .",
    "topologically , a hyperbolic orbifold is an orientable surface with finitely many points with a nontrivial structure ( isotropy ) group ( which is always a finite cyclic group ) , and finitely many points removed .",
    "the _ underlying space _ of an orbifold @xmath1 is the topological space @xmath7 with the orbifold structure forgotten .",
    "disk orbifold _ is a hyperbolic orbifold whose underlying space is a disk ; that is , @xmath1 is topologically a sphere with cone points and a single removed point .",
    "there are various notations for orbifolds , which we will mostly avoid ; however , following @xcite , we will refer to disk orbifolds with two cone points of orders @xmath8 and @xmath9 ( and one cusp ) as @xmath10 orbifolds .",
    "we clarify that this notation does not refer to a triangle group , which contains an orientation - reversing reflection . as an example , if we set @xmath11 , we get the modular orbifold , which is a @xmath12 orbifold .    while a hyperbolic orbifold technically has cusps instead of boundary , it still has natural boundary elements of the fundamental group , as follows . a small loop around a cusp",
    "gives a conjugacy class in the fundamental group @xmath6 . in the identification @xmath13 , this class is identified with the ( parabolic ) stabilizers of the preimages of the cusp in @xmath2 .",
    "abusing notation , we will use @xmath14 to mean either the union of the small loops around the cusps of @xmath1 or the union of the associated conjugacy classes in @xmath4 , and we will refer to the loops as _ boundary components _ , or boundary loops , of @xmath15 .",
    "as noted above , topologically , a hyperbolic orbifold is homotopy equivalent to an orbifold in which the cusps have been replaced with honest boundaries , motivating this nomenclature .",
    "just as in @xcite , the results and proofs in this paper apply equally well to hyperbolic orbifolds with geodesic boundaries instead of cusps , in which case the universal orbifold cover is not the entire hyperbolic plane . for simplicity , however , we will always use the definition of hyperbolic orbifold above .",
    "let @xmath16 be a smooth surface , possibly with boundary and removed points , and let @xmath15 be a hyperbolic orbifold .",
    "if @xmath17 is a continuous map , then it lifts to a map @xmath18 between universal covers .",
    "we say that @xmath19 is an _ immersion _ if @xmath20 is .",
    "note that this is equivalent to saying that @xmath19 is an immersion away from the preimages of the cone points of @xmath15 , and at the preimages of a cone point with angle @xmath21 , @xmath19 has branch points of order exactly @xmath22",
    ". we will only be interested in orientation - preserving immersions , although the techniques in this paper apply to orientation - reversing ones as well .",
    "if @xmath15 is a hyperbolic orbifold with fundamental group @xmath4 , and @xmath23 is a hyperbolic element , then @xmath24 is represented by a unique geodesic @xmath25 .",
    "we say that @xmath26 ( or @xmath24 ) _ bounds an immersed surface _ if there is an oriented surface @xmath16 and an orientation - preserving immersion @xmath17 such that @xmath27 ( as oriented @xmath28-manifolds ) .",
    "we say that @xmath26 ( or @xmath24 ) _ virtually bounds an immersed surface _ if there is an oriented surface @xmath16 and an orientation - preserving immersion @xmath29 such that @xmath30 is a covering map @xmath31 .",
    "there are examples of curves on surfaces which do not bound an immersed surface but do virtually bound an immersed surface .",
    "we emphasize that a group element @xmath23 only ( virtually ) bounds an immersed surface if the surface boundary maps to the _ geodesic _ representative of @xmath24 .",
    "one can make the analogous definition of virtually bounding an immersed surface for any homologically trivial @xmath28-chain @xmath32 , and in @xcite , calegari shows the following stability theorem , simplified slightly here .",
    "let @xmath15 be a compact , connected , orientable surface with boundary and @xmath33 , where @xmath34 .",
    "then for all sufficiently large @xmath22 , the chain @xmath35 virtually bounds an immersed surface .",
    "this theorem applies to orbifolds via lifting . here",
    "@xmath36 is the space of _ homogenized _ @xmath28-chains , which is more natural from the perspective of virtual immersions and @xmath0 .",
    "stable commutator length is a norm on the vector space @xmath37 ( see  @xcite for background ) , and in @xcite , calegari shows that the @xmath0 norm ball is polyhedral , in that its restriction to any finite - dimensional subspace is a rational finite - sided polyhedron . in @xcite",
    ", calegari shows that there is a distinguished codimension - one so - called _ geometric _ face of the @xmath0 norm ball associated to the realization of the abstract group @xmath4 as the fundamental group of the orbifold @xmath15 .",
    "this geometric face is dual to the rotation quasimorphism on @xmath4 induced by the circle action at infinity coming from the identification of @xmath38 .",
    "the @xmath28-chains projectively contained in the geometric face are exactly those which virtually bound immersed surfaces , so theorem  c is the main technical result showing that the geometric face is codimension - one .",
    "so @xcite provides a fundamental connection between ( virtual ) immersions , @xmath0 , and rotation quasimorphisms .",
    "computer experiments led to the following conjecture :    let @xmath39 be a free group of rank @xmath40 .",
    "let @xmath41 $ ] be any homologically trivial word .",
    "then for sufficiently large @xmath22 , @xmath42^n$ ] virtually bounds an immersed surface in the realization of @xmath43 as the fundamental group of the hyperbolic once - punctured torus with boundary @xmath44 $ ] .",
    "note that @xcite , conjecture  3.16 and @xcite , theorem  c involve two similar , but definitely distinct , notions of stability ; in theorem  c , we are taking a formal sum with a multiple of the boundary , and in @xcite , conjecture  3.16 , we are multiplying by it .    in  @xcite , calegari and louwsma",
    "prove the analog of @xcite , conjecture  3.16 for @xmath45 orbifolds :    let @xmath15 be a @xmath45 orbifold with boundary loop @xmath46 , and let @xmath47 be any hyperbolic element .",
    "then for all sufficiently large @xmath22 , @xmath48 virtually bounds an immersed surface in @xmath15 .",
    "there is a potential ambiguity here , in that the boundary loop @xmath46 is not an element but a conjugacy class .",
    "but note that if the theorem holds for some representative of this conjugacy class , it holds for all of them , because the effect of changing representatives is essentially to change the word @xmath49 .",
    "this is also true of the next theorem .      in this paper",
    ", we generalize @xcite , theorem  3.1 ( see remark  [ rem : generalization_of_cl ] , which addresses the issue of two vs three orbifold points ) with the following theorem .",
    "let @xmath15 be a hyperbolic orbifold whose underlying topological space is a disk and which has at least three orbifold points , of orders @xmath50 .",
    "let @xmath51 be any hyperbolic element , and let @xmath52 be the boundary loop of @xmath15 .",
    "then there exists @xmath53 so that for all @xmath54 , the loop @xmath55 virtually bounds an immersed surface , where @xmath56 .",
    "we also resolve @xcite , conjecture  3.16 , even in the presence of orbifold points    let @xmath15 be a hyperbolic orbifold with one boundary component and with genus at least @xmath28 .",
    "let @xmath34 with @xmath57 , and let @xmath58 be hyperbolic so that some power of @xmath49 is homologically trivial",
    ". then there exists @xmath59 so that for all @xmath54 , the loop representing @xmath60 virtually bounds an immersed surface .    in the course of proving these theorems , we also give a useful combinatorial certificate ( proposition  [ prop : immersion ] ) that a surface map into an orbifold @xmath15 is homotopic to an immersion with geodesic boundary , and hence a certificate that a collection of words in @xmath4 bounds an immersed surface .      in section  [ sec : orbifolds ] , we review cyclic orders and realizations of a group as the fundamental group of a hyperbolic orbifold . in section",
    "[ sec : immersion ] , we give a combinatorial parameterization of surface maps into orbifolds . in section  [ sec : stability ] , we prove our main theorems .",
    "we wish to thank danny calegari , joel louwsma , neil hoffman , and the anonymous referee .",
    "alden walker was supported by nsf grant dms  1203888 .",
    "informally , a cyclic order on a set @xmath16 is an arrangement of @xmath16 around a circle , and there are several equivalent ways of formalizing this . we define a",
    "_ cyclic order _ on a set @xmath16 to be a function @xmath61 which says whether a triple of elements is positively or negatively ordered ( or @xmath62 , if not all elements in the triple are distinct ) .",
    "a cyclic order must satisfy a compatibility condition on all @xmath63-tuples of elements ; namely if @xmath64 , then @xmath65 , the idea being that if we know @xmath66 and @xmath67 are positively ordered , then we can conclude that the four elements are arranged in the order @xmath68 $ ] , and the cyclic order @xmath69 must respect this . as a shorthand for the function @xmath69 , we will write cyclic orders in square brackets , as above , recording the ( ordered ) arrangement of the elements around a circle . a cyclic order given in square brackets is invariant under cyclic permutations of the list , and the function @xmath70 can be computed by rotating the list so that @xmath71 is first ; the value is then @xmath28 if @xmath72 comes before @xmath73 and @xmath74 otherwise .",
    "if @xmath75 and @xmath76 and @xmath77 are cyclic orders on @xmath78 and @xmath16 , respectively , then we say that @xmath76 and @xmath77 are _ compatible _ if @xmath79 .",
    "if @xmath78 and @xmath16 are finite and the orders are written as cyclic lists with square brackets , then @xmath76 and @xmath77 are compatible if @xmath76 is obtained from @xmath77 by simply removing the elements of @xmath80 .",
    "for example , the orders @xmath81 $ ] and @xmath82 $ ] are compatible .",
    "see  @xcite , chapter  2 .",
    "let @xmath15 be a hyperbolic orbifold with one cusp , and let @xmath34 be its fundamental group , so @xmath3 is a group of isometries .",
    "we now find a nice generating set for @xmath4 .",
    "let @xmath83 be a fundamental domain for the action , which is a polygon in @xmath2 with some ideal vertices .",
    "the group @xmath4 is a free product of cyclic groups , which we write @xmath84 , where each @xmath85 is infinite cyclic ( i.e. a copy of @xmath86 ) and is generated by @xmath87 , and each @xmath88 is finite cyclic and is generated by @xmath89 with order @xmath90 . the @xmath87 are hyperbolic , and the @xmath89 are elliptic .",
    "after conjugation , we may assume that the axes of the @xmath87 all pass through @xmath83 , and the fixed points of the @xmath89 are all vertices of @xmath83 .",
    "it is possible that there is more than one choice for the @xmath89 , since a single orbifold point may appear multiple times as a vertex of @xmath83 .",
    "any of the options will work .",
    "we may also assume that all the @xmath89 rotate counterclockwise .",
    "we will always write words in @xmath4 using positive powers of the @xmath89 . for a given word @xmath49 in the given generators of @xmath4 , we will call a specific generator at a specific location in @xmath49 a _ letter _ , and we ll denote the letter in @xmath49 at position @xmath91 by @xmath92 , with indices starting at @xmath62 .",
    "we call the orbifold @xmath15 together with the generating set @xmath93 chosen as above a _ realization _ of the abstract group @xmath94 , and we will always assume that our hyperbolic orbifolds come with such a generating set .    for each @xmath87 ,",
    "mark the intersections of the hyperbolic axis of @xmath87 with the boundary of @xmath83 : the initial intersection with @xmath95 and the terminal intersection with @xmath87 . also mark the elliptic fixed point of @xmath89 by @xmath89 .",
    "reading the boundary of @xmath83 counterclockwise , this induces a cyclic order on the set of generators @xmath96 .",
    "note that the set @xmath16 contains each @xmath87 and its inverse , but only the positive power of @xmath89 .",
    "we ll denote the cyclic order on @xmath16 by @xmath97 .",
    "it may seem as though there is potential ambiguity in the cyclic order @xmath97 , because some elliptic @xmath89 may have been associated with multiple vertices of @xmath83 , and we chose the vertex to be labeled arbitrarily .",
    "however , note that if we were to choose a different vertex , that would correspond to choosing a different ( conjugate ) generator in @xmath4 , so while we would get a different cyclic order , it s also a genuinely different identification with @xmath94 .",
    "[ [ ht ]    at 181 266 at 186 162 at 30 184 at 360 219 at 339 300 at 12 317 at 162 0 at 244 412 at 384 289 at 293 6 at 119 401 at 26 50 at 0 277 .,title=\"fig : \" ]    [ [ ht ]    at 179 291 at 159 257 at 190 2 at 149 34 at 115 155 at 328 99 at 331 215 , topologically , with the loops representing the generators of @xmath4 .",
    "note the boundary word is easy to read off .",
    "the cyclic order @xmath97 on generators is the cyclic order around the central part of the surface .",
    "see example  [ ex : fundamental_domain].,title=\"fig : \" ]    [ ex : fundamental_domain ] figure  [ fig : fundamental domain ] shows the fundamental domain @xmath83 for a surface of genus one with one boundary component and three orbifold points . here all the orders @xmath90 are @xmath63 . to illustrate how the generators act ,",
    "we ve numbered the images of the point marked @xmath62 under the successive subwords of the boundary word @xmath98 . recall @xmath4 acts on @xmath2 on the left , so the successive subwords are suffixes of the boundary word .",
    "the induced cyclic order @xmath97 can be read off counterclockwise from the boundary of @xmath83 , and it is @xmath99 $ ] .",
    "figure  [ fig : topological_type ] shows what the orbifold looks like , topologically .",
    "note it is easy to read off the boundary word and the cyclic order from figure  [ fig : topological_type ] .",
    "let @xmath15 be a realization of @xmath4 with generating set @xmath93 and fundamental domain @xmath83 , as above .",
    "we will use the choice of generators and fundamental domain to define a graph on the orbifold @xmath15 , as follows . recall that as part of the realization , we have points on the boundary of @xmath83 labeled by the elements of @xmath96 . these points induce the cyclic order @xmath97 on @xmath16 .",
    "let @xmath8 be a point in the interior of @xmath83 ( a more central point makes a nicer picture , but it does nt matter where it is ) .",
    "construct a directed graph @xmath100 on @xmath83 with vertex set @xmath101 with edges as follows : for each vertex @xmath89 in @xmath16 , there is an edge from @xmath8 to @xmath89 . for each vertex @xmath87",
    ", there is an edge from @xmath8 to @xmath87 , and for each vertex @xmath95 , there is an edge from @xmath95 to @xmath8 .",
    "these edges can be made all embedded and disjoint in @xmath83 : @xmath83 is topologically a disk , so we can clearly connect an interior point to arbitrary points on the boundary with a series of disjoint , embedded arcs .",
    "for example , we could make them geodesic arcs .",
    "now let @xmath102 be the quotient of @xmath100 , which is a graph in @xmath15 .",
    "the graph @xmath102 is the _ core graph _ of the orbifold @xmath15 realizing @xmath4 .",
    "we now describe @xmath102 and name its parts so we can refer to them later .",
    "the quotient map from @xmath83 to @xmath15 is an embedding away from the boundary , so to know what @xmath102 is , it suffices to consider what happens to the vertices @xmath103 and @xmath89 .",
    "the @xmath89 vertices in @xmath100 are each sent to one of the cone points .",
    "the pair of vertices @xmath103 in @xmath100 are identified into a single vertex in @xmath102 , which we will denote by @xmath87 .",
    "so the vertex set of the core graph @xmath102 is @xmath104 . for each @xmath105",
    ", there is an edge from @xmath8 to @xmath87 and from @xmath87 to @xmath8 , and for each @xmath106 , there is an edge from @xmath8 to @xmath89 .",
    "figure  [ fig : core_graph ] shows the core graph for the orbifold given in example  [ ex : fundamental_domain ] .    [",
    "[ ht ]    at 181 344 at 210 40 at 115 58 at 96 305 at 30 178 at 360 213 at 339 290 at 140 199 .",
    "left , the graph @xmath100 is shown drawn in the fundamental domain @xmath83 .",
    "right , the core graph @xmath102 is shown on the orbifold , drawn as in figure  [ fig : topological_type].,title=\"fig : \" ] at 305 198 at 151 143 at 296 119 at 77 199 at 40 107 at 245 163 . left , the graph @xmath100 is shown drawn in the fundamental domain @xmath83 .",
    "right , the core graph @xmath102 is shown on the orbifold , drawn as in figure  [ fig : topological_type].,title=\"fig : \" ]    consider the vertex @xmath8 in the graph @xmath102 . since the graph @xmath102 comes with an embedding in @xmath15 , the vertex @xmath8 has a cyclic order on the incident edges obtained by simply reading the directed labels in counterclockwise order around @xmath8 ( where the incoming edge from @xmath87 to @xmath8 is read as @xmath95 ) .",
    "note that these labels are exactly @xmath16 , and this cyclic order is exactly @xmath97 .",
    "the core graph of the hyperbolic orbifold @xmath15 realizing @xmath4 is a graph @xmath102 embedded in @xmath15 .",
    "the preimage @xmath107 of @xmath102 in the universal cover @xmath108 is a graph in @xmath2 .",
    "we call this graph the _ covering tree _ of @xmath102 .",
    "we will verify momentarily that it is , in fact , a tree .",
    "in @xmath102 , each vertex @xmath89 has just a single incoming edge . in the covering tree , the preimages of the vertex @xmath89 have @xmath90 incoming edges , where recall @xmath90 is the order of the generator @xmath89 .",
    "this is quite natural , since the covering map @xmath109 branches at the preimages of the cone points .",
    "see figure  [ fig : core_graph_covering_tree ] .",
    "[ [ ht ]    . ]    since @xmath102 is embedded in @xmath15 , the preimage @xmath107 is embedded in @xmath2 .",
    "the fact that @xmath107 is a tree is quite straightforward to see intuitively , since @xmath2 is the universal cover of @xmath15 , and @xmath102 carries part of the fundamental group , but we go through it carefully . to see that it is a tree ,",
    "suppose that we have a loop @xmath26 in @xmath107 .",
    "now , @xmath26 must pass through a preimage of the vertex @xmath8 since the vertices @xmath87 and @xmath89 are connected only to @xmath8 in @xmath102 . reading the vertex labels around @xmath26 gives a word in @xmath4 taking a preimage of @xmath8 to itself ( where each time we pass through a preimage of @xmath89 , we must choose the appropriate power of @xmath89 to obtain the desired angle , and each time we pass through @xmath87 , we record @xmath87 or @xmath95 , depending on whether we crossed the edges adjacent to @xmath87 respecting the direction ) .",
    "any word in @xmath4 taking a preimage of @xmath8 to itself is trivial , so it must be ( a conjugate of ) the word @xmath110 for some @xmath22 .",
    "but this word produces a trivial path , so @xmath26 is a trivial loop , and we see that @xmath107 must be a tree .",
    "our proofs will build surface immersions using _ cyclic fatgraphs over @xmath4 _",
    ", which are combinatorialized surface maps into @xmath15 .",
    "a cyclic fatgraph over @xmath4 is a surface which is built out of _ pieces _ , which are _ rectangles _ , _ polygons _ , and _ group polygons _ , and where the pieces are glued along _ edges_. we now define all these terms .",
    "a _ rectangle _ is a @xmath40-cell whose boundary is an oriented simplicial loop with @xmath63 @xmath28-simplices .",
    "we think of a rectangle as a rectangular strip . it is labeled on one long side by an infinite order generator @xmath87 and on the other by its inverse @xmath95 .",
    "the notation for such a rectangle is @xmath111 .",
    "the short @xmath28-simplices of the rectangle @xmath111 are _ rectangle edges _ , and a rectangle edge is denoted by @xmath112 or @xmath113 depending on which long labeled side comes _ after _ the rectangle edge .",
    "see figure  [ fig : rectangle ] .    at 81 -7 at 200 47 at 72 93 at -36 47     a _ group polygon _ is a @xmath40-cell whose boundary is an oriented simplicial loop with simplices alternating between labeled sides and _ group polygon edges_. the labeled sides are all labeled by the same finite order generator , and there must be exactly as many labeled sides as the order @xmath90 of @xmath89 .",
    "every group polygon edge in such a group polygon is denoted by @xmath114 .",
    "the notation for this group polygon is @xmath115 .",
    "see figure  [ fig : group_polygon ] .    at 118 40 at 149 80 at 97 107 at 33 108 at 8 44 at 62 0 .,title=\"fig : \" ]    a _ polygon _ is a @xmath40-cell whose boundary is an oriented simplicial complex whose simplicies are all _",
    "polygon edges_. a polygon edge can be one of @xmath116 , @xmath117 , or @xmath118 .",
    "there is a restriction that a polygon must be locally reduced , which means that @xmath117 can not immediately follow @xmath117 , and similarly for the inverses .",
    "a nondegenerate polygon can have two or more edges .",
    "we will often refer to polygons with the name appropriate to their number of edges , for example bigon , triangle , square , etc .",
    "see figure  [ fig : polygon ] . for technical reasons , it is convenient to allow polygons with a single edge ( a monogon ) .",
    "such polygons may only have edges of the form @xmath116 ( a finite - order generator ) .",
    "monogons are needed to allow repeated copies of @xmath89 to appear on the boundary of a cyclic fatgraph .",
    "figure  [ fig : pinching ] contains an example .    at 240 70 at 110 208 at -40 124 at 80 -20 .,title=\"fig : \" ]    when dealing with these pieces , we will often refer to finite - order or infinite - order edges , meaning rectangle , group polygon , and polygon edges , as appropriate .",
    "a _ cyclic fatgraph over @xmath4 _ is a surface with a simplicial structure such that every @xmath40-cell has the structure of a rectangle , polygon , or group polygon .",
    "if a @xmath28-simplex is the boundary of two @xmath40-cells , then one of the @xmath40-cells must be a polygon and the other must be a rectangle or group polygon , and the simplex of intersection must be an edge in both , and the labels must match , e.g. @xmath117 is glued to @xmath112 .",
    "that is , a cyclic fatgraph over @xmath4 is a surface built out of rectangles and group polygons by gluing them together around polygons along edges .",
    "see figure  [ fig : cyclic_fatgraph ] . in our drawings ,",
    "including figure  [ fig : cyclic_fatgraph ] , note that where the rectangles and group polygons appear to attach directly to each other , there is technically a bigon ( polygon with two sides ) joining them .",
    "this technicality is useful to avoid special cases in the definition and for some definitions to follow .    at 430 0 at 398 60 at 534 106 at 530 189 at 455 189 at 453 104 at 587 244 at 550 198 at 336 226 at 338 160 at 335 130 at 334 65 at 217 190 at 140 188 at 140 106 at 222 103 at 4 243 at 53 205 at 213 -5 at 233 59   from example  [ ex : fundamental_domain ] . recall that @xmath119 for all @xmath106 , so each group polygon has four sides .",
    "this fatgraph has boundary @xmath120 .",
    "there are seven bigons and two triangles .",
    ", title=\"fig : \" ]      given a cyclic fatgraph @xmath121 , we define the _ spine _ @xmath122 of @xmath121 , which is a directed graph on @xmath121 , to be the graph dual to the cellulation of @xmath121 by the polygons , rectangles , and group polygons in @xmath121 . since there is a vertex for each piece , we call the vertices polygon , rectangle , or group polygon vertices as appropriate",
    ". orient the edges of @xmath122 so that every edge between a polygon vertex and a group polygon vertex is directed away from the polygon vertex .",
    "orient the two edges incident to a rectangle vertex so that their orientation agrees with the orientation on the side of the rectangle labeled by @xmath87 ( and against the orientation on the side labeled by @xmath95 ) .",
    "note that @xmath121 deformation retracts to its spine .",
    "see figure  [ fig : spine ] .    at 136 61 at 133 96 at 101 95 at 101 60 at 63 60 at 62 96 at 31 96 at 28 61 at 115 22 at 98 46 at 163 118 at 143 100 at 96 103 at 82 126 at 22 101 at 8 121 at 65 -2 at 51 21       let @xmath15 be an orbifold realizing the group @xmath4 with core graph @xmath102 , and suppose that we have a cyclic fatgraph @xmath121 over @xmath4 , as defined above .",
    "there is a natural simplicial map from the spine @xmath122 of @xmath121 to the core graph @xmath102 defined by sending the polygon , rectangle , and group polygon vertices of @xmath122 to the @xmath8 , @xmath87 , and @xmath89 vertices of @xmath102 , and by mapping the edges so as to preserve orientation .",
    "let @xmath123 be the map deformation retracting @xmath121 to its spine , and then mapping @xmath122 to @xmath102 as above .",
    "we call this map the _ fatgraph map _ induced by @xmath121 . note that @xmath124 is a map of a surface with boundary into the orbifold @xmath15 .",
    "though we will not need it , we remark that every map of a surface factors through a fatgraph map :    [ lem : factor_through_fatgraph ] after compression and homotopy , every surface map @xmath17 factors as @xmath125 , where @xmath126 is a homeomorphism between @xmath16 and a cyclic fatgraph over @xmath4 , and @xmath124 is the fatgraph map .",
    "in  @xcite , the lemma is not stated exactly in this way , but it follows from the proof . in the case of free groups , this lemma is due to culler @xcite .",
    "the main result of this section is that there is a local combinatorial certificate that the map @xmath124 is homotopic to an immersion with geodesic boundary .",
    "we now describe this certificate .",
    "recall that @xmath16 is the set of generators @xmath127 of @xmath4 , and @xmath97 is the cyclic order on @xmath16 determined by the realization @xmath15 .",
    "let us be given a polygon @xmath128 in a cyclic fatgraph over @xmath4 .",
    "the edges of @xmath128 have an intrinsic cyclic order , so the set of labels on the edges of @xmath128 is a cyclically ordered multiset .",
    "the cyclically ordered multiset of labels of the edges of @xmath128 will be denoted by @xmath129 .",
    "for example , if the edges of @xmath128 are @xmath130 $ ] , then the set of labels is the cyclically ordered multiset @xmath131 $ ] .",
    "we call a polygon _ small _ if @xmath132 is actually a set ; i.e. if each label appears at most once in @xmath129 . notice that if @xmath128 is small , then @xmath133 , so there are two cyclic orders on @xmath129 : its intrinsic cyclic order and the cyclic order given by @xmath97",
    ".    there is a special polygon , the _ standard @xmath15 polygon _ , which is the polygon such that @xmath134 , i.e. every outgoing edge appears exactly once , and in the cyclic order @xmath97 .",
    "the standard @xmath15 polygon is the largest polygon whose boundary is compatibly ordered with @xmath97 .",
    "[ prop : immersion ] let @xmath121 be a cyclic fatgraph over @xmath4 with induced surface map @xmath123 .",
    "suppose that every boundary component of @xmath121 is realized in @xmath15 by a geodesic loop ( is not finite order or parabolic ) .",
    "if every polygon @xmath128 in @xmath121 has the property that @xmath128 is small and the cyclic order on @xmath129 is compatible with @xmath97 , then @xmath124 is homotopic to an immersion with geodesic boundary .",
    "cyclic orders are useful for many geometric things ; see @xcite , chapter  2 and @xcite , section  4.2.5 .",
    "proposition  [ prop : immersion ] is essentially a generalization of the ideas in @xcite , section  4.2.5 to orbifolds .",
    "consider figure  [ fig : spine ] , the spine of a fatgraph and figure  [ fig : core_graph_covering_tree ] , the covering tree of the core graph of a realization .",
    "the map @xmath124 retracts the fatgraph to the spine and then sends the spine inside the core graph . in the universal cover ,",
    "then , the covering map @xmath135 sends the universal cover of the spine inside the covering tree of the core graph .",
    "the hypothesis of proposition  [ prop : immersion ] makes sure that this covering map preserves the cyclic orders of the edges around each vertex and is thus an embedding .",
    "since the universal cover of the fatgraph retracts to the spine and the spine is embedded , proposition  [ prop : immersion ] is quite natural .",
    "the proof is a formalization of this .    in order to prove that @xmath124 is homotopic to an immersion",
    ", we must show that the lift @xmath136 is homotopic to an immersion , where the homotopy of @xmath135 must be equivariant with respect to @xmath137 .",
    "write @xmath138 , where @xmath139 is the deformation @xmath140 , and @xmath24 is the simplicial graph map @xmath141 . let us consider what happens to the stars of the vertices under the graph map @xmath24 .",
    "there are three kinds of vertices in @xmath142 , covering rectangle , group polygon , and polygon vertices .",
    "the stars of rectangle vertices are @xmath40-valent and map to the @xmath40-valent stars of the @xmath87 vertices in @xmath143 .",
    "a group polygon vertex @xmath144 corresponding to @xmath89 has valence @xmath90 and maps to a vertex @xmath49 covering a torsion vertex @xmath89 of the core graph .",
    "the vertices @xmath144 and @xmath49 each have @xmath90 incoming edges , and because the star of @xmath144 covers the @xmath28-valent star of the projection of @xmath49 with degree @xmath90 , the @xmath90-valent star of @xmath144 is identified with the @xmath90-valent star of @xmath49 .",
    "this uses the fact that the graphs are embedded in the surfaces @xmath121 and @xmath15 ; there is no angle structure on an abstract graph , but there is for the graphs @xmath122 and @xmath102 , so we know how the cone points are covered .    finally , consider the star of a polygon vertex @xmath144 in @xmath142 , which maps to a vertex @xmath49 covering @xmath8 in @xmath102 . by assumption ,",
    "the multiset of incident edge labels at @xmath144 is a subset of the incident edges at @xmath49 ( the polygon is small ) , and they are compatibly cyclically ordered ( the cyclic order on the polygon is compatible with @xmath97 ) .",
    "therefore , the star of @xmath144 is embedded in the star of @xmath49 .",
    "we conclude that the map @xmath24 embeds the tree @xmath142 inside the tree @xmath143 in a way that preserves the cyclic order on every vertex .",
    "if the reader is familiar with pleated surfaces ( see @xcite ) , it is enough now to note that this fact about graphs implies that the pleated surface representative of the map @xmath124 has only positive simplices and is therefore an immersion . if not , we explain",
    ". give @xmath121 a hyperbolic structure with geodesic boundary and decompose it into ideal triangles ( which will necessarily be spun around some closed geodesics in @xmath121 ) .",
    "these ideal triangles lift to ideal triangles in the universal cover @xmath145 .",
    "because @xmath139 is a deformation retraction to a tree , the image of an ideal triangle @xmath78 under @xmath139 is an infinite tripod @xmath146 , and because @xmath24 embeds the tree @xmath142 inside @xmath143 , the image of @xmath78 under @xmath147 is an infinite tripod @xmath148 .",
    "now , @xmath24 sends the three ideal points at the ends of @xmath146 to the three ideal points at the ends of @xmath148 . and because @xmath24 preserves the cyclic order on every vertex , the cyclic orders on these triples of points are the same .",
    "therefore , the image of @xmath78 under @xmath135 is an infinite tripod whose ends have the same cyclic order as the ends of @xmath78 .",
    "there is a geodesic ideal triangle @xmath149 in @xmath150 with the same ends as @xmath151 , and we can homotope @xmath135 on @xmath78 to map @xmath78 to @xmath149 . because the order on the ends is preserved ,",
    "this map is orientation - preserving .",
    "do this homotopy on lifts of each ideal triangle in @xmath121 , and extend the homotopy equivariantly over @xmath145 .",
    "the result is an equivariant homotopy of @xmath135 to a map which takes ideal triangles to ideal triangles in an orientation - preserving way ; that is , it is an immersion taking geodesic boundary to geodesic boundary .    while proposition  [ prop : immersion ] may seem technical , it is straightforward to apply in practice .",
    "consider the orbifold @xmath15 from example  [ ex : fundamental_domain ] with fundamental group @xmath4 .",
    "figure  [ fig : spine ] shows a cyclic fatgraph @xmath121 over @xmath4 .",
    "a simple check at the polygons shows that the cyclic orders are @xmath152 $ ] , @xmath153 $ ] , @xmath154 $ ] , @xmath155 $ ] , @xmath156 $ ] , @xmath157 $ ] , and @xmath158 $ ] , which are all compatible with @xmath97 .",
    "thus , the map @xmath124 can be straightened to an immersion with geodesic boundary , and in particular , the boundary loops bound an immersed surface .",
    "given a fatgraph , it is easy to check using proposition  [ prop : immersion ] whether the induced surface map is homotopic to an immersion with geodesic boundary .",
    "our goal in this paper is to build fatgraphs ( 1 ) which are homotopic to immersions with geodesic boundary and ( 2 ) which have some given word in the generators as a boundary . in this section ,",
    "we show that relaxing either of this conditions makes the problem trivial .",
    "this section is mainly background and introduction to the methods we will use later .      constructing fatgraphs which satisfy the hypotheses of proposition  [ prop : immersion ]",
    "is quite straightforward .",
    "the proposition requires that the fatgraph be built using only small polygons whose intrinsic cyclic order on edges is compatible with @xmath97 .",
    "so if we simply enumerate all possible polygons satisfying this hypothesis , and all rectangles and group polygons , then we can take any subset of these pieces such that each edge occurs the same number of times in polygons as it does in rectangles and group polygons and then glue these pieces together arbitrarily .",
    "the boundary @xmath26 of @xmath121 has a simplicial structure , and every ( oriented ) @xmath28-simplex in @xmath26 is labeled by a generator inherited from the labels on the pieces of @xmath121 .",
    "if we simply read off the labels as we follow @xmath26 , that tells us the image word @xmath159 in @xmath4 .    at 91 77 at 87 108 at 89 133 at 81 175 at 13 177 at -3 125 at 6 90 at 7 59 at 14 3 at 92 4    at 159 54 at 158 90 at 155 119 at 161 171 at 119 172 at 124 122 at 121 91 at 121 54 at 118 12 at 160 10    at 232 90 at 230 126 at 246 108 at 230 39 at 204 43 at 273 119 at 195 125 at 194 89 at 185 19 at 247 14     into a cyclic fatgraph , we can pair up the letters arbitrarily into rectangles and group polygons .",
    "the group polygon has has two group polygon edges which are glued to monogons , which allows @xmath160 to be part of the boundary . ]    to build a surface map into @xmath15 with a desired boundary loop @xmath49 , which must of course be homologically trivial , we can start with an oriented simplicial circle , with each simplex labeled by a generator , such that the circle reads off @xmath49 . because @xmath49 is homologically trivial",
    ", there are as many instances of @xmath87 as there are of @xmath95 , so we can pair them arbitrarily into rectangles .",
    "similarly , the @xmath89 must come in groups of @xmath90 , so we can group them together to form group polygons . placing polygons at the junctions of the group polygons and rectangles to fill in the holes ,",
    "we produce a cyclic fatgraph @xmath121 over @xmath4 , which comes with the surface map @xmath161 . by construction ,",
    "the boundary of @xmath121 maps to @xmath49 .",
    "this construction yields a surface map bounding any homologically trivial word , or words , in @xmath4 . see figure  [ fig : pinching ] .",
    "we have seen that building a fatgraph satisfying proposition  [ prop : immersion ] is easy , and building a fatgraph with a given boundary is easy . however , the methods to accomplish each goal are very different , and note that if we glue pieces as in section  [ sec : construction_satisfy_immersion ] , it is quite difficult to control what the boundary is , and if we pinch a boundary loop as in section  [ sec : construction_boundary ] , it is quite difficult to control what polygons appear .",
    "the proofs of theorems  [ thm : disk_orbifolds ] and  [ thm : genus_orbifolds ] use section  [ sec : construction_satisfy_immersion ] , but done carefully in a way which controls the boundary .",
    "in this section , we prove our main result , which says that , under some conditions , the product of any word in @xmath4 with a sufficiently high multiple of the boundary word of @xmath15 is a loop which bounds an immersed surface with geodesic boundary in @xmath15 .",
    "first , we state and prove the version for orbifolds whose underlying topological space is a disk .",
    "[ thm : disk_orbifolds ] let @xmath15 be a hyperbolic orbifold whose underlying topological space is a disk and which has at least three orbifold points , of orders @xmath50 .",
    "let @xmath51 be any hyperbolic element , and let @xmath52 be the boundary loop of @xmath15 .",
    "then there exists @xmath53 so that for all @xmath54 , the loop @xmath55 virtually bounds an immersed surface , where @xmath56 .",
    "as mentioned in the introduction , the boundary of the orbifold is actually associated to a conjugacy class in @xmath4 , not a specific word , so taking @xmath55 is not well - defined . however , if we can prove that the theorem holds for any specific representative word in the conjugacy class , then the theorem holds for _ any _ representative , because the effect of conjugating @xmath46 is actually just to change the word @xmath49 .",
    "as discussed in section  [ sec : building_immersed_surfaces ] , our strategy will be to carefully piece together a fatgraph using only polygons allowed by proposition  [ prop : immersion ] in this proof , a _",
    "partial fatgraph _ will be a fatgraph with some edges left unattached .",
    "that is , @xmath40-complex whose cells are fatgraph pieces and whose boundary , an oriented simplicial @xmath28-complex , is allowed to contain @xmath28-simplices which are fatgraph edges .    in the first step ,",
    "we build a partial fatgraph whose boundary contains the desired word @xmath49 , plus some unglued edges . in the second step ,",
    "we describe how taking multiple copies of the partial fatgraph allows us to glue the unglued edges to complete the fatgraph in such a way the there is an integer @xmath162 so that the boundary is multiple loops of the form @xmath163 for integers @xmath91 .",
    "this shows that @xmath164 virtually bounds an immersed surface for some @xmath162 . in the final step ,",
    "we describe how to vary the power @xmath162 to arrive at the result .",
    "let @xmath165 .",
    "without loss of generality , we can assume that @xmath49 has no cyclic cancellation with @xmath46 .",
    "for if it does , we can prepend and append copies of @xmath46 to @xmath49 until there is no longer cyclic cancellation ( @xmath46 has no cancellation with itself ) , and take @xmath49 to be this word .",
    "these extra copies of @xmath46 are subsumed into the @xmath166 in the theorem .",
    "recall that the _",
    "standard @xmath15 polygon _ is the polygon @xmath128 such that @xmath134 . because the underlying space of @xmath15 is a disk , the boundary word is the product of the finite - order generators . by relabeling",
    ", we may assume without loss of generality that @xmath167 ; this implies that the standard @xmath15 polygon has ( cyclically ordered ) boundary @xmath168 $ ] .",
    "this relabeling does nt affect the proof , but it is simpler to think about .",
    "note that when we start to add infinite - order generators , it will _ not _ be true that the arrangement of generators around the standard @xmath15 polygon has the same cyclic order as the boundary word .",
    "* step 1 : * start with a horizontal polygonal line oriented to the left and labeled by @xmath49 , so the leftmost simplex is labeled by the final letter in @xmath49 .",
    "break @xmath49 into runs of a single generator .",
    "since @xmath49 is reduced , any run of @xmath89 will have length less than @xmath90 .",
    "let @xmath169 denote these runs .",
    "for each run @xmath170 , which will be of the form @xmath171 , build a group polygon which is labeled on top by @xmath170 , and on the bottom by @xmath172 copies of @xmath89 .",
    "this group polygon has @xmath173 edges on top in between letters in @xmath170 ; these will be glued to monogons so that @xmath174 appears on the boundary .",
    "there are two edges on the left and right between the ends of @xmath170 and the first and last new copies of @xmath89 .",
    "these will be glued to other parts of the cyclic fatgraph . finally , there are @xmath175 edges on the bottom in between the new copies of @xmath89 . onto all of these edges ,",
    "we attach a copy of the standard @xmath15 polygon .",
    "these polygons have many edges remaining unglued , and we will return to them later .",
    "see figure  [ fig : w_k_partial_fatgraphs ] .      at 15 5 at 33 4 at 55 16 at 64 6 at 96 6 at 105 16 at 186 5 at 203 5   in @xmath176 .",
    "for this example , we let the generators of @xmath4 be @xmath177 of orders @xmath178 , @xmath178 , and @xmath63 , respectively , and we take the cyclic order to be @xmath179 $ ] .",
    "these partial fatgraphs are not glued together yet .",
    "for clarity , we have labeled the unglued polygon edges with a single letter , so e.g. @xmath116 has label @xmath89.,title=\"fig : \" ]    we have one partial fatgraph for every run @xmath170 , and now we will insert a polygon between successive @xmath170 to glue them together . the key is to do this in a way that only uses polygons allowed by proposition  [ prop : immersion ] and will also allow us to ensure that the boundary other than @xmath49 is copies of @xmath46 .",
    "to glue @xmath170 to @xmath180 ( recall @xmath170 is to the right of @xmath180 ) , suppose that @xmath170 is a run of generator @xmath89 and @xmath180 is a run of generator @xmath181 .",
    "let @xmath182 be the polygon whose boundary @xmath183 is the interval in @xmath97 between @xmath181 and @xmath89 .",
    "that is , @xmath183 is a piece of the cyclically ordered set @xmath16 , and @xmath182 is simply the standard @xmath15 polygon with some edges removed so that @xmath89 is followed by @xmath181 .",
    "if @xmath181 is immediately followed by @xmath89 in @xmath97 , then @xmath182 will be a bigon .",
    "now glue every @xmath170 to @xmath180 using @xmath182 in the middle .",
    "the result is a partial cyclic fatgraph , and observe that along the top , we have the word @xmath49 . on the far left and right ends ,",
    "there remain two unglued group polygon edges . on the left ,",
    "build the polygon @xmath184 whose boundary is the interval in @xmath97 between @xmath185 and @xmath186 ; that is , the first edge of @xmath184 is @xmath187 , and the last edge is @xmath188 .",
    "for example , if @xmath189 , then @xmath184 will be degenerate ( a monogon ) .",
    "if @xmath185 follows @xmath186 in @xmath97 , then @xmath184 will be a bigon , and so on .",
    "similarly , build the polygon @xmath190 whose boundary is the interval in @xmath97 between @xmath191 and @xmath192 .",
    "glue @xmath184 and @xmath190 on the left and right , respectively .",
    "call the resulting partial fatgraph @xmath193 .",
    "see figure  [ fig : w_k_glued_up ] .      at -4 42 at 9 26 at 19 6 at 34 5 at 42 26 at 53 28 at 50 14 at 60 5.5 at 76 10.5 at 90 6.5 at 101 16 at 101 30 at 114 30 at 145 31 at 178 30 at 194 25 at 202 5 at 218 4 at 226 26 at 243 34 at 243 49 .",
    "again @xmath116 is labeled by @xmath89.,title=\"fig : \" ]    * step 2 ( the covering trick ) : * at this point , we have the fatgraph @xmath193 , which is composed of group polygons attached around polygons , with some of the polygon edges unglued .",
    "also , all of the polygons have boundary which is an interval in the cyclic order @xmath97 , so in particular all the polygons are small and have boundary cyclic order compatible with @xmath97 . in this step ,",
    "we show how taking multiple copies of @xmath193 makes it possible to glue up all the unglued edges .",
    "consider what the boundary of @xmath193 is .",
    "it is an oriented simplicial @xmath28-complex whose simplices are either labeled sides of group polygons or unglued edges from polygons .",
    "we claim the following ( see figure  [ fig : w_k_glued_up ] ) :      this lemma is really just by construction . recall that the boundary of the standard @xmath15 polygon is the same as the boundary word of @xmath15 , and every polygon in @xmath193 is an interval in @xmath97 .",
    "therefore , for any simplex in @xmath195 which is not part of @xmath49 and is labeled @xmath116 or @xmath89 , the next simplex must be @xmath196 or @xmath197 , with indices modulo @xmath198 . if the simplex in @xmath195 is part of @xmath49 , then by construction it is a labeled side and is followed by the correct next letter .",
    "the special cases of the last letter of @xmath49 and the last letter of @xmath46 before @xmath49 are also correct by construction .",
    "therefore , @xmath194 , as desired .",
    "lemma  [ lem : boundary_with_unglued ] shows that _ if _ the each unglued polygon edge @xmath116 is read as @xmath89 , then the boundary is @xmath164 for some @xmath162 .",
    "but of course this is nt enough  we need to produce a complete fatgraph with real boundary .",
    "the trick is to take multiple copies of @xmath193 and attach group polygons in such a way that the unglued polygon edges are effectively replaced by labeled group polygon sides .",
    "we now explain this trick .                  at 203 53 at 219 51 at 231 56 at 256 57   in figure  [ fig : w_k_glued_up ] .",
    "we take @xmath199 copies of @xmath193 and glue group polygons within the fibers .",
    "this figure shows what happens to the group polygon on the lower right of figure  [ fig : w_k_glued_up ] .",
    "the polygon ( shown on left ) is covered by @xmath199 copies . if we glue in group polygons , note that the boundary has changed from many copies of @xmath200 to many copies of @xmath201.,title=\"fig : \" ]    let @xmath202 be the least common multiple of the @xmath90 , and take @xmath202 copies of @xmath193 .",
    "let @xmath203 be these @xmath202 copies of @xmath193 , and think of @xmath203 as an @xmath202-sheeted cover of @xmath193 .",
    "the fiber over a single unglued edge @xmath116 in @xmath193 is @xmath202 copies of @xmath116 .",
    "attach @xmath204 group polygons to the @xmath202 unglued edges in @xmath203 in the fiber over a single unglued edge in @xmath193 .",
    "each group polygon can be glued to arbitrary edges within the fiber .",
    "do this for every unglued edge in @xmath193 .",
    "we have attached many group polygons to the partial fatgraph @xmath203 .",
    "call the result of attaching these group polygons @xmath121 .",
    "we claim :    [ lem : covering_trick ] the result @xmath121 is a complete fatgraph whose boundary maps to @xmath164 , covering it @xmath202 times , and contains only small polygons whose boundary is compatible with @xmath97 .",
    "every polygon in @xmath121 is a polygon in @xmath193 , which contained only small polygons with boundary compatible with @xmath97 , so the last two conclusions are immediate .",
    "also , @xmath121 is created by gluing group polygons to all the unglued edges in @xmath203 , so it is a complete fatgraph .",
    "so the only question is what the boundary of @xmath121 is . by lemma  [ lem : boundary_with_unglued ] , the boundary of @xmath193 is @xmath164 when we read an unglued edge @xmath116 as the generator @xmath89 , so since @xmath203 is an @xmath202-sheeted cover , the same thing is true for each sheet .",
    "now consider @xmath121 .",
    "it is obtained from @xmath203 by gluing in group polygons within fibers over each unglued polygon edge in @xmath203 .",
    "so by construction , the boundary of @xmath121 is obtained from @xmath205 by taking the boundary loops in @xmath203 and replacing each unglued polygon edge @xmath116 with a group polygon side labeled by @xmath89 which runs between sheets of @xmath203 .",
    "thus @xmath206 consists of an @xmath202-degree cover of the loop @xmath164 .",
    "the @xmath202-sheeted cover @xmath203 of @xmath193 has @xmath202 separate boundary components .",
    "when we glue on group polygons to obtain @xmath121 , each occurrence of an unglued edge @xmath116 is replaced by the labeled side @xmath89 , as we desire",
    ". however , this labeled side transits between two different sheets of @xmath203 .",
    "therefore , the final boundary of @xmath121 will look _ locally _ as if we simply replaced @xmath116 with @xmath89 , but some of the boundary loops may have been joined together .",
    "the total degree remains @xmath202 .",
    "for example , to perform this `` covering trick '' on the partial fatgraph @xmath193 in figure  [ fig : w_k_glued_up ] , we would compute the least common multiple of the @xmath90 @xmath178 , @xmath178 , and @xmath63 , which is @xmath199 .",
    "take @xmath199 copies of the partial fatgraph to get @xmath203 .",
    "now for any unglued polygon edge in @xmath193 , glue group polygons to the unglued edges in @xmath203 in the fiber .",
    "see figure  [ fig : covering_trick ] .",
    "because @xmath121 contains only polygons which are compatible with the cyclic order @xmath97 , we can apply proposition  [ prop : immersion ] to show that @xmath124 is homotopic to an immersion with geodesic boundary , so @xmath164 virtually bounds an immersed surface .",
    "this completes step @xmath40      we need more than the fact that @xmath164 virtually bounds an immersed surface : theorem  [ thm : disk_orbifolds ] is a stability result , and we need to show that there is @xmath166 such that for all @xmath207 , we have that @xmath55 virtually bounds an immersed surface , where @xmath208 . in step @xmath40 , we showed that for _ some _ @xmath162 , @xmath164 virtually bounds an immersed surface . in this step , we show that we can actually achieve any desired @xmath162 , as long as it is large enough and @xmath209 .",
    "consider again the partial fatgraph @xmath193 from step @xmath40 . by lemma  [ lem : boundary_with_unglued ] ,",
    "if we read the unglued polygon edge @xmath116 as @xmath89 , then the boundary of @xmath193 is @xmath164 for some @xmath162 . for the current step ,",
    "we need there to be some unglued polygon edge .",
    "this is almost certainly the case , but if not , append a copy of @xmath46 onto @xmath49 , which forces some unglued edges .",
    "so without loss of generality , we assume there is an unglued polygon edge , and also without loss of generality , we assume it is @xmath187 .",
    "we will now re - use notation and define a new @xmath203 for this step .",
    "let @xmath203 be the partial fatgraph obtained from @xmath193 by attaching a @xmath185-group polygon onto the unglued polygon edge @xmath187 and attaching standard @xmath15 polygons onto all unglued edges of this new group polygon .",
    "note that we have added @xmath210 new polygons , and , reading unglued edges @xmath116 as @xmath89 , the boundary of @xmath203 is @xmath211 .",
    "also note that the newly attached standard @xmath15 polygons have every edge unglued _ except _ @xmath185 .",
    "so for any @xmath106 _ except _ @xmath212 , we can repeat this procedure to obtain a fatgraph whose boundary is @xmath213 ( when unglued edges are read as generators ) .",
    "see figure  [ fig : adding_group_polygons ] .      at -4 130 at 10 112 at 18 92 at 33.5 91 at 41 110 at 52 115 at 50.5 101 at 60 92 at 76 97 at 71.5 76 at 69.5 42 at 84 39 at 96 53 at 112 30 at 125 4 at 140 5 at 144 26 at 161.5 39 at 159 51 at 136 54 at 121 69 at 106 81 at 101 102 at 100 115 at 114 116.5 at 144 117.5 at 178 116 at 194 112 at 203 90 at 216 89 at 226 111 at 243 120 at 243 135   to the boundary .",
    "notice that upon adding the first group polygon , the newly introduced standard @xmath15 polygons have every possible unglued edge _ except _",
    "@xmath214 , to which we attached the first group polygon.,title=\"fig : \" ]    therefore , by repeating this procedure , we can obtain a partial fatgraph whose boundary ( with @xmath116 read as @xmath89 ) is @xmath215 , where @xmath216 is any integer of the form @xmath217 , where the successive @xmath218 are _ distinct_. by lemma  [ lem : number_theory ] , there is some @xmath166 such that for all @xmath54 , every integer @xmath219 is of this form .",
    "now take this partial fatgraph with boundary @xmath215 and perform step 2 ( the covering trick ) to get a real , complete fatgraph satisfying proposition  [ prop : immersion ] .",
    "this shows that @xmath215 virtually bounds an immersed surface , and completes the proof .",
    "[ lem : number_theory ] given integers @xmath220 with @xmath221 and with @xmath222 , there is some @xmath53 so that for all @xmath223 , there is an integer sequence @xmath224 so that @xmath225 for all @xmath106 and so that @xmath226 .",
    "we call the sequence @xmath227 a _",
    "run_. the idea in constructing the sequence @xmath228 is to start with a repeating sequence of runs @xmath229 and take away a single number from every other run",
    ". the resulting list will have distinct adjacent pairs .",
    "therefore , we can rewrite @xmath244 where every term @xmath245 is non - negative .",
    "start with a sequence of @xmath246 runs .",
    "if we could remove @xmath247 copies of @xmath105 from the sequence , for each @xmath105 , then @xmath248 for the resulting sequence @xmath249 would have the correct value @xmath250 .",
    "but we must be certain that when these copies of @xmath105 are removed , the adjacent elements in the sequence remain distinct . to accomplish this ,",
    "we can remove a single @xmath105 from every other run .",
    "we need to know that we have enough runs available , i.e. we need at least @xmath251 runs for every @xmath105 . but from our bound on @xmath252 , we have at least @xmath239 runs , so we can remove the indices as desired , and the proof is complete .",
    "[ rem : generalization_of_cl ] theorem  [ thm : disk_orbifolds ] generalizes @xcite , theorem  3.1 . the situation of interest in @xcite is @xmath45 orbifolds , which have only two orbifold points , and as stated , theorem  [ thm : disk_orbifolds ] requires @xmath178 orbifold points . however , in the special case of two orbifold points with one point of order @xmath40 , lemma  [ lem : number_theory ] can be avoided , and theorem  [ thm : disk_orbifolds ] still goes through .",
    "the proof of theorem  [ thm : disk_orbifolds ] is essentially a combinatorialization of the argument in  @xcite .",
    "[ thm : genus_orbifolds ] let @xmath15 be a hyperbolic orbifold with one boundary component and with genus at least @xmath28 .",
    "let @xmath34 with @xmath57 , and let @xmath58 be hyperbolic so that some power of @xmath49 is homologically trivial",
    ". then there exists @xmath59 so that for all @xmath54 , the loop representing @xmath60 virtually bounds an immersed surface with geodesic boundary .    as with the disk orbifold proof , in step @xmath28",
    ", we construct a partial fatgraph with some unglued polygon edges .",
    "the proof becomes different in step @xmath40 : we can not use a covering trick to fill in unglued polygon edges for infinite - order generators .",
    "therefore , we exhibit small partial fatgraph modules which can be inserted to fill in these edges",
    ". then we use the covering trick to fill in all the finite - order edges .",
    "after relabeling , we can assume that the cyclic order on the infinite order generators is such that the boundary has the standard form @xmath253\\cdots [ z_{i-2 } , z_{i-1}]$ ] ( if there are finite - order generators , they are inserted within this cyclic boundary word ) .",
    "therefore , the cyclic order is @xmath254 $ ] ( with finite - order generators inserted at appropriate positions ) .",
    "note that the cyclic order is nt the same as the boundary word",
    ". it will be useful to be able to refer to the letters in @xmath49 and the boundary word @xmath46 , but their lengths will not matter .",
    "therefore , we use @xmath191 and @xmath255 to refer to the first and last letters in @xmath49 , and similarly for @xmath46 .",
    "* step 1 : * perform step  1 as in the proof of theorem  [ thm : disk_orbifolds ] to get a partial cyclic fatgraph @xmath193 which has boundary @xmath49 along the top and many unglued polygon edges .",
    "there are two situations not covered by those instructions , as follows .",
    "first , each infinite order generator @xmath87 is in a run @xmath170 by itself , and the fatgraph piece we use for this run is simply a rectangle .",
    "second , when building the polygon to be glued onto the far left , we use the polygon which is the interval in @xmath97 between @xmath256 and @xmath255 , and the polygon for the far right is the interval between @xmath191 and @xmath257 . in the proof of theorem  [ thm : disk_orbifolds ] , we used @xmath185 and @xmath192 in place of @xmath256 and @xmath257 because in the disk orbifold case we know that the boundary word is exactly @xmath258 . see figure  [ fig : w_k_genus_glued_up ] for an example of @xmath193 .                            at 286 42 at 304 50 at 307 68 at 285 73   for the word @xmath259 in an orbifold of genus @xmath28 with one orbifold point of order @xmath178 , with cyclic order @xmath260 $ ] and thus boundary @xmath261 .",
    "for simplicity , we denote the edges @xmath117 and @xmath116 by @xmath87 and @xmath89 , respectively .",
    "this picture omits the replacement of @xmath49 by @xmath262 , as described at the end of step  @xmath28 , because it is not necessary to do that to have enough unglued polygon edges in this example.,title=\"fig : \" ]    for reasons which become apparent in step  @xmath178 , we need for there to be sufficiently many unglued polygon edges . therefore , we assume that we have appended a copy of @xmath263 onto @xmath49 .",
    "since the polygon inserted between letters in @xmath46 is a complete standard @xmath15 polygon , and @xmath46 has length at least @xmath63 , we ensure that there are at least four polygon edges @xmath117 and four polygon edges @xmath118 for each @xmath105 . for simplicity , we will not show this in our example pictures .      in this step ,",
    "we describe how to fill in the unglued polygon edges associated with the infinite - order generators .",
    "we do this by building small partial fatgraph `` modules '' which can be glued in to complete @xmath193",
    ".    it will be convenient to be able to refer to subwords of the boundary word @xmath46 .",
    "denote by @xmath264 and @xmath265 the subword of the ( cyclic ) word @xmath46 between ( not including ) @xmath87 and @xmath95 , and @xmath95 and @xmath87 , respectively .",
    "for example , if @xmath261 , then @xmath266 and @xmath267 .    now let @xmath128 be the standard @xmath15 polygon , whose boundary is @xmath97 .",
    "for each infinite - order generator @xmath87 , attach the rectangle @xmath111 to both polygon edges @xmath117 and @xmath268 . call this partial fatgraph @xmath269 .",
    "note that if we read unglued finite - order polygon edges @xmath116 as @xmath89 , then @xmath270 ; i.e. , the boundary of @xmath269 is the boundary word of @xmath15 .    for each @xmath105",
    ", define a partial fatgraph @xmath271 as follows .",
    "detach one edge of the rectangle @xmath111 from the polygon @xmath128 , and glue a duplicate copy of @xmath111 to the polygon edge which is now unglued . that is , instead of there being a single rectangle with both edges glued to @xmath128 , there are now two rectangles , each of which is glued to one of the two edges @xmath117 and @xmath118 in @xmath128 .",
    "see figure  [ fig : w_k_modules ] .",
    "[ lem : fatgraph_modules ] the partial fatgraph @xmath271 has two boundary components . when finite - order polygon edges @xmath116 are read as @xmath89 , the @xmath28-simplicies in the boundary are labeled @xmath273 and @xmath274 .",
    "consequently , there are no infinite - order unglued polygon edges , and there are exactly the two unglued rectangle edges @xmath112 and @xmath113 .",
    "this is just by construction ; figure  [ fig : w_k_modules ] illustrates it .",
    "suppose we build a fatgraph @xmath275 by attaching the bigon @xmath276 $ ] to the two unglued rectangle edges in @xmath271 .",
    "then we have effectively taken @xmath269 and replaced the rectangle @xmath111 with two rectangles glued end - to - end .",
    "therefore , the boundary of @xmath275 is @xmath46 with @xmath87 and @xmath95 duplicated .",
    "so the boundary of @xmath275 is @xmath277 .",
    "now remove the bigon to get @xmath271 back from @xmath275 , which cuts the boundary in two at the @xmath278 and @xmath279 and inserts the rectangle edges as claimed .",
    "the partial fatgraphs @xmath271 are the small modules which we will glue onto @xmath193 to fill in the unglued polygon edges .",
    "each @xmath271 has the two rectangle edges @xmath112 and @xmath113 .",
    "so we must verify that @xmath193 contains the same number of @xmath117 as @xmath118 for each @xmath105 .",
    "the purpose of the this lemma is to verify that we can attach the partial fatgraphs @xmath271 to @xmath193 to fill in all the unglued polygon edges .",
    "so it is interesting that to _ prove _ this lemma , we will attach different partial fatgraphs to @xmath193 and then make some observations about the result .",
    "it is also possible to prove the lemma with some technical combinatorial counting , but this method is more intuitive .",
    "note that the infinite - order generators naturally come in pairs , one for each genus . for each @xmath105 , let @xmath280 denote the index with which @xmath105 is paired .",
    "so @xmath281 if @xmath282 , and @xmath283 if @xmath284 .",
    "consider the partial fatgraph @xmath271 .",
    "it has two unglued rectangle edges @xmath112 and @xmath113 .",
    "because the fundamental group of @xmath271 embeds in @xmath4 , we will refer to elements of @xmath285 by their images in @xmath4 . because we have assumed the standard form for the generators , a loop freely homotopic to @xmath286 in @xmath271 is separating , and the two boundary components of @xmath271 are in different connected components of the complement of the loop @xmath286 .",
    "see figure  [ fig : small_modules ] .",
    "thus the loop @xmath286 cuts @xmath271 into two surfaces , which we will refer to as @xmath289 and @xmath290 .",
    "the surface @xmath289 has two boundary components : the loops @xmath291 and @xmath292 , and the surface @xmath290 has the two boundaries @xmath293 and @xmath294 .",
    "we use @xmath292 and @xmath294 to refer to the positive and negative powers of @xmath286 because which power goes with @xmath289 and @xmath290 depends on the parity of @xmath105 .",
    "this does nt matter ; the key fact is that @xmath289 and @xmath290 each have a @xmath286 boundary loop , and the loops on @xmath289 and @xmath290 have opposite signs .",
    "so for each @xmath105 , we have the partial fatgraphs @xmath289 and @xmath290 , which have the single unglued rectangle edge @xmath112 and @xmath113 , respectively .",
    "build a new fatgraph @xmath295 by attaching a copy of @xmath296 to every unglued infinite - order polygon edge @xmath297 in @xmath193 .",
    "each @xmath296 has only a single unglued rectangle edge , so there is no obstruction to attaching them to every unglued edge . because the @xmath296 have no unglued infinite - order polygon edges , there are no infinite - order unglued polygon edges in @xmath295 , so @xmath295 contains only labeled sides of rectangles and unglued finite - order polygon edges .",
    "and by the construction of @xmath193 ( because every polygon in @xmath193 is an interval in @xmath97 ) , if we read each finite - order edge @xmath116 as @xmath89 , the boundary of @xmath295 is of the form @xmath298 for integers @xmath162 , @xmath299 , and @xmath300 .",
    "the @xmath103 boundary components arise from the small boundary loops in the @xmath296 . because the only unglued edges in @xmath295 are finite - order edges",
    ", the boundary of @xmath295 has a finite power which is homologically trivial . and",
    "since @xmath49 and @xmath46 both have finite powers which are homologically trivial , the sum @xmath301 must be homologically trivial , so it must be that @xmath302 for each @xmath105 . but these integers count the number of copies of @xmath289 and @xmath290 which we attached to @xmath193 , so we conclude that the number of unglued edges @xmath117 is equal to the number of unglued edges @xmath118 , as desired .    by lemma  [ lem : equidistributed_edges ] , the partial fatgraph @xmath193 contains the same number of edges @xmath117 as @xmath118 for each @xmath105 .",
    "call this number @xmath300 .",
    "therefore , it is possible to attach @xmath300 copies of @xmath271 to @xmath193 for each @xmath105 .",
    "call the resulting fatgraph @xmath203 . by construction",
    ", @xmath203 has a single boundary component , which , if @xmath116 is read as @xmath89 , is @xmath164 for some @xmath162 .",
    "by applying step  @xmath40 of theorem  [ thm : disk_orbifolds ] , the covering trick , to @xmath203 we can produce a complete fatgraph @xmath121 whose boundary covers @xmath164 . by construction @xmath121",
    "contains only polygons whose boundaries are intervals of @xmath97 , so they are small and compatible with @xmath97 .",
    "therefore , the existence of @xmath121 shows that @xmath164 virtually bounds an immersed surface in @xmath15 .",
    "figure  [ fig : w_k_genus_glued_up_with_as ] shows the result @xmath203 of attaching all the @xmath271 to the partial fatgraph @xmath193 shown in figure  [ fig : w_k_genus_glued_up ] .",
    "this completes step  @xmath40 .                                at 371 148 at 370 212 at 396 182 at 423 134 at 379 234   to the partial fatgraph in figure  [ fig : w_k_genus_glued_up ] . for clarity ,",
    "two regions of the fatgraph are drawn separately , and dotted lines indicate where they should be placed .",
    "patience reveals that the boundary is , in fact , @xmath303.,title=\"fig : \" ]      as with the proof of theorem  [ thm : disk_orbifolds ] , we have shown that @xmath164 virtually bounds an immersed surface for some @xmath162 , but we need to show the stability result that there is @xmath166 such that for all @xmath54 , @xmath60 virtually bounds an immersed surface .    to prove this",
    ", we will construct some new partial fatgraph `` modules '' which can replace some of the @xmath271 and have the effect of increasing the power of @xmath46 in the boundary . as it turns out ,",
    "it is quite simple to increase the power of @xmath46 by _ two _ , which would prove the theorem for _ even _ @xmath22 . it is more complicated to increase the power by one ; this requires taking a cover .",
    "first , we show how to increase the power of @xmath46 by ( a multiple of ) two .",
    "this requires exhibiting a new kind of partial fatgraph , which we will denote by @xmath304 .",
    "recall that @xmath280 is the generator paired with @xmath105 , so that @xmath305^{\\pm 1}$ ] appears in @xmath46 , possibly with finite - order generators inserted . given @xmath91 even ,",
    "build @xmath304 as follows ( see figure  [ fig : increase_by_2k ] ) : take @xmath306 copies of the standard @xmath15 polygon , indexed by @xmath307 for @xmath308 . for",
    "every infinite - order generator @xmath309 with @xmath310 and @xmath311 , add @xmath306 copies of the rectangle @xmath312 , each one connected at both edges to a single polygon @xmath307 .",
    "next , add @xmath313 copies of @xmath111 .",
    "one copy has rectangle edge @xmath112 connected to @xmath190 ; one copy has rectangle edge @xmath113 connected to @xmath182 ; and the remaining copies connect @xmath307 to @xmath314 . finally , add @xmath306 copies of @xmath315 , as follows : for each @xmath316 divisible by @xmath40 , add two copies of @xmath315 which connect @xmath307 to @xmath314 . by construction",
    ", the boundary of @xmath304 has two components , with labels @xmath317 and @xmath291 .",
    "note the power @xmath318 in the first boundary component is the _ cyclic _ word @xmath318 ; it may be cyclically rotated from the original choice of a cyclic representative that we called @xmath46 .",
    "this is correct , since if we insert a copy of @xmath46 in the middle of a power of @xmath46 , we must cyclically shift the inserted copy , depending on the location it is inserted , so that it aligns correctly .",
    "see figure  [ fig : increase_by_2k ] .          at 71 8 at 59 28 at 74 74 at 78 97 at 171 74 at 166 92 .",
    "the boxed area is duplicated as desired to produce @xmath319 .",
    "note that replacing one of the @xmath320 with @xmath319 increases the power of @xmath46 in the boundary by @xmath91.,title=\"fig : \" ]    note that the boundary of @xmath304 is exactly that of @xmath271 , except one of the boundaries has @xmath91 copies of @xmath46 inserted .",
    "thus , if we replace one of the copies of @xmath271 for some @xmath105 with @xmath304 in step  @xmath40 , the resulting fatgraph @xmath121 has boundary @xmath321 .",
    "the fact that we can insert a copy of @xmath304 requires that we have at least two unglued polygon edges .",
    "recall we ensured this in step  @xmath28 .",
    "this shows that @xmath321 virtually bounds an immersed surface for any even @xmath91 .",
    "finally , we show how to build a fatgraph with boundary @xmath323 for any even @xmath91 .",
    "consider again @xmath193 , and recall that @xmath193 has at least four unglued polygon edges @xmath324 and @xmath325 ( it has these unglued edges for every @xmath105 ; we choose @xmath62 arbitrarily ) .",
    "glue copies of @xmath271 to all unglued polygon edges for every index except @xmath62 , and glue a copy of @xmath320 to one of the four pairs of unglued edges for index @xmath62 , leaving three pairs .",
    "next , attach a copy of @xmath319 to one of the pairs , leaving two pairs .",
    "call the resulting fatgraph @xmath295 .",
    "note @xmath295 has exactly four unglued polygon edges : two @xmath324 , which we denote by @xmath326 and @xmath327 and two @xmath325 , which we denote by @xmath328 and @xmath329 .",
    "let @xmath322 be the partial fatgraph which is two copies of @xmath295 , and think of @xmath322 as a double cover of @xmath295 . each @xmath330 has two edges covering it , which we denote by @xmath330 and @xmath331 .",
    "we are going to attach two copies of a fatgraph module @xmath275 to the unglued edges in @xmath322 .",
    "the module @xmath275 is similar to @xmath332 , and is created from @xmath332 by removing the @xmath333 rectangle between polygons @xmath62 and @xmath28 in the construction of @xmath332 and replacing it with two rectangles , one glued to polygon @xmath62 and one glued to polygon @xmath28 .",
    "this leaves four unglued rectangle edges .",
    "it is far easier to understand by consulting figure  [ fig : add_one ] .",
    "though this picture is for a specific example , @xmath275 in any other case is formed by just adding finite - order edges and genus loop pairs at locations on the standard polygons ; it does nt actually change the form of the module .",
    "take two copies of @xmath275 , as shown in figure  [ fig : add_one ] , and attach the edges to @xmath322 as labeled to produce a fatgraph @xmath334 .",
    "note @xmath334 has no unglued infinite - order polygon edges , and reading @xmath116 as @xmath89 , we find that the boundary of @xmath334 is two copies of @xmath323 .",
    "[ ] at 21 62 [ ] at 53 62 [ ] at 76 62 [ ] at 101 62   after attaching two copies of @xmath275 to @xmath322 .",
    "the two levels indicate the two sheets of @xmath322 as a cover of @xmath295 .",
    "this picture shows why this particular way of attaching the edges adds one copy of @xmath46 in the same place on both boundaries of the cover.,title=\"fig : \" ]    figure  [ fig : cover_schematic ] shows a schematic of how the boundary behaves after attaching the two copies of @xmath275 .",
    "the exact arrangement of edges used in attaching @xmath275 to @xmath322 is important : we need a fatgraph whose boundary is two copies of @xmath323 .",
    "were we to attach differently , we would have a fatgraph whose boundary contained two copies of @xmath49 and many copies of @xmath46 , but the powers of @xmath46 in between the @xmath49 might not be the same . attaching as instructed places the extra copy of @xmath46 in the same place on both sheets of the cover @xmath322 .    now performing the covering trick on @xmath334 produces a fatgraph @xmath121 whose boundary covers @xmath323 , and by construction @xmath121 satisfies proposition  [ prop : immersion ] .",
    "we have now shown that @xmath321 and @xmath323 virtually bound immersed surfaces for every even @xmath91 , so this completes the proof .",
    "when a loop @xmath26 virtually bounds an immersed surface , it means there is an immersed fatgraph with geodesic boundary whose boundary covers @xmath26 with some degree , which we call the _ covering degree _ of @xmath26 .",
    "the proofs of theorems  [ thm : disk_orbifolds ] and  [ thm : genus_orbifolds ] show that the covering degree of @xmath48 depends on the orders of the finite - order generators and is independent of @xmath49 and @xmath22 . in particular , if there are no orbifold points , then the covering degree is either @xmath28 or @xmath40 depending on the parity of @xmath22 .",
    "99 d. calegari , _ faces of the @xmath0 norm ball _ ,",
    "geom . topol .",
    "* 13 * , ( 2009 ) , no .",
    "3 , 13131336 .",
    "d. calegari , _ foliations and the geometry of @xmath178-manifolds _ , oxford mathematical monographs .",
    "oxford university press , oxford , 2007 d. calegari , _ scl _ , msj memoirs , * 20*. mathematical society of japan , tokyo , 2009 d. calegari , _ stable commutator length is rational in free groups _ ,",
    "* 22 * ( 2009 ) , no .",
    "4 , 941961 d. calegari and j. louwsma , _ immersed surfaces in the modular orbifold _ , proc .",
    "* 139 * ( 2011 ) , no . 7 ,",
    "m. culler , _ using surfaces to solve equations in free groups _ , topology * 20 * ( 1981 ) , no .",
    "2 , 133145 . w. thurston , _ the geometry and topology of three - manifolds _ , princeton lecture notes ( 1980 ) .",
    "a. walker , _ stable commutator length in free products of cyclic groups _ ,",
    "exp . math .",
    "* 22 * ( 2013 ) , no .",
    "3 , 282298 ."
  ],
  "abstract_text": [
    "<S> we prove that in any hyperbolic orbifold with one boundary component , the product of any hyperbolic fundamental group element with a sufficiently large multiple of the boundary is represented by a geodesic loop that virtually bounds an immersed surface . in the case </S>",
    "<S> that the orbifold is a disk , there are some conditions . </S>",
    "<S> our results generalize work of calegari - louwsma and resolve a conjecture of calegari . </S>"
  ]
}
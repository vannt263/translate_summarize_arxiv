{
  "article_text": [
    "abs algorithms were introduced by abaffy , broyden and spedicato ( 1984 ) , to solve linear equations first in the form of the _ basic abs class _ , later generalized as the _ scaled abs class _ and applied to linear least squares , nonlinear equations and optimization problems , see e.g. the monographs by abaffy and spedicato ( 1989 ) and zhang , xia and feng ( 1999 ) , or the bibliography by nicolai and spedicato ( 1997 ) listing over 300 abs papers . in this paper",
    "we consider some new results obtained in the framework of project analisi numerica e matematica computazionale , including the performance of several codes of abspack , a fortran package under development .    for later reference , we recall the scaled abs algorithm for solving the following determined or underdetermined linear system , where @xmath0 is arbitrary and @xmath1    @xmath2 or @xmath3    * the scaled abs algorithm *    ( a ) : :    give @xmath4    arbitrary ,  @xmath5 nonsingular arbitrary ,    @xmath6 arbitrary nonzero . set @xmath7 .",
    "( b ) : :    compute the residual @xmath8 . if    @xmath9 stop ( @xmath10 solves the problem . )",
    "otherwise compute @xmath11 .",
    "if    @xmath12 , then go to ( c ) .",
    "if @xmath13 and    @xmath14 , then set    @xmath15 ( the    @xmath16-th equation is redundant ) and go to ( f ) . otherwise    stop ( the system has no solution ) .",
    "( c ) : :    compute the search vector @xmath17 by    @xmath18 where    @xmath19 is arbitrary save for the condition    @xmath20 ( d ) : :    update the estimate of the solution by    @xmath21 ( e ) : :    update the matrix @xmath22 by    @xmath23    where @xmath24 is arbitrary save for the condition    @xmath25 ( f ) : :    if @xmath26 , stop ( @xmath27 solves the    system ) . otherwise give @xmath28 arbitrary    linearly independent from @xmath29 .",
    "increment    @xmath16 by one and go to ( * b * ) .",
    "matrices @xmath22 , which are generalizations of ( oblique ) projection matrices , have been named _",
    "abaffians _ at the first international conference on abs methods ( luoyang , china , 1991 ) .",
    "there are alternative formulations of the scaled abs algorithms , e.g. using vectors instead of the square matrix @xmath22 , with possible advantages in storage and number of operations . in a next section",
    "we will show how they can be used to generate infinite iterative methods .",
    "the choice of the parameters @xmath30 determines particular methods .",
    "the _ basic abs class _ is obtained by taking @xmath31 as the @xmath16-th unit vector in @xmath32 .",
    "we recall some properties of the scaled abs class , assuming that @xmath33 has full rank .",
    "* define @xmath34 and @xmath35",
    ". then @xmath36 and @xmath37 . *",
    "the vectors @xmath38 are zero if and only if @xmath39 are respectively linearly dependent from @xmath40 . *",
    "define @xmath41 and @xmath42 .",
    "then the implicit factorization @xmath43 holds , where @xmath44 is nonsingular lower triangular .",
    "hence , if @xmath45 , one obtains a semiexplicit factorization of the inverse , with @xmath46 @xmath47 for several choices of @xmath48 the matrix @xmath49 is diagonal , hence formula ( 8) gives a fully explicit factorization of the inverse as a byproduct of the abs solution of a linear system . * the general solution of system ( 1 ) can be written as follows , with @xmath50 arbitrary @xmath51 * the abaffian can be written in term of the parameter matrices as @xmath52    letting @xmath53 , one can show that the parameter matrices @xmath54 are admissible ( i.e. condition ( 7 ) is satisfied ) iff the matrix @xmath55 is strongly nonsingular ( i.e. it is lu factorizable ) .",
    "this condition can be satisfied by exchanges of the columns of @xmath48 or @xmath56 .",
    "if @xmath57 is strongly nonsingular and we take , as is done in all algorithms so far considered , @xmath58 , then condition ( 4 ) is also satisfied .",
    "analysis of the conditions under which @xmath57 is not strongly nonsingular leads , when dealing with krylov space methods in their abs formulation , to a characterization of the topology of the starting points that can produce a breakdown ( either a division by zero or a vanishing search direction ) and to several ways of curing it , including those considered in the literature .",
    "two subclasses of the scaled abs class and particular algorithms are now recalled .",
    "( a ) : :    the _ conjugate direction subclass_. this class is obtained by setting    @xmath59 .",
    "it is well defined under the condition    ( sufficient but not necessary ) that @xmath33 is symmetric and    positive definite .",
    "it contains the abs versions of the choleski , the    hestenes - stiefel and the lanczos algorithms .",
    "this class generates all    possible algorithms whose search directions are    @xmath33-conjugate .",
    "if @xmath60 , the vector    @xmath61 minimizes the energy ( @xmath33-weighted    euclidean ) norm of the error over @xmath62    and the solution is approached monotonically from below in the energy    norm .",
    "( b ) : :    the _ orthogonally scaled subclass_. this class is obtained by setting    @xmath63 .",
    "it is well defined if @xmath33 has    full column rank and remains well defined even if @xmath64 is    greater than @xmath65 .",
    "it contains the abs formulation of the    qr algorithm ( the so called _ implicit qr algorithm _ ) , the gmres and    the conjugate residual algorithms .",
    "the scaling vectors are orthogonal    and the search vectors are @xmath66-conjugate . if    @xmath60 , the vector @xmath61 minimizes the    euclidean norm of the residual over    @xmath67 and the solution is monotonically    approached from below in the residual norm . it can be shown that the    methods in this class can be applied to overdetermined systems of    @xmath68 equations , where in @xmath65 steps they    obtain the solution in the least squares sense .",
    "( c ) : :    the _ optimally stable subclass_. this class is obtained by setting    @xmath69 , the inverse disappearing in the actual    recursions .",
    "the search vectors in this class are orthogonal .",
    "if    @xmath60 , then the vector @xmath61 is the    vector of least euclidean norm over    @xmath67 and the solution is approached    monotonically from below in the euclidean norm .",
    "the methods of    gram - schmidt and of craig belong to this subclass .",
    "the methods in this    class have minimum error growth in the approximation to the solution    according to a criterion by broyden .",
    "( d ) : :    the _ huang algorithm _ is obtained by the choices    @xmath70 , @xmath71 .",
    "a mathematically equivalent , but numerically    more stable , formulation is the so called _ modified huang algorithm _    ( @xmath72 and    @xmath73 ) . huang algorithm    generates search vectors that are orthogonal and identical with those    obtained by the gram - schmidt procedure applied to the rows of    @xmath33 . if @xmath60 , then @xmath61 is    the solution with least euclidean norm of the first @xmath16    equations .",
    "the solution @xmath74 with least euclidean norm of    the whole system is approached monotonically and from below by the    sequence @xmath10 .",
    "( e ) : :    the _ implicit lu algorithm _ is given by the choices    @xmath75 .",
    "it is well defined iff    @xmath33 is regular ( i.e. all principal submatrices are    nonsingular ) .",
    "otherwise column pivoting has to be performed ( or , if    @xmath76 , equation pivoting ) .",
    "the abaffian has the    following structure , with @xmath77    @xmath78 .",
    "\\eqno{(12)}\\ ] ] implying that the matrix    @xmath79 is unit upper triangular , so that the implicit    factorization @xmath80 is of the lu type , with units    on the diagonal .",
    "the algorithm requires for @xmath81 ,     @xmath82 multiplications plus lower order terms , the same    cost of classical lu factorization or gaussian elimination .",
    "storage    requirement for @xmath83 requires at most @xmath84    positions , i.e. half the storage needed by gaussian elimination and a    fourth that needed by the lu factorization algorithm ( assuming that    @xmath33 is not overwritten ) .",
    "hence the implicit lu algorithm    has same arithmetic cost but uses less memory than the most efficient    classical methods .",
    "( f ) : :    the _ implicit lx algorithm _ , see spedicato , xia and zhang ( 1997 ) , is    defined by the choices    @xmath85 , where    @xmath86 is an integer , @xmath87 , such    that @xmath88 by a general property of    the abs class for @xmath33 with full rank there is at least one    index @xmath86 such that    @xmath88 for stability reasons we select    @xmath86 such that @xmath89 is    maximized .",
    "this algorithm has the same overhead and memory requirement    as the implicit lu algorithm , but does not require pivoting .",
    "its    computational performance is also superior and generally better than    the performance of the classical lu factorization algorithm with row    pivoting , as available for instance in lapack or matlab , see mirnia    ( 1996 ) .",
    "therefore this algorithm can be considered as _",
    "the most    efficient general purpose linear solver not of the strassen type_. the    implicit lx algorithm has also very important applications in a    reformulation of the simplex method for the lp problem , see zhang , xia    and feng ( 1999 ) , where it leads to a reduction of storage up to a    factor 8 and of multiplications up to one order for problems where    there is a small number of degrees of freedom , with respect to    implementations based upon the classical lu factorization .",
    "one of our main results has been the derivation of abs methods for linear diophantine equations .",
    "the abs algorithm determines if the diophantine system has an integer solution , computes a particular solution and provides a representation of all integer solutions .",
    "it is a generalization of a method proposed by egervary ( 1955 ) for the particular case of a homogeneous system .",
    "let @xmath90 be the set of all integers and consider the diophantine linear system of equations @xmath91    it is intriguing that while thousands of papers have been written concerning nonlinear , usually polynomial , diophantine equations in few variables , the general linear system has attracted much less attention .",
    "the single linear equation in @xmath65 variables was first solved by bertrand and betti ( 1850 ) .",
    "egervary was probably the first author dealing with a system ( albeit only the homogeneous one ) .",
    "several methods for the nonhomogeneous system have recently been proposed based mainly on reduction to canonical forms .",
    "we recall some results from number theory .",
    "let @xmath92 and @xmath93 be integers .",
    "if there is integer @xmath94 so that @xmath95 then we say that @xmath92 divides @xmath93 and write @xmath96 , otherwise we write @xmath97 . if @xmath98 are integers , not all being zero , then the greatest common divisor ( @xmath99 ) of these numbers is the greatest positive integer @xmath100 which divides all @xmath101 , @xmath102 and we write @xmath103 .",
    "we note that @xmath104 and that @xmath100 can be written as an integer linear combination of the @xmath101 , i.e. @xmath105 for some @xmath106 .",
    "one can show that @xmath100 is the least positive integer for which the equation @xmath107 has an integer solution .",
    "now @xmath100 plays a main role in the following    * fundamental theorem of the linear diophantine equation *    in order to find the general integer solution of the diophantine equation @xmath108 , the main step is to solve @xmath109 , where @xmath110 , for a special integer solution .",
    "there exist several algorithms for this problem .",
    "the basic step is the computation of @xmath100 and @xmath111 , often done using the algorithm of rosser ( 1941 ) , which avoids a too rapid growth of the intermediate integers , and which terminates in polynomial time , as shown by schrijver ( 1986 ) .",
    "the scaled abs algorithm can be applied to diophantine equations via a special choice of its parameters , originating from the following considerations and theorems .",
    "suppose @xmath10 is an integer vector . since @xmath112 , then @xmath61 is integer if @xmath113 and @xmath17 are integers .",
    "if @xmath114 , then @xmath113 is an integer .",
    "if @xmath22 and @xmath115 are respectively an integer matrix and an integer vector , then @xmath116 is also an integer vector .",
    "assume @xmath22 is an integer matrix . from ( 6 ) ,",
    "if @xmath117 divides all the components of @xmath118 , then @xmath119 is an integer matrix .",
    "conditions for the existence of an integer solution and determination of all integer solutions of the diophantine system are given in the following theorems , generalizing the fundamental theorem , see esmaeili , mahdavi - amiri and spedicato ( 1999 ) , or fodor ( 1999 ) for a different proof under somewhat less general conditions .",
    "we can now state the scaled abs algorithm for diophantine equations .",
    "* the abs algorithm for diophantine linear equations *    1 .",
    "choose @xmath120 , arbitrary , @xmath121 , arbitrary unimodular .",
    "let @xmath122 .",
    "2 .   compute @xmath123 and @xmath124 .",
    "3 .   _ if _ ( @xmath125 and @xmath126 ) _ then _ let @xmath127 , @xmath128 , @xmath129 and _ go to _ step ( 5 ) ( the @xmath16th equation is redundant ) . _ if _ ( @xmath125 and @xmath130 ) _ then _ stop ( the @xmath16th equation and hence the system is incompatible ) .",
    "@xmath131 compute @xmath132 and @xmath116 , where @xmath133 is an arbitrary integer vector satisfying @xmath134 . _",
    "if _   @xmath135 _ then _ stop ( the system is integerly inconsistent ) , _ else _ compute @xmath136 let @xmath137 and update @xmath22 by @xmath138 where @xmath139 is an arbitrary integer vector satisfying @xmath140 .",
    "if _ @xmath141 _ then _ stop ( @xmath27 is a solution ) _ else _ let @xmath142 and _ go to _ step ( 2 ) .",
    "it follows from theorem 1 that if there exists a solution for the system ( 13 ) , then @xmath143 , with arbitrary @xmath144 , provides all solutions of ( 13 ) .",
    "egervary s algorithm for homogeneous diophantine systems corresponds to the choices @xmath145 and @xmath146 , for all @xmath16 .",
    "egervary claimed , without proof , that any set of @xmath147 linearly independent rows of @xmath148 form an integer basis for the general solution of the system .",
    "we have shown by a counterexample that egervary s claim is not true in general ; we have also provided an analysis of conditions under which @xmath64 rows in @xmath148 can be eliminated .",
    "the generalized implicit lu  ( gilu )  subclass is defined by taking @xmath149 and @xmath150 arbitrary nonsingular .",
    "the gilu subclass is well defined iff the matrix @xmath151 is strongly nonsingular , where @xmath152 .",
    "the well definiteness condition involves the matrix @xmath153 .",
    "@xmath154 can be interpreted as a right scaling or right conditioning operator on @xmath33 , acting in the same way on the different rows of @xmath33 .",
    "if @xmath33 is full rank but not regular , the well definiteness condition can be satisfied by simply taking @xmath150 as a suitable permutation matrix . by this choice",
    "lu factorization with column pivoting is imbedded in the gilu subclass .",
    "it can also be shown that all sequences @xmath10 generated by the basic abs class can be obtained a suitable choice of @xmath150 in the gilu subclass .",
    "the given parameter choices imply the following structure for the abaffian , @xmath155 \\eqno{(14)}\\ ] ] where @xmath156 is full rank .",
    "the total number of multiplications is no more than @xmath157 for @xmath45 , a substantial saving over algorithms in the basic abs class which may require @xmath158 multiplications , after the parameters are given .",
    "the gilu subclass is related to a representation of the abs class given in abaffy and spedicato ( 1989 ) in terms of @xmath159 vectors as a generalization of a method proposed by sloboda ( 1978 ) .",
    "in such a representation one takes @xmath160 and @xmath150 arbitrary , assuming that the feasible parameters @xmath115 s are known initially .",
    "then the search vector can be written in the form @xmath161 where @xmath162 and the vectors @xmath163 are updated , for @xmath164 , by @xmath165    the relation between the gilu subclass and the representation in terms of @xmath166 vectors is given by the following    further analysis shows that the matrix @xmath150 needs not be given explicitly at the initial step of the algorithm .",
    "the @xmath16-th row of @xmath150 can be given just at the @xmath16-th step .",
    "it can be considered as a vector parameter ( right scaling parameter ) , arbitrary save that the matrix @xmath167 must be nonsingular , where @xmath168 is the matrix comprising the first @xmath16 columns of @xmath154 .",
    "therefore this formulation shows that all right preconditioners can be imbedded in the abs class , right preconditioning being just equivalent to a change in the initial matrix @xmath150 .",
    "the kt ( kuhn - tucker ) equations are the following special linear system , related to the optimality conditions when minimizing a quadratic function with hessian @xmath169 subject to the linear equality constraint @xmath170 @xmath171       \\left (      \\begin{array}{l }      p \\\\ z      \\end{array }      \\right )     =      \\left (      \\begin{array}{l }      g \\\\ c      \\end{array }      \\right ) \\eqno{(15)}\\ ] ]    if @xmath172 is nonsingular , the coefficient matrix is nonsingular iff @xmath173 is nonsingular .",
    "usually @xmath172 is nonsingular , symmetric and positive definite , but this assumption , required by several classical solvers , is not necessary for the abs solvers .",
    "to derive abs methods using the structure of system ( 15 ) , observe that ( 15 ) is equivalent to the two subsystems @xmath174 @xmath175 consider the general solution of @xmath176 in the abs form , with @xmath50 arbitrary @xmath177 the parameters used to construct @xmath178 and @xmath148 are arbitrary , hence ( 18 ) defines a class of algorithms .    since the kt equations have a unique solution , there is a @xmath179 which makes @xmath180 the unique @xmath65-dimensional subvector defined by the first @xmath65 components of the solution of ( 15 ) . by multiplying @xmath181 on the left by @xmath148",
    "we obtain the equation @xmath182 which does not contain @xmath111 .",
    "now there are two possibilities for determining @xmath180 :    ( a1 ) : :    consider the system formed by ( 19 ) and ( 17 ) . such a system is solvable    but overdetermined . since @xmath183 ,    @xmath64 equations are recognized as dependent and",
    "are    eliminated in step ( b ) of any abs algorithm applied to this system ,    which then computes the unique solution .",
    "( a2 ) : :    in equation ( 19 ) replace @xmath180 by the general solution ( 18 )    to give @xmath184 the above system can be solved by any abs method for a    particular solution @xmath179 , @xmath64 equations being    again removed at step * ( b ) * of the abs algorithm as linearly    dependent .",
    "once @xmath180 is determined , one can determine @xmath111 in two ways , namely :    ( b1 ) : :    solve by any abs method the overdetermined compatible system    @xmath185 by removing at step ( b ) of the abs algorithm the    @xmath147 dependent equations .",
    "+ ( b2 ) : :    let @xmath186 be the matrix whose columns    are the search vectors generated on the system @xmath187 .",
    "now @xmath188 , with @xmath49 nonsingular lower    diagonal .",
    "multiplying equation ( 21 ) on the left by @xmath189    we obtain a triangular system , defining @xmath111 uniquely    @xmath190    extensive numerical testing has evaluated the accuracy of the above abs algorithms for kt equations for certain choices of the abs parameters ( corresponding to the implicit lu algorithm with row pivoting and the modified huang algorithm ) .",
    "the methods have been tested against the method of aasen and methods using the lu and the qr factorization .",
    "the experiments have shown that some abs methods are the most accurate , in both residual and solution error ; moreover some abs algorithms are cheaper in storage and in overhead , up to one order , especially for the case when @xmath64 is close to @xmath65 .",
    "in particular two methods based upon the implicit lu algorithm not only have turned out to be more accurate , especially in residual error , than the method of aasen and the method using qr factorization via houselder matrices , but are also cheaper in number of operations ( the method of aasen has a lower storage for small @xmath64 but a higher storage for large @xmath64 ) .    in many interior point methods",
    "the main computational cost is to compute the solution for a sequence of kt problems where only @xmath172 , which is diagonal , changes .",
    "in such a case the abs methods , which initially work on the matrix @xmath191 , which is unchanged , have an advantage , particularly when @xmath64 is large , where the dominant cubic term decreases with @xmath64 and disappears for @xmath45 , so that the overhead is dominated by second order terms .",
    "again numerical experiments show that some abs methods are more accurate than the classical ones .",
    "it is common , in particular in optimization , to find systems of matrix equations @xmath192 where operation @xmath193 is defined by @xmath194tr@xmath195 . we can write systems ( 23 ) , with obvious definition of @xmath196 , as @xmath197 where @xmath198 has the following form , with @xmath199 for @xmath200 @xmath201 .        \\eqno{(25)}\\ ] ]    problem ( 24 ) is a linear system in the space of matrices and the associated projection operators are matrices whose elements are matrices in @xmath202 .",
    "this observation led us to consider a linear space denoted by @xmath203 and study its linear algebra .",
    "the isomorphisms between @xmath202 and @xmath204 , between @xmath203 and @xmath205 allow to establish abs algorithms to solve ( 24 ) , to generalize the huang algorithm and implicit lu algorithm and to define other special algorithms .",
    "quasi - newton matrices satisfying linear relations ( for example , symmetry and sparsity ) can be described in the considered matrix form and can be solved by the proposed matrix abs algorithm .",
    "the abs method for finding a solution @xmath206 , of system ( 24 ) is as follows , the symbol @xmath207 indicating transposition in the matrix space . *",
    "the matrix abs algorithm *    step 1 : :    give @xmath208 , set @xmath209 step 2 : :    compute @xmath210 and @xmath211 .",
    "step 3 : :    if @xmath212 go to step 4 ; if @xmath213 and    @xmath214 set    @xmath215 and go to step 7    if @xmath216 ; otherwise stop .",
    "if @xmath217 and    @xmath218 stop , the system ( 24 ) is incompatible .",
    "step 4 : :    compute @xmath219 by    @xmath220 where @xmath221 is arbitrary save    that @xmath222 step 5 : :    update the approximation of the solution by    @xmath223 if @xmath224 stop ; @xmath225 solves    the system .",
    "step 6 : :    update the matrix @xmath226 by    @xmath227/w^k \\bullet ( { \\cal h}^k \\circ a^k )    \\eqno{(28)}\\ ] ] where @xmath228 is arbitrary save    that @xmath229 step 7 : :    increment the index @xmath230 by one and goto step 2",
    ".    properties of the matrix abs method generalize properties of the scaled abs class , albeit proofs are not always obvious , see spedicato , xia and zhang ( 1999 ) .",
    "we just recall that the general solution of ( 24 ) can be expressed as follows , with @xmath231 arbitrary @xmath232 there are natural generalizations of the huang and the implicit lu algorithms in the abs class .",
    "huang matrix algorithm allows to construct solutions to the quasi - newton equation @xmath233 where @xmath234 and @xmath235 when solving the nonlinear system of equations @xmath236 , @xmath237 when minimizing the unconstrained function @xmath238 .",
    "equation ( 30 ) can be solved also under the additional condition that some elements of the solution take prescribed values , by which way we can introduce the conditions of sparsity , symmetry and positive definiteness .",
    "when @xmath65 is large , both storage and number of operations may be too large for an implementation of abs methods using explicitly the abaffians . one can develop methods with lower storage and operations by working with formulations of abs methods that use vectors and then using restart or truncation .",
    "this approach leads to loss of termination and generates iterative methods .",
    "here we describe one such class , which is derived from the following formulation of abs methods in terms of @xmath230 vectors at the @xmath239th step , due originally to bodon , see abaffy and spedicato ( 1989 ) , and where we take @xmath240 to be multiple of each other . * the bodon - abs vector algorithm *    @xmath241 * let * @xmath242 be arbitrary .",
    "let @xmath243 and @xmath244 be arbitrary    @xmath245 nonsingular .",
    "@xmath245 * for * @xmath246 to @xmath65    @xmath247    @xmath248 * if * @xmath249 then    @xmath250    @xmath251 * for * @xmath252 to @xmath253    @xmath254    @xmath251 * end *    @xmath255    @xmath248 * else *    @xmath251 @xmath256    @xmath248 * endif *    @xmath257    @xmath258    @xmath245*end *    the above algorithm leads to iterative methods either via restart or via truncation . here",
    "we consider only truncation .",
    "if @xmath64 is the number of available storage vectors , then we keep only information from the last @xmath64 iterations , i.e. we replace all iterations from @xmath252 to @xmath253 by iterations from @xmath259 to @xmath253 .",
    "strategies where the kept vectors are not necessarily the last @xmath64 vectors may of course be considered .",
    "the matrix @xmath150 should require low storage , hence we take @xmath260 .",
    "parameters @xmath261 should be linearly independent and parameters @xmath262 feasible ( no division by zero ) .    * algorithm abs(m ) : the truncated bodon - abs vector algorithm *    @xmath241 * let * @xmath242 be arbitrary .",
    "@xmath245 give the integer @xmath263 .",
    "@xmath245 * do * @xmath264 , until convergence    @xmath247    @xmath248 * if * @xmath249 then    @xmath265    @xmath266    @xmath251 * for * @xmath267 to @xmath253    @xmath254    @xmath251 * end *    @xmath255    @xmath248 * else *    @xmath251 @xmath268    @xmath248 * endif *    @xmath257    @xmath258    @xmath245*end do *    if @xmath269 one can show that the truncated implicit lu , huang and implicit qr algorithm generate respectively the gauss - seidel , the kaczmarz and the de la garza methods . for a comparison of storage and operations requirements with other well - know iterative methods see spedicato and li ( 1999 ) .",
    "one can prove that algorithm abs(@xmath64 ) is well - defined if , letting @xmath270 and @xmath271 , where @xmath272 , then @xmath273 is strongly nonsingular for all @xmath230 .    without loss of generality , we can define the scaling parameters by @xmath274 where @xmath275 is a symmetric , positive definite matrix .",
    "the following choices for @xmath275 define , in the original scaled abs class , the three subclasses considered in section 1 and require a low storage for large sparse systems : @xmath276 ( the optimally scaled subclass ) ; @xmath277 ( the orthogonally scaled subclass ) ; @xmath278 , for @xmath279 , ( the conjugate direction subclass ) .",
    "algorithm abs@xmath280 with the parameter choice ( 31 ) has variational properties , related to those of the original abs class , namely that @xmath281 minimizes the error @xmath275-weighted euclidean norm over a linear variety spanned by the last @xmath64 search vectors .",
    "one can also show that the truncated generalized conjugate direction algorithm of dennis and turner ( 1987 ) can be obtained by special choices of the parameters in algorithm abs(@xmath64 ) . from this equivalence",
    "it follows that orthomin@xmath282 , orthodir@xmath282 and gmres(@xmath283 are special cases of abs(@xmath64 ) .",
    "the convergence of abs(@xmath64 ) at a linear rate can be proved by requiring that the angle between @xmath284 and the gradient @xmath285 of the @xmath286weighted error norm be uniformly bounded away from @xmath287 .    .",
    "_ suppose that there exists @xmath288 such that for the search vectors generated by algorithm abs(@xmath64 ) with choice ( 31 ) one has @xmath289 for all @xmath230 .",
    "then the sequence @xmath290 converges to @xmath291 and satisfies @xmath292 where @xmath293 is defined by the ratio of the largest to the smallest eigenvalues of @xmath275 . _",
    "the abspack project aims at producing a mathematical package for solving linear and nonlinear systems and optimization problems using the abs algorithms . the project will take several years for completion , in view of the substantial work needed to test the alternative ways abs methods can be implemented ( via different linear algebra formulations of the process , different possibilities of reprojections , different possible block formulations etc . ) and of the necessity of comparing the produced software with the established packages in the market ( e.g. matlab , linpack , lapack , ufo ... ) .",
    "it is expected that the software will be documented in a forthcoming monograph and willl be made available to general users .    at the present state of the work",
    "fortran 77 implementations have been made of several versions of the following abs algorithms for solving linear systems :    1 .",
    "the huang and the modified huang algorithms in two different linear algebra versions of the process , for solving determined , underdetermined and overdetermined systems , for a solution of least euclidean norm 2 .",
    "the implicit lu and implicit lx algorithm for determined , underdetermined and overdetermined linear systems , for a solution of basic type 3 .",
    "the implicit qr algorithm for determined , underdetermined and overdetermined linear systems , for a solution of basic type 4 .   the above algorithms for some structured problems ( including banded and block angular matrices ) 5 .   an abs algorithm proposed by adib and mahdavi - amiri ( 1999 ) equivalent to a block - two abs method 6 .",
    "abs versions of the gmres method , some requiring less storage 7 .   several abs methods for kt equations .",
    "for a full presentation of the above methods and their comparison with nag , lapack , linpack and ufo codes see bodon , luksan and spedicato ( 2000 ) , bodon and spedicato ( 2000a , b ) .",
    "some results are presented in the appendix . there",
    "the columns refer respectively to : the problem , the dimension , the algorithm , the relative solution error ( in euclidean norm ) , the relative residual error in euclidean norm ( i.e. ratio of residual norm over norm of right hand side ) , the computed rank and the time in seconds .",
    "computations have been performed in double precision on a digital alpha workstation with machine zero about @xmath294 .",
    "all test problems have been generated with integer entries or powers of two such that all entries are exactly represented in the machine and the right hand side can be computed exactly , so that the given solution is an exact solution of the problem as it is represented in the machine .",
    "comparison is given with some lapack and linpack codes , including those based upon singular value decomposition ( _ svd _ ) and rank revealing qr factorization ( _ gqr _ ) .",
    "analysis of all obtained results indicates :    1 .",
    "modified huang is generally the most accurate abs algorithm and compares in accuracy with the best lapack solvers based upon singular value factorization and rank revealing qr factorization ; also the estimated ranks are usually the same .",
    "2 .   on problems",
    "whose numerical estimated rank is much less than the dimension , one of the versions of modified huang is much faster than the lapack codes using svd or rank revealing qr factorization , even more than a factor 100 .",
    "this is due to the fact that once an equation is recognized as dependent it does not contribute to the general overhead in abs algorithms .",
    "modified huang is generally faster and more accurate than other abs methods and classical methods on kt equations .",
    "it should be noted that the performance of the considered abs algorithms in term of times could be improved by developing block versions , as it is the case for the lapack codes , a work presently in progress .",
    "additional work done in the framework of the project , not described here in detail , has involved the following topics .",
    "* improvement of the performance of newton method via a special truncation approach , see deng and wang ( 1998 ) . * critical review of variable metric methods for unconstrained optimization with discussion of the abs applications in this field , see luksan and spedicato ( 1998 ) .",
    "* analysis of the relations between the abs methods and the classical method of averaging functional corrections , see gredzhuk and petrina ( 1998 ) .",
    "* development of indefinitely preconditioned truncated newton methods for large sparse equality constrained nonlinear programming problems , see luksan and vlcek ( 1998 ) .",
    "* computation and update of inertias of kkt matrices for use in quadratic programming , see zhang ( 1999 ) .",
    "* further applications of the implicit lx algorithm to the simplex method for the lp problem , see spedicato and xia ( 1999 ) .",
    "the field of abs methods is now mature from a theoretical point of view , albeit there are exciting possibilities for applications to new fields , e.g. the eigenvalue problems .",
    "we expect that the completion of the project abspack will provide a useful new instrument for users of mathematical software .",
    "2 abaffy j. and spedicato e. , abs projection algorithms : mathematical techniques for linear and nonlinear equations , ellis horwood , chichester , 1989 abaffy j. , broyden c.g . and",
    "spedicato e. , a class of direct methods for linear systems , numerische mathematik 45 , 361 - 376 , 1984 adib m. and mahdavi - amiri n. , a new abs - based approach for solving linear systems with a rank two update of the abaffian , preprint , sharif university of technology , tehran , 1999 bertrand i. and betti g. , trait lmentaire d algebre , 1850 bodon e. and spedicato e. , numerical experiments with block abs methods for linear systems , to appear , 2000a bodon e. and spedicato e. , numerical experiments with the abs - gmres method , to appear , 2000b bodon e. , luksan l. and spedicato e. , numerical performance of an abs package for linear systems , to appear , 2000 deng n. and wang z. , newton method can be beaten , report dmsia 98/9 , university of bergamo , 1998 dennis j. and turner k. , generalized conjugate directions , linear algebra and its applications 88/89 , 187 - 209 , 1987 egervary e. , aufloesung eines homogenen linearen diophantischen gleichungsystems mit hilf von projektormatrizen , publ .",
    "debrecen 4 , 481 - 483 , 1955 esmaeili h. , mahdavi - amiri and spedicato e. , solution of diophantine linear systems via the abs methods , report dmsia 99/29 , university of bergamo , 1999 ( submitted to numerische mathematik ) fodor s. , a class of abs methods for diophantine systems of equations , part i , preprint , computer science department , university of economics , budapest , 1999 gredzhuk v. and petrina d. , the abs method and the method of averaging functional corrections , report dmsia 98/8 , university of bergamo , 1998 luksan l. and spedicato e. , variable metric methods for unconstrained optimization , report dmsia 98/7 , university of bergamo , 1998 luksan l. and vlcek j. , indefinitely preconditioned truncated newton method for large sparse equality constrained nonlinear programming problems , report dmsia 98/5 , university of bergamo , 1998 mirnia k. : numerical experiments with iterative refinement of solutions of linear equations by abs methods , report dmsia 32/96 , university of bergamo , 1996 nicolai s. and spedicato e. : a bibliography of the abs methods , oms 8 , 171 - 183 , 1997 rosser j.b . , a note on the linear diophantine equation , amer . math .",
    "monthly 48 , 662 - 666 , 1941 schrijver a. , theory of linear and integer programming , john wiley and sons , 1986 sloboda f. , a parallel projection method for linear algebraic systems , aplic",
    "23 , 185 - 198 , 1978 spedicato e. and li z. , on some classes of iterative abs - like methods for large scale linear systems , 1999 ( to appear ) spedicato e. and xia z. , abs formulation of fletcher implicit lu method for factorizing a matrix and solving linear equations and lp problems , report dmsia 99/1 , university of bergamo , 1999 spedicato e. , xia z. and zhang l. , the implicit lx method of the abs class , optimization methods and software 8 , 99 - 110 , 1997 e. spedicato , z. xia and l. zhang , solving linear matrix equations via the abs class and applications to quasi - newton equation , report dmsia",
    "12/99 , 1999 , ( submitted to linear algebra and its applications ) zhang l. , computing inertias of kkt matrix and reduced hessian via the abs algorithm for applications to quadratic programming , report dmsia 99/7 , university of bergamo , 1999 zhang l. , xia z. and feng e. : introduction to abs methods in optimization , dalian university of technology press , 1999 ( in chinese )           results on determined   linear systems        condition   number : 0.21d+20      idf2     2000      huang2        0.10d+01   0.69d-11     2000    262.00      idf2     2000      mod.huang2    0.14d+01   0.96d-12        4      7.00      idf2     2000      lu lapack     0.67d+04   0.18d-11     2000     53.00      idf2     2000      qr lapack     0.34d+04   0.92d-12     2000    137.00      idf2     2000      gqr lapack    0.10d+01   0.20d-14        3    226.00      idf2     2000      lu linpack    0.67d+04   0.18d-11     2000    136.00        condition number : 0.10d+61      ir50     1000      huang2        0.46d+00   0.33d-09     1000     36.00      ir50     1000      mod.huang2    0.46d+00   0.27d-14      772     61.00      ir50     1000      lu lapack     0.12d+04",
    "0.12d+04      972      7.00      ir50     1000      qr lapack     0.63d+02   0.17d-12     1000     17.00      ir50     1000      gqr lapack    0.46d+00   0.42d-14      772     29.00      ir50     1000      lu linpack    --- break - down ---                          results on overdetermined systems        condition   number : 0.16d+21      idf3     1050   950     huang7        0.32d+04   0.52d-13     950     31.00      idf3     1050   950     mod.huang7    0.14d+04   0.20d-09       2      0.00      idf3     1050   950     qr lapack     0.37d+13   0.83d-02     950     17.00      idf3     1050   950     svd lapack    0.10d+01   0.24d-14       2    145.00      idf3     1050   950     gqr lapack    0.10d+01   0.22d-14       2     27.00         condition number :   0.63d+19      idf3     2000   400     huang7        0.38d+04   0.35d-12     400      9.00      idf3     2000   400     mod.huang7    0.44d+03   0.67d-12       2      0.00      idf3     2000   400     impl.qr5      0.44d+03   0.62d-16       2      0.00      idf3     2000   400     expl.qr       0.10d+01   0.62d-03       2      0.00      idf3     2000   400     qr lapack     0.45d+12   0.24d-02     400      8.00      idf3     2000   400     svd lapack    0.10d+01   0.65d-15       2     17.00      idf3     2000   400     gqr lapack    0.10d+01   0.19d-14       2     12.00           results on underdetermined linear systems        condition number :   0.29d+18      idf2      400 2000     huang2        0.12d-10   0.10d-12     400     12.00      idf2      400 2000     mod.huang2    0.36d-08   0.61d-10       3      1.00      idf2      400 2000     qr lapack     0.29d+03   0.37d-14     400      9.00      idf2      400 2000     svd lapack    0.43d-13   0.22d-14       3     68.00      idf2      400 2000     gqr lapack    0.18d-13",
    "0.24d-14       3     12.00         condition number :   0.24d+19      idf3      950 1050     huang2        0.00d+00   0.00d+00     950     33.00      idf3      950 1050     mod.huang2    0.00d+00   0.00d+00       2      1.00      idf3      950 1050     qr lapack     0.24d+03   0.56d-14     950     17.00      idf3      950 1050     svd lapack    0.17d-14   0.92d-16",
    "2    178.00      idf3      950 1050     gqr lapack    0.21d-14   0.55d-15       2     26.00 ....            condition number :   0.26d+21       idf2     1000   900     mod.huang     0.55d+01   0.23d-14      16     24.00      idf2     1000   900     impl.lu8      0.44d+13   0.21d-03    1900     18.00      idf2     1000   900     impl.lu9      0.12d+15   0.80d-02    1900     21.00      idf2     1000   900     lu lapack     0.25d+03   0.31d-13    1900     62.00      idf2     1000   900     range space   0.16d+05   0.14d-11    1900     87.00      idf2     1000   900     null space    0.89d+03   0.15d-12    1900     93.00          condition number :   0.70d+20       idf2     1200   600     mod.huang     0.62d+01   0.20d-14      17     36.00      idf2     1200   600     impl.lu8      0.22d+07   0.10d-08    1800     44.00      idf2     1200   600     impl.lu9      0.21d+06   0.56d-09    1800     33.00      idf2     1200   600     lu lapack     0.10d+03   0.79d-14    1800     47.00      idf2     1200   600     range space   0.11d+05   0.15d-11    1800     63.00      idf2     1200   600     null space    0.38d+04   0.13d-12    1800    105.00 ...."
  ],
  "abstract_text": [
    "<S> we present the main results obtained during a research on abs methods in the framework of the project analisi numerica e matematica computazionale . </S>"
  ]
}
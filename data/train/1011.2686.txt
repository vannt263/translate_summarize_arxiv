{
  "article_text": [
    "sequential decoding is one method for decoding convolutional codes [ 1 ] . compared to the well - known viterbi algorithm , the computational effort of sequential decoding is adaptive to the signal - to - noise - ratio ( snr ) .",
    "when the snr is relatively high , the computational complexity of sequential decoding is much lower than that of viterbi decoding . additionally , sequential",
    "decoding can decode very long constraint length convolutional codes since its computational effort is independent of the constraint length .",
    "thus , a long constraint length convolutional code can be used to achieve a better error rate performance .",
    "there are mainly two types of sequential decoding algorithms which are known as the stack algorithm [ 2 ] and the fano algorithm [ 3 ] .",
    "the fano algorithm is more suitable for hardware implementations since it does not require extensive sorting operations or large memory as the stack algorithm [ 4][5 ] .",
    "high throughput decoding is of research interest due to the increasing data rate requirement .",
    "the baseband signal processing is becoming more and more power and area hungry .",
    "for example , to achieve the required high throughput , the wirelesshd specification proposes simultaneous transmission of eight interleaved codewords , each encoded by a convolutional code [ 6 ] .",
    "it is straightforward to use eight parallel viterbi decoders to achieve multi - gbps decoding throughput . since sequential",
    "decoding has the advantage of lower hardware complexity and lower power consumption compared to viterbi decoding [ 4][5 ] , we are motivated to consider the usage of sequential decoding in high throughput applications when the snr is relatively high . in a practical implementation of a sequential decoder , an input buffer",
    "is required due to the variable computational effort of each codeword .",
    "the contribution of this work is that the bidirectional fano decoder with an input buffer was modelled by a discrete time markov chain ( dtmc ) and the relationship between the input data rate , the input buffer size and the clock speed of the bfa decoder was established .",
    "the trade - off between the number of bfa decoders and the input buffer size in designing a high throughput parallel bfa decoding system was also presented .",
    "the rest of the paper is organized as follows . in section",
    "ii , the bidirectional fano algorithm is reviewed and the system model is given .",
    "the bfa decoder with an input buffer is analyzed by queuing theory in section iii , and the simulation results are presented in section iv .",
    "section v is about choosing the optimal input buffer size in designing a parallel bfa decoding system , and the conclusions are drawn in section vi .",
    "in the conventional unidirectional fano algorithm ( ufa ) , the decoder starts decoding from state zero . during each iteration of the algorithm ,",
    "the current state may move forward , move backward , or stay at the current state .",
    "the decision is made based on the comparison between the threshold value and the path metric .",
    "if a forward movement is made , the threshold value needs to be tightened .",
    "if the current state can not move forward or backward , the threshold value needs to be loosened .",
    "a detailed flowchart of the fano algorithm can be found in [ 1 ] . in [ 7 ] , a bidirectional fano algorithm ( bfa ) was proposed , in which there is a forward decoder ( fd ) and a backward decoder ( bd ) working in parallel .",
    "both the fd and the bd decode the same codeword from the start state and the end state in the opposite direction simultaneously .",
    "the decoding will terminate if the fd and the bd merge with each other or reach the other end of the code tree .",
    "compared to the conventional ufa , the bfa can achieve a much higher decoding throughput due to the reduction in computational effort and the parallel processing of the two decoders .",
    "a detailed discussion on the bfa can be found in [ 7 ] .",
    "since the computational effort of sequential decoding is variable , an input buffer is used to accommodate the codewords to be decoded . the system model for a bfa decoder with an input buffer",
    "is shown in fig.1 .",
    "it is assumed that there is continuous data stream input to the buffer whose raw data rate is @xmath0 bps .",
    "the length of the input buffer is @xmath1 , which means that it can accommodate up to @xmath1 codewords , in addition to the one the decoder works on .",
    "the clock frequency of the bfa decoder is @xmath2 hz and it is assumed that the bfa decoder can execute one iteration per clock cycle . in the bfa decoding , the number of clock cycles to decode one codeword follows the pareto distribution , and the pareto exponent is a function of the snr and the code rate . a higher snr or a lower code rate results in a higher pareto exponent [ 7 ] .",
    "as shown in fig.1 , there is an overflow notification from the input buffer to the bfa decoder .",
    "the occupancy of the input buffer is observed and the currently decoded codeword will be erased if the input buffer gets full . as a result , the total number of codewords consists of the following : @xmath3 in order to evaluate the performance of a bfa decoder affected by the introduced parameters such as @xmath0 , @xmath2 and @xmath1 , a metric called failure probability ( @xmath4 ) is defined as follows : @xmath5 where @xmath4 is similar to the frame error rate ( @xmath6 ) which is caused by the decoding errors .",
    "the total frame error rate is : @xmath7 in designing the system , @xmath0 , @xmath2 and @xmath1 need to be chosen properly to ensure that : @xmath8 in this paper , @xmath9 is adopted as the target failure probability ( @xmath10 ) . how to choose @xmath0 , @xmath2 and @xmath1 to make a bfa decoder achieve @xmath10 will be discussed next .",
    "the effect of the input buffer has been investigated for iterative decoders such as turbo decoder [ 8 ] and ldpc decoder [ 9]-[11 ] .",
    "the non - deterministic decoding time nature of the bfa is similar to that of turbo decoding and ldpc decoding . a modelling strategy similar to that introduced in",
    "[ 11 ] is used to analyze the bfa decoder with input buffer .",
    "the relationship between the input data rate ( @xmath0 ) , the input buffer size ( @xmath1 ) and the clock speed of the decoder ( @xmath11 ) can be found via simulation .",
    "another way to analyze the system is to model it based on queuing theory .",
    "the bfa decoder with an input buffer can be treated as a * d / g/1/b * queue , in which * d * means that the input data rate is deterministic , * g * means that the decoding time is generic , * 1 * means that there is one decoder and * b * is the number of codewords the input buffer can hold .",
    "the state of the bfa decoder is represented by the input buffer occupancy ( @xmath12 ) when a codeword is decoded , which is measured in terms of branches stored in the buffer .",
    "@xmath13 and @xmath14 have the following relationship : @xmath15,\\ ] ] where @xmath14 is the input buffer occupancy when the @xmath16 codeword is decoded , @xmath17 is the decoding time of the @xmath16 codeword by the bfa decoder and @xmath18 is the length of a codeword in terms of branches . @xmath19 $ ] denotes the operation to get the nearest integer of @xmath20 .",
    "the speed factor of the bfa decoder is defined as the ratio between @xmath2 and @xmath0 [ 1 ] : @xmath21 if @xmath11 is normalized to 1 , eq.(5 ) can be changed to : @xmath22.\\ ] ] the state of the input buffer at time @xmath23 is only decided by the state at time @xmath24 and the decoding time @xmath17 . at the same time , @xmath17 and @xmath25 are _ i.i.d._. as a result , the state of the input buffer is a discrete time markov chain ( dtmc ) .",
    "@xmath17 follows the pareto distribution for the bfa decoding and is in the unit of _ clock cycle / codeword_. the following equation can be used to describe the pareto distribution : @xmath26 where @xmath27 is the minimum decoding time which is @xmath18 clock cycles in the considered model .",
    "the pareto exponent @xmath28 is a function of the snr and the code rate .",
    "fig.2 shows the simulated and approximated ( based on eq.(8 ) ) pareto distributions for both the ufa and the bfa at @xmath29=4db and 5db .",
    "it can be seen that as the snr increases , the pareto exponent increases , and for the same snr the bfa has a higher pareto exponent compared to the ufa . the simulated pareto distribution of @xmath30 , which is more accurate compared to the approximated distribution based on eq.(8 ) ,",
    "will be used in the following analysis . the difference between @xmath14 and @xmath13",
    "is defined as : @xmath31.\\ ] ] fig.3 shows that the total number of states of the input buffer with size @xmath1 is : @xmath32 the state transition diagram is shown in fig.4 . as a result ,",
    "the state transition probability matrix of the input buffer is : @xmath33 where @xmath34 is the state transition probability from @xmath35 to @xmath36 , which can be calculated as follows : @xmath37 where @xmath38 and @xmath39 $ ] .",
    "the value of @xmath40 can be estimated from the simulated distribution of @xmath30 as shown in fig.2 .",
    "the initial state probability ( @xmath24=0 ) of the input buffer is : @xmath41 the steady state probability of the input buffer is then : @xmath42 the failure probability of the decoder can be calculated by : @xmath43 where @xmath44 .",
    "the mean buffer occupancy can be calculated by : @xmath45    = 4db and 5db .",
    "the code rate is @xmath46=1/3.,width=321,height=226 ]",
    "firstly , the semi - analytical results calculated by eq.(15 ) are compared with the simulation results to validate the dtmc based modelling .",
    "the simulation setup is shown in table 1 .",
    "@xmath29=4db was used as an example , at which @xmath47 .",
    "the convolutional code in the simulation was the one used in the wirelesshd specification [ 6 ] .",
    "the input buffer size @xmath1 in the simulation takes the buffer within the bfa decoder into account .",
    "it can be seen from fig.5 that the semi - analytical results are quite close to the simulation results for both the ufa decoder and the bfa decoder , which means that the dtmc based modelling is accurate .",
    "for the input buffer size of @xmath1=10 , the working speed factors of the ufa decoder and the bfa decoder are about @xmath48=14 and @xmath48=3.6 , respectively .",
    "there is about 290% decoding throughput improvement by using the bfa decoder compared to the ufa decoder .",
    "if the input buffer size increases to @xmath1=25 , the working speed factors will become about @xmath48=8.7 and @xmath48=2.9 , respectively , resulting in about 200% decoding throughput improvement . as long as the distribution of @xmath30 is known ,",
    "@xmath4 can be easily obtained for different values of speed factor and input buffer size .",
    "simulation time can be greatly saved if the target @xmath4 is very low ( at high snr ) by using the dtmc based modelling . how to use the dtmc based modelling in designing a high throughput parallel bfa decoding system",
    "will be shown in the next section .",
    ".simulation setup [ cols=\"^,^\",options=\"header \" , ]     the input buffer occupancy distribution for the bfa decoder with @xmath1=10 at different speed factors is shown in fig.6 , which was obtained from eq.(14 ) .",
    "the mean buffer occupancy in percentage calculated by eq.(16 ) is shown in fig.7 . for both @xmath1=10 and @xmath1=25 whose working speed factors are about 3.6 and 2.9 , the mean buffer occupancies are about 17% and 25% , respectively .",
    "the decoding delay for @xmath1=25 is slightly higher than that for @xmath1=10 , while the decoding throughput for @xmath1=25 is higher than that for @xmath1=10 as shown in fig.5 .",
    "vs @xmath48 ) for ufa and bfa at @xmath29=4db , width=321,height=226 ]    = 4db when @xmath1=10,width=321,height=226 ]    = 4db when @xmath1=10 and @xmath1=25,width=321,height=226 ]",
    "unlike the viterbi decoder , it is difficult to use pipelining in designing a high throughput bfa decoder due to the irregular decoding operations and the variable computational effort .",
    "parallel processing is a promising strategy to achieve high throughput bfa decoding at multi - gbps level . in order to achieve a specific decoding throughput , a number of bfa decoders ( @xmath49 )",
    "may need to be paralleled ( as shown in fig.8 ) if a single bfa decoder can not achieve the target average decoding throughput : @xmath50 where @xmath0 is a function of the input buffer size @xmath1 .",
    "the total area of the parallel bfa decoders is : @xmath51 if the area ratio between a bfa decoder ( @xmath52 ) and an input buffer which can hold one codeword ( @xmath53 ) is @xmath54 , eq.(17 ) will become : @xmath55 it can be seen from eq.(19 ) that for a fixed @xmath56 and @xmath57 , the decoding throughput of parallel bfa decoders changes with respect to the input buffer size @xmath1 . the relationship between the input data rate @xmath0 and input buffer size @xmath1 is shown in fig.9 which was obtained by the dtmc based modelling introduced in section iii .",
    "the clock speed of the bfa decoder is assumed to be @xmath11=1ghz .",
    "the normalized throughput with respect to the maximum throughput for different @xmath58 values is shown in fig.10 .",
    "the value of @xmath58 depends on the technology used in hardware implementation .",
    "it can be seen from fig.10 that there is an optimal choice of the input buffer size @xmath1 to maximize the decoding throughput for a fixed area constraint .",
    "for example if @xmath58=16 , the optimal choice of the input buffer size will be 10 .",
    "equivalently , in order to achieve a target decoding throughput , the optimal choice of the input buffer size can minimize the hardware area , which will be explained by the following example .",
    "+   + @xmath59 _ example _ + if the target decoding throughput is @xmath60=1gbps and two input buffer sizes @xmath61=5 and @xmath62=10 are used , according to eq.(17 ) and fig.9 , the number of parallel bfa decoders required are : @xmath63 when @xmath61=5 is used , the total area of the parallel bfa decoders will be : @xmath64 when @xmath62=10 is used , the total area of the parallel bfa decoders will be : @xmath65 if @xmath58=16 , the area reduction by using @xmath62=10 compared to @xmath61=5 will be : @xmath66        = 4db , width=321,height=226 ]     values at @xmath29=4db , width=321,height=226 ]",
    "in this paper , bfa decoder with input buffer was analyzed from the queuing theory perspective .",
    "the decoding system was modelled by a discrete time markov chain and the relationship between the input data rate , the input buffer size and the clock speed of the decoder was established .",
    "the working speed factor of the bfa decoder at each snr can be easily found by the dtmc based modelling .",
    "the dtmc based modelling can be used in designing a high throughput parallel bfa decoding system . the trade - off between the number of bfa decoders and the input buffer size in designing a high throughput parallel bfa decoding system",
    "was discussed as well .",
    "it was shown that an optimal input buffer size can be found for a target decoding throughput under a fixed hardware area constraint .",
    "the authors would like to thank the telecommunications research laboratory ( trl ) of toshiba research europe ltd . and its directors for supporting this work .",
    "r. o. ozdag and p. a. beerel , an asynchronous low - power high - performance sequential decoder implemented with qdi templates , _ ieee transactions on very large scale integration ( vlsi ) systems _ , vol .",
    "975 - 985 , sep . 2006 .",
    "r. xu , t. kocak , g. woodward , k. morris and c. dolwin , bidirectional fano algorithm for high throughput sequential decoding , _ ieee symp . on personal , indoor and mobile radio communications ( pimrc ) _ , tokyo , japan , 2009 ."
  ],
  "abstract_text": [
    "<S> the bidirectional fano algorithm ( bfa ) can achieve at least two times decoding throughput compared to the conventional unidirectional fano algorithm ( ufa ) . in this paper , bidirectional fano decoding </S>",
    "<S> is examined from the queuing theory perspective . a discrete time markov chain ( dtmc ) is employed to model the bfa decoder with a finite input buffer . </S>",
    "<S> the relationship between the input data rate , the input buffer size and the clock speed of the bfa decoder is established . </S>",
    "<S> the dtmc based modelling can be used in designing a high throughput parallel bfa decoding system . </S>",
    "<S> it is shown that there is a trade - off between the number of bfa decoders and the input buffer size , and an optimal input buffer size can be chosen to minimize the hardware complexity for a target decoding throughput in designing a high throughput parallel bfa decoding system . </S>",
    "<S> +    bidirectional fano algorithm , high throughput decoding , queuing theory , sequential decoding . </S>"
  ]
}
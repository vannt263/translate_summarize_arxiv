{
  "article_text": [
    "let @xmath7 be vectors in @xmath8 , and denote @xmath9 by @xmath10 .",
    "a _ simultaneous integer relation _ ( sir ) for @xmath11 is a vector @xmath2 such that @xmath12 , i.e. @xmath3 for @xmath13 . for short ,",
    "we also call @xmath14 an sir for @xmath10 .",
    "when @xmath15 , we say that @xmath14 is an integer relation for @xmath16 .",
    "the problem of detecting integer relations for a rational or real vector is quite old .",
    "historical surveys can be found in @xcite . among these integer relation detecting algorithms , the hjls algorithm @xcite and the pslq algorithm",
    "@xcite have been used frequently .    in the present paper , using the technique to construct the hyperplane matrix in hjls and a generalized method of the matrix reduction from pslq we propose an algorithm sird , which can be used to detect an sir for @xmath17 real vectors .",
    "the cost of our algorithm is at most @xmath5 exact arithmetic operations for detecting an sir for @xmath10 , where @xmath6 represents the least euclidean norm of sirs for @xmath10 .",
    "furthermore , our detecting algorithm sird either always finds an sir for @xmath10 if one exists or proves that there are no sirs for @xmath10 of norm less than a given size .",
    "experimental results show that sird is practical .    in application",
    ", we successfully apply sird to find the minimal polynomial of an algebraic number @xmath18 with degree and height at most @xmath19 and @xmath20 respectively from its an approximation @xmath21 satisfying @xmath22 , and propose the corresponding algorithm mpf , where the minimal polynomial of an algebraic number @xmath23 is the unique primitive polynomial @xmath24 $ ] of least degree such that @xmath25 .",
    "in fact , for @xmath26 from @xmath27 to @xmath19 we run sird with @xmath28 , @xmath29 as its input and then an exact sir for @xmath30 has been detected .",
    "we provide a sufficient controlling on @xmath31 and prove that such an @xmath31 is sufficient to enable an exact sir for @xmath32 and @xmath33 to be also an sir for @xmath34 and @xmath35 , where @xmath31 depends only on @xmath19 and @xmath20 , as in ( [ eq : error - controlling ] ) .",
    "it implies the correctness of mpf and is better than already existing results in @xcite .      in @xcite , j. hastad , b.",
    "just , j. c. lagarias , and c. p. schnorr not only presented the hjls algorithm and the first rigorous proof of a ` polynomial time ' bound for a relation finding algorithm but also proposed a simultaneous relations algorithm ( see @xcite ) , whereas hjls is numerically unstable .",
    "the unstable examples can be found in @xcite . in their draft @xcite , c. rssner and c. p. schnorr studied the case of @xmath36 by using a modified hjls algorithm .",
    "but for the moment , @xcite is still in a preliminary state with some open problems .",
    "the pslq algorithm , together with related lattice reduction schemes such as lll @xcite , was named one of ten `` algorithms of the twentieth century '' by the publication _ computing in science and engineering _ ( see @xcite ) , and is now extensively used in experimental mathematics , with applications such as identification of multiple zeta constants , a new formula for @xmath37 , finding algebraic relations and so on ( see @xcite ) .",
    "moreover , pslq is numerically stable and can be easily generalized to complex number field and hamiltonian quaternion number field ( see @xcite ) , but it is not suitable to detect an sir for several real vectors .",
    "+ the sird algorithm in this paper is to detect an sir for @xmath17 real vectors and can be applied to detect an integer relation in @xmath38 for a complex vector or a hamilton quaternion number vector .",
    "a significant body of experimental data shows that sird is practical and better than the hjls simultaneous relations algorithm .",
    "in fact , the mpf algorithm in this paper is a positive answer to the following interesting question : suppose we are given an approximation to an algebraic number @xmath23 , and two bounds on the degree and the size of the coefficients of its minimal polynomial respectively .",
    "is it possible to infer the minimal polynomial ?",
    "the question was raised , independently , by manuel blum in theoretical cryptography ( see @xcite ) and the last author of this paper in automated reasoning ( see @xcite ) .",
    "the first complete answer to this question , kll algorithm , was presented by r. kannan , a.k .",
    "lenstra and l. lovsz in @xcite by using the celebrated lattice reduction algorithm lll @xcite . in the computer algebra system _",
    "maple _ , the built - in function ` polynomialtools :- minimalpolynomial ( ) ` is a function to find a polynomial of degree @xmath19 ( or less ) with small integer coefficients which has the given approximation @xmath39 of an algebraic number as one of its roots and is based on kll algorithm .",
    "the correctness of the polynomial returned by the built - in function depends on the accuracy of the approximation ( see _ maple _ s help ) . from another aspect",
    ", the minimal polynomial of an algebraic number @xmath23 with exact degree @xmath19 can be found by detecting an integer relation for the vector @xmath40 .",
    "besides hjls , b. just also presented an algorithm to detect integer relations for a given vector consists of algebraic numbers in @xcite .",
    "we can apply just s algorithm or hjls to the vector @xmath41 for finding the minimal polynomial of @xmath23",
    ". however , both just s algorithm and hjls are not numerically stable , as mentioned previously .",
    "all these algorithms are based on lll .",
    "two authors of this paper presented a method to reconstruct a rational number from its an approximation by using continued fraction in @xcite .",
    "it may be viewed as an answer to a special case of the question . based on pslq",
    ", one can find algebraic relations , such as @xcite , whereas these articles did not involve the minimal polynomial finding .",
    "the authors of this paper also presented an algorithm in @xcite for finding the minimal polynomial of a real algebraic number from its an approximation .",
    "however , these pslq based algorithms can not deal with complex algebraic numbers since pslq only outputs a relation in gaussian integer ring for a complex vector .",
    "fortunately , our simultaneous integer relation detection algorithm sird in present paper can be used to overcome these pitfalls . applying sird to one or two real vectors , we present another affirmative answer , the mpf algorithm , to the question above .",
    "we show that mpf is a more efficient minimal polynomial finding algorithm comparing with the algorithms in @xcite and provide a sufficient condition on the error controlling , from which we can claim that the polynomial returned by mpf is the exact minimal polynomial of the algebraic number that we only know an approximate value and two bounds on its degree and height .",
    "although a similar even better complexity can be obtained by kll , mpf has its own meaning since it is a new method without using lll reduction .",
    "* road - map . * in section [ sec : the simultaneous integer relation detecting algorithm ] and [ sec : the sird algorithm ] we first give some preliminaries , and then present the sird algorithm and analyze it .",
    "we report on some experimental results about the performance of sird in section [ sec : performance results ] , apply sird to find the minimal polynomial of an algebraic number from its an approximation and propose the mpf algorithm in section [ sec : finding - minimal - polynomial ] , in which we also analyze mpf and present the result of error controlling .",
    "we conclude this paper with section [ sec : conclude ] .",
    "* notations . * throughout this paper , @xmath42 , @xmath43 , and @xmath44 are the sets of integers , real numbers , and complex numbers respectively .",
    "the real and imaginary parts of @xmath45 will be denoted re@xmath46 and im@xmath46 respectively . for @xmath47 , @xmath48 .",
    "all vectors in this paper are column vectors , and will be denoted in bold . if @xmath49 , then  @xmath50  represents its euclidean norm , i.e. @xmath51 , where  @xmath52 is the inner product of two vectors .",
    "we denote @xmath53 identity matrix by @xmath54 . given a matrix @xmath55 , we denote its transpose by @xmath56 , its trace by tr@xmath57 , its determinant by @xmath58 , and its frobenius norm by @xmath59 , i.e. @xmath60 .",
    "we say that a matrix @xmath61 is lower trapezoidal if @xmath62 for @xmath63 .",
    "@xmath64 is the group of @xmath53 unimodular matrix with entries in @xmath42 .",
    "the height of a vector is defined by the maximum of all the absolute values of its entries .",
    "for a polynomial @xmath65 , we denote by @xmath66 its degree with respect to @xmath67 , @xmath68 its one norm , @xmath69 its euclidean length , and height@xmath70 its height .",
    "in what follows we always suppose that @xmath1 are linearly independent vectors in @xmath8 , where @xmath71 . obviously , we have @xmath72 .",
    "we denote by @xmath10 the matrix @xmath73 , and suppose that @xmath74 satisfies @xmath75 unless otherwise specified . for @xmath76 not satisfying ( [ eq",
    ": suppose - on - x ] ) , exchanging some rows of @xmath10 produces @xmath77 , where @xmath78 is an appropriate matrix in @xmath64 .",
    "and then we detect an sir for @xmath79 .",
    "if @xmath14 is an sir for @xmath79 , then @xmath80 is an sir for @xmath10 .",
    "[ def : hyperplane - matrix ] let  @xmath81 .",
    "a hyperplane matrix with respect to @xmath10 is any matrix @xmath82 such that @xmath83 and the columns of @xmath84 @xmath85 @xmath86 .",
    "now we introduce a method to construct a hyperplane matrix for @xmath10 .",
    "let @xmath87  form a standard basis of  @xmath88 , i.e. the @xmath26-th entry of @xmath89 is @xmath27 and others are @xmath90 . by performing the process of standard gram - schmidt orthogonalization",
    "to @xmath91 in turn we have @xmath92@xmath93where @xmath94    [ lem : hyperplane - matrix - construction ] let @xmath95 , @xmath96 , @xmath97 and @xmath98 be as above .",
    ". there exist @xmath17 elements in @xmath99 denoted by @xmath100 such that @xmath101 .",
    "2 . @xmath102 .",
    "part @xmath27 easily follows from the process of standard gram - schmidt orthogonalization .",
    "we next prove @xmath103 when ( [ eq : suppose - on - x ] ) holds .",
    "set @xmath104 taking each side as a column vector and observing the last @xmath17 components of two sides , we have @xmath105 . and",
    "since @xmath106 are linearly independent , we have @xmath107 .",
    "thus the @xmath19 vectors @xmath108 are linearly independent .",
    "this implies that @xmath102 .",
    "[ def : h_x ] for @xmath109 satisfying ( [ eq : suppose - on - x ] ) , define @xmath110 to be the @xmath111 matrix @xmath112 .",
    "[ lem : property - of - hx ] let @xmath109 and @xmath110 be as above . then 1 .",
    "2 . @xmath114 .",
    "@xmath115 is an orthogonal matrix .",
    "\\4 . @xmath116**0 * * , i.e. @xmath110 is a hyperplane matrix of @xmath10 .    \\5 .",
    "@xmath110 is a lower trapezoidal matrix and every diagonal element of @xmath110 is nonzero .",
    "since every two columns of @xmath110 are orthogonal , part @xmath27 follows . and part @xmath117 follows from part @xmath27",
    ". let @xmath118 . obviously , @xmath119 is an orthogonal matrix .",
    "from part 3 and standard gram - schmidt orthogonalization we have @xmath120 and @xmath121 respectively , where @xmath122 is an appropriate @xmath123 invertible matrix .",
    "thus @xmath124 and hence that part 4 follows .",
    "we now prove part 5 .",
    "denote the @xmath125-th element of @xmath126 by @xmath127 .",
    "the diagonal elements of @xmath110 are @xmath128 for @xmath129 . before normalizing @xmath126 we have @xmath130 , and at the same time , @xmath131 thus all the diagonal elements of @xmath110 are nonzero .",
    "now we only need to show that @xmath110 is lower trapezoidal . from standard gram - schmidt orthogonalization , we can check that @xmath132 holds for @xmath133 .",
    "this completes the proof .",
    "so far , we have had a method to produce a hyperplane matrix @xmath134 for @xmath74 .",
    "the basic idea is from hjls ( see @xcite ) .",
    "the same strategy was also used in pslq , however , in which partial sum was adopted instead of gram - schmidt orthogonalization .    [",
    "lem : property - of - px ] for @xmath135 define @xmath136 . then 1 .",
    "2 . @xmath138 .",
    "3 . @xmath139 .",
    "4 . @xmath140 .",
    "@xmath141 for any @xmath142 .",
    "particularly , @xmath143 for any sir @xmath14 for @xmath10 .",
    "the proof of the first part is easy .",
    "let  @xmath144 .",
    "from lemma [ lem : property - of - hx ] we have @xmath145 .",
    "thus part @xmath117 follows .",
    "part @xmath146 and part @xmath147 follow from @xmath148 and @xmath149 tr@xmath150 tr@xmath151 tr@xmath152 respectively",
    ". since @xmath153 , we have @xmath154 for @xmath155 .",
    "and the process of standard gram - schmidt orthogonalization implies @xmath156 .",
    "thus we have @xmath157 from part 2 .    from lemma [ lem :",
    "property - of - hx ] and lemma [ lem : property - of - px ] we can easily generalize the theorem @xmath27 in @xcite to the case of @xmath74 .",
    "[ thm : lower - bound - of - simultaneous - relations ] let @xmath74 and @xmath110 be as above .",
    "suppose that for any matrix @xmath158 there exists an orthogonal matrix @xmath159 such that @xmath160 is lower trapezoidal and all of the diagonal elements of @xmath161 satisfy @xmath162 .",
    "then for any sir @xmath14 of @xmath10 we have @xmath163    as this theorem easily follows from the proof of theorem 1 of @xcite with little modifications , the detail has been omitted here .",
    "the lower bound given in ( [ eq : lower - bound - of - simultaneous - relation ] ) when @xmath164 is consistent with a similar lower bound in @xcite .",
    "moreover , if a method to reduce the norm of @xmath134 by multiplication by some unimodular @xmath165 on the left has been developed , then it will produce an increasing lower bound on @xmath6 , where @xmath6 is the least euclidean norm of sirs for @xmath10 .",
    "in fact this theorem suggests a strategy to detect an sir for @xmath10 .",
    "we now study how to reduce the hyperplane matrix @xmath134 .",
    "first we recall ( modified ) hermite reduction in @xcite .    a lower trapezoidal matrix @xmath166 with @xmath162 .    a reducing matrix @xmath167 of @xmath20 .    the @xmath53 matrix @xmath167 .",
    "[ algo : modified - herimite - reduction ]    if algorithm [ algo : modified - herimite - reduction ] output @xmath167 for an @xmath168 matrix @xmath20 , we say that @xmath169 is the modified hermite reduction of @xmath20 and that @xmath167 is the reducing matrix of @xmath20 .",
    "this reduction develops the left multiplying modified hermite reducing matrix @xmath167 .",
    "hermite reduction is also presented in @xcite , and is equivalent to modified hermite reduction for a lower triangular matrix @xmath20 with @xmath162 ( see ( * ? ? ? * lemma 3 ) ) .",
    "both the two equivalent reductions have the following properties : 1 .",
    "the reducing matrix @xmath170 .",
    "2 . for all @xmath171 , the ( modified )",
    "hermite reduced matrix @xmath172 satisfies @xmath173 satisfy the two properties above , we need the following generalized hermite reduction .    a lower trapezoidal matrix @xmath174 with @xmath162 .    a reducing matrix @xmath167 of @xmath20 .",
    "[ algostep : ghr - hermite - reduction - start ]    [ algostep : generalized-2-hermite - reduction - start ]    [ algostep : generalized-2-hermite - reduction - end ]    the @xmath53 matrix @xmath167 .",
    "[ algo : generalized - herimite - reduction ]    if algorithm [ algo : generalized - herimite - reduction ] output @xmath167 for an @xmath111 matrix @xmath20 , we call @xmath169 the generalized hermite reduction of @xmath20 and @xmath167 the reducing matrix of @xmath20 .",
    "obviously , generalized hermite reduction is equivalent to modified hermite reduction when @xmath164 . in addition",
    ", we can easily check that generalized hermite reduction remains the two properties mentioned above .",
    "[ rem : generalized - hermite - reduction ] there are two main differences between ( modified ) hermite reduction and generalized hermite reduction .",
    "firstly , the last @xmath175 rows of @xmath20 will also be reduced by the first @xmath176 rows of @xmath20 in generalized hermite reduction , while ( modified ) hermite reduction can not do so .",
    "secondly , generalized hermite reduction exchanges the @xmath177-th row and the @xmath178-th row of @xmath167 if @xmath179 , @xmath180 and @xmath181 ( from step [ algostep : generalized-2-hermite - reduction - start ] to step [ algostep : generalized-2-hermite - reduction - end ] ) .",
    "this implies that if @xmath182 after generalized hermite reduction then @xmath183 .",
    "this property plays an important role in the proof of lemma [ lem : hn , n-2=0 ] .",
    "using the hyperplane matrix constructing method and generalize hermite reduction in the previous section we can get a simultaneous integer relation detecting algorithm sird .    @xmath184 satisfying ( [ eq : suppose - on - x ] )    either output an sir for @xmath10 or give a lower bound on @xmath6 .",
    "compute the hyperplane matrix @xmath110 , set @xmath185 , @xmath186 .",
    "call algorithm [ algo : generalized - herimite - reduction ] to reduce @xmath110 producing the reducing matrix @xmath187 . set @xmath188 .",
    "[ algostep : exchange ] _ exchange .",
    "_ let @xmath189 .",
    "choose an integer @xmath39 such that @xmath190 for @xmath191 , where @xmath192 .",
    "define the permutation matrix @xmath193 to be the identity matrix with the @xmath39 and @xmath194  rows exchanged .",
    "update @xmath195 .",
    "[ algostep : corner ] _ corner .",
    "_ let @xmath196 let @xmath197 . if @xmath198 , then let the submatrix of @xmath122 consisting of the @xmath39-th and @xmath199-th rows of columns @xmath39 and @xmath200 be @xmath201 . update @xmath202 .",
    "[ algostep : reduction ] _ reduction .",
    "_ call algorithm [ algo : generalized - herimite - reduction ] to reduce @xmath110 producing @xmath167 .",
    "update @xmath203 .",
    "compute @xmath204 .",
    "then there exists no sir whose euclidean norm is less than @xmath205 .",
    "[ algostep : bound - of - possible - relations ]    [ algo : simultaneous - relation ]      let @xmath206 be the result after @xmath125 iterations of sird .",
    "why do we set the parameter @xmath207 at step [ algostep : exchange ] ?",
    "suppose the @xmath39 chosen in step [ algostep : exchange ] is not @xmath208 .",
    "in this case we let @xmath209 be as in ( [ eq : alph - beta - lambda - delta ] ) .",
    "then @xmath210 is the submatrix of @xmath211 consisting of the @xmath39 and @xmath200 rows of columns @xmath39 and @xmath200 , where @xmath198 .",
    "after step [ algostep : exchange ] has been performed @xmath212 may not be zero , which makes that @xmath20 is not lower trapezoidal .",
    "after step [ algostep : corner ] the result is @xmath213 since @xmath39 is chosen such that @xmath214 is as large as possible , and @xmath198 we have @xmath215 , hence @xmath216 . from the property of generalized hermite reduction",
    "we have that @xmath217 , which then gives @xmath218 thus @xmath219 is reduced as long as @xmath220 , i.e. @xmath207 . as was pointed out by borwein ( see bor2002 ) , although this increases @xmath221 , this is not a significant problem . at each step",
    "we force the larger diagonal elements of @xmath20 toward @xmath222 , where their size can be reduced by at least a factor of @xmath117 when @xmath223 .    as a matter of fact",
    ", the parameter @xmath224 can be freely chosen in the open interval @xmath225 .",
    "[ lem : hn , n-2=0 ] if @xmath226 for some @xmath227 and no smaller @xmath125 , then @xmath228 and an sir for @xmath10 must appear as a column of the matrix @xmath229 .    by the hypothesis on @xmath125",
    "we know that all diagonal elements of @xmath230 are not zero . now",
    ", suppose the @xmath39 chosen in step [ algostep : exchange ] is not @xmath176 .",
    "since generalized hermite reduction does not introduce any new zeros on the diagonal , and from the analysis of step [ algostep : exchange ] and step [ algostep : corner ] above , we have that no diagonal element of @xmath206 is zero .",
    "this contradicts the hypothesis on @xmath125 and our assumption that @xmath198 was false .",
    "thus we have @xmath231 after the @xmath232-th iteration has been completed .",
    "next we show that there must be an sir for @xmath10 appeared as a column of the matrix @xmath229 .",
    "we have @xmath233 from lemma [ lem : property - of - hx ] and hence that @xmath234 , where @xmath122 is an appropriate orthogonal @xmath235 matrix .",
    "let @xmath236 , where @xmath237 .",
    "then @xmath238 we know @xmath239 and @xmath240 from @xmath241 . from remark [ rem : generalized - hermite - reduction ] and",
    "@xmath242 we have @xmath243 which implies the last equality . since @xmath240",
    ", it follows that @xmath244 .",
    "thus the @xmath245-th column of @xmath229 is an sir for @xmath10 .",
    "from theorem [ thm : lower - bound - of - simultaneous - relations ] and lemma [ lem : hn , n-2=0 ] , the correctness of sird has been proved .",
    "moreover , we have    [ thm : upper - bound - for - sirs ] let @xmath6 be the least euclidean norm of any sir for @xmath10 . let @xmath14 be an sir detected by sird .",
    "then @xmath246 for all @xmath247 .",
    "assume @xmath248 with @xmath249 and @xmath250 at the @xmath125-th iteration of sird .",
    "then from theorem [ thm : lower - bound - of - simultaneous - relations ] and the exchange rule of sird we have @xmath251 at this time , @xmath252 holds from the same strategy in the proof of lemma 10 in @xcite .",
    "[ def : pi - function ] for the @xmath125-th iteration in sird , define @xmath253    the routine of analyzing the number of iterations in @xcite can be carried over here with redefining the @xmath254 function as above .",
    "so we state the following lemma directly without proof .",
    "[ lem : pi - function ] for @xmath255 we have 1 .",
    "@xmath256}\\geq\\pi(k)\\geq 1 $ ] , where @xmath6 is the least norm of sirs for @xmath10 .",
    "2 . @xmath257 .    from this lemma",
    ", it follows that the @xmath254 function is increasing with respect to @xmath125 and has an upper bound for a fixed @xmath258 .",
    "thus we have    [ thm : the - number - of - iterations ] if @xmath109 has sirs , then the number of iterations such that sird finds an sir for @xmath10 will be no more than @xmath259 \\frac{\\log(\\gamma^{n - t}\\lambda(x))}{\\frac{1}{2 } \\log\\left(\\frac{4\\gamma^2}{\\gamma^2 + 4}\\right)}.\\ ] ]    from definition [ def : pi - function ] we can infer @xmath260 . and by lemma [ lem : pi - function ] we know that @xmath261 solving @xmath125 from this inequality gives the conclusion , as was to be shown .",
    "[ thm : time - complexity - of - simultaneous - relation ] if @xmath109 has sirs , then there exists a @xmath224 such that sird will find an sir for @xmath10 in polynomial time @xmath262",
    ".    let @xmath263 .",
    "then sird will construct an sir for @xmath10 in no more than @xmath264 iterations .",
    "sird takes @xmath265 exact arithmetic operations per iteration , and hence that @xmath266 exact arithmetic operations is enough to produce an sir for @xmath10 .",
    "since @xmath267 , the proof is complete .    [",
    "rem : simultaneous - relation - algorithm ] from this corollary , we can claim that our detecting algorithm always return an sir for @xmath10 if one exists .",
    "additionally , sird will produce lower bound on the euclidean norm of any possible sirs for @xmath10 ( theorem [ thm : lower - bound - of - simultaneous - relations ] ) .",
    "thus sird can be used to prove that there are no sirs for @xmath10 of norm less than a given size .",
    "pslq may be viewed as a particular case of sird when @xmath268 . similarly with pslq",
    ", sird can be easily generalized to complex field with @xmath269 such that the outputs are in gaussian integer ring and all conclusions mentioned above hold with corresponding modifications .",
    "moreover , sird can also be applied to detect an integer relation in @xmath38 for a given complex vector .",
    "for example , suppose @xmath270 in @xmath271 with vector components @xmath272 where @xmath273 .",
    "then sird can give an sir @xmath14 for @xmath274 , and hence that @xmath275 is an integer relation for @xmath276 , but pslq only can give a gaussian integer relation in @xmath277^n$ ] .",
    "this is one of the biggest differences between sird and pslq .",
    "furthermore , the matrix reducing method in sird is generalized hermite reduction , which avoids lll - type reduction .",
    "this is a difference not only between sird and hjls , but also between sird and pslq because that ( modified ) hermite reduction is not suitable to detect sirs any more . and just the generalized hermite reduction guarantees the correctness of sird .",
    "in theory , the costs of sird and the hjls simultaneous relations algorithm ( see @xcite ) are the same as in corollary [ thm : time - complexity - of - simultaneous - relation ] in the worst case , whereas in practice sird usually needs fewer iterations . for @xmath278 and @xmath279 , hjls outputs @xmath280 after 5 iterations while sird outputs @xmath281 after only 2 iterations .",
    ".comparison of performance results for hjls and sird [ cols=\"^,^,^,^,^,^,^,^\",options=\"header \" , ]     table [ tab : comparison of mpfs ] gives a comparison of the digits and complexity of 4 different minimal polynomial finding algorithms in the worst case .",
    "since the algorithm in @xcite can only find the minimal polynomial of a real algebraic number , we do nt compare the complexity with it .",
    "it seems that a lower complexity can be achieved by using some new type lll algorithms , such as l@xmath282 @xcite and h - lll @xcite , but when we apply these new algorithms to find the minimal polynomial we have to choose @xmath31 as in a similar formula with ( [ eq : error - controlling ] ) .",
    "thus multiple precision arithmetic is inevitable .",
    "_ example [ exmp : x^2 - 4x+7 ] ( con . ) .",
    "_ for @xmath283 , its minimal polynomial @xmath284 .",
    "set @xmath285 and @xmath286 .",
    "computing the error tolerance as in equation ( [ eq : error - controlling ] ) gives @xmath287 .",
    "corollary [ cor : epsilon - control ] implies that @xmath288 correct decimal digits are sufficient to guarantee the output is correct .",
    "this example also illustrates that @xmath31 in ( [ eq : error - controlling ] ) is only a sufficient condition on error controlling , but not a necessary one .",
    "the number of iterations and the cost of sird algorithm are related to the parameter @xmath224 . for @xmath289 and @xmath290 ,",
    "if we choose @xmath291 then sird outputs @xmath292 after 12 iterations , however , if we choose @xmath293 , sird outputs @xmath294 after only 6 iterations . in future work",
    "we expect to find the best choice for @xmath224 .",
    "additionally , how to choose the digits such that sird under floating - point arithmetic finds an exact sir is also in our interests .",
    "finally , we see that the mpf algorithm can be used to factor @xmath295 in @xmath296 $ ] like this : solve an approximation root with accuracy satisfying equation ( [ eq : error - controlling ] ) , and call mpf for finding its minimal polynomial which corresponds an irreducible factor of @xmath295 , and then repeat the two steps until @xmath295 has been factored completely .",
    "it is symbolic - numeric and different from traditional algorithms based on hensel lifting .                                                                .",
    "shanghai scientific and technological education publishing house , 1996 ( in chinese ) . obtaining exact value by approximate computations .",
    "_ science in china series a : mathematics 50 _ , 9 ( 2007 ) , 13611368 ."
  ],
  "abstract_text": [
    "<S> let @xmath0 . a simultaneous integer relation ( sir ) for @xmath1 is a vector @xmath2 such that @xmath3 for @xmath4 . in this paper , we propose an algorithm sird to detect an sir for real vectors , which constructs an sir within @xmath5 arithmetic operations , where @xmath6 is the least euclidean norm of sirs for @xmath7 . </S>",
    "<S> one can easily generalize sird to complex number field . </S>",
    "<S> experimental results show that sird is practical and better than another detecting algorithm in the literature . in its application </S>",
    "<S> , we present a new algorithm for finding the minimal polynomial of an arbitrary complex algebraic number from its an approximation , which is not based on lll . we also provide a sufficient condition on the precision of the approximate value , which depends only on the height and the degree of the algebraic number . </S>"
  ]
}
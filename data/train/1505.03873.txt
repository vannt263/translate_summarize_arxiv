{
  "article_text": [
    "as figure  [ fig : pullfig ] shows , it is sometimes hard even for humans to recognize the content of photos without context . just by looking at the photos we can conclude that all these examples can reasonably be of snow . consider , however , that ( a ) was taken at the bonneville salt flats in utah , ( c ) and ( d ) were taken in death valley and palo alto , respectively , both of which are areas in california that never see snow , and ( b ) was taken in new hampshire , where snow storms are common . with this information in hand , it is much easier to correctly deduce that ( b ) is the only image that actually contains snow .",
    "motivated by this observation , we tackle the problem of image classification with location context .",
    "in particular , we are interested in classifying consumer images with concepts that commonly occur on the internet , ranging from objects to scenes to specific landmarks , as these are the things that people often take pictures of , and the internet is the largest source of geotagged images .",
    "building on the cnn architecture introduced in  @xcite , the basis for most state - of - the - art image classification and recognition results , we address how to represent and incorporate location features into the network architecture .",
    "this is not an easy problem , as we have found that naive approaches such as concatenating the gps coordinates into the classifier , or leveraging nearby images as a bayesian prior result in almost no gain in performance .",
    "however , knowing the gps coordinates allows us to utilize geographic datasets and surveys that have been collected by various institutions and agencies .",
    "we can also leverage the large amount of data on the internet tagged with gps coordinates in a data - driven fashion .    in summary",
    ", the contributions in this paper can be organized into three parts .",
    "[ [ constructing - effective - location - features - from - gps - coordinates . ] ] constructing effective location features from gps coordinates .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we propose 5 different types of features that extend upon the latitude and longitude coordinates that are given to us , and perform a comprehensive evaluation of the effectiveness of each feature .",
    "[ [ network - architectures - for - incorporating - location - features . ] ] network architectures for incorporating location features .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we show how to incorporate these additional features into a cnn  @xcite .",
    "this allows us to learn the visual features along with the interactions between the different feature types in a joint framework .",
    "in addition , we also show how we can simultaneously learn the parameters required for constructing a subset of our features in the same framework , giving us improved performance and a better understanding of what the network is learning .",
    "[ [ yfcc100m - geo100-dataset . ] ] yfcc100m - geo100 dataset",
    ". + + + + + + + + + + + + + + + + + + + + + + + +    we introduce annotations for a set of location sensitive concepts on a subset of the yahoo flickr creative commons 100 m ( yfcc100 m ) dataset  @xcite , which we denote as the yfcc100m - geo100 dataset , and make our annotations publicly available .",
    "this dataset consists of 88,986 images over 100 classes , and allows us to evaluate our models at scale .",
    "there is a large body of work that focuses on the problem of image geolocation , such as geolocating static cameras  @xcite , city - scale location recognition  @xcite , im2gps  @xcite , place recognition  @xcite , landmark recognition  @xcite , geolocation leveraging geometry information  @xcite , and geolocation with graph - based representations  @xcite .",
    "more recent works have also tried to supplement images with corresponding data  @xcite , such as digital elevation maps and land cover survey data , which we draw inspiration from in constructing our features .",
    "in contrast to these works , we assume we are given gps coordinates , and use this information to help improve image classification performance .",
    "in addition , several works also explore other aspects of images and location information , such as 3d cars with locations  @xcite , organizing geotagged photos  @xcite , structure from motion on internet photos  @xcite , recognizing city identity  @xcite , looking beyond the visible scene  @xcite , discovering representative geographic visual elements  @xcite , predicting land cover from images  @xcite , and annotation enhancement using canonical correlation analysis  @xcite .",
    "most similar are works that leverage location information for recognition tasks  @xcite .",
    "the work of  @xcite tackles object recognition with geo - services on mobile devices in small urban environments . the work of  @xcite uses available geographic information system ( gis ) databases by projecting exact location information of traffic signs , traffic signals , trash cans , fire hydrants , and street lights onto images as a prior .",
    "the work of  @xcite uses bird sightings to estimate a spatio - temporal prior distribution to help improve fine - grained categorization performance .",
    "the work of  @xcite leverages season and location context in a probabilistic framework to help improve region recognition in images .",
    "our work differs in that we are interested in recognizing a wide range of concepts present on the internet beyond birds  @xcite , small sets of specific urban objects  @xcite or generic region types  @xcite , and constructing features that are not specific to a particular class or source of gis information .",
    "in addition , we exhaustively evaluate ways of incorporating these features into a cnn , and we propose a way to parameterize the geo - features and extend the back - propagation algorithm to allow the net to learn the most discriminative geo - feature parameters . we also introduce a large - scale geotagged dataset collected from real - world images to train our models and effectively evaluate performance .    also closely related are the numerous works on context , which have shown to be helpful for various tasks in computer vision  @xcite .",
    "we leverage contextual information by considering the gps coordinates of our images and extracting complementary location features .",
    "similar to standard image classification problems , we are given a set of @xmath0 training images @xmath1 with associated class labels @xmath2 , where @xmath3 is the set of classes we are trying to predict .",
    "in addition to the images , we are also given the gps coordinates for each image @xmath4 , where @xmath5 is the longitude and @xmath6 is the latitude for image @xmath7 .",
    "note that the gps coordinates are given in both the training and testing phase , and our goal is to predict the class labels given both the image and the gps coordinates . in this paper , we focus on images taken within the contiguous united states , but the majority of our features can be trivially extended to encompass the entire world .",
    "we build on the cnn model introduced in  @xcite , as this model and extensions to it are commonly used benchmarks in image classification and recognition  @xcite . for more details on the network architecture ,",
    "we refer the reader to  @xcite . to incorporate location features into the network , we add a layer to concatenate the different feature types before the softmax layer , as shown in figure  [ fig : model ] .",
    "this makes intuitive sense , as the lower layers of the cnn model are aimed at learning effective image filters and features , and we are interested in incorporating our features later on at a higher semantic level .",
    "in addition , we also experiment with adding additional depth using fully connected layers before and after the concatenation layer , denoted by the pre - cat and post - cat layers in figure  [ fig : model ] , and perform comprehensive experiments detailed later in the paper .    with this architecture",
    ", we turn to the problem of extracting location features . for each image @xmath7",
    ", we construct a set of features that effectively represent contextual information about the location specified by the gps coordinates @xmath8 . to do this , we utilize the wealth of geographic datasets and surveys collected by various agencies that document a large variety of statistics about each location , ranging from surveys on age and education , to geographic features such as elevation and precipitation .",
    "we also utilize the large amounts of geotagged data available on the internet such as images and textual posts .",
    "the actual gps coordinates are very fine location indicators , making it difficult for the classifier to effectively use . to make better use of the coordinates ,",
    "we grid the contiguous united states into a rectangular grid with a latitude to longitude ratio of @xmath9 , and construct an indicator vector for each image @xmath7 that indicates which grid cell the gps coordinate @xmath8 falls into , resulting in a feature vector with dimension equal to the total number of cells in the grid .",
    "the aspect ratio is chosen so that each grid cell is roughly a square .",
    "we used rectangular grids up to @xmath10x@xmath11 , resulting in @xmath12x@xmath12 km square cells , limited by the computational time and memory for even larger grids .",
    "there exist many different types of geographic maps and datasets that provide detailed information about each gps coordinate in the form of a colored map , with different colors representing different geographic features .",
    "in particular , google maps  @xcite is one of many online sites that stores a large set of such maps , with an example shown in figure  [ fig : mapfeat ] .",
    "we use 10 different types of maps from google maps : average vegetation , congressional district , ecoregions , elevation , hazardous waste , land cover , precipitation , solar resource , total energy , and wind resource .",
    "since each map uses different colors to represent the value of a feature at a particular location , for each image @xmath7 we take the normalized pixel color values in a 17x17 patch around the gps coordinate @xmath8 for each map type , and concatenate these to form a 8670 dimensional feature .",
    "intuitively , map features such as precipitation may tell us how likely it is to see an umbrella in a picture , while indicators such as elevation may tell us how likely it is for us to see snow .",
    "given the gps coordinate @xmath8 for image @xmath7 , we can perform reverse geocoding to obtain the corresponding zip code .",
    "this allows us to tap into the rich source of geographic surveys organized by zip code , collected by agencies like the united states government .",
    "we use the american community survey ( acs )  @xcite , an ongoing survey that provides yearly data with statistics on age , sex , race , family / relationships , income and benefits , health insurance , education , veteran status , disabilities , work status , and living conditions , all organized by zip code and pooled over a 5 year period .",
    "we treat each statistic as a feature , and collect them into a vector resulting in a 21,038 dimensional feature .",
    "intuitively , statistics such as age may tell us how likely it is to see toys in a picture , while statistics such as income may tell us how likely it is for us to see expensive cars .",
    "the aforementioned geographic map and acs features are based on map and survey data collected about a particular location from various agencies .",
    "however , a large source of data lies directly on the internet , where millions of images are uploaded daily , many of which tagged with gps coordinates .",
    "we propose a set of data - driven features that are able to make use of the images on instagram  @xcite .",
    "intuitively , for each image @xmath7 associated with gps coordinate @xmath8 , our goal is to capture the distribution of hashtags in the vicinity .",
    "hashtags that commonly occur near image @xmath7 can help indicate the types of things that occur in the real - world context of image @xmath7 , giving us contextual information about what is in the image .",
    "we start by defining a set of hashtags @xmath13 that we are interested in . for a particular hashtag @xmath14",
    ", we obtain images from instagram with gps coordinates and matching hashtag .",
    "then , we define a set of radii @xmath15 , and for each @xmath16 , we pool over a circle of radius @xmath17 around @xmath8 and count the number of images tagged with hashtag @xmath18 that fall into the radius . as shown in figure  [ fig : gridfeat ] , this is done for each of the radii in @xmath15 and each of the hashtags in @xmath13 , resulting in a set of @xmath19x@xmath20 counts .",
    "to build features from these counts , we perform two types of normalization for the @xmath19 counts in each radius @xmath16 .",
    "the first is normalization across hashtags , where we normalize each count by the sum of counts for all hashtags within @xmath17 .",
    "this normalization gives us an idea of the relative frequency of a particular hashtag in relation to the other hashtags that appear in the area , and normalizes for the density of photos in the area .",
    "the second is normalization within hashtag , where we normalize each count by the total number of images we obtained from instagram with the particular hashtag .",
    "this normalization gives us an idea of the relative frequency of a particular concept in relation to how often this concept appears in the entire united states .",
    "we perform both types of normalization and concatenate the feature vectors together to form the final feature vector , resulting in a @xmath21x@xmath19x@xmath20 dimensional feature .    in our experiments , we set @xmath22 , using the set of classes as the set of hashtags for simplicity , and set @xmath23 .",
    "to save computation time , we quantize all the gps coordinates into a @xmath24x@xmath25 grid , which results in approximately square grid cells each covering a @xmath10x@xmath10 meter area .",
    "the visual context feature is similar to the hashtag context feature , except in this case we would like to take advantage of the visual signal around our gps coordinate @xmath8 , and not just the hastags that have been tagged . to do this",
    ", we retrieve images from various online social websites with gps coordinates , and for each image run a cnn with similar architecture to  @xcite to generate probabilities for 594 of the common types of concepts that appear on the internet , such as  clothes \" ,  girl \" , and  coffee \" .",
    "the full list of 594 concepts is given in the supplementary material .",
    "similar to the hashtag context feature , we pool the probabilities for each radius @xmath16 around @xmath8 by summing the probabilities of all the images that fall into the radius , individually for each concept , resulting in a set of @xmath26x@xmath20 probabilities .",
    "then , we perform the same two types of normalization and concatenate to form the final feature vector , resulting in a @xmath21x@xmath26x@xmath20 dimensional feature .",
    "we use the same set of radii @xmath15 and gps grid quantization as the hashtag context feature .",
    "in the previous section we introduced the hashtag context and visual context features . for both of these features , we explained how to build features from the aggregated hashtag counts and concept probabilities by concatenating together normalized histograms pooled over a set of radii @xmath15 .",
    "however , we do nt expect that all radii are informative .",
    "for example , for hashtags or concepts that are rare , even being a few kilometers away may be an important indicator .",
    "similarly , certain hashtags that are common may require being extremely close to truly pinpoint the location .",
    "[ [ radius - learning - layer . ] ] radius learning layer .",
    "+ + + + + + + + + + + + + + + + + + + + + +    to address this , we show how to construct a layer in the cnn that automatically learns the optimal radius used for pooling , which we denote as the radius learning layer . learning",
    "the optimal radius is potentially useful in many ways .",
    "first , by focusing on the important radii with informative features , we can avoid overfitting .",
    "second , we can visualize the radii that we have learned , providing insight into what the cnn is learning .",
    "we start by considering the radius for a single hashtag / concept @xmath18 , and fit a function @xmath27 over the histogram that returns the value of the histogram feature for hashtag @xmath18 and radius @xmath28 at location given by @xmath8 .",
    "there are several ways to fit such a function , but for simplicity we use the histogram values computed over @xmath15 from the previous section and fit a piece - wise linear approximation to the values .",
    "we do this for all the hashtags , concepts , and both types of normalization schemes to obtain a set of @xmath29 histogram functions for each training image @xmath7 .",
    "the outputs of these histogram functions are treated as input features to the cnn in place of the concatenated histograms , with a radius parameter @xmath30 for each hashtag / concept that selects the value of the function to treat as input to the neural network .",
    "when computing the gradient for backpropagation , we backpropogate the gradient of the error @xmath31 into the gradient of the histogram function @xmath32 :    @xmath33    the first term in the rhs is the error derivative propagated to the radius learning layer from the network architecture above it , and the second term is the derivative at @xmath30 of the histogram function @xmath34 .",
    "since we use a piece - wise linear approximation to fit the histogram function , the second term is easily computed by taking the slope between the two nearest points in @xmath15 . although we could fit more complicated functions , we found the linear approximation to be fast and sufficient , as we aggregate gradients over all the training examples .",
    "since hashtags / concepts may have multiple radii and weightings between the radii that are informative , we replicate the radius learning layer multiple times for each histogram function .",
    "to evaluate our method , we use the recently released yahoo flickr creative commons 100 m ( yfcc100 m ) dataset  @xcite , which consists of 100 million creative commons copyright licensed images from flickr . of the 100 million images ,",
    "approximately 49 million are geotagged with gps coordinates , which makes this dataset particularly suitable for evaluating our task because of its unprecedented scale .",
    "also provided with the images are tags for the images produced by users on flickr , which we use as a first step to identify images that contain a particular class . however , because the tags are very noisy , we must manually verify and discard images that do not actually contain the classes we were interested in . as mentioned before , we focus only on images geotagged within the contiguous united states .",
    "[ [ selecting - location - sensitive - classes . ] ] selecting location - sensitive classes .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    one of the problems we have to deal with is selecting classes that are likely to be location - sensitive , and will benefit from our location context features .",
    "this is important because there are certainly classes that are not , and adding these additional features may just cause the classifier to overfit . practically speaking",
    ", we also need a way of limiting the number of classes to a manageable number we can annotate .    to address this issue",
    ", we use a simple data - driven method for selecting classes . using a large set of images from instagram",
    ", we estimate the discrete geospatial distribution @xmath35 of all images by first gridding the contiguous united states into a fine grid , and then counting the number of images that fall into each grid cell and normalizing to create a valid probability distribution .",
    "then , we obtain a large list of classes through commonly occuring instagram hashtags , and for each class @xmath36 we estimate the geospatial distribution @xmath37 of images tagged with @xmath36 in a similar manner . with these two distributions , we compare their similarity with the kullback - leibler ( kl ) divergence :    @xmath38    intuitively",
    ", we would like to find classes that do not exhibit a geospatial distribution similar to the distribution of all images , as this would suggest that they have some location - sensitive properties .",
    "the kl divergence does this by giving us a measure of the difference between the two probability distributions , and we select the top 100 classes with the highest kl divergence . in practice ,",
    "given a new class @xmath36 , we can simply compute @xmath39 and threshold to determine whether or not the class will benefit from our additional location features .",
    "examples of the geospatial distributions are shown in figure  [ fig : kl ] .",
    "[ [ yfcc100m - geo100-dataset.-1 ] ] yfcc100m - geo100 dataset . + + + + + + + + + + + + + + + + + + + + + + + +    using the top 100 classes selected with the highest kl divergence , we manually verified and annotated a large set of the yfcc100 m images that were noisily tagged with these classes by flickr users .",
    "this resulted in a dataset of 88,986 images , with at least 100 images per class , which we denote as the yfcc100m - geo100 dataset and will make publicly available .",
    "the classes we selected range from objects to places to scenes , with examples such as ` autumn ' , ` beach ' , and ` whale ' that illustrate the diversity of classes we are trying to classify .",
    "figure  [ fig : yfcc100 m ] visualizes the distribution of gps coordinates for the images in the dataset .",
    "the full list of classes is given in the supplementary material .",
    "we randomly divide the yfcc100m - geo100 dataset into an 80% training set and 20% test set .",
    "we further leave out a small portion of the training set as a validation set for parameter tuning in our models .",
    "[ [ implementation - details . ] ] implementation details .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    following  @xcite , we train our models using stochastic gradient descent with momentum of 0.9 and a 0.005 weight decay .",
    "we use a learning rate of @xmath40 , and run approximately 30 passes through our data , decreasing the learning rate by @xmath40 every 10 passes .",
    "we use a @xmath41 dropout ratio for all of our fully connected layers .",
    "since our training data is relatively small , we initialize the parameters in the image network portion of the model ( see figure  [ fig : model ] ) by pre - training it on a large set of instagram images , and then freezing the pre - trained parameters into our model .",
    "note that we could further fine - tune these parameters as well , but chose not to for speed concerns .",
    "[ [ performance - metrics . ] ] performance metrics .",
    "+ + + + + + + + + + + + + + + + + + + +    to evaluate our models , we use three different performance metrics .",
    "in addition to the standard metric of mean average precision ( ap ) , we also include results for normalized accuracy@1 and normalized accuracy@5 , motivated by their use in recent papers  @xcite as well as the imagenet classification challenge  @xcite .",
    "the normalized accuracy@k measure indicates the fraction of test samples that contained the ground truth label in the top k predictions , normalized per class to adjust for differences in the number of images per class .",
    "we evaluate the benefit of each proposed feature , shown in the top two sections of table  [ table : feat ] , without the pre - cat layer and post - cat layers as a baseline ( see figure  [ fig : model ] ) .",
    "not surprisingly , using the gps coordinates does not yield any significant gain in performance , as they do not make sense in the context of a linear classifier . using the gps encoding features , we get much better performance , with a gain of around 2% in all performance measures",
    ". we can also see that for each feature , we obtain performance gains from concatenating the features with the baseline image features , which shows they provide complementary information .",
    "in particular , the acs feature yields the largest increase in performance , with almost a 4% gain in all performance measures .",
    "[ [ support - vector - machines . ] ] support vector machines .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    we perform experiments using support vector machines ( svm ) and kernelizing our features .",
    "we use kernel averaging to combine features , as it has been shown to perform on par with more complicated methods  @xcite . in the middle section of table  [ table : feat ] , we show results using a multi - class hinge loss svm classifier and cross - validating the regularization parameter . for the naive combination ,",
    "we use linear kernels for all features , and for the @xmath42 combination , we compute @xmath42 kernels for the histogram features ( hashtag context , visual context ) , and use linear kernels for the rest due to dimensionality concerns . in general , we found the svm to perform worse than the softmax classifier . kernelizing the histogram features with @xmath42 kernels performs better than using just linear kernels , but still does nt exceed the performance of the softmax",
    "[ [ bayesian - priors . ] ] bayesian priors .",
    "+ + + + + + + + + + + + + + + +    following the approach used in  @xcite , we also try incorporating location context as a bayesian prior . using bayes rule , the probability of predicting class @xmath36 given image @xmath43 and location @xmath8 can be written as :    @xmath44    assuming the image and location are conditionally independent given the class , further applying bayes rule and removing terms that do not depend on @xmath36 , we obtain : @xmath45 in our experiments , we assume a uniform prior over the classes for @xmath46 .",
    "we tried two different approaches to computing the location prior @xmath47 , with results given in the bottom two sections of table  [ table : feat ] . in the flickr prior , for each test image we find the @xmath48-nearest - neighbors ( @xmath48-nn ) from the training set in gps space and use their labels to estimate a distribution for the location prior . in the instagram prior , for each of our test images we take the histogram computed in the hashtag context feature for a certain radius @xmath17 , and use the normalized histogram as the distribution for the location prior .",
    "although the overall results do not improve for either method , it s interesting to note that for some classes such as  disneyland \" , results improve by more than 45% mean ap for both types of priors .",
    "however , for the majority of the classes , the location prior hurts rather than helps , causing an overall decrease in performance .",
    "we evaluate the various architectures for combining the features together , and evaluate the effect of varying levels of depth before and after the concatenation layer in the model .",
    "results are shown in table  [ table : joint ] .",
    "the top section of the table shows results for adding additional depth in the pre - cat layer for each individual feature , and the bottom section shows the result with a 4096 dimensional post - cat layer .",
    "we make all comparisons to the  image only \" model from table  [ table : feat ] , which we now refer to as the baseline image model .",
    "[ [ pre - cat - layer . ] ] pre - cat layer .",
    "+ + + + + + + + + + + + + +    from the results , we see that simply concatenating the features together does not result in a significant increase in performance , likely because the feature dimension is large , and the model is overfitting .",
    "thus , we introduce the pre - cat layers to capture relationships within each feature type , and to serve as dimensionality reduction .",
    "although they perform comparably , the 256 dimensional layer seems to strike the best balance between performance and the number of parameters to learn , obtaining almost a 6% gain in performance across all performance measures .",
    "we also tried adding additional depth beyond a single layer , but found that this did not help significantly and drastically increased the number of parameters to learn .",
    "[ [ post - cat - layer . ] ] post - cat layer .",
    "+ + + + + + + + + + + + + + +    we also perform experiments with the post - cat layer to capture relationships between the different feature types .",
    "we found that a 4096 dimensional fully connected layer seems to help increase mean ap slightly , but decreases both normalized accuracy rates due to overfitting .",
    "again , as observed previously , adding additional depth here also causes the model to overfit , and decreases performance .                  in the previous sections , we concatenated histograms computed at varying radii for the hashtag context and visual context features .",
    "since there are often multiple radii and weightings between the radii that are most informative , we replace the concatenated histograms with multiple replicas of radius learning layers , with results shown in table  [ table : radius ] . in the top two sections ,",
    "we observe large improvements for the hashtag context feature , and mild improvements for the visual context feature in a controlled setting with no pre - cat and post - cat layers",
    ". in the bottom section , we are able to obtain an additional 0.5% gain in mean ap by using the radius learning layers for both of our best models from the previous section .",
    "we found again that adding the post - cat layer causes the model to slightly overfit , and thus use the 256/- rl10 model as our best model in the following analyses .",
    "figure  [ fig : results ] shows some interesting examples and predictions .    [ [ best - and - worst - classes . ] ] best and worst classes .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    in figure  [ fig : apdiff ] , we show the top 20 best and worst performing classes compared to the baseline image model . location - specific classes like  disneyland \" ,  casino \" , and  alcatraz \" see a large increase in performance , as they are confined to one or a small number of locations in the united states . on the other hand , some of the worst performing classes are car brands , which suggests that fine - grained car classes are not very location - specific , or not handled well in our features and model .",
    "however , since our method for selecting location - sensitive concepts was data - driven and unsupervised , they were included .",
    "[ [ learned - radius - parameters . ] ] learned radius parameters . + + + + + + + + + + + + + + + + + + + + + + + + + +    we visualize the radius parameters learned for several classes in figure  [ fig : radii ] .",
    "we found that for most concepts , the 10 different replicas of the radius learning layers typically converge to 3 or fewer different radii , like the  coast \" and  foliage \" classes , which suggests that certain radii are indeed more informative .",
    "occasionally , some classes like  building \" learn almost all different radii , possibly because within urban areas the abundance of buildings makes smaller radii important , and within rural areas larger radii become important .",
    "in this paper , we introduce the problem of image classification with location context . to represent location context",
    ", we propose 5 features that help capture context about a particular location , and show how to incorporate them into a cnn model . for features that require pooling over radii",
    ", we show how to automatically learn the optimal radius within the same framework , allowing us to obtain better performance and a deeper understanding into the network parameters .",
    "furthermore , we introduce and make publicly available the yfcc100m - geo100 dataset , which we manually annotate to obtain class labels for geotagged images .    for future work",
    ", we would like to explore taking advantage of other aspects of images that are now becoming widely available , such as time and date taken or the social relationships between the users ."
  ],
  "abstract_text": [
    "<S> with the widespread availability of cellphones and cameras that have gps capabilities , it is common for images being uploaded to the internet today to have gps coordinates associated with them . </S>",
    "<S> in addition to research that tries to predict gps coordinates from visual features , this also opens up the door to problems that are conditioned on the availability of gps coordinates . in this work </S>",
    "<S> , we tackle the problem of performing image classification with location context , in which we are given the gps coordinates for images in both the train and test phases . </S>",
    "<S> we explore different ways of encoding and extracting features from the gps coordinates , and show how to naturally incorporate these features into a convolutional neural network ( cnn ) , the current state - of - the - art for most image classification and recognition problems . </S>",
    "<S> we also show how it is possible to simultaneously learn the optimal pooling radii for a subset of our features within the cnn framework . to evaluate our model and to help promote research in this area </S>",
    "<S> , we identify a set of location - sensitive concepts and annotate a subset of the yahoo flickr creative commons 100 m dataset that has gps coordinates with these concepts , which we make publicly available . by leveraging location context , </S>",
    "<S> we are able to achieve almost a 7% gain in mean average precision . </S>"
  ]
}
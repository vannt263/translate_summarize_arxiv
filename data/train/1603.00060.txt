{
  "article_text": [
    "let @xmath18 be a finite set of points in an axis - aligned bounding rectangle @xmath19 .",
    "an _ anchored rectangle packing _ for @xmath20 is a set of axis - aligned empty rectangles @xmath21 that lie in @xmath19 , are interior - disjoint , and @xmath3 is one of the four corners of @xmath4 for @xmath22 ; rectangle @xmath4 is said to be _ anchored _ at @xmath3 . for a given point set @xmath23 , we wish to find the maximum total area @xmath24 of an anchored rectangle packing of @xmath20 .",
    "since the ratio between areas is an affine invariant , we may assume that @xmath25 ^ 2 $ ] .",
    "however , if we are interested in the maximum area of an _ anchored square packing _ , we _ must _ assume that @xmath25 ^ 2 $ ] ( or that the aspect ratio of @xmath19 is bounded from below by a constant ; otherwise , with an _ arbitrary _ rectangle @xmath19 , the guaranteed area is zero ) .",
    "finding the maximum area of an anchored rectangle packing of @xmath6 given points is suspected but not known to be np - hard .",
    "balas and tth  @xcite observed that the number of distinct rectangle packings that attain the maximum area , @xmath24 , can be exponential in @xmath6 . from the opposite direction , the same authors  @xcite proved an exponential upper bound on the number of maximum area configurations , namely @xmath26 , where @xmath27 is the @xmath6th catalan number .",
    "note that a greedy strategy may fail to find @xmath24 ; see fig .",
    "[ fig : greedyfail ] .    , with @xmath28 and @xmath29 , a greedy algorithm selects rectangles of area @xmath30 ( left ) , which is less than the area @xmath31 of the packing on the right . ]    [ [ variants - and - generalizations . ] ] variants and generalizations .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we consider three additional variants of the problem .",
    "an _ anchored square packing _ is an anchored rectangle packing in which all rectangles are squares ; a _ lower - left anchored rectangle packing _ is a rectangle packing where each point @xmath32 is the lower - left corner of @xmath4 ; and a _ lower - left anchored square packing _ has both properties .",
    "we suspect that all variants , with rectangles or with squares , are np - hard . here",
    ", we put forward several approximation algorithms , while it is understood that the news regarding np - hardness can occur at any time or perhaps take some time to establish .",
    "the problem can be generalized to other geometric shapes with distinct representatives .",
    "let @xmath33 be a finite set of points in a compact domain @xmath34 , and let @xmath35 be @xmath6 families of measurable sets ( , rectangles , squares , or disks ) such that for all @xmath36 , we have @xmath37 and @xmath38 is the measure of @xmath39 .",
    "an _ anchored packing for @xmath40 _ is a set of pairwise interior - disjoint representatives @xmath21 with @xmath41 for @xmath5 .",
    "we wish to find an anchored packing for @xmath40 of maximum measure @xmath42 . while some variants are trivial ( , when @xmath25 ^ 2 $ ] and @xmath43 consists of all rectangles containing @xmath3 ) , there are many interesting and challenging variants ( , when @xmath43 consists of disks containing @xmath3 ; or when @xmath19 is nonconvex ) . in this paper",
    "we assume that the domain @xmath19 and the families @xmath44 are axis - aligned rectangles or axis - aligned squares in the plane .",
    "+    ' '' ''    guaranteed max .",
    "area & @xmath45 & @xmath46 & @xmath47 & @xmath47 + greedy approx .",
    "ratio & @xmath48 & @xmath14 & @xmath49  @xcite & @xmath15 + approximation scheme & qptas & ptas & qptas & ptas +    [ [ contributions . ] ] contributions .",
    "+ + + + + + + + + + + + + +    our results are summarized in table  [ table:1 ] .",
    "\\(i ) we first deduce upper and lower bounds on the maximum area of an anchored rectangle packing of @xmath6 points in @xmath1 ^ 2 $ ] . for @xmath50 ,",
    "let @xmath51 .",
    "we prove that @xmath52 for all @xmath8 ( sections  [ sec : upper ] and  [ sec : lower ] ) .",
    "\\(ii ) let @xmath53 be the maximum area of an anchored square packing for a point set @xmath20 , and @xmath54 .",
    "we prove that @xmath46 for all @xmath6 ( sections  [ sec : upper ] and  [ sec : lower : sq ] ) .",
    "\\(iii ) the above constructive lower bounds immediately yield constant - factor approximations for computing anchored packings of maximum area ( @xmath12 for rectangles and @xmath10 for squares ) in @xmath13 time ( sections  [ sec : lower ] and [ sec : lower : sq ] ) . in section  [ sec : approx ] we show that a ( natural ) greedy algorithm for anchored square packings achieves a better approximation ratio , namely @xmath55 , in @xmath56 time . by refining some of the tools developed for this bound , in section  [ sec : approx : ll ]",
    "we prove a tight bound of @xmath15 for the approximation ratio of a greedy algorithm for lower - left anchored square packings .",
    "\\(iv ) we obtain a polynomial - time approximation scheme ( ptas ) for the maximum area anchored square packing problem , and a quasi - polynomial - time approximation scheme ( qptas ) for the maximum area anchored rectangle packing problem , via a reduction to the maximum weight independent set ( mwis ) problem for axis - aligned squares  @xcite and rectangles  @xcite , respectively . given @xmath6 points , an @xmath57-approximation for the anchored square packing of maximum area can be computed in time @xmath16 ; and for the anchored rectangle packing of maximum area , in time @xmath17 .",
    "both results extend to the lower - left anchored variants ( section  [ sec : schemes ] ) .",
    "[ [ motivation - and - related - work . ] ] motivation and related work .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + +    packing axis - aligned rectangles in a rectangular container , albeit without anchors , is the unifying theme of several classic optimization problems .",
    "the 2d knapsack problem , strip packing , and 2d bin packing involve arranging a set of given rectangles in the most economic fashion  @xcite .",
    "the maximum area independent set ( mais ) problem for rectangles ( squares , or disks , etc . ) , is that of selecting a maximum area packing from a given set  @xcite ; see classic papers such as  @xcite and also more recent ones  @xcite for quantitative bounds and constant approximations .",
    "these optimization problems are np - hard , and there is a rich literature on approximation algorithms .",
    "given an axis - parallel rectangle @xmath19 in the plane containing @xmath6 points , the problem of computing a maximum - area empty axis - parallel sub - rectangle contained in @xmath19 is one of the oldest problems studied in computational geometry  @xcite ; the higher dimensional variant has been also studied  @xcite .",
    "in contrast , our problem setup is fundamentally different : the rectangles ( one for each anchor ) have variable sizes , but their location is constrained by the anchors .",
    "map labeling problems in geographic information systems ( gis )  @xcite call for choosing interior - disjoint rectangles that are incident to a given set of points in the plane .",
    "gis applications often impose constraints on the label boxes , such as aspect ratio , minimum and maximum size , or priority weights .",
    "most optimization problems of such variants are known to be np - hard  @xcite . in this paper",
    ", we focus on maximizing the total area of an anchored rectangle packing .    in a restricted setting where each point @xmath3 is the lower - left corner of the rectangle @xmath4 and @xmath58 , allen freedman  @xcite conjectured almost 50 years ago that there is a lower - left anchored rectangle packing of area at least @xmath59 .",
    "the current best lower bound on the area under these conditions is ( about ) @xmath49 , as established in  @xcite .",
    "the analogous problem of estimating the total area for lower - left anchored square packings is much easier .",
    "if @xmath20 consists of the @xmath6 points @xmath60 , @xmath61 , then the total area of the @xmath6 anchored squares is at most @xmath62 , and so it tends to zero as @xmath6 tends to infinity .",
    "a looser anchor restriction , often appearing in map labeling problems with square labels , requires the anchors to be contained in the boundaries of the squares , however the squares need to be congruent ; see  ,  @xcite .    in the context of _ covering _ ( as opposed to _ packing _ ) , the problem of covering a given polygon by disks of given centers and varying radii such that the sum of areas of the disks is minimized has been considered in  @xcite . in particular , covering @xmath1 ^ 2 $ ] with @xmath63-disks of given centers and minimal area as in  @xcite is dual to the anchored square packings studied in this paper .",
    "[ [ notation . ] ] notation .",
    "+ + + + + + + + +    given an @xmath6-element point set @xmath20 contained in @xmath25 ^ 2 $ ] , denote by @xmath64 a packing ( of rectangles or squares , as the case may be ) of maximum total area .",
    "an algorithm for a packing problem has approximation ratio @xmath65 if the packing it computes , @xmath66 , satisfies @xmath67 , for some @xmath68 .",
    "a set of points is _ in general position _ if no two points have the same @xmath69- or @xmath70-coordinate .",
    "the boundary of a planar body @xmath71 is denoted by @xmath72 , and its interior by @xmath73 .",
    "[ prop:2/3 ] for every @xmath8 , there exists a point set @xmath74 such that every anchored rectangle packing for @xmath74 has area at most @xmath75 . consequently , @xmath76 .",
    "consider the point set @xmath77 , where @xmath78 , for @xmath79 ; see fig .",
    "[ f3](left ) .",
    "let @xmath80 be an anchored rectangle packing for @xmath20 . since @xmath81 , any rectangle anchored at @xmath82 has height at most @xmath83 , width at most @xmath83 , and hence area at most @xmath84 .    for @xmath85 , the @xmath69-coordinate of @xmath3 , @xmath86 , is halfway between 0 and @xmath87 , and @xmath88 is halfway between 0 and @xmath89 .",
    "consequently , if @xmath3 is the lower - right , lower - left or upper - left corner of @xmath4 , then @xmath90 . if , @xmath3 is the upper - right corner of @xmath4 , then @xmath91 .",
    "therefore , in all cases , we have @xmath92 . the total area of an anchored rectangle packing is bounded from above as follows : @xmath93    = 3.3 in    [ prop:7/27 ] for every @xmath8 , there exists a point set @xmath74 such that every anchored square packing for @xmath74 has area at most @xmath94 .",
    "consequently , @xmath95 .",
    "consider the point set @xmath77 , where @xmath96 , for @xmath97 ; see fig .",
    "[ f3](right ) .",
    "let @xmath98 be an anchored square packing for @xmath20 .",
    "since @xmath99 and @xmath100 , any square anchored at @xmath82 or at @xmath101 has side - length at most @xmath102 , hence area at most @xmath103 . for @xmath104 ,",
    "the @xmath69-coordinate of @xmath3 , @xmath86 , is halfway between 0 and @xmath87 , and @xmath88 is halfway between 0 and @xmath89 .",
    "hence any square anchored at @xmath3 has side - length at most @xmath105 , hence area at most @xmath106 .",
    "the total area of an anchored square packing is bounded from above as follows : @xmath107    [ [ remark . ] ] remark .",
    "+ + + + + + +    stronger upper bounds hold for small @xmath6 , , @xmath108 .",
    "specifically , @xmath109 attained for the center @xmath110 ^ 2 $ ] , and @xmath111 and @xmath112 attained for @xmath113 .",
    "in this section , we prove that for every set @xmath20 of @xmath6 points in @xmath1 ^ 2 $ ] , we have @xmath114 .",
    "our proof is constructive ; we give a divide & conquer algorithm that partitions @xmath19 into horizontal strips and finds @xmath6 anchored rectangles of total area bounded from below as required .",
    "we start with a weaker lower bound , of about @xmath59 , and then sharpen the argument to establish the main result of this section , a lower bound of about @xmath115 .",
    "[ pn/2(n+1 ) ] for every set of @xmath6 points in the unit square @xmath1 ^ 2 $ ] , an anchored rectangle packing of area at least @xmath116 can be computed in @xmath13 time .",
    "let @xmath77 be a set of points in the unit square @xmath1 ^ 2 $ ] sorted by their @xmath70-coordinates .",
    "draw a horizontal line through each point in @xmath20 ; see fig .",
    "[ fig : horizontalstrips](left ) .",
    "these lines divide @xmath1 ^ 2 $ ] into @xmath117 horizontal strips .",
    "a strip can have zero width if two points have the same @xmath69-coordinate .",
    "we leave a narrowest strip empty and assign the remaining strips to the @xmath6 points such that each rectangle above ( resp .",
    ", below ) the chosen narrowest strip is assigned to a point of @xmath20 on its bottom ( resp . ,",
    "top ) edge . for each point",
    "divide the corresponding strip into two rectangles with a vertical line through the point .",
    "assign the larger of the two rectangles to the point .",
    "( here @xmath118 ) .",
    "right : an example of the partition for even @xmath6 ( here @xmath119 ) .",
    "the strip that is discarded is shaded in the drawing . ]",
    "the area of narrowest strip is at most @xmath120 .",
    "the rectangle in each of the remaining @xmath6 strips covers at least @xmath83 of the strip .",
    "this yields a total area of at least @xmath116 .    for a stronger lower bound ,",
    "our key observation is that for _ two _ points in a horizontal strip , one can always pack two anchored rectangles in the strip that cover strictly more than half the area of the strip . specifically , we prove the following easy - looking statement with @xmath121 points in a rectangle ( however , we did not find an easy proof ! ) .",
    "the proof of lemma  [ lem : rectangle ] is deferred to appendix  [ sec : rectangle ] .",
    "[ lem : rectangle ] let @xmath122 be two points in an axis - parallel rectangle @xmath123 such that @xmath82 lies on the bottom side of @xmath123 . then there exist two empty rectangles in @xmath123 anchored at the two points of total area at least @xmath124 , and this bound is the best possible .    in order to partition the unit square into strips that contain two points , one on the boundary , we need to use parity arguments .",
    "let @xmath20 be a set of @xmath6 points in @xmath1 ^ 2 $ ] with @xmath70-coordinates @xmath125 .",
    "set @xmath126 and @xmath127 . for @xmath128 , put @xmath129 ,",
    "namely @xmath130 is the @xmath131th vertical gap .",
    "obviously , we have @xmath132    parity considerations are handled by the following lemma .",
    "[ lem : partition ] ( i ) if @xmath6 is odd , then at least one of the following @xmath133 inequalities is satisfied : @xmath134    \\(ii ) if @xmath6 is even , then at least one of the following @xmath135 inequalities is satisfied : @xmath136    assume first that @xmath6 is odd .",
    "put @xmath137 and assume that none of the inequalities in   is satisfied .",
    "summation would yield @xmath138 which is an obvious contradiction .",
    "assume now that @xmath6 is even .",
    "put @xmath139 and assume that none of the inequalities in   is satisfied .",
    "summation would yield @xmath140 an obvious contradiction .",
    "we can now prove the main result of this section .",
    "[ thm:7/12 ] for every set of @xmath6 points in the unit square @xmath1 ^ 2 $ ] , an anchored rectangle packing of area at least @xmath141 when @xmath6 is odd and @xmath142 when @xmath6 is even can be computed in @xmath13 time .",
    "let @xmath77 be a set of points in the unit square @xmath1 ^ 2 $ ] sorted by their @xmath70-coordinates with the notation introduced above . by lemma  [ lem : partition ] , we find a horizontal strip corresponding to one of the inequalities that is satisfied .",
    "assume first that @xmath6 is odd .",
    "draw a horizontal line through each point in @xmath143 , for @xmath144 even , as shown in fig .",
    "[ fig : horizontalstrips ] .",
    "these lines divide @xmath1 ^ 2 $ ] into @xmath145 rectangles ( horizontal strips ) .",
    "suppose now that the satisfied inequality is @xmath146 for some odd @xmath131 .",
    "then we leave a rectangle between @xmath147 and @xmath148 empty , , @xmath4 is a rectangle of area @xmath47 . for the remaining rectangles , we assign two consecutive points of @xmath20 such that each strip above @xmath148 ( resp . , below @xmath147 )",
    "is assigned a point of @xmath20 on its bottom ( resp . ,",
    "top ) edge . within each rectangle @xmath123",
    ", we can choose two anchored rectangles of total area at least @xmath124 by lemma  [ lem : rectangle ] . by lemma  [ lem : partition](i )",
    ", the area of the narrowest strip is at most @xmath149 .",
    "consequently , the area of the anchored rectangles is at least @xmath150 .",
    "assume now that @xmath6 is even .",
    "if the selected horizontal strip corresponds to the inequality @xmath151 , then divide the unit square along the lines @xmath152 , where @xmath131 is odd .",
    "we leave the strip of height @xmath153 empty , and assign pairs of points to all remaining strips such that one of the two points lies on the top edge of the strip .",
    "we proceed analogously if the inequality @xmath154 is satisfied .",
    "suppose now that the satisfied inequality is @xmath155 .",
    "if @xmath131 is odd , we leave the strip of height @xmath156 ( between @xmath147 and @xmath152 ) empty ; if @xmath131 is even , we leave the strip of height @xmath157 ( between @xmath152 and @xmath158 ) empty . above and below the empty strip",
    ", we can form a total of @xmath159 strips , each containing two points of @xmath20 , with one of the two points lying on the bottom or the top edge of the strip . by lemma  [ lem : partition](i ) ,",
    "the area of the empty strip is at most @xmath160 .",
    "consequently , the area of the anchored rectangles is at least @xmath161 , as claimed .",
    "given a set @xmath162 ^ 2 $ ] of @xmath6 points , we show there is an anchored square packing of large total area .",
    "the proof we present is constructive ; we give a recursive partitioning algorithm ( as an inductive argument ) based on a quadtree subdivision of @xmath19 that finds @xmath6 anchored squares of total area at least @xmath10 .",
    "we need the following easy fact :    [ obs : adjacent1 ] let @xmath163 be two congruent axis - aligned interior - disjoint squares sharing a common edge such that @xmath164 and @xmath165",
    ". then @xmath166 contains an anchored empty square whose area is at least @xmath167 .",
    "let @xmath168 denote the side - length of @xmath169 ( or @xmath170 ) .",
    "assume that @xmath170 lies right of @xmath169 .",
    "let @xmath171 be the rightmost point in @xmath169 .",
    "if @xmath172 lies in the lower half - rectangle of @xmath169 then the square of side - length @xmath173 whose lower - left anchor is @xmath172 is empty and has area @xmath174 .",
    "similarly , if @xmath172 lies in the higher half - rectangle of @xmath169 then the square of side - length @xmath173 whose upper - left anchor is @xmath172 is empty and has area @xmath174 .",
    "[ thm:5/32 ] for every set of @xmath6 points in @xmath25 ^ 2 $ ] , where @xmath175 , an anchored square packing of total area at least @xmath10 can be computed in @xmath176 time .",
    "we first derive a lower bound of @xmath177 and then sharpen it to @xmath10 .",
    "we proceed by induction on the number of points @xmath6 contained in @xmath19 and assigned to @xmath19 ; during the subdivision process , the rle of @xmath19 is taken by any subdivision square .",
    "if all points in @xmath20 lie on @xmath19 s boundary , @xmath178 , pick one arbitrarily , say , @xmath179 ; assume @xmath180 .",
    "( all assumptions in the proof are made without loss of generality . )",
    "then the square @xmath181 \\times [ 0,1/2]$ ] is empty and its area is @xmath182 , as required .",
    "otherwise , discard the points in @xmath183 and continue on the remaining points .",
    "if @xmath184 , we can assume that @xmath185 .",
    "then the square of side - length @xmath59 whose lower - left anchor is @xmath172 is empty and contained in @xmath19 , as desired ; hence @xmath186 . if @xmath187 let @xmath188 be the widths of the @xmath189 vertical strips determined by the two points , where @xmath190 .",
    "we can assume that @xmath191 ; then there are two anchored empty squares with total area at least @xmath192 , as required .",
    "assume now that @xmath193 .",
    "subdivide @xmath19 into four congruent squares , @xmath194 , labeled counterclockwise around the center of @xmath19 according to the quadrant containing the square .",
    "partition @xmath20 into four subsets @xmath195 such that @xmath196 for @xmath197 , with ties broken arbitrarily .",
    "we next derive the lower bound @xmath198 .",
    "we distinguish @xmath199 cases , depending on the number of empty sets @xmath200 .",
    "* case 1 : precisely one of @xmath195 is empty .",
    "* we can assume that @xmath201 .",
    "by observation  [ obs : adjacent1 ] , @xmath202 contains an empty square anchored at a point in @xmath203 of area at least @xmath204 . by induction , @xmath205 and @xmath206",
    "each contain an anchored square packing of area at least @xmath207 .",
    "overall , we have @xmath208 , which holds for @xmath209 .    * case 2 : precisely two of @xmath195 are empty .",
    "* we can assume that the pairs @xmath210 and @xmath211 each consist of one empty and one nonempty set .",
    "by observation  [ obs : adjacent1 ] @xmath202 and @xmath212 , respectively , contain a square anchored at a point in @xmath203 and @xmath213 of area at least @xmath214 .",
    "hence @xmath215 .",
    "* case 3 : precisely three of @xmath195 are empty .",
    "* we can assume that @xmath216 .",
    "let @xmath217 be a maximal point in the product order ( e.g. , the sum of coordinates is maximum )",
    ". then @xmath218\\times [ b , b+\\frac12]$ ] is a square anchored at @xmath219 , @xmath220 ^ 2 $ ] since @xmath221 , and @xmath222 .",
    "hence @xmath223 .",
    "* case 4 : @xmath224 for every @xmath197 . * note that @xmath225 , where the squares anchored at @xmath200 are restricted to @xmath226 .",
    "induction completes the proof in this case .    in all four cases ,",
    "we have verified that @xmath227 , as claimed .",
    "the inductive proof can be turned into a recursive algorithm based on a quadtree subdivision of the @xmath6 points , which can be computed in @xmath13 time  @xcite .",
    "in addition , computing an extreme point ( with regard to a specified axis - direction ) in any subsquare over all needed such calls can be executed within the same time bound .",
    "note that the bound in case 3 is at least @xmath10 and case 4 is inductive .    sharpening the analysis of cases 1 and 2 yields an improved bound @xmath10 ; since @xmath228 , the value @xmath10 is not a bottleneck for cases 3 and 4 .",
    "details are given in appendix  [ app:5/32 ] ; the running time remains @xmath13 .",
    "in this section we investigate better approximations for square packings . given a finite point set @xmath229 ^ 2 $ ] , perhaps the most natural greedy strategy for computing an anchored square packing of large area is the following .",
    "[ alg : sq]set @xmath230 and @xmath231 . while @xmath232 , repeat the following . for each point @xmath233 ,",
    "compute a _ candidate _",
    "square @xmath234 such that ( i )  @xmath235 ^ 2 $ ] is _ anchored _ at @xmath236 , ( ii )  @xmath234 is empty of points from @xmath20 in its interior , ( iii )  @xmath234 is interior - disjoint from all squares in @xmath237 , and ( iv )  @xmath234 has maximum area . then choose a largest candidate square @xmath234 , and a corresponding point @xmath236 , and set @xmath238 and @xmath239 .",
    "when @xmath240 , return the set of squares  @xmath237 .",
    "[ [ remark.-1 ] ] remark .",
    "+ + + + + + +    let @xmath241 denote the approximation ratio of algorithm  [ alg : sq ] , if it exists .",
    "the construction in fig .",
    "[ fig : rho2](a  b ) shows that @xmath242 . for a small @xmath243 ,",
    "consider the point set @xmath77 , where @xmath244 , @xmath245 , @xmath246 , and the rest of the points lie on the lower side of @xmath19 in the vicinity of @xmath101 , , @xmath247 and @xmath248 for @xmath249 .",
    "the packing generated by algorithm  [ alg : sq ] consists of a single square of area @xmath250 , as shown in fig .",
    "[ fig : rho2](a ) , while the packing in fig .",
    "[ fig : rho2](b ) has an area larger than @xmath251 . by letting @xmath252",
    "be arbitrarily small , we deduce that @xmath242 .",
    "[ fig : rho2 ]    we first show that algorithm  [ alg : sq ] achieves a ratio of @xmath253 ( theorem  [ thm:1/6 ] ) using a charging scheme that compares the greedy packing with an optimal packing .",
    "we then refine our analysis and sharpen the approximation ratio to @xmath254 ( theorem  [ thm:9/47 ] ) .",
    "[ [ charging - scheme - for - the - analysis - of - algorithmalgsq . ] ] charging scheme for the analysis of algorithm  [ alg : sq ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    label the points in @xmath18 and the squares in @xmath255 in the order in which they are processed by algorithm  [ alg : sq ] with @xmath256 and @xmath257 .",
    "let @xmath258 be the area of the greedy packing , and let @xmath259 denote an optimal packing with @xmath260 , where @xmath261 is the square anchored at @xmath3 .",
    "we employ a charging scheme , where we distribute the area of every optimal square @xmath261 with @xmath262 among some greedy squares ; and then show that the total area of the optimal squares charged to each greedy square @xmath263 is at most @xmath264 for all @xmath265 .",
    "( degenerate optimal squares , , those with @xmath266 do not need to be charged ) .",
    "for each step @xmath267 of algorithm  [ alg : sq ] , we shrink some of the squares @xmath268 , and charge the area - decrease to the greedy square @xmath263 . by the end ( after the @xmath6th step ) , each of the squares @xmath269 will be reduced to a single point .    specifically in step @xmath144 ,",
    "algorithm  [ alg : sq ] chooses a square @xmath263 , and : ( 1 ) we shrink square @xmath270 to a single point ; and ( 2 ) we shrink every square @xmath261 , @xmath271 that intersects @xmath263 in its interior until it no longer does so .",
    "this procedure ensures that no square @xmath261 , with @xmath272 , intersects @xmath263 in its interior in step @xmath144 .",
    "refer to fig .",
    "[ fig : alg - sq](c ) .",
    "observe three important properties of the above iterative process :    * after step @xmath144 , the squares @xmath273 have pairwise disjoint interiors . * after step @xmath144 , we have @xmath274 ( since @xmath270 was shrunk to a single point ) .",
    "* at the beginning of step @xmath144 , if @xmath261 intersects @xmath263 in its interior ( and so @xmath275 ) , then @xmath276 since @xmath263 is feasible for @xmath3 when @xmath270 is selected by algorithm  [ alg : sq ] due to the greedy choice .",
    "[ lem : ratio ] suppose there exists a constant @xmath277 such that for every @xmath278 , square @xmath263 receives a charge of at most @xmath279 . then algorithm  [ alg : sq ] computes an anchored square packing",
    "whose area @xmath280 is at least @xmath281 times the optimal .",
    "overall , each square @xmath263 receives a charge of at most @xmath282 from the squares in an optimal solution .",
    "consequently , @xmath283 and thus @xmath284 , as claimed .    in the remainder of this section",
    ", we bound the charge received by one square @xmath263 , for @xmath285 .",
    "we distinguish two types of squares @xmath261 , @xmath271 , whose area is reduced by @xmath263 :    * @xmath286 , the area of @xmath261 is reduced by @xmath263 , and @xmath287 contains no corner of @xmath288 , * @xmath289 , the area of @xmath261 is reduced by @xmath263 , and @xmath287 contains a corner of @xmath288 .",
    "it is clear that if the insertion of @xmath263 reduces the area of @xmath261 , @xmath271 , then @xmath261 is in either @xmath290 or @xmath291 .",
    "note that the area of @xmath270 is also reduced to 0 , but it is in neither @xmath290 nor @xmath291 .",
    "[ lem:6 ] each square @xmath263 receives a charge of at most @xmath264 .",
    "consider the squares in @xmath290 .",
    "assume that @xmath261 intersects the interior of @xmath263 , and it is shrunk to @xmath292 .",
    "the area - decrease @xmath293 is an l - shaped region , at least half of which lies inside @xmath263 ; see fig .",
    "[ fig : alg - sq ] . by property ( i ) , the l - shaped regions are pairwise interior - disjoint ; and hence the sum of their areas is at most @xmath294 .",
    "consequently , the area - decrease caused by @xmath263 in squares in @xmath290 is at most @xmath294 .",
    "consider the squares in @xmath291 .",
    "there are at most three squares @xmath261 , @xmath271 , that can contain a corner of @xmath263 since the anchor of @xmath263 is not contained in the interior of any square @xmath261 .",
    "since the area of each square in @xmath291 is at most @xmath295 by property  ( iii ) , the area decrease is at most @xmath296 , and so is the charge received by @xmath263 from squares .",
    "finally , @xmath297 by property  ( iii ) , and this is also charged to @xmath263 .",
    "overall @xmath263 receives a charge of at most @xmath264 .",
    "the combination of lemmas  [ lem : ratio ] and  [ lem:6 ] readily implies the following .",
    "[ thm:1/6 ] algorithm  [ alg : sq ] computes an anchored square packing whose area is at least @xmath253 times the optimal .    [ [ refined - analysis - of - the - charging - scheme . ] ] refined analysis of the charging scheme .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we next improve the upper bound for the charge received by @xmath263 ; we assume for convenience that @xmath298 ^ 2 $ ] . for the analysis , we use only a few properties of the optimal solution .",
    "specifically , assume that @xmath299 are interior - disjoint squares such that each @xmath261 : ( a )  intersects the interior of @xmath263 ; ( b )  has at least a corner in the exterior of @xmath263 ; ( c )  does not contain @xmath300 in its interior ; and ( d )  @xmath276 .",
    "the intersection of any square @xmath261 with @xmath178 is a polygonal line on the boundary @xmath178 , consisting of one or two segments .",
    "since the squares @xmath261 form a packing , these intersections are interior - disjoint .",
    "let @xmath301 denote the maximum area - decrease of a set of squares @xmath261 in @xmath290 , whose intersections with @xmath178 have total length @xmath69 . similarly , let @xmath302 denote the maximum area - decrease of a set of squares @xmath261 in @xmath291 , whose intersections with @xmath178 have total length @xmath69 . by adding suitable squares to @xmath290 , we can assume that @xmath303 is the total length of the intersections @xmath304 over squares in @xmath291 ( , the squares in @xmath305 cover the entire boundary of @xmath19 ) .",
    "consequently , the maximum total area - decrease is given by @xmath306    we now derive upper bounds for @xmath301 and @xmath302 independently , and then combine these bounds to optimize @xmath307 .",
    "since the total perimeter of @xmath19 is 4 , the domain of @xmath307 is @xmath308 .",
    "[ lem : delta1 ] the following inequalities hold : @xmath309    inequality   was explained in the proof of theorem  [ thm:1/6 ] .",
    "inequalities   and   follow from the fact that the side - length of each square @xmath261 is at most  @xmath310 and from the fact that the area - decrease is at most the area ( of respective squares ) ; in addition , we use the inequality @xmath311 , for @xmath312 and @xmath313 , and the inequality @xmath314 , for @xmath315 , and @xmath316 .    write @xmath317 where @xmath318 and @xmath319 denote the maximum area - decrease contained in @xmath19 and the complement of @xmath19 , respectively , of a set of squares in @xmath290 whose intersections with @xmath178 have total length @xmath69 , where @xmath320 . obviously , @xmath321 .",
    "we next show that @xmath322 and thereby establish inequality  .",
    "consider a square @xmath261 of side - length @xmath323 in @xmath290 .",
    "let @xmath324 denote the length of the shorter side of the rectangle @xmath325 .",
    "the area - decrease outside @xmath19 equals @xmath326 and so it is bounded from above by @xmath327 ( equality is attained when @xmath328 ) .",
    "consequently , @xmath329 where the last equality follows from a standard weight - shifting argument , and equality is attained when @xmath69 is subdivided into @xmath330 unit length intervals and a remaining shorter interval of length @xmath331 .",
    "let @xmath332 be the number of squares @xmath261 in @xmath291 , where @xmath271 .",
    "we can assume that exactly @xmath189 squares @xmath261 , with @xmath333 , are in @xmath291 , one for each corner except the lower - left anchor corner of @xmath19 , that is , @xmath334 ; otherwise the proof of lemma  [ lem:6 ] already yields an approximation ratio of @xmath335 .",
    "clearly , we have @xmath336 , for any @xmath69 .",
    "we first bring the squares in @xmath291 into _ canonical position _ : @xmath69 monotonically decreases , @xmath307 does not decrease , and properties ( a  d ) listed earlier are maintained .",
    "specifically , we transform each square @xmath337 as follows ( refer to fig .",
    "[ fig : f7 ] ) :    * move the anchor of @xmath261 to another corner if necessary so that one of its coordinates is contained in the interval @xmath338 ; * translate @xmath261 horizontally or vertically so that @xmath339 decreases to a skinny rectangle of width @xmath252 , for some small @xmath243 .",
    "= 4.7 in    [ lem : delta2 ] the following inequality holds : @xmath340    assume that the squares in @xmath291 are in canonical position . let @xmath88 denote the side - length of @xmath261 , let @xmath86 denote the length of the longer side of the rectangle @xmath341 and @xmath324 denote the length of the shorter side of the rectangle @xmath325 , @xmath342 . since the squares in @xmath291 are in canonical position , we have @xmath343 , for @xmath342 .",
    "we also have @xmath344 . letting @xmath345",
    ", we have @xmath346 .",
    "@xmath347    observe that the inequality @xmath348 , for every @xmath320 , is implied by the inequality  .",
    "putting together the upper bounds in lemmas  [ lem : delta1 ] and  [ lem : delta2 ] yields lemma  [ lem : delta ] :    [ lem : delta ] the following inequality holds : @xmath349 from the opposite direction , @xmath350 holds even in a geometric setting , , as implied by several constructions with squares .",
    "the lower bound @xmath350 is implied by any of the two ( obviously different ! ) configurations shown in fig .",
    "[ fig : f8 ] .",
    "we now prove the upper bound .",
    "recall  ; and by   we obtain @xmath351 we partition the interval @xmath352 $ ] into several subintervals , and select the best upper bound we have in each case .",
    "we distinguish the following cases ( marked with @xmath353 ) :    @xmath353 @xmath354 : by  , @xmath355 ; since @xmath356 , we immediately get that @xmath357    @xmath353 @xmath358 : put @xmath359 . on this interval",
    "we have @xmath360 and so we can use the upper bound in   on @xmath301 and obtain @xmath361    @xmath353 @xmath362 : put @xmath363 . on this interval",
    "we have @xmath364 and so we can use the upper bound in   on @xmath301 and obtain @xmath365    @xmath353 @xmath366 : put @xmath367 . using the upper bound in   on @xmath301 yields",
    "@xmath368    @xmath353 @xmath369 : put @xmath370 . using the upper bound in   on @xmath301 yields",
    "@xmath371    @xmath353 @xmath372 : by  , @xmath373 .",
    "all cases have been checked , and so the proof of the upper bound is complete .",
    "[ lem:47/9 ] each square @xmath263 receives a charge of at most @xmath374 .    by lemma  [ lem : delta ]",
    ", the area - decrease is at most @xmath375 , and so is the charge received by @xmath263 from squares in @xmath290 and from squares in @xmath291 with the exception of the case @xmath376 . adding this last charge yields a total charge of at most @xmath377 .",
    "the combination of lemmas  [ lem : ratio ] and  [ lem:47/9 ] now yields the following .",
    "[ thm:9/47 ] algorithm  [ alg : sq ] computes an anchored square packing whose area is at least @xmath14 times the optimal .",
    "the following greedy algorithm , analogous to algorithm  [ alg : sq ] , constructs a lower - left anchored square packing , given a finite point set @xmath229 ^ 2 $ ] .",
    "[ alg : llsq]set @xmath230 and @xmath231 . while @xmath232 , repeat the following . for each point @xmath233 ,",
    "compute a _ candidate _",
    "square @xmath234 such that ( i )  @xmath235 ^ 2 $ ] has @xmath236 as its _ lower - left _ anchor , ( ii )",
    "@xmath234 is empty of points from @xmath20 in its interior , ( iii )  @xmath234 is interior - disjoint from all squares in @xmath237 , and ( iv )  @xmath234 has maximum area .",
    "then choose a largest candidate square @xmath234 , and a corresponding point @xmath236 , and set @xmath238 and @xmath239 .",
    "when @xmath240 , return the set of squares  @xmath237 .",
    "[ [ remark.-2 ] ] remark .",
    "+ + + + + + +    let @xmath378 denote the approximation ratio of algorithm  [ alg : llsq ] .",
    "the construction in fig .",
    "[ fig : greedy - lowerleft ] shows that @xmath379 .",
    "specifically , for @xmath243 , with @xmath380 , consider the point set @xmath381 .",
    "then the area of the packing in fig .",
    "[ fig : greedy - lowerleft](right ) is @xmath382 , but algorithm  [ alg : llsq ] returns the packing shown in fig .",
    "[ fig : greedy - lowerleft](left ) of area @xmath383 .",
    "we next demonstrate that algorithm  [ alg : llsq ] achieves approximation ratio @xmath15 .",
    "according to the above example , this is the best possible for this algorithm .",
    "[ thm:1/3 ] algorithm  [ alg : llsq ] computes a lower - left anchored square packing whose area is at least @xmath15 times the optimal .",
    "label the points in @xmath18 and the squares in @xmath255 in the order in which they are processed by algorithm  [ alg : llsq ] with @xmath256 and @xmath257 .",
    "let @xmath258 be the area of the greedy packing , and let @xmath259 denote an optimal packing with @xmath260 , where @xmath261 is the square anchored at @xmath3 .",
    "we charge the area of every optimal square @xmath261 to one or two greedy squares @xmath384 ; and then show that the total area charged to @xmath384 is at most @xmath385 for all @xmath386 . consider a square @xmath261 , @xmath387 , with @xmath262 .",
    "let @xmath388 be the minimum index such that @xmath263 intersects the interior of @xmath261 .",
    "let @xmath389 denote the candidate square associated to @xmath3 in step @xmath390 of algorithm  [ alg : llsq ] .",
    "note that @xmath391 , thus @xmath392 . if @xmath393 , then let @xmath394 be the minimum index such that @xmath395 intersects the interior of @xmath389 .",
    "we can now describe our _ charging scheme _ : if @xmath261 contains the upper - left or lower - right corner of @xmath263 , then charge @xmath396 to @xmath263 ( fig .",
    "[ fig : ab ] , left ) .",
    "otherwise , charge @xmath397 to @xmath263 , and charge @xmath398 to @xmath395 ( fig .",
    "[ fig : ab ] , middle - right ) .",
    "we first argue that the charging scheme is well - defined , and the total area of @xmath261 is charged to one or two squares ( @xmath263 and possibly @xmath395 ) . indeed , if no square @xmath384 , @xmath399 , intersects the interior of @xmath261 , then @xmath400 , and @xmath401 ; and if @xmath402 and no square @xmath384 , @xmath403 , intersects the interior of @xmath389 , then @xmath404 and @xmath405 .",
    "= 2.5 in    note that if @xmath396 is charged to @xmath263 , then @xmath276 . indeed , if @xmath406 , then @xmath261 is entirely free at step @xmath144 , so algorithm  [ alg : llsq ] would choose a square at least as large as @xmath261 instead of @xmath263 , which is a contradiction .",
    "analogously , if @xmath398 is charged to @xmath395 , then @xmath407 . moreover , if @xmath398 is charged to @xmath395 , then the upper - left or lower - right corner of  @xmath395 is on the boundary of @xmath389 , and so this corner is contained in @xmath261 ; refer to fig .",
    "[ fig : ab](right ) .",
    "fix @xmath408 .",
    "we show that the total area charged to @xmath384 is at most @xmath385 . if a square @xmath261 , @xmath22 , sends a positive charge to @xmath384 , then @xmath409 or @xmath410 .",
    "we distinguish two types of squares @xmath261 that send a positive charge to @xmath384 ; refer to fig .",
    "[ f5 + ] :    1 .",
    "@xmath261 contains the upper - left or lower - right corner of @xmath384 in its interior .",
    "@xmath261 contains neither the upper - left nor the lower - right corner of @xmath384 .",
    "since @xmath259 is a packing , at most one optimal square contains each corner of @xmath384 .",
    "consequently , there is at most two squares @xmath261 of type * t1*. since @xmath411 , the charge received from the squares of type * t1 * is at most @xmath412 .",
    "the following technical lemma is used for controlling the charge that a greedy square @xmath413 receives from squares of an optimal solution .",
    "[ lem : sides ] let @xmath413 be an axis - aligned square , and @xmath414 be interior - disjoint axis - aligned squares such that    * each @xmath261 intersects the bottom or the left side of a square @xmath413 , but * the interior of @xmath261 does not contain any corner of @xmath413 .    for @xmath415 ,",
    "let @xmath389 be a maximal square contained in @xmath416 .",
    "then @xmath417 .    for @xmath418 ,",
    "let @xmath419 denote the side - length of @xmath261 , and define the _ depth _ @xmath420 of @xmath261 as the length of a shortest side of @xmath421 . with this notation , we have @xmath422 , the area of the @xmath423-shaped region @xmath424 is @xmath425    we apply a sequence of operations on the squares @xmath299 that maintain properties * p1 * and * p2 * , and monotonically increase @xmath426 .",
    "the operations successively transform the squares , eventually eliminate @xmath427 squares , and ensure that the last surviving square is @xmath428 .",
    "this implies @xmath429 , as required .",
    "= 6.3 in    * operation  1 . *",
    "translate @xmath261 horizontally or vertically so that its depth increases until @xmath430 or @xmath261 is blocked by some other square .",
    "see fig .",
    "[ fig : op12 ] .",
    "perform operation  1 successively for every square @xmath261 in an arbitrary order .",
    "the operation can only increase the contribution @xmath431 of @xmath261 since @xmath419 is fixed and the depth @xmath420 can only increase .    * operation  2 .",
    "* translate @xmath261 horizontally or vertically so that its depth remains fixed but @xmath261 moves closer to the lower - left corner @xmath172 until it reaches @xmath172 or is blocked by another square .",
    "see fig .",
    "[ fig : op12 ] .",
    "perform operation  2 successively for every square @xmath261 in the order determined by their distance from @xmath172 .",
    "this operation does not change the contribution of the squares @xmath261 .",
    "* operation 3 . *",
    "if @xmath261 intersects the bottom ( left ) side of @xmath413 and its right ( top ) side is not in contact with any other square or a corner of @xmath413 , then dilate @xmath261 from its upper - left ( lower - right ) corner until it is blocked by another square or the boundary of @xmath413 .",
    "see fig .",
    "[ fig : op12](right ) .",
    "since operation  3 increases @xmath419 and keeps @xmath420 fixed , the contribution @xmath432 of @xmath261 increases . note that if the lower - left corner of @xmath261 is @xmath172 originally and operation  3 is applied to @xmath261 , then its lower - left corner may move to the exterior of @xmath413 .",
    "= 6.3 in    * operation  4 . *",
    "consider two squares , @xmath261 and @xmath270 , such that both intersect the bottom side of @xmath413 and they are adjacent . without loss of generality , assume @xmath261 is left of @xmath270 and @xmath433 .",
    "see fig .",
    "[ fig : op4 ] .",
    "we wish to increase @xmath419 and decrease @xmath434 while @xmath435 is fixed , and such that their depths does not increase .",
    "we distinguish two cases to ensure that @xmath261 intersects the bottom side of @xmath413 after the operation .",
    "if @xmath436 , then dilate @xmath261 from its upper - left corner and @xmath270 from its upper - right corner simultaneously until @xmath437 or @xmath261 is blocked by some other square or a corner of @xmath413 . in this case , @xmath420 and @xmath438 remain constant , and the contribution of @xmath261 and @xmath270 increases or remains the same . indeed , if @xmath419 increases and @xmath434 decreases by @xmath243 , then @xmath439 if @xmath437 , then dilate @xmath261 from its upper - left corner and @xmath270 from its lower - right corner simultaneously until @xmath440 or @xmath261 is blocked by some other square or a corner of @xmath413 . in this case , @xmath420 is constant , and @xmath437 decreases .",
    "the contribution of @xmath261 and @xmath270 increases or remains the same : @xmath441 we apply analogous operations to adjacent squares intersecting the left side of @xmath413 .",
    "= 4.5 in    * operation  5 . *",
    "consider two adjacent squares , @xmath261 and @xmath270 , such that @xmath261 is incident to the lower - left corner of @xmath413 and intersects the bottom ( resp .",
    ", left ) side of @xmath413 , and @xmath270 intersects the left ( resp . , bottom ) side of @xmath413 .",
    "see fig .",
    "[ fig : op5 ] .",
    "note that @xmath442 , otherwise operation  2 could increase @xmath419 ; and if @xmath443 , then @xmath444 , otherwise operation  1 could increase @xmath438 .",
    "let @xmath123 be the axis - aligned bounding box of @xmath445 , which is incident to the lower - left corner of @xmath172 and @xmath446 .",
    "we replace @xmath261 and @xmath270 with one new square @xmath447 such that @xmath448 .",
    "it remains to show that operation  5 increases the total contribution of the squares .",
    "we distinguish two cases depending on which side of @xmath123 is longer .",
    "_ case  1 .",
    "_ if @xmath449 , then @xmath447 has side - length @xmath450 and depth @xmath451 . in case @xmath452 ( fig .",
    "[ fig : op4 ] , left ) , we have @xmath453 otherwise we have @xmath454 and @xmath437 ( fig .",
    "[ fig : op4 ] , right ) . thus , @xmath455    _ case  2 . _",
    "if @xmath456 , then @xmath447 has side - length @xmath457 and depth @xmath458 . in this case , we have @xmath452 , otherwise operation  1 could increase @xmath438 .",
    "thus , @xmath459    after successively applying operation  5 , we obtain a single square @xmath428 , whose contribution is @xmath460 , as required .    by lemma  [ lem : sides ] , @xmath384 receives a charge of at most @xmath461 from squares of type * t2*. it follows that each @xmath384 received a charge of at most @xmath385 .",
    "consequently , @xmath462 and thus @xmath463 .",
    "this completes the proof of theorem  [ thm:1/3 ] .",
    "in this section , we show that there is a ptas ( resp . , qptas ) for the maximum anchored square ( resp . , rectangle ) problem using reductions to the minimum weight independent set ( mwis ) problem for axis - aligned squares ( resp . , rectangles ) in the plane .",
    "the current best approximation ratio for mwis with axis - aligned rectangles is @xmath464  @xcite , and @xmath465 in the unweighted case  @xcite .",
    "there is a ptas for mwis with axis - aligned squares  @xcite ( even a local search strategy works in the unweighted case  @xcite ) ; and there is a qptas for mwis with axis - aligned rectangles  @xcite . specifically , for @xmath6 axis - aligned squares an @xmath57-approximation for mwis which can be computed in time @xmath16",
    "@xcite , and for @xmath6 axis - aligned rectangles in time @xmath466",
    "@xcite .",
    "an anchored rectangle can be also viewed from the perspective of robotics applications such as _ a rectangular robotic arm _ anchored at the given point . in this context , an anchored packing of maximum total area represents the maximum collective _ reach _ of a collection of nonoverlapping rectangular robotic arms .",
    "the maximum area of a lower - left anchored rectangle ( resp . ,",
    "square ) packing can be arbitrarily small , , with no constant lower - bound guarantee , when the points in @xmath20 are close to the top or right boundary of @xmath1 ^ 2 $ ] , or for square packings , when @xmath6 is large and the points are suitably placed , , along the diagonal of unit slope .",
    "however , we show below that a greedy packing still covers a constant fraction of the region that could potentially be covered by lower - left anchored rectangles ( resp . , squares ) .",
    "we then employ this lower bound in the design of a qptas ( resp . ,",
    "ptas ) for lower - left anchored rectangles ( resp . , squares ) in section  [ ssec : approx - schemes ] .",
    "[ [ the - reach - of - lower - left - anchored - rectangles . ] ] the reach of lower - left anchored rectangles .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for a set @xmath20 of @xmath6 points in @xmath19 , define the _ reach of lower - left anchored rectangles _ as @xmath467 , where @xmath468 is the axis - aligned rectangle spanned by @xmath172 and the upper - right corner of @xmath1 ^ 2 $ ] .",
    "clearly , @xmath469 is a simple orthogonal polygon in which every lower - left corner is an element in @xmath20 .",
    "vertical lines through the lower - left corners of @xmath469 subdivide @xmath469 into axis - aligned rectangles whose lower left - corners are in @xmath20 . each of these rectangles @xmath39 admits a lower - left anchored rectangle packing of area at least @xmath470 by the main result in  @xcite , consequently @xmath471 .    [",
    "[ the - reach - of - lower - left - anchored - squares . ] ] the reach of lower - left anchored squares .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    similarly , we define the _ reach of lower - left anchored squares _ as @xmath472 , where @xmath473 is the ( unique ) maximal square contained in @xmath19 whose lower - left corner is @xmath172 and that is empty of points of @xmath20 in its interior .",
    "observe that @xmath474 is the union of candidate squares in the first iteration of algorithm  [ alg : llsq ] .",
    "[ lem:3s - ll ] let @xmath475 be a point set with a lower - left anchored square packing @xmath476 returned by algorithm  [ alg : llsq ]",
    ". then @xmath477 .",
    "we need to show that every point @xmath478 lies in @xmath479 .",
    "this claim clearly holds when @xmath236 is covered by one of the squares @xmath480 .",
    "let @xmath481 be a point left uncovered by the greedy square packing",
    ". by the definition of @xmath474 , point @xmath236 lies in some lower - left anchored square @xmath482 , @xmath483 , of maximum area contained in @xmath1 ^ 2 $ ] but empty of points of @xmath20 in its interior .",
    "note that the boundary of @xmath413 contains at least one point from @xmath20 , namely @xmath483 .",
    "let @xmath263 be the first square chosen by algorithm  [ alg : llsq ] that intersects the interior of @xmath413 .",
    "we are guaranteed the existence of @xmath263 because if no previous greedy square intersects the interior of @xmath413 , then @xmath484 ( possibly @xmath376 ) . at the beginning of the step @xmath144 of algorithm  [ alg : llsq ] ,",
    "no square in @xmath237 intersects @xmath413 . by the greedy choice",
    ", we have @xmath485 . since @xmath486 and the side - length of @xmath413 is less than or equal to the side - length of @xmath263 , we have @xmath487 .",
    "[ thm:1/9-ll ] for every finite point set @xmath20 in @xmath1 ^ 2 $ ] , there is a lower - left anchored square packing of total area at least @xmath488 .",
    "given a point set @xmath489 ^ 2 $ ] and a greedy lower - left anchored square packing @xmath490 , lemma  [ lem:3s - ll ] yields @xmath491 which implies @xmath492 , as claimed .",
    "[ [ the - reach - of - anchored - squares . ] ] the reach of anchored squares .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for a finite ( nonempty ) set @xmath229 ^ 2 $ ] , the _ reach of anchored squares _",
    "@xmath493 is the union of all maximal squares anchored at a point in @xmath20 and contained in @xmath19 .",
    "obviously , we have @xmath494 by theorem  [ thm:5/32 ] , and we suspect that @xmath495 for every  @xmath20 .",
    "if true , this bound would be the best possible : choose a small @xmath243 and place all @xmath6 points in the @xmath252-neighborhood of @xmath496 on the lower side of @xmath19 .",
    "the side - length of any anchored square is at most @xmath497 , which is an upper bound for the distance of these points from the left and right side of @xmath1 ^ 2 $ ] .",
    "consequently all anchored squares lie below the horizontal line @xmath498 , and so the area of their reach is at most @xmath497 .",
    "[ [ anchored - rectangles . ] ] anchored rectangles .",
    "+ + + + + + + + + + + + + + + + + + + +    the anchored rectangle packing problem can be discretized  @xcite , as one can specify a set of @xmath499 anchored rectangles that contains the optimum packing : consider the hanan grid  @xcite induced by the points , , the union of @xmath178 and the @xmath500 unit horizontal and vertical unit segments incident to the @xmath6 points and contained in @xmath19 . then an optimal rectangle packing can be found in this grid ( with at most @xmath501 candidates for each anchor ) . to formulate the anchored rectangle packing problem as a maximum weight independent set ( mwis ) problem , the set of rectangles anchored at the same point",
    "are slightly enlarged so that they contain the common anchors in their interiors . for a set of points in general position",
    ", this procedure yields an qptas for finding a maximum area anchored rectangle packing for a set of @xmath6 points in @xmath19 .",
    "[ [ anchored - squares . ] ] anchored squares .",
    "+ + + + + + + + + + + + + + + + +    it is worth noting that no similar discretization is known for the anchored square packing problem . with an @xmath252-factor loss of the total area , however",
    ", we can construct @xmath502 squares for which mwis gives an anchored packing of area at least @xmath503 .",
    "after a similar transformation ensuring that the set of squares anchored at the same point contain the point in their interiors , and under the assumption of points in general position , we obtain a ptas for the maximum - area anchored square packing problem .",
    "[ thm : ptas - sq ] there is a ptas for the maximum area anchored square problem . for every @xmath243",
    ", there is an algorithm that computes , for a set of @xmath6 points in general position in @xmath1 ^ 2 $ ] , an anchored square packing of area at least @xmath503 in time @xmath16 .",
    "first we show that the problem can be discretized if we are willing to lose a factor @xmath243 of the maximum area of a packing .",
    "let @xmath20 be a set of @xmath6 points in @xmath1 ^ 2 $ ] , and let @xmath259 be an anchored square packing of maximum area .",
    "for a given @xmath243 , drop all squares in @xmath259 of area less than @xmath504 , and shrink all remaining squares in @xmath259 so that its anchor remains the same , and its area decreases by a factor of at most @xmath505 to @xmath506 for some integer @xmath507 .",
    "denote by @xmath508 the resulting anchored square packing .",
    "we have dropped small squares of total area at most @xmath252 , and the area of any remaining square decreased by a factor of at most @xmath505 .",
    "consequently , @xmath509 .",
    "for anchored square packings , we have @xmath510 by theorem  [ thm:5/32 ] , which yields @xmath511",
    "let @xmath243 be given .",
    "for every set @xmath20 of @xmath6 points in general position in @xmath1 ^ 2 $ ] , we compute a set @xmath512 of @xmath513 _ candidate _ squares , and show that a mwis of @xmath512 ( where the weight of each square is its area ) has area at least @xmath514 .",
    "for each point @xmath171 , consider a set @xmath515 of empty squares anchored at @xmath413 and contained in @xmath19 whose areas are of the form @xmath516 , for @xmath517 .",
    "translate each square in @xmath515 , for all @xmath171 , by a sufficiently small @xmath518 so that each square contains its anchor in its interior , but does not cross any new horizontal or vertical line through the points in @xmath20 ; denote by @xmath519 the resulting set of squares . let @xmath520 .",
    "note that the squares in @xmath519 pairwise intersect for each @xmath171 , hence an mwis contains precisely one square ( possibly of 0 area ) for each point in @xmath20 .",
    "the number of squares is @xmath521 by , the area of a mwis for the candidate squares in @xmath512 is at least @xmath514 .    using the ptas for mwis with axis - aligned squares due to chan  @xcite : an @xmath57-approximation for a set of @xmath522 weighted axis - aligned squares",
    "can be computed in time @xmath523 .",
    "[ [ lower - left - anchored - packings . ] ] lower - left anchored packings .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    even though the area of _ lower - left _ anchored square packings is not bounded by any constant , and theorem  [ thm:5/32 ] no longer holds , the ptas in theorem  [ thm : ptas - sq ] can be extended for this variant .",
    "recall that for a set @xmath229 ^ 2 $ ] , the reach of lower - left anchored squares , denoted @xmath474 , is the union of all maximal squares in @xmath1 ^ 2 $ ] whose lower - left corner is in @xmath20 , and are empty from points of @xmath20 in their interior .",
    "it is clear that @xmath474 contains all squares of a lower - left anchored square packing for @xmath20 , and we have @xmath524 by theorem  [ thm:1/9-ll ] . by adjusting the resolution of the candidate squares , we obtain a ptas for the maximum area lower - left anchored square packing problem .",
    "similarly , we obtain a qptas for the maximum area lower - left anchored rectangle problem .",
    "consequently , for @xmath6 anchors , an @xmath57-approximation for the lower - left anchored square packing can be computed in time @xmath16 ; and for the lower - left anchored rectangle packing in time @xmath466 .",
    "we conclude with a few open problems :    1 .",
    "is the problem of computing the maximum - area anchored rectangle ( respectively , square ) packing np - hard ? 2 .",
    "is there a polynomial - time approximation scheme for the problem of computing an anchored rectangle packing of maximum area ? 3 .",
    "what lower bound on @xmath525 can be obtained by extending lemma  [ lem : rectangle ] concerning rectangles from @xmath121 to @xmath189 points ?",
    "is there a short proof of lemma  [ lem : rectangle ] ? 4 .",
    "does algorithm  [ alg : sq ] for computing an anchored square packing of maximum area achieve a ratio of @xmath526 ? by theorem  [ thm:9/47 ] and the construction in fig .",
    "[ fig : alg - sq ] , the approximation ratio is between @xmath55 and @xmath526 .",
    "improvements beyond the @xmath335 ratio are particularly exciting .",
    "5 .   is the reach of anchored squares always at least @xmath59 ? ( does @xmath527 hold for every nonempty set  @xmath20 ? ) 6 .",
    "is @xmath528 ?",
    "is @xmath529 ?",
    "what upper and lower bounds on @xmath525 and @xmath530 can be established in higher dimensions",
    "a natural variant of anchored squares is one where the anchors must be the centers of the squares .",
    "what approximation can be obtained in this case ?    [ [ acknowledgment . ] ] acknowledgment . + + + + + + + + + + + + + + +    the authors are thankful to ren sitters for constructive feedback on the problems discussed in this paper .",
    "in particular , the preliminary approximation ratio @xmath253 in theorem  [ thm:1/6 ] incorporates one of his ideas .",
    "99 a. k.  abu - affash , p.  carmi , m.  j. katz , and g.  morgenstern , multi cover of a polygon minimizing the sum of areas , _ int . j. comput . geometry & appl . _ * 21(6 ) * ( 2011 ) , 685698 .    a.  adamaszek and a.  wiese , approximation schemes for maximum weight independent set of rectangles , in _ proc .",
    "54th sympos . on found . of comp .",
    "_ , ieee , 2013 .",
    "a.  adamaszek and a.  wiese , a quasi - ptas for the two - dimensional geometric knapsack problem , in _ proc .",
    "26th acm - siam sympos",
    ". discrete algor .",
    "_ , siam , 2015 .",
    "k.  agarwal and n.  h.  mustafa , independent set of intersection graphs of convex objects in 2d , _ comput .",
    "_ * 34(2 ) * ( 2006 ) , 8395 .",
    "a. aggarwal and s. suri , fast algorithms for computing the largest empty rectangle , in : _ proc .",
    "comput . geometry _ ,",
    "acm , 1987 , pp .",
    "278290 .",
    "m.  ajtai , the solution of a problem of t. rado , _ bulletin de lacadmie polonaise des sciences , srie des sciences mathmatiques , astronomiques et physiques _ * 21 * ( 1973 ) , 6163 .",
    "s. aluru , quadtrees and octrees , ch .  19 in _ handbook of data structures and applications ( d. p. mehta and s. sahni , editors ) _ , chapman & hall / crc , 2005 .",
    "k.  balas and cs .",
    "d. tth , on the number of anchored rectangle packings for a planar point set , in _ proc .",
    "_ , springer , 2015 , pp .  377389 .",
    "n. bansal and a. khan , improved approximation algorithm for two - dimensional bin packing , in _ proc .",
    "25th acm - siam sympos .",
    "discrete algor .",
    "_ , siam , 2014 , pp .  1325 .",
    "s.  bereg , a.  dumitrescu , and m.  jiang , maximum area independent set in disk intersection graphs , _ internat .",
    "j. comput .",
    "* 20 * ( 2010 ) , 105118 .",
    "s. bereg , a. dumitrescu and m. jiang , on covering problems of rado , _ algorithmica _ * 57 * ( 2010 ) , 538561 .    s. bhowmick , k. varadarajan , and s .- k .",
    "xue , a constant - factor approximation for multi - covering with disks , in _ proc .",
    "29th acm sympos . on comput .",
    "_ , acm , 2013 , pp .  243248 .",
    "s. bhowmick , k. varadarajan , and s .- k .",
    "xue , addendum to `` a constant - factor approximation for multi - covering with disks '' , manuscript , 2014 , available at  http://homepage.cs.uiowa.edu/~kvaradar/papers.html .",
    "v. blo , i. caragiannis , c. kaklamanis , and p. kanellopoulos , geometric clustering to minimize the sum of cluster sizes , in _ proc .",
    "european sympos .",
    "_ , lncs  3669 , 2005 , pp .  460471 .",
    "p. chalermsook and j. chuzhoy , maximum independent set of rectangles , in _ proc .",
    "20th acm - siam sympos",
    ". discrete algor .",
    "_ , siam , 2009 , pp .",
    ". t.  m. chan , polynomial - time approximation schemes for packing and piercing fat objects , _",
    "j. algorithms _ * 46 * ( 2003 ) , 178189 .",
    "t. m. chan and s. har - peled , approximation algorithms for maximum independent set of pseudodisks , _ discrete comput .",
    "geom . _ * 48(2 ) * ( 2012 ) , 373392 .",
    "k. l. clarkson , fast algorithms for the all nearest neighbors problem , in _ proc .",
    "24th annu .",
    "ieee sympos . found .",
    "_ , ieee , 1983 , pp .",
    "226232    b. chazelle , r.l .",
    "drysdale , and d.t .",
    "lee , computing the largest empty rectangle , _ siam j. comput .",
    "* 15(1 ) * ( 1986 ) , 300315 .",
    "a.  dumitrescu and m.  jiang , on the largest empty axis - parallel box amidst @xmath6 points , _ algorithmica _ * 66(2 ) * ( 2013 ) , 225248 .",
    "a.  dumitrescu and m.  jiang , computational geometry column 56 , _ sigact news bulletin _ * 44(2 ) * ( 2013 ) , 8087 .",
    "a.  dumitrescu and cs .",
    "d. tth , packing anchored rectangles , _ combinatorica _ * 35(1 ) * ( 2015 ) , 3961 .",
    "t.  erlebach , k.  jansen , and e.  seidel , polynomial - time approximation schemes for geometric intersection graphs , _",
    "siam j. comput .",
    "_ * 34(6 ) * ( 2006 ) , 13021323 .",
    "m.  formann and f. wagner , a packing problem with applications to lettering of maps , in _ proc .",
    "7th sympos .",
    "comput . geometry _ , 1991 , acm press , pp .",
    "281288 .",
    "m.  hanan , on steiner s problem with rectilinear distance , _ siam j. appl . math .",
    "_ * 14 * ( 1966 ) , 255265 . c.  iturriaga and a.  lubiw , elastic labels around the perimeter of a map , _ j. algorithms _ * 47(1 ) * ( 2003 ) , 1439 .",
    "jung and k .- y .",
    "chwa , labeling points with given rectangles , _ inf . process .",
    "lett . _ * 89(3 ) * ( 2004 ) , 115121 .    k.  g.  kakoulis and i.  g.  tollis , labeling algorithms , ch .  28 in _ handbook of graph drawing and visualization ( r.  tamassia , ed . ) _ , crc press , 2013 .",
    "d. knuth and a. raghunathan , the problem of compatible representatives , _",
    "siam j. disc .",
    "_ * 5 * ( 1992 ) , 3647 .",
    "a.  koike , s .-",
    "nakano , t.  nishizeki , t.  tokuyama , and s.  watanabe , labeling points with rectangles of various shapes , _ int .",
    "j. comput .",
    "geometry appl . _ * 12(6 ) * ( 2002 ) , 511528 .",
    "m. van kreveld , t. strijk , and a. wolff , point labeling with sliding labels , _ comput .",
    "* 13 * ( 1999 ) , 2147 .",
    "r.  rado , some covering theorems ( i ) , _ proc .",
    "soc . _ * 51 * ( 1949 ) , 232264 .",
    "r.  rado , some covering theorems ( ii ) , _ proc .",
    "* 53 * ( 1951 ) , 243267 .",
    "r.  rado , some covering theorems ( iii ) , _ proc .",
    "* 42 * ( 1968 ) , 127130 .",
    "t.  rado , sur un problme relatif  un thorme de vitali , _ fund .",
    "_ , * 11 * ( 1928 ) , 228229 .",
    "w.  tutte , _ recent progress in combinatorics : proc .",
    "3rd waterloo conf .",
    "_ , may 1968 , academic press , new york , 1969 .",
    "p.  winkler , packing rectangles , in _ mathematical mind - benders _",
    "peters ltd . , wellesley , ma , 2007 , pp .",
    "133134 .",
    "b. zhu and m. jiang , a combinatorial theorem on labeling squares with points and its application , _ j. comb .",
    "_ * 11(4 ) * ( 2006 ) , 411420 .",
    "we have @xmath122 with @xmath531 for @xmath532 , and @xmath533 .",
    "we can assume that @xmath534 by applying a reflection with respect to a vertical line if necessary .",
    "consider the grid induced by the two points in @xmath1 ^ 2 $ ] , consisting of six rectangles @xmath4 , @xmath535 , as shown in fig .",
    "[ fig:8packings ] . put @xmath536 , @xmath535 . as a shorthand notation , a union of rectangles , @xmath537 is denoted @xmath538 , and @xmath539 denotes its area .",
    "it is not difficult to show that every maximal rectangle packing for @xmath122 is one of the eight packings in fig .",
    "[ fig:8packings ] ( although , we do not use this fact in the remainder of the proof ) . specifically , @xmath82 is a lower - left or lower - right corner of a rectangle . if @xmath82 is the lower - right corner of a rectangle of height 1 , then @xmath101 can be the anchor of any of @xmath540 , @xmath540 , @xmath541 , and @xmath542 , producing the packings @xmath543 , @xmath544 , @xmath545 , and @xmath546 .",
    "if @xmath82 is the lower - left corner of a rectangle of height 1 , then @xmath101 can be the anchor of @xmath547 or @xmath542 , producing @xmath548 and @xmath549 .",
    "if @xmath82 is the lower - left corner of a rectangle of height @xmath550 , then @xmath101 can be the anchor of @xmath551 or @xmath547 , which yields the packings @xmath552 and @xmath553 .",
    "if @xmath82 is the lower - right corner of a rectangle of height @xmath550 , then @xmath101 must be the anchor of @xmath554 , and we obtain @xmath543 again .",
    "= 0.7    the area of each of the eight packing in fig .",
    "[ fig:8packings ] is a quadratic function in the variables @xmath555 over the domain @xmath556 we wish to find the minimum @xmath557 of the upper envelope of these eight 3-variate functions over the domain @xmath558 .",
    "observe that @xmath559 in particular , if @xmath560 holds , the desired lower bound , @xmath115 , follows .",
    "for the case analysis below , we also use the following fact .",
    "consider the quadratic equation @xmath561 . since",
    "its roots are @xmath562 and @xmath563 , we have @xmath564 for @xmath565 $ ] . _    [ [ case - analysis . ] ] case analysis .",
    "+ + + + + + + + + + + + + +    we distinguish six cases covering the range of @xmath566 : @xmath567 .",
    "_ case 1 : _ @xmath568 .",
    "if @xmath569 then @xmath570 as required . if @xmath571 , we distinguish two subcases :    if @xmath572 , then select rectangle @xmath547 anchored at @xmath101 , and one of @xmath573 and @xmath574 anchored at @xmath82 . if follows that @xmath575 as required .    if @xmath576 , then @xmath577 as required .",
    "_ case 2 : _ @xmath578 .",
    "if @xmath579 , we have @xmath580 as required .",
    "if @xmath571 , we have @xmath581 and the lower bound follows from  .    if @xmath582 , we distinguish two subcases :    _ case 2.1 : _ @xmath572 .    if @xmath583 , then @xmath584 and the lower bound follows from   ( due to fact 1 ) .    if @xmath585 , then @xmath586 as required .",
    "the last inequality above is equivalent to @xmath587 which holds for @xmath588 .    _ case 2.2 : _ @xmath576 .    if @xmath589 , then @xmath590 and the lower bound follows from  .",
    "if @xmath591 , then @xmath592 as required .",
    "indeed , the last inequality above is equivalent to @xmath593 , which holds since @xmath594 $ ] and according to fact 1 .",
    "_ case 3 : _ @xmath595 .",
    "if @xmath596 , then @xmath597 and the lower bound follows from  . if @xmath579 , we distinguish two subcases :    _ case 3.1 : _",
    "@xmath598 . then @xmath599 as required .",
    "_ case 3.2 : _ @xmath600 .",
    "then @xmath601 as required .",
    "_ case 4 : _ @xmath602 .",
    "observe that @xmath603 , and consequently , @xmath604 , as used below in case 2.4.2 .",
    "if @xmath605 , then @xmath606 and the lower bound follows from  . if @xmath607 , we distinguish two subcases :    _ case 4.1 : _",
    "@xmath608 . then @xmath609 as required .    _",
    "case 4.2 : _ @xmath610 .",
    "then @xmath611 as required .",
    "_ case 5 : _ @xmath612 . if @xmath613 , then @xmath614 and the lower bound follows from  . if @xmath615 , we distinguish two subcases :    if @xmath616 , then @xmath617 as required .    if @xmath618 and @xmath619 , then @xmath620 as required .",
    "if @xmath618 and @xmath621 , then select @xmath622 anchored at @xmath101 and a zero - area rectangle anchored at @xmath82 : @xmath623 as required .",
    "_ case 6 : _",
    "@xmath624 . select @xmath573 and the largest of the @xmath199 empty rectangles anchored at @xmath101 ; the total area is @xmath625 as required .",
    "this completes the case analysis and thereby the proof of the lower bound . to see that this lower bound is the best possible , put @xmath626 and @xmath627 and verify that no system of anchored rectangles covers an area larger than @xmath115 .",
    "the same general idea applies to all cases ( as well as the notation in the figures ) : two adjacent axis - aligned rectangles are specified , one empty of points and the other containing points , that allows the selection of an empty square of a suitable size anchored at an extreme point of the nonemepty rectangle .",
    "the relevant subcases are illustrated in the figures ( nonempty squares or subsquares are shaded ) and the compact arguments are summarized in the tables . any missing case is either similar or obtained by reflection of a present case with respect to a line . in each case :    * we consider a quadtree subdivision up to a certain level ; * in nonempty squares in the subdivision ( shaded in the figures ) , some anchored square packing covers @xmath628 times the area of corresponding squares by induction ; * we find new anchored squares of area @xmath526 , @xmath629 , @xmath630 , or other , ( in bold lines ) , which partially cover some empty and nonempty squares of the subdivision ; * the new anchored squares supersede the previous packing ( , obtained by induction ) in the nonempty squares of the subdivision that they intersect .",
    "[ obs : adjacent2 ] let @xmath631 be two axis - aligned interior - disjoint rectangles of sizes @xmath632 and @xmath633 , respectively , where @xmath634 , sharing a common edge of length @xmath635 .",
    "if @xmath636 and @xmath637 , then @xmath638 contains an anchored empty square whose area is at least @xmath639 .",
    "assume that @xmath640 lies left of @xmath641 and let @xmath642 be the rightmost point in @xmath640 . if @xmath172 lies in the lower half - rectangle of @xmath169 then the square of side @xmath643 whose lower - left anchor is @xmath172 is empty and has area @xmath639 .",
    "similarly , if @xmath172 lies in the higher half - rectangle of @xmath640 then the square of side @xmath643 whose upper - left anchor is @xmath172 is empty and has area @xmath639 .",
    "to specify anchor points , we use the following notation .",
    "let @xmath644 .",
    "let @xmath645 and @xmath646 denote the leftmost and rightmost points of @xmath647 , respectively ( these points coincide if @xmath648 ) .",
    "let @xmath649 and @xmath650 denote the lowest and highest points of @xmath647 , respectively ( these points coincide if @xmath648 ) .",
    "we next proceed with the details . in cases 1 and 2 ,",
    "subdivide @xmath226 , @xmath197 ( in case 1 , @xmath651 , only ) into four congruent squares @xmath652 , @xmath653 , labeled counterclockwise around the center of @xmath226 according to the subquadrant containing the square .",
    "then partition @xmath200 , @xmath197 into four subsets @xmath654 , @xmath655 , @xmath656 ( ties are broken as specified earlier ) .",
    "we distinguish several subcases depending on the number of empty sets @xmath654 , @xmath657 , @xmath658 , in the second level of the quadtree subdivision .",
    "let @xmath660 denote the number of empty @xmath661 .",
    "the relevant subcases are illustrated in fig .",
    "[ f10 ] and summarized in table  [ tab : case1 ] .",
    "for example , in the first two rows in the table there are two inductive instances of area @xmath526 and two inductive instances of area @xmath629 , contributing @xmath662 and @xmath663 , respectively , toward the total covered area ."
  ],
  "abstract_text": [
    "<S> for points @xmath0 in the unit square @xmath1 ^ 2 $ ] , an _ anchored rectangle packing _ consists of interior - disjoint axis - aligned empty rectangles @xmath2 ^ 2 $ ] such that point @xmath3 is a corner of the rectangle @xmath4 ( that is , @xmath4 is _ anchored _ at @xmath3 ) for @xmath5 . we show that for every set of @xmath6 points in @xmath1 ^ 2 $ ] , there is an anchored rectangle packing of area at least @xmath7 , and for every @xmath8 , there are point sets for which the area of every anchored rectangle packing is at most @xmath9 . </S>",
    "<S> the maximum area of an anchored _ square _ packing is always at least @xmath10 and sometimes at most @xmath11 .    </S>",
    "<S> the above constructive lower bounds immediately yield constant - factor approximations , of @xmath12 for rectangles and @xmath10 for squares , for computing anchored packings of maximum area in @xmath13 time . </S>",
    "<S> we prove that a simple greedy strategy achieves a @xmath14-approximation for anchored square packings , and @xmath15 for lower - left anchored square packings . </S>",
    "<S> reductions to maximum weight independent set ( mwis ) yield a qptas and a ptas for anchored rectangle and square packings in @xmath16 and @xmath17 time , respectively .    </S>",
    "<S> * keywords * : rectangle packing , anchored rectangle , greedy algorithm , charging scheme , approximation algorithm . </S>"
  ]
}
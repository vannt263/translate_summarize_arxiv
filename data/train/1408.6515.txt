{
  "article_text": [
    "tmall is a chinese - language website for business - to - consumer ( b2c ) online retail , spun off from taobao and operated in china by alibaba group . for b2c platform like tmall ,",
    "both sellers and buyers play the role of its customers , which should be well served at the same time .",
    "in other words , b2c platform should help sellers ( brands ) to precisely target potential buyers , and meanwhile help buyers ( users ) to easily find what they like to buy . in that sense ,",
    "purchase prediction or brand recommendation is crucially important for b2c online retail platforms . on popular b2c platforms , e.g. amazon or tmall",
    ", the amount of active brands and users is huge . for these b2c platforms",
    ", it is challenging to build large scale recommender system .",
    "so here comes tmall recommendation prize 2014 , a large scale competition ( over 7,000 teams participated ) for large scale recommender system .",
    "tmall provides real - world business data containing more than half billion action records from over ten million distinct users . to our best knowledge ,",
    "this data set is the biggest ever among all the public competitions on recommender system .",
    "such big data poses a big challenge .",
    "luckily , a shared powerful cluster and corresponding development environment is provided for free during the competition .",
    "competitors are required to implement their ideas , even the simplest ones , in mapreduce fashion and ensure programs can correctly run on distributed cluster . due to the length limitation , details of distributed implementation will be omitted in this paper .",
    "the competition task is clear and simple : recommend a set of brands to a set of users .",
    "the provided data set consists of a number of user action records , following the schema as ( user i d , brand i d , action type , date ) .",
    "all the ids of users and brands are hash - mapped and encrypted .",
    "there are altogether 4 different types of user action : `` click '' , `` buy '' , `` collect '' , and `` cart '' .",
    "no explicit training and testing set provided .",
    "the competition requires to predict what will those users buy in the next month . to be more specific",
    ", it requires to predict a set of ( user i d , brand i d ) pairs which may have `` buy '' records ( no matter how many times ) during the next month .",
    "since there is no explicit testing set , predictions are judged on @xmath0 for fair evaluation , which is defined based on @xmath1 and @xmath2 :    @xmath3    @xmath4    @xmath5    where @xmath6 stands for the number of users in prediction , @xmath7 stands for the actual number of buyers in answer , @xmath8 is the number of correctly predicted brands for user @xmath9 , @xmath10 is the number of predicted brands for user @xmath9 , and @xmath11 is the actual number of brands purchased by user @xmath9 in answer .",
    "to discourage overfitting , a whole new data set ( drawn from the same distribution ) is scheduled to be released at the last week of competition .",
    "the original data set will be replaced at that time .",
    "since the paper deadline is earlier than the end of this competition , this solution paper is all based on the original data set .",
    "the remainder parts of this paper are organized as follows .",
    "section  [ sec : data ] presents our basic data analysis and preprocessing approach . in section  [ sec : modeling ] , we introduce our modeling on the purchase prediction task .",
    "section  [ sec : feature ] describes our feature design .",
    "blending and ensemble algorithms are presented in section  [ sec : blending ] . at last",
    ", we conclude the paper in section  [ sec : conclusion ] .",
    "in this section , we firstly conduct basic data analysis , and accordingly introduce data splitting for offline validation , as well as data cleansing .",
    "in the data set , record date ranges from april to july ( from 04 - 15 to 08 - 15 , year unknown ) . for convenience",
    ", we have a month name convention for the 4-month long data , as shown in table  [ table : date ] .",
    ".month name convention .",
    "[ cols=\"^,^,^\",options=\"header \" , ]      based on previous data analysis , we split the data set for local validation .",
    "figure  [ fig : data_split ] illustrates the details . for online setting , provided data",
    "set locates in the first 4 months , and the august data is an invisible answer set used for evaluating predictions . as for local data splitting , we use records in the first three months ( april , may , and june ) as the local data , and use records in july as the local answer set , which is invisible and used for evaluating local predictions .",
    "data cleansing is necessary since we have observed some users have millions of clicks but no purchases .",
    "a possible explanation is that these users may be crawlers , which automatically access to target website many times every day .",
    "obviously , such `` user '' should not be considered in model .",
    "we use a simple filtration rule to clean such noise in data : if a user have more than 500 clicks but 0 buys , then all the action records of this user are removed . according to our statistics ,",
    "about 22 million action records are filtered out , which account for 4% of the data set .",
    "in this section , we introduce the modeling of purchase prediction problem , including how to build instance and how to design time spans of feature and target .",
    "we model the purchase prediction task as standard machine learning problem .",
    "we take ( user i d , brand i d ) pair as the instance .",
    "user actions are obviously non - i.i.d . and highly dependent on historical actions .",
    "for example , user is much more likely to purchase a certain brand if she has clicked and added it to shopping cart before .",
    "therefore , we choose to build instance in a time - dependent fashion : the target of instance is decided by future actions .",
    "here target stands for the ground truth of instance .",
    "if the task is modeled as a classification problem , the target is a binary label of purchase or not in the future . while if modeled as regression problem , the target can be either a binary label or the purchase times in the future .",
    "take classification modeling as an example , for each ( user i d , brand i d ) pair , what we need to predict is a conditional probability : @xmath12 where @xmath13 are the action records in previous months , including the actions of other users and brands .",
    "we use the given historical actions to build features of each instance , and set the corresponding target by checking whether or not the instance has any purchase action in next month .",
    "so that for each instance ( user i d , brand i d ) , the records in action sequence are then divided into two parts by date : feature span and target span , as illustrated in figure  [ fig : instance ] . in this figure ,",
    "digit 0 - 3 stands for click , buy , collect and cart action respectively .",
    "we build features within a set of date buckets , e.g. \\{latest @xmath14 days , latest @xmath15 days , ... , latest @xmath16 days}. details of feature design will be discussed in section  [ sec : feature ] .",
    "as discussed above , the time spans of feature and target are separated .",
    "we have two different ways to construct time spans :    * fixed time spans . in training",
    ", we use the last month as the target span and previous months as the feature span . in predicting",
    ", we use all available months as the feature span .",
    "figure  [ fig : fixed_span ] illustrates the details of fixed time spans in both local and online settings .",
    "* sliding time spans . in training , the feature span becomes extendable , and the target span follows the sliding end of the feature span .",
    "the length of target span is still fixed as one month . in predicting",
    ", it keeps the same as fixed time spans .",
    "figure  [ fig : sliding_span ] illustrates the details of sliding time spans in both local and online settings .",
    "in this section , we introduce our design of features .",
    "basically , for an instance ( user i d , brand i d ) pair , we build its features in three parts : pair features , user features , and brand features . for each part",
    ", we design 5 groups of features : counting features , ratio features , flag features , and global features .",
    "we will list each feature which parts it is applied to in detailed feature list as follows .",
    "we use several types of counting features as the basic statistics on various granularities , which are listed below .",
    "* action count , including the count of each action type and the sum of all action types .",
    "this counting feature is applied to pair , user and brand .",
    "* action day count , including the day count of each action type .",
    "this is an aggregation of the action count on the day level .",
    "this counting feature is applied to pair , user and brand .",
    "* valid click count , which only counts the number of clicks later than the last purchase .",
    "this counting feature is only applied to pair . *",
    "distinct action user or brand count , which counts the number of distinct users or brands in each action type .",
    "this counting feature is applied to brand and user . *",
    "first - time action user or brand count , which counts the number of initial action of user or brand .",
    "this counting feature is applied to brand and user .",
    "ratio features are generated by division between counting features .",
    "we mainly build two types of ratio features",
    ".    * conversion ratio , which divides purchased related count ( buy count , buy day count ) by the total action count .",
    "conversion ratio reflects the likelihood of purchase after click .",
    "this ratio feature is applied to pair , user and brand .",
    "* counting ratio , which divides click or buy count by another type of click or buy count . counting ratio is between counting features of the same action type .",
    "for example , click count / click day , buy count / distinct buy user , etc .",
    "this ratio feature is applied to user and brand .",
    "* cross ratio , which is built between pair and user counting features .",
    "for example , user click count / pair click count .",
    "cross ratio shows the user s preference on specific brand in pair .",
    "rules might be straightforward but very useful as additional predictions , which can be merged into model predictions .",
    "for example , a simple rule can be just predicting pairs with more than 10 clicks .",
    "however , our offline experiments show that it does nt work if directly add rule predictions on model output .",
    "therefore , we transfer effective rules to binary flags and elegantly incorporate flag features in learning model , which works better than directly adding rule predictions .",
    "our flag features include :    * whether or not this pair or user or brand has a certain type of action before .",
    "this flag feature is applied to pair , user and brand . * whether or not this pair or user has consecutive purchases in adjacent two months .",
    "this flag feature is applied to pair , user and brand .",
    "counting , ratio , and flag features are all built based on date buckets , i.e. each feature has a copy in each date bucket and the feature value is determined by the range of date bucket .",
    "we also build global features , which are not dependent on date buckets and computed on the whole feature span .",
    "global features have more information than date bucket dependent features .",
    "they are more robust and can describe instance more precisely .",
    "we mainly use the following global feature :    * first and last active day , which is the distance between the first or last active day and the end of the feature span .",
    "this global feature is applied to pair and user . * last purchase day , which is the distance between the last purchase day and the end of the feature span .",
    "this global feature is applied to pair and user .",
    "* length of active span , which is the number of days between first and last active day .",
    "this global feature is applied to pair , user and brand .",
    "* percentage of frequent users , where frequent means that a user has purchased the same brand more than once .",
    "this global feature is only applied to brand .",
    "in this section , we first simply introduce our individual models , and then blending and ensemble approach for aggregating those models .",
    "we mainly use three types of individual model : regression , classification , and global scoring . for regression , we use gradient boosting regression tree ( gbrt ) as a single model . for classification ,",
    "we use logistic regression ( lr ) and random forest ( rf ) as individual models .",
    "fixed time span is applied to all these three models , and sliding time span is applied to gbrt and rf .",
    "the organizers of this competition provide distributed implementation of these classical learning models . for global scoring ,",
    "we use a time decay function to directly score each instance : @xmath17 where @xmath6 is the total number of the instance actions , @xmath18 is the number of action types , @xmath19 is the weight of action type @xmath20 , @xmath21 is an indicator showing whether the action is of type @xmath20 , and @xmath22 is the day index of the @xmath23th action . here",
    "@xmath24 is a time decay factor .      with the individual models , we use a two - stage approach for model blending and ensemble .",
    "we firstly use individual models to predict the training set , and apply logistic regression ( lr ) to blend those models group by group .",
    "then , to avoid overfitting , we just use a simple linear ensemble to the blended models , and get our final prediction model .",
    "the overall framework is shown in figure  [ fig : framework ] .",
    "we make some post analysis of our prediction result on local answer set to check the model performance in detail .",
    "we pick up all the hits in local prediction , and draw the day distribution of them , as is shown in figure  [ fig : dist ] .",
    "this analysis shows that our model are good at predicting user purchases in the first 3 days .",
    "it is clear to see that the predicting difficulty significantly increases after the first 3 days .",
    "this is understandable since useful information becomes weaker but noise becomes stronger in farther future .",
    "in this paper , we present our solution to tmall recommendation prize 2014 .",
    "we construct instance for training and predicting in a time - dependent way , and model the purchase prediction task as a standard machine learning problem .",
    "two ways of time span construction are designed for generating feature and target of instance .",
    "we mainly use three types of individual model : regression , classification , and global scoring .",
    "we use a two - stage approach for model blending and ensemble , which effectively improve the prediction accuracy ."
  ],
  "abstract_text": [
    "<S> this paper describes the solution of _ bazinga _ team for tmall recommendation prize 2014 . with real - world user action data provided by tmall , one of the largest b2c online retail platforms in china </S>",
    "<S> , this competition requires to predict future user purchases on tmall website . </S>",
    "<S> predictions are judged on @xmath0 , which considers both precision and recall for fair evaluation . </S>",
    "<S> the data set provided by tmall contains more than half billion action records from over ten million distinct users . </S>",
    "<S> such massive data volume poses a big challenge , and drives competitors to write every single program in mapreduce fashion and run it on distributed cluster . </S>",
    "<S> we model the purchase prediction problem as standard machine learning problem , and mainly employ regression and classification methods as single models . </S>",
    "<S> individual models are then aggregated in a two - stage approach , using linear regression for blending , and finally a linear ensemble of blended models . </S>",
    "<S> the competition is approaching the end but still in running during writing this paper . in the end , </S>",
    "<S> our team achieves @xmath0 0.0611 and ranks 7th ( out of 7,276 teams in total ) .    </S>",
    "<S> = 10000 = 10000 </S>"
  ]
}
{
  "article_text": [
    "linear logic  @xcite has been very influential in computer science , especially because it provides a tool to explicitly control the use of resources by limiting the use of the _ structural rules _ of weakening and contraction .",
    "erasure ( weakening ) and duplication ( contraction ) are restricted to formulas marked with an _ exponential _ modality , and can only interact with non - linear proofs marked with a _ bang _ modality .",
    "intuitionistic and classical logic can thus be encoded by a fragment containing such modalities as , for example , the multiplicative exponential linear logic ( mell ) .",
    "mell proofs can be represented by sequent trees , but mell proof - nets  @xcite provide a better geometrical representation of proofs , eliminating irrelevant syntactical details .",
    "they have been used extensively to develop different encodings of intuitionistic logic / lambda - calculus , giving rise to the geometry of interaction  @xcite .",
    "normalisation of proofs ( _ i.e. _  _ cut elimination _ ) in mell proof - nets is performed in particular by _ exponential _ and _ commutative _ rules .",
    "non - linear proofs are distinguished by surrounding _",
    "boxes _ ; the exponential rules handle all the possible operations on them : erasure , duplication and linear replacement , corresponding respectively to a cut elimination step involving a box and either a _ weakening _ , a _ contraction _ or a _",
    "dereliction_. the commutative rule instead _ composes _ non - linear resources .    different cut elimination systems  @xcite , defined as _ explicit substitution _ ( es ) calculi ,",
    "were explained in terms of , or were inspired from , the fine notion of reduction of mell proof - nets .",
    "they all use the idea that the content of a substitution / cut is a non - linear resource , _",
    "i.e. _  a box that can be composed with another one by means of some commutative rules .",
    "they also share common operational semantics defined in terms of a _ propagation system _ in which a substitution traverses a term until the variables are reached .    *",
    "the structural @xmath0-calculus*. a graphical representation for @xmath0-terms , @xmath4s , has been recently proposed  @xcite .",
    "it denies boxes by representing them with additional edges called _ jumps _ , and does not need any commutative reduction rule to compose non - linear proofs . this paper studies the term formalism , called @xmath1-calculus , resulting from reading back @xmath4s ( and their correspondent reductions ) by means of their sequentialisation theorem  @xcite . the deep connection between @xmath4s and danos and regnier s pure ( _ untyped _ ) proof - nets  @xcite has been already studied in  @xcite .    beyond this graphical and logical interpretation ,",
    "the peculiarity of @xmath1-calculus is that it uses two features which were never combined before : _ action at a distance _ and _",
    "multiplicities_.    _ action at a distance _ means that rewriting rules are specified by means of some constructors which are arbitrarily far away from each other .",
    "this approach could be understood as inconvenient but this is only apparent because rewriting rules can be locally implemented by means of @xmath4s .",
    "the distance rules of @xmath1 do not propagate substitutions through the term except for the linear ones which are evaluated exactly as meta - level substitutions , regardless the distance between the involved constructors ( variable and jump ) .",
    "_ multiplicities _ are intended to count the number of occurrences of a given variable affected by a jump , _",
    "i.e. _  the rewriting rule to be applied for reducing a term of the form @xmath5 $ ] depends on @xmath6 , the number of free occurrences of the variable @xmath7 in the term @xmath8 .",
    "indeed , we distinguish three cases , @xmath9 , @xmath10 and @xmath11 , which correspond , respectively , to weakening - box , dereliction - box and contraction - box cut - elimination rules in proof nets .",
    "it is because of the weakening and contraction rules that we call our language the _ structural _ @xmath0-calculus .    *",
    "content of the paper*. we start by showing that @xmath1 admits a simple and elegant theory _",
    "i.e. _   it enjoys confluence , full composition ( fc ) , and preservation of @xmath2-strong normalisation ( psn ) .",
    "the proof of psn is particularly concise because of the distance approach .",
    "the main result of the paper is that the theory of @xmath1 admits a modular extension with respect to propagations of jumps : an equational theory is added on top of @xmath1 and the obtained extension is shown to preserve all the good properties we mentioned before .",
    "actually , we focus on psn , since fc and confluence for the extended @xmath1-calculus result as straightforward .    in the literature",
    "there is a huge number of calculi with expicit substitutions , @xmath12 constructs or environments , most of them use some rule to specify commutation ( also called propagation or permutation ) . in order to encompass these formalisms",
    "we do not approach propagations as _ rewriting rules _ , but as equations ( which can be used from left to right or vice - versa ) defining an _ equivalence relation _ on terms .",
    "this is only possible because propagations are not needed in @xmath1 to compute normal forms , a fact which is a by - product of the _ distance _ notion .",
    "moreover , any particular orientation of the equations ( from left to right _ or _ from right to left ) results in a terminating rewriting relation , which implies that the system containing _ any _ orientation of the equations still enjoys psn .",
    "equations are introduced in two steps .",
    "we first consider commutations between independent jumps and between jumps and abstractions or left sides of applications .",
    "this equivalence , written @xmath13 , turns out to be a strong bisimulation , _",
    "i.e. _  a reduction relation which is length preserving ; thus psn for the reduction system @xmath1 modulo @xmath13  noted @xmath14  immediately follows .",
    "we also show that @xmath13 can be seen as a projection of regnier s @xmath15-equivalence  @xcite on a syntax with jumps .",
    "actually , @xmath13 can be understood as the quotient induced by the translation  @xcite of @xmath1-terms to pure proof - nets , which is why it is so well - behaved , and why we call it the _ graphical equivalence_.    the second step is to extend @xmath13 with general commutations between jumps and right sides of applications and contents of jumps .",
    "the resulting _ substitution equivalence @xmath16 _ does not only subsume _ composition _ of jumps , but also _ decomposition_. the equations of @xmath16 correspond exactly to the commutative box - box case of proof - nets , but they are here considered as an _ equivalence _  which is a novelty  and not as a rewriting rule .",
    "the reduction relation of @xmath17 is a rich rewriting system with subtle behaviour , particularly because @xmath16 affects reduction lengths , and thus is not a strong bisimulation .",
    "nonetheless , we show that @xmath17 enjoys psn .",
    "this result is non - trivial , and constitutes the main contribution of the paper .",
    "the technique used to obtain psn for @xmath17 consists in    1 .",
    "projecting @xmath17 reductions into a calculus that we call @xmath18 , 2 .",
    "proving psn for @xmath18 , 3 .   infering psn for @xmath17 from ( 1 ) and ( 2 ) .",
    "actually , @xmath18 can be understood as a _ memory _ calculus specified by means of _ void _ jumps  _ i.e. _  jumps @xmath5 $ ] where @xmath19  which generalises klop s @xmath20-calculus  @xcite . despite the fact that it appears only as a technical tool we claim that it is a calculus interesting on its own and",
    "can be used for proving termination results beyond those of this paper .",
    "the last part of the paper presents some interesting consequences of our main result concerning different variations on @xmath17 .    * road map*.    1",
    ".   section  [ sec : general - notion ] recalls some general notions about abstract rewriting . 2 .",
    "section  [ s : structural - lj ] presents the @xmath1-calculus and shows that it enjoys basic properties such as full composition , simulation of one - step @xmath2-reduction , and confluence .",
    "3 .   section  [ s : lj - psn ] studies preservation of @xmath2-strong normalisation ( psn ) .",
    "the psn property is proved using a modular technique developed in  @xcite , which results in a very short formal argument in our case .",
    "section  [ s : eq - th ] first considers @xmath1 enriched with the equivalence @xmath13 , which is related to regnier s @xmath15-equivalence  @xcite , and then with the equivalence @xmath16 , which also contains composition of jumps .",
    "5 .   section  [ sec : psn ] is devoted to the proof of psn for @xmath1 modulo @xmath16 , which is the main contribution of the paper .",
    "section  [ s : cons ] discusses some consequences of the psn result of section  [ sec : psn ] .",
    "this paper covers some basic results in  @xcite by extending them considerably .",
    "indeed , the propagation systems considered in  @xcite are just particular cases of the general equational theory @xmath16 studied in this paper .",
    "the proof technique used here to show psn for @xmath1 modulo @xmath16 puts in evidence another calculus @xmath18 that has interest in itself .",
    "moreover , interesting consequences of the main result are included in section  [ s : cons ] .",
    "* related work*. action at a distance has already been used in  @xcite , but none of the previous approaches takes advantage of distance plus control of resources by means of multiplicities .",
    "other works use multiplicities  @xcite but not distance so that the resulting formalism contains a lot of rules , which is really less manageable .",
    "we think that our combined approach is more primitive than es , and the resulting theory is much simpler .",
    "using distance _ and _ multiplicities also provides modularity : the substitution rules become independent from the set of constructors of the calculus , and thus any change in the language does not cause any changes in the associated rewriting rules .",
    "our combined approach does not only capture the well - known notions of developments  @xcite and superdevelopments  @xcite , but also allows us to introduce xl - developments , a more powerful notion of development defined in  @xcite .    in the literature",
    "there are many calculi which dealt with permutations of constructors in intuitionistic calculi , but all use _ reduction _ rules rather than _ equations _ , which is less powerful .",
    "some that can be captured by our graphical equivalence appear in  @xcite and those captured by our substitution equivalence are  @xcite .",
    "intuitionistic calculi inspired from linear logic proof nets appear for example in  @xcite .",
    "as several reduction notions are used along the paper , we first introduce general definitions of rewriting .",
    "a * reduction system * is a pair @xmath21 consisting of a set @xmath22 and a binary relation @xmath23 on @xmath22 called a * reduction relation*. when @xmath24 we write @xmath25 and we say that @xmath26 * @xmath27-reduces * to @xmath28 . the inverse of @xmath23 is written @xmath29 , _",
    "i.e. _  @xmath30 iff @xmath25 .",
    "the reflexive and transitive ( resp .",
    "transitive ) closure of @xmath23 is written @xmath31 ( resp .",
    "@xmath32 ) . composition of relations is denoted by juxtaposition . given @xmath33 , we write @xmath34 iff @xmath26 is @xmath27-related to @xmath28 in @xmath35 steps , _",
    "@xmath36 if @xmath37 and @xmath38 if @xmath39 s.t .",
    "@xmath40 and @xmath41 .    given a * reduction system * @xmath21",
    ", we use the following reduction notions :    1 .",
    "@xmath27 is * locally confluent * if @xmath42 , _ i.e. _   if @xmath25 and @xmath43 , then @xmath44 s.t . @xmath45 and @xmath46 .",
    "@xmath27 is * confluent * if @xmath47 , _ i.e. _   if @xmath48 and @xmath49 , then @xmath44 s.t . @xmath45 and @xmath46 .",
    "@xmath50 is in * @xmath27-normal form * , written @xmath51 * @xmath27-nf * , if there is no @xmath52 such that @xmath53 .",
    "@xmath54 has an * @xmath27-normal form * iff there exists @xmath55-nf such that @xmath56 .",
    "when @xmath57 has a _ unique _",
    "@xmath27-normal form , this one is denoted by @xmath58 .",
    "@xmath54 is * @xmath27-weakly normalizing * , written @xmath59 , iff @xmath57 has an @xmath27-normal form .",
    "@xmath54 is * @xmath27-strongly normalizing * or * @xmath27-terminating * , written @xmath60 , if there is no infinite @xmath27-reduction sequence starting at @xmath57 .",
    "@xmath54 is * @xmath27-finitely branching * if the set @xmath61 is finite .",
    "if @xmath62 is @xmath27-strongly normalizing and @xmath27-finitely branching then @xmath63 denotes the * maximal length of an @xmath27-reduction sequence starting at @xmath57*. this notion is extended to lists of terms by @xmath64 . 9 .",
    "@xmath27 is * weakly normalizing * ( resp .",
    "* strongly normalizing * or * terminating * ) if every @xmath62 is .    a * strong bisimulation between * two reduction systems @xmath65 and @xmath66 is a relation @xmath67 s.t . for any pair @xmath68 :    1 .",
    "if @xmath69 then there is @xmath70 s.t . @xmath71 and @xmath72 , and conversely : 2 .",
    "if @xmath71 then there is @xmath52 s.t .",
    "@xmath73 and @xmath72 .",
    "a * strong bisimulation for @xmath65 * is a strong bisimulation between @xmath65 and itself .",
    "in particular we shall make use of the following property whose proof is straightforward :    [ l : lamj - bis - psn - dif - sys ] let @xmath74 be a strong bisimulation between two reduction systems @xmath75 and @xmath76 .    1 .",
    "the relation @xmath74 preserves reduction lengths , _",
    "i.e. _  for any @xmath68 1 .   if @xmath77 then @xmath78 s.t . @xmath79 and @xmath72 .",
    "2 .   if @xmath79 then @xmath80 s.t . @xmath77 and @xmath72 .",
    "[ l : sbisim - pres - psn]the relation @xmath74 preserves strong normalization , _",
    "i.e. _  for any @xmath81 if and only if @xmath82 .",
    "given a reduction relation @xmath83 and an equivalence relation @xmath74 both on @xmath84 , the reduction relation @xmath85 , called * reduction @xmath86 modulo @xmath74 * , is defined by @xmath87 iff @xmath88 .",
    "[ l : bisim - conf ] let @xmath74 be a strong bisimulation for @xmath75 .",
    "then ,    1 .   [ l : bisim - conf - i ] the relation @xmath74 can be postponed w.r.t @xmath83 , _",
    "i.e. _   @xmath89 .",
    "[ l : bisim - conf - ii ] if @xmath83 is confluent then @xmath85 is confluent .",
    "[ l : bisim - conf - iii ] if @xmath90 , then @xmath91 .",
    "point  [ l : bisim - conf - i ] is straightforward by induction on the length of @xmath92 using the definition of strong bisimulation .",
    "points  [ l : bisim - conf - ii ] and  [ l : bisim - conf - iii ] follow from point  [ l : bisim - conf - i ] .",
    "we conclude this section by giving an abstract theorem that we will use to prove strong normalisation for different notions of reduction modulo .",
    "[ t : equational - abstract ] let consider three reduction systems @xmath93 , @xmath94 and @xmath95 .",
    "let @xmath74 ( resp .",
    "@xmath96 ) be an equivalence on @xmath97 ( resp .",
    "@xmath98 ) . consider a relation @xmath99 .",
    "suppose that for all @xmath100    1 .",
    "@xmath101 imply @xmath102 s.t .",
    "2 .   @xmath104 imply @xmath102 s.t .",
    "3 .   @xmath106 imply @xmath102 s.t .",
    "the reduction relation @xmath108 is terminating .",
    "then , @xmath109 imply @xmath110 .",
    "suppose @xmath111 .",
    "then , there is an infinite @xmath112-reduction sequence starting at @xmath8 , and since @xmath108 is a terminating reduction relation by @xmath113 , this reduction has necessarily the form : @xmath114 and can be projected by @xmath115 , @xmath116 and @xmath117 into an infinite @xmath118 reduction sequence as follows : @xmath119    since @xmath120 , then we get a contradiction .",
    "we introduce in this section the structural @xmath1-calculus , which can simply be understood as a refinement of @xmath0-calculus .",
    "to be self - contained , we start this section by recalling the syntax and semantics of @xmath0-calculus .",
    "the set of @xmath0-terms , written @xmath121 , is generated by the following grammar : @xmath122 dynamics of @xmath0-terms is given by @xmath123-reduction ( noted @xmath124 ) which is defined as the closure by contexts of the following reduction rule : @xmath125 where the meta - operation @xmath126 on @xmath0-terms is just a particular case of the meta - operation on @xmath1-terms given below .",
    "the * structural @xmath1-calculus * is given by a set of terms and a set of reduction rules .",
    "the set of @xmath1-terms , written @xmath127 , is generated by the following grammar : @xmath128\\ ] ]    the term @xmath7 is * variable * , @xmath129 an * abstraction * , @xmath130 an * application * and @xmath5 $ ] a * substituted term*. the object @xmath131 $ ] , which is not a term , is called a * jump*. the terms @xmath132 and @xmath5 $ ] bind @xmath7 in @xmath8 ,",
    "_ i.e. _  the sets of * free / bound variables * of a term are given by the following definitions : @xmath133)}&:=&({{\\tt fv}(t)}\\setminus { \\ { x \\ } } ) \\cup{{\\tt fv}(u ) }   & { \\texttt{bv}(t[x / u])}&:= & { \\texttt{bv}(t)}\\cup { \\ { x \\}}\\cup{\\texttt{bv}(u ) } \\\\    \\end{array}\\ ] ] a jump @xmath131 $ ] in a term @xmath5 $ ] is called * void * if @xmath134 .",
    "the equivalence relation generated by the renaming of bound variables is called * @xmath135-conversion*. thus for example @xmath136 \\equiv_{\\alpha } ( \\lam y ' . x')[x'/y]$ ] . the notation @xmath137 is used for the empty sequence of terms if @xmath138 and for the sequence @xmath139 $ ] otherwise ; @xmath140 means that all the elements of the sequence belong to the set @xmath84 .",
    "if @xmath141 we use @xmath142 for the term @xmath143 if @xmath144 and @xmath145 otherwise ; similarly , @xmath146^{i}_{n}}$ ] denotes the term @xmath8 if @xmath144 and @xmath147{[{x}_i/{u}_i]^{i+1}_{n}}$ ] otherwise ; @xmath148 denotes the application @xmath149 ;    the meta - level * substitution * operation is defined by induction on terms by using the following equations on @xmath135-equivalence classes : @xmath150 { \\ { x / u   \\ } } & : = t { \\ { x / u   \\ } } [ y / v { \\ { x / u   \\ } } ] & \\mbox { if } y \\notin { { \\tt fv}(u ) }   \\\\ \\end{array}\\ ] ]    we write @xmath151 or @xmath152 when @xmath153 is a ( strict ) subterm of @xmath8 .",
    "* positions * of terms are defined as expected ( see  @xcite , p. 643",
    ", for details ) ; @xmath154 denotes the * subterm of @xmath8 at position @xmath155 * and @xmath156 denotes the * set of all the positions * @xmath155 of @xmath8 s.t . @xmath157 .",
    "we use @xmath158 to denote the size of @xmath8 .",
    "we write @xmath6 for the number of free occurrences of the variable @xmath7 in the term @xmath8 , called the * multiplicy of @xmath7 in @xmath8*. we extend this notion to sets of variables by @xmath159 .",
    "a key notion used to define the semantics of the @xmath1-calculus is that of renaming : given a term @xmath8 and a subset @xmath160 , we write @xmath161 for the term @xmath70 verifying @xmath162 if @xmath163 and @xmath164 if @xmath165 . thus for example , @xmath166 .",
    "when @xmath167 , we write @xmath168_x}$ ] for any * non - deterministic replacement * of @xmath169 occurrences of @xmath7 in @xmath8 by a _ fresh",
    "_ variable @xmath170 , _ i.e. _  @xmath168_x}$ ] denotes any term @xmath161 s.t . @xmath171 and @xmath172 .",
    "thus for example , @xmath173_x}$ ] may denote @xmath174 or @xmath175 but not @xmath176 .",
    "* contexts * are generated by the following grammar : @xmath177 \\mid c[y / v ] \\mid \\lam y. c\\ ] ] we write @xmath178 \\ ! ] } $ ] to denote the term obtained by replacing the hole @xmath179 in @xmath180 by the term @xmath8 .",
    "thus for example @xmath181 [ \\ ! [ x ] \\ ! ] } = \\lam x. z[y / wx]$ ] ( remark that capture of variables is possible ) .",
    "the * binding set * of a context is defined as follows : @xmath182})}&:=&{{\\tt bs}(c)}\\\\ { { \\tt bs}(t c)}&:=&{{\\tt bs}(c ) } &   { { \\tt bs}(c[x / v])}&:= & { { \\tt bs}(c)}\\cup { \\ { x \\ } } \\\\ { { \\tt bs}(c v)}&:=&{{\\tt bs}(c ) } &   { { \\tt bs}(\\lam x. c)}&:=&{{\\tt bs}(c)}\\cup { \\ { x \\}}\\\\ \\end{array}\\ ] ]    we now consider the rewriting rules of the structural @xmath0-calculus ( figure  [ f : lambdaj ] ) , which decompose the @xmath2-rule into a finer set of rules .",
    "the letter @xmath183 in the rule @xmath184 denotes a list @xmath185\\ldots[x_k / u_k]$ ] of jumps with @xmath186 ( so potentially @xmath187 ) such that @xmath188 .",
    "the @xmath184 rule extends the usual @xmath189 rule @xmath190 $ ] by allowing to introduce some distance between the abstraction @xmath129 and the argument @xmath153 which is specified by means of a list of substitutions @xmath183 .",
    "this natural extension comes from reading back a multiplicative cut in @xmath1-dags or pure proof - nets  @xcite .",
    "the substitution rules also deserve some explanation .",
    "the side conditions @xmath9 , @xmath10 and @xmath191 are global on terms but local on graphs , simply because in the graph all the occurrences of the same variable are grouped together . also , the ( global ) meta - substitution operation @xmath126 used in the right - hand side of the rule @xmath192 is completely local on graphs .",
    "similarly , the meta - operation @xmath168_x}$ ] used in the right - hand side of the @xmath193-rule is an algebraic notation for the local operation on graphs which splits the co - located occurrences of @xmath7 into two disjoint and non - empty sets , one of which corresponds to @xmath7 , while the other is associated to the fresh variable @xmath170 .",
    "thus , the structural @xmath0-calculus can be seen as an algebraic language useful to study @xmath1-dags and pure proof - nets .",
    "@xmath194{{\\tt l}}\\\\ ( \\mbox{{\\tt w}eakening } ) & t[x / u ] & { \\mapsto_{{{\\tt w } } } } & t & \\mbox{if $ |t|_x=0$}\\\\ ( \\mbox{{\\tt d}ereliction } ) & t[x / u ] & { \\mapsto_{{{\\tt d } } } } & t { \\ { x / u \\ } } & \\mbox{if $ |t|_x=1$}\\\\ ( \\mbox{{\\tt c}ontraction } ) & t[x / u ] & { \\mapsto_{{{\\tt c } } } } & t_{[y]_x}[x / u][y / u ] & \\mbox{if $ |t|_x>1$}\\\\    \\end{array}\\ ] ]    we close these rules by contexts , as usual : @xmath23 denotes the contextual closure of @xmath195 , for @xmath196 .",
    "we write @xmath197 for the reduction relation @xmath198 .",
    "the * reduction relation * @xmath199 ( resp .",
    "@xmath200 ) is generated by all ( resp .",
    "all expect @xmath184 ) the previous rewriting rules modulo @xmath135-conversion .",
    "an expected property of @xmath1 is that the reduction relation @xmath1 is stable by substitution .",
    "let @xmath201 .    1 .   if @xmath202 , then @xmath203 .",
    "2 .   if @xmath204 , then @xmath205 .    in the rest of this section",
    "we shall prove the following properties of @xmath1 : full composition ( lemma  [ l : fc ] ) , simulation of one step @xmath2-reduction ( lemma  [ l : l - sim ] ) , termination and uniqueness of normal forms of the substitution calculus @xmath200 ( lemmas  [ l : dis - terminates ] and  [ l : uniqueness - j ] ) , postponement of erasing reductions ( lemma  [ l : w - postponement ] ) and confluence of @xmath1 ( theorem  [ t : confluence ] ) .",
    "the first property we show in this section is full composition , stating that any jump @xmath131 $ ] in a substituted term @xmath5 $ ] can be reduced to its implicit form @xmath126 .",
    "there are two interesting points .",
    "the first is that in contrast with most calculi of explicit substitutions , full composition holds with no need of equivalences .",
    "the second is that the proof is by induction on @xmath6 and not on the structure of @xmath8 .",
    "[ l : fc ] let @xmath206 . then @xmath5 { \\rightarrow^{+}_{{{\\tt j } } } }   t { \\ { x / u   \\ } } $ ]",
    ". moreover , @xmath207 implies @xmath5 { \\rightarrow^{+}_{{{\\tt d}},{{\\tt c } } } } t { \\ { x / u   \\ } } $ ] .    by induction on @xmath208 .    1 .",
    "if @xmath209 , then @xmath5 { \\rightarrow_{{{\\tt w } } } } t = t { \\ { x / u   \\ } } $ ] .",
    "2 .   if @xmath210 , then @xmath5 { \\rightarrow_{{{\\tt d } } } } t { \\ { x / u   \\ } } $ ] .",
    "3 .   if @xmath211 , then @xmath212 & { \\rightarrow_{{{\\tt c } } } } & t_{[y]_x}[y / u][x / u ] &   { \\rightarrow^{+}_{{{\\tt j}}}}\\ ( { i.h.})\\ \\\\    & & t_{[y]_x } { \\ { y / u   \\ } } [ x / u]&{\\rightarrow^{+}_{{{\\tt j}}}}\\ ( { i.h.})\\ \\\\ &   & t_{[y]_x } { \\ { y / u   \\ } } { \\ { x / u   \\ } } & = &    t { \\ { x / u   \\ } }    \\rlap{\\hbox to 93 pt{\\hfill\\qed } }    \\end{array}\\ ] ]    due to the very general form of the duplication rule of @xmath1 , we get the following corollary which together with full composition can be seen as a generalised composition property :    given @xmath172 s.t .",
    "@xmath171 , then @xmath5 { \\rightarrow^{+}_{{{\\tt j } } } } { r^{s , x}_{y}(t ) } { \\ { y / u \\}}[x / u]$ ] , where @xmath170 is a fresh variable .    the term @xmath5 $ ] @xmath193-reduces to @xmath213[x / u]$ ] .",
    "we conclude by full composition .    thus for example @xmath214 { \\rightarrow^{+}_{{\\lam{{{\\tt j } } } } } }    ( x ( u x))[x / u]$ ] .",
    "note that this property is not enjoyed by traditional explicit substitution calculi : for instance , in @xmath215  @xcite , the term @xmath214 $ ] can not be reduced to @xmath216 $ ]",
    ". however , it holds in calculi with partial substitutions , as milner s calculus @xmath217  @xcite .",
    "it is not difficult ( see _ e.g. _",
    "@xcite ) to define a translation t on terms such that @xmath218 implies @xmath219 .",
    "this property allows in particular to deduce normalisation properties for @xmath217 from those of @xmath1 .",
    "+ the one - step simulation of @xmath0-calculus follows directly from full composition :    [ l : l - sim ] let @xmath220 . if @xmath221 then @xmath222 .    by induction on @xmath223 .",
    "let @xmath224 , then @xmath225 { \\rightarrow^{+}_{{{\\tt j}}}}\\ ( lem.~\\ref{l : fc})\\   u { \\ { x / v   \\ } } $ ] .",
    "all the other cases are straightforward .    we now introduce a notion that will be useful in various proofs .",
    "it counts the maximal number of free occurrences of a variable @xmath7 that may appear during a @xmath226-reduction sequence from a term @xmath8 .",
    "the * potential multiplicity * of the variable @xmath7 in the term @xmath8 , written @xmath227 , is defined on @xmath135-equivalence classes as follows : if @xmath134 , then @xmath228 ; otherwise : @xmath229 ) } & : = & { { \\tt p}_{x}(u ) } + { { \\tt max}(1,{{\\tt p}_{y}(u ) } ) } \\cdot { { \\tt p}_{x}(v ) } \\\\   \\end{array}\\ ] ] we can formalise the intuition behind @xmath227 as follows .",
    "[ l : mul - occ ] let @xmath230",
    ". then    1 .",
    "[ l : mo - one]@xmath231 .",
    "2 .   if @xmath8 is a @xmath193-nf then @xmath232 .    both points are by induction on the definition of @xmath227 .",
    "the only interesting case is when @xmath233 $ ] : the i.h .   gives @xmath234 , @xmath235 and @xmath236 , from which we conclude with the first point .",
    "for the second one , if @xmath8 is a @xmath193-nf every relation given by the i.h .",
    "is an equality and @xmath237 , otherwise there would be a @xmath193-redex .",
    "then we get @xmath238 .",
    "potential multiplicities enjoy the following properties .",
    "[ l : properties - mul - for - terms ] let @xmath230 .",
    "let @xmath239 be pairwise distinct variables .",
    "[ l : pmt-1 ] if @xmath240 and @xmath241 , then @xmath242 .",
    "[ l : pmt-2 ] if @xmath243 , then @xmath244_x})}$ ] and @xmath245_x } ) } + { { \\tt p}_{y}(t_{[y]_x})}$ ] , where the two occurrences of the term @xmath168_x}$ ] denote exactly the same term .",
    "[ l : pmt-3 ] if @xmath246 , then @xmath247 .    by induction on @xmath8 .",
    "by exploiting potential multiplicities we can define a measure of the global degree of sharing of a given term , and use this measure to prove that the @xmath226-reduction subsystem terminates .",
    "we consider multisets of integers .",
    "we use @xmath248 to denote the empty multiset , @xmath249 to denote multiset union , and @xmath250 ( resp .",
    "@xmath251 ) for the standard order ( resp .",
    "strict order ) on multisets  @xcite . given an integer @xmath252 and a multiset @xmath253",
    ", @xmath254 denotes @xmath248 if @xmath255 and the multiset @xmath256 } $ ] if @xmath257 } $ ] .",
    "the * @xmath226-measure * of @xmath230 , written @xmath258 , is given by : @xmath259 ) } & : = & { [ { { \\tt p}_{x}(u ) } ] } \\sqcup { { { \\tt j}}{\\tt m}(u ) } \\sqcup { { \\tt max}(1,{{\\tt p}_{x}(u ) } ) } \\cdot { { { \\tt j}}{\\tt m}(v ) } \\\\     \\end{array}\\ ] ]    note that @xmath260 for @xmath261 .",
    "potential multiplicities are decreasing by @xmath226-reduction , and we are going to show that the @xmath226-measure is strictly decreasing ; however both can be incremented by @xmath184-steps .",
    "for example , consider @xmath262=t'$ ] .",
    "we get @xmath263 , @xmath264 , @xmath265 and @xmath266 $ ] .",
    "the fact that the @xmath226-measure decreases by @xmath226-reduction is proved as follows :    [ l : properties - dm - for - terms ] let @xmath230 . then ,    1 .   [ l : pdmt-1 ] @xmath267_x})}$ ] .",
    "[ l : pdmt-2 ] if @xmath268 , then @xmath269 ) } { \\sqsupset}{{{\\tt j}}{\\tt m}(t { \\ { x / u   \\ } } ) } $ ] .    by induction on @xmath8 .",
    "the proof of the first property is straightforward . for the second one we show @xmath270 } \\sqcup { { { \\tt j}}{\\tt m}(t ) } \\sqcup { { \\tt max}(1,{{\\tt p}_{x}(t ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } { \\sqsupset}{{{\\tt j}}{\\tt m}(t { \\ { x / u   \\ } } ) } $ ] , which proves the desired property .",
    "1 .   @xmath271 . then @xmath272 } \\sqcup   { { { \\tt j}}{\\tt m}(u ) } { \\sqsupset}{{{\\tt j}}{\\tt m}(u ) } = { { { \\tt j}}{\\tt m}(x { \\ { x / u   \\ } } ) } $ ] .",
    "2 .   @xmath273 $ ] .",
    "w.l.g we assume @xmath241 .",
    "+ if @xmath274 , we reason as follows : @xmath275 } \\sqcup { { { \\tt j}}{\\tt m}(t ) } \\sqcup        { { \\tt max}(1,{{\\tt p}_{x}(t ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } & = \\\\      { [ { { \\tt p}_{x}(t_1 ) } ] } \\sqcup { [ { { \\tt p}_{y}(t_1 ) } ] } \\sqcup { { { \\tt j}}{\\tt m}(t_1 ) }       \\sqcup { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(t_2 ) }   \\sqcup       { { \\tt max}(1,{{\\tt p}_{x}(t_1 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } & { \\sqsupset}_{{i.h . } } \\\\      { [ { { \\tt p}_{y}(t_1 ) } ] } \\sqcup   { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(t_2 ) }    \\sqcup      { { { \\tt j}}{\\tt m}(t_1 { \\ { x / u   \\ } } ) } & = _ { lem.~\\ref{l : properties - mul - for - terms}:\\ref{l : pmt-1 } }   \\\\      { [ { { \\tt p}_{y}(t_1 { \\ { x / u   \\ } } ) } ] } \\sqcup        { { \\tt max}(1,{{\\tt p}_{y}(t_1 { \\ { x / u   \\ } } ) } ) } \\cdot { { { \\tt j}}{\\tt m}(t_2 ) }    \\sqcup      { { { \\tt j}}{\\tt m}(t_1 { \\ { x / u   \\ } } ) } & = \\\\      { { { \\tt j}}{\\tt m}(t_1 { \\ { x / u   \\ } } [ y / t_2])}&= \\\\   { { { \\tt j}}{\\tt m}(t { \\ { x / u   \\ } } ) }      \\end{array}\\ ] ] + if @xmath276 , then @xmath277 by lemma [ l : mul - occ]:[l : mo - one ] and so @xmath278 . therefore : @xmath279 } \\sqcup { { { \\tt j}}{\\tt m}(t ) } \\sqcup   { { \\tt max}(1,{{\\tt p}_{x}(t ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } & = \\\\      { [ { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { \\tt p}_{x}(t_2 ) } ] } \\sqcup      { [ { { \\tt p}_{y}(t_1 ) } ] } \\sqcup { { { \\tt j}}{\\tt m}(t_1 ) } \\sqcup      { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(t_2 ) }   & \\\\      \\sqcup\\      { { \\tt max}(1,{{\\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { \\tt p}_{x}(t_2 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } & = \\\\",
    "{ [ { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { \\tt p}_{x}(t_2 ) } ] } \\sqcup { [ { { \\tt p}_{y}(t_1 ) } ] } \\sqcup { { { \\tt j}}{\\tt m}(t_1 ) } \\sqcup    { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(t_2 ) }   & \\\\      \\sqcup\\     { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot { { \\tt max}(1,{{\\tt p}_{x}(t_2 ) } ) }   \\cdot { { { \\tt j}}{\\tt m}(u ) } & = \\\\ { [ { { \\tt p}_{y}(t_1 ) } ] }   \\sqcup { { { \\tt j}}{\\tt m}(t_1)}\\ \\sqcup          { { \\tt max}(1,{{\\tt p}_{y}(t_1 ) } ) } \\cdot ( { [ { { \\tt p}_{x}(t_2 ) } ] } \\sqcup { { { \\tt j}}{\\tt m}(t_2 ) }   \\sqcup       { { \\tt max}(1,{{\\tt p}_{x}(t_2 ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } ) &   { \\sqsupset}_{{i.h . } } \\\\      { [ { { \\tt p}_{y}(t_1 ) } ] }   \\sqcup { { { \\tt j}}{\\tt m}(t_1 ) } \\sqcup   { { { \\tt j}}{\\tt m}(t_2 { \\ { x / u   \\ } } ) } & = \\\\      { { { \\tt j}}{\\tt m}(t { \\ { x / u   \\ } } ) }      \\end{array}\\ ] ] 3",
    ".   all the other cases are straightforward .",
    "[ l : dm - decreases ] let @xmath280 . then ,    1 .",
    "@xmath281 implies @xmath282 .",
    "2 .   @xmath283 implies @xmath284 .    by induction on the relations",
    "the first point is straightforward , hence we only show the second one .",
    "we reason by cases .    1 .",
    "@xmath285   { \\rightarrow_{{{\\tt w } } } }   t= t_1 $ ] , with @xmath286 . then @xmath287 } { \\sqsupset}{{{\\tt j}}{\\tt m}(t ) } = { { { \\tt j}}{\\tt m}(t_1)}$ ] .",
    "@xmath288    { \\rightarrow_{{{\\tt d } } } }   t { \\ { x / u   \\ } } = t_1 $ ] , with @xmath289 . then @xmath290 ) } { \\sqsupset}_{lem.~\\ref{l : properties - dm - for - terms}:\\ref{l : pdmt-2 } }         { { { \\tt j}}{\\tt m}(t { \\ { x / u   \\ } } ) } $ ] .",
    "3 .   @xmath288   { \\rightarrow_{{{\\tt c } } } }   t_{[y]_x}[x / u][y / u]= t_1 $ ] , with @xmath211 and @xmath170 fresh .",
    "then , lemma  [ l : properties - mul - for - terms]:[l : pmt-2 ] gives @xmath291 } { \\sqsupset } { [ { { \\tt p}_{x}(t_{[y]_x } ) } ] }   \\sqcup   { [ { { \\tt p}_{y}(t_{[y]_x } ) } ] } $ ] and thus : @xmath292 } \\sqcup{{{\\tt j}}{\\tt m}(t ) } \\sqcup { { \\tt p}_{x}(t ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }    & = \\\\         { [ { { \\tt p}_{x}(t ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t ) } \\sqcup ( { { \\tt p}_{x}(t_{[y]_x } ) } +   { { \\tt p}_{y}(t_{[y]_x } ) } ) \\cdot { { { \\tt j}}{\\tt m}(u ) } & = _ { lem.\\ref{l : properties - dm - for - terms}:\\ref{l : pdmt-1 } } \\\\        { [ { { \\tt p}_{x}(t ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t_{[y]_x } ) } \\sqcup ( { { \\tt p}_{x}(t_{[y]_x } ) } +   { { \\tt p}_{y}(t_{[y]_x } ) } ) \\cdot { { { \\tt j}}{\\tt m}(u ) }    & { \\sqsupset}_{lem.~\\ref{l : properties - mul - for - terms}:\\ref{l : pmt-2 } } \\\\         { [ { { \\tt p}_{x}(t_{[y]_x } ) } ] } \\sqcup { [ { { \\tt p}_{y}(t_{[y]_x } ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t_{[y]_x } ) } \\sqcup { { \\tt p}_{x}(t_{[y]_x } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } \\sqcup { { \\tt p}_{y}(t_{[y]_x } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }   & = \\\\      { [ { { \\tt p}_{x}(t_{[y]_x } ) } ] } \\sqcup { [ { { \\tt p}_{y}(t_{[y]_x}[x / u ] ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t_{[y]_x } ) } \\sqcup { { \\tt p}_{x}(t_{[y]_x } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) } \\sqcup { { \\tt p}_{y}(t_{[y]_x}[x / u ] ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }   & = \\\\          { [ { { \\tt p}_{y}(t_{[y]_x}[x / u ] ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t_{[y]_x}[x / u ] ) } \\sqcup { { \\tt p}_{y}(t_{[y]_x}[x / u ] ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }   & =   { { { \\tt j}}{\\tt m}(t_1 ) }         \\end{array}\\ ] ] 4 .   @xmath288 { \\rightarrow _ { } } t'[x / u]=t_1 $ ] , where @xmath293 .",
    "then : @xmath294 } \\sqcup { { { \\tt j}}{\\tt m}(t ) } \\sqcup { { \\tt max}(1,{{\\tt p}_{x}(t ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }    & { \\sqsupset}_{{i.h.}}\\\\     & &     { [ { { \\tt p}_{x}(t ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t ' ) } \\sqcup { { \\tt max}(1,{{\\tt p}_{x}(t ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }      &   { \\sqsupseteq}_{lem.~\\ref{l : properties - mul - for - terms}:\\ref{l : pmt-3}}\\\\    & & { [ { { \\tt p}_{x}(t ' ) } ] } \\sqcup{{{\\tt j}}{\\tt m}(t ' ) } \\sqcup { { \\tt max}(1,{{\\tt p}_{x}(t ' ) } ) } \\cdot { { { \\tt j}}{\\tt m}(u ) }    & =    { { { \\tt j}}{\\tt m}(t_1 ) }         \\end{array}\\ ] ] 5 .   all the other cases are straightforward .",
    "the last lemma obviously implies :    [ l : dis - terminates ] the @xmath226-calculus terminates .",
    "furthermore :    [ l : uniqueness - j ] the @xmath226-reduction relation is confluent and terminating .",
    "moreover , if @xmath295 denotes the ( unique ) @xmath226-normal form of @xmath8 , then the following properties hold :",
    "@xmath296 ) & = & { { \\tt j}}(u ) { \\ { x/{{\\tt j}}(v )   \\ } } \\\\     \\end{array}\\ ] ]    one easily shows that @xmath200 is locally confluent , then lemma  [ l : dis - terminates ] allows to apply newman s lemma  @xcite to conclude with the first part of the statament .",
    "the second part can be shown by induction on the structure of terms . particularly , when @xmath297 $ ] one has @xmath298 { \\rightarrow^{*}_{{{\\tt j } } } } { { \\tt j}}(u)[x/{{\\tt j}}(v ) ] { \\rightarrow^{+}_{{{\\tt j } } } } ( lem.~\\ref{l : fc})\\ { { \\tt j}}(u ) { \\ { x/{{\\tt j}}(v )   \\ } } $ ] .",
    "it is then sufficient to note that @xmath226-normal forms are stable by substitutions of @xmath226-normal forms .",
    "we conclude this section by showing another important property of @xmath1 concerning the postponement of erasing steps .",
    "we first need the following lemma :    [ l : struct - unary - wop - post ] let @xmath230 . then :    1 .",
    "[ l : struct - unary - wop - post - i ] @xmath299 implies @xmath300 .",
    "[ l : struct - unary - wop - post - iv ] @xmath301 implies @xmath302    point  [ l : struct - unary - wop - post - i ] is by induction on the relations and case analysis .",
    "point  [ l : struct - unary - wop - post - iv ] is by induction on the length of @xmath303 using point  [ l : struct - unary - wop - post - i ] .",
    "let us use @xmath304 as a notation for a reduction sequence , the symbol ; for the concatenation of reduction sequences and @xmath305 for the number of @xmath197 steps in @xmath306 .",
    "then we obtain :    [ l : w - postponement ] let @xmath230 . if @xmath307 then @xmath308 s.t . @xmath309 .    by induction on @xmath310 .",
    "the case @xmath187 is straightforward .",
    "let @xmath311 . if @xmath312 then simply conclude using the i.h .   on the sub - reduction @xmath313 .",
    "otherwise the sequence @xmath306 starts with a @xmath314-step .",
    "if all the steps in @xmath306 are @xmath314 , then we trivially conclude .",
    "otherwise @xmath315 where @xmath316 is the maximal prefix of @xmath306 made out of weakening steps only . by lemma  [ l :",
    "struct - unary - wop - post]:[l : struct - unary - wop - post - iv ] we get that @xmath317 and we conclude by applying the i.h .  to @xmath318 .",
    "confluence of calculi with es can be easily proved by using tait and martin lf s technique ( see for example the case of @xmath319  @xcite ) .",
    "this technique is based on the definition of a simultaneous reduction relation which enjoys the diamond property .",
    "it is completely standard so we give the statements of the lemmas and omit the proofs .",
    "the * simultaneous reduction relation @xmath320 * is defined on terms in @xmath226-normal form as follows :    1 .",
    "@xmath321 2 .",
    "if @xmath322 , then @xmath323 3 .   if @xmath322 and @xmath324 , then @xmath325 4 .",
    "if @xmath322 and @xmath324 , then @xmath326)$ ]    note that the third and fourth cases overlap , thus for example , @xmath327 and @xmath328 , where @xmath329 denotes the identity function @xmath330 .",
    "a first lemma ensures that @xmath320 can be simulated by @xmath199 .",
    "[ l : paral - rewn ] if @xmath331 , then @xmath332 .    by induction on @xmath331 .",
    "a second lemma ensures that @xmath199 can be projected through @xmath333 on @xmath320 .",
    "[ l : rew - xc - paral ] if @xmath202 , then @xmath334 .    by induction on @xmath202 .",
    "the two lemmas combined essentially say that @xmath320 is confluent if and only if @xmath335 is confluent .",
    "then we show the diamond property for @xmath320 , which implies that @xmath199 is confluent :    [ l : paral - diamond ] the relation @xmath320 enjoys the diamond property .    by induction on @xmath320 and",
    "case analysis .",
    "then we conclude :    [ t : confluence ] for all @xmath336 , for all @xmath337 s.t .",
    "@xmath338 , @xmath339 s.t .",
    "@xmath340 .",
    "let @xmath338 for @xmath341 .",
    "lemma  [ l : rew - xc - paral ] gives @xmath342 for @xmath341 .",
    "lemma  [ l : paral - diamond ] implies @xmath320 is confluent so that @xmath339 such that @xmath343 for @xmath341 .",
    "we can then close the diagram with @xmath344 by lemma  [ l : paral - rewn ] .",
    "while confluence holds for all calculi with explicit substitutions , * metaconfluence * does not .",
    "the idea is to switch to an enriched language with a new kind of ( meta)variable of the form @xmath345 , to be intended as a named context hole expected to be replaced by terms whose free variables form a subset of @xmath346 .",
    "this form of metaterm is for example used in the framework of higher - order unification  @xcite . in presence of meta - variables not",
    "all the substitutions can be computed .",
    "for instance in the metaterm @xmath347 $ ] the jump @xmath348 $ ] is blocked .",
    "consider : @xmath349[z_2/x]\\   { \\mbox{}_{{{\\tt c}}}{\\leftarrow } }      ( x^ { { \\ { z \\ } } } y^ { { \\ { z \\}}})[z / x ] { \\rightarrow_{{{\\tt c } } } } ( x^ { { \\ { z_1 \\ } } } y^ { { \\ { z_2 \\}}})[z_2/x][z_1/x]\\ ] ]    these metaterms are different normal forms .",
    "however , it is enough to add the following equation to recover confluence : @xmath350[y / v ] \\sim_{{{\\tt cs } } } t[y / v][x / u ] \\mbox { if } y \\notin { { \\tt fv}(u)}\\ \\&\\ x \\notin { { \\tt fv}(v)}\\ ] ]    a proof of confluence of @xmath1 modulo @xmath351 for metaterms can be found in  @xcite .",
    "a reduction system @xmath27 for a language containing the set @xmath121 of all @xmath0-terms is said to enjoy the * psn property * iff every @xmath0-term which is @xmath2-strongly normalizing is also @xmath27-strongly normalizing .",
    "formally , for all @xmath220 , if @xmath352 , then @xmath353 .",
    "the psn property , when it holds , is usually non - trivial to prove .",
    "we are going to show that @xmath1 enjoys psn by giving a particularly compact proof .",
    "the proof technique has been developed by d.  kesner  @xcite ; it reduces psn to a property called @xmath354 , which relates termination of * i*mplicit substitution to termination of * e*xplicit substitution .",
    "it is an abstract technique not depending on the particular rules of the calculus with explicit substitutions .",
    "a reduction system @xmath27 for a language @xmath355 containing the set @xmath121 is said to enjoy the * @xmath354 property * iff for @xmath356 and for all @xmath357 , @xmath358 : @xmath359 { \\overline{v}^{1}_{n } } \\in { \\mathcal{t}}_{{\\mathcal{r } } } & \\mbox { imply }   &    t[x / u ] { \\overline{v}^{1}_{n } }    \\in { \\mathcal{sn}_{{\\mathcal{r } } } }     \\end{array}\\ ] ]    of course one generally considers a system @xmath27 which can simulate the @xmath0-calculus , so that the following properties seem to be natural requirements to get psn .",
    "[ t : ie - implies - psn ] let @xmath27 be a calculus verifying the following facts :    1 .",
    "[ f : uno ] if @xmath360 , then @xmath361 .",
    "[ f : dos ] if @xmath362 , then @xmath363 .",
    "[ f : tres ] if @xmath364 , then @xmath365 .",
    "then , @xmath27 enjoys psn .",
    "we show that @xmath366 implies @xmath353 by induction on the pair @xmath367 , using the lexicographic ordering .",
    "we reason by cases .    1 .",
    "if @xmath368 , then @xmath369 and @xmath370 .",
    "we have @xmath371 by the i.h .  and",
    "thus @xmath372 by fact * f0*. 2 .",
    "if @xmath373 , then @xmath374 and @xmath375 .",
    "we have @xmath376 by the i.h .  and",
    "thus @xmath377 by fact * f1*. 3 .   if @xmath378 , then @xmath379 and @xmath380 . indeed , @xmath381 and @xmath382 .",
    "we have that both terms are in @xmath383 by the i.h.then * f2 * guarantees that @xmath353 .",
    "now we show that @xmath1 satisfies the three natural requirements of the last theorem , and thus it satisfies psn .",
    "[ l : adequacy ] if @xmath1 verifies @xmath354 , then @xmath1 satisfies psn .    by theorem  [ t : ie - implies - psn ]",
    "it is sufficient to show * f0 * , * f1 * and * f2*. the first two properties are straightforward . for the third one , assume @xmath384 and @xmath385 .",
    "then in particular @xmath386 .",
    "we show that @xmath387 by induction on @xmath388 . for that , it is sufficient to show that every @xmath1-reduct of @xmath8 is in @xmath389 .",
    "if the @xmath1-reduct of @xmath8 is internal we conclude by the i.h .  otherwise @xmath297 { \\overline{t}^{1}_{n}}$ ] which is in @xmath389 by the * ie *  property .    as a consequence , in order to get psn for @xmath1 we only need to prove the * ie *  property .",
    "for that , we first generalise the * ie *  property in order to deal with possibly many substitutions .    a reduction system @xmath27 for a language @xmath355 containing the set @xmath121 is said to enjoy the * generalised @xmath354 property * , written * @xmath390 , * iff for all @xmath391 in @xmath355 , if @xmath392 , then @xmath146^{1}_{m } } { \\overline{v}^{1}_{n } } \\in { \\mathcal{sn}_{{\\lam{{{\\tt j}}}}}}$ ] , where @xmath393 for @xmath394 and @xmath395 for @xmath396 .    [",
    "t : ieg ] the @xmath1-calculus enjoys the * gie *  property .    * notation * : to improve readability of the proof we shall abbreviate the notation @xmath397^{1}_{m}}$ ] by @xmath398^{1}_{m}}$ ] .",
    "similarly for implicit substitutions .",
    "suppose @xmath399 .",
    "we show @xmath400^{1}_{m } } { \\overline{v}^{1}_{n}}\\in     { \\mathcal{sn}_{{\\lam{{{\\tt j}}}}}}$ ] by induction on : @xmath401 where @xmath402 and @xmath403 .",
    "to show @xmath404 it is sufficient to show that every @xmath1-reduct of @xmath405 is in @xmath389 .",
    "1 .   @xmath406^{1}_{j-1 } } [ x_j / u'_j ] { [ \\cdot]^{j+1}_{m } } { \\overline{v}^{1}_{n}}= t'_0 $ ] with @xmath407 .",
    "then we get : 1 .",
    "@xmath408 , 2 .",
    "@xmath409 does not change , and 3 .",
    "@xmath410 . + we conclude by the i.h .   since @xmath411 and our hypothesis @xmath412 is equal or reduces to @xmath413 ( depending on @xmath414 ) .",
    "2 .   @xmath415^{1}_{m } } { \\overline{v}^{1}_{n}}= t'_0 $ ] with @xmath416",
    ". then we have that : @xmath417 we conclude by the i.h .  since @xmath418 .",
    "3 .   @xmath419^{1}_{m } } v_1 \\ldots   v'_i \\ldots   v_n= t'_0 $ ] with @xmath420 .",
    "then we have that : @xmath421 we conclude by the i.h .  since @xmath422 .",
    "4 .   @xmath423^{1}_{j-1 } } { [ \\cdot]^{j+1}_{m } } { \\overline{v}^{1}_{n}}= t'_0 $ ] , with @xmath424 .",
    "then we have that : @xmath425 but @xmath426 . we conclude by the i.h .  since @xmath427 by hypothesis .",
    "@xmath428^{1}_{j-1 } } { \\ { x_j / u_j   \\ } } { [ \\cdot]^{j+1}_{m } } { \\overline{v}^{1}_{n } } = t'_0 $ ] with @xmath429 .",
    "note that @xmath430^{1}_{j-1 } } { [ \\cdot]^{j+1}_{m } } { \\overline{v}^{1}_{n}}$ ] .",
    "then we get : @xmath431 since the jumps are independent , then @xmath432 implies @xmath433 .",
    "we conclude since @xmath434 by hypothesis .",
    "@xmath435_{x_j}}{[\\cdot]^{1}_{j-1 } } [ x_j / u_j][y / u_j ] { [ \\cdot]^{j+1}_{m } }   { \\overline{v}^{1}_{n } } = t'_0 $ ] with @xmath436 and @xmath170 fresh . then , + @xmath437_{x_j}}{\\{\\cdot\\}^{1}_{j-1 } } {",
    "\\ { x_j / u_j   \\ } } { \\ { y / u_j   \\ } } { \\{\\cdot\\}^{j+1}_{m } } { \\overline{v}^{1}_{n } } ) =   \\eta_{{\\lam{{{\\tt j}}}}}(t{\\{\\cdot\\}^{1}_{m } } { \\overline{v}^{1}_{n}}))$ ] and + @xmath438_{x_j } } ) } < { { { \\tt v}}_{{\\overline{x}^{1}_{m}}}(t)}$ ] . in order to apply the i.h .  to @xmath168_{x_j}}$ ] we need : 1 .",
    "this holds by hypothesis .",
    "2 .   @xmath168_{x_1}}{\\{\\cdot\\}^{1}_{j-1 } }   { \\ { x_j / u_j   \\ } } { \\ { y / u_j   \\ } } { \\{\\cdot\\}^{j+1}_{m } } { \\overline{v}^{1}_{n } } \\in { \\mathcal{sn}_{{\\lam{{{\\tt j}}}}}}$ ] .",
    "this holds since the term is equal to @xmath440 which is @xmath389 by hypothesis .",
    "+ note that this is the case that forces the use of a generalised sequence of substitutions : if we were proving the statement for @xmath441 { \\overline{v}^{1}_{n}}$ ] using as hypothesis @xmath442 then there would be no way to use the i.h .  to get @xmath168_{x } } [ x / u][y / u ] { \\overline{v}^{1}_{n}}\\in { \\mathcal{sn}_{{\\lam{{{\\tt j}}}}}}$ ] .",
    "@xmath443^{1}_{m } } v_1{\\overline{v}^{2}_{n } } { \\rightarrow_{{{\\tt db } } } }       t'[x / v_1]{[\\cdot]^{1}_{m } } { \\overline{v}^{2}_{n } } = t'_0 $ ] .",
    "we have that : @xmath444 holds by hypothesis .",
    "then : @xmath445 { \\overline{v}^{2}_{n } } = t'[x / v_1]{\\{\\cdot\\}^{1}_{m } } { \\overline{v}^{2}_{n}}=u'_0\\ ] ] thus @xmath446 and @xmath447 .",
    "since @xmath448 by hypothesis we can apply the i.h .  and",
    "get @xmath449 .",
    "the following is a consequence of thereom  [ t : ieg ] : just take the number of substitutions @xmath450 to be @xmath451 and consider only the @xmath390 property for @xmath452 .",
    "[ t : ieldis ] the @xmath1-calculus enjoys the * ie *  property .",
    "corollary  [ t : ieldis ] , then lemma  [ l : adequacy ] and finally theorem  [ t : ie - implies - psn ] imply :    [ coro : struct - psn - lj ] the @xmath1-calculus enjoys psn , _",
    "i.e. _  if @xmath453 , then @xmath454 .    note that lemma [ l : adequacy ] and theorem [ t : ieg ] , which contains the arguments for psn , do not use full composition , nor termination of @xmath200 , confluence or postponement of erasures : none of the properties of @xmath1 plays a role in this compact proof of psn , which is quite surprising .",
    "the crucial point is the formulation at a distance of the rewriting rules .",
    "indeed , we will later show that such a simple proof does not longer work when rules propagating jumps are added to the system .",
    "sections  [ s : structural - lj ] and  [ s : lj - psn ] show that the basic theory of @xmath1 enjoys good properties such as full composition , confluence and psn . in most calculi with explicit substitutions , where substitutions are propagated through constructors and do not act at a distance , full composition",
    "can only be obtained by adding an equivalence relation @xmath455 defined as the contextual and reflexive - transitive closure of the following equation : @xmath456[y / v ] & \\sim_{{{\\tt cs } } } & t[y / v][x / s ] & \\mbox { if } x\\notin{{\\tt fv}(v)}\\ \\&\\",
    "y\\notin{{\\tt fv}(s ) }   \\\\     \\end{array}\\ ] ] otherwise a term like @xmath457[x / w]$ ] can not reduce to its implicit form @xmath458 = x[y / z ] { \\ { x / w   \\ } } $ ] ( and so full composition does not hold ) .",
    "interestingly , @xmath1 enjoys full composition without using equation @xmath351 , which is remarkable since plain rewriting is much easier than rewriting modulo an equivalence relation .",
    "however , as mentioned at the end of section  [ ss : struct - confluence ] , the equation @xmath351 is necessary to recover confluence on metaterms .",
    "it is then natural to wonder what happens when @xmath455 is added to @xmath1 .",
    "the answer is extremely positive since @xmath455 preserves all the good properties of @xmath1 , and this holds in a very strong sense .",
    "in fact , @xmath455 is a strong bisimulation for @xmath459 ( _ cf . _",
    "lemma  [ l : eqo - bisim ] ) , so that @xmath455 can be postponed w.r.t .",
    "@xmath199 ( _ cf .",
    "_  lemma  [ l : bisim - conf ] ) and @xmath1 modulo @xmath455 enjoys psn ( _ cf . _  lemma  [ l : lamj - bis - psn - dif - sys]:[l : sbisim - pres - psn ] ) .",
    "as already mentioned in the introduction , @xmath1-terms and @xmath1-dags  @xcite are strongly bisimilar , but the translation of @xmath1-terms to @xmath1-dags is not injective , _",
    "i.e. _  there are different @xmath1-terms which are mapped to the _ same _ @xmath1-dag .",
    "it is then interesting to characterise the quotient induced by the translation  @xcite , which turns out to be @xmath455 : indeed @xmath460 if and only if @xmath8 and @xmath153 are mapped to the same @xmath1-dag @xmath461 , and since they both behave like @xmath461 ( _",
    "i.e. _   are strongly bisimilar to @xmath461 ) , then they behave the same ( _ i.e. _   they are strongly bisimilar ) .",
    "the @xmath1-calculus is also interesting since it can be mapped to another graphical language , danos and regnier s * pure proof - nets * , being able to capture _ untyped _ @xmath0-calculus .",
    "it is possible to endow pure proof - nets with an operational semantics because they use a big - steps rule for eliminating exponential cuts , which corresponds to use just one substitution rule @xmath5{\\rightarrow_{}}t { \\ { x / u   \\ } } $ ] .",
    "however , the refinement of pure proof - nets where duplications are done small - steps is very natural from an explicit substitution point of view , altough  to our knowledge  it has never been considered before . ] which makes them strongly bisimilar to @xmath1 .",
    "the quotient induced by the translation from @xmath1-terms into pure proof - nets is given by the * graphical equivalence * @xmath13 which is the contextual and reflexive - transitive closure of the equations in figure  [ f : eqo ] .",
    "@xmath456[y / v ] & \\sim_{{{\\tt cs } } } & t[y / v][x / s ] & \\mbox { if } x\\notin{{\\tt fv}(v)}\\ \\&\\",
    "y\\notin{{\\tt fv}(s ) }   \\\\     \\lam y. t [ x / s ] & { { \\sim}_{\\sigma_1 } } & ( \\lam y. t ) [ x / s ]   & \\mbox { if } y\\notin { { \\tt fv}(s ) } \\\\     t[x / s ] v & { { \\sim}_{\\sigma_2 } } & ( t v)[x / s ] & \\mbox { if } x\\notin{{\\tt fv}(v ) } \\\\     \\end{array}\\ ] ]    this means that pure proof - nets quotient more than @xmath1-dags - dags can be mapped on pure proof - nets , and once again the map is a strong bisimulation . ] . as for @xmath462 , @xmath13 is a strong bisimulation ( _ cf . _",
    "lemma  [ l : eqo - bisim ] ) , and thus confluence and psn of @xmath1 automatically lift to @xmath463 ( _ cf .",
    "_  theorem  [ thm : eqo - conf - psn ] ) , which is the reduction relation @xmath1 modulo @xmath13 .",
    "another way to explain the @xmath464-equivalence is by means of _ linear _ constructors .",
    "indeed , the body of an abstraction can not be duplicated nor erased by the abstraction itself  in this sense an abstraction is _ linear _ in its body . similarly , explicit substitutions are linear with respect to their left subterm , while they are _ non - linear _ with respect to their right subterm , _ i.e. _  the content of the jump , which may be duplicated or discarded .",
    "applications are linear in their left subterm but they are non - linear in their argument , because they can wrap it in a jump .",
    "this linear / non - linear classification reflects the fact that jumps and arguments ( and only them ) are associated to @xmath465-boxes in proof - nets , the non - linear construction of linear logic .",
    "the equations defining @xmath13 can be understood as a permutation between a jump and a linear subterm of the adjacent constructor .",
    "it is then natural to wonder if @xmath13 can be extended with equations permuting jumps with non - linear subterms ( see figure [ f : boite ] , page ) , without breaking confluence and psn .",
    "the answer is yes ; the obtained equational theory is called the * substitution equivalence * @xmath16 , and the fact that @xmath1 modulo @xmath16 enjoys psn is the main result of this paper .",
    "extending @xmath13 to non - linear permutations is delicate from a termination point of view , since the use of non - linear equations affects reduction lengths .",
    "indeed , the natural but nave extension of @xmath13 breaks psn . by analyzing a counter - example to psn we define @xmath16 so that psn turns out to be true .",
    "the proof of this fact , however , is more involved than that for @xmath455 and @xmath13 , mainly because @xmath16 is not a strong bisimulation .",
    "therefore , we shall develop a new technique for proving psn modulo @xmath16 .",
    "section  [ s : regnier ] starts over by explaining the equivalence @xmath13 in terms of regnier s @xmath15-equivalence  @xcite , providing a different point of view with respect to what was already mentioned .",
    "section [ s : propp - intro ] discusses how to extend @xmath13 to @xmath16 by showing the difficulties to prove psn for the obtained extension .",
    "section  [ sec : psn ] develops the proof of psn for @xmath1 modulo @xmath16 .",
    "* regnier s equivalence * @xmath466 is the smallest equivalence on @xmath0-terms closed by contexts and containing the equations in figure  [ f : regnier ] .",
    "@xmath467    regnier proved that two @xmath468-equivalent terms have essentially the same _ operational _ behavior : @xmath469 is contained in the equational theory generated by @xmath2-reduction , _ i.e. _   @xmath470 , and if @xmath471 then the maximal @xmath2-reduction sequences from @xmath8 and @xmath70 have the same length ( the so - called _",
    "barendregt s norm _ ) .",
    "that is why regnier calls @xmath469 an _",
    "operational equivalence_.    it is then natural to expect that the previous property can be _ locally _ reformulated in terms of a strong bisimulation , namely , @xmath472    unfortunately , this is not the case .",
    "consider the following example , where grey boxes are used to help the identification of redexes and their reductions : @xmath473    the term @xmath70 has only one redex whose reduction gives @xmath474 which is not @xmath469-equivalent to @xmath153 , the reduct of @xmath8 . the diagram can be completed only by unfolding the whole reduction : @xmath475    note that the second step from @xmath70 reduces a _ created _ redex .",
    "we are now going to analyze @xmath469 in the framework of @xmath1 .",
    "for that , regnier s equivalence can be understood on @xmath1-terms by first removing the @xmath184-redexes .",
    "indeed , let us take the clauses defining @xmath469 and let us make a @xmath184-reduction step on both sides , thus eliminating the multiplicative redexes as in regnier s definition : @xmath476 } } }   &   & \\lam y. ( { \\colorbox{lightgray}{\\ensuremath{t [ x / u ] } } } ) & { \\colorbox{lightgray}{\\ensuremath{t[x / u ] } } } v & & { \\colorbox{lightgray}{\\ensuremath{(t v)[x / u ] } } } \\end{array}\\ ] ]    now , @xmath469 can be seen as a change of the positions of jumps in a given term and particularly as a permutation equivalence of jumps concerning the linear constructors of the calculus .",
    "this is not so surprising since such permutations turn into simple equalities when one extends the standard translation of @xmath0-calculus into linear logic proof - nets to @xmath1-terms ( see for example  @xcite ) .",
    "another interesting observation is the relationship between @xmath469 and the equivalence @xmath462 introduced in section  [ ss : struct - confluence ] .",
    "to understand this point we proceed the other way around by expanding jumps into @xmath2-redexes : @xmath477}}}[x / u ] } } } & \\equiv_{{{\\tt cs } } } & { \\colorbox{darkgray}{\\ensuremath{{\\colorbox{lightgray}{\\ensuremath{t[x / u]}}}[y / v]}}}\\\\ \\\\      { \\colorbox{darkgray}{\\ensuremath{\\uparrow_{{\\tt db } } } } } & &       { \\colorbox{darkgray}{\\ensuremath{\\uparrow_{{\\tt db}}}}}\\\\ \\\\      ( { \\colorbox{lightgray}{\\ensuremath{{\\colorbox{darkgray}{\\ensuremath{(\\lam y. t ) v } } } ) [ x / u ] } } } & &           { \\colorbox{darkgray}{\\ensuremath{(\\lam y.{\\colorbox{lightgray}{\\ensuremath{t [ x / u ] } } } ) v}}}\\\\ \\\\      { \\colorbox{lightgray}{\\ensuremath{\\uparrow_{{\\tt db } } } } } & &     { \\colorbox{lightgray}{\\ensuremath{\\uparrow_{{\\tt db}}}}}\\\\ \\\\      { \\colorbox{lightgray}{\\ensuremath{(\\lam x. ( { \\colorbox{darkgray}{\\ensuremath{(\\lam y. t ) v } } } ) ) u } } } & & { \\colorbox{darkgray}{\\ensuremath{(\\lam y. ( { \\colorbox{lightgray}{\\ensuremath{(\\lam x. t ) u } } } ) ) v}}}\\\\ \\\\ \\end{array}\\ ] ] note that the relation between the resulting terms is contained in @xmath469 , that is why it was not visible in @xmath0-calculus : @xmath478    in  @xcite it has been proved that two @xmath1-terms @xmath8 and @xmath70 are translated to the same pure proof - net if and only if @xmath479 .",
    "more precisely , this relation can be given by the * graphical equivalence * @xmath13 already defined in figure  [ f : eqo ] .",
    "the equations defining @xmath13 are specified by means of _ local _ permutations , but it is also possible to define @xmath13 in terms of global permutations .",
    "first , define a * spine context * @xmath84 as : @xmath480\\ ] ] and then define @xmath13 as the context closure of the following equation @xmath481 : @xmath482 \\ ! ] } \\sim_{{\\tt o}}{s [ \\ ! [ t ] \\ ! ] } [ x / u ] \\ \\ \\ \\ \\   \\mbox{if $ { { \\tt bs}(s)}\\cap { { \\tt fv}(u)}=\\emptyset$ and $ |t|_x=|{s [ \\ ! [ t ] \\ ! ] } |_x$}\\ ] ]    the two definitions are easily seen to be equivalent .",
    "we shall now prove that @xmath13 is a strong bisimulation , which will immediately imply ( lemma  [ l : lamj - bis - psn - dif - sys ] ) that @xmath13 preserves reduction lengths .",
    "this property is stronger than the one proved by regnier for @xmath469 , since it holds for any reduction sequence , not only for the maximal ones .",
    "[ l : eqo - stability ] let @xmath74 be the equivalence relation @xmath351 or @xmath464 , and @xmath483 s.t .",
    "let @xmath240 .",
    "then :    1 .",
    "[ l : eqo - stability - minus ] @xmath485 .",
    "[ l : eqo - stability - zero ] for all @xmath486 there is @xmath487 s.t . @xmath488 and @xmath489 .",
    "[ l : eqo - stability - two ] @xmath490 .",
    "[ l : eqo - stability - one ] @xmath491 .    straightforward inductions .",
    "[ l : eqo - bisim ] the relations @xmath455 and @xmath13 are strong bisimulations for @xmath1 .",
    "we prove the statement for @xmath13 .",
    "the proof for @xmath455 is obtained by simply forgetting the cases @xmath492 .",
    "assume @xmath493 holds in @xmath252-steps , which is written as @xmath494 , and let @xmath495 .",
    "we show @xmath496 s.t .",
    "@xmath497 by induction on @xmath252 .",
    "the inductive step for @xmath498 is straightforward . for @xmath499 we reason by induction on the definition of @xmath500 , given by the closure under contexts of the equations @xmath501 .",
    "we only show here the cases where @xmath493 is contextual , all the other ones being straightforward .    1 .",
    "if @xmath502{\\equiv_{{\\tt o}}}t ' [ x / u]=t_1{\\rightarrow_{{\\lam{{{\\tt j } } } } } } t ' [ x / u']=s_1 $ ] , where @xmath503 and @xmath204 , then we close the diagram by @xmath504 { \\equiv_{{\\tt o}}}s_1 $ ] .",
    "2 .   the case @xmath502{\\equiv_{{\\tt o}}}t [ x / u']=t_1{\\rightarrow_{{\\lam{{{\\tt j } } } } } } t ' [ x / u']=s_1 $ ] , where @xmath505 and @xmath202 is analogous to the previous one .",
    "3 .   if @xmath502{\\equiv_{{\\tt o}}}t ' [ x / u]=t_1{\\rightarrow_{{\\lam{{{\\tt j } } } } } } t '' [ x / u]=s_1 $ ] , where @xmath506 , then by the i.h .  @xmath507 s.t .",
    "we close the diagram by @xmath509   { \\equiv_{{\\tt o}}}^ * s_1 $ ] .",
    "the case @xmath502{\\equiv_{{\\tt o}}}t [ x / u']=t_1{\\rightarrow_{{\\lam{{{\\tt j } } } } } } t [ x / u'']=s_1 $ ] , where @xmath510 is analogous to the previous one .",
    "if @xmath502{\\equiv_{{\\tt o}}}t [ x / u']=t_1{\\rightarrow_{{{\\tt w } } } } t = s_1 $ ] , where @xmath505 and @xmath9 , then @xmath511 . 6 .",
    "if @xmath502{\\equiv_{{\\tt o}}}t ' [ x / u]=t_1{\\rightarrow_{{{\\tt w } } } } t = s_1 $ ] , where @xmath503 and @xmath512 , then the previous remark implies @xmath513 and we close the diagram by @xmath514 .",
    "7 .   if @xmath502{\\equiv_{{\\tt o}}}t [ x / u']=t_1{\\rightarrow_{{{\\tt c } } } }    t_{[y]_x}[x / u'][y / u']=s_1 $ ] , where @xmath505 and @xmath11 , then we close the diagram by @xmath515_x}[x / u][y / u ] { \\equiv_{{\\tt o}}}^2    t_{[y]_x}[x / u'][y / u']$ ] .",
    "8 .   if @xmath502{\\equiv_{{\\tt o}}}t ' [ x / u]=t_1{\\rightarrow_{{{\\tt c } } } }    t'_{[y]_x}[x / u][y / u]=s_1 $ ] , where @xmath503 and @xmath516 , then we first write @xmath517_x}$ ] as @xmath518 , where @xmath519 and @xmath520 .",
    "lemma  [ l : eqo - stability]:[l : eqo - stability - minus ] gives @xmath11 and lemma  [ l : eqo - stability]:[l : eqo - stability - zero ] gives @xmath521 verifying @xmath488 and @xmath522 .",
    "then , we close the diagram with @xmath523[y / u]{\\equiv_{{\\tt o}}}t'_{[y]_x}[x / u][y / u]$ ] . 9 .   if @xmath502{\\equiv_{{\\tt o}}}t [ x / u']=t_1{\\rightarrow_{{{\\tt d } } } }    t { \\ { x / u '   \\ } } = s_1 $ ] , where @xmath505 and @xmath10 , then @xmath441{\\rightarrow_{{{\\tt d } } } }    t { \\ { x / u   \\ } } { \\equiv_{{\\tt o}}}t { \\ { x / u '   \\ } } $ ] , where the last equivalence holds by lemma  [ l : eqo - stability]:[l : eqo - stability - one ] . 10 . if @xmath524{\\equiv_{{\\tt o}}}t'[x / u]=t_1{\\rightarrow_{{{\\tt d } } } } t ' { \\ { x / u   \\ } } = s_1 $ ] , where @xmath503 and @xmath525 .",
    "then , @xmath441{\\rightarrow_{{{\\tt d } } } }    t { \\ { x / u   \\ } } { \\equiv_{{\\tt o}}}t ' { \\ { x / u   \\ } } $ ] where the last equivalence holds by lemma  [ l : eqo - stability]:[l : eqo - stability - minus]-[l : eqo - stability - two ] .    a consequence ( _ cf .",
    "_  lemma  [ l : bisim - conf ] ) of the previous lemma is that both @xmath455 and @xmath13 can be postponed , which implies in particular the following .",
    "[ thm : eqo - conf - psn ] the reduction systems @xmath526 and @xmath527 are both confluent and enjoy psn .",
    "confluence follows from lemma  [ l : eqo - bisim ] and theorem  [ t : confluence ] by application of lemma  [ l : bisim - conf]:[l : bisim - conf - ii ] , while psn follows from lemma  [",
    "l : eqo - bisim ] and corollary  [ coro : struct - psn - lj ] by application of lemma [ l : lamj - bis - psn - dif - sys ] .",
    "actually , @xmath528 is equal to @xmath529 . in the framework of rewriting modulo an equivalence relation there are various , non - equivalent , forms of confluence .",
    "the one given by theorem [ thm : eqo - conf - psn ] is the weakest one , but the _ church - rosser modulo _ property also holds in our framework .    [ cr - modulo ]",
    "let @xmath74 be the equivalence relation @xmath351 or @xmath464 .",
    "if @xmath530 , @xmath531 and @xmath532 , then @xmath533 s.t .",
    "@xmath534 , @xmath535 and @xmath536 .    by lemma  [ l : eqo - bisim ] and",
    "lemma  [ l : bisim - conf ] .",
    "we finish this section with the following interesting property .",
    "[ l : dis - o ] the reduction relation @xmath537 is strongly normalizing .",
    "the proof uses the measure @xmath538 used to prove lemma  [ l : dis - terminates ] and the fact that @xmath539 implies @xmath540 .",
    "composition of explicit substitutions is a sensible topic in the literature , it is interesting to know if @xmath1 can be extended with a safe notion of ( structural ) composition .",
    "the structural @xmath0-calculus is peculiar since composition of substitution is provided natively , but only _ implicitly _ and at a distance .",
    "indeed , a term @xmath5[y / v]$ ] s.t .",
    "@xmath541 reduces in various steps to : @xmath542[y / v]\\ ] ] but not to the _ explicit composition _",
    "@xmath543[y / v]$ ] .",
    "one of the aims of this paper is to prove that adding explicit composition to @xmath1 preserves psn and confluence .    the second aim concerns _",
    "explicit decomposition_. indeed , some calculi  @xcite explicitly _ decompose _ substitutions , _",
    "i.e. _  reduce @xmath543 $ ] to @xmath5[y / v]$ ] .",
    "we show that psn and confluence hold even when extending @xmath1 with such a rule .    more generally ,",
    "having a core system , @xmath1 , whose operational semantics does not depend on propagations , we study how to modularly add propagations by keeping the good properties .",
    "we have already shown that @xmath1 is stable with respect to the graphical equivalence , which can be seen as handling propagations of jumps with respect to _ linear _ constructors .",
    "we proved that @xmath14 is confluent and enjoys psn ( theorem  [ thm : eqo - conf - psn ] ) .",
    "what we investigate here is if we can extend it to propagations with respect to _ non - linear _ constructors .",
    "the idea is to extend @xmath13 to @xmath544 , where @xmath544 is the the contextual and reflexive - transitive closure of the relation generated by @xmath545 plus : @xmath546      & { \\sim_{{{{\\tt box}}_1}^0 } } & t v[x / u ]     & \\mbox{if } x \\notin { { \\tt fv}(t)}\\\\ t[y / v][x / u ]     & { \\sim_{{{{\\tt box}}_2}^0 } } & t[y / v[x / u ] ] & \\mbox{if } x\\notin { { \\tt fv}(t)}\\\\ \\end{array}\\ ] ] in terms of global permutations @xmath544 can be defined as the context closure of @xmath547 \\ ! ] } \\sim_{{\\tt n}}{c [ \\ ! [ t ] \\ ! ] } [ x / u]$ ] where @xmath548 \\ ! ] } |_x$ ] , and @xmath180 is _ any _ context ( not just a spine context ) which does not capture the variables of @xmath153 .",
    "these equations are constructor preserving ( same kind and number of constructors ) , in contrast to more traditional explicit substitution calculi containing for instance the following rule : @xmath549 & { \\rightarrow_{@ } } & t[y / v ] u[y / v ] \\end{array}\\ ] ] which achieves two actions at the same time : duplication and propagation of a jump . in @xmath550",
    "there is a neat separation between propagations and duplications , so that no propagation affects the number of constructors .",
    "the rule @xmath551 can be simulated in @xmath550 only in the very special case where @xmath8 and @xmath153 both have occurrences of @xmath170 . in our opinion",
    "this is not a limitation : the rule @xmath551 is particularly inefficient since it duplicates even if there is no occurrence of @xmath170 at all , thus it is rather a good sign that @xmath550 can not simulate @xmath551 .",
    "the reduction relation @xmath550 does not enjoy psn , since it is a bit nave on the way it handles void substitutions .",
    "the following counter - example has been found by stefano guerrini .",
    "let @xmath552 $ ] , then : @xmath553 = ( z z ) [ z / y][x / u ] & \\equiv_{{{{\\tt box}}_2}^0 }   &      ( z z ) [ z / y[x / u ] ] & { \\rightarrow_{{{\\tt c } } } } \\\\\\\\     & & ( z_1 z_2 )   [ z_1/y[x / u ] ]   [ z_2/y[x / u ] ] & { \\rightarrow^{+}_{{{\\tt d } } } } &      y[x / u ] ( y [ x / u ] ) & \\equiv_{\\sigma_2,{{{\\tt box}}_1}^0 , \\alpha }   \\\\\\\\     & & ( y y ) [ x_1/u ] [ x / u ] & \\equiv_{{{{\\tt box}}_2}^0 } & ( y y ) [ x_1/u[x / u ] ]     \\end{array}\\ ] ] the term @xmath8 reduces to a term containing @xmath8 and so there is a loop of the form @xmath554 { \\rightarrow^{+ } _ { } } c_0[c_1[t ] ] { \\rightarrow^{+ } _ { } } \\ldots$ ] .",
    "now , take @xmath555 , which is strongly normalizing in the @xmath0-calculus .",
    "since @xmath405 @xmath550-reduces to @xmath8 , @xmath405 is not @xmath550-strongly normalizing and thus @xmath550 does not enjoy psn .",
    "it is worth to note that , in contrast to mellis  counterexample for @xmath556  @xcite , the @xmath184-rule has no role in building the diverging reduction : the fault comes only from the jump subsystem @xmath226 modulo @xmath544 .",
    "the key point of the previous counter - example is that the jump @xmath131 $ ] is free to float everywhere in the term since @xmath7 has no occurrence in @xmath8 .",
    "such behavior can be avoided by imposing the constraint `` @xmath557 '' to @xmath558 and @xmath559 .",
    "this has also a natural graphical justification in terms of pure proof - nets ( @xcite , chapter 6 , page 149 ) , since such constraint turns @xmath558 and @xmath559 into the exact analogous    of the commutative box - box rule of linear logic proof - nets , but used here as an equivalence relation .",
    "we then modify @xmath560 and @xmath561 by introducing the equivalence @xmath562 as the contextual and reflexive - transitive closure of the equations in figure  [ f : boite ] .",
    "@xmath546      & { \\sim_{{{{\\tt box}}_1 } } } & t v[x / u ]     &     \\mbox{if } x \\notin { { \\tt fv}(t)}\\",
    "\\&\\   x\\in { { \\tt fv}(v)}\\\\ t[y / v][x / u ]     & { \\sim_{{{{\\tt box}}_2 } } } & t[y / v[x / u ] ] &     \\mbox{if } x\\notin { { \\tt fv}(t)}\\ \\&\\ x\\in { { \\tt fv}(v)}\\\\ \\end{array}\\ ] ]    now , we redefine @xmath544 in the following way .",
    "the * substitution equivalence * @xmath16 is the smallest equivalence closed by contexts containing all the equations in figure  [ f : eqf ] .",
    "@xmath563[y / v ] & \\sim_{{{\\tt cs } } } & t[y / v][x / s ] &   \\mbox{if } x\\notin{{\\tt fv}(v)}\\ \\&\\",
    "y\\notin{{\\tt fv}(s ) }   \\\\     \\lam y. ( t [ x / s ] ) & { { \\sim}_{\\sigma_1 } } & ( \\lam y. t ) [ x / s ]   &   \\mbox{if } y\\notin { { \\tt fv}(s ) } \\\\",
    "t[x / s ] v & { { \\sim}_{\\sigma_2 } } & ( t v)[x / s ] &   \\mbox{if } x\\notin{{\\tt fv}(v ) } \\\\ ( t v)[x / u ]      & { \\sim_{{{{\\tt box}}_1 } } } & t v[x / u ]     &     \\mbox{if } x \\notin { { \\tt fv}(t)}\\ \\&\\ x\\in { { \\tt fv}(v)}\\\\ t[y / v][x / u ]     & { \\sim_{{{{\\tt box}}_2 } } } & t[y / v[x / u ] ] &     \\mbox{if } x\\notin { { \\tt fv}(t)}\\",
    "\\&\\   x\\in { { \\tt fv}(v)}\\\\ \\end{array}\\ ] ]    alternatively , @xmath16 can be defined by the context closure of the following global permutating equations : @xmath564 \\ ! ] } & \\sim_{{{{\\tt o}}{{\\tt box } } } } & { c [ \\ ! [ t ] \\ ! ] } [ x / u ] & \\mbox{if $ { { \\tt bs}(c)}\\cap { { \\tt fv}(u)}=\\emptyset$ and $ |t|_x=|{h [ \\ ! [ t ] \\ ! ] } |_x>0$}\\\\ { s [ \\ ! [ t[x / u ] ] \\ ! ] } & \\sim_{{{{\\tt o}}{{\\tt box } } } } & { s [ \\ ! [ t ] \\ ! ] } [ x / u ] & \\mbox{if $ { { \\tt bs}(s)}\\cap { { \\tt fv}(u)}=\\emptyset$ and $ |t|_x=|{s [ \\ ! [ t ] \\ ! ] } |_x=0 $ } \\end{array}\\ ] ] where @xmath180 is any context and @xmath84 is a spine context .",
    "it is now natural to study @xmath1-reduction modulo @xmath16 .",
    "it is easy to prove that the jump calculus terminates with respect to the new equivalence @xmath16 so that the previous counterexample to psn is ruled out .",
    "we need an auxiliary lemma about potential multiplicities and the @xmath226-measure .",
    "[ l : mul - for - eq ] let @xmath565 . if @xmath566 then :    1 .   @xmath567 for every variable @xmath568 .",
    "[ p : mul - for - eq - two ] @xmath282 .    by induction on @xmath16 .",
    "the base cases are easy calculations , the inductive cases use the i.h .",
    "lemma  [ l : dm - decreases ] and lemma  [ l : mul - for - eq]:[p : mul - for - eq - two ] together proves the following corollary .",
    "[ l : dis - f ] the reduction relation @xmath569 is terminating .",
    "the structural @xmath0-calculus modulo @xmath16 is an incredibly subtle and complex rewriting system , and proving psn is is not an easy task .",
    "some of the difficulties are :    1 .   _",
    "the relation @xmath16 is not a strong bisimulation_. it is not difficult to see that @xmath1 is confluent modulo @xmath16 ( essentially the same proof than for @xmath1 ) .",
    "however , @xmath16 does not preserve reduction lengths to normal form , _",
    "i.e. _   it is not a strong bisimulation .",
    "two examples can be given by analysing the interaction between @xmath16 with erasure and duplication .",
    "here is an example for erasure : @xmath570[y / u ] & { \\rightarrow_{{{\\tt w}}}}&z[y / u]\\\\ { \\equiv_{{{{\\tt box}}_2}}}&&\\downarrow_{{{\\tt w}}}\\\\ z[x / y[y / u]]&{\\rightarrow_{{{\\tt w } } } } & z     \\end{array}\\ ] ] and here another one for duplication : @xmath571[y / z ] & { \\rightarrow_{{{\\tt c}}}}&(x x_1)[x / y][x_1/y][y / z]&{\\rightarrow_{{{\\tt c}}}}&(x x_1)[x / y_1][x_1/y_2][y_1/z][y_2/z]\\\\ { \\equiv_{{{{\\tt box}}_2}}}&&&&{{\\equiv_{{{{\\tt o}}{{\\tt box}}}}}}\\\\ ( x x)[x / y[y / z]]&{\\rightarrow_{{{\\tt c } } } } & ( x x_1)[x / y[y / z]][x_1/y[y / z]]&{\\equiv_{\\alpha}}&(x x_1)[x / y_1[y_1/z]][x_1/y_2[y_2/z ] ]     \\end{array}\\ ] ] indeed , if @xmath16 would have been a strong bisimulation , then in both diagrams the two terms of the second column would be @xmath16-equivalent , while they are not ( remark that @xmath16 preserves the number of constructors so that those terms can not be @xmath16-equivalent ) .",
    "_ the relation @xmath16 can not be postponed_. the last example shows also that @xmath16 can not be postponed .",
    "this is illustrated by the upper left corner of the previous figure : @xmath571[y / z ] & { \\rightarrow_{{{\\tt c}}}}&(x x_1)[x / y][x_1/y][y / z]\\\\ { \\equiv_{{{{\\tt box}}_2}}}\\\\ ( x x)[x / y[y / z ] ]     \\end{array}\\ ] ] observe that this phenomenon is caused by the equation @xmath572 .",
    "remark that both composition ( _ i.e. _  @xmath573 ) and decomposition ( @xmath574 ) are used in guerrini s counterexemple .",
    "[ it : in - out - instability]_there is no canonical representant of equivalence classes which is stable by reduction_. indeed , there are two natural canonical representants in @xmath17 . given @xmath8",
    "we can define @xmath575 as the term obtained by moving all substitution towards the variables as much as possible and @xmath576 the term obtained moving substitutions far from variables as much as possible .",
    "consider @xmath577 ) x ' ] { \\rightarrow_{{{\\tt db } } } } x[x/ z[z / y][y/ x']]=t'$ ] , then @xmath578 ) x']$ ] does not reduce to @xmath579[z / y][y/ x']$ ] .",
    "similarly , for the other representative since @xmath580 z)[z / z']$ ] does not reduce to @xmath581 $ ] .",
    "in  @xcite we proved that @xmath1 enjoys psn in the cases where the equations @xmath582 are both oriented from left to right or from right to left .",
    "here we prove psn considering them as equivalences .",
    "surprisingly , the proof of this more general result is relatively more compact and concise than the one(s ) in  @xcite . indeed , even if we need to pass through an auxiliary calculus , such a calculus can be proved to enjoy psn without using labels , in contrast to our previous result and proof .",
    "let us explain our technique . even if there is no canonical representative form of an @xmath583-equivalence class which is stable by reduction ( _ cf .",
    "_  section  [ s : propp - intro ] ) , there is an even more natural way to reason about psn in the presence of the non - trivial equations @xmath584 which consists in projecting @xmath17 over a simpler equational calculus . since both the calculus and the projection are quite peculiar we introduce them gradually .",
    "a usual nave idea consists in projecting @xmath17 into the @xmath0-calculus by means of a function computing the complete unfolding of jumps .",
    "this gives the following diagram : @xmath585 this principle could be easily exploited in order to prove some properties of @xmath17 ( such as confluence ) , however , this projection erases divergent sub - terms , therefore it can not be used to prove psn .",
    "for instance , consider @xmath586 $ ] ( where @xmath587 is a non - terminating term ) , which is only @xmath1-weakly normalizing , whereas @xmath588 is in normal form .",
    "it is easy to show that projection of terms without void jumps preserves divergence and thus psn .",
    "unfortunately , erasures can not be postponed in @xmath17 .",
    "roughly speaking , the projection gives @xmath589 so that there are some steps @xmath590 s.t .",
    "it is not really a problem if such ( erased ) steps are finite , but here there may be infinite sequences of such ( erased ) steps .",
    "it is then quite natural to change the complete unfolding @xmath592 into a _ non - erasing _",
    "unfolding @xmath593 , which does not project void jumps :    @xmath594 ) & : = & \\left \\ { \\begin{array}{ll }                          { { { \\tt w}}{{\\tt j}}}(t ) { \\ { x/{{{\\tt w}}{{\\tt j}}}(u )   \\ } } & \\mbox { if } x \\in { { \\tt fv}(t ) } \\\\                          { { { \\tt w}}{{\\tt j}}}(t ) [ x/{{{\\tt w}}{{\\tt j}}}(u ) ] & \\mbox { if } x \\notin { { \\tt fv}(t ) } \\\\",
    "\\end{array } \\right .",
    "\\end{array }    \\ ] ]    note that there are still some erased steps , as for instance @xmath595{\\rightarrow_{{{\\tt d } } } } y = u$ ] , where @xmath596 , but intuition tells that @xmath593 preserves divergence , because diverging terms are no longer erased by the projection .",
    "note also that the image of the projection of the previous reduction step @xmath597 is no longer a reduction step in the @xmath0-calculus , so that we need to specify which are the rewriting rules and the equations of the image of the translation .    for didactive purpose",
    "let us assume that we are able to turn the image of the projection into a calculus  let us say @xmath18  such that @xmath593 projects @xmath17 into @xmath18 and preserves divergence .",
    "two important remarks are : since @xmath598 preserves divergence , then psn for @xmath18 implies psn for @xmath17 ; also , the @xmath18-calculus does not contain the equations @xmath584 because they were turned into equalities thanks to their side conditions .",
    "it is then reasonable to expect that proving psn for @xmath18 is easier than psn for @xmath17 .",
    "our proof technique can then be summarised as follows :    1 .",
    "introduce @xmath18 ; 2 .",
    "prove psn for @xmath18 ; 3 .",
    "show that @xmath598 preserves divergence from @xmath17 to @xmath18 ; 4 .   conclude psn for @xmath17 .",
    "section  [ s : lauxm ] presents the rewriting rules of @xmath18 , thus completing point 1 .",
    "section  [ s : iep - for - lauxm ] deals with point 2 and section [ s : projection ] with points 3 and 4 .",
    "we believe that the isolation of @xmath18 is an important contribution of this paper .",
    "indeed , it is easy to see that @xmath18 should contain at least the three following rewriting rules :    @xmath599{{\\tt l } } & \\mbox {   if }   x \\notin { { \\tt fv}(t)}\\\\ t[x / u ] & { \\mapsto_{{{\\tt w } } } } & t & \\mbox {   if }   x \\notin { { \\tt fv}(t ) } \\\\ \\end{array}\\ ] ]    more precisely ,    1 .",
    "the reduction step @xmath600=u$ ] projects into @xmath601 .",
    "2 .   the reduction step @xmath602=u$ ] should map to itself , _",
    "@xmath603= { { { \\tt w}}{{\\tt j}}}(u)$ ] .",
    "3 .   the reduction step @xmath604{\\rightarrow_{{{\\tt w}}}}z = u$ ] should map to itself , _",
    "@xmath605{\\rightarrow_{{{\\tt w } } } } z = { { { \\tt w}}{{\\tt j}}}(t)$ ] .    however , projecting on such a simple calculus still does not work .",
    "there are three phenomena we should take care of :    1 .",
    "* equations*. as we already mentioned @xmath606 and @xmath607 vanish , that is , @xmath608 implies @xmath609 .",
    "the graphical equivalence , instead , do not vanish , and must be added to the intermediate calculus , thus getting the reduction relation to be considered modulo @xmath13 .",
    "generalised erasure*. consider : @xmath610[y_1/v_1 ] [ y_2/v_2]{\\rightarrow_{{{\\tt w } } } } z[y_1/v_1 ] [ y_2/v_2]=u\\ ] ] where @xmath611 $ ] and @xmath612 [ y_2/v_2]$ ] .",
    "hence the @xmath314-rule @xmath613{\\rightarrow _ { } } t$ ] if @xmath9 must be generalised in order to replace the jump @xmath614 $ ] by many ( eventually none ) jumps containing subterms of @xmath57 .",
    "we shall then use the following ( hydra like ) rule : @xmath615 & \\mapsto_{{{\\tt h } } } & t[x_{1}/u_{1}]\\ldots [ x_n / u_n ] & \\forall i\\              ( x_i \\mbox { fresh } \\ \\&\\ u_i { \\triangleleft}u\\ \\&\\ { { \\tt fv}(u_i ) } \\subseteq { { \\tt fv}(u)}\\ \\&\\",
    "n \\geq 0)\\\\ \\end{array}\\ ] ] where @xmath616 means that @xmath617 is a subterm of @xmath153 .",
    "the condition upon free variables is necessary in order to avoid unwanted captures inducing degenerated behaviors .",
    "note that the particular case @xmath138 gives the @xmath314-rule .",
    "* unboxing * : an erasing step @xmath618 can cause jumps to _ move _ towards the _ root _ of the term",
    ". consider : @xmath619)[y / v]{\\rightarrow_{{{\\tt w } } } } ( z z)[y / v]=u\\ ] ] where @xmath620 $ ] and @xmath621=_\\alpha ( z z)[x / v]$ ] .",
    "hence , to project this step over @xmath18 we need a rule moving jumps towards the _ root _ of the term , which could have in principle the general form : @xmath622 \\ ! ] } { \\rightarrow _ { } } { c [ \\ ! [ t ] \\ ! ] } [ x / u]\\ ] ] this rule is the one that shall demand a more involved  but still reasonable  technical development .",
    "indeed , reduction that moves _ any _ jump towards the root modulo @xmath13 may cause non - termination : @xmath623{\\rightarrow_{}}(\\lam x.",
    "x)[y / z]{\\equiv_{{\\tt o}}}\\lam x. x[y / z]{\\rightarrow_{}}\\ldots\\ ] ] in order to avoid this problem we restrict the general form of the rule to a certain kind of contexts , those whose hole is contained in at least one _ box _ , _ i.e. _   the argument of an application or the argument of a jump .",
    "we now develop a psn proof for @xmath17 .",
    "section  [ s : lauxm ] formally defines the intermediate calculus @xmath18 , while section  [ s : iep - for - lauxm ] proves psn for the intermediate calculus @xmath18 and section  [ s : projection ] proves the properties of the projection which allows us to conclude psn for @xmath17 .",
    "let us conclude this section by observing that the generalised erasure and the unboxing rules are introduced to project the @xmath314-rule and not the equations @xmath624",
    ". said in other words , to prove psn of the simpler calculus @xmath1 ( resp .",
    "@xmath14 ) through the @xmath593 projection into @xmath625 ( resp .",
    "@xmath18 ) , one still needs the generalised erasure and the unboxing rules .",
    "that is why we believe that the technique developed here is really interesting by itself .",
    "the @xmath18-calculus can be understood as a memory calculus based on _ void _ jumps .",
    "it is given by a set of terms , written @xmath626 , generated by the following grammar , where only void jumps are allowed : @xmath627\\ ] ] the notation @xmath628 $ ] just means that the constant @xmath629 has no ( free ) occurrence in the term @xmath8 and @xmath630}}$ ] denotes a list of void jumps @xmath631\\ldots [ { \\_}/s_n]$ ] .    to define the operational semantics we need to define a particular kind of context .",
    "more precisely , if @xmath180 denotes a context then a * boxed context * @xmath98 is given by the following grammar : @xmath632 \\mid b t \\mid b[{\\_}/t ] \\mid \\lam y. b\\ ] ] we now consider the reduction rules and equations in figure  [ f : laux ] .",
    "the notation @xmath183 in the rules @xmath184 and @xmath2 means a list @xmath633\\ldots[{\\_}/u_k]$ ] of void jumps where @xmath186 ( so potentially @xmath187 ) .",
    "@xmath634{{\\tt l } } & \\mbox{if }   x \\notin { { \\tt fv}(t)}\\\\ t[{\\_}/u ] & { \\mapsto_{{{\\tt h } } } } & t[{\\_}/u_{1}]\\ldots [ { \\_}/u_n ] &               \\forall i\\ ( u_i { \\triangleleft}u\\ \\&\\ { { \\tt fv}(u_i ) } \\subseteq { { \\tt fv}(u)}\\ \\&\\ n \\geq 0)\\\\ { b [ \\ ! [ t[{\\_}/u ] ] \\ ! ] } &   { \\mapsto_{{{\\tt u } } } }    & { b [ \\ ! [ t ] \\ ! ] } [ { \\_}/u ] & b \\mbox { does not bind } u\\\\\\\\   t[{\\_}/s][{\\_}/v ] & \\sim_{{{\\tt cs } } } & t[{\\_}/v][{\\_}/s ]     \\\\     \\lam y. ( t [ { \\_}/s ] ) & { { \\sim}_{\\sigma_1 } } & ( \\lam y. t ) [ { \\_}/s ]   & \\mbox { if } y\\notin { { \\tt fv}(s ) } \\\\     t[{\\_}/s ] v & { { \\sim}_{\\sigma_2 } } & ( t v)[{\\_}/s ]   \\\\ \\end{array}\\ ] ]    note that the @xmath314-rule @xmath5 { \\rightarrow _ { } } t$ ] with @xmath134 of @xmath1 is a particular case of the @xmath635-rule .",
    "remark also that the unboxing rule of @xmath18 moves _ void _ jumps outside terms , which was forbidden in the equation @xmath636 of @xmath17 .",
    "however , this does not break psn because there is no _ boxing _ rule in @xmath18 .",
    "indeed , guerrini s counterexample uses both boxing and unboxing .",
    "we write @xmath637 iff @xmath638 , where @xmath639 is the reduction relation generated by the previous rewriting rules @xmath640 and @xmath13 is the equivalence relation defined in figure  [ f : eqo ] but restricted here to the @xmath625-syntax . as before , @xmath23 denotes the contextual closure of @xmath195 , for @xmath641 .",
    "we now show some properties of the new memory reduction system which are used in section  [ s : iep - for - lauxm ] to show psn .",
    "[ l : sous - terme - substitution ] let @xmath642 .",
    "if @xmath643 and @xmath644 , then @xmath645 .",
    "by induction on @xmath57 .",
    "[ l : newu - pass - to - sub ] let @xmath646 .    1 .",
    "if @xmath647 then @xmath648 .",
    "2 .   if @xmath649 then @xmath650",
    ".    straightforward .",
    "[ l : gen - new ] let @xmath651 .",
    "let @xmath652 .",
    "then @xmath653 { \\rightarrow^{*}_{{{\\tt h } } } }       t{\\overline{[{\\_}/s]}}[{\\_}/u]$ ] , where @xmath654 and @xmath655 and @xmath656 .",
    "straightforward , the case @xmath653 =        t{\\overline{[{\\_}/s]}}[{\\_}/u]$ ] happening in particular when @xmath657 and @xmath630}}$ ] is empty .",
    "[ l : out - subs ] let @xmath658 .",
    "if @xmath659 then @xmath660   \\ } } { \\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o } } } }   t { \\ { y / v   \\ } } [ { \\_}/u]$ ] .    by induction on @xmath8 .",
    "[ l : substituion - new - u - o ] let @xmath661 .",
    "if @xmath662 , @xmath663 and @xmath664 , then @xmath665 $ ] .",
    "by induction on the number of steps from @xmath405 to @xmath666 , and in the base case by induction on the reduction step from @xmath405 to @xmath666 .",
    "1 .   @xmath667 { \\rightarrow_{{{\\tt h } } } } u_0[{\\_}/v_1 ] \\ldots [ { \\_}/v_m ] = t_1 $ ] , where @xmath668 and @xmath669",
    ". then @xmath670 and @xmath671 and @xmath672 so that @xmath673 { \\ { x / v   \\ } }   = \\\\",
    "u_0[{\\_}/u_1 { \\ { x / v   \\ } } ]   { \\rightarrow^{*}_{{{\\tt h } } } } \\",
    "( lem.~\\ref{l : gen - new})\\              u_0[{\\_}/v_1 ] \\ldots [ { \\_}/v_m ] [ { \\_}/v]\\ ] ] 2 .",
    "@xmath674 , where @xmath675 .",
    "then , @xmath676         \\equiv_{\\sig_1 } ( \\lam y. u_1)[{\\_}/v]\\ ] ] 3 .",
    "@xmath677 , where @xmath675 .",
    "then , @xmath678 v_0    \\equiv_{\\sig_2 } ( u_1 v_0)[{\\_}/v]\\ ] ] 4 .",
    "@xmath679 { \\rightarrow _ { } } u_1[{\\_}/v_0 ] = t_1 $ ] , where @xmath675 .",
    "then , @xmath680 { \\ { x / v   \\ } }   =           u_0 { \\ { x / v   \\ } } [ { \\_}/v_0 ]   { \\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o}}}}\\ ( { i.h.})\\          u_1[{\\_}/v][{\\_}/v_0 ]   \\equiv_{{{\\tt cs } } }           u_1[{\\_}/v_0][{\\_}/v]\\ ] ] 5",
    ".   all the remaining cases are straightforward .",
    "[ c : stability - substitution ] let @xmath661 . if @xmath681 , @xmath663 and @xmath682 , then @xmath683 $ ] .    by induction on the number of @xmath635-steps in the reduction @xmath681 .",
    "note first that @xmath684 and @xmath13 do not loose free variables .    1 .",
    "if there is only one @xmath635-step , then the reduction is of the form @xmath685 .",
    "we have @xmath686 { \\rightarrow^*_{{{\\tt u}}/{{\\tt o } } } } t'[{\\_}/v]$ ] .",
    "if there are @xmath498 @xmath635-steps , then the reduction is of the form @xmath687 , with @xmath688 @xmath635-steps from @xmath689 to @xmath666 we consider two cases .",
    "+ if @xmath690 , then @xmath7 is lost in the subsequence @xmath691 .",
    "we thus have @xmath692 $ ] .",
    "+ if @xmath693 , then @xmath694\\ ( lem.~\\ref{l : substituion - new - u - o})\\ { \\rightarrow^*_{{{\\tt h}},{{\\tt u}}/{{\\tt o } } } } t_1[{\\_}/v]$ ] .",
    "the proof of psn for @xmath18 we are going to develop in this section is based on the * ie *  property ( _ cf .",
    "_  section  [ s : lj - psn ] ) and follows the main lines of that of theorem  [ t : ieg ] .",
    "indeed , given @xmath695 and @xmath696 we show that @xmath697 { \\overline{v}^{1}_{n } } \\in { \\mathcal{sn}_{{\\lam{{\\tt void}}}}}$ ] by using a measure on terms which decreases for every one - step @xmath18-reduct of @xmath57 . however , psn for @xmath18 is much more involved : first because of the nature of the reduction rules @xmath698 , second because of the equivalence @xmath13 .",
    "a first remark is that jumps in @xmath18 are all void so in particular they can not be duplicated . as a consequence ,",
    "there is no need at first sight to generalise the * ie *  property to terms of the form @xmath699^{1}_{m } } { \\overline{v}^{1}_{n}}$ ] as we did before ( theorem  [ t : ieg ] ) .",
    "however , there are now new ways of getting jumps _ on the surface _ of the term . indeed , if @xmath700 $ ] and @xmath701 one has @xmath702 { \\overline{v}^{1}_{n } } { \\equiv_{{\\tt o}}}(\\lam y. t')[{\\_}/v][{\\_}/u ] { \\overline{v}^{1}_{n}}$ ] things are even more complicated since jumps can also be moved between the arguments @xmath703 as in : @xmath704 ) v_1)[{\\_}/u ] { \\overline{v}^{2}_{n}}\\ ] ] the opposite phenomenon can happen too , _ i.e. _  the jump @xmath705 $ ] can enter inside @xmath8 , for instance : @xmath706[{\\_}/u ] ) { \\overline{v}^{1}_{n}}\\ ] ] the main point is that the measure we shall use to develop the proof of the * ie *  property needs to be stable by the equivalence @xmath13 , _",
    "i.e. _   if @xmath707 , then @xmath57 and @xmath52 must have this same measure .    in order to handle this phenomenon we are going to split @xmath57 in two parts : the multiset @xmath708 of * jumps * of @xmath57 which _ are _ or _ can _ get to the * surface * , and the * trunk * @xmath709 , _ i.e. _   the term obtained from @xmath57 by removing all the jumps in @xmath708 .",
    "this _ splitting _ of the term is then used to generalise the statement of the * ie *  as follows :    if @xmath710 and @xmath711 for every @xmath705\\in { \\mathbb{sj}_{}(s)}$ ] then @xmath712 .",
    "an intuition behind the scheme of this proof is that the term @xmath709 and the jumps in @xmath708 are dynamically independent , in the sense that any reduction of @xmath57 can be seen as an interleaving of a reduction ( eventually empty ) of @xmath709 and reductions ( eventually empty ) of elements of @xmath708 .",
    "indeed , the void jumps in @xmath708 _ can not be affected _ by a reduction of @xmath709 , since none of their free variables is bound in @xmath57 , and _ can not affect _ a reduction of @xmath709 since they are void .",
    "the unboxing rule slightly complicates things , but morally that is why the new generalised form of the * ie *  property holds .    the attentive reader may wonder why we can not handle the equivalence @xmath13 by using a strong bisimulation argument , as in the case of @xmath14 ( _ cf . _  theorem  [ thm : eqo - conf - psn ] ) .",
    "unfortunately , @xmath13 is not a strong bisimulation for @xmath625 as the following example shows : @xmath713 v ]              & { \\rightarrow_{{{\\tt h } } } }     & x[{\\_}/t[{\\_}/x ] ]    \\\\    { \\equiv_{{\\tt o } } } &        &    { \\equiv_{{\\tt o}}}\\\\    x[{\\_}/(t v)[{\\_}/x ] ]                &    { \\rightarrow_{{{\\tt h } } } } & ?    \\\\",
    "\\end{array}\\ ] ]    before starting with the technical details of the proof let us add two more important remarks .",
    "first , we have just used @xmath709 and @xmath708 for didactic purposes , the actual definitions are parametrised with respect to a set of variables ( those which can be captured in the context containing @xmath57 ) . moreover , in order to simplify the proofs we will not work directly with @xmath708 : we are going to define a parametrised predicate @xmath714 , which is true when all the jumps in @xmath708 are in @xmath715 , and a parametrised measure @xmath716 , built out from the elements of @xmath708 .",
    "second , the unboxing rule makes some inductive reasonings non - trivial , so we isolate them in an intermediate lemma ( lemma .",
    "[ l : lauxmes - red - unb2 ] ) .    given @xmath717 and",
    "a set of variables @xmath718 , the trunk @xmath719 is given by the following inductive definition : @xmath720 ) } & : = & { \\mathbb{t}_{\\gam}(t ) }           & \\mbox { if } { { \\tt fv}(u ) } \\cap \\gam = { \\emptyset}\\\\     { \\mathbb{t}_{\\gam}(t[{\\_}/u ] ) } & : = & { \\mathbb{t}_{\\gam}(t)}[{\\_}/u ] & \\mbox { otherwise } \\\\         \\end{array}\\ ] ] note that @xmath721 and @xmath722 implies @xmath723 .",
    "next , we define a predicate on @xmath626 which is true when all surface jumps contain terminating terms : @xmath724 ) } & : = &   { \\mathbb{snsj}_{\\gam}(t)}\\ \\&\\",
    "u\\in { \\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o } } } } } }            & \\mbox { if } { { \\tt fv}(u ) } \\cap \\gam = { \\emptyset}\\\\      { \\mathbb{snsj}_{\\gam}(t[{\\_}/u ] ) } & : = &   { \\mathbb{snsj}_{\\gam}(t ) } & \\mbox { otherwise } \\\\      \\end{array}\\ ] ] observe that @xmath725 implies in particular @xmath714 for any set @xmath718 .    for any term @xmath726 s.t .",
    "@xmath714 we define the following multiset measure : @xmath727 ) } & : = & { \\mathbb{msj}_{\\gam}(t ) } \\sqcup               { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(u ) , |u| \\rangle } ] }   & \\mbox { if } { { \\tt fv}(u ) } \\cap \\gam = { \\emptyset}\\\\     { \\mathbb{msj}_{\\gam}(t[{\\_}/u ] ) } & : = & { \\mathbb{msj}_{\\gam}(t ) } \\sqcup       { \\mathbb{msj}_{\\gam}(u ) } & \\mbox { otherwise } \\\\         \\end{array}\\ ] ] now , we can reformulate a generalised statement for the * ie *  property on * v*oid jumps as follows :    ( * vie * ) for all @xmath728 , if @xmath729 and @xmath730 , then @xmath731 .    some lemmas about basic properties of @xmath732 , @xmath733 and @xmath734",
    "follow .",
    "[ l : surf - snsudd - no - var ] let @xmath728 and @xmath134",
    ". then @xmath735 and @xmath736 iff @xmath733 .",
    "straightforward .",
    "[ l : surf - sub ] let @xmath737 s.t . @xmath738 . then ,    1 .",
    "[ p : surf - sub - one]@xmath739 .",
    "[ p : surf - sub - two]if @xmath740 then @xmath741 .    1",
    ".   straightforward induction on @xmath8 .",
    "2 .   by induction on @xmath8 .",
    "1 .   @xmath271",
    ". then @xmath742 .",
    "2 .   @xmath743",
    ". then @xmath744 .",
    "3 .   the cases @xmath745 and @xmath746 are straightforward using the i.h .",
    "4 .   @xmath747 $ ] .",
    "let us analyse one particular case in detail , the other ones being similar can be proved by application of the definitions and the i.h .",
    "let us suppose @xmath748 , @xmath749 and @xmath750 .",
    "then + @xmath751 { \\ { x / u   \\ } } = { \\mathbb{t}_{\\gam\\cup { \\ { x \\}}}(v ) } { \\ { x / u   \\ } } [ { \\_}/w { \\ { x / u   \\ } } ] \\mbox { and}$ ] + @xmath752)}={\\mathbb{t}_{\\gam}(v { \\ { x / u   \\ } } ) } $ ] .",
    "the i.h .  gives + @xmath753 and so we conclude with @xmath754{\\rightarrow^{*}_{{{\\tt h}}}}{\\mathbb{t}_{\\gam}(v { \\ { x / u   \\ } } ) } [ { \\_}/w { \\ { x / u   \\ } } ] { \\rightarrow_{{{\\tt h}}}}{\\mathbb{t}_{\\gam}(v { \\ { x / u   \\ } } ) } \\eqno{\\qed}\\ ] ]    [ l : surf - pred - sub ] let @xmath755 and @xmath756 . if @xmath757 , @xmath758 and @xmath759 then @xmath760 .    by induction on @xmath8 using lemma  [ l : surf - snsudd - no - var ] .",
    "[ l : mes - eqo ] let @xmath761 s.t . @xmath762 and @xmath763 . if @xmath764 then @xmath765 and @xmath766 and @xmath767 .",
    "thus in particular the equality @xmath768 holds .",
    "by induction on @xmath764 .    the next lemma deals with the unboxing rule , which requires a complex induction .",
    "[ l : lauxmes - red - unb2 ] let @xmath761 s.t . @xmath762 and @xmath763 . if @xmath769 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } { b [ \\ ! [ s ] \\ ! ] } [ { \\_}/u]= t_1 $ ] , where @xmath98 does not bind @xmath153 , then @xmath765 and :    1 .   if @xmath770 then 1 .",
    "either @xmath771 and @xmath772 , 2 .   or",
    "@xmath773 ; 2 .   if @xmath774 then @xmath775 .    by induction on @xmath98 .    1 .",
    "base cases : 1 .",
    "@xmath776 : then @xmath777 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } ( v { c [ \\ ! [ s ] \\ ! ] } ) [ { \\_}/u ] = t_1 $ ] . hence @xmath778 \\ ! ] } $ ] and @xmath763 iff @xmath779 .",
    "there are two cases : 1 .   : then @xmath780 \\ ! ] } = { \\mathbb{t}_{\\gam}(t_1)}$ ] .",
    "to show @xmath765 we need @xmath781 .",
    "the first point is equivalent to @xmath763 , which holds by hypothesis , the second holds since @xmath153 is a subterm of @xmath782 .",
    "2 .   : then @xmath783 \\ ! ] } ) [ { \\_}/u]={\\mathbb{t}_{\\gam}(t_1)}$ ] . to show @xmath765 we need @xmath779 , which holds by hypothesis .",
    "2 .   @xmath784 $ ] : there are four cases : 1 .",
    "_ @xmath785 \\ ! ] } ) } = { \\emptyset}$ ] _ : then @xmath786 .",
    "also , @xmath763 so that @xmath787 \\ ! ] } \\in{\\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] . to show @xmath765 we need @xmath788 \\ ! ]",
    "} \\in{\\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}\\ \\&\\ u\\in{\\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] , which clearly follows from @xmath789 \\ ! ] } \\in{\\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] .",
    "we still need to show that @xmath790 which holds because @xmath791 is just @xmath792 where the multiset @xmath793 \\ ! ] } ) , |{c [ \\ ! [ s[{\\_}/u ] ] \\ ! ] } | \\rangle } ] }      \\in { \\mathbb{msj}_{\\gam}(t_0)}$ ] is replaced by the strictly smaller multiset @xmath794 \\ ! ] } ) , |{c [ \\ ! [ s ] \\ ! ] } | \\rangle } ,        { \\langle \\eta_{{\\lam{{\\tt void}}}}(u ) , |u| \\rangle } ] } $ ] .",
    "@xmath785 \\ ! ] } ) } \\neq{\\emptyset}$ ] _ : then @xmath795 \\ ! ] } ] { \\rightarrow_{{{\\tt h}}}}{\\mathbb{t}_{\\gam}(v)}[{\\_}/{c [ \\ ! [ s ] \\ ! ] } ] = { \\mathbb{t}_{\\gam}(t_1)}\\ ] ] also , @xmath763 implies @xmath779 . to show @xmath765 we need @xmath796 , which then holds by hypothesis and because @xmath153 is a subterm of @xmath782 .",
    "@xmath797 \\ ! ] } ) } = { \\emptyset}$ ] _ : then @xmath795 \\ ! ] } ] { \\rightarrow_{{{\\tt u}}}}{\\mathbb{t}_{\\gam}(v)}[{\\_}/{c [ \\ ! [ s ] \\ ! ] } ] [ { \\_}/u]{\\rightarrow_{{{\\tt h}}}}{\\mathbb{t}_{\\gam}(v)}[{\\_}/u]={\\mathbb{t}_{\\gam}(t_1)}\\ ] ] + also , @xmath763 implies @xmath779 . to show @xmath765 we need @xmath798 \\ ! ] } \\in{\\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] , which holds by the hypothesis and the fact that @xmath788 \\ ! ] } $ ] is a subterm of a @xmath635-reduct of @xmath782 .",
    "@xmath797 \\ ! ] } ) } \\neq{\\emptyset}$ ] _ : then @xmath795 \\ ! ] } ] { \\rightarrow_{{{\\tt u}}}}{\\mathbb{t}_{\\gam}(v)}[{\\_}/{c [ \\ ! [ s ] \\ ! ] } ] [ { \\_}/u]={\\mathbb{t}_{\\gam}(t_1)}\\ ] ] + also @xmath763 implies @xmath779 , which is equivalent to @xmath765 .",
    "inductive cases : 1 .   @xmath799 $ ] : we have @xmath800 \\ ! ] } [ { \\_}/v ] { \\rightarrow_{{{\\tt u } } } } { b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/v][{\\_}/u ] = t_1 $ ] .",
    "also @xmath801 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } { b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/u]$ ] and the hypothesis @xmath782 and @xmath763 imply in particular @xmath802 \\ ! ] } ) } \\in { \\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] and @xmath803 \\ ! ] } ) } $ ] . the i.h .",
    "gives @xmath804 \\ ! ] } [ { \\_}/u])}$ ] and we distinguish several cases : 1 .   _",
    "@xmath805 _ : the hypothesis @xmath763 implies in particular @xmath806 and the i.h .",
    "@xmath804 \\ ! ] } [ { \\_}/u])}$ ] gives @xmath804 \\ ! ] } ) } \\ \\&\\ u \\in { \\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] , so we conclude also @xmath765 .",
    "we now consider two cases : a.   if @xmath807 \\ ! ] } ) } = { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/u])}$ ] and @xmath808 \\ ! ] } ) }   { \\sqsupset}{\\mathbb{msj}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } \\sqcup                    { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(u ) , |u| \\rangle } ] } $ ] , then @xmath809 and @xmath810 \\ ! ] } ) }   \\sqcup                    { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(v ) , |v| \\rangle } ] } { \\sqsupset}{\\mathbb{msj}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } \\sqcup                    { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(u ) , |u| \\rangle } ] } \\sqcup                    { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(v ) , |v| \\rangle } ] } = { \\mathbb{msj}_{\\gam}(t_1)}$ ] . b.   if @xmath807 \\ ! ] } ) } { \\rightarrow_{{{\\tt h } } } }            { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/u])}=u_1 $ ] , then @xmath811 .",
    "@xmath812 _ : the i.h .",
    "@xmath804 \\ ! ] } [ { \\_}/u])}$ ] gives @xmath804 \\ ! ] } ) } \\ \\&\\ u \\in { \\mathcal{sn}_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}}$ ] , so we conclude also @xmath765 .",
    "we now consider two cases : a.   if @xmath813 \\ ! ] } ) } = { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/u])}$ ] and @xmath808 \\ ! ] } ) }   { \\sqsupset}{\\mathbb{msj}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } \\sqcup                    { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(u ) , |u| \\rangle } ] } $ ] , then @xmath814 =                 { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } [ { \\_}/v ] =                 { \\mathbb{t}_{\\gam}(t_1)}$ ] and @xmath810 \\ ! ] } ) }   \\sqcup                    { \\mathbb{msj}_{\\gam}(v ) } { \\sqsupset}{\\mathbb{msj}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } \\sqcup                    { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(u ) , |u| \\rangle } ] } \\sqcup                    { \\mathbb{msj}_{\\gam}(v ) }   = { \\mathbb{msj}_{\\gam}(t_1)}$ ] . b.   if @xmath807 \\ ! ] } ) } { \\rightarrow_{{{\\tt h } } } }            { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/u])}=u_1 $ ] , then @xmath815 { \\rightarrow_{{{\\tt h } } } }            u_1[{\\_}/v ] = { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } [ { \\_}/v ] =             { \\mathbb{t}_{\\gam}(t_1)}\\ ] ] 3 .   _",
    "@xmath816 _ : then the i.h .",
    "gives @xmath807 \\ ! ] } ) }      { \\rightarrow^{+}_{{{{\\tt h}},{{\\tt u}}/{{\\tt o } } } } }      { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } [ { \\_}/u])}=u_1 $ ] .",
    "we consider the following cases .",
    "a.   _ @xmath817 _ : then + @xmath818 \\ ! ] } ) } [ { \\_}/u ] = { \\mathbb{t}_{\\gam}(t_1)}$ ] + also @xmath763 implies @xmath806 and the i.h .",
    "@xmath804 \\ ! ] } [ { \\_}/u])}$ ] implies @xmath804 \\ ! ] } ) } $ ] , we thus conclude @xmath765 .",
    "b.   _ @xmath819 _ : then + @xmath820              { \\rightarrow^{+}_{{{{\\tt h}},{{\\tt u}}/{{\\tt o } } } } }     u_1[{\\_}/v ] & =     & { \\mathbb{t}_{\\gam}({b ' [ \\ ! [ s ] \\ ! ] } ) } [ { \\_}/u][{\\_}/v ]           & { \\equiv_{{\\tt o}}}\\\\           & & & &           { \\mathbb{t}_{\\gam}({b ' [ \\ !",
    "[ s ] \\ ! ] } ) } [ { \\_}/v][{\\_}/u ] & = & { \\mathbb{t}_{\\gam}(t_1 ) }            \\end{array}$ ] + also , the i.h .  @xmath804 \\ ! ] } [ { \\_}/u])}$ ] implies @xmath804 \\ ! ] } ) } $ ] , we therefore conclude @xmath765 .",
    "the cases @xmath821 and @xmath822 are similar to the previous ones .",
    "the following lemma states that the measure we use for proving * vie *  for @xmath18 decreases with every rewriting step .",
    "[ l : lauxmes - red ] let @xmath761 s.t . @xmath762 and @xmath763 . if @xmath823 then @xmath765 and    1 .",
    "either @xmath824 or 2 .",
    "@xmath771 and @xmath790 .    by induction on @xmath823 .    1 .",
    "base cases : 1 .   if @xmath825{{\\tt l}}= t_1 $ ] , where @xmath826 .",
    "+ let @xmath827\\ldots[{\\_}/v_k]$ ] , @xmath828 and @xmath829 .",
    "define @xmath830 the sublist of @xmath183 containing only the elements in @xmath831 .",
    "we have 1 .   @xmath763 iff @xmath832 and @xmath833 for every @xmath834 .",
    "2 .   @xmath835 .",
    "+ there are two cases : 1 .   _",
    "@xmath836_. we have @xmath837{{\\tt l}}_q$ ]",
    ". then @xmath838 .",
    "moreover , @xmath765 iff @xmath714 and @xmath833 for every @xmath834 , which holds by the hypothesis @xmath763 .",
    "@xmath750_. we have @xmath839",
    ". then @xmath840{{\\tt l}}_q{\\rightarrow_{{{\\tt h } } } }    { \\mathbb{t}_{\\gam}(s)}{{\\tt l}}_q={\\mathbb{t}_{\\gam}(t_1)}$ ] .",
    "moreover , @xmath765 iff @xmath714 and @xmath711 and @xmath833 for every @xmath841 .",
    "the first and third parts follow from the hypothesis @xmath763 while the second one follows from the hypothesis @xmath782 .",
    "@xmath842 , where @xmath721 .",
    "+ let @xmath183 , @xmath831 , @xmath843 and @xmath844 be as in the previous case .",
    "we have 1 .   @xmath763 iff @xmath845 and @xmath833 for every @xmath834 .",
    "2 .   @xmath846 with @xmath847 .",
    "+ then @xmath848 .",
    "thus in particular @xmath849 .",
    "+ since @xmath153 is a subterm of @xmath850 , then @xmath711 and so @xmath758 .",
    "then @xmath765 iff @xmath851 and @xmath833 for every @xmath834 .",
    "the first part holds by lemma  [ l : surf - pred - sub ] , the second one from the hypothesis @xmath763 .",
    "3 .   @xmath852 { \\rightarrow_{{{\\tt h } } } }   u[{\\_}/v_1 ] \\ldots [ { \\_}/v_k]= t_1 $ ] , where @xmath33 , @xmath853 for all @xmath854 and @xmath855 .",
    "there are two cases : 1 .   _",
    "@xmath856 _ : we have that @xmath763 implies @xmath765 .",
    "then @xmath857 , moreover the multiset @xmath858 } $ ] of @xmath792 is replaced by the following multiset of @xmath791 : @xmath859 } $ ] . since @xmath860 and @xmath861",
    "we thus conclude @xmath790 .",
    "@xmath819 _ : let @xmath831 and @xmath843 as in de @xmath184-case .",
    "then @xmath765 iff the terms in @xmath843 are @xmath715 and @xmath758 holds : the former requirement holds because @xmath862 $ ] and so @xmath863 , the latter because @xmath763 iff @xmath758 .",
    "last , @xmath864 , where @xmath830 is the list of substitutions associated to the elements in @xmath831 , then @xmath865{\\rightarrow_{{{\\tt h}}}}{\\mathbb{t}_{\\gam}(u)}{{\\tt l}}_q={\\mathbb{t}_{\\gam}(t_1)}\\ ] ] 4 .",
    "@xmath866 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } { b [ \\ ! [ s ] \\ ! ] } [ { \\_}/u ] = t_1 $ ] .",
    "this case holds by lemma  [ l : lauxmes - red - unb2 ] .",
    "inductive cases : 1 .",
    "@xmath867 { \\rightarrow_{{\\lam{{\\tt void } } } } } u[{\\_}/v ' ] = t_1 $ ] where @xmath868 .",
    "we consider three cases . 1 .   _",
    "_ : we have @xmath870 .",
    "also @xmath763 implies @xmath806 so that @xmath871 and thus @xmath765 .",
    "finally , @xmath872 } & { \\sqsupset}\\\\       & { \\mathbb{msj}_{\\gam } ( u ) } \\sqcup               { [ { \\langle \\eta_{{\\lam { { { \\tt void}}/ { { \\tt o}}}}}(v ' ) , |v'| \\rangle } ] }   & =      { \\mathbb{msj}_{\\gam}(t_1 ) }      \\end{array}\\ ] ] 2 .   _",
    "@xmath873 _ : we have @xmath874 .",
    "also @xmath862 $ ] and @xmath875 $ ] , thus @xmath824 .",
    "@xmath876 _ : we have that @xmath877 implies @xmath863 , so that @xmath878 and @xmath765 .",
    "+ then @xmath879      { \\rightarrow_{{{\\tt h } } } } { \\mathbb{t}_{\\gam } ( u)}= { \\mathbb{t}_{\\gam}(t_1)}$ ] .",
    "2 .   all the other cases are straightforward .",
    "[ t : ie - laux ] let @xmath728 s.t .",
    "@xmath729 and @xmath730 , then @xmath731 .",
    "we proceed by induction on the measure @xmath880 . to show @xmath731 it is sufficient to show @xmath881 for every @xmath18-reduct of @xmath8 .",
    "take any of such reducts @xmath70 .",
    "then lemmas  [ l : mes - eqo ] and  [ l : lauxmes - red ] guarantee @xmath882 and @xmath883 .",
    "moreover , @xmath13 preserves @xmath884 and @xmath885 strictly decreases @xmath884 .",
    "we thus apply the i.h .  to conclude .",
    "the following is a consequence of the previous theorem : let @xmath886-terms and @xmath887{\\overline{v}^{1}_{n}}$ ] . if @xmath888 and @xmath889 holds , _",
    "@xmath890 , then @xmath697{\\overline{v}^{1}_{n } } \\in { \\mathcal{sn}_{{\\lam{{\\tt void}}}}}$ ] .",
    "hence :    [ t : ielaux ] the @xmath18-calculus enjoys the * ie *  property .",
    "[ c : psn - lauxm ] the @xmath18-calculus enjoys psn , _",
    "i.e. _  if @xmath453 , then @xmath731 .    by theorem  [ t : ie - implies - psn ] it is sufficient to show * f0 * , * f1 * and * f2*. the first two properties are straightforward . to show @xmath891",
    "assume @xmath892 and @xmath893 , both are @xmath0-terms .",
    "then in particular @xmath894 .",
    "we show that @xmath895 by induction on @xmath896 . for that , it is sufficient to show that every @xmath625-reduct of @xmath8 is in @xmath897 .",
    "if the @xmath625-reduct of @xmath8 is internal we conclude by the i.h .  if @xmath898 with @xmath899 , then @xmath900 by hypothesis .",
    "if @xmath901 { \\overline{t}^{1}_{n}}=t'$ ] , then @xmath900 by the * ie *  property ( corollary  [ t : ielaux ] ) . there is no other possible @xmath625-reduct of @xmath8 which is a @xmath0-term and has no jumps .      in order to relate the @xmath17 and the @xmath18 calculi we define a projection function from @xmath1-terms to @xmath625-terms : @xmath902 ) & : = & \\left \\ { \\begin{array}{ll }                          { { { { \\tt w}}{{\\tt j}}}}(t ) { \\ { x/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } } & \\mbox { if } x \\in { { \\tt fv}(t ) } \\\\                          { { { { \\tt w}}{{\\tt j}}}}(t ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] & \\mbox { if } x \\notin { { \\tt fv}(t ) } \\\\                          \\end{array } \\right . \\\\",
    "\\end{array}\\ ] ] notice that @xmath903 . also , @xmath904 if @xmath220 .",
    "we now state some basic static properties of @xmath905 .",
    "[ l : basic - properties - proj ] let @xmath906 .",
    "then , @xmath907 .    by induction on @xmath8 .",
    "[ l : projection ] let @xmath280 .",
    "then ,    1 .   [ ppp - i ] @xmath908 implies @xmath909 .",
    "2 .   [ ppp - iii ] @xmath910 implies @xmath911 .",
    "[ ppp - iv ] @xmath493 implies @xmath912 .",
    "4 .   [ ppp - v ] @xmath913 implies @xmath914 .    1 .",
    "base cases : 1 .",
    "@xmath915{{\\tt l}}= t_1 $ ] .",
    "+ let @xmath916 ^ 1_m$ ] ( resp .",
    "@xmath917 ) be the sequence of jumps ( resp .",
    "the meta - level substitution ) resulting from the projection of @xmath405 , _",
    "i.e. _  @xmath918 .",
    "if @xmath919 , then : @xmath920 ^ 1_m   { { { { \\tt w}}{{\\tt j}}}}(u ) & { \\rightarrow_{\\beta}}\\\\ & & { { { { \\tt w}}{{\\tt j}}}}(t)\\rho { \\ { x/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } }    [ { \\_}/ { { { { \\tt w}}{{\\tt j}}}}(v_i ) \\rho]^1_m    & = & \\\\ & & { { { { \\tt w}}{{\\tt j}}}}(t ) { \\ { x/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } } \\rho    [ { \\_}/ { { { { \\tt w}}{{\\tt j}}}}(v_i ) \\rho]^1_m   & = { { { { \\tt w}}{{\\tt j}}}}(t_1 )    \\end{array}\\ ] ] + if @xmath134 , then : @xmath921 ^ 1_m { { { { \\tt w}}{{\\tt j}}}}(u ) & { \\rightarrow_{{{\\tt db}}}}\\\\ & & { { { { \\tt w}}{{\\tt j}}}}(t)\\rho [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] [ { \\_}/ { { { { \\tt w}}{{\\tt j}}}}(v_i ) \\rho]^1_m & = & \\\\               & & { { { { \\tt w}}{{\\tt j}}}}(t)[{\\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] [ { \\_}/ { { { { \\tt w}}{{\\tt j}}}}(v_i ) \\rho]^1_m   \\rho & = &               { { { { \\tt w}}{{\\tt j}}}}(t_1 ) \\end{array}\\ ] ] 2 .   @xmath922   { \\rightarrow_{{{\\tt w } } } }   t= t_1 $ ] where @xmath286 . then @xmath923 ) = { { { { \\tt w}}{{\\tt j}}}}(t)[{\\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] { \\rightarrow_{{{\\tt h } } } } { { { { \\tt w}}{{\\tt j}}}}(t)$ ] .",
    "@xmath285   { \\rightarrow_{{{\\tt d } } } } t { \\ { x / u   \\ } } = t_1 $ ] where @xmath924 . then @xmath923 )",
    "= { { { { \\tt w}}{{\\tt j}}}}(t ) { \\ { x/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } }   = _ { lem.~\\ref{l : basic - properties - proj } } { { { { \\tt w}}{{\\tt j}}}}(t { \\ { x / u   \\ } } ) $ ] .",
    "4 .   @xmath922   { \\rightarrow_{{{\\tt c } } } }   t_{[y]_x}[x / u][y / u]= t_1 $ ] where @xmath211",
    ". then @xmath923 ) = { { { { \\tt w}}{{\\tt j}}}}(t ) { \\ { x/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } } =                       { { { { \\tt w}}{{\\tt j}}}}(t_{[y]_x } ) { \\ { y/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } } { \\ { x/{{{{\\tt w}}{{\\tt j}}}}(u )   \\ } }   = _ { lem.~\\ref{l : basic - properties - proj } }                       { { { { \\tt w}}{{\\tt j}}}}(t_{[y]_x}[x / u][y / u])$ ] . 5 .",
    "@xmath922[y / v ]   \\equiv_{{{\\tt cs } } }    t[y / v][x / u]= t_1 $ ] where @xmath925 .",
    "there are two cases : + if @xmath919 or @xmath659 , then we obtain @xmath914 .",
    "+ if @xmath134 and @xmath926 , then @xmath927[{\\_}/{{{{\\tt w}}{{\\tt j}}}}(v ) ] \\equiv_{{{\\tt cs } } }                  { { { { \\tt w}}{{\\tt j}}}}(t)[{\\_}/{{{{\\tt w}}{{\\tt j}}}}(v)][{\\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] = { { { { \\tt w}}{{\\tt j}}}}(t_1)\\ ] ] 6 .   @xmath928   \\equiv_{\\sig_1 }   \\lam y.t[x / u]= t_1 $ ] where @xmath929 .",
    "there are two cases : + if @xmath930 , then @xmath931 .",
    "+ if @xmath932 , then @xmath933 \\equiv_{\\sig }                       \\lam y. { { { { \\tt w}}{{\\tt j}}}}(t)[{\\_}/{{{{\\tt",
    "w}}{{\\tt j}}}}(u ) ] =                      { { { { \\tt w}}{{\\tt j}}}}(t_1)$ ] . 7 .",
    "@xmath934   \\equiv_{\\sig_2 }   t[x / u]v= t_1 $ ] where @xmath935 .",
    "+ there are two cases : + if @xmath919 , then @xmath936 .",
    "+ if @xmath134 , then @xmath937   \\equiv_{\\sig }                      { { { { \\tt w}}{{\\tt j}}}}(t)[{\\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] { { { { \\tt w}}{{\\tt j}}}}(v )   =                      { { { { \\tt w}}{{\\tt j}}}}(t_1)$ ] .",
    "@xmath938 . then trivially @xmath914 .",
    "2 .   the inductive cases : 1 .",
    "@xmath939 { \\rightarrow _ { } } ( \\mbox{resp . }",
    "\\equiv)\\ u'[x / v ] = t_1 $ ] , where @xmath940 . if @xmath941 or @xmath942 then the property is straightforward by the i.h .",
    "so let us suppose @xmath943 ( so that the reduction step is necessarily a @xmath314-step ) .",
    "we have @xmath944 . but @xmath943 implies @xmath945 so that in particular we have @xmath946",
    ". then @xmath947 = { { { { \\tt w}}{{\\tt j}}}}(t_1)$ ] holds by corollary  [ c : stability - substitution ] .",
    "2 .   all the other cases are straightforward .    here",
    "are some interesting examples : @xmath948[x / u ] & { \\rightarrow_{{{\\tt w } } } } & f[x / u ] &      f[{\\_}/u ]   & =   &   f[{\\_}/u ] \\\\     f[y / x z][x / u][z / v ] & { \\rightarrow_{{{\\tt w } } } } & f[x / u][z / v ] &      f[{\\_}/uv ]   & { \\rightarrow_{{{\\tt h } } } } & f[{\\_}/u][{\\_}/v ] \\\\     f[y / xx][x / u ] &   { \\rightarrow_{{{\\tt w } } } } & f[x / u ] &      f[{\\_}/uu ]   &   { \\rightarrow^{+}_{{{\\tt h } } } } & f[{\\_}/u ] \\\\     ( f[w / f[y / x z ] ] g)[x / u ] [ z / v ] & { \\rightarrow_{{{\\tt w } } } } &         ( f[w / f ] g ) [ x / u ] [ z / v ] &      ( f[{\\_}/f[{\\_}/uv ] ] g )   & { \\rightarrow_{{{\\tt h } } , { { \\tt u } } } } & ( f[{\\_}/f ] g)[{\\_}/u][{\\_}/v ] \\\\     \\hline     \\end{array}\\ ] ]    the previous property allows us to conclude with one of the main results of this paper .",
    "[ t : psn - ldisf ] the @xmath17-calculus enjoys psn , _",
    "i.e. _  if @xmath453 , then @xmath949 .",
    "we apply theorem  [ t : equational - abstract ] , where @xmath950 , @xmath951 , @xmath952 , @xmath74 is @xmath953 , @xmath96 is @xmath954 and @xmath955 .",
    "property * ( p0 ) * holds by lemma  [ l : projection]:[ppp - iv]-[ppp - v ] , property * ( p1 ) * holds by lemma  [ l : projection]:[ppp - iii ] , property * ( p2 ) * holds by lemma  [ l : projection]:[ppp - i ] and property * ( p3 ) * holds by corollary  [ l : dis - f ] .",
    "now , take @xmath956 so that corollary  [ c : psn - lauxm ] gives @xmath731 . since @xmath904 , then @xmath957 by application of the theorem .",
    "in this section we show how the strong result obtained in section  [ s : projection ] can be used to prove psn for different variants of the @xmath17-calculus .",
    "we show that the reduction relation @xmath959 of @xmath18 can be added to @xmath17 without breaking psn .",
    "the main point of this extension is to show that it is safe to consider unboxing ( for void jumps ) together with the box equations ( for non - void jumps ) . for that",
    ", we first extend the rule @xmath959 to act on the whole set @xmath127 and not only on @xmath626 ( but they still concern void substitutions only ) .",
    "boxed contexts are extended to non - void jumps as expected , namely : @xmath960 \\mid b t \\mid b[x / t ] \\mid \\lam y. b\\ ] ] then the rule is given by : @xmath961 \\ ! ] }    { \\mapsto_{{{\\tt u } } } }    { b [ \\ ! [ t ] \\ ! ] } [ x / u ] , { \\hspace*{0.5cm}}\\mbox{where } b \\mbox { does not bind } u\\ \\&\\ x\\notin{{\\tt fv}(t)}\\ ] ] indeed , the @xmath905 function maps @xmath959-reduction steps of @xmath962 into @xmath963-reduction steps of @xmath18 , as the next lemma shows .",
    "[ l : projectionext ] let @xmath280 .",
    "then , @xmath964 implies @xmath965 .    by induction on the reduction relations .",
    "1 .   @xmath966 \\ ! ] } { \\rightarrow_{{{\\tt u } } } }    { b [ \\ ! [ t ] \\ ! ] } [ x / u]= t_1 $ ] where @xmath98 does not bind @xmath153 and @xmath134 .",
    "we show a stronger property , namely : + if @xmath967 \\ ! ] } { \\rightarrow _ { } }    { c [ \\ ! [ t ] \\ ! ] } [ x / u]= t_1 $ ] where @xmath180 does not bind @xmath153 and @xmath134 , then @xmath965 .",
    "then the property we want show is just a particular case of the stronger property . by @xmath135-conversion",
    "we assume w.l.g . that @xmath7 is not even free in @xmath178 \\ ! ] } $ ] .",
    "+ we reason by induction on @xmath180 .",
    "1 .   @xmath968 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } { [ \\ ! [ t ] \\ ! ] } [ x / u ]          = t_1 $ ] . then @xmath969 so that @xmath914 .",
    "2 .   @xmath970 \\ ! ] } v{\\rightarrow_{{{\\tt u } } } } ( { c ' [ \\ ! [ t ] \\ ! ] } v)[x / u ]          = t_1 $ ] .",
    "+ then we conclude by using the i.h .  and the equivalence @xmath971 .",
    "3 .   @xmath972 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } ( v { c ' [ \\ ! [ t ] \\ ! ] } ) [ x / u ] = t_1 $ ] .",
    "+ then we conclude by using the i.h .  and the reduction @xmath684 .",
    "4 .   @xmath973 \\ ! ] } { \\rightarrow_{{{\\tt u } } } } ( \\lam           y. { c ' [ \\ ! [ t ] \\ ! ] } ) [ x / u]= t_1 $ ] .",
    "+ then we conclude by using the i.h .  and the equivalence @xmath974 .",
    "5 .   @xmath975 \\ ! ] } ] { \\rightarrow_{{{\\tt u } } } }          v[y/{c ' [ \\ ! [ t ] \\ ! ] } ] [ x / u ] = t_1 $ ] .",
    "we reason by cases .",
    "+ if @xmath976 , then : @xmath977 \\ ! ] } ] ) & = \\\\      & & { { { { \\tt w}}{{\\tt j}}}}(v ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t[x / u ] ] \\ ! ] } ) ]   & { \\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o } } } } ( { i.h.})\\\\          & & { { { { \\tt w}}{{\\tt j}}}}(v ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] ] & { \\rightarrow_{{{\\tt u}}}}\\\\          & & { { { { \\tt w}}{{\\tt j}}}}(v ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) ] [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] & = { { { { \\tt w}}{{\\tt j}}}}(t_1 )          \\end{array}\\ ] ] + if @xmath978 , then : @xmath979 \\ ! ] } ] ) & = \\\\      & & { { { { \\tt w}}{{\\tt j}}}}(v ) { \\ { y/{{{{\\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t[x / u ] ] \\ ! ] } )   \\ } } & { \\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o } } } } ( { i.h.}\\ \\&\\ lem.~\\ref{l : newu - pass - to - sub } ) & \\\\ & & { { { { \\tt w}}{{\\tt j}}}}(v ) { \\ { y/{{{{\\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ]   \\ } } & { \\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o}}}}(lem.~\\ref{l : out - subs})\\\\ & & { { { { \\tt w}}{{\\tt j}}}}(v ) { \\ { y/{{{{\\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } )   \\ } } [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] & = \\\\ & & { { { { \\tt w}}{{\\tt j}}}}(v[y/{c ' [ \\ ! [ t ] \\ ! ] } ] ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] & = { { { { \\tt w}}{{\\tt j}}}}(t_1 )          \\end{array}\\ ] ] 6 .   @xmath970 \\ ! ] } [ y / v]{\\rightarrow_{{{\\tt u } } } }          { c ' [ \\ ! [ t ] \\ ! ] } [ y / v][x / u]= t_1 $ ] . note that @xmath980 , otherwise the rule can not be applied",
    ". we reason by cases .",
    "+ if @xmath981 \\ ! ] } ) } $ ] , then : @xmath982 \\ ! ] } [ y / v ] ) & = \\\\ & & { { { { \\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t[x / u ] ] \\ ! ] } ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(v)]&{\\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o } } } } ( { i.h.})\\\\ & & { { { { \\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u)][{\\_}/{{{{\\tt w}}{{\\tt j}}}}(v ) ] &   \\equiv_{{{\\tt cs } } } \\\\ & & { { { { \\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(v)][{\\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] &   = { { { { \\tt w}}{{\\tt j}}}}(t_1 )               \\end{array}\\ ] ] + if @xmath983 \\ ! ] } ) } $ ] , then : @xmath982 \\ ! ] } [ y / v ] ) & = \\\\ & & { { { { \\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t[x / u ] ] \\ ! ] } ) { \\ { y/{{{{\\tt w}}{{\\tt j}}}}(v )   \\ } } & { \\rightarrow^*_{{{\\tt h } } , { { \\tt u}}/{{\\tt o } } } } ( { i.h.})\\\\ & & { { { { \\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] { \\ { y/{{{{\\tt w}}{{\\tt j}}}}(v )   \\ } } & = \\\\   & & { { { { \\tt w}}{{\\tt j}}}}({c ' [ \\ ! [ t ] \\ ! ] } ) { \\ { y/{{{{\\tt w}}{{\\tt j}}}}(v )   \\ } } [ { \\_}/{{{{\\tt w}}{{\\tt j}}}}(u ) ] & = { { { { \\tt w}}{{\\tt j}}}}(t_1 )              \\end{array}\\ ] ] 2 .   the inductive cases for the abstraction , the application and reduction inside substitution are straightforward .",
    "3 .   @xmath984 { \\rightarrow _ { } } u'_0[y / u_1 ] = t_1 $ ] , where @xmath985 ( resp .",
    "@xmath986 ) . since @xmath959 preserves free variables , then @xmath987 or @xmath988 so that the property is straightforward by the i.h .",
    "[ t : psn - enriched ] the @xmath989-calculus enjoys psn , _",
    "@xmath956 , then @xmath990 .",
    "we apply theorem  [ t : equational - abstract ] , where @xmath950 , @xmath991 , @xmath992 , @xmath74 is @xmath953 , @xmath96 is @xmath954 and @xmath955 .",
    "property * ( p0 ) * holds by lemma  [ l : projection]:[ppp - iv]-[ppp - v ] , property * ( p1 ) * holds by lemmas  [ l : projection]:[ppp - iii ] and  [ l : projectionext ] , property * ( p2 ) * holds by lemmas  [ l : projection]:[ppp - i ] . to show property * ( p3 )",
    "* we proceed as follows .",
    "first of all notice that @xmath993 is trivially terminating , then show that @xmath994 is terminating by showing that @xmath995 implies @xmath996 , where the first component of the pair is compared with respect to the multiset order , the second with respect to the terminating relation @xmath997 , and the stability of @xmath998 by @xmath16 , which is given by lemma [ l : mul - for - eq]:[p : mul - for - eq - two ] .",
    "now , take @xmath999 so that corollary  [ c : psn - lauxm ] gives @xmath731 . since @xmath904 , then @xmath1000 by application of the theorem .",
    "another interesting result concerns a more traditional form of explicit substitutions calculus , called here the * inner structural @xmath0-calculus * , and noted @xmath1001 , whose rules appear in figure  [ fig : inn - oriented - f ] .",
    "@xmath1002{{\\tt l}}\\\\ t[x / u ] & { \\mapsto_{{{\\tt w } } } } & t & \\mbox{if $ |t|_x=0$}\\\\ t[x / u ] & { \\mapsto_{{{\\tt d } } } } & t { \\ { x / u \\ } } & \\mbox{if $ |t|_x=1$}\\\\ t[x / u ] & { \\mapsto_{{{\\tt c } } } } & t_{[y]_x}[x / u][y / u ] & \\mbox{if $ |t|_x>1$}\\\\\\\\    ( \\lam y. t ) [ x / u ] & { \\mapsto_{{{{\\tt in}/{{\\tt cs}}}}_1 } } & \\lam y. ( t [ x / u ] ) & \\\\ ( t v)[x / u ]   & { \\mapsto_{{{{\\tt in}/{{\\tt cs}}}}_2 } } & t[x / u ] v & \\mbox{if } x\\notin{{\\tt fv}(v)}\\\\ ( t v)[x / u ]      & { \\mapsto_{{{{\\tt in}/{{\\tt cs}}}}_3 } } & t v[x / u]&\\mbox{if } x\\notin{{\\tt fv}(t)}\\ \\&\\",
    "x\\in{{\\tt fv}(v)}\\\\ t[y / v][x / u ]     & { \\mapsto_{{{{\\tt in}/{{\\tt cs}}}}_4 } } &   t[y / v[x / u ] ] & \\mbox{if } x\\notin{{\\tt fv}(t)}\\ \\&\\ x\\in { { \\tt fv}(v)}\\\\\\\\       t[x / u][y / v ] & \\sim_{{{\\tt cs } } } & t[y / v][x / u ] & \\mbox{if } x\\notin{{\\tt fv}(v)}\\ \\&\\",
    "y\\notin{{\\tt fv}(s ) } \\end{array}\\ ] ]    let @xmath1003 be the context closure of the rules @xmath1004 modulo @xmath455 .",
    "[ l : in - terminates ] the reduction relation @xmath1003 is strongly normalising .",
    "define @xmath1005 to be the sum of all the sizes of the subterms of @xmath8 directly affected by jumps .",
    "it is easily seen that such a measure strictly decreases by one - step rewriting and is invariant by @xmath455 .",
    "the inner structural @xmath0-calculus @xmath1001 enjoys psn .    by application of theorem  [ t : equational - abstract ] , where the required properties of the projection of @xmath1001 into @xmath17 are guaranteed by lemmas  [ l : projection ] and  [ l : in - terminates ] .",
    "the inner structural @xmath0-calculus can be seen as a refinement of kesner s",
    "@xmath319  @xcite , an explicit substitution calculus related to proof - nets , whose rules are in figure  [ fig : les - rules ] .",
    "llllllll @xmath1006&@xmath1007 & @xmath5 $ ] + @xmath1008$]&@xmath1009 & @xmath153 + @xmath1010$]&@xmath1011 & @xmath8 & if @xmath19 + @xmath1012$]&@xmath1013&@xmath1014 $ ] & if @xmath19 and @xmath1015 + @xmath1012$]&@xmath1016&@xmath1010 v$ ] & if @xmath1017 and @xmath1018 + @xmath1012$]&@xmath551&@xmath1010 v [ x / u]$ ] & if @xmath1017 and @xmath1015 + @xmath1019$]&@xmath1020&@xmath1021 $ ] + @xmath1022[y / v]$ ] & @xmath1023 & @xmath543 $ ] & if @xmath1024 and @xmath1025 + @xmath1022[y / v]$ ] & @xmath1026 & @xmath1027[x / u[y / v]]$ ] & if @xmath1028 and @xmath1025 +   + @xmath1022[y / v]$ ] & @xmath1029&@xmath1030[x / u]$ ] & if @xmath1031 and @xmath1018 + & & & ( and @xmath1032 )    indeed , only rules @xmath1033 are not particular cases of rules of @xmath1001 , but they can be decomposed by using duplication followed by propagations as follows : @xmath1034&{\\rightarrow_{@ } } & t [ x / u ] v [ x / u]\\\\\\\\ \\downarrow_{{\\tt c } } & & \\uparrow^{{{{\\tt in}/{{\\tt cs}}}}_3}\\\\\\\\ ( t v { \\ { x / y   \\ } } ) [ x / u][y / u ] & { \\rightarrow_{{{{\\tt in}/{{\\tt cs}}}}_2}}&(t[x / u ] v { \\ { x / y   \\ } } ) [ y / u]{\\equiv_{\\alpha}}(t[x / u ] v ) [ x / u ] \\end{array}\\ ] ]    it is then straightforward to simulate @xmath319 inside @xmath1001 , so we get :    [ cor : les - psn ] the @xmath319-calculus enjoys psn .",
    "the second author shows in  @xcite that from psn of @xmath319 one can infer psn of a wide range of calculi , @xmath215 , kesner s @xmath319 and @xmath1035  @xcite , milner s calculus @xmath217  @xcite , david s and guillaume s @xmath1036  @xcite , the calculus with director strings of  @xcite .",
    "hence psn for @xmath17 encompasses most results of psn in the literature of explicit substitutions .",
    "the interesting feature of @xmath1001 with respect to @xmath319 is that the propagation subsystem @xmath1003 is not needed in order to compute a normal form .",
    "propagations are rather ( linear ) re - arrangements of term constructors which may be used as the basis of some term transformations used for compilation or optimisation .",
    "the strength of a splitting of the whole calculus into a core and propagation system lies in the fact that the latter can be changed without affecting the former .",
    "in particular , it is possible to orient the axioms @xmath1037 in the opposite direction by getting the _ outer _ structural @xmath0-calculus @xmath1038 , whose rules are in figure  [ fig : out - oriented - f ] .    observe that in contrast to the inner calculus the outer box rules act also on void jumps , _",
    "i.e. _  they are not just an orientation of the box equations , but an extension too .",
    "this is possible because  as showed earlier ( theorem [ t : psn - enriched ] )  extending @xmath17 with unboxing for void jumps is safe ( while we do not know whether it is safe to extend @xmath17 with boxing for void jumps ) .",
    "let @xmath1039 be the derived context closure of the outer rules @xmath1040 modulo @xmath455 .",
    "[ l : out - terminates ] the reduction relation @xmath1039 is strongly normalising .",
    "the outer structural @xmath0-calculus @xmath1038 enjoys psn .    by application of theorem  [ t : equational - abstract ] , where the required properties of the projection of @xmath1038 into @xmath17 are guaranteed by lemmas",
    "[ l : projection ] and  [ l : out - terminates ] .",
    "@xmath1002{{\\tt l}}\\\\ t[x / u ] & { \\mapsto_{{{\\tt w } } } } & t & \\mbox{if $ |t|_x=0$}\\\\ t[x / u ] & { \\mapsto_{{{\\tt d } } } } & t { \\ { x / u \\ } } & \\mbox{if $ |t|_x=1$}\\\\ t[x / u ] & { \\mapsto_{{{\\tt c } } } } & t_{[y]_x}[x / u][y / u ] & \\mbox{if $ |t|_x>1$}\\\\\\\\    \\lam y. ( t [ x / u ] ) & { \\mapsto_{{{\\tt out}}_1 } } & ( \\lam y. t ) [ x / u ] & \\mbox { if } y\\notin{{\\tt fv}(u ) } \\\\ t[x / u ] v   & { \\mapsto_{{{\\tt out}}_2 } } & ( t v)[x / u ] \\\\ t v[x / u ]      & { \\mapsto_{{{\\tt out}}_3 } } &   ( t v)[x / u]\\\\ t[y / v[x / u ] ]     & { \\mapsto_{{{\\tt out}}_4 } } &   t[y / v][x / u ] &   \\\\\\\\",
    "t[x / u][y / v ] & \\sim_{{{\\tt cs } } } & t[y / v][x / u ] & \\mbox { if } x\\notin{{\\tt fv}(v)}\\ \\&\\",
    "y\\notin{{\\tt fv}(s ) } \\end{array}\\ ] ]    in fact , it is easily seen that no matter how the axioms @xmath1041 are oriented that they get a terminating rewriting system . as for @xmath1001 and @xmath1038 ,",
    "psn can also be proved for the remaining 14 derived calculi , even if it is not clear to what extent they would be interesting .",
    "we briefly present here the results of  @xcite , which extends and complement those of this paper . as discussed in section  [ s : regnier ] , the equations @xmath1042 and @xmath1043 can be seen as a jump reformulation of regnier s @xmath468-equivalence on @xmath0-terms after the elimination of @xmath184-redexes .",
    "it is also possible to apply the @xmath184-rule in the other sense ( _ i.e. _  as a @xmath184-expansion ) to the equations @xmath1044 in order to obtain other equations on @xmath0-terms .",
    "if @xmath1045 and @xmath1046 , the equation @xmath1047 can be @xmath184-expanded to the new equation @xmath1048 : @xmath1049 } } }    & { \\sim_{{{{\\tt box}}_1 } } } & t v{\\colorbox{lightgray}{\\ensuremath{[x / u ] } } } \\\\\\\\",
    "\\uparrow_{{\\tt db } } & &      \\uparrow_{{\\tt db}}\\\\\\\\   { \\colorbox{lightgray}{\\ensuremath{(\\lam x.t v ) u } } } & { \\sim_{{\\widehat{{{\\tt box } } } } } }   & t { \\colorbox{lightgray}{\\ensuremath{((\\lam x. v ) u ) } } } \\end{array}\\ ] ] axiom @xmath1048 is a more general instance of the rule called @xmath1050  @xcite ( which usually is not taken modulo but oriented from right to left ) .",
    "the axiom @xmath1051 @xmath184-expands to a special case of @xmath1052 , and thus it is subsumed by it . indeed : @xmath1053}}}[x / u ]     & { \\sim_{{{{\\tt box}}_2 } } } & t{\\colorbox{lightgray}{\\ensuremath{[y / v[x / u ] ] } } } \\\\\\\\    \\uparrow_{{\\tt db } } & &      \\uparrow_{{\\tt db}}\\\\\\\\ ( { \\colorbox{lightgray}{\\ensuremath{(\\lam y. t ) v}}}){\\colorbox{darkgray}{\\ensuremath{[x / u ] } } }     & { \\sim_{{{{\\tt box}}_1 } } } &   { \\colorbox{lightgray}{\\ensuremath{(\\lam y. t ) v{\\colorbox{darkgray}{\\ensuremath{[x / u ] } } } } } } \\\\\\\\ \\uparrow_{{\\tt db } } & &      \\uparrow_{{\\tt db}}\\\\\\\\ { \\colorbox{darkgray}{\\ensuremath{(\\lam x. ( ( \\lam y. t ) v))u } } }     & { \\sim_{{\\widehat{{{\\tt box } } } } } } &   ( \\lam y. t ) { \\colorbox{darkgray}{\\ensuremath{((\\lam x. v)u ) } } } \\\\\\\\ \\end{array}\\ ] ] last , one can turn the unboxing rule into its @xmath0-calculus form , getting : @xmath10542 pt    let @xmath1055 be defined as the smallest equivalence relation containing @xmath1056 and @xmath16 . in @xcite",
    "we show that the @xmath1057-calculus in figure  [ fig : final - calc ] enjoys psn .",
    "the proof is obtained via a simple function which eliminates @xmath184-redexes , and that project this calculus over the @xmath962-calculus , whose psn is given by theorem [ t : psn - enriched ] .",
    "the main result of @xcite , however , is that the the @xmath1058-calculus is also church - rosser modulo the whole equational theory .",
    "this is proved via @xmath1059-developments , a new notion of development taking advantage of jumps .",
    "actually , in @xcite we use a macro - steps substitution rule @xmath5{\\rightarrow_{\\tt    sub } } t { \\ { x / u   \\ } } $ ] instead of our subsystem @xmath200 : we do so because the fine granularity of @xmath200 plays no role in the proof of these properties , their refinement to @xmath200 is straightforward .    let us call",
    "* permutative @xmath0-calculus * ( see figure [ fig : perm - lambda ] ) the set of @xmath0-terms plus the operational semantics given by @xmath1060 , where @xmath1061 is the smallest equivalence relation containin @xmath1062 , @xmath1063 , @xmath1048 .",
    "such a calculus can be ( strictly ) simulated into the @xmath1064-calculus and thus it enjoys psn .",
    "this result generalises all known results in the literature about psn for @xmath0-calculus extended with permutative conversion @xcite . in @xcite",
    "we also prove that it is church - rosser modulo @xmath1061 .",
    "@xmath1002{{\\tt l}}\\\\ t[x / u ] & { \\mapsto_{{{\\tt w } } } } & t & \\mbox{if $ |t|_x=0$}\\\\ t[x / u ] & { \\mapsto_{{{\\tt d } } } } & t { \\ { x / u \\ } } & \\mbox{if $ |t|_x=1$}\\\\ t[x / u ] & { \\mapsto_{{{\\tt c } } } } & t_{[y]_x}[x / u][y / u ] & \\mbox{if $ |t|_x>1$}\\\\\\\\    { b [ \\ ! [ t[x / u ] ] \\ ! ] } &   { \\mapsto_{{{\\tt u } } } }    & { b [ \\ ! [ t ] \\ ! ] } [ x / u ] & b \\mbox { does not bind } u\\\\ t ( ( \\lam x. v ) u )      & { \\mapsto_{{\\hat{{{\\tt u } } } } } } & ( \\lam x.t v ) u    & \\mbox{if } x \\notin { { \\tt fv}(t)}\\ \\&\\ x\\notin { { \\tt fv}(v)}\\\\\\\\    ( \\lam x. \\lam y.t ) u & { \\sim_{\\rsig_1 } } & \\lam y. ( ( \\lam x.t ) u ) & \\mbox{if } y\\notin{{\\tt fv}(u)}\\\\ ( \\lam x.t v ) u      & { \\sim_{\\rsig_2 } } & ( \\lam x. t ) u v     & \\mbox{if } x\\notin { { \\tt fv}(v)}\\\\ ( \\lam x.t v ) u      & { \\sim_{{\\widehat{{{\\tt box } } } } } } & t ( ( \\lam x. v ) u )     & \\mbox{if } x \\notin { { \\tt fv}(t)}\\ \\&\\ x\\in { { \\tt fv}(v)}\\\\\\\\       t[x / s][y / v ] & \\sim_{{{\\tt cs } } } & t[y / v][x / s ] & \\mbox { if } x\\notin{{\\tt fv}(v)}\\ \\&\\",
    "y\\notin{{\\tt fv}(s ) }   \\\\     \\lam y. ( t [ x / s ] ) & { { \\sim}_{\\sigma_1 } } & ( \\lam y. t ) [ x / s ]   & \\mbox { if } y\\notin { { \\tt fv}(s ) } \\\\     t[x / s ] v & { { \\sim}_{\\sigma_2 } } & ( t v)[x / s ] & \\mbox { if } x\\notin{{\\tt fv}(v ) } \\\\ ( t v)[x / u ]      & { \\sim_{{{{\\tt box}}_1 } } } & t v[x / u ]     &     \\mbox{if } x \\notin { { \\tt fv}(t)}\\",
    "\\&\\   x\\in { { \\tt fv}(v)}\\\\ t[y / v][x / u ]     & { \\sim_{{{{\\tt box}}_2 } } } & t[y / v[x / u ] ] &     \\mbox{if } x\\notin { { \\tt fv}(t)}\\ \\&\\ x\\in { { \\tt fv}(v)}\\\\    \\end{array}\\ ] ]    @xmath1065",
    "we have introduced the structural @xmath1-calculus , a concise but expressive @xmath0-calculus with jumps admitting graphical interpretations by means of @xmath4s and pure proof - nets .",
    "even if @xmath1 has strong linear logic background , the calculus can be understood as a particular reduction system , based on the notion of multiplicity and reduction at a distance , and being independent from any logic or type system .",
    "we established different properties for @xmath1 such as confluence and psn .",
    "moreover , full composition holds without any need of structural composition nor commutation of jumps .",
    "the @xmath1-calculus admits a graphical operational equivalence @xmath13 allowing to commute jumps with linear constructs .",
    "the relation @xmath13 can be naturally understood as regnier s @xmath15-equivalence on @xmath0-terms and turns out to be a strong bisimulation .",
    "moreover , @xmath13 can be further extended to the substitution equivalence @xmath16 allowing to commute also jumps and non - linear constructs .",
    "the resulting calculus enjoys psn , a non - trivial result from which one derives several known psn results .",
    "psn of @xmath1 modulo @xmath16 is shown by means of an auxiliary calculus @xmath18 which can be understood as a _",
    "memory _ calculus specified by means of _ void _ substitutions .",
    "a memory calculus due to klop  @xcite is often used for termination arguments .",
    "its syntax is usually presented as follows : @xmath1066\\ ] ] where @xmath919 for every term @xmath1067 and the memory construct @xmath1068 $ ] is used to collect in @xmath153 the arguments of the erasing @xmath2-redexes .",
    "the rule associated to this calculus are : @xmath1069 } u & { \\mapsto_{\\pi } } &   { [ } t u , v { ] } \\\\     \\end{array}\\ ] ] if one interprets @xmath1070 $ ] as @xmath1071 $ ] then klop s calculus can be mapped into @xmath18 : @xmath2 maps to @xmath2 and @xmath1072 becomes the reduction rule @xmath1071   u{\\rightarrow_{}}(t   u)[{\\_}/v]$ ] , which is subsumed by the equation @xmath1043 of @xmath18 .",
    "indeed , @xmath18 is more expressive than klop s calculus .",
    "we claim that @xmath18 is interesting on its own and can be used for proving termination results beyond those of this paper .",
    "we do not know whether @xmath17 extended with unrestricted _ boxing _ , in contrast to @xmath17 extended with unrestricted _ unboxing _ presented in section  [ s : ldisf+n+u ] , enjoys psn .",
    "the point is delicate , indeed from the literature ( @xcite ) we know that unrestricted boxing together with the following traditional explicit substitution rule ( without side condition on @xmath7 ) : @xmath1073&{\\rightarrow_{@ } } & t [ x / u ] v [ x / u ] \\end{array}\\ ] ]    break psn .",
    "now , the rule @xmath551 can not be simulated in @xmath17 , so it would be interesting to understand if @xmath17 plus unrestricted boxing enjoys psn .",
    "an interesting research direction would be to formalise the link between @xmath1 , linear logic and abstract machines .",
    "indeed , in contrast to explicit substitution calculi , @xmath1 naturally expresses the notion of linear head reduction  @xcite , which relates in a simpler way to krivine s abstract machine  @xcite .",
    "this is because linear head reduction performs the minimal amount of substitutions necessary to find which occurrences of variables will stand in head positions .",
    "while this is not a reduction strategy in the usual sense of @xmath0-calculus , it can be seen as a clever way to implement @xmath2-reduction by means of proof - nets technology , which can be reformulated in the @xmath1-calculus as a strategy .",
    "the structural @xmath0-calculus has been used in  @xcite to specify xl - developments , a terminating notion of reduction generalising those of development  @xcite and superdevelopment  @xcite .",
    "it would be interesting to better understand xl - developments",
    ".    it would also be interesting to exploit distance and multiplicities in other frameworks dealing for example with pattern matching , continuations or differential features . a direction which seems particularly challenging is standardization for @xmath1",
    ". it would be interesting in particular to obtain a notion of standard reduction which is stable by @xmath13-equivalence ( or at least @xmath455 , so that the result would pass to @xmath1-dags ) . indeed , classical notions as leftmost - outermost reduction do not easily generalise to @xmath1 modulo @xmath13 , where jumps can be swapped and permuted with linear constructors .",
    "we would like to thank stefano guerrini for stimulating discussions .",
    "b.  accattoli and s.  guerrini . jumping boxes . representing lambda - calculus boxes by jumps . in e.",
    "grdel and r.  kahle , editors , _ proc . of 18th computer science logic ( csl )",
    "_ , volume 5771 of _ lecture notes in computer science _ , pages 5570 .",
    "springer - verlag , sept .",
    "b.  accattoli and d.  kesner . the structural lambda - calculus . in a.",
    "dawar and h.  veith , editors , _ proc . of 24thcomputer science logic ( csl )",
    "_ , volume 6247 of _ lecture notes in computer science _ , pages 381395 .",
    "springer - verlag , aug .",
    "b.  accattoli and d.  kesner .",
    "the permutative @xmath1074-calculus , 2012 . in n.",
    "bjorner and a.  voronkov , editors , _ proc . of 18th int .",
    "conference on logic for programming artificial intelligence and reasoning ( lpar ) _ , volume 7180 of _ lecture notes in computer science _ , pages 2336 .",
    "springer - verlag , march 2012 .",
    "r.  bloo and k.  rose .",
    "preservation of strong normalization in named lambda calculi with explicit substitution and garbage collection . in _ computing science in the netherlands _ , pages 6272 .",
    "ncsrf , 1995 .          n.  g. de  bruijn . eneralizing automath by means of a lambda - typed lambda calculus . in _ mathematical logic and theoretical computer science _ , number 106 in lecture notes in pure and applied mathematics , pages 7192 .",
    "marcel dekker , 1987 .",
    "h.  herbelin and s.  zimmermann .",
    "an operational account of call - by - value minimal and classical lambda - calculus in `` natural deduction '' form . in p .-",
    "curien , editor , _ proc . of 9th typed lambda calculus and applications ( tlca ) _ , volume 5608 of _ lecture notes in computer science _ ,",
    "pages 142156 .",
    "springer - verlag , july 2009 .",
    "d.  kesner .",
    "the theory of calculi with explicit substitutions revisited . in j.",
    "duparc and t.  a. henzinger , editors , _ proc . of 16th computer science logic ( csl )",
    "_ , volume 4646 of _ lecture notes in computer science _ , pages 238252 .",
    "springer - verlag , sept .",
    "2007 .",
    "d.  kesner and s.  lengrand . extending the explicit substitution paradigm . in j.",
    "giesl , editor , _ 16th international conference on rewriting techniques and applications ( rta ) _ , volume 3467 of _ lecture notes in computer science _ ,",
    "pages 407422 .",
    "springer - verlag , apr .",
    "2005 .",
    "d.  kesner and f.  renaud .",
    "the prismoid of resources . in r.",
    "krlovic and d.  niwinski , editors , _ proc . of the 34th mathematical foundations in computer science _ , volume 5734 of _ lecture notes in computer science _ , pages 464476 .",
    "springer - verlag , aug .",
    "a.  j. kfoury and j.  b. wells .",
    "new notions of reduction and non - semantic proofs of beta - strong normalization in typed lambda - calculi . in d.",
    "kozen , editor , _ 10th annual ieee symposium on logic in computer science ( lics ) _ , pages 311321 .",
    "ieee computer society press , june 1995 .",
    "mellis . typed lambda - calculi with explicit substitutions may not terminate . in m.",
    "dezani - ciancaglini and g.  d.  plotkin , editors , _ proc . of 2nd",
    "typed lambda calculus and applications ( tlca ) _ , volume 902 of _ lecture notes in computer science _ , pages 328334 .",
    "springer - verlag , apr .",
    "1995 .",
    "y.  ohta and m.  hasegawa . a terminating and confluent linear lambda calculus . in f.  pfenning , editor ,",
    "_ rewriting techniques and applications ( rta ) _ , volume 4098 of _ lecture notes in computer science _ , pages 166180 .",
    "springer - verlag , 2006 .",
    "sinot , m.  fernndez , and i.  mackie .",
    "efficient reductions with director strings . in r.",
    "nieuwenhuis , editor , _",
    "14th international conference on rewriting techniques and applications ( rta ) _ , volume 2706 of _ lecture notes in computer science _ , pages 4660 .",
    "springer - verlag , june 2003 .",
    "n.  yoshida .",
    "optimal reduction in weak - lambda - calculus with shared environments . in _ proc . of int .",
    "conference on functional programming languages and computer architecture _",
    ", pages 243252 .",
    "acm press , june 1993 ."
  ],
  "abstract_text": [
    "<S> inspired by a recent graphical formalism for @xmath0-calculus based on linear logic technology , we introduce an untyped structural @xmath0-calculus , called @xmath1 , which combines actions at a distance with exponential rules decomposing the substitution by means of weakening , contraction and derelicition . </S>",
    "<S> first , we prove some fundamental properties of @xmath1 such as confluence and preservation of @xmath2-strong normalisation . </S>",
    "<S> second , we add a strong bisimulation to @xmath1 by means of an equational theory which captures in particular regnier s @xmath3-equivalence . </S>",
    "<S> we then complete this bisimulation with two more equations for ( de)composition of substitutions and we prove that the resulting calculus still preserves @xmath2-strong normalization . </S>",
    "<S> finally , we discuss some consequences of our results . </S>"
  ]
}
{
  "article_text": [
    "a common computer consists of a fixed number of gates that process classical information by performing classical operations on input data , strings of bits .",
    "a single computer can be used for many different tasks simply by changing its program . indeed , common computer can be programmed to perform arbitrary classical manipulations on the input data , although the execution time depends on its computational speed . this _",
    "universality _ , making it a very versatile device , is arguably the most important feature of a computer .",
    "a quantum computer presumably consists of _ quantum gates _ that are used to implement desired quantum operations on a quantum input , for instance _",
    "qubits_. it s suspected , that large scale quantum computers should surpass their classical counterparts with superior speed and hence revolutionize the world by opening for study a whole class of computational tasks that ordinary computers simply can not grasp efficiently , such as factorization of large integers and simulation of quantum systems . however , there is , besides the practical issues of actually building one , a major theoretical problem with quantum computer , namely its universality .",
    "contrary to classical computing , where it is possible to design a universal gate array that can be _ deterministically programmed _ to implement any arbitrary function on a given classical input data , in quantum case no such universality holds .",
    "indeed , it was proven by nielsen and chuang in @xcite , that to program a quantum gate array to realize any two different _ unitary channels _ , being the mathematical representatives of quantum gates , requires orthogonal programming vectors .",
    "a cardinality argument leads to impossibility of implementing all unitary channels even in an infinite dimensional separable hilbert space .",
    "the existence of imperfect , that is probabilistic , universally programmable quantum gate arrays has , however , been confirmed and studied in @xcite .    another useful device would be a _ quantum multimeter _ that could be programmed to measure any quantum observable .",
    "also this universally programmable device is feasible only if some error is accepted or the implementation is probabilistic @xcite .",
    "it turns out that the reason for this is very similar to the impossibility result on unitary channels : the programming of a multimeter to realize any two different _ sharp observables _ demands orthogonal programming vectors .",
    "this orthogonality result can however be alleviated  so that different sharp observables can be programmed with non - orthogonal programming vectors  assuming that classical _ post - processing _ of the measurement statistics is allowed @xcite .",
    "as we will show , all the previously mentioned no - go results have natural formulations in the context of quantum theory of measurement .",
    "this wider framework also reveals their inherent connections and opens up some immediate generalizations .",
    "our study is organised as follows . in section [ sec : prelim ] we start by introducing some preliminary concepts and mathematical machinery . in section",
    "[ sec : prog ] we study the limitations of deterministic programmability of quantum channels and observables .",
    "we start by first studying the programmability of sharp observables and show that the programming vectors for any two different sharp observables are necessarily orthogonal , whenever post - processing is not allowed .",
    "we show that this result directly implies that also two different unitary channels require orthogonal programming vectors , giving an alternative proof for the well - known result first proven in @xcite , yet in a more general context .",
    "we also note further limitations : the programming of a sharp observable and an _ extreme observable _ require orthogonal programming vectors .",
    "the same result holds also for a unitary and an extreme channel .",
    "in fact , the programming limitations of sharp observables and unitary channels are somewhat analogous : a difference arises only when post - processing of the measurement statistics is allowed . in the final section [ sec : eff ]",
    "we develop the concept of _ effectiveness _ for deterministic programming by giving bounds for a programming protocol to be efficient .",
    "in this section we fix notations and recall the basic concepts needed in our investigation .",
    "let @xmath0 be a complex separable hilbert space with either finite or countably infinite dimension .",
    "we denote by @xmath1 the set of _ bounded linear operators _ , by @xmath2 the set of _ trace class operators _ and by @xmath3 the set of _ projections _ on @xmath0 .",
    "we identify the set of _ quantum states _ as @xmath4}=1\\}$ ] .",
    "in particular a state @xmath5 is called _ pure _ , or equivalently a _ vector state _ , if @xmath6 , that is @xmath7 = |\\varphi\\rangle\\langle\\varphi|$ ] for some unit vector @xmath8 .",
    "let @xmath9 be a nonempty set and @xmath10 a @xmath11-algebra .",
    "we denote by @xmath12 the set of quantum _ observables _ on @xmath13 , i.e. , the mappings @xmath14 that are positive , @xmath11-additive and normalized so that @xmath15 .",
    "the operators @xmath16 , @xmath17 , in the range of an observable @xmath18 are called _",
    "effects_. if @xmath19 for some finite number of points @xmath20 and @xmath21 , then we say that @xmath18 has @xmath22-outcomes , or is _ @xmath22-valued_. we often denote @xmath23 when there is no risk of confusion .    a special class of observables",
    "are those whose range consists of projections .",
    "we say that an observable @xmath24 is _ sharp _ if all its effects are projections , that is , @xmath25 for every @xmath26 .",
    "every observable @xmath18 has a _ naimark dilation _ into a sharp observable ,",
    "i.e. , there exist a hilbert space @xmath27 , a sharp observable @xmath28 and an isometric linear map @xmath29 such that @xmath30 for all @xmath31 ; see e.g. @xcite . since @xmath32 is an isometric linear map , @xmath33 and @xmath34 is the projection onto @xmath35 .",
    "we recall the following characterisation of sharp observables ; see e.g. @xcite for a proof .",
    "[ prel : sharp ] let @xmath18 be an observable and @xmath36 its naimark dilation .",
    "the following are equivalent :    * @xmath18 is a sharp observable .",
    "* @xmath37 for all @xmath38 . * @xmath39=0 $ ] for all @xmath31 .",
    "the set @xmath12 is a convex set , and a convex combination @xmath40 of two observables @xmath18 and @xmath41 corresponds to their mixing .",
    "the extremal elements of @xmath12 , i.e. , the observables that can not be expressed as convex mixtures of other observables , are called _ extreme observables_. all sharp observables are extreme , but it is known that there are also other extreme observables @xcite . for instance , in a finite @xmath42-dimensional hilbert space we can construct an extreme observable with @xmath22 outcomes for each @xmath43 @xcite , but any sharp observable has at most @xmath42 outcomes .",
    "a complete characterisation of extreme observables is given in @xcite .",
    "quantum channels are devices performing quantum state transformations .",
    "mathematically , a linear mapping @xmath44 is a quantum channel if it is _ completely positive _ and _ trace - preserving _ ( schrdinger picture ) , or equivalently , if its dual map @xmath45 is completely positive and _ unital _ , meaning that @xmath46 ( heisenberg picture ) .    a unitary operator @xmath47 defines a _ unitary channel",
    "_ @xmath48 by @xmath49 for all @xmath50 , or @xmath51 for all @xmath52 in the heisenberg picture .",
    "the unitary channels are exactly the _ reversible channels _ ,",
    "i.e. , those channels that have an inverse map which is a channel . one of the important properties of unitary channels is that they are _ multiplicative _ , namely @xmath53 for all @xmath54 .",
    "every channel @xmath55 has a _ stinespring dilation _ ,",
    "i.e. , there exist a hilbert space @xmath27 and an isometric linear map @xmath56 such that @xmath57}\\ ] ] for all @xmath58 , or equivalently @xmath59 for all @xmath60 ; see e.g. @xcite .",
    "the following properties of unitary channels will be needed later .",
    "[ prel : unitary ] let @xmath61 be a unitary channel and @xmath62 its stinespring dilation .",
    "then @xmath63 satisfies the following equivalent conditions :    * @xmath63 is multiplicative . *",
    "@xmath64 is a projection for each projection @xmath65 . *",
    "@xmath66=0 $ ] for all @xmath67 .",
    "we have already seen that @xmath63 is multiplicative , so we only need to prove that the conditions ( i)(iii ) are equivalent .",
    "the implications ( i)@xmath68(ii ) and ( iii)@xmath68(i ) are straightforward to verify . in the following",
    "we prove that ( ii)@xmath68(iii ) .",
    "assume ( ii ) .",
    "for each @xmath69 , we then have @xmath70 implying that @xmath71 is a projection . since both @xmath72 and @xmath73 are projections , then by ( * ? ?",
    "* lemma 2.2.1 ) we have @xmath74=0 $ ] for all @xmath69 . by the linearity and continuity of the mapping",
    "@xmath75 $ ] we get @xmath76=0 $ ] for all @xmath52 .",
    "the set of all channels @xmath77 is a convex set and the extremal elements of @xmath77 are called _",
    "extreme channels_. all multiplicative channels are extreme , but there exist also other extreme channels .",
    "for instance , fix a unit vector @xmath78 and define a channel by @xmath79 .",
    "this channel is clearly not multiplicative , but it is easy to verify that it is extreme . the corresponding schrdinger channel @xmath55 is known as a _ complete state space contraction",
    ", since @xmath80 $ ] for all states @xmath81 .",
    "every physical measurement is based on the same general concept : the observed system is brought into contact with some measuring apparatus and the value of the measured observable is read from the apparatus pointer scale .    ) is interacting with the initial probe state of the measurement apparatus @xmath82 via measurement coupling ( @xmath83 ) .",
    "the measurement statistics of the pointer observable ( @xmath84 ) acting on the combined state ( @xmath85 ) actualize the statistics of the measured observable @xmath86})$ ] .",
    ", scaledwidth=90.0% ]    mathematically , a _ measurement model _ is a 4-tuple @xmath87 , where @xmath27 is the hilbert space associated to the apparatus , @xmath88 is the _ pointer observable _",
    ", @xmath89 is the channel describing the _ measurement interaction _ between the system and the apparatus and @xmath90 is the initial _",
    "probe state_. the measurement statistics produce the measured observable @xmath18 via the _ probability reproducibility condition _",
    "@xmath91 } = { \\textrm{tr}\\left[{\\mathbbm{1}}_{\\mathcal{h}}\\otimes { \\mathsf{z}}(x ) \\ , { \\mathcal{v}}(\\rho \\otimes \\xi ) \\right ] } \\ , ,   \\end{aligned}\\ ] ] which is required to hold for all initial system states @xmath81 and @xmath17 ; see fig . [",
    "fig : mnt ] .",
    "in other words , the measured observable is @xmath92 } \\ , .\\end{aligned}\\ ] ]    following the terminology of @xcite , we say that a measurement model is _ normal _ when the pointer observable is sharp , the interaction is given by a unitary channel ( @xmath93 for some unitary operator @xmath94 on @xmath95 ) and the initial probe state is pure ( @xmath96 $ ] for some unit vector @xmath97 ) .",
    "in such a case we write the measurement model shortly as @xmath98 .",
    "the measured observable induced by a normal measurement model @xmath98 is @xmath99 for all @xmath17 , where @xmath100 for all @xmath78 .",
    "it is a fundamental result of quantum measurement theory that every observable has a normal measurement model @xcite .",
    "we say that is a _ measurement dilation _ of @xmath18 .",
    "it is obviously a special kind of naimark dilation of @xmath18 . using prop .",
    "[ prel : sharp ] one easily confirms that the sharpness of @xmath18 is equivalent to @xmath101=0 $ ] for all @xmath17 .",
    "measurement processes can be used to model not only any observable but also an arbitrary quantum channel .",
    "namely , a measurement model @xmath102 induces a channel @xmath103 } \\ , .\\ ] ] note that the pointer observable plays no role in .",
    "the corresponding heisenberg channel is given by @xmath104 } \\",
    ", .\\end{aligned}\\ ] ] as in the case of observables , every channel has a normal measurement model @xmath98 , and in that case takes the form @xmath105 this is obviously a special kind of stinespring dilation of @xmath106 and by prop .",
    "[ prel : unitary ] , if @xmath106 is a unitary channel , then @xmath107=0 $ ] for all @xmath52 .",
    "we end this subsection with a simple observation related to the measurement models of extreme observables and channels .",
    "suppose that an observable @xmath18 has a measurement model @xmath102 where the probe state @xmath108 is mixed .",
    "we write the probe state @xmath108 as a convex decomposition @xmath109 $ ] , and then @xmath110 } \\\\ & = & \\sum_{i } \\lambda_i   \\ , { \\textrm{tr}_{\\mathcal{k}}[{\\mathcal{v}}^*({\\mathbbm{1}}_{\\mathcal{h}}\\otimes { \\mathsf{z } } ) \\ , { \\mathbbm{1}}_{\\mathcal{h}}\\otimes p[\\phi_i ] ] } \\nonumber \\\\ & = &   \\sum_{i } \\lambda_i \\ , { \\mathsf{e}}_i \\ , , \\end{aligned}\\ ] ] where @xmath111 are some observables .",
    "if @xmath18 is extreme , then @xmath112 for each @xmath113 , and hence @xmath18 has a measurement model @xmath114 , where the probe state is pure .",
    "an analogous argument is valid for the extreme channels .",
    "we summarize this observation in the following proposition , earlier noted in @xcite .",
    "[ prop : ext ] let @xmath115 be an extreme observable / channel having a measurement model @xmath102 . then @xmath115 has a measurement model @xmath116 , where @xmath117 is a pure state .",
    "generally speaking , _ multimeters _ are measurement settings that can be programmed to implement any observable / channel from a specified set .",
    "the programming is done by changing some part of the measurement model : the probe state , the pointer observable , or the interaction .",
    "usually the easiest to physically realize , and thus the most interesting set of programmable multimeters , are those in which the initial probe state is changed . in the rest of our investigation we reserve the term programming for this state - programming scenario only .",
    "therefore , a multimeter is a measurement model in which we do not specify the pointer state , _",
    "i.e. _ a 3-tuple @xmath118 .",
    "this is a _ normal multimeter _",
    "if @xmath119 is sharp and @xmath120 is unitary .    from an abstract point of view",
    "a quantum multimeter is a specific kind of function that maps quantum states into observables or channels",
    ". this function must be physically realizable , meaning that it should be induced from a measurement process .",
    "the essential fact is that all functions from states to either channels or observables are not physically realizable in this way .",
    "for instance , it is easy to construct a bijective function between pure qubit states and qubit unitary channels .",
    "however , there is no programmable multimeter capable of implementing all qubit unitary channels @xcite nor all sharp qubit observables @xcite .      in this subsection",
    "we study the programmability of quantum observables .",
    "we denote the set of programmable observables with a given multimeter @xmath121 by @xmath122 .",
    "the analysis done in articles @xcite indicates that @xmath122 is always a proper subset of @xmath12 , meaning that a fixed multimeter can not be used to program all observables .",
    "here we elaborate this result by showing that different sharp observables demand orthogonal programming vectors , proving that @xmath122 can contain at most @xmath123 sharp observables .",
    "note that due to proposition [ prop : ext ] the programming protocols of all extreme observables can be restricted to vector states .",
    "[ obs : programming ] let @xmath124 be a multimeter and suppose that two different sharp observables @xmath125 and @xmath126 can be programmed with vector states @xmath127 and @xmath128 , respectively .",
    "then @xmath127 and @xmath128 are orthogonal .",
    "we fix disjoint sets @xmath38 such that @xmath129 .",
    "these kind of sets exist , for if @xmath130 holds for all disjoint sets @xmath38 , then @xmath131 contradicting @xmath132 .",
    "the condition @xmath133 means that the projections @xmath134 and @xmath135 are non - orthogonal .",
    "hence , there exist unit vectors @xmath136 and @xmath137 in @xmath0 such that @xmath138 , @xmath139 and @xmath140 .",
    "since @xmath141 and @xmath142 are disjoint , we have @xmath143 and @xmath144 .    denote @xmath145 . then @xmath146 and @xmath147 from which it follows that @xmath148 and @xmath149 .",
    "using these two equations we obtain @xmath150 proving that @xmath151 .    a stronger version of prop .",
    "[ obs : programming ] holds when the multimeter is assumed to be normal .",
    "[ obs : ex ] let @xmath152 be a normal multimeter and suppose two different observables , a sharp observable @xmath24 and an extreme observable @xmath18 , can be programmed with vector states @xmath153 and @xmath154 , respectively",
    ". then @xmath153 and @xmath154 are orthogonal .",
    "assume @xmath155 .",
    "then @xmath154 can be written as @xmath156 , where @xmath157 and @xmath158 satisfy @xmath159 .",
    "we have @xmath160 and @xmath161    denote @xmath162 for all @xmath31 .",
    "we recall from prop .",
    "[ prel : sharp ] that the sharpness of @xmath24 is equivalent to @xmath163=0 $ ] for all @xmath31 .",
    "therefore , @xmath164 it follows that @xmath165 where @xmath41 is an observable induced by the measurement @xmath166 .",
    "this contradicts the extremality of @xmath18 , hence @xmath167 must be false .",
    "one may wonder if two extreme observables require orthogonal program states .",
    "this is not the case as the following example illustrates .",
    "covariant phase space observables have an important role in quantum mechanics @xcite .",
    "it is well known that every covariant phase space observable rises as an operator density defined by the _ weyl operators _ @xmath168 , @xmath169 and a state @xmath90 in the form @xmath170 for all @xmath171 .",
    "it is easy to see that @xmath172 is extremal in the set of all covariant phase space observables if and only if @xmath173 $ ] for some unit vector @xmath174 , and furthermore it has been shown in @xcite that @xmath172 is extremal in the set of all observables on @xmath175 if and only if @xmath176 for all @xmath169 .",
    "it follows that , for example , every gaussian state @xmath177 , where @xmath178 , @xmath179 and @xmath22 is an appropriate normalizing constant , induces some extremal covariant phase space observable via ( [ density ] ) .    a physically feasible normal measurement model for such observables , based on _ eight port homodyne detection _",
    ", is described in @xcite . in this particular model the vector state",
    "@xmath180 $ ] of @xmath181}$ ] is regarded as the initial probe state .",
    "the above considerations show that two extremal observables do not necessarily require orthogonal vector states for programming since for example @xmath182 and @xmath183 are non - orthogonal for all @xmath184 , @xmath185 .    in the statement of prop .",
    "[ obs : ex ] , one can require that @xmath18 is merely an extreme element of @xmath186 rather than of @xmath12 .",
    "the proof is still valid without any changes .",
    "therefore , prop .",
    "[ obs : ex ] gives some indication on what the set @xmath186 looks like . in the case where the maximal amount of sharp observables can be programmed , the structure of @xmath186 is particularly simple .",
    "[ obs : basis ] let @xmath187 .",
    "suppose one can program @xmath188 sharp observables @xmath189 , with a normal multimeter @xmath190 .",
    "then @xmath186 is the convex hull of the set @xmath191 .",
    "the programming vectors @xmath192 form an orthonormal basis of @xmath27 .",
    "every unit vector @xmath193 has a basis expansion @xmath194 . a similar calculation as in the proof of prop .",
    "[ obs : ex ] shows that the observable @xmath18 obtained by using @xmath195 as a program state is @xmath196 hence a mixture of the observables @xmath189 .",
    "every mixed program state @xmath108 has a convex decomposition into pure states , @xmath197 $ ] .",
    "the resulting observable @xmath18 is a mixture of the observables corresponding to the pure states @xmath198 $ ] .",
    "thus , every observable in @xmath186 is a mixture of the observables @xmath189 .      as in the case of programming observables",
    "there is no multimeter which could be deterministically programmed to realize all channels , meaning that the set of programmable channels @xmath199 with a given multimeter @xmath121 is always a proper subset of @xmath77 .",
    "a special case in which the multimeter is assumed to be normal was first analysed by nielsen and chuang who showed that , when such a multimeter is programmed to realize two different unitary channels , the programming vectors must be orthogonal @xcite .    in this subsection",
    "we generalize this result for general ( non - normal ) multimeters capable of realizing two different unitary channels .",
    "again proposition [ prop : ext ] , together with the extremality of unitary channels , shows that one only needs to consider pure programming states .",
    "we remind that , since the pointer observable plays no role in the channel programming scenarios , the corresponding entry in the measurement model is simply omitted ; the programmable multimeter is given by a pair @xmath200 . often in the literature",
    "this also known as programmable _ gate array _ or _",
    "processor_.    [ chan : programming ] let @xmath201 be a multimeter and suppose that two different unitary channels @xmath202 and @xmath203 can be programmed with vector states @xmath127 and @xmath128 , respectively . then @xmath127 and @xmath128 are orthogonal .",
    "suppose @xmath204 .",
    "since @xmath205 , there exists a projection @xmath65 such that @xmath206 .",
    "we fix a sharp observable @xmath24 such that @xmath207 for some @xmath31 . for instance",
    ", @xmath24 can be a two - valued observable consisting of projections @xmath208 and @xmath209 .",
    "further , we fix a measurement model @xmath210 for @xmath24 , where the program state @xmath211 can be chosen pure .",
    "then the concatenated multimeter in fig .",
    "[ fig : concatenation ] implements different sharp observables @xmath212 and @xmath213 with non - orthogonal programming vectors @xmath214 and @xmath215 , respectively .",
    "this contradicts prop .",
    "[ obs : programming ] , and hence @xmath204 must be false .     and an @xmath24-measurement @xmath210 used in proposition [ chan : programming].,scaledwidth=95.0% ]    as in the case of observables , a stronger version of prop .",
    "[ chan : programming ] is obtained when the multimeter is assumed to be normal .",
    "the proof is analogous to that of prop .",
    "[ obs : ex ] .",
    "[ chan : ex ] let @xmath216 be a normal multimeter and suppose two different channels , a unitary channel @xmath48 and an extreme channel @xmath55 , can be programmed with vector states @xmath153 and @xmath154 , respectively",
    ". then @xmath153 and @xmath154 are orthogonal .",
    "assume @xmath155 .",
    "then @xmath154 can be written as @xmath156 , where @xmath157 and @xmath158 satisfy @xmath159 .",
    "we recall from prop .",
    "[ prel : unitary ] that the unitarity of the channel @xmath48 implies @xmath217=0 $ ] for all @xmath67 .",
    "it follows that @xmath218 and hence @xmath219 where @xmath220 is a channel .",
    "this contradicts the extremality of @xmath55 , thus @xmath167 must be false .",
    "the next example shows that sheer extremality of the channels is not enough to imply orthogonality of the programming states .",
    "choose two non - orthogonal unit vectors @xmath221 .",
    "the corresponding complete state space contractions are extreme channels , and they can be programmed with a normal multimeter @xmath222 and non - orthogonal program states @xmath223 and @xmath224 , respectively . here @xmath225 is the swap unitary operator defined as @xmath226    the proof of the following result is the same as the proof of prop .",
    "[ obs : basis ] with obvious changes , so we omit it .",
    "let @xmath187 .",
    "suppose one can program @xmath227 unitary channels @xmath228 , with a normal multimeter @xmath190 .",
    "then @xmath229 is the convex hull of the set @xmath230 .",
    "[ ex : push ] an example of a normal multimeter in previous proposition is the `` push - a - button '' multimeter for which @xmath231 $ ] .",
    "indeed we have @xmath232 ) g^*]}$ ] for every @xmath233 .",
    "we shall return to this multimeter in the last section [ sec : eff ] .",
    "_ post - processing _ is classical information processing of the obtained measurement statistics : merging together , relabeling and weighting measurement outcomes in a stochastic manner .",
    "mathematically post - processing is described by a classical - to - classical channel @xmath234 between probability measures on measurable spaces @xmath235 and @xmath236 .    .",
    ", scaledwidth=100.0% ]    in particular this channel @xmath234 maps measurement statistics of the measured observable @xmath237 into those of another _ fuzzy _ observable @xmath238 via @xmath239 } ) = { \\textrm{tr}\\left[{\\mathsf{e}}'(\\cdot ) \\ ,",
    "\\rho\\right]}$ ] , for all @xmath81 ; see fig . [",
    "fig : postpr ] . under certain technical assumptions",
    "( see @xcite for details ) , the action of the channel @xmath234 can be equivalently described by a _",
    "markov kernel _",
    ", i.e. , a map @xmath240 $ ] such that    * @xmath241 is a probability measure for every @xmath242 , * @xmath243 is measurable for every @xmath244 ,    acting via formula @xmath245 .",
    "the properties of post - processing have been studied for example in @xcite .",
    "post - processing can be taken as an additional component of a measurement model , so that a measurement model is understood as a 5-tuple @xmath246 . if post - processing is included in programming , then the programmability of quantum observables changes .",
    "for instance , jointly measurable observables can be implemented without changing the probe state at all ; we just fix a measurement model for their joint observable and post - process the measurement statistics by calculating the marginals .",
    "surprisingly , different sharp observables may not require orthogonal programming states if post - processing is allowed .",
    "in the following we present an example of a measurement model capable of programming three sharp spin - observables , @xmath247 , @xmath248 , with non - orthogonal programming vectors . here",
    "@xmath249 , @xmath248 , are the conventional _ pauli spin operators_. the example is a more explicit version of the one constructed in @xcite .",
    "let the apparatus hilbert space be @xmath250 with orthonormal basis @xmath251 and define the ( non - orthogonal ) programming vectors @xmath252 , @xmath248 .",
    "one easily checks that @xmath253 , where @xmath254 , is an unitary operator on @xmath255 .",
    "a straightforward calculation shows that the effects of the measured observable in the model @xmath256 , where @xmath257 , are given by @xmath258 . using three different post -",
    "processings we get @xmath259    more generally , define a unit vector @xmath260 to be @xmath261 , where @xmath262 and @xmath263 satisfy the normalization @xmath264 .",
    "programming of the above multimeter with @xmath265 induces an observable @xmath266 which is easily proven using the property @xmath267 for @xmath268 .",
    "in particular the choise @xmath269 @xmath248 induces a _ symmetric informationally complete _ observable @xmath270 .",
    "the previous example illustrates that some sharp observables can indeed be programmed with non - orthogonal programming vectors if post - processing is allowed .",
    "the explanation for this is simple : although post - processing should be viewed as classical processing of information , it effectively alters the pointer observable . to see this ,",
    "let @xmath271 be a measurement model for @xmath18 , where @xmath272 $ ] is a markov kernel . using the formula , linearity and continuity we have @xmath273}\\nonumber \\\\ & = & { \\textrm{tr}_{\\mathcal{k } } [ { \\mathcal{v}}^ * ( { \\mathbbm{1}}_{\\mathcal{h}}\\otimes \\left(\\int k(x , x)\\ , d{\\mathsf{z}}(x)\\right ) ) { \\mathbbm{1}}_{\\mathcal{h}}\\otimes p[\\phi ] ] } \\nonumber \\\\ & = & { \\textrm{tr}_{\\mathcal{k } } [ { \\mathcal{v}}^ * ( { \\mathbbm{1}}_{\\mathcal{h}}\\otimes { \\mathsf{z}}'(x ) ) \\ , { \\mathbbm{1}}_{\\mathcal{h}}\\otimes p[\\phi]]},\\end{aligned}\\ ] ] where @xmath274 .",
    "this shows that @xmath275 and @xmath276 are equivalent as measurements of @xmath18 .",
    "but because the pointer is no longer kept fixed ( if the markov kernel is changed ) , the derivation in prop .",
    "[ obs : programming ] leading to the orthogonality of programming vectors does not hold anymore .",
    "we note that if the pointer observable is altered arbitrarily , then all observables acting on a given hilbert space can be implemented with a single a measurement model @xcite .",
    "it is , however , left as a open question whether there exists a universal state - programmable multimeter capable of measuring every observable when post - processing is allowed .    since the post - processing only affects the pointer observable , it is obvious that the programmability of channels does not change even if post - processing is allowed",
    "in this section we shortly study the effectiveness of quantum multimeters and give limits to efficient programming . throughout the section",
    "we assume that post - processing is not allowed .    as discussed in sec .",
    "[ sec : memo ] , a normal measurement model @xmath98 constitutes a special type of naimark dilation of the measured observable @xmath18 , called a measurement dilation of @xmath18 .",
    "different measurement dilations of a given observable can be arranged by the dimensions of the auxiliary hilbert spaces .",
    "this gives us a natural quantification of effectiveness : _ the smaller _ the apparatus dimension , _ the more efficient _ the measurement .",
    "it has been shown in @xcite that the minimal dimension of the apparatus @xmath27 corresponding to the minimal measurement dilation of a @xmath22-valued ( sharp ) observable is @xmath277 and such a minimal measurement can always be found . for readers convenience we present here a slightly different proposition proving this fact .    [",
    "prop : minimal ] let @xmath24 be a @xmath22-valued sharp observable .",
    "* there exists a normal measurement model @xmath98 of @xmath24 with @xmath278 . * any measurement model @xmath102 of @xmath24 satisfies @xmath279 .",
    "* let @xmath27 be a hilbert space with @xmath278 and fix an orthonormal basis @xmath280 for @xmath27 .",
    "for each @xmath281 , define a unitary operator @xmath282 on @xmath27 as @xmath283 further , define @xmath284 , which is a unitary operator on @xmath95 . by choosing the pointer observable as @xmath285 and the initial probe state as @xmath286 , we get @xmath287 proving that @xmath98 is a measurement model of @xmath24 . *",
    "let @xmath102 be a measurement model of @xmath24 .",
    "we first note that the pointer observable @xmath119 must be @xmath22-valued ( though not necessarily sharp ) and the probe state can be chosen pure , @xmath288 . since @xmath24 is sharp , there exist orthonormal vectors @xmath289 such that @xmath290 .",
    "then the probability reproducibility condition gives @xmath291\\right ] } & = & { \\textrm{tr}\\left[{\\mathbbm{1}}_{\\mathcal{h}}\\otimes { \\mathsf{z}}(j ) \\ , { \\mathcal{v } } ( p[\\varphi_i]\\otimes \\xi ) \\right ] } \\nonumber \\\\ & = & { \\textrm{tr}\\left[{\\mathsf{z}}(j ) \\ , { \\textrm{tr}_{\\mathcal{h } } [ { \\mathcal{v}}(p[\\varphi_i]\\otimes\\xi)]}\\right ] } \\nonumber \\\\ & = & { \\textrm{tr}\\left [ { \\mathsf{z}}(j ) \\ , \\zeta_i\\right]},\\end{aligned}\\ ] ] where @xmath292\\otimes \\xi)]}$ ] .",
    "it follows that @xmath293 , and therefore @xmath294 meaning that the supports of the operators @xmath295 and @xmath296 are orthogonal as subspaces whenever @xmath297 .",
    "we thus have @xmath22 orthogonal subspaces in @xmath27 , so @xmath298 .",
    "obviously this sets further limitations to the programming scenarios of sharp observables in addition to those seen in [ sec : probs ] .",
    "we summarize these observations in the following proposition .",
    "programming of different sharp observables @xmath189 , with @xmath299 values , respectively , can be done only if the apparatus @xmath27 satisfies @xmath300    let @xmath125 and @xmath126 be sharp spin - observables . since the effects @xmath301 and @xmath302 are rank-1 projections in a two dimensional hilbert space , there exists a unitary operator @xmath303 on @xmath304 such that @xmath305",
    ". now let @xmath127 and @xmath128 be any pair of orthonormal vectors and define a unitary operator @xmath306 + r \\otimes p[\\phi_2])$ ] .",
    "one easily verifies that @xmath307 is a multimeter that can be programmed to measure @xmath125 and @xmath126 with vectors @xmath127 and @xmath128 , respectively .",
    "this shows that at least in this particular case the minimal programming dimension can indeed be reached .",
    "[ fig : push ]     an inefficient way of programming @xmath308 observables is to have minimal measurements @xmath309 for each observable @xmath310 individually and simply to select beforehand which one should be performed ( see fig . [",
    "fig : push ] ) .",
    "mathematically this  push - a - button ",
    "protocol is described by a programmable multimeter @xmath311 and programming vectors @xmath312 where @xmath313    the size of this `` push - a - button '' -multimeter is @xmath314 .",
    "we take this trivial programming scenario , which nevertheless can always be performed for any finite set of ( sharp ) observables , as the upper bound of effectiveness of a multimeter .",
    "we conclude that in every interesting programming protocol capable of programming sharp observables @xmath315 , @xmath233 , the size of the apparatus @xmath316 satisfies the bounds @xmath317    let @xmath189 be sharp observables with @xmath318 values , respectively . there exists a normal multimeter @xmath311 with @xmath319 capable of realizing each of the @xmath315 @xmath233 .",
    "denote @xmath320 .",
    "let @xmath321 with @xmath322 and @xmath323 , and fix some orthonormal bases @xmath324 and @xmath325 .",
    "define the unitaries @xmath326 , @xmath327 , as in prop .",
    "[ prop : minimal ] .",
    "extend every observable @xmath328 to be ",
    "@xmath42-valued  by adding zero - effects , if necessary , and define the coupling to be @xmath329 \\ , .\\ ] ] finally , choose the pointer observable to be @xmath330 . then @xmath331 ] } \\nonumber \\\\ & = & \\sum_{j , j',l , l ' } { \\mathsf{a}}_l(j ) { \\mathsf{a}}_{l'}(j')\\ , { \\textrm{tr}\\left[|g_j \\phi_k \\rangle\\langle g_{j ' } \\phi_k| \\ , p[\\phi_1]\\right ] } \\ ,   { \\textrm{tr}\\left [ p[\\eta_{l } ] \\ , p[\\eta_{l ' } ] \\ ,",
    "p[\\eta_i]\\right ] } \\nonumber \\\\ & = & { \\mathsf{a}}_i(k).\\end{aligned}\\ ] ] this shows , that if one chooses @xmath332 , then for every @xmath233 @xmath333 is an @xmath315-measurement .",
    "following the methods introduced above one can also study the effectiveness of channel programming .",
    "since one can induce an arbitrary unitary channel @xmath51 from a normal measurement model @xmath334 using a unitary coupling @xmath335 , we note that @xmath336 .",
    "interestingly enough , from the point of view of deterministic programming this means that the  push - a - button  realization of @xmath308 unitary channels ( see ex .",
    "[ ex : push ] ) is actually the most efficient protocol one can have .",
    "this implies that when engineering unitary quantum gate arrays , it s sufficient to build every gate individually and bundle those into an array respecting the  push - a - button  protocol .",
    "the fundamental limitations on the deterministic programming of sharp observables or unitary channels are essentially the same .",
    "we have shown how these two scenarios are connected and can be put into a common framework by using the general theory of quantum measurements . in particular , we have generalized the orthogonality result from nielsen and chuang , in which the programmable multimeter / gate array is described by a unitary channel , to a completely general case in which the channel is arbitrary .",
    "we emphasize , that the original no - go theorem of perfectly precise programmable quantum gate array by nielsen and chuang would hold also in this case via dilating the channel into a unitary one .",
    "the drawback in this dilation approach is that it does nt address the orthogonality in the context of original space .",
    "our results clarify this aspect .",
    "this article deals with qualitative aspects of quantum programming , namely the orthogonality of the programming vectors of sharp observables and unitary channels .",
    "a quantitative study on the connection between the distance of programming states and the distinction of programmed devices will be the subject of a separate investigation .",
    "it would also be interesting to answer whether or not a deterministically programmable multimeter capable of measuring every quantum observable is possible , if post - processing is allowed .",
    "this work has been supported by the academy of finland ( grant no .",
    "138135 ) . m.t . acknowledges financial support from the university of turku graduate school ( utugs ) .",
    "the authors are grateful to jussi schultz for his comments on an earlier version of this manuscript .",
    "m.t . would also like to acknowledge erkka haapasalo for many useful discussions ."
  ],
  "abstract_text": [
    "<S> we study the limitations of deterministic programmability of quantum circuits , e.g. ,  quantum computer . </S>",
    "<S> more precisely , we analyse the programming of quantum observables and channels via quantum multimeters . </S>",
    "<S> we show that the programming vectors for any two different sharp observables are necessarily orthogonal , whenever post - processing is not allowed . </S>",
    "<S> this result then directly implies that also any two different unitary channels require orthogonal programming vectors . </S>",
    "<S> this approach generalizes the well - known orthogonality result first proven by nielsen and chuang . </S>",
    "<S> in addition , we give size - bounds for a multimeter to be efficient in quantum programming . </S>"
  ]
}
{
  "article_text": [
    "decision making plays an important role in multi - agent systems . for instance , a set of agents ( or robots ) need to complete a task cooperatively .",
    "due to some reasons ( e.g. , in order to minimize the cost of the resources ) , only a few agents can take the job . in this case , all agents need to make a joint decision of which agents are going to take the job . in this paper , we study such a decision making model , in which a set @xmath0 of individuals desire to select a subset of individuals of @xmath0 .",
    "in particular , each individual qualifies or disqualifies every individual in @xmath0 , and then a social rule is applied to select the socially qualified individuals .",
    "this model has been widely studied under the name _ group identification _ in economics  @xcite . in particular , the liberal rule ,",
    "the consent rules , the consensus - start - respecting rule ( csr ) and the liberal - start - respecting rule ( lsr ) have been extensively studied in the literature  @xcite . due to the liberal rule ,",
    "an individual is socially qualified if and only if this individual qualifies herself .",
    "consent rules are a class of social rules , where each of them is characterized by two positive integers @xmath1 and @xmath2 . moreover ,",
    "if an individual qualifies herself , then this individual is socially qualified if and only if there are at least @xmath3 other individuals who also qualify her . on the other hand , if the individual disqualifies herself , then this individual is not socially qualified if and only if there are at least @xmath4 other individuals who also disqualify her .",
    "the csr and the lsr social rules recursively determine the socially qualified individuals . in the beginning , the set @xmath5 of individuals each of whom qualifies herself are considered lsr socially qualified , while the set @xmath6 of individuals each of whom is qualified by all individuals are considered csr socially qualified .",
    "then , in each iteration for the social rule lsr ( resp .",
    "csr ) , an individual @xmath7 is added to @xmath5 ( resp .",
    "@xmath6 ) if there is an individual in @xmath5 ( resp .",
    "@xmath6 ) qualifying @xmath7 .",
    "the iteration terminates until no new individual can be added to @xmath5 ( resp .",
    "@xmath6 ) , and the socially qualified individuals are the ones in @xmath5 ( resp .",
    "@xmath6 ) . in this paper",
    ", we consider the problems where an external ( strategic ) agent has an incentive to control the results by adding , deleting or partition of individuals . in particular , in each problem the external agent has a set @xmath8 of objective individuals whom he wants to make socially qualified .",
    "though it is possible for the external agent to change the result in many cases , the external agent might give up controlling the group identification procedure if he realizes that it would take quite a long time to find out how to change the result successfully .",
    "motivated by this argument , we study the complexity of these problems for the liberal rule , the consent rules , the csr and the lsr rules .",
    "we achieve both polynomial - time solvability results and np - hardness results for these problems .",
    "in particular , we obtain dichotomy results for all problems considered in this paper for consent rules , with respect to the values of @xmath1 and @xmath2 . in addition",
    ", we study the np - hard problems from the parameterized complexity point of view , and obtain several fixed - parameter tractability results , with respect to the number of objective individuals .",
    "see table  [ tab : dichtomyforconsetrules ] for a summary of our main results .      * social rule .",
    "* let @xmath0 be a set of individuals .",
    "a _ profile _ @xmath9 over  @xmath0 is a mapping such that @xmath10 means that individual @xmath11 _ qualifies _ individual @xmath12 .",
    "a _ social rule _ is a function @xmath13 which associates a pair @xmath14 of each profile @xmath15 over @xmath0 and a subset @xmath16 of individuals with a subset  @xmath17 .",
    "we call the individuals in @xmath18 the _ socially qualified individuals _ of @xmath19 with respect to @xmath13 and @xmath15 . in this paper",
    ", we mainly study the following social rules .",
    "_ liberal rule @xmath20 . _",
    "an individual is socially qualified if and only if this individual qualifies herself .",
    "that is , for every @xmath21 and every individual @xmath22 , @xmath23 if and only if @xmath24 .",
    "_ consent rules @xmath25 .",
    "_ each consent rule @xmath25 is specified by two positive integers @xmath1 and @xmath2 such that for every @xmath21 and every individual @xmath22 ,    \\(1 ) if @xmath24 , then @xmath26 if and only if @xmath27 , and    \\(2 ) if @xmath28 , then @xmath29 if and only if @xmath30 .",
    "the two positive integers @xmath1 and @xmath2 are referred to as the _ consent quotas _ of the consent rule @xmath25 .",
    "it is easy to see that the consent rule @xmath31 is exactly the liberal rule  @xcite .",
    "we remark that in the original definition of consent rules by samet and schmeidler  @xcite , there is an additional condition @xmath32 for consent quotas @xmath1 and @xmath2 to satisfy , where @xmath33 is the number of individuals .",
    "indeed , samet and schmeidler studied the consent rules for a fixed set of individuals , and the condition @xmath32 is crucial for the consent rules to satisfy the _ monotonicity property_. roughly , a social rule is _ monotonic _ if a socially qualified individual @xmath7 is still socially qualified when someone who disqualifies @xmath7 turns to qualify @xmath7 .",
    "we refer to  @xcite for further details .",
    "since our paper is mainly concerned with complexity of strategic group control problems , we drop this condition from the definition of the consent rules ( we indeed achieve results for a more general class of social rules that encapsules the original consent rules defined in  @xcite ) .",
    "when studying the group control problems for the consent rules @xmath25 we assume that the consent quotas @xmath1 and @xmath2 remain the same , that is , they do not change after adding new individuals , deleting old ones , or partitioning of individuals .",
    "_ consensus - start - respecting rule @xmath34_. for every @xmath21 , this rule determines the socially qualified individuals iteratively .",
    "first , every individual who is qualified by all individuals is considered socially qualified .",
    "then , in each iteration , all individuals which are qualified by at least one of the currently socially qualified individuals are added to the set of socially qualified individuals .",
    "the iteration terminates until no new individual is added .",
    "precisely , for every @xmath21 let @xmath35 for each positive integer @xmath36 , let @xmath37 then @xmath38 for some @xmath39 such that @xmath40",
    ".    _ liberal - start - respecting rule @xmath41_. this rule is similar to @xmath34 with the only difference that the initial socially qualified individuals are those who qualify themselves .",
    "in particular , for every @xmath21 , let @xmath42 for each positive integer @xmath36 , let @xmath43 then @xmath44 for some @xmath39 such that @xmath45 .    * problem definition . * in this paper , we mainly study the complexity of the following problems .",
    ": :    ( gcai )    +    * a 6-tuple @xmath46 of a social rule    @xmath13 , a set @xmath0 of individuals , a    profile  @xmath15 over @xmath0 , two nonempty    subsets @xmath47 such    that  @xmath48 and    @xmath49 , and a positive integer    @xmath50 .    * is there a subset @xmath51 such that    @xmath52 and @xmath53    with @xmath54 ? : :    ( gcdi )    +    * a 5-tuple @xmath55 of a social rule    @xmath13 , a set @xmath0 of individuals , a    profile  @xmath15 over @xmath0 , a nonempty subset    @xmath56 such that    @xmath57 , and a positive    integer  @xmath50 .    * is there a subset @xmath58 such that    @xmath52 and @xmath53    with @xmath59 ? : :    ( gcpi )    +    * a 4-tuple @xmath60 of a social rule    @xmath13 , a set @xmath0 of individuals , a profile    @xmath15 over @xmath0 , and a nonempty subset    @xmath56 such that    @xmath61 .",
    "* is there a subset @xmath62 such that    @xmath53 with    @xmath63 ?",
    "a social rule is _ immune _ to a problem defined as above if it is impossible to make a non - socially qualified individual @xmath64 socially qualified by carrying out the operations ( adding / deleting / partition of individuals ) in the problems , that is , there are only no - instance .",
    "if a social rule is not immune to a problem defined above , we say it is _ susceptible _ to the problem",
    ".    * graph . * an _ undirected graph _ is a tuple @xmath65 where @xmath66 is the _ vertex set _ and @xmath67 is the _ edge set_. a vertex @xmath68 _ dominates _ a vertex @xmath69 if there is an edge between @xmath68 and @xmath69 .",
    "a vertex subset @xmath70 dominates another vertex subset @xmath71 , if for every vertex @xmath72 there is a vertex @xmath73 that dominates @xmath69 . a _ directed graph _ is a tuple @xmath74 where @xmath66 is the vertex set and @xmath70 is the _ arc set_. an _ independent set _ @xmath75 of a digraph ( resp .",
    "an undirected graph ) is a vertex subset such that there is no arc ( resp .",
    "edge ) between every two vertices in @xmath75 . a _ directed ( resp .",
    "an undirected ) bipartite graph _ is a digraph ( resp .",
    "an undirected graph ) whose vertex set can be partitioned into two independent sets .",
    "we denote by @xmath76 ( resp .",
    "@xmath77 ) a directed ( resp .",
    "an undirected ) bipartite graph with @xmath78 being a partition of its vertex set such that both @xmath79 and @xmath80 are independent sets .",
    "a _ directed path _ in a digraph @xmath81 is a vertex sequence @xmath82 such that @xmath83 for every @xmath84 .",
    "we say that this is a path from @xmath85 to @xmath86 , or simply a @xmath87-path . for a digraph @xmath88 ,",
    "the _ subgraph induced _ by a @xmath89 , denoted by @xmath90 $ ] , is the digraph with vertex set @xmath91 and arc set @xmath92 . unless stated otherwise , in this paper we simply use `` graph '' for `` undirected graph '' .",
    "* three np - hard problems . *",
    "we assume familiarity with basic notation in complexity theory such as np - hardness .",
    "our np - hardness results are shown by reductions from the following np - hard problems .",
    ": :    ( x3c )    +    * a universal set @xmath93 with @xmath94    for some positive integer @xmath95 and a collection    @xmath96 of 3-subsets of @xmath93 .    * is there a subcollection    @xmath97 such that    @xmath98 and each @xmath99    appears in exactly one set of  @xmath100 ?    the np - hardness of the x3c problem was given in  @xcite . in this paper",
    ", we assume that each element @xmath101 appears in exactly three different 3-subsets of @xmath93 in  @xmath102 . therefore , we have that @xmath103",
    ". this assumption does not change the np - hardness of the x3c problem  @xcite .",
    ": :    ( )    +    * a bipartite graph @xmath104 , where each vertex    in @xmath80 has a label from @xmath105 .",
    "* is there a subset @xmath106 such that    @xmath107 for every    @xmath108 and @xmath66 dominates    @xmath71 , where @xmath109 is the set of all vertices in    @xmath80 that has label @xmath110 ?",
    "[ lem : multicolorredbluedominatingisnphard ] the problem is np - hard .",
    "the proof for the above lemma is deferred to appendix .",
    "a _ boolean variable _",
    "@xmath111 takes either the value 1 or 0 .",
    "let @xmath93 be a set of boolean variables .",
    "if @xmath99 , then @xmath111 and @xmath112 are _ literals _ over @xmath93 .",
    "a _ clause _ @xmath113 over @xmath93 is a set of literals over @xmath93 .",
    "a _ truth assignment _ is a function @xmath114 .",
    "a clause @xmath113 is _ satisfied _ under a truth assignment @xmath115 if and only if there is an @xmath116 such that @xmath117 , or a @xmath118 such that @xmath119 .",
    "the 3-satisfiability problem defined below is a famous np - hard problem  @xcite .",
    ": :    ( 3-sat )    +    * a set @xmath93 of boolean variables , and a collection    @xmath120 of clauses over @xmath93 such that each clause    includes exactly three literals .",
    "* is there a truth assignment @xmath114    under which all clauses in @xmath120 are satisfied ?",
    "* parameterized complexity .",
    "* parameterized complexity was introduced by downey and fellows  @xcite as a tool to deal with hard problems .",
    "parameterized problem _ is a language @xmath121 , where @xmath122 is a finite alphabet .",
    "the first component is called the _",
    "main part _ of the problem and the second component is called the _",
    "parameter_. in this paper , we consider only positive integer parameters .",
    "a parameterized problem is _ fixed - parameter tractable _ ( fpt ) if it is solvable in @xmath123 time , where @xmath75 is the main part of the instance , @xmath50 is the parameter , and @xmath124 is a computable function depending only on @xmath50 . for further discussion on parameterized complexity",
    ", we refer to the textbooks  @xcite .    [ cols=\"<,^,^,^,^,^,^,^,^ \" , ]      and @xmath41 . on the left side",
    "is a profile @xmath15 over the set @xmath125 . on the right side is the digraph @xmath126 .",
    "it holds that @xmath127 and @xmath128 .",
    "moreover , @xmath129 and @xmath130 .",
    "thus , @xmath131 and @xmath132 .",
    ", scaledwidth=85.0% ]",
    "in this section , we investigate how the size of @xmath8 affects the complexity of the problems studied in the previous section .",
    "we have shown in theorems  [ thm : gcaiconsentnphard ] and  [ thm_gcpi_consent_s_t_np_hard ] that gcai , gcdi and gcpi for consent rules @xmath25 are np - hard when either @xmath1 or @xmath2 exceeds some constant .",
    "hence , there are no polynomial - time algorithms for these problems unless p = np . nevertheless , in many real - world situations , the size of @xmath8 , the set of individuals whom the external agent wants to make socially qualified , may be relatively small .",
    "for such situations , studying the parameterized complexity of the group control problems with respect to the size of @xmath8 is of particular importance .",
    "we first study gcai and gcdi for consent rules @xmath25 .",
    "in particular , we prove that both gcai and gcdi for consent rules are fpt with respect to the size of @xmath8 . to this end , we give integer linear programming ( ilp for short ) formulations with the number of variables bounded by @xmath133 for both problems .",
    "as ilp is fpt with respect to the number of variables  @xcite , so are gcai and gcdi for consent rules .",
    "[ lenstra ] ilp can be solved using @xmath134 arithmetic operations , where @xmath79 is the number of bits in the input and @xmath68 is the number of variables in ilp .",
    "now , we describe the ilp formulations for both gcai and gcdi for consent rules .",
    "[ thm : gcaigcdiconsentrulefpt ] gcai and gcdi for every consent rule are fpt with respect to the size of @xmath8 .",
    "we prove the theorem by giving ilp formulations for the gcai and gcdi problems .",
    "the number of variables in the formulations is bounded by a function of @xmath135 .",
    "we first consider the gcai problem .",
    "let @xmath136 be an instance of the gcai problem .",
    "let @xmath137 .",
    "we say two individuals @xmath138 have the _ same opinion _ over @xmath8 , if for every @xmath139 , it holds that @xmath140 .",
    "hereinafter , let @xmath141 be any arbitrary but fixed order of @xmath0 .",
    "let @xmath142 where @xmath143 for every @xmath144 .",
    "for an individual @xmath145 where @xmath146 , let @xmath147 denote the vector @xmath148 .",
    "the ilp formulation for the instance is as follows . for every @xmath149-dimensional 1 - 0 vector @xmath150 ,",
    "let @xmath151 and let @xmath152 .",
    "we create a variable @xmath153 for every @xmath149-dimensional 1 - 0 vector @xmath150 .",
    "thus , there are in total @xmath154 variables .",
    "each variable @xmath153 indicates how many individuals from @xmath155 are included in the solution @xmath156 .",
    "these variables are subject to the following restrictions .",
    "let @xmath157 be the set of all @xmath158-dimensional 1 - 0 vectors .",
    "\\(1 ) since for every @xmath149-dimensional 1 - 0 vector @xmath150 there are at most @xmath159 individuals @xmath160 such that @xmath161 , we need to ensure that no more than @xmath159 of these individuals are in @xmath156",
    ". moreover , every variable should be non - negative .",
    "thus , every variable @xmath153 is subject to    @xmath162    \\(2 ) since we can add at most @xmath50 individuals in total , it has to be that    @xmath163    \\(3 ) in order to make every individual in @xmath8 socially qualified , it has to be that    ( 3.1 ) for every @xmath164 such that @xmath165    @xmath166\\cdot    x_{\\beta})\\geq s;~\\text{and}\\ ] ]    ( 3.2 ) for every @xmath164 such that @xmath167    @xmath168)\\cdot x_{\\beta})\\leq t-1,\\ ] ] where @xmath169 $ ] is the @xmath110-th component of @xmath150 .",
    "the inequality ( 3.1 ) is to ensure that for every @xmath164 who qualifies herself there are at least @xmath1 individuals in the final profile who qualify @xmath170 , and the inequality ( 3.2 ) is to ensure that for every individual @xmath164 who disqualifies herself there are at most @xmath4 individuals in the final profile who disqualify @xmath170 .",
    "now let s consider the gcdi problem .",
    "let @xmath171 be a given instance of the gcdi problem .",
    "the ilp formulation for the instance is similar to the one for gcai discussed above .",
    "let @xmath141 , @xmath172 , @xmath147 , and @xmath157 be defined with the same meanings as above . for every @xmath158-dimensional 1 - 0 vector @xmath150 ,",
    "let @xmath173 and @xmath174 .",
    "we create a variable @xmath175 for every @xmath176 .",
    "each variable @xmath175 indicates how many individuals from @xmath177 are deleted .",
    "the restrictions are as follows .",
    "\\(1 ) for every @xmath176 we can delete at most @xmath178 individuals in @xmath177 .",
    "moreover , each variable should be non - negative .",
    "thus , for every variable @xmath175 , we have that    @xmath179    \\(2 ) since we can delete at most @xmath50 individuals in total , we have that    @xmath180    \\(3 ) in order to make every individual in @xmath8 socially qualified , it has to be that    ( 3.1 ) for every @xmath164 such that @xmath181    @xmath182\\cdot    y_{\\beta})\\geq s;~\\text{and}\\ ] ]    ( 3.2 ) for every @xmath164 such that @xmath183    @xmath184)\\cdot y_{\\beta})\\leq t-1.\\ ] ]    according to lemma  [ lenstra ] , both ilps shown above are solvable in time @xmath185 , where @xmath186 . as a result , both gcai and gcdi are fpt with respect to @xmath137 .",
    "now , we study gcpi for consent rules @xmath25 .",
    "in contrast to the fixed - parameter tractability of gcai and gcdi for consent rules , we show that gcpi is unlikely to admit an fpt - algorithm . in particular",
    ", we prove that gcpi for consent rules @xmath187 such that @xmath188 remains np - hard even when @xmath8 is a singleton .",
    "this directly implies that gcpi for consent rules is not fpt time , where @xmath75 is the main part and @xmath50 is the parameter . ] .",
    "[ thm : gcpiconsentthreetwonphard ] gcpi is np - hard for consent rules @xmath187 such that @xmath188 , even when @xmath189 .",
    "we prove the theorem by a reduction from the problem .",
    "let @xmath190 be an instance of the problem .",
    "let @xmath188 .",
    "we create an instance @xmath191 for the gcpi problem for the consent rule @xmath187 as follows .",
    "we create @xmath192 individuals in total .",
    "let @xmath193 be the partition of @xmath80 with respect to the labels of the vertices .",
    "that is , @xmath109 where @xmath194 , is the set of vertices in @xmath80 with label @xmath110 . for each vertex @xmath195 where @xmath194",
    ", we create an individual @xmath196 .",
    "let @xmath197 .",
    "moreover , for every vertex @xmath72 , we create an individual @xmath198 .",
    "let @xmath199 .",
    "in addition , we create @xmath200 individuals @xmath201 , where each @xmath202 , correspondes to the label @xmath110 and @xmath203 .",
    "fianlly , we create @xmath204 dummy individuals @xmath205 .",
    "hence , @xmath206 .",
    "the profile @xmath15 is defined as follows .",
    "1 .   @xmath207 ; 2 .",
    "[ item : auau ] @xmath208 for every @xmath209 if and only if @xmath210 ; 3 .",
    "@xmath211 for every @xmath212 if and only if @xmath213 ; 4 .",
    "@xmath214 for every @xmath215 ; 5 .",
    "[ item : redverticesqualifya ] @xmath216 for every @xmath195 where @xmath194 ; 6 .",
    "@xmath217 for every @xmath218 and @xmath219 ; 7 .",
    "@xmath220 for every @xmath219 and @xmath218 ; 8 .",
    "@xmath221 for every dummy individual @xmath222 ; 9 .",
    "@xmath223 for every dummy individual @xmath224 ; 10 .",
    "[ item : dummyindividual ] @xmath225 for every dummy individual @xmath224 and every @xmath226 ; 11 .",
    "[ item : individualdummy ] @xmath227 for every dummy individual @xmath224 and every @xmath226 ; 12 .",
    "[ item : encodinggraph ] @xmath228 for every @xmath195 where @xmath194 and every @xmath219 if and only if @xmath229 ; 13 .",
    "[ item : encodinglabels ] @xmath230 for every @xmath231 and @xmath232 if and only if @xmath213 ; and 14 .",
    "@xmath233 which is not defined above can be set arbitrarily .",
    "now we show the correctness of the reduction .",
    "@xmath234 let @xmath66 be a labeled red - blue dominating set of @xmath235 .",
    "we shall show that @xmath236 is a yes - instance .",
    "let @xmath237 be the set consisting of the individual @xmath238 and all individuals that correspond to @xmath239 .",
    "that is , @xmath240 .",
    "since @xmath207 , and every individual corresponding to some vertex in @xmath80 qualifies @xmath238 ( see  [ item : redverticesqualifya ] ) , it holds that @xmath241 .",
    "now , let s consider the profile restricted to @xmath242 .",
    "observe that @xmath243 .",
    "let @xmath198 be a candidate in @xmath244 where @xmath72 . according to the construction of @xmath15 and the fact that @xmath66 dominates @xmath71",
    ", there is at least one individual @xmath196 , corresponding to a vertex @xmath245 dominating @xmath69 , that disqualifies @xmath198 ( see  [ item : encodinggraph ] ) .",
    "since @xmath246 ( see  [ item : auau ] ) , it holds that @xmath247 .",
    "since this holds for every @xmath219 , we have that @xmath248 . on the other hand , for every @xmath194 , since @xmath107 , @xmath242 contains at most one individual @xmath249 . according to the construction of @xmath15 , for every @xmath218 only the following @xmath250 individuals in @xmath242 qualifies @xmath251 : ( 1 ) @xmath251 herself ; ( 2 ) @xmath249 where @xmath245 ( see  [ item : encodinglabels ] ) ; and ( 3 ) all @xmath204 dummy individuals ( see  [ item : dummyindividual ] ) .",
    "it directly follows that @xmath252 for every @xmath218 .",
    "finally , since @xmath221 for every @xmath222 and all individuals in @xmath242 disqualify all dummy individuals , it holds that @xmath253 for every @xmath224 . in conclusion , @xmath254 .",
    "now , it is easy to verify that @xmath255 for every @xmath256 . as a result , @xmath257 .",
    "let @xmath237 such that @xmath257 .",
    "due to symmetry , assume that @xmath259 . since @xmath207 , all the other individuals that disqualify @xmath238 must be in @xmath242 .",
    "that is , @xmath260 .",
    "moreover , all individuals in @xmath261 must be eliminated in the profile restricted to @xmath242 , i.e. , @xmath254 . let @xmath198 be a vertex in @xmath244 where @xmath72 . since @xmath246 ,",
    "to eliminate @xmath198 , at least one individual that disqualifies @xmath198 must be in @xmath242 . due to the construction of the profile , all individuals in @xmath242 that disqualify @xmath198 , except @xmath198 herself ,",
    "are in @xmath262 . hence ,",
    "at least one @xmath249 where @xmath195 that disqualifies @xmath198 must be in @xmath242 .",
    "according to the construction , the vertex @xmath68 dominates @xmath69 in the graph @xmath235 .",
    "this implies that @xmath263 dominates @xmath71 .",
    "now , we show that @xmath66 contains at most one vertex in each @xmath109 where @xmath194 .",
    "let @xmath251 be an individual in @xmath120 where @xmath194 .",
    "since @xmath264 , in order to eliminate each @xmath251 , at most @xmath3 individuals that qualify @xmath251 can be in @xmath242 . according to the construction of the profile , all the @xmath204",
    "dummy individuals in @xmath265 qualify @xmath251 . moreover ,",
    "all individuals in @xmath266 qualify @xmath251 . according to the above discussion , at most one of the individuals in @xmath266",
    "can be in @xmath242 .",
    "due to the definition of @xmath15 , this implies that @xmath107 .",
    "now , it is easy to see that @xmath66 is a solution of the instance @xmath267 .",
    "we have studied the complexity of gcai , gcdi and gcpi for several well - studied social rules , including the liberal rule , the consent rules and the csr and lsr rules , where in each problem an external agent has an incentive to make a given subset of individuals socially qualified by adding / deleting / partition of individuals . in particular , we achieved dichotomy results for all three group control problems for consent rules , with respect to the values of the consent quotas . see table  [ tab : dichtomyforconsetrules ] for a summary of these results .",
    "in addition , we studied the np - hard problems from the parameterized complexity point of view , with respect to the size of @xmath8 , the set of individuals whom the external agent wants to make socially qualified .",
    "we proved that gcai and gcdi for consent rules are generally fpt .",
    "for gcpi , however , we proved it remains np - hard for some consent rules even when @xmath189 , excluding the possibility that gcpi for consent is fpt , unless the parameter hierarchy collapse at some level .",
    "we thank the anonymous reviewers of comsoc 2016 for their constructive comments . in addition , we thank shao - chin sung for his valuable comments on a draft of this paper .",
    "10    h.  aziz , s.  gaspers , j.  gudmundsson , s.  mackenzie , n.  mattei , and t.  walsh .",
    "computational aspects of multi - winner approval voting . in _ aamas _ , pages 107115 , 2015 .",
    "j.  bang - jensen and g.  gutin . .",
    "springer - verlag , london , 2008 .",
    "2nd edition .",
    "d.  baumeister , g.  erdlyi , e.  hemaspaandra , l.  a. hemaspaandra , and j.  rothe . , chapter  10 , pages 199251 .",
    "handbook on approval voting .",
    "springer berlin heidelberg , 2010 .",
    "d.  b.west . .",
    "prentice - hall , 2st , edition , 2000 .",
    "d.  dimitrov .",
    "the social choice approach to group identification . in _ consensual processes _ , pages 123134 .",
    "d.  dimitrov , s.  c. sung , and y.  xu .",
    "procedural group identification .",
    ", 54(2):137146 , 2007 .",
    "r.  g. downey and m.  r. fellows . .",
    "springer , 1999 .",
    "r.  g. downey and m.  r. fellows . .",
    "texts in computer science .",
    "springer , 2013 .",
    "p.  faliszewski , e.  hemaspaandra , and l.  a. hemaspaandra .",
    "using complexity to protect elections .",
    ", 53(11):7482 , 2010 .",
    "p.  faliszewski and a.  d. procaccia .",
    "s war on manipulation : are we winning ?",
    ", 31(4):5364 , 2010 .",
    "p.  c. fishburn and s.  j. brams .",
    "pproval voting , condorcet s principle , and runoff elections .",
    ", 36(1):89114 , 1981 .",
    "a.  frank and @xmath268 .",
    "an application of simultaneous diophantine approximaiton in combinatorial optimazation .",
    ", 7(1):4965 , 1987 .",
    "m.  r. garey and d.  s. johnson . .",
    "w. h. freeman , new york , 1979 .",
    "t.  f. gonzalez .",
    "clustering to minimize the maximum intercluster distance .",
    ", 38:293306 , 1985 .    , c.  a. tovey , and m.  a. trick .",
    "how hard is it to control an election ? , 16(8 - 9):2740 , 1992 .",
    "r.  kannan .",
    "minkowski s convex body theory and integer programming .",
    ", 12:415440 , 1987 .",
    "d.  m. kilgour and e.  marshall .",
    "approval balloting for fixed - size committees . in d.  s. felsenthal and m.  machover , editors ,",
    "_ electoral systems _ , studies in choice and welfare , pages 305326 .",
    "springer berlin heidelberg , 2012 .",
    "h.  w. lenstra .",
    "integer programming with a fixed number of variables .",
    ", 8(4):538548 , 1983 .",
    "a.  p. lin .",
    "the complexity of manipulating @xmath50-approval elections . in _",
    "icaart ( 2 ) _ , pages 212218 , 2011 .",
    "http://arxiv.org/abs/1005.4159 .",
    "a.  d. miller . group identification .",
    ", 63(1):188202 , 2008 .",
    "h.  nicolas .",
    " i want to be a j ! \" : liberalism in group identification problems .",
    ", 54(1):5970 , 2007 .",
    "r.  niedermeier . .",
    "oxford university press inc , 2006 .",
    "d.  samet and d.  schmeidler . between liberalism and democracy .",
    ", 110(2):213233 , 2003 .",
    "y.  yang and j.  guo .",
    "the control complexity of @xmath269-approval : from the single - peaked case to the general case . in _ aamas _ , pages 621628 , 2014 .",
    "y.  yang and j.  guo .",
    "controlling elections with bounded single - peaked width . in _ aamas _ , pages 629636 , 2014 .",
    "y.  yang and j.  guo . how hard is control in multi - peaked elections : a parameterized study . in _",
    "aamas _ , pages 17291730 , 2015 .",
    "the appendix is devoted to the proof of lemma  [ lem : multicolorredbluedominatingisnphard ] .",
    "in particular , we prove the np - hardness of the problem by a reduction from the problem which is np - hard  @xcite .",
    "let @xmath271 be an instance of the problem .",
    "we construct an instance @xmath272 for the problem as follows . for each vertex @xmath273",
    ", we create a vertex @xmath274 . for each vertex @xmath275",
    ", we create @xmath50 vertices @xmath276 , where the vertex @xmath277 is labeled with @xmath110 .",
    "let @xmath109 be the set of the vertices in @xmath80 that have label @xmath110 .",
    "the edges of the graph @xmath235 are defined as follows .",
    "if there is an edge @xmath278 , then for every @xmath194 we create an edge between @xmath277 and @xmath279 .",
    "this finishes the construction .",
    "it clearly takes polynomial time .",
    "suppose that @xmath280 has a solution @xmath91 of size @xmath281 .",
    "let @xmath282 be any arbitrary order of the vertices in @xmath91 .",
    "let @xmath283 .",
    "it is clear that no two vertices in @xmath66 have the same label , that is , @xmath107 for every @xmath194 .",
    "we shall show that @xmath66 dominates @xmath71 .",
    "let @xmath69 be a vertex in @xmath284 .",
    "since @xmath91 dominates @xmath284 , there is a vertex @xmath285 such that @xmath286 .",
    "then , according to the construction of @xmath235 , we know that @xmath287 .",
    "since this holds for every @xmath273 , @xmath66 dominates @xmath71 .",
    "suppose that @xmath75 has a solution @xmath66 .",
    "we assume that for every @xmath275 , @xmath66 contains at most one of @xmath288 .",
    "indeed if @xmath66 contains two vertices @xmath277 and @xmath289 where @xmath290 , then we could get a new solution @xmath291 for @xmath75 , since according to the construction of the graph @xmath235 , @xmath277 and @xmath289 have the same neighborhood , implying that a vertex in @xmath71 dominated by @xmath289 is dominated by @xmath277 .",
    "let @xmath292 .",
    "let @xmath69 be a vertex in @xmath284 . since @xmath66 is a solution of @xmath75 ,",
    "there is a vertex @xmath293 which dominates @xmath274 .",
    "then , according to the construction of the graph @xmath235 , the vertex @xmath294 dominates @xmath69 .",
    "it follows that @xmath91 dominates @xmath284 ."
  ],
  "abstract_text": [
    "<S> group identification models situations where a set of individuals are asked to determine who among themselves are socially qualified . in this paper , we study the complexity of three group control problems , namely , and for various social rules . in these problems , an external agent has an incentive to make a given subset of individuals socially qualified by adding , deleting or partition of individuals . </S>",
    "<S> we achieve both polynomial - time solvability results and np - hardness results . in addition </S>",
    "<S> , we study the np - hard problems from the parameterized complexity perspective , and obtain several fixed - parameter tractability results . </S>",
    "<S> on the other hand , we prove that some social rules are immune to these problems . </S>"
  ]
}
{
  "article_text": [
    "intuitionistic logic ( see e.g.  @xcite ) is a part of classical logic that can be proven using constructive proofs  e.g . by proofs that do not use _ reductio ad absurdum_. for example , the law of the excluded middle @xmath2 and the weak law of the excluded middle @xmath3 do not have constructive proofs and are not valid in intuitionistic logic .",
    "not surprisingly , constructivism has its costs . whereas the validity problem is @xmath4-complete for classical propositional logic  @xcite , for intuitionistic propositional logic it is @xmath5-complete  @xcite .",
    "the computational hardness of intuitionistic logic is already reached with the fragment that has only formulas with two variables : the validity problem for this fragment is already @xmath5-complete @xcite . recall that every fragment of classical propositional logic with a fixed number of variables has an @xmath1-complete validity problem ( follows from  @xcite ) .    in this paper",
    ", we consider the complexity of intuitionistic propositional logic @xmath6with one variable . the model checking problem  i.e . the problem to determine whether a given formula is satisfied by a given intuitionistic kripke model  for @xmath6is @xmath7-complete  @xcite , even for the fragment with two variables only @xcite .",
    "more surprisingly , for the fragment with one variable @xmath8we show the model checking problem to be @xmath0-complete . to our knowledge",
    ", this is the first `` natural '' @xmath0-complete problem , whereas formerly known @xmath0-complete problems ( see e.g.  @xcite ) have some explicit logarithmic bound in the problem definition . a basic ingredient for the @xmath0-completeness lies in normal forms for models and formulas as found by nishimura @xcite , that we reinvestigate under an algorithmic and complexity theoretical point of view .",
    "in contrast , the formula value problem for classical propositional logic is @xmath1-complete  @xcite independent of the number of variables .",
    "classical propositional logic is the extension of @xmath6with the axiom @xmath9 .",
    "those proper extensions of intuitionistic logic are called superintuitionistic logics .",
    "the superintuitionistic logic @xmath10(see @xcite ) results from adding @xmath3 to @xmath6 .",
    "we show that the model checking problem for every superintuitionistic logic with one variable is @xmath1-complete ( and easier than that for @xmath8 ) .",
    "in contrast , for the superintuitionistic logic @xmath10with two variables it is known to be @xmath7-complete ( and as hard as for @xmath6with two variables ) @xcite .    as a byproduct",
    ", we also obtain results for the validity problem for intuitionistic and superintuitionistic logics with one variable .",
    "this paper is organized as follows . in section  [ sec : prelims ]",
    "we introduce the notations we use for intuitionistic logic and model checking .",
    "section  [ sec : rnprelims ] is devoted to introduce the old results by nishimura  @xcite and to upgrade them with a complexity analysis .",
    "the following section  [ sec : ac1haerte ] presents our lower and upper bound for model checking for @xmath8 .",
    "section  [ sec : superint1 ] deals with the complexity of the model checking problem and the validity problem for superintuitionistic logics with one variable .",
    "the implied completeness for the model checking for intuitionistic logic and conclusions are drawn in section  [ sec : conclusion ] .",
    "the notion of reducibility we use is the logspace many - one reducibility @xmath11 , except for @xmath1-hardness , where we use first - order reducibility . @xmath1and",
    "@xmath0are the classes of sets that are decided by families of logspace - uniform circuits of polynomial size and logarithmic depth .",
    "the circuits consist of , or- , and not - gates . the not - gates have fan - in @xmath12 . for @xmath1 ,",
    "the and- and or - gates have fan - in @xmath13 ( bounded fan - in ) , whereas for @xmath0there is no bound on the fan - in of the gates ( unbounded fan - in ) .",
    "@xmath14denotes the class of sets decided by alternating turing machines in logarithmic time , and we will use that @xmath15  ( see  @xcite ) . @xmath16denotes the class of sets decidable in logarithmic space .",
    "we use @xmath17}$ ] to denote the class of sets decided by an alternating logspace turing machine that makes @xmath18 alternations , where @xmath19 is the length of the input .",
    "we will use that @xmath20}}\\xspace}}$ ] ( see  @xcite ) . @xmath21is the class of sets that are @xmath11-reducible to deterministic context - free languages .",
    "it is also characterized as the class of sets decidable by deterministic turing machines in polynomial - time and logarithmic space with additional use of a stack @xcite .",
    "the inclusion structure of the classes we use is as follows .",
    "@xmath22      let @xmath23 denote a countable set of _ variables_. the language @xmath24of intuitionistic propositional logic is the same as that of propositional logic @xmath25 , i.e. it is the set of all formulas of the form    & : : = & p ( ) ( ) ( ) ,    where @xmath26 . for @xmath27 the languages @xmath28 are the subsets / fragments of @xmath24for which @xmath23 consists of @xmath29 variables . in this paper",
    "we mainly consider @xmath30 ( i.e. formulas with one variable ) .    as usual",
    ", we use the abbreviations @xmath31 and @xmath32 . because of the semantics of intuitionistic logic",
    ", one can not express @xmath33 or @xmath34 using @xmath35 and @xmath36 .",
    "an _ intuitionistic kripke model _ for intuitionistic logic is a triple @xmath37 , where @xmath38 is a nonempty and finite set of _ states _ , @xmath39 is a preorder on @xmath38 ( i.e. a reflexive and transitive binary relation ) , and @xmath40 is a function denotes the powerset of @xmath38.]the _ valuation function_. informally speaking , for any variable it assigns the set of states in which this variable is satisfied .",
    "the valuation function @xmath41 is monotone in the sense that for every @xmath42 , @xmath43 : if @xmath44 and @xmath45 , then @xmath46 .",
    "@xmath47 can also be seen as a directed graph .",
    "given an intuitionistic kripke model @xmath48 and a state @xmath49 , the _ satisfaction relation for intuitionistic logics _",
    "@xmath50 is defined as follows .",
    "@xmath51,s & & + @xmath51,s p & & s ( p ) ,   p , + @xmath51,s & & @xmath51,s @xmath51,s , + @xmath51,s & & @xmath51,s @xmath51,s , + @xmath51,s & & ns : , n , n    a formula @xmath52 is _ satisfied _ by an intuitionistic kripke model @xmath53 in state @xmath54 if @xmath55 .",
    "a _ tautology _ is a formula that is satisfied by every intuitionistic kripke model .",
    "such formulas are also called _",
    "valid_. from the monotonicity of @xmath41 and the definition of @xmath56 follows the monotonicity for every formula , i.e. for @xmath57 , @xmath58 and @xmath59 if @xmath60 , then @xmath61 .",
    "this paper examines the complexity of model checking problems for intuitionistic logics .",
    ".7em 1.5em by3em 0ex .2ex",
    "plus.1ex    @xmath62    @xmath63 , where @xmath64 , @xmath53 is an intuitionistic kripke model , and @xmath54 is a state of @xmath53    @xmath65 ?",
    "we assume that formulas and intuitionistic kripke models are encoded in a straightforward way .",
    "this means , a formula is given as a text , and the graph @xmath47 of an intuitionistic kripke model is given by its adjacency matrix that takes @xmath66 bits .",
    "the set @xmath30 of formulas with at most one variable is partitioned into infinitely many equivalence is _ equivalent _ to @xmath67 if every state in every intuitionistic kripke model satisfies both or none formula .",
    "we write @xmath68 . ]",
    "classes @xcite .",
    "this was shown using the formulas that are inductively defined as follows ( see e.g.@xcite ) .",
    "we use @xmath69 for the only variable . @xmath70",
    "the formulas @xmath71 are called _ rieger - nishimura formulas_.    ( @xcite , cf .",
    "( * ? ? ? * chap.6,thm.7))[thm : nish1 ] every formula in @xmath30 is equivalent to exactly one of the rieger - nishimura formulas .    the function @xmath72 maps every formula to the index of its equivalent rieger - nishimura formula .",
    "we call this index _ rieger - nishimura index_.    ( ) & = & \\ {    ccl ( i , ) , & & _ i + ( i , ) , & & _ i + ( 0 , ) , & & + ( 0 , ) , & &    .    in the following we analyse the complexity of @xmath72 .",
    "for @xmath64 let @xmath73 $ ] denote the equivalence class that contains @xmath52 .",
    "the equivalence classes of @xmath30 form a free heyting algebra over one generator ( for algebraic details see  @xcite ) .",
    "this algebra is also called the _ rieger - nishimura lattice _ ( see fig .  [",
    "fig : rn - lattice ] ) .",
    "it is shown in @xcite that the lattice operations can be calculated using a big table look - up ( see appendix  [ subsec : rn - lattice - operations ] ) . for @xmath74 ,",
    "the binary lattice operators @xmath75 , @xmath76 and @xmath77 are defined as follows .",
    "@xmath78 \\sqcap [ \\beta ] = [ \\alpha \\wedge \\beta]$ ] , @xmath78 \\sqcup [ \\beta ] = [ \\alpha \\vee \\beta]$ ] , and @xmath78 \\rightarrowtriangle [ \\beta ] = [ \\delta]$ ] , where @xmath79 $ ] is the largest element w.r.t . @xmath80 ( @xmath81 ) . ] with @xmath82,[\\delta]\\ } \\sqsubseteq [ \\beta]$ ] . is called the _ relative pseudo - complement operation_. ] we use the algebraic properties of @xmath8to give a lower bound on the length of formulas denotes the length of the formula @xmath83 , and it is the number of appearances of variables , connectives , and constants in @xmath83 . ] in the equivalence classes of @xmath30 ( lemma  [ lem : formulalength ] ) , and to give an upper bound on the complexity of the problem to decide the rieger - nishimura index of a formula ( lemma  [ lem : rnf_eqtest ] ) .",
    "let @xmath84 be the first element  the integer  of the @xmath85 pair .",
    "[ lem : formulalength ] for every @xmath64 it holds that @xmath86 , for a constant @xmath87 independent of @xmath52 .",
    "the proof relies on the following technical claim .",
    "let @xmath88 denote the @xmath19-th fibonacci number , @xmath89 , and @xmath90 for @xmath91 . ] .",
    "[ clm : fib ] let @xmath92",
    ". then @xmath93 .",
    "_ proof of claim .",
    "_ for formulas @xmath94\\cup[\\top]$ ] it holds that @xmath95 . for formulas not in @xmath96\\cup[\\top]$ ] , we prove the claim by induction on the length of @xmath83 .",
    "the only relevant formula of length @xmath12 is @xmath97 . since @xmath98 and @xmath89 , the statement holds .",
    "for the induction step let @xmath99\\cup[\\top])$ ] with @xmath100 and @xmath101 with @xmath102",
    ". then @xmath103 , and using the induction hypothesis we obtain @xmath104 .",
    "we have to distinguish the following cases .",
    "( for the lattice operations see appendix  [ subsec : rn - lattice - operations ] . )    * @xmath105 $ ] .",
    "* due to the fact that @xmath106\\cup [ \\top]$ ] it follows that @xmath107 .",
    "if @xmath108 , clearly @xmath109 $ ] and @xmath110 . with the induction hypothesis it follows that @xmath111 .",
    "otherwise if @xmath112 , it follows that @xmath113\\cup [ { \\upvarphi}_2 ] \\cup [ { \\uppsi}_1]$ ] and @xmath114 \\cup [ { \\upvarphi}_1]$ ]",
    ". hence @xmath115 .",
    "* @xmath116 $ ] . *",
    "this leads to @xmath108 and can be treated analogously to the case @xmath105 $ ] . * @xmath117 $ ] ( resp .",
    "* remember that @xmath119 $ ] , hence independent of the choice of @xmath120 it holds that @xmath78=[\\gamma]$ ] ( resp .",
    "@xmath78=[\\beta]$ ] and it follows that @xmath121 . * the remaining cases . * with the induction hypothesis it follows that @xmath122 . with respect to the rieger - nishimura lattice",
    ", we have to handle two cases .",
    "* * @xmath123 or @xmath124 . *",
    "* in this case it is not hard to see that @xmath125 .",
    "* * @xmath126 and @xmath127 . * * in this case it holds that one of the ranks of @xmath67 and @xmath128 needs to be @xmath129 and the other @xmath130 .",
    "( see appendix  [ subsec : rn - lattice - operations ] , for example @xmath131 respectively @xmath132 \\rightarrowtriangle [ { \\uppsi}_{k-2 } ] = [ { \\upvarphi}_k]$ ] for @xmath133 . )",
    "therefore it holds that @xmath134 .",
    "@xmath135    claim [ clm : fib ] shows @xmath136 . because of the exponential growth of the fibonacci numbers ( @xmath137 where @xmath138 denotes the golden ratio ) it follows that @xmath139 where @xmath87 is independent of @xmath52 .",
    "@xmath140    in order to analyse the complexity of the rieger - nishimura index computation , we define the following decision problem .    .7em 1.5em by3em 0ex .2ex",
    "plus.1ex    @xmath141 , where @xmath92 and @xmath142 is a rieger - nishimura index    @xmath143 ?",
    "[ lem : rnf_eqtest ] @xmath144 is in @xmath145 .",
    "we form algorithm  [ alg : eq_rn_formula ] based on the rieger - nishimura lattice of the equivalence classes of @xmath30 . the lattice and the lattice operations @xmath75 , @xmath76 and @xmath77 are described in appendix  [ subsec : rn - lattice - operations ] .",
    "we can analogously define the lattice operations @xmath75 , @xmath76 and @xmath77 for the rieger - nishimura indices instead of the equivalence classes and @xmath146 .",
    "we set @xmath147 if @xmath78 \\star [ \\beta ] = [ \\gamma]$ ] and @xmath148 . ] .",
    "the correctness of algorithm [ alg : eq_rn_formula ] is straightforward because the lattice operations for equivalence classes and indices are the same .",
    "with lemma [ lem : formulalength ] it follows that every variable value used in algorithm [ alg : eq_rn_formula ] can be stored in logarithmic space .",
    "the algorithm walks recursively through the formula and computes the index of every subformula once , hence running time is polynomial .",
    "all information that are necessary for recursion can be stored on the stack .",
    "therefore algorithm  [ alg : eq_rn_formula ] can be implemented on a polynomial time logspace machine that uses an additional stack , i.e. a @xmath21-machine .",
    "@xmath140    a formula @xmath149 and a rieger - nishimura index @xmath142 * if * rnindex - calc@xmath150 * then * accept * else * reject    * function * rnindex - calc(@xmath151 ) // returns a rieger - nishimura index      similar as any formula can be represented by its index , intuitionistic kripke models can be represented , too .",
    "we give a construction of models  the _ canonical models_that are also used to distinguish the formula equivalence classes ( theorem [ thm : rieger - nishimura ] ) .",
    "our definition differs a little bit from that in ( * ? ? ? * chap.6 , defi.5 ) . from theorems  [ thm : rieger - nishimura ] and",
    "[ lem : hom_heytmodel ] it follows that every state @xmath54 in every intuitionistic kripke model @xmath53 over one variable has a unique corresponding canonical model @xmath152 in the sense that the state @xmath54 and the base state @xmath19 of @xmath152 satisfy exactly the same formulas .",
    "this was already shown in ( * ? ? ?",
    "* chap.6 , lemma 11 ) .",
    "further define a function @xmath153 that maps @xmath154 to @xmath19 . for @xmath155",
    ", we define the canonical models @xmath156 as follows .",
    "w_n & : = & \\{1,2,  ,n-2}\\{n } + & : = & \\ { ( a , b ) a , b w_n , a = b a b+2 } + [ + 5px ] _",
    "n(a ) & : = &    , & n=2 + \\{1 } , &    see figure  [ fig : heyting models ] for some examples .     and @xmath157 ( reflexive and transitive edges are not depicted , @xmath158 is indicated by the double circle for state @xmath12 ) . ]    @xmath159     and @xmath157 ( reflexive and transitive edges are not depicted , @xmath158 is indicated by the double circle for state @xmath12 ) . ]",
    "@xmath157    the formulas in @xmath30 can be distinguished using the canonical models as follows .",
    "( @xcite , cf .",
    "* chap.6 , thm.8))[thm : rieger - nishimura ] for every @xmath155 and every @xmath160 it holds that :    1 .",
    "@xmath161  iff   @xmath162 ( i.e. @xmath163 ) ,  and 2 .",
    "@xmath164  iff   @xmath165 or @xmath166 ( i.e. @xmath167 ) .    for analysing the complexity of the decision problem whether a canonical model is the corresponding model of a state of an arbitrary given intuitionistic kripke model we define a function @xmath153 .",
    "the function @xmath153 maps a given intuitionistic kripke model @xmath53 and state @xmath168 of @xmath53 to the index @xmath29 of the corresponding model @xmath169 .",
    "let @xmath170 be an intuitionistic kripke model and @xmath168 a state of @xmath53 .",
    "we define two abbreviations for @xmath171 .",
    "w_w & : = & \\{vwwv } + w_w & : = & w_w \\{w }    the function @xmath153 is defined as follows .    @xmath172        2 ,      & \\mbox{~if } & \\mbox{$w\\not\\in\\zeta(a)$ and $ \\forall v \\in w_{w{\\!\\uparrow } } : v\\not\\in\\zeta(a)$ } \\\\[3px ]        3 ,      & \\mbox{~if } & \\mbox{$w\\not\\in\\zeta(a)$ and $ \\forall v \\in w_{w{\\!\\uparrow } } : { \\mathpzc{h}}({\\ensuremath{\\mathcal{m}}},v ) \\neq 2 $ and }   \\\\               &                       & \\mbox{$\\exists u\\in w_{w{\\!\\uparrow } } : { \\mathpzc{h}}({\\ensuremath{\\mathcal{m}}},u)=1 $ } \\\\[3px ]        n+2 , & \\mbox{~if } & \\mbox{$\\forall v\\in w_{w{\\!\\uparrow } } : { \\mathpzc{h}}({\\ensuremath{\\mathcal{m}}},v ) \\neq n+1 $ and}\\\\               &                       & \\mbox{$\\exists u_1,u_2 \\in w_{w{\\!\\uparrow } } : { \\mathpzc{h}}({\\ensuremath{\\mathcal{m}}},u_1)=n$ and $ { \\mathpzc{h}}({\\ensuremath{\\mathcal{m}}},u_2)=n-1 $ } \\\\",
    "\\end{array }     \\right.\\ ] ] we call @xmath173 the _ model index _ of @xmath168 in @xmath53 .",
    "the function @xmath153 is well defined because for every state @xmath168 it holds that @xmath174 .",
    "[ lem : hom_heytmodel][thm : hom_heytmodel ] let @xmath53 be an intuitionistic kripke model , @xmath168 a state of @xmath53 , and @xmath160 .",
    "then it holds that    @xmath51,w _ k & & k ( @xmath51,w ) + @xmath51,w _ k & & k > ( @xmath51,w ) k = ( @xmath51,w)-1",
    ".    from theorem  [ thm : rieger - nishimura ] follows that ( 1 ) is equivalent to the following claim .",
    "let @xmath53 be an intuitionistic kripke model and @xmath168 a state of @xmath53 .",
    "for every rieger - nishimura formula @xmath83 it holds that @xmath175 if and only if @xmath176 .",
    "_ proof of claim .",
    "_ we prove this by induction on the rank @xmath84 of @xmath83 .",
    "let @xmath170 be an intuitionistic kripke model , @xmath171 a state , and @xmath83 a rieger - nishimura formula .",
    "the case @xmath177 is clear . for the induction step",
    "we consider a formula @xmath83 with @xmath178 .",
    "we distinguish two cases .",
    "the case @xmath179 is clear because @xmath180 and the claim follows directly from the induction hypothesis . in the second case",
    "we have @xmath181 .    &",
    "@xmath51,w _ k (=",
    "_ k-1 _ k-1 ) & ( 1 ) + & vw , w v : @xmath51,v _",
    "k-1 @xmath51,v _ k-1 & ( 2 ) + & vw , w v : _ ( @xmath51,v),(@xmath51,v ) _ k-1 & + & _ ( @xmath51,v),(@xmath51,v ) _ k-1 & ( 3 ) + & xw_(@xmath51,w ) : _ x , x _",
    "x , x _ k-1 & ( 4 ) + & xw_(@xmath51,w ) : _ ( @xmath51,w),x _ k-1 _ ( @xmath51,w),x _ k-1 & ( 5 ) + & _ ( @xmath51,w),(@xmath51,w ) _ k-1 _ k-1 (= _ k ) & ( 6 )    the equivalence between ( 1 ) and ( 2 ) is clear due to the definition of @xmath35 . from the induction hypothesis",
    "follows the equivalence between ( 2 ) and ( 3 ) .",
    "( 3 ) and ( 4 ) are equivalent because @xmath182 .",
    "the definition of the canonical models , i.e. @xmath183 is a submodel of @xmath184 , causes the equivalence between ( 4 ) and ( 5 ) .",
    "the last equivalence between ( 5 ) and ( 6 ) comes from the definition of @xmath35 and the properties of @xmath184",
    ".  @xmath135@xmath140",
    "we first define an @xmath0-hard graph problem , that is similar to the @xmath7-complete alternating graph accessibility problem @xcite , but has some additional simplicity properties .",
    "then we give a construction that transforms such a graph into an intuitionistic kripke model .",
    "this transformation is the basis for the reduction from the alternating graph accessibility problem to the model checking problem for @xmath8 .",
    "the alternating graph accessibility problem is shown to be @xmath7-complete in @xcite .",
    "we use the following restricted version of this problem that is very similar to boolean circuits with and- and or - gates ( and input - gates ) . an _ alternating slice graph _",
    "@xcite @xmath185 is a directed bipartite acyclic graph with a bipartitioning @xmath186 , and a further partitioning @xmath187 ( @xmath188 _ slices _ , @xmath189 if @xmath190 ) where @xmath191 and @xmath192 , such that @xmath193  i.e. all edges go from slice @xmath194 to slice @xmath195 ( for @xmath196 ) .",
    "all nodes excepted those in the last slice @xmath197 have a positive outdegree .",
    "nodes in @xmath198 are called _ existential _ nodes , and nodes in @xmath199 are called _ universal _ nodes .",
    "alternating paths from node @xmath200 to node @xmath201 are defined as follows by the property @xmath202 .",
    "1 ) : :    @xmath203 holds for all    @xmath204 2a ) : :    for @xmath205 :    @xmath202  iff     @xmath206 2b ) : :    for @xmath207 :    @xmath202  iff     @xmath208    the problem is similar to the alternating graph accessibility problem , but for the restricted class of alternating slice graphs .    .7em",
    "1.5em by3em 0ex .2ex",
    "plus.1ex    @xmath209 , where @xmath210 is an alternating slice graph with slices @xmath211 , and @xmath212 , @xmath213    does @xmath214 hold ?",
    "similarly as the alternating graph accessibility problem , is @xmath7-complete ( * ? ? ?",
    "* lemma 2 ) .",
    "the following technical lemma is not hard to prove .",
    "[ lemma : asagap - ac1-hard ] for every set @xmath215 in ( logspace - uniform ) @xmath216 exists a function @xmath217 that maps instances @xmath200 of @xmath215 to instances @xmath218 of @xmath219 and satisfies the following properties .    1 .",
    "@xmath217 is computable in logspace .",
    "@xmath220 is an alternating slice graph of logarithmic depth ; i.e.  if @xmath220 has @xmath19 nodes , then it has @xmath221 slices .",
    "3 .   for all instances",
    "@xmath200 of @xmath215 holds : @xmath222 if and only if @xmath223 .",
    "essentially , the function @xmath217 constructs the @xmath0circuit @xmath224 with input @xmath200 , and transforms it to an alternating slice graph @xmath220 . the goal node @xmath225 represents exactly the bits of @xmath200 that are @xmath12 .",
    "the start node @xmath226 corresponds to the output gate of @xmath224 , and @xmath227 expresses that @xmath224 accepts input @xmath200 .",
    "if we consider @xmath228 as the subset of where the slice graphs have logarithmic depth , this lemma would express that @xmath228 is @xmath216-hard under logspace reductions .",
    "our hardness results rely on a transformation of instances @xmath229 of to intuitionistic kripke models @xmath230 .",
    "let @xmath229 be an instance of for the slice graph @xmath231 with the @xmath188 slices @xmath232 and @xmath233 .    for every @xmath234 , we construct two sets of new states    w_i^ & : = & \\{v^ vv_i } + w_i^ & : = & \\{v^ vv_i }    and let    w & : = & _ i=0^m-1 ( w_i^ w_i^ ) .",
    "every edge @xmath235 from @xmath236 is transformed to an edge @xmath237 from an @xmath238-node to an @xmath239-node , and every @xmath239-node has an edge to its corresponding @xmath238-copy .",
    "this yields the set of edges    e & : = & \\{(u^,v^)(u , v)e_g } \\{(v^,v^ ) vv_v _ }  .",
    "let @xmath240 be the graph obtained in this way from @xmath241 .",
    "if we consider those nodes @xmath242 as @xmath243-nodes ( resp .",
    "@xmath244-nodes ) that come from nodes @xmath245 ( resp .",
    "@xmath246 ) , then @xmath247 if and only if @xmath248 .    next , we add the nodes of the canonical model @xmath249 to @xmath250 as follows .",
    "add the nodes @xmath12 and @xmath13 to @xmath251 , the nodes @xmath252 and @xmath253 to @xmath254 , the nodes @xmath255 and @xmath256 to @xmath257 etc .",
    "formally , for @xmath258 , let    s_i^ & : = & w_i^ \\{4 i+1 , 4 i+2 } , + s_i^ & : = & w_i^ \\{4 i+3 , 4 i+4 } + s_m-1^ & : = & w_m-1^ \\{4m}.    the set of states for our model is now    u & : = & _ i=0^m-1 ( s_i^ s_i^ )  .",
    "note that @xmath259 is still a slice graph with slices @xmath260 .",
    "we yet have no edges that connect to nodes from the canonical model .",
    "first we add only those edges between these nodes that do not disturb the `` slice graph '' property , namely    h & : = & \\{(i , i-2 ) i\\{3,4,  ,4m-2}\\{4 m } } + & & \\{(i , i-3 ) i\\{4,6,  ,4m-2,4m}}.    note that @xmath261 consists of the edges from @xmath262 that give the canonical model its typical structure , i.e. @xmath263 is the transitive closure of @xmath261 .",
    "second we add edges from every node in @xmath264 to a node in the neighboured slice @xmath265 from @xmath262 depending on whether @xmath266 or @xmath267 if @xmath267 and vice versa . ] .",
    "t _ & : = & \\ { ( u,4i+2 ) uw^_i , i=0,1,2,  ,m-1 } + t _ & : = & \\ { ( u,4i-1 ) u w^_i , i=1,2,  ,m-1 }    notice that @xmath268 is still a slice graph with the slices mentioned above .",
    "it is depicted in figure  [ fig : agap - example13 ] ) .",
    "an intuitionistic kripke model must be transitive and reflexive .",
    "the reduction function that transforms alternating slice graphs to intuitionistic kripke models must be computable in logarithmic space . within this space bound",
    "we can not compute the transitive closure of a graph .",
    "therefore , we make the graph transitive with brute force .",
    "we add all edges that jump over at least one slice ",
    "we call these edges _ pseudotransitive_.    p & : = & _ i = m-1 ^ 1    finally , we need to add all reflexive edges .",
    "t & : = & \\{(u , u ) uu }    notice that the subgraph induced by the states of the canonical model @xmath262 that consists of the edges in @xmath261 plus the pseudotransitive and the reflexive edges , is exactly @xmath262 .    eventually , the relation @xmath39 for our model is    r & : = & e h t _",
    "pt ,    and the valuation function for our model is    \\(a ) & : = & \\{t^,1 } ,    where @xmath269 is the copy of the goal node @xmath270 in @xmath251 , and @xmath271 is the node from @xmath262 .",
    "this yields the intuitionistic kripke model @xmath272 .",
    "an example of an instance @xmath209 and the corresponding intuitionistic kripke model @xmath273 constructed from it can be seen in figure  [ fig : agap - example13 ] .",
    "( left ) and the resulting intuitionistic kripke model @xmath273 ( right ) ; both the states in @xmath274 are drawn doubly ; pseudotransitive and reflexive edges in @xmath273 are not depicted .",
    "the value at state @xmath200 denotes its model index @xmath275 . for states in @xmath276 ,",
    "their names and their model indices coincide .",
    "states @xmath277 and @xmath278 for which @xmath279 holds in @xmath241 are coloured grey .",
    ", title=\"fig : \" ]   ( left ) and the resulting intuitionistic kripke model @xmath273 ( right ) ; both the states in @xmath274 are drawn doubly ; pseudotransitive and reflexive edges in @xmath273 are not depicted .",
    "the value at state @xmath200 denotes its model index @xmath275 . for states in @xmath276 , their names and",
    "their model indices coincide .",
    "states @xmath277 and @xmath278 for which @xmath279 holds in @xmath241 are coloured grey .",
    ", title=\"fig : \" ]    the states from the canonical model were added to the slice graph in order to obtain control over the model indices of the other states ( w.r.t . the model @xmath273 ) .",
    "our controlling tool is the function @xmath153 which is defined in the previous section .",
    "it maps every state of an intuitionistic kripke model to its model index .",
    "this is described by proposition  [ claim : h - werte - der - slices ] and proposition  [ claim : knoteneigenschaften ] .",
    "[ claim : h - werte - der - slices ] for every @xmath234 and every @xmath280 holds @xmath281    we prove this by induction on the slices . for the base case we consider @xmath282 , where we have @xmath283 if @xmath284 , and @xmath285 if @xmath286 , and therefore @xmath287 .    for the induction step , we consider the remaining slices .    for @xmath288",
    ", we have @xmath289 and @xmath290 for some @xmath291 . by the induction hypothesis it follows that @xmath292 for all @xmath293 . by the definition of @xmath153 it follows that @xmath294 .    for @xmath295",
    ", we have @xmath296 .",
    "by the induction hypothesis we know that for all @xmath290 with @xmath297 holds @xmath298 , and @xmath299 for all @xmath300 .",
    "now , if for some @xmath301 holds @xmath302 , then @xmath278 has successors with model indices @xmath303 and @xmath304 and by the definition of @xmath153 it follows that @xmath305 . otherwise , for all @xmath301 holds @xmath306 , and @xmath278 has no successor with model index @xmath303 but successors with model indices @xmath307 and @xmath304 . by the definition of @xmath153 it now follows that @xmath308 . @xmath140",
    "[ claim : knoteneigenschaften ] for every @xmath234 and every @xmath280 holds :    1 .",
    "if @xmath29 is even ( @xmath244 slice ) : +  @xmath279 if and only if @xmath308 ,  and +  @xmath279 if and only if @xmath309 , + 2 .   if @xmath29 is odd ( @xmath243 slice ) : +  @xmath279 if and only if @xmath305 ,  and +  @xmath279 if and only if @xmath310 .",
    "we prove this proposition by induction on @xmath29 .",
    "the initial step for @xmath311 follows directly from the definition of @xmath273 .",
    "now for the induction step .",
    "consider @xmath280 for even @xmath29 ( @xmath244 slice ) .",
    "& _ g(v , t ) & ( 1 ) + & wv_i-1 , ( v , w ) e_g : _ g(w , t ) & ( 2 ) + & w^w^_i-1 , ( v^ , w^)r : ( @xmath51_g , w^)=4i-2 & ( 3 ) + & \\{(@xmath51_g , u ) uu_v^out } = \\{1,2,  ,4i-1 } & ( 4 ) + & ( @xmath51_g , v^)=4i+1 & ( 5 )    \\(1 ) and ( 2 ) are equivalent by the definition of @xmath312 . the equivalence of ( 2 ) and ( 3 ) comes from the construction of @xmath273 and the induction hypothesis . to show the equivalence of ( 3 ) and ( 4 ) we prove both the directions separately .",
    "first we show ( 3 ) @xmath313 ( 4 ) . because of ( 3 ) there is no @xmath314 with @xmath315 .",
    "if @xmath316 , then ( 4 ) follows directly .",
    "for @xmath307 it follows directly from ( 3 ) . if @xmath317 , then @xmath318 .",
    "because of ( 3 ) , it is not possible that @xmath319 . and",
    "@xmath320 is inconsistent with proposition  [ claim : h - werte - der - slices ] . hence @xmath321 .",
    "for the second direction , ( 4 ) @xmath313 ( 3 ) , assume that there is some @xmath314 with @xmath322 . then from proposition  [",
    "claim : h - werte - der - slices ] it follows that @xmath323 but this is inconsistent with ( 4 ) .",
    "hence ( 3 ) and ( 4 ) are equivalent .",
    "( 4 ) equivalent ( 5 ) by the construction of @xmath273 and the definition of @xmath153 .    by proposition",
    "[ claim : h - werte - der - slices ] we know that @xmath324 . remind that @xmath277 has @xmath278 and @xmath325 as its direct successors and @xmath308 .",
    "therefore , @xmath279 if and only if @xmath326 , where the latter is equivalent @xmath309 .",
    "finally , we consider @xmath280 for odd @xmath29 ( @xmath243 slice ) .    & _ g(v , t ) & ( 1 ) + & wv_i-1 , ( v , w)e_g : _",
    "g(w , t ) & ( 2 ) + & w^w^_i-1 , ( v^ , w^)r : ( @xmath51_g , w^)=4i & ( 3 ) + & \\{4i-1,4i}\\{(@xmath51_g , u ) uu_v^}\\{1,2,  ,4i } & ( 4 ) + & ( @xmath51_g , v^)=4i+2 & ( 5 )    \\(1 ) and ( 2 ) are equivalent by the definition of @xmath312 .",
    "the equivalence of ( 2 ) and ( 3 ) comes from the construction of @xmath273 and the induction hypothesis . as in the case above ( @xmath29 is even ) the equivalence of ( 3 ) and ( 4 ) follows from the construction of @xmath273 and proposition  [ claim : h - werte - der - slices ] . ( 4 ) equivalent ( 5 ) by the construction of @xmath273 and the definition of @xmath153 .    by proposition  [ claim : h - werte - der - slices ] we know that @xmath324 .",
    "remind that @xmath277 has @xmath278 and @xmath325 as its direct successors . therefore , @xmath279 if and only if @xmath327 , where the latter is equivalent @xmath310 .",
    "@xmath140    let @xmath328 denote the function that maps instances @xmath329 of @xmath219 to intuitionistic kripke models @xmath330 as described above .",
    "the following properties of @xmath328 are easy to verify .",
    "[ transformation - lemma ]     1 .",
    "@xmath328 is logspace computable .",
    "if @xmath329 for an alternating slice graph @xmath241 with @xmath19 nodes and @xmath331 slices , then @xmath332 is an intuitionistic kripke model with @xmath333 states and depth @xmath334 .",
    "we will use @xmath328 as part of the reduction functions for our hardness results .",
    "[ sec : upper bounds ]    our first result states that the calculation of the model index of an intuitionistic kripke model is @xmath7-complete .",
    "it is already @xmath7-complete to decide the last bit of this model index .",
    "[ thm : hm - phard ] the following problems are @xmath7-complete .    1 .   given an intuitionistic kripke model @xmath53 and a state @xmath168 , decide whether @xmath173 is even",
    ". 2 .   given an intuitionistic kripke model @xmath53 , a state @xmath168 , and an integer @xmath29 ,",
    "decide whether @xmath335 .",
    "in order to show the @xmath7-hardness of the problems , we give a reduction from the @xmath7-hard problem . from an instance @xmath209 of where @xmath241 is an alternating slice graph with @xmath188 slices , construct @xmath336 .",
    "then @xmath337 ( proposition  [ claim : h - werte - der - slices ] ) , and @xmath214 if and only if @xmath338 ( proposition  [ claim : knoteneigenschaften ] ) .",
    "therefore , @xmath339 if and only if @xmath340 is even respectively @xmath338 .    for",
    "every intuitionistic kripke model @xmath341 it holds that @xmath342 . to decide for",
    "a given intuitionistic kripke model @xmath53 , a state w of @xmath53 , and an integer @xmath19 the problem `` does @xmath343 hold ? ''",
    "is in @xmath344}$ ] .",
    "the function @xmath153 can be implemented according to its definition straightforwardly as a logarithmically space bounded alternating algorithm .",
    "it requires an alternation depth of at most @xmath19 due to the construction of @xmath153 . using that @xmath345}}\\xspace}}$ ] @xcite then it follows that both problems are in @xmath7 .",
    "@xmath140    in the construction of the above proof , the decision whether @xmath338 is the same as to decide whether @xmath346 , for the rieger - nishimura formula @xmath347 ( theorems  [ thm : rieger - nishimura ] and [ lem : hom_heytmodel ] ) .",
    "unfortunately , the length of @xmath347 is exponential in @xmath188 ( lemma  [ lem : formulalength ] ) , and therefore the mapping from @xmath209 ( with @xmath188 slices ) to the model checking instance @xmath348 can not in general be performed in logarithmic space .",
    "but if the depth @xmath188 of the slice graph is logarithmic , the respective formula @xmath347 has polynomial size only and the reduction works in logarithmic space .",
    "[ thm : ipc1-is - aci - hard ] the model checking problem for @xmath349 is @xmath0-hard .",
    "let @xmath350 be in @xmath216 .",
    "by lemma  [ lemma : asagap - ac1-hard ] there exists a logspace computable function @xmath351 such that for all instances @xmath200 of @xmath350 , @xmath352 if and only if @xmath353 , where @xmath354 for an alternating slice graph @xmath220 with @xmath355 nodes and @xmath356 slices .",
    "the following function @xmath357 reduces @xmath350 to the model checking problem for @xmath8 .",
    "r(x ) & = & _ 4m_x+2 , g(f_b(x ) ) , s_x^    _ @xmath357 can be computed in logspace . _",
    "since @xmath351 is logspace computable , it follows that @xmath358 and @xmath359 can be computed in logspace .",
    "the rieger - nishimura formula @xmath360 can also be computed in logspace , because @xmath361 is logarithmic in @xmath362 and therefore @xmath360 has length polynomial in @xmath362 .    _",
    "@xmath350 logspace reduces to the model checking problem for @xmath8via the reduction function @xmath357 .",
    "_ by propostion  [ claim : knoteneigenschaften ] we have that @xmath363 if and only if @xmath364 . by the properties of the rieger - nishimura formulas ( theorem  [ thm : rieger - nishimura ] ) this is equivalent to @xmath365 .",
    "this shows the correctness of the reduction .",
    "@xmath140    in the following theorem",
    "we show an upper bound for the @xmath8model checking problem .",
    "[ thm : ac1-algorithm ] the model checking problem for @xmath8is in @xmath0 .",
    "first we show that algorithm [ alg : ac1_mc ] decides the model checking problem and then we analyse its complexity .",
    "we show that algorithm [ alg : ac1_mc ] accepts the input @xmath366 if and only if @xmath367 . informally speaking algorithm",
    "[ alg : ac1_mc ] accepts the input if and only if @xmath368 and the model index @xmath369 of @xmath54 in @xmath53 match according to theorem  [ lem : hom_heytmodel ] .",
    "instead of computing the equivalent rieger - nishimura formula , algorithm [ alg : ac1_mc ] only calculates its rieger - nishimura index .",
    "this is done in lines 1 and 2 .",
    "the trivial cases are handled in lines 3 and 4 . from theorem  [ lem : hom_heytmodel ] we know for an arbitrary rieger - nishimura formula @xmath370 with @xmath371 the following .",
    "either @xmath372 and it holds that @xmath373 if and only if @xmath374 .",
    "this is checked in line 6 . or @xmath375 and it holds that @xmath376 or @xmath377 if and only if @xmath374 .",
    "this is checked in line 9 .",
    "if @xmath378 , then it holds that @xmath379 ( theorems  [ thm : rieger - nishimura ] and  [ lem : hom_heytmodel ] ) .    in the following , we estimate the complexity of algorithm [ alg : ac1_mc ]",
    "it gets @xmath380 as input . in line 1 algorithm  [ alg : ac1_mc ]",
    "guesses a rieger - nishimura index @xmath381 .",
    "the decision in line 2 whether @xmath382 can be done with the resources of @xmath21(lemma  [ lem : rnf_eqtest ] ) . to decide for a given intuitionistic kripke model @xmath53 , a state w of @xmath53 , and an integer @xmath19 the problem `` does @xmath343 hold ? '' is in @xmath344}$ ] .",
    "the function @xmath153 can be implemented according to its definition straightforwardly as a logarithmically space bounded alternating algorithm .",
    "it requires an alternation depth of at most @xmath19 due to the construction of @xmath153 .",
    "hence the decision in line 6 ( resp .",
    "line 9 ) whether @xmath383 ( resp .",
    "@xmath384 ) can be done with @xmath357 ( resp .",
    "@xmath385 ) alternations . since @xmath357 is at most about @xmath386 ( lemma  [ lem : formulalength ] ) ,",
    "these decisions can be done with at most @xmath387 alternations . during the complete computation ,",
    "the algorithm only needs to store a constant number of rieger - nishimura indices and model indices . according to lemma [ lem : formulalength ] and the fact that @xmath388 , algorithm [ alg : ac1_mc ] requires during the alternations logarithmic space . since @xmath389}}\\xspace}}$ ]",
    ", we obtain the desired upper bound .",
    "@xmath140    a formula @xmath390 , an intuitionistic kripke model @xmath53 and a state @xmath54",
    "superintuitionistic propositional logics are logics that have more valid formulas than @xmath6 . in this sense ,",
    "classical propositional logic is a superintuitionistic logic , since it can be obtained as the closure under substitution and modus ponens of the tautologies from @xmath6plus @xmath9 as additional axiom .",
    "a well - studied superintuitionistic logic is @xmath10@xcite that results from adding the weak law of the excluded middle @xmath391 to @xmath6 .",
    "semantically , the intuitionistic kripke models for @xmath10are restricted to those intuitionistic kripke models @xmath392 where @xmath393 is a directed preorder .",
    "whereas @xmath30 over preorders has infinitely many equivalence classes of formulas , @xmath30 over directed preorders has only 7 equivalence classes  represented by the rieger - nishimura formulas @xmath394that can be distinguished using the first 3 canonical models  @xcite .",
    "this follows from @xmath395 .",
    "the function @xmath153 can be implemented for such models as an alternating turing machine that runs in logarithmic time , if the function value is fixed to a finite range  that in this case is @xmath396independent of the input . for @xmath397 ,",
    "the rieger - nishimura index of the formulas also has a finite range ( as mentioned above ) .",
    "therefore , it can be calculated by an alternating turing machine that runs in logarithmic time similar to the machine presented by buss  @xcite that calculates the value of a boolean formula . instead of the boolean values",
    "@xmath398 and @xmath12 , here we have @xmath399 different rieger - nishimura indices . the rules how the index of a formula can be calculated from the indices of its subformulas and the connective ,",
    "follow directly from the rieger - nishimura lattice operations  see appendix  [ subsec : rn - lattice - operations ] . if the indices are bound to a finite range , this big table yields an even bigger but finite table without index - variables .",
    "for example , the equivalence @xmath400 for all @xmath155 induces the three equivalences @xmath401 , @xmath402 , and @xmath403 for @xmath397 .",
    "this yields alternating logarithmic - time ( @xmath404 ) as upper bound for the validity problem for @xmath397 .",
    "there are infinitely many superintuitionistic logics ( with one variable ) that can be obtained by adding any not valid formula as axiom to @xmath8 .",
    "for example , if we add a formula equivalent to @xmath405 , then the superintuitionistic logic obtained has finitely many equivalence classes represented by @xmath406 . with similar arguments as for @xmath397 we can conclude that the model checking problems of these logics all are in @xmath1 .",
    "moreover , the formula value problem for boolean formulas without variables is @xmath1-hard  @xcite .",
    "intuitionistic formulas without variables have the same values , if they are interpreted as classical boolean formulas .",
    "this means , the semantics of @xmath35 is the same for boolean formulas and for intuitionistic formulas without variables .",
    "therefore , the model checking problem for any superintuitionistic logic without variables is @xmath1-hard , too .",
    "the validity problem for superintuitionistic logic has the same complexity , since in order to decide whether a formula with one variable is valid it suffices to know its rieger - nishimura index .",
    "we consider computational problems that appear with intuitionistic propositional logic without variables and with one variable .",
    "we characterize the complexity of model checking for intuitionistic logic .",
    "[ theo : conclusion ]     1 .",
    "[ part1 ] the model checking problem for @xmath407 is @xmath1-complete .",
    "[ part2 ] the model checking problem for @xmath8 is @xmath0-complete .    part([part1 ] ) follows from the fact that an intuitionistic formula that contains constants @xmath36 and @xmath408 but no variables can be evaluated like a boolean formula , whose evaluation problem is @xmath1-complete  @xcite independently of the number of variables .",
    "part  ( [ part2 ] ) follows from theorems  [ thm : ipc1-is - aci - hard ] and [ thm : ac1-algorithm ] .",
    "it shows a difference between @xmath8and its modal companion @xmath409with one variable , for which the model checking problem is @xmath7-complete  @xcite .",
    "intuitionistic logic with one variable turns out to be very interesting .",
    "there are infinitely many equivalence classes of formulas , and according to lemma  [ lem : formulalength ] even the sequence of smallest formulas of these equivalence classes has an exponential growth with respect to the length of the formulas .",
    "such a fast growing sequence seems to appear rarely in `` natural '' problems , and it is a key ingredient for the @xmath0-completeness of the model checking problem .",
    "intuitionistic logic with one variable is strongly related to free heyting algebras with one generator .",
    "since heyting algebras are generalizations of boolean algebras , it would be interesting to investigate whether the difference between @xmath1and @xmath0is related to that between boolean algebras and heyting algebras .",
    "[ theo : super - int - mc ] the model checking problem for every superintuitionistic logic with one variable is @xmath1-complete .",
    "this follows from the discussion in section  [ sec : superint1 ] .",
    "it is interesting to notice that the complexity results for @xmath6and for @xmath410 with at least two variables are the same for the model checking problem @xcite .",
    "but for the fragments with one variable , the complexity of @xmath8is higher than that of @xmath397 .",
    "the fragments of @xmath6with a restricted number of variables and @xmath35 as only connective have finitely many equivalence classes of formulas and models  @xcite . the equivalence class of a given formula can be obtained with the resources of @xmath411 , using a technique from buss  @xcite .",
    "this might indicate an upper bound lower than @xmath7for the model checking problem .",
    "for the implicational fragment with at most one variable , @xmath411-completeness follows from theorem  [ sec : superint1 ] .",
    "but a general result for an arbitrary number of variables is open .",
    "for the validity problem we obtain the following results .",
    "[ thm : validity_conclusion ]     1 .",
    "[ cpart1 ] the validity problem for every superintuitionistic logic with one variable is @xmath1-complete .",
    "[ cpart2 ] the validity problem for @xmath349 is in @xmath412 .",
    "part  ( [ cpart1 ] ) follows from the discussion in section  [ sec : superint1 ] .",
    "part  ( [ cpart2 ] ) is from svejdar @xcite and lemma  [ lem : rnf_eqtest ] . the exact complexity of the validity problem for @xmath8is open .",
    "it is interesting to notice that superintuitionistic logics with one variable all have lower complexity than @xmath8 , whereas for superintuitionistic logics with two variables already @xmath10reaches the same complexity as @xmath6(follows from rybakov  @xcite ) .",
    "if we consider other problems related to kripke models for @xmath8that are not `` out braked '' by a very fast growing part of the input , the complexity jumps up to @xmath7-completeness , as shown in theorem  [ thm : hm - phard ] .",
    "model checking for @xmath8also gets @xmath7-hard if the instances @xmath366 allow the formula @xmath413 to be represented as a graph .",
    "this holds even for formulas without variables , and therefore it also holds for all superintuitionistic logics . if formulas are represented as graphs , the sequence of smallest representatives of the equivalence classes of @xmath8does not have exponential growth anymore .",
    "moreover , the calculation of the rieger - nishimura index gets @xmath7-hard .",
    "[ theo : p - complete - formulas ] if the formulas are represented as graphs , the following problems are @xmath7-complete :    1 .",
    "[ ppart1 ] the model checking problem for @xmath8 , 2 .",
    "[ ppart1a ] the model checking problem for every superintuitionistic logic with one variable , 3 .",
    "[ ppart2 ] the validity problem for @xmath8 , and 4 .",
    "[ ppart2a ] the validity problem for every superintuitionistic logic with one variable .",
    "parts  ( [ ppart1 ] ) and ( [ ppart1a ] ) contrast the different upper bounds @xmath1and @xmath0 for the standard encodings of formulas ( theorem  [ theo : super - int - mc ] resp .",
    "theorem  [ theo : conclusion ] ) .",
    "parts  ( [ ppart2 ] ) and ( [ ppart2a ] ) contrast the complexity of the validity problems for the logics under consideration ( theorem  [ thm : validity_conclusion ] ) .",
    "* acknowledgements . *",
    "the authors thank vitek svejdar , heribert vollmer , and thomas schneider for helpful discussions .    * remark . *",
    "this work is an extended version of  @xcite .",
    "theorem 15 in  @xcite and its proof can be found in  ( * ? ? ?",
    "* theorem 3.6 ) .",
    "10    m.  beaudry and p.  mckenzie .",
    "circuits , matrices , and nonassociative computation .",
    ", 50(3):441455 , 1995 .",
    "s.  r. buss .",
    "the boolean formula value problem is in alogtime . in _ proc .",
    "19th stoc _ , pages 123131 .",
    "acm press , 1987 .    s.  r. buss .",
    "algorithms for boolean formula evaluation and for tree contraction . in _ arithmetic , proof theory , and computational complexity _ , pages 96115 .",
    "oxford university press , 1993 .",
    "a.  k. chandra , d.  kozen , and l.  j. stockmeyer .",
    ", 28:114133 , 1981 .",
    "s.  a. cook .",
    "characterizations of pushdown machines in terms of time - bounded computers .",
    "18:418 , 1971 .    s.  a. cook .",
    "the complexity of theorem proving procedures . in _ proc .",
    "3rd stoc _ ,",
    "pages 151158 .",
    "acm press , 1971 .",
    "s.  a. cook .",
    "a taxonomy of problems with fast parallel algorithms .",
    ", 64:222 , 1985 .",
    "g.  r.  r. de  lavalette , a.  hendriks , and d.  h. de  jongh .",
    "intuitionistic implication without disjunction . . to appear , available at http://dx.doi.org/10.1093/logcom/exq058",
    "m.  dummett and e.  lemmon .",
    "modal logics between s4 and s5 . , 14(24):250264 , 1959 .",
    "d.  m. gabbay . .",
    "d.reidel , dordrecht , boston , london , 1981 .",
    "p.  t. johnstone . .",
    "cambridge university press , cambridge , 1982 .",
    "d.  makinson .",
    "there are infinitely many diodorean modal functions .",
    ", 31(3):406408 , 1966 .",
    "m.  mundhenk and f.  wei .",
    "the complexity of model checking for intuitionistic logics and their modal companions . in _ proc . of rp",
    "2010 _ , volume 6227 of _ lncs _ , pages 146160 .",
    "springer , 2010 .",
    "m.  mundhenk and f.  wei .",
    "intuitionistic implication makes model checking @xmath414-hard .",
    ", abs/1107.1963v1 , 2011 .",
    "m.  mundhenk and f.  wei .",
    "the model checking problem for intuitionistic propositional logic with one variable is @xmath216-complete . in _ proc .",
    "28th stacs _ ,",
    "volume  9 of _ lipics _ ,",
    "pages 368379 .",
    "schloss dagstuhl - leibniz - zentrum fr informatik , 2011 .    i.  nishimura . on formulas of one variable in intuitionistic propositional calculus .",
    ", 25:327331 , 1960 .    w.  l. ruzzo . on uniform circuit complexity .",
    ", 21:365383 , 1981 .    m.  n. rybakov .",
    "complexity of intuitionistic and visser s basic and formal logics in finitely many variables . in _",
    "papers from the 6th conference on `` advances in modal logic '' _ , pages 393411 .",
    "college publications , 2006 .",
    "r.  statman .",
    "intuitionistic propositional logic is polynomial - space complete .",
    ", 9:6772 , 1979 .    v.  svejdar . on the polynomial - space completeness of intuitionistic propositional logic",
    ", 42(7):711716 , 2003 .",
    "v.  svejdar .",
    "the tautology problem for ipc@xmath415 is in space @xmath416 , 2009 .",
    "personal communication .",
    "a.  urquhart .",
    "implicational formulas in intuitionistic logic . , 39(4):661664 , 1974 .",
    "d.  van dalen . .",
    "springer , berlin , heidelberg , 4th edition , 2004 .",
    "h.  vollmer . .",
    "texts in theoretical computer science .",
    "springer verlag , berlin heidelberg , 1999 .",
    "let @xmath417 $ ] denote the equivalence class that contains @xmath413 , for being @xmath418 .",
    "the equivalence classes of @xmath30 form a free heyting algebra over one generator ( see  @xcite ) .",
    "this algebra is also called the _ rieger - nishimura lattice _ ( see fig .  [",
    "fig : rn - lattice ] ) , and is given by @xmath419 whereas @xmath69 denotes the only one variable that occurs in the formulas of @xmath30 .",
    "the induced partial order is denoted by @xmath80 ( @xmath81 ) . for @xmath74 ,",
    "the binary lattice operators @xmath75 , @xmath76 and @xmath77 are defined as follows .",
    "@xmath78 \\sqcap [ \\beta ] = [ \\alpha \\wedge \\beta]$ ] , @xmath78 \\sqcup [ \\beta ] = [ \\alpha \\vee \\beta]$ ] , and @xmath78 \\rightarrowtriangle [ \\beta ] = [ \\delta]$ ] , where @xmath79 $ ] is the largest element w.r.t . @xmath80 with @xmath82,[\\delta]\\ } \\sqsubseteq [ \\beta]$ ]",
    ". is called the _ relative pseudo - complement operation_. ] in  @xcite the following properties of the operations of the rieger - nishimura lattice ( see figure [ fig : rn - lattice ] ) are shown .",
    "we describe these properties as equivalences of rieger - nishimura formulas .",
    "this is very similar to ( * ? ? ?",
    "* chap.6,thm.7 ) .",
    "for example because of @xmath420 it holds that @xmath421 \\rightarrowtriangle [ { \\uppsi}_n ] = [ { \\upvarphi}_{n+2}]$ ] ."
  ],
  "abstract_text": [
    "<S> we show that the model checking problem for intuitionistic propositional logic with one variable is complete for logspace - uniform @xmath0 . as basic tool we use the connection between intuitionistic logic and heyting algebra , and </S>",
    "<S> investigate its complexity theoretical aspects . for superintuitionistic logics with one variable , we obtain @xmath1-completeness for the model checking problem .    </S>",
    "<S> universitt jena , institut fr informatik , jena , germany + \\{martin.mundhenk , felix.weiss}@uni - jena.de </S>"
  ]
}
{
  "article_text": [
    "the bi - connectivity of graphs is essential for many real world applications ranging from power distribution systems , communication networks and many others .",
    "the reason for this is that such typologies provide a certain level of resistance to failures , and as a result more robust and reliable systems @xcite .",
    "these benefits are a direct consequence of the fact that such graphs have two disjoint paths connecting any two nodes in the graphs .",
    "this property is often called 2-connectivity of graphs . in literature",
    "there is differentiation between vertex and edge 2-connected graphs , where the two paths are vertex or edge disjoint , respectively . in practice",
    "this means that the vertex / edge 2-connected graph stays connected if any single vertex / edge is removed from it .",
    "vertex 2-connectivity is a stronger property in the sense that every such graph is also 2-edge connected but the reverse is not necessarily true .",
    "the term bi - connected graph is used for 2-vertex connected graphs .",
    "testing if a graph is bi - connected can be done efficiently using the standard algorithm for finding articulation points of a graph based on depth first search in linear time @xcite .",
    "a similar approach has also been used for finding a 3-connected partitioning of a graph @xcite .",
    "other examples of algorithms for testing bi - connectivity of a graph exploit the fact that bi - connected graphs have an ear @xcite or chain @xcite decomposition .",
    "there are several types of mixed integer programs based on multi - commodity flow constraints that are used for exploring bi - connectivity , but such models generally have a large number of variables @xcite",
    ". there are alternative formulations containing a lower number of variables but having an exponential number of constraints @xcite .    for many graph optimization problems , like the weighted vertex cover and the independent set , it is sufficient to solve the problem separately on each of the bi - connected components @xcite .",
    "the most commonly used method for partitioning graphs into bi - connected components is tarjan s algorithm , which accomplishes this task in linear time @xcite .",
    "there are several interesting variations of the original algorithm with similar computational times @xcite .",
    "the problem with these types of algorithms is that it is hard to modify them to a setting where the subgraphs need to satisfy some additional constraints .",
    "the proposed work is focused on developing a method that can partition a graph into bi - connected subgraphs with a maximal allowed size , but the general concept can be adapted to other interesting constraints . in current literature",
    "there are many practical problems which are modeled using the problem of partitioning graphs into connected subgraphs .",
    "some examples are applications in surveillance systems @xcite , data clustering @xcite and education @xcite .",
    "an interesting group of applications comes from the satisfactory graph partitioning problem , like finding communities within social or biological networks , defense alliances , artificial intelligence development , etc .",
    "@xcite . partitioning problems defined on supply / demand graphs have proven to be essential in modeling systems of interconnected microgrids @xcite .",
    "clustering in for many of them it would be reasonable to substitute the constraint of connectivity with bi - connectivity , producing the benefit of higher reliability of the system .",
    "this type of extension has frequently been applied to modeling real - world systems based on general graph problems including connectivity .",
    "some examples are power optimization in ad hoc wireless networks @xcite and facility layout problems @xcite .",
    "a common approach for solving such problems is to start from an approximate solution that is only connected and extend it with additional nodes to achieve bi - connectivity , like in the case of the problem of constructing a 2-connected virtual backbone in wireless networks @xcite .    in case of graph problems containing connectivity constraints ,",
    "a standard approach is to grow a partial solution by adding neighboring nodes .",
    "one example is the method used for finding the minimal connected dominating set of a graph @xcite .",
    "the concept of growth has also been extended to problems where a graph is divided into connected components . in case of such problems",
    "the general approach is to grow several subgraphs in parallel with the constraint that no vertex can be added to more than one of them .",
    "the effectiveness of this type of method is well presented on the problem of partitioning supply / demand graphs into connected subgraphs @xcite .",
    "it is important to note that the concept of growing a solution gives a high level of flexibility of the method , in the sense of potential applications .",
    "another advantage of growth based algorithms is that they can easily be improved by their extension to metaheuristics like the ant colony optimization @xcite , the grasp algorithm @xcite and the variable neighborhood search @xcite .    in this paper",
    "we introduce a new problem of finding the maximal bi - connected partitioning of a graph with a size constraint ( mbcpg - sc ) . for the newly defined problem",
    "we show np - hardness .",
    "because of this a growth based algorithm is developed for mbcpg - sc for finding approximate solutions .",
    "more precisely , it is solved using a heuristic procedure that exploits the fact that each bi - connected graph has an ear decomposition .",
    "the algorithm is based on a breadth first search ( bfs ) that also tracks additional properties of the nodes in the bfs tree .",
    "the additional information makes it possible to have an efficient way to `` grow '' a bi - connected subgraph by expanding it with suitable ears .",
    "the concept of growing a bi - connected graph using an ear decomposition is also used in case of constructing a fault - tolerant connected set cover problem @xcite . in this algorithm the best open ears for extending the current solution are found using the idea of shortest cycles in the original graph .",
    "a similar approach is used for the minimum 2-connected r - hop dominating set problem @xcite .",
    "the proposed method consists in growing several subgraphs in parallel , with some auxiliary corrections applied to the corresponding bfs trees . to improve the performance of the basic algorithm several methods of randomization are developed .",
    "the quality of found solutions is further enhanced using a local search procedure .",
    "the practical objective of the proposed graph problem and the corresponding solution method is its application to real word problems in the field of smartgrids , more precisely on the underlying wireless networks .",
    "such systems are well presented using unit disc graphs .",
    "the proposed graph problem is closely related to the clustering scheme for hierarchical control of wireless networks @xcite .",
    "because of this , the focus of the numerical experiments is on unit disc graphs . to be able to evaluate the method , an extensive effort has been dedicated to developing an algorithm for generating problem instances with known optimal solutions .",
    "our computational results show that the proposed method is able to find optimal solutions for small graphs . in case of large graphs ( 10.000 nodes )",
    "the method manages to find solutions within a few percent of error , in reasonable time .",
    "the paper is organized as follows . in the second section",
    "we give the definition for mbcpg - sc and a proof of np- hardness .",
    "in the following section we present the method for growing a bi - connected subgraph .",
    "the third section gives details of the algorithm for parallel growth of several subgraphs and randomization .",
    "the next section describes the proposed local search mechanism . in section 5 ,",
    "we provide details of the data generation mechanism for problem instances with known optimal solutions .",
    "moreover , we discuss results of our computational experiments and provide some conclusions and ideas for future research .",
    "the problem is defined on a graph @xmath0 , where @xmath1 is the set of nodes and @xmath2 is the set of edges .",
    "we also define a set @xmath3 , whose elements will be called root nodes .",
    "the aim of the problem is to divide the graph @xmath4 into a set of subgraphs @xmath5 , where @xmath6 , satisfying the constraints given in the following text .",
    "the notation @xmath7 will be used for the set of nodes that induces subgraph @xmath8 .",
    "each of the @xmath7 must contain only one distinct root node @xmath9 .",
    "a node @xmath10 can be an element of at most one @xmath7 .",
    "the number of nodes in each of the subgraphs @xmath11 is less or equal to some constant @xmath12 .",
    "the last constraint is that each of the subgraphs @xmath8 is bi - connected .",
    "the goal of the problem is to find @xmath13 containing the maximal number of nodes in all the subgraphs .",
    "more formally , we wish to maximize the sum : @xmath14 + where each of the subgraphs @xmath7 satisfies @xmath15 in the definition we use notation @xmath16 to indicate the number of nodes in a graph .",
    "an illustration of a problem instance and solution for the mbcpg - sc is given in figure [ fig : problemcolor ] .",
    "it is important to note that the mbcpg - sc does not produce a partitioning in the strict sense , since some nodes may not be included in any @xmath7 .    .",
    "the circle nodes represent root nodes .",
    "different shades of gray are used for different subgraphs.,scaledwidth=100.0% ]    the mbcpg - sc is a hard optimization problem in the sense that it is np hard . we give a proof by reduction to a restriction of the problem of maximal partition of supply / demand graphs ( mpgsd ) @xcite .",
    "it has been shown that the mpgsd is np - hard in the case of a graph containing only one supply node and having a star structure @xcite . for a more comprehensive presentation",
    "we first give the definition of the mpgsd for star graphs , which is a simplified version of the original problem .",
    "it is defined for an undirected star graph @xmath17 with a set of nodes @xmath1 and a set of edges @xmath2 .",
    "the center node of the graph @xmath18 is called a supply node and it has a corresponding supply value @xmath19 .",
    "all the other nodes @xmath20 are called demand nodes , and they have a corresponding demand value which is a positive integer @xmath21 .",
    "the aim is to find a set of nodes @xmath22 which satisfies the constraint that the supply @xmath19 must be greater or equal to the total demand of nodes in @xmath23 .",
    "the goal is to maximize the fulfillment of demands .    in the following text",
    "we prove that mbcpg - sc is np hard by reducing the mpgsd for star graphs to it .",
    "let mpgsd be defined for a star graph @xmath24 having a central supply node @xmath18 with a supply value @xmath19 connected to @xmath25 demand nodes @xmath26 having demand values @xmath27 .",
    "let us convert this problem to mbcpg - sc in the following way .",
    "the parameter @xmath12 of mbcpg - sc will be set to @xmath28 and there will be only one root node @xmath29 .",
    "let us convert the star graph @xmath24 to @xmath30 used in mbcpg - sc .",
    "first , we include the root node @xmath29 in @xmath31 .",
    "the node @xmath29 is connected to two nodes @xmath18 ( corresponding to the supply node in @xmath24 ) and node @xmath32 which will be used for some extra edges .",
    "let us remember that the edge set @xmath33 of @xmath24 consists of edges @xmath34 .",
    "for each demand node @xmath26 we will add a path @xmath35 .",
    "next , we add an additional edge @xmath36 for each demand node @xmath26 .",
    "an illustration of this conversion is given in figure [ fig : convertnp ] .",
    "represents the root node , @xmath18 the supply node from mpgsd and @xmath32 the auxiliary node .",
    "dashed lines are used for the auxiliary edges .",
    "the size limit mbcpg - sc is @xmath37.,scaledwidth=100.0% ]    let us make a few observations on the solution of a mbcpg - sc on the convert graph @xmath24 .",
    "first , any solution must contain nodes @xmath32 , @xmath18 since there must be at least two disjoint paths from @xmath29 to any other node .",
    "second if any node @xmath38 is included in the solution @xmath39 all the nodes @xmath40 must be included in it .",
    "let us assume the opposite that node @xmath41 is not included in the solution and that the nodes @xmath42 for @xmath43 are .",
    "in such a case the removal of node @xmath32 from @xmath39 results in all the nodes @xmath44 where @xmath45 becoming disconnected from the graph induced by @xmath39 . in the same way , the removal of node @xmath18 from @xmath39 results in all the nodes @xmath44 , where @xmath46 , becoming disconnected from the graph induced by @xmath39 . as a consequence any @xmath47 is connected to @xmath29 by two disjoint paths ( containing only elements in @xmath39 ) @xmath48 , @xmath49 , @xmath50 , @xmath51 and by path @xmath52,@xmath53 , @xmath50 , @xmath54 . note that nodes @xmath29 , @xmath18 , @xmath55 , ... , @xmath56 , @xmath32 form a cycle and as a consequence two disjoint paths exist among any 2 of them .",
    "we will prove that mpgsd on @xmath24 can be reduced to mbcpg - sc on @xmath57 by showing that any solution @xmath58 of mpgsd has a corresponding solution @xmath39 of the mbcpg - sc such that @xmath59 and and vice versa .",
    "let us first prove the direction mpgsd to mbcpg - sc , by constructing the solution @xmath39 from @xmath58 .",
    "@xmath39 will consist of nodes @xmath29 , @xmath32 , @xmath18 and all nodes @xmath60 were @xmath61 and @xmath62 .",
    "first , by construction we have @xmath63 .",
    "the only additional case that needs to be considered to prove bi - connectivity of @xmath39 is for two nodes @xmath64 @xmath65 such that @xmath66 . to be more precise we need to prove that there are two disjoint paths connecting them . from the previous observation",
    "we have that each of these two nodes is connected to nodes @xmath32 , @xmath18 by two disjoint paths .",
    "so , nodes @xmath64 @xmath65 are connected with disjoint paths @xmath67 and @xmath68 .",
    "the construction of the solution @xmath58 of mpgsd from a solution of @xmath39 of the mbcpg - sc is trivial and is based on the construction of graph @xmath57 and the fact , shown in the previously made observation , that any solution @xmath39 consists of @xmath29 , @xmath32 , @xmath18 and all nodes @xmath69 where @xmath70 for some nodes @xmath71 .",
    "the main motivation for defining the mbcpg - sc is its application to systems of interconnected microgrids @xcite .",
    "it has been shown that optimization of self - adequacy of individual microgrids in such systems can be well modeled using the mpgsd .",
    "the proposed problem can also be understood as a partitioning of a power supply network in which all supply nodes ( elements of @xmath72 ) have a value @xmath12 and demand nodes ( elements of @xmath73 ) have value 1 .",
    "the problem with using the mpgsd for this type of systems is that it does not address the problem of failure resistance . in mbcpg - sc",
    "we exploit the fact that by strengthening the constraint of connectivity to bi - connectivity , compared to mpgsd , we are able to have a model that produces more robust subsystems .    another potential application of the proposed problem is on the hierarchical clustering for wireless networks . in the work of @xcite , a network is divided into clusters that can be hierarchically controlled .",
    "the basic properties of a cluster are that it has a single control node , the number of nodes it can contain is limited , and the corresponding subgraph needs to be connected .",
    "it is natural to extend this formulation with an additional constraint of bi - connectivity of subgraphs to enhance reliability .",
    "since the proposed algorithm is based on the property that a bi - connected graph has an open ear decomposition we start with its definition .",
    "an open ear decomposition of a graph @xmath4 is defined as a series of paths @xmath74 called ears .",
    "the term path is used for an ordered sequence ( @xmath75 , @xmath76 ,  , @xmath77 ) such that all edges @xmath78 . in the following text",
    "we will use the notation @xmath79 for the set of nodes in @xmath80 .",
    "the notation @xmath81 is used for a sequence of nodes in ear @xmath82 .",
    "all the ears @xmath83 , @xmath84 in the decomposition satisfy @xmath85 if @xmath86 .",
    "the exception is the first ear @xmath87 which is a cycle @xmath88 . for @xmath89",
    ", we have that for each of the two terminating nodes @xmath90 exists @xmath91 such that @xmath92 , @xmath93 where it is not necessarily @xmath94 .",
    "we wish to point out that @xmath95 , so each @xmath96 is an open ear . except for such terminating nodes ,",
    "there is no @xmath97 if @xmath98 .",
    "finally , for each @xmath99 there exists at least one @xmath100 such that @xmath101 .",
    "if such a decomposition exists for graph @xmath4 then @xmath4 is bi - connected .",
    "an illustration of an open ear decomposition of a graph is given in figure [ fig : openeardecomposition ] .",
    "in the proposed algorithm the idea is to grow a bi - connected subgraph @xmath23 , starting from an initial cycle and extending it with adequate ears .",
    "more formally , we will be iteratively generating a sequence of subgraphs @xmath102 , where @xmath103 and @xmath104 is an open ear for @xmath105 .",
    "it is evident that if a subgraph is generated in this way it will always have an open ear decomposition .",
    "although it is possible to develop such an algorithm using a depth first search ( dfs ) the use of bfs is more suitable since it gives us more control of the size @xmath106 of the ear that will be added .    in the subsequent text we will be using the following notation .    * @xmath107 the set of adjacent / neighboring nodes to node @xmath108 in graph @xmath4 . * @xmath109/@xmath110 are the set of nodes / edges in the bfs tree .",
    "* @xmath111 is the set of children of node @xmath112 in the bfs tree .",
    "* @xmath113 is the parent node of @xmath112 in the bfs tree .",
    "* @xmath114 is the set of all descendants of node @xmath112 in the bfs tree . *",
    "@xmath115 $ ] is defined for nodes @xmath116 .",
    "it represents the path @xmath117 , @xmath118 , @xmath119 , @xmath50 , @xmath120 , @xmath121 connecting @xmath108 , @xmath122 such that all @xmath123 .",
    "brackets `` @xmath124''/``@xmath125 '' are used to indicate if @xmath108 , @xmath122 are included / excluded in the path .",
    "the notation @xmath126 $ ] is used for the corresponding set of nodes .",
    "* @xmath127 , is node @xmath122 which is the first ancestor of @xmath108 , in the bfs tree , such that @xmath128 . in case @xmath129",
    ", then @xmath130 .",
    "* @xmath131 , is node @xmath122 which is the first ancestor of @xmath108 , in the bfs tree , such that @xmath132 . in case @xmath133",
    ", then @xmath130 .",
    "* @xmath134 is the length of the path ( number of nodes ) , @xmath135 .",
    "note , that it does not include node @xmath127 . in case @xmath136",
    ", we have @xmath137 .",
    "it is well known that bfs can be used to find cycles which we exploit in the proposed method .",
    "let us assume that we start the bfs from some initial node @xmath29 . as we expand the bfs tree , or in other words , new nodes are visited , the first time we encounter a back - edge @xmath138 an initial cycle @xmath23 is found .",
    "more precisely , @xmath23 is acquired by connecting three segments : path from @xmath29 to @xmath108 , the back edge @xmath139 and the path from @xmath122 to @xmath29 . in the proposed notation @xmath140 , p_b[v , r))$ ] and it has all its nodes in the bfs tree .    in a similar way we can find new open ears .",
    "let us assume the bfs tree is further expanded and a new back - edge @xmath141 has been found , and that at least one of the nodes @xmath142 is not in @xmath23 .",
    "it is obvious that if the following is satisfied , @xmath143 then the sequence @xmath144 , \\bar{p}_b[s , root(t)])\\ ] ] will produce a new open ear connected to @xmath23 . as a consequence @xmath145",
    "will also be a bi - connected subgraph .",
    "we will use the notation @xmath146 for the set of nodes corresponding to @xmath147 .",
    "the same procedure can be used to further expand @xmath23 with new open ears .",
    "the second constraint that exists in the mbcpg - sc is that @xmath148 . while growing @xmath23 , it can easily be maintained if we only allow adding ear @xmath146 if the following equation is satisfied latexmath:[\\[\\label{conlength }    explore node @xmath108 having the lowest value of @xmath134 the length @xmath150 of the newly found open ear will be among the shorter ones ( except in rare cases ) .",
    "this is due to the method of construction in which newly found ears will always have one terminating node equivalent to the currently visited node in the bfs .",
    "if @xmath151 has the largest value of all nodes in the bfs tree which are not in @xmath23 then the maximal difference between @xmath150 and the shortest ear will be @xmath151 . in case of adapting the bfs in this way some additional work will be necessary to update the values of @xmath134 and @xmath152 as new ears are added to @xmath23 .",
    "it is important to note that after such updates it is possible that several back edges @xmath153 that have been previously tested may now satisfy the constraints given in eqs . , .",
    "the algorithm for growing a bi - connected subgraph based of the idea presented in the previous section will start the bfs from some root node @xmath29 .",
    "as the first ear in the decomposition @xmath154 differs from the rest as it is a cycle , some special initialization needs to be done for @xmath29 and its neighbors @xmath155 .",
    "for all these nodes @xmath108 we will initially set @xmath156 . in the adaptation of bfs for growing a bi - connected graph",
    "the distance in the bfs tree will have a different meaning . instead of following the distance of a node @xmath108 from the root node @xmath29 we will track the distance from @xmath108 to the already generated bi - connected subgraph @xmath157 .",
    "at the initial step we will consider @xmath158 .",
    "let us assume that we have found two nodes @xmath108 , @xmath122 that satisfy the constraints given in eqs .",
    ", , then the first ear @xmath154 can be constructed as @xmath159    as previously stated in case a new ear @xmath79 is added to @xmath23 the values of @xmath127 , @xmath134 will need to be updated for some elements of the bfs tree .",
    "it will be necessary to update these values for all @xmath160 in the following way .",
    "@xmath161    @xmath162    it is important to note that the proposed correction for functions @xmath134 will produce approximations to the exact distance @xmath163 . for the function",
    "@xmath164 we have that @xmath165 since it is possible to have an alternative path to @xmath23 using some back edges which is shorter .",
    "a consequence of this is that the constraint defined in eq . will never give false positives if function @xmath164 is used instead of @xmath166 . by using this approximate approach it",
    "is possible to have a simpler and less computationally expensive implementation .    in the standard bfs",
    "there is no change in the distance for visited nodes and no node is re - visited . in the proposed adaptation of bfs",
    "such changes can occur and some revisits are necessary .",
    "it is possible to use a heap or similar structure instead of a queue to always test the node @xmath108 with the lowest value @xmath163 . in practice",
    "this is not necessary especially since we are only using an approximation to @xmath134 . on the other hand",
    "the need for retesting some nodes further increases the complexity of implementation .",
    "both of these issues are addressed simultaneously using the following approach .",
    "first , nodes will be re - added to the queue as a new ear is added to @xmath23 and their re - evaluation is needed .",
    "since it is possible for the same node to be added multiple times to the queue due to the addition of multiple ears , an additional value will be used to track if an evaluation is needed .",
    "the algorithm for growing a bi - connected subgraph is better understood by observing algorithm [ alg : grow ] .",
    "the proposed algorithm starts with a standard bfs initialization of the distance , parents and descendants for all the nodes with the additional property of the need for evaluation .",
    "initially all the values of @xmath167 will be set to @xmath168 .",
    "an auxiliary structure is used to store all the properties of individual nodes , which can be accessed and updated using the node i d .",
    "next , we initialize the root @xmath29 and all its neighbors @xmath155 as previously described and all nodes in @xmath155 are added to the queue @xmath169 . the main loop is executed for each node @xmath170 in @xmath169 until @xmath171 . for each such node",
    "we first check if an evaluation is needed and if so all its neighbors @xmath172 are evaluated . for each @xmath173",
    "we check if @xmath174 is a back - edge . in case",
    "it is not we add @xmath108 to the @xmath169 as in the bfs , and we set @xmath175 . in case @xmath108 is a back - edge we check if @xmath176 is an open ear connected to @xmath23 .",
    "if this is true the subgraph @xmath23 is extended with @xmath177 and necessary updates are performed using procedure @xmath178 .",
    "after all the elements of @xmath172 are visited the evaluation of node @xmath170 is complete and we set @xmath179 .",
    "the update procedure for a newly found open ear , @xmath178 , is used to change the state of @xmath169 and nodes based on the @xmath177 .",
    "the details of the procedure are given in algorithm [ alg : updateaddear ] .",
    "in it , for all @xmath133 the distance is set to @xmath180 .",
    "each node @xmath108 now becomes a root of a new potential ear , so we set @xmath181 .",
    "for each node @xmath133 we wish to update the branch of the bfs tree whose root is @xmath108 .",
    "this is done using a recursive procedure @xmath182 . in it",
    "we go through all the bfs descendants @xmath122 of @xmath108 that are not already in @xmath23 and set the @xmath183 and @xmath184 . by doing so the node properties are set to the values that correspond to the new state of @xmath23 . for each such node re - eavaluation",
    "is needed to check if new open ears have been created so we set @xmath185 .",
    "the addition to the queue @xmath169 is done after the recursive call @xmath186 for updating the descendants .",
    "this order is important since nodes will be added to the queue in reverse order of their distance and as a consequence shorter potential ears are checked first . by doing so",
    "@xmath23 is more gradually grown .",
    "when solving the mbcpg - sc multiple subgraphs @xmath187 should be grown together .",
    "the idea of the algorithm is to randomize this process .",
    "the randomization is done on two levels .",
    "first , the growth of individual subgraphs @xmath8 should be randomized .",
    "this can simply be done by adding an additional parameter @xmath188 $ ] and a corresponding random variable @xmath189 $ ] which will be used to decide if a valid open ear is added to @xmath23 or not .",
    "it is important to note that by not adding an open ear @xmath190 at iteration @xmath191 does not necessarily exclude the nodes inside @xmath190 from the corresponding subgraph @xmath157 .",
    "this is due to the fact that they can be a part of some ear @xmath192 that will be added to @xmath23 at a later iteration .",
    "it is evident that the growth of subgraphs @xmath193 is interdependent since a node @xmath108 can only be an element of a unique @xmath7 . on the other hand ,",
    "the growth of some @xmath7 will also effect the direction of expansion of the bfs tree of neighboring subgraphs . because of this the second type of randomization should effect the speed and order in which all the @xmath7 will be grown .",
    "the proposed method can be better understood through the pseudocode given in algorithm [ alg : generatesolution ] .    in the proposed algorithm",
    "separate bfs trees and corresponding auxiliary structures exist for each of the @xmath7 .",
    "the auxiliary structure for tracking node properties is extended with a property @xmath194 for nodes , which is used to indicate if a node has been added to some of the other subgraphs .",
    "initially this value is set to @xmath168 for all nodes in all subgraphs .",
    "the first step , is setting @xmath195 for all the @xmath196 where @xmath98 . here",
    "we use the notation @xmath197 for node @xmath198 in the auxiliary structure of subgraph @xmath199 .",
    "next , the @xmath200 is initialized for each subgraph @xmath8 using the corresponding @xmath201 as described in the previous section .",
    "the main loop is repeated until no subgraph can be further expanded . at each iteration a random subgraph @xmath8 is selected for expansion of a maximal allowed size @xmath202 .",
    "@xmath202 is a random variable from some range @xmath203 $ ] .",
    "the goal of the inner loop is to extend @xmath7 with at least @xmath202 nodes , or until it is not possible to extend it . in this loop",
    "an adaptation of the procedure presented in the previous section is used in the form of function @xmath204 which only adds a single ear @xmath79 to @xmath7 .",
    "this function does not consider nodes having @xmath205 .",
    "after an ear @xmath79 is added to @xmath7 , the bfs tree and corresponding structures need to be updated for all @xmath196 where @xmath98 using procedure @xmath206 .",
    "the update procedure needs to perform several tasks .",
    "first , all the nodes @xmath133 need to be made unavailable for the growth of @xmath196 , where @xmath207 , which can be done by setting @xmath208 in the corresponding auxiliary structures .",
    "secondly , all the nodes in @xmath209 which have been cutoff from the bfs tree ( for some @xmath196 , @xmath98 ) , by the removal of @xmath108 , need to be re - initialized so they can potentially be re - added to the bfs tree .",
    "this is done by setting @xmath210 and @xmath185 .",
    "although there is a potential that a node @xmath209 may be reached by continuing the growth of the bfs tree , there is no guarantee for this .",
    "the question is which nodes need to be re - evaluated to make this possible .",
    "it is obvious that if a back - edge @xmath211 existed for the bfs tree that node @xmath212 can be reconnected to @xmath122 . on the other hand",
    "if such a back edge existed and @xmath213 then the corresponding open ear would have been already added to @xmath23 .",
    "the only potentially disregarded back edges are of the type @xmath214 . because of this the nodes in @xmath215 should be re - evaluated if @xmath216 , since they can establish a connection with @xmath122 .",
    "the details of the update procedure for deleting a node are given in algorithm [ alg : deletenode ] .",
    "the algorithm in the previous section gives us a method for generating a single solution for mbcpg - sc .",
    "a simple way of finding higher quality solutions is to perform multiple runs with different random seeds and selecting the best one .",
    "the problem with this approach is that no experience is gained from previously generated solutions and as a consequence a very high number of them needs to be generated to get good quality ones .",
    "an alternative approach is to develop a local search procedure which improves sections of already generated solutions .",
    "the basic idea of the proposed local search is to regrow only a subsection @xmath217 of the previously best found solution . ideally , we wish to do this only for subsections for which an improvement is possible .",
    "the growth procedure presented in the previous section can easily be adapted to such a setting .",
    "let us define the set on non - located nodes as @xmath218 it is obvious that @xmath219 should contain at least one @xmath8 such that @xmath220 .",
    "the other requirement is that @xmath219 has a potential to expand to some @xmath221 . for simplicity",
    "let us assume that there is only one non - located node @xmath221 , and there is only one @xmath222 such that @xmath223 .",
    "since @xmath8 must be bi - connected there must be a @xmath224 having only nodes in @xmath219 .",
    "we can define the set of neighboring nodes of a subgraph in the following way @xmath225 it is evident that for an appropriate @xmath226 to exist , @xmath108 must satisfy @xmath227 for some @xmath228 . using this logic , we can specify @xmath219 containing @xmath229 subgraphs based on this necessary condition .",
    "select one @xmath230 having @xmath223 and @xmath231 such that it @xmath232 .",
    "select @xmath233 random subgraphs from @xmath234 .",
    "we will call this method for selecting the elements of @xmath219 growth random ( @xmath235 ) .",
    "this method for specifying @xmath219 satisfies the necessary condition but further constraints can be added to make the local search more efficient .",
    "let us observe a graph @xmath236 induced by @xmath13 in the following way .",
    "each node in @xmath237 corresponds to a subgraph @xmath230 .",
    "an edge @xmath238 is in @xmath33 if there exist nodes @xmath239 , @xmath240 such that @xmath241 . if we are re - growing only two subgraphs @xmath242 there is a potential that nodes may be exchanged between them if @xmath243 , and more generally @xmath244 will influence each other s growth .",
    "transitively , the influence will extend to all subgraphs in a connected subgraph @xmath245 .     and @xmath57 are @xmath246 and @xmath247 , respectively .",
    ", scaledwidth=85.0% ]    an exchange can occur between subgraphs @xmath242 in the same setting even if @xmath248 through nodes in @xmath249 .",
    "let us assume that for some @xmath239 , @xmath240 there is a connecting @xmath250 which only contains nodes in @xmath249 .",
    "in such a case there is a chance that node @xmath122 can be added to @xmath7 using this path .",
    "we give an illustration in figure [ fig : nonlocpath ] .",
    "let us define @xmath251 as a set of edges , where @xmath252 only if a connecting path exists containing only non - located nodes .",
    "let us now define a new graph @xmath253 using the following edge set @xmath254 now , we can say that for the same @xmath219 an exchange between subgraphs @xmath8 , @xmath199 can only occur if and only if @xmath255 and more generally @xmath244 will influence each other s growth .",
    "transitively the same applies to any connected subgraph @xmath256 .",
    "a consequence of this is that regrowing should only be considered for a connected ( in @xmath57 ) subsections @xmath219 , since each isolated section can be treated separately .    using graph @xmath57",
    "we can define a method for generating a set @xmath257 suitable for regrowth in the following way .",
    "first select an initial random node @xmath258 such that @xmath259 .",
    "note as a reminder that @xmath260 represents a subgraph in @xmath13 .",
    "iteratively , we add a random node @xmath261 such that it is connected ( in @xmath57 ) to at least one node @xmath262 .",
    "when @xmath263 , we check if at least one node @xmath262 satisfies @xmath264 .",
    "if this is true @xmath219 is accepted as the set that will be regrown . in case",
    "this is not true a new set @xmath219 is generated in the same way .",
    "if after @xmath265 attempts no such @xmath219 is generated @xmath229 is increased by one .",
    "this process is repeated until @xmath219 satisfying the necessary constraints is generated .",
    "we will call this method for selecting the elements of @xmath219 growth neighbor ( @xmath266 ) .",
    "the method based on the local search for the mbcpg - ls is given in algorithm [ alg : localsearch ] .",
    "the methods starts with generating an initial solution using procedure @xmath267 which is set as the @xmath268 .",
    "for this solution we generate the graph @xmath57 as described in the previous text . in the main loop we first select a random subgraph @xmath8 such that @xmath223 and a random number @xmath269 $ ] which indicates how many subgraphs will be regrown .",
    "next , we generate a random subgraph @xmath256 based on the node @xmath7 containing @xmath229 nodes using one of the two methods @xmath235 or @xmath266 .",
    "a new solution @xmath270 is acquired by regrowing @xmath219 using procedure @xmath271 .",
    "this procedure is the same as @xmath267 with the following changes .",
    "first , for all nodes @xmath272 we set @xmath208 .",
    "next , only subgraphs in @xmath219 are grown and considered in the update procedure .",
    "the rest of the subgraphs are left unchanged .",
    "the next step in the main loop consists in testing if @xmath273 . in case",
    "this is true the best found solution is updated and the graph @xmath57 is recalculated .",
    "note that we have allowed the update of the best solution even if it has the same quality as @xmath13 to diversify the search .",
    "the main loop is repeated until a maximal number of iterations or no further improvement can be achieved .",
    "in this section we present the results of the computational experiments used to evaluate the performance of the proposed method .",
    "we have compared the basic randomized growth algorithm with its extension using the local search procedure with and without exploiting the subgraph neighborhoods .",
    "all the algorithms have been implemented in c # using microsoft visual studio 2015 .",
    "the source code and the execution files have been made available at @xcite .",
    "the calculations have been done on a machine with intel(r ) core(tm ) i7 - 2630 qm cpu 2.00 ghz , 4 gb of ddr3 - 1333 ram , running on microsoft windows 7 home premium 64-bit .      in the evaluation of the proposed algorithm",
    "our focus is on unit disc graphs due to there close relation with wireless networks . as stated above the proposed problem",
    "can be used to find clustering schemes for hierarchical control of such systems with enhanced fault tolerance . due to the fact that this is a newly defined problem",
    "there are no standard benchmark instances available for comparison it was necessary to also generate problem instances with known optimal solutions . in the generation",
    "procedure our goal is to generate graphs that are `` as random as possible '' . to be more precise we attempt to have the node positions close to the uniform probability distribution and to have the number of edges that are adjacent to each node relatively balanced . to achieve this we use the following procedure .",
    "let us say that we are generating a problem instance having @xmath25 root nodes and @xmath12 is the maximal allowed number of nodes in a subgraph , having a solution in which @xmath13 contains all the nodes . for problem instances of this form we generate unit disc graphs inside of a box @xmath274 with dimensions @xmath275 , @xmath275 .",
    "the value for the length for establishing edges is @xmath276 .",
    "@xmath277 is an additional parameter used to vary the density of the graph used in specifying different data sets .",
    "the first step is generating @xmath25 random bi - connected unit disc graphs having @xmath12 nodes .",
    "as our aim is to have the nodes of graph @xmath4 spread over the entire area of the box @xmath274 having an area equal to @xmath275 .",
    "we want to have each of the subgraphs @xmath278 covering an area of close to @xmath279 . to achieve this for each such graph",
    "we first define a box with dimensions @xmath280 , @xmath281 where @xmath72 is randomly selected from the interval @xmath282 used to vary the shape of @xmath278 . for this box",
    "a random bi - connected graph @xmath278 is generated .",
    "this is done by repeatedly generating @xmath283 random points and checking if the resulting unit dist graph contains a bi - connected subgraph @xmath278 containing @xmath12 nodes . to increase the probability of having nodes of the graph covering an area close to @xmath279 ,",
    "four nodes have been forced to random positions at each edge of the box . to achieve this",
    "a high number of graphs needs to be generated , especially in the case of a high value of @xmath12 .",
    "this is the reason for the additional points , specified using parameter @xmath284 , in the box , since it greatly reduces the number of graphs that are generated . out of all the nodes in @xmath278",
    "one would be randomly selected as the @xmath201 .",
    "the next step in generating a problem instance with a known solution is combining graphs @xmath278 .",
    "let us remember that by the method of construction for each subgraph @xmath278 contains @xmath12 nodes having some values of coordinates @xmath285 , as a consequence we can easily translate @xmath278 by a vector @xmath286 by changing all node positions to @xmath287 .",
    "the basic idea of combining the graphs @xmath278 is to randomly position ( translate ) them in a way that all the nodes fit in a box having dimensions @xmath275 , @xmath275 .",
    "as previously stated our goal is to have a relatively balanced number of edges for all the nodes .",
    "secondly , we want to distribute the nodes over the entire box @xmath274 .",
    "this is achieved through the following iterative procedure .",
    "initially , the graph @xmath4 is set to @xmath288 . at each iteration a new graph @xmath278 is set at a random position and added to @xmath4 , but some constraints must be satisfied .",
    "first , all the points in @xmath289 must fit into a box having dimensions @xmath275,@xmath275 .",
    "the number of new edges @xmath290 connecting @xmath4 and @xmath278 , has to satisfy @xmath291 . to achieve this multiple random positions have to be tested for each subgraph @xmath278 .",
    "the parameter @xmath292 is used to bound the allowed number of new edges which is related to the number of edges @xmath293 in the graph as @xmath294 .",
    "empirical tests have shown that values @xmath295 produce satisfactory results .",
    "for each graph @xmath278 a @xmath296 positions are tested and the one satisfying the constraints and having the lowest number of @xmath297 would be chosen for adding to @xmath4 .",
    "the last step is randomly enumerating all the nodes in @xmath4 .      to have an extensive evaluation of the proposed algorithm , we have generated a wide range of problem instances for different numbers of root nodes @xmath25 ( 5 - 100 ) and maximal allowed number of nodes in a subgraph @xmath12 ( 5 - 100 ) .",
    "for each pair @xmath25 , @xmath12 40 problem instances have been generated using the algorithm presented in the previous subsection with different values for the seed of the random number generator .",
    "we have generated two problem sets varying in the level of connectivity by setting @xmath298 .",
    "for each of the problem instances a single run of the growth based algorithms is performed .",
    "this is done for the two local search methods based on @xmath235 and @xmath266 for generating the set of subgraphs @xmath219 which will be regrown .",
    "the same set of parameters for specifying the algorithm is used for all the problem sizes .",
    "the value of the parameter for accepting an ear is @xmath299 in the growth algorithm .",
    "the parameter specifying the maximal expansion of a subgraph at one step is @xmath300 .",
    "the value @xmath301 was used for the the upper bound on the value @xmath229 which is used for generating the size @xmath302 of the set of subgraphs that will be regrown .",
    "these values have been chosen empirically after a wide range of values have been tested in computational experiments . in all of the computational experiments",
    "the algorithm would execute until 10.000 iterations ( generated solutions ) have been reached or more than 2000 iterations have been completed without an improvement to the best found solution .",
    "the results of the computational experiments focus on the quality of found solutions and the computational cost which can be seen in tables [ table : alpha2 ] , [ table : alpha15 ] .",
    "the evaluation of solution quality is done using the average normalized error of the found solutions compared to the known optimal ones , for each of the used methods .",
    "more precisely , for each of the 40 test instances , for each pair @xmath303 , the normalized error is calculated by @xmath304 , and we show the average values . to have a better comprehension of the performance we have also included the standard deviation , maximal errors and the number of found optimal solutions ( hits ) .",
    "the computational cost is analyzed through the average execution time needed to find the best solution . to have a better understanding of these execution times ,",
    "we have also included the average number of iterations ( number of generated solutions ) to find the best solution and the corresponding standard deviation in tables [ table : alpha2 ] , [ table : alpha15 ] .",
    "430ptx*10c    roots x m & & & & & + & @xmath72 & @xmath265 & @xmath72 & @xmath265 & @xmath72 & @xmath265 & @xmath72 & @xmath265 & @xmath72 & @xmath265 + 5 x 5 & 0.30(1.38 ) & 0.30(1.38 ) & 8.00 & 8.00 & 38 & 38 & 122(47 ) & 63(41 ) & 12 & 8 + 5 x 10 & 0.15(0.69 ) & 0.00(0.00 ) & 4.00 & 0.00 & 38 & 40 & 357(224 ) & 269(228 ) & 40 & 31 + 5 x 25 & 0.78(1.32 ) & 0.96(1.61 ) & 5.60 & 7.20 & 24 & 23 & 884(435 ) & 644(170 ) & 236 & 185 + 5 x 50 & 1.12(1.46 ) & 0.90(1.41 ) & 8.00 & 8.00 & 11 & 14 & 1428(1160 ) & 1455(364 ) & 851 & 940 + 5 x 100 & 1.40(1.39 ) & 1.38(1.64 ) & 5.00 & 6.00 & 5 & 7 & 1707(851 ) & 1738(215 ) & 2472 & 2547 + 10 x 5 & 0.50(1.40 ) & 0.25(0.80 ) & 6.00 & 4.00 & 35 & 36 & 393(903 ) & 359(507 ) & 34 & 33 + 10 x 10 & 0.43(0.80 ) & 0.28(0.63 ) & 4.00 & 3.00 & 28 & 32 & 1034(928 ) & 848(775 ) & 162 & 162 + 10 x 25 & 2.78(2.03 ) & 2.30(2.26 ) & 9.60 & 9.60 & 1 & 5 & 1810(1031 ) & 1569(594 ) & 748 & 680 + 10 x 50 & 2.04(1.34 ) & 1.51(1.19 ) & 6.80 & 5.00 & 0 & 1 & 2775(441 ) & 2946(1389 ) & 2497 & 2730 + 10 x 100 & 1.92(1.30 ) & 1.70(1.35 ) & 6.30 & 6.30 & 0 & 0 & 3470(555 ) & 3479(1997 ) & 7883 & 7870 + 25 x 5 & 3.36(3.13 ) & 1.98(2.71 ) & 9.60 & 8.80 & 12 & 21 & 2113(3057 ) & 1635(686 ) & 246 & 207 + 25 x 10 & 2.19(1.42 ) & 1.41(1.18 ) & 5.20 & 4.00 & 2 & 7 & 2268(2228 ) & 1731(890 ) & 431 & 399 + 25 x 25 & 3.35(1.31 ) & 2.04(0.87 ) & 6.88 & 4.16 & 0 & 0 & 4475(3739 ) & 4494(1885 ) & 2221 & 2248 + 25 x 50 & 2.91(0.98 ) & 2.41(0.95 ) & 4.88 & 4.56 & 0 & 0 & 6225(2062 ) & 4480(1170 ) & 6842 & 4985 + 25 x 100 & 2.59(0.93 ) & 2.32(1.04 ) & 6.00 & 5.16 & 0 & 0 & 7220(2221 ) & 6105(1092 ) & 22812 & 18533 + 50 x 5 & 6.47(2.08 ) & 3.08(1.97 ) & 10.40 & 8.00 & 0 & 2 & 3669(3037 ) & 4020(1764 ) & 746 & 728 + 50 x 10 & 2.93(1.16 ) & 1.37(0.82 ) & 6.00 & 3.20 & 0 & 1 & 5385(2962 ) & 3548(248 ) & 1681 & 1118 + 50 x 25 & 3.88(0.86 ) & 2.50(0.74 ) & 5.68 & 4.16 & 0 & 0 & 7779(1800 ) & 7322(1683 ) & 5911 & 4801 + 50 x 50 & 3.91(0.76 ) & 2.79(0.70 ) & 5.68 & 4.40 & 0 & 0 & 8822(813 ) & 7966(1921 ) & 15347 & 12788 + 50 x 100 & 3.51(0.79 ) & 2.47(0.59 ) & 5.26 & 4.40 & 0 & 0 & 9295(228 ) & 8995(916 ) & 42597 & 38596 + 100 x 5 & 8.87(1.53 ) & 4.87(1.19 ) & 13.00 & 7.40 & 0 & 0 & 5333(2432 ) & 5829(832 ) & 2681 & 2256 + 100 x 10 & 4.16(0.75 ) & 1.92(0.74 ) & 6.00 & 3.40 & 0 & 0 & 8100(1171 ) & 6944(2128 ) & 6452 & 3875 + 100 x 25 & 5.51(0.88 ) & 2.99(0.47 ) & 8.00 & 4.04 & 0 & 0 & 9449(306 ) & 9127(475 ) & 17044 & 11720 + 100 x 50 & 5.44(0.70 ) & 3.26(0.44 ) & 6.94 & 4.82 & 0 & 0 & 9710(240 ) & 9640(212 ) & 39697 & 29134 + 100 x 100 & 5.00(0.82 ) & 3.15(0.49 ) & 6.84 & 4.31 & 0 & 0 & 9844(168 ) & 9731(255 ) & 100213 & 78981 +    430ptx*10c    roots x m & & & & & + & @xmath72 & @xmath265 & @xmath72 & @xmath265 & @xmath72 & @xmath265 & @xmath72 & @xmath265 & @xmath72 & @xmath265 + 5 x 5 & 0.10(0.62 ) & 0.10(0.62 ) & 4.00 & 4.00 & 39 & 39 & 158(150 ) & 153(124 ) & 10 & 10 + 5 x 10 & 0.00(0.00 ) & 0.10(0.44 ) & 0.00 & 2.00 & 40 & 38 & 254(147 ) & 211(180 ) & 27 & 28 + 5 x 25 & 0.38(0.69 ) & 0.18(0.42 ) & 2.40 & 1.60 & 29 & 33 & 511(273 ) & 526(480 ) & 137 & 153 + 5 x 50 & 0.05(0.13 ) & 0.06(0.17 ) & 0.40 & 0.80 & 35 & 35 & 911(252 ) & 542(456 ) & 536 & 341 + 5 x 100 & 0.17(0.31 ) & 0.16(0.43 ) & 1.60 & 2.60 & 23 & 26 & 1305(1029 ) & 875(502 ) & 1772 & 1243 + 10 x 5 & 0.75(1.53 ) & 1.00(2.10 ) & 6.00 & 8.00 & 31 & 31 & 624(434 ) & 349(185 ) & 49 & 35 + 10 x 10 & 0.65(1.15 ) & 0.33(0.75 ) & 5.00 & 4.00 & 26 & 31 & 807(457 ) & 578(464 ) & 126 & 121 + 10 x 25 & 0.70(1.01 ) & 0.49(0.82 ) & 4.40 & 3.60 & 18 & 24 & 1548(820 ) & 1269(324 ) & 659 & 595 + 10 x 50 & 0.39(0.55 ) & 0.38(0.40 ) & 2.80 & 1.60 & 15 & 13 & 2429(1540 ) & 1914(1255 ) & 2421 & 2043 + 10 x 100 & 0.50(0.75 ) & 0.38(0.60 ) & 3.00 & 2.80 & 6 & 13 & 2859(1494 ) & 2431(1869 ) & 7150 & 6134 + 25 x 5 & 3.48(1.47 ) & 2.18(1.51 ) & 6.40 & 6.40 & 0 & 6 & 1581(450 ) & 1336(838 ) & 208 & 182 + 25 x 10 & 1.17(1.01 ) & 0.76(0.79 ) & 4.40 & 2.80 & 3 & 13 & 2256(1616 ) & 1664(714 ) & 516 & 496 + 25 x 25 & 1.18(0.74 ) & 0.80(0.69 ) & 3.52 & 2.88 & 0 & 4 & 4392(2236 ) & 3231(730 ) & 2556 & 1970 + 25 x 50 & 0.98(0.64 ) & 0.76(0.79 ) & 3.12 & 4.00 & 0 & 1 & 5522(1851 ) & 4478(1968 ) & 7367 & 5983 + 25 x 100 & 1.22(0.76 ) & 1.02(0.80 ) & 3.52 & 3.44 & 0 & 0 & 6704(2977 ) & 4824(3691 ) & 22793 & 15582 + 50",
    "x 5 & 4.54(1.21 ) & 2.74(0.82 ) & 8.40 & 4.80 & 0 & 0 & 2805(825 ) & 3111(2346 ) & 652 & 644 + 50 x 10 & 1.63(0.78 ) & 0.85(0.49 ) & 3.80 & 2.00 & 0 & 1 & 4818(1732 ) & 3410(1566 ) & 1746 & 1518 + 50 x 25 & 1.72(0.66 ) & 0.90(0.37 ) & 3.36 & 1.60 & 0 & 0 & 7604(1662 ) & 5735(1714 ) & 7030 & 4764 + 50 x 50 & 1.61(0.45 ) & 0.97(0.36 ) & 2.76 & 1.92 & 0 & 0 & 8573(1729 ) & 7110(2077 ) & 18569 & 13504 + 50 x 100 & 1.50(0.60 ) & 1.01(0.44 ) & 2.96 & 2.72 & 0 & 0 & 9178(705 ) & 8132(1189 ) & 52250 & 39889 + 100 x 5 & 5.14(1.03 ) & 3.32(0.74 ) & 7.60 & 5.60 & 0 & 0 & 5442(1610 ) & 4417(976 ) & 2876 & 1843 + 100 x 10 & 2.36(0.57 ) & 1.03(0.45 ) & 3.50 & 1.80 & 0 & 0 & 8590(1161 ) & 6651(1594 ) & 6909 & 4301 + 100 x 25 & 2.52(0.58 ) & 1.19(0.42 ) & 4.24 & 2.16 & 0 & 0 & 9675(146 ) & 8769(3070 ) & 20390 & 12047 + 100 x 50 & 2.51(0.59 ) & 1.23(0.34 ) & 4.18 & 2.28 & 0 & 0 & 9641(78 ) & 9319(387 ) & 46193 & 30645 + 100 x 100 & 2.36(0.47 ) & 1.26(0.33 ) & 3.61 & 1.95 & 0 & 0 & 9708(245 ) & 9702(808 ) & 129312 & 87792 +    as it can be seen in tables [ table : alpha2 ] , [ table : alpha15 ] the local search based on the use of subgraphs @xmath266 manages to significantly outperform @xmath235 . as expected , @xmath266 produces a higher level of improvement for problem instances having a higher number of roots , or in other words when the graph is divided into a greater number of subgraphs . in case of problems having 100 subgraphs",
    "the average error is nearly halved . for problem instances with lower values of @xmath25",
    "this improvement is smaller but consistent . in the 50 problem sets , in only 5 @xmath235 produces slightly better results",
    "this only occurred for problems having five subgraphs , in which the use of neighborhoods is not essential .",
    "overall both methods had a good performance , with an average error going up to @xmath305/@xmath306 and @xmath306/@xmath307 for problem instance generated using @xmath308 for @xmath235 and @xmath266 , respectively . in practice the problem instances having the maximal number of allowed nodes @xmath309 proved to be the hardest .",
    "the methods managed to find better solutions for graphs with higher edge densities ( @xmath310 ) .",
    "we believe that the main reason for this is that such problem instances are in practice easier to solve since there is a greater number of potential bi - connected subgraphs .",
    "the hardest instances to solve are the ones in which the maximal allowed size of a graph is the smallest and the number of subgraphs is the highest . for a notable number of test instances @xmath266 manages to find optimal solutions , in case of @xmath308 it is close to @xmath311 .",
    "it is important to note that optimal solutions are only found for graphs having up to 500 nodes .",
    "@xmath266 has a robust behavior in the sense that the maximal error for a problem set is @xmath312 but in the majority of the cases it is less than @xmath313 for @xmath308 .",
    "when we observe the computational speed of the proposed methods the additional cost for calculating the neighborhoods in @xmath266 is overall neglectable when compared to @xmath235 . in case of large problem instances",
    "the use of neighborhoods even decreases the calculation time .",
    "overall both methods prove to be computationally very efficient having taken 100/120 and 80/87 seconds to generate close to 10 000 solutions in case of graphs having 10 000 nodes and @xmath308 for @xmath235 and @xmath266 , respectively .",
    "it is important to note that for the largest instances in case of both methods the execution of the algorithm was terminated before the stagnation occurred ( no improvements of the best found solution ) .",
    "the scaling of the methods is good in the sense that the increase of average execution time from instances having 100 nodes to 10000 was around 10 000 times .",
    "the number of iterations performed for different problem instances for the same pair @xmath314 would highly vary which can be seen from the standard variation .",
    "we wish to point out that @xmath266 manages to find high quality solutions with a low number of generated solutions when compared to the solution space .",
    "in this paper we have introduced a new problem of finding the maximal number of nodes contained in a set of disjoint bi - connected subgraphs of a graph with the additional constraint on the maximal size of a subgraph .",
    "this type of problem can be potentially applied for many practical problems .",
    "one example is the partitioning of electrical grids into a system of interconnected microgrids with a high level of resistance to failure . for solving the mbcpg - sc ,",
    "a novel computationally efficient method for growing bi - connected subgraphs has been introduced .",
    "this method has been adapted to the setting of growing multiple graphs in parallel to generate solutions for mbcpg - sc .",
    "the quality of solutions generated in this way was further improved using a local search method exploiting neighboring relations between subgraphs .",
    "the proposed method managed to acquire approximate solutions having an average error of up to @xmath306 when compared to known optimal solutions .",
    "further , the method is highly computationally efficient in the sense that it manages to find such solutions within two minutes for graphs having 10.000 nodes .    in the future",
    "we plan to extend the current research in several directions .",
    "first , we aim to explore the weighted version of the problem which would be more suitable for problems occurring in electrical distribution systems .",
    "once the weighted version is solved we may also relate the problem towards multi - depot vehicle rooting problems and the assignment of costumers to routes of different depots .",
    "secondly , we shall extend the method to metaheuristic approaches like ant colony optimization , grasp or variable neighborhood search which appear as good options .",
    "finally , we shall explore the potential of applying the proposed growth procedure for problems like the bi - connected dominating set and bi - connected vertex cover problem .",
    "banerjee s , khuller s ( 2001 ) a clustering scheme for hierarchical control in multi - hop wireless networks . in : infocom 2001 .",
    "twentieth annual joint conference of the ieee computer and communications societies . proceedings .",
    "ieee , ieee , vol  2 , pp 10281037                                    jovanovic r ( 2013 ) benchmark data sets for the problem of the maximal bi - connected partitioning of a graph with a size constraint .",
    "http://mail.ipb.ac.rs/~{}rakaj/home/mbcgpsc.htm[http://mail.ipb.ac.rs/~\\{}rakaj/home/mbcgpsc.htm ]",
    "morgan m , grout v ( 2008 ) finding optimal solutions to backbone minimisation problems using mixed integer programming . in : seventh international network conference ( inc 2008 ) , plymouth , uk , july 8 - 10 , 2008",
    ". proceedings , pp 5363        popa a ( 2013 ) modelling the power supply network - hardness and approximation .",
    "in : chan th , lau l , trevisan l ( eds ) theory and applications of models of computation , lecture notes in computer science , vol 7876 , springer , berlin , pp 6271"
  ],
  "abstract_text": [
    "<S> in this paper we propose a new problem of finding the maximal bi - connected partitioning of a graph with a size constraint ( mbcpg - sc ) . with the goal of finding approximate solutions for the mbcpg - sc , </S>",
    "<S> a heuristic method is developed based on the open ear decomposition of graphs . </S>",
    "<S> its essential part is an adaptation of the breadth first search which makes it possible to grow bi - connected subgraphs . </S>",
    "<S> the proposed randomized algorithm consists of growing several subgraphs in parallel . </S>",
    "<S> the quality of solutions generated in this way is further improved using a local search which exploits neighboring relations between the subgraphs . in order to evaluate the performance of the method , an algorithm for generating pseudo - random unit disc graphs with known optimal solutions </S>",
    "<S> is created . </S>",
    "<S> the conducted computational experiments show that the proposed method frequently manages to find optimal solutions and has an average error of only a few percent to known optimal solutions . </S>",
    "<S> further , it manages to find high quality approximate solutions for graphs having up to 10.000 nodes in reasonable time .    </S>",
    "<S> example.eps gsave newpath 20 20 moveto 20 220 lineto 220 220 lineto 220 20 lineto closepath 2 setlinewidth gsave .4 setgray fill grestore stroke grestore </S>"
  ]
}
{
  "article_text": [
    "( * * l**eo s * * p**arallel * * ar**chitecture and * * d**atastructures ) is designed as a generic system platform for implementing higher - order ( ho ) logic based knowledge representation , and reasoning tools . in particular ,  provides the base layer of the new ho automated theorem prover ( atp ) , the successor of the well known provers  @xcite and  @xcite .",
    "previous experiments with  and the oants mechanism @xcite indicate a flexible , multi - agent blackboard architecture is well - suited for automating ho logic @xcite . however , ( due to project constraints ) such an approach has not been realized in . instead",
    ", the focus has been on the proof search layer in combination with a simple , sequential collaboration with an external first - order ( fo ) atp .",
    "also provides improved term data structures , term indexing , and term sharing mechanisms , which unfortunately have not been optimally exploited at the clause and the proof search layer . for the development of  the philosophy therefore",
    "has been to allocate sufficient resources for the initial development of a flexible and reusable system platform .",
    "the goal has been to bundle , improve , and extend the features with the highest potential of the predecessor systems , and oants .",
    "the result of this initiative is , which is written in scala and currently consists of approx .",
    "13000 lines of code .",
    "combines a sophisticated data structure layer @xcite ( polymorphically typed @xmath0-calculus with nameless spine notation , explicit substitutions , and perfect term sharing ) , with a multi - agent blackboard architecture @xcite ( supporting prover parallelism at the term , clause , and search level ) and further tools including a parser for all tptp @xcite syntax dialects , generic support for interfacing with external reasoners , and a command line interpreter .",
    "such a combination of features and support tools is , up to the authors knowledge , not matched in related ho reasoning frameworks .",
    "the intended users of the  package are implementors of ho knowledge representation and reasoning systems , including novel atps and model finders .",
    "in addition , we advocate the system as a platform for the integration and coordination of heterogeneous ( external ) reasoning tools .",
    "data structure choices are a critical part of a theorem prover and permit reliable increases of overall performance when implemented and exploited properly .",
    "key aspects for efficient theorem proving have been an intensive research topic and have reached maturity within fo - atps @xcite .",
    "naturally , one would expect an even higher impact of the data structure choices in ho - atps .",
    "however , in the latter context , comparably little effort has been invested yet  probably also because of the inherently more complex nature of ho logic .",
    "[ [ term - language . ] ] term language .",
    "+ + + + + + + + + + + + + +    the  term language extends the simply typed @xmath0-calculus with parametric polymorphism , yielding the second - order polymorphically typed @xmath0-calculus ( corresponding to @xmath02 in barendregt s @xmath0-cube  @xcite ) .",
    "in particular , the system under consideration was independently developed by reynolds  @xcite and girard  @xcite and is commonly called system f today . further extensions , for example to admit dependent types , are future work .",
    "thus ,  supports the following type and term language : + @xmath1               & \\quad | \\ ; \\alpha                  \\hspace{2.5em } \\text{\\small(type variable ) } \\\\[-.4em ]               & \\quad | \\ ; \\tau \\to \\nu            \\hspace{.5em } \\text{\\small(abstraction type ) } \\\\[-.4em ]               & \\quad | \\ ; \\forall \\alpha . \\",
    "; \\tau \\hspace{.8em }               \\text{\\small(polymorphic type ) } \\\\[.5em ]    \\end{split}\\ ] ] @xmath2         & \\quad | \\ ; ( \\lambda x_{\\tau } \\ : s_\\nu)_{\\tau \\to \\nu }                   \\ ; | \\ ; ( s_{\\tau \\to \\nu } \\ ; t_\\tau)_\\nu   \\hspace{2.4em } \\text{\\small(term abstr .",
    "/ appl . ) } \\\\[-.4em ]         & \\quad | \\ ; ( \\lambda \\alpha \\ : s_\\tau)_{\\forall \\alpha\\;\\tau } \\hspace{.35em }              \\ ; | \\ ; ( s_{\\forall \\alpha\\;\\tau } \\ ; \\nu)_{\\tau[\\alpha/\\nu ] }                                                        \\hspace{.9em }                                                        \\text{\\small(type                                                          abstr . / appl . ) }      \\end{split}\\ ] ]    an example term of this language is : + @xmath3    [ [ nameless - representation . ] ] nameless representation .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    internally ,  employs a locally nameless representation ( both at the type and term level ) , that extends de - bruijn indices to ( bound ) type variables @xcite .",
    "the definition of de - bruijn indices  @xcite for type variables is analogous to the one for term variables .",
    "thus , the above example term is represented namelessly as @xmath4 where de - bruijn indices for type variables are underlined .",
    "[ [ spine - notation - and - explicit - substitutions . ] ] spine notation and explicit substitutions .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    on top of nameless terms ,  employs spine notation  @xcite and explicit substitutions @xcite .",
    "the first technique allows quick head symbol queries , and efficient left - to - right traversal , e.g. for unification algorithms .",
    "the latter augments the calculus with substitution closures that admit efficient ( partial ) @xmath5-normalization runs .",
    "internally , the above example reads @xmath6 where @xmath7 combines function _ heads _ to argument lists ( _ spines _ ) in which @xmath8 denotes concatenation of arguments .",
    "[ [ term - sharingindexing . ] ] term sharing / indexing .",
    "+ + + + + + + + + + + + + + + + + + + + + +    terms are perfectly shared within , meaning that each term is only constructed once and then reused between different occurrences .",
    "this does not only reduce memory consumption in large knowledge bases , but also allows constant - time term comparison for syntactic equality using the term s pointer to its unique physical representation .",
    "for fast ( sub-)term retrieval based on syntactical criteria ( e.g. head symbols , subterm occurrences , etc . ) from the term indexing mechanism , terms are kept in @xmath5-normal @xmath9-long form .",
    "[ [ suite - of - normalization - strategies . ] ] suite of normalization strategies .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    comes with a number of different ( heuristic ) @xmath5-normalization strategies that adjust the standard leftmost - outermost strategy with different combinations of strict and lazy substitution composition resp .",
    "normalization and closure construction .",
    "@xmath9-normalization is invariant wrt .",
    "@xmath5-normalization of spine terms and hence @xmath9-normalization ( to long form ) is applied only once for each freshly created term .",
    "[ [ evaluation - and - findings . ] ] evaluation and findings .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    a recent empirical evaluation @xcite has shown that there is _ no single best reduction strategy _ for ho - atps .",
    "more precisely , for different tptp problem categories this study identified different best reduction strategies .",
    "this motivates future work in which machine learning techniques could be used to suggest suitable strategies .",
    "in addition to supporting classical , sequential theorem proving procedures ,  offers means for breaking the global atp loop down into a set of subtasks that can be computed in parallel .",
    "this also includes support for subprover parallelism as successfully employed , for example , in isabelle / hol s sledgehammer tool @xcite .",
    "more generally ,  is construed to enable parallalism at various levels inside an atp , including the term , clause , and search level @xcite . for this ,  provides a flexible multi - agent blackboard architecture .",
    "[ [ blackboard - architecture . ] ] blackboard architecture .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    process communication in  is realized indirectly via a blackboard architecture @xcite .",
    "the  blackboard @xcite is a collection of globally shared and accessible data structures which any process , i.e. agent , can query and manipulate at any time in parallel . from the blackboard s perspective each process is a specialist responsible for exactly one kind of problem .",
    "the blackboard is generic in the data structures , i.e. it allows the programmer to add various kinds data structures for any kind of data .",
    "insertion into the data structures is handled by the blackboard .",
    "hence , each specialist can indeed by specialized on a single data structure .",
    "the  blackboard mechanism and associated data structures provide specific support for nested and - or search trees , meaning that sets of formulae can be split into ( nested ) and - or contexts .",
    "moreover , for each supercontext respective tptp szs status @xcite information is automatically inferred from the statuses of its subcontexts .",
    "[ [ agents . ] ] agents .",
    "+ + + + + + +    in  specialist processes can be modeled as agents @xcite .",
    "classically , agents are composed of three components : environment perception , decision making , and action execution @xcite .",
    "the perception of  agents is trigger - based , meaning that each agent is notified by a change in the blackboard .",
    "agents are to be seen as homomorphisms on the blackboard data together with a filter when to apply an action .",
    "depending on the perceived change of the resp .",
    "state of the blackboard an agent decides on an action it wants to execute .",
    "[ [ auction - scheduler . ] ] auction scheduler .",
    "+ + + + + + + + + + + + + + + + + +    action execution in  is coordinated by an auction based scheduler , which implements an own approximation algorithm @xcite for combinatorical auctions @xcite .",
    "more precisely , each agent computes and places a bid for the execution of its action(s ) .",
    "the auction based scheduler then tries to maximize the global benefit of the particular set of actions to choose .",
    "this selection mechanism works uniformly for all agents that can be implemented in .",
    "balancing the value of the actions is therefore crucial for the performance and the termination of the overall system .",
    "a possible generic solution for the agents bidding is to apply machine learning techniques to optimize the bids for the best overall performance .",
    "this is future work .",
    "note that the use of advanced agent technology in  is optional .",
    "a traditional atp can still be implemented , for example , as a single , sequential reasoner instantiating exactly one agent in the  framework .    [ [ agent - implementation - examples . ] ] agent implementation examples .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for illustration purposes , some agent implementations have been exemplarily included in the  package .",
    "for example , simple agents for _ simplification _ , _ skolemization _ , _ prenex - form _ , _ negation - normal - form _ and _ paramodulation _ are provided . moreover ,",
    "the agent - based integration of external atps is demonstrated and their parallelization is enabled by the  agent framework .",
    "this includes agents embodying  and satallax @xcite running remotely on the systemontptp @xcite servers in miami .",
    "these example agents can be easily adapted for other tptp compliant atps .",
    "each example agent comes with an applicability filter , an action definition and an auction value computation .",
    "the provided agents suffice to illustrate the working principles of the  multi - agent blackboard architecture to interested implementors .",
    "after the official release of , further , more sophisticated agents will be included and offered for academic reuse .",
    "the  framework provides useful further components .",
    "for example , a generic parser is provided that supports all tptp syntax dialects . moreover ,",
    "a command line interpreter supports fine grained interaction with the system .",
    "this is useful not only for debugging but also for training and demonstration purposes .",
    "as pointed at above , useful support is also provided for the integration of external reasoners based on the tptp infrastructure .",
    "this also includes comprehensive support for the tptp szs result ontology .",
    "moreover , ongoing and future work aims at generic means for the transformation and integration of ( external ) proof protocols , ideally by exploiting results of projects such as proofcert .",
    "there is comparably little related work to , since higher - order theorem provers typically implement their own data structures .",
    "related systems ( mostly concerning term representation ) include @xmath0prolog and teyjus @xcite , the abella interactive theorem prover @xcite , and the logical framework twelf @xcite .",
    "m.  abadi , l.  cardelli , p .-",
    "curien , and j .- j . levy .",
    "explicit substitutions . in _ proc . of the 17th acm sigplan - sigact symposium on principles of programming languages _ , popl 90 , pages 3146 , new york , ny , usa , 1990 .",
    "acm .              c.  benzmller , f.  theiss , l.  paulson , and a.  fietzke .",
    "- a cooperative automatic theorem prover for higher - order logic ( system description ) . in _ proc . of ijcar 2008",
    "_ , volume 5195 of _ lncs _ , pages 162170 .",
    "springer , 2008 .                      c.  liang , d.  mitchell .",
    "system description : teyjus - a compiler and abstract machine based implementation of @xmath0prolog . in _ automated deduction cade-16",
    "_ , lncs , vol .",
    "1632 , pp .",
    "springer berlin heidelberg ( 1999 )    f.  pfenning , c.  schrmann .",
    "system description : twelf  a meta - logical framework for deductive systems . in _ automated deduction _ , cade-16 , trento , italy , july 7 - 10 , 1999 , proceedings .",
    ". 202206 ( 1999 )        a.  steen .",
    "efficient data structures for automated theorem proving in expressive higher - order logics .",
    "master s thesis , freie universitt berlin , 2014",
    ". http://userpage.fu-berlin.de/$\\sim$lex/drop/steen_datastructures.pdf .",
    "m.  wisniewski .",
    "agent - based blackboard architecture for a higher - order theorem prover .",
    "master s thesis , freie universitt berlin , 2014 ."
  ],
  "abstract_text": [
    "<S> supports the implementation of knowledge representation and reasoning tools for higher - order logic(s ) . </S>",
    "<S> it combines a sophisticated data structure layer ( polymorphically typed @xmath0-calculus with nameless spine notation , explicit substitutions , and perfect term sharing ) with an ambitious multi - agent blackboard architecture ( supporting prover parallelism at the term , clause , and search level ) . </S>",
    "<S> further features of  include a parser for all tptp dialects , a command line interpreter , and generic means for the integration of external reasoners . </S>"
  ]
}
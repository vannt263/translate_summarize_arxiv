{
  "article_text": [
    "_ curve implicitization _ , which consists of finding",
    "the implicit equation of a curve @xmath0 given by a rational parametrization , is an important problem in computer aided geometric design , and several theoretical results which help to its solution have been developed in the fields of classical algebraic geometry and computer algebra .",
    "some of the methods for the effective computation of the implicit equation are based on interpolation .",
    "we will consider three types of interpolation problems which share the same interpolation space .",
    "the different ways of choosing the interpolation nodes will lead to linear systems with very different coefficient matrices : an unstructured one , the transpose of a vandermonde matrix , and the kronecker product of two vandermonde matrices .",
    "the kronecker product structure of the matrix in the third method will make much less expensive the computational cost of the process [ 12 , 22 ] and will introduce a high degree of _ parallelism_.    in this application of interpolation _ exact arithmetic _ is used , so stability is not as important as efficiency and we do not have to worry about matters which are very important in numerical analysis such as the ill - conditioning of vandermonde matrices [ 9 ] .",
    "in fact , the algorithms to be described use techniques from numerical linear algebra but all the computations are carried out in exact arithmetic , which allows them to be applied with no difficulty even when polynomials of very high degree are involved .",
    "finally , the function to be interpolated is itself a bivariate polynomial , so there will be no interpolation error , and consequently in this case the use of interpolation will not be related to approximation theory .    in order to make our exposition as clear and complete as possible",
    ", we will begin with a very small example which will be useful to illustrate the different approaches to the problem .",
    "let us consider the hyperbola with parametric equations @xmath1 its implicit equation is @xmath2 in the following sections it will be shown how this implicit equation can be obtained .",
    "the first problem to be addressed is the choice of an appropriate interpolation space .",
    "let us observe that the implicit equation of any degree @xmath3 polynomial rational parametric curve , with the same denominator in both components of the parametrization , is a degree @xmath3 algebraic curve ( see section 15.4 of [ 20 ] ) .",
    "however , this is not necessarily true when two different denominators are considered in the parametrization . in our example , both parametric equations have degree @xmath4 while the implicit equation has total degree @xmath5 .",
    "this is the reason why , when considering the general situation of two different denominators , it is more natural to consider the _ coordinate degree _",
    "( i.e. the degree in @xmath6 , the degree in @xmath7 ) instead of the total degree",
    ". the following result ( see [ 15 ] and [ 21 ] ) gives us the precise form of the implicit equation .    * theorem 1 . * _ let @xmath8 be a proper rational parametrization of the irreducible curve @xmath0 defined by @xmath9 , and let @xmath10",
    ". then @xmath11 and @xmath12 .",
    "_    theorem @xmath4 tells us that the polynomial @xmath9 defining the implicit equation of the curve @xmath0 belongs to the polynomial space @xmath13 , where @xmath14 and @xmath15 .",
    "the dimension of @xmath13 is @xmath16 , and a basis is given by @xmath17 @xmath18    moreover @xmath19 and @xmath20 , and therefore there is no interpolation space @xmath21 with @xmath22 or @xmath23 such that @xmath9 belongs to @xmath21 .",
    "in addition , the selection of the interpolation space @xmath13 is also suitable because in practice the implicit representation of a rational parametric curve is a dense polynomial [ 13 ] .",
    "so in the application of interpolation we are considering the interpolation space is given and we have to choose appropriate lagrange interpolation nodes .",
    "as we will see , for obtaining a linear system with a structured coefficient matrix we will need the introduction of _ resultants _ , a tool which is widely used in computer algebra and has a variety of applications [ 4 ] .    in the next three sections we will discuss three different approaches to the implicitization problem by using interpolation , and in section 5 we will analyze their respective computational complexities .",
    "the first approach , included in [ 11 ] along with other approaches to implicitization , leads to a non - structured interpolation problem whose solution is not unique .",
    "since the dimension of the linear space of solutions will be seen to be almost surely @xmath4 , the implicit equation can be computed in the following way .",
    "as we know the interpolation space ( it is @xmath13 ) , we may evaluate the parametrization @xmath24 at some finite set of values of @xmath25 ( for example @xmath26 ) for obtaining @xmath27 distinct rational interpolation nodes @xmath28    then we can formulate an interpolation problem using those interpolation nodes , in this case with _ all the interpolation data equal to zero_. so , we have an interpolation problem in which the corresponding linear system is a non - structured homogeneous one , and we know from section 1 that a nontrivial solution always exists .",
    "if we denote by @xmath29 the coefficient matrix of this homogeneous linear system and @xmath30 then the set of all solutions of @xmath31 is the nullspace of @xmath29 , and its dimension @xmath32 is great or equal than @xmath4 .",
    "let us recall that bzout s theorem states that _ two plane curves of degree @xmath33 without common components have at most @xmath34 common complex points_. as a consequence of this theorem , the probability of having @xmath35 is negligible , since we are prescribing @xmath16 interpolation conditions at rational points .",
    "however , if that happens we can add a new interpolation condition to find the correct implicit equation .",
    "in our example the rank is necessarily equal to @xmath36 because @xmath37 and therefore @xmath38 .",
    "if we consider @xmath39 the interpolation nodes in the corresponding order are @xmath40 and the coefficient matrix of the homogeneous linear system @xmath41 is @xmath42 the solution vector is @xmath43 or any multiple of it , and so the implicit equation of the given curve is @xmath2",
    "the computation of the implicit equation of a rationally parametrized curve can be carried out by computing the _ resultant _ of two polynomials .",
    "the following theorem provides the way of doing it ( see [ 15 ] and [ 21 ] ) .",
    "taking this theorem into account , the polynomial defining the implicit equation of the curve of the example introduced in section 1 is @xmath44 which is precisely @xmath45 the resultant of two polynomials can be computed , for example , by using the command resultant of the symbolic computation system _",
    "maple_.    however , let us point out here that , in general , the computation of @xmath46 is not a trivial task .",
    "it is the determinant of the sylvester ( or bzout ) matrix of @xmath47 and @xmath48 ( see [ 20 ] , for example ) , and therefore its computation requires the expansion of the determinant of a matrix whose entries are polynomials in the variables @xmath6 and @xmath7 .",
    "the symbolic expansion of a determinant is a computer algebra problem which requires a lot of time and space to be solved due to the problem of _ intermediate expression swell_. this fact is recognized in [ 13 ] where it is said that the _ bottleneck _ of the algorithm for implicitizing rational surfaces is the symbolic expansion of the determinant . as it can be read in [ 5 ] , one of the most interesting approaches for the symbolic expansion of the determinant",
    "is based on interpolation , and it is the one presented in [ 13 ] and [ 14 ] .    in that approach",
    "the @xmath27 interpolation data are obtained by evaluating the sylvester ( or bzout ) matrix at the @xmath27 interpolation nodes @xmath49 and computing the corresponding constant determinants .",
    "this clever selection of the nodes reduces the solution of the interpolation problem to the solution of a linear system of order @xmath27 whose coefficient matrix is the transpose of a nonsingular ( since different monomials evaluate to different values ) vandermonde matrix ( see , for example , [ 17 ] for the expression of the vandermonde matrix ) .",
    "we illustrate this approach with our example .",
    "we start by showing the sylvester matrix of the polynomials @xmath50 and @xmath51 , which is @xmath52 in order to compute its determinant by using this interpolation approach , we consider @xmath53 and @xmath54 , and so the @xmath55 interpolation nodes are : @xmath56 the vector with the interpolation data in the corresponding order is @xmath57 and the coefficient matrix of the linear system is @xmath58 the solution of the linear system @xmath59 is the vector @xmath60 and therefore the implicit equation of the curve is @xmath2    in [ 13 ] , where this approach is presented for the case of surface implicitization , it is indicated that in this way the problem reduces to interpolating a univariate polynomial .",
    "however , it must be observed that the coefficient matrix of the linear system is not a vandermonde matrix associated with a univariate lagrange interpolation problem : it is the transpose of such a matrix .",
    "the approach of [ 13 ] has its roots in computer algebra ( see , for example , [ 23 ] ) , and so the solution of vandermonde systems by bjrck - pereyra algorithms [ 1 ] is not considered there .",
    "a recent extension of the bjrck - pereyra approach ( closely related to bidiagonal factorizations of the inverse of the matrix ) to vandermonde - like matrices can be seen in chapter 22 of [ 9 ] .",
    "another approach for computing the implicit equation of a plane rationally parametrized curve by means of resultants and interpolation is the one introduced in [ 15 ] .    in that paper ,",
    "the polynomial defining the implicit equation of the curve , that is , @xmath46 , is computed by using a bivariate interpolation technique in which the nodes are arranged forming a tensor product grid .",
    "this choice of the interpolation nodes is specially appropriate for the interpolation space we are working with , because it reduces the solution of the interpolation problem to the solution of a linear system of order @xmath27 whose coefficient matrix is the kronecker product @xmath61 ( where the kronecker product @xmath62 is defined by blocks as @xmath63 , with @xmath64 ) with @xmath65 being the vandermonde matrix generated by the first component of the interpolation nodes and @xmath66 being the vandermonde matrix generated by the second component of the interpolation nodes ( see [ 15 ] for the details ) .",
    "in addition , the algorithm included there reduces the solution of this linear system with kronecker product structure to solving @xmath67 vandermonde linear systems with the same matrix @xmath66 and @xmath68 vandermonde linear systems with the same matrix @xmath65 . in this way",
    ", the solution of a bivariate interpolation problem is reduced to the solution of only univariate interpolation problems in the variables @xmath6 and @xmath7 .",
    "a _ maple _ implementation of the complete algorithm is also included in the paper .",
    "as every linear system to be solved is a vandermonde linear system , the algorithm uses the bjrck - pereyra algorithm [ 1 , 8 ] for solving them , since it takes advantage of the special structure of the coefficient matrices @xmath65 and @xmath66 .",
    "the specific choice of the interpolation nodes proposed in the paper is @xmath69 in the same order as the interpolation basis .",
    "now we apply this technique to our example .",
    "the interpolation nodes considered in this case are : @xmath70 the vector with the interpolation data in the corresponding order is : @xmath71 the coefficient matrix of the linear system is : @xmath72 the solution of the linear system @xmath59 is the vector @xmath60 and therefore , the implicit equation of the curve is @xmath2",
    "we start this section by presenting a bigger ( but still small ) example of curve implicitization in which we will show the different behaviour of the three different approaches we have described in the previous sections .      when computing @xmath9 by means of the approach described in section @xmath5 , the implicitization problem is reduced to the solution of a homogeneous linear system of order @xmath76 with a non - structured coefficient matrix @xmath29 .",
    "as this matrix is too big for including it here , we just show one of its largest entries : @xmath77 after solving this linear system the vector with the coefficients of @xmath9 is obtained .",
    "when using the approach described in section @xmath36 , the implicitization problem is reduced to the solution of a non - homogeneous linear system @xmath59 of order 16 where @xmath29 is the transpose of a vandermonde matrix . as we have done before , we only present the greatest entry of the matrix , which corresponds to the evaluation of the monomial @xmath81 at the interpolation node @xmath82 : @xmath83 as for the vector @xmath84 with the interpolation data , its largest component is @xmath85 the solution of this linear system in which very large numbers are involved is the vector with the coefficients of @xmath9 .    finally , when we compute the implicit equation of @xmath0 by means of the method described in section @xmath86 , the problem is reduced to the solution of the non - homogeneous linear system @xmath59 of order 16 where @xmath29 is the kronecker product of two vandermonde matrices of order @xmath86 , @xmath87 and the vector @xmath84 containing the interpolation data is @xmath88 in this case only @xmath89 linear systems with the vandermonde matrix of order @xmath86 presented above have to be solved for obtaining the coefficients of @xmath9 .",
    "let us observe here that , as it can be read in [ 20 ] , the implicit equation of a rational curve can also be computed by using techniques based on computing grbner bases with the pure lexicographical ordering .",
    "however , although these techniques are very important from a theoretical point of view , they are not so effective in practice because they are very time and space consuming , even for problems of moderate degree .",
    "an example of this situation is the example introduced in this section .",
    "when we tried to compute the implicit equation of @xmath0 by using the _ maple _ command for computing grbner bases gbasis no answer was obtained after a lot of minutes of computation , and in addition a lot of memory space ( more that 70 megabytes without finishing the computation ) was required .    in this sense , it can be read in [ 7 ] that the complexity theory for grbner bases _ gives rise to the pessimistic view that these methods for polynomial ideals are not useful in practice , except for rather small cases_. in [ 20 ] it is recognized that the use of grbner bases for surface implicitization _ is not very computationally efficient _ , and this fact is also observed in a different application of grbner bases in [ 3 ] . as illustrated with our example in this section , the problems with grbner bases appear also in the case of curve implicitization and with small degrees .    as for the approaches based on interpolation",
    ", it must be observed that the numbers involved in the first and in the second approach are much larger than the numbers involved in the third one ( see the example at the beginning of this section ) , which can make the computations slower .",
    "now we briefly analyze the computational complexity of the three methods for curve implicitization presented in this paper , beginning with the stage corresponding to the solution of the linear systems .",
    "we will do it in terms of arithmetic operations , and for the sake of simplicity we assume @xmath90 .",
    "* the computational complexity of the first approach is the computational complexity of solving a non - structured linear system of order @xmath27 : @xmath91 . *",
    "the computational complexity of the second approach is the computational complexity of solving a linear system whose coefficient matrix is the transpose of a vandermonde matrix of order @xmath27 : @xmath92 if the bjrck - pereyra algorithm is used [ 1 , 8 ] . *",
    "the computational complexity of the third approach is the computational complexity of solving @xmath93 vandermonde linear systems of order @xmath94 : @xmath95 if the bjrck - pereyra algorithm is used for solving each vandermonde linear system [ 1 , 8 ] .",
    "let us point out that in the first approach , in addition to the higher computational cost of solving the linear system , first it is necessary to evaluate the parametric equations to obtain the interpolation nodes , and then the coefficient matrix of the linear system ( which is not a structured matrix ) must be constructed and stored .    as for the computation of the interpolation data ,",
    "its complexity is the same both in the second and in the third approach , and it is the complexity of computing @xmath96 determinants of order @xmath97 : @xmath98 .",
    "let us point out here that , although this complexity is greater than the complexity of solving the linear systems , this stage can easily be parallelized because each datum can be computed separately .",
    "the design of _ parallel algorithms _ for computer algebra problems such as resultant computation and elimination of variables has been recently considered in [ 2 ] and [ 10 ] . in this sense , let us observe that the approach introduced in section 4 has a high degree of intrinsic parallelism present not only in the computation of the interpolation data but also in the computation of the coefficients of the interpolating polynomial , since each one of the linear systems with matrix @xmath66 can be solved independently and the same happens to each one of the linear systems with matrix @xmath65 ( see [ 15 ] ) .",
    "although it is true that this measure of computational complexity -which is the standard one in numerical computations- is not a complete measure of the computational complexity in exact arithmetic , where the computational cost also depends on the size and structure of the numbers , it nevertheless can serve to have useful estimates of the computational complexity . in this sense , we can read in [ 19 ] how the reduction of the order of the resultant matrix from @xmath99 to @xmath3 may lead to faster computations .",
    "in addition , it must be pointed out that the two implicitization methods based on interpolation and resultants we have described can also take advantage of this reduction in the order of the resultant matrix because they can be used with any other resultant matrix , for example , the resultant matrix obtained when using the method of moving curves [ 19 ] .",
    "finally , it must be noticed that in the situation described in the approach of section 4 , that is , when the nodes are arranged forming a cartesian product grid , explicit formulas ( involving the _ lagrange basis _ ) exist for computing the interpolation polynomial [ 18 ] .",
    "nevertheless , the existence of an explicit formula does not imply there is no computational cost in applying it . in this sense we can recall the classical paper [ 6 ] , where it is stressed that the fact that we have cramer s rule does not make the practical solution of linear systems a _ trivial and dull _ task .    in our case",
    ", it must be taken into account that the computation of the interpolation polynomial _ in the monomial basis _ by using an explicit formula has a computational cost ( see [ 7 ] for the cost in the univariate case ) .",
    "it must be observed that our approach described in section 4 has a complexity of the same order as the algorithm presented in a more general setting in [ 16 ] .",
    "t. w. sederberg , j. zheng , chapter 15 : algebraic methods for computer aided geometric design , in : handbook of computer aided geometric design eds .",
    "g. farin , j. hoscheck and m. s. kim , elsevier , 2002 , pp . 363387 ."
  ],
  "abstract_text": [
    "<S> a nonstandard application of bivariate polynomial interpolation is discussed : the implicitization of a rational algebraic curve given by its parametric equations . </S>",
    "<S> three different approaches using the same interpolation space are considered , and their respective computational complexities are analyzed . </S>",
    "<S> although the techniques employed are usually associated to numerical analysis , in this case all the computations are carried out using exact rational arithmetic . </S>",
    "<S> the power of the kronecker product of matrices in this application is stressed .    </S>",
    "<S> interpolation ; vandermonde matrix ; kronecker product ; computer aided geometric design ; resultant </S>"
  ]
}
{
  "article_text": [
    "many astrophysical gas dynamical systems involve the motion of compressible fluid with relativistic velocity or energy density .",
    "techniques for the numerical solution of the equations governing the multi - dimensional dynamics of relativistic fluids have been developed greatly in recent years .",
    "significant recent progress has been made in grid - based methods where the fuid is described using eulerian meshes for hydrodynamics on both uniform meshes ( see review by marti & muller , 2003 , and references therein ) and with adaptive mesh refinement ( amr ) @xcite , as well as using smoothed particle hydrodynamics ( rosswog , 2010 ) .",
    "extensions of these methods have been implemented including for general relativistic magnetohydrodynamics @xcite and for dynamic spacetimes @xcite .    in this paper",
    "we present a new method for relativistic gas dynamics based on a dynamic voronoi tessellation of space .",
    "the voronoi tessellation generates a numerical mesh which moves and distorts with an arbitrary velocity field depending on how the mesh - generating points in the tessellation are moved .",
    "while holding the mesh points fixed results in an eulerian method , allowing them to move with the local fluid velocity results in an effectively lagrangian method . in this paper",
    "we present the tess code which we have written on a dynamic mesh generated by successive voronoi tesselations of the spatial domain . tess is a numerical code and general framework for both relativistic and non - relativistic implementations of hydrodynamics and magnetohydrodynamics ( mhd ) . the strength of the method is to retain the advantages of conservation - law formulation essential for accurate computation of relativistic gas dynamics , while gaining the advantages of a lagrangian scheme . of particular importance , the mesh motion allows for contact discontinuities to propagate without the excessive numerical diffusion often found in fixed mesh computations .",
    "the preservation of contact discontinuities is of great importance for problems involving the development of fluid instabilities and for reactive hydrodyamics where artifical diffusion of reactant species can lead to unphysical solutions . using mesh motion",
    ", tess accurately solves the numericaly challenging case of relativistic shear flows ( see section 3 ) , a problem which underresolved eulerian simulations calculate incorrectly ( zhang & macfadyen , 2006 ) .",
    "lagrangian codes have had great success when employed in one dimension , usually to treat problems with spherical symmetry .",
    "multidimensional problems , however , are more challenging for lagrangian codes , due to distortion of the computational mesh when complexities in the flow develop .",
    "@xcite formulated a simple strategy for dealing with mesh distortion in multiple dimensions , which was to continuously remap the computational domain as the system evolved , to prevent the mesh from becoming overly distorted .",
    "codes employing this strategy are referred to as `` arbitrary lagrangian - eulerian '' ( ale ) codes .",
    "ale codes solve the problem of mesh distortion , but at the cost of diffusive remaps .",
    "@xcite addressed the problem of mesh distortion by using a tessellated computational domain .",
    "the improvement was to employ the voronoi tessellation ; a unique decomposition of space into polyhedra based on a set of mesh - generating points ( originally called `` fluid markers '' ) .",
    "the advantage of such an approach is that the mesh - generating points can move freely through the computational domain and can be added or removed to enable adaptive refinement .",
    "the voronoi tessellation adjusts its shape and topology so that the computational mesh does not become overly distorted .",
    "@xcite also made use of domain tessellation for mesh generation .",
    "his `` signal method '' was a finite - volume method , partially inspired by finite - element methods employed for solving problems with irregular boundaries .",
    "the method was first - order and conservative , and employed a delaunay triangulation of the computational domain .",
    "the technique employed high - resolution shock - capturing techniques developed over the last decades for grid - based eulerian codes , while also having the advantages that come from solving the fluid equations on a moving mesh .",
    "the `` grid cells '' in this case were delaunay triangles , and the main source of diffusion came about during changes in the mesh topology . during such changes",
    ", the conserved quantities were redistributed evenly among the affected triangles .",
    "this process introduced diffusion similar to that encountered in ale codes during remapping of the mesh , but because the diffusion was localized and only occurred during topology changes , the accumulated error was reduced .",
    "more recently , @xcite developed a second - order finite - volume approach to solving euler s equations using a voronoi tessellation of the computational domain .",
    "this method was implemented in the arepo code , which has recently been applied to simulate star formation in a cosmological context @xcite .",
    "the advantage of using the voronoi tessellation instead of the delaunay triangulation is that the voronoi cells do not suffer abrupt transformations during changes in mesh topology so that re - mapping and fluid re - distribution are uneccessary .",
    "this was the first time a second - order finite - volume lagrangian method of this nature was proposed .",
    "another important property of this method galilean invariance ; the code s performance is independent of the velocity of the reference frame in which the calculation is performed . in this paper",
    "we generalize these developments to the case of relativistic hydrodynamics .",
    "we should not expect to retain all of the advantages found in the newtonian case ; in particular , the prospect of having a lorentz - invariant formulation is not to be expected , since in standard formulations mesh points are assumed to be simultaneous at each timestep .",
    "the paper is structured as follows : in  2 , we describe the formulation of the fluid equations , and the specific implementation in the code . in  3 , we provide a series of test problems to determine the convergence rate and to illustrate what sort of problems naturally benefit from a lagrangian approach . in  4 , we demonstrate the code s usefulness in an astrophysical context , by looking at the rayleigh - taylor instability in a decelerating relativistic shock . in  5 , we summarize our results .",
    "we first give a brief description of the voronoi tessellation , before explaining how it is used in solving the fluid equations .",
    "a tessellation is a decomposition of space into separate pieces , in our case polygons or polyhedra . for the moment",
    ", we restrict our attention to two - dimensional tesselations , mainly because they are easier to describe and to visualize .    a voronoi tessellation can be generated from some collection of points ( see fig . [",
    "fig : tessellation ] ) .",
    "each mesh - generating point ( i.e. `` mesh generator '' ) will correspond to a polygon in the tessellation .",
    "the polygon associated with point p is defined to be the set of all points which are closer to p than to any other mesh generating point .",
    "thus , if an edge is adjacent to the two voronoi polygons of points p and q , this edge lies in the line of points which is equidistant to p and q. in general , we will refer to the polygons as `` cells '' and the edges as `` faces '' .",
    "this terminology makes it easier to generalize to arbitrary numbers of dimensions .",
    "additionally , we will speak of the `` volume '' of a cell , which in two dimensions will mean area and in one dimension will mean length",
    ". we will also refer to the `` area '' of a face , which in two dimensions will mean length , and in one dimension will just be a constant number which we set equal to unity .",
    "an important related tessellation is the delaunay triangulation .",
    "given a set of mesh generating points , one can generally form a triangulation with the mesh generators as vertices . in a sense ,",
    "the delaunay tessellation is the `` nicest possible '' triangulation of the space , given by the following definition : for every triangle in the tessellation , the three vertices of the triangle all lie on some circle , c. in order for this to be a proper delaunay triangle , no other mesh generators may lie within the circle c. this property almost uniquely defines the triangulation . in degenerate cases , where four or more mesh generators lie on a common circle , the triangulation is ambiguous for these mesh generators . degenerate cases like this will not concern us greatly in this paper .    for a given set of mesh generators ,",
    "the delaunay tessellation is the topological dual to the voronoi tessellation .",
    "every delaunay edge corresponds to a voronoi face , and every voronoi vertex corresponds to a delaunay triangle ( in fact , the voronoi vertex lies at the center of the circle generated by the three vertices of the delaunay triangle ) .",
    "this fact will help us in constructing the voronoi tessellation , because the problem can be reduced to finding the equivalent delaunay triangulation . since there is a straightforward test to check that a tessellation is delaunay , this is typically the easiest way to find out which mesh generators are neighbors .    before describing the details of how one might generate a tessellation from a given set of points",
    ", it will be useful to write down the numerical formulation so that we know what information needs to be extracted from the tessellation procedure .",
    "we shall find that our formulation applies generally to any hyperbolic system of conservation laws , regardless of whether the underlying equations are relativistic .",
    "the equations being solved will always have the form : @xmath0 @xmath1 in particular , for the case of euler s equations : @xmath2 where @xmath3 is the density of the fluid , @xmath4 is the momentum density , and @xmath5 is the energy density .",
    "@xmath6 is the pressure , and @xmath7 is the flow velocity . for simplicity",
    "we consider the case where there are no source terms , @xmath8 . for the relativistic version : @xmath9 where now @xmath10 is the four - velocity . @xmath11 and @xmath12 is the internal energy density , which can be found from the equation of state : @xmath13 for the case of an adiabatic equation of state , we have @xmath14 where @xmath15 is the adiabatic index of the fluid .",
    "we consider general physical equations of state in the appendix . to derive the finite volume form of these equations",
    ", we shall set the source term to zero for brevity , but the generalization to a nonzero source term is straightforward . for concreteness , we shall work in 2 + 1 dimensions , but everything said here easily generalizes to arbitrary numbers of dimensions .",
    "equation ( [ eqn : cons ] ) does not depend on the spacetime metric a priori , and so we can write down a formulation independent of the metric . for the following derivation we shall assume a euclidean metric , rather than a minkowski metric .",
    "we now look at the evolution of a voronoi cell over one timestep .",
    "it is assumed that the cell changes its shape and size by the linear motion of its faces , and that over a timestep it traces out a solid polyhedron in 2 + 1 dimensions , whose top and bottom are surfaces of constant time ( see fig . [",
    "fig : poly ] ) .",
    "the shape is actually not quite a polyhedron , but this is an approximation we are making , which is valid in the limit of short timesteps . in practice , we resolve this issue and others by taking a high - order runge - kutta timestep .",
    "we integrate ( [ eqn : cons ] ) over this polyhedral 2 + 1-dimensional volume p : @xmath16 we can easily convert this to an integral over the two - dimensional boundary of this solid : @xmath17 where @xmath18 is the ( euclidean ) unit normal to the boundary . for the top and bottom of the polyhedron : @xmath19 the 2 + 1-dimensional unit normal to the other faces will be related to the 2-dimensional unit normal on a given timeslice , @xmath20 , but it will also have a component in the time dimension because the face is moving with some velocity , @xmath21 . if we assume that the face is not changing its size or orientation as it moves ( another assumption which is resolved by taking a high - order runge - kutta timestep ) , it is straightforward to check that the 2 + 1-dimensional unit normal will be @xmath22 now we evaluate the integrals in ( [ eqn : int ] ) by averaging the integrated quantities over spacetime . in doing so",
    ", we need to know the 2 + 1 dimensional spacetime volume being integrated over . for the top and bottom ,",
    "this is straightforward : @xmath23 where dv is the cell volume at the beginning or end of the timestep . for the other faces ,",
    "it is easy to check that : @xmath24 recall that `` da '' is the face `` area '' , so it refers to the length of a voronoi edge .",
    "note that our factors of @xmath25 will end up cancelling , which is to be expected if our formulation is independent of the spacetime metric .",
    "if we interpret @xmath26 as the cell - averaged value of u at timestep n , and let @xmath27 denote the time - averaged flux through the face adjacent to cells i and j , and likewise use @xmath28 to denote the time - and - area - averaged value of u on this same face , we get the following result : @xmath29 this gives us a simple prescription for how to evolve the conserved variables from one timestep to the next , assuming we know the time - averaged fluxes and conserved quantities on the faces , and the velocity of each face : @xmath30 of course , this result is not surprising at all .",
    "the prescription merely tells us to add an advective term to the flux ( @xmath31 ) , and evolve things in a way analogous to the fixed - grid approach .",
    "it is worth noting that our formulation does not depend on the physical content of the equations expressed by ( [ eqn : cons ] ) . in particular",
    ", it does not matter whether the velocity @xmath21 exceeds the speed of light . in order for this to be possible",
    ", we must be careful about our physical interpretation for the mesh itself .",
    "for example , it is not necessarily meaningful to speak of the `` rest frame '' of a cell or face .      equation ( [ eqn : evolve ] ) approaches an exact result , in the limit of short timesteps .",
    "this means that all of the numerical error due to the spatial discretization must stem from our estimates of the time - averaged values of the fluxes and conserved quantities on the faces of the voronoi cells . in tess , we estimate these fluxes using an approximate riemann solver .",
    "this means we assume that , at the beginning of the timestep , there is a uniform state on either side of the face . generally speaking , a riemann solver estimates the time - averaged flux through the face by evolving this constant - state initial condition , either exactly or approximately .",
    "it turns out that getting the most out of the lagrangian nature of our scheme is highly dependent on how we solve the riemann problem on each cell face .",
    "the riemann solver in arepo @xcite is effective because it is galilean - invariant ; the riemann problem is solved in the rest frame of the face . in our case",
    "we can not assume it makes sense to even speak of a `` rest frame '' for a face , so we can not have a method which is galilean - invariant ( this is to be expected anyway for relativistic problems ) .",
    "nonetheless , we can still have a code which preserves contact discontinuities to very high accuracy .",
    "what we require is a riemann solver which is exact for a pure advection problem .",
    "the hllc riemann solver , appropriately employed , meets this requirement . in the tess code",
    ", we employ the hllc solver for relativistic problems as described by @xcite .",
    "a pure advection problem has constant pressure and velocity on both states , and two different densities .",
    "the hllc solver divides spacetime into four pieces : the original left and right state , and two interior states known as * l and * r , separated by a contact discontinuity .",
    "for advection , we have the following : @xmath32 this is the exact solution to the advection problem , and hence when using the hllc solver , we can solve the advective riemann problem to machine precision , as long as the correct starred state is chosen , i.e. the solver should choose the spacetime region which houses the path traced out by the face as it moves with velocity @xmath21 ( see fig . [",
    "fig : rfan ] ) .",
    "the values @xmath33 and @xmath34 found in this spacetime region are the values used in the update step given by equation ( [ eqn : evolve ] ) .",
    "the reason that the hllc solver is so crucial is that it accurately calculates advective fluxes .",
    "since the numerical error caused by the spatial discretization is entirely housed in estimating the time - averaged fluxes @xmath35 , and if the velocity of each face is very close to the fluid velocity , then for hllc the advective fluxes will cancel , so that the numerical error for advective fluxes will be small . in the particular case of pure advection ,",
    "advective fluxes completely cancel , meaning that the advection problem is solved exactly to machine precision .",
    "this property is extremely important for preserving contact discontinuities .",
    "the riemann solver takes in two states corresponding to two adjacent voronoi cells . to use the information in a cell to solve the riemann problem for a given face ,",
    "we need the primitive variables ( density , pressure , and four velocity ) on either side of the face . in order to find these primitive variables , we need to invert formulas ( [ eqn : cons_nr ] ) or ( [ eqn : cons_rel ] ) for the conserved variables on either side .",
    "this can be done using a newton - raphson rootfinding scheme . for relativistic hydrodynamics with an adiabatic equation of state , this solver is not difficult to write . for an arbitrary equation of state",
    ", we incorporate the temperature as an additional variable which must be solved for .",
    "in addition to an arbitrary equation of state , we want tess to become a very general code capable of solving wide classes of problems , for example the equations of general relativistic magnetohydrodynamics ( grmhd ) .",
    "this makes the newton - raphson step somewhat more complicated , but this has already been employed in tess even though we have not yet employed hydrodynamic variables which would necessitate such a solver .",
    "the grmhd primitive variable solver is based on the method described by @xcite and uses a three - dimensional newton - raphson step , solving for the variables @xmath36 , @xmath37 , and the temperature , @xmath38 ( see the appendix for more details ) .",
    "the root finding method described above determines the primitive variables ( density , pressure , and four - velocity ) at the cell centers . to solve the riemann problem on each face",
    ", we must extrapolate the primitive variables from the cell centers to the face centers .",
    "if we assume all our variables to be piecewise constant , then we can assume they have the same value on the face as they do at the center of mass of a cell .",
    "however , if we want accuracy higher than first order in space , we need to extrapolate the variable values based on the values in neighboring cells .",
    "we use piecewise linear reconstruction , using the method derived by @xcite for calculating the variable gradients in each cell .",
    "we repeat the results here .",
    "assume we have some variable , @xmath39 , for which we would like to calculate the gradient at cell i based on the values at adjacent cells .",
    "the formula we use is @xmath40 { \\vec c_{ij } \\over r_{ij } } - { \\phi_i + \\phi_j \\over 2}{\\vec r_{ij } \\over r_{ij } } ) .\\ ] ] we use this gradient to extrapolate primitive variable values via : @xmath41 here , @xmath42 represents the location of a mesh generator , @xmath43 represents the location of the center of mass of a cell , and @xmath44 is the center of mass of the face adjacent to cells i and j. note that primitive variables are defined at @xmath43 , not at the mesh generators .",
    "this prescription would lead to a code which is second order in space , but it is well known that piecewise linear reconstruction can cause numerical oscialltions in the neighborhood of shocks . to deal with this , we need to constrain the estimated gradients in the neighborhood of sharp discontinuities . in other words , we need to construct a generalization of the slope limiters used in grid - based eulerian codes .",
    "arepo uses a slope limiter which could be considered a generalization of minmod @xcite , but one which does not have the total variation diminishing ( tvd ) property . as a result , this slope limiter caused mild oscillations in some calculations .",
    "tvd is an especially important property for relativistic hydrodynamics , since oscillatory behavior in the conserved variables can potentially cause wild variation of the primitive variables , particularly in situations with large lorentz factors . to address this problem , we optionally employ an alternative slope limiter which is much more conservative .",
    "arepo uses the slope - limited gradient ,    @xmath45    @xmath46    @xmath47    our method is similar , but replaces ( [ eqn : minmod ] ) with @xmath48 where @xmath49 is generally set to unity , but reduced if a still more diffusive scheme is desired .",
    "the slope limiter in ( [ eqn : minmod2 ] ) enforces monotonicity , though it is more diffusive than ( [ eqn : minmod ] ) . in practice",
    ", we find it to be much more robust , so it has typically been employed in problems involving strong shocks .",
    "our time integration is based on the method of lines , performing a runge - kutta timestep for the time evolution of the conserved variables , and for the motion of the mesh points . for most problems ,",
    "we use a third order runge - kutta timestep which is tvd ( total variation diminishing , ) and which updates both the values of the conserved variables , and the positions of the mesh generating points .",
    "the timestep is courant - limited : @xmath50 @xmath51 is the courant factor , typically chosen between 0.2 and 0.5 .",
    "@xmath52 is the effective radius of a cell , @xmath53 in 2d .",
    "@xmath54 is the eigenvalue in cell i with the largest magnitude .",
    "currently the code is set up to operate with a single global timestep . to take a timestep from @xmath26 to @xmath55 which is third - order in time , for example , we use the following prescription",
    ": @xmath56 here , l is an operator representing the numerically integrated time derivative of u , and the variables @xmath57 , and @xmath58 represent intermediate states in the time integration .      equation ( [ eqn : evolve ] ) tells us exactly what geometric information we need in order to evolve the conserved quantities .",
    "we need to know the following about the voronoi cells :    * which cells are neighbors * the volume of each cell * the area of each face * the velocity of each face * the center of mass of each cell * the center of mass of each face    the last two elements of this list are necessary for the piecewise linear reconstruction of primitive variables .",
    "we must determine how to extract all of this information given the positions and velocities of all the mesh generating points .",
    "the velocities of mesh generators are freely specifiable , and we shall typically choose to set them equal to the local fluid velocity .    before we determine this completely , we can show that all of the above can be calculated easily if we know which cells are neighbors , and if we also know the center of mass and area of each face . in other words ,",
    "when performing the voronoi tessellation , this will be the only information we need to store .    given a single mesh generator and its neighbors , it is straightforward to calculate its cell s volume , if the area of each face is known .",
    "this is done by dividing the cell into pyramids ( in 2d , triangles ) , each of whose tip is the mesh generating point , and whose base is a voronoi face . then the volume of the cell is the sum of the volumes of all the pyramids :    @xmath59    the volume of a pyramid can be expressed generally in d - dimensions : @xmath60 because the face is in the plane halfway between the two mesh generating points , the height should be half the distance between these points .",
    "@xmath62 similarly , the center of mass of a cell can be directly calculated from the area and center of mass of the faces .",
    "we can use the weighted average over pyramids : @xmath63 the center of mass of a pyramid also depends on the number of dimensions : @xmath64 here , @xmath44 denotes the center of mass of the face adjacent to cells i and j.    next , we need to determine the velocity of the faces .",
    "it is assumed here that the mesh - generating points themselves have been given some velocity @xmath65 , typically the local fluid velocity ( though corrections can be added to steer the cells in ways that make the mesh better - behaved ) .",
    "@xcite showed that the velocity of a face can be calculated from the position and velocity of the mesh generating points and the center of mass of the face .",
    "the result is the average of the velocity of the two adjacent mesh generators , plus a correction due to the fact that the center of mass of the face is not generally at the midpoint between the two mesh generating points , and so acquires a velocity due to rotation about this midpoint : @xmath66 @xmath67 again , @xmath68 is the center of mass of a face .",
    "we can use equations ( [ eqn : begingeo ] - [ eqn : endgeo ] ) to pare down the list of information that we need to extract directly from the tessellation itself .",
    "the tessellation procedure now only consists in determining the following :    * which cells are neighbors * the area of each face * the center of mass of each face    all relevant geometrical information can be easily extracted from this data .",
    "this is advantageous because it means the tessellation can take up a relatively small amount of memory .",
    "the tessellation procedure consists of generating a new set of faces each timestep , based on the locations of the mesh generators .    in one dimension ,",
    "the tessellation procedure is trivial ; neighboring cells do not change , the face area is always set to unity , and the face center of mass is simply the midpoint between the two mesh generators .",
    "the two - dimensional version turns out to be surprisingly simple , because we use the tessellation from the previous timestep to generate the new faces . since we know the neighbors of each cell on the previous timestep",
    ", we can use the neighbors of neighbors ( `` friends of friends '' ) of a cell as a list of candidates for the neighbors on the next timestep . because the length of each step in time is courant - limited",
    ", the tessellation will not change significantly in one timestep , and hence this list of candidates is big enough for our purposes .",
    "optionally , we can choose to use `` neighbors of neighbors of neighbors '' but we have not found this to make a difference in any scenario we ve encountered . already having this list of candidates simplifies the algorithm immensely , as in principle it can reduce to a brute force guess - and - check procedure using this small list of candidates .",
    "in practice , the 2d algorithm is not totally brute force , but very simple nonetheless .",
    "we consider a single mesh generating point x and all of its `` friends of friends '' .",
    "first we find the nearest neighbor to x ( which is guaranteed to share a face with x ) .",
    "call this neighbor y. next we take the rest of potential neighbors and order the list by clockwise angle with respect to the segment xy .",
    "what follows is an elimination process ; at the end of this process , the elements in the list will be exactly those which share a face with x. at each step in the process , we consider three consecutive elements of the list ; call them a , b , c ( see fig . [",
    "fig : tess1 ] ) .",
    "we denote the element before a `` p '' , and the element after c `` q '' . it is determined whether or not to keep point b in the list , by checking whether c lies within the circle generated by x , a , and b. if it does , then we remove b from the list , and take one step backward ( checking whether c lies within xpa ) .",
    "if c does not lie within the original circle , we keep b and move forward to check triangle bcq ) .",
    "more concisely , if @xmath69 contains c , remove b from the list and take one step back : @xmath70 .",
    "otherwise take one step forward : @xmath71 .",
    "[ fig : tess2 ] demonstrates an example of this full procedure .",
    "note that this algorithm is not sensitive to the presence of degenerate sets of points ( that is , sets of four points which all lie on the same circle ) . for practical purposes",
    ", it will not matter whether our code chooses to accept or reject a point in this configuration , because a degeneracy in the delaunay tessellation corresponds to a face of zero area in the voronoi tessellation . if the face has zero area",
    ", then there will be zero flux through it , and hence it will have no influence on the resulting physics .",
    "once this operation has been performed for all members of the list ( i.e. , point b is now point y , the nearest neighbor ) all remaining list members are neighbors of point x. all that remains is to calculate the areas and centers of mass of the faces , which is straightforward given the vertices of the polygon generated by this list .",
    "these vertices are the centers of the circles generated by consecutive triples in the list .",
    "the details of the tessellation algorithm do not completely extend to three dimensions , but the idea of using friends - of - friends as a list of candidates still works , so in the worst case scenario we could use a brute force guess - and - check algorithm when d=3 .",
    "one might ask whether there is a major efficiency advantage to this tessellation procedure over more conventional ones such as direct insertion .",
    "while it is not clear which method should be the fastest ( given an optimized implementation ) , it is assumed they are comparably efficient .",
    "moreover , while the tessellation procedure takes up a non - negligible percentage of the code s overall runtime , it does not take up a @xmath72 of the runtime , and as such there is no major incentive to optimize its efficiency . the main advantage to the method described here",
    "is that the algorithm is very simple and does not require making a lot of exceptions .",
    "additionally , this algorithm is expected to be very easy to parallelize , because the tessellation is performed locally . in the most simple prescription",
    ", we could make the code parallel via a simple domain decomposition , where different processes only share boundary data .",
    "the main disadvantage to the tessellation procedure is that we must have an approximate tessellation to begin with , so that we can use `` friends of friends '' for our initial pool of neighbors . in principle",
    ", this simply amounts to saving the tessellation from the previous timestep , but in practice this makes the implementation of boundary conditions a bit more complicated .",
    "not only do we need to create an appropriate set of `` ghost cells '' outside the boundary , but we need to generate `` ghost faces '' as well ( the tessellation procedure wo nt automatically do this for us , because it relies on having an approximate tessellation from a previous timestep ) .",
    "this also adds some complication to the parallelization of the code , for the same reasons .",
    "one might wonder why we worry so much about the positions of ghost cells .",
    "for periodic boundary conditions , we do nt really need ghost cells at all , since we could in principle associate left - most neighbors with right - most neighbors and so on , so that no boundary need be created . for reflecting boundaries , one might hope we could have a fixed set of ghost cells lining our reflecting wall , so that we do nt need to generate a new set each timestep .",
    "unfortunately , we only have control over the positions of mesh generators ; we do nt directly control shape of the cells .",
    "thus , if we want a flat wall , we need to have the mesh generators reflected across the wall .",
    "the only reason we include ghost cells for periodic boundary conditions is for the sake of overall simplicity in the code ( fewer parts of the code depend on the choice of boundary conditions ) . in this case ,",
    "ghost cells are translated to the opposite end of the domain with respect to their `` real '' counterparts .",
    "the boundary conditions are set in each dimension sequentially .",
    "the first step involves flagging cells according to whether they are inside or outside the boundary .",
    "if we are using periodic boundary conditions and a cell moves off of the computational domain , it is set to be a ghost cell and its corresponding ghost cell is set to be a real cell .",
    "all cells are flagged to be in one of three categories : inside the domain , outside the domain , or a `` border cell '' , meaning it is inside the domain and neighbors a cell outside the domain .",
    "the next step involves generating a new list of ghost cells , first by making copies of all border cells .",
    "additional ghost cells get added to this list , by using all neighbors of ghost cells which are inside the computational domain .",
    "this procedure is repeated until the desired number of ghost cells is achieved ( see fig .",
    "[ fig : bcs ] ) . for our second - order methods , we need two layers of ghost cells .    next these copies are moved according to the boundary conditions , e.g. if the boundaries are reflecting , their positions are reflected across the reflecting wall .",
    "finally , neighbors are assigned to the copies by using the neighbor data from the original tessellation .",
    "these associations are of two kinds : associations between two copied cells , and associations between a copied cell and a border cell . both kinds of associations can be extracted from the original tessellation .    after this step ,",
    "we discard all the old ghost cells and replace them with the new ghost cells . when this is done , the tessellation algorithm is performed as previously described .",
    "this implementation of boundary conditions is essentially the same as the method used in arepo , though we require a bit more care because we need to retain the tessellation information in the boundary cells . as a final note on this formulation , very little of the code depends on the number of dimensions ; only the tessellation algorithm itself is significantly affected by d.      for most problems , evolving the mesh according to the above prescription can generically lead to cells which are long and skinny , and whose mesh generating points are very close to their edges .",
    "these cells will evolve in an unstable manner , because their faces can move very quickly even while their mesh generators are moving slowly , and they can also have a very short sound - crossing time .",
    "it is therefore desirable to steer cells in such a way that they tend to become more regular .",
    "@xcite found an effective prescription for this , which is to give the mesh generators an additional component to their velocity , pointed in the direction of the center of mass .",
    "we repeat this prescription here :    @xmath73    @xmath74 is the effective radius of cell i , @xmath75 is the distance between the cell s mesh generating point @xmath76 and its center of mass @xmath77 .",
    "@xmath78 is the local sound speed . @xmath79 and @xmath80 are arbitrary parameters for this prescription , which are typically set to @xmath81 and @xmath82 ( the same values typically used by arepo ) .",
    "note that we we do not implement a relativistic velocity addition formula , as @xmath21 need not be interpreted as a physical velocity .",
    "as this is a new method for solving relativistic hydrodynamics , we present a large number of test problems in one and two dimensions .",
    "in addition to the relativistic tests , we have included some nonrelativistic ones , to compare our code with arepo .",
    "ccccc nonrelativistic & & @xmath83 & @xmath84 + shock tube & @xmath3 & 1 & .25 + n = 100 & v & 0 & 0 + @xmath85 & p & 1 & .1795 + t = 3.0 & & & + nonrelativistic & & @xmath86 & @xmath87 & @xmath88 + interacting shocks & @xmath3 & 1 & 1 & 1 + n = 400 & v & 0 & 0 & 0 + @xmath85 & p & 1000 & .01 & 100 + t = .038 & & & + easy relativistic & & @xmath83 & @xmath84 + shock tube & @xmath3 & 1 & 1 + & vx & 0 & 0 + n = 400 & vy & 0 & .99 + @xmath89 & p & 1000 & .01 + t = 0.4 & & & + hard relativistic & & @xmath83 & @xmath84 + shock tube & @xmath3 & 1 & 1 + & vx & 0 & 0 +",
    "n = 100 & vy & .9 & .9 + @xmath89 & p & 1000 & .01 + t = 0.6 & & &    all 1d tests involving piecewise constant states are summarized in table [ tab:1d ] .",
    "our first two tests are identical to tests performed by @xcite .",
    "the first is a simple shock tube , a test which has also been performed by @xcite . to demonstrate the importance of the hllc riemann solver in our scheme , we perform four tests , varying whether the mesh is static or moving , and varying whether we use hll or hllc .",
    "results are plotted in fig .",
    "[ fig : shock1a ] .",
    "when the cells were moved and hllc was employed , the contact discontinuity was very well approximated . in the other three cases , there was far more diffusion of the contact discontinuity .",
    "this demonstrates that the accuracy in this scheme comes from the combination of using a moving mesh and employing a multi - state riemann solver .",
    "the second nonrelativistic test we perform involves the interaction of multiple shocks @xcite .",
    "[ fig : dblast ] shows the multiple - shock problem at @xmath90 .",
    "we compare results with a fixed and moving mesh , and using the hll and hllc riemann solvers .",
    "again , we see that the combination of using the hllc solver and allowing the cells to move leads to a very high accuracy in the solution .",
    "cccc tess & 100 & 4.23e-1 & + & 200 & 2.57e-1 & 0.82 + & 400 & 1.36e-1 & 0.82 + & 800 & 7.45e-2 & 0.98 + & 1600 & 3.54e-2 & 0.91 + & 3200 & 2.48e-2 & 0.95 + ram & 100 & 8.48e-1 & + & 200 & 4.25e-1 & 1.0 + & 400 & 2.41e-1 & 0.82 + & 800 & 1.27e-1 & 0.92 + & 1600 & 6.43e-2 & 0.99 + & 3200 & 3.34e-2 & 0.95    for relativistic one - dimensional tests , we compare our code to the relativistic adaptive mesh refinement code ram @xcite which was tested for convergence against a variety of test problems .",
    "the first two are riemann problems with transverse velocity , the so - called `` easy '' and `` hard '' shock tube tests .",
    "the easy shock tube test is plotted in fig .",
    "[ fig : shock2 ] at time @xmath91 . for the easy shock tube ,",
    "we find nearly first - order convergence , and smaller errors than ram ( see table [ tab : easy ] for convergence rates ) .",
    "for the hard shock tube , we find that like ram , we need very high resolution to capture the solution accurately .",
    "however , because we can initially place the cells anywhere we want , we can resolve the initial discontinuity very well and capture the solution with as few as 100 conputational zones ( see fig .",
    "[ fig : shock3 ] ) .",
    "50 of the zones were concentrated uniformly within a region @xmath92 of the discontinuity and the remaining 50 cells were distributed uniformly through the rest of the domain . using a uniform initial mesh , tess showed first order convergence for this problem ( table [ tab : hard ] ) .",
    "cccc tess & 400 & 7.12e-1 & + & 800 & 4.54e-1 & 0.64 + & 1600 & 2.26e-1 & 1.0 + & 3200 & 1.10e-1 & 1.0 + ram & 400 & 5.21e-1 & + & 800 & 3.63e-1 & 0.52 + & 1600 & 2.33e-1 & 0.64 + & 3200 & 1.26e-1 & 0.89    the last test we perform in one dimension is to demonstrate the convergence rate on a smooth problem .",
    "we set up an isentropic pulse identical to the one used by @xcite :    @xmath93    @xmath94    @xmath95    @xmath96 , @xmath97,@xmath98 , and @xmath99 are constants . in our case , @xmath100 @xmath101 , @xmath102 , @xmath103 .",
    "@xmath104 is the adiabatic index , chosen to be @xmath105 . to determine the velocity , we use    @xmath106    where @xmath107 is the sound speed .",
    "cccc tess & 80 & 4.88e-3 & + & 160 & 1.78e-3 & 1.8 + & 320 & 4.84e-4 & 1.9 + & 640 & 1.20e-4 & 2.0 + & 1280 & 2.93e-5 & 2.1 + & 2560 & 6.97e-6 & 2.1 + & 5120 & 1.47e-6 & 2.1 + ram & 80 & 1.12e-2 & + ( u - plm - rk4 ) & 160 & 3.56e-3 & 1.7 + & 320 & 1.02e-3 & 1.8 + & 640 & 2.60e-4 & 2.0 + & 1280 & 6.49e-5 & 2.0 + & 2560 & 1.62e-5 & 2.0 + & 5120 & 4.04e-6 & 2.0 + ram & 80 & 1.10e-2 & + ( u - ppm - rk4 ) & 160 & 2.56e-3 & 2.1 + & 320 & 5.74e-4 & 2.2 + & 640 & 1.34e-4 & 2.1 + & 1280 & 3.10e-5 & 2.1 + & 2560 & 7.33e-6 & 2.1 + & 5120 & 1.82e-6 & 2.1    fig .",
    "[ fig : isentropic ] shows the pulse at @xmath108 on a mesh with 400 cells .",
    "the l1 error and convergence rates are shown in table [ tab : isentropic ] . in order to make a reasonable comparison between the codes",
    ", we chose two different methods employed by ram which are second order .",
    "of course , if we had chosen to compare with the weno solvers employed by ram , it would be no contest , as ram can get up to fifth order convergence for smooth flows . for this problem ,",
    "we not only find smaller errors , but also slightly faster convergence than ram ( ram employed piecewise linear reconstruction of the primitive variables , and a fourth - order runge - kutta time integration , leading to an overall second - order scheme ) . in fact , convergence for tess was slightly better than second order .",
    "this could be due to the fact that the method becomes `` more lagrangian '' as the resolution increases ; face velocities approach the velocities of contact waves in this limit .      on the surface",
    ", it is certainly not obvious that this second - order convergence extends to multiple dimensions ; it would be quite difficult to prove such a thing mathematically .",
    "a convergence test in 2d is essential if we want to establish confidence in our numerical scheme . a straightforward test which satisfies this is to propagate an isentropic wave diagonally across the mesh .",
    "the mesh will initially be a square grid , but because the flow is nonuniform , the mesh will move in a nontrivial way and we will be able to check whether second - order convergence continues to hold during such distortions . the result we present will employ a nonrelativistic wave in a periodic box @xmath109 \\times [ 0,1]}$ ] , with density and pressure given by the same formulas as in the 1d case , but now with    @xmath110    for this test , we use @xmath111 , but all other constants are the same as in the previous example .",
    "the nonrelativistic limit of equation ( [ eqn : rmninv ] ) is simply    @xmath112    the direction of this velocity is of course diagonal to the mesh ,    @xmath113    condition ( [ eqn : isenv ] ) continues to hold as the wave evolves , so we can use this as a way of measuring l1 error for this problem . in fig .",
    "[ fig : isen2d ] we see the pulse at @xmath114 on a @xmath115 mesh , and the cells have clearly changed their shape and size in a nontrivial way .",
    "l1 error for this problem is plotted in fig . [ fig : l12d ] .",
    "the convergence rate for this problem was calculated to be 2.3 , again slightly better than second order .",
    "tess is written in a modular way so that it is straightforward to change the set of conserved quantities , and to add source terms .",
    "as an example , we have implemented the equations in alternative coordinate systems for the two special cases of spherical symmetry and axisymmetry .",
    "our extension to these coordinate systems takes the most nave approach : we simply express the equations in an alternate coordinate system , and solve them like any other hyperbolic system in conservation - law form .",
    "we do not wish to endure the complication of curvilinear voronoi cells , which is why we specialize to the cases of spherical symmetry ( 1-d ) and axisymmetry ( 2-d ) .",
    "for example , in cylindrical coordinates in axisymmetry the nonrelativistic conservation laws take the following form :    @xmath116    @xmath117    @xmath118    where @xmath119 is the distance from the z - axis ( note that @xmath20 lives in the r - z plane ) .",
    "the two new developments here are the presence of the radial coordinate @xmath119 in the equations and the non - zero source term .",
    "we evaluate both of these at the center of mass of a cell or face , depending on the context .",
    "the description in spherical coordinates and the extensions to relativistic hydrodynamics are completely analogous .",
    "we use this opportunity to test the method s extension to these coordinate systems , as well as the ability for tess to preserve symmetries using an unstructured mesh .",
    "we set up very simple shock - tube like initial conditions :    @xmath120    @xmath121    @xmath122    we perform a relativistic cylindrical and spherical explosion . for the cylindrical explosion ,",
    "we perform the calculation at high resolution in 1-d using cylindrical coordinates , and in low resolution in 2d using cartesian coordinates .",
    "the resolution is as low as 50 @xmath123 50 . in fig .",
    "[ fig : cyl ] we show the results for a moving and fixed mesh .",
    "we see that moving the cells continues to improve resolution of the contact discontinuity , and in this case we also see some improvement in symmetry ",
    "the values for the density profile are not as scattered in the moving - mesh case , they tend to lie along a single curve . for the spherical explosion ( fig .",
    "[ fig : sph ] ) , we see a similar story ; the contact discontinuity is well preserved , and the spherical symmetry is captured somewhat better with the moving code .      to further illustrate that tess in principle extends to an arbitrary set of conserved quantities , we demonstrate a few test problems in magnetohydrodynamics .",
    "from one point of view , mhd ( whether relativistic or nonrelativistic ) is just another hyperbolic set of equations in conservation - law form , where electromagnetic energy , momentum , stress , and pressure are added to the fluid equations , and the magnetic induction also satisfies a conservation law ( faraday s law ) , which in the the case of a perfect conductor ( @xmath124 ) has the form    @xmath125    the main ingredient which distinguishes mhd from other conservation laws is that the equations also satisfy an elliptic constraint , @xmath126 , which must be satisfied every timestep .",
    "this constraint is analytically guaranteed to vanish , but depending on your numerical scheme , the constraint can generically grow exponentially when the equations are solved in discrete form . over the years , many techniques have been suggested to address this issue , the most popular methods being variants of constrained transport @xcite , where steps are taken to ensure that all fluxes added to the b fields have zero divergence , so that the time derivative of div b is guaranteed to remain zero through the entire evolution ( in other words , only a solenoidal b field is ever added during the time evolution ) .",
    "this method would be quite difficult to extend to an unstructured mesh , so it seems that we must choose some other way of preventing these constraint - violating solutions from growing .",
    "we employ a hyperbolic divergence - cleaning scheme @xcite which adds an extra conserved quantity , @xmath127 , and modifies the equations so that the evolution equations for the magnetic field become    @xmath128    where @xmath129 and @xmath130 are freely specifiable constants which alter the behavior of the divergence - cleaning terms . if @xmath126 and @xmath131 the equations revert to the usual mhd equations , but this introduction of @xmath127 has the effect of altering the time evolution of the constraint so that it satisfies a wave equation , specifically the telegraph equation .",
    "this technique is generally not as desirable as constrained transport , partly because it does nt guarantee zero divergence , but also because its success is strongly dependent on two freely specifiable constants , which have no obvious choice for what their values should be .",
    "because we do nt have a constrained transport scheme ( though we do speculate that one is possible ) , and also because this method is easy to implement , we currently use this divergence - cleaning form of the equations in our mhd code .",
    "we now look at several mhd tests .",
    "the first is a one - dimensional shock tube test in relativistic mhd , the relativistic version of the brio - wu shock tube @xcite .",
    "the left and right states are as follows :    @xmath132    @xmath133    the initial velocity is zero everywhere , and the magnetic field is given by the following :    @xmath134    @xmath135    the adiabatic index @xmath136 .",
    "the calculation was done with 400 zones .",
    "the final state is shown at @xmath137 , in fig .",
    "[ fig : briowu ] .",
    "it is clear that an advantage is gained in moving the cells , both in the sharpness of the contact discontinuity and in the shock front .",
    "additionally , the value of the density in the shock wave appears to be more accurate when using a moving mesh .",
    "so , it would seem that there is great potential in using this lagrangian approach for problems in magnetohydrodynamics .",
    "however , we wish to avoid reading too much from this result , as this is a one - dimensional problem , and most of the challenges in magnetohydrodynamics only appear when solving multidimensional problems .",
    "we consider now a test problem in nonrelativistic magnetohydrodynamics , a cylindrical explosion in a uniform magnetic field .",
    "the calculation is done in a box of dimensions [ 0,1 ] x [ 0,1 ] .",
    "the initial conditions are as follows :    @xmath138    @xmath139    @xmath140    the magnetic pressure at t=0.1 is plotted in fig .",
    "[ fig : mag ] . also plotted is the numerically calculated divergence of the magnetic field .",
    "this divergence is normalized in the following manner :    @xmath141    where r is the characteristic size of the voronoi cell .",
    "we see the code does a reasonable job of resolving the explosion at low resolution , however the magnetic divergence is unacceptably large ( the normalized magnetic divergence grows to be as large as 0.14 ) .",
    "this large error in div b appears to be particularly problematic for this method .",
    "any time the voronoi mesh changes topology , there can be extremely rapid growth in magnetic divergence due to the appearance of new faces in the tessellation .",
    "this magnetic growth is so rapid that it shows up even in simple test problems like the one displayed .",
    "in fact , the growth rate is such that conventional divergence - cleaning techniques for suppressing the growth of div b seem to be insufficient to resolve the problem .",
    "we believe that this problem is not insurmountable , but the eventual solution might require a novel approach for treating div b. as such , we have much work to do in improving the magnetohydrodynamics part of our code .",
    "another possible idea is to use the same basic numerical scheme , but impose the geometry of the cells by hand rather than determining them based on the motion of mesh points . if such a scheme were developed , constrained transport could potentially be possible , since the geometry of the cells could be known at runtime .",
    "this idea could have many other possible advantages , so it is a thought worth pursuing , but for tess as it is currently written , we would like a better means for damping the growth of magnetic monopoles .    on the other hand , for some problems ,",
    "div b may not be the most important concern .",
    "if the magnetic divergence does not have time to grow , we may get to the end of a calculation before it starts to have an effect on the solution . as an example",
    ", we show the relativistic mhd rotor test @xcite , a challenging test of the robustness of our numerical scheme .",
    "the calculation is done in a box of size @xmath142 \\times [ -.5,.5]}$ ] .",
    "the initial conditions are given by the following :    @xmath143    @xmath144    the disc @xmath145 is initially rigidly rotating with angular frequency @xmath146 , so that the the edge of the disc has lorentz factor @xmath147 .",
    "the velocity field is zero outside the disc .",
    "the calculation was done using a @xmath148 mesh , and the results are shown in fig .",
    "[ fig : rotor ] at time @xmath91 .",
    "this is ordinarily a very challenging rmhd test problem , but we required no special fail - safe procedures to solve it .",
    "actually , for this particular problem , we are at a slight disadvantage , since the mesh does not necessarily give us adaptive resolution exactly where we want it ; the rarefaction is under - resolved ( we start with an initially uniform mesh , but the central cells expand by roughly a factor of five in length ) .",
    "however , it seems that , at least for our method and for this problem , div b does not interfere with our results .",
    "we find that tess is very good at solving problems involving fluid instabilities , particularly in cases where a contact discontinuity is being perturbed .",
    "the kelvin - helmholtz instability is one such example , which occurs at the interface between shearing fluids .",
    "we look at the nonrelativistic case first , to compare with arepo .",
    "we use a periodic box , @xmath149 \\times [ 0,1]}$ ] , with a stripe in the middle half of the box @xmath150 .",
    "the pressure is uniform throughout the domain , and the density and x - velocity are uniform in each region :    @xmath151    @xmath152    @xmath153    this sets up the initial conditions for the instability , and to excite a particular mode we add a small perturbation to the y - component of the velocity :    @xmath154    @xmath155    we choose @xmath156 and @xmath157 .",
    "we use an adiabatic index of @xmath89 .",
    "these initial conditions are identical to those used by @xcite .",
    "our visualization is different , so it is difficult to directly compare results , but it appears that the growth rate of the instability is the same for a 50x50 lattice ( see fig . [",
    "fig : kh1 ] ) .",
    "tests of galilean invariance , on the other hand , indicate that our numerics do depend on the moving reference frame in which the calculation is performed .",
    "when adding an overall velocity to the initial conditions , we find that the results are significantly changed if the boost velocity is large compared to the flow velocity . this can be traced back to the fact that the hllc solver is not invariant under galilean boosts .",
    "it would be interesting to see how differently the code would perform using an exact riemann solver , though this is not a very high priority , because tess is ultimately designed to solve relativistic problems . a more optimistic way to interpret",
    "this result is to say that galilean invariance is not a necessary condition for accurately capturing contact discontinuities . as a relativistic test",
    ", we use tess to calculate the growth rate of the kelvin - helmholtz instability in the relativistic case . for this purpose",
    ", we change the initial conditions slightly : the initial density is uniform ( @xmath158 ) everywhere , the pressure is now @xmath159 and the adiabatic index @xmath85 .",
    "the initial perturbation is given to the y component of the four - velocity , @xmath160 , and the x component @xmath161 is varied . to measure the development of the instability , we add an additional passive scalar quantity , x , which is advected with the fluid velocity , for which we choose @xmath162 outside the stripe and @xmath163 inside the stripe .",
    "we measure the growth of the instability by tracking the position of the contact discontinuity in x. note that this is much more straightforward to do with tess than it would be for an eulerian code .",
    "in fact , we can track the development of the instability even while the perturbation to the contact is smaller than the size of a voronoi cell .",
    "we compare the linear growth rate against the analytic solution .",
    "the growth rate has been calculated analytically by @xcite .",
    "it is the imaginary part of @xmath164 where @xmath165 is the wavevector corresponding to the wavelength of the perturbation ( @xmath166 in this case ) , @xmath107 is the sound speed , and @xmath167 is given by the following formula :    @xmath168    here , v is the flow speed , and @xmath169 is the relativistic mach number , defined : @xmath170 where @xmath107 is the relativistic sound speed , and @xmath171 is the corresponding lorentz factor .    in fig . [",
    "fig : khgrowth ] we plot the numerically calculated growth rates against this analytical formula . at @xmath172 resolution , the growth rate was not very accurately calculated , but for all other tests we seem to get very accurate results , considering the low resolution .",
    "notice that in contrast with the nonrelativistic example , it does not make sense to even ask about the lorentz invariance of the code for this problem , since periodic boundary conditions are only periodic in one reference frame , due to relative simultaneity . in general , even if we do not employ periodic boundaries , testing lorentz invariance can be an extremely complicated task , because one would have to take into account that different mesh points can be sampling the fluid motion at different points in time . in any case , we know that our code is not manifestly lorentz invariant , so we would not expect a striking improvement in lorentz invariance over an eulerian code .      a related fluid instability is the rayleigh - taylor instability , where a fluid of high density is balanced on top of a fluid of low density , and the contact discontinuity between these two different densities is perturbed by the force of gravity . in the relativistic case , we can get a gravitational field by transforming to an accelerated reference frame .",
    "this is not difficult to do , but we can also simply solve the relativistic equations in the weak - field limit . for",
    "the purposes of calculating the linear growth rate , it would not matter which we do , since for a small enough perturbation , the potential jump between the highest and lowest points of the perturbation will be small , and hence the weak - field limit applies .",
    "we set up the following initial conditions in the computational domain @xmath109 \\times [ -1,1]}$ ] :    @xmath173    @xmath174    for the initial velocity perturbation : @xmath175    we choose constants @xmath176 , @xmath177 , @xmath157 , and the gravitational field is @xmath178 .",
    "@xmath179 is varied to get different growth rates .    in fig .",
    "[ fig : rt1 ] , we show the growth of the instability using a moving or fixed mesh , at fairly low resolution , 128x128 .",
    "the initial mesh was not perfectly square ; the cells were randomly offset slightly to improve the regularity of the mesh throughout the calculation .",
    "this small (  .1% ) offset is enough to cause asymmetry , even in the fixed - mesh case , but we decided to employ the offset in both cases , so that the only difference between the two cases is whether the mesh points are allowed to move .",
    "the linear growth rate of the instability is easy to derive even in the relativistic case , because the only relativistic effect for small perturbations is that gravity couples to energy instead of mass .",
    "therefore , the growth rate for the relativistic case is still @xmath180 where @xmath181 is the gravitational field strength , @xmath165 is the wavevector corresponding to the perturbation ( @xmath182 in this case ) , and @xmath183 is the relativistic atwood number , defined as @xmath184    in fig . [",
    "fig : rtgrowth ] we plot the growth rates numerically calculated using tess , and compare with the analytical result ( [ eqn : rtgrowth ] ) . even at extremely low resolutions ,",
    "we capture the growth rates quite accurately .",
    "the rayleigh - taylor instability provides us with a useful astrophysical application , in the context of a decelerating relativistic shock .",
    "the reason this is relevant is that an external gravitational field is equivalent to an accelerating reference frame .",
    "hence a low - density gas accelerating into a high - density gas or a high - density gas decelerating into a low - density gas will exhibit this same instability .",
    "the latter could potentially occur in a shockwave , as matter is pushing its way through some ambient medium @xcite .",
    "if the explosion is spherical , and the density profile has a power law dependence , @xmath185 , then the shock will decelerate for @xmath186 .",
    "if we assume a simple point explosion in this density profile , we recover the blandford - mckee solution @xcite , or at late enough times , the nonrelativistic sedov - taylor solution . in both cases ,",
    "the shock front and contact discontinuity coincide .",
    "however , if there is excess mass in the initial explosion , so that the total mass is greater than the integral of the power - law density profile , then there will be a coasting period until the shock overtakes an amount of mass comparable to this excess mass .",
    "this is followed by deceleration to a two - shock solution @xcite , because the information that the shock is now decelerating needs to be transported back upstream . in this case",
    ", there will be a contact discontinuity between the two shocks , and the density discontinuity across this contact can be quite significant .",
    "for this situation , the rayleigh - taylor instability can play an important role in the solution , because the contact is quite unstable . a calculation in spherical symmetry",
    "would be incorrect , even though the initial conditions are spherically symmetric .",
    "we capture the rayleigh - taylor instability from a spherically symmetric explosion in two dimensions using axisymmetric coordinates , for density profiles corresponding to @xmath187 .",
    "we use the domain @xmath188 \\times [ -1,1]}$ ] where @xmath189 and set up the initial conditions as follows : @xmath190 we set @xmath191 and @xmath192 to start with an accelerating shock which typically coasts until around @xmath193 , then decelerates",
    ". we use @xmath194 to ensure that the system has a finite amount of mass .",
    "the initial pressure profile is given by @xmath195    we use a gamma - law equation of state with @xmath196 .",
    "we choose @xmath197 , and choose @xmath198 to get a shock which reaches lorentz factors of @xmath199 before it decelerates to mildly relativistic flow by @xmath200 , when the calculation ends .",
    "the values of @xmath198 are given in table [ tab : e0 ] , along with a rough estimate of the bulk lorentz factor for the fluid at its maximum speed , and also the lorentz factor at the end of the calculation .",
    "note that these initial conditions are fundamentally different from the conditions chosen by @xcite ; his results came from perturbative analysis of the self - similar solution of @xcite , whereas ours begins with an explosion .",
    "in spherical symmetry , our explosion approaches this self - similar solution , but due to the instability , in 2d our calculation should never find this solution ( at late enough times , however , it should eventually find the sedov solution ) .",
    "cccc 0 & 6 & 11 & 4 + 1 & 4 & 9 & 4 + 2 & 6 & 13 & 11    in figures [ fig : rtx1 ] - [ fig : rtx3 ] we show the growth of the instability for three power - law density profiles .",
    "it appears that the instability grows rapidly enough to catch up to the forward shock .",
    "in fact , relativity appears to help us in this case , because for large lorentz factors the shock front must remain a short distance from the contact discontinuity , keeping it within reach until the rayleigh - taylor fingers can catch up to the shock .",
    "the fact that the instability overtakes the forward shock appears to be generic and does not require special initial conditions , although it would of course not occur for a simple point explosion , because in this case the shock and contact discontinuity would already coincide . using steep power - laws with little deceleration does not seem to change this picture ; the instability can still catch up to the shock even when @xmath201 and the lorentz factor is 11 , as in our third test case .",
    "this result is in qualitative agreement with the results of @xcite , whose work was restricted to the linear growth rate . to our knowledge ,",
    "ours is the first direct numerical calculation of the instability for a relativistic shock .",
    "it is worth noting another advantage to tess which is shown most plainly in fig .",
    "[ fig : rtx3 ] .",
    "if we know in advance where to initially place the cells , we can get high resolution exactly where we need it . in this case , we initially concentrated most of the cells near the origin , and the region of high resolution followed the motion of the shock .",
    "nearly all of the zones have been compressed into the shock front , giving us very high resolution there .",
    "we generated this initial mesh in the following way : we started with an initial @xmath202 uniform mesh in the domain @xmath109 \\times [ -1,1]}$ ] ( though we staggered mesh points so that our initial mesh was not exactly square ) .",
    "we then changed the location of the mesh points via the following prescription : @xmath203 where we chose @xmath204 .",
    "thus our initial resolution was @xmath205 times higher near the origin than it would be for a uniform mesh .",
    "it should be noted that this effective resolution changes throughout the time evolution , partially due to the shock overtaking more cells , and partially due to the increasing amount of volume which is being well resolved .",
    "tess is a new relativistic hydrodynamics code based on the voronoi tessellation .",
    "it performs particularly well on problems with sharp discontinuities , especially contact discontinuities .",
    "tess has been extensively tested . for smooth problems ,",
    "convergence is slightly better than second order . for problems involving a moving contact discontinuity ,",
    "tess demonstrated a clear advantage over the eulerian codes in that smearing of contact discontinuities is greatly reduced .",
    "it was also demonstrated that employing the hllc solver was necessary to get full advantage out of the lagrangian nature of this method . for many nonrelativistic problems",
    ", tess has success comparable to that of arepo , but unfortunately lacks the galilean invariance property .",
    "we have applied tess to an astrophysical example , testing the stability of a decelerating spherical shock wave .",
    "we found that the contact discontinuity behind the shock was unstable to the rayleigh - taylor instability , so much so that the instability was able to reach the forward shock .",
    "a detailed study will be presented in a future publication .",
    "the structure of tess is relatively simple , there is no need to perform any explicit rotations or boosts , and we therefore have the luxury of using an approximate riemann solver , so long as the solver does nt inherently diffuse contact discontinuities . this is a definite advantage , because for some hyperbolic systems , calculating the exact solution to the riemann problem is computationally intensive if not impossible .",
    "our method can be used to solve a wide range of hyperbolic problems , like general relativistic hydrodynamics , or magnetohydrodynamics .",
    "the tessellation algorithm is also quite simple , and very robust ; it takes little effort to implement , and is not bug - prone .    in speed tests",
    ", we find the tessellation algorithm consumes roughly half of the code s run - time .",
    "we urge care in the interpretation of this , however , as very little work has been spent in optimization , and moreover this figure is highly problem - dependent , as is the code s overall runtime . on a 2.67ghz intel xeon x5550 processor",
    ", tess spends roughly 40 microseconds per zone per timestep , which is comparable to ram s efficiency .",
    "we hope to improve the efficiency in future developments .",
    "the code is structured in such a way that an extension to three dimensions merely requires writing a three - dimensional tessellation algorithm , which would be an extension of the two - dimensional algorithm already outlined .",
    "making the code run in parallel does not pose any major academic hurdles ( apart from load - balancing ) .",
    "both of these ideas are extensions to the code which we are currently pursuing .",
    "we are also interested in implementing more complicated boundary conditions , mesh refinement , and a local time step , as these have all been implemented in arepo and are thus a solved problem .",
    "this work was supported in part by nasa under grant nnx10af62 g issued through the astrophysics theory program ( atp ) and by the nsf through grant ast-1009863 .",
    "the authors would like to thank the institute for theory and computation at the harvard - smithsonian center for astrophysics for hospitality while finishing this work .",
    "we are grateful to john hawley , debora sijacki , volker springel , jim stone , mark vogelsberger , weiqun zhang , and jonathan zrake for helpful comments or discussions .",
    "we would also like to thank the anonymous referee for his / her thorough review .",
    "the conversion from conserved variables back to their primitive counterparts is nontrivial for relativistic magnetohydrodynamics .",
    "it is particularly challenging if we wish to use an arbitrary equation of state .",
    "our code employs a three - dimensional newton - raphson solver to recover the primitive variables from the conserved variables .",
    "the equations being solved are nearly the same as those given by @xcite ; we derive them again here for completeness .",
    "we begin with the eight conserved variables , which we know : @xmath206 we also make the following convenient definitions : @xmath207 @xmath208 the electromagnetic energy and momentum is straightforward to calculate assuming @xmath209 : @xmath210 so , the four - momentum q can be written out explicitly : @xmath211 following noble , we can also take the dot product @xmath212 to evaluate @xmath213 : @xmath214 if we substitute this back into the equations for the four - momentum , we arrive at the following two relations : @xmath215 @xmath216 equations ( [ eqn : c2p1 ] ) and ( [ eqn : c2p2 ] ) , along with the definition for w ( [ eqn : w ] ) , constitute three equations with the three unknown variables , w , k , and the temperature t. we can now easily turn this into a newton - raphson rootfinding scheme where we search the three - dimensional parameter space of w , k , and t for a solution to the three equations .",
    "all of this assumes an arbitrary equation of state , @xmath217 note that @xmath218 , so that we do nt have to worry about what to do if one of our variables is too large ( this would be the case if , for example , we used velocity as one of our unknowns ) . if k becomes negative on a given iteration , it is reset to zero to prevent taking a square root of a negative , but w and t are generally not constrained . for an adiabatic equation of state , we use the same framework but make the definition @xmath219 so that effectively pressure takes the place of temperature as the third variable being solved for . for our initial guess values , we use the values of w , k , and t from the previous timestep .",
    "however , if the solver fails to find a root , we try again using new guess values .",
    "one idea is to try an estimate which is exact in the limit that rest mass or magnetic energy dominates . in doing so",
    ", we obtain the following estimates for k : @xmath220 to take into account both of these possibilities , we use a guess value which is a weighted average of these two estimates : @xmath221 if this estimate fails , we can use a method found by @xcite and try a more safe set of guess values , based on the maximum possible values ( also assuming the lorentz factor is never larger than @xmath222 ) : @xmath223 @xmath224 to determine when we have converged on the inverted state , we need some error function which will measure how close we are to the true solution . for example , one natural choice is @xmath225 where @xmath226 measures how much w has changed since the last iteration .",
    "the strategy then would be to iterate until @xmath227 for some specified tolerance , typically @xmath228 .",
    "unfortunately , it s possible for w to be changing very slowly while k and t are still far from the solution . to prevent this from being a problem , we modify the error function as follows :",
    "@xmath229 this agrees with the previous definition when we are close to the true solution , but away from the solution , it helps to prevent `` false positives '' , where @xmath230 becomes small before the true solution has been found ."
  ],
  "abstract_text": [
    "<S> we have generalized a method for the numerical solution of hyperbolic systems of equations using a dynamic voronoi tessellation of the computational domain . </S>",
    "<S> the voronoi tessellation is used to generate moving computational meshes for the solution of multi - dimensional systems of conservation laws in finite - volume form . </S>",
    "<S> the mesh generating points are free to move with arbitrary velocity , with the choice of zero velocity resulting in an eulerian formulation . moving the points at the local fluid velocity </S>",
    "<S> makes the formulation effectively lagrangian . </S>",
    "<S> we have written the tess code to solve the equations of compressible hydrodynamics and magnetohydrodynamics for both relativistic and non - relativistic fluids on a dynamic voronoi mesh . when run in lagrangian mode , tess is significantly less diffusive than fixed mesh codes and thus preserves contact discontinuities to high precision while also accurately capturing strong shock waves . </S>",
    "<S> tess is written for cartesian , spherical and cylindrical coordinates and is modular so that auxilliary physics solvers are readily integrated into the tess framework and so that the tess framework can be readily adapted to solve general systems of equations . </S>",
    "<S> we present results from a series of test problems to demonstrate the performance of tess and to highlight some of the advantages of the dynamic tessellation method for solving challenging problems in astrophysical fluid dynamics .    </S>",
    "<S> = 1 </S>"
  ]
}
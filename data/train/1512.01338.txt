{
  "article_text": [
    "computational combustion studies typically employ an approximate mixture - averaged diffusion treatment with velocity correction  @xcite .",
    "however , several works have pointed to the need for accurate treatment of multi - component species diffusion in the presence of high concentration gradients and in simulations that capture the structure of flames  @xcite .",
    "for instance , bongers and de goey  @xcite found that errors up to @xmath4% occur in the burning velocities of methane / oxygen and hydrogen / oxygen flames with an approximate diffusion treatment .",
    "gopalakrishnan and abraham  @xcite investigated the ignition of _",
    "n_-heptane / air diffusion flames , and reported a @xmath4% difference in the transient temperature and major species profiles when using an approximate diffusion model . in a numerical study with different transport models , dworkin _ et al . _",
    "@xcite found deviations up to @xmath5% in peak soot volume fraction in ethylene / air coflow flames , although only small differences were observed in temperature profiles . in the case of combustion of _",
    "n_-heptane droplet in a forced - convection environment , pope and gogov  @xcite found that extinction velocity , maximum temperature , flame dimensions , evaporation constant , and drag coefficient are significantly different between using single binary diffusion coefficient and multi - component diffusion coefficients .",
    "et al . _",
    "@xcite found marked deviations for peak temperatures between mixture - averaged and multi - component diffusion treatments at elevated pressure and large strain rates in counterflow diffusion flames and in droplet ignition .",
    "even for turbulent configurations , hilbert _ et al . _",
    "@xcite found the choice of transport model to play an essential role , in particular for high flame curvatures and far from stoichiometry .",
    "however , using accurate multi - component diffusion treatment in numerical combustion studies remains formidable due to the computational cost associated with solving for diffusion velocities .    for low density gases ,",
    "the diffusion velocities are obtained by solving the stefan - maxwell equations  @xcite : @xmath6 where @xmath7 is the number of species , @xmath8 s are the mole fractions , @xmath9 s are the diffusion velocities , @xmath10 s are binary diffusion coefficients , @xmath11 s are the thermal diffusion coefficients , @xmath12 , @xmath13 & @xmath14 are the temperature , density & pressure of the mixture , and @xmath15 s denote the body forces . equation   can be rewritten as shown in equation  .",
    "@xmath16    from kinetic theory ( assuming elastic collisions ) , @xmath10 is given by @xmath17 where @xmath14 is the pressure , @xmath12 is the temperature , @xmath18 is the boltzmann s constant , @xmath19 is the reduced mass of species @xmath20 & @xmath21 and @xmath22 , @xmath23 are the collision diameter for species @xmath20 & @xmath21 respectively . to take inelastic collisions into account , equation   must be modified by a collision integral @xmath24 as , @xmath25 where @xmath26 and @xmath27 are two fixed constants .",
    "note that although there are @xmath7 equations in equation  , only @xmath7 - 1 of these are independent .",
    "therefore , the diffusion velocities @xmath9 s are solved for in equation   along with the flux criterion that @xmath28 where @xmath29 is the mass fraction , @xmath8 is the mole fraction and @xmath30 is the molecular mass of species @xmath21 . solving the linear system using equations   and   to obtain the diffusion velocities requires @xmath0 operations . in unsteady multi - dimensional problems with detailed chemistry ,",
    "a computational cost of @xmath0 at every grid point in the domain and at every time step must be expended , making the computation time consuming and therefore out of practical reach .",
    "ern and giovangigli proposed iterative methods  @xcite to obtain approximate solutions to the above equations , where all transport coefficients are expressed as convergent series and are approximated by the truncation of these series , as implemented in the eglib software package  @xcite .",
    "each iteration involves matrix vector products , which need @xmath31 operations .",
    "if @xmath32 iterations were involved in their method , the total computational cost to obtain @xmath9 s will be @xmath33 .",
    "recently , xin _ et al . _",
    "@xcite proposed a reduced multi - component model , using a multi - component diffusion treatment for critical - diffusivity - species ( identified using sensitivity analysis ) and mixture averaged diffusion treatment for the others .",
    "the computational complexity of their model scales linearly with the size of the number of species .",
    "a correction velocity must be applied to their diffusion velocities to ensure net species diffusion flux is zero , since their model is a hybrid of the multi - component model and the mixture - averaged model .    in the earlier studies that focused on obtaining solutions to the stefan - maxwell equations in faster computational time ,",
    "the nature of the matrices underlying these equations have not been given attention .",
    "this will be the focus of the present work .",
    "we propose an accurate , fast , mathematically provable and robust , universal , direct ( non - iterative ) algorithm to solve for multi - component diffusion velocities by leveraging the inherent low rank structure of the matrix formed by the reciprocal of the binary diffusion coefficients .",
    "this direct algorithm to compute diffusion velocities involves @xmath1 operations in finite precision .",
    "an important feature of this algorithm is that the accuracy of the low - rank factorization is a user input , which in turn can be used _",
    "apriori _ to quantify the accuracy of the solution ( in this case the diffusion velocities ) , unlike the methods proposed earlier  @xcite .",
    "in addition , no velocity correction is needed in this approach , since the flux criterion ( equation  ) is also satisfied .",
    "further , there is no costly pre - computation step , such as sensitivity analysis , involved in this algorithm .",
    "in fact , the total time taken by our algorithm to obtain diffusion velocities is orders of magnitude faster than the conventional lu factorization based algorithm even for a small number of species ( @xmath34 ) .",
    "this article is organized as follows . in section  [ sec_structure ] , the low rank structure of the matrix whose",
    "entries are the reciprocal of binary diffusivities is rigorously analysed .",
    "following this , in section  [ sec_methodology ] , the key ingredients of the algorithm and the pseudo - code are presented .",
    "the computational complexity of the algorithm is demonstrated in section  [ sec_numerical ] , followed by accuracy analysis and comparison to exact solution .",
    "section  [ sec_conclusions ] concludes the article by highlighting the main contributions and applicability of the algorithm .",
    "letting @xmath35 , the stefan - maxwell equation ( equation   in section  [ sec_intro ] ) can be rewritten as @xmath36 which when written in a matrix form gives us equation  .",
    "@xmath37 where @xmath38 and @xmath39 .",
    "the entries of @xmath40 and @xmath41 are as given in equations   and  .",
    "@xmath42 @xmath43 where @xmath44 .",
    "note that the entire vector @xmath41 ( i.e. , the right hand side of the linear system in equation  ) can be computed at cost of @xmath1 .",
    "letting @xmath2 to denote the matrix containing the reciprocal of the binary diffusion coefficients , i.e. , @xmath45 , we see that @xmath46 the _ key structure that we will exploit is that the matrix @xmath2 is a low - rank matrix_. in fact , in the next subsection , we prove that this is indeed the case , when the molecules undergo elastic collisions .",
    "we also present numerical benchmarks , which give additional evidence to the fact that the matrix @xmath2 is low - rank for both elastic and inelastic collisions .",
    "when the molecules undergo elastic collisions , since we have a simple expression for @xmath47 , we will show using analytic means that the matrix @xmath2 is _ truly low - rank _",
    ", i.e. , the rank of the matrix @xmath2 up to machine precision does nt scale with the size of matrix ( the rank is independent of @xmath7 ) .    from equation  ,",
    "writing the reciprocal of the binary diffusion coefficient , we have the elements of the matrix @xmath48 given by @xmath49 where @xmath50 is a constant .",
    "if we can represent @xmath51 in a separable form as @xmath52 , we then have @xmath53 where @xmath54 . writing this in matrix form",
    ", we obtain that @xmath55 where @xmath56 and @xmath57 , which means the rank of @xmath2 is at - most @xmath58 .",
    "we will now prove that @xmath51 can be efficiently represented in a separable form .",
    "there are may ways to obtain a separable form for @xmath51 .",
    "one way is to use a taylor series representation making use of the fact that @xmath59 .",
    "however for a compact argument , we choose to make use of the identity @xmath60 recall that @xmath61 .",
    "hence , all we need is an efficient quadrature of @xmath62 for @xmath63 $ ] .",
    "recall that the tail of the integral has the following bounds , i.e. , we have @xmath64 hence , for @xmath63 $ ] , we have that @xmath65 in fact , for @xmath66 , we hit an error bound close to machine precision for @xmath67 , i.e. , @xmath68 we hence have @xmath69 where @xmath70 and @xmath71 is to be interpreted as @xmath72 .",
    "there exists a wide range of quadratures we can deploy to obtain arbitrary accuracy we want , i.e. , @xmath73 hence , if we form the matrix @xmath74 , where @xmath75 , we then have that @xmath76 , where @xmath77 with @xmath78 and @xmath79 is a diagonal matrix .",
    "the low - rank decomposition of the matrix @xmath2 obtained above by analytic means provides a sub - optimal upper bound on the rank .",
    "the singular value decomposition ( svd ) of the matrix @xmath2 gives us the optimal rank , though obtaining the svd is computationally expensive ( scaling as @xmath0 ) .",
    "we will see in section  [ sec_methodology_fast ] that the rank and low - rank decomposition of the matrix @xmath2 can be obtained by purely algebraic means in a fast way , i.e. , at a computational cost of @xmath1 .",
    "we see from figure  [ fig : singm ] that the rank of the matrix @xmath80 ( up to machine precision ) is an extremely weak function of the maximum mass @xmath81 .",
    "more importantly , the analytic argument proves that the rank of the matrix @xmath80 ( up to machine precision ) _ is independent _ of the number of species @xmath7 and in fact the rank @xmath82 as shown in figure  [ fig : singn ] .",
    "note that the rank of the matrix @xmath80 ( up to machine precision ) does nt exceed @xmath83 , even though the number of species is a few thousands .      for inelastic collisions ,",
    "the binary diffusion coefficient is given by equation  .",
    "using numerical benchmarks , we illustrate the low rank property of the matrix @xmath2 arising out of the species involved in a comprehensive chemical mechanism proposed by sarathy _ et al . _",
    "@xcite for a wide range of methyl alkanes . from the total of @xmath84 species involved in this kinetic scheme",
    ", we obtained a sequence of subsets of species ( retaining the species with maximum and minimum masses ) of different sizes @xmath85 .",
    "for each of these subsets , we form the matrix @xmath2 and analyze its @xmath86-rank as a function of the number of species @xmath7 .",
    "the @xmath86-rank of a matrix is the number of singular values , which are within a factor of @xmath86 of the largest singular value , i.e. , if a matrix @xmath38 with singular values @xmath87 , has an @xmath86-rank of @xmath88 , this means that @xmath89 iff @xmath90 .",
    "figures  [ fig : elastic_sarathy ] and  [ fig : inelastic_sarathy ] show that the @xmath86-rank of the matrix @xmath2 is independent of the number of species for elastic and inelastic collisions respectively .",
    "further , even if we set @xmath91 , which is very close to the machine precision , we see that the rank of the matrix @xmath2 is still orders of magnitude smaller than @xmath7 .",
    "also , not surprisingly , if lesser accuracy is sought for , then the @xmath86-rank decreases further .",
    "in the previous section , we illustrated that the matrix @xmath2 has an inherent low - rank structure . in order to leverage this structure for computing diffusion velocities in a fast manner ,",
    "we need to perform two significant steps :    1 .",
    "obtain low - rank factorization of the matrix @xmath2 2 .",
    "use this low - rank factorization to obtain diffusion velocities    in order for our algorithm to scale as @xmath1 , both these steps must scale as @xmath1 .",
    "if the matrix @xmath92 has an @xmath86-rank @xmath88 , we factorize @xmath2 as @xmath93 , where @xmath94 such that @xmath95 the optimal @xmath86-rank is given by the svd  @xcite , though svd is computationally expensive , scaling as @xmath0 , which defeats our purpose . thankfully in recent years , there has been an increasing focus on constructing fast ( @xmath1 ) , accurate , low - rank factorizations  @xcite for matrices .",
    "some fast techniques such as multipole expansions , analytic interpolation , adaptive cross approximation ( aca )  @xcite , pseudo - skeletal approximations  @xcite , interpolatory decomposition , randomized algorithms  @xcite , rank - revealing lu and qr algorithms provide a great way for constructing efficient low - rank representations .    in this article",
    ", we rely on the partially pivoted adaptive cross approximation  @xcite ( ppaca ) algorithm , which scales as @xmath96 to construct a low - rank factorization of matrix @xmath2 , where @xmath97 is the rank obtained using ppaca . the ppaca proceeds by obtaining an input accuracy @xmath98 from the user and subsamples the rows and columns of the matrix ( similar to the partially pivoted lu algorithm ) to construct a low - rank factorization of the matrix up to the desired input accuracy @xmath98 . in the past",
    ", ppaca has been used to compress a wide range of matrices including those arising out of @xmath7-body problems  @xcite , integral equations  @xcite , covariance matrices  @xcite , etc .",
    "the rank obtained using ppaca is very close to the optimal rank as has been observed in  @xcite .",
    "now we will take advantage of the low - rank factorization of @xmath2 ( @xmath99 ) in computing the diffusion velocities , i.e. , for solving the linear system in equation  , which is obtained using equations   and  .",
    "@xmath100 equation   can not be solved alone , since the system has a non - trivial null - space as discussed in the introduction .",
    "the flux criterion in equation   also needs to be enforced along with equation  .",
    "the flux criterion in terms of @xmath101 s , instead of @xmath9 s is given by @xmath102 hence , the flux criterion in terms of @xmath101 s is @xmath103 the equations   and   can be combined into a single equation  .",
    "@xmath104 where @xmath105 is a random vector .",
    "equation   can be rewritten as @xmath106 where @xmath107 , @xmath108 , @xmath109 and @xmath97 .",
    "the solution to equation   is given by the sherman - morrison - woodbury ( smw ) formula  @xcite , i.e. , @xmath110 the main thing to note with the smw formula is that it if we can solve a linear system efficiently , then low - rank updates to the linear system can also be solved efficiently .",
    "once the vector @xmath111 is obtained , the diffusion velocities @xmath9 s can be obtained by equation  .",
    "@xmath112    the pseudocode for computing @xmath9 s using equations   and  , along with the computational cost for each step , is presented in algorithm  [ alg ] .",
    "note that the only dense matrix we are inverting is in the last step in algorithm  [ alg ] , i.e. , we are inverting @xmath113 , which is a small dense matrix of size @xmath114 .    [ cols=\"^,<,<,<\",options=\"header \" , ]     [ table_krithika ]",
    "an accurate , fast , direct and robust algorithm to compute multi - component diffusion velocities has been proposed . to our knowledge , this is the first provably accurate algorithm ( the solution can be obtained up to an arbitrary degree of precision ) scaling at a computational complexity of @xmath1 in finite precision .",
    "the key idea involves leveraging the fact that the matrix of the reciprocal of the binary diffusivities , @xmath2 , is low rank , with its rank being independent of the number of species involved .",
    "the low rank representation of matrix @xmath2 is computed in a fast manner using ppaca algorithm  @xcite at a computational complexity of @xmath1 and the sherman - morrison - woodbury  @xcite formula is used to solve for the diffusion velocities .",
    "rigorous proofs and numerical benchmarks illustrate the low rank property of the matrix @xmath2 and scaling of the algorithm . this method is being incorporated in a droplet burning simulation , as a part of our ongoing work , where the diffusion velocities need to be computed accurately .",
    "sivaram ambikasaran would like to thank the inspire faculty award [ dst / inspire/04/2014/001809 ] provided by the department of science & technology , india and the fellowship under the simons foundation funded program ",
    "science without boundaries \" of the international centre for theoretical sciences .",
    "krithika narayanaswamy would like to thank the new faculty initiation grant , project no .",
    "mee/15- 16/845/nfig offered by indian institute of technology madras .",
    "d.  n. pope , g.  gogos , a new multicomponent diffusion formulation for the finite - volume method : application to convective droplet combustion , numerical heat transfer , part b : fundamentals 48  ( 3 ) ( 2005 ) 213233 .",
    "s.  dworkin , m.  smooke , v.  giovangigli , the impact of detailed multicomponent transport and thermal diffusion effects on soot formation in ethylene / air flames , proceedings of the combustion institute 32  ( 1 ) ( 2009 ) 11651172 .",
    "s.  sarathy , c.  westbrook , m.  mehl , w.  pitz , c.  togbe , p.  dagaut , h.  wang , m.  oehlschlaeger , u.  niemann , k.  seshadri , et  al .",
    ", comprehensive chemical kinetic modeling of the oxidation of 2-methylalkanes from c 7 to c 20 , combustion and flame 158  ( 12 ) ( 2011 ) 23382357 .",
    "k.  zhao , m.  n. vouvakis , j .- f .",
    "lee , the adaptive cross approximation algorithm for accelerated method of moments computations of emc problems , electromagnetic compatibility , ieee transactions on 47  ( 4 ) ( 2005 ) 763773 .",
    "e.  liberty , f.  woolfe , p .-",
    "martinsson , v.  rokhlin , m.  tygert , randomized algorithms for the low - rank approximation of matrices , proceedings of the national academy of sciences 104  ( 51 ) ( 2007 ) 2016720172 .",
    "k.  narayanaswamy , h.  pitsch , p.  pepiot , a component library framework for deriving kinetic mechanisms for multi - component fuel surrogates : application for jet fuel surrogates , combustion and flame ( accepted ) doi : 10.1016/j.combustflame.2015.12.013 .",
    "k.  narayanaswamy , h.  pitsch , p.  pepiot , a chemical mechanism for low to high temperature oxidation of methylcyclohexane as a component of transportation fuel surrogates , combustion and flame 162  ( 4 ) ( 2015 ) 11931213 .",
    "k.  narayanaswamy , h.  pitsch , p.  pepiot , a chemical mechanism for low to high temperature oxidation of n - dodecane as a component of transportation fuel surrogates , combustion and flame , 161  ( 4 ) , ( 2014 ) 866-884 ."
  ],
  "abstract_text": [
    "<S> [ sec_abstract ] using accurate multi - component diffusion treatment in numerical combustion studies remains formidable due to the computational cost associated with solving for diffusion velocities . to obtain the diffusion velocities , for low density gases </S>",
    "<S> , one needs to solve the stefan - maxwell equations along with the zero diffusion flux criteria , which scales as @xmath0 , when solved exactly . in this article </S>",
    "<S> , we propose an accurate , fast , direct and robust algorithm to compute multi - component diffusion velocities . </S>",
    "<S> we also take into account the soret effect , while computing the multi - component diffusion velocities . to our knowledge , this is the first provably accurate algorithm ( the solution can be obtained up to an arbitrary degree of precision ) scaling at a computational complexity of @xmath1 in finite precision . </S>",
    "<S> the key idea involves leveraging the fact that the matrix of the reciprocal of the binary diffusivities , @xmath2 , is low rank , with its rank being independent of the number of species involved . </S>",
    "<S> the low rank representation of matrix @xmath2 is computed in a fast manner at a computational complexity of @xmath1 and the sherman - morrison - woodbury formula is used to solve for the diffusion velocities at a computational complexity of @xmath1 . </S>",
    "<S> rigorous proofs and numerical benchmarks illustrate the low rank property of the matrix @xmath2 and scaling of the algorithm .    </S>",
    "<S> multi - component diffusion velocity , chemical mechanism , stefan - maxwell equations , low rank , @xmath1 computational complexity , sherman - morrison - woodbury , adaptive cross approximation    _ colloquium _ : reaction kinetics . + _ word count _ : method @xmath3 - main text : 3137 words + - equation lines : 20 lines x 7.6 words / line = 156 words + - references : ( 39 + 2 ) x 2.3 x 7.6 = 717 words + - tables : ( 5 + 2 ) x 7.6 words / line x 4 = 212 words + - figures : 6 x ( 67 mm + 10 ) x 2.2 words / mm + 41 = 1058 words + - total = 5280 words + the authors affirm to pay for color reproduction charges if so required </S>"
  ]
}
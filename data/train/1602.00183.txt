{
  "article_text": [
    "we are interested in solving hyperbolic problems that could contain discontinuous solutions in time .",
    "high order numerical approximations of such discontinuous solutions may suffer from the gibbs phenomenon and the approximations are highly oscillatory , e.g. spectral approximations of discontinuous functions @xcite .",
    "high order essentially non - oscillatory ( eno ) and weighted essentially non - oscillatory ( weno ) methods are one of the most powerful methods that solve hyperbolic problems with the gibbs oscillations much reduced @xcite . in @xcite , we developed non - polynomial eno and weno methods based on the non - polynomial reconstruction for the finite volume approximations .",
    "the original eno and weno methods are based on the polynomial interpolation and its convex combination for the final reconstruction at the cell boundaries @xcite .",
    "thus once the number of cells that are participating in the interpolation is fixed , the order of accuracy is also fixed . in @xcite , we proposed to use non - polynomial bases such as the radial basis functions ( rbfs ) to improve the fixed order of accuracy of the final reconstruction .",
    "the underlying idea is to use non - polynomial functions as the interpolation basis that contain a free parameter .",
    "the value of the introduced free parameter is adaptively determined by the local solutions so that the local accuracy is improved and higher order of accuracy than the polynomial order can be achieved .",
    "this improvement was made by making the leading error term vanish by the free parameter or at least vanish to a certain order .",
    "if the leading error term vanishes , the accuracy is improved particularly when the solution is smooth . in @xcite , it was shown that the eno / weno methods with the non - polynomial basis functions improve the accuracy significantly if the problem is smooth .",
    "this paper is a direct extension of our previous work for the finite volume eno / weno methods to the finite difference eno / weno methods .",
    "the formulation of the rbf finite difference eno / weno methods is basically same as the finite volume methods , while it is more easier to implement to higher - dimensional problems . in this paper",
    "we show that the rbf finite difference eno / weno methods work similarly as the rbf finite volume methods and provide supporting numerical examples .    for the non - polynomial basis ,",
    "we use the multi - quadric ( mq ) rbfs .",
    "we note that the hybrid of the rbf method and the weno method is not new . for example , in @xcite a polyharmonic spline was used to solve pdes on the unstructured grid with the weno method .",
    "the rbf weno method in @xcite took advantages of both the rbf and weno methods .",
    "that is , the hybrid method utilizes the meshless feature of the rbfs , which is beneficial for the unstructured grid .",
    "it also took the advantage of the non - oscillatory feature of the weno method , which efficiently handles discontinuous solutions .",
    "however , as the polyharmonic spline was used as the rbf basis , the shape parameter was not free but fixed . in this paper , we are more interested in improving the accuracy rather than the efficiency dealing with the unstructured mesh . in order to improve local accuracy , we adopt infinitely smooth rbfs such as the mq - rbfs , which contain the free parameter , so - called the shape parameter . by exploiting the shape parameter ,",
    "we improve the local accuracy .",
    "it would be an interesting project to develop a method which utilizes both the meshless feature and the shape parameter of the rbfs with the weno method on the unstructured grid .",
    "we only focus on the accuracy in this paper .",
    "we restrict our discussion to rbfs having only one shape parameter although it would be possible to have multiple shape parameters .",
    "one of the advantages of using the shape parameter is that the polynomial interpolation is a limit case of the rbf interpolation .",
    "that is , the rbf interpolation becomes equivalent to the polynomial interpolation if the shape parameters vanish @xcite . in this paper , we follow the similar procedure in @xcite for the finite difference eno / weno reconstruction and solve several hyperbolic problems . since the shape parameters are optimized using all the given information within the given stencil , the method would be oscillatory if the stencil contains discontinuities . to prevent such oscillations",
    ", we adopt the monotone polynomial interpolation by measuring the local maxima . to switch back to the regular eno / weno method",
    ", we only need to have the shape parameter vanish , which makes it easy to implement the rbf - eno / weno method in the existing eno / weno code .",
    "the paper is composed of the following sections . in section 2 ,",
    "we briefly explain the rbf interpolation and the optimization of the shape parameter . in section 3",
    ", we explain the regular eno / weno finite difference method followed by section 4 where we compare the polynomial interpolation with the rbf interpolation .",
    "the interpolation coefficients for @xmath0 and @xmath1 are provided . in section 5",
    ", we provide the numerical examples . for the numerical experiments for discontinuous problems , we first use the monotone polynomial interpolation method for the prevention of oscillations",
    ". then we present the numerical examples for both linear and nonlinear problems and for both scalar and system problems in 1d and 2d . in section 6",
    ", we provide a brief conclusion and our future research .",
    "we briefly explain the rbf interpolation in one space dimension .",
    "suppose that for a domain @xmath2 , a data set @xmath3 is given where the centers @xmath4 are the coordinates and @xmath5 are the function values of the unknown function @xmath6 at @xmath7 .",
    "the rbf interpolation is given by a linear combination of the radial basis function , @xmath8 .",
    "the kernel @xmath9 at @xmath7 is a function of the _ radial _ distance between @xmath10 and the center @xmath11 and the shape parameters @xmath12 , i.e. @xmath13 where @xmath14 is the distance between @xmath10 and @xmath11 .",
    "the euclidean norm is usually used for @xmath15 .",
    "then the rbf interpolation of @xmath6 based on @xmath16 data points , @xmath17 , is given by @xmath18 where @xmath19 are the expansion coefficients to be determined .",
    "here we note that one can add a low order polynomial term in the right hand side of the above equation to make the interpolation consistent up to a certain degree . in this paper , however , we do not include the low order polynomial term in the rbf interpolation . using the interpolation condition @xmath20 ,",
    "the expansion coefficients are determined by the linear system @xmath21 where @xmath22^t$ ] , @xmath23^t$ ] and @xmath24 is the @xmath25 element of the interpolation matrix @xmath26 .",
    "if @xmath27 is one of the piecewise smooth rbfs with no shape parameter involved , we will obtain the rbf interpolation explicitly after we solve the linear system .",
    "however , if @xmath27 is one of the infinitely smooth rbfs , we still need to determine or pre - assign the value of the shape parameter .",
    "one can have shape parameters fixed globally as a constant . or one can optimize them so that the accuracy of the interpolation is improved",
    ". there are various kinds of rbfs @xcite . among those , we use the multi - quadric ( mq ) rbf given by @xmath28 one could use a different form of the mq - rbf such as @xmath29 , but this form yields a more complicated algebraic expression for the rbf - eno / weno formulation than .    in @xcite , it has been discussed that the rbf interpolation may yield spectral convergence . in practice ,",
    "such a fast convergence depends on several conditions such as the optimization of the shape parameters and the data structure . in this paper , we focus on the optimization of the shape parameter to enhance the overall accuracy .",
    "this optimization procedure is the key element of the rbf - eno / weno formulation . to explain the optimization procedure below",
    ", we first assume that the center set @xmath30 forms a uniform grid and consider the case of @xmath31 . in the following section",
    ", similar analysis will be performed for the rbf - eno / weno formulation .",
    "it is straightforward to extend the same idea to larger values of @xmath16 .",
    "let @xmath32 , @xmath33 and @xmath34 with @xmath31 .",
    "let @xmath5 denote the function value of @xmath6 at @xmath7 .",
    "for example , @xmath35 .",
    "also we assume that all the shape parameters are variable but same , i.e. @xmath36 .",
    "the value of @xmath37 can be either real or complex .",
    "define the error function @xmath38 $ ] .",
    "the interpolation based on the lagrange polynomials yields the second order convergence in @xmath39 , i.e. @xmath40 . the rbf interpolation , @xmath41 is then given by from @xmath42 where @xmath43 and @xmath44 are to be computed according to .",
    "we evaluate the error function @xmath45 at @xmath46 . with the fixed @xmath47 and the obtained @xmath43 and @xmath44 from ,",
    "the taylor series of @xmath48 in terms of @xmath39 is given by @xmath49 where the superscript @xmath50 denotes the second derivative in @xmath10 .",
    "the taylor series of @xmath45 around @xmath51 yields a similar result but the cubic order term appears as below @xmath52 from and , we know that it is possible to obtain the @xmath53th or @xmath54rd order accuracy if we choose the shape parameter @xmath47 as @xmath55 thus the rbf interpolation can achieve higher convergence than the second order expected by the polynomial interpolation . or at least we know that there exists @xmath56 that makes the leading error term vanish and helps the interpolation to achieve higher order accuracy",
    ". note , however , that since @xmath57 and @xmath58 are the only given information about the unknown function @xmath6 , the exact value of @xmath59 at @xmath60 and @xmath61 and @xmath6 at @xmath46 are not available .",
    "the key idea for the construction of the rbf - eno / weno method is that we use the approximation of those values to a certain order based on the function values at the given cells so that we can still obtain the improved order of accuracy .",
    "table [ table_ep0 ] shows the adaptation condition of @xmath37 that makes the leading error term at @xmath46 vanish when expanded in the taylor series around @xmath46 for different values of @xmath16 with centers @xmath62 .",
    "the table shows the leading interpolation errors with different @xmath16 when the interpolation is obtained as the polynomials ( @xmath63 , _ polynomial order _ ) and rbfs when the adaptation is applied ( _ rbf order _ ) . as shown in the table the error of the rbf interpolation is of @xmath64 for @xmath31 because of the symmetry and of @xmath65 for the rest while the error of the polynomial interpolation is of @xmath66 for every @xmath16 .",
    ".adaptation conditions of @xmath37 for various values of @xmath16 .",
    "[ cols=\"^,^,^,^\",options=\"header \" , ]     [ table3 ]    figure [ figure3 ] shows the solution profiles at the final time @xmath67 when the shock forms with @xmath0 and @xmath1 .",
    "the top figures show the solutions for @xmath0 and the bottom for @xmath1 . for both cases ,",
    "the rbf - weno - js and weno - js show similar results while the rbf - eno solution is better than the regular eno solution .    .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) . @xmath68.,title=\"fig:\",scaledwidth=48.0% ] .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ] .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ] .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ]    .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ] .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ] .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ] .",
    "@xmath0 ( top ) and @xmath1 ( bottom ) .",
    "@xmath68.,title=\"fig:\",scaledwidth=48.0% ]      for the system problem , we consider the one - dimensional euler equations for gas dynamics @xmath69 where the conservative state vector @xmath70 and the flux function @xmath71 are given by @xmath72 here @xmath73 and @xmath74 denote density , velocity , pressure and total energy , respectively .",
    "the equation of state is given by @xmath75 where @xmath76 for the ideal gas .",
    "we consider the sod shock tube problem with the initial condition @xmath77 the sod problem is solved with @xmath68 and the cfl number @xmath78 .",
    "figures [ sod ] and [ sod2 ] show solutions by each method at the final time @xmath79 for @xmath0 and @xmath1 , respectively . the top left figure shows the global solution in the entire domain while the rest shows the solution profiles in the areas specified in the top left figure . as in the previous examples , for @xmath0 the rbf - eno and rbf - weno - js methods are better performed than the regular eno and weno - js methods .",
    "the solution profiles are much sharper near the non - smooth area . for @xmath1 ,",
    "the rbf - weno - js solution is similar to the weno - js solution while the rbf - eno solution is sharper than the regular eno solution .    .",
    "the dashed line is the exact solution . ,",
    "title=\"fig:\",scaledwidth=40.0% ] .",
    "the dashed line is the exact solution .",
    ", title=\"fig:\",scaledwidth=40.0% ] .",
    "the dashed line is the exact solution .",
    ", title=\"fig:\",scaledwidth=40.0% ] . @xmath80 .",
    "the dashed line is the exact solution .",
    ", title=\"fig:\",scaledwidth=40.0% ]    .",
    "the dashed line is the exact solution . ,",
    "title=\"fig:\",scaledwidth=40.0% ] .",
    "the dashed line is the exact solution . ,",
    "title=\"fig:\",scaledwidth=40.0% ] .",
    "the dashed line is the exact solution . ,",
    "title=\"fig:\",scaledwidth=40.0% ] .",
    "the dashed line is the exact solution .",
    ", title=\"fig:\",scaledwidth=40.0% ]      the lax problem has the following initial conditions : @xmath81 with the dirichlet boundary conditions at @xmath82 and @xmath83 .",
    "the solution was integrated until @xmath84 .",
    "figures [ lax1 ] and [ lax2 ] show the solution profiles at the final time @xmath85 with @xmath68 for @xmath0 and @xmath1 , respectively .",
    "the top left figure shows the global solution and the rest the local solution profile in the areas specified in the top left figure . for @xmath0 , as in the previous example , the rbf - eno and rbf - weno - js solutions are better than the regular eno and weno solutions near the non - smooth area . for @xmath1 ,",
    "the rbf - weno - js solution is slightly better than the weno solution and the rbf - eno solution is better than the regular eno solution .",
    "since the rbf - weno - js and weno - js methods both yield about @xmath86th order accuracy while the rbf - eno solution is @xmath54rd order or higher but less than @xmath86th order , it is expected that the rbf - weno - js or weno - js solutions are better than the eno and rbf - eno solutions .    .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ] .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ] .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ] .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ]    .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ] .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ] .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ] .",
    "@xmath1.,title=\"fig:\",scaledwidth=40.0% ]      now we consider the two - dimensional hyperbolic conservation law below @xmath87 with the appropriate initial and boundary conditions where @xmath88 and @xmath89 are the flux functions . as in 1d case ,",
    "the ode system for the discretized version in the cell @xmath90 \\times [ y_{i-{1\\over 2 } } , y_{i + { 1\\over 2}}]$ ] is given by @xmath91 -\\frac{1}{\\delta y } \\left [ \\hat{g}_{i , j+{1\\over 2 } } - \\hat{h}_{i , j-{1\\over 2 } } \\right],\\end{aligned}\\ ] ] where @xmath92 is the numerical approximation to @xmath93 and @xmath94 and @xmath95 are the numerical fluxes for the flux functions @xmath88 and @xmath89 , respectively .",
    "notice that unlike the finite volume method , the finite difference method does not involve any quadrature points for the numerical integration of the flux functions . with the finite volume non - polynomial eno / weno methods for 2d problems ,",
    "the accuracy of the local reconstruction can be enhanced at certain quadrature points .",
    "but since there is no quadrature point involved , the finite difference rbf - weno - js method maintains the same order of convergence although the accuracy of the rbf - weno - js method is enhanced .",
    "for the 2d numerical experiments , we consider the double mach reflection problem described in @xcite with the domain @xmath96 \\times [ 0 , 1]$ ] .",
    "the simulation is run until the final time @xmath97 . at @xmath79 , shocks form near the right edge shown as an almost straight line in the density contour in the following figures .",
    "figures [ dmr1 ] and [ dmr11 ] show the density contours with various methods .",
    "the left column of figures shows the density contours with the regular eno / weno methods and the right column with the rbf - eno / weno - js methods .",
    "these contours look similar with slight differences . for a detailed comparison , figs .",
    "[ dmr2 ] and [ dmr22 ] show a slice image of figs .",
    "[ dmr1 ] and [ dmr11 ] at @xmath98 .",
    "we zoom in different regions for the case of @xmath99 and @xmath100 ( fig .",
    "[ dmr2 ] ) and @xmath101 and @xmath102 ( fig .",
    "[ dmr22 ] ) to compare all the methods . here",
    "@xmath16 and @xmath103 denote the total number of grids in @xmath10 and @xmath104 directions , respectively . with @xmath105",
    ", we can see that the rbf - eno solutions are comparable or even better than the regular weno solutions .",
    "this is because when the rbf - eno and the regular weno solutions are of the same order , the rbf - eno solution is sharper and less dissipative .",
    "the rbf - weno - js solution is also slightly better and sharper than the regular weno - js solution . with @xmath106 ,",
    "the regular weno solution is better than the rbf - eno solution since the accuracy of the rbf - eno method is lower than the regular weno method .",
    "however , the rbf - eno solution is still sharper than the regular eno solution and has a similar shape to the weno solution .",
    "we also observe that the rbf - weno - js method performs best among all those methods .     for the double mach reflection problem .",
    "@xmath100 . , title=\"fig:\",scaledwidth=80.0% ] -0.6 in   for the double mach reflection problem . @xmath97 .",
    ", title=\"fig:\",scaledwidth=80.0% ]     for the double mach reflection problem . @xmath97 .",
    "@xmath100 . , scaledwidth=80.0% ]    .",
    "@xmath102.,title=\"fig:\",scaledwidth=80.0% ] -0.6 in .",
    "@xmath102.,title=\"fig:\",scaledwidth=80.0% ]     for the double mach reflection problem . @xmath97 .",
    "@xmath102 . , scaledwidth=80.0% ]",
    "in this paper , we presented the finite difference rbf - eno / weno methods , a direct extension of the non - polynomial eno / weno finite volume methods proposed in @xcite .",
    "the rbf - eno / weno finite difference method seeks the reconstruction using the rbf interpolation which involves the free shape parameter . by optimizing the shape parameter , the finite difference rbf - eno /",
    "weno reconstruction becomes more accurate than the regular eno / weno reconstruction for smooth problems and yields sharper solution profiles near the jump discontinuity .",
    "the finite difference rbf - eno reconstruction is sought in terms of the flux function . accordingly",
    "the optimization of the shape parameter of the rbfs is found based on the flux functions on the grid points within the given stencil . unlike the finite volume rbf - eno / weno method",
    ", the finite difference rbf - eno / weno method does not involve any integral approximation .",
    "thus the order of convergence is fully determined by the size of stencil for 2d problems .",
    "numerical examples both in 1d and 2d show that the finite difference rbf - eno and rbf - weno - js methods yield more accurate results than the regular eno and weno - js methods .",
    "also the solutions by the rbf - eno and rbf - weno - js methods near the discontinuities are sharper than the solutions by the regular eno / weno method .    in our current work , we implemented the rbf reconstruction in the regular eno and weno methods based on the original weno reconstruction by jiang and shu @xcite . as mentioned in the paper",
    ", we will investigate the rbf reconstruction with other eno / weno variations in our future research such as the weno - z method @xcite .",
    "we were interested in improving local accuracy , but it would be an interesting research to investigate how the local adaption of the shape parameter can be utilized with the meshless properties of rbfs on the unstructured grid .",
    "furthermore , we will also investigate the rbf - eno / weno method for higher values of @xmath107 than @xmath1 with multiple shape parameters defined in the rbf basis used for the reconstruction .",
    ", essentially non - oscillatory and weighted essentially non - oscillatory schemes for hyperbolic conservation laws ,  advanced numerical approximation of nonlinear hyperbolic equations \" ( lecture notes in mathematics 1697 ) , a. quarteroni ( ed . ) , springer - verlag , 1998 ."
  ],
  "abstract_text": [
    "<S> we present adaptive finite difference eno / weno methods by adopting infinitely smooth radial basis functions ( rbfs ) . </S>",
    "<S> this is a direct extension of the non - polynomial finite volume eno / weno method proposed by authors in @xcite to the finite difference eno / weno method based on the original smoothness indicator scheme developed by jiang and shu @xcite . </S>",
    "<S> the rbf - eno / weno finite difference method slightly perturbs the reconstruction coefficients with rbfs as the reconstruction basis and enhances accuracy in the smooth region by locally optimizing the shape parameters . </S>",
    "<S> the rbf - eno / weno finite difference methods provide more accurate reconstruction than the regular eno / weno reconstruction and provide sharper solution profiles near the jump discontinuity . </S>",
    "<S> furthermore the rbf - eno / weno methods are easy to implement in the existing regular eno / weno code . </S>",
    "<S> the numerical results in 1d and 2d presented in this work show that the proposed rbf - eno / weno finite difference method better performs than the regular eno / weno method .    </S>",
    "<S> * keywords * essentially non - oscillatory method , weighted essentially non - oscillatory method , radial basis function interpolation , finite difference method . </S>"
  ]
}
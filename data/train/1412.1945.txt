{
  "article_text": [
    "ue to the advancement of technology and heavy reduction in costs of fpga development , traditional video surveillance equipment has evolved from merely capturing video from a static vantage point and transmitting it to performing some preliminary analysis such as extracting objects of interest from the scene and then transmitting it .",
    "+ for most of the analysis that is done on a surveillance video , the first crucial step is to detect theforeground pixels of the video .",
    "this is done by first constructing a background model and matching each individual frame with this model .",
    "any pixel of a frame which deviates significantly from this model is marked as a foreground pixel in that image .",
    "+ several techniques for construction of this background model have been proposed .",
    "the most trivial of this techniques is to average the first 20 or so frames and use the averaged frame as the background model .",
    "this adequately takes care of the lighting changes but this technique fails when the background of the scene contains swaying leaves , clocks or part of the background is constantly moved around the scene etc .",
    "+ wren et al,[1 ] tried to solve this problem by fitting a gaussian distribution for all the colors occuring at each pixel location of a frame using the past n frames .",
    "any pixel value from the input frame which is sufficiently close to the mean of the gaussian distribution for that pixel location is marked as a background pixel and the gaussian distribution is updated .",
    "this technique fails when the histogram of pixel values at any given location is bimodal or has multiple peeks .",
    "+ stauffer et al,[2 ] attacked the short comings of the previous work by using multiple(about 3 to 5 ) gaussian distributions per pixel locations .",
    "each input frame pixel is matched with a corresponding gaussians at that location .",
    "any pixel which is in the range of 2.5 of the mean of a gaussian for that pixel location is marked as a background pixel and that gaussian s parameters are updated .",
    "the problem with this technique is its heavy usage of floating point operations and its huge memory requirement .",
    "also the error rate is very high .",
    "+ the wallflower principles and practises [ 3 ] a pioneering work by microsoft research team , not only came up with a background modelling technique but also surveyed all the recent background modelling techniques and listed out all the common problems that a background modelling techniques would face .",
    "it views the process of constructing the background model at pixel level , segment level and frame level .",
    "the pixel level algorithm attacks the problems with leaf swaying and background motion problems . in this work",
    "i provide a better alternative to their pixel level algorithm .",
    "the frame level and the segment level techniques listed out in the wallflower paper could be used with this paper as well .",
    "+ in this paper i tackle the problem by constructing an a octree[5 ] which is discussed in section 2 .",
    "the octree is constructed by iterating over each individual pixel location of each individual frame of the training video .",
    "the colors found are quantized and form a leaf node in the octree .",
    "each pixel of the incoming frame is quantized similarly and checked to see if a corresponding leaf node exists in the already constructed octree .",
    "this is shown in section 3 .",
    "if a node does exists it is marked as a background pixel . in section 4",
    "i show a method of merging multiple octrees a technique to be used when we do nt have a trainining video or as the wallflower paper calls it , the bootstrapping problem . +",
    "an octree is a tree data structure in which each internal node has exactly eight children .",
    "octrees are most often used to partition a three dimensional space by recursively subdividing it into eight octants .",
    "octrees are also used for color quantization .",
    "the octree color quantization algorithm , invented by gervautz and purgathofer in 1988 , encodes image color data as an octree up to nine levels deep .",
    "+ in computer graphics , color quantization or color image quantization is a process that reduces the number of distinct colors present in an image , usually with the intention that the new image should be as visually similar as possible to the original image .",
    "various methods are available for color quantization such as the median cut algorithm , popularity algorithm .",
    "octree[5 ] is the leading color quantization technique as it executes in @xmath0 execution time and barely occupies memory of the rder @xmath1 . here",
    "@xmath2 being the number of pixels in the image and @xmath3 is a number which is proportional to the number of unique colors present .",
    "+        for a picture whose colors we wish to quantize , we consider each color and store it in a octree using the store color algorithm .",
    "next we prune the octree . by pruning the octree",
    "we hope to group together colors which look visually same .",
    "few methods of pruning have been covered in [ 14 ] and [ 15 ] . in this paper",
    "i followed a simple pruning algorithm that is to remove few levels from the bottom of the tree .",
    "since each color at a level n is constructed using n most significant bits of the red , green , blue values of the color , the newly exposed leaf nodes will have n bits of the original color that they represented.one way to assign a new color to these newly exposed leaf nodes is to use their n original bits and fill out the remaining bits with 0 s .",
    "this way if any two colors had the same parents till the height of pruning will now be reprsented by the same color .",
    "this new color could be used to redraw the image .",
    "fig 2 shows the same image redrawn using an octree pruned at different levels .",
    "@xmath4 @xmath5 @xmath6 + color.green[i ] + color.blue[i];}$ ] @xmath7}$ ] @xmath8 } \\gets \\text{create node();}$ ] @xmath7}$ ] @xmath9 @xmath10",
    "if we assume that the most frequently occuring color in a video usually belong to the background , we can construct a octree only containing the background colors .",
    "we construct an octree for each frame of a video or a group of frames and prune it using the technique presented in the previous section .",
    "each octree obtained this way will hold the quantized representation of all the colors in each frame or a group of frames . by using the merging procedure shown below we could merge together multiple octrees to obtain a single octree which will contain the most frequently occuring colors in a quantized way .",
    "this octree could be thought of as containing all the colors of the background . +",
    "our assumption that the most frequently occuring colors in a video usually belong to the background is invalidated in the case when a foreground object stays static for a while and suddenly starts to move .",
    "since that object s color has appeared in most frames it would be treated as belonging to the background of the video .",
    "this could happen when a person sleeping infront of a camera suddenly starts to move . to remedy this",
    ", we could subdivide a video into multiple regions and obtain a octree for each of these regions .",
    "+    @xmath11 @xmath12 @xmath13 @xmath10 @xmath14 } \\gets \\text{new node();}$ ] @xmath15 @xmath10 @xmath16 } \\gets \\text{root[j].child[i];}$ ] @xmath10 @xmath17 } \\gets \\text{construct tree(temproot,}$ ]",
    "@xmath18 @xmath15 @xmath10",
    "to identify the foreground pixels in a video , we run the procedure shown in the previous section on the first few seconds of the video or the first 100 frames or so of the video .",
    "once we constructed an octree containing the background colors , the process of identifying foreground object locations in a incomming frame is pretty straight forward . for each pixel color of the incoming frame",
    ", we use the check color procedure to see if it is present in the octree .",
    "if it is not , it is labelled as a foreground pixel . +",
    "in case we subdivided the video into multiple regions when checking if a pixel belongs to foreground or background , we use the octree of that region in conjugation with the procedure below to ascertain if it is foreground or background .",
    "[ h ]    @xmath19 @xmath5 @xmath6 + color.green[i ] + color.blue[i];}$ ] @xmath7}$ ]",
    "@xmath19 @xmath9 @xmath10 @xmath20 @xmath15",
    "the following results are obtained on a second generation i5 laptop running at 2.3 ghz with 4 gb of ram on windows 7 sp1 and jre 7 with no updates installed .",
    "the datasets for these experimentation is from the wallflower paper .                                the @xmath21 scores for different leading algorithms(cb[6 ] , imog[8 ] , lbph[9 ] , stbs[11 ] ) on different datasets",
    "is given below in comparision with octree .",
    "the @xmath21 scores are calculated using the formula given below .",
    "+ @xmath22 + where @xmath23 and @xmath24 + @xmath25 stand for true negative , true positives , false negatives and false positives .",
    "wren , christopher richard , et al .",
    "`` pfinder : real - time tracking of the human body . ''",
    "pattern analysis and machine intelligence , ieee transactions on 19.7 ( 1997 ) : 780 - 785 .",
    "+ stauffer , chris , and w. eric l. grimson .",
    "`` adaptive background mixture models for real - time tracking . '' computer vision and pattern recognition , 1999 .",
    "ieee computer society conference on .. vol .",
    "2 . ieee , 1999 .",
    "+ toyama , kentaro , et al .",
    "`` wallflower : principles and practice of background maintenance . '' computer vision , 1999 .",
    "the proceedings of the seventh ieee international conference on .",
    "1 . ieee , 1999 .",
    "+ bouwmans , thierry .",
    "`` recent advanced statistical background modeling for foreground detection : a systematic survey . ''",
    "rpcs 4.3 ( 2011 ) : 147 - 176 .",
    "+ yuk , j.s .- c . ; wong , k .- y.k . 8th ieee international conference on advanced video and signal - based surveillance ( avss ) , 2011 + k. kim , t. h. chalidabhongse , d. harwood , and l. s. davis , `` real - time foreground - background segmentation using codebook model , '' real - time imag .",
    "3 , pp . 172185 , 2005 .",
    "+ l. maddalena and a. petrosino , `` a self - organizing approach to back - ground subtraction for visual surveillance applications , '' ieee trans.image process .",
    "17 , no . 7 , pp . 11681177 , 2008 .",
    "+ z. tang and z. miao , `` fast background subtraction and shadow elimina - tion using improved gaussian mixture model , '' in proc .",
    "ieee workshophaptic , audio , visual environ .",
    "games , 2007 , pp . 541544 .",
    "+ m. heikkila and m. pietikainen , `` a texture - based method for modelling the background and detecting moving objects , '' ieee trans . pattern anal .",
    "intell . , vol .",
    "657662 , 2006 .",
    "+ f. el baf , t. bouwmans , and b. vachon , `` type-2 fuzzy mixture of gaussians model : application to background modeling , '' in proc .",
    "visual comput . , 2008 , pp . 772781",
    ". + p. chiranjeevi and s. sengupta , `` moving object detection in the presence of dynamic backgrounds using intensity and textural features , '' j. electron .",
    "043009 - 1043009 - 11 , 2011 .",
    "+ s. zhang , h. yao , s. liu , x. chen , and w. gao , `` a covariance - based method for dynamic background subtraction , '' in proc .",
    "icpr , 2008 , pp .",
    "+ pojala , c. , and somnath sengupta .",
    "`` neighborhood supported model level fuzzy aggregation for moving object segmentation . '' ( 2014 ) : 1 - 1 .",
    "+ baolong , guo , and fu xiang .",
    "`` a modified octree color quantization algorithm . '' communications and networking in china , 2006 .",
    "first international conference on .",
    "ieee , 2006 .",
    "+ ning , paul , and lambertus hesselink .",
    "`` octree pruning for variable - resolution isosurfaces . ''",
    "visual computing .",
    "springer japan , 1992 .",
    "349 - 363 ."
  ],
  "abstract_text": [
    "<S> by assuming that the most frequently occuring color in a video or a region of a video belongs to the background of the image , i propose a new algorithm for detecting foreground objects in a video . </S>",
    "<S> the process of detecting the foreground objects is complicated because of the fact that there may be swaying tree s , objects of the background being moved around or lighting changes in the video . to deal with such complexities </S>",
    "<S> many have come up with solutions which heavily rely on expensive floating point operations . in this paper </S>",
    "<S> i used a data structure called octree which is implemented only using binary operations . </S>",
    "<S> traditionally octrees were used for color quantization but here in this paper i used it as a data structure to store the most frequently occuring colors in a video as well . for each of the starting few video frames , i constructed a octree using all the colors of that frame </S>",
    "<S> next i pruned all the trees by removing nodes below a certain height and gave the leaf nodes a color which is dependant on the topological path from that node to its parent . </S>",
    "<S> hence any two leaf nodes in two different octrees with the same topological path from themselves to the root will represent the same color . </S>",
    "<S> next i merged all these individual trees into a single tree retaining only those nodes whose topological path to itself from the root is most common among all the trees . </S>",
    "<S> the colors represented by the leaf nodes in the resultant tree will be the most frequently occuring colors in the starting video frames of the video . hence any color of an incomming frame that is not close to any of the colors represented by the leaf node of the merged tree </S>",
    "<S> can be regarded as belonging to a foreground object . + as an octree is constructed using only binary operations , it is very fast compared to other leading algorithms .    </S>",
    "<S> background modelling , octree color quantization , moving object detection </S>"
  ]
}
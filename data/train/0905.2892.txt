{
  "article_text": [
    "it is well known that , when the underlying logic is the classical one ( i.e. the absurdity rule is allowed ) the connectives @xmath1 and @xmath2 are redundant ( they can be coded by using @xmath3 and @xmath4 ) . from a logical point of view , considering the full logic is thus somehow useless . however , from the computer science point of view , considering the full logic is interesting because , by the so - called curry - howard correspondence , formulas can be seen as types for functional programming languages and correct programs can be extracted from proofs .",
    "the connectives @xmath2 and @xmath1 have a functional counter - part ( @xmath2 corresponds to a product and @xmath1 to a co - product , i.e. a _ case of _ ) and it is thus useful to have them as primitive .    in this paper , we study the typed @xmath5-calculus .",
    "this calculus , introduced by de groote in @xcite , is an extension of parigot s @xmath0-calculus .",
    "it is the computational counterpart of classical natural deduction with @xmath3 , @xmath2 and @xmath1 .",
    "three notions of conversions are necessary in order to have the sub - formula property : logical , classical and permutative conversions .",
    "the proofs of the strong normalization of the cut - elimination procedure for the full classical logic are quite recent and three kinds of proofs are given in the literature .    _",
    "proofs by cps - translation_. in @xcite de groote also gave a proof of the strong normalization of the typed @xmath5-calculus using a cps - translation into the simply typed @xmath6-calculus i.e. the implicative intuitionistic logic but his proof contains an error as matthes pointed out in @xcite .",
    "nakazawa and tatsuta corrected de groote s proof in @xcite by using the notion of augmentations .",
    "_ syntactical proofs_. we gave in @xcite a direct and syntactical proof of strong norma - lization .",
    "the proof is based on a substitution lemma which stipulates that replacing in a strongly normalizable deduction an hypothesis by another strongly normali - zable deduction gives a strongly normalizable deduction .",
    "the proof uses a technical lemma concerning commutative reductions .",
    "but , though the idea of the proof of this lemma ( as given in @xcite ) works , it is not complete and ( as pointed out by matthes in a private communication ) it also contains some errors .",
    "_ semantical proofs_. k. saber and the second author gave in @xcite a semantical proof of this result by using the notion of saturated sets .",
    "this proof is a generalization of parigot s strong normalization result of the @xmath7-calculus with the types of girard s system @xmath8 by using reducibility candidates .",
    "this proof uses the technical lemma of @xcite concerning commutative reductions . in @xcite and @xcite , r. matthes and tastuta",
    "give another semantical proofs by using a ( more complex ) concept of saturated sets .",
    "this paper presents a new proof of the strong normalization of the simply typed @xmath5-calculus .",
    "this proof is formalizable in peano first order arithmetic and does not need any complex lemma .",
    "it is obtained by giving a translation of this calculus into the @xmath0-calculus .",
    "the coding of @xmath2 and @xmath1 in classical logic is the usual one but , as far as we know , the fact that this coding behaves correctly with the computation , via the curry - howard correspondence , has never been analyzed .",
    "this proof is much simpler than the existing ones .",
    "our translation allows us to extend trivially mendler s result whereas the one of wojdyga , of course , does not . ] .",
    "it also presents a new result .",
    "mendler @xcite has shown that strong normalization is preserved if , on types , we allow some equations satisfying natural ( and necessary ) conditions .",
    "mendler s result concerned the implicative fragment of intuitionistic logic . by using the previous translation ,",
    "we extend here this result to full classical logic .",
    "the paper is organized as follows .",
    "section [ 2 ] gives the various systems for which we prove the strong normalization .",
    "section [ 6 ] gives the translation of the @xmath5-calculus into the @xmath0-calculus and section [ 7 ] extends mendler s theorem to the @xmath5-calculus .",
    "for a first reading , sections [ 3 ] , [ 4 ] and [ rab ] may be skipped .",
    "they have been added to have complete proofs of the other results .",
    "section [ 3 ] contains the proof , by the first author , of the the strong normalization of the simply typed @xmath6-calculus .",
    "section [ 4 ] gives a translation of the @xmath0-calculus into the @xmath6-calculus and section [ rab ] gives some well known properties of the @xmath0-calculus .",
    "finally , the appendix gives a detailed proof of a lemma that needs a long but easy case analysis .",
    "let @xmath9 and @xmath10 be disjoint sets of variables .    1 .",
    "the set of @xmath6-terms is defined by the following grammar + @xmath11 2 .",
    "the set of @xmath0-terms is defined by the following grammar + @xmath12 3 .",
    "the set of @xmath5-terms is defined by the following grammar + @xmath13 + @xmath14\\ ] ]    note that , for the @xmath0-calculus , we have adopted here the so - called de groote calculus which is the extension of parigot s calculus where the distinction between named and un - named terms is forgotten . in this calculus ,",
    "@xmath15 is not necessarily followed by @xmath16 $ ] .",
    "we also write @xmath17 instead of @xmath18 m$ ] .",
    "[ def_red ]    1 .",
    "the reduction rule for the @xmath6-calculus is the @xmath19-rule .",
    "+ @xmath20\\ ] ] 2 .",
    "the reduction rules for the @xmath0-calculus are the @xmath19-rule and the @xmath21-rule + @xmath22\\ ] ] 3 .",
    "the reduction rules for the @xmath5-calculus are those of the @xmath0-calculus together with the following rules + @xmath23 + @xmath24 ) \\tr n_i[x_i:=m]$ ] + @xmath25 \\ ; \\ep ) \\tr ( m \\ ; [ x_1.(n_1 \\ ; \\ep ) , x_2.(n_2 \\ ; \\ep)])$ ] + @xmath26 $ ]    let @xmath27 be a set of atomic constants .    1 .",
    "the set @xmath28 of types is defined by the following grammar + @xmath29 2 .",
    "the set @xmath30 of types is defined by the following grammar + @xmath31    as usual @xmath32 is an abbreviation for @xmath33 .    1 .",
    "a @xmath6-context is a set of declarations of the form @xmath34 where @xmath35 , @xmath36 and where a variable may occur at most once .",
    "a @xmath0-context is a set of declarations of the form @xmath34 or @xmath37 where @xmath38 , @xmath39 , @xmath40 and where a variable may occur at most once .",
    "a @xmath5-context is a set of declarations of the form @xmath34 or @xmath37 where @xmath38 , @xmath39 , @xmath41 and where a variable may occur at most once .    1 .",
    "the simply typed @xmath6-calculus ( denoted @xmath42 ) is defined by the following typing rules where @xmath43 is a @xmath6-context , + @xmath44 @xmath45 + @xmath46 2 .",
    "the simply typed @xmath0-calculus ( denoted @xmath47 ) is obtained by adding to the previous rules ( where @xmath43 now is a @xmath0-context ) the following rules .",
    "+ @xmath48 @xmath49 3 .",
    "the simply typed @xmath5-calculus ( denoted @xmath50 ) is defined by adding to the previous rules ( where @xmath43 now is a @xmath5-context ) the following rules .",
    "+ @xmath51 @xmath52 + @xmath53 + @xmath54 ) : c } \\",
    ", \\ou_e$ ] 4 .",
    "if @xmath55 is a congruence on @xmath28 ( resp .",
    "@xmath30 ) , we define the systems @xmath56 , ( resp .",
    "@xmath57 , @xmath58 ) as the system @xmath42 ( resp .",
    "@xmath47 , @xmath50 ) where we have added the following typing rule .",
    "+ @xmath59    * we will denote by @xmath60 the complexity of the term @xmath61 .",
    "* let @xmath62 be a finite ( possibly empty ) sequence of terms and @xmath61 be a term .",
    "we denote by @xmath63 the term @xmath64 where @xmath65 . * in the rest of the paper @xmath66 will represent the reduction determined by all the rules of the corresponding calculus . *",
    "if we want to consider only some of the rules we will mention them as a subscript of @xmath66 . for example , in the @xmath5-calculus , @xmath67 means that @xmath61 reduces to @xmath68 either by the @xmath19-rule or by the @xmath21-rule . * as usual , @xmath69 ( resp .",
    "@xmath70 ) denotes the symmetric and transitive closure of @xmath71 ( resp . the transitive closure of @xmath71 ) .",
    "we denote @xmath72 iff @xmath73 or @xmath74 . *",
    "a term @xmath61 is strongly normalizable for a reduction @xmath71 ( denoted as @xmath75 ) if there is no infinite sequence of reductions @xmath71 starting from @xmath61 . for @xmath75 ,",
    "we denote by @xmath76 the length of the longest reduction of @xmath61 . * if @xmath77 , we denote by @xmath78 the number of steps in the reduction @xmath77 .",
    "if @xmath79 , we denote by @xmath80 the number of @xmath71 steps of the reduction in @xmath79 .",
    "this section gives a simple proof ( due to the first author ) of the strong normalization of the simply typed @xmath6-calculus .",
    "[ a ] let @xmath82 . if @xmath83 and @xmath84 , then @xmath85\\;\\overrightarrow{o})\\not\\in sn_{\\b}$ ] for some @xmath86 such that @xmath87 .",
    "since @xmath88 , the infinite reduction of @xmath89 looks like : @xmath90\\ ; \\overrightarrow{o_{1}})\\tr_{\\b}^*\\ldots $ ] .",
    "the result immediately follows from the fact that @xmath85\\;\\overrightarrow{o } ) \\tr_{\\b}^*(m_{1}[x:=n_{1}]\\;\\overrightarrow{o_{1}})$ ] .",
    "[ b ] if @xmath91 are typed @xmath6-terms , then @xmath92 \\in sn_{\\b}$ ] .    by induction on @xmath93 where @xmath94 is the complexity of the type of @xmath68 .",
    "the cases @xmath95 and @xmath96 for @xmath97 are trivial .    * @xmath98 . by the induction hypothesis , @xmath99,q[x:=n]$ ] and",
    "@xmath100 $ ] are in @xmath101 . by lemma [ a ]",
    "it is enough to show that @xmath102[y:=q[x:=n]]\\ ; \\overrightarrow{o}[x:=n])=m^{\\prime } [ x:=n ] \\in sn_{\\b}$ ] where @xmath103\\;\\overrightarrow{o})$ ] . but",
    "@xmath104 and the result follows from the induction hypothesis .",
    "* @xmath105 . by the induction hypothesis , @xmath106 $ ] and @xmath107 $ ] are in @xmath101 . by lemma [ a ]",
    "it is enough to show that if @xmath108 then @xmath109\\ ; \\overrightarrow{o_{1 } } ) \\in sn_{\\b}$ ] . by the induction hypothesis ( since @xmath110 ) @xmath111 \\in sn_{\\b}$ ] and thus , by the induction hypothesis ( since @xmath112 $ ] and @xmath113 ) @xmath114 .",
    "[ sn_rd ] the simply typed @xmath6-calculus is strongly normalizing .    by induction on @xmath61 .",
    "the cases @xmath115 or @xmath116 are trivial . if @xmath117 $ ] this follows from lemma [ b ] and the induction hypothesis .",
    "we give here a translation of the simply typed @xmath0-calculus into the simply typed @xmath6-calculus .",
    "this translation is a simplified version of parigot s translation in @xcite .",
    "his translation uses both a translation of types ( by replacing each atomic formula @xmath118 by @xmath119 ) and a translation of terms .",
    "but it is known that , in the implicative fragment of propositional logic , it is enough to add @xmath120 in front of the rightmost variable .",
    "the translation we have chosen consists in decomposing the formulas ( by using the terms @xmath121 ) until the rightmost variable is found and then using the constants @xmath122 of type @xmath123 .",
    "with such a translation the type does not change .    since the translation of a term of the form @xmath124 uses the type of @xmath125 ,",
    "a formal presentation of this translation would need the use of @xmath6-calculus and @xmath0-calculus +  la church .",
    "for simplicity of notations we have kept a presentation  la curry , mentioning the types only when it is necessary .",
    "we extend the system @xmath42 by adding , for each propositional variable @xmath126 , a constant @xmath122 .",
    "when the constants that occur in a term @xmath61 are @xmath127 , the notation @xmath128 will mean @xmath129 .    for every @xmath130",
    ", we define a @xmath6-term @xmath121 as follows :    * @xmath131 * @xmath132 * @xmath133    [ tran ] for every @xmath130 , @xmath134 .    by induction on @xmath118 .    1 .",
    "we associate to each @xmath21-variable @xmath125 of type @xmath135 a @xmath6-variable @xmath136 of type @xmath32 .",
    "a typed @xmath0-term @xmath61 is translated into an @xmath6-term @xmath137 as follows : * @xmath138 * @xmath139 * @xmath140 * @xmath141 if the type of @xmath125 is @xmath32 * @xmath142    1 .",
    "@xmath143 = \\{m[x:=n]\\}^{\\diamond}$ ] .",
    "@xmath144   \\tr_{\\beta}^ * \\{m[(\\a \\ ; l ) : = ( \\a \\ ; ( l \\ ; n))]\\}^{\\diamond}$ ] .    by induction on @xmath61 .",
    "the first point is immediate .",
    "for the second , the only interesting case is @xmath145 .",
    "then , @xmath144 =( \\l v. ( x_{\\a } \\ ; ( v \\ ; n^{\\diamond } ) ) \\",
    "k^{\\diamond}[x_{\\a } : = \\l v. ( x_{\\a } \\ ; ( v \\ ; n^{\\diamond } ) ) ] ) $ ] @xmath146 \\ ; n^{\\diamond } ) \\tr_{\\b}^*(x_{\\a } \\;(\\{k[(\\a \\ ; l ) : = ( \\a \\ ; ( l \\ ; n))]\\}^{\\diamond } \\ ; n^{\\diamond})= \\{m[(\\a\\ ; l ) : = ( \\a \\ ; ( l \\ ; n))]\\}^{\\diamond}$ ] .    [ simulation1 ] let @xmath147 .    1 .   if @xmath148 , then @xmath149 .",
    "2 .   if @xmath150 , then @xmath149 .",
    "3 .   if @xmath151 , then @xmath152 and @xmath153 .    by induction on @xmath61 .",
    "( 1 ) is immediate .",
    "( 2 ) is as follows .",
    "@xmath154 $ ] is translated by + @xmath155 = ( t_b \\ ; \\l x_{\\a}.m^{\\diamond}[x_{\\a } : = \\l v. ( x_{\\a } \\ ; ( v \\ ; n^{\\diamond } ) ) ] \\ \\tr_{\\beta}^ * ( t_b \\ ; \\l x_{\\a}.\\{m[(\\a \\ ; l ) : = ( \\a \\ ; ( l \\ ; n))]\\}^{\\diamond } ) = \\{\\m \\a.m[(\\a \\ ; l ) : = ( \\a \\ ; ( l \\ ; n))]\\}^{\\diamond}$ ] .",
    "\\(3 ) follows immediately from ( 1 ) and ( 2 ) .",
    "[ sn1->sn2 ] let @xmath147 .",
    "if @xmath156 , then @xmath157 .",
    "let @xmath158 .",
    "if @xmath159 , there is @xmath68 such that @xmath151 and @xmath160 .",
    "thus , by lemma [ simulation1 ] , @xmath161 and @xmath162 .",
    "this contradicts the definition of @xmath163 .",
    "[ coding1 ] if @xmath164 , then @xmath165 where @xmath166 is obtained from @xmath43 by replacing @xmath37 by @xmath167 .    by induction on the typing @xmath164 .",
    "use lemma [ tran ] .",
    "[ sn_m ] the simply typed @xmath0-calculus is strongly normalizing for @xmath168 .    a consequence of lemmas [ sn1->sn2 ] , [ coding1 ] and theorem [ sn_rd ] .",
    "the translation given in the next section needs the addition , to the @xmath0-calculus , of the following reductions rules .",
    "@xmath169 $ ]    @xmath170 if @xmath171    we will need some classical results about these new rules . for the paper to remain self - contained",
    ", we also have added their proofs .",
    "the reader who already knows these results or is only interested by the results of the next section may skip this part .",
    "[ retardemant ] let @xmath147 be such that @xmath174",
    ". then @xmath175 .",
    "this follows from the fact that @xmath172 can be postponed ( theorem [ ch1:pprt ] below ) and that @xmath172 is strongly normalizing ( lemma [ snrth ] below ) .",
    "[ snrth ] the reduction @xmath172 is strongly normalizing .",
    "the reduction @xmath172 decreases the size .",
    "[ ch1:pprt ] let @xmath176 be such that @xmath177 and @xmath178 .",
    "then @xmath179 for some @xmath180 .",
    "this is proved in two steps .",
    "first we show that the @xmath181-reduction can be postponed w.r.t . to @xmath182 ( theorem [ ch1:ppt ] ) .",
    "then we show that the @xmath183-rule can be postponed w.r.t .",
    "the remaining rules ( theorem [ ch1:ppr ] ) .",
    "say that @xmath184 if @xmath185:=(\\a \\ ( l \\ n))]$ ] and @xmath125 occurs at most once in @xmath61    [ ch1:bth ]    1 .",
    "assume @xmath186 .",
    "then either @xmath187 for some @xmath188 or @xmath189 for some @xmath190 , @xmath188 .",
    "2 .   let @xmath191 .",
    "then either @xmath192 for some @xmath188 or @xmath193 for some @xmath190 , @xmath188 .",
    "3 .   let @xmath194 . then @xmath195 .    by induction on @xmath61 .",
    "[ ch1:pth ]    let @xmath196 .",
    "then , @xmath197 for some @xmath188 such that @xmath198 .    by induction on @xmath199 .",
    "[ ch1:ppt ] let @xmath200",
    ". then , @xmath201 for some @xmath188 .    by induction on @xmath199 .",
    "[ ch1:brh ]    1 .",
    "let @xmath202 .",
    "then @xmath203 for some @xmath188 .",
    "2 .   let @xmath61 , @xmath204 , @xmath68 be such that @xmath205 and @xmath206 .",
    "then either @xmath207:=(\\a \\",
    "( l \\ n))]\\tr_{\\rho}m'[(\\a \\ l]:=(\\a \\ ( l \\ n))]$ ] or @xmath208:=(\\a \\",
    "( l \\ n))]\\tr_{\\mu}p\\tr_{\\rho}m'[(\\a \\ l]:=(\\a \\ ( l \\ n))]$ ] for some @xmath180 .",
    "3 .   let @xmath209 .",
    "then @xmath210 for some @xmath188 .",
    "by induction on @xmath61 .",
    "[ ch1:ppr ] let @xmath211 .",
    "then @xmath212 for some @xmath188 .",
    "by induction on @xmath213 .",
    "the goal of this section is lemma [ diag * ] below .",
    "its proof necessitates some preliminary lemmas .",
    "[ diag ]    1 .   if @xmath214 and @xmath215 , then @xmath216 or @xmath217 and @xmath218 for some @xmath68 .",
    "2 .   if @xmath214 and @xmath219 , then @xmath220 and @xmath221 for some @xmath68 .    by simple case analysis .",
    "[ new ]    1 .   if @xmath222 and @xmath223 , then @xmath224 and @xmath221 for some @xmath68 .",
    "2 .   if @xmath222 and @xmath225 , then @xmath226 and @xmath221 for some @xmath68 .",
    "3 .   if @xmath222 and @xmath219 , then @xmath220 and @xmath221 for some @xmath68 .    1 .   by induction on @xmath227 . use ( 1 ) of lemma [ diag ] .",
    "2 .   by induction on @xmath228 . use ( 1 ) .",
    "3 .   by induction on @xmath227 . use ( 2 ) of lemma [ diag ] .",
    "[ diag * ] if @xmath222 and @xmath229 , then @xmath230 , @xmath221 for some @xmath68 and @xmath231 .    by induction on @xmath232 .",
    "if @xmath233 , then , by induction hypothesis , @xmath234 , @xmath235 and @xmath236 . by ( 3 ) of lemma [ new ] , @xmath237 and @xmath238 for some @xmath239 . and",
    "finally , by ( 2 ) of lemma [ new ] , @xmath240 and @xmath221 for some @xmath68 .",
    "thus @xmath241 , @xmath221 and @xmath231 .",
    "we code @xmath2 and @xmath1 by their usual equivalent ( using @xmath3 and @xmath242 ) in classical logic .",
    "we define the translation @xmath243 of a type @xmath244 by induction on @xmath118 as follows .",
    "* @xmath245 for @xmath246 * @xmath247 * @xmath248 * @xmath249    for every @xmath250 , @xmath251 is classically equivalent to @xmath118 .    by induction on @xmath118 .",
    "let @xmath252 a special @xmath21-variable .",
    "a term @xmath253 is translated into a @xmath0-term @xmath254 as follows :    * @xmath255 * @xmath256 * @xmath257 * @xmath258 * @xmath259 * @xmath260 * @xmath261 where @xmath262 is a fresh variable * @xmath263\\}^{\\circ}= \\m \\a .",
    "( \\vp \\ ; ( m^{\\circ }    \\ ; \\l x_1 .",
    "( \\a \\ ; n_1^{\\circ } ) \\ ; \\l x_2 .",
    "( \\a \\ ;    n_2^{\\circ})))$ ] where @xmath262 is a fresh variable * @xmath264    * remarks *    * the introduction of the free variable @xmath265 in the definition of @xmath263\\}^{\\circ}$ ] and @xmath266 is not necessary for lemma [ coding2 ] .",
    "the reason of this introduction is that , otherwise , to simulate the reductions of the @xmath5-calculus we would have to introduce new reductions rules for the @xmath0-calculus and thus to prove @xmath173 of this extension whereas , using @xmath265 , the simulation is done with the usual rules of the @xmath0-calculus .",
    "* there is another way of coding @xmath2 and @xmath1 by using intuitionistic second order logic . * * @xmath267 * * @xmath268 + the translation of @xmath269 and @xmath270 are the same but the translation of @xmath271 will be @xmath272 and the one of @xmath263\\}^{\\circ}$ ] would be @xmath273 .",
    "but it is easily checked that the permutative conversions are not correctly simulated by this translation whereas , in our translation , they are . *",
    "finally note that , as given in definition [ def_red ] , the reduction rules for the @xmath5-calculus do not include @xmath274 and @xmath181 .",
    "we could have added them and the given translation would have worked in a similar way .",
    "we decided not to do so ( although these rules were already considered by parigot ) because they , usually , are not included neither in the @xmath0-calculus nor in the @xmath5-calculus . moreover",
    "some of the lemma given below would need a bit more complex statement .",
    "1 .   @xmath275\\}^{\\circ } = m^{\\circ}[x:=n^{\\circ}]$ ] .",
    "@xmath276\\}^{\\circ } = m^{\\circ}[(\\a \\ ;    n^{\\circ}):= ( \\a \\ ; \\{(n \\ ; \\ep)\\}^{\\circ})]$ ] .    by induction on @xmath61 .",
    "[ coding2 ] if @xmath277 , then @xmath278 where @xmath279 is obtained from @xmath43 by replacing all the types by their translations and by declaring @xmath280 of type @xmath281 .    by induction on a derivation of @xmath277 .",
    "[ simulation2 ] let @xmath253 .",
    "if @xmath282 , then there is @xmath283 such that @xmath284 , @xmath285 and @xmath286 .    by case analysis .",
    "the details are given in the appendix , section [ app ] .",
    "[ simulation3 ] let @xmath253 .",
    "if @xmath79 , then there is @xmath287 such that @xmath284 , @xmath288 and @xmath289 .    by induction on @xmath290 . if @xmath291 , then , by induction hypothesis , there is @xmath292 such that @xmath293 , @xmath294 and @xmath295 . by lemma [ simulation2 ] ,",
    "there is a @xmath296 such that @xmath297 , @xmath298 and @xmath299 .",
    "then , by lemma [ diag * ] , there is a @xmath283 such that @xmath300 , @xmath301 and @xmath302 .",
    "thus @xmath284 , @xmath303 and @xmath289 .",
    "[ fin ] let @xmath253 be such that @xmath304 . then @xmath305 .",
    "since @xmath306 , let @xmath307 be the maximum of @xmath168 steps in the reductions of @xmath254 . if @xmath308 , by lemma [ snrth ] , let @xmath68 be such that @xmath79 and @xmath309 . by lemma [ simulation3 ] , there is @xmath180 such that @xmath284 and @xmath310 .",
    "contradiction .",
    "[ sn2 ] every typed @xmath5-term is strongly normalizable .    a consequence of theorems [ sn_m ] , [ retardemant ] and lemmas [ fin ] , [ coding2 ] .",
    "we study here systems where equations on types are allowed .",
    "these types are usually called recursive types . the subject reduction and the decidability of type assignment",
    "are preserved but the strong normalization may be lost .",
    "for example , with the equation @xmath311 , the term @xmath312 where @xmath313 is typable but is not strongly normalizing . with the equation @xmath314 , every term can be typed . by making some natural assumptions on the recursive equations",
    "the strong normalization can be preserved .",
    "the simplest condition is to accept the equation @xmath315 ( where @xmath316 is a type containing the variable @xmath126 ) only when the variable @xmath126 is positive in @xmath316 . for a set @xmath317 of mutually recursive equations ,",
    "mendler @xcite has given a very simple and natural condition that ensures the strong normalization of the system .",
    "he also showed that the given condition is necessary to have the strong normalization .",
    "mendler s result concerns the implicative fragment of intuitionistic logic .",
    "we extend here his result to full classical logic .",
    "we now assume @xmath27 contains a specified subset @xmath318 .",
    "[ positive ] let @xmath319 .",
    "we define the subsets @xmath320 and @xmath321 of @xmath28 ( resp .",
    "@xmath30 ) as follows .",
    "* @xmath322 * if @xmath323 , then @xmath324 . *",
    "if @xmath325 and @xmath326 , then @xmath327 and @xmath328 .",
    "* if @xmath329 , then @xmath330 .",
    "* if @xmath331 , then @xmath332 .",
    "* let @xmath333 be a set of types in @xmath334 ( resp . in @xmath335 ) .",
    "the congruence @xmath55 generated by @xmath8 in @xmath334 ( resp . in @xmath335 ) is the least congruence such that @xmath336 for each @xmath337 .",
    "* we say that @xmath55 is good if , for each @xmath319 , if @xmath338 , then @xmath339 .",
    "let @xmath55 be the congruence generated by a set @xmath8 of types of @xmath334 .",
    "[ mendler ] if @xmath55 is good , then the system @xmath56 is strongly normalizing .",
    "see @xcite for the original proof and @xcite for an arithmetical one .",
    "[ coding3 ] if @xmath341 , then @xmath342 .    by induction on the typing @xmath341 .",
    "[ mendler_mu ] if @xmath55 is good , then the system @xmath340 is strongly normalizing .",
    "let @xmath147 be a term typable in @xmath57 .",
    "by lemma [ sn1->sn2 ] , it is enough to show that @xmath156 .",
    "this follows immediately from theorem [ mendler ] and lemma [ coding3 ] .",
    "note that , in @xcite , we also had given a direct proof of this result .",
    "let @xmath333 be a set of types in @xmath30 and let @xmath344 be its translation in @xmath28 .",
    "let @xmath55 be the congruence generated by @xmath8 in @xmath30 and let @xmath345 be the congruence generated by @xmath346 in @xmath28 .",
    "[ good ]    1 .",
    "if @xmath55 is good , then so is @xmath345 .",
    "2 .   if @xmath347 , then @xmath348 .    1 .   just note that @xmath349 and @xmath350 are in positive position in @xmath351 and @xmath352 .",
    "2 .   by induction on the proof of @xmath347 .",
    "[ coding4 ] if @xmath353 , then @xmath354 .    by induction on a derivation of @xmath355 .",
    "[ mend_3 ] if @xmath55 is good , then the system @xmath356 is strongly normalizing .",
    "let @xmath253 be a term typable in @xmath356 , then , by lemma [ coding4 ] , @xmath254 is typable in @xmath357 . since , by lemma [ good ] , @xmath345 is good , then , by theorems [ mendler_mu ] and [ retardemant ] , @xmath304 , thus by lemma [ fin ] , @xmath305 .",
    "+    * remark *    note that , in definition [ positive ] , it was necessary to define , for @xmath126 to be positive in a conjunction and a disjunction , as being positive in both formulas since , otherwise , the previous theorem will not be true as the following examples shows .",
    "let @xmath358 be any types .",
    "note that , in particular , @xmath126 may occur in @xmath118 and @xmath359 and thus the negative occurrence of @xmath126 in @xmath360 is enough to get a non normalizing term .",
    "* let @xmath361 and @xmath55 be the congruence generated by @xmath362 .",
    ". then @xmath364 and @xmath365 since it reduces to itself .",
    "* let @xmath366 and @xmath55 be the congruence generated by @xmath367 .",
    "let @xmath368)$ ] . then @xmath369 and @xmath370 since it reduces to itself",
    ".    99    y. andou .",
    "_ church - rosser property of simple reduction for full first - order classical natural deduction .",
    "_ annals of pure and applied logic 119 , pp .",
    "225 - 237 , 2003 .",
    "p. battyanyi .",
    "_ normalization properties of symmetric logical calculi_. phd thesis .",
    "universit de chambry",
    ". 2007 .",
    "r. david and k. nour .",
    "_ a short proof of the strong normalization of the simply typed @xmath371-calculus . _",
    "schedae informaticae 12 , pp .",
    "27 - 33 , 2003 .",
    "r. david and k. nour .",
    "_ a short proof of the strong normalization of classical natural deduction with disjunction_. journal of symbolic logic , vol 68 , num 4 , pp",
    ". 1277 - 1288 , 2003 .",
    "r. david and k. nour .",
    "_ an arithmetical proof of the strong normalization for the lambda - calculus with recursive equations on types_. tlca 2007 , lncs 4583 , pp .",
    "84 - 101 , 2007 .",
    "f. joachimski and r. matthes .",
    "_ short proofs of normalization for the simply - typed lambda - calculus , permutative conversions and gdel s t_. archive for mathematical logic , 42(1 ) , pp .",
    "59 - 87 , 2003 .",
    "p. de groote .",
    "_ strong normalization of classical natural deduction with disjunction .",
    "_ tlca 2001 .",
    "lncs 2044 , pp .",
    "182 - 196 , 2001 .",
    "r. matthes .",
    "_ stabilization - an alternative to double - negation translation for classical natural deduction_. logic colloquium 2003 , lecture notes in logic , vol .",
    "167 - 199 , 2006 .",
    "r. matthes . _",
    "non - strictly positive fixed - points for classical natural deduction_. annals of pure and applied logic 133 ( 1 - 3 ) , pp .",
    "205 - 230 , 2005 .",
    "n. p. mendler .",
    "_ recursive types and type constraints in second - order lambda calculus_. lics , pp . 30 - 36 , 1987 .",
    "n. p. mendler .",
    "_ inductive types and type constraints in the second - order lambda calculus_. annals of pure and applied logic 51 ( 1 - 2 ) , pp . 159 - 172 , 1991 .",
    "k. nakazawa and m. tatsuta .",
    "_ strong normalization of classical natural deduction with disjunctions_. annals of pure and applied logic 153 ( 1 - 3 ) , pp .",
    "21 - 37 , 2008 .",
    "k. nour and k. saber .",
    "_ a semantical proof of strong normalization theorem for full propositional classical natural deduction .",
    "_ archive for mathematical logic , vol 45 , pp .",
    "357 - 364 , 2005 .",
    "m. parigot .",
    "_ @xmath371-calculus : an algorithm interpretation of classical natural deduction_. lecture notes in artificial intelligence , vol 624 , pp .",
    "190 - 201 .",
    "springer verlag , 1992 .",
    "m. parigot .",
    "_ proofs of strong normalization for second order classical natural deduction_. journal of symbolic logic , vol 62 ( 4 ) , pp .",
    "1461 - 1479 , 1997 .",
    "_ confluence en @xmath0-calcul_. phd thesis .",
    "universit de chambry .",
    "m. tatsuta .",
    "_ simple saturated sets for disjunction and second - order existential quantification_. tlca 2007 , lncs 4583 , pp .",
    "366 - 380 , 2007 .",
    "a. wojdyga .",
    "_ short proofs of strong normalization_. + http://arxiv.org/abs/0804.2535v1",
    "* lemma [ simulation2 ] * _ let @xmath253 .",
    "if @xmath282 , then there is @xmath283 such that @xmath284 , @xmath285 and @xmath286_.      * if @xmath372 $ ] , then + @xmath373 = \\{m[x:=n]\\}^{\\circ}$ ] . * if @xmath23 , then + @xmath374 + @xmath375 .",
    "* if @xmath24 ) \\tr n_i[x_i:=m]$ ] , then + @xmath376)\\}^{\\circ } = $ ] + @xmath377 + @xmath378 ) ) \\tr_{\\r}\\mu \\a .",
    "( \\a \\ ; n_i^{\\circ}[x_i:=m^{\\circ } ] ) \\tr_{\\th } n_i^{\\circ}[x_i:=m^{\\circ } ]   $ ] + @xmath379\\}^{\\circ}$ ] . * if @xmath25 \\ ;",
    "n ) \\tr ( m \\ ; [ x_1.(n_1 \\ ; n ) , x_2.(n_2 \\ ; n)])$ ] , then + @xmath380 \\ ; n)\\}^{\\circ } = $ ] + @xmath381 + @xmath382 + @xmath383 + @xmath384)\\}^{\\circ}$ ] .",
    "* if @xmath25 \\",
    "; \\pi_i ) \\tr ( m \\ ; [ x_1.(n_1 \\ ; \\pi_i ) , x_2.(n_2 \\ ; \\pi_i)])$ ] , then + @xmath380 \\ ; \\pi_i)\\}^{\\circ } = $ ] + @xmath385 + @xmath386 + @xmath387 + @xmath388 + @xmath389 . + and @xmath390)\\}^{\\circ}=$ ] + @xmath391 + @xmath392 . *",
    "if @xmath25 \\ ; [ y_1.l_1 , y_2.l_2 ] ) \\tr$ ] + @xmath393 ) , x_2.(n_2 \\ ; [ y_1.l_1 , y_2.l_2])])$ ] , then + @xmath380 \\ ; [ y_1.l_1 , y_2.l_2])\\}^{\\circ } = $ ] + @xmath394 + @xmath395 + @xmath396 + @xmath397 + @xmath398 . + and @xmath399 ) , x_2.(n_2 \\ ; [ y_1.l_1 ,      y_2.l_2])])\\}^{\\circ } = $ ] + @xmath400 + @xmath401 .",
    "* if @xmath402 $ ] , then + @xmath403 $ ] + @xmath404 = \\{\\m \\a .",
    "m[(\\a \\ ; l ) : = ( \\a \\ ; ( l \\ ; n))]\\}^{\\circ}$ ] .",
    "* if @xmath405 $ ] , then + @xmath406 + @xmath407 ) $ ] + @xmath408 = p$ ]",
    ". + and @xmath409\\}^{\\circ } = $ ] + @xmath410 \\tr_{\\r}^ * p$ ] . * if @xmath411 ) \\tr \\mu \\b .",
    "m[(\\b \\ ; n):=    ( \\b \\ ; ( n \\ ; [ x_1 .",
    "n_1 , x_2 .",
    "n_2]))]$ ] , then + @xmath412)\\}^{\\circ } = $ ] + @xmath413 + @xmath414 ) $ ] + @xmath415 = p$ ] . + and @xmath416))]\\}^{\\circ } = $ ] + @xmath417 \\tr_{\\r}^ * p$ ] ."
  ],
  "abstract_text": [
    "<S> we prove the strong normalization of full classical natural deduction ( i.e. with conjunction , disjunction and permutative conversions ) by using a translation into the simply typed @xmath0-calculus . </S>",
    "<S> we also extend mendler s result on recursive equations to this system .    * strong normalization results by translation * +    * ren david and karim nour * + lama - equipe limd + universit de chambry + 73376 le bourget du lac + e - mail : \\{david , nour}@univ - savoie.fr + </S>"
  ]
}
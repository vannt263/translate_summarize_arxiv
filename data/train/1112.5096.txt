{
  "article_text": [
    "according to the most general definition of a system ( see e.g. @xcite ) , by a discrete system ( further  a system ) we understand a stationary dynamical system with a discrete time @xmath6 ; that is , a 5-tuple @xmath7 where @xmath8 is a non - empty finite set , the _ input alphabet _ ; @xmath9 is a non - empty finite set , the _ output alphabet _ ; @xmath10 is a non - empty ( possibly , infinite ) set of _ states _ ; @xmath11 is a _ state transition function _ ; @xmath12 is an _",
    "output function_. note that in literature systems are also called ( synchronous ) automata ; however , in order to avoid misunderstanding , in the paper only _ initial _ automata are so referred .",
    "remind that the _ initial automaton _",
    "@xmath13 is a discrete system @xmath1 where one state @xmath14 is fixed ; @xmath15 is called the _",
    "initial state_. at the moment @xmath16 the system @xmath17 is at the state @xmath15 ; once feeded by the input symbol @xmath18 , the system outputs the symbol @xmath19 and reaches the state @xmath20 ; then the system is feeded by the next input symbol @xmath21 and repeats the routine .",
    "we stress that the definition of the automaton @xmath17 is nearly the same as the one of _ mealy automaton _ ( see e.g. @xcite ) ( or of a ` letter ' _ transducer _ , see e.g. @xcite ) , with the only important difference : the automata @xmath17 we consider in the paper are _ not necessarily finite _ ; that is , the set of states @xmath10 of @xmath17 may be infinite .",
    "furthermore , throughout the paper we assume that there exists a state @xmath22 such that all the states of the system @xmath1 are _ reachable _ from @xmath15 ; that is , given @xmath23 , there exists input word @xmath24 over alphabet @xmath25 such that after the word @xmath24 has been feeded to the automaton @xmath17 , the automaton reaches the state @xmath26 . to the system @xmath1 we put into a correspondence the family @xmath27 of all automata @xmath28 , @xmath23 . for better exposition , throughout the paper we assume that both alphabets @xmath25 and @xmath9 are @xmath29-element alphabets with @xmath29 prime : @xmath30 ; so further the word ` automaton ' stands for initial automaton with input / output alphabets @xmath31 .",
    "a typical example of an automaton of that sort is the _",
    "2-adic adding machine _",
    "@xmath32 , where @xmath33 , @xmath34 for @xmath35 , @xmath36 .",
    "automata often are represented by _",
    "moore diagrams_. moore diagram of the automaton @xmath37 is a directed labeled graph whose vertices are identified with the states of the automaton and for every @xmath23 and @xmath38 the diagram has an arrow from @xmath26 to @xmath39 labeled by the pair @xmath40 .",
    "figure [ fig : moore ] is an example of moore diagram .    _",
s1-o ( 8.6,4.3)s1-i ( 15.4,4.4)s0-o ( 14.8,4.5)s0-i ( 15.4,3.6)s00-o ( 14.8,3.5)s00-i ( 9,4).5 ( 15,4).5 ( 9.5,4)(14.5,4 ) [ 90](9,2.8)@xmath41 [ 90](15,2.8)@xmath42 [ 90](12,3.3)@xmath43 [ 90](17.5,.3)@xmath44 [ 90](17.5,5.3)@xmath45",
    "[ 90](5.2,2.6)@xmathgiven an automaton @xmath47 , the automaton transforms input words of length @xmath48 into output words of length @xmath48 ; that is , @xmath49 maps the set @xmath50 of all words of length @xmath48 into @xmath50 ; we denote corresponding mapping via @xmath51 .",
    "it is clear now that behaviour of the system @xmath52 can be described in terms of the mappings @xmath51 for all @xmath23 and all @xmath53 .",
    "as all states of the system @xmath1 are reachable from the state @xmath15 , it suffices to study only the mappings @xmath54 for all @xmath55 .",
    "now we remind the notion of transitivity :    [ def : trans ] a _",
    "family @xmath56 of mappings _ of a finite non - empty set @xmath57 into @xmath57 is called _ transitive _ whenever given a pair @xmath58 , there exists @xmath59 such that @xmath60 .",
    "it is clear that once @xmath57 contains more than one element , a family that consists of a single mapping @xmath61 can not be transitive in the meaning of definition [ def : trans ] ; that is why the transitivity of a single mapping is defined as follows :    [ def : trans-1 ] a _ mapping _",
    "@xmath61 , where @xmath57 is a finite non - empty set , is called _ transitive _ if it @xmath62 cyclically permutes elements of @xmath57 .    in other words ,",
    "a single mapping @xmath61 is transitive if and only if the family @xmath63 is transitive in the meaning of the definition [ def : trans ] ( here @xmath64 stands for identity mapping , @xmath65 for composition of mappings ) .",
    "note that a transitive mapping is necessarily bijective but generally not vice versa .",
    "now we introduce the main notions of the paper .",
    "[ def : auto - trans ] the automaton @xmath17 ( equivalently , the system @xmath1 ) is said to be    * _ @xmath48-word transitive _ , if the mapping @xmath54 is transitive on the set @xmath50 of all words of length @xmath48 ; * _ word transitive _ , if @xmath17 is @xmath48-word transitive for all @xmath53 ; * _ completely transitive _ , if for every @xmath55 ,",
    "the family @xmath66 , @xmath67 , is transitive on @xmath50 ; * _ absolutely transitive _ , if for every @xmath67 the automaton @xmath68 is completely transitive ; that is , if for every @xmath55 the family @xmath69 , @xmath70 , is transitive on @xmath50 , where @xmath71 is the set of all reachable states of the automaton @xmath72 .    the transitivity properties may be defined in equivalent way , in terms of words ; this way is more common in automata theory .",
    "we remand some notions related to words beforehand .    given a non - empty alphabet @xmath73 , its elements are called _ symbols _ , or",
    "_ letters_. by the definition , a _ word of length @xmath48 over alphabet @xmath73 _ is a finite string ( stretching from right to left ) @xmath74 , where @xmath75 .",
    "empty word _ is a sequence of length 0 , that is , the one that contains no symbols .",
    "hereinafter the length of the word @xmath24 is denoted via @xmath76 .",
    "given a word @xmath77 , any word @xmath78 , @xmath79 , is called a _ prefix _ ( or , an _ initial subword _ ) of the word @xmath24 , any word @xmath80 , @xmath81 is called a _ suffix _ of the word @xmath24 , and any word @xmath82 , @xmath83 , is called a _",
    "subword _ of the word @xmath24 . given words @xmath84 and @xmath85 , the _ concatenation _ @xmath86 is the following word ( of length @xmath87 ) : @xmath88    [ def : auto - trans - e ]     1 .",
    "the _ word transitivity _ means that given two finite words @xmath24 , @xmath89 whose lengths are equal one to another , @xmath90 , the word @xmath24 can be transformed into @xmath89 by a sequential composition of a sufficient number of copies of @xmath17 : + _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( 0,10)(24,12 ) ( 20,11)(18,11 ) ( 6,11)(4,11 ) ( 4,11.3)(4,10.7 )    ( 6,10)(10,12 ) ( 14,10)(18,12 )    [ 90](8,10.7)@xmath1 [ 90](16,10.7)@xmath1    [ 90](5,9)@xmath91 [ 90](19,9)@xmath92 [ 90](12,10.7)@xmath93 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 2 .",
    "the _ complete transitivity _ means that given finite words @xmath24 , @xmath89 such that @xmath94 , there exists a finite word @xmath95 ( may be of length other than that of @xmath24 and @xmath89 ) such that the automaton @xmath17 transforms the input word @xmath96 ( with the prefix @xmath95 ) to the output word @xmath97 that has a suffix @xmath89 : + _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( 0,10)(24,12 )    ( 20,11)(14,11 ) ( 10,11)(4,11 )    ( 6,11.3)(6,10.7 ) ( 4,11.3)(4,10.7 ) ( 16,11.3)(16,10.7 )    ( 10,10)(14,12 )    [ 90](12,10.7)@xmath1    [ 90](8,9)@xmath98 [ 90](5,9)@xmath91 [ 90](15,9)@xmath92 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 3 .",
    "the _ absolute transitivity _ means that given finite words @xmath99 , @xmath24 , @xmath89 such that @xmath94 ( may be @xmath100 ) , there exists a finite word @xmath95 such that the automaton @xmath17 transforms the input word @xmath101 to the output word @xmathxmath1 [ 90](9,9)@xmath103 [ 90](7,9)@xmath104 [ 90](5,9)@xmath91 [ 90](15,9)@xmath92 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    [ exm : odo ] the 2-adic adding machine @xmath105 , which was introduced above , is word transitive : it is clear that if one treats an @xmath48-bit word as a base-2 expansion of a non - negative integer @xmath24 then @xmath106 , @xmath107 ; therefore @xmath108 for all @xmath109 which means that @xmath62 is transitive on the set @xmath50 of all @xmath48-bit words , cf . definition [ def : auto - trans ] , definition [ def : trans-1 ] and definition [ def : auto - trans - e](i ) .",
    "note that the 2-adic adding machine @xmath105 is not completely transitive as given @xmath53 , the corresponding family consists of the following two mappings : @xmath110 and @xmath111 ; so none of the mappings maps the two - bit word 00 ( which is a base-2 expansion of 0 ) to the two - bit word 10 ( which is a base-2 expansion of 2 ) .",
    "[ exm : const ] let @xmath112 be an infinite binary sequence such that every binary pattern @xmath113 occurs in the sequence @xmath114 ( whence , occurs infinitely many times ) ; that is , given @xmath115 and @xmath116 , the following equalities @xmath117 hold simultaneously for some ( equivalently , for infinitely many ) @xmath109 .",
    "then the following automaton @xmath118 is absolutely transitive : @xmath119 , where @xmath120 , @xmath121 for @xmath122 , @xmath36 .",
    "indeed , given an @xmath48-bit word @xmath24 , we see that @xmath123 for every @xmath122 which by definition [ def : auto - trans - e](iii ) ( or , equivalently , by definition [ def : auto - trans ] ) implies absolute transitivity of the automaton @xmath124 due to the choice of the sequence @xmath114 .",
    "note also that the automaton @xmath124 is @xmath48-word transitive for no @xmath53 as @xmath125 is not bijective on @xmath50 , cf .",
    "definitions [ def : trans-1 ] and [ def : auto - trans ] .",
    "the goal of the paper is to present techniques to determine whether a system @xmath1 is word transitive , or completely transitive , or absolutely transitive . for this purpose ,",
    "we study how the automaton @xmath17 acts on _ infinite _ words over alphabet @xmath31 .",
    "the latter words are considered as @xmath29-adic integers , and the corresponding transformation turns out to be a continuous transformation on the space of @xmath29-adic integers @xmath126 .",
    "we remind main notions of @xmath29-adic analysis in the next section where we describe our approach , first formally and then less formally .",
    "we note that the @xmath29-adic approach ( and wider the non - archimedean one ) has already been successfully applied to automata theory .",
    "seemingly the paper @xcite is the first one where the @xmath29-adic techniques is applied to study automata functions ; the paper deals with linearity conditions of automata mappings . for application of the non - archimedean methods to automata and",
    "formal languages see expository paper @xcite and references therein ; for applications to automata and group theory see @xcite . in @xcite the 2-adic methods",
    "are used to study binary automata , in particular , to obtain the finiteness criterion for these automata . in monograph",
    "@xcite the @xmath29-adic ergodic theory is studied ( see numerous references therein ) aiming at applications to computer science and cryptography ( in particular , to automata theory , to pseudorandom number generation and to stream cipher design ) as well as to applications in other areas like quantum theory , cognitive sciences and genetics .    as for mathematical techniques used in the paper , these are somewhat complex : to study ergodic properties of families of automata functions related to a given discrete system , we combine @xmath29-adic methods , methods of real analysis and methods from automata theory .    the paper is organized as follows :    * in section [ sec : p - adic ] we remind basic notions of @xmath29-adic analysis and show that automata functions ( the transformations of infinite words performed by automata ) are continuous ( actually , 1-lipschitz ) functions w.r.t . the @xmath29-adic metric .",
    "in particular , we mention that basic computer instructions , both arithmetic ( like addition , subtraction and multiplication of integers ) and bitwise logical ( like bitwise conjunction , disjunction , negation and exclusive ` or ' ) , as well as some other ( like shifts towards higher order bits and masking ) are continuous w.r.t .",
    "2-adic metric . * in section [ sec : p - erg ] we remind basics of the @xmath29-adic ergodic theory in connection to automata functions . * section [ sec : p - real ] contains main results of the paper : by plotting an automaton function into real unit square we establish the automata 0 - 1 law and find sufficient conditions for a system to be completely transitive or absolutely transitive .",
    "* we conclude in section [ sec : concl ] .",
    "every ( left-)infinite word @xmath127 over the alphabet @xmath31 can be associated to the @xmath29-adic integer @xmath128 which is an element of the ring @xmath126 of @xmath29-adic integers ; the ring @xmath126 is a complete compact metric space w.r.t .",
    "@xmath29-adic metric ( we remind the notion below ) .",
    "the automaton @xmath17 maps infinite words to infinite words .",
    "denote the corresponding mapping via @xmath129 ; then @xmath62 is a function defined on @xmath126 and valuated in @xmath126 .",
    "the function @xmath130 is called the _",
    "automaton function _ of the automaton @xmath17 .",
    "for instance , the automaton function @xmath131 of the 2-adic adding machine @xmath105 is the _",
    "2-adic odometer _ , the transformation @xmath132 of the ring @xmath5 of 2-adic integers ; whereas the automaton function @xmath133 of the automaton @xmath124 from example [ exm : const ] is a constant function on @xmath5 : @xmath134 .    due to the fact that at every moment @xmath135 , the @xmath48-th output symbol may depend only on the input symbols @xmath136 that have been feeded to the automaton at the moments @xmath137 respectively , the _",
    "automaton function is a @xmath29-adic 1-lipschitz function _ ; that is , @xmath62 satisfies the @xmath29-adic lipschitz condition with the constant 1 w.r.t .",
    "@xmath29-adic metric and thus @xmath62 is a @xmath29-adic continuous function .",
    "vice versa , given a 1-lipschitz function @xmath138 , there exists an automaton @xmath17 such that @xmath129 , see further theorem [ thm : auto-1l ] . therefore to study the behavior of the system",
    "@xmath139 we may ( and will ) study corresponding automata functions rather than automata themselves ; and to study the behaviour of the latter functions we may apply techniques from @xmath29-adic analysis and @xmath29-adic dynamics , see @xcite .",
    "this is the key point of our approach .",
    "we remind that the space @xmath126 is the completion of the ring @xmath140 of ( rational ) integers w.r.t .",
    "the @xmath29-adic metric @xmath141 which is defined as follows : given @xmath142 , if @xmath143 then denote @xmath144 the largest power of @xmath29 that divides @xmath145 and put @xmath146 , put @xmath147 if @xmath148 .",
    "the @xmath29-adic metric violates the archimedean axiom and thus is called a non - archimedean metric ( or , an ultrametric ) .",
    "now we describe our approach less formally .",
    "multiplication and addition of infinite words over alphabet @xmath31 can be defined via school - textbook - like algorithms for multiplication / addition of integers represented by base-@xmath29 expansions .",
    "for instance , in case of 2-adic integers ( i.e. , when @xmath149 ) the following example shows that @xmath150 in @xmath5 ( as @xmath151 ) :    @xmath152    the next example shows that @xmath153 in @xmath5 ( as @xmath154 ) :    @xmath155    the set of all infinite words over the alphabet @xmath31 with so defined operations ( and distance ) constitutes the ring ( and the metric space ) @xmath126 .",
    "note that @xmath126 contains the ring of all ( rational ) integers @xmath156 as well as some other elements from the field @xmath157 of rational numbers ; so @xmath158 .",
    "for instance , in @xmath5 the sequences that contain only finite number of 1-s correspond to non - negative rational integers represented by their base-2 expansions ( e.g. , @xmath159 ) ; the sequences that contain only finite number of 0-s correspond to negative rational integers ( e.g. , @xmath160 ) ; the sequences that are ( eventually ) periodic correspond to rational numbers that can be represented by irreducible fractions with odd denominators ( e.g. , @xmath153 ) ; and non - periodic sequences correspond to no rational numbers .",
    "it is also worth noticing that when @xmath149 , the 2-adic integers representing negative rational integers may be regarded as _ 2 s complements _ of the latter ( cf .",
    "e.g. @xcite ) . in computer science ,",
    "2-adic representations of rational integers are also known as _ hensel codes _ , cf .",
    "@xcite , after the name of german mathematician kurt hensel who discovered @xmath29-adic numbers more than a century ago .    by the definition , given two infinite words @xmath127 and @xmath161 over the alphabet @xmath31 , the distance @xmath141 between these words is @xmath162 , where @xmath163 , and the distance is 0 if no such @xmath48 exists .",
    "for instance , in the case @xmath149 we have that @xmath164 in other words , @xmath165 .",
    "note that actually @xmath166 , the _ reduction modulo @xmath167 _ , is an epimorphism of @xmath126 onto the residue ring @xmath168 modulo @xmath167 ( we associate elements of the latter ring to @xmath169 ) : @xmath170 where @xmath171 .",
    "thus , for @xmath172 , the following equivalences hold : @xmath173 due to equivalence , one may use congruences between @xmath29-adic numbers rather than inequalities for @xmath29-adic absolute values which is sometimes more convenient during proofs .",
    "the advantage of using congruences rather than inequalities in @xmath29-adic analysis over @xmath126 is that one may work with congruences by applying standard number - theoretic techniques ; e.g. , add or multiply congruences sidewise , etc .",
    "more about this in @xcite .",
    "metrics on cartesian powers @xmath174 can be defined in a manner similar to that of the case @xmath175 : @xmath176 for every @xmath177 ; so @xmath29-adic continuous multi - variate functions defined on and valuated @xmath126 can be considered as well .",
    "once the metric is defined , one can speak of limits , of continuous functions , of derivatives .",
    "of convergent series , etc . ; that is , of @xmath29-adic calculus .",
    "we refer to the numerous books on @xmath29-adic analysis ( e.g. , @xcite ) for further details .",
    "an important example of continuous 2-adic functions are basic computer instructions , both arithmetic ( addition , multiplication , subtraction ) and bitwise logical ( @xmath178 , the bitwise conjunction ; @xmath179 , the bitwise disjunction ; @xmath180 , the bitwise exclusive ` or ' ; @xmath181 , the bitwise negation ) and some others ( shifts towards higher order bits , masking ) .",
    "all these instructions can be regarded as ( univariate or two - variate ) 1-lipschitz functions defined on and valuated in the space of 2-adic integers @xmath5 , @xcite .",
    "that is why the theory we develop finds numerous applications in computer science and cryptology : the straight - line programs ( and more complicated ones ) combined from the mentioned instructions can also be regarded as continuous 2-adic mappings ; so behaviour of these programs can be analysed by techniques of the non - archimedean dynamics , see e.g. @xcite .",
    "it is worth noticing here that similar approaches work effectively also in genetics , cognitive sciences , image processing , quantum theory , etc .",
    ", see comprehensive monograph @xcite and references therein .    concluding the section",
    ", we now give a formal proof that the class of all automata functions @xmath182 of automata of the form @xmath183 coincides with the class of all 1-lipschitz functions @xmath138 .",
    "the result is not new : it can be derived from a general result on asynchronous automata ( * ? ? ?",
    "* theorem 2.4 , proposition 3.7 ) ; in a special case @xmath149 the result was proved in @xcite .",
    "we use an opportunity to give a direct ` @xmath29-adic ' proof here as we consider only synchronous automata , and for arbitrary @xmath29 .",
    "[ thm : auto-1l ] the automaton function @xmath184 of the automaton @xmath183 is 1-lipschitz .",
    "conversely , for every 1-lipschitz function @xmath138 there exists an automaton @xmath183 such that @xmath129 .    given a @xmath29-adic integer @xmath185 , denote via @xmath186 , the @xmath187-th ` @xmath29-adic digit ' of @xmath188 ; that is , the @xmath187-th term coefficient in the @xmath29-adic representation of @xmath189 as @xmath190 for every @xmath191 , the @xmath187-th output symbol @xmath192 depends only on input symbols @xmath193 ; that is @xmath194 for all @xmath195 and for suitable mappings @xmath196 .",
    "that is , @xmath130 is of the form @xmath197 this means that the function @xmath198 is 1-lipschitz by ( * ? ? ?",
    "* proposition 3.35 ) as the mentioned proposition in application to the mappings we consider here can be re - stated as follows : a mapping @xmath199 is 1-lipschitz if and only if @xmath62 can be represented in the form for suitable mappings @xmath196 , @xmath195 .    conversely , let @xmath138 be a 1-lipschitz mapping ; then by ( * ? ? ?",
    "* proposition 3.35 ) @xmath62 can be represented in the form for suitable mappings @xmath196 , @xmath195 .",
    "we now construct an automaton @xmath183 such that @xmath200 .",
    "let @xmath201 be a set of all non - empty finite words over the alphabet @xmath31 .",
    "we consider these words as base-@xmath29 expansions of numbers from @xmath202 and enumerate all these words by integers @xmath203 in radix order in accordance with the natural order on @xmath31 , @xmath204 : @xmath205 so that @xmath206 .",
    "this way we establish a one - to - one correspondence between the words @xmath207 and integers @xmath208 : @xmath209 , @xmath210 ( @xmath211 , @xmath212 ) . note that @xmath213 , @xmath214 for all @xmath208 and all non - empty words from @xmath207 .",
    "define @xmath215 to be the empty word .",
    "now put @xmath216 , the set of all states of the automaton @xmath17 under construction , and take the initial state @xmath217 .",
    "the state transition function @xmath218 is defined as follows : @xmath219 where @xmath195 and @xmath220 .",
    "that is , @xmath221 is the number of the word @xmath222 which is a concatenation of the word @xmath223 ( the word whose number is @xmath187 ) , the prefix , with the single - letter word @xmath224 , the suffix .",
    "now consider a one - to - one mapping @xmath225 from the @xmath48-letter words onto @xmath226 and define the output function of the automaton @xmath227 as follows : @xmath228 where @xmath195 and @xmath220 .",
    "remind that we denote via @xmath76 the length of the word @xmath24 .",
    "the idea of the construction is illustrated by figure [ fig : constr ] which depicts moore diagram of the automaton @xmath227 for the case @xmathxmath42 [ 90](10,4.8)@xmath41 [ 90](10,.8)@xmath229 [ 90](16,6.7)@xmath230 [ 90](16,4.1)@xmath231 [ 90](16,1.35)@xmath232 [ 90](16,-1.25)@xmath233 [ 90](6.5,4.5)@xmath234 [ 90](6.5,.6)@xmath235 [ 90](13,6.8)@xmath236 [ 90](13,3.5)@xmath237 [ 90](13,1.7)@xmath238 [ 90](13,-1.6)@xmathnow , as both @xmath62 and @xmath182 are 1-lipschitz , thus continuous with respect to the @xmath29-adic metric , and as @xmath240 is dense in @xmath126 , to prove that @xmath129 is suffices to show that @xmath241 for all finite non - empty words @xmath207 , where @xmath242 stands for the integer whose base-@xmath29 expansion is @xmath24 . we prove that holds for all @xmath207 once @xmath243 by induction on @xmath48 .    if @xmath175 then @xmath244 ; so once @xmath24 is feeded to @xmath1 , the automaton reaches the state @xmath245 ( cf . ) and outputs @xmath246 ( cf . ) , see .",
    "thus , holds in this case .",
    "now assume that holds for all @xmath207 such that @xmath247 and prove that holds also when @xmath248 .",
    "represent @xmath249 , where @xmath220 and @xmath250 . by the induction hypothesis , after the word @xmath251 has been feeded to @xmath1 , the automaton reaches the state @xmath252 and outputs the word @xmath253 of length @xmath254 such that @xmath255 .",
    "next , being feeded by the letter @xmath224 , the automaton ( which is in the state @xmath252 now ) outputs the letter @xmath256 .",
    "this means that once feeded by @xmath24 , the automaton @xmath17 outputs the word @xmath257 .",
    "now note that @xmath258 by .    from the proof of theorem [ thm : auto-1l ] it is clear that the mapping @xmath259 is just a reduction modulo @xmath260 of the automaton function @xmath198",
    ": @xmath261 for all @xmath107 .    in automata theory ,",
    "_ word transducers _ ( or , _ asynchronous automata _ ) are also considered ; the latter are automata that allow ( possibly empty ) words as output for each transition .",
    "although the automata we consider are all synchronous ( i.e .. , letter transducers rather than word transducers ) , it is worth mentioning here that the automaton function of a word transducer whose input / output alphabets are @xmath31 can also be considered as a continuous ( however , not necessarily 1-lipschitz any longer ) mapping from @xmath126 to @xmath126 once the transducer is non - degenerate , see ( * ? ? ?",
    "* theorem 2.4 ) .",
    "further in the paper , given a 1-lipschitz function @xmath138 , via @xmath262 we denote an automaton @xmath263 whose automaton function is @xmath62 ; that is , @xmath264 .",
    "note that given @xmath62 , the automaton @xmath262 is _ not _ unique : there are numerous automata that have the same automaton function @xmath62 . nonetheless , this non - uniqueness will not cause misunderstanding since in the paper we are mostly interested with automata functions rather than with ` internal structure ' ( e.g. , with state sets , state transition and output functions , etc . ) of automata themselves .",
    "the ring @xmath126 can be endowed with a probability measure @xmath265 : elementary @xmath265-measurable sets are balls @xmath266 of radii @xmath267 , @xmath268 , centered at @xmath269 . in other words ,",
    "the ball @xmath270 is a set of all infinite words over alphabet @xmath271 that have common prefix of length @xmath224 .",
    "we put @xmath272 thus endowing @xmath126 with a probability measure @xmath265 ( which actually is a normalized haar measure ) .",
    "note that all 1-lipschitz mappings @xmath138 are @xmath265-measurable ( i.e. , @xmath273 is @xmath265-measurable once @xmath274 is @xmath265-measurable ) .",
    "a @xmath265-measurable mapping @xmath275 is called _ ergodic _ if the two following conditions hold simultaneously :    1 .",
    "@xmath62 _ preserves the measure _ @xmath265 ; i.e. , @xmath276 for each @xmath265-measurable subset @xmath277 , and 2 .",
    "@xmath62 has no proper invariant @xmath265-measurable subsets : @xmath278 implies either @xmath279 , or @xmath280 .    a family @xmath281 of @xmath265-measurable mappings @xmath282 ( which are not necessarily measure - preserving mappings ) is called _ ergodic _ if the mappings @xmath283 , @xmath284 , have no common @xmath265-measurable invariant subset other than sets of measure 0 or 1 ; that is , if there exists a @xmath265-measurable subset @xmath285 such that @xmath286 for all @xmath284 , then necessarily either @xmath279 , or @xmath280 .",
    "note that in the paper speaking of ergodicity of a _ single _ mapping we always mean the mapping is measure - preserving ; whereas in general ergodic theory the non - measure - preserving ergodic mappings ( the ones that satisfy only the second condition ( ii ) of the above two ) are sometimes also concerned",
    ". to illustrate the notion of ergodicity we use , consider a finite set @xmath57 endowed with a natural probability measure @xmath287 for all @xmath288 ( where @xmath289 stands for the number of elements in @xmath290 ) . the measure - preservation of the mapping @xmath61 is equivalent to the bijectivity of @xmath62 , whereas the ergodicity of @xmath62 ( when respective conditions ( i ) and ( ii ) hold simultaneously ) is equivalent to the transitivity of the mapping @xmath62 in the meaning of definition [ def : trans-1 ] ; and the ergodicity of the family @xmath56 of mappings @xmath291 , @xmath284 , is equivalent to the transitivity of the family @xmath56 in the meaning of definition [ def : trans ] .    as in the paper we deal with the only measure @xmath265 , so further speaking of measure - preservation ( as well as of measurability and of ergodicity ) we omit mentioning the respective measure . from the @xmath29-adic ergodic theory ( see @xcite ) the following theorem can be deduced :    [ thm : word - trans = erg ] a system @xmath292 is word transitive if and only if the automaton function @xmath198 on @xmath126 is ergodic .",
    "if the system @xmath1 is completely transitive , the family @xmath293 , @xmath23 , of automata functions is ergodic .    remind that under conventions from the beginning of the paper , @xmath15 is the state of the system @xmath1 such that all other states are reachable from @xmath15 .",
    "theorem [ thm : word - trans = erg ] implies a number of various methods to determine the word transitivity of automata : for instance , a _ binary _ automaton @xmath294 ( that is an automaton with a binary input and output ; i.e. , with @xmath149 ) whose automaton function @xmath295 is a polynomial with integer coefficients ( i.e. , @xmath296 where @xmath297 $ ] ) is word transitive if and only if it is 3-word transitive ; that is , the transitivity of @xmath298 on the set @xmath299 of all binary words of length 3 is equivalent to the transitivity of @xmath298 on the set @xmath50 of all binary words of length @xmath48 , for all @xmath107 .",
    "moreover , a binary automaton @xmath300 is word transitive if and only if its automaton function is of the form @xmath301 , where @xmath302 is an automaton function of some binary automaton @xmath303 . for other results of this sort and for the whole @xmath29-adic ergodic theory see @xcite .",
    "although complete transitivity of the system @xmath292 is also related to ergodicity ; however , to the ergodicity of the family of automata functions @xmath304 , @xmath23 , cf .",
    "definition [ def : auto - trans ] and theorem [ thm : word - trans = erg ] , rather than to the ergodicity of a single automaton function @xmath182 .",
    "this is why to determine complete / absolute transitivity rather than just word transitivity we need some more sophisticated techniques that are discussed further .",
    "remind that under conventions from the beginning of the paper , there exists a state @xmath15 of the system @xmath1 such that all other states are reachable from @xmath15 ; so although further results of the paper are stated mostly for automata , they hold for systems as well .    given an automaton @xmath17 , consider the corresponding automaton function @xmath305 .",
    "denote @xmath306 the set of all the following points @xmath307 of closed euclidean unit square @xmath308\\times[0;1]\\subset{\\mathbb r}^2 $ ] : @xmath309 where @xmath310 and @xmath166 is a reduction modulo @xmath167 , cf . .",
    "note that @xmath311 corresponds to the prefix of length @xmath312 of the infinite word @xmath310 , i.e. , to the input word of length @xmath312 of the automaton @xmath17 ; while @xmath313 corresponds to the respective output word of length @xmath312 .",
    "that is , given an input word @xmath314 and the corresponding output word @xmath315 , we consider in @xmath316 the set of all points @xmath317 for all pairs @xmath318 of input / output words of length @xmath312 .    _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( 0,8)(24,12 )    ( 20,11)(14,11 ) ( 10,11)(3.7,11 )    ( 3.7,11.3)(3.7,10.7 )    ( 10,10)(14,12 )    [ 90](12,10.7)@xmath1    [ 90](1.9,9.2)@xmath319 [ 90](22.6,9.2)@xmath320",
    "[ 90](11.9,8.7)@xmath321    [ 90](12,7.5)@xmath322 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the set @xmath306 may be considered as a sort of a plot of the automaton function @xmath62 on the real plane @xmath323 .",
    "the plot characterizes behaviour of the automaton ; namely , it can be observed that basically the behaviour is of two types only :    1 .   as @xmath324 ,",
    "the point set @xmath306 is getting more and more dense ( cf .",
    "[ fig : quad-16][fig : quad-23 ] , @xmath149 ) , or 2 .",
    "@xmath306 is getting less and less dense while @xmath324 , cf .",
    "[ fig : klsh - lac-16][fig : klsh - lac-22 ] ( @xmath149 ) .",
    "it is intuitively clear that , say , for pseudorandom number generation automata of type ( i ) are preferable ; so we need to explain / prove the phenomenon and to develop techniques in order to determine / construct automata of type ( i ) .",
    "denote @xmath325 the closure of the set @xmath326 in the topology of the real plane @xmath323 .",
    "as @xmath327 is closed , it is measurable with respect to the lebesgue measure on the real plane @xmath323 .",
    "let @xmath328 be the lebesgue measure of @xmath325 .",
    "it is clear that @xmath329 ; but it turns out that in fact only two extreme cases occur : @xmath330 or @xmath331 .",
    "this is the first of the main results of the paper :    [ thm : auto_0 - 1 ] for @xmath62 , the following alternative holds : either @xmath330 , or @xmath331 .",
    "we note that although theorem [ thm : auto_0 - 1 ] has been already announced , see ( * ? ? ?",
    "* proposition 11.15 ) , actually in @xcite only part of the statement is proved ( the one that concerns density of @xmath325 ) whereas the part that concerns the value of the lebesgue measure is not .",
    "remind that nowhere dense sets can nevertheless have positive lebesgue measures , cf .",
    "fat cantor sets ( e.g. the smith - volterra - cantor set ) , also known as _ @xmath332-cantor sets _ , see e.g. @xcite .",
    "nonetheless , theorem [ thm : auto_0 - 1 ] is true ; a complete proof follows .    let @xmath333 ; we are going to prove that then @xmath331 and @xmath334 .",
    "either of the two following cases is possible : 1 ) some point from @xmath325 have an open neighbourhood ( in the unit square @xmath316 ) that lies completely in @xmath325 , or , on the contrary , 2 ) no such point in @xmath325 exists ( thus , @xmath325 is nowhere dense in @xmath316 then ) .",
    "we consider the two cases separately and prove that within the first one necessarily @xmath331 while the second one is impossible ( that is , if @xmath325 is nowhere dense in @xmath316 then necessarily @xmath330 ) . given @xmath335 , @xmath336 , during the proof",
    "we denote via @xmath337 ( respectively , via @xmath338 $ ] ) the corresponding open interval ( respectively , closed segment ) of the real line @xmath339 ; while for @xmath340 we denote via @xmath341 the corresponding point on the real plane @xmath323 .",
    "* case 1 * : in this case , there exist @xmath342 , @xmath343 , @xmath344 such that the closed square @xmath345\\times [ u';v']\\subset\\mathbb i^2 $ ] lies completely in @xmath325 , and every point from the open real interval @xmath346 is a limit ( with respect to the standard archimedean metric in @xmath339 ) of some sequence of fractions @xmath347 , where @xmath348 , @xmath349 .",
    "thus , we can take @xmath55 and @xmath350 , where @xmath351 , @xmath352 , so that the square @xmath353\\times \\left[\\frac{f(w){\\mathbin{\\mathsf{mod}}}{p^n}}{p^{n}};\\frac{f(w){\\mathbin{\\mathsf{mod}}}{p^n}}{p^{n}}+\\frac{1}{p^{n}}\\right]\\ ] ] lies completely in @xmath325 , and every inner point @xmath354 of the square @xmath218 has an open neighborhood that lies completely in @xmath218 ] is a limit as @xmath356 ( with respect to the standard archimedean metric in @xmath323 ) of a sequence of inner points @xmath357 where @xmath358 , @xmath359 .    now , as @xmath62 is a 1-lipschitz mapping from @xmath126 to @xmath126 , for every @xmath360 we have that @xmath361 for a suitable @xmath362 ; thus , @xmath363 hence , @xmath364 for all @xmath365 as all @xmath366 are inner points of @xmath218 .",
    "therefore , every inner point @xmath367 , which can be represented as @xmath368 where @xmath369 and @xmath370 are real numbers , @xmath371 , @xmath372 , is a limit ( as @xmath373 of the point sequence @xmath374 from here it follows that every inner point @xmath375 is a limit point of the corresponding sequence of points @xmath376 as @xmath356 .",
    "this means that @xmath334 and thus @xmath331 .",
    "* case 2 * : no point from @xmath325 has an open neighbourhood that lies completely in @xmath325 ; i.e. , any open neighbourhood @xmath377 of any point from @xmath325 contains points from the subset @xmath378 , which is open in @xmath316 .",
    "hence , @xmath377 contains an open subset that lies completely in @xmath378 ( we assume that @xmath379 since otherwise @xmath331 and there is nothing to prove )",
    ". then there exists an open square @xmath380 where @xmath381 , that lies completely in @xmath378 .",
    "that is , @xmath382 contains no points of the form @xmath383 where @xmath310 and @xmath384 .    in other words",
    "this means that there exist words @xmath385 of length @xmath386 in the alphabet @xmath31 ( which are just base-@xmath29 representations of @xmath2 and @xmath3 , respectively ) such that , whenever the automaton @xmath387 is feeded by any input word @xmath388 with suffix @xmath389 , i.e. , @xmath390 where @xmath391 , the corresponding output word @xmath392 , @xmath393 , never has the suffix @xmath394 , i.e. , @xmath395 for all @xmath396 and all @xmath391 ( @xmath397 is the empty word if @xmath398 ) .",
    "it is clear now that given any numbers @xmath399 , @xmath400 , such that @xmath401 , @xmath402 , the corresponding open square @xmath403 lies completely outside of @xmath325 , i.e. , contains no points of the form @xmath404 , where @xmath310 and @xmath384 .",
    "indeed , otherwise some input word @xmath89 with the suffix @xmath405 results in the output word with the suffix @xmath406 ; but , this means that the corresponding initial subword ( whose suffix is @xmath2 ) of the word @xmath89 results in output word whose suffix is @xmath3 .",
    "the latter case contradicts our choice of @xmath0 .",
    "now take @xmath407 for @xmath408 and construct inductively a collection @xmath409 that consists of @xmath410 disjoint open squares @xmath403 . the collection",
    "@xmath411 consists of the only square @xmath382 .    given the collection @xmath412 , the collection @xmath413 consists of all open squares @xmath414 , where @xmath415 , @xmath401 , @xmath402 , that are disjoint from all squares from the collections @xmath416 .    that is , at the first step we obtain a collection @xmath411 that consists of the only @xmath417 square @xmath418",
    "; on the second step we obtain a collection @xmath419 that consists of @xmath420 disjoint @xmath421-squares ; on the third step we obtain a collection @xmath422 that consists of @xmath423 disjoint @xmath424-squares , etc .",
    "the union @xmath425 of all these open squares from @xmath426 is open , whence , measurable , and the lebesgue measure of @xmath425 is @xmath427 since all these open squares are disjoint by the construction . on the other hand , by the construction @xmath425 contains no points of the form @xmath404 , where @xmath310 and @xmath384 .",
    "consequently , @xmath428 ; in turn , this implies that the lebesgue measure of @xmath325 must be 0 , i.e , that @xmath330 .",
    "the latter contradicts the assumption from the beginning of the proof .",
    "this proves the theorem .      from theorem [ thm : auto_0 - 1 ]",
    "we immediately derive the second main result of the paper :    [ thm : comp - trans ] a system @xmath1 is completely transitive if and",
    "only if @xmath429 .    follows from theorem [ thm : auto_0 - 1 ] , cf .",
    "equivalent definition of complete transitivity in terms of words .",
    "nowhere in the proofs of theorem [ thm : auto_0 - 1 ] and of theorem [ thm : comp - trans ] we used that @xmath29 is a prime ; so both theorems are true without this limitation .    a finite system ( i.e.",
    ", the one whose set of states is finite ) can be word transitive ; the odometer @xmath430 on @xmath5 serves as an example . on the other hand , by (",
    "* theorem 11.10 ) , given a finite system @xmath1 , the set @xmath431 is nowhere dense ; so from theorems [ thm : auto_0 - 1 ] and [ thm : comp - trans ] it follows that a finite system can not be completely transitive .",
    "thus , @xmath432 if @xmath17 is a finite automaton .    to construct automata @xmath1 of measure 1 ( i.e. , such that @xmath433 ) the following theorem ( which is the third main result of the paper ) may be applied :    [ thm : comp - trans - der ] let @xmath434 be the automaton function of an automaton @xmath1 , and let @xmath62 be differentiable everywhere in a ball @xmath435 of a non - zero radius .",
    "the function @xmath62 is of measure 1 whenever the following two conditions hold simultaneously :    1 .",
    "@xmath436 ; 2 .",
    "@xmath62 is two times differentiable at some point @xmath437 , and @xmath438 .",
    "we will show that for every sufficiently large @xmath312 and every @xmath439 there exists @xmath440 and @xmath441 such that @xmath442 this will prove the theorem as every point from the unit square @xmath316 can be approximated by points of the form @xmath443 .",
    "briefly , our idea of the proof is as follows : as @xmath444 , there exists @xmath445 such that all terms @xmath446 in the @xmath29-adic expansion @xmath447 are zero , for all @xmath448 .",
    "we then somehow tweak @xmath251 : namely , we replace zeros in the @xmath29-adic expansion at positions starting with @xmath449-th , @xmath450 , by certain other letters from @xmath451 so that the tweaked @xmath251 , the natural number @xmath452 , satisfies inequalities for some @xmath57 .    as @xmath62 is differentiable everywhere in @xmath453 ,",
    "for @xmath454 we have that given arbitrary @xmath455 , the following congruence holds for all @xmath456 and all sufficiently large @xmath457 : @xmath458 indeed , given @xmath172 , the condition @xmath459 is equivalent to the condition @xmath460 , where @xmath461 is a reduction modulo @xmath462 , cf .",
    "; so is just re - statement of a condition of differentiability of a function at a point , in terms of congruences rather than in terms of inequalities for @xmath29-adic absolute values : we just write @xmath463 instead of @xmath459 .    let @xmath464 ; that is , @xmath465 , where @xmath466 and @xmath467 is a unity of @xmath126 ( in other words , @xmath467 has a multiplicative inverse in @xmath126 )",
    ". note that @xmath26 is not necessarily non - negative since @xmath468 is in @xmath469 , and not necessarily in @xmath126 ; nonetheless further in the proof we assume that @xmath470 as we may take @xmath312 large enough .",
    "remind that @xmath471 as @xmath62 is 1-lipschitz ; so @xmath472 .",
    "now let @xmath473 be an arbitrary number such that @xmath474 , @xmath475 , and @xmath267 is less than the radius of the ball @xmath453 ( it is clear that there are infinitely many choices of @xmath224 ) . given @xmath224 , consider @xmath55 such that @xmath476 and @xmath477 ( we remind that in view of condition 2 of the theorem , all @xmath478 are in @xmath240 due to our choice of @xmath48 ) . put @xmath479 where @xmath480 is such that @xmath481 .",
    "in other words , we choose @xmath482 in such a way that the number whose base-@xmath29 expansion stands in positions from @xmath483-th to @xmath484-th in the canonical @xmath29-adic expansion of @xmath485 , is equal to @xmath188 .",
    "obviously , given @xmath486 and @xmath188 , there exists a unique @xmath482 that satisfies this condition : @xmath487 ; so @xmath488    as @xmath62 is two times differentiable at @xmath251 , for every @xmath489 we conclude that @xmath490 for all sufficiently large @xmath224 ( formally , we just substitute @xmath491 for @xmath62 , @xmath251 for @xmath99 , @xmath492 for @xmath493 , @xmath494 for @xmath495 , and @xmath496 for @xmath497 in ) .",
    "from here we deduce that as @xmath62 is differentiable in @xmath453 , the following congruence holds for all sufficiently large @xmath48 : @xmath498 note that the latter congruence is obtained by combination of congruence where @xmath499 , @xmath500 , @xmath501 and @xmath502 , with congruence .",
    "we claim that there exists @xmath489 such that @xmath503 indeed , in view of  this congruence is equivalent to the congruence @xmath504 , and the latter congruence is equivalent to the congruence @xmath505 as @xmath506 .",
    "that is , congruence is equivalent to the congruence @xmath507 .",
    "further , as @xmath508 , the latter congruence is equivalent to the congruence @xmath509 . from here",
    "we find @xmath510 , thus proving our claim ( we remind that @xmath467 is a unity of @xmath126 ; hence , @xmath467 has a multiplicative inverse @xmath511 modulo @xmath167 ) .",
    "now we put @xmath512 and @xmath513 ; then @xmath514 so @xmath515 , since @xmath516 , @xmath517 , and @xmath518 .",
    "also , combining , , , and , we see that @xmath519 since @xmath520 ( the number in the right - hand side is less than @xmath521 due to our choice of @xmath48 ) . now",
    "from it follows that @xmath522 since @xmath523 due to our choice of @xmath48 .",
    "[ note : minus ] we note that @xmath524 for every 1-lipschitz function @xmath199 of variable @xmath99 ; so we may replace condition 1 of theorem [ thm : comp - trans - der ] by either of conditions @xmath525 , @xmath526 , or @xmath527 , where @xmath528 .    indeed , for every @xmath529 and every @xmath55 we have that @xmath530 .",
    "thus , a symmetry with respect to the axis @xmath531 of the unit square @xmath532 maps the subset @xmath533 onto the subset @xmath534 and vice versa ; so @xmath535 .",
    "a similar argument proves that @xmath536 .    by using theorem [ thm : comp - trans - der ]",
    ", one may construct numerous automata ( and systems ) that are completely transitive .",
    "for instance , given @xmath537 , listed below are examples of automata functions @xmath200 that satisfy theorem [ thm : comp - trans - der ] ; so the corresponding automata @xmath17 are completely transitive :    * @xmath538 if @xmath539 , @xmath540 ; * @xmath541 if @xmath149 .",
    "note that the first of these automata is word transitive while the second one is not .    with the use of theorem [ thm : comp - trans - der ] new types of absolutely transitive automata can be constructed as well .",
    "the following corollary from theorem [ thm : comp - trans - der ] is a key tool in the construction of these :    [ cor : abs - t - diff ] let an automaton function @xmath129 map @xmath240 into @xmath240 , let @xmath62 be two times differentiable on @xmath126 , and let @xmath542 have no more than a finite number of zeros in @xmath240 . then the automaton @xmath17 is absolutely transitive .    given a finite non - empty word @xmath543 ( say , of length @xmath544 ) over the alphabet @xmath31 , take a finite word @xmath545 whose prefix is @xmath543 and such that the corresponding non - negative rational integer @xmath251  -expansion is @xmath545 ; remind that according to our conventions words are read from right to left , that is the rightmost letters of @xmath545 correspond to low order digits in the base-@xmath29 expansion of @xmath251 . ]",
    "is a non - zero of @xmath546 : @xmath438 .",
    "the word @xmath545 that satisfies these conditions simultaneously exists as @xmath546 has not more than a finite number of zeros in @xmath240 ( fixing arbitrary @xmath543 means that only some less significant digits in the base-@xmath29 expansion of @xmath251 are fixed ) ; so by taking @xmath251 whose base-@xmath29 expansion is sufficiently long ( thus making @xmath251 large enough ) , we find @xmath444 such that @xmath547 and the @xmath386-letter prefix of the word @xmath545 is @xmath543 .    in other words ,",
    "given an arbitrary finite word @xmath543 over the alphabet @xmath31 , by properly choosing @xmath548 we find a positive rational integer @xmath549 ( where @xmath550 , @xmath543 is a base-@xmath29 expansion of @xmath551 ) such that @xmath438 .",
    "this is possible due to the finiteness of a number of zeros of @xmath546 in @xmath240 .",
    "we see that both @xmath62 and the so constructed @xmath251 satisfy conditions of theorem [ thm : comp - trans - der ] : just assume that the ball @xmath453 from the conditions of the mentioned theorem is the whole space @xmath126 .",
    "now note that the claim stated at the very beginning of the proof of theorem [ thm : comp - trans - der ] is just a re - statement of ( ii ) from definition [ def : auto - trans - e ] : indeed , under notation of definition [ def : auto - trans - e ] and the one from the beginning of the proof of theorem [ thm : comp - trans - der ] , the concatenation @xmath552 corresponds to @xmath2 , @xmath24 corresponds to @xmath397 , @xmath89 corresponds to @xmath188 , and @xmath24 is a @xmath312-letter suffix of the output word which is a base-@xmath29 expansion for @xmath553 , whereas @xmath57 is the length of the word @xmath96 . up to these correspondences , condition is equivalent to ( ii ) from definition [ def : auto - trans - e ] .",
    "furthermore , as the word @xmath545 has an arbitrarily chosen prefix @xmath543 , and as the condition holds for @xmath452 from the proof of theorem [ thm : comp - trans - der ] ( as the whole theorem [ thm : comp - trans - der ] holds for @xmath62 and @xmath251 ) , ( ii ) from definition [ def : auto - trans - e ] holds for input word with arbitrarily chosen prefix @xmath543 , up to all mentioned correspondences .",
    "this means that ( iii ) from definition [ def : auto - trans - e ] also holds for @xmath554 in the case under consideration .",
    "the latter finally proves corollary [ cor : abs - t - diff ] .",
    "we remark that note [ note : minus ] can be applied to corollary [ cor : abs - t - diff ] as well .",
    "note also that the only type of absolutely transitive automata @xmath17 were known earlier : the ones whose automata functions are polynomials over @xmath156 of degree greater than 1 , see ( * ? ? ? * theorem 11.11 ) .",
    "the latter assertion follows from corollary [ cor : abs - t - diff ] .",
    "yet many other types automata can be proved to be absolutely transitive as well by using the corollary .",
    "for instance , an automaton whose both input and output alphabets are @xmath555 and whose automata function is @xmath556 , where @xmath557 , is absolutely transitive : this easily follows from corollary [ cor : abs - t - diff ] as @xmath558 and @xmath559 for all @xmath560 .",
    "in the paper , by combining tools from @xmath29-adic and real analysis and automata theory we have shown that discrete systems ( automata ) with respect to the transitivity of their actions on finite words constitute two classes , the systems whose real plots have lebesgue measures 1 ( equivalently , the completely transitive systems ; i.e. such that given two arbitrary words @xmath24 , @xmath89 of equal lengths , the system transforms @xmath24 into @xmath89 ) and systems whose real plots have lebesgue measures 0 . also we have found conditions for complete transitivity of a system ; the conditions yield a method to construct numerous completely transitive automata and respective automata functions , especially the ones that are combined from standard computer instructions and thus are easily programmable .",
    "the ergodic completely transitive automata are preferable in constructions of various pseudo - random number generators aimed at cryptographic and/or simulation usage ; e.g. , in stream ciphers and quasi monte - carlo methods .          v.  anashin .",
    "non - archimedean theory of t - functions . in _ proc .",
    "advanced study institute boolean functions in cryptology and information security _ , volume  18 of _ nato sci .",
    "peace secur . ser .",
    "_ , pages 3357 , amsterdam , 2008 .",
    "ios press .",
    "j.  vuillemin .",
    "finite digital synchronous circuits are characterized by 2-algebraic truth tables . in _ advances in computing science - asian 2000",
    "_ , volume 1961 of _ lecture notes in computer science _ , pages 17 , 2000 ."
  ],
  "abstract_text": [
    "<S> in the paper , we study behaviour of discrete dynamical systems ( automata ) w.r.t . </S>",
    "<S> transitivity ; that is , speaking loosely , we consider how diverse may be behaviour of the system w.r.t . </S>",
    "<S> variety of word transformations performed by the system : we call a system completely transitive if , given arbitrary pair @xmath0 of finite words that have equal lengths , the system @xmath1 , while evolution during ( discrete ) time , at a certain moment transforms @xmath2 into @xmath3 . to every system @xmath1 , we put into a correspondence a family @xmath4 of continuous mappings of a suitable non - archimedean metric space and show that the system is completely transitive if and only if the family @xmath4 is ergodic w.r.t . the haar measure ; then we find easy - to - verify conditions the system must satisfy to be completely transitive . </S>",
    "<S> the theory can be applied to analyse behaviour of straight - line computer programs ( in particular , pseudo - random number generators that are used in cryptography and simulations ) since basic cpu instructions ( both numerical and logical ) can be considered as continuous mappings of a ( non - archimedean ) metric space @xmath5 of 2-adic integers . </S>"
  ]
}
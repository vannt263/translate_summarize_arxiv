{
  "article_text": [
    "here , we describe the iterative procedure aiming at constructing the set of stochastic matrices @xmath93 .",
    "let us define two matrices @xmath94 and @xmath95 whose entries are initially set to zero . at the @xmath20th iteration ,",
    "the @xmath20th row of @xmath94 and the @xmath20th column of @xmath95 are filled by setting @xmath96 and @xmath97 , where the pivot entry @xmath98 is the negative of the escape probability from state @xmath20 and @xmath30 is the probability of a round - trip from the same state .",
    "given stochastic matrix @xmath39 , the probability of an indirect transition from @xmath4 to @xmath23 via @xmath20 is @xmath99^{f}p_{n\\gamma}^{(n-1)}=\\mathcal{l}_{\\beta n}u_{n\\gamma},\\ ] ] where the sum accounts for the probabilities of all possible round - trips from @xmath20 .",
    "since @xmath100 for @xmath101 , matrix @xmath94 remains upper triangular after the @xmath20th row addition and the equality @xmath102 remains satisfied for @xmath21 .",
    "the @xmath20th iteration is completed by constructing @xmath31 as follows : @xmath103 where @xmath104 for @xmath21 , as required .",
    "this property holds by induction on @xmath20 up to @xmath105 . after adding @xmath106 in  , the probabilities of transitions from @xmath4 to @xmath2 ( @xmath23 )",
    "subsume the cancelled probability of all possible transitions from @xmath4 to @xmath20 .",
    "this ensures that the transformed matrices @xmath31 remain stochastic .",
    "the present path factorization   is connected to gauss - jordan elimination method .",
    "summing @xmath107 from @xmath108 to @xmath109 when @xmath110 or from @xmath111 to @xmath112 when @xmath113 yields the relation @xmath114 let @xmath115 be the lower triangular matrix defined by @xmath116 for @xmath117 and @xmath118 otherwise .",
    "let also denote the upper triangular matrix @xmath119 by @xmath120 . then substituting @xmath121 for @xmath122 and identifying yields the equivalent relation ( @xmath123 ) @xmath124 choosing @xmath125 in eq",
    ".   entails @xmath126 and @xmath127 , while setting @xmath128 yields @xmath129 .",
    "factorizations of @xmath130 and @xmath131 result from transformations above and below the eliminated pivot , respectively .",
    "this corresponds to the gauss - jordan pivot elimination method .",
    "the conditional probabilities used in the randomization procedure write @xmath132 by resorting to   and   and by using the stored entries of @xmath94 and @xmath133 , the information necessary for evaluating the conditional probabilities used in the iterative reverse randomization ( see sec .",
    "[ algorithm ] below ) can be easily retrieved .     from @xmath36 with @xmath134 : dashed and solid arrows point to eliminated and non - eliminated states , respectively .",
    "arrow labels indicate typical numbers of transitions .",
    "a transition out of an eliminated state means that an exiting path starts from this state : here , two paths start from @xmath4 and three from @xmath20.,scaledwidth=80.0% ]",
    "to show how the space - time randomization procedure is implemented in practice , the following preliminary definitions are required .",
    "the binomial law of trial number @xmath135 and success probability @xmath136 is denoted by @xmath137 .",
    "the probability of @xmath138 successes is @xmath139 .",
    "the negative binomial law of success number @xmath140 and success ( escape ) probability @xmath141 is denoted by @xmath142 .",
    "the probability of @xmath143 failures before the @xmath140-th success is @xmath144 where @xmath145 is the failure or flicker probability ( flickers will correspond to round - trips from a given state ) .",
    "the gamma law of shape parameter @xmath140 and time - scale @xmath10 is denoted by @xmath146 .",
    "@xmath147 denotes the categorical laws whose probability vector is the @xmath34-th line of @xmath33 if @xmath148 or of the stochastic matrix obtained from @xmath15 by eliminating the single state @xmath149 .",
    "the symbol @xmath150 means `` is a random variate distributed according to the law that follows '' .",
    "let @xmath151 and @xmath152 denote the set of absorbing states and the set of noneliminated transient states , respectively . the absorbing boundary @xmath153 constains the state of @xmath151 that can be reached directly from @xmath154 .",
    "let @xmath155 be a vector and @xmath34 denote the current state of the system .",
    "the cyclic structure of the algorithm , referred to as kinetic path sampling ( kps ) , is    a.   compute @xmath33 by iterating   on @xmath20 from @xmath45 to @xmath17 , and label the states connected to @xmath35 in ascending order from @xmath156 to @xmath157 through appropriate permutations ; define @xmath151 and @xmath158 ; set the entries of @xmath47 and @xmath155 to zero ; b.   [ item : run ] draw @xmath159 ; increment @xmath160 or @xmath161 by one depending on whether @xmath162 or @xmath163 ; move current state @xmath34 to @xmath2 ; if new @xmath164 goto ( [ item : randomize ] ) otherwise repeat ( [ item : run ] ) ; c.   [ item : randomize ] iterate in reverse order from @xmath105 to 1 : a.   for @xmath165 and @xmath166 draw @xmath167 b.   for @xmath165 count the new hops from @xmath4 to @xmath20 @xmath168 c.   for @xmath166 count the hops from @xmath20 to @xmath2 @xmath169 d.   compute @xmath170 , the number of hops from @xmath20 , and draw the flicker number @xmath171 e.   store @xmath172 , the number of transitions from @xmath20 , and deallocate @xmath36 , @xmath31 and @xmath44 ; d.   for @xmath173 , store @xmath174 where @xmath175 ; e.   evaluate @xmath176 , the total number of flickers and hops associated with the path generated in  ; increment the physical time @xmath5 by @xmath177 .",
    "[ item : gamma ]    after this cycle , the system has moved to the absorbing state @xmath34 reached in  . the gamma law @xmath178 in   simulates the time elapsed after performing @xmath179 consecutive poisson processes of rate @xmath180 . indeed , after any hop or flicker performed with @xmath15 , the physical time must be incremented by a residence time drawn in the exponential distribution of decaying rate @xmath180 . the way @xmath35 and @xmath151",
    "are constructed at each cycle is specific to the application .    in simulations of anomalous diffusion on a disordered substrate ,",
    "@xmath181 implying @xmath182 .",
    "any transition from @xmath35 reaches @xmath153 . in constrast ,",
    "when @xmath158 is not empty , the generated path may return to set @xmath35 several times prior to reaching @xmath153 . with this more general set - up ,",
    "several transitions exiting @xmath35 are typically recorded in the hopping matrix , as illustrated in fig .",
    "[ fig : diagram ] .",
    "this amounts to storing the path factorization and using it as many times as necessary . as a result , the elapsed physical time is generated for several escaping trajectories simultaneously .",
    "let @xmath183 denote the subset of states @xmath184 whose distances to @xmath4 along ( 1,0 ) and ( 0,1 ) directions are shorter than 48@xmath185 , @xmath185 being the lattice parameter .",
    "then , the energy landscape is constructed using @xmath186 where @xmath187 and @xmath188 are independent random variables taking values -1 or 1 with equal probabilities .",
    "in fe - cu , a kps cycle starts by factoring the evolution operator when the vacancy binds to a cu atom and forms a new @xmath189cu cluster shape .",
    "set @xmath35 contains the configurations corresponding to the initial vacancy position and to the possible vacancy positions inside the neighboring cu cluster ( wherein the vacancy can exchange without moving any fe atom ) .",
    "cu and fe atoms are unlabeled , hence the size @xmath17 of @xmath35 is the number of cu atoms in the cu cluster plus one .",
    "note that labeling the atoms would entail @xmath190 , making the simulations impractical for @xmath191 .",
    "the @xmath20th eliminated pivot in @xmath35 corresponds to the least connected entry of @xmath31 .",
    "the stochastic matrix @xmath33 is then used to evolve the system a first time and then each time the system returns to @xmath35 , as illustrated by the vacancy path of fig .",
    "[ figs2].a .",
    "a kmc algorithm is implemented when the vacancy is embedded in the iron bulk .",
    "the set of non - eliminated transient states , @xmath158 , encompasses all states corresponding to the vacancy embedded in the iron bulk . in practice",
    ", the vacancy tends to return to the cu cluster from which it just exited , meaning that the factorization is used many times during a kps cycle , up to an average of 60 for a cluster of size 40 at @xmath192  k. one stops generating the path whenever the vacancy returns to the initial cu cluster but with a different @xmath189cu@xmath193 cluster shape ( see fig .",
    "[ figs2].b ) or reaches another cu cluster ( see fig .  [ figs2].c ) .",
    "the possible ending states define the absorbing boundary @xmath153 .",
    "then , kps completes its cycle with space - time randomization .    ) on a square lattice with cu - like atoms colored in apricot .",
    "dashed lines delimit the @xmath189cu@xmath193 cluster shapes . ,",
    "scaledwidth=40.0% ]    the copper solubility limits in iron for the three simulated temperatures ( @xmath192  k , @xmath194  k and @xmath195  k ) are @xmath196 , @xmath197 and @xmath198 , respectively .",
    "these limits are very small compared with @xmath199 , the cu concentration in the simulations .",
    "supersaturations in copper are thus very important , meaning that the solid solution is unstable at these temperatures and that the cu clusters that form during subsequent ageing unlikely dissolve during the initial incubation at @xmath200 .",
    "we in fact observe that the cross - over from the slow initial `` incubation '' to faster growth occurs concomittantly with a vacancy - containing copper cluster growing to 15 - 16 cu atoms , as shown in fig .",
    "[ figs3 ] .",
    "additional `` magic numbers '' around @xmath82 , 27 , 35 are evidenced at @xmath200 by visualizing the 41 simulated trajectories displayed in fig .",
    "[ figs4 ] .",
    "these numbers correspond to the numbers of site in compact clusters with fully filled nearest - neighbor shells .     of the migrating cu@xmath193v cluster : single ( non - averaged ) ageing kinetics at @xmath201 k.,scaledwidth=45.0% ]     associated with the migrating cu@xmath193v clusters for the 41 trajectories simulated at @xmath201 k.,scaledwidth=45.0% ]",
    "we now prove that the algorithm generates the correct distribution of first - passage times to @xmath151 for @xmath90 , i.e @xmath202 . in step  ( e ) of the kps algorithm , we resort to the distributivity of the gamma law with respect to its shape parameter and decompose the first - passage time as follows : @xmath203 where @xmath204 and @xmath205 are the generated numbers of hops and flickers from @xmath20 . for any state @xmath173 that is visited @xmath140 times , the probability of having @xmath143 flickers before the @xmath140-th escape from @xmath206 is @xmath207 , which corresponds to the probability mass of the negative binomial law of success number @xmath140 and success probability @xmath208 . in the following ,",
    "we introduce the effective rate @xmath209 the residence time associated with @xmath210 hops and flickers from state @xmath206 is distributed according to @xmath211 , the gamma law of shape parameter @xmath210 and time - scale @xmath10 .",
    "the probability mass of @xmath211 law at @xmath5 being @xmath212 $ ] , the overall probability to draw residence time @xmath5 after @xmath140 visits of state @xmath206 is obtained by summing the compound probabilities associated with all possible occurrences of the number @xmath143 of flickers as follows @xmath213^{f }   \\exp \\left[-\\frac{t } { \\tau } \\right ] = \\nonumber   \\frac { ( k_\\ell t ) ^{h-1 } } { ( h-1 ) ! } k_\\ell \\exp\\left [ - k_\\ell t   \\right ] .",
    "\\nonumber\\end{aligned}\\ ] ] remarkably , the summation removes the dependence on @xmath10 and yields the distribution of the gamma law of shape parameter @xmath140 and time - scale @xmath214 , which corresponds to the convolution of @xmath140 decaying exponentials of rate @xmath215 .",
    "this is the expected distribution for the time elapsed after @xmath140 consecutive poisson processes of rate @xmath215 .",
    "note that the standard kmc algorithm simply draws an escape time according to @xmath216 , the exponential law of rate @xmath215 for each visit of @xmath206 , which is statistically equivalent .",
    "this amounts to prescribing a success probability of 1 , which results in @xmath217 and no failures .",
    "the proof that the algorithm is correct for @xmath218 follows by induction on @xmath17 resorting to the iterative structure of the algorithm .    finally , it is worth noticing that trajectories escaping a trapping basin can in principle be analysed to provide information about the kinetic pathways since the numbers of transitions involving each eliminated state are randomly generated . obtaining information about time correlation functions and commitor probabilities",
    "would require testing the involved bernoulli trials sequentially instead of drawing a binomial or negative binomial deviates given a number of transitions , in order to construct the path .",
    "however , the computational cost of these additional operations scales linearly with the mean first - passage time for escaping a trapping basin ."
  ],
  "abstract_text": [
    "<S> the computational efficiency of stochastic simulation algorithms is notoriously limited by the kinetic trapping of the simulated trajectories within low energy basins . here </S>",
    "<S> we present a new method that overcomes kinetic trapping while still preserving exact statistics of escape paths from the trapping basins . </S>",
    "<S> the method is based on path factorization of the evolution operator and requires no prior knowledge of the underlying energy landscape . </S>",
    "<S> the efficiency of the new method is demonstrated in simulations of anomalous diffusion and phase separation in a binary alloy , two stochastic models presenting severe kinetic trapping .    </S>",
    "<S> time evolution of many natural and engineering systems is described by a master equation ( me ) , i.e. a set of ordinary differential equations for the time - dependent vector of state probabilities  @xcite . for models with large ( or infinite but countable ) number of states , direct solution of the me </S>",
    "<S> is prohibitive and kinetic monte carlo ( kmc ) is used instead to simulate the time evolution by generating sequences of stochastic transitions from one state to the next  @xcite . </S>",
    "<S> statistically equivalent to the ( most often unknown ) solution of the me , kmc finds growing number of applications in natural and engineering sciences </S>",
    "<S> . however still wider applicability of kmc is severely limited by the notorious kinetic trapping where the stochastic trajectory repeatedly visits a subset of states , a trapping basin , connected to each other by high - rate transitions while transitions out of the trapping basin are infrequent and take great many kmc steps to observe .    in this letter , we present an efficient method for sampling stochastic trajectories escaping from the trapping basins . unlike recent methods that focus on short portions of the full kinetic path directly leading to the escapes and/or require equilibration over a path ensemble  @xcite , our method constructs an entire stochastic trajectory within the trapping basin including the typically large numbers of repeated visits to each trapping state as well as the eventual escape . referred hereafter as kinetic path sampling ( kps ) , </S>",
    "<S> the new algorithm is statistically equivalent to the standard kmc simulation and entails ( i ) iterative factorization of paths inside a trapping basin , ( ii ) sampling a single exit state within the basin s perimeter and ( iii ) generating a first - passage path and an exit time to the selected perimeter state through an exact randomization procedure . </S>",
    "<S> we demonstrate the accuracy and efficiency of kps on two models : ( 1 ) diffusion on a random energy landscape specifically designed to yield a wide and continuous spectrum of time scales and ( 2 ) kinetics of phase separation in super - saturated solid solutions of copper in iron . </S>",
    "<S> the proposed method is immune to kinetic trapping and performs well under simulation conditions where the standard kmc simulations slows down to a crawl . </S>",
    "<S> in particular , it reaches later stages of phase separation in the fe - cu system and captures a qualitatively new kinetics and mechanism of copper precipitation .    </S>",
    "<S> the evolution operator , obtained formally from solutions of the me , can be expressed as an exponential of the time - independent transition rate matrix  @xcite @xmath0 where @xmath1 is the probability to find the system in state @xmath2 at @xmath3 given that it was in state @xmath4 at time @xmath5 , @xmath6 is the rate of transitions from state @xmath4 to state @xmath2 ( off - diagonal elements only ) and the standard convention is used to define the diagonal elements as @xmath7 . </S>",
    "<S> as defined , the evolution operator belongs to the class of stochastic matrices such that @xmath8 and @xmath9 for any @xmath4 , @xmath2 , @xmath5 and @xmath10 . </S>",
    "<S> if known , the evolution operator can be used to sample transitions between any two states and over arbitrary time intervals @xmath10  @xcite . in particular , </S>",
    "<S> substantial simulation speed - ups can be achieved by sampling transitions to distant states on an absorbing perimeter of a trapping basin . </S>",
    "<S> two main defficiencies of the existing implementations of this idea  @xcite is that states within the trapping basin are expected to be known _ a priori _ and that computing the evolution operator requires a partial eigenvalue decomposition of @xmath11 entailing high computational cost  @xcite . </S>",
    "<S> in contrast , the kps algorithm does not require any advance knowledge of the trapping basin nor does it entail matrix diagonalization . </S>",
    "<S> instead , kps detects kinetic trapping and charts the trapping basin iteratively , state by state , and achieves high computational efficiency by sequentially eliminating all the trapping states through path factorization  @xcite . here , wales s formulation  @xcite of path factorization is adopted for its clarity .    </S>",
    "<S> consider the linearized evolution operator @xmath12 where @xmath13 is the identity matrix . </S>",
    "<S> assuming that @xmath14 , @xmath15 is a proper stochastic matrix that can be used to generate stochastic sequences of states from the ensemble of paths defined by matrix @xmath11 . </S>",
    "<S> the diagonal elements of @xmath15 define the probabilities of round - trip transitions after which the system remains in the same state . to correct for the linearization of the evolution operator in  , </S>",
    "<S> the time elapsed before any transition takes place is regarded as a stochastic variable and sampled from an exponential distribution @xmath16  @xcite . </S>",
    "<S> this simple time randomization obviates the need for exponentiating the transition rate matrix in  . </S>",
    "<S> following @xcite , consider a bi - directional connectivity graph defined by @xmath15 in which @xmath17 states in the trapping basin are numbered in order of their elimination , @xmath18 . </S>",
    "<S> an iterative path factorization procedure then constructs a set of stochastic matrices @xmath19 such that , after the @xmath20-th iteration , all states @xmath21 are eliminated in the sense that the probability of a transition from any state @xmath4 to state @xmath21 is zero . </S>",
    "<S> specifically , at @xmath20-step of factorization the transition probability @xmath22 ( @xmath23 , @xmath24 ) is computed as the sum of the probability of a direct transition @xmath25 and the probabilities of all possible indirect paths involving round - trips in @xmath20 after having initially transitioned from @xmath4 to @xmath20 and before finally transitioning from @xmath20 to @xmath2 , e.g. @xmath26 , @xmath27 , @xmath28 , @xmath29 , and so on . with the round - trip probability being @xmath30 </S>",
    "<S> , it is a simple matter to sum the geometric series corresponding to the round - trip paths . </S>",
    "<S> although any intermediate @xmath31 can be used to generate stochastic escapes from any state @xmath32 , a trajectory generated using @xmath33 is the simplest containing a single transition from @xmath34 that effectively subsumes all possible transitions involving the deleted states in the trapping basin @xmath35 . on the other end , a detailed escape trajectory can be generated using @xmath15 that accounts for all transitions within @xmath35 , reverting back to the standard kmc simulation . </S>",
    "<S> remarkably , it is possible to construct a detailed escape trajectory statistically equivalent to the standard kmc without ever performing a detailed ( and inefficient ) kmc simulation .    </S>",
    "<S> consider matrix @xmath36 whose elements @xmath37 store the number of @xmath26 transitions observed in a stochastic simulation with @xmath31 . </S>",
    "<S> given @xmath36 , one can randomly generate @xmath38 , the matrix similarly used to count the transition numbers observed in a stochastic process based on @xmath39 without actually performing the simulation using @xmath39 . </S>",
    "<S> the ratio of transition probabilities ( @xmath23 ) @xmath40 defines the conditional probability that a trajectory generated using @xmath39 contains a direct transition from @xmath4 to @xmath2 given that the trajectory generated with @xmath31 contains the same transition . </S>",
    "<S> for @xmath41 , @xmath42 is independent of @xmath2 and is equal to @xmath43 , the probability of escape from @xmath20 . </S>",
    "<S> it is thus possible to generate @xmath38 by performing a stochastic simulation with @xmath31 , harvesting @xmath36 and drawing random variates from ( standard and negative ) binomial distributions whose exponents and coefficients are given by the elements of @xmath36 and @xmath44 , respectively . </S>",
    "<S> this randomization procedure can be used iteratively on @xmath20 in the reverse order from @xmath17 to @xmath45 to generate @xmath46 containing a detailed count of transitions involving all states in @xmath35 . finally , the time of exit out of @xmath35 is sampled by drawing a random variate from the gamma distribution whose scale and shape parameters are defined by @xmath10 and the total number of transitions contained in @xmath46 , respectively . </S>",
    "<S> thus , in its simplest form the kps algorithm proceeds by first deleting all states in @xmath35 through iterative forward path factorization , then using @xmath33 to sample a single transition from @xmath32 and to generate @xmath47 followed by a backward randomization to reconstruct a detailed stochastic path within @xmath35 and to sample an escape time to the selected exit state . </S>",
    "<S> a detailed description of the kps algorithm is given in the supplemental material  @xcite .    </S>",
    "<S> we first apply kps to simulations of a random walker on a disordered energy landscape ( substrate )  @xcite . </S>",
    "<S> the substrate is a periodically replicated 256@xmath48256 fragment of the square lattice on which the walker hops to its four nearest - neigbour ( nn ) sites with transition rates @xmath49,\\ ] ] where @xmath50 is the temperature , @xmath51 the site energy and @xmath52 the saddle energy between sites @xmath4 and @xmath2 . </S>",
    "<S> the energy landscape is purposefully constructed to contain trapping basins of widely distributed sizes and depths ( see the supplemental material  @xcite for details ) and is centered around the walker s initial position next to the lowest energy saddle ( fig .  </S>",
    "<S> [ fig : landscape ] ) .    . </S>",
    "<S> artificial smoothing is used for better visualization.,scaledwidth=60.0% ]    when performed at temperature t@xmath53 , standard kmc simulations ( with hops only to the nn sites ) are efficient enabling the walker to explore the entire substrate . </S>",
    "<S> however at t@xmath54 , the walker remains trapped near its initial position repeatedly visiting states within a trapping basin . to chart a basin set @xmath35 for subsequent kps simulations , the initial state 1 </S>",
    "<S> is eliminated at the very first iteration followed in sequence by the `` most absorbing states '' for which @xmath55 is found to be largest at the @xmath20-th iteration ( @xmath56 ) . </S>",
    "<S> the expanding contours shown in fig .  [ fig : landscape ] depict the absorbing boundary @xmath57 ( perimeter of the basin ) obtained after eliminating @xmath58 , @xmath59 , @xmath60 , @xmath61 , @xmath62 and @xmath63 states . </S>",
    "<S> the perimeter contour @xmath57 consists of all states @xmath2 for which @xmath64 is nonzero .     for the walker to remain within a trapping basin containing @xmath65 states ( solid line ) and the distribution of times of escape out of the same basin ( dashed lines ) using a log scale for the bins ; ( b ) the mean first - passage time @xmath66 as a function of the number of states @xmath17 included in the trapping basin ; ( c ) computational cost of kmc and kps simulations as a function of @xmath17 at two different temperatures ( in the units of a single kmc hop ) . , scaledwidth=45.0% ]    to demonstrate correctness of kps , we generated @xmath67 paths starting from state @xmath68 and ending at the absorbing boundary @xmath57 of the basin containing @xmath65 states , using both kps and kmc at t=2.5 . </S>",
    "<S> the perfect match between the two estimated distributions of exit times is shown in fig .  </S>",
    "<S> [ fig2].a . </S>",
    "<S> the mean times of exit to @xmath57 are plotted as a function of the number of eliminated states at t@xmath53 and t=1.0 in fig .  </S>",
    "<S> [ fig2].b , while the costs of both methods are compared in fig .  </S>",
    "<S> [ fig2].c . at t=1.0 , </S>",
    "<S> kmc trajectories are trapped and never reach @xmath57 : in this case we plot the expectation value for the number of kmc hops required to exit @xmath35 which is always available after path factorization @xcite . </S>",
    "<S> we observe that the kps cost scales as @xmath69 , as expected for this factorization , and exceeds that of kmc for @xmath70 at t=2.5 . </S>",
    "<S> however , at t=1 trapping becomes severe rendering the standard kmc inefficient and the wall clock speedup achieved by kps is four orders of magnitude for @xmath71 . </S>",
    "<S> we observe that in kps the net cost of generating an exit trajectory is nearly independent of the temperature but grows exponentially with the decreasing temperature in kmc . at the same time , an accurate measure of the relative efficiency of kps and kmc is always available in path factorization , allowing one to revert to the standard kmc whenever it is relatively more efficient . </S>",
    "<S> thus , when performed correctly , a stochastic simulation combining kps and kmc should always be more efficient than kmc alone .    as a second illustration </S>",
    "<S> , we apply kps to simulate the kinetics of copper precipitation in iron within a lattice model parameterized using electronic structure calculations  @xcite . </S>",
    "<S> the simulation volume is a periodically replicated fragment of the body centered cubic lattice with 128@xmath48128@xmath48128 sites on which 28,163 cu atoms are initially randomly dispersed . </S>",
    "<S> fe atoms occupy all the remaining lattice sites except one that is left vacant allowing atom diffusion to occur by vacancy ( v ) hopping to one of its nn lattice sites . its formation energy being substantially lower in cu than in fe , the vacancy is readily trapped in cu precipitates rendering kmc grossly inefficient below @xmath72  k  @xcite . whenever the vacancy is observed to attach to a cu cluster , </S>",
    "<S> we perform kps over a pre - charted set @xmath35 containing @xmath17 trapping states that correspond to all possible vacancy positions inside the @xmath73 cluster containing @xmath74 cu atoms : the shape of the trapping cluster is fixed at the instant when the vacancy first attaches . the fully factored matrix @xmath33 is then used to propagate the vacancy to a lattice site just outside the fixed cluster shape which is often followed by vacancy returning to the same cluster . if the newly formed trapping cluster has the same shape as before , the factorized matrix is used again to sample yet another escape . however a new path factorization ( kps cycle ) is performed whenever the vacancy re - attaches to the same cu cluster but in a different cluster shape or attaches to another cu cluster ( see the supplementary material for additional simulation details  @xcite ) .    </S>",
    "<S> we simulated copper precipitation in iron at three different temperatures t@xmath75  k , t@xmath76  k and t@xmath77  k for which the atomic fraction of cu atoms used in our simulations significantly exceeds copper solubility limits in iron . defined as the ratio of physical time simulated by kps to that reached in kmc simulations over the same wall clock time , the integrated speed - up is plotted in fig .  </S>",
    "<S> [ fig3].a . as a function of the physical time simulated by kps ( averaged over 41 simulations for each method and at each temperature ) .        </S>",
    "<S> the precipitation kinetics are monitored through the evolution of the volume - averaged warren - cowley short - range order ( sro ) parameter  @xcite shown in fig .  </S>",
    "<S> [ fig3].b both for kps and kmc simulations . at t@xmath78 and t@xmath79 </S>",
    "<S> the kinetics proceed through a distinct incubation stage reminescent to a time lag associated with repeated re - dissolution of subcritical nuclei prior to reaching the critical size in the classical nucleation theory  @xcite . </S>",
    "<S> however , `` incubation '' observed here is of a distinctly different nature since all our simulated solid solutions are thermodynamically unstable and even the smallest of cu clusters , once formed , never dissolve . </S>",
    "<S> at all three temperatures the growth of @xmath73 clusters is observed to proceed not through the attachment of mobile v - cu dimers but primarily through the cluster s own diffusion and sweeping of neighboring immobile cu monomers  @xcite . </S>",
    "<S> this is consistent with an earlier study that also suggested that , rather counter - intuitively , the diffusivity of @xmath73 clusters should increase with the increasing @xmath17 before tapering off at @xmath80 ( see fig .  </S>",
    "<S> 9 of ref .  ) . </S>",
    "<S> we futher observe that at t@xmath78 the cross - over from the slow initial `` incubation '' to faster `` agglomeration '' growth seen on [ fig3].b occurs concomittantly with the largest cluster growing to 15 - 16 cu atoms  @xcite . </S>",
    "<S> individual realizations of the stochastic precipitation kinetics reveal that , in addition to @xmath81 , cluster growth slows down again once the cluster reaches @xmath82 , 27 , 35 and so on ( see figure s4 in the supplementary materials ) . leaving precise characterization of these transitions to future work , we speculate that the observed `` magic numbers '' correspond to compact clusters with fully filled nearest - neighbor shells in which vacancy trapping is particularly strong reducing the rate of shape - modifying vacancy escapes required for cluster diffusion .    </S>",
    "<S> numerically , as expected , the integrated speed - up rapidly increases with the decreasing temperature as vacancy trapping becomes more severe . </S>",
    "<S> two line segments of unit slope and two pairs of vertical arrows are drawn in fig .  </S>",
    "<S> [ fig3 ] to compare evolution stages achievable within kps and kmc over the same wall clock time . as marked by the pair of two solid vertical arrows on the right , the integrated speed - up exceeds seven orders of magnitude at t@xmath78 . </S>",
    "<S> subsequent reduction in the speed - up concides with the transition into the agglomeration regime where increasingly large vcu clusters repeatedly visit increasingly large number of distinct shapes  @xcite . </S>",
    "<S> unquestionably , the efficiency of kps simulations for this particular model can be improved by indexing distinct cluster shapes for each cluster size and storing the path factorizations to allow for their repeated use during the simulations  @xcite . in any case , given its built - in awareness of the relative cost measured in kmc hops , kps is certain to enable more efficient simulations of diffusive phase transformations in various technologically important materials . in particular </S>",
    "<S> , it is tempting to relate an anomalously long incubation stage observed in aluminium alloys with mg , si and se additions  @xcite to possible trapping of vacancies on se , similar to the retarding effect of cu on the ageing kinetics reported here for the fe - cu alloys .    in summary </S>",
    "<S> , we developed a kinetic path sampling algorithm suitable for simulating the evolution of systems prone to kinetic trapping . </S>",
    "<S> unlike most other algorithms dealing with this numerical bottleneck  @xcite , kps does not require any _ a priori _ knowledge of the properties of the trapping basin . </S>",
    "<S> it relies on an iterative path factorization of the evolution operator to chart possible escapes , measures its own relative cost and reverts to standard kmc if the added efficiency no longer offsets its computational overhead . at the same time </S>",
    "<S> , the kps algorithm is exact and samples stochastic trajectories from the same statistical ensemble as the standard kmc algorithms . </S>",
    "<S> being immune to kinetic trapping , kps is well positioned to extend the range of applicability of stochastic simulations beyond their current limits . </S>",
    "<S> furthermore , kps can be combined with spatial protection @xcite and synchronous or asynchronous algorithms to enable efficient parallel simulations of a still wider class of large - scale stochastic models  @xcite .    </S>",
    "<S> this work was supported by defi needs ( project mathdef ) and lawrence livermore national laboratory s ldrd office ( project 09-erd-005 ) and utilized hpc resources from genci-[ccrt / cines ] ( grant x2013096973 ) . </S>",
    "<S> this work was performed under the auspices of the u.s . </S>",
    "<S> department of energy by lawrence livermore national laboratory under contract de - ac52 - 07na27344 . </S>",
    "<S> the authors wish to express their gratitude to t. opplestrup , f. soisson , e. clouet , j .- l . </S>",
    "<S> bocquet , g. adjanor and a. donev for fruitful discussions .    </S>",
    "<S> 10 n. g. van kampen , stochastic processes in physics and chemistry ( elsevier science , 2007 ) .    </S>",
    "<S> s. redner , a guide to first - passage processes , cambridge university press ( 2001 ) .    </S>",
    "<S> j .- m . </S>",
    "<S> lanore , rad . </S>",
    "<S> effects * 22 * , 153 ( 1974 ) .    </S>",
    "<S> a. bortz , m. kalos , j. lebowitz , j. comp . </S>",
    "<S> phys . </S>",
    "<S> * 17 * , 10 ( 1975 ) .    </S>",
    "<S> d. gillespie , j. chem . </S>",
    "<S> phys . * 81 * , 2340 ( 1977 ) .    </S>",
    "<S> p. bolhuis , d. chandler , c. dellago and p. geissler , ann . </S>",
    "<S> rev . </S>",
    "<S> phys . chem . * </S>",
    "<S> 53 * , 291 ( 2002 ) .    </S>",
    "<S> s. x. sun , phys . </S>",
    "<S> rev . </S>",
    "<S> lett . * 96 * 210602 ( 2006 ) and * 97 * , 178902 ( 2006 ) .    </S>",
    "<S> b. harland and x. sun , j. chem . </S>",
    "<S> phys . </S>",
    "<S> * 127 * 104103 ( 2007 ) .    c. d. van siclen , j. phys . : condens . </S>",
    "<S> matter 19 , 072201 ( 2007 ) .    </S>",
    "<S> n. eidelson and b. peters j. chem . </S>",
    "<S> phys . * 137 * , 094106 ( 2012 ) .    </S>",
    "<S> t. mora , a. m. walczak and f. zamponi , phys . </S>",
    "<S> rev . </S>",
    "<S> e * 85 * , 036710 ( 2012 ) .    </S>",
    "<S> m. manhart and a. v. morozov , phys . </S>",
    "<S> rev . </S>",
    "<S> lett . </S>",
    "<S> * 111 * 088102 ( 2013 ) .    </S>",
    "<S> the evolution operator is obtained by integrating the me @xmath83 from @xmath5 to @xmath3 and identifying the formal solution with @xmath84 where @xmath85 is the state - probability ( row ) vector at @xmath5 .    </S>",
    "<S> if the system is in @xmath4 at a given time , then the state - probability vector at a later time @xmath10 is @xmath86 where @xmath87 denotes the row vector whose @xmath4th entry is one and the other ones are zero . </S>",
    "<S> the entries of @xmath88 are @xmath89 and can be used as transition probabilities for kmc moves from @xmath4 .    </S>",
    "<S> m. a. novotny , phys . </S>",
    "<S> rev . </S>",
    "<S> lett . * 74 * , 1 ( 1995 ) .    </S>",
    "<S> g. boulougouris and d. theodorou , j. chem . phys . * </S>",
    "<S> 127 * , 084903 ( 2007 ) .    </S>",
    "<S> m. barrio , a. leier and t. marquez - lago , j. chem phys . * 138 * , 104114 ( 2013 ) .    </S>",
    "<S> g. nandipati , y. shim and j. g. amar , phys . </S>",
    "<S> rev . </S>",
    "<S> b * 81 * 235415 ( 2010 ) .    c. moler and c. van loan , siam rev . * </S>",
    "<S> 45 * , 3 ( 2003 ) .    </S>",
    "<S> m. athnes , p. bellon and g. martin , phil . mag . a , * 76 * , 565 ( 1997 ) .    </S>",
    "<S> s. trygubenko and d. wales , j. chem . phys . * 124 * , 234110 ( 2006 ) .    </S>",
    "<S> d. wales , j. chem . </S>",
    "<S> phys . * 130 * , 204111 ( 2009 ) .    </S>",
    "<S> s. a. serebrinsky , phys . </S>",
    "<S> rev . </S>",
    "<S> e * 83 * , 037701 ( 2011 ) .    </S>",
    "<S> see supplemental material below for the connection between path factorization and gauss - jordan elimination method and for a proof that the algorithm is correct for @xmath90 .    </S>",
    "<S> y. limoge and j .- l . </S>",
    "<S> bocquet , phys . </S>",
    "<S> rev . </S>",
    "<S> lett . </S>",
    "<S> * 65 * , 60 ( 1990 ) .    </S>",
    "<S> f. soisson , c. c. fu , phys . rev . </S>",
    "<S> b * 76 * , 214102 ( 2007 ) .    </S>",
    "<S> m. athnes , p. bellon and g. martin , acta mat . </S>",
    "<S> * 48 * , 2675 , ( 2000 ) .    </S>",
    "<S> e. clouet , asm handbook vol . </S>",
    "<S> 22a , fundamentals of modeling for metals processing d. u. furrer and s. l. semiatin ( eds . ) , pp . 203 - 219 ( 2010 ) .    to understand the origin of the efficiency decrease </S>",
    "<S> , we have monitored the number of distinct shapes of the vacancy - copper cluster . for a v - cu@xmath91 cluster </S>",
    "<S> , we found that , over the @xmath92 last factorizations that have been performed , there are only 21 different cluster shapes and that the 5 most frequent shapes occur with a frequency of about 60% .    </S>",
    "<S> l. k. bland , p. brommer , f. el - mellouhi , j. f. joly and n. mousseau , phys . </S>",
    "<S> rev . </S>",
    "<S> e * 84 * , 046704 ( 2011 ) .    </S>",
    "<S> s. pogatscher , h. antrekowitsch , m. werinos , f. moszner , s. s. a. gerstl , m. f. francis , w. a. curtin , j. f. lffler and p. j. uggowitzer , phys . </S>",
    "<S> rev . </S>",
    "<S> lett . * 112 * , 225701 ( 2014 ) .    </S>",
    "<S> d. mason , r. rudd and a. sutton , comp . </S>",
    "<S> . comm . * </S>",
    "<S> 160 * , 140 ( 2004 ) .    </S>",
    "<S> b. puchala , m. falk and k. garikipati , j. chem . phys . </S>",
    "<S> * 132 * , 134104 ( 2010 ) .    </S>",
    "<S> t. opplestrup , v. v. bulatov , g. h. gilmer , m. h. kalos , and b. sadigh , phys . </S>",
    "<S> rev . </S>",
    "<S> lett . * 97 * , 230602 ( 2006 ) .    </S>",
    "<S> y. shim and j. g. amar , phys . </S>",
    "<S> rev . </S>",
    "<S> b * 71 * , 115436 ( 2005 ) .    m. merrick and k. fichthorn , * 75 * , 011606 ( 2007 ) .    </S>",
    "<S> e. martnez and p. r. monasterio , j. marian , j. comput . phys . * </S>",
    "<S> 230 * , 1359 ( 2011 ) .    </S>",
    "<S> f. wieland , and d. jefferson , proc . </S>",
    "<S> 1989 intl conf . </S>",
    "<S> parallel processing , vol.iii , f. ris , and m. kogge , eds . </S>",
    "<S> , pp . </S>",
    "<S> 255 - 258 .    </S>",
    "<S> * supplemental materials : path factorization approach to stochastic simulations * </S>"
  ]
}
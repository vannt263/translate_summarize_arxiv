{
  "article_text": [
    "in case space requirements of dynamic parsing often outweigh the benefit of not duplicating sub - computations .",
    "we propose a parser that avoids this drawback through combining the advantages of dynamic bottom - up and advanced top - down control .",
    "the underlying idea is to achieve faster parsing by avoiding tabling on sub - computations which are not expensive .",
    "the so - called _ selective magic parser _ allows the user to apply magic compilation to specific constraints in a grammar which as a result can be processed dynamically in a bottom - up and goal - directed fashion .",
    "state of the art top - down processing techniques are used to deal with the remaining constraints .",
    "magic is a compilation technique originally developed for goal - directed bottom - up processing of logic programs .",
    "see , among others , ( ramakrishnan et al .",
    "1992 ) . as shown in  @xcite magic",
    "is an interesting technique with respect to natural language processing as it incorporates filtering into the logic underlying the grammar and enables elegant control independent filtering improvements . in this paper",
    "we investigate the selective application of magic to _ typed feature grammars _ a type of constraint - logic grammar based on typed feature logic ( @xmath0 ; gtz , 1995 ) .",
    "typed feature grammars can be used as the basis for implementations of head - driven phrase structure grammar ( hpsg ; pollard and sag , 1994 ) as discussed in ( gtz and meurers , 1997a ) and ( meurers and minnen , 1997 ) .",
    "typed feature grammar constraints that are inexpensive to resolve are dealt with using the top - down interpreter of the controll grammar development system  @xcite which uses an advanced search function , an advanced selection function and incorporates a coroutining mechanism which supports delayed interpretation .",
    "the proposed parser is related to the so - called _ lemma table _ deduction system  @xcite which allows the user to specify whether top - down sub - computations are to be tabled .",
    "in contrast to johnson and drre s deduction system , though , the selective magic parsing approach combines top - down and bottom - up control strategies . as such it resembles the parser of the grammar development system attribute language engine ( ale ) of @xcite . unlike the ale parser ,",
    "though , the selective magic parser does not presuppose a phrase structure backbone and is more flexible as to which sub - computations are tabled / filtered .",
    "we describe typed feature grammars and discuss their use in implementing hpsg grammars .",
    "subsequently we present magic compilation of typed feature grammars on the basis of an example and introduce a dynamic bottom - up interpreter that can be used for goal - directed interpretation of magic - compiled typed feature grammars .",
    "a typed feature grammar consists of a signature and a set of definite clauses over the constraint language of equations of @xmath1  @xcite terms  @xcite which we will refer to as @xmath0 definite clauses .",
    "equations over @xmath1 terms can be solved using ( graph ) unification provided they are in normal form .",
    "@xcite describes a normal form for @xmath0 terms , where typed feature structures are interpreted as satisfiable normal form @xmath0 terms .",
    "terms are merely syntactic objects . ]",
    "the signature consists of a type hierarchy and a set of appropriateness conditions .",
    "the signature specified in figure  [ sig1 ] and  [ sig2 ] and the @xmath0 definite clauses in figure  [ dcs ] constitute an example of a typed feature grammar .",
    "we write @xmath0 terms in normal form , i.  e. , as typed feature structures . in addition , uninformative feature specifications are ignored and typing is left implicit when immaterial to the example at hand .",
    "equations between typed feature structures are removed by simple substitution or tags indicating structure sharing .",
    "notice that we also use non - numerical tags such as and .",
    "in general all boxed items indicate structure sharing . for expository reasons",
    "we represent the arg__n _ _ features of the append relation as separate arguments .",
    "typed feature grammars can be used as the basis for implementations of head - driven phrase structure grammar  @xcite . for hpsg and a comparison with other feature logic approaches designed for hpsg . ]",
    "@xcite propose a compilation of lexical rules into @xmath0 definite clauses which are used to restrict lexical entries .",
    "@xcite describe a method for compiling implicational constraints into typed feature grammars and interleaving them with relational constraints . because of space limitations we have to refrain from an example .",
    "the controll grammar development system as described in  @xcite implements the above mentioned techniques for compiling an hpsg theory into typed feature grammars .",
    "magic is a compilation technique for goal - directed bottom - up processing of logic programs .",
    "see , among others , ( ramakrishnan et al .",
    "because magic compilation does not refer to the specific constraint language adopted , its application is not limited to logic programs / grammars : it can be applied to relational extensions of other constraint languages such as typed feature grammars without further adaptions .",
    "due to space limitations we discuss magic compilation by example only .",
    "the interested reader is referred to  @xcite for an introduction .",
    "we illustrate magic compilation of typed feature grammars with respect to definite clause 1 in figure  [ dcs ] .",
    "consider the @xmath0 definite clause in figure  [ magic - dcs ] .    as a result of magic compilation a magic literal",
    "is added to the right - hand side of the original definite clause .",
    "intuitively understood , this magic literal `` guards '' the application of the definite clause .",
    "the clause is applied only when there exists a fact that unifies with this magic literal .",
    "definite clause without right - hand side literals , from the grammar or derived using the rules in the grammar . in the latter case one also speaks of a passive edge . ]",
    "the resulting definite clause is also referred to as the _ magic variant _ of the original definite clause .    the definite clause in figure  [ seed ]",
    "is the so - called _ seed _ which is used to make the bindings as provided by the initial goal available for bottom - up processing . in this case",
    "the seed corresponds to the initial goal of parsing the string ` mary sleeps '",
    ".    intuitively understood , the seed makes available the bindings of the initial goal to the magic variants of the definite clauses defining a particular initial goal ; in this case the magic variant of the definite clause defining a constituent of category ` s ' .",
    "only when their magic literal unifies with the seed are these clauses applied .",
    "the so - called _ magic rules _ in figure  [ magic - rules ] are derived in order to be able to use the bindings provided by the seed to derive new facts that provide the bindings which allow for a goal - directed application of the definite clauses in the grammar not directly defining the initial goal .",
    "definite clause 3 , for example , can be used to derive a magic_append fact which percolates the relevant bindings of the seed / initial goal to restrict the application of the magic variant of definite clauses 4 and 5 in figure  [ dcs ] ( which are not displayed ) .",
    "magic - compiled logic programs / grammars can be interpreted in a bottom - up fashion without losing any of the goal - directedness normally associated with top - down interpretation using a so - called _ semi - naive bottom - up _ interpreter : a dynamic interpreter that tables only complete intermediate results , i.  e. , facts or passive edges , and uses an agenda to avoid redundant sub - computations .",
    "the prolog predicates in figure  [ sbi ] implement a semi - naive bottom - up interpreter .",
    "in this interpreter both the table and the agenda are represented using lists .",
    "the agenda keeps track of the facts that have not yet been used to update the table .",
    "it is important to notice that in order to use the interpreter for typed feature grammars it has to be adapted to perform graph unification .",
    "we refrain from making the necessary adaptions to the code for expository reasons .",
    "the table is initialized with the facts from the grammar .",
    "facts are combined using a operation called _",
    "match_. the match operation unifies all but one of the right - hand side literals of a definite clause in the grammar with facts in the table .",
    "the remaining right - hand side literal is unified with a newly derived fact , i.  e. , a fact from the agenda . by doing this ,",
    "repeated derivation of facts from the same earlier derived facts is avoided .",
    "in case of large grammars the huge space requirements of dynamic processing often nullify the benefit of tabling intermediate results . by combining control strategies and allowing the user to specify how to process particular constraints in the grammar the selective magic parser avoids this problem .",
    "this solution is based on the observation that there are sub - computations that are relatively cheap and as a result do not need tabling  @xcite .      combining control strategies",
    "depends on a way to differentiate between types of constraints .",
    "for example , the ale parser  @xcite presupposes a phrase structure backbone which can be used to determine whether a constraint is to be interpreted bottom - up or top - down . in the case of selective magic parsing",
    "we use so - called _ parse types _ which allow the user to specify how constraints in the grammar are to be interpreted .",
    "a literal ( goal ) is considered a _ parse type literal ( goal ) _ if it has as its single argument a typed feature structure of a type specified as a parse type .",
    "all types in the type hierarchy can be used as parse types . this way parse type specification supports a flexible filtering component which allows us to experiment with the role of filtering . however , in the remainder we will concentrate on a specific class of parse types : we assume the specification of type _ sign _ and its sub - types as parse types .",
    "this choice is based on the observation that the constraints on type _ sign _ and its sub - types play an important guiding role in the parsing process and are best interpreted bottom - up given the lexical orientation of hpsg .",
    "the parsing process corresponding to such a parse type specification is represented schematically in figure  [ schema - parse ] .",
    "[ schema - sel ]    starting from the lexical entries , i.  e. , the @xmath0 definite clauses that specify the word objects in the grammar , phrases are built bottom - up by matching the parse type literals of the definite clauses in the grammar against the edges in the table .",
    "the non - parse type literals are processed according to the top - down control strategy described in section  [ advance ] .      in order to process parse type goals according to a semi - naive magic control strategy",
    ", we apply magic compilation selectively . only the @xmath0 definite clauses in a typed feature grammar which define parse type goals",
    "are subject to magic compilation .",
    "the compilation applied to these clauses is identical to the magic compilation illustrated in section  [ sec2_1 ] except that we derive magic rules only for the right - hand side literals in a clause which are of a parse type .",
    "the definite clauses in the grammar defining non - parse type goals are not compiled as they will be processed using the top - down interpreter described in the next section .",
    "non - parse type goals are interpreted using the standard interpreter of the controll grammar development system  @xcite as developed and implemented by thilo gtz .",
    "this advanced top - down interpreter uses a search function that allows the user to specify the information on which the definite clauses in the grammar are indexed .",
    "an important advantage of deep multiple indexing is that the linguist does not have to take into account of processing criteria with respect to the organization of her / his data as is the case with a standard prolog search function which indexes on the functor of the first argument .",
    "another important feature of the top - down interpreter is its use of a selection function that interprets deterministic goals , i.  e. , goals which unify with the left - hand side literal of exactly one definite clause in the grammar , prior to non - deterministic goals .",
    "this is often referred to as incorporating _",
    "deterministic closure _  @xcite .",
    "deterministic closure accomplishes a reduction of the number of choice points that need to be set during processing to a minimum .",
    "furthermore , it leads to earlier failure detection .",
    "finally , the used top - down interpreter implements a powerful coroutining mechanism : at run time the processing of a goal is postponed in case it is insufficiently instantiated . whether or not a goal is sufficiently instantiated is determined on the basis of so - called _",
    "delay patterns_. these are specifications provided by the user that indicate which restricting information has to be available before a goal is processed .",
    "the definite clauses resulting from selective magic transformation are interpreted using a semi - naive bottom - up interpreter that is adapted in two respects .",
    "it ensures that non - parse type goals are interpreted using the advanced top - down interpreter , and it allows non - parse type goals that remain delayed locally to be passed in and out of sub - computations in a similar fashion as proposed by  @xcite . in order to accommodate these changes",
    "the adapted semi - naive interpreter enables the use of edges which specify delayed goals .",
    "figure  [ adapcompletion ] illustrates the adapted match operation .",
    "the first defining clause of match/3 passes delayed and non - parse type goals of the definite clause under consideration to the advanced top - down interpreter via the call to advanced_td_interpret/2 as the list of goals topdown .",
    "the second defining clause of match/3 is added to ensure all right - hand side literals are directly passed to the advanced top - down interpreter if none of them are of a parse type .",
    "allowing edges which specify delayed goals necessitates the adaption of the definition of edges/3 .",
    "when a parse type literal is matched against an edge in the table , the delayed goals specified by that edge need to be passed to the top - down interpreter .",
    "consider the definition of the predicate edges in figure  [ adapedges ] .",
    "the third argument of the definition of edges/4 is used to collect delayed goals .",
    "when there are no more parse type literals in the right - hand side of the definite clause under consideration , the second defining clause of edges/4 appends the collected delayed goals to the remaining non - parse type literals .",
    "subsequently , the resulting list of literals is passed up again for advanced top - down interpretation .",
    "the described parser was implemented as part of the controll grammar development system  @xcite .",
    "figure  [ setup1 ] shows the overall setup of the controll magic component .",
    "the controll magic component presupposes a parse type specification and a set of delay patterns to determine when non - parse type constraints are to be interpreted . at run - time",
    "the goal - directedness of the selective magic parser is further increased by means of using the phonology of the natural language expression to be parsed as specified by the initial goal to restrict the number of facts that are added to the table during initialization . only those facts in the grammar corresponding to lexical entries that have a value for their phonology feature that appears as part of the input string",
    "are used to initialize the table .",
    "the controll magic component was tested with a larger ( @xmath2 5000 lines ) hpsg grammar of a sizeable fragment of german .",
    "this grammar provides an analysis for simple and complex verb - second , verb - first and verb - last sentences with scrambling in the mittelfeld , extraposition phenomena , wh - movement and topicalization , integrated verb - first parentheticals , and an interface to an illocution theory , as well as the three kinds of infinitive constructions , nominal phrases , and adverbials  @xcite .    as the test grammar combines sub - strings in a non - concatenative fashion , a preprocessor",
    "is used that chunks the input string into linearization domains . this way the standard controll interpreter ( as described in section  [ advance ] ) achieves parsing times of around 1 - 5 seconds for 5 word sentences and 1060 seconds for 12 word sentences .",
    "the use of magic compilation on all grammar constraints , i.e. , tabling of all sub - computations , leads to an vast increase of parsing times .",
    "the selective magic hpsg parser , however , exhibits a significant speedup in many cases .",
    "for example , parsing with the module of the grammar implementing the analysis of nominal phrases is up to nine times faster . at the same time",
    "though selective magic hpsg parsing is sometimes significantly slower . for example , parsing of particular sentences exhibiting adverbial subordinate clauses and long extraction is sometimes more than nine times slower .",
    "we conjecture that these ambiguous results are due to the use of coroutining : as the test grammar was implemented using the standard controll interpreter , the delay patterns used presuppose a data - flow corresponding to advanced top - down control and are not fine - tuned with respect to the data - flow corresponding to the selective magic parser .",
    "coroutining is a flexible and powerful facility used in many grammar development systems and it will probably remain indispensable in dealing with many control problems despite its various disadvantages . the test results discussed above indicate that the comparison of parsing strategies can be seriously hampered by fine - tuning parsing using delay patterns .",
    "we believe therefore that further research into the systematics underlying coroutining would be desirable .",
    "we described a selective magic parser for typed feature grammars implementing hpsg that combines the advantages of dynamic bottom - up and advanced top - down control . as a result",
    "the parser avoids the efficiency problems resulting from the huge space requirements of storing intermediate results in parsing with large grammars .",
    "the parser allows the user to apply magic compilation to specific constraints in a grammar which as a result can be processed dynamically in a bottom - up and goal - directed fashion .",
    "state of the art top - down processing techniques are used to deal with the remaining constraints .",
    "we discussed various aspects concerning the implementation of the parser which was developed as part of the grammar development system controll .",
    "the author gratefully acknowledges the support of the sfb 340 project b4 `` from constraints to rules : efficient compilation of hpsg '' funded by the german science foundation , and the project  pset : practical simplification of english text \" , a three - year project funded by the uk engineering and physical sciences research council ( gr / l53175 ) , and apple computer inc .. the author wishes to thank dale gerdemann and erhard hinrichs and the anonymous reviewers for comments and discussion .",
    "of course , the author is responsible for all remaining errors .",
    "jochen drre .",
    "generalizing earley deduction for constraint - based grammars . in jochen drre and michael dorna ( eds . ) , 1993 . _",
    "computational aspects of constraint - based linguistic description i_. dyana-2 , deliverable r1.2.a .",
    "thilo gtz and detmar meurers .",
    "the controll system as large grammar development platform . in _ proceedings of the acl workshop on computational environments for grammar development and linguistic engineering _ ,",
    "madrid , spain .",
    "thilo gtz .",
    "1995 . compiling hpsg constraint grammars into logic programs . in _ proceedings of the workshop on computational logic for natural language processing _ ,",
    "edinburgh , uk .",
    "erhard hinrichs , detmar meurers , frank richter , manfred sailer , and heike winhart .",
    "ein hpsg - fragment des deutschen , teil 1 : theorie .",
    "technical report sfb 340  95 , university of tbingen , germany .",
    "guido minnen.1996.magic for filter optimization in dynamic bottom - up processing.in _ acl proceedings _ , santa cruz , california , usa .",
    "guido minnen .",
    "thesis , university of tbingen , germany . technical report",
    "sfb 340 nr .",
    "130 .",
    "raghu ramakrishnan , divesh srivastava , and s.  sudarshan .",
    "efficient bottom - up evaluation of logic programs . in joos",
    "vandewalle ( ed . ) , 1992 . _",
    "the state of the art in computer systems and software engineering_. kluwer academic publishers ."
  ],
  "abstract_text": [
    "<S> we propose a parser for constraint - logic grammars implementing hpsg that combines the advantages of dynamic bottom - up and advanced top - down control . </S>",
    "<S> the parser allows the user to apply magic compilation to specific constraints in a grammar which as a result can be processed dynamically in a bottom - up and goal - directed fashion . </S>",
    "<S> state of the art top - down processing techniques are used to deal with the remaining constraints . </S>",
    "<S> we discuss various aspects concerning the implementation of the parser as part of a grammar development system . </S>"
  ]
}
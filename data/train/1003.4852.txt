{
  "article_text": [
    "digital steganography is an information hiding application which consists of hiding data within a commonly used media in such a way that unintended recipients are not only unable to detect the presence of embedded data , but also given no reason for suspecting that anything is unusual .",
    "this is the main difference from encryption , which only prevents the adversary from decoding the message and not from suspecting that a secret message is being sent .",
    "_ matrix encoding _ is a steganographic method introduced by crandall  @xcite and analyzed by bierbrauer et al .",
    "@xcite , which requires the sender and the recipient to agree in advance on a parity check matrix @xmath3 , and the secret message is then extracted by the recipient as the syndrome ( with respect to @xmath3 ) of the received cover object .",
    "this method was made popular by westfeld  @xcite , who incorporated a specific implementation using hamming codes .",
    "the resulting method is known as the @xmath0 algorithm , and it can embed @xmath4 bits of message in @xmath5 cover symbols by changing , at most , one of them .    the following two parameters are used to evaluate the performance of a steganographic method over a cover message of @xmath6 symbols : the _ average distortion _",
    "@xmath7 , where @xmath8 is the expected number of changes over uniformly distributed messages ; and the _ embedding rate _",
    "@xmath9 , which is the amount of bits that can be hidden in a cover message . given two methods with the same embedding rate ,",
    "the one with smaller average distortion is better . following the terminology used by fridrich et al .",
    "@xcite , the tuple @xmath10 will be called _",
    "@xmath11-rate_.    as willems et al .",
    "in  @xcite , we will also assume that a discrete source produces a sequence @xmath12 , where @xmath6 is the block length , @xmath13 , and @xmath14 depends on the kind of source ( digital image , cd audio , etc ) .",
    "let @xmath15 be the message we want to hide into a host sequence @xmath16 , which produces a composite sequence @xmath17 , for @xmath18 and @xmath19 . the sequence @xmath20 is obtained from distorting @xmath16 , and that distortion will be assumed to be of squared - error type ( see  @xcite ) . in these conditions , information can be carried by the least significant bit ( lsb ) or by the two least significant bits of each @xmath21 .",
    "an appropriate solution for the first case comes from applying the @xmath0 algorithm  @xcite , which has been improved in  @xcite by using the kronecker product of the corresponding generator matrices of two binary perfect codes .",
    "the latter case is known as  @xmath2-steganography \" and the magnitude of changes is limited to @xmath22 , that is , @xmath23 , where @xmath24 .",
    "this case has usually involved the use of ternary codes  @xcite until the results from  @xcite , which introduces a method based on perfect @xmath1-linear codes .",
    "this kind of codes are not linear but have a representation using a parity check matrix that makes them as efficient as the hamming codes .",
    "the steganographic method therein presented not only outperforms the one obtained by direct sum of ternary hamming codes , but it also deals better with the _ extreme grayscale values problem_. that is , the problem we may have when the steganographic method requires adding one unit to a grayscale value which already has the maximum allowed value @xmath25 , or substracting one unit from a grayscale of value @xmath26 .",
    "let @xmath27 be the @xmath28-ary entropy function  @xcite on the interval @xmath29 $ ] , where @xmath30 is the usual binary entropy function on the interval @xmath31 $ ] .",
    "we call _ normalized embedding rate _ the ratio @xmath32 , where @xmath33 is the inverse of the @xmath28-ary entropy function @xmath34 . in the binary case , @xmath35 will be computed by considering the binary entropy function @xmath36 , whereas in the @xmath2-steganography the ternary entropy function @xmath37 is used .",
    "one of the purposes of steganographic methods is to approach the upper bound on the normalized embedding rate @xmath35 subject to the constraint of an average distortion @xmath38 .",
    "this upper bound on @xmath35 for a fixed @xmath38 is @xmath39 , and it is the same for any kind of steganography , be it binary or @xmath2-steganography .    in this paper",
    "we propose a technique based on products of perfect @xmath1-linear codes and compare its performance with that of the product binary perfect codes  @xcite and perfect @xmath1-linear codes  @xcite .",
    "the current paper has been organized as follows . some basic concepts on perfect @xmath1-linear codes , as well as the steganographic method based on these codes  @xcite ,",
    "are reviewed in section  [ sec : z2z4stegano ] .",
    "then , section  [ sec : ppcgeneral ] reviews the product perfect codes method  @xcite and presents a generalization that enhances its performance . in section  [ sec : productz2z4 ] , this generalization is used for @xmath1-additive perfect codes in @xmath2-steganography .",
    "finally , the paper is concluded in section  [ sec : conclusions ] .",
    "any non - empty subgroup @xmath40 of @xmath41 is a _ @xmath1-additive code _",
    ", where @xmath42 denotes the set of all binary vectors of length @xmath43 and @xmath44 is the set of all quaternary vectors of length @xmath45 .",
    "let @xmath46 be the usual _ gray map _ from @xmath47 onto @xmath48 , where @xmath49 , @xmath50 , @xmath51 , and @xmath52 ; and let @xmath53 be the _ extended gray map _",
    "given by @xmath54    a @xmath1-additive code @xmath40 is isomorphic to an abelian structure like @xmath55 .",
    "therefore , @xmath40 has @xmath56 codewords , where @xmath57 of them are of order two .",
    "we call such code @xmath40 a",
    "_ @xmath1-additive code of type @xmath58 _ and its binary image @xmath59 is a _",
    "@xmath1-linear code of type @xmath58_. note that the lee distance of a @xmath1-additive code @xmath40 coincides with the hamming distance of the @xmath1-linear code @xmath60 , and that the binary code @xmath60 may not be linear .",
    "the _ @xmath61-additive dual code _ of @xmath40 , denoted by @xmath62 , is defined as the set of vectors in @xmath41 that are orthogonal to every codeword in @xmath40 , being the definition of inner product in @xmath63 the following ( see  @xcite ) : @xmath64 where @xmath65 and computations are made considering the zeros and ones in the @xmath43 binary coordinates as quaternary zeros and ones , respectively .",
    "the binary code @xmath66 , of length @xmath67 , is called the _ @xmath61-dual code _ of @xmath60 .",
    "a @xmath1-additive code @xmath40 is said to be _ perfect _ if code @xmath59 is a perfect @xmath1-linear code , that is all vectors in @xmath68 are within distance one from a codeword and the distance between two codewords is , at least , @xmath69 .",
    "it is well known  @xcite that for any @xmath70 and each @xmath71 @xmath72 @xmath73 there exists a perfect @xmath1-linear code @xmath60 of binary length @xmath74 , such that its @xmath1-dual code is of type @xmath58 , where @xmath75 , @xmath76 and @xmath77 ( note that the binary length can be computed as @xmath67 ) .",
    "this allows us to write the parity check matrix @xmath78 of any @xmath1-additive perfect code @xmath40 for a given value of @xmath71 .",
    "matrix @xmath78 can be represented by taking as columns all possible vectors in @xmath79 , up to sign changes . in this representation , there are @xmath43 columns which correspond to the binary part of codewords in @xmath40 , and @xmath45 columns of order four which correspond to the quaternary part .",
    "we agree on a representation of the @xmath43 binary coordinates as coordinates in @xmath80 .",
    "let @xmath81 , for @xmath82 , denote the @xmath83-th column vector of @xmath78 .",
    "now we proceed to review how a perfect @xmath1-linear code @xmath59 can be used in steganography .",
    "consider its @xmath1-dual , of type @xmath58 , which gives us a parity check matrix @xmath78 with @xmath84 rows of order two and @xmath71 rows of order four .",
    "take @xmath85 and let @xmath86 be a source of grayscale symbols such that @xmath87 , where , for instance , @xmath88 for grayscale images .",
    "we assume each grayscale symbol @xmath21 is represented as a binary vector @xmath89 , obtained by first representing @xmath21 in base @xmath90 and then applying the gray map @xmath46 to every quaternary symbol in the base @xmath90 representation .",
    "for example , the grayscale value @xmath91 is represented as the quaternary vector @xmath92 , which then gives rise to the binary vector @xmath93 after applying the gray map @xmath46 .",
    "the @xmath6-length packet @xmath94 of symbols is translated into a vector @xmath95 of @xmath43 binary and @xmath45 quaternary coordinates .",
    "the binary coordinates come from taking the least significant bit of the binary representation of @xmath96 , that is @xmath97 , along with the two least significant bits @xmath98 of the following @xmath99 grayscale symbols @xmath21 .",
    "the quaternary coordinates of @xmath95 come from taking the two least significant bits of the last @xmath45 symbols @xmath21 and interpreting them as integer numbers @xmath100 in @xmath47 .",
    "the obtained vector @xmath101 is then distorted according to the matrix encoding method  @xcite in such a way that @xmath102 holds , where @xmath103 @xmath72 @xmath55 is the secret message we want to embed in @xmath94 , the value of @xmath104 can be @xmath105 , the syndrome vector of @xmath95 with respect to the parity check matrix @xmath78 is @xmath106 , and @xmath81 is a column vector in @xmath78 .",
    "this method also deals with the extreme grayscale values in a rather efficient way : when a symbol @xmath21 having an extreme value , be it @xmath26 or @xmath25 , has to be distorted in a way that would lead its value out of the range defined by @xmath107 , two other symbols are changed instead one magnitude .",
    "one of these symbols is always @xmath96 .",
    "this method has @xmath11-rate @xmath108 .",
    "we refer the reader to  @xcite for further details on this steganographic scheme .",
    "let @xmath109 be a finite field of @xmath28 elements , where @xmath28 is a prime power .",
    "let @xmath60 be a hamming code over @xmath109 of length @xmath110 and dimension @xmath111 .",
    "let @xmath112 , @xmath113 be , respectively , a generator matrix and a parity check matrix for @xmath60 .    the kronecker product of two matrices @xmath114 $ ] and @xmath115 $ ] over @xmath109 is a new matrix @xmath116 obtained by changing any element @xmath117 in @xmath118 by the matrix @xmath119 .",
    "the @xmath28-ary code @xmath120 , that is the dual of the code constructed by taking @xmath121 as generator matrix , is a @xmath122 $ ] code with covering radius @xmath123 ( see  @xcite ) .",
    "codewords of @xmath120 can be seen as @xmath124 matrices whose rows or columns are codewords in the @xmath28-ary hamming code @xmath60 .",
    "the @xmath28-ary code @xmath125 , constructed from the generator matrix @xmath126 is a @xmath127 $ ] code with covering radius @xmath128  @xcite , whose codewords can be seen as @xmath124 matrices where both rows and columns are codewords in the @xmath28-ary hamming code @xmath60 .",
    "we will refer to code @xmath125 as _",
    "product code_.    there is an efficient steganographic method  @xcite which uses the above defined code @xmath125 , for @xmath129 , to embed data .",
    "given two binary hamming codes of the same length @xmath74 , their product is considered , which gives a linear code of length @xmath130 and dimension @xmath131 .",
    "its codewords can be seen as @xmath132 matrices where every row and every column are codewords in the binary hamming code .",
    "the embedding scheme therefore consists of first taking blocks in the cover source of size @xmath132 , and then applying the @xmath0 algorithm to every row and also to the first @xmath133 columns , for @xmath134 .",
    "as proved in  @xcite , the performance one can obtain with this method is better than the one obtained by just using the conventional @xmath0 algorithm on the corresponding codes with the same average distortion .",
    "we refer to  @xcite for further details on this method .",
    "now , in this paper we will proceed with a generalization of the above procedure , by taking the product of more than two @xmath28-ary hamming codes .",
    "let @xmath60 be a @xmath28-ary hamming code of length @xmath135 , dimension @xmath111 , with generator matrix @xmath112 and parity check matrix @xmath113 , as defined at the beginning of this section .",
    "take the code @xmath136 of all the @xmath124 matrices such that all their rows , as well as their first column , are codewords in the @xmath28-ary hamming code @xmath60 .",
    "code @xmath136 is a @xmath137 $ ] code , @xmath138 with covering radius @xmath139 .    for the sake of a well understanding",
    ", the following reasoning will be limited to the binary case . however , a generalization to the @xmath28-ary case is straightforward .    just as the method based on the product of two hamming codes from  @xcite ,",
    "this procedure consists of a row embedding and a column embedding steps .",
    "we will take the lsb bit of every grayscale symbol in the cover source and form blocks of size @xmath124 , where @xmath74 .",
    "let @xmath140 be the coordinate in the @xmath83-th row and @xmath141-th column of these blocks , where @xmath142 .    1 .",
    "the matrix encoding standard procedure  @xcite applied to every row lets us embed @xmath143 bits with an average distortion of @xmath144 coordinates , thus giving a @xmath11-rate of @xmath145 .",
    "2 .   after processing all rows",
    ", we can embed @xmath143 additional bits with an average distortion of @xmath144 by applying the same standard procedure to the first column .",
    "+ however , note that the following situations can happen when processing this column : * no coordinate needs to be changed in @xmath144 cases because the first column may already have , by chance , the desired value .",
    "* we may need to change a coordinate @xmath146 in @xmath147 cases . in this case , the @xmath83-th row may have been already modified in the corresponding row embedding with a probability of @xmath147 , while it may have not been modified with a probability of @xmath144 .",
    "+ let us consider the @xmath83-th row was modified in the coordinate @xmath140 , for @xmath148 . in this case , we will also have to restore the original value of @xmath140 and distort another appropiate coordinate @xmath149 , for @xmath150 and @xmath151 , such that the distortion being introduced now by the column embedding is compensated and does not affect the embedding in the @xmath83-th row ( see lemma 2 from  @xcite ) .",
    "note that this situation is also including the case in which the coordinate that was modified during the @xmath83-th row embedding is precisely the coordinate @xmath146 we now need to change to embed data in the column . in summary ,",
    "if the @xmath83-th row was modified , no matter in which coordinate , the column embedding step will introduce one distortion besides the ones introduced by the row embedding step .",
    "+ otherwise , if during the column embedding we need to distort a coordinate @xmath146 and the @xmath83-th row was not modified , then we will also need to distort two more coordinates within the same row , @xmath140 and @xmath149 , for @xmath152 and @xmath153 , to make up for this distortion .",
    "hence , the column embedding step will be now introducing three changes .    in short ,",
    "we can leave invariant the average distortion of the row embedding step , but @xmath154 should be added for the embedding in the first column . note that this is only a tight upper bound on the average distortion , as we will later show .    by the method",
    "just described we can embed @xmath155 bits into the first column and also in every row of the matrix ; therefore , we embed @xmath156 bits in @xmath157 coordinates .",
    "the average distortion is upper bounded by @xmath154 for the coordinates in the first column and @xmath144 in each of the @xmath158 rows . summing this up , the average distortion is bounded by @xmath159 .",
    "the method we propose in the present paper consists of repeating over and over the same procedure .",
    "hence , we can generalize the computations of the average distortion and the embedding rate by using @xmath160 . in each step @xmath161 ,",
    "only the first column in the first component @xmath112 will be used to embed information .",
    "let @xmath162 be the average distortion at the @xmath163-th step . as computed before , we have @xmath164 and @xmath165 . in the general case",
    "we have : @xmath166 where @xmath167 .",
    "now , the overall average distortion can be computed as @xmath168 , which converges asymptotically very fast to @xmath169 as for the embedding rate , it can be computed as @xmath170 , which converges to @xmath171    finally , we obtain the asymptotical @xmath11-rate @xmath172 .    note that we are not able to generate an embedding scheme for any @xmath11-rate but only for natural values of @xmath155 .",
    "however , given any non - allowable parameter @xmath38 for the average distortion , we can always take two codes with @xmath11-rates @xmath173 and @xmath174 , where @xmath175 , such that their direct sum gives rise to a new @xmath11-rate @xmath10 , with @xmath176 and @xmath177 .    a comparison of the normalized embedding rate @xmath32 , where @xmath129 , as a function of the average distortion @xmath38 for the introduced kronecker product technique ( kp - technique ) and the standard matrix encoding procedures  @xcite is shown in  [ fig : graphickronecker ] . as explained before ,",
    "this plot has been made by first computing the allowable points @xmath178 , and then applying the direct sum between the codes corresponding to two contiguous points @xmath179 and @xmath180 , where @xmath181 .",
    "for the sake of simplicity , some particular cases which may produce a lower distortion have been omitted in the computation of the distortion in the above @xmath11-rate .",
    "for this reason , the distortion @xmath38 in that @xmath11-rate is an upper bound . as an example of one of these cases , recall that the column embedding step of our procedure is introducing three distortions when we need to change the @xmath146 coordinate and the @xmath83-th row was not modified in the row embedding step .",
    "note , however , that there is one particular case in which we may need to introduce two distortions instead of three .",
    "this happens when there exist two other coordinates in the same column , @xmath182 and @xmath183 , for @xmath184 and @xmath153 , whose distortion is equivalent to distort only @xmath146 , and both @xmath141-th and @xmath185-th rows were modified in the row embedding step .",
    "it is easy to see that we can distort coordinates @xmath182 and @xmath183 instead of @xmath146 , and perform afterwards the appropiate changes to compensate these distortions in the @xmath141-th and @xmath185-th rows , respectively .",
    "therefore , the column embedding step will be introducing two distortions besides the ones introduced in the row embedding step , and not three , as we previously stated . however , if no two other coordinates , @xmath182 and @xmath183 can be found such that both @xmath141-th and @xmath185-th rows were modified , then the column embedding step does actually introduce three distortions .",
    "we have implemented and executed a simulation of the embedding procedure described in this section which considers , among others , this particular case .",
    "for this reason the experimental results of the kronecker product technique ( `` kp - technique ( simulation ) '' in  [ fig : graphickronecker ] ) have lower average distortion than the results obtained from the above @xmath11-rate ( plotted as `` kp - technique '' in  [ fig : graphickronecker ] ) .     as a function of the average distortion @xmath38 , of steganographic methods based on the matrix encoding procedure  @xcite , and on the kronecker product technique , using an upper bound on the average distortion ( `` kp - technique '' ) and using the experimental results ( `` kp - technique ( simulation ) '' ) . ]",
    "the previous procedure deals with hamming codes .",
    "now , we will apply it to perfect @xmath1-linear codes .",
    "let @xmath40 be a @xmath1-additive perfect code of type @xmath58 and binary length @xmath74 , for @xmath186 , and let @xmath78 be its parity check matrix .",
    "take the code @xmath187 whose codewords are all the @xmath188 matrices , where @xmath85 , such that all rows are codewords in @xmath40 , and so is the first column after applying the inverse of the extended gray map @xmath189 .",
    "take blocks of @xmath188 grayscale symbols in the source ,    @xmath190    where @xmath85 , and translate them into @xmath158 vectors of @xmath43 binary and @xmath45 quaternary coordinates , as stated in section  [ sec : z2z4stegano ] and explained in depth in  @xcite . at the same time , the first coordinate of those @xmath158 vectors is making up a binary vector of length @xmath158 which can also be seen as a vector of @xmath43 binary and @xmath45 quaternary coordinates by means of the inverse of the extended gray map @xmath189 ( see section  [ sec : z2z4stegano ] ) .",
    "note that considering the @xmath158 rows and the first column , we end up having @xmath191 different vectors of binary length @xmath158 .",
    "the embedding procedure we will apply here is very similar to the kp - technique described in section  [ sec : ppcgeneral ] .",
    "once the @xmath191 vectors have been translated into @xmath191 vectors in @xmath192 , we will proceed by steps : first , we will apply the embedding scheme from  @xcite to every row , and then we will apply it to the first column . each distortion in the rows will involve adding or subtracting one unit to / from a grayscale symbol , and this requires considering the possibility of having extreme grayscale values problems . recall that , unlike vectors in rows , the vector in the first column is only made up of the least significant bit of @xmath158 grayscale symbols and not of their two least significant bits .",
    "this means that any distortion over a coordinate in this vector will involve a flip in the least significant bit of a grayscale symbol @xmath193 , for @xmath194 , which leads us to conclude that , unlike the rows embedding step , no extreme grayscale values problem will ever crop up during the column embedding step .    furthermore , as in the kp - technique from section  [ sec : ppcgeneral ] , during the column embedding step we have to consider different situations . the embedding method may require modifying a certain coordinate in the first column , and this coordinate may correspond to a row which was ( or was not ) modified during the row embedding step , or to a row that contains two distorted grayscale symbols , probably to deal with an extreme grayscale value problem . in any of these cases",
    "the action to be taken may vary , but still the aim is performing the appropriate changes in the affected row so that the distortion being introduced now by the column embedding step does not affect the embedding in the row . take any two column vectors @xmath195 of order four in matrix @xmath78 , such that one is the complementary of the other , that is @xmath196 , where @xmath197 is the all - twos vector .",
    "the changes above mentioned will consist of considering that any distortion in coordinate @xmath193 , for any @xmath194 , can be compensated either by doing @xmath198 and @xmath198 or by doing @xmath199 and @xmath199 .",
    "note that , whenever possible , we will avoid modifying those grayscale symbols associated with column vectors in @xmath78 that are complementary of themselves , because in this case we would have to distort the associated symbol in two units instead of one , which would not conform to @xmath2-steganography .    by means of this method",
    "we can embed @xmath155 bits into the first column @xmath200 and also in every row of the block . since the first column is made up of @xmath158 grayscale symbols and each row",
    "is made up of @xmath6 symbols , we are actually embedding @xmath156 bits in @xmath201 symbols .",
    "it is easy to see that an upper bound of the average distortion for the symbols in the first column is @xmath202 . as for the symbols in each row ,",
    "the average distortion is given by @xmath203 ( see section  [ sec : z2z4stegano ] ) .",
    "summing this up , an upper bound for the average distortion is @xmath204 @xmath205    in a similar way as we did in section  [ sec : ppcgeneral ] , we can repeat this method over and over and generalize the computations of the average distortion and the embedding rate by taking the code whose codewords are all the @xmath163-dimensional matrices , where @xmath206 , such that their rows and the first component of every dimension are codewords in the @xmath1-additive perfect code @xmath40 .",
    "let @xmath162 be the average distortion at the @xmath163-th step .",
    "for the first steps we have @xmath207 and @xmath208 . in the general case",
    "we have : @xmath209 where @xmath210 .",
    "now , the overall average distortion can be computed as @xmath211 , which converges asymptotically very fast to    @xmath212    as for the embedding rate , it can be computed as @xmath213 , which converges to @xmath214 .    finally , we obtain a @xmath11-rate of @xmath215 .    [",
    "fig : graphickroneckerz2z4 ] shows a comparison of the normalized embedding rate @xmath32 , for @xmath216 , as a function of the average distortion @xmath38 for the steganographic method based on perfect @xmath1-linear codes  @xcite , the one based on ternary hamming codes  @xcite,@xcite and the new method based on the product of perfect @xmath1-linear codes .",
    "recall that the distortion we have computed in the above @xmath11-rate is an upper bound on the average distortion , meaning that lower distortion can be achieved in some particular cases , as it happened in the simulation results from section  [ sec : ppcgeneral ] .     as a function of the average distortion @xmath38 , of steganographic methods based on @xmath1-additive perfect codes  @xcite ( `` z2z4-add .",
    "codes '' ) , on ternary hamming codes  @xcite,@xcite and on the product of @xmath1-additive perfect codes ( `` prod . of z2z4-add .",
    "codes '' ) . ]",
    "the use of perfect @xmath1-linear codes in @xmath2-steganography was first proposed in  @xcite .",
    "this method has a better performance compared to those based on the direct sum of ternary hamming codes from  @xcite and  @xcite , and also deals with the extreme grayscale values more efficiently .    in this paper",
    "we have presented a technique based on products of these perfect @xmath1-linear codes .",
    "therefore , the proposed method has all the advantages related to the performance and the processing of extreme grayscale values compared to the techniques based on the direct sum of ternary hamming codes .",
    "furthermore , we have shown that it performs better than the method in  @xcite .",
    "j.  bierbrauer and j.  fridrich ,  constructing good covering codes for applications in steganography \" , in transactions on data hiding and multimedia security iii , vol .",
    "4920 of lecture notes in computer science , pp .  1 - 22 , springer , berlin , germany , 2008 ."
  ],
  "abstract_text": [
    "<S> product perfect codes have been proven to enhance the performance of the @xmath0 steganographic method , whereas perfect @xmath1-linear codes have been recently introduced as an efficient way to embed data , conforming to the @xmath2-steganography . in this paper , we present two steganographic methods . on the one hand , a generalization of product perfect codes is made . </S>",
    "<S> on the other hand , this generalization is applied to perfect @xmath1-linear codes . finally , the performance of the proposed methods is evaluated and compared with those of the aforementioned schemes . </S>"
  ]
}
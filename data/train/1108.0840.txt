{
  "article_text": [
    "low - density parity - check ( ldpc ) codes , invented by gallager @xcite in the @xmath1s , constitute a hot research topic since they are a main competitor to turbo codes @xcite .",
    "recently , a connection between ldpc codes and codes based on graphs was shown ( see , for example , @xcite ) , which opens new perspectives in searching for powerful ldpc codes .",
    "moreover , coding theory methods can be applied in describing and searching for graphs better than previously known .",
    "for example , in @xcite compact representations based on convolutional ldpc codes for famous bipartite graphs such as heawood s , tutte s , and balaban s graphs@xcite are presented .",
    "typically , ldpc codes have a minimum distance which is less than that of the best known linear codes , but due to their structure they are suitable for low - complexity iterative decoding , like for example the believe - propagation algorithm .",
    "an important parameter determining the efficiency of iterative decoding algorithms for ldpc codes is the _ girth _ , which determines the number of independent iterations@xcite and is a parameter of the underlying graph .",
    "the minimum distance seems not to play an important role within iterative decoding algorithms , since the error - correcting capabilities of such a suboptimal procedure are often less than those guaranteed by the minimum distance .",
    "in fact , it was shown in @xcite that the performance of ldpc codes in the high signal - to - noise ( snr ) region is predominantly dictated by the structure of the smallest absorbing sets . however , as the size of these absorbing sets is upper - bounded by the minimum distance , ldpc codes with large minimum distance are of particular interest .",
    "ldpc codes can be characterized as either random / pseudo - random or nonrandom , where nonrandom codes can be subdivided into regular or irregular @xcite , while random / pseudo - random codes are always irregular @xcite .",
    "a @xmath2-regular ( nonrandom ) ldpc code is determined by a parity - check matrix with exactly @xmath3 ones in each column and exactly @xmath4 ones in each row .",
    "the class of quasi - cyclic ( qc ) @xmath5-regular ldpc codes is a subclass of regular ldpc codes with low encoding complexity .",
    "such codes are most suitable for algebraic design and are commonly constructed based on combinatorial approaches using either finite geometries @xcite or steiner triple systems @xcite , having girth @xmath6 . amongst other algebraic constructions leading to qc ldpc codes with larger girth",
    "we would like to mention @xcite , where a class of qc ldpc codes of rate @xmath7 with girth up to @xmath8 based on subgroups of the multiplicative group of the finite field @xmath9 was obtained .",
    "the same method was used for convolutional codes in @xcite .",
    "although qc ldpc codes are not asymptotically optimal they can outperform random or pseudorandom ldpc codes ( from asymptotically optimal ensembles ) for short or moderate block lengths @xcite .",
    "this motivates searching for good short qc ldpc codes .",
    "the problem of finding qc ldpc codes with large girth and large minimum distance for a wide range of code rates was considered in several papers , for example , @xcite .",
    "codes with girth at most @xmath8 are constructed in @xcite , while @xcite gives examples of rather short codes with girth @xmath10 .",
    "codes with girth up to @xmath11 with @xmath12 are presented in @xcite and it is shown that qc ldpc codes with girth @xmath13 and block length between @xmath14 and @xmath15 outperform random codes of the same block length and rate .    most of the papers devoted to constructing nonrandom ldpc codes with large girth combine some algebraic techniques and computer search . commonly these procedures start by choosing a proper base matrix ( also called weight or degree matrix ) or the corresponding base graph ( also called seed graph @xcite or protograph@xcite ) .",
    "the references @xcite are focused on all - ones base matrices , while in @xcite base matrices are constructed from steiner triple systems and integer lattices . in both cases ,",
    "a system of inequalities with integer coefficients describing all cycles of a given length is obtained and suitable labels or degrees are derived .",
    "for example , if we replace all nonzero entries in the base matrix by permutation matrices @xcite , circulant matrices @xcite , or sums of circulant matrices @xcite , we obtain the corresponding qc ldpc block codes . on the other hand , if we replace all nonzero entries in the base matrix by either monomials or binomials , we obtain the corresponding ( parent ) ldpc convolutional codes@xcite .    notice that both constructing the inequalities and the labeling require significant computational efforts . some methods directed towards reducing the computational complexity of these steps can be found in @xcite .",
    "parameters of the so far shortest qc ldpc block codes with @xmath16 and girth @xmath17 , and @xmath18 found via computer search are presented in @xcite , improving previous results from @xcite .    as mentioned earlier ,",
    "it is important that the constructed qc ldpc block codes have large minimum distance for achieving a suitable upper - bound on their error - correcting performance at high snr .",
    "it is proved in @xcite that the minimum distance of qc ldpc codes whose base parity - check matrices are @xmath19 all - one matrices is upper - bounded by @xmath20 .",
    "however , considering base matrices with zeros leads to qc ldpc codes with larger minimum distance .",
    "for example , in @xcite it is shown that replacing all nonzero entries in the base matrix by sums of circulants and all zero entries by all - zero matrices , increases the minimum distance of the resulting code while preserving its regularity .",
    "for ldpc convolutional codes this approach implies that a parity - check matrix contains binomials instead of monomials .",
    "the corresponding upper - bound on the minimum distance of such ldpc codes is presented in @xcite .",
    "a particular case of this upper - bound , valid only for codes with zeros and monomials is derived in @xcite .    in section  [ sec : 2 ] , we introduce notations for generator and parity - check matrices of convolutional codes and for their corresponding tailbiting block codes .",
    "section  [ sec : 3 ] focuses on bipartite graphs , biadjacency matrices , and their relation to parity - check matrices of ldpc block codes .",
    "our constructions of base and voltage matrices , used when searching for ldpc block codes with large girth , are introduced in section  [ sec : 4 ] .",
    "bounds on the girth and the minimum distance for qc @xmath5-regular ldpc block codes are discussed in section  [ sec : 5 ] .",
    "new search algorithms for qc ldpc block codes constructed from all - one matrices , steiner triple systems , and qc regular matrices are presented in section  [ sec : 6 ] . moreover , depending on the desired girth , algorithms of different complexity for constructing the set of inequalities and searching for suitable labelings are described .",
    "a new algorithm for computing the minimum distance of qc @xmath5-regular ldpc codes is described in section  [ sec : 7 ] and used to compute the minimum distance of our newly found codes .",
    "moreover , we determined the hitherto unknown minimum distance for some of the shortest known ldpc codes given in @xcite . in section  [ sec :",
    "8 ] , we present new examples of @xmath5-regular qc ldpc codes in the form of tailbiting ldpc codes with girth between @xmath18 and @xmath0 .",
    "this representation is compact and it is possible to apply low - complexity encoding , searching , and decoding procedures well developed for convolutional and tailbiting block codes @xcite . in particular , the presented codes with girth @xmath18 and @xmath8 are shorter than the codes presented in @xcite and @xcite , respectively .",
    "moreover , our codes with girth @xmath10 to @xmath11 are shorter than the corresponding codes presented in @xcite . section  [ sec : 9 ] concludes the paper with some final remarks .",
    "consider a rate @xmath21 binary convolutional code @xmath22 with the semi - infinite generator matrix    rcl [ eq : semi - infinite - generator - matrix ] g & = & (    ccccccc g_0 & g_1 &  & & g_m_g + & g_0 & g_1 &  & & g_m_g + & & & & & &    )    of memory @xmath23 where @xmath24 , @xmath25 , are @xmath26 binary matrices .",
    "its semi - infinite syndrome former    rcl h^t & = & (    ccccccc h^t_0 & h^t_1 &  & & h^t_m + & h^t_0 & h^t_1 &  & & h^t_m + & & & & & &    )    of memory @xmath27 , where in general @xmath28 , @xmath29 , @xmath30 , are @xmath31 binary matrices , and @xmath32 denotes transpose . clearly @xmath33 and @xmath34 satisfy    rcl [ eq : gh - equal - zero ] g h^t & = & @xmath35    and    rcl @xmath36 h^t & = & @xmath35    where    rcl @xmath36 & = & @xmath37 g    is the code sequence and @xmath38 is the information sequence .",
    "next we tailbite the semi - infinite generator matrix to length @xmath39 @xmath40-tuples , where @xmath41 .",
    "then we obtain the @xmath42 generator matrix of the quasi - cyclic ( qc ) block code @xmath43 as    rcl [ eq : tb - generator - matrix ] g _ & = & (    ccccccccc g_0 & g_1 &  & & g_m_g + & g_0 & g_1 &  & & g_m_g + & & & & & & + & & & g_0 & g_1 &  & & g_m_g + g_m_g & & & & g_0 & g_1 &  & g_m_g - 1 + g_m_g - 1 & g_m_g & & & & & & + & & & & & & & g_1 + g_1 & g_2 &  & g_m_g & & & & g_0    )    every cyclic shift of a codeword of @xmath43 by @xmath40 places modulo @xmath44 is a codeword .",
    "the corresponding tailbiting parity - check matrix is the @xmath45 matrix    rcl [ eq : tb - parity - check - matrix ] h _ & = & (    ccccccccc h_0 & & & & h_m & h_m-1 &  & h_1 + h_1 & h_0 & & & & h_m & & h_2 + & h_1 & & & & & & + & & & h_0 & & & & h_m + h_m & & & h_1 & h_0 & & & + & h_m & & & h_1 & & & + & & & & & & & + & & & h_m & h_m-1 &  & h_1 & h_0    )    it is easily shown that @xmath46 and @xmath47 satisfy    rcl g _ h_^t & = & @xmath35    given that is fulfilled .",
    "the parity - check matrix for the convolutional code @xmath22 can also be written as the @xmath31 polynomial matrix    rcl h(d ) & = & h_0 + h_1 d + h_2 d^2 + + h_m d^m    or , equivalently , as    rcl [ eq : convolutional - parity - check - matrix ] h(d ) & = & (    cccc h_11(d ) & h_12(d ) &  & h_1c(d ) + h_21(d ) & h_22(d ) &  & h_2c(d ) + & & + h_(c - b)1(d ) & h_(c - b)2(d ) &  & h_(c - b)c(d )    )    in the sequel we mostly consider parity - check matrices with only monomial entries @xmath48 of degree @xmath49 , where @xmath49 are nonnegative integers .",
    "clearly , such a parity - check matrix @xmath50 can be represented by its _ degree matrix _ @xmath51 , @xmath52 and @xmath53 .",
    "note that starting from section  [ sec : 8 ] we will relax the restriction to only monomial entries and also include zero entries .",
    "[ ex : 1 ] consider the rate @xmath54 convolutional code @xmath22 with parity - check matrix    c [ eq : example_conv_parity_check ] h(d ) = (    cccc 1 & 1 & 1 & 1 + 1 & 1 & d & d + 1 & d & 1 & d    )    whose degree matrix is    c w = (    cccc 0 & 0 & 0 & 0 + 0 & 0 & 1 & 1 + 0 & 1 & 0 & 1    )    tailbiting to length @xmath55 , we obtain the tailbitten @xmath56 parity - check matrix of a qc ldpc block code    rcl [ eq : example_tb_parity_check ] h_tb & = &    in particular , every cyclic shift of a codeword by @xmath57 places modulo @xmath58 is a codeword .    due to the restriction to monomial entries in @xmath50",
    ", @xmath47 is @xmath2__-regular _ _ , that is , it has exactly @xmath3 and @xmath4 ones in each column and row , respectively . moreover , to fulfill the _ low _ density criterion , @xmath39 has to be much larger than @xmath3 and @xmath4 , and thus the matrix @xmath47 is sparse .",
    "note that the first @xmath40 columns of @xmath47 are repeated throughout the whole matrix in a cyclicly shifted manner . by reordering the columns as @xmath59 , @xmath60 , _ etc .  _ and the rows as @xmath61 , @xmath62 , _ etc .",
    "_ we obtain a parity - check matrix of an equivalent @xmath5-regular ldpc block code constructed from circulant matrices    rcl [ eq : circulant - ldpc_parity - check - matrix ] h _ & = & (    llll i_w_11 & i_w_12 & & i_w_1c + i_w_21 & i_w_22 & & i_w_2c + & & & + i_w_(c - b)1 & i_w_(c - b)2 & & i_w_(c - b)c +    )    where @xmath49 are the entries of the degree matrix @xmath63 and @xmath64 denotes an @xmath65 _ circulant matrix _ , that is , an identity matrix with its rows shifted cyclically to the left by @xmath49 positions . note , that the @xmath5-regular ldpc block code determined by @xmath66 is not quasi - cyclic , although equivalent to the qc block code determined by @xmath47 .    1 we return to in example  [ ex : 1 ] and",
    "reorder the columns as @xmath67 and the rows as @xmath68 .",
    "then we obtain the equivalent rate @xmath69 @xmath70-regular ldpc block code with parity - check matrix    rl [ eq : example_tb_qc_parity_check ]    c + h _",
    "a graph @xmath71 is determined by a set of _ vertices _ @xmath72 and a set of _ edges _ @xmath73 , where each edge connects exactly two vertices .",
    "the _ degree of a vertex _ denotes the number of edges that are connected to it . if all vertices have the same degree @xmath40 , the _ degree of the graph _ is @xmath40 , or , in other words , the graph is @xmath40-_regular_.    consider the set of vertices @xmath74 of a graph partitioned into @xmath75 disjoint subsets @xmath76 , @xmath77 .",
    "such a graph is said to be @xmath75-_partite _ , if no edge connects two vertices from the same set @xmath76 , @xmath77 .",
    "a _ path _ of length @xmath78 in a graph is an alternating sequence of @xmath79 vertices @xmath80 , @xmath81 , and @xmath78 edges @xmath82 , @xmath83 , with @xmath84 .",
    "if the first and the final vertex coincide , that is , if @xmath85 , then we obtain a _ cycle_. a cycle",
    "is called _ simple _ if all its vertices and edges are distinct , except for the first and final vertex which coincide .",
    "the length of the shortest simple cycle is denoted the _ girth _ of the graph . in @xcite",
    "it was proven that the girth of a graph coincide with the minimum distance of the block code , whose parity - check matrix corresponds to the _ incidence matrix _ of the graph . moreover",
    ", the girth determines the number of independent iterations in belief - propagation decoding @xcite .",
    "every parity - check matrix @xmath34 of a rate @xmath86 ldpc block code can be interpreted as the _ _ biadjacency matrix__@xcite of a bipartite graph , the so - called _ tanner graph _ @xcite , having two disjoint subsets @xmath87 and @xmath88 containing @xmath89 and @xmath90 vertices , respectively .",
    "the @xmath89 vertices in @xmath87 are called _ symbol nodes _ , while the @xmath90 vertices in @xmath88 are called _ constraint nodes_.",
    "if the underlying ldpc block code is @xmath5-regular , the symbol and constraint nodes have degree @xmath3 and @xmath4 , respectively .",
    "consider the tanner graph with the biadjacency matrix @xmath47 , corresponding to a qc @xmath5-regular ldpc code , obtained from the parity - check matrix of a tailbiting ldpc block code . clearly , by letting the tailbiting length @xmath39 tend to infinity",
    ", we obtain a convolutional parity - check matrix @xmath50 of the parent convolutional code @xmath22 . in terms of tanner graph representations",
    ", this procedure corresponds to unwrapping the underlying graph and extending it in the time domain towards infinity .",
    "hereinafter , we will call the girth of this infinite tanner graph the _ free girth _ and denote it @xmath91 .    in 1,2,3, ... ,8 coordinate ( s ) at ( 1.1 * , 3 ) ; in 1,2,3, ... ,6 coordinate ( c ) at ( 1.3*+0.6 , 0 ) ; ( c1 )  ( s1 ) ; ( c1 )  ( s2 ) ; ( c1 ) ",
    "( s3 ) ; ( c1 )  ( s4 ) ; ( c2 )  ( s1 ) ; ( c2 )  ( s2 ) ; ( c2 )  ( s7 ) ; ( c2 )  ( s8 ) ; ( c3 )  ( s1 ) ; ( c3 )  ( s3 ) ; ( c3 )  ( s6 ) ; ( c3 )  ( s8 ) ; ( c4 )  ( s5 ) ; ( c4 )  ( s6 ) ; ( c4 )  ( s7 ) ; ( c4 )  ( s8 ) ; ( c5 )  ( s3 ) ; ( c5 )  ( s4 ) ; ( c5 )  ( s5 ) ; ( c5 )  ( s6 ) ; ( c6 )  ( s2 ) ; ( c6 )  ( s4 ) ; ( c6 )  ( s5 ) ; ( c6 ) ",
    "( s7 ) ; in 1,2,3, ... ,8 ( s ) circle ( 3pt ) ; at ( @xmath92 ) ( 0,0)[b]@xmath93 ; in 1,2,3, ... ,6 ( c ) circle ( 3pt ) ; at ( @xmath94 ) ( 0,0)[t]@xmath95 ;    1 interpreting as a biadjacency matrix , we obtain the corresponding tanner graph @xmath71 as illustrated in fig .  [ fig : example_graph ] with @xmath96 symbol nodes and @xmath97 constraint nodes , having girth @xmath98 .",
    "a binary matrix @xmath99 is called _ base matrix _ for a tailbiting ldpc block code if its parent convolutional code with parity - check matrix @xmath50 has only monomial or zero entries and satisfies    c b = h(d)|_d=1    that is , all nonzero entries in @xmath50 are replaced by @xmath100 .",
    "different tailbiting ldpc block codes can have the same base matrix @xmath99 .    the _ base graph _",
    "@xmath101 follows as the bipartite graph , whose biadjacency matrix is given by the base matrix @xmath99 .",
    "denote the girth of such a base graph @xmath102 .",
    "the terminology `` base graph '' originates from graph theory and is used , for example , in @xcite .",
    "it differs from the terminology used in @xcite , where _ protograph _ or _ seed graph _ are used .    consider the additive group @xmath103 , where @xmath104 . from the base graph @xmath105",
    "we obtain the _ voltage graph _",
    "@xcite @xmath106 by assigning a voltage value @xmath107 to the edge @xmath108 connecting the vertices @xmath109 and @xmath110 , satisfying the property @xmath111 .",
    "although the graph is not directed , the voltage of the edge depends on the direction in which the edge is passed .",
    "finally , define the _ voltage of the path _ to be the sum of the voltages of its edges .",
    "let @xmath112 be a _ lifted graph _ obtained from a voltage graph @xmath113 , where @xmath114 and @xmath115 .",
    "two vertices @xmath116 and @xmath117 are connected in the lifted graph by an edge if and only if @xmath109 and @xmath110 are connected in the voltage graph @xmath113 with the voltage value of the corresponding edge given by @xmath118 .",
    "it is easy to see that cycles in the lifted graph correspond to cycles in the voltage graph with zero voltage .",
    "consequently , the girth @xmath119 of a voltage graph follows as the length of its shortest cycle with voltage zero , which is equal to the free girth @xmath91 @xcite .",
    "a voltage assignment corresponds directly to selecting the degrees of the parity - check monomials in @xmath50 .    in the following we start from a base graph @xmath101 and",
    "use a voltage assignment based on the monomial degrees @xmath49 of the degree matrix @xmath63 to determine the corresponding voltage graph @xmath113 .",
    "the edge voltage from the constraint node @xmath120 to the symbol node @xmath121 is denoted by @xmath122 while the opposite direction from symbol node @xmath121 to constraint node @xmath120 follows as @xmath123 , @xmath124 and @xmath53 , where    c [ eq : voltage_labeling ] \\ {    rcl _",
    "i j & = & w_ij +     .",
    "when searching for ldpc convolutional codes with given free girth @xmath91 , we use integer edge voltages , that is , we deal with an infinite additive group .",
    "however , when searching for qc ldpc block codes with given girth @xmath125 , obtained by tailbiting a parent convolutional code to length @xmath39 , we use a group of modulo @xmath39 residues , that is , is replaced by    c [ eq : voltage_labeling_mod_m ] \\ {    rcll _",
    "i j & = & w_ij & m +     .",
    "the definitions of path and cycle in a voltage graph coincide with those in a regular graph , except for the additional restriction that two neighboring edges may not connect the same nodes in reversed order .",
    "the _ voltage _ of a path or cycle within a voltage graph , follows as the sum of all edge voltages involved .    in 1,2,3,4",
    "coordinate ( s ) at ( 2.5 * , 2.7 ) ; in 1,2,3 coordinate ( c ) at ( 2.5*+1.25 , 0 ) ; ( c1 )  ( s1 ) [ xshift=-5pt ] node[pos=0.3]@xmath126 ; ( c1 )  ( s2 ) [ xshift=-5pt ] node[pos=0.9]@xmath126 ; ( c1 )  ( s3 ) [ xshift=-8pt ] node[pos=0.9]@xmath126 ; ( c1 )  ( @xmath127 ) [ xshift=-10pt ] node[pos=0.95]@xmath126 ;    ( c2 )  ( s1 ) [ xshift=-6pt ] node[pos=0.6]@xmath126 ; ( c2 )  ( s2 ) [ xshift=-4pt ] node[pos=0.7]@xmath126 ; ( c2 )  ( s3 ) [ xshift=+4pt ] node[pos=0.7]@xmath128 ; ( c2 )  ( s4 ) [ xshift=+6pt ] node[pos=0.6]@xmath128 ;    ( c3 ) ",
    "( @xmath129 ) [ xshift=+10pt ] node[pos=0.95]@xmath126 ; ( c3 )  ( s2 ) [ xshift=+8pt ] node[pos=0.9]@xmath128 ; ( c3 )  ( s3 ) [ xshift=+5pt ] node[pos=0.9]@xmath126 ; ( c3 )  ( s4 ) [ xshift=+5pt ] node[pos=0.3]@xmath128 ; in 1,2,3,4 ( s ) circle ( 5pt ) ; at ( @xmath92 ) ( 0,0)[b]@xmath93 ; in 1,2,3 ( c ) circle ( 5pt ) ; at ( @xmath94 ) ( 0,0)[t]@xmath95 ;    1 the bipartite graph whose biadjacency matrix is given by the base matrix @xmath99 of the rate @xmath54 @xmath130-regular ldpc convolutional code @xmath22 is illustrated in fig .",
    "[ fig : voltage_graph ] . as the edges are labeled",
    "according to , fig .",
    "[ fig : voltage_graph ] corresponds to a voltage graph with girth @xmath131 ( for example , @xmath132 @xmath133 @xmath134 @xmath133 @xmath135 @xmath133 @xmath136 @xmath133 @xmath132 )",
    ". the edge from , for example , constraint node @xmath136 to symbol node @xmath137 is labeled according to    rclclcl _ 23 & = & -|_32 & = & w_23 & = & 1    as the free girth of the infinite tanner graph , corresponding to the parent convolutional code @xmath22 , determined by the convolutional parity - check matrix @xmath50 is equal to the girth of the voltage graph , we can conclude that @xmath138 .",
    "if we neglect all edge labels , we would obtain the corresponding base graph .",
    "there are a number of approaches which can be applied to construct and search for qc @xmath140-regular ldpc block and convolutional codes @xcite or the bipartite graphs constructed by their incidence matrices . since every ldpc convolutional code can be represented by a bipartite tanner graph using the biadjacency matrix , these techniques can be applied to @xmath141 qc ldpc codes .",
    "moreover , bounds on the girth and the minimum distance of @xmath140 qc ldpc codes @xcite can be generalized to an arbitrary @xmath3 .",
    "[ th : one ] the minimum distance @xmath142 and the girth @xmath125 of an @xmath143 qc ldpc block code @xmath43 obtained from a rate @xmath21 convolutional code @xmath22 with free distance @xmath144 and girth @xmath145 by tailbiting to length @xmath39 are upper - bounded by the inequalities    rcl d_min & & d_free + g & & g_free    the first statement follows directly from the fact that any codeword @xmath146 of the tailbiting block code @xmath43 , obtained from the parity - check matrix @xmath50 of the parent convolutional code @xmath22 , satisfies    c [ eq : proof_theorem_1 ] @xmath36(d ) h^t(d ) = @xmath35 ( d^m-1 )    since the parent convolutional code @xmath22 satisfies without reduction modulo @xmath147 and reducing modulo @xmath147 does not increase the weight of a polynomial , the first statement follows directly .    for the second statement",
    "we consider the voltage graph @xmath113 representation of the parent convolutional code @xmath22 with girth @xmath148 together with the tanner graph representation of the qc ldpc block code @xmath43 with girth @xmath125 .",
    "similar to the relations between the free distance @xmath144 and the minimum distance @xmath142 , there exists a relation between each cycle within the voltage graph @xmath113 of the parent convolutional code and the tanner graph @xmath71 of the corresponding block code obtained by tailbiting to length @xmath39 .",
    "the edge voltages for every cycle in @xmath113 have to sum up to zero .",
    "similarly , every cycle in @xmath71 corresponds to a cycle in @xmath113 such that its edge voltages have to sum up to zero modulo @xmath39 . with the same argument as before it follows directly that    rclcl g & & g _ & = & g _    in @xcite a lower bound on the girth of a voltage graph @xmath119 was found via the girth of the corresponding base graph @xmath102 for ordinary graphs .",
    "it is straightforward to generalize this bound :    consider a base graph of a qc @xmath139-regular ldpc convolutional code with girth @xmath102 and let @xmath149 denote the @xmath150th generalized minimum hamming distance of the linear @xmath151 block code determined by the parity - check matrix which corresponds to the incidence matrix of the tanner graph . in order words",
    ", @xmath149 corresponds to the number of nontrivial ( not identically zero ) positions of an @xmath150-dimensional linear subcode .",
    "[ th : two ] there exist a tailbiting length @xmath39 and a voltage assignment , such that the girth @xmath125 of the tanner graph for the corresponding tb block code of length @xmath152 satisfies the inequality    rclcl [ eq : girth_lower_bound ] g & & 2 \\ { g _ + g_/2 , d_2 } & & 3 g _    where @xmath153 is the second generalized minimum hamming distance , that is , the minimum support of a subcode of dimension two .",
    "we have equality in , if the underlying base graph consists of two connected cycles , having at least one common vertex .",
    "according to theorem  [ th : one ] , any cycle in the tanner graph of a qc ldpc block code corresponds to a cycle of the same length in the voltage graph .",
    "as the labels of the voltage tanner graph can be freely chosen , it is enough to prove that there is no zero cycle shorter than @xmath154 , that is , no such cycle whose voltage is zero regardless of the labeling of the base graph . in particular ,",
    "such a cycle is also known as an _ inevitable cycle _ @xcite or _ balanced cycle _ @xcite .",
    "the number of times each edge in such a cycle of the voltage graph is passed in different directions has to be even .",
    "this cycle can not be simple , since in a simple cycle each edge is passed in one direction only .",
    "hence , the cycle passes through the vertices of a subgraph which contains at least two different cycles , corresponding to two different nonzero codewords .",
    "the minimum distance of the base graph is @xmath102 , and , according to the griesmer bound , the smallest length of a linear code with two nonzero codewords of minimum distance @xmath155 is @xmath156 , and , hence , the first lower bound of inequality follows .",
    "consider the second lower bound .",
    "the definition of the second generalized minimum hamming distance implies that the smallest subgraph with two cycles has to have at least @xmath153 edges .",
    "thus , the second of the two lower bounds gives the precise value of the girth of a subgraph containing two connected cycles , having at least one common vertex .",
    "otherwise , @xmath153 is a lower bound .    the bounds are tighter than the @xmath157 bound @xcite but not tight if the shortest non - simple cycle consists of two simple cycles connected by a path",
    ".    finally , we want to recall an upper bound on the achievable girth and minimum distance .",
    "we start by reformulating the theorem on the achievable girth by fossorier @xcite and thereby generalize it to include base matrices with zero elements .",
    "[ th : three - a ] consider the parity - check matrix @xmath50 of a rate @xmath21 convolutional code with base matrix @xmath99 .",
    "denote the corresponding base graph @xmath101 and let @xmath158 be the @xmath159 submatrix @xmath160 if the base matrix @xmath99 , after possibly reordering its rows and columns , contains the submatrix @xmath158 , then the girth @xmath119 of the corresponding voltage graph @xmath113 is upper - bounded by @xmath161 regardless of the voltage assignment .",
    "the subgraph determined by the @xmath159 submatrix @xmath158 contains @xmath162 symbol nodes , @xmath163 constraint nodes , and @xmath97 edges .",
    "moreover , there exist @xmath162 shortest cycles of length @xmath164 .",
    "thus , the base graph @xmath101 has girth @xmath165 and its second generalized hamming distance is @xmath166 . applying theorem  [ th : two ] , we obtain the precise value of the achievable girth as @xmath167 , which completes the proof .    for parity - check matrices with only nonzero monomial entries ,",
    "the inequality was proven in @xcite .",
    "moreover , let @xmath50 be the parity - check matrix of a rate @xmath21 @xmath5-regular ldpc convolutional code with free distance @xmath144 . by tailbiting to length @xmath39",
    "we obtain a qc ldpc block code of block length @xmath44 and minimum distance @xmath142 .",
    "as proven in @xcite for parity - check matrices without zero elements and reformulated in @xcite for parity - check matrices with zero elements , the corresponding minimum distance @xmath142 can be upper - bounded by @xmath168 for parity - check matrices with only nonzero monomials , the inequality simplifies to @xmath20 .",
    "when searching for qc ldpc block codes with large girth , we start from a base graph of a rate @xmath21 @xmath5-regular ldpc convolutional code . using the following algorithm",
    ", we determine a suitable voltage assignment based on the group of nonnegative integers , such that the girth of this voltage graph is greater than or equal to a given girth @xmath125 .",
    "afterwards we replace all edge labels by their corresponding modulo @xmath39 residuals , where we try to minimize @xmath39 while preserving the girth @xmath125 . using the concept of biadjacency matrices leads to the corresponding degree matrix @xmath63 and we obtain the parity - check matrix of a convolutional code whose bipartite graph has girth @xmath169 .",
    "tailbiting to lengths @xmath39 , yields the rate @xmath170 qc ldpc block code whose parity - check matrix is equal to the biadjacency matrix of a bipartite graph with girth @xmath125 .    the algorithm for determining a suitable voltage assignment for a base graph consists of the following two main steps :    1 .",
    "construct a list containing all inequalities describing cycles of length smaller than @xmath125 within the base graph .",
    "search for such a voltage assignment of the base graph that all inequalities are satisfied .",
    "the efficiency of the second step , searching for a suitable voltage assignment , depends on the chosen representation for the list of inequalities determined during the first step . in general , when searching for all cycles of length @xmath125 roughly @xmath171 different paths have been considered .",
    "however , by using a similar idea as in @xcite when searching for a path within a trellis , we create a tree of maximum depth @xmath172 and search only for identical nodes within the tree and thereby reduce the complexity to roughly @xmath173 .      utilizing the base graph of a rate @xmath21 @xmath5-regular ldpc convolutional code , with @xmath40 symbol and @xmath174 constraint nodes , we construct a separate subtree starting with each of the @xmath40 symbol nodes .    before describing the algorithm",
    ", we have to introduce some notations .",
    "a node in the tree will be denoted by @xmath175 and has a unique parent node @xmath176 .",
    "the underlying base graph is bipartite , that is , every node @xmath175 in the tree with @xmath177 is only connected to nodes @xmath178 with @xmath179 , @xmath180 , where @xmath181 and @xmath182 are the sets of symbol and constraint nodes , respectively . in other words ,",
    "a symbol node is only connected to constraint nodes and vice versa .",
    "moreover , every node @xmath175 is characterized by its depth @xmath183 and its number @xmath184 , where @xmath185 follows directly from @xmath186 or @xmath187 depending on whether its depth @xmath183 is even or odd . in particular ,",
    "@xmath188 .",
    "having introduced those basic notations , we can grow @xmath40 separate subtrees , with the root node @xmath189 of the @xmath190th subtree being initialized with @xmath191 and depth @xmath192 .",
    "extend every node @xmath177 at depth @xmath193 with @xmath194 by connecting it with the nodes @xmath195 at depth @xmath196 according to the underlying base graph , except @xmath197 which is already connected to @xmath175 at depth @xmath198 .",
    "finally we label the edges according to and obtain the voltage for node @xmath175 in the @xmath190th subtree as the sum of the edge voltages of the path @xmath199 .    in 1,2,3,4",
    "coordinate ( s ) at ( 2.5 * , 2.7 ) ; in 1,2,3 coordinate ( c ) at ( 2.5*+1.25 , 0 ) ; ( c1 )  ( s1 ) [ xshift=-10pt ] node[pos=0.3]@xmath200 ; ( c1 )  ( s2 ) [ xshift=-10pt ] node[pos=0.9]@xmath201 ; ( c1 ) ",
    "( s3 ) [ xshift=-13pt ] node[pos=0.9]@xmath202 ; ( c1 )  ( @xmath127 ) [ xshift=-15pt ] node[pos=0.95]@xmath203 ;    ( c2 )  ( s1 ) [ xshift=-10pt ] node[pos=0.6]@xmath204 ; ( c2 )  ( s2 ) [ xshift=-9pt ] node[pos=0.7]@xmath205 ; ( c2 )  ( s3 ) [ xshift=+11pt ] node[pos=0.7]@xmath206 ; ( c2 )  ( s4 ) [ xshift=+13pt ] node[pos=0.6]@xmath207 ;    ( c3 )  ( @xmath129 ) [ xshift=+14pt ] node[pos=0.95]@xmath208 ; ( c3 )  ( s2 ) [ xshift=+12pt ] node[pos=0.9]@xmath209 ; ( c3 ) ",
    "( s3 ) [ xshift=+11pt ] node[pos=0.9]@xmath210 ; ( c3 )  ( s4 ) [ xshift=+11pt ] node[pos=0.3]@xmath211 ; in 1,2,3,4 ( s ) circle ( 5pt ) ; at ( @xmath92 ) ( 0,0)[b]@xmath93 ; in 1,2,3 ( c ) circle ( 5pt ) ; at ( @xmath94 ) ( 0,0)[t]@xmath95 ;",
    "coordinate ( start ) at ( 0 , 5.6 ) ; ( start ) circle ( 5pt ) ; at ( @xmath212 ) @xmath132 ; in 1,2,3 coordinate ( c ) at ( 2.8 , 2.8 * ) ; in 2,3,4 coordinate ( s ) at ( 5 , 2.8 * -2.4 + 0.8 * ) ;    ( start )  ( c1 )",
    "[ xshift=+14pt ] node[pos=0.4]@xmath213 ; ( start )  ( c2 ) [ yshift=+5pt , xshift=+14pt ] node[pos=0.4]@xmath214 ; ( start )  ( c3 ) [ xshift=+14pt ] node[pos=0.4]@xmath215 ;    ( c1 )  ( s12 ) [ yshift=-5pt ] node[pos=0.4]@xmath201 ; ( c1 )  ( s13 ) [ yshift=+5pt ] node[pos=0.65]@xmath202 ; ( c1 )  ( s14 ) [ yshift=+9pt ] node[pos=0.4]@xmath203 ;    ( c2 )  ( s22 ) [ yshift=-5pt ] node[pos=0.4]@xmath205 ; ( c2 )  ( s23 ) [ yshift=+5pt ] node[pos=0.65]@xmath206 ; ( c2 )  ( s24 ) [ yshift=+9pt ] node[pos=0.4]@xmath207 ;    ( c3 ) ",
    "( s32 ) [ yshift=-5pt ] node[pos=0.4]@xmath209 ; ( c3 )  ( s33 ) [ yshift=+5pt ] node[pos=0.65]@xmath210 ; ( c3 )  ( s34 ) [ yshift=+9pt ] node[pos=0.4]@xmath211 ;    in 1,2,3 ( c ) circle ( 5pt ) ; at ( @xmath216 ) @xmath95 ; in 2,3,4 ( s ) circle ( 5pt ) ; at ( @xmath217 ) @xmath218 ;    clearly , all subtrees together contain all paths of a given length in the voltage graph .",
    "moreover , taking into account that the girth @xmath125 of bipartite graphs is always even , we can conclude that in order to check all possible cycles of length at most @xmath219 in the voltage graph , it is sufficient to grow the corresponding @xmath40 subtrees up to depth @xmath220 and to construct voltage inequalities for all node pairs @xmath221 in the same subtree @xmath190 with the same number @xmath222 and depth @xmath223 but different parent nodes @xmath224 .",
    "the corresponding voltage inequality for the node pair @xmath221 follows directly as the difference between the voltages for the paths from @xmath189 to @xmath175 and @xmath225 , respectively , that is , @xmath226 .",
    "if there exists a cycle @xmath227 , then at depth @xmath228 there exists at least one pair of nodes @xmath221 , whose corresponding voltage inequality is not satisfied , that is , is equal to zero . if there is no cycle shorter than @xmath125 in the voltage graph , then there are no such pairs , and all voltage inequalities are satisfied .",
    "[ ex : 2 ] consider the rate @xmath54 @xmath130-regular ldpc convolutional code given by . the corresponding base graph , with four symbol nodes @xmath229 , @xmath230 , and three constraint nodes @xmath231 , @xmath232 , is illustrated in fig .  [",
    "fig : voltage_graph_variables ] . in the following ,",
    "we shall search for a set of edge labels , that is , monomial degrees in @xmath63 , such that the corresponding voltage graph has at least a given girth @xmath125 .",
    "thus , we label the branches by the general edge voltages according to and obtain a bipartite voltage graph .    in order to find a suitable labeling for the edge voltages from the @xmath190th constraint node @xmath120 to the @xmath233th symbol node @xmath234 , that is @xmath122 , @xmath232 , @xmath235 , whose underlying voltage graph has at least girth @xmath236",
    ", we have to grow @xmath164 subtrees up to length @xmath237 , with their root nodes being initialized by @xmath234 , @xmath230 .",
    "the subtree with root node @xmath132 is illustrated in fig .",
    "[ fig : tree ] .",
    "clearly , at depth @xmath238 there are no identical nodes , while at depth @xmath239 there are @xmath240 pairs of identical nodes ( @xmath222 ) , but with different parents .",
    "taking into account that a similar subtree is constructed using the remaining three symbol nodes @xmath135 , @xmath137 and @xmath241 as root nodes , we obtain in total @xmath242 node pairs , which all correspond to a voltage inequality .",
    "for example , the voltage inequality obtained by checking all node pairs @xmath221 with @xmath243 , that is , @xmath244 , at depth @xmath239 in the subtree starting with symbol node @xmath132 , are    rcl -_11 + _ 12 - _ 22 + _ 21 & & 0 + -_11 + _ 12 - _ 32 + _ 31 & & 0 + -_21 + _ 22 - _",
    "32 + _ 31 & & 0    note that amongst all @xmath245 voltage inequalities , there are only @xmath11 unique ones .",
    "constructing a tree representation    1 .",
    "grow @xmath40 separate subtrees according to the underlying base graph up to depth @xmath246 , with the root node @xmath189 of the @xmath190th subtree being initialized with @xmath191 and depth @xmath192 .",
    "2 .   extend every node @xmath177 at depth @xmath193 with @xmath194 by connecting it with the nodes @xmath195 at depth @xmath196 according to the underlying base graph , except @xmath197 which is already connected to @xmath175 at depth @xmath198 .",
    "denote the set of all nodes within the @xmath190th subtree by @xmath247 .      using the obtained subtrees",
    "@xmath247 , @xmath248 , with maximum depth @xmath249 , we have found all cycles of length smaller than or equal to @xmath219 as well as their corresponding voltage inequalities .",
    "the same cycle might be found several times within the @xmath40 subtrees .",
    "moreover , two different cycles can correspond to the same voltage inequality .",
    "we continue by creating a reduced list @xmath250 of node pairs @xmath221 of all @xmath40 subtrees @xmath247 , @xmath248 , containing all unique voltage inequalities .",
    "thereby , we remove all duplicate cycles , as well as different cycles corresponding to the same voltage inequality . using the reduced list @xmath250 we can reduce the obtained @xmath40 subtrees @xmath247 , @xmath248 , in a similar way by removing all nodes , not participating in any of the cycles in @xmath250 , and denote the reduced subtree by @xmath251 .",
    "in other words , we remove all nodes in @xmath247 , @xmath248 , which only participate in already known cycles or new cycles with already known voltage inequalities .    in the following we present two different approaches for finding suitable edge labels ( edge voltages ) , which we shall denote as algorithm a and algorithm b.    in algorithm a , we label the edges of the reduced subtrees @xmath251 , @xmath248 , with a set of randomly chosen voltages . for every node pair @xmath221 in the list @xmath250",
    ", we calculate the voltage of the corresponding cycle as the difference of the path voltages @xmath199 and @xmath252 .",
    "if none of these cycle voltages is equal to zero , the girth of the underlying base graph with such a voltage assignment is greater than or equal to @xmath125 .    in algorithm b , we discard the list @xmath250 and only focus on the @xmath40 reduced subtrees @xmath251 .",
    "after labeling their edges with a set of randomly chosen voltages , we sort the nodes @xmath175 of each subtree according to their path voltage @xmath199 .",
    "if there exists no pair of nodes @xmath221 with the same path voltage , number @xmath253 , and depth @xmath254 , but different parent nodes @xmath255 , the girth of the underlying base graph with such a voltage assignment is greater than or equal to @xmath125 .    a formal description of those two algorithms is given below :    constructing a system of voltage inequalities and searching for an optimum voltage assignment using a list    1 .",
    "create a reduced list @xmath250 of node pairs @xmath221 for all @xmath40 subtrees @xmath247 , @xmath248 , containing all node pairs @xmath221 with a unique voltage inequality , having the same number @xmath222 , depth @xmath223 , but different parent nodes @xmath224 .",
    "2 .   reduce each of the @xmath40 subtrees @xmath247 by removing all nodes , which do not participate in any of the found cycles corresponding to the voltage inequalities in @xmath250 , and denote the reduced subtree structure by @xmath251 .",
    "3 .   assign randomly chosen voltages to the edges of all trees and perform the following steps : 1 .",
    "find the voltages for all paths leading from the root node @xmath189 of the @xmath190th reduced subtree @xmath251 to all nodes @xmath256 , @xmath248 .",
    "2 .   determine the voltage inequality for all cycles @xmath257 , as the difference of the corresponding path voltages in @xmath251 , @xmath248 , computed previously .",
    "if all voltage inequalities are satisfied , the girth of the underlying base graph with such a voltage assignment is greater than or equal to @xmath125 .    constructing a system of voltage inequalities and searching for an optimum voltage assignment using a tree    1 .   construct the reduced list @xmath250 and the reduced subtrees @xmath251 , @xmath248 , as in algorithm a without storing the corresponding list @xmath250 .",
    "2 .   assign randomly chosen voltages to the edges of all trees and perform the following steps : 1 .",
    "find the voltages for all paths from the root node @xmath189 to all nodes within @xmath251 , @xmath248 , and sort all elements within @xmath251 according to their voltages .",
    "search for a pair of nodes @xmath221 in the sorted list with the same path voltage , number @xmath253 , and depth @xmath254 , but different parent nodes @xmath255 .",
    "if no such pair exists , then the girth of the corresponding voltage graph with such a voltage assignment is greater than or equal to @xmath125 .      denote the sum of all nodes in the reduced tree @xmath251 , @xmath248 , and the number of unique inequalities in the list @xmath250 by @xmath258 and @xmath259 , respectively , that is ,    rcltrcl n _ & = & _ i=1^c | _ i,| & and & n _ & = & | |    where @xmath260 denotes the number of entries in the set @xmath261 .    algorithm a requires @xmath258 summations for computing the path voltages and @xmath259 comparisons for finding cycles , leading to the complexity estimate @xmath262 .",
    "algorithm b requires the same number of @xmath258 summations for computing the path voltages , roughly @xmath263 operations for sorting the set , and @xmath258 comparisons , leading to a total complexity estimate of @xmath263 .",
    "c!c|c!c|c!c|c & & & + & @xmath258 & @xmath259 & @xmath258 & @xmath259 & @xmath258 & @xmath259 + @xmath164 & @xmath264 & @xmath265 & @xmath266 & @xmath267 & @xmath268 & @xmath269 + @xmath270 & @xmath271 & @xmath272 & @xmath273 & @xmath274 & @xmath275 & @xmath276 + @xmath97 & @xmath277 & @xmath278 & @xmath279 & @xmath280 & @xmath281 & @xmath282 + @xmath283 & @xmath284 & @xmath285 & @xmath286 & @xmath287 & @xmath288 & @xmath289 + @xmath96 & @xmath290 & @xmath291 & @xmath292 & @xmath293 & @xmath294 & @xmath295 + @xmath296 & @xmath297 & @xmath298 & @xmath299 & @xmath300 & @xmath301 & @xmath302 + @xmath18 & @xmath303 & @xmath304 & @xmath305 & @xmath306 & @xmath307 & @xmath308 + @xmath309 & @xmath310 & @xmath311 & @xmath312 & @xmath313 & @xmath314 & @xmath315 + @xmath8 & @xmath316 & @xmath317 & @xmath318 & @xmath319 & @xmath320 & @xmath321 +    in table  [ tab : complexity ] the values of @xmath258 and @xmath259 are given when searching for suitable voltage assignment for a @xmath5-regular rate @xmath322 qc ldpc convolutional codes with @xmath16 and arbitrary @xmath323 and girth @xmath125 constructed from all - ones base matrices .",
    "in this case , up to @xmath324 , algorithm a is preferable , while when searching for voltage assignment with girth @xmath325 , algorithm b should be used .    in the general case we have to consider all node pairs , and as @xmath259 is roughly @xmath326",
    "we conclude that algorithm b performs asymptotically better ( when @xmath327 ) .",
    "usually the girth of the tanner graph of an qc ldpc block code is considered to be the most important parameter that affects the performance of belief - propagation decoding , as it determines the number of independent iterations @xcite .",
    "therefore , most research is focused on finding qc ldpc block codes with large girth , while their corresponding minimum distance is mostly unknown . in @xcite",
    "it was shown , that the performance of belief - propagation decoding algorithms at high snrs depends on the structure and the size of the smallest absorbing sets , which however can be upper - bounded by the minimum distance .",
    "this is the rationale for computing the minimum distance of the shortest known qc ldpc block codes as well as our search for qc ldpc codes with both large girth and large minimum distance .",
    "our method of calculating the minimum distance is based on the well - known fact that the minimum distance of a linear block code @xmath43 with parity - check matrix @xmath34 is equal to the minimum number of columns of @xmath34 which sum up to zero .",
    "c!c!c!c!l @xmath4 & @xmath328 & @xmath142 & @xmath39 & +   + & & & & @xmath329 + & & & & @xmath330 + & & & & @xmath331 + & & & & @xmath332 + & & & & @xmath333 + & & & & @xmath334 + & & & & @xmath335 + & & & & @xmath336 + & & & & @xmath337 + & & & & @xmath338 + & & & & @xmath339 + & & & & @xmath340 + & & & & @xmath341 + & & & & @xmath342 + & & & & @xmath343 + & & & & @xmath344 + & & & & @xmath345 + & & & & @xmath346 +   + & & & & @xmath329 + & & & & @xmath347 + & & & & @xmath348 + & & & & @xmath349 + & & & & @xmath350 + & & & & @xmath351 + & & & & @xmath352 + & & & & @xmath353 + & & & & @xmath354 + & & & & @xmath355 +    consider the @xmath45 parity - check matrix @xmath47 of the @xmath2-regular rate @xmath170 tailbiting block code @xmath43 with block - length @xmath152 . starting with each of the first @xmath40 columns of @xmath47 as a root",
    ", we will construct @xmath40 separate trees , where each node @xmath175 is characterized by its depth @xmath183 and partial syndrome state column - vector @xmath356 .",
    "initialize the partial syndrome state of the root @xmath189 of the @xmath190th tree with column @xmath190 of the corresponding parity - check matrix , that is , @xmath357 , @xmath248 .",
    "then grow each tree in such a way , that every branch between any two nodes @xmath175 and @xmath225 is labeled by a column vector @xmath358 , @xmath359 , such that @xmath360 , where every branch label on the path @xmath252 does not occur more than once .",
    "consider now a certain node @xmath175 with nonzero state @xmath361 , where @xmath362 , @xmath363 is a @xmath364 column vector .",
    "if we assume that the @xmath365th position of the column - vector @xmath356 is nonzero , then there are at most @xmath366 columns which can cancel this nonzero position and have not been considered previously . therefore , every node @xmath175 has at most @xmath366 children nodes per nonzero position .",
    "such a tree would grow until all possible linear combinations have been found .",
    "therefore , we assume that the minimum distance is restricted by @xmath367 , that is , the maximum depth of the tree is @xmath368 .",
    "consequently , a node @xmath175 at depth @xmath183 will not be extended , if the number of nonzero positions in its partial syndrome state column - vector @xmath356 exceeds @xmath369 , since at most @xmath3 ones can be canceled by each branch .    by initially reordering the columns of the parity - check matrix @xmath47 in such a way that each of the @xmath174 nonoverlapping blocks of @xmath39 rows contains not more than a single one per column",
    ", we can strengthen the stopping criterion as follows : a node @xmath175 at depth @xmath183 will not be extended , if the number of nonzero positions in each of its partial syndrome state column - vectors @xmath362 , @xmath363 exceeds @xmath370 , since at most @xmath128 one in each block can be canceled by each branch . in particular , such a reordering of the parity - check matrix @xmath47 corresponds directly to the parity - check matrix @xmath66 of the equivalent @xmath2-regular ldpc block code constructed from circulant matrices .",
    "determine the minimum distance of a rate @xmath21 @xmath5-regular ldpc block code    1 .",
    "assume a suitable restriction @xmath75 on the minimum distance @xmath367 .",
    "2 .   grow @xmath40 separate trees as follows : 1 .",
    "initialize the root node of the @xmath190th tree by @xmath371 with depth @xmath192 .",
    "2 .   extend all nodes @xmath175 as long as the hamming weights of their partial syndrome states @xmath372 ( note , for codes with blocks of @xmath39 rows containing only a single one , this criterion can be strengthen to @xmath373 , @xmath363 ) .",
    "3 .   the minimum distance @xmath142 follows directly as + rcl d _ & = & _ \\ { ( ) @xmath374 ( ) = @xmath35 } + if there is no node @xmath175 whose partial syndrome state @xmath375 , then the minimum distance is lower - bounded by @xmath376 .",
    "c!c!c!c!l @xmath4 & @xmath328 & @xmath142 & @xmath39 & +   + & & & & @xmath377 + & & & & @xmath378 + & @xmath379 & & & @xmath380 + & ( @xmath381@xcite ) & & & @xmath382 + & @xmath383 & & & @xmath384 + & ( @xmath385@xcite ) & & & @xmath386 + & & & & @xmath387 + & & & & @xmath388 + & & & & @xmath389 + & & & & @xmath390 + & & & & @xmath391 + & & & & @xmath392 + & & & & @xmath393 + & & & & @xmath394 + & & & & @xmath395 + & & & & @xmath396 + & & & & @xmath397 + & & & & @xmath398 +   + & & & & @xmath399 + & & & & @xmath400 + & & & & @xmath348 + & & & & @xmath349 + & & & & @xmath350 + & & & & @xmath351 + & & & & @xmath401 + & & & & @xmath402 + & & & & @xmath403 + & & & & @xmath404 + & & & & @xmath405 + & & & & @xmath406 +",
    "when presenting our search results for qc ( @xmath407)-regular ldpc block codes with different girth we will distinguish two cases .",
    "we started by searching for qc ( @xmath407)-regular ldpc block codes using an all - one base matrix @xmath99 , applied the algorithms as described above and obtained qc ( @xmath408)-regular ldpc block codes with girth @xmath409 , and @xmath8 as given in tables  [ tab : girth6 ]    [ tab : girth12 ] .",
    "these codes correspond to a parity - check matrix @xmath50 of a convolutional code with only monomial entries as given , for example , in .",
    "however , according to theorem  [ th : three - a ] the achievable girth @xmath125 of a qc @xmath2-regular ldpc code , constructed in such a way , is limited by @xmath410 .",
    "thus , in order to find qc @xmath411-regular ldpc block codes with girth @xmath412 as presented in tables  [ tab : girthgreater ]  and  [ tab : girth20 ] , we have to allow zero entries in our base matrix @xmath99 .",
    "this is a straight - forward generalization of the restriction to only monomial entries in the parity - check matrix @xmath50 of the underlying convolutional code .",
    "c!c!c!c!l @xmath4 & @xmath328 & @xmath142 & @xmath39 & +   + & @xmath413 & & @xmath414 & @xmath415 + & ( @xmath416@xcite ) & & ( @xmath417@xcite ) & @xmath418 + & @xmath419 & & @xmath420 & @xmath421 + & ( @xmath422@xcite ) & & ( @xmath420@xcite ) & @xmath423 + & @xmath424 & & @xmath425 & @xmath426 + & ( @xmath427@xcite ) & & ( @xmath428@xcite ) & @xmath429 + & & & @xmath430 & @xmath431 + & & & ( @xmath432@xcite ) & @xmath433 + & & & @xmath434 & @xmath435 + & & & ( @xmath436@xcite ) & @xmath437 + & & & @xmath438 & @xmath439 + & & & ( @xmath440@xcite ) & @xmath441 + & & & & @xmath442 + & & & @xmath443 & @xmath444 + & & & ( @xmath445@xcite ) & @xmath446 + & & & & @xmath447 + & & & & @xmath448 + & & & @xmath449 & @xmath450 + & & & ( @xmath451@xcite ) & @xmath452 + & & & & @xmath453 + & & & & @xmath454 + & & & @xmath455 & @xmath456 + & & & ( @xmath457@xcite ) & @xmath458 + & & & & @xmath459 +   + & & & & @xmath415 + & & & & @xmath418 +    c!c!c!c!l @xmath4 & @xmath328 & @xmath142 & @xmath39 & +   + & @xmath460 & & @xmath461 & @xmath462 + & ( @xmath463@xcite ) & & ( @xmath464@xcite ) & @xmath465 + & @xmath466 & & @xmath467 & @xmath468 + & ( @xmath469@xcite ) & & ( @xmath470@xcite ) & @xmath471 + & @xmath472 & & @xmath473 & @xmath474 + & ( @xmath475@xcite ) & & ( @xmath476@xcite ) & @xmath477 + & & & @xmath478 & @xmath479 + & & & ( @xmath476@xcite ) & @xmath480 + & & & @xmath481 & @xmath482 + & & & ( @xmath483@xcite ) & @xmath484 + & & & @xmath485 & @xmath486 + & & & ( @xmath487@xcite ) & @xmath488 + & & & & @xmath489 + & & & @xmath490 & @xmath491 + & & & ( @xmath492@xcite ) & @xmath493 + & & & & @xmath494 + & & & & @xmath495 + & & & & @xmath496 + & & & & @xmath497 + & & & & @xmath498 + & & & & @xmath499 + & & & & @xmath500 + & & & & @xmath501 + & & & & @xmath502 + & & & & @xmath503 + & & & & @xmath504 + & & & & @xmath505 + & & & & @xmath506 +      in tables  [ tab : girth6 ]    [ tab : girth12 ] , parity - check matrices of short known qc @xmath411-regular ldpc block codes with girth @xmath409 , and @xmath8 together with those of large minimum distance are presented .",
    "when searching for such codes , we applied the following restrictions to reduce the number of possible voltage assignments :    * as the girth of a voltage graph is defined as the shortest cycle with voltage zero , and the sign of the voltage depends on the direction of the edge , we can add the same arbitrary offset to the voltage of all edges being connected to the same node .",
    "thus , without loss of generality , we set the voltage of all edges connected to one specific symbol node as well as all edges connected to one specific constraint node to voltage zero .",
    "( for consistency with codes constructed from steiner triple system , that will be introduced later , we choose the first symbol node and the last constraint node .",
    "this corresponds directly to a degree matrix with zeros in its first column and last row . )",
    "+ for example , the degree matrix of the @xmath507 qc ldpc block code with girth @xmath508 from table  [ tab : girth8 ] follows directly as + rcl w & = & ( + cccc 0 & 1 & 4 & 6 + 0 & 5 & 2 & 3 + 0 & 0 & 0 & 0 + ) * furthermore , to reduce the number of only permuted degree matrices , we assume that * * the first row is sorted in ascending order . * * when sorting the first and the second row in ascending order , the second row is lexicographically less than the first row . * * the maximum degree is less than the tailbiting length @xmath39 for which there exists a qc @xmath411-regular ldpc block code with given girth @xmath125 . *",
    "qc @xmath507-regular ldpc block codes were found by exhaustive search over the previously defined set of restricted edge voltages . *",
    "qc @xmath509-regular ldpc block codes with @xmath510 were obtained by adding one additionally , randomly chosen column to the best degree matrices of codes with @xmath511 having the same girth @xmath125 .",
    "the maximum degree in this additional column is limited by twice the maximum degree of the previous code .    using these restrictions , the obtained qc @xmath411-regular",
    "ldpc block codes with girth @xmath409 , and @xmath8 are presented in tables  [ tab : girth6 ]    [ tab : girth12 ] .",
    "the first column @xmath4 denotes the number of nonzero elements per row , which corresponds to the number of columns in @xmath50 and @xmath63 , due to the all - ones base matrix @xmath99 . as all entries in the first column and the last row of the degree matrix @xmath63",
    "are zero , they are omitted in the submatrix @xmath512 which is given in the corresponding last column .",
    "consider now the parity - check matrix @xmath50 of the rate @xmath322 convolutional code @xmath22 , with only monomial entries corresponding to the degree matrix @xmath63 . by tailbiting the semi - infinite parity - check matrix @xmath34 to length @xmath39 ( given in the forth column ) , we obtain the parity - check matrix @xmath47 of an @xmath328 block code @xmath43 with minimum distance @xmath142 , where @xmath328 and @xmath142 follow from the second and third column , respectively .",
    "note that due to linear dependent rows in @xmath47 the rank of @xmath43 might be less than @xmath513 .",
    "the codes presented in tables  [ tab : girth6 ]  and  [ tab : girth8 ] coincide with the qc ldpc block codes found by the `` hill - climbing '' algorithm @xcite , but we determined their minimum distance with our algorithm described in section  [ sec : 7 ] .",
    "tables  [ tab : girth10 ]  and  [ tab : girth12 ] contain new qc @xmath411-regular ldpc block codes , which , to the best of our knowledge , are shorter than the previously known codes obtained from an all - ones base matrix @xcite . in particular , these codes are significantly shorter than those presented in @xcite , which are obtained from base matrices with zeros . however",
    ", due to the zeros in their base matrix , the minimum distance of the ldpc block codes in @xcite can exceed @xmath20 .",
    "for example , we determined the minimum distance of the @xmath514 qc @xmath130-regular ldpc block code with girth @xmath515 in @xcite to be @xmath516 , while the corresponding code in table  [ tab : girth12 ] , that is , the @xmath460 qc @xmath130-regular ldpc block code , has only minimum distance @xmath517 , but shorter block length . using the beast @xcite",
    ", we calculated the free distance of the corresponding parent convolutional code for the code in @xcite to be @xmath518 .",
    "therefore , using our approach and a larger tailbiting length it would be possible to construct corresponding qc @xmath130-regular ldpc block codes with minimum distance up to @xmath519 .      in order to find qc @xmath411-regular ldpc block codes with girth @xmath520",
    ", we have to allow zero entries in our base matrix @xmath99 ; that is , relax the restriction from only monomial entries in @xmath50 to include also zero entries .",
    "according to theorem  [ th : two ] , a code with girth @xmath125 exists if the corresponding base graph has girth @xmath102 satisfying . additionally , as we are searching for codes with short block length , we consider the shortest possible base matrices @xmath99 .",
    "c!c!c!c!c!l @xmath4 & @xmath125 & @xmath328 & @xmath39 & base graph & + & & @xmath521 & @xmath522 & @xmath523 & @xmath524 + & & ( @xmath525@xcite ) & ( @xmath526@xcite ) & @xmath527 & @xmath528 + & & @xmath529 & & @xmath530 & @xmath531 + & & ( @xmath532@xcite ) & & @xmath533 & @xmath534 + & & & & & @xmath535 + & & @xmath536 & @xmath537 & @xmath538 & @xmath539 + & & ( @xmath540@xcite ) & ( @xmath541@xcite ) & @xmath542 & @xmath543 + & & & & & @xmath544 + @xmath283 & @xmath10 & @xmath545 & @xmath546 & @xmath547 & _ available at @xcite _ + & & & & @xmath523 & @xmath548 + & & & & @xmath527 & @xmath549 + & & & & & @xmath550 + & & @xmath551 & & @xmath530 & @xmath552 + & & ( @xmath553@xcite ) & & @xmath533 & @xmath554 + & & & & & @xmath555 + & & & & & @xmath556 + & & @xmath557 & @xmath558 & @xmath538 & @xmath559 + & & ( @xmath560@xcite ) & ( @xmath561@xcite ) & @xmath542 & @xmath562 + & & & & & @xmath563 + & & & @xmath564 & @xmath523 & @xmath565 + & & & ( @xmath566@xcite ) & @xmath527 & @xmath567 + & & & & & @xmath568 + & & @xmath569 & & @xmath530 & @xmath570 + & & ( @xmath571@xcite ) & & @xmath533 & @xmath572 + & & & & & @xmath573 +      when searching for qc @xmath411-regular ldpc block codes with girth @xmath574 , and @xmath11 , we started with a ( shortened ) base graph constructed by using steiner triple systems of order @xmath89 , that is , @xmath575 @xcite .    for all @xmath89 , where @xmath576 is equal to @xmath128 or @xmath162",
    ", there exists a steiner triple system of order @xmath89 .",
    "then we construct a @xmath5-regular , @xmath31 base matrix @xmath99 with entries @xmath577 , @xmath52 and @xmath53 , in such a way that the positions of the nonzero entries in each column correspond to a steiner triple system of order @xmath578 .",
    "denote such a @xmath31 base matrix @xmath579 .",
    "using the obtained @xmath5-regular @xmath31 base matrix @xmath99 , we search for a set of edge labels , such that the corresponding voltage graph has at least girth @xmath125 .    in general",
    ", it is possible , without loss of generality , to label a certain subset of edges of the voltage graph simultaneously with zero voltage and thereby decreasing the number of possible labelings .",
    "the following algorithm constructs a @xmath31 base matrix @xmath99 based on @xmath580 and reorders the matrix to maximize the number of zero entries in its lower left corner .",
    "using such a base matrix , it is always possible to label the last nonzero entry in each column with degree zero .",
    "moreover , in each of the remaining rows at the top of the base matrix , we can label at least one nonzero entry with degree zero .",
    "( hereinafter we will always choose at least the first element in the remaining rows to be labeled with zero voltage ) .",
    "construction of a @xmath5-regular @xmath31 base graph @xmath99 obtained from @xmath580    1 .",
    "initialize a counter @xmath581 to zero and denote the current row and column by @xmath150 and @xmath75 , respectively , starting from the right - most entry in the last row , that is , @xmath582 and @xmath583 .",
    "2 .   set the @xmath584 elements in row @xmath150 and column @xmath585 to one , that is , @xmath586 for @xmath587 and @xmath588 .",
    "3 .   choose the remaining @xmath589 nonzero positions in each of those @xmath584 columns to fulfill the properties of a steiner triple system .",
    "if possible , choose the positions @xmath577 to minimize @xmath190 .",
    "in other words , try to avoid using the lowest rows @xmath590 , if possible , despite of the restrictions imposed by the steiner triple system .",
    "4 .   finally ,",
    "decrease @xmath75 by @xmath584 , set @xmath150 to @xmath591 , denote the number of nonzero elements in the new row @xmath150 by @xmath584 and continue with step @xmath163 until all @xmath40 columns are used , that is , @xmath592 .    by removing the last row and last @xmath4 columns of the @xmath5-regular @xmath31 base matrix @xmath99 constructed using @xmath580",
    ", we obtain a shortened @xmath593 ( @xmath594)-regular base matrix @xmath158 , which we denote @xmath595 . by deleting columns and rows ,",
    "it is also possible to obtain intermediate codes , which are , however , irregular .",
    "[ ex : basests ] in the following we shall construct the @xmath596 ) base matrices @xmath99 of dimension @xmath597 @xmath598 , dimension @xmath599 @xmath600 and dimension @xmath601 @xmath602 . using algorithm sts , we obtain the following steiner triple systems of order @xmath296 ( @xmath523 ) , @xmath603 ( @xmath538 ) and @xmath604 ( @xmath547 ) .",
    "rllll + \\ { & \\{2 , 3 , 5 } , & \\{1 , 4 , 6 } , & \\{1 , 3 , 7 } , & \\{2 , 6 , 7 } , + & \\{4 , 5 , 7 } , & \\{1 , 2 , 8 } , & \\{5 , 6 , 8 } , & \\{3 , 4 , 8 } , + & \\{1 , 5 , 9 } , & \\{2 , 4 , 9 } , & \\{3 , 6 , 9 } , & \\{7 , 8 , 9 } } +   + \\ { & \\{0 , 3 , 6 } , & \\{0 , 2 , 7 } , & \\{1 , 5 , 7 } , & \\{3 , 4 , 7 } , + & \\{3 , 5 , 8 } , & \\{1 , 4 , 8 } , & \\{2 , 6 , 8 } , & \\{2 , 4 , 9 } , + & \\{5 , 6 , 9 } , & \\{0 , 1 , 9 } , & \\{1 , 3 , 10 } , & \\{0 , 4 , 10 } , + & \\{6 , 7 , 10 } , & \\{2 , 5 , 10 } , & \\{8 , 9 , 10 } , & \\{7 , 8 , 11 } , + & \\{4 , 6 , 11 } , & \\{1 , 2 , 11 } , & \\{0 , 5 , 11 } , & \\{3 , 9 , 11 } ,    rllll & \\{10 , 11 , 12 } , & \\{7 , 9 , 12 } , & \\{0 , 8 , 12 } , & \\{1 , 6 , 12 } , + & \\{4 , 5 , 12 } , & \\{2 , 3 , 12 } } +   + \\ { & \\ { 4 , 5,10 } , & \\ { 1 , 9,10 } , & \\ { 7 , 8,11 } , & \\ { 1 , 6,11 } , + & \\ { 2 , 3,12 } , & \\ { 0 , 9,12 } , & \\ { 6 , 8,12 } , & \\ { 8 , 9,13 } , + & \\ { 6 , 7,13 } , & \\ { 0 , 5,13 } , & \\ { 2,10,13 } , & \\ { 3 , 4,14 } , + & \\ { 1,12,14 } , & \\ { 0 , 2,14 } , & \\ { 7 , 9,14 } , & \\ { 5,11,14 } , + & \\ { 5 , 6,15 } , & \\ { 3,10,15 } , & \\ { 4,12,15 } , & \\ { 1 , 7,15 } , + & \\ { 0 , 8,15 } , & \\{11,13,16 } , & \\ { 5 , 7,16 } , & \\ { 6,10,16 } , + & \\ { 2 , 8,16 } , & \\ { 3 , 9,16 } , & \\ { 0 , 4,16 } , & \\ { 9,11,17 } , + & \\{12,13,17 } , & \\ { 1 , 3,17 } , & \\ { 4 , 7,17 } , & \\ { 0 , 6,17 } , + & \\ { 2 , 5,17 } , & \\ { 8,17,18 } , & \\ { 3,11,18 } , & \\ { 2 , 4,18 } , + & \\{13,15,18 } , & \\ { 0,10,18 } , & \\ { 1,16,18 } , & \\ { 6,14,18 } , + & \\ { 9,18,19 } , & \\ { 4 , 8,19 } , & \\{14,15,19 } , & \\{10,11,19 } , + & \\ { 0 , 3,19 } , & \\ { 2 , 7,19 } , & \\{12,16,19 } , & \\ { 1 , 5,19 } , + & \\{17,19,20 } , & \\ { 9,15,20 } , & \\{10,12,20 } , & \\ { 0,11,20 } , + & \\ { 5 , 8,20 } , & \\ { 1 , 4,20 } , & \\{13,14,20 } , & \\ { 3 , 7,20 } , + & \\ { 2 , 6,20 } , & \\ { 5,18,21 } , & \\ { 4 , 6,21 } , & \\ { 1,13,21 } , + & \\{16,17,21 } , & \\{10,14,21 } , & \\ { 2 , 9,21 } , & \\ { 3 , 8,21 } , + & \\{11,15,21 } , & \\",
    "{ 7,12,21 } , & \\{19,21,22 } , & \\{18,20,22 } , + & \\ { 0 , 7,22 } , & \\{10,17,22 } , & \\ { 3 , 5,22 } , & \\ { 6 , 9,22 } ,    rllll & \\ { 2,15,22 } , & \\",
    "{ 1 , 8,22 } , & \\{11,12,22 } , & \\ { 4,13,22 } , + & \\{14,16,22 } , & \\{20,21,23 } , & \\ { 0 , 1,23 } , & \\ { 6,19,23 } , + & \\{15,16,23 } , & \\ { 2,11,23 } , & \\ { 7,18,23 } , & \\ { 5,12,23 } , + & \\{14,17,23 } , & \\ { 4 , 9,23 } , & \\ { 8,10,23 } , & \\ { 3,13,23 } , + & \\ { 0,21,24 } , & \\{22,23,24 } , & \\ { 1 , 2,24 } , & \\{16,20,24 } , + & \\ { 7,10,24 } , & \\ { 8,14,24 } , & \\{13,19,24 } , & \\ { 3 , 6,24 } , + & \\{12,18,24 } , & \\{15,17,24 } , & \\ { 5 , 9,24 } , & \\ { 4,11,24 } }    each number @xmath605 occurs @xmath4 times within the set of steiner triples .",
    "however , the chosen steiner triples are not uniquely determined .",
    "the corresponding base matrices of dimension @xmath597 @xmath523 , dimension @xmath599 @xmath538 , and dimension @xmath601 @xmath547 are sparse matrices with nonzero elements only in column @xmath190 and row @xmath233 , where the @xmath190th steiner triple contains the value @xmath233 . the @xmath597 @xmath130-regular base matrix constructed from @xmath523 denoted by @xmath606",
    "is given , for example , by    rcl [ eq : base_sts9 ] b _ & = &    entries that correspond to edges in the base graph that can be , according to algorithm sts , labeled with zero voltage are marked in bold .    by removing the last row and the last @xmath607 columns ,",
    "the corresponding shortened @xmath608 @xmath609-regular base matrix @xmath610 follows directly as    rcl [ eq : base_sts9_shortened ] b _ & = &    this corresponds to removing the four steiner triples of @xmath523 containing the number of the last row . shortening the @xmath597 base matrix @xmath606 constructed from @xmath523 to obtain a shortened @xmath608 base matrix @xmath610 is unpractical as its code rate is @xmath611 . however , by shortening the @xmath612 base matrix @xmath613 in the same way we obtain a @xmath614 base matrix @xmath615 with the feasible code rate @xmath616 .    in table",
    "[ tab : girthgreater ] the obtained qc ( @xmath407)-regular ldpc block codes with girth @xmath574 , and @xmath11 constructed from steiner triple systems are presented .",
    "while the number of nonzero elements in each column is fixed to @xmath16 , the number of nonzero elements in each row @xmath4 is specified in the first column .",
    "the second column corresponds to the obtained girth @xmath125 , while in the third and forth columns we give the dimensions of the block code @xmath328 after tailbiting to length @xmath39 .",
    "and the fifth column contains which steiner triple system ( @xmath575 ) is used .",
    "finally , in the last column @xmath617 we give the degrees of the corresponding degree matrix @xmath63 in a compact way .",
    "as we have constructed the base matrices in such a way that the last nonzero entry in each column and the first entry in all other rows of the base matrix is labeled with a zero voltage , these entries are omitted .",
    "an entry of @xmath617 in column @xmath233 and row @xmath190 corresponds to the voltage degree of the @xmath618th nonzero entry in the @xmath190th row of the corresponding base matrix .",
    "c!c!c!c!c @xmath4 & @xmath125 & @xmath619 & @xmath39 & base graph ( table  [ tab : girth8 ] ) + @xmath164 & @xmath620 & @xmath621 & @xmath622 & @xmath623 , @xmath508 + @xmath270 & @xmath620 & @xmath624 & @xmath625 & @xmath626 , @xmath508 + @xmath97 & @xmath620 & @xmath627 & @xmath628 & @xmath629 , @xmath508 + @xmath164 & @xmath630 & @xmath631 & @xmath632 & @xmath623 , @xmath508 @xcite + @xmath270 & @xmath630 & @xmath633 & @xmath634 & @xmath626 , @xmath508 + @xmath164 & @xmath0 & @xmath635 & @xmath636 & @xmath623 , @xmath508 +      when searching for qc @xmath411-regular ldpc block codes with girth @xmath637 and @xmath0 , we started with previously obtained qc @xmath411-regular ldpc block codes of smaller block size and smaller girth , and ( re-)applied our algorithms .",
    "the obtained results for qc @xmath411-regular ldpc block codes with girth @xmath637 and @xmath0 are presented in table  [ tab : girth20 ] .",
    "they are all but one based on previously obtained @xmath411-regular ldpc block codes with girth @xmath508 ( _ cf .  _",
    "table  [ tab : girth8 ] ) , as specified in their last column in table  [ tab : girth20 ] .",
    "as before , the first column @xmath4 denotes the number on nonzero elements in each column ; then we give the obtained girth @xmath125 and the dimensions of the block code @xmath328 after tailbiting to length @xmath39 .",
    "the corresponding degree matrices are too large and are omitted in table  [ tab : girth20 ] , but are available at @xcite .",
    "these codes are ( probably ) unpractical due to their huge block length .",
    "however , the table illustrates that by interpreting qc @xmath5-regular ldpc block codes as base matrices and re - applying our algorithms we can find qc @xmath5-regular ldpc block codes of `` any '' girth @xmath125 .",
    "using the relation between the parity - check matrix of qc ldpc block codes and the biadjacency matrix of bipartite graphs , new searching techniques have been presented . starting from a base graph , a set of edge voltages",
    "is used to construct the corresponding voltage graph with a given girth .    by representing bipartite graphs in different ways , lower and",
    "upper bounds on the girth as well as on the minimum distance of the corresponding tailbiting block code have been discussed .",
    "new algorithms for searching iteratively for bipartite graphs with large girth and for determining the minimum distance of the corresponding qc ldpc block code have been presented .",
    "depending on the given girth , the search algorithms are either based on all - ones matrices , steiner triple systems , or qc block codes . amongst others ,",
    "new qc regular ldpc block codes with girth between @xmath18 and @xmath0 have been presented including their minimum distance if possible . in particular , the previously unknown minimum distance , for some known codes with girth @xmath97 and @xmath96 , has been determined .",
    "this research was supported in part by the swedish research council under grant 621 - 2007 - 6281 .",
    "d.  j. mackay and m.  c. davey , `` evaluation of gallager codes for short block length and high rate applications , '' in _ codes , systems and graphical models_.1em plus 0.5em minus 0.4emspringer - verlag , 1999 , pp . 113130 .",
    "chung , j.  g.  david  forney , t.  j. richardson , and r.  urbanke , `` on the design of low - density parity - check codes within 0.0045 db of the shannon limit , '' _ ieee commun .",
    "_ , vol .  5 , no .  2 ,",
    "5860 , feb .",
    "m.  lentmaier , a.  sridharan , d.  j. costello , jr . , and k.  sh .",
    "zigangirov , `` iterative decoding threshold analysis for ldpc convolutional codes , '' _ ieee trans .",
    "inf . theory _ ,",
    "56 , no .",
    "52745289 , oct .",
    "s.  kudekar , t.  richardson , and r.  urbanke , `` threshold saturation via spatial coupling : why convolutional ldpc ensembles perform so well over the bec , '' in _ proc .",
    "ieee international symposium on information theory ( isit10 ) _ , austin , texas , jun .",
    "13  18 , 2010 , pp . 684688 .",
    "g.  schmidt , v.  v. zyablov , and m.  bossert , `` on expander codes based on hypergraphs , '' in _ proc .",
    "ieee international symposium on information theory ( isit03 ) _ , yokohama , japan , jun .",
    "29  jul . 4 , 2003 , p.  88 .",
    "i.  e. bocharova , b.  d. kudryashov , r.  v. satyukov , and s.  stiglmayr , `` short quasi - cyclic ldpc codes from convolutional codes , '' in _ proc .",
    "ieee international symposium on information theory ( isit09 ) _ , seoul , south - korea , jun .",
    "28 jul . 3 , 2009 , pp .",
    "551555 .",
    "l.  dolecek , p.  lee , z.  zhang , v.  anantharam , b.  nikolic , and m.  wainwright , `` predicting error floors of structured ldpc codes : deterministic bounds and estimates , '' _ ieee j. sel .",
    "areas commun . _ ,",
    "27 , no .  6 , pp .",
    "239246 , aug .",
    "y.  kou , s.  lin , and m.  p.  c. fossorier , `` low - density parity - check codes based on finite geometries : a rediscovery and new results , '' _ ieee trans .",
    "inf . theory _ ,",
    "47 , no .  7 , pp . 27112736 , nov .",
    "2001 .",
    " , `` construction of low - density parity - check codes from kirkman triple systems , '' in _ proc .",
    "ieee global telecommunications conference ( globecom01 ) _ , vol .  2 , san antonio , usa , nov . 2529 , 2001 , pp . 970974 .",
    "r.  m. tanner , `` on graph constructions for ldpc codes by quasi - cyclic extension , '' in _ information , coding and mathematics _ , m.  blaum , p.  g. farrel , and h.  c.  a. van tilbord , eds.1em plus 0.5em minus 0.4em norwell , ma : kluwer , 2002 , pp .",
    "209219 .",
    "r.  m. tanner , d.  sridhara , a.  sridharan , t.  e. fuja , and j.  daniel j.  costello , `` ldpc block and convolutional codes based on circulant matrices , '' _ ieee trans .",
    "inf . theory _ ,",
    "50 , no .  12 , pp .",
    "29662984 , dec . 2004 .",
    "m.  esmaeili and m.  gholami , `` structured quasi - cyclic ldpc codes with girth 18 and column - weight @xmath12 , '' _ international journal of electronics and communications ( aeu ) _ , vol .",
    "64 , no .  3 , pp .",
    "202217 , 2010 .",
    "r.  smarandache and p.  o. vontobel , `` on regular quasi - cyclic ldpc codes from binomials , '' in _ proc .",
    "ieee international symposium on information theory ( isit04 ) _ , chicago , usa , jun . 27  jul . 2 , 2004 ,",
    "p. 274 .",
    "y.  wang , j.  s. yedidia , and s.  c. draper , `` construction of high - girth qc - ldpc codes , '' in _ proc .",
    "5th international symposium on turbo codes and related topics _",
    ", lausanne , switzerland , 0105 , 2008 , pp .",
    "180185 .",
    "i.  e. bocharova , f.  hug , r.  johannesson , b.  d. kudryashov , and r.  v. satyukov , `` new low - density parity - check codes with large girth based on hypergraphs , '' in _ proc .",
    "ieee international symposium on information theory ( isit10 ) _ , austin , texas , jun .",
    "13  18 , 2010 , pp . 819823 .",
    "j.  thorpe , k.  andrews , and s.  dolinar , `` methodologies for designing ldpc codes using protographs and circulants , '' in _ proc .",
    "ieee international symposium on information theory ( isit04 ) _ , chicago , usa , p. 238 ."
  ],
  "abstract_text": [
    "<S> the relation between parity - check matrices of quasi - cyclic ( qc ) low - density parity - check ( ldpc ) codes and biadjacency matrices of bipartite graphs supports searching for powerful ldpc block codes . using the principle of tailbiting , compact representations of bipartite graphs based on convolutional codes can be found .    </S>",
    "<S> bounds on the girth and the minimum distance of ldpc block codes constructed in such a way are discussed . </S>",
    "<S> algorithms for searching iteratively for ldpc block codes with large girth and for determining their minimum distance are presented . </S>",
    "<S> constructions based on all - ones matrices , steiner triple systems , and qc block codes are introduced . </S>",
    "<S> finally , new qc regular ldpc block codes with girth up to @xmath0 are given .    </S>",
    "<S> ldpc code , convolutional code , tanner graph , biadjacency matrix , tailbiting , girth , minimum distance </S>"
  ]
}
{
  "article_text": [
    "this paper provide a brief overview of a longer paper that has been accepted for publication , subject to revision , as ( schwartz 2013 ) .",
    "the full text of that paper ( 64 pages ) may be viewed in the arxiv corr repository at http://arxiv.org/abs/1308.5374 .",
    "the notion of a _ dynamic reasoning system _ ( drs ) was introduced in ( schwartz 1997 ) for purposes of formulating reasoning involving a logic of ` qualified syllogisms ' . the idea arose in an effort to devise rules for evidence combination .",
    "the logic under study included a multivalent semantics where propositions @xmath0 were assigned a probabilistic ` likelihood value ' @xmath1 in the interval @xmath2 $ ] , so that the likelihood value plays the role of a surrogate truth value .",
    "the situation being modeled is where , based on some evidence , @xmath0 is assigned a likelihood value @xmath3 , and then later , based on other evidence , is assigned a value @xmath4 , and it subsequently is desired to combine these values based on some rule into a resulting value @xmath5 .",
    "this type of reasoning can not be represented in a conventional formal logical system with the usual tarski semantics , since such systems do not allow that a proposition may have more than one truth value ; otherwise the semantics would not be mathematically well - defined .",
    "thus the idea arose to speak more explicitly about different occurrences of the propositions @xmath0 where the occurrences are separated in time . in this manner",
    "one can construct a well - defined semantics by mapping the different time - stamped occurrences of @xmath0 to different likelihood / truth values .    in turn , this led to viewing a ` derivation path ' as it evolves over time as representing the knowledge base , or belief set , of a reasoning agent that is progressively building and modifying its knowledge / beliefs through ongoing interaction with its environment ( including inputs from human users or other agents ) .",
    "it also presented a framework within which one can formulate a doyle - like procedure for nonmonotonic ` reason maintenance ' ( doyle 1979 ; smith and kelleher 1988 ) .",
    "briefly , if the knowledge base harbors inconsistencies due to contradictory inputs from the environment , then in time a contradiction may appear in the reasoning path ( knowledge base , belief set ) , triggering a back - tracking procedure aimed at uncovering the ` culprit ' propositions that gave rise to the contradiction and disabling ( disbelieving ) one or more of them so as to remove the inconsistency . accordingly the overall reasoning process may be characterized as being ` nonmonotonic ' .",
    "reasoning is nonmonotonic when the discovery and introduction of new information causes one to retract previously held assumptions or conclusions .",
    "this is to be contrasted with classical formal logical systems , which are monotonic in that the introduction of new information ( nonlogical axioms ) always increases the collection of conclusions ( theorems ) .",
    "( schwartz 1997 ) contains an extensive bibliography and survey of the works related to nonmonotonic reasoning as of 1997 .",
    "in particular , this includes a discussion of ( i ) the classic paper by mccarthy and hayes ( mccarthy and hayes 1969 ) defining the ` frame problem ' and describing the ` situation calculus ' , ( ii ) doyle s ` truth maintenance system ' ( doyle1979 ) and subsequent ` reason maintenance system ' ( smith and kelleher 1988 ) , ( iii ) mccarthy s ` circumscription ' ( mccarthy 1980 ) , ( iv ) reiter s ` default logic ' ( reiter 1980 ) , and ( v ) mcdermott and doyle s ` nonmonotonic logic ' ( mcdermott and doyle 1980 ) . with regard to temporal aspects , there also are discussed works by shoham and perlis .",
    "( shoham 1986 ; 1988 ) explores the idea of making time an explicit feature of the logical formalism for reasoning ` about ' change , and ( shoham 1993 ) describes a vision of ` agent - oriented programming ' that is along the same lines of the present drs , portraying reasoning itself as a temporal activity . in ( elgot - drapkin 1988 ; elgot - drapkin et al .",
    "1987 ; 1991 ; elgot - drapkin and perlis 1990 ; miller 1993 ; perlis et al . 1991 ) perlis and his students introduce and study the notion of ` step logic ' , which represents reasoning as ` situated ' in time , and in this respect also has elements in common with the notion of a drs . additionally mentioned but not elaborated upon in ( schwartz 1997 )",
    "is the so - called agm framework ( alchourn et al .",
    "1985 ; gardenfors 1988 ; 1992 ) , named after its originators .",
    "nonmonotonic reasoning and belief revision are related in that the former may be viewed as a variety of the latter .",
    "these cited works are nowadays regarded as the classic approaches to nonmonotonic reasoning and belief revision . since 1997",
    "the agm approach has risen in prominence , due in large part to the publication ( hansson 1999 ) , which builds upon and substantially advances the agm framework .",
    "agm defines a belief set as a collection of propositions that is closed with respect to the classical consequence operator , and operations of ` contraction ' , ` expansion ' and ` revision ' are defined on belief sets .",
    "( hansson 1999 ) made the important observation that a belief set can conveniently be represented as the consequential closure of a finite ` belief base ' , and these same agm operations can be defined in terms of operations performed on belief bases . since that publication , agm has enjoyed a steadily growing population of adherents .",
    "a recent publication ( ferm and hansson 2011 ) overviews the first 25 years of research in this area .",
    "the drs framework has elements in common with agm , but also differs in several respects .",
    "most importantly , the present focus is on the creation of computational algorithms that are sufficiently articulated that they can effectively be implemented in software and thereby lead to concrete applications .",
    "this element is still lacking in agm , despite hansson s contribution regarding finite belief bases .",
    "the agm operations continue to be given only as set - theoretic abstractions and have not yet been translated into computable algorithms .",
    "another research thread that has risen to prominence is the logic - programming approach to nonmonotonic reasoning known as answer set programming ( or answer set prolog , aka ansprolog ) .",
    "a major work is the treatise ( baral 2003 ) , and a more recent treatment is ( gelfond and kahl 2014 ) .",
    "this line of research develops an effective approach to nonmonotonic reasoning via an adaptation of the well - known prolog programming language . as such",
    ", this may be characterized as a ` declarative ' formulation of nonmonotoniticy , whereas the drs approach is ` procedural ' . the extent to which the two systems address",
    "the same problems has yet to be explored .    a way in which the present approach varies from the original agm approach , but happens to agree with the views expressed by ( hansson 1999 , cf .",
    "15 - 16 ) , is that it dispenses with two of the original ` rationality postulates ' , namely , the requirements that the underlying belief set be at all times ( i ) consistent , and ( ii ) closed with respect to logical entailment .",
    "the latter is sometimes called the ` omniscience ' postulate , inasmuch as the modeled agent is thus characterized as knowing all possible logical consequences of its beliefs .",
    "these postulates are intuitively appealing , but they have the drawback that they lead to infinitary systems and thus can not be directly implemented on a finite computer . to wit , the logical consequences of even a fairly simple set of beliefs will be infinite in number .",
    "dropping these postulates does have anthropomorphic rationale , however , since humans themselves can not be omniscient in the sense described , and , because of this , often harbor inconsistent beliefs without being aware of this .",
    "thus it is not unreasonable that our agent - oriented reasoning models should have these same characteristics .",
    "similar remarks may be found in the cited pages of ( hansson 1999 ) .",
    "other ways in which the present work differs from the agm approach may be noted .",
    "first , what is here taken as a ` belief set ' is neither a belief set in the sense of agm and hansson nor a hansson - style belief base .",
    "rather it consists of the set of statements that have been input by an external agent as of some time @xmath6 , together with the consequences of those statements that have been derived in accordance with the algorithms provided in a given ` controller ' .",
    "second , by labeling the statements with the time step when they are entered into the belief set ( either by an external agent or derived by means of an inference rule ) , one can use the labels as a basis for defining the associated algorithms .",
    "third , whereas grdenfors , hansson , and virtually all others that have worked with the agm framework , have confined their language to be only propositional , the present work takes the next step to full first - order predicate logic .",
    "this is significant inasmuch as the consistency of a finite set of propositions with respect to the classical consequence operation can be determined by truth - table methods , whereas the consistency of a finite set of statements in first - order predicate logic is undecidable ( the famous result due to gdel ) .",
    "for this reason the present work develops a well - defined semantics for the chosen logic and establishes a soundness theorem , which in turn can be used to establish consistency .",
    "last , the present use of a controller is itself new , and leads to a new efficacy for applications .    the notion of a controller was not present in the previous work ( schwartz 1997 ) . its introduction here thus fills an important gap in that treatment . the original conception of a drs provided a framework for modeling the reasoning processes of an artificial agent to the extent that those processes follow a well - defined logic , but it offered no mechanism for deciding what inference rules to apply at any given time .",
    "what was missing was a means to provide the agent with a sense of purpose , i.e. , mechanisms for pursuing goals .",
    "this deficiency is remedied in the present treatment .",
    "the controller responds to inputs from the agent s environment , expressed as propositions in the agent s language .",
    "inputs are classified as being of various ` types ' , and , depending on the input type , a reasoning algorithm is applied .",
    "some of these algorithms may cause new propositions to be entered into the belief set , which in turn may invoke other algorithms .",
    "these algorithms thus embody the agent s purpose and are domain - specific , tailored to a particular application .",
    "but in general their role is to ensure that ( i ) all salient propositions are derived and entered into to the belief set , and ( ii ) the belief set remains consistent .",
    "the latter is achieved by invoking a doyle - like reason maintenance algorithm whenever a contradiction , i.e. , a proposition of the form @xmath7 , is entered into the belief set .",
    "this recent work accordingly represents a rethinking , refinement , and extension of the earlier work , aimed at ( 1 ) providing mathematical clarity to some relevant concepts that previously were not explicitly defined , ( ii ) introducing the notion of a controller and spelling out its properties , and ( iii ) illustrating these ideas with a small collection of example applications .",
    "as such the work lays the groundwork for a software implementation of the drs framework , this being a domain - independent software framework into which can be plugged domain - specific modules as required for any given application .",
    "note that the mathematical work delineated in ( schwartz 2013 ) is a necessary prerequisite for the software implementation inasmuch as this provides the formal basis for an unambiguous set of requirements specifications .",
    "while the present work employs classical first - order predicate calculus , the drs framework can accommodate any logic for which there exists a well - defined syntax and semantics .",
    "the following section 2 provides a fully detailed definition of the notion of a drs .",
    "section 3 briefly describes the version of first - order predicate logic introduced for the present purpose and mentions a few items needed for the ensuing discussion .",
    "section 4 illustrates the core ideas in an application to multiple - inheritance systems , showing a new approach to resolving two classic puzzles of nonmontonic reasoning , namely opus the penguin and nixon diamond .",
    "a _ dynamic reasoning system _ ( drs ) comprises a model of an artificial agent s reasoning processes to the extent that those processes adhere to the principles of some well - defined logic .",
    "formally it is comprised of a ` path logic ' , which provides all the elements necessary for reasoning , and a ` controller ' , which guides the reasoning process .",
    "for contrast , and by way of introductory overview , the basic structure of a classical formal logical system is portrayed in figure 1 and that of a drs in figure 2 .",
    "a classical system is defined by providing a language consisting of a set of propositions , selecting certain propositions to serve as axioms , and specifying a set of inference rules saying how , from certain premises one can derive certain conclusions .",
    "the theorems then amount to all the propositions that can be derived from the axioms by means of the rules .",
    "such systems are monotonic in that adding new axioms always serves to increase the set of theorems .",
    "axioms are of two kinds : logical and extralogical ( or ` proper ' , or ` nonlogical ' ) . the logical axioms together with the inference rules comprise the ` logic ' .",
    "the extralogical axioms comprise information about the application domain .",
    "a drs begins similarly with specifying a language consisting of a set of propositions . but here the ` logic ' is given in terms of a set of axioms schemas , some inference rules as above , and some rules for instantiating the schemas .",
    "the indicated derivation path serves as the belief set .",
    "logical axioms may be entered into the derivation path by applying instantiation rules .",
    "extralogical axioms are entered from an external source ( human user , another agent , a mechanical sensor , etc . ) .",
    "thus the derivation path evolves over time , with propositions being entered into the path either as extralogical axioms or derived by means of inference rules in accordance with the algorithms provided in the controller .",
    "whenever a new proposition is entered into the path it is marked as ` believed ' . in the event that a contradiction arises in the derivation path , a nonmonotonic belief revision process is invoked which leads to certain previously believed propositions becoming disbelieved , thereby removing the contradiction .",
    "a brief overview of these two components of a drs is given in sections 2.1 and 2.2 .",
    "a _ path logic _ consists of a language , axiom schemas , inference rules , and a derivation path , as follows .",
    "* language * : here denoted @xmath8 , this consists of all _ expressions _ ( or _ formulas _ ) that can be generated from a given set @xmath9 of _ symbols _ in accordance with a collection of production rules ( or an inductive definition , or some similar manner of definition ) . as symbols typically are of different types ( e.g. , individual variables , constants , predicate symbols , etc . )",
    "it is assumed that there is an unlimited supply ( uncountably many if necessary ) of each type . moreover , as is customary , some symbols will be _ logical symbols _",
    "( e.g. , logical connectives , quantifiers , and individual variables ) , and some will be _ extralogical symbols _ ( e.g. , individual constants and predicate symbols ) .",
    "it is assumed that @xmath8 contains at least the logical connectives for expressing _",
    "negation _ and _ conjunction _ , herein denoted @xmath10 and @xmath11 , or a means for defining these connectives in terms of the given connectives . for example , in the following we take @xmath10 and @xmath12 as given and use the standard definition of @xmath11 in terms of these .    * axiom schemas * : expressed in some meta notation , these describe the expressions of @xmath8 that are to serve as _",
    "logical axioms_.    * inference rules * : these must include one or more rules that enable instantiation of the axiom schemas",
    ". all other inference rules will be of the usual kind , i.e. , stating that , from expressions having certain forms ( premise expressions ) , one may infer an expression of some other form ( a conclusion expression ) .",
    "of the latter , two kinds are allowed : _ logical rules _ , which are considered to be part of the underlying logic , and _ extralogical rules _ , which are associated with the intended application .",
    "note that logical axioms are expressions that are derived by applying the axiom schema instantiation rules .",
    "inference rules may be viewed formally as mappings from @xmath8 into itself .",
    "the rule set may include derived rules that simplify deductions by encapsulating frequently used argument patterns .",
    "rules derived using only logical axioms and logical rules will also be _ logical rules _ , and derived rules whose derivations employ extralogical rules will be additional _",
    "extralogical rules_.    * derivation paths * : these consist of a sequences of pairs @xmath13 , where @xmath14 is the sublanguage of @xmath8 that is in use at time @xmath6 , and @xmath15 is the _ belief set _ in effect at time @xmath6 .",
    "such a sequence is _ generated _ as follows . since languages are determined by the symbols they employ , it is useful to speak more directly in terms of the set @xmath16 comprising the symbols that are in use at time @xmath6 and then let @xmath14 be the sublanguage of @xmath8 that is based on the symbols in @xmath16 . with this in mind",
    ", let @xmath17 be the logical symbols of @xmath8 , so that @xmath18 is the minimal language employing only logical symbols , and let @xmath19 . then , given @xmath20 , the pair @xmath21 is formed in one of the following ways :    1 .",
    "@xmath22 ( so that @xmath23 ) and @xmath24 is obtained from @xmath15 by adding an expression that is derived by application of an inference rule that instantiates an axiom schema , 2 .",
    "@xmath22 and @xmath24 is obtained from @xmath15 by adding an expression that is derived from expressions appearing earlier in the path by application of an inference rule of the kind that infers a conclusion from some premises , 3 .",
    "@xmath22 and an expression employing these symbols is added to @xmath15 to form @xmath24 , 4 .",
    "some new extralogical symbols are added to @xmath16 to form @xmath25 , and an expression employing the new symbols is added to @xmath15 to form @xmath24 , 5 .",
    "@xmath22 and @xmath24 is obtained from @xmath15 by applying a belief revision algorithm as described in the following .",
    "expressions entered into the belief set in accordance with either ( 3 ) or ( 4 ) will be _ extralogical axioms_. a drs can generate any number of different derivation paths , depending on the extralogical axioms that are input and the inference rules that are applied .    whenever an expression is entered into the belief set it is assigned a _ label _ comprised of :    1 .   a _ time stamp _",
    ", this being the value of the subscript @xmath26 on the set @xmath24 formed by entering the expression into the belief set in accordance with any of the above items ( 1 ) through ( 4 ) . the time stamp serves as an _ index _ indicating the expression s position in the belief set .",
    "2 .   a _ from - list _ , indicating how the expression came to be entered into the belief set . in case",
    "the expression is entered in accordance with the above item ( 1 ) , i.e. , using a schema instantiation rule , this list consists of the name ( or other identifier ) of the schema and the name ( or other identifier ) of the inference rule if the system has more than one such rule . in case the expression is entered in accordance with above item ( 2 ) , the list consists of the indexes ( time stamps ) of the premise expressions and the name ( or other identifier ) of the inference rule . in case",
    "the expression is entered in accordance with either of items ( 3 ) or ( 4 ) , i.e. , is a extralogical axiom , the list will consist of some code indicating this ( e.g. , _",
    "es _ standing for ` external source ' ) possibly together with some identifier or other information regarding the source .",
    "3 .   a _ to - list _ , being a list of indexes of all expressions that have been entered into the belief set as a result of rule applications involving the given expression as a premise .",
    "thus to - lists may be updated at any future time .",
    "a _ status indicator _ having the value _ bel _ or _ disbel _ according as the proposition asserted by the expression currently is believed or disbelieved .",
    "the primary significance of this status is that only expressions that are believed can serve as premises in inference rule applications .",
    "whenever an expression is first entered into the belief set , it is assigned status _",
    "bel_. this value may then be changed during belief revision at a later time .",
    "when an expression s status is changed from _",
    "bel _ to _ disbel _ it is said to have been _",
    "retracted_. 5 .",
    "an _ epistemic entrenchment factor _ , this being a numerical value indicating the strength with which the proposition asserted by the expression is held .",
    "this terminology is adopted in recognition of the work by grdenfors , who initiated this concept ( gardenfors 1988 ; 1992 ) , and is used here for essentially the same purpose , namely , to assist when making decisions regarding belief retractions .",
    "depending on the application , however , this value might alternatively be interpreted as a degree of belief , as a certainty factor , as a degree of importance , or some other type of value to be used for this purpose .",
    "logical axioms always receive the highest possible epistemic entrenchment value , whatever scale or range may be employed .",
    "6 .   a _ knowledge category specification _ , having one of the values _ a priori _ , _ a posteriori _ , _ analytic _ , and _",
    "synthetic_. these terms are employed in recognition of the philosophical tradition initiated by immanuel kant ( kant 1935 ) .",
    "logical axioms are designated as a priori ; extralogical axioms are designated as a posteriori ; expressions whose derivations employ only logical axioms and logical inference rules are designated as analytic ; and expressions whose derivations employ any extralogical axioms or extralogical rules are designated as synthetic .",
    "thus when an expression @xmath0 is entered into the belief set , it is more exactly entered as an expression - label pair @xmath27 , where @xmath28 is the label .",
    "a drs s language , axiom schemas , and inference rules comprise a _ logic _ in the usual sense . it is required that this logic be _ consistent _",
    ", i.e. , for no expression @xmath0 is it possible to derive both @xmath0 and @xmath29 .",
    "the belief set may become inconsistent , nonetheless , through the introduction of contradictory extralogical axioms .",
    "in what follows , only expressions representing a posteriori and synthetic knowledge may be retracted ; expressions of a priori knowledge are taken as being held unequivocally .",
    "thus the term ` a priori knowledge ' is taken as synonymous with ` belief held unequivocally ' , and ` a posteriori knowledge ' is interpreted as ` belief possibly held only tentatively ' ( some a posteriori beliefs may be held unequivocally ) . accordingly",
    "the distinction between knowledge and belief is somewhat blurred , and what is referred to as a ` belief set ' might alternatively be called a ` knowledge base ' , as is often the practice in ai systems .",
    "a _ controller",
    "_ effectively determines the modeled agent s _ purpose _ or _ goals _ by managing the drs s interaction with its environment and guiding the reasoning process . with regard to the latter ,",
    "the objectives typically include ( i ) deriving all expressions salient to the given application and entering these into the belief set , and ( ii ) ensuring that the belief set remains consistent . to these ends",
    ", the business of the controller amounts to performing the following operations .",
    "1 .   receiving input from its environment , e.g. , human users , sensors , or other artificial agents , expressing this input as expressions in the given language @xmath8 , and entering these expressions into the belief set in the manner described above ( derivation path items ( 3 ) and ( 4 ) ) . during this operation ,",
    "new symbols are appropriated as needed to express concepts not already represented in the current @xmath14 .",
    "2 .   applying inference rules in accordance with some extralogical objective ( some plan , purpose , or goal ) and entering the derived conclusions into the belief set in the manner described above ( derivation path items ( 1 ) and ( 2 ) ) .",
    "3 .   performing any actions that may be prescribed as a result of the above reasoning process , e.g. , moving a robotic arm , returning a response to a human user , or sending a message to another artificial agent .",
    "4 .   whenever necessary , applying a ` dialectical belief revision ' algorithm for contradiction resolution in the manner described below .    a _ contradiction _ is an expression of the form @xmath7 .",
    "sometimes it is convenient to represent the general notion of contradiction by the falsum symbol , @xmath30 .",
    "contradiction resolution is triggered whenever a contradiction or a designated equivalent expression is entered into the belief set .",
    "we may assume that this only occurs as the result of an inference rule application , since it obviously would make no sense to enter a contradiction directly as an extralogical axiom .",
    "the contradiction resolution algorithm entails three steps :    1 .   starting with the from - list in the label on the contradictory expression , backtrack through the belief set following from - lists until one identifies all extralogical axioms that were involved in the contradiction s derivation .",
    "note that such extralogical axioms must exist , since , by the consistency of the logic , the contradiction can not constitute analytical knowledge , and hence must be synthetic .",
    "2 .   change the belief status of one or more of these extralogical axioms , as many as necessary to invalidate the derivation of the given contradiction .",
    "the decision as to which axioms to retract may be dictated , or at least guided by , the epistemic entrenchment values . in effect , those expressions with the lower values would be preferred for retraction",
    ". in some systems , this retraction process may be automated , and in others it may be human assisted .",
    "3 .   forward",
    "chain through to - lists starting with the extralogical axiom(s ) just retracted , and retract all expressions whose derivations were dependent on those axioms .",
    "these retracted expressions should include the contradiction that triggered this round of belief revision ( otherwise the correct extralogical axioms were not retracted ) .",
    "this belief revision algorithm is reminiscent of g. w. f. hegel s ` dialectic ' , described as a process of ` negation of the negation ' ( hegel 1931 ) . in that treatment ,",
    "the latter ( first occurring ) negation is a perceived internal conflict ( here a contradiction ) , and the former ( second occurring ) one is an act of transcendence aimed at resolving the conflict ( here removing the contradiction ) . in recognition of hegel , the belief revision / retraction process formalized in the above algorithm will be called _ dialectical belief revision_.",
    "the paper ( schwartz 2013 ) defines a notion of first - order _ theory _",
    "suitable for use in a drs , provides this with a well - defined semantics ( a notion of _ model _ ) , and establishes a soundness theorem : a theory is consistent if it has a model .",
    "the notions of theory and semantics are designed to accommodate the notion of a belief set evolving over time , as well as inference rules that act by instantiating axiom schemas . a first - order language @xmath8 is defined following the notations of ( hamilton 1988 ) .",
    "this includes notations @xmath31 as predicate symbols ( here the @xmath32-th @xmath33-ary predicate symbol ) and @xmath34 for individual variables .",
    "then , in the path logic , the languages at each successive time step are sublanguages of @xmath8 .",
    "the semantics follows the style of ( shoenfield 1967 ) .",
    "the axiom schemas of ( hamilton 1988 ) are adopted .",
    "the inference rules are those of ( hamilton 1988 ) together with some rules for axiom schema instantiation .",
    "the formalism is sufficiently different from the classical version that new proofs of all relevant propositions must be restated in this context and proven correct .",
    "the treatment also establishes the validity of several derived inference rules that become useful in later examples , including :    2em*hypothetical syllogism * : :    from @xmath35 and @xmath36 infer    @xmath37 , where @xmath38 are any formulas .",
    "2em * aristotelian syllogism * : :    from @xmath39 and @xmath40 , infer    @xmath41 , where @xmath42 are any formulas ,    @xmath43 is any individual variable , and @xmath44 is any    individual constant .",
    "2em*subsumption * : :    from @xmath45 and    @xmath46 , infer    @xmath47 , where    @xmath48 are any unary predicate symbols , and    @xmath43 is any individual variable .",
    "2em*contradiction detection * : :    from @xmath0 and @xmath29 infer    @xmath30 , where @xmath0 is any formula .",
    "2em*conflict detection * : :    from @xmath49 , @xmath40 ,    and @xmath41 infer @xmath30 , where    @xmath42 are any formulas , @xmath43 is any individual    variable , and @xmath44 is any individual constant .",
    "the main objective of ( schwartz 1997 ) was to show how a drs framework could be used to formulate reasoning about property inheritance with exceptions , where the underlying logic was a probabilistic ` logic of qualified syllogisms ' . this work was inspired in part by the frame - based systems due to ( minsky 1975 ) and constitutes an alternative formulation of the underlying logic ( e.g. , as discussed by ( hayes 1980 ) ) .    what was missing in ( schwartz 1997 ) was the notion of a controller .",
    "there a reasoning system was presented and shown to provide intuitively plausible solutions to numerous ` puzzles ' that had previously appeared in the literature on nonmonotonic reasoning , e.g. , opus the penguin ( touretsky 1984 ) , nixon diamond ( touretsky et al . 1987 ) , and clyde the elephant ( touretsky et al . 1987 ) .",
    "but there was nothing to guide the reasoning processes  no means for providing a sense of purpose for the reasoning agent .",
    "the present work fills this gap by adding a controller .",
    "moreover , it deals with a simpler system based on first - order logic and remands further exploitation of the logic of qualified syllogisms to a later work .",
    "the kind of drs developed in this section will be termed a _ multiple inheritance system _ ( mis ) .    for this application",
    "the language @xmath8 discussed in section 3 is expanded by including some _ typed predicate symbols _ , namely , some unary predicate symbols @xmath50 representing _ kinds _ of things ( any objects ) , and some unary predicate symbols @xmath51 representing _ properties _ of things . the superscripts @xmath52 and @xmath53 are applied also to generic denotations .",
    "thus an expression of the form @xmath54 represents the proposition that all @xmath55s have property @xmath56 .",
    "these new predicate symbols are used here purely as syntactical items for purposes of defining an extralogical ` specificity principle ' and some associated extralogical graphical structures and algorithms .",
    "semantically they are treated exactly the same as other predicate symbols .    a _ multiple - inheritance hierarchy _",
    "@xmath57 will be a directed graph consisting of a set of _ nodes _ together with a set of _ links _ represented as ordered pairs of nodes .",
    "nodes may be either _ object _ nodes , _ kind _ nodes , or _ property",
    "_ nodes . a link of the form ( object node , kind node )",
    "will be an _ object - kind _ link , one of the form ( kind node , kind node ) will be a _ subkind - kind _ link , and",
    "one of the form ( kind node , property node ) will be a _ has - property _ link .",
    "there will be no other types of links .",
    "object nodes will be labeled with ( represent ) individual constant symbols , kind nodes will be labeled with ( represent ) kind - type unary predicate symbols , and property nodes will be labeled with ( represent ) property - type unary predicate symbols or negations of such symbols .",
    "in addition , each property type predicate symbol with bear a numerical subscript , called an _ occurrence index _ , indicating an occurrence of that symbol in a given hierarchy @xmath57 .",
    "these indexes are used to distinguish different occurrences of the same property - type symbol in @xmath57 .",
    "an object - kind link between an individual constant symbol @xmath44 and a predicate symbol @xmath58 will represent the formula @xmath59 , a subkind - kind link between a predicate symbol @xmath58 and a predicate symbol @xmath60 will represent the formula @xmath61 , and a has - property link between a predicate symbol @xmath58 and a predicate symbol @xmath62 will represent the formula @xmath63 .",
    "given such an @xmath57 , there is defined on the object nodes and the kind nodes a _ specificity relation _",
    "@xmath64 ( read ` more specific than ' ) according to : ( i ) if @xmath65 is either an object - kind link or a kind - kind link , then @xmath66 , and ( ii ) if @xmath66 and @xmath67 , then @xmath68 .",
    "we shall also have a dual _ generality relation _ @xmath69 ( read ` more general than ' ) defined by @xmath70 iff @xmath71 .",
    "it follows that object nodes are maximally specific and minimally general .",
    "it also follows that @xmath57 may have any number of maximally general nodes , and in fact that it need not be connected .",
    "a maximally general node is a _ root _",
    "node . a _ path _ in a hierarchy @xmath57 ( not to be confused with the path in a path logic ) will be a sequence @xmath72 wherein , @xmath73 is a root node and , for each @xmath74 , the pair @xmath75 is a subkind - kind link , and , the pair @xmath76 is either a subkind - kind link or an object - kind link . note that property nodes do not participate in paths as here defined .",
    "it is desired to organize a multiple inheritance hierarchy as a directed acyclic graph ( dag ) without redundant links with respect to the object - kind and subkind - kind links ( i.e. , here ignoring has - property links ) , where , as before , by a redundant link is meant a direct link from some node to an ancestor of that node other than the node s immediate ancestors ( i.e. , other than its parents ) .",
    "more exactly , two distinct paths will form a _",
    "redundant pair _ if they have some node in common beyond the first place where they differ .",
    "this means that they comprise two distinct paths to the common node(s ) .",
    "a path will be simply _ redundant _ ( or _ redundant in _",
    "@xmath57 ) if it is a member of a redundant pair .",
    "a path contains a _ loop _ if it has more than one occurrence of the same node .",
    "provisions are made in the following algorithms to ensure that hierarchies with loops or redundant paths are not allowed . as is customary",
    ", the hierarchies will be drawn with the upward direction being from more specific to less ( less general to more ) , so that roots appear at the top and objects appear at the bottom .",
    "kind - property links will extend horizontally from their associated kind nodes .    in terms of the above specificity relation on @xmath57",
    ", we can assign an _",
    "address _ to each object and kind node in the following manner .",
    "let the addresses of the root nodes , in any order , be @xmath77 .",
    "then for the node with address ( 1 ) , say , let the next most specific nodes in any order have the addresses @xmath78 ; let the nodes next most specific to the one with address @xmath79 have addresses @xmath80 ; and so on .",
    "thus an address indicates the node s position in the hierarchy relative to some root node",
    ". inasmuch as an object or kind node may be more specific than several different root nodes , the same node may have more than one such address .",
    "note that the successive initial segments of an address are the addresses of the nodes appearing in the path from the related root node to the node having that initial segment as its address .",
    "let @xmath81 denote the usual lexicographic order on addresses .",
    "we shall apply @xmath81 also to the nodes having those addresses .",
    "it is easily verified that , if @xmath82 and the @xmath83 address is an initial segment of the @xmath73 address , then @xmath66 , and conversely . for object and kind nodes",
    ", we shall use the term _ specificity rank _ ( or just _ rank _ ) synonymously with ` address ' .",
    "since , as mentioned , it is possible for any given object or kind node to have more than one address , it thus can have more than one rank .",
    "two nodes are comparable with respect to the specificity relation @xmath64 , however , only if they appear on the same path , i.e. , only if one node is an ancestor of the other , in which case only the rank each has acquired due to its being on that path will apply . thus",
    ", if two nodes are comparable with respect to their ranks by the relation @xmath64 , there is no ambiguity regarding the ranks being compared .",
    "having thus defined specificity ranks for object and kind nodes , let us agree that each property node inherits the rank of the kind node to which it is linked .",
    "thus for property nodes the rank is not an address .",
    "an example of such a hierarchy is shown in figure 3 . here ` tweety ' and ` opus ' may be taken as names for the individual constants @xmath84 and @xmath85 , and ` @xmath86 ' , ` @xmath87 ' , and ` @xmath88 ' can be taken as names , respectively , for the unary predicate symbols @xmath89 , @xmath90 , and @xmath91 . [ note : the superscripts are retained on the names only to visually identify the types of the predicate symbols , and could be dropped without altering the meanings . ]",
    "the links represent the formulas    @xmath92    @xmath93    @xmath94    @xmath95    @xmath96    the subscripts 1 and 2 on the predicate symbol @xmath88 in the graph distinguish the different occurrences of this symbol in the graph , and the same subcripts on the symbol occurrences in the formulas serve to correlate these with their occurrences in the graph .",
    "note that these are just separate occurrences of the same symbol , however , and therefore have identical semantic interpretations .",
    "formally , @xmath97 and @xmath98 can be taken as standing for @xmath99 and @xmath100 with the lower subscripts being regarded as extralogical notations indicating different occurrences of @xmath91 .",
    "this figure reveals the rationale for the present notion of multiple - inheritance hierarchy .",
    "the intended interpretation of the graph is that element nodes and kind nodes inherit the properties of their parents , with the exception that more specific property nodes take priority and block inheritances from those that are less specific .",
    "let us refer to this as the _ specificity principle_. in accordance with this principle , in figure 3 tweety inherits the property canfly from bird , but opus does not inherit this property because the inheritance is blocked by the more specific information that opus is a penguin and penguins can not fly .",
    "figure 3 constitutes a rethinking of the well - known example of opus the penguin depicted in figure 4 ( adapted from ( touretsky1984 ) ) .",
    "the latter is problematic in that , by one reasoning path one can conclude that opus is a flier , and by another reasoning path that he is not .",
    "this same contradiction is implicit in the formulas introduced above , since if one were to apply the axioms and rules of first - order logic discussed in section 3 , one could derive both @xmath101 and @xmath102 , in which case the system would be inconsistent .",
    "we are now in a position to define the desired kind of drs . for the path logic ,",
    "let the language be the one described above , obtained from the @xmath8 of section 3 by adjoining the additional unary kind - type and property - type predicate symbols , let the axiom schemas and inference rules be those discussed in section 3 together with aristotelian syllogism and contradiction detection . in this case",
    ", derivation paths will consist of triples @xmath103 , where these components respectively are the ( sub)language ( of @xmath8 ) , belief set , and multiple inheritance hierarchy at time @xmath6 . in accordance with section 2 , let @xmath18 be the minimal sublanguage of @xmath8 consisting of all formulas that can be built up from the atomic formula @xmath30 , and let @xmath19 .",
    "in addition , let @xmath104 .    the mis controller is designed to enforce the above specificity principle .",
    "contradictions can arise in an mis that has inherently contradictory root nodes in its multiple inheritance hierarchy .",
    "an example of this , the famous nixon diamond ( touretsky 1987 ) , will be discussed .",
    "the purpose of the mis controller will be ( i ) to derive and enter into the belief set all object classifications implicit in the multiple inheritance hierarchy , i.e. , all formulas of the form @xmath59 that can be derived from formulas describing the hierarchy ( while observing the specificity principle ) , and ( ii ) to ensure that the belief set remains consistent . item ( i ) thus defines what will be considered the _ salient information _ for an mis .",
    "also , the mis controller is intended to maintain the multiple inheritance hierarchy as a dag without redundant paths with respect to just the object and kind nodes .",
    "formulas that can be input by the users may have one of the forms ( i ) @xmath59 , ( ii ) @xmath61 , ( iii ) @xmath54 , and ( iv ) @xmath105 .",
    "it will be agreed that the epistemic entrenchment value for all input formulas is @xmath106 .",
    "we may now define some algorithms that are to be executed in response to each type of user input .",
    "there will be eight types of events .",
    "event types 1 , 6 , 7 and 8 correspond to user inputs , and the others occur as the result of rule applications . in all such events",
    "it is assumed that , if the formula provided to the controller already exists and is active in the current belief set , its input is immediately rejected . in each event , assume that the most recent entry into the derivation path is @xmath103 . for the details of the algorithms , please see ( schwartz 2013 ) .",
    "* event type 1 : * a formula of the form @xmath59 is provided to the controller by a human user .",
    "* event type 2 : * a formula of the form @xmath59 is provided to the controller as a result of an inference rule application ( aristotelian syllogism ) .",
    "* event type 3 : * a formula of the form @xmath107 is provided to the controller as a result of an inference rule application ( aristotelian syllogism ) .",
    "* event type 4 : * a formula of the form @xmath108 is provided to the controller as a result of an inference rule application ( aristotelian syllogism ) .",
    "* event type 5 : * the formula @xmath30 is provided to the controller as the result of an application of contradiction detection .",
    "* event type 6 : * a formula of the form @xmath61 is provided to the controller by a human user .",
    "* event type 7 : * a formula of the form @xmath54 is provided to the controller by a human user .",
    "* event type 8 : * a formula of the form @xmath105 is provided to the controller by a human user .",
    "that an mis controller produces all relevant salient information as prescribed above can be summarized as a pair of theorems .",
    "* theorem 5.1 . *",
    "the foregoing algorithms serve to maintain the hierarchy with respect to the object and kind nodes as a directed acyclic graph without redundant links .",
    "* theorem 5.2 . *",
    "after any process initiated by a user input terminates , the resulting belief set will contain a formula of the form @xmath59 or @xmath107 or @xmath108 iff the formula is derivable from the formulas corresponding to links in the inheritance hierarchy , observing the specificity principle .",
    "that the algorithms serve to preserve the consistency of the belief set is established as :    * theorem 5.3 . * for any derivation path in an mis , the belief set that results at the conclusion of a process initiated by a user input will be consistent with respect to the formulas of the forms @xmath59 , @xmath54 , and @xmath107 .",
    "some of the algorithms associated with the foregoing events can be illustrated by considering the inputs needed to create the inheritance hierarchy shown in figure 3 .",
    "this focuses on the process of property inheritance with exceptions .",
    "let us abbreviate ` bird ' , ` penguin ' , and ` canfly ' , respectively , by ` b ' , ` p ' , and ` cf ' . in accordance with the definition of derivation path in section 2.1",
    ", the language @xmath18 will consist only of the formula @xmath30 , and the belief set @xmath19 . in accordance with the definition of an mis , @xmath104 .",
    "we consider inputs of the afoermentioned formulas , with each input comprising a type of event initiating a particular reasoning algorithm .",
    "these inputs and event types are :    @xmath109 , type 6    @xmath110 , type 7    @xmath111 , type 8    @xmath112 , type 1    @xmath113 , type 1    the specificity principle is invoked during the last event .",
    "this results in the following belief set ( omitting formula labels ) :    @xmath109    @xmath110    @xmath111    @xmath112    @xmath114    @xmath113    @xmath115    @xmath116    thus is is seen that , in this example , the algorithms serve to derive all salient information , i.e. , all formulas of the forms @xmath59 , @xmath107 , and @xmath107 that are implicit in the graph , while at the same time correctly enforcing the specificity principle .",
    "it may also be observed that the belief set is consistent .",
    "this considers an application of contradiction detection . the classic nixon diamond puzzle ( cf .",
    "touretsky et al .",
    "1987 ) is shown in figure 5 . here",
    "a contradiction arises because , by the reasoning portrayed on the left side , nixon is a pacifist , whereas , by the reasoning portrayed on the right , he is not .",
    "the resolution of this puzzle in the context of an mis can be described in terms of the multiple inheritance hierarchy shown in figure 6 .",
    "the links in figure 6 represent the formulas    @xmath117    @xmath118    @xmath119    @xmath120    the action of the algorithms may be traced similarly as in illustration 1 .",
    "let ` quaker ' , ` republican ' and ` pacifist ' denote the predicate symbols @xmath89 , @xmath90 and @xmath91 , and abbreviate these by ` q ' , ` r ' and ` p ' .",
    "let ` nixon ' denote the individual constant @xmath84 .",
    "@xmath18 , @xmath121 , and @xmath122 will be as before .",
    "the inputs and their event types are :    @xmath123 , type 7 .",
    "@xmath124 , type 8 .",
    "@xmath125 , type 1 .",
    "@xmath126 , type 1 .",
    "these lead to the following belief set ( again omitting formual labels ) :    @xmath123    @xmath127    @xmath125 .",
    "@xmath128    @xmath129    @xmath130    @xmath30    at this point dialectical belief revision is invoked .",
    "all the formulas that were input by the user are candidates for belief change .",
    "suppose that the formula @xmath127 , is chosen .",
    "then the procedure forward chains through to lists , starting with this formula , and changes to _ disbel _ the status first of @xmath130 , and then of @xmath30 .",
    "this results in a belief set with these three formulas removed ( disbelieved ) leaving only the left side of the hierarchy in figure 6 .",
    "thus again all salient information is derived and the resulting belief set is consistent .",
    "further well - known puzzles that can be resolved similarly within an mis are the others discussed in ( schwartz 1997 ) , namely , bosco the blue whale ( stein 1992 ) , suzie the platypus ( stein 1992 ) , clyde the royal elephant ( touretsky et al . 1987 ) , and expanded nixon diamond ( touretsky et al .",
    "alchourn , c. e. ; grdenfors , p. ; and makinson , d. 1985 . on the logic of theory change : partial meet contraction and revision functions .",
    "_ journal of symbolic logic _ 50(2):510530 .",
    "delgrande , j. p. , and farber , w. , eds",
    "logic programming and nonmonotonic reasoning 11th international conference , lpnmr 2011_. lecture notes in computer science , volume 66452011 , springer verlag .",
    "elgot - drapkin , j. j. ; miller , m. ; and perlis , d. 1987 .",
    "life on a desert island : ongoing work on real - time reasoning . in f.m .",
    "brown , ed .",
    ", _ the frame problem in artificial intelligence : proceedings of the 1987 workshop _ , pp .",
    "349357 , los altos , ca : morgan kaufmann .",
    "elgot - drapkin , j. j. ; miller , m. ; and perlis , d. 1991 .",
    "memory , reason , and time : the step - logic approach . in r.  cummins and j.  pollock , eds , _ philosophy and ai : essays at the interface _ , pp .",
    "mit press .",
    "mccarthy , j. , and hayes , p. 1969 .",
    "some philosophical problems from the standpoint of artificial intelligence .",
    "stanford university . reprinted in ( ginsberg 1987 ) , pp .",
    "2645 , and in v. lifschitz , ed . , _ formalizing common sense : papers by john mccarthy _ , norwood , nj : ablex , 1990 , pp .",
    "2163 .",
    "miller , m. j. 1993 .",
    "_ a view of one s past and other aspects of reasoned change in belief_. phd thesis , university of maryland , college park , department of computer science , july .",
    "technical report cs - tr-3107 and umiacs - tr-93 - 66 .",
    "minsky , m. 1975 . a framework for representing knowledge . in p. winston , ed .",
    ", _ the psychology of computer vision _ , new york : mcgraw - hill , pp . 211277",
    ". a condensed version has appeared in d. metzing , ed .",
    ", _ frame conceptions and text understanding _ , berlin : walter de gruyter , berlin , 1980 , pp .",
    "perlis , d. ; elgot - drapkin , j. j. ; and miller , m. 1991 .",
    "stop the world ",
    "i want to think . in k.",
    "ford and f.  anger , eds .",
    ", _ international journal of intelligent systems : special issue on temporal reasoning , vol . 6 _ , pp . 443456 . also technical report cs - tr-2415 and umiacs - tr-90 - 26 , department of computer science , university of maryland , college park , 1990 .",
    "shoham , y. 1986 .",
    "chronological ignorance : time , nonmonotonicity , necessity , and causal theories . _",
    "proceedings of the american association for artificial intelligence , aaai86 _ , philadelphia , pa , pp . 389393 .",
    "touretzky , d. 1984 .",
    "implicit ordering of defaults in inheritance systems .",
    "_ proceedings of the fifth national conference on artificial intelligence , aaai84 _ , austin , tx , los altos , ca : morgan kaufmann , pp .",
    "322325 . reprinted in ( ginsberg 1987 ) , pp .",
    "106109 , and in g. shafer and j. pearl , eds .",
    ", _ readings in uncertain reasoning _ , san mateo , ca : morgan kaufmann , 1990 , pp . 668671 .",
    "touretzky , d. s. ; horty , j .e . ; and thomason , r.h .",
    "a clash of intuitions : the current state of nonmonotonic multiple inheritance systems .",
    "_ proceedings of the international joint conference on artificial intelligence , ijcai87 _ , milan , italy . pp ."
  ],
  "abstract_text": [
a _ dynamic reasoning system _ ( drs ) is an adaptation of a conventional formal logical system that explicitly portrays reasoning as a temporal activity , with each extralogical input to the system and each inference rule application being viewed as occurring at a distinct time step . </S>",
    "<S> every drs incorporates some well - defined logic together with a controller that serves to guide the reasoning process in response to user inputs . </S>",
    "<S> logics are generic , whereas controllers are application - specific . </S>",
    "<S> every controller does , nonetheless , provide an algorithm for nonmonotonic belief revision . </S>",
    "<S> the general notion of a drs comprises a framework within which one can formulate the logic and algorithms for a given application and prove that the algorithms are correct , i.e. , that they serve to ( i ) derive all salient information and ( ii ) preserve the consistency of the belief set . </S>",
    "<S> this paper illustrates the idea with ordinary first - order predicate calculus , suitably modified for the present purpose , and an example . </S>",
    "<S> the example revisits some classic nonmonotonic reasoning puzzles ( opus the penguin , nixon diamond ) and shows how these can be resolved in the context of a drs , using an expanded version of first - order logic that incorporates typed predicate symbols . </S>",
    "<S> all concepts are rigorously defined and effectively computable , thereby providing the foundation for a future software implementation . _ </S>",
    "<S> _ _ _ _ </S>",


  ]
}
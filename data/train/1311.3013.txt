{
  "article_text": [
    "this is a paper about idealized truthful mechanical knowing agents who know facts in a quantified arithmetic - based language that also includes a connective for their own knowledge ( @xmath0 is read `` i ( the agent ) know @xmath1 '' ) .",
    "it is well known ( @xcite , @xcite , @xcite , @xcite , @xcite , @xcite ) that such an agent can not simultaneously know its own truthfulness and its own code .",
    "reinhardt conjectured that , while knowing its own truthfulness , such a machine can know it has _ some _ code , without knowing which .",
    "this conjecture was proved by carlson @xcite .",
    "the proof uses sophisticated structural results from @xcite about the ordinals , and involves transfinite induction up to @xmath2",
    ".    we will give a proof of a weaker result , but will do so in an elementary way , inducting only as far as @xmath3 .",
    "along the way , we will develop some machinery that is interesting in its own right .",
    "carlson s proof of reinhardt s conjecture is based on stratifying knowledge ( see @xcite for a gentle summary ) .",
    "this can be viewed as adding operators @xmath4 for knowledge after time @xmath5 where @xmath5 takes ordinal values . under certain assumptions , theories in such stratified language _ collapse _ at positive integer multiples of @xmath6 , in the sense that if @xmath7 only contains superscripts @xmath8 ( @xmath9 a positive integer ) then @xmath10 holds if and only if @xmath11 does . in this",
    "paper , collapse occurs at positive integer multiples of @xmath12 , hence the name : _ fast - collapsing theories_.    our result is weakened in the sense that the background theory of knowledge is weakened .",
    "the schema @xmath13 ( @xmath14 denotes universal closure ) is weakened by adding the requirement that @xmath15 not be nested deeper in @xmath7 than in @xmath16 ( the unrestricted schema @xmath17 is preserved , but the knower is not required to _ know _ it ) ; the schema @xmath18 is forfeited entirely ; and a technical axiom called assigned validity ( made up of valid formulas with numerals plugged in to their free variables ) is added to the background theory of knowledge .    on the bright side , our result is stated in a more general way ( we mention in passing how the full unweakened result could also be so generalized , but leave those details for later work ) . casually , our main theorem has the following form :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ a truthful knowing agent whose knowledge is sufficiently `` generic '' can be taught its own truthfulness and still remain truthful .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    here `` generic '' is a specific technical term , but it is inclusive enough to include knowledge that one has some code , thus the statement addresses reinhardt s conjecture .",
    "in section [ prelimsect ] we present some preliminaries .",
    "in section [ stratifierssectn ] we develop _ stratifiers _ , maps from unstratified language to stratified language .",
    "these are the key to fast collapse .",
    "they debuted in @xcite and @xcite .    in section [ uniformsect ]",
    "we discuss _ uniform _ stratified theories .",
    "a key advantage of stratifiers is that they turn unstratified theories into uniform stratified theories .    in section [ genericaxiomssectn ]",
    "we define some notions of genericity of an axiom schema , and establish the genericity of some building blocks of background theories of knowledge .    in section [ mainresultsect ] we state our main theorem and make closing remarks .",
    "[ standarddefns ] ( standard definitions ) let @xmath19 be the language @xmath20 of peano arithmetic and let @xmath21 be an arbitrary language .    1 .   for any @xmath22 , @xmath23 is the range of the @xmath24th partial computable function .",
    "the binary predicate @xmath25 is @xmath19-definable so we will freely act as if @xmath19 actually contains this predicate symbol .",
    "if an @xmath21-structure @xmath26 is clear from context , an _ assignment _ is a function taking variables into the universe of @xmath26 .",
    "if @xmath27 is an assignment , @xmath28 is a variable , and @xmath29 , @xmath30 is the assignment that agrees with @xmath27 except that @xmath31 .",
    "we define @xmath19-terms @xmath32 ( @xmath33 ) , called _ numerals _ , so that @xmath34 and @xmath35 . 5 .",
    "if @xmath7 is an @xmath21-formula , @xmath36 is the set of free variables of @xmath7 . if @xmath37 then @xmath7 is a _",
    "sentence_. 6 .",
    "if @xmath7 is an @xmath21-formula , @xmath28 is variable , and @xmath38 is an @xmath21-term , @xmath39 is the result of substituting @xmath38 for all free occurrences of @xmath28 in @xmath7 . 7 .",
    "a _ universal closure _ of an @xmath21-formula @xmath7 is a sentence @xmath40 .",
    "we write @xmath41 to denote a universal closure of @xmath7 .",
    "we use the word _ theory _ as synonym for _ set of sentences_. 9 .",
    "if @xmath42 is an @xmath21-theory and @xmath26 is an @xmath21-structure , @xmath43 means that @xmath44 for all @xmath45 . 10 .",
    "if @xmath42 is an @xmath21-theory , we say @xmath46 if @xmath44 whenever @xmath43 .",
    "a _ valid _",
    "@xmath21-formula is one that holds in every @xmath21-structure .",
    "12 . for any formulas @xmath47",
    ", we write @xmath48 to abbreviate @xmath49 .",
    "we will repeatedly use the following standard fact without explicit mention : if @xmath16 is a universal closure of @xmath7 , then in order to prove @xmath50 , it suffices to let @xmath27 be an arbitrary assignment and show that @xmath51 $ ] .    for quantified semantics we work in carlson s _ base logic _",
    ", defined as follows .",
    "[ baselogicdefn ] ( the base logic ) a _",
    "language @xmath21 in the base logic _ is a first - order language @xmath52 together with a set of symbols called",
    "_ operators_. formulas of @xmath21 are defined in the usual way , with the clause that whenever @xmath7 is an @xmath21-formula and @xmath15 is an @xmath21-operator , @xmath53 is also an @xmath21-formula ( and @xmath54 ) .",
    "syntactic parts of definition [ standarddefns ] extend to the base logic in obvious ways .",
    "given such an @xmath21 , an _",
    "@xmath26 is a first - order @xmath52-structure @xmath55 together with a function that takes one @xmath21-formula @xmath7 , one @xmath21-operator @xmath15 , and one assignment @xmath27 , and outputs true or false  in which case we write @xmath56 $ ] or @xmath57 $ ] , respectively  satisfying the following three conditions ( where @xmath7 ranges over @xmath21-formulas and @xmath15 ranges over operators ) :    1 .   whether or not @xmath56 $ ] is independent of @xmath58 if @xmath59 .",
    "( alphabetic invariance ) if @xmath16 is an _ alphabetic variant _ of @xmath7 , meaning that it is obtained from @xmath7 by renaming bound variables while respecting binding of the quantifiers , then @xmath60 $ ] if and only if @xmath61 $ ] .",
    "weak substitution ) is replaced by an arbitrary term , is not valid in modal logic . ]",
    "if the variable @xmath62 is substitutable for the variable @xmath28 in @xmath7 , then @xmath63 $ ] if and only if @xmath64 $ ] .",
    "[ completenesscompactness ] ( completeness and compactness ) let @xmath21 be an r.e .  language in the base logic .    1 .",
    "the set of valid @xmath21-formulas is r.e .",
    "2 .   for any r.e .",
    "@xmath21-theory @xmath42 , @xmath65 is r.e .",
    "3 .   there is an effective algorithm , given ( a gdel number for ) an r.e .",
    "@xmath21-theory @xmath42 , to find ( a gdel number for ) @xmath65 .",
    "if @xmath42 is an @xmath21-theory and @xmath46 ( @xmath7 any @xmath21-formula ) , there are @xmath66 such that @xmath67 is valid .    by interpreting the base logic in first - order logic . for details , see @xcite .",
    "let @xmath68 be the language of epistemic arithmetic from @xcite , so @xmath68 extends @xmath19 by a unary operator @xmath15 .",
    "an @xmath68-structure ( more generally an @xmath21-structure where @xmath21 extends @xmath19 ) has _",
    "standard first - order part _ if its first - order part has universe @xmath69 and interprets @xmath70 in the intended ways .",
    "suppose @xmath21 extends @xmath19 and @xmath7 is an @xmath21-formula with @xmath71 .",
    "for any assignment @xmath27 into @xmath69 , we define @xmath72 the sentence obtained by replacing all free variables in @xmath7 by numerals according to @xmath27 .",
    "[ defnofintendedmodel ] for any @xmath68-theory @xmath42 , the intended structure for @xmath42 is the @xmath68-structure @xmath73 that has standard first - order part and interprets @xmath15 so that for any @xmath68-formula @xmath7 and assignment @xmath27 , @xmath74 $ if and only if $ t\\models\\phi^s$.}\\ ] ] we say @xmath42 is _ true _ if @xmath75 .",
    "it is easy to check that the structures @xmath73 of definition [ defnofintendedmodel ] really are @xmath68-structures ( they satisfy conditions 13 of definition [ baselogicdefn ] ) .",
    "the following lemma shows that they accurately interpret quantified formulas in the way one would expect .    for any @xmath68-theory @xmath42 ,",
    "@xmath68-formula @xmath7 and assignment @xmath27 , @xmath76 $ if and only if $ \\mathscr n_t\\models \\phi^s$.}\\ ] ]    straightforward induction .",
    "armed with these definitions , we can make more precise some things we suggested in the introduction .",
    "let @xmath77 be the following @xmath68-theory ( @xmath7 and @xmath16 range over @xmath68-formulas ) :    1 .",
    "( @xmath78 ) @xmath79 whenever @xmath7 is valid . 2 .   ( @xmath80 )",
    "3 .   ( @xmath82 ) @xmath83 .",
    "4 .   ( @xmath84 )",
    "the _ axioms of epistemic arithmetic _ , by which we mean the axioms of peano arithmetic with the induction schema extended to @xmath68 . 6 .",
    "( mechanicalness ) @xmath85 provided @xmath86 . 7 .",
    "@xmath53 whenever @xmath7 is an instance of lines 16 or ( recursively ) 7 .    combining lines 6 and 7 yields the _ strong mechanistic thesis _ , @xmath87 .",
    "one of the main results of @xcite is that @xmath77 is true , that is , @xmath88 . to establish @xmath89 ,",
    "carlson uses transfinite recursion up to @xmath90 , as well as deep structural properties ( from @xcite ) about the ordinals . that @xmath91 satisfies lines",
    "2 , 5 , 6 , and 7 , is trivial ; that it satisfies line 4 follows from the fact that it satisfies lines 12 .",
    "line 1 would be trivial if we added the following line to @xmath77 :    * ( assigned validity ) @xmath92 , whenever @xmath7 is valid and @xmath27 is any assignment .",
    "theorems from @xcite imply assigned validity is already a consequence of @xmath77 , so this addition is not necessary , however it becomes necessary if ( say ) line 2 is weakened .",
    "the main result in this paper is that by weakening @xmath80 , removing @xmath84 , and adding assigned validity , we remove the need to induct up to @xmath2 .",
    "induction up to @xmath93 suffices , and the computations from @xcite can also be avoided .",
    "this is surprising because we do not weaken @xmath82 , the lone schema for which such sophisticated methods were used before .",
    "[ depthdefn ] for any @xmath68-formula @xmath7 , let @xmath94 denote the depth to which @xmath15 operators are nested in @xmath7 , more formally :    * if @xmath7 is an @xmath19-formula then @xmath95 . * if @xmath96 then @xmath97 . * if @xmath98 then @xmath99 . *",
    "if @xmath100 then @xmath101 .",
    "now let @xmath102 be the @xmath68-theory containing the following schemas :    1 .",
    "@xmath78 and @xmath82 .",
    "2 .   assigned validity : @xmath92 whenever @xmath7 is valid and @xmath27 is any assignment .",
    "( @xmath103 ) @xmath81 provided @xmath104 .",
    "4 .   the axioms of epistemic arithmetic . 5",
    ".   mechanicalness",
    "@xmath53 whenever @xmath7 is an instance of lines 15 or ( recursively ) 6 .    our main result ( obtained by inducting only up to @xmath3 )",
    "will imply @xmath102 is true .",
    "let @xmath105 be the language obtained from @xmath19 by adding operators @xmath4 for all @xmath106 .",
    "for any @xmath105-formula @xmath7 , let @xmath107    an example of an @xmath105-formula : @xmath108 .",
    "[ stratifierdefn ] ( stratifiers ) for any infinite subset @xmath109 , the _ stratifier given by @xmath110 _ is the function @xmath111 that takes @xmath68-formulas to @xmath105-formulas in the following way .    1 .",
    "if @xmath7 is atomic , @xmath112 .",
    "2 .   if @xmath7 is @xmath113 , @xmath114 , or @xmath115 , then @xmath116 is @xmath117 , @xmath118 , or @xmath119 , respectively .",
    "3 .   if @xmath7 is @xmath120 , then @xmath121 where @xmath5 is the smallest ordinal in @xmath122 .    by a _ stratifier _ , we mean a stratifier given by some @xmath110 . by the _ veristratifier _ , we mean the stratifier given by @xmath123 .",
    "if @xmath111 is a stratifier and @xmath42 is an @xmath68-theory , @xmath124 denotes @xmath125 .",
    "for example , if @xmath111 is the veristratifier , then @xmath126    [ assignmentplayswellwithstratifier ] suppose @xmath7 is an @xmath68-formula , @xmath27 is an assignment into @xmath69 , and @xmath111 is a stratifier . if @xmath127 are such that @xmath128 and @xmath129 , then @xmath130 .    by induction .",
    "[ depthandstratifier ] suppose @xmath7 and @xmath16 are @xmath68-formulas and @xmath111 is a stratifier .",
    "let @xmath127 be such that @xmath128 and @xmath131 .",
    "then @xmath132 if and only if @xmath133 .",
    "by induction .    for any @xmath105-structure @xmath26 and stratifier @xmath111 ,",
    "let @xmath134 be the @xmath68-structure that has the same universe and interpretation of @xmath19 as @xmath26 , and that interprets @xmath15 so that for any @xmath68-formula @xmath7 and assignment @xmath27 , @xmath135 $ if and only if $ \\m\\models ( k\\phi)^+[s]$.}\\ ] ]    it is easy to check that if @xmath26 is an @xmath105-structure then @xmath134 really is an @xmath68-structure ( it satisfies conditions 13 of definition [ baselogicdefn ] ) . from now on we will suppress this remark when defining new structures .",
    "[ structuregrowingmagic ] let @xmath26 be an @xmath105-structure , @xmath111 a stratifier .",
    "for any @xmath68-formula @xmath7 and assignment @xmath27 , @xmath136 $ if and only if $ \\m\\models \\phi^+[s].$}\\ ] ]    a straightforward induction .    for any @xmath105-formula @xmath7",
    ", @xmath137 is the @xmath68-formula obtained by changing every operator of the form @xmath4 in @xmath7 into @xmath15 . if @xmath42 is an @xmath105-theory , @xmath138 .",
    "@xmath139    [ obviouslemma ] let @xmath111 be a stratifier .",
    "for any @xmath68-formula @xmath7 , @xmath140 .",
    "straightforward .",
    "if @xmath26 is an @xmath68-structure , let @xmath141 be the @xmath105-structure that has the same universe as @xmath26 , agrees with @xmath26 on @xmath19 , and interprets each @xmath4 so that for any @xmath105-formula @xmath7 and assignment @xmath27 , @xmath142 $ if and only if $ \\m\\models k\\phi^-[s]$.}\\ ] ]    in @xcite ( definition 5.4 ) , @xmath141 is the _ stratification of @xmath26 over @xmath3_.    [ structureshrinkingmagic ] for any @xmath68-structure @xmath26 , @xmath105-formula @xmath7 and assignment @xmath27 , @xmath143 $ if and only if $ \\m\\models\\phi^-[s]$.}\\ ] ]    a straightforward induction .    [ stratifiersrespectvalidity ]    1 .   for any valid @xmath105-formula @xmath7 , @xmath137 is valid . 2 .",
    "for any @xmath68-formula @xmath7 and stratifier @xmath111 , @xmath7 is valid if and only if @xmath116 is valid .",
    "\\(1 ) let @xmath7 be a valid @xmath105-formula .",
    "for any @xmath68-structure @xmath26 and assignment @xmath27 , since @xmath7 is valid , @xmath144 $ ] and so by lemma [ structureshrinkingmagic ] , @xmath145 $ ] . by arbitrariness of @xmath26 and @xmath27",
    ", @xmath137 is valid .",
    "( 2 , @xmath146 ) assume @xmath7 is a valid @xmath68-formula .",
    "for any @xmath105-structure @xmath26 and assignment @xmath27 , since @xmath7 is valid , @xmath147 $ ] , and @xmath148 $ ] by lemma [ structuregrowingmagic ] . by arbitrariness of @xmath26 and @xmath27 ,",
    "this shows @xmath116 is valid .",
    "( 2 , @xmath149 ) assume @xmath7 is an @xmath68-formula and @xmath116 is valid . for any @xmath68-structure @xmath26 and assignment @xmath27 , since @xmath116 is valid , @xmath150 $ ] , and @xmath151 $ ] by lemma [ structureshrinkingmagic ] .",
    "by lemma [ obviouslemma ] , @xmath51 $ ] . by arbitrariness of @xmath26 and @xmath27",
    ", @xmath7 is valid .",
    "[ oplusdefn ] for any @xmath68-theory @xmath42 , let @xmath152    suppose @xmath42 is the @xmath68-theory consisting of @xmath153 for all @xmath19-sentences @xmath7 . then @xmath154 is the @xmath105-theory consisting of @xmath155 for all @xmath19-sentences @xmath7 and ordinals @xmath156 .",
    "[ proofstrat ] ( upward proof stratification ) for any @xmath68-theory @xmath42 , @xmath68-sentence @xmath7 , and stratifier @xmath111 , the following are equivalent .",
    "@xmath157    this theorem is so - named because it is an upside - down version of a harder theorem that we called @xcite _",
    "proof stratification_. in non - upward proof stratification , @xmath42 and @xmath7 are taken in the _ stratified _ language and the theorem states that @xmath46 if and only if @xmath158 .",
    "this uses complicated hypotheses on @xmath42 and @xmath7 .",
    "versions of these hypotheses could be stated in an elementary way , but _ a priori _ they might imply @xmath42 is inconsistent ( in which case theorem [ proofstrat ] is trivial ) .",
    "the only way we know to exhibit consistent theories that satisfy such hypotheses is to exploit the machinery from @xcite on the @xmath159-structure of the ordinals .",
    "let @xmath42 , @xmath7 and @xmath111 be as in theorem [ proofstrat ] .",
    "( @xmath160 ) assume @xmath46 . by theorem [ completenesscompactness ] , there are @xmath66 such that @xmath67 is valid . by theorem [ stratifiersrespectvalidity ] , @xmath161 is valid , showing @xmath162 .",
    "( @xmath163 ) trivial : @xmath164 .    ( @xmath165 ) assume @xmath166",
    ". by theorem [ completenesscompactness ] there are @xmath167 such that @xmath168 is valid . by definition of @xmath154 there are @xmath169 and stratifiers @xmath170 such that each @xmath171 . by lemma [ obviouslemma ]",
    "@xmath172 so theorem [ stratifiersrespectvalidity ] guarantees @xmath173 is valid , and @xmath46 .",
    "suppose @xmath174 and @xmath175 . for any @xmath105-formula @xmath7",
    ", we define @xmath176 to be the @xmath105-formula obtained by replacing @xmath4 by @xmath177 everywhere @xmath178 occurs in @xmath7 ( @xmath179 ) .",
    "( if @xmath180 , we do not change occurrences of @xmath4 in @xmath7 . )",
    "suppose @xmath181 are distinct ordinals in @xmath93 .",
    "let @xmath182 , let @xmath183 , @xmath184",
    ". then @xmath185    [ uniformdefn ] an @xmath105-theory @xmath42 is _ uniform _ if the following statement holds . for all @xmath109 , for all order - preserving @xmath175 , for all @xmath45 , if @xmath186 then @xmath187 .",
    "if @xmath42 contains @xmath188 and @xmath42 is uniform , then @xmath42 must contain @xmath189 for all @xmath190 .",
    "[ uniformityofstratifiers ] suppose @xmath111 is a stratifier , @xmath109 , @xmath175 is order preserving , and @xmath7 is an @xmath68-formula with @xmath191 .",
    "there is a stratifier @xmath192 such that @xmath193 .",
    "let @xmath194 , @xmath195 , and let @xmath192 be the stratifier given by @xmath196 . by induction , for every subformula @xmath197 of @xmath7 , @xmath198 .",
    "[ uniformitylemma ] ( uniformity lemma ) for any @xmath68-theory @xmath42 , @xmath154 is uniform .",
    "let @xmath109 , let @xmath175 be order preserving , let @xmath199 , and assume @xmath186 . by definition of @xmath154 , @xmath200 for some @xmath201 and some stratifier @xmath111 . by lemma [ uniformityofstratifiers ]",
    "there is a stratifier @xmath192 such that @xmath202 .",
    "this shows @xmath203 .",
    "unfortunately , the range of @xmath204 does not include every uniform @xmath105-theory .",
    "for example , suppose @xmath42 is the @xmath105-theory consisting of @xmath205 for all @xmath68-sentences @xmath7 and @xmath16 and stratifiers @xmath111 with @xmath206 .",
    "the reader may check that despite being uniform , @xmath42 is not @xmath207 for any @xmath68-theory @xmath208 .",
    "[ structuremappingdefn ] if @xmath26 is an @xmath105-structure , @xmath174 , and @xmath175 , we define an @xmath105-structure @xmath209 that has the same universe as @xmath26 , agrees with @xmath26 on the interpretation of @xmath19 , and interprets @xmath4 so that for any @xmath105-formula @xmath7 and assignment @xmath27 , @xmath210 $ if and only if $ \\m\\models h(k^\\alpha\\phi)[s]$.}\\ ] ]    [ structuremappingmagic ] suppose @xmath26 , @xmath110 , and @xmath211 are as in definition [ structuremappingdefn ] . for any @xmath105-formula @xmath7 and assignment @xmath27 , @xmath212 $ if and only if $ \\m\\models h(\\phi)[s]$.}\\ ] ]    by induction .",
    "we will only need part 1 of the next lemma , we state part 2 for completeness .    [ hpreservesvalidity ] suppose @xmath26 , @xmath110 , and @xmath211 are as in definition [ structuremappingdefn ] and @xmath7 is an @xmath105-formula .    1 .",
    "if @xmath7 is valid then @xmath176 is valid . 2 .",
    "assume @xmath211 is injective .",
    "if @xmath186 and @xmath176 is valid , then @xmath7 is valid .",
    "\\(1 ) similar to theorem [ stratifiersrespectvalidity ] .",
    "\\(2 ) if @xmath176 is valid then @xmath213 is valid by part 1 . since @xmath186 , @xmath214",
    "for any @xmath105-theory @xmath42 and @xmath106 , let @xmath215 be the subset of @xmath42 where all superscripts are strictly bounded by @xmath5 .",
    "* for any @xmath105-theory @xmath42 , @xmath216 .",
    "* for any @xmath105-theory @xmath42 , @xmath217 .",
    "* for any @xmath68-theory @xmath42 , @xmath218 .",
    "[ collapsethm ] ( the collapse theorem ) let @xmath42 be a uniform @xmath105-theory .",
    "for any @xmath219 and @xmath105-formula @xmath7 with @xmath220 , @xmath46 if and only if @xmath221 .    2",
    "the @xmath149 direction is trivial : @xmath222 . for @xmath146 , assume @xmath223 . by theorem [ completenesscompactness ] there are @xmath66 such that @xmath224 is valid .",
    "let @xmath225 , @xmath226 , see fig .",
    "1 . then @xmath227 and @xmath228 .    since @xmath229 and @xmath230 has no maximum element , there are infinitely many ordinals above @xmath110 in @xmath230 .",
    "thus since @xmath231 we can find @xmath232 such that @xmath233 and @xmath234 .",
    "it follows there is an order preserving function @xmath235 such that @xmath236 for all @xmath237 .    by lemma [ hpreservesvalidity ]",
    ", @xmath238 is valid . since @xmath239",
    ", we have @xmath186 and @xmath240 .",
    "thus @xmath241 since @xmath42 is uniform , each @xmath242 .",
    "in fact , since @xmath243 , each @xmath244 , and the validity of @xmath245 witnesses @xmath221 .",
    "[ stratifiedmodel ] if @xmath42 is an @xmath105-theory , its intended structure is the @xmath105-structure @xmath246 with standard first - order part that interprets the operators of @xmath105 so that for every @xmath105-formula @xmath7 , assignment @xmath27 , and @xmath106 , @xmath247 $ if and only if $ t\\cap\\alpha\\models \\phi^s$.}\\ ] ]    [ scriptmbehavesasintended ] suppose @xmath42 is an @xmath105-theory . for any @xmath105-formula @xmath7 and assignment @xmath27 , @xmath248 $ ] if and only if @xmath249 .    by induction .",
    "recall from definition [ stratifierdefn ] that the veristratifier is the stratifier given by @xmath250 .",
    "[ upwardstratificationtheorem ] ( the upward stratification theorem ) let @xmath111 be the veristratifier .",
    "for any @xmath68-theory @xmath42 , @xmath68-formula @xmath7 , and assignment @xmath27 , @xmath251 $ ] if and only if @xmath252 $ ] .",
    "again , the theorem is so - named because it is an upside - down version of a harder theorem that equates @xmath248 $ ] with @xmath253 $ ] for stratified @xmath42 and @xmath7 under more complicated hypotheses .    by induction on @xmath7 .",
    "the only nontrivial case is when @xmath7 is @xmath254 .",
    "then @xmath255 for some @xmath5 .",
    "by definition of the veristratifier , @xmath256 for some @xmath219 , and @xmath257 . by lemma [ uniformitylemma ]",
    ", @xmath154 is uniform , so we can use the collapse theorem ( theorem [ collapsethm ] ) .",
    "the following are equivalent . @xmath258\\\\ t & \\models \\psi^s    & \\mbox{(definition \\ref{defnofintendedmodel})}\\\\ t^\\oplus & \\models ( \\psi^s)^+    & \\mbox{(upward proof stratification --- theorem \\ref{proofstrat})}\\\\ t^\\oplus\\cap(\\omega\\cdot n ) & \\models ( \\psi^s)^+    & \\mbox{(the collapse theorem --- theorem \\ref{collapsethm})}\\\\ t^\\oplus\\cap(\\omega\\cdot n ) & \\models ( \\psi^+)^s    & \\mbox{(clearly $ ( \\psi^s)^+\\equiv(\\psi^+)^s$)}\\\\ \\m_{t^\\oplus } & \\models k^{\\omega\\cdot n}\\psi^+[s ] .    &",
    "\\mbox{(definition \\ref{stratifiedmodel } ) } \\end{aligned}\\ ] ]    [ revelatorycorollary ] for any @xmath68-theory @xmath42 , in order to show @xmath75 , it suffices to show @xmath259 .",
    "corollary [ revelatorycorollary ] provides a foothold for proving truth of self - referential theories by transfinite induction up to @xmath93 : in order to prove @xmath260 , one can attempt to prove @xmath261 for all @xmath106 by induction on @xmath5 .",
    "one way to state an epistemological consistency result , for example that a truthful machine can know itself to be true and recursively enumerable , is to show that the schemas in question are consistent with a particular background theory of knowledge .",
    "we take a more general approach : show that the doubted schemas are consistent with _ any _ background theory satisfying certain conditions .",
    "we say that an @xmath68-theory @xmath42 is _ @xmath15-closed _ if @xmath262 whenever @xmath45 .",
    "[ baregenericdefn ] suppose @xmath208 is an @xmath68-theory .    1 .   @xmath208 is _ generic _ if @xmath263 for every @xmath68-theory @xmath264 .",
    "@xmath208 is _ closed - generic _ if @xmath208 is @xmath15-closed and @xmath263 for every @xmath15-closed @xmath68-theory @xmath264 .",
    "3 .   @xmath208 is _",
    "r.e .- generic _ if @xmath208 is r.e .  and @xmath263 for every r.e .",
    "@xmath68-theory @xmath264 .",
    "@xmath208 is _ closed - r.e .- generic _ if @xmath208 is @xmath15-closed , r.e . , and @xmath263 for every @xmath15-closed r.e .",
    "@xmath68-theory @xmath264 .",
    "[ genericdiamond ]    1 .",
    ".  implies r.e .- generic .",
    "2 .   generic@xmath266-closed implies closed - generic .",
    "closed - generic@xmath265r.e",
    ".  implies closed - r.e .- generic .",
    "r.e .- generic@xmath266-closed implies closed - r.e .- generic .",
    "straightforward .",
    "[ genericunions ] let @xmath267 where each @xmath268 is an @xmath68-theory .    1 .   if the @xmath268 are generic , then @xmath42 is generic .",
    "2 .   if the @xmath268 are closed - generic , then @xmath42 is closed - generic .",
    "if the @xmath268 are r.e .- generic and @xmath42 is r.e . , then @xmath42 is r.e .- generic .",
    "4 .   if the @xmath268 are closed - r.e .- generic and @xmath42 is r.e . , then @xmath42 is closed - r.e .- generic .",
    "straightforward .",
    "[ etwoisgeneric ] the @xmath68-schema @xmath80 , consisting of @xmath81 , is generic .",
    "suppose @xmath269 is arbitrary .",
    "for any @xmath68-formulas @xmath7 and @xmath16 and assignment @xmath27 , if @xmath270 $ ] and @xmath271 $ ] , then @xmath272,\\mbox { as desired . }    & \\mbox{(definition \\ref{defnofintendedmodel } ) } \\end{aligned}\\ ] ]    suppose @xmath208 is an @xmath68-theory .    1 .   @xmath208 is _ upgeneric _ if @xmath273 for every @xmath68-theory @xmath264 .",
    "@xmath208 is _ closed - upgeneric _ if @xmath208 is @xmath15-closed and @xmath273 for every @xmath15-closed @xmath68-theory @xmath274 .",
    "3 .   @xmath208 is _ r.e",
    ".- upgeneric _ if @xmath208 is r.e .  and",
    "@xmath273 for every r.e .",
    "@xmath68-theory @xmath264 .",
    "@xmath208 is _ closed - r.e .- upgeneric _ if @xmath208 is @xmath15-closed , r.e . , and @xmath273 for every @xmath15-closed r.e .",
    "@xmath68-theory @xmath264 .",
    "( compare lemma [ genericdiamond ] )    1 .",
    "upgeneric@xmath266-closed implies closed - generic .",
    "2 .   upgeneric@xmath265r.e .",
    "implies r.e .- upgeneric .",
    "closed - upgeneric@xmath265r.e",
    ".  implies closed - r.e .- upgeneric .",
    "r.e .- upgeneric@xmath266-closed implies closed - r.e .- upgeneric",
    ".    straightforward .",
    "[ upgenericunions ] suppose @xmath275 where the @xmath268 are @xmath68-theories .    1 .   if the @xmath268 are upgeneric , then @xmath42 is upgeneric .",
    "2 .   if the @xmath268 are closed - upgeneric , then @xmath42 is closed - upgeneric .",
    "if the @xmath268 are r.e .- upgeneric and @xmath42 is r.e . , then @xmath42 is r.e .- upgeneric .",
    "4 .   if the @xmath268 are closed - r.e .- upgeneric and @xmath42 is r.e . , then @xmath42 is closed - r.e .- upgeneric .",
    "straightforward .",
    "[ upgenericimpliesgeneric ]    1 .",
    "upgeneric implies generic .",
    "2 .   closed - upgeneric implies closed - generic .",
    "3 .   r.e .- upgeneric implies r.e .- generic .",
    "closed - r.e .- upgeneric implies closed - r.e .- generic .    by the upward stratification theorem ( theorem [ upwardstratificationtheorem ] ) .    in light of lemmas [ etwoisgeneric ] and [ upgenericimpliesgeneric ]",
    ", the following shows that upgeneric is strictly stronger than generic .",
    "[ etwonotupgeneric ] @xmath80 is not upgeneric . in fact",
    "@xmath80 is not even closed - r.e .- upgeneric .",
    "let @xmath42 be the smallest @xmath15-closed @xmath68-theory containing the following schemata .",
    "1 .   @xmath80 .",
    "2 .   @xmath276 .",
    "3 .   @xmath277 .    since @xmath269 is closed r.e .",
    ", it suffices to exhibit some @xmath278 and stratifier @xmath111 such that @xmath279 .",
    "if @xmath111 is the stratifier given by @xmath280 , the reader can check that @xmath281 works .",
    "lemma [ etwonotupgeneric ] and the following demystify our reason for weakening @xmath80 to @xmath103 .    [ etwoprimeisupgeneric ] the schema @xmath103 , consisting of @xmath81 whenever @xmath104 ( definition [ depthdefn ] ) , is upgeneric .",
    "let @xmath282 be arbitrary .",
    "suppose @xmath7 and @xmath16 are @xmath68-formulas with @xmath104 and @xmath111 is a stratifier , say with @xmath283 we will show @xmath284 satisfies @xmath285 note that by lemma [ depthandstratifier ] , @xmath286 .",
    "let @xmath27 be an arbitrary assignment such that @xmath287 $ ] and @xmath288 $ ] .",
    "then @xmath289,\\mbox { as desired . }    & \\mbox{(definition \\ref{stratifiedmodel } ) } \\end{aligned}\\ ] ]    [ assignedvalidityisupgeneric ] the assigned validity schema , consisting of @xmath92 whenever @xmath7 is valid and @xmath27 is any assignment , is upgeneric .",
    "let @xmath290 be arbitrary .",
    "suppose @xmath7 is valid , @xmath27 is an assignment , and @xmath111 is a stratifier . by theorem [ stratifiersrespectvalidity ] , @xmath116 is also valid",
    ". thus @xmath252 $ ] , and by lemma [ scriptmbehavesasintended ] , @xmath291 . by arbitrariness of @xmath7 , @xmath27 , and @xmath111 , @xmath292 .",
    "[ trivialgenericlemma ] any set of true purely arithmetical sentences is upgeneric .",
    "trivial : @xmath246 has standard first - order part .",
    "[ eaisupgeneric ] the schema consisting of the axioms of epistemic arithmetic ( peano arithmetic with induction extended to @xmath68 ) is upgeneric .",
    "let @xmath293 .",
    "let @xmath294 be an axiom of epistemic arithmetic , @xmath111 a stratifier .",
    "if @xmath294 is not an induction instance , then @xmath295 by lemma [ trivialgenericlemma ] . but",
    "suppose @xmath294 is an instance @xmath296 of induction , so that @xmath297 is @xmath298 .",
    "to show @xmath299 , let @xmath27 be an assignment and assume @xmath300 $ ] and @xmath301 $ ] .",
    "then @xmath302 , & \\mbox { then } \\m_{t^\\oplus}\\models \\phi^+(x|s(x))[s(x|n ) ]    & \\mbox{(first - order semantics of $ \\forall$ and $ \\rightarrow$)}\\\\ \\forall n\\in\\n,\\mbox { if } \\m_{t^\\oplus}\\models ( \\phi^+)^{s(x|n ) } , & \\mbox { then } \\m_{t^\\oplus}\\models ( \\phi^+(x|s(x)))^{s(x|n ) }    & \\mbox{(lemma",
    "\\ref{scriptmbehavesasintended})}\\\\ \\forall n\\in\\n,\\mbox { if } \\m_{t^\\oplus}\\models ( \\phi^+)^{s(x|n ) } , & \\mbox { then } \\m_{t^\\oplus}\\models ( \\phi^+)^{s(x|n+1 ) }    & \\mbox{(clearly $ \\psi(x|s(x))^{s(x|n)}\\equiv \\psi^{s(x|n+1)}$)}\\\\ \\forall n\\in\\n,\\mbox { } \\m_{t^\\oplus } & \\models ( \\phi^+)^{s(x|n ) }    & \\mbox{(mathematical induction)}\\\\ \\forall n\\in\\n,\\mbox { } \\m_{t^\\oplus } & \\models ( \\phi^+)[s(x|n ) ]    & \\mbox{(lemma \\ref{scriptmbehavesasintended})}\\\\ \\m_{t^\\oplus } & \\models \\forall x\\phi^+[s]\\mbox { , as desired . }    & \\mbox{(first - order semantics of $ \\forall$ ) } \\end{aligned}\\ ] ]    armed with lemmas [ genericunions ] and [ upgenericunions ] , computations such as lemmas [ etwoisgeneric ] , [ etwoprimeisupgeneric ] , [ assignedvalidityisupgeneric ] , [ trivialgenericlemma ] and [ eaisupgeneric ] can be used as building blocks for background theories of knowledge . often , schemas we would like as building blocks are not ( up)generic in isolation , but become so when paired with other building blocks , as in the following three lemmas .",
    "[ eoneandassignedvalidityisupgeneric ] @xmath303 is upgeneric ( @xmath78 consists of @xmath79 whenever @xmath7 is valid ) .    let @xmath304 . by lemma [ assignedvalidityisupgeneric ] , @xmath305 , we need only show @xmath306 .",
    "let @xmath7 be valid , @xmath111 any stratifier , and @xmath27 any assignment .",
    "since @xmath307 , @xmath154 contains the instance @xmath308 of @xmath309 .",
    "in fact , @xmath310 contains @xmath311 , where @xmath5 is such that @xmath128 .",
    "thus by definition [ stratifiedmodel ] , @xmath312 $ ] , that is , @xmath313 $ ] .",
    "this shows @xmath306 .",
    "[ kclosurelemma ] for any upgeneric @xmath208 , @xmath314 is upgeneric , where @xmath315 consists of @xmath53 whenever @xmath316 .",
    "similarly with `` upgeneric '' replaced by `` r.e .- upgeneric '' , `` closed - upgeneric '' , `` closed - r.e .- upgeneric '' , `` generic '' , `` r.e .- generic '' , `` closed - generic '' , or `` closed - r.e .- generic '' throughout .",
    "we prove the upgeneric statement .",
    "suppose @xmath208 is upgeneric and @xmath317 . since @xmath208 is upgeneric and @xmath264 , @xmath273 .",
    "it remains to show @xmath318 for any sentence @xmath316 and stratifier @xmath111 .",
    "let @xmath5 be such that @xmath128 . by definition [ stratifierdefn ] , @xmath319 and thus @xmath320 .",
    "since @xmath321 , @xmath322 as desired .",
    "we will not use the following lemma , but it illuminates differences between this paper s upward approach and carlson s original downward approach .    [ everythingworksgivenetwo ] @xmath323 is closed - generic .",
    "let @xmath42 be a @xmath15-closed theory containing @xmath78 , @xmath80 , @xmath84 and @xmath324 .    by lemma [ etwoisgeneric ] , @xmath325 . by lemmas [ eaisupgeneric ] and [ upgenericimpliesgeneric ] , @xmath326 .",
    "it remains to show @xmath327 .",
    "we will show @xmath328 and sketch @xmath329 .",
    "the typical sentence in @xmath84 is @xmath18 .",
    "let @xmath27 be an assignment and assume @xmath271 $ ] .",
    "then @xmath330 .    & \\mbox{(definition \\ref{defnofintendedmodel})}\\end{aligned}\\ ] ] this shows @xmath328 .",
    "because of the lack of assigned validity , showing @xmath331 is tricky .",
    "we indicate a rough sketch .",
    "carlson s lemmas 5.23 and 7.1 @xcite ( pp .",
    "69 & 72 ) imply @xmath332 ( we invoke lemma 7.1 with @xmath333 a singleton ) .",
    "as written , lemma 5.23 demands @xmath42 also contain @xmath82 , but it can be shown this is unnecessary .",
    "thus we may assume @xmath42 contains assigned validity . by lemmas [ eoneandassignedvalidityisupgeneric ] and [ upgenericimpliesgeneric ] , @xmath329 .",
    "lemma [ everythingworksgivenetwo ] explains why weakening @xmath80 to @xmath103 required two other seemingly - unrelated weakenings : adding assigned validity , and removing @xmath84 altogether .",
    "[ smtisreupgeneric ] the mechanicalness schema , @xmath334 is r.e .- upgeneric .",
    "let @xmath42 be any r.e .",
    "@xmath68-theory containing the mechanicalness schema .",
    "let @xmath111 be a stratifier and let @xmath5 be such that @xmath128 .",
    "we must show @xmath335 let @xmath27 be any assignment and note @xmath336\\ } & = \\{q\\in\\n\\,:\\,t^\\oplus\\cap\\alpha\\models ( \\phi^+)^{s(x|q)}\\}.    & \\mbox{(definition \\ref{stratifiedmodel})}\\end{aligned}\\ ] ] by the church ",
    "turing thesis , the latter set is r.e . , so there is some @xmath337 such that @xmath338\\}.\\ ] ] for all @xmath339 , the following biconditionals are equivalent : @xmath340\\\\ \\m_{t^\\oplus}\\models k^\\alpha\\phi^+[s(e|p)(x|q ) ] & \\mbox { iff } \\m_{t^\\oplus}\\models x\\in w_e[s(e|p)(x|q ) ]    & \\mbox{(first - order semantics of $ \\leftrightarrow$)}\\\\ \\m_{t^\\oplus}\\models k^\\alpha\\phi^+[s(x|q ) ] & \\mbox { iff } \\m_{t^\\oplus}\\models x\\in w_e[s(e|p)(x|q ) ]    & \\mbox{(since $ e\\not\\in\\fv(\\phi)$)}\\\\ \\m_{t^\\oplus}\\models k^\\alpha\\phi^+[s(x|q ) ] & \\mbox { iff } q\\in w_p .",
    "& \\mbox{(since $ \\m_{t^\\oplus}$ has standard first - order part)}\\end{aligned}\\ ] ] the latter is true by definition of @xmath341 . by arbitrariness of @xmath342 ,",
    "@xmath343 $ ] .",
    "[ evenweakerweak ] ( recall the definition of @xmath102 from the end of section [ prelimsect ] ) let @xmath344 be the smallest @xmath15-closed theory containing @xmath78 , assigned validity , @xmath103 , epistemic arithmetic , and mechanicalness .",
    "( loosely speaking , @xmath102 minus @xmath82 . )",
    "then @xmath344 is r.e .- upgeneric .",
    "with the machinery of section [ genericaxiomssectn ] , we are able to state our main result in a generalized form . informally :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ an r.e .- upgeneric theory remains true upon augmentation by knowledge of its own truthfulness .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    reinhardt s conjecture ( proved by carlson ) was that the strong mechanistic thesis is consistent with a particular background theory of knowledge .",
    "we showed ( lemma [ smtisreupgeneric ] ) that mechanicalness is r.e .- upgeneric . by lemma [ kclosurelemma ] ,",
    "the pair consisting of mechanicalness and the strong mechanistic thesis , is r.e .- upgeneric .",
    "thus as long as the background theory of knowledge is r.e .  and built of r.e .- generic pieces along with truthfulness , the corresponding conjecture is a special case of this main result .",
    "[ themaintheorem ] let @xmath208 be an r.e .- upgeneric @xmath68-theory .",
    "let @xmath345 be @xmath346 , that is , @xmath208 along with all axioms of the form @xmath83 .",
    "let @xmath42 be the smallest @xmath15-closed theory containing @xmath345 .",
    "then @xmath42 is true .",
    "3 @xmath353 is @xmath83 for some @xmath7 .",
    "let @xmath354 be such that @xmath355 , so @xmath360 is @xmath361 .",
    "since @xmath362 , this forces @xmath363 .",
    "let @xmath27 be any assignment and assume @xmath364 $ ] . then",
    ": @xmath365    & \\mbox{(assumption)}\\\\ t^\\oplus\\cap\\alpha_0 & \\models ( \\phi^+)^s    & \\mbox{(definition \\ref{stratifiedmodel})}\\\\ \\m_{t^\\oplus } & \\models ( \\phi^+)^s    & \\mbox{(by $ \\epom$-induction , $ \\m_{t^\\oplus}\\models t^\\oplus\\cap\\alpha_0$)}\\\\ \\m_{t^\\oplus } & \\models \\phi^+[s]\\mbox { , as desired . }    & \\mbox{(lemma \\ref{scriptmbehavesasintended } ) } \\end{aligned}\\ ] ]        if one is willing to induct up to @xmath2 and use machinery from @xcite , it is possible ( without the grievous sacrifices we have made in this paper ) to generalize reinhardt s conjecture to a statement of the form :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ any r.e .",
    "theory that is generic in a very specific sense ( one that allows @xmath80 as building block ) remains true upon augmentation by knowledge of its own truthfulness .",
    "( @xmath366 ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the specific notion of `` generic '' in order for this to work is somewhat complicated and hinges on @xcite , putting it out of the present paper s scope",
    ". it does admit mechanicalness as building block , so that ( @xmath366 ) really is a generalization of reinhardt s conjecture , and the notion also admits full @xmath80 , which in turn allows building blocks containing @xmath84 .",
for any r.e .",
    "@xmath68-theory @xmath42 that is generic ( in the sense of definition [ baregenericdefn ] ) , there is an @xmath33 such that @xmath367 is true , where @xmath367 is the smallest @xmath15-closed theory containing @xmath42 along with the schema @xmath368 ( @xmath369 ) .",
    "less formally , any such generic knowing machine can be taught its own code and still remain true . _",
one possible application of this paper is to reverse mathematics @xcite .",
    "since the results ( except lemma [ eaisupgeneric ] ) only use induction up to @xmath3 , suitable versions ( minus lemma [ eaisupgeneric ] and references to @xmath69 ) could be formalized and proved in weak subsystems of arithmetic ."
  ],
  "abstract_text": [
    "<S> reinhardt s conjecture , a formalization of the statement that a truthful knowing machine can know its own truthfulness and mechanicalness , was proved by carlson using sophisticated structural results about the ordinals and transfinite induction just beyond the first epsilon number . </S>",
    "<S> we prove a weaker version of the conjecture , by elementary methods and transfinite induction up to a smaller ordinal . </S>"
  ]
}
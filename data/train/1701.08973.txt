{
  "article_text": [
    "generation and management of meshes is often the most difficult and time consuming part of numerical simulation procedures .",
    "this is further compounded for complex , time - dependent geometries .",
    "the efficiency of mesh generation determines the overall accuracy and robustness of the simulation process . to avoid the task of meshing",
    ", several classes of meshless or meshfree methods have been developed .",
    "meshfree methods use the numerical basis of a set of nodes , which need not be regularly distributed , to cover the computational domain .",
    "these nodes could either be mass - carrying particles or numerical points . for each node ,",
    "the only connectivity information required is a local set of neighbouring nodes over which approximations are carried out",
    ".    smoothed particle hydrodynamics  ( sph ) @xcite is one of the first and most widely used meshless methods . in sph",
    ", the computational domain is discretized by particles which carry mass .",
    "thus , mass conservation is directly guaranteed .",
    "one of the biggest drawbacks of sph is the difficulty in enforcing boundary conditions @xcite .",
    "while a lot of work has been done to address this issue , the sph formulation does not naturally include treatment of most boundary conditions and extra effort is needed to enforce them .",
    "one such method is the addition of ghost or dummy particles outside the computational domain @xcite .",
    "another major drawback of sph in its classical formulation is the so - called particle inconsistency issue which results in the absence of a valid approximation order .",
    "the original sph does not even have @xmath0 particle consistency for irregularly distributed particles and boundary particles .",
    "attempts to solve this problem include the kernel renormalization @xcite which comes at the price of the loss of certain conservation properties for momentum and energy . in addressing these issues ,",
    "the finite pointset method  ( fpm ) evolved out of sph @xcite .",
    "fpm @xcite is a meshfree method based on moving least squares  ( mls ) approximations such that boundary conditions can be directly enforced , without any extra effort .",
    "while sph uses a set of mass - carrying particles as a numerical basis , fpm and other meshfree gfdms ( for example , @xcite ) use a set of numerical points , referred to as a point cloud .",
    "these numerical points do not carry mass , and thus , points can easily be added or removed during a simulation @xcite , which is not possible in the particle - based sph . since point clouds can easily be modified locally ,",
    "fpm is more adaptive than sph , in terms of the discretization of the domain .",
    "however , these advantages come with the drawback of a lack of formal conservation . despite the lack of conservation",
    ", the fpm has been shown to be a robust method with many practical applications @xcite .",
    "the fpm is also used as the numerical basis of two commercially used meshfree simulation tools : nogrid @xcite and the meshfree module of vps - pamcrash @xcite .",
    "it must be noted that in the meshfree context , the acronym fpm is often a confusing one . it is used to represent not only the aforementioned finite pointset method , but also the finite particle method @xcite and the well - known finite point method @xcite .",
    "thus , we henceforth drop the acronym fpm and refer to the finite pointset method under the umbrella term of gfdm . despite the name ,",
    "most meshfree methods are not completely devoid of meshes .",
    "while meshfree methods lack the use of a _ predefined _ mesh for domain discretization , many meshfree methods use an easily generable mesh such that the solution is not too heavily dependent on the quality of that mesh  ( see @xcite for details ) .",
    "several methods , which solve partial differential equations in their weak formulation , use a so - called background mesh for numerical integration of the weak - forms . the element - free galerkin method  ( efg ) @xcite uses a global background mesh , while the meshless local petrov - galerkin method  ( mlpg ) @xcite requires only local background cells .",
    "meshfree particle methods , such as sph , use a predefinition of mass particles , which often requires some kind of a mesh .",
    "one of the methods to solve the problem of particle distortion in sph is by regularization , which requires a re - meshing @xcite .",
    "several methods in the family of point interpolation methods  ( pim ) @xcite use tessellations or background cells in so - called t - schemes for the selection of support domains .",
    "point - based meshfree gfdms are often referred to as ",
    "truly meshfree \" .",
    "however , they too use some notion of a mesh .",
    "they often use local triangulations for accurate post - processing operations or for the identification of points on the free surface of fluid flow simulations . in each of these cases ,",
    "the meshes used are a lot easier to generate and do not impose the restrictions that meshes in classical meshed methods do .",
    "a few attempts have been made to overcome the lack of conservation in meshfree gfdms @xcite , but they lose the completely local nature of the differential operators .",
    "they introduce a symmetry of differential operator coefficients which leads to a discrete divergence theorem .",
    "however , that results in a need to solve for differential operators in a global system . that increases simulation time significantly and makes those methods extremely inefficient on finely discretized point clouds and moving point clouds which require a re - computation of numerical differential operators at every time step .",
    "finite volume methods  ( fvms ) have the feature of local conservation of numerical fluxes from one control volume to its neighbouring one @xcite . in this paper",
    ", we aim to use local control cells , in a manner similar to fvms , in a meshfree framework to introduce an approximate conservation of numerical fluxes . a local control cell at a point is formed by the delaunay tessellation of points in its support domain .",
    "the differential operators are computed using an mls approach which guarantees usual monomial consistency coupled with a conservation of numerical fluxes for specific fields . for modeling fluid flow , we use a fully lagrangian framework . since",
    "point clouds can be modified locally , and the control cells are also defined locally , this method does not face the problem of cell distortion present in lagrangian moving mesh methods . it must be noted that the idea of generalizing control volumes used by fvms in the context of meshfree methods is not a novel one .",
    "the finite - volume particle method  ( fvpm ) @xcite generalizes control volumes to include those which need not be disjoint . in fvpm , grid generation is replaced by an expensive integration of partition of unity functions . the meshless - finite volume method  ( mfvm ) @xcite generalizes voronoi - based moving mesh methods .",
    "mfvm uses a volume partitioning that amounts to a voronoi tessellation with edges smoothed . unlike both the fvpm and mfvm ,",
    "the method presented here is a strong - form method .",
    "the paper is organized as follows . in section  [ sec : fpm ] , we give a brief overview of gfdms . in section  [ sec : conservation ] , we introduce our proposed method by presenting the details of control cells in a meshfree context and the construction of flux conserving differential operators . in section",
    "[ sec : advdiff ] and [ sec : inse ] , we present the application of this method to an advection - diffusion equation and the incompressible navier ",
    "stokes equations respectively .",
    "finally , we conclude the paper in section  [ sec : conclusion ] with a discussion of the proposed method .",
    "for the finite pointset method and other similar meshfree gfdms , the computational domain @xmath1 , with boundary @xmath2 , is discretized using a cloud of @xmath3 numerical points with positions @xmath4 , @xmath5 , which includes points both in the interior and on the boundary of the domain .",
    "the points are usually irregularly spaced .",
    "each numerical point carries the necessary numerical data of the problem .",
    "each point @xmath6 has a set of neighbouring points @xmath7 which contains @xmath8 points , including itself .",
    "the neighbourhood or support @xmath7 is determined as @xmath9 , where @xmath10 is the radius of the support , referred to as smoothing length or interaction radius ; and @xmath11 is a positive constant . a numerical point is not a mass carrying particle and thus , points can easily be added or deleted to adapt the point cloud locally .",
    "the spatial distribution of points is described by three parameters : @xmath12 , @xmath13 and @xmath14 .",
    "it is ensured that no two points are closer than @xmath15 and there exists at least one point in every possible sphere of radius @xmath16 in the computational domain .",
    "thus , the smoothing length @xmath12 also determines the spatial discretization size . @xmath13 and @xmath14 usually have values of approximately @xmath17 and @xmath18 respectively .",
    "further details about point cloud organization and management , including the setup of the initial point cloud , can be found in @xcite .",
    "as the name suggests , numerical derivatives are approximated with a generalized finite difference approach . for a function @xmath19 defined at each numerical point @xmath20 ,",
    "its derivatives are approximated as @xmath21 where @xmath22 represents the differential operator being approximated , @xmath23 represents the continuous @xmath24-derivative at point @xmath6 , and @xmath25 represents the discrete derivative . for a point @xmath6",
    ", the stencil coefficients @xmath26 are found using a weighted least squares approach .",
    "the weighted sum of the stencil coefficients is minimized such that the derivatives of monomials @xmath27 up to a certain order , usually @xmath28 , are exactly reproduced .",
    "@xmath29 where @xmath30 is a weighting function . throughout this paper",
    ", we use a gaussian weighting function @xmath31 for each point @xmath6 , eq . and",
    "eq . are solved to obtain the numerical differential operator , which can then be substituted in the partial differential equations being solved to obtain the spatial discretization . henceforth , the differential operators found by eq . and",
    "eq . will be referred to as classical gfdm .",
    "consider a conservation law @xmath32 with @xmath33 .",
    "for sufficiently smooth @xmath34 and @xmath35 , integrating eq . over the entire domain , and an application of the divergence theorem leads to the integral form of the conservation law , @xmath36 physically , eq . can be stated as the rate of change of energy within the domain should be the same as the energy flux across its boundary , when no energy source or sink is present .",
    "finite volume methods use a local balance on each discretization cell or control volume .",
    "fvms solve eq . by directly enforcing a local , discrete version of eq ..    meshfree gfdms , on the other hand ,",
    "usually directly solve the strong form eq .. the lack of a discrete divergence theorem causes the absence of a discrete form of eq .. this combined with the local nature of the differential operators , eq . , results in conservation not being ensured at a discrete level .",
    "we now present a novel modification of gfdm differential operators to enforce a local discrete divergence theorem .",
    "this results in an approximate discrete form of global conservation , eq ..      for each point @xmath6 , we consider the delaunay tessellation of the @xmath8 points in its support domain @xmath7 .",
    "the voronoi diagram forms the dual graph to the delaunay tessellation . among the tessellations ,",
    "the voronoi cell containing point @xmath6 is the only one of interest , and is used as the control cell over which the flux balance is carried out .",
    "figure  [ fig : controlcellplussupport ] shows such a cell within the support domain .",
    "the point @xmath6 is associated with a volume @xmath37 , taken to be the volume of this cell .",
    "@xmath37 is also used for accurate post - processing .",
    "the local tessellations can also be used in the computation of geometric parameters of the point cloud , such as the identification of free surface points in flows with open boundaries .",
    "alternatively , instead of the voronoi dual , a centroidal dual could also be used to the same effect .",
    "are marked with circles .",
    "interior point  ( left ) and boundary point  ( right).,title=\"fig:\",scaledwidth=40.0% ]    are marked with circles .",
    "interior point  ( left ) and boundary point  ( right).,title=\"fig:\",scaledwidth=40.0% ]    using the local tessellation for the support @xmath7 , we obtain a set of nearest neighbours @xmath38 , in the delaunay sense . for @xmath39 , we let @xmath40 denote the dual edge  ( in 2d ) or face  ( in 3d ) of the delaunay edge @xmath41 .",
    "further , we let @xmath42 denote the area of @xmath40 and @xmath43 denote the unit normal of @xmath40 , pointing away from @xmath6 . for boundary points , the geometric area @xmath44 and outward pointing unit normal @xmath45 are used to truncate and close the semi - infinite voronoi cell , as shown in figure  [ fig : controlcellplussupport ] . to simplify notation",
    ", we define the closure @xmath46 of @xmath38 to include the point @xmath6 itself , if @xmath6 is a boundary point .",
    "further , we let @xmath47 and @xmath48 .",
    "we note that since the voronoi cells are defined locally on the support domain of each point , and not globally , they need not stitch together to form a global tiling of the computational domain .",
    "the uniqueness property of delaunay tessellations suggests that the voronoi cells should stitch together perfectly .",
    "however , that only holds for sufficiently large support domains . for small support domains ,",
    "it is possible that an insufficient number of points in each neighbourhood leads to unsymmetric voronoi cells . under such situations ,",
    "symmetry of the interfaces values , @xmath49 and @xmath50 ; @xmath51 and @xmath52 , is violated .",
    "figure  [ fig : nonsymcells ] shows such an example of adjacent non - symmetric cells .",
    "we measure the extent of stitching together to form a consistent global mesh by the error @xmath53 if @xmath54 , we set @xmath55 and @xmath56 . if the cells are based on a global tessellation , @xmath57 , which leads to @xmath58 .",
    "table  [ tab : stitching ] shows the extent of stitching together of locally defined voronoi cells for different support sizes @xmath59 , and the corresponding average number of points in the support domain .",
    "table  [ tab : stitching ] illustrates that for large enough support domains , which correspond to high values of @xmath59 , the intersection of local voronoi cells is minimum . throughout this paper ,",
    "we use support sizes in the range of @xmath60 $ ] .",
    "this results in approximately @xmath61 points in the support domain of each point in three dimensions , and about @xmath62 points in two dimensions .",
    ", @xmath63  ( left ) and @xmath64 , @xmath65  ( right).,title=\"fig:\",scaledwidth=40.0% ] , @xmath63  ( left ) and @xmath64 , @xmath65  ( right).,title=\"fig:\",scaledwidth=40.0% ]    [ tab : stitching ]    .errors in formation of a global tiling by stitching together locally obtained voronoi cells ( in 3d ) .",
    "the domain considered is a unit sphere with @xmath66 , @xmath67 . [",
    "cols=\"<,<,<\",options=\"header \" , ]     the time taken for the simulation for both methods are shown in figure  [ fig:3dchannel_timetaken ] .",
    "the values of time taken shown in the figure represent the total time taken by each simulation , including the setup of the initial point cloud , the computation of differential operators and the solving of the large sparse linear systems at each time - step , and the post - processing integrations .",
    "the simulations were carried out using fortran and were run serially on an intel xeone5 - 2670 cpu rated at 2.60ghz .",
    "time comparisons were done under the exact same conditions . with the exception of the differential operators , both methods use the same subroutines ; while the differential operators of both gfdm and fc - gfdm use the same implementation of a qr - decomposition .",
    "figure  [ fig:3dchannel_timetaken ] illustrates that , for the same @xmath12 and @xmath68 , both methods take a similar amount of time . for almost no additional computational effort",
    ", the fc - gfdm produces much smaller errors in mass conservation .",
    "further , figures  [ fig:3dchannel_dt ] - [ fig:3dchannel_timetaken ] show that the fc - gfdm takes significantly lesser time to achieve a certain tolerance of mass conservation . the addition of the flux conservation condition results in a slightly larger computation time for the differential operators of the fc - gfdm compared to those of the classical gfdm .",
    "however , as stated earlier , the effect of this on the overall simulation time is not significant .",
    "in fact , occasionally , the overall simulation time can be slightly lesser for the fc - gfdm , as illustrated in figure  [ fig:3dchannel_timetaken ] .",
    "this can be explained by a possible faster convergence of the large sparse linear systems in the fc - gfdm case .          to illustrate the use of the new fc - gfdm differential operators on moving domains and problems with free surfaces , we consider the three dimensional sloshing of water in a rectangular box as shown in figure  [ fig : sloshing ] .",
    "( top left ) , @xmath69  ( top right ) , @xmath70  ( bottom left ) and @xmath71  ( bottom right),title=\"fig:\",scaledwidth=40.0% ]  ( top left ) , @xmath69  ( top right ) , @xmath70  ( bottom left ) and @xmath71  ( bottom right),title=\"fig:\",scaledwidth=40.0% ]  ( top left ) , @xmath69  ( top right ) , @xmath70  ( bottom left ) and @xmath71  ( bottom right),title=\"fig:\",scaledwidth=40.0% ]  ( top left ) , @xmath69  ( top right ) , @xmath70  ( bottom left ) and @xmath71  ( bottom right),title=\"fig:\",scaledwidth=40.0% ]    the initial state is taken to be at rest . slip boundary conditions are used at the walls for the velocity .",
    "free surface boundary conditions are applied at the boundaries @xmath72 where @xmath73 is the surrounding pressure , and @xmath74 and @xmath75 represent the tangential directions .",
    "homogeneous neumann boundary conditions are used for the pressure at the walls .",
    "a varying time - step is used according to eq . with @xmath76 .",
    "the movement of the box is represented in the gravitational and body forces term by setting @xmath77 .",
    "the simulation parameters are set as @xmath78 , @xmath79 , and @xmath80 .",
    "the error in mass conservation is measured by the change in total volume occupied by all points , since the density @xmath81 is fixed and constant throughout the domain @xmath82 where @xmath83 is the initial domain and @xmath1 is the domain at the time when the error is measured . for an initial number of points @xmath84 , the evolution of the error in a global divergence theorem and an error in mass conservation",
    "is shown in figure  [ fig : sloshing_timeevolution ] .",
    "similar to the earlier cases , fc - gfdm shows significantly smaller errors in a global divergence theorem .",
    "that translates to smaller errors in mass conservation which is measured using the change in total volume .",
    "we presented a novel method that combines classical moving least squares approaches to meshfree differential operators and finite - volume like flux conservation over local control cells .",
    "implicit time - integration schemes are used to discretize the pdes , coupled with a conservation of numerical fluxes for specific fields at the previous time - level .",
    "the locally defined control cells are easy to create automatically , and do not impose any further restrictions on the quality of the point cloud .",
    "thus , they do not introduce the drawbacks of globally defined meshes used in mesh - based methods such as finite elements and finite volumes .",
    "our simulations show that the flux conserving differential operators significantly improve conservation properties of meshfree gfdms . for the same space and time discretization , classical gfdm and",
    "the new fc - gfdm take similar simulation times , but the fc - gfdm produces smaller conservation errors .",
    "this method can easily be extended to incorporate sophisticated flux functions .",
    "a drawback of the method is that each numerical field that needs to be conserved has to be considered individually , which can become cumbersome for large systems of pdes .",
    "the problem of getting general conservation , in an efficient manner , via a true discrete divergence theorem for meshfree gfdms remains open .",
    "e.  kwan - yu chiu , q.  wang , and a.  jameson . a conservative meshless scheme : general order formulation and application to euler equations . in _ proceedings of the 49th aiaa aerospace sciences meeting _ , orlando , 2011 .",
    "d.  hietel , m.  junk , j.  kuhnert , and s.  tiwari .",
    "meshless methods for conservation laws . in g.",
    "warnecke , editor , _ analysis and numerics for conservation laws _ , pages 339362 , berlin , heidelberg , 2005 .",
    "springer berlin heidelberg .",
    "a.  jefferies , j.  kuhnert , l.  aschenbrenner , and u.  giffhorn .",
    "finite pointset method for the simulation of a vehicle travelling through a body of water . in m.",
    "griebel and a.  m. schweitzer , editors , _ meshfree methods for partial differential equations vii _ , pages 205221 , cham , 2015 .",
    "springer international publishing .",
    "t.  liszka and j.  orkisz .",
    "special issue - computational methods in nonlinear mechanics the finite difference method at arbitrary irregular grids and its application in applied mechanics . , 11(1):83  95 , 1980 .",
    "a.  tramecon and j.  kuhnert .",
    "simulation of advanced folded airbags with vps - pamcrash / fpm : development and validation of turbulent flow numerical simulation techniques applied to curtain bag deployments . in _",
    "sae technical paper_. sae international , 2013 ."
  ],
  "abstract_text": [
    "<S> lack of conservation has been the biggest drawback in meshfree generalized finite difference methods  ( gfdms ) . in this paper </S>",
    "<S> , we present a novel modification of classical meshfree gfdms to include local balances which produce an approximate conservation of numerical fluxes . this numerical flux conservation is done within the usual moving least squares framework . unlike finite volume methods , it is based on locally defined control cells , rather than a globally defined mesh . </S>",
    "<S> we present the application of this method to an advection diffusion equation and the incompressible navier  stokes equations . </S>",
    "<S> our simulations show that the introduction of flux conservation significantly reduces the errors in conservation in meshfree gfdms . </S>"
  ]
}
{
  "article_text": [
    "* the problem and the model . * two mobile agents ( robots ) modeled as points starting at different locations of an a priori unknown bounded terrain have to meet .",
    "the terrain is represented as a polygon possibly with a finite number of polygonal obstacles .",
    "we assume that the boundary of the terrain is included in it .",
    "thus , formally , a terrain is a set @xmath0 , where @xmath1 is a closed polygon and @xmath2 are disjoint open polygons included in @xmath1 .",
    "we assume that an agent knows if it is at an interior or at a boundary point , and in the latter case it is capable of walking along the boundary in both directions ( i.e. , it knows the slope(s ) of the boundary at this point ) .",
    "however , an agent can not sense the terrain or the other agent at any vicinity of its current location .",
    "meeting ( rendezvous ) is defined as the equality of points representing agents at some moment of time .",
    "we assume that each agent has a unit of length and a compass .",
    "compasses of agents may be incoherent , however we assume that agents have the same ( clockwise ) orientation of their system of coordinates .",
    "an additional tool , which may or may not be available to the agents , is a map of the terrain . the map available to an agent",
    "is scaled ( i.e. , it accurately shows the distances ) , distinguishes the starting positions of this agent and the other one , and is oriented according to the compass of the agent .",
    "( hence maps of different agents may have different north . )",
    "all our considerations concern deterministic algorithms .",
    "the crucial notion is the _ route _ of the agent which is a finite polygonal path in the terrain .",
    "the adversary initially places an agent at some point in the terrain .",
    "the agent constructs its route in steps in the following way . in every step",
    "the agent starts at some point @xmath3 ; in the first step , @xmath3 is the starting point chosen by the adversary .",
    "the agent chooses a direction @xmath4 , according to its compass , and a distance @xmath5 .",
    "if the segment of length @xmath5 in direction @xmath4 starting in @xmath3 does not intersect the boundary of the terrain , the step ends when the agent reaches point @xmath6 at distance @xmath5 from @xmath3 in direction @xmath4 .",
    "otherwise , the step ends at the closest point of the boundary in direction @xmath4 .",
    "if the starting point @xmath3 in a step is in a segment of the boundary of the terrain , the agent has also an option ( in this step ) to follow this segment of the boundary in any of the two directions till its end or for some given distance along it .",
    "steps are repeated until rendezvous , or until the route of the agent is completed .",
    "we consider the _ asynchronous _ version of the rendezvous problem .",
    "the asynchrony of the agents movements is captured by the assumption that the actual walk of each agent is decided by the adversary : the movement of the agent can be at arbitrary speed , the agent may sometimes stop or go back and forth , as long as the walk of the agent in each segment of its route is continuous , does not leave it and covers all of it . more formally , the route in a terrain is a sequence @xmath7 of segments , where @xmath8 $ ] is the segment corresponding to step @xmath9 . in our algorithms",
    "the route is always finite .",
    "this means that the agent stops at some point , regardless of the moves of the other agent .",
    "we now describe the walk @xmath10 of an agent on its route .",
    "let @xmath11 be the route of an agent .",
    "let @xmath12 , where @xmath13 , be an increasing sequence of reals , chosen by the adversary , that represent points in time .",
    "let @xmath14\\rightarrow [ a_i , a_{i+1}]$ ] be any continuous function , chosen by the adversary , such that @xmath15 and @xmath16 .",
    "for any @xmath17 $ ] , we define @xmath18 .",
    "the interpretation of the walk @xmath10 is as follows : at time @xmath19 the agent is at the point @xmath20 of its route and after time @xmath21 the agent remains inert .",
    "this general definition of the walk and the fact that it is constructed by the adversary capture the asynchronous characteristics of the process . throughout the paper , _",
    "rendezvous _ means deterministic asynchronous rendezvous .",
    "agents with routes @xmath22 and @xmath23 and with walks @xmath24 and @xmath25 meet at time @xmath19 , if points @xmath26 and @xmath27 are equal .",
    "a rendezvous is guaranteed for routes @xmath22 and @xmath23 , if the agents using these routes meet at some time @xmath19 , regardless of the walks chosen by the adversary .",
    "the trajectory of an agent is the sequence of segments on its route until rendezvous .",
    "( the last segment of the trajectory of an agent may be either the last segment of its route or any of its segments or a portion of it , if the other agent is met there . )",
    "the cost of a rendezvous algorithm is the worst case sum of lengths of segments of trajectories of both agents , where the worst case is taken over all terrains with the considered values of parameters , and all adversarial decisions .",
    "we consider several scenarios , depending on three factors : ( 1 ) obstacles in the terrain are present , or not , ( 2 ) compasses of both agents agree , or not , ( 3 ) agents have or do not have a map of the terrain .",
    "combinations of the presence or absence of these factors give rise to eight scenarios .",
    "for each scenario we design a deterministic rendezvous algorithm and analyze its cost .",
    "we also prove lower bounds on the cost of any deterministic rendezvous algorithm in each case .",
    "for all scenarios these bounds are tight .",
    "one final precision has to be made . for all scenarios except those with incoherent compasses and the presence of obstacles ( regardless of the availability of a map ) ,",
    "agents may be anonymous , i.e. , they execute identical algorithms .",
    "by contrast , with the presence of obstacles and incoherent compasses , anonymity would preclude feasibility of rendezvous in some situations . consider a square with one square obstacle positioned at its center .",
    "consider two agents starting at opposite ( diagonal ) corners of the larger square , with compasses pointing to opposite north directions . if they execute identical algorithms and walk at the same speed , then at each time they are in symmetric positions in the terrain and hence rendezvous",
    "is impossible .",
    "the only way to break symmetry for a deterministic rendezvous in this case is to equip the agents with distinct labels ( which are positive integers ) .",
    "hence , this is the assumption we make for the scenarios with the presence of obstacles and incoherent compasses ( both with and without a map ) . for any label @xmath28 ,",
    "we denote by @xmath29 the length of the binary representation of the label , i.e. , @xmath30 .    * our results .",
    "* the cost of our algorithms depends on some of the following parameters ( different parameters for different scenarios , see the discussion in section 4 ) : @xmath31 is the distance between starting positions of agents in the terrain ( i.e. , the length of the shortest path between them included in the terrain ) , @xmath32 is the perimeter of the terrain , ( i.e. , the sum of perimeters of all polygons @xmath33 ) , @xmath5 is the largest perimeter of an obstacle , and @xmath34 and @xmath35 are the smaller and larger labels of agents , respectively , for the two scenarios that require different labels , as remarked above . ,",
    "i.e. , for the scenarios with the presence of obstacles and incoherent compasses .",
    "our rendezvous algorithms rely on two different ideas : either meeting in a uniquely defined point of the terrain , or meeting on a uniquely defined cycle .",
    "it turns out that a uniquely defined point can be found in all scenarios except those with the presence of obstacles and incoherent compasses . in this case",
    "even anonymous agents can meet . on the other hand , with the presence of obstacles and incoherent compasses ,",
    "such a uniquely defined point may not exist , as witnessed by the above quoted example of a square with one square obstacle positioned at its center .",
    "for these scenarios we resort to the technique of meeting at a common cycle , breaking symmetry by different labels of agents .",
    "we first summarize our results concerning rendezvous when each of the agents is equipped with a map showing its own position and that of the other agent .",
    "if compasses of the agents are coherent , then we show a rendezvous algorithm at cost @xmath31 , which is clearly optimal . otherwise , and",
    "if the terrain does not contain obstacles , then we show an algorithm whose cost is again @xmath31 , and hence optimal .",
    "finally , with incoherent compasses in the presence of obstacles , we show a rendezvous algorithm at cost @xmath36 ; in the latter scenario we show that cost @xmath37 is necessary for some terrains .",
    "our results concerning rendezvous without a map are as follows .",
    "if compasses of the agents are coherent , then we show a rendezvous algorithm at cost @xmath38 .",
    "we also show a matching lower bound @xmath39 in this case .",
    "if compasses of the agents are incoherent , but the terrain does not contain obstacles , then we show a rendezvous algorithm at cost @xmath38 and again a matching lower bound @xmath39 .",
    "finally , in the hardest of all scenarios ( presence of obstacles , incoherent compasses and no map ) we have a rendezvous algorithm at cost @xmath40 and a matching lower bound @xmath41 . table  [ tab : results ] summarizes our results .",
    ".summary of results [ cols=\"^,^,^,^,^,^ \" , ]     * related work .",
    "* the rendezvous problem was first described in @xcite .",
    "a detailed discussion of the large literature on rendezvous can be found in the excellent book @xcite .",
    "most of the results in this domain can be divided into two classes : those considering the geometric scenario ( rendezvous in the line , see , e.g. , @xcite , or in the plane , see , e.g. , @xcite ) , and those discussing rendezvous in graphs , e.g. , @xcite .",
    "some of the authors , e.g. , @xcite consider the probabilistic scenario where inputs and/or rendezvous strategies are random .",
    "randomized rendezvous strategies use random walks in graphs , which were thoroughly investigated and applied also to other problems , such as graph traversing @xcite , on - line algorithms @xcite and estimating volumes of convex bodies @xcite .",
    "a generalization of the rendezvous problem is that of gathering @xcite , when more than two agents have to meet in one location .",
    "if graphs are unlabeled , deterministic rendezvous requires breaking symmetry , which can be accomplished either by allowing marking nodes or by labeling the agents . deterministic rendezvous with anonymous agents working in unlabeled graphs but equipped with tokens used to mark nodes",
    "was considered e.g. , in  @xcite . in",
    "@xcite the authors studied the task of gathering many agents with unique labels . in @xcite deterministic rendezvous in graphs with labeled agents was considered .",
    "however , in all the above papers , the synchronous setting was assumed .",
    "asynchronous gathering under geometric scenarios has been studied , e.g. , in @xcite in different models than ours : agents could not remember past events , but they were assumed to have at least partial visibility of the scene .",
    "the first paper to consider deterministic asynchronous rendezvous in graphs was @xcite .",
    "the authors concentrated on complexity of rendezvous in simple graphs , such as the ring and the infinite line .",
    "they also showed feasibility of deterministic asynchronous rendezvous in arbitrary finite connected graphs with _ known _ upper bound on the size .",
    "further improvements of the above results for the infinite line were proposed in  @xcite .",
    "gathering many robots in a graph , under a different asynchronous model and assuming that the whole graph is seen by each robot , has been studied in @xcite .",
    "we start by describing the following procedure that finds a unique shortest path from the starting position of one agent to the other .",
    "the procedure works in all scenarios in which agents have a map of the terrain with their positions indicated .    [",
    "lem : shortpath ] procedure uniquepath computes a unique shortest path from @xmath3 to @xmath42 , independent of the agent computing it .    all shortest paths between two points inside a terrain can be computed as in @xcite .",
    "the path computed by the call of uniquepath(@xmath3 , @xmath42 ) is a shortest path , since it is composed , by construction , of parts of shortest paths between @xmath3 and @xmath42 .",
    "the path is computed in a deterministic way without using the compass direction of the agent or the unit of length of the agent .",
    "hence , it is unique .",
    "if agents have a map and coherent compasses , then they can easily agree on one of their two starting positions and meet at this point at cost @xmath31 , which is optimal .",
    "this is done by the following algorithm rvcm ( rendezvous with a map and coherent compasses ) .",
    "[ th : rvmn ] algorithm @xmath43 guarantees rendezvous at cost @xmath31 , for any two agents with a map and coherent compasses , in any terrain .",
    "the position @xmath3 computed by the two agents is the same , since they have coherent compasses .",
    "the agents will eventually meet in @xmath3 .",
    "the cost of rendezvous is @xmath31 , since @xmath44 is of length @xmath31 .        in an empty polygon",
    "there is a unique shortest path between starting positions of the agents  @xcite , and agents with a map can meet in the middle of this path at cost @xmath31 , which is optimal .",
    "this is done by algorithm rvm ( rendezvous with a map , without obstacles ) .",
    "algorithm @xmath45 guarantees rendezvous at cost @xmath31 for any two agents with a map , in any terrain without obstacles .    in a polygon without obstacles ,",
    "the shortest path between two points is unique and can be computed as in  @xcite .",
    "the two agents will eventually meet in the middle of this shortest path .",
    "the cost of rendezvous is @xmath31 , since the path is of length @xmath31 .",
    "this is the first of the two scenarios where agents can not always predetermine a meeting point .",
    "therefore they compute a common embedding of a ring on which they are initially situated , and then each agent executes the rendezvous algorithm from  @xcite for this ring .",
    "rendezvous is guaranteed to occur on the ring , but the meeting point depends on the walks of the agents determined by the adversary .",
    "this is done by algorithm rvmo ( rendezvous with a map , with obstacles ) .",
    "[ th : rvmo ] algorithm @xmath46 guarantees rendezvous at cost @xmath47 for arbitrary two agents with a map , in any terrain .",
    "let @xmath48 and @xmath49 be the two agents that have to meet .",
    "the embedding @xmath50 of the ring is the same for the two agents by lemma  [ lem : shortpath ] .",
    "the algorithm from  @xcite guarantees rendezvous and has complexity expressed in terms of the total number of edge traversals by the agents before rendezvous occurs , equal to @xmath51 , where @xmath52 is the number of nodes of the ring and @xmath34 is the smaller of the two labels of the agents .",
    "since the ring has size four and each of its edges has length @xmath53 , the total cost of rendezvous is @xmath36 .",
    "the following lower bound shows that the cost of algorithm rvmo can not be improved for some terrains .",
    "indeed , it implies that for all @xmath54 , there exists a polygon with a single obstacle , for which the cost of any rendezvous algorithm for two agents , starting at distance @xmath31 , is @xmath37 .",
    "[ lem : claim ] for any rendezvous algorithm @xmath55 , for any @xmath54 , and for any integers @xmath56 , there exist two labels @xmath57 and @xmath58 of lengths at most @xmath59 and at most @xmath60 , respectively , and a polygon with a single obstacle of perimeter @xmath61 , such that algorithm @xmath55 executed by agents with labels @xmath57 and @xmath58 starting at distance @xmath31 , requires cost @xmath62 .",
    "this holds even if the two agents have a map .",
    "the idea of the proof is based on an argument from @xcite . for @xmath63",
    ", we consider a terrain @xmath64 that is a hexagon of side @xmath65 with one hexagonal obstacle of side @xmath66 with the same center .",
    "the two agents start at positions @xmath6 and @xmath3 in @xmath64 , as depicted in figure  [ fig : cercle ] .",
    "the compasses of agents point in opposite directions .",
    "observe that @xmath67 .",
    "we call _ slices _ the six trapezoids bounded by two corresponding parallel sides of the two hexagons and by the segments linking the corresponding vertices of the hexagons . to avoid ambiguity",
    ", we say that an agent in the segment shared by two slices is in the first of them in clockwise order .",
    "note that agents start in two different slices with two slices in between .    ]",
    "fix a rendezvous algorithm @xmath55 .",
    "we assume that both agents always move at the same constant speed .",
    "we divide the execution of algorithm @xmath55 into periods during which each agent traverses a distance @xmath66 . during any period",
    ", an agent can only visit the slice where it starts the period and one of the two adjacent slices .",
    "the behavior of an agent with label @xmath34 , running algorithm @xmath55 , yields the following sequence of integers from the set @xmath68 , called the behavior code .",
    "the @xmath9-th term of the behavior code of an agent is @xmath69 if the agent ends period @xmath9 in the slice preceding ( in clockwise order ) the slice in which it began the period , @xmath70 if it ends period @xmath9 in the slice following it ( in clockwise order ) , and @xmath71 if it begins and ends period @xmath9 in the same slice . due to the symmetry of the figure and to opposite compasses",
    "an agent with a given label has the same behavior code if it starts at point @xmath6 or at point @xmath3 .",
    "note that two agents with the same prefix of length @xmath59 of their behavior codes can not accomplish rendezvous during the first @xmath59 periods , since they start separated by at least two slices , and they can not be in the same slice during any period .",
    "there are less than @xmath72 behavior codes of length at most @xmath73 .",
    "hence it is possible to pick two distinct labels @xmath57 and @xmath58 of lengths at most @xmath59 , respectively , such that the prefix of length @xmath73 of their behavior codes is the same . for these labels ,",
    "algorithm @xmath55 does not accomplish rendezvous before both agents have travelled a distance @xmath74 .",
    "it turns out that agents can recognize the outer boundary of the terrain even without a map .",
    "hence , if their compasses are coherent , they can identify a uniquely defined point on this boundary and meet in this point .",
    "this is done by algorithm rvc ( rendezvous with coherent compasses ) at cost @xmath38 .",
    "algorithm @xmath75 guarantees rendezvous at cost @xmath38 for any two agents with coherent compasses , in any terrain .    the first phase of the algorithm that consists in reaching @xmath1 and making the tour of the boundary of @xmath1 costs at most @xmath76 , since the boundary of each polygon of the terrain is traversed at most twice and the total length of parts of @xmath4 inside the terrain is at most @xmath32 .",
    "reaching the rendezvous point costs at most @xmath32 .",
    "the agents will eventually meet in the easternmost of the northernmost points of @xmath1 , since they have coherent compasses and this point is unique .",
    "the following lower bound shows that the cost of algorithm rvc is asymptotically optimal , for some polygons even without obstacles .",
    "this lower bound @xmath39 holds even if the distance @xmath31 between starting positions of agents is bounded and if their compasses are coherent .",
    "[ th : doublepie ] there exists a polygon of an arbitrarily large perimeter @xmath32 , for which the cost of any rendezvous algorithm for two agents with coherent compasses starting at any distance @xmath54 , is @xmath39 .",
    "consider the polygon @xmath77 obtained by attaching to each side of a regular @xmath78-gon , whose center is at distance @xmath79 from its boundary , a rectangle of length @xmath80 and of height equal to the side length of the @xmath78-gon .",
    "the polygon @xmath81 is the polygon obtained by gluing two copies of @xmath77 by the small side of one of the rectangles , as depicted in fig .",
    "[ fig : camembert ] .",
    "let @xmath32 be the perimeter of the polygon @xmath81 .",
    "we choose @xmath82 .",
    "there are two types of rectangles in @xmath81 , two _ passing _ ones ( they share one side ) and the @xmath83 _ normal _ ones .",
    "consider all rotations of the polygon @xmath81 around its center of symmetry by angles @xmath84 , for @xmath85 .",
    "we will prove that any deterministic rendezvous algorithm requires cost @xmath39 in at least one of the rotated polygons .",
    "each agent starts in the center of a different @xmath78-gon .",
    "we say that an agent has _ penetrated _ a rectangle if it has moved at distance @xmath79 inside the rectangle . in order to accomplish rendezvous",
    ", at least one agent has to penetrate a passing rectangle .",
    "each time one agent penetrates a rectangle , the adversary chooses a rotation , so that all previously penetrated rectangles , including the current one , are normal rectangles .",
    "this choice is coherent with the knowledge previously acquired by the agents , since normal rectangles are undistinguishable from each other and an agent needs to penetrate a rectangle in order to distinguish its type .",
    "hence , the two agents have to penetrate a total of @xmath86 rectangles before the adversary can not rotate the figure to prevent the penetration of a passing rectangle .",
    "it follows that at least one of the agents has to traverse a total distance of @xmath87 before meeting .    ]        in this section , we use the notion of medial axis , proposed by blum  @xcite , to define a unique point of rendezvous inside the terrain .",
    "observe that we can not use the centroid for the rendezvous point since , as we also consider non - convex terrains , the centroid is not necessarily inside the terrain . the _ medial axis _",
    "@xmath88 of a polygon @xmath81 is defined as the set of points inside @xmath81 which have more than one closest point on the boundary of @xmath81 . actually , @xmath88 is a planar tree contained in @xmath81 , in which nodes are linked by either straight - line segment or arcs of parabolas  @xcite .",
    "we define the _ medial point _ of a polygon @xmath81 as either the central node of @xmath88 or the middle of the central edge of @xmath88 , depending on whether @xmath88 has a central node or a central edge .",
    "remark that the medial point of @xmath81 is unique and is inside @xmath81 .",
    "the medial axis of a polygon @xmath81 can be computed as in  @xcite .",
    "algorithm rv ( rendezvous without obstacles , without a map and with possibly incoherent compasses ) determines the unknown ( empty ) polygon and guarantees meeting in its medial point .",
    "[ th : rv ] algorithm @xmath89 guarantees rendezvous at cost @xmath38 for any two agents , in any terrain without obstacles .",
    "the cost of reaching the boundary of @xmath81 and completing a tour of it is at most @xmath90 .",
    "the agent can compute the medial point of the polygon and reach it at cost at most @xmath32 .",
    "the two agents will eventually meet at the medial point , since it is unique .",
    "the lower bound from theorem [ th : doublepie ] shows that the cost of algorithm rv can not be improved for some polygons .",
    "our last rendezvous algorithm , algorithm @xmath91 , works for the hardest of all scenarios : rendezvous with obstacles , no map , and possibly incoherent compasses . here again it may be impossible to predetermine a meeting point .",
    "thus agents identify a common cycle and meet on this cycle .",
    "the difference between the present setting and that of algorithm @xmath46 , where a map was available , is that now agents may start outside of the common cycle and have to reach it before attempting rendezvous on it .",
    "also the common cycle is different : rather than being composed of two shortest paths between initial positions of the agents ( a map seems to be needed to find such paths ) , it is the boundary of a ( possible ) obstacle @xmath92 in which the medial point of the outer polygon is hidden .",
    "these changes have consequences for the cost of the algorithm .",
    "the fact that the medial point of the outer polygon has to be found and the obstacle @xmath92 has to be reached is responsible for the summand @xmath32 in the cost .",
    "the only bound on the perimeter of this obstacle is @xmath5 . finally , the fact that the adversary may delay the agent with the smaller label and force the other agent to make its tours of obstacle @xmath92 before the agent with the smaller label even reaches the obstacle , is responsible for the summand @xmath93 , rather than @xmath94 , in the cost .",
    "a _ cycle _ is a polygonal path whose both extremities are the same point",
    ". a _ tour _ of a cycle @xmath95 is any sequence of all the segments of @xmath95 in either clockwise or counterclockwise order starting from a vertex of @xmath95 . by extension ,",
    "a _ partial tour _ of @xmath95 is a path which is a subsequence of a tour of @xmath95 with the first or the last segment of the subsequence possibly replaced by a subsegment of it .",
    "let @xmath96 and @xmath97 be consecutive segments in clockwise order ( resp .",
    "counterclockwise order ) of a cycle . for a given walk @xmath10 of an agent @xmath98",
    ", we say that the agent _ traverses in a clockwise way _",
    "( resp . _ in a counterclockwise way _ ) a vertex @xmath99 of a cycle at time @xmath19 if @xmath100 and there exist positive reals @xmath101 and @xmath102 and points @xmath66 and @xmath103 such that @xmath104 is an internal point of @xmath96 , @xmath105 is an internal point of @xmath97 and the agent walks in @xmath106 during the time period @xmath107 $ ] .    before establishing the correctness and cost of algorithm @xmath91",
    ", we need to show the following two lemmas .",
    "[ lem : traver ] consider two agents on cycle @xmath95 .",
    "suppose that one agent executes a tour of @xmath95 in some sense of rotation , starting and ending in @xmath3 .",
    "if during the same period of time , the other agent either traverses @xmath3 for the first time in the other sense of rotation or does not traverse it at all , then the two agents meet .",
    "let @xmath24 and @xmath25 be the walks of agents @xmath48 and @xmath49 , respectively .",
    "let @xmath108 be the moment when agent @xmath48 starts its tour of @xmath95 at some vertex @xmath3 .",
    "let @xmath109 be the moment when agent @xmath48 ends its tour , if agent @xmath49 does not traverse @xmath3 in the same period of time , or , otherwise , the first moment after @xmath108 when agent @xmath49 traverses @xmath3 .",
    "we cut cycle @xmath95 at vertex @xmath3 obtaining the path @xmath44 with extremities @xmath110 and @xmath111 that are copies of @xmath3 .",
    "the walks @xmath24 and @xmath25 , during the time period @xmath112 $ ] , can be transposed in @xmath44 , since neither of the two agents traverses @xmath3 during the period @xmath113 . for any @xmath114 $ ] , let @xmath115 be the distance of agent @xmath116 from @xmath110 at time @xmath19 , counted on @xmath44 .",
    "the two functions @xmath117 and @xmath118 are continuous , since the walks of both agents on @xmath44 are continuous .",
    "notice that , since the first traversal of @xmath3 by agent @xmath49 may be only in the sense of rotation opposite to that of agent @xmath48 , we have @xmath119 and either @xmath120 or @xmath121 .",
    "let @xmath122 .",
    "we have @xmath123 and @xmath124 , since @xmath125 and @xmath126 .",
    "the function @xmath127 is thus a continuous function from the interval @xmath128 $ ] onto some interval @xmath129 $ ] , where @xmath130 and @xmath131 .",
    "since @xmath71 belongs to the interval @xmath129 $ ] , there must exist a moment @xmath19 in the interval @xmath128 $ ] , for which @xmath132 . for this moment ,",
    "@xmath133 and the rendezvous occurs .    [",
    "lem : cycles ] consider two agents on a cycle @xmath95 and let @xmath134 be an integer . if an agent executes either a partial tour of @xmath95 followed by at most @xmath78 tours of @xmath95 , or at most @xmath78 tours of @xmath95 followed by a partial tour of @xmath95 , while the second agent executes @xmath135 tours of @xmath95 , then the two agents meet .",
    "assume for contradiction that the two agents never meet . during each tour of @xmath95 by the second agent",
    ", the first agent has to traverse the starting position @xmath3 of the second agent , in view of lemma  [ lem : traver ] .",
    "hence , the first agent has traversed @xmath135 times vertex @xmath3 .",
    "notice that an agent can not traverse @xmath3 without executing a tour of @xmath95 as @xmath3 is an extremity of a segment of its route .",
    "hence the first agent has completed at least @xmath136 complete tours of @xmath95 starting and ending at @xmath3 .",
    "finally , the first agent has started executing its tours at point @xmath3 , a contradiction .",
    "algorithm @xmath91 guarantees rendezvous at cost @xmath40 for any two agents in any terrain for which @xmath5 is the largest perimeter of an obstacle .",
    "let @xmath48 and @xmath49 be the two agents that have to meet .",
    "the first phase of the algorithm that consists in reaching @xmath1 and making the tour of the boundary of @xmath1 costs at most @xmath76 , since the boundary of each polygon of the terrain is traversed at most twice and the total length of parts of @xmath4 inside the terrain is at most @xmath32 .",
    "for the same reason as in phase 1 , the total cost of phase 2 is at most @xmath76 .",
    "if the medial point of @xmath1 is inside the terrain , then the agents meet at the end of phase 2 at total cost of at most @xmath137 .",
    "otherwise , both agents eventually enter phase 3 of the algorithm and they are on the boundary of the obstacle @xmath92 containing the medial point of @xmath1 .",
    "the cost follows from the fact that each agent travels a distance @xmath138 in phase 3 .",
    "indeed , each agent executes at most @xmath139 stages and each stage costs at most @xmath140 .",
    "hence it remains to show that rendezvous occurs in this case as well .",
    "assume for contradiction that the two agents never meet .",
    "notice that the modified label @xmath141 can not be the suffix of the modified label @xmath142 . indeed , if @xmath143 then the two labels are different since @xmath144 , and otherwise the second part of @xmath141 , consisting of 1 followed by @xmath145 zeros , can not be the suffix of @xmath142 .",
    "hence , there exists an index @xmath9 such that the @xmath146-th bit of @xmath141 differs from the @xmath147-th bit of @xmath142 .",
    "we call _ important _ stages the @xmath146-th stage of the agent with label @xmath34 and the @xmath147-th stage of the agent with label @xmath35 .    for @xmath148 ,",
    "let @xmath149 be the moment when agent @xmath150 enters its important stage and let @xmath108 be the first moment when both agents have finished the execution of the algorithm .",
    "suppose by symmetry that @xmath151 , i.e. , agent @xmath48 was the first to enter its important stage",
    ". then @xmath49 must have entered its important stage during the first tour of the important stage of @xmath48 .",
    "otherwise , agent @xmath49 would have completed @xmath152 tours between @xmath153 and @xmath108 , while agent @xmath48 would have completed at most @xmath154 tours .",
    "hence , the two agents would have met in view of lemma  [ lem : cycles ] .",
    "hence , from the time @xmath153 , agent @xmath49 completes one tour in some sense of rotation , starting and ending at a vertex @xmath3 , while agent @xmath48 either traverses @xmath3 for the first time in the other sense of rotation or does not traverse it at all . hence by lemma  [ lem : traver ] , the two agents meet .",
    "the following result gives a lower bound matching the cost of algorithm rvo .",
    "[ lower ] there exist terrains for which the cost of any rendezvous algorithm is @xmath155 .",
    "this holds for arbitrarily small @xmath54 .    since our lower bound is expressed as a sum , in order to prove it , we show two examples , one in which the first summand is as small as possible and the bound is equal to the other summand , and vice - versa .",
    "the first example uses the polygon from theorem  [ lem : claim ] : @xmath32 must be at least @xmath5 and in this example we have @xmath156 and the lower bound is @xmath157 .",
    "indeed , consider two integers @xmath158 . by theorem  [ lem : claim ] , applied for @xmath159 , and for any rendezvous algorithm @xmath55 , there exists a label @xmath35 of length @xmath160 , such that the sum of lengths of segments of the route produced by the execution of @xmath55 by an agent @xmath48 with label @xmath35 is @xmath161 .",
    "the adversary chooses as the initial position of the second agent @xmath49 any point outside a path @xmath44 of length @xmath162 , which is a prefix of the route of agent @xmath48 .",
    "this point can be chosen arbitrarily close to the initial position of the first agent .",
    "the label of agent @xmath49 is of length @xmath163 .",
    "suppose that the start of agent @xmath49 is delayed by the adversary and occurs when @xmath44 is entirely traversed by agent @xmath48 .",
    "the two agents do not meet during this traversal of @xmath44 by the first agent and so the cost of rendezvous is @xmath164 .",
    "the second example is given by the proof of theorem  [ th : doublepie ] .",
    "indeed , in this example there are no obstacles and hence @xmath165 , while the lower bound is @xmath39 .",
    "we presented rendezvous algorithms , analyzed their cost and proved matching lower bounds in all considered scenarios .",
    "however , it is important to note that the formulas describing the cost depend on the chosen parameters in each case .",
    "all our results have the following form . for a given scenario",
    "we choose some parameters ( among @xmath31 , @xmath32 , @xmath5 , @xmath34 , @xmath35 ) , show an algorithm whose cost in any terrain is @xmath166 , where @xmath10 is some simple function of the chosen parameters , and then prove that for some class of terrains any rendezvous algorithm requires cost @xmath167 , which shows that the complexity of our algorithm can not be improved in general , for the chosen parameters .",
    "this yields the question which parameters should be chosen . in the case of complexities @xmath31 and @xmath168 , this choice does not seem controversial , as here @xmath31 and @xmath32 are very natural parameters , and the only ones in these simple cases .",
    "however , for the two scenarios with incoherent compasses and with the presence of obstacles , there are several other possible parameters , and their choice may raise a doubt . as mentioned in the introduction , in these two scenarios ,",
    "distinct labels of agents are necessary to break symmetry , since rendezvous is impossible for anonymous agents .",
    "hence any rendezvous algorithm has to use labels @xmath34 and @xmath35 as inputs , and thus the choice of these labels as parameters seems natural .",
    "by contrast , the choice of parameter @xmath5 may seem more controversial .",
    "why do we want to express the cost of a rendezvous algorithm in terms of the largest perimeter of an obstacle ?",
    "are there other natural choices of parameter sets ?",
    "what are their implications ?",
    "let us start by pondering the second question .",
    "it is not hard to give examples of other natural choices of parameters for the two scenarios with incoherent compasses and with the presence of obstacles .",
    "for example , in the hardest scenario ( without a map ) , we could drop parameter @xmath5 and try to express the cost of the same algorithm rvo only in terms of @xmath31 , @xmath32 , @xmath34 , and @xmath35 . since @xmath169",
    ", we would get @xmath170 instead of @xmath40 .",
    "incidentally , as in our lower bound example of terrains we have @xmath171 , this new complexity @xmath170 is optimal for the same reason as the former one .",
    "another possibility would be adding , instead of dropping a parameter .",
    "we could , for example , add the parameter @xmath172 which is the length of the external perimeter of the terrain , i.e. , the perimeter of polygon @xmath1 .",
    "then it becomes natural to modify algorithm rvo as follows .",
    "the first two phases are the same . in the third phase",
    ", the agent goes around obstacle @xmath92 and compares its perimeter to @xmath172 .",
    "if the perimeter of @xmath92 is smaller ( or equal ) , then the algorithm proceeds as before , and if it is larger , then the agent goes back to the boundary of @xmath1 and executes phase 3 on this boundary instead of the boundary of @xmath92 .",
    "the new algorithm has complexity @xmath173 .",
    "its complexity is again optimal because in our lower bound example we can choose the parameter @xmath174 and enlarge the largest of the two boundaries by lengthy but thin zigzags .",
    "thus we can preserve the lower bound @xmath175 , even when @xmath5 and @xmath172 differ significantly .",
    "the reason why we chose parameters @xmath31 , @xmath32 , @xmath34 , @xmath35 , and @xmath5 instead of just @xmath31 , @xmath32 , @xmath34 and @xmath35 , is that complexity @xmath40 shows a certain continuity of the complexity of algorithm rvo with respect to the sizes of obstacles : when the largest obstacle decreases , this complexity approaches @xmath38 and it becomes @xmath38 if there are no obstacles . in this case",
    "our algorithm coincides with algorithm rv .",
    "this is not the case with complexity @xmath170 . on the other hand , this choice coincides with @xmath176 in many important cases , for example for convex obstacles ( as then we have @xmath177 ) .",
    "it is then natural to ask what happens if we add parameter @xmath5 in the scenario with incoherent compasses and with the presence of obstacles but with the map .",
    "obviously we could still use algorithm rvo and get complexity @xmath40 .",
    "however , our lower bound argument in this scenario gives in fact only @xmath178 . in our example",
    "we had @xmath179 but we only get @xmath180 even if @xmath31 is much larger than @xmath5 . on the other hand , if @xmath31 is much smaller than @xmath5 we can only get the lower bound @xmath37 because it matches the complexity of @xmath46 in this case . hence it is natural to ask if there exists a rendezvous algorithm with cost @xmath181 for arbitrary terrains in this scenario .",
    "we leave this as an open question .",
    "r. aleliunas , r.m .",
    "karp , r.j .",
    "lipton , l. lovsz , and c. rackoff , random walks , universal traversal sequences , and the complexity of maze problems , proc .",
    "annual symposium on foundations of computer science focs1979 , 218 - 223 .",
    "s. alpern and s. gal , the theory of search games and rendezvous .",
    "series in operations research and management science , number 55 , kluwer academic publishers , 2002 .",
    "kluwer academic publisher , 2002 .",
    "d. coppersmith , p. doyle , p. raghavan , and m. snir , random walks on weighted graphs , and applications to on - line algorithms , proc .",
    "22nd annual acm symposium on theory of computing ( stoc1990 ) , 369 - 378 .",
    "p. flocchini , g. prencipe , n. santoro , p. widmayer , gathering of asynchronous oblivious robots with limited visibility , proc .",
    "18th annual symposium on theoretical aspects of computer science stacs2001 , lncs 2010 , 247 - 258 .",
    "r. klasing , a. kosowski , a. navarra , taking advantage of symmetries : gathering of asynchronous oblivious robots on a ring .",
    "12th international conference on principles of distributed systems , ( opodis 2008 ) , 446 - 462 ."
  ],
  "abstract_text": [
    "<S> two mobile agents ( robots ) have to meet in an a priori unknown bounded terrain modeled as a polygon , possibly with polygonal obstacles . </S>",
    "<S> agents are modeled as points , and each of them is equipped with a compass . </S>",
    "<S> compasses of agents may be incoherent . </S>",
    "<S> agents construct their routes , but the actual walk of each agent is decided by the adversary : the movement of the agent can be at arbitrary speed , the agent may sometimes stop or go back and forth , as long as the walk of the agent in each segment of its route is continuous , does not leave it and covers all of it . </S>",
    "<S> we consider several scenarios , depending on three factors : ( 1 ) obstacles in the terrain are present , or not , ( 2 ) compasses of both agents agree , or not , ( 3 ) agents have or do not have a map of the terrain with their positions marked . </S>",
    "<S> the cost of a rendezvous algorithm is the worst - case sum of lengths of the agents trajectories until their meeting . for each scenario </S>",
    "<S> we design a deterministic rendezvous algorithm and analyze its cost . </S>",
    "<S> we also prove lower bounds on the cost of any deterministic rendezvous algorithm in each case . </S>",
    "<S> for all scenarios these bounds are tight .    </S>",
    "<S> * keywords : * mobile agent , rendezvous , deterministic , polygon , obstacle    [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ]    0.2 in 0.1 in 0.0 in </S>"
  ]
}
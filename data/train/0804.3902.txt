{
  "article_text": [
    "[ [ range - assignments - in - ad - hoc - networks ] ] range assignments in ad - hoc networks + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in ad - hoc networks , nodes are able to vary their transmission ranges in order to provide good network connectivity and low energy consumption at the same time . more precisely , the transmission ranges determine a ( directed ) _ communication graph _",
    "@xmath7 over the set @xmath8 of nodes : a node @xmath9 , with transmission range @xmath10 , can transmit to another node @xmath11 ( so , edge @xmath12 ) if and only if @xmath11 belongs to the _ disk _ centered in @xmath9 and of radius @xmath10 .",
    "the transmission range of a node depends , in turn , on the energy power supplied to the node . in particular",
    ", the power @xmath13 required by a node @xmath9 to correctly transmit data to another station @xmath11 must satisfy the inequality @xmath14 , where @xmath15 is the euclidean distance between @xmath9 and @xmath11 . in several works @xcite",
    ", it is assumed that nodes can arbitrarily vary their transmission range over the ",
    "set @xmath16 . however , in some important network scenarios ( like sensor networks ) , this assumption is not realistic : the adopted technology allows nodes to have only _ few _ possible transmission range values . for this reason",
    ", we adopt the model considered in @xcite where nodes are able to choose their transmission range from a _ restricted _ set @xmath17 .    a fundamental class of algorithmic problems arising from ad - hoc wireless networks consists in the _ range assignment problems _ :",
    "find a transmission range assignment @xmath18 such that ( 1 ) the resulting communication graph satisfies a given connectivity property @xmath19 , and ( 2 ) the _ energy cost _ @xmath20 of the assignment is minimized ( see  @xcite ) .",
    "+ several research works @xcite have been devoted to the   problem where @xmath19 is defined as follows : _ given a source node @xmath21 , the communication graph has to contain a directed spanning tree rooted at @xmath21 ( a branching from @xmath21)_. previous theoretical results on  concern _ worst - case _ analysis only .",
    "this problem is known to be -hard @xcite even when @xmath22 for @xmath23 and @xmath24 is set to any fixed positive constant .",
    "the most famous approximation algorithm is the _ mst_-based heuristic @xcite .",
    "this heuristics works in @xmath25 time and its performance analysis has been the subject of several works over the last years @xcite . in @xcite",
    ", it is finally proved the _",
    "tight _ bound 6 on its approximation ratio .",
    "more recently , a new polynomial - time algorithm is provided in @xcite that achieves approximation ratio close to 4 .",
    "this algorithm applies a rather complex edge - contraction technique on the mst - based solution .",
    "its present best version works in @xmath26 time and the design of any efficient distributed version seems to be a very hard task .",
    "it is important to observe that the mst - based heuristic is  far  from achieving optimal solutions even on a complete square _ grid _ of @xmath0 points @xcite : its worst - case approximation ratio on such grids is not smaller than 3 . in @xcite , it is also experimentally observed that this heuristic has a bad behavior when applied to random _ regular _ instances such as _ faulty _ square grids .",
    "furthermore , the mst - based heuristic requires a large range set @xmath17 .",
    "the above discussion leads us to study over _ random grid _ networks . given a @xmath1 grid of points of the euclidean plane ( without loss of generality",
    ", adjacent points are placed at unit distance ) , each point . ]",
    "@xmath27 is selected as a _",
    "node _ of the random grid network independently with probability @xmath28 .",
    "this _ node probability _ can be any value in the interval @xmath29 $ ] where @xmath30 and @xmath31 are two arbitrary positive constants in the interval @xmath32 .",
    "we remark that our random grids are in general non uniform : random grids provide a good model for several ad - hoc and sensor networks . on one hand , by varying the @xmath28 s values , it is possible to model non homogenous input configurations with regions of different node densities . on the other hand ,",
    "the grid structure guarantees a minimal distance among nodes : this is often a desired property in order to optimize area coverage and avoid message collisions . nevertheless , as discussed later , all our results also hold for the standard _ uniform random distribution _",
    "( i.e. the random input formed by choosing @xmath0 points independently and uniformly at random from a 2-dimensional square ) @xcite .",
    "[ [ our - results ] ] our results + + + + + + + + + + +    * @xmath33 * we provide a lower bound on the energy cost of feasible solutions for _ any _ range assignment problem on random grids where the required property @xmath19 _ implies _ the existence of a disk cover .",
    "we say that a range assignment is a _ ( disk ) covering _ assignment if it guarantees that every node of the network is within the _ positive _ range of some node .",
    "is just one of those important cases requiring covering range assignments .",
    "+ let @xmath24 be the minimum positive range in @xmath17 .",
    "for any @xmath34 , if @xmath35 then we prove that the energy cost of any covering range assignment is with high probability for some constant @xmath36 . ]",
    "( in short , w.h.p . )",
    "at least @xmath37 .",
    "observe that the lower bound tends to @xmath38 for any @xmath24 such that @xmath39 , so for minimal ranges much smaller than the _ connectivity threshold _",
    "@xmath40 @xcite .",
    "+ the proof s technique of the lower bound departs significantly from all those adopted in this topic and uses information - theoretic arguments . by using this result",
    ", we will prove that the next two algorithms are almost optimal .",
    "* @xmath41 * we provide a simple and efficient algorithm for random grids that uses minimal range @xmath42 and returns a solution of energy cost not larger than @xmath43 w.h.p . : in virtue of our lower bound , this is very close to the optimum .",
    "observe that our lower bound holds for any covering range assignment while the upper bound holds for feasible range assignments of : this implies that , for @xmath44 , the extra - cost , due to the required tree connectivity property , is  almost  negligible in random grids ( it is still an open problem whether this is in fact negligible ) . our algorithmic solution works in @xmath45 time and needs a set @xmath17 of _ logarithmic _ size ( in @xmath0 ) .",
    "the range assignment is inspired to the one provided in @xcite for complete square grids ( i.e. every point of the grid is a node of the network ) .",
    "however , the probabilistic cost analysis of our construction for _ random _ grids is definitely not related to that in @xcite .    *",
    "@xmath46 * it is common opinion that the development of efficient , provably - good _ distributed _ algorithms is presently the major challenge about range assignment problems @xcite .",
    "we provide an efficient distributed algorithm for   on random grids .",
    "we investigate the performance of the protocol in two different scenarios : _ single broadcast _ and _ many - broadcast _ , i.e. , a sequence of consecutive broadcast operations . in both cases",
    ", besides the energy cost of the returned range assignment , we consider further important complexity aspects that determine the quality of a distributed solution .",
    "+ _ - work complexity .",
    "_ in the ad - hoc network model , the _ work complexity _ of a distributed algorithm ( i.e. protocol ) for   is defined as the sum of the energy cost of _ all _ transmissions made by the protocol to perform the broadcast operation @xcite .",
    "this complexity measure thus considers both the cost _ to construct _ the range assignment and the cost _ to use _ it to broadcast the message ( the latter being exactly the cost of the range assignment defined for centralized algorithms ) . since _ both _ the above energy costs are paid by the nodes , a protocol can be really considered energy efficient only if it has a small work complexity . + _ - energy - load balancing .",
    "_ in some real ad - hoc networks ( such as sensor networks ) , it is also important to equally distribute the energy load to all nodes .",
    "for instance , solutions , assigning large ranges to few nodes , are not feasible in scenarios where nodes have limited battery charges .",
    "in such a case , we aim to design solutions that are well energy - load balanced .",
    "notice that , in the many - broadcast scenario , this corresponds to maximize _ network lifetime _ according to the model in @xcite .",
    "+ _ - ( amortized ) completion time . _",
    "another relevant aspect of a broadcast protocol is the _ completion time _",
    "i.e. , the number of time steps required to complete one broadcast operation . in the many - broadcast scenario ,",
    "the _ amortized completion time _ is the _ average _ completion time for one broadcast operation .",
    "our aim is to derive a protocol having _ provably - good _ performance with respect to _ all _ the above complexity aspects . to the best of our knowledge",
    ", no available protocol has been shown to have this overall performance .",
    "+ we first define a very simple range assignment where only one positive range in @xmath17 is used , provided that it is not smaller than @xmath47 where @xmath48 is a suitable positive constant ( observe again that this value is asymptotically equivalent to the connectivity threshold ) .",
    "this solution is then shown to be w.h.p .",
    "feasible and to have an energy cost not larger than @xmath4 . thanks to our lower bound , the achieved energy cost yields a constant approximation ratio . moreover , this simple range assignment can be constructed and managed by an efficient protocol .",
    "we assume every node initially knows @xmath0 and its relative position with respect to the grid only .",
    "positioning information can be obtained by using gps systems or ad - hoc positioning system ( aps ) @xcite .",
    "this assumption is reasonable in _",
    "static _ ad - hoc networks since every node can store _ once and for all _ its position in the set - up phase .",
    "the protocol exploits a fully - distributed pivot - election strategy borrowed from @xcite .",
    "+ we prove that the work complexity of the protocol is equivalent to the energy cost of the centralized version and hence , thanks again to our lower bound ( clearly , a lower bound for the energy cost is also a lower bound for the work complexity ) , it achieves a constant approximation ratio as well .",
    "it is important to emphasize that the best distributed algorithm to compute an mst in the ad - hoc model has an expected work complexity @xmath49 @xcite . by comparing this bound with the @xmath50 work complexity achieved by our protocol",
    ", we can state that any mst - based solution @xcite can not yield good work complexity in this scenario .",
    "other distributed solutions have been considered in the literature @xcite , however their performance analysis is based on experimental tests only .",
    "we also compared the work complexity of our protocol to the energy cost of the centralized mst - based solution over thousands of random instances with different sizes and densities .",
    "the average performance ratio between the two solutions is always between 2 and 3 ( see section [ sec::experiments ] ) thus confirming our analytical results .",
    "+ our protocol yields a good energy - load balanced solution : there are @xmath51 _ pivots _ ,",
    "i.e. , the nodes having range @xmath52 ( the remaining nodes have range 0 ) .",
    "furthermore , thanks to the pivot - election strategy @xcite , a good energy - load balance is also obtained with respect to an arbitrary sequence of broadcast operations , i.e. , for the many - broadcast scenario . at every new operation ,",
    "the pivot task is indeed assigned to nodes according to a round robin rule .",
    "we show this yields an almost optimal _ life - time _ of the network according to the energy consumption model in @xcite .",
    "+ as for the single broadcast scenario , the completion time of our protocol is slower than the optimum by a @xmath53 factor . as for the many - broadcast scenario , when the number of broadcast operations is @xmath54 , then the amortized completion time is optimal .",
    "finally , we notice that , by using the technique in @xcite , our protocol can be emulated on the standard uniform random distribution @xcite . the same holds for the centralized algorithm achieving cost @xmath43 and for the lower bound as well .",
    "the relative proofs for the uniform distribution are easier and , so , they are omitted in this extended abstract .",
    "[ [ papers - organization ] ] paper s organization + + + + + + + + + + + + + + + + + + + +    in section [ sec::low ] , we provide the proof of the lower bound . in section [ apx::uppbound ]",
    ", we describe the centralized algorithm yielding almost optimal cost .",
    "finally , section [ sec::distrib ] is devoted to the description of our distributed protocol and its analysis .",
    "the square grid @xmath55 of @xmath56 points will be indexed from @xmath57 to @xmath0 . without loss of generality ,",
    "the distance between adjacent points is set to 1 .",
    "to each point @xmath27 of @xmath55 , a probability value @xmath28 is assigned such that @xmath58 where @xmath30 and @xmath31 are arbitrary constants in @xmath32 .",
    "we consider the random input model @xmath59 where an instance @xmath60 has probability    @xmath61    observe that this probability distribution is equivalent to select each point @xmath62 independently with probability @xmath28 . a selected point will be called _",
    "node_. in the sequel , a subset @xmath60 selected according to the above random distribution will be simply called _",
    "random set_.    a set of disks @xmath63 is said to be an @xmath64-cover for @xmath60 if the following properties hold : _ i ) _ all disks of @xmath65 have radius at least @xmath64 , where @xmath64 is some positive value .",
    "_ ii ) _ every disk of @xmath65 has its center on a node of @xmath8 . _",
    "iii ) _ every node of @xmath8 is covered by some disk of @xmath65 .",
    "observe that a range assignment @xmath66 can be represented by the family of disks @xmath67 yielded by the positive values of @xmath10 , and its energy cost is defined as    @xmath68    furthermore , a feasible range assignment for the  problem , with input @xmath8 and @xmath17 , uniquely determines an @xmath24-cover for @xmath8 having the same cost .",
    "notice that the converse is not true in general .",
    "in this section , we provide a lower bound on the cost of any _ covering _ range assignment for a random set @xmath60 .",
    "let @xmath69 $ ] be the probability that a random set @xmath60 has an @xmath64-cover of cost not larger than @xmath70 .",
    "[ t2 ] let @xmath71 and @xmath72 be three constants such that @xmath73 and @xmath74 .",
    "let @xmath60 be any random set .",
    "then , for any @xmath75 with @xmath76 , for sufficiently large @xmath0 , and for @xmath77 it holds that @xmath78 \\leq   2^{-\\frac{1}{100}(1-\\delta)\\epsilon p_{min }",
    "n + \\log(4n ) + t } + e^ { -\\frac{\\delta^2}{2}p_{min}\\left\\lfloor\\frac{n}{t}\\right\\rfloor+ t}\\ ] ] @xmath79    the above theorem clearly implies our lower bound stated in the introduction and it requires no restriction about the transmission - range set @xmath17 but a lower bound on @xmath80 that does not depend on @xmath0 .",
    "in particular , if @xmath75 is _ any _ positive constant then , for sufficiently large grids and a sufficiently large _ constant _ @xmath64 ( so @xmath64 does not depend on @xmath0 ) , @xmath69 $ ] is not larger than the inverse of an exponential function in @xmath0 .",
    "the theorem s proof makes use of the following combinatorial result .    [ 1 ] let @xmath81 be a partition of the @xmath0 points in @xmath55 and let @xmath82 be any @xmath83-tuple of integers such that @xmath84 .",
    "then , the number of subsets @xmath8 of @xmath55 such that @xmath85 ( @xmath86 ) admitting an @xmath64-cover @xmath65 with @xmath87 and @xmath88 is at most @xmath89 where @xmath90 and @xmath91    @xmath92 @xmath93",
    "we now provide a brief description of the _ information - theoretic _ approach adopted to prove the above lemma .",
    "let @xmath8 be a subset of points of @xmath55 satisfying the hypothesis of the lemma . by exploiting the @xmath64-cover @xmath65",
    ", we will prove that @xmath8 can be encoded into a binary string @xmath94 of length at most @xmath95 the lemma thus follows since the number of these sets @xmath8 can not exceed the number of binary strings of the above length .",
    "+    [ [ proof - of - lemma-1 ] ] proof of lemma [ 1 ] + + + + + + + + + + + + + + + + + +    let @xmath8 be a subset of points of @xmath55 satisfying the hypothesis of the lemma . consider the @xmath64-cover @xmath96 of @xmath8 having the same centers of @xmath65 and where each radius @xmath10 in @xmath65 is replaced with a radius @xmath97 .",
    "clearly , this change is negligible in terms of cost .",
    "we now show that , thanks to @xmath96 , @xmath8 can be encoded into a binary string of length at most @xmath95 thus the thesis follows by noting that the number of these sets @xmath8 can not exceed the number of binary strings of the above length .",
    "the binary string @xmath94 encoding @xmath8 is the concatenation of four substrings @xmath98 , @xmath99 , @xmath100 and @xmath101 .",
    "a ) : :    @xmath98 reports the number @xmath102 of centers of    @xmath65 .",
    "b ) : :    @xmath99 reports information to recover the indices of the    @xmath102 nodes of @xmath8 that are centers in    @xmath65 ( we assume that the @xmath0 points in the    grid are numbered from @xmath57 to @xmath0 ) .",
    "c ) : :    @xmath100 reports information to recover the radii of the    @xmath102 nodes in @xmath96 .",
    "d ) : :    @xmath101 reports information to recover the indices of the    nodes in @xmath8 .",
    "we now explain how these data are encoded and then bound the length of each of the four substrings .",
    "a ) : :    the number @xmath102 of centers in @xmath65 is at most    @xmath103 .",
    "thus we encode it by a binary string of fixed length ( i.e.    @xmath104 ) .",
    "hence    +    @xmath105 b ) : :    the centers of @xmath65 are a subset of the @xmath0    points in @xmath55 and so we encode them by a string of fixed    length , i.e.    +    @xmath106    +    since in the cover , each of the @xmath102 centers has radius at    least @xmath64 , it must hold @xmath107 .    from the hypothesis @xmath108 ,",
    "we    get @xmath109 as for substring    @xmath99 , we obtain @xmath110 observe that in the    above inequalities we used    @xmath111 since the    function @xmath112 is    increasing in the range @xmath113 $ ] ; then , from ( [ m ] ) ,    @xmath102 is in the range    @xmath114 $ ] .",
    "c ) : :    let now @xmath115 be the radii in    @xmath96 arranged by increasing order of the indices of the    @xmath102 centers . in order to give the information on the radii    of @xmath96 , we encode string    @xmath116    in binary where bit @xmath117 is encoded as @xmath118 ,    bit @xmath57 as @xmath119 and the symbol    @xmath120 as @xmath121 .",
    "we thus get    +    @xmath122    +    in the above inequalities , we first used    @xmath123    since the product is maximized when all factors have the same value .",
    "next , we used @xmath124 since the function    @xmath125 is increasing in the    range @xmath126 $ ] ; the value of    @xmath102 is in the range @xmath127 $ ] ;    @xmath107 and @xmath128 for @xmath87 . finally , we bounded    @xmath102 using ( [ m ] ) .",
    "d ) : :    in order to encode the nodes in @xmath8 , we use    @xmath83 strings .",
    "the @xmath129-th string encodes the    @xmath130 points of @xmath8 in @xmath131 .",
    "the    @xmath130 points of @xmath8 in @xmath131    covered by @xmath96 are a subset of the @xmath132    points in @xmath131 covered by @xmath96 .",
    "hence , we    encode these @xmath130 points with a binary string of length    +    @xmath133    +    since for integers @xmath134 and @xmath48 where    @xmath135 it holds that    @xmath136 , we get    +    @xmath137    +    where @xmath138 is the number of points of @xmath55    covered by @xmath96 .",
    "we now give an upper bound for    @xmath138 .",
    "+    let @xmath139 be the number of points of @xmath55 covered    by a disk @xmath140 of radius @xmath10 and , for each of    these points , consider the square of area @xmath57 centered in    the point .",
    "these @xmath83 squares are disjoint and are covered    by the disk obtained by extending the radius @xmath10 of disk    @xmath140 to @xmath141 .",
    "so , the number of    points of @xmath55 covered by a disk of radius @xmath10    is bounded by @xmath142 . moreover",
    ", it    holds that    @xmath143 where the last inequality follows since    @xmath144 .",
    "we thus obtain    +    @xmath145    +    we can now use h@xmath146lder s inequality and obtain    @xmath147 since @xmath148 , we get    +    @xmath149    +    from ( [ cov1 ] ) , we get    +    @xmath150    we now combine the bounds in ( [ num ] ) , ( [ cen ] ) , ( [ rad ] ) and ( [ cov ] ) ( respectively on the lengths of num , cen , rad and cov ) and obtain    @xmath151    @xmath152 +    [ [ proof - of - theorem - t2 ] ] proof of theorem [ t2 ] + + + + + + + + + + + + + + + + + + + + +    we assume @xmath153 for any @xmath8 , with @xmath60 , define the binary function @xmath154 as follows @xmath155    clearly , it holds that @xmath156 = \\sum_{s\\subseteq r}p_r(s)\\chi_{\\epsilon , l}(s)\\end{aligned}\\ ] ] let us partition @xmath55 into @xmath83 regions @xmath157 where @xmath158 such that for @xmath159 @xmath160 define @xmath161 as the expected number of points in @xmath129 , i.e. , @xmath162 . let @xmath163 be the family of subsets of @xmath55 having , in each region , a number of points not too small w.r.t .",
    "the expected number , i.e , @xmath164 from ( [ uno ] ) we get @xmath165 =   \\sum_{s\\subseteq   \\sf}p_r(s)\\chi_{\\epsilon , l}(s)+   \\sum_{s\\subseteq 2^r -\\sf}p_r(s)\\chi_{\\epsilon , l}(s)\\end{aligned}\\ ] ] we start giving an upper bound on the first addend of the right - hand of the above equation .",
    "let @xmath166 and , for each @xmath167 , define @xmath168 consider any set @xmath169 such that @xmath170 for every @xmath171 .",
    "then ,    @xmath172    where the last step follows from lemma [ 1 ] .",
    "function @xmath173 is decreasing in @xmath174 and    @xmath175    we thus get    @xmath176    assume without loss of generality that the points in @xmath55 are numbered in increasing order w.r.t .",
    "their probability i.e. @xmath177 . let @xmath178 where @xmath179 , for @xmath159 .",
    "consider any set @xmath180 , then    @xmath181    ( [ secondo2 ] ) implies that    @xmath182    now we provide an upper bound on    @xmath183 where @xmath184 and @xmath185 function @xmath186 is decreasing for @xmath187 , so it holds that @xmath188 moreover , for every @xmath189 , it holds that @xmath190 .",
    "thus , by setting @xmath191 and @xmath192 , we get @xmath193 function @xmath194 is increasing for @xmath195 and , by a simple calculus , we obtain @xmath196 from ( [ funf ] ) and ( [ fung ] ) , we obtain @xmath197 moreover since @xmath198 ( [ tre3 ] ) implies @xmath199 we now give an upper bound on the second addend in ( [ due ] ) .",
    "let @xmath200 , then    @xmath201    finally , by combining ( [ due ] ) , ( [ quattro ] ) and ( [ tre ] ) , the theorem follows .",
    "we now provide an efficient construction of a covering range assignment for a random set @xmath60 of energy cost very close to the lower bound @xmath202",
    ". then we will transform it , with additional cost @xmath203 only , into a feasible broadcast range assignment that uses @xmath204 ranges and such that the ( positive ) smallest among them , i.e. @xmath24 , is @xmath40 .",
    "[ [ the - disk - covering - construction ] ] the disk covering construction + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the construction of the covering is recursive and exploits a tiling of the square with octagons and triangles . + the square @xmath55 of side @xmath205 is partitioned into four triangles and an octagon ( see figure [ fig.start1 ] ) ; up to when there exists a triangle with side @xmath47 , it is further on partitioned into five triangles ( three small and two big triangles ) and an octagon ( see figure [ fig.step1 ] ) .",
    "starting from this partition , it is possible to produce a _ disk _ covering @xmath206 as follows ( in the sequel , a range assignment is seen as a _ disk _ assignment with centers on nodes in @xmath8 ) :    * for each triangle of the partition , if it contains at least one node , then one of them is selected as center of a disk having radius @xmath207 . observe that this disk covers any other point inside the same triangle .",
    "* for each octagon , if it contains at least one point that is not covered yet , then lemma [ lemma::threshconn ] implies that there is a node at distance @xmath208 to the center of the octagon , w.h.p .",
    "let this node be the center of a disk having radius @xmath209 , where @xmath10 is the radius of the disk that circumscribes the considered octagon ; the introduced disk covers all points in the octagon .",
    "given a random set @xmath8 , then , w.h.p .",
    ", disk covering @xmath206 has cost @xmath210    let @xmath8 be the set of all the octagons in the partition , and for each @xmath211 call @xmath212 the radius of the disk that circumscribes octagon @xmath21 .",
    "denoting by @xmath83 be the number of triangles in the partition , by construction it holds that : @xmath213 let @xmath64 be the side of the triangles created during the first step and let @xmath214 be the side of the first octagon ( see figure [ fig.start1 ] ) .",
    "the following equations hold : @xmath215 and @xmath216 . from these ,",
    "we derive : @xmath217 the recursive step depicted in figure [ fig.step1 ] produces triangles of two different sides and an octagon .",
    "let @xmath218 and @xmath219 be the lengths of the sides of the bigger triangles , the smaller triangles and the octagon , respectively .",
    "these lengths are tied from the following relationships : @xmath220 , @xmath221 and @xmath222 , implying : @xmath223 from ( [ inizio ] ) and ( [ gadget ] ) , the triangles of the partition , generated during step @xmath27 , have side length @xmath224 , where @xmath225 and @xmath226 is the smallest integer value such that @xmath227 , i.e. , @xmath228 observe that all octagons ( but the first one ) of the partition are produced by partitioning some triangle of side length @xmath229 , @xmath230 .",
    "denote by @xmath10 the radius of the disk that circumscribes the first octagon , by @xmath231 the radius of the disk that circumscribes the octagon produced by partitioning a triangle of side length @xmath229 , and by @xmath232 the number of such triangles .",
    "then , we can rewrite ( [ upper1 ] ) as follows : @xmath233 we remind that the radius of the disk that circumscribes a regular octagon having side @xmath64 is @xmath234 .",
    "so , we can use ( [ inizio ] ) and ( [ gadget ] ) to compute the following values of @xmath10 and @xmath231 , respectively , where @xmath235 : @xmath236 in order to compute the value of @xmath232 , observe that trivially @xmath237 ( see figure [ fig.start1 ] ) and @xmath238 ( see figure [ fig.step1 ] ) . at step @xmath27 , @xmath239 . unrolling the recursion",
    "we get : @xmath240 in order to evaluate @xmath241 , we bound all terms appearing in ( [ upper2 ] ) by exploiting ( [ raggio ] ) and ( [ numtri ] ) : @xmath242 @xmath243 by combining equations ( [ numtri ] ) and ( [ kbound ] ) we obtain : @xmath244 where the last step is true because @xmath245 .",
    "furthermore , @xmath246 equation ( [ numtri ] ) implies that @xmath247 ; then , from ( [ tbound ] ) we get : @xmath248 by combining formulas ( [ upper2 ] ) , ( [ quadrato ] ) , ( [ quadratoiniz ] ) , ( [ lineare ] ) and ( [ costante ] ) we conclude that @xmath249 @xmath152 +    [ [ from - covering - to - broadcasting ] ] from covering to broadcasting + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in order to guarantee that the produced covering becomes a broadcast , we need to connect the source to the disk centers in @xmath206 . we start from the source , located in any place of the square , and build a chain of disks towards the center of the grid .",
    "thanks to lemma [ lemma::threshconn ] , the maximum radius of such disks can be bounded by @xmath250 , w.h.p .",
    "( see fig .",
    "[ fig.path ] ) .",
    "we now show that the additional cost due to this construction turns out to be sub - linear .",
    "the cost of the connection between the source and the center of the square is @xmath251 w.h.p .",
    "then we have to connect all the other centers to points already reached by the information sent from the source .",
    "the total cost due to this step is bounded by @xmath252 . by replacing the formulas for @xmath253 and @xmath254 we get : @xmath255 this cost is sub - linear since it is @xmath256 .",
    "it is not hard to verify that the above overall construction can be performed in @xmath257 time .",
    "let us consider the following simple algorithm to construct a broadcast range assignment .",
    "let @xmath64 be _ any _ range in @xmath17 such that @xmath258 where @xmath48 is the constant determined by lemma [ lemma::threshconn ] below .",
    "a. : :    grid @xmath55 is partitioned into _ square cells _ of side length    @xmath259 .",
    "b. : :    in every non - empty cell , choose one of its nodes and assign range    @xmath64 to it .",
    "this node is called the _ pivot _ of the cell . c.",
    ": :    the cell containing the source will have the source as pivot .",
    "d. : :    all other nodes have range 0 .      [ lemma::threshconn ]",
    "let @xmath260 , @xmath72 , and @xmath48 be three constants such that @xmath74 and @xmath261 .",
    "let @xmath60 be a random grid .",
    "consider the partition of @xmath55 into square _",
    "cells _ of side length @xmath173 where @xmath262 .",
    "then , a constant @xmath263 exists such that every cell contains w.h.p .",
    "at least @xmath264 nodes .",
    "constant @xmath265 can be set as @xmath266 .",
    "algorithm  can be converted , _ without paying any extra energy cost _ , into an efficient , _ energy - load balanced _",
    "protocol that performs a _ sequence of broadcast operations_. we describe the protocol for the many - broadcast scenario and , thus , besides minimizing the energy spent by a single broadcast operation , we aim to evenly distribute the transmission task among all nodes ( but the source ) .    according to the standard radio communication model @xcite",
    ", we assume that nodes act in discrete uniform _ time steps _ and are non spontaneous .",
    "however , we assume a weaker , _ local _ synchronous model : if , at a given time step @xmath83 , the range of a message transmission covers a cell , then , at time step @xmath268 , ( only ) the nodes of that cell are activated and , so , they will agree on the same time step .",
    "we assume that every node @xmath9 knows the number @xmath0 of points and its relative coordinates in the square grid @xmath55 . from its",
    "relative coordinates every node computes a unique _ local _ label with respect to its cell .",
    "these local labels vary from @xmath57 to @xmath269 .",
    "+ the @xmath226-th message sent by the source is denoted as @xmath270 .",
    "_ phase _ @xmath226 consists of the sequence of time steps where @xmath270 is broadcasted .",
    "we assume that @xmath270 contains the value @xmath226 .",
    "the protocol performs , in parallel , two tasks : _",
    "i ) _ it constructs a broadcast communication graph starting from the source and _ ii ) _ transmits the source message along this graph to all nodes .",
    "the procedure is executed for every broadcast operation from source @xmath21 .",
    "every node keeps a local counter @xmath271 initially set to @xmath272 .          * if @xmath274 then ( @xmath265 is the constant of lemma [ lemma::threshconn ] ) * * when a node @xmath9 receives , for the first time w.r.t .",
    "phase @xmath226 , @xmath273 from the pivot of a neighbor cell @xmath27 , it becomes active .",
    "* * an active node , at every time step , increments its local counter @xmath271 by one and checks whether its local label is equal to the value of its @xmath271 .",
    "if this is the case , it becomes the pivot of its cell and transmits , with range @xmath64 , @xmath275 where @xmath129 is the index of its cell .",
    "* * when an active node in cell @xmath27 receives @xmath273 , it ( so the pivot as well ) records in a _ local array _ @xmath276 $ ] the current value of its @xmath271 , i.e. the local label of the pivot , and becomes inactive .",
    "* else ( i.e. @xmath277 ) * * when a node @xmath9 receives , for the first time w.r.t .",
    "phase @xmath226 , @xmath273 from the pivot of a neighbor cell @xmath27 , it checks if its local label is equal to @xmath278 $ ] .",
    "if this is the case , it becomes the pivot of its cell and transmits , with range @xmath64 , @xmath279 where @xmath129 is the index of its cell .",
    "[ fact::properties ] even though nodes initially do not know anything about each other , all nodes in the same cell are activated ( and disactivated ) at the same time step ; so , their local counters share the same value at every time step . furthermore , after the first @xmath280 broadcast operations ( i.e. phases ) ,",
    "all nodes in the same cell know the set @xmath281 of pivots of that cell .",
    "more precisely , if @xmath282 are the local labels of the nodes in a cell , then , during the first @xmath280 broadcast operations ( i.e. phases ) , the pivot of the cell at phase @xmath226 will be the node having local label @xmath283 .            the overall number of node transmissions ( i.e. the message complexity ) of every execution of   is @xmath286 .",
    "each transmission has range @xmath64 , so the work complexity is not larger than @xmath4 .",
    "+ as for the many - broadcast scenario , our lower bound in theorem [ t2 ] easily implies that a work @xmath287 is w.h.p . required to perform a sequence of @xmath226 broadcasts ( since the lower bound holds for the energy cost ) .",
    "it follows that our protocol achieves an almost optimal work complexity for the many - broadcast operation as well .    * load balancing and network lifetime . * the _ expensive _ pivot s task is evenly assigned , w.h.p . , to @xmath280 nodes ( see lemma [ lemma::threshconn ] ) in the same cell by using a round robin schedule .",
    "this is crucial when the number of broadcasts increases and nodes have limited battery charge .",
    "as for the many - broadcast operation , it is possible to show that our protocol achieves an almost maximal lifetime according to the consumption model in @xcite . in this model ,",
    "the goal is to maximize the lifetime of the network while guaranteeing , at any phase @xmath226 , a broadcast operation from the source .",
    "formally , each node @xmath9 is initially equipped with a battery charge @xmath288 .",
    "whenever a node transmits with range @xmath64 , its battery charge is reduced by amount @xmath289 where @xmath64 denotes the range assigned to node @xmath9 and @xmath290 is a fixed constant depending on the adopted technology .",
    "we assume @xmath291 , however , all our results holds for any @xmath290 .",
    "+ then , the   problem is to maximize the number of independent broadcast operations till some node will die ( i.e. its battery charge becomes 0 ) . in @xcite ,  is shown to be @xmath292-hard .",
    "_ sketch of proof_.  we have already observed that the work complexity of  for any single broadcast operation is not larger than @xmath293 , where @xmath294 is a positive constant and @xmath295 is the optimal work complexity .",
    "so , the maximal number of independent broadcast operations is not larger than @xmath296 .",
    "thanks to the local round robin strategy in every cell , the energy load of the many - broadcast operation is well balanced over at least a ( large ) constant fraction @xmath297 of all nodes .",
    "so the number of broadcast operations perform by  is at least @xmath298 , w.h.p .",
    "@xmath152 +        _ sketch of proof_.  for a single broadcast operation performed by , we define the _ delay _ of a cell as the number of time steps from its activation time till the selection of its pivot .",
    "observe that the sum of delays introduced by a cell during the first @xmath301 broadcasts is at most @xmath302 .",
    "then , the delay of any cell becomes 0 for all broadcasts after the first @xmath280 ones .",
    "moreover , a broadcast can pass over at most @xmath303 cells . by assuming that a maximal length path ( this length being @xmath304 together with maximal cell delay can be found in each of the first @xmath305 broadcasts , we can bound the maximal overall delay with @xmath306    finally",
    ", the number of time steps required by every broadcast without delays is @xmath307 since the length of any path on the broadcast tree is @xmath308 . by combining ( [ eq::b1 ] ) and ( [ eq::b3 ] )",
    ", we get the theorem bound .",
    "@xmath152 +    for brevity s sake , the amortized completion time has been analyzed without considering the _ interferences _ due to _ collisions _ among pivot transmissions @xcite . however , in order to avoid such collisions , we can further organize  into iterative _",
    "stages _ : in every stage , only cells with not colliding pivot transmissions are active . since the number of cells that can interfere with a given cell is constant , this further scheduling will increase the overall time by a constant factor only .",
    "this iterative process can be efficiently performed in a distributed way since every node knows @xmath0 and its position , so it knows its cell .",
    "the worst scenario for our protocol occurs when @xmath299 is small , say @xmath310 .",
    "indeed , assume that a transmission range @xmath311 is available in @xmath17 , then we get an amortized completion time @xmath312 that is a factor @xmath313 larger then the optimum .",
    "notice that in this case , the network diameter is @xmath314 w.h.p .",
    "+ whenever @xmath315 , we instead get @xmath316 amortized completion time which is optimal .        in this subsection",
    ", we present the experimental results we have obtained by running algorithm .",
    "we have generated @xmath317 instances for every side length @xmath318 and for _ node - probability _ @xmath319 .",
    "as usual , our implementation benefits of some parameter tuning and optimization : the pivot node ( but the source node ) inside every cell is the one closer to the center of the cell and useless , redundant ranges are removed .",
    "these tasks can be performed also by the distributed protocol , after the first phase ( i.e. for @xmath320 ) , without paying any extra energy cost since , after that time , every node of a cell knows all its cell neighbors .",
    "moreover , the transmission range @xmath64 is set , this range is smaller than the threshold @xmath321 defined in section [ sec::distrib ] : this is the reason why the feasibility rate is not 100% for large @xmath0 . ] to @xmath322 , while the cell - size parameter @xmath173 is set to @xmath313 .",
    "notice that , according to such choices , the feasibility ( i.e. , the existence of a path from the source node to all other nodes in the induced communication graph ) is tested too . in table",
    "[ table::connectivity_frequency ] ( columns `` # of feasible sol . '' ) , the number of feasible solutions for the different combinations of @xmath0 and @xmath323 are reported .",
    "the solution costs of  are compared to the cost of the solution returned by the centralized mst - based algorithm .",
    "we remind that while the energy cost of  is an upper bound on the work complexity of our distributed procedure the energy cost of the mst - based solution does not provide any information about the work complexity of its distributed implementations ( this can be much larger ) .",
    "+ table  [ table::connectivity_frequency ] shows , for all chosen values of @xmath323 and @xmath324 , the minimum , average and maximum ratio between the costs of the solutions returned by the two algorithms . as for , only the costs of _ feasible",
    "_ solutions are considered .",
    "a. clementi , p. crescenzi , p. penna , g. rossi and p. vocca .",
    "on the complexity of computing minimum energy consumption broadcast subgraphs . in proc .",
    "of 18th _ stacs _ , lncs 2010 , 121131 , 2001 .",
    "full version in http://www.dia.unisa.it/@xmath325penna/no-blood-for-oil.html .",
    "a. d. flaxman , a. m. frieze , and j. c. vera . on the average case performance of some greedy approximation algorithms for the uncapacitated facility location problem . in proc . of _",
    "37-th acm stoc _ , 441449 , 2005 .",
    "m. khan , g. pandurangan , and v.s.a .",
    "kumar . distributed algorithms for constructing approximate minimum spanning trees in wireless sensor networks .",
    "_ ieee transactions on parallel and distributed systems _ , 2008 , to appear"
  ],
  "abstract_text": [
    "<S> the  problem consists in assigning transmission ranges to the nodes of an ad - hoc network in order to guarantee a directed spanning tree from a given _ source _ node and , at the same time , to minimize the energy consumption ( i.e. the _ energy cost _ ) yielded by the range assignment .  </S>",
    "<S> is known to be -hard . </S>",
    "<S> + we consider _ random - grid networks _ where nodes are chosen independently at random from the @xmath0 points of a @xmath1 square grid in the plane . </S>",
    "<S> the probability of the existence of a node at a given point of the grid does depend on that point , that is , the probability distribution can be _ non - uniform_. + by using information - theoretic arguments , we prove a lower bound @xmath2 on the energy cost of any feasible solution for this problem . </S>",
    "<S> then , we provide an efficient solution of energy cost not larger than @xmath3 </S>",
    "<S> . + finally , we present a fully - distributed protocol that constructs a broadcast range assignment of energy cost not larger than @xmath4 , thus still yielding constant approximation . </S>",
    "<S> the _ energy load _ is well balanced and , at the same time , the _ work complexity _ ( i.e. the energy due to all message transmissions of the protocol ) is asymptotically optimal . </S>",
    "<S> the completion time of the protocol is only an @xmath5 factor slower than the optimum . </S>",
    "<S> the approximation quality of our distributed solution is also experimentally evaluated . </S>",
    "<S> + all bounds hold with probability at least @xmath6 . </S>"
  ]
}
{
  "article_text": [
    "given a graph @xmath5 , an _ induced matching _ is a vertex subset @xmath6 such that the subgraph induced by @xmath7 in @xmath8 is a matching .",
    "the goal of the maximum induced matching problem is to find the induced matching of the maximum size in a given graph @xmath8 .",
    "although a maximum matching in a graph can be computed in polynomial time @xcite , finding the maximum induced matching in a given graph is np - hard @xcite .",
    "the problem remains np - hard in bipartite graphs @xcite .",
    "it is therefore highly unlikely to develop algorithms that can solve the problem in bipartite graphs in polynomial time .    in practice ,",
    "instances of intractable problems are often associated with parameters and it is therefore interesting to study whether practically efficient solutions exist for these problems when their parameters are small positive integers .",
    "parameterized computation identifies one or a few parameters in some intractable problems and focuses on the development of efficient algorithms for these problems while all parameters are small .",
    "specifically , an np - hard problem is _ fixed parameter tractable _ if a few parameters @xmath9 can be identified for the problem and it can be solved in time @xmath10 , where @xmath1 is the size of the problem , @xmath11 is a function that only depends on @xmath9 , and @xmath12 is a constant independent of all parameters .",
    "a well known example of fixed parameter tractable problems is the vertex cover problem .",
    "the problem is np - hard and the goal of the problem is to decide whether a graph @xmath5 contains a vertex cover of size at most @xmath13 or not .",
    "recent work has developed a parameterized algorithm that improves the upper bound of the problem to @xmath14 @xcite .",
    "this algorithm has practical values and can be used to efficiently solve the problem when the parameter @xmath13 is fixed and of a small or moderate value .",
    "on the other hand , efficient parameterized solutions are not unknown for some problems and these problems are considered to be parameterized intractable .",
    "a hierarchy of parameterized complexity classes have been developed in the theory of parameterized computation to describe the parameterized complexity of these problems .",
    "a well known example is the independent set problem .",
    "the goal of the problem is to decide whether a graph contains an independent set of size @xmath13 or not .",
    "the problem has been shown to be w[1]-complete @xcite .",
    "in other words , all problems in the class of w[1 ] can be reduced to the independent set problem in polynomial time .",
    "all problems in w[1 ] are thus fixed parameter tractable if the independent set problem is fixed parameter tractable",
    ". a thorough investigation of topics on parameterized computation and complexity classes can be found in @xcite .",
    "the parameterized induced matching problem is to decide whether a graph contains an induced matching of size @xmath13 or not , where @xmath13 is a postive integer parameter .",
    "the problem has been shown to be w[1]-hard for general graphs and thus can not be solved with an efficient parameterized algorithm @xcite . however , the problem is fixed parameter tractable for graph families that contain certain structure features .",
    "for example , the problem is fixed parameter tractable on planar graphs @xcite . in addition",
    ", the problem can be solved in polynomial time when the underlying graph is chordal or outerplanar @xcite .",
    "structure features of certain graph families can thus lead to efficient solutions for computing a maximum induced matching in graphs in these families .    a _ bipartite graph _",
    "is a graph that does not contain odd cycles . in other words ,",
    "the vertices in a bipartite graph can be partitioned into two independent sets .",
    "some np - hard problems become tractable when the underlying graphs are bipartite . for example , a maximum independent set in a bipartite graph can be computed in polynomial time .",
    "a graph is _ hamiltonian _ if it contains a cycle that contains all of its vertices .",
    "a graph is _ hamiltonian bipartite _ if it is both bipartite and hamiltonian .",
    "hamiltonian bipartite graphs have important applications in wireless communications @xcite and quantumn information processing @xcite .",
    "finding exact solutions for some np - hard optimization problems in hamiltonian bipartite graphs thus constitutes an important aspect of algorithmic study . in @xcite , it is shown that the induced matching problem remains np - hard and w[1]-hard in bipartite graphs .",
    "however , it remains unknown whether the problem can be efficiently solved in hamiltonian bipartite graphs , when a hamiltonian cycle of the graph is available .    since efficient solutions are unlikely to be available for np - hard problems , it is interesting to study the possibility to approximately solve these problems in polynomial time .",
    "research in approximate computation focuses on the development of approximate algorithms for some np - hard problems . in general , a solution generated by an approximate algorithm is guaranteed to be within a ratio of the optimal solution and thus can be practically useful . as a classical example , an approximation ratio of @xmath15 can be achieved for the minimum vertex cover problem in polynomial time @xcite .",
    "however , it is often the case that an intractable problem can not be approximated within a certain ratio unless np = p .",
    "a well known example is the maximum independent set problem .",
    "it has been shown that , unless np = p , the problem can not be approximated within a ratio of @xmath2 in polynomial time , where @xmath4 is any positive constant and @xmath1 is the number of vertices in the graph @xcite .",
    "another example is the minimum vertex cover problem .",
    "it has been shown that it is np - hard to approximate the minimum vertex cover in a graph within a ratio of @xmath16 @xcite . in @xcite , it is shown that unless np = p , the minimum dominating set problem can not be approximated within a ratio of @xmath17 , where @xmath12 is some constant independent of @xmath1 @xcite .",
    "our previous work shows that a similar inapproximability result also holds for the minimum dominating set problem when the underlying graph is chordal or near chordal @xcite .    in spite of its inapproximability in general graphs ,",
    "the minimum dominating set problem can be approximated within a constant ratio of @xmath18 in planar graphs .",
    "the approximate ratio of an intractable problem can thus be significantly improved by certain structure features of the underlying graph .",
    "it is therefore natural to ask whether the maximum induced matching problem in a hamiltonian bipartite graph can be approximated within a good ratio based on a hamiltonian cycle of the graph if no efficient solutions are available for the problem .    in this paper , we study the parameterized complexity and inapproximability of the induced matching problem in hamiltonian bipartite graphs .",
    "we show that , given a hamiltonian bipartite graph in @xmath1 vertices and a hamiltonian cycle of the graph , the problem remains w[1]-hard and can not be solved in time @xmath0 unless w[1]=fpt . for inapproximability",
    ", we show that it is np - hard to approximate a maximum induced matching in a hamiltonian graph based on a hamiltonian cycle of the graph within a ratio of @xmath2 , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant . for a hamiltonian bipartite graph ,",
    "its maximum induced matching can not be approximated based on a hamiltonian cycle of the graph within a ratio of @xmath3 unless np = p .",
    "given a graph @xmath5 , the _ degree _ of a vertex @xmath19 is the number of vertices that are joined to @xmath20 with an edge .",
    "@xmath8 is _ bipartite _ if @xmath21 can be partitioned into two disjoint subsets @xmath22 such that each of @xmath23 and @xmath24 induces an independent set in @xmath8 .",
    "@xmath23 and @xmath24 are the two _ sides _ of @xmath8 .",
    "a graph is _ complete _ if any pair of its vertices are joined with an edge .",
    "a bipartite graph is _ complete _ if any pair of vertices from different sides are joined by an edge .",
    "a _ hamiltonian path _ in a graph is a path that contains each vertex in the graph .",
    "a graph is _ hamiltonian _ if it contains a cycle that includes all its vertices and such a cycle is a _",
    "hamiltonian cycle_. a graph is a _",
    "hamiltonian bipartite _",
    "graph if it is both bipartite and hamiltonian .",
    "an _ induced matching _ in @xmath8 is a vertex subset @xmath25 such that the subgraph induced by @xmath26 in @xmath8 is a matching .",
    "the induced matching problem is to decide whether a given graph @xmath8 contains an induced matching of size @xmath13 or not .    given a graph @xmath5 , a subset of vertices @xmath27 in @xmath21 form a _ clique _ if any pair of vertices in the subset are joined by an edge in @xmath8 .",
    "the clique problem is to decide whether a given graph contains a clique of size @xmath13 or not , where @xmath13 is a positive integer .",
    "a well known fact is that the problem is w[1]-hard @xcite . in other words ,",
    "the problem can not be solved in time @xmath28 unless the complexity class of w[1 ] collapses into fpt , where @xmath29 is a function of @xmath13 , @xmath1 is the number of vertices in the graph and @xmath12 is a contant independent of @xmath1 or @xmath13 .",
    "we consider a variant of the clique problem . given a graph @xmath5 , the goal of this variant is to determine whether @xmath8 contains a clqiue of size @xmath30 or not , where @xmath13 is a positive integer .",
    "we denote the variant by @xmath31-clique problem in the rest of the paper and it can be shown that the problem remains w[1]-hard .    [ lm1 ]",
    "the @xmath31-clique problem is w[1]-hard and it can not be solved in time @xmath32 unless w[1]=fpt , where @xmath1 is the number of vertices in the graph .",
    "we construct a polynomial time reduction from the clique problem to the @xmath31-clique problem . given a graph @xmath5 , we construct a graph @xmath33 such that @xmath8 contains a clique of size @xmath13 if and only if @xmath33 contains a clique of @xmath30 .    to complete the construction , we create two identical copies @xmath34 , @xmath35 of @xmath8 . in other words , both @xmath34 and @xmath35 are isomorphic to @xmath8 .",
    "any two vertices from different copies of @xmath8 are joined with an edge .",
    "we then generate one additional vertex @xmath36 and join each vertex in @xmath34 , @xmath35 to @xmath36 with an edge .",
    "we denote the resulting graph by @xmath33 .",
    "if @xmath8 contains a clique of size @xmath13 , @xmath33 also contains a clique of size @xmath30 .",
    "specifically , since @xmath34 , @xmath35 are both isomorphic to @xmath8 , each of them contains @xmath13 vertices that are connected into a clique in @xmath33 .",
    "it is not difficult to see that these @xmath37 vertices and @xmath36 together form a clique of size @xmath30 in @xmath33 .",
    "we now assume @xmath33 contains a clique @xmath38 of size @xmath30 , we use @xmath39 and @xmath40 to denote @xmath41 and @xmath42 respectively . since @xmath36 is the only vertex that is not included in @xmath34 or @xmath35",
    ", we immediately obtain @xmath43    the above inequality implies that one of @xmath39 and @xmath40 must contain at least @xmath13 vertices and these vertices are connected into a clique . since @xmath34 ,",
    "@xmath35 are both isomorphic to @xmath8 , this implies that @xmath8 contains a clique of size at least @xmath13 .",
    "the @xmath31-clique problem is thus also w[1]-hard .",
    "we assume that there exists an algorithm @xmath44 that can solve the @xmath31-clique problem in time @xmath32 , where @xmath1 is the number of vertices in the graph . given a graph @xmath5 and a positive integer parameter @xmath13",
    ", we can use the following algorithm to solve the clique problem .    1 .",
    "construct a graph @xmath33 from @xmath8 based on the reduction that has been described above ; 2 .",
    "apply @xmath44 to @xmath33 to determine whether it contains a clique of size @xmath30 or not ; 3 .",
    "return `` yes '' if @xmath44 returns `` yes '' , otherwise return `` no '' .",
    "it is straightforward to see that the above algorithm solves the clique problem in time @xmath45 since @xmath33 contains @xmath46 vertices .",
    "however , it has been shown in @xcite that the clique problem can not be solved in time @xmath45 unless w[1]=fpt .",
    "such an algorithm thus does not exist for the @xmath31-clique problem unless w[1]=fpt .",
    "given a graph @xmath5 , a _ walk _ in @xmath8 is a sequence of edges @xmath47 such that @xmath48 and @xmath49 share an endpoint , where @xmath50 .",
    "a walk is an _ eulerian path _ if each edge in @xmath8 is visited for exactly once .",
    "the _ starting vertex _ of an eulerian path @xmath47 is the endpoint of @xmath51 that is not shared with @xmath52 and its _ ending vertex _ is the endpoint of @xmath53 that is not shared with @xmath54 .",
    "an eulerian path is an _",
    "eulerian circuit _",
    "if its starting and ending vertices are the same vertex .",
    "@xmath8 is _ eulerian _ if it contains one eulerian circuit . in @xcite",
    ", it is shown that a graph is _ eulerian _ if the degree of each vertex in the graph is even .",
    "it is shown in @xcite that an eulerian circuit , if exists , can be computed in polynomial time .    [ lm2 ] a complete graph on an odd number of vertices is eulerian and such a path can be computed in polynomial time .",
    "the degree of each vertex in a complete graph on @xmath1 vertices is @xmath55 .",
    "@xmath55 is even when @xmath1 is odd .",
    "the lemma follows from the results in @xcite and @xcite .",
    "given a graph @xmath5 , an _ edge graph _",
    "@xmath33 of @xmath8 can be constructed by representing each edge in @xmath8 by a distinct vertex in @xmath33 and two vertices in @xmath33 are joined by an edge if their corresponding edges in @xmath8 share an endpoint .    [ lm3 ] given a complete graph @xmath8 on an odd number of vertices , its edge graph @xmath33 is hamiltonian .",
    "we denote the number of edges in @xmath8 by @xmath1 . from lemma [ lm2 ] , there exists an eulerian circuit @xmath47 in @xmath8 .",
    "we use @xmath56 to denote the vertex that corresponds to @xmath48 in @xmath33 , where @xmath57 .",
    "it is clear that @xmath58 is in fact a hamiltonian path in @xmath33 . in addition , since @xmath51 and @xmath59 share an endpoint , @xmath60 and @xmath61 are joined by an edge in @xmath33 .",
    "@xmath33 is thus hamiltonian .",
    "[ lm4 ] given a complete bipartite graph @xmath62 , where @xmath23 and @xmath24 are the two sides of @xmath8 and @xmath63 , for any two vertices @xmath36 , @xmath20 such that @xmath64 and @xmath65 , there exists a hamiltonian path that starts with @xmath36 and ends with @xmath20 .",
    "such a hamiltonian path can be computed in polynomial time .",
    "we denote @xmath66 and @xmath67 by @xmath1 .",
    "we consider the vertices in @xmath68 and @xmath69 , since @xmath63 , each vertex in @xmath70 can be arbitrarily paired with a distinct vertex in @xmath71 .",
    "all vertices in @xmath68 and @xmath69 can thus be partitioned into @xmath55 disjoint vertex pairs , we use @xmath72 to denote them , where @xmath73 and @xmath74 ( @xmath75 ) .",
    "since @xmath8 is complete bipartite , @xmath76 is a hamiltonian path in @xmath8 .",
    "it is also clear that the path can be obtained in polynomial time .",
    "the induced matching problem has been shown to be np - complete in general graphs and bipartite graphs .",
    "in addition , the parameterized induced matching problem is shown to be w[1]-hard in general graphs . in @xcite , a reduction from the irredundant set problem @xcite is constructed to show that the problem remains w[1]-hard in bipartite graphs . in this section , we construct a reduction from the @xmath31-clique problem to show that the problem remains w[1]-hard in hamiltonian bipartite graphs .        [ th1 ] given a hamiltonian bipartite graph and a hamiltonian cycle in the graph , it is w[1]-hard to determine whether the graph contains an induced matching of size @xmath77 or not , where @xmath77 is a positive integer parameter .",
    "we construct a polynomial - time reduction from the @xmath31-clique problem , the goal of this problem is to decide whether a given graph @xmath5 contains a clique of size @xmath30 or not . from lemma [ lm1 ] ,",
    "the problem is w[1]-hard .",
    "given a graph @xmath5 we construct a hamiltonian bipartite graph @xmath33 such that @xmath8 contains a clique of size @xmath78 if and only if @xmath33 contains an induced matching of size @xmath79 . without loss of generality , we assume @xmath8 contains at least @xmath80 vertices and @xmath81 edges .",
    "to construct the graph @xmath33 , we create @xmath82 graph gadgets , each gadget is designed to select an edge in the graph , the @xmath82 selected edges then form a clique of size @xmath83 in @xmath8 .",
    "each gadget contains three complete bipartite subgraphs , such a complete bipartite graph is a _",
    "bipartite unit_. each bipartite unit in the gadget contains @xmath84 vertices , and each vertex represents an edge in @xmath8 .",
    "the three bipartite units are connected into a larger bipartite graph . in particular ,",
    "the vertices in all three bipartite units are grouped into two sides , two vertices from two different bipartite units are joined by an edge if they are in different sides and represent different edges in @xmath8 .",
    "the vertices in two sides are included in two disjoint vertex subsets @xmath85 and @xmath86 respectively .",
    "figure [ fig1 ] shows a gadget constructed from a simple graph . in the figure , ( a ) shows a graph that contains vertices 1 , 2 and 3 ; ( b ) is a bipartite unit constructed from the edges in the graph in ( a ) ; ( c ) shows a gadget constructed by connecting two bipartite units into a larger graph .",
    "solid lines in the figure are the edges in the bipartite units and dashed lines represent edges that connect vertices from different bipartite units . to make the figure clear , only the edges that join the vertex@xmath87 in one bipartite unit to vertices in the other one are shown in the figure .",
    "each graph gadget is associated with an integer pair @xmath88 such that @xmath89 , the pair represents the edge that joins the vertices for @xmath90 and @xmath91 in a clique of size @xmath83 in @xmath8 .",
    "one of the bipartite unit in a graph gadget @xmath88 is dedicated to select a vertex in @xmath8 for @xmath90 in the clique and is called _",
    "unit_. another one is dedicated to select a vertex for @xmath91 and is called _",
    "@xmath91 unit_. the remaining one is designed to guarantee that both bipartite units select the same edge .",
    "we construct a graph @xmath92 to describe the relationships among different graph gadgets . each graph gadget",
    "is represented by a vertex in @xmath92 and two vertices are joined by an edge if the corresponding gadgets share an integer in their integer pairs . for example , vertices that represent the graph gadgets with integer pairs @xmath88 and @xmath93 are joined by an edge in @xmath92 since their integer pairs share an integer @xmath90 .    it is clear that @xmath92 is isomorphic to the edge graph of a complete graph on @xmath83 vertices . from lemma [ lm3 ] @xmath92 is a hamiltonian graph since @xmath78 is an odd integer .",
    "there exists a hamiltonian cycle @xmath94 in @xmath92 , where the gadgets represented by any two vertices consecutive in @xmath38 share an integer in their integer pairs .",
    "it is also clear from lemma [ lm3 ] that @xmath38 can be computed in polynomial time .",
    "two graph gadgets are _ consecutive _ if their corresponding vertices are consecutive in @xmath38 .",
    "based on @xmath38 , each pair of gadgets that are consecutive in @xmath38 are connected by a _",
    "connector_. we next describe how a connector is constructed . similar to the gadgets we have constructed to select edges , a connector contains @xmath81 bipartite units , each bipartite unit in a connector contains @xmath95 vertices , and each vertex represents a vertex in @xmath8 .",
    "the three bipartite units in a connector are connected into a larger bipartite graph .",
    "the vertices in all three bipartite units are grouped into two sides .",
    "vertices in one side are included in @xmath85 and those in the other side are included in @xmath86 .",
    "two vertices in different bipartite units are joined by an edge if one of them is in @xmath85 and the other is in @xmath86 and they represent different vertices in @xmath8",
    ".        given two consecutive graph gadgets @xmath96 and @xmath93 , we connect the @xmath90 units of the two gadgets with a connector .",
    "the two @xmath90 units are connected to the three bipartite units in a connector into a larger bipartite graph .",
    "specifically , for a given vertex @xmath36 in a @xmath90 unit that represents edge @xmath97 in @xmath8 , we join each vertex from the other side that do not represent @xmath98 in the connector to @xmath36 with an edge .",
    "a connector is _ for @xmath90 _ if it connects two graph gadgets whose integer pairs both contain @xmath90 .",
    "figure [ fig2 ] shows an example of a connector and the edges that connect the connector to the two consecutive graph gadgets @xmath88 and @xmath93 .",
    "solid lines in the figure are the edges in the bipartite units and dashed lines represent the edges that join vertices from different bipartite units .",
    "to make the figure clear , only part of the edges are shown .    as the last step of the construction , we connect all connectors for each @xmath99 , where @xmath100 , into a larger bipartite graph . for a given @xmath99 , we use @xmath101 to denote all vertices in all connectors for @xmath99 .",
    "an edge is created to join two vertices @xmath102 and @xmath103 if one of them is in @xmath85 , the other one is in @xmath86 and they represent different vertices in @xmath8 .",
    "the subgraph induced by vertices in @xmath101 is the _ connector group _ for @xmath99 .",
    "[ lm5 ] @xmath33 is a hamiltonian bipartite graph and a hamiltonian cycle in @xmath33 can be computed in polynomial time .    from the construction of @xmath33 , any vertex in @xmath33",
    "is either in @xmath85 or @xmath86 and any edge in @xmath33 is between a vertex in @xmath85 and a vertex in @xmath86 .",
    "@xmath33 thus must be bipartite .",
    "we then show that a hamiltonian cycle in @xmath33 can be constructed based on @xmath38 .",
    "we use @xmath104 to denote the graph gadgets that correspond to the vertices in @xmath92 along @xmath38 . recall that @xmath38 is constructed from an eulerian circuit in a complete graph , one of the integers in the integer pair of @xmath105 is shared with that of @xmath106 and the other one is shared with that of @xmath107 for @xmath108 . for @xmath109 , the integers in its integer pair are shared with @xmath110 and @xmath111 respectively .",
    "similarly , the integers in the integer pair of @xmath111 are shared with @xmath109 and @xmath112 respectively .",
    "we denote the integer shared between the integer pairs of @xmath113 and @xmath106 with @xmath114 for @xmath115 and use @xmath116 to denote the integer shared between the integer pairs of @xmath111 and @xmath109 .",
    "it is clear that @xmath113 contains a bipartite unit for @xmath117 and another one for @xmath114 for @xmath118 . for each such @xmath119",
    ", we arbitrarily choose a vertex @xmath120 that are in both @xmath85 and the unit for @xmath114 in @xmath105 and a vertex @xmath48 that are in both @xmath86 and the unit for @xmath121 in @xmath105 .",
    "from lemma [ lm4 ] , since @xmath8 contains at least @xmath81 edges we can find a path @xmath122 that starts with @xmath120 , visits every vertex in @xmath113 and ends with @xmath48 .",
    "similarly , for @xmath109 , we arbitrarily choose @xmath123 in both @xmath85 and the unit for @xmath116 and @xmath51 in both @xmath86 and the unit for @xmath124 and there exists a path @xmath125 that starts with @xmath123 , visits every vertex in @xmath109 and ends with @xmath51 .",
    "for @xmath115 , both @xmath48 and @xmath126 are connected to a connector .",
    "note that since @xmath127 , @xmath128 and @xmath8 contains at least @xmath80 vertices , we use lemma [ lm4 ] again and there exists a path @xmath129 that starts with @xmath48 , visits every vertex in the connector and ends with @xmath126 . for the same reason , we can find a path @xmath130 that starts with @xmath131 , visits every vertex in the connector between @xmath111 and @xmath132 and ends with @xmath123 .",
    "it is not difficult to see that @xmath133 form a hamiltonian cycle in @xmath33 .",
    "@xmath33 is thus hamiltonian bipartite . from lemma [ lm4 ] , the cycle can be obtained in polynomial time .",
    "[ lm6 ] @xmath8 contains a clique of size @xmath30 if and only if @xmath33 contains an induced matching of size @xmath134 .",
    "first , if @xmath8 contains a clique of size @xmath83 , we denote the vertices in the clique with @xmath135 and they correspond to @xmath136 in the clique . for gadget @xmath88 , we select the three edges that represent edge @xmath137 in the three bipartite units in the gadget",
    ". there are in total @xmath138 such edges .",
    "in addition to these edges , for each connector , we select the @xmath81 edges that represent the vertex shared by the two gadgets associated with the connector . for example , for the connector that connects gadgets @xmath88 and @xmath93",
    ", we choose the @xmath81 edges that represent vertex @xmath139 in the @xmath81 bipartite units in the connector .",
    "since there are @xmath140 connectors in total , we have @xmath138 edges selected in connectors .",
    "the total number of edges selected is thus @xmath134 . from the construction of @xmath33 , it is not difficult to see that the selected edges together form an induced matching .",
    "next , we show that if @xmath33 contains an induced matching @xmath7 of size @xmath134 , @xmath8 contains a clique of size @xmath30 .",
    "we first show that the subgraph induced by vertices in a gadget may contain at most three edges in an induced matching of @xmath33 . to show this , we assume there exists a gadget @xmath141 that contains four edges in @xmath7 .",
    "since @xmath141 contains three bipartite units , there exists two vertices @xmath142 and @xmath143 such that @xmath144 and @xmath145 are in the same side of a bipartite unit in @xmath141 . without loss of generality , we assume that @xmath144 and @xmath145 are both in @xmath85 . since @xmath141 contains four edges in @xmath7 , it contains a vertex @xmath146 such that @xmath147 , @xmath148 and @xmath146 is not matched to @xmath144 or @xmath145 in @xmath7 .",
    "however , @xmath146 is joined to at least one of @xmath144 and @xmath145 by an edge since @xmath144 and @xmath145 represent two different edges in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "@xmath141 thus can not contain more than three edges in @xmath7 . on the other hand ,",
    "@xmath7 may contain three edges in a gadget if each bipartite unit in the gadget contains one edge in @xmath7 and all three edges represent the same edge in @xmath8 .",
    "we consider the case where @xmath7 contains three edges in a gadget @xmath141 .",
    "we partition the edges in @xmath141 into two sets @xmath149 and @xmath150 such that @xmath149 contains the edges that join vertices in the same bipartite unit and @xmath150 contains the edges that join vertices from different bipartite units .",
    "we show that if @xmath7 contains three edges in @xmath141 , all three must come from @xmath149 .",
    "first , if only one edge is from @xmath150 , there must exist three vertices in @xmath7 such that one of them is in one side of a bipartite unit and the other two are in the other side of the same bipartite unit .",
    "this is contradictory to the fact that @xmath7 is an induced matching since a bipartite unit is a complete bipartite graph .",
    "if two edges are from @xmath150 , there exists two vertices @xmath142 and @xmath143 such that @xmath144 and @xmath145 are in the same side of a bipartite unit in @xmath141 .",
    "since @xmath141 contains three edges in @xmath7 , there exists a vertex @xmath146 such that @xmath148 , @xmath146 is not matched to @xmath144 or @xmath145 in @xmath7 and @xmath146 is in the other side of @xmath141 .",
    "again , @xmath146 must be joined to at least one of @xmath144 and @xmath145 by an edge since they represent different edges in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "all three edges thus must be in @xmath149 and they must represent the same edge in @xmath8 .",
    "we thus have shown that @xmath7 can contain at most three edges from a gadget and if @xmath7 contains three edges in a gadget , each of them represents an edge in @xmath8 and the three edges must represent the same edge in @xmath8 .    for each @xmath100 , we consider the bipartite units in the connector group for @xmath99 . from the construction ,",
    "the connector group contains @xmath151 bipartite units in total .",
    "an @xmath152 _ partial connector group _ for @xmath99 is the subgraph induced by vertices in @xmath152 bipartite units in the connector group for @xmath99 , where @xmath152 is a positive integer and @xmath153 .",
    "we show that @xmath7 contains at most @xmath152 edges in an @xmath152 partial connector group .",
    "the claim trivially holds when @xmath154 .",
    "we now consider the case where @xmath155 . indeed",
    ", we assume @xmath7 contains @xmath156 edges in an @xmath152 partial connector group for @xmath99 .",
    "since the @xmath152 partial connector group contains at most @xmath152 bipartite units , there exists a bipartite unit that contains two vertices @xmath142 , @xmath143 such that @xmath144 and @xmath145 are both in the same side of the bipartite unit . since @xmath7 contains @xmath156 edges in the @xmath152 partial connector group , there exists a vertex @xmath146 such that @xmath148 , @xmath146 is not matched to @xmath144 or @xmath145 in @xmath7 and @xmath146 is in the other side of the @xmath152 partial connector group .",
    "@xmath146 must be joined to one of @xmath144 and @xmath145 since they represent different vertices in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "@xmath7 thus contains at most @xmath152 edges in an @xmath152 partial connector group for @xmath99 .",
    "we then show that if @xmath7 contains @xmath151 edges in the connector group for @xmath99 , each of these edges must be completely contained in one bipartite unit of the connector group and represents the same vertex in @xmath8 .",
    "we assume this is not the case and there exists an edge @xmath157 in @xmath7 such that @xmath158 is in bipartite unit @xmath159 and @xmath160 is in bipartite unit @xmath161 .",
    "since both @xmath159 and @xmath161 are complete bipartite , @xmath7 does not contain vertices in the @xmath86 side of @xmath159 or the @xmath85 side of @xmath161 .",
    "@xmath7 must contain another vertex in the @xmath85 side of @xmath159 or the @xmath86 side of @xmath161 since otherwise the remaining @xmath162 bipartite units form a @xmath162 partial connector group and @xmath7 contains at most @xmath162 edges in this partial connector group .",
    "the total number of edges @xmath7 contains in the connector group is thus at most @xmath163 , which contradicts the fact that @xmath7 contains @xmath151 edges in the connector group . @xmath7",
    "thus must contain two different vertices @xmath164 and @xmath165 in one side of @xmath159 or @xmath161 . since @xmath166",
    ", @xmath7 must contain a vertex @xmath146 such that @xmath146 is on the other side of the connector group and is not matched to @xmath164 or @xmath165 .",
    "again , @xmath146 must be joined to at least one of @xmath164 and @xmath165 since they represent different vertices in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "such an edge thus does not exist in @xmath7 .",
    "each edge in @xmath7 must be completely contained in one bipartite unit . since @xmath167 , it is straightforward to see that these edges must represent the same vertex in @xmath8 .",
    "an edge is an _ inner edge _ if it joins two vertices that are both in the same graph gadget or connector group .",
    "an edge is a _ boundary edge _ if it is not an inner edge .",
    "a boundary edge is _ attached _ to the connector group @xmath99 if one of its endpoints is in the connector group for @xmath99 , where @xmath100 .",
    "given an induced matching @xmath7 in @xmath33 , a gadget with integer pair @xmath88 is _ bad in @xmath90 _ if @xmath7 contains a boundary edge @xmath168 such that one of the endpoints of @xmath168 is in the @xmath90 unit of the gadget . a gadget with integer pair @xmath88 is _ completely bad _ if it is bad in both @xmath90 and @xmath91 .",
    "a gadget with integer pair @xmath88 is _ bad in one side _ if it is bad in either @xmath90 or @xmath91 but not completely bad .",
    "a gadget is _ good _ if it is neither completely bad nor bad in one side .",
    "we show that @xmath7 contains at most @xmath169 edges in a gadget that is not good .",
    "we denote the integer pairs of the gadget with @xmath88 .",
    "if @xmath7 contains @xmath81 edges in the gadget , each edge of the three is completely contained in one bipartite unit of the gadget .",
    "however , since the gadget is not good , a different vertex in the @xmath90 unit or the @xmath91 unit is also included in @xmath7 .",
    "this contradicts the fact @xmath7 is an induced matching since both @xmath90 and @xmath91 units are complete bipartite .",
    "@xmath7 thus contains at most @xmath169 edges in a gadget that is not good .    for any @xmath99 such that @xmath100",
    ", we consider all boundary edges that are in @xmath7 and attached to the connector group for @xmath99 .",
    "first , we observe that each bipartite unit in the connector group for @xmath99 contains at most two vertices that are the endpoints of boundary edges in @xmath7 .",
    "we assume there exists a bipartite unit that contains three such vertices @xmath144 , @xmath145 , @xmath170 and @xmath144 is matched in @xmath7 to a vertex @xmath168 that represents an edge in @xmath8 .",
    "it is clear that @xmath144 , @xmath145 , @xmath170 must be in the same side of the bipartite unit .",
    "in addition , since @xmath145 and @xmath170 represent two different vertices in @xmath8 , one of them must be joined to @xmath168 by an edge and this contradicts the fact that @xmath7 is an induced matching .",
    "such a bipartite unit thus does not exist .",
    "given an induced matching @xmath7 , a bipartite unit in the connector group for @xmath99 is _ full _ if it contains two vertices that are the endpoints of two boundary edges .",
    "a bipartite unit is _ empty _ if it does not contain any vertices in @xmath7 and is _ lonely _ if it is neither _ full _ nor _ empty_. we now consider a full bipartite unit @xmath159 that contains two vertices @xmath144 and @xmath145 that are the endpoints of two boundary edges in @xmath7 .",
    "we assume @xmath144 and @xmath145 are matched in @xmath7 to vertices @xmath51 and @xmath52 that represent two edges in @xmath8 .",
    "we use @xmath161 and @xmath171 to denote the other two bipartite units that are in the same connector as @xmath159 .",
    "we show that both @xmath161 and @xmath171 must be empty . without loss of generality",
    ", we assume that both @xmath144 and @xmath145 are in @xmath85 side of @xmath159 .",
    "we first show that @xmath7 does not contain a vertex in the @xmath86 side of @xmath161 or @xmath171 .",
    "we assume such a vertex @xmath146 exists , @xmath146 must be joined to at least one of @xmath144 and @xmath145 by an edge in @xmath33 since they represent different vertices in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "such a vertex thus does not exist .",
    "we then show that @xmath7 does not contain a vertex in the @xmath85 side of @xmath161 or @xmath171 .",
    "we assume there exists such a vertex @xmath146 .",
    "since @xmath51 is not joined to @xmath145 by an edge in @xmath33 , the vertex represented by @xmath145 must be the corresponding endpoint of the edge represented by @xmath51 .",
    "since both @xmath146 and @xmath51 are in @xmath7 and @xmath146 is not matched to @xmath51 in @xmath7 , @xmath146 must also represents the vertex represented by @xmath145 .",
    "however , since @xmath145 is joined to @xmath52 by an edge in @xmath33 , @xmath146 is also joined to @xmath52 by an edge in @xmath33 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "such a vertex thus does not exist in the @xmath85 side of @xmath161 or @xmath171 .",
    "@xmath7 thus does not contain any vertices in @xmath161 or @xmath171 .",
    "it is also clear that @xmath159 does not contain a third vertex that is the endpoint of an inner edge in @xmath7 . to show this",
    ", we assume such a vertex @xmath170 exists , @xmath170 must be in the same side as that of @xmath144 and @xmath145 .",
    "we assume @xmath170 is matched to @xmath146 in @xmath7 , @xmath146 must be joined to at least one of @xmath144 and @xmath145 by an edge in @xmath33 since they represent different vertices in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "given an induced matching @xmath7 in @xmath33 , a lonely bipartite unit in the connector group for @xmath99 is _ occupied _ if @xmath7 contains a boundary edge @xmath168 such that one of the endpoints of @xmath168 is included in the bipartite unit .",
    "a lonely bipartite unit in the connector group is _ unoccupied _ if it is not occupied .",
    "we assume that @xmath7 contains @xmath172 boundary edges that are attached to the connector group for @xmath99 and @xmath173 of these @xmath172 edges are associated with @xmath174 full bipartite units .",
    "each of the remaining @xmath175 edges is then associated with a distinct occupied bipartite unit .",
    "recall that there are at least @xmath173 empty bipartite units .",
    "we immediately obtain that the number of unoccupied bipartite units in the connector group for @xmath99 is at most @xmath176 if @xmath7 includes @xmath172 boundary edges that are attached to the connector group .",
    "given an induced matching @xmath7 in @xmath33 , an inner edge @xmath168 in the connector group for @xmath99 is _ dangling _ if @xmath177 and one of the endpoints of @xmath168 is in an occupied bipartite unit .",
    "it is clear that the connector group for @xmath99 does not contain a dangling edge if it does not have unoccupied bipartite units . in addition",
    ", we observe that if the connector group for @xmath99 contains one dangling edge @xmath29 , @xmath29 is the only inner edge that @xmath7 contains in the connector group . indeed , since one of the endpoints of @xmath29 is in an occupied bipartite unit @xmath178 , @xmath7 must contain two vertices @xmath144 and @xmath145 that are in the same side of @xmath178 . if @xmath7 contains another inner edge in the connector group , there exists a vertex @xmath146 such that @xmath148 and @xmath146 is not matched to @xmath144 or @xmath145 in @xmath7 .",
    "again , @xmath146 must be joined to one of @xmath144 and @xmath145 since they represent different vertices in @xmath8 .",
    "this contradicts the fact that @xmath7 is an induced matching .",
    "such an inner edge thus does not exist .",
    "an edge in @xmath33 _ belongs to _ the connector group for @xmath99 if one of its endpoints is in the connector group .",
    "it is clear from the above reasoning that the number of edges that belong to the connector group for @xmath99 in @xmath7 is at most @xmath179 if it contains a dangling edge .",
    "we now consider the case where the connector group for @xmath99 does not contain a dangling edge .",
    "since the number of unoccupied bipartite units is @xmath180 and the connector group does not contain dangling edges , all the remaining inner edges in @xmath7 and the connector group must be completely contained in the @xmath180 partial connector group formed by these unoccupied bipartite units . from the results we have shown for a partial connector group , @xmath7 contains at most @xmath180 edges in such a partial connector group and the number of edges that belong to the connector group is thus again at most @xmath179 .",
    "we are now ready to show that @xmath8 must contain a clique of size @xmath30 .",
    "we assume @xmath7 contains @xmath181 gadgets that are not good and use @xmath182 to denote the number of edges in @xmath7 .",
    "it is not difficult to see that the following inequality holds for @xmath7 .",
    "@xmath183 where @xmath184 is the number of edges in @xmath7 that belong to the connector group for @xmath99 . since we have shown above that @xmath185",
    ". we immediately obtain @xmath186 on the other hand , @xmath7 contains @xmath134 edges .",
    "it is thus clear that @xmath181 must be @xmath187 , which implies that each graph gadget in @xmath33 must be good .",
    "@xmath7 thus does not include boundary edges .",
    "since we have shown above that @xmath7 contains at most @xmath81 inner edges in a graph gadget and @xmath151 inner edges in a connector group , we can conclude that @xmath7 contains exactly @xmath81 edges in each graph gadget and @xmath151 inner edges in each connector group .    as we have shown above ,",
    "the @xmath151 edges in each connector group represent a vertex in @xmath8 .",
    "we can thus obtain @xmath78 vertices @xmath135 from the edges that are in @xmath7 and all connector groups .",
    "in addition , each graph gadget selects an edge in @xmath8 .",
    "since @xmath7 is an induced matching , these edges connect @xmath135 into a clique of size @xmath78 .",
    "@xmath8 thus must contain a clique of size @xmath30 .    from lemma [ lm4 ] ,",
    "@xmath33 is hamiltonian bipartite and a hamiltonian cycle @xmath188 can be obtained in polynomial time . from lemma [ lm5 ] , @xmath8 contains a clique of size @xmath30 if and only if @xmath33 contains an induced matching of size @xmath134 . since @xmath33 can be constructed in polynomial time , the induced matching problem is w[1]-hard in a hamiltonian bipartite graph , even when a hamiltonian cycle in the graph is available .",
    "based on the proof of theorem [ th1 ] , we can obtain a parameterized lower bound of induced matching problem in hamiltonian bipartite graphs . since we have shown in lemma [ lm1 ] that the @xmath31-clique problem can not be solved in time @xmath32 unless w[1]=fpt , we can immediately obtain the following theorem .    [ th2 ]",
    "unless w[1]=fpt , there does not exist an algorithm that can decide whether a bipartite hamiltonian graph contains an induced matching of size @xmath13 or not in time @xmath189 , where @xmath1 is the number of vertices in the graph , even when a hamiltonian cycle of the graph is available .",
    "we assume there exists an algorithm @xmath44 that can determine whether a bipartite hamiltonian graph contains an induced matching of size @xmath13 or not in time @xmath0 , where @xmath1 is the number of vertices in the graph .",
    "given an instance @xmath190 of the @xmath31-clique problem , whose goal is to determine whether graph @xmath8 contains a clique of size @xmath30 or not .",
    "we use the following algorithm to solve the @xmath31-clique problem .    1 .   use the reduction we have developed in the proof of theorem [ th1 ] to construct a bipartite hamiltonian graph @xmath33 from @xmath191 and compute a hamiltonian cycle @xmath188 in @xmath33 ; 2 .   apply @xmath44 to @xmath33 to decide whether it contains an induced matching of size @xmath192 or not ; 3 .",
    "return `` yes '' if @xmath44 returns `` yes '' , otherwise return `` no '' .    from the reduction , we know that @xmath33 contains an induced matching of size @xmath172 if and only if @xmath8 contains a clique of size @xmath30 . the above algorithm",
    "thus correctly solves the @xmath31-clique problem .",
    "since @xmath33 contains @xmath193 vertices , where @xmath1 is the number of vertices in @xmath8 , the computation time needed by the algorithm to determine whether @xmath33 contains an induced matching of size @xmath172 is at most @xmath194    the @xmath31-clique problem can thus be solved in time @xmath32 .",
    "however , it has been shown in lemma [ lm1 ] that such an algorithm does not exist unless w[1]=fpt .",
    "such an algorithm thus does not exist for the induced matching problem in hamiltonian bipartite graphs unless w[1]=fpt .",
    "a well known inapproximability result regarding the maximum independent set problem was obtained in @xcite .",
    "it is shown that approximating the maximum independent set problem within a ratio of @xmath2 in polynomial time is np - hard , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .",
    "based on this inapproximability result , we first show that it is np - hard to approximate the maximum induced matching in general graphs within a ratio of @xmath2 , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .",
    "we then show that the same inapproximability result holds for the problem when the underlying graph is hamiltonian and a hamiltonian cycle of the graph is available .",
    "finally , we show that unless np = p , the problem can not be approximated within a ratio of @xmath3 when the underlying graph is hamiltonian bipartite and a hamiltonian cycle of the graph is available .",
    ".,width=377,height=170 ]    [ th3 ] it is np - hard to approximate a maximum induced matching in a graph within a ratio of @xmath2 in polynomial time , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .    we construct a simple reduction from the maximum independent set problem to the maximum induced matching problem .",
    "given a graph @xmath5 , the maximum independent set problem is to find a maximum independent set in @xmath8 .",
    "for each vertex @xmath195 , we create an _ image vertex _ @xmath196 and connect @xmath36 and @xmath197 by an edge .",
    "this creates a new graph @xmath33 .",
    "figure [ fig3 ] shows an example of the graph constructed by the reduction . the left part of the figure shows a graph @xmath8 that contains three vertices @xmath198 , @xmath169 and @xmath81 , while its right part shows the graph @xmath33 constructed from @xmath8 by connecting each vertex in @xmath8 into its image vertex ; @xmath98 , @xmath199 , @xmath12 are the image vertices of @xmath198 , @xmath169 and @xmath81 respectively .",
    "we assume there exists a polynomial time algorithm that can approximate the maximum induced matching in a graph within a ratio of @xmath2 .",
    "we apply the algorithm to @xmath33 and obtain an induced matching @xmath7 in @xmath33 .",
    "we denote the size of @xmath7 by @xmath200 .",
    "we then check every edge in @xmath7 .",
    "if an edge of @xmath7 connects a vertex in @xmath8 and its image vertex , we include this vertex in a set @xmath201 , otherwise we arbitrarily select one of the two vertices in the edge and include it in @xmath201 . since @xmath7 is an induced matching , @xmath201 is an independent set .",
    "we denote the size of @xmath201 by @xmath202 .",
    "the size of @xmath201 is equal to the size of @xmath7 . in other words , @xmath203 .",
    "we denote the size of the maximum independent set in @xmath8 with @xmath204 and the size of the maximum induced matching in @xmath33 with @xmath205 .",
    "we have @xmath206 since given an independent set in @xmath8 , we can immediately obtain an induced matching in @xmath33 by selecting the edges that connect vertices in the independent set to their image vertices in @xmath33 . on the other hand , we also have @xmath207 since an independent set of size at least @xmath205 can be obtained from an induced matching in @xmath33 with the method we have described above .",
    "we thus have @xmath208 .",
    "since the algorithm can approximate the maximum induced matching within a ratio of @xmath2 , we have @xmath209 where the second inequality holds for sufficiently large @xmath95 .",
    "however , since @xmath203 and @xmath210 , we immediately obtain @xmath211 this suggests that there exists an algorithm that can approximate a maximum independent set in graph @xmath8 within a ratio of @xmath212 in polynomial time , which is contradictory to the inapproximability result known for this problem .",
    "such an approximate algorithm thus does not exist for the maximum induced matching problem unless p = np .",
    "[ th4 ] it is np - hard to approximate a maximum induced matching in a hamiltonian graph based on a hamiltonian cycle in it within a ratio of @xmath2 in polynomial time , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .",
    "we construct a reduction from the maximum induced matching problem in a general graph to the same problem in a hamiltonian graph . given a graph @xmath5 , the goal of the maximum induced matching problem is to compute a maximum induced matching in @xmath8 .",
    "we construct a graph @xmath33 based on @xmath8 .",
    "we denote the number of vertices in @xmath8 by @xmath77 and create @xmath77 additional vertices @xmath213 .",
    "@xmath213 are connected into a clique .",
    "in addition , each vertex in @xmath5 is joined to @xmath213 by @xmath77 edges .",
    "we denote the resulting graph by @xmath33 .",
    "we first show that @xmath33 is hamiltonian .",
    "we use @xmath214 to denote the vertices in @xmath8 . from the construction of @xmath33",
    ", it is not difficult to see that @xmath215 form a hamiltonian cycle in @xmath33 and such a hamiltonian cycle can be obtained in polynomial time .",
    "we use @xmath204 to denote the size of a maximum induced matching in @xmath8 and @xmath205 to denote the size of a maximum induced induced matching in @xmath33 .",
    "we show that @xmath208 .",
    "since any induced matching @xmath7 in @xmath8 is also an induced matching in @xmath33 , we immediately obtain @xmath206 . on the other hand , we assume @xmath216 is a maximum induced matching in @xmath33 . from the construction of @xmath33 , @xmath216 contains only one edge if @xmath216 contains an edge in the clique formed by @xmath213 , @xmath217 thus holds in this case .",
    "in addition , @xmath218 also holds if @xmath216 only contains edges in @xmath8 . finally , if @xmath216 contains an edge @xmath168 that joins a vertex @xmath36 in @xmath8 and one of the additional vertices @xmath213 , @xmath216 contains only one edge and @xmath218 again holds .",
    "we thus obtain @xmath208 .",
    "we now assume that there exists a polynomial time algorithm @xmath44 that can approximate the maximum induced matching in a hamiltonian graph based on a hamiltonian cycle in it within a ratio of @xmath2 , where @xmath1 is the number of vertices in the graph and @xmath4 is some positive constant . given a graph @xmath5 ,",
    "we use the following algorithm to approximate the maximum induced matching in @xmath8 .    1 .   construct a hamiltonian graph @xmath33 from @xmath8 as described in the above reduction",
    "compute a hamiltonian cycle in @xmath33 as described above ; 3 .",
    "apply @xmath44 to @xmath33 to obtain an approximate solution @xmath219 for a maximum induced matching in @xmath33 ; 4 .   arbitrarily pick an edge @xmath168 in @xmath8 and",
    "return @xmath168 if @xmath219 contains only one edge ; 5 .",
    "otherwise return @xmath219 .",
    "it is clear that the algorithm returns an induced matching in @xmath8 in polynomial time .",
    "we use @xmath202 to denote the size of the matching returned by this algorithm and @xmath200 to denote the size of the matching returned by algorithm @xmath44 .",
    "we then analyze the approximation ratio of this algorithm .",
    "first , it is straightforward to see that @xmath220 .",
    "since @xmath33 contains @xmath221 vertices , we have @xmath222 where the first inequality is due to the approximation ratio of @xmath44 , and the last inequality holds for sufficiently large @xmath77 .",
    "@xmath223 thus can approximate a maximum induced matching in @xmath8 within a ratio of @xmath224 in polynomial time for sufficiently large @xmath77 and a positive constant @xmath4 .",
    "this contradicts theorem [ th3 ] , @xmath44 thus does not exist unless np = p .    [ th5 ]",
    "it is np - hard to approximate a maximum induced matching in a bipartite graph within a ratio of @xmath3 in polynomial time , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .",
    "we construct a reduction from the maximum independent set problem to the maximum induced matching problem in bipartite graphs .",
    "given a graph @xmath5 , the goal of the maximum independent set problem is to compute a maximum independent set in @xmath8 .",
    "we use @xmath1 to denote the number of vertices in @xmath8 and @xmath58 to denote the vertices in @xmath8 .",
    "we assume that there exists a polynomial time algorithm @xmath44 that can approximate a maximum induced matching in a bipartite graph within a ratio of @xmath225 , where @xmath216 is the number of vertices in the graph and @xmath4 is some positive constant . without loss of generality , we assume that @xmath226 .    for each vertex @xmath227 , where @xmath228 , we create two vertex groups , the two groups are included in the two sides of @xmath33 .",
    "each group contains @xmath229 vertices that represent @xmath56 .",
    "we use @xmath120 and @xmath230 to denote the two groups for vertex @xmath56 in the two sides of @xmath33 . @xmath33",
    "thus contains @xmath231 vertices in total .    for each @xmath57 , each vertex in @xmath120",
    "is joined to only one vertex in @xmath230 by an edge in @xmath33 .",
    "these edges are _ homogeneous edges_. a pair of vertices @xmath232 , @xmath233 , where @xmath234 , are joined by an edge in @xmath33 if @xmath235 is an edge in @xmath8 .",
    "these edges are _ heterogenous edges_.    we use @xmath205 to denote the size of a maximum matching in @xmath33 and @xmath236 to denote the size of a maximum independent set in @xmath8 .",
    "indeed , we assume @xmath237 is a maximum independent set in @xmath8 . for each @xmath238 , all homogenous edges that join vertices in @xmath239 , @xmath240",
    "can be included into a matching @xmath241 .",
    "it is straightforward to see that since @xmath201 is an independent set , @xmath241 is an induced matching of size @xmath242 .",
    "this implies that @xmath243 .",
    "we assume @xmath7 is a maximum induced matching in @xmath33 .",
    "since @xmath7 is a maximum induced matching , if a homogeneous edge that joins two vertices from @xmath120 and @xmath230 , where @xmath57 , is included in @xmath7 , all homogenous edges formed between vertices in @xmath120 and @xmath230 are also in @xmath7 . if a heterogenous edge formed between @xmath120 and @xmath244 , where @xmath245 , is included in @xmath7 .",
    "other heterogenous edges formed between @xmath120 and @xmath244 are not in @xmath7 .",
    "the number of heterogeneous edges in @xmath7 is thus at most @xmath246 .",
    "we consider the following algorithm @xmath223 for approximating a maximum independent set in @xmath8 .    1 .",
    "construct a bipartite graph @xmath33 from @xmath8 based on the reduction described above ; 2 .",
    "apply @xmath44 to @xmath33 to find an approximate solution @xmath219 for a maximum induced matching in @xmath33 ; 3 .",
    "we assume @xmath219 contains homogeneous edges formed between groups for vertices @xmath247 in @xmath8 , return @xmath248 as an approximate solution for a maximum independent set in @xmath8 .",
    "it is straightforward to see that @xmath223 returns an independent set in @xmath8 in polynomial time .",
    "we use @xmath200 to denote the size of the induced matching returned by @xmath44 and @xmath202 to denote the size of the independent set returned by @xmath223 .",
    "we first show that @xmath249 .",
    "if @xmath223 returns an empty set , @xmath219 only contains heterogenous edges .",
    "this implies that @xmath250 .",
    "we thus have @xmath251 where the first inequality follows from @xmath243 and @xmath250 ; the last inequality holds for sufficiently large @xmath216 .",
    "this contradicts the approximation ratio of @xmath44 .",
    "@xmath223 thus at least returns one vertex in @xmath8 and @xmath249 . from the approximation ratio of @xmath44 ,",
    "we have @xmath252 since @xmath243 and @xmath253 , we have @xmath254 since @xmath249 , we have @xmath255 this immediately leads to @xmath256 where the last inequality holds for sufficiently large @xmath1 .",
    "when the number of vertices in @xmath8 is sufficiently large , @xmath223 can approximate the maximum independent set in @xmath8 within a ratio of @xmath2 in polynomial time , where @xmath1 is the number of vertices in @xmath8 and @xmath4 is some positive constant .",
    "this contradicts the inapproximability of the maximum independent set problem .",
    "@xmath44 thus does not exist for the maximum induced matching problem in bipartite graphs .    a bipartite graph is _ equally sided _ if its two sides contain the same number of vertices .",
    "since the bipartite graph @xmath33 constructed in the proof of theorem [ th5 ] is equally sided .",
    "we immediately obtain the following corollary .",
    "[ col1 ] it is np - hard to approximate a maximum induced matching in a equally sided bipartite graph within a ratio of @xmath3 , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .",
    "[ th6 ] it is np - hard to approximate a maximum induced matching in a hamiltonian bipartite graph based on a hamiltonian cycle of the graph within a ratio of @xmath3 in polynomial time , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .",
    "we reduce the maximum induced matching problem in an equally sided bipartite graph to the same problem in a hamiltonian bipartite graph .",
    "given an equally sided bipartite graph @xmath257 , where @xmath63 , the goal of the problem is to compute a maximum induced matching in @xmath8 .",
    "we construct a hamiltonian bipartite graph based on @xmath8 . specifically , we denote @xmath258 and create @xmath259 additional vertices @xmath260 and @xmath261 .",
    "these additional vertices are connected into a complete bipartite graph such that @xmath260 are in one side and @xmath261 are in the other side .",
    "each vertex in @xmath23 is joined to all of @xmath261 by @xmath262 edges .",
    "similarly , each vertex in @xmath24 is joined to all of @xmath260 by @xmath262 edges .",
    "we denote the resulting bipartite graph by @xmath33 .",
    "first , we show @xmath33 is hamiltonian",
    ". we use @xmath263 to denote the vertices in @xmath23 and @xmath264 to denote the vertices in @xmath24 . from the construction of @xmath33",
    ", it is straightforward to see that @xmath265 form a hamiltonian cycle in @xmath33 .",
    "such a cycle can be obtained in polynomial time .",
    "we use @xmath205 to denote the size of a maximum induced matching in @xmath33 and @xmath204 to denote the size of a maximum induced matching in @xmath8 .",
    "since an induced matching in @xmath8 is also an induced matching in @xmath33 , we immediately obtain @xmath206 .",
    "we assume @xmath7 is a maximum induced matching in @xmath33 and @xmath266 if @xmath7 only contains edges in @xmath8 ; @xmath267 if @xmath7 contains an additional vertex .",
    "this implies that @xmath217 .",
    "we thus have @xmath210 .",
    "we assume there exists a polynomial time algorithm @xmath44 that can approximate a maximum induced matching in a hamiltonian bipartite graph .",
    "we consider the following algorithm @xmath223 for approximating a maximum induced matching in an equally sided bipartite graph @xmath8 .    1 .",
    "construct a hamiltonian bipartite graph @xmath33 as described above ; 2 .",
    "compute a hamiltonian cycle @xmath188 in @xmath33 ; 3 .   apply @xmath44 to @xmath33 to obtain an approximate solution @xmath219 for a maximum induced matching in @xmath33 ; 4 .",
    "return @xmath219 if it only contains edges in @xmath8 ; 5 .   otherwise , arbitrarily choose an edge @xmath168 in @xmath8 and return @xmath168 .",
    "it is clear that @xmath223 returns an induced matching in @xmath8 in polynomial time .",
    "we use @xmath202 to denote the size of the induced matching returned by @xmath223 and @xmath200 to denote the size of the induced matching returned by @xmath44 .",
    "it is straightforward to see that @xmath220 .",
    "we thus have @xmath268 where the first inequality is due to the approximation ratio of @xmath44 and the last inequality holds for sufficiently large @xmath174 .",
    "@xmath223 thus can approximate a maximum induced matching in an equal sided bipartite graph within a ratio of @xmath269 in polynomial time , where @xmath1 is the number of vertices in the graph and @xmath4 is some positive constant .",
    "this contradicts corollary [ col1 ] .",
    "@xmath44 thus does not exist and the theorem has been proved .",
    "in this paper , we study the parameterized complexity and inapproximability of the induced matching problem in hamiltonian bipartite graphs .",
    "our results show that although hamiltonian bipartite graphs contain some additional structure features when compared with general graphs , these structure features can not lead to efficient parameterized algorithm for this problem .",
    "our work also establishes inapproximablity results for computing a maximum induced matching in hamiltonian bipartite graphs .",
    "although we have shown that a maximum induced matching in a hamiltonian bipartite graph can not be approximated within a ratio of @xmath3 in polynomial time , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant , it remains open whether there indeed exists an approximation algorithm that can in fact achieve an approximation ratio close to it .",
    "we believe such an algorithm exists for the maximum induced matching problem in hamiltonian bipartite graphs and our future work may focus on the development and analysis of such an algorithm .",
    "the author s work is fully supported by the university fund of jiangsu university of science and technology under the grant number : 635301202",
    ".      brenda s. baker , `` approximation algorithms for np - complete problems on planar graphs '' , _ journal of acm _ , 41(1 ) : 153 - 180 , 1994 .",
    "biggs , e.k .",
    "lioyd , and r.j .",
    "wilson , _ graph theory _ , clarendoh press , oxford , 8 - 9 , 1976 .",
    "ravi boppana and magnus m. halldorsen , `` approximating maximum independent set by excluding subgraphs '' , _ bit numerical mathematics _ , 32(2):180 - 196 , 1992 kathic cameron , `` induced matchings in intersection graphs '' , _ discrete mathematics _ , 278 : 1 - 9 , 2003 .",
    "kathic cameron , r. sritharan and yiwen tang , `` finding a maximum induced matching in weakly chordal graphs '' , _ discrete mathematics _ , 266(1 - 3 ) : 133 - 142 , 2003 . jianer chen , xiuzhen huang , iyad a. kanj , ge xia , `` linear fpt reductions and computational lower bounds '' , _ proceedings of the thirty - sixth acm symposium on theory of computing ( stoc 2004 ) _ , 212 - 221 , 2004 .",
    "jianer chen , iyad a. kanj , ge xia , `` improved parameterized upper bounds for vertex cover '' , _ proceedings of the thirty - first international symposium on mathematical foundations of computer science(mfcs 2006 ) _ , 238 - 249 , 2006 .",
    "andrew m. childs , quantumn information processing in continuous time , _ ph.d . dissertation _ , massachusetts institute of technology , june 2004 .",
    "irit dinur and shmuel safra , `` the importance of being biased '' , _ proceeding of the thirty - fourth acm symposium on theory of computing ( stoc 2002 ) _ , 33 - 42 , 2002 .",
    "rodney g. downey and michael r. fellows , _ parameterized complexity _ , springer - verlag , 1998 .",
    "rodney g. downey and michael r. fellows , `` fixed parameter tractibility and completeness i : basic theory '' , _ siam journal of computing _ , 24:873 - 921 , 1995 .",
    "rodney g. downey and michael r. fellows , `` fixed parameter tractibility and completeness ii : completeness for w[1 ] '' , _ theoretical computer science a _ , 141:109 - 131 , 1995 .",
    "rodney g. downey , richanel r. fellows , and venkatesh raman , `` the complexity of irredundant set parameterized by size '' , _ discrete applied mathematics _ , 100(3 ) : 155 - 167 , 2000 .",
    "william duckworth , david f. manlove , and michele zito , `` on the approximability of the maximum induced matching problem '' , _ journal of discrete algorithms _",
    ", 3(1):79 - 91 , 2005 . m. fleury , `` deux problmes de gomtrie de situation '' , _ journal de mathmatiques lmentaires , 2nd ser ( in french ) _ , 2 : 257 - 261 , 1883 .",
    "zvil galil , `` efficient algorithms for finding maximum matching in graphs '' , _ acm computing surveys ( csur ) _ , 18(1 ) : 23 - 28 , 1986 . m. r. garey and d. s. johnson , _ computers and intractibility _ , w. h. freeman and co. , san francisco , california , 1979 .",
    "a guide to the theory of np - completeness , a series of books in the mathematical sciences .",
    "johan hastad , `` clique is hard to approximate within @xmath2 '' , _ proceedings of the thirty - seventh annual symposium on foundations of computer science ( focs 1996 ) _ , 627 - 636 , 1996 .",
    "david s. johnson , `` approximate algorithms for combinatorial problems '' , _ journal of computer and system sciences _ , 9 , 256 - 278 , 1974 .",
    "iyad kanj , michael j. pelsmajer , marcus schaefer , and ge xia ,  on the induced matching problem \" , _ proceedings of the twenty - fifth symposium on theoretical aspects of computer science ( stacs 2008 ) _ , 397 - 408 , 2008 .",
    "shin - shin kao and lih - hsing hsu,``spider web networks : a family of optimal , fault tolerant , hamiltonian bipartite graphs '' , _ applied mathematics and computation _ , 160 : 269 - 282 , 2005 . c. liu and y. song , `` parameterized dominating set problem in chordal graphs : complexity and lower bound '' , _ journal of combinatorial optimization _ , 18(1 ) : 87 - 97 , 2009 . c. liu and y. song , `` parameterized complexity and inapproximability of dominating set problem in chordal and near chordal graphs '' , _ journal of combinatorial optimization _ , 22 : 684 - 698 , 2011 .",
    "hannes moser and somnath sikdar , `` the parameterized complexity of the induced matching in planar graphs '' , _ proceedings of the first international frontiers of algorithmics workshop ( faw 2007 ) _ , 325 - 336 , 2007 .",
    "hannes moser and dimitrios m. thilikos , `` the parameterized complexity of the induced matching problem '' , _",
    "discrete applied mathematics _",
    ", 157:715 - 727 , 2009 . ran raz and shmuel safra , `` a sub - constant error - probability low degree test , and a sub - constant error - probability pcp characterization of np '' , _ proceedings of the twenty - ninth acm symposium on theory of computing ( stoc 1997 ) _ , 475 - 484 , 1997 ."
  ],
  "abstract_text": [
    "<S> in this paper , we study the parameterized complexity and inapproximability of the induced matching problem in hamiltonian bipartite graphs . </S>",
    "<S> we show that , given a hamiltonian cycle in a hamiltonian bipartite graph , the problem is w[1]-hard and can not be solved in time @xmath0 unless w[1]=fpt , where @xmath1 is the number of vertices in the graph . </S>",
    "<S> in addition , we show that unless np = p , the maximum induced matching in a hamiltonian graph can not be approximated within a ratio of @xmath2 , where @xmath1 is the number of vertices in the graph . for a bipartite hamiltonian graph in @xmath1 vertices , it is np - hard to approximate its maximum induced matching based on a hamiltonian cycle of the graph within a ratio of @xmath3 , where @xmath1 is the number of vertices in the graph and @xmath4 is any positive constant .    </S>",
    "<S> * keywords : * induced matching , hamiltonian bipartite graphs , parameterized complexity , inapproximability </S>"
  ]
}
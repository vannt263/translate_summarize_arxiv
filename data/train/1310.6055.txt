{
  "article_text": [
    "generalized additive runge - kutta ( gark ) methods were introduced in  @xcite to solve initial value problems for _ additively _ partitioned systems of ordinary differential equations @xmath0 where the right - hand side @xmath1 is split into in @xmath2 different parts with respect to , for example , stiffness , nonlinearity , dynamical behavior , and evaluation cost .",
    "additive partitioning includes the case of _ component _ partitioning as follows .",
    "the set of indices @xmath3 that number the solution components @xmath4 is split into @xmath5 subsets @xmath6 to define @xmath7    a gark method advances the numerical solution as follows  @xcite    [ eqn : gark ] @xmath8    and is characterized by the extended butcher tableau    @xmath9    generalized additive runge - kutta methods show excellent stability properties and flexibility to exploit the different behavior of the partitions .",
    "in contrast to additive runge - kutta schemes introduced in  @xcite , gark schemes allow for different stage values in the different partitions of @xmath10 .",
    "note that additive runge - kutta schemes are a special case of gark with @xmath11 for all @xmath12 .",
    "this study develops new multirate schemes in the generalized additive runge - kutta framework .",
    "the paper is organized as follows .",
    "section  [ sec : mgark - schemes ] introduces the multirate gark family and discusses their computational effort .",
    "the algebraic stability results for gark schemes are transferred to multirate gark schemes and order conditions are derived .",
    "section  [ sec : mgark - traditional ] shows that many existing multirate runge - kutta schemes can be represented and analyzed in the gark framework .",
    "the generalization of additive runge - kutta schemes to multirate versions is considered in section  [ sec : mark ] .",
    "section  [ sec : monotonicity ] discusses absolutely monotonic multirate gark schemes and shows how to construct such schemes .",
    "finally , conclusions are drawn in section  [ sec : conclusions ] .",
    "we consider a two - way partitioned system with one slow component @xmath13 , and one active ( fast ) component @xmath14 .",
    "the slow component is solved with a large step @xmath15 , and the fast one with small steps @xmath16 .",
    "denote by @xmath17 the intermediate solutions computed by the fast micro - steps , stating with @xmath18 . a multirate generalization of with @xmath19 micro steps @xmath16 proceeds as follows .",
    "[ eqn : gark - mr ] the slow stage values are given by : @xmath20 the fast micro - steps are : @xmath21 the full ( macro - step ) solution is given by : @xmath22    after eliminating the micro - step solutions @xmath17 from the multirate gark method   we arrive at the following form .",
    "one macro - step of a generalized additive multirate runge - kutta method with @xmath19 equal micro - steps reads    [ mgark ] @xmath23    the base schemes are runge - kutta methods , @xmath24 for the slow component and @xmath25 for the fast component .",
    "the coefficients @xmath26 , @xmath27 realize the coupling between the two components .",
    "the method can be written as a gark scheme   over the macro - step @xmath15 with the fast stage vectors @xmath28^t$ ] .",
    "the corresponding butcher tableau reads @xmath29    a simple version of uses the same coupling in all micro - steps , @xmath30as we will see later , for stability reasons it is necessary in general to introduce additional freedom by using different coupling matrices for the micro - steps",
    ".    of particular interest are methods which use the same base scheme for both the slow and the fast components , @xmath31 such methods can be easily extended to systems with more than two scales by applying them in a telescopic fashion .",
    "the general formulation of the method leads to a system of coupled equations for all the fast and the slow stages , and the resulting computational effort is larger , not smaller , than solving the coupled system with a small step . for an efficient computational process",
    "the macro and micro - steps need to stay mostly decoupled .",
    "a very effective approach is to have the slow stages for @xmath32 coupled only with the first fast micro - step , @xmath33 equation and with @xmath34 are solved together .",
    "when both methods are implicit this first computation has a similar cost as one step of the coupled system .",
    "the following fast micro - steps with @xmath35 are solved independently .",
    "the corresponding slow - fast coupling matrix is @xmath36 when the slow stages are computed in succession , e.g. , when the slow method is explicit or diagonally implicit , a more complex approach to decouple the computations is possible .",
    "namely , the slow stages are coupled only with the micro - steps that have been computed already , and vice - versa , the micro - steps are coupled only with the macro - stages whose solutions are already available . the fast and the slow methods proceed side by side .",
    "this decoupling can be achieved by choosing @xmath37 where @xmath38 is the number of slow stages that have been computed before the current micro - step , e.g. , @xmath39 .",
    "the micro - step @xmath40 is only coupled to these ( known ) stages .",
    "similarly , @xmath41 where the first @xmath42 slow stages are computed before the micro - step @xmath40 , and therefore they are _ not _ coupled to the current micro - step .",
    "an example of such methods is discussed in detail section [ sec : mis ] .",
    "we consider systems where each of the component functions is dispersive : @xmath43 with respect to the same scalar product @xmath44 . for two solutions @xmath45 and @xmath46 of , each starting from a different initial condition ,",
    "the norm of the solution difference @xmath47 is non - increasing , @xmath48 .",
    "this section investigates the conditions under which the multirate scheme is nonlinearly stable , i.e. the inequality @xmath49 holds for any two numerical approximations @xmath50 and @xmath51 obtained by applying the scheme to the ode with and with initial values @xmath52 and @xmath53 .      following the gark stability analysis in  @xcite ,",
    "a multirate gark scheme is algebraically stable if the following matrix is non - negative definite    @xmath54    where @xmath55 algebraic stability guarantees unconditional nonlinear stability of the multirate gark scheme  @xcite . if the base schemes @xmath56 and @xmath57 are algebraically stable , one can easily verify that @xmath58 and @xmath59 hold , since @xmath60 the scheme is called _ stability - decoupled _",
    "@xcite if @xmath61 ( and therefore @xmath62 ) . in this case",
    "the individual stability of the slow and fast schemes is a sufficient condition for the stability of the overall multirate method .",
    "we have the following result .",
    "consider a multirate gark scheme   with positive fast weights , @xmath63 for @xmath64 .",
    "the scheme is stability - decoupled iff @xmath65 is given by @xmath66    for the non - diagonal terms we have @xmath67 this term is zero if the following @xmath19 coupling conditions hold @xmath68 solving for @xmath69 yields  .",
    "if we use component partitioning , no additional coupling conditions have to be fulfilled as shown in  @xcite , provided that both base schemes @xmath24 and @xmath25 are algebraically stable .",
    "following higueras @xcite , consider partitioned systems where each of the component functions is coercive : @xmath70 assume that there exist @xmath71 such that the following matrix is positive definite    @xmath72    the next result extends the one in @xcite .",
    "consider a partitioned system with coercive component functions solved by a multirate gark method , and assume that holds .",
    "the solution is nonlinearly stable , in the sense that @xmath73 , under the step size restriction @xmath74    if the gark method is stability decoupled then the weight @xmath75 in ensures stability of the slow component for @xmath76 , and of the fast component under the step restriction @xmath77 .",
    "the multirate gark method imposes no additional step size restrictions for conditional stability .      as the multirate method is a particular instance of a generalized additive runge - kutta scheme , the order conditions follow directly from the derivation in  @xcite .",
    "the order conditions for the multirate gark methods   are given in tables  [ table_multgark_a ] and [ table_multgark_b ] .",
    "@xmath78    @xmath79      consider the basis schemes @xmath24 and @xmath25 of order three or higher .",
    "the multirate order conditions simplify considerably if the following conditions ( named internal consistency conditions in @xcite ) hold    [ eqn : simplifying - condition - general ] @xmath80    or , in equivalent form    [ eqn : simplifying - condition ] @xmath81    if hold then all order two conditions and most of the order three conditions are automatically fulfilled .",
    "the only remaining order three conditions are    [ remaining.order3-general ] @xmath82    or , in equivalent form ,    [ remaining.order3 ] @xmath83    when only the first fast microstep is coupled to the slow part the second simplifying condition   becomes    @xmath84    the first simplifying condition   can be fulfilled by setting @xmath85 with @xmath86    which transforms the last order three coupling condition   into @xmath87      we now consider the case of additive partitioning and impose the coupling conditions for stability . following",
    "we set @xmath88 if the base methods @xmath25 and @xmath24 are algebraically stable then ensures the nonlinear stability of the overall method .",
    "however , the stability conditions can not be fulfilled when the simplifying conditions   hold .",
    "when only the first fast microstep is coupled to the slow part , the stability conditions   are not compatible with the first simplifying condition   for multirate gark schemes with @xmath89 .",
    "assume that the multirate gark scheme fulfills the first simplifying conditions and the stability decoupling condition for all @xmath90 :    [ order3.gen.sc ] @xmath91 { 1\\hspace{-0,9ex}1}{b}^{\\{{\\mathfrak{s}}\\}}\\,^t - b^{\\{{\\mathfrak{f}}\\}}\\,^{-1 } a^{\\{{\\mathfrak{s}},{\\mathfrak{f}},\\lambda\\}}\\,^t b^{\\{{\\mathfrak{s}}\\ } } & = & { a^{\\{{\\mathfrak{f}},{\\mathfrak{s}},\\lambda\\}}}. \\ ] ]    eliminating @xmath92 leads to    [ order3.gen.sc2 ] @xmath93    when only the first fast microstep is coupled to the slow part , one gets for @xmath94 @xmath95 yielding a contradiction .    consequently",
    ", if the base schemes are of order at least three the stability decoupling conditions   require to work with the order conditions given in table  [ table_multgark_noncomponent ] .",
    "note that condition pairs ( i ) and ( viii ) , ( ii ) and ( xiv ) , ( iii ) and ( xiii ) , ( vi ) and ( xi ) , as well as ( vii ) and ( x ) coincide .",
    "the coefficients of a stability decoupled multirate gark scheme have to fulfill the following nine independent order conditions : @xmath96 where @xmath97    @xmath98    consider the case where the same scheme is used for both the fast and the slow components .",
    "the order two coupling condition reads @xmath99 and the additional order three conditions are    @xmath100    to easily construct schemes with an order higher than one , we set now @xmath101 for @xmath102 .",
    "for @xmath103 the only second order condition leads to    @xmath104    assuming @xmath105 and since @xmath106 for a method of order two .",
    "this choice preserves the explicit structure of the scheme , if the underlying scheme is explicit .",
    "note that the basic method does not depend on @xmath19  only the coefficients of the coupling matrices @xmath107 and @xmath108 depend on @xmath19 .      for component partitioning",
    "the stability of the fast and slow base schemes ensures the overall stability , and no coupling conditions are needed .",
    "consequently , there are additional degrees of freedom for choosing @xmath109 .",
    "the general order conditions for this case have been given in tables  [ table_multgark_a ] and [ table_multgark_b ] .",
    "we construct a multirate scheme from two arbitrary order three basis schemes @xmath110 and @xmath111 by coupling only the first active microstep to the slow part and keeping the flexibility in the coupling matrices @xmath27 the order two coupling conditions are    @xmath112    the order three conditions read @xmath113    the only degrees of freedom to fulfill these conditions are the parameters of the coupling coefficient matrices @xmath114 and @xmath27 ( @xmath115 ) .",
    "in this section we discuss several important multirate runge kutta methods proposed in the literature , and show how they can be represented and analyzed in the gark framework .",
    "the mrk class of multirate runke - kutta methods proposed by kvaerno and rentrop  @xcite can be formulated in the gark framework .",
    "the mrk schemes are based on coupling only the first fast microstep to the slow part , which , in this paper s notation , reads @xmath116 kvaerno and rentrop obtain order conditions that are nearly independent of @xmath19 by making the following choices of coefficients .    *",
    "the slow to fast coupling is @xmath117 i.e. , @xmath118 .",
    "the scalar functions @xmath119 fulfill the condition @xmath120 * the matrix @xmath107 is scaled by @xmath19 , and the matrix @xmath121 is scaled by @xmath122 , i.e. , the function evaluations of the active part are always done in the microstep size , and the ones in the slow part in the macrostep size ;    note that this choice corresponds to the simplifying conditions   with the special choice  . with the notation",
    "@xmath123 the corresponding gark order conditions are given in table  [ tab : mrk - order ] .",
    "choose two order three schemes @xmath110 and @xmath111 . to obtain a multirate method of order three",
    "the free parameters @xmath121 , @xmath107 , and @xmath124 have to fulfill the two remaining order three coupling conditions , together with the three simplifying conditions ,    [ eqn : coupling - conditions ] @xmath125    note that the additional condition @xmath126 imposed by kvaerno and rentrop  @xcite , which transforms the second condition   into @xmath127 ensures that the active solution has order three _ at all microsteps .",
    "_    @xmath128    we are now interested in constructing schemes of order 3 with only 2 stages .",
    "note that the overall scheme will be stable , if the basic schemes are stable due to componentwise partitioning .",
    "we use the simplifying conditions   and   together with @xmath129 if we use an order three basis scheme @xmath130 , the remaining order conditions for the free parameters @xmath131 and @xmath124 read    [ eqn : coupling - conditions - particular ] @xmath132    the first two conditions coincide if we set @xmath133 when @xmath134 the choice @xmath135 fulfills this additional condition and condition at the same time .",
    "the remaining conditions   and can be fulfilled , for example , by setting @xmath136 this yields the order three gark scheme given by the extended butcher tableau @xmath137 for the radau - ia scheme ( @xmath138 ) we obtain @xmath139 and for radau - iia ( @xmath138 ) @xmath140      the use of dense output interpolation for coupling the slow and fast components was developed by savcenco , hundsdorfer , and co - workers in the context of rosenbrock methods @xcite .",
    "this approach can be immediately extended to runge kutta methods , and the overall scheme can be formulated in the mutirate gark framework .",
    "for a traditional runge kutta method the dense output provides highly accurate approximations of the solution at intermediate points @xmath141 or highly accurate approximations of the function values at intermediate points @xmath142    the slow terms in the micro - steps can be viewed as approximations of the function value at the micro steps @xmath143 consequently , using dense output of function values leads to the standard multirate gark approach with the coupling given by the dense output coefficients @xmath144 alternatively , one can use the dense solution values in the micro - steps @xmath145 where @xmath146 the dense output of the fast variable can be applied only for the current micro - step @xmath147 or for the previous micro - step , i.e. , in extrapolation mode @xmath148 where the dense output coefficients @xmath149 , @xmath150 are appropriately redefined .",
    "the solution interpolation approach can be cast in the gark framework by adding the additional slow stage values @xmath151 , with no contribution to the output ( @xmath152 ) .",
    "this is less convenient for analysis , however , as the number of slow stages becomes equal to the number of fast stages .",
    "multirate infinitesimal step ( mis ) methods @xcite discretize the slow component with an explicit runge kutta method .",
    "the fast component is advanced between consecutive stages of this method as the exact solution of a fast ode system .",
    "the fast ode has a right hand side composed of the original fast component of the function , plus a piecewise constant `` tendency '' term representing the discretized slow component of the function .",
    "the order conditions of the overall method assume that the fast ode can be solved exactly , which justifies the `` infinitesimal step '' name .",
    "we show here that a multirate infinitesimal step method can be cast in the gark framework when the inner fast odes are solved by a runge kutta method with small steps .",
    "we focus on the particular method of knoth and wolke @xcite , which was the first mis approach , and which has the best practical potential .",
    "this approach has been named recursive flux splitting multirate ( rfsmr ) in @xcite , and has been cast as a traditional partitioned runge kutta method in @xcite .",
    "applications to the solution of atmospheric flows are discussed in @xcite .",
    "the approach below can be applied to any mis scheme where the internal odes are solved by runge kutta methods .",
    "consider an outer ( slow ) explicit runge kutta scheme with the abscissae @xmath153 , @xmath154 for @xmath155 , and @xmath156 .",
    "the inner ( fast ) scheme can be explicit or implicit .",
    "if the same explicit scheme is used in both the inner and the outer loops then the method can be applied in a telescopic fashion , where an even faster method is obtained by sub - stepping recursively .",
    "the scheme proceeds , in principle , by solving an ode between each pair of consecutive stages of the slow explicit method : @xmath157 , \\quad \\textnormal{with } v_i(0 ) = y^{\\{{\\mathfrak{s}}\\}}_{i-1 } \\\\",
    "\\quad y^{\\{{\\mathfrak{s}}\\}}_i & = & v_i\\left ( \\tilde{c}^{{\\normalfont\\textsc{o}}}_i h \\right ) \\\\",
    "\\multicolumn{3}{l}{\\textnormal{end for } i }   \\\\ \\multicolumn{3}{l}{v ' = \\sum_{j=1}^{s^{{\\normalfont\\textsc{o } } } } \\frac{b^{{\\normalfont\\textsc{o}}}_{j } - a^{{\\normalfont\\textsc{o}}}_{s^{{\\normalfont\\textsc{o}}},j}}{1 - c^{{\\normalfont\\textsc{o}}}_{s^{{\\normalfont\\textsc{o } } } } } f^{\\{{\\mathfrak{s}}\\ } } \\left ( y^{\\{{\\mathfrak{s}}\\}}_j \\right ) + f^{\\{{\\mathfrak{f}}\\ } } \\left ( v \\right ) } \\\\",
    "\\multicolumn{3}{l}{\\qquad   \\textnormal{for   } \\tau \\in   [ 0 , ( 1 - c^{{\\normalfont\\textsc{o}}}_{s^{{\\normalfont\\textsc{o } } } } ) h ] , \\quad \\textnormal{with } v_i(0 ) = y^{\\{{\\mathfrak{s}}\\}}_{s } }   \\\\ \\multicolumn{3}{l}{y_{n+1 } = v\\left ( 1 - c^{{\\normalfont\\textsc{o}}}_{s^{{\\normalfont\\textsc{o } } } } \\right ) } \\end{array } \\renewcommand{{1.0}}{1.0}\\ ] ] after a rescaling of the time variable @xmath158 the internal odes read    [ eqn : rfsmr - internal - ode ] @xmath159 , \\quad \\textnormal{with } v_i(0 ) = y^{\\{{\\mathfrak{s}}\\}}_{i-1 } \\\\ \\nonumber & & y^{\\{{\\mathfrak{s}}\\}}_{i } = v_i(h ) \\\\ \\label{eqn : rfsmr - internal - ode - solution } v ' & = & \\sum_{j=1}^{s^{{\\normalfont\\textsc{o } } } } \\left(b^{{\\normalfont\\textsc{o}}}_{j } - a^{{\\normalfont\\textsc{o}}}_{s^{{\\normalfont\\textsc{o}}},j}\\right)\\ , f^{\\{{\\mathfrak{s}}\\ } } \\left ( y^{\\{{\\mathfrak{s}}\\}}_j \\right ) + ( 1 - c^{{\\normalfont\\textsc{o}}}_{s^{{\\normalfont\\textsc{o}}}})\\ , f^{\\{{\\mathfrak{f}}\\ } } \\left ( v \\right ) \\\\",
    "\\nonumber & & \\textnormal{for   } \\theta \\in   [ 0 ,   h ] , \\quad \\textnormal{with } v(0 ) = y^{\\{{\\mathfrak{s}}\\}}_{s } \\\\ \\nonumber & & y_{n+1 } = v(h)\\,.\\end{aligned}\\ ] ]    the numerical scheme solves the inner odes using several steps of an inner runge kutta method @xcite .",
    "for the present analysis we consider the case when only one step of the internal runge kutta method @xmath160 is taken to solve the ode for each subinterval @xmath161 .",
    "this is no restriction of generality as any sequence of @xmath19 sub steps can be written as a single step method .",
    "the resulting scheme reads    [ eqn : rfsmr - one - internal - step ] @xmath162    the effective step of the inner method is @xmath163 , which gives the multirate aspect of the method .",
    "if one performs @xmath19 sub steps then the effective step is @xmath164 with @xmath16 .",
    "iterating after the explicit outer stages yields @xmath165 equation becomes @xmath166 the idea is now to interpret this scheme as a gark method  note that we formally solve the odes for the active part with one step of the inner fast method @xmath160 with @xmath167 .",
    "the mis scheme   can be written as a gark method with the corresponding butcher tableau given by @xmath168 , @xmath169 , @xmath170 @xmath171 @xmath172 where @xmath173    the coefficients fulfill the simplifying `` internal consistency '' conditions given in matrix form by @xmath174 and @xmath175    assuming that both the fast and the slow methods have order at least two , the simplifying assumptions imply that the overall scheme is second order .    assuming that both the fast and the slow methods have order at least three , the third order coupling conditions reduce to the single condition @xmath176    comparing with  , the results above show that : @xmath177 @xmath178 @xmath179 and @xmath180 the double subscript indices correspond to the double indices of the fast stage vectors .",
    "we see that the method satisfies the simplifying `` internal consistency '' conditions for @xmath181 and @xmath182 , since @xmath183 one internal step is taken to solve the last ode :    [ eqn : rfsmr - one - step - solution ] @xmath184    using @xmath185 equation becomes    [ eqn : rfsmr - one - step - solution - standard ] @xmath186    the coefficients are @xmath187 @xmath188 @xmath189 and @xmath190    we have that the first order conditions as well as the last simplifying conditions hold @xmath191 due to the gark properties @xcite the simplifying conditions imply that the overall scheme is second order , assuming that both the fast and the slow methods have order at least two .",
    "this proves parts ( ii ) and ( iii ) .",
    "collecting all the coefficients together we have that the slow method is the outer method , and therefore has order @xmath192 : @xmath193    the inner scheme takes @xmath194 consecutive steps of the fast method ( @xmath195 ) each with a step size @xmath196 , and therefore also has order @xmath192 : @xmath197    the coupling coefficients are @xmath198 and @xmath199 which proves part ( i ) .    to verify part ( iv ) ,",
    "we see that the third order coupling conditions reduce to @xmath200 assuming that both the fast and the slow methods have order at least three .",
    "the first condition is satisfied automatically since @xmath201 where the square is taken component - wise .",
    "for the second condition @xmath202 which gives  .",
    "the condition   corresponds to the additional order three condition derived in the original mis paper  @xcite .    0",
    "first we set @xmath203 to fulfill condition  .",
    "to fulfill we demand @xmath204 which yields ( using the abbreviation @xmath205 ) @xmath206 with free parameter @xmath207 , provided that @xmath208 , which fulfills in addition .",
    "the remaining conditions   and are fulfilled by setting @xmath209 provided that @xmath210 .",
    "we are now interested in constructing a stable scheme of order 3 with only 3 stages .",
    "first we set @xmath203 to fulfill condition  .",
    "to fulfill we demand @xmath204 which yields ( using the abbreviation @xmath205 ) @xmath206 with free parameter @xmath207 , provided that @xmath208 , which fulfills in addition .",
    "the remaining conditions   and are fulfilled by setting @xmath209 provided that @xmath210",
    ".    0    @xmath211    for the latent part , and    @xmath212    for the active part .",
    "a special case of multirate gark schemes   are the multirate additive runge - kutta schemes .",
    "they are obtained in the gark framework by setting @xmath213 the scheme proceeds as follows    [ multaddrkscheme ] @xmath214    and has the following extended butcher tableau    @xmath215      the coupling condition for nonlinear stability yields @xmath216 and only @xmath217 and @xmath218 remain as free parameters . as a consequence ,",
    "the algebraic stability of the basic method @xmath219 is equivalent to the algebraic stability of @xmath220 , where @xmath221 .    besides the algebraic stability of @xmath219 and @xmath220",
    ", the following conditions have to be fulfilled for a method of order two :    @xmath222    a simple choice of parameters is    @xmath223    and    @xmath224    in this case both base methods are not only algebraically stable but also symplectic .      for component partitioning there are no additional nonlinear stability conditions",
    ". following again the lines of  @xcite , we set    [ component - special - conditions ] @xmath225 we also consider the simplifying assumption @xmath226    the corresponding order conditions are given in table  [ table_multaddrk_2a ]",
    ".    @xmath227    if , in addition to , a second simplifying condition is given by the following relation @xmath228 when and hold any pair @xmath229 and @xmath230 of algebraically stable order three schemes lead to an order three multirate scheme , provided that the compatibility conditions are true : @xmath231 these compatibility conditions are fulfilled by a scheme with @xmath232 stages if @xmath233 with free parameters @xmath234 , provided that @xmath235 .",
    "it is easy to see that the scheme must have at least four stages , as @xmath236 would yield @xmath237 and consequently @xmath238 .    to construct an algebraically stable scheme of order @xmath239 , we first choose a pair of algebraically stable schemes @xmath240 and @xmath241 with @xmath242 and then define @xmath243 and @xmath244 .",
    "it is straightforward to show that this yields a stable multirate additive runge - kutta scheme , if the following conditions hold :    @xmath245    such a pair can be constructed by extending ( doubling ) any algebraically stable scheme . for the radau - ia method , for example , the extension to the pair @xmath240 and @xmath241 is given by :    @xmath246 a possible choice for @xmath247 and @xmath248 fulfilling all conditions above is @xmath249 finally , we set @xmath250 with @xmath251 and @xmath252 arbitrary .",
    "for @xmath253 we get @xmath254 and @xmath255 . for the extended radau - ia scheme we have @xmath256 .",
    "consider the method in the general form , represented by the butcher tableau and let @xmath257    we are concerned with partitioned systems where there exist @xmath258 such that for any @xmath259 @xmath260 this implies that condition holds for any @xmath261 , i.e. , the solutions of forward euler steps with the slow and fast subsystems , respectively , are monotone under this step size restriction .",
    "the condition also implies that the system has a solution of non increasing norm . to see this",
    "consider @xmath262 with @xmath263 and write an euler step with the full system as a convex combination @xmath264 if @xmath265 . for @xmath266 the aggregate euler step is monotonic for time steps @xmath267 , and therefore the solution of has non increasing norm , @xmath268 @xcite .",
    "we seek multirate schemes which guarantee a monotone numerical solution @xmath269 for under suitable step size restrictions . specifically , we seek schemes where the macro step is not subject to the above @xmath270 bound .",
    "the following definition and results follow from the general ones for gark schemes in  @xcite .",
    "let @xmath271 and @xmath272 a multirate gark scheme defined by @xmath273 is called _ absolutely monotonic _",
    "( a.m. ) at @xmath274 if    [ eqn : am - conditions ] @xmath275    where @xmath276 . here",
    "all the inequalities are taken component - wise .",
    "let @xmath277 we note that conditions are equivalent to    [ eqn : am - simple - conditions ] @xmath278    these are precisely the monotonicity relations for a simple runge kutta matrix .",
    "consequently , the machinery developed for assessing the monotonicity of single rate runge kutta schemes @xcite can be directly applied to the multirate gark case as well .",
    "the radius of absolute monotonicity of the multirate gark scheme is the largest number @xmath279 such that the scheme is absolutely monotonic for any @xmath280 $ ] .",
    "consider the gark scheme applied to a partitioned system with the property .",
    "for any macro - step size obeying the restriction @xmath281 the stage values and the solution are monotonic    [ eqn : monotonicity - conclusions ] @xmath282    in practice we are interested in the largest upper bound for the time step that ensures monotonicity .",
    "we next consider the particular case of telescopic multirate gark methods , where both the fast and the slow components use the same irreducible monotonic base scheme @xmath283 .",
    "the classical runge kutta monotonicity theory @xcite states that an irreducible base scheme has a nonzero radius of absolute monotonicity if and only if @xmath284 where @xmath285 denotes the incidence matrix ( i.e. , a matrix with entries equal to one or zero for the non - zero and zero entries of the original matrix , respectively ) .",
    "the butcher tableau of the resulting multirate scheme is @xmath286 and the matrix is @xmath287 . \\ ] ] the extra stages added to obtain from do not impact the final solution , therefore the underlying numerical solution is not changed . denote the upper left block of by @xmath288 .",
    "note that implies that @xmath289 as @xmath288 represents @xmath19 concatenated steps of the base method .    by similar arguments as in the classical theory @xcite ,",
    "the multirate scheme is absolutely monotonic if the incidence of the extended matrix satisfies @xmath290    the multirate gark schemes with the same basic scheme for fast and slow components is absolutely monotonic , if the following conditions hold :    [ eqn : am - incidence - conditions ] @xmath291 for all @xmath292 .",
    "the square of matrix is @xmath293 with the following blocks : @xmath294 writing the incidence inequality by blocks yields  .",
    "a comparision of   with reveals that the monotonicity of the base scheme is a necessary , but not sufficient condition for the absolute monotonicity of the multirate version .",
    "the coupling coefficients have to be chosen appropriately in order to preserve this property .",
    "for example , since @xmath288 and @xmath295 are block lower triangular , a necessary condition for is that @xmath296 for @xmath297 .    if all weights of the base method are nonzero then condition is automatically satisfied .",
    "an interesting choice of coupling coefficients is to use only the first micro - step solution in the slow calculation @xmath298 and to include the slow term contribution only in the last micro - step @xmath299 in this case the incidence conditions  take the much simpler form :    [ eqn : am - incidence - conditions - simple ] @xmath300    condition is automatically satisfied if @xmath301 .",
    "moreover , if the couplings are multiples of the base scheme , @xmath302 and @xmath303 , then implies that all conditions are satisfied .",
    "the base for both the fast and the slow schemes is the following explicit , order two , strong stability preserving method , with an absolute stability radius @xmath304 @xmath305 the general coupling conditions for a second order multirate scheme read : @xmath306 we consider three different couplings .    *",
    "the coupling coefficients that respect the nonlinear stability decoupling condition are : @xmath307 @xmath308 @xmath309 because of the negative coefficient this method is not absolutely stable .",
    "* coupling the slow step with only the first fast step is achieved by @xmath310 the second order condition can be fulfilled by taking @xmath311 for @xmath312 we have @xmath313 , since corresponds to an irreducible runge kutta scheme , and is not satisfied .",
    "* we now build a scheme with , and which includes the slow terms only in the last micro - step @xmath314 with this coupling the multirate scheme maintains the absolute stability radius of the base method for any @xmath19 , as all conditions are satisfied .",
    "we note that monotonicity conditions for several multirate and partitioned explicit runge - kutta schemes are discussed by hundsdorfer , mozartova , and savcenco in a recent report @xcite .",
    "this work develops multirate generalized additive runge kutta schemes , which exploit the different levels of activity within the partitions of the right - hand sides and/or components by using appropriate time steps for each of them .",
    "multirate gark schemes inherit the high level of flexibility from gark schemes  @xcite , which allow for different stage values as arguments of different components of the right hand side .",
    "many well - known multirate runge - kutta schemes , such as the kvaerno - rentrop methods  @xcite , the multirate infinitesimal step methods  @xcite , and methods based on dense output coupling , are particular particular members of the new family of methods .",
    "the paper develops the order conditions ( up to order three ) for the generalized additive multirate schemes .",
    "we extend the gark algebraic stability and monotonicity analysis  @xcite to the new multirate family , and show that these properties are inherited from the base schemes provided that some coupling conditions hold .",
    "future work will construct multirate gark methods tailored to special applications in , for example , circuit design , vehicle system dynamics , or air quality modeling , and will extend the new family of schemes to differential - algebraic equations .",
    "the work of a. sandu has been supported in part by nsf through awards nsf oci8670904397 , nsf ccf0916493 , nsf dms0915047 , nsf cmmi1130667 , nsf ccf1218454 , afosr fa95501210293def , afosr 12 - 2640 - 06 , and by the computational science laboratory at virginia tech .",
    ", _ multirate implicit - explicit time integration schemes in atmospheric modelling _ , in aip conference proceedings , vol .  1281 , cnaam 2010 : international conference of numerical analysis and applied mathematics , 2010 , p.  1831 ."
  ],
  "abstract_text": [
    "<S> this work constructs a new class of multirate schemes based on the recently developed generalized additive runge - kutta ( gark ) methods  @xcite . </S>",
    "<S> multirate schemes use different step sizes for different components and for different partitions of the right - hand side based on the local activity levels . </S>",
    "<S> we show that the new multirate gark family includes many well - known multirate schemes as special cases . </S>",
    "<S> the order conditions theory follows directly from the gark accuracy theory . </S>",
    "<S> nonlinear stability and monotonicity investigations show that these properties are inherited from the base schemes provided that additional coupling conditions hold .    </S>",
    "<S> computational science laboratory technical report csl - tr-6/2013 +    michael gnther and adrian sandu    `` multirate generalized additive runge kutta methods ''    computational science laboratory + computer science department + virginia polytechnic institute and state university + blacksburg , va 24060 + phone : ( 540)-231 - 2193 + fax : ( 540)-231 - 6075 + email : sandu@cs.vt.edu + web : http://csl.cs.vt.edu    [ cols=\"^,^,^ \" , ]     generalized additive runge - kutta schemes , partitioned runge - kutta methods , multirate integration , nonlinear stability , monotonicity    65l05 , 65l06 , 65l07 , 65l020 . </S>"
  ]
}
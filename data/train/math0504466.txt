{
  "article_text": [
    "in the method of lines , semi - discretization in space turns a linear parabolic differential equation into a large , stiff system of ordinary differential equations @xmath3 possibly with a mass matrix multiplying the time derivative .",
    "this system is subsequently discretized in time , e.g. , by the implicit euler method with step size @xmath4 , @xmath5 the approximation @xmath6 for a prescribed step number @xmath0 is thus obtained by solving a sequence of @xmath0 linear systems with a matrix of the form @xmath7 , where @xmath8 in the implicit euler method . for @xmath0  steps with a higher - order , @xmath9-stage runge - kutta method ,",
    "there are @xmath10 such linear systems , possibly with complex  @xmath11 as in the excellent radau  iia methods .",
    "even if fast techniques such as multi - grid methods are used , solving the linear systems of equations typically constitutes the main computational cost , in particular for problems in complicated spatial geometries .    in this paper",
    "we propose an algorithm to compute the implicit runge - kutta approximation @xmath6 at a fixed time @xmath12 , up to an arbitrary accuracy @xmath1 , by doing @xmath0 runge - kutta steps for differential equations of the form @xmath13 , each step in parallel for @xmath14 complex parameters @xmath11 , and by solving only @xmath15 with matrices of the form @xmath7 , all of which can be solved in parallel .",
    "the constant in this work estimate is moderate : for a relative accuracy of @xmath16 and @xmath17 time steps we need to solve less than 100 linear systems ! for large step numbers",
    "@xmath0 , the number of linear systems is thus dramatically reduced , both in a sequential and in a parallel computational setting .",
    "the algorithm is highly efficient for computing runge - kutta approximations to the solution of ( [ ivp ] ) at a relatively small number of selected time points or of short subintervals , but it is not useful for computing _ all _ values @xmath18 .",
    "basic ingredients of the algorithm are the following :    * the discrete variation - of - constants formula for the runge - kutta method ; * the cauchy integral representation of the approximations to the operator exponential ; * the discretization of the contour integrals , using @xmath19 contours with @xmath14 quadrature points each ; * the discrete semigroup property , which permits us to reinterpret the split sums as runge - kutta approximations to solutions of equations of the form @xmath20 .    the algorithm given here is closely related to the fast convolution algorithms developed in @xcite .",
    "the error analysis for the discretized contour integrals follows the analysis of inverse laplace transform approximations in @xcite .",
    "discretized contour integrals have been used previously in several instances in the numerical solution of parabolic equations : for homogeneous problems ( @xmath21 ) in @xcite similarly to talbot s method @xcite for the inversion of the laplace transform @xmath22 , and more recently for inhomogeneous problems @xcite using the laplace transform of the inhomogeneity @xmath23 or assuming special properties , in particular analyticity , of @xmath23 .",
    "in contrast , the present algorithm works directly with the discrete values @xmath24 that are used in the runge - kutta discretization of ( [ ivp ] ) .",
    "no smoothness conditions for @xmath23 are needed .",
    "this is because the algorithm approximates the _ discrete _ result of the runge - kutta method , with an error that does not depend on the smoothness of either the inhomogeneity or the solution . of course",
    ", to make sense , the runge - kutta discretization of ( [ ivp ] ) with the considered step size @xmath4 should be sufficiently accurate , which in turn does depend on the smoothness of @xmath23 ( see @xcite for runge - kutta error bounds for parabolic equations in terms of the data ) .    about the differential equation ( [ ivp ] )",
    "we assume that @xmath25 is _ sectorial _ : there exist real constants @xmath26 and @xmath27 and an angle @xmath28 such that the resolvent is bounded by @xmath29 here @xmath30 is the operator norm corresponding to a vector norm , also denoted by @xmath30 . clearly , for a symmetric positive semi - definite matrix @xmath25 the bound ( [ sector ] ) holds in the euclidean norm with @xmath31 and @xmath32 for any positive angle @xmath33 . more generally , condition",
    "( [ sector ] ) includes also non - symmetric operators such as those arising in convection - diffusion equations . in many situations",
    "resolvent bounds ( [ sector ] ) in @xmath34  norms are known to be inherited from the continuous problem by finite differences or finite elements , uniformly in the spatial discretization parameter ( see , e.g. , @xcite ) .    in section  [ sec.dvc ]",
    "we review the discrete variation - of - constants formula for implicit runge - kutta methods , and in section  [ sec.contour ] we describe the discretization of the contour integrals for the rational approximations to the matrix exponential .",
    "the fast algorithm is given in section  [ sec.fa ] , including an extension to systems with a mass matrix .",
    "a numerical example illustrates the performance of the algorithm in section  [ sec : numex ] .",
    "finally , section  [ sec.error ] analyses the error of the contour integral discretization , which is the only error source in the algorithm .",
    "in this preparatory section we recall the discrete variation - of - constants formula for implicit runge - kutta methods ; cf . , e.g. ,  @xcite .    an implicit @xmath9-stage runge - kutta method applied to ( [ ivp ] ) yields , at @xmath35 , an approximation @xmath36 to @xmath37 , given recursively by @xmath38 the method",
    "is determined by its coefficients @xmath39 ( @xmath40 ) .",
    "we denote the runge - kutta matrix by @xmath41 and the row vector of the weights by @xmath42 . eliminating the internal stages @xmath43 results in @xmath44 where the rational approximation @xmath45 to @xmath46 is defined by @xmath47 with @xmath48 , and where the rational functions  @xmath49 are the entries of the row vector and @xmath49 as rational functions originating from a runge - kutta method , another suitable choice would be @xmath50 and @xmath51 , where @xmath52 is the @xmath53th lagrange polynomial corresponding to the gauss nodes  @xmath54 .",
    "this could be used similarly in the algorithm below . ]",
    "@xmath55 we assume that the eigenvalues of the runge - kutta matrix @xmath56 have positive real part , and that the method is l - stable , i.e. , @xmath57 these conditions are in particular satisfied by the radau iia family of runge - kutta methods @xcite .",
    "the discrete analogue of the variation - of - constants formula @xmath58 is obtained by solving the recurrence relation ( [ u - rec ] ) . with the column vector @xmath59 ,",
    "this becomes @xmath60",
    "[ sec.contour ] we now discretize the cauchy integral representation @xmath61 along suitable contours @xmath62 in the resolvent set of @xmath63 . the numerical integration in ( [ contour - int ] ) is done by applying the trapezoidal rule with equidistant steps to a parametrization of a hyperbola  @xcite . with one contour and one set of quadrature points on this contour",
    ", we do not have a uniformly good approximation for all @xmath64 , but we can instead obtain a uniform approximation locally on a sequence of geometrically growing intervals @xmath65 where the base @xmath66 is an integer , e.g. , @xmath67 .",
    "for @xmath68 we approximate the contour integrals ( [ contour - int ] ) as @xmath69 with the quadrature points @xmath70 lying on a hyperbola @xmath71 and with the corresponding weights @xmath72 .",
    "the number of quadrature points on @xmath71 , @xmath73 , is chosen independent of @xmath74 .",
    "the contour @xmath71 is chosen as a hyperbola given by @xmath75 with an @xmath74-dependent parameter @xmath76 .",
    "the angle @xmath77 satisfies @xmath78 with @xmath33 of ( [ sector ] ) , and @xmath27 is the shift in ( [ sector ] ) .",
    "the weights and quadrature points in ( [ eq : num - int ] ) are given by @xmath79 where @xmath80 is a step length parameter that can be chosen independent of @xmath74 .",
    "the following bound of the necessary number of quadrature points is a consequence of the error analysis in section  [ sec.error ] .",
    "[ thm : k ] in @xmath81 , a quadrature error bounded in norm by @xmath1 for @xmath82 is obtained with @xmath83 this holds for @xmath84 , with some constant @xmath85 .",
    "the required number @xmath86 is independent of @xmath74 and of @xmath87 and @xmath88 with @xmath89 . for @xmath90 , @xmath86 is also independent of the length @xmath91 of the time interval .",
    "@xmath86  depends on the angle @xmath33 , the bound @xmath26 and the shift @xmath27 in @xmath92 , but is otherwise independent of @xmath25 .",
    "the approximation is , however , poor for the first few @xmath87 ; cf.also  @xcite .    concerning the choice of parameters we remark that the above asymptotic bound for @xmath86 is obtained with @xmath93 proportional to @xmath94 and with the parameter @xmath95 for the contour @xmath71 chosen such that @xmath96 with @xmath97 independent of @xmath74 and @xmath98 , e.g. , with @xmath99 . since perturbations in the terms of ( [ eq : num - int ] ) can be magnified with @xmath100 with @xmath101 , the factor @xmath97 should not be chosen too large .",
    "we refer to @xcite for an optimized strategy to choose the parameters .",
    "we start from the discrete variation - of - constants formula ( [ dvc ] ) for the runge - kutta approximation @xmath6 with a fixed @xmath0 . for the expression @xmath102 we use the discretization of the cauchy integral like in the previous section and in fact similarly to the approach of @xcite for computing @xmath103 .",
    "the novel algorithm is concerned with the treatment of the inhomogeneity . for a fixed step number  @xmath0 and a given base @xmath104 we split the sum in  ( [ dvc ] ) into @xmath105 sums , where @xmath105 is the smallest integer such that @xmath106 : @xmath107 with @xmath108 and @xmath109 for @xmath110 .",
    "on inserting the integral representation ( [ contour - int ] ) we obtain , with @xmath111 for @xmath112 and  @xmath113 , @xmath114 the integral is discretized with the quadrature formula of section  [ sec : contour ] : we approximate @xmath115 by @xmath116 given as @xmath117 where @xmath118 comparing this formula with ( [ dvc ] ) , we see that @xmath119 is the runge - kutta approximation to the solution at time @xmath120 of the linear initial - value problem @xmath121 and hence @xmath119 is computed by runge - kutta time - stepping on ( [ ivp - l ] ) , using ( [ u - rec ] ) with the scalar @xmath122 in place of the operator @xmath123 . with the solutions @xmath124 of the linear systems of equations",
    "@xmath125 we obtain @xmath116 as the linear combination @xmath126 there are only @xmath127 linear systems ( [ lin - system ] ) to be solved , for @xmath128 and @xmath129 .",
    "( since the quadrature points lie symmetric with respect to the real axis , only the sum of the real parts of half the terms in ( [ u - approx ] ) needs to be computed when approximating solutions with real components . )",
    "we recall @xmath130 and @xmath131 , where @xmath1 is the accuracy requirement in the discretization of the contour integrals .",
    "note that the only approximation made in the computation of @xmath116 , is the discretization of the contour integrals .",
    "because of the poor approximation of the contour integral ( [ contour - int ] ) for small  @xmath87 , we evaluate @xmath132 by @xmath104 direct runge - kutta steps up to time @xmath133 for the initial value problem @xmath134 this requires the solution of another @xmath135 linear systems with matrices of the form @xmath136 . for small values of @xmath104 or stringent accuracy requirements , we take @xmath137 direct runge - kutta steps to compute @xmath138 .",
    "( asymptotically , we need to take @xmath139 direct steps according to theorem  1 . )",
    "finally we sum up the @xmath116 to obtain @xmath140 as the approximation to @xmath6 .",
    "the fast algorithm thus consists of doing the steps ( [ ivp - l])([u - sum ] ) in the given order .",
    "the algorithm extends to differential equations with a positive definite mass matrix @xmath26 , @xmath141 which is transformed to a system @xmath142 for @xmath143 with @xmath144 and @xmath145 . applying _ formally _ the above algorithm to the transformed system and then transforming back yields again ( [ u - approx ] ) , where now @xmath124 is the solution of the linear system @xmath146 and @xmath119 is the runge - kutta approximation at @xmath120 of the initial value problem ( [ ivp - l ] ) with the untransformed inhomogeneity @xmath24 .",
    "we have formulated the algorithm for a constant time step size  @xmath98 , but this is not essential .",
    "the algorithm is readily extended to accommodate variable step sizes , with the same step size sequence for all @xmath147 in ( [ ivp - l ] ) , chosen adaptively according to the behaviour of the inhomogeneity @xmath24 .",
    "adaptivity in space can be used in solving the linear systems ( [ lin - system ] ) , choosing the spatial mesh according to the behaviour of the right - hand sides @xmath119 and the operator @xmath25 . note that in a hierarchical basis representation , adding a mesh point just corresponds to adding a scalar differential equation in ( [ ivp - l ] ) .",
    "the details of such an adaptive algorithm are beyond the scope of this paper .",
    "we consider an initial - boundary value problem of the heat equation in two space dimensions for @xmath148 , @xmath149    u(x,0 ) & = & 0 , & \\quad   x\\in \\omega ,    \\\\[2pt ]    \\partial_{\\nu } u ( x , t ) & = & 0 , &   \\quad   x\\in \\gamma_{int } , \\ , 0\\le t \\le t ,    \\\\[2pt ]    \\partial_{\\nu } u ( x , t)&= & \\beta(x , t ) - \\rho ( u(x , t)-u_{out } ) , & \\quad       x\\in \\gamma_{out } , \\ , 0\\le t \\le t , \\end{array } \\right.\\ ] ] on a wire - fence like structure ( rectangle of size @xmath150 with hexagonal holes , each hole with radius 0.8 ) , see  figure  [ fig : geo ] . here",
    "@xmath151 denotes the boundary of the holes , and @xmath152 is the boundary of the rectangle . in the example we set the heat flux @xmath153 on the upper and left boundary of the rectangle and @xmath154 on the lower and right boundary , and the convective heat flux to @xmath155 , with the ambient temperature @xmath156 and the coefficient of surface heat transfer @xmath157 , cf .  the introduction in  @xcite .",
    "space is discretized using linear finite elements on a triangular mesh , with @xmath158 vertices and @xmath159 triangles .",
    "triangulation is done using the tool triangle  @xcite .",
    ".,scaledwidth=40.0% ]    the finite element equations are of the form ( [ ivp - mass ] ) , where @xmath26 is the standard mass matrix containing the @xmath160 inner products of the nodal basis functions @xmath161 . the stiffness matrix is the sum @xmath162 with @xmath163 the inhomogeneity @xmath24 is given by @xmath164 the algorithm takes into account that @xmath24 has nonzero entries only along the outer boundary @xmath152 , so that effectively @xmath24 is a vector whose dimension is the number of degrees of freedom on the outer boundary  in this example @xmath165 . the differential equations ( [ ivp - l ] ) need to be integrated only for this reduced dimension , since they have no coupling between the components .",
    "we have used the @xmath166- and @xmath167-stage radau iia methods ( of orders  3 and 5 , respectively ) for time discretization in our numerical experiments .    in the fast algorithm we set @xmath168 and @xmath169 and , from the experience of @xcite , we choose the angle in the hyperbola as @xmath170 , the parameter @xmath171 and the parameter @xmath172 .",
    "this choice of parameters leads to a deviation of the order  @xmath173 from the runge - kutta approximation at time @xmath174 .     and",
    "fast algorithm  @xmath175.,scaledwidth=49.0% ]    the two - dimensional example above is still small enough that a direct solution of the linear systems using sparse solvers is reasonable . a direct implementation of the @xmath9-stage radau  iia method ( cf .",
    "@xcite ) requires only @xmath9 sparse lu factorizations , computed at the beginning of the integration , followed by @xmath10 substitutions .",
    "on the other hand , for the algorithm presented here we need to solve @xmath176 linear systems with matrices @xmath177 for as many different values of  @xmath11 , and the @xmath135 linear systems for the @xmath104 direct steps . especially with a diagonal , lumped mass matrix @xmath178 , this work can be reduced by a similarity transform taking @xmath179 to tridiagonal ( or hessenberg ) form @xmath91 , but exploiting sparsity here becomes an issue ; see  @xcite .",
    "the resulting linear systems with @xmath180 are then inexpensive to solve . even without using such a transform",
    ", the fast algorithm eventually overtakes the standard algorithm for sufficiently large step numbers @xmath0 , in the present example for @xmath181 . much earlier and",
    "larger relative gains arise when iterative solvers are used for the linear systems in both algorithms , as is clear from the linear systems count in figure  [ fig : lscount ] .",
    "our analysis relies on the good behaviour of the trapezoidal rule for certain holomorphic integrands @xcite . following the ideas in @xcite",
    ", we consider the continuation of the parametrization ( [ hyp - param ] ) to the conformal mapping @xmath182 ( for ease of presentation we set @xmath183 in ( [ sector ] ) . )",
    "this conformal mapping transforms each horizontal straight line @xmath184 with @xmath185 , into the left branch of the hyperbola @xmath186 i.e. , the left branch of the hyperbola with center at @xmath187 , foci at @xmath188 and with asymptotes forming angles @xmath189 $ ] with the real axis .",
    "therefore , @xmath190 transforms the horizontal strip @xmath191 into the region @xmath192 limited by the left branches corresponding to @xmath193 . to indicate the dependence on the parameter @xmath194 of ( [ gamma - w ] )",
    ", we write @xmath195 .",
    "we note that @xmath196 if and only if @xmath197 for any @xmath198 , so that @xmath199 because of ( [ sector ] ) , henceforth we will assume that @xmath200 and @xmath201 satisfy @xmath202 . under these conditions ,",
    "all the hyperbolas we are considering lie outside the spectrum of @xmath63 .",
    "after parametrizing ( [ contour - int ] ) via @xmath190 , we get @xmath203 where @xmath204 is given , for @xmath205 , by @xmath206 for an integrable mapping @xmath207 , @xmath208 and @xmath209 , set @xmath210 i.e. , @xmath211 stands for the quadrature error of the truncated trapezoidal rule for the integral of @xmath212 . our goal is precisely to estimate @xmath213 . to this end",
    "we first consider the behaviour of @xmath214 on @xmath215 .",
    "we need the following lemma whose elementary proof is omitted .",
    "now , from the sectorial condition ( [ sector ] ) on @xmath25 and lemma  [ estimaterational ] with @xmath220 , we obtain @xmath221 for @xmath222 and @xmath223 ( recall that @xmath224 ) , where @xmath225 is the constant given by @xmath226 finally , the above bound ( [ cotaghn ] ) , the elementary inequality @xmath227 and the bound 1 for the sine yield , for @xmath228 and @xmath229 , @xmath230    next , to estimate @xmath213 , we are going to use an approach similar to the one in @xcite .",
    "we denote by @xmath231 the class formed by all the continuous mappings @xmath232 ( for a complex banach space @xmath233 , here a space of matrices ) holomorphic on the interior of the strip @xmath215 , and satisfying the following two conditions :        given @xmath236 , it turns out , assuming that @xmath212 has a fast decay at @xmath237 , that @xmath211 becomes very small as @xmath238 if @xmath80 is properly tuned ( see @xcite for various situations ) . in theorem  [ errorestimate ]",
    "we assume that @xmath212 exhibits the kind of decay of @xmath214 in ( [ finalghn ] ) and this theorem will directly provide the estimate for @xmath213 we are looking for .",
    "[ errorestimate ] assume that @xmath239 for some @xmath240 , and that there exist @xmath241 and @xmath242 such that @xmath243 then , for @xmath244 , there holds @xmath245 & & + c \\ , \\left (   \\lfunc ( a ) \\ , e^{- a   \\cosh(k\\tau)/2}+   \\five \\big ( 1 + \\frac{a } n \\cosh k\\tau \\big)^{-(n-1 ) } \\right),\\end{aligned}\\ ] ] with @xmath246 .",
    "set @xmath252 for fixed @xmath253 , it is clear that @xmath254 on the one hand , by theorem 4.1 in @xcite ( see also @xcite ) , we have @xmath255 on the other hand , @xmath256 & \\leq & 2c \\int_{k\\tau}^{+\\infty }   \\big ( 1 + \\frac{a } { n}\\cosh x \\big)^{-n } \\,dx.\\end{aligned}\\ ] ] the proof of the theorem is now completed by applying the following lemma . @xmath257      the change of variables @xmath261 shows that @xmath262 set @xmath263 .",
    "then , from the estimates in @xcite and the elementary inequality @xmath264 it turns out that @xmath265 & \\le   & \\int_{r}^{+\\infty } e^{-a   \\cosh x /2}\\ , dx \\\\[4pt ] & \\le & \\lfunc ( a ) \\ , e^{-a \\cosh r/2 } \\ , .\\end{aligned}\\ ] ] moreover , @xmath266 now , since @xmath267 , the result follows from the observation that for both @xmath268 and @xmath269 we have @xmath270    we apply theorem  [ errorestimate ] to @xmath214 .",
    "first of all , notice that by ( [ finalghn ] ) it is clear that @xmath214 satisties ( [ pp1 ] ) .",
    "moreover , by lemma  [ integralpowercoshestimate ] , we have @xmath271 & & \\hspace{24pt } \\times \\bigg ( \\lfunc(b\\mu t)\\,e^{-b\\mu t/2 } + \\big(1 + \\frac{b\\mu t}{n}\\big)^{-(n-1 ) } \\bigg ) , \\nonumber\\end{aligned}\\ ] ] and conclude that @xmath272 .",
    "then , in view of ( [ finalghn ] ) and ( [ nghn ] ) , theorem  [ errorestimate ] yields directly @xmath273\\nonumber & + & \\lfunc ( b\\mu t ) \\ , e^{-b\\mu t\\cosh(k\\tau)/2 } \\ ! + \\!\\bigl(1+\\frac{b\\mu t}n \\cosh(k\\tau)\\bigr)^{-(n-1 ) } \\bigg).\\end{aligned}\\ ] ] a simplified version of this estimate is obtained by using the elementary inequalities ( [ elineq ] ) and @xmath274 \\lfunc(y ) & \\le & 3 , & \\qquad   \\mbox{for } y \\ge1 .",
    "\\end{array}\\ ] ] setting @xmath275 with @xmath276 of lemma  [ estimaterational ] as before , we can summarize the final result in the following theorem .",
    "the first term in the error bound becomes @xmath282 if @xmath80 is chosen so small that @xmath283 , which requires an asymptotic proportionality @xmath284 for @xmath194 chosen such that @xmath285 with an arbitrary positive constant @xmath97 and with @xmath286 , we obtain that the second term is @xmath282 if @xmath287 , i.e. , with @xmath288 for a sufficiently large constant @xmath289 . with the above choice of @xmath80 , this yields @xmath290 the third term then becomes smaller than @xmath1 for @xmath291 with a sufficiently large constant @xmath292 .",
    "taken together , these estimates prove theorem  [ thm : k ] .    _ acknowledgements .",
    "_ the research of the first and third authors has been supported by dgi - mcyt under project mtm2004 - 07194 cofinanced by feder funds .",
    "the research of the second author has been supported by dfg , sfb 382 .",
    "the reserach of the fourth author has been supported by the dfg research center matheon mathematics for key technologies \" in berlin .",
    "j. r.  shewchuk , triangle : engineering a 2d quality mesh generator and delaunay triangulator , in applied computational geometry : towards geometric engineering , eds .",
    "m. c. lin and d. manocha , lecture notes in computer science 1148 , springer , 1996 , 203222 ."
  ],
  "abstract_text": [
    "<S> the result after @xmath0 steps of an implicit runge - kutta time discretization of an inhomogeneous linear parabolic differential equation is computed , up to accuracy @xmath1 , by solving only @xmath2 linear systems of equations . </S>",
    "<S> we derive , analyse , and numerically illustrate this fast algorithm </S>",
    "<S> .    _ mathematics subject classification ( 2000 ) : _ 65m20 </S>"
  ]
}
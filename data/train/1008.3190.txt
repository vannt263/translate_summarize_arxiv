{
  "article_text": [
    "[ sec : intro ] this paper addresses the following questions , which are motivated by a recent approach to drawing trees that are simple and finite . a graph with one vertex is _",
    "trivial_. let @xmath4 be an ( undirected ) graph .",
    "the _ degree _ of a vertex @xmath5 of @xmath4 , denoted by @xmath6 , is the number of edges of @xmath4 incident with @xmath5 .",
    "the minimum and maximum degrees of @xmath4 are respectively denoted by @xmath7 and @xmath8 .",
    "we say @xmath4 is _ degree-@xmath2 _ if @xmath9 .",
    "now let @xmath4 be a directed graph .",
    "let @xmath5 be a vertex of @xmath4 .",
    "the _ indegree _ of @xmath5 , denoted by @xmath10 , is the number of incoming edges incident to @xmath5 .",
    "the _ outdegree _ of @xmath5 , denoted by @xmath11 , is the number of outgoing edges incident to @xmath5 .",
    "we say @xmath4 is _ outdegree-@xmath2 _ if @xmath12 for every vertex @xmath5 of @xmath4 . a _ rooted tree _ is a directed tree such that exactly one vertex , called the _ root _ , has indegree @xmath13 .",
    "it follows that every vertex except @xmath14 has indegree @xmath15 , and every edge @xmath16 of @xmath0 is oriented ` away ' from @xmath14 ; that is , if @xmath5 is closer to @xmath14 than @xmath17 , then @xmath16 is directed from @xmath5 to @xmath17 .",
    "if @xmath14 is a vertex of a tree @xmath0 , then the pair @xmath18 denotes the rooted tree obtained by orienting every edge of @xmath0 away from @xmath14 . ]",
    "developed in the companion paper @xcite . for a given tree @xmath0 and integer @xmath1 ,",
    "* what is the minimum number of degree-@xmath2 subtrees that partition @xmath3 ?",
    "* what is the minimum number of degree-@xmath2 subtrees that cover @xmath3 ?    here a _",
    "partition _ of a graph @xmath4 is a set of connected subgraphs of @xmath4 such that every edge of @xmath4 is in exactly one subgraph .",
    "a partition can also be thought of as a ( non - proper ) edge - colouring , with one colour for each connected subgraph .",
    "a _ covering _ of @xmath4 is a set of connected subgraphs of @xmath4 such that every edge of @xmath4 is in at least one subgraph . for @xmath1 ,",
    "let @xmath19 be the minimum number of degree-@xmath2 connected subgraphs that partition @xmath4 , and let @xmath20 be the minimum number of degree-@xmath2 connected subgraphs that cover @xmath4 .",
    "we emphasise that ` trees ' and ` subtrees ' are necessarily connected .",
    "in section  [ sec : partitioning ] we answer the first question above . in particular , we present an explicit formula for @xmath21 , and describe a linear time algorithm that finds the corresponding partition ( amongst other results ) .",
    "the remainder of the paper addresses the second question above .",
    "section  [ sec : paths ] considers coverings of trees by paths ( that is , degree-2 subtrees ) .",
    "a tight bound on the number of paths is obtained , amongst other combinatorial and algorithmic results .",
    "then section  [ sec : treecovering ] describes a polynomial time algorithm that computes @xmath22 and the corresponding covering .",
    "section  [ sec : completetrees ] describes an example of this algorithm applied to ` complete ' trees",
    ".    then section  [ sec : caterpillars ] studies minimum coverings of caterpillars by degree-@xmath2 subtrees .",
    "again tight bounds on the number of subtrees are obtained .",
    "coverings of caterpillars provide a natural precursor to the results in sections  [ sec : rootedpathwidth ] and [ sec : unrootedpathwidth ] .",
    "these sections establish tight upper bounds on the number of covering subtrees in terms of the pathwidth and maximum degree of the tree .",
    "essentially , these results show that pathwidth is the right parameter to consider when studying coverings of trees by degree-3 subtrees .    finally , section  [ sec : general ] studies coverings of general and planar graphs by connected subgraphs of bounded degree . while this problem has not previously been explicitly studied , in the case @xmath23 , a related concept has been extensively studied .",
    "harary defined the _ pathos _ or _ path number _ of a graph @xmath4 , denoted by @xmath24 , to be the minimum number of paths that partition @xmath25 ; see @xcite . @xcite",
    "defined the _ unrestricted path number _ of a graph @xmath4 , denoted by @xmath26 , to be the minimum number of paths that cover @xmath4 . since every cycle is the union of two disjoint paths , @xmath27 where the lower bounds on @xmath24 and @xmath26 become equalities if @xmath4 is a tree",
    "also concerning the @xmath23 case , gallai conjectured that @xmath28 for every connected graph @xmath4 with @xmath29 vertices . while this conjecture remains unsolved , @xcite proved that @xmath30 for every ( not neccessarily connected ) graph @xmath4 ; also see @xcite .",
    "[ sec : partitioning ] this section considers partitions of ( the edge - set of ) a tree into bounded - degree subtrees tree @xmath0 , there is a partition of @xmath3 into @xmath31 degree-@xmath2 subforests .",
    "this is just an edge - colouring such that every vertex is incident to at most @xmath2 monochromatic edges ; see @xcite for analogous results for general graphs .",
    "the bound of @xmath31 is best possible for every tree @xmath0 , and there is a linear - time algorithm to compute the partition . ] .",
    "first we prove a formula for @xmath21 .",
    "interestingly , it only depends on the degrees modulo @xmath2 .",
    "[ thm : minpart ] let @xmath0 be a non - trivial tree with @xmath32 vertices , and let @xmath1 . define @xmath33 for @xmath34 $ ] .",
    "then @xmath35 moreover , there is a linear - time algorithm to compute @xmath21 and a corresponding partition .",
    "first note that @xmath36 thus it suffices to prove the first equality .",
    "we proceed by induction . in the base case , @xmath37 and @xmath38 .",
    "now assume that @xmath0 has at least three vertices .",
    "thus @xmath0 has a set of leaves @xmath39 with a common neighbour @xmath17 , such that @xmath17 is a leaf in @xmath40 . by induction , @xmath41    to extend the partition of @xmath40 , the colour that is assigned to the edge in @xmath40 incident to @xmath17 can be assigned to @xmath42 edges incident to @xmath39 .",
    "there are @xmath43 remaining leaf edges incident to @xmath17 .",
    "these leaf edges can be partitioned into @xmath44 stars rooted at @xmath17 , each with at most @xmath2 edges .",
    "this defines a partition of @xmath0 into @xmath45 subtrees , which equals the claimed upper bound on @xmath21 since leaves do not contribute to the summation .",
    "it is easy to convert this proof into a linear - time algorithm .",
    "here is a sketch .",
    "root @xmath0 at a vertex @xmath14 , and partition the vertex sets according to their distance from @xmath14 ( using bfs ) .",
    "the set @xmath39 is simply a maximal set of leaves at maximum distance @xmath2 from the root with a common neighbour ( at distance @xmath42 ) .",
    "the partition is then easily computed .",
    "this bound on @xmath21 is optimal since at most @xmath42 edges incident to @xmath39 can share the same colour as the edge in @xmath40 incident to @xmath17 , and at least @xmath46 colours not used in @xmath40 must be introduced on the remaining leaf edges .",
    "note that theorem  [ thm : minpart ] with @xmath23 reduces to the following result by @xcite :    for every non - trivial tree @xmath0 , @xmath47 equals half the number of odd - degree vertices .",
    "theorem  [ thm : minpart ] also implies :    for every integer @xmath1 and tree @xmath0 with @xmath48 vertices , @xmath49 with equality if and only if @xmath50 for every vertex @xmath5 .    a degree-@xmath2 subtree @xmath51 of a tree @xmath0 is _",
    "degree-@xmath2 maximal _ if no edge of @xmath0 can be added to @xmath51 to obtain a new degree-@xmath2 subtree . observe that @xmath51 is degree-@xmath2 maximal if and only if @xmath52 for every vertex @xmath5 of @xmath51 . in particular",
    ", @xmath5 is leaf in @xmath51 if and only if @xmath5 is a leaf in @xmath0 .",
    "clearly every degree-@xmath2 subtree is contained in a maximal degree-@xmath2 subtree .",
    "every degree-@xmath2 maximal subtree @xmath39 of a tree @xmath0 is in a minimum partition of @xmath0 into degree-@xmath2 subtrees .    for each vertex @xmath5 of @xmath39 ,",
    "let @xmath53 be the component of @xmath54 that contains @xmath5 .",
    "note that @xmath53 is trivial ( that is , @xmath5 is the only vertex in @xmath53 ) if every edge incident to @xmath5 is in @xmath39",
    ". if @xmath53 is non - trivial then @xmath55 , as otherwise @xmath39 is not maximal .",
    "let @xmath56 be the set of vertices @xmath5 in @xmath39 such that @xmath53 is non - trivial . taking @xmath39 with a minimum partition of each @xmath53 into degree-@xmath2 subtrees ( where @xmath53 is non - trivial ) gives a partition of @xmath0 into @xmath57 parts . by theorem  [ thm : minpart ] , @xmath58 observe that if @xmath59 is in @xmath60 , then @xmath59 is in exactly one subtree @xmath53 , and this @xmath53 is non - trivial , and @xmath61 .",
    "thus @xmath62 if @xmath53 is trivial then @xmath63 , as otherwise @xmath39 is not maximal .",
    "thus @xmath64 .",
    "hence @xmath65 hence this partition is minimum by theorem  [ thm : minpart ] .",
    "[ sec : paths ] this section studies coverings of trees by degree-2 subtrees .",
    "since a subtree is degree-2 if and only if it is a path , @xmath47 is the minimum number of paths that cover @xmath0 .",
    "since each path covers at most two leaves , if @xmath0 has @xmath66 leaves then at least @xmath67 paths are required .",
    "@xcite first proved the converse :    [ thm : akg ] the minimum number of paths that cover a tree with @xmath66 leaves is @xmath67 .    in this section",
    "we explore this topic further .",
    "first , we investigate the total number of edges in a covering of a tree by the minimum number of paths .",
    "let @xmath68 be a path in a tree @xmath0 .",
    "then @xmath68 is _ leafy _ if both endpoints of @xmath68 are leaves in @xmath0 . and",
    "@xmath68 is a _ pendant path _ if one endpoint of @xmath68 is a leaf in @xmath0 , the other endpoint of @xmath68 has degree at least 3 in @xmath0 , and every internal vertex in @xmath68 has degree 2 in @xmath0 .",
    "[ thm : sizepathcovering ] let @xmath0 be a tree with @xmath29 vertices and @xmath66 leaves",
    ". then @xmath0 has a covering by @xmath67 paths with @xmath69 edges in total .",
    "moreover , for infinitely many trees @xmath0 , every covering of @xmath0 by @xmath67 paths has at least @xmath69 edges in total .",
    "let @xmath70  be a set of @xmath67 paths that cover @xmath0 and minimise the total number of edges . by theorem  [ thm : akg ]",
    "this is well defined .",
    "each leaf is in exactly one path in @xmath70  ( by the minimality of @xmath70 ) .",
    "each path in @xmath70  covers at most two leaves .",
    "thus every path in @xmath70  is leafy , except if @xmath66 is odd , in which case , one path in @xmath70  is a pendant path , and every other path is leafy . also note that this pendant path shares no edge in common with another path in @xmath70  ( again by the minimality of @xmath70 ) .",
    "suppose on the contrary that some edge @xmath71 of @xmath0 is in three distinct paths @xmath72 .",
    "thus each @xmath73 is leafy .",
    "let @xmath74 be an edge - maximal path in @xmath0 that contains @xmath71 , such that every internal vertex of @xmath74 has degree exactly 2 .",
    "( it is possible that @xmath71 is the only edge in @xmath74 . )",
    "observe that @xmath74 is contained in each of @xmath75 .",
    "let @xmath5 and @xmath17 be the endpoints of @xmath74 .",
    "let @xmath53 and @xmath76 be the two component subtrees of @xmath77 , such that @xmath5 is in @xmath53 and @xmath17 is in @xmath76 .",
    "let @xmath78 and @xmath79 .",
    "thus @xmath80 are three paths that cover @xmath81 , but with @xmath82 less edges in total .",
    "hence , replacing @xmath83 and @xmath84 by @xmath85 and @xmath86 in @xmath70 , produces a covering of @xmath0 by @xmath67 paths with less edges in total .",
    "this contradiction proves that every edge in @xmath0 is in at most two paths in @xmath70 .",
    "hence @xmath70  has at most @xmath87 edges in total .",
    "moreover , no leaf edge of @xmath0 is in two paths in @xmath70 .",
    "thus @xmath70  has at most @xmath69 edges in total .    to prove that the lower bound , let @xmath88 be a subdivision of the @xmath89-leaf star .",
    "say @xmath88 has @xmath90 vertices .",
    "let @xmath91 be the leaves of @xmath88 .",
    "let @xmath0 be the tree obtained from @xmath88 by adding two leaves @xmath92 and @xmath93 adjacent to @xmath94 , for each @xmath95 .",
    "so @xmath0 has @xmath96 vertices and @xmath97 leaves .",
    "let @xmath70  be a set of @xmath89 paths that cover @xmath0 .",
    "each path in @xmath70  connects two leaves of @xmath0 . but",
    "no path @xmath98 is in @xmath70 ( otherwise @xmath99 ) .",
    "hence each edge in @xmath88 is in at least two paths in @xmath70 .",
    "it follows that @xmath70  has at least @xmath100 edges in total .",
    "we now sharpen theorem  [ thm : sizepathcovering ] for trees with an even number of leaves .",
    "let @xmath101 be the set of leaves in a tree @xmath0 .",
    "let @xmath16 be an edge in @xmath0 .",
    "let @xmath53 and @xmath76 be the components of @xmath102 that respectively contain @xmath5 and @xmath17 . then @xmath16 is said to be _ even  even _ if @xmath103 and @xmath104 are both even .",
    "let @xmath105 be the number of even  even edges in @xmath0 .",
    "[ thm : sizepathcoveringeven ] let @xmath0 be a tree with @xmath29 vertices and @xmath66 leaves , where @xmath66 is even",
    ". then @xmath0 has a covering by @xmath106 paths with @xmath107 edges in total , and this covering can be computed in @xmath108 time .",
    "moreover , every covering of @xmath0 by @xmath106 paths has at least @xmath107 edges .",
    "let @xmath4 be the multigraph obtained from @xmath0 by adding a second copy of each even  even edge in @xmath0 .",
    "consider a non - leaf vertex @xmath5 of @xmath0 .",
    "for each neighbour @xmath17 of @xmath5 , let @xmath76 be the component of @xmath109 that contains @xmath17 . since @xmath66 is even , there are an even number of neighbours @xmath17 of @xmath5 such that @xmath110 is odd .",
    "if @xmath110 is even then @xmath16 is doubled in @xmath4 .",
    "hence @xmath5 has even degree in @xmath4 .",
    "arbitrarily pair the edges incident to @xmath5 in @xmath4 . by following sequences of paired edges in @xmath4",
    "we obtain the desired covering of @xmath0 . since @xmath4 has @xmath107 edges , the total number of edges in the paths is @xmath107 .",
    "the numbers @xmath111 can be computed in a single traversal of the tree .",
    "the pairing step at each vertex @xmath5 can be implemented in @xmath112 time , which is @xmath108 in total . to output the paths ,",
    "choose a leaf vertex @xmath5 , find the maximal path @xmath68 starting at @xmath5 in @xmath4 , delete the edges in @xmath68 from @xmath4 , and repeat .",
    "this algorithm can be easily implemented in @xmath108 time .",
    "we now prove the ` moreover ' claim .",
    "let @xmath70  be a set of @xmath106 paths that cover @xmath0 .",
    "each leaf is in some path in @xmath70 , and each path in @xmath70  covers at most two leaves .",
    "thus each leaf is in exactly one path in @xmath70 , and the endpoints of each path in @xmath70  are leaves .",
    "consider an edge @xmath16 that appears in only one path @xmath113 .",
    "then @xmath68 connects a leaf in @xmath114 with a leaf in @xmath115 .",
    "every other path in @xmath70  is contained in @xmath53 or in @xmath76 .",
    "each such path has both endpoints in @xmath114 or both endpoints in @xmath116 .",
    "thus @xmath103 and @xmath117 are both odd .",
    "hence each even - even edge is in at least two paths in @xmath118 .",
    "therefore the total number of edges in @xmath70  is at least @xmath107 edges .",
    "we now show that there is a minimal covering of @xmath0 by paths with other properties .",
    "let @xmath0 be a tree with @xmath66 leaves .",
    "then @xmath0 has a covering by @xmath67 paths that have a vertex in common .",
    "let @xmath70  be a set of @xmath67 paths in @xmath0 that cover every leaf in @xmath0 , and with maximum total size .",
    "suppose that there are disjoint paths @xmath68 and @xmath119 in @xmath70 .",
    "let @xmath74 be a minimal path in @xmath0 between @xmath68 and @xmath119 .",
    "let @xmath5 and @xmath17 be the endpoints of @xmath74 , where @xmath5 is in @xmath68 and @xmath17 is in @xmath119 . thus @xmath68 is the union of two paths @xmath83 and @xmath84 whose intersection is @xmath5 .",
    "and @xmath119 is the union of two paths @xmath120 and @xmath121 whose intersection is @xmath17 .",
    "replace @xmath68 and @xmath119 in @xmath70  by @xmath122 and @xmath123 .",
    "we obtain a set of @xmath67 paths with greater total size than @xmath70 .",
    "this contradiction proves that the paths in @xmath70  are pairwise intersecting . by the helly property of subtrees of a tree , the paths in @xmath70  have a vertex @xmath5 in common .",
    "[ lem : covereveryedge ] if @xmath70  is a set of paths in a tree @xmath0 that cover every leaf , and some vertex @xmath5 is in every path in @xmath70 , then @xmath70  covers every edge .",
    "suppose on the contrary that some edge @xmath71 is not covered by @xmath70 .",
    "let @xmath124 and @xmath125 be the components of @xmath126 . without loss of generality ,",
    "@xmath5 is in @xmath124 .",
    "let @xmath68 be a path in @xmath70  that covers some leaf of @xmath0 contained in @xmath125 .",
    "then @xmath5 is not in @xmath68 .",
    "this contradiction proves that @xmath70  covers every edge .",
    "we now characterise those vertices @xmath5 for which there is a minimal covering by paths all containing @xmath5 .",
    "[ thm : centroids ] let @xmath0 be a tree with @xmath66 leaves .",
    "let @xmath5 be a vertex of @xmath0 .",
    "then @xmath0 has a covering by @xmath67 paths each containing @xmath5 if and only if @xmath127 for every component @xmath128 of @xmath109 .",
    "let @xmath4 be the graph with vertex set @xmath101 where two leaves @xmath59 and @xmath129 are adjacent in @xmath4 if and only if @xmath59 and @xmath129 are in distinct components of @xmath109 .",
    "thus @xmath4 is a complete @xmath2-partite graph , where @xmath130 .",
    "each colour class of @xmath4 consists of the leaves in @xmath101 that are in a single component of @xmath109 .",
    "each pair of leaves in distinct components of @xmath109 are the endpoints of a path through @xmath5 . in this way",
    ", each edge of @xmath4 corresponds to a leafy path in @xmath0 .",
    "the paths in a covering of @xmath0 can be assumed to be leafy paths .",
    "thus lemma  [ lem : covereveryedge ] implies that @xmath0 has a covering by @xmath67 paths each containing @xmath5 if and only @xmath4 contains a matching of @xmath131 edges , or equivalently if @xmath4 contains @xmath132 disjoint @xmath133-cliques .",
    "a result of @xcite ( see lemma  [ lem : cmg ] for a generalisation ) implies that this property holds if and only if each colour class in @xmath4 has at most @xmath67 vertices , which is equivalent to saying that @xmath134 for every component @xmath128 of @xmath109 .",
    "[ thm : centroidpath ] let @xmath0 be a tree with @xmath66 leaves .",
    "let @xmath135 be the set of vertices @xmath5 in @xmath0 such that @xmath0 has a covering by @xmath67 paths each containing @xmath5 .",
    "then @xmath135 induces a non - empty path .",
    "moreover , every internal vertex has degree @xmath136 in @xmath0 , unless @xmath66 is odd , in which case @xmath135 may have exactly one internal vertex @xmath5 with degree exactly @xmath137 , and @xmath5 is the endpoint of a pendant path .",
    "let @xmath138 be the set of leaves in @xmath0 .",
    "let @xmath139 . by theorem  [ thm : centroids ]",
    ", the number of leaves of @xmath0 in each component of @xmath140 or of @xmath141 is at most @xmath67 .",
    "let @xmath5 be a vertex on the @xmath142-path in @xmath0 .",
    "if @xmath128 is a component of @xmath109 , then @xmath128 is contained in a component of @xmath140 or a component of @xmath141 .",
    "thus the number of leaves of @xmath0 in @xmath128 is at most @xmath67 . by theorem  [ thm : centroids ] ,",
    "hence @xmath144 $ ] is connected .",
    "suppose that @xmath135 contains a vertex @xmath5 with three neighbours @xmath145 in @xmath135 .",
    "let @xmath146 be the component of @xmath109 containing @xmath93 .",
    "without loss of generality , @xmath147 . thus @xmath148 .",
    "but @xmath149 is contained in a component of @xmath150 , implying @xmath151 by theorem  [ thm : centroids ] .",
    "this contradiction proves that @xmath144 $ ] is a path .",
    "now suppose that @xmath135 has an internal vertex @xmath5 such that @xmath152 .",
    "let @xmath153 and @xmath17 be the neighbours of @xmath5 in @xmath135 .",
    "let @xmath154 be the set of leaves of @xmath0 in the component of @xmath155 that contains @xmath153 .",
    "let @xmath156 be the set of leaves of @xmath0 in the component of @xmath157 that contains @xmath17 .",
    "let @xmath158 be the number of leaves of @xmath0 in the component of @xmath159 that contains @xmath5 .",
    "thus @xmath160 .",
    "since @xmath152 , we have @xmath161 . without loss of generality , @xmath162 .",
    "thus @xmath163 , implying @xmath164 . hence @xmath165 .",
    "since @xmath166 is contained in a component of @xmath140 , by theorem  [ thm : centroids ] , @xmath167 , which is a contradiction if @xmath66 is even . if @xmath66 is odd then @xmath168 , and by a similar agument , @xmath5 is the only internal vertex of @xmath135 with degree at least @xmath137 in @xmath0 , and @xmath5 is the endpoint of a pendant path .",
    "theorem  [ thm : centroidpath ] says that the set of vertices @xmath5 for which @xmath0 has a minimal covering by paths each containing @xmath5 is somewhat like the centroid of @xmath0 , where we measure the ` weight ' of a component of @xmath109 by the number of leaves in it rather than the number of vertices .    finally in this section , we consider the problem of covering a given tree with a small number of subtrees , each with at most @xmath2 leaves .",
    "covering by paths corresponds to the @xmath23 case .",
    "the next result thus generalises theorem  [ thm : akg ] ( and with a completely different proof ) .",
    "[ thm : fewleaves ] for every integer @xmath1 and for every tree @xmath0 with @xmath66 leaves , the minimum number of subtrees , each with at most @xmath2 leaves , that cover @xmath0 is @xmath169 .    the lower bound is immediate .",
    "we prove the upper bound by induction on @xmath66 .",
    "clearly we can assume that @xmath0 has no vertex of degree @xmath136 .",
    "for @xmath170 , let @xmath171 $ ] denote the subtree of @xmath0 consisting of the union of all leafy paths in @xmath0 whose endpoints are both in @xmath39 .",
    "note that @xmath171 $ ] has @xmath172 leaves .",
    "let @xmath51 be the set of vertices of @xmath0 that have degree at least @xmath137 and are adjacent to at least one leaf .",
    "first suppose that @xmath173 .",
    "for each of @xmath2 vertices @xmath174 , choose one leaf incident to @xmath59 .",
    "we obtain a set @xmath175 of @xmath2 leaves of @xmath0 , such that no two vertices in @xmath175 have a common neighbour ( in @xmath51 ) .",
    "since vertices in @xmath51 have degree at least @xmath137 , @xmath176 is a tree with @xmath177 leaves . by induction",
    ", there is a covering of @xmath176 by @xmath178 subtrees , each with at most @xmath2 leaves . with @xmath179 $ ] ,",
    "we obtain the desired covering of @xmath0 ( since every edge in @xmath180 is adjacent to a vertex in @xmath175 , and is thus in @xmath179 $ ] ) .",
    "now assume that @xmath181 .",
    "if @xmath182 , then the result is trivial .",
    "otherwise @xmath183 .",
    "let @xmath175 be a set of @xmath2 leaves , such that each vertex in @xmath51 is adjacent to at least one leaf in @xmath175 .",
    "since @xmath184=t$ ] and every leaf has a neighbour in common with some leaf in @xmath175 , every non - leaf edge of @xmath0 is in @xmath179 $ ] .",
    "arbitrarily partition the @xmath177 leaves in @xmath185 into sets @xmath186 such that each @xmath187 . hence @xmath188:0\\leq",
    "i\\leq    { \\ensuremath{\\big\\lceil\\frac{\\ell}{d}\\big\\rceil}}-1\\}$ ] is the desired covering of @xmath0 .",
    "[ sec : treecovering ] this section describes a polynomial time algorithm to determine a minimum covering of a tree @xmath0 by degree-@xmath2 subtrees . since",
    "a subtree is degree-2 if and only if it is a path , the results in this section with @xmath23 generalise some of the results from section  [ sec : paths ]",
    ".    it will be convenient to consider the following more general scenario .",
    "let @xmath4 be a connected graph .",
    "a _ binding function _ of @xmath4 is a function @xmath189 .",
    "a subgraph @xmath51 of @xmath4 is _ @xmath190-bound _ if @xmath191 for every vertex @xmath5 of @xmath51 .",
    "a covering @xmath192  of @xmath4 is _ degree-@xmath190 _ if every subgraph @xmath193 is @xmath190-bound . for an integer @xmath1 , a _",
    "@xmath2-covering _ of @xmath4 is a degree-@xmath190 covering of @xmath4 , where @xmath194 for each vertex @xmath5 of @xmath4 .",
    "let @xmath195 be the minimum cardinality of a degree-@xmath190 covering of @xmath4 .",
    "an @xmath190-bound subgraph @xmath51 of @xmath4 is _ @xmath190-maximal _ if no edge of @xmath196 can be added to @xmath51 to obtain a new @xmath190-bound subgraph .",
    "this section describes a polynomial time algorithm to determine @xmath197 and the corresponding degree-@xmath190 covering for any given tree @xmath0 and binding function @xmath190 .",
    "observe that a subtree @xmath51 of @xmath0 is @xmath190-maximal if and only if @xmath198 for every vertex @xmath5 of @xmath51 .",
    "in particular , @xmath199 is a leaf of @xmath51 if and only if @xmath5 is a leaf of @xmath0 .",
    "[ lem : split ] let @xmath5 be a vertex of a non - trivial connected graph @xmath4",
    ". then @xmath4 contains connected subgraphs @xmath200 and @xmath201 such that @xmath202 and @xmath203 and @xmath204 and @xmath205 .",
    "first suppose there is a bridge edge @xmath16 incident to @xmath5 .",
    "let @xmath206 be the connected component of @xmath207 that contains @xmath17 .",
    "then @xmath208 $ ] and @xmath209 satisfy the claim .",
    "now assume that no edge incident to @xmath5 is a bridge .",
    "let @xmath16 be an edge incident to @xmath5 . then @xmath210 $ ] and @xmath211 satisfy the claim .",
    "[ lem : growinggraph ] let @xmath190 be a binding function of a connected graph @xmath4 .",
    "let @xmath212 .",
    "then @xmath4 has a degree-@xmath190 covering by @xmath213 @xmath190-maximal subgraphs that are pairwise intersecting .",
    "let @xmath214 be a degree-@xmath190 covering such that @xmath215 is maximum .",
    "then each @xmath216 is non - trivial and @xmath190-maximal .",
    "suppose on the contrary that @xmath217 for some @xmath218 .",
    "let @xmath68 be a shortest path between @xmath216 and @xmath219 in @xmath4 , where @xmath220 and @xmath221 .    by lemma  [ lem : split ]",
    ", @xmath216 contains connected subgraphs @xmath222 and @xmath223 such that @xmath224 and @xmath225 , and @xmath226 and @xmath227 .",
    "similarly , @xmath219 contains connected subgraphs @xmath228 and @xmath229 such that @xmath230 and @xmath231 , and @xmath232 and @xmath233 .",
    "observe that @xmath234 and @xmath235 are @xmath190-bound subgraphs of @xmath4 ( since the degree of @xmath5 in each subgraph is at most @xmath236 , the degree of @xmath17 in each subgraph is at most @xmath237 , and for each internal vertex @xmath238 in @xmath68 , the degree of @xmath238 in each subgraph is at most @xmath239 ) . since @xmath224 and @xmath240 ,",
    "replacing @xmath216 and @xmath219 by @xmath234 and @xmath235 gives a degree-@xmath190 covering of @xmath4 with greater total size than @xmath241 .",
    "this contradiction proves that @xmath242 for @xmath243 .    by the helly property of subtrees of a tree ,",
    "lemma  [ lem : growinggraph ] implies :    [ lem : growing ] let @xmath190 be a binding function of a tree @xmath0 .",
    "let @xmath244 .",
    "then @xmath4 has a degree-@xmath190 covering by @xmath213 @xmath190-maximal subtrees that have a vertex in common .",
    "lemma  [ lem : growing ] implies that to find a minimum degree-@xmath190 covering of a tree , it suffices to consider degree-@xmath190 coverings that have a common vertex in every subtree .",
    "it is therefore convenient to consider the following more general covering problem .",
    "recall that in a rooted tree @xmath0 the edges are oriented away from the root vertex @xmath14 .",
    "a _ rooted covering _ of @xmath0 is a covering @xmath192  of @xmath0 such that @xmath14 is in every subtree in @xmath192 .",
    "a _ binding function _ of @xmath0 is a function @xmath245 .",
    "a rooted covering @xmath192 of @xmath0 is _ outdegree-@xmath190 _ if @xmath246 for every vertex @xmath5 in every subtree @xmath247 . for an integer @xmath248 , a _",
    "degree-@xmath2 _ rooted covering of @xmath0 is an outdegree-@xmath190 rooted covering of @xmath0 , where @xmath194 for each vertex @xmath5 of @xmath0 .",
    "let @xmath249 be the minimum cardinality of an outdegree-@xmath190 rooted covering of @xmath0 .",
    "for a vertex @xmath14 of an unrooted tree",
    "@xmath0 , let @xmath250 be the minimum cardinality of an outdegree-@xmath190 rooted covering of the rooted tree @xmath18 .",
    "we now show that the problem of determining a covering of an unrooted tree can be reduced to the case of rooted trees .",
    "[ lem : nonrootedmincover ] let @xmath190 be a binding function of a ( non - rooted ) tree @xmath0 .",
    "then @xmath251 where @xmath252 is the binding function of @xmath18 defined by @xmath253 and @xmath254 for every vertex @xmath59 of @xmath255 .",
    "first we prove the lower bound on @xmath197 . by lemma  [ lem : growing ] there is a degree-@xmath190 covering @xmath192  of @xmath0 with some vertex @xmath14 in every subtree of @xmath192 , and @xmath256 .",
    "consider a subtree @xmath193 .",
    "every vertex @xmath257 in the rooted subtree @xmath258 has outdegree at most @xmath259 ( since the incoming edge incident to @xmath5 must in @xmath51 ) .",
    "thus @xmath5 has outdegree at most @xmath260 in @xmath258 .",
    "the outdegree of @xmath14 in @xmath258 equals the degree of @xmath14 in @xmath51 , which is at most @xmath261 .",
    "hence @xmath192  is a rooted @xmath252-covering of @xmath18 , implying @xmath262    now we prove the upper bound on @xmath197 .",
    "let @xmath14 be a vertex in @xmath0 that minimises @xmath263 .",
    "thus there is a rooted @xmath252-covering @xmath192  of @xmath18 .",
    "consider a rooted subtree @xmath258 of @xmath264 .",
    "then @xmath14 is in @xmath51 , and @xmath265 . for every vertex @xmath5 of @xmath266",
    ", we have @xmath267 .",
    "it follows that @xmath192  is a degree-@xmath190 covering of @xmath0 .",
    "hence @xmath268 as desired .",
    "the next lemma determines @xmath249 precisely .",
    "[ lem : rootedmincover ] let @xmath190 be a binding function of a rooted tree @xmath18 .",
    "let @xmath269 be the neighbours of @xmath14 in @xmath0 .",
    "for @xmath270 , let @xmath146 be the component subtree of @xmath255 that contains @xmath94 .",
    "let @xmath271 , where @xmath190 is restricted to @xmath272 .",
    "then @xmath273    we first prove the upper bound on @xmath250 . for @xmath270 ,",
    "let @xmath274 be a degree-@xmath190 covering of @xmath146 with @xmath275 .",
    "let @xmath4 be the graph with vertex set @xmath276 that is , there is one vertex in @xmath4 for each subtree in each covering @xmath274 .",
    "two vertices in @xmath4 are adjacent if and only if they come from distinct @xmath274 .",
    "thus @xmath4 is isomorphic to the complete @xmath277-partite graph @xmath278 .    by lemma  [ lem : cmg ] , there is a partition @xmath279  of @xmath280 into @xmath281 @xmath282-cliques in @xmath4 .",
    "each @xmath283-clique @xmath284 corresponds to a set of @xmath283 subtrees from distinct coverings @xmath274 .",
    "let @xmath285 be the subtree of @xmath0 induced by the union of the subtrees corresponding to @xmath135 plus the vertex @xmath14 .",
    "thus @xmath14 has outdegree @xmath286 in @xmath285 . since each @xmath274 is outdegree-@xmath190 , every vertex @xmath287 in @xmath285 has outdegree at most @xmath288 in @xmath285 .",
    "thus @xmath289 is an outdegree-@xmath190 covering of @xmath18 .",
    "hence @xmath290 , as desired .",
    "we now prove the lower bound on @xmath250 .",
    "let @xmath192  be an outdegree-@xmath190 covering of @xmath18 with @xmath291 .",
    "let @xmath292be the union , taken over all @xmath193 , of the set of component subtrees of @xmath266 .",
    "each subtree in @xmath292  is contained within exactly one component subtree @xmath146 of @xmath255 .",
    "for @xmath270 , let @xmath293 be the set of subtrees in @xmath292  that are contained within @xmath146 .",
    "we claim that @xmath293 is an outdegree-@xmath190 covering of @xmath294 .",
    "every edge of @xmath146 is in some subtree of @xmath293 . for every vertex @xmath59 in @xmath146",
    ", we have @xmath295 ( since the edge @xmath296 is incoming at @xmath94 ) .",
    "thus @xmath59 has outdegree at most @xmath288 in every subtree in @xmath293 .",
    "thus @xmath293 is an outdegree-@xmath190 covering of @xmath294 .",
    "hence @xmath297 .",
    "let @xmath4 be the graph with vertex set @xmath298 , where two subtrees in @xmath292  are adjacent in @xmath4 if and only if they are in distinct @xmath293 .",
    "hence @xmath4 contains the complete @xmath277-partite graph @xmath299 as a subgraph . for each @xmath193",
    ", distinct components of @xmath266 are in distinct components of @xmath255 .",
    "thus the components of @xmath266 are a @xmath283-clique in @xmath4 , where @xmath300 , which is at most @xmath301 .",
    "hence @xmath192  defines a partition of @xmath280 into @xmath302 cliques each with at most @xmath301 vertices . by lemma  [ lem : cmg ] , @xmath303    [ thm : algrootedmincover ]",
    "there is a @xmath304-time algorithm that , given a binding function @xmath190 of a rooted @xmath29-vertex tree @xmath0 , computes @xmath249 .",
    "lemma  [ lem : rootedmincover ] gives a recursive algorithm to compute @xmath305(t ) .",
    "let @xmath306 be the time complexity of this algorithm for a tree @xmath0 with @xmath307 edges .",
    "we claim that @xmath308 for some constant @xmath309 .",
    "( all logarithms are binary . )",
    "let @xmath14 be the root of @xmath0 .",
    "let @xmath269 be the neighbours of @xmath14 in @xmath0 .",
    "let @xmath146 be the component subtree of @xmath255 that contains @xmath94 . by induction ,",
    "@xmath310 can be computed in @xmath311 time , where @xmath146 has @xmath312 edges . by lemma  [ lem : rootedmincover ]",
    ", @xmath249 can be computed by @xmath313 arithmetic steps , each operating on integers at most @xmath307 .",
    "this computation takes @xmath314 time .",
    "thus @xmath315 the result follows since @xmath316 .    a proof analogous to that of theorem  [ thm : algrootedmincover ] , but also using lemma  [ lem : cmg ] , gives :    [ thm : algrootedmincovercover ] there is a @xmath317-time algorithm that , given a binding function @xmath190 of a rooted @xmath29-vertex tree @xmath0 , computes @xmath249 and the corresponding covering of @xmath0 by degree-@xmath190 subtrees .",
    "we now have a polynomial time algorithm for the unrooted covering problem .",
    "[ thm : algmincover ] there is a @xmath318-time algorithm that , given a binding function @xmath190 of an @xmath29-vertex tree @xmath0 , computes @xmath197 and the corresponding covering of @xmath0 by degree-@xmath190 subtrees .    for each vertex @xmath14 of @xmath0 , compute @xmath263 , where @xmath252 is the binding function of @xmath18 defined by @xmath253 and @xmath254 for every vertex @xmath59 of @xmath255 . by theorem  [ thm : algrootedmincover ] ,",
    "@xmath263 can be computed to @xmath304 time .",
    "thus this step takes @xmath318 time .",
    "let @xmath14 be the vertex that minimises @xmath263 .",
    "this computation takes @xmath304 time . by lemma  [ lem : nonrootedmincover ] , @xmath319 . by theorem  [ thm : algrootedmincovercover ] , the degree-@xmath252 covering of @xmath18 can be computed in @xmath317 time . by lemma  [ lem : nonrootedmincover ]",
    ", this is an optimal degree-@xmath190 covering of @xmath0 .",
    "the total time complexity is @xmath318 .",
    "[ sec : completetrees ] this section applies the general methods from the previous section to determine minimum coverings of complete trees . as illustrated in figure  [ fig : completetrees ] , for integers",
    "@xmath320 and @xmath321 , the _ complete @xmath322-ary rooted tree with height @xmath323 _ , denoted by @xmath324 , is the rooted tree such that every non - leaf vertex has out - degree @xmath322 , and the distance between the root and every leaf equals @xmath323 . for convenience ,",
    "define @xmath325 . for integers @xmath326 and @xmath321 ,",
    "the ( non - rooted ) _",
    "complete @xmath322-ary tree with height @xmath323 _ , denoted by @xmath327 , is the ( non - rooted ) tree in which every non - leaf vertex has degree @xmath322 , and for some vertex @xmath14 , the distance between @xmath14 and every leaf equals @xmath323 . define @xmath328 .",
    "( a ) @xmath329 and ( b ) @xmath330 . ]    consider the following recursively defined function . for every real number @xmath331 , let @xmath332 , and for every integer @xmath333 , let @xmath334 .",
    "thus @xmath335 with equality whenever @xmath59 is an integer . as an example when equality does not hold , observe that @xmath336 and @xmath337 and @xmath338 . on the other hand , @xmath339 is never far from @xmath340 , since @xmath341 implies that @xmath342    [ prop : rootedcompletetree ] for all integers @xmath343 and @xmath344 , @xmath345    we proceed by induction on @xmath323 .",
    "trivially , @xmath346 now assume that @xmath347 .",
    "let @xmath14 be the root of @xmath324 .",
    "observe that each of the @xmath322 components of @xmath348 is isomorphic to @xmath349 , rooted at the neighbour of @xmath14 . by lemma  [ lem : rootedmincover ] , @xmath350 by induction and since @xmath351 , @xmath352 as desired .",
    "[ prop : nonrootedcompletetree ] for all integers @xmath353 and @xmath347 , @xmath354    by lemma  [ lem : nonrootedmincover ] , @xmath355 where @xmath252 is the binding function of @xmath327 defined by @xmath356 and @xmath357 for every vertex @xmath358 .",
    "note that @xmath252 depends on the choice of @xmath14 .",
    "@xmath327 has a vertex @xmath5 such that each component of @xmath359 , rooted at the neighbour of @xmath5 , is @xmath360 .",
    "first we compute @xmath361 .",
    "later we prove that @xmath362 minimises @xmath363 in .",
    "each component of @xmath359 , rooted at the neighbour of @xmath5 , is isomorphic to @xmath360 . by lemma  [ lem : rootedmincover ] , @xmath364 since @xmath365 and @xmath366 for every vertex @xmath367 , @xmath368    we now prove that @xmath369 minimises @xmath363 in .",
    "let @xmath370 be a vertex in @xmath327 .",
    "then some component of @xmath371 , rooted at the neighbour of @xmath17 , contains @xmath372 rooted at @xmath5 .",
    "thus with @xmath252 defined with respect to @xmath17 , @xmath373 hence @xmath369 minimises @xmath363 in .",
    "thus @xmath374 by proposition  [ prop : rootedcompletetree ] , @xmath375 thus @xmath376 as desired .",
    "[ sec : caterpillars ] consider the problem of covering a given tree with subtrees of bounded degree .",
    "since a tree with maximum degree @xmath2 has at least @xmath2 leaves , theorem  [ thm : fewleaves ] implies that for every integer @xmath1 , every tree @xmath0 with @xmath66 leaves can be covered by @xmath169 degree-@xmath2 subtrees .",
    "however , the number of leaves can be very large , even in trees that can be covered by a few subtrees of bounded degree , as we now show for caterpillars .",
    "[ thm : caterpillar ] for all integers @xmath377 , every degree-@xmath322 caterpillar @xmath0 has a covering by @xmath378 degree-@xmath2 subtrees .",
    "conversely , for all integers @xmath377 , there are infinitely many degree-@xmath322 caterpillars @xmath0 such that at least @xmath378 subtrees are needed in every covering of @xmath0 by degree-@xmath2 subtrees .",
    "let @xmath379 .",
    "we first prove that every degree-@xmath322 caterpillar @xmath0 has a covering by @xmath380 degree-@xmath2 subtrees .",
    "let @xmath138 be the set of leaves of @xmath0 .",
    "let @xmath68 be the path @xmath381 .",
    "consider a vertex @xmath59 of @xmath68 .",
    "thus @xmath382 .",
    "as illustrated in figure  [ fig : caterpillar ] , partition the at most @xmath383 leaf edges incident to @xmath59 into @xmath384 sets each with at most @xmath385 elements . since @xmath386",
    ", we have partitioned the leaf edges of @xmath0 into @xmath380 sets , such that the union of @xmath68 and any one set is a degree-@xmath2 subtree of @xmath0 .",
    "every edge is in at least one such subtree .    covering a degree-@xmath387 caterpillar by two degree-@xmath388 subtrees .",
    "]    now we show that this bound is best possible . for @xmath389 ,",
    "let @xmath390 be the caterpillar obtained from the path @xmath391 by adding @xmath392 leaves incident to @xmath94 for @xmath393 .",
    "thus each such vertex @xmath94 has degree @xmath322 .",
    "every other vertex is a leaf , and @xmath390 is a degree-@xmath322 caterpillar .",
    "suppose on the contrary that @xmath390 can be covered by @xmath394 degree-@xmath2 subtrees @xmath395 .",
    "say a subtree @xmath396 _ hits _ a vertex @xmath94 if at least @xmath42 leaf edges incident to @xmath94 are in @xmath396 .",
    "if some vertex @xmath94 is not hit , then each subtree contains at most @xmath397 leaf edges incident to @xmath94 , which is not possible since @xmath398 .",
    "thus each vertex @xmath94 is hit by at least one subtree .",
    "hence the total number of hits is at least @xmath29 .",
    "since @xmath399 , some subtree @xmath396 hits at least three vertices , say @xmath400 where @xmath401 .",
    "since @xmath396 is connected , @xmath396 contains the path @xmath402 .",
    "thus @xmath403 has degree at least @xmath404 in @xmath396 , which contradicts the assumption that @xmath396 has maximum degree at most @xmath2 .",
    "[ sec : rootedpathwidth ] while section  [ sec : treecovering ] describes an algorithm for computing minimal coverings of a given tree by degree-@xmath2 subtrees , this section and the next considers the following question : which classes of trees have coverings by a bounded number of degree-@xmath2 subtree ?",
    "the results in section  [ sec : caterpillars ] say that caterpillars are such a class . to answer this question more fully",
    ", the concept of pathwidth will be important .",
    "pathwidth is an important parameter in structural and algorithmic graph theory , and can be defined in many ways .",
    "for forests we have the following recursive definition , which is easily seen to be equivalent to the standard definition in terms of path decompositions :    1 .",
    "the _ pathwidth _ of @xmath405 is @xmath13 , 2 .",
    "the _ pathwidth _ of a forest @xmath406 is the maximum pathwidth of a connected component of @xmath406 , 3 .",
    "the _ pathwidth _ of a tree @xmath0 is the minimum @xmath283 such that there exists a path @xmath68 of @xmath0 and the pathwidth of @xmath407 is at most @xmath408 .",
    "caterpillars are precisely the trees of pathwidth @xmath15 . in general , the pathwidth of an @xmath29-vertex tree can be computed in @xmath409 time @xcite , and is at most @xmath410 @xcite .",
    "to generalise theorem  [ thm : caterpillar ] for graphs of given pathwidth , we first consider a rooted variant of the problem in section  [ sec : rootedpathwidth ] , and then we consider the unrooted version in section  [ sec : unrootedpathwidth ] .",
    "we now consider rooted coverings of rooted trees with given pathwidth , where ( for our purposes ) the _ pathwidth _ of a directed graph is defined to be the pathwidth of the underlying undirected graph .",
    "for all integers @xmath411 and @xmath412 , let @xmath413 be the maximum of @xmath414 , where @xmath0 is an outdegree-@xmath322 rooted tree with pathwidth @xmath283 .",
    "that is , @xmath413 is the minimum integer such that every outdegree-@xmath322 rooted tree with pathwidth @xmath283 has an outdegree-@xmath2 rooted covering with @xmath413 subtrees .",
    "below we show that @xmath413 is finite . in particular , we prove that @xmath413 satisfies the following recurrence , thus determining @xmath413 precisely .",
    "[ thm : rootedpathwidth ] for every integer @xmath377 , @xmath415 and for every integer @xmath333 , if @xmath416 then @xmath417 and if @xmath418 and @xmath419 then @xmath420 and if @xmath421 then , @xmath422    first observe that @xmath423 since a tree covers itself , and that @xmath424 since the only tree with pathwidth @xmath13 is @xmath405 .",
    "we now prove the upper bound on @xmath413 , which indeed shows that @xmath413 is finite and well defined .",
    "the next lemma will facilitate our inductive proof .",
    "[ lem : rootedpath ] for every vertex @xmath14 of a tree @xmath0 ( with at least one edge ) there is a degree-@xmath137 subtree @xmath425 of @xmath0 such that :    * the pathwidth of @xmath426 is less than the pathwidth of @xmath0 , * @xmath14 is in @xmath425 and @xmath427 , * there is at most one vertex of @xmath425 with degree @xmath137 , and * if there is a vertex of @xmath425 with degree @xmath137 , then @xmath428 .    by definition",
    ", there is a path @xmath68 of @xmath0 , such that the pathwidth of @xmath407 is less than the pathwidth of @xmath0 .",
    "extend @xmath68 so that it has at least one edge .",
    "let @xmath119 be the ( possibly empty ) path from @xmath14 to @xmath68 in @xmath0 .",
    "it is easily verified that @xmath429 satisfies the lemma .    to prove an upper bound on @xmath413 we construct the desired rooted covering of a given outdegree-@xmath322 rooted tree with pathwidth @xmath283 .",
    "we proceed by induction on @xmath430 . for the base case ,",
    "suppose that @xmath431",
    ". then @xmath424 and @xmath432 .",
    "thus the theorem claims that @xmath433 , which is proved in theorem  [ thm : caterpillar ] .",
    "now assume that @xmath434 .",
    "let @xmath0 be an outdegree-@xmath322 rooted tree with pathwidth @xmath283 .",
    "let @xmath14 be the root of @xmath0 .",
    "by lemma  [ lem : rootedpath ] , there is a degree-@xmath137 subtree @xmath425 of @xmath0 such that the pathwidth of @xmath426 is at most @xmath408 , @xmath14 is in @xmath425 with degree @xmath15 or @xmath136 , there is at most one vertex of @xmath425 with degree @xmath137 , and if there is a vertex of @xmath425 with degree @xmath137 , then @xmath428 .",
    "thus , if @xmath425 inherits the orientation of @xmath0 , then @xmath425 has outdegree at most @xmath136 , and at most one vertex in @xmath425 has outdegree @xmath136 . as a shorthand ,",
    "define @xmath435    for each vertex @xmath5 in @xmath425 , let @xmath53 be the component of @xmath436 that contains @xmath5 . thus @xmath53 is rooted at @xmath5 ( in the orientation of @xmath0 ) , as illustrated in figure  [ fig : rootedpathwidth ] .",
    "construction in the proof of the upper bound in theorem  [ thm : rootedpathwidth ] . ]",
    "we now determine a rooted covering of @xmath53 . for each neighbour @xmath17 of @xmath5 in @xmath53 ,",
    "the component of @xmath437 that contains @xmath17 has pathwidth at most @xmath408 .",
    "thus by induction this component ( rooted at @xmath17 ) has a rooted covering by @xmath438 subtrees .",
    "@xmath439 : * let @xmath190 be the binding function of @xmath53 defined by @xmath440 for every vertex @xmath59 in @xmath53 . by lemma  [ lem : rootedmincover ] , @xmath53 has an outdegree-@xmath2 rooted covering @xmath441 , where @xmath442",
    "* case 1 . @xmath443 : * let @xmath190 be the binding function of @xmath53 defined by @xmath444 and @xmath440 for every vertex @xmath59 in @xmath437 . since @xmath5 has outdegree at most @xmath445 in @xmath53 , by lemma  [ lem : rootedmincover ] applied to @xmath190 , @xmath53 has an outdegree-@xmath2 rooted covering @xmath441 , such that @xmath5 has outdegree at most @xmath42 in each subtree in @xmath441 , and @xmath446    * case 2 .",
    "@xmath447 : * by induction , each component of @xmath437 , rooted at the neighbour of @xmath5 , has an outdegree-@xmath2 rooted covering consisting of @xmath438 subtrees .",
    "let @xmath4 be the graph with one vertex for each subtree in the coverings of the components of @xmath437 , where two vertices are adjacent if the corresponding subtrees come from distinct components . since @xmath5 has outdegree at most @xmath392 in @xmath53 , @xmath4 is isomorphic to a subgraph of the turan @xmath448-partite graph with @xmath438 vertices in each colour class",
    ". apply corollary  [ cor : cmgcmg ] with @xmath449 and @xmath450 and @xmath451 and @xmath452 .",
    "( observe that @xmath421 implies that @xmath453 , and thus , corollary  [ cor : cmgcmg ] is applicable . )",
    "hence there is a partition of @xmath280 into @xmath454 @xmath455-cliques and @xmath456 @xmath457-cliques .",
    "since @xmath351 we have @xmath458 . thus @xmath459 . that is ,",
    "hence @xmath461 , implying @xmath462 .",
    "hence @xmath463 .",
    "therefore there is a partition of @xmath280 into @xmath454 @xmath455-cliques and @xmath464 @xmath457-cliques . using the method in lemma  [ lem : rootedmincover ]",
    ", it follows that @xmath53 has an outdegree-@xmath2 rooted covering @xmath465 , such that @xmath466 and @xmath5 has outdegree @xmath397 in each subtree in @xmath441 ; and @xmath467 and @xmath5 has outdegree at most @xmath2 in each subtree in @xmath468 .    note that @xmath466 for every vertex @xmath5 of @xmath425 . for @xmath469 ,",
    "let @xmath470 be the union , taken over every vertex @xmath5 in @xmath425 , of the @xmath471-th subtree in @xmath441 .",
    "observe that in the construction in case ( @xmath472 ) , @xmath473 and @xmath5 has outdegree at most @xmath474 in each subtree in @xmath441 .",
    "thus @xmath475 has outdegree at most @xmath2 , and @xmath475 contains @xmath14 .",
    "suppose that @xmath447 for some vertex @xmath5 in @xmath425 .",
    "let @xmath119 be the directed path from @xmath14 to @xmath5 in @xmath425 .",
    "( note that it is possible that @xmath362 . )  then for every subtree @xmath476 , @xmath477 has outdegree at most @xmath2 ( since no outgoing edges incident to @xmath5 are in @xmath119 , and every other vertex in @xmath119 has outdegree @xmath15 in @xmath477 , and @xmath478 . ) observe that every edge of @xmath0 is in some subtree @xmath475 ( where @xmath479 ) or some subtree @xmath477 ( where @xmath476 and @xmath447 ) .",
    "hence @xmath480 is an outdegree-@xmath2 rooted covering of @xmath0 .",
    "therefore @xmath481 as desired .",
    "we proceed by induction on @xmath482 .",
    "let @xmath483 .",
    "for the base case , suppose that @xmath431",
    ". then @xmath484 and @xmath432 .",
    "thus the theorem claims that @xmath485 , which is proved in theorem  [ thm : caterpillar ] .",
    "now assume that @xmath434 .",
    "let @xmath0 be an outdegree-@xmath322 rooted tree with pathwidth @xmath283 .",
    "let @xmath14 be the root of @xmath0 . by definition",
    ", there is an ( undirected ) path @xmath68 in @xmath0 , such that the pathwidth of @xmath407 is less than @xmath283 .",
    "let @xmath119 be the shortest path in @xmath0 from @xmath14 to a vertex in @xmath68 .",
    "let @xmath486 .",
    "let @xmath213 be the vertex in @xmath487 .",
    "note that it is possible that @xmath488 , in which case @xmath489 .",
    "let @xmath83 and @xmath84 be the subpaths of @xmath68 such that @xmath490 and @xmath491 .",
    "each @xmath73 is a directed path starting at @xmath213 .",
    "let @xmath492 for @xmath493 .",
    "each @xmath494 is a directed path starting at @xmath14 .    for each vertex @xmath5 in @xmath425",
    ", let @xmath53 be the component of @xmath436 that contains @xmath5 .",
    "thus @xmath53 is rooted at @xmath5 ( in the orientation of @xmath0 ) .",
    "we now determine a rooted covering of @xmath53 . for each neighbour @xmath17 of @xmath5 in @xmath53 ,",
    "the component of @xmath437 that contains @xmath17 has pathwidth at most @xmath408 .",
    "thus by induction this component ( rooted at @xmath17 ) has a rooted covering by @xmath438 subtrees .",
    "let @xmath495 .",
    "define @xmath496 and @xmath497    it is easily verified that @xmath498 and @xmath499 and @xmath500 and @xmath501 .",
    "@xmath439 : * then @xmath502 for some @xmath493 , and @xmath5 has outdegree at most @xmath322 in @xmath53 . by lemma  [",
    "lem : rootedmincover ] , @xmath53 has an outdegree-@xmath2 rooted covering @xmath503 , where @xmath504 hence we can choose @xmath441 and @xmath505 so that @xmath506 and @xmath507 .    * case 1 .",
    "@xmath443 : * then @xmath502 for some @xmath493 , and @xmath5 has outdegree at most @xmath445 in @xmath53 . by lemma  [ lem : rootedmincover ]",
    ", @xmath53 has an outdegree-@xmath2 rooted covering @xmath503 , such that @xmath5 has outdegree at most @xmath42 in each subtree in @xmath503 , and @xmath508 hence we can choose @xmath441 and @xmath505 so that @xmath506 and @xmath507 .    * case 2 .",
    "@xmath509 : * by induction , each component of @xmath510 , rooted at the neighbour of @xmath213 , has an outdegree-@xmath2 rooted covering consisting of @xmath438 subtrees .",
    "let @xmath4 be the graph with one vertex for each subtree in the coverings of the components of @xmath510 , where two vertices are adjacent if the corresponding subtrees come from distinct components .",
    "since @xmath213 has outdegree at most @xmath392 in @xmath511 , @xmath4 is isomorphic to a subgraph of the turan @xmath448-partite graph with @xmath438 vertices in each colour class .",
    "apply corollary  [ cor : cmgcmg ] with @xmath512 and @xmath513 and @xmath514 and @xmath515 .",
    "( observe that @xmath418 implies that @xmath453 , and thus , corollary  [ cor : cmgcmg ] is applicable . )",
    "thus there is a partition of @xmath280 into @xmath516 @xmath517-cliques and @xmath518 @xmath519-cliques . since @xmath520",
    ", we have @xmath521 , implying @xmath522 thus @xmath523 hence there is a partition of @xmath280 into @xmath516 @xmath517-cliques and @xmath59 @xmath519-cliques . using the method in lemma  [ lem : rootedmincover ] , it follows that @xmath511 has an outdegree-@xmath2 rooted covering @xmath524 , such that @xmath525 and @xmath213 has outdegree at most @xmath42 in each subtree in @xmath526 ; and @xmath527 and @xmath213 has outdegree at most @xmath42 in each subtree in @xmath528 ; and @xmath529 and @xmath213 has outdegree at most @xmath397 in each subtree in @xmath530 .",
    "observe that @xmath506 for every vertex @xmath5 of @xmath425 .",
    "for @xmath531 , let @xmath532 be the union , taken over every vertex @xmath5 in @xmath425 , of the @xmath472-th subtree in @xmath441 .",
    "observe that in the construction in case ( @xmath66 ) , @xmath533 and @xmath5 has outdegree at most @xmath534 in each subtree in @xmath441 .",
    "thus @xmath535 has outdegree at most @xmath2 . by construction , @xmath535",
    "is connected and contains @xmath14 .    for @xmath493 ,",
    "observe that @xmath507 for every vertex @xmath5 of @xmath494 . for @xmath536 ,",
    "let @xmath537 be the union , taken over every vertex @xmath5 in @xmath494 , of the @xmath472-th subtree in @xmath505 .",
    "observe that for @xmath538 , in the construction in case ( @xmath66 ) , @xmath539 and @xmath5 has outdegree at most @xmath534 in each subtree in @xmath505 . in the construction in case 2 , @xmath540 and @xmath5 has outdegree at most @xmath42 in each subtree in @xmath505 .",
    "thus @xmath541 has outdegree at most @xmath2 . by construction , @xmath542 is connected and contains @xmath14 .",
    "observe that every edge of @xmath0 is in some subtree @xmath535 ( where @xmath543 ) or some subtree @xmath541 ( where @xmath493 and @xmath544 ) . hence @xmath545 is an outdegree-@xmath2 rooted covering of @xmath0 . therefore @xmath546 as desired .    to prove a lower bound on @xmath413 we construct an outdegree-@xmath322 rooted tree with pathwidth @xmath283 that requires many subtrees in every outdegree-@xmath2 covering .",
    "for all integers @xmath547 , where each @xmath548 , we construct a tree @xmath549 with the desired property .",
    "( this statement is well - defined since we have already proved that @xmath550 is bounded from above . )",
    "the number of vertices in @xmath549 increases with the @xmath551 .",
    "hence there are , in fact , infinitely many such trees .",
    "each tree has a nominated root vertex @xmath14 , which has out - degree @xmath322 .",
    "every non - leaf vertex has outdegree @xmath322 or @xmath445 .",
    "the tree @xmath549 is constructed recursively as follows , starting from the path @xmath552where @xmath553 . if @xmath431 then , add @xmath392 leaf vertices adjacent to @xmath554 , and for each vertex @xmath94 in @xmath68 with @xmath555 , add @xmath445 leaf vertices adjacent to @xmath94 .",
    "if @xmath434 then , connect @xmath554 to the root vertex in each of @xmath392 copies of @xmath556 , and for each vertex @xmath94 in @xmath68 with @xmath555 , connect @xmath94 to the root vertex in each of @xmath445 copies of @xmath556 .",
    "root @xmath549 at @xmath557 .",
    "thus @xmath558 and @xmath559 have outdegree @xmath445 , and every other vertex @xmath94 has outdegree @xmath322 . by construction , @xmath549 has pathwidth @xmath283 .    by the definition of @xmath438",
    ", @xmath549 has an outdegree-@xmath2 rooted covering @xmath560 , and @xmath14 is in each @xmath561 .",
    "we classify these subtrees depending on which edges in @xmath562 are incident to @xmath14 .",
    "let @xmath563 be the set of subtrees @xmath564 such that the edges @xmath565 and @xmath566 are both in @xmath562 .",
    "let @xmath567 be the set of subtrees @xmath564 such that the edge @xmath565 is the only edge incident to @xmath14 in @xmath568 .",
    "let @xmath569 be the set of subtrees @xmath564 such that the edge @xmath570 is the only edge incident to @xmath14 in @xmath562 .",
    "let @xmath571 be the set of subtrees @xmath564 such that the edges @xmath565 and @xmath566 are both not in @xmath562 .",
    "hence @xmath572    for each subtree @xmath564 , let @xmath573 be the component subtrees of @xmath574 .",
    "let @xmath575 each subtree @xmath576 is contained in exactly one copy of @xmath577 in @xmath549 .",
    "consider a copy @xmath128 of @xmath577 .",
    "say @xmath59 is the root of @xmath128 , and @xmath578 is the neighbour of @xmath59 in @xmath68 .",
    "we say that @xmath579 is the _ attachment point _ of @xmath128 and of each subtree @xmath580 that is contained in @xmath128 .",
    "since @xmath14 is in @xmath561 , the path between every vertex in @xmath581 and @xmath14 is in @xmath561 .",
    "this path includes @xmath59 , which is thus in each @xmath581 . since @xmath561 has outdegree at most @xmath2 , each @xmath581 has outdegree at most @xmath2 .",
    "thus the set of subtrees in @xmath279  that are contained in @xmath128 form an outdegree-@xmath2 rooted covering of @xmath128 .",
    "let @xmath582 .",
    "by induction , at least @xmath438 subtrees in @xmath279  are contained in @xmath128 .",
    "now partition the subtrees in @xmath279  according to their attachment point in @xmath68 .",
    "let @xmath583 be the set of subtrees in @xmath279  whose attachment point is @xmath554 .",
    "let @xmath584 be the set of subtrees in @xmath279  whose attachment point is @xmath94 for some @xmath393 .",
    "let @xmath585 be the set of subtrees in @xmath279  whose attachment point is @xmath94 for some @xmath586 .",
    "there are @xmath392 copies of @xmath577 that attach at @xmath554 , each of which contain at least @xmath438 subtrees in @xmath279 .",
    "thus @xmath587 . for each @xmath588 , since @xmath554 has outdegree @xmath136 in @xmath562 and outdegree at most @xmath2 in @xmath561 , there are at most @xmath397 component subtrees of @xmath589 that are in @xmath583 .",
    "similarly , for each @xmath590 , since @xmath554 has outdegree @xmath15 in @xmath562 , there are at most @xmath42 component subtrees of @xmath589 that are in @xmath583 .",
    "finally , for each @xmath591 , there are at most @xmath2 component subtrees of @xmath589 that are in @xmath583 .",
    "hence @xmath592    there are @xmath445 copies of @xmath577 that attach at @xmath94 for @xmath393 , each of which contain at least @xmath438 subtrees in @xmath279 .",
    "thus @xmath593 for each @xmath594 , the subtree consisting of those edges in @xmath561 whose source endpoint is in @xmath595 is an outdegree-@xmath2 caterpillar rooted at @xmath596 whose spine is contained in @xmath595 .",
    "every outdegree-@xmath2 caterpillar rooted at the endpoint of its spine and whose spine has at most @xmath29 vertices has at most @xmath597 leaves .",
    "thus there are at most @xmath597 component subtrees of @xmath589 that are in @xmath598 . for each @xmath599 ,",
    "no component subtrees of @xmath589 are in @xmath600 .",
    "thus by , @xmath601 hence @xmath602 by and since @xmath603 , @xmath604 thus @xmath605 by symmetry , @xmath606 observe that , and define an integer linear program with unknowns @xmath607 , @xmath608 , @xmath609 , @xmath610 .",
    "the solution of this integer linear program is given in lemma  [ lem : integerprogram ] , where @xmath611 since @xmath351 we have @xmath612 , and lemma  [ lem : integerprogram ] is applicable . equation   and lemma  [ lem : integerprogram ] imply that @xmath613 this complete the proof of the lower bound when @xmath421 .",
    "for @xmath418 the above analysis can be slightly improved as follows .",
    "observe that for each @xmath591 , there are at most @xmath42 component subtrees of @xmath589 that are in @xmath583 ( rather than @xmath2 component subtrees in the general case ) .",
    "hence can be strengthened to : @xmath614 now consider the integer linear program with unknowns @xmath615 that is defined in , and .",
    "the solution of this integer linear program is given in lemma  [ lem : anotherintegerprogram ] , where @xmath616 equation   and lemma  [ lem : anotherintegerprogram ] imply that @xmath617 as desired in the case that @xmath618 .",
    "this completes the proof of theorem  [ thm : rootedpathwidth ] . we can estimate the recurrence in theorem  [ thm : rootedpathwidth ] as follows .    for all integers @xmath619 and @xmath412 , @xmath620 with equality whenever @xmath621 .",
    "it is easily proved that @xmath622 for all integers @xmath623 . applying this observation twice",
    ", theorem  [ thm : rootedpathwidth ] implies that @xmath624 since @xmath424 , @xmath625 now assume that @xmath621",
    ". then @xmath626 and @xmath627 .",
    "( in fact , the converse holds . ) thus theorem  [ thm : rootedpathwidth ] implies that @xmath628 thus equality in holds since @xmath424 .",
    "[ sec : unrootedpathwidth ] this section extends the results in section  [ sec : rootedpathwidth ] to the unrooted setting .",
    "[ thm : pathwidth ] for all integers @xmath377 , every degree-@xmath322 tree @xmath0 with pathwidth @xmath283 satisfies @xmath629 , where @xmath630 moreover , there are infinitely many degree-@xmath322 trees @xmath0 with pathwidth @xmath283 such that @xmath631 .",
    "first we prove the upper bound .",
    "@xmath0 has a path @xmath68 such that @xmath407 has pathwidth @xmath408 .",
    "consider a vertex @xmath5 of @xmath68 .",
    "let @xmath53 be the subtree of @xmath632 that contains @xmath5 , where @xmath53 is rooted at @xmath5 .",
    "let @xmath190 be the binding function of @xmath53 defined by @xmath633 and @xmath634 for every other vertex @xmath59 .",
    "each component @xmath635 of @xmath437 , rooted at the neighbour of @xmath5 , has outdegree at most @xmath445 and pathwidth at most @xmath408 .",
    "thus @xmath636 .",
    "since @xmath5 has outdegree at most @xmath637 in @xmath53 , by lemma  [ lem : rootedmincover ] applied to @xmath190 , @xmath53 has an outdegree-@xmath638 rooted covering @xmath441 , such that @xmath5 has outdegree at most @xmath639 in each subtree in @xmath441 , and @xmath640 where the last inequality holds since @xmath641 . for @xmath642 , let @xmath470 be the union , taken over every vertex @xmath5 in @xmath68 , of the @xmath471-th subtree in @xmath441 ( if it exists ) .",
    "thus every vertex @xmath5 in @xmath68 has degree at most @xmath639 in @xmath470 , and @xmath5 has degree at most @xmath2 in @xmath643 . since every vertex not in @xmath68 has outdegree at most @xmath42 in each @xmath470 , every vertex not in @xmath68 has degree at most @xmath2 in each @xmath470 .",
    "every edge of @xmath0 is in some @xmath644 .",
    "hence @xmath645 is the desired degree-@xmath2 covering of @xmath0 .",
    "now we prove the lower bound .",
    "let @xmath51 be the outdegree-@xmath646 rooted tree with pathwidth @xmath408 , such that @xmath647 .",
    "( see the proof of the lower bound in theorem  [ thm : rootedpathwidth ] for the construction of @xmath51 . )",
    "let @xmath648 .",
    "let @xmath0 be the tree obtained from the path @xmath649 as follows . for each @xmath650",
    ", add @xmath392 copies of @xmath51 whose roots are adjacent to @xmath94 ; thus @xmath94 has degree @xmath322 .",
    "hence @xmath0 is a degree-@xmath322 tree with pathwidth @xmath283 .",
    "suppose on the contrary that @xmath0 can be covered by @xmath394 degree-@xmath2 subtrees .",
    "by lemma  [ lem : growing ] , @xmath0 has a degree-@xmath2 covering by @xmath394 degree-@xmath2 maximal subtrees @xmath395 that have a vertex @xmath14 in common .",
    "root @xmath0 at @xmath14 .",
    "define @xmath651 and @xmath634 for every other vertex @xmath59 .",
    "thus @xmath395 is a degree-@xmath190 covering of the rooted tree @xmath18 , and @xmath652 .",
    "lemma  [ lem : rootedmincover ] provides a recursive formula for @xmath250 , which implies ( by the symmetry of @xmath0 ) that without loss of generality , @xmath653 .",
    "in particular , for each copy of @xmath51 rooted at some vertex @xmath17 , every subtree in the induced covering of @xmath51 contains @xmath17 .",
    "fix @xmath650 .",
    "let @xmath654 be the set of @xmath392 edges in @xmath632 incident to @xmath94 .",
    "for each edge @xmath655 , at least @xmath438 of the subtrees @xmath395 intersect the copy of @xmath51 rooted at @xmath17 , and each such subtree contains @xmath17 .",
    "since @xmath656 and each such subtree @xmath396 is maximal , the edge @xmath657 is also in @xmath396 .",
    "thus @xmath658 .",
    "say a subtree @xmath396 _ hits _",
    "@xmath94 if @xmath659 . if @xmath94 is hit by no subtree , then @xmath660 for all @xmath472 , implying @xmath661 this is a contradiction since @xmath662 .",
    "thus @xmath94 is hit by at least one subtree .",
    "hence the total number of hits is at least @xmath663 .",
    "since @xmath664 , some subtree @xmath396 hits at least three vertices , say @xmath400 where @xmath665 . since @xmath396 is connected , @xmath396 contains the path @xmath402 .",
    "thus @xmath403 has degree at least @xmath404 in @xmath396 , which contradicts the assumption that @xmath396 has maximum degree at most @xmath2 .",
    "therefore at least @xmath380 subtrees are needed in every covering of @xmath0 by degree-@xmath2 subtrees .",
    "theorem  [ thm : pathwidth ] says that trees with bounded maximum degree and bounded pathwidth admit coverings by a bounded number of degree-@xmath2 subtrees . in the case of @xmath666 ,",
    "we now prove a converse result for a large class of trees .",
    "[ prop : pathwidthupperbound ] let @xmath0 be a tree in which every non - leaf vertex has degree at least @xmath388",
    ". then @xmath0 has pathwidth at most @xmath667 .",
    "we proceed by induction on @xmath668 .",
    "if @xmath669 then no vertex has degree at least 4 , and every non - leaf vertex has degree at least @xmath388 , implying @xmath670 , which has pathwidth @xmath15 .",
    "now assume that @xmath671 .",
    "fix a covering of @xmath0 by @xmath672 degree-3 subtrees @xmath673 .",
    "let @xmath674 .",
    "since @xmath124 has maximum degree at most @xmath137 , @xmath39 has maximum degree at most @xmath137 .",
    "suppose that @xmath675 for some vertex @xmath5 . by assumption , @xmath676 , implying there is an edge @xmath677 .",
    "since @xmath678 for some @xmath471 , we have @xmath679 , and @xmath146 is not degree-3 .",
    "this contradiction proves that @xmath680 for every vertex @xmath5 .",
    "since @xmath124 is connected , @xmath39 is connected .",
    "thus @xmath39 is a path .",
    "for each edge @xmath16 of @xmath0 such that @xmath681 and @xmath682 , let @xmath76 be the subtree of @xmath683 that contains @xmath17 . since @xmath684 ,",
    "at most @xmath685 of the subtrees @xmath673 contain @xmath16 .",
    "since each such subtree is connected , @xmath76 is covered by at most @xmath685 subtrees .",
    "that is , @xmath686 . by induction ,",
    "the pathwidth of @xmath76 is at most @xmath685 .",
    "therefore the pathwidth of @xmath0 is at most @xmath672 .",
    "theorem  [ thm : pathwidth ] and proposition  [ prop : pathwidthupperbound ] together say that pathwidth is the right parameter to study when considering coverings of trees by a bounded number of degree-3 subtrees .",
    "[ sec : general ] this section considers coverings of general graphs by connected subgraphs of bounded degree .    a _ connected vertex cover _ of a graph @xmath4 is a connected subgraph @xmath425 of @xmath4 such that every edge of @xmath4 has at least one endpoint in @xmath425 ; that is , @xmath687 . for algorithmic aspects of connected",
    "vertex covers , see @xcite .",
    "[ lem : general ] let @xmath425 be a connected vertex cover of a graph @xmath4 .",
    "let @xmath688 then for every integer @xmath689 , there is a covering of @xmath4 by @xmath690 connected degree-@xmath2 subgraphs .",
    "by vizing s theorem @xcite applied to @xmath691 , there is a partition @xmath692 of @xmath693 , such that each @xmath654 is a matching in @xmath691 .",
    "grouping the matchings gives a partition @xmath694 of @xmath693 , such that each @xmath396 is a degree-@xmath695 subgraph of @xmath691 .",
    "thus @xmath696 is a connected degree-@xmath2 subgraph of @xmath4 , and @xmath697 is the desired covering of @xmath4 .",
    "[ cor : spanning ] let @xmath425 be a connected spanning subgraph of a graph @xmath4 . then for every integer @xmath689 , there is a covering of @xmath4 by @xmath698 connected degree-@xmath2 subgraphs .",
    "the result follows from lemma  [ lem : general ] with @xmath699 .",
    "[ cor : hamiltonian ] for every integer @xmath700 , every hamiltonian graph @xmath4 has a covering by @xmath701 connected degree-@xmath2 subgraphs",
    ".    apply corollary  [ cor : spanning ] with a hamiltonian cycle @xmath425 of @xmath4",
    ". then @xmath702 .",
    "the result follows .",
    "this result can be slightly strengthened for @xmath703 .",
    "[ prop : degreefourhamiltonian ] for all @xmath704 there is an integer @xmath705 such that every hamiltonian graph @xmath4 with @xmath706 has a covering by @xmath707 connected degree-@xmath388 subgraphs .",
    "a forest is _ linear _ if each component is path .",
    "the _ linear arboricity _ of a graph @xmath4 is the minimum number of linear forests that partition @xmath25 . @xcite",
    "proved that for all @xmath704 there is an integer @xmath705 such that every graph @xmath4 with @xmath706 has linear arboricity at most @xmath708 .",
    "apply this result to @xmath709 where @xmath135 is a hamiltonian cycle in @xmath4 .",
    "we obtain a partition @xmath279  of @xmath710 into @xmath711 linear forests .",
    "thus @xmath712 is a covering of @xmath4 by degree-4 subtrees .",
    "now consider coverings of planar graphs by connected subgraphs of bounded degree .",
    "@xcite proved that every @xmath388-connected planar graph is hamiltonian .",
    "thus corollary  [ cor : hamiltonian ] implies the next result .",
    "[ cor : fourconnectedplanar ] for every integer @xmath700 , every @xmath388-connected planar graph @xmath4 has a covering by @xmath701 connected degree-@xmath2 subgraphs .",
    "[ cor : threeconnectedplanar ] for every integer @xmath713 , every @xmath137-connected planar graph @xmath4 has a covering by @xmath714 connected degree-@xmath2 subgraphs .",
    "@xcite proved that @xmath4 has a degree-@xmath137 spanning tree @xmath425 .",
    "the result follows from corollary  [ cor : spanning ] with @xmath715 and @xmath716 .",
    "note that various generalisations of the above - mentioned result by @xcite for graphs embedded on surfaces @xcite can be applied to obtain similar results to corollary  [ cor : threeconnectedplanar ] .",
    "we omit the details .",
    "we conclude with an open problem : is there a function @xmath190 and constants @xmath672 and @xmath2 such that every @xmath672-connected graph @xmath4 has a covering by @xmath717 connected degree-@xmath2 subgraphs ?",
    "we now show that the answer is negative for @xmath718 and @xmath23 ( even for outerplanar graphs ) .",
    "[ prop : arms ] for all @xmath434 there is a @xmath136-connected outerplanar graph with maximum degree @xmath137 that requires at least @xmath283 subgraphs in every covering by degree-@xmath136 connected subgraphs .",
    "let @xmath719 and @xmath720 .",
    "let @xmath425 be the graph obtained from disjoint paths @xmath721 and @xmath722 by adding the edge @xmath723 for all @xmath724 $ ] .",
    "each edge @xmath723 is called a _",
    "cross edge _ , and @xmath725 is called the _",
    "base edge_. as illustrated in figure  [ fig : arms ] , let @xmath4 be the graph obtained from a cycle @xmath726 and @xmath29 copies @xmath727 of @xmath425 by identifying the base edge of @xmath728 with the edge @xmath729 for each @xmath730 $ ] . observe that @xmath4 is 2-connected and outerplanar , and has maximum degree 3 .",
    "let @xmath731 be a covering of @xmath4 by connected degree-@xmath136 subgraphs ( that is , paths and cycles ) . to complete the proof",
    "we now show that @xmath732 .",
    "say @xmath470 _ occupies _",
    "@xmath728 if @xmath470 contains at least two cross edges in @xmath728 . observe that if @xmath470 occupies @xmath728 , then either @xmath470 is a cycle contained in @xmath728 , or @xmath470 is a path and it has an endpoint in @xmath728 .",
    "thus each @xmath470 occupies at most two @xmath728 subgraphs , implying @xmath470 contains less than @xmath733 cross edges .",
    "since there are @xmath734 cross edges in total , @xmath735 .",
    "construction in the proof of proposition  [ prop : arms ] . ]",
    "this question seems related to a result by @xcite , who proved that every @xmath137-connected graph @xmath4 with @xmath736 vertices and maximum degree at most @xmath737 contains a cycle of length at least @xmath738 , where @xmath739 .",
    "# 10=7=0 7 by-1ext#1#1t#1 # 1 d#1#1 d#1#1 l#1#1 l#1#1#1    36 [ 1]#1 [ 1]`#1 ` urlstyle [ 1]doi:#1    noga alon .",
    "the linear arboricity of graphs . _ israel j. math .",
    "_ , 62(3):311325 , 1988 .",
    "http://dx.doi.org/10.1007/bf02783300 .",
    "kiyoshi ando , atsusi kaneko , and severino gervacio .",
    "the bandwidth of a tree with @xmath283 leaves is at most @xmath740 . _ discrete math .",
    "_ , 150(1 - 3):403406 , 1996 .",
    "http://dx.doi.org/10.1016/0012-365x(96)00205-1 .",
    "david  w. barnette .",
    "trees in polyhedral graphs .",
    "_ , 18:731736 , 1966 .",
    "hans  l. bodlaender .",
    "a linear - time algorithm for finding tree - decompositions of small treewidth .",
    "_ siam j. comput .",
    "_ , 25(6):13051317 , 1996 .",
    "http://dx.doi.org/10.1137/s0097539793251219 .",
    "hans  l. bodlaender .",
    "a partial @xmath283-arboretum of graphs with bounded treewidth .",
    "_ theoret .",
    "_ , 209(1 - 2):145 , 1998 .",
    "http://dx.doi.org/10.1016/s0304-3975(97)00228-4 .",
    "richard brunet , mark  n. ellingham , zhicheng gao , alice metzlar , and r.  bruce richter .",
    "spanning planar subgraphs of graphs in the torus and klein bottle .",
    "_ j. combin .",
    "theory ser .",
    "b _ , 65(1):722 , 1995 . http://dx.doi.org/10.1006/jctb.1995.1041 .",
    "guantao chen , jun xu , and xingxing yu .",
    "circumference of graphs with bounded degree .",
    "_ siam j. comput .",
    "_ , 33(5):11361170 , 2004 . http://dx.doi.org/10.1137/s0097539703436473 .",
    "nathaniel dean and mekkia kouider .",
    "gallai s conjecture for disconnected graphs .",
    "_ discrete math .",
    "_ , 213(1 - 3):4354 , 2000 .",
    "http://dx.doi.org/10.1016/s0012-365x(99)00167-3 .",
    "alan donald .",
    "an upper bound for the path number of a graph . _ j. graph theory _",
    ", 4(2):189201 , 1980 .",
    "http://dx.doi.org/10.1002/jgt.3190040207 .",
    "mark  n. ellingham and zhicheng gao . spanning trees in locally planar triangulations . _ j. combin .",
    "theory ser .",
    "b _ , 61(2):178198 , 1994 . http://dx.doi.org/10.1006/jctb.1994.1043 .",
    "john  a. ellis , i.  hal sudborough , and jonathan  s. turner .",
    "the vertex separation and search number of a graph . _ inform . and comput .",
    "_ , 113(1):5079 , 1994 .",
    "http://dx.doi.org/10.1006/inco.1994.1064 .",
    "bruno escoffier , laurent gourvs , and jrme monnot .",
    "complexity and approximation results for the connected vertex cover problem in graphs and hypergraphs . _ j. discrete algorithms _ , 8(1):3649 , 2010 .",
    "http://dx.doi.org/10.1016/j.jda.2009.01.005 .",
    "genghua fan .",
    "path covers of weighted graphs . _ j. graph theory _ , 19(1):131136 , 1995 .",
    "http://dx.doi.org/10.1002/jgt.3190190114 .",
    "genghua fan .",
    "path decompositions and gallai s conjecture .",
    "_ j. combin .",
    "theory ser .",
    "b _ , 93(2):117125 , 2005 . http://dx.doi.org/10.1016/j.jctb.2004.09.008 .",
    "toshihiro fujito and takashi doi . a 2-approximation nc algorithm for connected vertex cover and tree cover .",
    "_ inform . process .",
    "_ , 90(2):5963 , 2004 . http://dx.doi.org/10.1016/j.ipl.2004.01.011 .",
    "zhicheng gao and nicholas  c. wormald .",
    "spanning eulerian subgraphs of bounded degree in triangulations .",
    "_ graphs combin . _ , 10(2):123131 , 1994 .",
    "http://dx.doi.org/10.1007/bf02986656 .",
    "jiong guo , rolf niedermeier , and sebastian wernicke .",
    "parameterized complexity of generalized vertex cover problems . in _",
    "algorithms and data structures _ , vol .",
    "3608 of _ lecture notes in comput .",
    "_ , pp . 3648 .",
    "springer , 2005 .",
    "jiong guo , rolf niedermeier , and sebastian wernicke .",
    "parameterized complexity of vertex cover variants .",
    "_ theory comput .",
    "_ , 41(3):501520 , 2007 .",
    "http://dx.doi.org/10.1007/s00224-007-1309-3 .",
    "frank harary .",
    "covering and packing in graphs . i. _ ann .",
    "new york acad .",
    "_ , 175:198205 , 1970 .",
    "frank harary and allen  j. schwenk .",
    "evolution of the path number of a graph : covering and packing in graphs .",
    "ii . in _ graph theory and computing _ , pp .",
    "3945 . academic press , new york , usa , 1972 .",
    "anthony j.  w. hilton and dominique de  werra . a sufficient condition for equitable edge - colourings of simple graphs . _ discrete math . _ , 128(13):179201 , 1994 . http://dx.doi.org/10.1016/0012-365x(94)90112-0 .",
    "ferran hurtado , guiseppe liotta , and david  r. wood .",
    "proximity drawings of high - degree trees .",
    "ken - ichi kawarabayashi , atsuhiro nakamoto , and katsuhiro ota .",
    "subgraphs of graphs on surfaces with high representativity .",
    "_ j. combin .",
    "theory ser .",
    "b _ , 89(2):207229 , 2003 . http://dx.doi.org/10.1016/s0095-8956(03)00072-8 .",
    "lszl lovsz .",
    "on covering of graphs . in _ theory of graphs ( proc .",
    ", tihany , 1966 ) _ , pp .",
    "231236 . academic press , new york , usa , 1968 .",
    "daniel mlle , stefan richter , and peter rossmanith .",
    "enumerate and expand : improved algorithms for connected vertex cover and tree cover .",
    "_ theory comput .",
    "_ , 43(2):234253 , 2008 .",
    "http://dx.doi.org/10.1007/s00224-007-9089-3 .",
    "juhani nieminen .",
    "some observations on coverings of graphs . _ glasnik mat . ser .",
    ", 10(30)(1):38 , 1975 .",
    "lszl pyber . covering the edges of a connected graph by paths .",
    "_ j. combin .",
    "theory ser .",
    "b _ , 66(1):152159 , 1996 . http://dx.doi.org/10.1006/jctb.1996.0012 .",
    "daniel  p. sanders and yue zhao .",
    "on @xmath136-connected spanning subgraphs with low maximum degree .",
    "_ j. combin .",
    "theory ser .",
    "b _ , 74(1):6486 , 1998 . http://dx.doi.org/10.1006/jctb.1998.1836 .",
    "david sitton .",
    "maximum matchings in complete multipartite graphs .",
    "_ furman university electronic j. undergraduate math .",
    "_ , 2:616 , 1996 .",
    "konstantin skodinis .",
    "construction of linear tree - layouts which are optimal with respect to vertex separation in linear time .",
    "_ j. algorithms _ , 47(1):4059 , 2003 . http://dx.doi.org/10.1016/s0196-6774(02)00225-0",
    ".    ralph  g. stanton , d.  d. cowan , and lee  o. james . some results on path numbers .",
    "in _ proc .",
    "louisiana conf . on combinatorics , graph theory and computing _ , pp .",
    "louisiana state univ . , baton rouge , usa , 1970 .",
    "ralph  g. stanton , lee  o. james , and d.  d. cowan .",
    "tripartite path numbers . in _ graph theory and computing _ , pp .",
    "285294 . academic press , new york , usa , 1972 .",
    "carsten thomassen .",
    "trees in triangulations .",
    "_ j. combin .",
    "theory ser .",
    "b _ , 60(1):5662 , 1994 .",
    "http://dx.doi.org/10.1006/jctb.1994.1005 .",
    "william  t. tutte .",
    "a theorem on planar graphs . _ trans .",
    "amer . math .",
    "_ , 82:99116 , 1956 .",
    "http://dx.doi.org/10.2307/1992980 .",
    "vadim  g. vizing . on an estimate of the chromatic class of a @xmath89-graph .",
    "_ diskret .",
    "analiz no .",
    "_ , 3:2530 , 1964 .    xingxing yu . disjoint paths , planarizing cycles , and spanning walks .",
    "_ , 349(4):13331358 , 1997 .",
    "for a graph @xmath4 and integer @xmath248 , let @xmath741 be the minimum number of disjoint @xmath457-cliques of @xmath4 that partition @xmath280 .",
    "for example , @xmath742 , and @xmath743 , where @xmath89 is the number of edges in a maximum matching in @xmath4 .",
    "let @xmath744 be the complete @xmath283-partite graph with @xmath551 vertices in the @xmath471-th colour class .",
    "we now determine @xmath745 .",
    "[ lem : cmg ] for all integers @xmath746 and @xmath747 , @xmath748 moreover , there is a @xmath749 time algorithm to compute a partition of @xmath744 into this many @xmath457-cliques .    since each vertex in the @xmath471-th colour class is in a distinct clique of the partition , @xmath750 . since every vertex is in some clique of the partition , @xmath751 .",
    "thus proves the lower bound on @xmath745 .",
    "it remains to prove the upper bound .",
    "we proceed by induction on @xmath752 .",
    "assume that @xmath753 .",
    "if @xmath754 then @xmath755 as desired . now assume that @xmath1 .",
    "first suppose that @xmath756 .",
    "then @xmath757 and by induction @xmath758 now assume that @xmath759 .",
    "let @xmath135 be a set with exactly one vertex from each of the @xmath2 largest colour classes .",
    "so @xmath135 is a @xmath2-clique , and @xmath760 suppose that @xmath761 ( @xmath762 ) . thus by and induction @xmath763 observe that @xmath764 thus @xmath765 as desired . now",
    "assume that @xmath766 . hence by and induction , @xmath767 as desired .",
    "it is easily seen that this proof can be adapted to give a greedy linear - time algorithm to compute the partition , where at each stage , a @xmath2-clique is repeatedly chosen from the @xmath2 largest colour classes .",
    "note that the case @xmath23 in lemma  [ lem : cmg ] also follows from a result by @xcite , who determined the size of the largest matching in @xmath744 .",
    "the _ turan _ graph @xmath768 is the complete @xmath283-partite graph @xmath744 where @xmath769 and @xmath770 for @xmath771 .",
    "[ cor : turan ] for all integers @xmath746 , @xmath772 moreover , there is @xmath108 time algorithm to compute a partition of @xmath768 into @xmath773 @xmath457-cliques .",
    "let @xmath59 and @xmath129 be integers such that @xmath774 where @xmath775",
    ". then @xmath776 by lemma  [ lem : cmg ] , @xmath777 if @xmath778 then @xmath779 and @xmath780 . if @xmath781 then @xmath782 and @xmath783 .",
    "in both cases , @xmath784 .    in the proof of the upper bound in theorem  [ thm : rootedpathwidth ] , we need the following result about partitioning turan graphs into cliques of two specified sizes .",
    "[ cor : cmgcmg ] for all integers @xmath785 , such that @xmath786 and @xmath787 and @xmath788 , there is a vertex partition of the turan graph @xmath768 into @xmath307 @xmath789-cliques and @xmath790 @xmath791-cliques .",
    "we proceed by induction on @xmath307 . if @xmath792 then by corollary  [ cor : turan ] , @xmath768 has a partition into @xmath793 @xmath791-cliques , as desired .",
    "now assume that @xmath794 . if @xmath795 then @xmath796 has a partition into one @xmath797-clique and zero @xmath798-cliques , as desired .",
    "now assume that @xmath799 .",
    "let @xmath135 be a @xmath89-clique with exactly one vertex from each of the @xmath89 largest colour classes of @xmath768 .",
    "this is well - defined since @xmath800 . then @xmath801 . by induction",
    ", there is a vertex partition of @xmath802 into @xmath803 @xmath789-cliques and @xmath804 @xmath798-cliques . since @xmath805 , with @xmath135",
    ", we have a vertex partition of @xmath768 into @xmath307 @xmath797-cliques and @xmath806 @xmath798-cliques .",
    "this appendix contains a solution to the integer linear program that arose in the proof of the lower bound in theorem  [ thm : rootedpathwidth ] .    [",
    "lem : integerprogram ] fix integers @xmath807 and @xmath1 such that @xmath808 and @xmath612 .",
    "suppose that some non - negative integers @xmath809 satisfy @xmath810 then @xmath811 this bound is achievable , for example by @xmath812    say @xmath813 is a _ solution _ if , and are satisfied .",
    "a solution is _ optimal _ if it minimises @xmath814 .",
    "suppose that @xmath813 is a solution , where @xmath815 .",
    "we claim that @xmath816 is also a solution . by and since @xmath815 , @xmath817 thus @xmath816 satisfies . by and since @xmath815 , @xmath818 thus @xmath816 satisfies and .",
    "hence @xmath816 is also a solution , as claimed . since @xmath819 there is an optimal solution @xmath820 . by or , @xmath821 for some integer @xmath822 . by , @xmath823",
    "now , @xmath824 thus if @xmath825 is a solution , then it is optimal .",
    "thus it suffices to prove that @xmath825 is a solution .",
    "clearly @xmath826 and , and are satisfied . it remains to prove that @xmath827 .",
    "we have @xmath828 thus @xmath829 and @xmath830 as desired .",
    "hence @xmath825 is an optimal solution .",
    "the claimed lower bound on @xmath814 follows by substitution .",
    "[ lem : anotherintegerprogram ] fix integers @xmath831 and @xmath1 .",
    "let @xmath832 .",
    "thus @xmath833 .",
    "suppose that @xmath834 satisfy @xmath835 then @xmath836 this bound is achievable , for example by @xmath837    say @xmath813 is a _ solution _ if , and are satisfied .",
    "a solution is _ optimal _ if it minimises @xmath814 .",
    "observe that if @xmath813 is an optimal solution , then @xmath838 also is an optimal solution .",
    "thus @xmath839 is an optimal solution for some @xmath815 .",
    "let @xmath839 be an optimal solution with @xmath815 , such that @xmath840 is minimised .",
    "suppose on the contrary that @xmath841 .",
    "then @xmath842 is a solution since @xmath843 and by , @xmath844 moreover , @xmath842 is optimal since @xmath845 .",
    "this proves that @xmath839 does not minimise @xmath840 , which is a contradiction .",
    "thus @xmath846 .",
    "first consider the case when @xmath23 .",
    "then and hold if and only if @xmath853 and @xmath854 .",
    "thus @xmath851 is minimised by @xmath855 and @xmath856 .",
    "hence @xmath857 .",
    "this result matches the claimed bounds since @xmath858 when @xmath23 .",
    "now assume that @xmath700 .",
    "thus and hold if and only if @xmath859 that is , @xmath860 define @xmath861 for a given value of @xmath850 , setting @xmath862 implies that that @xmath863 .",
    "since @xmath849 and @xmath850 minimise @xmath851 , @xmath864 observe that @xmath865 is the only local minimum ( and thus the global minimum ) of @xmath190 .",
    "hence @xmath866 if @xmath867 then @xmath868 is an integer , and we are done with @xmath869 and @xmath870 .",
    "now assume that @xmath871 .",
    "thus @xmath872 thus @xmath873 where @xmath874 and @xmath875"
  ],
  "abstract_text": [
    "<S> this paper addresses the following questions for a given tree @xmath0 and integer @xmath1 : ( 1 ) what is the minimum number of degree-@xmath2 subtrees that partition @xmath3 ? </S>",
    "<S> ( 2 ) what is the minimum number of degree-@xmath2 subtrees that cover @xmath3 ? we answer the first question by providing an explicit formula for the minimum number of subtrees , and we describe a linear time algorithm that finds the corresponding partition . </S>",
    "<S> for the second question , we present a polynomial time algorithm that computes a minimum covering . </S>",
    "<S> we then establish a tight bound on the number of subtrees in coverings of trees with given maximum degree and pathwidth . </S>",
    "<S> our results show that pathwidth is the right parameter to consider when studying coverings of trees by degree-3 subtrees . </S>",
    "<S> we briefly consider coverings of general graphs by connected subgraphs of bounded degree . </S>"
  ]
}
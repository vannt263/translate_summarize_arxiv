{
  "article_text": [
    "protein is a sequence of amino acids , which folds into a unique three - dimensional structure in nature . and one could identify proteins with polygonal chains obtained by connecting the center of adjacent amino acids .",
    "since the functional properties of proteins are largely determined by the structure , protein structure analysis is crucial to the study of proteins .",
    "local protein structure analysis is informative to protein structure analysis and has been used successfully in protein structure prediction and others .",
    "proteins have recurring structural features , such as helix caps and beta turns , which often have strong amino acid sequence preferences . and the challenges for local structure analysis have been identification and assignment of such common short structural motifs ( @xcite , @xcite , @xcite , @xcite , @xcite ) .",
    "identification involves description of protein backbone conformation and definitions of the structural motifs .",
    "and assignment is not a trivial task , due to the variations observed in nature when compared to ideal ones .    in this paper",
    ", we introduce a new differential geometrical approach for local structure analysis . as for differential geometrical description ,",
    "a lot of works on the surface of protein molecules are known ( to name a few , @xcite , @xcite ) . but protein backbone structure is usually studied via classification ( @xcite , @xcite ) and differential geometrical approach has been rarely taken so far .",
    "one of the few is the early work of @xcite which described protein backbones as polygonal chain , where each line segment corresponds to the virtual - bond between consecutive @xmath0-carbons .",
    "in contrast , we describe local conformation of protein backbones using folded tetrahedron sequences ( figure [ fig1 ] ( b ) ) .    as for the shape of protein backbones",
    ", @xcite proposed the notion of alpha - shape and @xcite examined geometric restrictions on polygonal protein chains .",
    "moreover , @xcite reviewed topological knots in protein structure .    ) . ]",
    "for simplicity , we first consider the differential geometry of triangles .      let s consider unit cube @xmath1 ^ 3 $ ] in the three - dimensional euclidean space @xmath2 and divide each of the three facets which contain @xmath3 into two triangles along diagonal , as shown in figure [ fig2 ] ( a ) . then",
    ", if we pile the cubes up in the direction of @xmath4 , we would obtain `` peaks and valleys '' of cubes , where the division of the facets of each cube makes up a division of the surface of the peaks and valleys ( figure [ fig2 ] ( b ) top ) . and a `` flow '' of triangles in @xmath5 is obtained by projecting the surface onto a hyperplane , ( figure [ fig2 ] ( b ) bottom ) .",
    "for example , the grey `` slant '' triangles on the surface specify the closed trajectory of the grey `` flat '' triangles on the hyperplane .    in the following , we use monomial notation to denote points and triangles in @xmath2 .",
    "that is , we denote point @xmath6 by monomial @xmath7 $ ] .",
    "and the triangle of vertices @xmath8 , @xmath9 , @xmath10 @xmath11 are denoted by @xmath12 $ ] .",
    "for example , @xmath13 $ ] is the triangle of vertices @xmath14 , @xmath15 , and @xmath16 $ ] ( figure [ fig2 ] ( c ) ) .    ^3 $ ] .",
    "( b ) : `` peaks and valleys '' of cubes and its projection on a hyperplane .",
    "( c ) : projection @xmath17 from the collection @xmath18 of all the `` slant '' triangles to the collection @xmath19 of all the `` flat '' triangles . ]",
    "let @xmath17 be the projection of the collection @xmath18 of all the slant triangles onto the collection @xmath19 of all the flat triangles along direction @xmath20 , where the image of @xmath13 \\in s$ ] is denoted by @xmath21|$ ] ( figure [ fig2 ] ( c ) ) .",
    "then , projection @xmath17 induces tangent bundle - like structure @xmath22 over @xmath19 , where the gradient of slant triangles are defined as follows :    the _ gradient _ @xmath23 $ ] of @xmath13 \\in s$ ] is monomial @xmath24 $ ] .",
    "in particular , there is a one - to - one correspondence between @xmath22 and @xmath25 .",
    "and we indicate the gradient value over a flat triangle by a bold edge as shown in figure [ fig3 ] ( a ) .",
    "for example , slant triangles @xmath26 $ ] , @xmath27 $ ] , and @xmath28 \\in s$ ] are projected onto the same flat triangle @xmath29| \\in b$ ] and their gradients are @xmath30 , @xmath31 , and @xmath32 respectively ( figure [ fig3 ] ( a ) ) .",
    "then , a gradient value over a flat triangle specifies a local trajectory at the flat triangle as follows :    the _ local trajectory _ defined by @xmath13 \\in s$ ] at @xmath21| \\in b$ ] is the three consecutive flat triangles @xmath33| ,   |a[x_ix_j]| , |a / x_j[x_jx_i]|   \\ } \\subset b$ ] . as figure [ fig3 ] ( b ) shows , these are the adjacent triangles connected along the direction of the bold edge of @xmath21|$ ] . and the local trajectory is specified uniquely by the gradient of @xmath13 $ ] .    | \\in b$ ] . from left to right ,",
    "@xmath26 $ ] whose gradient is @xmath30 , @xmath34 whose gradient is @xmath31 , and @xmath28 $ ] whose gradient is @xmath32 .",
    "( b ) : the local trajectory specified by @xmath26 \\in s$ ] at @xmath29| \\in b$ ] , @xmath35|$ ] ( downward ) and @xmath36|$ ] ( upward ) @xmath37 .",
    "( c ) : smoothness condition at @xmath29| \\in b$ ] ( white ) specified by @xmath26 \\in s$ ] . the next triangle",
    "@xmath35| \\in b$ ] ( grey ) could assume either @xmath30 or @xmath31 as gradient .",
    "]    now we impose a kind of `` smoothness condition '' as shown in figure [ fig3 ] ( c ) .",
    "that is , each flat triangle assume one of two gradient values , which are determined naturally by the gradient of the preceding triangle .",
    "suppose that the gradient at current triangle @xmath29|",
    "\\in b$ ] is @xmath30 and the gradient at next triangle @xmath35| \\in b$ ] is @xmath32 .",
    "then , two flat triangles @xmath29|$ ] and @xmath35|$ ] are separated by the bold edge of @xmath35|$ ] ( figure [ fig3 ] ( c ) right ) . in this case , we permit either @xmath30 or @xmath31 as gradient of @xmath35|$ ] .    as an example , let s consider the peaks and valleys shown in figure [ fig2 ] ( b ) , which is specified by three peaks @xmath14 , @xmath38 , and @xmath39 @xmath40 $ ] ( figure [ fig4 ] ) .",
    "peaks and valleys define a `` smooth '' vector field @xmath41 on @xmath19 by the following mapping : @xmath42| ) : = x_ix_j,\\ ] ] where @xmath13 \\in s$ ] is the slant triangle on the surface of the peaks and valleys over @xmath21| \\in b$ ] .",
    "let s start from triangle @xmath29|$ ] ( grey ) and move downward : @xmath43=|a[x_1x_2]|$ ] and @xmath44)=x_1x_2 $ ] .",
    "then , gradient @xmath44)$ ] specifies local trajectory @xmath45|$ ] , @xmath29|,$ ] @xmath46|   \\}$ ] at @xmath43 $ ] ( note that @xmath36| = |a[x_1x_3]|$ ] ) .",
    "since we move downward , next triangle @xmath47 $ ] is @xmath35|$ ] and we obtain @xmath48)=x_1x_2 $ ] . then , gradient @xmath48)$ ] specifies local trajectory @xmath49|,$ ] @xmath35|,$ ] @xmath29|\\}$ ] at @xmath47 $ ] . and",
    "next triangle @xmath50 $ ] is @xmath51|$ ] .",
    "continuing the process , we obtain the closed trajectory of length @xmath52 .    ,",
    "@xmath38 , and @xmath39 @xmath40 $ ] . ]",
    "finally , let s consider variation of gradient along a trajectory .",
    "thanks for the smoothness condition , variation of gradient , i.e. , the `` second derivative '' , along a triangle trajectory is given as binary valued sequence .",
    "the _ derivative _ @xmath53 of vector field @xmath41 along trajectory @xmath54\\}$ ] is defined as follows : @xmath55 ) : = \\left\\ { \\begin{array}{l l } dv(t[i-1 ] ) \\   & \\text{if $ v(t[i ] ) = v(t[i-1])$ } \\\\   - dv(t[i-1 ] ) \\   & \\text{otherwise } , \\end{array } \\right.\\ ] ] where @xmath56 and @xmath57 . in words ,",
    "_ change value if the gradient changes_.    as an example , let s consider the trajectory of figure [ fig4 ] again .",
    "first , set any initial value : @xmath58 ) = d$ ] .",
    "then , since the first two triangles @xmath43 $ ] and @xmath47 $ ] have the same gradient , @xmath59)$ ] is also @xmath60 .",
    "the value of the second derivative is @xmath60 until @xmath61 $ ] , where it changed to @xmath62 since the gradient of @xmath50 $ ] is different from that of @xmath61 $ ] .    continuing the process ,",
    "we obtain a binary sequence of length @xmath52 , @xmath63@xmath60 @xmath62@xmath64 , which describes the shape of the trajectory .     from the collection @xmath18 of all the slant tetrahedrons to the collection @xmath19 of all the flat tetrahedrons .",
    "( b ) : gradient values of slant tetrahedrons over @xmath65| \\in b$ ] . from left to right , @xmath66 $ ] whose gradient is @xmath67 , @xmath68 whose gradient is @xmath69 , @xmath70 $ ] whose gradient is @xmath71 , and @xmath72 $ ] whose gradient is @xmath73 .",
    "the arrows of slant tetrahedrons indicate the direction of `` down '' in @xmath74",
    "similarly we obtain a flow of tetrahedrons in @xmath2 by considering peaks and valleys of @xmath75-cubes in @xmath76 . in this case , each trajectory of tetrahedrons could be obtained by folding a tetrahedron sequence which satisfies the following conditions ( figure [ fig1 ] ( b ) ) : ( i ) each tetrahedron consists of four short edges and two long edges , where the ratio of the length is @xmath77 and ( ii ) successive tetrahedrons are connected via a long edge and have a rotational freedom around the edge . in particular , we could compute the differential structure on a trajectory without considering @xmath75-cubes .",
    "let s consider @xmath75-cube @xmath1 ^ 4 $ ] in the four - dimensional euclidean space @xmath76 .",
    "then , the facets of @xmath75-cubes are three - dimensional unit cubes and we divide each of the four facets which contain @xmath78 into six tetrahedrons along diagonal , as shown in figure [ fig5 ] ( a ) top .    in the following ,",
    "we denote point @xmath79 by monomial @xmath80 $ ] .",
    "and the tetrahedron of vertices @xmath81 , @xmath82 , @xmath83 , @xmath84 @xmath85 are denoted by @xmath86 $ ] .",
    "for example , @xmath87 $ ] is the tetrahedron of vertices @xmath14 , @xmath15 , @xmath88 , and @xmath89 $ ] .    let @xmath17 be the projection of the collection @xmath18 of all the slant tetrahedrons onto the collection @xmath19 of all the flat tetrahedrons along direction @xmath90 , where the image of @xmath87 \\in s$ ] is denoted by @xmath91|$ ] ( figure [ fig5 ] ( a ) ) . then , projection @xmath17 induces tangent bundle - like structure @xmath22 over @xmath19 , where the gradient of slant tetrahedrons are defined as follows :    the _ gradient _ @xmath92 $ ] of @xmath87 \\in s$ ] is monomial @xmath93 $ ] . in particular , there is a one - to - one correspondence between @xmath22 and @xmath94 . and",
    "we indicate the gradient value over a flat triangle by a bold edge as shown in figure [ fig5 ] ( b ) , where arrows of slant tetrahedrons indicate the direction of `` down '' in @xmath76 .",
    "for example , slant tetrahedrons @xmath66 $ ] , @xmath68 , @xmath70 $ ] , and @xmath72 \\in s$ ] are projected onto the same flat tetrahedron @xmath65|   \\in b$ ] and their gradients are @xmath67 , @xmath69 , @xmath71 , and @xmath73 respectively ( figure [ fig5 ] ( b ) ) .    then , a gradient value over a flat tetrahedron specifies a local trajectory at the flat tetrahedron as follows :     \\in s$ ] at @xmath95| \\in b$ ] , @xmath96|$ ] ( downward ) and @xmath97|$ ] ( upward ) @xmath37 .",
    "( b ) : smoothness condition at @xmath95| \\in b$ ] ( white ) specified by @xmath98 \\in s$ ] . the next tetrahedron @xmath96|",
    "\\in b$ ] ( grey ) could assume either @xmath73 or @xmath67 as gradient . ]",
    "the _ local trajectory _ defined by @xmath87 \\in s$ ] at @xmath91| \\in b$ ] is the three consecutive flat tetrahedrons @xmath99| , |a[x_ix_jx_k]|,$ ] + @xmath100|   \\}$ ] @xmath101 . as figure [ fig6 ]",
    "( a ) shows , these are the adjacent tetrahedrons connected along the direction of the bold edge of @xmath91|$ ] . and the local trajectory is specified uniquely by the gradient of @xmath87 $ ] .    now we impose a kind of `` smoothness condition '' as shown in figure [ fig6 ] ( b ) .",
    "that is , each flat tetrahedron assume one of two gradient values , which are determined naturally by the gradient of the preceding tetrahedron .",
    "suppose that the gradient at current tetrahedron @xmath95|",
    "\\in b$ ] is @xmath73 and the gradient at next tetrahedron @xmath96| \\in b$ ] is either @xmath71 or @xmath69 .",
    "then , the bold edges of the two flat tetrahedrons @xmath95|$ ] and @xmath96|$ ] are not connected smoothly as shown in figure [ fig6 ] ( b ) . in this case , we permit either @xmath73 or @xmath67 as gradient of @xmath96|$ ] .    as an example , let s consider a closed trajectory of peaks and valleys specified by three peaks @xmath102 , @xmath103 , and @xmath104 @xmath105 $ ] ( figure [ fig7 ] ) .",
    "peaks and valleys define a `` smooth '' vector field @xmath41 on @xmath19 by the following mapping : @xmath106| ) : = x_ix_jx_k,\\ ] ] where @xmath87 \\in s$ ] is the slant tetrahedron on the surface of the peaks and valleys over @xmath91| \\in b$ ] .",
    "let s start from tetrahedron @xmath95|$ ] ( grey ) and move downward : @xmath43=|a[x_3x_4x_1]|$ ] and @xmath44)=x_1x_3x_4 $ ] .",
    "then , gradient @xmath44)$ ] specifies local trajectory @xmath107|,$ ] @xmath95|,$ ] @xmath108|   \\}$ ] at @xmath43 $ ] .",
    "since we move downward , next tetrahedron @xmath47 $ ] is @xmath109|$ ] and we obtain @xmath48)=x_1x_2x_4 $ ] .",
    "then , gradient @xmath48)$ ] specifies local trajectory @xmath110| $ ] @xmath109|$ ] , @xmath95| \\}$ ] at @xmath47 $ ] . and next tetrahedron @xmath50 $ ] is @xmath111|$ ] . continuing the process",
    ", we obtain the closed trajectory of tetrahedrons .    note that the trajectory could be obtained by folding the tetrahedron sequence mentioned above ( figure [ fig1 ] ( b ) ) .",
    ", @xmath103 , and @xmath104 @xmath105 $ ] . ]",
    "thanks for the smoothness condition again , variation of gradient , i.e. , the `` second derivative '' , along a tetrahedron trajectory is also given as binary valued sequence .",
    "the _ derivative _ @xmath53 of vector field @xmath41 along trajectory @xmath54\\}$ ] is defined as follows : @xmath55 ) : = \\left\\ { \\begin{array}{l l } dv(t[i-1 ] ) \\   & \\text{if $ v(t[i ] ) = v(t[i-1])$ } \\\\   - dv(t[i-1 ] ) \\   & \\text{otherwise } , \\end{array } \\right.\\ ] ] where @xmath56 and @xmath57 . in words , _ change value if the gradient changes_.    as an example , let s consider the trajectory of figure [ fig7 ] again .",
    "first , set any initial value : @xmath58 ) = d$ ] .",
    "then , since the first two tetrahedrons @xmath43 $ ] and @xmath47 $ ] have different gradient values , @xmath59)$ ] is @xmath62 .",
    "the third tetrahedron @xmath50 $ ] assumes yet another gradient and value of the second derivative changes to @xmath62 . continuing the process",
    ", we obtain a binary sequence of length six , @xmath112@xmath112@xmath112 , which describes the shape of the trajectory .",
    "now let s encode local protein structure using variation of gradient along a trajectory of tetrahedrons .    to study the local structure of a protein , i.e. , polygonal chain , we consider all the amino acid fragments of length _ five _ occurred in the protein .",
    "( it will turn out that length five is enough to detect local features . ) and polygonal chains are approximated by folded tetrahedron sequences to detect their local features , where we permit translation and rotation during the folding process to absorb irregularity of the structure ( figure [ fig8 ] ) .",
    "each fragment is approximated by a folded tetrahedron sequence of length five , starting from the middle point amino acid , say a. and variation of gradient along the sequence is computed to encode its structural features .",
    "we call the resulting \\{@xmath60 , @xmath62}-valued sequence of length five the _ @xmath113-tile code _ of a.          in the following , we will explain the algorithm of `` tetrahedron folding with translation and rotation . '' as an example , let s consider the polygonal chain @xmath114$]-@xmath115$]-@xmath116$]-@xmath117$]-@xmath118 $ ] of figure [ fig9 ] ( a ) and compute the 5-tile code of @xmath116 $ ] using a sequence of five tetrahedrons @xmath119$]-@xmath120$]-@xmath121$]-@xmath122$]-@xmath123 $ ] .",
    "align tetrahedron @xmath121 $ ] ( white ) with amino acid @xmath116 $ ] and set initial values ( figure [ fig9 ] ( b ) ) . in this example",
    ", the gradient and second derivative of @xmath121 $ ] is @xmath67 and @xmath60 respectively .",
    "assign gradient to adjacent tetrahedrons @xmath124 $ ] considering the direction of @xmath126 $ ] respectively ( figure [ fig9 ] ( c ) ) .",
    "for example , tetrahedron @xmath122 $ ] could assume @xmath67 or @xmath71 as its gradient . and the next tetrahedron ( grey ) becomes closer to @xmath118 $ ] if @xmath71 is assumed .",
    "thus , the gradient of @xmath122 $ ] is @xmath71 and its second derivative is @xmath62 since the gradients of @xmath121 $ ] and @xmath122 $ ] are different . in the same way ,",
    "@xmath120 $ ] is assigned @xmath67 and @xmath60 as its gradient and second derivative respectively .",
    "$ ] -@xmath115$]-@xmath128-@xmath118 $ ] which represents the structure of an amino acid fragment to be encoded .",
    "( b ) : step 1 .",
    "( c ) : step 2 .",
    "( d ) : step 3 .",
    "( e ) : step 4 .",
    "( f ) : step 5 . ( g )",
    "the character strings show the corresponding sequences of gradients ( left ) and second derivatives ( right ) , where top are the those of @xmath119 $ ] and bottom are those of @xmath123 $ ] .",
    "@xmath129 , @xmath130 , @xmath131 , and @xmath132 stand for @xmath71 , @xmath69 , @xmath67 , and @xmath73 respectively . ]          rotate tetrahedrons @xmath124 $ ] at the positions of @xmath125 $ ] so that the bold edges become parallel to the direction from @xmath116 $ ] to @xmath126 $ ] respectively ( figure [ fig9 ] ( e ) )",
    ". adjacent tetrahedrons @xmath127 $ ] ( grey ) are also moved with @xmath124 $ ] respectively .",
    "assign gradient to adjacent tetrahedrons @xmath127 $ ] considering the direction of @xmath126 $ ] respectively ( figure [ fig9 ] ( f ) ) .",
    "for example ,",
    "tetrahedron @xmath123 $ ] could assume @xmath73 or @xmath71 as its gradient . and",
    "the next tetrahedron ( not shown ) becomes closer to @xmath118 $ ] if @xmath73 is assumed .",
    "thus , the gradient of @xmath123 $ ] is @xmath73 and its second derivative is @xmath60 since the gradients of @xmath122 $ ] and @xmath123 $ ] are different . in the same way ,",
    "@xmath119 $ ] is assigned @xmath69 and @xmath62 as its gradient and second derivative respectively .",
    "translate tetrahedrons @xmath127 $ ] to the positions of @xmath126 $ ] respectively ( figure [ fig9 ] ( g ) ) .",
    "and we have obtained binary sequence @xmath133 , the 5-tile code of @xmath134 $ ] , which describes the shape of the amino acid fragment shown in figure [ fig9 ] ( a ) .      to save space",
    ", we use numerals and alphabets to denote 5-tile code @xmath135 .",
    "first , compute the value @xmath136 of the code which is defined as follows : @xmath137 , where @xmath138 if @xmath139 is equal to @xmath62 and @xmath140 if not . then , assign the number to the code if the value @xmath136 is less than 10 . otherwise , assign the @xmath141-th alphabet to the code .    for example",
    ", @xmath142 corresponds to binary number @xmath143 and @xmath144 .",
    "thus , @xmath145 is assigned to the code .",
    "on the other hand , @xmath146 corresponds to binary number @xmath147 and @xmath148 .",
    "thus , the first alphabet @xmath149 is assigned to the code .",
    "the local structure of transferase 1rkl shown in figure [ fig1 ] ( a ) is encoded as follows : @xmath150 where the top row shows the amino acid sequence of 1rkl and the bottom shows the corresponding 5-tile codes . as you see , we could capture recurring structural features without any structural templates ( figure [ fig1 ] ( c ) ) .    in previous works , common short structural motifs ( structural templates ) of proteins",
    "are often identified by clustering a set of representative protein fragments , using unsupervised machine learning .",
    "thus , identification and assignment of such motifs has been the challenges for local structure analysis . and , as a result , their methods could not recognize new local structural features nor structural distortions .    on the other hand",
    ", there is no need for identification and assignment of structural templates in our method since we do nt use them at all . and",
    "the @xmath113-tile codes could detect both new local features and structural distortions because they are computed directly from atomic coordinates ."
  ],
  "abstract_text": [
    "<S> local protein structure analysis is informative to protein structure analysis and has been used successfully in protein structure prediction and others . </S>",
    "<S> proteins have recurring structural features , such as helix caps and beta turns , which often have strong amino acid sequence preferences . and the challenges for local structure analysis have been identification and assignment of such common short structural motifs .    this paper proposes a new mathematical framework that can be applied to analysis of the local structure of proteins , where local conformations of protein backbones are described using differential geometry of folded tetrahedron sequences . using the framework , we could capture the recurring structural features without any structural templates , which makes local structure analysis not only simpler , but also more objective . programs and examples are available from ` http://www.genocript.com ` . </S>",
    "<S> + * ams subject classification : * 52c99 , 92b99    * key words and phrases:*discrete differential geometry  </S>",
    "<S> tetrahedron sequence  local protein structure </S>"
  ]
}
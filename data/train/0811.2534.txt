{
  "article_text": [
    "fluid dynamics simulations usually use explicit diffusion operators , either to maintain stability or to model physical effects such as viscosity , resistivity , conductivity , or the diffusion of passive scalars .",
    "virtually all astrophysical gas dynamics and mhd simulations rely on such diffusion operators for stability , physical effects , or both .",
    "we here consider how to design such operators such that they have the desired behavior at the diffusion scale and larger scales , while still restricting the numerical timestep as little as possible .",
    "the timestep depends inversely on the strength of the diffusion @xmath0 classical diffusion operators such as laplacian viscosity ( @xmath1 ) , or fourth or sixth - order hyperdiffusivities ( @xmath2 or @xmath3 ) , reach their maximum values at the grid scale , but act at the larger diffusion scale where the effective diffusivity is lower .",
    "the operators designed here reach their maximum value at the diffusion scale rather than at the grid scale , so that they limit the timestep no more than necessary .",
    "in a spectral code , the diffusive terms are linear and can thus be handled spectrally without limitation on the timestep .",
    "for example , let a field evolve as @xmath4 where a denotes the non - diffusive terms . in fourier space ,",
    "@xmath5 the solution , with @xmath6 constant throughout the interval @xmath7 , is @xmath8 e^{-\\nu k^2 \\delta t}\\ ] ] when evolved in fourier space , the diffusivity operator is stable for any value of @xmath9 whereas in physical space , instability occurs if @xmath10 ( restating eq .  [ timestep ] in terms of wavenumber ) .",
    "however , finite difference codes do have advantages that make them worth pursuing : they use fewer floating point operations per grid point ; they can be more easily parallelized without the all - to - all communications required for fourier transforms ; they are not restricted to periodic boundary conditions ; and they handle discontinuous jumps more robustly .",
    "the navier - stokes equation can include a number of different types of diffusion operators : @xmath11   \\label{n - s}\\end{aligned}\\ ] ] where the @xmath12 term is the usual laplacian physical viscosity , the @xmath13 and @xmath14 terms are @xmath15th - order hyperviscosities , the term @xmath16 is a customized diffusion operator .",
    "either the sixth - order hyperdiffusivity term or the physical diffusivity can maintain numerical stability .",
    "the hyperdiffusivity has been advocated @xcite because it preferentially diminishes the high - wavenumber structure without modifying low - wavenumber structure .",
    "if the problem does require true physical diffusivities , we still want to consider use of a customized operator .",
    "this would reduce excess diffusion at scales well below the diffusion scale .",
    "such excess diffusion limits the timestep without further modifying the solution as no structure exists at those scales .    to date",
    "the focus in the study of extensions to numerical diffusion has been on such hyperdiffusivities ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "* ) , as exemplified by the hyperviscosities described in equation  ( [ n - s ] ) .",
    "however , the degrees of freedom available in the finite difference coefficients can be used instead for different goals .    in this paper",
    "we describe methods for customizing diffusion operators that can be used to design operators that protect the timestep while either minimizing diffusion or reproducing the physical diffusion operator at low wavenumber as well as possible .",
    "these methods can also be used to design different diffusion operators for other purposes .",
    "these methods rely on the tuning techniques used by @xcite for improving the high - wavenumber accuracy of finite - difference derivatives .",
    "in   [ finite - difference ] we summarize the constraints that lead to the need for tuning finite difference operators .",
    "we then describe operators suitable for implementing both numerical (   [ hyper ] ) and physical (   [ laplacian ] ) diffusivities , and we summarize our results in   [ summary ] .",
    "let us consider the question of how to tune a general , symmetric , finite - difference operator , since all diffusion operators must be symmetric .",
    "we follow the treatment of the tuning of anti - symmetric operators such as first derivatives given in @xcite .",
    "such tuning allows us to customize the wavenumber spectrum of the operator to meet the needs of the problem at hand , rather than relying on simple analytic forms .",
    "this allows us , for example , in a problem with large laplacian diffusivity , to trade small deviations from laplacian behavior at low wavenumber for large gains in the timestep , by limiting the diffusion at high wavenumber .",
    "the deviations from laplacian at low wavenumber can be maintained at levels small enough to not affect realistic simulations .",
    "we use both analytic solutions and numerical optimization to improve the spectral performance of the operators .    as an example of finite difference representations of symmetric operators we examine second and fourth derivatives . define a function @xmath17 on a set of grid points @xmath18 with j an integer . then construct a finite difference operator for the second derivative @xmath19}$ ] by sampling a stencil of grid points with radius @xmath20 without loss of generality , we center the operator on @xmath21 and use a grid interval of @xmath22 the familiar result for a second derivative on a radius-1 stencil is @xmath23 which is obtained from fitting a polynomial of degree @xmath24 to @xmath25 for a fourth derivative",
    ", we can fit a degree 4 polynomial on a radius-2 stencil , @xmath26 in general , a symmetric operator on a stencil of order @xmath27 can be represented as @xmath28    consider the value of the finite - difference operator at @xmath29 for a fourier mode @xmath30 ( sine modes can be ignored because they do nt contribute to the second derivative at @xmath29 . )",
    "the wavenumber @xmath31 is scaled to grid units so that @xmath32 corresponds to the maximum ( nyquist ) wavenumber @xmath33 expressible on the grid .",
    "the analytic value for the second derivative is @xmath34 whereas the finite difference operator ( eq .  [ stencil ] ) gives @xmath35 } \\sim m_{{\\scriptscriptstyle\\mathsf}0 } + 2 \\sum_{j=1}^{s } m_j \\cos(\\pi j k ) \\equiv -d(k)\\ ] ] this defines a function @xmath36 that , when positive , acts as a diffusion applied to @xmath37 , because the fourier modes of @xmath38 evolve as @xmath39 where @xmath40 is a viscosity - like parameter that sets the level of diffusion .",
    "the maximum diffusive timestep is given by the inverse of the maximum value of @xmath36 over @xmath41 @xmath42}.\\ ] ] ideally , @xmath36 should scale as @xmath43 for @xmath44 and should be constant for @xmath45 the focus of this work is on customizing the form of @xmath36 so as to to increase the maximum diffusive timestep , and , in the case of hyperdiffusion , also minimize low-@xmath31 diffusion .",
    "figure  [ figlaplace ] shows @xmath36 for finite - difference stencils of radius @xmath46 ( second order ) and @xmath47 ( sixth order ) , in comparison to the analytic value , demonstrating how higher order more closely mimics the analytic function .",
    "the coefficients of these functions are listed in table  [ tablelaplace ] .",
    "the operator @xmath36 can be taylor expanded in the form @xmath48 [ dkexp ] an operator that reproduces @xmath49 for all @xmath31 would have @xmath50 and all the rest of the coefficients @xmath51 for @xmath52 .",
    "the radius-1 stencil ( eq .  [ stencil1 ] ) has @xmath53 and @xmath54 , but the higher order coefficients are unconstrained , while the radius-2 stencil ( eq .  [ stencil1 ] ) sets @xmath55 and @xmath54 .",
    "lllllll & @xmath56 & @xmath57 & @xmath58 & @xmath59 & @xmath60 & @xmath61 + @xmath49 , @xmath62 order & -2 & 1 & & & + @xmath49 , @xmath63 order & -2.72222 & 1.5 & -0.15 & 0.01111 & & + @xmath64=1/2 & -1.514721 & 0.5692471&0.2524535&-0.0643401 & & + @xmath64=3/8 & -0.9148711&0.2609054&0.2059354&-0.0094052 & & + @xmath64=1/4 & -0.4334820&0.0752718&0.0696988 & 0.0717703 & & + @xmath64=7/32&-0.2733333&0.0179722&0.0172444 & 0.1014500 & & + @xmath64=3/16&-0.2679784&0.0393498&0.0283651 & 0.0304570&0.0358173 & + @xmath64=9/64&-0.1317918&0.0097316&0.0094934 & 0.0088189&0.0081529&0.0296992 + @xmath64=3/32&-0.0585600&0.0029213&0.0030688 & 0.0029842&0.0027554&0.0026748 +    the usual way to evaluate an operator for a function such as @xmath49 is to fit a maximal order polynomial to the points in the stencil .",
    "this yields equations that can be inverted to find the @xmath65 coefficients in equation  [ dk ] for stencil radius @xmath27 @xmath66 for even @xmath67 .",
    "we call such operators polynomial - based operators . the form of these operators is shown in figure [ figd4 ]",
    ".    we may , however , use the available degrees of freedom in different ways .",
    "the goal of fitting a high - order polynomial to the derivative is to have high accuracy at high wavenumber .",
    "however , that may actually contradict the goal of protecting the timestep while either minimizing diffusion or reproducing the physical diffusion operator at low wavenumber . instead",
    ", we can use the available degrees of freedom to directly address these requirements .    as an example , for a kolmogorov cascade , the diffusive scale @xmath68 and the viscosity @xmath69 scale as @xmath70 the viscosity can be made sufficiently large that @xmath71 is substantially larger than the grid scale , and the velocity profile will be smooth at smaller scales .",
    "the cascading energy is elminated at the diffusive scale , so there is no need for higher diffusivity at smaller scales , yet because of the form of the laplacian diffusivity operator , the diffusivity increases all the way down to the grid scale .",
    "this excess diffusivity is unnecessary , and in fact is a liability because it restricts the timestep .",
    "laplacian diffusion operators , or steeper operators such as hyperdiffusivities , rise in amplitude monotonically all the way to the nyquist wavenumber @xmath32 .",
    "a large value of @xmath72 requires a small timestep , but is unnecessary because energy cascading from higher scales is removed earlier at the diffusion scale @xmath73 @xmath36 need only have enough presence above @xmath64 to diffuse any fourier modes that might arise there . for",
    "@xmath74 it can be as large as it is at @xmath64 with no additional timestep penalty .",
    "this allows us to specify a strategically chosen diffusion operator that satisfies these requirements .",
    "such an operator should rise through the diffusion range @xmath64 , but then flatten out and merely remain positive at @xmath75 .",
    "since this constraint is much less critical than having controlled diffusion at low @xmath31 , the low-@xmath31 range of @xmath36 should receive a higher priority in the optimization than the high-@xmath31 range .",
    "the behavior of the diffusion function at @xmath64 critically determines its effect on the solution .",
    "the diffusion must act above both the nyquist scale @xmath76 , for stability , and at the resolution scale , to damp modes with wavenumbers too large to be accurately captured by the finite difference scheme .",
    "the resolution scale depends on the details of the method",
    ". however , the common choice of radius-3 stencils have a resolution scale @xmath77 @xcite , so we choose in this work to use a diffusion scale @xmath78 , and examine diffusion functions normalized to @xmath79 .",
    "we note in passing that if the diffusivity is weak enough to not limit the timestep , it does not have to be applied every timestep .",
    "the diffusivity can instead be applied once every @xmath80 timesteps with a value of of @xmath69 that is @xmath80 times as large , for reasonable values of n @xcite .",
    "however , the enhanced diffusivity may then be large enough that the flat diffusivities described in this paper are required to protect the timestep .",
    "this yields a computational savings from not having to calculate the diffusion operator every timestep .    in the next two sections we describe",
    "how we perform the tuning and give some useful examples of operators for both hyperdiffusivity and laplacian diffusivity .",
    "in situations where one wishes to maximize the scale range , and where the diffusion - scale dynamics do nt affect larger scales , one can fruitfully use a diffusion operator that rises more rapidly with @xmath31 than a laplacian . writing the diffusive terms from equation [ n - s ] in fourier space , @xmath81 one sees that hyperdiffusive terms such as those proportional to @xmath82 and @xmath83 have a steeper dependence on the wavenumber @xmath31 than the laplacian diffusivity proportional to @xmath12 .    however , energy cascading from larger scales dissipates at the diffusion scale @xmath84 , so increasing the diffusion at @xmath75 further is unnecessary . a customized diffusion operator @xmath36 can be constrained to have a similarly steep @xmath31 dependence at low @xmath31 , but to then flatten at the diffusion scale @xmath64 , so that the value at the nyquist wavenumber @xmath72 is not markedly higher . since the timestep is limited by the maximum diffusivity on the grid at any scale , limiting the value of @xmath85 at small",
    "wavenumber protects the timestep .",
    "we note in passing that the @xmath82 term in equation  ( [ eq : diff ] ) contains two successive laplacians and therefore two rounds of finite differences , whereas terms such as @xmath86 and @xmath36 involve only one round of finite differences , and are therefore favored for their execution speed .",
    "also , the diffusion function for @xmath87 has a greater value in the high-@xmath31 `` corners '' of fourier space than @xmath88 and hence a smaller maximum diffusive timestep , and so for this reason as well , operators such as @xmath87 and @xmath89 are disfavored .",
    "we begin by considering diffusion operators with a stencil radius @xmath90 , such as are used in the hyperdiffusion implemented in the pencil code @xcite . in this case",
    ", one can analytically construct a one - parameter family of functions parameterized by the degree of diffusivity @xmath72 at @xmath32 .",
    "as before , we take @xmath91 , the diffusion scale @xmath78 , and normalize @xmath36 so that @xmath92 . inverting equation  [ dk ] with these conditions yields @xmath93 this also implies that @xmath94 the magnitude of @xmath95 is inversely related to the sharpness of the hyperdiffusive filter .",
    "sharpness of hyperdiffusivity is usually measured by giving the index of the scaling with wavenumber @xmath31 at low @xmath31 . in this example , however , all the functions we present have @xmath96 scaling at low @xmath31 and are normalized at @xmath64 , so the lower the value of the coefficient @xmath95 of the @xmath96 term , the sharper the hyperdiffusivity .    the free parameter @xmath72 traces the maximum diffusivity , at least in the regime @xmath97 as shown in figure  [ fig : diff - fcn ] , and thus determines the timestep .",
    "this can be demonstrated by differentiating @xmath36 ( eqs .",
    "[ dk ] and  [ dkexp ] ) and showing that in this regime , @xmath98 , so @xmath36 monotonically increases between @xmath99 .",
    "for @xmath100 the maximum diffusivity is not much greater than the diffusivity at @xmath101 for example , for @xmath102 , the maximum diffusivity is @xmath103 at @xmath104 .",
    "the useful range for @xmath72 is @xmath105 because the case @xmath106 corresponds to the operator for @xmath107 which represents the @xmath90 hyperdiffusivity operator that is least diffusive at low wavenumber .",
    "choosing @xmath108 results in @xmath109 for some value of @xmath110 .",
    "the choice @xmath111 corresponds to the standard hyperdiffusivity used in the pencil code .",
    "we further find that the best choice to minimize diffusivity at low @xmath31 is given by requiring that @xmath112 if @xmath113 then @xmath109 at low @xmath31 , and hence unstable , while for @xmath114 , it is more diffusive at low @xmath31 than it could be .",
    "for @xmath105 for a stencil with radius @xmath90 , represented with solid lines .",
    "the dotted line shows the @xmath115 operator for @xmath49 ; the addition of the two additional parameters in the @xmath90 operator allowed reduction of diffusivity at both high and low wavenumber while maintaining the normalization at @xmath64 .",
    "the @xmath116 line is identical to the standard @xmath117 hyperdiffusivity .",
    "the functions are all continuous through @xmath118 , so the most diffusive above @xmath64 are the least diffusive below it .",
    "[ fig : diff - fcn ] , width=576 ]    the goals of minimizing the low-@xmath31 diffusivity and protecting the timestep at high @xmath31 are at odds if one normalizes the diffusion magnitude at the diffusion scale @xmath79 .",
    "the tradeoffs can be seen by considering the behavior of @xmath36 as @xmath72 is increased ( fig .",
    "[ fig : diff - fcn ] ) . reducing the diffusion for @xmath110",
    "requires increasing the diffusion for @xmath119 and vice versa",
    ". although the values are much larger at high wavenumber , the percentage changes are actually similar in the two regimes ( see tab .  [ tab : diff - fcn ] for the low wavenumber values ) .",
    "note that the function with @xmath116 is the standard hyperdiffusion with stencil radius @xmath120 , which is the most hyperdiffusive @xmath117 operator .",
    "adding one extra free parameter by moving to stencil size @xmath121 allows both low and high wavenumber diffusivity to be tuned , but we can not decrease both simultaneously . however , adding another free parameter by using stencil size @xmath122 does allow both to be decreased ( fig .  [ figd4 ] ) . as an additional example , note that the dotted line in fig .",
    "[ fig : diff - fcn ] shows the @xmath115 diffusivity , while the @xmath90 result with @xmath123 has decreased diffusivity for both low and high @xmath31 . simultaneously decreasing the diffusion for @xmath124 and @xmath125 while maintaining a constant diffusion at @xmath126",
    "thus clearly requires more than one free parameter . with two or more free parameters",
    ", we can simultaneously satisfy both goals .",
    "lll @xmath127 & @xmath128 & @xmath72 + .124 & .328 & 1.5 + .116 & .312 & 2.0 + .101 & .281 & 3.0 + .086 & .250 & 4.0 + .055 & .187 & 6.0 + .025 & .124 & 8.0 +    extending the stencil size to @xmath129 allows us to further optimize the diffusion function .",
    "we now have multiple ways in which we could proceed .",
    "we choose to use numerical optimization to derive tuned @xmath129 operators based on the following conditions : normalize the diffusion spectrum to @xmath79 ; insist that @xmath130 for some chosen value of the constant @xmath131 ; set @xmath132 ; and require that @xmath85 monotonically increase for @xmath110 . within these constraints , we maximize @xmath133 , which measures the sharpness of the operator at @xmath64 .    to find the operator satisfying these conditions we use a multiparameter optimization of the coefficients @xmath65 in order to maximize @xmath133 within the constraints .",
    "we have developed a novel monte carlo routine to perform the optimization .",
    "it evolves the solution by testing randomly selected nearby points , selecting the best among them and iterating with a search radius sensitive to the speed of improvement of the solution .",
    "because different parameters have widely varying ranges , we use a logarithmic sampling distribution .    in figure  [ figd4 ]",
    "we show the resulting optimized diffusivities for @xmath122 and @xmath134 .",
    "the coefficients for these operators are given in table  [ tablehyperdiff ] .",
    "comparing the @xmath117 hyperdiffusivity to the optimized @xmath122 operator gives another example of the benefit of taking advantage of two free parameters .",
    "lllllll & @xmath56 & @xmath57 & @xmath58 & @xmath59 & @xmath60 & @xmath61 + @xmath135 , 4th order&1.500000&-1 . &",
    "0.250000 & & & + @xmath135 , 6th order&1.750000&-1.218750 & 0.375000&-0.031250 & & + tuned , stencil 4 & 1.231682&-0.775549 & 0.074534 & 0.126481&-0.041307 & + tuned , stencil 5 & 0.911455&-0.511864&-0.033699 & 0.094005 & 0.010574 & -0.014743 +",
    "some applications require such large physical diffusivity that it becomes the dominant constraint on the timestep .",
    "examples include magnetized turbulent flows with separated viscous and resistive scales so that the magnetic prandtl number @xmath136 is far from unity , where @xmath137 is the resistivity ; and turbulence with a passive scalar such as temperature that diffuses at a scale different from the viscous scale so that the schmidt number @xmath138 is far from unity , where @xmath139 is the diffusivity of the passive scalar . in this case",
    ", the physical diffusivity operators can also be adjusted so as to cause less harm to the timestep .",
    "the procedure that we used to generate coefficients for flat lagrangian diffusion operators is to specify a value for @xmath140 and then constrain d so as to not further increase beyond its value at the diffusion scale .",
    "specifically , we set @xmath141 for all @xmath142 within this constraint , we minimize the value of @xmath143 over @xmath45 for a radius @xmath47 stencil , this procedure works for @xmath64 as low as @xmath144 any lower than that and @xmath145 can not be satisfied without @xmath36 taking on a dangerously small value for some @xmath119 or even worse , becoming negative .",
    "however , increasing the stencil size beyond @xmath121 allows for flat diffusion operators with successively lower values of @xmath73 such operators are shown in table  [ tablelaplace ] , and figure  [ figlaplace ] for @xmath90 .",
    "we have presented techniques for customizing diffusion filters with the goal of either decreasing low-@xmath31 diffusion , or maximizing the timestep , or some combination of both .",
    "we have given concrete examples that cover the commonly encountered cases , but since the requirements for diffusion can be problem dependent , we also emphasize techniques for customizing general diffusion filters .",
    "turbulent flows offer a major example of the need for careful choice of the magnitude of either physical diffusivity or hyperdiffusivity .",
    "the relevant magnitude is that at the diffusion scale @xmath146 , where @xmath64 is chosen to match the spectral resolution of the numerical scheme @xcite .",
    "there it must be large enough to absorb the energy from the turbulent cascade reaching that scale .",
    "the value of @xmath69 is generally set empirically to satisfy this requirement ."
  ],
  "abstract_text": [
    "<S> finite - difference simulations of fluid dynamics and magnetohydrodynamics generally require an explicit diffusion operator , either to maintain stability by attenuating grid - scale structure , or to implement physical diffusivities such as viscosity or resistivity . </S>",
    "<S> if the goal is stability only , the diffusion must act at the grid scale , but should affect structure at larger scales as little as possible . for physical diffusivities </S>",
    "<S> the diffusion scale depends on the problem , and diffusion may act at larger scales as well . </S>",
    "<S> diffusivity undesirably limits the computational timestep in both cases . </S>",
    "<S> we construct tuned finite - difference diffusion operators that minimally limit the timestep while acting as desired near the diffusion scale . </S>",
    "<S> such operators reach peak values at the diffusion scale rather than at the grid scale , but behave as standard operators at larger scales . </S>",
    "<S> we focus on the specific applications of hyperdiffusivity for numerical stabilization , and high schmidt and high prandtl number simulations where the diffusion scale greatly exceeds the grid scale . </S>"
  ]
}
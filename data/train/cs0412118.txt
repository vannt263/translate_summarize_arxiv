{
  "article_text": [
    "we consider the problem of energy efficient routing in a sensor network for data aggregation queries . in such networks ,",
    "energy costs are dominated by communication and we give algorithms to optimally route aggregated data through the network .      _",
    "sensor networks _ are large scale wireless networks composed of tiny _ sensor nodes_. each sensor node is a two part combination of an array of sensors and a tiny computer capable of wireless communication .",
    "the sensors periodically measure the physical environment around them and generate a stream of data .",
    "the computer takes this data and communicates it through a wireless network to other nodes in the network .",
    "sensor database systems like tinydb @xcite have been proposed to provide a sql like data interface to simplify the extraction and management of data in such a network .    in the internet , data extraction and routing",
    "are relegated to different layers in the protocol stack .",
    "but in a sensor network , such separation of application and network layers is not desirable .",
    "most sensor network are _ not _ designed to be general purpose networks and thus their architecture can be fine tuned for the intended application .",
    "most importantly , sensor networks are severely power - limited : sensor nodes run on battery power , which is generally impossible to replenish once the network is deployed .",
    "thus the lifetime and usefulness of the network crucially depends on the energy demands that the application places on it .",
    "a node can spend energy in sensing , communication and computation .",
    "in typical sensors , computation and sensing costs are several orders of magnitude smaller than the communication cost . as an example , for berkeley sensor motes , transmitting one bit requires 1 @xmath0j , while executing one instruction takes about 0.008 @xmath0j @xcite of energy .",
    "thus the biggest power savings can be achieved by communication strategies which are optimal for the application at hand .      in a sensor database system , users pose queries to a special node called the _ base station _ which disseminate the queries over the network .",
    "an example query could be to find the average temperature over all sensors in the network .",
    "sensors process the query and send their replies back to the base station . the most natural way to answer queries is to gather data from all the sensors at the base station and process the query there . since this process is very expensive in terms of the amount of data transferred , systems such as tinydb have proposed _ in - network aggregation _ to process queries  @xcite . in - network aggregation",
    "has resulted in routing trees playing a central role in the database application .",
    "prior research on power aware routing @xcite and query processing has considered the two problems in isolation . in particular , because of in - network aggregation many data packets are often aggregated to a single packet .",
    "the typical energy efficient routing schemes do not take into account this collapse of data flow .",
    "similarly database query processing techniques have critically relied on the availability of a routing tree for in - network aggregation without considering the optimality of such a tree .    in this paper",
    "we first classify database queries based on the level of aggregation they employ for processing .",
    "if a query can be processed in - network by transmitting a single value from each sensor node on the routing tree , we refer to this as a _ fully - aggregated query_. the other case is when an intermediate node needs to transmit all incoming values toward the base station ; this is referred to as an _ unaggregated query_. the final category which we refer to as _ partially aggregated query _ is one in which the amount of data each node needs to transmit has an upper bound , e.g. a histogram over the data values .",
    "each type of in - network aggregation results in a different optimal routing tree .",
    "although transmission costs dominate wireless communication , reception costs also play a strong role in determining optimal routing tree .",
    "for example , the radio for mica2 sensor motes drain 12ma current while transmitting and 8ma while receiving @xcite . simply keeping the radio",
    "switched on at idle also drains consumes almost the same amount of power as receiving .",
    "thus both receive and idle time in a network can significantly affect the total energy consumption .    the problem of finding power efficient routing tree arises in other contexts as well .",
    "for example some sensor network routing schemes divide sensors into clusters with every node reporting to its cluster leader .",
    "the nodes in a cluster can transmit to the cluster leader in a single hop , or use lower power and try to reach the leader in multiple hops .",
    "multiple hops are generally more power efficient than single hops and in that case we have a similar problem of needing to find the best routing tree to reach the cluster leader .      we show that finding the optimal routing tree is np - complete for aggregated , unaggregated or partially aggregated queries . for fully aggregated queries we give a routing algorithm with worst case constant factor performance guarantee . for unaggregated and partially aggregated queries we give approximation algorithms which in practice come very close to optimal performance .",
    "finally we evaluate these algorithms experimentally in various network topologies .",
    "the rest of the paper is organized as follows . in section [ sec - background ]",
    "we discuss the properties of our model and discuss some related work .",
    "then in sections [ sec - fully - aggregated ] , [ sec - unaggregated ] and [ sec - partly - aggregated ] , we discuss routing problems for fully aggregated , unaggregated and partially aggregated queries .",
    "section [ sec - experimental ] is devoted to an experimental evaluation of the proposed algorithms and section [ sec - conclusion ] concludes the paper .",
    "consider a network of @xmath1 sensor nodes labeled as @xmath2 and having energy @xmath3 .",
    "we assume that the node @xmath4 acts as the base station .",
    "this node is special in that it is assumed to have unlimited power supply , i.e. @xmath5 .",
    "we assume a setting in which the environment is continually monitored by the sensor and the data value is sent to the base station .",
    "formally , we assume that every node generates one unit of data every time unit . transmitting one unit of data costs one unit of energy , while receiving one unit of data costs @xmath6 amount of energy for each sensor .",
    "let us assume that the @xmath1 sensors are distributed arbitrarily in a two dimensional plane and that that two sensors can communicate with each other if they are within range @xmath7 .",
    "we assume that sensors transmit with fixed power ; that is , they do not dynamically adjust their power for each transmission , depending on the distance to the receiver node .",
    "the radio links are also assumed to be symmetric . in that case",
    ", we can construct a communication graph where each node corresponds to a sensor and each edge links two sensors which can communicate with each other .",
    "we assume that there exists a time synchronization model for computing aggregates .",
    "time is divided into equal sized periods called _",
    "epochs_. every epoch a leaf node transmits data to its parent .",
    "once a parent receives data from all its children , it aggregates the data and transmits the aggregate to its parent in the next epoch",
    ". thus if the depth of the routing tree is @xmath8 , then it requires @xmath8 epochs for the data from a leaf to reach the base station .",
    "our task is to construct a routing tree on this graph so as to optimize system lifetime .",
    "note that in any routing tree the nodes near the base station will be the most loaded because they have to route all the information from other nodes to the base .",
    "let us now consider how a query is answered using in - network aggregation within the tiny aggregation ( tag ) @xcite framework . consider the query ` select avg(temp ) from sensors ` .",
    "the base station floods this query to the network .",
    "as the query is propagated through the network the nodes organize themselves into a _ routing tree _ with the base station as the _ root_. when a node hears a query it forwards the query to its children .",
    "when the nodes begin to reply , every node aggregates the replies from its children and forwards the aggregated reply to its parent .",
    "the data structure which encodes the reply is called a _ partial state record _ ( psr ) . for the avg query ,",
    "the psr consists of a tuple @xmath9 . for the leaf nodes , ` count ` is 1 and ` sum ` is the temperature reading from the sensor . for a parent node which receives two psrs @xmath10 and @xmath11 ,",
    "the new psr is @xmath12    for a sensor network the power consumption is determined by the size of the psr and the path that the psr takes to reach the root .",
    "here we summarize some example queries and associated psr sizes .    * _ fully aggregated _ : ` select avg(temp ) from sensors ` .",
    "the psr size is constant irrespective of the number of sensors . `",
    "max / min ` queries also fall into this class .",
    "* _ unaggregated _ : ` select nodeid from sensors where ( temp > 70 ) ` .",
    "the psr size near the root is proportional to the number of total sensors . * _ partially aggregated _ : ` select histogram(temp ) from sensors ` .",
    "the psr grows in size as it flows toward the root , but has a maximum size ( number of bins in the histogram ) independent of the number of sensors .",
    "several metrics for power efficiency have been proposed in the literature @xcite such as total energy spent , energy spent per unit of data transmitted , and time for first node failure .",
    "intuitively , an efficient routing tree will steer most of the traffic away from the nodes with low battery power and put it through the nodes which have more battery power and thus make sure that no node runs out of power prematurely .",
    "the success of the routing tree will be determined by the length of time it can avoid a node failure . thus we define a metric called _ system lifetime _ which is the time required for first node failure to occur amongst all nodes .",
    "the problem that we address in this paper is as follows : for a given type of query with associated psr size and a single base station , what is the optimal routing tree to maximize system lifetime ?",
    "a description of the tinydb system and its architecture can be found in the papers by madden et .",
    "al . @xcite .",
    "an overview of the energy consumption issues for sensor networks can be found in the review article by raghunathan et .",
    "al .  @xcite .    the work by singh et .",
    "@xcite introduced various metrics for measuring the lifetime of wireless networks .",
    "chang and tassiulas   @xcite formulated the problem of routing multiple conserved data flows as a multi - commodity flow with the time for first node failure as the power efficiency metric .",
    "sadagopan and krishnamachari  @xcite have proposed another efficiency metric which is to maximize total amount of data extracted out of the network .",
    "this is not a suitable metric for sensor databases because the usefulness of a sensor database depends not only on the total amount of data extracted , but also on having as many of the nodes alive as possible .",
    "zussman and segall  @xcite have investigated power aware routing with first node failure as efficiency metric for disaster recovery networks .",
    "kalpakis et al .",
    "@xcite have formulated the power aware routing problem for fully aggregated queries like average as a linear programming problem .",
    "krishnamachari et.al .",
    "@xcite have looked at the power efficient routing tree problem for fully aggregated data with power metric as total number of transmissions required .",
    "this problem maps on to the well known steiner tree problem which is known to be np - complete .",
    "however , the total number of transmissions is not a good measure of useful system lifetime .",
    "boukerche et .",
    "@xcite have proposed an alternative way to conserve energy , which is to build a routing tree with a large number of leaves .",
    "the leaf nodes can turn themselves off to sleep until an interesting event occurs , while the non - leaf nodes are always awake for routing .",
    "the problem of determining spanning tree with maximum leaves is again known to be np - complete .",
    "this approach is not applicable to database queries where all nodes need to be queried .",
    "also a disproportionate burden of power is placed on backbone non - leaf nodes .",
    "another way to increase power efficiency of a network is to reduce path length by utilizing multiple base station nodes .",
    "bogdanov et al .",
    "@xcite have demonstrated that optimal power efficient placement of base stations is np hard .",
    "let us consider the following model for a fully aggregated query . at every unit of time , every node produces one unit of data .",
    "a node which receives multiple units of data from other nodes aggregates that data with its own and forwards a single unit of aggregated data .",
    "thus every node transmits a single unit of data , but might receive zero or more units of data depending on network topology and routing .",
    "an example of fully aggregated query is computing the average of data values over all sensors .    in this section",
    "we first discuss the problem of finding optimal routing tree for fully aggregated queries with and without reception cost .",
    "we demonstrate that the problem of finding optimal routing tree with reception cost is np - complete .",
    "then we give a near optimal routing tree algorithm for the problem and analyze its performance .",
    "if we assume that there is no energy cost to receive data , then finding the optimal routing tree is a simple problem . the energy cost for any node is just the cost of transmitting one unit of data to its parent in the routing tree regardless of its energy level .",
    "thus in any routing tree , every node consumes equal amount of energy regardless of the topology . to state it formally :    [ prop - optimal - tree ] in the model where the receive cost is assumed to be zero ,",
    "every spanning tree is optimal for aggregated queries , even with arbitrary node energy levels .    in the introduction",
    "we have already seen that reception cost is only marginally smaller than transmission cost for sensor nodes .",
    "in fact , for fully aggregated queries , a node will receive packets from multiple neighbors , but transmit to only one parent node .",
    "thus , for fully aggregated queries , the total reception cost can be significantly larger than the transmission cost .",
    "surprisingly , it turns out that once we introduce reception cost into the model , the problem of finding optimal routing tree becomes intractable .",
    "the amount of data received by a node is dependent on the number of neighbors and thus to minimize power consumption a node should have as few neighbors as possible .",
    "this optimization problem is np - complete , as shown by the following theorem .",
    "finding maximum lifetime routing tree for fully aggregated queries with reception costs is np - complete .",
    "we shall show that the problem is np - complete even when all nodes have equal power .",
    "the total energy consumption for node @xmath13 per unit time is @xmath14 where @xmath15 is the cost to receive one unit of data and nbr(@xmath13 ) is the number of neighbors of node @xmath13 in the routing tree .",
    "thus to maximize lifetime we need to find a spanning tree for the graph such that the number of neighbors for each node is the minimum , or equivalently we need to minimize the maximum degree of the spanning tree .",
    "but this problem is the same as minimum degree spanning tree ( mdst ) which is known to be np - complete  @xcite .    at this point",
    "we would like to point out an upper bound on the optimal routing lifetime @xmath16 . consider a network where the minimum energy node has energy @xmath17 .",
    "the energy consumption for this node is minimized when it acts as a leaf in the routing tree and does not need to receive any data . in that case",
    "the lifetime of this node itself is @xmath18 ( recall that transmission cost is 1 ) .",
    "thus we have the following upper bound : @xmath19      since finding optimal routing tree is np - complete , in this section we present an algorithm to find a near optimal routing tree . to solve this problem",
    ", we convert the optimization problem to a decision problem . in other words , let us ask the following question : given a network topology and node energy levels , is there a routing tree which has a lifetime @xmath20 ?",
    "then the optimization problem which corresponds to maximizing @xmath20 can be solved by performing a binary search on @xmath20 .",
    "we note that for _ unequal energy levels _ for nodes , mdst is not the optimal solution to the routing tree problem . a node with large energy can support more neighbors than a node with little energy .",
    "so our solution strategy is two step . in the first step",
    "we reduce the general routing tree problem to the mdst problem . in the second step",
    "we solve the mdst problem using an approximation algorithm given by frer and raghavachari@xcite in the context of general spanning tree algorithms .",
    "let us consider a network with nodes having unequal energies @xmath21 .",
    "if the cost of receiving one unit of data is @xmath15 ( @xmath22 ) , then to achieve a lifetime of @xmath20 , each node @xmath13 can have at most @xmath23 neighbors such that the following power constraint is satisfied : @xmath24 which means that the maximum number of neighbors that a node @xmath13 can have is @xmath25 for the root node there is no power constraint and hence we set @xmath26 .",
    "now , for every node @xmath13 in the original graph , introduce @xmath27 auxiliary nodes and connect them to node @xmath13 .",
    "we call this graph with auxiliary nodes the _ augmented graph_. we claim that if we construct the mdst on this graph and from the resulting mdst delete the auxiliary nodes , the resulting spanning tree will have degree at most @xmath23 for every node @xmath13 .    to prove this claim , consider the original and the augmented graphs and their respective spanning trees .",
    "let us call the optimal spanning tree with non - uniform degree bounds @xmath23 to be the non - uniform minimum degree spanning tree ( nmdst ) .",
    "suppose there exists an nmdst on the original graph which satisfies the condition @xmath28 for all @xmath13 where @xmath29 is the degree of node @xmath13 in the nmdst .",
    "the mdst on the augmented graph is simply the nmdst with the auxiliary nodes attached to it .",
    "then every node @xmath13 on the mdst satisfies the _ uniform _ degree bound @xmath30 by construction ( we have introduced @xmath27 auxiliary nodes for each node @xmath13 ) .",
    "conversely , we see that if there exists an mdst with degree bound @xmath1 , then there exists an nmdst which satisfies the degree bound @xmath31 .",
    "we illustrate graph augmentation with the example shown in fig .",
    "[ fig - mdst ] .",
    "we have a 4 node graph whose nodes have energy levels 1 and 3/2 . the actual nodes and edges in the graph",
    "are shown in solid lines , while auxiliary nodes and auxiliary edges are shown in dashed lines . with @xmath32 and @xmath33",
    "we find that we must introduce 3 auxiliary nodes for the nodes with energy 1 and 2 auxiliary nodes for the node with energy 3/2 .",
    "finding the mdst on this graph and deleting the auxiliary nodes immediately leads to the correct routing tree with lifetime 1 .",
    "now we can turn our attention to the mdst problem itself .",
    "the mdst problem is known to be approximable to within opt+1 @xcite . in other words , if the maximum degree of minimum degree spanning tree is opt , then there is a polynomial time algorithm which can produce a spanning tree with maximum node degree opt+1 .",
    "it is easy to convince oneself that if the mdst problem can be solved within opt+1 , then the nmdst problem also can be solved such that @xmath34 .",
    "a detailed discussion of the opt+1 approximation algorithm for finding the mdst can be found in the paper by frer and raghavachari @xcite .",
    "here we describe the algorithm without justifying it .    the full algorithm to find the routing tree",
    "is described here as the algorithm aggregated - tree ( algorithm [ algo - aggregated - tree ] ) .",
    "the algorithm takes as input a graph @xmath35 with vertices @xmath36 and edges @xmath37 and outputs a tree .",
    "the algorithm runs in @xmath38 time @xcite where @xmath39 is the inverse ackermann function , @xmath37 is the number of edges .    for each vertex @xmath40 ,",
    "augment it with @xmath41 vertices according to eqn .",
    "[ eqn - mdst - limit ]    find a spanning tree @xmath42 of @xmath43 .",
    "let @xmath44 be its maximum degree    mark all vertices of degree @xmath44 and @xmath45 as bad .",
    "mark all other vertices as good .",
    "remove all bad vertices of degree @xmath44 and @xmath45 generating a forest @xmath46 from @xmath42 .",
    "find the cycle @xmath47 generated by @xmath42 and the edge @xmath48    mark all bad vertices in @xmath47 as good    update @xmath46 by combining the components and vertices along cycle @xmath47 .",
    "delete an edge incident on @xmath49 to break the cycle @xmath50 and reduce the degree of @xmath49 .",
    "update @xmath42 and if necessary update @xmath44 .",
    "goto 3 .",
    "delete all auxiliary nodes from @xmath42 and output @xmath42 .",
    "let us denote the lifetime achieved by the optimal tree as @xmath16 and lifetime achieved by the approximation as @xmath51 .",
    "then using eqn .",
    "[ eqn - mdst - time ] @xmath52 since the minimum value of @xmath21 is @xmath17 , and @xmath53 ( eqn . [ eqn - upper - bound ] ) , @xmath54 thus our approximation scheme is within a constant factor @xmath55 of the optimal routing tree . as expected from proposition [ prop - optimal - tree ] , for zero receive cost , the approximate lifetime coincides with the optimal lifetime .",
    "in unaggregated queries the volume of data is conserved . all data that is generated in the nodes",
    "must be delivered to the root .",
    "an example of such a query is ` select nodeid from sensors where ( temp > 70 ) ` .",
    "if we assume that the condition ` ( temp > 70 ) ` is satisfied with probability @xmath56 by the sensors , then on the average , every sensor node produces @xmath56 units of data every time period . thus the problem is to route a total of @xmath57 data every time unit from the nodes to the root with every node generating @xmath56 data and no data getting lost . with a rescaling of energy or time unit",
    ", we can convert it to the problem where every node generates one unit of data .",
    "unlike the fully aggregated routing tree problem , finding optimal routing tree for this problem is np - complete _ even when we do not take into account the cost to receive data _ ( theorem [ thm - unaggr ] ) .",
    "so for the sake of simplicity , in this section we shall take account of only transmission costs .",
    "but as the following argument shows , ignoring reception cost does not invalidate our conclusions for realistic networks . in the optimal routing tree ,",
    "consider the node which is most likely to run out of power first .",
    "the data inflow and outflow for this node are @xmath58 and @xmath59 respectively .",
    "total energy consumption per unit time for this node is @xmath60 since this is the highest loaded node , @xmath61 , and we can say that total power consumption is proportional to the transmission power consumption .",
    "thus by rescaling the energy of the nodes by a factor of @xmath62 , we can take into account the most important effects of reception cost .",
    "the plan for the rest of the section is as follows : we first show that the problem of finding optimal routing tree without reception cost is np - complete .",
    "then we formulate the routing tree problem as an integer program and derive an upper bound on the maximum lifetime .",
    "next we give two approximation algorithms to solve this problem and discuss their properties .",
    "to establish the hardness of the optimal routing tree problem , we recast it as a decision problem : given a connectivity graph and node energies , does there exist a routing tree with a given lifetime @xmath20 ?",
    "finding maximum lifetime routing tree for unaggregated queries is np - complete .",
    "[ thm - unaggr ]        the decision problem for this instance is clearly in np . given a graph and the routing tree on it , it is easy to verify whether the routing tree achieves the lifetime @xmath20 .",
    "to show np - completeness , we shall exhibit a reduction from set - cover to the current problem .",
    "the decision problem for set - cover is as follows : we are given @xmath63 elements numbered from @xmath64 .",
    "we are also given @xmath44 subsets of these elements @xmath65 .",
    "the problem is to decide if there exists a selection of @xmath66 subsets from the collection of subsets such that the union of @xmath66 subsets cover all the @xmath63 elements .    given this instance of set - cover , we construct the following instance of the communication graph .",
    "the nodes in the graph are arranged in five rows as shown in fig .",
    "[ fig - reduction ] .",
    "the first row consists of the root node .",
    "the second row consists of two nodes , one with energy @xmath67 and the other with @xmath68 .",
    "both these nodes are connected to the root node .",
    "these two nodes are used to decide which sets will be in the set cover and which will not .",
    "the third row consists of @xmath44 nodes each with energy 2 .",
    "all the nodes in the third row are connected to the node with power @xmath67 .",
    "the fourth row consists of @xmath44 nodes which corresponds to the @xmath44 subsets .",
    "the @xmath69th node in the row has energy @xmath70 .",
    "each of these nodes are connected to the corresponding node on the third row .",
    "also each of these nodes is connected to the node on second row with energy @xmath68 .",
    "the fifth and last row corresponds to the @xmath63 elements and each node has unit energy .",
    "each node corresponding to @xmath71 is connected to the elements that it contains .",
    "for example if @xmath72 contains the elements @xmath73 , then those nodes have links to the node corresponding to @xmath72 .",
    "now we claim that there exists a routing tree with lifetime 1 if and only if a set cover of size @xmath66 exists .",
    "suppose there exists a set cover of size @xmath66 .",
    "then we can construct the routing tree as follows .",
    "the data from the @xmath66 sets and the @xmath63 elements can be routed through the node with power @xmath74 to the root .",
    "the data from rest of the @xmath75 subsets and the @xmath44 nodes in the third row can be routed through the node with power @xmath67 .",
    "conversely if there is a routing tree of lifetime 1 , then the third row nodes with energy 2 ensure that they are carrying data from only @xmath75 subsets .",
    "thus the rest of the @xmath66 nodes constitute a set cover .",
    "although we have used nodes with different powers in this proof , it can be shown @xcite that this problem remains np - complete even if we constrain all nodes to have the same energy .",
    "the proof , which we omit , relies on a pseudo - polynomial reduction @xcite from scheduling .",
    "the optimal unaggregated routing tree problem for equal energy nodes is similar to an np - complete problem that has been studied in the network design literature by the name of capacitated spanning tree @xcite . in capacitated spanning tree problem",
    "we are given a graph @xmath43 with edge weights , a bound @xmath76 and a root node .",
    "the problem is to find a minimum weight spanning tree such that every subtree that is hanging from the root node contains fewer than @xmath76 vertices .    now that we have seen that the optimal routing tree problem is np - complete we would like to investigate the possibility of approximation algorithms for the problem . to evaluate the effectiveness of these approximation algorithms , it is useful to have an upper bound on the optimal solution . in the following section ,",
    "we formulate the routing problem as a linear program which leads us to an upper bound .      in this section ,",
    "we formulate the decision problem as an integer linear program . to do this , we define two sets of _ integer _ variables @xmath77 and @xmath78 for every edge @xmath79 on the graph . if @xmath80 is the parent of @xmath13 in the routing tree , then @xmath81 , else @xmath82",
    "@xmath78 is the data flow that @xmath13 sends to @xmath80 along the edge @xmath79 per unit time .",
    "we are interested in knowing whether there exists a routing tree with lifetime @xmath20 . in that case ,",
    "feasibility of the following integer linear program is equivalent to the decision problem .",
    "@xmath83 the condition ( [ cond1 ] ) ensures that every node has exactly one parent , i.e. the set of edges for which @xmath81 define a tree .",
    "condition ( [ cond2 ] ) is a flow conservation condition .",
    "the outflow from a node is exactly one unit larger than inflow .",
    "condition ( [ cond3 ] ) enforces two things .",
    "first , if @xmath80 is @xmath13 s parent , then @xmath80 must send at least one unit of flow to its parent .",
    "also if @xmath80 is not @xmath13 s parent , then flow along the edge @xmath79 is zero .",
    "second , it makes sure that the outflow from node @xmath13 respects the energy constraint of node @xmath13 .",
    "conditions ( [ cond4 ] ) and ( [ cond5 ] ) are usual positivity conditions .    of course , finding a feasible solution to the integer program is still np - complete , but it gives us a way to find an upper bound for the problem by relaxing the integrality conditions . relaxing the variable @xmath77 to be",
    "any real number between 0 and 1 means that we allow data to be forwarded to more than one node .",
    "thus the relaxed linear program produces a solution which is no longer a tree .",
    "in fact , we shall show that the relaxed problem is equivalent to a maximum flow problem .",
    "with relaxation of integrality conditions , @xmath78 can also be arbitrary real numbers . at this point",
    "the relaxed linear program can be written down without the @xmath77 variables at all .",
    "the new non - integer linear program is @xmath84 if we define a new variable @xmath85 , then the decision problem can be written as a maximization problem : @xmath86 this linear program is equivalent to a maximum flow problem where each node ( except the root ) has a node capacity @xmath21 and acts as a source which sends a flow @xmath20 to the sink which is the root . using conventional maximum flow algorithms@xcite , this problem can be solved in polynomial time .",
    "let us call the maximum lifetime solution to this flow problem @xmath87 .",
    "if the optimum lifetime achievable for the original problem with tree routing is @xmath16 , then @xmath88 . from now on , we shall use @xmath87 as an upper bound on @xmath16 .",
    "for an example graph where @xmath89 , consider the topology shown in fig .",
    "[ fig - flow ] .",
    "we assume that all nodes have energy @xmath4 . in that case",
    ", the figure at right shows an optimal routing tree with lifetime @xmath90 .",
    "the numbers next to the edges denote the amount of data flow along that edge . on the other hand in a maximum flow solution",
    ", we can make the bottom node route its data with probability @xmath90 along one link and with probability @xmath90 along the other link . in this case",
    "the data flow is more equally distributed and the system lifetime is @xmath91 .",
    "we call this type of routing where outflow from a node can reach the root via multiple paths as _ multipath _ routing .",
    "although sensor databases use tree based routing , it is not essential to their functioning ; the only requirement for correct functioning is that there should be no duplication or loss of data packets .",
    "although multipath routing seems to yield significant energy savings , there are some hidden costs to it .",
    "for example if data is transmitted probabilistically to multiple nodes , all the receiving nodes need to be listening in even if the packet is not destined for them .",
    "as we have mentioned , even idle listening consumes significant amount of energy .",
    "thus the benefits of randomized multipath routing depends on the complex interaction between mac and network protocols . in this work",
    "we restrict ourselves to tree routing only .",
    "now we give a heuristic algorithm for computing an approximate routing tree whose basic idea is very similar to prim s algorithm for the minimum spanning tree .",
    "we initialize the routing tree to be the root at first and grow the tree by adding edges one by one until the tree spans all the vertices . at every step we can determine the lifetime of the tree constructed so far by calculating the amount of data each node will be required to forward . to decide which edge to add ,",
    "we add the edge that will maximize the lifetime of the resulting new tree . if there are multiple edges which result in the same lifetime , we choose the edge which will add the node with maximum energy .",
    "we call the lifetime of the tree achieved by this algorithm @xmath92 .",
    "the algorithm is formally described as ecrt in algorithm [ algo - greedy - tree ] .",
    "initialize tree @xmath42 to contain the single node root .",
    "find lifetime @xmath20 of the tree @xmath42 .    find the set of nodes @xmath93 adjacent to @xmath42 .",
    "add node @xmath94 which reduces @xmath20 by the least amount output @xmath42 .",
    "the algorithm ecrt has @xmath1 stages and in each stage a new edge is added . to find the optimal edge to add , we need to check @xmath95 edges and for each edge",
    ", we need to check the lifetime of the resulting tree . if the diameter of the graph is @xmath8 , then to determine the life of the new tree takes no more than @xmath96 time .",
    "thus ecrt runs in @xmath97 time .",
    "this algorithm is not a constant factor approximation algorithm and we state it formally as the following lemma . in the interest of brevity ,",
    "the proof @xcite is omitted .    in the worst case the following lower bound exists for the performance ratio of the ecrt algorithm @xmath98    in other words",
    ", there exists instances of connectivity graphs where the optimal lifetime is better than the lifetime achieved by ecrt by a factor of @xmath99 or larger .",
    "now that we have seen that ecrt is not an optimal algorithm for the routing problem , we ask the question if there is some optimization that can improve is performance . with this aim , we present an algorithm which optimizes a pre - existing routing tree .",
    "consider an optimal routing tree . if any single node in the tree switches its parent to another node , the resulting tree will have a lifetime less than or equal to the optimal tree .",
    "thus for the optimal solution , the choice of parent for every node is optimal .",
    "we now define a routing tree to be _ locally optimal _ , if the lifetime of the tree can not be improved by switching the parent of _ any single _ node .",
    "note that the optimal tree is always locally optimal , but the converse need not be true .",
    "this criterion immediately suggests an approximation algorithm for finding a locally optimal tree which we call local - opt .",
    "the algorithm accepts as input an arbitrary routing tree and considers the nodes sequentially in some particular order .",
    "we try to see if the lifetime of the tree will be improved by switching the parent of the current node in consideration .",
    "if such a switch is favorable , it is made ; otherwise we proceed to the next node .",
    "we call this switch an _ improvement step_. we denote the lifetime achieved by this algorithms as @xmath100 and describe it formally as algorithm [ algo - local - opt ]",
    ".    done @xmath101 false done @xmath101 true switch parent of @xmath40 to improve @xmath42 done @xmath101 false output @xmath42 .",
    "this algorithm is not a constant factor approximation algorithm for the unaggregated routing tree problem as shown by the following lemma . in the interest of brevity ,",
    "the proof @xcite is omitted .    in the worst case the following lower bound exists for the performance ratio of the local - opt algorithm @xmath102    in simpler words",
    ", there exists an instance of a graph where the optimal lifetime is better than the lifetime produced by local - opt by a factor of @xmath103 or more .",
    "the local - opt algorithm can be used as a stand alone algorithm to find an approximate routing tree , or it can be used as an additional optimization on the tree produced by ecrt algorithm .    for performance analysis of local - opt , consider a network with maximum and minimum energies @xmath104 and @xmath17 respectively .",
    "then the maximum lifetime for _ any _ routing tree is @xmath105 where deg(root ) is the degree of the root node .",
    "let us now look at the size of a local improvement step : the smallest size of the improvement step is @xmath106 then the total number of improvement steps are bounded by @xmath107 thus local - opt runs in time polynomial in @xmath108 and @xmath1 .",
    "a partially aggregated query has a psr size which lies between fully aggregated queries and unaggregated queries .",
    "consider as an example a histogram query with @xmath109 bins .",
    "the psr can be just a listing of bins with their associated frequencies .",
    "when the query reply starts out at a leaf node the psr consists of 1 bin which holds the value and the corresponding frequency which is 1 . as more and more data points are added , they begin to fall into distinct bins and the size of the psr increases .",
    "but once the psr size reaches @xmath109 bins , any new data added falls into one of the older bins and hence the psr size reaches a constant .",
    "so we model a partially aggregated query as follows .",
    "every node produces one single unit of data every time period .",
    "as long as the total data inflow into a node is less than @xmath109 , the data remains conserved , i.e. if two psrs reach a node , then the new psr size is just the sum of the two old psr sizes and 1 ( size of its own data ) .",
    "if at any node the sum of the psr sizes exceed @xmath109 , the psr forwarded to the parent has size @xmath109 only .",
    "for @xmath110 , this problem reduces to the problem of unaggregated queries .",
    "the approximation algorithms used to solve the unaggregated routing tree problem can be immediately adapted to solve this problem .",
    "these algorithm depend on being able to find the lifetime @xmath20 of a given tree @xmath42 .",
    "for the unaggregated case , we defined the lifetime @xmath20 as the minimum of the ratio @xmath111 where @xmath112 is the outflow from node @xmath13 . for partially aggregated queries @xmath113 is bound by @xmath109 . with this modification , both the ecrt and local - opt algorithms can be easily applied to this problem .",
    "we evaluated our algorithms on simulated communication graph topologies .",
    "the simulation parameters are described below .    *",
    "_ node distribution _ : to generate the graph we randomly place @xmath1 nodes in an area of size @xmath114 .",
    "the node numbered 1 is arbitrarily chosen as the base station . *",
    "_ connectivity _ : we set the radio range to be @xmath115 . since our length units are arbitrary , we define a scaled radio range @xmath7 as follows : @xmath116 one can think of @xmath117 is the average separation between nodes .",
    "thus for a given placement of nodes , the communication graph consists of nodes as vertices and edges between nodes which are within range of each other .",
    "we expect that for radio range @xmath118 , the graph will be disconnected . in practice",
    "the approximate connectivity threshold turns out to be @xmath119 . a representative connectivity graph with @xmath120 is shown in fig .",
    "[ fig - graph ] . * _ energy distribution _ : the energy levels for nodes are chosen randomly from a uniform distribution between @xmath121 , the maximum and @xmath17 , the minimum . the range of possible values of energy are controlled by tuning the _ energy ratio _ @xmath39 defined by @xmath122 we chose @xmath104 and @xmath17 such that the average is 1000 .",
    "for example when @xmath123 , all nodes are assigned energy 1000 , while for @xmath124 , nodes are assigned random energy values between 667 and 1333 . *",
    "_ energy cost _ : we assume that transmitting one unit of data costs 1 unit of energy , while receiving the same amount of data costs 0.5 units , i.e. @xmath125 .     area with radio range set to 15 ( @xmath120).,scaledwidth=60.0% ]    currently the sensor databases use shortest path routing with path length equal to number of hops .",
    "we call this strategy min - hop and compare our algorithms ecrt , and local - opt to it . note that the routing tree produced by the min - hop algorithm is same as the breadth - first - search ( bfs ) tree for the graph .      ) .",
    "there are @xmath126 nodes.,scaledwidth=45.0% ]    in fig .",
    "[ fig - mdst - life - vs - range ] we plot the performance of the aggregated - tree algorithm vs the min - hop algorithm .",
    "we used two different energy distributions : @xmath123 , i.e. @xmath127 and @xmath128 with @xmath129 .",
    "we note that aggregated - tree significantly outperforms the min - hop for all values of @xmath7 .",
    "but apart from that there are several interesting features to be seen in fig .",
    "[ fig - mdst - life - vs - range ] . as the range @xmath7",
    "is raised from 1.5 to 3 , the performance of min - hop declines while the performance of aggregated - tree improves . with increasing range , the graph connectivity increases and",
    "min - hop tree becomes bushier .",
    "thus every node acquires more neighbors and min - hop tree lifetime decreases . on the other hand , with more connectivity , aggregated - tree is able to reduce the maximum degree and thus perform better and better .",
    "after @xmath130 , the min - hop lifetime begins to rise again because now most of the nodes are being able to connect to the root directly .",
    "in contrast , the aggregated - tree lifetime saturates .",
    "the optimal lifetime tree for energy ratio @xmath123 is limited by the maximum degree which can not be smaller than 2 . for degree 2 , the lifetime is @xmath131 and the graph shows that for @xmath132 , this lifetime is achieved . for energy ratio @xmath133 , the lifetime is limited by the minimum energy node which has energy @xmath134 .",
    "a lifetime of 400 can be achieved if the minimum energy node is a leaf and for @xmath135 , this is achieved ( eqn .",
    "[ eqn - upper - bound ] ) .      ) .",
    "there are @xmath136 nodes with all equal energy ( @xmath123 ) of 1000 units.,scaledwidth=45.0% ]    in fig .",
    "[ fig - life - vs - range ] we plot the performance of ecrt , local - opt , and min - hop algorithms as a function of radio range . as an upper limit , we also plot @xmath87 which is equivalent to a maximum flow on the graph .",
    "naturally the nodes closest to the root node are the most heavily loaded .",
    "as we increase the range @xmath7 , the graph begins to become more and more connected and the number of nodes next to the root begins to rise ; hence the lifetime increases .",
    "as expected , min - hop performs the worst because it is not sensitive to energy .",
    "the local - opt algorithm was initialized with a min - hop tree and it performs better than ecrt .",
    "we also plotted the effect of optimizing the solution of the ecrt algorithm by using local - opt on it .",
    "the optimized solution is only marginally better than local - opt by itself .    )",
    ".,scaledwidth=45.0% ]    the effect of changing the distribution of energy values is shown in fig .",
    "[ fig - life - random ] .",
    "we varied the energy ratio @xmath137 from 1 to 4 .",
    "the effect on the average system lifetime was minimal .      )",
    ".,scaledwidth=45.0% ]    consider a network with all nodes having equal energy .",
    "for any tree algorithm , the best performance is achieved when the sizes of the subtrees that are rooted at the immediate neighbors of the root node are equal .",
    "the chance of doing this increases as the number of nodes and hence number of paths in the network increases .",
    "so we expect that with increasing @xmath1 , our approximation algorithms will perform close to optimal .",
    "quantitatively , we define a quantity called _ performance ratio _ as follows : @xmath138 closer this ratio is to 1 , better the algorithm . in fig .",
    "[ fig - flow - greedy - ratio ] , we plot the performance ratio of the ecrt and local - opt algorithms as a function of @xmath1 .",
    "the graph clearly demonstrates that both algorithms approach the optimal solution as @xmath1 increases , but local - opt is much quicker in convergence .",
    "optimization of the ecrt solution by the local - opt algorithm yields marginally better results .      ) , while the bottom graph shows lifetime for unequal energy levels ( @xmath139 ) .",
    "the total number of nodes @xmath1 is 100 and range is @xmath140.,title=\"fig:\",scaledwidth=45.0% ] ) , while the bottom graph shows lifetime for unequal energy levels ( @xmath139 ) .",
    "the total number of nodes @xmath1 is 100 and range is @xmath140.,title=\"fig:\",scaledwidth=45.0% ]    recall that for partially aggregated queries , the message size ( or the psr size ) increases from leaves towards the root , but it can not exceed a limit which we call @xmath109 . we plot the system lifetime as a function of @xmath109 in fig .",
    "[ fig - life - vs - limit ] . for large @xmath141 , this problem becomes identical to the unaggregated query problem .",
    "the upper graph shows the results for equal energy case ( @xmath123 ) , while the lower graph shows the results for unequal energies ( @xmath139 ) .",
    "as expected , we see that local - opt and ecrt algorithms perform significantly better than the min - hop algorithm for most values of @xmath109 . for small values of @xmath109 , being able to distribute load uniformly across sensors is no longer crucial and thus all the algorithms perform similarly .",
    "although for large @xmath109 , local - opt outshines ecrt , for intermediate values of @xmath109 , ecrt does better .",
    "we conjecture that for small values of @xmath109 , small local changes in the routing tree do not lead to improvements in lifetime and thus local - opt stops improvement steps too early .",
    "the best results are achieved when we optimize the output of the ecrt algorithm by using it as the input to local - opt .",
    "we have argued that the problem of energy efficient routing in sensor databases is intimately connected with the type of query that the database is expected to answer . for many types of queries , we have shown that the problem of efficient tree routing is np - complete .",
    "for fully aggregated queries , we have given a constant factor approximation algorithm ; for other problems we have given heuristic algorithms which exhibit excellent performance in practice and for large networks approach the optimal solution .",
    "vijay raghunathan , curt schurgers , sung park , and mani  b. srivastava , `` energy - aware wireless microsensor networks , '' , p.  40 , march 2002 .",
    "k.  kalpakis , k.  dasgupta , and p.  namjoshi , `` maximum lifetime data gathering and aggregation in wireless sensor networks , '' in _",
    "ieee networks02 conference _ , 2002 .",
    "bhaskar krishnamachari , deborah estrin , and stephen  b. wicker , `` the impact of data aggregation in wireless sensor networks , '' in _ proc of the 22nd international conference on distributed computing systems _ , 2002 , pp .",
    "575578 .",
    "azzedine boukerche , xiuzhen cheng , and joseph linus , `` energy - aware data - centric routing in microsensor networks , '' in _ proc . of the 6th international workshop on modeling analysis and simulation of wireless and mobile systems _ , 2003 , pp .",
    "4249 .",
    "m  furer and b  raghavachari , `` approximating the minimum degree spanning tree to within one from the optimal degree , '' in _ proceedings of the 3rd annual acm - siam symposium on discrete algorithms ( soda ) _",
    ", 1992 , pp ."
  ],
  "abstract_text": [
    "<S> wireless sensor networks offer the potential to span and monitor large geographical areas inexpensively . </S>",
    "<S> sensor network databases like tinydb @xcite are the dominant architectures to extract and manage data in such networks . </S>",
    "<S> since sensors have significant power constraints ( battery life ) , and high communication costs , design of energy efficient communication algorithms is of great importance . </S>",
    "<S> the data flow in a sensor database is very different from data flow in an ordinary network and poses novel challenges in designing efficient routing algorithms . in this work </S>",
    "<S> we explore the problem of energy efficient routing for various different types of database queries and show that in general , this problem is np - complete . we give a constant factor approximation algorithm for one class of query , and for other queries give heuristic algorithms . </S>",
    "<S> we evaluate the efficiency of the proposed algorithms by simulation and demonstrate their near optimal performance for various network sizes .    </S>",
    "<S> sensor networks , graph theory , mathematical programming / optimization </S>"
  ]
}
{
  "article_text": [
    "the monte carlo simulation of statistical models with a rugged free energy landscape is notoriously difficult . at low temperatures",
    "the simulation might get stuck in one of the valleys of the free energy , which leads to very large auto - correlation times .",
    "one way to overcome this problem is the so called parallel tempering algorithm , also called random exchange method or multiple markov - chain method  @xcite .    in a parallel tempering simulation , @xmath0 replicas of the statistical system",
    "are simulated in parallel at different temperatures . from the low temperature which is the target of the investigation ,",
    "a tower of intermediate temperatures is built up to a point , where the configurations can move easily from one valley of the free energy to an other .",
    "let us denote the inverse of these temperatures by @xmath1 .",
    "the parallel tempering method involves two components .",
    "one is the update of each individual replica , independently of the others , using a standard algorithm , e.g. local metropolis updates .",
    "the other are updates that allow to swap two configurations between neighboring temperatures . with this step",
    ", configurations can travel from low to high temperatures and back and thereby bypass the barriers at low temperatures .    in most implementations ,",
    "this is realized by proposing the exchange of the field configurations at inverse temperatures @xmath2 and @xmath3 .",
    "this is accepted with the probability @xmath4 \\ , \\ ] ] where @xmath5 and @xmath6 are the values of the hamiltonian of the replica at @xmath3 and @xmath7 , respectively . for most systems , this is an inexpensive step , however , if the temperatures are chosen too far apart , the acceptance rate will very quickly drop to zero . therefore , the @xmath2 have to be chosen close enough such that the acceptance rate @xmath8 .",
    "in particular for large systems , this can require the use of large numbers of intermediate temperatures , at each of which a replica has to be simulated .",
    "here we discuss modifications of the replica exchange step of the algorithm .",
    "the basic idea is to not simply swap the two replica , but to modify them in such a way as to improve the probability that the move is accepted .",
    "these modifications lead to a higher acceptance rate at given differences @xmath9 or the same acceptance rates can be achieved using larger differences in the inverse temperature .",
    "we like to mention that in @xcite annealed swapping is used to this end .",
    "the authors of @xcite , who have simulated the two - dimensional xy model on the square lattice , could indeed reach larger steps in the temperature , however , this progress does not compensate for the additional effort needed for the auxiliary update steps .",
    "the authors of @xcite have performed a molecular dynamics simulation of 10 classical non - interacting particles in a potential with several local minima .",
    "they find that annealed swapping `` is able to achieve the computational efficiency of ordinary replica exchange , using fewer replicas . ''    in this work , we shall discuss these methods for the example of the three - dimensional heisenberg spin glass , however , they are quite general and can be easily adapted to other models .",
    "the monte carlo simulation of spin glasses in general is quite challenging .",
    "for the three - dimensional ising spin glass at the transition temperature and at temperatures below , only lattices up to @xmath10 have been simulated @xcite . while there is consensus that the model undergoes a second order phase transition , the error bars of critical exponents are quite large .    in this letter",
    ", we discuss the case of the physically more realistic heisenberg spin glass , where even the nature of the phase transition is still under debate .",
    "recent works are @xcite .",
    "we consider the heisenberg spin glass on a simple cubic lattice with periodic boundary conditions .",
    "the classical hamiltonian is given by @xmath11 where the field variables @xmath12 are unit vectors with three real components ; @xmath13 and @xmath14 denote the sites of the lattice .",
    "the summation runs over pairs @xmath15 of nearest neighbor sites .",
    "the @xmath16 are nearest neighbor interactions with a gaussian distribution of zero mean and standard deviation unity . for each set of these quenched interactions ,",
    "the expectation values of the observables are computed and then averaged over different realizations of the @xmath16 .",
    "in order to study the performance of the algorithm , we have measured the overlap susceptibility , which is constructed from the overlap variable @xmath17 where @xmath18 and @xmath19 are the fields at the site @xmath13 of two statistically independent configurations @xmath20 and @xmath21 . the overlap susceptibility",
    "is then given by @xmath22 ^ 2 \\ .\\ ] ] furthermore , we have measured the internal energy defined by @xmath23    in a physics study of the model , one would consider a larger list of quantities , including e.g. the second moment correlation length and various cumulants .",
    "also one might study so called chiral quantities ; see refs .",
    "@xcite for their definition .    to get the two independent configurations required by eq .",
    "( [ eq : over ] ) , we simulated , as it is usually done , two copies of the system for each of the temperatures .",
    "alternatively one might simulate a single copy and store the configurations on disk .",
    "then one can combine configurations that are separated by @xmath24 in the markov chain , where @xmath25 is the autocorrelation time .",
    "in the following two sections , we describe two methods , which improve on the traditional replica exchange between neighboring temperatures . the first is a decimation procedure , where we study the update under an effective action in which half the fields have been integrated out .",
    "it is described in sec .  [",
    "sec : dec ] . in the second procedure , given in sec .",
    "[ sec : smear ] , we apply an invertible cooling / heating transformation of the fields , which leads also to a higher acceptance in the exchange step . for completeness",
    ", we give the details of the hybrid - overrelaxation algorithm used to simulated the individual replica between the exchange steps in sec .",
    "[ sec : hor ] .",
    "the method described in this section is applicable to general models , where a sub - set of lattice points can be chosen such , that they do not interact among each other .",
    "since the generalization to other models , e.g. the ising spin glass , is trivial , we stay in our discussion with the heisenberg spin glass model on the simple cubic lattice .",
    "the partition function in terms of the action @xmath26=\\beta h[\\{\\vec{s}\\,\\ } ] = - \\beta \\sum_{<xy > } j_{xy } \\ ;    \\vec{s}_x \\cdot \\vec{s}_y\\ ] ] is given by @xmath27 \\exp(-s[\\beta,\\{\\vec{s}\\,\\ } ] ) \\;.\\ ] ] the simple cubic lattice can be divided into two sub - sets of points , one called white ( @xmath28 ) , the other black ( @xmath29 ) , such that the black points have only white neighbors and vice versa .",
    "this allows us to write the partition function as @xmath30        \\prod_{x \\in b } \\left[\\int \\mbox{d } \\vec{s}_x   \\right ]          \\exp(-s[\\beta,\\{\\vec{s}\\,\\ } ] ) \\ , \\ ] ] where now all the integrations over the fields on the black sites can be performed : @xmath31      \\exp(-s[\\beta,\\{\\vec{s}\\,\\ } ] )    = \\prod_{x \\in b } \\left [ \\int \\mbox{d } \\vec{s}_x     \\exp(\\beta \\ ; \\vec{s}_x \\cdot \\vec{s}_x ) \\right ]     =   \\prod_{x \\in b } i(\\beta \\ ; \\vec{s}_x)\\ ] ] where @xmath32 is the sum over the fields on the nearest neighbor sites of @xmath13 . in eq .",
    "( [ xxxy ] ) we have introduced the abbreviation @xmath33 in the case of the heisenberg model , this integral can be easily performed @xmath34 where we have rotated the problem such that @xmath35 is a multiple of @xmath36 and @xmath37 . putting everything together",
    ", the partition function reads @xmath38       \\exp(-\\tilde s[\\beta , \\{\\vec{s}\\,\\}_w ] ) \\ \\ \\text{with } \\ \\",
    "s[\\beta , \\{\\vec{s}\\,\\}_w ] = - \\sum_{x \\in b } \\ln i(\\beta \\ ; \\vec{s}_x ) \\ ; , \\ ] ] where the subscript @xmath28 indicates that @xmath39 depends only on the fields on the white sites .",
    "now we perform a tempering step with the fields on the white sites only , using the action @xmath40 . given a field @xmath41 at @xmath42 and a field @xmath43 at @xmath44 , the proposal is to swap to @xmath43 at @xmath42 and @xmath41 at @xmath44 .",
    "the acceptance probability for this swap is given by @xmath45 \\;.",
    "\\label{eq : aswap}\\ ] ]    in the case of the heisenberg model , the evaluation of this expression is relatively simple .",
    "first we notice that the prefactors @xmath46 cancel .",
    "therefore it remains to evaluate @xmath47 , for which details are given in appendix  [ app ] .    in principle",
    ", one could also perform the updates using the decimated action @xmath48 .",
    "however there is no efficient update for this action .",
    "the best idea might be to perform local metropolis updates of @xmath49 .",
    "this would require to evaluate @xmath50 , which is relatively expensive .    instead , after the tempering step , we insert the fields on the black sites again , using their ( local ) boltzmann weight . technically , this is done in exactly the same way as a heatbath update is performed .",
    "having restored the fields on the black sites , we can perform overrelaxation and heatbath sweeps as usual .    in our simulations , in order to save cpu - time , we only insert new fields on the black sites if the swap is accepted , otherwise the fields keep their old values .",
    "furthermore , we alternate the role of black and white sites from one pair of @xmath51-values to the next . in the case of the first pair , we chose randomly whether the fields on black or white sites are decimated .",
    "let us now turn to the second idea to improve the replica exchange step .",
    "inspired by the field transformations proposed in the framework of the hybrid monte carlo algorithm @xcite , it improves on the standard step , which exchanges just the configuration @xmath52 evaluating the action at the respective other parameters by applying an invertible field transformation to the configurations @xmath53 this can be successful , if we manage to find a transformation , which transforms a `` typical '' configuration from temperature no . 1 into one more like those at temperature no . 2 and vice versa .",
    "obviously this update is reversible .",
    "for the acceptance probability one has to take the jacobian determinant @xmath54 of the transformation into account . for a general transformation we can then use the acceptance probability @xmath55   -\\beta_2   h[{\\cal f}^{-1 } ( \\{\\vec{s}\\,\\}^ { 1 } ) ] \\right \\ } }   { \\det j_{\\cal f}(\\{\\vec{s}\\,\\}^ { 1 } )   \\exp\\left \\{-\\beta_1 h[\\{\\vec{s}\\,\\}^ { 1 } ]    -\\beta_2   h [ ( \\{\\vec{s}\\,\\}^ { 2 } ) ]   \\right \\ } } \\right ] \\;.\\ ] ]    for most transformations , computing the jacobian is a very cumbersome task , it is therefore advisable to use a transformation , which is composed of elementary steps @xmath56 , which only manipulate one field variable at a time and only depend on its nearest neighbors .",
    "then the jacobian matrix @xmath57 , where @xmath58 , can be easily computed along with its determinant .    for the heisenberg spin glass ,",
    "we propose a transformation which is cooling the configuration when moving towards a lower temperature and heating it up when moving towards a higher one .",
    "the specific @xmath56 we tested here is given by @xmath59 with @xmath60 where @xmath61 is a tunable parameter .",
    "@xmath62 is the vector in the @xmath12@xmath35 plane orthogonal to @xmath12 @xmath63 with @xmath35 as defined in eq .",
    "( [ bigs ] ) .",
    "in case of cooling , it reduces the angle between the @xmath64 and @xmath12 by @xmath65 . for the inverse operation",
    ", a non - linear equation has to be solved .",
    "this can be achieved by a simple newton iteration which converges very quickly .    in order to compute the jacobian of the transformation @xmath56 ,",
    "we rotate the coordinate system of the integration over @xmath12 such that the @xmath66-axis is parallel to @xmath35 .",
    "since only the angle @xmath67 between @xmath12 and @xmath35 is altered , the relevant integration measure is @xmath68 . for the angle after the cooling @xmath69",
    ", we therefore have @xmath70 and we get for the jacobian determinant @xmath71 which has to be accumulated multiplicatively over all steps of the cooling / heating in order to get the aggregated value for the whole sweep .",
    "one might expect that the optimal value of the parameter @xmath61 depends on the pair of temperatures .",
    "however , to keep things simple , we have used the same value of @xmath61 for all of them . since @xmath72 decreases with increasing lattice size @xmath73 , also the optimal value of @xmath61 is decreasing with increasing @xmath73 . in order to tune @xmath61",
    "we have monitored the acceptance rate @xmath74 .",
    "reasonable estimates of @xmath74 can already be obtained from rather short runs ; here we performed runs with 10000 cycles each .",
    "the optimal value does not depend strongly on the particular set of coupling constants .      in an elementary step of the algorithm ,",
    "the field at a single site of the lattice is updated . using these updates , we sweep through the lattice in typewriter fashion . to this end",
    "we use heat - bath and overrelaxation updates : in the case of the heat - bath update , we chose the component of the new field that is parallel to the nearest neighbor sum @xmath35 , defined in eq .",
    "( [ bigs ] ) , as @xmath75 where @xmath76 and @xmath77 is a random number that is uniformly distributed in @xmath78 $ ] .",
    "the two orthogonal components @xmath79 where @xmath80 is uniformly distributed in @xmath81 $ ] . in an elementary overrelaxation",
    "update the field @xmath12 is replaced by @xmath82 the overrelaxation update takes considerably less cpu - time than the heat - bath update , since it requires neither random numbers nor the evaluation of transcendental functions .",
    "the overrelaxation update by itself is not ergodic , since it keeps the energy constant .",
    "therefore it has to be supplemented by metropolis , or as it is the case here , heat - bath updates .",
    "it has been demonstrated that such a hybrid of heat - bath and overrelaxation updates is clearly more efficient than heat - bath updates alone . for",
    "a discussion see for example section iv of @xcite .",
    "in order to test the performance of the algorithm , we have performed simulations for @xmath83 , @xmath84 and @xmath85 .",
    "setting up the simulation , we closely follow ref .",
    "@xcite : in the tempering algorithm , we simulate temperatures @xmath86 from @xmath87 up to @xmath88 .",
    "the intermediate temperatures are given by @xmath89 where @xmath90 , with @xmath91 and @xmath92 is used for @xmath83 , @xmath84 and @xmath85 , respectively .",
    "for each tempering update , we perform a heat - bath sweep followed by @xmath93 overrelaxation sweeps , again as in ref .",
    "we have not used improvements of this strategy studied in refs .",
    "@xcite , since they are complementary to the ones discussed here .",
    "in our implementation , a heat - bath sweep takes about 5 times more cpu - time than an overrelaxation sweep . in the case of the standard",
    "tempering update the cpu - time needed is small compared with that needed for a heat - bath sweep . for the decimation , the tempering update takes a little less cpu - time than a heat - bath sweep , while for the cooling / heating method the tempering update takes about twice the cpu - time of a heat - bath sweep . in particular in the case of the cooling / heating method , we did not spent much time on optimizing our implementation . in both cases , the cpu - time taken by the tempering update is still clearly smaller than that required by the total of the heat - bath and the overrelaxation sweeps .    in the following",
    ", we will use the acceptance rate of the replica exchange step , the round trip time of the replicas and the auto - correlation time of the overlap susceptibility as figures of merit for the performance of the algorithm .",
    "since they might depend strongly on the particular set of couplings @xmath94 , it is quite important to test all variants of the parallel tempering algorithm on the same sets . for each of the lattices sizes ,",
    "we have therefore generated ten realizations of the @xmath94 , on which we performed our tests .    in the case of the standard and the decimation tempering ,",
    "we have performed 100000 , 200000 and 500000 update cycles for each @xmath94 for @xmath83 , @xmath84 and @xmath85 , respectively . for the cooling / heating method we have performed 500000 update cycles throughout .",
    "these numbers are clearly larger than the number of update cycles required for equilibration . in the following , we use @xmath95 for @xmath83 and @xmath96 for @xmath97 .      in table",
    "[ acceptance ] , we have summarized our results for the acceptance rates of the tempering update .",
    "we find that for the given choice of @xmath2 , the acceptance rates can approximately be doubled by our improved tempering methods . in almost all cases ,",
    "the acceptance rate slightly increases with increasing @xmath51 ; only in the case of the cooling / heating method there is a decrease for @xmath83 .",
    "it seems that our choice of the parameter @xmath61 of the cooling / heating procedure for @xmath83 is better suited for small values of @xmath51 than for large ones . for @xmath97 ,",
    "the situation is just the opposite .",
    "it seems to be beneficial , to tune @xmath61 for each pair of @xmath51 values separately .    in the case of @xmath97",
    ", we tried to determine by how much we can reduce @xmath98 in the case of the improved tempering , here only considering decimation . for two of the coupling sets , we performed runs using @xmath99 instead of @xmath100 .",
    "we find acceptance rates of @xmath101 up to @xmath102 , i.e. still a bit larger than with the standard tempering and @xmath100 .    .",
    "[ acceptance ] we give the acceptance rates for the standard and our two improved tempering methods as a function of the lattice size .",
    "the acceptance rates depend mildly on the pair of @xmath51-values of the swap . in all cases",
    "it is a monotonic function of @xmath51 . in the table",
    "we give the acceptance rate for the pairs with the smallest and largest values of @xmath51 . [ cols=\"^,^,^,^ \" , ]     next we have computed integrated autocorrelation times defined by @xmath103 where @xmath104 is the normalized autocorrelation function defined by @xmath105 and the upper end of the summation is chosen self - consistently as @xmath106 .",
    "since the integrated autocorrelation times of the overlap susceptibility are larger than those of the internal energy , we shall only discuss the former in the following .",
    "we have computed @xmath107 for the three choices @xmath108 , @xmath109 and @xmath110 .",
    "the extracted auto - correlation times differ considerably due to rather long tails in the auto - correlation functions .",
    "the variation of the integrated autocorrelation time over the different coupling sets is similar to that of the round - trip times . on the other hand ,",
    "the relative speed - up in the autocorrelation times that is obtained by the improved tempering methods depends only little of the parameter @xmath111 and the coupling set . in table",
    "[ speedchi ] we give the speed - ups obtained with @xmath108 .",
    "the improvement found here is somewhat larger than that seen in the round trip times .",
    "the equilibration time is an important quantity in spin glass simulations , because in order to perform the averages over different coupling sets , many ensembles have to be simulated , in particular since the variation of interesting observables turns out to be large .",
    "unfortunately , we were not able to systematically study the equilibration . to get an impression",
    ", we have focussed on the coupling set 5 for @xmath83 .",
    "this coupling set has the largest round - trip time among the 10 sets that we have studied .",
    "we did the first 1000 iterations of the update 2000 times with different random seeds .",
    "all these 2000 simulations are started with @xmath112 . in figure [ equiplot ]",
    "we give the averages of the overlap susceptibility for @xmath113 as a function of the monte carlo time .",
    "we see a clear speed - up comparing the standard tempering simulation with the improved tempering one , e.g. the value 400 is reached at @xmath114 in the case of the improved simulation , while in the case of the standard simulation this is the case for @xmath115 .",
    "these 2000 simulations did cost about 4 days of cpu time .",
    "therefore we abstained from redoing such simulations for all our coupling sets and for larger values of @xmath73 .",
    "in this letter , we discuss two methods to improve on the replica exchange step of parallel tempering . the key idea in both",
    "is not to leave the configurations as they are and try to swap them between temperatures , but to transform them during this step . in both methods",
    ", we find an improvement of the step by roughly a factor of two .",
    "this work was supported by the dfg under the grant no ha 3150/2 - 1 and through the sfb / tr 9 .",
    "here we give details of the fast numerical evaluation of @xmath47 , which appears in eq .",
    "( [ eq : aswap ] ) .",
    "first we write @xmath116 ) \\ ] ] for which we need to compute @xmath117 $ ] efficiently .",
    "we use @xmath118   = r_x + \\ln[1-\\exp(-2 r_x)]\\ ] ] and proceed , depending on the value of @xmath119 in the following way : for @xmath120 , within the numerical precision of double precision numbers @xmath121 = 0 $ ] . for @xmath122",
    ", we have used a pre - computed table , for @xmath123 in order to get @xmath121 $ ] for any @xmath119 in @xmath122 , we have quadratically interpolated the entries of this table .",
    "we have checked that the error of this evaluation is at most of the order @xmath124 . if @xmath125 , which very rarely happens in the simulation , we have used the functions of the c - library to compute @xmath121 $ ] .      c. j. geyer in _ computer science and statistics : proc . of the 23rd symposium on the interface _ , edited by e. m. keramidas ( interface foundation , fairfax station , 1991 ) , p. 156 ; k. hukushima and k. nemoto , j.  phys .",
    "jpn .  * 65 * , 1604 ( 1996 ) ; for a review , see d. j. earl and m. w. deem , phys .",
    "* 7 * , 3910 ( 2005 ) .",
    "l. a. fernandez , v. martin - mayor , s. perez - gaviro , a. tarancon , and a. p. young , _ phase transition in the three dimensional heisenberg spin glass : finite - size scaling analysis _ , [ arxiv:0905.0322v2 ] , phys .",
    "b * 80 * , 024422 ( 2009 ) ."
  ],
  "abstract_text": [
    "<S> we discuss methods that allow to increase the step - size in a parallel tempering simulation of statistical models and test them at the example of the three - dimensional heisenberg spin glass . </S>",
    "<S> we find an overall speed - up of about two for contemporary lattices . </S>"
  ]
}
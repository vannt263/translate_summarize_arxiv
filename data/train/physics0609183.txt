{
  "article_text": [
    "detailed activity registers of the oss community reside in centralized source code repositories , like the concurrent version system ( cvs ) @xcite . during the process of software change ,",
    "developers access files to add , change or remove one or more lines of source code .",
    "the cvs database tracks each file revision submitted by a developer .",
    "the activity of many developers progresses in parallel with simultaneous changes to many files .",
    "however , the cvs system provides some mechanisms to ensure that any given file can not be changed by more than one developer simultaneously .",
    "in addition , the cvs stores all source code files required to build the software system .",
    "we have shown this set of project files describes a complex network with an asymmetric scale - free architecture @xcite .",
    "following @xcite , we can reconstruct this software network @xmath9 from the collection of source code files , where each node @xmath10 represents a single source file and the link @xmath11 indicates a compile - time dependency between files @xmath12 and @xmath13 ( see fig.1a ) .",
    "it can be shown that the number of links @xmath14 growths logarithmically with the number of nodes @xmath15 in the software network @xcite .",
    "our analysis combines structural information provided by the software network with the time series of file changes stored in the cvs .",
    "we have validated our results with several software projects @xcite .",
    "we have analysed the aggregated activity of software developers at different timescales . given a fixed measurement time window @xmath16 ,",
    "we measure development activity by looking at the dynamics of single file changes :    @xmath17 } { c_i   ( \\tau ) }   \\label{eq.2}\\ ] ]    where @xmath18 when file @xmath12 has been changed at time @xmath19 and @xmath20 otherwise .",
    "notice how eq .",
    "( [ eq.2 ] ) corresponds to the coarse - graining of the time series of file change events . in the following",
    ", we will omit the subscript @xmath16 whenever the timescale is implicit .",
    "we also define global activity @xmath21 or the number of project changes at time @xmath19 :    @xmath22    in figure [ f.2]d we display the scaling of fluctuations with the average activity ( see eq .",
    "( [ scaling ] ) ) in a software project at different time scales .",
    "there is a dependence of the scaling exponent with the time window @xmath16 .",
    "the observed exponent is less than 1 for a wide range of time scales ( see [ f.2]b ) , thus suggesting and endogenous origin of development activity .",
    "on the other hand , the analysis of fluctuations in various oss projects at monthly and large time scales yields an exponent closer to 1 ( see [ f.2]c ) .",
    "the external driving force becomes stronger when @xmath16 increases . in the following",
    ", we further investigate the origin of fluctuations in software development dynamics with a more robust measure .",
    "we can determine if oss dynamics has an endogenous or exogenous origin by separating internal and external contributions @xcite .",
    "we split the timeseries of individual file changes @xmath2 in two different components : ( i ) internal fluctuations @xmath23 governed by local interaction rules and ( ii ) external fluctuations @xmath24 caused by environmental variations , that is ,    @xmath25    where the external activity @xmath24 represents the expected fraction of changes shared by file @xmath12 :    @xmath26    here @xmath27 is file centrality @xcite , defined as the overall fraction of changes received by the file @xmath28 :    @xmath29    and @xmath30 is the timespan of software development .",
    "notice that file centrality @xmath27 is independent of the observation window @xmath16 . by definition ,",
    "external fluctuations allways scale linearly with the average number of file changes , @xmath31 . on the other hand ,",
    "the exponent @xmath32 governing the scaling of internal fluctuations with average flux @xmath33 indicates if dynamics has an endogenous ( @xmath34 ) or exogenous ( @xmath35 ) origin .",
    "interestingly , we observe a crossover in the internal activity of open - source software development depending on the average number of file changes @xmath36 ( see fig . [ f.3]a ) .",
    "the crossover is less visible at large time scales @xmath16 .",
    "the analysis of single node fluctuations provides additional evidence for this crossover .",
    "the ratio @xmath37 between external and internal fluctuations indicates wether node dynamics is external ( @xmath38 or internal ( @xmath39 . in order to characterize the system s overall behavior , we can compute the distribution of ratios @xmath40 @xcite .",
    "this measure was shown to be robust to variations in the measurement time window @xmath16 .",
    "for example , figure [ f.3 ] displays the distribution of ratios @xmath40 measured in two different subsets of files in the apache project .",
    "on the one hand , we can see that @xmath41 is peaked around @xmath42 ( see fig .",
    "[ f.3]c ) for the subset of files with @xmath43 .",
    "this suggests exogenous activity in a core set of project files ( those depicted with black circles in fig.[f.3]a and fig.[f.3]c ) .",
    "moreover , @xmath41 is skewed towards lower ratios ( around @xmath44 ) for project files with @xmath45 ( white circles in fig.[f.3]a and fig.[f.3]b ) . on the other hand ,",
    "activities involving less changed files have an endogenous origin ( see fig . [",
    "crossover in internal fluctuations stems from the inhomogeneous nature of software development .",
    "a large development effort aims to a small number of core files , which change more frequently than other project files . in a related paper ,",
    "network heterogeneity was shown to have an impact in the dynamics of diffusion processes @xcite .",
    "when the diffusive process is multiplicative and the underlying topology is intrinsically inhomogeneous , there is a crossover from @xmath34 to @xmath46 in the scaling of fluctuations with the average flux ( eq.([scaling ] ) ) .",
    "such diffusive network processes can be modeled through the langevin equation by a mean - field approximation @xcite .",
    "the change of mass at node @xmath47 during a unit time interval is :    @xmath48    where the second term represents the incoming mass from the nearest neighbors and @xmath49 is a uniform random variable ( i.e. , multiplicative noise term ) . because we are focusing in the internal diffusion process we do not take into account additional terms like outgoing mass and/or uncorrelated gaussian noise .",
    "this type of diffusion processes display a characteristic scaling in the probability distribution @xmath50 @xcite .",
    "the continuous approximation of the previous equation is    @xmath51    where @xmath52 denotes the average degree of a node s nearest neighbors . because @xmath49 and @xmath53 are independent variables and assuming that @xmath52 is function of @xmath54 :    @xmath55    where @xmath56 indicates the average incoming mass in the nearest neighbors of a node . for the barabsi - albert network @xcite ,",
    "the numerical solution of the above equation shows that @xmath57 decreases as @xmath58 increases and then saturates to a constant value for @xmath59 ( see @xcite for details ) .",
    "the observed value of @xmath60 indicates the crossover between endogenous and exogenous dynamics .",
    "interestingly , model requeriments ( i.e , diffusion process on a heterogeneous network ) are met by software projects .",
    "empirical studies of software maintenance reported that change propagation is a central feature of software maintenance @xcite .",
    "propagation is necessary because there are dependencies between project files and developers must ensure that related files are changed in a consistent way .",
    "recall the software network @xmath61 captures these file dependencies ( see above ) .",
    "the software network displays a scale - free structure due to extensive reuse during software development @xcite .",
    "furthermore , our measurements on real oss projects seem consistent with model predictions .",
    "we have observed that , for all software projects analyzed here , the propability distribution @xmath62 has a long tail .",
    "for example , power - law fitting for the apache project predicts an exponent @xmath63 for the incoming flux distribution ( see fig .",
    "[ f.4]a , cumulative probability distribution is used to reduce the impact of noisy fluctuations ) . as hypothesized above , the plot in fig .",
    "[ f.4]b shows that key files having a large number of dependencies are changed more frequently .",
    "we have checked that @xmath52 is a function of @xmath54 ( not shown here ) . as seen in fig .",
    "[ f.4]c , the average neighbour activity increases with average node activity @xmath64 and it is approximately constant @xmath65 for @xmath66 with @xmath67 .",
    "this value of @xmath60 is consistent with the observation made in fig .",
    "[ f.3]a . in this case , eq .",
    "( [ meanfield ] ) predicts @xmath68 with @xmath46 to be compared with the measured exponent 0.72 ( see fig .",
    "[ f.3]a ) .",
    "a practical application of fluctuation analysis is the identification of files that change together @xcite .",
    "this suggests a method for community detection based on individual node dynamics . in our context , we have observed that some subsystems are characterized by different scaling laws in their internal fluctuations with average activity . for example , figure [ tortoisenet ] summarizes the analysis of internal fluctuations in the software project tortoisecvs .",
    "there are two clearly defined subsystems , the main application subsystem ( dark balls ) and the window library _ wxwin _ ( white balls ) , characterized by different change dynamics ( see fig .",
    "[ tortoisenet]a ) .",
    "the crossover behaviour can be appreciated in the scaling of internal fluctuations for the main tortoisecvs subsystem ( the exponent for @xmath66 is @xmath69 , see fig .",
    "[ tortoisenet]b ) .",
    "the main subsystem concentrates the largest fraction of changes . on the other hand ,",
    "the crossover is not observed in the scaling for the _ wxwin _ subsystem ( see fig .",
    "[ tortoisenet]b ) , which is an utility library imported from an external development team .",
    "the minimal amount of activity regarding the _ wxwin _ subsystem ( sporadic changes in the library communicated by the external team and minor adjustments required by the main subsystem ) suggests an explanation for the absence of a crossover .",
    "in short , we have provided empirical and theoretical evidence for a well defined crossover in the dynamics of software change .",
    "this is the first reported example of such behaviour in a large - scale technological system .",
    "it shows that oss systems exhibit some traits in common with other complex networks .",
    "the presence of crossover allows to distinguish between internal and external components of the dynamics and then provides a powerful approach to uncover the relative importance of exogenous versus endogeneous dynamics .",
    "sergi valverde dedicates this paper to his daugther violeta .",
    "we thank ricard sol and damien challet . this work has been supported by the eu within the 6th framework program under contract 001907 ( delis ) ."
  ],
  "abstract_text": [
    "<S> we have investigated the origin of fluctuations in the aggregated behaviour of an open - source software community . in a recent series of papers [ 1 - 3 ] , de menezes and </S>",
    "<S> co - workers have shown how to separate internal dynamics from external fluctuations by capturing the simultaneous activity of many system s components . in spite of software development being a planned activity , the analysis of fluctuations reveals how external driving forces can be only observed at weekly and higher time scales . </S>",
    "<S> hourly and higher change frequencies mostly relate to internal maintenance activities . </S>",
    "<S> there is a crossover from endogenous to exogenous activity depending on the average number of file changes . </S>",
    "<S> this new evidence suggests that software development is a non - homogeneous design activity where stronger efforts focus in a few project files . </S>",
    "<S> the crossover can be explained with a langevin equation associated to the cascading process , where changes to any file trigger additional changes to its neighbours in the software network . </S>",
    "<S> in addition , analysis of fluctuations enables us to detect whether a software system can be decomposed in several subsystems with different development dynamics .    </S>",
    "<S> multiple time series are available for complex systems whose dynamics is the outcome of a large number of agents interacting through a complex network . </S>",
    "<S> recent measurements on the fluctuations at network nodes [ 1 - 4 ] indicate a power - law scaling between the mean@xmath0 and the standard deviation @xmath1 of the time - dependent activity @xmath2 of node @xmath3=1  @xmath4 , that is ,    @xmath5    where @xmath6 is an exponent which can take the values between 1/2 and 1 @xcite . </S>",
    "<S> it seems that real systems accept a classification in two different classes depending on the value of this exponent . </S>",
    "<S> systems with internal ( or endogenous ) dynamics like the physical internet and electronic circuits show the exponent @xmath7 . on the other hand </S>",
    "<S> , systems either involving human interactions ( i. e , www , highway traffic ) or strongly influenced by external forces ( i.e. , rivers ) belong to the class defined by the universal exponent @xmath8 . </S>",
    "<S> interestingly , some systems display both types of behaviour when analysed at different scales of detail . </S>",
    "<S> for example , visits to web pages and routing of data packets in the internet are dynamical processes with different origins @xcite . </S>",
    "<S> the former process is driven by user s demands while the latter accounts for a significant amount of internal activity even in the absence of human interaction ( i.e. , routing protocols ) .    here </S>",
    "<S> , we introduce for the first time this theoretical framework to the analysis of human dynamics observed in open - source software development , which is an important activity with economical and social implications . </S>",
    "<S> open - source software ( oss ) @xcite often requires the collective efforts of a large number of experienced programmers ( also called developers or software engineers ) . </S>",
    "<S> how individual expertise and social organization combines to yield a complex and reliable software system is still largely unknown . </S>",
    "<S> interestingly , many remarkable features of oss can not be detected in the activity of single programmers @xcite . </S>",
    "<S> this suggests that , in order to understand how oss takes place , the activities of many developers must be studied simultaneously . </S>",
    "<S> a prerequisite to study processes of software change is to understand the social organization of oss . </S>",
    "<S> these communities combine two groups of people in a hierarchical or onionlike structure : ( 1 ) an inner team of software developers that develop and maintain the source code files and ( 2 ) the potentially larger community of software users ( see fig.1a ) . </S>",
    "<S> this group of users triggers new development activities by issuing modification requests . </S>",
    "<S> in addition , every software change has a non - zero probability to inject new software defects , which in turn may trigger a cascade of repair changes @xcite .    </S>",
    "<S> we look at software development as a sequence of software change events . </S>",
    "<S> previous studies on software maintenance dynamics proposed a classification of changes in categories associated to different project stages @xcite . </S>",
    "<S> these studies reported the frequency of every type of change . </S>",
    "<S> however , the software database analyzed here ( see below ) does not indicate if a change addresses a user request or not . </S>",
    "<S> instead , we suggest how the analysis of fluctuations can be used to obtain this information . </S>",
    "<S> we propose a new classification of software change as endogenous or exogenous depending on whether the change is independent of previous events or not . </S>",
    "<S> because changes requested by users are independent from each other @xcite , we will refer to them as `` exogenous '' . on the other hand , cascades of correlated changes </S>",
    "<S> are `` endogenous '' ( see fig.1a ) . in a related paper , sornette and co - </S>",
    "<S> authors make a distinction between endogenous and exogenous events in the context of book sales @xcite . </S>",
    "<S> it was shown that exogenous and endogenous sales peaks have different relaxation dynamics . </S>"
  ]
}
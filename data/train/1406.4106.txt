{
  "article_text": [
    "as i write these words in june 2014 , it has been just over a month since the retirement celebration for alan selman at the university at buffalo s center for tomorrow .",
    "i ca nt think of a more fitting location for the celebration , given that alan s technical contributions to the field are of such beauty and insight that they are as important to the field s future as they have been to its past and present .    any retirement is bittersweet , but alan",
    "has mentioned that he will be keeping his hand in the field in retirement . that happy fact helped all of us at the celebration focus on the sweet side of the bittersweet event .",
    "warm talks and memories were shared by everyone from the university s president , the department chair , and alan s faculty colleagues all the way up to the people who are dearest of all to alan  his postdocs and students .",
    "the warmth was no surprise .",
    "alan is not just respected by but also is adored by those who have worked with him .",
    "anyone who knows alan knows why .",
    "alan is truly kind , shockingly wise , and simply by his nature devoted to helping younger researchers better themselves and the field .",
    "but in fact , i think there is more to say  something far rarer than those all too rare characteristics .",
    "what one finds in alan is a true belief in  an absolute , unshakable belief in  the importance of understanding of the foundations of the field .",
    "now , one might think that alan holds that belief as an article of faith .",
    "but my sense is that he holds the belief as an article of understanding .",
    "like all the very , very best theoreticians , alan has a terrific intuition about what is in the tapestry of coherent beauty that binds together the structure of computation .",
    "he does nt see it all or even most of it  no one ever has .",
    "but he knows it is there . and",
    "in these days when many nontheory people throw experiments and heuristics at hard problems , often without much of a framework for understanding behaviors or evaluating outcomes , not everyone can be said to even know that there is an organized , beautiful whole to be seen .",
    "further , alan has such a strong sense for what is part of the tapestry that  far more than most people  he has revealed the tapestry s parts and has guided his collaborators and students in learning the art of discovering pieces of the tapestry .",
    "and that brings us to the present article and its theme of the beauty of the structures and the structure that alan has revealed  the notions , the directions , and the theorems . for all of us",
    "whose understanding is nt as deep as alan s , the beauty of alan s work has helped us to gain understanding , and to know that that tapestry really is out there , waiting to be increasingly discovered by the field , square inch by square inch , in a process that if it stretches beyond individual lifetimes nonetheless enriches the lifetimes of those involved in the pursuit of something truly important . to summarize alan s career in a sentence that is a very high although utterly deserved compliment : alan is a true structural complexity theorist .",
    "it would be impossible to cover in a single reasonably sized article all or even most of alan s contributions to the field .",
    "so this article will celebrate alan s career in a somewhat unusual way .",
    "given that the heart of alan s contribution to the field is truly beautiful structures ",
    "notions , directions and foundational results regarding those  this article will simply present to the reader a few of those structures and point out ( when it is nt already apparent ) why they are beautiful and important .",
    "we wo nt be trying to survey the results that are by now known about the structures , although we ll often mention the results that alan and his collaborators obtained on the structures in their original work , and we ll sometimes mention some later results . but the core goal here is to present the beautiful structures themselves .",
    "we ll do that in section  [ s : structures ] .",
    "but before turning to that , it would be a crime not to at least allude to the stunning breadth of alan s contributions in service and developing human infrastructure , and to the recognition he has received for his scholarship and service .",
    "alan has trained many ph.d .",
    "students ( his already graduated ph.d .",
    "advisees are joachim grollmann , john geske , roy rubinstein , ashish naik , aduri pavan , samik sengupta , and liyu zhang , and his current ph.d .",
    "advisees are andrew hughes , dung nguyen , and nathan russell ) and postdocs ( mitsunori ogihara , edith hemaspaandra , and christian glaer ) , and their contributions  both under alan and beyond  have been important to the field . those of us who were not his students or postdocs but have had the privilege of working with alan have been enriched , inspired , and uplifted by his insights and vision . the field and his school have recognized alan s research and service contributions with a long list of the highest awards and most important positions .",
    "alan is a fellow of the acm , a fulbright scholar , and the recipient of an alexander von humboldt foundation senior research award and a japan society for the promotion of science invitational fellowship .",
    "he has been awarded the acm sigact distinguished service prize , and has a long record of extensive editorial service to the field , including being the editor - in - chief of theory of computing systems since 2001 .",
    "he is the recipient of the state university of new york chancellor s award for excellence in scholarship and creative activities , and of the university of buffalo s exceptional scholar award for sustained achievement .",
    "alan was acting dean of the college of computer science at northeastern university , and chaired ub s computer science and engineering department for six years .",
    "with steve homer , alan wrote a computability and complexity textbook  @xcite , and he edited the complexity theory retrospectives  @xcite .",
    "alan was an important part of efforts to obtain stronger government grant support for the study of theoretical computer science .",
    "he was instrumental in the creation of , and served the first term as conference chair of , the ieee conference on structure in complexity theory ( now called the ieee conference on computational complexity ) , and for that won the ieee computer science society meritorious service award .    that s some record !",
    "in this article , we ll present five of alan s beautiful notions  concepts that alan has introduced or very substantially advanced .",
    "that is such a small number relative to the dozens of topics that alan has contributed to that we ll be skipping topics that for almost any other person would in and of themselves be the highlight of an entire career .",
    "in fact , we wo nt even be trying to pick off the `` top five '' notions , but rather will just be selecting a set of five very lovely notions .",
    "for example , we ll skip right over the seismic contribution of ladner , lynch , and selman  @xcite to the definitions of and understanding of the relative powers of the rich range of polynomial - time reducibilities that are so widely used today .    and similarly , since alan and his collaborators will soon be surveying issues related to these topics in a _ sigact news _",
    "complexity theory column  @xcite , we also will leave untouched all issues related to disjoint pairs , promise problems , and propositional proof systems , even though alan s importance there is great , stretching across more than a half dozen papers , from the seminal 1980s work of even , selman , and yacobi  @xcite to the remarkable 2010s work of hughes , pavan , russell , and selman  @xcite .",
    "alan and his collaborators have in recent decades resolved a long - open issue , bringing unity to the understanding of mitoticity , completeness , and autoreducibility for many central complexity classes . among their advances",
    "is that every ( many - one polynomial - time ) np - complete set is ( many - one polynomial - time ) autoreducible , and ( many - one polynomial - time ) autoreducibility and ( many - one polynomial - time ) mitoticity coincide .",
    "so , for example , every np - complete @xmath0 set is so repetitively structured that there exists a @xmath1 set @xmath2 such that @xmath3 and @xmath4 are infinite and ( many - one polynomial - time ) equivalent , and so certainly are themselves each ( many - one polynomial - time ) np - complete . also , alan and his collaborators have brought great light to the extent to which this type of behavior persists or fails for other types of reductions , such as for reductions more flexible than many - one reductions , or reductions in the logspace world . and yes , you ve guessed it , we also wo nt be covering any of that work here , since happily alan and his collaborators half a decade ago wrote for the _ sigact news _",
    "complexity theory column a survey article on the work in this line up to that point  @xcite , although if you are interested ( as well you should be ! ) ,  please do nt miss their recent work on this line in icalp-13 and stacs-14  @xcite .",
    "@xmath5not just itself , but as it functions when accessed through relativization ( e.g. , @xmath6 and @xmath7 ) , and in its cousin known as `` strong '' computing , and in the so - called strong nondeterministic reductions  @xcite based on that cousin  plays an important role in complexity theory .",
    "alan was a central player in the key early work that built this collection of concepts  @xcite .",
    "and we wo nt cover that here .",
    "we also wo nt cover what is now called the left - set technique , which was created by alan  @xcite and which for example was used to devastating effect by ogihara and watanabe  @xcite in their work showing that if any np - complete set polynomial - time bounded - truth - table reduces to a sparse set , then @xmath8 .",
    "there are many other beautiful themes , notions , and results in alan s work , which we not only wo nt cover below but which we also havent mentioned above .",
    "in fact , it should already be clear what we wo nt cover about alan s work is enough to fill three or four extremely satisfying , productive , important careers .",
    "but were we to go on listing the important and lovely notions due to alan that we _",
    "wo nt _ cover , there would be no room left to actually cover any structures that alan developed .",
    "so let us move right on to our select five .    as a reminder , for these notions we wo nt at all be doing a survey of what is known , but rather we will be trying to convey what the notion is , why it is beautiful , and why its introduction by alan and his collaborators was important . and a shorthand",
    ", this article will sometimes say `` alan and his collaborators '' or even perhaps `` alan '' when speaking of work by alan joint with others ; this is not in any way meant as a slight to those collaborators , but is simply since the focus of this article is on alan .",
    "the citation labels ( e.g. ,  `` [ bls84 ] '' ) will generally make it clear to the reader when we are employing this shorthand .",
    "search issues are important not just in the area of theory . ai researchers also are intensely focused on how to explore spaces .",
    "so suppose you come to a fork in the road .",
    "there might be a treasure down one or both of the paths  or neither might hold a treasure . which way",
    "should you go ?",
    "one of alan s beautiful structures addresses the issue of when polynomial - time functions can help you solve the above problem .",
    "after all , you do nt really need to know whether a given road has a treasure .",
    "that would be great to know , but maybe it is too much to hope for or too computationally expensive .",
    "happily , all you really need to be able to do in the above situation is to choose one of the roads such that it is true that _ if either of the roads holds a treasure , then the road you choose holds a treasure_.    in a quite amazing series of papers  @xcite , alan introduced and broadly explored the notion of p - selectivity , which captures precisely the above issue .",
    "we all know what polynomial time  ( @xmath1 ) is .",
    "a set @xmath0 is in p exactly if there is a polynomial - time machine that accepts on each string in @xmath0 and rejects on each string in @xmath9 .",
    "that is , one has a polynomial - time decision algorithm for membership in the set . for p - selectivity ,",
    "one is required to have a polynomial - time semi - decision algorithm for the set .",
    "in particular  and here we use a particular one of the various equivalent definitions of this quite robust concept  a set @xmath0 is said to be p - selective",
    "exactly if there is a polynomial - time function @xmath10 that takes as its input two arguments , @xmath11 and @xmath12 , and has the property that , for each @xmath11 and @xmath12 , @xmath13    what this says is that a set is p - selective exactly if there is a polynomial - time function that , given any two elements , always chooses one of them , and if at least one of them is in the set , the one it chooses is in the set .",
    "one sometimes hears this described by saying that the function chooses the element `` more likely''or , better , `` no less likely''to be in the set .",
    "this is a fine description , at least in the `` no less likely '' version , as long as one keeps in mind that the probabilities here are all zero and one .",
    "p - selectivity is capturing the notion of wise search  being able to decide which way to go at forks in the road .",
    "it also is one of a great variety of notions ( such as almost polynomial time  @xcite , p / poly  @xcite , p - closeness  @xcite , near testability  @xcite , nearly near testability  @xcite , etc . )",
    "that try to capture a wider range of sets than p does , yet to still have some natural polynomial - time action at their core .",
    "although this lovely notion , p - selectivity , was introduced by alan , alan s seminal papers are quite open as to his inspiration .",
    "the p - selective sets ( which are also sometimes called the semi - feasible sets , since they are the sets having polynomial - time semi - decision algorithms ) were inspired by jockusch s notion from recursive function theory of the semi - recursive sets  @xcite . in his career , alan has often drawn on his broad understanding of recursive function theory to improve computer science s pursuit of complexity - theoretic insights .",
    "this is of great value , given that so much of complexity theory  from the polynomial hierarchy  @xcite to reductions to completeness to the isomorphism conjecture to immunity and bi - immunity to oracles and much more  is inspired by recursive function theory .",
    "the present article focuses on presenting the beautiful structures themselves , rather than surveying everything known about them .",
    "but in this case it is important to note that although the p - selective sets have been extensively studied since alan s original series of papers ( and indeed , there is even a monograph completely devoted to selectivity theory  @xcite ) , alan s original series of papers already went breathtakingly far in exploring this concept .",
    "for example ,",
    "alan s original papers already proved that there are p - selective sets that are not in p. indeed , he ( see also ko  @xcite regarding a more flexible type of left cut ) showed that the left cut set ( do nt worry if you do nt know what that term means ) of any real number is p - selective .",
    "it follows from this that there are arbitrarily hard p - selective sets , e.g. , there are p - selective sets that are so wildly undecidable that they are nt even in the arithmetical hierarchy .",
    "alan also showed that if even one np - hard set is p - selective , then @xmath8 .",
    "the proof is a lovely application of the self - reducibility of satisfiability .",
    "going back to the parallel with wise search , this basically says that for np - like search spaces that can be naturally cut in half repeatedly , having a p - time wise search algorithm is just too much to hope for .",
    "the proof is so crisp that it is worth sketching here .",
    "suppose that some np - hard set @xmath0 is p - selective . here is a polynomial - time algorithm for satisfiability .",
    "given a boolean formula whose satisfiability we want to test , set its lexicographically first variable to true , get the resulting formula , and by @xmath0 s np - hardness transform that into a question about @xmath0 .",
    "do the same for our original formula with its first variable set to false .",
    "take the outputs of these two processes , and use them as the inputs to the hypothesized polynomial - time p - selector function for @xmath0 .",
    "that function will output one of them , and based on that choice , we ll know either `` if the formula is satisfiable then there is a satisfying assignment in which the first variable is set to true , '' or `` if the formula is satisfiable then there is a satisfying assignment in which the first variable is set to false . ''",
    "so we take whichever assignment was just suggested to us by the selector , and we stick with it and similarly assign the second variable , again using the selector to fix it as being true or false , and so on until all the variables are assigned . at the end , we get to a single assignment such that if there is any assignment that satisfies the original formula , then _ that _ assignment satisfies the original formula .",
    "so we see if that one assignment satisfies the formula .",
    "if it does the formula is satisfiable , and otherwise the formula is not satisfiable . lovely .",
    "the results mentioned above are just a few examples of the broad investigation alan carried out .    the facts that p - selective sets can by arbitrarily hard , and ca nt be np - hard unless @xmath8 , might lead one to say that this class is terribly far beyond p. however , using a tournament - inspired divide - and - conquer framework",
    ", ko  @xcite proved that each p - selective set is information - wise very close to p. in particular , for each p - selective set there is a polynomial - time algorithm that given a polynomial amount of extra information based only on the _ length _ of the input string can correctly accept the set . in the jargon ,",
    "each p - selective set is in the complexity class",
    "p / poly , or equivalently , each p - selective set has small circuits .",
    "thus the p - selective sets have two faces : they can be so hard as to be undecidable , yet only a hair s breadth of information keeps them from being in @xmath1 .",
    "beautiful structures often attract much attention , and that has certainly been the case with the p - selective sets .",
    "much of that attention has been devoted to generalizing and extending concepts and results from alan s seminal papers .",
    "for example , although alan showed that no np - hard set ( i.e. , no set np - hard with respect to many - one polynomial - time reductions ) can be p - selective unless @xmath8 , there followed an intense and productive research line to see whether that claim could be extended beyond many - one reductions to more flexible types of reductions such as bounded - truth - table and truth - table reductions , see @xcite , and whether alan s just - stated result analogously extends to other complexity classes , and what holds for nondeterministic variants of selectivity .",
    "see @xcite for a survey of work along those lines and more generally for a survey of the broad research stream  including important later work by alan  launched by alan s beautiful structure known as p - selectivity . as a final comment , in section  [ s : hnos ] of this article",
    "we ll soon see how selectivity theory surprisingly resolved an important , yet seemingly unrelated , question about removing the ambiguity of nondeterministic functions .",
    "as everyone knows , theoretical computer science is largely built around the complexity of decision problems .",
    "after all , np is ( at least if one stays away from certain textbooks ! )  a class of decision problems .",
    "how could there be anything wrong with this approach ?",
    "after all , satisfiability for example clearly has the property that its search and its decision versions are polynomial - time turing interreducible .",
    "alan is one of the people who from the very beginning recognized the tremendous importance of studying functions directly .",
    "there are many compelling reasons to study functions directly .",
    "historically , alan was probably primarily motivated by the extremely interesting role and richness of nondeterministic function classes  and his work there was seminal  and perhaps also by his expertise in one - way functions .",
    "additionally , experts such as alan have always known that even for deterministic classes , the justification given above for focusing on decision problems has weaknesses .",
    "satisfiability as used above is not as canonical as it often is .",
    "indeed , it has since been shown that unless @xmath8 some np - complete sets are not self - reducible  @xcite , which is relevant since self - reducibility is central in reducing search problems to their natural associated decision problems . but more crucially , turing reductions are quite powerful , and so may give a blurred view of the actual complexity of the objects involved .",
    "early on , alan and his collaborators book and long ( @xcite , see also @xcite ) introduced a rich range of polynomial - time nondeterministic reductions and studied their properties and relationships .",
    "alan also accessibly spread the word about the importance of taking a function - based view , through his papers on `` a taxonomy of complexity classes of functions ''  @xcite and `` much ado about functions ''  @xcite ( see also his survey paper on one - way functions  @xcite ) .",
    "as he was writing those papers , alan was also obtaining new insights into search ( a type of function version of problems ) versus decision , e.g. , his paper `` p - selective sets and reducing search to decision vs.self-reducibility ''  @xcite ( and yes , there is p - selectivity playing a role again ! ) ,  and he also interestingly studied the role of functions as outputs of oracles  @xcite .",
    "these days , function versions of problems play such a large role that it is easy to forget that thirty years ago it was nt yet clear that that would ever be the case .",
    "alan s pioneering stress on functions , quirky for its time , was quite prescient .",
    "is finding all solutions to a problem easier than finding one solution ?",
    "one is tempted to answer : never !",
    "after all , if one can find all solutions , then one can simply take ( for example ) the lexicographically smallest solution , and one has found one solution ( if one exists ) .    surprisingly , the reasoning just used falls apart in a nondeterministic context .",
    "let us see this . and then let us see what alan did about this through bringing together the theory of functions with a generalization of the theory of p - selectivity .",
    "consider a nondeterministic polynomial - time turing machine that on each path either rejects or accepts .",
    "we will consider the machine to be computing a partial , multivalued function ( which in mathematics one would probably call a relation , but in complexity theory the term function is often used even for such multivalued objects ) .",
    "namely , each rejecting path is nt considered to contribute anything to the function .",
    "but whatever string is on the first work tape of the machine on nondeterministic paths that accept is considered to be an output of the function on the given input .",
    "this notion is what is called an npmv function ( a nondeterministic polynomial - time multivalued function ) .",
    "the class npmv was introduced by book , long , and selman  @xcite in their seminal work on nondeterministic functions .",
    "let us make the nature of npmv clear by giving a very important example . consider the nondeterministic polynomial - time turing machine  ( nptm ) that on input @xmath10 , interprets @xmath10 as a boolean formula , nondeterministically guesses an assignment for the variables of @xmath10 and writes that assignment on its first work tape , and then deterministically uses its other tapes to check whether the assignment satisfies @xmath10 , and if it does the machine ( on that nondeterministic computation path ) accepts and if not the machine ( on that nondeterministic computation path ) rejects .",
    "notice that this machine on input @xmath10 outputs all satisfying assignments of @xmath10 . that set could be exponentially large , but that is nt a problem here  the output set is in effect distributed among all the paths , and so it is nt ever stuffed into a single , giant output string .",
    "this function is called @xmath14 .",
    "an npsv function ( a nondeterministic polynomial - time single - valued function ) is exactly the same notion as an npmv function , except npsv functions must in addition satisfy the property that on each input the cardinality of the output set is at most one .",
    "so if no path accepts , that is fine , as the cardinality of the output set is zero . and",
    "if one or more paths accept , that is also fine , as long as every one of those accepting paths has precisely the same string on its first work tape , since then that string will be the one and only output .",
    "a central concept in the study of multivalued functions is the notion of a refinement .",
    "@xmath15 refines @xmath16 exactly if on each input @xmath11 ,    1 .",
    "@xmath15 outputs at least one value if and only if @xmath16 outputs at least one value , and 2 .",
    "every output of @xmath15 is an output of @xmath16 .",
    "we saw above that @xmath17 is an npmv function .",
    "but does it have an npsv refinement ?",
    "put another way : as mentioned above , it is easy for np function - computing machines to find all solutions of an input boolean formula .",
    "but can an np function - computing machine find _ one _ solution of an input boolean formula ( when one exists ) ?",
    "this question is asking whether there is an nptm that for unsatisfiable formulas has all its paths reject , and for each satisfiable formula has at least one path that computes a satisfying assignment ( and accepts ) and every accepting path must compute the same satisfying assignment as every other accepting path .",
    "it will now be clear why the trick that works in the deterministic case seems unhelpful here . in the deterministic case we took all the solutions and output the lexicographically smallest .",
    "but for an npmv function to do that , at least in the most obvious way , a path would have to be able to figure out whether the value it would like to output is such that every other path that would like to output a value would in fact like to output a lexicographically equal - or - larger value ( and in that case our path would go ahead and output its value , and otherwise would kill itself off by rejecting ) . but figuring _ that _ out seems to take an extra quantification that our machine does nt have in its arsenal . big picture , npsv is in some sense asking for a strong degree of coordination among paths that have no way of communicating with each other .",
    "of course , the previous paragraph is just an intuitive handwave , not a proof . proving that npmv functions do nt all have npsv refinements ( unless the polynomial hierarchy collapses ) required a surprising twist .",
    "alan and his collaborators had developed nondeterministic analogues of p - selectivity  @xcite .",
    "although at first one might think that selectivity has little to do with npmv and npsv functions , nondeterministic selectivity and its connection with nonuniform classes such as @xmath18 turned out to be exactly the tool alan and his collaborators needed to prove that if @xmath17 has an npsv refinement ( equivalently , if every npmv function has an npsv refinement ) , then the polynomial hierarchy collapses to @xmath19  @xcite .",
    "a collapse of the polynomial hierarchy to @xmath19 still can be obtained even if one merely assumes that one can refine at - most-2-valued npmv functions to npsv functions  @xcite .",
    "later work about nonuniform classes let one conclude from alan s work a slightly more extensive collapse in both these cases  @xcite , in particular collapsing the polynomial hierarchy to @xmath20 .",
    "alan and his collaborators also explored the question of , for @xmath21 , what collapses would occur if one could reduce at - most-@xmath22-valued npmv functions to at - most-@xmath23-valued npmv functions , and obtained polynomial - hierarchy collapses to @xmath19 for each such case  @xcite .",
    "strengthening those collapses to a collapse to @xmath20 remains open to this day and is a quite interesting challenge that has stymied many a graduate student .",
    "see also  @xcite for some cases where refinements in fact are possible .    in summary , alan did nt define nondeterministic functions and selectivity theory for the purpose of shedding light on whether one could reduce many solutions to one solution . however , his notions were so beautiful and flexible that they were central in the resolution of that issue .",
    "informally put , relativizing by an oracle @xmath0 means giving all machines unit - cost access to @xmath0 , i.e. , machines can as often as they like write a string onto a query tape and immediately the machine will be told whether that string is a member of @xmath0 . in some sense",
    ", relativization changes the universe s `` ground rules '' about what information is available to computing machines , but does so fairly  all machines now have access to @xmath0 .    experienced complexity theorists may be a bit surprised by what we ve chosen as our example of a beautiful contribution by alan to the theory of relativization .",
    "after all , one of alan s earliest works is the famous 1979 paper `` a second step toward the polynomial hierarchy '' with baker  @xcite , which showed that there is an oracle relative to which the second and third levels of the polynomial hierarchy separate .",
    "the proof is extremely clever and powerful  employing what one might dub a nested double contradiction architecture .",
    "how amazing that proof was is made clear by how long it took to take the `` third step '' ; that did nt occur until the work many years later of yao  @xcite and hstad  @xcite , which drew on different techniques and separated the entire polynomial hierarchy .",
    "structural complexity theorists will remember well the important paper by homer and selman  @xcite that built a relativized world in which all @xmath19-complete sets were polynomial - time isomorphic .",
    "not too many years later , fenner , fortnow , and kurtz  @xcite , surely encouraged by that paper , obtained the same result for np itself , thus directly speaking to the relativized version of berman and hartmanis s isomorphism conjecture  @xcite .",
    "rogers  @xcite even put a great cherry on top of that , by obtaining isomorphism while not killing off one - way functions  and we ll speak more about those in section  [ s : one ] , since alan s work on them is seminal .",
    "but as beautiful and important as those results of alan s are , at least as beautiful , if perhaps less well known these days , is the pioneering work by alan and his collaborators on positive relativization .    what is the biggest perceived weakness of relativization theory ?",
    "it probably is that it often seems that one can do almost anything in relativized worlds , and that doing so has little connection with the real world .",
    "for example , baker , gill , and solovay  @xcite famously showed that there are oracles making p equal to np , and that there are oracles making p not equal to @xmath24 .",
    "does this resolve the p versus np problem in the real world ?",
    "fat chance .",
    "those oracles actually do tell us something quite important , namely , they tell us that no proof technique that relativizes can prove either @xmath25 or @xmath26 .",
    "and so there has been quite a bit of research regarding proof techniques such as arithmetization ( see  @xcite ) and results such as @xmath27  @xcite that seem not to relativize  @xcite .",
    "an interesting perspective on this is given by hartmanis et al .",
    "@xcite , who argue that there have been nonrelativizing proof techniques for a long time ; see also  @xcite .    in any case",
    ", the fact that relativization results such as those of baker , gill , and solovay  @xcite fail to resolve the analogous real - world problems is often presented as a clear weakness of studying oracles .",
    "positive relativization provides an utterly lovely response to this weakness : _ we should find cases where obtaining an oracle result would imply real - world results .",
    "_ positive relativization as such was introduced and explored by alan , ron book , and their collaborators  ( @xcite , see also  @xcite ) .",
    "let us illustrate positive relativization by one of its most striking examples .",
    "( note : what we here speak of as `` positive relativization '' also sweeps in what book  @xcite distinguishes as `` negative relativization . '' ) suppose we claim that there is sparse oracle relative to which the polynomial hierarchy collapses .",
    "are you thrilled ?",
    "perhaps not , since that might not say anything about the real world .",
    "suppose we claim that there is sparse oracle relative to which the polynomial hierarchy is infinite .",
    "now are you thrilled ?",
    "perhaps again not , since that might not say anything about the real world .",
    "you re seeming pretty hard to thrill , my friend .    but",
    "these things _ would _ say something about the real world . that is because balczar , book , long , schning , and selman  @xcite proved the following result .    1 .",
    "the polynomial hierarchy collapses if and only if there is a sparse oracle relative to which the polynomial hierarchy collapses .",
    "the polynomial hierarchy is infinite if and only if there is a sparse oracle relative to which the polynomial hierarchy is infinite .",
    "this theorem tells us we should care , and indeed be thrilled , if someone has a sparse oracle that makes the polynomial hierarchy infinite , or has a sparse oracle that makes the polynomial hierarchy collapse . indeed ,",
    "that person ",
    "thanks to the groundwork of alan just presented  will have so changed the real - world landscape of complexity that he or she is sure to win a turing award .",
    "so positive relativization links oracle results to real - world collapses and separations . and",
    "that is a lovely thing to do . by now , a broad range of positive relativizations are known , involving issues ranging from sparse sets ( as above ) to tally sets ( historically the earliest form of what now is called positive relativization ) , to number of queries , to aspects of the form and structure of the querying .",
    "a cynic might say that such results just tell us which oracle results are too hard to hope to ever get , since they would resolve major real - world issues .",
    "but an optimist might say that these offer an extra potential path to resolve those major real - world issues .",
    "the path is nt a universal one .",
    "for example , alan s student roy rubinstein writing `` on the limitations of positive relativization ''",
    "@xcite showed that for `` semantic '' classes such as up , @xmath28 , and @xmath5 , positive - relativization attempts with tally oracles fail even though the analogous positive - relativization results are well known to succeed for np and the polynomial hierarchy s levels .",
    "but even if not universal , the path of positive relativization is certainly a beautiful insight , especially since it has been broadly applied to the centrally important class  @xmath24 .      for the final of our five beautiful structures sculpted by alan",
    ", we take the rigorous definition of the notion of a ( complexity - theoretic ) one - way function , and the complete characterization ( in terms of the collapse and noncollapse of important complexity classes ) of whether one - way functions exist .",
    "alan did this work with his first ph.d .",
    "student , joachim grollmann  @xcite , and this was also achieved independently by ko  @xcite ( see also  @xcite ) .",
    "many readers have probably already seen the definition and theorem alluded to above , since they can be found in such excellent complexity texts as for example papadimitriou  @xcite and du and ko  @xcite .",
    "but since it is well worth everyone knowing , let us quickly give the definition and the theorem.separate p from @xmath24 and win the prover a million - dollar clay mathematics institute prize  @xcite .",
    "so achieving the `` easier '' step is quite important although surely not easy . ]    a ( total ) function @xmath10 is a ( complexity - theoretic ) one - way function if and only if    1 .",
    "@xmath10 is polynomial - time computable , 2 .",
    "@xmath10 is polynomially honest ( i.e. , there is a polynomial @xmath29 such that for each @xmath11 , @xmath30 ; informally put , @xmath10 does nt shrink its inputs more than polynomially much ) , 3 .",
    "@xmath10 is an injective ( i.e. , one - to - one ) function , and 4 .",
    "@xmath10 is not polynomial - time invertible ( since we re concerned here only with total , injective functions , we may use as our definition of this that for any polynomial - time function @xmath31 , there exists an @xmath11 such that @xmath32 ) .",
    "valiant s  @xcite class up is the class of all np sets that are accepted by some nptm that on no input has more than one accepting path .",
    "the characterization theorem that brings together complexity classes and the existence of one - way functions is the following : one - way functions exist if and only if @xmath33  @xcite .",
    "the proof of this theorem elegantly goes back and forth between the world of one - way functions and the world of nondeterministic turing machines .",
    "this concept and characterization naturally inspired much related work .",
    "( see  ( * ? ? ?",
    "* chapter  2 :  the one - way function technique  ) for a survey - like treatment , including proofs , of the characterization mentioned above and the related results mentioned in this paragraph . ) for example , researchers have looked at ( what in effect is the study of ) @xmath23-bounded - ambiguity one - way functions ( which interestingly enough stand or fall together with alan s notion of one - way functions , thanks to a nice induction proof of watanabe  @xcite ) , and for multi - argument one - way functions one can study algebraic properties such as associativity and commutativity ( but again such functions turn out to stand or fall together with alan s notion of one - way functions  @xcite ) .",
    "all such work is clearly indebted to the beautiful , seminal work of alan , his student grollmann , and ko .",
    "anyone who has read alan s articles knows that alan always knows the exact right number of words to use to motivate , explain , and develop a concept .",
    "so to conclude , let us try to take a page ( or a quarter of a page ) from alan and keep things as focused as possible , so that the points this article has been trying to make speak clearly : alan s work stands out as extraordinary in that it has introduced and powerfully explored a tremendous number of utterly beautiful structures .",
    "we spoke at the start of the article about the elusive tapestry of coherent beauty that binds together the structure of computation .",
    "alan s career has been very successfully devoted to revealing parts of that tapestry . beyond that , alan has been boundlessly generous and inspirational to his many younger collaborators and has been a leader in service to the field .",
    "so with warmest thanks for so very much , and comforted by the knowledge that alan intends to keep his hand in the field , let us wish alan the most wonderful of retirements .",
    "j.  balczar , r.  book , t.  long ,",
    "u.  schning , and a.  selman . sparse oracles and uniform complexity classes . in _ proceedings of the 25th ieee symposium on foundations of computer science _ , pages 308313 .",
    "ieee computer society press , october 1984 .",
    "r.  book .",
    "towards a theory of relativizations : positive relativizations . in _ proceedings of the 4th annual symposium on theoretical aspects of computer science _ , pages 121 .",
    "springer - verlag _ lecture notes in computer science # 247 _ , 1987 .",
    "r.  book .",
    "restricted relativizations of complexity classes . in j.",
    "hartmanis , editor , _ computational complexity theory _ , pages 4774 .",
    "american mathematical society , 1989 .",
    "proceedings of symposia in applied mathematics # 38 .",
    "p.  faliszewski and m.  ogihara .",
    "separating the notions of self- and autoreducibility . in _ proceedings of the 30th international symposium on mathematical foundations of computer science _ , pages 308315 .",
    "springer - verlag _ lecture notes in computer science # 3618 _ ,",
    "august / september 2005 .          c.  glaer , d.  nguyen , c.  reitwiener , a.  selman , and m.  witek .",
    "autoreducibility of complete sets for log - space and polynomial - time reductions . in _ proceedings of the 40th international colloquium on automata , languages , and programming , part i _ , pages 473484 , july 2013 .",
    "a.  hughes , a.  pavan , n.  russell , and a.  selman . a thirty year old conjecture about promise problems . in",
    "_ proceedings of the 39th international colloquium on automata , languages , and programming , part i _ , pages 473484 .",
    "springer - verlag _ lecture notes in computer science # 7391 _ , july 2012 .",
    "r.  karp and r.  lipton .",
    "some connections between nonuniform and uniform complexity classes . in _ proceedings of the 12th acm symposium on theory of computing _ , pages 302309 .",
    "acm press , april 1980 .",
    "an extended version has also appeared as : turing machines that take advice , _",
    "lenseignement mathmatique _ , 2nd series , 28:191209 , 1982 .",
    "a.  meyer and l.  stockmeyer .",
    "the equivalence problem for regular expressions with squaring requires exponential space . in _ proceedings of the 13th ieee symposium on switching and automata theory _ , pages 125129 .",
    "ieee press , october 1972 ."
  ],
  "abstract_text": [
    "<S> professor alan selman has been a giant in the field of computational complexity for the past forty years . </S>",
    "<S> this article is an appreciation , on the occasion of his retirement , of some of the most lovely concepts and results that alan has contributed to the field . </S>"
  ]
}
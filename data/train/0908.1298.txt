{
  "article_text": [
    "in classical coding theory , the _ weight distribution _ of a code is a useful tool for measuring a linear code s performance under maximum likelihood ( ml ) decoding . for codes",
    "decoded using modern high - performance suboptimal decoding algorithms such as sum - product ( sp ) or linear - programming ( lp ) decoding , the _ pseudoweight _ is the appropriate analog of the codeword weight .",
    "there are different definitions of pseudoweight for different channels ; one of primary importance is the _ additive white gaussian noise _ ( awgn ) pseudoweight .",
    "the pseudoweight distribution considers all codewords in all codes derived from finite covers of the tanner graph , which compete with the codewords to be the best sp decoding solution .",
    "the set of pseudocodewords has a succinct characterization in terms of the so - called _ fundamental polytope _ or equivalently , the _ fundamental cone _",
    "@xcite . also , pseudocodewords arising from finite covers of the tanner graph were shown to be equivalent to those responsible for failure of lp decoding @xcite . while much of the existing work in this area is concerned with performance characterization of particular codes , the performance of _ ensembles _ of _ low - density parity - check _ ( ldpc )",
    "codes @xcite is also of interest .    in @xcite ,",
    "the growth rate of the weight distribution of irregular ldpc codes was derived , and a numerical technique was presented for its approximate evaluation .",
    "it was shown in ( * ? ? ?",
    "* corollary 50 ) that @xmath2-regular ensembles with @xmath3 have a ratio of minimum awgn - pseudoweight to block length @xmath4 which decreases to zero asymptotically as @xmath5 . apart from this result , to the author",
    "s knowledge no _ ensemble _ results exist in the literature concerning awgn - pseudoweight . in this paper ,",
    "we make a first step in this direction .",
    "we define the degree-@xmath6 _ pseudoweight enumerating function _ of a linear block code , and use this concept to find an expression for the growth rate of the awgn - pseudoweight of regular ldpc code ensembles .",
    "we also present simulation results for the @xmath7-regular and @xmath8-regular ldpc code ensembles .",
    "we begin by providing some general settings and definitions . for @xmath9 ,",
    "we denote the multinomial coefficient by @xmath10 for @xmath11 with @xmath12 for each @xmath13 and @xmath14 , we denote the multivariate entropy function by @xmath15 all logarithms in the paper are to the base @xmath16 .",
    "let @xmath17 be a linear block code of length @xmath4 over the binary field @xmath18 , defined by @xmath19 where @xmath20 is an @xmath21 matrix over @xmath18 called the _ parity - check matrix _ of the code @xmath17",
    ". also denote @xmath22 , @xmath23 and for each @xmath24 @xmath25    the _ tanner graph _ of a linear block code @xmath17 over @xmath18 with parity - check matrix @xmath26 is an equivalent characterization of @xmath26 .",
    "the tanner graph @xmath27 has vertex set @xmath28 , and there is an edge between @xmath29 and @xmath30 if and only if @xmath31 .",
    "we denote by @xmath32 the set of neighbors of a vertex @xmath33 .",
    "we next define what is meant by a finite cover of a tanner graph .",
    "( @xcite ) a graph @xmath34 is a _ finite cover _ of the tanner graph @xmath27 if there exists a mapping @xmath35 which is a graph homomorphism ( @xmath36 takes adjacent vertices of @xmath37 to adjacent vertices of @xmath38 ) , such that for every vertex @xmath39 and every @xmath40 , the neighborhood @xmath41 of @xmath42 is mapped bijectively to @xmath32 .",
    "( @xcite ) a cover of the graph @xmath38 is said to have degree @xmath6 , where @xmath6 is a positive integer , if @xmath43 for every vertex @xmath39 .",
    "we refer to such a cover graph as an @xmath44__-cover _ _ of @xmath38 .",
    "let @xmath34 be an @xmath6-cover of the tanner graph @xmath27 representing the code @xmath17 with parity - check matrix @xmath26 .",
    "the vertices in the set @xmath45 are called _ copies _ of @xmath29 and are denoted @xmath46 , where @xmath47 .",
    "similarly , the vertices in the set @xmath48 are called _ copies _ of @xmath30 and are denoted @xmath49 , where @xmath50 .",
    "less formally , given a code @xmath17 with parity check matrix @xmath26 and corresponding tanner graph @xmath38 , an @xmath6-cover of @xmath38 is a graph whose vertex set consists of @xmath6 copies of each vertex @xmath29 and @xmath6 copies of each vertex @xmath30 , such that for each @xmath50 , @xmath51 , the @xmath6 copies of @xmath29 and the @xmath6 copies of @xmath30 are connected in an arbitrary one - to - one fashion .",
    "for any @xmath52 , an @xmath6-_cover codeword _ is a labelling of vertices of the @xmath6-cover graph with values from @xmath18 such that all parity checks are satisfied .",
    "we denote the label of @xmath53 by @xmath54 for each @xmath47 , @xmath55 , and we may then write the @xmath6-cover codeword in vector form as @xmath56 it is easily seen that @xmath57 belongs to a linear code @xmath58 of length @xmath59 over @xmath18 , defined by an @xmath60 parity - check matrix @xmath61 .",
    "to construct @xmath61 , for @xmath62 and @xmath63 , @xmath24 , we let @xmath64 , and @xmath65 it may be seen that @xmath37 is the tanner graph of the code @xmath58 corresponding to the parity - check matrix @xmath61 .",
    "we next define the concept of _ pseudocodeword _ as follows .",
    "let @xmath17 be a linear code of length @xmath4 with parity - check matrix @xmath26 .",
    "for any positive integer @xmath6 , a vector @xmath66 of length @xmath4 with nonnegative integer entries is said to be a _",
    "degree_-@xmath6 _ pseudocodeword _ of the code @xmath17 if and only if there exists an @xmath6-cover codeword @xmath57 with @xmath67 for all @xmath63 .",
    "the _ pseudoweight _ of a degree-@xmath6 pseudocodeword @xmath68 of the code @xmath17 is equal to the vector @xmath9 , where @xmath68 has @xmath69 entries equal to @xmath70 for each @xmath13 .",
    "note that the pseudoweight as defined here corresponds to the `` type '' of a pseudocodeword in the notation of @xcite .",
    "note also that this notion of pseudoweight is applicable to different channels such as the additive white gaussian noise ( awgn ) channel , binary symmetric channel ( bsc ) or binary erasure channel ( bec ) .",
    "the awgn - pseudoweight of a pseudocodeword @xmath68 of length @xmath4 is defined by @xcite @xmath71 and its bsc - pseudoweight and bec - pseudoweight are defined in @xcite ( see also ( * ? ? ?",
    "* section 6 ) ) .    the _ fundamental cone _",
    "@xmath72 of the @xmath21 parity - check matrix @xmath26 is equal to the set of vectors @xmath73 such that @xmath74 for all @xmath63 , and @xmath75 [ def : cone ]    in @xcite , it was shown that if @xmath17 is a binary linear code with an @xmath21 parity - check matrix @xmath26 , then a length-@xmath4 integer vector @xmath68 is a pseudocodeword of @xmath26 if and only if @xmath76 and @xmath77 where @xmath72 denotes the fundamental cone of @xmath26 , and the matrix @xmath26 in ( [ eq : pcw_condition_2_parity ] ) is interpreted over the integers .",
    "we next define the concept of pseudoweight enumerating function of a block code .",
    "the degree-@xmath6 _ pseudoweight enumerating function _ ( pwef ) of a block code @xmath17 of length @xmath4 is equal to @xmath78 where @xmath79 , @xmath9 and @xmath80 denotes the number of degree-@xmath6 pseudocodewords - cover codewords corresponding to a particular pseudocodeword .",
    "] of the code with pseudoweight @xmath81 .",
    "[ prop : b ] the degree-@xmath6 pwef of the single parity - check ( spc ) code of length @xmath82 is @xmath83 - t^{(m)}({{\\mbox{\\boldmath $ x$ } } } ) \\label{eq : b_definition}\\ ] ] where @xmath84 , @xmath85 , @xmath86 , and for @xmath87 @xmath88 where the set @xmath89 in ( [ eq : t_recursion ] ) is the set of integer vectors @xmath90 satisfying @xmath91 for all @xmath92 , @xmath93 and where @xmath94 is even .    in this case",
    "@xmath26 is a length-@xmath82 row vector of ones , so we have @xmath95 where ( using definition [ def : cone ] ) @xmath96 is the set of integer vectors @xmath81 which satisfy    ( @xmath96@xmath97 ) : :    @xmath98 ( @xmath96@xmath99 ) : :    @xmath100 ( @xmath96@xmath101 ) : :    if there exists @xmath102 with    @xmath103 and @xmath104 for    @xmath105 , then    @xmath106    it is straightforward to check that in ( [ eq : b_definition ] ) , the term @xmath107\\ ] ] takes into account all integer vectors @xmath81 which satisfy conditions ( @xmath96@xmath97 ) and ( @xmath96@xmath99 ) , and the term @xmath108 takes into account all those which violate the condition ( @xmath96@xmath101 ) .",
    "in particular @xmath109 , @xmath110 , and @xmath111 .",
    "also note that @xmath112 \\nonumber \\\\ - \\frac{\\partial t^{(m)}({{\\mbox{\\boldmath $ x$}}})}{\\partial x_r } \\label{eq : b_derivative}\\end{gathered}\\ ] ] for @xmath13 .",
    "for a positive integer @xmath4 , we define a @xmath2-regular ldpc code ensemble @xmath113 as follows .",
    "the tanner graph of an ldpc code from the ensemble consists of @xmath4 variable nodes of degree @xmath114 , and @xmath115 check nodes of degree @xmath82 .",
    "the variable and check node sockets are connected by a permutation on the @xmath116 edges of the graph , each permutation being equiprobable .",
    "the concept of degree-@xmath6 assignment is defined next .",
    "this definition is a generalization of the definition of assignment in @xcite ( the definition in @xcite corresponds to that of a degree-@xmath97 assignment ) .",
    "a _ degree-@xmath6 assignment _ is a labelling of the edges of the tanner graph with numbers from the set @xmath117 .",
    "an assignment is said to have _",
    "@xmath118 if @xmath119 edges are labelled @xmath70 for each @xmath13 .",
    "an assignment is said to be @xmath6-_check - valid _ if according to this labelling , every check node recognizes a valid local degree-@xmath6 pseudocodeword .    for any positive integer @xmath6 , the growth rate of the degree-@xmath6 awgn - pseudoweight distribution of the @xmath2-regular ldpc code ensemble sequence @xmath120",
    "is defined by @xmath121 \\label{eq : growth_rate_result}\\ ] ] where @xmath122 denotes the expectation operator over the ensemble @xmath113 , and @xmath123 denotes the number of degree-@xmath6 pseudocodewords of awgn - pseudoweight @xmath124 of a randomly chosen ldpc code in the ensemble @xmath113 .",
    "the limit in ( [ eq : growth_rate_result ] ) assumes the inclusion of only those positive integers @xmath4 for which @xmath125 and @xmath126 $ ] is positive ( i.e. , where the expression whose limit we seek is well defined ) .",
    "we next define a notion of _ asymptotic goodness _ of an ldpc code ensemble sequence .    for each @xmath0 ,",
    "let @xmath127 be the growth rate of the degree-@xmath6 pseudoweight distribution of an ldpc code ensemble sequence , and let @xmath128 .",
    "the ensemble sequence is said to be _ asymptotically good _ if and only if @xmath129 .",
    "the following theorem constitutes the main result of the paper .",
    "the growth rate of the degree-@xmath6 pseudoweight distribution of the @xmath2-regular ldpc code ensemble sequence @xmath120 is given by @xmath130 where @xmath131 , @xmath132 and @xmath133 are the solutions to the system of @xmath1 equations in @xmath1 unknowns is given by proposition [ prop : b ] .",
    "] @xmath134 for each @xmath13 , @xmath135 - j \\log x_{0,r } \\\\",
    "= \\lambda \\left ( 2r \\sum_{s=1}^{m } s q_s - \\alpha r^2 \\right ) \\label{eq : lagrange_mult_theorem}\\end{gathered}\\ ] ] for each @xmath13 , and @xmath136 satisfying @xmath137 and @xmath138 for each @xmath13 .",
    "[ thm : growth_rate ]    consider a degree-@xmath6 pseudocodeword @xmath66 with pseudoweight @xmath139 , where @xmath132 .",
    "this pseudocodeword naturally induces a degree-@xmath6 assignment of pseudoweight @xmath140 . using ( [ eq : awgn - pseudoweight ] )",
    ", the awgn - pseudoweight of @xmath68 may be written as @xmath141 where @xmath142 rearranging ( [ eq : alpha ] ) , and defining @xmath143 appropriately , yields ( [ eq : g_definition ] ) .",
    "the expected number of degree-@xmath6 pseudocodewords of pseudoweight @xmath139 is then @xmath144 = \\binom{n}{{{\\mbox{\\boldmath $ q$}}}n } \\cdot p^{(m)}_{\\mbox{\\scriptsize c - valid}}(j { { \\mbox{\\boldmath $ q$ } } } ) \\ ; , \\label{eq : expected_over_q}\\ ] ] where @xmath145 represents the probability that a randomly chosen degree-@xmath6 assignment with pseudoweight @xmath146 is @xmath6-check - valid .",
    "this probability is given by @xmath147 where @xmath148 denotes the number of @xmath6-check - valid degree-@xmath6 assignments of pseudoweight @xmath146 .",
    "the numerator of ( [ eq : prob_valid_assign ] ) may be written as be the number of ways of obtaining an outcome @xmath149 in experiment @xmath150 , and let @xmath151 be the number of ways of obtaining an outcome @xmath152 in experiment @xmath153 .",
    "also let @xmath154 be the number of ways of obtaining an outcome @xmath155 in the combined experiment @xmath156 such that @xmath157 . denoting @xmath158 ,",
    "the generating functions @xmath159 , @xmath160 and @xmath161 are related by @xmath162 . ]",
    "@xmath163 \\ ; .\\ ] ] we next make use of the following result from ( * ? ? ?",
    "* theorem 2 ) :    let @xmath164 denote a multivariate polynomial with nonnegative coefficients . for a fixed vector of positive rational numbers @xmath165 , consider the set of positive integers @xmath166 such that @xmath167 for each @xmath13 and @xmath168 .",
    "then either this set is empty , or it has infinite cardinality ; if @xmath169 is one such @xmath166 , then so is @xmath170 for every positive integer @xmath114 . in the latter case ,",
    "the following limit is well defined and exists : @xmath171 \\\\",
    "= \\log r({{\\mbox{\\boldmath $ x$}}}_0 ) - \\sum_{r=1}^{m } \\xi_r \\log x_{0,r}\\end{gathered}\\ ] ] where @xmath131 is the unique positive real solution to the system of equations @xmath172 for each @xmath13 .",
    "[ lemma : optimization_1d ]    applying this lemma by substituting @xmath173 , @xmath174 and @xmath175 , we obtain that as @xmath5 @xmath176 where @xmath131 is the unique positive real solution to the system given by ( [ eq : bldx0_q_eqn ] ) for each @xmath13 .",
    "note that ( [ eq : bldx0_q_eqn ] ) provides an implicit definition of @xmath177 as a function of @xmath178 .",
    "using stirling s formula , the multinomial coefficients in  ( [ eq : expected_over_q ] ) and  ( [ eq : prob_valid_assign ] ) may be approximated as @xmath5 as @xmath179    therefore as @xmath5 @xmath180 \\rightarrow \\exp \\bigg\\ { n \\bigg [ \\frac{j}{k } \\log b^{(m)}({{\\mbox{\\boldmath $ x$}}}_0 ) \\\\ - j \\sum_{r=1}^{m } q_r \\log x_{0,r } - ( j-1 ) h({{\\mbox{\\boldmath $ q$ } } } ) \\bigg ] \\bigg\\}\\end{gathered}\\ ] ]    the expected number of degree-@xmath6 pseudocodewords with awgn - pseudoweight @xmath181 is equal to the sum of the numbers of degree-@xmath6 pseudocodewords with pseudoweight @xmath178 satisfying ( [ eq : g_definition ] ) , i.e. @xmath182 = \\sum_{{{\\mbox{\\scriptsize \\boldmath $ q$}}}\\ ; : \\ ; g({{\\mbox{\\scriptsize \\boldmath $ q$}}})=0 } \\mathbb{e}_{{{\\mathcal{m}}}_n } \\left [ n^{(m)}({{\\mbox{\\boldmath $ q$ } } } ) \\right ] \\ ; .\\ ] ] note that the asymptotic expression as @xmath183 is dominated by that @xmath178 satisfying ( [ eq : g_definition ] ) which maximizes the argument of the exponential function , @xmath184 .",
    "therefore as @xmath183 @xmath182 \\rightarrow \\exp \\left\\ { n \\left ( \\max_{{{\\mbox{\\scriptsize \\boldmath $ q$}}}\\ ; : \\ ; g({{\\mbox{\\scriptsize \\boldmath $ q$}}})=0 } f({{\\mbox{\\boldmath $ q$ } } } ) \\right ) \\right\\ } \\label{eq : optimization_for_awgn_pw}\\ ] ] where @xmath185 and @xmath143 is given by ( [ eq : g_definition ] ) .",
    "we solve this constrained optimization problem using lagrange multipliers .",
    "at the maximum , we must have @xmath186 for all @xmath187 , where @xmath133 denotes the lagrange multiplier .",
    "this yields @xmath188 \\\\ - j \\left ( \\sum_{s=1}^{m } \\frac{q_s}{x_{0,s } } \\frac{\\partial x_{0,s}}{\\partial q_r } + \\log x_{0,r } \\right ) \\\\ - ( j-1 ) \\frac{\\partial h({{\\mbox{\\boldmath $ q$}}})}{\\partial q_r } = \\lambda \\frac{\\partial g({{\\mbox{\\boldmath $ q$}}})}{\\partial q_r } \\end{gathered}\\ ] ] which is equivalent to @xmath189 \\\\ - j \\log x_{0,r } + ( j-1 ) \\log \\left ( \\frac{q_r}{1-\\sum_{s=1}^{m } q_s } \\right ) \\\\ = \\lambda \\left ( 2r \\sum_{s=1}^{m } s q_s - \\alpha r^2 \\right ) \\ ; .\\end{gathered}\\ ] ] the term in square brackets is equal to zero for each @xmath13 due to ( [ eq : bldx0_q_eqn ] ) ; therefore this simplifies to ( [ eq : lagrange_mult_theorem ] ) for each @xmath13 .",
    "note that for the case @xmath190 , the maximization in ( [ eq : optimization_for_awgn_pw ] ) is trivial and therefore the solution may be obtained directly from ( [ eq : f_definition ] ) as @xmath191 \\\\ - j \\alpha \\log x_{0 } - ( j-1 ) h(\\alpha ) \\label{eq : growth_rate_m1}\\end{gathered}\\ ] ] where @xmath192 is the unique positive real solution to the equation @xmath193 = \\\\ x_0 \\left [ \\left ( 1+x_0 \\right)^{k-1 } - \\left ( 1-x_0 \\right)^{k-1 } \\right ] \\ ; .",
    "\\label{eq : x0_m1}\\end{gathered}\\ ] ] note that @xmath194 is simply the growth rate of the weight distribution in this case , originally obtained in @xcite .",
    "also , this solution may be regarded as a special case of theorem [ thm : growth_rate ] where the solution for @xmath133 via ( [ eq : lagrange_mult_theorem ] ) is redundant .",
    "in this section the growth rates of the awgn - pseudoweight of two example ldpc code ensembles are evaluated using the solution of theorem [ thm : growth_rate ] .",
    "the growth rate curves for the @xmath7-regular ldpc code ensemble and for the @xmath8-regular ldpc code ensemble are shown in figures [ cap : gallager_36_ensemble ] and [ cap : gallager_48_ensemble ] respectively .",
    "note that @xmath195 for both ensembles .",
    "it is worthwhile to note some distictions between the present analysis and that of ( * ? ? ?",
    "* corollary 50 ) . in (",
    "* corollary 50 ) , it is proved that @xmath2-regular ensembles with @xmath3 have a ratio of minimum awgn - pseudoweight to block length @xmath4 which decreases to zero asymptotically as @xmath5 .",
    "this result is not in conflict with the results of figures [ cap : gallager_36_ensemble ] and [ cap : gallager_48_ensemble ] .",
    "the detrimental pseudocodewords of ( * ? ? ?",
    "* corollary 50 ) are derived from the `` canonical completion '' ( * ? ? ?",
    "* definition 46 ) and , asymptotically , have awgn - pseudoweight _ sublinear _ in the block length  therefore , these pseudocodewords do not appear in the present analysis .",
    "also , note that the analysis of ( * ? ? ?",
    "* corollary 50 ) takes the limit @xmath196 prior to ( or jointly with ) the limit @xmath5 , in contrast to the present analysis which takes the limit @xmath5 for finite @xmath6 . finally ,",
    "the result of ( * ? ? ?",
    "* corollary 50 ) is concerned with _ minimum _",
    "awgn - pseudoweight and not with the multiplicities of the corresponding pseudocodewords ."
  ],
  "abstract_text": [
    "<S> a solution is presented for the asymptotic growth rate of the awgn - pseudoweight distribution of regular low - density parity - check ( ldpc ) code ensembles for a selected graph cover degree @xmath0 . </S>",
    "<S> the evaluation of the growth rate requires solution of a system of @xmath1 nonlinear equations in @xmath1 unknowns . </S>",
    "<S> simulation results for the pseudoweight distribution of two regular ldpc code ensembles are presented for graph covers of low degree . </S>"
  ]
}
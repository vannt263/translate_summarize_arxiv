{
  "article_text": [
    "a _ binary code _ of length @xmath0 is a subset of @xmath1 , where @xmath2 is the field of two elements .",
    "all codes in this paper are binary .",
    "the _ hamming distance _ between two codewords is the number of coordinates in which they differ .",
    "the _ minimum distance _ of a code is the minimum hamming distance between any two distinct codewords .",
    "an @xmath3 code has length @xmath0 , cardinality @xmath4 and minimum distance @xmath5 .",
    "the function @xmath6 gives the the maximum integer @xmath4 for which an @xmath7 code exists .",
    "an @xmath8 code is called _",
    "optimal_.    for a code with minimum distance @xmath5 , the balls of radius @xmath9 centered around the codewords are nonintersecting and such a code is called an _ @xmath10-error - correcting code . _",
    "if the balls cover the entire ambient space , then the code  which is obviously optimal  is called _ perfect _ , or _",
    "@xmath10-perfect_. all @xmath11-perfect binary codes have parameters @xmath12 with @xmath13 arbitrary ; linear such codes are known as _",
    "hamming codes_.    the @xmath11-perfect binary codes of length @xmath14 were recently classified  @xcite .",
    "there are 5983 such codes , up to equivalence .",
    "two codes are _ equivalent _ if one can be obtained from the other by adding a vector @xmath15 to all codewords and letting a permutation @xmath16 act on the coordinates .",
    "the _ automorphism group _ of a code consists of all such mappings @xmath17 from the code onto itself .    _",
    "shortening _ a code is the process of removing a coordinate and all codewords that did not have a specified value in that coordinate .",
    "best and brouwer @xcite used linear programming to prove that shortening any @xmath11-perfect binary code @xmath18 times with @xmath19 yields an optimal @xmath20 code . but can one obtain _ all _ optimal codes with those parameters , up to equivalence , by shortening in that manner ?",
    "etzion and vardy @xcite asked this question , and blackmore @xcite gave an affirmative answer to the question for @xmath21 .",
    "the main result of the current work is a negative answer to the question for @xmath22 .",
    "the main result of the paper relies on a technique for transforming one error - correcting code into another ; this technique , called switching , is considered in section [ switch ] .",
    "the classification of doubly shortened 1-perfect codes of length 15 and the result obtained by applying switching to these  another two optimal codes  is discussed in section [ result ] .",
    "the paper is concluded in section [ con ] .",
    "switching as a general framework comprises local transformations of combinatorial structures that keep some of the main parameters of the structure unchanged .",
    "for example , a of a graph does not change the degrees of the vertices @xcite . in coding theory ,",
    "switching has in particular been used to construct new perfect codes from old ones @xcite .",
    "we shall here see that as a code switch maintains the minimum distance of the code , it is applicable to any error - correcting codes , not just perfect ones .",
    "the possibility of using switching more generally for error - correcting codes might seem obvious , but we have not encountered any related comments in the literature so we include a comprehensive treatment here .    to switch a binary code with minimum distance @xmath5 ,",
    "one picks a coordinate and forms a graph with one vertex for each codeword and an edge between two codewords that are at distance @xmath5 from each other _ and _ that differ in the particularized coordinate .",
    "we call the auxiliary graph obtained in this manner a _ switching graph_. _ switching _ now means changing the value of the particularized coordinate in the codewords of a connected component of the switching graph .",
    "switching does not reduce minimum distance .    since at most one coordinate value",
    "is changed in each codeword and all changes are carried out in the same coordinate , only the distance between pairs of words that are originally at distance @xmath5 from each other can decrease to @xmath23 .",
    "but such pairs of codewords either have the same value or different values in the particularized coordinate . in the former case the distance can not decrease , and in the latter case the codewords are adjacent in the switching graph and belong to the same connected component ( so the switch does not affect the distance ) .    with a connected switching graph",
    ", switching gives just an equivalent code , but it is not difficult to come up with sufficient conditions for the switching graph not to be connected .",
    "for example , if @xmath5 is odd , then two words at odd distance from each other when ignoring the particularized coordinate do not belong to the same connected component .",
    "this is in fact the reason why 1-perfect binary codes always have at least two components ; see @xcite and its references .    for a given code",
    ", switching is a tool for obtaining other codes . by applying switching to a code in all possible ways  with respect to both picking the particularized coordinate and the connected component of the switching graph  and",
    "repeatedly doing the same for the new codes until no further codes are found , one obtains the _ switching class _ in which a code resides . as an example , switching partitions the 1-perfect binary codes of length 15 into nine switching classes @xcite .",
    "by shortening the 1-perfect binary codes of length 15 twice in all possible ways and rejecting equivalent codes , one gets a classification of doubly shortened 1-perfect codes of length 15 . in this manner",
    ", we obtained @xmath24 inequivalent @xmath25 codes from the 5983 1-perfect @xmath26 codes . detecting equivalent codes was the main challenge in this endeavour ; this was done by computing canonical equivalence class representatives with an algorithm from  @xcite .",
    "the @xmath24 doubly shortened 1-perfect codes are partitioned into 21 switching classes . in the calculation of switching classes , two more @xmath25 codes were encountered .",
    "consequently , these are not doubly shortened 1-perfect codes .",
    "they have automorphism groups of orders 128 and 96 , and both reside in the largest of the switching classes , which contains @xmath27 codes .",
    "the large automorphism groups allows succinct description of the codes , which can be found in table  [ tbl : codes ] .",
    "the automorphisms are given as permutations acting on coordinates , and if a coordinate is marked with an overline , then the value in that coordinate should be flipped before applying the permutation .",
    "the coordinates are numbered from left to right .",
    "the codes are also available , in non - compressed form , in the arxiv source of this document .",
    ".two @xmath25 codes [ cols= \" < , < \" , ]      +    lll + @xmath28 & @xmath29 & @xmath30 + @xmath31 & @xmath32 & @xmath33 +     +    ll +    as an independent verification of the fact that the two codes are not doubly shortened 1-perfect codes , we applied the algorithm from @xcite  solving instances of the exact cover problem with the libexact library  @xcite  for constructing 1-perfect codes from partial codes .",
    "further shortening of the two codes reveals  with the computational approach just mentioned  that they lead to some @xmath34 and @xmath35 codes that are not , respectively , triply and four times shortened 1-perfect codes of length 15 , and also to some codes that are shortened .",
    "the fact that all new codes found by switching are indeed non - lengthenable increases the credibility of the classification . to gain even more confidence in it ,",
    "the consistency of the results was verified by counting the number of distinct perfect binary codes of length @xmath14 in two different ways . using the orbit - stabilizer theorem for the classification of these codes",
    ", it was concluded that there are @xmath36 such codes  @xcite .",
    "we also know that the number of codes is @xmath37 where @xmath38 contains equivalence class representatives of the twice shortened perfect codes , @xmath39 is the number of distinct ways of extending @xmath40 to a perfect binary code , and @xmath41 is the order of the acting group . as this formula yielded the expected result , the computations are most likely correct .",
    "the current work settles an open problem but leads to some natural further questions that we have so far been unable to answer .",
    "have all @xmath42 codes now been found ? do the two counterexamples have some particular property that easily shows that they are not doubly shortened perfect codes ? can the structure of the two codes be generalized or is there some construction that can be applied to them to obtain an infinite family of similar codes ?    as a final note we remark that if we relax the requirement that the codes in this study be doubly shortened perfect codes of length 15 and allow shortenings of _ any _ perfect codes , then a recent result by avgustinovich and krotov  @xcite shows that such shortenings always exist ."
  ],
  "abstract_text": [
    "<S> the doubly shortened perfect codes of length 13 are classified utilizing the classification of perfect codes in [ p.r.j .  </S>",
    "<S> stergrd and o. pottonen , the perfect binary one - error - correcting codes of length 15 : part i  classification , _ ieee trans .  inform .  </S>",
    "<S> theory _ , to appear ] ; there are 117821 such ( 13,512,3 ) codes . by applying a switching operation to those codes , two more ( 13,512,3 ) codes are obtained , which are then not doubly shortened perfect codes . </S>"
  ]
}
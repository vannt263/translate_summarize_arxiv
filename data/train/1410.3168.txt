{
  "article_text": [
    "recently , the diffusion state distance ( dsd , for short ) was introduced in @xcite to capture functional similarity in protein - protein interaction ( ppi ) networks .",
    "the diffusion state distance is much more effective than the classical shortest - path distance for the problem of transferring functional labels across nodes in ppi networks , based on evidence presented in @xcite .",
    "the definition of dsd is purely graph theoretic and is based on random walks .",
    "let @xmath3 be a simple undirected graph on the vertex set @xmath4 .",
    "for any two vertices @xmath5 and @xmath6 , let @xmath7 be the expected number of times that a random walk starting at node @xmath5 and proceeding for @xmath8 steps , will visit node @xmath6 .",
    "let @xmath9 be the vector @xmath10 .",
    "the diffusion state distance ( or dsd , for short ) between two vertices @xmath5 and @xmath6 is defined as @xmath11 provided the limit exists ( see @xcite ) . here",
    "the @xmath12-norm is not essential . generally , for @xmath13",
    ", one can define the dsd @xmath0-distance as @xmath14 provided the limit exists .",
    "( we use @xmath0 rather than @xmath15 to avoid confusion , as @xmath16 will be used as a probability throughout the paper . )    in @xcite , cowen et al .",
    "showed that the above limit always exists whenever the random walk on @xmath17 is ergodic ( i.e. , @xmath17 is connected non - bipartite graph ) .",
    "they also prove that this distance can be computed by the following formula : @xmath18 where @xmath19 is the diagonal degree matrix , @xmath20 is the adjacency matrix , and @xmath21 is the constant matrix in which each row is a copy of @xmath22 , @xmath23 is the unique steady state distribution .",
    "a natural question is how to define the diffusion state distance for a bipartite graph .",
    "we suggest to use the lazy random walk . for a given @xmath24",
    ", one can choose to stay at the current node @xmath5 with probability @xmath25 , and choose to move to one of its neighbors with probability @xmath26 .",
    "in other words , the transitive matrix of the @xmath25-lazy random walk is @xmath27    similarly , let @xmath28 be the expected number of times that the @xmath25-lazy random walk starting at node @xmath5 and proceeding for @xmath8 steps , will visit node @xmath6 .",
    "let @xmath29 be the vector @xmath30 .",
    "the @xmath25-diffusion state distance @xmath0-distance between two vertices @xmath5 and @xmath6 is @xmath31    [ t1 ] for any connected graph @xmath17 and @xmath32 , the @xmath33 is always well - defined and satisfies @xmath34 here @xmath35 is the matrix of green s function of @xmath17 .",
    "observe that @xmath36 is independent of the choice of @xmath25 .",
    "naturally , we define the dsd @xmath0-distance of any graph @xmath17 as : @xmath37 this definition extends the original definition for non - bipartite graphs .    with properly chosen @xmath25 , @xmath38 converges faster than @xmath39 .",
    "this fact leads to a faster algorithm to estimate a single distance @xmath40 using random walks .",
    "we will discuss it in remark [ r1 ] .",
    "green s function was introduced in 1828 by george green @xcite to solve some partial differential equations , and it has found many applications ( e.g. @xcite , @xcite,@xcite , @xcite , @xcite , @xcite ) .",
    "the green s function on graphs was first investigated by chung and yau @xcite in 2000 .",
    "given a graph @xmath3 and a given function @xmath41 , consider the problem to find @xmath42 satisfying the discrete laplace equation @xmath43 here @xmath44 is the transition probability of the random walk from @xmath45 to @xmath46 .",
    "roughly speaking , green s function is the left inverse operator of @xmath47 ( for the graphs with boundary ) .",
    "it is closely related to the heat kernel of the graphs ( see also @xcite ) and the normalized laplacian .    in this paper",
    ", we will use green s function to compute the dsd @xmath0-distance for various graphs .",
    "the maximum dsd @xmath0-distance varies from graphs to graphs .",
    "the maximum dsd @xmath0-distance for paths and cycles are at the order of @xmath48 while the @xmath0-distance for some random graphs @xmath1 and @xmath2 are constant for some ranges of @xmath16 .",
    "the hypercubes are somehow between the two classes .",
    "the dsd @xmath12-distance is @xmath49 while the @xmath0-distance is @xmath50 for @xmath51 .",
    "our method for random graphs is based on the strong concentration of the laplacian eigenvalues .",
    "the paper is organized as follows . in section 2",
    ", we will briefly review the terminology on the laplacian eigenvalues , green s function , and heat kernel .",
    "the proof of theorem [ t1 ] will be proved in section 3 . in section 4 , we apply green s function to calculate the dsd distance for various symmetric graphs like paths , cycles , and hypercubes .",
    "we will calculate the dsd @xmath52-distance for random graphs @xmath1 and @xmath53 in section 5 . in the last section",
    ", we examined two brain networks : a cat and a rhesus monkey .",
    "the distributions of the dsd distances are calculated .",
    "in this paper , we only consider undirected simple graph @xmath3 with the vertex set @xmath54 and the edge set @xmath55 . for each vertex @xmath56 ,",
    "the _ neighborhood _ of @xmath45 , denoted by @xmath57 , is the set of vertices adjacent to @xmath45 .",
    "the _ degree _ of @xmath45 , denoted by @xmath58 , is the cardinality of @xmath57 .",
    "we also denote the maximum degree by @xmath59 and the minimum degree by @xmath60 .    without loss of generalization",
    ", we assume that the set of vertices is ordered and assume @xmath61=\\{1,2,\\ldots , n\\}$ ] .",
    "let @xmath20 be the adjacency matrix and @xmath62 be the diagonal matrix of degrees .",
    "for a given subset @xmath63 , let the volume of @xmath63 to be @xmath64 .",
    "in particular , we write @xmath65 .",
    "let @xmath66 be the linear space of all real functions on @xmath54 .",
    "the _ discrete laplace operator _",
    "@xmath67 is defined as @xmath68 the laplace operator can also written as a @xmath69-matrix : @xmath70 here @xmath71 is the transition probability matrix of the ( uniform ) random walk on @xmath17 . note that @xmath47 is not symmetric .",
    "we consider a symmetric version @xmath72 which is so called the _",
    "normalized laplacian_. both @xmath47 and @xmath73 have the same set of eigenvalues .",
    "the eigenvalues of @xmath73 can be listed as @xmath74 the eigenvalue @xmath75 if and only if @xmath17 is connected while @xmath76 if and only if @xmath17 is a bipartite graph",
    ". let @xmath77 be a set of orthogonal unit eigenvectors . here",
    "@xmath78 is the positive unit eigenvector for @xmath79 and @xmath80 is the eigenvector for @xmath81 ( @xmath82 ) .",
    "let @xmath83 and @xmath84 .",
    "then @xmath85 is an orthogonal matrix and @xmath73 be diagonalized as @xmath86    equivalently , we have @xmath87    the _ green s function _",
    "@xmath88 is the matrix with its entries , indexed by vertices @xmath45 and @xmath46 , defined by a set of two equations : @xmath89 ( this is the so - called green s function for graphs without boundary in @xcite . )",
    "the _ normalized green s function _",
    "@xmath90 is defined similarly : @xmath91 the matrices @xmath92 and @xmath93 are related by @xmath94 alternatively , @xmath95 can be defined using the eigenvalues and eigenvectors of @xmath96 as follows : @xmath97 where @xmath98 .",
    "thus , we have @xmath99    for any real @xmath100 , the heat kernel @xmath101 is defined as @xmath102 thus , @xmath103 the heat kernel @xmath101 satisfies the heat equation @xmath104 the relation of the heat kernel and green s function is given by @xmath105 the heat kernel can be used to compute green s function for the cartesian product of two graphs .",
    "we will omit the details here .",
    "readers are directed to @xcite and @xcite for the further information .",
    "rewrite the transition probability matrix @xmath106 as @xmath107 for @xmath108 , let @xmath109 and @xmath110 . applying equation",
    ", we get @xmath111 then for any @xmath112 , the @xmath113-step transition matrix is @xmath114 denote @xmath115 as the @xmath116 entry in @xmath117 .",
    "@xmath118 thus , @xmath119 the limit @xmath120 forms the sum of @xmath121 geometric series : @xmath122 note each geometric series converges since the common ratio @xmath123 .",
    "thus ,    @xmath124    we have @xmath125    [ r1 ] observe that the convergence rate of @xmath126 is determined by @xmath127 .",
    "it is critical that we assume @xmath128 .",
    "when @xmath129 then @xmath130 holds only if @xmath131 , i.e. @xmath17 is a non - bipartite graph ( see @xcite ) .    when @xmath132 , @xmath133 ( as a function of @xmath25 ) achieves the minimum value @xmath134 at @xmath135",
    "this is the best mixing rate that the @xmath25-lazy random walk on @xmath17 can achieve . using the @xmath25-lazy random walks ( with @xmath135 ) to approximate",
    "the dsd @xmath0-distance will be faster than using regular random walks .",
    "equation implies @xmath136 . combining with theorem [ t1 ]",
    ", we have    for any connected simple graph @xmath17 , and any two vertices @xmath5 and @xmath6 , we have @xmath137 .    note that for any connected graph @xmath17 with diameter @xmath138 ( lemma 1.9 , @xcite ) @xmath139 this implies a uniform bound for the dsd @xmath52 distances on any connected graph @xmath17 on @xmath121 vertices .",
    "@xmath140 this is a very coarse upper bound .",
    "but it does raise an interesting question `` how large can the dsd @xmath0-distance be ? ''",
    "in this section , we use green s function to compute the dsd @xmath0-distance ( between two vertices of the distance reaching the diameter ) for paths , cycles , and hypercubes .",
    "we label the vertices of @xmath141 as @xmath142 , in sequential order .",
    "chung and yau computed the green s function @xmath95 of the weighed path with no boundary ( theorem 9 , @xcite ) .",
    "it implies that green s function of the path @xmath141 is given by : for any @xmath143 , @xmath144 when @xmath145 , we have @xmath146 applying @xmath147 , we get @xmath148 we have @xmath149    thus , @xmath150    for any @xmath13 , the dsd @xmath0-distance of the path @xmath141 between @xmath151 and @xmath121 satisfies @xmath152    @xmath153    for @xmath154 , we have the following exact result : @xmath155      now we consider green s function of cycle @xmath156 . for @xmath157 ,",
    "let @xmath158 be the graph distance of @xmath159 in @xmath156 .",
    "we have the following lemma .    [ lcn ] for even @xmath160 , green s function @xmath88 of @xmath156",
    "is given by @xmath161 for odd @xmath162 , green s function @xmath88 of @xmath156 is given by @xmath163    we only prove the even case here .",
    "the odd case is similar and will be left to the readers .    for @xmath160",
    ", it suffices to verify that @xmath88 satisfies equations and . to verify equation , we need show @xmath164 let @xmath165 and @xmath166 . for @xmath167 , we have @xmath168 when",
    "@xmath169 , we have @xmath170 to verify equation , it is enough to verify @xmath171 this can be done by induction on @xmath8 .    for any @xmath13",
    ", the dsd @xmath0-distance of the cycle @xmath156 between @xmath151 and @xmath172 satisfies @xmath173    we only verify the case of even cycle here .",
    "the odd cycle is similar and will be omitted .",
    "for @xmath160 , the difference of @xmath174 and @xmath175 have a simple form : @xmath176 where @xmath177 .",
    "thus , @xmath178      now we consider the hypercube @xmath179 , whose vertices are the binary strings of length @xmath121 and whose edges are pairs of vertices differing only at one coordinate . chung and yau @xcite computed the green s function of @xmath179 : for any two vertices @xmath45 and @xmath46 with distance @xmath8 in @xmath179 , @xmath180    we are interested in the dsd distance between a pair of antipodal vertices .",
    "let @xmath181 denote the all-@xmath182-string and @xmath183 denote the all-@xmath151-string .",
    "for any vertex @xmath45 , if the distance between @xmath184 and @xmath45 is @xmath185 then the distance between @xmath186 and @xmath45 is @xmath187 .",
    "we have @xmath188 here we use the convention that @xmath189 for @xmath190 .    for any @xmath13",
    ", the dsd @xmath0-distance of the hypercube @xmath179 between @xmath191 and @xmath183 satisfies @xmath192 in particular , @xmath193 when @xmath51 while @xmath194 .",
    "equation follows from the definition of dsd @xmath0-distance and equation .",
    "let @xmath195 observe that @xmath196 , we only need to estimate @xmath197 for @xmath198",
    ". also we can throw away the terms in the second summation for @xmath199 since that part is at most half of @xmath197 . for @xmath200 , @xmath201",
    "thus @xmath197 has the same magnitude as @xmath202    for @xmath51 , we first bound @xmath203 by @xmath204 when @xmath205 , we have @xmath206 . the total contribution of those @xmath203 s is @xmath207 , which is negligible .",
    "now consider the term @xmath203 for @xmath208 .",
    "we bound @xmath203 by @xmath209 this implies @xmath210 .",
    "the lower bound @xmath211 is obtained by taking the term at @xmath212 .",
    "putting together , we have @xmath193 for @xmath51 .",
    "for @xmath154 , note that @xmath213 thus , @xmath194 .",
    "in this section , we will calculate the dsd @xmath0-distance in two random graphs models . for random graphs ,",
    "the non - zero laplacian eigenvalues of a graph @xmath17 are often concentrated around @xmath151 .",
    "the following lemma is useful to the dsd @xmath0-distance .",
    "[ l1 ] let @xmath214 be all non - zero laplacian eigenvalues of a graph @xmath17 .",
    "suppose there is a small number @xmath215 , so that for @xmath82 , @xmath216",
    ". then for any pairs of vertices @xmath217 , the dsd @xmath0-distance satisfies @xmath218    rewrite the normalized green s function @xmath90 as @xmath219 note that the eigenvalues of @xmath220 are @xmath221 .",
    "observe that for each @xmath222 , @xmath223 .",
    "we have @xmath224 thus , @xmath225 viewing @xmath226 as the error term , we first calculate the main term . @xmath227",
    "the @xmath52-norm of the error term can be bounded by @xmath228 to get the bound of @xmath0-norm from @xmath52-norm , we apply the following relation of @xmath0-norm and @xmath52-norm to the error term . for",
    "any vector @xmath229 , @xmath230 and @xmath231    the inequalities and follow from the triangular inequality of the @xmath0-norm and the upper bound of the error term .",
    "now we consider the classical erds - renyi random graphs @xmath1 .",
    "for a given @xmath121 and @xmath232 , @xmath1 is a random graph on the vertex set @xmath233 obtained by adding each pair @xmath234 to the edges of @xmath1 with probability @xmath16 independently .",
    "there are plenty of references on the concentration of the eigenvalues of @xmath1 ( for example , @xcite , @xcite,@xcite , and @xcite ) . here",
    "we list some facts on @xmath1 .    1 .   for @xmath235 ,",
    "almost surely @xmath1 is connected .",
    "2 .   for @xmath236",
    ", @xmath1 is `` almost regular '' ; namely for all vertex @xmath6 , @xmath237 .",
    "3 .   for @xmath238 ,",
    "all non - zero laplacian eigenvalues @xmath81 s satisfy ( see @xcite ) @xmath239 with @xmath240 , and note that @xmath1 is almost - regular . we get the following theorem .    for @xmath241 , almost surely for all pairs of vertices @xmath242 , the dsd @xmath0-distance of @xmath1 satisfies @xmath243 @xmath244    now we consider the random graphs with given expected degree sequence @xmath2 ( see @xcite , @xcite , @xcite , @xcite , @xcite ) .",
    "it is defined as follows :    1 .",
    "each vertex @xmath185 ( for @xmath245 ) is associated with a given positive weight @xmath246 .",
    "2 .   let @xmath247 .",
    "for each pair of vertices @xmath234 , @xmath248 is added as an edge with probability @xmath249 independently .",
    "( @xmath185 and @xmath250 may be equal so loops are allowed .",
    "assume @xmath251 for @xmath252 . )",
    "let @xmath253 be the minimum weight .",
    "there are many references on the concentration of the eigenvalues of @xmath2 ( see @xcite , @xcite , @xcite , @xcite , @xcite ) .",
    "the version used here is in @xcite .    1 .   for each vertex @xmath185 ,",
    "the expected degree of @xmath185 is @xmath246 .",
    "2 .   almost surely for all @xmath185 with @xmath254 , then the degree @xmath255 .",
    "if @xmath256 , all non - zero laplacian eigenvalues @xmath81 ( for @xmath82 ) , @xmath257    suppose @xmath256 , almost surely for all pairs of vertices @xmath242 , the dsd @xmath0-distance of @xmath2 satisfies @xmath258 @xmath259",
    "in this section , we will examine the distribution of the dsd distances for some biological networks .",
    "the set of graphs analyzed in this section include three graphs of brain data from the open connectome project @xcite and two more graphs built from the _ s. cerevisiae _ ppi network and _ s. pombe _ ppi network used in @xcite .",
    "figure 1 and 2 serves as a visual representation of one of the two brain data graphs : the graph of a cat and the graph of a rhesus monkey .",
    "the network of the cat brain has 65 nodes and 1139 edges while the network of rhesus monkey brain has 242 nodes and 4090 edges .",
    "each node in the rhesus graph represents a region in the cerebral cortex originally analyzed in @xcite .",
    "each edge represents axonal connectivity between regions and there is no distinction between strong and weak connections in this graph @xcite .",
    "the cat data - set follows a similar pattern where each node represents a region of the brain and each edge represents connections between them .",
    "the cat data - set represents 18 visual regions , 10 auditory regions , 18 somatomotor regions , and 19 frontolimbic regions@xcite .    for each network",
    "above , we calculated all - pair dsd @xmath12-distances .",
    "divide the possible values into many small intervals and compute the number of pairs falling into each interval .",
    "the results are shown in figure [ fig:1 ] .",
    "the patterns are quite surprising to us .",
    "both graphs has a small interval consisting of many pairs while other values are more or less uniformly distributed .",
    "we think , that phenomenon might be caused by the clustering of a dense core .",
    "the two graphs have many branches sticking out .",
    "since we are using @xmath12-distance , it does nt matter the directions of these branches sticking out when they are embedded into @xmath260 using green s function .",
    "s. bhamidi , r.w .",
    "van der hofstad , and j.s.h .",
    "van leeuwaarden , scaling limits for critical inhomogeneous random graphs with finite third moments , _ electronic journal of probability _ , * 15*(54 ) ( 2010 ) 1682 - 1702 .",
    "m.  cao , h.  zhang , j.  park , n.m .",
    "daniels , m.e .",
    "crovella , l.j .",
    "cowen , and b.  hescott , going the distance for protein function prediction : a new distance metric for protein interaction networks , plos one ( 2013 ) , * 8*(10):e76339 .                f.  chung , l.  lu , and v.  h.  vu , eigenvalues of random power law graphs , _ ann .",
    "_ , * 7 * ( 2003 ) , 2133 . f.  chung , l.  lu , and v.  h.  vu , spectra of random graphs with given expected degrees , _ proc .  natl",
    ".  acad .",
    "usa _ , * 100*(11 ) ( 2003 ) , 63136318 .",
    "a.  coja - oghlan , on the laplacian eigenvalues of @xmath1 , _ combin .",
    "_ , * 16*(6 ) ( 2007 ) , 923946 .",
    "a.  coja - oghlan and a.  lanka , the spectral gap of random graphs with given expected degrees , _ electron .",
    "j.  combin .",
    "_ , * 16 * ( 2009 ) , r138 ."
  ],
  "abstract_text": [
    "<S> the diffusion state distance ( dsd ) was introduced by cao - zhang - park - daniels - crovella - cowen - hescott [ _ plos one , 2013 _ ] to capture functional similarity in protein - protein interaction networks . </S>",
    "<S> they proved the convergence of dsd for non - bipartite graphs . in this paper </S>",
    "<S> , we extend the dsd to bipartite graphs using lazy - random walks and consider the general @xmath0-version of dsd . we discovered the connection between the dsd @xmath0-distance and green s function , which was studied by chung and yau [ _ j . </S>",
    "<S> combinatorial theory ( a ) , 2000 _ ] . based on that , we computed the dsd @xmath0-distance for paths , cycles , hypercubes , as well as random graphs @xmath1 and @xmath2 . </S>",
    "<S> we also examined the dsd distances of two biological networks . </S>"
  ]
}
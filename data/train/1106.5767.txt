{
  "article_text": [
    "two kinds of shuffles are commonly studied : perfect shuffle and ordinary shuffle .    for two words",
    "@xmath0 , @xmath1 of the same length , we define their _ perfect shuffle _ @xmath2 . for example , @xmath3 .",
    "note that @xmath4 need not equal @xmath5 .",
    "this definition is extended to languages as follows : @xmath6 if @xmath7 denotes the reverse of @xmath8 , then note that @xmath9 .",
    "it is sometimes useful to allow @xmath10 , where @xmath11 , @xmath12 , in which case we define @xmath13 .",
    "the _ ordinary shuffle _",
    "@xmath14 of two words is a finite _ set _ , the set of words obtainable from merging the words @xmath8 and @xmath15 from left to right , but choosing the next symbol arbitrarily from @xmath8 or @xmath15 . more formally , @xmath16 this definition is symmetric , and @xmath17 .",
    "the definition is extended to languages as follows : @xmath18    ( as a mnemonic , the symbol @xmath19 is larger than @xmath20 in size , and similarly @xmath19 generally produces a set larger in cardinality than @xmath20 . )    as is well - known , the shuffle ( resp .",
    ", perfect shuffle ) of two regular languages is regular , and the shuffle ( resp .",
    ", perfect shuffle ) of a context - free language with a regular language is context - free .",
    "perhaps the easiest way to see all these results is by using morphisms and inverse morphisms , and relying on the known closure properties of these transformations , as follows :    if @xmath21 , create a new alphabet @xmath22 by putting primes on all the letters of @xmath23 .",
    "define @xmath24 and @xmath25 for @xmath26 .",
    "define @xmath27 for @xmath26 . then @xmath28    in a similar way , @xmath29    however , the shuffle ( resp . ,",
    "perfect shuffle ) of two context - free languages need not be context - free .",
    "for example , if @xmath30 and @xmath31 , then @xmath32 is not a cfl .",
    "if it were , then @xmath33 would be a cfl , which it is nt ( via the pumping lemma ) .",
    "similarly , if @xmath34 and @xmath35 , then @xmath36 , which is clearly not a cfl .    for these , and other facts , see @xcite .",
    "instead of shuffling languages together , we can take a language and shuffle ( resp . , perfect shuffle ) each word with itself .",
    "another variation is to shuffle each word with its reverse .",
    "this gives four different transformations on languages , which we call self - shuffles :    @xmath37    we would like to understand how these transformations affect regular and context - free languages .",
    "we obtain some results , but other questions are still open .",
    "if @xmath38 is regular , then @xmath39 need not be context - free .",
    "we show that @xmath40 is not a cfl .",
    "suppose it is , and consider @xmath41 , where @xmath42 .",
    "since @xmath43 is regular , it suffices to show that @xmath44 is not context - free .",
    "now consider an arbitrary word @xmath45 .",
    "then @xmath46 for some @xmath47 , and there exists a @xmath48 such that @xmath49 .",
    "the structure of @xmath50 allows us to determine @xmath15 .",
    "let @xmath51 and @xmath52 be copies of @xmath15 such that @xmath53 , and the first letter of @xmath50 is taken from @xmath51 .",
    "the first symbol of @xmath15 is evidently @xmath54 .",
    "it follows that the prefix @xmath55 of @xmath50 is taken entirely from @xmath51 , since the @xmath54 is taken from @xmath51 by definition and the first symbol of @xmath52 is 0 .",
    "therefore @xmath55 is a prefix of @xmath51 .",
    "it follows that @xmath52 also contains @xmath55 as a prefix , and since @xmath56 this is only possible if the first @xmath54 of @xmath52 is located in the @xmath57 block of @xmath50 .",
    "otherwise , @xmath52 would be a subsequence of @xmath58 and @xmath51 would have @xmath59 as a prefix ( implying that @xmath60 ) .",
    "furthermore , the second symbol of @xmath52 being @xmath61 implies that exactly one of the 0 s in the @xmath57 block is from @xmath52 .",
    "thus the rest are from @xmath51 and @xmath62 is a prefix of @xmath51 .",
    "note that @xmath51 and @xmath52 both end in @xmath61 , and @xmath50 ends in @xmath58 . by the same logic as before",
    ", we can conclude that @xmath58 is a suffix of exactly one of them , and that the other ends in the @xmath63 block .",
    "thus @xmath52 contains @xmath58 as a suffix and @xmath51 ends in the @xmath63 block ( otherwise , @xmath60 ) .",
    "finally , since the second last symbol of @xmath51 is @xmath54 and @xmath51 ends in the @xmath63 block , we can conclude that @xmath51 contains exactly one @xmath61 from the @xmath63 block and that @xmath64 .",
    "unshuffling @xmath51 from @xmath50 yields @xmath65 .",
    "recall that @xmath66 .",
    "so , @xmath67 and since @xmath47 we know that @xmath68 + if @xmath45 then @xmath69    since @xmath50 was arbitrary , we have @xmath70 which is clearly not a cfl , using the pumping lemma .    in a previous version of this paper , proving that @xmath40 is not context - free was listed as an open problem .",
    "after this was solved by d. henshall , a solution was given by georg zetzsche independently .",
    "similarly , we can show    @xmath71 is not context - free .",
    "[ three ]    we use ogden s lemma .",
    "consider @xmath72    pick @xmath73 in @xmath38 to pump .",
    "write @xmath74 and mark the middle block of 0 s .",
    "if @xmath75 begins in the middle block of 0 s , then pump up to obtain @xmath76 , where @xmath77 and @xmath78 .",
    "we ca nt have @xmath79 because the first @xmath50 ( the one ending at the first 1 ) is too short .",
    "if @xmath75 begins in the first block of 0 s , then @xmath15 occurs in the middle block , so now pump down to obtain @xmath80 , where @xmath81 and @xmath82 .",
    "again , we ca nt have @xmath83 , because the third @xmath50 ( the one ending at the third 1 ) must contain all of the @xmath54 s immediately preceding the final 1 , and hence is too long .",
    "clearly @xmath40 is in np , since given a word @xmath50 we can guess @xmath8 and check that @xmath84 .",
    "however , we do not know whether we can solve membership for @xmath40 in polynomial time .",
    "this question is apparently originally due to jeff erickson @xcite , and we learned about it from erik demaine .",
    "is @xmath40 in p ? [ ope ]",
    "we mention a few related problems .",
    "mansfield @xcite showed that , given words @xmath85 , one can decide in polynomial time if @xmath86 .",
    "later , the same author @xcite and , independently , warmuth and haussler showed that , given words @xmath87 , deciding if @xmath88 is np - complete .",
    "however , the decision problem implied by open problem  [ ope ] asks something different : given @xmath50 , does there exist @xmath8 such that @xmath84 ?    determine a simple closed form for @xmath89    the first few terms are given as follows :    [ cols=\"^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     clearly @xmath90 , @xmath91 , and @xmath92 .",
    "empirically , we have @xmath93 , @xmath94 , and @xmath95 .",
    "this suggests that @xmath96 , but we do not have a proof .",
    "we now consider the operation @xmath97 applied to languages .",
    "recall that @xmath98 .",
    "if @xmath38 is regular then @xmath99 is not necessarily regular .",
    "let @xmath100 .",
    "then @xmath101 , which is clearly not regular .",
    "if @xmath38 is context - free then @xmath99 is not necessarily context - free .",
    "let @xmath102 .",
    "then @xmath103 , and this language is easily seen to be non - context - free .",
    "if @xmath38 is regular then @xmath99 is necessarily context - free .",
    "[ pssr ]    we defer the proof of theorem  [ pssr ] until section  [ idwr ] below .",
    "given a finite word @xmath104 we can decimate it into its odd- and even - indexed parts , as follows : @xmath105 similarly , given @xmath104 we can extract its first and last halves , as follows : @xmath106    we now turn our attention to four `` unshuffling '' operations : @xmath107      we first consider a kind of binary decimation , which forms a sort of inverse to perfect shuffle .",
    "given a word @xmath108 of even length , note that @xmath109 is formed by `` unshuffling '' the word into its odd- and even - indexed letters .",
    "for example , the french word maigre becomes the word mirage under this operation .",
    "neither the class of regular languages nor the class of context - free languages is closed under @xmath110 .",
    "consider the regular ( and context - free ) language @xmath111 .",
    "then @xmath112 , which is well - known to be non - context - free .",
    "we now consider the operation @xmath113 , which is a kind of binary decimation with reverse .",
    "note that @xmath114 for example , @xmath115 and @xmath116 .    the class of regular languages is not closed under @xmath113 .",
    "let @xmath117 .",
    "then @xmath118 , which is not regular .    the class of context - free languages is not closed under @xmath113 .",
    "consider @xmath119 .",
    "then @xmath120 , which is not context - free .    if @xmath38 is regular , then @xmath121 is context - free .",
    "we show how to accept words of @xmath121 of even length ; words of odd length can be treated similarly .    on input @xmath122 , a pda can guess @xmath123 in parallel with the elements of the input . at each stage",
    "the pda compares @xmath124 to @xmath125 if @xmath126 is odd ; and otherwise it pushes @xmath124 onto the stack ( if @xmath126 is even ) . at some point the pda nondeterministically guesses that it has seen @xmath127 and pushed it on the stack ; it now pops the stack ( which is holding @xmath128 ) and compares the stack contents to the rest of the input @xmath50 .",
    "the pda accepts if @xmath129 and the symbols matched as described .",
    "we now consider a kind of inverse decimation , which shuffles the first and last halves of a word .",
    "note that if @xmath130 is of even length , then @xmath131 further , @xmath132 for @xmath50 of even length .    if @xmath38 is regular then so is @xmath133 .    on input",
    "@xmath8 we simulate the dfa for @xmath38 on the odd - indexed letters of @xmath8 , starting from @xmath134 , and we simulate a second copy of the dfa for @xmath38 on the even - indexed letters , starting at some guessed state @xmath135 .",
    "finally , we check to see that our guess of @xmath135 was correct .    the class of context - free languages is not closed under @xmath136 .",
    "let @xmath137 .",
    "it is easy to see that    @xmath138    consider @xmath139 . from the above we have @xmath140 , which is evidently not context - free .",
    "note that if @xmath130 is of even length , then @xmath141 . if @xmath142 is of odd length , we define @xmath143    if @xmath38 is regular then so is @xmath144 .",
    "[ bdir ]    on input @xmath8 we simulate the dfa @xmath145 for @xmath38 on the odd - indexed letters of @xmath8 , starting from @xmath134 .",
    "we also create an nfa @xmath146 accepting @xmath147 in the usual manner , by reversing the transitions of @xmath145 , and making the start state the set of final states of @xmath145 , and we simulate @xmath146 on the even - indexed letters of @xmath8 .",
    "finally , we check to see that we meet in the middle .",
    "the class of context - free languages is not closed under @xmath148 . [ bdircf ]    consider @xmath149 .",
    "then @xmath38 is a cfl , and it is easy to verify that @xmath150 assume @xmath151 is a cfl . then @xmath152 is a cfl , and from above we have @xmath153 , which is not a cfl .",
    "as georg zetzsche has kindly pointed out to us , the operation @xmath148 was studied previously by jantzen and petersen ; they called it `` twist '' .",
    "they proved our theorems  [ bdir ] and [ bdircf ] .",
    "we now return to the proof of theorem  [ pssr ] , which was postponed until now .",
    "we need two lemmas :    suppose @xmath38 is a regular language . then @xmath154 is a cfl .",
    "[ ww ]    on input @xmath8 , a pda can guess @xmath50 and verify it is in @xmath38 , while pushing it on the stack .",
    "nondeterministically it then guesses it is at the end of @xmath50 and pops the stack , comparing to the input .",
    "for all words @xmath50 we have @xmath155 . [ bdir2 ]    if @xmath50 is of even length then @xmath156 a similar proof works for @xmath50 of odd length .",
    "we can now prove theorem  [ pssr ] .    from lemma  [ bdir2 ]",
    "we have @xmath157 if @xmath38 is regular , then @xmath158 is regular , by theorem  [ bdir ]",
    ". then , from lemma  [ ww ] , it follows that @xmath99 is a cfl .",
    "we are grateful to georg zetzsche for his remarks ."
  ],
  "abstract_text": [
    "<S> we consider various shuffling and unshuffling operations on languages and words , and examine their closure properties . </S>",
    "<S> although the main goal is to provide some good and novel exercises and examples for undergraduate formal language theory classes , we also provide some new results and some open problems . </S>"
  ]
}
{
  "article_text": [
    "anomaly detection , also known as outlier detection , is the process of discovering patterns in a given data set that do not conform to expected behavior @xcite .",
    "anomaly detection is to find the events that happen relatively infrequently , which has been extensively used in a wide variety of applications , including fraud detection for credit cards , insurance , health care , intrusion detection for cyber - security , fault detection in safety critical systems , and many others @xcite .",
    "smart meter analytics attracts the growing research effort e.g. , @xcite , due to the wide installation of smart meters .",
    "anomaly detection can be applied for analyze live smart meter data , which aims to help energy consumers identify unusual behaviors , e.g. , forgetting to turn off stoves after cooking ; and to help utilities detect extraordinary events , e.g. , energy leakage and theft . since abnormal consumption",
    "may also result from user activities , such as using inefficient appliances , or over - lighting and working overtime in office buildings , anomalous feedback can be used to warn energy consumers to minimize energy usage and to help them identify inefficient appliances or over - lighting .",
    "furthermore , anomaly detection can help utilities to establish the baseline for providing more accurate demand - response programs to their customers @xcite .",
    "abnormal energy consumption detection is related to finding patterns in data , and the statistical and data mining techniques are used to detect the patterns , e.g. , @xcite , which can perform close to or better than domain experts .    today",
    ", smart meters are widely used worldwide .",
    "smart meters are the digital devices that can record energy consumption at the interval of an hour or fewer @xcite .",
    "smart meters record detailed consumption readings in real - time or near real - time , which provide the opportunity to monitor timely unusual events or consumption behaviors .",
    "however , the enabling anomaly detection for smart meters typically uses data mining technologies , which require large amounts of training data sets , as well as significantly complex systems . in typical applications of data mining to anomaly detection ,",
    "the detection models are produced off - line because the learning algorithms have to process tremendous amounts of data @xcite .",
    "the generated models are naturally used for offline anomaly detection , i.e. , analyzing consumption data after being loaded into an energy management system ( ems ) .",
    "effective anomaly detection , however , should happen in real - time in order to minimize the compromises to the use of energy .",
    "the efficiency of updating the detection model and the accuracy of the detection are the important consideration for constructing such a real - time anomaly detection system .    in this paper , we propose a statistical anomaly detection method based on the consumption patterns of smart grid data . for residential electricity consumption ,",
    "the daily consumption patterns of a customer usually show quite similar .",
    "the proposed algorithm can detect the unusual energy usage from one s history consumption patterns , e.g. , the abnormal high usage than the expected ( see fig .",
    "[ fig : anomalycase ] ) .        to detect anomalies in time and obtain a better accuracy ,",
    "we make use of the so - called _ lambda _ architecture @xcite , that can detect anomalies in near real - time , and can efficiently update detection models regularly according to a user - specified time interval .",
    "a lambda architecture enables real - time updates through a three - layer structure , including speed layer ( or real - time layer ) , batch layer and serving layer .",
    "it is a generic system architecture for obtaining near real - time capability , and its three layers use different technologies in processing data .",
    "it is well - suited for constructing an anomaly detection system that requires real - time anomaly detection and efficient model refreshment ( we will detail it in the next section ) . to support big data capability ,",
    "we choose the spark streaming as the speed layer technology for detecting anomalies on a large amount of data streams , hive as the batch layer technology for computing anomaly detection models , and postgresql as the serving layer for saving the models and detected anomalies ; and sending feedbacks to customers .",
    "the proposed system can be integrated with smart meters for detecting anomalous energy consumption online . to summarize",
    ", we make the following contributions : 1 ) we propose the statistical - based anomaly detection algorithm based on customers history consumption patterns ; 2 ) we propose making use of the lambda architecture for the efficiency of the model updating and real - time anomaly detection ; 3 ) we implement the system with a lambda architecture using hybrid technologies ; 4 ) we evaluate our system in a cluster environment using realistic data sets , and show the efficiency and effectiveness of using the lambda architecture in a real - time anomaly detection system .",
    "the rest of this paper is organized as follows .",
    "section 2 discusses the anomaly detection algorithm used in the paper .",
    "section 3 describes the implementation of the lambda detection system .",
    "section 4 evaluates the system .",
    "section 5 surveys the related works .",
    "section 6 concludes the paper and provides the direction for the future works .",
    "the used anomaly detection model is a combination of a short - term energy consumption prediction algorithm , called _ periodic auto - regression with exogenous variables ( parx ) _",
    "@xcite , and _ gaussian statistical distribution_. we now first describe the parx algorithm , which will be used for the prediction based on history consumption patterns",
    ". generally speaking , residential electricity consumption is highly correlated to the weather temperature . in winter , electricity consumption increases since the temperature decrease because of the heating needs .",
    "similarly , in summer , electricity consumption increases when the temperature is higher because of cooling loads . a similar daily consumption pattern may appear repeatedly for a customer , e.g. , due to the living habit of the customer .",
    "for example , if a customer usually gets up at 7 oclock , then the consumption pattern will have the morning peak between 7 and 8 oclock ; in the evening , if the customer gets home at 5 oclock after work , the consumption pattern typically will have the evening peak between 17 and 20 oclock , due to cooking and washing .",
    "the parx model , thus , uses a daily period , taking 24 hours of the day as the seasons , i.e. , @xmath0 , and uses the previous @xmath1 days consumptions at the time @xmath2 for auto - regression . the parx model at the @xmath3-th season and at the @xmath4-th period",
    "is formulated as    @xmath5 where @xmath6 is the data point in the consumption time - series ; @xmath1 is the number of order in the auto - regression ; @xmath7 and @xmath8 are the exogenous variables accounting for the weather temperature , defined in the equations of @xmath9 ; @xmath10 and @xmath11 are the coefficients ; and @xmath12 is the value of the white noise . @xmath13    the variables represent the cooling ( temperature above 20 degrees ) , heating ( temperature below 16 degrees ) , and overheating ( temperature below 5 degrees ) , respectively .",
    "the anomaly detection algorithm uses unique variate gaussian distribution described in the following .",
    "given the training data set , @xmath14 whose data points obey the normal distribution with the mean @xmath15 and the variance @xmath16 , the detection function is defined as @xmath17 where @xmath18 and @xmath19 . for a new data point , @xmath20 , this function computes its probability density .",
    "if the probability is less than a user - defined threshold , i.e. , @xmath21 , it is classified as an anomaly , otherwise , it is a normal data point . in our model training process , we compute the l1 distance between the actual and predicted consumptions , i.e. , @xmath22 , where @xmath23 is the actual hourly consumption at the time @xmath2 , and @xmath24 is the predicted hourly consumption at the time @xmath2 .",
    "the predicted hourly consumption , @xmath24 , is computed using the parx model in equation  [ eq : parx ] .",
    "we find that the l1 distances obey to a log - normal distribution ( see section  [ sec : accuracy ] ) .",
    "therefore , the @xmath20 in the normal distribution will be the log value of the distance , i.e. , @xmath25 .",
    "we now introduce the lambda architecture that will be used in our anomaly detection system . as mentioned in section  [ sec : intr ] , the lambda architecture consists of three layers , including speed layer , batch layer and serving layer , illustrated in fig .",
    "[ fig : lambdaarch ] .",
    "the speed layer directly ingests data streams from data sources , processes them , and continuously updates the results into the real - time views in the database in the serving layer .",
    "the speed layer does not keep any history records , and typically uses main memory based technologies to analyze the incoming data .",
    "in contrast , the batch layer runs iteratively and starts from the beginning of the data set once a batch job has finished . when a batch job starts , all the available data in the batch layer storage will be processed . therefore , the data arriving after the job starts will not be processed until the next job .",
    "since all the data are analyzed in each iteration , each of the new result views will replace its predecessor . as the batch layer does not rely on incremental processing",
    ", it is robust to any system failures , which the batch job simply processes all the available data sets in each iteration .",
    "the speed and batch usually use different technologies because of their distinct requirements regarding read and write operations .",
    "any query against the data is answered through the serving layer , i.e. , the query processor queries both the views from the speed and the batch layers , and merges them .",
    "the lambda architecture itself is only a paradigm . the technologies with which the different layers are implemented are independent of the general idea .",
    "the speed layer only deals with new data and compensates for the high latency updates of the batch layer .",
    "it can typically leverage stream processing systems , such as storm , s4 , and spark streaming , etc .",
    "the batch layer needs to be horizontally scalable and supporting random reads , where the technologies like hadoop with cascading , scalding , pig , and hive , are suitable .",
    "the serving layer requires a system with the ability to perform fast random reads and writes .",
    "the system can be a high - performance rdbms ( e.g. , postgresql ) , an in - memory data store ( e.g. , redis , or memcache ) , or a high scalable nosql system ( e.g. , hbase , cassandra , elephantdb , mongodb , or dynamodb ) .",
    "[ [ section ] ]      we now describe the implementation of the anomaly detection system .",
    "we choose spark streaming , spark , and postgresql as the speed layer , batch layer and serving layer technology , respectively ( see fig .",
    "[ fig : systemoverview ] ) .",
    "the system employs spark to compute the models for anomaly detection , which reads the data from the hadoop distributed file system ( hdfs ) in the batch layer .",
    "the batch job runs at a regular time interval , computes and updates the detection models to the table in postgresql database .",
    "spark streaming is used for processing real - time data streams , e.g. , it directly gets data from smart meters , and detects abnormal consumption by the detection algorithm .",
    "the detection algorithm always uses the latest models getting from the postgresql database .",
    "spark stream writes the detected anomalies back to the postgresql database , which will be used for the notification of customers .",
    "we employ spark to train the detection model by running regular batch jobs .",
    "all the consumption data from smart meters are written to the append - only hdfs . in each iteration of the batch jobs , spark uses all the available data in hdfs to compute the detection model .",
    "the use of spark and hdfs supports the computation of the model based on scalable data sets , and since they both are the distributed computing technology , the computation can be finished within a certain time limit , which means that the detection algorithm can use the latest data model for the anomaly detection .",
    "[ fig : training ] illustrates the training process of generating parx model and gaussian model using energy consumption and weather temperature time series at the season from 0 to 23 .",
    "that is , for each season , e.g. , @xmath26 , we create a new time series with the hourly reading at 0 oclock of all days , then use the equation  [ eq : parx ] to compute the parx model ( or parameters ) , and compute the gaussian model , i.e. , @xmath27 . therefore , there are 24 parx and 24 gaussian models in total for the hours of the day .",
    "algorithm  [ alg : training ] gives more details about the implementation .",
    "this algorithm computes the anomaly detection models with the given training time series collection @xmath28 , weather temperature time series @xmath29 , and auto - regression order @xmath1 .",
    "each time series in @xmath28 represents the hourly energy consumption of a customer . to compute the detection models for each season @xmath3 , we first need to create a new consumption time series and a new temperature time series ( see line 7 ) , then use the two new time series to compute the parx model ( see line 8) . according to our analysis in section  [ sec : accuracy ] , the @xmath30 distances between predict consumption and actual consumption at season @xmath3 for all days observes to a log - normal distribution .",
    "therefore , we compute gaussian statistical model based on the @xmath30 distance log values ( see line 12 - 18 ) .",
    "the total number of parx models for all the time series is @xmath31 , which is same as the number of the gaussian models . in the end , all the models are updated to the postgresql database that will be used for the online anomaly detection in the speed layer .",
    "@xmath32 @xmath33 @xmath34 get the unique identity of @xmath35 @xmath36 construct a new consumption time series using @xmath35 , and a new temperature time @xmath37 using @xmath29 at season @xmath3 @xmath38 compute parx model using @xmath39 and @xmath37 insert @xmath40 into @xmath41 @xmath42 @xmath43 get the days of @xmath35 @xmath44 compute the predict reading of the season @xmath3 using parx @xmath45 get the actual hourly reading from @xmath35 of the day @xmath46 @xmath47 compute the ln value of @xmath48 distance of the day @xmath46 , @xmath49 add @xmath50 into @xmath51 @xmath52 compute the mean and standard deviation using the normal distribution statistical model on @xmath51 insert @xmath53 into @xmath54 @xmath55    [ alg : training ]    the implementation is a spark program .",
    "the consumption time series , as well as temperature time series , are read into the distributed main memory as _ resilient distributed datasets ( rdds ) _ , which are fault - tolerant , immutable and partitioned parallel data structures that can be operated in parallel , e.g. , by using the operators , including map , reduce , groupbykey , filter , collect , etc @xcite . to generate the new time series",
    ", we use the _ groupbykey _ operator to aggregate the consumption series by the composite key of meter i d and season ( or hours ) ; while use only the season as the key to the temperature time series .",
    "then , we merge the generated time series by the ` join ` operator on the key of the season .",
    "the parx , in fact , can be regarded as a multi - linear regression model , which simply takes the auto - regressors and the exogenous variables as the independent variables .",
    "we , then , apply the multiple linear regression function from the spark machine learning the library , mlib @xcite , to compute the coefficients . for all of these operations ,",
    "the transformation functions are directly applied on rdds for doing the data processing .",
    "the real - time anomaly detection is carried out in the speed layer .",
    "algorithm  [ alg : realtimedetection ] describes the anomaly detection process , which is self - explanatory .",
    "first , the detection algorithm reads meter readings from all the incoming data streams , and reads the weather temperature and detection models from the postgresql database each hour . for each data stream ,",
    "the algorithm predicts the reading using the parx algorithm , with the pre - computed parameters , the previous @xmath1 day s readings at the current hour , i.e. , the season @xmath3 , and weather temperature ( see line 47 ) .",
    "then , the algorithm calculates the log value of the @xmath30 distance between the predict and the actual readings , then uses it compute the probability using the gaussian model ( see line 8 - 10 ) . in the end , the algorithm decides whether the current reading is an anomaly or not based on the computed probability value , i.e. , if its value is below the user - defined threshold , @xmath12 .",
    "if the current reading is classified as an anomaly , it will be written into the database for the customer notification ( see line 1112 ) .",
    "@xmath56 @xmath34 get the unique identity of @xmath57 @xmath58 get the season of @xmath57 @xmath38 get the parameters from @xmath41 by @xmath59 @xmath44 compute the predict reading at @xmath3 using parx with the parameters , the @xmath1 days readings at @xmath3 , and temperature @xmath2 @xmath60 @xmath61 get the statical model parameters from @xmath62 by @xmath59 and @xmath3 @xmath63 compute the probability using the normal distribution function , @xmath64 add @xmath65 into @xmath66 @xmath66    [ alg : realtimedetection ]    we implement the algorithm to process the real - time data on spark streaming .",
    "spark streaming allows for continuous processing via short interval batches , and its basic data abstraction is called _",
    "discretized streams ( d - streams ) _ , a continuous stream of data @xcite .",
    "the data are received in each interval batch , _ hourly _ in our case , and operations will run upon the data for doing transformations , such as filter unnecessary attribute values , extracting the hour from the timestamp , etc .",
    "( see fig .",
    "[ fig : rddslidewin ] ) .",
    "when using parx for the prediction , we fetch the previous @xmath1 days readings of the current hour for auto - regression .",
    "for example , in fig .",
    "[ fig : rddslidewin ] we set the order , @xmath67 , therefore , the window size is set to 72 hours ( i.e. , 3 days ) to keep the past three days readings at the particular hour within the same window ( e.g. , the rdds colored by green ) .",
    "this is done by using the window function , ` reducebykeyandwindow(func , windowlength , slideinterval ) ` , to aggregate the data with specified key , window length and slide interval ( e.g. , meter i d and season as the composite key in this case , @xmath68 hours and @xmath69 hour ) . in the underlying , spark uses the data _ checkpointing _ mechanism to keep the past rdds in hdfs .",
    "at the beginning of each interval batch , the data models are read from the postgresql database in the serving layer , and broadcast to all dstreams .",
    "therefore , the detection program can always use the latest detection models to detect anomalies .",
    "[ [ section-1 ] ]      in this section , we will evaluate the effectiveness and the scalability of our anomaly detection system .",
    "we conduct the experiments in a cluster with 17 servers .",
    "five servers are used for running the speed layer , while twelve servers are used for the batch layer .",
    "we also exploit one of the servers in the speed layer as the serving layer for managing the detection models and sending anomaly detection messages .",
    "all the servers have the identical settings , configured with an intel(r ) core(tm ) i7 - 4770 processor ( 3.40ghz , 4 cores , hyper - threading is enabled , two hyper - threads per core ) , 16 gb ram , and a seagate hard driver ( 1 tb , 6 gb / s , 32 mb cache and 7200 rpm ) , running ubuntu 12.04 lts with 64bit linux 3.11.0 kernel .",
    "the serving layer uses postgresql 9.4 database with the settings `` shared buffers=4096 mb , temp buffers=512 mb , work mem=1024 mb , checkpoint segments=64 '' and default values for the other configuration parameters .",
    "we have a real - world residential electricity consumption data set ( 27,300 time series ) , which will be used for evaluating the accuracy of the anomaly detection .",
    "the data are the 2-year time series of hourly resolution .",
    "to evaluate the scalability , we use the synthetic data set generated by our data generator with the real - world data as the seed .",
    "the size of data tested in the cluster environment is scaled up to one terabyte , corresponding to over twenty million time series .",
    "we start by evaluating the accuracy of our anomaly detection system using a randomly - selected time series from the real - world data set . to provide a basis for comparison , we perform the anomaly detection using a standard boxplot analysis as well .",
    "boxplot is a quick graphic approach for examining data sets , and has been used for decades .",
    "a boxplot uses five parameters to describe a numeric data set , including lower fence , lower quartile , media , upper quartile and upper fence ( see fig .",
    "[ fig : boxplot ] ) . according to fig .",
    "[ fig : boxplot ] , a boxplot is constructed by drawing a rectangle between the upper and lower quartiles with a solid line indicating the median .",
    "the length of the box is called interquartile range , @xmath70 .",
    "the sample data points lying outside the fences , @xmath71 , are classified as the outliers , which has been indicated to be acceptable for most situations @xcite .    to align boxplot with our detection method",
    ", we test the anomalies based on the 24 seasons .",
    "there are 17,520 data points in total in the selected time series .",
    "[ fig : anomalyboxplot ] shows the boxplot result where the blue points located on the top of the upper fence represent the anomalies , a total of 1,260 data points .",
    "since the boxplot approach is merely able to detect energy consumption lying unusually far from the main body of the data , it is difficult to determine which ones are the true anomalies , and to identify the potential reasons for these anomalies because there are too many false positives .",
    "we now use the proposed detection algorithm to analyze the same time series . fig .",
    "[ fig : l1distancedist ] depicts the distribution of the @xmath30 distances of a season by the histogram .",
    "as shown , the distribution has the shape of a log - normal distribution .",
    "we have checked the @xmath30 distance distributions for all the 24 seasons , and found that they all have a similar shape .",
    "this is the reason that we choose log - normal distribution in our statistical - based anomaly detection .",
    "besides , we test the anomalies by treating all the days the same , and different , i.e. , discriminating the days into workdays , weekend & holidays .",
    "moreover , we increase the threshold value , @xmath12 , from 0.05 to 0.15 , and do the test . the results in fig .",
    "[ fig : detectedanomalies ] demonstrate that the detection identifies more anomalies for treating all the days the same than different .",
    "the reason is that during weekends and holidays , people tend to stay at home more time , thus use more energy .",
    "the consumptions are more likely higher than in the weekdays . for the threshold parameter ,",
    "its value is for classifying a usual or unusual reading .",
    "according to the results , if the value increases , the number of detected anomalies changes significantly . for the real - world deployment of this system",
    ", the threshold value can be set by the residents to decide when to receive anomaly alerting messages .",
    "we now evaluate the impact of the model update frequency on the detection accuracy .",
    "we use half - year s time series as the initial data set to train the detection models .",
    "we design the following three scenarios for model updating : 1 ) update per day ; 2 ) update per 10 days behind the detection ; and 3 ) without an update .",
    "we measure the detected anomalies for the three scenarios by treating all days the same . according to the results shown in fig .",
    "[ fig : detectmodelupdate ] , the frequent updates of the models help to decrease the detected anomalies .",
    "it is due to the improvement of the prediction accuracy of the parx model .",
    "thus , less large @xmath30 distances are identified as the anomalies . however",
    ", although the update frequency does help to determine the real anomalies , the results do not show a big difference if the models are updated within a certain short - time interval , e.g. , the results of the scenario 1 ) and 2 ) .    in the end , we compare our approach with the boxplot , and the result shows that the number of the anomalies reported by the parx prediction and statistical method can be decreased notably .",
    "this increases the chance to determine accurately real anomalies for an energy consumption time series .",
    "we now evaluate the scalability of our anomaly detection system . as our system can scale - out and to efficiently cope with large amounts of data , we vary both the number of executors and the volume of the input data in the following",
    ".    * scale - out experiment . *",
    "parallel processing is a key feature of the proposed system . to evaluate the scalability of our implementation",
    ", we conduct an experiment with a varying number of the executors in spark . in this experiment",
    ", we use a fix - sized synthetic data set with eight million time series of a one - year length ( 275 gb ) , which were generated by our data generator seeded with the real - world data set .",
    "since we are interested in the real - time and batch capability of our system , we use the full sets of the nodes to test batch model training and real - time anomaly detection separately .",
    "we first test the batch capability by running the training program with the number of executors increased from 8 to 256 .",
    "we repeat each test for ten times , and record their execution times .",
    "the results are depicted by the boxplot shown in fig .",
    "[ fig : scaleoutbatch ] . according to the results ,",
    "the execution time and the time variance decrease when more executors are added .",
    "but , when the number reaches 64 , the increasing parallelism does not speed up the batch processing further , which is due to the overhead of the spark master when managing a large number of executors .",
    "we conduct the real - time anomaly detection on spark streaming , and likewise , we scale the number of executors from 8 to 256 .",
    "since we only study the real - time detection scalability , we use the detection models without updating .",
    "[ fig : scaleoutstream ] shows the results , which indicate that the variance of execution time is larger than the batch model training",
    ". it might be due to the variability of real - time batch executions on spark streaming when doing the anomaly detection for each hour .",
    "* increased data load experiment . * to evaluate the scalability of the algorithms over large volumes of data , we compare different workloads . according to the above experiments , the optimal number of parallel executors for model training and anomaly detection are 64 and 128 , respectively .",
    "we use the optimal executor number ( the memory of executor is configured to 4 gb ) in our experiments , but vary the number of time series from 8 to 24 million ( the size is from 275 gb to 825 gb ) .",
    "the processing times of varying data workloads are displayed in fig .",
    "[ fig : sizeup ] .",
    "we observe that both of the training and detection processes can scale near linearly with the quantity of the time series .",
    "the time of detection , in this case , is the total execution time of handling all the time series of a one - year length , e.g. , it takes less than two minutes to finish eight million time series with the optimized settings .",
    "the average time of each real - time batch only takes a few seconds ( recall that a batch in spark streaming processes the data of each hour ) . in the real - world deployment , the detection program can be set to run every hour to inspect hourly smart meter readings . according to the results , the anomaly detection system has a very good scalability which can meet the fast - growth of smart meter data .",
    "unlike the anomaly detection , the training process uses the full set of the data to generate new models each time .",
    "anomaly detection , instead , is performed for each hour where spark streaming runs periodical batch ( or impulse ) to process the data , which needs more time in overall .",
    "the training and detection programs can be deployed either in different clusters or the same cluster . if deployed in the same cluster , it is necessary to allocate computing resources in a reasonable way .",
    "for example , since the batch job takes a much longer time , it can be scheduled to run immediately after the anomaly detection job .",
    "a scheduling system is , thus , necessary , and this will be for our future work .",
    "[ [ section-2 ] ]    * anomaly energy consumption detection . *",
    "anomaly detection is an important aspect in energy consumption time series management .",
    "chandola et al .",
    "present a survey of different anomaly detection techniques in various application domains including energy @xcite .",
    "statistical and data mining are the commonly used techniques for discovering abnormal consumption behaviors @xcite .",
    "statistical methods are based on modeling data using distributions , and see if the data under test observes to the distributions .",
    "accordingly , the approaches presented in this paper combine parx and log - normal distribution function to detect anomalies in energy consumption time series .",
    "jakkula and cook use statistics and clustering to identify outliers in power datasets collected from smart environments @xcite , but they have not considered the impact of the exogenous variables , e.g. , weather temperature , on the electricity consumption .",
    "linear regression can extract time series features when the dependent variables are well - defined @xcite .",
    "the early experience of identifying outliers in linear regression is through setting a threshold limit , but this yields many false positives for large data sets @xcite .",
    "adnan et al .",
    "combine linear regression with clustering techniques for getting better results @xcite .",
    "zhang et al .",
    "@xcite further use piecewise linear regression to fit the relation between energy consumption and weather temperature .",
    "the results obtained are more favorable than entropy and clustering methods .",
    "but , their approach does not take the changes of consumption pattern into account .",
    "brown et al",
    ". use k - nearest neighborhood ( knn ) in fast kernel regression to predict electricity consumption @xcite , which requires large datasets .",
    "the resulting models are static , thus it is not preferable for online anomaly detection and the situation when consumption pattern is changed .",
    "nadai et al .",
    "combine arima and adaptive artificial neural network ( ann ) to detect anomaly consumption @xcite using a relatively small data set that is from a few buildings . in comparison",
    ", we propose the prediction and statistical anomaly models and combine with the lambda architecture for supporting regular model refreshment , and real - time anomaly detections .",
    "besides , the proposed approach can handle scalable data sets , and consumption pattern changing owing to using the parx model .",
    "* batch and stream processing on big data . *",
    "batch and realtime / stream processings have attracted much research effort in recent year , with the popularity of internet of things ( iot ) .",
    "liu et al .",
    "make a survey of the existing stream processing systems , and discuss the potential technologies used for lambda architecture @xcite .",
    "the tools @xcite cheng et al . propose a smart city data platform that supports both batch and real - time data processing @xcite , and they suggest that anomaly detection should be implemented as the chief component of any platform for processing sensor data .",
    "different to proposing the generic lambda architecture @xcite , preuveneers et al .",
    "@xcite and gao @xcite present the big data architectures for processing domain - specific big data , including health care , context - aware user authentication and social media .",
    "schneider et al .",
    "study batch data and streaming data anomaly detection , respectively @xcite . the used detection model , however , is static , and the use case is different to ours which employs the batch job to update the models iteratively while use the real - time job to detect the anomalies online in data streams .    * the use of lambda architecture . *",
    "lambda architecture has attracted a growing interest due to its mix capabilities to process both real - time and batch data .",
    "sequeira et al .",
    "use lambda architecture in an industrial ems solution with cloud computing capabilities @xcite .",
    "kroet al .",
    "develop on - demand stream processing within the lambda architecture to optimize the usage of computing resources in clusters @xcite .",
    "martnez - prieto et al .",
    "adapts the lambda architecture in semantic data processing @xcite ; liu et al . applies it to smart grid complex event processing ( cep ) @xcite ; villari et al . proposes alljoyn lambda , the platform for managing embedded devices of smart homes @xcite ; and hasani et al .",
    "use it for real - time big data analytics @xcite . besides , the works @xcite both give an extensive review of the technologies for the lambda architecture .",
    "there are various use cases of the lambda architecture .",
    "in contrast , we focus on a particular use case , i.e. , energy consumption anomaly detection as has been mentioned in future extensions of @xcite work . more specifically",
    ", we use it in the model update and the real - time anomaly detection using the models , which is significant to the large deployment of smart meters and sensors of iot today .",
    "[ [ sec : conclusion ] ]    analyzing and detecting anomalies is an important task for live energy consumption data while the improvement of detection accuracy and scalability is quite challenging . in this paper",
    ", we applied the novel lambda architecture technique to an anomaly detection system , which supports iterative batch updates of the detection models , and real - time anomaly detection on scalable data streams .",
    "we have proposed the detection algorithm for finding the anomalies based on one s history consumption pattern via the supervised learning and statistical algorithm .",
    "furthermore , the system supports alerting service for customers by setting a personalized threshold value for conspicuous energy consumption .",
    "we have evaluated the accuracy of the anomaly detection algorithm using a real - world data set , and the scalability using a large synthetic data set .",
    "the results have validated the effectiveness and the efficiency of the proposed system with the lambda architecture .    for the future work",
    ", we will implement a scheduling system that can coordinate the running of the batch and real - time jobs within the same cluster .",
    "we intend to explore the ways to detect a greater range of anomalies , such as missing values , negative energy consumption and device errors . besides , we plan to support additional types of data , such as gas , heating and water data , and to implement the corresponding detection algorithm .",
    "this work is part of the cities ( no .",
    "1035 - 00027b ) research project funded by innovation found denmark .",
    "10                cheng , b. , longo , s. , cirillo , f. , bauer , m. , kovacs , e. : building a big data platform for smart cities : experience and lessons from santander . in : ieee international congress on big data , pp .",
    "592599 . ieee press , new york ( 2015 )        de nadai , m. , van someren , m. : short - term anomaly detection in gas consumption through arima and artificial neural network forecast . in : ieee workshop on environmental , energy and structural monitoring systems ,",
    ". 250255 .",
    "ieee press , new york ( 2015 )              kiran , m. , murphy , p. , monga , i. , dugan , j. , baveja , s.s .",
    ": lambda architecture for cost - effective batch and speed big data processing . in : ieee international conference on big data ,",
    ". 27852792 .",
    "ieee press , new york ( 2015 )    kro , j. , brunnert , a. , prehofer , c. , runkler , t. a. , krcmar , h. : stream processing on demand for lambda architectures . in :",
    "m. beltrain et al .",
    "epew 2015 .",
    "lncs , vol .",
    "9272 , pp . 243257 .",
    "springer heidelberg ( 2015 )      lee , w. , stolfo , s. j. , chan , p. k. , eskin , e. , fan , w. , miller , m. , zhang , j. : real time data mining - based intrusion detection . in : darpa information survivability conference & ; exposition ii , 2001 .",
    "1 , pp . 89100 . ieee press , new york ( 2001 )    liu , f. , jiang , h. , lee , y. m. , snowdon , j. , bobker , m. : statistical modeling for anomaly detection , forecasting and root cause analysis of energy consumption for a portfolio of buildings . in : 12th international conference of the international building performance simulation association ( 2011 )                                preuveneers , d. , berbers , y. , joosen , w. :",
    "samurai : a batch and streaming context architecture for large - scale intelligent applications and environments .",
    "j. of ambient intelligence and smart environments , 8(1 ) , 6378 ( 2016 )      sequeira , h. , carreira , p. , goldschmidt , t. , vorst , p. : energy cloud : real - time cloud - native energy management system to monitor and analyze energy consumption in multiple industrial sites . in : 7th ieee / acm international conference on utility and cloud computing , pp .",
    "ieee press , new york ( 2014 )    villari , m. , celesti , a. , fazio , m. , puliafito , a. : alljoyn lambda : an architecture for the management of smart environments in iot . in : ieee international conference on smart computing workshops , pp .",
    "ieee press , new york ( 2014 )    zaharia , m. , chowdhury , m. , das , t. , dave , a. , ma , j. , mccauley , m. , stoica , i. : resilient distributed datasets : a fault - tolerant abstraction for in - memory dluster computing . in : 9th usenix conference on networked systems design and implementation , pp.22 .",
    "usenix association ( 2012 )    zaharia , m. , das , t. , li , h. , shenker , s. , stoica , i. : discretized streams : an efficient and fault - tolerant model for stream processing on large clusters . in : 4th usenix conference on hot topics in cloud computing , pp .",
    "usenix association ( 2012 )"
  ],
  "abstract_text": [
    "<S> with the widely used smart meters in the energy sector , anomaly detection becomes a crucial mean to study the unusual consumption behaviors of customers , and to discover unexpected events of using energy promptly . </S>",
    "<S> detecting consumption anomalies is , essentially , a real - time big data analytics problem , which does data mining on a large amount of parallel data streams from smart meters . in this paper , we propose a supervised learning and statistical - based anomaly detection method , and implement a _ </S>",
    "<S> lambda _ system using the in - memory distributed computing framework , _ spark _ and its extension _ spark streaming_. the system supports not only iterative detection model refreshment from scalable data sets , but also real - time detection on scalable live data streams . </S>",
    "<S> this paper empirically evaluates the system and the detection algorithm , and the results show the effectiveness and the scalability of the proposed lambda detection system .    </S>",
    "<S> anomaly detection , real - time , lambda architecture , data mining </S>"
  ]
}
{
  "article_text": [
    "the general class of inventory - production systems is often associated to cost optimization problems . indeed , one must deal with three major matters : the storage of components , the possible random behavior of the manufacturing process and random clients demand @xcite . the controller must decide which production rate of the components fits best . a too slow production rate leads to low stock levels but it might not meet clients demand . on the opposite , a fast production rate does meet the demand , but may raise stock levels .",
    "one must then find a balance between both to minimize costs .",
    "this paper focuses on the optimization of a real - life industrial launcher integration process studied in collaboration with airbus defence and space .",
    "clients order a certain number of launches to be performed at specific dates .",
    "the controller has to determine the production rates in order to minimize costs .",
    "only storage and lateness costs are taken into account here .",
    "in general , the costs may also take into account several other constraints such as exploitation cost , workforce salary , the cost related to the unavailability of the structure including any penalty or the maintenance and inspection cost , among others . plus",
    ", a part of the architecture of the process is not set .",
    "indeed , the controller has to decide on the maximum capacity of one warehouse between two options .",
    "the originality of this problem is twofold . on the one hand ,",
    "the optimization horizon is rather long , 30 years , but the controller can only make decisions once a year concerning the production rates . on the other hand , the launches must be performed according to a prescribed calendar corresponding to clients orders .    our goal is to find an optimization procedure usable in practice . it should provide explicit decision rules applicable to each trajectory as a table giving the controller the best action to take according to the current state and time .",
    "a preliminary study was performed on a simplified process @xcite using petri nets @xcite .",
    "although they are easy to simulate , they are not suitable for performing dynamic decisional optimization .",
    "a more suitable framework is that of markov decision processes ( mdps ) @xcite .",
    "mdps are a class of stochastic processes suitable for cost and decision optimization .",
    "briefly , at each state , a controller makes a decision which has an influence on the transition law to the next state and on a cost function .",
    "the latter depends on the starting state and the decision made .",
    "the sequence of decisions is called a policy , and its quality is gauged thanks to a cost criterion ( typically , it is the sum of all the costs generated by the transitions ) .",
    "the first step to solve our problem is to implement an mdp - based simulator of the launcher integration process .",
    "simulation results were presented at the esrel conference in 2015 @xcite .",
    "this paper deals with the optimization itself .",
    "it is a non standard optimization problem within the mdp framework because the transition law is not analytically explicit , it is only simulatable .",
    "thus , standard optimization techniques for mdps such as dynamic programming @xcite , or linear programming @xcite do not apply .",
    "in addition , the cost function is unusual as the actual lateness can be computed only at the end of a year , and not at its beginning when the controller makes their decisions .",
    "as the launcher integration process can be simulated , we investigate simulation - based algorithms for mdps @xcite .",
    "these extensively use monte - carlo methods to estimate the performance of a policy .",
    "thus , they require a fast enough simulator for the algorithms to give a result within a reasonable time .",
    "new difficulties arise here .",
    "first , the state space of our mdp , though finite is huge .",
    "second , the first simulator in matlab is not fast enough .",
    "third , the algorithms require the computation of a product of numerous numbers between @xmath0 and @xmath1 , and although the output is non zero on paper , it is treated as zero numerically , leading to erroneous results . to overcome these difficulties ,",
    "we reduce the state space by aggregating states in a manner that makes sense regarding our application , we use the c language and a special logarithmic representation of numbers .",
    "the results we obtained are presented and discussed .",
    "this paper is organized as follows .",
    "section [ lauint ] is dedicated to the description of the assembly line under study and the statement of the optimization problem . in section [ mardec ] , we present how the optimization problem for the assembly line fits into the mdp framework . section [ optlau ] presents the main difficulties encountered while trying to optimize our mdp , and solutions to bypass them . in section [ numres ] , we present and comment the numerical results obtained . finally a last section gives some concluding remarks .",
    "technical details regarding the implementation of algorithms are provided in the appendix .",
    "airbus defense and space ( airbus ds ) as prime contractor is in charge of launchers and ground facilities design .",
    "this paper is dedicated to the optimization of an assembly line representative of a launcher integration process managed by airbus ds . for confidentiality matters , all parameter values and random distributions given in this paper",
    "are arbitrary but realistic .",
    "the launcher integration process we study in this paper is depicted on figure [ process ] .",
    "this assembly line is composed of several workshops and storage facilities that are described in detail in the following sections , and is operational typically for 30 years .",
    "the subassemblies are the input of the assembly line .",
    "a launcher needs four types of subassemblies to be manufactured .",
    "these are    * the insulated motor cases ( imcs ) , which are powder - free boosters , * the lower liquid propulsion modules ( llpms ) and the upper liquid propulsion modules ( ulpm ) , which are the lower part of a launcher , * the upper launchers , which are the fairings of the launchers .",
    "the upper launchers are always available when needed .",
    "so in the following , their production rate and storage cost are not taken into account .",
    "the production time of the other subassemblies ( imc , llpm , ulpm ) is assumed to be random .",
    "its distribution is symmetric around a mean @xmath2 and takes 5 different values with probabilities given in table [ lawsub ] .",
    "the average production time @xmath2 is computed by dividing the total number of workdays by the target number of subassemblies the controller decides to produce in a year , and taking its integer part .",
    "the number of workdays in a year is set at 261 .",
    "so for instance , if the controller wants an average production of 12 llpms a year , the value of @xmath2 for llpms will be @xmath3 = 21 $ ] days , where @xmath4 $ ] stands for the integer part of a real number @xmath5 .",
    ".distribution of the production time of a subassembly with mean @xmath2 [ cols=\"<,<\",options=\"header \" , ]     [ third ]    storing 4 srms at most induces a lower cost .",
    "however , the gain compared to an 8-unit storage is only 0.61% ( it is 14.36% when compared to the nave policy ) . taking into account the variance of the costs ,",
    "one may conclude that , in this case , the two scenarios lead to similar performances .    with these three examples",
    ", one sees that the question of the optimal srm storage capacity is not trivial at all .",
    "indeed , it seems to be impossible to answer this question with only prior knowledge .",
    "one may consider static costs to have a more accurate answer to this problem ( for instance exploitation costs , a larger warehouse being naturally more expensive ) .",
    "however , it seems that a maximum capacity of 4 srms is a better choice in general .",
    "using the mdp framework together with a simulation based algorithm , we performed the optimization of the launcher integration process .",
    "several problems had to be addressed , such as different time scales , state space reduction computation speed or numerical representation of numbers .",
    "given a launch calendar , optimal policies are computed and stored in the form of a matrix . to apply the optimal policy in practice , the controller looks up the best action to select in the matrix , given the current state of the process and the current time .",
    "such policies do not have a trivial form and can not be easily explained .",
    "they lead to up to 70% gain compared to trivial policies prescribing a manufacturing rate corresponding to the exact number of launches to be performed in the year .    to address real life optimization problem regarding launcher operations , one should now work with a calendar that is known only two years advance .",
    "one option that would fit the present framework would be to consider that the calendar of year @xmath6 is randomly drawn at the beginning of year @xmath7 .",
    "further exchange with practitioners is required to derive realistic distributions for such calendars .",
    "another possible extension of interest to airbus ds is to model the production of subassemblies with more detail , inducing longer delays for selecting the production rates .",
    "instructions for the mras are given on algorithm [ mrasa ] and for the asa on algorithm [ asaa ] .",
    "they use the following notation . for some set @xmath8",
    ", @xmath9 denotes its indicator function , that is @xmath10 if @xmath11 and @xmath12 otherwise .",
    "the upper integer part of @xmath5 is denoted @xmath13 .",
    "let @xmath14 and define the function @xmath15 on @xmath16 by @xmath17 for all states @xmath18 , all decisions @xmath19 and all times @xmath20 , let @xmath21 the set of policies which prescribe action @xmath19 in state @xmath18 at time @xmath20",
    ". for a policy @xmath22 , let @xmath23 and , for @xmath24 , let @xmath25 with @xmath26 a given probability matrix .",
    "initial 3-dimensional probability matrix @xmath26 , @xmath27 $ ] , @xmath14 , @xmath28 , @xmath29 , @xmath30 , @xmath31 , @xmath24 , @xmath32 $ ] , initial state @xmath33 , iteration count @xmath34 , limit number of iterations @xmath35 .",
    " draw policy @xmath36 from matrix @xmath26 with probability @xmath37 and matrix @xmath38 with probability @xmath39 . ",
    "simulate @xmath40 trajectories with @xmath33 as initial state using policy @xmath36 .",
    " compute the cost @xmath41 generated for the trajectories @xmath42 .",
    " @xmath43 .",
    " arrange the @xmath44 in descending order to get a sequence @xmath45 such that @xmath46 .",
    " @xmath47 .",
    " @xmath48 .",
    " @xmath49 .",
    " @xmath50 .",
    " @xmath51 policy @xmath36 such that @xmath52 .",
    " @xmath53 .",
    " @xmath54 .",
    " @xmath50 .",
    " @xmath55 policy @xmath36 such that @xmath56 .",
    " @xmath57 where @xmath58 .",
    " @xmath49 .",
    " @xmath59 .",
    " @xmath60 .",
    " @xmath61 .",
    " @xmath62 + @xmath63  @xmath64 .",
    " @xmath65 .  @xmath66 .        initial 3-dimensional probability matrix @xmath26 , @xmath68 , @xmath69 , temperature parameter @xmath70 , @xmath71 , @xmath72 , initial state @xmath33 , iteration count @xmath34 , limit number of iterations @xmath35 .",
    " draw policy @xmath36 from matrix @xmath26 with probability @xmath73 and matrix @xmath38 with probability @xmath74 . ",
    "simulate @xmath40 trajectories with @xmath33 as initial state using policy @xmath36 .",
    " compute the cost @xmath41 generated for the trajectories @xmath42 .",
    " @xmath43 .",
    " @xmath75  @xmath76 .",
    " @xmath77)$ ] .",
    " @xmath78)$ ] .",
    " @xmath79 .",
    " @xmath80 .",
    " @xmath81 .",
    " @xmath66 .",
    "elegbede c , brard - bergery d et al .",
    "dynamical modelling and stochastic optimization for the design of a launcher integration process . in _ safety , reliability and risk analysis : beyond the horizon _",
    "( eds rdjm steenbergen et al ) , amsterdam , the netherlands , 29 september2 october 2013 , pp .",
    "3039  3046 , london : taylor and francis group , crc press .",
    "puterman ml .",
    "_ markov decision processes : discrete stochastic dynamic programming_. wiley series in probability and mathematical statistics : applied probability and statistics .",
    "new - york : john wiley & sons , inc , 1994 .",
    "nivot c , de saporta b , dufour f et al .",
    "modeling and optimization of a launcher integration process . in _",
    "safety and reliability of complex engineered systems : esrel 2015 _ ( eds l podofillini et al ) , zrich , switzerland , 7 september10 september 2015 , pp .",
    "2281  2288 , london : taylor and francis group , crc press ."
  ],
  "abstract_text": [
    "<S> this paper is dedicated to the numerical study of the optimization of an industrial launcher integration process . </S>",
    "<S> it is an original case of inventory - production system where a calendar plays a crucial role . </S>",
    "<S> the process is modeled using the markov decision processes ( mdps ) framework . </S>",
    "<S> classical optimization procedures for mdps can not be used because of specificities of the transition law and cost function . </S>",
    "<S> two simulation - based algorithms are tuned to fit this special case . </S>",
    "<S> we obtain a non trivial optimal policy that can be applied in practice and significantly outperforms reference policies . </S>"
  ]
}
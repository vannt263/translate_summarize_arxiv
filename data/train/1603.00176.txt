{
  "article_text": [
    "the conjugate gradient squared ( cgs ) @xcite is one of various methods used to solve systems of linear equations @xmath2 where the coefficient matrix @xmath3 of size @xmath4 is usually nonsymmetric , @xmath5 is the solution vector , and @xmath6 is the right - hand side ( rhs ) vector .",
    "the cgs is a bi - lanczos method that belongs to the class of krylov subspace methods .",
    "bi - lanczos - type methods are derived from the bi - conjugate gradient ( bicg ) method @xcite , which assumes the existence of a dual system @xmath7 ( we will refer to this as the `` shadow system '' ) .",
    "bi - lanczos - type algorithms have the advantage of requiring less memory than do arnoldi - type algorithms , which is another class of krylov subspace methods .",
    "furthermore , a variety of bi - lanczos - type algorithms , such as the bi - conjugate gradient stabilized ( bicgstab ) method @xcite and the generalized product - type method based on the bicg ( gpbicg ) @xcite , have been constructed by adopting the idea behind the derivation of the cgs .",
    "various iterative methods , including bi - lanczos - type algorithms , are often used following a preconditioning operation that is used to improve the properties of the linear equations .",
    "such algorithms are called preconditioned algorithms ; for example , the preconditioned cgs ( pcgs ) . therefore , it is very important to study the properties of the pcgs so that its performance can be improved .",
    "generally , the degree @xmath8 of the krylov subspace generated by @xmath3 and @xmath9 is expressed as @xmath10 @xmath11 , where @xmath9 is the initial residual vector @xmath12 , and @xmath13 is the initial guess at the solution .",
    "the krylov subspace @xmath10 generated by the @xmath8-th iteration forms the structure of @xmath14 , where @xmath15 is the approximate solution vector ( or simply the `` solution vector '' ) . however , for a given preconditioned krylov subspace method , there are various different algorithms that can be used for the preconditioning conversion . in such cases ,",
    "the structure of the approximate solution formed by the krylov subspace is often different for different algorithms , and the performance of these various algorithms can also differ substantially @xcite .",
    "an improved pcgs algorithm has been proposed @xcite .",
    "reference  @xcite shows that this improved algorithm has many advantages over the conventional pcgs algorithms @xcite . in this paper ,",
    "a variety of pcgs algorithms are discussed .",
    "we begin by considering two typical pcgs algorithms , and we analyze the structure of the solution vector for each krylov subspace .",
    "we then perform the same analysis for two improved pcgs algorithms , one of which was mentioned above @xcite , and the other is presented in the present paper .",
    "however , we note that it is not our purpose to propose a new algorithm , but to analyze the improved pcgs algorithms by comparing the structure of the krylov subspace and the numerical results of four different pcgs algorithms .    in this paper , when we refer to a _ preconditioned algorithm _",
    ", we mean one that uses a preconditioning operator @xmath16 or a preconditioning matrix , and by _ preconditioned system _ , we mean one that has been converted by some operator(s ) based on @xmath16 .",
    "these terms never indicate the _ algorithm for the preconditioning operation itself _",
    ", such as incomplete lu decomposition or by using the approximate inverse .",
    "for example , under a preconditioned system , the original linear system ( [ eqn : linear ] ) becomes @xmath17 with the preconditioner @xmath18 ( @xmath19 ) . in this paper , the matrix and the vector under the preconditioned system",
    "are indicated by a tilde ( @xmath20 ) .",
    "however , the conversions in ( [ eqn : plinear ] ) and ( [ eqn : plinear_conv ] ) are not implemented directly ; rather , we construct the preconditioned algorithm that is equivalent to solving ( [ eqn : plinear ] ) .",
    "this paper is organized as follows .",
    "section  [ sec : pcgs_alg ] provides various preconditioned cgs algorithms ; in particular , we consider right- and left - preconditioned systems for cgs algorithms .",
    "the improved pcgs algorithms are shown to be coordinative to the left - preconditioned system .",
    "section  [ sec : congruent_and_direction_pcgs ] discusses the difference between the direction of a preconditioning conversion and the direction of a preconditioned system .",
    "we show that preconditioning conversions are congruent for pcgs algorithms , and we provide some examples in which the direction of the preconditioned system for the cgs is switched . in section",
    "[ sec : numerical_experiments ] , we present some numerical results to illustrate the convergence properties of the various pcgs algorithms discussed in section  [ sec : pcgs_alg ] , and we illustrate the effect of switching the direction of the preconditioned system for the cgs algorithm in section  [ sec : congruent_and_direction_pcgs ] . finally , our conclusions are presented in section  [ sec : conclusion ] .",
    "in this section , four kinds of pcgs algorithms are analyzed .",
    "these pcgs algorithms can be derived as follows .",
    "+ [ alg : pcgs_simple ]      any preconditioned algorithm can be derived by substituting the matrix with the preconditioner for the matrix with the tilde and the vectors with the preconditioner for the vectors with the tilde .",
    "obviously , algorithm  [ alg : pcgs_simple ] without the preconditioning conversion is the same as the cgs .",
    "if @xmath28 is a symmetric matrix and @xmath29 , then algorithm  [ alg : pcgs_simple ] can be adapted while maintaining its symmetric property .",
    "the case shown in ( [ eqn : plinear_conv ] ) is called _ two - sided preconditioning _ , the case in which @xmath30 and @xmath31 is called _ left preconditioning _ , and the case in which @xmath32 and @xmath33 is called _ right preconditioning _ , where @xmath34 denotes the identity matrix .",
    "we now formally define these .      * _ the two - sided preconditioned system : _ equation ( [ eqn : plinear_conv ] ) ; * _ the right - preconditioned system : _ @xmath32 and @xmath33 in ( [ eqn : plinear_conv ] ) ; * _ the left - preconditioned system : _ @xmath30 and @xmath31 in ( [ eqn : plinear_conv ] ) ,          the preconditioned system is different from the preconditioning conversion .",
    "there are various ways of performing a preconditioning conversion , but the direction of the preconditioned system is uniquely defined .",
    "( for example , see the preconditioning conversions ( [ eqn : conv_precb ] ) and ( [ eqn : conv_precb2 ] ) in algorithm  [ alg : cgs_precb ] , section  [ sssec : conventional_pcgs ] . )        in this subsection , we present two well - known and typical pcgs algorithms .",
    "one is a right - preconditioned system , although this is not always recognized , and the other is a left - preconditioned system . for each of these algorithms ,",
    "we examine the structure of the krylov subspace and the solution vector .",
    "this pcgs algorithm has been described in many manuscripts and numerical libraries ; for example , see @xcite",
    ". it is usually derived by the following preconditioning conversion is converted to @xmath41 , but there is no problem with displaying @xmath42 in the notation of the algorithm .",
    "however , its internal structure is @xmath43 .",
    "the notation @xmath44 will be discussed in section  [ sec : congruent_and_direction_pcgs ] . the same applies to ( [ eqn : conv_precb2 ] ) . ]",
    ": @xmath45 finally , algorithm [ alg : cgs_precb ] is derived .",
    "+ [ alg : cgs_precb ]                      in this paper , @xmath64 denotes the residual vector under the left - preconditioned system will be discussed in sections  [ sssec : comparison_conventional_pcgs ] ,  [ ssec : analysis_4pcgs ] , and  [ sec : congruent_and_direction_pcgs ] , but there is no problem with displaying @xmath65 in the notation of the algorithm .",
    "note that this is also true for @xmath66 , @xmath67 , and @xmath68 .",
    "] , its internal structure is @xmath69 , and this is the definition of @xmath64 . note that @xmath66 , @xmath67 , and @xmath68 achieve the same purpose . here ,",
    "@xmath64 in algorithm [ alg : cgs_llprec ] provides different information to the residual vector @xmath70 , and the stopping criterion is @xmath71 note that this is also different from ( [ eqn : conv_judge ] ) , and this is an example of incomplete judging , because @xmath72 never provides important information about @xmath73 . it may be thought that this is a minor issue , but in a previous paper , we observed that the left - preconditioned system can result in a serious problem ( see @xcite , and appendix  [ appsec : sesna_pcgs ] ) .          here , we compare the conventional pcgs ( algorithm [ alg : cgs_precb ] ) with the left - pcgs ( algorithm [ alg : cgs_llprec ] ) ; we will focus on the structures of their krylov subspaces and their solution vectors .",
    "the conventional pcgs ( algorithm [ alg : cgs_precb ] ) is the right - preconditioned system , that is , @xmath75 , and @xmath76 .",
    "the relation between the krylov subspace and the solution vector is @xmath77 this means that the krylov subspace @xmath78 generates the solution vector as @xmath79 , not @xmath15 directly , but @xmath15 is calculated with corrections , as in ( [ eqn : sol_conv_pcgs ] ) in algorithm  [ alg : cgs_precb ] .",
    "the left - pcgs ( algorithm  [ alg : cgs_llprec ] ) is @xmath80 , @xmath81 .",
    "the relation between its krylov subspace and the solution vector is @xmath82 therefore , the krylov subspace @xmath83 generates the solution vector directly as @xmath15 ( algorithm  [ alg : cgs_llprec ] ) .",
    "it is important to note that the structures are different for the two krylov subspaces , @xmath78 for the conventional pcgs ( the right system ) and @xmath84 @xmath85 for the left - pcgs , because their scalar parameters @xmath0 and @xmath1 are not equivalent @xcite .",
    "we summarize this below ; for details , see @xcite .",
    "the recurrence relations of the bicg under the preconditioned system are @xmath86 here , @xmath87 is the degree @xmath8 of the residual polynomial , and @xmath88 is the degree @xmath8 of the probing direction polynomial , that is , @xmath89 and @xmath90 .",
    "for example , in the left - pbicg , ( [ eqn : prec_res_pol ] ) is shown as @xmath91 , so @xmath92 .",
    "the contents of each cell are as follows .",
    "the number in each cell indicates the convergence rate[multiblock footnote omitted ] . a period ( . )",
    "indicates that it did not converge until the maximum number of iterations , `` bd '' indicates that the process broke down , an asterisk ( @xmath93 ) with a gray background indicates that the convergence was superficial convergence , and a blank indicates that it was not solved for some other reason .    here , we consider the number of cases of superficial convergence .",
    "superficial convergence occurs when the residual vector implies that convergence has occurred , but the solution vector is not a sufficiently accurate approximation to the true residual vector .",
    "the stopping criteria were as follows : @xmath94 @xmath95 here , @xmath96 and @xmath72 are the residual vectors for the corresponding pcgs .",
    "when these conditions are satisfied , the numerical solution ( @xmath97 ) is obtained , and the true relative residual is calculated as follows : @xmath98 in this systematic performance evaluation , @xmath99 in ( [ eqn : conv_judge ] ) and ( [ eqn : conv_judge2 ] ) was set to @xmath100 . on the other hand , @xmath101 in ( [ eqn : conv_judge_trr_sesna ] ) was set to @xmath102 , because @xmath103 is a stringent value for the tolerance for the true relative residual .",
    "we consider that superficial convergence has occurred when ( [ eqn : conv_judge ] ) or ( [ eqn : conv_judge2 ] ) is satisfied , but ( [ eqn : conv_judge_trr_sesna ] ) is not .",
    "figure  [ fig : convleftimpr1_wolist ] and table  [ tab : sesna_num_of_superficial_conv ] show that the stopping criterion ( [ eqn : conv_judge2 ] ) for the left - pcgs is inadequate .",
    "therefore , the left - pcgs has a serious defect , in that superficial convergence can occur ; we note that this also occurs with other left - preconditioned algorithms @xcite .    just as information on figure",
    "[ fig : convleftimpr1_wolist ] , the numbers of problem cases ( not converged or not solved , breakdown , and superficial convergence ) are 172 , 159 , and 152 for the conventional pcgs , the left - pcgs , and the improved1 pcgs , respectively ."
  ],
  "abstract_text": [
    "<S> an improved preconditioned conjugate gradient squared ( pcgs ) algorithm has recently been proposed , and it performs much better than the conventional pcgs algorithm . in this paper , </S>",
    "<S> the improved pcgs algorithm is verified as a coordinative to the left - preconditioned system , and it has the advantages of both the conventional and the left - pcgs ; this is done by comparing , analyzing , and executing numerical examinations of various pcgs algorithms , including another improved one . </S>",
    "<S> we show that the direction of the preconditioned system for the cgs method is determined by the operations of @xmath0 and @xmath1 in the pcgs algorithm . by comparing the logical structures of these algorithms , </S>",
    "<S> we show that the direction of the preconditioned system can be switched by the construction and setting of the initial shadow residual vector . </S>"
  ]
}
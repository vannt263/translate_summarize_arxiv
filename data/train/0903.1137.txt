{
  "article_text": [
    "in multi - agent systems , a simple mechanism for aggregating agents preferences is to apply a voting rule .",
    "each agent expresses a preference ordering over a set of candidates , and an election is held to compute the winner .",
    "the candidates can be political representatives , or items of more direct concern to multi - agent systems like schedules , resource allocations or joint plans .",
    "a number of interesting questions can be asked about such elections .",
    "for example , what is a `` fair '' way to run such an election ?",
    "arrow s famous impossibility theorem answers this question negatively . under some general assumptions ,",
    "every voting rule is `` unfair '' when we have more than two candidates . as a second example",
    ", how do we encourage agents to vote truthfully ?",
    "one mechanism to encourage truthful voting is to make it computationally `` difficult '' to manipulate the result @xcite . in this paper",
    ", we consider a number of computational questions surrounding the elicitation of agents preferences as well as the strategic manipulation of elections used to aggregate such preferences .",
    "we first consider preference elicitation .",
    "in particular , we consider how to decide when to stop eliciting preferences as the winner is guaranteed .",
    "since preference elicitation is time consuming and costly , and agents may have privacy concerns about revealing their preferences , we may want to stop eliciting preferences as soon as the result is fixed .",
    "we show that how we elicit preferences impacts on the computational complexity of deciding when to stop elicitation .",
    "for instance , we prove that it can be computationally easy to decide when to terminate eliciting preferences if we elicit whole votes from agents , but computationally intractable when we elicit individual preferences .",
    "complexity considerations can thus motivate the choice of an elicitation strategy .",
    "we then consider how to manipulate the result of such an election .",
    "computational complexity may then be desirable as it can provide a barrier to strategic manipulation @xcite .",
    "we argue that there is a tension between making manipulation computationally intractable and making it computationally easy to decide when to terminate eliciting preferences .",
    "in addition , we prove that there are voting rules which are easy to manipulate if we can change all of an agent s vote , but computationally intractable if we can change only some of their preferences .",
    "most existing results about the complexity of manipulation have assumed all of one or more agents votes can be manipulated .",
    "this result suggests that a more fine - grained view of manipulation may be useful .",
    "finally , we consider the connection between preference elicitation and predicting the probability of a candidate winning .",
    "this permits us to identify voting rules where computing the probability of a candidate winning is computationally intractable .",
    "we assume there are @xmath0 agents voting over @xmath1 possible candidates .",
    "a _ profile _ is a set of @xmath0 total orders over the @xmath1 candidates .",
    "each total order is one agent s _ vote_. a _ voting rule _ is a function mapping a profile onto one candidate , the _",
    "winner_. we assume that any rule takes polynomial time to apply .",
    "we let @xmath2 be the number of agents preferring @xmath3 to @xmath4 . in the case",
    "that the result of the voting rule is a tie between two or more of the candidates , we assume that the chair chooses the winner from the tied candidates in a way that is unfavourable .",
    "for instance , when we are considering if a coalition of agents can strategically manipulate the election to ensure a particular candidate wins , we assume that the chair picks this candidate if there is a tie .",
    "however , most of our results go through with other tie - breaking rules . in addition , to reduce the impact of ties , we assume an odd number of agents . we consider the following voting rules .",
    "scoring rules : : :    @xmath5 is a vector of weights , the    @xmath3th candidate in a total order scores @xmath6 ,    and the winner is the candidate with highest total score . the    _ plurality _ rule has the weight vector @xmath7 ,    the _ veto _ rule has the vector @xmath8 , whilst    the _ borda _ rule has the vector @xmath9 . cup ( aka knockout ) : : :    the winner is the result of a series of pairwise majority elections    between candidates .",
    "the cup is defined by an agenda which is a binary    tree with one candidate labelling each leaf .",
    "each non - leaf is assigned    to the winner of the majority election between the candidates    labelling the children .",
    "the candidate labelling the root is the    overall winner .",
    "the cup is _ balanced _ if the difference in the depth    of any two leaves is 0 or 1 .",
    "for instance , a cup in which the agenda    is a complete binary tree is balanced .",
    "copeland : : :    the candidate with the highest copeland score wins .",
    "the copeland score    of candidate @xmath3 is given by :    @xmath10 .",
    "the copeland winner is the candidate that wins the most pairwise    elections .",
    "the 2nd order copeland rule tie - breaks by selecting the    candidate whose defeated competitors have the largest sum of copeland    scores . plurality with runoff : : :    if one candidate has a majority , they win .",
    "otherwise all but the two    candidates with the most votes are eliminated and the winner is chosen    using the majority rule .",
    "stv : : :    this rule requires up to @xmath11 rounds . in each round , the    candidate with the least number of agents ranking them first is    eliminated until one of the remaining candidates has a majority .    as in @xcite , we will consider both weighted and unweighted votes .",
    "a vote of integer weight @xmath12 can be viewed as @xmath12 agents who vote identically .",
    "although human elections are often unweighted , the addition of weights makes voting schemes more general .",
    "weighted voting systems are also used in a number of real - world settings like shareholder meetings , and elected assemblies .",
    "weights are also useful in multi - agent systems where we have different types of agents .",
    "weights are interesting from a computational perspective for several reasons .",
    "first , weights can increase computational complexity .",
    "for example , manipulating the borda rule is polynomial with unweighted votes @xcite but np - hard with weighted votes @xcite .",
    "second , as we argue in detail later , the weighted case informs us about the unweighted case when we have probabilistic information about the votes .",
    "for instance , if it is np - hard to compute if the election can be manipulated with weighted votes , then it is np - hard to compute the probability of a candidate winning when there is uncertainty about how the unweighted votes have been cast @xcite .",
    "again , to reduce the impact of ties , we assume that the sum of weights is odd .",
    "we suppose that not all agents preferences are known and that we are eliciting preferences so as to be able to declare the winner .",
    "we assume we have either an _ incomplete profile _ in which one or more of the total orders is only partially specified ( that is , some pairs of candidates are ordered but others are left unspecified ) , or a _ partial vote _ in which some agents have specified completely their preferences ( that is , their total order over candidates ) but other agents preferences are completely unknown .",
    "a partial vote is more a coarse form of uncertainty about the agents preferences than an incomplete profile .",
    "eliciting preferences takes time and effort .",
    "in addition , agents may be reluctant to reveal all their preferences due to privacy and other concerns .",
    "we therefore often want to stop elicitation as soon as one candidate has enough support that they must win regardless of any missing preferences .",
    "we therefore consider the computational complexity of deciding when we can stop eliciting preferences .",
    "we introduce two decision problems . if we elicit complete votes from each agent ( e.g. we ask one agent `` how do you rank all the candidates ? '' ) , coarse elicitation over  is true iff the winner is determined irrespective of how the remaining agents vote . on the other hand ,",
    "if we elicit just individual preferences ( e.g. we ask all agents `` do you prefer bush to gore ? '' ) , fine elicitation over  is true iff the winner is determined irrespective of how the undeclared preferences are revealed .",
    "note that in both cases , the missing preferences are assumed to be transitive .",
    "* input : * a partial vote .",
    "* output : * true iff only one candidate can win irrespective of how the remaining agents vote .     * input : * an incomplete profile .",
    "* output : * true iff only one candidate can win irrespective of how the incomplete profile is completed .",
    "note that it does not change the results in this paper if we define fine elicitation over  so that we ask all agents simultaneously about a particular pair of candidates .",
    "however , we choose a more general definition of fine elicitation in which we can ask any agent about the ranking of any pair of candidates .",
    "coarse elicitation over  and fine elicitation over  are in conp as a polynomial witness for elicitation _ not _ being over are two completions of the profile in which different candidates win . since coarse elicitation over  is a special case of fine elicitation over , it is easy to see that if fine elicitation over  is polynomial then coarse elicitation over  is too . similarly , if coarse elicitation over  is conp - complete then fine elicitation over  is too .",
    "however , as we show later , these implications do not necessarily reverse .",
    "for example , there are voting rules where coarse elicitation over  is polynomial but fine elicitation over  is conp - complete .",
    "our analysis considers two different dimensions that govern the complexity of terminating elicitation : weighted or unweighted votes , and a bounded or unbounded number of candidates .",
    "if the number of candidates is bounded , there are only a polynomial number of effectively different votes .",
    "we can thus enumerate and evaluate all different votes in polynomial time . hence computing coarse elicitation over  and fine elicitation over  are both polynomial . a similar argument",
    "was made to show that manipulation of an election by a coalition of agents is polynomial when the number of candidates is bounded @xcite .",
    "suppose now that the number of candidates is not necessarily bounded .",
    "conitzer and sandholm prove that coarse elicitation over  and fine elicitation over  are conp - complete for stv when votes are unweighted and the number of candidates is unbounded @xcite .",
    "on the other hand , coarse elicitation over  and fine elicitation over  are polynomial for the plurality , borda , veto and copeland rules with any number of candidates @xcite .      with weighted votes , deciding",
    "if elicitation is over can be intractable even when the number of candidates is small .",
    "for example , conitzer and sandholm prove that coarse elicitation over  and fine elicitation over  are conp - complete for stv when votes are weighted and there are just 4 ( or more ) candidates @xcite",
    ". however , coarse elicitation over  and fine elicitation over  are polynomial for the plurality , borda , veto and copeland with weighted votes and any number of candidates @xcite .",
    "we now give our first main result .",
    "there are voting rules where coarse elicitation over  is polynomial but fine elicitation over  is intractable . in a companion paper , we consider how to compute the possible winners of the cup rule when elicitation is not finished .    for the cup rule on weighted votes , fine elicitation",
    "overis conp - complete",
    "when there are 4 or more candidates , whilst coarse elicitation over  is polynomial irrespective of the number of candidates .",
    "theorem 69 in @xcite shows that manipulation of the cup rule by a coalition of agents with weighted votes is polynomial .",
    "it follows immediately that coarse elicitation over  is polynomial . to show that fine elicitation over  is np - hard with 4 candidates , consider the cup in which @xmath13 plays @xmath14 , the winner then plays @xmath15 , and the winner of this match goes forward to a final match against @xmath16 that first plays against @xmath16 , and placing @xmath17 at the bottom of each vote . whilst this will show that deciding if preference elicitation can be terminated is conp - complete for balanced cups with 5 candidates , it leaves open the complexity for balanced cups with just 4 candidates . ] .",
    "we will reduce number partitioning to deciding if elicitation is over for this cup rule given a particular incomplete profile .",
    "suppose we have a bag of integers , @xmath18 with sum @xmath19 and we wish to decide if they can be partitioned into two bags , each with sum @xmath12 .",
    "we construct an incomplete profile in which the following weighted votes are completely fixed : @xmath20 vote for @xmath21 of weight @xmath20 , 1 vote @xmath22 of weight @xmath23 , and 1 vote @xmath24 of weight @xmath23 . for the first number , @xmath25 in the bag of integers",
    ", we have a fixed vote for @xmath26 of weight @xmath27 .",
    "for each other number , @xmath18 where @xmath28 , we have an incomplete vote of weight @xmath29 in which @xmath30 is fixed but the rest of the vote is unspecified .",
    "we are sure @xmath13 beats @xmath15 in the final result by 1 vote whatever happens .",
    "similarly , we are also sure that @xmath16 beats @xmath13 , and @xmath16 beats @xmath14 .",
    "thus , the only winners of the cup rule are @xmath16 or @xmath15 .",
    "if in all the incomplete votes we have @xmath31 , then @xmath16 will win overall .",
    "we now show that @xmath15 can win iff there is a partition of equal weight .",
    "suppose there is such a partition and that the incomplete votes corresponding to one partition have @xmath32 whilst the incomplete votes corresponding to the other partition have @xmath33 .",
    "thus , @xmath14 beats @xmath13 overall , and @xmath15 beats @xmath14 .",
    "we suppose also that enough of the incomplete votes have @xmath34 for @xmath15 to beat @xmath16 . hence @xmath15 is the winner of the cup rule and @xmath16 does not win .",
    "on the other hand , suppose @xmath15 wins .",
    "this can only happen if @xmath14 beats @xmath13 , @xmath15 then beats @xmath14 and @xmath15 finally beats @xmath16 . if @xmath13 beats @xmath14 in the first round , @xmath13 will beat @xmath15 in the second round and then go out to @xmath16 . for @xmath15 to beat @xmath14 ,",
    "at least half the weight of incomplete votes must rank @xmath15 above @xmath14 .",
    "similarly , for @xmath14 to beat @xmath13 , at least half the weight of incomplete votes must rank @xmath14 above @xmath13 . since all votes rank @xmath13 above @xmath15 , @xmath14 can not be both above @xmath13 and below @xmath15 .",
    "thus precisely half the weight of incomplete votes ranks @xmath14 above @xmath13 and half ranks @xmath15 above @xmath14 .",
    "hence , we have a partition of equal weight .",
    "therefore , both @xmath15 and @xmath16 can win iff there is a partition of equal weight .",
    "that is , elicitation is not over iff there is a partition of equal weight .",
    "we may therefore prefer to elicit whole votes as opposed to individual preferences from agents since we can then easily decide when to terminate elicitation .",
    "computational complexity can thus motivate the choice of an elicitation strategy .",
    "we suggest that such complexity analysis may be useful to study other aspects of elicitation ( e.g. how to ask only those preferences that can decide the winner , or how to decide the winner with as few questions as possible ) .",
    "we note that for the cup rule with just 3 or fewer candidates , it is polynomial to decide if elicitation is over .    for the cup rule on weighted votes , coarse elicitation over  and fine elicitation over",
    "are both polynomial with 3 or fewer candidates .    for 2 candidates ,",
    "the cup rule degenerates to the majority rule , and fine elicitation over  degenerates to coarse elicitation over . in this case",
    ", elicitation can be terminated iff a majority in weight of votes prefer one candidate .    for 3 candidates , without loss of generality",
    ", we consider the cup in which @xmath13 plays @xmath14 , the winner then plays @xmath15 .",
    "suppose we have an incomplete profile over these three candidates .",
    "for @xmath13 to win , they must beat @xmath14 and @xmath15 in pairwise elections .",
    "we do not care about the ordering between @xmath14 and @xmath15 since if @xmath13 wins , @xmath14 and @xmath15 do not meet .",
    "thus , we complete the profile placing @xmath13 above @xmath14 and @xmath15 wherever possible , and ordering @xmath14 and @xmath15 as we wish . to see",
    "if @xmath14 can win , we complete the profile in an analogous fashion .",
    "finally , for @xmath15 to win they must beat the winner of @xmath13 and @xmath14 .",
    "we therefore consider two completions of the profile : one in which @xmath15 is placed above @xmath13 , and @xmath13 above @xmath14 wherever possible , and the second in which @xmath15 is placed above @xmath14 , and @xmath14 above @xmath13 wherever possible . in total , we have just four completions to consider .",
    "these can be tested in polynomial time .",
    "eliciting preferences can be terminated iff the same candidate wins in each case .",
    "thus , fine elicitation over  is polynomial . given a partial vote , we complete the profile in a similar way to test coarse elicitation over .",
    "the _ condorcet winner _ is the candidate who beats all others in pairwise elections .",
    "unfortunately , not all elections have a condorcet winner .",
    "however , many authorities from the marquis de condorcet onwards have argued that , if the condorcet winner exists , they should be elected .",
    "several voting rules including the copeland rule elect the condorcet winner if they exist .",
    "such rules are called _ condorcet consistent_.    we consider here the complexity of deciding if we have elicited enough preferences to identify the condorcet winner .",
    "there are three possible situations : the condorcet winner is guaranteed whatever the remaining preferences , there can not now be a condorcet winner , or it still depends on the un - elicited preferences whether there is a condorcet winner or not .",
    "we therefore define the following function problem .",
    "* input : * an incomplete profile .",
    "* output : * `` true '' if one candidate is the condorcet winner win irrespective of how the profile is completed , `` false '' if there can not now be condorcet winner and `` not determined '' otherwise .",
    "a nice property is that condorcet winner fixed   can be decided in polynomial time .",
    "condorcet winner fixed  is polynomial to compute for weighted votes and any number of candidates .    for each candidate , we check if agents with at least half the weight in votes have specified a preference for this candidate over any other candidate .",
    "if there exists such a candidate , then they must be the condorcet winner .",
    "otherwise , for each candidate , we check if agents with at least half the weight in votes have specified a preference for some other candidate .",
    "if this is the case for every candidate , then there can not be a condorcet winner .",
    "if neither of the above tests holds , then it is not yet determined if there is or is not a condorcet winner .",
    "hence , if we are only interested in the condorcet winner , we can easily determine if we can terminate eliciting preferences .",
    "it does not matter ( as it did with the cup rule ) if we elicit whole votes or individual preferences .",
    "agent s preferences may have a limited form .",
    "one common restriction is to single peaked votes . in this situation",
    ", candidates can be placed in a left to right order and each agent s preference decreases with distance from their peak .",
    "for example , an agent s preference over the price of an object tends to depend on the distance from their optimal price . knowing that unspecified preferences are single peaked may make elicitation easier @xcite .",
    "we consider here the computational complexity of deciding when to terminate preference elicitation when preferences are guaranteed to be single peaked .",
    "we introduce the following decision problem .",
    "* input : * an incomplete profile which can be completed to give a single peaked profile with respect to a given total ordering on candidates .",
    "* output : * true iff only one candidate can win irrespective of how the profile is completed , provided that the completion is single peaked with respect to the given ordering .    an interesting open question is to consider what happens when profiles are guaranteed to be single peaked , but we are not told the ordering along which preferences are single peaked . adding",
    "the assumption that preferences are single peaked may change the complexity of deciding when preference elicitation can be terminated .",
    "for instance , it is now polynomial to decide if we can terminate elicitation with the cup rule .    for the cup rule with weighted votes , fine sp elicitation over",
    "is polynomial .",
    "if preferences are single peaked , there is always a condorcet winner ( the _ median _ candidate who beats all others in pairwise comparisons ) @xcite . the cup rule will elect this candidate . by theorem 3 , it is polynomial to decide if the condorcet winner is fixed .",
    "on the other hand , there are voting rules where it remains computationally difficult to decide if preference elicitation can be terminated when votes are assumed to be single peaked .    for the stv rule with 3 or more candidates and weighted votes , fine sp elicitation over",
    "is conp - complete .",
    "we use a reduction from number partitioning similar to that used to prove that stv is hard to manipulate strategically with weighted votes @xcite .",
    "the partial vote used in this reduction was not single peaked .",
    "however , it can be modified to be single peaked with a small change .",
    "suppose we have a bag of @xmath0 numbers , @xmath35 where @xmath36 .",
    "the 3 candidates are @xmath13 , @xmath14 and @xmath15 .",
    "we suppose agents preferences are single peaked when candidates are ordered alphabetically .",
    "we construct an incomplete profile as follows .",
    "one agent with weight @xmath37 votes @xmath38 , a second agent with weight @xmath39 votes @xmath33 , and a third agent also with weight @xmath39 votes @xmath40 .",
    "there are @xmath0 other agents , each with a weight @xmath29 and unspecified preferences .",
    "suppose there is a perfect partition .",
    "then , we can have @xmath19 weight of votes putting @xmath13 at the peak , and the other @xmath19 weight of votes putting @xmath15 at the peak . in this case",
    ", the stv rule eliminates @xmath14 in the first round ( as @xmath14 has just @xmath37 weight of votes , and the other two candidates have @xmath41 ) , and then elects @xmath15 . hence , there is a completion in which @xmath15 is a winner if there is a perfect partition .",
    "suppose there is not a perfect partition .",
    "then either @xmath13 , @xmath14 or @xmath15 will receive less than @xmath19 weight of votes from the final @xmath0 agents . in the first case",
    ", @xmath13 is eliminated by the first round of stv and @xmath14 goes on to win . in the second case ,",
    "either @xmath13 or @xmath15 is eliminated by the first round .",
    "if @xmath13 is eliminated , @xmath14 then wins",
    ". if @xmath15 is eliminated , @xmath14 also wins .",
    "finally , in the third case , @xmath15 is eliminated and @xmath14 wins . hence @xmath14 or @xmath15 can be the winner iff there is a perfect partition .",
    "thus , voting is not yet over iff there is a perfect partition .",
    "note that plurality with runoff for 3 candidates is equivalent to stv .",
    "it follows therefore that fine sp elicitation over  is np - hard for plurality with runoff . with other rules like plurality , borda and veto ,",
    "fine sp elicitation over  is polynomial for weighted votes with any number of candidates .",
    "a closely related problem to deciding if elicitation can be terminated is the problem that agents may try to vote strategically .",
    "that is , agents may try to manipulate the result by ranking the candidates in some order _ different _ to their true preferences .",
    "this is undesirable for several reasons including , for instance , that a socially less preferred candidate may win .",
    "the gibbard - satterthwaite theorem demonstrates that any `` non - dictatorial '' voting rule is vulnerable to such manipulation when there are three or more candidates @xcite .",
    "a voting rule is dictatorial if one of the agents dictates the result no matter how the others vote .",
    "unfortunately , the manipulability of voting rules is especially problematic for multi - agent systems .",
    "such systems may have significant computational power with which to look for manipulations .",
    "in addition , agents may follow fixed voting strategies , making them more prone to manipulation .",
    "we define coalition manipulationas the problem of deciding if a coalition of agents can ensure a particular candidate wins .",
    "* input : * a candidate , a profile and a subset of agents    * output : * true iff the subset of agents can change their votes to ensure the candidate wins .    the complexity of manipulation by a coalition of agents is closely related to the complexity of deciding if preference elicitation can be terminated . in particular , if a voting rule is polynomial to manipulate by a coalition then it is also polynomial to decide when to terminate eliciting whole votes",
    ". dually , if it is np - hard to decide when to terminate eliciting whole votes then it is also np - hard for a coalition to manipulate the result .",
    "unfortunately , this may create a tension since we want it to be computationally hard to manipulate an election but computationally easy to decide when to terminate elicitation .",
    "the next example illustrates this tension .",
    "consider manipulating an election when the voting rule elects the condorcet winner .",
    "we define coalition manipulationof the condorcet winner as the problem of deciding if a coalition of agents can ensure that a particular candidate is the condorcet winner .",
    "coalition manipulation  of the condorcet winner is polynomial with weighted votes and any number of candidates .",
    "the coalition of agents simply places the chosen candidate first in their total orders .",
    "hence , whilst it may be easy to decide when to terminate eliciting preferences when electing the condorcet winner , this result suggests that condorcet consistent voting rules may be vulnerable to manipulation .",
    "the only feature of condorcet consistent rules that might make manipulation computationally difficult is how they decide the winner when there is no condorcet winner .",
    "for example , the 2nd order copeland rule which is condorcet consistent is np - hard to manipulate by a coalition of agents @xcite .",
    "this illustrates the tension between chosing a voting rule with which it is computationally easy to decide when to terminate preference elicitation , but with which it is computationally hard to manipulate the election .",
    "an interesting approach to make manipulation computationally difficult is to add a pre - round to an election @xcite . for instance",
    ", we might perform one round of the cup rule , before executing the plurality rule on the surviving candidates .",
    "such a pre - round turns plurality which is computationally easy to manipulate by a coalition into a hybrid rule that is np - hard to manipulate assuming an unbounded number of candidates @xcite .",
    "whilst this hybridization of the plurality rule makes manipulation computationally difficult , it does not appear to make it difficult to elicit preferences .",
    "coarse elicitation over  for the hybrid rule which applies one round of the cup and then plurality to the survivors is polynomial , even with weighted votes and an unbounded number of candidates .",
    "a candidate can win their pre - round iff their opponent has less than half the weight of possible votes .",
    "for each candidate @xmath13 that can win their pre - round , we test if any other candidate @xmath14 that can win their pre - round is able to defeat them .",
    "@xmath14 will be able to defeat @xmath13 overall if the total weight of votes cast for @xmath13 is less than the total weight of votes cast for @xmath14 plus the total weight of uncast votes . if there is only one candidate that can win their pre - round who can not be defeated then the result is determined and we can terminate eliciting votes .",
    "otherwise , elicitation of votes needs to continue .",
    "this illustrates that the tension between manipulation and the termination of eliciting preferences is not inevitable .",
    "we started with the plurality rule .",
    "it is polynomial to decide when to terminate preference elicitation when using the plurality rule ( which is good ) , but it is also polynomial for a coalition of agents to manipulate the result ( which is bad ) . adding a pre - round to the plurality rule makes manipulation computationally intractable ( which is good ) .",
    "however , deciding if elicitation can be terminated remains polynomial ( which is good ) .",
    "up till now , manipulation has been by a coalition of agents . we can consider a more limited form of manipulation .",
    "suppose we can not manipulate all the votes of a coalition of agents , but we can manipulate only certain preferences of certain agents . for example , we might run a tv campaign to persuade agents to rank one candidate above another . as a second example",
    ", we might be unable to bribe a agent to place our preferred candidate first in their vote , but we might be able to bribe them to swap the order of two more lowly ranked candidates .",
    "we therefore define preference manipulation  as the problem of deciding if we can change some given preferences to ensure a particular candidate wins .",
    "* input : * a candidate , a profile and certain preference orderings within the profile .",
    "* output : * true iff these preference orderings can be manipulated to give a profile in which the candidate wins .",
    "note that some preferences are fixed ( `` agent 3 prefers @xmath14 to @xmath15 and this can not be manipulated '' ) , that other preferences can be changed ( `` the ranking between @xmath13 and @xmath14 for agent 3 is manipulable '' ) , but that we can only change preferences to give a total order .",
    "this last condition is needed as many voting rules are only defined over total orders . however ,",
    "when the voting rule works with a more general preference relation , we may be able to relax this condition .",
    "surprisingly , this more subtle form of manipulation can be computationally harder than manipulation by a coalition of agents .",
    "coalition manipulation  is a subproblem of preference manipulation .",
    "it follows immediately that if manipulation by a coalition is np - hard , then so is manipulation of individual preferences , and that if manipulation of individual preferences is polynomial then manipulation by a coalition is also .",
    "however , as the following example illustrates , these implications do not necessarily reverse ( unless @xmath42 ) . with the cup rule",
    ", we only need 3 candidates for it to be np - hard for a coalition of agents to be able to manipulate the result if they can only change individual preferences .    for the cup rule on weighted votes , coalition manipulation  is polynomial irrespective of the number of candidates , but preference manipulationwith 3 or more candidates is np - complete .",
    "theorem 7 in @xcite proves that coalition manipulation  for the cup rule on weighted votes is polynomial . to prove preference manipulation  is np - hard for 3 or more candidates",
    ", we give a reduction from the number partitioning problem .",
    "we consider the cup in which @xmath13 plays @xmath14 , and the winner then plays @xmath15 .",
    "we have a bag of integers , @xmath18 with sum @xmath19 and we wish to decide if they can be partitioned into two bags , each with sum @xmath12 .",
    "we will show that we can set up an election where we can manipulate a given set of preferences so that @xmath15 wins if and only if a partition exists .",
    "we suppose the following votes for the three candidates are not manipulable : @xmath20 vote for @xmath40 of weight @xmath20 , 1 vote @xmath43 of weight @xmath23 , and 1 vote @xmath38 of weight @xmath23 . at this point ,",
    "the weight of votes such that @xmath15 is ahead of @xmath13 is @xmath44 , the weight of votes such that @xmath15 is ahead of @xmath14 is @xmath20 , and the weight of votes such that @xmath14 is ahead of @xmath13 is @xmath20 . for each @xmath18",
    ", we also have a manipulable vote of weight @xmath29 in which @xmath30 is fixed and can not be changed , but the rest of the vote can be manipulated .",
    "that is , the ordering between @xmath13 and @xmath14 and between @xmath14 and @xmath15 is manipulable . as the total weight of these manipulable votes is @xmath39 ,",
    "we are sure @xmath13 beats @xmath15 in the final result by 1 vote whatever manipulation takes place .",
    "we now show that the manipulable vote can be changed to make the final result that @xmath14 beats @xmath13 and then @xmath15 beats @xmath14 iff there is a partition of size @xmath12 .",
    "suppose there is such a partition . then let the manipulated votes in one bag of such a partition be @xmath45 and the manipulated votes in the other be @xmath32 .",
    "then , @xmath14 beats @xmath13 and @xmath15 beats @xmath14 ( and thus @xmath15 wins ) . on the other hand , suppose there is a way to manipulate the preferences so that @xmath15 wins .",
    "this can only happen if @xmath14 beats @xmath13 and then @xmath15 beats @xmath14 .",
    "if @xmath13 beats @xmath14 in the first round , @xmath13 will beat @xmath15 in the final round and win .",
    "for @xmath15 to beat @xmath14 , at least half the weight of manipulable votes must rank @xmath15 above @xmath14 .",
    "similarly , for @xmath14 to beat @xmath13 , at least half the weight of manipulable votes must rank @xmath14 above @xmath13 . since all votes rank @xmath13 above @xmath15 , @xmath14 can not be both above @xmath13 and below @xmath15",
    ". thus precisely half the weight of manipulated votes ranks @xmath14 above @xmath13 and half ranks @xmath15 above @xmath14 .",
    "hence , we have a partition of equal weight . to conclude",
    ", we can manipulate the preferences so that @xmath15 can win iff there is a partition of size @xmath12 .",
    "note that the particular cup used in the reduction was balanced .",
    "it therefore follows that preference manipulationremains np - complete even if we are limited to balanced cups    thus , the cup rule is easy to manipulate when we can change the _ whole _ vote of a coalition of agents . if we can change only some of their preferences , manipulation is np - hard .",
    "the computational complexity of manipulating preferences is closely related to that of deciding if preference elicitation can be terminated .",
    "in particular , it is easy to show that fine elicitation over  is conp - complete implies preference manipulation  is np - complete .",
    "however , this implication does not reverse .",
    "for example , by theorem 8 , preference manipulation  is np - complete for the cup rule on weighted votes with 3 candidates but by theorem 2 , fine elicitation over  is polynomial for the cup rule with the same number of candidates .",
    "we can give other examples where preference manipulation is computationally intractable but manipulation by a coalition of agents is polynomial .",
    "for example , the copeland rule is np - hard to manipulate by a coalition of weighted agents if we have 4 or more candidates , and polynomial to manipulate if we have 3 or fewer candidates . however , as we show here , it is np - hard to manipulate individual preferences with the copeland rule if there are 3 or more candidates . hence , for 3 candidates and the copeland rule , preference manipulation  is np - hard but coalition manipulation   is polynomial .",
    "the copeland rule elects the candidate that wins the most pairwise majority elections . in the case of a tie , as in @xcite , the election is presumed to go in favour of the manipulator .    for the copeland rule on weighted votes ,",
    "coalition manipulation  is np - complete if there are 4 or more candidates and polynomial otherwise , whilst preference manipulation  is np - complete if there are 3 or more candidates and polynomial otherwise .",
    "theorem 2 in @xcite proves that coalition manipulation  is np - complete for the copeland rule with weighted votes and 4 or more candidates .",
    "theorem 70 in @xcite proves that it is polynomial for 3 or fewer candidates . to prove preference manipulation  is np - hard for 3 or more candidates and weighted votes",
    ", we give a reduction from the number partitioning problem .",
    "we have a bag of integers , @xmath18 with sum @xmath19 and we wish to decide if they can be partitioned into two bags , each with sum @xmath12",
    ". we will show that we can set up an election where we can manipulate a given set of preferences so that @xmath15 wins if and only if a partition exists .",
    "we suppose the following votes for the three candidates are not manipulable : @xmath20 vote for @xmath43 of weight @xmath12 , and 1 vote @xmath40 of weight @xmath12 . for each @xmath18",
    ", we also have a manipulable vote of weight @xmath18 in which @xmath30 and @xmath46 are fixed and can not be changed , but the preference between @xmath13 and @xmath14 is manipulable . as the total weight of these manipulable votes is @xmath19 ,",
    "we are sure @xmath13 ties with @xmath15 and @xmath14 ties with @xmath15 whatever manipulation takes place .",
    "we now show that the manipulable vote can be changed to make the final result that @xmath13 ties with @xmath14 and thus , by the adversarial tie - breaking assumption , that @xmath15 wins iff there is a partition of size @xmath12 .",
    "suppose there is such a partition",
    ". then let the manipulated votes in one bag of such a partition be @xmath33 and the manipulated votes in the other be @xmath32 . then",
    ", @xmath13 ties with @xmath14 and thus @xmath15 wins . on the other hand ,",
    "suppose there is a way to manipulate the preferences so that @xmath15 wins .",
    "this can only happen if @xmath13 ties with @xmath14 .",
    "if @xmath13 beats @xmath14 , then @xmath13 wins overall .",
    "similarly , if @xmath14 beats @xmath13 , then @xmath14 wins overall .",
    "thus precisely half the weight of manipulated votes ranks @xmath13 above @xmath14 and half ranks @xmath14 above @xmath13 .",
    "hence we have a partition of equal weight .",
    "thus , we can manipulate the preferences so that @xmath15 can win iff there is a partition of size @xmath12 .    to conclude , voting rules like the cup and copeland rule are easy to manipulate if we can change whole votes .",
    "if we can only manipulate individual preferences , they are np - hard to manipulate .",
    "this suggests that a more fine - grained view provides insight into manipulability .",
    "many of our results so far have considered weighted votes .",
    "one reason to consider weighted votes is that they inform us about unweighted votes when we have uncertainty about the votes cast .",
    "evaluation is the problem of deciding if the probability of the candidate winning is strictly greater than some given @xmath47 @xcite .     *",
    "input : * a candidate , a probability distribution over votes , and a number @xmath48 $ ] .",
    "* output : * true iff the probability of the candidate winning is strictly greater than @xmath47 .",
    "evaluation is closely related to manipulation as the following result illustrates .",
    "preference manipulation  is np - hard for a voting rule on weighted votes implies evaluation with the same rule on unweighted votes is also np - hard .",
    "we reduce preference manipulationto evaluation .",
    "each agent of weight @xmath12 is replaced by @xmath12 agents of weight 1 whose votes are perfectly correlated .",
    "we construct a joint probability distribution over the votes so that each completion is drawn with the correct frequency . if @xmath49 , evaluation decides preference manipulation .",
    "note that the reduction can take on board many restrictions on the voting rule or election .",
    "for example , if preference manipulationis np - hard for weighted votes with 3 or more candidates then evaluation is np - hard for unweighted votes with 3 or more candidates . in a similar fashion , we can show that if coalition manipulation  on weighted votes is np - hard then evaluation is also . however , this is a weaker result as it has a more specific hypothesis that holds in fewer situations .",
    "there are voting rules like the cup rule for which coalition manipulation  is polynomial but preference manipulationis np - hard . as simple corollary of theorem 10",
    "is that we can conclude for the first time that evaluation for the cup rule is np - hard .",
    "evaluation for the cup rule with 3 or more candidates is np - hard .",
    "the cup rule is used in a wide range of situations including major sporting competitions like the world cup .",
    "the computational difficulty of manipulating the cup rule ( or of predicting the winner ) therefore appears to be of some importance .",
    "however , we need to be careful in drawing too strong a conclusion .",
    "in particular , we have assumed that each agent s preference relation is transitive .",
    "this creates a tension : we want the runner - up to be strong enough to win their side of the tournament , but not so strong that they beat the winner .",
    "if we drop the assumption that agents preference relations are transitive , then manipulating the cup rule ( or predicting the winner ) may be easy .",
    "conitzer and sandholm studied the computational complexity of eliciting preferences @xcite .",
    "they proved that for unweighted votes and an unbounded number of candidates , it is np - hard to decide when to stop eliciting votes for the stv rule , but polynomial for many other rules including plurality , borda and copeland .",
    "they also considered how hard it is to design an elicitation policy so that few queries are needed .",
    "they showed that even with complete information about how the agents will vote , it is np - hard for many voting rules to determine which agents to ask their preferences . finally , they showed that elicitation introduces additional opportunities for strategic manipulation .",
    "bartholdi , tovey , trick and orlin were the first to suggest that computational complexity might be used as a barrier to manipulation @xcite .",
    "their results considered manipulation by a single agent .",
    "conitzer , sandholm and lang subsequently considered manipulation by a coalition of agents @xcite . for instance , they proved that manipulation of borda , veto , stv , plurality with runoff , copeland and simpson by a coalition of agents are all np - hard for weighted votes with a small ( bounded ) number of candidates .",
    "similarly , they proved that it is np - hard for a coalition of agents to manipulate the election so that a given candidate does not win for stv and plurality with runoff with weighted votes and a small ( bounded ) number of candidates .",
    "finally , they proved that deciding when eliciting preferences can be terminated is np - hard for stv but polynomial for many other rules , whilst deciding which votes to elicit is np - hard for approval , borda , copeland and simpson @xcite .",
    "procaccia and rosenschein studied the average - case complexity of manipulating @xcite .",
    "worst - case results like those here may not apply to elections in practice .",
    "they consider elections obeying junta distributions , which concentrate on hard instances .",
    "they prove that scoring rules , which are np - hard to manipulate in the worst case , are computationally easy on average . in a related direction , conitzer and sandholm have shown that it is impossible to create a voting rule that is usually hard to manipulate if a large fraction of instances are weakly monotone and manipulation can make either of exactly two candidates win @xcite .",
    "faliszewski _ et al .",
    "_ studied a form of preference manipulation , called `` micro - bribery '' in which individual preferences of agents can be manipulated @xcite .",
    "note that the resulting orders may not be transitive .",
    "interestingly , they proved that for the llull and copeland rules , it is polynomial for the chair to perform such manipulation of individual preferences , but computationally intractable when the chair can only manipulate whole votes .",
    "this contrasts with the results here where we prove that there are rules like the cup and copeland rule which are easy to manipulate by a coalition if we can change whole votes , but computationally intractable when we can change only individual preferences .    to deal with uncertainty in the votes , konczak and lang introduced the notions of possible and necessary winners @xcite .",
    "given an incomplete profile , possible winners are those that win in some completion whilst necessary winners are those that win in all completions .",
    "when the set of possible winners contains just one candidate , this is the necessary winner and elicitation can be terminated .",
    "they proved that for any scoring rule , possible and necessary winners are polynomial to compute , as are possible and necessary condorcet winners .",
    "they also argue that when computing possible winners is polynomial , so is manipulation by a coalition of agents .",
    "proved that possible and necessary winners are np - hard to compute for stv for an unbounded number of candidates , and np - hard even to approximate these sets to within some constant factor in size @xcite . finally , in a companion paper",
    ", we study how to compute the possible and necessary winners of the cup rule when there is uncertainty about the votes and/or the agenda .",
    "we have studied some computational questions surrounding preference elicitation and strategic manipulation .",
    "we proved that the complexity of determining when we can terminate elicitation depends on the elicitation strategy .",
    "in particular , we showed that it can be polynomial to decide when to stop eliciting whole votes from agents but np - hard to decide when to stop eliciting individual preferences .",
    "computational complexity thus motivates the choice of an elicitation strategy .",
    "we also studied the connection between manipulation and preference elicitation .",
    "we argued that there is a tension between making manipulation computationally intractable and making it computationally easy to decide when to terminate eliciting preferences .",
    "we also showed that what we can manipulate affects the computational complexity of manipulation .",
    "in particular , we proved that there are voting rules which are easy to manipulate if we can change all of an agent s vote , but intractable if we can change only some of their preferences .",
    "a more fine - grained view of manipulation can thus be informative .",
    "finally , we studied the connection between preference elicitation and predicting the winner .",
    "based on this , we identified a voting rule where it is np - hard to decide the probability of a candidate winning given a probability distribution over the votes ."
  ],
  "abstract_text": [
    "<S> complexity theory is a useful tool to study computational issues surrounding the elicitation of preferences , as well as the strategic manipulation of elections aggregating together preferences of multiple agents . </S>",
    "<S> we study here the complexity of determining when we can terminate eliciting preferences , and prove that the complexity depends on the elicitation strategy . </S>",
    "<S> we show , for instance , that it may be better from a computational perspective to elicit all preferences from one agent at a time than to elicit individual preferences from multiple agents . </S>",
    "<S> we also study the connection between the strategic manipulation of an election and preference elicitation . </S>",
    "<S> we show that what we can manipulate affects the computational complexity of manipulation . in particular </S>",
    "<S> , we prove that there are voting rules which are easy to manipulate if we can change all of an agent s vote , but computationally intractable if we can change only some of their preferences . </S>",
    "<S> this suggests that , as with preference elicitation , a fine - grained view of manipulation may be informative . finally , we study the connection between predicting the winner of an election and preference elicitation . </S>",
    "<S> based on this connection , we identify a voting rule where it is computationally difficult to decide the probability of a candidate winning given a probability distribution over the votes .    </S>",
    "<S> [ distributed artificial intelligence ] </S>"
  ]
}
{
  "article_text": [
    "let @xmath2 be a homogeneous poisson process with intensity 1 on @xmath0 .",
    "furthermore , let @xmath1 be a probability measure on the strictly positive integers .",
    "we shall study translation - invariant simple random graphs whose vertices are the points of @xmath2 and where the degrees of the vertices are i.i.d .  with law @xmath1 .",
    "deijfen @xcite studied moment properties achievable for the edge lengths in such graphs . here",
    ", we shall instead be interested in the percolation - theoretic question of whether the graph contains a component with infinitely many vertices .",
    "we next formally describe the objects that we will work with . for any random point measure",
    "@xmath3 we write @xmath4:=\\{x\\in{{\\mathbb r}}^d:\\lambda(\\{x\\})>0\\}$ ] for its support , or point - set .",
    "let @xmath5 be a random integer - valued measure on @xmath0 with the same support as @xmath2 , and which , conditional on @xmath2 , assigns i.i.d .",
    "values with law @xmath1 to the elements of @xmath6 $ ] .",
    "the pair @xmath7 is a marked point process with positive integer - valued marks . for @xmath8",
    "$ ] we write @xmath9 for @xmath10 , which we interpret as the number of stubs at vertex @xmath11 .",
    "a * matching scheme * for a marked process @xmath7 is a point process @xmath12 on @xmath13 with the property that almost surely for every pair @xmath14 $ ] we have @xmath15 $ ] , and such that in the graph @xmath16 with vertex set @xmath6 $ ] and edge set @xmath17 $ ] , each vertex @xmath11 has degree @xmath9 .",
    "the matching schemes under consideration will always be * simple * , meaning that @xmath18 has no self - loops and no multiple edges , and * translation - invariant * , meaning that @xmath12 is invariant in law under the action of all translations of @xmath0 .",
    "we say that a translation - invariant matching is a * factor * if it is a deterministic function of the poisson process @xmath2 and the mark process @xmath5 , that is , if it does not involve any additional randomness .",
    "we write @xmath19 and @xmath20 for probability and expectation on the probability space supporting the random triplet @xmath21 . for later purposes",
    ", we note that the notion of a matching scheme generalizes from the poisson case to general simple point processes .",
    "let @xmath22 be the palm version of @xmath21 with respect to @xmath2 , and write @xmath23 and @xmath24 for the associated probability law and expectation operator .",
    "informally speaking , @xmath23 describes the conditional law of @xmath21 given that there is a point at the origin , with the mark process and the matching scheme taken as stationary background ; see ( * ? ? ?",
    "* chapter 11 ) for more details .",
    "note that since @xmath2 is a possion process , we have @xmath25\\stackrel{d}{= } [ { \\mathcal{p}}]\\cup \\{0\\}$ ] .",
    "let @xmath26 denote the volume of the component of the origin vertex for @xmath27 , that is , @xmath26 is the number of vertices that can be reached by a path in @xmath28 from the origin .",
    "our first result states that , excluding trivial cases , on one hand it is always possible to obtain configurations that contain only finite components in a translation - invariant way , while on the other hand infinite components can always be achieved .",
    "furthermore , a connected graph is possible if and only if the expected degree is at least 2 .",
    "[ th : anything ] let @xmath2 be a poisson process of intensity @xmath29 in @xmath0 , for any @xmath30 , and let @xmath31 be a random variable with law @xmath1 .    for any degree distribution @xmath1 , there is a simple translation - invariant factor matching scheme such that @xmath32 .    if @xmath33 , then there is a simple translation - invariant factor matching scheme such that @xmath18 has exactly one infinite component a.s . , and furthermore @xmath34 .",
    "the following are equivalent .",
    "@xmath35\\geq 2 $ ] .",
    "there exists a simple translation - invariant matching scheme for which the graph @xmath18 is a.s .",
    "connected .",
    "there exists a simple _ factor _ matching scheme for which the graph @xmath18 is a.s .  connected .",
    "the implication ( ii)@xmath36(i ) of ( c ) is analogous to various results for percolation on lattices to the extent that the expected degree of vertices in infinite clusters must be at least @xmath37 ; see , e.g. ( * ? ? ?",
    "* theorem 2 ) and ( * ? ? ? * theorem 6.1 ) .",
    "we move on to consider a particular natural type of matching scheme which in the special case where @xmath38 ( i.e. , deterministically one stub per vertex ) is known as the * stable matching*. see , e.g. , @xcite .",
    "the natural extension to general degrees , called the * stable multi - matching * , is defined as follows ; here and throughout , distance @xmath39 and edge length are defined in terms of euclidean metric on @xmath0 .    a matching scheme @xmath12 is said to be a * stable multi - matching * if a.s . , for any two distinct points @xmath40 $ ] , either they are linked by an edge or at least one of @xmath11 and @xmath41 has no incident edges longer than @xmath39 .",
    "we remark that the concept of a stable multi - matching can be defined analogously for general point sets . here",
    "however we will use the term restricted to the specific situation described above .",
    "we will see in proposition [ prop : sm_works ] in section [ sect : background ] below that , for any dimension @xmath30 and any @xmath1 , there is then a unique stable multi - matching .",
    "our main result on the stable multi - matching is the following , giving sufficient conditions for existence and non - existence of an infinite cluster .",
    "it may be noted that the gap between the conditions in ( a ) and ( b ) is quite large ; see section [ sect : further ] for some discussion on this point .",
    "[ th : sm ] consider the stable multi - matching .",
    "for any @xmath42 , there exists a @xmath43 such that if @xmath44 , then @xmath45 .",
    "for any @xmath30 we have that if @xmath46 and @xmath47 , then @xmath48 .",
    "the rest of this paper is organized as follows . in section [",
    "sect : background ] we offer some further background on the model considered here . in section [",
    "sect : anything ] we prove theorem [ th : anything ] , while in sections [ sect : perc ] and [ sect : non - perc ] we prove parts ( a ) and ( b ) , respectively , of theorem [ th : sm ] .",
    "finally , in section [ sect : further ] we briefly mention some open problems and scope for further work .",
    "random graphs with prescribed degree distribution have been extensively studied in non - spatial settings ; see e.g.  @xcite , @xcite , @xcite , @xcite , @xcite and @xcite .",
    "deijfen and meester @xcite studied the problem of constructing translation - invariant graphs with @xmath49 as vertex set and i.i.d .",
    "degrees assigned to the vertices .",
    "they focussed on the question of what moment properties on edge lengths are achievable .",
    "deijfen and jonasson @xcite obtained further results in this direction , which jonasson @xcite extended to more general deterministic lattices .",
    "finally deijfen @xcite considered the same problem for the poisson process @xmath2 on @xmath0 , which is the setting we are concerned with here .",
    "the concept of stable matchings goes back to gale and shapely @xcite , and has been extensively studied ever since .",
    "holroyd and peres @xcite considered the case of matching poisson points in @xmath0 , while holroyd et al .",
    "@xcite went on to consider bipartite matching of two independent poisson processes .",
    "these last two references provide constructions that will be useful to us in later sections .",
    "we isolate the relevant findings in the following result concerning the existence of matchings schemes with constant degree @xmath29 in translation - invariant point processes .",
    "the * intensity * of a translation - invariant point process is the expected number of points in a fixed set of unit volume .",
    "a set @xmath50 is said to be * non - equidistant * if there are no distinct points @xmath51 with @xmath52 or @xmath53 , while a * descending chain * is an infinite sequence @xmath54 such that @xmath55 is strictly decreasing .",
    "[ prop : usm ] @xmath56    let @xmath57 be translation - invariant point processes on @xmath0 with finite intensity , and assume that a.s .",
    "@xmath58 $ ] is non - equidistant and has no descending chains .",
    "then a factor matching scheme for @xmath57 with constant degree @xmath29 exists .",
    "let @xmath57 and @xmath59 be point processes on @xmath0 , jointly ergodic under translations , and with equal finite intensities .",
    "assume that @xmath58\\cup [ \\mathcal{s}]$ ] is almost surely non - equidistant and has no descending chain .",
    "then there exists a factor matching scheme with constant degree @xmath29 for @xmath58 \\cup [ \\mathcal{s}]$ ] , having the property that every point in @xmath58 $ ] is linked to a point in @xmath60 $ ] and vice versa .    as an example that proves ( a )",
    ", we can take the stable matching , whose existence and uniqueness is established in @xcite . for ( b ) we can take the stable bipartite matching of @xmath57 and @xmath59 ( i.e.the stable matching where two points that are either both in @xmath57 or both in @xmath59 are postulated to have distance @xmath61 ,",
    "while the distance between other pairs of points is the usual euclidean one ) , whose existence and uniqueness is established in of ( * ? ? ?",
    "* proposition 9 ) .",
    "we remark at this point that the poisson process @xmath2 satisfies the assumptions of proposition [ prop : usm ] ( a ) , because it satisfies the no descending chains property as first noted in @xcite ; see also @xcite",
    ".    moving on to stable multi - matchings , consider the following procedure for matching the stubs of @xmath7 . in a set of points @xmath62 ,",
    "call a distinct pair @xmath63 * mutually closest * if @xmath11 is the closest point to @xmath41 in @xmath64 , and vice - versa .    step .",
    "consider the set @xmath6 $ ] of all points .",
    "an edge is created between each mutually closest pair in this set , and one stub is removed from each of these points .",
    "consider the set of all points that still have at least one stub after step 1 .",
    "two such points are called compatible if no edge was created between them in step 1 .",
    "an edge is created between each compatible mutually closest pair in this set , and one stub is removed from each of these points .",
    "@xmath65    consider the set of all points that still have at least one stub .",
    "two such points are called compatible if no edge has been created between them .",
    "an edge is created between each compatible mutually closest pair in this set , and one stub is removed from each of these points .",
    "@xmath65    it is immediate that this procedure will not produce self - loops or multiple edges , and the resulting process is clearly translation - invariant .",
    "we will show that a.s .",
    "all stubs are eventually matched , and moreover that the resulting graph is the unique stable multi - matching of @xmath7 .",
    "[ prop : sm_works ] let @xmath7 be a marked poisson process as before . almost surely , the iterative multi - matching procedure described above exhausts the set of stubs , and the limiting graph ( after an infinite number of iterations ) is a stable multi - matching .",
    "no other stable multi - matching of @xmath7 exists .    for the case",
    "where @xmath38 this is an application the result from @xcite mentioned in the proof of proposition [ prop : usm ] ( a ) .",
    "the general case is a straightforward adaptation of their argument , as follows .",
    "let @xmath66 be the process of points with at least one unmatched stub on them after the above matching procedure is completed .",
    "then @xmath66 is an ergodic point process and hence has either a.s .",
    "infinitely many points or a.s .",
    "no points . to rule out the former case , call two points in @xmath67 $ ]",
    "compatible if they do not have an edge between them in the configuration obtained from the matching procedure .",
    "then create a directed graph @xmath68 with @xmath67 $ ] as vertex set by drawing a directed edge from each point to its nearest compatible point ( which exists because the initial numbers of stubs were finite ) .",
    "some thought reveals that @xmath68 can not contain cycles of length more than two , and that each finite component must contain precisely one cycle of length two .",
    "however , a cycle of length two is also impossible , since it corresponds to two mutually closest points with no edge between them and an unmatched stub at each point , and between such points an edge would indeed have been created at some stage in the matching procedure . hence @xmath68 has no finite components , and no cycles .",
    "this implies that if @xmath67 $ ] is non - empty , then following the outgoing edges starting at any @xmath69 $ ] yields a descending chain . since descending chains do not exist @xmath2 ( and hence not in @xmath66 ) , we conclude that @xmath67 $ ] is a.s.empty , as desired .    that the resulting multi - matching is stable follows from the definition : an unstable pair of points would have had an edge created between them at some stage of the matching procedure . that it is the unique matching with this property follows by induction over the stages in the algorithm to show that each edge that is present in the resulting configuration must be present in any stable matching of the stubs .",
    "[ rem : sm_works_more_generally ] note that the given procedure works and proves proposition [ prop : sm_works ] in the greater generality where the poisson process @xmath2 is replaced by any point process satisfying the requirements of proposition [ prop : usm ] .",
    "[ rem : sm_works_with_some_edges_already_present ] we will later want to apply the given procedure in situations where some pairs of vertices already have an edge between them and additional connections between such vertices are prohibited . provided the existing edges form a translation - invariant process , the proof of proposition [ prop : sm_works ] shows that the process still exhausts all remaining stubs , and results in a translation - invariant process .      the so - called mass transport method in percolation theory was originally developed for the setting of nonamenable lattice ( see @xcite for background ) but has turned out to be a convenient tool also for the more familiar setting of processes living on @xmath70 or @xmath0 .",
    "here we formulate a special case adapted to the particular needs of the present paper .",
    "we define a * mass transport * to be a random measure @xmath71 on @xmath13 that is invariant in law under translations of @xmath0 , that is , @xmath72 for all borel @xmath73 and @xmath74 , where we write @xmath75 .",
    "we interpret @xmath76 as the amount of mass transported from @xmath77 to @xmath78 .",
    "let @xmath79 denote the unit cube @xmath80 .",
    "[ le : mt ] let @xmath71 be a mass transport",
    ". then @xmath81    @xmath82",
    "the task in this section is to prove theorem [ th : anything ] , and we begin with part ( a )",
    ".    we need to describe a factor matching scheme that gives only finite components . to this end , let @xmath83 denote the process of points @xmath8 $ ] with @xmath84 ( recall that @xmath9 denotes the number of stubs attached to @xmath11 ) .",
    "we will partition @xmath85 $ ] into groups of size @xmath86 .",
    "the configuration is then taken to consist of complete graphs on each of these groups .    take @xmath87 such that @xmath83 is non - empty . to partition",
    "@xmath85 $ ] , we assign each point in @xmath85 $ ] a type @xmath88 as follows .",
    "let @xmath89 be the distance from the origin to the closest other point in the palm version of @xmath83 and let @xmath90 be such that @xmath91 for @xmath92 $ ] , let @xmath93 denote the distance to the nearest other point in @xmath85 $ ] .",
    "we assign @xmath92 $ ] type @xmath94 if @xmath95 , and let @xmath96 be the process of points of @xmath83 of type @xmath94 .",
    "note that this assignment involves no randomness beyond the poisson process itself , and that for each given @xmath87 , the processes @xmath97 have equal intensities and are jointly ergodic under translations . by proposition [ prop : usm ] ( b ) , this means that for each @xmath98 we can find a matching scheme that matches each type @xmath94 point to a unique type @xmath99 point and vice versa .",
    "the components of the graph obtained by taking the union of these matchings partition @xmath85 $ ] into groups of size @xmath86 with one point of each type in each group .",
    "for the proofs of parts ( b ) and ( c ) of theorem [ th : anything ] the following lemma will be useful .",
    "[ lem : doubly_infinite_paths ] for a poisson process with exactly @xmath37 stubs on each point , there exists a factor matching scheme in which @xmath18 has a single component consisting of a doubly infinite path .",
    "this is contained in the proof of ( * ? ? ?",
    "* theorem 1 ) . for expository purposes ,",
    "let us nevertheless say a few words about how it is proved .",
    "the main step is to construct , in a translation - invariant way , a one - ended tree whose vertex set is @xmath6 $ ] .",
    "once that is done , the single doubly infinite path is easily constructed from the tree by first ordering the children of each vertex according to distance from the parent , then ordering all vertices according to depth - first search , and finally linking each pair vertices that fall next to each other in this ordering by an edge .    [ rem : weaker_doubly_infinite_paths ] if we relax the requirement in lemma [ lem : doubly_infinite_paths ] to ask for a union of doubly infinite paths rather than a single infinite path ( this will be enough for our proof of theorem [ th : anything ] ( b ) but not for the proof of theorem [ th : anything ] ( c ) ) , then the tree construction of @xcite can be replaced by the following construction : define the cone latexmath:[$v=\\{y\\in{{\\mathbb r}}^d : y_1\\geq    @xmath8 $ ] , put a directed edge to the ( almost surely unique ) point in @xmath101 $ ] whose first coordinate is minimal among all points in @xmath101 $ ] .",
    "the resulting graph is clearly a forest and it is shown in @xcite that the trees are indeed one - ended .",
    "directed infinite paths can then be created from each tree as in the proof of lemma [ lem : doubly_infinite_paths ] .",
    "it is sufficient to provide a factor matching scheme where all vertices of degree at least 2 belong to a single infinite component .    to match the stubs in the poisson configuration in such a way that an infinite component is obtained we proceed as follows .",
    "first consider all vertices of degree at least 2 and create in a translation - invariant and deterministic way a directed infinite path that contains all of them ; this is possible by lemma [ lem : doubly_infinite_paths ] ( or , if we opt for a union of infinite paths which is sufficient for the existence but not for the uniqueness of the infinite component , by the more elementary result in remark [ rem : weaker_doubly_infinite_paths ] ) .",
    "when this is done we are left with a reduced stub configuration .",
    "this is then matched up using the stable multi - matching described prior to proposition [ prop : sm_works ] with the obvious modification that we do not allow connections between points that already have an edge between them arising from the connections along the paths .",
    "proposition [ prop : sm_works ] along with remark [ rem : sm_works_with_some_edges_already_present ] guarantee that this indeed leads to a multi - matching .    for the proof of theorem [ th : anything ] ( c ) , one more lemma  a generalization of proposition [ prop : usm ] ( b )",
    " will be convenient .",
    "[ connect_simple_with_multi ] let @xmath102 be a probability measure on the strictly positive integers and let @xmath103 be a random variable with law @xmath102 .",
    "let @xmath57 and @xmath59 be translation - invariant point processes on @xmath0 , jointly ergodic under translations , and with finite intensities @xmath104 and @xmath105 satisfying @xmath106\\lambda_\\mathcal{s } \\ , .\\ ] ] assign degree @xmath29 to each point in @xmath57 and assign i.i.d .",
    "degrees with law @xmath102 to the points in @xmath59 .",
    "if @xmath58\\cup [ \\mathcal{s}]$ ] is almost surely non - equidistant and has no descending chains , then there exists a translation - invariant partial matching scheme , a deterministic function of @xmath107 , that matches each point in @xmath58 $ ] to a stub in @xmath60 $ ] .",
    "if ( [ eq : int_ineq ] ) holds with equality , then the procedure also exhausts all stubs in @xmath60 $ ] .",
    "define @xmath108 ( with @xmath109 if ( [ eq : int_ineq ] ) holds with equality ) and , if @xmath110 , let @xmath111 and if @xmath112 let @xmath113 . if @xmath114 , just let @xmath115 .",
    "as in the proof of theorem [ th : anything ] ( a ) , we let @xmath89 be the distance from the origin to the closest other point in the palm version of @xmath57 and , analogously to ( [ eq : type_assignment ] ) , we define real numbers @xmath116 such that @xmath117 for @xmath118 $ ] , say that @xmath11 is of type @xmath119 if @xmath120 is the first number in the ordered sequence @xmath121 that exceeds the distance from @xmath11 to the nearest other point in @xmath58 $ ] , and of type @xmath122 if the distance from @xmath11 to the nearest other point in @xmath58 $ ] is larger than @xmath123 .",
    "this divides the process @xmath57 into processes @xmath124 ( @xmath125 ) with intensities @xmath126 .",
    "write @xmath127 for the process of vertices in @xmath59 with degree at least @xmath94 . by the choice of @xmath128 , for @xmath129 , the intensity of @xmath124 coincides with the intensity of @xmath127 , and",
    "condition implies that the intensity of @xmath130 is at most by the intensity of @xmath131 ( indeed , the intensity of @xmath130 is @xmath132 which does not exceed @xmath133 by the choice of @xmath122 ) .",
    "now , for each @xmath125 , match the points of @xmath124 to the points of @xmath127 using proposition [ prop : usm ] ( b ) .",
    "for @xmath129 we get a perfect matching of the points ( since the intensities of the processes coincide ) and , for @xmath134 , it is not difficult to see that all points in @xmath130 get matched up ( while some points in @xmath131 may not be used ) .    to show that conditions ( i ) , ( ii ) and ( iii ) are equivalent",
    ", it suffices to show that ( iii)@xmath36(ii)@xmath36(i)@xmath36(iii ) . since ( iii)@xmath36(ii ) is trivial , we only need to show that ( i)@xmath36(iii ) and that ( ii)@xmath36(i ) .    to prove ( i)@xmath36(iii ) , first note that the matching scheme described in the proof of theorem [ th : anything ] ( b ) gives a connected graph as soon as all vertices have degree at least 2 ( provided we use the construction in lemma [ lem : doubly_infinite_paths ] rather than the one in remark [ rem : weaker_doubly_infinite_paths ] ) . to handle the case where @xmath47 , let @xmath103 be a random variable distributed as @xmath135 conditional on that @xmath136 and note that @xmath35\\geq 2 $ ] implies that @xmath137{\\mathbb p}(d\\geq 3)\\ ] ] with equality if and only if @xmath35=2 $ ] .",
    "consider first the case @xmath35=2 $ ] .",
    "for a matching scheme here , first employ the scheme in the proof of theorem [ th : anything ] ( b ) in order to connect up all points in @xmath58 $ ] that are assigned degree @xmath37 or more into an infinite path .",
    "this leaves the points that are assigned degree @xmath29 , plus the points initially assigned degree @xmath138 or more , each having two of their stubs already matched .",
    "since ( [ eq : e=2_rewrite ] ) holds with equality , lemma [ connect_simple_with_multi ] is exactly tailored to produce a factor matching of the degree @xmath29 points to the unmatched stubs of the degree @xmath139 points .",
    "this gives a connected graph , so the case @xmath35=2 $ ] is settled .",
    "for the case @xmath35>2 $ ] we proceed as with @xmath35=2 $ ] by first constructing the infinite path and then connecting up degree @xmath29 points to it by the scheme offered in the proof of lemma [ connect_simple_with_multi ] .",
    "this time , however , the latter scheme , although resulting in a connected graph , fails to use up all the stubs of the degree @xmath140 points .",
    "these remaining stubs can be hooked up to each other by the stable multi matching scheme described prior to proposition [ prop : sm_works ] with the restriction that we do not allow connections between points that already have an edge between them on the infinite path . using remark [ rem : sm_works_with_some_edges_already_present ]",
    ", this completes the proof of the ( i)@xmath36(iii ) implication .    to prove ( ii)@xmath36(i ) we employ a mass - transport argument .",
    "assume ( ii ) , and let @xmath12 be a matching scheme that produces a connected graph .",
    "consider the mass transport where each point @xmath8 $ ] sends a unit mass to @xmath141 $ ] if and only if @xmath11 and @xmath41 are connected by an edge , and removing that edge would leave @xmath11 in a finite component .",
    "note that the mass @xmath142 sent from @xmath11 can not exceed 1 .",
    "we claim that , for any vertex @xmath11 , @xmath143 this follows by considering separately the two cases @xmath144 and @xmath145 . when @xmath146 we get @xmath147 and ( [ eq : mass_bound ] ) holds with equality .",
    "when @xmath148 we have that @xmath11 is connected to infinity via at least two edges adjacent to it , which implies that @xmath149 , and again ( [ eq : mass_bound ] ) holds .    by the mass transport principle ( lemma [ le : mt ] ) ,",
    "the expectation of the right - hand side of ( [ eq : mass_bound ] ) summed over all poisson points @xmath11 in the unit cube @xmath79 is @xmath150 .",
    "but the expectation of @xmath151 summed over all poisson points in the unit cube @xmath79 is simply @xmath35 - 2 $ ] ( because the poisson process has intensity @xmath29 ) , so ( [ eq : mass_bound ] ) implies @xmath35\\geq 2 $ ] , as desired .",
    "in this section we prove theorem [ th : sm ] ( a ) , that is , we show that if each poisson point has sufficiently many stubs attached to it , then the edge configuration resulting from the stable multi - matching percolates .",
    "the proof uses the result from @xcite concerning domination of * @xmath152-dependent * random fields by product measures , where a random field @xmath153 is said to be @xmath152-dependent if for any two sets @xmath154 at @xmath155-distance at least @xmath152 from each other we have that @xmath156 is independent of @xmath157 .",
    "the version we need is as follows .",
    "[ th : lss ] for each @xmath158 and @xmath159 there exists a @xmath160 such that the following holds . for any @xmath152-dependent random field",
    "@xmath161 satisfying @xmath162 with @xmath163 , the 1 s in @xmath164 percolate almost surely .",
    "the idea of the proof is a renormalization procedure .",
    "we partition @xmath0 into cubes and declare a cube to be * good * if it contains at least one but not too many poisson points and if the same holds for all cubes close to it , where `` too many '' and `` close '' will be specified below .",
    "we then use theorem [ th : lss ] to deduce that the good cubes can be made to percolate , and we observe that , if each poisson point has sufficiently many stubs attached to it , then each point in a good cube must be connected to each point in its adjacent cubes in the stable multi - matching .",
    "this forces the existence of an infinite component in the stable multi - matching .    to make this reasoning more precise , for @xmath165 ,",
    "let @xmath166 and partition @xmath0 into cubes @xmath167 centered at the points of @xmath168 and with side @xmath169 .",
    "two cubes @xmath170 and @xmath171 are called adjacent if @xmath172 , and we write @xmath173 for the smallest integer such that the maximal possible euclidean distance between points in adjacent cubes does not exceed @xmath174 . for each cube",
    "@xmath170 a super - cube @xmath175 is defined , consisting of the cube itself along with all cubes @xmath171 with @xmath41 at @xmath155-distance at most @xmath176 from @xmath177 .",
    "a super - cube hence contains @xmath178 cubes .    now , call a cube @xmath170 * acceptable * if it contains at least one and at most @xmath179 poisson points , where @xmath87 will be specified below , and it is * good * if all cubes in @xmath175 are acceptable .",
    "we have that @xmath180-{\\mathbb p}[{\\mathcal{p}}(c_{az})>n].\\ ] ] the first probability on the right side can be made arbitrarily small by taking @xmath169 large , and , for a fixed @xmath169 , the second probability can be made arbitrarily small by taking @xmath87 large .",
    "hence , by choosing first @xmath169 large and then @xmath87 very large , we can make the probability that a cube is good come arbitrarily close to 1 .",
    "in particular , by theorem [ th : lss ] , we can make it large enough to guarantee that the good cubes percolate .",
    "fix such values of @xmath169 and @xmath87 , let @xmath181 and assume that @xmath44 .",
    "we will show that then each poisson point in a good cube is connected to all poisson points in the adjacent cubes , which completes the proof .",
    "say that a point @xmath8 $ ] with @xmath9 stubs * desires * a point @xmath141 $ ] if @xmath41 is one of the @xmath9 nearest points to @xmath11 in @xmath6 $ ] .",
    "then a poisson point @xmath11 in a good cube @xmath170 desires all points in the adjacent cubes : for any point @xmath41 in an adjacent cube , the distance between @xmath11 and @xmath41 is at most @xmath174 , and the euclidean ball @xmath182 with radius @xmath174 centered at @xmath11 is contained in the supercube @xmath175 , which contains at most @xmath183 poisson points ( indeed , all @xmath184 cubes in @xmath175 are acceptable , which means that each one of them contains at most @xmath87 points ) . since @xmath185 , it follows that @xmath41 desires all points in @xmath182 , so in particular @xmath11 desires @xmath41 .",
    "furthermore , each poisson point @xmath41 in a cube that is adjacent to a good cube @xmath170 desires each point in the good cube : since the distance between @xmath11 and @xmath41 is at most @xmath174 , we have that @xmath186 . moreover , the ball @xmath187 is contained in the supercube @xmath175 , which contains at most @xmath183 points",
    "hence @xmath188 contains at most @xmath183 points and , since @xmath189 , it follows that @xmath41 desires all points in @xmath188 .",
    "we have shown that each point in a good cube desires each point in the adjacent cubes and vice versa .",
    "all that remains is to note that two points that desire each other will indeed be matched .",
    "this follows from the definition of the stable multi - matching .",
    "hence each point in a good cube is connected to each point in the adjacent cubes and since the good cubes percolate this proves part ( a ) of theorem [ th : sm ] .",
    "an easy modification of the above proof reveals that the following slightly stronger variant of theorem [ th : sm ] holds . for any @xmath190",
    ", there exists @xmath191 such that if @xmath192 , then @xmath45 .",
    "in this section we prove theorem [ th : sm ] ( b ) , that is , we show that if all points have degree at most 2 and there is a positive probability for degree 1 , then almost surely the stable multi - matching gives configurations with only finite components . the proof is based on the following lemma .",
    "[ le : no_si ] in any translation - invariant matching scheme , a.s .",
    "@xmath18 has no component consisting of a singly infinite path .",
    "assume that components consisting of a singly infinite paths occur with positive probability , and consider the mass transport where each poisson point that sits on a singly infinite path sends mass 1 to the endpoint of the path . with positive probability the unit cube",
    "@xmath79 contains such an endpoint , and hence the expected mass that is received by @xmath79 is infinite .",
    "but the expected mass that is sent out from @xmath79 is at most @xmath29 , because the expected number of poisson points in @xmath79 is @xmath29 .",
    "this contradicts the mass transport principle ( lemma [ le : mt ] ) .",
    "let the degree distribution be such that @xmath46 and @xmath47 .",
    "the only infinite components that can occur when @xmath193 are infinite paths of degree 2 vertices that are connected to each other and , by lemma [ le : no_si ] , any such path has to be bi - infinite . assume for contradiction that such a bi - infinite path occurs with positive probability .",
    "we will describe a coupled configuration of vertex degrees , where , with positive probability , the edge configuration remains unchanged except that a doubly infinite path is cut apart and turned into two singly infinite paths .",
    "this conflicts with lemma [ le : no_si ] .    given the poisson process @xmath2 with associated degrees @xmath194}$ ] , we now introduce a modified degree process @xmath195}$ ] .",
    "conditional on @xmath2 and @xmath194}$ ] , let @xmath195}$ ] be independent random variables chosen as follows . with probability @xmath196",
    ", we set @xmath197 , where @xmath198 is the euclidean distance from @xmath11 to the origin . with the remaining probability @xmath199",
    ", the degree @xmath200 is taken to be an independent random variable with law @xmath1 .",
    "the poisson points that receive a newly generated degree in @xmath200 are referred to as * re - randomized*. note , crucially , that @xmath195}$ ] has the same distribution as @xmath194}$ ] .",
    "note also that @xmath201}\\mathbf{1}[x\\text { re - randomized}]= \\int_{{{\\mathbb r}}^d}e^{-|x|}dx<\\infty \\ , .\\ ] ] hence , by the borel - cantelli lemma , the number of re - randomized points is finite almost surely .",
    "now , take a configuration of poisson points and associated degrees for which the graph @xmath18 resulting from the stable multi - matching contains some bi - infinite path .",
    "let @xmath202 be the graph resulting from the modified degrees @xmath195}$ ] .",
    "along each such path @xmath203 , there must be an edge that is locally maximal , that is , an edge @xmath204 with @xmath205 . to see this , note that if such an edge did not exist , the vertices of the path would either constitute a descending chain , or contain a single locally minimal edge ( defined in obvious analogy with locally maximal ) .",
    "descending chains do not occur in poisson processes ( as noted in section [ sect : background_stable ] ) while chains with a single minimal edge are ruled out by a mass transport argument similar to the one on the proof of lemma [ le : no_si ] ( let each vertex on such a path send unit mass to the midpoint of the unique invariant edge ) .",
    "let @xmath206 be a locally maximal edge  say the one with a vertex closest to the origin . write @xmath77 for the event that @xmath207 and @xmath208 are the only two vertices that are re - randomized and that @xmath209 , that is , the degrees of @xmath207 and @xmath208 are changed to 1 s while the rest of the degrees remain unchanged .",
    "we claim that , on @xmath77 , the modified graph @xmath202 consists of the same edges as in the original @xmath18 except that the edge between @xmath206 is absent . indeed , since @xmath210 , the edge @xmath206 is created at a later stage in the matching procedure than the edges @xmath211 and @xmath212 . on the event @xmath77 , no stubs have been added or removed in the modified configuration except that one stub is taken away from each of @xmath207 and @xmath208 .",
    "hence , up until the stage when the edge @xmath206 was created in the original process , precisely the same edges are created in the modified configuration . at this stage",
    ", the vertices @xmath207 and @xmath208 do not have a stub on them , and so the edge @xmath206 is not created in the modified configuration . after this stage ,",
    "the situation is as in the original configuration , and so the same edges are again created .",
    "the above shows that , on @xmath77 , the modified stable multi - matching for the modified configuration contains two singly infinite paths @xmath213 and @xmath214 .",
    "all that remains it to note that , since the number of re - randomized vertices is finite almost surely , the event @xmath77 has positive probability .",
    "we have hence derived a contradiction with lemma [ le : no_si ] .",
    "[ [ closing - the - gap - in - theorem - thsm . ] ] closing the gap in theorem [ th : sm ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    theorem [ th : sm ] provides conditions for when the stable multi - matching contains an infinite component and for when it consists only of finite components .",
    "these conditions however are quite far apart and it would be desirable to obtain a more precise understanding for when the stable multi - matching percolates .",
    "consider for instance the case with exactly two stubs attached to each point , that is , @xmath215 .",
    "do infinite components occur in this case ?",
    "simulations appear to suggest a positive answer @xmath216 , but are less conclusive in @xmath217 .",
    "theorem [ th : sm ] ( b ) states that percolation does not occur when there are only degree 1 and degree 2 vertices . roughly speaking ,",
    "this is because the degree 1 vertices serve as dead ends in the configuration .",
    "does this phenomenon persist when a small proportion of degree 3 vertices is added ? does a sufficiently large proportion of degree 1 vertices always guarantee non - percolation ?    finally , if degree distribution @xmath1 results in an infinite cluster , and we replace @xmath1 by a distribution @xmath218 that stochastically dominates @xmath1 , do we still get an infinite cluster ?",
    "much of this work was carried out at the 2009 programme in discrete probability at the institut mittag - leffler .",
    "we thank the institute for the generous support and hospitality .",
    "the research of the first author was supported by the swedish research council .",
    "the research of the second author was supported by the gran gustafsson foundation for research in the natural sciences and medicine ."
  ],
  "abstract_text": [
    "<S> let each point of a homogeneous poisson process in @xmath0 independently be equipped with a random number of stubs ( half - edges ) according to a given probability distribution @xmath1 on the positive integers . </S>",
    "<S> we consider translation - invariant schemes for perfectly matching the stubs to obtain a simple graph with degree distribution @xmath1 . </S>",
    "<S> leaving aside degenerate cases , we prove that for any @xmath1 there exist schemes that give only finite components as well as schemes that give infinite components . for a particular matching scheme that is a natural extension of gale - shapley stable marriage , </S>",
    "<S> we give sufficient conditions on @xmath1 for the absence and presence of infinite components . </S>"
  ]
}
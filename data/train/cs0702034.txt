{
  "article_text": [
    "to understand and analyze well the complex structure as well as the evolutionary process of genes , researchers have long been searching for syntactical models .",
    "one such model was a grammatical model provided by formal language theory @xcite .",
    "yet , the grammar types in the chomsky hierarchy was inadequate in describing the biological systems @xcite .    in his pioneering work , tom head has proposed an operation called ` splicing ' for describing the recombinant behavior of double - stranded dna molecules @xcite which established a new relationship between formal language theory and the study of informational macromolecules . splicing operation is a formal model of the recombinant behavior of dna molecules under the influence of restriction enzymes and ligases .",
    "informally , splicing two strings means to cut them at points specified by the given substrings ( corresponding to patterns recognized by restriction enzymes ) and to concatenate the obtained fragments crosswise ( this corresponds to the ligation reaction ) .",
    "since then , the theory of splicing has become an interesting area of formal language theory , where results of splicing systems on string languages ( splicing systems were later renamed as h - systems to indicate the originator ) gave new insights in some ( closure ) properties of families of string languages @xcite .",
    "the mathematical study of the splicing operation on the strings has been investigated exhaustively , which lead to a language generating device viz .",
    ", extended h - systems ( eh - systems ) using the ` splicing operation ' as the basic ingredient @xcite .",
    "several control mechanisms were suggested in increasing the computing power of eh systems with finite components , equivalent to the power of turing machines .",
    "thus , splicing operation on strings has lead to universal computing device ( programmable dna computers based on splicing ) .",
    "a splicing operation contains splicing rules of the form @xmath0 , where @xmath1 are strings over some alphabet @xmath2 .",
    "we apply the splicing rule to two strings @xmath3 , @xmath4 , ( @xmath5 are strings over @xmath6 ) . as a result",
    ", the new strings @xmath7 and @xmath8 are obtained .",
    "we use the modified definition of splicing as it appears in @xcite    dna sequences are three dimensional objects in a three - dimensional space .",
    "some problems arise when they are described by one - dimensional strings .",
    "so , the other models of splicing were explored . in @xcite ,",
    "array splicing systems were studied . in @xcite,@xcite graph splicing systems were discussed .",
    "but these systems can not be applied to the graphs that can not be interpreted as linear or circular graphs .",
    "hence , we take a different approach to splicing two graphs and introduce a splicing system for graphs which can be applied to all graphs . splicing two graphs",
    "can be thought of as a new operation among the graphs , that generates new graphs from the given two graphs .",
    "+ hence , in this article , the following section discusses the cutting rules , which is the basic component for the proposed graph splicing system .",
    "section 3 deals with the graph splicing system with illustrations .",
    "the section 4 studies some graph theoretical properties of this system .",
    "the last section concludes with the directions for the future research in this graph splicing system .",
    "we follow the terminologies and the basic notions of graph theory as in @xcite and the terminologies of formal language theory as in @xcite .",
    "+ for any finite alphabet @xmath9 , a labeled graph @xmath10 over @xmath2 is a triple @xmath11 where @xmath2 is the finite set of vertices(or nodes ) , e is finite set of edges of the form @xmath12 , @xmath13 , where each edge is an unordered pair of vertices and @xmath14 is a function from @xmath2 to @xmath9 .",
    "an edge @xmath12 means that one end - point of the edge is the vertex @xmath15 and the other end - point is the vertex @xmath16 .",
    "edge set of @xmath10 is written as @xmath17 and the vertex set of g by @xmath18 .",
    "the number of vertices of a graph is called the order of the graph and the number of edges of the graph is called the size of the graph .",
    "we consider only simple graphs where repeated edges ( multiple edges ) with same end - points and edges with both end - points same ( loops ) are not allowed .",
    "the graph @xmath19 refers to an unlabeled graph .",
    "we denote an unlabeled graph just as @xmath20 , instead of @xmath21 .",
    "whenever a graph is considered , we mean only a simple unlabeled graph .",
    "we mention accordingly , when we consider the graphs other than the above one .",
    "a graph @xmath10 is said to be in pseudo - linear form ( plf ) if the ordered vertices are positioned as per the order , as if they lie along a line and the edges of the graph drawn accordingly .",
    "ordering of the vertices can be done in any way . for a particular ordering ,",
    "the adjacency matrix of @xmath10 and the adjacency matrix of @xmath10 in plf , remain the same . in a graph",
    ", the vertices could be positioned at any place and the edges of the graph drawn accordingly . for the graph in plf ,",
    "vertices are first ordered and positioned as if they lie on a line .",
    "this line may be a horizontal line or a vertical line or any inclined line . in case ,",
    "the line is horizontal , we can position the ordered vertices either from left to right or from right to left .",
    "so , with out loosing any generality , we position the vertices from left to right as if the vertices lie on a horizontal line .",
    "once a graph is in plf , we name the vertices with a positive integer that represent their order in the ordering .",
    "if a vertex is second in an ordering , we name that vertex as @xmath22 .",
    "so , the vertex set of @xmath10 in plf is @xmath23 . given an ordering of the vertices , any graph can be redrawn in the pl form .",
    "for example , if the vertices of the graph +   + are ordered as @xmath24 , the corresponding graph in plf is +   + a graph in plf will look like a path graph with edges going above or below the linear path .",
    "the graph @xmath25 with vertices written horizontally , is a graph in plf . from now",
    "onwards , unless otherwise mentioned , we mean a graph as the one in plf for some ordering of the elements of @xmath2 .",
    "a cutting rule @xmath26 for a graph @xmath27 in plf is a pair @xmath28$],$ ] , we use the square braces and for the edges ( i , j ) , we use the parenthesis ] where @xmath29 and @xmath30 are positive integers @xmath31 .    by the condition @xmath32 , we mean that the the vertices @xmath29 and @xmath30 may be successive vertices ( ordered successively ) or both vertices @xmath29 and @xmath30 are the same . a cutting rule @xmath33 $ ]",
    "is called as a reflexive cutting rule if @xmath34 .    the left - degree",
    ", @xmath35 of a vertex @xmath36 is the number of edges of @xmath10 to the left of the vertex @xmath37 that are incident with @xmath37 . the right - degree",
    ", @xmath38 of a vertex @xmath39 is the number of edges of @xmath10 to the right of the vertex @xmath37 .",
    "the degree of @xmath37 , @xmath40 , the number of edges that are incident with @xmath37 , is the sum of the left - degree and the right - degree of @xmath37 .",
    "let @xmath41 be the set of all vertices that lie to the left of the vertex @xmath37 ( @xmath42 is not in @xmath43 ) .",
    "similarly , @xmath44 is the set of all vertices that lie to the right of the vertex @xmath37 .",
    "* scheme of cutting * + a graph is cut into two parts by cutting some of its edges.the cutting rule @xmath28 $ ] cuts a graph @xmath10 between the vertex @xmath29 and the vertex @xmath30 ( if for some reasons , the vertices are named with symbols other than the positive integers , the cutting rule cuts between the vertex that comes in the @xmath45 position in the ordering and with the vertex in the @xmath46 position ) .",
    "the work of the cutting rule @xmath28 $ ] over @xmath10 is to cut the edge @xmath47 and the edges that go above as well as below the edge @xmath47 .",
    "i.e. , the cutting rule @xmath28 $ ] cuts the following edges ( if they exist in the graph @xmath10 ) .    1 .",
    "the edge @xmath47 2 .   the edges @xmath48 3 .   the edges @xmath49 4 .",
    "the edges @xmath50    the reflexive cutting rule @xmath51 cuts the vertex @xmath29 and all the edges that go above as well as below the vertex @xmath29 .",
    "i.e. , the reflexive cutting rule @xmath29 cuts the following .    1 .",
    "the vertex @xmath29 2 .",
    "the edges @xmath50    when an edge @xmath47 is cut into two parts , we call the the two parts of the edge as hanging - edges or free - edges .",
    "similarly , when a vertex is cut , we call that vertex as a hanging - vertex or a free - vertex .",
    "if an edge @xmath47 is cut , we write the left part of the edge as @xmath52 $ ] ( indicating that the free - end is the right end ) and the right part of the edge as @xmath53 ( indicating that the free - end is the left end ) .",
    "the edges @xmath52 $ ] and @xmath53 are drawn as illustrated with a @xmath54 at their free ends .",
    "if a vertex @xmath37 is cut , the left part of the vertex is written as @xmath55 $ ] and the right part is written as @xmath56 .",
    "@xmath57 $ ] indicates just that the vertex @xmath37 is cut .",
    "+        the set @xmath58 represents the set of all edges of @xmath10 that got cut by the cutting rule @xmath26 and the @xmath59 ( the cardinality of the set ) is the power of the cutting rule @xmath60 with respect to the graph @xmath10 .",
    "power of a cutting rule with respect to @xmath10 indicates the number of edges that got cut by that cutting rule in @xmath10 .",
    "the set @xmath61 represents the set of all vertices that got cut by the vertex @xmath37 . only for the reflexive cutting rules ,",
    "the set @xmath61 will exist and for all the other cutting rules , this set is @xmath62 .",
    "since any reflexive cutting rule can cut only one vertex , the set @xmath61 is always singleton . for a reflexive cutting rule ,",
    "the set @xmath58 can be @xmath62 ( means that no edge is going above or below the vertex @xmath29 in the graph @xmath10 ) .",
    "+ when a graph @xmath10 is cut into two by a cutting rule @xmath26 , the left part of the graph is called as @xmath63 and the right part is called as @xmath64 . obviously , @xmath65 ) = ecut_{g}([i , i ] \\cup ecut_{g}([j , j ] \\cup \\{(i , j)\\}.$ ]    we illustrate the cutting of the graph @xmath66 , a complete graph with five vertices using the cutting rule @xmath67 $ ] .",
    "+   +   + the @xmath68 and @xmath69 are also graphs with the vertex set @xmath70 and with the edge set @xmath71,(1,4],(1,5],(2,3],(2,4],(2,5]\\}.\\ ] ] similarly , @xmath72 and @xmath73 @xmath74 .",
    "@xmath75 ) = \\{(1,3),(1,4),(1,5),(2,3),$ ] + @xmath76 . @xmath77)=\\phi$ ] .",
    "a splicing rule @xmath78 , is a pair of cutting rules .    given two graphs @xmath10,@xmath79 and a splicing rule @xmath80 , the first graph @xmath10 is cut as specified by @xmath81 and the second graph @xmath79 is cut as specified by @xmath82 . as a result we get the four cut - graphs viz . ,",
    "@xmath63,@xmath64,@xmath83 and @xmath84 . +   + * mode of recombination * +    @xmath63 ( or @xmath83 ) recombines with the @xmath84 ( or @xmath64 ) if and only if @xmath85 = @xmath86 and @xmath87 = @xmath88 .",
    "in other words , for a recombination , the number of hanging - edges in @xmath63 ( or @xmath83 ) should be the same as that of the number of hanging - edges in @xmath84(or @xmath64 ) and the the number of hanging - vertices in @xmath63 ( or @xmath83 ) should be the same as that of the number of hanging - vertices in @xmath84(or @xmath64 ) .",
    "the above definition tells that for a splicing process to end up in a recombination , the power of both the cutting rules present in the splicing rule @xmath89 should be the same . we assign a positive integer , called the power of the splicing rule , to every splicing rule @xmath90 if and only if the powers of @xmath81 and @xmath82 are the same and the common value is the power of the splicing rule @xmath89 .",
    "further , if one cutting rule in @xmath89 is reflexive , the other should also be reflexive .",
    "every hanging - edge of the @xmath63 ( or @xmath83 ) recombines ( or joins ) with only one hanging - edge of the @xmath84 ( or @xmath64 ) , and every hanging - edge of @xmath84 ( or @xmath64 ) has the recombination with only one hanging - edge of @xmath63 ( or @xmath83 ) .",
    "the hanging - vertex ( if available ) of the @xmath63 ( or @xmath83 ) recombines with the hanging - vertex of @xmath84(or @xmath64 ) .",
    "thus , @xmath63 recombines with @xmath84 to generate new graphs . after the recombination , we order the vertices of the new graph ( this will be in pl form ) in the same sequence as it appears and name them accordingly .",
    "new graphs are generated because of the recombination of the edges that are cut .",
    "if there are more than one hanging - edges in both @xmath63 and @xmath84 , the hanging - edges of the @xmath63 can recombine with the hanging - edges of @xmath84 in more than one way .",
    "if there are @xmath16 hanging - edges in both @xmath63 and @xmath84 , the hanging - edges can recombine in @xmath91 ways , generating @xmath91 new graphs .",
    "in other words , the number of such recombinations is just the number of bijective mappings from the set @xmath92 to the set @xmath93 . when the @xmath83 recombines with the @xmath64 , the same number of @xmath91 will be generated .",
    "thus , the splicing of two graphs @xmath10 and @xmath79 using a splicing rule of order @xmath16 , generates @xmath94 new graphs .",
    "+ thus , splicing process comprises of cutting as well as the recombination .",
    "if the splicing of @xmath10 and @xmath79 using @xmath89 generates a new graph @xmath95 by the recombination of the @xmath63 with the @xmath84 , we denote that by @xmath96 ( indicating that @xmath95 is the first splicing product ) .",
    "similarly , @xmath97 indicates that @xmath95 is generated by the recombination of the @xmath83 with the @xmath64 ( indicating that this f is the second product of splicing ) .",
    "just @xmath98 indicates that @xmath95 may be either the first splicing product or the second splicing product .",
    "the splicing scheme(process ) is denoted by @xmath99 . for a splicing process ,",
    "one requires two graphs and a splicing rule .",
    "the set of all graphs generated by splicing @xmath10 and @xmath79 using the splicing rule @xmath89 is denoted by @xmath100 .",
    "similarly , @xmath101 , @xmath102 are meant accordingly .",
    "the graph splicing system @xmath103 , where    1 .   a finite set of simple , unlabeled graphs , called the set of axioms .",
    "a finite set of splicing rules .",
    "the underlying splicing scheme is @xmath104 , @xmath105 .",
    "+ the set of all graphs generated by splicing all pairs of the graphs of @xmath106 with all splicing rules of @xmath107 ( the graph language of the splicing system @xmath108 ) , @xmath109    in the dna recombination , when some restriction enzymes and a ligase are present in a test tube , they do not stop after one cut and paste operation , but they act iteratively .",
    "the products of a splicing again take part in the splicing process . for an iterative splicing among the graphs",
    ", the axiom set should contain many copies of the same element .",
    "ordinary sets are composed of pairwise different elements , i.e. , no two elements are the same .",
    "if we relax this condition , i.e. , if we allow multiple but finite occurrences of any element , we get a generalization of the notion of a set which is called a _ multiset_.",
    "we assume that our axiom set is a multiset .",
    "that means infinitely many copies of the elements of the axiom set will be present in the set , which facilitates the elements to take part in the splicing process iteratively .",
    "even the product of a splicing process will also be available infinite number of times . to make a graph splicing system into an iterated graph splicing system ,",
    "the only requirement is to make the axiom set @xmath106 into a multiset such that infinitely many copies of the elements of @xmath106 are in @xmath106 .",
    "the graph language of an iterative graph splicing system @xmath110 , where @xmath106 is a multiset such that infinitely many copies of the elements of @xmath106 are in @xmath106 , is defined as @xmath111 where    @xmath112    consider the graph splicing system @xmath113,[2,3])\\})$ ] .",
    "@xmath114 and @xmath115 are the cycle graphs of order @xmath116 and @xmath117 respectively .",
    "@xmath118 where @xmath89 is the splicing rule @xmath119,[2,3])$ ] .",
    "the power of the splicing rule is 2 . in each splicing process",
    ", @xmath120 new graphs will be generated .",
    "so , @xmath121 will have a total of 16 new graphs .",
    "of these , some of the graphs are isomorphic to each other .",
    "it is found that the non - isomorphic graphs in @xmath121 are @xmath122 and a graph @xmath10 , where @xmath123 .",
    "the above graph @xmath10 is not a simple graph ( it has a multiple edge between the vertices @xmath124 and @xmath22 ) .",
    "this makes us to conclude that the splicing of two simple graphs need not be simple .",
    "given a graph @xmath10 , the power of the cutting rule @xmath28 $ ] with respect to the graph @xmath10 is @xmath125    proof : let @xmath10 be the given graph .",
    "we count the total the number of edges in @xmath10 that got cut by the cutting rule , which is the power of the cutting rule .",
    "we classify the proof into two cases based on the existence of the edge @xmath47 in @xmath10 or not . + * case(i ) : @xmath126*. + we know that the cutting rule [ i , j ] cuts the following edges .    1 .",
    "the edge @xmath47 2 .   the edges @xmath48 3 .",
    "the edges @xmath49 4 .",
    "the edges @xmath50    the expression @xmath127 brings out the number of edges which fall under ( 1),(2 ) and ( 3 ) in the list above . since the edge ( i , j ) is counted in both @xmath128 as well as in @xmath129 , we subtract one from the expression .",
    "+ let @xmath130 be the set of edges whose left end is @xmath131 .",
    "let @xmath132 , be the set of edges of @xmath130 whose right end is in @xmath131 .",
    "i.e. , both the ends of edges in @xmath133 are in @xmath131 .",
    "let @xmath134 be the set of edges of @xmath130 whose right end is @xmath29 i.e. , for the edges in @xmath135 , one end is @xmath131and the other end is @xmath29 .",
    "let @xmath136 , be the set of edges of @xmath130 whose right end is @xmath30 .",
    "i.e. , for the edges in @xmath137 one end is in @xmath131 and the other end is @xmath30 .",
    "let @xmath138 be the set of edges of @xmath130 whose right end is in @xmath139 i.e. , the set of edges whose left end is in @xmath131 and the right end is in @xmath139 obviously , the set of edges which come in ( 4 ) in the above list , will be @xmath138 .",
    "@xmath140 since the edge @xmath47 would be counted in @xmath129 , we subtract one from @xmath129 .",
    "number of edges that come under ( 4 ) is @xmath141    hence , the total number of edges cut by @xmath28 $ ] @xmath142 * case(ii ) : @xmath143 * + we proceed similarly as the case(i ) .",
    "the number of edges that come under ( 1),(2 ) and ( 3 ) is @xmath144 number of edges that come under ( 4 ) is @xmath145 hence , the total number of edges cut by @xmath28 $ ] @xmath146 in both the cases , we get the same expression . hence the proof .    in any graph @xmath10 ,",
    "the sum of the differences between the right degree and the left degree of all the vertices is zero .",
    "* proof : * in the proposition 1 , in computing the power of a cutting rule @xmath28 $ ] , we counted the number of edges whose one end is in @xmath131 and the other end is in @xmath139 by deleting some edges from the set @xmath130 which is the set of edges whose left end is in @xmath131 .",
    "instead , we can have the set @xmath130 to be the set of edges whose right end is in @xmath139 and proceed in an analogous way , as in the proof of proposition 1 .",
    "we get the power of the cutting rule @xmath28 $ ] to be    @xmath147    which is a symmetric one with the expression got in proposition 1 .",
    "+ since the power of a cutting rule is a constant with respect to a @xmath10 , both the expressions should be equal .",
    "+ @xmath148 + @xmath149    the number of edges in a graph @xmath10 is always @xmath150 or @xmath151    * proof * @xmath152 + we have @xmath153 + this implies , @xmath154 .",
    "the above corollary can also be proved in another way using the fact that every edge should contribute one to the left degree of some vertex and one to the right degree of some other vertex .    for want of space",
    ", we state some of the results without proofs .    1 .",
    "@xmath155 , where @xmath156 is the splicing rule in which the cutting rules of s got swapped .",
    "@xmath157 i.e.,the splicing operation is not commutative .",
    "the splicing operation preserves the degrees of the vertices 4 .",
    "regularity is preserved by the splicing .",
    "i.e. , if we splice any two regular graphs , the splicing product is again a regular graph .",
    ".   maximum size of the splicing product of g and h will be the sum of the orders of @xmath10 and @xmath79 minus 1 .",
    "6 .   for a complete graph @xmath158 , @xmath159 , for every vertex @xmath160 . 7 .",
    "the set of all simple graphs is not closed with respect to the splicing operation .",
    "a graph @xmath10 is said to contain a cycle if and only if there exists a sequence @xmath130 of successive cutting rules$ ] and @xmath161 $ ] are termed successive cutting rules ] with power @xmath162 such that @xmath163\\in a}ecut_g           ( [ i , i+1 ] ) \\neq \\phi\\ ] ] .",
    "let @xmath164 and @xmath79 be any two isomorphic graphs .",
    "let @xmath165 = @xmath95 , for any splicing rule @xmath89 .",
    "then f is isomorphic to @xmath10 ( or h ) if and only if the order of the graph @xmath95 and the order of @xmath10 ( or the order of @xmath79 ) are the same .",
    "if for a graph @xmath10 , there exists only one cutting rule whose power is equal to the size of the graph @xmath10 , then @xmath10 is bipartite .",
    "as graphs are better suited for representing complex structures , a model for splicing the graphs , graph splicing system is introduced , which can be applied to all types of graphs .",
    "though the graph splicing is introduced as a new operation among the graphs , studying the computational effectiveness of this graph splicing system is an important area to explore .",
    "one can introduce various parameters like the number of graphs in the axiom , the number of splicing rules , power of the splicing rule etc . , and finding the minimum value of the parameters for which the graph splicing system is still computationally complete .",
    "besides , as a new line of thinking , a nice investigation to bring out the utility of the splicing in graph theory is worth .",
    "9 searls , d.b . , 1992 , the linguistics of dna , _ american scientist _ , * 80 * , 579 - 591 .",
    "colaldo - vides , j . , 1991",
    ", the search for a grammatical theory of gene regulation is formally justified by showing the inadequacy of context - free grammars , _ cabios _ , * 7 * , 321 - 336 .",
    ", 1987 , formal language theory and dna : an analysis of the generative capacity of specific recombinant behaviours , _",
    "bull.math.biology_ , * 49 * , 737 - 759 .",
    "paun , gh . , 1996 , on the splicing operation , _",
    "discrete applied mathematics_,*70 * , 57 - 79 .",
    "paun , gh . ,",
    "rozenberg , g and salomaa , a . , 1996 , computing by splicing , _ theoretical computer science _ , * 168*(2 ) , 321 - 336 .",
    "freund , r .",
    ", 1995 , splicing systems on graphs , _ ieee conf . on intelligence in neural biological systems , herndon - washington",
    "_ , 189 - 195 .",
    "culik ii , k . , and harju , t . , 1991 , splicing semigroups of dominoes and dna , _ discrete appl.math_ , * 31 * , 261 - 277 .",
    "rama , r. and umaraghavan , splicing array systems , _ intern .",
    "j. computer . math . , _ , * 73*,167 - 182 .",
    "rama , r. and krishna , s.n .",
    ", 1999 , contextual array splicing systems , _ proceedings spire99 @xmath166 criwg99 _ , 168 - 175 .",
    "krithivasan , k. , chakravarthy , v.t . and rama , r. , 1997 , array splicing systems , lncs 1218 , 346 - 365 .",
    ", 2001 , dna computing in vitro and in vivo , _ futute generation computer systems_,*17 * , 823 - 834 salomaa , a . , 1997 , computability paradigms based on dna complementarity , _ in v.keranen(ed ) , innovation in mathematics , proc.,second international mathematics symposium , computational mechanics publications , southampton and boston,_15 - 28 .",
    "bondy , j.a and murty , u.s.r . , 1976 ,",
    "graph theory with applications _ north - holland , new york_. hopcroft , j.e and ullman , j.d .",
    ", 1979 , introduction to automata theory , languages and computation , _ addition - wesley , r reading , mass.,_."
  ],
  "abstract_text": [
    "<S> the string splicing was introduced by tom head which stands as an abstract model for the dna recombination under the influence of restriction enzymes . </S>",
    "<S> the complex chemical process of three dimensional molecules in three dimensional space can be modeled using graphs . </S>",
    "<S> the graph splicing systems which were studied so far , can only be applied to a particular type of graphs which could be interpreted as linear or circular graphs . in this paper </S>",
    "<S> , we take a different and a novel approach to splice two graphs and introduce a splicing system for graphs that can be applied to all types of graphs . splicing two graphs </S>",
    "<S> can be thought of as a new operation , among the graphs , that generates many new graphs from the given two graphs . </S>",
    "<S> taking a different line of thinking , some of the graph theoretical results of the splicing are studied . </S>"
  ]
}
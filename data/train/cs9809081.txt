{
  "article_text": [
    "unstructured mesh generation , a key step in the finite element method , can be divided into two stages . in _",
    "point placement _ , the input domain is augmented by _ steiner points _ ( vertices other than those of the original domain ) and a preliminary mesh is formed , typically by delaunay triangulation . in _",
    "mesh improvement _ , local optimizations are performed , involving the movement of steiner points and rearrangement of the mesh topology .    computational geometry has made some inroads into point placement , and methods including delaunay refinement , quadtrees , and circle packing are now known to generate meshes with guaranteed quality ; for surveys of these results , see  @xcite . there has been less theoretical progress , however , in mesh improvement , which has remained largely the domain of practitioners .",
    "mesh improvement typically combines several kinds of local optimization :    * _ refinement and derefinement _ split and merge triangles , changing the number of steiner points . * _ topological changes _ such as _ flipping _ replace sets of elements by other such sets , while preserving the positions of the steiner points . *",
    "_ mesh smoothing _ moves the steiner points of the mesh while preserving its overall topology .    in this paper",
    "we study mesh smoothing algorithms .",
    "our focus is not to determine the best smoothing method , which is more properly a subject for experiment or numerical analysis ; rather we show that a wide variety of methods can be performed efficiently .    a commonly used technique , _ laplacian smoothing _ , sweeps over the mesh , successively moving each point to the centroid of its neighbors .",
    "this technique lacks motivation because it is not directly connected to any specific mesh quality criterion ; moreover , the result may not even remain a valid triangulation .",
    "but in practice laplacian smoothing spaces points evenly and gives two - dimensional meshes of reasonable quality . in three dimensions , however , even spacing does not guarantee good element quality .",
    "a _ sliver _",
    "tetrahedron is one that has evenly spaced vertices , but very sharp angles ; for instance a sliver can be formed by slightly perturbing the vertices of a square .",
    "( see  @xcite for a more detailed classification of tetrahedra in terms of solid and dihedral angles . )",
    "laplacian smoothing sometimes removes slivers , but in large meshes it often leaves clusters of slivers  @xcite .",
    "freitag , jones , and plassmann  @xcite proposed an alternative to laplacian smoothing .",
    "rather than using the centroid , their optimization - based method computes for each steiner point a new placement that maximizes the minimum angle in adjacent triangles .",
    "freitag et al .",
    "use an iterative steepest - descent algorithm to solve this optimal placement problem .",
    "empirically this algorithm finds the optimum location in an average of 2.5 steps , but freitag et al .",
    "do not prove their algorithm correct .",
    "the same optimal placement problem was independently considered by matouek et al .",
    "@xcite as an instance of the paradigm called generalized linear programming .",
    "matouek et al .",
    "show how to solve this problem using an algorithm related to the dual simplex method .",
    "( in retrospect , the steepest - descent algorithm of freitag et al . can be seen as a primal simplex method , but its correctness is not directly justified by the work of matouek et al . ; correctness follows from our analysis below . )",
    "minimum angle , however , is not the only measure of mesh quality .",
    "various papers have provided theoretical justification for other measures including maximum angle  @xcite , maximum edge length  @xcite , minimum height  @xcite , minimum containing circle  @xcite , and  most recently  ratio of area to sum of squared edge lengths  @xcite .",
    "data - dependent criteria  @xcite may be used in adaptive meshing , which uses the finite element method s output to improve the mesh for another run .    in this paper",
    ", we study optimization - based smoothing using quality criteria such as those mentioned above . we show that , as in the case of minimum angle , many of these criteria give rise to _ quasiconvex programs _ and can be solved by linear - time dual simplex methods or steepest - descent primal simplex methods . because of the generality of these methods , they can also solve mixed - criterion optimization problems .",
    "we generalize the theory to quadrilateral meshes and to simplicial meshes in three and higher dimensions . in these more complicated meshing problems ,",
    "effective smoothing methods are a more critical need and asymptotic time complexity is more important . we show that again quasiconvex programming often arises ; for instance it can maximize the minimum solid angle .",
    "we believe optimization - based three - dimensional mesh smoothing should outperform laplacian smoothing in practice . indeed , in very recent",
    "experimental work freitag and ollivier - gooch  @xcite have shown that optimization - based smoothing for minimum dihedral angle outperforms laplacian smoothing , both alone and in conjunction with flipping .",
    "finally , we show that although several other optimal point placement problems do not form quasiconvex programs , we can solve them efficiently by other means",
    ". this direction may also be relevant in practice ; freitag and ollivier - gooch recommend smoothing for the sine of the dihedral , a non - quasiconvex quality measure .",
    "many problems in computational geometry , such as separating points by a hyperplane , can be modeled directly as low dimensional linear programs .",
    "many other problems , such as the circumcircle of a point set , are not linear programs , but the same techniques often apply to them .",
    "to explain this phenomenon , various authors have formulated a theory of _ generalized linear programming _  @xcite .    a _ generalized linear program _",
    "( glp , also known as an _ lp - type problem _ ) consists of a finite set @xmath0 of _ constraints _ and an _ objective function _",
    "@xmath1 mapping subsets of @xmath0 to some totally ordered space and satisfying the following properties :    1 .   for any @xmath2 , @xmath3 .",
    "2 .   for any @xmath4 , @xmath5 , and",
    "@xmath6 , if @xmath7 , then @xmath8 . and @xmath9 , then , for any @xmath5 , @xmath10 iff @xmath11 .",
    "a simple induction shows this to be equivalent to our formulation . ]",
    "the problem is to compute @xmath12 using only evaluations of @xmath1 on small subsets of  @xmath0 .",
    "for instance , in linear programming , @xmath0 is a set of halfspaces and @xmath12 is the point in the intersection of the halfspaces at which some linear function takes its minimum value .",
    "another standard example of a glp is the problem of computing the minimum radius of a disk containing all of a set of @xmath13 points ; in this example , the finite set @xmath0 consists of the points themselves , and @xmath14 is the minimum disk .",
    "it is not hard to see that this system satisfies the properties by which a glp was defined above : removing points can only make the radius shrink or stay the same , and if a disk contains the additional points @xmath5 and @xmath6 separately it contains them both together .",
    "a _ basis _ of a glp is a set @xmath15 such that for any @xmath16 , @xmath17 .",
    "the _ dimension _",
    "@xmath18 of a glp is the maximum cardinality of a basis . with the standard example of the minimum disk problem",
    ", the dimension turns out to be three , because each circle is determined by two or three points .",
    "this set of two or three points is the basis .",
    "a number of efficient glp algorithms are known  @xcite .",
    "their best running time is @xmath19 where @xmath13 is the number of constraints , @xmath20 measures the time to test a proposed solution against a constraint ( typically this is @xmath21 ) , @xmath1 is exponential or subexponential , and @xmath22 is the time to find a basis of a constant - sized subproblem .",
    "indeed , these algorithms are straightforward to implement and have small constant factors , so they should be practical even for the modest values of @xmath13 relevant in our problems .",
    "( the number of constraints should range roughly from 10 to 100 in the planar problems , depending on how complicated a criterion one chooses to optimize and on the degree of the initial mesh , and may possibly reach several hundred in the three - dimensional problems . )",
    "our glps have the following form , which we call `` quasiconvex programming '' .",
    "we wish to minimize some objective function that is the pointwise maximum of a finite set of functions . such a problem will be a low - dimensional glp if the level sets of the functions ( regions in which the function is bounded above by some particular value ) are all convex .",
    "note that this does not necessarily imply that the functions themselves are convex ; in convex analysis , functions with convex level sets are called _",
    "quasiconvex_.    more formally ,",
    "nested convex family _ to be a map @xmath23 from the nonnegative real numbers to compact convex sets in @xmath24 such that if @xmath25 then @xmath26 , and such that for all @xmath27 , @xmath28 .",
    "any nested convex family @xmath29 determines a function @xmath30 on @xmath24 , with level sets that are the boundaries of @xmath23 .",
    "if @xmath31 does not take a constant value on any open set , and if @xmath32 is contained in the interior of @xmath23 for any @xmath33 , we say that @xmath29 is _",
    "continuously shrinking_.    note that , in our proof of lemma  [ l : glp ] below , we will consider the restriction of convex families to affine subspaces ; such restrictions do not necessarily preserve the property of being continuously shrinking .",
    "however , if @xmath29 is continuously shrinking , and its restriction to any affine subspace @xmath4 has @xmath34 on some open set in @xmath4 , then all points of this open set are on the boundary of @xmath23 and @xmath35 must have empty intersection with @xmath4 for any @xmath33 .    [ nonempty - inf ]",
    "let @xmath29 be a nested convex family , and let @xmath36 .",
    "then @xmath37 is nonempty .",
    "choose a point @xmath38 in the set @xmath39 for @xmath40 .",
    "since all of these points are contained in the compact set @xmath41 , they have a limit point @xmath42 .",
    "then for any @xmath43 , @xmath39 contains all but finitely many of the points @xmath38 , so @xmath42 is a limit point of the closed set @xmath39 and must be in @xmath39 .",
    "since @xmath42 is in all of the sets @xmath39 it is in their intersection @xmath37 .    if @xmath44 is a set of nested convex families , we define @xmath45 .",
    "then @xmath46 is itself a nested convex family : each set @xmath46 is the intersection of closed bounded convex sets , hence is itself closed , bounded , and convex .",
    "the further requirement that @xmath47 can easily be seen to follow by commutativity of intersections .",
    "if @xmath44 is a set of nested convex families , and @xmath48 , let @xmath49 where the infimum is taken in the lexicographic ordering , first by @xmath27 and then by the coordinates of  @xmath50 . note that the values of @xmath27 are bounded below by zero ( because @xmath51 is only defined for nonnegative @xmath27 ) , so the infimum of @xmath27 exists .",
    "the rest of this lexicographic infimum is also well defined since lemma  [ nonempty - inf ] shows that , if @xmath52 is the value determined by the infimum , @xmath53 is a nonempty compact set , and @xmath50 is simply the lexicographic minimum of this set .",
    "we use this same lexicographic ordering to compare the values of @xmath1 on different subsets of  @xmath0 .",
    "recall helly s theorem ( e.g. , see @xcite ) : if a family of compact convex sets in @xmath24 ( or a finite family of non - compact convex sets ) has an empty intersection , then some @xmath54-tuple of those sets also has an empty intrsection .",
    "we define a _ quasiconvex program _ to be a finite set @xmath0 of nested convex families , with the objective function @xmath1 described above .",
    "[ l : glp ] any quasiconvex program forms a glp of dimension at most @xmath55 .",
    "if each @xmath56 in the set @xmath0 is either constant or continuously shrinking , the dimension is at most @xmath57 .",
    "property  1 of glps is obvious .",
    "property  2 follows from the observation that , if @xmath58 , then @xmath59 if and only if @xmath60 .",
    "it remains only to show the stated bounds on the dimension .",
    "first consider the general case , where we do not assume continuous shrinking of the families in @xmath0 .",
    "let @xmath61 . for any @xmath62 ,",
    "@xmath63 so by helly s theorem some @xmath54-tuple of sets @xmath51 has empty intersection .",
    "since there are only finitely many @xmath54-tuples , we can choose a tuple @xmath64 that has an empty intersection for all @xmath62 .",
    "then @xmath65 for some @xmath50 , so the presence of @xmath64 forces the glp solution to have the correct value of @xmath27 . by lemma  [ nonempty - inf ] , @xmath66 ,",
    "so @xmath67 is the minimal point in @xmath68 , and is determined by some @xmath18-tuple @xmath69 of the sets @xmath70 .",
    "then @xmath71 , so some basis of @xmath0 is a subset of @xmath72 and has cardinality at most @xmath55 .",
    "finally , suppose each @xmath56 in @xmath0 is constant or continuously shrinking . our strategy will be to again find a tuple @xmath64 that determines @xmath52 , and a tuple @xmath69 that determines @xmath67 , but we will use continuity to make the sizes of these two tuples add to at most @xmath57 .",
    "@xmath68 has empty interior : otherwise , we could find an open region @xmath73 within @xmath68 , and a family @xmath56 such that @xmath74 for any @xmath62 , violating the assumption that @xmath56 is constant or continuously shrinking .",
    "if the interior of some @xmath70 contains a point of the affine hull of @xmath68 , we say that @xmath56 is `` slack '' ; otherwise we say that @xmath56 is `` tight '' .",
    "the boundary of a slack @xmath56 intersects @xmath68 in a subset of measure zero ( relative to the affine hull of @xmath68 ) , so we can find a value @xmath50 in the relative interior of @xmath68 and not on the boundary of any slack @xmath56 . form the projection @xmath75 perpendicular to @xmath68 .    for any ray @xmath76 in @xmath77 starting at the point @xmath78 , we can lift that ray to a ray @xmath79 in @xmath24 starting at @xmath50 , and find a hyperplane containing @xmath68 and separating the interior of some @xmath70 from @xmath80 .",
    "this separated @xmath56 must be tight ( because it has @xmath50 on its boundary as the origin of the ray ) so the separating hyperplane must contain the affine hull of @xmath68 ( otherwise some point in @xmath68 within a small neighborhood of @xmath50 would be interior to @xmath56 ) . therefore the hyperplane is projected by @xmath81 to a lower dimensional hyperplane separating @xmath82 from @xmath78 .",
    "since one can find such a separation for any ray , @xmath83 can not contain any points of any such ray and must consist of the single point @xmath78 .",
    "at least one tight @xmath84 must be continuously shrinking ( rather than constant ) , since otherwise @xmath46 would be nonempty for some @xmath62 .",
    "the intersection of the interior of @xmath85 with the remaining projected tight constraints @xmath82 is empty , so by helly s theorem , we can find a @xmath86-tuple @xmath64 of these convex sets having empty intersection , and the presence of @xmath64 forces the glp solution to have the correct value of @xmath27 .",
    "similarly , we can reduce the size of the set @xmath69 determining @xmath67 from @xmath18 to @xmath87 , so the total size of a basis is at most @xmath88 .",
    "the first part of this lemma is similar to  ( * ? ? ?",
    "* theorem  8.1 ) .",
    "note that we only used the assumption of convexity to prove the dimension bound ; similar nested families of non - convex sets still produce glp problems , but could have arbitrarily large dimension .    by lemma  [ l : glp ]",
    "we can solve quasiconvex programs using glp algorithms . we can also perform a more direct local optimization procedure to find @xmath89 : since @xmath46 is a nested convex family we can find @xmath12 by applying steepest descent , nested binary search , or other local optimization techniques to find the point minimizing the associated function @xmath90 .",
    "thus we can justify the correctness of the local optimization mesh smoothing procedure used by freitag et al . in practice",
    ", it may be appropriate to combine this approach with the dual simplex methods coming from glp theory by using steepest descent to perform the basis exchange operations needed in glp algorithms .",
    "@xmath92    let @xmath93 measure the quality of a triangulation element @xmath94 . we are given a triangulation , and wish to move one of its steiner points in such a way as to minimize @xmath95 , where the maximization occurs over elements incident to the moving point .    in this section",
    "we describe ways of formulating such problems as quasiconvex programs .",
    "we can assume without loss of generality ( e.g. by appropriate change of variables ) that @xmath96 for any @xmath94 .",
    "the basic idea is to construct for each @xmath97 a nested convex family @xmath98 , where @xmath99 indicates the triangle formed by moving the steiner point to position @xmath50 . in other words ,",
    "if we are given a bound @xmath27 on the triangulation quality , @xmath51 is the",
    "_ feasible region _ in which placement of the steiner point will allow @xmath97 to meet the quality bound . finding the optimal steiner point placement is equivalent to finding the optimal quality bound that allows a feasible placement .",
    "the families @xmath51 are clearly nested and closed , and they satisfy the intersection property used in the definition of nested convex families , but they may not be convex or bounded .",
    "convexity will need to be proven using the detailed properties of the quality measure @xmath6 .",
    "continuous shrinking may or may not hold depending on the quality measure @xmath6 .",
    "boundedness can be imposed ( while preserving continuous shrinking ) by intersecting @xmath51 with the set of points within distance @xmath100 of a bounding ball of the triangulation .",
    "one can then find the optimal placement @xmath50 by solving the quasiconvex program associated with this collection of nested convex families . to make sure that the result is a valid triangulation",
    ", we add additional halfspace constraints to our collection , forming constant nested families , to force @xmath50 into the kernel of the star - shaped polygon formed by removing the steiner point from the triangulation ( figure  [ f : ker](a ) ) .",
    "it remains to show convexity of the feasible regions @xmath51 for various quality measures . in the remainder of this section",
    ", we describe these measures and their corresponding feasible regions . as shown in figure  [",
    "f : feas ] , many different criteria have identical feasible regions ; however they do not necessarily lead to the same steiner point placement as the parametrization of the nested families could differ .    @xmath101    area .",
    ": :    the feasible regions for maximizing minimum triangle area are strips    parallel to the fixed ( external ) sides of the triangles . in the    presence of the halfspace constraints forcing the steiner point into    the kernel of its polygon",
    ", we can simplify these strips to halfspaces .",
    "the intersection of one such halfspace and the corresponding kernel    constraint is shown in figure  [ f : feas](a ) .",
    "one can also maximize    minimum area , using a halfspace with the same boundary but opposite    orientation ( figure  [ f : feas](b ) ) . altitude .",
    ": :    the _ external altitude _ of @xmath97 ( the altitude having    the fixed side of @xmath97 as its base ) can be minimized    or maximized using halfspace feasible regions identical to those for    area ( figure  [ f : feas](a , b ) ) . the feasible regions in which the other    two altitudes are at least @xmath102 are the intersections of    pairs of halfspaces through one fixed point , passing at distance    @xmath102 from the other point ; one such halfspace is shown in    figure  [ f : feas](d ) and the other is its vertical reflection",
    ". the    feasible regions for minimizing the maximum internal altitude are not    convex . angle .",
    ": :    as noted by matouek et al .",
    "@xcite , one can maximize the minimum    angle by using constraints of two types .",
    "for the internal angles at    the steiner points , the region in which the angle is at least    @xmath103 forms either the union or intersection of two    congruent circles ( as @xmath103 is acute or obtuse    respectively ) having the fixed side of @xmath97 as a    chord . in the former case",
    "this may not be convex , but in the presence    of the kernel constraints we can simplify the feasible region to    circles ( figure  [ f : feas](e ) ) .",
    "the regions in which the external angles    are at least @xmath103 form wedges bounded by rays through    a fixed vertex of @xmath97 , which can again be    simplified in the presence of the kernel constraints to halfspaces    ( figure  [ f : feas](d ) ) .",
    "it is also natural to minimize the maximum    angle ; unfortunately the feasible regions for the internal angles are    non - convex ( complements of circles ) .",
    "however one can still minimize    the maximum angle at external vertices , using halfspace regions    ( figures  [ f : feas](c ) ) .",
    "edge length .",
    ": :    the feasible region for minimizing the length of the internal edges of    @xmath97 is an intersection of two circles of the given    radius , centered on the fixed vertices of @xmath97    ( figure  [ f : feas](h ) ) .",
    "we can use the same two - circle constraints ( with    larger radii than depicted in the figure ) to minimize the maximum    element diameter . aspect ratio .",
    ": :    the _ aspect ratio _ of a triangle is the ratio of its longest side    length to its shortest altitude .",
    "we consider separately the ratios of    the three sides to their corresponding altitudes ; the maximum of these    three will give the overall aspect ratio .",
    "the ratio of external sides    to altitude has a feasible region ( after taking into account the    kernel constraints ) forming a halfspace parallel to the external side ,    like that in figure  [ f : feas](b ) . to determine the aspect ratio on one    of the other two sides of a triangle @xmath97 , normalize",
    "the triangle coordinates so that the moving point has coordinates    @xmath104 and the other two have coordinates    @xmath105 and @xmath106 .",
    "the side length is then    @xmath107 , and the altitude is    @xmath108 , so the overall aspect ratio has the    simple formula @xmath109 .",
    "the locus of points for    which this is a constant @xmath110 is given by    @xmath111 , or equivalently    @xmath112 .",
    "thus the feasible region is a    circle tangent to the fixed side of @xmath97 at one of    its two endpoints ( figure  [ f : feas](f ) ) .",
    ": :    the feasible region for minimizing the maximum perimeter is an ellipse    ( figure  [ f : feas](g ) ) .",
    "circumradius and containing circle .",
    ": :    the feasible regions for minimizing the maximum circumradius are    nonconvex lunes bounded by pairs of circular arcs . however , minimizing    the maximum _ containing circle _ ( the smallest circle containing the    given triangle , without necessarily having the vertices on its    boundary ) produces convex feasible regions , formed by using the same    region as the circumcircle within a vertical slab perpendicular to the    fixed segment of the triangle , and a lune similar to that for edge    length or diameter outside the slab .",
    "these regions boundaries are    three circular arcs , meeting at common tangents , with the radius of    the middle arc equal to half that of the arcs on either side    ( figure  [ f : feas](i ) ) . inradius .",
    ": :    the feasible region for maximizing the minimum inradius of any    triangle can be found as follows .",
    "assume without loss of generality    that the two fixed points have coordinates @xmath105 and    @xmath113 , the moving point has coordinates    @xmath104 , and the inradius bound is @xmath76 .",
    "we can    then place the incenter at a point @xmath114 and solve    simultaneous equations stating that lines from @xmath105 to    @xmath104 and from @xmath106 to    @xmath104 are at distance r from this point . the solution to    these equations",
    "was simplified in _ mathematica _ to    @xmath115 affine transformation of the coordinates further simplifies    this to @xmath116 which has only one term involving    @xmath50 , letting us solve this as @xmath117 for a    function @xmath1 in the form of the square root of a rational    function :    @xmath118 to    show that this bounds a convex region , we need only show that    @xmath1 has nonpositive second derivative within the range of    values @xmath119 leading to a feasible solution .",
    "we used    _ mathematica _ to compute this derivative :    @xmath120 most of the terms in    this formula clearly have a consistent sign .",
    "the final polynomial in    the denominator has a root at @xmath121 , which    turns out to be the point at which @xmath119 is minimum ,    corresponding ( in the original coordinate system prior to our affine    transformation ) to @xmath122 ; smaller values of    @xmath119 are infeasible .",
    "the final polynomial in the numerator    has a root at @xmath123 , which is always below    this minimum feasible value of @xmath119 .",
    "therefore    @xmath124 has a consistent sign throughout the interval of    interest , and the feasible region for inradius is convex .",
    "area over squared edge length .",
    ": :    bank and smith  @xcite define yet another measure of the quality of a    triangle , computed by dividing the triangle s area by the sum of the    squares of its edge lengths .",
    "this gives a dimensionless quantity which    bank and smith normalize to be one for the equilateral triangle ( and    less than one for any other triangle ) .",
    "they then use this quality    measure as the basis for a local improvement method for mesh    smoothing . as bank and smith",
    "show , the feasible region for this    measure forms a circle centered on the perpendicular bisector of the    two fixed points , so our methods offer an alternative way to find the    optimum point placement .",
    "mixtures of criteria . : :    we have described the various optimization criteria above as if only    one is to be used in the actual mesh smoothing algorithm . but clearly ,    the same formulation applies to problems in which we combine various    criteria , for instance some measuring element shape and others    measuring element size , with the overall quality of an element equal    to the weighted maximum of these criteria . indeed , this idea can    alleviate a problem with criteria such as edge length , perimeter ,    etc . , which depend more strongly on the size of an element than on its    shape : if one optimizes such a criterion on its own , the optimal point    placement may lie on the boundary of the kernel , giving rise to a    degenerate triangulation ( figure  [ f : ker](b ) ) . if one combines these    criteria with scale - invariant criteria such as angles or aspect ratio ,    this complication can not occur .",
    "we define the quality of a mixture of    criteria @xmath125 to be @xmath126 , where the    weights @xmath127 may be chosen arbitrarily .",
    "( even more    generally we could replace the linear function @xmath128    with any monotonic function of @xmath125 . )",
    "to solve such a    mixed problem , we simply include constraints for each different    criterion in the combination .",
    "the steiner point placement optimizing the criteria described above , or a weighted maximum of criteria , can be computed in linear time by quasiconvex programming .    by lemma  [ l : glp ]",
    "we can solve these problems using any algorithm for glp - type problems .",
    "as noted earlier , a number of algorithms are known for solving such problems in a linear number of operations , where each operation involves testing a potential solution against one of the constraints ( which in our case amounts to computing the quality of a single element ) or finding the solution of a subproblem of constant size .",
    "these constant - size subproblems can be solved in constant time in the algebraic decision tree model standard for geometric algorithms .",
    "much of the same theory we have outlined above applies equally well to _",
    "quadrilateral meshes _ , meshes consisting of planar straight - line graphs in which all faces are convex quadrilaterals . in this case , to preserve element convexity , the steiner point must not only stay within the kernel of the star - shaped polygon formed by adjacent elements , it must also avoid crossing any element diagonal .",
    "also , some of the quality measures outlined above do not make as much sense when applied to quadrilaterals , and others have feasible regions differing somewhat from those for triangular elements .",
    "we outline below some possible quality criteria for quadrilateral meshes and the changes needed to adapt our triangular - mesh smoothing methods to these criteria .",
    "area , angle , edge length , perimeter .",
    ": :    the feasible regions for placing a steiner point according to these    criteria are essentially the same as for triangular meshes . width . : :    this corresponds to the altitude of a triangle .",
    "the width is the    minimum distance between a point and one of the two opposite edges ,    and the minimum width can be maximized by a feasible region formed by    the intersection of six halfspaces , one for each vertex - edge pair    involving the moving point . containing circle .",
    ": :    the minimum containing circle for a quadrilateral is the same as the    largest of the four circles formed by choosing three of the four    points ( in each of four possible ways ) and considering the containing    circle of that triple of points .",
    "therefore , the feasible regions for    minimizing the maximum containing circle are the intersections of    three of the regions arising in the triangular case , one for each of    the three triples involving the moving point .",
    "since each of these    regions is convex , the overall feasible region is convex .",
    ": :    the diameter of a quadrilateral is either its longest edge or its    longest diagonal .",
    "hence the feasible region for diameter is an    intersection of circles , similar to that for edge length , but with the    difference that we include a third circle centered on the vertex    opposite the moving point .",
    ": :    our proof that the triangle inradius function has convex feasible    regions does not immediately generalize to quadrilaterals .",
    "we    conjecture that quadrilateral inradii also give convex feasible    regions .",
    "the steiner point placement optimizing the quadrilateral mesh criteria described above ( except possibly inradius ) , or a weighted maximum of criteria , can be computed in linear time by quasiconvex programming .",
    "some other natural quality measures for quadrilaterals , such as cross ratio ( ratio of products of opposite side lengths ) and sums of opposite pairs of angles , do not have convex feasible regions , but ( since their feasible regions are bounded by circular arcs ) can be optimized using the techniques described below in theorem  [ minmaxangle ] .",
    "many of the two - dimensional quality criteria discussed above have higher - dimensional generalizations that also have convex feasible regions .    volume and altitude .",
    ": :    just as the area of a triangle with a fixed base is proportional to    its height , the volume of a simplex with a fixed base is proportional    to its altitude .",
    "the triangulation minimizing the maximum volume , or    maximizing the minimum volume , can be found using feasible regions in    the form of halfspaces parallel to the fixed face of the simplex .",
    "the    same type of feasible region can be used to optimize the altitude at    the moving steiner point .",
    "the feasible regions for maximizing the    minimum of the other altitudes are the intersections of pairs of    halfspaces through @xmath129 of the fixed points .",
    "boundary measure .",
    ": :    the measure of any boundary face of a simplex is proportional to the    distance of the moving steiner point from the affine hull of the    remaining fixed points on the facet , so one can minimize the maximum    face measure using `` generalized cylinders '' formed by taking a    cartesian product of a sphere with this affine hull . in particular the    steiner point placement minimizing the maximum edge length can be    found by using spherical feasible regions centered on each fixed    point , and in @xmath130 the placement minimizing the maximum    triangle area can be found using cylindrical feasible regions centered    on each fixed edge .",
    "these face measures are convex functions , so their    sums are also convex , implying that the level sets for total surface    area of all triangles in a tetrahedron , or total length of all edges    in a tetrahedron , again form convex feasible regions . containing sphere . : :    as in @xmath91 , the feasible regions for the minimum    containing sphere are bounded by @xmath131 algebraic    patches , in which the containing sphere has some fixed set of vertices    on its boundary .",
    "these patches meet the plane of the fixed vertices    perpendicularly , and are locally convex ( they are figures of rotation    of lower dimensional feasible regions , except for the one    corresponding to the region in which the containing sphere equals the    circumsphere , which is a portion of that sphere ) . in    @xmath130 , these patches are portions of spheres and tori .",
    "further , they meet at a continuous boundary ( since the containing    sphere radius is a continuous function of the moving point s location )    and are continuously differentiable where they meet ( at each point    where two patches meet , they share tangent planes with the containing    sphere itself ) .",
    "thus these patches combine to form a convex region .",
    ": :    the dihedral angles of a simplex are formed where two faces meet along    an _ axis _ determined by some @xmath129 points .",
    "if these axis    points are all fixed , one of the two faces is itself fixed , and the    feasible region is a halfspace forming the given angle with this fixed    face .",
    "however , if the axis includes the moving point , the feasible    regions are in general non - convex .",
    "solid angles .",
    ": :    as we show in the next section , the feasible regions for maximizing    the minimum solid angle ( measured at the fixed points of each    tetrahedron , for three - dimensional problems , or at the moving point in    any dimension ) are convex .    in any constant dimension",
    ", the steiner point placement optimizing each of the criteria described above except exterior solid angle , or a weighted maximum of criteria , can be computed in linear time by quasiconvex programming .",
    "the exterior solid angles as well can be optimized in three dimensions .",
    "we now prove that the feasible regions for maximizing the minimum solid angles of the mesh elements are convex , for the angles at the moving point , in any dimension , and for the angles at fixed points of tetrahedra in @xmath130 only .",
    "convexity of the feasible regions for solid angles at fixed points in higher dimensions remains open .",
    "we start with the simpler case , in which we are interested in the solid angle at one of the fixed vertices of a tetrahedron in @xmath130 .",
    "this angle can be measured by projecting the other three vertices onto a unit sphere centered on the fixed vertex , and measuring the area of the spherical triangle formed by these three projected points .",
    "if the three projected points are represented by three - dimensional unit vectors @xmath132 , @xmath110 , and @xmath133 ( with @xmath132 representing the moving point and @xmath110 , @xmath133 , and the origin representing the three fixed points ) then the solid angle @xmath22 at the origin satisfies the equation @xmath134 @xcite",
    ". therefore , the boundary of the feasible region ( on the unit sphere ) is given by an equation of the form @xmath135 which is linear in @xmath132 and therefore forms a circle on the unit sphere .",
    "( note that unlike in the planar case , this circle does not pass through @xmath110 and @xmath133 , but instead passes through their diametric opposites . ) in terms of the original unprojected points , the feasible region is therefore a convex circular cone .    to prove that the feasible regions for the interior solid angles are also convex , we use some facts from convex analysis  @xcite . a function @xmath136 from some convex subset of a vector space @xmath137 to @xmath138",
    "is said to be _ convex _ if , for any @xmath139 , and any @xmath140 , @xmath141 a function @xmath136 is said to be _ quasiconcave _ if its level sets @xmath142 are convex .",
    "a function is @xmath143-concave if @xmath144 is convex ; in the cases of interest to us @xmath143 will always be negative .",
    "if @xmath1 is quasiconcave we also say that it is @xmath145-concave ( and if @xmath1 is logconcave , i.e. if @xmath146 is convex , we also say that it is 0-concave ) .",
    "the next result appears as ( * ? ? ?",
    "* theorem 3.21 ) .",
    "the `` usual conventions '' from that source imply that , if @xmath147 , the integral is @xmath145-concave i.e. quasiconcave .",
    "[ int - conc ] let @xmath1 be @xmath143-concave on an open convex set @xmath148 in @xmath149 .",
    "let @xmath150 be the projection of @xmath148 on @xmath151 and for @xmath152 , let @xmath153 be the @xmath50-section of @xmath148 .",
    "define @xmath154 if @xmath155 , then @xmath156 is @xmath157-concave on @xmath150 , where @xmath158 with the usual conventions when @xmath147 or @xmath159 .",
    "[ convolve ] let @xmath160 be @xmath161-concave , and let @xmath162 be the characteristic function of a convex set @xmath29 in a @xmath163-dimensional subspace @xmath137 of @xmath164 .",
    "then the convolution of @xmath1 and @xmath165 is quasiconcave .",
    "let @xmath166 , defined on the cartesian product of @xmath164 with @xmath137 .",
    "then @xmath102 is also @xmath161-concave , and the convolution can be computed as @xmath167 .",
    "the result follows from lemma  [ int - conc ] .    a special case of corollary  [ convolve ] , in which @xmath163 equals the dimension @xmath18 of the domain of @xmath1 , appears ( with a different proof ) as ( * ? ? ?",
    "* theorem 3.24 ) . for our application",
    ", we are interested in a different case , in which @xmath168 .",
    "the solid angle of a @xmath18-simplex in @xmath18-dimensional space , measured at the moving point , can be interpreted as the fraction of the field of view at that moving point taken up by the convex hull @xmath29 of the remaining fixed points .",
    "this fraction can be computed as the convolution of the characteristic function of @xmath29 with a function @xmath136 measuring the fraction of field of view taken by an infinitesimally small surface patch of @xmath29 .",
    "this function @xmath136 is inversely proportional to the square ( @xmath129 power , for general @xmath18 ) of the distance from @xmath169 to the patch , and directly proportional to the sine of the incidence angle of @xmath169 onto the patch . if we translate this patch to the origin , @xmath1 has the simple form @xmath170 where @xmath171 is a vector normal to the patch .",
    "[ s - concave ] the function @xmath172 , defined on the open halfspace @xmath173 , is @xmath174-concave .    because of the rotational symmetry of @xmath1 , we need only prove this for the two - dimensional function @xmath175 in the halfplane @xmath176",
    ". we used _",
    "mathematica _ to compute the principal determinants of the hessian of @xmath177 .",
    "these are @xmath178 which is always positive ( for @xmath176 , @xmath179 ) , and @xmath180 since both principal determinants are non - negative , the function is convex .",
    "the feasible region for the solid angle at the moving point of a simplex is convex .    as described above",
    ", we can express the solid angle as the convolution of @xmath136 with the characteristic function of the convex hull of the fixed points . by lemma  [ s - concave ] ,",
    "@xmath1 is @xmath174-concave within a halfspace defined by the kernel constraints .",
    "therefore we can use corollary  [ convolve ] to show that the solid angle is quasiconcave and therefore has convex level sets .",
    "our proof for the interior solid angles generalizes to any dimension , but that for the exterior solid angles does not .",
    "there seems to be some correspondence between the feasible regions of interior solid angles in dimension @xmath18 , and the feasible regions of exterior solid angles in dimension @xmath57 ; perhaps this correspondence can be exploited to show that the exterior solid angle feasible regions are convex in higher dimensions as well .",
    "we have seen that many mesh smoothing criteria give rise to quasiconvex programming problems ; however , other criteria , including minmax angle , minmax circumradius , and maxmin perimeter , do not have convex feasible regions .",
    "perhaps this can be seen as evidence that these measures are less appropriate for mesh smoothing applications , since it means among other things that there may be many local optima instead of one global optimum .",
    "indeed , it seems likely that the height and perimeter criteria mentioned above do not lead to good element shapes .",
    "however there is evidence that the maximum angle is an appropriate quality measure for finite element meshes  @xcite , so we now discuss methods for optimizing this measure .",
    "our results should be seen as preliminary and unready for practical implementation .",
    "[ minmaxangle ] we can find the placement of a steiner point in a star - shaped polygon , minimizing the maximum angle , in time @xmath181 for some constant @xmath133 .",
    "each feasible region in which some particular angle is at most @xmath103 forms either a halfplane or the complement of a disk .",
    "the lifting transformation @xmath182 maps these regions to halfspaces in @xmath130 ; @xmath103 is feasible if the intersection of all these halfspaces meets the paraboloid @xmath183 .",
    "the result follows by applying parametric search  @xcite to a parallel algorithm that constructs the intersection  @xcite and tests whether any of its features crosses the paraboloid .",
    "we can of course combine the maximum angle with the many other criteria , including circumradius , for which the feasible regions are bounded by lines and circles .",
    "an alternate approach suggests itself , which may have a better chance of leading to a practical algorithm .",
    "define a generalized voronoi diagram the cells of which determine which mesh angle would be worst if the steiner point were placed in the cell .",
    "are the cells of this diagram connected ?",
    "if so it seems likely that generalized voronoi diagram algorithms  @xcite can construct this diagram in time @xmath184 or perhaps even @xmath185 .",
    "we could then find the optimal placement by examining the features of this diagram .",
    "finally , we consider one last criterion , minimum total edge length .",
    "this does not fit into our quasiconvex programming framework , since the overall quality is a sum of terms from each element rather than a minimum or maximum of such terms ; however the corresponding optimal triangulation problem remains a topic of considerable theoretical interest  @xcite .",
    "a mesh improvement phase might also help reduce the ( large ) constant factors in known approximate minimum weight steiner triangulation algorithms  @xcite . without the kernel constraints enforcing that the result is a valid triangulation ,",
    "the problem of placing one steiner point to minimize the total distance to all other points is a facility location problem known as the _ weber _ or _ fermat - weber problem_. although it has no good exact solution ( the solution point is a high degree polynomial in the inputs  @xcite ) one can easily solve it approximately by steepest descent  @xcite .",
    "the kernel constraints do not change the overall nature of this solution .",
    "thus this version of the mesh smoothing problem can again be solved efficiently .",
    "we have described a general framework for theoretical analysis of mesh smoothing problems , and have shown how to perform optimal steiner point placement efficiently for many important quality measures .",
    "there remain some open problems , for instance it is not clear to what extent our results extend to hexahedral meshing ( in which one can not generally move a single vertex at a time while preserving element convexity ) .",
    "there also remain some quality measures that may possibly be quasiconvex , but for which a proof of quasiconvexity has eluded us .",
    "however we believe the most important directions for future research are empirical : which of the criteria we have described leads to the best quality meshes , and to what extent can theoretical generalized linear programming algorithms serve as practical methods for the solution of these problems ?",
    "i. adler and r. shamir . a randomization scheme for speeding up algorithms for linear and convex quadratic programming problems with a high constraints - to - variables ratio . _ math .",
    "_ 61 , 1993 , pp .",
    ". 3952 .",
    "n. amato , m. t. goodrich , and e. a. ramos .",
    "parallel algorithms for higher dimensional convex hulls .",
    "_ 35th ieee symp .",
    "foundations of comp .",
    "_ , 1994 , pp .",
    "683694 ; http://www.cs.tamu.edu/research/robotics/amato/papers/focs94.300.ps.gz .",
    "m. bern , l. p. chew , d. eppstein , and j. ruppert .",
    "dihedral bounds for mesh generation in high dimensions .",
    "_ 6th acm / siam symp . discrete algorithms _ , 1995 , pp .",
    "189196 ; http://www.ics.uci.edu/~eppstein/pubs/bercheepp-soda-95.pdf .",
    "see also d. eppstein , tetrahedra classified by bad angles , http://www.ics.uci.edu/~eppstein/junkyard/tetraqual.html .",
    "k. clarkson . a las vegas algorithm for linear programming when the dimension is small .",
    "_ 29th ieee symp .",
    "foundations of computer science _ , 1988 , pp . 452456 ; _ j. acm _ 42 , 1995 , pp .",
    "488499 ; http://cm.bell-labs.com/who/clarkson/lp2.html .          m. t. dickerson and m. h. montague .",
    "a ( usually ? ) connected subgraph of the minimum weight triangulation .",
    "_ 12th acm symp .",
    "_ , 1996 , pp .",
    "204213 ; http://www.middlebury.edu/~dickerso/mwtskel.html .",
    "l. a. freitag , m. t. jones , and p. e. plassmann .",
    "an efficient parallel algorithm for mesh smoothing . _ 4th int . meshing roundtable _ ,",
    "sandia labs . , 1995 , pp .",
    "4758 ; ftp://fea1.ansys.com/pub/sowen/freitag.epsi.gz .",
    "r. klein and a. lingas .",
    "hamiltonian abstract voronoi diagrams in linear time .",
    "_ 5th int .",
    "algorithms and computation _ , springer lncs 834 , 1995 , pp . 1119 ; _ 10th eur .",
    "geom . _ , 1994 , pp .",
    "14 ; http://www.dna.lth.se/research/algorithms/papers/andrzej4.ps ."
  ],
  "abstract_text": [
    "<S> we study the problem of moving a vertex in an unstructured mesh of triangular , quadrilateral , or tetrahedral elements to optimize the shapes of adjacent elements . </S>",
    "<S> we show that many such problems can be solved in linear time using generalized linear programming . </S>",
    "<S> we also give efficient algorithms for some mesh smoothing problems that do not fit into the generalized linear programming paradigm .    </S>"
  ]
}
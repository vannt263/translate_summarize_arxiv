{
  "article_text": [
    "early 1990s were marked by several major developments in knowledge representation and nonmonotonic reasoning .",
    "one of the most important among them was the introduction of _ disjunctive logic programs with classical negation _ by michael gelfond and vladimir lifschitz @xcite .",
    "the language of the formalism allowed for rules @xmath0 where @xmath1 and @xmath2 are classical literals , that is , atoms and classical or _ strong _ negations ( @xmath3 ) of atoms . in the paper , we will write `` strong '' rather than `` classical '' negation , as it reflects more accurately the role and the behavior of the operator . the _ answer - set _ semantics for programs consisting of such rules , introduced in the same paper , generalized the stable - model semantics of normal logic programs proposed a couple of years earlier also by gelfond and lifschitz @xcite .",
    "the proposed extensions of the language of normal logic programs were motivated by knowledge representation considerations . with two negation operators it was straightforward to distinguish between @xmath4 being _ false by default _",
    "( there is no justification for adopting @xmath4 ) , and @xmath4 being _ strongly false _",
    "( there is evidence for @xmath5 ) .",
    "the former would be written as @xmath6 while the latter as @xmath5 . and with the disjunction in the head of rules one could model `` indefinite '' rules which , when applied , provide partial information only ( one of the alternatives in the head holds , but no preference to any of them is given ) .    soon after disjunctive logic programs with strong negation were introduced , michael gelfond proposed an additional important extension , this time with a modal operator @xcite .",
    "he called the resulting formalism the language of _ epistemic specifications_. the motivation came again from knowledge representation .",
    "the goal was to provide means for the `` correct representation of incomplete information in the presence of multiple extensions '' @xcite .",
    "surprisingly , despite their evident relevance to the theory of nonmonotonic reasoning as well as to the practice of knowledge representation , epistemic specifications have received relatively little attention so far .",
    "this state of affairs may soon change .",
    "recent work by faber and woltran on _ meta - reasoning _ with answer - set programming @xcite shows the need for languages , in which one could express properties holding across all answer sets of a program , something michael gelfond foresaw already two decades ago .",
    "our goal in this paper is to revisit the formalism of epistemic specifications and show that they deserve a second look , in fact , a place in the forefront of knowledge representation research .",
    "we will establish a general semantic framework for the formalism , and identify in it the precise location of gelfond s epistemic specifications .",
    "we will derive several complexity results .",
    "we will also show that the original idea of gelfond to use a modal operator to model `` what is known to a reasoner '' has a broader scope of applicability .",
    "in particular , we will show that it can also be used in combination with the classical logic .",
    "complexity results presented in this paper provide an additional motivation to study epistemic specifications .",
    "even though programs with strong negation often look `` more natural '' as they more directly align with the natural language description of knowledge specifications , the extension of the language of normal logic programs with the strong negation operator does not actually increase the expressive power of the formalism .",
    "this point was made already by gelfond and lifschitz , who observed that there is a simple and concise way to compile the strong negation away .",
    "on the other hand , the extension allowing the disjunction operator in the heads of rules is an essential one .",
    "as the complexity results show @xcite , the class of problems that can be represented by means of disjunctive logic programs is strictly larger ( assuming no collapse of the polynomial hierarchy ) than the class of problems that can be modeled by normal logic programs . in the same vein ,",
    "extension by the modal operator along the lines proposed by gelfond is essential , too .",
    "it does lead to an additional jump in the complexity .",
    "to motivate epistemic specifications , gelfond discussed the following example .",
    "a certain college has these rules to determine the eligibility of a student for a scholarship :    1 .",
    "students with high gpa are eligible 2 .",
    "students from underrepresented groups and with fair gpa are eligible 3 .",
    "students with low gpa are not eligible 4 .   when these rules are insufficient to determine eligibility , the student should be interviewed by the scholarship committee .",
    "gelfond argued that there is no simple way to represent these rules as a disjunctive logic program with strong negation .",
    "there is no problem with the first three rules .",
    "they are modeled correctly by the following three logic program rules ( in the language with both the default and strong negation operators ) :    1 .",
    "@xmath7 2 .",
    "@xmath8 3 .",
    "@xmath9 .",
    "the problem is with the fourth rule , as it has a clear meta - reasoning flavor .",
    "it should apply when the possible worlds ( answer sets ) determined by the first three rules do not fully specify the status of eligibility of a student @xmath10 : neither _ all _ of them contain @xmath11 nor _ all _ of them contain @xmath12 .",
    "an obvious attempt at a formalization :    1 .",
    "@xmath13    fails .",
    "it is just another rule to be added to the program .",
    "thus , when the answer - set semantics is used , the rule is interpreted with respect to individual answer sets and not with respect to collections of answer - sets , as required for this application . for a concrete example , let us assume that all we know about a certain student named mike is that mike s gpa is fair or high .",
    "clearly , we do not have enough information to determine mike s eligibility and so we must interview mike .",
    "but the program consisting of rules ( 1)-(4 ) and the statement    1 .",
    "@xmath14    about mike s gpa , has two answer sets :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath15 + @xmath16 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    thus , the query @xmath17 has the answer `` unknown . ''",
    "to address the problem , gelfond proposed to extend the language with a modal operator @xmath18 and , speaking informally , interpret premises @xmath19 as `` @xmath20 is known to the program '' ( the original phrase used by gelfond was `` known to the reasoner '' ) , that is , true in all answer - sets . with this language extension",
    ", the fourth rule can be encoded as    1 .",
    "@xmath21    which , intuitively , stands for `` _ _ interview _ _ if neither the eligibility nor the non - eligibility is known . ''",
    "the way in which gelfond @xcite proposed to formalize this intuition is strikingly elegant .",
    "we will now discuss it .",
    "we start with the syntax of _ epistemic specifications_. as elsewhere in the paper , we restrict attention to the propositional case .",
    "we assume a fixed infinite countable set @xmath22 of _ atoms _ and the corresponding language @xmath23 of propositional logic .",
    "literal _ is an atom , say @xmath24 , or its _ strong _ negation @xmath25 .",
    "simple modal atom _ is an expression @xmath19 , where @xmath26 , and a _ simple modal literal _ is defined accordingly .",
    "an _ epistemic premise _ is an expression ( conjunction ) @xmath27 where every @xmath28 , @xmath29 , is a simple modal literal .",
    "epistemic rule _ is an expression of the form @xmath30 where every @xmath31 , @xmath32 , is a literal , and @xmath33 is an epistemic premise .",
    "collections of epistemic rules are _",
    "epistemic programs_. it is clear that ( ground versions of ) rules ( 1)-(5 ) and ( 4@xmath34 ) are examples of epistemic rules , with rule ( 4@xmath34 ) being an example of an epistemic rule that actually takes advantage of the extended syntax .",
    "rules such as    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath35 + @xmath36 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    are also examples of epistemic rules .",
    "we note that the language of epistemic programs is only a fragment of the language of epistemic specifications by gelfond .",
    "however , it is still expressive enough to cover all examples discussed by gelfond and , more generally , a broad range of practical applications , as natural - language formulations of domain knowledge typically assume a rule - based pattern .",
    "we move on to the semantics , which is in terms of _ world views_. the definition of a world view consists of several steps .",
    "first , let @xmath37 be a consistent set of literals from @xmath23 .",
    "we regard @xmath37 as a three - valued interpretation of @xmath23 ( we will also use the term _ three - valued possible world _ ) , assigning to each atom one of the three logical values @xmath38",
    ", @xmath39 and @xmath40 .",
    "the interpretation extends by recursion to all formulas in @xmath23 , according to the following truth tables       [ cols=\"^,^\",options=\"header \" , ]      +   +    by a _ three - valued possible - world structure _ we mean a non - empty family of consistent sets of literals ( three - valued possible worlds ) .",
    "let @xmath41 be a three - valued possible - world structure and let @xmath37 be a consistent set of literals .",
    "for every formula @xmath42 , we define    1 .",
    "@xmath43 , if @xmath44 2 .",
    "@xmath45 , if for every @xmath46 , @xmath47 3 .",
    "@xmath48 , if there is @xmath46 such that @xmath49 .    next , for every literal or simple modal literal @xmath50",
    ", we define    1 .",
    "@xmath51 if @xmath52 .",
    "we note that neither @xmath45 nor @xmath53 depend on @xmath37 .",
    "thus , we will often write @xmath54 , when @xmath55 is a simple modal literal or its default negation .    in the next step ,",
    "we introduce the notion of the _ g - reduct _ of an epistemic program .",
    "[ def1 ] let @xmath4 be an epistemic program , @xmath41 a three - valued possible - world structure and @xmath37 a consistent set of literals .",
    "g - reduct _ of @xmath4 with respect to @xmath56 , in symbols @xmath57 , consists of the heads of all rules @xmath58 such that @xmath59 , for every conjunct @xmath60 occurring in the body of @xmath61 .",
    "let @xmath62 be a set of disjunctions of literals from @xmath23 .",
    "a set @xmath37 of literals is _ closed _ with respect to @xmath62 if @xmath37 is consistent and contains at least one literal in common with every disjunction in @xmath62 .",
    "we denote by @xmath63 the family of all minimal sets of literals that are closed with respect to @xmath62 . with the notation @xmath63 in hand",
    ", we are finally ready to define the concept of a world view of an epistemic program @xmath4 .    [ def2 ] a three - valued possible - world structure @xmath41 is a _ world view _ of an epistemic program @xmath4 if @xmath64 .",
    "the @xmath65-reduct of an epistemic program consists of disjunctions of literals .",
    "thus , the concept of a world view is well defined .",
    "we note that gelfond considered also inconsistent sets of literals as minimal sets closed under disjunctions . however , the only such set he allowed consisted of _ all _ literals .",
    "consequently , the difference between the gelfond s semantics and the one we described above is that some programs have a world view in the gelfond s approach that consists of a single set of all literals , while in our approach these programs do not have a world view .",
    "but in all other cases , the two semantics behave in the same way .",
    "let us consider the ground program , say @xmath4 , corresponding to the scholarship eligibility example ( rule ( 5 ) , and rules ( 1)-(3 ) and ( 4@xmath34 ) , grounded with respect to the herbrand universe @xmath66 ) .",
    "the only rule involving simple modal literals is    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath67 . _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    let @xmath41 be a world view of @xmath4 .",
    "being a three - valued possible - world structure , @xmath68 .",
    "no matter what @xmath37 we consider , no minimal set closed with respect to @xmath57 contains @xmath69 and , consequently , no minimal set closed with respect to @xmath57 contains @xmath70 .",
    "it follows that @xmath71 .",
    "let us assume that @xmath72 .",
    "then , no reduct @xmath57 contains @xmath73 .",
    "let @xmath74 .",
    "it follows that @xmath57 consists only of @xmath75 . clearly , @xmath76 and , consequently , @xmath77 .",
    "thus , @xmath78 , a contradiction .    it must be then that @xmath79 and @xmath80 .",
    "let @xmath37 be an arbitrary consistent set of literals .",
    "clearly , the reduct @xmath57 contains @xmath73 and @xmath75 . if @xmath81 , the reduct also contains @xmath82 .",
    "thus , @xmath76 if and only if    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath83 , or + @xmath84 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    it follows that if @xmath41 is a world view for @xmath4 then it consists of these two possible worlds .",
    "conversely , it is easy to check that a possible - world structure consisting of these two possible worlds is a world view for @xmath4 .",
    "thus , @xmath73 holds in @xmath41 , and so our representation of the example as an epistemic program has the desired behavior .",
    "the discussion in the previous section demonstrates the usefulness of formalisms such as that of epistemic specifications for knowledge representation and reasoning . we will now present a simpler yet , in many respects , more general framework for epistemic specifications .",
    "the key to our approach is that we consider the semantics given by _ two - valued _ interpretations ( sets of atoms ) , and standard _ two - valued _ possible - world structures ( nonempty collections of two - valued interpretations ) .",
    "we also work within a rather standard version of the language of modal propositional logic and so , in particular , we allow only for one negation operator . later in the paper",
    "we show that epistemic specifications by gelfond can be encoded in a rather direct way in our formalism .",
    "thus , the restrictions we impose are not essential even though , admittedly , not having two kinds of negation in the language in some cases may make the modeling task harder .",
    "we start by making precise the syntax of the language we will be using . as we stated earlier ,",
    "we assume a fixed infinite countable set of atoms @xmath22 . the language we consider is determined by the set @xmath22 , the modal operator @xmath18 , and by the _ boolean connectives _ @xmath85 ( 0-place ) , and @xmath86 , @xmath87 , and @xmath88 ( binary ) . the bnf expression    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath89 , _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    where @xmath90 , provides a concise definition of a formula .",
    "the parentheses are used only to disambiguate the order of binary connectives . whenever possible , we omit them .",
    "we define the unary _ negation _ connective @xmath3 and the 0-place connective @xmath91 as abbreviations :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath92 + @xmath93 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we call formulas @xmath19 , where @xmath94 , _ modal atoms _ ( simple modal atoms that we considered earlier and will consider below are special modal atoms with @xmath18-depth equal to 1 ) .",
    "we denote this language by @xmath95 and refer to subsets of @xmath95 as _ epistemic theories_. we denote the modal - free fragment of @xmath95 by @xmath23 .",
    "while we will eventually describe the semantics ( in fact , several of them ) for arbitrary epistemic theories , we start with an important special case . due to close analogies between the concepts we define below and the corresponding ones defined earlier in the context of the formalism of gelfond , we `` reuse '' the terms used there .",
    "specifically , by an _ epistemic premise _ we mean a conjunction of simple modal literals . similarly , by an _ epistemic rule _",
    "we understand an expression of the form @xmath96 where @xmath33 is an epistemic premise , @xmath31 s are literals ( in @xmath23 ) and @xmath97 s are atoms .",
    "finally , we call a collection of epistemic rules an _",
    "epistemic program_. it will always be clear from the context , in which sense these terms are to be understood .",
    "we stress that @xmath3 is not a primary connective in the language but a derived one ( it is a shorthand for some particular formulas involving the rule symbol ) . even though under some semantics we propose below this negation operator has features of default negation , under some others it does not .",
    "thus , we selected for it the standard negation symbol @xmath3 rather than the `` loaded '' @xmath98 .",
    "a ( two - valued ) _ possible - world structure _ is any nonempty family @xmath41 of subsets of @xmath22 ( two - valued interpretations ) . in the remainder of the paper , when we use terms `` interpretation '' and `` possible - world structure '' without any additional modifiers , we always mean a two - valued interpretation and a two - valued possible - world structure .",
    "let @xmath41 be a possible - world structure and @xmath26 .",
    "we recall that @xmath99 precisely when @xmath100 , for every @xmath101 , and @xmath102 , otherwise .",
    "we will now define the _ epistemic reduct _ of an epistemic program with respect to a possible - world structure .",
    "let @xmath103 be an epistemic program and let @xmath41 be a possible - world structure .",
    "the _ epistemic reduct _ of @xmath4 with respect to @xmath41 , @xmath104 in symbols , is the theory obtained from @xmath4 as follows : eliminate every rule with an epistemic premise @xmath33 such that @xmath105 ; drop the epistemic premise from every remaining rule .",
    "it is clear that @xmath106 , and that it consists of rules of the form @xmath107 where @xmath31 s are literals ( in @xmath23 ) and @xmath97 s are atoms .",
    "let @xmath4 be a collection of rules ( [ eq11 ] ) .",
    "then , @xmath4 is a propositional theory .",
    "thus , it can be interpreted by the standard propositional logic semantics .",
    "however , @xmath4 can also be regarded as a disjunctive logic program ( if we write rules from right to left rather than from left to right ) .",
    "consequently , @xmath4 can also be interpreted by the stable - model semantics @xcite and the supported - model semantics @xcite .",
    "( for normal logic programs , the supported - model semantics was introduced by apt et al . @xcite .",
    "the notion was extended to disjunctive logic programs by baral and gelfond @xcite .",
    "we refer to papers by brass and dix @xcite , definition 2.4 , and inoue and sakama @xcite , section 5 , for more details ) .",
    "we write @xmath108 , @xmath109 and @xmath110 for the sets of models , stable models and supported models of @xmath4 , respectively .",
    "an important observation is that _ each _ of these semantics gives rise to the corresponding notion of an epistemic extension .",
    "let @xmath111 be an epistemic program .",
    "a possible - world structure @xmath41 is an _",
    "epistemic model _",
    "( respectively , an _ epistemic stable model _ , or an _ epistemic supported model _ ) of @xmath4 , if @xmath112 ( respectively , @xmath113 or @xmath114 ) .",
    "it is clear that definition [ def11 ] can easily be adjusted also to other semantics of propositional theories and programs .",
    "we briefly mention two such semantics in the last section of the paper .",
    "we will now show that epistemic programs with the semantics of epistemic stable models can provide an adequate representation to the scholarship eligibility example for mike .",
    "the available information can be represented by the following program @xmath115 :    1 .",
    "@xmath116 2 .",
    "@xmath14 3 .",
    "@xmath117 4 .",
    "@xmath118 5 .",
    "@xmath119 6 .",
    "@xmath120 .",
    "we use the predicate _",
    "neligible _ to model the strong negation of the predicate @xmath121 that appears in the representation in terms of epistemic programs by gelfond ( thus , in particular , the presence of the first clause , which precludes the facts @xmath82 and @xmath122 to be true together ) .",
    "this extension of the language and an extra rule in the representation is the price we pay for eliminating one negation operator .",
    "let @xmath41 consist of the interpretations    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath123 + @xmath124 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    then the reduct @xmath125}^{{{\\mathcal{a}}}}}$ ] consists of rules ( 1)-(5 ) , which are unaffected by the reduct operation , and of the fact @xmath73 , resulting from rule ( 6 ) when the reduct operation is performed ( as in logic programming , when a rule has the empty antecedent , we drop the implication symbol from the notation )",
    ". one can check that @xmath126}^{{{\\mathcal{a}}}}})$ ] .",
    "thus , @xmath41 is an epistemic stable model of @xmath4 ( in fact , the only one ) .",
    "clearly , @xmath73 holds in the model ( as we would expect it to ) , as it holds in each of its possible - worlds .",
    "we note that in this particular case , the semantics of epistemic supported models yields exactly the same solution .",
    "we will now study the complexity of reasoning with epistemic ( stable , supported ) models .",
    "we provide details for the case of epistemic stable models , and only present the results for the other two semantics , as the techniques to prove them are very similar to those we develop for the case of epistemic stable models .",
    "first , we note that epistemic stable models of an epistemic program @xmath4 can be represented by partitions of the set of all modal atoms of @xmath4 .",
    "this is important as _ a priori _ the size of possible - world structures one needs to consider as candidates for epistemic stable models may be exponential in the size of a program .",
    "thus , to obtain good complexity bounds alternative polynomial - size representations of epistemic stable models are needed .",
    "let @xmath103 be an epistemic program and @xmath127 be the set of modal atoms of @xmath4 ( all these modal atoms are , in fact , simple ) .",
    "we write @xmath128 for the program obtained from @xmath4 by eliminating every rule whose epistemic premise contains a conjunct @xmath129 , where @xmath130 , or a conjunct @xmath131 , where @xmath132 ( these rules are  `",
    "blocked' by @xmath127 ) , and by eliminating the epistemic premise from every other rule of @xmath4 .",
    "[ prop : char ] let @xmath103 be an epistemic program . if a possible - world structure @xmath41 is an epistemic stable model of @xmath4 , then there is a partition @xmath127 of the set of modal atoms of @xmath4 such that    1 .",
    "@xmath133 2 .   for every @xmath132",
    ", @xmath20 holds in every stable model of @xmath128 3 .   for every @xmath130",
    ", @xmath134 does not hold in at least one stable model of @xmath128 .",
    "conversely , if there are such partitions , @xmath4 has epistemic stable models .",
    "it follows that epistemic stable models can be represented by partitions @xmath127 satisfying conditions ( 1)-(3 ) from the proposition above .",
    "we observe that deciding whether a partition @xmath127 satisfies conditions ( 1)-(3 ) from proposition [ prop : char ] , can be accomplished by polynomially many calls to an @xmath135-oracle and , if we restrict attention to non - disjunctive epistemic programs , by polynomially many calls to an @xmath136-oracle .",
    "[ rem1 ] if we adjust proposition [ prop : char ] by replacing the term `` stable '' with the term `` supported , '' and replacing @xmath137 with @xmath138 , we obtain a characterization of epistemic supported models .",
    "similarly , omitting the term `` stable , '' and replacing @xmath137 with @xmath139 yields a characterization of epistemic models . in each case ,",
    "one can decide whether a partition @xmath127 satisfies conditions ( 1)-(3 ) by polynomially many calls to an @xmath136-oracle ( this claim is evident for the case of epistemic models ; for the case of epistemic supported models , it follows from the fact that supported models semantics does not get harder when we allow disjunctions in the heads or rules ) .",
    "the problem to decide whether a non - disjunctive epistemic program has an epistemic stable model is @xmath135-complete .",
    "proof : our comments above imply that the problem is in the class @xmath135 .",
    "let @xmath140 , where @xmath141 is a dnf formula .",
    "the problem to decide whether @xmath55 is true is @xmath135-complete .",
    "we will reduce it to the problem in question and , consequently , demonstrate its @xmath135-hardness . to this end",
    ", we construct an epistemic program @xmath142 by including into @xmath143 the following clauses ( atoms @xmath144 , @xmath145 , @xmath146 , and @xmath147 , @xmath148 are fresh ) :    1 .",
    "@xmath149 ; and @xmath150 , for every @xmath146 2 .   @xmath151 ; and @xmath152 , for every @xmath146 3 .",
    "@xmath153 ; and @xmath154 , for @xmath148 4 .",
    "@xmath155 , where @xmath156 is a disjunct of @xmath141 , and @xmath157 and @xmath158 , for every @xmath159 5 .",
    "@xmath160 .",
    "let us assume that @xmath41 is an epistemic stable model of @xmath143 . in particular , @xmath68 .",
    "it must be that @xmath161 ( otherwise , @xmath162 has no stable models , that is , @xmath163 ) .",
    "let us define @xmath164 , and @xmath165 .",
    "it follows that @xmath162 consists of the following rules :    1 .",
    "@xmath166 , for @xmath167 , and @xmath145 , for @xmath168 2 .",
    "@xmath151 ; and @xmath152 , for every @xmath146 3 .",
    "@xmath153 ; and @xmath154 , for @xmath148 4 .",
    "@xmath155 , where @xmath156 is a disjunct of @xmath141 , and @xmath157 and @xmath158 , for every @xmath159 .",
    "since @xmath169 and @xmath68 , @xmath170 ( due to clauses of type ( 2 ) ) .",
    "it is clear that the program @xmath162 has stable models and that they are of the form @xmath171 , if that set does not imply @xmath144 through a rule of type ( 4 ) , or @xmath172 , otherwise , where @xmath173 is any subset of @xmath174 . as @xmath161 , there are no stable models of the first type .",
    "thus , the family of stable models of @xmath162 consists of all sets @xmath175 , where @xmath173 is an arbitrary subset of @xmath174 .",
    "it follows that for every @xmath176 , the set @xmath177 satisfies the body of at least one rule of type ( 4 ) . by the construction , for every @xmath176",
    ", the valuation of @xmath178 determined by @xmath24 and @xmath173 satisfies the corresponding disjunct in @xmath141 and so , also @xmath141 . in other words",
    ", @xmath179 is true .",
    "conversely , let @xmath180 be true .",
    "let @xmath24 be a subset of @xmath181 such that @xmath182 holds for every truth assignment of @xmath174 ( by @xmath182 , we mean the formula obtained by simplifying the formula @xmath143 with respect to the truth assignment of @xmath181 determined by @xmath24 ) .",
    "let @xmath41 consist of all sets of the form @xmath183 , where @xmath184 .",
    "it follows that @xmath162 consists of clauses ( 1)-(4 ) above , with @xmath170 .",
    "since @xmath185 holds , it follows that @xmath41 is precisely the set of stable models of @xmath162 .",
    "thus , @xmath41 is an epistemic stable model of @xmath143 .",
    "@xmath186    in the general case , the complexity goes one level up .",
    "[ thm:2 ] the problem to decide whether an epistemic program @xmath103 has an epistemic stable model is @xmath187-complete .",
    "proof : the membership follows from the earlier remarks . to prove the hardness part",
    ", we consider a qbf formula @xmath188 , where @xmath141 is a 3-cnf formula . for each atom @xmath189 ( @xmath146 and @xmath148 , respectively )",
    ", we introduce a fresh atom @xmath190 ( @xmath145 and @xmath147 , respectively ) .",
    "finally , we introduce three additional fresh atoms , @xmath144 , @xmath191 and @xmath192 .",
    "we now construct a disjunctive epistemic program @xmath143 by including into it the following clauses :    1 .",
    "@xmath193 ; and @xmath194 , for every @xmath189 2 .",
    "@xmath195 ; and @xmath196 , for every @xmath189 3 .   @xmath197 ; and @xmath198 4 .",
    "@xmath199 ; and @xmath200 , for every @xmath146 and @xmath148 5 .",
    "@xmath201 ; and @xmath202 , for every @xmath148 6 .",
    "@xmath203 , for every clause @xmath204 of @xmath141 , where @xmath205 and @xmath206 , for every @xmath207 7 .",
    "@xmath208 8 .",
    "@xmath209    let us assume that @xmath210 is true .",
    "let @xmath211 describe the truth assignment on @xmath212 so that @xmath213 holds ( we define @xmath214 in the proof of the previous result ) .",
    "we will show that @xmath143 has an epistemic stable model @xmath215 .",
    "clearly , @xmath216 , @xmath217 , and @xmath218 , @xmath219 , are true in @xmath41 . also , @xmath220 is true in @xmath41 .",
    "all other modal atoms in @xmath143 are false in @xmath41 .",
    "thus , @xmath162 consists of rules @xmath221 , for @xmath217 , @xmath190 , for @xmath222 and of rules ( 2)-(7 ) above .",
    "let @xmath223 be a stable model of @xmath162 containing @xmath191 .",
    "it follows that @xmath224 and so , @xmath225 . moreover , the gelfond - lifschitz reduct of @xmath162 with respect to @xmath223 consists of rules @xmath221 , for @xmath217 , @xmath190 , for @xmath222 , all @xmath3-free constraints of type ( 2 ) , rule @xmath191 , and rules ( 4)-(6 ) above , and @xmath223 is a minimal model of this program .",
    "let @xmath226 . by the minimality of @xmath223 , @xmath227 .",
    "since @xmath228 holds , @xmath229 holds , too .",
    "thus , let @xmath176 be a subset of @xmath174 such that @xmath230 is true .",
    "it follows that @xmath231 is also a model of the gelfond - lifschitz reduct of @xmath162 with respect to @xmath223 , contradicting the minimality of @xmath223 .",
    "thus , if @xmath223 is an answer set of @xmath162 , it must contain @xmath192 .",
    "consequently , it does not contain @xmath191 and so no rules of type ( 4)-(7 ) contribute to it .",
    "it follows that @xmath232 and , as it indeed is an answer set of @xmath162 , @xmath169 .",
    "thus , @xmath41 is a epistemic stable model , as claimed .",
    "conversely , let as assume that @xmath143 has an epistemic stable model , say , @xmath41",
    ". it must be that @xmath233 ( otherwise , @xmath162 contains a contradiction and has no stable models ) .",
    "let us define @xmath234 and @xmath235 .",
    "it follows that @xmath162 consists of the clauses :    1 .",
    "@xmath221 , for @xmath217 and @xmath190 , for @xmath236 2 .",
    "@xmath195 ; and @xmath196 , for every @xmath189 3 .",
    "@xmath197 ; and @xmath198 4 .",
    "@xmath237 ; and @xmath200 , for every @xmath146 and @xmath148 5 .",
    "@xmath238 ; and @xmath239 , for every @xmath148 6 .",
    "@xmath240 , for every clause @xmath204 of @xmath241 , where @xmath205 and @xmath206 , for every @xmath207 .",
    "@xmath242    we have that @xmath41 is precisely the set of stable models of this program . since @xmath68 , @xmath243 .",
    "if @xmath223 is a stable model of @xmath162 and contains @xmath191 , then it contains @xmath144 .",
    "but then , as @xmath244 , @xmath245 , a contradiction .",
    "it follows that there is no stable model containing @xmath191 .",
    "that is , the program consisting of the following rules has no stable model :    1 .",
    "@xmath221 , for @xmath217 and @xmath190 , for @xmath219 2 .",
    "@xmath246 ; and @xmath247 , for every @xmath146 and @xmath148 3 .",
    "@xmath248 ; and @xmath249 , for every @xmath148 4 .",
    "@xmath250 , for every clause @xmath204 of @xmath141 , where @xmath205 and @xmath206 , for every @xmath207 .",
    "5 .   @xmath251    but then , the formula @xmath252 is true and , consequently , the formula @xmath210 is true , too .",
    "@xmath186    for the other two epistemic semantics ,",
    "remark 1 implies that the problem of the existence of an epistemic model ( epistemic supported model ) is in the class @xmath135 .",
    "the @xmath135-hardness of the problem can be proved by similar techniques as those we used for the case of epistemic stable models .",
    "thus , we have the following result .",
    "[ thm:3 ] the problem to decide whether an epistemic program @xmath103 has an epistemic model ( epistemic supported model , respectively ) is @xmath135-complete .",
    "we will now present several problems which illustrate the advantages offered by the language of epistemic programs we developed in the previous two sections .",
    "whenever we use predicate programs , we understand that their semantics is that of the corresponding ground programs .",
    "first , we consider two graph problems related to the existence of hamiltonian cycles .",
    "let @xmath65 be a directed graph .",
    "an edge in @xmath65 is _ critical _ if it belongs to every hamiltonian cycle in @xmath65 .",
    "the following problems are of interest :    1 .   given a directed graph @xmath65 , find the set of all critical edges of @xmath65 2 .",
    "given a directed graph @xmath65 , and integers @xmath253 and @xmath254 , find a set @xmath255 of no more than @xmath253 new edges such that @xmath256 has no more than @xmath254 critical edges .",
    "let @xmath257 be any standard asp encoding of the hamiltonian cycle problem , in which predicates @xmath258 and @xmath259 represent @xmath65 , and a predicate @xmath260 represents edges of a candidate hamiltonian cycle .",
    "we assume the rules of @xmath257 are written from left to right so that they can be regarded as elements of @xmath23 .",
    "then , simply adding to @xmath257 the rule :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath261 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    yields a correct representation of the first problem .",
    "we write @xmath262 to denote this program . also , for a directed graph @xmath263 , we define    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath264 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we have the following result .",
    "let @xmath263 be a directed graph .",
    "if @xmath265 has no epistemic stable models , then every edge in @xmath65 is critical ( trivially ) .",
    "otherwise , the epistemic program @xmath266 has a unique epistemic stable model @xmath41 and the set @xmath267 is the set of critical edges in @xmath65 .",
    "proof ( sketch ) : let @xmath62 be the grounding of @xmath265 . if @xmath62 has no epistemic stable models , it follows that the `` non - epistemic '' part @xmath268 of @xmath62 has no stable models ( as no atom of the form @xmath269 appears in it ) .",
    "as @xmath268 encodes the existence of a hamiltonian cycle in @xmath65 , it follows that @xmath65 has no hamiltonian cycles .",
    "thus , trivially , every edge of @xmath65 belongs to every hamiltonian cycle of @xmath65 and so , every edge of @xmath65 is critical .",
    "thus , let us assume that @xmath41 is an epistemic stable model of @xmath62 .",
    "also , let @xmath270 be the set of all stable models of @xmath268 ( they correspond to hamiltonian cycles of @xmath65 ; each model contains , in particular , atoms of the form @xmath271 , where @xmath272 ranges over the edges of the corresponding hamiltonian cycle ) .",
    "the reduct @xmath273 consists of @xmath268 ( non - epistemic part of @xmath62 is unaffected by the reduct operation ) and of @xmath274 , a set of some facts of the form @xmath269 .",
    "thus , the stable models of the reduct are of the form @xmath275 , where @xmath276 . that is , @xmath277",
    ". let us denote by @xmath278 the set of the atoms @xmath269 , where @xmath272 belongs to every hamiltonian cycle of @xmath65 ( is critical ) .",
    "one can compute now that @xmath279 . since @xmath280 , @xmath281 .",
    "thus , @xmath266 has a unique epistemic stable model , as claimed .",
    "it also follows that the set @xmath267 is the set of critical edges in @xmath65 .",
    "@xmath186    to represent the second problem , we proceed as follows . first",
    ", we `` select '' new edges to be added to the graph and impose constraints that guarantee that all new edges are indeed new , and that no more than @xmath253 new edges are selected ( we use here _ lparse _ syntax for brevity ; the constraint can be encoded strictly in the language @xmath95 ) .",
    "_ _ _ _ _ _ _ _ _ _ _ _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath282 + @xmath283 + @xmath284 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    next , we define the set of edges of the extended graph , using a predicate @xmath285 :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath286 + @xmath287 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    finally , we define critical edges and impose a constraint on their number ( again , exploiting the _ lparse _ syntax for brevity sake ) :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath288 + @xmath289 . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we define @xmath143 to consist of all these rules together with all the rules of the program @xmath290 .",
    "we now have the following theorem .",
    "the proof is similar to that above and so we omit it .",
    "let @xmath65 be a directed graph .",
    "there is an extension of @xmath65 with no more than @xmath253 new edges so that the resulting graph has no more than @xmath254 critical edges if and only if the program @xmath291 has an epistemic stable model .    for another example",
    "we consider the unique model problem : given a cnf formula @xmath55 , the goal is to decide whether @xmath55 has a unique minimal model .",
    "the unique model problem was also considered by faber and woltran @xcite .",
    "we will show two encodings of the problem by means of epistemic programs .",
    "the first one uses the semantics of epistemic models and is especially direct .",
    "the other one uses the semantics of epistemic stable models .",
    "let @xmath55 be a propositional theory consisting of constraints @xmath292 , where @xmath31 s are literals .",
    "any propositional theory can be rewritten into an equivalent theory of such form .",
    "we denote by @xmath293 the formula obtained from @xmath55 by replacing every atom @xmath221 with the modal atom @xmath216 .",
    "for every theory @xmath294 consisting of constraints , @xmath55 has a least model if and only if the epistemic program @xmath295 has an epistemic model .",
    "proof : let us assume that @xmath55 has a least model .",
    "we define @xmath41 to consist of all models of @xmath55 , and we denote the least model of @xmath55 by @xmath223 .",
    "we will show that @xmath41 is an epistemic model of @xmath295 . clearly , for every @xmath296 , @xmath297 .",
    "similarly , for every @xmath298 , @xmath299 .",
    "thus , @xmath300}^{{{\\mathcal{a}}}}}=\\emptyset$ ] .",
    "consequently , @xmath301}^{{{\\mathcal{a } } } } } = f$ ] and so , @xmath41 is precisely the set of all models of @xmath301}^{{{\\mathcal{a}}}}}$ ] .",
    "thus , @xmath41 is an epistemic model .",
    "conversely , let @xmath41 be an epistemic model of @xmath295 .",
    "it follows that @xmath300}^{{{\\mathcal{a}}}}}=\\emptyset$ ] ( otherwise , @xmath301}^{{{\\mathcal{a}}}}}$ ] contains @xmath85 and @xmath41 would have to be empty , contradicting the definition of an epistemic model ) .",
    "thus , @xmath301}^{{{\\mathcal{a}}}}}=f$ ] and consequently , @xmath41 is the set of all models of @xmath55 .",
    "let @xmath302 and let @xmath303 be a rule in @xmath55 .",
    "then , @xmath304 is a rule in @xmath293 . as @xmath300}^{{{\\mathcal{a}}}}}=\\emptyset$ ] , @xmath305 thus , for some @xmath306 , @xmath307 , @xmath308 , or for some @xmath309 , @xmath310 , @xmath311 . in the first case , @xmath312 , in the latter , @xmath313 . in either case , @xmath223 is a model of rule ( [ eq17 ] ) .",
    "it follows that @xmath223 is a model of @xmath55 .",
    "let @xmath314 be a model of @xmath55 .",
    "then @xmath315 and , by the definition of @xmath223 , @xmath316 .",
    "thus , @xmath223 is a least model of @xmath55 .",
    "@xmath186    next , we will encode the same problem as an epistemic program under the epistemic stable model semantics .",
    "the idea is quite similar .",
    "we only need to add rules to generate all candidate models .    for every theory @xmath294 consisting of constraints",
    ", @xmath55 has a least model if and only if the epistemic program @xmath317 has an epistemic stable model .",
    "we note that an even simpler encoding can be obtained if we use _ lparse _ choice rules . in this case",
    ", we can replace @xmath318 with @xmath319 .",
    "we will now return to the original formalism of epistemic specifications proposed by gelfond @xcite ( under the restriction to epistemic programs we discussed here )",
    ". we will show that it can be expressed in a rather direct way in terms of our epistemic programs in the two - valued setting and under the epistemic supported - model semantics .",
    "the reduction we are about to describe is similar to the well - known one used to eliminate the `` strong '' negation from disjunctive logic programs with strong negation . in particular",
    ", it requires an extension to the language @xmath23 .",
    "specifically , for every atom @xmath320 we introduce a fresh atom @xmath190 and we denote the extended language by @xmath321 . the intended role of @xmath190 is to represent in @xmath321 the literal @xmath322 from @xmath23 . building on this idea ,",
    "we assign to each set @xmath37 of literals in @xmath23 the set @xmath323 in this way , sets of literals from @xmath23 ( in particular , three - valued interpretations of @xmath23 ) are represented as sets of atoms from @xmath321 ( two - valued interpretations of @xmath321 ) .",
    "we now note that the truth and falsity of a formula form @xmath23 under a three - valued interpretation can be expressed as the truth and falsity of certain formulas from @xmath321 in the two - valued setting .",
    "the following result is well known .",
    "[ prop:2 ] for every formula @xmath42 there are formulas @xmath324 such that for every set of literals @xmath37 ( in @xmath23 )    1 .",
    "@xmath44 if and only if @xmath325 2 .",
    "@xmath326 if and only if @xmath327    moreover , the formulas @xmath328 and @xmath329 can be constructed in polynomial time with respect to the size of @xmath20 .",
    "proof : this a folklore result .",
    "we provide a sketch of a proof for the completeness sake .",
    "we define @xmath329 and @xmath328 by recursively as follows :    1 .",
    "@xmath330 and @xmath331 , if @xmath332 2 .",
    "@xmath333 and @xmath334 3 .",
    "@xmath335 and @xmath336 ; the case of the conjunction is dealt with analogously 4 .",
    "@xmath337 and @xmath338 .",
    "one can check that formulas @xmath329 and @xmath328 defined in this way satisfy the assertion .",
    "@xmath186    we will now define the transformation @xmath339 that allows us to eliminate strong negation .",
    "first , for a literal @xmath340 , we now define @xmath341 furthermore , if @xmath33 is a simple modal literal or its default negation , we define @xmath342 and for an epistemic premise @xmath343 ( where each @xmath28 is a simple modal literal or its default negation ) we set @xmath344 next , if @xmath61 is an epistemic rule @xmath345 we define @xmath346 finally , for an epistemic program @xmath4 , we set @xmath347 we note that @xmath348 is indeed an epistemic program in the language @xmath95 ( according to our definition of epistemic programs ) .",
    "the role of the rules @xmath349 is to ensure that sets forming epistemic ( stable , supported ) models of @xmath348 correspond to consistent sets of literals ( the only type of set of literals allowed in world views ) .    given a three - valued possible structure @xmath41 , we define @xmath350 , and we regard @xmath351 as a two - valued possible - world structure .",
    "we now have the following theorem .",
    "let @xmath4 be an epistemic program according to gelfond .",
    "then a three - valued possible - world structure @xmath41 is a world view of @xmath4 if and only if a two - valued possible - world structure @xmath351 is an epistemic supported model of @xmath348 .",
    "proof ( sketch ) : let @xmath4 be an epistemic program according to gelfond , @xmath41 a possible - world structure and @xmath37 a set of literals .",
    "we first observe that the g - reduct @xmath57 can be described as the result of a certain two - step process .",
    "namely , we define the _ epistemic reduct _ of @xmath4 with respect to @xmath41 to be the disjunctive logic program @xmath352 obtained from @xmath4 by removing every rule whose epistemic premise @xmath33 satisfies @xmath105 , and by removing the epistemic premise from every other rule in @xmath4 .",
    "this construction is the three - valued counterpart to the one we employ in our approach .",
    "it is clear that the epistemic reduct of @xmath4 with respect to @xmath41 , with some abuse of notation we will denote it by @xmath104 , is a disjunctive logic program with strong negation .",
    "let @xmath143 be a disjunctive program with strong negation and @xmath37 a set of literals .",
    "by the _ supp - reduct _ of @xmath143 with respect to @xmath37 , @xmath353 , we mean the set of the heads of all rules whose bodies are satisfied by @xmath37 ( which in the three - valued setting means that every literal in the body not in the scope of @xmath98 is in @xmath37 , and every literal in the body in the scope of @xmath98 is not in @xmath37 ) .",
    "a consistent set @xmath37 of literals is a supported answer set of @xmath143 if @xmath354 ( this is a natural extension of the definition of a supported model @xcite to the case of disjunctive logic programs with strong negation ; again , we do not regard inconsistent sets of literals as supported answer sets ) .",
    "clearly , @xmath355 .",
    "thus , @xmath41 is a world view of @xmath4 according to the definition by gelfond if and only if @xmath41 is a collection of all supported answer sets of @xmath104 .",
    "we also note that by proposition [ prop:2 ] , if @xmath33 is an epistemic premise , then @xmath356 if and only if @xmath357 .",
    "it follows that @xmath358 . in other words , constructing the epistemic reduct of @xmath4 with respect to @xmath41 and then translating the resulting disjunctive logic program with strong negation into the corresponding disjunctive logic program without strong negation yields the same result as first translating the epistemic program ( in the gelfond s system ) into our language of epistemic programs and then computing the reduct with respect to @xmath351 .",
    "we note that there is a one - to - one correspondence between supported answer sets of @xmath104 and supported models of @xmath359 ( @xmath339 , when restricted to programs consisting of rules without epistemic premises , is the standard transformation eliminating strong negation and preserving the stable and supported semantics ) .",
    "consequently , there is a one - to - one correspondence between supported answer sets of @xmath104 and supported models of @xmath360 ( cf . our observation above ) .",
    "thus , @xmath41 consists of supported answer sets of @xmath104 if and only if @xmath351 consists of supported models of @xmath361 .",
    "consequently , @xmath41 is a world view of @xmath4 if and only if @xmath351 is an epistemic supported model of @xmath348 . @xmath186",
    "so far , we defined the notions of epistemic models , epistemic stable models and epistemic supported models only for the case of epistemic programs . however , this restriction is not essential .",
    "we recall that the definition of these three epistemic semantics consists of two steps .",
    "the first step produces the reduct of an epistemic program @xmath4 with respect to a possible - world structure , say @xmath41 .",
    "this reduct happens to be ( modulo a trivial syntactic transformation ) a standard disjunctive logic program in the language @xmath23 ( no modal atoms anymore ) .",
    "if the set of models ( respectively , stable models , supported models ) of the reduct program coincides with @xmath41 , @xmath41 is an epistemic model ( respectively , epistemic stable or supported model ) of @xmath4 .",
    "however , the concepts of a model , stable model and supported model are defined for _ arbitrary _ theories in @xmath23 .",
    "this is obviously well known for the semantics of models .",
    "the stable - model semantics was extended to the full language @xmath23 by ferraris @xcite and the supported - model semantics by truszczynski @xcite .",
    "thus , there is no reason precluding the extension of the definition of the corresponding epistemic types of models to the general case .",
    "we start be generalizing the concept of the reduct .",
    "let @xmath362 be an arbitrary theory in @xmath95 and let @xmath41 be a possible - world structure .",
    "the _ epistemic reduct _ of @xmath362 with respect to @xmath41 , @xmath363 in symbols , is the theory obtained from @xmath362 by replacing each maximal modal atom @xmath19 with @xmath91 , if @xmath99 , and with @xmath85 , otherwise .",
    "we note that if @xmath362 is an epistemic program , this notion of the reduct does not coincide with the one we discussed before .",
    "indeed , now no rule is dropped and no modal literals are dropped ; rather modal atoms are replaced with @xmath91 and @xmath85 .",
    "however , the replacements are executed in such a way as to ensure the same behavior .",
    "specifically , one can show that models , stable models and supported models of the two reducts coincide .",
    "next , we generalize the concepts of the three types of epistemic models .",
    "[ def14 ] let @xmath362 be an arbitrary theory in @xmath95 .",
    "a possible - world structure @xmath41 is an _",
    "epistemic model _",
    "( respectively , an _ epistemic stable model _ , or an _ epistemic supported model _ ) of @xmath4 , if @xmath41 is the set of models ( respectively , stable models or supported models ) of @xmath364 .    from the comments we made above , it follows that if @xmath362 is an epistemic program , this more general definition yields the came notions of epistemic models of the three types as the earlier one .",
    "we note that even in the more general setting the complexity of reasoning with epistemic ( stable , supported ) models remains unchanged .",
    "specifically , we have the following result .",
    "[ thm:4 ] the problem to decide whether an epistemic theory @xmath365 has an epistemic stable model is @xmath187-complete .",
    "the problem to decide whether an epistemic theory @xmath365 has an epistemic model ( epistemic supported model , respectively ) is @xmath135-complete .",
    "proof(sketch ) : the hardness part follows from our earlier results concerning epistemic programs . to prove membership , we modify proposition [ prop : char ] , and show a polynomial time algorithm with a @xmath135 oracle ( np oracle for the last two problems ) that decides , given a propositional theory @xmath270 and a modal formula @xmath19 ( with @xmath94 and not necessarily in @xmath23 ) whether @xmath366 ( respectively , @xmath367 , or @xmath368 ) .",
    "in this paper , we proposed a two - valued formalism of epistemic theories  subsets of the language of modal propositional logic .",
    "we proposed a uniform way , in which semantics of propositional theories ( the classical one as well as nonmonotonic ones : stable and supported ) can be extended to the case of epistemic theories .",
    "we showed that the semantics of epistemic supported models is closely related to the original semantics of epistemic specifications proposed by gelfond .",
    "specifically we showed that the original formalism of gelfond can be expressed in a straightforward way by means of epistemic programs in our sense under the semantics of epistemic supported models .",
    "essentially all that is needed is to use fresh symbols @xmath190 to represent strong negation @xmath322 , and use the negation operator of our formalism , @xmath369 or , in the shorthand , @xmath370 , to model the default negation @xmath371 .",
    "we considered in more detail the three semantics mentioned above .",
    "however , other semantics may also yield interesting epistemic counterparts .",
    "in particular , it is clear that definition [ def14 ] can be used also with the minimal model semantics or with the faber - leone - pfeifer semantics @xcite .",
    "each semantics gives rise to an interesting epistemic formalism that warrants further studies .",
    "in logic programming , eliminating strong negation does not result in any loss of the expressive power but , at least for the semantics of stable models , disjunctions can not be compiled away in any concise way ( unless the polynomial hierarchy collapses ) . in the setting of epistemic programs ,",
    "the situation is similar .",
    "the strong negation can be compiled away .",
    "but the availability of disjunctions in the heads and the availability of epistemic premises in the bodies of rules are essential .",
    "each of these factors separately brings the complexity one level up .",
    "moreover , when used together under the semantics of epistemic stable models they bring the complexity two levels up .",
    "this points to the intrinsic importance of having in a knowledge representation language means to represent indefiniteness in terms of disjunctions , and what is known to a program ( theory )  in terms of a modal operator @xmath18 .",
    "this work was partially supported by the nsf grant iis-0913459 .",
    "faber , w. , woltran , s. : manifold answer - set programs for meta - reasoning . in erdem ,",
    "e. , lin , f. , schaub , t. , eds .",
    ": logic programming and nonmonotonic reasoning , 10th international conference , lpnmr 2009 .",
    "volume 5753 of lecture notes in computer science . , springer ( 2009 ) 115128                  truszczynski , m. : reducts of propositional theories , satisfiability relations , and generalizations of semantics of logic programs .",
    "artificial intelligence ( 2010 ) in press , available through science direct at http://dx.doi.org/10.1016/j.artint.2010.08.004 .",
    "faber , w. , leone , n. , pfeifer , g. : recursive aggregates in disjunctive logic programs : semantics and complexity . in : proceedings of the 9th european conference on artificial intelligence ( jelia 2004 ) .",
    "volume 3229 of lnai . , springer ( 2004 ) 200  212"
  ],
  "abstract_text": [
    "<S> in 1991 , michael gelfond introduced the language of epistemic specifications . </S>",
    "<S> the goal was to develop tools for modeling problems that require some form of meta - reasoning , that is , reasoning over multiple possible worlds . despite their relevance to knowledge representation , </S>",
    "<S> epistemic specifications have received relatively little attention so far . in this paper </S>",
    "<S> , we revisit the formalism of epistemic specification . </S>",
    "<S> we offer a new definition of the formalism , propose several semantics ( one of which , under syntactic restrictions we assume , turns out to be equivalent to the original semantics by gelfond ) , derive some complexity results and , finally , show the effectiveness of the formalism for modeling problems requiring meta - reasoning considered recently by faber and woltran . </S>",
    "<S> all these results show that epistemic specifications deserve much more attention that has been afforded to them so far . </S>"
  ]
}
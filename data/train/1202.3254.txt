{
  "article_text": [
    "service - oriented architecture in wsns@xcite makes it possible to rapidly develop new applications . in a service - oriented wsn",
    ", a typical application requires several different services , e.g. , data aggregation , data processing , decoding , which are provided by service providers that are also sensors .",
    "the task of service composition is to assign each required service to an appropriate service provider according to certain criteria .",
    "service composition with various performance metrics @xcite , e.g. , load balance , end - to - end delay and resource , have been well studied .",
    "service composition in wsns has also recently been studied in @xcite .",
    "@xcite studies the minimum - cost service placement based on service composition graphs with a tree structure .",
    "@xcite considers the optimal placement of filters ( services ) with different selectivity rates .",
    "habitat and environmental monitoring represent a class of wsn applications .",
    "the queries in such applications in general are _ persistent _ ( or _ recurrent _ ) queries which need to be processed repetitively with a given frequency for a given duration @xcite , e.g. , an application requests receiving images in which the monitored area is dimly lit from 9:00am to 5:00pm@xcite .",
    "three services are required in such a persistent query : service @xmath0 checking for dim images , service @xmath1 checking for `` sufficient '' motion between successive frames , and service @xmath2 fusing the identified motions(e.g .",
    ", the appearance of a suspect ) . in a service - oriented wsn ,",
    "such services are provided by sensor nodes in the network , thus , in - network processing is feasible , to reduce the possibly massive amounts of raw data .    in wsns ,",
    "energy consumption is a critical issue and sleep scheduling has been well studied as a conservative approach to save energy @xcite .",
    "when a node is in sleep mode , all its provided services are not available , which may cause disruption to service composition .",
    "@xcite studied a cross - layer sleep scheduling design in a service - oriented wsn which considers system requirement on the number of active service providers for each service at any time interval .    in a service - oriented wsn ,",
    "a query routing procedure which routes requesting services towards service providers is necessary . for a persistent query",
    ", the query routing procedure might need to be conducted many times during its lifetime due to the sleep schedule in the mac layer , which might introduce more energy consumption .",
    "take the query that starts at 09:00am and ends at 5:00pm with a frequency of 100s as an example . in fig .",
    "[ example1](a ) , at 09:00am , a path is chosen to provide the requested services , while after 100s one of the sensors in this path switches into sleep mode , which results in unavailability of the service composition path .",
    "it is necessary to conduct the query routing procedure again to find a new service composition path as shown in fig .",
    "[ example1](b ) . in this paper",
    ", we aim to use the minimum number of service composition solutions during a persistent query s lifetime such that the energy consumption caused by repetitively conducting query routing procedure is minimized .",
    "once the minimum number of required service composition solutions is derived , we then select the service composition solutions with minimum transmission cost .",
    "the contribution of the proposed work is summarized as follows :    * we propose a service - oriented query routing protocol .",
    "traditional routing in wsns only involves finding a path from source sensors to a sink .",
    "service - oriented query routing protocol needs to ensure that the path from source sensors to the sink includes service providers , which imposes new challenges to routing in wsns . *",
    "we propose an optimal greedy algorithm to minimize the number of required service composition solutions during a persistent query s lifetime , which can minimize the energy consumption caused by conducting the service - oriented query routing protocols .",
    "* we propose a dynamic programming algorithm to minimize the total service composition cost which aims to reduce the transmission cost in executing a query .     in a service - oriented wsn , width=240 ]    the rest of the paper",
    "is organized as follows . the network architecture and problem definition",
    "are given in section  [ network ] and  [ prob ] respectively .",
    "the algorithms and simulation results are presented in section  [ algorithm ] and  [ simulation ] respectively .",
    "we conclude the paper in section  [ conclusion ] .",
    "in our network architecture , the service providers form a service provider overlay network as shown in fig .",
    "[ model ] .",
    "two service providers in the service provider overlay network may be multiple hops away from each other and the communication between them can be a multi - hop communication in the same wsn or through existing 802.11 wlan .",
    "the service - oriented architecture at the sink has the following three layers :    * _ service composition query layer_. this layer maps an application s query into a _ service composition query _ which specifies required services and their invocation order .",
    "for example , the aforementioned query will be converted to a service composition query with services @xmath0 , @xmath1 and @xmath2 . * _ service layer_. this layer has the service information provided by the sensors in service provider overlay network .",
    "we also assume that service layer has the sleep schedule information of service providers in service provider overlay network . * _ service composition layer_. this layer finds the service composition solutions for service composition queries , which is the problem to be studied in this paper . for a persistent query",
    ", the service composition layer may find several service composition solutions during its lifetime since some service composition solutions may not always be feasible due to sleep schedule .",
    "the service composition solutions are maintained in a _ service composition table _ as shown in fig .",
    "[ model ] .",
    "the service composition solution only specifies a service provider for each required service in a service composition query .",
    "once the service composition solutions are identified , a routing protocol is invoked to find paths from source sensors to the first service provider in the service composition solution and find paths between any two adjacent service providers . in this paper , we propose the following service - oriented query routing protocol :    * the sink broadcasts a _ service composition query routing _ message which includes service composition solution , duration , and interest .",
    "such a message will reach all service providers in service provider overlay network . * upon receiving a _ service composition query routing _",
    "message , if a service provider is the first service provider in the service composition solution , it will broadcast the interest to the sensor network .",
    "source sensors can then send the data to the first service provider using any data - driven routing protocol in wsns .",
    "thus , service composition is transparent to source sensors . * upon receiving a _ service composition query routing _",
    "message , if a service provider is in the service composition solution but not the first service provider , it needs to find a path to its upstream service provider in the service composition solution .",
    "this can be done by any routing protocol in wsns .    during the lifetime of a persistent query",
    ", it may be necessary to switch the service composition solutions due to the sleep schedule of service providers .",
    "the service - oriented query routing protocol needs to be conducted again when the service composition solution changes , which consumes more energy .",
    "the rest of the paper focuses on the service composition with minimum cost to avoid the frequent change of service composition solutions during a persistent query s lifetime .",
    "notice that the service - oriented query routing protocol is a distributed routing protocol .",
    "the sink only generates the service composition solutions which determines an appropriate service provider for each required service . to make such a decision",
    ", the sink only needs to maintain the services availability and the sleep schedule information of each service provider . in a large - scale wsn ,",
    "service providers are only a small portion of the whole network .",
    "we believe that maintaining such information at the sink is well - paid when the duration of a persistent query is long .",
    "let @xmath3 be a persistent service composition query and @xmath4 be service providers .",
    "let @xmath5 be the set of services that sensor @xmath6 can provide and @xmath7 be the set of sensors that can provide service @xmath8 .",
    "fig  [ example2](a ) shows the service availability at the service layer .",
    "given the duration @xmath9 and the frequency @xmath10 of a persistent query , the query should be executed for @xmath11 times during its duration @xmath9 and we assume that @xmath11 is an integer .",
    "let @xmath12 be the start time of @xmath13-th execution of the persistent query where @xmath14 .",
    "given the sleep schedule information of the service providers at the service layer , the sink can derive each service provider s availability at @xmath12 .",
    "let @xmath15 be 1 if service provider @xmath6 is active at @xmath12 , otherwise , set @xmath15 be 0 .",
    "figure  [ example2](b ) gives the service provider availability at the service layer .    with the service availability and the service provider availability information",
    ", the service composition layer can derive a service composition solution at @xmath12 for @xmath16 . as shown in fig .",
    "[ example2](c ) , the service composition solution @xmath17 is valid at @xmath18 and @xmath19 , @xmath20 is valid at @xmath21 and @xmath22 and so on . during this persistent query s lifetime ,",
    "4 service composition solutions are required and thus the service - oriented query routing protocol needs to be conducted 4 times , which consumes energy .",
    "this paper aims to minimize the number of service composition solutions for a persistent query .     in a service - oriented wsn , width=268 ]",
    "let @xmath23 be 1 if the service composition solution at @xmath12 is different from that at @xmath24 , otherwise let @xmath23 be 0",
    ". then @xmath25 represents total number of service composition solutions during a persistent query s lifetime , which needs to be minimized .",
    "under such an objective , a service composition solution may be used continuously in order to reduce the energy consumed by frequently invoking service - oriented query routing protocol .",
    "although some service providers may be used continuously , this will not decrease the longevity of network . since if a service provider is to be active , it has to provide services for the system according to sleep scheduling .",
    "though the service - oriented query routing procedure is the major source of energy consumption , the transmission of the data from the source sensor to the sink also consumes energy .",
    "two service providers in the service provider overlay network may be multiple hops away and if the communication between them is through the same service - oriented wsn , relay sensors may also be in sleep mode .",
    "thus , even a service composition solution can be used continuously over multiple executions , a local routing discovery procedure may be invoked between two service providers due to the sleep scheduling .",
    "we use average transmission cost between two service providers to characterize such energy consumption caused by the local routing discovery between two service providers .        besides minimizing the number of service composition solutions during a persistent query s lifetime , it is also important to minimize total transmission cost . in fig .",
    "[ compositioncost ] , there are two sets of service composition solutions for a persistent query and both include 4 service composition solutions during the persistent query s lifetime .",
    "thus , these two sets of service composition solutions consumes the same energy caused by service - oriented query routing procedure . in the first set ,",
    "@xmath26 will be used for 3 times , twice , 3 times and twice respectively with a total cost of 184 . in the second set , @xmath26 will be used for twice , 3 times , 3 times and twice respectively with a total cost of 174 .",
    "thus , the second set of service composition solutions will be more energy efficient .    in this paper ,",
    "firstly , we aim to minimize the number of service composition solutions during a persistent query s lifetime .",
    "such a problem is referred to as problem * p1*. secondly , we need to minimize the total cost of the service composition solutions .",
    "such a problem is referred to as problem * p2*.",
    "[ algorithm ] in this section , we first approach problem * p1*. then based on the result of * p1 * , we approach the second problem * p2*.      let @xmath27 be the number of executions that service provider @xmath6 can be continuously available from @xmath13-th execution ( including at @xmath13-th execution ) .",
    "for example , if @xmath6 s availability at all execution instances of a persistent query is given as @xmath28 , @xmath29 is 2 since @xmath6 can be available at @xmath30st and @xmath31nd execution , @xmath32 is 0 as @xmath6 is not available at @xmath33rd execution .",
    "the greedy algorithm which is shown in algorithm .",
    "[ greedy ] is always to select the service provider with maximum @xmath27 for each @xmath8 in @xmath13-th execution such that the solution can be continuously used for the maximum number of times .",
    "after the service composition solution is determined for @xmath13-th execution , the number of times that this solution can be used is determined by the minimum @xmath27 among all selected service providers .",
    "let @xmath34 be the set of selected service providers for @xmath13-th execution and @xmath35 be the number of times that @xmath36-th service composition solution can be continuously used .",
    "the worst case running time of this greedy algorithm is o(@xmath37 ) .",
    "@xmath38 gives the minimum number of service composition solutions during a persistent query s lifetime .",
    "we now prove the optimality of the greedy algorithm .",
    "let @xmath25 be the solution obtained from the greedy algorithm where @xmath39 .",
    "let @xmath40 be an optimal solution where @xmath41 .",
    "[ lemma ] for any sequence @xmath42 and @xmath43 where @xmath44 , there must always exists @xmath45 .",
    "we use induction to prove this lemma .",
    "firstly , for @xmath46 , it is obvious that @xmath47 .",
    "when @xmath48 , as greedy algorithm always selects the provider with maximum @xmath27 for each service , the value of @xmath49 must be no less than 0 , so @xmath50 .",
    "assume that when @xmath51 we have @xmath52 .",
    "for @xmath53 , in the given optimal solution , there is a service composition solution which can be continuously used from @xmath54 to @xmath55 . if @xmath56 , then we have @xmath57 ; if @xmath58 , then we must have @xmath59 since the greedy algorithm always selects the service providers which can provide longest continuous services . in both cases",
    ", we have @xmath60 .",
    "thus , lemma holds when @xmath53 .",
    "[ theorem1]@xmath61 , the solution obtained from the greedy algorithm , must be optimal .",
    "we prove it by contradiction .",
    "assume that there exists @xmath62 , then @xmath63 .",
    "according to lemma 1 , we also have @xmath64 .",
    "the relationship among @xmath65 , @xmath66 , and @xmath67 is shown in fig .  [ compare ] .     and",
    "@xmath68,height=57 ]    [ compare ]    fig .",
    "[ compare ] denotes that there exists a service composition solution which can cover executions from @xmath67 to @xmath65 .",
    "according to our greedy algorithm , we can find a solution which can be continuously used from @xmath67-th execution to the last execution .",
    "thus @xmath69 , which conflicts the assumption .      in the following , we approach problem * p2 * which minimizes the total routing cost based on the result of problem * p1*.    let @xmath70 be the set of feasible service composition solutions at @xmath13-th execution which can be continuously used for the following @xmath71 executions . for any service composition solution @xmath72 , let @xmath73 be transmission cost if @xmath74 is selected to be executed once . let @xmath75 .",
    "@xmath76 can be obtained by finding a shortest path in an auxiliary graph @xmath77 which is constructed as follows :    * @xmath78 is the set of nodes consisting of @xmath79 layers @xmath80 and the @xmath81 layer @xmath82 contains all service providers which can continuously provide @xmath8 from @xmath13-th execution to @xmath83-th execution , e.g. , if @xmath6 can provide @xmath8 and it is available from @xmath13-th execution to @xmath83-th execution , node @xmath84 .",
    "* let @xmath85 be the link set such that there is a direct link @xmath86 whenever @xmath87 and @xmath88 for @xmath89 .",
    "the cost of @xmath90 is the shortest path cost from @xmath6 to @xmath91 in the physical network .",
    "* add two special nodes @xmath92 and @xmath93 such that @xmath94 is the @xmath95 layer and @xmath96 is the @xmath97 layer .",
    "link @xmath92 to each node in @xmath98 and link each node in @xmath99 to @xmath93 with cost 0 .",
    "let @xmath100 be the minimum total cost from @xmath13-th execution to the last execution if @xmath36-th service composition solution starts at @xmath13-th execution .",
    "then we have the following recursion : @xmath101 where @xmath102 .",
    "we have the following boundary condition : @xmath103 for @xmath104 .",
    "the dynamic programming is given in algorithm .",
    "[ dynamic ] in which @xmath105 is the minimum total cost for the persistent query and @xmath106 $ ] stores @xmath36-th service composition solution .",
    "the time complexity of the algorithm is @xmath107 .",
    "in this section , we first introduce the design of our simulation . the number of service providers @xmath108 of each service is randomly generated between @xmath109 $ ] .",
    "we then randomly generate @xmath108 service providers for @xmath8 from @xmath110 .",
    "for each @xmath6 , we also randomly generate its availability at each execution . then we validate whether each @xmath8 can be provided by at least one active service provider at each execution . if infeasible , the instance is dropped from our simulation .    to compare the performance of our algorithms",
    ", we also introduce a baseline algorithm named _",
    "min - cost - based _ algorithm which aims to select the service composition solution with minimum transmission cost for each execution .",
    "we compare the number of service composition solutions during a persistent query s lifetime and the total transmission cost of our algorithms with _ min - cost - based _",
    "algorithm respectively .",
    "[ simulation ]    , height=153 ]    in the first set of experiments , we evaluate the performance of algorithms by varying @xmath11 in @xmath111 for @xmath112 .",
    "the effectiveness of greedy algorithm for * p1 * is tested by comparing with _ min - cost - based _ algorithm . as shown in fig .",
    "[ solutions ] , the number of service composition solutions during persistent query s lifetime in greedy algorithm is much less than that in _ min - cost - based _ algorithm . for example , with @xmath113 , the number of service composition solutions in our greedy algorithm is only 21 while it is 32 in _ min - cost - based _ algorithm .",
    "the difference between two algorithms increases with the number of query s executions , which demonstrates the effectiveness and scalability of our work .",
    "[ cost1 ] illustrates that total service composition cost obtained from dynamic programming based on the result of the greedy algorithm is higher than that obtained from _ min - cost - based _ algorithm . as we explained in section  [ prob ] ,",
    "the energy consumed in service - oriented query routing protocol is much higher than that in conducting service composition .",
    "thus , though the solution obtained from our algorithms may consume more energy in the service composition phase , it consumes much less energy in service - oriented query routing phase which is the major energy consumption source in a persistent query .    in the second set of our experiments",
    ", we study in detail the impact of the number of required services on the total service composition cost and the impact of the number of service providers on the total service composition cost .",
    "we have selected three scenarios @xmath114 , @xmath115 , @xmath116 by varying @xmath79 in @xmath117 $ ] . as shown in fig .",
    "[ cost2 ] , the total service composition cost increases with the number of required services @xmath79 since more service providers may be involved in a service composition .",
    "given @xmath79 , the service composition cost is lower in a network with more service providers . in a network with more service providers , more feasible service composition solutions are possible and our dynamic programming algorithm can find the service composition solution with minimum cost .    ,",
    "[ conclusion ] this paper studies service composition in service - oriented wsns with persistent queries .",
    "we aim to provide service composition solutions during a persistent query s lifetime such that the involved routing update cost and transmission cost is minimized .",
    "the optimality of greedy algorithm and dynamic programming provides the service composition solutions for persistent queries with the minimum energy consumption .",
    "r. ha , p .- h . ho and x.s .",
    "shen ,  cross - layer application - specific wireless sensor network design with single - channel csma mac over sense - sleep trees \" , accepted by elsevier journal : computer communications ."
  ],
  "abstract_text": [
    "<S> service - oriented wireless sensor network(wsn ) has been recently proposed as an architecture to rapidly develop applications in wsns . in wsns </S>",
    "<S> , a query task may require a set of services and may be carried out repetitively with a given frequency during its lifetime . </S>",
    "<S> a service composition solution shall be provided for each execution of such a persistent query task . due to the energy saving strategy </S>",
    "<S> , some sensors may be scheduled to be in sleep mode periodically . </S>",
    "<S> thus , a service composition solution may not always be valid during the lifetime of a persistent query . </S>",
    "<S> when a query task needs to be conducted over a new service composition solution , a routing update procedure is involved which consumes energy . in this paper , we study service composition design which minimizes the number of service composition solutions during the lifetime of a persistent query . </S>",
    "<S> we also aim to minimize the total service composition cost when the minimum number of required service composition solutions is derived . a greedy algorithm and a dynamic programming algorithm are proposed to complete these two objectives respectively . </S>",
    "<S> the optimality of both algorithms provides the service composition solutions for a persistent query with minimum energy consumption .    </S>",
    "<S> * keywords : * service composition , wireless sensor network , routing , query . </S>"
  ]
}
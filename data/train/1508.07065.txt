{
  "article_text": [
    "a node - capacitated undirected network is a quadruple @xmath9 of node set @xmath10 , ( undirected ) edge set @xmath11 , a specified subset @xmath12 of nodes , called _",
    "terminals _ , and a nonnegative integer - valued node capacity @xmath13 on nonterminal nodes . an _",
    "@xmath12-path _ is a path connecting distinct terminals .",
    "a ( node - capacitated ) _ multiflow _ is a pair @xmath14 of a set @xmath15 of @xmath12-paths and a flow - value function @xmath16 satisfying the node - capacity constraint : @xmath17 the total flow - value of a multiflow @xmath18 is defined as @xmath19 .",
    "a multiflow is called _ maximum _ if it has the maximum total flow - value among all possible multiflows .",
    "a multiflow @xmath20 is said to be _ integral _ if @xmath21 is integer - valued , and _ half - integral _ if @xmath22 is integer - valued .    in this paper , we address the problem of finding a maximum multiflow in a node - capacitated network .",
    "this multiflow problem appeared in the work by garg , vazirani , and yannakakis  @xcite on an approximation algorithm for node - multiway cut .",
    "in fact , the lp - dual of our multiflow problem is a natural lp - relaxation of the _ minimum node - multiway cut problem _ ; see also ( * ? ? ?",
    "* section 19.3 ) .",
    "they showed that this lp - dual always has a half - integral optimal solution .",
    "the half - integrality of the primal problem , i.e. , the existence of a half - integral maximum multiflow , was later shown by pap  @xcite .",
    "he also showed that a half - integral maximum multiflow can be found in strongly polynomial time . in these works ,",
    "the polynomial time solvability depends on the use of the ellipsoid method .",
    "thus it is natural to seek a combinatorial polynomial time algorithm . for the case of unit node - capacity ( @xmath23 for all @xmath24 ) ,",
    "babenko  @xcite developed a combinatorial @xmath25 time algorithm to find a half - integral maximum multiflow , where @xmath1 is the number of nodes and @xmath2 is the number of edges .",
    "for general node - capacity , babenko and karzanov  @xcite developed a combinatorial weakly polynomial time algorithm to find a half - integral maximum multiflow .",
    "their algorithm runs in @xmath26 time , where @xmath27 is the time complexity of solving the max - flow problem in a network with @xmath1 nodes , @xmath2 edges , and the maximum edge - capacity @xmath28 .",
    "the main result of this paper is the first combinatorial _ strongly _ polynomial time algorithm to solve the maximum node - capacitated multiflow problem .",
    "our algorithm uses , as a subroutine , an algorithm of solving the _ maximum submodular flow problem _ ; see ( * ? ? ?",
    "* section 5.5 ( c ) ) .",
    "let @xmath29 denote the time complexity of solving the maximum submodular flow problem on a network with @xmath1 nodes , @xmath2 edges , and the time complexity @xmath7 of computing the exchange capacity of the submodular function describing the problem .",
    "[ thm : main ] there exists an @xmath30-time algorithm to find a half - integral maximum multiflow and a half - integral optimal dual solution in a network of @xmath1 nodes , @xmath2 edges , and @xmath3 terminals .",
    "the current fastest maximum submodular flow algorithm is the push - relabel algorithm due to fujishige and zhang  @xcite of the time complexity @xmath31 ; see the survey @xcite on submodular flow algorithms .",
    "thus we can solve the problem in @xmath32 time .",
    "[ [ application-1-node - multiway - cut . ] ] application 1 : node - multiway cut .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ node - multiway cut _ is a subset @xmath33 of nonterminal nodes such that the deletion of @xmath34 makes every pair of distinct terminals unreachable , or equivalently , @xmath34 meets every @xmath12-path .",
    "the _ capacity _ of a node - multiway cut @xmath34 is defined as @xmath35 .",
    "the _ minimum node - multiway cut problem _ asks to find a node - multiway cut with the minimum capacity .",
    "this well - known np - hard problem is naturally formulated as the following @xmath36-integer program : @xmath37 the natural lp - relaxation obtained by relaxing @xmath38 into @xmath39 is nothing but the lp - dual of our multiflow problem . as mentioned above , garg , vazirani , and yannakakis  @xcite proved that a half - integral optimal lp solution @xmath40 always exists , and is obtained from any optimal lp solution by a simple rounding procedure ; see ( * ? ? ?",
    "* section 19.3 ) .",
    "then the set of nodes @xmath41 with @xmath42 is a 2-approximation solution of the minimum node - multiway cut problem .",
    "this rounding algorithm needs an optimal lp solution , which is now obtained by our algorithm . to the best of our knowledge ,",
    "this is the first combinatorial strongly polynomial time implementation of the @xmath43-approximation algorithm .",
    "just recently , chakuri and madan  @xcite devised a simple method to round any feasible lp solution into a multiway cut of capacity within factor @xmath43 . combining this rounding method with a fast fptas for multiflow  ( e.g. , @xcite )",
    ", they obtain a considerably fast @xmath44-approximation algorithm ( with running time dependent of @xmath45 ) .",
    "[ [ application-2-integral - multiflow . ] ] application 2 : integral multiflow .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our algorithm is also useful in the problem of finding a maximum integral multiflow .",
    "this problem is a capacitated version of openly - disjoint @xmath12-paths packing problem considered by mader  @xcite ( that corresponds to the case of @xmath23 @xmath46 ) .",
    "pap  @xcite established the strongly polynomial time solvability of the maximum integral multiflow problem .",
    "the first step of his algorithm is to find a maximum half - integral multiflow .",
    "the second step is to construct and solve an instance of the openly - disjoint @xmath12-path packing problem ( on the graph with size polynomial in the numbers of edges and nodes in the original network ) . finally , combining the integer part of the half - integral multiflow with a solution of the packing problem , one obtains a maximum integer multiflow .",
    "the second step can be done by several combinatorial polynomial time algorithms , including  @xcite and ( * ? ? ?",
    "* section 73.1a ) . our algorithm can be used in the first step , and makes the whole algorithm fully combinatorial .    [",
    "[ outline . ] ] outline .",
    "+ + + + + + + +    let us outline our algorithm and the ideas behind it , as well as the structure of the paper .",
    "our algorithm is designed on the basis of the following two ingredients .",
    "one is a combinatorial duality theory for a class of node - capacitated multiflow problems  @xcite .",
    "the other is a developing theory of discrete convex functions on certain graph structures  @xcite , which aims to extend concepts in _ discrete convex analysis ( dca ) _",
    "( murota  @xcite ) to tackle further various combinatorial optimization problems beyond network flows , matroids , and submodular functions .",
    "we will utilize these theories in a self - contained way . in section  [ sec : multiflow ] , following  @xcite we formulate the dual of our multiflow problem as a facility location problem on a tree .",
    "this formulation gives a fruitful combinatorial interpretation of the lp - dual problem  ( [ eqn : lp - dual ] ) , and brings a simple combinatorial algorithm to find a half - integral optimal multiflow from a given dual optimum , under a certain nondegeneracy assumption .",
    "we will deal with a perturbed problem satisfying this nondegeneracy assumption .",
    "our goal is to solve this perturbed problem efficiently .",
    "we will see that the location problem is further formulated as an optimization over a certain discrete structure , and the objective is an _",
    "l - convex function on a euclidean building _ in the sense of  @xcite .",
    "this class of discrete convex functions shares many analogous properties with l - convex functions in dca . in particular , as in the case of dca , there is a natural descent algorithm , called the _ steepest descent algorithm _ , to minimize our l - convex function @xmath47 . for each point @xmath48 ,",
    "the steepest descent algorithm chooses a point @xmath49 ( _ steepest direction _ ) from a _ discrete neighborhood _ of @xmath48 with smallest @xmath50 .",
    "if @xmath51 , then @xmath48 is guaranteed to be optimal . otherwise , i.e. , @xmath52 , replace @xmath48 by @xmath49 , and repeat . in section  [ sec : algo ]",
    ", we will implement this conceptually simple algorithm .",
    "we will prove that in our case a steepest direction at each point can be found by solving one maximum submodular flow problem .",
    "this part is the heart of our analysis . as a consequence",
    ", we obtain an algorithm in a simple form as follows :    * from a dual solution @xmath48 , construct and solve an instance of the maximum submodular flow problem . *",
    "if the minimal minimum cut consists only of the source , then @xmath48 is optimal , and an optimal multiflow is constructed from any maximum submodular flow .",
    "otherwise the minimal minimum cut gives a steepest direction @xmath49 of the neighborhood at  @xmath48 .",
    "replace @xmath48 by @xmath49 , and go to 1 .",
    "our maximum submodular flow problem is defined by a disjoint sum of submodular functions on @xmath53-element sets .",
    "this enables us to compute the exchange capacity in constant time .",
    "moreover , the number of iterations is estimated by the _ geodesic descent property _ ( theorem  [ thm : bound ] ) of the steepest descent algorithm .",
    "this intriguing property says that a trajectory of the algorithm forms a geodesic to optimal solutions with respect to a certain @xmath54-metric on the domain .",
    "we know in advance the range where an optimum exists , and the diameter of the range is bounded by @xmath55 relative to the above metric . consequently the number of iteration is bounded by @xmath55 .",
    "it should be noted that our algorithm design includes an interesting new technique of reducing bisubmodularity to submodularity .",
    "this technique and related arguments , including basics on submodularity , are summarized in section  [ sec : pre ] .",
    "actually step 1 of the above algorithm is essentially the feasibility check of a _",
    "bisubmodular flow _",
    "problem , that is , finding a ( fractional ) bidirected flow with the flow - boundary constrained to a bisubmodular polyhedron .",
    "this seemingly natural class of problems has not been well - studied so far .",
    "it is well - known that ( fractional ) bidirected flows are easily manipulated by ordinary flows in a _ skew - symmetric network",
    "_ obtained by doubling nodes and edges .",
    "we generalize this doubling construction to bisubmodular functions .",
    "we give a condition for a bisubmodular function @xmath56 to be extended to a submodular function @xmath57 on a larger set , so that the bisubmodular polyhedron of @xmath56 is a projection of the base polyhedron of @xmath57 .",
    "we show that a certain bisubmodular function on a 3-element set , which represents the flow - conservation and the node - capacity constraints on a node of degree 3 , has such a submodular extension on a 6-element set .",
    "our bisubmodular flow problem is described by the disjoint sum of these bisubmodular functions , and can be reduced to the submodular flow problem as mentioned above .",
    "[ [ notation . ] ] notation .",
    "+ + + + + + + + +    let @xmath58 , @xmath59 , @xmath60 , and @xmath61 denote the sets of reals , nonnegative reals , integers , and nonnegative integers , respectively .",
    "the infinity element @xmath62 is treated as @xmath63 and @xmath64 for @xmath65 .",
    "the set of all functions from a set @xmath10 to a set @xmath66 is denoted by @xmath67 . for a function @xmath68 ,",
    "let @xmath69 . for a function @xmath70 and a subset @xmath71 ,",
    "let @xmath72 denote @xmath73 .",
    "the function value @xmath74 will also be denoted by @xmath75 if no confusion occurs . for a ( directed or undirected ) graph @xmath76 , an edge from @xmath41 to @xmath77",
    "is denoted by @xmath78 . for a subset @xmath34 of nodes , let @xmath79 denote the set of all edges leaving @xmath34 . for an undirected graph @xmath80 with a specified edge - length ,",
    "let @xmath81 denote the shortest path metric on the vertex set with respect to the edge - length . in the following ,",
    "graphs or networks are supposed to have no multiple edges and loops .",
    "[ [ signed - set - and - transversal . ] ] signed set and transversal .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ signed set _",
    "@xmath82 is the product @xmath83 of a set @xmath10 and the sign @xmath84 .",
    "elements @xmath85 and @xmath86 of @xmath82 are simply denoted by @xmath87 and @xmath88 , respectively .",
    "the _ signed extension _ of a set @xmath10 is defined as the signed set @xmath83 and is denoted by @xmath89 .",
    "for @xmath90 , let @xmath91 and @xmath92 . also for @xmath93 , let @xmath94 and @xmath95 .",
    "a subset @xmath34 of @xmath89 is called _ transversal _ if @xmath96 for all @xmath97 , and is called _ co - transversal _ if @xmath98 for all @xmath97",
    ". for @xmath99 let @xmath100 denote the transversal obtained from @xmath34 by deleting all @xmath101 with @xmath102 , and let @xmath103 denote the co - transversal obtained from @xmath34 by adding all @xmath101 with @xmath104 . for @xmath105 , define @xmath106 by @xmath107 if @xmath108 and @xmath109 if @xmath110 .",
    "[ [ skew - symmetric - network . ] ] skew - symmetric network .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    a _ skew - symmetric network _",
    "( see e.g. ,  @xcite ) is a directed network on a signed set such that an edge @xmath111 exists if and only if an edge @xmath112 exists , and the ( lower and upper ) capacities of edges @xmath111 and @xmath112 are the same .",
    "a skew - symmetric network is often useful for dealing with undirected objects .      here",
    "we summarize basics on submodular functions and submodular flows ; see @xcite for further details .",
    "submodular function _ on a set @xmath10 is a function @xmath113 defined on @xmath114 satisfying @xmath115 for @xmath116 .",
    "let @xmath113 be a submodular function on @xmath10 with @xmath117 .",
    "the _ base polyhedron _",
    "@xmath118 is defined to be the set of all vectors @xmath119 satisfying @xmath120 for @xmath71 and @xmath121 . for @xmath122 and a pair @xmath123 of distinct elements of @xmath10 , the _ exchange capacity _",
    "@xmath124 at @xmath48 is defined by @xmath125 where @xmath126 is the @xmath41-th unit vector defined by @xmath127 if @xmath128 and @xmath129 otherwise .",
    "we next introduce submodular flows .",
    "let @xmath130 be a directed network with vertex set @xmath10 , edge set @xmath131 , edge - capacity @xmath132 , and terminals @xmath133 .",
    "the set of nonterminal nodes is denoted by @xmath134 .",
    "we are given a submodular function @xmath135 with @xmath136 .",
    "for a function @xmath137 , let @xmath138 denote the function on @xmath10 defined by @xmath139 namely @xmath140 represents the excess of @xmath141 at node @xmath41 .",
    "an _ @xmath142-flow _ , or simply , a _ flow _ is a function @xmath143 satisfying @xmath144 where @xmath145 means the restriction to @xmath82 .",
    "the flow - value of a flow @xmath141 is defined as @xmath146 . an _ @xmath147-cut _",
    "@xmath34 is a subset of nodes containing @xmath148 and not containing @xmath149 .",
    "the _ cut capacity _ of @xmath34 is defined as @xmath150 an @xmath147-flow is called _ maximum _ if it has the maximum flow - value , and an @xmath147-cut is called _ minimum _ if it has the minimum capacity .",
    "the maximum flow - value of an @xmath147-flow is equal to the minimum cut - capacity of an @xmath147-cut @xmath34 .",
    "if @xmath151 and @xmath113 are both integer - valued , then there exists an integer - valued maximum flow . for any maximum flow @xmath141 ,",
    "the set of nodes reachable from @xmath148 in the residual network @xmath152 of @xmath141 is the unique minimal minimum @xmath147-cut .    here",
    "the _ residual network _",
    "@xmath152 of @xmath141 is a directed network on @xmath10 constructed as follows : for each edge @xmath78 in @xmath130 with @xmath153 , add an edge @xmath78 to @xmath152 .",
    "for each edge @xmath78 in @xmath130 with @xmath154 , add an edge @xmath155 to @xmath152 .",
    "for each pair of distinct nodes @xmath156 in @xmath82 with @xmath157 , add an edge @xmath78 to @xmath152 .",
    "there are several combinatorial polynomial time algorithms for computing an integral maximum submodular flow , under the assumption that an oracle of computing the exchange capacity is available .",
    "they are designed by extending existing max - flow algorithms ; see the survey  @xcite for further detail .",
    "we note one basic property for the case where the network is skew - symmetric .",
    "[ lem : minimal_minimum ] suppose that @xmath10 is a signed set with @xmath158 , and @xmath130 is skew - symmetric . if @xmath113 satisfies @xmath159 for all @xmath160 , then the unique minimal minimum @xmath147-cut is a transversal .    by the assumption for @xmath113",
    ", it suffices to show @xmath161 .",
    "suppose that some edge @xmath162 appears in @xmath163 . in this case , it holds @xmath164 and @xmath165 .",
    "this means that @xmath166 and @xmath167 .",
    "hence edge @xmath168 ( of the same capacity ) does not appear in @xmath163 .",
    "consequently the cut - capacity does not increase .",
    "let @xmath169 .",
    "let @xmath170 denote the set of ordered pairs of disjoint subsets of @xmath10 .",
    "for a function @xmath171 on @xmath172 , the polyhedron @xmath173 in @xmath174 is defined to be the set of all vectors @xmath175 satisfying @xmath176 if @xmath171 is a bisubmodular function on @xmath172 is called _ bisubmodular _ if it satisfies @xmath177 ] , then @xmath173 is known as a bisubmodular polyhedron .",
    "we study the case where @xmath173 is a projection of the base polyhedron of some submodular function .",
    "a representative of such polyhedra is the polyhedron of all flow - boundaries of a bidirected network ; see  @xcite .",
    "let @xmath178 be the signed extension of @xmath10 .",
    "for a function @xmath171 on @xmath172 , a _",
    "normal submodular extension _ of @xmath171 is a submodular function @xmath113 on @xmath179 with @xmath180 satisfying @xmath181 define a map ( projection ) @xmath182 by @xmath183    [ lem : projection ] let @xmath171 be a function on @xmath172 and @xmath113 a normal submodular extension of @xmath171",
    ". then it holds @xmath184 .",
    "note that @xmath185 .",
    "we first show that @xmath186 .",
    "take an arbitrary @xmath48 in @xmath118 .",
    "for @xmath187 , let @xmath188 .",
    "note that @xmath189 and @xmath190 .",
    "then we have @xmath191 hence we have @xmath192 also we have @xmath193 hence @xmath194 belongs to @xmath173 .",
    "next we show the converse .",
    "take an arbitrary @xmath195 .",
    "define a vector @xmath48 in @xmath196 by @xmath197 and @xmath198 for @xmath97 .",
    "obviously @xmath199 .",
    "it suffices to show that @xmath48 belongs to @xmath118 . since @xmath200",
    ", we have @xmath201 . for @xmath99",
    ", we have @xmath202 thus @xmath122 , and hence @xmath203 .    if @xmath204 has a normal submodular extension , then @xmath171 is necessarily a bisubmodular function .",
    "not all bisubmodular functions admit submodular extensions ( y. iwamasa 2015 ) .    we consider a special bisubmodular function on @xmath205-element set @xmath206 , which plays a key role in section  [ sec : multiflow ] . for @xmath207 ,",
    "let @xmath208 be the function on @xmath209 defined by @xmath210    [ lem : flow_conservation ] the polyhedron @xmath211 is the set of nonnegative vectors @xmath212 satisfying @xmath213    observe that these inequalities appears in ( [ eqn : d(h ) ] ) .",
    "so it suffices to show that inequalities  ( [ eqn : d(h ) ] ) are implied by the above inequalities .",
    "this is a routine verification .",
    "for example , @xmath214 is obtained by adding @xmath215 and @xmath216 .",
    "also @xmath217 is implied by @xmath218 and @xmath219 , and @xmath220 is implied by @xmath221 and @xmath222 .",
    "the polyhedron @xmath211 is a simplex of vertices @xmath223 , @xmath224 , @xmath225 and @xmath226 .",
    "we will see in section  [ sec : multiflow ] that @xmath211 represents the flow - conservation law and the node - capacity constraint on a node of degree @xmath205 . this bisubmodular function",
    "@xmath208 has a normal submodular extension .",
    "the following example was found by yuni iwamasa via a computer calculation .",
    "notice that each @xmath227 is one of the following six types :    type 1 : : :    @xmath228 and @xmath229 . type 2 : : :    @xmath230 and    @xmath231 for some    @xmath232 .",
    "type 3 : : :    @xmath233 or    @xmath234 .",
    "type 4 : : :    @xmath235 and @xmath236 .",
    "type 5 : : :    @xmath230 , @xmath237 , and    @xmath238 for some    @xmath232 .",
    "type 6 : : :    @xmath239 for    some @xmath232 .",
    "define @xmath240 by @xmath241    [ lem : delta * ] @xmath242 is a normal submodular extension of @xmath208 .",
    "it suffices to consider the case of @xmath243 ; we denote @xmath244 and @xmath245 by @xmath246 and @xmath247 , respectively .",
    "first we show ( [ eqn : extension1 ] ) . for @xmath248 ,",
    ". then @xmath249 and @xmath250 .",
    "if @xmath251 , then @xmath252 , and @xmath34 is of type 1 ; hence @xmath253 . if @xmath254 and @xmath252",
    ". then @xmath34 is of type 5 , and hence @xmath255 . if @xmath256 is empty , then @xmath233 , and @xmath34 is type 3 ; hence @xmath257 . if @xmath258 and @xmath259 , then @xmath254 , and @xmath34 is of type 2 ; hence @xmath257 .",
    "second we show ( [ eqn : extension2 ] ) . it suffices to show that @xmath260 holds for any transversal @xmath34 , and that @xmath261 holds for any @xmath34 that is not transversal and not co - transversal .",
    "the former property follows from @xmath262 , @xmath263 , @xmath264 , @xmath265 , and @xmath266 .",
    "the latter property follows from @xmath267 , @xmath268 , and @xmath269 .",
    "finally we show the submodularity of @xmath247 .",
    "take @xmath270 .",
    "we can assume that @xmath271 and @xmath272 .",
    "case 1 : @xmath34 is of type 6 . in this case , @xmath273 is the whole set , and is of type 3 .",
    "therefore it suffices to consider the case where @xmath274 is of type 1 and @xmath256 is not of type 1 .",
    "necessarily @xmath256 is of type 4 or 6 .",
    "thus submodular inequality @xmath275 holds .",
    "case 2 : @xmath34 is of type 2 with @xmath276 . if @xmath256 is also of type 2 , then @xmath277 is of type 3 , @xmath278 is also of type 3 . if @xmath256 is of type 3 with @xmath279 , then both @xmath274 and @xmath273 are of type 3 .",
    "if @xmath256 is of type 3 with @xmath280 , then @xmath256 can not have @xmath281 , and thus both @xmath274 and @xmath273 are of type 3 . in these cases ,",
    "submodularity @xmath282 holds .",
    "thus we may assume that @xmath256 is of type 1,4 , or 5 .",
    "observe that neither @xmath274 nor @xmath273 is of type 1 .",
    "we may assume that @xmath256 contains @xmath281 and does not contain @xmath283 .",
    "otherwise @xmath274 or @xmath273 is of type 3 , and submodularity holds .",
    "necessarily @xmath256 is of type 1 .",
    "then @xmath274 is of type 5 , and @xmath273 is of type 4 or 6 ; submodularity @xmath284 holds .",
    "case 3 : @xmath34 is of type 3 and @xmath256 is not of type 2 .",
    "if @xmath256 is also of type 3 , then both @xmath274 and @xmath273 is of type 3 ; submodularity holds .",
    "since one of @xmath274 and @xmath273 is of type 3 , it suffices to consider the case where @xmath274 or @xmath273 is of type 1 .",
    "we show that @xmath256 is also type 1 .",
    "if @xmath274 is of type 1 , then @xmath285 , and necessarily @xmath256 is of type 1 .",
    "if @xmath273 is of type 1 , then @xmath286 , and @xmath256 consists of at least two elements in @xmath287  ( type 1 ) .",
    "case 4 : @xmath34 is of type 4 or 5 , and @xmath256 is type 1 , 4 , or 5 .",
    "suppose that @xmath34 is of type 4 .",
    "then @xmath273 is not type 1 .",
    "we may consider the case where @xmath274 is of type 1 and @xmath256 is not of type  1 .",
    "then @xmath256 contains @xmath288 .",
    "thus @xmath256 is of type 4 , and @xmath273 necessarily contains @xmath289 ( type 3 ) ; submodularity ( @xmath275 ) holds .",
    "suppose that @xmath34 is of type 5 with @xmath276 .",
    "then @xmath274 is not type 1 .",
    "we may consider the case where @xmath273 is of type 1 .",
    "if @xmath256 does not contain @xmath281 , then @xmath274 is of type 3 ; submodularity ( @xmath275 ) holds .",
    "thus @xmath290 and @xmath291 or @xmath292 ; @xmath256 is of type 1 .",
    "the intersection @xmath274 is of type 5 ; thus @xmath293 holds .",
    "in this section , we introduce a combinatorial duality theory , developed by  @xcite , for a class of node - capacitated multiflow problems .",
    "we consider the following multiflow problem . now",
    "assume that network @xmath130 also has a nonnegative edge - cost @xmath294 ; so the network is a 5-tuple @xmath295 . for a multiflow @xmath20 , the total flow - values on node @xmath41 and edge @xmath296 are denoted by @xmath297 and @xmath298 , respectively . the _ cost _ @xmath299 is defined by @xmath300 next we define the value of a multiflow . a _",
    "tree - embedding _",
    "@xmath301 is a pair of a tree @xmath302 and a family @xmath303 of vertices of @xmath302 indexed by terminal set @xmath12 .",
    "the _ @xmath304-value _",
    "@xmath305 of a multiflow @xmath18 is defined by @xmath306 where @xmath307 denote the ends of an @xmath12-path @xmath308 , and @xmath81 denotes the shortest path metric of @xmath80 with respect to unit edge - length .",
    "we are now ready to define our multiflow problem .",
    "an instance of the problem is a pair of a network @xmath309 and a tree - embedding @xmath310 , and the task is to find a multiflow @xmath56 that maximizes @xmath311 .",
    "this somewhat artificial formulation turns out to be useful , and actually generalizes the original problem .",
    "indeed , take @xmath302 as a star with @xmath312 leaves @xmath313 @xmath314 , let @xmath315 , and let @xmath316 for each edge @xmath296 .",
    "then @xmath311 is twice the total flow - value of @xmath56 .    in section  [ subsec",
    ": duality ] , we present a combinatorial duality theorem and an optimality criterion . we introduce a nondegeneracy concept of the problem , and give an algorithm to find a half - integral optimal multiflow from a dual optimum under the nondegeneracy assumption .",
    "we also explain how to reduce the original problem to a nondegenerate problem . in section  [ subsec : dc ]",
    ", we see that our dual objective can be viewed as an l - convex function on a certain graph structure , and present the steepest descent algorithm ( sda ) to minimize l - convex functions and its iteration bound .",
    "let a pair of @xmath317 and @xmath301 be an instance of the problem .",
    "the vertex set of @xmath302 is also denoted by @xmath302 ( instead of @xmath318 ) .",
    "let @xmath319 denote the edge - subdivision of @xmath302 , where @xmath320 , the edge - length of @xmath319 is defined as @xmath321 uniformly , and the shortest path metric @xmath322 is also denoted by @xmath323 .",
    "a pair @xmath324 of a tree - valued function @xmath325 and a nonnegative half - integer - valued function @xmath326 is called a _ potential _ if it satisfies the following conditions :    * for each node @xmath41 , @xmath327 is an integer if and only if @xmath328 belongs to @xmath302 .",
    "* for each edge @xmath78 , it holds @xmath329 . * for each terminal @xmath148 , it holds @xmath330 .",
    "then the following min - max formula and optimality criterion hold :    [ thm : duality ] suppose that @xmath331 is even - integer - valued .",
    "the maximum of @xmath311 over all multiflows @xmath56 is equal to the minimum of @xmath332 over all potentials @xmath324 .",
    "[ lem : optimality ] suppose that @xmath331 is even - integer - valued .",
    "a multiflow @xmath18 and a potential @xmath324 are both optimal if and only if they satisfy the following conditions :    * for each path @xmath308 in @xmath15 with @xmath333 , it holds @xmath334 * for each edge @xmath78 with @xmath335 , it holds @xmath336 * for each nonterminal node @xmath41 with @xmath337 , it holds @xmath338",
    ".    we will use the if part ( and the weak duality in theorem  [ thm : duality ] ) only , which is proved for completeness .",
    "( if part ) . for any multiflow @xmath20 and any potential @xmath324 ,",
    "the difference @xmath339 is equal to @xmath340 where we use @xmath341 thus , if @xmath56 and @xmath324 satisfy conditions ( o1 ) , ( o2 ) , and ( o3 ) , then the equality holds in ( [ eqn : weak_duality ] ) , and both @xmath56 and @xmath324 are optimal .",
    "[ [ nondegenerate - case . ] ] nondegenerate case .",
    "+ + + + + + + + + + + + + + + + + + +    an instance @xmath342 is said to be _ nondegenerate _ if the edge - costs @xmath331 are positive even - valued and the degree of each node in @xmath302 is at most @xmath205 .",
    "suppose that @xmath342 is nondegenerate .",
    "we further assume , for notational simplicity , that tree @xmath302 has no vertex of degree one ( by attaching paths of infinite length ) .",
    "let @xmath343 and @xmath344 denote the sets of vertices of @xmath302 with degree 2 and 3 , respectively .",
    "for a vertex @xmath345 in @xmath302 , the neighbors of @xmath345 in @xmath302 are denoted by @xmath346 if @xmath347 and @xmath348 if @xmath349 .",
    "let @xmath319 denote the edge - subdivision of @xmath302 . for vertex @xmath350",
    ", the neighbors of @xmath345 in @xmath319 are denoted by @xmath351 if @xmath347 or @xmath352 , and @xmath353 if @xmath349 .",
    "let @xmath354 denote the connected component of @xmath355 containing @xmath356 .",
    "we are going to characterize the flow support of an optimal multiflow .",
    "let @xmath324 be a potential .",
    "motivated by ( o2 ) , define the edge subset @xmath357 by @xmath358 for a nonterminal node @xmath41 , let @xmath359 denote the set of edges @xmath360 with @xmath361 .",
    "since each edge cost @xmath362 is positive , it holds @xmath363 for @xmath360 .",
    "thus @xmath359 for @xmath364 ( or @xmath365 ) partition the set @xmath366 of all edges in @xmath357 incident to @xmath41 .",
    "a _ @xmath324-admissible support _ is a function @xmath367 satisfying the following conditions :    * for each nonterminal node @xmath41 with @xmath368 , it holds @xmath369 * for each nonterminal node @xmath41 with @xmath370 , it holds @xmath371 * for each nonterminal node @xmath41 with @xmath337 , it holds @xmath372 * for each edge @xmath296 , @xmath373 is a half - integer , and for each nonterminal node @xmath41 , @xmath374 is an integer .    recall the notational convention @xmath375 .",
    "notice that a @xmath324-admissible support is viewed as an edge - weight whose degree vector belongs to a bisubmodular polyhedron described by @xmath376 .",
    "it is not difficult to see from lemma  [ lem : optimality ] that for any half - integral optimal multiflow @xmath56 , the flow - support @xmath377 of @xmath56 , defined by @xmath378 , is a @xmath324-admissible support .",
    "the converse also holds .",
    "[ lem : mn ] let @xmath324 be a potential . if a @xmath324-admissible support @xmath377 exists and is given , then @xmath324 is optimal and a half - integral optimal multiflow is obtained in @xmath379 time .",
    "thus our problem is to find a potential @xmath324 so that a @xmath324-admissible support exists .",
    "an algorithm for lemma  [ lem : mn ] is the following .",
    "algorithm 1 : : :    construction of an optimal multiflow from a    @xmath324-admissible support . input : : :    a potential @xmath324 and a @xmath324-admissible    support @xmath377 .",
    "output : : :    a half - integral optimal multiflow    @xmath20 .",
    "step 0 : : :    @xmath380 .",
    "step 1 : : :    choose a terminal @xmath148 and an edge @xmath381 with    @xmath382 .",
    "if such a terminal does not exist , then    @xmath18 is a half - integral optimal    multiflow ; stop .",
    "otherwise let @xmath383 ,    @xmath384 ,    @xmath385 , @xmath386 ,    and go to step 2 .",
    "step 2 : : :    if @xmath387 is a terminal , then add path    @xmath388 to @xmath15    with flow - value @xmath389 , let    @xmath390 for each edge    @xmath296 in @xmath308 , and go to step 1 .",
    "otherwise go to    step 3 .",
    "step 3 : : :    if @xmath391 and    @xmath392 for    @xmath393 , then choose an edge    @xmath394 from @xmath395    with @xmath396 and    @xmath397 , and let    @xmath398 .    +    if @xmath399 and    @xmath392 for    @xmath400 , then choose an edge    @xmath401 from @xmath395 with    @xmath396 , @xmath397 , and    @xmath402    for @xmath403 .",
    "let    @xmath404    let @xmath405 and go to step 2 .",
    "this algorithm is essentially the proof of ( * ? ? ?",
    "* lemma 4.5 ) .",
    "let us sketch the correctness of the algorithm ; we show that the resulting multiflow @xmath56 satisfies the conditions ( o1),(o2 ) , and ( o3 ) in lemma  [ lem : optimality ] with @xmath324 .",
    "the condition ( o2 ) follows from @xmath406 for @xmath407 . in step  3",
    ", we can always choose a required edge by ( a1 ) and ( a2 ) .",
    "also @xmath377 still satisfies the conditions ( a1 ) , ( a2 ) , and ( a4 ) , thanks to the way of the update .",
    "each produced path @xmath408 satisfies @xmath409 since @xmath410 and @xmath411 for @xmath412 .",
    "also each @xmath413 is positive ( since @xmath331 is positive ) .",
    "since @xmath302 is a tree , we have @xmath414 ; see e.g. , ( * ? ? ?",
    "* lemma 3.9 ) .",
    "thus each produced path satisfies ( o1 ) . by the same argument",
    ", every edge @xmath296 with @xmath415 extends to an @xmath12-path consisting of edges @xmath416 with @xmath417 satisfying  ( o1 ) .",
    "this means that if no terminal @xmath148 is chosen in step 1 , then @xmath418 . by ( a3 ) , the resulting multiflow @xmath56 satisfies ( o3 ) .",
    "notice that @xmath419 is a half - integer by ( a4 ) .",
    "hence @xmath56 is half - integral and optimal .",
    "once an @xmath12-path @xmath308 is obtained , @xmath377 becomes zero on some edge , or @xmath420 becomes zero on some node @xmath41 ; they remain zero in subsequent iterations .",
    "thus the algorithm terminates after @xmath421 paths are obtained , where each path is found in @xmath422 time by keeping @xmath423 @xmath424 as lists .",
    "we estimate the range in which an optimal potential exists .",
    "let @xmath425 denote the minimal subtree in @xmath302 containing @xmath426 , and let @xmath427 denote the diameter of @xmath425 , i.e. , @xmath428 .",
    "[ lem : exists ] there is an optimal potential @xmath324 with @xmath429 and @xmath430 for @xmath97 .",
    "let @xmath324 be a potential .",
    "suppose that there is a nonterminal node @xmath431 with @xmath432 .",
    "then there is @xmath433 such that the path between @xmath434 and @xmath435 is outside of @xmath425 , take such @xmath436 with @xmath437 maximum .",
    "we can assume that @xmath438 contains @xmath434 .",
    "let @xmath34 be the set of nodes @xmath77 with @xmath439 .",
    "suppose that @xmath440 .",
    "then @xmath441 for all @xmath442 . for each @xmath442 , replace @xmath443 by @xmath444 . for an edge @xmath78 with @xmath445 and @xmath446 , both @xmath447 and @xmath448 decrease by @xmath321 , and thus ( p2 ) remains to hold .",
    "for other edge @xmath78 , quantity @xmath449 is nonincreasing or remains nonpositive ( if @xmath450 ) .",
    "the feasibility ( p2 ) still holds ( since @xmath362 is nonnegative ) .",
    "thus the resulting @xmath324 is a potential , and the objective value decreases .",
    "suppose that @xmath451 . for each @xmath442",
    ", replace @xmath452 by @xmath453 . for each edge @xmath78 , distance @xmath454 does not increase .",
    "thus the feasibility ( p2 ) holds , and the objective value does not change . by repeating this procedure ,",
    "we can make @xmath324 so that @xmath455 for @xmath97 , without increasing the objective value .",
    "suppose that @xmath456 for some @xmath41 ; necessarily @xmath457 .",
    "for each edge",
    "@xmath78 connecting @xmath41 , @xmath458 ( since @xmath459 ) and @xmath449 is an integer ) .",
    "thus we can replace @xmath460 by @xmath461 to decrease the objective value . repeating this procedure",
    ", @xmath324 satisfies @xmath462 , as required .",
    "[ [ reduction - to - a - nondegenerate - instance . ] ] reduction to a nondegenerate instance .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    here we explain how to reduce our original problem to a nondegenerate problem .",
    "an instance of the original problem is viewed as a pair of network @xmath463 and a tree - embedding @xmath464 such that @xmath465 for all edges @xmath296 and @xmath302 is a star with center @xmath466 and leaves @xmath313 @xmath314 .",
    "we are going to construct a nondegenerate instance .",
    "define edge cost @xmath467 by @xmath468 for each edge @xmath469 .",
    "let @xmath470 .",
    "next we define a tree - embedding @xmath471 .",
    "let @xmath472 be any ( finite ) trivalent tree with @xmath312 leaves @xmath473 @xmath314 and diameter @xmath474 .",
    "for each @xmath433 , consider an infinite path @xmath475 having a vertex @xmath476 of degree one .",
    "identify @xmath473 and @xmath476 , i.e. , glue @xmath475 and @xmath472 at @xmath473 .",
    "the resulting infinite tree is denoted by @xmath477 .",
    "define @xmath434 as the vertex in @xmath475 having distance @xmath478 from @xmath479 .",
    "see figure  [ fig : perturbation ] for the construction of @xmath477 .",
    "]    now we obtain a nondegenerate instance @xmath480 .",
    "let @xmath481 and @xmath20 be an optimal potential and an optimal multiflow , respectively , for this perturbed instance @xmath480 .",
    "we show that @xmath56 is a maximum multiflow , i.e. , optimal for the original instance @xmath342 .",
    "we are going to construct an optimal potential @xmath324 for @xmath342 from @xmath481 .",
    "let @xmath482 denote the subgraph of @xmath483 induced by vertices @xmath484 with @xmath485 .",
    "namely @xmath482 is ( the intersection of @xmath302 and ) the ball with center @xmath486 and radius @xmath487 .",
    "then it holds @xmath488 for @xmath489 and @xmath433 , let @xmath490 denote the subgraph of @xmath477 consisting of edges @xmath111 in @xmath491 such that @xmath492 .",
    "let @xmath493 be the union of @xmath490 over @xmath433 .",
    "we say that an edge @xmath78 in @xmath11 _ hits _",
    "@xmath493 if @xmath494 and the path between @xmath482 and @xmath495 meets an edge of @xmath493 . for an edge @xmath78 , it holds @xmath496 .",
    "therefore the path between @xmath482 and @xmath495 consists of at most two edges .",
    "since @xmath497 subgraphs @xmath498 are edge - disjoint , there is an index @xmath3 such that every edge in @xmath11 does not hit @xmath493 .",
    "fix such an index @xmath3 .    for each @xmath433 , choose the edge @xmath499 of @xmath490 nearest to @xmath434 ( furthest from @xmath473 ) . delete all @xmath499 from @xmath477 .",
    "there are @xmath500 connected components @xmath501 @xmath314 , where @xmath502 is the connected component containing @xmath503 , and @xmath504 is the connected component containing @xmath434 . for each @xmath97 , define @xmath505 by @xmath506 where @xmath507 denotes the vertex in @xmath508 obtained by subdividing edge @xmath509 in @xmath302 .",
    "we show that @xmath324 is a potential for @xmath510 and satisfies ( o1 ) , ( o2 ) , and ( o3 ) with @xmath56 .",
    "we first show the feasibility ( p2 ) @xmath511 for @xmath512 . since @xmath513 implies @xmath514 , we may consider the three cases : ( i ) @xmath515 , @xmath516 , ( ii ) @xmath515 , @xmath517 for @xmath518 , and ( iii ) @xmath515 , @xmath519 for @xmath518 . for ( i )",
    ", @xmath495 necessarily contains two @xmath520 ; otherwise @xmath78 hits @xmath493 at @xmath499 .",
    "this implies @xmath521 .",
    "( ii ) and ( iii ) can not occur since , otherwise , @xmath78 hits @xmath493 at @xmath499 .",
    "thus ( p2 ) holds , and hence @xmath324 is a potential ; ( p1 ) and ( p3 ) are clearly satisfied .",
    "next we show ( o1),(o2 ) , and ( o3 ) for @xmath56 and @xmath324 . to show ( o2 ) , take an edge @xmath78 with @xmath335 .",
    "by ( o2 ) for @xmath56 and @xmath481 in @xmath480 , it holds @xmath522 .",
    "thus the balls @xmath482 and @xmath495 are disjoint and have distance @xmath43 .",
    "suppose that @xmath482 has two edges @xmath520 .",
    "then @xmath482 must meet @xmath490 for every @xmath433 .",
    "necessarily @xmath495 can not be contained by @xmath502 .",
    "also @xmath495 can not have @xmath523 for any @xmath524 ; otherwise @xmath78 hits @xmath493 .",
    "thus @xmath495 is contained in @xmath525 for @xmath526 , and @xmath527 and @xmath528 hold .",
    "if @xmath482 has ( only one ) @xmath529 and @xmath495 has ( only one ) @xmath530 , then @xmath148 and @xmath531 must be different , and necessarily @xmath532 and @xmath533 .",
    "if @xmath482 has only @xmath499 and @xmath495 does not have any of @xmath523 , then necessarily @xmath495 is contained in @xmath504 or @xmath502 ; hence @xmath534 and @xmath535 or @xmath536 .",
    "if both @xmath482 and @xmath495 do not have any of @xmath499 , then both @xmath482 and @xmath495 are contained in @xmath504 for some @xmath537 , and @xmath538 and @xmath539 . in all the cases , it holds @xmath540 , implying ( o2 ) .",
    "consider the condition ( o1 ) .",
    "take a path @xmath541 with @xmath333 .",
    "there is an index @xmath542 such that @xmath543 contains @xmath499 ; otherwise @xmath493 is hit by some edge .",
    "moreover such an index @xmath542 is unique .",
    "otherwise , the balls @xmath544 and @xmath545 with @xmath546 contain @xmath499 .",
    "then @xmath547 .",
    "however , by ( o1 ) and ( o2 ) for @xmath56 and @xmath548 , we have @xmath549 , and @xmath550 ; a contradiction .",
    "similarly there is a unique index @xmath551 such that @xmath552 contains @xmath523 .",
    "if @xmath553 , then @xmath554 must be @xmath555 .",
    "if @xmath556 , say @xmath546 , then @xmath554 must be @xmath557 or @xmath558 .",
    "thus we obtain ( o1 ) . since @xmath559 implies @xmath560 ,",
    "we obtain ( o3 ) .",
    "hence @xmath324 is an optimal potential , and @xmath56 is a maximum multiflow .      here we briefly introduce a class of discrete convex functions ( l - convex functions ) on a certain graph structure and the steepest descent algorithm to minimize them .",
    "we then explain that our problem falls into the minimization of an l - convex function .",
    "the full discussion will be given in  @xcite .",
    "first we equip the space of all potentials with a graph structure .",
    "let @xmath561 denote the set of half - integers .",
    "let @xmath562 denote the set of pairs @xmath563 such that @xmath564 if and only if @xmath565 .",
    "two points @xmath324 and @xmath566 are adjacent if and only if @xmath567 and @xmath568 are adjacent in @xmath319 and @xmath569 .",
    "fix an arbitrary vertex @xmath570 of @xmath302 .",
    "let @xmath571 ( resp .",
    "@xmath572 ) denote the subset of @xmath562 consisting of pairs @xmath324 with @xmath564 , @xmath565 , and @xmath573 even ( resp .",
    "orient each edge of @xmath562 by @xmath574 if @xmath575 or @xmath576 .",
    "namely @xmath571 is the set of sinks and @xmath572 is the set of sources .",
    "this orientation is acyclic , and induces a partial order @xmath577 on @xmath562 .    ]",
    "see figure  [ fig : building ] , where nodes in @xmath571 and @xmath572 are colored black and white , respectively .",
    "next we define midpoint operations on @xmath562 .",
    "let @xmath578 denote the edge - subdivision of @xmath319 with edge - length @xmath579 , let @xmath580 denote the set of quarter - integers , and let @xmath581 denote the set of pairs @xmath582 such that @xmath583 if and only if @xmath584 . for two points @xmath585 in @xmath562 , there exists a unique _ midpoint _",
    "@xmath586 such that @xmath587 , @xmath588 , and @xmath589 .",
    "this @xmath49 is denoted by @xmath590 ; accordingly @xmath484 is denoted by @xmath591 . for @xmath592 , there uniquely exists a pair @xmath593 of vertices in @xmath594 with the property that @xmath595 and @xmath596 .",
    "we denote @xmath48 and @xmath49 by @xmath597 and @xmath598 , respectively .",
    "we are ready to define l - convex functions . for a natural number @xmath1 , consider the product @xmath599 ; a point @xmath48 in @xmath599 is represented by a pair @xmath324 of @xmath600 and @xmath601 .",
    "a function @xmath602 is _ l - convex _ if it satisfies the following analogue of the _ discrete midpoint convexity _",
    "* section 7.2 ) : @xmath603 where @xmath604 \\rfloor$ ] and @xmath605 for @xmath606 . for @xmath607 , let @xmath608 ( resp .",
    "@xmath609 ) denote the set of points @xmath49 with @xmath610 ( resp .",
    "@xmath611 ) for @xmath606 .",
    "the set @xmath612 is called the _ neighborhood _ of @xmath48 .",
    "the _ steepest descent algorithm _ is given as follows :    algorithm 2 : : :    steepest descent algorithm ( sda ) input : : :    an l - convex function    @xmath602 ,    and a point @xmath613 in @xmath614 .",
    "output : : :    a minimizer of @xmath47 .",
    "step 0 : : :    let @xmath615 .",
    "step 1 : : :    find a minimizer @xmath49 of @xmath47 over the    neighborhood @xmath616 of    @xmath617 .",
    "step 2 : : :    if @xmath618 , then output @xmath617 and    stop ; @xmath617 is a minimizer .",
    "step 3 : : :    otherwise , let @xmath619 ,    @xmath620 , and go to step 1 .",
    "the fact that the output is a minimizer easily follows from ( [ eqn : midpoint ] ) ; see ( * ? ? ? * theorem 2.5 ) .",
    "we discuss the number of iterations of this algorithm . for @xmath621 ,",
    "an _ @xmath54-path _ between @xmath48 and @xmath49 is a sequence @xmath622 such that for each @xmath3 and @xmath41 , the @xmath41-th components @xmath623 and @xmath624 belong to a common 4-cycle of @xmath562 , where @xmath2 is called the _ length _ of @xmath308 .",
    "the _ @xmath54-distance _ between @xmath48 and @xmath49 , denoted by @xmath625 , is defined as the minimum length of an @xmath54-path between @xmath48 and @xmath49 . for distinct @xmath626 in a 4-cycle",
    ", it holds @xmath627 . from this",
    "we observe that @xmath628 notice that a sequence @xmath629 generated by sda is an @xmath54-path .",
    "let @xmath630 denote the set of all minimizers of @xmath47 .",
    "the length @xmath2 , which is the number of the iterations , is at least @xmath631 .",
    "this lower bound is almost tight .",
    "[ thm : bound ] let @xmath632 be a sequence of points generated by sda applied to an l - convex function @xmath47 and an initial point @xmath48 .",
    "then @xmath633 . if @xmath634 or @xmath635 , then @xmath636",
    "a similar bound for original l - convex functions in dca was established in  @xcite . for a similar but different class of l - convex functions ( called _ alternating l - convex functions _ ) , the same bound was proved by  @xcite . by using this result , we give a shorter proof of theorem  [ thm : bound ] in appendix .",
    "we now return to our problem .",
    "let a pair of @xmath309 and @xmath301 be an instance .",
    "let @xmath637 .",
    "then the set of potentials @xmath638 is naturally regarded as a subset of @xmath599 .",
    "define a function @xmath639 by @xmath640 if @xmath641 is a potential and @xmath642 otherwise .",
    "[ prop : g_is_l - convex ] suppose that @xmath331 is even - valued .",
    "then @xmath643 is l - convex .    in appendix",
    ", we give a shorter proof of this proposition for our case where @xmath331 is positive .",
    "in this section , we prove the main result ( theorem  [ thm : main ] ) by presenting an algorithm ( _ dual descent algorithm _ ) to solve a nondegenerate instance of our multiflow problem .",
    "we first show that the optimality check of a potential @xmath324 , or finding a @xmath324-admissible support , is reduced to the submodular flow feasibility problem on a certain skew - symmetric network , called the _",
    "double covering network_. this extends the earlier result on the minimum - cost edge - capacitated multiflow problem by karzanov  @xcite , in which the optimality is checked by the classical circulation problem .",
    "partial adaptations of this idea to the node - capacitated setting have been given in @xcite ; but the full adaptation using submodular flow is new . checking the feasibility of a submodular flow",
    "is reduced to the maximum submodular flow problem .",
    "we prove that the minimal minimum cut naturally gives a steepest direction at each potential .",
    "then we obtain a simple descent algorithm mentioned in introduction .",
    "let a pair of @xmath309 and @xmath301 be a nondegenerate instance .",
    "we can assume that there is no edge such that both of its ends are terminals .",
    "let @xmath324 a potential for @xmath342 .",
    "a nonterminal node @xmath41 is said to be _ flat _ if @xmath368 , and _ singular _ if @xmath370 .",
    "a nonterminal node @xmath41 is said to be _",
    "zero _ if @xmath560 and _ positive _ if @xmath337 .",
    "we are going to construct a skew - symmetric network @xmath644 associated with @xmath324 .",
    "we first define a signed node set @xmath645 and edge set @xmath646 indexed by each node @xmath41 in @xmath130 , together with lower edge - capacity @xmath647 and upper edge - capacity @xmath648 . for each terminal @xmath148 , let @xmath649 , and let @xmath650 with @xmath651 and @xmath652 . for each flat node @xmath41 ,",
    "let @xmath653 , and let @xmath654 with @xmath655 .",
    "if @xmath41 is positive , then @xmath656 .",
    "otherwise @xmath657 .",
    "for each positive singular node @xmath41 , let @xmath658 and let @xmath646 consist of @xmath659 , @xmath660 , @xmath661 @xmath662 with @xmath663 , @xmath664 , and @xmath665 @xmath662 .",
    "for each zero singular node @xmath41 , let @xmath666 and let @xmath667 .",
    "define a submodular function @xmath668 on @xmath645 by @xmath669 , where @xmath670 is obtained from @xmath34 by replacing each @xmath671 ( resp .",
    "@xmath672 ) with @xmath673 ( resp .",
    "@xmath674 ) . for an edge @xmath675 with @xmath676 and @xmath677 , add edges @xmath678 and @xmath679 with @xmath680 and @xmath681 . in the case where @xmath77 is a terminal @xmath148 ,",
    "let @xmath682 and @xmath683 .",
    "double covering network _",
    "@xmath684 is defined by the disjoint union of all these edges and nodes .",
    "see figure  [ fig : doublecovering ] , where @xmath41 , @xmath77 , @xmath685 , and @xmath686 are positive singular , zero singular , zero flat , and positive flat nodes , respectively .        a node @xmath345 in @xmath644",
    "is said to be _ unusual _ if @xmath345 belongs to @xmath645 for a zero singular node @xmath41 .",
    "other nodes @xmath345 are said to be _",
    "usual_.    a _ circulation _",
    "@xmath141 in @xmath644 is a function on edge set @xmath131 such that @xmath687 for a circulation @xmath141 , define @xmath688 by @xmath689    suppose that an integral circulation @xmath141 in @xmath644 exists .",
    "then @xmath690 is a @xmath324-admissible support .",
    "the half - integrality of @xmath690 ( in ( a4 ) ) is clear .",
    "take a nonterminal node @xmath41 .",
    "let @xmath691 .",
    "suppose that @xmath41 is flat . then @xmath692 . since @xmath693 and @xmath694 .",
    "we obtain ( a1 ) .",
    "in addition , if @xmath41 is positive , then @xmath695 must hold , and we obtain ( a3 ) . since @xmath696 and @xmath697 are half - integers with @xmath698 , we have  ( a4 ) .",
    "suppose that @xmath41 is positive singular .",
    "since @xmath699 , we obtain @xmath700 .",
    "moreover it holds @xmath701 , implying ( a3 ) and ( a4 ) .",
    "if @xmath702 , then @xmath703 ; this contradicts @xmath704 .",
    "therefore @xmath696 , @xmath697 , and @xmath705 satisfy ( a2 ) .",
    "suppose that @xmath41 is zero singular .",
    "notice that @xmath706 , and @xmath707 .",
    "thus @xmath708 ; see ( [ eqn : def_phi ] ) for @xmath709 .",
    "since @xmath710 , because of lemmas  [ lem : projection ] and [ lem : delta * ] , the vector @xmath711 satisfies ( a2 ) . since @xmath712",
    ", we have @xmath713 and obtain ( a4 ) by @xmath714      to check the existence of a circulation in @xmath644 , we construct an instance of the maximum submodular flow problem .",
    "add a super source @xmath715 and super sink @xmath716 .",
    "for each edge @xmath717 in @xmath644 having nonzero lower capacity @xmath718 , replace @xmath719 by two edges @xmath720 and @xmath721 with ( upper ) capacity @xmath722 ( and lower capacity @xmath723 ) .",
    "those edges are @xmath724 for positive singular nodes",
    "@xmath41 and @xmath725 for positive flat nodes @xmath41 .",
    "the resulting ( skew - symmetric ) network is denoted by @xmath726 , where modified edge sets are denoted by @xmath727 @xmath728 and the ( upper ) edge - capacity is denoted by @xmath729 . consider the maximum @xmath730-submodular flow problem on @xmath731 , where submodular function @xmath113 on @xmath82 is given as @xmath732    [ lem : a ] if @xmath733 is a minimum @xmath730-cut in @xmath726 , then a circulation @xmath141 in @xmath644 exists , and is obtained from any maximum flow @xmath734 by the following procedure :    * for each edge @xmath735 in @xmath644 having nonzero lower capacity , let @xmath736 , and for other edge @xmath296 in @xmath644 , let @xmath737 .    indeed , in this case , any max - flow saturates all edges leaving @xmath715 and all edges entering @xmath716 , and consequently the resulting @xmath141 satisfies @xmath738 for all edges @xmath296 having nonzero lower - capacity , and is a circulation of @xmath644 .",
    "next we show that the minimal minimum cut gives rise to a steepest descent direction of @xmath643 at  @xmath324 .",
    "an @xmath730-cut @xmath34 is said to be _ normal _ if it satisfies the following conditions :    * @xmath34 does not meet @xmath739 for any terminal @xmath433 .",
    "* @xmath34 is a transversal .",
    "* for each positive node @xmath41 , @xmath740 is equal to @xmath741 , @xmath742 , or @xmath743 , and @xmath744 is equal to @xmath741 , @xmath745 , or @xmath746 .",
    "* for each zero node @xmath41 , @xmath747 is equal to @xmath741 , @xmath742 , @xmath743 , or @xmath748 .",
    "then the following holds ; the proof is given in the end of this subsection .",
    "[ lem : normal_mincut ] a normal minimum @xmath730-cut exists , and is obtained from the unique minimal minimum cut @xmath34 by applying the following procedure :    * for each singular node @xmath41 , if @xmath749 , then replace @xmath34 by @xmath750 .",
    "let @xmath751 be the subset of @xmath82 consisting of @xmath752 for @xmath24 and @xmath400 such that @xmath753 , or @xmath754 and @xmath755 .",
    "let @xmath756 be the node subset defined by replacing @xmath572 with @xmath571 in the definition of @xmath751 .",
    "a normal cut @xmath34 is said to be _",
    "@xmath757-normal _ if @xmath758 , and is said to be _ of @xmath759-normal _ if @xmath760 . for an @xmath757-normal or @xmath759-normal cut  @xmath34 ,",
    "define @xmath761 by @xmath762 for each nonterminal node @xmath24 and @xmath763 for each terminal @xmath433 .",
    "see figure  [ fig : neighborhood ] for the correspondence between @xmath764 and @xmath765 , where nodes in @xmath765 are colored black .",
    "[ prop : steepest ] let @xmath34 be a normal minimum @xmath730-cut in @xmath726 , and let @xmath766 and @xmath767 . then @xmath768 is a minimizer of @xmath643 over @xmath769 , and @xmath770 is a minimizer of @xmath643 over @xmath771 .    the proof is given in the end .",
    "we are now ready to describe our algorithm .",
    "algorithm 3 : : :    dual descent algorithm ( for a nondegenerate instance ) input : : :    a nondegenerate instance @xmath309 ,    @xmath301 .",
    "output : : :    a half - integral optimal multiflow @xmath56 .",
    "step 0 : : :    choose any vertex @xmath345 in @xmath425 , and let    @xmath772 be a potential defined by    @xmath773 for    @xmath24 and    @xmath774 for @xmath433 .",
    "step 1 : : :    construct network @xmath726 . obtain an    integral maximum @xmath730-flow @xmath734    and the minimal minimum @xmath730-cut @xmath34 in    @xmath726 by a submodular flow algorithm .",
    "make @xmath34 normal by procedure ( b ) .",
    "step 2 : : :    if @xmath775 , then @xmath324 is optimal ,    obtain a feasible flow @xmath141 in    @xmath644 from @xmath734 by    procedure  ( a ) . obtain a @xmath324-admissible support    @xmath690 by ( [ eqn : zeta_phi ] ) , and obtain a    half - integral optimal multiflow @xmath56 from    @xmath690 by algorithm 1 ; stop .",
    "step 3 : : :    choose @xmath776 with    @xmath777 .",
    "let  @xmath778 , and go to step 1 .",
    "[ thm : bound2 ] the dual descent algorithm runs in @xmath779 time .    by proposition  [ prop : steepest ] , @xmath780 is a steepest direction of @xmath643 at @xmath324 .",
    "hence the dual descent algorithm is viewed as the steepest descent algorithm applied to @xmath781 that is l - convex ( proposition  [ prop : g_is_l - convex ] ) . by lemma  [ lem :",
    "exists ] and theorem  [ thm : bound ] , the number of iteration is bounded by  @xmath427 .",
    "our submodular function @xmath113 is a disjoint sum of submodular functions @xmath668 for zero singular nodes @xmath41 ( see ( [ eqn : our_submo ] ) ) . so the exchange capacity @xmath782 for a pair of @xmath783 and @xmath345 can take positive if @xmath784 belong to @xmath645 for some zero singular node @xmath41 , and is equal to the exchange capacity for submodular function @xmath668 on a 6-element set  @xmath645 .",
    "hence this can be computed in constant time .",
    "the number of nodes of @xmath726 is at most @xmath785 , and the number of edges is at most @xmath786 .",
    "thus step 2 is done in @xmath787 time .",
    "[ [ proof - of - the - main - result - theoremthmmain . ] ] proof of the main result ( theorem  [ thm : main ] ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    as in section  [ sec : multiflow ] , construct nondegenerate instance @xmath480 . then @xmath788 .",
    "apply the dual descent algorithm for @xmath480 . by theorem  [ thm : bound2 ]",
    ", we obtain an optimal potential @xmath481 and an optimal multiflow @xmath56 in @xmath789 time . as we have shown in section  [ sec : multiflow ] , @xmath56 is also a maximum multiflow , and an optimal potential @xmath324 for the original instance is obtained from @xmath548 ( in @xmath790 time ) . then @xmath791 is a half - integral optimal solution of lp - dual ( [ eqn : lp - dual ] ) .",
    "indeed , @xmath792 is equal to the maximum flow - value .",
    "the feasibility of @xmath791 follows from @xmath793 for every @xmath12-path @xmath308 .",
    "[ [ proof - of - lemmalemnormal_mincut . ] ] proof of lemma  [ lem : normal_mincut ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath34 be the unique minimal minimum @xmath730-cut ( of finite cut capacity ) .",
    "by lemma  [ lem : minimal_minimum ] , @xmath34 is a transversal , implying ( c1 ) .",
    "also @xmath34 can not meet @xmath739 for any terminal @xmath148 .",
    "otherwise , @xmath34 contains @xmath794 ( and does not contain @xmath795 ) .",
    "however the deletion of @xmath794 from @xmath34 does not increase the cut capacity , contradicting the minimality .",
    "consider a zero flat node @xmath41 .",
    "suppose that @xmath796 . if @xmath797 @xmath798 , then the deletion of @xmath672 from @xmath34 decreases the capacity , contradicting the minimality .",
    "thus we have ( c3 ) .",
    "consider a zero singular node @xmath41 .",
    "suppose that @xmath799 .",
    "if @xmath800 , then @xmath747 is of type 1 , 3 , or 5 , the change @xmath801 preserves the type at @xmath645 , and the cut capacity ; contradicting the minimality .",
    "similarly , if @xmath802 , then the change @xmath803 preserves the cut capacity ; a contradiction .",
    "thus @xmath804 .",
    "so suppose that @xmath805 or @xmath806 . if @xmath807 , then necessarily @xmath808 .",
    "suppose that @xmath805 .",
    "if @xmath809 ( type 1 ) , then the change @xmath810 ( procedure ( b ) ) does not increase the cut capacity ( and keeps @xmath34 being a transversal ) . in particular , the resulting @xmath747 is one of the patterns in ( c3 ) .",
    "consider a positive singular node @xmath41 .",
    "first we show that @xmath811 .",
    "suppose to the contrary that @xmath812 .",
    "the the change @xmath813 preserves the capacity ; a contradiction to the minimality .",
    "also @xmath814 is impossible , and @xmath815 implies @xmath816 .",
    "thus the pattern of @xmath817 is one given in ( c2 ) .",
    "next consider @xmath740 .",
    "if @xmath34 contains two nodes in @xmath818 , and necessarily @xmath819 ; the change @xmath810 ( procedure ( b ) ) keeps @xmath34 being a transversal , and does not increase the cut capacity .",
    "if @xmath34 contains @xmath820 , then @xmath34 contains at least two nodes in @xmath742 , reduced to the case above .",
    "thus , after procedure  ( b ) , the resulting cut is a normal minimum cut , as required .    [ [ proof - of - propositionpropsteepest . ] ] proof of proposition  [ prop : steepest ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in @xmath562 , vertices in @xmath571 are colored black , and vertices in @xmath572 are colored white .",
    "other vertices have no color . for @xmath821 and @xmath822 with @xmath823",
    ", let @xmath824 for the unique neighbor @xmath783 of @xmath567 with @xmath825 .",
    "in addition , if @xmath826 , then let @xmath827 for the ( unique ) neighbor @xmath783 of @xmath567 with @xmath828 .",
    "[ lem : parity ] for @xmath829 with @xmath830 , @xmath831 is even if and only if one of following pairs has the same color : @xmath832    for @xmath833 , observe that @xmath834 .",
    "hence @xmath835 is even if and only if @xmath324 and @xmath566 have the same color .",
    "also observe that @xmath831 does not change when @xmath324 is replaced by @xmath836 .",
    "the claim follows from these facts .",
    "[ lem : noedge ] there is no edge between @xmath756 and @xmath751 . in particular ,",
    "any normal cut @xmath34 is decomposed into @xmath757-normal cut @xmath766 and @xmath759-normal cut @xmath767 such that @xmath837    edge @xmath838 ( or @xmath839 ) in @xmath726 belongs to @xmath645 for node @xmath41 of colored @xmath840 , and hence belongs to @xmath756 or @xmath751 .",
    "so consider an edge @xmath841 for distinct @xmath842 .",
    "then @xmath843 ( since @xmath844 ) and @xmath845 is even ( since @xmath846 is even ) . by the previous lemma ,",
    "if both @xmath847 and @xmath452 are colored , then they have the same color .",
    "suppose that @xmath840 has no color . if @xmath443 has a color , then @xmath848 has the same color .",
    "if @xmath443 has no color , then @xmath849 and @xmath850 have the same color .",
    "consequently @xmath851 or @xmath852 for all cases .",
    "let @xmath853 ( resp .",
    "@xmath854 ) denote the subset of @xmath769 ( resp .",
    "@xmath771 ) consisting @xmath324 with @xmath855 for @xmath606 .",
    "proposition  [ prop : steepest ] follows from the above lemma  [ lem : noedge ] and the following .",
    "* the map @xmath856 is a bijection between @xmath853 ( resp .",
    "@xmath854 ) and the set of all @xmath757-normal cuts ( resp .",
    "@xmath759-normal cuts ) .",
    "* for an @xmath757-normal or @xmath759-normal cut @xmath34 , it holds @xmath857    ( 1 ) .",
    "we claim that @xmath858 and @xmath859 are in one - to - one correspondence by  ( [ eqn : x ] ) .",
    "suppose that @xmath860 , which implies @xmath861 . then @xmath862 and @xmath863 .",
    "thus the claim is true .",
    "suppose that @xmath864 , which implies @xmath865 .",
    "the claim can be seen from figure  [ fig : neighborhood ] .",
    "suppose that @xmath866 ; necessarily @xmath41 is positive .",
    "we can assume that @xmath867 ( and @xmath868 )",
    ". then @xmath869 .",
    "since @xmath870 and @xmath871 , it holds that @xmath872 .",
    "thus we have the claim , implying the statement ( 1 ) .",
    "let @xmath873 .",
    "we first show that @xmath874 if and only if @xmath875 is finite .",
    "suppose that @xmath874 .",
    "pick @xmath796 and edge @xmath876 .",
    "we show @xmath877 .",
    "recall that @xmath878 and @xmath844 .",
    "hence @xmath879 .",
    "since @xmath796 , the change @xmath880 increases @xmath881 by one .",
    "necessarily the change @xmath882 must decrease @xmath883 by one .",
    "this means that @xmath884 , @xmath885 or @xmath886 must hold . for all cases",
    ", @xmath34 contains  @xmath887 .",
    "suppose that @xmath875 is finite .",
    "we show that @xmath874 . here",
    "@xmath888 is clear .",
    "we need to show that @xmath889 for each edge @xmath512 .",
    "suppose that @xmath890 .",
    "namely @xmath360 and @xmath891 . in this case",
    ", the argument is the same as the above . indeed",
    ", suppose that the change @xmath892 increases @xmath893 by one .",
    "then @xmath34 contains @xmath894 with @xmath895 , and hence contains @xmath896 with @xmath897 .",
    "the change @xmath898 decreases @xmath899 by one , implying @xmath900 .",
    "thus it suffices to show that @xmath901 can not occur .",
    "otherwise , @xmath902 , @xmath893 is odd , and @xmath903 , @xmath904 .",
    "if both @xmath840 and @xmath905 have colors , then these colors are different ( by lemma  [ lem : parity ] ) , and @xmath906 or @xmath907 must hold ; a contradiction .",
    "suppose that @xmath847 has no color",
    ". then @xmath908 must hold .",
    "if @xmath909 has a color , then this color must equal the color of @xmath910 ( since @xmath911 and @xmath912 have different colors ) , and hence @xmath913 ; a contradiction .",
    "if @xmath909 has no color , then @xmath914 must hold ; but this is impossible since colors of @xmath911 and @xmath915 are different .",
    "finally we show the equation  ( [ eqn : g_ne(p , r)^x ] ) .",
    "the left hand side is equal to @xmath916 and the right hand side is equal to @xmath917 one can verify from the network construction ( see figure  [ fig : doublecovering ] ) , definitions of @xmath918 ( see ( [ eqn : x ] ) ) and @xmath919 ( see ( [ eqn : delta * ] ) ) that @xmath920 is equal to @xmath921 if @xmath41 is positive , @xmath922 if @xmath41 is zero flat , and @xmath923 if @xmath41 is zero singular .",
    "thus we obtain the equation  ( [ eqn : g_ne(p , r)^x ] ) .",
    "we thank satoru iwata for information on submodular flow , satoru fujishige for helpful comments , and yuni iwamasa for computation of @xmath242 . the work was partially supported by jsps kakenhi grant numbers 25280004 , 26330023 , 26280004 .    1    k. ando , s. fujishige , and t. naitoh , balanced bisubmodular systems and bidirected flows , _ journal of the operations research society of japan _ * 40 * ( 1997 ) , 437447 .",
    "m. a. babenko , a fast algorithm for the path 2-packing problem , _ theory of computing systems _ * 46 * ( 2010 ) , 5979 .    m. a. babenko and a. v. karzanov , a scaling algorithm for the maximum node - capacitated multiflow problem , in : _ proceedings of 16th annual european symposium on algorithms _ ( esa08 ) , _ lncs _ * 5193 * ( 2008 ) , 124135",
    ".    m. a. babenko and a. v. karzanov , min - cost multiflows in node - capacitated undirected networks , _ journal of combinatorial optimization _ * 24 * ( 2012 ) , 202228 . c. chekuri and v. madan , simple and fast rounding algorithms for directed and node - weighted multiway cut , in : _ proceeding of acm - siam symposium on discrete algorithms ( soda16 ) _ , to appear , arxiv:1507.04674 .",
    "m. chudnovsky , w. h. cunningham , and j. geelen , an algorithm for packing non - zero @xmath131-paths in group - labelled graphs , _ combinatorica _",
    "* 28 * ( 2008 ) , 145161 .",
    "p. m. dearing , r. l. francis , and t. j. lowe , convex location problems on tree networks , _ operations research _ * 24 * ( 1976 ) , 628642 .",
    "a. frank , _ connections in combinatorial optimization _ , oxford university press , oxford , 2011 .",
    "s. fujishige , _ submodular functions and optimization , 2nd edition _ , elsevier , amsterdam , 2005 .",
    "s. fujishige and s. iwata , algorithms for submodular flows , _ ieice transactions on information and systems _ * 83 * ( 2000 ) , 322329 .",
    "s. fujishige and x. zhang , new algorithms for the intersection problem of submodular systems , _ japan journal of industrial and applied mathematics _ * 9 * ( 1992 ) , 369382 .",
    "n. garg , v. v. vazirani , and m. yannakakis , multiway cuts in node weighted graphs , _ journal of algorithms _ * 50 * ( 2004 ) 4961 .",
    "n. garg and j. knemann , faster and simpler algorithms for multicommodity flow and other fractional packing problems , _ siam journal on computing _ * 37 * ( 2007 ) , 630652 .    a. v. goldberg , and a. v. karzanov , path problems in skew - symmetric graphs , _ combinatorica _ * 16 * ( 1996 ) , 353382 .",
    "h. hirai , half - integrality of node - capacitated multiflows and tree - shaped facility locations on trees , _ mathematical programming ,",
    "series a _ * 137 * ( 2013 ) , 503530 .",
    "h. hirai , discrete convexity and polynomial solvability in minimum 0-extension problems , _ mathematical programming , series a _ , to appear .",
    "( the conference version in _ soda13 _ )    h. hirai , l - extendable functions and a proximity scaling algorithm for minimum cost multiflow problem , _ discrete optimization _ * 18 * ( 2015 ) , 137 .    h. hirai , l - convexity on graph structures , in preparation",
    "karzanov , a minimum cost maximum multiflow problem , in : _ combinatorial methods for flow problems _ , institute for system studies , moscow , 1979 , pp . 96103 ( in russian ) .",
    "a. v. karzanov , minimum cost multiflows in undirected networks , _ mathematical programming , series a _ * 66 * ( 1994 ) , 313324 .",
    "w. mader , ber die maximalzahl kreuzungsfreier @xmath924-wege , _ archiv der mathematik _ * 31 * ( 1978/79 ) , 387402 .",
    "k. murota , _ discrete convex analysis _ ,",
    "siam , philadelphia , 2003 .",
    "k. murota and a. shioura , exact bounds for steepest descent algorithms of l - convex function minimization , _ operations research letters _ * 42 * ( 2014 ) , 361366 .",
    "g. pap , some new results on node - capacitated packing of a - paths , in : _ proceedings of the 39th annual acm symposium on theory of computing ( stoc07 ) _ , acm , new york , 2007 , pp . 599604 .",
    "g. pap , strongly polynomial time solvability of integral and half - integral node - capacitate multiflow problems , _ egres technical report _ ,",
    "tr-2008 - 12 , ( 2008 ) .",
    "a. schrijver , _ combinatorial optimization  polyhedra and efficiency _ , springer - verlag , berlin , 2003 .    v. v. vazirani , _ approximation algorithms _ , springer - verlag , berlin , 2001 .",
    "for @xmath925 , the first and second components of @xmath48 are denoted by @xmath926 and @xmath927 , respectively , i.e. , @xmath928 .",
    "first consider the case where @xmath302 is a path ( with no ends ) .",
    "then @xmath562 is isomorphic to the product of two zigzagly - oriented paths . in this case , @xmath929 is identified with the product @xmath930 of @xmath931 paths , and l - convex functions on @xmath929 coincide with _ alternating l - convex functions _ in the sense of  @xcite .",
    "also @xmath932 is equal to @xmath323 in  @xcite",
    ". then theorem  [ thm : bound ] was shown in ( * ? ? ?",
    "* theorem 2.6 ) .",
    "in particular , the following holds :      we show that this proposition holds for a general tree @xmath302 .",
    "pick an arbitrary @xmath940 with @xmath941 .",
    "since @xmath942 and @xmath943 are equal or adjacent in @xmath302 or @xmath319 , there is a path @xmath944 in @xmath319 containing @xmath945 , and @xmath946 .",
    "then @xmath947 , and @xmath934 are points in @xmath948 , and the restriction @xmath949 of @xmath47 to @xmath950 is ( alternating ) l - convex . thus proposition  [ prop : d_inf = d_inf-1 ] is applicable to @xmath951 , and hence @xmath952 .",
    "by @xmath953 , the equation ( [ eqn : d_inf = d_inf-1 ] ) holds .",
    "theorem  [ thm : bound ] is proved as follows . by the description of the steepest descent algorithm",
    ", it holds that @xmath954 or @xmath955 for all @xmath956 . thus @xmath957 holds . since @xmath958",
    ", we obtain @xmath633 .",
    "in addition , if @xmath937 or @xmath938 , then @xmath959 holds .",
    "let @xmath971 and @xmath972 .",
    "then it holds that @xmath973 .",
    "hence we can assume that @xmath974 .",
    "by @xmath975 and @xmath976 , it must hold @xmath977 then there are two edge - disjoint paths in @xmath578 , one containing @xmath978 and the other containing @xmath979 .",
    "also they are contained by a single path . from this ,",
    "we see @xmath980 also @xmath981 and @xmath982",
    ". hence we obtain @xmath983 .",
    "notice that both @xmath984 and @xmath985 are integers .",
    "if @xmath986 , then @xmath987 , and hence @xmath988 and @xmath970 .",
    "so it suffices to show that @xmath989 and @xmath990 can not occur .",
    "suppose not .",
    "then both @xmath984 and @xmath985 are odd .",
    "if both @xmath991 and @xmath992 ( or @xmath993 and @xmath994 ) are colored , then they have different colors ( lemma  [ lem : parity ] ) , @xmath995 or @xmath996 holds , and @xmath990 is impossible .",
    "hence we can assume that @xmath997 , and @xmath998 or @xmath999 .",
    "then @xmath1000 , @xmath1001 , and @xmath1002 . hence @xmath1003 ( even )",
    "however @xmath998 or @xmath999 implies that @xmath1004 or @xmath1005 is odd ; a contradiction .",
    "we are ready to prove proposition  [ prop : g_is_l - convex ] .",
    "it is not difficult to see that the function on @xmath562 defined by @xmath1006 if @xmath1007 and @xmath62 otherwise is l - convex .",
    "so it suffices to show that the function on @xmath1008 defined by @xmath1009 if @xmath968 and @xmath62 otherwise is l - convex .",
    "we show that @xmath968 and @xmath1010 imply @xmath1011 and @xmath1012 . by lemma  [ lem : h_is_convex ]",
    ", we have @xmath1013 . by lemma  [ lem : h(x , y)<=0 ] , we have the desired results ."
  ],
  "abstract_text": [
    "<S> in this paper , we develop an @xmath0-time algorithm to find a half - integral node - capacitated multiflow of the maximum total flow - value in a network with @xmath1 nodes , @xmath2 edges , and @xmath3 terminals , where @xmath4 denotes the time complexity of solving the maximum submodular flow problem in a network with @xmath5 edges , @xmath6 edges , and the complexity @xmath7 of computing the exchange capacity of the submodular function describing the problem . by using fujishige - zhang algorithm for submodular flow , we can find a maximum half - integral multiflow in @xmath8 time . </S>",
    "<S> this is the first combinatorial strongly polynomial time algorithm for this problem . </S>",
    "<S> our algorithm is designed on the basis of a developing theory of discrete convex functions on certain graph structures . </S>",
    "<S> applications include  ellipsoid - free \" combinatorial implementations of a 2-approximation algorithm for the minimum node - multiway cut problem by garg , vazirani , and yannakakis .    </S>",
    "<S> keywords : node - capacitated multiflow , discrete convex analysis , submodular flow , node - multiway cut </S>"
  ]
}
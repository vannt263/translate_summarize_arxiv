{
  "article_text": [
    "_ multi - robot motion planning",
    "_ is a fundamental problem in robotics and has been extensively studied . in this work",
    "we are concerned with finding paths for a group of robots , operating in the same workspace , moving from start to target positions while avoiding collisions with obstacles as well as with each other .",
    "we consider the continuous formulation of the problem , where the robots and obstacles are geometric entities and the robots operate in a configuration space , e.g. , @xmath0 ( as opposed to the discrete variant , sometimes called the where the robots move on a graph ) .",
    "moreover , we assume that each robot has its own start and target positions , as opposed to the unlabeled case ( see , e.g. ,  @xcite ) .",
    "we assume familiarity with the basic terminology of motion planning",
    ". for background , see , e.g. , @xcite .",
    "initial work on motion planning aimed to develop _ complete _ algorithms , which guarantee to find a solution when one exists or report that none exists otherwise .",
    "such algorithms for the multi - robot case exist  @xcite yet are exponential in the number of robots .",
    "the exponential running time , can be attributed to the high number of _ degrees of freedom _ ( _ dof_)the sum of the dofs of the individual robots .",
    "the introduction of _ sampling - based _ algorithms such as the _ probabilistic roadmap method _ ( prm )  @xcite , the _ rapidly - exploring random trees _  ( rrt )  @xcite and their many variants , had a significant impact on the field of motion planningdue to their efficiency , simplicity and applicability to a wide range of problems .",
    "sampling - based algorithms attempt to capture the connectivity of the _ configuration space _",
    "( c - space ) by sampling collision - free configurations and constructing a _ roadmap_a graph data structure where the free configurations are vertices and the edges represent collision - free paths between nearby configurations .",
    "although these algorithms are not complete , most of them are _ probabilistically complete _ , that is , they are guaranteed to find a solution , if one exists , given a sufficient amount of time .",
    "recently , karaman and frazzoli  @xcite introduced several variants of these algorithms such that , with high probability they produce paths that are _ asymptotically optimal _ with respect to some quality measure .",
    "sampling - based algorithms can be easily extended to the multi - robot case by considering the fleet of robots as one composite robot  @xcite .",
    "such a naive approach suffers from inefficiency as it overlooks aspects that are unique to the multi - robot problem .",
    "more tailor - made sampling - based techniques have been proposed for the multi - robot case  @xcite .",
    "particularly relevant to our efforts is the work of vestka and overmars  @xcite who suggested to construct a composite roadmap which is a cartesian product of roadmaps of the individual robots . due to the exponential nature of the resulting roadmap ,",
    "this technique is only applicable to problems that involve a modest number of robots . a recent work by wagner et al .",
    "@xcite suggests that the composite roadmap does not necessarily have to be explicitly represented .",
    "instead , they maintain an implicitly represented composite roadmap , and apply their m * algorithm  @xcite to efficiently retrieve paths , while minimizing the explored portion of the roadmap .",
    "the resulting technique is able to cope with a large number of robots , for certain types of scenarios .",
    "additional information on these two approaches is provided in section  [ sec : c_roadmaps ] below .",
    "we present a sampling - based algorithm for the multi - robot motion - planning problem called _ multi - robot discrete rrt _ ( mrdrrt ) .",
    "similar to the approach of wagner et al .",
    "@xcite , we maintain an implicit representation of the composite roadmap .",
    "we propose an alternative , highly efficient , technique for pathfinding in the roadmap , which can cope with scenarios that involve tight coupling of the robots .",
    "our new approach , which we call drrt , is an adaptation of the celebrated rrt algorithm  @xcite for the discrete case of a graph , embedded in euclidean space .",
    "drrt traverses a composite roadmap that may have exponentially many neighbors ( exponential in the number of robots that need to be coordinated ) .",
    "the efficient traversal is achieved by retrieving only partial information of the explored roadmap .",
    "specifically , it considers a single neighbor of a visited vertex at each step .",
    "drrt rapidly explores the c - spacerepresented by the implicit graph .",
    "integrating the implicit representation of the roadmap allows us to solve multi - robot problems while exploring only a small portion of the c - space .",
    "we demonstrate the capabilities of mrdrrt on the setting of polyhedral robots translating and rotating in space amidst polyhedral obstacles .",
    "we provide experimental results on several challenging scenarios , where mrdrrt is faster by a factor of at least ten when compared to existing algorithms that we are aware of .",
    "we show that we manage to solve problems of up to 60 dofs for highly coupled scenarios ( figure  [ fig:3d_scenarios ] ) .",
    "the organization of this paper is as follows . in section  [ sec : c_roadmaps ] we elaborate on two sampling - based multi - robot motion planning algorithms , namely the composite roadmap approach by vestka and overmars  @xcite and the work on subdimensional expansion and m * by wagner et al .",
    "@xcite . in section  [ sec : d_rrt ] we introduce the drrt algorithm . for clarity of exposition , we first describe it as a general pathfinding algorithm for geometrically embedded graphs . in the following section ( section  [ sec : implementation ] ) we describe the mrdrrt method where drrt is used in the setting of multi - robot motion - planning problem for the exploration of the implicitly represented composite roadmaps .",
    "we show in section  [ sec : experimental_results ] experimental results for the algorithm on different scenarios and conclude the paper in section  [ sec : discussion ] with possible future research directions .",
    "[ twisty ]   [ abstract ]   [ cubicles ]   [ home ]     [ fig:3d_scenarios ]",
    "we describe the composite roadmap approach introduced by vestka and overmars  @xcite . here , a cartesian product of prm roadmaps of individual robots is considered as a means of devising a roadmap for the entire fleet of robots .",
    "however , since they consider an explicit construction of this roadmap , their technique is applicable to scenarios that involve only a small number of robots . to overcome this , wagner et al .",
    "suggest  @xcite to represent the roadmap _ implicitly _ and describe a novel algorithm to find paths on this implicit graph .",
    "let @xmath1 be @xmath2 robots operating in a workspace  @xmath3 with start and target configurations @xmath4 .",
    "we wish to find paths for every robot from start to target , while avoiding collision with obstacles as well as with the other robots .",
    "let @xmath5 be a prm roadmap for @xmath6 , @xmath7 , and let @xmath8 denote the maximal degree of a vertex in any @xmath9 .",
    "in addition , assume that @xmath10 , and that @xmath4 reside in the same connected component of @xmath9 .",
    "given such a collection of roadmaps @xmath11 a composite roadmap can be defined in two different ways ",
    "one is the result of a _ cartesian product _ of the individual roadmaps while in the other a _ tensor product _ is used  @xcite .",
    "the _ composite roadmap _",
    "@xmath12 is defined as follows .",
    "the vertices @xmath13 represent all combinations of collision - free placements of the @xmath2 robots .",
    "formally , a set of @xmath2 robot configurations @xmath14 is a vertex of @xmath15 if for every @xmath16 , @xmath17 , and in addition , when every robot @xmath6 is placed in @xmath18 the robots are pairwise collision - free .",
    "the cartesian and tensor products differ in the type of edges in the resulting roadmap . if the cartesian product is used , then @xmath19 , where @xmath20 , if there exists @xmath16 such that @xmath21 , for every @xmath22 it holds that @xmath23 , and @xmath6 does not collide with the other robots stationed at @xmath23 while moving from @xmath18 to @xmath24 .",
    "a tensor product generates many more edges .",
    "specifically , @xmath25 if @xmath21 for every  @xmath16 , and the robots remain collision - free while moving on the respective single - graph edges .    * remark .",
    "*    wagner et al .",
    "propose an adaptation of a * to the case of a composite roadmap called m *  @xcite .",
    "their approach exploits the observation that only the motion of some robots has to be coupled in typical scenarios .",
    "thus , planning in the joint c - spaceis only required for robots that have to be coupled , while the motion of the rest of the robots can be planned individually .",
    "hence , their method dynamically explores low - dimensional search spaces embedded in the full c - space , instead of the joint high - dimensional c - space .",
    "this technique is highly effective for scenarios with a low degree of coupling , and can cope with large fleets of robots in such settings .",
    "however , when the degree of coupling increases , we observed sharp increase in the running time of this algorithm , as it has to consider many neighbors of a visited vertex .",
    "we describe a technique which we call _ discrete rrt _ ( drrt ) for pathfinding in implicit graphs that are embedded in a euclidean space . for clarity of exposition , we first describe drrt without the technicalities related to motion planning .",
    "we add these details in the subsequent section .",
    "as the name suggests , drrt is an adaptation of the rrt algorithm  @xcite for the purpose of exploring discrete geometrically - embedded graphs , instead of a continuous space .",
    "since the graph serves as an approximation of some relevant portion of the euclidean space , traversal of the graph can be viewed as a process of exploring the subspace .",
    "the drrt algorithm rapidly explores the graph by biasing the search towards vertices embedded in unexplored regions of the space .",
    "let @xmath26 be a graph where every @xmath27 is embedded in a point in euclidean space @xmath0 and every edge @xmath28 is a line segment connecting the points .",
    "given two vertices @xmath29 , drrt searches for a path in  @xmath30 from  @xmath31 to  @xmath32 .",
    "for simplicity , assume that the graph is embedded in @xmath33^d$ ] .",
    "similarly to its continuous counterpart , drrt grows a tree rooted in @xmath31 and attempts to connect it to @xmath32 to form a path from @xmath31 to @xmath32 . as in rrt ,",
    "the growth of the tree is achieved by extending it towards random samples in @xmath33^d$ ] . in our case",
    "though , vertices and edges that are added to the trees are taken from @xmath30 , and we do not generate new vertices and edges along the way .    as @xmath30 is represented implicitly , the algorithm uses an oracle to retrieve information regarding neighbors of visited vertices .",
    "we first describe this oracle and then proceed with a full description of the drrt algorithm .",
    "finally , we show that this technique is _",
    "probabilistically complete_.      in order to retrieve partial information regarding the neighbors of visited vertices , drrt consults an oracle described below .",
    "we start with several basic definitions .",
    "given two points @xmath34^d$ ] , denote by @xmath35 the ray that starts in @xmath36 and goes through @xmath37 . given three points @xmath38^d$ ] ,",
    "denote by @xmath39 the ( smaller ) angle between @xmath35 and @xmath40 .    given a vertex @xmath27 , and a point @xmath41^d$ ]",
    "we define @xmath42    in other words , the direction oracle returns the neighbor @xmath37 of @xmath36 such that the direction from @xmath36 to @xmath37 is closest to the direction from @xmath36 to @xmath43 .      at a high level ,",
    "drrt proceeds similar to the rrt algorithm , and we repeat it here for completeness . the drrt algorithm ( algorithm  [ alg : planner ] ) grows a trees @xmath44 which is a subgraphs of @xmath30 and is rooted in @xmath31 ( line 1 ) .",
    "the growth of @xmath44 ( line  3 ) is achieved by an expansion towards random samples .",
    "additionally , an attempt to connect @xmath44 with @xmath32 is made ( line 4 ) .",
    "the algorithm terminates when this operation succeeds and a solution path is generated ( line  6 ) , otherwise the algorithm repeats line 2 .",
    "expansion of @xmath44 is performed by the expand operation ( algorithm  [ alg : expand ] ) which performs @xmath45 iterations that consist of the following steps : a point @xmath46 is sampled uniformly from @xmath33^d$ ] ( line  2 ) . then , a node @xmath47 that is the closest to the sample ( in euclidean distance ) , is selected ( line  3 ) .",
    "@xmath47 is extended towards the sample by locating the vertex @xmath48 , that is the neighbor of @xmath47 in @xmath30 in the direction of @xmath46 ( by the direction oracle  @xmath49 ) .",
    "once @xmath50 is found ( line  4 ) , it is added to the tree ( line  6 ) with the edge @xmath51 ( line 7 ) .",
    "see an illustration of this process in figure  [ fig : drrt_alg ] .",
    "this is already different from the standard rrt as we can not necessarily proceed exactly in the direction of the random point .",
    "after the expansion , drrt attempts to connect the tree @xmath44 with @xmath32 using the connect_to_target operation ( algorithm  [ alg : connect ] ) . for every vertex @xmath52 of @xmath44 , which one of the @xmath53 nearest neighbors of @xmath32 in @xmath44 ( line  1 ) , an attempt is made to connect @xmath52 to @xmath32 using the method local_connector ( line  2 ) which is a crucial part of the drrt algorithm ( see subsection  [ sub : local ] ) .",
    "finally , given a path from some node @xmath52 of @xmath44 to @xmath32 the method retrieve_path ( algorithm  [ alg : planner ] , line  6 ) returns the concatenation of the path from @xmath31 to @xmath52 , with  @xmath54 .",
    "@xmath44.init(@xmath31 ) expand(@xmath44 ) @xmath55 connect_to_target(@xmath56 ) retrieve_path(@xmath57 )    @xmath58 random_sample ( ) @xmath59 nearest_neighbor(@xmath60 ) @xmath61 @xmath44.add_vertex(@xmath50 ) @xmath44.add_edge(@xmath62 )    @xmath55 local_connector(@xmath63 ) @xmath64      we show in the following subsection that it is possible that @xmath44 will eventually reach @xmath32 during the expand stage , and therefore an application of local_connector will not be necessary . however , in practice this is unlikely to occur within a short time frame , especially when @xmath30 is large .",
    "thus , we employ a heavy - duty technique , which given two vertices @xmath65 of @xmath30 tries to find a path between them .",
    "we mention that it is common to assume in sampling - based algorithms that connecting nearby samples will require less effort than solving the initial problem and here we make a similar assumption .",
    "we assume that a local connectoris effective only on _ restricted _ pathfinding problems , thus in the general case it can not be applied directly on @xmath66 , as it may be highly costly ( unless the problem is easy ) .",
    "a concrete example of a local connectoris provided in the next section .",
    "recall that an algorithm is _ probabilistically complete _ if the probability it finds a solution tends to one as the run - time of the algorithm tends to infinity ( when such a solution exists ) . for simplicity , we show that drrt possesses a stronger property and with high probability will reveal all the vertices of the traversed graph , assuming this graph is connected .",
    "the proof relies on the assumption that the vertices of the traversed graph @xmath30 are in _ general position _ ,",
    "that is , every pair of distinct vertices are embedded in two distinct points in @xmath0 , and for every triplet of distinct vertices the points in which they are embedded are non - collinear .",
    "this issue will be addressed in the following section , where we consider the application of drrt on a specific type of graphs .",
    "the proof does not need to take into consideration the local connector .",
    "[ thm : complete ] let @xmath26 be a connected graph embedded in @xmath33^d$ ] where the vertices are in general position . then",
    ", with high probability , every vertex of @xmath30 will be revealed by the drrt algorithm , given sufficient amount of time .",
    "denote by @xmath67 the set of vertices of @xmath44 after the completion of an iteration of the algorithm .",
    "let @xmath68 be an unvisited vertex such that there exists @xmath69 , where @xmath70 .",
    "we wish to show that the probability that @xmath44 will be expanded on the edge @xmath71 , and thus @xmath72 will be added to @xmath67 , is bounded away from zero . for simplicity",
    "we assume that there exists a single vertex @xmath70 that has an edge to  @xmath72 .",
    "denote by @xmath73 the _ voronoi cell _",
    "@xcite of the site @xmath36 , in the euclidean ( standard ) voronoi diagram of point sites , where the sites are the vertices of @xmath67 ( figure  [ fig : drrt_alg](b ) ) .",
    "in addition , denote by @xmath74 the voronoi cell of @xmath75 , in a voronoi diagram of the ray sites @xmath76 , where @xmath77 are the neighbors of @xmath36 in @xmath44 , not including @xmath72 ( figure  [ fig : drrt_alg](c ) ) .",
    "notice that in order to extend @xmath44 from @xmath36 to @xmath72 the random sample @xmath46 in expand ( algorithm  [ alg : expand ] ) has to fall inside @xmath78 .",
    "thus , in order to guarantee that @xmath72 will be added to @xmath44 , with non - zero probability , we show that the shared region between these two cells has non - zero measure , namely @xmath79 , where @xmath80 denotes the volume of @xmath81 .    by the general position assumption",
    "we can deduce that @xmath82 and @xmath83 .",
    "in addition , the intersection between the two cells is clearly non - empty : there is a ball with radius @xmath84 whose center is @xmath36 and is completely contained in @xmath73 ; similarly , there is a cone of solid angle @xmath85 with apex at @xmath36 fully contained in @xmath74 .",
    "hence , it holds that @xmath79 , otherwise @xmath36 and @xmath72 are embedded in the same point .",
    "we note that a more careful analysis can yield an explicit bound on the convergence rate of drrt .",
    "such a bound may be computed using the size of the smallest cell in the voronoi diagram of all nodes of  @xmath30 .",
    "[ ]   [ ]    + [ fig : drrt_2 ] [ ]   [ fig : drrt_3 ] [ ]     [ fig : drrt_alg ]",
    "in this section we describe the mrdrrt algorithm .",
    "specifically , we discuss the adaptation of drrt for pathfinding in a composite roadmap @xmath15 , which is embedded in the joint c - spaceof @xmath2 robots .",
    "in particular , we show an implementation of the oracle @xmath49 , which relies solely on the representation of @xmath11 .",
    "additionally , we discuss an implementation of the local connectorcomponent that takes advantage of the fact that @xmath15 represents a set of valid positions and movements of multiple robots .",
    "finally , we discuss the probabilistic completeness of our entire approach to multi - robot motion planning .",
    "recall that given @xmath86 and a random sample @xmath52 , @xmath87 returns @xmath88 such that @xmath88 is a neighbor of @xmath89 in @xmath15 , and for every other neighbor @xmath90 of @xmath89 , @xmath91 forms a smaller angle with @xmath92 than with @xmath93 , where @xmath94 is as defined in section  [ sec : complete ] .",
    "denote by @xmath95 the c - spaceof @xmath6 .",
    "let @xmath96 where @xmath97 , and let @xmath98 where @xmath99 . to find a suitable neighbor for @xmath89 we first find the most suitable neighbor for every individual robot and combine the @xmath2 single - robot neighbors into a candidate neighbor for @xmath89 .",
    "we denote by @xmath100 the neighbor of @xmath101 in @xmath9 that is in the direction of @xmath102 .",
    "notice that the implementation of the oracle for individual roadmaps is trivial  for example , by traversing all the neighbors of  @xmath101 in @xmath9 .",
    "let @xmath103 be a candidate for the result of @xmath87 .",
    "if @xmath104 represents a valid edge in @xmath15 , i.e. , no robot - robot collision occurs , we return @xmath88 . otherwise , @xmath87 returns @xmath64 . in this case , the new sample is ignored and another sample is drawn in the expand phase ( algorithm  [ alg : expand ] ) .    the completeness proof of the drrt ( theorem  [ thm : complete ] ) for this specific implementation of @xmath49 , is straightforward .",
    "notice that in order to extend @xmath98 to @xmath103 the sample @xmath96 must obey the following restriction : for every robot @xmath6 , @xmath102 must lie in @xmath105 ( where in the original proof we required that @xmath52 will lie in @xmath106 ) .",
    "also note that the points in @xmath95 are in general position , as required by theorem  [ thm : complete ] , since they were uniformly sampled by prm .",
    "recall that in the general drrt algorithm the local connectoris used for connecting two given vertices of a graph . as our local connectorwe rely on a framework described by van den berg et al .",
    "given two vertices @xmath107 of @xmath15 we find for each robot @xmath16 a path @xmath108 on @xmath9 from @xmath18 to @xmath24 .",
    "the connector attempts to find an ordering of the robots such that robot @xmath16 does not leave its start position on @xmath108 until robots with higher priority reached their target positions on their respective path , and of course that it also avoids collisions .",
    "when these robots reach their destination robot @xmath16 moves along @xmath108 from @xmath109 to @xmath110 . during the movement of this robot",
    "the other robots stay put .",
    "the priorities are assigned according to the following rule : if moving robot @xmath16 along @xmath108 causes a collision with robot @xmath111 that is placed in @xmath112 then robot @xmath16 should move _ after _",
    "robot @xmath111 .",
    "similarly , if @xmath16 collides with robot @xmath111 that is placed in @xmath113 then robot @xmath16 should move _ before _",
    "robot @xmath111 .",
    "this prioritization induces a directed graph @xmath114 . in case",
    "this graph is acyclic we generate a solution according to the prioritization of the robots .",
    "otherwise , we report failure .",
    "we decided to use this simple technique in our experiments due to its low cost , in terms of running time , regardless of whether it succeeds finding a solution or not .",
    "we wish to mention that we also experimented with m * with a bounded degree of coupling ( to avoid considering exponentially many neighbors ) as the local connector in our algorithm .",
    "however , the ordering algorithm of  @xcite turned out to be considerably more efficient .      in order for the motion - planning framework to be probabilistically complete",
    ", we still need to show that ( i )  as the number of samples used for each single - robot roadmap tends to infinity , the composite roadmap will contain a path ( if such a path exists ) and ( ii )  that the proof of theorem  [ thm : complete ] still holds when the size of the graph tends to infinity .",
    "indeed , vestka and overmars  @xcite show that the composite roadmap approach is probabilistically complete when the graph - search algorithm is complete .",
    "however , in our setting , the graph - search algorithm is only probabilistically complete and the proof may need to be refined as the size of each voronoi cell tends to zero .",
    "we note that as the composite roadmap is finite , it is easy to modify the drrt algorithm such that it will be complete .",
    "this may be done by keeping a list of exposed nodes that still have unexposed edges . at the end of every iteration of the main loop of drrt ( algorithm  [ alg : planner ] , line 2 )",
    "one node is picked from the list and one of its unexposed edges is exposed ( finding an unexposed edge is done in a brute force manner ) .",
    "although the above modification ensures completeness of drrt and hence probabilistic completeness of mrdrrt , we are currently looking for an alternative proof that does not require altering the drrt algorithm .",
    "we implemented mrdrrt for the case of polyhedral robots translating and rotating among polyhedral obstacles ( see figure  [ fig:3d_scenarios ] ) .",
    "we compared the performance of mrdrrt with rrt and an improved ( recursive ) version of m * that appears in  @xcite . to make the comparison as equitable as possible",
    ", as drrt does not take into consideration the quality of the solution , we use the _ inflated _ version of m *  @xcite with relaxed optimality guarantees .    *",
    "implementation details . *",
    "the algorithms were implemented in c.08ex .",
    "the experiments were conducted on a laptop with an intel i5 - 3230 m 2.60ghz processor with 16 gb of memory , running 64-bit windows 7 .",
    "we implemented a generic framework for multi - robot motion planning based on composite roadmaps .",
    "the implementation relies on pqp  @xcite for collision detection , and performs nearest - neighbor queries using the fast library for approximate nearest neighbors ( flann )  @xcite .",
    "metrics , sampling and interpolation in the 3d environments followed the guidelines presented by kuffner  @xcite . to eliminate the dependence of drrt on parameters we assigned them according to the number of iterations the algorithm performed so far , i.e. , the number of times that the main loop has been repeated .",
    "specifically , in the @xmath16th iteration each expand  ( algorithm  [ alg : expand ] ) call performs @xmath115 iterations ( @xmath116 ) , while connect_to_target uses @xmath117 candidates that are connected with @xmath32 .    * test scenarios .",
    "* we report in table  [ tbl : coupled_scenarios ] the running times of m * and drrt for the scenarios .",
    "the first three scenarios are especially challenging as they consist of a large number of robots , and require a substantial amount of coordination between them .",
    "the fourth scenario ( `` home '' ) is more relaxed and consists of only five robots and requires little coordination .",
    "we ran each of the three algorithms 10 times on each scenario .",
    "rrt proved incapable of solving any of the test scenarios , running for several tens of minutes until terminating due to exceeding the memory limits .",
    "we believe that rrt as - is is not suitable for high - dimensional , coupled , multi - robot motion planning .",
    "m * exhibited slightly better performance .",
    "for the first three scenraios , which involve multiple robots and require a substantial amount of coordination , it never exceeded a success rate of 40% .",
    "in particular , it often ran out of memory or ran for a very long duration ( we terminated it if its running time exceeded ten times the running time of mrdrrt ) . on the other hand , mrdrrt was stable in its results and managed to solve all the scenarios for each of the 10 attempts . when m * did manage to solve one of the first three scenarios , it explored between 2.5 to 10 times the number of vertices that drrt explored .",
    "for the fourth scenario the results of mrdrrt and m * were comparable and in general we found m * more suitable for situations where only a small number of robots have to interact at any given time .",
    "we mention that mrdrrt was unable to solve scenarios that consist of a substantially larger number of robot than we used in our experiments .",
    "we believe that it would be beneficial to consider a stronger _ local connector _ in such cases .",
    "c||c|c||c|c|c||c|c|c|c|c| & & & + & & & visited & total & success & visited & connect & expand & total & success + & & & vertices & time & rate & vertices & time & time & time & rate + & 8k & 10s & dnf & dnf & 0% & 8k & 3.3s & 6.7s & 11s & 100% + & 10k & 24.8s & 300k & 267s & 30% & 34k & 30.4s & 25.5s & 55.9s & 100% + & 10k & 16.2s & 27k & 31s & 40% & 12k & 16.3s & 36.8s & 53.1s & 100% + & 5k & 10.1s & 2k & 3.9s & 100% & 8k & 1.5s & 2.9s & 4.4s & 100% +    [ tbl : coupled_scenarios ]",
    "in this section we state the benefits of mrdrrt , which consists of an implicitly represented roadmaps for multi - robot motion planning combined with an efficient approach for pathfinding for such roadmaps .",
    "recall that the implicitly - represented composite roadmap @xmath15 results from a tensor product of @xmath2 prm roadmaps @xmath118 .",
    "the reliance on the precomputed individual roadmaps eliminates the need to perform additional collision checking between robots and obstacles while querying @xmath15 .",
    "this has a substantial impact on the performance of mrdrrt as it is often the case that checking whether @xmath2 robots collide with obstacles is much more costly than checking whether the @xmath2 robots collide between themselves .",
    "this is in contrast with more naive approaches , such as rrt which consider the group of robots as one large robot . in such cases , checking whether a configuration ( or an edge ) is collision free requires checking for the two types of collisions simultaneously .",
    "the m * algorithm , which also uses the underlying structure of  @xmath15 , performs very well in situations where only a small subset of the robots need to coordinate . in these situations",
    "it can cope , almost effortlessly , with several tens of robots while outperforming our framework .",
    "however , in scenarios where a substantial amount of coordination is required between the robots m * suffers from a disadvantage , since it is forced to consider exponentially many neighbors when performing the search on @xmath15 .",
    "in contrast , drrt performs a `` minimalistic '' search and advances in small steps , little by little , regardless of the difficulty of the problem at hand .",
    "moreover , drrt strives to reach unknown regions in @xmath15 while avoiding spending too much time in the exploration of regions that are in the vicinity of explored vertices .",
    "this is done via the voronoi bias , as shown in the proof of theorem  [ thm : complete ] .",
    "this is extremely beneficial when working on @xmath15 since it contains vertices which represent essentially the same conformation of the robots , and thus considering many vertices within a small region would not lead to a better understanding of the problem at hand . to justify this claim ,",
    "consider the following example .",
    "suppose that for every robot @xmath16 , @xmath18 is a vertex of @xmath119 that has @xmath8 neighbors in @xmath9 at distance at most @xmath120 .",
    "then the vertex @xmath121 might have as much as @xmath122 neighbors that are at distance at most @xmath123 in @xmath15 .",
    "* towards optimality .",
    "* currently , our algorithmic framework is concerned with finding _ some _ solution .",
    "our immediate future goal is to modify it to provide a solution with quality guarantees , possibly by taking an approach similar to the continuous rrt * algorithm  @xcite , which is known to be asymptotically optimal . a fundamental difference between rrt * and the original formulation of rrt is in a rewiring step , where the structure of the tree is revised to improve previously examined paths .",
    "specifically , when a new node is added to the tree , it is checked as to whether it will be more beneficial for some of the existing nodes to point to the new vertex instead of their current parent in the tree .",
    "this can be adapted , to some extent , to the discrete case , although it is not clear whether this indeed will lead to optimal paths .",
    "* drrt in other settings of motion planning . * in this paper we combined the drrt algorithm with implicit composite roadmaps to provide an efficient algorithm for multi - robot motion planning .",
    "one of the benefits of our framework comes from the fact that it reuses some of the already computed information to avoid performing costly operations .",
    "in particular , it refrains from checking collisions between robots with obstacles by forcing the individual robots to move on precalculated individual roadmaps ( i.e. , @xmath9 ) .",
    "we believe that a similar approach can be used in other settings of motion planning .",
    "in particular , we are currently working on a drrt - based approach for motion planning of a multi - linked robot .",
    "the new approach generates an implicitly - represented roadmap , which encapsulates information on configurations and paths between configuration that do not induce self - intersections of the robot , while ignoring the existence of obstacles .",
    "then , we overlay this roadmap on the workspace , an operation which invalidates some of the nodes and edges of the roadmap .",
    "thus , we know only which configurations are self - collision free , but not obstacles collision - free",
    ". then we use drrt for pathfinding on the new roadmap , while avoiding self - collision tests and while exploring a small portion of the infinite roadmap .",
    "we wish to thank glenn wagner for advising on the m * algorithm and ariel felner for advice regarding pathfinding algorithms on graphs .",
    "we note that the title `` finding a needle in an exponential haystack '' has been previously used in a talk by joel spencer in a different context .",
    "aronov , b. , de  berg , m. , van  der stappen , a.f . , vestka , p. , vleugels , j. : http://link.springer.com/article/10.1007%2fpl00009476?li=true[motion planning for multiple robots ] .",
    "discrete & computational geometry 22(4 ) , 505525 ( 1999 )        van  den berg , j. , snoeyink , j. , lin , m. , manocha , d. : http://www.roboticsproceedings.org/rss05/p18.html[centralized path planning for multiple robots : optimal decoupling into sequential plans ] . in : rss ( 2009 )      branicky , m.s . ,",
    "curtiss , m.m . ,",
    "levine , j.a . ,",
    "morgan , s.b .",
    ": http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=1272639&url=http%3a%2f%2fieeexplore.ieee.org%2fxpls%2fabs_all.jsp%3farnumber%3d1272639[rrts for nonlinear , discrete , and hybrid planning and control ] . in : decision and control .",
    "912 ( 2003 )      ucan , i.a . ,",
    "moll , m. , kavraki , l.e . :",
    "open motion planning library ] .",
    "ieee robotics & automation magazine 19(4 ) , 7282 ( 2012 )      hirsch , s. , halperin , d. : http://link.springer.com/chapter/10.1007%2f978-3-540-45058-0_15?li=true[hybrid motion planning : coordinating two discs moving among polygonal obstacles in the plane ] . in : wafr .",
    ". 239255 .",
    "springer ( 2002 )    hopcroft , j. , schwartz , j. , sharir , m. : http://ijr.sagepub.com/content/3/4/76.short[on the complexity of motion planning for multiple independent objects ; pspace - hardness of the `` warehouseman s problem '' ] .",
    "ijrr 3(4 ) , 7688 ( 1984 )          kornhauser , d. : coordinating pebble motion on graphs , the diameter of permutation groups , and applications .",
    "thesis , department of electrical engineering and computer scienec , massachusetts institute of technology ( 1984 )    kuffner , j.j . ,",
    "lavalle , s.m . : http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=844730&url=http%3a%2f%2fieeexplore.ieee.org%2fxpls%2fabs_all.jsp%3farnumber%3d844730[rrt-connect : an efficient approach to single - query path planning ] . in : icra .",
    "9951001 ( 2000 )        leroy , s. , laumond , j.p . ,",
    "simeon , t. : http://ijcai.org/past%20proceedings/ijcai-99%20vol-2/pdf/064.pdf[multiple path coordination for mobile robots : a geometric algorithm ] . in : ijcai .",
    "11181123 ( 1999 )          salzman , o. , hemmer , m. , halperin , d. : http://link.springer.com/chapter/10.1007%2f978-3-642-36279-8_19[on the power of manifold samples in exploring configuration spaces and the dimensionality of narrow passages ] .",
    "313329 ( 2012 )    sanchez , g. , latombe , j.c . : http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=1014852&url=http%3a%2f%2fieeexplore.ieee.org%2fxpls%2fabs_all.jsp%3farnumber%3d1014852[using a prm planner to compare centralized and decoupled planning for multi - robot systems ] . in : icra",
    "pp . 21122119 ( 2002 )                wagner , g. , choset , h. : http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=6095022&url=http%3a%2f%2fieeexplore.ieee.org%2fxpls%2fabs_all.jsp%3farnumber%3d6095022[m * : a complete multirobot path planning algorithm with performance bounds ] . in : iros .",
    "32603267 . ieee ( 2011 )    wagner , g. , kang , m. , choset , h. : http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=6225297&url=http%3a%2f%2fieeexplore.ieee.org%2fxpls%2fabs_all.jsp%3farnumber%3d6225297[probabilistic path planning for multiple robots with subdimensional expansion ] . in : icra .",
    ". 28862892 ( 2012 )"
  ],
  "abstract_text": [
    "<S> we present a sampling - based framework for multi - robot motion planning which combines an implicit representation of a roadmap with a novel approach for pathfinding in geometrically embedded graphs tailored for our setting . </S>",
    "<S> our pathfinding algorithm , _ discrete - rrt _ ( drrt ) , is an adaptation of the celebrated rrt algorithm for the discrete case of a graph , and it enables a rapid exploration of the high - dimensional configuration space by carefully walking through an implicit representation of a tensor product of roadmaps for the individual robots . </S>",
    "<S> we demonstrate our approach experimentally on scenarios of up to 60 degrees of freedom where our algorithm is faster by a factor of at least ten when compared to existing algorithms that we are aware of . </S>"
  ]
}
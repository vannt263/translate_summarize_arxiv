{
  "article_text": [
    "all the fractional factorial designs that satisfy a set of conditions in terms of orthogonality between factors have been described as the zero - set of a system of polynomial equations in which the indeterminates are the complex coefficients of their counting polynomial functions ( , ) .",
    "a short review of this theory can be found in . in section [ sec : back ] we report a part of it to facilitate the reader . in section [ sec :",
    "balance ] we write the problem of finding fractional factorial designs that satisfy a set of conditions as a system of linear equations in which the indeterminates are positive integers . in section [ sec : gof ] , using 4ti2 ( @xcite ) we find all the generators of some classes of fractional factorial designs , including mixed level orthogonal arrays and sudoku designs .",
    "finally , in section [ sec : moves ] we consider the moves between different fractions as integer valued functions defined over the full factorial design .",
    "we build a procedure to move between fractions that use markov basis .",
    "we adopt the notation used in and denote :    * by @xmath0 a _ factor _ with @xmath1 levels coded with the @xmath1-th roots of the unity : @xmath2 * by @xmath3 the _ full factorial design _ with _ complex coding _ @xmath4 * by @xmath5 the cardinality of @xmath3 . * by @xmath6 the _ full factorial design _ with _ integer coding _ @xmath7 * by @xmath8 an element of @xmath6 @xmath9 * by @xmath10 $ ] the @xmath11-tuple made by the componentwise difference @xmath12_{n_1 } , \\ldots , \\left[\\alpha_j-\\beta_j \\right]_{n_j } , \\ldots , \\left[\\alpha_m - \\beta_m\\right]_{n_m } \\right)\\ ; \\ ] ] the computation of the @xmath13-th element is in the ring @xmath14 . * by @xmath15 the @xmath13-th component function , which maps a point to its @xmath16-th component : @xmath17 the function @xmath15 is called _ simple term _ or , by abuse of terminology , _ factor_. * by @xmath18 the _ interaction term _ @xmath19 , i.e. the function @xmath20    we notice that @xmath6 is both the full factorial design with integer coding and _ the exponent set of all the simple factors and interaction terms _ and @xmath8 is both a treatment combination in the integer coding and a multi - exponent of an interaction term .    the full factorial design in complex coding is identified as the zero - set in @xmath21 of the system of polynomial equations @xmath22    1 .   a _ response _ @xmath23 on the design @xmath3 is a @xmath24-valued polynomial function defined on @xmath3 .",
    "the _ mean value _ on @xmath3 of a response @xmath23 , denoted by @xmath25 , is : @xmath26 3 .",
    "a response @xmath23 is _ centered _ on @xmath3 if @xmath27 .",
    "two responses @xmath23 and @xmath28 are _ orthogonal on @xmath3 _ if @xmath29 , where @xmath30 is the complex conjugate of @xmath28 .    it should be noticed that the set of all the responses is a complex hilbert space with the hermitian product : @xmath31 moreover    1 .",
    "@xmath32}$ ] ; 2 .",
    "@xmath33 , and @xmath34 for @xmath35 .",
    "the set of functions @xmath36 is an orthonormal basis of the _ complex responses _ on design @xmath3 .",
    "in fact @xmath37 and , from properties ( i ) and ( ii ) above , it follows that : @xmath38 } ) = \\begin{cases } 1 & \\text{if }   \\alpha=\\beta \\\\ 0 & \\text{if }   \\alpha \\neq \\beta \\end{cases}\\ ] ]    in particular , each response @xmath23 can be represented as a unique @xmath24-linear combination of constant , simple and interaction terms .",
    "this representation is obtained by repeated applications of the re - writing rules derived from equations ( [ eq : design ] ) .",
    "such a polynomial is called the _ normal form _ of @xmath23 on @xmath3 . in this paper",
    "we intend that all the computation are made using the normal form .",
    "[ ex:2to3 ]    consider the @xmath39 full factorial design .",
    "all the monomial responses on @xmath3 are @xmath40 or , equivalently , @xmath41 and @xmath6 is @xmath42      a fraction @xmath43 is a multiset @xmath44 whose underlying set of elements @xmath45 is contained in @xmath3 and @xmath46 is the multiplicity function @xmath47 that for each element in @xmath45 gives the number of times it belongs to the multiset @xmath43 .",
    "all fractions can be obtained by adding polynomial equations , called _ generating equations _ to the design equations [ eq : design ] , in order to restrict the number of solutions .",
    "if @xmath23 is a response on @xmath3 then its _ mean value on @xmath43 _ , denoted by @xmath48 , is @xmath49 where @xmath50 is the total number of treatment combinations of the fraction .",
    "a response @xmath23 is _ centered _ if @xmath51 .",
    "two responses @xmath23 and @xmath28 are _ orthogonal on @xmath43 _ if @xmath52 .    with the complex coding the vector orthogonality of two interaction terms @xmath18 and @xmath53 as defined before ( with respect to a given hermitian product ) corresponds to the combinatorial orthogonality ( all the level combinations appear equally often in @xmath54 ) .",
    "we consider the general case in which fractions can contain points that are replicated .    [",
    "de : indicator ]    the _ counting function _",
    "@xmath55 of a fraction @xmath43 is a response defined on @xmath3 so that for each @xmath56 , @xmath57 equals the number of appearances of @xmath58 in the fraction .",
    "a @xmath59 valued counting function is called _ indicator function _ of a single replicate fraction @xmath43 .",
    "we denote by @xmath60 the coefficients of the representation of @xmath55 on @xmath3 using the monomial basis @xmath61 : @xmath62    as the counting function is real valued , we have @xmath63}$ ]",
    ". we will write @xmath64 in place of @xmath65 .",
    "the counting function @xmath55 coincides with multiplicity function @xmath46 .",
    "[ pr : bc - alpha ]    let @xmath43 be a fraction of a full factorial design @xmath3 and @xmath66 be its counting function .    1 .",
    "[ it : balpha ] the coefficients @xmath60 are : @xmath67 in particular , @xmath64 is the ratio between the number of points of the fraction and that of the design . 2 .",
    "[ it : system ] in a fraction without replications , the coefficients @xmath60 are related according to : @xmath68 } \\ .\\ ] ] 3 .",
    "the term @xmath18 is centered on @xmath43 , i.e. @xmath69 , if , and only if , @xmath70}=0 \\ .\\ ] ] 4 .",
    "the terms @xmath18 and @xmath53 are orthogonal on @xmath43 , i.e. @xmath71 , if , and only if , @xmath72}=0 \\ .\\ ] ]    we consider the fraction @xmath73 of the @xmath39 full factorial design of example [ ex:2to3 ] .",
    "all the monomial responses on @xmath43 and their values on the points are @xmath74 using item [ it : balpha ] of proposition [ pr : bc - alpha ] , it is easy to compute the coefficients @xmath60 : @xmath75 ; @xmath76 and @xmath77 . hence , the indicator function is @xmath78 from the null coefficients we see that @xmath79 and @xmath80 are centered and that @xmath79 is orthogonal to both @xmath81 and @xmath80 .",
    "@xmath82      a fraction @xmath43 _ factorially projects _ onto the @xmath83-factors , @xmath84 , if the projection is a multiple full factorial design , i.e. a full factorial design where each point appears equally often .",
    "a fraction @xmath43 is a _",
    "mixed orthogonal array _ of strength @xmath85 if it factorially projects onto any @xmath83-factors with @xmath86 .",
    "strength @xmath85 means that , for any choice of @xmath85 columns of the matrix design , all possible combinations of symbols appear equally often .",
    "[ projectivity ] [ pr : projectivity ]    1 .",
    "[ it : fact ] a fraction _ factorially projects onto the @xmath83-factors _ if , and only if , all the coefficients of the counting function involving only the @xmath83-factors are 0 . 2 .",
    "if there exists a subset @xmath87 of @xmath88 such that the @xmath87-factors appear in all the non null elements of the counting function , the fraction _ factorially projects onto the @xmath83-factors _ , with @xmath89 .",
    "a fraction is an _ orthogonal array of strength @xmath85 _ if , and only if , all the coefficients of the counting function up to the order @xmath85 are zero : @xmath90    [ orthogonal array ]    the fraction of a @xmath91 full factorial design @xmath92 is an orthogonal array of strength 2 ; in fact , its indicator function @xmath93 contains only terms of order greater than 2 , together with the constant term . @xmath82",
    "from proposition [ pr : bc - alpha ] and proposition [ pr : projectivity ] we have that the problem of finding fractional factorial designs that satisfy a set of conditions in terms of orthogonality between factors can be written as a polynomial system in which the indeterminates are the complex coefficients @xmath60 of the counting polynomial fraction .",
    "let s consider 3 factors , each one with two levels .",
    "the indicator functions @xmath94 such that the terms @xmath95 are centered on @xmath43 and the terms @xmath96 @xmath97 are orthogonal on @xmath43 , where @xmath98 , are those for which the following conditions on the coefficients of @xmath99 holds @xmath100    apart from the trivial @xmath101 , i.e. @xmath102 and @xmath103 , i.e. @xmath104 we find @xmath105 and @xmath106    let s now introduce a different way to describe the full factorial design @xmath3 and all its subsets .",
    "let s consider the indicator functions @xmath107 of all the single points of @xmath3 @xmath108 it follows that the counting function @xmath55 of a fraction @xmath43 can be written as @xmath109 with @xmath110 .",
    "the particular case in which @xmath55 is an indicator function corresponds to @xmath111 .",
    "the coefficients @xmath112 are related to the coefficients @xmath60 as in the following proposition [ pr : beqy ]    [ pr : beqy ] let @xmath43 be a fraction of @xmath3 .",
    "its counting fraction @xmath55 can be expressed both as @xmath113 and @xmath114 .",
    "the relation between the coefficients @xmath60 and @xmath112 is @xmath115    from proposition [ pr : bc - alpha ] we have @xmath116      as described in section [ sec : back ] , we consider @xmath11 factors , @xmath117 where @xmath118 , for @xmath119 . from , we recall two basic properties which hold true for the full design @xmath3    [ pr : p-1 ] let @xmath15 the simple term with level set @xmath120 .",
    "let s consider the term @xmath121 and let s define @xmath122 over @xmath3 , the term @xmath121 takes all the values of @xmath123 equally often .",
    "[ pr : p-2 ] let @xmath124 an interaction .",
    "@xmath125 takes values in @xmath126 where @xmath127 is determined according to the previous proposition [ pr : p-1 ] .",
    "let s define @xmath128 . over @xmath3 ,",
    "the term @xmath18 takes all the values of @xmath129 equally often .",
    "let s now define the strata that are associated to simple and interaction terms",
    ".    given a term @xmath130 the full design @xmath3 is partitioned into the the following strata @xmath131 where @xmath132 and @xmath133 is determined according to the previous propositions [ pr : p-1 ] and [ pr : p-2 ] .",
    "we define strata using the conjugate @xmath134 of the term in place of the term @xmath135 itself because it will simplify the notations .",
    "each stratum is a regular fraction whose defining equation is @xmath136 , .",
    "we use @xmath137 to denote the number of points of the fraction @xmath43 that are in the stratum @xmath138 , with @xmath139 , @xmath140    the following proposition [ pr : ceqn ] links the coefficients @xmath60 with @xmath137 .",
    "[ pr : ceqn ] let @xmath43 be a fraction of @xmath3 with counting fraction @xmath141 .",
    "each @xmath142 , depends on @xmath143 , as @xmath144 where @xmath133 is determined by @xmath18 ( see proposition [ pr : p-2 ] ) .",
    "viceversa , each @xmath143 , depends on @xmath145 } , k=0,\\ldots , s-1 $ ] as @xmath146 } \\omega_{[hk]}\\ ] ]    using proposition [ pr : beqy ] , it follows that we can write the coefficients @xmath60 in the following way @xmath147 for the viceversa , we observe the indicator function of strata can be obtained as follows .",
    "we define @xmath148 we have @xmath149 for all @xmath150 .",
    "it follows that @xmath151 is the indicator function associated to @xmath152 .",
    "the indicator of @xmath153 } \\right \\}$ ] will be @xmath154}\\zeta^{(s-1)\\alpha}\\right ) \\ ] ] we get @xmath155 } x^{k\\alpha}(\\zeta ) \\right ) \\left ( \\sum_{\\beta } c_\\beta x^{\\beta}(\\zeta)\\right)= \\\\ & = & \\frac{\\#{{\\mathcal d}}}{s } \\sum_{k,\\beta : [ k\\alpha+\\beta]=0 } \\omega_{[kh ] } c_\\beta = \\frac{\\#{{\\mathcal d}}}{s } \\sum_{k=0}^{s-1 } \\omega_{[kh ] } c_{[-k\\alpha ] } \\\\\\end{aligned}\\ ] ]    from proposition [ pr : ceqn ] we get @xmath156}\\end{aligned}\\ ] ] and in particular @xmath157 .",
    "we now use a part of proposition 3 of to get conditions on @xmath137 that makes @xmath18 centered on the fraction @xmath43 .",
    "[ pr : pr3jspi ] let @xmath18 be a term with level set @xmath129 on full design @xmath3 .",
    "let @xmath158 the complex polynomial associated to the sequence @xmath159 so that @xmath160 and let s denote by @xmath161 the cyclotomic polynomial of the @xmath133-roots of the unity .    1 .",
    "let @xmath133 be prime .",
    "the term @xmath18 is centered on the fraction @xmath43 if , and only if , its @xmath133 levels appear equally often : @xmath162 2 .",
    "let @xmath163 with @xmath164 prime , for @xmath165 .",
    "the term @xmath18 is centered on the fraction @xmath43 if , and only if , the remainder @xmath166 whose coefficients are integer linear combinations of @xmath143 , is identically zero .",
    "see proposition 3 of .    being @xmath138 a partition of @xmath3 , if @xmath133 is prime we get @xmath167 .",
    "if we remind that @xmath137 are related to the values of the counting function @xmath55 of a fraction @xmath43 by the following relation @xmath168 this proposition [ pr : pr3jspi ] allows to express the condition _",
    "@xmath18 is centered on @xmath43 _ as integer linear combinations of the values @xmath57 of the counting function over the full design @xmath3 . in the section [ sec : gof ]",
    ", we will show the use of this property to generate fractional factorial designs .",
    "we conclude this section limiting to the particular case where all factors have the same number of levels @xmath133 and @xmath133 is prime .",
    "we provide some results concerning the coefficients of counting functions , regular fractions , wordlength patterns and margins .      from proposition",
    "[ pr : pr3jspi ] we get the following result on the coefficients of a counting function    [ pr : samestrata ] given a counting function @xmath169 , if @xmath170 then @xmath171}=0 $ ] for all @xmath172 , where @xmath173 $ ] is @xmath174 in the ring @xmath175 .",
    "let s consider @xmath176 . from proposition [ pr : pr3jspi ]",
    ", @xmath176 is equal to zero if , and only if , @xmath177 we observe that @xmath178 } \\right \\ } = d_{[kh]}^{\\alpha}\\end{aligned}\\ ] ] where @xmath179 $ ] is @xmath180 in the ring @xmath181 .",
    "it follows that @xmath182 and @xmath183 partition @xmath3 in the same strata and therefore we get the proof .",
    "let s consider a fraction @xmath43 without replicates and with indicator function @xmath184 .",
    "proposition 5 in ( ) states that a fraction @xmath43 is regular if , and only if , its indicator function @xmath99 has the form @xmath185 where @xmath186 , @xmath187 is a subgroup of @xmath6 and @xmath188 is a given mapping .",
    "if we use proposition [ pr : pr3jspi ] we immediately get a characterisation of regular fractions based on the frequencies @xmath137 .",
    "given a single replicate fraction @xmath43 with indicator function @xmath189 the following statements are equivalent :    1 .",
    "@xmath43 is regular 2 .   for @xmath137",
    "there are only two possibilities 1 .   if @xmath170 then @xmath190 , 2 .   if @xmath191 then @xmath192 such that @xmath193    using proposition [ pr : ceqn ] we get @xmath194 proposition 5 in gives the following conditions on the coefficients of the indicator function @xmath99 of a regular fraction @xmath43 : @xmath195 where @xmath188 , @xmath196 and @xmath187 is a subgroup of @xmath6 .",
    "let s consider @xmath197 .",
    "we get @xmath198 let s suppose @xmath199 .",
    "we obtain @xmath200 to simplify the notation we let @xmath201 and @xmath202 .",
    "therefore , from the proof of item ( 1 ) of proposition [ pr : pr3jspi ] , for the relation [ eq ] to be valid , it should be @xmath203 being @xmath204 it follows @xmath205 and so @xmath206 we finally get @xmath207 being @xmath187 a subgroup of @xmath6 it follows that @xmath208 and so @xmath209 .",
    "we also know that @xmath210 and therefore @xmath211 for the null coefficients of @xmath99 , @xmath212 , it is enough to use proposition [ pr : c - strata ] to conclude the proof .",
    "aberration is often used as a criterion to compare fractional factorial designs .",
    "the generalized minimum aberration , proposed by , is based on the generalised wordlength pattern , see also .",
    "it can be shown that the generalized wordlengths can be written in terms of the squares of the modules of the coefficients @xmath60 , obtaining @xmath213 where @xmath214 is the hamming weight of @xmath8 , i.e. the number of nonzero components of @xmath8 .",
    "we now express the square of the module of the coefficient @xmath60 in terms of @xmath137 .",
    "[ pr : modulo ] @xmath215 } ) \\ ; \\text { for } \\gamma \\in \\{1,\\ldots , s-1\\}\\ ] ]    from proposition [ pr : ceqn ] we get @xmath194 it follows @xmath216 } ) = \\\\                   & = & \\frac{1}{(\\#{{\\mathcal d}})^2 } \\sum_{\\gamma=0}^{s-1 } \\sum_{p=0}^{s-1 } n_{\\alpha , p } n_{[\\alpha , p-\\gamma ] } \\omega_\\gamma \\end{aligned}\\ ] ]    @xmath217 must be a real number .",
    "being @xmath218 it follows @xmath219 } \\omega_\\gamma = 0\\end{aligned}\\ ] ] to simplify the notation we let @xmath220 and @xmath221 } , \\gamma=1,\\ldots , s-1 $ ] .",
    "therefore , by lemma [ le : roots ] , for the relation [ eq1 ] to be valid , it should be @xmath203 using one of the equalities , @xmath222 @xmath223 , it follows @xmath224})\\ ] ]    proposition [ pr : modulo ] provides a useful tool to compute the modules of the coefficients @xmath60 .",
    "indeed it is enough to choose @xmath225 and compute @xmath217 as @xmath226})$ ] ;    we make explicit these relations for @xmath227 and @xmath228 level fraction .",
    "if @xmath229 then @xmath230 if @xmath231 then , choosing @xmath225 , @xmath232    we observe that , denoting by @xmath233 the mean of the values of @xmath137 , @xmath234 , we get @xmath235 we have @xmath236 } + \\ldots 2 \\sum_{h=0}^{s-1 } n_{\\alpha , h } n_{\\alpha,[h - s _ * ] } \\right)\\end{aligned}\\ ] ] where @xmath237 .",
    "proposition [ pr : modulo ] states that all the quantities @xmath238}$ ] are equal and so , choosing , without loss of generality , @xmath225 , we get @xmath239 } \\right ) = \\frac{1}{s^2 }   \\left ( \\sum_{h=0}^{s-1 } { n_{\\alpha , h}^2 } + ( s-1 ) \\sum_{h=0}^{s-1 } n_{\\alpha , h } n_{\\alpha,[h-1 ] } \\right)\\ ] ] and therefore @xmath240 } \\right ) = \\\\ & = & \\frac{s-1}{s } ( \\ # { { \\mathcal d}})^2 \\left| c_\\alpha \\right|^2\\end{aligned}\\ ] ] it follows that , if we denote by @xmath241 the variance of @xmath137 , @xmath242 we get @xmath243 and so the square of the module of @xmath60 represents , apart from a multiplicative constant , the variance of the frequencies @xmath137 .",
    "we now examine the relationship between the margins and the coefficients of the counting functions .",
    "we refer to ( ) and we report here a part of it .    for each point @xmath56 we consider the decomposition @xmath244 where @xmath245 and @xmath246 is its complement .",
    "we denote by @xmath247 the number of points in @xmath43 whose projection on the @xmath83 factors is @xmath248 .    in particular if @xmath249 we have @xmath250 and if @xmath251 we have @xmath252 .",
    "we denote by @xmath253 the subset of the exponents restricted to the @xmath83 factors and by @xmath254 an element of @xmath253 : @xmath255 then for each @xmath256 and @xmath56 we have @xmath257 and @xmath258 .",
    "finally we denote by @xmath259 and @xmath260 the full factorial over the @xmath83 factors and @xmath87 factors , respectively ( @xmath261 ) .",
    "we have the following proposition ( see item 1 and 2 of proposition 4 of )    [ pr : pr4_gpmpr ] given a fraction @xmath43 of @xmath3    1 .",
    "the number of replicates of the points of @xmath43 projected on the @xmath83 factors is : @xmath262 2 .",
    "@xmath43 fully projects on the @xmath83 factors if , and only if , @xmath263    we will refer to @xmath264 as @xmath265-margin , where @xmath266 .",
    "the number of @xmath265-margins is @xmath267 and each @xmath265-margin can be computed over @xmath268 points @xmath269 .",
    "it follows that there are @xmath270 marginal values in total .    using item 1 of proposition [ pr : pr4_gpmpr ] and reminding that we work with a prime number of level s we have @xmath271 or , by the definition of @xmath264 as the restriction of @xmath55 over the @xmath83 factors , @xmath272    we point out the following relationship between margins .",
    "[ pr : hierarchy ] if @xmath273 and @xmath274 then @xmath275 where @xmath276 and @xmath277    let s put @xmath278 .",
    "we have @xmath279    we finally observe that , as we already pointed out , given @xmath280 a set of conditions @xmath281 translates in a set of conditions @xmath282 where @xmath283 does not depend by @xmath8 ( and by @xmath284 ) . in general , with respect to margins , the situation is different . for example let s suppose to have a @xmath43 that fully projects over the @xmath285 and the @xmath286 factors , with @xmath287 and @xmath288 . from proposition [ pr : pr4_gpmpr ]",
    "we obtain @xmath289",
    "let use strata to generate fractions that satisfy a given set of constrains on the coefficients of their counting functions .",
    "formally we give the following definition    a counting function @xmath290 associated to @xmath43 is a @xmath291-compatible counting function if its coefficients satisfy to @xmath292    we will denote by @xmath293 the set of all the fractions whose counting functions are @xmath294-compatible .    in the next sections , we will show our methodology on orthogonal arrays and sudoku designs .",
    "let s consider @xmath295 , i.e. orthogonal arrays with @xmath296 rows and @xmath11 columns where each columns has @xmath133 symbols , @xmath133 prime and with strength @xmath85 .",
    "using proposition [ pr : projectivity ] we have that the coefficients of the corresponding counting functions must satisfy the conditions @xmath170 for all @xmath297 where @xmath298 where @xmath299 is the number of non null elements of @xmath8 .",
    "we have @xmath300 coefficients that must be null .",
    "it follows that @xmath301 .    now using proposition [ pr : pr3jspi ]",
    ", we can express these conditions using strata .",
    "if we consider @xmath302 we write the condition @xmath170 as @xmath303    to obtain all the conditions it is enough to vary @xmath297 .",
    "we use proposition [ pr : samestrata ] to limit to the @xmath8 that give different strata .",
    "it is easy to show that we obtain @xmath304 different @xmath8 , each of them generate @xmath133 linear equations , for a total of @xmath305 constraints on the values of the counting function over @xmath3 .",
    "we therefore get the following system of linear equations @xmath306 where @xmath307 is the @xmath308 matrix whose rows contains the values , over @xmath3 , of the indicator function of the strata , @xmath309 , @xmath310 is the @xmath311 column vector whose entries are the values of the counting function over @xmath3 , @xmath283 will be equal to @xmath312 and @xmath313 is the @xmath311 column vector whose entries are all equal to @xmath314 .",
    "we can write an equivalent homogeneous system if we consider @xmath283 as a new variable .",
    "we obtain @xmath315 where @xmath316 = \\left [ a , -\\underline{1 } \\right]\\ ] ] and @xmath317 = \\left ( y , \\lambda \\right)\\ ] ]    in an equivalent way , we can also express the conditions @xmath170 for all @xmath297 in terms of margins .",
    "we obtain @xmath318 where @xmath319 and @xmath320 .",
    "if we recall proposition [ pr : hierarchy ] , we can limit to the margins @xmath264 where @xmath86 .",
    "we have @xmath321 values of such @xmath85 margin @xmath322 in this case , with the same approach that we adopted for strata , we obtain a system of linear equations @xmath323 where @xmath324 and its equivalent homogeneous system @xmath325 now we can find all the generators of @xmath326 , that means of orthogonal arrays @xmath295 , by computing the hilbert basis corresponding to @xmath327 ( or , equivalently , to @xmath328 .",
    "this approach is the same of but , in that work , the following conditions were used @xmath329 the advantage of using strata ( or margins ) is that we avoid computations with complex numbers ( @xmath330 ) .",
    "we explain this point in a couple of examples . for the computation we use 4ti2 ( @xcite ) .",
    "we use both @xmath327 ( strata ) and @xmath331 ( margins ) because , even if they are fully equivalent from the point of view of the solutions that they generate , they perform differently from the point of view of the computational speed .",
    "@xmath332 were investigated in .",
    "we build both the matrix @xmath327 and @xmath331 .",
    "they have @xmath333 rows and @xmath334 rows , respectively and @xmath335 columns .",
    "we find the same @xmath336 solutions as in the cited paper .",
    "we build both the matrix @xmath327 and @xmath331 .",
    "they have @xmath338 rows and @xmath339 rows , respectively and @xmath340 columns .",
    "we find @xmath341 solutions , @xmath342 have @xmath343 points , all different and @xmath338 have @xmath344 points , @xmath345 different .",
    "finally we point out that 4ti2 allows to specify upper bounds for variables .",
    "for example , if we use @xmath331 and we are interested in single replicate orthogonal arrays , we can set @xmath314 as the upper bound for @xmath346 .",
    "the upper bound for the variable @xmath347 can be set to @xmath348 that corresponds to @xmath349 , i.e. to the full design @xmath3 .",
    "let s now consider the general case in which we do not put restrictions on the number of levels .      in this case",
    "the number of levels is a power of a prime , @xmath352 . using proposition [ pr : projectivity ] we have that the coefficients of the corresponding counting functions must satisfy the conditions @xmath170 for all @xmath297 where @xmath353 .",
    "let s consider @xmath354 .",
    "from proposition [ pr : p-1 ] we have that @xmath79 takes the values in @xmath129 where @xmath355 . from proposition [ pr :",
    "pr3jspi ] , @xmath79 will be centered on @xmath43 if , and only if , the remainder @xmath356 is identically zero .",
    "we have @xmath357 ( see @xcite ) and so we can compute the remainder @xmath358 the condition @xmath359 identically zero translates into @xmath360 let s now consider @xmath361 . from proposition [ pr : p-1 ]",
    "we have that @xmath362 takes the values in @xmath129 where @xmath229 . from proposition [ pr : pr3jspi ] ,",
    "@xmath362 will be centered on @xmath43 if , and only if , the remainder @xmath363 is identically zero .",
    "we have @xmath364 ( see @xcite ) and so we can compute the remainder @xmath365 if we repeat the same procedure for all the @xmath8 such that @xmath366 and we recall that @xmath140 orthogonal arrays @xmath351 become the integer solutions of the following integer linear homogeneous system @xmath367 \\left [ \\begin{array}{c } y_{00 } \\\\ y_{10 } \\\\ y_{20 } \\\\",
    "y_{33 }   \\end{array } \\right]\\ ] ] using 4ti2 we find @xmath368 solutions that correspond to all the latin hypercupe designs ( lhd ) .      as in the previous examples , using proposition [ pr : projectivity ] we have that the coefficients of the corresponding counting functions must satisfy the conditions @xmath170 for all @xmath297 where @xmath353 .",
    "let s consider @xmath354 .",
    "from proposition [ pr : p-1 ] we have that @xmath79 takes the values in @xmath129 where @xmath370 . from proposition",
    "[ pr : pr3jspi ] , @xmath79 will be centered on @xmath43 if , and only if , the remainder @xmath371 is identically zero .",
    "we have @xmath372 ( see @xcite ) and so we can compute the remainder @xmath373 if we repeat the same procedure for all the @xmath8 such that @xmath366 and we recall that @xmath140 orthogonal arrays @xmath369 become the integer solutions of an integer linear homogeneous system @xmath374 where the matrix @xmath307 is built as in the previous case of @xmath351 . using 4ti2 we find @xmath375 solutions that correspond to all the latin hypercupe designs ( lhd ) .      as shown in , a sudoku can be described using its indicator function . here",
    "we report a very short synthesis of section 1.3 of that work .",
    "a @xmath376 with @xmath377 prime sudoku design can be seen as a fraction @xmath43 of the full factorial design @xmath3 : @xmath378 where each factor is coded with the @xmath377-th roots of the unity . @xmath379 and @xmath380 , @xmath381 and @xmath382 , @xmath383 and @xmath384 ,",
    "represent the rows , the columns and the symbols of the sudoku grid , respectively .    the following proposition",
    "( proposition 5 of ) holds .",
    "[ pr : pr5 ] let @xmath99 be the indicator function of a fraction @xmath43 of a design @xmath385 , @xmath386 .",
    "the fraction @xmath43 corresponds to a sudoku grid if and only if the coefficients @xmath387 satisfy the following conditions :    1 .",
    "[ it : b0 ] @xmath388 , i.e. the ratio between the number of points of the fraction and the number of points of the full factorial design is @xmath389 ; 2 .   [",
    "it : b ] for all @xmath390 : 1 .",
    "@xmath391 for @xmath392 , 2 .",
    "@xmath393 for @xmath394 , 3 .",
    "@xmath395 for @xmath396 , 4 .",
    "@xmath397 for @xmath398 + i.e. the fraction factorially projects onto the first four factors and onto both symbol factors and row / column / box factors , respectively .    from this proposition",
    ", we define @xmath294 as the union of @xmath399 , @xmath400 , @xmath401 and @xmath402 , where @xmath403 the problem of finding sudoku becomes equivalent to find @xmath294-compatible counting functions , that are ( i ) indicator functions and ( ii ) that satisfy the additional requirement @xmath404 .",
    "we use the conditions @xmath294 to build both the matrices @xmath327 and @xmath331 .",
    "@xmath327 has @xmath406 rows . with respect to @xmath331 , that corresponds to the margins that must be constant ,",
    "if we recall proposition [ pr : hierarchy ] we obtain @xmath407 constraints , all corresponding to @xmath408-margins . to find all sudoku we use 4ti2 , specifying the upper bounds for all the @xmath409 variables .",
    "the upper bounds for @xmath410 must be equal to @xmath314 .",
    "if we use @xmath327 , the upper bound for @xmath283 must be set equal to @xmath411 , while if we use @xmath412 the upper bound for @xmath347 must be set equal to @xmath413 .",
    "we find all the @xmath414 different @xmath405 sudoku as in .",
    "we point out that to solve the problem using @xmath327 the total time was @xmath415 minutes , while using @xmath331 the total time was only @xmath416 seconds on the same computer .",
    "if we admit counting functions with values in @xmath417 and @xmath418 we find @xmath419 solutions .",
    "sometimes , given a set of conditions @xmath294 we are interested in picking up a solution more than in finding all the generators .",
    "the basic idea is to generate somehow a starting solution and then to randomly walk in the set of all the solutions for a certain number of steps , taking the arrival point as a new but still @xmath294-compatible counting function .",
    "let s use the previous results on strata to get a suitable set of _",
    "moves_. we will show this procedure in the case in which all the factors have the same number of levels @xmath133 , @xmath420 prime , but it can also be applied to the general case . in section",
    "[ sec : gof ] we have shown that counting functions must satisfy the following set of linear equations @xmath306 where @xmath307 corresponds to the set of conditions @xmath294 written in terms of strata .    it follows that if , given a @xmath294-compatible solution @xmath310 , such that @xmath421 , we search for an additive move @xmath422 such that @xmath423 is still equal to @xmath424 , we have to solve the following linear homogenous system @xmath425 with @xmath426 , @xmath427 and @xmath428 for all @xmath56 .",
    "we observe that this set of conditions allows to determine new @xmath294-compatible solutions _ that give the same @xmath283_. we know that @xmath429 so this homogenous system determines moves that _ do not change the dimension of the solutions_.    let s now consider the extended homogeneous system , where @xmath327 has already been defined in section [ sec : gof ] , @xmath430 with @xmath431 , @xmath432 and @xmath433 for all @xmath56 .",
    "given @xmath434 , where @xmath310 is @xmath294-compatible counting function and @xmath435 , the solutions of @xmath436 determine all the other @xmath437 such that @xmath438 .",
    "@xmath294-compatible counting functions whose sizes , @xmath440 , are , in general , _ different from that of @xmath310_.      we use the theory of markov basis ( see for example where it is also available a rich bibliography on this subject ) to determine a set of generators of the moves .",
    "we use the following procedure in order to randomly select a @xmath294-compatible counting function .",
    "we compute a markov basis of @xmath441 using 4ti2 ( @xcite ) .",
    "once we have determined the markov basis of @xmath441 , we make a random walk on the _ fiber _ of @xmath310 , where @xmath310 , as usual , contains the values of the counting function of an initial design @xmath43 .",
    "the fiber is made by all the @xmath294-compatible counting functions that have the same size of @xmath43 .",
    "the randow walk is done randomly choosing one move among the feasible ones , i.e. among the moves for which we do not get negative values for the new counting function .    in the next paragraphs",
    "we consider moves for the cases that we have already studied in section [ sec : gof ] .",
    "we use the matrix @xmath307 , already built in section [ subsec : oa2_5 ] and give it as input to 4ti2 to obtain the markov basis , that we denote by @xmath442 .",
    "it contains @xmath443 different moves .",
    "given @xmath444 we define @xmath445 and @xmath446 .",
    "we have @xmath447 .    as an initial fraction @xmath448 , we consider the eight - run regular fraction whose indicator function @xmath449 is @xmath450 we obtain the set of feasible moves observing that a move @xmath451 , to be feasible , should be not negative when @xmath449 is equal to zero that means @xmath452 we find @xmath342 moves .",
    "analogously an element @xmath451 such that @xmath453 gives a feasible move , @xmath454 .",
    "in this case we do not find any of such element .",
    "therefore , given @xmath449 , the set of feasible moves becomes @xmath455 that contains @xmath456 different moves .",
    "we randomly choose one move @xmath457 out of the @xmath342 available ones and move to @xmath458 we run 1.000 simulations repeating the same loop , generating @xmath459 as @xmath460 .",
    "we obtain all the @xmath461 different 8-run fractions , each one with 8 different points as in .    using @xmath327 we obtain the set @xmath462 that contains @xmath344 different moves .      using @xmath307",
    "as built in the section [ subsec : oa3_3 ] , we use 4ti2 to generate the markov basis corresponding to the homogeneous system @xmath463 .",
    "we obtain @xmath442 that contains @xmath464 different moves .    as an initial fraction we can consider the nine - run regular fraction @xmath448 whose indicator function @xmath449 is @xmath465 we run @xmath466 simulations repeating the same loop , i.e. generating @xmath459 as @xmath460 .",
    "we obtain all the @xmath342 different 9-run fractions , each one with 9 different points as known in the literature and as found in section [ subsec : oa3_3 ] .    using @xmath327",
    "we also obtain the set @xmath462 that contains @xmath467 different moves .      using the matrix @xmath307 built in section [ subsec : sudo4_4 ] ,",
    "we run 4ti2 getting the markov basis @xmath442 that contains @xmath468 moves .",
    "we randomly choose an initial sudoku    @xmath469    the corresponding indicator function is @xmath470 then we extract from @xmath442 the feasible moves .",
    "we obtain a subset @xmath471 that contains @xmath472 different moves .",
    "we repeat the procedure on @xmath473 and we obtain other @xmath343 moves .",
    "we randomly choose one move @xmath474 out of the @xmath475 available ones and move to @xmath476 we run @xmath466 simulations repeating the same loop @xmath477 .",
    "we obtained all the @xmath414 different @xmath405 sudoku .",
    "we considered mixed level fractional factorial designs .",
    "given the counting function @xmath55 of a fraction @xmath43 we translated the constraint @xmath170 , where @xmath60 is a generic coefficient of its polynomial representation @xmath478 , into a set of linear constraints with integer coefficients on the values @xmath479 that @xmath55 takes on all the points @xmath56 .",
    "we obtained the set of generators of the solutions of some problems using hilbert basis .",
    "we also studied the moves between fractions .",
    "we characterized these moves as the solution of a homogeneous linear system .",
    "we defined a procedure to randomly walk among the solutions that is based on the markov basis of this system .",
    "we showed the procedure on some examples .",
    "computations have been made using 4ti2 ( @xcite ) .",
    "one limit is in the high computational effort that is required .",
    "in particular only a small part of the markov basis is used because of the requirement that counting functions can only take values greater than or equal to zero . the possibility to generate only the moves that are feasible could make the entire process more efficient and is part of current research .",
    "fontana , r. , rogantin , m. , 2008 .",
    "indicator function and sudoku designs . to appear in algebraic and geometric methods in statistics , cambridge university press ,",
    "isbn number for this volume is 978 - 0 - 521 - 896191 .",
    "pistone , g. , rogantin , m. , 2008 .",
    "indicator function and complex coding for mixed fractional factorial designs .",
    "journal of statistical planning and inference 138 , 787802 , received 5 may 2005 ; revised 4 december 2006 ; accepted 8 february 2007 .",
    "available online 12 march 2007 ."
  ],
  "abstract_text": [
    "<S> the joint use of counting functions , hilbert basis and markov basis allows to define a procedure to generate all the fractions that satisfy a given set of constraints in terms of orthogonality . the general case of mixed level designs , without restrictions on the number of levels of each factor ( like primes or power of primes ) </S>",
    "<S> is studied . </S>",
    "<S> this new methodology has been experimented on some significant classes of fractional factorial designs , including mixed level orthogonal arrays .    </S>",
    "<S> design of experiments , hilbert basis , markov basis , algebraic statistics , indicator polynomial , counting function . </S>"
  ]
}
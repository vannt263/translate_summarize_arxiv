{
  "article_text": [
    "an economic setting where indivisible goods or resources ( _ objects _ ) are allocated to self - interested agents without the use of monetary transfers poses a _",
    "one - sided matching problem_. examples include the allocation of students to schools , houses to tenants , and teachers to training programs  @xcite .",
    "@xcite first presented a mechanism for this problem , and it has since attracted much attention by mechanism designers ( e.g. , @xcite ) .",
    "it is often desired or even required that one - sided matching mechanisms perform well on multiple dimensions , such as _ efficiency _ , _ fairness _ , and _",
    "strategyproofness_. however , severe impossibility results prevent them from excelling on all these dimensions simultaneously ( e.g. , @xcite ) .",
    "this makes the one - sided matching problem an interesting mechanism design challenge .",
    "the folklore random serial dictatorship mechanism is strategyproof and anonymous , but only _ ex - post efficient . _",
    "if strategyproofness is dropped , the more demanding _ ordinal efficiency _ can be achieved by the probabilistic serial mechanism ( @xmath1 ) .",
    "however , no ordinally efficient mechanism can simultaneously satisfy strategyproofness and symmetry @xcite .",
    "_ rank efficiency",
    "_ , an even stronger efficiency concept , can be achieved via rank - value mechanisms @xcite . however , while @xmath1  is at least weakly strategyproof , rank efficiency is even incompatible with weak strategyproofness . obviously , trade - offs are necessary and have been the focus of recent research ( e.g. , see @xcite ) .",
    "this paper introduces a new method for trading off strategyproofness and efficiency of one - sided matching mechanisms .",
    "the key idea is to `` mix '' a strategyproof mechanism @xmath3 with a non - strategyproof mechanism @xmath4 that has better efficiency properties . our goal is to design hybrids that inherit a portion of the desirable properties of both mechanisms , i.e. , higher efficiency than @xmath3 , but also better incentives for truth - telling than @xmath4 .",
    "hybrid mechanisms are convex combinations of existing mechanisms : for mechanisms @xmath3 and @xmath4 , the _ @xmath5-hybrid _ is given by the convex combination @xmath6 where @xmath7 $ ] is called the _ mixing factor_. this paper explores how these hybrids can be used to facilitate a parametric trade - off between efficiency and strategyproofness .      to describe a parametric trade - off between strategyproofness and efficiency , we require two concepts : first , a parametric relaxation of strategyproofness , and second , a notion of how to compare mechanisms by their efficiency .    towards the first question",
    ", we employ the _ @xmath8-partial strategyproofness _",
    "concept , which we have recently introduced in @xcite .",
    "it yields a parametric measure for the degree of strategyproofness : for mechanisms that are swap consistent and weakly invariant , the degree of strategyproofness can be measured by means of a single number @xmath9 $ ] .",
    "intuitively , a mechanism is @xmath8-partially strategyproof if it makes truthful reporting a dominant strategy as long as an agent s values for different objects differ by at least a factor @xmath10 ( i.e. , bounded away from indifference by @xmath10 ) .    in order to construct @xmath8-partially strategyproof hybrid mechanisms , we require two conditions .",
    "first , we need that @xmath4 is _ weakly less varying _ than @xmath3 , i.e. , if whenever @xmath4 changes the allocation upon a change of report by some agent , then so does @xmath3 .",
    "our second condition is _ weak invariance _ , a form of truncation robustness introduced by @xcite .",
    "we say that the pair @xmath11 is _ hybrid - admissible _ if @xmath3 is strategyproof and @xmath4 satisfies both conditions .",
    "we show that hybrid - admissibility is sufficient and that the construction may fail if any of the conditions for hybrid - admissibility are violated .    towards the second question ,",
    "i.e. , comparing mechanisms by their efficiency , we employ the well - known concepts of _ ordinal _ and _ rank dominance_. we present conditions under which the newly defined hybrids dominate the component @xmath3 .",
    "one concern is that while the allocation from @xmath4 may dominate the allocation from @xmath3 at _ some _ type profiles , the comparison may be ambiguous for other type profiles . to address this concern ,",
    "we introduce _ imperfect dominance _ , which requires that a mechanism is better ( i.e. , the allocations from @xmath4 dominate the allocations from @xmath3 ) whenever the allocations are comparable by dominance .      in this paper",
    ", we show that hybrid mechanisms are a powerful yet simple method for trading off strategyproofness and efficiency in the design of one - sided matching mechanisms .",
    "the following results are obtained for any fixed ( but arbitrary ) setting , i.e. , number of agents , objects , and capacities .    1 .   * construction of @xmath12-partially strategyproof hybrid mechanisms ( thm .",
    "[ thm : construction ] ) : * we show that for any hybrid - admissible pair @xmath11 and any bound @xmath13 $ ] , there exists @xmath14 such that @xmath15 is @xmath8-partially strategyproof .",
    "2 .   * parametric trade - off between efficiency and strategyproofness ( prop .",
    "[ prop : tradeoff ] ) : * we show that for any hybrid - admissible pair @xmath11 , where @xmath4 is manipulable and imperfectly dominates @xmath3 , the hybrid @xmath15 becomes more efficient , but also less strategyproof for a higher mixing factor @xmath5 .",
    "* computability of the maximum mixing factor ( prop .",
    "[ prop : alg_complete_and_correct ] ) : * we show that for any hybrid - admissible pair @xmath11 and bound @xmath9 $ ] the mechanism designer s problem of finding the maximum mixing factor @xmath16 is computable ( although the algorithm we present has exponential complexity ) .",
    "* instantiations ( thms .",
    "[ thm : ps_wlv_rsd ] & [ thm : abm_wlv_rsd ] ) : * we show that @xmath1  and the adaptive boston mechanism ( @xmath2 ) are weakly less varying than @xmath0 .",
    "consequently , these mechanisms can be combined with @xmath17 to construct non - trivial hybrids that trade off strategyproofness for efficiency in a meaningful way .",
    "numerical analysis shows that a significant share of the more efficient component can be included .",
    "trade - offs between strategyproofness and efficiency have recently attracted a lot of attention from researchers ( e.g. , @xcite ) .",
    "this paper demonstrates how and under what conditions hybrid mechanisms can be used to facilitate this trade - off for one - sided matching mechanisms .",
    "we show that the conditions are not trivial , but satisfied by some well - known mechanisms , such as @xmath1  and @xmath2  in combination with @xmath0 .",
    "the hybrids also inherit the fairness properties that both components satisfy , e.g. , anonymity and symmetry .",
    "while we do not expect our hybrids to be applied by practitioners directly , they provide a new understanding of trade - offs between strategyproofness and efficiency in one - sided matching .",
    "in particular , they may serve as benchmark mechanisms for future research .",
    "our parametric approach goes beyond comparing discrete points in the mechanism design space , as we show precisely in what sense strategyproofness is relaxed in order to achieve efficiency gains . in particular",
    ", this is the first paper to present a constructive and parametric method to perform such trade - offs in this domain .",
    "while the seminal paper on one - sided matching mechanisms by @xcite proposed a mechanism that elicits agents _ cardinal _ utilities , this approach has proven problematic because it is difficult if not impossible to elicit cardinal utilities in settings without money .",
    "for this reason , recent work has focused on _ ordinal mechanisms _",
    ", where agents submit ordinal preference reports , i.e. , rankings over all objects ( for an example see @xcite , or @xcite for a systematic argument ) .",
    "throughout this paper , we only consider ordinal mechanisms .    for the deterministic case , strategyproofness of one - sided matching mechanisms has been studied extensively @xcite . for non - deterministic mechanisms",
    ", @xcite showed that @xmath0  is equivalent to the core from random endowments mechanism for house allocation , if agents initial houses are drawn uniformly at random .",
    "@xcite showed that for settings where capacity exceeds demand , @xmath0  is not the only strategyproof , ex - post efficient mechanism that satisfies symmetry .",
    "@xcite extended their result by showing that taking any ex - post efficient , strategyproof , non - bossy , deterministic mechanism and assigning agents to roles in the mechanism uniformly at random is equivalent to @xmath0 .",
    "however , it is still an open conjecture whether @xmath0  is the unique mechanism that is anonymous , ex - post efficient , and strategyproof .",
    "the research community has also introduced stronger efficiency concepts , such as _ ordinal efficiency_. the probabilistic serial mechanism ( @xmath1 ) was originally introduced by @xcite for strict preferences .",
    "@xcite introduced an extension that allows agents to be indifferent between objects .",
    "recently , @xcite showed that the unique mechanism that is ordinally fair and non - wasteful is @xmath1  with uniform eating speeds .",
    "@xcite had already shown that @xmath1  is not strategyproof , but @xcite found that its nash equilibria can lead to ordinally dominated outcomes .    while ex - post efficiency and ordinal efficiency are the two most well - studied efficiency concepts for one - sided matching mechanisms , some mechanisms used in practice aim to maximize _ rank efficiency _ , which is a further refinement of ordinal efficiency @xcite . however , no rank efficient mechanism can even be weakly strategyproof",
    ". other popular mechanisms , like the boston mechanism ( see @xcite ) , are highly manipulable but are nevertheless in frequent use .",
    "@xcite show practical evidence from combinatorial course allocation , suggesting that using a non - strategyproof mechanism may lead to higher social welfare than using a strategyproof , ex - post efficient mechanism such as @xmath0 .",
    "this challenges whether strategyproofness should be a hard constraint for mechanism designers .",
    "given that strategyproofness is such a strong restriction , many researchers have tried to relax it , using various notions of _ approximate strategyproofness_. for example , @xcite took this approach in the voting domain and quantified the incentives to manipulate ( but only for certain normalized utilities ) .",
    "@xcite proposed the interesting competitive equilibrium from approximately equal incomes mechanism for the domain of combinatorial assignments . for the single - object assignment domain ,",
    "this reduces to @xmath0 .",
    "finally , @xcite used a machine learning approach to design mechanisms with `` good '' incentive properties . instead of requiring strategyproofness ,",
    "they minimize the agents ex - post regret , i.e. , the utility increase an agent could gain from manipulating . for the randomized social choice domain , @xcite considered _ sure thing ( st ) _ dominance and showed that while @xmath0  is sd - strategyproof , it is merely st - efficient .",
    "they contrasted this to strictly maximal lotteries , which are sd - efficient , but only st - strategyproof .",
    "the concept of hybrid mechanisms presented in this paper differs from these approaches . rather than comparing discrete points in the mechanism design space , we enable a continuous trade - off between strategyproofness and efficiency that can be described in terms of two parameters : the _ degree of strategyproofness _ for incentives and the _ mixing factor _ for efficiency .",
    "recently , @xcite proposed a desideratum called _ strategyproof in the large _",
    "( sp - l ) , which formalizes the intuition that as the number of agents in the market gets large , the incentives for individual agents to misreport should vanish in the limit .",
    "@xcite showed that for a fixed number of objects and a fixed agent , @xmath1  makes truthful reporting a dominant strategy for that agent if there are sufficiently many copies of each object .",
    "@xcite showed that when there are many agents relative to the number of object types , all symmetric , asymptotically efficient , and asymptotically strategyproof mechanism are asymptotically equivalent , which includes @xmath0 . while these approaches only provide certain guarantees in the limit , our hybrid mechanisms enable a conscious trade - off with precise strategyproofness and efficiency properties for settings of any size .",
    "a _ setting _ @xmath18 consists of a set @xmath19 of @xmath20 _ agents _ , a set @xmath21 of @xmath22 _ objects _ , and a vector @xmath23 of _ capacities _ , i.e. , there are @xmath24 units of object @xmath25 available .",
    "we assume that supply satisfies demand , i.e. , @xmath26 , since we can always add dummy objects .",
    "agents are endowed with _",
    "von neumann - morgenstern ( vnm ) utilities _ @xmath27 over the objects .",
    "if @xmath28 , we say that agent @xmath29 _ prefers object @xmath30 over object @xmath31 _ , which we denote by @xmath32 .",
    "we work with the standard model , which excludes indifferences , i.e. , @xmath33 implies @xmath34 .",
    "a utility function @xmath35 is _ consistent _ with _ preference ordering _",
    "@xmath36 if @xmath32 whenever @xmath28 .",
    "given a preference ordering @xmath36 , the corresponding _ type _",
    "@xmath37 is the set of all utilities that are consistent with @xmath36 , and @xmath38 is the set of all types , called the _",
    "type space_. we use types and preference orderings synonymously .",
    "an _ allocation _ is a ( possibly probabilistic ) assignment of objects to agents .",
    "it is represented by an @xmath39-matrix @xmath40 satisfying the _ fulfillment constraint _ @xmath41 , the _ capacity constraint _",
    "@xmath42 , and @xmath43 $ ] for all @xmath44 .",
    "the entries of the matrix are interpreted as probabilities , where @xmath29 gets @xmath25 with probability @xmath45 .",
    "an allocation is _ deterministic _ if @xmath46 for all @xmath47 . the birkhoff - von neumann theorem and its extensions @xcite",
    "ensure that given any allocation , we can always find a lottery over deterministic assignments that implements these marginal probabilities .",
    "finally , let @xmath48 denote the space of all allocations .",
    "a _ mechanism _ is a mapping @xmath49 that chooses an allocation based on a profile of reported types .",
    "we let @xmath50 denote the allocation that agent @xmath29 receives if it reports type @xmath51 and the other agents report @xmath52 .",
    "note that mechanisms only receive type profiles as input .",
    "thus , we consider _ ordinal _ mechanisms , where the allocation is independent of the actual vnm utilities .",
    "if @xmath29 and @xmath53 are clear from the context , we may abbreviate @xmath50 by @xmath54 .",
    "the expected utility for @xmath29 is given by the dot product @xmath55 , i.e. , @xmath56 for _ strategyproof _ mechanisms , reporting truthfully maximizes agents expected utility :    [ def : sp ] a mechanism is _ strategyproof _ if for any agent @xmath57 , any type profile @xmath58 , any misreport @xmath59 , and any utility @xmath60 we have @xmath61    our model encompasses classical one - sided matching problems , such as house allocation and school choice markets , where only one side of the market has preferences .",
    "it is also straightforward to accommodate outside options .",
    "priorities over the agents can be included implicitly in the mechanism .",
    "the goal of designing hybrid mechanisms is to sacrifice `` some '' strategyproofness to obtain `` some '' efficiency gains . in order to make a conscious trade - off decision ,",
    "a mechanism designer needs an understanding of `` how much '' strategyproofness she is giving up . towards this end",
    ", we need a parametric relaxation of strategyproofness . until recently , no such concept existed for the one - sided matching domain .",
    "however , in @xcite we have presented an axiomatic approach to relaxing strategyproofness .",
    "dropping one of three axioms that characterize strategyproof mechanisms leads to _ @xmath8-partially strategyproof _ mechanisms .",
    "this new concept enables a parametric analysis of strategyproofness for manipulable mechanisms .",
    "we now briefly describe this concept and its axiomatic derivation ( see appendix [ app.sec.axiomatic_psp ] for details ) .    to understand the axioms ,",
    "suppose an agent is considering to report truthfully or _",
    "swap _ two adjacent objects in its report , e.g. , @xmath62 to @xmath63 .",
    "a mechanism is _ swap consistent _ if upon such a swap , the reporting agent s allocation either does not change at all , or the allocation for @xmath31 strictly increases and the allocation for @xmath30 strictly decreases .",
    "the mechanism is _ weakly invariant _ if the allocation does not change for any object that the agent strictly prefers to @xmath30 , and it is _ lower invariant _ if it does not change for any object that the agent likes strictly less than @xmath31 .",
    "these axioms characterize strategyproof mechanisms : a mechanism is strategyproof _ if and only if _ it is swap consistent , weakly invariant , and lower invariant ( theorem 1 in @xcite ) .",
    "dropping lower invariance ( arguably the least intuitive and least important of the axioms ) , the larger class of @xmath8-partially strategyproof mechanisms emerges , and the incentive properties of these mechanisms can be described in a parametric fashion : for any setting @xmath18 , a mechanism is swap consistent and weakly invariant _ if and only if _ it is @xmath8-partially strategyproof for some bound @xmath13 $ ] ( theorem 2 in @xcite ) .",
    "we now define @xmath8-partial strategyproofness and provide some intuition . loosely speaking , @xmath8  is a domain restriction that requires agents to have sufficiently different values for different objects .",
    "[ def : urbi ] a utility function @xmath64 satisfies _ uniformly relatively bounded indifference _ with respect to _ bound @xmath9 $ ] _ ( @xmath8 )",
    "if for any pair of objects @xmath30 and @xmath31 with @xmath65 we have @xmath66    r        intuitively , an agent s utility function satisfies @xmath8 , if the agent values any object @xmath31 by a factor @xmath10 less than the next better choice @xmath30 , i.e. , @xmath67 ( after normalization , i.e. , @xmath68 ) .",
    "figure [ fig : geom_urbi ] provides a geometric intuition of the condition : the agent s utility function can not be arbitrarily close to the indifference hyperplane @xmath69 between the types @xmath70 and @xmath71 , i.e. , it must lie within the shaded area of type @xmath70 . while utility @xmath64 satisfies @xmath8 , @xmath72 violates it .",
    "a mechanism is _",
    "@xmath8-partially strategyproof _ if it is strategyproof for the domain restricted by @xmath8 .",
    "formally :    [ def : urbir_psp ] given a setting @xmath18 and a bound @xmath9 $ ] , the mechanism @xmath3 is _ @xmath8-partially strategyproof in the setting @xmath18 _ if for any agent @xmath57 , any type profile @xmath73 , any misreport @xmath74 , and any utility @xmath75 we have @xmath76    intuitively , an agent s utility function satisfies @xmath8 , if the agent values any object @xmath31 by a factor @xmath10 less than any object @xmath30 it strictly prefers to @xmath31 , i.e. , @xmath67 ( after normalization , i.e. , @xmath68 ) .",
    "figure [ fig : geom_urbi ] provides a geometric intuition of the condition : the agent s utility function can not be arbitrarily close to the indifference hyperplane @xmath69 between the types @xmath70 and @xmath71 , i.e. , it must lie within the shaded area of type @xmath70 . while utility @xmath64 satisfies @xmath8 , @xmath72 violates it .    for strategyproof mechanisms ,",
    "the bound @xmath10 is @xmath77 , and otherwise it is in the interval @xmath78",
    ". obviously , strategyproofness implies @xmath8-partial strategyproofness for any bound @xmath10 and any setting : for strategyproofness the incentive constraint ( [ eq : incentive_constraint_urbi_psp ] ) must hold for _ all _ possible utility functions , and the relaxation requires the incentive constraint to hold only for _ a subset _ of the utility functions , the set that satisfies @xmath8 . for convenience and",
    "if the setting is clear from the context , we will denote by @xmath8  the set of all utility functions in a particular setting that satisfy uniformly relatively bounded indifference with respect to the bound @xmath10 .",
    "in @xcite we have shown that strategyproof mechanisms ( e.g. , @xmath0 ) and a number of mechanisms with reasonable incentive properties ( e.g. , @xmath1  and the adaptive boston mechanism ( @xmath2 ) ) are @xmath8-partially strategyproof .",
    "more manipulable mechanisms ( e.g. , the nave boston ( @xmath79 ) and rank - value mechanisms ( @xmath80 ) ) , however , are generally not @xmath8-partially strategyproof for any @xmath13 $ ] .    in @xcite we have also shown that the @xmath8domain restriction is _ maximal _ :",
    "consider a mechanism @xmath3 that is @xmath8-partially strategyproof for some bound @xmath81 , and thus swap consistent and weakly invariant .",
    "_ maximality _ means that , unless we are given additional structural information about @xmath3 , @xmath8  is in fact the largest set of utilities for which partial strategyproofness can be guaranteed .",
    "this maximality makes the degree of strategyproofness a useful measure for `` how strategyproof '' a mechanism is .",
    "we now formally define hybrid mechanisms and show under what conditions they are @xmath8-partially strategyproof .      [ def : hybrid ] for two mechanisms @xmath3 and @xmath4 , and @xmath7 $ ] , the mechanism @xmath15 is called the _",
    "@xmath5-hybrid of @xmath3 and @xmath4 _ and is defined for any type profile @xmath82 by @xmath83 @xmath5 is called the _ mixing factor _ , and @xmath3 and @xmath4 are called the _ components _ of @xmath15 .",
    "we say that the hybrid is _ non - trivial _ if @xmath14 .",
    "a hybrid mechanism is well - defined , since the convex combination of two allocations ( represented by matrices of equal dimensions ) is again an allocation of the same dimensions ( capacity and fulfillment constraint are easy to verify ) . to enable interesting trade - offs , the main idea is to use a strategyproof mechanism @xmath3 for good incentives and a more efficient mechanism @xmath4 for good efficiency .",
    "since the hybrid mechanism may violate strategyproofness , we use @xmath8-partial strategyproofness to measure the resulting incentive properties",
    ".      not all pairs of mechanisms are suitable for the construction of @xmath8-partially strategyproof hybrids . in this section ,",
    "we give a formal definition of the _ weak invariance _",
    "axiom and introduce the technical constraint of _ weakly less varying _ mechanisms , two conditions for the design of non - trivial , @xmath8-partially strategyproof hybrids .",
    "weak invariance is the second axiom we have used to characterize strategyproof and @xmath8-partial strategyproof mechanisms in @xcite .",
    "it is also a form of _ truncation robustness _ : an agent can not improve its allocation by untruthfully claiming preference for an outside option over some objects ( see @xcite , who used weak invariance as one of the central axioms to characterize @xmath1 ) .",
    "weak invariance requires that if an agent swaps two adjacent objects in its reported preference order , the allocation for any object it strictly prefers to both can not change . for a formal definition ,",
    "we need the following : the _ neighborhood _ @xmath84 of a type @xmath70 is the set of all types whose corresponding preference orders differ by just a swap of two adjacent objects .",
    "the _ upper contour set _ of an object @xmath30 with respect to some type @xmath70 is the set of objects that an agent of type @xmath70 strictly prefers to @xmath30 , denoted by @xmath85 .",
    "[ ax : wi1 ] a mechanism @xmath3 is _ weakly invariant _",
    "if for any agent @xmath86 , any type profile @xmath87 , and any type @xmath88 with @xmath89 under @xmath51 and @xmath90 under @xmath91 , @xmath29 s allocation for the objects in the upper contour set is unaffected by the swap , i.e. , for all @xmath92 @xmath93    many mechanisms from the literature satisfy weak invariance , such as @xmath0 , @xmath1 , the nave and the adaptive boston mechanism , and student - proposing deferred acceptance .",
    "however , as we will see in section [ subsubsec.inst.limits.rv ] , @xmath80  does not .      in the construction of hybrid mechanisms , the component @xmath4 will typically be manipulable , and @xmath3 will be strategyproof .",
    "even if we require @xmath4 to satisfy weak invariance , it may introduce incentives to manipulate into the hybrid against which any share of @xmath3 is powerless . to see how this problem can arise ,",
    "suppose that agent @xmath29 has true type @xmath51 and finds it beneficial to report @xmath91 instead under @xmath4 . if the allocation from @xmath3 does not change between the two reports @xmath51 and @xmath91 , then for any @xmath94 , @xmath29 will want to manipulate the hybrid @xmath15 .",
    "the following additional constraint is needed to prevent this situation .",
    "[ def : wlv ] a mechanism @xmath4 is _ weakly less varying _ than another mechanism @xmath3 if for any agent @xmath86 , any type profile @xmath87 , and any misreport @xmath88 the following holds : @xmath95      for the construction of @xmath8-partially strategyproof hybrid mechanisms , the pair of component mechanisms @xmath11 must satisfy the following requirement :    the pair @xmath11 is _ hybrid - admissible _ if @xmath3 is strategyproof , and @xmath4 is weakly invariant and weakly less varying than @xmath3 .",
    "we are now ready to present our first main result .",
    "[ thm : construction ] for any setting @xmath18 , any hybrid - admissible pair @xmath11 , and any bound @xmath96 , there exists a positive mixing factor @xmath97 $ ] such that the hybrid @xmath15 is @xmath8-partially strategyproof in the setting @xmath18 .",
    "proof [ outline ( formal proof in appendix [ app.subsec.thm_construction ] ) ] consider an agent of type @xmath98 and a misreport @xmath99 , where the positions of the first @xmath100 objects remain unchanged .",
    "the key insight is that we only need to consider cases where the allocation of @xmath101 strictly decreases under @xmath3 .",
    "if less of @xmath102 is allocated , this has a negative effect on the overall expected utility from misreport @xmath71 .",
    "we show that for any agent with utility in @xmath8  and for sufficiently small @xmath94 , this negative effect is sufficient to make the expected utility from reporting @xmath71 lower than the expected utility from reporting @xmath70 .",
    "finally , we show that @xmath94 can be chosen uniformly for all type profiles and misreports , while it may depend on the mechanism and the setting .    for a mechanism designer , theorem [ thm : construction ]",
    "has the following important interpretation : given any setting , any desired bound @xmath103 , and any hybrid - admissible pair of mechanisms , a non - trivial hybrid can be constructed that is @xmath8-partially strategyproof for the desired bound in that setting .",
    "intuitively , we would like to choose a mixing factor @xmath5 as large as possible as long as @xmath8-partial strategyproofness is not violated , because the higher @xmath5 , the more of the more efficient component @xmath4 is included . theorem",
    "[ thm : construction ] yields that a non - trivial @xmath5 can be found . in section [ sec.numeric ] ,",
    "we present numerical results for instantiations with @xmath0  and @xmath1 , as well as @xmath0  and @xmath2 , which show that the maximal mixing factor can be significant .    regarding tightness of theorem [ thm : construction ]",
    ", none of the requirements can be dismissed : @xmath4 must be weakly less varying than @xmath3 , otherwise a beneficial manipulation may persist for any mixing factor ( as discussed in section [ subsubsec.construction.aux.wlv ] ) .",
    "propositions [ prop : f_sp_tight ] and [ prop : g_wi_tight ] show that strategyproofness of @xmath3 and weak invariance of @xmath4 , respectively , are also essential .",
    "[ prop : f_sp_tight ] if @xmath3 is not strategyproof , there exists a mechanism @xmath4 that is weakly invariant and weakly less varying than @xmath3 , and a bound @xmath104 such that no non - trivial hybrid of the pair @xmath11 will be @xmath8-partially strategyproof .",
    "proof [ outline ( formal proof in appendix [ app.subsec.construction_tightness ] ) ] the key idea is to choose @xmath4 as a constant mechanism that yields the same allocation , independent of the agents reports . if @xmath3 is manipulable by some agent with utility @xmath105 , we choose @xmath106 such that @xmath107",
    ". then any non - trivial hybrid will be manipulable for @xmath105 .",
    "[ prop : g_wi_tight ] for any strategyproof @xmath3 and any @xmath4 that is weakly less varying than @xmath3 , but not weakly invariant in a setting @xmath18 , no non - trivial hybrid of the pair @xmath11 is @xmath8-partially strategyproof for any bound @xmath13 $ ] in the setting @xmath18 .",
    "proof [ outline ( formal proof in appendix [ app.subsec.construction_tightness ] ) ] to see this , we show that if @xmath4 is not weakly invariant , then neither is any non - trivial hybrid .",
    "consequently , the hybrid is not @xmath8-partially strategyproof either .",
    "we have now obtained a good understanding of the incentive properties of hybrid mechanisms .",
    "however , we are interested in the trade - off between efficiency and strategyproofness . to this end",
    ", we analyze the efficiency properties of hybrid mechanisms in sections [ subsec.efficiency.dom ] and [ subsec.efficiency.impdom ] and describe the trade - offs that can be realized via hybrids in more detail in section [ subsec.efficiency.hierarchies ] .",
    "[ rem : fairness ] fairness is also a desirable property for one - sided matching mechanisms .",
    "it is straightforward to see that a hybrid of two _ anonymous _ or _ symmetric _ mechanisms will also be anonymous or symmetric , respectively .",
    "however , this paper is concerned with trade - offs between strategyproofness and efficiency , and we leave trade - offs between fairness and strategyproofness or efficiency to future research .",
    "in this section , we analyze the efficiency properties of hybrid mechanisms , and we obtain the following four results : first , ex - post efficiency is inherited by the hybrid if both components are ex - post efficient .",
    "second , if the component @xmath4 dominates @xmath3 , then any non - trivial hybrid @xmath15 also dominates @xmath3 .",
    "third , in situations where @xmath3 and @xmath4 are comparable by dominance only for _ some _ type profiles , we define _ imperfect dominance _ for mechanisms , and we show that if @xmath4 imperfectly dominates @xmath3 , then any non - trivial hybrid @xmath15 also imperfectly dominates @xmath3 .",
    "fourth , if @xmath4 is more efficient than @xmath3 , but manipulable , then as the mixing factor @xmath5 increases , the hybrid becomes more efficient , but the degree of strategyproofness decreases .",
    "ex - post efficiency is ubiquitous in matching .",
    "most one - sided matching mechanisms considered in theory and applications are ex - post efficient , such as @xmath0 , @xmath1 , @xmath80  mechanisms , and boston mechanisms .",
    "ex - post efficiency means that after implementation ( i.e. , when every agent holds exactly one object ) , no group of agents can agree on a trade cycle that gives all agents in the group an object they weakly prefer to their previous allocation , and at least one agent gets an object it strictly prefers . formally :    [ def : expost_eff ] given a type profile @xmath108 , a deterministic allocation @xmath109 _ ex - post dominates _ another deterministic allocation @xmath110 _ at _",
    "@xmath111 if all agents weakly prefer their allocation under @xmath109 to their allocation under @xmath110 . the dominance is _ strict _ if at least one agent strictly prefers its allocation under @xmath109 .",
    "a deterministic allocation @xmath109 is _ ex - post efficient at _ @xmath111 if it is not strictly ex - post dominated by any other deterministic allocation at @xmath111 .",
    "finally , a probabilistic allocation is _ ex - post efficient _ if it has a lottery decomposition consisting only of ex - post efficient deterministic allocations .",
    "proposition [ prop : ex_post_inherit ] ensures that hybrids inherit ex - post efficiency from their components .",
    "[ prop : ex_post_inherit ] if both components @xmath3 and @xmath4 are ex - post efficient , so is @xmath15 .",
    "if the two allocations @xmath112 and @xmath113 are ex - post efficient , they can be written as lotteries over ex - post efficient , deterministic allocations .",
    "the convex combination of these lotteries is again a lottery over ex - post efficient , deterministic allocations .      to compare allocations by their efficiency , we draw on first order - stochastic dominance .",
    "[ def : fosd_and_ordinal_eff ] for a type @xmath114 and two allocation vectors @xmath115 and @xmath116 , the allocation vector @xmath72 _ first order - stochastically dominates _",
    "@xmath117 if for all ranks @xmath118 @xmath119 for a type profile @xmath111 , an allocation @xmath109 _ ordinally dominates _ another allocation @xmath110 _ at _",
    "@xmath111 if for all agents @xmath86 their respective allocation vector @xmath120 first order - stochastically dominates @xmath121 ( for type @xmath51 ) .",
    "@xmath109 _ strictly _ ordinally dominates @xmath110 if in addition inequality ( [ eq : fosd ] ) is strict for some agent @xmath86 and some rank @xmath118 .",
    "@xmath109 is _ ordinally efficient at _ @xmath111 if it is not strictly ordinally dominated by any other allocation at @xmath111 .",
    "we let @xmath122 and @xmath123 denote weak and strict ordinal dominance , respectively .",
    "if @xmath109 ordinally dominates @xmath110 at @xmath111 and @xmath111 is the true type profile of the agents , then all agents will prefer @xmath109 to @xmath110 , independent of their actual utility functions .",
    "@xcite show that @xmath1  produces ordinally efficient allocations , which may strictly ordinally dominate the allocations of @xmath0 .",
    "@xcite introduced a strict refinement of ordinal efficiency , called _",
    "rank efficiency_. he developed rank - value mechanisms that produce rank efficient allocations , but he also showed that rank efficiency and strategyproofness are incompatible .",
    "[ def : rank_dom_eff ] for a type profile @xmath111 let @xmath124 denote the @xmath125th choice object of an agent of type @xmath51 .",
    "rank distribution _ of an allocation @xmath109 at @xmath111 is the vector @xmath126 with @xmath127 thus , @xmath128 is the expected number of @xmath125th choices allocated under @xmath109 with respect to type profile @xmath111 . an allocation @xmath109 _ rank dominates _ another allocation @xmath110 at @xmath111 if the rank distribution @xmath129 first order - stochastically dominates @xmath130 .",
    "strictly _ rank dominates @xmath110 if in addition inequality ( [ eq : def_rank_dist ] ) is strict for some rank @xmath131 .",
    "@xmath109 is _ rank efficient _ at @xmath111 if it is not strictly rank dominated by any other allocation at @xmath111 .",
    "let @xmath132 and @xmath133 denote weak and strict rank dominance , respectively .",
    "proposition [ prop : hybrids_dominance ] shows how hybrid mechanisms capture efficiency gains in the sense of ordinal or rank dominance .",
    "[ prop : hybrids_dominance ] for allocations @xmath109 and @xmath110 let @xmath134 . for any type profile @xmath82 and any @xmath97 $ ]",
    "the following hold :    1 .   [ prop : hybrids_dominance.ordinal ] @xmath135 at @xmath136 at @xmath111 , and @xmath137 at @xmath138 at @xmath111 , 2 .",
    "[ prop : hybrids_dominance.rank ] @xmath139 at @xmath140 at @xmath111 , and @xmath141 at @xmath142 at @xmath111 .",
    "the proof is technical , but straightforward and given in appendix [ app.subsec.proof_of_dom ] .",
    "suppose that @xmath3 is strategyproof and ex - post efficient and that the allocations from @xmath4 ordinally ( or rank ) dominate the allocations from @xmath3 .",
    "proposition [ prop : ex_post_inherit ] ensures that any hybrid produces ex post - efficient allocations .",
    "furthermore , by proposition [ prop : hybrids_dominance ] , the hybrid @xmath15 ordinally ( or rank ) dominates @xmath3 for all type profiles for which @xmath4 ordinally ( or rank ) dominates @xmath3 , and this dominance is strict for the type profiles @xmath111 where the dominance of @xmath113 over @xmath112 is strict .",
    "it is possible that @xmath4 dominates @xmath3 at some type profiles , while at other type profiles , the allocations from both mechanisms are incomparable by dominance .",
    "this is the case , for example , for @xmath1  and @xmath0  ( see examples [ ex : ps_dominant ] and [ ex : ps_incomparable ] in appendix [ app.subsec.examples_from_eff_imdom ] ) . to be able to compare mechanisms that are not always comparable via the dominance relation , we introduce a new relaxation of the dominance concepts : instead of requiring dominance for _ all _ type profiles , we only require dominance for those type profiles where a comparison is possible .",
    "[ def : imp_dom ] consider two mechanisms @xmath3 and @xmath4 .",
    "@xmath4 _ weakly imperfectly ordinally dominates _",
    "@xmath3 if @xmath143 for all type profiles @xmath82 where @xmath113 and @xmath112 are comparable by the dominance relation .",
    "@xmath4 _ strictly _ imperfectly ordinally dominates @xmath3 if in addition @xmath144 for some type profiles @xmath82 .",
    "_ weak _ and _ strict imperfect rank dominance _ are defined analogously .",
    "we denote weak and strict imperfect ordinal dominance by @xmath145 and @xmath146 and weak and strict imperfect rank dominance by @xmath147 and @xmath148 , respectively .",
    "proposition [ prop : hybrids_imperfect_dominance ] sheds light on the efficiency gains of hybrids when the components are not fully comparable by dominance .",
    "[ prop : hybrids_imperfect_dominance ] for mechanisms @xmath3 and @xmath4 and any @xmath97 $ ] the following hold :    1 .",
    "@xmath149 and @xmath150 , 2 .",
    "@xmath151 and @xmath152 .    proof [ outline ( formal proof in appendix [ app.subsec.proof_of_impdom ] ) ] from proposition [ prop : hybrids_dominance ] it follows that if @xmath113 weakly or strictly ordinally or rank dominates @xmath112 at @xmath111 , then so does @xmath153 for any @xmath94 .",
    "we show that if @xmath112 does not dominate @xmath113 , then it does not dominate @xmath153 either .",
    "note that @xmath15 strictly dominates the component @xmath3 for _ exactly the same _ type profiles where @xmath4 strictly dominates @xmath3 , and the hybrid is incomparable to @xmath3 for _ exactly the same _ type profiles where @xmath4 is incomparable to @xmath3 .",
    "intuitively , this means that @xmath154 has higher efficiency than @xmath3 whenever @xmath4 has higher efficiency than @xmath3 .",
    "thus , if a mechanism designer prefers @xmath4 over @xmath3 for efficiency , she also prefers the hybrid to @xmath3 for the same reasons .      in sections [ subsec.efficiency.dom ] and [ subsec.efficiency.impdom ] ,",
    "we have evaluated how hybrid mechanisms can be used to harness efficiency gains in the sense of perfect or imperfect dominance .",
    "we will now combine these observations with @xmath8-partial strategyproofness from theorem [ thm : construction ] .",
    "in @xcite we have shown that the strategyproofness of an @xmath8-partially strategyproof mechanism can be measured by the maximum value of the bound @xmath10 . for any",
    "setting and mechanism @xmath155 , the _ degree of strategyproofness _ is given by @xmath156\\ |\\ h \\mathrm{\\;is\\;urbi}(r)\\mathrm{-psp\\;in\\;the\\;setting\\;}(n , m,\\mathbf{q } ) \\right\\}. \\label{eq : def_rho}\\ ] ] for @xmath8-partially strategyproof mechanisms , this is finite and well - defined .    from the mechanism designer s",
    "perspective , the trade - off between strategyproofness and efficiency can be viewed as follows : she decides on an acceptable degree of strategyproofness and chooses the mixing factor @xmath5 as high as possible , such that efficiency is `` maximized , '' given strategyproofness on the required set @xmath8 .",
    "the following proposition , our second main result , provides a formalization of this trade - off between efficiency and strategyproofness .",
    "the intuition is that as the mixing factor @xmath5 increases and more of @xmath4 is incorporated , the hybrid mechanism becomes more efficient , but also less strategyproof ( if @xmath4 is manipulable ) .",
    "[ prop : tradeoff ] consider any setting @xmath18 and any hybrid - admissible pair @xmath11 , where @xmath157 .",
    "if @xmath4 is not strategyproof in the setting , then for any two mixing factors @xmath158 ,    1 .",
    "[ prop : tradeoff.eff ] @xmath159 , 2 .",
    "[ prop : tradeoff.psp ] @xmath160 .",
    "the same holds if the @xmath146-relation is replaced by any of @xmath161 , @xmath162 .",
    "proof [ outline ( formal proof in appendix [ app.subsec.proof_of_hierarchy ] ) ] to see [ prop : tradeoff.eff ] ) , apply proposition [ prop : hybrids_imperfect_dominance ] to @xmath3 and @xmath4 , and then to @xmath15 and @xmath4 , noting that @xmath163 is a hybrid of @xmath15 and @xmath4 . to show [ prop : tradeoff.psp ] ) , we use the fact that @xmath164 is determined by finitely many constraints and at least one of these constraints must bind for @xmath15 .",
    "then we show that this constraint is violated by @xmath163 .",
    "[ rem : interpret_beta ] we now have two values that capture the properties of hybrid mechanisms . the degree of strategyproofness @xmath165 yields a parametric measure for incentives .",
    "similarly , the mixing factor @xmath5 provides a quantitative notion for the _ efficiency improvements _ that a hybrid yields : if @xmath3 is a strategyproof mechanism and @xmath4 is a manipulable alternative that is more attractive in terms of efficiency , then @xmath5 is the extent to which the hybrid captures these efficiency improvements with respect to the total possible improvements of @xmath4 over @xmath3 .",
    "@xcite proposed an interesting method for comparing mechanisms by their vulnerability to manipulation .",
    "for the expected utility case their comparison states that @xmath4 is _ as intensely and strongly manipulable as @xmath3 _",
    "if whenever an agent with utility @xmath64 finds a beneficial manipulation to @xmath3 , the same agent in the same situation would find a manipulation for @xmath4 that yields a weakly greater increase in expected utility . the trade - off realized by our hybrid mechanisms can also be formulated in terms of this _ vulnerability to manipulation _ concept :    [ cor : isam ] in proposition [ prop : tradeoff ] , @xmath163 is as intensely and strongly manipulable as @xmath15 .",
    "this follows from the proof of proposition [ prop : tradeoff ] .",
    "note that the strict comparison of _ intensely and strongly more manipulable _ from @xcite does not hold , because hybrid mechanisms do not necessarily become manipulable for more type profiles when @xmath5 increases .",
    "a significant advantage of the degree of strategyproofness is that it is parametric , rather than purely relative .",
    "furthermore , the degree of strategyproofness is computable , as we will show in the next section .",
    "so far , we have shown that hybrid mechanisms trade off efficiency and strategyproofness in a meaningful way .",
    "but what about the mechanism designer s problem of determining a maximal mixing factor , i.e. , finding @xmath166\\ |\\ h_{\\beta}(f , g)\\mathrm{\\ is\\ urbi}(r)\\mathrm{-psp\\ in\\ } ( n , m,\\mathbf{q})\\right\\ } \\label{eq : max_factor}\\ ] ] for a setting @xmath18 , a hybrid - admissible pair @xmath11 , and an acceptable degree of strategyproofness @xmath9 $ ] ?",
    "it is not obvious that @xmath16 is computable , because @xmath8-partial strategyproofness imposes infinitely many constraints : @xmath167 must hold for _ any _ utility function @xmath168 , i.e. , uncountably many .",
    "it turns out that the computation is indeed possible . in section [ subsec.comp.beta ]",
    ", we present an algorithm that is complete and correct for this problem .",
    "the algorithm makes no structural assumptions about the input parameters ( other than that @xmath3 and @xmath4 are computable ) , i.e. , it shows computability of the mechanism designer s maximization problem ( [ eq : max_factor ] ) for any pair of components @xmath11 .",
    "note that our main goal is to show _ computability _ , not computational efficiency . in section [ subsec.comp.complexity ]",
    ", we briefly discuss the complexity and potential improvements .      as mentioned above , the set of constraints ( [ eq : urbi_constraint_rep ] ) that determine @xmath16 is uncountable . to handle this problem , we provide a condition that is equivalent to @xmath8-partial strategyproofness , but involves only a finite set of constraints ( proposition 2 from @xcite , repeated as proposition [ prop : verify_urbi ] below ) .",
    "we then present our third main result , an algorithm that computes the maximal mixing factor @xmath16 .",
    "[ prop : verify_urbi ] given a setting @xmath18 and a mechanism @xmath3 , for any agent @xmath57 , any type profile @xmath169 , any misreport @xmath170 , and    1 .   for",
    "any object @xmath171 let @xmath172 be the change in the allocation of @xmath25 to @xmath29 as @xmath29 changes its report between @xmath51 and @xmath91 while the other agents report @xmath53 , and 2 .   for @xmath173 ,",
    "define polynomials ( in @xmath174 ) recursively by @xmath175 and @xmath176 , where @xmath177 is the @xmath125th choice of an agent of type @xmath51 .",
    "then @xmath3 is @xmath8-partially strategyproof if and only if for all agents @xmath57 , type profiles @xmath178 , misreports @xmath170 , ranks @xmath179 , and @xmath180 we have @xmath181    * input * : setting @xmath18 , mechanisms @xmath182 , inverse bound @xmath180 + * variables * : agent @xmath29 , type profile @xmath183 , type @xmath91 , vectors @xmath184 , polynomials @xmath185 , counter @xmath125 , choice function @xmath186 , real",
    "@xmath5 + [ alg : compute ]    algorithm [ alg : compute ] uses condition ( [ eq : poly_constraint ] ) to compute the maximum mixing factor .",
    "it takes as input a setting @xmath18 , a hybrid - admissible pair of mechanisms @xmath11 , and a bound @xmath9 $ ] .",
    "it works similarly to algorithm 1 from @xcite , which verifies that a mechanism is @xmath8-partially strategyproof : it iterates through all type profiles and possible manipulations .",
    "however , instead of just _ verifying _ the positivity constraints for the polynomials @xmath187 , it appropriately _ adjusts _ the parameter @xmath5 , so that the positivity constraint is guaranteed to be satisfied by the hybrid mechanism .",
    "[ prop : alg_complete_and_correct ] for computable @xmath3 and @xmath4 , algorithm [ alg : compute ] is complete and correct .",
    "proof [ outline ( formal proof in appendix [ app.subsec.comp_correct_complete ] ) ] completeness is straightforward . for correctness , we employ proposition [ prop : verify_urbi ] . we show that for @xmath8-partial strategyproofness of @xmath15 with @xmath5 computed by algorithm [ alg : compute ] , all constraints are satisfied and at least one constraint binds .",
    "algorithm [ alg : compute ] iterates through all possible type profiles , all agents , and all manipulative reports that agents may submit . for each of these scenarios ,",
    "the algorithm must check for any rank @xmath188 whether the mixing factor @xmath5 needs adjustment .",
    "computing the outcomes of the mechanisms @xmath3 and @xmath4 may also be complex .",
    "let @xmath189 and @xmath190 denote the complexity of determining @xmath3 and @xmath4 for a single type profile , respectively .",
    "the overall complexity of algorithm [ alg : compute ] is @xmath191 .      in the most general case ( without any additional structure )",
    ", a mechanism is specified in terms of a set of allocation matrices @xmath192 .",
    "this set will contain @xmath193 matrices of dimension @xmath194 .",
    "consequently , the size of the problem is @xmath195 in terms of @xmath196 , algorithm [ alg : compute ] has complexity @xmath197{s}\\right)$ ] .",
    "thus , for the general case , there is not much room for improvement , since any correct and complete algorithm will have complexity @xmath198 ( we must consider all type profiles ) .",
    "some reductions of this complexity are possible if more information is available about the mechanisms @xmath3 and @xmath4 . for anonymous @xmath3 and @xmath4",
    "the identity of the agents is irrelevant , and thus , the outcomes for the type profiles @xmath199 and @xmath200 are symmetric , i.e. , only one of them must be considered . in this case",
    ", complexity reduces to @xmath201 , as only @xmath202 type profiles must be checked .",
    "suppose , the mechanisms are also neutral , i.e. , the allocation does not depend on the objects names .",
    "then it suffices to consider only agent 1 with a fixed type , and the complexity reduces further to @xmath203 . even with these reductions , the computational effort to run algorithm",
    "[ alg : compute ] is prohibitively high for larger settings .",
    "however , it is likely that more efficient algorithms exist for mechanisms with additional restrictions , and bounds may be derived analytically for certain interesting mechanisms , such as @xmath1 . having shown computability , we leave the design of computationally efficient algorithms to future research .",
    "so far , we have considered abstract hybrid mechanisms and derived general results . in this section , we consider instantiations of hybrids , using existing mechanisms as components . indeed , our new concepts are applicable to some ( but not all ) well - known mechanisms .",
    "@xmath204 is a canonical choice , because it is the only mechanism known to be strategyproof , ex - post efficient , and anonymous . in order to apply theorem [ thm : construction ] ( construction of @xmath8-partially strategyproof hybrids )",
    ", we must establish two requirements for the second component : ( 1 ) @xmath4 must be weakly invariant , and ( 2 ) @xmath4 must be weakly less varying than @xmath0 . furthermore , to realize a trade - off between efficiency and strategyproofness , @xmath4 must dominate @xmath0  in some sense .",
    "table [ table : overview_instantiations ] provides an overview of our results : trade - offs for imperfect ordinal dominance can be achieved via hybrids of @xmath0  and @xmath1 .",
    "trade - offs for rank dominance are more difficult to obtain , but are possible via hybrids of @xmath0  and @xmath2 , at least in the limit as @xmath205 .      by theorem 2 of @xcite ,",
    "@xmath1  is weakly invariant . since @xmath1  is ordinally efficient ,",
    "it is never ordinally dominated by @xmath0  at any type profile .",
    "furthermore , @xmath1  may ( but does not always ) ordinally dominate @xmath0  ( examples [ ex : ps_dominant ] and [ ex : ps_incomparable ] ) .",
    "thus , @xmath1  imperfectly ordinally dominates @xmath0 . to obtain hybrid - admissibility of the pair ( @xmath0,@xmath1 ) , it remains to be shown that @xmath1  is weakly less varying than @xmath0 .",
    "[ thm : ps_wlv_rsd ] @xmath1  is weakly less varying than @xmath0 .",
    "proof [ outline ( formal proof in appendix [ app.subsec.ps_wlv_rsd ] ) ] consider an agent @xmath29 that swaps two objects in its report , e.g. , from @xmath206 to @xmath207 .",
    "first , we show that @xmath1  changes the allocation _ if and only if _",
    "neither @xmath30 nor @xmath31 are exhausted when @xmath29 finishes consuming objects that it strictly prefers to both .",
    "next , we show that @xmath0  changes the allocation _ if and only if _ there exists an ordering of the agents such that all objects that @xmath29 prefers strictly to @xmath30 and @xmath31 are allocated before @xmath29 gets to pick , but neither @xmath30 nor @xmath31 are allocated by then . finally , we show that the former condition ( for @xmath1 ) implies the latter condition ( for @xmath0 ) , using an inductive argument : the key idea is to show that if no such ordering of the agents exists for @xmath22 objects , then we can construct a case with @xmath208 objects that exhibits the same issue .",
    "[ cor : rsd_ps_hybrid_admissible ] the pair ( @xmath0,@xmath1 ) admits the construction of @xmath8-partially strategyproof hybrids that imperfectly ordinally dominate @xmath0 .      a mechanism designer may also want to trade off strategyproofness for improvements of the rank distribution",
    ". mechanisms that aim at some form of a good rank distribution are @xmath80  @xcite and boston mechanisms @xcite .",
    "it turns out , however , that in general neither @xmath80  nor the nave variant of the boston mechanism ( @xmath79 ) are suitable second components in combination with @xmath0 .",
    "@xmath80  strictly imperfectly rank dominates @xmath0 , since @xmath80  is rank efficient , i.e. , never rank dominated , but @xmath0  is not .",
    "however , in section 10.5 of @xcite , we show that no rank efficient mechanism can be weakly invariant .",
    "in addition , for some choices of rank valuation , @xmath80  is also not weakly less varying than @xmath0 , as example [ ex : rv_not_wlv ] in appendix [ app.subsec.examples_from_limits ] illustrates .",
    "thus , hybrids of @xmath0  and @xmath80  can not be constructed by means of theorem [ thm : construction ] .",
    "is weakly invariant may be dropped from theorem [ thm : construction ] if instead a relative upper bound on the maximum utility of any agent is imposed",
    ". then @xmath80  may be weakly less varying than @xmath0  for _ some _ rank valuations .",
    "finding such rank valuations is subject to future research . ]",
    "we consider the boston mechanism with single uniform tie - breaking @xcite . the `` nave '' variant of the boston mechanism ( @xmath79 ) lets agents apply to their respective next best choices in consecutive rounds , even if the objects to which they apply have no more remaining capacity .",
    "@xmath79  imperfectly rank dominates @xmath0  ( theorem 2 in @xcite ) .",
    "@xmath79  is also weakly invariant by proposition 3 in @xcite .",
    "however , it is _ not _ weakly less varying than @xmath0 , as example [ ex : nbm_not_wlv ] in appendix [ app.subsec.examples_from_limits ] shows .",
    "thus , the pair ( @xmath0,@xmath79 ) is not hybrid - admissible and can not be used to achieve meaningful trade - offs between strategyproofness and rank efficiency .      in @xcite , we have introduced an adaptive variant of the boston mechanism ( @xmath2 ) , which is sensitive to the fact that agents can not benefit from applying at objects that are already exhausted . instead ,",
    "in each round , agents who have not been allocated so far , apply to their most preferred object with remaining capacity .",
    "we now show that hybrids of @xmath0  and @xmath2  can be used to trade off strategyproofness and rank efficiency , at least in the limit .",
    "@xmath2  is weakly invariant ( by proposition 3 in @xcite ) . by theorem 4 in @xcite ,",
    "@xmath2  imperfectly rank dominates @xmath0  in the limit ( as @xmath209 ) .  over @xmath2",
    "is not a real concern , as the share of profiles for which this occurs is negligible , even in small settings and converges to zero at an exponential rate .",
    "] by proposition [ prop : hybrids_imperfect_dominance ] , non - trivial hybrids of @xmath2  and @xmath0  will also imperfectly rank dominate @xmath0  in the limit . to show that the pair @xmath210 is hybrid - admissible",
    ", it remains to be shown that @xmath2  is weakly less varying than @xmath0 .",
    "[ thm : abm_wlv_rsd ] @xmath2  is weakly less varying than @xmath0 .",
    "proof [ outline ( formal proof in appendix [ app.subsec.thm_abm_wlv_rsd ] ) ] both @xmath0  and @xmath2  are implemented by randomizing over orderings of agents @xmath211 .",
    "suppose @xmath29 manipulates by swapping @xmath30 and @xmath31 .",
    "if @xmath2  changes the allocation , then there exists an ordering @xmath211 such that all objects that @xmath29 prefers strictly to @xmath30 and @xmath31 are allocated in previous rounds to other agents .",
    "then @xmath29 gets to `` pick '' between @xmath30 and @xmath31 in some round . starting with @xmath211",
    ", we construct an ordering @xmath212 such that if the ordering @xmath212 is drawn under @xmath0 , @xmath29 gets to pick between @xmath30 and @xmath31 , but no object it strictly prefers to @xmath30 or @xmath31 .",
    "this is sufficient for @xmath0  to also change the allocation under the swap of @xmath30 and @xmath31 by @xmath29 .",
    "[ cor : rsd_abm_hybrid_admissible ] the pair ( @xmath0,@xmath2 ) admits the construction of @xmath8-partially strategyproof hybrids that imperfectly rank dominate @xmath0  in the limit .",
    "in section [ sec.inst ] , we have shown that we can construct interesting hybrids by combining @xmath0  with @xmath1  or @xmath2 , which lets a mechanism designer trade off strategyproofness for better efficiency . to illustrate the magnitude of these trade - offs , we now compute @xmath16 for a variety of settings @xmath18 and acceptable degrees of strategyproofness @xmath9 $ ] .    figure [ fig : beta_max_ps_abm ] shows plots of the maximal mixing factor @xmath16 for settings with unit capacity and different numbers of objects and agents .",
    "observe that as the acceptable degree of strategyproofness for the hybrid increases , the allowable share of @xmath4 decreases and becomes @xmath213 if full strategyproofness is required .",
    "we also see that the relationship between @xmath10 and @xmath16 is not linear .",
    "in particular , the first efficiency improvements ( from @xmath214 to @xmath215 ) are the most `` costly '' in terms of a reduction of the degree of strategyproofness @xmath10 .",
    "on the other hand , for mild strategyproofness requirements , the share of @xmath1  or @xmath2  in the hybrid can be significant , e.g. , more than @xmath216 of @xmath1  or @xmath217 of @xmath2  for @xmath218 and @xmath219 .",
    "figure [ fig : beta_max_ps_more_capacity ] shows plots of @xmath16 for hybrids of @xmath0  and @xmath1 , where we hold the number of object types constant at @xmath220 , but vary the capacity of the objects @xmath221 .",
    "we observe that for larger capacities , the hybrids can contain a larger share of @xmath1 .",
    "makes truthful reporting a dominant strategy for that agent if the capacities of the objects are sufficiently high .",
    "we omitted the curve for @xmath222 in figure [ fig : beta_max_ps_more_capacity ] to better illustrate the effect .",
    "it would lie close to the curve for @xmath223 , i.e. , incentives get worse ( for @xmath224 ) before the convergence takes effect . ]",
    "it is conceivable that the degree of strategyproofness of @xmath1  keeps increasing and converges to 1 in the limit as capacity increases , an interesting question for future research .     by acceptable degree of strategyproofness",
    "@xmath9 $ ] , for components @xmath225 , and settings with @xmath226 . ]",
    "[ fig : beta_max_ps_abm ]    r     by acceptable degree of strategyproofness @xmath9 $ ] , for components @xmath227 , and settings with @xmath228 . ]",
    "[ fig : beta_max_ps_more_capacity ]",
    "in this paper , we have presented a novel approach to trading off strategyproofness and efficiency for one - sided matching mechanisms .",
    "we have introduced hybrid mechanisms , which are convex combinations of two component mechanisms , as a method to perform this trade - off .",
    "typically , the first component @xmath3 introduces better incentives while the second component @xmath4 introduces better efficiency .    for our first result ,",
    "we have employed a novel concept for relaxing strategyproofness in a parametric way , i.e. , @xmath8-partial strategyproofness . under the axiom of weak invariance and the technical assumption that @xmath4 be weakly less varying than @xmath3",
    ", we have shown that non - trivial hybrid mechanisms can be constructed that are @xmath8-partially strategyproof for any desired degree of strategyproofness .    for our second result",
    ", we have shown that hybrid mechanisms in fact trade off strategyproofness for efficiency : as the mixing factor @xmath5 ( i.e. , the share of @xmath4 ) increases , efficiency of the hybrid increases , but the degree of strategyproofness decreases , while fairness properties that both mechanisms satisfy ( anonymity or symmetry ) are preserved . from the mechanism designer s perspective",
    "this means the following : if @xmath3 is a strategyproof mechanism , @xmath4 is a non - strategyproof alternative that is more appealing due to its efficiency properties , and a certain degree of strategyproofness ( smaller than @xmath229 ) is acceptable , then a hybrid can be used to maximize efficiency improvements subject to the @xmath8-partial strategyproofness constraint . as we have shown in section [ sec.comp ] , the mechanism designer s problem of determining a maximal mixing factor can be solved algorithmically .",
    "finally , we have presented instantiations of hybrid mechanisms with @xmath204 as the strategyproof component .",
    "using @xmath230 yields better efficiency in an ( imperfect ) ordinal dominance sense , and using @xmath231 , an adaptive variant of the boston mechanism , yields better efficiency in an ( imperfect ) rank dominance sense in the limit .",
    "numerically , we have illustrated the connection between the degree of strategyproofness @xmath10 and the maximal mixing factor @xmath16 , and we have shown that the latter can be significant for mild restrictions on the degree of strategyproofness .",
    "this paper contributes to an important area of research concerned with trade - offs between strategyproofness and efficiency in one - sided matching .",
    "hybrid mechanisms break new ground , because the method is constructive , it enables a parametric trade - off , and the mechanism designer s problem of determining a suitable mechanism is computable .",
    "our hybrids shed light on the frontiers of such trade - offs and can serve as benchmark mechanisms for future research .",
    "xx    \\1998 .",
    "`` random serial dictatorship and the core from random endowments in house allocation problems . '' _ econometrica _ , 66(3 ) :  689702 .",
    "`` school choice : a mechanism design approach . ''",
    "_ american economic review _ , 93(3 ) :  729747",
    ".    \\2005 .",
    "`` the new york city high school match . ''",
    "_ american economic review _ , 95(2 ) :  364367 .",
    "`` strategyproofness in the large as a desideratum for market design . '' _ in proceedings of the 13th acm conference on electronic commerce ( ec)_.    2013_a_. `` on the tradeoff between economic efficiency and strategy proofness in randomized social choice . '' in _ proceedings of the 12th international conference on autonomous agents and multi - agent systems ( aamas)_.    2013_b_. `` the computational complexity of random serial dictatorship . ''",
    "_ economics letters _ , 121(3 ) :  341  345 .",
    "`` random serial dictatorship : the one and only . ''",
    "`` a new solution to the random assignment problem . '' _ journal of economic theory _ , 100(2 ) :  295328 .",
    "`` the combinatorial assignment problem : approximate competitive equilibrium from equal incomes . '' _ journal of political economy _ , 119(6 ) :  10611103 .    \\2012 . `` matching `` versus '' mechanism design . '' _ acm sigecom exchanges _ , 11(2 ) :  415 .    \\2012 . `` the multi - unit assignment problem : theory and evidence from course allocation at harvard . '' _ american economic review _ , 102(5 ) :  22372271 .",
    "`` designing random allocation mechanisms : theory and applications . ''",
    "_ american economic review _ , 103(2 ) :  585623 .",
    "2011_a_. `` on mechanisms eliciting ordinal preferences . '' working paper , mit .",
    "2011_b_. `` a quantitative approach to incentives : application to voting rules . '' working paper , mit .",
    "`` payment rules through discriminant - based classifiers . '' _ in proceedings of the 13th acm conference on electronic commerce ( ec)_.    \\2006 . `` efficient priority rules . '' _ games and economic behavior _ , 55(2 ) :  372  384 .",
    "mini special issue : electronic market design .",
    "`` consistent house allocation . ''",
    "_ economic theory _ , 30(3 )",
    ":  561574 .    \\2013",
    ". `` strategy - proof stochastic assignment . ''",
    "_ journal of economic theory_. forthcoming .",
    "`` games of school choice under the boston mechanism . ''",
    "_ journal of public economics _ , 90(1 - 2 ) :  215237 .",
    "`` a rank - based refinement of ordinal efficiency and a new ( but familiar ) class of ordinal assignment mechanisms . ''",
    "working paper .",
    "`` two axiomatic approaches to the probabilistic serial mechanism . ''",
    "_ theoretical economics_. forthcoming .",
    "`` strategy - proof , efficient , and nonbossy quota allocations . '' _ social choice and welfare _ , 33(3 ) :  505515 .",
    "`` the efficient allocation of individuals to positions . '' _ the journal of political economy _ , 87(2 ) :  293314 .",
    "`` a solution to the random assignment problem on the full preference domain . '' _ journal of economic theory _ , 131(1 ) :  231250 .    \\2012 . `` an equilibrium analysis of the probabilistic serial mechanism . '' working paper , zeyin university , istanbul , .",
    "`` incentives in the probabilistic serial mechanism . ''",
    "_ journal of economic theory _ , 145(1 ) :  106123 .",
    "`` ordinal efficiency , fairness , and incentives in large markets . '' workin paper .",
    "2014_a_. `` adaptive boston mechanisms . ''",
    "2014_b_. `` an axiomatic approach to characterizing and relaxing strategyproofness of one - sided matching mechanisms . ''",
    "working paper .",
    "`` school choice : the case for the boston mechanism . '' in _ proceedings of the 1st conference on auctions , market mechanisms and their applications ( amma)_. boston , ma .",
    "`` matching and market design . '' in in _ the new palgrave dictionary of economics_. palgrace macmillan .    \\2000 .",
    "`` strategyproof assignment by hierarchical exchange . '' _ econometrica _ , 68(6 ) :  14031433 .",
    "`` school admissions reform in chicago and england : comparing mechanisms by their vulnerability to manipulation . ''",
    "_ american economic review _ , 103(1 ) :  80106",
    ".    \\2014 .",
    "`` incentive compatible allocation and exchange of discrete resources . ''",
    "working paper .",
    "`` on a conjecture by gale about one - sided matching problems . ''",
    "_ journal of economic theory _ , 52(1 ) :  123135 .",
    "first , we review the axioms introduced in @xcite",
    ". then we restate the three main theorems , a characterization of strategyproofness , a characterization of @xmath8-partial strategyproofness , and the maximality result for the @xmath8-domain restriction .",
    "the _ neighborhood _ @xmath84 of a type @xmath70 is the set of types @xmath71 where the corresponding preference orders differ by just a swap of two adjacent objects .",
    "the _ upper contour set _ of an object @xmath30 with respect to some type @xmath70 is the set of objects that an agent of type @xmath70 strictly prefers to @xmath30 , and the _ lower contour set _ contains all the objects that the agent likes strictly less than @xmath30 .",
    "these are denoted by @xmath85 and @xmath232 , respectively .",
    "the axioms _ swap consistency _ , _ weak invariance _ , and _ lower invariance _ limit the way in which a mechanism can change the allocation if an agent swaps two adjacent objects in its reported preference ordering .    [ ax : sc ] a mechanism @xmath3 is _ swap consistent _ if for any agent @xmath86 , any type profile @xmath87 , and any type @xmath88 ( i.e. , in the neighborhood of @xmath51 ) with @xmath89 under @xmath51 and @xmath233 under @xmath91 , one of the following holds :    1 .",
    "@xmath29 s allocation is unaffected by the swap , i.e. , @xmath234 , or 2 .",
    "@xmath29 s allocation for @xmath235 strictly decreases and its allocation for @xmath236 strictly increases , i.e. , @xmath237    the intuition of swap consistency is that the mechanism should be _ responsive _ to the agent s preferences : an agent s chances of getting an object should increase if it is brought up in the preference order .",
    "the mechanism must also be _ direct _ by changing the allocation of the objects that are swapped , if any .",
    "[ ax : wi2 ] a mechanism @xmath3 is _ weakly invariant _ if for any agent @xmath86 , any type profile @xmath87 , and any type @xmath88 with @xmath89 under @xmath51 and @xmath90 under @xmath91 , @xmath29 s allocation for the upper contour set @xmath238 is unaffected by the swap , i.e. , for all @xmath92 @xmath93    intuitively , under weak invariance , an agent can not influence the allocation of one of its better choices by swapping two less preferred objects .",
    "weak invariance is essentially equivalent to truncation robustness ( see @xcite ) .",
    "many mechanisms from the literature satisfy weak invariance , such as the random serial dictatorship , probabilistic serial , the boston mechanism , and student - proposing deferred acceptance .",
    "[ ax : li ] a mechanism @xmath3 is _ lower invariant _",
    "if for any agent @xmath86 , any type profile @xmath87 , and any type @xmath88 with @xmath89 under @xmath51 and @xmath90 under @xmath91 , @xmath29 s allocation for the lower contour set @xmath239 is unaffected by the swap , i.e. , for all @xmath240 @xmath93    lower invariance complements weak invariance : it requires that an agent can not influence the allocation for _ less _ preferred objects by swapping two more preferred objects . in combination ,",
    "the three axioms characterize strategyproofness .",
    "a mechanism @xmath3 is strategyproof if and only if it is swap consistent , weakly invariant , and lower invariant .",
    "the requirement of swap consistency prevents manipulability in a first order - stochastic dominance sense and weak invariance is a popular form of truncation robustness , used by @xcite to characterize the probabilistic serial mechanism .",
    "while lower invariance is the missing piece to guarantee strategyproofness , it does not have a strong , intuitive justification as an axiom .",
    "dropping the lower invariance requirement leads to the class of @xmath8-partially strategyproof mechanisms .    given a setting @xmath18 ,",
    "a mechanism @xmath3 is @xmath8-partially strategyproof for some @xmath13 $ ] if and only if @xmath3 is swap consistent and weakly invariant .",
    "finally , the @xmath8-domain restriction can be shown to be maximal for the set of swap consistent , weakly invariant mechanisms .    given a setting @xmath18 , a bound @xmath81 , and a utility function @xmath241 that violates @xmath8",
    ", there exists a mechanism @xmath242 such that    * @xmath242 is @xmath8-partially strategyproof , * @xmath242 is not @xmath243-partially strategyproof , i.e. , there exists a type @xmath244 and reports @xmath245 such that @xmath246",
    "_ for any setting @xmath18 , any hybrid - admissible pair @xmath11 , and any bound @xmath96 , there exists a positive mixing factor @xmath97 $ ] such that the hybrid @xmath15 is @xmath8-partially strategyproof in the setting @xmath18 .",
    "_    consider a strategyproof mechanism @xmath3 and a weakly less varying , weakly invariant mechanism @xmath4 , a fixed setting @xmath18 , and a fixed bound @xmath103 .",
    "we must find a mixing factor @xmath97 $ ] such that no agent with a utility satisfying @xmath8  will find a beneficial manipulation to the hybrid @xmath15 .",
    "let @xmath87 be a type profile , @xmath60 a utility function for agent @xmath29 , and let @xmath247 be a potential misreport .",
    "suppose that @xmath4 changes the allocation for @xmath29 ( otherwise the incentive constraint for the hybrid mechanism is trivially satisfied for this type profile and misreport ) .",
    "by lemma [ lem : util_change_structure ] , there exists a rank @xmath248 such that the gain in expected utility from reporting @xmath91 instead of @xmath51 under @xmath4 is upper - bounded by @xmath249 and the utility gain from reporting @xmath51 truthfully instead of the misreport @xmath91 under @xmath3 is lower - bounded by @xmath250 where @xmath251 depends only on the setting and the mechanism @xmath3 .",
    "thus , the utility gain from reporting @xmath51 truthfully instead of the misreport @xmath91 under the hybrid @xmath15 is lower bounded by @xmath252 if @xmath35 satisfies @xmath8 , we can lower bound @xmath253 by @xmath254 and get @xmath255 since @xmath256 , this is positive if and only if @xmath257 this upper bound for @xmath5 is strictly positive and independent of the specific utility function @xmath35 , the type profile @xmath258 , and the misreport @xmath91 . therefore , @xmath15 is @xmath8-partially strategyproof if @xmath5 is chosen to satisfy ( [ eq : beta_bound_for_construction ] ) .",
    "[ lem : util_change_structure ] consider a setting @xmath18 , a strategyproof mechanism @xmath3 , a weakly less varying , weakly invariant mechanism @xmath4 , an agent @xmath57 , a type profile @xmath73 , a misreport @xmath247 , and a utility function @xmath60 .",
    "if @xmath259 , then there exists @xmath248 such that the gain in expected utility from reporting @xmath91 instead of @xmath51 under @xmath4 is upper - bounded by @xmath260 and the gain in expected utility from reporting @xmath51 truthfully instead of @xmath91 under @xmath3 is lower - bounded by @xmath261 where @xmath262 depends only on the setting and the mechanism @xmath3 .",
    "a transition can be interpreted as a sequence of swaps of adjacent objects that transform one type into another if applied in order .",
    "suppose , @xmath268 then the _ canonical transition _ is the transition that results from starting at @xmath70 and swapping @xmath269 ( which may not be in first position for @xmath70 ) up until it is in first position",
    ". then do the same for @xmath270 , until it is in second position , and so on , until @xmath71 is obtained .",
    "suppose @xmath51 corresponds to the preference ordering @xmath271 and let @xmath272 be the best choice object ( under @xmath51 ) for which the allocation under @xmath3 changes , i.e. , @xmath273 consider the canonical transition from @xmath91 to @xmath51 .",
    "this will bring the objects @xmath274 into position ( as they are under @xmath51 ) first . by theorem 1 in @xcite and because @xmath3 is strategyproof , the allocation for each of these objects can only weakly increase or weakly decrease .",
    "however , by ( [ eq : no_change_trans ] ) their allocations remain unchanged .",
    "therefore , the allocation does not change for any of the swaps that bring the objects @xmath274 into position . using",
    "that @xmath4 is weakly less varying than @xmath3 , we can assume that @xmath275 without loss of generality",
    ".    by weak invariance of @xmath4 , the highest gain the agent could gain from reporting @xmath91 instead of @xmath51 arises if all probability for its last choice is converted to probability for the best choice for which the allocation can change at all , i.e. , @xmath272 .",
    "thus , the utility gain is bounded by @xmath276    let @xmath277 be the smallest positive amount by which the allocation of some object to some agent can change upon a change of report by that agent under @xmath3 . in the canonical transition from @xmath51 to @xmath91 , the object @xmath272 will only be swapped downwards , i.e. , its allocation can not increase in any step .",
    "but since we assumed that it changes , it must strictly decrease .",
    "this decrease has at least magnitude @xmath278 by definition .",
    "thus , when misreporting , the agent looses at least @xmath278 probability for @xmath272 in some swap . from theorem 1 in @xcite",
    "we know that the allocation for the other object involved in that swap must strictly increase by the same amount @xmath278 . since all other swaps reverse the order of objects from `` right '' ( as under @xmath51 ) to `` wrong '' ( as under @xmath91 ) ,",
    "the allocation can only get weakly worse for the agent .",
    "therefore , the gain from reporting @xmath51 truthfully instead of @xmath91 under @xmath3 is at least @xmath279 .    [ [ app.subsec.construction_tightness ] ] propositions [ prop : f_sp_tight ] and [ prop : g_wi_tight ] from section [ subsec.construction.existence ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    _ if @xmath3 is not strategyproof , there exists a mechanism @xmath4 that is weakly invariant and weakly less varying than @xmath3 , and a bound @xmath104 such that no non - trivial hybrid of the pair @xmath11 will be @xmath8-partially strategyproof .",
    "_    assume that @xmath3 is not strategyproof .",
    "then there exists @xmath280 and a utility @xmath60 such that @xmath281 choose as @xmath4 the constant mechanism that allocates equal shares of all objects to all agents , independent of their reported preferences .",
    "this @xmath4 is weakly invariant and weakly less varying than any mechanism .",
    "then for any mixing factor @xmath282 , the resulting hybrid mechanism will be also be manipulable for @xmath35 . in particular , let @xmath283 then @xmath35 satisfies @xmath8  for any @xmath284 .",
    "however , @xmath15 is manipulable by @xmath35 independent of @xmath5 .",
    "thus , we find can not a non - trivial mixing factor such that the hybrid is @xmath285-partially strategyproof .",
    "_ for any strategyproof @xmath3 and any @xmath4 that is weakly less varying than @xmath3 , but not weakly invariant in a setting @xmath18 , no non - trivial hybrid of the pair @xmath11 is @xmath8-partially strategyproof for any bound @xmath13 $ ] in the setting @xmath18 . _",
    "consider a situation in which @xmath4 violates weak invariance , i.e. , the setting @xmath18 , a type profile @xmath108 , a misreport @xmath88 , where @xmath286 and @xmath287 .",
    "since @xmath3 is strategyproof , @xmath288 ( by theorem 1 from @xcite ) , and thus for any @xmath94 , @xmath289 but then the hybrid is not weakly invariant and thus ( by theorem 2 from @xcite ) not @xmath8-partially strategyproof for any bound @xmath13 $ ] in the setting @xmath18 .",
    "if @xmath135 at @xmath111 , we have for all agents @xmath86 and objects @xmath290 @xmath291 thus , for any agent @xmath29 and any object @xmath25 we also have @xmath292 if @xmath94 and ( [ eq : od_xy ] ) is strict for some @xmath29 and @xmath25 , then so is ( [ eq : od_zy ] ) .",
    "this yields [ prop : hybrids_dominance.ordinal ] . for [ prop : hybrids_dominance.rank ] .",
    "observe that the rank distribution of @xmath293 is given by @xmath294 and weak and strict rank dominance follow by a similar argument as above .",
    "[ ex : ps_incomparable ] consider a setting @xmath300 .",
    "for the type profile @xmath301 the resulting allocations are @xmath302 since @xmath303 and @xmath304 , we have @xmath305 at @xmath111 ( and @xmath306 at @xmath111 ) .    [ [ app.subsec.proof_of_impdom ] ] proposition [ prop : hybrids_imperfect_dominance ] from section [ subsec.efficiency.impdom ] ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    from proposition [ prop : hybrids_dominance ] it follows that if @xmath113 weakly or strictly ordinally or rank dominates @xmath112 at @xmath111 , then so does @xmath153 for any @xmath94 .",
    "we only need to show that if @xmath307 , then @xmath308 , and likewise for rank dominance .",
    "denote by `` @xmath309 '' the fact that @xmath109 does not strictly dominate @xmath110 .",
    "let @xmath310 .",
    "for some allocations @xmath311 , if @xmath312 , then either @xmath313 , or there exists an agent @xmath29 and an object @xmath25 such that @xmath314 if @xmath313 , then @xmath315 , implying @xmath316 . otherwise , @xmath316 holds , because @xmath317 similarly , if @xmath318 , then either @xmath319 or there exists a rank @xmath125 such that @xmath320 @xmath321 follows , because either @xmath322 , or @xmath323 , and therefore @xmath324        to see [ prop : tradeoff.psp ] ) , let @xmath325 .",
    "then at least one of the positivity constraints in proposition 1 in @xcite must bind , i.e. , there exists an agent @xmath86 , a type profile @xmath326 , a misreport @xmath327 , and some @xmath328 such that @xmath329 and for some @xmath262 and any @xmath330 we have @xmath331 since @xmath3 is strategyproof , @xmath332 for any @xmath333 , and therefore @xmath334 . if we now consider the hybrid @xmath163 for a larger mixing factor , we get that ( [ eq : balanced_constraint2 ] ) is violated , i.e. , @xmath335 since @xmath336 .",
    "( [ eq : unbalanced_constraint2 ] ) implies that @xmath163 is not @xmath8-partially strategyproof , and [ prop : tradeoff.psp ] ) follows .",
    "since @xmath3 and @xmath4 are computable and all loops in algorithm [ alg : compute ] are finite , it terminates on any admissible input , i.e. , it is complete . to see correctness ,",
    "we show that for the resulting value of @xmath5 , the hybrid @xmath15 satisfies the positivity constraints ( [ eq : poly_constraint ] ) from proposition 2 in @xcite , and at least on of the constraints is tight .",
    "we have that @xmath337 since @xmath3 is strategyproof , we have @xmath338 . then , if @xmath339 , inequality ( [ eq : compute_beta_2 ] ) imposes no constraint on @xmath5 .",
    "otherwise , the algorithm decreases @xmath5 to an appropriate value such that the constraint is satisfied with equality . since @xmath3 is strategyproof , none of the previous constraints get violated when @xmath5 is decreased .",
    "thus , the final value of @xmath5 is no larger than @xmath16 .",
    "however , at least one constraint must be tight , i.e. , non - trivially satisfied with equality",
    ". therefore , the value of @xmath5 will be exactly @xmath16 , which proves correctness .",
    "suppose , @xmath20 agents compete for @xmath340 objects with capacities given by @xmath341 , and let @xmath342 .",
    "agent @xmath77 is considering the two type reports @xmath343 where the positions of @xmath109 and @xmath110 are reversed in the second report .",
    "the reports of the other agents are fixed and given by @xmath344 .",
    "further suppose that with reports @xmath345 , the objects where exhausted at times @xmath346 under @xmath1 .",
    "re - label the objects as @xmath347 in increasing order of the times at which they were exhausted .",
    "if two objects were exhausted at the same time , re - label them in arbitrary order .",
    "denote by @xmath348 and @xmath349 the times at which @xmath109 and @xmath110 were exhausted , respectively .    given these considerations , lemma [ lemma.psinvarequiv ]",
    "yields equivalent conditions under which @xmath1  changes the allocation , lemma [ lemma.rsdinvarequiv ] yields similar conditions under which @xmath0  changes the allocation , and lemma [ lemma.psinvarrsd ] shows that the former condition implies the latter .",
    "`` @xmath356 '' : :    choose @xmath125 such that @xmath357 is the last of the    @xmath358 to run out .",
    "suppose ,    @xmath359 .",
    "agent 1 is busy consuming shares of    other objects until time @xmath360 , regardless of the    reported order of @xmath109 and @xmath110 .",
    "after    @xmath360 agent 1 consumes shares of @xmath109 until    it is exhausted . because @xmath110 was already exhausted before    @xmath360 , agent 1 gets no shares of @xmath110 . under    report @xmath361",
    ", it would finish consuming other objects    at @xmath360 and find objects @xmath110 exhausted .",
    "hence , it would begin consuming shares of @xmath109 immediately ,    just as it did under report @xmath362 .",
    "thus , the order in    which @xmath109 and @xmath110 are reported does not matter    for the times at which it consumes objects @xmath109 and    @xmath110 .",
    "because @xmath363 and @xmath364 only    differ in the order of @xmath109 and @xmath110 , the    remaining objects are also consumed in the same order and at the same    times .",
    "hence , agent 1 s allocation does not change .",
    "+    the case for @xmath365 is analogous .    +    because @xmath1  is non - bossy @xcite , we know that    if the switch from @xmath363 to @xmath364 did not    change the allocation for agent 1 , it did not change the allocation at    all .",
    "`` @xmath366 '' : :    suppose the last of the objects @xmath358 to be    exhausted is @xmath357 , and    @xmath367 . then agent 1 gets no shares    of @xmath110 . if it switches its report to    @xmath361 , it will receive a non - trivial share of    @xmath110 , hence the allocation changes .",
    "+    now suppose the opposite , namely @xmath368 .",
    "agent    1 begins consumption of @xmath109 at time @xmath369    and then turns to @xmath110 at time @xmath348 .",
    "thus    agent 1 receives @xmath370 shares of    @xmath109 and @xmath371 shares of    @xmath110 .",
    "when it switches its report to    @xmath361 , it will consume shares of @xmath110    between @xmath369 and @xmath372 .",
    "we need to    show that @xmath373 .",
    "if    @xmath374 , this is clear , because    @xmath375 by assumption . in the following",
    "we    assume @xmath376 .",
    "+    let @xmath377 be the number of agents other than agent 1    consuming shares of @xmath110 at time @xmath378 .",
    "@xmath379 is integer - valued and increasing in    @xmath378 , and there must exist a @xmath380    such that @xmath381 .",
    "this means that    agent 1 is not the only agent consuming shares of @xmath110    before it is exhausted .",
    "otherwise , agent 1 would exhaust    @xmath110 alone , which implies that agent 1 received no shares    of @xmath109 , a contradiction .    +    if agent 1 reports @xmath364 instead , let    @xmath382 be the corresponding number of agents    consuming @xmath110 at times @xmath378 .",
    "we observe that    @xmath109 will be exhausted later , because agent 1 is no longer    consuming shares of it .",
    "this means that agents who prefer    @xmath109 over @xmath110 will arrive later at    @xmath110 .",
    "agents arriving at @xmath110 from other objects    than @xmath109 may also arrive later , because they face less    competition from the agents stuck at @xmath109 , etc .",
    "therefore    @xmath383 .",
    "+    under report @xmath362 from agent 1 , @xmath110 is    exhausted by @xmath349 , i.e. ,    @xmath384    and under report @xmath361 , @xmath110 is exhausted    by @xmath372 , i.e. ,    @xmath385    equating ( [ eqn.lemma.psinvarequiv.int1 ] ) and    ( [ eqn.lemma.psinvarequiv.int2 ] ) gives @xmath386 we know that @xmath357 is    exhausted before @xmath372 and hence    @xmath387    for @xmath388 $ ] , and @xmath389    for @xmath390 $ ] .",
    "this yields    @xmath391 or equivalently    @xmath392 .",
    "[ lemma.rsdinvarequiv ] in theorem [ thm : ps_wlv_rsd ] , @xmath393 if and only if there exists a sequence @xmath394 of @xmath395 agents such that if @xmath0  chose these agents first and in this order , they remove all objects @xmath396 ( and possibly more ) , but neither @xmath109 , nor @xmath110 .    in the @xmath0  mechanism ,",
    "a permutations of agents is chose amongst all possible permutations with uniform probability .",
    "the probability for agent 1 to get some object @xmath25 is @xmath397 = \\frac{|\\{\\pi \\mathrm{\\;permutation\\;of\\;}n : 1 \\mathrm{\\;gets\\ ; } j \\mathrm{\\;under\\;}\\pi\\}|}{|\\{\\pi \\mathrm{\\;permutation\\;of\\;}n\\}|},\\ ] ] where the denominator is @xmath398 , and each permutation under which agent 1 gets @xmath25 contributes @xmath399 to the total probability .      1 .",
    "[ lemma.rsdinvarequiv.proof.case1 ] agent 1 faces a choice set including some @xmath400 s .",
    "this makes no contribution to its chances of getting @xmath109 or @xmath110 .",
    "2 .   [ lemma.rsdinvarequiv.proof.case2 ] agent 1 faces a choice set consisting only of @xmath401 s .",
    "again , this makes no contribution to its chances of getting @xmath109 or @xmath110 .",
    "3 .   [ lemma.rsdinvarequiv.proof.case3 ] agent 1 faces only @xmath401 s and @xmath109 , but not @xmath110 .",
    "this case contributes @xmath399 to its chances of getting @xmath109 .",
    "this contribution is independent of the order in which it ranked @xmath109 and @xmath110 in its report .",
    "4 .   [ lemma.rsdinvarequiv.proof.case4 ] agent 1 faces only @xmath401 s and @xmath110 , but not @xmath109 .",
    "this case contributes @xmath399 to its chances of getting @xmath110 and the contribution is again independent of the ranking of @xmath109 and @xmath110 .",
    "5 .   [ lemma.rsdinvarequiv.proof.case5 ] agent 1 faces @xmath109 , @xmath110 and some @xmath401 s , but no @xmath400 s .",
    "this case contributes @xmath399 to either the probabilities for @xmath109 or @xmath110 , depending on the ranking .",
    "`` @xmath356 '' : :    if changing from @xmath363 to @xmath364 influences    the allocation , the allocation for agent 1 must have changed .",
    "this is    because @xmath0  is non - bossy ( by lemma    [ lemm.rsd_nonbossy ] ) .",
    "@xmath0  also is    strategyproof , hence by theorem 1 in @xcite the probabilities for    objects @xmath109 and @xmath110 must have changed . in all    but the last case , the chances do not depend on the order in which    @xmath109 and @xmath110 are reported .",
    "thus , at least one    permutation leads to case ( [ lemma.rsdinvarequiv.proof.case5 ] ) .",
    "this    means that the sequence of agents chosen prior to agent 1 removes all    @xmath400 s , but neither @xmath109 nor @xmath110 .",
    "`` @xmath366 '' : :    under report @xmath363 , agent 1 will receive @xmath109    any time case ( [ lemma.rsdinvarequiv.proof.case5 ] ) occurs , while under    @xmath364 it will receive @xmath110 . if a sequence    @xmath402 as defined in lemma    [ lemma.rsdinvarequiv ] exists , it is also the beginning of at least one    permutation . when this permutation is selected , case    ( [ lemma.rsdinvarequiv.proof.case5 ] ) occurs .",
    "switching from report    @xmath363 to @xmath364 thus strictly increases agent    1 s chances of getting @xmath110 .",
    "[ lemma.psinvarrsd ] in theorem [ thm : ps_wlv_rsd ] , [ lemma.psinvarequiv.lgoodsoutbeforexy ] . and [ lemma.psinvarequiv.asoutbeforexy ] .",
    "from lemma [ lemma.psinvarequiv ] imply the existence of a sequence as described in lemma [ lemma.rsdinvarequiv ] .",
    "selection of @xmath405 : :    by assumption @xmath357 was consumed strictly before    @xmath109 , hence @xmath406 .",
    "then at least    @xmath407 agents receive non - trivial shares of    @xmath357 .",
    "otherwise , if only @xmath408 agents    received shares of @xmath357 , they would get the entire    capacity and take time 1 to consume it , a contradiction . select    @xmath408 of these agents other than agent 1 as    @xmath405",
    ".    +    because all @xmath405 actually received    shares of @xmath357 under @xmath1 , they must    all prefer @xmath357 to all other objects except for possibly    @xmath409 . in other words , suppose that    @xmath409 were removed under    @xmath0  in previous turns , the selected agents    would remove @xmath357 completely if chosen next ( in arbitrary    order ) .",
    "selection of @xmath410 : :    suppose , @xmath411 have been selected .",
    "suppose further that @xmath412 agents ( plus possibly agent 1 )    receive non - trivial shares of @xmath413 under    @xmath1 .",
    "there are two cases :    +    case 1 ; ;      at least @xmath414 of the @xmath412 agents have not      been selected as any of the @xmath411      so far",
    ". then these agents are chosen as      @xmath415 .",
    "case 2 ; ;      only @xmath416 of the @xmath412 agents have      not been selected so far . the rest of the @xmath412 agents",
    "have been selected at @xmath417 other objects .",
    "let these      objects be @xmath418 with      @xmath419 for all      @xmath420 .",
    "at each of the objects      @xmath421 , @xmath422 agents are      selected .",
    "now there must be at least @xmath423      additional agents ( possibly including agent 1 ) consuming non - trivial      shares of the objects @xmath421 , otherwise at most      @xmath424      agents fully consume objects      @xmath425 .",
    "this will take      them until time 1 , a contradiction .",
    "+      there are two possible cases for these additional      @xmath426 agents ( excluding agent 1 ) .",
    "+      case 2.1 : :        all of them are available for selection . then they are selected        for the objects @xmath421 of which they consume        non - trivial shares , and the now free agents can be selected for        @xmath413 .      case 2.1 : :        some of these agents are selected at some other objects        @xmath427",
    ". then we        use the free agents as in case 2.1 , say @xmath428 .",
    "then        we still need @xmath429 agents for        @xmath413 .",
    "there must be at least        @xmath430        agents consuming non - trivial shares of the objects        @xmath431 .",
    "@xmath429 are not selected for any of these        objects .",
    "again there are two cases .",
    "+      we repeat this argument inductively until enough agents are found      who are still available and can replace agents such that the need at      object @xmath413 can be satisfied .",
    "this must happen ,      otherwise all agents selected so far as      @xmath411 , some      @xmath432 agents and possibly agent 1 fully      consume objects @xmath433 objects , again      a contradiction .",
    "the fact that all selected agents @xmath434 receive a non - trivial share in the objects @xmath413 implies that they each prefer @xmath413 to all other objects , except possibly @xmath435 .",
    "thus , the sequence @xmath436 has the properties needed for [ lemma.rsdinvarequiv ] .",
    "fix a distribution over orderings of the agents and let @xmath437 be the probability that ordering @xmath211 is chosen .",
    "suppose that @xmath0  is bossy , then there exists an agents @xmath438 , types @xmath439 , and @xmath440 such that @xmath441 , but @xmath442 .",
    "for the sake of brevity , we write @xmath70 and @xmath71 for @xmath51 and @xmath91 , respectively .",
    "let @xmath443 be the canonical transition from @xmath444 to @xmath445 .",
    "as in the proof of lemma [ lem : util_change_structure ] , the fact that the allocation is the same at the start and at the end of the transition implies that the allocation never changes during the transition , i.e. , @xmath446 for all @xmath447 .",
    "recall that under strategyproof mechanisms , the effect of swaps in the canonical transition is never undone by subsequent swaps and that swaps only effect the probabilities for adjacent objects ( see theorem 1 in @xcite ) .",
    "let @xmath443 be the canonical transition from @xmath444 to @xmath445 .",
    "as in the proof of lemma [ lem : util_change_structure ] , the fact that the allocation is the same at the start and at the end of the transition implies that the allocation never changes during the transition , i.e. , @xmath446 for all @xmath447 .",
    "recall that under strategyproof mechanisms , the effect of swaps in the canonical transition is never undone by subsequent swaps and that swaps only effect the probabilities for adjacent objects ( see theorem 1 in @xcite ) .",
    "but the allocation changed for agent @xmath448 , hence it must have changed for agent @xmath448 at some swap in the transition , say from @xmath449 to @xmath450 .",
    "let @xmath451 be the objects that were swapped in this transition .",
    "consider an ordering of the agents @xmath211 with @xmath452 .",
    "there are two cases .",
    "* agent @xmath29 gets the same object under @xmath449 as under @xmath453 .",
    "then the swap had no effect on the allocation of any other agent , i.e. , under @xmath211 the swap does not change the allocation of the other agents .",
    "* agent @xmath29 receives @xmath454 under @xmath449 , but @xmath455 under @xmath453",
    ". then the swap changes the allocation of the agent that received @xmath455 under @xmath449 .",
    "the magnitude of the change is @xmath456 .",
    "this agent can be @xmath448 by assumption .",
    "[ ex : rv_not_wlv ] consider a setting @xmath300 .",
    "for the type profile @xmath459 suppose the rank valuation is @xmath460 .",
    "then @xmath80  will allocate @xmath31 to agent 1 with certainty . to see this",
    "suppose that agent 1 gets @xmath30 instead .",
    "then some other agent @xmath29 received @xmath31 .",
    "if agent 1 and agent @xmath29 trade , the objective increases by @xmath461 .",
    "now suppose that agent 1 gets @xmath462",
    ". again some agent @xmath29 gets object @xmath30 . if agent 1 and agent @xmath29 trade , this improves the objective by @xmath463 .",
    "we have argued that agent 1 will get @xmath31 in any deterministic allocation chosen by @xmath80with rank valuation @xmath464 .",
    "then by definition , agent 1 must get @xmath31 with certainty .",
    "suppose now that agent 1 reports @xmath465 instead , i.e. , it swaps objects @xmath31 and @xmath462 in its report . then under any rank efficient allocation ( with respect to @xmath466 ) , agent 1 will receive object @xmath30 .",
    "this is because whenever agent 1 gets another object in some deterministic allocation , the objective improves if agent 1 trades with the agent who received @xmath30 ( independent of @xmath464 ) . since no rank efficient allocation will give agent 1 any other object than @xmath30 , swapping @xmath31 and @xmath462 in its report is a beneficial manipulation for agent 1 .",
    "this is independent of its actual utility , as long as the utility is consistent with @xmath363 .",
    "now consider the outcome of @xmath0 : it is easy to see that for any ordering of the agents , if agent 1 does not receive @xmath30 when it gets to choose , object @xmath462 will not be available .",
    "therefore , @xmath467 , i.e. , @xmath0  does not change the allocation .",
    "this means that @xmath80  with the specific choice of rank valuation @xmath464 is not weakly less varying than @xmath0 , and agent 1 in the given situation would want to manipulate any non - trivial hybrid of @xmath0  and @xmath80 .",
    "[ ex : nbm_not_wlv ] consider a setting where @xmath468 , and the type profile is @xmath469 under @xmath0 , the allocation for agent 1 is @xmath470 of objects @xmath30 through @xmath3 , respectively .",
    "swapping @xmath462 and @xmath471 in its report will not change the outcome for agent 1 under @xmath0 . under @xmath79  and truthful reporting",
    ", the allocation for agent 1 is the same as under @xmath0 .",
    "but if agent 1 changes its report by swapping @xmath462 and @xmath471 , its allocation under @xmath79  is @xmath472 of objects @xmath30 through @xmath3 , respectively , an allocation which it prefers in a first order - stochastic dominance sense .",
    "suppose the following manipulation by agent @xmath29 by a swap : @xmath473 by lemma [ lemma.rsdinvarequiv ] , @xmath0  changes the allocation ( @xmath474 ) if and only if there exists an ordering of the agents @xmath211 such that @xmath29 gets to pick between @xmath109 and @xmath110 in its turn , but all objects @xmath475 are exhausted by higher - ranking agents .",
    "we show that if @xmath2  changes the allocation , then such an ordering @xmath211 exists . thus , a change of allocation under @xmath2  implies a change of allocation under @xmath0 .",
    "suppose , the change of report by agent @xmath29 from @xmath51 to @xmath91 changes the outcome of @xmath2  for @xmath29 , i.e. , @xmath476 . then from the proof of swap consistency ( proposition 4 in @xcite ) we know that there exists an ordering of the agents @xmath212 such that in some round ( say @xmath477 ) , @xmath29 has not been allocated an object yet , all @xmath358 are exhausted , but neither @xmath109 nor @xmath110 are exhausted .",
    "let @xmath478 be the round in which @xmath448 is allocated its object , and let @xmath479 be the set of agents who receive their allocation in round @xmath10 ( given ordering @xmath212 ) .",
    "if @xmath448 is allocated object @xmath25 in round @xmath10 , @xmath448 has applied to @xmath25 in that round .",
    "thus , out of all the objects with capacity available at the beginning of round @xmath10 , @xmath448 must prefer @xmath25 .",
    "facing the same set of choices under @xmath0 , @xmath448 would also pick @xmath25 .",
    "consider an ordering @xmath211 that ranks an agent @xmath448 before another agent @xmath480 if @xmath481 and ranks them in arbitrary order if @xmath482 .",
    "additionally , let @xmath211 rank @xmath29 after all the agents in the set @xmath483 .",
    "if @xmath0  chooses @xmath211 as the ordering of the agents , then all agents in @xmath484 receive their first choice ( as under @xmath2 ) .",
    "next , all agents in @xmath485 face the choice sets out of which they most prefer the object they were allocated under @xmath2 .",
    "this continues until finally @xmath29 faces a choice set that includes none of the @xmath486 , but both @xmath109 and @xmath110 .",
    "hence , @xmath211 is the ordering we are looking for , and its existence concludes the proof ."
  ],
  "abstract_text": [
    "<S> we study one - sided matching mechanisms where agents have vnm utility functions and report ordinal preferences . </S>",
    "<S> strong impossibility results restrict the design space os strategyproof mechanisms in this domain . </S>",
    "<S> improving on efficiency beyond the ex - post efficiency of random serial dictatorship ( @xmath0 ) generally requires trade - offs . in this paper </S>",
    "<S> , we introduce _ hybrid mechanisms _ , which are convex combinations of existing mechanism , and we show that they are a powerful yet simple method for trading off strategyproofness and efficiency </S>",
    "<S> . we present conditions under which hybrid mechanisms remain partially strategyproof with respect to a given bound for the degree of strategyproofness . at the same time , these hybrids have better efficiency properties than the less efficient component . </S>",
    "<S> our approach can be successfully applied to create hybrids of @xmath0  and the probabilistic serial mechanism ( @xmath1 ) , as well as hybrids of @xmath0  and the adaptive boston mechanism ( @xmath2 ) . </S>",
    "<S> we provide numerical results demonstrating that the improvements can be significant .    working paper ! </S>"
  ]
}